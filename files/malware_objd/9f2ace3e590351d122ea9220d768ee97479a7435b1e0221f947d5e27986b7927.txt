
9f2ace3e590351d122ea9220d768ee97479a7435b1e0221f947d5e27986b7927.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428287,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42832f,0x0
  401016:	mov    DWORD PTR ds:0x4282ff,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42824f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42832f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d84
  40104b:	mov    ecx,DWORD PTR ds:0x4283b7
  401051:	sub    DWORD PTR ds:0x42826b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428297
  40105e:	and    DWORD PTR ds:0x428253,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281df
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282d7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42838f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282bb
  401089:	mov    edx,DWORD PTR ds:0x4283bb
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42831f,ebx
  40109a:	and    DWORD PTR ds:0x428267,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx-0x3f41034d]
  4010b6:	inc    ecx
  4010b7:	and    eax,0x181818aa
  4010bc:	sbb    BYTE PTR [esi-0x1ee7e7ee],bl
  4010c2:	sar    DWORD PTR [edx],0x27
  4010c5:	ror    BYTE PTR [esi-0x7064e10],0xe6
  4010cc:	cs or  dl,bh
  4010cf:	icebp  
  4010d0:	mov    cl,0x10
  4010d2:	adc    edi,ecx
  4010d4:	pop    ss
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    esp,ebx
  40111b:	out    0x2c,eax
  40111d:	push   ds
  40111e:	pop    es
  40111f:	(bad)  
  401120:	stc    
  401121:	adc    esp,DWORD PTR [ebp+0x24]
  401124:	mov    ds:0x4fbd4e88,eax
  401129:	dec    ebx
  40112a:	je     0x401159
  40112c:	xchg   esp,eax
  40112d:	or     edx,DWORD PTR [ebx]
  40112f:	inc    esp
  401130:	add    BYTE PTR [edi+0x4fdb4ec4],bl
  401136:	fistp  QWORD PTR [ecx-0x4fdda6f0]
  40113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40113d:	bswap  ebp
  40113f:	jae    0x401159
  401141:	in     eax,0x8c
  401143:	stos   BYTE PTR es:[edi],al
  401144:	mov    bh,0xa6
  401146:	mov    DWORD PTR [ecx-0x46],ebx
  401149:	outs   dx,DWORD PTR ds:[esi]
  40114a:	sub    eax,0xe1666379
  40114f:	aam    0x23
  401151:	mov    edx,0xddaab8f0
  401156:	xlat   BYTE PTR ds:[ebx]
  401157:	dec    esi
  401158:	outs   dx,DWORD PTR ds:[esi]
  401159:	push   edx
  40115a:	dec    ebp
  40115b:	mov    dh,0xe0
  40115d:	mov    esi,DWORD PTR [edx]
  40115f:	dec    esp
  401160:	inc    ecx
  401161:	retf   0x2c5f
  401164:	pop    edx
  401165:	popf   
  401166:	adc    eax,0xd2886477
  40116b:	mov    cl,0xa6
  40116d:	and    al,0x50
  40116f:	in     al,dx
  401170:	mov    ds:0xd33a4c70,eax
  401175:	retf   
  401176:	int3   
  401177:	aam    0x56
  401179:	pop    ss
  40117a:	(bad)  
  40117b:	push   ebx
  40117c:	sub    eax,0xf2416051
  401181:	inc    ecx
  401182:	and    eax,0xc78bb335
  401187:	data16 ja 0x4011f6
  40118a:	and    bl,BYTE PTR [eax+0x4a]
  40118d:	adc    eax,0x6ddcec2e
  401192:	dec    esp
  401193:	xchg   ebp,eax
  401194:	jecxz  0x401183
  401196:	enter  0x1d4c,0x9f
  40119a:	push   cs
  40119b:	hlt    
  40119c:	xor    edx,DWORD PTR [ebx+0x1a]
  40119f:	fadd   st(4),st
  4011a1:	sbb    al,0x2c
  4011a3:	int3   
  4011a4:	sub    bl,al
  4011a6:	and    al,0x24
  4011a8:	cdq    
  4011a9:	imul   ebx,ecx,0x2b
  4011ac:	pop    ss
  4011ad:	popf   
  4011ae:	into   
  4011af:	mov    esi,0xa76075c7
  4011b4:	cmp    DWORD PTR [ebp+0x2a],ebp
  4011b7:	adc    dh,al
  4011b9:	lahf   
  4011ba:	lea    esi,[ecx]
  4011bc:	test   al,0x2f
  4011be:	push   ebp
  4011bf:	or     al,BYTE PTR [ebx]
  4011c1:	lds    ebp,FWORD PTR [ecx]
  4011c3:	inc    esi
  4011c4:	cld    
  4011c5:	loope  0x4011db
  4011c7:	push   ds
  4011c8:	adc    DWORD PTR [esi-0x265352ed],0xcd73e6cb
  4011d2:	scas   al,BYTE PTR es:[edi]
  4011d3:	ror    eax,1
  4011d5:	js     0x401177
  4011d7:	stos   BYTE PTR es:[edi],al
  4011d8:	dec    esp
  4011d9:	xor    DWORD PTR [edi-0x45],esi
  4011dc:	jge    0x40122a
  4011de:	call   0x7730dadb
  4011e3:	pop    ss
  4011e4:	add    al,0x7f
  4011e6:	pop    ss
  4011e7:	js     0x401250
  4011e9:	lods   eax,DWORD PTR ds:[esi]
  4011ea:	adc    esi,DWORD PTR [edx]
  4011ec:	inc    ebx
  4011ed:	inc    ebx
  4011ee:	sahf   
  4011ef:	mov    edx,eax
  4011f1:	or     al,0xb7
  4011f3:	xchg   ebx,eax
  4011f4:	retf   0x8ccb
  4011f7:	push   eax
  4011f8:	addr16 jp 0x4011ce
  4011fb:	stc    
  4011fc:	jl     0x401232
  4011fe:	loopne 0x40124d
  401200:	mov    esp,0x92874370
  401205:	pusha  
  401206:	stos   BYTE PTR es:[edi],al
  401207:	fsubr  DWORD PTR [ebp+0x10]
  40120a:	aam    0x1d
  40120c:	jmp    0x401213
  40120e:	add    eax,0xbcac15bb
  401213:	xor    ebx,DWORD PTR [esp+edx*2+0x572ca0c4]
  40121a:	cmp    DWORD PTR [edx-0x39],edx
  40121d:	mov    bh,0xe3
  40121f:	xchg   ebx,eax
  401220:	cbw    
  401222:	clc    
  401223:	add    eax,DWORD PTR [ebx+0x2181a350]
  401229:	fnclex 
  40122b:	dec    ebp
  40122c:	dec    ebx
  40122d:	push   es
  40122e:	loopne 0x401278
  401230:	mov    ecx,0xf9e0bdd2
  401235:	pop    edx
  401236:	pop    ss
  401237:	popa   
  401238:	jle    0x40125b
  40123a:	pop    ss
  40123b:	fisubr DWORD PTR [ebx-0x7d5d1cba]
  401241:	mov    ss,WORD PTR [edx-0xd]
  401244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401245:	mov    esi,esi
  401247:	pop    esp
  401248:	and    eax,0x818a8a0c
  40124d:	dec    edx
  40124e:	push   0x5b18603d
  401253:	sbb    eax,esp
  401255:	jmp    0x4012a2
  401257:	jp     0x401225
  401259:	sub    dl,cl
  40125b:	mov    ebp,0x110708fb
  401260:	mov    edx,0xb1900640
  401265:	mov    dl,0xc
  401267:	pusha  
  401268:	xor    al,0xc2
  40126a:	push   esp
  40126b:	jns    0x40120f
  40126d:	fadd   QWORD PTR [ebp+0x57]
  401270:	xchg   esi,eax
  401271:	sbb    cl,BYTE PTR [ecx]
  401273:	mov    ds:0xc88fb680,al
  401278:	and    ebx,DWORD PTR [ecx]
  40127a:	xchg   esp,eax
  40127b:	rcl    BYTE PTR [edx+0x65],cl
  40127e:	repz cld 
  401280:	cmp    BYTE PTR [ebp+edi*1-0x38],dh
  401284:	loop   0x401272
  401286:	sar    DWORD PTR [eax],0x74
  401289:	jnp    0x401233
  40128b:	pop    esp
  40128c:	mov    es,WORD PTR [edi-0x14]
  40128f:	mov    ebx,0xd315b591
  401294:	rcr    ebp,cl
  401296:	xchg   ebx,eax
  401297:	icebp  
  401298:	xchg   edi,eax
  401299:	fidivr DWORD PTR [ecx]
  40129b:	test   eax,0x1d7b7372
  4012a0:	mov    al,0xad
  4012a2:	test   eax,0x14914b9c
  4012a7:	and    edi,DWORD PTR [esi+0x70]
  4012aa:	or     bl,BYTE PTR [edx]
  4012ac:	xor    eax,0x7eb5aabb
  4012b1:	xchg   ebx,eax
  4012b3:	adc    BYTE PTR [bx+si-0x78],0x3d
  4012b8:	outs   dx,DWORD PTR ds:[esi]
  4012b9:	mov    edx,0x994b379c
  4012be:	push   ss
  4012bf:	pop    es
  4012c0:	sbb    al,0x2a
  4012c2:	or     ecx,DWORD PTR [ebp+esi*1-0x44e010ac]
  4012c9:	enter  0xc4cd,0x22
  4012cd:	and    ch,ah
  4012cf:	pop    ds
  4012d0:	imul   ebx,DWORD PTR [ebx+0x5da8749b],0xdf57beb6
  4012da:	pusha  
  4012db:	imul   edx,DWORD PTR [edx+0x606b7565],0xffffff87
  4012e2:	jno    0x4012f8
  4012e4:	mov    esp,0x8fe4948
  4012e9:	iret   
  4012ea:	dec    esi
  4012eb:	sub    cl,BYTE PTR [ebx]
  4012ed:	and    edi,ebp
  4012ef:	sub    ebp,esi
  4012f1:	or     BYTE PTR [ebx+0x76],cl
  4012f4:	xchg   ebx,eax
  4012f5:	ss sub al,0x13
  4012f8:	or     edx,DWORD PTR [ebx+0x74c9c535]
  4012fe:	pop    ebp
  4012ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401300:	and    eax,0x6362e8c7
  401305:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401307:	jae    0x4012ae
  401309:	add    eax,0xc9f770f1
  40130e:	ds es mov edi,0x2ce7db9b
  401315:	inc    eax
  401316:	push   edx
  401317:	adc    BYTE PTR [edx],dh
  401319:	mov    ebp,0xc37e9439
  40131e:	in     eax,0x99
  401320:	mov    ds:0xb48c53b8,al
  401325:	push   ecx
  401326:	outs   dx,DWORD PTR ds:[esi]
  401327:	enter  0x7bfb,0x74
  40132b:	adc    eax,0x4e3f5d8a
  401330:	push   edi
  401331:	inc    esp
  401332:	adc    dh,dh
  401334:	lea    esi,[edx+0x4d]
  401337:	cmp    DWORD PTR [edx-0x9f148cb],ecx
  40133d:	push   ebp
  40133e:	and    BYTE PTR [edi-0x69170b3f],ah
  401344:	mov    ?,WORD PTR [ecx]
  401346:	scas   al,BYTE PTR es:[edi]
  401347:	loop   0x4012fc
  401349:	ss sbb cl,dl
  40134c:	xchg   BYTE PTR [edi+0x7a656be3],cl
  401352:	mov    dh,0xad
  401354:	pop    ss
  401355:	cmp    eax,0xa7f29bba
  40135a:	bound  esi,QWORD PTR [esi+0x70c69b3e]
  401360:	test   DWORD PTR [edx+eiz*4],ebx
  401363:	adc    esp,DWORD PTR [eax-0x63]
  401366:	dec    edx
  401367:	pop    ebp
  401368:	xchg   ebp,eax
  401369:	sbb    BYTE PTR [ecx+0x1f54dc6],0x1e
  401370:	cld    
  401371:	push   ss
  401372:	sub    BYTE PTR [ebx-0x3b],al
  401375:	jo     0x4013ad
  401377:	cwde   
  401378:	push   ss
  401379:	inc    edx
  40137a:	and    BYTE PTR [ebx-0x5c40b60b],bh
  401380:	scas   al,BYTE PTR es:[edi]
  401381:	imul   ebp,ebx,0x37a9e7bf
  401387:	scas   al,BYTE PTR es:[edi]
  401388:	jns    0x4013fd
  40138a:	ds jge 0x40132c
  40138d:	test   BYTE PTR [eax+0x1c],0xe2
  401391:	lahf   
  401392:	repz (bad) 
  401394:	mov    ebp,0xb01fd7df
  401399:	in     eax,0x60
  40139b:	sub    eax,0xc4a4e0e5
  4013a0:	or     eax,0xcddc094c
  4013a5:	mov    edx,0x469d0f05
  4013aa:	pop    ss
  4013ab:	or     bl,BYTE PTR [ecx-0x7281a15c]
  4013b1:	add    ecx,DWORD PTR [ecx]
  4013b3:	ins    BYTE PTR es:[edi],dx
  4013b4:	xor    eax,0x2f6faf6d
  4013b9:	imul   ebx,DWORD PTR [esi+0x50],0x26626757
  4013c0:	daa    
  4013c1:	mov    DWORD PTR [edi+0x6628e40c],edi
  4013c7:	popa   
  4013c8:	test   edi,0xf1e9ca1d
  4013ce:	imul   ebx,DWORD PTR [ebp+0xe],0x5d
  4013d2:	stos   BYTE PTR es:[edi],al
  4013d3:	div    ecx
  4013d5:	mov    ebp,0x2ee8e3b4
  4013da:	test   al,0xdb
  4013dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013dd:	and    dh,al
  4013df:	or     ah,BYTE PTR [ecx+0x3c]
  4013e2:	xor    ah,dh
  4013e4:	pusha  
  4013e5:	pop    ecx
  4013e6:	xchg   esi,eax
  4013e7:	push   0x7264e1fd
  4013ec:	and    ch,BYTE PTR [ebx+0x2a]
  4013ef:	add    dh,BYTE PTR ds:0xdc11174d
  4013f5:	mov    ecx,0x98bd65bb
  4013fa:	int3   
  4013fb:	out    0x4b,eax
  4013fd:	gs ja  0x401471
  401400:	pushf  
  401401:	dec    esp
  401402:	xchg   edx,eax
  401403:	jl     0x40140f
  401405:	(bad)  
  401406:	mov    ds:0xcfa81008,eax
  40140b:	pop    DWORD PTR [edi+edi*8+0x651efb37]
  401412:	outs   dx,BYTE PTR ds:[esi]
  401413:	hlt    
  401414:	mov    cl,0x27
  401416:	mov    edx,ss
  401418:	ror    BYTE PTR [esi+eax*1-0x67b26871],0xc2
  401420:	xchg   edx,eax
  401421:	ret    
  401422:	sub    al,0x38
  401424:	mov    ecx,0xd5b18fff
  401429:	mov    ebx,0xb81a1b3d
  40142e:	(bad)  
  401430:	ret    
  401431:	stos   DWORD PTR es:[edi],eax
  401432:	fisub  WORD PTR [ecx-0x57]
  401435:	ficomp WORD PTR [esi+0x4dd045bb]
  40143b:	push   0xffffffd7
  40143d:	test   BYTE PTR [ebp-0x3ebd6aee],bl
  401443:	test   DWORD PTR [esi-0x57],ebp
  401446:	test   DWORD PTR [eax+0x6a],edi
  401449:	xchg   ebx,eax
  40144a:	xchg   esp,eax
  40144b:	int3   
  40144c:	arpl   WORD PTR [ecx+0x5415c825],bx
  401452:	test   BYTE PTR [edx+0x498ff225],cl
  401458:	ss or  al,0x11
  40145b:	or     ah,BYTE PTR [ecx+edx*1+0x7540bf00]
  401462:	mov    eax,0x96017626
  401467:	scas   eax,DWORD PTR es:[edi]
  401468:	mov    esi,0x907628e3
  40146d:	or     DWORD PTR [edx-0xaf56028],esp
  401473:	or     BYTE PTR [edx-0x5ef6f40a],dh
  401479:	ins    DWORD PTR es:[edi],dx
  40147a:	push   esp
  40147b:	lods   al,BYTE PTR ds:[esi]
  40147c:	xchg   DWORD PTR [ebx+0x73719dfc],edx
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42837f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282bb
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x42830b,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42823b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428263,0x0
  4014da:	mov    DWORD PTR ds:0x42823f,ecx
  4014e0:	mov    DWORD PTR ds:0x428303,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42817b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428263,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d88
  40151c:	mov    edx,DWORD PTR ds:0x4282db
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428353
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x4281af
  401537:	mov    edi,DWORD PTR ds:0x428357
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x3e25d590]
  401569:	mov    al,0x9e
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x39181812],bl
  401573:	push   esi
  401574:	mov    al,0x31
  401576:	jmp    0x6c81:0x961c557c
  40157d:	cmp    bl,BYTE PTR [esi-0x6b]
  401580:	pop    edx
  401581:	stos   BYTE PTR es:[edi],al
  401582:	ds xor bh,dl
  401585:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401587:	adc    eax,0x62a2dd2c
  40158c:	call   edi
  40158e:	push   ds
  40158f:	scas   eax,DWORD PTR es:[di]
  401591:	inc    ecx
  401592:	pop    esi
  401593:	stos   DWORD PTR es:[edi],eax
  401594:	fisttp DWORD PTR [ecx-0x13ab4fe9]
  40159a:	or     al,0x89
  40159c:	inc    ebp
  40159d:	pop    es
  40159e:	retf   
  40159f:	aaa    
  4015a0:	cs pop esp
  4015a2:	fidivr WORD PTR [edi+0xf13fb45]
  4015a8:	sub    eax,0x5493b40e
  4015ad:	adc    eax,0x66680367
  4015b2:	les    ecx,FWORD PTR [edi+0x17]
  4015b5:	aam    0xd7
  4015b7:	xor    esp,DWORD PTR [edx+0x5b]
  4015ba:	in     eax,0x81
  4015bc:	ret    
  4015bd:	fisub  WORD PTR [edi+edi*4]
  4015c0:	fcomp  QWORD PTR [ebx]
  4015c2:	mov    ecx,0x411593ed
  4015c7:	int3   
  4015c8:	xor    edi,DWORD PTR [ecx-0x31ea788e]
  4015ce:	inc    esp
  4015cf:	push   edx
  4015d0:	in     al,0x96
  4015d2:	xor    BYTE PTR [eax+0x47],ah
  4015d5:	push   ecx
  4015d6:	iret   
  4015d7:	mov    ds:0xd7ba78a7,al
  4015dc:	mov    bl,0x55
  4015de:	outs   dx,BYTE PTR ds:[esi]
  4015df:	jns    0x4015ee
  4015e1:	fisttp DWORD PTR [ecx-0x50]
  4015e4:	(bad)  
  4015e5:	mov    ds:0xe414ca80,al
  4015ea:	shl    edi,0xfe
  4015ed:	lock sahf 
  4015ef:	sub    al,0x12
  4015f1:	cld    
  4015f2:	mov    al,0xb5
  4015f4:	daa    
  4015f5:	push   eax
  4015f6:	sub    al,0x65
  4015f8:	out    dx,al
  4015f9:	xchg   esp,eax
  4015fa:	(bad)  [edi]
  4015fc:	mov    esi,0x6f1aac0b
  401601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401602:	xchg   ecx,eax
  401603:	adc    bl,cl
  401605:	pop    es
  401606:	addr16 aas 
  401608:	mov    ah,0x26
  40160a:	fisttp DWORD PTR [edx]
  40160c:	fwait
  40160d:	mov    dh,0x83
  40160f:	xor    al,0xeb
  401611:	jg     0x40162e
  401613:	sbb    eax,0x88dff574
  401618:	shl    esi,cl
  40161a:	scas   al,BYTE PTR es:[edi]
  40161b:	add    ebp,DWORD PTR [eax]
  40161d:	and    ebx,DWORD PTR [ebx+0x38a2e9bc]
  401623:	push   0x106389ee
  401628:	loopne 0x401665
  40162a:	sbb    ecx,DWORD PTR [ecx-0x3f]
  40162d:	test   eax,0x87cbf7f3
  401632:	dec    edi
  401633:	dec    ecx
  401634:	icebp  
  401635:	es mov cl,0x40
  401638:	push   edi
  401639:	xchg   ebx,eax
  40163a:	imul   edi,DWORD PTR [edx-0x1010d414],0xffffffa5
  401641:	fild   WORD PTR [edi-0x395b40b9]
  401647:	adc    DWORD PTR [edi],ebp
  401649:	inc    ebx
  40164a:	(bad)  
  40164b:	setne  BYTE PTR [edi]
  40164e:	cmp    BYTE PTR [esi],0x7f
  401651:	jg     0x401666
  401653:	adc    BYTE PTR [ecx+eax*2-0xf],bh
  401657:	(bad)  
  401659:	scas   al,BYTE PTR es:[edi]
  40165a:	mov    WORD PTR [edx],fs
  40165c:	fmul   DWORD PTR [edx+0x74]
  40165f:	pop    esp
  401660:	push   0x9c5bed1c
  401665:	inc    esi
  401666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401667:	dec    ebx
  401668:	cmp    ebx,ebp
  40166a:	mov    dh,0x3
  40166c:	or     eax,0x774e85ea
  401671:	ror    ch,1
  401673:	sbb    DWORD PTR [edx-0x16935307],ebp
  401679:	jp     0x4016c1
  40167b:	out    0x1d,al
  40167d:	repz jl 0x40163a
  401680:	or     al,0xa2
  401682:	and    eax,0x15d4b68e
  401687:	stc    
  401688:	adc    ah,BYTE PTR [edi+ebp*1]
  40168b:	pop    esp
  40168c:	mov    esp,0xa01fbe8a
  401691:	jno    0x401711
  401693:	push   ecx
  401694:	adc    DWORD PTR [edx],esi
  401696:	push   ds
  401697:	in     eax,0x2c
  401699:	mov    ebp,0xa70214f0
  40169e:	xor    bh,bh
  4016a0:	gs jecxz 0x40162b
  4016a3:	jae    0x4016dd
  4016a5:	xchg   esp,eax
  4016a6:	mov    edx,0xeddb9d6d
  4016ab:	pop    eax
  4016ac:	rcl    BYTE PTR [edx-0x12],1
  4016af:	mov    WORD PTR [edi],es
  4016b1:	mov    edi,0x562a05c9
  4016b6:	mov    ecx,0x9b9f97f3
  4016bb:	retf   
  4016bc:	jge    0x4016c9
  4016be:	cmp    al,0xc8
  4016c0:	mov    cl,0xf7
  4016c2:	aas    
  4016c3:	(bad)  
  4016c5:	push   edx
  4016c6:	sbb    al,0x1b
  4016c8:	mov    ebx,0xc29923f7
  4016cd:	aaa    
  4016ce:	clc    
  4016cf:	inc    edx
  4016d0:	sub    eax,0xd6eeef63
  4016d5:	test   DWORD PTR [esp+edx*2+0x3e],ecx
  4016d9:	xlat   BYTE PTR ds:[ebx]
  4016da:	inc    edx
  4016db:	test   BYTE PTR [eax+0x60e54387],dh
  4016e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e2:	jae    0x401707
  4016e4:	fcomp  DWORD PTR [edx]
  4016e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e7:	loope  0x40166e
  4016e9:	push   ecx
  4016ea:	sbb    eax,0xbcb58ff4
  4016ef:	sub    ah,BYTE PTR [edi-0x65]
  4016f2:	fisub  WORD PTR [ebx]
  4016f4:	mov    eax,0x2cf18e35
  4016f9:	xchg   ebx,eax
  4016fa:	loope  0x401721
  4016fc:	xchg   esp,eax
  4016fd:	xchg   esi,eax
  4016fe:	out    0x6e,eax
  401700:	lahf   
  401701:	dec    ebx
  401702:	sub    al,0x9b
  401704:	icebp  
  401705:	retf   
  401706:	frstor [ecx]
  401708:	pop    ecx
  401709:	and    eax,0x5ce63fd0
  40170e:	adc    al,0x95
  401710:	cld    
  401711:	dec    ebp
  401712:	mov    bl,0xe0
  401714:	jp     0x40175b
  401716:	sub    BYTE PTR [ecx+ebp*8],0x9f
  40171a:	inc    ecx
  40171b:	pop    ebx
  40171c:	rcr    BYTE PTR [ebp+0x26],0xda
  401720:	out    0x97,al
  401722:	dec    ecx
  401723:	int    0xc5
  401725:	aad    0x13
  401727:	ret    0x67e6
  40172a:	inc    ebp
  40172b:	dec    edi
  40172c:	xlat   BYTE PTR ds:[ebx]
  40172d:	and    BYTE PTR [ebp+0x20],al
  401730:	push   edx
  401731:	push   esi
  401732:	aaa    
  401733:	dec    esi
  401734:	repz aas 
  401736:	popa   
  401737:	ins    DWORD PTR es:[edi],dx
  401738:	add    cl,0xc0
  40173b:	test   al,0x0
  40173d:	sub    eax,0x5b5d0817
  401742:	xor    dl,BYTE PTR [edx-0x78b1701f]
  401748:	pop    esp
  401749:	stos   BYTE PTR es:[edi],al
  40174a:	int    0x48
  40174c:	ins    DWORD PTR es:[edi],dx
  40174d:	lock out dx,eax
  40174f:	push   eax
  401750:	dec    edx
  401751:	xor    esi,DWORD PTR [esi]
  401753:	(bad)
  401757:	inc    esp
  401758:	adc    edi,DWORD PTR [ebx-0x4e]
  40175b:	mov    al,ds:0xe892b68b
  401760:	jno    0x4017b3
  401762:	inc    esi
  401763:	aaa    
  401764:	adc    edx,DWORD PTR [ebx-0x68406e07]
  40176a:	cmc    
  40176b:	add    ch,BYTE PTR [esi-0x1656772e]
  401771:	pop    ss
  401772:	add    ebp,DWORD PTR [esi+0x6bb5d054]
  401778:	cli    
  401779:	enter  0x3b41,0xa8
  40177d:	sub    DWORD PTR [eax],0x39
  401780:	cmp    DWORD PTR [ebp+0x66],0xffffffaf
  401784:	shl    DWORD PTR [ebx-0x40654d44],1
  40178a:	adc    al,0xfa
  40178c:	fwait
  40178d:	aad    0x5f
  40178f:	mov    bh,0x7c
  401791:	dec    eax
  401792:	popf   
  401793:	pcmpeqw mm1,mm5
  401796:	ja     0x401809
  401798:	out    dx,eax
  401799:	cmp    esi,DWORD PTR [edi+0x5386e93d]
  40179f:	js     0x401779
  4017a1:	add    BYTE PTR [edx],cl
  4017a3:	jmp    0x3db1:0x7c607c5a
  4017aa:	jl     0x401761
  4017ac:	cmc    
  4017ad:	cmp    BYTE PTR [ebx-0x13],cl
  4017b0:	jle    0x401765
  4017b2:	test   al,0xf6
  4017b4:	ins    BYTE PTR es:[edi],dx
  4017b5:	jmp    0x4017e1
  4017b7:	jmp    0x6e01:0x706eaf1f
  4017be:	mov    eax,0x691b2ec4
  4017c3:	mov    dl,0x72
  4017c5:	dec    ebp
  4017c6:	xor    eax,0x12ac8e83
  4017cb:	jge    0x4017dd
  4017cd:	out    0x3a,eax
  4017cf:	int    0xb6
  4017d1:	ror    BYTE PTR [ebp+0x43],0x90
  4017d5:	jns    0x401834
  4017d7:	add    ebp,ebp
  4017d9:	cli    
  4017da:	mov    esp,DWORD PTR [edx+ebx*2-0x79b33e35]
  4017e1:	rcl    DWORD PTR [bx+si-0x6eba],1
  4017e6:	cli    
  4017e7:	ja     0x4017ac
  4017e9:	jmp    0xdba09d9d
  4017ee:	iret   
  4017ef:	mov    ds:0x440b06c3,eax
  4017f4:	es mov bh,0x3a
  4017f7:	jle    0x401851
  4017f9:	dec    eax
  4017fa:	mov    ds:0xedf2cdb0,eax
  4017ff:	popf   
  401800:	jg     0x401823
  401802:	and    eax,DWORD PTR [edi-0x42c59615]
  401808:	or     BYTE PTR [ecx],al
  40180a:	std    
  40180b:	cld    
  40180c:	jle    0x401824
  40180e:	adc    al,0x12
  401810:	lods   eax,DWORD PTR ds:[si]
  401812:	out    dx,eax
  401813:	adc    esp,DWORD PTR [esi]
  401815:	je     0x40186c
  401817:	xor    edx,eax
  401819:	jl     0x4017ce
  40181b:	cs push edi
  40181d:	inc    edx
  40181e:	jle    0x40180e
  401820:	and    ebx,edx
  401822:	arpl   WORD PTR [ebx+0x5ddd9aad],dx
  401828:	dec    esp
  401829:	iret   
  40182a:	outs   dx,DWORD PTR ds:[esi]
  40182b:	ja     0x401823
  40182d:	fld    QWORD PTR [ecx+edi*1]
  401830:	inc    ebx
  401831:	les    ecx,FWORD PTR [eax]
  401833:	cmp    DWORD PTR [esi-0x5c],edi
  401836:	stos   DWORD PTR es:[edi],eax
  401837:	cwde   
  401838:	aas    
  401839:	add    eax,0x72274849
  40183e:	pop    esi
  40183f:	pusha  
  401840:	ret    0xe636
  401843:	xchg   edi,eax
  401844:	ss jmp 0x40183a
  401847:	push   ebp
  401848:	test   BYTE PTR [eax-0x16],0x2c
  40184c:	sbb    al,al
  40184e:	gs mov ch,0xb8
  401851:	xor    dh,dl
  401853:	les    eax,FWORD PTR [ecx+0x193f6076]
  401859:	data16 and cl,BYTE PTR [ebx-0x5d832a40]
  401860:	add    al,0xa4
  401862:	lahf   
  401863:	jmp    FWORD PTR [edx-0x11]
  401866:	repz in eax,dx
  401868:	sbb    dh,al
  40186a:	cwde   
  40186b:	ud0    edx,DWORD PTR [edi-0x46]
  40186f:	popa   
  401870:	sbb    DWORD PTR [edi-0x4a],esp
  401873:	in     al,0xb5
  401875:	shl    BYTE PTR [ecx+0x40add5a6],1
  40187b:	sar    DWORD PTR [edx-0x6d045427],cl
  401881:	adc    al,0xa8
  401883:	loopne 0x401896
  401885:	aad    0xf
  401887:	xchg   esi,eax
  401888:	popa   
  401889:	je     0x40183d
  40188b:	leave  
  40188c:	xor    BYTE PTR [ecx+0x7e],dl
  40188f:	ds mov bh,0xee
  401892:	dec    ebp
  401893:	call   0x2c6d:0x7411aab8
  40189a:	or     DWORD PTR [bp+si],edx
  40189d:	xchg   esp,eax
  40189e:	loope  0x4018e3
  4018a0:	es or  edx,esi
  4018a3:	dec    eax
  4018a4:	test   BYTE PTR [esp+ebp*8-0x8],dh
  4018a8:	imul   edx,DWORD PTR [ebx],0x81b0bd9
  4018ae:	ret    0xdad2
  4018b1:	int3   
  4018b2:	(bad)
  4018b6:	leave  
  4018b7:	jno    0x401916
  4018b9:	ds push es
  4018bb:	mov    ds:0x4a91d3bc,al
  4018c0:	jl     0x4018aa
  4018c2:	jne    0x4018e2
  4018c4:	outs   dx,DWORD PTR ds:[esi]
  4018c5:	dec    ebx
  4018c6:	pop    ecx
  4018c7:	dec    ecx
  4018c8:	icebp  
  4018c9:	jge    0x4018a2
  4018cb:	ret    0xdaf3
  4018ce:	stc    
  4018cf:	sbb    dh,al
  4018d1:	(bad)  [esi-0x2904bc9c]
  4018d7:	fmul   st(4),st
  4018d9:	cmp    ebp,DWORD PTR [eax]
  4018db:	lahf   
  4018dc:	jmp    FWORD PTR [ebx-0x52]
  4018df:	inc    edi
  4018e0:	fidiv  DWORD PTR [ebx-0x51]
  4018e3:	dec    esp
  4018e4:	jae    0x40188e
  4018e6:	ret    
  4018e7:	fstp   DWORD PTR [ebx]
  4018e9:	add    BYTE PTR [edx+eiz*1-0x533a745f],ch
  4018f0:	fwait
  4018f1:	and    al,0x62
  4018f3:	jmp    0x401912
  4018f5:	stos   DWORD PTR es:[edi],eax
  4018f6:	pusha  
  4018f7:	clc    
  4018f8:	or     DWORD PTR [edi+0x4e],0xffffffe3
  4018fc:	lds    esi,FWORD PTR [esi]
  4018fe:	sub    bl,0x25
  401901:	or     BYTE PTR [edx-0x2],bh
  401904:	inc    ebx
  401905:	outs   dx,DWORD PTR ds:[esi]
  401906:	sbb    BYTE PTR [edx-0x18c992c3],ah
  40190c:	xchg   edx,eax
  40190d:	sbb    DWORD PTR [ebx],ecx
  40190f:	lods   eax,DWORD PTR ds:[esi]
  401910:	pop    esi
  401911:	jnp    0x40192a
  401913:	cld    
  401914:	mov    cl,0x53
  401916:	cmp    ebp,esp
  401918:	ins    BYTE PTR es:[edi],dx
  401919:	pop    ss
  40191a:	test   DWORD PTR [ebp-0x596a0988],edi
  401920:	lods   eax,DWORD PTR ds:[esi]
  401921:	out    dx,al
  401922:	in     eax,0x54
  401924:	xlat   BYTE PTR ds:[ebx]
  401925:	jp     0x4018fb
  401927:	js     0x268ac583
  40192d:	sbb    edi,DWORD PTR [ecx-0x6c]
  401930:	cmp    ecx,DWORD PTR [ebp+0x46]
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428287,0x0
  401946:	not    DWORD PTR ds:0x4282ff
  40194c:	mov    edi,DWORD PTR ds:0x4281a3
  401952:	mov    DWORD PTR ds:0x42829f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x42830b,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428287,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d8c
  401981:	mov    edx,DWORD PTR ds:0x4283a7
  401987:	adc    DWORD PTR ds:0x42830f,edx
  40198d:	and    edx,DWORD PTR ds:0x42825f
  401993:	add    DWORD PTR ds:0x42828f,edx
  401999:	mov    edi,DWORD PTR ds:0x428183
  40199f:	xor    DWORD PTR ds:0x4281ab,edi
  4019a5:	and    DWORD PTR ds:0x42817b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42838b
  4019b4:	sub    ecx,DWORD PTR ds:0x42828b
  4019ba:	mov    DWORD PTR ds:0x42838b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42839b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428393,0x339b
  4019e6:	mov    eax,ds:0x4223e0
  4019eb:	cmp    DWORD PTR ds:0x428277,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428287
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428277,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428297
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e78
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428197
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428187
  401a44:	sub    DWORD PTR ds:0x428313,ecx
  401a4a:	add    DWORD PTR ds:0x428193,0x42828b
  401a54:	xor    edx,DWORD PTR ds:0x4282fb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x4281a3,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x4281a3,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428277
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42832f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42827b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x4281a3,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d90
  401ac0:	sub    edx,DWORD PTR ds:0x4283b3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42839f
  401ad4:	adc    ecx,DWORD PTR ds:0x42818f
  401ada:	mov    DWORD PTR ds:0x42839f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42818b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428173,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428287,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42819f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42817f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428173,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428ee0
  401b3a:	movzx  edx,WORD PTR ds:0x4282af
  401b41:	and    edx,DWORD PTR ds:0x42818b
  401b47:	mov    DWORD PTR ds:0x4282af,edx
  401b4d:	and    DWORD PTR ds:0x428267,edx
  401b53:	add    DWORD PTR ds:0x4283ab,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282b3
  401b5f:	add    DWORD PTR ds:0x42826b,edi
  401b65:	or     edx,DWORD PTR ds:0x428397
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42831b,0x0
  401b78:	mov    DWORD PTR ds:0x4282b3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428183,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428257
  401ba1:	cmp    DWORD PTR ds:0x42831b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428da4
  401bc7:	sub    DWORD PTR ds:0x428307,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42826b
  401bd4:	add    DWORD PTR ds:0x428317,edx
  401bda:	add    DWORD PTR ds:0x42816f,ebx
  401be0:	sbb    DWORD PTR ds:0x42823f,edi
  401be6:	inc    DWORD PTR ds:0x42823f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x4283a3,0x428247
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xdab0afeb
  401c11:	lods   eax,DWORD PTR ds:[esi]
  401c12:	cdq    
  401c13:	mov    esp,0x18180a25
  401c18:	sahf   
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax-0x6f],bh
  401c1e:	or     al,0xdf
  401c20:	add    DWORD PTR [ecx+0x5c],edx
  401c23:	fwait
  401c24:	xchg   edi,eax
  401c25:	xor    BYTE PTR [ebp+0x75],ch
  401c28:	pop    ecx
  401c29:	jge    0x401c1f
  401c2b:	inc    edi
  401c2c:	sar    DWORD PTR [ebp+0x38],1
  401c2f:	adc    esp,edi
  401c31:	cmp    al,0x1f
  401c33:	sub    eax,0xb117ac54
  401c38:	jle    0x401c9d
  401c3a:	retf   0x5862
  401c3d:	sub    ch,bl
  401c3f:	adc    bh,bh
  401c41:	pop    esp
  401c42:	xchg   esp,eax
  401c43:	adc    dl,al
  401c45:	fcmovne st,st(4)
  401c47:	sub    ch,BYTE PTR [edi+0x4fb49152]
  401c4d:	enter  0x303c,0x4f
  401c51:	add    edx,DWORD PTR [ecx-0x4e]
  401c54:	add    dh,BYTE PTR [edi-0x2483dca6]
  401c5a:	adc    al,0xd1
  401c5c:	fistp  WORD PTR ds:0x449b6c14
  401c62:	cmc    
  401c63:	pop    esi
  401c64:	or     edi,DWORD PTR [esi]
  401c66:	push   ds
  401c67:	cmp    eax,0x6c2030b7
  401c6c:	add    al,0x96
  401c6e:	mov    WORD PTR [edi+0x5fcbc65c],es
  401c74:	hlt    
  401c75:	in     al,dx
  401c76:	or     ebp,DWORD PTR [ebp+0x47]
  401c79:	mov    ds:0x9a016139,al
  401c7e:	pop    eax
  401c7f:	mov    BYTE PTR [eax-0x6a],ah
  401c82:	ins    DWORD PTR es:[edi],dx
  401c83:	xchg   ebp,eax
  401c84:	mov    ebp,edi
  401c86:	sbb    esp,edx
  401c88:	popa   
  401c89:	mov    gs,ebp
  401c8b:	mov    ch,0x67
  401c8d:	jecxz  0x401c95
  401c8f:	hlt    
  401c90:	jo     0x401d08
  401c92:	fsub   st(6),st
  401c94:	and    eax,0x9fdf6219
  401c99:	dec    DWORD PTR [edi]
  401c9b:	mov    esi,0x8a19d4a
  401ca0:	std    
  401ca1:	imul   edi,esp,0xffffff9f
  401ca4:	add    BYTE PTR [ecx+0x71],ah
  401ca7:	pusha  
  401ca8:	or     al,0x35
  401caa:	je     0x401c92
  401cac:	pop    ds
  401cad:	(bad)  
  401cae:	xchg   esp,eax
  401caf:	pop    edx
  401cb0:	ret    0x462e
  401cb3:	jo     0x401caa
  401cb5:	sub    DWORD PTR es:[eax+edx*1],esi
  401cb9:	out    dx,al
  401cba:	or     bl,BYTE PTR [edi-0x4d223c0d]
  401cc0:	add    dh,BYTE PTR [ebp+0x4]
  401cc3:	inc    edi
  401cc4:	rcr    ah,0x65
  401cc7:	pop    ecx
  401cc8:	rcl    BYTE PTR [edi],0x39
  401ccb:	xlat   BYTE PTR ds:[ebx]
  401ccc:	out    dx,al
  401ccd:	(bad)  
  401cce:	out    0x35,al
  401cd0:	sbb    eax,DWORD PTR [ebx]
  401cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd3:	push   edi
  401cd4:	add    al,0x15
  401cd6:	xchg   edi,eax
  401cd7:	sbb    DWORD PTR [esi+0x195556a2],ebp
  401cdd:	xlat   BYTE PTR ds:[ebx]
  401cde:	bound  edi,QWORD PTR es:[edi-0x7195db28]
  401ce5:	dec    eax
  401ce6:	js     0x401d09
  401ce8:	shl    BYTE PTR [ebx+0x5a],0x91
  401cec:	loope  0x401d31
  401cee:	out    dx,eax
  401cef:	mov    DWORD PTR [edx+0x3fd4ac55],0xa9003c6e
  401cf9:	mov    ?,WORD PTR [edi+0x2]
  401cfc:	mov    ds:0xbf0c1fc2,al
  401d01:	(bad)  
  401d02:	rcr    ah,1
  401d04:	bound  esi,QWORD PTR [ebx]
  401d06:	push   0x47
  401d08:	jle    0x401c92
  401d0a:	mov    al,ds:0xac00e288
  401d0f:	jmp    0x665675a0
  401d14:	leave  
  401d15:	push   eax
  401d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d17:	sahf   
  401d18:	xor    eax,0x66a4fdb3
  401d1d:	ins    DWORD PTR es:[edi],dx
  401d1e:	pop    ss
  401d1f:	push   0x604493df
  401d24:	(bad)  
  401d25:	ficomp DWORD PTR [ebx-0x5b61d404]
  401d2b:	(bad)  
  401d2c:	pushf  
  401d2d:	ja     0x401cc0
  401d2f:	hlt    
  401d30:	sbb    BYTE PTR [edx-0x35b91c87],ch
  401d36:	call   0x7bad068e
  401d3b:	mov    cl,0x5
  401d3d:	pop    eax
  401d3e:	call   0x21f5:0x158d1f46
  401d45:	jae    0x401d34
  401d47:	sub    eax,DWORD PTR [ebp+0x57a4f3e5]
  401d4d:	jae    0x401dc9
  401d4f:	in     al,0x8
  401d51:	mov    esi,0x71f13c6d
  401d56:	jne    0x401d1c
  401d58:	lock dec edi
  401d5a:	pop    edi
  401d5b:	jb     0x401d84
  401d5d:	and    al,0x24
  401d5f:	mov    ah,0xea
  401d61:	inc    esp
  401d62:	call   0xc507389f
  401d67:	sub    DWORD PTR [ebx-0x341e9b6c],0x2d4353d
  401d71:	or     ch,dh
  401d73:	sbb    al,0xfb
  401d75:	call   0x2b446f5b
  401d7a:	sbb    ecx,DWORD PTR [esi-0x186c7ee8]
  401d80:	mov    DWORD PTR [ebx+0x76],esp
  401d83:	add    bl,BYTE PTR [esi-0x25199cd0]
  401d89:	in     al,dx
  401d8a:	push   edi
  401d8b:	js     0x401df4
  401d8d:	iret   
  401d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8f:	test   BYTE PTR [ecx+edi*4+0x79],cl
  401d93:	push   ss
  401d94:	data16 je 0x401e00
  401d97:	pop    esp
  401d98:	mov    ebx,0x916b59ce
  401d9d:	mov    esi,0x9219260a
  401da2:	pop    ss
  401da3:	xlat   BYTE PTR ds:[ebx]
  401da4:	(bad)  
  401da5:	mov    al,ds:0xd720d49e
  401daa:	out    0x8a,al
  401dac:	cmp    al,0x32
  401dae:	pop    edi
  401daf:	mov    eax,0xe39c085b
  401db4:	push   edi
  401db5:	test   al,0x87
  401db7:	dec    eax
  401db8:	xlat   BYTE PTR ds:[ebx]
  401db9:	pop    es
  401dba:	sub    DWORD PTR [esi],eax
  401dbc:	hlt    
  401dbd:	cdq    
  401dbe:	jp     0x401e05
  401dc0:	aas    
  401dc1:	sub    eax,0x70dbf540
  401dc6:	sub    ch,BYTE PTR [ebp+0x27428b35]
  401dcc:	into   
  401dcd:	sub    eax,DWORD PTR [edx]
  401dcf:	std    
  401dd0:	outs   dx,DWORD PTR ds:[esi]
  401dd1:	and    eax,0xc43aa3f1
  401dd6:	fcomp  DWORD PTR [edi]
  401dd8:	inc    edx
  401dd9:	adc    BYTE PTR [ebx],bl
  401ddb:	inc    edi
  401ddc:	adc    bh,dh
  401dde:	(bad)  
  401ddf:	les    ecx,FWORD PTR ds:0x83f915c6
  401de5:	(bad)  
  401de7:	vpandn ymm3,ymm2,ymm3
  401deb:	xor    ah,BYTE PTR [esi+ecx*1+0x443c6caf]
  401df2:	in     eax,0x13
  401df4:	fdivr  st,st(6)
  401df6:	call   0xd6f4:0x1218741
  401dfd:	push   0x65b526ce
  401e02:	mul    DWORD PTR [edx-0x5f3a5b90]
  401e08:	lea    ebx,ds:0x295526a5
  401e0e:	sub    DWORD PTR [edi],esi
  401e10:	cmc    
  401e11:	out    dx,al
  401e12:	sti    
  401e13:	(bad)  
  401e14:	mov    dl,0x92
  401e16:	jae    0x401dd1
  401e18:	inc    ebp
  401e19:	pop    esi
  401e1a:	retf   0xd8a8
  401e1d:	into   
  401e1e:	cmp    eax,0xaf79752a
  401e23:	les    esp,FWORD PTR [edi+0x5cd2eb97]
  401e29:	ret    
  401e2a:	dec    edx
  401e2b:	push   cs
  401e2c:	push   esp
  401e2d:	mov    ebx,0xf8ee08b9
  401e32:	and    al,0xcf
  401e34:	fucomip st,st(4)
  401e36:	mov    eax,ds:0x39a59d82
  401e3b:	jg     0x401e37
  401e3d:	(bad)  
  401e3e:	leave  
  401e3f:	and    bh,BYTE PTR [esi]
  401e41:	sahf   
  401e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e43:	pop    edi
  401e44:	pushf  
  401e45:	jl     0x401e4c
  401e47:	ret    
  401e48:	loop   0x401e5f
  401e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e4b:	loopne 0x401e3b
  401e4d:	std    
  401e4e:	loop   0x401e6c
  401e50:	int    0x51
  401e52:	mov    bh,BYTE PTR [ebp+0x2c]
  401e55:	mov    ecx,ss
  401e57:	fcom   DWORD PTR [ebp+0x73]
  401e5a:	call   0x9b887524
  401e5f:	(bad)  
  401e60:	cmc    
  401e61:	fbld   TBYTE PTR [edi-0x6f]
  401e64:	mov    ch,0xc1
  401e66:	cld    
  401e67:	adc    al,0x96
  401e69:	loope  0x401ea1
  401e6b:	mov    ch,0x55
  401e6d:	not    BYTE PTR [edx+0x12]
  401e70:	mov    ds:0x9b5426de,al
  401e75:	add    eax,ebx
  401e77:	xchg   DWORD PTR [esi+edx*4],esp
  401e7a:	push   0x1f
  401e7c:	iret   
  401e7d:	hlt    
  401e7e:	jmp    0x401e02
  401e80:	sbb    eax,0x6b9b6ba0
  401e85:	repz sub edi,DWORD PTR [ebp+eiz*2+0x17e08e37]
  401e8d:	jecxz  0x401ed1
  401e8f:	push   esp
  401e90:	in     eax,0xc4
  401e92:	lea    esp,[ebx+ebp*8]
  401e95:	ins    DWORD PTR es:[edi],dx
  401e96:	xor    ecx,DWORD PTR [eax-0x41edbe2f]
  401e9c:	(bad)  
  401e9d:	aam    0x70
  401e9f:	cmp    cl,BYTE PTR [eax+0x7a2fefcf]
  401ea5:	cs out 0xc7,al
  401ea8:	call   0x9704dcaa
  401ead:	cld    
  401eae:	or     ebp,DWORD PTR [ecx+0x70]
  401eb1:	sub    al,0x84
  401eb3:	or     ch,BYTE PTR [eax+ecx*2-0x1f]
  401eb7:	mov    esp,0x5856b664
  401ebc:	addr16 sbb al,0x42
  401ebf:	inc    esp
  401ec0:	addr16 fdivp st(2),st
  401ec3:	sub    ah,BYTE PTR [edx-0x57a5c1a2]
  401ec9:	(bad)
  401ecd:	pop    esi
  401ece:	repz rcr BYTE PTR [edi+0xe5c74bf],1
  401ed5:	xor    cl,al
  401ed7:	mov    bh,0xee
  401ed9:	outs   dx,DWORD PTR ds:[esi]
  401eda:	ror    BYTE PTR [esi-0x6cfa6b7c],0x42
  401ee1:	popf   
  401ee2:	adc    ah,dl
  401ee4:	sbb    eax,0x76395fea
  401ee9:	jnp    0x401e8b
  401eeb:	sub    esp,0x41
  401eee:	xchg   esi,eax
  401eef:	int    0xe1
  401ef1:	popf   
  401ef2:	lods   eax,DWORD PTR ds:[esi]
  401ef3:	loope  0x401eb5
  401ef5:	and    BYTE PTR [ecx+ebp*8],ah
  401ef8:	push   ebx
  401ef9:	dec    ecx
  401efa:	and    BYTE PTR ds:0x43f89ab,dl
  401f00:	rol    BYTE PTR [ebx],cl
  401f02:	pop    esp
  401f03:	jg     0x401f3c
  401f05:	out    dx,eax
  401f06:	arpl   WORD PTR [edi-0x4f691d68],si
  401f0c:	popa   
  401f0d:	jb     0x401e9f
  401f0f:	push   0x9
  401f11:	pop    esi
  401f12:	sbb    eax,0x1eee2c1f
  401f17:	pop    ds
  401f18:	fldcw  WORD PTR [ebp+eax*2-0xc3fddc8]
  401f1f:	cmp    BYTE PTR [edx+edx*2+0x48],0x37
  401f24:	fcomp  DWORD PTR [ebp+eax*1-0x34eb58b9]
  401f2b:	loop   0x401eea
  401f2d:	les    esp,FWORD PTR [ecx-0x4626c97a]
  401f33:	pop    ecx
  401f34:	out    0xf7,al
  401f36:	loope  0x401f43
  401f38:	mov    ebp,0x46421d59
  401f3d:	scas   al,BYTE PTR es:[edi]
  401f3e:	push   0xfabe8588
  401f43:	stc    
  401f44:	std    
  401f45:	cmp    eax,0x115aaaeb
  401f4a:	rcl    BYTE PTR [eax],1
  401f4c:	test   DWORD PTR [edx+edx*1-0x7db58960],esp
  401f53:	pop    edi
  401f54:	mov    cl,0x37
  401f56:	rol    DWORD PTR [ecx-0x354fa4],1
  401f5c:	adc    dh,cl
  401f5e:	jp     0x401f02
  401f60:	or     DWORD PTR [esp+esi*2],0x20899625
  401f67:	add    esi,DWORD PTR ds:[edi+0x43]
  401f6b:	pop    esi
  401f6c:	(bad)  
  401f6d:	dec    esi
  401f6e:	inc    edx
  401f6f:	pusha  
  401f70:	lock dec ebp
  401f72:	call   0x2b8e:0xe0a512f2
  401f79:	inc    edi
  401f7a:	imul   edi,DWORD PTR [ecx],0x7d
  401f7d:	mov    eax,ds:0x2ac160f9
  401f82:	jne    0x401fb5
  401f84:	mulps  xmm4,XMMWORD PTR [ebx+0x46]
  401f88:	adc    eax,0xee56b413
  401f8d:	adc    eax,ebp
  401f8f:	mov    ch,0xdf
  401f91:	sbb    eax,0x26beb14a
  401f96:	dec    ecx
  401f97:	push   cs
  401f98:	fnstsw WORD PTR [ebx-0x695afe40]
  401f9e:	jns    0x401f31
  401fa0:	xchg   edi,eax
  401fa1:	xchg   ebp,eax
  401fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa3:	in     al,dx
  401fa4:	mov    eax,0xdf073346
  401fa9:	imul   DWORD PTR [esi*8-0x6d7e6990]
  401fb0:	sbb    BYTE PTR cs:[ebp+0x1c3c4273],cl
  401fb7:	div    bh
  401fb9:	jne    0x401f8c
  401fbb:	mov    eax,DWORD PTR [ebp+0x5b32063e]
  401fc1:	fbstp  TBYTE PTR [esi]
  401fc3:	add    eax,DWORD PTR fs:[esi]
  401fc6:	mov    dh,0x6c
  401fc8:	es xor eax,0xaff44997
  401fce:	cmp    BYTE PTR ds:0x1c5fde03,ch
  401fd4:	adc    al,0xee
  401fd6:	repnz sub al,0xf1
  401fd9:	leave  
  401fda:	dec    ecx
  401fdb:	dec    edi
  401fdc:	mov    BYTE PTR [ecx+0x45c7c455],cl
  401fe2:	nop
  401fe3:	push   ebp
  401fe4:	sub    al,0x0
  401fe6:	add    BYTE PTR [ecx+0x42837b],ah
  401fec:	adc    DWORD PTR ds:0x4283b7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42839b,0x0
  402000:	mov    DWORD PTR ds:0x42829b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428383,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42839b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428da8
  40203e:	or     DWORD PTR ds:0x42817f,0x6f29
  402048:	xor    DWORD PTR ds:0x42831b,0x42830f
  402052:	add    DWORD PTR ds:0x42829b,0x428337
  40205c:	and    DWORD PTR ds:0x4283ab,edi
  402062:	mov    DWORD PTR ds:0x42828b,0x2a04
  40206c:	sub    DWORD PTR ds:0x4281ab,0x42816b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282ff,0x0
  402084:	mov    DWORD PTR ds:0x4282fb,ecx
  40208a:	mov    DWORD PTR ds:0x4281a7,0x59f
  402094:	mov    DWORD PTR ds:0x4281a7,ecx
  40209a:	mov    DWORD PTR ds:0x428327,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282ff,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42817b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428ee4
  4020ce:	sbb    DWORD PTR ds:0x42838b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x42830b,0x42827f
  4020e2:	adc    DWORD PTR ds:0x42837f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42837f,0x4283af
  4020f6:	and    DWORD PTR ds:0x428167,0x428383
  402100:	sbb    DWORD PTR ds:0x42816b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282ff,0x4282af
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282fb
  40213c:	add    DWORD PTR ds:0x428297,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42838b
  40214e:	add    DWORD PTR ds:0x428327,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428177,0x0
  402162:	mov    DWORD PTR ds:0x42839b,0x750f
  40216c:	not    DWORD PTR ds:0x428383
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42827b,0x610f
  402181:	mov    eax,ds:0x42818f
  402186:	cmp    DWORD PTR ds:0x428177,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428079
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e80
  4021b1:	adc    DWORD PTR ds:0x42829f,0x428273
  4021bb:	add    DWORD PTR ds:0x42825f,0x168f
  4021c5:	sub    DWORD PTR ds:0x428303,0x4281a3
  4021cf:	or     DWORD PTR ds:0x4283a3,0xa53
  4021d9:	mov    eax,ds:0x428257
  4021de:	xor    DWORD PTR ds:0x42816b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbc6564d1
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x5ee7e7ee],bl
  40220e:	sub    al,0x3f
  402210:	fbstp  TBYTE PTR [ebp+0x5f693d4c]
  402216:	sbb    edi,ecx
  402218:	es adc eax,0xd725fc3f
  40221e:	mov    eax,ebx
  402220:	scas   al,BYTE PTR es:[edi]
  402221:	in     al,0xa6
  402223:	stos   BYTE PTR es:[edi],al
  402224:	cmc    
  402225:	test   DWORD PTR [ebp+0x5e128656],ebp
  40222b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40222c:	lea    esi,[edx-0x64446a14]
  402232:	ret    
  402233:	mov    WORD PTR [edi],fs
  402235:	mov    ss,eax
  402237:	repz mov edx,DWORD PTR [ebx]
  40223a:	inc    esp
  40223b:	repz push ss
  40223d:	or     al,0x6a
  40223f:	inc    ecx
  402240:	jecxz  0x402229
  402242:	gs mov eax,0x91ce702b
  402248:	shl    DWORD PTR [ecx],1
  40224a:	or     eax,0xeec6d947
  40224f:	push   eax
  402250:	mov    esi,0xecf2387
  402255:	adc    edx,DWORD PTR [edi-0x80]
  402258:	(bad)  
  402259:	pop    edi
  40225a:	sub    al,0x8
  40225c:	add    esi,ebx
  40225e:	sbb    al,0x80
  402260:	or     al,0x87
  402262:	add    BYTE PTR [ecx-0x3d076a81],cl
  402268:	add    al,0x8c
  40226a:	inc    ebx
  40226b:	loop   0x402298
  40226d:	or     al,0x88
  40226f:	ret    0x4839
  402272:	inc    eax
  402273:	mov    edx,0x96162097
  402278:	arpl   WORD PTR [esi],bp
  40227a:	mov    eax,0x21613948
  40227f:	push   edi
  402280:	add    dh,bh
  402282:	jno    0x4022c1
  402284:	nop
  402285:	dec    esi
  402286:	push   cs
  402287:	dec    esi
  402288:	fnstcw WORD PTR [ebx]
  40228a:	dec    ecx
  40228b:	call   0x93992910
  402290:	xchg   ecx,eax
  402291:	in     al,dx
  402292:	das    
  402293:	cs (bad) 
  402295:	mov    esi,0xa63272d8
  40229a:	fiadd  WORD PTR [ebx]
  40229c:	add    DWORD PTR [edx-0x36],0xffffffef
  4022a0:	jbe    0x4022d8
  4022a2:	sub    ebp,DWORD PTR [ebx+0x6]
  4022a5:	ins    DWORD PTR es:[edi],dx
  4022a6:	pop    es
  4022a7:	fadd   QWORD PTR [edx-0x23a22c4b]
  4022ad:	xchg   edx,eax
  4022ae:	jmp    0x402299
  4022b0:	test   cl,0x4b
  4022b3:	push   cs
  4022b4:	cdq    
  4022b5:	imul   edx,DWORD PTR [edi-0x3fc6001d],0x1c
  4022bc:	into   
  4022bd:	pop    es
  4022be:	popf   
  4022bf:	stc    
  4022c0:	sub    ebx,esp
  4022c2:	je     0x4022be
  4022c4:	and    DWORD PTR [esi*1-0x15ca7c10],ecx
  4022cb:	xchg   edx,eax
  4022cc:	ds loope 0x402270
  4022cf:	cld    
  4022d0:	ins    BYTE PTR es:[edi],dx
  4022d1:	lods   al,BYTE PTR ds:[esi]
  4022d2:	test   BYTE PTR ds:0x7bd254e1,ah
  4022d8:	jecxz  0x402273
  4022da:	or     eax,0xb5692461
  4022df:	lods   eax,DWORD PTR ds:[esi]
  4022e0:	sar    BYTE PTR ds:0x1d39731a,1
  4022e6:	xor    al,BYTE PTR [eax+0x5cde8bfb]
  4022ec:	sub    al,0xdc
  4022ee:	mul    BYTE PTR [edi+0x29]
  4022f1:	aad    0x7f
  4022f3:	inc    eax
  4022f5:	pushf  
  4022f6:	out    dx,eax
  4022f7:	adc    ebp,DWORD PTR [edi+eiz*1]
  4022fa:	cli    
  4022fb:	(bad)  
  4022fc:	stc    
  4022fd:	dec    ecx
  4022fe:	out    dx,eax
  4022ff:	push   ecx
  402300:	dec    edx
  402301:	sbb    ebp,DWORD PTR [ecx]
  402303:	fist   DWORD PTR [ecx]
  402305:	outs   dx,DWORD PTR ds:[esi]
  402306:	jns    0x40228d
  402308:	daa    
  402309:	int    0x46
  40230b:	int    0xd6
  40230d:	aad    0x50
  40230f:	xor    DWORD PTR [edx-0x55],edx
  402312:	and    BYTE PTR [ebx-0x70b30a42],al
  402318:	sti    
  402319:	jb     0x40233b
  40231b:	inc    esi
  40231c:	mov    edi,0x7fd74e3b
  402321:	mov    al,0xd3
  402323:	lock lea ecx,[eax]
  402326:	lea    esi,[esi-0x18]
  402329:	fild   WORD PTR [edx-0x53]
  40232c:	pop    ecx
  40232d:	repnz arpl WORD PTR [esi-0x3c],bp
  402331:	jo     0x40236c
  402333:	push   edi
  402334:	cs cdq 
  402336:	mov    esi,0x7953c7f3
  40233b:	bswap  ecx
  40233d:	dec    esi
  40233e:	daa    
  40233f:	mov    eax,0xdd8e0340
  402344:	jbe    0x4022ce
  402346:	inc    ebp
  402347:	int3   
  402348:	or     dl,BYTE PTR [eax]
  40234a:	push   edx
  40234b:	imul   ebx,DWORD PTR [esi-0x2fb1c0f4],0xa32d1bcd
  402355:	std    
  402356:	or     BYTE PTR [edi-0x36],bh
  402359:	cmp    bh,ch
  40235b:	sar    BYTE PTR [ecx+ebx*8+0x2266c360],cl
  402362:	and    ebx,DWORD PTR [edx]
  402364:	push   ds
  402365:	fadd   QWORD PTR [ecx]
  402367:	lods   eax,DWORD PTR ds:[esi]
  402368:	and    DWORD PTR [ebx+0x286abec7],esi
  40236e:	ficomp DWORD PTR [ecx-0x31e16625]
  402374:	test   BYTE PTR [esi],bl
  402376:	sub    ebx,DWORD PTR [ebp-0x681c593c]
  40237c:	adc    DWORD PTR [edx+0x77],eax
  40237f:	mov    ch,BYTE PTR [edi-0x57]
  402382:	cmp    DWORD PTR [edi],esi
  402384:	aaa    
  402385:	mov    dl,0x53
  402387:	out    0x13,al
  402389:	inc    edi
  40238a:	push   edi
  40238b:	adc    edi,esp
  40238d:	dec    edi
  40238e:	and    dl,ch
  402390:	jge    0xc8e0b646
  402396:	push   ebp
  402397:	inc    edi
  402398:	(bad)  
  40239a:	cmp    ebx,DWORD PTR [eax+0x50]
  40239d:	or     BYTE PTR [eiz*1+0x2d8e656e],bl
  4023a4:	add    ebx,ebx
  4023a6:	mov    cl,0x49
  4023a8:	jle    0x40234b
  4023aa:	dec    ecx
  4023ab:	inc    esi
  4023ac:	jl     0x4023fb
  4023ae:	pop    eax
  4023af:	in     eax,0xcc
  4023b1:	add    BYTE PTR [eax],dh
  4023b3:	jb     0x402424
  4023b5:	xor    DWORD PTR [edi+0x6],0x56
  4023b9:	outs   dx,DWORD PTR ds:[esi]
  4023ba:	mov    bh,0x3c
  4023bc:	loopne 0x4023f8
  4023be:	cs loopne 0x402383
  4023c1:	push   ebx
  4023c2:	mov    ch,0x75
  4023c4:	hlt    
  4023c5:	cmp    eax,0x515fd589
  4023ca:	(bad)  
  4023cb:	ficom  WORD PTR [ebx-0x44]
  4023ce:	in     eax,0x52
  4023d0:	mov    fs,WORD PTR [edx+eax*4+0x6c]
  4023d4:	jle    0x4023f0
  4023d6:	xchg   DWORD PTR [ecx+0xad9c531],esi
  4023dc:	inc    edi
  4023dd:	adc    eax,DWORD PTR [ecx+0xd]
  4023e0:	or     BYTE PTR [ecx+0x3e36bc55],bl
  4023e6:	cmp    DWORD PTR [ebx+0x46],edi
  4023e9:	repz repnz xor DWORD PTR [esi+0x2e],edx
  4023ee:	mov    ecx,esp
  4023f0:	pop    edi
  4023f1:	ret    0x6da2
  4023f4:	cli    
  4023f5:	leave  
  4023f6:	adc    esp,DWORD PTR [edx+0x5a]
  4023f9:	pop    edx
  4023fa:	or     esi,ecx
  4023fc:	fwait
  4023fd:	mov    esi,0xcb050010
  402402:	cdq    
  402403:	jns    0x402459
  402405:	jo     0x402428
  402407:	push   ss
  402408:	mov    esp,0xfd99d1bc
  40240d:	shr    bh,1
  40240f:	rcr    BYTE PTR [ecx],0xc7
  402412:	sbb    dl,BYTE PTR [edi+0x465bd68]
  402418:	sar    BYTE PTR [ebp-0x64],0x10
  40241c:	mov    WORD PTR [ecx],?
  40241e:	loopne 0x402435
  402420:	pop    edx
  402421:	inc    esp
  402422:	cs pop ebp
  402424:	mov    ch,0xda
  402426:	push   esp
  402427:	cs sar ebx,cl
  40242a:	sub    bh,BYTE PTR ds:[edx-0x69]
  40242e:	add    al,0x74
  402430:	cmp    al,BYTE PTR [ecx+0x58735e0b]
  402436:	fnstenv [eax-0x68]
  402439:	xchg   ecx,eax
  40243b:	sbb    ebp,ebx
  40243d:	sbb    al,0x80
  40243f:	daa    
  402440:	stos   BYTE PTR es:[edi],al
  402441:	ret    
  402442:	shr    BYTE PTR [ecx],0xf1
  402445:	mov    eax,edi
  402447:	es scas al,BYTE PTR es:[edi]
  402449:	outs   dx,BYTE PTR ds:[esi]
  40244a:	fcom   DWORD PTR [eax-0x30ba0f65]
  402450:	clc    
  402451:	mov    ds:0x96c11095,eax
  402456:	dec    edi
  402457:	popf   
  402458:	cmp    al,0xc6
  40245a:	sbb    bh,BYTE PTR [esi+0x1f]
  40245d:	sub    DWORD PTR [edx+0x67],esp
  402460:	jp     0x40240b
  402462:	mov    bh,0x8f
  402464:	jbe    0x40246c
  402466:	jl     0x4023f3
  402468:	jle    0x402426
  40246a:	pushf  
  40246b:	rol    DWORD PTR [ecx*8-0x6a327675],cl
  402472:	stc    
  402473:	rol    BYTE PTR [bp+si],0x5e
  402477:	psubb  mm6,QWORD PTR [esi-0x202e553]
  40247e:	push   0x6ca89410
  402483:	xor    DWORD PTR [ebx+0x222c1402],eax
  402489:	push   ds
  40248a:	or     al,0x4f
  40248c:	add    BYTE PTR [ebp-0x7732a505],dh
  402492:	aaa    
  402493:	mov    al,0x16
  402495:	js     0x4024e6
  402497:	cwde   
  402498:	(bad)  
  40249b:	rcr    edi,cl
  40249d:	scas   al,BYTE PTR es:[edi]
  40249e:	scas   eax,DWORD PTR es:[edi]
  40249f:	dec    ecx
  4024a0:	mov    edi,DWORD PTR [ebp+0x1d]
  4024a3:	outs   dx,BYTE PTR ds:[esi]
  4024a4:	mov    DWORD PTR [edx],esi
  4024a6:	je     0x402468
  4024a8:	dec    ebx
  4024a9:	pop    ecx
  4024aa:	clc    
  4024ab:	fidiv  WORD PTR [eax-0x2]
  4024ae:	dec    esp
  4024af:	mov    al,ds:0x180e9033
  4024b4:	mov    ch,0xe4
  4024b6:	cmp    dh,BYTE PTR [ecx]
  4024b8:	aad    0x8e
  4024ba:	adc    al,0xec
  4024bc:	jb     0x4024df
  4024be:	cli    
  4024bf:	push   es
  4024c0:	ja     0x4024da
  4024c2:	aam    0x2d
  4024c4:	xchg   edi,eax
  4024c5:	or     edi,DWORD PTR [ecx+eax*4+0x3f9cc6e1]
  4024cc:	mov    dh,0xae
  4024ce:	and    cl,BYTE PTR [edx+0x754426c3]
  4024d4:	popf   
  4024d5:	scas   eax,DWORD PTR es:[edi]
  4024d6:	(bad)  
  4024d7:	int3   
  4024d8:	loope  0x40251a
  4024da:	jl     0x4024a8
  4024dc:	pop    ecx
  4024dd:	mov    ebx,0x90a4469a
  4024e2:	fdivr  DWORD PTR [edx+0x2f88b8a1]
  4024e8:	mov    WORD PTR [eax],ds
  4024ea:	out    0x5,al
  4024ec:	jle    0x402470
  4024ee:	jmp    0x402568
  4024f0:	dec    esi
  4024f1:	test   DWORD PTR [eax-0x122ce48f],0x11da6698
  4024fb:	dec    ebx
  4024fc:	les    eax,FWORD PTR [edx+0x37]
  4024ff:	ja     0x40253b
  402501:	fldenv [edx-0x7d]
  402504:	jmp    0x40250e
  402506:	and    edx,ecx
  402508:	inc    ebx
  402509:	outs   dx,BYTE PTR ds:[esi]
  40250a:	mov    esp,0x83d1c858
  40250f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402510:	adc    eax,0xed6993ee
  402515:	xchg   ebx,eax
  402516:	add    al,BYTE PTR [eax+0x2b]
  402519:	ja     0x40251b
  40251b:	(bad)  
  40251d:	xchg   esi,eax
  40251e:	fild   QWORD PTR [ecx+eiz*8]
  402521:	pop    esp
  402522:	int3   
  402523:	gs clc 
  402525:	loopne 0x40259f
  402527:	xor    eax,0xc950e8e9
  40252c:	adc    al,0x5e
  40252e:	mov    ah,ch
  402530:	fstp   QWORD PTR [eax-0x9]
  402533:	push   0x3e
  402535:	jecxz  0x40257e
  402537:	cmc    
  402538:	out    dx,eax
  402539:	xchg   ebx,eax
  40253a:	xor    DWORD PTR [edi+0x2e5a2a11],eax
  402540:	lds    ebp,FWORD PTR [edx-0x2889389e]
  402546:	js     0x4025c5
  402548:	ret    
  402549:	push   eax
  40254a:	data16 sahf 
  40254c:	push   ebx
  40254d:	jno    0x40258d
  40254f:	rcl    DWORD PTR ds:0x559a3902,0x52
  402556:	push   ebx
  402557:	ror    DWORD PTR [ecx+edx*2+0x64],1
  40255b:	adc    al,BYTE PTR [edi+ebp*2-0x51]
  40255f:	push   edi
  402560:	sbb    DWORD PTR [ecx-0xa],0xab678d3b
  402567:	out    0x10,eax
  402569:	addr16 and al,0x86
  40256c:	or     DWORD PTR [bx+si+0x5757],ecx
  402571:	inc    edi
  402572:	(bad)  
  402573:	pop    ss
  402574:	xchg   ecx,eax
  402575:	dec    ebx
  402576:	pop    ecx
  402577:	or     edi,DWORD PTR [ebx-0x3b]
  40257a:	cmp    al,0xba
  40257c:	xlat   BYTE PTR ds:[ebx]
  40257d:	sub    BYTE PTR [ecx+esi*4],al
  402580:	test   al,0x3a
  402582:	ja     0x40258e
  402584:	mov    ch,0x32
  402586:	adc    ebx,DWORD PTR [edx+eiz*4-0x51294fa2]
  40258d:	arpl   bp,bp
  40258f:	mov    esi,0x30270afb
  402594:	sbb    al,0xa9
  402596:	int    0x5d
  402598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402599:	adc    dl,BYTE PTR [ebx-0x26]
  40259c:	rol    DWORD PTR [ebp+0x78d94277],cl
  4025a2:	mov    edx,0x2b7dd2d2
  4025a7:	jmp    0xdd22741
  4025ac:	psubd  mm5,QWORD PTR [esi-0x5b2464af]
  4025b3:	scas   al,BYTE PTR es:[edi]
  4025b4:	dec    edi
  4025b5:	rol    BYTE PTR [edi+0x3e],cl
  4025b8:	add    BYTE PTR [ecx],0xa1
  4025bb:	xchg   edx,eax
  4025bc:	sub    edx,DWORD PTR [esi+0x7d]
  4025bf:	out    dx,al
  4025c0:	jmp    0xb028:0x11f7247f
  4025c7:	scas   al,BYTE PTR es:[di]
  4025c9:	(bad)  [ecx]
  4025cb:	push   ss
  4025cc:	sbb    esp,edi
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x42830f
  4025dc:	adc    DWORD PTR ds:0x42819b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428183,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428177,0x0
  4025fd:	mov    DWORD PTR ds:0x428323,0x76b5
  402607:	mov    DWORD PTR ds:0x42817f,edx
  40260d:	mov    DWORD PTR ds:0x428297,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428283
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428177,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42824f
  402645:	call   DWORD PTR ds:0x428dac
  40264b:	sbb    DWORD PTR ds:0x42839b,0x36f
  402655:	adc    DWORD PTR ds:0x42831f,0x4281a7
  40265f:	sub    DWORD PTR ds:0x42838f,0x42832b
  402669:	and    DWORD PTR ds:0x42816f,0x42825b
  402673:	add    DWORD PTR ds:0x42832f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428177
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42816b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42829f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282ff,edx
  4026bd:	mov    DWORD PTR ds:0x42825b,ecx
  4026c3:	mov    DWORD PTR ds:0x428183,edx
  4026c9:	mov    DWORD PTR ds:0x42827f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42816b
  4026dd:	mov    DWORD PTR ds:0x42829f,edx
  4026e3:	cmp    DWORD PTR ds:0x42829f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428db0
  402708:	add    DWORD PTR ds:0x4282a7,0x428307
  402712:	sub    DWORD PTR ds:0x428323,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42817b,0x16a6
  402726:	dec    DWORD PTR ds:0x428197
  40272c:	and    DWORD PTR ds:0x42827b,edx
  402732:	or     DWORD PTR ds:0x42830b,edx
  402738:	mov    eax,ds:0x42819f
  40273d:	and    DWORD PTR ds:0x4283b3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283b3
  402751:	sbb    DWORD PTR ds:0x42827f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42825f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428313
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x4324e8aa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [esi+0x31],bh
  4027ab:	(bad)  
  4027ac:	es pusha 
  4027ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027af:	jmp    0x4027b6
  4027b1:	sub    eax,DWORD PTR [ecx]
  4027b3:	lods   al,BYTE PTR ds:[esi]
  4027b4:	push   ecx
  4027b5:	mov    esi,DWORD PTR [ebp+edx*8-0x1edd772a]
  4027bc:	and    DWORD PTR [ecx-0x595e60c1],edx
  4027c2:	cmp    eax,0x7e0c60f6
  4027c7:	mov    cl,0x9c
  4027c9:	push   edx
  4027ca:	dec    ebx
  4027cb:	lods   al,BYTE PTR ds:[esi]
  4027cc:	out    0x8f,al
  4027ce:	in     al,dx
  4027cf:	inc    esi
  4027d0:	mov    ds:0x3d1143a9,eax
  4027d5:	shl    BYTE PTR [ecx],0x7
  4027d8:	rcl    DWORD PTR [edx],1
  4027da:	rcr    al,cl
  4027dc:	push   0xffffff8f
  4027de:	mov    dl,0x20
  4027e0:	inc    edi
  4027e1:	adc    ebx,edx
  4027e3:	cdq    
  4027e4:	or     DWORD PTR [edi-0x61],0xe8725e9f
  4027eb:	push   es
  4027ec:	pop    ss
  4027ed:	pop    esi
  4027ee:	xchg   edi,eax
  4027ef:	loop   0x402773
  4027f1:	mov    eax,0x6d573781
  4027f6:	stos   BYTE PTR es:[edi],al
  4027f7:	shl    BYTE PTR [ecx],1
  4027f9:	sbb    ch,BYTE PTR [esi+0x4062c5d8]
  4027ff:	mov    eax,ds:0xfa5a776b
  402804:	sub    DWORD PTR [ebx],edx
  402806:	sub    BYTE PTR [edx-0x26],0xcc
  40280a:	in     eax,0x55
  40280c:	icebp  
  40280d:	mov    ebx,0xbf0e106c
  402812:	cmp    edi,DWORD PTR [esi-0x5c]
  402815:	out    0xae,eax
  402817:	mov    dl,0x29
  402819:	fs fwait
  40281b:	sbb    ch,BYTE PTR [esi]
  40281d:	stc    
  40281e:	xor    ebx,DWORD PTR [ecx]
  402820:	stos   BYTE PTR es:[edi],al
  402821:	xor    ch,BYTE PTR [esi+ebp*8+0x326b0b4]
  402828:	popa   
  402829:	cmp    eax,ecx
  40282b:	pop    edx
  40282c:	stos   BYTE PTR es:[edi],al
  40282d:	pushf  
  40282e:	lods   al,BYTE PTR ds:[esi]
  40282f:	mov    dh,0xa0
  402831:	js     0x402876
  402833:	rcr    BYTE PTR [esi-0x69],0xd2
  402837:	out    0x89,eax
  402839:	push   ebp
  40283a:	test   al,0xbd
  40283c:	lea    edx,[ebx+eiz*4+0x70]
  402840:	sbb    edx,esp
  402842:	jbe    0x402828
  402844:	leave  
  402845:	ret    
  402846:	int    0xb2
  402848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402849:	or     DWORD PTR [ecx+0x13],0xffffffbf
  40284d:	sbb    al,0x4f
  40284f:	in     al,0x7d
  402851:	mov    ds:0xe8798cf8,eax
  402856:	fcomp  QWORD PTR [edx+0x62]
  402859:	cmp    ah,BYTE PTR [eax+0x33542a01]
  40285f:	jno    0x402808
  402861:	arpl   WORD PTR [ebp+0x20],di
  402864:	inc    eax
  402865:	mov    ebx,0xf7df6d4d
  40286a:	add    eax,0xdf5ccddb
  40286f:	push   0xffffffbc
  402871:	adc    BYTE PTR [edx+0x47],cl
  402874:	xchg   esi,eax
  402875:	cmp    eax,DWORD PTR [esi-0x2a]
  402878:	adc    bh,dh
  40287a:	fdivr  st(1),st
  40287c:	fisttp DWORD PTR [edx-0x3d]
  40287f:	pop    esp
  402880:	lds    esp,FWORD PTR [edx+0x24]
  402883:	mov    eax,0x20688313
  402888:	ret    
  402889:	fldcw  WORD PTR [ecx]
  40288b:	mov    bh,0x61
  40288d:	loope  0x4028f8
  40288f:	rcr    BYTE PTR [esi+0x34b9f0af],1
  402895:	adc    dh,bh
  402897:	sub    bl,BYTE PTR [edi-0x32a13c5d]
  40289d:	add    ebx,DWORD PTR [esi]
  40289f:	jb     0x4028d3
  4028a1:	aaa    
  4028a2:	iret   
  4028a3:	push   es
  4028a4:	and    eax,0x9b70108d
  4028a9:	cmp    al,0x5
  4028ab:	test   BYTE PTR [eax-0x1bdcd1e],dh
  4028b1:	jmp    0x5b5dbee2
  4028b6:	mov    edx,0xdaf6c961
  4028bb:	pop    edx
  4028bc:	jae    0x402856
  4028be:	cmp    BYTE PTR [eax+0x1],al
  4028c1:	mov    DWORD PTR [ecx-0x66456082],0xa877866a
  4028cb:	cdq    
  4028cc:	sbb    ah,BYTE PTR [esi]
  4028ce:	pop    ebx
  4028cf:	fs int3 
  4028d1:	test   al,0xcf
  4028d3:	loope  0x40290f
  4028d5:	sub    ebx,DWORD PTR [esi-0x13463c61]
  4028db:	(bad)  
  4028dc:	scas   al,BYTE PTR es:[edi]
  4028dd:	(bad)  
  4028de:	es xor eax,0x2621d830
  4028e4:	popf   
  4028e5:	jg     0x325a5a0f
  4028eb:	sub    eax,0x556b8c51
  4028f0:	call   0x7a9061b5
  4028f5:	retf   0x8566
  4028f8:	ins    BYTE PTR es:[edi],dx
  4028f9:	jae    0x4028b4
  4028fb:	rcl    DWORD PTR gs:[ebx-0x1],cl
  4028ff:	mov    eax,0xe65c803f
  402904:	lahf   
  402905:	ds pop ebp
  402907:	sub    al,0xc7
  402909:	mov    cl,0x4e
  40290b:	jl     0x4028ff
  40290d:	inc    edx
  40290e:	add    eax,0xbc85c362
  402913:	int3   
  402914:	push   0xf997b4ea
  402919:	sub    DWORD PTR [edx],eax
  40291b:	in     al,dx
  40291c:	sti    
  40291d:	imul   eax,DWORD PTR [eax-0x5f34b52e],0xffffffb9
  402924:	js     0x402984
  402926:	push   esi
  402927:	repnz add edi,DWORD PTR [ebx+0x3f222766]
  40292e:	adc    al,0xe2
  402930:	add    BYTE PTR [esi+0x4348a461],ah
  402936:	int3   
  402937:	jns    0x402900
  402939:	push   ebx
  40293a:	loopne 0x40291a
  40293c:	mov    ds:0xa459d57d,al
  402941:	stos   DWORD PTR es:[edi],eax
  402942:	sti    
  402943:	ret    
  402944:	or     BYTE PTR [edx+edi*8],cl
  402947:	sub    eax,0x595d77f5
  40294c:	clc    
  40294d:	shl    cl,0x66
  402950:	aaa    
  402951:	mov    edi,0x9b3f8487
  402956:	popa   
  402957:	lahf   
  402958:	or     BYTE PTR [edx-0x437e24f5],0x6e
  40295f:	pushf  
  402960:	cmp    DWORD PTR [edx+esi*1-0x2f9dca12],eax
  402967:	push   es
  402968:	add    al,0xf
  40296a:	jnp    0x4029c7
  40296c:	adc    BYTE PTR [edx-0x6748a298],dl
  402972:	stos   DWORD PTR es:[edi],eax
  402973:	cmp    DWORD PTR [eax-0xb587aad],edx
  402979:	mov    ebp,0x36f565f1
  40297e:	pop    edi
  40297f:	dec    edx
  402980:	sub    eax,eax
  402982:	sar    BYTE PTR [edx],1
  402984:	inc    ebx
  402985:	sub    DWORD PTR [ecx-0x1c11a6b3],edi
  40298b:	repnz pop ebp
  40298d:	add    DWORD PTR [edx+0x2af6f208],ecx
  402993:	out    dx,al
  402994:	xchg   ebp,eax
  402995:	push   0xd501a39d
  40299a:	sar    BYTE PTR [ecx+0x10],1
  40299d:	shl    DWORD PTR [ebx],1
  40299f:	cmp    BYTE PTR [ecx-0x3f5078af],al
  4029a5:	js     0x4029a1
  4029a7:	mov    esp,0xa4b321fd
  4029ac:	sti    
  4029ad:	pop    es
  4029ae:	sbb    eax,0x232c0e85
  4029b3:	call   0x13ca:0x4d81f9a1
  4029ba:	cdq    
  4029bb:	mov    dl,cl
  4029bd:	lods   al,BYTE PTR ds:[esi]
  4029be:	ins    BYTE PTR es:[edi],dx
  4029bf:	inc    ecx
  4029c0:	jb     0x402983
  4029c2:	jbe    0x4029b3
  4029c4:	not    dl
  4029c6:	jae    0x4029d9
  4029c8:	lgs    edi,FWORD PTR [ecx+0x13]
  4029cc:	xchg   esi,eax
  4029cd:	(bad)  
  4029ce:	fmul   DWORD PTR [ebx+0x76]
  4029d1:	ds inc esp
  4029d3:	fidiv  DWORD PTR [ecx+edi*2]
  4029d6:	pop    esi
  4029d7:	(bad)  
  4029d8:	lock mov esp,edx
  4029db:	sbb    al,0x4d
  4029dd:	scas   eax,DWORD PTR es:[edi]
  4029de:	test   al,0xea
  4029e0:	inc    esp
  4029e1:	cmp    eax,DWORD PTR fs:[edi+0x24]
  4029e5:	sub    bl,BYTE PTR [eax]
  4029e7:	jnp    0x4029ef
  4029e9:	popa   
  4029ea:	mov    al,0xcf
  4029ec:	xor    eax,0xab1f1312
  4029f1:	jns    0x402977
  4029f3:	outs   dx,DWORD PTR ds:[esi]
  4029f4:	(bad)  
  4029f5:	mov    eax,0xbd142788
  4029fa:	shl    DWORD PTR [esi+edx*8-0x652d3986],1
  402a01:	push   esi
  402a02:	(bad)  
  402a03:	ins    DWORD PTR es:[edi],dx
  402a04:	jmp    0x402a82
  402a06:	aaa    
  402a07:	cwde   
  402a08:	mov    bh,BYTE PTR [edi+0x27]
  402a0b:	lods   eax,DWORD PTR ds:[esi]
  402a0c:	mov    cl,0xa2
  402a0e:	cli    
  402a0f:	or     bh,cl
  402a11:	lds    edi,FWORD PTR [edx-0x5409c7a6]
  402a17:	jnp    0x402a8c
  402a19:	jge    0x402a52
  402a1b:	mov    ecx,0x31bdaa49
  402a20:	mov    ch,0xdd
  402a22:	bound  esp,QWORD PTR [edi-0x15]
  402a25:	ds (bad) 
  402a28:	xchg   esp,eax
  402a29:	sbb    eax,0x172619ae
  402a2e:	jge    0x402aaf
  402a30:	xchg   edx,eax
  402a31:	cmp    bh,BYTE PTR [edx-0x47]
  402a34:	sbb    al,0x1e
  402a36:	mov    BYTE PTR [ecx+0x6d3168d0],bh
  402a3c:	xchg   edx,eax
  402a3d:	(bad)  
  402a3e:	jmp    0x4029db
  402a40:	and    eax,0x2ba85304
  402a45:	int    0x16
  402a47:	stos   DWORD PTR es:[edi],eax
  402a48:	fldenv [edx+0x59e9e9ba]
  402a4e:	rol    DWORD PTR [ebp+0x68b371f1],0xa3
  402a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a56:	es sbb al,0x30
  402a59:	into   
  402a5a:	call   FWORD PTR [edi+0x36]
  402a5d:	mov    cl,0xd9
  402a5f:	jge    0x402a42
  402a61:	int    0x1a
  402a63:	xchg   ebp,eax
  402a64:	test   eax,0x4c8f8e49
  402a69:	loope  0x402ad9
  402a6b:	(bad)  
  402a6c:	mov    ds:0x14c80ac2,eax
  402a71:	nop
  402a72:	push   ebp
  402a73:	jae    0x402aac
  402a75:	popf   
  402a76:	mov    al,0xfa
  402a78:	mov    ah,0xf
  402a7a:	cmc    
  402a7b:	arpl   WORD PTR [ecx],dx
  402a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a7e:	mov    ds:0xef34ac9f,al
  402a83:	test   eax,0x69f43e44
  402a88:	sbb    al,0xe4
  402a8a:	jp     0x402a51
  402a8c:	jl     0x402b00
  402a8e:	in     al,0xf4
  402a90:	rcl    ebp,1
  402a92:	or     BYTE PTR [edi-0x1e59c095],0xc3
  402a99:	outs   dx,DWORD PTR ds:[esi]
  402a9a:	adc    al,0xbc
  402a9c:	jecxz  0x402b1a
  402a9e:	xchg   BYTE PTR [esi-0x2791f0d8],bh
  402aa4:	pop    esp
  402aa5:	mov    ecx,0xd629133d
  402aaa:	adc    eax,0xdc4bdad
  402aaf:	mov    dl,0xcc
  402ab1:	jae    0x402a8b
  402ab3:	mov    esp,0xcf83e5ed
  402ab8:	jl     0x402aff
  402aba:	mov    bh,0x77
  402abc:	mov    cs,WORD PTR [ebx]
  402abe:	dec    eax
  402abf:	push   edx
  402ac0:	push   eax
  402ac1:	es sbb eax,0x1527b36a
  402ac7:	aas    
  402ac8:	into   
  402ac9:	retf   
  402aca:	sub    esp,edx
  402acc:	(bad)  
  402acd:	cli    
  402ace:	push   0x966a1406
  402ad3:	ror    cl,cl
  402ad5:	xchg   ebp,eax
  402ad6:	sbb    BYTE PTR [edx-0x7c2555c3],ah
  402adc:	sahf   
  402add:	std    
  402ade:	sub    al,0xe5
  402ae0:	push   ebx
  402ae1:	cwde   
  402ae2:	push   edx
  402ae3:	sub    eax,0xca7f1021
  402ae8:	and    DWORD PTR [ebx+eiz*8+0x13ec3de9],esp
  402aef:	jae    0x402abd
  402af1:	out    dx,eax
  402af2:	stos   DWORD PTR es:[edi],eax
  402af3:	add    eax,DWORD PTR [ebx]
  402af5:	(bad)  
  402af6:	xor    eax,0x994d9f48
  402afb:	(bad)  
  402afc:	mov    al,ds:0x1019e482
  402b01:	scas   al,BYTE PTR es:[edi]
  402b02:	inc    esp
  402b03:	popf   
  402b04:	mov    cl,0x83
  402b06:	(bad)  
  402b07:	adc    BYTE PTR cs:[edx-0x31],ah
  402b0b:	pusha  
  402b0c:	pushf  
  402b0d:	jo     0x402b62
  402b0f:	cmp    al,0x49
  402b11:	pop    ecx
  402b12:	sub    esp,ecx
  402b14:	in     eax,0x8b
  402b16:	(bad)  
  402b17:	out    0x16,eax
  402b19:	(bad)  
  402b1a:	mov    BYTE PTR [edx+0x30],bh
  402b1d:	pop    edx
  402b1e:	test   al,0x1f
  402b20:	push   esi
  402b21:	call   0x4f720496
  402b26:	(bad)  
  402b27:	mov    ah,0xeb
  402b29:	fwait
  402b2a:	bound  esp,QWORD PTR [ecx+0x3cf730b2]
  402b30:	jbe    0x402b0a
  402b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b33:	or     BYTE PTR [ecx],ah
  402b35:	loope  0x402b51
  402b37:	dec    edi
  402b38:	mov    cl,0xc8
  402b3a:	mov    edi,0x4a64962f
  402b3f:	iret   
  402b40:	sub    eax,edi
  402b42:	jb     0x402b54
  402b44:	(bad)  
  402b45:	std    
  402b46:	pop    edx
  402b47:	sbb    al,bl
  402b49:	sahf   
  402b4a:	hlt    
  402b4b:	pop    esi
  402b4c:	loope  0x402baf
  402b4e:	sahf   
  402b4f:	in     al,0xb6
  402b51:	sbb    al,0x16
  402b53:	mov    al,0xcf
  402b55:	add    dl,ch
  402b57:	mov    ebp,0x99f39031
  402b5c:	mov    DWORD PTR [ebx],edx
  402b5e:	dec    ebp
  402b5f:	int3   
  402b60:	popf   
  402b61:	int3   
  402b62:	mov    ds:0x8f3b5aab,eax
  402b67:	test   BYTE PTR [ecx-0x3d],0x51
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x4283a7,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x422078
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428293,0x0
  402b94:	mov    edx,DWORD PTR ds:0x4283a7
  402b9a:	mov    DWORD PTR ds:0x42819f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428243
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42831b,ebx
  402bb6:	cmp    DWORD PTR ds:0x428293,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d94
  402bcc:	mov    edx,DWORD PTR ds:0x4282a3
  402bd2:	add    DWORD PTR ds:0x42827b,edx
  402bd8:	mov    DWORD PTR ds:0x42831f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42825b
  402be8:	mov    edx,DWORD PTR ds:0x42832b
  402bee:	sbb    DWORD PTR ds:0x4282b7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428273
  402bfa:	xor    DWORD PTR ds:0x428337,edx
  402c00:	and    edx,DWORD PTR ds:0x42830f
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42823b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281e3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42826b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422598
  402c34:	or     DWORD PTR ds:0x428163,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x42830b,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42839f,0x42837b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ebx+ebx*1-0x2b],0x59
  402c79:	stos   BYTE PTR es:[edi],al
  402c7a:	mov    dh,0xf4
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [ecx-0x15],bh
  402c84:	or     eax,0xae87b027
  402c89:	mov    fs,WORD PTR [edx+0x6495567f]
  402c8f:	pop    ds
  402c90:	call   0x2316:0x64e825a1
  402c97:	or     al,0x13
  402c99:	cwde   
  402c9a:	push   edi
  402c9b:	or     BYTE PTR [esi+ecx*1+0x77c89d33],dh
  402ca2:	mov    eax,ds:0x8a230489
  402ca7:	hlt    
  402ca8:	in     al,0x6d
  402caa:	lahf   
  402cab:	int3   
  402cac:	cmp    ebp,DWORD PTR [eax]
  402cae:	ins    BYTE PTR es:[edi],dx
  402caf:	fstp   QWORD PTR [edx-0x53d4fc44]
  402cb5:	idiv   DWORD PTR [edi+eiz*4]
  402cb8:	xlat   BYTE PTR ds:[ebx]
  402cb9:	pop    edx
  402cba:	loop   0x402c86
  402cbc:	push   es
  402cbd:	mov    cl,0x70
  402cbf:	inc    edi
  402cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc1:	or     BYTE PTR [edi],cl
  402cc3:	popa   
  402cc4:	xor    al,bl
  402cc6:	sub    eax,0x9e9a37c6
  402ccb:	adc    al,0x30
  402ccd:	sbb    BYTE PTR cs:[ebp-0x21fe7e1e],ch
  402cd4:	jo     0x402c76
  402cd6:	hlt    
  402cd7:	les    ecx,FWORD PTR [edi+0x34e32826]
  402cdd:	or     al,0x42
  402cdf:	or     DWORD PTR fs:[esi+0x7b],0xd1101dc8
  402ce7:	push   ebx
  402ce8:	aas    
  402ce9:	cmp    dl,BYTE PTR [edx+edi*8+0x4b]
  402ced:	mov    edi,0x3311663b
  402cf2:	mov    esp,0x1656d4e
  402cf7:	jnp    0x402c7f
  402cf9:	mov    edi,DWORD PTR [edi-0x6975b298]
  402cff:	icebp  
  402d00:	adc    BYTE PTR [ecx-0x80],0x6f
  402d04:	pushf  
  402d05:	inc    edx
  402d06:	inc    edi
  402d07:	aas    
  402d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d09:	das    
  402d0a:	push   ds
  402d0b:	leave  
  402d0c:	mov    al,0xbd
  402d0e:	test   bl,bh
  402d10:	dec    ebx
  402d11:	jge    0x402d25
  402d13:	mov    eax,0xa1bec0c5
  402d18:	sti    
  402d19:	and    BYTE PTR [edx],0x22
  402d1c:	mov    eax,0x5a8acbba
  402d21:	bound  esi,QWORD PTR [edx-0x4666df06]
  402d27:	call   0xcc1eac84
  402d2c:	call   0x1172584
  402d31:	(bad)  
  402d32:	adc    esi,DWORD PTR [esi]
  402d34:	xchg   ecx,eax
  402d35:	mov    ah,0x2f
  402d37:	cmp    al,0xe5
  402d39:	mov    edx,esp
  402d3b:	lock shl DWORD PTR [edi-0x65ef4c71],cl
  402d42:	push   ss
  402d43:	ja     0x402da1
  402d45:	adc    cl,BYTE PTR [esi]
  402d47:	(bad)
  402d4a:	dec    esi
  402d4b:	or     BYTE PTR [ebx-0x241077f4],dh
  402d51:	adc    ah,BYTE PTR [ebx+eax*2]
  402d54:	clc    
  402d55:	pop    eax
  402d56:	and    eax,0x41e62085
  402d5b:	test   al,0xf5
  402d5d:	xchg   esp,eax
  402d5e:	adc    cl,BYTE PTR [edx+0x2d87a78d]
  402d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d65:	push   ebp
  402d66:	clc    
  402d67:	jp     0x402d4d
  402d69:	and    eax,0xbbd8043e
  402d6e:	fwait
  402d6f:	lock jbe 0x402d2d
  402d72:	cmp    BYTE PTR [eax-0x5f],dh
  402d75:	inc    ebp
  402d76:	mov    edx,0x64750920
  402d7b:	sub    eax,0xffffff95
  402d7e:	xchg   ebp,eax
  402d7f:	sbb    DWORD PTR [eax],0x5b770047
  402d85:	jae    0x402dce
  402d87:	loop   0x402e01
  402d89:	pop    eax
  402d8a:	fs jb  0x402dbf
  402d8d:	outs   dx,BYTE PTR ds:[esi]
  402d8e:	aam    0xb3
  402d90:	sbb    eax,0x4ffc23b0
  402d95:	push   ss
  402d96:	sub    eax,0x8b3ccf2
  402d9b:	mov    ecx,0xc6a65e8a
  402da0:	mov    eax,0x75eeca88
  402da5:	(bad)  
  402da6:	out    0x39,al
  402da8:	in     al,0xfb
  402daa:	pop    ds
  402dab:	hlt    
  402dac:	add    eax,DWORD PTR [esi+0x257c811a]
  402db2:	ret    
  402db3:	stos   BYTE PTR es:[edi],al
  402db4:	les    ebx,FWORD PTR [eax-0x42f38ad9]
  402dba:	push   es
  402dbb:	fsubp  st(1),st
  402dbd:	daa    
  402dbe:	gs pop ds
  402dc0:	push   ebx
  402dc1:	cld    
  402dc2:	in     al,dx
  402dc3:	int    0xe0
  402dc5:	adc    eax,0xfe79e423
  402dca:	test   al,0x7a
  402dcc:	jp     0x402e36
  402dce:	shr    DWORD PTR [edx+0xb653d58],1
  402dd4:	xchg   esi,eax
  402dd5:	jle    0x402da3
  402dd7:	inc    ebp
  402dd8:	and    ch,dl
  402dda:	jbe    0x402df7
  402ddc:	xor    ecx,0x35
  402ddf:	inc    esp
  402de0:	sub    dl,BYTE PTR [ebx]
  402de2:	(bad)  
  402de3:	mov    es,esi
  402de5:	cdq    
  402de6:	push   esi
  402de7:	rcr    DWORD PTR [edx+0x22],cl
  402dea:	outs   dx,DWORD PTR ds:[esi]
  402deb:	sub    al,0x8e
  402ded:	mov    edi,eax
  402def:	adc    BYTE PTR [esp+0x7004c2e4],0xa7
  402df7:	pop    ecx
  402df8:	xor    BYTE PTR [edx],ch
  402dfa:	sub    al,0x16
  402dfc:	push   ss
  402dfd:	jo     0x402dde
  402dff:	lahf   
  402e00:	outs   dx,DWORD PTR ds:[esi]
  402e01:	dec    esi
  402e02:	or     BYTE PTR [edi-0x2f143fd7],dl
  402e08:	cmp    DWORD PTR [esi],0x67d68721
  402e0e:	loop   0x402de5
  402e10:	push   ss
  402e11:	cs sbb al,0xcf
  402e14:	dec    esp
  402e15:	jne    0x402d9d
  402e17:	push   0xc71e1261
  402e1c:	jl     0x402e1d
  402e1e:	mov    al,ds:0x9018a555
  402e23:	test   BYTE PTR [ecx+0x6fc6faf9],0xd5
  402e2a:	aam    0xb3
  402e2c:	mov    ch,0xc1
  402e2e:	cs jb  0x402e52
  402e31:	(bad)
  402e34:	dec    esp
  402e35:	push   0x3ffdfad2
  402e3a:	adc    edi,DWORD PTR [ebx]
  402e3c:	jmp    0x4e50c3fb
  402e41:	cli    
  402e42:	dec    ebp
  402e43:	sbb    ah,BYTE PTR [edx+0x9]
  402e46:	aad    0x44
  402e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e49:	push   0xc06c1066
  402e4e:	xor    al,0xc3
  402e50:	cs jbe 0x402e6f
  402e53:	gs stos BYTE PTR es:[edi],al
  402e55:	or     bl,BYTE PTR [ecx]
  402e57:	loope  0x402e17
  402e59:	or     al,0x91
  402e5b:	push   0x48
  402e5d:	add    DWORD PTR [ebx],ecx
  402e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e60:	xchg   ecx,eax
  402e61:	dec    edx
  402e62:	pop    ss
  402e63:	mov    edx,0x73e9dd1e
  402e68:	adc    eax,0xca34f4c0
  402e6d:	pushf  
  402e6e:	in     eax,0x7
  402e70:	neg    DWORD PTR [esi+0x2bfc2cef]
  402e76:	std    
  402e77:	push   0xffffff8d
  402e79:	imul   esi,DWORD PTR [ebx],0xee543687
  402e7f:	je     0x402e82
  402e81:	mov    dh,BYTE PTR [ebx]
  402e83:	inc    ecx
  402e84:	lahf   
  402e85:	ret    0x9973
  402e88:	(bad)  
  402e89:	mov    ss,WORD PTR [ebx-0x3e]
  402e8c:	inc    DWORD PTR [esi+0x7f]
  402e8f:	cdq    
  402e90:	jbe    0x402ed4
  402e92:	sbb    DWORD PTR [eax-0x30673b6f],esi
  402e98:	ins    DWORD PTR es:[edi],dx
  402e99:	xchg   ecx,eax
  402e9a:	bound  esi,QWORD PTR [edi]
  402e9c:	dec    ecx
  402e9d:	clc    
  402e9e:	and    DWORD PTR [edx-0x1c],edi
  402ea1:	fldcw  WORD PTR [esi-0x20]
  402ea4:	mov    esi,0x600e2571
  402ea9:	mov    eax,ds:0x43714551
  402eae:	(bad)  
  402eb0:	sbb    eax,0x1dbc6cd
  402eb5:	xor    al,0xa8
  402eb7:	xor    DWORD PTR [ebx-0x136ee61d],edi
  402ebd:	xchg   esp,eax
  402ebe:	xor    esp,ebx
  402ec0:	js     0x402e95
  402ec2:	push   ds
  402ec3:	test   eax,0x459ee360
  402ec8:	jns    0x402e7a
  402eca:	call   0x8080:0x9515819a
  402ed1:	add    al,0x7f
  402ed3:	adc    ch,0x78
  402ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed7:	mov    ss,ebx
  402ed9:	call   FWORD PTR [eax-0x56]
  402edc:	xor    al,0x8
  402ede:	ja     0x402e94
  402ee0:	cld    
  402ee1:	xor    al,0xea
  402ee3:	cmp    cl,dh
  402ee5:	hlt    
  402ee6:	pusha  
  402ee7:	arpl   WORD PTR [edx+0x20],sp
  402eea:	loope  0x402f4a
  402eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eed:	jge    0x402f35
  402eef:	popa   
  402ef0:	ds in  eax,dx
  402ef2:	sub    eax,0xe8dcbb6c
  402ef7:	fs mov ebp,0xaca5fc3e
  402efd:	xor    BYTE PTR [ecx+edi*2-0x3ce6283f],dl
  402f04:	add    al,BYTE PTR [esi-0xf9cb0b2]
  402f0a:	adc    ebp,DWORD PTR [edi+0x65]
  402f0d:	push   edi
  402f0e:	jp     0x402f07
  402f10:	repnz adc BYTE PTR [edi+edx*2],al
  402f14:	inc    eax
  402f15:	add    DWORD PTR ds:0x23510c2a,ecx
  402f1b:	adc    al,0x14
  402f1d:	ins    DWORD PTR es:[edi],dx
  402f1e:	mov    bl,0xb
  402f20:	add    ch,BYTE PTR [eax-0x12]
  402f23:	(bad)  
  402f24:	icebp  
  402f25:	stc    
  402f26:	adc    BYTE PTR [edx+edx*1-0x11],bl
  402f2a:	jne    0x402ee1
  402f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f2d:	inc    ecx
  402f2e:	repz add ecx,DWORD PTR [edx]
  402f31:	sbb    eax,0x95cecf6
  402f36:	icebp  
  402f37:	stos   DWORD PTR es:[edi],eax
  402f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f39:	fwait
  402f3a:	push   edi
  402f3b:	mov    ds:0xb8b0e21d,eax
  402f40:	loope  0x402f1e
  402f42:	mov    edx,0xfca603af
  402f47:	cmp    ah,ch
  402f49:	scas   al,BYTE PTR es:[edi]
  402f4a:	shl    al,1
  402f4c:	xor    BYTE PTR [edx+0x6474a001],ah
  402f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f53:	sub    eax,0xf5f379f2
  402f58:	jmp    FWORD PTR [edi-0xc]
  402f5b:	nop
  402f5c:	dec    eax
  402f5d:	jnp    0x402f19
  402f5f:	(bad)  
  402f60:	popa   
  402f61:	xchg   dl,dh
  402f63:	push   ebp
  402f64:	clc    
  402f65:	lds    esi,FWORD PTR [eax+0x48549f3c]
  402f6b:	daa    
  402f6c:	outs   dx,DWORD PTR ds:[esi]
  402f6d:	jae    0x402f29
  402f6f:	test   al,0xe2
  402f71:	jle    0x402f0d
  402f73:	lock jns 0x402f2e
  402f76:	jmp    0x6b6f278a
  402f7b:	fidiv  DWORD PTR [edi]
  402f7d:	sahf   
  402f7e:	adc    DWORD PTR [ecx],ebp
  402f80:	inc    ebx
  402f81:	jo     0x402fd2
  402f83:	cmp    ecx,esp
  402f85:	sbb    eax,0x76c5b23
  402f8a:	dec    edi
  402f8b:	inc    eax
  402f8c:	dec    esp
  402f8d:	or     ebp,ebp
  402f8f:	pusha  
  402f90:	inc    ecx
  402f91:	mov    WORD PTR [eax+0xe],ss
  402f94:	call   0x1e0f1057
  402f99:	pusha  
  402f9a:	in     al,0xed
  402f9c:	mov    ds:0x42c8d6db,eax
  402fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fa2:	pop    edi
  402fa3:	xor    DWORD PTR [esi-0x1d],eax
  402fa6:	pop    edx
  402fa7:	adc    DWORD PTR [edi],ebx
  402fa9:	push   ebx
  402faa:	cmp    ecx,esi
  402fac:	in     eax,0xaa
  402fae:	or     eax,0xfdc2d930
  402fb3:	jnp    0x402fa6
  402fb5:	psadbw mm3,mm2
  402fb8:	pop    eax
  402fb9:	inc    ebp
  402fba:	dec    esp
  402fbb:	stos   DWORD PTR es:[edi],eax
  402fbc:	rol    BYTE PTR [esi],cl
  402fbe:	and    esi,DWORD PTR [esi-0x3e830523]
  402fc4:	fdiv   DWORD PTR [esi-0x6e7930f4]
  402fca:	inc    ecx
  402fcb:	sbb    DWORD PTR [ebx+0x7697d58c],esi
  402fd1:	push   ebp
  402fd2:	(bad)  
  402fd3:	mov    esp,0x60327c70
  402fd8:	jae    0x402fcb
  402fda:	loopne 0x403017
  402fdc:	xor    al,0x37
  402fde:	out    0xb0,al
  402fe0:	ror    BYTE PTR ds:0x36a81307,1
  402fe6:	and    DWORD PTR [ebx],edx
  402fe8:	test   DWORD PTR [ebp-0x66],ebx
  402feb:	push   ebx
  402fec:	jne    0x40305f
  402fee:	xor    BYTE PTR [edx-0x3fb9f2e],dl
  402ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff5:	cmp    al,BYTE PTR [ebx+0x7e298600]
  402ffb:	mov    DWORD PTR [ebp-0x55],ebx
  402ffe:	inc    edx
  402fff:	cmc    
  403000:	jg     0x403010
  403002:	and    al,0x77
  403004:	sub    BYTE PTR [esi-0x1a67d824],bh
  40300a:	popa   
  40300b:	dec    ebp
  40300c:	js     0x402fda
  40300e:	arpl   WORD PTR [edi-0x76],sp
  403011:	xor    eax,edx
  403013:	les    ecx,FWORD PTR [edx]
  403015:	outs   dx,DWORD PTR ds:[esi]
  403016:	lods   al,BYTE PTR ds:[esi]
  403017:	sub    BYTE PTR [ecx+0x54],dl
  40301a:	fsubr  DWORD PTR [ecx]
  40301c:	pop    ebp
  40301d:	inc    ecx
  40301e:	loopne 0x40300f
  403020:	xor    BYTE PTR [edi+ebx*4-0x2],ch
  403024:	ss jo  0x40308c
  403027:	mov    al,0xa9
  403029:	mov    ch,0x2a
  40302b:	das    
  40302c:	popf   
  40302d:	xorps  xmm3,XMMWORD PTR [edx+eax*2+0x49ee7454]
  403035:	imul   edx,edi,0xfffffffe
  403038:	sbb    ah,BYTE PTR [edi-0x23e511d0]
  40303e:	scas   eax,DWORD PTR es:[edi]
  40303f:	pushf  
  403040:	or     al,0x47
  403042:	mov    bh,0x23
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x4282ab,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x4283af,0x0
  403071:	mov    DWORD PTR ds:0x4283b3,edx
  403077:	mov    DWORD PTR ds:0x4282fb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x4283a3
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42816f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x4283af,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428db4
  4030b1:	mov    DWORD PTR ds:0x42825b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42827f
  4030c1:	or     edx,DWORD PTR ds:0x42831b
  4030c7:	add    edx,DWORD PTR ds:0x42819f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x4283a7,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42832f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428393
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283b3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42816b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283b7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x40317f
  403121:	add    eax,0xec3d7c73
  403126:	sbb    BYTE PTR [eax],bl
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [esi-0x52],ah
  40312e:	mov    esi,ebx
  403130:	jmp    0x67055c0f
  403135:	inc    ebp
  403136:	add    al,0xe9
  403138:	mov    eax,0xafc14ee
  40313d:	in     eax,0xeb
  40313f:	mov    dl,0x3d
  403141:	push   0x11
  403143:	les    ebp,FWORD PTR [eax-0x125e19f0]
  403149:	add    BYTE PTR [ebp-0x52],bh
  40314c:	push   ecx
  40314d:	jmp    0x6cf4f92f
  403152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403153:	push   esp
  403154:	mov    ah,0xa9
  403156:	out    dx,eax
  403157:	outs   dx,DWORD PTR ds:[esi]
  403158:	stos   BYTE PTR es:[edi],al
  403159:	inc    esp
  40315a:	out    0xff,eax
  40315c:	shl    DWORD PTR ds:0x8856f502,cl
  403162:	add    eax,0x8f33065a
  403167:	xchg   esp,eax
  403168:	aad    0x4f
  40316a:	shr    BYTE PTR [ebp+0x2bc9287a],1
  403170:	outs   dx,DWORD PTR ds:[esi]
  403171:	cmp    al,0x64
  403173:	sbb    eax,0x60141a6c
  403178:	pop    esi
  403179:	adc    BYTE PTR [edi],cl
  40317b:	add    esp,DWORD PTR ds:0x175e95ee
  403181:	nop
  403182:	or     al,BYTE PTR [eax-0x59dba8ff]
  403188:	add    dh,BYTE PTR [ebx-0x66ad9260]
  40318e:	adc    eax,0x15ce559d
  403193:	jbe    0x403166
  403195:	sbb    DWORD PTR [edx],edi
  403197:	adc    edx,DWORD PTR [esi]
  403199:	or     esp,DWORD PTR [edi-0x184ff356]
  40319f:	or     al,0x98
  4031a1:	cwde   
  4031a2:	pushf  
  4031a3:	sub    cl,BYTE PTR gs:[ecx]
  4031a6:	lock adc DWORD PTR [ecx*8-0x7308ba2f],eax
  4031ae:	dec    eax
  4031af:	outs   dx,BYTE PTR ds:[esi]
  4031b0:	les    edx,FWORD PTR [edx]
  4031b2:	xchg   BYTE PTR [ecx-0x7e],dl
  4031b5:	fwait
  4031b6:	cmp    DWORD PTR [edi-0xcd2c603],0x3
  4031bd:	loopne 0x40322e
  4031bf:	jl     0x4031ca
  4031c1:	in     eax,0xdc
  4031c3:	xor    DWORD PTR [edi-0x4153e966],ebp
  4031c9:	pop    es
  4031ca:	call   0xe8b43902
  4031cf:	leave  
  4031d0:	mov    eax,0xc052d262
  4031d5:	xor    BYTE PTR [ecx],cl
  4031d7:	retf   
  4031d8:	xor    ecx,edx
  4031da:	sub    ebp,esi
  4031dc:	jne    0x403189
  4031de:	imul   eax,edx,0xc5a56a61
  4031e4:	mov    cl,BYTE PTR [edi]
  4031e6:	je     0x403215
  4031e8:	call   0x8210f7f7
  4031ed:	fcmovb st,st(2)
  4031ef:	push   edi
  4031f0:	cs icebp 
  4031f2:	ja     0x4031ca
  4031f4:	xchg   esp,eax
  4031f5:	call   eax
  4031f7:	ret    0x3fd5
  4031fa:	std    
  4031fb:	jecxz  0x403242
  4031fd:	push   ss
  4031fe:	test   al,0x1c
  403200:	outs   dx,BYTE PTR ds:[esi]
  403201:	push   eax
  403202:	or     BYTE PTR [ebp+0x28f00ac6],dh
  403208:	mov    ch,0x5a
  40320a:	sets   BYTE PTR [ebp+0x54]
  40320e:	adc    eax,0xc7e8cb13
  403213:	inc    esi
  403214:	xor    bh,BYTE PTR [edx+ebp*8+0x5e0a4886]
  40321b:	dec    ebp
  40321c:	mov    esp,0x629a978d
  403221:	pop    ebp
  403222:	push   edi
  403223:	fwait
  403224:	push   0xfffffffc
  403226:	xchg   edi,eax
  403227:	jb     0x40327e
  403229:	(bad)  
  40322a:	jmp    0x9d7f3028
  40322f:	cli    
  403230:	pop    esp
  403231:	aaa    
  403232:	stos   BYTE PTR es:[edi],al
  403233:	jo     0x40328d
  403235:	cli    
  403236:	jl     0x4032ad
  403238:	sbb    al,dh
  40323a:	or     eax,0x5b879c1
  40323f:	push   es
  403240:	xchg   al,bh
  403242:	sub    eax,0xda3ebe3e
  403247:	lock or ebp,DWORD PTR [edi+eiz*4-0x37]
  40324c:	sub    eax,0x8b88ad31
  403251:	outs   dx,BYTE PTR ds:[esi]
  403252:	call   0x4c5dc7ed
  403257:	cmp    eax,0xd780453d
  40325c:	sar    DWORD PTR [ecx],cl
  40325e:	cs add eax,0xd07f349c
  403264:	dec    ebp
  403265:	push   eax
  403266:	repnz stc 
  403268:	mov    al,ds:0x3567c64b
  40326d:	pop    eax
  40326e:	or     esi,ebp
  403270:	and    eax,0x284317a8
  403275:	bound  edx,QWORD PTR fs:[ebp+0x22]
  403279:	xchg   ebp,eax
  40327a:	push   ss
  40327b:	mov    al,0xfc
  40327d:	addr16 in eax,dx
  40327f:	cmp    BYTE PTR [ebx-0x37],cl
  403282:	and    ecx,DWORD PTR [edx-0x4c]
  403285:	and    DWORD PTR [eax+0x51],ebx
  403288:	xchg   esp,eax
  403289:	loop   0x40321d
  40328b:	add    BYTE PTR [ecx+0x391c5b92],dh
  403291:	or     al,0x88
  403293:	xchg   esi,eax
  403294:	daa    
  403295:	fwait
  403296:	out    0x46,eax
  403298:	sub    dl,bh
  40329a:	sub    dl,BYTE PTR [ebx]
  40329c:	cmp    eax,DWORD PTR [eax+0x40ee7f0f]
  4032a2:	inc    eax
  4032a3:	aad    0xc4
  4032a5:	dec    ebx
  4032a6:	int3   
  4032a7:	call   FWORD PTR [edx]
  4032a9:	add    esi,DWORD PTR [edi+0x2d]
  4032ac:	sbb    eax,DWORD PTR [edx+0x678b313a]
  4032b2:	pop    esp
  4032b3:	mov    esp,0xd23b54d1
  4032b8:	test   BYTE PTR [edx+0x6d],ah
  4032bb:	jno    0x4032e9
  4032bd:	xor    al,0xc4
  4032bf:	imul   eax,DWORD PTR [esi],0x2c
  4032c2:	(bad)
  4032c6:	lock (bad) 
  4032c9:	xlat   BYTE PTR ds:[ebx]
  4032ca:	dec    edx
  4032cb:	xchg   BYTE PTR [edx+0x7588f170],bh
  4032d1:	pop    ebp
  4032d2:	arpl   WORD PTR [edx+0x47],si
  4032d5:	jno    0x403330
  4032d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d8:	or     BYTE PTR [eax],al
  4032da:	push   cs
  4032db:	stos   DWORD PTR es:[edi],eax
  4032dc:	pop    eax
  4032dd:	pop    es
  4032de:	aam    0x67
  4032e0:	das    
  4032e1:	push   ss
  4032e2:	iret   
  4032e3:	jg     0x40332e
  4032e5:	push   esi
  4032e6:	popa   
  4032e7:	cmp    DWORD PTR [esi-0x3a044e99],esi
  4032ed:	mov    ebx,0xef8a73b9
  4032f2:	call   0x88c5:0xd1d7fb76
  4032f9:	jecxz  0x403347
  4032fb:	cmc    
  4032fc:	(bad)
  403300:	es adc eax,0x18c55b3d
  403306:	outs   dx,DWORD PTR ds:[esi]
  403307:	ins    BYTE PTR es:[edi],dx
  403308:	inc    ebp
  403309:	inc    ecx
  40330a:	clc    
  40330b:	dec    ecx
  40330c:	adc    DWORD PTR [ecx+eiz*1-0x5ceccd4d],eax
  403313:	or     ebx,DWORD PTR [esi-0x24]
  403316:	jg     0x4032b5
  403318:	mov    es,WORD PTR [edx]
  40331a:	loopne 0x403334
  40331c:	mov    ebp,DWORD PTR [ecx*8-0xa2a5309]
  403323:	and    eax,0x7eb44037
  403328:	sbb    al,0x2e
  40332a:	xor    DWORD PTR [ecx],0xffffffff
  40332d:	or     BYTE PTR [ebx-0x1d],ch
  403330:	cmp    ecx,DWORD PTR [esi-0x55]
  403333:	and    DWORD PTR [eax-0x3703d857],eax
  403339:	lahf   
  40333a:	pop    eax
  40333b:	mov    ah,0x62
  40333d:	in     eax,dx
  40333e:	hlt    
  40333f:	(bad)  
  403340:	xchg   esp,eax
  403341:	and    BYTE PTR [ebx-0x1d],dh
  403344:	ss mov ah,0xb6
  403347:	inc    edi
  403348:	out    dx,eax
  403349:	rcl    DWORD PTR [esi],cl
  40334b:	mov    ebp,0x3809b404
  403350:	(bad)  
  403351:	xlat   BYTE PTR ds:[ebx]
  403352:	aad    0x95
  403354:	repz scas eax,DWORD PTR es:[edi]
  403356:	sbb    BYTE PTR [edx],ch
  403358:	sbb    eax,0x905aea99
  40335d:	xchg   BYTE PTR [edi],bl
  40335f:	xchg   ecx,eax
  403360:	lods   al,BYTE PTR ds:[esi]
  403361:	call   0xc6fb308f
  403366:	sub    eax,0xabdea598
  40336b:	mov    fs,WORD PTR [ebx-0x4622b3fe]
  403371:	push   ds
  403372:	shl    cl,0x47
  403375:	ss sbb ecx,ebx
  403378:	pushf  
  403379:	out    dx,eax
  40337a:	js     0x4033ba
  40337c:	xor    eax,0x7d52111a
  403381:	rcl    DWORD PTR [ebp-0x17],cl
  403384:	and    al,0x7e
  403386:	jbe    0x403406
  403388:	sub    DWORD PTR [edi],eax
  40338a:	in     al,dx
  40338b:	jl     0x403397
  40338d:	mov    edx,0x7b5fe6bf
  403392:	mov    edx,0x8ef96cca
  403397:	inc    eax
  403398:	stos   BYTE PTR es:[edi],al
  403399:	fcomp  DWORD PTR [edi-0x1d]
  40339c:	(bad)  
  40339d:	lods   eax,DWORD PTR ds:[esi]
  40339e:	add    DWORD PTR [ebx+0x3e],edi
  4033a1:	jl     0x4033d0
  4033a3:	sahf   
  4033a4:	inc    esp
  4033a5:	repnz xor al,0x24
  4033a8:	mov    eax,0x1c3278f
  4033ad:	mov    WORD PTR [esp+esi*2+0x663300a2],?
  4033b4:	call   0x3bddda86
  4033b9:	es push cs
  4033bb:	push   edx
  4033bc:	in     al,0x93
  4033be:	sub    al,0xcc
  4033c0:	inc    edx
  4033c1:	fcmovnbe st,st(0)
  4033c3:	addr16 js 0x403365
  4033c6:	inc    edi
  4033c7:	pushw  ss
  4033c9:	xor    al,0x6f
  4033cb:	pushf  
  4033cc:	pop    es
  4033cd:	dec    esi
  4033ce:	out    dx,eax
  4033cf:	rol    al,1
  4033d1:	push   ss
  4033d2:	pop    ebp
  4033d3:	jg     0x4033e2
  4033d5:	jp     0x4033ef
  4033d7:	mov    WORD PTR ds:0xe165dc4b,?
  4033dd:	arpl   WORD PTR [edi+0x40],si
  4033e0:	into   
  4033e1:	and    esp,esi
  4033e3:	adc    al,BYTE PTR [eax-0x44]
  4033e6:	pop    esp
  4033e7:	cmp    dl,BYTE PTR [ebp+0x61]
  4033ea:	pop    ss
  4033eb:	in     eax,dx
  4033ec:	das    
  4033ed:	lea    ebx,[ebx-0x64]
  4033f0:	jmp    0x5b4e:0xea30b371
  4033f7:	(bad)  
  4033f8:	pop    eax
  4033f9:	push   ds
  4033fa:	jl     0x4033ae
  4033fc:	sbb    eax,0x31422551
  403401:	pop    edx
  403402:	ror    BYTE PTR [ebx-0x4f0f182],1
  403408:	xchg   BYTE PTR [edi+0x1f],cl
  40340b:	cld    
  40340c:	add    al,0x2d
  40340e:	jmp    0x41d9166f
  403413:	jp     0x403427
  403415:	mov    WORD PTR [eax],cs
  403417:	sahf   
  403418:	or     al,0x39
  40341a:	cmp    eax,0x8d0bc49b
  40341f:	jo     0x4033ce
  403421:	icebp  
  403422:	pop    ss
  403423:	mov    al,ds:0x584c8ad4
  403428:	out    dx,eax
  403429:	lds    ebp,FWORD PTR [eax]
  40342b:	pop    ds
  40342c:	mov    ecx,0x2331fbb
  403431:	mov    al,0xf0
  403433:	adc    eax,0x98354b87
  403438:	mov    es,WORD PTR [edi+0x2c36c6bd]
  40343e:	repnz mov ax,WORD PTR [edi+0x2517b82c]
  403446:	je     0x4034aa
  403448:	mov    ebx,0xb416b39a
  40344d:	mov    bl,0xa7
  40344f:	fidivr DWORD PTR [ebx]
  403451:	dec    BYTE PTR [ebp-0x28700bd5]
  403457:	mov    bh,bl
  403459:	inc    ebp
  40345a:	xor    DWORD PTR [ebx],esi
  40345c:	push   ss
  40345d:	mov    WORD PTR [esi-0x10ddca07],?
  403463:	and    DWORD PTR [ebx+0x1a],ebp
  403466:	mov    esi,0x407ac3be
  40346b:	jg     0x403445
  40346d:	aaa    
  40346e:	pop    esp
  40346f:	jae    0x40341e
  403471:	xchg   esp,eax
  403472:	ret    
  403473:	jnp    0x4034d2
  403475:	inc    edi
  403476:	mov    bh,0xf7
  403478:	pop    ebp
  403479:	pop    ebx
  40347a:	xor    eax,0xffffff8b
  40347d:	adc    al,0xe
  40347f:	dec    edi
  403480:	test   DWORD PTR [ecx-0x26],esp
  403483:	jg     0x4034b1
  403485:	sbb    esi,DWORD PTR [eax+0x71]
  403488:	fnstsw WORD PTR [ebx+0x34a70a06]
  40348e:	cmp    dh,cl
  403490:	pop    eax
  403491:	mov    ds:0x70e75192,al
  403496:	add    bh,cl
  403498:	or     al,0x4e
  40349a:	push   esp
  40349b:	pop    edi
  40349c:	ficom  DWORD PTR [ecx]
  40349e:	mov    bl,BYTE PTR [edi]
  4034a0:	jmp    0x40345e
  4034a2:	add    DWORD PTR [edx+0x7b],edx
  4034a5:	ss (bad) 
  4034a7:	jmp    0x8711:0xabfb0d19
  4034ae:	fcom   QWORD PTR [eax+edx*4-0x1af65e9d]
  4034b5:	mov    edi,0x3bddb9f1
  4034ba:	div    DWORD PTR [ebp+0x69e2ff4b]
  4034c0:	jae    0x403463
  4034c2:	jecxz  0x403519
  4034c4:	rcr    DWORD PTR [edx+0x25a9c121],1
  4034ca:	or     eax,DWORD PTR [esi]
  4034cc:	pop    esi
  4034cd:	mov    ds:0x705ef257,al
  4034d2:	cmp    dh,BYTE PTR [edx]
  4034d4:	loop   0x4034e7
  4034d6:	sbb    eax,0xb0fb9e7b
  4034db:	ror    BYTE PTR [edi],cl
  4034dd:	(bad)  
  4034de:	lock scas al,BYTE PTR es:[edi]
  4034e0:	xor    eax,DWORD PTR [ecx+0x62ab2965]
  4034e6:	out    0x51,eax
  4034e8:	mov    eax,ds:0x2c47d6ee
  4034ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428173,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x4d],ch
  403514:	cwde   
  403515:	push   cs
  403516:	jle    0x4034db
  403518:	in     eax,0x18
  40351a:	sbb    BYTE PTR [esi-0x50e7e7ee],bl
  403520:	(bad)  
  403522:	stc    
  403523:	dec    esi
  403524:	xchg   esi,eax
  403525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403526:	test   BYTE PTR [ebp-0x15b5ca4a],dh
  40352c:	shr    BYTE PTR [esi+0x51e98e7d],0x7d
  403533:	push   0xc154ad40
  403538:	or     bh,BYTE PTR [esi-0x10]
  40353b:	ja     0x4034c9
  40353d:	xchg   esp,eax
  40353e:	dec    eax
  40353f:	push   edx
  403540:	mov    al,ds:0xd6780b9c
  403545:	js     0x4035c4
  403547:	mov    ch,0xac
  403549:	adc    BYTE PTR [esi],ah
  40354b:	pop    eax
  40354c:	or     eax,0x3bd2ed3b
  403551:	cmp    DWORD PTR [edx+esi*1],esi
  403554:	add    BYTE PTR [ecx+0x25],cl
  403557:	out    dx,eax
  403558:	mov    bh,BYTE PTR [ecx]
  40355a:	add    eax,0x42f56929
  40355f:	jbe    0x403510
  403561:	inc    edi
  403562:	dec    edx
  403563:	in     eax,dx
  403564:	hlt    
  403565:	test   eax,0xcdbacdc0
  40356a:	lea    ebx,[edi]
  40356c:	jl     0x40357e
  40356e:	inc    esp
  40356f:	pop    edi
  403570:	es lahf 
  403572:	cld    
  403573:	fild   WORD PTR [esi+0x11]
  403577:	daa    
  403578:	mov    bh,0xa3
  40357a:	xchg   edi,eax
  40357b:	mov    bl,0x36
  40357d:	in     eax,0xc1
  40357f:	retf   0x4210
  403582:	xchg   ecx,eax
  403583:	xchg   edi,eax
  403584:	out    0xcc,al
  403586:	jne    0x4035b8
  403588:	mov    dh,0x28
  40358a:	call   0x8ee667e6
  40358f:	outs   dx,DWORD PTR ds:[esi]
  403591:	mov    dl,0xbf
  403593:	mov    eax,0xbed65e87
  403598:	xchg   esi,eax
  403599:	arpl   dx,sp
  40359b:	or     edx,eax
  40359d:	fistp  WORD PTR [ebp+ebx*8-0x66b94dfc]
  4035a4:	jecxz  0x4035da
  4035a6:	loop   0x4035b3
  4035a8:	xor    BYTE PTR [edx],ah
  4035aa:	or     DWORD PTR [edi+0x6456f59a],0x15
  4035b1:	popa   
  4035b2:	jle    0x40354d
  4035b4:	ja     0x40355c
  4035b6:	fcomip st,st(2)
  4035b8:	add    esp,DWORD PTR [ebx+0x4926f14f]
  4035be:	and    BYTE PTR [edx-0x43],dh
  4035c1:	cwde   
  4035c2:	xor    eax,0xb28b499a
  4035c7:	mov    dh,0xcb
  4035c9:	inc    esi
  4035ca:	fbld   TBYTE PTR [esi]
  4035cc:	mov    al,ds:0x39503ba8
  4035d1:	pop    edi
  4035d2:	mov    dh,0x64
  4035d4:	xchg   BYTE PTR [edx+0x7f3dd897],dh
  4035da:	pop    ebp
  4035db:	mov    WORD PTR [ecx],?
  4035dd:	cmc    
  4035de:	jb     0x403564
  4035e0:	fstp   TBYTE PTR [ebx+ebp*8-0x6f146235]
  4035e7:	push   ds
  4035e8:	push   cs
  4035e9:	lds    esp,FWORD PTR [esi+0x5e089efd]
  4035ef:	in     al,0x8f
  4035f1:	cmp    bh,BYTE PTR [ebx+ebp*2-0xffcedf6]
  4035f8:	fimul  WORD PTR [ebx+ebp*4+0x22a515c]
  4035ff:	call   DWORD PTR [ecx+0x3c4800cb]
  403605:	daa    
  403606:	in     al,dx
  403607:	pop    esi
  403608:	jl     0x40360c
  40360a:	or     ecx,ebx
  40360c:	jnp    0x4035c3
  40360e:	leave  
  40360f:	repz (bad) 
  403611:	adc    ebx,DWORD PTR [eax-0x35]
  403614:	int    0x4d
  403616:	cmp    al,0x25
  403618:	mov    al,0xdf
  40361a:	mov    eax,DWORD PTR [eax+ebx*1]
  40361d:	mov    ebx,0xc5a2c67e
  403622:	clc    
  403623:	jbe    0x40364d
  403625:	(bad)  
  403626:	mov    edx,0x3d5da108
  40362b:	test   eax,0xe1474506
  403630:	mov    ecx,0xf86513b9
  403635:	jbe    0x40361f
  403637:	mov    eax,ds:0x2544d3a7
  40363c:	nop
  40363d:	(bad)  
  40363e:	loopne 0x4035fa
  403640:	inc    esp
  403641:	or     BYTE PTR [ebp-0x4d813a3],ah
  403647:	sbb    DWORD PTR ds:0xf22bda15,esp
  40364d:	jecxz  0x4035ee
  40364f:	adc    eax,0x20b6ee7
  403654:	loope  0x40365d
  403656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403657:	mov    es,WORD PTR [esi-0x283e6b9b]
  40365d:	mov    al,ds:0xb753a151
  403662:	sbb    BYTE PTR [ecx-0x66c241b5],dl
  403668:	mov    dl,0x70
  40366a:	pop    edx
  40366b:	xor    DWORD PTR [ebp-0x7],ebx
  40366e:	(bad)  
  40366f:	jecxz  0x40365a
  403671:	sub    ecx,DWORD PTR [ecx+0xa]
  403674:	cmp    esi,ebp
  403676:	gs push edx
  403678:	push   edx
  403679:	push   0xffffffb2
  40367b:	imul   esi,DWORD PTR [esi],0x1
  40367e:	ret    0x827d
  403681:	sub    eax,0xb79ac2f4
  403686:	or     ah,BYTE PTR es:0x5f5a1df4
  40368d:	pushf  
  40368e:	push   ecx
  40368f:	sub    al,0x89
  403691:	jmp    0x4c8b:0x7bb59109
  403698:	(bad)  
  403699:	out    dx,al
  40369a:	cmp    BYTE PTR [esi-0x25443b56],dh
  4036a0:	aaa    
  4036a1:	sub    cl,BYTE PTR [ebp-0x7b]
  4036a4:	hlt    
  4036a5:	mov    BYTE PTR [edx],0x1
  4036a8:	jbe    0x4036d6
  4036aa:	ins    DWORD PTR es:[edi],dx
  4036ab:	xor    eax,0xe46fd2b9
  4036b0:	cli    
  4036b1:	jle    0x40363b
  4036b3:	pop    ebx
  4036b4:	mov    BYTE PTR [ebx+0x3c2c87d5],ah
  4036ba:	popf   
  4036bb:	lock jb 0x40371e
  4036be:	sub    DWORD PTR [ebx+0x4d149beb],eax
  4036c4:	call   0xaeb79926
  4036c9:	push   edx
  4036ca:	dec    esp
  4036cb:	test   DWORD PTR [ebp+0x10],0x7fb58cb1
  4036d2:	cmp    bl,BYTE PTR [eax+0x13]
  4036d5:	push   es
  4036d6:	stos   BYTE PTR es:[edi],al
  4036d7:	test   eax,0x55f22c37
  4036dc:	or     ebx,DWORD PTR [ebx-0x70]
  4036df:	sti    
  4036e0:	fstp   st(5)
  4036e2:	and    dl,BYTE PTR ds:0xe52b6e16
  4036e8:	jmp    0x4036bb
  4036ea:	stc    
  4036eb:	imul   ebx,DWORD PTR [edx-0x1d493dcb],0x331e67c
  4036f5:	inc    ebx
  4036f6:	jge    0x4036a1
  4036f8:	push   ds
  4036f9:	and    ebp,DWORD PTR [esi]
  4036fb:	adc    al,0xde
  4036fd:	xchg   eax,ebx
  4036ff:	jo     0x403703
  403701:	fild   WORD PTR [edi+0x64]
  403704:	push   edx
  403705:	jne    0x40374e
  403707:	pop    ecx
  403708:	(bad)  
  40370b:	adc    esi,DWORD PTR [esi+0x54a37f6d]
  403711:	inc    edx
  403712:	mov    al,0x3c
  403714:	pop    esp
  403715:	add    BYTE PTR [eax+0x5d],ch
  403718:	xchg   ebx,eax
  403719:	mov    ds:0xb51eaaff,eax
  40371e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40371f:	xor    DWORD PTR [eax+0x2f],esp
  403722:	mov    ch,0x1d
  403724:	aaa    
  403725:	aam    0xe5
  403727:	jp     0x40370a
  403729:	fisub  WORD PTR [edx+0x634816bf]
  40372f:	sbb    esp,DWORD PTR [eax+0x6aab72e]
  403735:	iret   
  403736:	(bad)  
  403737:	in     eax,dx
  403738:	jnp    0x403778
  40373a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373b:	push   ds
  40373c:	jg     0x403707
  40373e:	aam    0x7
  403740:	ret    0xb9c4
  403743:	add    dl,dh
  403745:	cmc    
  403746:	pop    ss
  403747:	jnp    0x4036f8
  403749:	jge    0x4036eb
  40374b:	cmc    
  40374c:	xchg   esp,eax
  40374d:	add    eax,0xe89d872a
  403752:	test   DWORD PTR [edx+0x4761d20b],esp
  403758:	sub    al,0xb
  40375a:	inc    esp
  40375b:	add    eax,0x473c3974
  403760:	xor    eax,0xc5a5835f
  403765:	ror    DWORD PTR [esp+edx*8],0x86
  403769:	pop    ds
  40376a:	loopne 0x4037d9
  40376c:	adc    dl,ah
  40376e:	and    DWORD PTR [ecx-0x45a38376],ebx
  403774:	xchg   esi,eax
  403775:	dec    eax
  403776:	push   0xdcce2dc
  40377b:	stc    
  40377c:	pop    ecx
  40377d:	add    ebp,edi
  40377f:	daa    
  403780:	es out 0x98,eax
  403783:	push   ds
  403784:	(bad)  
  403785:	jl     0x403724
  403787:	out    dx,eax
  403788:	or     bh,BYTE PTR [ecx+0x1b0964ef]
  40378e:	xchg   ecx,eax
  40378f:	mov    al,ds:0x30eebded
  403794:	test   BYTE PTR [edx-0xe558020],ah
  40379a:	pop    ss
  40379b:	icebp  
  40379c:	cmova  ebx,DWORD PTR [ecx-0x80]
  4037a0:	add    al,BYTE PTR [esi]
  4037a2:	nop
  4037a3:	fdecstp 
  4037a5:	xchg   DWORD PTR [ebp+ebp*8+0x7e],ebx
  4037a9:	shl    BYTE PTR [edi-0x40],0xce
  4037ad:	and    al,ch
  4037af:	sti    
  4037b0:	lods   eax,DWORD PTR ds:[esi]
  4037b1:	pop    esi
  4037b2:	fld    DWORD PTR [esp+eax*1]
  4037b5:	inc    edx
  4037b6:	repnz mov edx,0xedeba6f3
  4037bc:	and    dh,BYTE PTR [esp+ecx*8+0x6e]
  4037c0:	mov    bh,BYTE PTR [edx]
  4037c2:	or     WORD PTR [eax+0x440f187],si
  4037c9:	stc    
  4037ca:	sbb    DWORD PTR [eax-0x3f],ecx
  4037cd:	in     eax,0xfa
  4037cf:	mov    ebp,0xfe192b7c
  4037d4:	adc    DWORD PTR [esi-0x2b],edx
  4037d7:	dec    ebx
  4037d8:	leave  
  4037d9:	jo     0x403779
  4037db:	ret    0x2330
  4037de:	mov    dh,0xc8
  4037e0:	pop    ds
  4037e1:	push   ss
  4037e2:	or     eax,0x7245097f
  4037e7:	je     0x403800
  4037e9:	add    ch,ch
  4037eb:	inc    eax
  4037ec:	xor    bh,BYTE PTR [eax+0x5b10bb09]
  4037f2:	or     BYTE PTR [edi+0x39],ch
  4037f5:	ds ins DWORD PTR es:[edi],dx
  4037f7:	mov    ds:0xe69c5a29,al
  4037fc:	outs   dx,DWORD PTR ds:[esi]
  4037fd:	les    esi,FWORD PTR [edi+0x46]
  403800:	sub    DWORD PTR ss:[edi+0x3a],0x51cdb0de
  403808:	or     ecx,DWORD PTR [edi]
  40380a:	int    0x61
  40380c:	femms  
  40380e:	leave  
  40380f:	in     al,dx
  403810:	cmp    esi,DWORD PTR [edi+esi*2]
  403813:	push   es
  403814:	xchg   ebx,eax
  403815:	pop    ebp
  403816:	sub    BYTE PTR [ebx+0x3a],bh
  403819:	dec    ebp
  40381a:	test   eax,0x2cb48647
  40381f:	out    dx,eax
  403820:	push   ebp
  403821:	lock pop ecx
  403823:	xchg   DWORD PTR ds:0x1fd15929,esi
  403829:	retf   
  40382a:	xchg   DWORD PTR [ecx+0x1bca4787],esi
  403830:	test   al,0xf6
  403832:	adc    DWORD PTR [ebp-0x53eb03fa],edi
  403838:	cs pushf 
  40383a:	jno    0x4037f9
  40383c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40383d:	pop    edi
  40383e:	xchg   DWORD PTR [edx+0x2864dc10],edi
  403844:	hlt    
  403845:	dec    eax
  403846:	inc    ebp
  403847:	ds bswap esp
  40384a:	inc    BYTE PTR [ebp-0x6915ddd2]
  403850:	cwde   
  403851:	xchg   esp,eax
  403852:	aaa    
  403853:	and    al,0xc4
  403855:	mov    WORD PTR [ebp-0x6948a94d],es
  40385b:	dec    eax
  40385c:	neg    DWORD PTR [ecx]
  40385e:	and    ebp,eax
  403860:	or     esi,DWORD PTR [edi]
  403862:	fwait
  403863:	cwde   
  403864:	mov    ecx,0x426b780a
  403869:	lds    ebp,FWORD PTR [edx+0x48232305]
  40386f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403870:	sbb    dh,ch
  403872:	mov    dl,0x76
  403874:	sbb    dh,bh
  403876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403877:	dec    edx
  403878:	mov    dh,0x14
  40387a:	adc    al,0x2c
  40387c:	aad    0xd6
  40387e:	es pop esi
  403880:	pmulhw mm6,QWORD PTR [ecx-0x64]
  403884:	jbe    0x40384b
  403886:	xlat   BYTE PTR ds:[ebx]
  403887:	sahf   
  403888:	lds    edx,FWORD PTR [ecx+esi*4-0x7f925891]
  40388f:	push   0xaf584b41
  403894:	push   esp
  403895:	lahf   
  403896:	pop    ecx
  403897:	inc    esp
  403898:	mov    ch,0x82
  40389a:	jmp    0x40388a
  40389c:	addr16 sbb al,0x74
  40389f:	mov    ds:0xb67e2986,eax
  4038a4:	jae    0x4038a0
  4038a6:	mov    DWORD PTR [eax+0x27],esi
  4038a9:	jmp    0x403919
  4038ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ac:	ins    DWORD PTR es:[edi],dx
  4038ad:	gs hlt 
  4038af:	dec    edx
  4038b0:	pop    ss
  4038b1:	repz js 0x40383f
  4038b4:	mov    eax,0xcdeba4e
  4038b9:	inc    BYTE PTR [ecx-0x5e]
  4038bc:	push   es
  4038bd:	lods   al,BYTE PTR ds:[esi]
  4038be:	imul   edx,DWORD PTR [ecx],0xffffffa6
  4038c1:	and    dl,BYTE PTR [eax+0x757afd9b]
  4038c7:	cmp    DWORD PTR [esi],edx
  4038c9:	btc    DWORD PTR [ebx+0x61],0x23
  4038ce:	xor    eax,0x558f7fa4
  4038d3:	cmp    DWORD PTR gs:[edi+0x5de503af],esi
  4038da:	out    dx,al
  4038db:	scas   al,BYTE PTR es:[edi]
  4038dc:	cmp    al,0x1c
  4038de:	fisttp WORD PTR [ebx+0x3d83f445]
  4038e5:	jae    0x403869
  4038e7:	inc    edx
  4038e8:	add    BYTE PTR [eax],al
  4038ea:	not    DWORD PTR ds:0x42816b
  4038f0:	mov    ecx,DWORD PTR ds:0x428297
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428273,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428ee8
  403913:	xor    edx,DWORD PTR ds:0x42825f
  403919:	neg    DWORD PTR ds:0x428273
  40391f:	xor    DWORD PTR ds:0x428167,0x12a5
  403929:	and    DWORD PTR ds:0x4283b7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42829b
  403939:	or     ecx,DWORD PTR ds:0x42824f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428173,0x0
  403949:	mov    DWORD PTR ds:0x4283b7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428173,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dbc
  40397f:	adc    DWORD PTR ds:0x4282a7,0x42818f
  403989:	sbb    DWORD PTR ds:0x428293,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428393
  403999:	or     DWORD PTR ds:0x42826f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428297
  4039a7:	adc    edx,DWORD PTR ds:0x42827b
  4039ad:	mov    DWORD PTR ds:0x428297,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42824f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282b7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x4282ab,0x4283b7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42818b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428167,0x42832f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428173,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42816b,0x428303
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42827f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428297,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428167,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428293,0x0
  403a3e:	mov    DWORD PTR ds:0x42831f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283b7
  403a57:	cmp    DWORD PTR ds:0x428293,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d98
  403a6f:	mov    edx,DWORD PTR ds:0x42834f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283e3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428193,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428187,0x2089
  403aa2:	or     DWORD PTR ds:0x42816b,0x113b
  403aac:	mov    eax,ds:0x4223e0
  403ab1:	cmp    DWORD PTR ds:0x428193,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42825f
  403ac3:	mov    DWORD PTR ds:0x428243,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428333,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428193,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428193,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428133
  403af8:	call   DWORD PTR ds:0x428dc0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42825b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42829f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42838b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42817b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x7cc942a7
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x78e7e7ee],bl
  403b4b:	mov    ch,0xce
  403b4d:	loopne 0x403b84
  403b4f:	call   0x1be41136
  403b54:	add    al,0xa1
  403b56:	inc    esp
  403b57:	push   ebp
  403b58:	mov    ds:0xf3b9f4a,al
  403b5d:	inc    edx
  403b5e:	out    0xbc,eax
  403b60:	cld    
  403b61:	fcomp  QWORD PTR [ebp+0x22]
  403b64:	not    BYTE PTR [ebx-0x38781c08]
  403b6a:	and    ecx,DWORD PTR [ecx-0x666083b2]
  403b70:	loope  0x403b3e
  403b72:	xlat   BYTE PTR ds:[ebx]
  403b73:	jp     0x403b77
  403b75:	adc    esi,eax
  403b77:	aad    0x70
  403b79:	fmul   st(2),st
  403b7b:	pusha  
  403b7c:	out    0xb8,eax
  403b7e:	leave  
  403b7f:	in     eax,0xbd
  403b81:	adc    DWORD PTR [edx+eax*1],0xf96f0a47
  403b88:	cs loop 0x403b35
  403b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b8c:	jb     0x403b0f
  403b8e:	mov    dh,0x2b
  403b90:	pop    esp
  403b91:	dec    esi
  403b92:	xchg   edi,eax
  403b93:	pop    esi
  403b94:	rcl    BYTE PTR [edi],1
  403b96:	xchg   esp,eax
  403b97:	add    DWORD PTR [ebx],0xffffffa7
  403b9a:	jo     0x403b88
  403b9c:	lds    edx,FWORD PTR [ebp+0x36]
  403b9f:	enter  0x67b5,0xa8
  403ba3:	mov    eax,0x30bc208f
  403ba8:	stc    
  403ba9:	push   0x60e03e4e
  403bae:	(bad)  
  403baf:	clc    
  403bb0:	pop    ebx
  403bb1:	jo     0x403b58
  403bb3:	clc    
  403bb4:	adc    eax,DWORD PTR [ebx]
  403bb6:	adc    al,0xcf
  403bb8:	push   esp
  403bb9:	lahf   
  403bba:	mov    edi,0x335ee562
  403bbf:	shl    BYTE PTR [ebp-0xa],1
  403bc2:	out    0xd2,al
  403bc4:	fadd   QWORD PTR [esi+0xd]
  403bc7:	outs   dx,DWORD PTR ds:[esi]
  403bc8:	out    dx,eax
  403bc9:	dec    esi
  403bca:	push   ebx
  403bcb:	mov    ?,WORD PTR [edx+0x2e]
  403bce:	loopne 0x403c49
  403bd0:	daa    
  403bd1:	cmp    eax,0x1e2e6bdc
  403bd6:	inc    eax
  403bd7:	inc    edi
  403bd8:	jmp    DWORD PTR [edx+0x4aa3b331]
  403bde:	(bad)  
  403bdf:	addr16 mov esp,0xe6440c09
  403be5:	pop    ds
  403be6:	mov    edx,0x170e10da
  403beb:	or     bl,BYTE PTR [edi-0x1b]
  403bee:	retf   0x79c0
  403bf1:	loopne 0x403bdc
  403bf3:	out    0xd4,eax
  403bf5:	or     al,0x46
  403bf7:	repz mov edx,0x5bca8b5a
  403bfd:	mov    ecx,0x22f0273d
  403c02:	or     esi,DWORD PTR [eax+0x775f10d2]
  403c08:	adc    cl,cl
  403c0a:	push   ds
  403c0b:	add    DWORD PTR [edi],esi
  403c0d:	retf   0x888d
  403c10:	mov    WORD PTR [eax+0x1d4b4d66],cs
  403c16:	jbe    0x403bdf
  403c18:	addr16 popa 
  403c1a:	ins    DWORD PTR es:[edi],dx
  403c1b:	push   0x66
  403c1d:	repnz add eax,0x545a8723
  403c23:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  403c25:	xlat   BYTE PTR ds:[ebx]
  403c26:	out    0x2e,al
  403c28:	into   
  403c29:	sti    
  403c2a:	push   ebp
  403c2b:	iret   
  403c2c:	and    esi,DWORD PTR [ebx-0x1aa3b2fd]
  403c32:	es repz int3 
  403c35:	push   ecx
  403c36:	sahf   
  403c37:	ret    0xc853
  403c3a:	jns    0x403bd7
  403c3c:	xchg   ebp,eax
  403c3d:	inc    esi
  403c3e:	or     al,0x1e
  403c40:	add    al,bl
  403c42:	call   0xde07:0x33f1659a
  403c49:	mov    edi,0x3612bccf
  403c4e:	sub    bl,ah
  403c50:	fst    QWORD PTR [ebp+0x75]
  403c53:	jmp    0x8f8a:0xeace95d7
  403c5a:	das    
  403c5b:	push   edx
  403c5c:	mov    DWORD PTR [esi+esi*1+0x59],ebx
  403c60:	cmp    al,dl
  403c62:	in     al,dx
  403c63:	xchg   BYTE PTR [eax+0x65],ah
  403c66:	(bad)  
  403c67:	pop    esp
  403c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c69:	icebp  
  403c6a:	fist   DWORD PTR [edx-0x3893ff56]
  403c70:	or     al,0xe3
  403c72:	fist   WORD PTR [edi]
  403c74:	dec    edi
  403c75:	sbb    dh,BYTE PTR [esi-0x4e]
  403c78:	ret    0xb2d4
  403c7b:	add    dh,BYTE PTR [edx-0x61af0aa]
  403c81:	rcr    ebp,0x55
  403c84:	adc    DWORD PTR [ebx+0x7f3ad7d3],edx
  403c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c8b:	pop    ss
  403c8c:	mov    DWORD PTR [edx-0x3f],eax
  403c8f:	mov    cl,0x97
  403c91:	jmp    0xe9ae:0xd87de2d8
  403c98:	retf   
  403c99:	or     ebx,DWORD PTR [edx]
  403c9b:	(bad)  
  403c9d:	repz or ebp,DWORD PTR [edx-0x2f]
  403ca1:	adc    DWORD PTR [esi+0x7794081d],edi
  403ca7:	xchg   ecx,eax
  403ca8:	mov    BYTE PTR [edi+ebx*1],ah
  403cab:	mov    ds:0xb77fb021,al
  403cb0:	sar    BYTE PTR [edi+esi*8+0x1],1
  403cb4:	mov    eax,0x2b560fae
  403cb9:	sub    ecx,DWORD PTR ds:0xea9077e1
  403cbf:	sbb    DWORD PTR [edx+0x6d],eax
  403cc2:	sti    
  403cc3:	push   cs
  403cc4:	shl    BYTE PTR [edi-0xb4a927b],1
  403cca:	cmp    eax,0xee93a23d
  403ccf:	jmp    0x403c9d
  403cd1:	sar    DWORD PTR [esi+eiz*1-0x1aa00ebf],1
  403cd8:	sub    BYTE PTR [edx+0x58292b1f],0x24
  403cdf:	xor    ah,BYTE PTR [esi+0x5e]
  403ce2:	sub    BYTE PTR [ebx+esi*2],ah
  403ce5:	icebp  
  403ce6:	mov    cl,0x32
  403ce8:	mov    eax,ds:0xcddf758c
  403ced:	shr    cl,cl
  403cef:	jmp    0xc4d696af
  403cf4:	sub    eax,0x88d3626d
  403cf9:	add    ecx,ecx
  403cfb:	or     al,0x38
  403cfd:	jecxz  0x403cc3
  403cff:	jnp    0x403cf6
  403d01:	jno    0x403d0b
  403d03:	pop    ds
  403d04:	pop    eax
  403d05:	cwde   
  403d06:	sbb    al,0xd2
  403d08:	mov    ah,0x8b
  403d0a:	adc    al,ah
  403d0c:	arpl   di,cx
  403d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0f:	in     eax,dx
  403d10:	xchg   ecx,eax
  403d11:	inc    esp
  403d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d13:	inc    esp
  403d14:	jmp    0x403d76
  403d16:	sbb    DWORD PTR [ebx-0x1f],ebx
  403d19:	clc    
  403d1a:	loope  0x403d8d
  403d1c:	(bad)  
  403d1d:	sub    DWORD PTR [eax],edx
  403d1f:	iret   
  403d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d21:	or     eax,0x13cb68a8
  403d26:	jo     0x403d19
  403d28:	and    ah,BYTE PTR [ebp+0xf9abe1b]
  403d2e:	cwde   
  403d2f:	fcmovnbe st,st(4)
  403d31:	ss (bad) 
  403d33:	mov    esi,0x70de860
  403d38:	inc    ebp
  403d39:	nop
  403d3a:	mov    esi,0xb5ed7068
  403d3f:	adc    BYTE PTR [ebx],0x59
  403d42:	push   ss
  403d43:	(bad)  
  403d44:	leave  
  403d45:	add    eax,ecx
  403d47:	jle    0x403d9a
  403d49:	and    ebx,0xdce50f02
  403d4f:	cmp    BYTE PTR [esi-0x4b246eb0],bh
  403d55:	pop    esp
  403d56:	popa   
  403d57:	lea    esp,[edx+0x2e9c7a0f]
  403d5d:	cmp    al,0x2b
  403d5f:	cmp    eax,0x134b3105
  403d64:	div    eax
  403d66:	loopne 0x403d94
  403d68:	ds fwait
  403d6a:	add    BYTE PTR [ecx],bh
  403d6c:	ret    0x4f70
  403d6f:	jno    0x403d70
  403d71:	data16 fnstcw WORD PTR [ecx+0x54b32098]
  403d78:	add    DWORD PTR [ecx],edx
  403d7a:	shl    DWORD PTR [ecx],1
  403d7c:	dec    edi
  403d7d:	adc    ecx,0x24
  403d80:	mov    bh,0xce
  403d82:	fmul   QWORD PTR [edi]
  403d84:	out    0xd9,eax
  403d86:	test   al,0x20
  403d88:	in     eax,dx
  403d89:	pop    ecx
  403d8a:	adc    esi,DWORD PTR [ecx]
  403d8c:	std    
  403d8d:	jae    0x403db5
  403d8f:	jp     0x403d8b
  403d91:	repz in eax,0x4c
  403d94:	and    DWORD PTR [ecx+0x76],eax
  403d97:	xor    al,0xab
  403d99:	iret   
  403d9a:	xor    eax,0xa8b7263c
  403d9f:	jmp    0xe3f9f97f
  403da4:	jbe    0x403d63
  403da6:	or     DWORD PTR [ecx-0x412560ae],edi
  403dac:	sbb    DWORD PTR [edx-0x78],esi
  403daf:	jnp    0x403d93
  403db1:	ins    BYTE PTR es:[edi],dx
  403db2:	(bad)  
  403db4:	mov    ds:0x3a930c15,al
  403db9:	sbb    al,0xd2
  403dbb:	push   edx
  403dbc:	mov    cl,0x32
  403dbe:	pop    si
  403dc0:	pushf  
  403dc1:	adc    eax,0x8f3d3c54
  403dc6:	push   cs
  403dc7:	popa   
  403dc8:	icebp  
  403dc9:	push   esi
  403dca:	mov    edi,0xe12d854
  403dcf:	shl    ah,0xf7
  403dd2:	scas   al,BYTE PTR es:[edi]
  403dd3:	xor    BYTE PTR [ebx+eiz*2-0x6d1163d0],dl
  403dda:	cli    
  403ddb:	inc    ebp
  403ddc:	data16 cmp ah,dl
  403ddf:	ret    
  403de0:	pop    es
  403de1:	js     0x403e5d
  403de3:	or     al,ch
  403de5:	xor    al,BYTE PTR [ebp-0x52c02fbd]
  403deb:	xchg   esi,eax
  403dec:	dec    edx
  403ded:	test   al,0x3f
  403def:	pusha  
  403df0:	jge    0x403e23
  403df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403df3:	daa    
  403df4:	xchg   esi,eax
  403df5:	das    
  403df6:	not    ecx
  403df8:	xchg   edx,eax
  403df9:	enter  0x3ee6,0x7c
  403dfd:	ja     0x403dcb
  403dff:	stos   DWORD PTR es:[edi],eax
  403e00:	pop    edx
  403e01:	sub    al,0x5f
  403e03:	xchg   BYTE PTR [ecx+ecx*1+0x6677cc79],dl
  403e0a:	sbb    eax,0x62d475f4
  403e0f:	sub    esp,esp
  403e11:	push   0xc065d203
  403e16:	or     al,0x8a
  403e18:	out    dx,eax
  403e19:	push   cs
  403e1a:	test   eax,0x7b00fcd4
  403e1f:	dec    eax
  403e20:	cli    
  403e21:	in     al,dx
  403e22:	int3   
  403e23:	ret    0x7b20
  403e26:	sub    bl,BYTE PTR [ecx+0x56]
  403e29:	adc    edx,ebx
  403e2b:	int3   
  403e2c:	cmp    al,0xed
  403e2e:	mov    dl,0x20
  403e30:	sbb    al,0x15
  403e32:	sub    al,ah
  403e34:	jg     0x403e41
  403e36:	dec    edi
  403e37:	xor    al,0xf6
  403e39:	mov    eax,0xa4b803fe
  403e3e:	xor    eax,0x8c3fc19b
  403e43:	add    ah,BYTE PTR [eax]
  403e45:	pavgw  mm0,QWORD PTR [eax]
  403e48:	cmp    dl,BYTE PTR [edi+0x57]
  403e4b:	mov    ah,0x9d
  403e4d:	in     eax,0x7e
  403e4f:	dec    esp
  403e50:	adc    esi,DWORD PTR [ebx+0x1e607e7f]
  403e56:	aad    0x2
  403e58:	imul   ebx,DWORD PTR [edi+edx*4+0x24c063ae],0xffffffdb
  403e60:	xchg   edx,eax
  403e61:	jbe    0x403ed3
  403e63:	fmul   QWORD PTR ds:0xd0ca8c1
  403e69:	idiv   BYTE PTR [ebx]
  403e6b:	daa    
  403e6c:	xchg   dl,ah
  403e6e:	sub    eax,DWORD PTR [ecx+0x2]
  403e71:	add    DWORD PTR [ebx],edi
  403e73:	add    edi,DWORD PTR [ebp-0x2cf452cc]
  403e79:	mov    esp,0xaa4f9770
  403e7e:	sti    
  403e7f:	gs pop ebp
  403e81:	div    BYTE PTR [ebp+0x34]
  403e84:	jg     0x403e08
  403e86:	out    dx,eax
  403e87:	pusha  
  403e88:	into   
  403e89:	call   0x127aaeed
  403e8e:	sub    DWORD PTR [esi+0x1dac7313],eax
  403e94:	mov    eax,0x2276e680
  403e99:	in     eax,dx
  403e9a:	vpunpcklbw ymm2,ymm7,YMMWORD PTR [edx]
  403e9e:	mov    al,ds:0xb312ff97
  403ea3:	xchg   ecx,eax
  403ea4:	mov    dl,0x68
  403ea6:	or     bh,ah
  403ea8:	outs   dx,BYTE PTR ds:[esi]
  403ea9:	jae    0x403e71
  403eab:	cli    
  403eac:	loop   0x403eed
  403eae:	lods   al,BYTE PTR ds:[esi]
  403eaf:	js     0x403f06
  403eb1:	icebp  
  403eb2:	jbe    0x403f06
  403eb4:	loopne 0x403e77
  403eb6:	call   0x4ffb:0x5b3367a7
  403ebd:	popa   
  403ebe:	stc    
  403ebf:	loop   0x403f26
  403ec1:	inc    edi
  403ec2:	div    eax
  403ec4:	mov    dl,0xa3
  403ec6:	mov    dl,cl
  403ec8:	cmp    al,BYTE PTR [edi+ecx*2+0x558fc0d3]
  403ecf:	loop   0x403e68
  403ed1:	(bad)  
  403ed2:	scas   al,BYTE PTR es:[edi]
  403ed3:	leave  
  403ed4:	sub    eax,eax
  403ed6:	lea    edi,[ebx]
  403ed8:	clc    
  403ed9:	or     ah,al
  403edb:	call   0x147925a4
  403ee0:	bound  eax,QWORD PTR [ecx-0x53a8baf4]
  403ee6:	aaa    
  403ee7:	ret    
  403ee8:	mov    bl,0x7b
  403eea:	mov    ch,0x2
  403eec:	nop
  403eed:	and    DWORD PTR [edx-0x8],esp
  403ef0:	pop    eax
  403ef1:	add    BYTE PTR [ebx+0x39f63b08],bl
  403ef7:	in     al,0x5d
  403ef9:	sub    al,0xb9
  403efb:	push   esp
  403efc:	push   ss
  403efd:	xchg   BYTE PTR [edi-0x4b],ch
  403f00:	xor    al,0xc1
  403f02:	daa    
  403f03:	push   edx
  403f04:	fs (bad) 
  403f06:	leave  
  403f07:	or     edi,DWORD PTR [edx]
  403f09:	mov    edx,0x19010339
  403f0e:	sbb    eax,0x42819f
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42821f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x4283ab,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428267,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x2d61b3bc],ch
  403f58:	mov    esi,0x1818d7ce
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [ecx+0x3c],bl
  403f63:	pop    edx
  403f64:	not    BYTE PTR [ebp+esi*1+0x2e]
  403f68:	sbb    eax,0xd4e402ec
  403f6d:	or     ecx,DWORD PTR [ecx]
  403f6f:	repnz mov edx,0xbdbdd7aa
  403f75:	xchg   ecx,eax
  403f76:	sub    DWORD PTR [ebx+0x3d],edi
  403f79:	test   DWORD PTR [edi-0x7a624ae9],eax
  403f7f:	rcl    BYTE PTR [edi-0x35359473],0x29
  403f86:	lea    esi,[eax]
  403f88:	xchg   esi,eax
  403f89:	loopne 0x403f0e
  403f8b:	(bad)  
  403f8c:	mov    bh,0x34
  403f8e:	test   eax,0x1c2e7ce6
  403f93:	mov    ds:0x6bb1a101,eax
  403f98:	bound  eax,QWORD PTR [eax]
  403f9a:	dec    ecx
  403f9b:	loope  0x403f5c
  403f9d:	mov    eax,0x54f49fd0
  403fa2:	in     eax,0xc0
  403fa4:	and    cl,BYTE PTR ds:0xbdfff74f
  403faa:	jmp    0x31f1:0x14dcc823
  403fb1:	and    esp,DWORD PTR [ebp-0x5eb1ddac]
  403fb7:	push   ds
  403fb8:	sub    al,BYTE PTR [eax+0x393bd81f]
  403fbe:	inc    ebp
  403fbf:	pop    edx
  403fc0:	test   ebx,edi
  403fc2:	jg     0x404039
  403fc4:	pop    ecx
  403fc5:	push   es
  403fc6:	lds    ebx,FWORD PTR ss:0xf450fe4d
  403fcd:	sbb    eax,0xd3f6ebb0
  403fd2:	leave  
  403fd3:	cmp    al,0x4e
  403fd5:	sub    edi,DWORD PTR fs:[ebp-0x3d0a8a88]
  403fdc:	push   edx
  403fdd:	pop    ebp
  403fde:	mov    gs:0x676d0b1a,al
  403fe4:	ficomp DWORD PTR [edi]
  403fe6:	mov    ebx,0x84102d26
  403feb:	jo     0x403fd5
  403fed:	xchg   ebx,eax
  403fee:	(bad)  
  403fef:	pop    ss
  403ff0:	sbb    eax,0x5cd5c260
  403ff5:	aaa    
  403ff6:	je     0x40403c
  403ff8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403ffa:	mov    eax,ds:0x9b950be7
  403fff:	push   eax
  404000:	xchg   edi,eax
  404001:	mov    ebx,0xf488ce71
  404006:	add    BYTE PTR [ebx+0x3d],dh
  404009:	sub    eax,0x1bea87e5
  40400e:	sub    dh,BYTE PTR [ebx+0x55316001]
  404014:	int3   
  404015:	jecxz  0x403fd5
  404017:	dec    edi
  404018:	in     al,0x69
  40401a:	popa   
  40401b:	adc    BYTE PTR [edi-0x376ae57d],ah
  404021:	jmp    0x403fee
  404023:	fisttp QWORD PTR [esi]
  404025:	push   ds
  404026:	loop   0x403ff6
  404028:	fs icebp 
  40402a:	in     al,0x73
  40402c:	and    ah,BYTE PTR [ebx-0x739d13dc]
  404032:	lea    edi,[edi-0x37]
  404035:	repnz adc eax,0x9d41de5d
  40403b:	icebp  
  40403c:	fidivr DWORD PTR [ebp+edx*1-0x18]
  404040:	mov    dh,0xc9
  404042:	inc    esp
  404043:	sbb    al,cl
  404045:	mov    ds,WORD PTR [esi+0x20]
  404048:	mov    ecx,0xd1da7636
  40404d:	inc    esp
  40404e:	aaa    
  40404f:	xchg   ecx,eax
  404050:	ins    BYTE PTR es:[edi],dx
  404051:	fsub   QWORD PTR [ebx-0x23821ac8]
  404057:	scas   al,BYTE PTR es:[edi]
  404058:	imul   eax,edx,0x5c
  40405b:	dec    ebp
  40405c:	pushf  
  40405d:	loope  0x403fe5
  40405f:	adc    eax,0x9efeb33f
  404064:	lea    edx,[eax+0x22c840f9]
  40406a:	push   edx
  40406b:	adc    al,ah
  40406d:	in     eax,dx
  40406e:	fsubr  DWORD PTR [edi]
  404070:	sub    ebp,DWORD PTR [ebx]
  404072:	cmp    BYTE PTR [esi-0x455d74a0],bh
  404078:	loope  0x404001
  40407a:	out    dx,eax
  40407b:	xchg   edi,eax
  40407c:	sahf   
  40407d:	mov    ecx,0xde71a048
  404082:	adc    eax,DWORD PTR ds:0x8c93bc80
  404088:	in     eax,dx
  404089:	int3   
  40408a:	mov    al,0x47
  40408c:	out    0xb7,al
  40408e:	sahf   
  40408f:	in     al,0xc8
  404091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404092:	pop    eax
  404093:	mov    WORD PTR [ecx+0x4a],fs
  404096:	sub    DWORD PTR [ecx+0x1c],0xf998303c
  40409d:	aas    
  40409e:	sahf   
  40409f:	stc    
  4040a0:	add    al,0x24
  4040a2:	xchg   ebx,eax
  4040a3:	sbb    dh,BYTE PTR [edx]
  4040a5:	mov    esp,DWORD PTR [esi]
  4040a7:	mov    ax,0xb031
  4040ab:	inc    edi
  4040ac:	fnstenv [ebx-0x4a1bc332]
  4040b2:	push   cs
  4040b3:	jnp    0x40410c
  4040b5:	fmul   QWORD PTR [edi+eiz*1-0x3f138e6f]
  4040bc:	pop    ss
  4040bd:	mov    ebx,0xcdbcc7fa
  4040c2:	iret   
  4040c3:	mov    bl,0x2f
  4040c5:	call   0x7280:0x5c05f19f
  4040cc:	pushf  
  4040cd:	mov    WORD PTR [ecx+0x6a],es
  4040d0:	xchg   edi,eax
  4040d1:	pop    eax
  4040d2:	in     eax,dx
  4040d3:	or     DWORD PTR [ebp+0x2e351eba],esi
  4040d9:	lea    edi,ds:0x11d1dcdd
  4040df:	or     BYTE PTR [bx+di],al
  4040e2:	pop    edi
  4040e3:	xlat   BYTE PTR ds:[ebx]
  4040e4:	xor    DWORD PTR [edi],0xd74e03b4
  4040ea:	pop    edx
  4040eb:	je     0x4040dc
  4040ed:	fisttp WORD PTR [eax+0x6b22a2b0]
  4040f3:	(bad)  
  4040f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040f5:	aam    0xfd
  4040f7:	fistp  WORD PTR [edi]
  4040f9:	sub    BYTE PTR [ebx+esi*2+0x2d],cl
  4040fd:	jo     0x404154
  4040ff:	push   0xbfb8de4b
  404104:	sahf   
  404105:	repnz fstp DWORD PTR [esi]
  404108:	adc    eax,0x1d4601a
  40410d:	cmp    eax,0x62e86ed9
  404112:	pop    ebx
  404113:	mov    al,0x27
  404115:	and    BYTE PTR [eax+0x7ea9f5b5],dh
  40411b:	mov    edi,DWORD PTR [esi-0x3d]
  40411e:	inc    eax
  40411f:	or     eax,DWORD PTR [ebp-0x1b18d61e]
  404125:	sbb    eax,esp
  404127:	fdivrp st(4),st
  404129:	ds inc ebx
  40412b:	stos   DWORD PTR es:[edi],eax
  40412c:	mov    ah,0x76
  40412e:	(bad)  
  40412f:	test   DWORD PTR [edx-0x56],esp
  404132:	cli    
  404133:	add    ah,al
  404135:	sub    BYTE PTR [edx],dl
  404137:	lahf   
  404138:	imul   edx,DWORD PTR [ebp+0xd],0xffffffcd
  40413c:	xlat   BYTE PTR ds:[ebx]
  40413d:	jb     0x4040f8
  40413f:	in     al,0xc
  404141:	xor    edi,eax
  404143:	push   eax
  404144:	inc    edx
  404145:	push   DWORD PTR [edx-0x65]
  404148:	imul   ebx,DWORD PTR [ecx+0x39],0xffffffa3
  40414c:	dec    edi
  40414d:	pop    eax
  40414e:	(bad)  
  40414f:	xor    eax,0xb1b00c97
  404154:	jbe    0x40411e
  404156:	mov    bl,0x3d
  404158:	push   es
  404159:	jae    0x404152
  40415b:	add    esp,DWORD PTR [ecx+0x54563790]
  404161:	mov    ?,WORD PTR [esi+0x4b]
  404164:	hlt    
  404165:	imul   esp,DWORD PTR [edx],0x49a955ed
  40416b:	add    esp,0x74
  40416e:	int3   
  40416f:	je     0x4041b5
  404171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404172:	fst    DWORD PTR [eax+0x79]
  404175:	jne    0x404151
  404177:	jae    0x4041d7
  404179:	outs   dx,DWORD PTR ds:[esi]
  40417a:	or     bl,dh
  40417c:	out    0xf9,eax
  40417e:	fidiv  WORD PTR ds:0x674f5dc2
  404184:	jecxz  0x404137
  404186:	xchg   esi,eax
  404187:	jle    0x4041e4
  404189:	sar    eax,1
  40418b:	mov    ebx,0x3a77f429
  404190:	xlat   BYTE PTR ds:[ebx]
  404191:	or     edi,DWORD PTR [edx]
  404193:	inc    ecx
  404194:	mov    dl,0x55
  404196:	fwait
  404197:	mov    esp,0xc338d5c1
  40419c:	adc    BYTE PTR [edx+esi*8],ch
  40419f:	outs   dx,DWORD PTR ds:[esi]
  4041a0:	pop    esp
  4041a1:	test   al,0x88
  4041a3:	fld    QWORD PTR [edx+0x4c]
  4041a6:	cmp    cl,BYTE PTR fs:[eax]
  4041a9:	xchg   edx,eax
  4041aa:	in     eax,dx
  4041ab:	xor    DWORD PTR [ebp+0x6a0273b8],esi
  4041b1:	fisub  DWORD PTR [esi-0x28]
  4041b4:	add    BYTE PTR [eax],bh
  4041b6:	inc    eax
  4041b7:	imul   ebx,esp,0xffffff82
  4041ba:	cdq    
  4041bb:	mov    dl,0xb1
  4041bd:	mov    eax,0xcc471a03
  4041c2:	jnp    0x4041ee
  4041c4:	movd   ebp,mm7
  4041c7:	mov    ch,0x3e
  4041c9:	push   ebx
  4041ca:	rol    DWORD PTR [edi+0x75a797f3],1
  4041d0:	lds    ebp,FWORD PTR [esi+0x6d63b660]
  4041d6:	inc    esi
  4041d7:	fs out 0x8f,al
  4041da:	jmp    0xee51:0xde031381
  4041e1:	ds mov dl,0xd2
  4041e4:	mov    ds:0x2a1708fa,al
  4041e9:	in     al,0x20
  4041eb:	test   BYTE PTR [edx+0x6b],0xe6
  4041ef:	adc    ch,al
  4041f1:	pop    ecx
  4041f2:	xor    ecx,DWORD PTR [edi+0x51]
  4041f5:	mov    DWORD PTR [esi+ebp*1],0x5c1a42d8
  4041fc:	retf   
  4041fd:	mov    bl,0x67
  4041ff:	dec    eax
  404200:	or     ch,BYTE PTR [ecx+0x75]
  404203:	sub    ch,BYTE PTR [ebp+0x377f4d5e]
  404209:	ja     0x404288
  40420b:	or     eax,0x678db6df
  404210:	jbe    0x40426f
  404212:	and    BYTE PTR [esi-0x523e32ea],0xc1
  404219:	mov    dl,0xc9
  40421b:	sub    ebp,DWORD PTR [esi]
  40421d:	xchg   ebp,eax
  40421e:	xlat   BYTE PTR ds:[ebx]
  40421f:	frstor [ecx-0x574ef2e6]
  404225:	inc    ebp
  404226:	jne    0x4041ab
  404228:	cmc    
  404229:	sbb    DWORD PTR [ebp+0x398e7359],edx
  40422f:	mov    ds:0x620134cc,eax
  404234:	xlat   BYTE PTR ds:[ebx]
  404235:	outs   dx,BYTE PTR ds:[esi]
  404236:	mov    ds:0xf1d9b722,eax
  40423b:	repz dec esp
  40423d:	clc    
  40423e:	hlt    
  40423f:	enter  0x2d85,0x6a
  404243:	sbb    bl,bl
  404245:	mov    ah,0x9a
  404247:	mov    ds:0xcb4ba621,al
  40424c:	jmp    0xce09:0x77d873c6
  404253:	lock stos DWORD PTR es:[edi],eax
  404255:	adc    DWORD PTR [edi],ebp
  404257:	dec    edx
  404258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404259:	inc    ecx
  40425a:	cwde   
  40425b:	xchg   edx,eax
  40425c:	cmc    
  40425d:	sub    cl,BYTE PTR [esi]
  40425f:	inc    edi
  404260:	xchg   ebx,eax
  404261:	push   ds
  404262:	scas   al,BYTE PTR es:[edi]
  404263:	cmp    ah,dl
  404265:	cwde   
  404266:	push   ss
  404267:	mov    edi,0x530dacfa
  40426c:	cs push cs
  40426e:	and    BYTE PTR [esi+0x0],0x3
  404272:	xor    al,0x73
  404274:	fmul   DWORD PTR gs:[edx-0x7c234ffb]
  40427b:	xor    esp,ebp
  40427d:	stc    
  40427e:	lods   eax,DWORD PTR ds:[esi]
  40427f:	mov    esp,0xf08c900
  404284:	adc    BYTE PTR es:[edx],al
  404287:	(bad)  
  404288:	mov    esp,0xc94f1cdb
  40428d:	jmp    0x687b:0x4f842f68
  404294:	add    eax,0x21fbcd01
  404299:	pusha  
  40429a:	sub    bl,BYTE PTR [ecx]
  40429c:	imul   esp,edi,0x6e69617c
  4042a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a3:	gs cdq 
  4042a5:	sub    edx,DWORD PTR [ecx]
  4042a7:	jae    0x404291
  4042a9:	xchg   BYTE PTR [ebp+0x6d],ah
  4042ac:	mov    ds:0x854e636a,eax
  4042b1:	jmp    0x1ec0d59d
  4042b6:	fwait
  4042b7:	cmp    cl,BYTE PTR [edi+0x69]
  4042ba:	bound  ecx,QWORD PTR [esi-0x6b]
  4042bd:	out    0xef,al
  4042bf:	push   esp
  4042c0:	ret    
  4042c1:	test   BYTE PTR [edx],ch
  4042c3:	jecxz  0x404333
  4042c5:	dec    ebp
  4042c6:	mov    BYTE PTR [esi-0x59],0x90
  4042ca:	cmp    BYTE PTR ds:0x10b021f9,al
  4042d0:	jmp    0x7edc:0xa546f8bb
  4042d7:	add    eax,0x1487f03f
  4042dc:	push   ss
  4042dd:	test   al,0x57
  4042df:	jmp    0xaca1:0xd4b992a2
  4042e6:	mov    ah,0x6f
  4042e8:	retf   0xe53a
  4042eb:	enter  0x1fcb,0x7e
  4042ef:	or     eax,0xb1db0f25
  4042f4:	jb     0x404315
  4042f6:	pop    eax
  4042f7:	cmp    BYTE PTR [eax-0xd],cl
  4042fa:	mov    ebx,0xfd9de77a
  4042ff:	pop    edx
  404300:	sbb    eax,0x9832fe1
  404305:	out    0xff,al
  404307:	aam    0xa
  404309:	inc    edi
  40430a:	les    esi,FWORD PTR [edx-0xa]
  40430d:	cmc    
  40430e:	adc    eax,0xae76426b
  404313:	cmp    al,0x59
  404315:	add    al,0x90
  404317:	mov    ebx,0x8576c190
  40431c:	(bad)  
  40431d:	(bad)  
  40431e:	enter  0xffee,0x4
  404322:	mov    edx,DWORD PTR [ebx+0x4]
  404325:	and    DWORD PTR ds:0x42826b,ebx
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42829b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428317
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428257
  404344:	and    DWORD PTR ds:0x4283b7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42839f
  404355:	sbb    DWORD PTR ds:0x4282ab,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	mov    esp,0x557cb3b7
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    dh,ch
  40437c:	imul   eax,DWORD PTR [eax+eiz*8+0x78ba563],0xa014ab66
  404387:	pushf  
  404388:	push   esp
  404389:	sub    BYTE PTR [edx],al
  40438b:	xor    eax,0x44d2798c
  404390:	xor    BYTE PTR [edi+0x17],0x1b
  404394:	lods   eax,DWORD PTR ds:[esi]
  404395:	pop    ebx
  404396:	inc    esi
  404397:	cmp    al,0x5f
  404399:	aaa    
  40439a:	jae    0x40433d
  40439c:	mov    al,BYTE PTR [edi-0x6632db9a]
  4043a2:	mov    ebp,0x1ec4c04d
  4043a7:	jmp    0x404329
  4043a9:	repz mov ds:0xe5fbe346,al
  4043af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b0:	stc    
  4043b1:	push   edx
  4043b2:	in     eax,dx
  4043b3:	ret    
  4043b4:	(bad)  
  4043b5:	cmp    eax,0x7f2dd661
  4043ba:	push   edx
  4043bb:	mov    bl,0xb3
  4043bd:	pop    eax
  4043be:	test   BYTE PTR [edx-0x51fb5c9d],ch
  4043c4:	sbb    DWORD PTR [edx],ebp
  4043c6:	pop    ds
  4043c7:	xchg   ecx,eax
  4043c8:	aas    
  4043c9:	ds push ebp
  4043cb:	fdiv   DWORD PTR [ebx]
  4043cd:	(bad)  
  4043ce:	lds    edx,FWORD PTR [esi+0x72]
  4043d1:	test   DWORD PTR [esi-0x487ad131],0x5e63c89d
  4043db:	popa   
  4043dc:	push   ebp
  4043dd:	or     bl,BYTE PTR [ecx]
  4043df:	sub    al,0x77
  4043e1:	cmovs  esp,DWORD PTR [ecx]
  4043e4:	(bad)  
  4043e6:	sub    eax,0xbe6b6e63
  4043eb:	xor    al,cl
  4043ed:	dec    eax
  4043ee:	jle    0x40442a
  4043f0:	and    al,0xee
  4043f2:	out    dx,al
  4043f3:	jb     0x404449
  4043f5:	cdq    
  4043f6:	outs   dx,DWORD PTR ds:[esi]
  4043f7:	out    0x6a,eax
  4043f9:	out    dx,eax
  4043fa:	mov    ds:0xce88b171,al
  4043ff:	sahf   
  404400:	pop    ds
  404401:	test   eax,0xcc615c1e
  404406:	shl    BYTE PTR ds:0x1d6e70a,cl
  40440c:	popf   
  40440d:	jno    0x4043d1
  40440f:	ss stc 
  404411:	cs cdq 
  404413:	mov    al,ds:0x8d63e339
  404418:	and    al,0x86
  40441a:	div    DWORD PTR [esi]
  40441c:	xor    al,dh
  40441e:	mov    cl,0x40
  404420:	test   DWORD PTR [eax+0xc],edi
  404423:	add    edi,DWORD PTR [ecx-0x29]
  404426:	xchg   DWORD PTR [ecx-0x33436318],eax
  40442c:	mov    ds:0x1eda27f5,eax
  404431:	push   eax
  404432:	aad    0x4a
  404434:	lds    ebp,FWORD PTR [edx-0x26e4ca1a]
  40443a:	aam    0xbc
  40443c:	sti    
  40443d:	into   
  40443e:	loop   0x404445
  404440:	xor    al,0xd9
  404442:	mov    eax,0xbe036d07
  404447:	push   esp
  404448:	sub    eax,0xd76afc16
  40444d:	push   cs
  40444e:	enter  0x5878,0xe
  404452:	cmp    al,0x60
  404454:	mov    ebp,0xd8b647a0
  404459:	mov    ch,0x1f
  40445b:	test   DWORD PTR [ecx],esp
  40445d:	ins    DWORD PTR es:[edi],dx
  40445e:	call   0xecf82913
  404463:	in     eax,0x44
  404465:	out    0x4e,eax
  404467:	and    BYTE PTR [ebp+0x173c9db5],bh
  40446d:	hlt    
  40446e:	mov    cl,0x11
  404470:	ins    DWORD PTR es:[edi],dx
  404471:	push   esp
  404472:	xchg   ebx,eax
  404473:	sub    DWORD PTR [ecx-0x3f],0x3357a27d
  40447a:	or     ecx,ebx
  40447c:	test   ecx,edx
  40447e:	ret    0x81c3
  404481:	xchg   DWORD PTR [edx+0x53],ebp
  404484:	dec    edx
  404485:	ja     0x404454
  404487:	xor    al,0x6a
  404489:	imul   ecx,edi,0xffffffc3
  40448c:	mov    eax,0x42a6ae0e
  404491:	rcr    ebp,0x56
  404494:	pop    ebx
  404495:	ins    DWORD PTR es:[edi],dx
  404496:	push   0x5
  404498:	xchg   DWORD PTR [edi],esi
  40449a:	mov    cl,BYTE PTR [eax+0x65]
  40449d:	lock xchg esp,eax
  40449f:	pusha  
  4044a0:	push   ds
  4044a1:	dec    ecx
  4044a2:	mov    bh,0x10
  4044a4:	cmp    ebp,DWORD PTR [esi+esi*4]
  4044a7:	inc    ecx
  4044a8:	mov    cl,0x0
  4044aa:	cmp    bh,al
  4044ac:	out    dx,eax
  4044ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ae:	jb     0x404515
  4044b0:	cli    
  4044b1:	cmp    BYTE PTR [eax-0x5e208be9],ah
  4044b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044b8:	(bad)  
  4044b9:	jge    0x404517
  4044bb:	mov    eax,0xe107db23
  4044c0:	pop    ebx
  4044c1:	and    BYTE PTR [ecx-0x23],dl
  4044c4:	(bad)  
  4044c5:	pop    ecx
  4044c6:	test   al,0x85
  4044c8:	mov    al,ds:0xdbc8e35a
  4044cd:	fwait
  4044ce:	test   BYTE PTR [edi+0x606d9e43],al
  4044d4:	xor    DWORD PTR [ebx-0x44c94c],0xa72c7366
  4044de:	sub    eax,DWORD PTR [esi]
  4044e0:	and    BYTE PTR [ebp-0x1e],ah
  4044e3:	dec    esp
  4044e4:	jne    0x404486
  4044e6:	and    BYTE PTR [eax+esi*4-0x78],ah
  4044ea:	xchg   esi,eax
  4044eb:	inc    esi
  4044ec:	or     al,0x37
  4044ee:	outs   dx,BYTE PTR ds:[esi]
  4044ef:	scas   al,BYTE PTR es:[edi]
  4044f0:	hlt    
  4044f1:	ja     0x404558
  4044f3:	dec    ecx
  4044f4:	es (bad) 
  4044f6:	iret   
  4044f7:	mov    edi,0xc62d644c
  4044fc:	pop    ebx
  4044fd:	call   0x7b7a7164
  404502:	(bad)  
  404503:	rcl    DWORD PTR [edx],0x80
  404506:	(bad)  ds:[edx-0x3c]
  40450a:	or     esp,DWORD PTR [esp+ebx*8]
  40450d:	pop    ds
  40450e:	adc    al,0x1e
  404510:	lods   eax,DWORD PTR ds:[esi]
  404511:	mov    ebp,0x187fbeec
  404516:	xor    eax,0xf206573e
  40451b:	mov    al,0x50
  40451d:	and    eax,0x7011a9f7
  404522:	cmp    bl,0x33
  404525:	fdiv   st,st(3)
  404527:	add    eax,0x31e66ee2
  40452c:	in     al,dx
  40452d:	bound  ecx,QWORD PTR [edx]
  40452f:	xlat   BYTE PTR ds:[ebx]
  404530:	dec    ebx
  404531:	dec    eax
  404532:	pop    edi
  404534:	ds inc edi
  404536:	dec    esp
  404537:	hlt    
  404538:	arpl   bx,bx
  40453a:	addr16 jmp 0x404585
  40453d:	dec    eax
  40453e:	or     esi,DWORD PTR [eax]
  404540:	stc    
  404541:	popa   
  404542:	and    DWORD PTR [ebx-0x1f41ade1],esp
  404548:	popa   
  404549:	push   esp
  40454a:	(bad)  
  40454b:	sub    BYTE PTR [ecx+0x6d],ch
  40454e:	ret    
  40454f:	or     al,0x9a
  404551:	test   al,0xa6
  404553:	test   al,0xf
  404555:	xchg   ebp,eax
  404556:	pop    eax
  404557:	repz ror DWORD PTR ds:0x888c9d21,1
  40455e:	rol    BYTE PTR [eax-0x59d1246],0xd0
  404565:	lock aad 0x1f
  404568:	retf   
  404569:	and    ecx,esp
  40456b:	cmc    
  40456c:	lods   al,BYTE PTR ds:[esi]
  40456d:	xchg   esi,eax
  40456e:	mov    ebx,0xa8ab6e2e
  404573:	fsub   DWORD PTR [eax+0x30]
  404576:	fsubr  QWORD PTR [esi+0x2f]
  404579:	(bad)  
  40457a:	pop    edx
  40457b:	xor    bh,dh
  40457d:	add    ebp,DWORD PTR [edi]
  40457f:	idiv   BYTE PTR [ebx+ebp*8]
  404582:	push   ds
  404583:	mov    al,ds:0xfa19f9e9
  404588:	push   ecx
  404589:	mov    ebp,0x1c8f158a
  40458e:	pop    edi
  40458f:	ja     0x4045c5
  404591:	pop    ecx
  404592:	ror    DWORD PTR [ecx],cl
  404594:	outs   dx,DWORD PTR ds:[esi]
  404595:	int3   
  404596:	(bad)  [ebx-0x30]
  404599:	ror    BYTE PTR [ebx-0x5e],cl
  40459c:	jb     0x4045d3
  40459e:	sbb    BYTE PTR [esi],dh
  4045a0:	jb     0x404609
  4045a2:	jb     0x404623
  4045a4:	das    
  4045a5:	scas   eax,DWORD PTR es:[edi]
  4045a6:	mov    es,WORD PTR [ecx]
  4045a8:	push   edi
  4045a9:	adc    ecx,DWORD PTR [ebp+0x1735327c]
  4045af:	rcl    BYTE PTR [edi],1
  4045b1:	xchg   edi,eax
  4045b2:	push   0x10
  4045b4:	sub    al,0x9c
  4045b6:	cmp    ch,BYTE PTR [ecx+0x1f]
  4045b9:	mov    es,WORD PTR [esi+eax*2]
  4045bc:	jl     0x404636
  4045be:	pop    es
  4045bf:	mov    bl,0x61
  4045c1:	dec    esi
  4045c2:	cld    
  4045c3:	mov    ebx,0x6c10530b
  4045c8:	stc    
  4045c9:	rol    BYTE PTR [esi-0x62e2df72],cl
  4045cf:	cli    
  4045d0:	fwait
  4045d1:	mov    ebx,0x878100f0
  4045d6:	pusha  
  4045d7:	icebp  
  4045d8:	(bad)  
  4045d9:	leave  
  4045da:	jbe    0x40456d
  4045dc:	adc    cl,BYTE PTR [ecx+0x34]
  4045df:	std    
  4045e0:	xchg   BYTE PTR [edx+esi*4+0x17f97385],bl
  4045e7:	sub    bh,BYTE PTR [ebx-0x2f]
  4045ea:	jae    0x4045f6
  4045ec:	retf   0xd9b9
  4045ef:	mov    ecx,0x880c090d
  4045f4:	ds xchg esp,eax
  4045f6:	or     edi,DWORD PTR [esi+0x17f83b45]
  4045fc:	xchg   esp,eax
  4045fd:	or     DWORD PTR [ebx+edx*1+0x66333d85],eax
  404604:	push   ds
  404605:	shr    BYTE PTR [ecx],0xf0
  404608:	mov    al,ds:0x12f088da
  40460d:	adc    DWORD PTR [ecx],ecx
  40460f:	or     ebp,DWORD PTR [edx]
  404611:	(bad)  
  404612:	sub    eax,0x67b86122
  404617:	js     0x404690
  404619:	loope  0x40464a
  40461b:	push   ss
  40461c:	jo     0x404696
  40461e:	nop
  40461f:	push   es
  404620:	jmp    0x1496:0xc827d9ce
  404627:	fsub   QWORD PTR [edx]
  404629:	mov    eax,ds:0xfc70b1af
  40462e:	add    edx,DWORD PTR [edx-0x5c]
  404631:	arpl   WORD PTR [ebx],ax
  404633:	jmp    0x476b8a4e
  404638:	in     eax,dx
  404639:	mov    es:0xb4cd8dfb,eax
  40463f:	or     BYTE PTR ds:0x50064e8b,dl
  404645:	sbb    DWORD PTR [edi+0x11],esi
  404648:	pop    ecx
  404649:	lods   al,BYTE PTR ds:[esi]
  40464a:	out    0xd3,eax
  40464c:	sbb    dh,BYTE PTR [edi]
  40464e:	inc    edx
  40464f:	cdq    
  404650:	loop   0x404671
  404652:	push   cs
  404653:	or     DWORD PTR [edi+0x4ff6ec38],eax
  404659:	sbb    al,0xa3
  40465b:	mov    edi,0x25375eaa
  404660:	cmc    
  404661:	ret    0xfc11
  404664:	mov    eax,ds:0x30b25799
  404669:	xchg   DWORD PTR [eax],eax
  40466b:	jbe    0x4045f0
  40466d:	aam    0x85
  40466f:	dec    ebp
  404670:	div    BYTE PTR [ecx+0x57]
  404673:	mov    ecx,0x9abe8c04
  404678:	imul   esi,DWORD PTR [edi+0x42],0xffffff81
  40467c:	mov    edx,0xff51b784
  404681:	inc    ecx
  404682:	dec    esp
  404683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404684:	cmp    edx,edx
  404686:	sbb    BYTE PTR [esi-0x2c],dl
  404689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40468a:	add    esp,ebx
  40468c:	cli    
  40468d:	and    DWORD PTR [esi-0x1d86318c],ecx
  404693:	retf   0x8f47
  404696:	xor    eax,0x56287717
  40469b:	popa   
  40469c:	mov    esi,DWORD PTR [ecx]
  40469e:	ins    BYTE PTR es:[edi],dx
  40469f:	add    al,0xf
  4046a1:	jnp    0x404708
  4046a3:	mov    eax,ds:0xd121f739
  4046a8:	aad    0xc8
  4046aa:	inc    esi
  4046ab:	cmp    BYTE PTR [edx-0x57],bl
  4046ae:	outs   dx,DWORD PTR ds:[esi]
  4046af:	inc    ebp
  4046b0:	mov    esi,0x71151869
  4046b5:	xor    edx,DWORD PTR [edi]
  4046b7:	call   0x3dbe7577
  4046bc:	ret    0x40c0
  4046bf:	sbb    ebp,DWORD PTR [edx-0x24416de8]
  4046c5:	jbe    0x40470f
  4046c7:	push   ecx
  4046c8:	mov    eax,ebp
  4046ca:	lods   al,BYTE PTR ds:[esi]
  4046cb:	sub    eax,0xab657207
  4046d0:	adc    eax,DWORD PTR [edi+0x598b2b22]
  4046d6:	sub    ebx,edi
  4046d8:	xchg   BYTE PTR [esi+0x3b],ch
  4046db:	dec    edx
  4046dc:	call   0xa4b83605
  4046e1:	idiv   DWORD PTR [esi-0x19]
  4046e4:	stos   DWORD PTR es:[edi],eax
  4046e5:	sbb    bl,BYTE PTR [edx]
  4046e7:	or     edi,ebx
  4046e9:	add    al,0x2b
  4046eb:	pop    edx
  4046ec:	shr    BYTE PTR [eax+0x5d4b656b],1
  4046f2:	imul   eax,DWORD PTR [eax],0xc25cd91
  4046f8:	(bad)  
  4046f9:	test   eax,0xa6b7bba
  4046fe:	cdq    
  4046ff:	cwde   
  404700:	cmp    DWORD PTR [ecx+0x2e0006b2],edx
  404706:	push   esi
  404707:	lock and ch,BYTE PTR [edx]
  40470a:	ror    bl,1
  40470c:	cmp    al,0xbd
  40470e:	punpckhdq mm5,QWORD PTR [ecx+ebp*4+0x17]
  404713:	pop    ecx
  404714:	xchg   edx,eax
  404715:	loop   0x404728
  404717:	sub    eax,0x51589141
  40471c:	jbe    0x4046fc
  40471e:	dec    ebp
  40471f:	and    eax,0xde17588a
  404724:	fwait
  404725:	jg     0x40473b
  404727:	mov    dl,0x8a
  404729:	and    eax,0xcfde183f
  40472e:	push   0x485e0b9f
  404733:	(bad)  
  404735:	test   BYTE PTR [esp+ebx*2+0x1922d0a8],al
  40473c:	shrd   ecx,edx,0x2
  404740:	or     DWORD PTR ds:0x4282a3,0x42825f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42827f
  404753:	or     DWORD PTR ds:0x42837f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0x705b32c3
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [esi],dl
  40477a:	jne    0x4047a3
  40477c:	sub    DWORD PTR cs:[esi],esi
  40477f:	jbe    0x404791
  404781:	cmp    edi,DWORD PTR [eax]
  404783:	loope  0x404779
  404785:	rol    ecx,cl
  404787:	shl    BYTE PTR ds:[ecx],0xb6
  40478b:	push   0xd7684372
  404790:	sub    DWORD PTR es:[esi+0x49],ecx
  404794:	fcmove st,st(3)
  404796:	sub    dh,0xe0
  404799:	push   ebx
  40479a:	dec    ecx
  40479b:	rcr    edx,0x62
  40479e:	repnz fstp TBYTE PTR [eax+esi*2-0x475d1ee4]
  4047a6:	shl    BYTE PTR [ecx-0x69253206],0xd7
  4047ad:	fnstsw WORD PTR [esi+0x402278ed]
  4047b3:	popa   
  4047b4:	sahf   
  4047b5:	xor    DWORD PTR [edi-0x20],ebp
  4047b8:	imul   ecx,DWORD PTR [ebx-0xb],0xffffffb0
  4047bc:	pop    esp
  4047bd:	adc    eax,ecx
  4047bf:	fwait
  4047c0:	mov    dl,0x4d
  4047c2:	and    DWORD PTR [eax],0x38d331f4
  4047c8:	rcl    DWORD PTR [eax-0x96379b5],0x7f
  4047cf:	ret    
  4047d0:	mov    dh,0xd7
  4047d2:	inc    esi
  4047d3:	sub    ah,dh
  4047d5:	mov    dh,dl
  4047d7:	enter  0x828e,0x45
  4047db:	aam    0x24
  4047dd:	and    al,0x42
  4047df:	sub    eax,0xc277b5ba
  4047e4:	es shl bl,1
  4047e7:	or     BYTE PTR [esi-0x7b083210],0x8f
  4047ee:	jne    0x4047c7
  4047f0:	jnp    0x404851
  4047f2:	mov    bh,0x41
  4047f4:	sahf   
  4047f5:	lods   al,BYTE PTR ds:[esi]
  4047f6:	sbb    esp,DWORD PTR [eax-0x52]
  4047f9:	stos   BYTE PTR es:[edi],al
  4047fa:	push   es
  4047fb:	mov    dl,0xe7
  4047fd:	sbb    eax,0xf2676d45
  404802:	inc    edi
  404803:	pusha  
  404804:	mov    ebp,cs
  404806:	aad    0xa6
  404808:	jns    0x4047dd
  40480a:	add    BYTE PTR [edi-0x3482ca9a],cl
  404810:	inc    edi
  404811:	jns    0x4047cb
  404813:	sub    DWORD PTR [eax+0x76357f44],ecx
  404819:	and    ebx,edi
  40481b:	cmp    BYTE PTR [esi-0x600f791f],0x6c
  404822:	sub    al,0x1c
  404824:	and    cl,BYTE PTR [edx-0x52487876]
  40482a:	push   esi
  40482b:	or     al,0x30
  40482d:	or     ah,al
  40482f:	jno    0x4047e8
  404831:	in     al,dx
  404832:	push   cs
  404833:	cmp    BYTE PTR [edx],ch
  404835:	mov    esp,0x44978536
  40483a:	dec    edi
  40483b:	mov    al,ds:0x71ff213a
  404840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404841:	nop
  404842:	and    DWORD PTR [ebx],ebp
  404844:	repz shl esp,cl
  404847:	in     al,0x84
  404849:	mov    ?,eax
  40484b:	dec    BYTE PTR [esi]
  40484d:	mov    WORD PTR [esi],cs
  40484f:	mov    ch,bh
  404851:	sub    DWORD PTR [ebx+edx*1-0x396ac244],ebp
  404858:	pop    edi
  404859:	dec    BYTE PTR [edi]
  40485b:	mov    ds,WORD PTR [ecx-0x62106fff]
  404861:	inc    ebx
  404862:	(bad)  
  404864:	and    BYTE PTR [edx+0x5468add8],dh
  40486a:	inc    ebp
  40486b:	or     eax,0x2d78befa
  404870:	adc    al,0x1f
  404872:	cmp    al,0x7c
  404874:	retf   
  404875:	fucom  st(0)
  404877:	and    cl,BYTE PTR [ebx+0x3]
  40487a:	cli    
  40487b:	retf   0x740
  40487e:	test   DWORD PTR [edx-0x6817eb3d],ebx
  404884:	sub    eax,0x3e177b5b
  404889:	lea    ebx,[edi+0x9e1f8cb]
  40488f:	or     eax,0xe0f2b282
  404894:	fisub  DWORD PTR [eax-0x2]
  404897:	lods   al,BYTE PTR ds:[esi]
  404898:	fdivp  st(3),st
  40489a:	mov    dh,0xf3
  40489c:	mov    esp,0x571562c5
  4048a1:	cmc    
  4048a2:	gs data16 (bad) 
  4048a5:	adc    BYTE PTR [ecx],dh
  4048a7:	shl    DWORD PTR [ecx+0x2bef9181],1
  4048ad:	push   ebp
  4048ae:	daa    
  4048af:	cmp    eax,edi
  4048b1:	dec    eax
  4048b2:	les    eax,FWORD PTR [eax]
  4048b4:	add    dh,BYTE PTR [ebp-0x22]
  4048b7:	ja     0x404937
  4048b9:	repz into 
  4048bb:	fdiv   DWORD PTR [edx-0x52c1639d]
  4048c1:	ror    BYTE PTR ds:0x45941143,cl
  4048c7:	not    BYTE PTR [eax]
  4048c9:	adc    eax,0x733b0d91
  4048ce:	xchg   DWORD PTR [ebx+0x1],ebp
  4048d1:	gs dec edx
  4048d3:	pop    eax
  4048d4:	sub    edx,DWORD PTR [edi+0x52]
  4048d7:	imul   esi
  4048d9:	adc    al,0x11
  4048db:	cmp    edi,DWORD PTR [edx-0x26251efa]
  4048e1:	fcompp 
  4048e3:	mov    cl,BYTE PTR [ebp-0x77a3b71]
  4048e9:	cmp    edi,esi
  4048eb:	aaa    
  4048ec:	and    al,0xad
  4048ee:	(bad)  
  4048ef:	mov    esp,DWORD PTR [edx]
  4048f1:	xchg   edx,eax
  4048f2:	cwde   
  4048f3:	test   DWORD PTR [ebp+0x7b49eb35],edi
  4048f9:	inc    ecx
  4048fa:	and    esp,DWORD PTR [eax-0x55]
  4048fd:	sbb    al,0x97
  4048ff:	mov    edi,0x877175eb
  404904:	dec    eax
  404905:	pusha  
  404906:	mov    edi,0x4f29fb00
  40490b:	(bad)  
  40490c:	add    eax,0x64947c6a
  404911:	shr    al,1
  404913:	mov    bh,0xfb
  404915:	(bad)  
  404916:	loopne 0x40497d
  404918:	stos   DWORD PTR es:[edi],eax
  404919:	jbe    0x4048e5
  40491b:	xchg   esp,eax
  40491c:	lahf   
  40491d:	and    bh,cl
  40491f:	cs push esp
  404921:	out    0x92,eax
  404923:	nop
  404924:	sbb    eax,0x2a9777ee
  404929:	pop    ebp
  40492a:	mov    ch,0x83
  40492c:	sub    DWORD PTR [edx+0x643c2458],esp
  404932:	cmp    al,0xa8
  404934:	xchg   edx,eax
  404935:	fisttp WORD PTR [edx]
  404937:	add    BYTE PTR [edx],bl
  404939:	dec    eax
  40493a:	scas   eax,DWORD PTR es:[edi]
  40493b:	cdq    
  40493c:	test   ecx,eax
  40493e:	mov    bl,0x71
  404940:	test   al,0x43
  404942:	pop    es
  404943:	pop    ecx
  404944:	leave  
  404945:	jg     0x4048d5
  404947:	xor    DWORD PTR [esp+edx*4+0x2e],ecx
  40494b:	in     eax,dx
  40494c:	pop    ebp
  40494d:	and    al,0xe7
  40494f:	(bad)  
  404950:	jmp    0x404944
  404952:	mov    esp,0xefd89d7c
  404957:	pop    es
  404958:	mov    DWORD PTR [ecx+0xbdc7b6b],eax
  40495e:	push   esi
  40495f:	fst    QWORD PTR ds:0x891c6bac
  404965:	aam    0xbf
  404967:	xchg   edi,eax
  404968:	jmp    0xe0a24959
  40496d:	addr16 or al,0xb5
  404970:	dec    ecx
  404971:	inc    edi
  404972:	das    
  404973:	popf   
  404974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404975:	cmp    bh,BYTE PTR [ecx+0x15]
  404978:	push   esp
  404979:	pop    ecx
  40497a:	lahf   
  40497b:	inc    BYTE PTR [edi+0x37]
  40497e:	pop    esi
  40497f:	mov    esp,0x76f9dad6
  404984:	or     al,BYTE PTR [ebx-0x28]
  404987:	iret   
  404988:	js     0x404924
  40498a:	rcr    BYTE PTR [ebp-0x4b6d55f2],0x5f
  404991:	mov    ds:0x3d0825d2,al
  404996:	sbb    eax,DWORD PTR ds:0xe6654822
  40499c:	je     0x4049ee
  40499e:	repnz mov ecx,0xf2543037
  4049a4:	push   ecx
  4049a5:	arpl   WORD PTR [esi-0x5fc87212],sp
  4049ab:	stos   DWORD PTR es:[edi],eax
  4049ac:	mov    ebx,0x7a28a91e
  4049b1:	(bad)  
  4049b2:	push   ss
  4049b3:	inc    edx
  4049b4:	fdivr  st,st(5)
  4049b6:	repnz stos DWORD PTR es:[edi],eax
  4049b8:	jb     0x4049db
  4049ba:	loop   0x4049c8
  4049bc:	ins    BYTE PTR es:[edi],dx
  4049bd:	xor    eax,0xc183456f
  4049c2:	mov    ebp,0x3faf602
  4049c7:	pop    ds
  4049c8:	nop
  4049c9:	popf   
  4049ca:	fwait
  4049cb:	push   cs
  4049cc:	js     0x40496a
  4049ce:	sbb    al,0x7f
  4049d0:	add    BYTE PTR [ecx+0x6e],dl
  4049d3:	xor    eax,edx
  4049d5:	xor    BYTE PTR [edi],bh
  4049d7:	popa   
  4049d8:	mov    dh,0x8a
  4049da:	pop    edi
  4049db:	jg     0x404982
  4049dd:	sahf   
  4049de:	(bad)  
  4049df:	dec    esp
  4049e0:	test   al,0x58
  4049e2:	sub    esp,DWORD PTR [eax+0xde7d49f]
  4049e8:	or     esp,ebx
  4049ea:	cmp    ebx,DWORD PTR [edi-0x67b86cfa]
  4049f0:	jne    0x40498c
  4049f2:	sbb    bh,BYTE PTR [ebx+0x5f]
  4049f5:	ret    0x20ba
  4049f8:	xchg   ebp,eax
  4049f9:	cmc    
  4049fa:	cmc    
  4049fb:	popf   
  4049fc:	test   BYTE PTR [edi+0x55c54fcd],0x26
  404a03:	aas    
  404a04:	shl    BYTE PTR [edi+0x74a008b4],1
  404a0a:	cmp    dl,ah
  404a0c:	mov    ebx,0xacb79166
  404a11:	sub    al,0x72
  404a13:	stos   DWORD PTR es:[edi],eax
  404a14:	mov    ecx,0x4638b9c5
  404a19:	mov    edx,0x131e75aa
  404a1e:	cli    
  404a1f:	dec    edx
  404a20:	or     al,0xd0
  404a22:	jg     0x404a83
  404a24:	das    
  404a25:	je     0x404a3d
  404a27:	ja     0x404a11
  404a29:	nop
  404a2a:	or     eax,0x629c047d
  404a2f:	gs sar ah,0xcf
  404a33:	xchg   ebp,eax
  404a34:	mov    ebp,0x6e18bdd2
  404a39:	add    DWORD PTR [esi],0xffffffa5
  404a3c:	mov    eax,ds:0x45171929
  404a41:	fisub  DWORD PTR [edx]
  404a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a44:	mov    esi,0xa564735a
  404a49:	xor    eax,eax
  404a4b:	jmp    0x56c5:0xe325408
  404a52:	add    al,0xd5
  404a54:	or     al,0x30
  404a56:	shr    esi,0xea
  404a59:	js     0x404a57
  404a5b:	lahf   
  404a5c:	cmp    ebx,ebx
  404a5e:	push   ebx
  404a5f:	hlt    
  404a60:	pop    edi
  404a61:	leave  
  404a62:	test   eax,0x5bc922bb
  404a67:	push   ecx
  404a68:	int3   
  404a69:	mov    ebx,0x3f66d77a
  404a6e:	mov    ch,0xf8
  404a70:	cli    
  404a71:	mov    dl,BYTE PTR [eax+0x4ce6369b]
  404a77:	push   ebx
  404a78:	sbb    dh,BYTE PTR [edi-0xffd5a69]
  404a7e:	lock test al,0xcb
  404a81:	repz and ah,ah
  404a84:	xchg   ecx,eax
  404a85:	popa   
  404a86:	adc    ebx,DWORD PTR [esi+0x3e]
  404a89:	addr16 push ebx
  404a8b:	cmp    DWORD PTR [edx+0x1a83fe40],0x7f0a6c5f
  404a95:	test   eax,0x350ff28
  404a9a:	nop
  404a9b:	into   
  404a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a9d:	or     BYTE PTR [edi],0xd8
  404aa0:	(bad)  
  404aa1:	ret    0xa8e1
  404aa4:	jmp    0x404a88
  404aa6:	mov    eax,ds:0xfe8acc70
  404aab:	pop    edi
  404aac:	sub    eax,0x93f4b1f0
  404ab1:	retf   0x21af
  404ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab5:	lgs    ebx,FWORD PTR cs:[ecx+0x2abb8c3c]
  404abd:	mov    cl,0x24
  404abf:	outs   dx,DWORD PTR ds:[esi]
  404ac0:	das    
  404ac1:	es jmp 0x404ae6
  404ac4:	call   0xcfbf:0xecdff0b
  404acb:	call   0x3f7e:0x2ae520dd
  404ad2:	sub    al,0x57
  404ad4:	test   BYTE PTR [esi],ch
  404ad6:	mov    eax,0x8f2b10
  404adb:	retf   0xff5
  404ade:	(bad)  
  404adf:	gs jle 0x404b3e
  404ae2:	xchg   esi,eax
  404ae3:	aaa    
  404ae4:	adc    DWORD PTR [eax],ebp
  404ae6:	addr16 pop ebp
  404ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ae9:	and    esp,ebp
  404aeb:	ret    
  404aec:	mov    ds:0xe808a5ec,eax
  404af1:	jns    0x404abd
  404af3:	sbb    eax,edi
  404af5:	fwait
  404af6:	nop
  404af7:	jg     0x404a9e
  404af9:	into   
  404afa:	push   ebp
  404afb:	mov    eax,ds:0x4b4f9f58
  404b00:	xchg   ecx,eax
  404b01:	mov    al,0xcc
  404b03:	inc    edi
  404b04:	rsqrtps xmm7,xmm5
  404b07:	repnz and ah,cl
  404b0a:	sub    eax,0xbb1e6ef2
  404b0f:	fimul  WORD PTR [edx+ecx*1-0x7b816290]
  404b16:	and    BYTE PTR [eax-0x6ec18e9a],bl
  404b1c:	fcom   DWORD PTR [ecx+0x4049e357]
  404b22:	mov    ds:0xbe65d7d5,eax
  404b27:	pop    edx
  404b28:	retf   0x277a
  404b2b:	data16 arpl WORD PTR cs:[edx+0x39],dx
  404b30:	sub    ecx,ecx
  404b32:	xor    eax,DWORD PTR cs:[esi+0x28]
  404b36:	dec    edi
  404b37:	lods   eax,DWORD PTR ds:[esi]
  404b38:	mov    eax,0x8b0b8baf
  404b3d:	push   ebx
  404b3e:	add    al,0x31
  404b40:	jge    0x404b26
  404b42:	add    DWORD PTR ds:0x428293,0x428307
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	push   edi
  404b60:	dec    eax
  404b61:	inc    ebx
  404b62:	push   0x60
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    bh,al
  404b6c:	fwait
  404b6d:	(bad)  
  404b6e:	add    esp,DWORD PTR es:[ecx-0x746ac2d7]
  404b75:	push   cs
  404b76:	pop    esp
  404b77:	jns    0x404be7
  404b79:	les    esp,FWORD PTR [edx+0x44707ae7]
  404b7f:	pusha  
  404b80:	pop    esi
  404b81:	(bad)  
  404b83:	in     al,dx
  404b84:	or     BYTE PTR [ebx*8-0xcd77317],bl
  404b8b:	mov    al,ds:0x282d0e29
  404b90:	adc    eax,0xafd53d38
  404b95:	ror    DWORD PTR [eax],cl
  404b97:	dec    esp
  404b98:	push   eax
  404b99:	inc    eax
  404b9a:	retf   
  404b9b:	pop    edi
  404b9c:	mov    dl,0x6
  404b9e:	loope  0x404b26
  404ba0:	xor    eax,0xb88fabb
  404ba5:	loopne 0x404b6a
  404ba7:	outs   dx,BYTE PTR ds:[esi]
  404ba8:	jns    0x404b30
  404baa:	lods   eax,DWORD PTR ds:[esi]
  404bab:	(bad)
  404baf:	pushf  
  404bb0:	mov    ds:0xe29ca3bc,al
  404bb5:	imul   eax,DWORD PTR [esi-0x42],0xffffffa4
  404bb9:	daa    
  404bba:	sub    eax,0xdea1761e
  404bbf:	pop    ds
  404bc0:	pop    edi
  404bc1:	test   al,0xb
  404bc3:	retf   0x3ba
  404bc6:	(bad)  
  404bc7:	popf   
  404bc8:	mov    dl,0xf0
  404bca:	sbb    al,0x2
  404bcc:	in     eax,dx
  404bcd:	jl     0x404b8f
  404bcf:	loope  0x404bfa
  404bd1:	fst    QWORD PTR [eax+0x72]
  404bd4:	cmp    ah,al
  404bd6:	xor    dl,BYTE PTR [ecx+ebx*1]
  404bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bda:	jle    0x404c03
  404bdc:	lds    esi,FWORD PTR [ebx+0x5f]
  404bdf:	jmp    0x55b2:0xff83a98d
  404be6:	xor    bh,BYTE PTR [edx+0x1ae89ad4]
  404bec:	test   al,cl
  404bee:	retf   
  404bef:	xor    cl,BYTE PTR [ebp+ebx*2-0x408cf13a]
  404bf6:	mov    ds:0x8b10b04b,al
  404bfb:	cli    
  404bfc:	add    DWORD PTR [ebx-0x9c481d],ebx
  404c02:	mov    esi,0xf0c23978
  404c07:	mov    ebx,0xaba0db45
  404c0c:	dec    ebp
  404c0d:	fidiv  DWORD PTR [edi+0x11]
  404c10:	mov    ds:0x1a7f3f21,al
  404c15:	cmp    al,BYTE PTR [edi+edx*4]
  404c18:	addr16 pop ebx
  404c1a:	jae    0x404c18
  404c1c:	jecxz  0x404bae
  404c1e:	add    DWORD PTR [esp+eax*1-0x55],ebx
  404c22:	mov    eax,0x14b1e26a
  404c27:	mov    al,0x25
  404c29:	mov    edi,DWORD PTR [eax+0x1688c227]
  404c2f:	(bad)  
  404c31:	add    al,0x51
  404c33:	je     0x404be7
  404c35:	jne    0x404c19
  404c37:	(bad)  
  404c38:	and    dh,BYTE PTR [eax+esi*8-0x37]
  404c3c:	call   0x97dab656
  404c41:	sti    
  404c42:	add    al,0x73
  404c44:	imul   edi,DWORD PTR [ebp+0x54],0x1d181f55
  404c4b:	(bad)  
  404c4c:	sbb    eax,0x4531280b
  404c51:	cli    
  404c52:	data16 xor al,0xf8
  404c55:	mov    fs,WORD PTR [ecx]
  404c57:	mov    cs:0x3375c61d,al
  404c5d:	aaa    
  404c5e:	out    dx,eax
  404c5f:	xchg   edi,eax
  404c60:	adc    BYTE PTR [eax+edi*4-0x9],dh
  404c64:	aas    
  404c65:	jbe    0x404cc1
  404c67:	dec    esi
  404c68:	arpl   WORD PTR [edi],bx
  404c6a:	fwait
  404c6b:	mov    bh,0xfa
  404c6d:	add    BYTE PTR [edx+0x3e],dh
  404c70:	xchg   ebp,eax
  404c71:	pop    eax
  404c72:	ret    0xd2ba
  404c75:	inc    edi
  404c76:	jp     0x404c5b
  404c78:	jecxz  0x404c4c
  404c7a:	push   eax
  404c7b:	jae    0x404c5e
  404c7d:	dec    esi
  404c7e:	mov    bh,BYTE PTR [edi]
  404c80:	loope  0x404c74
  404c82:	push   edi
  404c83:	sbb    eax,0xd4e34561
  404c88:	adc    BYTE PTR [edi],al
  404c8a:	ficomp WORD PTR [esi+0x792edf3a]
  404c90:	ins    DWORD PTR es:[edi],dx
  404c91:	clc    
  404c92:	mov    ebp,0x4a9ac602
  404c97:	popa   
  404c98:	arpl   WORD PTR [edi-0x5],bp
  404c9b:	inc    ecx
  404c9c:	mov    bh,0x3d
  404c9e:	jecxz  0x404ce6
  404ca0:	mov    ah,0x50
  404ca2:	or     BYTE PTR [ecx-0x4],dl
  404ca5:	jae    0x404c5b
  404ca7:	push   esi
  404ca8:	push   eax
  404ca9:	pop    edi
  404caa:	imul   ecx,DWORD PTR [ecx-0x33],0xffffffb4
  404cae:	xchg   ebx,eax
  404caf:	add    eax,0x2b20bdc7
  404cb4:	push   esp
  404cb5:	add    ebp,DWORD PTR ds:[edi-0x40]
  404cb9:	push   cs
  404cba:	das    
  404cbb:	dec    edx
  404cbc:	out    0x75,al
  404cbe:	xchg   edi,eax
  404cbf:	ja     0x404d34
  404cc1:	cmp    DWORD PTR [esi],0x33746478
  404cc7:	cmc    
  404cc8:	cld    
  404cc9:	leave  
  404cca:	popf   
  404ccb:	and    DWORD PTR [esi],esi
  404ccd:	pushf  
  404cce:	arpl   WORD PTR [eax],di
  404cd0:	nop
  404cd1:	or     BYTE PTR ds:0x65aab833,0x34
  404cd8:	mov    al,0x89
  404cda:	fst    st(5)
  404cdc:	mov    cs,ebx
  404cde:	shufps xmm3,XMMWORD PTR [ecx],0xd4
  404ce2:	xor    DWORD PTR [edi],edi
  404ce4:	xchg   DWORD PTR [eax],ebx
  404ce6:	jb     0x404ce5
  404ce8:	jb     0x404d49
  404cea:	(bad)  
  404ceb:	sub    eax,0x70be6efa
  404cf0:	or     eax,0xd6c2288b
  404cf5:	stos   BYTE PTR es:[edi],al
  404cf6:	push   0xd7aa9aba
  404cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cfc:	xlat   BYTE PTR ds:[ebx]
  404cfd:	xchg   esp,eax
  404cfe:	pop    ebp
  404cff:	cld    
  404d00:	mov    bh,0x6e
  404d02:	jo     0x404d40
  404d04:	mov    ds:0x3574417b,al
  404d09:	xchg   DWORD PTR ds:0x4cafbd78,edi
  404d0f:	push   esp
  404d10:	int3   
  404d11:	xor    DWORD PTR [ecx],ebp
  404d13:	outs   dx,DWORD PTR ds:[esi]
  404d14:	mov    dl,0x13
  404d16:	pop    ds
  404d17:	or     DWORD PTR [ebx],edi
  404d19:	mov    dl,0x9c
  404d1b:	sub    DWORD PTR [eax],esp
  404d1d:	outs   dx,DWORD PTR ds:[esi]
  404d1e:	sbb    eax,0xea1cf1e1
  404d23:	and    dl,BYTE PTR [ebp+ecx*2-0x6f0e6915]
  404d2a:	mov    bl,0xa7
  404d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2d:	sahf   
  404d2e:	sahf   
  404d2f:	jp     0x404d0d
  404d31:	shr    dl,1
  404d33:	inc    ebx
  404d34:	cwde   
  404d35:	push   ecx
  404d36:	ret    
  404d37:	leave  
  404d38:	xchg   DWORD PTR [ebx-0x60f7e705],ebp
  404d3e:	aam    0x24
  404d40:	sbb    DWORD PTR [esi+0x32a54e66],0x8dd2b45a
  404d4a:	int    0x7c
  404d4c:	mov    bl,0x21
  404d4e:	(bad)  
  404d4f:	adc    BYTE PTR [edx-0x2d],ch
  404d52:	mov    eax,0x40745224
  404d57:	mov    ah,cl
  404d59:	pop    ss
  404d5a:	mov    ecx,0x9d5e59bf
  404d5f:	dec    edx
  404d60:	and    ah,bh
  404d62:	jmp    0xf4b3:0x89ad
  404d68:	out    dx,al
  404d69:	sbb    al,0xa2
  404d6b:	fnstenv [edx+0x5b]
  404d6e:	jge    0x404dcb
  404d70:	mov    cl,0x97
  404d72:	inc    ebx
  404d73:	push   eax
  404d74:	mov    DWORD PTR [ecx+eiz*2+0x57265ce3],edi
  404d7b:	lahf   
  404d7c:	leave  
  404d7d:	push   eax
  404d7e:	int    0x67
  404d80:	jne    0x404ddf
  404d82:	or     dh,BYTE PTR [eax]
  404d84:	dec    edx
  404d85:	in     al,dx
  404d86:	jmp    0x9151:0xfc0dd312
  404d8d:	out    dx,al
  404d8e:	cwde   
  404d8f:	dec    esi
  404d90:	jmp    0xe5bcccbe
  404d95:	dec    edx
  404d96:	pop    esp
  404d97:	and    DWORD PTR [eax],esp
  404d99:	enter  0xa13,0x69
  404d9d:	mov    cl,0x48
  404d9f:	cmp    eax,0x51aca597
  404da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da5:	test   DWORD PTR [eax+edi*8-0x1ba0c346],edx
  404dac:	mov    ds:0xb52d6b04,eax
  404db1:	sbb    esp,ecx
  404db3:	or     eax,DWORD PTR [eax-0x71]
  404db6:	dec    esp
  404db7:	nop
  404db8:	aad    0xac
  404dba:	sahf   
  404dbb:	pop    esp
  404dbc:	add    ch,BYTE PTR [esi]
  404dbe:	or     DWORD PTR [edx-0x29],ecx
  404dc1:	xor    DWORD PTR [edi+edx*2+0x1d2f4894],esi
  404dc8:	js     0x404e1a
  404dca:	or     al,0x91
  404dcc:	rol    bl,1
  404dce:	mov    ch,0x50
  404dd0:	cmc    
  404dd1:	clc    
  404dd2:	adc    DWORD PTR [edi],esi
  404dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd5:	jbe    0x404d95
  404dd7:	pop    edx
  404dd8:	ror    BYTE PTR ds:0xcf506194,cl
  404dde:	pop    ss
  404ddf:	and    ch,BYTE PTR [eax+0x2427d831]
  404de5:	int3   
  404de6:	sub    DWORD PTR [ebx+eiz*4+0x23c83b91],edx
  404ded:	nop
  404dee:	ins    BYTE PTR es:[edi],dx
  404def:	lods   al,BYTE PTR ds:[esi]
  404df0:	stos   DWORD PTR es:[edi],eax
  404df1:	out    0x68,eax
  404df3:	push   es
  404df4:	ret    
  404df5:	bound  ecx,QWORD PTR [ecx-0x5ef28391]
  404dfb:	int    0xa5
  404dfd:	jne    0x404d99
  404dff:	push   es
  404e00:	sub    al,BYTE PTR [edx-0x2d]
  404e03:	dec    ebp
  404e04:	sub    BYTE PTR [ebx-0x2f7dcda2],bh
  404e0a:	(bad)  
  404e0b:	hlt    
  404e0c:	in     eax,dx
  404e0d:	repnz push 0xffffff9a
  404e10:	or     eax,0x9bc4f88
  404e15:	cli    
  404e16:	lods   eax,DWORD PTR ds:[esi]
  404e17:	push   ebx
  404e18:	sbb    eax,0x17bc94ed
  404e1d:	mov    ebp,0x854760b6
  404e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e23:	fwait
  404e24:	pop    ebp
  404e25:	out    dx,al
  404e26:	dec    ebp
  404e27:	xchg   ch,al
  404e29:	fwait
  404e2a:	or     BYTE PTR [eax],0xbb
  404e2d:	lods   eax,DWORD PTR ds:[esi]
  404e2e:	push   esp
  404e2f:	repz xchg edi,eax
  404e31:	sub    eax,0x42282419
  404e36:	sbb    eax,DWORD PTR gs:[ecx]
  404e39:	xchg   esp,eax
  404e3a:	xchg   esp,eax
  404e3b:	jns    0x404e89
  404e3d:	sbb    esi,0xa273cdff
  404e43:	push   edx
  404e44:	jae    0x404ea8
  404e46:	idiv   BYTE PTR [esi]
  404e48:	add    BYTE PTR [ecx+0xa],dl
  404e4b:	or     eax,0xbef1ea51
  404e50:	xchg   edx,eax
  404e51:	js     0x404e6d
  404e53:	(bad)  
  404e54:	jne    0x404eba
  404e56:	or     bl,BYTE PTR [ebp+0xc]
  404e59:	retf   
  404e5a:	push   cx
  404e5c:	out    0x11,al
  404e5e:	mov    edi,0x114e0e90
  404e63:	(bad)  
  404e64:	add    eax,0x4b78a9bb
  404e69:	jg     0x404e02
  404e6b:	outs   dx,DWORD PTR ds:[esi]
  404e6c:	sbb    cl,BYTE PTR [eax]
  404e6e:	sub    al,0x2d
  404e70:	or     al,0x6c
  404e72:	aas    
  404e73:	xor    dl,dl
  404e75:	inc    esi
  404e76:	cmp    ch,ch
  404e78:	fcom   st(4)
  404e7a:	push   edi
  404e7b:	int3   
  404e7c:	mov    eax,ds:0xb378bd82
  404e81:	int3   
  404e82:	jno    0x404eb6
  404e84:	fstp   DWORD PTR [edx]
  404e86:	xchg   cl,dl
  404e88:	leave  
  404e89:	cdq    
  404e8a:	mov    dh,0x96
  404e8c:	push   cs
  404e8d:	cmp    DWORD PTR [edi+0x35024c37],esp
  404e93:	fcomi  st,st(1)
  404e95:	lods   eax,DWORD PTR ds:[esi]
  404e96:	mov    ecx,0xee5f6942
  404e9c:	rcl    esp,cl
  404e9e:	test   eax,0x3ed8fd35
  404ea3:	loop   0x404eb0
  404ea5:	scas   eax,DWORD PTR es:[edi]
  404ea6:	std    
  404ea7:	cmp    al,0x75
  404ea9:	cli    
  404eaa:	iret   
  404eab:	(bad)  [edx+esi*1]
  404eae:	xor    bh,BYTE PTR [edi-0x4a]
  404eb1:	push   es
  404eb2:	cmp    bl,BYTE PTR [ecx-0x5b]
  404eb5:	or     al,0xbb
  404eb7:	jnp    0x404f2c
  404eb9:	push   esp
  404eba:	(bad)  
  404ebb:	xchg   ebx,eax
  404ebc:	and    ch,bl
  404ebe:	les    edi,FWORD PTR [esi]
  404ec0:	cdq    
  404ec1:	or     BYTE PTR [esi+edx*1-0x37],cl
  404ec5:	stos   BYTE PTR es:[edi],al
  404ec6:	cmp    BYTE PTR [edx+0x7c],cl
  404ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eca:	mov    dl,BYTE PTR [edi-0x6e9627e8]
  404ed0:	fsub   QWORD PTR [ebx-0x24]
  404ed3:	jb     0x404eff
  404ed5:	pop    esp
  404ed6:	xor    eax,0x915c47e0
  404edb:	das    
  404edc:	cmp    eax,0x1d06b66a
  404ee1:	(bad)  
  404ee2:	mul    BYTE PTR [edx+0x19]
  404ee5:	pushf  
  404ee6:	mov    DWORD PTR [ebp-0x2f],0xe49fc71a
  404eed:	int    0x5b
  404eef:	mov    ch,0x5c
  404ef1:	mov    ch,0xa5
  404ef3:	in     al,dx
  404ef4:	dec    ebp
  404ef5:	std    
  404ef6:	inc    esp
  404ef7:	mov    eax,DWORD PTR [edi-0x34]
  404efa:	mov    al,0x9a
  404efc:	out    dx,al
  404efd:	leave  
  404efe:	sub    bh,bh
  404f00:	rcr    bl,0x4e
  404f03:	outs   dx,DWORD PTR ds:[esi]
  404f04:	mov    cs,WORD PTR [esi]
  404f06:	fild   QWORD PTR ds:[eax]
  404f09:	sbb    al,0x5c
  404f0b:	neg    BYTE PTR [ebx+esi*2]
  404f0e:	icebp  
  404f0f:	pop    edi
  404f10:	sub    DWORD PTR [ecx+ebx*2],esp
  404f13:	ja     0x404ebe
  404f15:	std    
  404f16:	fst    DWORD PTR [ebp+0x46]
  404f19:	shr    DWORD PTR [edx+0x79],cl
  404f1c:	cmp    eax,0xe61601b
  404f21:	pop    es
  404f22:	mov    ds:0xc4d1ccfc,al
  404f27:	pop    ss
  404f28:	lea    esi,ds:0x550b32ce
  404f2e:	in     al,0x81
  404f30:	sbb    eax,0x42828b
  404f35:	push   esi
  404f36:	je     0x404f38
  404f38:	add    cl,al
  404f3a:	loope  0x404f5a
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428297
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x4283ab,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428387,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428393,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428393,0x0
  404f72:	mov    DWORD PTR ds:0x428323,ebx
  404f78:	mov    DWORD PTR ds:0x42839b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42827b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42824f,ebx
  404f97:	mov    DWORD PTR ds:0x428287,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428393,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d9c
  404fbc:	and    edx,DWORD PTR ds:0x428333
  404fc2:	sub    DWORD PTR ds:0x42825f,ecx
  404fc8:	or     DWORD PTR ds:0x428253,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42818f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428373
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42817b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428173
  404ff2:	xor    DWORD PTR ds:0x4282b3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428287
  404ffe:	add    DWORD PTR ds:0x4283ab,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282b3
  40500c:	add    DWORD PTR ds:0x42828b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428393,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42839f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428187,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x4283af,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42829f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428193,0x428277
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42838b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42839b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42828b,0x428397
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428283,0x4282a3
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428257,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42838b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42839b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x4283a7,0x42824b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428273,0x42825f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x4282af,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42828f,0x42826b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428177,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42839b,0x0
  40512f:	mov    DWORD PTR ds:0x4281ab,edx
  405135:	mov    DWORD PTR ds:0x42837b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42818b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42839b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fbc
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428dc4
  40516c:	or     DWORD PTR ds:0x428283,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283b7
  40517c:	adc    ecx,DWORD PTR ds:0x42819b
  405182:	xor    DWORD PTR ds:0x42818b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42829f,edx
  405192:	cmp    DWORD PTR ds:0x4282fb,0x0
  405199:	mov    DWORD PTR ds:0x428327,0x66a6
  4051a3:	mov    DWORD PTR ds:0x428307,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282fb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428dc8
  4051d1:	inc    DWORD PTR ds:0x428297
  4051d7:	mov    ecx,DWORD PTR ds:0x4281d7
  4051dd:	mov    edx,DWORD PTR ds:0x4283d7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282fb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281cf
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428283,edx
  405201:	mov    edx,DWORD PTR ds:0x4281e7
  405207:	mov    ecx,DWORD PTR ds:0x4283d7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42838f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42829f
  405233:	sub    DWORD PTR ds:0x4281a3,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42837b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428187,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42828f,0x428193
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x4283ab,0x428277
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x4283a3,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42817b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282b3,0x0
  40529a:	mov    DWORD PTR ds:0x428243,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428283
  4052aa:	mov    DWORD PTR ds:0x42830b,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283b3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42829b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282b3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428079
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dcc
  4052ea:	add    edx,DWORD PTR ds:0x42826b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428193
  4052fc:	and    DWORD PTR ds:0x42819f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428277
  40530f:	add    DWORD PTR ds:0x4282b3,edx
  405315:	mov    edx,DWORD PTR ds:0x42829b
  40531b:	add    DWORD PTR ds:0x428183,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x428307,0x42823f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428323,0x0
  40533c:	mov    DWORD PTR ds:0x42831f,edi
  405342:	mov    DWORD PTR ds:0x428287,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42832b,0x4d36
  405357:	mov    DWORD PTR ds:0x4283a7,0x1e95
  405361:	cmp    DWORD PTR ds:0x428323,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428dd0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x4283af,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283ef
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42838f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42825f
  40539c:	xor    DWORD PTR ds:0x42816b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42828b,edx
  4053ae:	cmp    DWORD PTR ds:0x42830b,0x0
  4053b5:	mov    DWORD PTR ds:0x428177,edi
  4053bb:	not    DWORD PTR ds:0x42824b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x4281a7,0xab0
  4053d0:	cmp    DWORD PTR ds:0x42830b,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428dd4
  4053f6:	sub    ecx,DWORD PTR ds:0x4281ab
  4053fc:	sub    DWORD PTR ds:0x42824b,0x6432
  405406:	or     DWORD PTR ds:0x42826f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42819f
  405416:	sub    DWORD PTR ds:0x4283a3,edi
  40541c:	mov    DWORD PTR ds:0x42824b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428287,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282ff,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x4283af
  405450:	sub    edx,DWORD PTR ds:0x428163
  405456:	mov    DWORD PTR ds:0x4283af,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	dec    ebx
  40546e:	test   BYTE PTR [ecx+0x18b9e67c],cl
  405474:	sbb    BYTE PTR [esi-0x48e7e7ee],bl
  40547a:	stos   BYTE PTR es:[edi],al
  40547b:	iret   
  40547c:	fsubrp st(4),st
  40547e:	leave  
  40547f:	pop    edx
  405480:	lock lahf 
  405482:	xor    eax,0x1735744a
  405487:	xor    eax,0x9afb8ce2
  40548c:	bound  edi,QWORD PTR [ebp-0x7070e41f]
  405492:	sti    
  405493:	data16 sub BYTE PTR [ebx-0x2],bh
  405497:	mov    ebp,0x2beb1ca2
  40549c:	int3   
  40549d:	xor    eax,0xc2961f48
  4054a2:	pop    ss
  4054a3:	aad    0xd4
  4054a5:	mov    dh,0xd3
  4054a7:	xchg   ebx,eax
  4054a8:	shl    DWORD PTR [ecx],cl
  4054aa:	cmp    BYTE PTR [ecx+0x3],dl
  4054ad:	stos   DWORD PTR es:[edi],eax
  4054ae:	mov    eax,ds:0x1f0d54b0
  4054b3:	daa    
  4054b4:	(bad)  
  4054b5:	push   eax
  4054b6:	lods   al,BYTE PTR ds:[esi]
  4054b7:	or     eax,edi
  4054b9:	ffreep st(0)
  4054bb:	mov    DWORD PTR [edx-0x67c8281c],0x579b9650
  4054c5:	mov    DWORD PTR [edx+0x180c3cca],esp
  4054cb:	imul   ebx,DWORD PTR [esi],0xbfd0c6a8
  4054d1:	pop    edx
  4054d2:	imul   ebp,DWORD PTR [edi],0xd7a073c
  4054d8:	mov    dh,0x9d
  4054da:	lods   eax,DWORD PTR ds:[esi]
  4054db:	pop    ecx
  4054dc:	(bad)  
  4054e0:	popa   
  4054e1:	lds    esi,FWORD PTR [edx]
  4054e3:	aaa    
  4054e4:	xor    al,0x36
  4054e6:	adc    eax,ebp
  4054e8:	jmp    0x652:0x98a5343b
  4054ef:	and    eax,0x18bc8131
  4054f4:	and    bl,BYTE PTR [edi]
  4054f6:	cs hlt 
  4054f8:	mov    dl,0xd
  4054fa:	xchg   edi,eax
  4054fb:	xchg   esi,eax
  4054fc:	sbb    al,0x5c
  4054fe:	nop
  4054ff:	lea    esi,[edx-0x6c]
  405502:	out    0xbf,eax
  405504:	(bad)  
  405505:	mov    ch,0xb1
  405507:	(bad)  
  405508:	mov    ch,0x8b
  40550a:	cmp    eax,0xd69b7c1f
  40550f:	sbb    DWORD PTR [ebp+0x4e],0xffffffa9
  405513:	scas   al,BYTE PTR es:[edi]
  405514:	cmp    eax,0x8c31e6a7
  405519:	add    DWORD PTR [edi],edx
  40551b:	jg     0x405586
  40551d:	dec    eax
  40551e:	aam    0xb7
  405520:	imul   ebx,DWORD PTR ds:0x7d659da3,0x5af18f0
  40552a:	dec    esp
  40552b:	mov    ds:0xfebc036d,eax
  405530:	(bad)  
  405531:	icebp  
  405532:	xor    DWORD PTR [ecx+0x7b46c448],ecx
  405538:	ds pop ss
  40553a:	daa    
  40553b:	inc    eax
  40553c:	mov    al,0xd6
  40553e:	jno    0x405580
  405540:	xchg   ebx,eax
  405541:	mov    bh,0xf1
  405543:	mov    ecx,0x1af70406
  405548:	pop    ecx
  405549:	adc    al,0x78
  40554b:	xchg   ebx,ebp
  40554d:	nop
  40554e:	or     ch,al
  405550:	mov    ds:0x54b87391,al
  405555:	mov    bh,0x33
  405557:	scas   al,BYTE PTR es:[edi]
  405558:	push   esp
  405559:	mov    ds:0x71b09623,al
  40555e:	mov    ebp,0x42fa9cf6
  405563:	pop    es
  405564:	sbb    cl,al
  405566:	int3   
  405567:	(bad)  
  405568:	sbb    esi,DWORD PTR [edx+0x3a8c5]
  40556e:	fbstp  TBYTE PTR [edi]
  405570:	cmp    eax,0x4b2d920b
  405575:	fwait
  405576:	dec    edi
  405577:	xchg   ebp,eax
  405578:	ins    DWORD PTR es:[edi],dx
  405579:	imul   bh
  40557b:	retf   
  40557c:	pop    eax
  40557d:	add    DWORD PTR [edi+0x718a7dde],0x79
  405584:	fld    st(4)
  405586:	sub    al,0xcd
  405588:	inc    eax
  405589:	jae    0x405570
  40558b:	adc    cl,BYTE PTR [ebp+0x29515f41]
  405591:	sbb    eax,0xc1a70c92
  405596:	(bad)  
  405597:	pcmpeqw mm0,QWORD PTR [ebp-0x5282e5eb]
  40559e:	ficomp WORD PTR ds:0x583b6507
  4055a4:	pop    eax
  4055a5:	js     0x405580
  4055a7:	jb     0x4055b7
  4055a9:	loopne 0x4055a2
  4055ab:	mov    eax,ds:0x449037e0
  4055b0:	fild   DWORD PTR [eax]
  4055b2:	mov    es,WORD PTR [ebp+0x745e0f7d]
  4055b8:	int3   
  4055b9:	inc    edx
  4055ba:	loop   0x405552
  4055bc:	mov    bh,0xed
  4055be:	lahf   
  4055bf:	call   0xf343:0xce46e682
  4055c6:	daa    
  4055c7:	and    DWORD PTR [eax-0x6b],edx
  4055ca:	addr16 je 0x405606
  4055cd:	ss in  eax,dx
  4055cf:	cmp    dh,BYTE PTR ds:0x15aac95b
  4055d5:	add    edx,DWORD PTR [esp+esi*1]
  4055d8:	adc    eax,0xf3155a99
  4055dd:	mov    dl,0xa1
  4055df:	add    edx,DWORD PTR [ecx]
  4055e1:	cs popa 
  4055e3:	mov    dl,0x8e
  4055e5:	add    ch,BYTE PTR [eax]
  4055e7:	stos   BYTE PTR es:[edi],al
  4055e8:	retf   
  4055e9:	clc    
  4055ea:	mov    ch,0xb8
  4055ec:	xor    DWORD PTR [edi+0x518f5333],esi
  4055f2:	imul   ecx,DWORD PTR [eax+edi*1],0xa795beb4
  4055f9:	outs   dx,BYTE PTR ds:[esi]
  4055fa:	iret   
  4055fb:	xchg   edx,eax
  4055fc:	inc    esi
  4055fd:	out    0x33,al
  4055ff:	push   0x6f
  405601:	sbb    al,0x96
  405603:	and    bh,dl
  405605:	arpl   bx,si
  405607:	fisttp DWORD PTR [edx+esi*8-0x44]
  40560b:	push   ds
  40560c:	dec    edx
  40560d:	icebp  
  40560e:	jle    0x405680
  405610:	ins    DWORD PTR es:[edi],dx
  405611:	es xchg edi,eax
  405613:	call   0x2c48:0xcce33580
  40561a:	push   ss
  40561b:	xchg   edx,eax
  40561c:	mov    esp,0xb7d9b42f
  405621:	push   ss
  405622:	jb     0x405637
  405624:	push   esi
  405625:	rcl    ah,0x10
  405628:	xor    BYTE PTR [esp+edi*8-0x27],al
  40562c:	sub    BYTE PTR [esi+esi*2+0x1ab15cb0],dl
  405633:	xor    dl,BYTE PTR [ebp-0x6b]
  405636:	imul   ecx,DWORD PTR [edx-0x770eeedc],0xa911ae28
  405640:	push   esp
  405641:	jno    0x18a8f608
  405647:	mov    ebp,0x17ad2b53
  40564c:	jge    0x40561e
  40564e:	mov    ecx,0xc7bfe65a
  405653:	data16 (bad) 
  405655:	inc    esp
  405656:	ins    DWORD PTR es:[edi],dx
  405657:	adc    esp,DWORD PTR [edi-0x6f6406a]
  40565d:	repz call 0x65b3:0xb60de363
  405665:	mov    DWORD PTR [esi],ecx
  405667:	pop    esi
  405668:	push   eax
  405669:	fdiv   QWORD PTR [esi-0x69]
  40566c:	cmp    al,0xb
  40566e:	or     dh,al
  405670:	push   esp
  405671:	mov    ch,0xb5
  405673:	fsub   DWORD PTR [ecx-0x77]
  405676:	or     eax,0x8b692ce5
  40567b:	jno    0x405699
  40567d:	push   0x3c
  40567f:	int    0x4b
  405681:	cmp    DWORD PTR [ebx],esi
  405683:	iret   
  405684:	cdq    
  405685:	and    DWORD PTR [edx-0x74],ebx
  405688:	push   ebx
  405689:	es push esi
  40568b:	scas   al,BYTE PTR es:[edi]
  40568c:	addr16 xchg edi,eax
  40568e:	movsx  edx,WORD PTR ds:0xacfc01a2
  405695:	aaa    
  405696:	mov    ah,BYTE PTR [ebx-0x1130ac66]
  40569c:	(bad)  
  40569d:	out    dx,eax
  40569e:	dec    eax
  40569f:	mov    WORD PTR [ebx+0x2f],ds
  4056a2:	sbb    al,0x2e
  4056a4:	jo     0x40571d
  4056a6:	mov    DWORD PTR [ebp+ebp*2-0x31],eax
  4056aa:	enter  0x4ed4,0x9b
  4056ae:	mov    ah,0xe6
  4056b0:	inc    esp
  4056b1:	shl    BYTE PTR ds:0x5396e08c,cl
  4056b7:	push   es
  4056b8:	push   es
  4056b9:	(bad)  
  4056ba:	push   cs
  4056bb:	mov    eax,0xe5cede85
  4056c0:	mov    ah,BYTE PTR [esp+edi*2-0x4eb2dff]
  4056c7:	(bad)  
  4056c8:	(bad)  
  4056c9:	ds jne 0x4056ce
  4056cc:	mov    eax,ds:0x7b50eb69
  4056d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d2:	bound  ecx,QWORD PTR [esi-0x67af6f77]
  4056d8:	xchg   edi,eax
  4056d9:	or     eax,0x2f540007
  4056de:	or     cl,cl
  4056e0:	or     dl,ch
  4056e2:	lahf   
  4056e3:	mov    ds:0x9db70c31,al
  4056e8:	and    DWORD PTR [ecx-0x9999ce6],ebp
  4056ee:	mov    WORD PTR [eax-0xd],?
  4056f1:	leave  
  4056f2:	ds int3 
  4056f4:	test   DWORD PTR [ebx],eax
  4056f6:	les    ebx,FWORD PTR [ecx-0x4397df76]
  4056fc:	aam    0x40
  4056fe:	pop    esi
  4056ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405700:	out    0x8,eax
  405702:	adc    eax,0x81efa11d
  405707:	loope  0x405785
  405709:	cmp    bh,ah
  40570b:	jmp    0x40569d
  40570d:	mov    bh,0xa3
  40570f:	fs jge 0x405720
  405712:	test   eax,0xf1d02d93
  405717:	cmp    eax,0x8f0accbe
  40571c:	(bad)  
  40571d:	cmp    eax,esi
  40571f:	mov    ch,dl
  405721:	inc    ecx
  405722:	mov    bl,0xa8
  405724:	out    dx,eax
  405725:	(bad)  
  405726:	jmp    0xe67b:0xec42b0d1
  40572d:	mov    esi,0x9ccb1af6
  405732:	(bad)  
  405733:	cmc    
  405734:	fdivr  QWORD PTR [esi+0x70882121]
  40573a:	loopne 0x40571d
  40573c:	mov    ah,0x78
  40573e:	out    dx,eax
  40573f:	pop    esp
  405740:	outs   dx,BYTE PTR ds:[esi]
  405741:	mov    ebx,0xe7f3a9ad
  405746:	and    al,0x3c
  405748:	mov    dl,0x4b
  40574a:	bound  esp,QWORD PTR [edi]
  40574c:	mov    dl,0x2a
  40574e:	popa   
  40574f:	cmp    ebx,eax
  405751:	rcr    ch,cl
  405753:	jno    0x4056dc
  405755:	stos   DWORD PTR es:[edi],eax
  405756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405757:	inc    ecx
  405758:	mov    bh,0xfe
  40575a:	mov    ebx,0xa370559c
  40575f:	into   
  405760:	add    ecx,DWORD PTR [edx+0x5e]
  405763:	pop    es
  405764:	mov    edi,0x8a7afb01
  405769:	fdivr  st,st(1)
  40576b:	popa   
  40576c:	outs   dx,DWORD PTR ds:[esi]
  40576d:	shr    BYTE PTR [edx+0x4],1
  405770:	inc    edi
  405771:	add    eax,0x82d0b3da
  405776:	mov    ecx,0xf62806e0
  40577b:	sbb    al,0x6
  40577d:	push   eax
  40577e:	cwde   
  40577f:	dec    ecx
  405780:	imul   eax,DWORD PTR [edx+ecx*8+0x32bf8202],0x1e
  405788:	dec    eax
  405789:	add    ah,BYTE PTR ds:0x7a3cc429
  40578f:	jne    0x405723
  405791:	mov    ah,0x81
  405793:	dec    edi
  405794:	not    BYTE PTR [ebx+edx*2+0x1]
  405798:	lock cli 
  40579a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40579b:	test   BYTE PTR [edx],ch
  40579d:	ret    
  40579e:	sub    eax,0x5f3c193d
  4057a3:	pop    ds
  4057a4:	pushf  
  4057a5:	mov    ch,0x14
  4057a7:	rol    edi,1
  4057a9:	(bad)  
  4057ab:	sbb    eax,0xabd5034f
  4057b0:	in     al,0xfd
  4057b2:	out    0x50,eax
  4057b4:	addr16 push ds
  4057b6:	and    DWORD PTR [ecx+0x2dda2bbc],ebx
  4057bc:	(bad)  
  4057bd:	or     al,0x38
  4057bf:	xor    BYTE PTR [edx],dl
  4057c1:	aaa    
  4057c2:	out    0xdb,al
  4057c4:	aad    0xa1
  4057c6:	rcl    DWORD PTR es:[ebp-0x624417f9],0x8c
  4057ce:	xchg   ebx,eax
  4057cf:	leave  
  4057d0:	loopne 0x405796
  4057d2:	gs fdiv st,st(2)
  4057d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057d6:	test   al,0x18
  4057d8:	rcr    bl,1
  4057da:	mov    ah,0x31
  4057dc:	jb     0x405852
  4057de:	push   ds
  4057df:	xlat   BYTE PTR ds:[ebx]
  4057e0:	test   DWORD PTR [edi-0x15affe66],eax
  4057e6:	(bad)  
  4057e7:	test   eax,0x832a6f0e
  4057ec:	inc    edx
  4057ed:	xlat   BYTE PTR ds:[ebx]
  4057ee:	sbb    DWORD PTR [edi],0xffffff8a
  4057f1:	sti    
  4057f2:	jp     0x40580d
  4057f4:	push   ecx
  4057f5:	jmp    0x40577a
  4057f7:	push   edx
  4057f8:	push   edi
  4057f9:	cdq    
  4057fa:	pop    ebp
  4057fb:	mov    dl,bh
  4057fd:	ds pop edi
  4057ff:	or     DWORD PTR [esi+0x15],ebx
  405802:	mov    esi,0xae67be7a
  405807:	ins    BYTE PTR es:[edi],dx
  405808:	ret    0x42ce
  40580b:	adc    al,BYTE PTR [edx-0x45]
  40580e:	dec    ebp
  40580f:	std    
  405810:	(bad)  
  405811:	cld    
  405812:	loopne 0x40584a
  405814:	inc    edx
  405815:	fist   WORD PTR [esi+eax*1]
  405818:	test   edi,0x196498d4
  40581e:	je     0x405806
  405820:	sahf   
  405821:	xor    DWORD PTR [edx-0x2b],esi
  405824:	inc    edi
  405825:	test   al,0x2a
  405827:	int    0x7c
  405829:	inc    edi
  40582a:	aaa    
  40582b:	test   al,0xa3
  40582e:	mov    cl,0xd1
  405830:	loop   0x4057f0
  405832:	out    dx,eax
  405833:	sbb    DWORD PTR [ebx+0x7],0x70f6793e
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x42839b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428187,0x0
  40584d:	mov    DWORD PTR ds:0x428277,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428277,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428187,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e84
  40588d:	adc    DWORD PTR ds:0x42831b,edx
  405893:	or     DWORD PTR ds:0x42824b,0x369f
  40589d:	neg    DWORD PTR ds:0x42818b
  4058a3:	sub    DWORD PTR ds:0x42816b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x40591a
  405910:	ja     0x4058e9
  405912:	mov    esp,0x1818b16d
  405917:	sahf   
  405918:	adc    bl,BYTE PTR [eax]
  40591a:	sbb    BYTE PTR [eax+0x23e11364],bh
  405920:	push   es
  405921:	dec    ebx
  405922:	(bad)  
  405923:	(bad)  
  405924:	jae    0x4058e2
  405926:	pop    edi
  405927:	xchg   ebx,eax
  405928:	out    dx,eax
  405929:	xor    ch,BYTE PTR [edx+0x470cbc45]
  40592f:	fld    TBYTE PTR [ebp+0x12dbd987]
  405935:	inc    ebp
  405936:	je     0x405958
  405938:	bound  esp,QWORD PTR [esi]
  40593a:	adc    cl,BYTE PTR [ebp-0x75]
  40593d:	xlat   BYTE PTR ds:[ebx]
  40593e:	sbb    eax,eax
  405940:	iret   
  405941:	repz dec ebp
  405943:	pop    ss
  405944:	aaa    
  405945:	fwait
  405946:	lods   al,BYTE PTR ds:[esi]
  405947:	push   esi
  405948:	inc    esp
  405949:	arpl   di,cx
  40594b:	ins    DWORD PTR es:[edi],dx
  40594c:	and    al,BYTE PTR ds:0x4f05c98d
  405952:	jmp    0x5b81e296
  405957:	aas    
  405958:	pop    ecx
  405959:	das    
  40595a:	retf   
  40595b:	dec    eax
  40595c:	or     BYTE PTR [edx-0x5c],dh
  40595f:	jne    0x40595b
  405961:	pop    eax
  405962:	iret   
  405963:	loop   0x405921
  405965:	xlat   BYTE PTR ds:[ebx]
  405966:	jle    0x405961
  405968:	cs dec edi
  40596a:	daa    
  40596b:	mov    ebp,0x81bb537e
  405970:	mov    BYTE PTR [esi-0x6c],dl
  405973:	fs ds sub eax,0xcca597cd
  40597a:	aam    0xf4
  40597c:	ins    BYTE PTR es:[edi],dx
  40597d:	fwait
  40597e:	mov    al,0xdc
  405980:	pop    esp
  405981:	ins    DWORD PTR es:[edi],dx
  405982:	push   ecx
  405983:	bound  edi,QWORD PTR [ebp+eax*4-0x607a47f6]
  40598a:	lea    esi,[eax-0x14800222]
  405990:	bound  ebp,QWORD PTR ds:0xdd8e973c
  405996:	stos   DWORD PTR es:[edi],eax
  405997:	je     0x4059d2
  405999:	jmp    0x405986
  40599b:	push   esi
  40599c:	outs   dx,DWORD PTR ds:[esi]
  40599d:	inc    edx
  40599e:	mov    ah,0xa6
  4059a0:	icebp  
  4059a1:	inc    eax
  4059a2:	push   edx
  4059a3:	cmp    eax,0xa91eba42
  4059a8:	adc    esi,ebp
  4059aa:	mov    dl,0xb6
  4059ac:	pusha  
  4059ad:	mov    edi,0x6f8f7c6b
  4059b2:	(bad)  
  4059b3:	stc    
  4059b4:	adc    dl,BYTE PTR [eax]
  4059b6:	hlt    
  4059b7:	xchg   edi,eax
  4059b8:	sub    eax,0x37f08c46
  4059bd:	pop    ss
  4059be:	frstor [edi+0x53]
  4059c1:	dec    ecx
  4059c2:	mov    bl,al
  4059c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c5:	cmp    esp,esi
  4059c7:	mov    edi,0x9c043e1b
  4059cd:	jge    0x405981
  4059cf:	scas   al,BYTE PTR es:[edi]
  4059d0:	call   FWORD PTR [esi]
  4059d2:	xor    ch,dh
  4059d4:	mov    ebp,0x6792f647
  4059d9:	xor    BYTE PTR [ebx+ecx*2+0x52177b0b],0xa5
  4059e1:	and    eax,0x59be6280
  4059e6:	aas    
  4059e7:	call   0x663caa56
  4059ec:	mov    edi,db6
  4059ef:	test   al,0x92
  4059f1:	xchg   ecx,eax
  4059f2:	test   DWORD PTR [ebx+0x32baad21],edx
  4059f8:	jno    0x405a50
  4059fa:	push   0x38
  4059fc:	ins    BYTE PTR es:[edi],dx
  4059fd:	mov    cl,0xe1
  4059ff:	adc    BYTE PTR [ebp+0x6e],0xc3
  405a03:	pushf  
  405a04:	and    BYTE PTR [esi],bh
  405a06:	sti    
  405a07:	sbb    BYTE PTR [ebp-0x1568cd34],bl
  405a0d:	or     eax,0xa3ad5c64
  405a12:	cmp    BYTE PTR [edi+0x397316c5],0xbc
  405a19:	stos   DWORD PTR es:[edi],eax
  405a1a:	or     dl,BYTE PTR [eax-0x7c634b37]
  405a20:	cmp    al,0xe3
  405a22:	in     eax,0xfd
  405a24:	dec    ebx
  405a25:	cmp    DWORD PTR [esi-0x33a74bc3],esi
  405a2b:	or     BYTE PTR [edx-0x5b],dl
  405a2e:	adc    ebx,DWORD PTR [edx+0x19e1ae9c]
  405a34:	fild   QWORD PTR [ebp-0x1493eed3]
  405a3a:	or     al,0x6d
  405a3c:	loopne 0x405a0d
  405a3e:	jbe    0x405a0d
  405a40:	das    
  405a41:	pop    ebp
  405a42:	and    esi,DWORD PTR [esi+eiz*2+0x11]
  405a46:	mov    bh,0x26
  405a48:	mov    DWORD PTR [ebx],esp
  405a4a:	repnz xor ecx,DWORD PTR [eax]
  405a4d:	add    eax,0x4fb2868f
  405a52:	push   es
  405a53:	pop    edx
  405a54:	push   ebx
  405a55:	inc    ebp
  405a56:	cs lock push ss
  405a59:	pop    es
  405a5a:	stos   BYTE PTR es:[edi],al
  405a5b:	sbb    dh,al
  405a5d:	xor    BYTE PTR [edx-0x4af5f586],cl
  405a63:	dec    esp
  405a64:	outs   dx,BYTE PTR ds:[esi]
  405a65:	pushf  
  405a66:	mov    WORD PTR [ebx],gs
  405a68:	out    0xd3,eax
  405a6a:	jne    0x405abb
  405a6c:	mov    esi,0x9f4d94d8
  405a71:	xchg   ecx,eax
  405a72:	pop    ds
  405a73:	test   DWORD PTR [ebx+0x22cef911],edi
  405a79:	push   0x7e4e2665
  405a7e:	ins    BYTE PTR es:[edi],dx
  405a7f:	cmp    DWORD PTR [ebx+eiz*8],ebp
  405a82:	aas    
  405a83:	scas   al,BYTE PTR es:[edi]
  405a84:	gs jb  0x405aa1
  405a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a88:	das    
  405a89:	(bad)  
  405a8a:	adc    edi,ebx
  405a8c:	nop
  405a8d:	xchg   ecx,eax
  405a8e:	sbb    ah,BYTE PTR [edx]
  405a90:	inc    ebp
  405a91:	pop    ss
  405a92:	icebp  
  405a93:	add    eax,0xe4763d31
  405a98:	xchg   esp,eax
  405a99:	mov    cl,0xfc
  405a9b:	mov    dh,0xb7
  405a9d:	sbb    esp,ebp
  405a9f:	loopne 0x405a97
  405aa1:	add    cl,BYTE PTR [edi]
  405aa3:	test   eax,0xbc97acad
  405aa8:	es ror DWORD PTR ds:[edi],0x92
  405aad:	fimul  WORD PTR [ebp-0x2f]
  405ab0:	xor    bl,ah
  405ab2:	lock mov esp,0x5c609bb3
  405ab8:	loope  0x405a51
  405aba:	jb     0x405a59
  405abc:	in     al,0x94
  405abe:	xor    dl,0xfe
  405ac1:	leave  
  405ac2:	inc    esi
  405ac3:	fcmovbe st,st(6)
  405ac5:	sbb    eax,DWORD PTR [edx+0x61]
  405ac8:	and    BYTE PTR [ecx],cl
  405aca:	in     eax,dx
  405acb:	add    DWORD PTR [edx-0x522617d0],edi
  405ad1:	icebp  
  405ad2:	push   cs
  405ad3:	and    eax,0x7a01d9b9
  405ad8:	push   ss
  405ad9:	mov    WORD PTR [ebx-0x12],?
  405adc:	xor    dh,ah
  405ade:	dec    ebp
  405adf:	cdq    
  405ae0:	inc    esi
  405ae1:	fst    DWORD PTR [ebp+0x423c3d74]
  405ae7:	pop    esi
  405ae8:	out    0xc2,al
  405aea:	test   eax,0x7e41f3ec
  405aef:	scas   al,BYTE PTR es:[edi]
  405af0:	or     DWORD PTR [eax+0x1c],0x61
  405af4:	ds clc 
  405af6:	jmp    0xfaf9:0xcd913b63
  405afd:	lock aaa 
  405aff:	outs   dx,BYTE PTR ds:[esi]
  405b00:	xchg   ecx,eax
  405b01:	rcr    DWORD PTR [ecx-0xc272655],cl
  405b07:	push   edi
  405b08:	sahf   
  405b09:	aad    0xef
  405b0b:	pop    es
  405b0c:	xchg   esp,eax
  405b0d:	(bad)  
  405b0e:	int    0x9
  405b10:	inc    ebp
  405b11:	js     0x405b38
  405b13:	dec    edi
  405b14:	test   cl,dl
  405b16:	dec    edi
  405b17:	pop    edi
  405b18:	sub    eax,ebx
  405b1a:	sbb    ch,BYTE PTR [ebx+0x6649271f]
  405b20:	ret    
  405b21:	popf   
  405b22:	mov    BYTE PTR [ebp+esi*1+0x50d8243d],bl
  405b29:	mov    bl,0x80
  405b2b:	loope  0x405af0
  405b2d:	lods   al,BYTE PTR ds:[esi]
  405b2e:	mov    bh,BYTE PTR [edx+0x3d3a9b58]
  405b34:	pop    ss
  405b35:	pop    ebx
  405b36:	push   edi
  405b37:	in     eax,dx
  405b38:	(bad)  
  405b3a:	jp     0x405b55
  405b3c:	inc    edx
  405b3d:	cmp    al,0x10
  405b3f:	push   ecx
  405b40:	out    dx,eax
  405b41:	loopne 0x405bbf
  405b43:	repz xlat BYTE PTR ds:[ebx]
  405b45:	xor    DWORD PTR [ebp-0x37],ebp
  405b48:	mov    ecx,0xe25dc99f
  405b4d:	js     0x405af5
  405b4f:	adc    bl,BYTE PTR ds:0xa785300c
  405b55:	add    al,0x79
  405b57:	inc    eax
  405b58:	cmp    al,BYTE PTR [ecx+0x56cf1940]
  405b5e:	jge    0x405af9
  405b60:	test   al,0x4a
  405b62:	pop    edi
  405b63:	stos   BYTE PTR es:[edi],al
  405b64:	lahf   
  405b65:	mov    ss,WORD PTR [edx+0x37d2f030]
  405b6b:	scas   al,BYTE PTR es:[edi]
  405b6c:	xor    ah,BYTE PTR ds:[ebx+edi*8+0x72]
  405b71:	test   DWORD PTR [ebx-0x19f45b5a],edi
  405b77:	js     0x405b9a
  405b79:	and    ebx,DWORD PTR [ecx+ecx*1+0x15]
  405b7d:	fidiv  WORD PTR [eax-0x55]
  405b80:	loope  0x405b4f
  405b82:	mov    BYTE PTR [esi-0x76],ah
  405b85:	(bad)  
  405b86:	outs   dx,BYTE PTR ds:[esi]
  405b87:	(bad)  
  405b88:	mov    eax,0x96dbada3
  405b8d:	arpl   WORD PTR [eax-0x4e390b50],ax
  405b93:	sub    eax,0x1457f400
  405b98:	fild   DWORD PTR [edi-0x3c]
  405b9b:	loopne 0x405bfb
  405b9d:	pop    esi
  405b9e:	(bad)  
  405b9f:	ja     0x405b85
  405ba1:	rcr    DWORD PTR [edi+0x12],1
  405ba4:	cdq    
  405ba5:	fwait
  405ba6:	xchg   DWORD PTR [edx+0x154453c2],eax
  405bac:	imul   BYTE PTR [ebp-0x2edc736d]
  405bb2:	cwde   
  405bb3:	sbb    al,BYTE PTR [edx+0x17f5f848]
  405bb9:	xchg   edx,eax
  405bba:	fmul   DWORD PTR [ebx-0x5631d93b]
  405bc0:	jnp    0x405c2f
  405bc2:	gs iret 
  405bc4:	pop    edi
  405bc5:	dec    ecx
  405bc6:	imul   ebp,DWORD PTR [ecx],0xffffff9b
  405bc9:	adc    DWORD PTR [ebp+0x34a19bf9],ebp
  405bcf:	pop    esp
  405bd0:	xchg   ebx,eax
  405bd1:	adc    DWORD PTR [ecx],eax
  405bd3:	inc    esp
  405bd4:	xor    DWORD PTR [esi+0x60],edx
  405bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bd8:	jno    0x405b9a
  405bda:	cmp    al,0x2d
  405bdc:	mov    ebp,0xcee1edbf
  405be1:	test   eax,0xf07426ac
  405be6:	push   edi
  405be7:	adc    al,0xa0
  405be9:	loop   0x405b95
  405beb:	js     0x405b8a
  405bed:	stos   BYTE PTR es:[edi],al
  405bee:	ror    BYTE PTR ds:0x8ba25488,0xad
  405bf5:	or     al,0x7c
  405bf7:	daa    
  405bf8:	and    bh,BYTE PTR [esi-0x7e0bdb49]
  405bfe:	add    eax,0xd3fd705
  405c03:	outs   dx,DWORD PTR ds:[esi]
  405c04:	pop    ds
  405c05:	pop    ebx
  405c06:	je     0x405c72
  405c08:	xor    eax,0xa9a296a
  405c0d:	push   ss
  405c0e:	test   al,0x54
  405c10:	fiadd  WORD PTR [ecx+0x39]
  405c13:	push   esp
  405c14:	aam    0x53
  405c16:	mov    ?,WORD PTR [ebp-0xfe8265c]
  405c1c:	int3   
  405c1d:	dec    esp
  405c1e:	fidivr WORD PTR [ecx-0x12b62738]
  405c24:	adc    BYTE PTR [ebx-0x53],bh
  405c27:	dec    ebx
  405c28:	loop   0x405c48
  405c2a:	or     eax,edi
  405c2c:	sbb    esp,esi
  405c2e:	and    ecx,ecx
  405c30:	int3   
  405c31:	(bad)  
  405c33:	sbb    ebp,DWORD PTR [esi-0x69]
  405c36:	push   esp
  405c37:	(bad)  
  405c38:	test   BYTE PTR [eax+edi*1-0x79],0x10
  405c3d:	jge    0x405caa
  405c3f:	dec    edi
  405c40:	jp     0x405c6b
  405c42:	pusha  
  405c43:	xchg   esi,eax
  405c44:	pop    edi
  405c45:	(bad)  
  405c46:	fmul   DWORD PTR [ebx+eiz*4+0x35]
  405c4a:	sbb    al,0xe4
  405c4c:	(bad)  
  405c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c4e:	lds    eax,FWORD PTR ds:0x194e0843
  405c54:	cmp    esi,eax
  405c56:	repz jnp 0x405cc8
  405c59:	sub    dh,BYTE PTR [ecx+0x2b614aec]
  405c5f:	fisttp WORD PTR [eax+0x3e]
  405c62:	ins    BYTE PTR es:[edi],dx
  405c63:	ins    DWORD PTR es:[edi],dx
  405c64:	lods   eax,DWORD PTR ds:[esi]
  405c65:	jp     0x405bf2
  405c67:	mov    ebp,0x2480f9ea
  405c6c:	loope  0x405c81
  405c6e:	jb     0x405c9b
  405c70:	imul   edx,DWORD PTR [ebp+0x1b],0x57a265fc
  405c77:	sbb    ebx,DWORD PTR [ebx-0x4fae23c6]
  405c7d:	adc    ecx,DWORD PTR [edi+ebx*1+0xd20e1b5]
  405c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c85:	stc    
  405c86:	repnz gs (bad) 
  405c89:	leave  
  405c8a:	jge    0x405c18
  405c8c:	mov    ds:0xf723d622,al
  405c91:	outs   dx,BYTE PTR ds:[esi]
  405c92:	int3   
  405c93:	dec    esp
  405c94:	sbb    al,0x8a
  405c96:	and    eax,0xf04f4099
  405c9b:	retf   
  405c9c:	jmp    0x4fe06729
  405ca1:	cmc    
  405ca2:	adc    dl,BYTE PTR [esi+0x4e]
  405ca5:	pop    ss
  405ca6:	repz imul ebx,eax,0x7e
  405caa:	mov    ds:0xc78e58da,eax
  405caf:	ins    DWORD PTR es:[edi],dx
  405cb0:	fsub   DWORD PTR [eax]
  405cb2:	mov    WORD PTR [ebx],?
  405cb4:	and    eax,0x49b000f
  405cb9:	in     al,0x4
  405cbb:	jns    0x405d02
  405cbd:	jno    0x405cdb
  405cbf:	sbb    BYTE PTR [edx-0x44],cl
  405cc2:	xor    edi,ecx
  405cc4:	adc    edi,ecx
  405cc6:	int    0x75
  405cc8:	jmp    0x405cd1
  405cca:	in     eax,0x3e
  405ccc:	cmp    al,0xc
  405cce:	in     al,0xb5
  405cd0:	sub    al,0xde
  405cd2:	lods   eax,DWORD PTR ds:[esi]
  405cd3:	retf   
  405cd4:	pushf  
  405cd5:	js     0x405d48
  405cd7:	sbb    DWORD PTR [esi-0x76cc9f43],edi
  405cdd:	inc    ebp
  405cde:	aam    0xc7
  405ce0:	inc    ebp
  405ce1:	loopne 0x405d54
  405ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce4:	jns    0x405cb0
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0x44],1
  405d2b:	xlat   BYTE PTR ds:[ebx]
  405d2c:	sbb    BYTE PTR [edx+0x1818a9f2],ch
  405d32:	sahf   
  405d33:	adc    bl,BYTE PTR [eax]
  405d35:	sbb    al,dh
  405d37:	jmp    0x2def8648
  405d3c:	push   cs
  405d3d:	bound  eax,QWORD PTR [edi+ebx*1]
  405d40:	test   DWORD PTR [edx],edi
  405d42:	xor    al,bl
  405d44:	outs   dx,BYTE PTR ds:[esi]
  405d45:	push   ebp
  405d46:	push   es
  405d47:	hlt    
  405d48:	push   0x5085924e
  405d4d:	rcl    BYTE PTR [edx],cl
  405d4f:	lahf   
  405d50:	inc    edi
  405d51:	push   eax
  405d52:	popa   
  405d53:	jae    0x405d2d
  405d55:	pop    esi
  405d56:	mov    ebx,edi
  405d58:	sub    DWORD PTR [ebx+0x1e],ecx
  405d5b:	pushf  
  405d5c:	xchg   edi,eax
  405d5d:	shr    DWORD PTR [ebx-0x620a38a6],0x6b
  405d64:	sti    
  405d65:	pop    edi
  405d66:	adc    eax,0xa4c82104
  405d6b:	cmp    al,0x46
  405d6d:	aas    
  405d6e:	xchg   edi,eax
  405d6f:	fsub   DWORD PTR [eax-0x71]
  405d72:	mov    eax,0x461fa5a9
  405d77:	icebp  
  405d78:	fwait
  405d79:	aas    
  405d7a:	out    dx,eax
  405d7b:	add    edx,DWORD PTR [edi+ebp*8+0x11010a5e]
  405d82:	xchg   ebp,eax
  405d83:	fsub   st(4),st
  405d85:	dec    esi
  405d86:	cmp    esp,DWORD PTR [ebx]
  405d88:	or     DWORD PTR [edx+0x39],0x29
  405d8c:	ja     0x405d57
  405d8e:	adc    esi,DWORD PTR [ebp+ebp*2-0x6727287d]
  405d95:	(bad)  
  405d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d97:	out    dx,al
  405d98:	lods   eax,DWORD PTR ds:[esi]
  405d99:	push   cs
  405d9a:	imul   esp,edi,0xd0a4bcbe
  405da0:	sbb    DWORD PTR [ebx+0x1b],ecx
  405da3:	and    eax,0x5baab95d
  405da8:	push   ss
  405da9:	xchg   edi,eax
  405daa:	sub    DWORD PTR [eax-0x52a07002],0xffffffd7
  405db1:	push   ecx
  405db2:	stc    
  405db3:	popf   
  405db4:	cmp    bl,BYTE PTR [ecx+ebp*4-0x10]
  405db8:	retf   
  405db9:	fs pop edx
  405dbb:	add    BYTE PTR [ebp-0x58],ch
  405dbe:	call   0xac48:0x7ecfbe2c
  405dc5:	jg     0x405e40
  405dc7:	xchg   DWORD PTR [esi],ecx
  405dc9:	js     0x405e0e
  405dcb:	sbb    DWORD PTR [edx-0x34f4cdf],edx
  405dd1:	ds xor al,0x85
  405dd4:	das    
  405dd5:	xchg   ebx,eax
  405dd6:	mov    ds:0xba23608e,al
  405ddb:	or     DWORD PTR [ebp+eax*2+0x2f],edx
  405ddf:	adc    eax,0xe9152ff2
  405de4:	sbb    eax,0x6afac2a
  405de9:	cmp    eax,0xe35bdbc0
  405dee:	leave  
  405def:	and    ah,0xa2
  405df2:	pop    ds
  405df3:	sub    DWORD PTR [eax+eiz*8-0x67],esi
  405df7:	xchg   ebx,eax
  405df8:	leave  
  405df9:	lods   eax,DWORD PTR ds:[esi]
  405dfa:	dec    ebx
  405dfb:	push   0x71
  405dfd:	dec    ebp
  405dfe:	cmp    edi,DWORD PTR [edx+0x1c]
  405e01:	and    BYTE PTR [eax-0x4eafbdd3],0x9d
  405e08:	ds or  al,dh
  405e0b:	mov    ah,0x22
  405e0d:	clc    
  405e0e:	leave  
  405e0f:	or     bh,BYTE PTR [edx+0x1b]
  405e12:	shl    esp,0xfa
  405e15:	xchg   edi,eax
  405e16:	xlat   BYTE PTR ds:[ebx]
  405e17:	pushf  
  405e18:	or     al,0xf4
  405e1a:	jmp    0x405df4
  405e1c:	inc    esi
  405e1d:	xor    ecx,esp
  405e1f:	jne    0x405e84
  405e21:	jo     0x405de5
  405e23:	xor    bh,BYTE PTR [ebp-0x74]
  405e26:	(bad)  
  405e27:	std    
  405e28:	inc    eax
  405e29:	sbb    DWORD PTR ds:0xd9feb0ab,esi
  405e2f:	jne    0x405e59
  405e31:	nop
  405e32:	call   0xd08:0xaa1697ce
  405e39:	out    0x19,eax
  405e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e3c:	fdivr  DWORD PTR [edx+0x5d5d4df7]
  405e42:	loope  0x405e35
  405e44:	sti    
  405e45:	in     eax,0x5e
  405e47:	not    BYTE PTR [edx+edi*2]
  405e4a:	push   eax
  405e4b:	pop    eax
  405e4c:	mov    cl,0xf9
  405e4e:	sbb    edi,DWORD PTR [ebx]
  405e50:	outs   dx,BYTE PTR ds:[esi]
  405e51:	xchg   ebp,eax
  405e52:	stos   BYTE PTR es:[edi],al
  405e53:	aad    0x79
  405e55:	mov    dl,0x10
  405e57:	inc    ebx
  405e58:	mov    ?,WORD PTR [edi]
  405e5a:	test   BYTE PTR [edi-0xd],ah
  405e5d:	jl     0x405e88
  405e5f:	(bad)  
  405e61:	fild   DWORD PTR [edx+0x5794c567]
  405e67:	sbb    BYTE PTR [ebp+0x61],cl
  405e6a:	add    bh,BYTE PTR [eax+0x57]
  405e6d:	xor    edx,edx
  405e6f:	or     DWORD PTR [ecx-0x12a0f7d2],0x29a48a18
  405e79:	push   edi
  405e7a:	inc    eax
  405e7b:	inc    edi
  405e7c:	ins    BYTE PTR es:[edi],dx
  405e7d:	sub    eax,0x5021c9d9
  405e82:	xor    BYTE PTR [edx-0x48],0x5
  405e86:	add    ebp,eax
  405e88:	lahf   
  405e89:	pop    edx
  405e8a:	lea    esi,[edi-0x3d33420c]
  405e90:	loope  0x405e7d
  405e92:	test   DWORD PTR [edx-0x212301f5],esp
  405e98:	pop    ebp
  405e99:	sub    al,0x25
  405e9b:	xchg   esp,esi
  405e9d:	sbb    al,0x78
  405e9f:	push   0x38e62e27
  405ea4:	push   eax
  405ea5:	daa    
  405ea6:	lods   al,BYTE PTR ds:[esi]
  405ea7:	pop    es
  405ea8:	xchg   ah,bh
  405eaa:	or     dh,dh
  405eac:	lods   eax,DWORD PTR ds:[esi]
  405ead:	and    al,0x3d
  405eaf:	sub    esi,esp
  405eb1:	mov    DWORD PTR ds:0x66be9578,0x48ce0c27
  405ebb:	gs das 
  405ebd:	scas   eax,DWORD PTR es:[edi]
  405ebe:	dec    edx
  405ebf:	jne    0x405e90
  405ec1:	cmp    BYTE PTR [eax],dh
  405ec3:	mov    ch,0x8c
  405ec5:	(bad)  
  405ec6:	cs (bad) 
  405ec8:	and    DWORD PTR [eax+0x5d],edx
  405ecb:	cld    
  405ecc:	and    al,0x6d
  405ece:	push   ebp
  405ecf:	ror    DWORD PTR [edx+eiz*4-0x31e523a3],0x7
  405ed7:	dec    ecx
  405ed8:	pop    es
  405ed9:	les    edx,FWORD PTR ds:0xcb3b0c15
  405edf:	aam    0x3e
  405ee1:	jmp    0x405f0e
  405ee3:	sub    DWORD PTR [ecx-0x605238dc],eax
  405ee9:	jmp    0xa73b3919
  405eee:	dec    eax
  405eef:	mov    edx,0x96ee536c
  405ef4:	cli    
  405ef5:	and    bh,ah
  405ef7:	mov    bl,0xc7
  405ef9:	jmp    0xb9150ffb
  405efe:	aad    0x65
  405f00:	imul   esp,DWORD PTR [eax],0x25
  405f03:	push   cs
  405f04:	cdq    
  405f05:	mov    al,0x96
  405f07:	fwait
  405f08:	retf   
  405f09:	adc    DWORD PTR [ebx+eiz*4-0x44],esi
  405f0d:	xor    ebx,ecx
  405f0f:	and    eax,0x2ef1b398
  405f14:	pop    ebp
  405f15:	adc    BYTE PTR [edx+0x6d0bb877],dh
  405f1b:	ins    DWORD PTR es:[edi],dx
  405f1c:	test   BYTE PTR [ecx],dh
  405f1e:	jmp    0xe450:0xff238b0f
  405f25:	ror    DWORD PTR [edx*2+0x7e00573f],1
  405f2c:	xor    eax,0xca2889f
  405f31:	add    DWORD PTR [ebp+ecx*2+0xf],esi
  405f35:	pop    edx
  405f36:	add    esp,DWORD PTR [ebp-0x76]
  405f39:	popa   
  405f3a:	jmp    FWORD PTR [edx+0x5b]
  405f3d:	shl    BYTE PTR [ebp-0x3e],1
  405f40:	mul    DWORD PTR [edx+0x24249e58]
  405f46:	unpcklps xmm2,xmm4
  405f49:	mov    ebx,0xa0a35769
  405f4e:	pop    ebp
  405f4f:	mov    eax,0x18f3fda8
  405f54:	cwde   
  405f55:	push   esi
  405f56:	push   0xfb2ad1ef
  405f5b:	mov    ah,0xb3
  405f5d:	mov    cl,0x92
  405f5f:	lahf   
  405f60:	lods   al,BYTE PTR ds:[esi]
  405f61:	push   0x75
  405f63:	mov    edi,0x7d383943
  405f68:	out    dx,al
  405f69:	mov    dh,0x21
  405f6b:	aaa    
  405f6c:	movzx  ecx,cl
  405f6f:	push   edi
  405f70:	push   ss
  405f71:	enter  0x617e,0x48
  405f75:	(bad)
  405f79:	inc    esp
  405f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f7b:	cmp    BYTE PTR [ebx+0x5e98a9f0],cl
  405f81:	scas   eax,DWORD PTR es:[edi]
  405f82:	ret    0x67b6
  405f85:	adc    al,0x9e
  405f87:	jns    0x405fcb
  405f89:	mov    DWORD PTR [ebx-0x47],esp
  405f8c:	mov    al,0xfe
  405f8e:	cmp    al,0x73
  405f90:	shr    esi,1
  405f92:	(bad)  
  405f93:	(bad)  
  405f95:	push   edi
  405f96:	sbb    al,0x51
  405f98:	shl    BYTE PTR [esi],cl
  405f9a:	loop   0x405f3b
  405f9c:	shl    DWORD PTR [eax+ebp*8],0x25
  405fa0:	or     al,0x90
  405fa2:	adc    DWORD PTR [edx+ebp*4+0x6919e210],ecx
  405fa9:	rcr    BYTE PTR [ecx],1
  405fab:	popf   
  405fac:	jecxz  0x405ff9
  405fae:	jge    0x405f88
  405fb0:	mov    dl,BYTE PTR [esi]
  405fb2:	popf   
  405fb3:	std    
  405fb4:	jle    0x405fc2
  405fb6:	adc    cl,BYTE PTR [edi-0xa923ad9]
  405fbc:	icebp  
  405fbd:	cmp    al,0xd
  405fbf:	jmp    0x4f5f6f87
  405fc4:	clc    
  405fc5:	out    dx,al
  405fc6:	pop    ecx
  405fc7:	inc    ebx
  405fc8:	shl    cl,1
  405fca:	mov    ds:0xfc11af45,al
  405fcf:	iret   
  405fd0:	jl     0x405fff
  405fd2:	pushf  
  405fd3:	and    dl,BYTE PTR [ebx+0x70]
  405fd6:	cdq    
  405fd7:	rcr    DWORD PTR [eax],0xba
  405fda:	mov    ebx,0x535207c8
  405fdf:	jmp    0x406046
  405fe1:	ins    DWORD PTR es:[edi],dx
  405fe2:	inc    ebx
  405fe3:	call   0x81ff:0x78b8807a
  405fea:	pop    ds
  405feb:	sbb    ecx,DWORD PTR [ebp-0x3b]
  405fee:	cmp    BYTE PTR [edi+0x6e],ch
  405ff1:	pop    ecx
  405ff2:	(bad)  
  405ff3:	pop    esi
  405ff4:	xchg   esp,eax
  405ff5:	fadd   DWORD PTR [esi]
  405ff7:	pop    edx
  405ff8:	test   BYTE PTR [ecx],dl
  405ffa:	mov    ds:0x99846214,al
  405fff:	and    bh,ah
  406001:	xor    al,0xdc
  406003:	int    0xe2
  406005:	mov    eax,0x738713a
  40600a:	imul   ebx,DWORD PTR [ecx],0x241d8d07
  406010:	inc    ebp
  406011:	push   ds
  406012:	fnstenv [edi+edx*2+0x1b]
  406016:	ins    DWORD PTR es:[edi],dx
  406017:	push   edi
  406018:	addr16 mov dl,0xf5
  40601b:	dec    ecx
  40601c:	sub    eax,0x9593ddb6
  406021:	mov    al,ds:0x6159a3e7
  406026:	js     0x405ff4
  406028:	les    eax,FWORD PTR [ebx+0x57]
  40602b:	loopne 0x406076
  40602d:	adc    ecx,DWORD PTR [ecx-0x1ff5d358]
  406033:	add    dh,BYTE PTR [edx+0x20]
  406036:	dec    edx
  406037:	cmp    al,0xf3
  406039:	mov    es,WORD PTR [esi+0x7ae3e38]
  40603f:	shl    eax,0x9d
  406042:	cmp    DWORD PTR ds:0x9a9e480e,0xe8a9b7bd
  40604c:	imul   edx,DWORD PTR [ebx+0x3],0xb1757079
  406053:	mov    edx,0xa360d38f
  406058:	out    0x14,al
  40605a:	fs mov eax,0xb0f34f65
  406060:	xchg   dl,bh
  406062:	stos   DWORD PTR es:[edi],eax
  406063:	mov    eax,ds:0x8524165e
  406068:	push   edi
  406069:	mov    dl,0x15
  40606b:	(bad)  
  40606c:	and    bl,BYTE PTR [edi]
  40606e:	out    dx,al
  40606f:	stos   BYTE PTR es:[edi],al
  406070:	pop    ss
  406071:	std    
  406072:	int3   
  406073:	add    esi,DWORD PTR [esi+0x1c]
  406076:	mov    ebx,0x62b2d7a
  40607b:	sbb    esi,DWORD PTR [ebx+ebx*8]
  40607e:	or     edi,ebx
  406080:	retf   
  406081:	ret    
  406082:	pop    esp
  406083:	push   esi
  406084:	add    DWORD PTR [eax],ebx
  406086:	js     0x406079
  406088:	mov    ah,0x51
  40608a:	sti    
  40608b:	in     eax,dx
  40608c:	lds    ebx,FWORD PTR [esi+ecx*1+0x8]
  406090:	lods   eax,DWORD PTR ds:[esi]
  406091:	inc    edx
  406092:	rcl    DWORD PTR [edx+0x51],1
  406095:	enter  0xffbd,0xd8
  406099:	aad    0x44
  40609b:	xlat   BYTE PTR ds:[ebx]
  40609c:	xchg   ebx,eax
  40609d:	fild   WORD PTR [ecx+0x15]
  4060a0:	data16 aas 
  4060a2:	dec    ebx
  4060a3:	dec    ecx
  4060a4:	das    
  4060a5:	clc    
  4060a6:	ja     0x40602c
  4060a8:	call   0xce85:0x9e22a23f
  4060af:	loop   0x4060ab
  4060b1:	stc    
  4060b2:	mov    ch,0x85
  4060b4:	xlat   BYTE PTR ds:[ebx]
  4060b5:	fidivr DWORD PTR [edi-0x49]
  4060b8:	stos   BYTE PTR es:[edi],al
  4060b9:	xor    BYTE PTR [ebx],dl
  4060bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060bc:	repz xor DWORD PTR ds:0x6e47e131,edx
  4060c3:	push   ss
  4060c4:	jg     0x406114
  4060c6:	clc    
  4060c7:	cs jp  0x40609a
  4060ca:	pop    ebx
  4060cb:	sub    eax,0xe9d57e72
  4060d0:	push   ds
  4060d1:	sub    BYTE PTR [ebx-0x29],dh
  4060d4:	and    eax,0xfa0f25d4
  4060d9:	stc    
  4060da:	xchg   ebx,eax
  4060db:	adc    dl,BYTE PTR [edi]
  4060dd:	or     al,0xcc
  4060df:	jno    0x40608b
  4060e1:	iret   
  4060e2:	inc    edi
  4060e3:	sub    bl,BYTE PTR [ecx+0x25]
  4060e6:	mov    dl,0x71
  4060e8:	pusha  
  4060e9:	mov    ah,0x8a
  4060eb:	cmp    al,0x9d
  4060ed:	mov    al,0x4b
  4060ef:	xchg   edi,eax
  4060f0:	dec    ebp
  4060f1:	jbe    0x40614b
  4060f3:	(bad)  [eax]
  4060f5:	call   0x89fc:0x5448d5f
  4060fc:	inc    ebp
  4060fd:	int3   
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	push   cs
  40612d:	dec    edx
  40612e:	fnstcw WORD PTR [eax+edi*2-0x61e7e75d]
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    BYTE PTR [eax+0x7be10f14],ch
  40613d:	or     cl,cl
  40613f:	(bad)  
  406140:	aad    0xdc
  406142:	icebp  
  406143:	push   es
  406144:	imul   eax
  406146:	jecxz  0x406122
  406148:	imul   edi,DWORD PTR [edi+ebx*8+0xe5e004d],0xb1684d74
  406153:	enter  0x4af5,0xeb
  406157:	sbb    eax,DWORD PTR [edx-0x78]
  40615a:	iret   
  40615b:	std    
  40615c:	aaa    
  40615d:	call   0x8582:0x7f82273f
  406164:	inc    esp
  406165:	out    dx,eax
  406166:	adc    eax,0x5df5b83
  40616b:	ds jg  0x40614b
  40616e:	jg     0x4060f9
  406170:	call   0x4aa70350
  406175:	int    0x50
  406177:	daa    
  406178:	adc    DWORD PTR [ebx-0x23719cf8],ebp
  40617e:	das    
  40617f:	jecxz  0x406171
  406181:	cmp    al,0x8a
  406183:	xlat   BYTE PTR ds:[ebx]
  406184:	ins    DWORD PTR es:[edi],dx
  406185:	fs push es
  406187:	sar    DWORD PTR [ebp-0x1bc28e88],1
  40618d:	outs   dx,BYTE PTR ds:[esi]
  40618e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406190:	or     al,0xc3
  406192:	adc    esp,DWORD PTR [edi+ebp*4]
  406195:	add    dl,BYTE PTR [ebx+0x48]
  406198:	pop    ecx
  406199:	push   cs
  40619a:	adc    dl,dh
  40619c:	mov    edx,0xc6a7aae
  4061a1:	shl    DWORD PTR [ebx],cl
  4061a3:	mov    eax,ds:0x76d82264
  4061a8:	fcmovne st,st(3)
  4061aa:	js     0x4061e2
  4061ac:	arpl   WORD PTR [ecx-0x3b],di
  4061af:	pop    eax
  4061b0:	fnstsw WORD PTR [ecx+0x2ce33de5]
  4061b6:	xchg   ecx,eax
  4061b7:	scas   eax,DWORD PTR es:[edi]
  4061b8:	retf   
  4061b9:	ja     0x406178
  4061bb:	jo     0x406208
  4061bd:	xchg   ebx,eax
  4061be:	ficomp DWORD PTR [ebp-0x4133f99]
  4061c4:	mov    al,ds:0x96ce27f4
  4061c9:	in     eax,dx
  4061ca:	inc    esp
  4061cb:	and    DWORD PTR [esi],edx
  4061cd:	in     al,dx
  4061ce:	inc    esp
  4061cf:	dec    sp
  4061d1:	(bad)  
  4061d2:	jp     0x406184
  4061d4:	sbb    DWORD PTR [ecx],ebx
  4061d6:	jb     0x40616b
  4061d8:	jg     0x406169
  4061da:	mov    ds:0xa97ab35,eax
  4061df:	pop    ds
  4061e0:	dec    edi
  4061e1:	cs cwde 
  4061e3:	dec    ebx
  4061e4:	inc    ebx
  4061e5:	int3   
  4061e6:	xor    al,dh
  4061e8:	dec    edx
  4061e9:	test   DWORD PTR [ebp-0x34c124b9],ebp
  4061ef:	lahf   
  4061f0:	lods   eax,DWORD PTR ds:[esi]
  4061f1:	lods   eax,DWORD PTR ds:[esi]
  4061f2:	sbb    DWORD PTR [eax-0x62c0cc6f],esi
  4061f8:	lds    esp,FWORD PTR [ebx+edx*2-0x4d]
  4061fc:	sub    al,0x2a
  4061fe:	fcom   QWORD PTR [ebx]
  406200:	or     al,BYTE PTR [esi]
  406202:	cld    
  406203:	jmp    0xb647e0d8
  406208:	xchg   edx,eax
  406209:	in     eax,0xc
  40620b:	mov    ds:0xb3b155a,al
  406210:	aad    0x6e
  406212:	mov    ebp,0x482c1f6a
  406217:	jle    0x406204
  406219:	xchg   edx,eax
  40621a:	cmp    ebp,ebp
  40621c:	jb     0x406233
  40621e:	jno    0x406278
  406220:	mov    cs,WORD PTR [edi]
  406222:	(bad)  
  406223:	and    bl,BYTE PTR [ecx+0x7c]
  406226:	push   ebx
  406227:	mov    edx,DWORD PTR [ebx+0x73]
  40622a:	jbe    0x40623d
  40622c:	and    ebx,DWORD PTR [edi]
  40622e:	xchg   edx,eax
  40622f:	int3   
  406230:	add    eax,0x785f968e
  406235:	add    ah,BYTE PTR [edx]
  406237:	mov    al,ds:0x4c135aa9
  40623c:	add    al,0xc4
  40623e:	mov    bh,0x51
  406240:	or     edi,DWORD PTR [edx]
  406242:	fwait
  406243:	mov    eax,0xfb2ffbba
  406248:	leave  
  406249:	xor    eax,0xafabf5ea
  40624e:	push   edx
  40624f:	out    0xdc,al
  406251:	in     al,dx
  406252:	mov    WORD PTR [ebx-0x256ee6d4],fs
  406258:	mov    eax,0x668fffa8
  40625d:	stos   BYTE PTR es:[edi],al
  40625e:	mov    dl,0x10
  406260:	add    al,0xf1
  406262:	mov    edx,0xad116fe9
  406267:	std    
  406268:	iret   
  406269:	aas    
  40626a:	aam    0x29
  40626c:	syscall 
  40626e:	push   esi
  40626f:	xlat   BYTE PTR ds:[ebx]
  406270:	mov    WORD PTR [ebp+0x16],ds
  406273:	ret    
  406274:	and    BYTE PTR [esi-0x13],dh
  406277:	adc    edx,DWORD PTR [esi]
  406279:	fadd   QWORD PTR [eax+0x70]
  40627c:	mov    bl,0xc1
  40627e:	push   ebx
  40627f:	xchg   edx,eax
  406280:	inc    edi
  406281:	call   0x6c81:0x26203259
  406288:	mov    ebx,edx
  40628a:	idiv   DWORD PTR [esi+0x60]
  40628d:	ret    0x655a
  406290:	cld    
  406291:	dec    ebx
  406292:	dec    eax
  406293:	ror    dl,1
  406295:	test   eax,0xfe1426ba
  40629a:	xor    edi,eax
  40629c:	and    esi,ecx
  40629e:	das    
  40629f:	fbld   TBYTE PTR [edi+eax*1]
  4062a2:	sbb    eax,DWORD PTR [eax]
  4062a4:	aas    
  4062a5:	adc    eax,0xe0952e4d
  4062aa:	aam    0x30
  4062ac:	adc    al,0x51
  4062ae:	fcmovb st,st(6)
  4062b0:	and    al,0x55
  4062b2:	or     edi,0xe24e38e9
  4062b8:	add    DWORD PTR [edi],edx
  4062ba:	inc    edx
  4062bb:	inc    esp
  4062bc:	push   ebp
  4062bd:	out    dx,eax
  4062be:	mov    es,WORD PTR [esi+ebp*1-0x60]
  4062c2:	fwait
  4062c3:	lahf   
  4062c4:	add    BYTE PTR [eax+0x57],cl
  4062c7:	or     BYTE PTR [ecx],bh
  4062c9:	or     al,0x72
  4062cb:	sbb    DWORD PTR [esi+0x2c],ebx
  4062ce:	and    BYTE PTR [ebp-0x6a],bh
  4062d1:	fsub   QWORD PTR [ebx-0x2015da0a]
  4062d7:	enter  0x534b,0x4a
  4062db:	inc    ebx
  4062dc:	fild   WORD PTR [edi+0x1a]
  4062df:	sub    BYTE PTR [esi-0x18],cl
  4062e2:	sbb    ebx,ecx
  4062e4:	mov    ebp,0x93482d13
  4062e9:	mov    dl,0xb0
  4062eb:	mov    ah,0x82
  4062ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ee:	out    dx,eax
  4062ef:	pushf  
  4062f0:	mov    cl,BYTE PTR fs:[ecx-0x33]
  4062f4:	push   ss
  4062f5:	nop
  4062f6:	scas   eax,DWORD PTR es:[edi]
  4062f7:	or     bh,BYTE PTR ds:0x858e0ab
  4062fd:	ja     0x406356
  4062ff:	into   
  406300:	mul    DWORD PTR [esi+0x4b69255e]
  406306:	ja     0x4062ba
  406308:	pop    ecx
  406309:	cmc    
  40630a:	neg    DWORD PTR ds:0x9e6cc38
  406310:	sub    ch,ch
  406312:	mov    bl,0xb9
  406314:	jo     0x40637b
  406316:	adc    BYTE PTR [eax+0x1edeffbf],0x57
  40631d:	inc    ecx
  40631e:	loope  0x40636b
  406320:	inc    edx
  406321:	mov    esp,0x797daa8c
  406326:	mov    ah,0xa6
  406328:	pop    esp
  406329:	jae    0x406382
  40632b:	popf   
  40632c:	xor    cl,dl
  40632e:	xchg   DWORD PTR [eax+0x33fa665d],ebx
  406334:	xchg   ecx,eax
  406335:	(bad)
  406338:	fst    DWORD PTR [edi+0x11]
  40633b:	in     eax,dx
  40633c:	out    0x28,al
  40633e:	call   0x6287:0xb54fc776
  406345:	mov    dh,0xfe
  406347:	ror    cl,cl
  406349:	dec    ecx
  40634a:	mov    eax,ds:0x85769789
  40634f:	sub    DWORD PTR [ecx+0x2f],eax
  406352:	jne    0x406364
  406354:	dec    edx
  406355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406357:	(bad)  
  406359:	ja     0x40639d
  40635b:	push   ds
  40635c:	in     al,dx
  40635d:	push   edx
  40635e:	and    dl,BYTE PTR [esi]
  406360:	xchg   esi,eax
  406361:	add    bl,BYTE PTR [edi+0x177336b2]
  406367:	(bad)  
  406368:	rcl    DWORD PTR [esi],cl
  40636a:	cmp    cl,dh
  40636c:	pop    esi
  40636d:	ret    
  40636e:	out    0x9a,eax
  406370:	out    dx,al
  406371:	xor    BYTE PTR [eax+ecx*4+0xe37aea],bh
  406378:	data16 jecxz 0x406330
  40637b:	push   eax
  40637c:	push   edi
  40637d:	jno    0x4063fd
  40637f:	adc    eax,ebx
  406381:	cmc    
  406382:	sub    DWORD PTR [edi-0x6a0b74fe],esi
  406388:	inc    eax
  406389:	add    ah,ah
  40638b:	sti    
  40638c:	sbb    al,0x79
  40638e:	repnz test BYTE PTR [eax+0x5bef5830],bl
  406395:	jno    0x4063e8
  406397:	not    BYTE PTR ds:0xe18dd7ec
  40639d:	mov    ah,0xec
  40639f:	mov    al,ds:0x7176955a
  4063a4:	push   ebx
  4063a5:	lds    esi,FWORD PTR [ebp-0x1]
  4063a8:	cmp    al,0x79
  4063aa:	test   BYTE PTR [ecx],cl
  4063ac:	test   eax,0x8fac3a55
  4063b2:	ds cmp al,0xaf
  4063b6:	mov    eax,ds:0xfd74ce49
  4063bb:	fsub   QWORD PTR [ebp+0x22]
  4063be:	mov    ?,WORD PTR [ebp+eax*8+0x70d040d9]
  4063c5:	fnsave [eax]
  4063c7:	sbb    DWORD PTR [edi+0x19],esp
  4063ca:	sub    eax,0xcff9b8a
  4063cf:	push   ss
  4063d0:	dec    eax
  4063d1:	jnp    0x406450
  4063d3:	cdq    
  4063d4:	sub    al,0xaa
  4063d6:	stos   DWORD PTR es:[edi],eax
  4063d7:	(bad)  
  4063d8:	xchg   ecx,eax
  4063d9:	test   al,0xc7
  4063db:	sbb    DWORD PTR [esp+edi*2],esp
  4063de:	js     0x4063dc
  4063e0:	das    
  4063e1:	lea    ebp,[esi]
  4063e3:	add    al,0xc
  4063e5:	pop    ds
  4063e6:	cmc    
  4063e7:	jne    0x4063e5
  4063e9:	push   ss
  4063ea:	mov    cl,0xf9
  4063ec:	xor    dh,BYTE PTR [ecx+edx*2+0x7]
  4063f0:	mov    ds:0x8587761b,eax
  4063f5:	jbe    0x4063bb
  4063f7:	dec    eax
  4063f8:	push   0xc5f0f41c
  4063fd:	push   ss
  4063fe:	mov    dl,0x9e
  406400:	div    BYTE PTR [ebp-0x54fd58b0]
  406406:	icebp  
  406407:	loope  0x406405
  406409:	and    DWORD PTR [esp+esi*1+0x7e83927e],esp
  406410:	add    al,bh
  406412:	push   ds
  406413:	jo     0x4063b7
  406415:	gs jge 0x406482
  406418:	mov    dl,0x66
  40641a:	push   eax
  40641b:	test   eax,0x9514b696
  406420:	sti    
  406421:	dec    ecx
  406422:	xchg   esp,eax
  406423:	pop    esp
  406424:	jg     0x4063de
  406426:	xor    ebx,edx
  406428:	or     bl,BYTE PTR [edi]
  40642a:	lods   eax,DWORD PTR ds:[esi]
  40642b:	arpl   WORD PTR ds:0x31c6c5aa,cx
  406431:	scas   al,BYTE PTR es:[edi]
  406432:	pop    esp
  406433:	pop    esp
  406434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406435:	xor    eax,DWORD PTR [ecx+0x6f730113]
  40643b:	inc    eax
  40643c:	nop
  40643d:	lods   eax,DWORD PTR ds:[esi]
  40643e:	mov    ch,0x1f
  406440:	mov    esi,0xd64f1bd2
  406445:	jmp    0x7d2a9e70
  40644a:	ss jle 0x406414
  40644d:	lds    edi,FWORD PTR [ecx+0x5d70f9cc]
  406453:	inc    esp
  406454:	mov    esp,0xe4318c0d
  406459:	add    DWORD PTR [edx+0x23],esi
  40645c:	and    edx,DWORD PTR [ebp+0x49]
  40645f:	push   0xfffffffd
  406461:	and    dh,BYTE PTR [ecx]
  406463:	call   0x5cec8ec3
  406468:	icebp  
  406469:	data16 test al,0x78
  40646c:	pop    es
  40646d:	adc    DWORD PTR [eax],ebp
  40646f:	imul   DWORD PTR [esi+esi*1+0x107ef84c]
  406476:	cli    
  406477:	retf   
  406478:	mov    WORD PTR [ebp+0x6b11006],ds
  40647e:	mov    eax,0x415b1e13
  406483:	xlat   BYTE PTR ds:[ebx]
  406484:	fsubr  DWORD PTR [eax-0x2a]
  406487:	dec    edx
  406488:	std    
  406489:	in     al,0x3b
  40648b:	mov    ds:0xc7a5160f,eax
  406490:	cmp    al,0x59
  406493:	inc    edi
  406494:	push   eax
  406495:	push   edx
  406496:	(bad)  
  406498:	sub    edx,DWORD PTR [ecx]
  40649a:	cwde   
  40649b:	sub    ch,al
  40649d:	xchg   ecx,eax
  40649e:	lahf   
  40649f:	dec    edi
  4064a0:	dec    edx
  4064a1:	cmp    esi,esp
  4064a3:	jo     0x406471
  4064a5:	je     0x40644d
  4064a7:	jecxz  0x40645f
  4064a9:	mov    dl,0xf6
  4064ab:	data16 je 0x4064cd
  4064ae:	push   esp
  4064af:	adc    DWORD PTR [esi+eax*1],esp
  4064b2:	dec    ecx
  4064b3:	(bad)  
  4064b4:	adc    BYTE PTR [ebp-0x595d466a],bl
  4064ba:	loop   0x406455
  4064bc:	test   ebp,eax
  4064be:	arpl   di,di
  4064c0:	mov    dh,0xfc
  4064c2:	dec    edx
  4064c3:	scas   eax,DWORD PTR es:[edi]
  4064c4:	adc    al,0xec
  4064c6:	xor    DWORD PTR [eax+eax*2-0x7eff284c],0xffffffea
  4064ce:	imul   BYTE PTR [esi-0x66]
  4064d1:	stos   BYTE PTR es:[edi],al
  4064d2:	dec    ebx
  4064d3:	in     eax,0x4d
  4064d5:	in     al,dx
  4064d6:	sub    edx,eax
  4064d8:	sub    al,0xf6
  4064da:	fistp  DWORD PTR [edi]
  4064dc:	sti    
  4064dd:	dec    ebx
  4064de:	pop    es
  4064df:	cwde   
  4064e0:	jmp    DWORD PTR [ebp+0xb]
  4064e3:	sub    BYTE PTR [ebx],0xe4
  4064e6:	fadd   DWORD PTR [ebx+0x12]
  4064e9:	jno    0x4064a2
  4064eb:	enter  0x6516,0x34
  4064ef:	add    DWORD PTR [eax+0x6b1d6183],0xe7c760ad
  4064f9:	or     eax,edx
  4064fb:	mov    cl,BYTE PTR [eax+ecx*1]
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi+0x6a45b064],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	mov    ?,WORD PTR [edi-0x40]
  406559:	es test al,0xce
  40655c:	mov    eax,eax
  40655e:	xchg   ebp,eax
  40655f:	(bad)  
  406560:	out    dx,eax
  406561:	mov    bl,0xc0
  406563:	and    eax,0x5bc42762
  406568:	pop    ss
  406569:	push   ss
  40656a:	mov    ds:0xe5130e54,eax
  40656f:	add    BYTE PTR [ebp-0x47],cl
  406572:	stos   BYTE PTR es:[edi],al
  406573:	ss sar bh,0x1c
  406577:	dec    ebx
  406578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406579:	loopne 0x4065d5
  40657b:	xor    eax,0x33cb619c
  406580:	popa   
  406581:	adc    eax,0x583634a
  406586:	push   ss
  406587:	pop    ecx
  406588:	sti    
  406589:	jnp    0x406541
  40658b:	sub    al,0xfd
  40658d:	or     eax,0x86a92305
  406592:	jbe    0x406593
  406594:	adc    BYTE PTR [edx],al
  406596:	ins    BYTE PTR es:[edi],dx
  406597:	push   esp
  406598:	out    dx,eax
  406599:	lahf   
  40659a:	xchg   DWORD PTR [eax],ebx
  40659c:	rcl    BYTE PTR [edi-0x72714da2],1
  4065a2:	or     ebp,DWORD PTR [ebx+0x2c]
  4065a5:	gs cmp dl,dh
  4065a8:	jl     0x40652b
  4065aa:	imul   esi,DWORD PTR [ebx+0x45],0xffffffd2
  4065ae:	xor    al,0xa1
  4065b0:	(bad)  
  4065b2:	sbb    DWORD PTR [ecx+0x30],edi
  4065b5:	push   esi
  4065b6:	add    BYTE PTR [eax],ah
  4065b8:	pextrw ebp,(bad),0xc5
  4065ba:	lods   al,BYTE PTR ds:[esi]
  4065bb:	je     0x406576
  4065bd:	jmp    0x2a8b:0x78e0678e
  4065c4:	popf   
  4065c5:	outs   dx,DWORD PTR ds:[esi]
  4065c6:	mov    ?,WORD PTR [edx+0x78]
  4065c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ca:	cmp    al,0x83
  4065cc:	fdiv   QWORD PTR [ebx+0x5]
  4065cf:	mov    esp,DWORD PTR [esi-0x2ed7fa80]
  4065d5:	jmp    0x655c:0x9d21893b
  4065dc:	jo     0x406598
  4065de:	fidivr DWORD PTR [edx]
  4065e0:	jmp    FWORD PTR [eax+edi*2]
  4065e3:	ret    0xab27
  4065e6:	jmp    0x89d7:0xb7d4c49e
  4065ed:	loope  0x406581
  4065ef:	inc    eax
  4065f0:	mov    bh,0xc8
  4065f2:	adc    BYTE PTR [edi-0x4fdbb315],dl
  4065f8:	add    cl,cl
  4065fa:	add    bl,BYTE PTR [eax+0x6694c1fa]
  406600:	xchg   DWORD PTR [eax],esp
  406602:	adc    eax,0x454d05f8
  406607:	add    al,0xaf
  406609:	sub    eax,0x37fcaaee
  40660e:	mov    esp,ss
  406610:	imul   BYTE PTR [edx+edi*8+0x24]
  406614:	jecxz  0x406650
  406616:	cli    
  406617:	sar    DWORD PTR [ecx+0x5e499815],1
  40661d:	sub    dl,al
  40661f:	je     0x4065bd
  406621:	sub    al,0x52
  406623:	push   0x88a860cb
  406628:	(bad)  
  40662a:	and    eax,0x798041e9
  40662f:	leave  
  406630:	enter  0x74f0,0x5d
  406634:	dec    ecx
  406635:	add    bl,BYTE PTR [esi+ecx*8+0x22]
  406639:	push   esi
  40663a:	cs imul esi,ecx,0xccd25fb
  406641:	mov    al,ds:0x7d718059
  406646:	mov    dh,bh
  406648:	out    dx,al
  406649:	pop    ss
  40664a:	pop    ebp
  40664b:	jns    0x4066a5
  40664d:	and    al,ch
  40664f:	cmp    cl,bl
  406651:	(bad)  
  406652:	aad    0xe1
  406654:	adc    ebx,DWORD PTR [edi+0x12]
  406657:	mov    WORD PTR [eax-0x30],fs
  40665a:	push   es
  40665b:	adc    esi,DWORD PTR [edx]
  40665d:	aaa    
  40665e:	dec    eax
  40665f:	(bad)  
  406660:	or     eax,DWORD PTR [eax+0xb7b15b9]
  406666:	dec    DWORD PTR [eax]
  406668:	scas   al,BYTE PTR es:[edi]
  406669:	jecxz  0x406640
  40666b:	in     al,dx
  40666c:	int3   
  40666d:	mov    dh,0xe0
  40666f:	and    BYTE PTR [ecx+0x16b3d07c],bh
  406675:	(bad)  
  406676:	cmp    dh,BYTE PTR [edx]
  406678:	and    ecx,DWORD PTR [edi]
  40667a:	(bad)  
  40667b:	iret   
  40667c:	pop    edi
  40667d:	outs   dx,BYTE PTR ds:[esi]
  40667e:	fadd   st,st(4)
  406680:	push   ebp
  406681:	ss pop ecx
  406683:	jbe    0x406694
  406685:	sahf   
  406686:	or     DWORD PTR [eax],edi
  406688:	xor    BYTE PTR [edx+0x59b2ef1c],dh
  40668e:	jecxz  0x4066d0
  406690:	mov    bl,0x7c
  406692:	fisubr DWORD PTR [ecx]
  406694:	lods   eax,DWORD PTR ds:[esi]
  406695:	sti    
  406696:	xor    ebx,DWORD PTR [ecx-0x567ca87a]
  40669c:	inc    esi
  40669d:	pop    ss
  40669e:	mov    eax,DWORD PTR [si]
  4066a1:	dec    esi
  4066a2:	adc    BYTE PTR [edx+0x26],bh
  4066a5:	sbb    al,0xd7
  4066a7:	or     DWORD PTR [ebx+0x1e57f26d],edi
  4066ad:	shr    BYTE PTR [esi],cl
  4066af:	stc    
  4066b0:	sbb    BYTE PTR [eax-0x17],bl
  4066b3:	inc    edi
  4066b4:	fs arpl ax,si
  4066b7:	gs jle 0x40665a
  4066ba:	push   ebx
  4066bb:	ja     0x4066e9
  4066bd:	into   
  4066be:	jmp    FWORD PTR [eax+0x1068dbad]
  4066c4:	xor    edx,DWORD PTR [ecx+eiz*8]
  4066c7:	add    eax,0x83fd937b
  4066cc:	inc    ebx
  4066cd:	jmp    0xb98f:0x38c4b2c0
  4066d4:	retf   0x656c
  4066d7:	dec    edx
  4066d8:	push   ebp
  4066d9:	stc    
  4066da:	daa    
  4066db:	aaa    
  4066dc:	jbe    0x40667b
  4066de:	lea    edi,ds:[ebx+0x43]
  4066e2:	sti    
  4066e3:	inc    ebx
  4066e4:	xor    al,0x10
  4066e6:	or     BYTE PTR ds:0xafe3aa84,bh
  4066ec:	cmp    BYTE PTR [ebx-0x2f],ch
  4066ef:	gs mov cl,0x17
  4066f2:	sahf   
  4066f3:	mov    al,ds:0x30719786
  4066f8:	addr16 popa 
  4066fa:	sub    ecx,DWORD PTR [edi+eax*1]
  4066fd:	dec    edi
  4066fe:	lods   al,BYTE PTR ds:[esi]
  4066ff:	(bad)  
  406700:	jb     0x406767
  406702:	and    ch,BYTE PTR [eax]
  406704:	ins    BYTE PTR es:[edi],dx
  406705:	icebp  
  406706:	dec    ebp
  406707:	push   edx
  406708:	mov    cl,0x8b
  40670a:	sbb    dl,BYTE PTR [edi+0x11f56833]
  406710:	xor    DWORD PTR es:[ebx],esi
  406713:	xchg   edx,eax
  406714:	in     al,dx
  406715:	cmp    esi,DWORD PTR [ecx+0x12242590]
  40671b:	sub    eax,0xc7ab6b4b
  406720:	mov    ah,0xd2
  406722:	mov    ds:0x89a9ac6d,eax
  406727:	test   DWORD PTR [ebx+0x12],ecx
  40672a:	test   eax,0x85d36094
  40672f:	push   ebp
  406730:	repnz or DWORD PTR [edi-0x60b512f9],ebp
  406737:	adc    DWORD PTR [eax+0xd7b0ce2],edi
  40673d:	mov    ah,0x7e
  40673f:	xlat   BYTE PTR ds:[ebx]
  406740:	lods   eax,DWORD PTR ds:[esi]
  406741:	pop    eax
  406742:	pop    esp
  406743:	inc    ebp
  406744:	aam    0xea
  406746:	push   cs
  406747:	or     eax,0xb4d0a137
  40674c:	pop    ss
  40674d:	test   eax,0xe46b37d8
  406752:	pop    edx
  406753:	jge    0x406761
  406755:	ins    DWORD PTR es:[edi],dx
  406756:	cli    
  406757:	cmc    
  406758:	les    ebx,FWORD PTR [ebx]
  40675a:	sub    esp,DWORD PTR [edx]
  40675c:	xchg   ebx,eax
  40675d:	retf   
  40675e:	and    al,0xa2
  406760:	push   ds
  406761:	mov    cl,0xa
  406763:	add    BYTE PTR [eax-0x26a54f09],cl
  406769:	xor    BYTE PTR [ecx],ah
  40676b:	sahf   
  40676c:	adc    DWORD PTR [eax+0x3c033835],eax
  406772:	aas    
  406773:	imul   esi,DWORD PTR [eax-0x43a0fb9e],0xffffff96
  40677a:	mov    dh,0x72
  40677c:	push   ebx
  40677d:	jne    0x406742
  40677f:	lock xor dl,BYTE PTR [edx+esi*1]
  406783:	sub    BYTE PTR [edx],dl
  406785:	out    dx,eax
  406786:	(bad)  
  406787:	fnstenv [ecx-0x2e]
  40678a:	push   edi
  40678b:	pop    ebx
  40678c:	lahf   
  40678d:	mov    eax,ds:0xa334fcf6
  406792:	bound  ebp,QWORD PTR [edi-0x63f35279]
  406798:	xchg   edi,eax
  406799:	push   esi
  40679a:	and    al,0xb7
  40679c:	sbb    bl,ch
  40679e:	mov    edx,0x23e52b82
  4067a3:	mov    BYTE PTR [ebx+0x43bd89c1],ah
  4067a9:	push   ss
  4067aa:	xchg   ebp,eax
  4067ab:	mov    esp,DWORD PTR [ecx+ebx*8]
  4067ae:	dec    ebp
  4067af:	mov    dl,0x13
  4067b1:	inc    ecx
  4067b2:	xchg   edi,eax
  4067b3:	adc    DWORD PTR [ebx],ebx
  4067b5:	xor    al,0xf4
  4067b7:	or     al,0xf1
  4067b9:	push   eax
  4067ba:	mov    ds:0xf67dca65,al
  4067bf:	imul   BYTE PTR [ecx]
  4067c1:	push   edi
  4067c2:	pop    eax
  4067c3:	mov    ebp,0xa7bb43e0
  4067c8:	dec    edx
  4067c9:	mov    edx,DWORD PTR [edx]
  4067cb:	daa    
  4067cc:	dec    ebx
  4067cd:	dec    esp
  4067ce:	mov    es,WORD PTR [edx-0x71dc0bb3]
  4067d4:	inc    edx
  4067d5:	std    
  4067d6:	int    0xd4
  4067d8:	test   BYTE PTR [eax],bh
  4067da:	xchg   ebx,eax
  4067db:	scas   al,BYTE PTR es:[edi]
  4067dc:	clc    
  4067dd:	loop   0x4067c7
  4067df:	nop
  4067e0:	adc    eax,0x4ecda2f1
  4067e5:	fstp   TBYTE PTR [edx+edx*4]
  4067e8:	pop    ds
  4067e9:	add    al,0x1c
  4067eb:	js     0x406846
  4067ed:	sub    BYTE PTR [ebx+0x44360bc],bl
  4067f3:	mov    ds:0xfb382ebd,al
  4067f8:	push   cs
  4067f9:	jo     0x4067a7
  4067fb:	jns    0x4067dd
  4067fd:	sub    al,0xd9
  4067ff:	call   0x85823536
  406804:	rol    ah,cl
  406806:	adc    eax,0x729846d9
  40680b:	(bad)  
  40680c:	sbb    dl,BYTE PTR [ebx-0x5f86e54c]
  406812:	and    BYTE PTR [edx+0x27],dh
  406815:	and    al,0x48
  406817:	mov    al,0x37
  406819:	pop    edx
  40681a:	(bad)  
  40681b:	jle    0x40683e
  40681d:	dec    eax
  40681e:	push   edi
  40681f:	dec    esp
  406820:	push   ecx
  406821:	les    ebp,FWORD PTR [ecx]
  406823:	sub    ecx,DWORD PTR [esp+eax*4]
  406826:	pop    es
  406827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406828:	xchg   ecx,eax
  406829:	test   eax,0x86208399
  40682e:	sub    eax,0xc4efeb9d
  406833:	test   DWORD PTR [ebp-0x5b],ebp
  406836:	pusha  
  406837:	push   ebp
  406838:	scas   al,BYTE PTR es:[edi]
  406839:	push   cs
  40683a:	cmp    bh,BYTE PTR [ecx-0x34]
  40683d:	adc    BYTE PTR [esi-0x745adb89],cl
  406843:	jae    0x406854
  406845:	xor    DWORD PTR [edi],esp
  406847:	out    dx,eax
  406848:	imul   ebx,eax,0x80768cb4
  40684e:	add    BYTE PTR [eax-0x607a6c7],cl
  406854:	mov    eax,ds:0xf0498d4
  406859:	add    ch,ah
  40685b:	adc    eax,0x419403c6
  406860:	sbb    BYTE PTR [esi+0x32],dh
  406863:	rcr    BYTE PTR [eax+0x7d],0x5b
  406867:	retf   
  406868:	sub    eax,0xdd8ee0e7
  40686d:	sub    DWORD PTR [eax],esp
  40686f:	fimul  WORD PTR [ebx]
  406871:	shl    bl,0xb0
  406874:	pop    edi
  406875:	in     eax,0xff
  406877:	pusha  
  406878:	jg     0x4068b5
  40687a:	aas    
  40687b:	ins    DWORD PTR es:[edi],dx
  40687c:	xor    edx,DWORD PTR [eax+0x3e2094db]
  406882:	jb     0x40681e
  406884:	repz sar esp,1
  406887:	jo     0x4068e8
  406889:	or     al,0x3a
  40688b:	push   ds
  40688c:	and    eax,0x5af64029
  406891:	sub    al,0xc
  406893:	xor    DWORD PTR [ecx-0x6e],edi
  406896:	(bad)  
  406897:	data16 outs dx,BYTE PTR ds:[esi]
  406899:	dec    ebx
  40689a:	jmp    0xd529:0x24046568
  4068a1:	sub    eax,0x34aa6929
  4068a6:	jle    0x4068de
  4068a8:	sub    BYTE PTR [esi+ebx*2-0x14],bh
  4068ac:	mov    esi,edi
  4068ae:	jg     0x406858
  4068b0:	pusha  
  4068b1:	mov    dl,0xd
  4068b3:	mov    ds:0xa4847311,eax
  4068b8:	mov    esi,0x768de3ce
  4068bd:	(bad)  
  4068be:	fbstp  TBYTE PTR [ebx-0x7e631605]
  4068c4:	rcl    BYTE PTR [ebx+0x463ee3fc],1
  4068ca:	adc    ecx,DWORD PTR [edi+0x2490ac16]
  4068d0:	push   edi
  4068d1:	or     BYTE PTR [edi-0x27],ch
  4068d4:	ins    DWORD PTR es:[edi],dx
  4068d5:	ja     0x40688e
  4068d7:	xor    ebp,DWORD PTR [edi]
  4068d9:	test   ebx,0x7dfe1f25
  4068df:	jg     0x4068b2
  4068e1:	xchg   DWORD PTR [ebp+0x7a],esi
  4068e4:	xchg   edi,eax
  4068e5:	push   cs
  4068e6:	cmp    DWORD PTR [edx-0x48],esp
  4068e9:	pop    esi
  4068ea:	idiv   DWORD PTR [esi+ebx*8-0x7ede455a]
  4068f1:	sub    DWORD PTR [ebp-0x775ec8bd],edi
  4068f7:	mov    esp,0x99619375
  4068fc:	add    cl,BYTE PTR [ebx+0x3a55daf4]
  406902:	cmp    DWORD PTR [esi-0x3ea9f0bf],ecx
  406908:	push   cs
  406909:	mov    eax,ds:0xb1ff5e6c
  40690e:	dec    esp
  40690f:	and    BYTE PTR [edx-0x30],bl
  406912:	rol    BYTE PTR [ebx+0x52],0x4f
  406916:	jmp    0x8b5f4adc
  40691b:	dec    ebp
  40691c:	in     al,dx
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0x709f56ee
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	es in  eax,0x36
  406983:	xor    ah,dh
  406985:	(bad)  
  406986:	xor    bh,ah
  406988:	pop    DWORD PTR [ecx+eiz*1]
  40698b:	mov    ch,0x7
  40698d:	fs cdq 
  40698f:	test   al,0x2a
  406991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406992:	mov    ebx,?
  406994:	dec    eax
  406995:	mov    al,0x64
  406997:	xor    DWORD PTR [edi-0x702082ec],ebp
  40699d:	mov    ch,0x3f
  40699f:	push   cs
  4069a0:	jae    0x4069d9
  4069a2:	dec    edx
  4069a3:	ins    DWORD PTR es:[edi],dx
  4069a4:	sar    BYTE PTR [edi-0x58],1
  4069a7:	rcl    DWORD PTR [eax],1
  4069a9:	out    dx,eax
  4069aa:	ja     0x4069cf
  4069ac:	mov    bl,0x3f
  4069ae:	cmp    DWORD PTR ds:0x2b16a0f7,eax
  4069b4:	nop
  4069b5:	lock mov esi,0x432c598e
  4069bb:	outs   dx,BYTE PTR ds:[esi]
  4069bc:	cmp    al,0x70
  4069be:	in     eax,0xb4
  4069c0:	adc    esi,DWORD PTR [eax-0x3e76b4f3]
  4069c6:	jg     0x4069aa
  4069c8:	shl    DWORD PTR [esi-0x27],cl
  4069cb:	adc    eax,edx
  4069cd:	enter  0xf982,0xd0
  4069d1:	xchg   ebp,eax
  4069d2:	sahf   
  4069d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d4:	and    eax,0xc9ba8739
  4069d9:	test   al,0x8f
  4069db:	sbb    dh,0xff
  4069de:	test   al,ch
  4069e0:	adc    ch,BYTE PTR [ecx+0x3b]
  4069e3:	and    al,0xf8
  4069e5:	loop   0x4069ba
  4069e7:	push   DWORD PTR [edx+0x95ec114]
  4069ed:	fwait
  4069ee:	sbb    DWORD PTR [ebx],ebp
  4069f0:	loopne 0x4069f2
  4069f2:	das    
  4069f3:	jmp    DWORD PTR [edi-0x1d564a0a]
  4069f9:	pop    esi
  4069fa:	ret    0xe58c
  4069fd:	sub    edx,eax
  4069ff:	sbb    ecx,DWORD PTR [ecx]
  406a01:	mov    al,0x6c
  406a03:	lock sbb ecx,DWORD PTR [edi-0x1402de3a]
  406a0a:	push   es
  406a0b:	ins    BYTE PTR es:[edi],dx
  406a0c:	dec    edx
  406a0d:	add    dh,ah
  406a0f:	mov    DWORD PTR [edi],edi
  406a11:	mov    dl,0x1a
  406a13:	push   ecx
  406a14:	(bad)  ds:0x9719a847
  406a1a:	shr    BYTE PTR [ebx+0x2d],1
  406a1d:	sbb    DWORD PTR [esi-0x52],0xf6d0931a
  406a24:	ret    
  406a25:	dec    edi
  406a26:	fdiv   QWORD PTR [ebp+edi*2-0x7ae0e7a9]
  406a2d:	loop   0x406a8b
  406a2f:	shr    bh,cl
  406a31:	stc    
  406a32:	pop    ecx
  406a33:	push   esi
  406a34:	cmp    eax,0xd49dccd8
  406a39:	nop
  406a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a3b:	pop    esp
  406a3c:	mov    ecx,0x5c542c85
  406a41:	aas    
  406a42:	pop    ebx
  406a43:	sbb    bh,ch
  406a45:	aam    0xa5
  406a47:	xlat   BYTE PTR ds:[ebx]
  406a48:	sub    al,ch
  406a4a:	je     0x4069db
  406a4c:	sbb    al,0x12
  406a4e:	push   ss
  406a4f:	ins    BYTE PTR es:[edi],dx
  406a50:	pop    edx
  406a51:	mov    dl,0xd5
  406a53:	fstp   st(7)
  406a55:	mov    cl,0x8c
  406a57:	jecxz  0x406a99
  406a59:	sti    
  406a5a:	lahf   
  406a5b:	sbb    eax,0x1773af30
  406a60:	iret   
  406a61:	push   esi
  406a62:	mov    ds:0x5aa97ad1,al
  406a67:	es pusha 
  406a69:	jne    0x406ae8
  406a6b:	and    eax,0xd55f11df
  406a70:	hlt    
  406a71:	xchg   edi,eax
  406a72:	loopne 0x406a73
  406a74:	call   0x1408:0xb18f8c9d
  406a7b:	jmp    0x406a3a
  406a7d:	xor    BYTE PTR [ecx],bl
  406a7f:	jecxz  0x406a42
  406a81:	jb     0x406a95
  406a83:	rol    BYTE PTR [esi-0x5359aaf8],0x9f
  406a8a:	int3   
  406a8b:	ds jno 0x406a71
  406a8e:	xchg   ebp,eax
  406a8f:	pushf  
  406a90:	dec    edx
  406a91:	gs (bad) 
  406a93:	lock imul BYTE PTR [ebp+edx*4-0x39]
  406a98:	dec    eax
  406a99:	lds    esp,FWORD PTR [edi-0x14]
  406a9c:	div    DWORD PTR [esp+eax*8+0x3]
  406aa0:	imul   ecx,DWORD PTR [edx-0x48],0xf
  406aa4:	in     al,dx
  406aa5:	jb     0x406afb
  406aa7:	pop    edx
  406aa8:	adc    eax,0xdcd2302c
  406aad:	adc    edi,DWORD PTR [eax-0x40b0e944]
  406ab3:	mov    dh,0xdb
  406ab5:	xchg   DWORD PTR [esi+0x5664c780],ebp
  406abb:	pusha  
  406abc:	sbb    ch,bl
  406abe:	pop    edi
  406abf:	and    eax,0x5a99fea6
  406ac4:	adc    edi,DWORD PTR [ecx+edi*4-0x55]
  406ac8:	lea    edi,[ebx+0x5a3bb4af]
  406ace:	sbb    BYTE PTR ds:[edx-0x21],dh
  406ad2:	cld    
  406ad3:	stc    
  406ad4:	pop    edi
  406ad5:	cs (bad) 
  406ad7:	test   DWORD PTR [ebp+0xdb7be18],0xbbfdae87
  406ae1:	aas    
  406ae2:	inc    eax
  406ae3:	aaa    
  406ae4:	add    BYTE PTR [ebx+esi*4-0x75],0xf6
  406ae9:	cmc    
  406aea:	mov    esi,0xb3a9c27a
  406aef:	push   ecx
  406af0:	ds inc eax
  406af2:	frstor [esi-0x3ed8cc45]
  406af8:	adc    al,0x9d
  406afa:	out    dx,al
  406afb:	inc    edi
  406afc:	lss    eax,FWORD PTR ds:0x7982ba1b
  406b03:	jg     0x406b63
  406b05:	cmp    esi,0x32
  406b08:	cwde   
  406b09:	mov    ecx,fs
  406b0b:	add    al,0x98
  406b0d:	sbb    DWORD PTR [ebx+0x43],ebx
  406b10:	inc    esp
  406b11:	lahf   
  406b12:	push   esp
  406b13:	enter  0xf9ec,0x55
  406b17:	mov    ds:0xd4450967,al
  406b1c:	xlat   BYTE PTR ds:[ebx]
  406b1d:	dec    ebx
  406b1e:	les    ecx,FWORD PTR [edi+0x47b379c]
  406b24:	pop    ecx
  406b25:	xchg   esp,eax
  406b26:	stos   DWORD PTR es:[edi],eax
  406b27:	jns    0x406ad9
  406b29:	add    esi,esi
  406b2b:	bound  esp,QWORD PTR [edx+0x7a]
  406b2e:	test   DWORD PTR [edi-0x6a],edx
  406b31:	sub    bh,BYTE PTR [esi]
  406b33:	jmp    FWORD PTR [ebx+esi*4-0x17b34f99]
  406b3a:	fistp  QWORD PTR [edx+0xdb1533e]
  406b40:	(bad)  
  406b41:	cmp    esi,edx
  406b43:	mov    BYTE PTR ds:0x97a50e66,ah
  406b49:	dec    ebp
  406b4a:	inc    ecx
  406b4b:	push   edx
  406b4c:	ins    DWORD PTR es:[edi],dx
  406b4d:	gs mov ch,0x7f
  406b50:	ret    
  406b51:	push   esp
  406b52:	test   BYTE PTR [eax-0x25],al
  406b55:	cli    
  406b56:	jge    0x406bd0
  406b58:	pop    ebp
  406b59:	loope  0x406afd
  406b5b:	jo     0x406b4c
  406b5d:	mov    bh,0xbc
  406b5f:	dec    ebp
  406b60:	mov    al,0x74
  406b62:	adc    DWORD PTR es:[esi],ecx
  406b65:	mov    ch,0xaf
  406b67:	fstp   QWORD PTR [edi]
  406b69:	jg     0x406bd0
  406b6b:	pop    ebp
  406b6c:	jmp    0x406b3c
  406b6e:	popa   
  406b6f:	inc    eax
  406b70:	ror    ch,cl
  406b72:	add    bl,BYTE PTR [edi+esi*4-0x63a65a20]
  406b79:	shl    BYTE PTR [edi+ebx*1-0x7c],cl
  406b7d:	call   FWORD PTR [edx+0x46]
  406b80:	clts   
  406b82:	push   bp
  406b84:	push   ebp
  406b85:	xlat   BYTE PTR ds:[ebx]
  406b86:	sub    DWORD PTR [ecx+0x3c043e98],0xfffffffe
  406b8d:	jmp    0xf4b291bf
  406b92:	cmp    DWORD PTR [edi+esi*1-0x792b2bf6],ecx
  406b99:	push   0xffffffa5
  406b9b:	retf   
  406b9c:	(bad)  
  406b9d:	pop    edi
  406b9e:	rcl    BYTE PTR [ecx+0x3de3d314],1
  406ba4:	inc    edx
  406ba5:	push   ds
  406ba6:	inc    ecx
  406ba7:	test   DWORD PTR [eax],ebx
  406ba9:	ror    cl,cl
  406bab:	movsx  eax,WORD PTR [ecx-0x6d12a081]
  406bb2:	add    dl,BYTE PTR [ecx+esi*2+0x34e115aa]
  406bb9:	js     0x406b63
  406bbb:	add    eax,0x7ed0d603
  406bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc1:	test   BYTE PTR [ebx+0x71ede860],0x31
  406bc8:	imul   ebx,DWORD PTR [edi-0x18],0x38
  406bcc:	sub    esp,DWORD PTR [eax-0x57466d33]
  406bd2:	xor    DWORD PTR [ebp-0x5a9874e3],esp
  406bd8:	pusha  
  406bd9:	in     eax,dx
  406bda:	ja     0x406bf8
  406bdc:	xchg   ebp,eax
  406bdd:	imul   edi,DWORD PTR [edi+0x6b],0xf9d1698b
  406be4:	push   cs
  406be5:	jbe    0x406c28
  406be7:	js     0xfc1e9833
  406bed:	outs   dx,DWORD PTR ds:[esi]
  406bee:	gs mov bh,ch
  406bf1:	jmp    0xa283ae1a
  406bf6:	mov    eax,0xec5dd498
  406bfb:	sti    
  406bfc:	outs   dx,BYTE PTR ds:[esi]
  406bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfe:	test   al,0x1
  406c00:	(bad)  
  406c01:	fcmovb st,st(1)
  406c03:	mov    ds:0xf1e6442d,al
  406c08:	xchg   edi,eax
  406c09:	xor    DWORD PTR [edi+eax*8],0x432f3af2
  406c10:	hlt    
  406c11:	(bad)  
  406c12:	push   ds
  406c13:	rcl    BYTE PTR [esi+0x592945f],0x87
  406c1a:	pop    ds
  406c1b:	in     al,dx
  406c1c:	or     al,BYTE PTR [edx]
  406c1e:	fld    TBYTE PTR [ebp-0x8]
  406c21:	lock adc ecx,esp
  406c24:	faddp  st(3),st
  406c26:	scas   al,BYTE PTR es:[edi]
  406c27:	dec    eax
  406c28:	jle    0x406bce
  406c2a:	maxps  xmm6,XMMWORD PTR [eax+eax*1-0x3f]
  406c2f:	dec    sp
  406c31:	fstp   QWORD PTR [edi]
  406c33:	fidiv  WORD PTR [ecx]
  406c35:	xor    eax,0x17af7d1d
  406c3a:	test   DWORD PTR [esi+0x793b0b3f],esp
  406c40:	jnp    0x406bf6
  406c42:	push   esi
  406c43:	dec    esi
  406c44:	fnstenv [esi]
  406c46:	rcl    BYTE PTR [ebp+0x10],1
  406c49:	leave  
  406c4a:	dec    ebx
  406c4b:	scas   al,BYTE PTR es:[edi]
  406c4c:	jge    0x406c42
  406c4e:	inc    esp
  406c4f:	and    eax,0xeab0eff9
  406c54:	mov    edi,0xd7e93985
  406c59:	or     DWORD PTR [ecx-0x73fa1d24],ebp
  406c5f:	add    ecx,DWORD PTR [ebx+0x2]
  406c62:	loopne 0x406cde
  406c64:	into   
  406c65:	icebp  
  406c66:	sti    
  406c67:	inc    edx
  406c68:	mov    ecx,0x69d96966
  406c6d:	gs and al,0xed
  406c70:	fistp  WORD PTR [ebx-0x3407e115]
  406c76:	test   DWORD PTR [edx],ebp
  406c78:	mov    dh,ah
  406c7a:	add    dh,bl
  406c7c:	inc    ebx
  406c7d:	(bad)  
  406c7e:	aas    
  406c7f:	shr    BYTE PTR [ebx],1
  406c81:	lea    edi,[eax+0x1cc9514f]
  406c87:	arpl   WORD PTR [esi+ebp*4],cx
  406c8a:	xor    edi,esp
  406c8c:	in     eax,dx
  406c8d:	pop    edi
  406c8e:	out    0x55,al
  406c90:	sar    bl,1
  406c92:	xlat   BYTE PTR ds:[ebx]
  406c93:	push   ebp
  406c94:	add    DWORD PTR [ebp-0x3c],edx
  406c97:	mov    ds:0x1bd6651e,al
  406c9c:	xor    bh,BYTE PTR [edi+eax*1-0x142ecda4]
  406ca3:	mov    ebx,DWORD PTR ds:0xb3b8f84b
  406ca9:	fbstp  TBYTE PTR [edi]
  406cab:	mov    bl,0x70
  406cad:	ret    0x11b1
  406cb0:	jecxz  0x406c92
  406cb2:	add    DWORD PTR [edi],ecx
  406cb4:	or     BYTE PTR [edi],dh
  406cb6:	xor    eax,0x1e2ab99c
  406cbb:	add    BYTE PTR ds:0x7bffb72d,0x91
  406cc2:	rol    DWORD PTR [ebx+0x1],1
  406cc5:	dec    esi
  406cc6:	pop    esp
  406cc7:	and    bh,BYTE PTR [esi+0x12]
  406cca:	int    0xa1
  406ccc:	inc    edx
  406ccd:	pop    eax
  406cce:	xor    eax,0xe8e466de
  406cd3:	dec    ecx
  406cd4:	fnsave [ebx]
  406cd6:	pop    edx
  406cd7:	lahf   
  406cd8:	call   FWORD PTR [ebx+0x2c2def4b]
  406cde:	push   0x9
  406ce0:	stos   BYTE PTR es:[edi],al
  406ce1:	jge    0x406cad
  406ce3:	scas   al,BYTE PTR es:[edi]
  406ce4:	dec    ebp
  406ce5:	out    0x5c,al
  406ce7:	push   edi
  406ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce9:	rol    DWORD PTR [ebp-0x12],cl
  406cec:	and    eax,0xdfbbbed6
  406cf1:	mov    bh,0xc3
  406cf3:	add    BYTE PTR [eax+edi*4],dl
  406cf6:	dec    eax
  406cf7:	push   0xfffffffd
  406cf9:	xor    DWORD PTR [ecx+0x4db39a68],esi
  406cff:	pop    ecx
  406d00:	daa    
  406d01:	aaa    
  406d02:	sbb    edi,eax
  406d04:	push   cs
  406d05:	imul   ebx,DWORD PTR [ebx],0x8c856441
  406d0b:	mov    eax,0xe5fed5fc
  406d10:	or     eax,0xffe5b3a8
  406d15:	cmc    
  406d16:	sbb    BYTE PTR [ecx+0x4d],0xff
  406d1a:	retf   0x463
  406d1d:	sub    eax,DWORD PTR [ecx+0x9b37a2b]
  406d23:	xor    al,0x65
  406d25:	cmp    ch,BYTE PTR [esi]
  406d27:	jecxz  0x406d8c
  406d29:	lds    ebx,FWORD PTR [eax-0x10]
  406d2c:	jl     0x406d41
  406d2e:	add    al,0x78
  406d30:	int    0x26
  406d32:	int    0xbd
  406d34:	mov    eax,0xfcfe9a6
  406d39:	(bad)  
  406d3a:	mov    al,0x51
  406d3c:	or     DWORD PTR [esi+0x46],edx
  406d3f:	sahf   
  406d40:	ja     0x406d03
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi-0x5095f9fd]
  406db5:	pop    ebp
  406db6:	mov    ch,0x7c
  406db8:	or     cl,BYTE PTR [ebx+0x129e1818]
  406dbe:	sbb    BYTE PTR [eax],bl
  406dc0:	daa    
  406dc1:	dec    esp
  406dc2:	jp     0x406da4
  406dc4:	adc    BYTE PTR [esi],dl
  406dc6:	sti    
  406dc7:	out    0xe4,ax
  406dca:	not    dh
  406dcc:	mov    esp,0x6f84c84d
  406dd1:	lock arpl WORD PTR ds:0x3195c8c8,bx
  406dd8:	retf   
  406dd9:	stos   BYTE PTR es:[edi],al
  406dda:	sbb    al,0x6f
  406ddc:	add    al,0x1b
  406dde:	out    dx,al
  406ddf:	push   esi
  406de0:	iret   
  406de1:	push   ss
  406de2:	ins    BYTE PTR es:[edi],dx
  406de3:	ds ja  0x406dc1
  406de6:	mov    BYTE PTR [edi+0x3801a8cd],bl
  406dec:	aaa    
  406ded:	sbb    ebp,DWORD PTR [edi]
  406def:	cld    
  406df0:	push   edx
  406df1:	adc    esi,DWORD PTR [ebp+0x35]
  406df4:	fsubp  st(2),st
  406df6:	arpl   WORD PTR [edx-0x506c125],dx
  406dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dfd:	out    dx,eax
  406dfe:	jg     0x406dd2
  406e00:	or     BYTE PTR [eax],dl
  406e02:	add    DWORD PTR [ebx+eax*1-0x2d3ba17d],esp
  406e09:	xchg   edi,eax
  406e0a:	stc    
  406e0b:	out    dx,eax
  406e0c:	imul   esi,esp,0x4b
  406e0f:	jae    0x406e6e
  406e11:	xchg   esi,eax
  406e12:	xchg   ebx,eax
  406e13:	outs   dx,BYTE PTR ds:[esi]
  406e14:	xor    DWORD PTR [edi],edi
  406e16:	mov    fs,ebx
  406e18:	xor    eax,0xb666193d
  406e1d:	popa   
  406e1e:	retf   0x4979
  406e21:	inc    eax
  406e22:	push   ss
  406e23:	push   ss
  406e24:	das    
  406e25:	add    DWORD PTR ds:0x1b52777a,ecx
  406e2b:	retf   0x2127
  406e2e:	and    al,0x33
  406e30:	xchg   ebp,eax
  406e31:	jo     0x406dc0
  406e33:	pushf  
  406e34:	iret   
  406e35:	xor    eax,0x5cd46989
  406e3a:	pop    edx
  406e3b:	push   0x8871d90b
  406e40:	clc    
  406e41:	cld    
  406e42:	adc    DWORD PTR [ecx-0xf7c5851],esi
  406e48:	(bad)  
  406e49:	sub    dl,BYTE PTR [edi+0x50cccafa]
  406e4f:	ss push ds
  406e51:	adc    eax,0xa3640f8d
  406e56:	jmp    0x406ed6
  406e58:	pop    ecx
  406e59:	mov    dl,0x41
  406e5b:	test   al,0x25
  406e5d:	jl     0x406ecf
  406e5f:	call   DWORD PTR [edi-0x5f]
  406e62:	dec    esi
  406e63:	inc    eax
  406e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e65:	popf   
  406e66:	rol    DWORD PTR [ebx-0x1f],cl
  406e69:	push   ebx
  406e6a:	fsubrp st(7),st
  406e6c:	inc    BYTE PTR [edi+edx*4]
  406e6f:	(bad)  
  406e70:	inc    DWORD PTR [ebx+0x49]
  406e73:	stc    
  406e74:	outs   dx,BYTE PTR ds:[esi]
  406e75:	mov    ds:0x7921feef,al
  406e7a:	push   ss
  406e7b:	stos   BYTE PTR es:[edi],al
  406e7c:	pop    ss
  406e7d:	mov    al,ds:0xfeedd805
  406e82:	test   BYTE PTR [edi-0x543e98b0],al
  406e88:	pop    edx
  406e89:	cmp    al,0x24
  406e8b:	shr    BYTE PTR [esi-0x28],0xa5
  406e8f:	mov    ebp,0x32531220
  406e94:	lea    edi,[eax-0x39]
  406e97:	fs xchg edi,eax
  406e99:	fld    DWORD PTR [ebx+0x6b]
  406e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e9d:	popa   
  406e9e:	mov    al,ds:0x93321f1
  406ea3:	dec    esp
  406ea4:	cmp    bl,BYTE PTR [ecx-0x15]
  406ea7:	xor    eax,0xa1729d82
  406eac:	fwait
  406ead:	test   eax,0xd37e24ee
  406eb2:	nop
  406eb3:	add    bh,bl
  406eb5:	mov    ebx,DWORD PTR ds:0x86658c96
  406ebb:	int    0xee
  406ebd:	icebp  
  406ebe:	mov    esp,0x28d12d5b
  406ec3:	retf   
  406ec4:	aam    0x62
  406ec6:	jb     0x406e83
  406ec8:	cmp    bh,BYTE PTR [ecx-0x15edad5a]
  406ece:	jp     0x406ec2
  406ed0:	jmp    0x693c6dc8
  406ed5:	neg    DWORD PTR [edx+0x52]
  406ed8:	jmp    0xd2adb483
  406edd:	push   ss
  406ede:	sbb    esp,edi
  406ee0:	sub    DWORD PTR [esi-0x55],ebx
  406ee3:	lods   eax,DWORD PTR ds:[esi]
  406ee4:	and    BYTE PTR [edi],dh
  406ee6:	out    dx,eax
  406ee7:	or     eax,0xc8f250a4
  406eec:	ins    BYTE PTR es:[edi],dx
  406eed:	outs   dx,DWORD PTR ds:[esi]
  406eee:	push   edx
  406eef:	jno    0x406ea8
  406ef1:	mov    al,ds:0xebedd054
  406ef6:	inc    esi
  406ef7:	jle    0x406f40
  406ef9:	xor    bl,BYTE PTR [ebx+0x4f]
  406efc:	push   eax
  406efd:	fistp  DWORD PTR [ebp+ecx*4-0x27]
  406f01:	pushf  
  406f02:	sub    dl,BYTE PTR [edx]
  406f04:	daa    
  406f05:	loopne 0x406ef4
  406f07:	mov    esi,0x40a8cf30
  406f0c:	cmp    ebx,DWORD PTR [ebp+0x635ed315]
  406f12:	sbb    al,0xf2
  406f14:	in     eax,0xb6
  406f16:	not    bl
  406f18:	mov    ecx,cs
  406f1a:	sti    
  406f1b:	mov    ds:0x70fd7bf2,eax
  406f20:	call   0xdd6b:0x6e2049de
  406f27:	retf   
  406f28:	test   DWORD PTR [eax],0x24b111b3
  406f2e:	out    dx,eax
  406f2f:	mov    bl,0x2f
  406f31:	jg     0x406f6f
  406f33:	(bad)  
  406f34:	das    
  406f35:	gs push esp
  406f37:	fbstp  TBYTE PTR [edx+0x41]
  406f3a:	das    
  406f3b:	cli    
  406f3c:	repnz mov bh,0xf0
  406f3f:	cli    
  406f40:	push   ecx
  406f41:	pop    edi
  406f42:	add    dh,BYTE PTR [ecx+0x10]
  406f45:	push   0x54
  406f47:	outs   dx,DWORD PTR ds:[esi]
  406f48:	(bad)  
  406f49:	inc    esp
  406f4a:	ins    BYTE PTR es:[edi],dx
  406f4b:	mov    ebx,0xf136d54a
  406f50:	jbe    0x406f7e
  406f52:	iret   
  406f53:	adc    DWORD PTR [ebp+0x0],0xe20bd93b
  406f5a:	xor    BYTE PTR ds:0x2fccba64,bh
  406f60:	sbb    al,0x28
  406f62:	jl     0x406f8a
  406f64:	adc    ah,BYTE PTR [edi+edi*1+0x37]
  406f68:	inc    DWORD PTR [ecx+0x2a6d83c8]
  406f6e:	pop    esi
  406f6f:	dec    ebx
  406f70:	sub    DWORD PTR [ecx-0x5f2c96bc],eax
  406f76:	sar    DWORD PTR [edx+0x3f98ceba],cl
  406f7c:	push   es
  406f7d:	xchg   ecx,eax
  406f7f:	and    DWORD PTR ds:0x5c491654,esi
  406f85:	ret    0x7f0f
  406f88:	and    ebp,DWORD PTR [esi]
  406f8a:	jmp    0x2eccb426
  406f8f:	addr16 out dx,eax
  406f91:	and    al,0x5a
  406f93:	ins    DWORD PTR es:[edi],dx
  406f94:	stc    
  406f95:	mov    DWORD PTR [esi],edx
  406f97:	push   edx
  406f98:	cs sahf 
  406f9a:	xor    BYTE PTR [ebp-0x2a],dh
  406f9d:	in     eax,0xf9
  406f9f:	pop    ebx
  406fa0:	jge    0x406ff7
  406fa2:	leave  
  406fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa4:	push   ebp
  406fa5:	push   cs
  406fa6:	jae    0x406f47
  406fa8:	into   
  406fa9:	out    0x77,al
  406fab:	xchg   ebx,eax
  406fac:	adc    DWORD PTR [ebx-0x60],edi
  406faf:	xchg   ebp,eax
  406fb0:	popa   
  406fb1:	sbb    al,0x1e
  406fb3:	jbe    0x406f7f
  406fb5:	add    al,0xc3
  406fb7:	stc    
  406fb8:	or     DWORD PTR [ebp-0x2d863582],eax
  406fbe:	adc    ah,al
  406fc0:	dec    edi
  406fc1:	cdq    
  406fc2:	mov    ch,0xc0
  406fc4:	and    eax,ebp
  406fc6:	clc    
  406fc7:	arpl   bp,si
  406fc9:	jb     0x406f59
  406fcb:	out    0xb7,eax
  406fcd:	jbe    0x406f75
  406fcf:	or     BYTE PTR [ebp+0x4e1ad58f],0xc1
  406fd6:	push   esi
  406fd7:	mov    ebx,0x31858ad5
  406fdc:	cmp    BYTE PTR fs:[ebp+0x52],dl
  406fe0:	or     DWORD PTR [esi-0x7e],ebx
  406fe3:	call   0x9803:0x30d7c62f
  406fea:	cmp    edx,DWORD PTR [edi]
  406fec:	pop    es
  406fed:	je     0x407055
  406fef:	ds push ds
  406ff1:	jmp    0x1dda:0xcbfe7cc0
  406ff8:	imul   BYTE PTR [esi]
  406ffa:	dec    ecx
  406ffb:	inc    esi
  406ffc:	add    ah,ch
  406ffe:	fsubr  st,st(4)
  407000:	or     eax,0xfc2dda9
  407005:	out    0x8d,al
  407007:	ins    BYTE PTR es:[edi],dx
  407008:	lock add BYTE PTR [bx],bh
  40700c:	in     al,dx
  40700d:	cmp    eax,0x566fd679
  407012:	push   ebp
  407013:	cmp    BYTE PTR [edx],ah
  407015:	ins    WORD PTR es:[edi],dx
  407017:	(bad)  
  407018:	rcr    BYTE PTR [eax-0x72d4d516],1
  40701e:	int    0xa5
  407020:	repz loope 0x407067
  407023:	sbb    eax,0x266db324
  407028:	and    eax,0x5ca5cc3
  40702d:	xor    edi,DWORD PTR [edx+ebx*2+0x62]
  407031:	scas   al,BYTE PTR es:[edi]
  407032:	rol    BYTE PTR [ecx+0x728d9223],1
  407038:	idiv   BYTE PTR [esi]
  40703a:	pop    edi
  40703b:	adc    ebp,ecx
  40703d:	push   ebx
  40703e:	inc    ebp
  40703f:	sbb    DWORD PTR [edx+0x763f1927],ebx
  407045:	xor    esi,DWORD PTR [edi-0x19267f68]
  40704b:	mov    ch,0xb4
  40704d:	or     BYTE PTR [edx+0x15],al
  407050:	in     eax,0xfe
  407052:	mov    ds:0x4bb99be,al
  407057:	out    dx,eax
  407058:	sti    
  407059:	mov    WORD PTR [esi+eiz*4],?
  40705c:	fbstp  TBYTE PTR [esi-0x6f6beb8c]
  407062:	push   ds
  407063:	push   esp
  407064:	bound  esi,QWORD PTR [esp+ecx*4-0x16]
  407068:	call   0xe4616987
  40706d:	bound  esi,QWORD PTR [edi+0x43e79d14]
  407073:	aad    0xda
  407075:	and    ecx,DWORD PTR [ebx+0x5854bcf1]
  40707b:	div    BYTE PTR [ebx-0x4d]
  40707e:	inc    ebp
  40707f:	mov    ebx,0x8a9c0bd1
  407084:	ja     0x40708a
  407086:	xchg   esi,eax
  407087:	in     al,0xc9
  407089:	xor    bl,BYTE PTR [esi]
  40708b:	dec    edi
  40708c:	out    0x45,al
  40708e:	loope  0x4070d7
  407090:	xor    dl,BYTE PTR [eax]
  407092:	ja     0x407037
  407094:	stos   DWORD PTR es:[edi],eax
  407095:	add    DWORD PTR [ebp-0x2b6014cc],edi
  40709b:	add    al,0xa8
  40709d:	mov    ebp,eax
  40709f:	jne    0x40704a
  4070a1:	adc    BYTE PTR [eax],bh
  4070a3:	mov    ebx,DWORD PTR [eax+0x2622431a]
  4070a9:	aaa    
  4070aa:	in     al,0x26
  4070ac:	sar    BYTE PTR [ebp+0x62bd1bc0],0x65
  4070b3:	sub    eax,edx
  4070b5:	sbb    ebx,ebx
  4070b7:	icebp  
  4070b8:	cmc    
  4070b9:	dec    edi
  4070ba:	ja     0x407127
  4070bc:	xor    edi,esp
  4070be:	je     0x4070c4
  4070c0:	sub    eax,0xfff8ac7d
  4070c5:	or     eax,0x65c494da
  4070ca:	lods   al,BYTE PTR ds:[esi]
  4070cb:	mov    esi,DWORD PTR [ecx+0x78]
  4070ce:	les    eax,FWORD PTR [edi+0x26]
  4070d1:	call   0xcf7f:0x287ef351
  4070d8:	mov    ds:0xf89d1c31,eax
  4070dd:	xchg   ebp,eax
  4070de:	or     ebp,esp
  4070e0:	push   ebx
  4070e1:	sbb    ebp,DWORD PTR [ebp-0x4d]
  4070e4:	and    BYTE PTR [eax*2-0x4ba91e57],ah
  4070eb:	xchg   esi,eax
  4070ec:	mov    al,0x39
  4070ee:	dec    edx
  4070ef:	popa   
  4070f0:	mov    esp,0x6c491545
  4070f5:	(bad)  
  4070f6:	dec    esi
  4070f7:	les    ebx,FWORD PTR [ebp+0x27]
  4070fa:	aaa    
  4070fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070fc:	sub    eax,0xd062db33
  407101:	sbb    ebx,DWORD PTR [ebx-0x53]
  407104:	and    al,0x7c
  407106:	mov    edi,0xa229fd44
  40710b:	add    DWORD PTR [ebx],ebp
  40710d:	and    al,0x5f
  40710f:	cmp    edi,esp
  407111:	xor    edi,DWORD PTR [eax-0x39]
  407114:	setge  BYTE PTR [ebp-0x21]
  407118:	test   al,dh
  40711a:	jbe    0x407137
  40711c:	and    dl,cl
  40711e:	out    0xc,al
  407120:	cmp    ch,bl
  407122:	xchg   edx,eax
  407123:	jae    0x40713a
  407125:	in     eax,0xbf
  407127:	cld    
  407128:	lods   al,BYTE PTR ds:[esi]
  407129:	in     eax,dx
  40712a:	or     al,0x63
  40712c:	jp     0x407144
  40712e:	cmp    ecx,DWORD PTR [esi+0x50]
  407131:	rcl    BYTE PTR [eax+0x4f6d9728],1
  407137:	and    DWORD PTR [esi-0x6449abbd],eax
  40713d:	dec    edx
  40713e:	and    ebx,eax
  407140:	push   ebx
  407141:	call   DWORD PTR [eax-0x52]
  407144:	push   esp
  407145:	xor    DWORD PTR [ebx+0x3e69c125],ebp
  40714b:	mov    ebx,0xb9f3bc38
  407150:	imul   ebp,DWORD PTR ds:0x198e0b82,0x822b9ea
  40715a:	pop    ss
  40715b:	mov    edi,0x2dfbfe6e
  407160:	inc    ecx
  407161:	(bad)  
  407163:	mov    ecx,0x6d04bdef
  407168:	adc    eax,0x509bd0e4
  40716d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40716e:	sbb    BYTE PTR [ebp+ebp*2+0xf],ah
  407172:	aad    0xa2
  407174:	dec    edx
  407175:	daa    
  407176:	test   eax,0x283cd1ce
  40717b:	dec    edx
  40717c:	pop    ds
  40717d:	inc    edi
  40717e:	pop    ds
  40717f:	cmp    al,0x98
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	push   ss
  4071c5:	mov    edx,0x85907cc3
  4071ca:	sbb    BYTE PTR [eax],bl
  4071cc:	sahf   
  4071cd:	adc    bl,BYTE PTR [eax]
  4071cf:	sbb    dh,al
  4071d1:	aad    0xc8
  4071d3:	loopne 0x4071fe
  4071d5:	jmp    0x15fc6ce
  4071da:	mov    al,0x9e
  4071dc:	repnz push ecx
  4071de:	stos   DWORD PTR es:[edi],eax
  4071df:	mov    dl,BYTE PTR [edx-0x18]
  4071e2:	jnp    0x4071a0
  4071e4:	jge    0x407189
  4071e6:	push   esi
  4071e7:	fist   WORD PTR [edx+ebp*2]
  4071ea:	dec    ebp
  4071eb:	rcr    BYTE PTR [ecx-0x4e],cl
  4071ee:	jmp    0x20ee32e8
  4071f3:	pop    es
  4071f4:	(bad)  
  4071f5:	jge    0x40724b
  4071f7:	fdivr  DWORD PTR [ebp-0x58]
  4071fa:	mov    edx,0x36a24420
  4071ff:	pusha  
  407200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407201:	ret    
  407202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407203:	scas   al,BYTE PTR es:[edi]
  407204:	xor    bl,BYTE PTR [edx+eiz*4-0x152b174c]
  40720b:	xchg   esp,eax
  40720c:	pop    edi
  40720d:	test   ah,cl
  40720f:	add    eax,0x7586ed6
  407214:	pop    ds
  407215:	pop    ebp
  407216:	in     eax,dx
  407217:	cli    
  407218:	xor    DWORD PTR [ebp+0x54e05081],0xffffff85
  40721f:	mov    esp,0x17804ccb
  407224:	pop    edx
  407225:	inc    DWORD PTR [edx-0x39d25b7]
  40722b:	imul   ebp,DWORD PTR [esi],0xa3e1eb45
  407231:	lods   eax,DWORD PTR ds:[esi]
  407232:	enter  0x4928,0xb2
  407236:	cmc    
  407237:	sbb    al,0x83
  407239:	mov    esp,0xcf904db6
  40723e:	pop    esi
  40723f:	ds jnp 0x407250
  407242:	sbb    BYTE PTR [esi-0x5f],bl
  407245:	and    ch,BYTE PTR ds:0x17d50214
  40724b:	cdq    
  40724c:	add    edi,0xdc15bd76
  407252:	jno    0x40724e
  407254:	imul   ebx,eax,0xb164082a
  40725a:	dec    ebp
  40725b:	in     eax,0x82
  40725d:	adc    bh,BYTE PTR [edi]
  40725f:	cdq    
  407260:	xor    al,0x9d
  407262:	cld    
  407263:	mov    eax,ds:0xdd074af3
  407268:	xor    esp,DWORD PTR [eax]
  40726a:	outs   dx,BYTE PTR ds:[esi]
  40726b:	push   edi
  40726c:	cmp    BYTE PTR [ecx-0x77913492],al
  407272:	xor    DWORD PTR [edx],edx
  407274:	in     eax,dx
  407275:	loope  0x4072e1
  407277:	or     BYTE PTR [esi+0x3f],0x41
  40727b:	adc    DWORD PTR [edx+0x7dc5fc42],0x5b644159
  407285:	mov    DWORD PTR [edx-0xf],ebx
  407288:	out    dx,eax
  407289:	push   0x4666fd16
  40728e:	push   esi
  40728f:	fs inc esi
  407291:	sar    BYTE PTR [esi],1
  407293:	jmp    0x40723a
  407295:	xor    DWORD PTR [esi+edx*1+0x5],ebx
  407299:	ss out dx,eax
  40729b:	lahf   
  40729c:	ins    DWORD PTR es:[edi],dx
  40729d:	cs (bad) 
  40729f:	push   ebp
  4072a0:	or     al,0x43
  4072a2:	(bad)  
  4072a3:	mov    ds:0xd4298e5a,eax
  4072a8:	test   al,0xd6
  4072aa:	push   edx
  4072ab:	dec    edx
  4072ac:	fiadd  WORD PTR [edi-0x5b]
  4072af:	pop    edi
  4072b0:	push   es
  4072b1:	bound  esp,QWORD PTR [edi+ebp*2]
  4072b4:	cmc    
  4072b5:	shl    ecx,0x6b
  4072b8:	dec    esi
  4072b9:	shl    BYTE PTR [edi],1
  4072bb:	(bad)  
  4072bc:	mov    ebx,0xfff73297
  4072c1:	sbb    eax,0xa82030d3
  4072c6:	or     esi,ecx
  4072c8:	in     eax,dx
  4072c9:	xchg   esi,eax
  4072ca:	mov    ds:0xbb1d95b5,al
  4072cf:	xor    eax,0x58ab09f9
  4072d4:	push   eax
  4072d5:	cwde   
  4072d6:	pop    ds
  4072d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072d8:	add    BYTE PTR [edx-0x7e871be0],dh
  4072de:	sub    eax,0x3290de29
  4072e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072e4:	xchg   ebp,eax
  4072e5:	adc    bh,dl
  4072e7:	jmp    0xd3c8036
  4072ec:	push   ecx
  4072ed:	paddsb mm3,QWORD PTR [ebp-0x26]
  4072f1:	(bad)  
  4072f2:	push   bx
  4072f4:	jg     0x407334
  4072f6:	xlat   BYTE PTR ds:[ebx]
  4072f7:	ficom  WORD PTR [ebx]
  4072f9:	mov    eax,0xad2cb7c1
  4072fe:	idiv   DWORD PTR [edi+0x3bc498ff]
  407304:	lock and al,0xd5
  407307:	mov    ah,ch
  407309:	sub    bh,BYTE PTR [ebx+0x49fa461]
  40730f:	out    0xe9,eax
  407311:	jg     0x4072bf
  407313:	aam    0x13
  407315:	nop
  407316:	xchg   esp,eax
  407317:	xor    DWORD PTR [ebx],esi
  407319:	jp     0x407309
  40731b:	test   al,0xf5
  40731d:	or     al,0x72
  40731f:	sub    ecx,DWORD PTR [eax-0x75]
  407322:	pusha  
  407323:	add    dh,BYTE PTR [edx]
  407325:	aaa    
  407326:	ror    edx,cl
  407328:	or     eax,0xadcbb006
  40732d:	shl    BYTE PTR [edx-0x1dc8e104],0xec
  407334:	pop    ss
  407335:	test   al,0xfc
  407337:	and    eax,0x94ab3c7a
  40733c:	in     eax,0x20
  40733e:	xchg   edi,eax
  40733f:	out    dx,al
  407340:	mov    ebx,DWORD PTR [esi]
  407342:	popa   
  407343:	gs pop ebx
  407345:	or     edi,DWORD PTR [ebp+ebp*2-0x491c2c03]
  40734c:	mov    ds:0x184756ca,eax
  407351:	cmp    ch,BYTE PTR [ecx+0x1a]
  407354:	and    DWORD PTR [eax-0x12],esp
  407357:	dec    ecx
  407358:	popf   
  407359:	inc    esi
  40735a:	in     eax,dx
  40735b:	jno    0x40736a
  40735d:	in     al,0x7
  40735f:	jne    0x4073a4
  407361:	xchg   edx,eax
  407362:	mov    DWORD PTR [edx+edx*4+0x32],eax
  407366:	mov    bl,0xb1
  407368:	scas   al,BYTE PTR es:[edi]
  407369:	call   0x6522:0x306b1502
  407370:	mov    ch,ch
  407372:	xchg   ah,bl
  407374:	or     eax,0xa6708b
  407379:	dec    eax
  40737a:	adc    dl,bh
  40737c:	repnz xor BYTE PTR [esi-0x7022f476],al
  407383:	xchg   ecx,eax
  407384:	mov    ebp,0x92981150
  407389:	call   0xf219:0x48e74052
  407390:	pop    esp
  407391:	xchg   esi,eax
  407392:	ror    al,0x6e
  407395:	sahf   
  407396:	out    dx,al
  407397:	mov    WORD PTR [edx],?
  407399:	in     al,dx
  40739a:	popa   
  40739b:	sti    
  40739c:	cmp    ch,cl
  40739e:	sar    DWORD PTR [edi-0x27cd3ed8],cl
  4073a4:	jbe    0x4073a7
  4073a6:	aam    0x3b
  4073a8:	mov    esp,0xc6c56259
  4073ad:	je     0x4073c3
  4073af:	adc    al,0x62
  4073b1:	inc    esp
  4073b2:	jae    0x407404
  4073b4:	cmp    BYTE PTR [ebx-0x58b1e53b],cl
  4073ba:	mov    BYTE PTR [esi-0x575e0c98],ah
  4073c0:	test   dl,0x7a
  4073c3:	ds addr16 mov ecx,0x8ccd9304
  4073ca:	lods   al,BYTE PTR ds:[esi]
  4073cb:	outs   dx,DWORD PTR ds:[esi]
  4073cc:	push   ss
  4073cd:	add    BYTE PTR [esi],0x4b
  4073d0:	inc    ebx
  4073d1:	jecxz  0x40744a
  4073d3:	in     eax,dx
  4073d4:	outs   dx,DWORD PTR ds:[esi]
  4073d5:	inc    esi
  4073d6:	test   DWORD PTR [edi+0x17],edi
  4073d9:	leave  
  4073da:	enter  0x4858,0x22
  4073de:	xor    bh,BYTE PTR ds:0x304e1c5
  4073e4:	stos   DWORD PTR es:[edi],eax
  4073e5:	stos   BYTE PTR es:[edi],al
  4073e6:	dec    esi
  4073e7:	fdivr  QWORD PTR [ebp+0x799f86c1]
  4073ed:	jae    0x407433
  4073ef:	daa    
  4073f0:	cmp    bl,BYTE PTR [eax]
  4073f2:	imul   DWORD PTR [ecx+0x48]
  4073f5:	nop
  4073f6:	(bad)  
  4073f7:	retf   
  4073f8:	xor    esp,ecx
  4073fa:	int3   
  4073fb:	xchg   ecx,eax
  4073fc:	je     0x40738b
  4073fe:	and    bl,BYTE PTR [edi-0x32cb20fe]
  407404:	adc    BYTE PTR [eax-0x12e40d31],dh
  40740a:	xchg   BYTE PTR [eax-0xe],dh
  40740d:	sbb    eax,0x571d8e2b
  407412:	cdq    
  407413:	mov    esp,0x3e081625
  407418:	jno    0x407411
  40741a:	mov    DWORD PTR [edi+0x3bd1cd42],esi
  407420:	clc    
  407421:	call   0x1c69c384
  407426:	or     bh,dh
  407428:	cmp    dh,BYTE PTR [esi+0x11]
  40742b:	or     al,0x6a
  40742d:	xor    BYTE PTR [esi+0x7589c4e],dl
  407433:	inc    eax
  407434:	and    BYTE PTR ds:0x266a473a,bh
  40743a:	cmp    DWORD PTR [ebp-0x3fd06cca],eax
  407440:	or     DWORD PTR [edx+0x37],ecx
  407443:	inc    eax
  407444:	push   edx
  407445:	adc    al,0xed
  407447:	jl     0x40745d
  407449:	scas   al,BYTE PTR es:[edi]
  40744a:	pop    edx
  40744b:	push   ss
  40744c:	fwait
  40744d:	jmp    0x4074ca
  40744f:	imul   DWORD PTR [eax+ecx*8]
  407452:	pop    ss
  407453:	cmp    esi,DWORD PTR [eax-0x1c]
  407456:	sti    
  407457:	mov    ebp,0x21d10e90
  40745c:	jle    0x4073ec
  40745e:	das    
  40745f:	jge    0x407400
  407461:	sbb    eax,0xdcde8f62
  407466:	pop    eax
  407467:	inc    eax
  407468:	pop    edi
  407469:	in     eax,0x96
  40746b:	and    bl,BYTE PTR [eax+0x6a]
  40746e:	push   0x220472c5
  407473:	lods   eax,DWORD PTR ds:[esi]
  407474:	jl     0x407431
  407476:	shr    BYTE PTR cs:0x8ab35ea8,0xd0
  40747e:	pop    DWORD PTR [ebp-0x3ce23311]
  407484:	adc    BYTE PTR [eax+edi*8+0x4f],0xcc
  407489:	sub    BYTE PTR [eax-0x5b8d16d2],ah
  40748f:	std    
  407490:	nop
  407491:	sub    DWORD PTR [edx+0x29ce51f6],edi
  407497:	test   DWORD PTR [edi],edx
  407499:	cmp    eax,0xd4ed6e8e
  40749e:	jbe    0x407449
  4074a0:	(bad)  
  4074a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a4:	test   eax,0x33ee6040
  4074a9:	pop    ecx
  4074aa:	xchg   esi,eax
  4074ab:	adc    ah,BYTE PTR [esi-0x30]
  4074ae:	call   0x91e0:0x147100e8
  4074b5:	in     eax,0x1e
  4074b7:	push   esp
  4074b8:	pop    ss
  4074b9:	loope  0x4074d6
  4074bb:	mov    fs,esp
  4074bd:	test   DWORD PTR [esi],eax
  4074bf:	ins    BYTE PTR es:[edi],dx
  4074c0:	enter  0xc658,0xd8
  4074c4:	mov    ebp,0x6e05c14d
  4074c9:	idiv   BYTE PTR [edx-0x5543d4e8]
  4074cf:	mov    al,ds:0x6bf36043
  4074d4:	clc    
  4074d5:	xchg   ecx,eax
  4074d6:	mov    ch,0xe7
  4074d8:	mov    dh,0x6e
  4074da:	je     0x407509
  4074dc:	inc    eax
  4074dd:	scas   al,BYTE PTR es:[edi]
  4074de:	adc    eax,0xa74e2e7c
  4074e3:	pop    esi
  4074e4:	mov    dl,0x34
  4074e6:	pop    esp
  4074e7:	(bad)  
  4074e8:	cwde   
  4074e9:	push   ds
  4074ea:	push   ss
  4074eb:	call   0x9de8ce49
  4074f0:	into   
  4074f1:	sub    al,0x7e
  4074f3:	jb     0x407532
  4074f5:	or     BYTE PTR [edi-0x515367a],0xb3
  4074fc:	scas   eax,DWORD PTR es:[edi]
  4074fd:	fistp  WORD PTR [esi+0x7e1db883]
  407503:	jno    0x407488
  407505:	fcmovbe st,st(2)
  407507:	dec    eax
  407508:	aas    
  407509:	js     0x407498
  40750b:	xchg   ebx,eax
  40750c:	dec    edi
  40750d:	daa    
  40750e:	rcl    al,0x59
  407511:	popa   
  407512:	inc    ebp
  407513:	or     BYTE PTR [esi+0x416a4369],ah
  407519:	aad    0x54
  40751b:	adc    bh,ah
  40751d:	jae    0x407591
  40751f:	push   0x3bcb548b
  407524:	les    ebx,FWORD PTR [edi]
  407526:	inc    ebx
  407527:	pop    edi
  407528:	xchg   ebx,eax
  407529:	test   eax,0x5754dd77
  40752e:	fs jb  0x4074e5
  407531:	jae    0x4074ed
  407533:	out    0x5c,eax
  407535:	sbb    al,ch
  407537:	bound  esp,QWORD PTR [ebx-0x73e9f9f8]
  40753d:	shl    BYTE PTR [esi-0x22],cl
  407540:	stos   BYTE PTR es:[edi],al
  407541:	ficom  WORD PTR [esp+ecx*2+0x6630184e]
  407548:	inc    edi
  407549:	xchg   esi,eax
  40754a:	mov    ah,0xed
  40754c:	rol    DWORD PTR [eax+0x77924f24],0x56
  407553:	mov    ds:0x267029a9,al
  407558:	sub    ch,cl
  40755a:	or     BYTE PTR [edx-0x427aa461],0x31
  407561:	mov    al,0x15
  407563:	(bad)  
  407564:	ja     0x407577
  407566:	popa   
  407567:	rcl    BYTE PTR [ecx],cl
  407569:	xchg   esp,eax
  40756a:	in     eax,dx
  40756b:	mov    ds,WORD PTR [edx]
  40756d:	outs   dx,DWORD PTR ds:[esi]
  40756e:	ins    BYTE PTR es:[edi],dx
  40756f:	lds    esi,FWORD PTR [esi-0x20a6874e]
  407575:	rcr    BYTE PTR [edx+0x5b],0xc1
  407579:	das    
  40757a:	test   DWORD PTR [eax-0x51],esp
  40757d:	add    al,0x2f
  40757f:	push   0x1
  407581:	sahf   
  407582:	addr16 repnz test edx,0x26726934
  40758a:	out    0xa6,eax
  40758c:	lea    ebx,[esi+0x44]
  40758f:	call   0xac0f:0xb44d8b08
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x7
  407613:	pop    es
  407614:	mov    DWORD PTR [edi+edx*1+0x7d],edi
  407618:	sbb    BYTE PTR [eax],bl
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    BYTE PTR [edi],al
  40761f:	test   al,0xd1
  407621:	fimul  WORD PTR [ebx+0x1c9fa7da]
  407627:	stos   DWORD PTR es:[edi],eax
  407628:	or     bl,BYTE PTR [edx+0x5e]
  40762b:	sbb    BYTE PTR [ecx+0x74],bh
  40762e:	dec    eax
  40762f:	mov    eax,ds:0xd87cc289
  407634:	sbb    ch,cl
  407636:	pop    edx
  407637:	je     0x40763e
  407639:	mov    bh,0x65
  40763b:	mov    esi,0xf4802606
  407640:	pop    esp
  407641:	and    BYTE PTR [esi-0x1003e008],bl
  407647:	in     al,0x26
  407649:	or     eax,0x39c23f8f
  40764e:	jne    0x40764b
  407650:	xchg   ebp,eax
  407651:	push   edi
  407652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407653:	inc    edx
  407654:	ret    0x89b7
  407657:	pushf  
  407658:	ja     0x407682
  40765a:	addr16 jne 0x4075f5
  40765d:	test   DWORD PTR [edx],ecx
  40765f:	jb     0x407629
  407661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407662:	pop    edx
  407663:	retf   0xcf9f
  407666:	dec    esp
  407667:	or     DWORD PTR ds:0x2fa2167b,edx
  40766d:	dec    edx
  40766e:	mov    eax,0x8eaf622e
  407673:	jmp    0xa9139956
  407678:	ficomp DWORD PTR [eax]
  40767a:	inc    ebx
  40767b:	cmp    BYTE PTR [eax],dh
  40767d:	inc    ebp
  40767e:	fcmovnb st,st(1)
  407680:	fcomp  DWORD PTR [edi]
  407682:	and    DWORD PTR [ebp+0x24bde932],edi
  407688:	or     BYTE PTR [ecx-0x33],dh
  40768b:	cmp    eax,0xa82802f1
  407690:	add    cl,BYTE PTR [ebx+0x27]
  407693:	mov    ds:0xaeea6d3c,al
  407698:	xor    eax,0x70ebb454
  40769d:	adc    BYTE PTR [edi],0x2a
  4076a0:	sbb    al,0x95
  4076a2:	bt     DWORD PTR [esi-0x53],edx
  4076a6:	xor    DWORD PTR [ebp-0x56],ecx
  4076a9:	test   DWORD PTR [ecx+0x536d0d65],esi
  4076af:	and    ebx,DWORD PTR [ecx+0x62]
  4076b2:	pop    edi
  4076b3:	arpl   bp,si
  4076b5:	push   ecx
  4076b6:	and    BYTE PTR [ecx],0x46
  4076b9:	jge    0x4076cd
  4076bb:	sbb    bh,BYTE PTR [ebp-0x5b]
  4076be:	outs   dx,BYTE PTR ds:[esi]
  4076bf:	mov    ebx,0x1d3f6637
  4076c4:	add    eax,0xee416381
  4076c9:	rcl    BYTE PTR [ebx+edi*4],1
  4076cc:	cdq    
  4076cd:	icebp  
  4076ce:	sub    BYTE PTR [ebx+0x476aafc6],0xd9
  4076d5:	push   cs
  4076d6:	(bad)  
  4076d7:	jmp    0xf106:0x20b242cb
  4076de:	xchg   ebx,eax
  4076df:	pop    es
  4076e0:	adc    eax,0xa394a45
  4076e5:	mov    esi,0xc7de4bff
  4076ea:	fwait
  4076eb:	mov    cl,0x7d
  4076ed:	xor    eax,DWORD PTR ds:0xf243f7ae
  4076f3:	dec    ecx
  4076f4:	fidivr WORD PTR [ebx+esi*4-0x5bea3474]
  4076fb:	call   0x4278d091
  407700:	lods   eax,DWORD PTR ds:[esi]
  407701:	dec    esp
  407702:	jae    0x40773a
  407704:	push   esp
  407705:	outs   dx,DWORD PTR ds:[esi]
  407706:	inc    esi
  407707:	push   eax
  407708:	inc    esi
  407709:	xchg   ebx,eax
  40770a:	and    eax,esp
  40770c:	imul   DWORD PTR ds:[bx+0x7a]
  407711:	cwde   
  407712:	daa    
  407713:	inc    ecx
  407714:	mov    WORD PTR [ecx],gs
  407716:	aaa    
  407717:	inc    esi
  407718:	mov    al,ds:0xe1bd59f3
  40771d:	aad    0xd7
  40771f:	ins    DWORD PTR es:[edi],dx
  407720:	(bad)  [ebp-0x3f]
  407723:	mov    bl,0x25
  407725:	ret    0x654e
  407728:	push   ss
  407729:	aam    0xe8
  40772b:	retf   
  40772c:	mov    edi,0x8bfa2c0b
  407731:	adc    dl,BYTE PTR [esi-0x9472e1b]
  407737:	sub    eax,0x39fc65e4
  40773c:	cmp    eax,0x175485e5
  407741:	je     0x407780
  407743:	fld    TBYTE PTR [ebp+0xc]
  407746:	loop   0x4076f7
  407748:	inc    esi
  407749:	or     dl,0x43
  40774c:	inc    edi
  40774d:	popa   
  40774e:	(bad)  
  407750:	adc    al,BYTE PTR [edx+ecx*4+0x669355f4]
  407757:	rcl    BYTE PTR [eax-0x786ec441],cl
  40775d:	or     BYTE PTR [edi+0x57],ah
  407760:	push   ss
  407761:	icebp  
  407762:	loope  0x407734
  407764:	pand   mm1,mm4
  407767:	dec    esi
  407768:	out    0xcc,eax
  40776a:	int3   
  40776b:	mov    DWORD PTR [eax-0x74],ebx
  40776e:	or     ebp,ebx
  407770:	mov    ah,0xb4
  407772:	ret    
  407773:	icebp  
  407774:	sub    BYTE PTR [ecx-0x655e2ee8],0x23
  40777b:	stos   BYTE PTR es:[edi],al
  40777c:	cmp    BYTE PTR [ebx-0x45],al
  40777f:	mov    bl,0xb6
  407781:	stos   BYTE PTR es:[edi],al
  407782:	pop    edx
  407783:	icebp  
  407784:	jp     0x407714
  407786:	cmp    eax,0x1fab767f
  40778b:	adc    ah,bh
  40778d:	hlt    
  40778e:	test   BYTE PTR [esi-0xf],cl
  407791:	inc    edx
  407792:	xor    eax,0xf1140677
  407797:	inc    ecx
  407798:	lock ret 
  40779a:	inc    eax
  40779b:	xchg   dh,ah
  40779d:	cld    
  40779e:	ret    
  40779f:	pop    esi
  4077a0:	pop    esi
  4077a1:	cmp    eax,0x39585892
  4077a6:	test   DWORD PTR [edx+0x5f4eb824],edi
  4077ac:	sahf   
  4077ad:	push   edx
  4077ae:	mov    eax,0xad05d6ee
  4077b3:	inc    esp
  4077b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077b5:	ret    0x9973
  4077b8:	stos   DWORD PTR es:[edi],eax
  4077b9:	or     ebx,ebp
  4077bb:	lods   al,BYTE PTR ds:[esi]
  4077bc:	pushf  
  4077bd:	and    DWORD PTR [ecx],0xffffffa5
  4077c0:	repnz mov cl,0x2f
  4077c3:	xchg   ebx,ebx
  4077c5:	cs push ecx
  4077c7:	xor    BYTE PTR [esp+eax*2+0x1d6ebc15],dl
  4077ce:	cs sub eax,0x62010728
  4077d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d5:	jp     0x4077c1
  4077d7:	inc    ebx
  4077d8:	pop    edi
  4077d9:	ret    0x9c88
  4077dc:	addr16 in eax,0xc3
  4077df:	lods   al,BYTE PTR ds:[esi]
  4077e0:	push   ebx
  4077e1:	stos   BYTE PTR es:[edi],al
  4077e2:	aaa    
  4077e3:	leave  
  4077e4:	jne    0x407787
  4077e6:	jge    0x407793
  4077e8:	ret    
  4077e9:	mov    DWORD PTR [ecx],esi
  4077eb:	jnp    0x407804
  4077ed:	in     al,dx
  4077ee:	hlt    
  4077ef:	pop    ds
  4077f0:	mov    dl,0x84
  4077f2:	xor    BYTE PTR [ebx-0x60],al
  4077f5:	sti    
  4077f6:	xchg   edx,eax
  4077f7:	mov    ebp,0xcc00bcdc
  4077fc:	outs   dx,DWORD PTR ds:[esi]
  4077fd:	jbe    0x40787e
  4077ff:	inc    esp
  407800:	xor    DWORD PTR [ebx],ebx
  407802:	push   eax
  407803:	hlt    
  407804:	pop    edx
  407805:	scas   al,BYTE PTR es:[edi]
  407806:	or     BYTE PTR [ecx-0xa],al
  407809:	in     eax,dx
  40780a:	dec    eax
  40780b:	test   cl,cl
  40780d:	jl     0x407845
  40780f:	fucomip st,st(2)
  407811:	jp     0x407836
  407813:	mov    cs,WORD PTR [ebp+0x65366004]
  407819:	outs   dx,BYTE PTR ds:[esi]
  40781a:	xchg   ecx,eax
  40781b:	xchg   esp,eax
  40781c:	xchg   edi,ebp
  40781e:	(bad)  [ecx-0x63]
  407821:	sub    ebx,DWORD PTR [esi+0xa]
  407824:	retf   
  407825:	mov    bh,0x71
  407827:	aaa    
  407828:	xchg   esi,eax
  407829:	rep lods eax,DWORD PTR ds:[esi]
  40782b:	sub    DWORD PTR [edx],edx
  40782d:	push   cs
  40782e:	lods   al,BYTE PTR ds:[esi]
  40782f:	loop   0x4077fa
  407831:	out    0x5,eax
  407833:	jbe    0x407879
  407835:	mov    WORD PTR [esi-0x35],cx
  407839:	fld    TBYTE PTR [ebx]
  40783b:	repnz sar dh,1
  40783e:	adc    eax,0x9cd1bbb6
  407843:	int    0xd8
  407845:	sub    DWORD PTR [edx],ebp
  407847:	fldcw  WORD PTR [ecx+0x19]
  40784a:	pop    es
  40784b:	out    0x9b,al
  40784d:	dec    BYTE PTR ss:[ecx+ebp*1-0x1e]
  407852:	imul   ecx,DWORD PTR [edi+0x3925b581],0x35933281
  40785c:	push   esp
  40785d:	jg     0x407838
  40785f:	pop    edx
  407860:	in     eax,dx
  407861:	scas   eax,DWORD PTR es:[edi]
  407862:	arpl   WORD PTR [esi-0x544f36ac],si
  407868:	(bad)  
  407869:	cmp    bl,ah
  40786b:	mov    eax,ds:0xf29db34f
  407870:	mov    DWORD PTR [esp+edi*1-0x19],esp
  407874:	out    dx,al
  407875:	cli    
  407876:	jge    0x4078f7
  407878:	sub    BYTE PTR [esp+edx*8-0x7c],dl
  40787c:	sub    esp,DWORD PTR [ecx-0x2318409e]
  407882:	imul   ebp,DWORD PTR [ecx],0x5e
  407885:	pop    ebx
  407886:	pop    ds
  407887:	(bad)  
  407888:	jmp    0x5546:0x9b5ce2ca
  40788f:	jp     0x4078ab
  407891:	int3   
  407892:	shr    BYTE PTR [ecx],0xf4
  407895:	(bad)  
  407896:	leave  
  407897:	mov    esp,DWORD PTR [edi]
  407899:	cwde   
  40789a:	xchg   edx,eax
  40789b:	push   ebx
  40789c:	cmp    DWORD PTR [ecx+0x4b97a396],esi
  4078a2:	jl     0x4078a6
  4078a4:	call   0x8a5d:0x6324883
  4078ab:	pop    ss
  4078ac:	lods   al,BYTE PTR ds:[esi]
  4078ad:	shl    DWORD PTR [esi+esi*8+0x5c],cl
  4078b1:	fcom   QWORD PTR [edx+0x339b4230]
  4078b7:	add    al,0xf2
  4078b9:	jmp    0xce9d4d29
  4078be:	jp     0x407857
  4078c0:	cmp    bl,al
  4078c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c3:	mov    ds:0x2667d98d,al
  4078c8:	cmp    BYTE PTR [esi-0x6e044985],ch
  4078ce:	jmp    0x5f70:0x41a9cbd9
  4078d5:	mov    ebx,0xfae5db2f
  4078da:	in     eax,0xf2
  4078dc:	lea    ecx,[ebp-0x4d8e8b48]
  4078e2:	xchg   ebp,eax
  4078e3:	fcmovnbe st,st(3)
  4078e5:	cwde   
  4078e6:	sbb    DWORD PTR ds:0x8d6a4a56,ecx
  4078ec:	je     0x4078d6
  4078ee:	enter  0x7150,0x64
  4078f2:	push   es
  4078f3:	(bad)  
  4078f4:	stc    
  4078f5:	nop
  4078f6:	sub    ah,dl
  4078f8:	mov    edx,DWORD PTR [esi]
  4078fa:	sti    
  4078fb:	aas    
  4078fc:	jbe    0x407916
  4078fe:	mov    ch,BYTE PTR [esi]
  407900:	js     0x407882
  407902:	loope  0x40797a
  407904:	xchg   ebx,eax
  407905:	sbb    al,BYTE PTR [eax-0xe]
  407908:	mov    ecx,0x6155fa77
  40790d:	mov    edi,cs
  40790f:	in     eax,dx
  407910:	mov    fs,esp
  407912:	les    esi,FWORD PTR [ebx+0x1f333d53]
  407918:	enter  0x55e5,0xc1
  40791c:	add    ah,BYTE PTR [edi+0x6e1d0df9]
  407922:	push   esi
  407923:	inc    esi
  407924:	sti    
  407925:	xchg   edx,eax
  407926:	(bad)  
  407927:	loop   0x4078b5
  407929:	pop    esi
  40792a:	aas    
  40792b:	and    bh,BYTE PTR [eax+0x63dbb7cc]
  407931:	test   al,0x63
  407933:	mov    esi,0xfed7bd6
  407938:	aad    0xf0
  40793a:	mov    al,0x1a
  40793c:	sbb    eax,0x8972611b
  407941:	cld    
  407942:	fbld   TBYTE PTR [edx-0x46]
  407945:	mov    bl,0xdd
  407947:	pop    ss
  407948:	pop    esi
  407949:	(bad)  
  40794a:	pop    edi
  40794b:	dec    ebp
  40794c:	jns    0x4079a4
  40794e:	in     al,0xe4
  407950:	add    ebp,ebx
  407952:	sbb    DWORD PTR [eax+0x76534310],esi
  407958:	hlt    
  407959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40795a:	jnp    0x407915
  40795c:	xor    BYTE PTR ds:[edi-0x7b862fad],0x71
  407964:	call   0x4f070c3d
  407969:	xlat   BYTE PTR ds:[ebx]
  40796a:	daa    
  40796b:	push   ebp
  40796c:	push   cx
  40796e:	out    dx,al
  40796f:	push   ebx
  407970:	xchg   esp,edi
  407972:	and    al,BYTE PTR [esp+ecx*4]
  407975:	ss (bad) 
  407977:	push   ecx
  407978:	sub    eax,0x18247b64
  40797d:	int3   
  40797e:	xchg   ebx,eax
  40797f:	pushf  
  407980:	pusha  
  407981:	add    edi,DWORD PTR [ecx-0x47a8784a]
  407987:	inc    ebp
  407988:	popa   
  407989:	or     eax,0x20f8838f
  40798e:	sbb    DWORD PTR [ecx+ecx*8+0x4e],0xfffffffd
  407993:	adc    ecx,edi
  407995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407996:	mov    bh,0xec
  407998:	or     DWORD PTR [eax-0x5d],esi
  40799b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40799c:	popa   
  40799d:	int    0x7c
  40799f:	test   eax,0x4e89e5d1
  4079a4:	push   esp
  4079a5:	mov    ebp,DWORD PTR [esi-0x66dfd230]
  4079ab:	mov    ebx,0x814b8175
  4079b0:	sub    BYTE PTR [esp+edx*8-0x40b6a565],al
  4079b7:	inc    edi
  4079b8:	outs   dx,BYTE PTR ds:[esi]
  4079b9:	cmp    cl,BYTE PTR [eax+0x668d8dbb]
  4079bf:	loop   0x407959
  4079c1:	push   ebx
  4079c2:	xchg   edi,eax
  4079c3:	shl    DWORD PTR [ebx-0x68038362],1
  4079c9:	out    0xd8,al
  4079cb:	push   edx
  4079cc:	into   
  4079cd:	adc    ah,BYTE PTR [edx-0x45]
  4079d0:	jecxz  0x4079ba
  4079d2:	neg    DWORD PTR [esi+0x4594f0b7]
  4079d8:	pop    ecx
  4079d9:	not    DWORD PTR [ebx-0x50c4505a]
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x4079d4
  4079f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f5:	inc    edi
  4079f6:	push   0xffffff9d
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x5e181812],bl
  407a00:	sub    esp,edx
  407a02:	es cmp al,0x1c
  407a05:	not    BYTE PTR [ebx-0x48851d6e]
  407a0b:	sub    bh,BYTE PTR [edx+edi*1+0x78dc811f]
  407a12:	pop    ss
  407a13:	lahf   
  407a14:	adc    edi,DWORD PTR [eax]
  407a16:	and    bl,BYTE PTR [ecx+0x6a]
  407a19:	xchg   edi,eax
  407a1a:	pop    edi
  407a1b:	mov    edi,es
  407a1d:	aad    0xe8
  407a1f:	dec    esi
  407a20:	and    BYTE PTR [edx-0x13],ah
  407a23:	push   edx
  407a24:	js     0x4079b1
  407a26:	inc    esp
  407a27:	mov    ebx,0x3b0798cd
  407a2c:	push   eax
  407a2d:	add    DWORD PTR [ecx-0x34],esp
  407a30:	pop    edi
  407a31:	xchg   edi,eax
  407a32:	mov    eax,ds:0xc5bc6c48
  407a37:	out    dx,eax
  407a38:	cdq    
  407a39:	int3   
  407a3a:	push   ecx
  407a3b:	or     eax,0x1f4fb243
  407a40:	cmp    ebp,DWORD PTR [ebx+0x2634aead]
  407a46:	ins    DWORD PTR es:[edi],dx
  407a47:	jno    0x4079da
  407a49:	or     al,0xba
  407a4b:	arpl   WORD PTR [eax-0x7a],bp
  407a4e:	shr    DWORD PTR [esi],cl
  407a50:	sahf   
  407a51:	dec    esi
  407a52:	mov    eax,ds:0x6760780
  407a57:	into   
  407a58:	xor    ah,BYTE PTR [edx+0x5a17566a]
  407a5e:	mov    bh,0x97
  407a60:	pop    DWORD PTR [edx+0x3815c7aa]
  407a66:	sbb    al,0x56
  407a68:	mov    dh,0xa1
  407a6a:	mov    eax,0x878c01ac
  407a6f:	add    BYTE PTR [esi],ch
  407a71:	or     eax,0xcf8910ec
  407a76:	xchg   edx,eax
  407a77:	inc    edx
  407a78:	aaa    
  407a79:	add    al,0xd9
  407a7b:	or     ecx,DWORD PTR ds:0x46777881
  407a81:	xchg   ebx,eax
  407a82:	sub    eax,0x6bd426d4
  407a87:	fsubr  QWORD PTR fs:[ebx]
  407a8a:	cmp    dh,BYTE PTR [ebp+ecx*1+0x5b]
  407a8e:	dec    edi
  407a8f:	xchg   ebp,eax
  407a90:	ror    al,0x7e
  407a93:	mov    cl,0xf6
  407a95:	push   edi
  407a96:	call   DWORD PTR [ebx-0x4]
  407a99:	imul   ebx,esp,0x6523287f
  407a9f:	mov    dh,0x35
  407aa1:	popf   
  407aa2:	add    al,0x78
  407aa4:	stos   DWORD PTR es:[edi],eax
  407aa5:	sub    eax,0xc6e5f1a9
  407aaa:	pushf  
  407aab:	cmp    al,0x96
  407aad:	sbb    bh,BYTE PTR [edx+0x95187ea]
  407ab3:	dec    edi
  407ab4:	iret   
  407ab5:	push   edi
  407ab6:	pop    ds
  407ab7:	imul   esi,DWORD PTR [edx],0xffffffbe
  407aba:	dec    eax
  407abb:	mov    ebp,ebp
  407abd:	ret    
  407abe:	(bad)  
  407abf:	jmp    0xcc4a5d90
  407ac4:	push   edx
  407ac5:	loopne 0x407ad3
  407ac7:	rcr    DWORD PTR [edx],cl
  407ac9:	push   edi
  407aca:	jecxz  0x407b1f
  407acc:	daa    
  407acd:	adc    DWORD PTR [eax+0x7688727f],ebp
  407ad3:	popf   
  407ad4:	or     al,cl
  407ad6:	popa   
  407ad7:	dec    ebx
  407ad8:	rol    ebp,cl
  407ada:	shl    BYTE PTR [edx-0x67],1
  407add:	repz imul eax,DWORD PTR gs:[ebx+0x6cdb84b6],0xffffffd8
  407ae6:	add    ch,BYTE PTR ds:0x1db0c9b6
  407aec:	pop    edi
  407aed:	or     ecx,ebp
  407aef:	or     bh,BYTE PTR [ecx+ebx*8-0x7c8e8d70]
  407af6:	mov    ds,WORD PTR [ebp-0x36]
  407af9:	stos   BYTE PTR es:[edi],al
  407afa:	adc    BYTE PTR [ecx-0x68],dh
  407afd:	jno    0x407b6a
  407aff:	and    eax,0xcbd2de0c
  407b04:	lock jmp FWORD PTR [ebp-0x3074fcb8]
  407b0b:	dec    esp
  407b0c:	in     al,0xd8
  407b0e:	aaa    
  407b0f:	jb     0x407b55
  407b11:	push   edx
  407b12:	out    dx,al
  407b13:	dec    esi
  407b14:	cmp    eax,0xe329b79e
  407b19:	imul   DWORD PTR [edx-0x6d1780a1]
  407b1f:	cld    
  407b20:	cmp    bl,BYTE PTR [ebp-0x3ac3d055]
  407b26:	push   0xffffffbd
  407b28:	sub    BYTE PTR [edx],0x55
  407b2b:	mov    ch,BYTE PTR [ebx+0x7c]
  407b2e:	mov    edx,0x97c641c8
  407b33:	dec    edi
  407b34:	aad    0xb3
  407b36:	(bad)  [esi+0x57f2c943]
  407b3c:	mov    ecx,0xe2e89827
  407b41:	cmp    bl,0xfc
  407b44:	jecxz  0x407adc
  407b46:	and    esp,esi
  407b48:	leave  
  407b49:	xor    BYTE PTR [esi-0x62e5981c],bl
  407b4f:	loopne 0x407b28
  407b51:	xchg   edi,eax
  407b52:	arpl   dx,si
  407b54:	mul    al
  407b56:	add    eax,0x2d465dfa
  407b5b:	jo     0x407b94
  407b5d:	dec    ecx
  407b5e:	aaa    
  407b5f:	push   esp
  407b60:	ins    DWORD PTR es:[edi],dx
  407b61:	and    al,0xa5
  407b63:	fbstp  TBYTE PTR [eax+0x1120523d]
  407b69:	inc    eax
  407b6a:	sbb    ebp,ecx
  407b6c:	lods   al,BYTE PTR ds:[esi]
  407b6d:	xchg   esp,eax
  407b6e:	sbb    ebx,edx
  407b70:	retf   
  407b71:	fxch   st(0)
  407b73:	test   eax,0x9bc62405
  407b78:	outs   dx,BYTE PTR ds:[esi]
  407b79:	and    DWORD PTR [edx],ecx
  407b7b:	gs cld 
  407b7d:	jle    0x407bcf
  407b7f:	in     al,dx
  407b80:	int3   
  407b81:	mov    esp,0xa2b5465b
  407b86:	repnz shl ebp,cl
  407b89:	sub    ebp,eax
  407b8b:	mov    ebx,0x7f8a03b4
  407b90:	ins    BYTE PTR es:[edi],dx
  407b91:	xor    DWORD PTR [edi],esi
  407b93:	jp     0x407bea
  407b95:	xor    esp,DWORD PTR [edx+0x6e1a8a29]
  407b9b:	add    edi,eax
  407b9d:	fwait
  407b9e:	fs xchg ebp,eax
  407ba0:	pop    edi
  407ba1:	jmp    0xb925:0xe2f77594
  407ba8:	cmc    
  407ba9:	ins    DWORD PTR es:[edi],dx
  407baa:	fcmovbe st,st(0)
  407bac:	mov    BYTE PTR [ebp-0x76c90e83],ah
  407bb2:	mov    ebp,DWORD PTR [ecx+0x324ca24]
  407bb8:	daa    
  407bb9:	inc    ebp
  407bba:	jp     0x407bb3
  407bbc:	ror    DWORD PTR [ebp-0x33c7a938],0xcc
  407bc3:	or     eax,0xa75cac1c
  407bc8:	in     eax,0x3e
  407bca:	(bad)  
  407bcc:	jne    0x407b69
  407bce:	jnp    0x407b5b
  407bd0:	push   es
  407bd1:	pushf  
  407bd2:	xor    dl,dh
  407bd4:	inc    esp
  407bd5:	aaa    
  407bd6:	dec    ebp
  407bd7:	sub    bl,BYTE PTR [edi+0x69]
  407bda:	rol    edi,0x71
  407bdd:	jle    0x407bb6
  407bdf:	fsub   QWORD PTR [ebx-0x6fe6f5bc]
  407be5:	cmp    ecx,DWORD PTR [edx+0x46]
  407be8:	xor    DWORD PTR [ecx-0x131d5249],ebp
  407bee:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407bf0:	nop
  407bf1:	ss unpcklps xmm7,xmm0
  407bf5:	push   ds
  407bf6:	mov    ecx,0x70a6832
  407bfb:	add    esi,DWORD PTR [esi]
  407bfd:	pop    eax
  407bfe:	js     0x407ba5
  407c00:	push   ecx
  407c01:	popa   
  407c02:	adc    esi,DWORD PTR [edx-0x694387c1]
  407c08:	retf   0xffca
  407c0b:	int    0xcc
  407c0d:	outs   dx,DWORD PTR ds:[esi]
  407c0e:	dec    ebp
  407c0f:	mov    bl,0x20
  407c11:	pop    ebx
  407c12:	jecxz  0x407b9b
  407c14:	in     al,0x51
  407c16:	fnstcw WORD PTR [edi]
  407c18:	mov    DWORD PTR [edx+edi*1-0xb],ebx
  407c1c:	jns    0x407c0b
  407c1e:	call   0x982d:0xb6836872
  407c25:	dec    edi
  407c26:	aam    0x40
  407c28:	jle    0x407c32
  407c2a:	xor    eax,0x1504cac2
  407c2f:	push   ebp
  407c30:	push   0xffffff8d
  407c32:	test   BYTE PTR [edx],dl
  407c34:	stc    
  407c35:	push   ecx
  407c36:	sbb    DWORD PTR [ebx],esp
  407c38:	retf   0x65f4
  407c3b:	mov    cl,0xc8
  407c3d:	adc    edx,0xe
  407c40:	outs   dx,DWORD PTR es:[esi]
  407c42:	(bad)  
  407c44:	dec    edx
  407c45:	mov    BYTE PTR [esi-0x42ad7e3c],al
  407c4b:	popa   
  407c4c:	pop    es
  407c4d:	mov    ebp,db1
  407c50:	add    eax,0xbe6705e3
  407c55:	stos   DWORD PTR es:[edi],eax
  407c56:	jbe    0x407c5a
  407c58:	mov    DWORD PTR [eax],esp
  407c5a:	and    BYTE PTR fs:[edi],bl
  407c5d:	je     0x407c3c
  407c5f:	and    eax,0x1d64424d
  407c64:	mov    dh,bl
  407c66:	add    ch,BYTE PTR [ebx-0xbe6cbe]
  407c6c:	sbb    al,0xde
  407c6e:	mov    ebp,DWORD PTR [ecx]
  407c70:	aas    
  407c71:	test   DWORD PTR [ecx+ebx*1-0x3d96a8eb],edx
  407c78:	sub    ah,BYTE PTR [esi+0x3c85386e]
  407c7e:	out    dx,al
  407c7f:	call   0xd726:0xf8eeb122
  407c86:	mov    edx,0x9d5c67bb
  407c8b:	popa   
  407c8c:	mov    bh,0x76
  407c8e:	bound  edx,QWORD PTR gs:[ebp-0x78]
  407c92:	stc    
  407c93:	imul   edx,eax,0x49c5077e
  407c99:	sbb    eax,0x5248e9c7
  407c9e:	mov    eax,0xb33a4455
  407ca3:	das    
  407ca4:	neg    DWORD PTR [esi]
  407ca6:	dec    edi
  407ca7:	cmp    BYTE PTR [edx+edx*1+0x70],cl
  407cab:	lods   eax,DWORD PTR ds:[esi]
  407cac:	std    
  407cad:	fidivr DWORD PTR [edi+0x44ffe4e2]
  407cb3:	inc    ecx
  407cb4:	pop    eax
  407cb5:	jmp    0xf1fa2673
  407cba:	and    BYTE PTR [ecx-0xfb40618],ah
  407cc0:	(bad)  
  407cc1:	mov    al,0x14
  407cc3:	xchg   ebx,eax
  407cc4:	(bad)  
  407cc5:	out    0x64,al
  407cc7:	popf   
  407cc8:	cmp    ecx,DWORD PTR [ecx-0x45]
  407ccb:	jmp    DWORD PTR [eax-0x16]
  407cce:	fsub   DWORD PTR [ebx+0x52c5a3e6]
  407cd4:	cmp    BYTE PTR [edi],ah
  407cd6:	mov    esi,0xa6721775
  407cdb:	xor    DWORD PTR [edi+0x4474416f],ebp
  407ce1:	add    bh,BYTE PTR [edi]
  407ce3:	fistp  DWORD PTR [ebp+0x36]
  407ce6:	sub    DWORD PTR [ecx],edi
  407ce8:	(bad)  
  407ce9:	xor    ebp,DWORD PTR [esi-0x52492f]
  407cef:	(bad)  
  407cf0:	shl    ch,cl
  407cf2:	mov    DWORD PTR [esi+0x46],0xdc13e07d
  407cf9:	pushf  
  407cfa:	mov    ah,0x64
  407cfc:	rol    BYTE PTR [edx-0xa],1
  407cff:	and    eax,0xae6a9a2e
  407d04:	cmp    bh,BYTE PTR [edi]
  407d06:	jp     0x407cf9
  407d08:	out    0xe3,eax
  407d0a:	or     eax,0xa6c8ad3e
  407d0f:	std    
  407d10:	ins    DWORD PTR es:[edi],dx
  407d11:	xor    al,0x39
  407d13:	addr16 pop ds
  407d15:	sbb    dl,bh
  407d17:	icebp  
  407d18:	dec    ebp
  407d19:	jecxz  0x407d38
  407d1b:	cmp    BYTE PTR [ecx-0x3f],cl
  407d1e:	cmc    
  407d1f:	stc    
  407d20:	pusha  
  407d21:	mov    edi,0x796e2f52
  407d26:	cs (bad) 
  407d28:	jmp    0x1e261914
  407d2d:	jge    0x407d99
  407d2f:	inc    edx
  407d30:	jae    0x407d4d
  407d32:	jno    0x407d5a
  407d34:	jae    0x407d46
  407d36:	leave  
  407d37:	adc    DWORD PTR [esi+0x3c3ab592],eax
  407d3d:	mov    ebx,0x52df839a
  407d42:	jbe    0x407d4b
  407d44:	xor    DWORD PTR [eax-0x1d],edi
  407d47:	inc    esi
  407d48:	jg     0x407d1c
  407d4a:	adc    eax,0xba9a729d
  407d4f:	sahf   
  407d50:	hlt    
  407d51:	and    DWORD PTR [ecx-0x324fa54f],ecx
  407d57:	sar    ah,cl
  407d59:	cdq    
  407d5a:	push   cs
  407d5b:	imul   edx,edi,0xffffffcc
  407d5e:	fisubr DWORD PTR [ebp+0x7d203633]
  407d64:	adc    al,0x2d
  407d66:	mov    bl,0x9f
  407d68:	add    eax,0x714a4de5
  407d6d:	add    eax,ebx
  407d6f:	or     BYTE PTR [esi-0x6488138e],bh
  407d75:	mov    eax,0xfc698172
  407d7a:	sub    ebp,DWORD PTR ds:0xdf9beb4b
  407d80:	sbb    BYTE PTR [esi+esi*4-0x44],cl
  407d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d85:	stos   BYTE PTR es:[edi],al
  407d86:	lods   al,BYTE PTR ss:[esi]
  407d88:	call   0x10de:0xfd36ee8d
  407d8f:	add    bl,BYTE PTR [edx+0x10]
  407d92:	mov    BYTE PTR [ebp-0x7],0x7b
  407d96:	(bad)  [ecx-0x4b042f65]
  407d9c:	dec    ecx
  407d9d:	or     cl,BYTE PTR [ebx-0x4b]
  407da0:	je     0x407dbd
  407da2:	mov    ah,0x48
  407da4:	std    
  407da5:	mov    eax,0xbecdd4e4
  407daa:	push   0xefdad502
  407daf:	jb     0x407e05
  407db1:	das    
  407db2:	stos   BYTE PTR es:[edi],al
  407db3:	lds    edx,FWORD PTR [ecx]
  407db5:	mov    ebp,DWORD PTR [ebx+edx*8-0x3d1aaa6]
  407dbc:	sbb    DWORD PTR [esp+ebx*8-0x743e74ad],ebx
  407dc3:	dec    ebp
  407dc4:	int3   
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xab67c7e
  407e7d:	jle    0x407ea1
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    bh,ch
  407e87:	addr16 jmp 0xa25eef86
  407e8d:	int3   
  407e8e:	ins    DWORD PTR es:[edi],dx
  407e8f:	sbb    BYTE PTR [ebp+0x11],ah
  407e92:	test   eax,0xa25bc9a5
  407e97:	out    0x84,eax
  407e99:	jecxz  0x407e3a
  407e9b:	adc    al,BYTE PTR [ebx+0x6174a665]
  407ea1:	cs loope 0x407ebf
  407ea4:	(bad)  
  407ea5:	daa    
  407ea6:	lods   al,BYTE PTR ds:[esi]
  407ea7:	xchg   esi,eax
  407ea8:	xchg   edx,eax
  407ea9:	jl     0x407f2a
  407eab:	push   ds
  407eac:	rol    DWORD PTR [ebx],1
  407eae:	sbb    al,0xe6
  407eb0:	dec    esp
  407eb1:	push   edx
  407eb2:	aaa    
  407eb3:	stos   BYTE PTR es:[edi],al
  407eb4:	popa   
  407eb5:	jg     0x407f26
  407eb7:	xor    bl,ch
  407eb9:	inc    edx
  407eba:	or     BYTE PTR [edx],dl
  407ebc:	loopne 0x407ef5
  407ebe:	xor    ebp,DWORD PTR [edx+esi*1]
  407ec1:	(bad)  
  407ec3:	sub    BYTE PTR [esi+0x2e339376],al
  407ec9:	test   DWORD PTR [edx+ebp*2-0x33],ebp
  407ecd:	fild   WORD PTR ds:0x28797eb0
  407ed3:	fucomi st,st(3)
  407ed5:	or     ah,BYTE PTR [esi]
  407ed7:	mov    ebp,0x450bb3a4
  407edc:	sub    BYTE PTR [edi+0x38f225e5],dh
  407ee2:	lahf   
  407ee3:	mov    ebx,DWORD PTR [esi-0x66627c09]
  407ee9:	mov    bh,0xea
  407eeb:	cld    
  407eec:	cmp    eax,0x95353883
  407ef1:	xchg   edx,eax
  407ef2:	or     eax,0xc538fd7b
  407ef7:	js     0x407eab
  407ef9:	es stos DWORD PTR es:[edi],eax
  407efb:	mov    ebx,0x668467aa
  407f00:	xchg   ebx,eax
  407f01:	mov    cl,0x2c
  407f03:	push   es
  407f04:	dec    eax
  407f05:	sub    BYTE PTR [ecx+0x78],dh
  407f08:	inc    ebx
  407f09:	sub    eax,0xd344add7
  407f0e:	arpl   ax,bx
  407f10:	test   DWORD PTR [ebx-0x4799ac9c],edx
  407f16:	shl    ebx,0x84
  407f19:	cdq    
  407f1a:	test   DWORD PTR [eax-0x567cc36],ecx
  407f20:	xor    eax,0xfb18f6ff
  407f25:	push   0x27cea3cc
  407f2a:	dec    ebx
  407f2b:	xchg   edi,eax
  407f2c:	push   edx
  407f2d:	inc    ecx
  407f2e:	mov    cl,bl
  407f30:	cdq    
  407f31:	sbb    DWORD PTR [eax+0x1d],edi
  407f34:	cmp    DWORD PTR [esi],0x39f40e11
  407f3a:	inc    edx
  407f3b:	jno    0x407f55
  407f3d:	js     0x407f7b
  407f3f:	cmp    eax,0xfd89146d
  407f44:	dec    edi
  407f45:	and    dl,BYTE PTR [ecx-0x50]
  407f48:	or     al,0xc6
  407f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f4b:	ja     0x407f40
  407f4d:	leave  
  407f4e:	clc    
  407f4f:	pop    es
  407f50:	pusha  
  407f51:	retf   
  407f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f53:	call   0x77e:0x8dcfd2
  407f5a:	xor    DWORD PTR [edi-0x64],eax
  407f5d:	stos   DWORD PTR es:[edi],eax
  407f5e:	nop
  407f5f:	jg     0x407f3e
  407f61:	ret    0x9c60
  407f64:	add    edx,DWORD PTR [ebp-0x474138f1]
  407f6a:	push   esp
  407f6b:	adc    edi,DWORD PTR [ebx+0x66]
  407f6e:	jl     0x407f9b
  407f70:	mov    DWORD PTR [edi+0x7836fb51],eax
  407f76:	mov    ah,0xde
  407f78:	pop    eax
  407f79:	or     esi,DWORD PTR [esi-0x5166d1ca]
  407f7f:	mov    bh,BYTE PTR [esi-0x37d89a40]
  407f85:	cmp    cl,BYTE PTR [ebx+0x1b81b4da]
  407f8b:	or     eax,0xa7cfb7b2
  407f90:	push   0xffffffad
  407f92:	daa    
  407f93:	pop    edi
  407f94:	arpl   bp,sp
  407f96:	rcr    DWORD PTR ds:0x20d4791d,0xb4
  407f9d:	fstp   DWORD PTR [ebx+0x5d461cca]
  407fa3:	add    ch,BYTE PTR [ebx+0x3f84ad7d]
  407fa9:	mov    eax,ds:0xcdfc5750
  407fae:	leave  
  407faf:	adc    bl,BYTE PTR [edi-0x73]
  407fb2:	out    dx,eax
  407fb3:	aad    0x9e
  407fb5:	cs clc 
  407fb7:	push   0x1d
  407fb9:	push   ds
  407fba:	push   es
  407fbb:	(bad)
  407fbe:	std    
  407fbf:	fsubr  st(7),st
  407fc1:	cmp    DWORD PTR [ebx],0x1817c500
  407fc7:	jl     0x407fdc
  407fc9:	mov    esp,0x124c02bc
  407fce:	cwde   
  407fcf:	mov    esi,0x25b53d5a
  407fd4:	and    DWORD PTR [ebx],ecx
  407fd6:	mov    edi,0x8f7da3cd
  407fdb:	pop    esp
  407fdc:	popa   
  407fdd:	mov    edx,0xfeca4fd
  407fe2:	add    al,0xc9
  407fe4:	xchg   ebx,eax
  407fe5:	or     eax,0x7f5f3609
  407fea:	popf   
  407feb:	cs stos BYTE PTR es:[edi],al
  407fed:	aam    0x71
  407fef:	fwait
  407ff0:	outs   dx,BYTE PTR ds:[esi]
  407ff1:	cmp    eax,0xe9125f03
  407ff6:	(bad)  [edx]
  407ff8:	in     al,0xb4
  407ffa:	mov    eax,0x7c6d4c06
  407fff:	sub    DWORD PTR [edx-0x7b7cb76c],esp
  408005:	dec    ebp
  408006:	dec    eax
  408007:	dec    eax
  408008:	mov    BYTE PTR [ebx+eax*4-0x72],dh
  40800c:	mov    ebx,0xea845fd6
  408011:	dec    esp
  408012:	cdq    
  408013:	add    eax,0x3844d39c
  408018:	add    al,0x54
  40801a:	xlat   BYTE PTR ds:[ebx]
  40801b:	cmp    ch,BYTE PTR [edx]
  40801d:	outs   dx,BYTE PTR ds:[esi]
  40801e:	jo     0x40809b
  408020:	into   
  408021:	jo     0x408033
  408023:	data16 shr BYTE PTR [edi-0x64],cl
  408027:	call   DWORD PTR ss:[edx+0x72d1f9d]
  40802e:	daa    
  40802f:	sub    eax,0xa2701a2d
  408034:	rol    cl,1
  408036:	ffree  st(2)
  408038:	pusha  
  408039:	call   0xa9b63ac6
  40803e:	shl    DWORD PTR [edx],0x88
  408041:	clc    
  408042:	xchg   ah,ah
  408044:	dec    ebx
  408045:	(bad)  
  408046:	fst    QWORD PTR [esi+0x33b8f9ad]
  40804c:	adc    eax,0xcc37d032
  408051:	and    ebx,DWORD PTR [ebp-0x2]
  408054:	jne    0x408090
  408056:	jp     0x4080b7
  408058:	inc    esp
  408059:	add    ah,BYTE PTR [esi+0x5e]
  40805c:	jp     0x408087
  40805e:	shl    esp,cl
  408060:	bound  ecx,QWORD PTR [ebx-0x13]
  408063:	jg     0x40808e
  408065:	iret   
  408066:	dec    eax
  408067:	out    dx,al
  408068:	dec    eax
  408069:	pop    eax
  40806a:	inc    ebx
  40806b:	sub    ecx,edi
  40806d:	adc    DWORD PTR [eax],ebp
  40806f:	jp     0x407ffe
  408071:	mov    BYTE PTR [esi],bl
  408073:	cli    
  408074:	ffreep st(0)
  408076:	ja     0x4080ef
  408078:	xchg   ebp,eax
  408079:	push   0x9f7d41
  40807e:	bound  esp,QWORD PTR [esi+ecx*8-0x3b]
  408082:	out    dx,eax
  408083:	xchg   ebx,eax
  408084:	daa    
  408085:	cmp    DWORD PTR [ecx+ebp*4-0x68812d3d],edi
  40808c:	mov    ds:0xf7a0b189,al
  408091:	or     al,0xa1
  408093:	ss mov ah,0x4f
  408096:	hlt    
  408097:	retf   
  408098:	inc    ecx
  408099:	dec    ecx
  40809a:	mov    eax,ds:0x3a8a6678
  40809f:	pop    ds
  4080a0:	xor    edi,0x64552814
  4080a6:	inc    esi
  4080a7:	adc    edx,DWORD PTR [eax]
  4080a9:	pop    ecx
  4080aa:	mov    esp,0xc0371d08
  4080af:	cdq    
  4080b0:	and    al,0x96
  4080b2:	xchg   edi,eax
  4080b3:	popa   
  4080b4:	adc    DWORD PTR [edi],ebp
  4080b6:	sbb    al,0xc3
  4080b8:	ficomp WORD PTR [esi-0x2a2ede51]
  4080be:	xor    BYTE PTR [ecx-0x77],cl
  4080c1:	xchg   esi,eax
  4080c2:	or     eax,DWORD PTR [ebx]
  4080c4:	sar    DWORD PTR [eax+0x46],1
  4080c7:	cld    
  4080c8:	push   edx
  4080c9:	sbb    esp,esi
  4080cb:	lods   eax,DWORD PTR ds:[esi]
  4080cc:	int3   
  4080cd:	shr    DWORD PTR [esi+0x3],1
  4080d0:	xor    bh,BYTE PTR [ebx+0x7fb3b8ef]
  4080d6:	pop    ecx
  4080d7:	jno    0x4080db
  4080d9:	pop    eax
  4080da:	retf   0x9794
  4080dd:	mov    DWORD PTR [esi+0x41],esp
  4080e0:	js     0x408070
  4080e2:	sub    ah,BYTE PTR [ecx+eiz*4+0x45762e2a]
  4080e9:	push   edx
  4080ea:	pusha  
  4080eb:	hlt    
  4080ec:	cmc    
  4080ed:	(bad)  
  4080ee:	call   0x4e31bbba
  4080f3:	push   ebx
  4080f4:	jnp    0x408126
  4080f6:	div    BYTE PTR [edx-0x5e]
  4080f9:	(bad)  
  4080fa:	mov    ecx,0xff24ce08
  4080ff:	inc    esi
  408100:	aaa    
  408101:	ror    esp,cl
  408103:	out    dx,eax
  408104:	mov    bl,0x4a
  408106:	adc    DWORD PTR [ebx-0x38],esi
  408109:	adc    al,0x38
  40810b:	(bad)  [ecx-0x4e]
  40810e:	jno    0x4080e7
  408110:	aam    0xb1
  408112:	outs   dx,BYTE PTR ds:[esi]
  408113:	inc    ebx
  408114:	in     al,0x8d
  408116:	mov    bl,0x68
  408118:	outs   dx,DWORD PTR ds:[esi]
  408119:	lea    eax,[esi-0x6c58f06c]
  40811f:	gs mov gs,eax
  408122:	add    al,0x4c
  408124:	das    
  408125:	clc    
  408126:	dec    DWORD PTR [edi]
  408128:	jge    0x4080f2
  40812a:	aam    0x12
  40812c:	push   0xf0827532
  408131:	fisub  DWORD PTR [esi+0x51c77376]
  408137:	push   cs
  408138:	push   ds
  408139:	and    esp,esi
  40813b:	mov    ds:0x2d3c4b90,eax
  408140:	or     eax,0xa7f3e8c9
  408145:	in     eax,dx
  408146:	sbb    al,0x78
  408148:	ret    0x63fa
  40814b:	imul   ebp,DWORD PTR [edi],0xffffffeb
  40814e:	fwait
  40814f:	add    BYTE PTR [ebx-0x6fc45ca],dl
  408155:	sub    BYTE PTR [edx+0x7],dl
  408158:	rcl    dl,1
  40815a:	jle    0x4080e2
  40815c:	sahf   
  40815d:	popa   
  40815e:	and    al,0xc6
  408160:	sbb    BYTE PTR [ebx+0x36b5a640],al
  408166:	mov    ds:0xba12d110,al
  40816b:	mov    DWORD PTR ds:0x165d52e8,ebx
  408171:	adc    al,0x38
  408173:	(bad)  
  408175:	adc    dh,BYTE PTR [eax+0x4a0a8f0]
  40817b:	adc    bh,BYTE PTR [edx]
  40817d:	adc    ah,cl
  40817f:	inc    edi
  408180:	pushf  
  408181:	dec    ebx
  408182:	sbb    eax,DWORD PTR [edx]
  408184:	pop    edi
  408185:	mov    al,0x12
  408187:	pusha  
  408188:	inc    ecx
  408189:	call   FWORD PTR [edx+0x2d59cc57]
  40818f:	jns    0x40811c
  408191:	xchg   ecx,eax
  408192:	jbe    0x408207
  408194:	ja     0x40816c
  408196:	xchg   ebx,eax
  408197:	das    
  408198:	gs inc ebx
  40819a:	add    ah,BYTE PTR [ebp-0x7df03aa8]
  4081a0:	jbe    0x408202
  4081a2:	retf   
  4081a3:	iret   
  4081a4:	aas    
  4081a5:	pmuludq mm3,QWORD PTR [ebp-0x44]
  4081a9:	add    bl,BYTE PTR [eax+0x69c0dbe5]
  4081af:	not    DWORD PTR [ebx]
  4081b1:	outs   dx,DWORD PTR ds:[esi]
  4081b2:	test   BYTE PTR [ebx+edi*2+0x68],bh
  4081b6:	jbe    0x408160
  4081b8:	mov    cl,0xa
  4081ba:	sbb    eax,0x8a5f67c8
  4081bf:	inc    DWORD PTR [eax+0x7fe2556b]
  4081c5:	xor    eax,DWORD PTR [ebx+edx*2-0x790d911a]
  4081cc:	add    BYTE PTR [esi+0x65],al
  4081cf:	repz jp 0x408169
  4081d2:	xchg   ebx,eax
  4081d3:	xchg   BYTE PTR [edx],bl
  4081d5:	gs mov esi,0x4bd369e0
  4081db:	xor    eax,0x886c01ee
  4081e0:	fbld   TBYTE PTR [edx+0x20]
  4081e3:	adc    al,0xec
  4081e5:	dec    ecx
  4081e6:	in     eax,0xfe
  4081e8:	xor    cl,ch
  4081ea:	outs   dx,BYTE PTR ds:[esi]
  4081eb:	push   eax
  4081ec:	aam    0xd6
  4081ee:	add    eax,0x4e0944a5
  4081f3:	dec    ebp
  4081f4:	je     0x4081f1
  4081f6:	les    edx,FWORD PTR [ebx]
  4081f8:	mov    ah,0x29
  4081fa:	mov    dh,0x26
  4081fc:	ins    DWORD PTR es:[edi],dx
  4081fd:	adc    eax,0xefcc07f
  408202:	loopne 0x408246
  408204:	mov    bl,0x2e
  408206:	dec    ecx
  408207:	push   esp
  408208:	dec    esi
  408209:	dec    ebx
  40820a:	jmp    0x408277
  40820c:	inc    ecx
  40820d:	jbe    0x4081c9
  40820f:	adc    al,0x93
  408211:	fadd   DWORD PTR [ebp+0xa99fc4f]
  408217:	mov    ds:0xa4ba07d0,eax
  40821c:	cmp    al,0x3d
  40821e:	jo     0x40828c
  408220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408221:	jnp    0x408279
  408223:	call   0x7701:0xc197cc7c
  40822a:	cld    
  40822b:	stos   DWORD PTR es:[edi],eax
  40822c:	ficomp DWORD PTR [edi]
  40822e:	pop    esi
  40822f:	push   ebx
  408230:	pop    edi
  408231:	ja     0x40828c
  408233:	jle    0x4081d0
  408235:	pushf  
  408236:	in     eax,dx
  408237:	cdq    
  408238:	and    BYTE PTR [esi+0x39882fb],bl
  40823e:	dec    esp
  40823f:	pop    esi
  408240:	loop   0x4081d2
  408242:	aaa    
  408243:	lods   eax,DWORD PTR ds:[esi]
  408244:	ja     0x408281
  408246:	nop
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x52f1709d
  40828a:	ja     0x408308
  40828c:	test   al,0x67
  40828e:	sbb    BYTE PTR [eax],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [esi],bl
  408295:	clc    
  408296:	xchg   edi,eax
  408297:	faddp  st(5),st
  408299:	sbb    al,0xdb
  40829b:	xor    al,0xf9
  40829d:	and    DWORD PTR [ecx+ecx*4],ecx
  4082a0:	add    BYTE PTR [eax+0x3c363810],0xff
  4082a7:	jmp    0xc721:0x58e0ffb1
  4082ae:	imul   edx,DWORD PTR [eax-0x5b796b8f],0xf9ed226
  4082b8:	int    0x20
  4082ba:	test   al,0xf5
  4082bc:	or     ah,BYTE PTR [ebx+edi*8]
  4082bf:	int    0x78
  4082c1:	rcl    edi,0xdf
  4082c4:	div    eax
  4082c6:	add    eax,0x7f1c12be
  4082cb:	scas   eax,DWORD PTR es:[edi]
  4082cc:	push   ss
  4082cd:	lahf   
  4082ce:	xchg   edx,eax
  4082cf:	xchg   esp,eax
  4082d0:	mov    DWORD PTR [ebp-0x69],ecx
  4082d3:	jno    0x4082cf
  4082d5:	mov    al,0x4e
  4082d7:	mov    edi,0x4b3c0982
  4082dc:	fucomp st(3)
  4082de:	mov    DWORD PTR [esi-0xa861085],edi
  4082e4:	sbb    eax,0xfb454bca
  4082e9:	gs or  ecx,0x31
  4082ed:	add    edx,DWORD PTR [ebx+0x59]
  4082f0:	cmove  eax,edx
  4082f3:	lds    ebp,FWORD PTR [eax+ecx*1-0x72]
  4082f7:	xor    dh,BYTE PTR [eax-0x136acbff]
  4082fd:	mov    ds:0x351214f0,al
  408302:	sub    dl,BYTE PTR [ecx]
  408304:	lock ins BYTE PTR es:[edi],dx
  408306:	xor    al,0x64
  408308:	daa    
  408309:	mov    edi,edi
  40830b:	add    eax,0x8f834a28
  408310:	mov    dh,0x68
  408312:	mov    bh,0x14
  408314:	sar    dl,1
  408316:	js     0x4082b6
  408318:	mov    cl,BYTE PTR [edi+0x47]
  40831b:	(bad)  
  40831c:	call   FWORD PTR [edx-0x79]
  40831f:	mov    ebx,0xee08296e
  408324:	xchg   ebp,eax
  408325:	test   BYTE PTR [edx+0x67],dh
  408328:	pop    ebp
  408329:	stos   DWORD PTR es:[edi],eax
  40832a:	add    dh,al
  40832c:	ficomp DWORD PTR [esi-0x3]
  40832f:	ins    BYTE PTR es:[edi],dx
  408330:	dec    eax
  408331:	lds    esp,FWORD PTR [edx-0x60]
  408334:	push   edi
  408335:	push   ebp
  408336:	xor    BYTE PTR ds:[ebx-0x2c],dh
  40833a:	sub    DWORD PTR [ecx],0x57
  40833d:	pop    ds
  40833e:	lahf   
  40833f:	icebp  
  408340:	repnz mov cs,WORD PTR [ebp+0x554e3661]
  408347:	xchg   DWORD PTR [ecx],ebx
  408349:	sub    DWORD PTR [edi+eiz*8+0x4a],0xfc588d06
  408351:	imul   esp,DWORD PTR [esi+0x53],0x51
  408355:	adc    al,0x2b
  408357:	call   0x4d674e94
  40835c:	adc    eax,0x3252da22
  408361:	dec    esp
  408362:	or     DWORD PTR [eax],edx
  408364:	pop    esp
  408365:	sub    al,0x8f
  408367:	xchg   ecx,eax
  408368:	mov    edi,0x7c8a480
  40836d:	xor    eax,0xd731e13a
  408372:	xchg   dh,al
  408374:	jo     0x408356
  408376:	sub    BYTE PTR [esi],dh
  408378:	call   0xd3b7:0x91602d58
  40837f:	adc    ecx,DWORD PTR [esi-0x80]
  408382:	push   cs
  408383:	loope  0x4083be
  408385:	es je  0x40832d
  408388:	inc    esi
  408389:	adc    BYTE PTR [ebp+0x5d],cl
  40838c:	ins    DWORD PTR es:[edi],dx
  40838d:	push   edx
  40838e:	xchg   ebp,eax
  40838f:	or     edx,DWORD PTR [edi+0x3]
  408392:	mov    dl,0x11
  408394:	(bad)  
  408395:	jne    0x408372
  408397:	and    al,0xba
  408399:	xchg   ebx,eax
  40839a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40839b:	sub    al,0x9f
  40839d:	(bad)  
  40839e:	leave  
  40839f:	mov    al,ds:0xab3f4ab7
  4083a4:	repz aam 0xde
  4083a7:	sub    al,0x99
  4083a9:	int    0x46
  4083ab:	push   edi
  4083ac:	jo     0x40837a
  4083ae:	push   ss
  4083af:	adc    cl,BYTE PTR [esi+0x2c62c95b]
  4083b5:	(bad)  
  4083b6:	(bad)  
  4083b7:	lock xor bh,BYTE PTR ds:0xbdd94e30
  4083be:	push   0x9c6e36c7
  4083c3:	inc    esi
  4083c4:	sbb    al,0x20
  4083c6:	mov    eax,ds:0x62aabe63
  4083cb:	push   esp
  4083cc:	jecxz  0x4083b3
  4083ce:	sub    eax,0x519940ed
  4083d3:	cmp    dl,BYTE PTR [edx]
  4083d5:	mov    ecx,0x4cdabb4e
  4083da:	sub    BYTE PTR [ebp-0x1b],cl
  4083dd:	lock jb 0x4083e2
  4083e0:	int    0x43
  4083e2:	mov    ds:0xd45d1ca9,al
  4083e7:	cmp    eax,0xc81face0
  4083ec:	dec    ecx
  4083ed:	aas    
  4083ee:	adc    BYTE PTR [ebp-0x19],cl
  4083f1:	aam    0x27
  4083f3:	test   al,0x4b
  4083f5:	mov    bh,0x60
  4083f7:	sbb    BYTE PTR [eax+eiz*1+0x39cf7094],ch
  4083fe:	stc    
  4083ff:	or     bl,BYTE PTR [ebx]
  408401:	push   ebp
  408402:	daa    
  408403:	in     eax,dx
  408404:	or     cl,dh
  408406:	mov    edi,0xcce5ca43
  40840b:	lock pop esi
  40840d:	les    edi,FWORD PTR [ebx+0x53]
  408410:	pop    ebx
  408411:	repz pusha 
  408413:	and    edx,eax
  408415:	call   FWORD PTR [ecx+eax*2-0x30]
  408419:	pop    ecx
  40841a:	xor    DWORD PTR [edx],edi
  40841c:	fndisi(8087 only) 
  40841e:	ss imul ebp,edi,0x1f
  408422:	dec    edx
  408423:	ins    DWORD PTR es:[edi],dx
  408424:	sub    DWORD PTR [esi],ebp
  408426:	jge    0x408433
  408428:	pop    eax
  408429:	xchg   edx,eax
  40842a:	mov    eax,ds:0x4fe20093
  40842f:	mov    ah,0x99
  408431:	xchg   DWORD PTR [edi+0x1b5bd7d0],edx
  408437:	push   0x6c
  408439:	not    DWORD PTR [ebp+0xd]
  40843c:	aam    0xdd
  40843e:	shr    BYTE PTR [ecx-0x7284e100],cl
  408444:	sub    BYTE PTR [edi],ch
  408446:	and    al,0x87
  408448:	shl    DWORD PTR [ebp-0x23b01e4a],cl
  40844e:	ror    DWORD PTR [eax-0x3dba5d58],1
  408454:	test   al,0xfb
  408456:	sub    eax,0x744cdfa9
  40845b:	dec    esi
  40845c:	push   0x1fffa96c
  408461:	mov    ds:0x217270d,al
  408466:	jge    0x4083fd
  408468:	mov    al,0xb9
  40846a:	clc    
  40846b:	push   ebp
  40846c:	mov    bh,0x8d
  40846e:	int3   
  40846f:	out    dx,eax
  408470:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408472:	sbb    DWORD PTR [eax-0x24],eax
  408475:	pop    eax
  408476:	mov    dh,0xb2
  408478:	daa    
  408479:	in     eax,0xfb
  40847b:	add    edi,esi
  40847d:	jns    0x40842c
  40847f:	cmc    
  408480:	fiadd  DWORD PTR [esi+0x7d]
  408483:	xchg   edx,eax
  408484:	mov    esp,0x353f3ca7
  408489:	in     eax,dx
  40848a:	push   cs
  40848b:	push   ecx
  40848c:	inc    edi
  40848d:	adc    dl,BYTE PTR [edi]
  40848f:	mov    esi,0x739f0f52
  408494:	sub    eax,0xdbae2478
  408499:	jmp    0xc039:0x51d01d2f
  4084a0:	dec    ebp
  4084a1:	jns    0x4084fb
  4084a3:	xor    edi,edx
  4084a5:	fcom   DWORD PTR [eax]
  4084a7:	cdq    
  4084a8:	hlt    
  4084a9:	jge    0x4084b8
  4084ab:	dec    edx
  4084ac:	inc    ebp
  4084ad:	xor    eax,0x9b262733
  4084b2:	cmp    dl,BYTE PTR [edi+0x5f]
  4084b5:	cmc    
  4084b6:	or     BYTE PTR ds:0xe3d8f003,0x3a
  4084bd:	inc    edi
  4084be:	mov    WORD PTR [ecx-0x7e],ss
  4084c1:	xor    al,bh
  4084c3:	data16 rcr al,0x6d
  4084c7:	outs   dx,BYTE PTR ds:[esi]
  4084c8:	retf   0x1e0d
  4084cb:	xor    BYTE PTR [ebx],bl
  4084cd:	pusha  
  4084ce:	call   0x80b7:0xd6939627
  4084d5:	xchg   esp,esi
  4084d7:	pushfw 
  4084d9:	fisttp WORD PTR [ebp-0x1b2642b2]
  4084df:	dec    ebx
  4084e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084e1:	(bad)
  4084e5:	sub    cl,BYTE PTR [edi-0x11c43cb9]
  4084eb:	or     ah,BYTE PTR ds:0x8fc80a9f
  4084f1:	adc    edi,esi
  4084f3:	mov    cl,0xcf
  4084f5:	in     al,0x7f
  4084f7:	jp     0x4084d5
  4084f9:	aaa    
  4084fa:	(bad)  
  4084fb:	out    0xa6,al
  4084fd:	and    al,0x93
  4084ff:	cmp    al,0x74
  408501:	rol    BYTE PTR [ebx+0x13],cl
  408504:	cmp    DWORD PTR [edx+0x78],edx
  408507:	imul   ebp,esi,0x60c5483b
  40850d:	repnz lea edi,[eax-0xa4faa82]
  408514:	ror    BYTE PTR ds:0xdd4ed896,0x17
  40851b:	push   0xffffffb9
  40851d:	add    dl,dh
  40851f:	fnstsw WORD PTR [ecx]
  408521:	jae    0x408598
  408523:	push   cs
  408524:	test   eax,0x159c5204
  408529:	int    0xee
  40852b:	jp     0x408502
  40852d:	sbb    BYTE PTR [edi],bl
  40852f:	in     eax,dx
  408530:	int    0xde
  408532:	mov    ecx,0x2088711e
  408537:	add    ecx,0xc4c3c548
  40853d:	cmp    ah,0x9e
  408540:	adc    al,0xd4
  408542:	mov    ecx,0x3230c7a2
  408547:	adc    DWORD PTR [edi-0x330b72a7],ebx
  40854d:	hlt    
  40854e:	fst    QWORD PTR [edi-0x6]
  408551:	pop    ds
  408552:	repnz mov ebp,esi
  408555:	into   
  408556:	stos   BYTE PTR es:[edi],al
  408557:	mov    bh,0xa2
  408559:	mov    ecx,0xc4243cf9
  40855e:	cmp    esi,DWORD PTR [ebp+eax*4-0x748a42a2]
  408565:	or     eax,0xe23302db
  40856a:	cmp    BYTE PTR ds:0xe7d1314a,ch
  408570:	cli    
  408571:	xchg   ch,dh
  408573:	and    al,0xf4
  408575:	and    eax,0x61ce1bb1
  40857a:	mov    gs,WORD PTR [ebp+0x31]
  40857d:	pop    edi
  40857e:	cwde   
  40857f:	jmp    0x8c005bf7
  408584:	sbb    eax,0x6a3f8bf6
  408589:	sbb    BYTE PTR [ebx-0x1a53461],al
  40858f:	mov    eax,0xcaa95f4d
  408594:	mov    ss,WORD PTR [esi+0x3c]
  408597:	ret    0xc0
  40859a:	dec    ebx
  40859b:	sub    BYTE PTR ds:0x41e589e4,al
  4085a1:	jle    0x408554
  4085a3:	push   ecx
  4085a4:	ror    ah,0x59
  4085a7:	xlat   BYTE PTR ds:[ebx]
  4085a8:	mov    esp,0x2ba60cbb
  4085ad:	imul   edx,DWORD PTR [ebp+0x2cfb9207],0x31
  4085b4:	mov    DWORD PTR [ebp+0x3a53fbc0],eax
  4085ba:	jmp    0x5da92a97
  4085bf:	aas    
  4085c0:	sti    
  4085c1:	cmp    bl,bl
  4085c3:	sub    al,0xab
  4085c5:	jle    0x408627
  4085c7:	icebp  
  4085c8:	mov    WORD PTR [edx+eiz*8-0x45877322],es
  4085cf:	add    BYTE PTR [edx+0x72993dbb],ah
  4085d5:	mov    dl,0xc1
  4085d7:	lea    esi,[edx-0x1e]
  4085da:	xor    al,0x7c
  4085dc:	hlt    
  4085dd:	xor    eax,0xda6aafa2
  4085e2:	or     ch,dl
  4085e4:	mov    cl,0x53
  4085e6:	iret   
  4085e7:	(bad)  
  4085e8:	ds or  ch,bl
  4085eb:	clc    
  4085ec:	pop    es
  4085ed:	ins    DWORD PTR es:[edi],dx
  4085ee:	shl    BYTE PTR [esi],0x4d
  4085f1:	sar    DWORD PTR [eax-0x46],cl
  4085f4:	out    0x50,al
  4085f6:	inc    ebx
  4085f7:	inc    ebp
  4085f8:	push   eax
  4085f9:	xchg   ebx,esi
  4085fb:	pushf  
  4085fc:	out    0xf0,eax
  4085fe:	dec    esp
  4085ff:	fmul   DWORD PTR [ecx-0x42]
  408602:	adc    esp,0xfffffff2
  408605:	pop    ebx
  408606:	sbb    al,0x28
  408608:	sub    eax,0xf06a2a29
  40860d:	ja     0x4085df
  40860f:	adc    al,0x5c
  408611:	pop    eax
  408612:	jns    0x40864a
  408614:	sbb    ah,BYTE PTR [ebx-0x64]
  408617:	mov    edx,0x85733f39
  40861c:	pop    edi
  40861d:	into   
  40861e:	cmp    eax,0x22cb3625
  408623:	sbb    DWORD PTR [ecx+0x3c],0x867ccc56
  40862a:	and    BYTE PTR [ebx+0x3531dff1],0x4d
  408631:	xchg   ebp,eax
  408632:	sub    BYTE PTR [ebp+0x41],dh
  408635:	inc    edi
  408636:	fs push edx
  408638:	mov    eax,ds:0xef0c5041
  40863d:	sbb    eax,0x3e55d0a
  408642:	xor    eax,DWORD PTR [ecx-0x2a]
  408645:	imul   esp,DWORD PTR [ebx],0xffffffff
  408648:	mov    cl,cl
  40864a:	hlt    
  40864b:	out    dx,eax
  40864c:	and    esp,DWORD PTR [edx-0x32]
  40864f:	cwde   
  408650:	out    dx,eax
  408651:	sbb    ax,0xa923
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xbe0014e9
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [eax-0xb075213],al
  4086a2:	mov    ebp,0x16d7356e
  4086a7:	push   0xcf3dcff5
  4086ac:	inc    ebx
  4086ad:	add    DWORD PTR [ecx+eiz*1-0x6b],edi
  4086b1:	xchg   esp,eax
  4086b2:	out    0x6a,al
  4086b4:	add    ebx,DWORD PTR [esi]
  4086b6:	hlt    
  4086b7:	or     BYTE PTR [eax-0x1c133afe],bh
  4086bd:	mov    ds:0x21406177,eax
  4086c2:	ins    BYTE PTR es:[edi],dx
  4086c3:	jae    0x40871a
  4086c5:	jb     0x40873f
  4086c7:	cmp    bl,BYTE PTR [ecx-0x2880ccce]
  4086cd:	stos   DWORD PTR es:[edi],eax
  4086ce:	aaa    
  4086cf:	adc    al,0xe8
  4086d1:	xor    eax,0x7bc08938
  4086d7:	inc    ecx
  4086d8:	xchg   ebx,eax
  4086d9:	inc    esp
  4086da:	in     eax,0xc3
  4086dc:	shl    BYTE PTR [edx-0x5b447369],cl
  4086e2:	push   cs
  4086e3:	iret   
  4086e4:	add    eax,0x276cc371
  4086e9:	jmp    0x4086ef
  4086eb:	sbb    BYTE PTR [ebx],dh
  4086ed:	xchg   esp,eax
  4086ee:	call   0xae3a584d
  4086f3:	add    eax,0xa54e407b
  4086f8:	push   0x298404ab
  4086fd:	stos   DWORD PTR es:[edi],eax
  4086fe:	test   DWORD PTR [edx],eax
  408700:	jmp    0x4086fc
  408702:	cmp    eax,edi
  408704:	inc    ebx
  408705:	adc    dl,BYTE PTR [edi-0x4c]
  408708:	dec    esi
  408709:	outs   dx,BYTE PTR ds:[esi]
  40870a:	xchg   edi,eax
  40870b:	clc    
  40870c:	(bad)  
  40870e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40870f:	mov    bl,0xf0
  408711:	mov    eax,ds:0x4f5049cc
  408716:	sti    
  408717:	and    al,0xa3
  408719:	mov    dl,0x20
  40871b:	push   0x1949ba5a
  408720:	fdivr  DWORD PTR [edi-0x68]
  408723:	test   eax,0x34ead74a
  408728:	gs inc edi
  40872a:	mov    esi,0x9462c0
  40872f:	or     DWORD PTR [ebx],esi
  408731:	mov    DWORD PTR [edi+edi*2],eax
  408734:	mov    cl,0x2f
  408736:	int3   
  408737:	(bad)  
  408738:	mov    esi,0x54095842
  40873d:	mov    bh,0xe7
  40873f:	scas   eax,DWORD PTR es:[edi]
  408740:	inc    ecx
  408741:	sbb    al,0x7
  408743:	or     ch,dh
  408745:	xor    al,0x32
  408747:	aas    
  408748:	enter  0x8c12,0x12
  40874c:	cmp    BYTE PTR [esi-0x4e],dh
  40874f:	mov    dl,0x4f
  408751:	gs pop es
  408753:	call   0xb9b3:0x3dad2863
  40875a:	and    eax,0x9b38be94
  40875f:	cli    
  408760:	ins    BYTE PTR es:[edi],dx
  408761:	sub    BYTE PTR [ebx+0x248fc6fa],ah
  408767:	inc    ebx
  408768:	xor    al,0xec
  40876a:	fmulp  st(1),st
  40876c:	lock ds clc 
  40876f:	push   0x7708fb4a
  408774:	test   al,0x35
  408776:	mov    ebx,0x99ff0346
  40877b:	push   edi
  40877c:	nop
  40877d:	stos   DWORD PTR es:[edi],eax
  40877e:	fadd   DWORD PTR [esi-0x3355be06]
  408784:	dec    edx
  408785:	nop
  408786:	mov    edi,0x7a18cee9
  40878b:	pusha  
  40878c:	rcl    DWORD PTR ds:0x9df3b219,cl
  408792:	rep ins DWORD PTR es:[edi],dx
  408794:	bound  ebp,QWORD PTR ds:0x4db4c8d
  40879a:	pop    es
  40879b:	adc    cl,0x52
  40879e:	push   0x23
  4087a0:	mov    dh,bh
  4087a2:	dec    ebp
  4087a3:	inc    edi
  4087a4:	xlat   BYTE PTR ds:[ebx]
  4087a5:	ret    
  4087a6:	fiadd  DWORD PTR [ebx]
  4087a8:	dec    esi
  4087a9:	push   0xffffffac
  4087ab:	lods   eax,DWORD PTR ds:[esi]
  4087ac:	loopne 0x4087dc
  4087ae:	mov    ds:0x818a38c8,eax
  4087b3:	scas   al,BYTE PTR es:[edi]
  4087b4:	sub    ebp,ebp
  4087b6:	jmp    0xe0bb81f0
  4087bb:	sbb    al,0x12
  4087be:	mov    edi,0xe07dfb29
  4087c3:	mov    esi,0x34a9aefd
  4087c8:	test   al,0x79
  4087ca:	jmp    0x436193ad
  4087cf:	xchg   esi,eax
  4087d0:	jae    0x408819
  4087d2:	rol    BYTE PTR [edx-0x12],cl
  4087d5:	cmp    eax,0xf01a443b
  4087da:	aad    0xc0
  4087dc:	dec    eax
  4087dd:	mov    eax,ds:0x755c5cfb
  4087e2:	push   ebp
  4087e3:	xchg   ebx,eax
  4087e4:	in     eax,0xd2
  4087e6:	fadd   QWORD PTR [edi+0x61]
  4087e9:	sbb    BYTE PTR [ebx-0x63],dl
  4087ec:	int3   
  4087ed:	call   DWORD PTR [edi+0x2b]
  4087f0:	iret   
  4087f1:	iret   
  4087f2:	add    ecx,DWORD PTR [esi]
  4087f4:	sub    eax,0xca8aeb30
  4087f9:	xchg   DWORD PTR ds:0x988a7f39,ebx
  408800:	mov    al,0xb3
  408802:	(bad)  
  408803:	imul   edi
  408805:	inc    eax
  408806:	pop    eax
  408807:	xchg   BYTE PTR [edi-0x2a],cl
  40880a:	jmp    0x408794
  40880c:	inc    esp
  40880d:	sahf   
  40880e:	int    0x60
  408810:	xchg   ebp,eax
  408811:	ret    
  408812:	push   ecx
  408813:	and    eax,edx
  408815:	add    bh,BYTE PTR [eax-0x1709cb2]
  40881b:	or     DWORD PTR [ecx+esi*4],ebx
  40881e:	cdq    
  40881f:	push   eax
  408820:	cmp    eax,0x45204ece
  408825:	repz arpl WORD PTR [ecx+0x763e4b1f],dx
  40882c:	jae    0x4087c7
  40882e:	mov    ah,0x51
  408830:	lods   al,BYTE PTR ds:[esi]
  408831:	mov    ds:0xb174f006,al
  408836:	xor    ah,ch
  408838:	xchg   DWORD PTR [ebx+0x62],esi
  40883b:	jg     0x40882d
  40883d:	lods   eax,DWORD PTR ds:[esi]
  40883e:	dec    eax
  40883f:	fcom   QWORD PTR [edx]
  408841:	push   edi
  408842:	fst    DWORD PTR [esi+0x16]
  408845:	sbb    ah,al
  408847:	bound  esp,QWORD PTR [ebx+0x7e]
  40884a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40884b:	(bad)  
  40884c:	jmp    0x4087d7
  40884e:	dec    ebx
  40884f:	pop    ecx
  408850:	jae    0x4088aa
  408852:	or     al,0x4a
  408854:	lock xchg edx,eax
  408856:	in     al,dx
  408857:	jns    0x40883f
  408859:	lods   eax,DWORD PTR ds:[esi]
  40885a:	pop    es
  40885b:	jne    0x40884d
  40885d:	mov    cl,0x3d
  40885f:	sub    DWORD PTR [ebx],ebp
  408861:	stc    
  408862:	xor    al,BYTE PTR [ebx+0x63]
  408865:	push   esi
  408866:	cmp    eax,DWORD PTR [ebx]
  408868:	adc    BYTE PTR [eax-0x774424ec],dl
  40886e:	test   al,0x18
  408870:	scas   eax,DWORD PTR es:[edi]
  408871:	push   ss
  408872:	add    BYTE PTR [eax+0x1c311394],al
  408878:	push   edx
  408879:	add    dh,dh
  40887b:	dec    ecx
  40887c:	std    
  40887d:	pop    ecx
  40887e:	das    
  40887f:	in     eax,dx
  408880:	cmp    cl,BYTE PTR [edi-0x11]
  408883:	xor    esi,DWORD PTR [eax+ebp*8-0xb5961e0]
  40888a:	and    BYTE PTR [ecx+edx*1+0x1cb98df1],dh
  408891:	(bad)  [edi]
  408893:	lock ror BYTE PTR [ecx+0x604db65e],cl
  40889a:	repnz shr BYTE PTR [edi-0x7ccdb88b],1
  4088a1:	in     eax,dx
  4088a2:	rol    ah,cl
  4088a4:	(bad)  
  4088a5:	fsub   QWORD PTR [edi-0x67]
  4088a8:	mov    bh,0xa5
  4088aa:	mov    ebp,0x195f2d70
  4088af:	sbb    eax,0x6ce78cff
  4088b4:	mov    eax,0xeaeb1cd3
  4088b9:	push   edx
  4088ba:	icebp  
  4088bb:	push   ecx
  4088bc:	push   ebp
  4088bd:	test   BYTE PTR [ecx+0x16],bh
  4088c0:	les    ebp,FWORD PTR [ebx+esi*8]
  4088c3:	xchg   edi,eax
  4088c4:	ins    DWORD PTR es:[edi],dx
  4088c5:	dec    eax
  4088c6:	mov    eax,DWORD PTR [edx]
  4088c8:	cmp    BYTE PTR [eax+0x3f025a5a],bh
  4088ce:	test   BYTE PTR [edx-0x7e],0xa
  4088d2:	outs   dx,BYTE PTR ds:[esi]
  4088d3:	mov    dl,0x66
  4088d5:	xchg   edx,eax
  4088d6:	mov    ds:0x463b31b,eax
  4088db:	or     ah,0xf0
  4088de:	and    al,0x9a
  4088e0:	and    al,0xa3
  4088e2:	nop
  4088e3:	mov    ebp,0x5edb3dd8
  4088e8:	mov    edi,0x6a2d678c
  4088ed:	in     al,0xf3
  4088ef:	ins    DWORD PTR es:[edi],dx
  4088f0:	int3   
  4088f1:	ss push ecx
  4088f3:	inc    edi
  4088f4:	mov    dh,0x66
  4088f6:	shl    BYTE PTR [ebp-0x7bab16cb],cl
  4088fc:	jnp    0x408934
  4088fe:	xchg   esp,eax
  4088ff:	mov    bh,0x11
  408901:	pop    edi
  408902:	or     dh,ch
  408904:	es inc eax
  408906:	int3   
  408907:	mov    eax,ds:0xa1ecb31a
  40890c:	sub    esp,0xffffffe2
  40890f:	into   
  408910:	adc    dh,BYTE PTR [ebx+0x22b3ac2f]
  408916:	loopne 0x408910
  408918:	out    dx,eax
  408919:	jns    0x40897e
  40891b:	je     0x4088c7
  40891d:	pop    ss
  40891e:	cli    
  40891f:	fwait
  408920:	cmp    edx,DWORD PTR [ecx-0x48]
  408923:	mov    edi,0xe2c04f86
  408928:	mov    ch,0xf9
  40892a:	inc    dh
  40892c:	pusha  
  40892d:	jg     0x408914
  40892f:	adc    eax,0x9777da25
  408934:	neg    ah
  408936:	popf   
  408937:	dec    ebp
  408938:	rcr    BYTE PTR [edx],0xb9
  40893b:	cmp    bh,dl
  40893d:	nop
  40893e:	push   ebp
  40893f:	lods   eax,DWORD PTR ds:[esi]
  408940:	call   0x1cc5:0x9fe7c4f2
  408947:	mov    ds:0x23aa6ea0,eax
  40894c:	adc    al,dl
  40894e:	scas   eax,DWORD PTR es:[edi]
  40894f:	mov    dh,0x9c
  408951:	imul   ebx,DWORD PTR [edx],0xff434985
  408957:	popa   
  408958:	pop    edx
  408959:	mov    bl,0x83
  40895b:	pushf  
  40895c:	leave  
  40895d:	or     esi,ecx
  40895f:	imul   BYTE PTR [edi+0x60a6c56c]
  408965:	aas    
  408966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408967:	xlat   BYTE PTR ds:[ebx]
  408968:	int    0x6
  40896a:	nop
  40896b:	pop    edx
  40896c:	jb     0x40890b
  40896e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40896f:	(bad)  
  408970:	mov    ecx,esp
  408972:	sar    ah,cl
  408974:	pop    edx
  408975:	push   ss
  408976:	ja     0x4089d1
  408978:	test   eax,0x42e63d8f
  40897d:	mov    cl,0x18
  40897f:	outs   dx,DWORD PTR ds:[esi]
  408980:	pop    ecx
  408981:	xor    al,0x12
  408983:	pop    ebp
  408984:	jg     0x408978
  408986:	and    al,0x40
  408988:	pop    ebx
  408989:	jle    0x40892a
  40898b:	mov    dl,0x9
  40898d:	clc    
  40898e:	jl     0x4089b7
  408990:	push   ecx
  408991:	dec    eax
  408992:	pop    eax
  408993:	dec    edi
  408994:	ds ss dec edx
  408997:	pushf  
  408998:	mov    bh,0x7b
  40899a:	xor    DWORD PTR [edx+ebp*8-0x3edf1232],esi
  4089a1:	mov    bl,0xbd
  4089a3:	out    0x5a,al
  4089a5:	pop    ds
  4089a6:	ss aam 0x4f
  4089a9:	or     eax,DWORD PTR [edx-0x28]
  4089ac:	gs icebp 
  4089ae:	push   es
  4089af:	fwait
  4089b0:	and    BYTE PTR [ebx-0x41],ch
  4089b3:	ror    BYTE PTR [eax-0x46cc9fd1],1
  4089b9:	inc    ebp
  4089ba:	or     DWORD PTR [ebx+0x3b],eax
  4089bd:	ret    
  4089be:	test   edi,ebx
  4089c0:	cmp    DWORD PTR [eax-0x78aed306],ebp
  4089c6:	xchg   esi,eax
  4089c7:	sbb    al,0xc5
  4089c9:	cdq    
  4089ca:	addr16 daa 
  4089cc:	xchg   edx,eax
  4089cd:	test   ebp,eax
  4089cf:	mov    edi,0x26cf74fc
  4089d4:	pop    ebp
  4089d5:	push   cs
  4089d6:	shr    DWORD PTR gs:[edx],1
  4089d9:	daa    
  4089da:	push   0x709a6447
  4089df:	pop    esp
  4089e0:	call   0x6af3d2d8
  4089e5:	(bad)  
  4089e6:	fdivp  st(0),st
  4089e8:	ins    DWORD PTR es:[edi],dx
  4089e9:	push   0xffffff80
  4089eb:	jp     0x4089cb
  4089ed:	fidivr WORD PTR gs:[esi]
  4089f0:	ja     0x4089cc
  4089f2:	jmp    0x408a03
  4089f4:	fs cmp eax,0x5d2d11bf
  4089fa:	aam    0xc4
  4089fc:	sahf   
  4089fd:	mov    ch,0xcb
  4089ff:	aaa    
  408a00:	sub    BYTE PTR [edi-0x29ee393a],bl
  408a06:	push   ebp
  408a07:	sbb    ebp,ebp
  408a09:	popa   
  408a0a:	out    dx,eax
  408a0b:	daa    
  408a0c:	fidivr WORD PTR [ebx+esi*4-0x149d706c]
  408a13:	rol    DWORD PTR ds:0xa810c0ac,cl
  408a19:	ffree  st(4)
  408a1b:	mov    al,0x12
  408a1d:	add    cl,dh
  408a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a20:	stc    
  408a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a22:	lds    ebx,FWORD PTR [eax+0xc]
  408a25:	fmul   DWORD PTR [edi+0x44]
  408a28:	mov    bh,BYTE PTR [edi-0x56]
  408a2b:	aas    
  408a2c:	(bad)  
  408a2d:	dec    ebx
  408a2e:	mov    ecx,0x833694cd
  408a33:	and    eax,DWORD PTR [eax-0x5c7fdcf7]
  408a39:	push   ebp
  408a3a:	loopne 0x408a05
  408a3c:	div    DWORD PTR [edi]
  408a3e:	mov    edx,es
  408a40:	jmp    0xf7f0:0x9597898d
  408a47:	iret   
  408a48:	ins    BYTE PTR es:[edi],dx
  408a49:	or     al,0x44
  408a4b:	test   al,0xf8
  408a4d:	fstp   TBYTE PTR [ebp+0x2abd4457]
  408a53:	jge    0x408a2e
  408a55:	ins    BYTE PTR es:[edi],dx
  408a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a57:	sub    DWORD PTR [ecx-0x42c4255d],0x2e
  408a5e:	mov    eax,DWORD PTR [esi]
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	push   esi
  408a75:	dec    eax
  408a76:	ja     0x408af4
  408a78:	mov    ch,0x57
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    bh,al
  408a81:	lahf   
  408a82:	xchg   edi,eax
  408a83:	ficom  WORD PTR [edx+0x627eafe8]
  408a89:	mov    ebx,0xbecaf2ff
  408a8e:	jmp    0x408afe
  408a90:	sub    ah,cl
  408a92:	ss mov ah,0xf5
  408a95:	test   DWORD PTR [edi+0xab38ce2],0xf85dd1d8
  408a9f:	sbb    edi,ebp
  408aa1:	cmp    eax,DWORD PTR [ecx+0x7]
  408aa4:	inc    edx
  408aa5:	iret   
  408aa6:	inc    ebx
  408aa7:	xor    bl,BYTE PTR [edx+0x5eddf745]
  408aad:	push   cs
  408aae:	daa    
  408aaf:	jge    0x408a6a
  408ab1:	sbb    ch,BYTE PTR [eax+0x4]
  408ab4:	js     0x408b32
  408ab6:	xor    ah,al
  408ab8:	test   DWORD PTR [edx+0x43],esi
  408abb:	mov    ah,0x7a
  408abd:	jbe    0x408ab6
  408abf:	into   
  408ac0:	cmp    edi,DWORD PTR [eax]
  408ac2:	data16 mov al,0xb8
  408ac5:	mov    es:0xbbc5b919,al
  408acb:	test   DWORD PTR [ebx],0x2803b9cb
  408ad1:	xor    al,0xf1
  408ad3:	mov    ds,edx
  408ad5:	pop    ss
  408ad6:	mov    ebx,fs
  408ad8:	adc    esp,DWORD PTR [ebx-0x45ed2c27]
  408ade:	cmp    al,0x74
  408ae0:	adc    eax,0x6a4df6ea
  408ae5:	jns    0x408b38
  408ae7:	sbb    DWORD PTR [edx+0x5e],esp
  408aea:	mov    bh,0x5c
  408aec:	iret   
  408aed:	aaa    
  408aee:	cwde   
  408aef:	jmp    0x9a5:0xa27eea3
  408af6:	mov    ecx,0xe947c3ba
  408afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408afc:	inc    edx
  408afd:	std    
  408afe:	ds icebp 
  408b00:	repnz test al,0xb9
  408b03:	(bad)  [edi]
  408b05:	aas    
  408b06:	sub    al,0x7c
  408b08:	outs   dx,BYTE PTR ds:[esi]
  408b09:	add    eax,0xeffb5012
  408b0e:	fldcw  WORD PTR [esi]
  408b10:	adc    eax,0xcb2449d8
  408b15:	jmp    0x487c:0x99c2c7c5
  408b1c:	cmc    
  408b1d:	bound  edx,QWORD PTR [esi]
  408b1f:	add    bh,BYTE PTR [eax+esi*4]
  408b22:	mov    bh,0xd7
  408b24:	shl    DWORD PTR [eax+edx*2-0x5a363677],1
  408b2b:	and    BYTE PTR [ebx+0x56],0xd6
  408b2f:	ds jnp 0x408b4a
  408b32:	adc    edx,DWORD PTR [edx-0x31]
  408b35:	out    dx,al
  408b36:	mov    al,ds:0x5ae929e9
  408b3b:	mov    edi,0xe8695767
  408b40:	es mov edx,0x15af8090
  408b46:	out    0x34,eax
  408b48:	ror    DWORD PTR [ecx+ebp*1+0x45],1
  408b4c:	loope  0x408ad1
  408b4e:	hlt    
  408b4f:	adc    al,0xde
  408b51:	outs   dx,BYTE PTR ds:[esi]
  408b52:	xor    ebx,esi
  408b54:	retf   0x50e2
  408b57:	push   es
  408b58:	std    
  408b59:	sub    al,0x53
  408b5b:	sub    BYTE PTR [edi],dh
  408b5d:	pop    esp
  408b5e:	fiadd  WORD PTR [edx-0x7a5922ab]
  408b64:	jle    0x408b2f
  408b66:	jbe    0x408b7d
  408b68:	ins    DWORD PTR es:[edi],dx
  408b69:	sahf   
  408b6a:	pop    ebp
  408b6b:	add    DWORD PTR [ecx-0x4c],edx
  408b6e:	xchg   edi,eax
  408b6f:	add    bh,ah
  408b71:	xchg   BYTE PTR [ebx-0x3f8fb613],al
  408b77:	jb     0x408bcb
  408b79:	int3   
  408b7a:	and    ecx,DWORD PTR [ebx+edi*1-0x9]
  408b7e:	jmp    0x408b34
  408b80:	pop    edx
  408b81:	cmp    DWORD PTR [ebp+0x7a],ebx
  408b84:	loop   0x408bd8
  408b86:	add    ch,dh
  408b88:	cmc    
  408b89:	pushf  
  408b8a:	push   0xeff818b2
  408b8f:	xor    BYTE PTR [ecx],ch
  408b91:	dec    esp
  408b92:	lods   al,BYTE PTR ds:[esi]
  408b93:	cmc    
  408b94:	adc    DWORD PTR [ecx-0x2b],esi
  408b97:	adc    bh,BYTE PTR [eax-0xa]
  408b9a:	xchg   edi,eax
  408b9b:	scas   eax,DWORD PTR es:[edi]
  408b9c:	lods   al,BYTE PTR ds:[esi]
  408b9d:	adc    DWORD PTR [edx],ebx
  408b9f:	pop    edi
  408ba0:	in     eax,dx
  408ba1:	push   ebx
  408ba2:	jae    0x408b63
  408ba4:	cmp    DWORD PTR [eax-0x2380e220],eax
  408baa:	adc    dl,cl
  408bac:	cmp    al,0x41
  408bae:	cmp    bl,BYTE PTR [edi+edi*4-0x44afeed3]
  408bb5:	dec    edi
  408bb6:	shl    DWORD PTR [eax-0x281d5db],0xf9
  408bbd:	(bad)  
  408bbe:	cmp    al,0x49
  408bc0:	mov    ah,ch
  408bc2:	(bad)  
  408bc3:	sub    dl,bl
  408bc5:	retf   
  408bc6:	xchg   ecx,eax
  408bc7:	pop    edi
  408bc8:	xchg   ebp,eax
  408bc9:	mov    ds:0x384a60cd,al
  408bce:	adc    eax,0xfaf8551d
  408bd3:	push   ebx
  408bd4:	mov    edi,DWORD PTR [ebx+0x5eddfd33]
  408bda:	sub    BYTE PTR [edi+0x29469149],0xb4
  408be1:	or     al,BYTE PTR [ebp+edi*4-0x5c9d67a0]
  408be8:	clc    
  408be9:	std    
  408bea:	mov    esi,DWORD PTR [bx+0x2ff6]
  408bef:	adc    DWORD PTR [edx+0x6fad1c17],ebx
  408bf5:	int3   
  408bf6:	mov    ds:0x741df37e,eax
  408bfb:	adc    al,0xa1
  408bfd:	xchg   ebp,eax
  408bfe:	mov    bl,0x39
  408c00:	test   DWORD PTR [edx],0x383a235e
  408c06:	mov    ebx,0x166a3aa7
  408c0b:	xchg   BYTE PTR [ecx],ch
  408c0d:	fimul  WORD PTR [edi]
  408c0f:	mov    ecx,0x82f2607d
  408c14:	in     eax,0x5
  408c16:	js     0x408bdd
  408c18:	jmp    0xa961:0x690e2c55
  408c1f:	loop   0x408c70
  408c21:	xor    al,0xde
  408c23:	push   ebx
  408c24:	add    ch,al
  408c26:	dec    edi
  408c27:	(bad)  
  408c28:	into   
  408c29:	push   ecx
  408c2a:	mov    ch,0x54
  408c2c:	ss jl  0x408c14
  408c2f:	(bad)  
  408c30:	fstp   DWORD PTR [edi]
  408c32:	gs shl eax,1
  408c35:	mov    dl,0x9a
  408c37:	push   eax
  408c38:	dec    eax
  408c39:	je     0x408c4b
  408c3b:	iret   
  408c3c:	inc    edx
  408c3d:	aad    0xa2
  408c3f:	fstp   st(7)
  408c41:	pop    esp
  408c42:	mov    ah,0x66
  408c44:	cdq    
  408c45:	mov    al,ds:0x73bd1821
  408c4a:	repz (bad) 
  408c4c:	ins    DWORD PTR es:[edi],dx
  408c4d:	xlat   BYTE PTR ds:[ebx]
  408c4e:	cmp    al,0x43
  408c50:	push   ss
  408c51:	xchg   ecx,eax
  408c52:	dec    edx
  408c53:	xor    ebp,eax
  408c55:	dec    ebp
  408c56:	nop
  408c57:	pop    eax
  408c58:	call   0xc543a290
  408c5d:	ja     0x408c28
  408c5f:	test   DWORD PTR [edx+0x9a4681e],eax
  408c65:	and    eax,0x93f1a09
  408c6a:	xchg   ebx,eax
  408c6b:	cmp    al,0xa1
  408c6d:	popf   
  408c6e:	fs ins BYTE PTR es:[edi],dx
  408c70:	call   DWORD PTR [edi+eax*2-0x9]
  408c74:	and    edx,ebp
  408c76:	mov    ebp,0xdcfa3738
  408c7b:	xchg   edx,eax
  408c7c:	sbb    eax,0x5d8f12ff
  408c81:	mov    ds,eax
  408c83:	std    
  408c84:	push   ebx
  408c85:	pop    ds
  408c86:	mov    ch,0x8c
  408c88:	xlat   BYTE PTR ds:[ebx]
  408c89:	stc    
  408c8a:	cs jb  0x408cdf
  408c8d:	mov    dl,0x44
  408c8f:	(bad)  
  408c90:	cmc    
  408c91:	and    edx,DWORD PTR [ebx]
  408c93:	mov    esi,0xdaa6f8d
  408c98:	aad    0xf9
  408c9a:	and    dl,bl
  408c9c:	xor    al,0x5d
  408c9e:	xor    eax,0x12260727
  408ca3:	out    dx,al
  408ca4:	stc    
  408ca5:	pop    eax
  408ca6:	fsubr  DWORD PTR [edx-0x38]
  408ca9:	int    0x2e
  408cab:	mov    al,0x9a
  408cad:	sti    
  408cae:	jo     0x408c87
  408cb0:	push   ecx
  408cb1:	and    ch,BYTE PTR [ebp+0x7]
  408cb4:	pop    es
  408cb5:	sub    al,0x81
  408cb7:	retf   0x418b
  408cba:	clc    
  408cbb:	mov    cl,0x45
  408cbd:	mov    eax,0x1b5f1f9f
  408cc2:	cdq    
  408cc3:	ins    DWORD PTR es:[edi],dx
  408cc4:	jg     0x408c67
  408cc6:	jmp    0x408d1f
  408cc8:	aam    0xc8
  408cca:	and    BYTE PTR [edx-0xeb786f],dh
  408cd0:	sub    bh,BYTE PTR [edi-0x41d75600]
  408cd6:	dec    ebx
  408cd7:	mov    cl,0xe7
  408cd9:	adc    DWORD PTR [ebx],ebx
  408cdb:	push   es
  408cdc:	pop    es
  408cdd:	cwde   
  408cde:	or     cl,BYTE PTR [ebp+edx*4+0x1d57a7a1]
  408ce5:	xlat   BYTE PTR ss:[ebx]
  408ce7:	mov    dh,0xf6
  408ce9:	or     BYTE PTR [ebx],bl
  408ceb:	jmp    0xb134:0x643cc38d
  408cf2:	or     ebx,DWORD PTR [ebx]
  408cf4:	imul   ebp,DWORD PTR [ebx-0xc00e720],0xf
  408cfb:	icebp  
  408cfc:	das    
  408cfd:	sub    al,0xe1
  408cff:	dec    eax
  408d00:	or     al,BYTE PTR [edi-0x4c33f989]
  408d06:	outs   dx,DWORD PTR ds:[esi]
  408d08:	aas    
  408d09:	in     al,0x1e
  408d0b:	lds    ebx,FWORD PTR ds:0xe08660a2
  408d11:	iret   
  408d12:	jle    0x408cb1
  408d14:	(bad)  
  408d15:	lea    eax,[edx]
  408d17:	outs   dx,DWORD PTR ds:[esi]
  408d18:	popf   
  408d19:	dec    esp
  408d1a:	repz les ecx,FWORD PTR [ebp+edx*4-0x4a]
  408d1f:	out    0xc8,eax
  408d21:	stc    
  408d22:	pop    ds
  408d23:	repz and eax,0x919c8136
  408d29:	jl     0x408d2d
  408d2b:	mov    bh,0x83
  408d2d:	div    BYTE PTR [eax]
  408d2f:	mov    esi,0x7d76b873
  408d34:	push   esi
  408d35:	fld    QWORD PTR [edx]
  408d37:	add    DWORD PTR [edi+ebp*8],0x704899be
  408d3e:	xchg   BYTE PTR [edi],bh
  408d40:	xchg   ebp,eax
  408d41:	stos   DWORD PTR es:[edi],eax
  408d42:	aas    
  408d43:	sub    edi,DWORD PTR [edx]
  408d45:	mov    dl,0x8e
  408d47:	add    eax,0x9284b510
  408d4c:	retf   
  408d4d:	clc    
  408d4e:	shr    BYTE PTR [edx+0x81d78b2],cl
  408d54:	call   0x3d023087
  408d59:	jb     0x408d99
  408d5b:	cdq    
  408d5c:	jl     0x408da0
  408d5e:	jmp    0x9d72:0xf2b212f6
  408d65:	mov    edi,0xad5d2e26
  408d6a:	addr16 pop ds
  408d6c:	jnp    0x408d79
  408d6e:	and    BYTE PTR [ebp-0x2751842a],dh
  408d74:	inc    edi
  408d75:	(bad)  
  408d76:	shl    dl,1
  408d78:	xor    al,0x82
  408d7a:	push   0x8840ae76
  408d7f:	sbb    DWORD PTR [eax],esi
  408d81:	je     0x408d27
  408d83:	adc    ch,BYTE PTR [ebx]
  408d85:	mov    ds:0x8c19e809,eax
  408d8a:	sbb    esi,ebp
  408d8c:	loopne 0x408dec
  408d8e:	xor    al,dh
  408d90:	dec    ebx
  408d91:	mov    ds:0x1e08bbea,al
  408d96:	cmp    ch,BYTE PTR [ebx+0x4a8430ca]
  408d9c:	(bad)  
  408d9d:	(bad)  
  408d9e:	(bad)  
  408d9f:	repnz iret 
  408da1:	or     BYTE PTR [ebx+0x26],ch
  408da4:	repz (bad) 
  408da6:	dec    ecx
  408da7:	bnd jno 0x408ddc
  408daa:	xchg   edi,eax
  408dab:	aas    
  408dac:	ret    0x525b
  408daf:	inc    esi
  408db0:	cmc    
  408db1:	popa   
  408db2:	sub    DWORD PTR [ebp-0x60cba941],0x61e2aa9d
  408dbc:	xlat   BYTE PTR ds:[ebx]
  408dbd:	xchg   ebx,eax
  408dbe:	mov    bh,ah
  408dc0:	test   al,0x3e
  408dc2:	adc    ecx,ebx
  408dc4:	ffree  st(4)
  408dc6:	aaa    
  408dc7:	push   ebx
  408dc8:	ror    DWORD PTR [ebp+edi*2+0x6db156a4],1
  408dcf:	das    
  408dd0:	dec    esi
  408dd1:	xor    eax,0x44df93f3
  408dd6:	xor    edx,eax
  408dd8:	jno    0x408d5e
  408dda:	and    BYTE PTR [ebp+ebp*1-0x59cebdaf],0x1
  408de2:	pop    edx
  408de3:	add    dl,ch
  408de5:	imul   edi,DWORD PTR [edx],0xffffffcf
  408de8:	lock lods al,BYTE PTR ds:[esi]
  408dea:	sbb    al,dl
  408dec:	retf   0x3cd9
  408def:	fwait
  408df0:	inc    edx
  408df1:	rcr    bh,1
  408df3:	stos   BYTE PTR es:[edi],al
  408df4:	rol    ch,0xd5
  408df7:	cmp    cl,BYTE PTR [ecx-0x51]
  408dfa:	push   es
  408dfb:	push   edx
  408dfc:	add    al,0xd6
  408dfe:	repnz addr16 iret 
  408e01:	dec    edi
  408e02:	jnp    0x408e4b
  408e04:	lods   al,BYTE PTR ds:[esi]
  408e05:	mov    ?,WORD PTR [ebx-0x5bbdc040]
  408e0b:	dec    ebx
  408e0c:	jp     0x408db2
  408e0e:	inc    edx
  408e0f:	sub    esi,DWORD PTR [esp+edx*2]
  408e12:	and    al,0x95
  408e14:	lahf   
  408e15:	xor    edi,DWORD PTR [ecx+0x674ec2bf]
  408e1b:	rcr    WORD PTR [ecx-0x67],0x7c
  408e20:	fcomip st,st(3)
  408e22:	push   esi
  408e23:	nop
  408e24:	inc    esp
  408e25:	xchg   edx,eax
  408e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e27:	(bad)  [edx+0x54]
  408e2a:	jbe    0x408df6
  408e2c:	inc    ebp
  408e2d:	mov    dh,0x30
  408e2f:	ror    ah,1
  408e31:	mov    ebx,DWORD PTR [edi+0x76]
  408e34:	stc    
  408e35:	out    0x9b,eax
  408e37:	bound  esp,QWORD PTR [ecx-0x7501f3c0]
  408e3d:	jle    0x408e75
  408e3f:	sbb    DWORD PTR [edx+0xf],ebp
  408e42:	lods   al,BYTE PTR ds:[esi]
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	pop    ss
  408e76:	mov    bl,0x4b
  408e78:	jle    0x408eb4
  408e7a:	push   ecx
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    dh,al
  408e82:	jns    0x408e68
  408e84:	neg    DWORD PTR [eax-0x75]
  408e87:	or     bl,al
  408e89:	or     BYTE PTR [ebx+eax*4+0x76569567],0xb1
  408e91:	repnz test BYTE PTR [ebp+0x7d8a2d0d],cl
  408e98:	jnp    0x408eb6
  408e9a:	clc    
  408e9b:	popf   
  408e9c:	fldcw  WORD PTR [ebp+0x67de299c]
  408ea2:	push   ss
  408ea3:	(bad)  
  408ea4:	mov    cl,0x9b
  408ea6:	push   ebp
  408ea7:	xor    BYTE PTR [ecx-0x73668340],bl
  408ead:	jno    0x408e94
  408eaf:	cmp    al,0xae
  408eb1:	imul   esi,DWORD PTR [eax-0x78],0x72
  408eb5:	pop    edx
  408eb6:	sbb    al,ch
  408eb8:	lds    esi,FWORD PTR [edi]
  408eba:	sbb    al,0xc5
  408ebc:	lods   al,BYTE PTR ds:[esi]
  408ebd:	lea    ecx,[esi+eiz*8+0x46]
  408ec1:	ja     0x408e7d
  408ec3:	in     eax,dx
  408ec4:	xchg   BYTE PTR [esi-0x5534a2cc],bh
  408eca:	fsub   QWORD PTR [ecx-0x1172171c]
  408ed1:	pop    ebx
  408ed2:	stos   DWORD PTR es:[edi],eax
  408ed3:	loop   0x408e82
  408ed5:	je     0x408f3e
  408ed7:	icebp  
  408ed8:	out    dx,eax
  408ed9:	clc    
  408eda:	mov    esi,0x31444223
  408edf:	gs into 
  408ee1:	dec    ebp
  408ee2:	xor    DWORD PTR [ebx+eax*8-0x5c97697e],edx
  408ee9:	fnsave [ecx+eax*8]
  408eec:	adc    edi,DWORD PTR [ebp-0x6e10bea9]
  408ef2:	sub    edi,edx
  408ef4:	mov    edx,0xb9faa383
  408ef9:	inc    ebx
  408efa:	aaa    
  408efb:	(bad)  
  408efc:	ins    DWORD PTR es:[edi],dx
  408efd:	mov    bh,0x5d
  408eff:	sbb    BYTE PTR [ebp+0x4],bh
  408f02:	bound  esi,QWORD PTR [eax+0x502ab7e4]
  408f08:	into   
  408f09:	movups XMMWORD PTR [edi+0x73],xmm4
  408f0d:	pop    ss
  408f0e:	sbb    BYTE PTR [edx+0x3a22c096],bh
  408f14:	scas   al,BYTE PTR es:[edi]
  408f15:	mov    ah,0xc9
  408f17:	mov    eax,ss:0xb607d3b2
  408f1d:	pop    edi
  408f1e:	fist   DWORD PTR ds:0xb6785066
  408f24:	sub    BYTE PTR [esi],cl
  408f26:	jns    0x408ecf
  408f28:	adc    DWORD PTR [eax+0x7135456f],ebp
  408f2e:	mov    al,0xa1
  408f30:	iret   
  408f31:	not    DWORD PTR [edi-0x20802b9]
  408f37:	add    DWORD PTR [ebp-0x2b],edx
  408f3a:	xor    eax,DWORD PTR [edi+0x6779ff22]
  408f40:	xchg   esp,eax
  408f41:	push   cs
  408f42:	cmovl  ecx,DWORD PTR [ecx]
  408f45:	neg    DWORD PTR [ebx-0x7]
  408f48:	mov    cl,dl
  408f4a:	arpl   WORD PTR [eax+edx*4+0x39],bx
  408f4e:	jle    0x408f6f
  408f50:	outs   dx,DWORD PTR ds:[esi]
  408f51:	or     eax,0x76ebe392
  408f56:	data16 lods al,BYTE PTR ds:[esi]
  408f58:	push   esp
  408f59:	loope  0x408fb2
  408f5b:	sub    bl,BYTE PTR [ecx+0xf7dca96]
  408f61:	fild   QWORD PTR [esi-0xa]
  408f64:	loope  0x408fa9
  408f66:	aam    0xd8
  408f68:	ins    BYTE PTR es:[edi],dx
  408f69:	sbb    eax,ebp
  408f6b:	mov    cs,edx
  408f6d:	lds    ebp,FWORD PTR [ebx-0x34]
  408f70:	add    ah,BYTE PTR cs:[edx+ebx*1-0x31]
  408f75:	pop    es
  408f76:	aam    0xec
  408f78:	idiv   bl
  408f7a:	ret    
  408f7b:	cmc    
  408f7c:	pop    ss
  408f7d:	and    BYTE PTR [eax],0xa4
  408f80:	pushf  
  408f81:	inc    edx
  408f82:	mov    esi,0xaa86fa17
  408f87:	rcl    BYTE PTR [esp+ebp*8],1
  408f8a:	pop    esp
  408f8b:	iret   
  408f8c:	add    al,ch
  408f8e:	mov    edx,0x26f40a2c
  408f93:	inc    esp
  408f94:	ins    DWORD PTR es:[edi],dx
  408f95:	sub    DWORD PTR [eax],ecx
  408f97:	fcomp  DWORD PTR [eax-0x60]
  408f9a:	lods   eax,DWORD PTR ds:[esi]
  408f9b:	adc    cl,cl
  408f9d:	lds    edi,FWORD PTR [eax-0x2c0accde]
  408fa3:	cmc    
  408fa4:	sbb    BYTE PTR [ecx-0x3d],bh
  408fa7:	dec    eax
  408fa8:	dec    ebx
  408faa:	ret    0x9986
  408fad:	jle    0x408fe5
  408faf:	lds    ebp,FWORD PTR [ebx+0x5b]
  408fb2:	and    al,0x7b
  408fb4:	push   ebx
  408fb5:	or     cl,BYTE PTR ds:0x6b7bf51e
  408fbb:	js     0x408fdc
  408fbd:	and    DWORD PTR [eax+0x15],esi
  408fc0:	xor    ch,cl
  408fc2:	in     eax,0x6c
  408fc4:	push   esi
  408fc5:	stc    
  408fc6:	les    esi,FWORD PTR ds:0x9206bccd
  408fcc:	mov    ecx,DWORD PTR [ebx+0x79]
  408fcf:	cwde   
  408fd0:	adc    BYTE PTR [edi-0x47],bl
  408fd3:	outs   dx,DWORD PTR ds:[esi]
  408fd4:	ror    DWORD PTR [eax+ebp*8],0x4a
  408fd8:	aam    0xd4
  408fda:	call   0x65ad55ce
  408fdf:	cli    
  408fe0:	fldcw  WORD PTR [edi+0x1ea25cfd]
  408fe6:	daa    
  408fe7:	mov    ecx,0x27f88898
  408fec:	sti    
  408fed:	push   esi
  408fee:	or     al,0xc9
  408ff0:	sti    
  408ff1:	int3   
  408ff2:	les    edi,FWORD PTR [ebp+0x4b92347f]
  408ff8:	xchg   edi,eax
  408ff9:	mov    bh,0x8b
  408ffb:	or     ecx,DWORD PTR [edx-0x3f1dc5b5]
  409001:	fld    QWORD PTR [esi]
  409003:	(bad)  
  409004:	mov    esi,0x40285f80
  409009:	test   edx,esp
  40900b:	jg     0x408fcf
  40900d:	aad    0x43
  40900f:	iret   
  409010:	xlat   BYTE PTR ds:[ebx]
  409011:	adc    al,BYTE PTR [edi-0x207e361a]
  409017:	jmp    0xd52c:0xb096d25f
  40901e:	inc    ecx
  40901f:	cmp    DWORD PTR [ecx+0xb],ebx
  409022:	cpuid  
  409024:	dec    ebp
  409025:	cs mov cl,0x92
  409028:	ja     0x409002
  40902a:	push   cs
  40902b:	inc    ebx
  40902c:	pop    es
  40902d:	push   esi
  40902e:	test   DWORD PTR [ecx+ebp*4],edi
  409031:	hlt    
  409032:	mov    cl,BYTE PTR [edi]
  409034:	xchg   esp,eax
  409035:	adc    al,0x1b
  409037:	and    DWORD PTR [eax-0x45],0xffffffb2
  40903b:	outs   dx,DWORD PTR ds:[esi]
  40903c:	sar    DWORD PTR [edx+0x5b019445],1
  409042:	mov    dh,0x4e
  409044:	sub    al,0x22
  409046:	xor    eax,DWORD PTR ss:[edi]
  409049:	fistp  DWORD PTR [esi]
  40904b:	sub    cl,BYTE PTR [edi]
  40904d:	dec    ebx
  40904e:	jle    0x409057
  409050:	jg     0x408ffc
  409052:	repz dec ebp
  409054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409055:	pop    eax
  409056:	or     al,0xcd
  409058:	imul   BYTE PTR [edi-0x3853a1c0]
  40905e:	jno    0x409083
  409060:	leave  
  409061:	xlat   BYTE PTR ds:[ebx]
  409062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409063:	mov    BYTE PTR [ecx-0x682ea869],ah
  409069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40906a:	add    al,0x9f
  40906c:	pop    eax
  40906d:	xor    eax,0x874ad21
  409072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409073:	jmp    DWORD PTR [esi-0x64639516]
  409079:	add    BYTE PTR [edx-0x25282663],dh
  40907f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409080:	adc    BYTE PTR [esi+ebx*8+0x29dcdc82],bh
  409087:	or     bh,dl
  409089:	pop    ecx
  40908a:	cmp    esi,esp
  40908c:	dec    ebp
  40908d:	push   cs
  40908e:	pop    eax
  40908f:	push   ds
  409090:	(bad)  
  409092:	ins    BYTE PTR es:[edi],dx
  409093:	add    BYTE PTR [edx-0x3f],al
  409096:	jge    0x40904a
  409098:	xchg   ebp,eax
  409099:	outs   dx,DWORD PTR ds:[esi]
  40909a:	mov    ds:0xe8af8f0c,eax
  40909f:	add    dl,bl
  4090a1:	repnz outs dx,DWORD PTR ds:[esi]
  4090a3:	pop    ss
  4090a4:	and    al,0x7e
  4090a6:	mov    bh,0x1e
  4090a8:	imul   ebp,eax,0xffffffda
  4090ab:	jecxz  0x4090d7
  4090ad:	xor    BYTE PTR [ecx-0x457463],cl
  4090b3:	imul   BYTE PTR [ebp+0x78]
  4090b6:	mov    dh,0xc5
  4090b8:	out    0x24,al
  4090ba:	mov    ebp,0x9666143e
  4090bf:	add    BYTE PTR [ebp-0x72ef02ab],dh
  4090c5:	push   ds
  4090c6:	adc    eax,0xdbee6c9
  4090cb:	and    eax,0xd5e350e1
  4090d0:	mov    bh,0x8f
  4090d2:	sbb    dl,dl
  4090d4:	dec    esi
  4090d5:	(bad)  
  4090d6:	retf   0xdb45
  4090d9:	hlt    
  4090da:	inc    eax
  4090db:	xlat   BYTE PTR ds:[ebx]
  4090dc:	fmul   QWORD PTR [edi+0x592fc254]
  4090e2:	fdivr  QWORD PTR [eax]
  4090e4:	cli    
  4090e5:	push   0x4d
  4090e7:	add    bl,al
  4090e9:	push   cs
  4090ea:	(bad)  
  4090eb:	in     al,0xfc
  4090ed:	or     dl,ah
  4090ef:	(bad)  
  4090f0:	and    esi,DWORD PTR [edx+0xa4794ec]
  4090f6:	mov    bh,BYTE PTR [ebx-0x3aec66ed]
  4090fc:	push   edi
  4090fd:	fmul   DWORD PTR ds:0x52aeb40d
  409103:	dec    ecx
  409104:	dec    ebx
  409105:	sbb    al,BYTE PTR [ecx-0x5a]
  409108:	ja     0x409179
  40910a:	sub    DWORD PTR [edi-0xa],ebx
  40910d:	dec    ebp
  40910e:	jmp    0x4090ad
  409110:	cmp    edi,esi
  409112:	push   ds
  409113:	test   al,0x4f
  409115:	aaa    
  409116:	xor    DWORD PTR [ebx+0x42],0xffffffea
  40911a:	push   ds
  40911b:	jns    0x409115
  40911d:	jg     0x40916a
  40911f:	dec    ecx
  409120:	pushf  
  409121:	es jp  0x409129
  409124:	cmp    eax,0xec9d071b
  409129:	arpl   WORD PTR [esi+0xcafa4a4],bx
  40912f:	dec    esp
  409130:	mov    al,BYTE PTR ds:0x4a75a93e
  409136:	pop    eax
  409137:	pop    es
  409138:	xor    eax,DWORD PTR [ecx+0x21451ff]
  40913e:	adc    al,0x56
  409140:	test   al,0x5
  409142:	lahf   
  409143:	call   0x9e64c856
  409148:	imul   ebx,DWORD PTR [edi-0x5eefb4d6],0x6c
  40914f:	hlt    
  409150:	enter  0x5134,0xf3
  409154:	imul   ebx,DWORD PTR [ecx+0x75fd8c48],0xffffffac
  40915b:	cmp    eax,0xbc20c49c
  409160:	push   esi
  409161:	or     DWORD PTR [edx-0x12f7d635],0xbf73077f
  40916b:	les    ebx,FWORD PTR [edx]
  40916d:	mov    al,0xfc
  40916f:	stos   BYTE PTR es:[edi],al
  409170:	dec    ecx
  409171:	adc    eax,0xe1764090
  409176:	out    dx,al
  409177:	cmp    al,0x30
  409179:	mov    ds:0x2ea10bf9,eax
  40917e:	scas   al,BYTE PTR es:[edi]
  40917f:	ja     0x409200
  409181:	inc    ebp
  409182:	mov    esp,0x284ac0ca
  409187:	push   ebp
  409188:	pop    esp
  409189:	ss loop 0x40913a
  40918c:	(bad)  
  40918f:	icebp  
  409190:	(bad)  
  409191:	cmp    DWORD PTR [esi],ebx
  409193:	mov    ds:0xe132bff0,eax
  409198:	jno    0x40913a
  40919a:	test   BYTE PTR [esi],0x72
  40919d:	mov    ch,0x25
  40919f:	fnstenv [edx]
  4091a1:	push   ss
  4091a2:	lods   al,BYTE PTR ds:[esi]
  4091a3:	ja     0x4091b9
  4091a5:	repnz jecxz 0x4091cf
  4091a8:	jge    0x409223
  4091aa:	jp     0x4091c0
  4091ac:	push   ebp
  4091ad:	pusha  
  4091ae:	push   edi
  4091af:	cmc    
  4091b0:	push   ebp
  4091b1:	sar    DWORD PTR [edx-0x48248883],cl
  4091b7:	fs xchg ah,ch
  4091ba:	cli    
  4091bb:	push   esi
  4091bc:	ret    
  4091bd:	dec    esi
  4091be:	loope  0x40918a
  4091c0:	outs   dx,DWORD PTR ds:[esi]
  4091c1:	or     ah,bh
  4091c3:	repz out 0x80,al
  4091c6:	mov    edi,0xb076cce0
  4091cb:	xchg   ebx,eax
  4091cc:	mov    ds:0x530fc2b0,eax
  4091d1:	jp     0x409232
  4091d3:	int    0xd9
  4091d5:	adc    BYTE PTR [eax+0x4],0x20
  4091d9:	inc    esi
  4091da:	imul   ebx,DWORD PTR [ebp+0x23e110df],0xffffffeb
  4091e1:	xchg   edi,eax
  4091e2:	dec    ecx
  4091e3:	mov    al,ds:0xaf727590
  4091e8:	lock les edi,FWORD PTR [ebx+ecx*2-0x1a6d1bf4]
  4091f0:	adc    bl,bl
  4091f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091f3:	push   edx
  4091f4:	xchg   ecx,eax
  4091f5:	pop    es
  4091f6:	retf   
  4091f7:	inc    edx
  4091f8:	stos   DWORD PTR es:[edi],eax
  4091f9:	int    0x34
  4091fb:	mov    ebp,0x68edb087
  409200:	push   ecx
  409201:	fmul   QWORD PTR [ebp-0x6a]
  409204:	jge    0x4091fc
  409206:	mov    edi,esp
  409208:	leave  
  409209:	or     eax,0x2cfdfe0f
  40920e:	sbb    bh,bl
  409210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409211:	bound  ecx,QWORD PTR [edi-0x5dba554c]
  409217:	xlat   BYTE PTR ds:[ebx]
  409218:	adc    DWORD PTR [edi+0x633d27e3],esi
  40921e:	mov    edi,0x3c206968
  409223:	xchg   bl,bl
  409225:	dec    edi
  409226:	push   es
  409227:	ret    
  409228:	xor    edi,DWORD PTR ds:0x45824cd5
  40922e:	inc    ecx
  40922f:	add    eax,0x4d9851fc
  409234:	mul    BYTE PTR [edi-0x1a]
  409237:	jmp    0x5ff0:0xe7a2cf5e
  40923e:	dec    ecx
  40923f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409240:	xchg   edx,eax
  409241:	je     0x409276
  409243:	ror    BYTE PTR [edi],cl
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	ret    0x3302
  409249:	ror    DWORD PTR [ecx-0x2616f3ab],1
  40924f:	add    eax,DWORD PTR [eax]
  409251:	add    dl,ah
  409253:	and    eax,0xea26ea26
  409258:	sbb    bl,BYTE PTR ds:0x70a1617f
  40925e:	mov    cl,0xa9
  409260:	pop    ecx
  409261:	stos   BYTE PTR es:[edi],al
  409262:	ror    BYTE PTR [ecx+0x18],0x18
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [ecx],ah
  40926b:	sbb    eax,0xa45b270d
  409270:	and    ebx,edx
  409272:	loopne 0x409225
  409274:	jmp    0x5e6a65e2
  409279:	mov    eax,0xf9dd5e8c
  40927e:	push   edx
  40927f:	add    al,0xde
  409281:	test   al,0x24
  409283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409284:	jmp    0x9ef51840
  409289:	sahf   
  40928a:	retf   0xc348
  40928d:	stc    
  40928e:	cli    
  40928f:	jbe    0x409303
  409291:	sub    eax,0x88cbc5e4
  409296:	jge    0x4092e7
  409298:	jmp    0x1c16148e
  40929d:	sbb    al,0xd8
  40929f:	aaa    
  4092a0:	add    edx,DWORD PTR [edx-0x2dc3c562]
  4092a6:	out    0x78,eax
  4092a8:	sub    esp,0xffffffb9
  4092ab:	cdq    
  4092ac:	sub    ecx,eax
  4092ae:	sub    DWORD PTR [esp+ecx*8-0x35],ecx
  4092b2:	mov    al,dh
  4092b4:	arpl   WORD PTR [esi-0x669beeaa],di
  4092ba:	mov    eax,0xdc71a018
  4092bf:	dec    ecx
  4092c0:	jbe    0x409302
  4092c2:	pop    ebp
  4092c3:	xchg   esi,eax
  4092c4:	pusha  
  4092c5:	jle    0x4092d9
  4092c7:	jne    0x4092dd
  4092c9:	outs   dx,DWORD PTR ds:[esi]
  4092ca:	adc    eax,0x614775d0
  4092cf:	adc    BYTE PTR [edx-0x26acf82b],dl
  4092d5:	shl    DWORD PTR [ebx+ebp*2+0x4b],0xaf
  4092da:	dec    ecx
  4092db:	push   esp
  4092dc:	fsubr  DWORD PTR [ecx+0x3f32299a]
  4092e2:	fimul  DWORD PTR [ebx+0x72e3393e]
  4092e8:	sbb    bh,bh
  4092ea:	pop    eax
  4092eb:	mov    edi,0x33ee33bf
  4092f0:	mov    ?,WORD PTR [edx+edi*4+0x67]
  4092f4:	jmp    0x61bd6d1c
  4092f9:	or     BYTE PTR [ebp-0x3],dh
  4092fc:	add    DWORD PTR [ecx+esi*2-0x707455fb],eax
  409303:	not    bl
  409305:	fistp  DWORD PTR [edx+0x493aab95]
  40930b:	mov    WORD PTR [edx+esi*8-0x7c],gs
  40930f:	aad    0xff
  409311:	inc    esi
  409312:	ficomp DWORD PTR [ebx]
  409314:	sbb    DWORD PTR [ebp-0x33],0x41
  409318:	daa    
  409319:	(bad)  
  40931a:	fbstp  TBYTE PTR [edi-0x3f]
  40931d:	mov    ebx,0x869797ee
  409322:	mov    edi,0xa2d53391
  409327:	mov    bl,0x87
  409329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932a:	dec    ebx
  40932b:	adc    cl,bl
  40932d:	dec    ecx
  40932e:	jno    0x4092fb
  409330:	xor    al,0xe
  409332:	(bad)  
  409333:	cli    
  409334:	adc    eax,0xe41efe6b
  409339:	fs push ebx
  40933b:	aam    0xc4
  40933d:	je     0x40934f
  40933f:	and    eax,0xeab541d2
  409344:	retf   0xa40b
  409347:	int    0x2c
  409349:	jmp    0xb2b1:0xc721f11c
  409350:	mov    WORD PTR [edx+eax*2-0x57],gs
  409354:	sbb    eax,0xd21171d3
  409359:	mov    esp,0xb7fdf83e
  40935e:	jae    0x40936d
  409360:	lods   al,BYTE PTR ds:[esi]
  409361:	call   0xa70d20f
  409366:	xor    DWORD PTR [edi+0x19cf32aa],ebx
  40936c:	push   esi
  40936d:	jne    0x409324
  40936f:	push   edx
  409370:	add    DWORD PTR [edi+0x52701259],ecx
  409376:	pop    edx
  409377:	cli    
  409378:	stos   BYTE PTR es:[edi],al
  409379:	inc    ebp
  40937a:	in     eax,0xa7
  40937c:	scas   al,BYTE PTR es:[edi]
  40937d:	sbb    al,0x31
  40937f:	jb     0x409346
  409381:	xchg   ebx,eax
  409382:	enter  0xf669,0x68
  409386:	mov    eax,ds:0x3fe4c040
  40938b:	add    al,0x5c
  40938d:	pusha  
  40938e:	outs   dx,DWORD PTR ds:[esi]
  40938f:	scas   eax,DWORD PTR es:[edi]
  409390:	xchg   DWORD PTR [esp+esi*8+0x7266c0fb],esp
  409397:	pop    es
  409398:	pop    ds
  409399:	sbb    dh,ah
  40939b:	sub    eax,0x53f3a784
  4093a0:	stos   BYTE PTR es:[edi],al
  4093a1:	sahf   
  4093a2:	mov    eax,ds:0x5d531f20
  4093a7:	xchg   DWORD PTR [edx-0x58],edi
  4093aa:	add    eax,0x92d7df39
  4093af:	enter  0xf57a,0x44
  4093b3:	bound  esp,QWORD PTR [edi-0x23279fa]
  4093b9:	pop    esp
  4093ba:	xor    dl,BYTE PTR [ecx+esi*4-0x47]
  4093be:	mov    ebp,0xdb8a34ff
  4093c3:	xor    eax,0x760321cc
  4093c8:	lea    edx,[edi]
  4093ca:	and    BYTE PTR [ecx-0x417dcbd],ch
  4093d0:	stc    
  4093d1:	jne    0x40939f
  4093d3:	cmp    ebx,esp
  4093d5:	ret    
  4093d6:	push   edx
  4093d7:	xor    eax,0x83013665
  4093dc:	scas   eax,DWORD PTR es:[edi]
  4093dd:	xor    DWORD PTR [edx],edi
  4093df:	ja     0x4093ae
  4093e1:	scas   al,BYTE PTR es:[edi]
  4093e2:	or     ecx,DWORD PTR [edx+0x15]
  4093e5:	in     eax,0x4d
  4093e7:	pop    esi
  4093e8:	mov    dh,BYTE PTR [eax+0x7c26c0dd]
  4093ee:	and    dl,BYTE PTR ss:[edi]
  4093f1:	scas   al,BYTE PTR es:[edi]
  4093f2:	mov    esi,0x6f71abcf
  4093f7:	fcomp  st(5)
  4093f9:	setbe  BYTE PTR [edi-0x5f7a2df4]
  409400:	add    ecx,DWORD PTR [esi]
  409402:	adc    DWORD PTR [ebx+0x18a4b1f1],edx
  409408:	data16 data16 lock add BYTE PTR [ebp+0x2ef82b91],ch
  409411:	dec    edx
  409412:	ds adc eax,0xed8eadfa
  409418:	(bad)  
  409419:	xchg   ebp,eax
  40941a:	or     BYTE PTR [edx+0x3e],bl
  40941d:	cmp    al,0x3c
  40941f:	adc    bh,0x84
  409422:	jae    0x4093d1
  409424:	retf   0x2c54
  409427:	xchg   esi,eax
  409428:	test   al,0x40
  40942a:	pop    esp
  40942b:	mov    edx,DWORD PTR [edi+0xa]
  40942e:	out    0x6c,al
  409430:	mov    bl,0x90
  409432:	sbb    al,0xb2
  409434:	sub    esi,eax
  409436:	mov    eax,0xae94dbe2
  40943b:	mov    ds,WORD PTR [eax]
  40943d:	mov    al,ds:0xd4e641c8
  409442:	lahf   
  409443:	add    eax,0x637d5b84
  409448:	bound  ebx,QWORD PTR [ebp+0x56b347c]
  40944e:	mov    ds:0x295a7653,al
  409453:	iret   
  409454:	ins    BYTE PTR es:[edi],dx
  409455:	mov    dl,0xd
  409457:	repnz add dh,BYTE PTR [esi+0x75c8a234]
  40945e:	mov    esp,0xe246d019
  409463:	dec    esi
  409464:	or     ch,0x36
  409467:	sbb    DWORD PTR [esp+ebx*1-0x110e45c8],0xea9d49f0
  409472:	adc    BYTE PTR [edi],al
  409474:	adc    dh,BYTE PTR [esp+ebx*8]
  409477:	outs   dx,BYTE PTR ds:[esi]
  409478:	out    dx,al
  409479:	outs   dx,BYTE PTR ds:[esi]
  40947a:	cli    
  40947b:	mov    edx,esp
  40947d:	jecxz  0x409409
  40947f:	inc    esi
  409480:	mov    cl,0x9
  409482:	fcomp  st(5)
  409484:	mov    cl,cl
  409486:	aad    0xd8
  409488:	xlat   BYTE PTR ds:[ebx]
  409489:	fdiv   QWORD PTR [ecx-0xb45cc61]
  40948f:	fwait
  409490:	pop    ebx
  409491:	dec    eax
  409492:	push   ebp
  409493:	test   esp,esp
  409495:	fdivr  DWORD PTR [esi-0x6f6a2c39]
  40949b:	push   ds
  40949c:	mov    ebx,0xda8a95db
  4094a1:	inc    ebp
  4094a2:	sbb    ebp,ebp
  4094a4:	cmp    esp,DWORD PTR [esi]
  4094a6:	js     0x409521
  4094a8:	pop    edx
  4094a9:	inc    ecx
  4094aa:	gs inc ebp
  4094ac:	popa   
  4094ad:	push   0x2c69b8b5
  4094b2:	(bad)  
  4094b3:	(bad)  
  4094b4:	mov    esp,DWORD PTR [ebx+0x54]
  4094b7:	mov    ds:0x666aff48,al
  4094bc:	mov    dh,0xb5
  4094be:	scas   al,BYTE PTR es:[edi]
  4094bf:	ret    0xd165
  4094c2:	push   ds
  4094c3:	daa    
  4094c4:	mov    WORD PTR [esi-0x364184a9],ds
  4094ca:	sub    al,0xee
  4094cc:	xor    DWORD PTR [ecx+0x2],eax
  4094cf:	dec    esi
  4094d0:	test   DWORD PTR [esi-0x546dda12],esi
  4094d6:	mov    bl,0x42
  4094d8:	xchg   BYTE PTR [edx-0x51b96bdc],ch
  4094de:	(bad)  
  4094df:	lock lds edi,FWORD PTR [ebx-0x547eb644]
  4094e6:	leave  
  4094e7:	jnp    0x4094b3
  4094e9:	in     al,0x4d
  4094eb:	jg     0x40948b
  4094ed:	push   ds
  4094ee:	shl    DWORD PTR [esi],cl
  4094f0:	repz jp 0x40954a
  4094f3:	loop   0x409525
  4094f5:	(bad)  
  4094f6:	adc    eax,ecx
  4094f8:	mov    ds:0x73e11dc7,al
  4094fd:	xchg   ecx,eax
  4094fe:	scas   eax,DWORD PTR es:[edi]
  4094ff:	int3   
  409500:	sbb    eax,DWORD PTR [eax-0x13]
  409503:	adc    ebx,DWORD PTR [edi]
  409505:	inc    ecx
  409506:	dec    ebx
  409507:	stos   BYTE PTR es:[edi],al
  409508:	sbb    ebp,DWORD PTR [ebp+0x12]
  40950b:	das    
  40950c:	shl    BYTE PTR [ecx+0x5d],1
  40950f:	and    BYTE PTR [edx+ecx*4],bh
  409512:	(bad)  
  409513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409514:	aaa    
  409515:	push   0xffffff88
  409517:	sti    
  409518:	shl    DWORD PTR [ebp+0x68],0xef
  40951c:	test   BYTE PTR [edi+edi*1-0x6c4b3e],bh
  409523:	icebp  
  409524:	pop    ss
  409525:	aad    0x43
  409527:	xchg   ecx,eax
  409528:	dec    esp
  409529:	mov    eax,0x8204af2c
  40952e:	scas   al,BYTE PTR es:[edi]
  40952f:	xor    cl,dh
  409531:	(bad)  
  409533:	mov    al,0xee
  409535:	or     ebx,esi
  409537:	mov    al,ds:0x32294a92
  40953c:	pushf  
  40953d:	retf   0xc1b0
  409540:	mov    ds:0x464a3bd7,eax
  409545:	(bad)  
  409547:	pop    ebx
  409548:	stos   BYTE PTR es:[edi],al
  409549:	ret    0x3cfd
  40954c:	stc    
  40954d:	xchg   ch,bl
  40954f:	js     0x40955e
  409551:	adc    eax,0xf3a51a2e
  409556:	out    dx,eax
  409557:	sbb    eax,0x737565f3
  40955c:	xchg   edx,eax
  40955d:	inc    esi
  40955e:	jns    0x4095a4
  409560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409561:	int    0x34
  409563:	shl    BYTE PTR [edx],1
  409565:	call   0x949cae5b
  40956a:	leave  
  40956b:	sub    BYTE PTR [eiz*1-0x2b18fa04],ah
  409572:	add    eax,0xb670e8b3
  409577:	mov    cl,0x86
  409579:	rcl    BYTE PTR [ebx],1
  40957b:	pop    ebx
  40957c:	xor    DWORD PTR [ebp+edx*4-0x4f],edx
  409580:	adc    BYTE PTR [ebx],ch
  409582:	jbe    0x4095d0
  409584:	js     0x409525
  409586:	mov    ds:0xdf0134f,al
  40958b:	or     eax,0xa13d7e00
  409590:	pop    ebp
  409591:	pop    esi
  409592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409593:	mov    ds:0x114c3571,al
  409598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409599:	ror    BYTE PTR [edx+eax*2],1
  40959c:	ins    DWORD PTR es:[edi],dx
  40959d:	int    0x45
  40959f:	mov    edx,0x5d5c98a4
  4095a4:	shl    BYTE PTR [ecx+0xd7e3edb],cl
  4095aa:	push   eax
  4095ab:	in     al,0x9b
  4095ad:	xchg   ebx,eax
  4095ae:	push   esp
  4095af:	mov    es,WORD PTR [edi+0x375b3299]
  4095b5:	inc    edx
  4095b6:	jae    0x40955b
  4095b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b9:	xor    al,0x11
  4095bb:	jno    0x409574
  4095bd:	sahf   
  4095be:	retf   0x7282
  4095c1:	pusha  
  4095c2:	sbb    esi,DWORD PTR [ecx-0x2b3814eb]
  4095c8:	mov    ebp,0x805fcfee
  4095cd:	out    dx,eax
  4095ce:	int3   
  4095cf:	sub    BYTE PTR [ebx+0x13035a78],dl
  4095d5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d7:	or     eax,0xe9a5ac54
  4095dc:	jae    0x4095a8
  4095de:	les    ebp,FWORD PTR [edi]
  4095e0:	clc    
  4095e1:	jle    0x40958a
  4095e3:	repnz int3 
  4095e5:	popa   
  4095e6:	xor    ch,dl
  4095e8:	leave  
  4095e9:	(bad)  
  4095ea:	xor    DWORD PTR [eax+0x43ca0215],ecx
  4095f0:	and    edx,DWORD PTR [ebp-0x7de33bf6]
  4095f6:	dec    esi
  4095f7:	adc    eax,DWORD PTR [ebx]
  4095f9:	mov    bh,0xff
  4095fb:	push   ds
  4095fc:	(bad)  [esi+0x3bc27221]
  409602:	jp     0x40964e
  409604:	inc    edx
  409605:	mov    esp,0x62731413
  40960a:	ret    0x523
  40960d:	clc    
  40960e:	fiadd  DWORD PTR [ebx]
  409610:	xchg   ebx,eax
  409611:	mov    dh,0x9e
  409613:	(bad)  
  409615:	jae    0x409640
  409617:	call   0xb12853d9
  40961c:	jle    0x4095f2
  40961e:	dec    esp
  40961f:	les    edi,FWORD PTR [ebp+0x1b29cbbc]
  409625:	xchg   ebp,eax
  409626:	sub    BYTE PTR [ecx-0x7],ah
  409629:	cmp    al,0x95
  40962b:	mov    edx,DWORD PTR [esi]
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422598
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x68bca5c6
  4097de:	xchg   DWORD PTR ds:0x1841476a,esi
  4097e4:	sbb    BYTE PTR [esi+0x7e181812],bl
  4097ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097eb:	jp     0x409813
  4097ed:	cmp    DWORD PTR [eax+0xf],edi
  4097f0:	adc    eax,0x6a15aeb2
  4097f5:	and    dh,BYTE PTR [esi-0x544b4baf]
  4097fb:	push   edi
  4097fc:	imul   esi
  4097fe:	xlat   BYTE PTR ds:[ebx]
  4097ff:	and    al,0xe6
  409801:	dec    esp
  409802:	jg     0x4097da
  409804:	dec    BYTE PTR [esi+0x38db91c6]
  40980a:	in     eax,dx
  40980b:	jg     0x4097ff
  40980d:	retf   0x7fcf
  409810:	arpl   WORD PTR [edx+edx*8+0x41],di
  409814:	mov    ebx,ss
  409816:	mov    esp,0x8198eff9
  40981b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40981c:	mov    cl,0xb8
  40981e:	sar    ebx,1
  409820:	je     0x409825
  409822:	jp     0x409825
  409824:	mov    ecx,0xf26db6ad
  409829:	push   0x1dde8572
  40982e:	sub    eax,0xddfdc785
  409833:	cwde   
  409834:	xchg   edx,eax
  409835:	cwde   
  409836:	xlat   BYTE PTR ds:[ebx]
  409837:	cmp    DWORD PTR [edx-0x11],esp
  40983a:	repnz (bad) 
  40983c:	shl    DWORD PTR [ecx],1
  40983e:	adc    ch,BYTE PTR [ebx+0x2]
  409841:	dec    edx
  409842:	adc    esp,edx
  409844:	adc    eax,0x773f1107
  409849:	cmp    ebp,DWORD PTR [ecx]
  40984b:	dec    ecx
  40984c:	or     al,0x2d
  40984e:	or     bh,BYTE PTR [esp+ecx*1]
  409851:	(bad)  
  409852:	les    eax,FWORD PTR [edx+0x70e48a63]
  409858:	mov    edx,0xe8047b74
  40985d:	sahf   
  40985e:	adc    edx,DWORD PTR [ecx]
  409860:	iret   
  409861:	jmp    0xf82f70a6
  409866:	mov    dl,0x76
  409868:	lds    edi,FWORD PTR [eax]
  40986a:	(bad)  
  40986b:	pop    ecx
  40986c:	nop
  40986d:	shl    ch,cl
  40986f:	out    0x6,al
  409871:	mov    WORD PTR [esi+0x10],es
  409874:	push   edx
  409875:	and    al,0x88
  409877:	es cwde 
  409879:	lods   al,BYTE PTR ds:[esi]
  40987a:	mov    ch,0x5f
  40987c:	imul   edi,DWORD PTR [edx+0x4a119ba0],0x2306067f
  409886:	xor    dl,BYTE PTR [ecx+0x1]
  409889:	mov    dh,dh
  40988b:	out    0x7b,al
  40988d:	stc    
  40988e:	test   eax,0x13f74dad
  409893:	mov    esp,DWORD PTR [ebp-0x5485380b]
  409899:	inc    eax
  40989a:	push   ebp
  40989b:	jmp    0x4098f0
  40989d:	ins    DWORD PTR es:[edi],dx
  40989e:	shl    cl,1
  4098a0:	push   eax
  4098a1:	inc    ebp
  4098a2:	cdq    
  4098a3:	test   DWORD PTR [ecx],eax
  4098a5:	pop    ebp
  4098a6:	push   edi
  4098a7:	push   edi
  4098a8:	push   ebx
  4098a9:	mov    ebx,esi
  4098ab:	dec    edx
  4098ac:	std    
  4098ad:	sbb    al,0x82
  4098af:	lock xor DWORD PTR [eax-0x6c],ebx
  4098b3:	aaa    
  4098b4:	enter  0x5367,0x55
  4098b8:	sub    BYTE PTR ds:0x1d8f6cd6,bl
  4098be:	xchg   esi,eax
  4098bf:	cmp    esp,DWORD PTR [eax]
  4098c1:	in     al,0xea
  4098c3:	pushf  
  4098c4:	xchg   ebp,eax
  4098c5:	lods   eax,DWORD PTR ds:[esi]
  4098c6:	fld    QWORD PTR [bx+di+0x1e3b]
  4098cb:	idiv   DWORD PTR [edi+ecx*1+0x6c]
  4098cf:	push   cs
  4098d0:	add    al,0xb4
  4098d2:	not    dl
  4098d4:	dec    ebx
  4098d5:	adc    DWORD PTR [ebx-0x5d],0xfffffffa
  4098d9:	lea    edx,[esi]
  4098db:	fsub   DWORD PTR [edx-0x49]
  4098de:	mov    bl,0x5d
  4098e0:	jg     0x4098b8
  4098e2:	adc    BYTE PTR [ebx-0x4a],0xe7
  4098e6:	sbb    eax,0x335e0859
  4098eb:	jns    0x409882
  4098ed:	and    esi,DWORD PTR [esi+0x71]
  4098f0:	fldpi  
  4098f2:	pop    esi
  4098f3:	repz sbb BYTE PTR [esi+ecx*1+0x76391196],cl
  4098fb:	int    0x45
  4098fd:	call   0xbfc90083
  409902:	adc    DWORD PTR [edx],0x7d
  409905:	loope  0x409923
  409907:	adc    DWORD PTR [eax-0x6295cfbe],ebx
  40990d:	stos   BYTE PTR es:[edi],al
  40990e:	cld    
  40990f:	icebp  
  409910:	out    dx,eax
  409911:	sub    al,0x1a
  409913:	scas   al,BYTE PTR es:[edi]
  409914:	or     eax,0x19b28295
  409919:	xor    BYTE PTR [eax-0x4f],bl
  40991c:	push   es
  40991d:	out    dx,eax
  40991e:	dec    esp
  40991f:	sar    dl,cl
  409921:	mov    eax,ds:0xaf16a744
  409926:	dec    edx
  409927:	adc    eax,0x6389a84
  40992c:	jmp    0x40994d
  40992e:	lea    esi,[esi]
  409930:	pop    esp
  409931:	cdq    
  409932:	loope  0x40999b
  409934:	adc    al,cl
  409936:	retf   0x9879
  409939:	mov    ebx,0x2984df7
  40993e:	cmp    eax,0xba4a4505
  409943:	cmp    DWORD PTR ds:0x149d626c,esi
  409949:	jmp    DWORD PTR [esi+0x3d3fdd4d]
  40994f:	mov    ecx,0xc9b0c723
  409954:	push   0x8257019d
  409959:	xor    DWORD PTR [edi-0x22cb0786],0x21
  409960:	or     al,0x95
  409962:	fiadd  DWORD PTR [ebx-0x80]
  409965:	or     al,0x6b
  409967:	mov    dh,0xf0
  409969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40996a:	sub    ebp,eax
  40996c:	mov    dl,0x7e
  40996e:	push   edi
  40996f:	cli    
  409970:	add    dl,BYTE PTR ds:0xe0f5b90d
  409976:	mov    ch,0x6f
  409978:	fcmove st,st(5)
  40997a:	lea    esi,[bp+di+0x2eec]
  40997f:	dec    ebp
  409980:	cdq    
  409981:	fnstsw WORD PTR [edx-0x3ffa8157]
  409987:	test   eax,0xe2861bce
  40998c:	mov    al,bh
  40998e:	push   esp
  40998f:	inc    edx
  409990:	inc    edi
  409991:	sbb    BYTE PTR [esi+edi*1],ch
  409994:	add    BYTE PTR ss:[esp+edi*1],0xd
  409999:	pop    edi
  40999a:	das    
  40999b:	push   ebp
  40999c:	sub    eax,0x7bbe3dba
  4099a1:	shl    BYTE PTR [eax],cl
  4099a3:	add    eax,0x52183919
  4099a8:	and    ch,ah
  4099aa:	jle    0x4099ba
  4099ac:	xchg   ebp,eax
  4099ad:	bound  edi,QWORD PTR [edx]
  4099af:	dec    ecx
  4099b0:	ret    
  4099b1:	pop    ebx
  4099b2:	ds mov bl,0xc9
  4099b5:	inc    edi
  4099b6:	or     DWORD PTR [ecx-0x55dce5c7],edx
  4099bc:	es (bad) 
  4099bf:	sub    ebp,DWORD PTR [esi+0x37]
  4099c2:	pusha  
  4099c3:	cmp    edx,DWORD PTR [ebx+0x54dcc3ab]
  4099c9:	ins    BYTE PTR es:[edi],dx
  4099ca:	xor    al,0xef
  4099cc:	sub    al,0x5
  4099ce:	mov    ebp,0x79f0f12d
  4099d3:	or     al,0x21
  4099d5:	ror    BYTE PTR [ecx+0x2c30d659],0x5e
  4099dc:	cmp    ebp,DWORD PTR [ebx-0x5264dc8]
  4099e2:	inc    edx
  4099e3:	popa   
  4099e4:	inc    bp
  4099e6:	cmp    al,0xd2
  4099e8:	mov    ebp,0xef6235bc
  4099ed:	mov    eax,ds:0x99c430ab
  4099f2:	enter  0xdeb8,0xdb
  4099f6:	or     cl,BYTE PTR [edi+0xdb4548]
  4099fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099fd:	push   es
  4099fe:	add    DWORD PTR [edx-0x6a89f9b7],edx
  409a04:	ja     0x40999e
  409a06:	push   ebx
  409a07:	lahf   
  409a08:	inc    BYTE PTR [edx+0x1e5cd7c2]
  409a0e:	or     ecx,esi
  409a10:	call   0x67ed:0x2ee97c5
  409a17:	push   es
  409a18:	adc    BYTE PTR [ecx+ebx*8+0x15],ah
  409a1c:	jo     0x409a9d
  409a1e:	mov    ecx,0x3fdaeb28
  409a23:	imul   ebx,esp,0x51
  409a26:	(bad)  
  409a27:	and    BYTE PTR ds:0xc910de82,ah
  409a2d:	fnsave [ecx+0x3c]
  409a30:	loop   0x409a89
  409a32:	mov    esi,0xbd2de347
  409a37:	dec    al
  409a39:	or     DWORD PTR [ecx],eax
  409a3b:	fistp  DWORD PTR [ebx]
  409a3d:	nop
  409a3e:	ins    BYTE PTR es:[edi],dx
  409a3f:	test   al,0x58
  409a41:	mov    ebp,0xff294015
  409a46:	cli    
  409a47:	int    0x22
  409a49:	xchg   ecx,eax
  409a4a:	or     BYTE PTR fs:[edi+0x61],cl
  409a4e:	repnz dec ecx
  409a50:	int3   
  409a51:	sahf   
  409a52:	add    al,0x29
  409a54:	daa    
  409a55:	inc    ebp
  409a56:	xor    eax,0xcc86bbc
  409a5b:	dec    edi
  409a5c:	popa   
  409a5d:	lds    esi,FWORD PTR [eax-0x5a54a721]
  409a63:	lahf   
  409a64:	ror    ebp,cl
  409a66:	push   cs
  409a67:	xor    al,0xf5
  409a69:	out    dx,al
  409a6a:	sti    
  409a6b:	sar    BYTE PTR [esi-0x7b],0x99
  409a6f:	jmp    DWORD PTR [ecx]
  409a71:	push   ebp
  409a72:	dec    ecx
  409a73:	adc    eax,0x458e8d20
  409a78:	and    DWORD PTR ds:0xd0105213,ebx
  409a7e:	aaa    
  409a7f:	inc    eax
  409a80:	cmp    ah,BYTE PTR [ecx-0x2d2b0bf]
  409a86:	adc    dh,BYTE PTR [ecx+esi*2]
  409a89:	ins    BYTE PTR es:[edi],dx
  409a8a:	cdq    
  409a8b:	hlt    
  409a8c:	xor    eax,0xac680874
  409a91:	xchg   edx,eax
  409a92:	repnz pushf 
  409a94:	test   al,0xbf
  409a96:	pop    edi
  409a97:	mov    esi,0xc9b0259d
  409a9c:	iret   
  409a9d:	add    edi,DWORD PTR [ebx]
  409a9f:	push   edx
  409aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aa1:	sub    eax,0x810578cf
  409aa6:	jne    0x409a6f
  409aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa9:	addr16 jbe 0x409ade
  409aac:	test   DWORD PTR ds:0x3b17ad71,ebp
  409ab2:	add    al,0x85
  409ab4:	push   es
  409ab5:	test   eax,0xdfcd9ab3
  409aba:	mov    esi,0xd2315d49
  409abf:	(bad)  
  409ac0:	jne    0x409abf
  409ac2:	xchg   esi,eax
  409ac3:	push   edi
  409ac4:	fcomp  QWORD PTR [ebp+ebp*1+0x39]
  409ac8:	icebp  
  409ac9:	ja     0x409b1d
  409acb:	stos   DWORD PTR es:[edi],eax
  409acc:	add    BYTE PTR [ebx+0x69],ch
  409acf:	sar    DWORD PTR [edx-0x28],cl
  409ad2:	sti    
  409ad3:	mov    al,ds:0x896abc0e
  409ad8:	ins    BYTE PTR es:[edi],dx
  409ad9:	jne    0x409ab0
  409adb:	int3   
  409adc:	(bad)  
  409add:	scas   al,BYTE PTR es:[edi]
  409ade:	fs sub edi,ebp
  409ae1:	xchg   ebx,eax
  409ae2:	fcmovnbe st,st(1)
  409ae4:	sub    DWORD PTR [ebp-0x71d02c34],esp
  409aea:	inc    eax
  409aeb:	fbstp  TBYTE PTR [edi-0x30]
  409aee:	sub    DWORD PTR [esi+0x56d9b03],edx
  409af4:	pop    es
  409af5:	xor    DWORD PTR [esi],edi
  409af7:	inc    esi
  409af8:	adc    BYTE PTR [edx+0x67],ch
  409afb:	sub    eax,0xc79d2969
  409b00:	pop    edi
  409b01:	xor    al,0x86
  409b03:	mov    al,0xc4
  409b05:	add    cl,bh
  409b07:	call   0x1d8d:0xe95783fc
  409b0e:	jmp    0x9f222289
  409b13:	and    BYTE PTR [edi],al
  409b15:	ja     0x409b18
  409b17:	repnz dec edx
  409b19:	push   eax
  409b1a:	in     eax,dx
  409b1b:	xchg   DWORD PTR [ecx-0x1e],ecx
  409b1e:	jg     0x409b94
  409b20:	xchg   ebx,eax
  409b21:	loopne 0x409b92
  409b23:	test   DWORD PTR [ebp+0x3b],ecx
  409b26:	push   ebp
  409b27:	ss loopne 0x409aee
  409b2a:	xor    al,0xc
  409b2c:	bound  ebx,QWORD PTR [esp+edi*8-0x698393b5]
  409b33:	cs add al,0x67
  409b36:	ds jmp 0xedb15d36
  409b3c:	call   0x7838:0x252f5b01
  409b43:	repnz into 
  409b45:	push   ebx
  409b46:	mov    eax,0x3c03a22a
  409b4b:	enter  0x3819,0x8c
  409b4f:	push   eax
  409b50:	mov    dh,0xaa
  409b52:	push   esi
  409b53:	inc    eax
  409b54:	shl    DWORD PTR [ecx+0x54518180],1
  409b5a:	addr16 gs pop ds
  409b5d:	xor    al,0xf9
  409b5f:	in     al,0xa2
  409b61:	adc    eax,0xe87b8da8
  409b66:	fisubr DWORD PTR [edi-0x3a72be36]
  409b6c:	in     eax,dx
  409b6d:	(bad)  
  409b6e:	jne    0x409b01
  409b70:	clc    
  409b71:	ficom  WORD PTR [edi+0x18]
  409b74:	out    dx,eax
  409b75:	or     eax,0x5ec5f9c5
  409b7a:	repz loop 0x409bf6
  409b7d:	call   0xcaa6:0xe64a0362
  409b84:	dec    DWORD PTR ds:0xc7af8122
  409b8a:	idiv   DWORD PTR [ecx+0x7294e49e]
  409b90:	mov    dl,0x6d
  409b92:	mov    bh,BYTE PTR [esi+edx*8-0x3e55d5bf]
  409b99:	dec    ecx
  409b9a:	das    
  409b9b:	(bad)  
  409b9d:	(bad)  
  409b9e:	push   edi
  409b9f:	outs   dx,BYTE PTR ds:[esi]
  409ba0:	push   ss
  409ba1:	or     eax,0xf64e937f
  409ba6:	add    dl,al
  409ba8:	sbb    eax,0xbd233e0
  409bad:	ret    0x503
  409bb0:	cwde   
  409bb1:	and    eax,0x45890042
  409bb6:	adc    al,0x8b
  409bb8:	inc    ebp
  409bb9:	mov    al,ds:0xfa44d8b
  409bbe:	lods   al,BYTE PTR ds:[esi]
  409bbf:	enter  0xc102,0xe9
  409bc3:	add    cl,BYTE PTR [ebx+0x558ba04d]
  409bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422598
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422598
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [esp+eax*1+0x40],0xffffffe5
  409ce0:	stos   BYTE PTR es:[edi],al
  409ce1:	int    0x39
  409ce3:	sbb    BYTE PTR [eax],bl
  409ce5:	sahf   
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	sbb    BYTE PTR [ecx],dl
  409cea:	mov    ebp,0x1d18293f
  409cef:	aaa    
  409cf0:	jmp    0xfd5ebd7c
  409cf5:	and    DWORD PTR [eax],0xf9ce5e45
  409cfb:	adc    ebx,eax
  409cfd:	imul   esp,ecx,0xffffffe8
  409d00:	inc    esi
  409d01:	rcr    DWORD PTR [ebp+ecx*4-0x52c71403],1
  409d08:	loop   0x409d0c
  409d0a:	adc    eax,esi
  409d0c:	cdq    
  409d0d:	arpl   WORD PTR [ebx+0x33109fb8],bp
  409d13:	mov    BYTE PTR [edi+0x2f],ah
  409d16:	adc    DWORD PTR [edi+0x12],eax
  409d19:	dec    ebx
  409d1a:	je     0x409d1f
  409d1c:	mov    BYTE PTR [ebx+0xd775697],bh
  409d22:	lods   eax,DWORD PTR ds:[esi]
  409d23:	cwde   
  409d24:	hlt    
  409d25:	outs   dx,BYTE PTR ds:[esi]
  409d26:	xchg   ecx,eax
  409d27:	xor    dh,BYTE PTR [ecx+ecx*8]
  409d2a:	mov    esp,0xdc67cdd1
  409d2f:	cmp    al,0x2e
  409d31:	mov    bl,0x7a
  409d33:	mov    ebp,0xd33ab5f8
  409d38:	leave  
  409d39:	cdq    
  409d3a:	and    DWORD PTR [esi+0x65873d65],edx
  409d40:	xor    DWORD PTR [ecx+0x306c2f9a],edx
  409d46:	out    dx,al
  409d47:	out    0xcf,eax
  409d49:	scas   al,BYTE PTR es:[edi]
  409d4a:	push   cs
  409d4b:	sar    DWORD PTR [eax],0xdb
  409d4e:	mov    ds:0xb10a00b,al
  409d53:	inc    ebp
  409d54:	add    eax,0x6aaf8e19
  409d59:	test   ecx,0xef5150df
  409d5f:	shr    BYTE PTR [edi-0x34],cl
  409d62:	jnp    0x409dc0
  409d64:	hlt    
  409d65:	inc    ecx
  409d66:	psraw  mm3,QWORD PTR [esi+0x26213a51]
  409d6d:	int    0x5b
  409d6f:	and    ch,bl
  409d71:	fidivr DWORD PTR [esi]
  409d73:	and    BYTE PTR [ebp+ecx*8+0x3802685e],cl
  409d7a:	cmp    BYTE PTR [ecx],ch
  409d7c:	aad    0xc5
  409d7e:	lods   eax,DWORD PTR ss:[esi]
  409d80:	mov    es,ebx
  409d82:	in     eax,0x60
  409d84:	stos   BYTE PTR es:[edi],al
  409d85:	ror    ah,1
  409d87:	push   edx
  409d88:	xor    cl,bl
  409d8a:	in     al,0x10
  409d8c:	leave  
  409d8d:	scas   al,BYTE PTR es:[edi]
  409d8e:	outs   dx,BYTE PTR ds:[esi]
  409d8f:	sbb    BYTE PTR [esi-0x1d],ah
  409d92:	mov    ch,0x25
  409d94:	imul   edx,DWORD PTR [edx+0x3],0x6d0100d7
  409d9b:	jecxz  0x409d91
  409d9d:	push   ebp
  409d9e:	(bad)  
  409da0:	sbb    bh,cl
  409da2:	mov    edx,0x1551022f
  409da7:	stos   DWORD PTR es:[edi],eax
  409da8:	jmp    0x1f9e2d68
  409dad:	jmp    0xe38e1839
  409db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db4:	sbb    DWORD PTR fs:[ebp-0x67],edx
  409db8:	add    al,0xfb
  409dba:	test   al,0x4
  409dbc:	(bad)  
  409dbd:	jno    0x409dcf
  409dbf:	(bad)  
  409dc0:	fisub  DWORD PTR [eax]
  409dc2:	sbb    cl,BYTE PTR [eax-0x15c9eb34]
  409dc8:	div    DWORD PTR gs:[esi-0x2e]
  409dcc:	lock push edi
  409dce:	test   eax,0x46303a07
  409dd4:	jnp    0x409dfe
  409dd6:	dec    ebp
  409dd7:	cli    
  409dd8:	jmp    0x6f9b:0x1daaafaa
  409ddf:	popa   
  409de0:	add    BYTE PTR [eax+ebp*2-0x3e],0x71
  409de5:	mov    BYTE PTR [ebx-0x1bc706c6],ah
  409deb:	mov    ebx,0x9d25fe40
  409df0:	add    BYTE PTR [edi+0x39],bl
  409df3:	adc    DWORD PTR [ebx+esi*1+0x151099d],edx
  409dfa:	add    ecx,0xffffffd8
  409dfd:	fimul  WORD PTR [ecx+eiz*4-0x10]
  409e01:	or     eax,0xb704f3a3
  409e06:	xchg   DWORD PTR [edi+0x0],ebp
  409e09:	mov    ds:0x745a641d,al
  409e0e:	in     al,dx
  409e0f:	popa   
  409e10:	pop    ecx
  409e11:	mov    ch,0xf2
  409e13:	call   0x553a1c39
  409e18:	pop    esp
  409e19:	and    eax,0xb23bb19e
  409e1e:	xchg   al,dh
  409e20:	push   eax
  409e21:	gs pop ecx
  409e23:	or     DWORD PTR ds:0xf3cc1287,esp
  409e29:	fwait
  409e2a:	and    BYTE PTR [esi],0x77
  409e2d:	sar    esp,cl
  409e2f:	xchg   edi,eax
  409e30:	adc    BYTE PTR [esi-0x63],dl
  409e33:	inc    esp
  409e34:	adc    al,0x3b
  409e36:	scas   al,BYTE PTR es:[edi]
  409e37:	ret    0xb576
  409e3a:	xor    DWORD PTR [ecx-0x45],0x43eadd1d
  409e41:	daa    
  409e42:	push   cs
  409e43:	mov    ds:0xdb490d3b,al
  409e48:	mov    cl,0xdc
  409e4a:	xchg   esi,eax
  409e4b:	jb     0x409e1b
  409e4d:	in     al,dx
  409e4e:	sbb    BYTE PTR [esi-0x5ffd1952],al
  409e54:	gs retf 0xde3b
  409e58:	icebp  
  409e59:	mov    ch,0xa4
  409e5b:	fstp   TBYTE PTR gs:[ebp+0x3d828c36]
  409e62:	jae    0x409e3d
  409e64:	bound  ecx,QWORD PTR [ebp+esi*8+0x2a]
  409e68:	xor    ebp,DWORD PTR [ecx+0x60]
  409e6b:	mov    al,ds:0x37b475b3
  409e70:	pop    edi
  409e71:	pop    ss
  409e72:	xchg   ecx,eax
  409e73:	cmp    DWORD PTR [edx],ecx
  409e75:	push   ebx
  409e76:	push   cs
  409e77:	mov    ch,BYTE PTR [esi-0x4c869ee3]
  409e7d:	jle    0x409ee3
  409e7f:	sbb    al,0x86
  409e81:	xor    eax,0x272fb61e
  409e86:	cmp    BYTE PTR [edx+0x3a],0x23
  409e8a:	imul   ecx,DWORD PTR [esi],0xd322662f
  409e90:	outs   dx,BYTE PTR ds:[esi]
  409e91:	scas   eax,DWORD PTR es:[edi]
  409e92:	rol    BYTE PTR [ecx-0x44746982],cl
  409e98:	in     eax,0xa1
  409e9a:	mov    DWORD PTR [ebp-0x18],0xc38c5165
  409ea1:	nop    DWORD PTR [ebx]
  409ea4:	and    eax,0x5f8d9288
  409ea9:	push   ebp
  409eaa:	fcmovne st,st(5)
  409eac:	imul   ebx,ebp,0x35
  409eaf:	ret    0x746f
  409eb2:	pop    ebp
  409eb3:	mov    dl,0x74
  409eb5:	dec    DWORD PTR [ebx+0x158611f4]
  409ebb:	mov    al,0x51
  409ebd:	jne    0x409f17
  409ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec0:	out    0x37,eax
  409ec2:	shr    BYTE PTR [ebx-0x4d],1
  409ec5:	je     0x409e49
  409ec7:	fadd   QWORD PTR ds:0x13268e15
  409ecd:	add    eax,DWORD PTR [edi]
  409ecf:	fcmovnb st,st(0)
  409ed1:	inc    edi
  409ed2:	jno    0x409e70
  409ed4:	push   0xdb05b506
  409ed9:	lods   al,BYTE PTR ds:[esi]
  409eda:	iret   
  409edb:	call   DWORD PTR [ecx-0xf]
  409ede:	sub    al,0x53
  409ee0:	jl     0x409ea9
  409ee2:	jnp    0x409ef0
  409ee4:	dec    ebp
  409ee5:	jge    0x409ee0
  409ee7:	jge    0x409f40
  409ee9:	rcr    ah,cl
  409eeb:	push   eax
  409eec:	ins    BYTE PTR es:[edi],dx
  409eed:	ret    
  409eee:	(bad)  
  409eef:	dec    eax
  409ef0:	push   ebx
  409ef1:	test   ebp,esp
  409ef3:	aam    0x5a
  409ef5:	push   0xffffffd0
  409ef7:	cmp    edi,DWORD PTR [eax]
  409ef9:	mov    cl,0xe8
  409efb:	data16 aad 0x3f
  409efe:	stos   DWORD PTR es:[edi],eax
  409eff:	mov    eax,ds:0xd6e8968
  409f04:	inc    ebp
  409f05:	mov    esp,0xe11fb99a
  409f0a:	fdivr  st(6),st
  409f0c:	sub    BYTE PTR [ecx+eiz*8-0x33c30e2a],dl
  409f13:	sbb    DWORD PTR [edx],edx
  409f15:	xor    BYTE PTR ds:0xb0fc7eb1,dl
  409f1b:	jge    0x409f5a
  409f1d:	daa    
  409f1e:	inc    esi
  409f1f:	cmp    eax,0xe0ce3c58
  409f24:	dec    DWORD PTR [eax+0x29]
  409f27:	imul   ecx,DWORD PTR [ecx-0x1e],0x4798a06f
  409f2e:	cmp    ecx,DWORD PTR [ecx-0x2ff4df27]
  409f34:	adc    al,dl
  409f36:	sub    DWORD PTR [ebx+0x3c7079a0],0x2d173791
  409f40:	dec    ecx
  409f41:	or     BYTE PTR [eax+0x78],bh
  409f44:	aaa    
  409f45:	xlat   BYTE PTR ds:[ebx]
  409f46:	mov    edi,0xfe0d8e4e
  409f4b:	xor    al,0x7a
  409f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f4e:	mov    esp,0x72006255
  409f53:	cmp    al,0x2d
  409f55:	jg     0x409f4a
  409f57:	lods   eax,DWORD PTR ds:[esi]
  409f58:	outs   dx,DWORD PTR ds:[esi]
  409f59:	mov    cl,0x41
  409f5b:	push   ebx
  409f5c:	test   BYTE PTR [edx-0x33],dh
  409f5f:	cmp    eax,0xc43e1f21
  409f64:	call   0xe5bb6dd3
  409f69:	cs js  0x409f0e
  409f6c:	retf   
  409f6d:	jns    0x409fdf
  409f6f:	and    eax,DWORD PTR [edx+0x7eaf86dd]
  409f75:	sbb    ecx,DWORD PTR [ebx-0x38d317d]
  409f7b:	in     al,dx
  409f7c:	or     ebx,eax
  409f7e:	xor    eax,0x17bc034a
  409f83:	and    dl,ch
  409f85:	mov    ebp,DWORD PTR [edi-0x6d04d646]
  409f8b:	xchg   DWORD PTR [edx+ebp*4-0x14],edi
  409f8f:	jmp    0xae8c:0xf5c46526
  409f96:	xchg   ecx,eax
  409f97:	int    0x4d
  409f99:	pop    ebp
  409f9a:	ja     0x409ff4
  409f9c:	jg     0x409fba
  409f9e:	jg     0x409f6e
  409fa0:	cmp    DWORD PTR [esi+0x63],ebx
  409fa3:	das    
  409fa4:	nop
  409fa5:	icebp  
  409fa6:	icebp  
  409fa7:	pusha  
  409fa8:	push   esp
  409fa9:	test   BYTE PTR [edi],dh
  409fab:	test   al,0xf6
  409fad:	rol    ecx,1
  409faf:	push   ebx
  409fb0:	outs   dx,DWORD PTR ds:[esi]
  409fb1:	ins    BYTE PTR es:[edi],dx
  409fb2:	inc    ecx
  409fb3:	fs jle 0x40a008
  409fb6:	add    ebx,DWORD PTR [edx]
  409fb8:	lods   eax,DWORD PTR ds:[esi]
  409fb9:	ja     0x409f44
  409fbb:	fdiv   st,st(3)
  409fbd:	jmp    0x6ba4:0xfe22c549
  409fc4:	pop    eax
  409fc5:	push   edi
  409fc6:	sub    BYTE PTR [esi+0x41],0x19
  409fca:	fbld   TBYTE PTR [ecx+0x3d9dcbd0]
  409fd0:	or     al,0xfc
  409fd2:	jge    0x40a008
  409fd4:	pop    ss
  409fd5:	jmp    0x6e6b3dd6
  409fda:	pusha  
  409fdb:	imul   edx,DWORD PTR [edx],0x76
  409fde:	push   esp
  409fdf:	ficomp DWORD PTR [ebx+0x1e]
  409fe2:	xor    edx,DWORD PTR [edi+0x55]
  409fe5:	push   es
  409fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fe7:	aaa    
  409fe8:	iret   
  409fe9:	mov    ecx,0x589ac2b4
  409fee:	leave  
  409fef:	xchg   ecx,eax
  409ff0:	push   DWORD PTR ds:0x1b9f6f4b
  409ff6:	jb     0x409fc5
  409ff8:	repnz inc edi
  409ffa:	cmp    DWORD PTR [ebx],0xb3e839da
  40a000:	jnp    0x409fef
  40a002:	mov    esi,0x7bf585d4
  40a007:	xchg   esi,eax
  40a008:	sbb    eax,0xd64082a7
  40a00d:	fld    DWORD PTR [eax+0x6d]
  40a010:	aam    0x3
  40a012:	outs   dx,BYTE PTR ds:[esi]
  40a013:	lods   eax,DWORD PTR ds:[esi]
  40a014:	xchg   ecx,ecx
  40a016:	into   
  40a017:	fistp  WORD PTR [ebx+ecx*8]
  40a01a:	daa    
  40a01b:	xchg   eax,esi
  40a01d:	and    BYTE PTR [edi+0x31],ch
  40a020:	push   ecx
  40a021:	pop    ds
  40a022:	lods   eax,DWORD PTR ds:[esi]
  40a023:	in     al,dx
  40a024:	and    eax,0x4671d38c
  40a029:	cmp    bh,BYTE PTR [esp+eax*4+0x568f87ed]
  40a030:	sbb    BYTE PTR [ebp-0x1d],cl
  40a033:	pop    ecx
  40a034:	jbe    0x40a004
  40a036:	push   ebp
  40a037:	and    al,0xa4
  40a039:	push   cs
  40a03a:	xchg   ebp,edx
  40a03c:	std    
  40a03d:	dec    eax
  40a03e:	add    dh,ch
  40a040:	(bad)  
  40a041:	loopne 0x40a068
  40a043:	ins    DWORD PTR es:[edi],dx
  40a044:	jl     0x40a053
  40a046:	cmc    
  40a047:	push   0xff701be0
  40a04c:	ret    0xae43
  40a04f:	xchg   esp,eax
  40a050:	fisubr WORD PTR [ebx+0x22020c3b]
  40a056:	or     eax,DWORD PTR [ebp+0x1307132f]
  40a05c:	mov    esp,0x515ddfcb
  40a061:	out    0x1d,al
  40a063:	or     al,0xb0
  40a065:	das    
  40a066:	shl    BYTE PTR [ebp+0x6d68eadd],cl
  40a06c:	push   ebx
  40a06d:	es pop es
  40a06f:	mov    cl,0x6
  40a071:	fucom  st(2)
  40a073:	es mov bh,0xa9
  40a076:	jb     0x40a0a0
  40a078:	dec    eax
  40a079:	or     DWORD PTR [eax-0x79],esi
  40a07c:	scas   al,BYTE PTR es:[edi]
  40a07d:	jg     0x40a0e0
  40a07f:	repz or DWORD PTR [eax-0x4a63e6c0],esi
  40a086:	or     esi,esp
  40a088:	dec    sp
  40a08a:	or     bl,bh
  40a08c:	xchg   ebp,eax
  40a08d:	retf   
  40a08e:	add    DWORD PTR [edx-0x4e],0xa
  40a092:	mov    ds:0x610a2c86,eax
  40a097:	mov    ebp,DWORD PTR [esi+ebx*1-0x78]
  40a09b:	call   0x7d9d8250
  40a0a0:	push   esp
  40a0a1:	jo     0x40a077
  40a0a3:	xor    DWORD PTR [ecx],0xffffff9a
  40a0a6:	push   esp
  40a0a7:	sti    
  40a0a8:	xchg   esi,eax
  40a0a9:	cmp    cl,BYTE PTR [ebx+0x7d8b047e]
  40a0af:	adc    al,0x33
  40a0b1:	ror    BYTE PTR [ebx],cl
  40a0b3:	push   ebp
  40a0b4:	nop
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	fsub   st,st(1)
  40a12a:	pop    ebp
  40a12b:	jo     0x40a17f
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi-0x40e7e7ee],bl
  40a135:	inc    eax
  40a136:	sbb    eax,0xeb74082e
  40a13b:	add    ah,al
  40a13d:	mov    al,0x77
  40a13f:	add    edi,DWORD PTR [ecx+edx*2-0x7cad64af]
  40a146:	xlat   BYTE PTR ds:[ebx]
  40a147:	fdivr  DWORD PTR [eax+0x7cb592a4]
  40a14d:	sub    edx,DWORD PTR [edi]
  40a14f:	jb     0x40a172
  40a151:	pop    ebp
  40a152:	lods   al,BYTE PTR ds:[esi]
  40a153:	in     al,dx
  40a154:	xor    DWORD PTR [edi+ecx*4-0x57],esp
  40a158:	push   esp
  40a159:	mov    BYTE PTR [eax+0x7c589910],0xd8
  40a160:	test   DWORD PTR [edi+0x459e7150],0x66d44a06
  40a16a:	mov    eax,0xd1d11b81
  40a16f:	out    0xbf,eax
  40a171:	loop   0x40a175
  40a173:	stos   DWORD PTR es:[edi],eax
  40a174:	imul   eax
  40a176:	dec    ebp
  40a177:	es mov ebp,0x5a685c23
  40a17d:	mov    al,ds:0x126d9d01
  40a182:	push   ebx
  40a183:	call   0xe1250131
  40a188:	fadd   DWORD PTR [ebx+0x5b]
  40a18b:	push   ebp
  40a18c:	(bad)  
  40a18d:	push   esi
  40a18e:	mov    al,0xf6
  40a190:	jmp    0xa1ba:0xc573e2d9
  40a197:	inc    ebx
  40a198:	add    eax,0xabc800f5
  40a19d:	xor    eax,DWORD PTR [eax]
  40a19f:	bound  esi,QWORD PTR [edx+0x2e]
  40a1a2:	pushf  
  40a1a3:	je     0x40a1b1
  40a1a5:	or     DWORD PTR [ebp+0x2ac7be77],eax
  40a1ab:	jg     0x40a1f9
  40a1ad:	in     eax,0xb
  40a1af:	dec    edi
  40a1b0:	sti    
  40a1b1:	jmp    0x89e3:0xac34a915
  40a1b8:	std    
  40a1b9:	adc    DWORD PTR [ecx],edx
  40a1bb:	test   si,bp
  40a1be:	jns    0x40a22d
  40a1c0:	pop    eax
  40a1c1:	gs jne 0x40a1ac
  40a1c4:	mov    ds:0xc9aa68e2,al
  40a1c9:	out    dx,al
  40a1ca:	test   eax,0x33a1822b
  40a1cf:	pop    esi
  40a1d0:	cmp    al,0x1
  40a1d2:	enter  0x293a,0x6f
  40a1d6:	(bad)  
  40a1d8:	push   ebx
  40a1d9:	cmp    esi,DWORD PTR [eax+0x33e61669]
  40a1df:	loope  0x40a212
  40a1e1:	out    dx,al
  40a1e2:	mov    ebx,0x17074dd0
  40a1e7:	xchg   ebx,eax
  40a1e8:	mov    ds:0x36737c7d,al
  40a1ed:	inc    ebp
  40a1ee:	pop    edx
  40a1ef:	push   ss
  40a1f0:	scas   al,BYTE PTR es:[edi]
  40a1f1:	pop    ss
  40a1f2:	xchg   edx,eax
  40a1f3:	stos   DWORD PTR es:[edi],eax
  40a1f4:	dec    ebx
  40a1f5:	mov    edi,0xf822025d
  40a1fa:	ret    
  40a1fb:	mov    ds:0x4302ece8,al
  40a200:	mov    ecx,DWORD PTR [ecx-0x58]
  40a203:	push   eax
  40a204:	push   edi
  40a206:	ret    
  40a207:	shl    DWORD PTR [edi],0xbc
  40a20a:	retf   0xa900
  40a20d:	cwde   
  40a20e:	dec    ebp
  40a20f:	mov    al,0x7e
  40a211:	xor    esi,eax
  40a213:	jmp    0x40a19c
  40a215:	lds    ebx,FWORD PTR [ebp+0x5e4436bd]
  40a21b:	scas   eax,DWORD PTR es:[edi]
  40a21c:	int3   
  40a21d:	cmp    al,0x10
  40a21f:	(bad)  
  40a220:	cli    
  40a221:	xchg   BYTE PTR [ebp-0x3ddbf87c],dl
  40a227:	and    al,0xeb
  40a229:	aad    0xea
  40a22b:	fcom   QWORD PTR [ebp+0x154122b6]
  40a231:	jl     0x40a240
  40a233:	test   dl,cl
  40a235:	inc    esp
  40a236:	stc    
  40a237:	in     eax,dx
  40a238:	fidiv  DWORD PTR [esi+eax*1-0x25caff79]
  40a23f:	(bad)  
  40a240:	ss inc edi
  40a242:	cdq    
  40a243:	push   cs
  40a244:	repnz and esp,DWORD PTR [edi]
  40a247:	cmp    al,0x51
  40a249:	dec    esp
  40a24a:	mov    cl,0xab
  40a24c:	fcom   st(0)
  40a24e:	xor    ecx,DWORD PTR [ebx+0x3f]
  40a251:	sahf   
  40a252:	push   0x39
  40a254:	pop    esp
  40a255:	pop    esi
  40a256:	add    DWORD PTR [ebx+0x1f],esi
  40a259:	rcl    edi,1
  40a25b:	fcomp  QWORD PTR [ebp-0xc]
  40a25e:	mov    dh,0xb6
  40a260:	outs   dx,DWORD PTR ds:[esi]
  40a261:	mov    ebp,0xd266244b
  40a266:	out    dx,al
  40a267:	adc    dh,BYTE PTR es:[edx+0x56]
  40a26b:	stos   BYTE PTR es:[edi],al
  40a26c:	jle    0x40a2bc
  40a26e:	add    edi,DWORD PTR [ecx+0x362cb5af]
  40a274:	xor    DWORD PTR [eax-0x6c98312],edi
  40a27a:	sub    edx,DWORD PTR [ecx]
  40a27c:	(bad)  
  40a27d:	test   al,0x78
  40a27f:	stos   DWORD PTR es:[edi],eax
  40a280:	jl     0x40a29f
  40a282:	(bad)
  40a286:	fldcw  WORD PTR [edx]
  40a288:	ss in  eax,0x1a
  40a28b:	add    eax,0x1e46e53e
  40a290:	dec    esi
  40a291:	adc    al,0xa
  40a293:	inc    edi
  40a294:	inc    eax
  40a295:	(bad)  
  40a296:	iret   
  40a297:	icebp  
  40a298:	push   0xffffff8d
  40a29a:	sar    BYTE PTR [edi-0x42],1
  40a29d:	adc    BYTE PTR [eax+ebp*8-0x3c28250f],ah
  40a2a4:	stos   DWORD PTR es:[edi],eax
  40a2a5:	adc    ah,BYTE PTR [eax+0x3c]
  40a2a8:	pop    es
  40a2a9:	jmp    0xd3a3ab4
  40a2ae:	push   ecx
  40a2af:	and    eax,0xe3c0e4c
  40a2b4:	push   ebp
  40a2b5:	adc    DWORD PTR [edx],ebp
  40a2b7:	daa    
  40a2b8:	xor    DWORD PTR ds:0xa17d927e,0xe52f3ddf
  40a2c2:	sub    esp,DWORD PTR [eax]
  40a2c4:	jecxz  0x40a259
  40a2c6:	sbb    BYTE PTR [ebx-0x70],cl
  40a2c9:	pop    ebp
  40a2ca:	push   ecx
  40a2cb:	cmp    eax,0xd598f3ff
  40a2d0:	aas    
  40a2d1:	pop    ebp
  40a2d2:	mov    al,0x9
  40a2d4:	xor    eax,esp
  40a2d6:	daa    
  40a2d7:	mov    WORD PTR ds:0x17edcbb7,es
  40a2dd:	xlat   BYTE PTR ds:[ebx]
  40a2de:	inc    edx
  40a2df:	pop    edx
  40a2e0:	icebp  
  40a2e1:	inc    edx
  40a2e2:	inc    ebp
  40a2e3:	xor    eax,0xf04f510e
  40a2e8:	cmp    eax,0xd2fe7f1b
  40a2ed:	gs jb  0x40a333
  40a2f0:	dec    ecx
  40a2f1:	dec    ecx
  40a2f2:	loop   0x40a30c
  40a2f4:	aad    0x76
  40a2f6:	add    DWORD PTR [edx+0x50a5a70f],0xd
  40a2fd:	jo     0x40a2a2
  40a2ff:	int3   
  40a300:	dec    esp
  40a301:	rol    ecx,1
  40a303:	xor    bh,BYTE PTR [ebx]
  40a305:	int    0x79
  40a307:	das    
  40a308:	push   edi
  40a309:	push   eax
  40a30a:	imul   edi,DWORD PTR [ecx],0xbfb1be5c
  40a310:	xor    BYTE PTR [eax-0x6ae3c473],al
  40a316:	jge    0x40a373
  40a318:	ret    
  40a319:	pop    ebx
  40a31a:	pop    edx
  40a31b:	loop   0x40a36a
  40a31d:	int3   
  40a31e:	xor    DWORD PTR [esi],ecx
  40a320:	call   0x956c6e44
  40a325:	int    0xdf
  40a327:	dec    edx
  40a328:	bound  edi,QWORD PTR [esi+0x13]
  40a32b:	mov    eax,ds:0xced9eafb
  40a330:	in     eax,0xef
  40a332:	sbb    eax,0xb5137a03
  40a337:	test   al,0xc1
  40a339:	pop    esi
  40a33a:	adc    esp,ebp
  40a33c:	and    DWORD PTR [ebp-0x5f],eax
  40a33f:	(bad)  
  40a340:	xlat   BYTE PTR ds:[ebx]
  40a341:	push   ecx
  40a342:	imul   ecx,DWORD PTR ds:0x774ee2e4,0xd791f14b
  40a34c:	mov    BYTE PTR [ecx-0x5b61f7f0],dh
  40a352:	xchg   esi,eax
  40a353:	(bad)  
  40a354:	mov    dl,0x21
  40a356:	xor    BYTE PTR [esi-0x46df0be9],al
  40a35c:	jp     0x40a3c4
  40a35e:	jmp    0x986d:0xf9b31988
  40a365:	in     al,dx
  40a366:	add    dh,BYTE PTR [ebx+edi*8-0x56e17616]
  40a36d:	rcl    ch,1
  40a36f:	retf   0x7942
  40a372:	aam    0xa
  40a374:	iret   
  40a375:	jge    0x40a31d
  40a377:	jb     0x40a372
  40a379:	in     eax,0x4e
  40a37b:	popf   
  40a37c:	ret    
  40a37d:	push   esi
  40a37e:	sub    eax,0x60734c5e
  40a383:	pusha  
  40a384:	cmp    al,0x74
  40a386:	mov    bh,0x4f
  40a388:	std    
  40a389:	js     0x40a39f
  40a38b:	xchg   ebx,eax
  40a38c:	aas    
  40a38d:	scas   al,BYTE PTR es:[edi]
  40a38e:	in     al,dx
  40a38f:	mov    eax,0x4b1b5d27
  40a394:	xchg   edi,eax
  40a395:	popa   
  40a396:	aad    0x66
  40a398:	cs sahf 
  40a39a:	mov    ebp,0x9a36d83c
  40a39f:	lea    ecx,[eax]
  40a3a1:	in     al,dx
  40a3a2:	inc    edx
  40a3a3:	adc    eax,0xe17624b9
  40a3a8:	ret    
  40a3a9:	mov    DWORD PTR [ebx-0x617b5cf4],ecx
  40a3af:	dec    ecx
  40a3b0:	shl    DWORD PTR [ebx+edi*8],cl
  40a3b3:	sti    
  40a3b4:	cmp    ebx,DWORD PTR [ecx]
  40a3b6:	cmp    eax,0x2141a8c2
  40a3bb:	in     eax,0xb8
  40a3bd:	fdivr  st,st(6)
  40a3bf:	push   esp
  40a3c0:	and    cl,BYTE PTR [edi-0x3]
  40a3c3:	lods   eax,DWORD PTR ds:[esi]
  40a3c4:	neg    BYTE PTR [ebp+esi*1-0x3d]
  40a3c8:	mov    edx,0xbfc6e9be
  40a3cd:	loope  0x40a3df
  40a3cf:	cmp    edx,0x5f8b255d
  40a3d5:	nop
  40a3d6:	sub    edx,DWORD PTR [ecx]
  40a3d8:	jmp    0xde62:0x68a49dd0
  40a3df:	mov    BYTE PTR [ebp+0x76],dh
  40a3e2:	out    dx,al
  40a3e3:	lock sub BYTE PTR [edi+0x39bf1acf],bl
  40a3ea:	and    ebx,edx
  40a3ec:	test   al,0xaa
  40a3ee:	inc    edi
  40a3ef:	outs   dx,DWORD PTR ds:[esi]
  40a3f0:	mov    bl,0x4
  40a3f2:	fs mov al,0x9a
  40a3f5:	test   BYTE PTR [edi+0x254aa25e],bl
  40a3fb:	fs push 0x4a7808e2
  40a401:	test   BYTE PTR [ebp+0x47],ah
  40a404:	xlat   BYTE PTR ds:[ebx]
  40a405:	cdq    
  40a406:	in     al,dx
  40a407:	push   0xffffff8d
  40a409:	call   0xc0d4a26a
  40a40e:	lea    edi,[eax]
  40a410:	push   esi
  40a411:	fiadd  DWORD PTR [edi]
  40a413:	ret    0x35cd
  40a416:	mov    al,ds:0xf54a99e4
  40a41b:	or     al,0x49
  40a41d:	mov    DWORD PTR [edi-0x5eadae29],ebx
  40a423:	adc    esp,DWORD PTR [edx]
  40a425:	fisub  WORD PTR [eax]
  40a427:	adc    al,0x16
  40a429:	test   al,0xfd
  40a42b:	mov    eax,ds:0x41c6df04
  40a430:	dec    eax
  40a431:	es sbb BYTE PTR gs:[edi-0x4f],0x96
  40a437:	mov    esi,0xf5a8c82d
  40a43c:	mov    edx,0x830fec25
  40a441:	lods   eax,DWORD PTR ds:[esi]
  40a442:	in     eax,0x1a
  40a444:	jmp    0x40a490
  40a446:	jnp    0x40a4a0
  40a448:	cmc    
  40a449:	shl    DWORD PTR [eax+0x6],cl
  40a44c:	push   ss
  40a44d:	mov    ah,dh
  40a44f:	les    ebx,FWORD PTR [esi]
  40a451:	jmp    0x39d9:0x383623b3
  40a458:	ds into 
  40a45a:	lahf   
  40a45b:	cmp    al,ch
  40a45d:	retf   
  40a45e:	xchg   edi,edi
  40a460:	mov    cl,0x47
  40a462:	sub    al,0xef
  40a464:	pop    ebp
  40a465:	mov    bl,0x16
  40a467:	loopne 0x40a3f2
  40a469:	push   ds
  40a46a:	shl    DWORD PTR [eax-0x716c85bd],cl
  40a470:	or     eax,0xd1c00843
  40a475:	stos   BYTE PTR es:[edi],al
  40a476:	into   
  40a477:	sbb    eax,0xd5c2a343
  40a47c:	xor    esi,DWORD PTR [ecx]
  40a47e:	mov    eax,ds:0xfdaaab1d
  40a483:	hlt    
  40a484:	xchg   ebx,eax
  40a485:	adc    BYTE PTR [edi],ch
  40a487:	rcl    DWORD PTR [edx+0x6e],cl
  40a48a:	inc    esi
  40a48b:	daa    
  40a48c:	aaa    
  40a48d:	jmp    0xd8c0420e
  40a492:	mov    ds:0x436f4f95,eax
  40a497:	inc    ecx
  40a498:	imul   edi,DWORD PTR [edx+0x41],0x409a7dca
  40a49f:	ret    0x5101
  40a4a2:	jge    0x40a4d8
  40a4a4:	rcr    BYTE PTR [ebx-0x76],1
  40a4a7:	(bad)  
  40a4a8:	mov    ?,WORD PTR [ebx]
  40a4aa:	push   edx
  40a4ab:	ja     0x40a4c0
  40a4ad:	jmp    0xbc32ae94
  40a4b2:	fisttp QWORD PTR [edx-0x159c441d]
  40a4b8:	jmp    0x40a50b
  40a4ba:	es ffree st(4)
  40a4bd:	je     0x40a50a
  40a4bf:	(bad)  
  40a4c0:	loopne 0x40a4ba
  40a4c2:	(bad)  
  40a4c3:	pusha  
  40a4c4:	push   edi
  40a4c5:	push   edx
  40a4c6:	cmp    BYTE PTR [ebp+0x3f27c220],cl
  40a4cc:	(bad)  
  40a4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4cf:	cwde   
  40a4d0:	mov    edx,0xba36e940
  40a4d5:	frstor [ebx]
  40a4d7:	and    dh,BYTE PTR [esi-0x5e]
  40a4da:	pop    edx
  40a4db:	loope  0x40a4a4
  40a4dd:	xor    DWORD PTR [ebp+edi*4-0x65],ebp
  40a4e1:	shl    BYTE PTR [ebp-0x5b17908c],1
  40a4e7:	sahf   
  40a4e8:	cmp    ah,dh
  40a4ea:	jmp    0x1846da99
  40a4ef:	rcl    BYTE PTR [ecx+0x687523ce],0xe8
  40a4f6:	mov    DWORD PTR es:[eax],0x8b068b00
  40a4fd:	dec    esi
  40a4fe:	add    al,0xf
  40a500:	lods   al,BYTE PTR ds:[esi]
  40a501:	enter  0xc102,0xe9
  40a505:	add    al,cl
  40a507:	jmp    0x6e2:0x7af1811e
  40a50e:	out    0x51,eax
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a53d
  40a524:	push   0xffffffab
  40a526:	mov    al,0xd8
  40a528:	sub    ebx,DWORD PTR [eax]
  40a52a:	sbb    BYTE PTR [esi-0x3fe7e7ee],bl
  40a530:	cwde   
  40a531:	xor    WORD PTR [esi-0x54],bp
  40a535:	pop    eax
  40a536:	inc    eax
  40a537:	call   0xdd440ac0
  40a53c:	sub    DWORD PTR [ecx],esi
  40a53e:	dec    ecx
  40a53f:	fnstenv [ebp+0x35a137d8]
  40a545:	sub    ebx,0xb9f79943
  40a54b:	and    eax,DWORD PTR [eax-0x7057e54b]
  40a551:	leave  
  40a552:	fdivr  QWORD PTR [eax+ecx*2]
  40a555:	loop   0x40a547
  40a557:	jle    0x40a4e1
  40a559:	jno    0x40a52f
  40a55b:	scas   eax,DWORD PTR es:[edi]
  40a55c:	sub    al,0xc5
  40a55e:	cmp    eax,0x99333bd7
  40a563:	ret    0x5299
  40a566:	adc    ecx,DWORD PTR [ebx-0x74]
  40a569:	adc    esi,DWORD PTR [ecx+0x73]
  40a56c:	(bad)  
  40a56d:	stos   DWORD PTR es:[edi],eax
  40a56e:	(bad)  
  40a56f:	cmp    al,0x43
  40a571:	in     al,0x1b
  40a573:	mov    ds:0x58dbeb3c,al
  40a578:	fs inc esi
  40a57a:	das    
  40a57b:	pop    ds
  40a57c:	loopne 0x40a567
  40a57e:	cmp    al,0xe2
  40a580:	xor    ecx,DWORD PTR [esi+eiz*1-0x64]
  40a584:	cs dec eax
  40a586:	pop    edx
  40a587:	enter  0xe446,0x38
  40a58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a58c:	ja     0x40a602
  40a58e:	test   DWORD PTR [edi+0x37],ebx
  40a591:	nop
  40a592:	cld    
  40a593:	ret    0xd25f
  40a596:	pop    es
  40a597:	scas   eax,DWORD PTR es:[edi]
  40a598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a599:	shl    BYTE PTR [edi-0x4c],cl
  40a59c:	rcl    DWORD PTR [edx+eax*8],0xdb
  40a5a0:	jae    0x40a56d
  40a5a2:	sub    DWORD PTR [ebp-0x57],0x14
  40a5a6:	retf   0x5aa4
  40a5a9:	xlat   BYTE PTR ds:[ebx]
  40a5aa:	fsub   st,st(3)
  40a5ac:	pusha  
  40a5ad:	out    dx,eax
  40a5ae:	mov    ebx,0xdc895f16
  40a5b3:	push   cs
  40a5b4:	retf   
  40a5b5:	adc    al,0xfe
  40a5b7:	dec    ecx
  40a5b8:	xchg   ebp,eax
  40a5b9:	cmp    DWORD PTR [ebp-0x2ba30020],edx
  40a5bf:	and    eax,0x766e937d
  40a5c4:	mov    al,0x8b
  40a5c6:	mov    al,ch
  40a5c8:	out    dx,al
  40a5c9:	cdq    
  40a5ca:	lahf   
  40a5cb:	sub    edx,ecx
  40a5cd:	ror    edi,1
  40a5cf:	xor    ch,ch
  40a5d1:	ins    BYTE PTR es:[edi],dx
  40a5d2:	jae    0x40a604
  40a5d4:	icebp  
  40a5d5:	and    edi,esi
  40a5d7:	dec    esp
  40a5d8:	mov    bl,cl
  40a5da:	mov    bh,0x4f
  40a5dc:	popa   
  40a5dd:	mov    ?,eax
  40a5df:	sbb    ebx,esi
  40a5e1:	push   ecx
  40a5e2:	inc    esi
  40a5e3:	iret   
  40a5e4:	mov    ch,0xfa
  40a5e6:	cs pop ds
  40a5e8:	push   esi
  40a5e9:	mov    ecx,0xabd3f317
  40a5ee:	sbb    bh,BYTE PTR [ecx+0x15]
  40a5f1:	xor    al,BYTE PTR [edx-0x1d5d88b5]
  40a5f7:	dec    esi
  40a5f8:	bound  ebp,QWORD PTR [ebp+0x5aa70ab8]
  40a5fe:	loope  0x40a63b
  40a600:	jae    0x40a65f
  40a602:	add    DWORD PTR [esi],ebx
  40a604:	mov    edi,0xa2181eb3
  40a609:	dec    ebp
  40a60a:	cmp    al,0x6
  40a60c:	mov    ?,WORD PTR [edx-0x72479525]
  40a612:	sub    DWORD PTR [eax],esi
  40a614:	pop    ecx
  40a615:	(bad)  
  40a616:	sub    ah,dh
  40a618:	mov    edx,0x20cbdf59
  40a61d:	shl    BYTE PTR [eax],1
  40a61f:	inc    ecx
  40a620:	pop    ebx
  40a621:	cmp    dl,BYTE PTR [ebx-0x25]
  40a624:	mov    dh,0x48
  40a626:	push   ebx
  40a627:	pushf  
  40a628:	popf   
  40a629:	xchg   al,bh
  40a62b:	mov    bl,dl
  40a62d:	retf   
  40a62e:	scas   eax,DWORD PTR es:[edi]
  40a62f:	mov    eax,0xe11e5f2b
  40a634:	inc    ebp
  40a635:	adc    edi,DWORD PTR [ecx+0x6d]
  40a638:	or     al,0x2f
  40a63a:	dec    edi
  40a63b:	push   ebx
  40a63c:	test   DWORD PTR [ebx+0x71d438dc],ebp
  40a642:	js     0x40a663
  40a644:	nop
  40a645:	in     eax,dx
  40a646:	adc    al,0x38
  40a648:	dec    ebp
  40a649:	fsubr  st,st(6)
  40a64b:	imul   esp,edx,0x49
  40a64e:	cmp    DWORD PTR [eax],ebp
  40a650:	dec    esp
  40a651:	(bad)  
  40a652:	fdiv   QWORD PTR [edx]
  40a654:	out    0x6,al
  40a656:	mov    edi,0x12e2f396
  40a65b:	cli    
  40a65c:	sub    BYTE PTR [ebp+0x5],cl
  40a65f:	lods   eax,DWORD PTR ds:[esi]
  40a660:	call   0x138bd79b
  40a665:	mov    edi,0x28be6858
  40a66a:	scas   al,BYTE PTR es:[edi]
  40a66b:	inc    ecx
  40a66c:	sbb    dl,BYTE PTR [esi]
  40a66e:	xchg   ebx,eax
  40a66f:	push   ecx
  40a670:	scas   eax,DWORD PTR es:[edi]
  40a671:	je     0x40a658
  40a673:	push   0x19
  40a675:	inc    edx
  40a676:	mov    ch,0x5d
  40a678:	leave  
  40a679:	mov    ds:0xe429faca,eax
  40a67e:	add    DWORD PTR [edi+0x7e0ba217],edx
  40a684:	std    
  40a685:	xchg   ebx,edx
  40a687:	jle    0x40a6d4
  40a689:	mov    ds:0xcb10a082,al
  40a68e:	jmp    0x444be4dd
  40a693:	jae    0x40a6ee
  40a695:	adc    dh,ch
  40a697:	add    BYTE PTR [esi+0x5],dh
  40a69a:	xor    cl,dl
  40a69c:	sub    cl,ah
  40a69e:	mov    BYTE PTR [ebx],0xef
  40a6a1:	das    
  40a6a2:	dec    esp
  40a6a3:	push   ebx
  40a6a4:	and    ah,BYTE PTR ds:0xf8094dc
  40a6aa:	call   0xe129b10b
  40a6af:	xor    edi,ebp
  40a6b1:	cmp    ecx,edi
  40a6b3:	sub    al,0x6e
  40a6b5:	xor    al,0xf2
  40a6b7:	and    ch,ch
  40a6b9:	add    DWORD PTR [edi],ecx
  40a6bb:	ror    BYTE PTR [edx-0x14f4e91d],0xa2
  40a6c2:	nop
  40a6c3:	lock mov al,ds:0x2b2f9c4c
  40a6c9:	cmp    DWORD PTR [ebp+0x20e9016e],0x50439620
  40a6d3:	or     ah,BYTE PTR [ecx+0x29d62282]
  40a6d9:	adc    DWORD PTR [ecx+0x4f07246f],esi
  40a6df:	into   
  40a6e0:	enter  0xa9ab,0x62
  40a6e4:	mov    al,0x85
  40a6e6:	mov    dh,0x67
  40a6e8:	or     esp,ebx
  40a6ea:	inc    edx
  40a6eb:	je     0x40a695
  40a6ed:	pop    esi
  40a6ee:	or     dl,BYTE PTR [eax+edx*8]
  40a6f1:	clc    
  40a6f2:	xchg   esi,eax
  40a6f3:	jb     0x40a6bc
  40a6f5:	or     al,0xa5
  40a6f7:	mov    ebp,0x7e54b714
  40a6fc:	sub    ch,BYTE PTR [edi]
  40a6fe:	sbb    edx,DWORD PTR [ebx-0x44891ac]
  40a704:	mov    ebx,0xc9e2c091
  40a709:	in     al,dx
  40a70a:	mov    ebp,0xea3d57e7
  40a70f:	sub    ecx,DWORD PTR [ecx+esi*2+0x1f57324]
  40a716:	out    dx,eax
  40a717:	mov    edi,DWORD PTR [ecx+0x52]
  40a71a:	dec    esp
  40a71b:	out    dx,eax
  40a71c:	mov    ebx,0x5e7d0b55
  40a721:	scas   eax,DWORD PTR es:[edi]
  40a722:	mov    ds:0xddc9d70,al
  40a727:	sub    DWORD PTR [edx-0x30bb88c1],esp
  40a72d:	xchg   esi,eax
  40a72e:	pop    ecx
  40a72f:	sub    DWORD PTR [ebx-0x5ad81f47],0x32d33445
  40a739:	xor    DWORD PTR [esi+0x50],ecx
  40a73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a73d:	in     eax,0x91
  40a73f:	xchg   esi,eax
  40a740:	adc    bh,al
  40a742:	sub    BYTE PTR [ecx-0x688b68e9],bl
  40a748:	jbe    0x40a7b6
  40a74a:	ss push esi
  40a74c:	sar    DWORD PTR [ebx+0xe44e30],1
  40a752:	and    DWORD PTR [ebx-0x27],esp
  40a755:	icebp  
  40a756:	(bad)  
  40a757:	ficom  DWORD PTR [ecx+0x13]
  40a75a:	lds    ecx,FWORD PTR [ecx+0x49]
  40a75d:	fst    QWORD PTR [edi+0xac5dc4d]
  40a763:	xchg   ebp,eax
  40a764:	add    dl,BYTE PTR [ecx]
  40a766:	aas    
  40a767:	push   eax
  40a768:	jno    0x40a77b
  40a76a:	add    eax,0x51e760f6
  40a76f:	addr16 jle 0x40a70d
  40a772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a773:	sbb    edi,esp
  40a775:	mov    esi,DWORD PTR [esi+0x25]
  40a778:	pop    edx
  40a779:	mov    bl,0xde
  40a77b:	mov    ebp,?
  40a77d:	mov    bl,dh
  40a77f:	test   al,0x2c
  40a781:	out    0xd6,eax
  40a783:	xchg   ecx,eax
  40a784:	test   eax,0x8ddd412f
  40a789:	mov    ebx,0xc2a246c0
  40a78e:	and    ch,BYTE PTR [esi+0x1f]
  40a791:	shl    BYTE PTR [esi-0x52d6da46],0xd7
  40a798:	out    0x4a,al
  40a79a:	pushf  
  40a79b:	(bad)
  40a79e:	add    BYTE PTR [edi],bl
  40a7a0:	rcr    BYTE PTR [edi+0x36ff6ad4],0x79
  40a7a7:	sbb    edx,edx
  40a7a9:	daa    
  40a7aa:	cmp    al,bh
  40a7ac:	repnz inc esp
  40a7ae:	cmp    al,0xc0
  40a7b0:	mov    esp,DWORD PTR [eax-0x19]
  40a7b3:	rcr    BYTE PTR [esi+0x54],cl
  40a7b6:	push   ebx
  40a7b7:	sbb    BYTE PTR [edx+0x28],dl
  40a7ba:	mov    cl,0xd9
  40a7bc:	or     ch,BYTE PTR [ebp-0x13]
  40a7bf:	push   esp
  40a7c0:	mov    edx,0xeaa852df
  40a7c5:	pop    esp
  40a7c6:	repz bt DWORD PTR [esi],esp
  40a7ca:	in     al,0xb9
  40a7cc:	xor    DWORD PTR [ebp-0x752f8145],edx
  40a7d2:	clc    
  40a7d3:	xchg   esi,eax
  40a7d4:	mov    ecx,0x195ea227
  40a7d9:	and    al,0x33
  40a7db:	adc    al,0x31
  40a7dd:	push   ss
  40a7de:	sub    DWORD PTR [esi-0x5927e9c3],esi
  40a7e4:	and    eax,0xd2d73430
  40a7e9:	dec    eax
  40a7ea:	xchg   ecx,eax
  40a7eb:	ficomp WORD PTR [esp+edi*2+0x22]
  40a7ef:	add    ah,BYTE PTR [ebp-0x2b]
  40a7f2:	cwde   
  40a7f3:	lods   eax,DWORD PTR ds:[esi]
  40a7f4:	rcr    DWORD PTR [esi-0xb],1
  40a7f7:	push   eax
  40a7f8:	mov    ah,0x8c
  40a7fa:	in     eax,0x5f
  40a7fc:	ja     0x40a806
  40a7fe:	or     DWORD PTR [ebx+0xc],ecx
  40a801:	xlat   BYTE PTR ds:[ebx]
  40a802:	pop    ebp
  40a803:	jne    0x40a81e
  40a805:	pop    ecx
  40a806:	xchg   edi,eax
  40a807:	xchg   edi,eax
  40a808:	xchg   ecx,eax
  40a809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a80a:	addr16 ss jmp 0x40a85a
  40a80e:	outs   dx,BYTE PTR ds:[esi]
  40a80f:	adc    al,0x6
  40a811:	addr16 mov cl,0xaa
  40a814:	push   ds
  40a815:	sub    ebx,esi
  40a817:	adc    eax,0xe1d1a035
  40a81c:	mov    bh,0xf1
  40a81e:	xor    al,0xd6
  40a820:	jae    0x40a89f
  40a822:	inc    eax
  40a823:	add    ch,ah
  40a825:	out    0xc6,al
  40a827:	nop
  40a828:	or     esi,DWORD PTR [eax+0x6e457d06]
  40a82e:	outs   dx,BYTE PTR ds:[esi]
  40a82f:	adc    ebp,DWORD PTR [ebp-0x38143557]
  40a835:	stos   DWORD PTR es:[edi],eax
  40a836:	and    BYTE PTR [ecx],cl
  40a838:	shl    bh,0x62
  40a83b:	mov    ds:0xf9db9fba,al
  40a840:	fistp  WORD PTR [edi+0x4d4b3a24]
  40a846:	adc    edi,DWORD PTR [eax-0x34]
  40a849:	dec    eax
  40a84a:	add    al,0x30
  40a84c:	scas   al,BYTE PTR es:[edi]
  40a84d:	outs   dx,DWORD PTR ds:[esi]
  40a84e:	pop    edx
  40a84f:	sahf   
  40a850:	mov    dh,BYTE PTR [ebp-0x5f22d043]
  40a856:	xor    eax,0x285fd694
  40a85b:	inc    eax
  40a85c:	or     eax,0x1ed57e60
  40a861:	je     0x40a8db
  40a863:	lock inc eax
  40a865:	call   0x9580154a
  40a86a:	pop    ebx
  40a86b:	inc    edx
  40a86c:	adc    BYTE PTR [ecx+edx*2-0x3d179777],dl
  40a873:	enter  0x5208,0xaf
  40a877:	xchg   ebp,eax
  40a878:	repz mov esp,0x3c179151
  40a87e:	cmp    eax,0xe58521da
  40a883:	jae    0x40a8f3
  40a885:	dec    eax
  40a886:	cwde   
  40a887:	jle    0x40a8f2
  40a889:	mov    bl,0xb8
  40a88b:	aam    0x8e
  40a88d:	lds    esi,FWORD PTR [esi+ecx*2+0x180aac47]
  40a894:	shr    BYTE PTR [esi],1
  40a896:	in     eax,dx
  40a897:	int3   
  40a898:	xor    edi,ecx
  40a89a:	adc    eax,0x4c50054
  40a89f:	cwde   
  40a8a0:	adc    ecx,ebx
  40a8a2:	fnsave [eax]
  40a8a4:	xchg   edi,eax
  40a8a5:	cmc    
  40a8a6:	sbb    DWORD PTR [esi+eax*4],eax
  40a8a9:	mov    edx,0xd9821bb9
  40a8ae:	jns    0x40a86b
  40a8b0:	ss cdq 
  40a8b2:	out    dx,al
  40a8b3:	inc    esi
  40a8b4:	push   ebp
  40a8b5:	mov    fs,WORD PTR [eax-0x80]
  40a8b8:	sub    al,0xd2
  40a8ba:	pushf  
  40a8bb:	je     0x40a8f0
  40a8bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8be:	ret    
  40a8bf:	jmp    0x40a8c8
  40a8c1:	in     eax,0xde
  40a8c3:	nop
  40a8c4:	push   edx
  40a8c5:	(bad)  [esi+0x40]
  40a8c8:	(bad)  
  40a8c9:	fiadd  WORD PTR [eax-0xc]
  40a8cc:	mov    ebp,0x42d6f02b
  40a8d1:	aam    0x50
  40a8d3:	push   esp
  40a8d4:	add    ecx,edx
  40a8d6:	jle    0x40a885
  40a8d8:	loop   0x40a8ec
  40a8da:	lahf   
  40a8db:	xchg   esi,eax
  40a8dc:	pop    ss
  40a8dd:	mov    al,0x6e
  40a8df:	inc    edx
  40a8e0:	cs pusha 
  40a8e2:	data16 imul BYTE PTR [ebx-0x34ecc69d]
  40a8e9:	das    
  40a8ea:	add    al,0x5d
  40a8ec:	into   
  40a8ed:	test   al,0x37
  40a8ef:	mov    ecx,0x8b105589
  40a8f4:	adc    ecx,DWORD PTR [ebx+0x5750047b]
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428313,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x428307,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428263,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x42830b,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428293
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428287,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x428303
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42823b
  40aa46:	sbb    DWORD PTR ds:0x42817b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x1b7e1f6a
  40aa65:	pop    es
  40aa66:	lea    esi,[eax+0x5f]
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	ja     0x40aa14
  40aa72:	loope  0x40aaa2
  40aa74:	sub    al,0x81
  40aa76:	xchg   ebx,eax
  40aa77:	push   es
  40aa78:	push   ebp
  40aa79:	lods   eax,DWORD PTR ds:[esi]
  40aa7a:	fistp  DWORD PTR [eax]
  40aa7c:	add    al,0xb6
  40aa7e:	push   edx
  40aa7f:	xlat   BYTE PTR ds:[ebx]
  40aa80:	test   BYTE PTR [edx-0xa043f48],bl
  40aa86:	loope  0x40aa79
  40aa88:	jmp    0x40aaf0
  40aa8a:	push   esp
  40aa8b:	int    0x17
  40aa8d:	les    esi,FWORD PTR [ebp+eax*1+0x410b0dfe]
  40aa94:	cmp    eax,ebp
  40aa96:	ficom  WORD PTR [esi-0x11]
  40aa99:	loopne 0x40aa50
  40aa9b:	bound  ecx,QWORD PTR [eax-0x42]
  40aa9e:	cmp    eax,0x5c3e39b0
  40aaa3:	push   eax
  40aaa4:	mov    ah,0xa6
  40aaa6:	shl    BYTE PTR [ebp+ebp*1+0x238e1b8d],1
  40aaad:	add    BYTE PTR [edx+ebp*4+0x6b],0x60
  40aab2:	ins    BYTE PTR es:[edi],dx
  40aab3:	pop    edi
  40aab4:	call   0xdd4f2d89
  40aab9:	jo     0x40aad5
  40aabb:	adc    bh,ah
  40aabd:	mov    ds:0xa455363b,al
  40aac2:	jne    0x40aa9b
  40aac4:	vcmpps xmm2,xmm6,XMMWORD PTR [edi],0xbc
  40aac9:	xor    ah,0x9f
  40aacc:	ret    
  40aacd:	lahf   
  40aace:	or     al,0x22
  40aad0:	lea    edx,[esp+ebx*1-0x7d]
  40aad4:	xchg   esi,eax
  40aad5:	sbb    BYTE PTR es:[edx-0x73b0b79b],cl
  40aadc:	sbb    al,bl
  40aade:	hlt    
  40aadf:	(bad)  
  40aae0:	sub    dh,BYTE PTR ds:0x6dcbb7b9
  40aae6:	(bad)  
  40aae7:	fsub   DWORD PTR [edx-0x5c]
  40aaea:	pop    es
  40aaeb:	stos   BYTE PTR es:[edi],al
  40aaec:	cmp    eax,0x59fe2ec
  40aaf1:	dec    edx
  40aaf2:	repz fwait
  40aaf4:	dec    ecx
  40aaf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf6:	push   edx
  40aaf7:	ror    al,0xf1
  40aafa:	sti    
  40aafb:	fisubr DWORD PTR [esi]
  40aafd:	stc    
  40aafe:	jp     0x40aaef
  40ab00:	(bad)  
  40ab01:	fwait
  40ab02:	(bad)  
  40ab03:	bswap  edi
  40ab05:	jl     0x40ab33
  40ab07:	xchg   esi,eax
  40ab08:	mov    BYTE PTR [ecx+0xce1995a],ah
  40ab0e:	mov    dh,0xc5
  40ab10:	cwde   
  40ab11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab12:	mov    edx,ebx
  40ab14:	jo     0x40ab22
  40ab16:	loopne 0x40ab65
  40ab18:	dec    eax
  40ab19:	push   edx
  40ab1a:	add    al,0xbd
  40ab1c:	or     al,0x55
  40ab1e:	lods   eax,DWORD PTR ds:[esi]
  40ab1f:	inc    edx
  40ab20:	pusha  
  40ab21:	adc    al,0xd5
  40ab23:	pop    ds
  40ab24:	ret    0x534a
  40ab27:	dec    ebp
  40ab28:	pop    edi
  40ab29:	push   edx
  40ab2a:	jmp    0xb836eb16
  40ab2f:	mov    bl,0x78
  40ab31:	or     BYTE PTR [ebx-0x24894f3b],ch
  40ab37:	jno    0x40aae9
  40ab39:	push   eax
  40ab3a:	add    al,0x84
  40ab3c:	jae    0x40aac5
  40ab3e:	scas   al,BYTE PTR es:[edi]
  40ab3f:	xchg   esi,eax
  40ab40:	rcr    BYTE PTR [edi+ecx*4-0x1e],cl
  40ab44:	rol    BYTE PTR ds:0x88e94aed,cl
  40ab4a:	xchg   ebx,eax
  40ab4b:	xlat   BYTE PTR ds:[ebx]
  40ab4c:	pushf  
  40ab4d:	pop    esp
  40ab4e:	mov    eax,ds:0xc26faef8
  40ab53:	dec    edx
  40ab54:	rcr    BYTE PTR [ebp-0x65],cl
  40ab57:	adc    eax,0x2fca61de
  40ab5c:	push   edx
  40ab5d:	xchg   edx,eax
  40ab5e:	mov    bl,ch
  40ab60:	mov    al,ds:0x423a2feb
  40ab65:	sbb    dl,ch
  40ab67:	inc    edx
  40ab68:	ins    BYTE PTR es:[edi],dx
  40ab69:	sbb    ah,BYTE PTR [edx+0x6ed8bed]
  40ab6f:	fcomp  DWORD PTR [edx+0xff81ed6]
  40ab75:	fdivr  QWORD PTR [esi-0x36]
  40ab78:	mov    dl,0x8
  40ab7a:	dec    esp
  40ab7b:	push   ebx
  40ab7c:	(bad)  
  40ab7d:	push   ecx
  40ab7e:	hlt    
  40ab7f:	(bad)  
  40ab80:	mov    dh,0x86
  40ab82:	mov    ds:0x9c951d1a,eax
  40ab87:	test   BYTE PTR [ecx+0x1c],bh
  40ab8a:	push   esi
  40ab8b:	dec    edx
  40ab8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab8d:	nop
  40ab8e:	fdivr  QWORD PTR ss:[edx]
  40ab91:	sar    BYTE PTR [ebx+eiz*1],0xd2
  40ab95:	shl    edx,1
  40ab97:	cmp    eax,0xffffffa8
  40ab9a:	and    BYTE PTR [edi-0xb],0xdd
  40ab9e:	add    eax,0x12621794
  40aba3:	(bad)  
  40aba4:	sub    DWORD PTR es:[edi-0x46],ebp
  40aba8:	pop    eax
  40aba9:	mul    DWORD PTR [edi]
  40abab:	ins    BYTE PTR es:[edi],dx
  40abac:	ret    0x5efd
  40abaf:	or     BYTE PTR [eax],ah
  40abb1:	(bad)  
  40abb3:	int3   
  40abb4:	mov    ah,0x2f
  40abb6:	fist   DWORD PTR [ebp-0x1525041a]
  40abbc:	fsub   DWORD PTR [ebx]
  40abbe:	retf   
  40abbf:	ds or  al,0x10
  40abc2:	and    al,al
  40abc4:	jecxz  0x40abd3
  40abc6:	push   ds
  40abc7:	push   ds
  40abc8:	fs hlt 
  40abca:	push   cs
  40abcb:	push   esp
  40abcc:	xor    BYTE PTR [ebx],bl
  40abce:	xchg   esi,eax
  40abcf:	xchg   edi,eax
  40abd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd1:	jp     0x40abcf
  40abd3:	test   eax,0x192a292b
  40abd8:	mov    al,ds:0x3b30ee03
  40abdd:	loopne 0x40abc3
  40abdf:	jp     0x40ab7e
  40abe1:	adc    dh,BYTE PTR [esi+0x1c8a2d13]
  40abe7:	mov    dh,0x42
  40abe9:	sub    BYTE PTR [ebx+0x10],dh
  40abec:	push   edi
  40abed:	mov    cl,0x1f
  40abef:	aas    
  40abf0:	pop    ds
  40abf1:	mov    ds:0xf66c3fad,eax
  40abf6:	mov    al,0xf3
  40abf8:	pop    ss
  40abf9:	cwde   
  40abfa:	iret   
  40abfb:	rcl    BYTE PTR [ecx+0x3936df21],0xfc
  40ac02:	sub    eax,ecx
  40ac04:	repz int 0xaa
  40ac07:	mov    ebp,0xd19a0f0a
  40ac0c:	leave  
  40ac0d:	add    al,BYTE PTR [esi-0x65]
  40ac10:	add    al,0x49
  40ac12:	sbb    al,0x5c
  40ac14:	test   DWORD PTR ds:0x70ceb0e2,ebx
  40ac1a:	inc    ebp
  40ac1b:	and    edi,ecx
  40ac1d:	(bad)  
  40ac1e:	std    
  40ac1f:	das    
  40ac20:	push   es
  40ac21:	mov    cl,0x90
  40ac23:	neg    al
  40ac25:	cmp    al,0xb2
  40ac27:	inc    ebp
  40ac28:	push   eax
  40ac29:	add    DWORD PTR [ebp+0x6e],edx
  40ac2c:	mov    WORD PTR [edi+0x7b67cc2f],?
  40ac32:	dec    ecx
  40ac33:	imul   ebx
  40ac35:	fcmovnu st,st(5)
  40ac37:	xchg   DWORD PTR ds:0x89247990,ebx
  40ac3d:	pop    esi
  40ac3e:	inc    eax
  40ac3f:	jg     0x40ac17
  40ac41:	shr    ebp,cl
  40ac43:	adc    al,0xaf
  40ac45:	les    esp,FWORD PTR [edi+0x6f]
  40ac48:	push   ebx
  40ac49:	pop    ds
  40ac4a:	xlat   BYTE PTR ds:[ebx]
  40ac4b:	push   ebp
  40ac4c:	scas   eax,DWORD PTR es:[edi]
  40ac4d:	and    al,0x4
  40ac4f:	xchg   ebp,eax
  40ac50:	std    
  40ac51:	pop    edx
  40ac52:	js     0x40ac8f
  40ac54:	sar    BYTE PTR ds:0xcc638d1b,1
  40ac5a:	iret   
  40ac5b:	xchg   ecx,eax
  40ac5c:	pop    ss
  40ac5d:	mov    dl,0x95
  40ac5f:	les    ebp,FWORD PTR [esi]
  40ac61:	dec    edx
  40ac62:	adc    DWORD PTR [ebx+0x19e95b3c],eax
  40ac68:	sbb    esp,DWORD PTR [ebx]
  40ac6a:	enter  0xee6a,0x18
  40ac6e:	retf   
  40ac6f:	sti    
  40ac70:	dec    ebp
  40ac71:	(bad)  
  40ac72:	xchg   ecx,eax
  40ac73:	inc    ebx
  40ac74:	imul   ebx
  40ac76:	add    al,0x6e
  40ac78:	or     BYTE PTR [ecx-0x74b683e6],ch
  40ac7e:	lahf   
  40ac7f:	scas   eax,DWORD PTR es:[edi]
  40ac80:	jmp    0x40ac71
  40ac82:	in     eax,dx
  40ac83:	and    ebx,edi
  40ac85:	mov    ds:0x211b5518,eax
  40ac8a:	sar    DWORD PTR [ecx+edi*8-0x73],1
  40ac8e:	in     al,dx
  40ac8f:	neg    BYTE PTR [ecx+0x15]
  40ac92:	adc    dh,BYTE PTR [ebx+0x76]
  40ac95:	mov    al,0xcf
  40ac97:	and    al,0xdc
  40ac99:	pop    ds
  40ac9a:	pop    ecx
  40ac9b:	test   DWORD PTR [eax-0xe],ebx
  40ac9e:	or     esi,esp
  40aca0:	mov    ch,0xc
  40aca2:	int    0x97
  40aca4:	xchg   ecx,eax
  40aca5:	sahf   
  40aca6:	mov    eax,ds:0xd302e5a7
  40acab:	xchg   edx,eax
  40acac:	(bad)  
  40acae:	out    dx,eax
  40acaf:	sbb    DWORD PTR [esi],0x4661bfc
  40acb5:	push   ds
  40acb6:	pop    ebx
  40acb7:	and    esi,DWORD PTR [edi]
  40acb9:	inc    ebx
  40acba:	test   al,0xd2
  40acbc:	pushf  
  40acbd:	fisttp QWORD PTR [edi+ecx*8-0x3e]
  40acc1:	sbb    DWORD PTR [esi+eiz*2],esp
  40acc4:	sbb    DWORD PTR [esi-0xd98d5b7],esp
  40acca:	dec    esi
  40accb:	adc    al,BYTE PTR ds:0x2b1e29a4
  40acd1:	ret    0xacf3
  40acd4:	xchg   ebp,eax
  40acd5:	sbb    ah,ah
  40acd7:	(bad)  
  40acd8:	push   ebx
  40acd9:	cmc    
  40acda:	push   edi
  40acdb:	push   esi
  40acdc:	into   
  40acdd:	(bad)  
  40acde:	enter  0xda63,0x21
  40ace2:	dec    ebx
  40ace3:	neg    DWORD PTR [ecx+esi*2+0x76cbb398]
  40acea:	js     0x40acf3
  40acec:	cld    
  40aced:	into   
  40acee:	inc    edx
  40acef:	ret    
  40acf0:	xchg   esi,eax
  40acf1:	ins    DWORD PTR es:[edi],dx
  40acf2:	jnp    0x40acd9
  40acf4:	push   edx
  40acf5:	push   esi
  40acf6:	pop    ebp
  40acf7:	push   ds
  40acf8:	popa   
  40acf9:	and    eax,0x736ab383
  40acfe:	fcom   QWORD PTR [ebp-0x5f]
  40ad01:	mov    dh,0xbb
  40ad03:	and    cl,ah
  40ad05:	sbb    ah,cl
  40ad07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad08:	aam    0x1b
  40ad0a:	ins    DWORD PTR es:[edi],dx
  40ad0b:	inc    esp
  40ad0c:	mov    fs,WORD PTR [ebx+ecx*4+0x20]
  40ad10:	rcl    BYTE PTR [eax+0x59d9545f],0xe3
  40ad17:	push   edx
  40ad18:	aas    
  40ad19:	jge    0x40ad35
  40ad1b:	mov    ebx,DWORD PTR [ecx-0x60]
  40ad1e:	add    ah,BYTE PTR [eax]
  40ad20:	cmp    BYTE PTR [edx+0x6d4fa336],al
  40ad26:	fild   WORD PTR [ebp-0x21003f94]
  40ad2c:	lahf   
  40ad2d:	test   al,0x0
  40ad2f:	adc    BYTE PTR es:[ebx+0x4d],cl
  40ad33:	in     eax,dx
  40ad34:	test   DWORD PTR [ebx+edx*2-0x75dece49],ecx
  40ad3b:	cmp    eax,0x61747e53
  40ad40:	inc    esp
  40ad41:	xchg   ebx,eax
  40ad42:	fadd   st(0),st
  40ad44:	ja     0x40accc
  40ad46:	clc    
  40ad47:	fild   DWORD PTR [ecx-0x17]
  40ad4a:	sbb    DWORD PTR [edi],edx
  40ad4c:	mov    cl,0x1a
  40ad4e:	(bad)  
  40ad4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad50:	adc    DWORD PTR [eax-0x4],ecx
  40ad53:	sub    al,0x6a
  40ad55:	icebp  
  40ad56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad57:	push   edi
  40ad58:	and    eax,edx
  40ad5a:	or     eax,esi
  40ad5c:	sbb    eax,ebp
  40ad5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad5f:	adc    al,BYTE PTR [ebx-0x80]
  40ad62:	stos   BYTE PTR es:[edi],al
  40ad63:	loopne 0x40aceb
  40ad65:	xchg   edi,eax
  40ad66:	aaa    
  40ad67:	mov    edx,0x45444859
  40ad6c:	jno    0x40acf4
  40ad6e:	cmp    ecx,edx
  40ad70:	test   al,0x13
  40ad72:	sbb    al,0x88
  40ad74:	adc    ebx,DWORD PTR [esi]
  40ad76:	jg     0x40ad0d
  40ad78:	ja     0x40adce
  40ad7a:	jge    0x40add4
  40ad7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7d:	pop    ebx
  40ad7e:	sbb    ah,BYTE PTR [ebx+0x4186f755]
  40ad84:	inc    esi
  40ad85:	and    DWORD PTR [ecx-0x22eee77c],ecx
  40ad8b:	mov    al,ds:0x38061dab
  40ad90:	cwde   
  40ad91:	std    
  40ad92:	(bad)  
  40ad94:	rcl    DWORD PTR [ebx+0x6f13d83e],0x20
  40ad9b:	xchg   ecx,eax
  40ad9c:	sar    BYTE PTR [edx-0x7c],0x23
  40ada0:	div    DWORD PTR [edi+0x36]
  40ada3:	pop    edx
  40ada4:	in     eax,dx
  40ada5:	fld    st(1)
  40ada7:	out    0x83,eax
  40ada9:	fstp   QWORD PTR [edi]
  40adab:	adc    bl,cl
  40adad:	or     BYTE PTR [ebx],dh
  40adaf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40adb1:	mov    ch,0x12
  40adb3:	fstp   TBYTE PTR [edi]
  40adb5:	test   DWORD PTR [edi-0x66],eax
  40adb8:	std    
  40adb9:	xchg   edx,eax
  40adba:	enter  0xa411,0xb7
  40adbe:	pop    ebp
  40adbf:	pop    ss
  40adc0:	gs pop ecx
  40adc2:	ds mov eax,0x32085843
  40adc8:	adc    eax,0x661b0d16
  40adcd:	retf   
  40adce:	add    ecx,ebx
  40add0:	xchg   eax,ebx
  40add2:	cmp    BYTE PTR [esi-0x7646dd16],al
  40add8:	cmp    DWORD PTR [ebp-0x22e35e0d],edx
  40adde:	mov    al,ds:0xab96489f
  40ade3:	test   al,0xcb
  40ade5:	ins    BYTE PTR es:[edi],dx
  40ade6:	in     eax,dx
  40ade7:	gs ret 0x3573
  40adeb:	push   0x451726
  40adf0:	clc    
  40adf1:	sbb    al,0xe3
  40adf3:	rcr    BYTE PTR [ecx],1
  40adf5:	fldenv [eax]
  40adf7:	or     eax,0x182eb410
  40adfc:	bound  edx,QWORD PTR [ecx-0x51]
  40adff:	jecxz  0x40ae13
  40ae01:	push   ds
  40ae02:	add    BYTE PTR [ebp+0x14],ch
  40ae05:	out    0x5e,eax
  40ae07:	push   edi
  40ae08:	xlat   BYTE PTR ds:[ebx]
  40ae09:	adc    esp,0x21d9397
  40ae0f:	gs push edi
  40ae11:	jns    0x40adce
  40ae13:	test   eax,0x9ac9aac5
  40ae18:	push   ebx
  40ae19:	push   ds
  40ae1a:	or     al,0x3
  40ae1c:	call   0x86d4:0xa09cb54e
  40ae23:	ins    DWORD PTR es:[edi],dx
  40ae24:	(bad)  
  40ae25:	xor    ebx,DWORD PTR [edx]
  40ae27:	stc    
  40ae28:	cmp    DWORD PTR [ebp-0x42],eax
  40ae2b:	xor    ebp,DWORD PTR [ebp+0x1b70923c]
  40ae31:	pop    esi
  40ae32:	and    BYTE PTR [ecx-0x7b],0x66
  40ae36:	int    0x62
  40ae38:	xor    al,0xd7
  40ae3a:	out    0xa0,eax
  40ae3c:	and    al,0x52
  40ae3e:	add    BYTE PTR ss:[edi-0x6b1b250e],ah
  40ae45:	ret    
  40ae46:	pushf  
  40ae47:	pop    ecx
  40ae48:	or     eax,0xc3e045c7
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42829b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428263
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428397,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42827b
  40aea0:	cmp    DWORD PTR ds:0x42829b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280cb
  40aebd:	call   DWORD PTR ds:0x428e88
  40aec3:	mov    ecx,DWORD PTR ds:0x42831b
  40aec9:	xor    DWORD PTR ds:0x42823f,ecx
  40aecf:	or     DWORD PTR ds:0x42838b,ecx
  40aed5:	or     DWORD PTR ds:0x4282a3,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x4282af
  40aee1:	adc    DWORD PTR ds:0x428277,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428173
  40aeef:	adc    ecx,DWORD PTR ds:0x428397
  40aef5:	mov    DWORD PTR ds:0x428173,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428393,0x428307
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428173,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	scas   al,BYTE PTR es:[edi]
  40af30:	cwde   
  40af31:	ins    DWORD PTR es:[edi],dx
  40af32:	mov    al,0xb5
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	sub    eax,esp
  40af3d:	pop    edi
  40af3e:	das    
  40af3f:	scas   al,BYTE PTR es:[edi]
  40af40:	(bad)  
  40af41:	aaa    
  40af42:	add    BYTE PTR [ebx],ah
  40af44:	xlat   BYTE PTR ds:[ebx]
  40af45:	aas    
  40af46:	fbstp  TBYTE PTR [ebx]
  40af48:	(bad)  
  40af49:	jae    0x40afca
  40af4b:	gs mov edi,0xf7809fed
  40af51:	and    al,0x51
  40af53:	xor    al,dl
  40af55:	sub    dl,bl
  40af57:	cdq    
  40af58:	sbb    al,0xef
  40af5a:	je     0x40af52
  40af5c:	cs jae 0x40aee8
  40af5f:	mov    dh,0x3d
  40af61:	test   al,0x6f
  40af63:	sbb    al,0x93
  40af65:	mov    ds:0x54601a7e,al
  40af6a:	add    cl,BYTE PTR [ebp+0x57]
  40af6d:	enter  0x5e1c,0x30
  40af71:	(bad)  
  40af72:	fsubr  DWORD PTR [edi]
  40af74:	aaa    
  40af75:	ds repnz mov edi,0x9200c15f
  40af7c:	ins    DWORD PTR es:[edi],dx
  40af7d:	jnp    0x40afc5
  40af7f:	in     eax,dx
  40af80:	pop    ecx
  40af81:	retf   
  40af82:	sar    esi,cl
  40af84:	jle    0x40af8e
  40af86:	fstp   TBYTE PTR [eax-0x4b3b262e]
  40af8c:	sub    al,0xfd
  40af8e:	pop    ecx
  40af8f:	test   DWORD PTR [ebx],esp
  40af91:	lds    ebp,FWORD PTR [edi-0x75]
  40af94:	call   0xca44bfb2
  40af99:	push   ebx
  40af9a:	mov    BYTE PTR [eax],bl
  40af9c:	pop    es
  40af9d:	and    al,0x1e
  40af9f:	xchg   ecx,eax
  40afa0:	mov    dh,al
  40afa2:	sbb    DWORD PTR [ebp-0x74],esi
  40afa5:	xor    eax,0x8a1bf99a
  40afaa:	mov    esi,0xa023f4e9
  40afaf:	mov    cl,0x28
  40afb1:	mov    ah,0x5c
  40afb3:	add    ebx,DWORD PTR [edx]
  40afb5:	imul   eax,DWORD PTR [ebp+0x233d9537],0x1ab823ea
  40afbf:	cwde   
  40afc0:	mov    edi,0xe1ba136b
  40afc5:	cmc    
  40afc6:	dec    ecx
  40afc7:	pushf  
  40afc8:	mov    esp,0x921b452b
  40afcd:	or     DWORD PTR [eax-0x4dc695c0],ebx
  40afd3:	sub    al,0x40
  40afd5:	stos   BYTE PTR es:[edi],al
  40afd6:	inc    esp
  40afd7:	shl    BYTE PTR [edx+0x1741c24c],1
  40afdd:	xchg   ecx,eax
  40afde:	jp     0x40af8f
  40afe0:	or     al,bh
  40afe2:	pop    es
  40afe3:	pushf  
  40afe4:	inc    esi
  40afe5:	and    eax,0xe2b731c1
  40afea:	mov    dh,0x40
  40afec:	xor    esp,DWORD PTR [edi+0x24fcb38a]
  40aff2:	xor    eax,0x94f4993b
  40aff7:	popf   
  40aff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aff9:	std    
  40affa:	dec    edx
  40affb:	ret    
  40affc:	jno    0x40b048
  40affe:	or     dh,BYTE PTR [edx]
  40b000:	ret    0x1d1b
  40b003:	mov    ds:0xe0fc6299,al
  40b008:	in     al,0xc8
  40b00a:	and    di,si
  40b00d:	(bad)  
  40b00e:	mov    al,ds:0xd86627f2
  40b013:	lods   eax,DWORD PTR ds:[esi]
  40b014:	cld    
  40b015:	dec    ecx
  40b016:	sar    ecx,cl
  40b018:	sar    DWORD PTR [ebp+0x20],1
  40b01b:	dec    eax
  40b01c:	addr16 push esp
  40b01e:	xchg   ebp,eax
  40b01f:	mov    ebp,0x511cbbf2
  40b024:	(bad)  
  40b025:	std    
  40b026:	xchg   ebp,eax
  40b027:	dec    esi
  40b028:	dec    ecx
  40b029:	pop    eax
  40b02a:	mov    ecx,0x4e4a8db
  40b02f:	xchg   edi,eax
  40b030:	jl     0x40b00d
  40b032:	inc    ebp
  40b033:	jle    0x40afc7
  40b035:	enter  0x87d9,0x42
  40b039:	add    al,0x2f
  40b03b:	fcom   DWORD PTR [edi+eiz*1]
  40b03e:	enter  0xb920,0x34
  40b042:	(bad)  
  40b044:	cmp    al,0x7a
  40b046:	mov    DWORD PTR [ecx+0x72],ecx
  40b049:	mov    esi,0xb452d0ca
  40b04e:	cmp    eax,0xf57c76ac
  40b053:	add    BYTE PTR [esi],dh
  40b055:	adc    ah,dl
  40b057:	cli    
  40b058:	sbb    BYTE PTR [ebp+0x3a],cl
  40b05b:	jmp    0x40b0d9
  40b05d:	test   BYTE PTR [esi+0x4],bl
  40b060:	adc    DWORD PTR es:[eax-0x26],ecx
  40b064:	mov    WORD PTR [esi+0x5640282f],es
  40b06a:	mov    edx,0x96766cc7
  40b06f:	adc    edx,edi
  40b071:	sbb    eax,0xd295c2fa
  40b076:	add    edi,DWORD PTR [eax-0x4f]
  40b079:	popa   
  40b07a:	aaa    
  40b07b:	xchg   ebx,eax
  40b07c:	pop    eax
  40b07d:	dec    ebx
  40b07e:	(bad)
  40b081:	jne    0x40b0f1
  40b083:	push   edx
  40b084:	scas   eax,DWORD PTR es:[edi]
  40b085:	pop    ebx
  40b086:	mov    ecx,0x97fd5ecb
  40b08b:	sub    BYTE PTR [esi+edx*1-0x72145d98],cl
  40b092:	inc    ebx
  40b093:	mov    esi,0x66424711
  40b098:	jne    0x40b0a6
  40b09a:	test   BYTE PTR [ebp-0x48],dh
  40b09d:	repz js 0x40b0ab
  40b0a0:	inc    edi
  40b0a1:	shl    DWORD PTR [edi+ebx*1+0x7ef44889],0xc1
  40b0a9:	fwait
  40b0aa:	mov    al,0x1d
  40b0ac:	jno    0x40b056
  40b0ae:	xchg   ebp,eax
  40b0af:	xor    BYTE PTR [ebx+0x35206a0],0x6f
  40b0b6:	scas   eax,DWORD PTR es:[edi]
  40b0b7:	loope  0x40b102
  40b0b9:	loope  0x40b06b
  40b0bb:	iret   
  40b0bc:	pop    esp
  40b0bd:	out    dx,eax
  40b0be:	and    DWORD PTR [edx+0x3a262d1e],eax
  40b0c4:	retf   0xfb90
  40b0c7:	jge    0x40b051
  40b0c9:	sub    edx,DWORD PTR [ebp+0x5503f608]
  40b0cf:	dec    ecx
  40b0d0:	imul   esi,DWORD PTR [esi+0x75],0x3bcae321
  40b0d7:	pop    ebp
  40b0d8:	scas   eax,DWORD PTR es:[edi]
  40b0d9:	push   ebp
  40b0da:	rcr    BYTE PTR [ebx+0xe],0x9d
  40b0de:	mov    dh,0x9b
  40b0e0:	mov    ebp,0x3192509b
  40b0e5:	jnp    0x40b11f
  40b0e7:	pop    esi
  40b0e8:	(bad)  
  40b0e9:	sub    al,0x6f
  40b0eb:	and    BYTE PTR [ebx+0x4c],0xfe
  40b0ef:	call   DWORD PTR [esi+0x7c399f49]
  40b0f5:	test   al,0xe1
  40b0f7:	jmp    0x40b173
  40b0f9:	ror    DWORD PTR gs:[ebp+0x658aa6e8],1
  40b100:	test   BYTE PTR cs:[edx+0x1e9579a0],0xe4
  40b108:	nop
  40b109:	cli    
  40b10a:	in     eax,dx
  40b10b:	out    dx,al
  40b10c:	xchg   ebp,eax
  40b10d:	rcl    BYTE PTR [ecx],0xb
  40b110:	out    dx,al
  40b111:	fs pop ebx
  40b113:	mov    dh,0x9b
  40b115:	into   
  40b116:	push   ecx
  40b117:	cwde   
  40b118:	ins    BYTE PTR es:[edi],dx
  40b119:	retf   0x3289
  40b11c:	mov    al,ds:0xe687a96
  40b121:	imul   si,ax,0x5f
  40b125:	pop    edx
  40b126:	ror    DWORD PTR [edi],0xbf
  40b129:	jecxz  0x40b0b8
  40b12b:	jmp    0x59ae:0x67afe6f
  40b132:	pop    eax
  40b133:	jg     0x40b17c
  40b135:	lds    esi,FWORD PTR [ecx]
  40b137:	int    0x70
  40b139:	and    eax,0x1f771453
  40b13e:	iret   
  40b13f:	ss mov dl,0x83
  40b142:	or     bl,dl
  40b144:	dec    esp
  40b145:	mov    ah,0xad
  40b147:	xchg   esi,eax
  40b148:	add    al,0x7e
  40b14a:	daa    
  40b14b:	fstp   TBYTE PTR [esi+0x21b6eab0]
  40b151:	xor    eax,0x51a46bba
  40b156:	add    DWORD PTR [eax-0x26],esp
  40b159:	sub    edx,DWORD PTR [esi+eax*1+0x16]
  40b15d:	loop   0x40b12b
  40b15f:	push   esp
  40b160:	rol    DWORD PTR [ebx],cl
  40b162:	jne    0x40b171
  40b164:	cld    
  40b165:	dec    ecx
  40b166:	pop    eax
  40b167:	cwde   
  40b168:	ret    
  40b169:	push   edi
  40b16a:	arpl   WORD PTR [eax-0x5e0138c0],si
  40b170:	pushf  
  40b171:	jg     0x40b13b
  40b173:	retf   0xb1d4
  40b176:	repz cwde 
  40b178:	dec    ebp
  40b179:	aas    
  40b17a:	fcmovne st,st(4)
  40b17c:	sub    DWORD PTR ds:0x3791831a,0xa34e4682
  40b186:	icebp  
  40b187:	sub    bl,BYTE PTR [ecx]
  40b189:	add    DWORD PTR [edi],edi
  40b18b:	mov    gs,WORD PTR [edx-0x207b9093]
  40b191:	mov    DWORD PTR cs:[ebx-0x36],eax
  40b195:	addr16 ss dec ebx
  40b198:	mov    ds:0x755ea22f,eax
  40b19d:	dec    esp
  40b19e:	je     0x40b1ec
  40b1a0:	mov    ds:0x7c420596,al
  40b1a5:	push   ebx
  40b1a6:	jbe    0x40b12a
  40b1a8:	fidivr DWORD PTR ds:0xb12a4f1a
  40b1ae:	outs   dx,DWORD PTR ds:[esi]
  40b1af:	out    0x5e,eax
  40b1b1:	inc    esi
  40b1b2:	jmp    0x25197be6
  40b1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1b8:	pop    edi
  40b1b9:	push   0x18
  40b1bb:	jecxz  0x40b233
  40b1bd:	push   esi
  40b1be:	scas   al,BYTE PTR es:[edi]
  40b1bf:	add    bh,ah
  40b1c1:	out    0x60,eax
  40b1c3:	fdiv   DWORD PTR [ebp-0x5c]
  40b1c6:	mov    cl,0x46
  40b1c8:	sbb    DWORD PTR [edi+0x5],esp
  40b1cb:	jl     0x40b23c
  40b1cd:	mov    al,ds:0xe857657
  40b1d2:	add    al,0xf0
  40b1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d5:	add    esi,DWORD PTR [ecx-0x7f7d4311]
  40b1db:	(bad)  
  40b1dc:	jmp    0x40b240
  40b1de:	jl     0x40b1d6
  40b1e0:	inc    ecx
  40b1e1:	sbb    esi,DWORD PTR fs:[ecx]
  40b1e4:	retf   0x8790
  40b1e7:	std    
  40b1e8:	xchg   ebx,eax
  40b1e9:	push   eax
  40b1ea:	mov    al,gs:0xc9631a3a
  40b1f0:	test   dl,cl
  40b1f2:	jmp    0xf02860a9
  40b1f7:	imul   eax,DWORD PTR [edx-0x3e],0xd062129e
  40b1fe:	(bad)  
  40b1ff:	jbe    0x40b1d9
  40b201:	mov    ah,0x10
  40b203:	sahf   
  40b204:	jo     0x40b1df
  40b206:	(bad)  
  40b207:	xor    BYTE PTR [esi+ebp*2+0x5d],al
  40b20b:	mov    eax,0x5940368b
  40b210:	shl    DWORD PTR [eax+0x27],0x2a
  40b214:	(bad)  
  40b215:	and    ch,BYTE PTR [edi]
  40b217:	inc    esi
  40b218:	dec    edx
  40b219:	and    ebx,DWORD PTR [eax+0x7fe31fc7]
  40b21f:	inc    esi
  40b220:	mov    cl,0x12
  40b222:	pop    ds
  40b223:	pop    es
  40b224:	mov    ds:0xa3930133,al
  40b229:	adc    DWORD PTR [ebx-0x53],eax
  40b22c:	rcl    ebx,1
  40b22e:	ds ja  0x40b24c
  40b231:	mov    bh,0xc0
  40b233:	std    
  40b234:	pop    esp
  40b235:	jo     0x40b25b
  40b237:	imul   ebx,edi,0x6788fc76
  40b23d:	ds mov ch,0x33
  40b240:	or     esp,edi
  40b242:	push   0x7
  40b244:	repz dec ecx
  40b246:	or     eax,0x8bda2053
  40b24b:	pop    eax
  40b24c:	shr    ebx,0x66
  40b24f:	and    al,0x4
  40b251:	adc    ebp,DWORD PTR [ebx+0x7cb25643]
  40b257:	sub    DWORD PTR ds:0x67a81627,ecx
  40b25d:	mov    ds:0xc5a18da0,eax
  40b262:	adc    dl,bl
  40b264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b265:	inc    esp
  40b266:	push   edi
  40b267:	daa    
  40b268:	add    DWORD PTR [esp+edi*2-0x62e3ac6a],ecx
  40b26f:	call   0xef56:0x7d8bc0b6
  40b276:	outs   dx,BYTE PTR ds:[esi]
  40b277:	adc    DWORD PTR [edx-0x2e7c1029],0xffffffb1
  40b27e:	pop    eax
  40b27f:	mov    edi,0x92a7ec25
  40b284:	xlat   BYTE PTR ds:[ebx]
  40b285:	mov    bl,0xbb
  40b287:	jge    0x40b2a4
  40b289:	sbb    eax,DWORD PTR [esi-0x4f]
  40b28c:	mov    ebx,0x5959fdd9
  40b291:	jmp    0x6e25:0x73d2cb67
  40b298:	xchg   esp,eax
  40b299:	test   al,0xaf
  40b29b:	call   0xae5dc9cf
  40b2a0:	scas   eax,DWORD PTR es:[edi]
  40b2a1:	fsub   DWORD PTR [ebx-0xf74c7da]
  40b2a7:	add    esp,DWORD PTR [esi-0x7e]
  40b2aa:	pop    ebp
  40b2ab:	fisttp DWORD PTR [ebx-0x3c]
  40b2ae:	imul   ebx,ebx,0x30
  40b2b1:	ret    
  40b2b2:	or     eax,DWORD PTR [ebp-0x549b607e]
  40b2b8:	mov    ch,0x87
  40b2ba:	dec    ecx
  40b2bb:	mov    dl,0x2a
  40b2bd:	mov    eax,0x253ce13
  40b2c2:	dec    esi
  40b2c3:	ja     0x40b273
  40b2c5:	jnp    0x40b2ef
  40b2c7:	xchg   ecx,eax
  40b2c8:	hlt    
  40b2c9:	loopne 0x40b2d7
  40b2cb:	pop    ss
  40b2cc:	sub    edi,DWORD PTR [eax-0x10c707cc]
  40b2d2:	pop    edi
  40b2d3:	cmp    ah,dl
  40b2d5:	push   ebp
  40b2d6:	pop    eax
  40b2d7:	cmp    dl,dl
  40b2d9:	xor    BYTE PTR [ebp+0x8],bl
  40b2dc:	mov    WORD PTR [ecx+0x7a99a471],fs
  40b2e2:	sti    
  40b2e3:	mov    al,0xb
  40b2e5:	jno    0x40b2f6
  40b2e7:	sbb    DWORD PTR [edi+edi*8-0x7c13dfc4],esp
  40b2ee:	sub    esp,ebp
  40b2f0:	mov    eax,0x5e78e9e5
  40b2f5:	pop    si
  40b2f7:	aad    0x33
  40b2f9:	enter  0x396d,0xfb
  40b2fd:	les    eax,FWORD PTR [esi+0x77c672df]
  40b303:	cmp    ch,bl
  40b305:	ret    
  40b306:	(bad)  
  40b307:	std    
  40b308:	adc    al,0x71
  40b30a:	in     eax,dx
  40b30b:	sti    
  40b30c:	or     edi,ebp
  40b30e:	inc    edx
  40b30f:	fisttp DWORD PTR [ecx]
  40b311:	mov    edi,0x815002ef
  40b316:	adc    eax,0x4282fb
  40b31b:	mov    bl,0x82
  40b31d:	inc    edx
  40b31e:	add    al,ch
  40b320:	cld    
  40b321:	mov    eax,0x351b0000
  40b326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b327:	add    BYTE PTR [edx+0x0],0x8b
  40b32b:	dec    ebp
  40b32c:	loopne 0x40b2af
  40b32e:	(bad)  
  40b32f:	xchg   BYTE PTR [ecx],ch
  40b331:	add    BYTE PTR [eax],al
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42823b,0x4282fb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428393,0x4282fb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42837b,0x42826f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x4283af,0x42824f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x4282af
  40b386:	adc    DWORD PTR ds:0x4281a3,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428317,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428283,0x42826f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42817b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428397,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428177,0x4283ab
  40b3c4:	call   0x422078
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42827b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x4282ab,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428293,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42832b
  40b3f3:	mov    eax,ds:0x4282a3
  40b3f8:	cmp    DWORD PTR ds:0x4282ab,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428eec
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42819b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42828b
  40b422:	or     DWORD PTR ds:0x42831b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428177,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x4283a3,0x0
  40b441:	mov    DWORD PTR ds:0x42831b,ecx
  40b447:	mov    DWORD PTR ds:0x42839b,0x318c
  40b451:	mov    DWORD PTR ds:0x4283ab,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428273,0x461b
  40b46a:	mov    DWORD PTR ds:0x4282af,0x63d9
  40b474:	cmp    DWORD PTR ds:0x4283a3,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ef0
  40b48f:	xor    edx,DWORD PTR ds:0x428283
  40b495:	adc    ecx,DWORD PTR ds:0x42838b
  40b49b:	and    DWORD PTR ds:0x42817b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42828f
  40b4b7:	xor    DWORD PTR ds:0x4283a3,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428273
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42818f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42816b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42823b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282b7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42818f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fe3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428dd8
  40b528:	sbb    DWORD PTR ds:0x4282a7,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281df
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283cb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x4281ab
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428253
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428283
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282b3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42838b,0x428253
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffffff
  40b596:	mov    ds:0x130ab0ad,al
  40b59b:	sbb    BYTE PTR [eax],bl
  40b59d:	outs   dx,BYTE PTR ds:[esi]
  40b59e:	adc    bl,BYTE PTR [eax]
  40b5a0:	sbb    al,ch
  40b5a2:	cmp    DWORD PTR [eax+0x31],esp
  40b5a5:	rcr    DWORD PTR [esi],0x42
  40b5a8:	push   ds
  40b5a9:	mov    WORD PTR [ebp+0x8],gs
  40b5ac:	jns    0x40b574
  40b5ae:	pop    eax
  40b5af:	pop    ebp
  40b5b0:	aam    0x4
  40b5b2:	mov    edx,0xa6a60916
  40b5b7:	dec    ebx
  40b5b8:	lds    ebp,FWORD PTR [edi+0x4689ce37]
  40b5be:	inc    esp
  40b5bf:	jmp    0x40b633
  40b5c1:	icebp  
  40b5c2:	mov    ebp,eax
  40b5c4:	push   esi
  40b5c5:	jge    0x40b5b0
  40b5c7:	push   esp
  40b5c8:	sbb    ebx,DWORD PTR [ecx]
  40b5ca:	loope  0x40b5f8
  40b5cc:	mov    bh,0xfa
  40b5ce:	outs   dx,BYTE PTR ds:[esi]
  40b5cf:	or     esp,esi
  40b5d1:	fsubr  QWORD PTR [edi]
  40b5d3:	xchg   esp,eax
  40b5d4:	cmp    BYTE PTR [esi+0x7b],al
  40b5d7:	pusha  
  40b5d8:	mov    ds:0x3c7b0b35,eax
  40b5dd:	sbb    eax,0x85d6a6b2
  40b5e2:	jge    0x40b62e
  40b5e4:	jmp    0x6ee1:0x7230219b
  40b5eb:	pop    ecx
  40b5ec:	add    si,WORD PTR [ebx+edi*1]
  40b5f0:	rol    ebp,cl
  40b5f2:	hlt    
  40b5f3:	sub    al,0x2f
  40b5f5:	call   0xc6b9:0x9052c2ba
  40b5fc:	not    edx
  40b5fe:	add    al,0xfa
  40b600:	icebp  
  40b601:	call   DWORD PTR [edx-0xc702c58]
  40b607:	pop    ebx
  40b608:	push   edx
  40b609:	sbb    DWORD PTR [ebx],esi
  40b60b:	mov    ecx,0x92f096dc
  40b610:	push   eax
  40b611:	jne    0x40b5f0
  40b613:	sbb    esi,DWORD PTR [eax-0x6e5e1d1d]
  40b619:	adc    eax,0x88a2256e
  40b61e:	push   ebx
  40b61f:	dec    esp
  40b620:	push   0xffffff95
  40b622:	inc    ebp
  40b623:	jg     0x40b5fd
  40b625:	xchg   esi,eax
  40b626:	leave  
  40b627:	add    eax,0x527defbd
  40b62c:	inc    edi
  40b62d:	mov    ebx,0xfb71bdd9
  40b632:	std    
  40b633:	push   edi
  40b634:	cld    
  40b635:	xor    eax,0x1611ffe2
  40b63a:	jp     0x40b667
  40b63c:	push   ebx
  40b63d:	push   eax
  40b63e:	or     DWORD PTR [ecx+0x44],ecx
  40b641:	push   esp
  40b642:	and    BYTE PTR [ecx+0x48],ah
  40b645:	outs   dx,DWORD PTR ds:[esi]
  40b646:	xor    BYTE PTR [ebp*1-0x3c1e3843],cl
  40b64d:	cmp    ebx,DWORD PTR [edi]
  40b64f:	mov    WORD PTR [edi+0x60],ss
  40b652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b653:	sar    BYTE PTR [edx],cl
  40b655:	out    dx,eax
  40b656:	fcom   QWORD PTR [esi-0x45fabc78]
  40b65c:	cdq    
  40b65d:	cmp    al,0x7c
  40b65f:	stos   DWORD PTR es:[edi],eax
  40b660:	jnp    0x40b607
  40b662:	and    al,0xca
  40b664:	push   ds
  40b665:	mov    eax,ds:0x88753c20
  40b66a:	sub    eax,0x2ef44905
  40b66f:	mov    ebp,?
  40b671:	jecxz  0x40b600
  40b673:	mov    ah,0x11
  40b675:	xchg   DWORD PTR [eax],edx
  40b677:	es add dh,cl
  40b67a:	sbb    DWORD PTR [ebx+0x266d5688],esi
  40b680:	pop    ss
  40b681:	push   es
  40b682:	(bad)  
  40b683:	out    0x58,eax
  40b685:	popa   
  40b686:	pop    edi
  40b687:	pusha  
  40b688:	pop    es
  40b689:	out    0x91,al
  40b68b:	cmp    BYTE PTR [edx-0x5e],bh
  40b68e:	and    al,0x24
  40b690:	inc    edi
  40b691:	mov    ?,ebx
  40b693:	add    eax,0xea379bac
  40b698:	imul   esi,DWORD PTR [eax+0x4],0xbc30c5e3
  40b69f:	pop    ebx
  40b6a0:	call   0x62e6:0xe61558bd
  40b6a7:	mov    dl,0xf2
  40b6a9:	add    ebp,edx
  40b6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ac:	(bad)  [ebp+0x49]
  40b6af:	(bad)  [edi]
  40b6b1:	loope  0x40b710
  40b6b3:	push   ebx
  40b6b4:	jmp    0x3492:0x5d635b46
  40b6bb:	loop   0x40b6c5
  40b6bd:	in     al,dx
  40b6be:	mov    ds:0x7df1ec38,al
  40b6c3:	inc    edi
  40b6c4:	pushf  
  40b6c5:	inc    ebx
  40b6c6:	xchg   ebp,eax
  40b6c7:	div    DWORD PTR [esi+0x29]
  40b6ca:	fwait
  40b6cb:	imul   esi,DWORD PTR [eax-0x577b84d1],0x3c5ce03b
  40b6d5:	jl     0x40b6db
  40b6d7:	scas   eax,DWORD PTR es:[edi]
  40b6d8:	scas   al,BYTE PTR es:[edi]
  40b6d9:	repnz inc esi
  40b6db:	cmp    eax,0x8e119478
  40b6e0:	xchg   DWORD PTR [eax-0x33],edi
  40b6e3:	jg     0x40b6ca
  40b6e5:	dec    esp
  40b6e6:	cli    
  40b6e7:	dec    esi
  40b6e8:	sub    al,0x5b
  40b6ea:	aas    
  40b6eb:	and    bh,BYTE PTR [esi-0x4e9ef45b]
  40b6f1:	fstp   QWORD PTR [ebx-0x28d6a1a9]
  40b6f7:	(bad)  
  40b6f8:	jle    0x40b6df
  40b6fa:	mov    ch,0x9f
  40b6fc:	sub    dh,bh
  40b6fe:	fxtract 
  40b700:	sub    BYTE PTR ds:0x4ccbac05,ch
  40b706:	stos   BYTE PTR es:[edi],al
  40b707:	popf   
  40b708:	repnz iret 
  40b70a:	iret   
  40b70b:	jge    0x40b772
  40b70d:	pop    edx
  40b70e:	xchg   edx,eax
  40b70f:	test   al,0x90
  40b711:	leave  
  40b712:	sub    DWORD PTR [edx],ebx
  40b714:	fnstsw WORD PTR [ebx+ebx*8]
  40b717:	add    BYTE PTR [edx-0x2e1bb386],ch
  40b71d:	ins    DWORD PTR es:[edi],dx
  40b71e:	mov    eax,0xbedfe74c
  40b723:	xchg   ecx,eax
  40b724:	xor    BYTE PTR [ebp-0x6a],ah
  40b727:	lods   eax,DWORD PTR ds:[esi]
  40b728:	ins    BYTE PTR es:[edi],dx
  40b729:	fcom   DWORD PTR [ebp-0x3c]
  40b72c:	out    0x98,eax
  40b72e:	rcl    DWORD PTR [edi+ebx*4],cl
  40b731:	call   0xb7ff:0x7ed4a296
  40b738:	or     ebp,DWORD PTR [ebx]
  40b73a:	gs push ecx
  40b73c:	add    eax,0x98733b6b
  40b741:	and    DWORD PTR [ebx],esi
  40b743:	int    0xfe
  40b745:	iret   
  40b746:	int    0x8f
  40b748:	sub    al,0xe5
  40b74a:	loopne 0x40b700
  40b74c:	mov    edi,0x6f34627e
  40b751:	imul   DWORD PTR [edi+0x713bf82]
  40b757:	lock fnstenv [ebx]
  40b75a:	xchg   ebp,eax
  40b75b:	xchg   esi,eax
  40b75c:	mov    edi,0x2994863d
  40b761:	push   0x1ae6c17a
  40b766:	out    0x25,eax
  40b768:	dec    ecx
  40b769:	or     ch,0xb4
  40b76c:	sti    
  40b76d:	cs mov ch,0xbe
  40b770:	add    BYTE PTR [ecx+0x2b],ah
  40b773:	aam    0xa
  40b775:	dec    eax
  40b776:	push   ebx
  40b777:	mov    di,0xf75a
  40b77b:	xchg   edi,eax
  40b77c:	pusha  
  40b77d:	loop   0x40b703
  40b77f:	adc    DWORD PTR [ebx+0x4908e0e7],edx
  40b785:	mov    al,ds:0xdf657378
  40b78a:	in     eax,dx
  40b78b:	sar    DWORD PTR [ebp-0x4a],cl
  40b78e:	mov    ah,0xbf
  40b790:	mov    esi,DWORD PTR [edx+0x58]
  40b793:	add    ebx,DWORD PTR [esi-0x3406c447]
  40b799:	fidivr WORD PTR [ebp+ebp*2+0x7cd6fa2]
  40b7a0:	sub    edx,esi
  40b7a2:	and    al,0xba
  40b7a4:	cmp    eax,0x55bab750
  40b7a9:	mov    edx,0xcaa344d
  40b7ae:	dec    ecx
  40b7af:	inc    ebp
  40b7b0:	xchg   ecx,eax
  40b7b1:	sub    eax,DWORD PTR [ebx]
  40b7b3:	xchg   BYTE PTR [edi+0x30],cl
  40b7b6:	call   0x150a:0x84140956
  40b7bd:	xchg   ebp,eax
  40b7be:	or     al,0x21
  40b7c0:	mov    bl,0x4b
  40b7c2:	xor    BYTE PTR [eax+0x6b],dl
  40b7c5:	(bad)  
  40b7c6:	adc    al,BYTE PTR [eax]
  40b7c8:	pop    ebp
  40b7c9:	inc    ebx
  40b7ca:	in     eax,0xf8
  40b7cc:	inc    ecx
  40b7cd:	adc    BYTE PTR [edx*4-0x4af39d62],cl
  40b7d4:	leave  
  40b7d5:	push   edi
  40b7d6:	or     ebx,DWORD PTR ss:[ebx]
  40b7d9:	mov    dh,0xc2
  40b7dc:	(bad)  
  40b7dd:	push   ebp
  40b7de:	and    ebx,esi
  40b7e0:	or     DWORD PTR [esi+0x47],0x506ed5bb
  40b7e7:	outs   dx,DWORD PTR ds:[esi]
  40b7e8:	cmp    esp,DWORD PTR [edi+ecx*2-0x391c3899]
  40b7ef:	add    ah,BYTE PTR [ecx]
  40b7f1:	or     eax,0xc0a2f2cc
  40b7f6:	jmp    0x40b831
  40b7f8:	pop    ecx
  40b7f9:	sbb    bh,BYTE PTR [ecx-0x43]
  40b7fc:	xor    al,0x79
  40b7fe:	xchg   BYTE PTR [ebx],al
  40b800:	pop    esp
  40b801:	or     DWORD PTR [edx-0xab83ce3],eax
  40b807:	dec    esi
  40b808:	mov    ch,0xd9
  40b80a:	mov    ah,0x94
  40b80c:	cmp    eax,0xf523f9b8
  40b811:	popa   
  40b812:	mov    eax,ds:0x4e0cb005
  40b817:	jb     0x40b82d
  40b819:	dec    esp
  40b81a:	xchg   BYTE PTR [esi+0x227616b3],cl
  40b820:	mov    fs,WORD PTR [esi+0x2182beff]
  40b826:	popf   
  40b827:	jae    0x40b868
  40b829:	jne    0x40b854
  40b82b:	idiv   BYTE PTR [ecx-0x53668c39]
  40b831:	dec    edi
  40b832:	push   edx
  40b833:	sbb    cl,0xee
  40b836:	sbb    eax,0x542d0fae
  40b83b:	jb     0x40b814
  40b83d:	add    DWORD PTR [ebp+0x5a],0x4b
  40b841:	mov    ch,0xd3
  40b843:	mov    edi,0x715ae5aa
  40b848:	iret   
  40b849:	push   cs
  40b84a:	adc    ebx,DWORD PTR [edi+0x17112949]
  40b850:	into   
  40b851:	xchg   DWORD PTR [ebx+0x2e],esp
  40b854:	and    al,0x1
  40b856:	(bad)  
  40b857:	sub    eax,0xba556761
  40b85c:	mov    ah,0x37
  40b85e:	stc    
  40b85f:	daa    
  40b860:	inc    ebx
  40b861:	cpuid  
  40b863:	or     DWORD PTR [eax],esp
  40b865:	nop
  40b866:	sti    
  40b867:	pop    ds
  40b868:	cld    
  40b869:	sub    ah,BYTE PTR [esi-0x2e]
  40b86c:	jge    0x40b83c
  40b86e:	out    0xe4,eax
  40b870:	add    esp,DWORD PTR [ecx]
  40b872:	(bad)  
  40b873:	popf   
  40b874:	inc    edi
  40b875:	xor    cl,BYTE PTR [edi-0x793f050a]
  40b87b:	dec    esi
  40b87c:	add    al,BYTE PTR [esi]
  40b87e:	popf   
  40b87f:	out    0xda,al
  40b881:	mov    dh,0x7a
  40b883:	pop    ecx
  40b884:	sahf   
  40b885:	pushf  
  40b886:	aad    0x49
  40b888:	stc    
  40b889:	clc    
  40b88a:	mov    eax,ds:0x6e342ce6
  40b88f:	mov    edx,0x67480a89
  40b894:	mov    edx,esp
  40b896:	out    dx,al
  40b897:	add    al,0x9d
  40b899:	and    al,0x86
  40b89b:	adc    al,0x32
  40b89d:	mov    ecx,es
  40b89f:	jne    0x40b875
  40b8a1:	push   ds
  40b8a2:	or     BYTE PTR [eax-0x68a06275],cl
  40b8a8:	lock xor ah,dl
  40b8ab:	retf   
  40b8ac:	mov    al,0xd5
  40b8ae:	adc    BYTE PTR [eax],bh
  40b8b0:	add    al,0x67
  40b8b2:	repnz fwait
  40b8b4:	leave  
  40b8b5:	dec    eax
  40b8b6:	sub    dl,BYTE PTR [eax]
  40b8b8:	out    0xb2,al
  40b8ba:	sti    
  40b8bb:	hlt    
  40b8bc:	stc    
  40b8bd:	mov    cl,0x2
  40b8bf:	pop    es
  40b8c0:	adc    al,0x65
  40b8c2:	inc    ebx
  40b8c3:	and    BYTE PTR [ebx-0x23],ah
  40b8c6:	push   0xe4801236
  40b8cb:	and    ecx,ebx
  40b8cd:	mov    ds:0x82ee88db,eax
  40b8d2:	lds    edi,FWORD PTR [ebp-0x3f]
  40b8d5:	pop    es
  40b8d6:	add    BYTE PTR [ebp-0x7c89cd4a],bh
  40b8dc:	xchg   BYTE PTR [edi],bl
  40b8de:	sahf   
  40b8df:	pop    ecx
  40b8e0:	xchg   edx,eax
  40b8e1:	adc    al,0x80
  40b8e3:	sahf   
  40b8e4:	retf   
  40b8e5:	arpl   WORD PTR [eax+0x7a],ax
  40b8e8:	sbb    ecx,ebp
  40b8ea:	and    BYTE PTR [edi+0x39],ah
  40b8ed:	push   edx
  40b8ee:	fisub  WORD PTR [esi+ebx*1+0x408394cd]
  40b8f5:	hlt    
  40b8f6:	call   0xcc0fcd7b
  40b8fb:	cmp    BYTE PTR [edx+0xe5051f2],cl
  40b901:	into   
  40b902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b903:	cmp    al,0x5d
  40b905:	repz rcr BYTE PTR [ebp+0x57dbd486],cl
  40b90c:	hlt    
  40b90d:	mov    ebx,0x94d8d104
  40b912:	shr    BYTE PTR [ecx+eax*4-0x693bef01],1
  40b919:	jbe    0x40b8ce
  40b91b:	cld    
  40b91c:	sub    bh,BYTE PTR [eax+0x6a]
  40b91f:	push   eax
  40b920:	push   ecx
  40b921:	jle    0x40b8ea
  40b923:	repnz and al,0xea
  40b926:	dec    ebp
  40b927:	pop    esp
  40b928:	xchg   edx,eax
  40b929:	push   cs
  40b92a:	mov    edx,DWORD PTR [ecx+ebp*4-0x49]
  40b92e:	fs xchg edi,eax
  40b930:	pop    esp
  40b931:	pop    ebp
  40b932:	or     eax,0x28b95013
  40b937:	pop    edi
  40b938:	sbb    ebx,esp
  40b93a:	and    DWORD PTR [esi+0x41f72f0a],eax
  40b940:	jb     0x40b8c5
  40b942:	sub    eax,ecx
  40b944:	lods   al,BYTE PTR ds:[esi]
  40b945:	mov    esp,0xa90ae53f
  40b94a:	xchg   ebp,eax
  40b94b:	push   0xffffffd8
  40b94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b94e:	mov    dl,BYTE PTR [ecx+esi*1]
  40b951:	add    eax,0xf3970122
  40b956:	fdivr  DWORD PTR [esp+ecx*8+0x4be41d09]
  40b95d:	retf   
  40b95e:	jp     0x40b974
  40b960:	sbb    esp,DWORD PTR [esi-0x32]
  40b963:	out    0x43,eax
  40b965:	imul   esp,DWORD PTR [eax-0x8b6c6],0x8ae2ac37
  40b96f:	pusha  
  40b970:	(bad)  
  40b971:	cmp    bh,BYTE PTR [ebp+eiz*1+0x1f]
  40b975:	inc    esp
  40b976:	int    0xb6
  40b978:	call   0x0:0x355c0553
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x428303,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428287
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428317,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42831f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428287,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42831f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x4283af,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42831f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428ddc
  40b9f7:	adc    DWORD PTR ds:0x4283ab,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x428307
  40ba0a:	sub    edx,DWORD PTR ds:0x42831b
  40ba10:	mov    DWORD PTR ds:0x428307,edx
  40ba16:	adc    DWORD PTR ds:0x428303,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428177
  40ba26:	xor    DWORD PTR ds:0x4283a3,edx
  40ba2c:	or     DWORD PTR ds:0x42824f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428287
  40ba3c:	or     DWORD PTR ds:0x428323,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	push   edx
  40baa4:	sbb    ecx,DWORD PTR [ecx+0x6a]
  40baa7:	pusha  
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	xlat   BYTE PTR ds:[ebx]
  40bab0:	push   edi
  40bab1:	retf   0x4c26
  40bab4:	jbe    0x40ba60
  40bab6:	pminub mm4,QWORD PTR [edx]
  40bab9:	xor    bl,bh
  40babb:	jns    0x40bacc
  40babd:	add    BYTE PTR [ecx],0x8
  40bac0:	(bad)  
  40bac1:	(bad)  
  40bac3:	push   cs
  40bac4:	jl     0x40bae6
  40bac6:	fisttp WORD PTR [esi]
  40bac8:	loopne 0x40bb3d
  40baca:	mov    al,ds:0x87737f39
  40bacf:	rcl    BYTE PTR [esi],1
  40bad1:	jae    0x40ba7a
  40bad3:	cmp    BYTE PTR fs:[esi+edi*8],ah
  40bad7:	sub    al,0x71
  40bad9:	cs repz gs loope 0x40bad7
  40bade:	ja     0x40bae9
  40bae0:	or     al,0xe4
  40bae2:	mov    ds:0xec9272ca,eax
  40bae7:	je     0x40bb32
  40bae9:	lea    edx,[esi+0x68fe09c9]
  40baef:	test   BYTE PTR [ebp-0x9],dh
  40baf2:	xor    eax,0xfa5d4274
  40baf7:	and    al,0xa4
  40baf9:	pushf  
  40bafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bafb:	cmc    
  40bafc:	sahf   
  40bafd:	mov    edi,0x4771df5e
  40bb02:	or     al,0x94
  40bb04:	lea    edx,[edi+0x24]
  40bb07:	fdiv   DWORD PTR gs:[eax+ebp*8+0x427e4b9b]
  40bb0f:	scas   al,BYTE PTR es:[edi]
  40bb10:	jb     0x40ba9c
  40bb12:	push   ecx
  40bb13:	or     eax,0x92ba1af
  40bb18:	adc    ecx,ebx
  40bb1a:	inc    ecx
  40bb1b:	inc    ecx
  40bb1c:	push   eax
  40bb1d:	sar    DWORD PTR [ecx+eiz*4],1
  40bb20:	sub    DWORD PTR [di],ecx
  40bb23:	xor    esp,DWORD PTR [ecx+0x3d7038f3]
  40bb29:	scas   al,BYTE PTR es:[edi]
  40bb2a:	jp     0x40bb6c
  40bb2c:	fs push ss
  40bb2e:	fmul   st(3),st
  40bb30:	aam    0xc6
  40bb32:	mov    ds:0xb149a0d4,al
  40bb37:	int3   
  40bb38:	sub    ch,BYTE PTR [esi-0x34]
  40bb3b:	dec    esp
  40bb3c:	or     BYTE PTR [ebp-0x4a],bh
  40bb3f:	sahf   
  40bb40:	inc    ecx
  40bb41:	pop    edi
  40bb42:	mov    eax,0x2becddca
  40bb47:	lahf   
  40bb48:	in     eax,dx
  40bb49:	sar    dh,1
  40bb4b:	dec    edx
  40bb4c:	xchg   esi,eax
  40bb4d:	pushf  
  40bb4e:	frstor [edi]
  40bb50:	xchg   BYTE PTR [eax+0x38],dl
  40bb53:	dec    ebp
  40bb54:	jno    0x40bb7d
  40bb56:	pop    eax
  40bb57:	cmp    ch,ch
  40bb59:	in     eax,dx
  40bb5a:	fcomp  QWORD PTR ds:0xb6754da0
  40bb60:	push   edx
  40bb61:	pop    ss
  40bb62:	mov    ebp,0x9a5de34e
  40bb67:	scas   al,BYTE PTR es:[edi]
  40bb68:	push   edx
  40bb69:	out    0x4f,al
  40bb6b:	add    bh,0xd2
  40bb6e:	inc    esi
  40bb6f:	call   0x335e8f28
  40bb74:	sub    al,0x0
  40bb76:	ja     0x40bb7f
  40bb78:	adc    edi,DWORD PTR [ebx+0x2444e74]
  40bb7e:	add    ebp,0x28
  40bb81:	add    edi,DWORD PTR [eax+0x761ec838]
  40bb87:	fcomp  st(4)
  40bb89:	outs   dx,DWORD PTR ds:[esi]
  40bb8a:	cmp    al,0x5a
  40bb8c:	dec    ebp
  40bb8d:	lods   al,BYTE PTR ds:[esi]
  40bb8e:	js     0x40bbfe
  40bb90:	mov    ebp,0xcb396c86
  40bb95:	test   eax,0x26ea8742
  40bb9a:	stc    
  40bb9b:	(bad)  
  40bb9d:	mov    ds:0xd3fe4903,al
  40bba2:	mov    eax,ds:0xbcae1bce
  40bba7:	in     al,dx
  40bba8:	test   eax,0xbf4c0f16
  40bbad:	fneni(8087 only) 
  40bbaf:	(bad)  
  40bbb0:	cwde   
  40bbb1:	call   0x37ae:0x46438d0f
  40bbb8:	adc    eax,0x8b8732fc
  40bbbd:	inc    edx
  40bbbe:	test   DWORD PTR [ebx],ecx
  40bbc0:	mov    esi,?
  40bbc2:	push   edx
  40bbc3:	addr16 call 0x850369c
  40bbc9:	mov    al,0x5b
  40bbcb:	retf   0x4c86
  40bbce:	fs stos BYTE PTR es:[edi],al
  40bbd0:	push   eax
  40bbd1:	imul   edx,DWORD PTR [ebx*1+0x575ce9d6],0xffffffc9
  40bbd9:	enter  0x3906,0x1b
  40bbdd:	dec    esi
  40bbde:	mov    DWORD PTR [eax-0x50],ebx
  40bbe1:	retf   
  40bbe2:	daa    
  40bbe3:	dec    esp
  40bbe4:	aaa    
  40bbe5:	jge    0x40bbc6
  40bbe7:	push   esi
  40bbe8:	(bad)  [edi*2+0x3588c905]
  40bbef:	icebp  
  40bbf0:	mov    bl,0x68
  40bbf2:	jmp    0x40bc44
  40bbf4:	cmp    al,0xf3
  40bbf6:	jg     0x40bbb6
  40bbf8:	int    0xf0
  40bbfa:	xchg   ecx,eax
  40bbfb:	(bad)
  40bbfe:	adc    cl,dh
  40bc00:	ins    BYTE PTR es:[edi],dx
  40bc01:	bnd jne 0x40bc1d
  40bc04:	in     eax,dx
  40bc05:	cmp    BYTE PTR [ecx+0x1e6d0620],cl
  40bc0b:	das    
  40bc0c:	(bad)
  40bc0f:	stos   DWORD PTR es:[edi],eax
  40bc10:	xchg   ebx,eax
  40bc11:	push   ss
  40bc12:	stos   BYTE PTR es:[edi],al
  40bc13:	mov    ch,BYTE PTR [esi+0x4c4a21b9]
  40bc19:	push   ds
  40bc1a:	fsubr  DWORD PTR [edx-0x67]
  40bc1d:	call   0x7ed3c647
  40bc22:	dec    BYTE PTR [ebx+0x308d4354]
  40bc28:	mov    eax,ds:0xb75771a1
  40bc2d:	sbb    BYTE PTR [esi+0x5fbe884a],dl
  40bc33:	and    DWORD PTR [ecx-0x54],eax
  40bc36:	lods   eax,DWORD PTR ds:[esi]
  40bc37:	pop    esi
  40bc38:	ins    BYTE PTR es:[edi],dx
  40bc39:	les    edi,FWORD PTR [esi]
  40bc3b:	cmp    al,0xd2
  40bc3d:	sbb    dl,BYTE PTR [esi+0x1e]
  40bc40:	inc    ecx
  40bc41:	mov    ?,eax
  40bc43:	mov    ch,0xb9
  40bc45:	pop    edi
  40bc46:	mov    esi,0x36d6e628
  40bc4b:	and    bl,bh
  40bc4d:	retf   
  40bc4e:	lea    ebp,[esi]
  40bc50:	or     bl,dh
  40bc52:	mov    bh,BYTE PTR [ecx+ebx*4-0x2696b7b3]
  40bc59:	push   cs
  40bc5a:	mov    BYTE PTR [esp+esi*1],bl
  40bc5d:	or     dl,BYTE PTR [edi-0x15e6bca5]
  40bc63:	test   al,0x31
  40bc65:	(bad)  
  40bc66:	lahf   
  40bc67:	test   eax,0xe03352c6
  40bc6c:	sbb    al,0xf0
  40bc6e:	xchg   edx,eax
  40bc6f:	cmp    eax,0xcff404f8
  40bc74:	pop    edx
  40bc75:	frstpm(287 only) 
  40bc77:	push   ebp
  40bc78:	adc    DWORD PTR [ebx],esi
  40bc7a:	xchg   ebp,eax
  40bc7b:	sub    cl,BYTE PTR [ecx+0x2e]
  40bc7e:	popf   
  40bc7f:	mov    cl,0x86
  40bc81:	xchg   esi,eax
  40bc82:	mov    al,ds:0x699583d
  40bc87:	or     bl,BYTE PTR [esi+0x9]
  40bc8a:	scas   al,BYTE PTR es:[edi]
  40bc8b:	in     al,dx
  40bc8c:	cmp    dl,0x96
  40bc8f:	push   cs
  40bc90:	mov    cs,WORD PTR [edi+0x3a05173b]
  40bc96:	adc    al,0x3c
  40bc98:	inc    esp
  40bc99:	lds    ecx,FWORD PTR [eax]
  40bc9b:	arpl   dx,sp
  40bc9d:	dec    edi
  40bc9e:	shl    BYTE PTR [edi],0x74
  40bca1:	ret    0xd616
  40bca4:	mov    edi,0x7fad417a
  40bca9:	add    al,0xcc
  40bcab:	sub    DWORD PTR [edx+0x2e],0xc7b1af7
  40bcb2:	std    
  40bcb3:	inc    esi
  40bcb4:	push   esi
  40bcb5:	cmp    al,0x2
  40bcb7:	sub    ebx,DWORD PTR ds:0x4131c55
  40bcbd:	mov    esp,0xf2da9397
  40bcc2:	popa   
  40bcc3:	xchg   ecx,eax
  40bcc4:	(bad)  
  40bcc6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcc8:	jnp    0x9c306305
  40bcce:	scas   al,BYTE PTR es:[edi]
  40bccf:	mov    DWORD PTR [edi-0x36bc4afd],ecx
  40bcd5:	pop    ss
  40bcd6:	(bad)  
  40bcd7:	sub    al,0x1b
  40bcd9:	jle    0x40bc7d
  40bcdb:	repz leave 
  40bcdd:	leave  
  40bcde:	outs   dx,DWORD PTR ds:[esi]
  40bcdf:	jne    0x40bd3e
  40bce1:	xchg   ebp,eax
  40bce2:	sub    ah,BYTE PTR [ebx-0x40c7dcbc]
  40bce8:	idiv   DWORD PTR ds:0xf15be072
  40bcee:	lods   eax,DWORD PTR ds:[esi]
  40bcef:	push   ss
  40bcf0:	mov    dl,0x1b
  40bcf2:	ins    BYTE PTR es:[edi],dx
  40bcf3:	xor    al,BYTE PTR [eax]
  40bcf5:	loopne 0x40bcb3
  40bcf7:	ret    0xbf29
  40bcfa:	push   0xffffffed
  40bcfc:	fld    DWORD PTR [ebp-0x65]
  40bcff:	inc    eax
  40bd00:	jmp    0x81919cef
  40bd05:	(bad)  
  40bd06:	out    dx,al
  40bd07:	fsub   DWORD PTR ds:0x8f1145e9
  40bd0d:	xchg   ecx,eax
  40bd0e:	aam    0x2
  40bd10:	mov    bl,0xe3
  40bd12:	sub    DWORD PTR [eax-0x5d1f24ad],ecx
  40bd18:	lds    esp,FWORD PTR [edi-0x6b]
  40bd1b:	fwait
  40bd1c:	pop    eax
  40bd1d:	pop    ss
  40bd1e:	add    ch,BYTE PTR [ebx+0x76b50dc0]
  40bd24:	or     esp,0x87d52de6
  40bd2a:	out    0x15,eax
  40bd2c:	out    dx,al
  40bd2d:	push   0x54
  40bd2f:	shr    DWORD PTR [eax+0x6f5b1683],1
  40bd35:	(bad)  
  40bd36:	lods   al,BYTE PTR ds:[esi]
  40bd37:	ins    DWORD PTR es:[edi],dx
  40bd38:	sub    edi,DWORD PTR [ebp-0x41b686b1]
  40bd3e:	in     eax,0xf7
  40bd40:	scas   eax,DWORD PTR es:[edi]
  40bd41:	les    ebp,FWORD PTR [ebx-0x3ea98cb7]
  40bd47:	test   BYTE PTR [esi-0x593aeb6b],dh
  40bd4d:	push   ebx
  40bd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd4f:	loope  0x40bd35
  40bd51:	xor    bl,BYTE PTR [ecx+0x487ccb48]
  40bd57:	sbb    eax,0x1248a15
  40bd5c:	xchg   ecx,eax
  40bd5d:	out    dx,al
  40bd5e:	push   esp
  40bd5f:	dec    ebx
  40bd60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd61:	mov    eax,ds:0xb6c9ce43
  40bd66:	repnz pop esi
  40bd68:	ror    BYTE PTR [ebx+0x1e3857b],0x69
  40bd6f:	and    BYTE PTR [edx],ah
  40bd71:	cmp    eax,edi
  40bd73:	stos   DWORD PTR es:[edi],eax
  40bd74:	adc    BYTE PTR [esi-0x5c],ah
  40bd77:	fisubr DWORD PTR [eax-0x5e]
  40bd7a:	lods   al,BYTE PTR ds:[esi]
  40bd7b:	std    
  40bd7c:	nop
  40bd7d:	test   DWORD PTR [edi],0x324bcf9b
  40bd83:	das    
  40bd84:	jb     0x40bd3d
  40bd86:	adc    al,cl
  40bd88:	inc    edx
  40bd89:	mov    ebp,0xc9ebcf83
  40bd8e:	mov    ebp,0x8aa98449
  40bd93:	sub    edx,DWORD PTR [esp+ecx*8+0x23b8e4cb]
  40bd9a:	das    
  40bd9b:	adc    BYTE PTR [esi-0x5f],dl
  40bd9e:	dec    edx
  40bd9f:	inc    esi
  40bda0:	jle    0x40bdea
  40bda2:	xchg   DWORD PTR [esi],ecx
  40bda4:	and    ch,bl
  40bda6:	xchg   esp,eax
  40bda7:	dec    DWORD PTR [ecx]
  40bda9:	fmul   st,st(4)
  40bdab:	rcr    DWORD PTR [ecx+0x1a315c68],1
  40bdb1:	jl     0x40bda4
  40bdb3:	sbb    eax,0xa42fb955
  40bdb8:	inc    esi
  40bdb9:	loop   0x40be04
  40bdbb:	test   BYTE PTR [edx],cl
  40bdbd:	inc    ebx
  40bdbe:	xor    BYTE PTR [ebp+0x5d],bl
  40bdc1:	inc    ebp
  40bdc2:	or     BYTE PTR [esi-0x7fcab5ee],dl
  40bdc8:	dec    edi
  40bdc9:	sbb    al,0xca
  40bdcb:	add    DWORD PTR [ebp+eiz*2-0x2f],ebp
  40bdcf:	xchg   edi,eax
  40bdd0:	rol    DWORD PTR [ecx+0x47],0xf8
  40bdd4:	mov    ecx,0x7648c01
  40bdd9:	push   0xf61290b3
  40bdde:	mov    esp,ss
  40bde0:	xor    DWORD PTR ds:0x1a8ab529,eax
  40bde6:	sar    DWORD PTR [edx-0x5d9c06b0],cl
  40bdec:	repz popa 
  40bdee:	out    dx,al
  40bdef:	add    cl,BYTE PTR [edi-0x2428a97c]
  40bdf5:	sub    al,0x6e
  40bdf7:	sbb    al,0x99
  40bdf9:	mov    esp,0x70541b35
  40bdfe:	repz dec eax
  40be00:	xor    al,0xdb
  40be02:	iret   
  40be03:	out    dx,al
  40be04:	repnz push eax
  40be06:	xchg   DWORD PTR [eax+esi*1+0x37b86175],edx
  40be0d:	add    eax,0xf0a53ca8
  40be12:	adc    al,0xff
  40be14:	push   edx
  40be15:	and    bh,0x64
  40be18:	adc    DWORD PTR [edi+eiz*2+0x1f],0x2a462158
  40be20:	mov    ebx,0x5f07b689
  40be25:	scas   eax,DWORD PTR es:[edi]
  40be26:	xchg   BYTE PTR [esi],dh
  40be28:	xor    BYTE PTR [eax+0x52],dh
  40be2b:	mov    bh,0xc3
  40be2d:	jae    0x40bded
  40be2f:	jmp    DWORD PTR [eax]
  40be31:	ds mov esp,0xc9f88dd3
  40be37:	mov    ecx,DWORD PTR [bp+di-0x148e]
  40be3c:	xlat   BYTE PTR ds:[ebx]
  40be3d:	(bad)  
  40be3e:	popa   
  40be3f:	out    0x81,al
  40be41:	cmp    BYTE PTR [eax],bl
  40be43:	(bad)  
  40be44:	push   eax
  40be45:	jle    0x40be08
  40be47:	dec    esi
  40be48:	shl    BYTE PTR [ecx+0x3bb49a3a],1
  40be4e:	ss aam 0xbf
  40be51:	fstp   QWORD PTR [edx+0x449a7e3]
  40be57:	loopne 0x40be1e
  40be59:	cld    
  40be5a:	add    al,0x79
  40be5c:	(bad)  
  40be5d:	ror    ah,cl
  40be5f:	xor    BYTE PTR [edx+0x32],bl
  40be62:	mov    es,WORD PTR [eax+0x290827b2]
  40be68:	xor    dl,dl
  40be6a:	add    BYTE PTR [ecx-0x27],0x42
  40be6e:	sbb    al,0x43
  40be70:	test   al,0x74
  40be72:	xchg   ecx,eax
  40be73:	mov    al,ds:0x5d740d55
  40be78:	ror    esi,1
  40be7a:	mov    ah,0x5b
  40be7c:	(bad)  
  40be7e:	xchg   DWORD PTR [esi],esi
  40be80:	inc    esi
  40be81:	popa   
  40be82:	stc    
  40be83:	hlt    
  40be84:	xlat   BYTE PTR ds:[ebx]
  40be85:	out    dx,eax
  40be86:	jo     0x40be17
  40be88:	mov    DWORD PTR [ebp-0xc],ecx
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf9f
  40bf55:	sub    eax,0x5b6befe
  40bf5a:	sbb    BYTE PTR [eax],bl
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    BYTE PTR [ecx+0x38f8b38f],bh
  40bf65:	sar    BYTE PTR ds:0x3d8e2197,0x49
  40bf6c:	ins    DWORD PTR es:[edi],dx
  40bf6d:	push   ds
  40bf6e:	xchg   ebx,eax
  40bf6f:	push   ebx
  40bf70:	jecxz  0x40bfa8
  40bf72:	imul   DWORD PTR fs:[edi]
  40bf75:	aad    0xc9
  40bf77:	rcl    BYTE PTR [ecx+eax*1-0x201fc5dd],cl
  40bf7e:	jg     0x40bf94
  40bf80:	and    DWORD PTR [esi],0xffffff86
  40bf83:	scas   al,BYTE PTR es:[edi]
  40bf84:	mov    BYTE PTR [ecx+0x6398093a],bl
  40bf8a:	cdq    
  40bf8b:	xchg   ecx,eax
  40bf8d:	sbb    eax,0x8809614d
  40bf92:	sub    al,0x89
  40bf94:	sbb    ebx,esi
  40bf96:	retf   0x1135
  40bf99:	jmp    0x75cd:0xf5ab7f46
  40bfa0:	mov    ds:0xf91619d,eax
  40bfa5:	das    
  40bfa6:	(bad)  
  40bfa7:	repz fcomp st(6)
  40bfaa:	mov    ?,WORD PTR [eax-0x87f765e]
  40bfb0:	xchg   edi,eax
  40bfb1:	pop    es
  40bfb2:	in     al,dx
  40bfb3:	leave  
  40bfb4:	das    
  40bfb5:	lea    edi,cs:[ebp+0x32]
  40bfb9:	xor    BYTE PTR [ebx+0x4],ah
  40bfbc:	lea    ebp,[edx-0x24]
  40bfbf:	sbb    al,0x95
  40bfc1:	div    cl
  40bfc3:	imul   ecx,DWORD PTR [edi+0x22],0xde47c7b4
  40bfca:	and    eax,0x38ba2ec5
  40bfcf:	mov    ch,BYTE PTR [edx-0x4fbf2c8e]
  40bfd5:	and    al,0x39
  40bfd7:	outs   dx,BYTE PTR ds:[esi]
  40bfd8:	push   edi
  40bfd9:	imul   ebx,ecx,0x28003af
  40bfdf:	pop    esp
  40bfe0:	sti    
  40bfe1:	cli    
  40bfe2:	dec    ebp
  40bfe3:	or     ebp,esi
  40bfe5:	mov    ds:0x15190751,al
  40bfea:	mov    ebx,0xd1c1bf6d
  40bfef:	fild   WORD PTR fs:[esp+edx*4+0x2efeb0ad]
  40bff7:	xor    ebx,DWORD PTR [ebp-0x3af93a8a]
  40bffd:	cwde   
  40bffe:	(bad)  
  40c000:	sbb    eax,0x6715556b
  40c005:	mov    ebx,0x74a42c7b
  40c00a:	or     DWORD PTR [edx+0x1f],0x5ea0bb4e
  40c011:	data16 sub ch,ch
  40c014:	sbb    DWORD PTR [ebx+0x48d1435f],eax
  40c01a:	scas   eax,DWORD PTR es:[edi]
  40c01b:	inc    eax
  40c01c:	nop
  40c01d:	xor    cl,ah
  40c01f:	push   0x368faaf6
  40c024:	jmp    0x40bfcf
  40c026:	jl     0x40c048
  40c028:	arpl   WORD PTR [eax],bp
  40c02a:	inc    eax
  40c02b:	jnp    0x40bfbb
  40c02d:	jge    0x40bfc0
  40c02f:	or     eax,0xa2ef149b
  40c034:	adc    eax,esp
  40c036:	cdq    
  40c037:	mov    edi,0x2079f769
  40c03c:	jmp    0xb0715791
  40c041:	rcr    BYTE PTR [edi],cl
  40c043:	adc    BYTE PTR [ebp-0x2bb0acd3],bh
  40c049:	xor    BYTE PTR [edi],bh
  40c04b:	cdq    
  40c04c:	push   es
  40c04d:	push   edx
  40c04e:	(bad)  
  40c04f:	adc    eax,0xc0e7bc05
  40c054:	js     0x3e2d3933
  40c05a:	xchg   ebx,eax
  40c05b:	xor    al,0x43
  40c05d:	fld    QWORD PTR [ecx]
  40c05f:	mov    bh,0xe3
  40c061:	pop    esi
  40c062:	pop    esi
  40c063:	scas   eax,DWORD PTR es:[edi]
  40c064:	loope  0x40c072
  40c066:	in     al,0x60
  40c068:	jne    0x40c034
  40c06a:	push   ebx
  40c06b:	icebp  
  40c06c:	in     eax,dx
  40c06d:	sbb    al,0xfa
  40c06f:	test   BYTE PTR [edx-0x3fdc4a47],0x2e
  40c076:	push   eax
  40c077:	inc    edx
  40c078:	jo     0x40c0c2
  40c07a:	iret   
  40c07b:	in     eax,dx
  40c07c:	fwait
  40c07d:	cmc    
  40c07e:	xchg   edi,eax
  40c07f:	rcl    bl,0x45
  40c082:	or     DWORD PTR [edi],eax
  40c084:	pop    es
  40c085:	push   ebp
  40c086:	jmp    0xcd0d:0x305516d8
  40c08d:	rol    DWORD PTR [esi],cl
  40c08f:	lds    eax,FWORD PTR [edi]
  40c091:	dec    edx
  40c092:	(bad)  
  40c093:	call   0xcbfc:0x9374c8bf
  40c09a:	xor    cl,BYTE PTR [esi]
  40c09c:	or     esi,DWORD PTR [edi]
  40c09e:	sbb    DWORD PTR [eax-0x5c73a24d],ebp
  40c0a4:	jns    0x40c119
  40c0a6:	dec    ebx
  40c0a7:	xor    DWORD PTR [edx],edi
  40c0a9:	shr    BYTE PTR [edi-0x26d59886],0x19
  40c0b0:	xlat   BYTE PTR ds:[ebx]
  40c0b1:	popa   
  40c0b2:	je     0x40c059
  40c0b4:	push   0x42ee0ffb
  40c0b9:	mov    bh,0xec
  40c0bb:	imul   ebx,DWORD PTR [esi+0x52e515ac],0x2c53d37
  40c0c5:	jnp    0x40c08f
  40c0c7:	pop    esi
  40c0c8:	iret   
  40c0c9:	push   ebx
  40c0ca:	ins    DWORD PTR es:[edi],dx
  40c0cb:	scas   al,BYTE PTR es:[edi]
  40c0cc:	in     eax,0x4
  40c0ce:	loope  0x40c056
  40c0d0:	mov    ch,0xba
  40c0d2:	rol    DWORD PTR [esi-0x437359a7],1
  40c0d8:	and    DWORD PTR [eax+0x13],esp
  40c0db:	mov    esi,0x285d4dfe
  40c0e0:	mov    es,WORD PTR [esi]
  40c0e2:	cmc    
  40c0e3:	jge    0x40c120
  40c0e5:	inc    ebp
  40c0e6:	cmc    
  40c0e7:	jb     0x40c139
  40c0e9:	or     ah,BYTE PTR [eax]
  40c0eb:	mov    al,0x19
  40c0ed:	cmc    
  40c0ee:	(bad)  
  40c0ef:	addr16 dec ebp
  40c0f1:	mov    dh,0xdb
  40c0f3:	pop    ds
  40c0f4:	pop    DWORD PTR [esi-0x26]
  40c0f7:	push   ds
  40c0f8:	push   ecx
  40c0f9:	loope  0x40c0b2
  40c0fb:	gs fs stc 
  40c0fe:	and    eax,0xe41c4159
  40c103:	mov    eax,0xcaa40d8b
  40c108:	outs   dx,DWORD PTR ds:[esi]
  40c109:	xchg   esp,eax
  40c10a:	pop    esp
  40c10b:	xchg   edx,eax
  40c10c:	mov    al,0xac
  40c10e:	mov    bh,0x4e
  40c110:	and    eax,0xb792cea4
  40c115:	cmc    
  40c116:	(bad)  
  40c117:	xor    eax,0x5f9046e8
  40c11c:	xchg   esi,eax
  40c11d:	add    bh,0xe8
  40c120:	bound  esp,QWORD PTR [eax-0x80]
  40c123:	pop    ebx
  40c124:	popf   
  40c125:	or     BYTE PTR [ebx-0x46],dh
  40c128:	mov    ecx,DWORD PTR [ecx-0x73]
  40c12b:	push   esp
  40c12c:	xor    edi,DWORD PTR [ebx+0x4a]
  40c12f:	dec    eax
  40c130:	jns    0x40c198
  40c132:	jmp    0xbd657af6
  40c137:	sub    eax,0xcd8e90f0
  40c13c:	lahf   
  40c13d:	sub    BYTE PTR [ecx-0x52],al
  40c140:	dec    edi
  40c141:	add    ebx,DWORD PTR [edx+ecx*2+0x62]
  40c145:	rcr    DWORD PTR [ebx-0x71],0xde
  40c149:	sbb    edx,DWORD PTR [edi+0x51]
  40c14c:	sub    eax,0x732e7d01
  40c151:	fwait
  40c152:	mov    ss:0xc35fce0b,al
  40c158:	sbb    bl,ch
  40c15a:	loopne 0x40c1a1
  40c15c:	fld    DWORD PTR [ebx-0x3a21ff2a]
  40c162:	mov    fs,WORD PTR [ecx+0x18a906da]
  40c168:	push   0x31749604
  40c16d:	div    ah
  40c16f:	sbb    ebx,ecx
  40c171:	pop    ds
  40c172:	jmp    0xe0f8:0xfe3f7bf8
  40c179:	push   edx
  40c17a:	leave  
  40c17b:	sub    ebx,DWORD PTR [esi]
  40c17d:	jg     0x40c106
  40c17f:	(bad)  
  40c180:	jne    0x40c1b9
  40c182:	pop    es
  40c183:	in     al,dx
  40c184:	mov    ds:0xb275df50,eax
  40c189:	mov    bl,0x4e
  40c18b:	mov    ?,WORD PTR [ebp+0x5a]
  40c18e:	jb     0x40c1a4
  40c190:	mov    esi,0x6b9a776d
  40c195:	cwde   
  40c196:	call   0xe4120068
  40c19b:	mov    dl,0x40
  40c19d:	stos   BYTE PTR es:[edi],al
  40c19e:	fsubr  QWORD PTR [esi]
  40c1a0:	mov    esp,0x26958918
  40c1a5:	jo     0x11786ce3
  40c1ab:	je     0x40c17f
  40c1ad:	add    al,ah
  40c1af:	mov    ebp,0x41bb82f1
  40c1b4:	mov    esp,0x68bb9bcc
  40c1b9:	retf   
  40c1ba:	and    DWORD PTR [ebx-0x2e],0x4a
  40c1be:	cld    
  40c1bf:	stos   BYTE PTR es:[edi],al
  40c1c0:	ds scas eax,DWORD PTR es:[edi]
  40c1c2:	shl    ebx,1
  40c1c4:	jp     0x40c1fc
  40c1c6:	enter  0x1061,0x16
  40c1ca:	mov    cl,0x27
  40c1cc:	in     al,0x49
  40c1ce:	mov    bh,BYTE PTR [esi-0x47c6c453]
  40c1d4:	daa    
  40c1d5:	clc    
  40c1d6:	nop
  40c1d7:	jmp    FWORD PTR [ecx-0x5085effb]
  40c1dd:	mov    WORD PTR [ebx],gs
  40c1df:	cmp    bl,bl
  40c1e1:	test   DWORD PTR [ebx+0x5f80697c],ecx
  40c1e7:	imul   esi,edx,0xffffffbf
  40c1ea:	cmp    ebx,ebp
  40c1ec:	mov    dh,0x2c
  40c1ee:	push   esi
  40c1ef:	rol    BYTE PTR [edx-0xf],cl
  40c1f2:	inc    ebp
  40c1f3:	popf   
  40c1f4:	ret    0xbbc6
  40c1f7:	and    eax,eax
  40c1f9:	(bad)  
  40c1fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1fb:	inc    ecx
  40c1fc:	pop    ebp
  40c1fd:	fisub  WORD PTR [ecx+edi*1-0x2e]
  40c201:	push   es
  40c202:	add    BYTE PTR [edx],dh
  40c204:	(bad)  
  40c205:	jmp    FWORD PTR [edi]
  40c207:	lods   al,BYTE PTR ds:[esi]
  40c208:	xchg   DWORD PTR [ecx],ecx
  40c20a:	xor    BYTE PTR ds:0xdd5305ab,bh
  40c210:	fld    TBYTE PTR [edx]
  40c212:	es xchg esp,eax
  40c214:	xlat   BYTE PTR ds:[ebx]
  40c215:	fsub   QWORD PTR [edi+0x7]
  40c218:	and    edi,eax
  40c21a:	leavew 
  40c21c:	imul   ecx,DWORD PTR [ecx-0x242f73db],0xffffffdb
  40c223:	out    0xd4,al
  40c225:	out    dx,eax
  40c226:	das    
  40c227:	iret   
  40c228:	sbb    al,0x26
  40c22a:	push   ecx
  40c22b:	cmp    eax,0x89947396
  40c230:	dec    ebx
  40c231:	push   cs
  40c232:	mov    cl,0xdc
  40c234:	mov    eax,ds:0x3bcca6bb
  40c239:	push   eax
  40c23a:	mov    ah,0xc4
  40c23c:	sbb    DWORD PTR [ecx],esp
  40c23e:	pop    cx
  40c240:	pop    esi
  40c241:	mov    esp,0xc3a105d0
  40c246:	in     eax,0x7d
  40c248:	rol    DWORD PTR [ebx],cl
  40c24a:	je     0x40c254
  40c24c:	aaa    
  40c24d:	inc    ecx
  40c24e:	iret   
  40c24f:	in     al,dx
  40c250:	repnz or bl,BYTE PTR [ecx+0x5188241a]
  40c257:	and    eax,ebx
  40c259:	in     eax,dx
  40c25a:	adc    BYTE PTR [edi-0x1e],bh
  40c25d:	scas   eax,DWORD PTR es:[edi]
  40c25e:	push   cs
  40c25f:	jp     0x40c2ba
  40c261:	dec    edi
  40c262:	shl    BYTE PTR [bp+si-0x2e],cl
  40c266:	test   al,0x23
  40c268:	or     eax,0x17ff66da
  40c26d:	shl    ecx,cl
  40c26f:	ret    
  40c270:	sub    DWORD PTR [edi],ebp
  40c272:	fisubr WORD PTR [edi+0x2bab15a5]
  40c278:	sar    DWORD PTR [edx],0xd9
  40c27b:	dec    DWORD PTR [eax+eiz*1-0x4cac1785]
  40c282:	arpl   WORD PTR [eax+eiz*2+0x3b],ax
  40c286:	pop    ss
  40c287:	jg     0x40c259
  40c289:	pusha  
  40c28a:	(bad)  
  40c28b:	mov    bl,0x74
  40c28d:	mov    ?,WORD PTR [edx-0x53]
  40c290:	dec    ebx
  40c291:	push   edi
  40c292:	data16 jbe 0x40c282
  40c295:	(bad)  
  40c296:	loope  0x40c23d
  40c298:	push   ebp
  40c299:	jb     0x40c25e
  40c29b:	in     eax,dx
  40c29c:	or     eax,0x4872b579
  40c2a1:	into   
  40c2a2:	mov    esp,0xb1472980
  40c2a7:	test   eax,0xbe4f7464
  40c2ac:	stos   DWORD PTR es:[edi],eax
  40c2ad:	lds    ecx,FWORD PTR [eax]
  40c2af:	xor    cl,dl
  40c2b1:	and    ecx,DWORD PTR [esi]
  40c2b3:	fdivr  QWORD PTR [esi-0x8f91d40]
  40c2b9:	mov    ds:0x60458d37,eax
  40c2be:	out    dx,eax
  40c2bf:	in     al,dx
  40c2c0:	adc    DWORD PTR [esi+0x38],esi
  40c2c3:	lods   al,BYTE PTR ds:[esi]
  40c2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c5:	add    cl,BYTE PTR [edx-0x58]
  40c2c8:	ss iret 
  40c2ca:	ins    BYTE PTR es:[edi],dx
  40c2cb:	out    dx,eax
  40c2cc:	(bad)  
  40c2cd:	leave  
  40c2ce:	inc    edx
  40c2cf:	js     0x40c253
  40c2d1:	inc    eax
  40c2d2:	imul   esp,ecx,0x7c942736
  40c2d8:	cmp    eax,0x4a6482d0
  40c2dd:	call   FWORD PTR [edx+edx*8]
  40c2e0:	xchg   ebx,eax
  40c2e1:	xchg   esi,eax
  40c2e2:	push   ss
  40c2e3:	repz imul ebp,DWORD PTR [edi+0x1e80d31],0xffffffb7
  40c2eb:	je     0x40c31c
  40c2ed:	ss test al,0x1
  40c2f0:	dec    ebp
  40c2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f2:	sbb    DWORD PTR [edx+0x6],esi
  40c2f5:	jne    0x40c2cf
  40c2f7:	or     al,0x7d
  40c2f9:	loope  0x40c28b
  40c2fb:	out    0xed,al
  40c2fd:	dec    ebp
  40c2fe:	retf   
  40c2ff:	fcmovnbe st,st(4)
  40c301:	shr    BYTE PTR [edi+eax*1],cl
  40c304:	or     al,0x2
  40c306:	in     eax,dx
  40c307:	imul   esp,DWORD PTR [edx+0xd],0x35
  40c30b:	add    eax,0x6dfb4780
  40c310:	repz sbb BYTE PTR [esi+0x34],dh
  40c314:	push   ss
  40c315:	arpl   WORD PTR [eax+0x5f],bx
  40c318:	dec    esi
  40c319:	fstp   TBYTE PTR [eax+ebx*4-0x75]
  40c31d:	jnp    0x40c320
  40c31f:	dec    esi
  40c320:	mov    ecx,0x3699430
  40c325:	sub    dl,BYTE PTR [ebx-0x4b1d5101]
  40c32b:	daa    
  40c32c:	sbb    al,bl
  40c32e:	out    0x48,eax
  40c330:	sub    al,0xdd
  40c332:	addr16 (bad) 
  40c334:	jmp    0x8fb4951
  40c339:	push   eax
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42277c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422568
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42277c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	sub    bh,BYTE PTR [ebx+eiz*4]
  40c3d3:	mov    esp,0x1818fd0d
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [ecx],bh
  40c3dd:	iret   
  40c3de:	inc    esi
  40c3df:	loope  0x40c364
  40c3e1:	mov    ch,0x14
  40c3e3:	jmp    0xaa3b48a3
  40c3e8:	inc    ebx
  40c3e9:	cmp    edx,ebp
  40c3eb:	cmp    eax,0x674ac23c
  40c3f0:	sar    BYTE PTR [ecx],cl
  40c3f2:	inc    edx
  40c3f3:	add    BYTE PTR [eax-0x264dbe3b],0x79
  40c3fa:	push   esi
  40c3fb:	js     0x40c472
  40c3fd:	jg     0x40c3ba
  40c3ff:	or     DWORD PTR [eax+0x1],ecx
  40c402:	dec    ecx
  40c403:	popf   
  40c404:	retf   
  40c405:	cmp    esi,DWORD PTR [esi-0x50d5f99d]
  40c40b:	cld    
  40c40c:	jo     0x40c3ae
  40c40e:	sub    eax,0x73eb9e8
  40c413:	scas   eax,DWORD PTR es:[edi]
  40c414:	cmp    eax,0x9b4ab2ca
  40c419:	shl    BYTE PTR [esi+0xe],1
  40c41c:	dec    ebx
  40c41d:	(bad)  [esi]
  40c41f:	ret    
  40c420:	mov    ds:0x568048b,eax
  40c425:	xchg   ebp,eax
  40c426:	add    dl,BYTE PTR [ecx-0x1a]
  40c429:	or     BYTE PTR [ebp-0x25],ch
  40c42c:	ins    DWORD PTR es:[edi],dx
  40c42d:	ins    DWORD PTR es:[edi],dx
  40c42e:	add    ah,BYTE PTR [ecx]
  40c430:	sti    
  40c431:	imul   esi,DWORD PTR [ecx],0x2ea3aab1
  40c437:	jb     0x40c3fb
  40c439:	data16 mov ch,0xe
  40c43c:	xlat   BYTE PTR ds:[ebx]
  40c43d:	jg     0x40c47b
  40c43f:	ds pusha 
  40c441:	mov    eax,ds:0x7452a459
  40c446:	dec    edi
  40c447:	pop    eax
  40c448:	sub    BYTE PTR [edi],0x7e
  40c44b:	sbb    al,0x29
  40c44d:	aas    
  40c44e:	scas   al,BYTE PTR es:[edi]
  40c44f:	aam    0xb7
  40c451:	add    al,0x9b
  40c453:	ins    BYTE PTR es:[edi],dx
  40c454:	jge    0x40c498
  40c456:	(bad)  
  40c457:	iret   
  40c458:	icebp  
  40c459:	test   BYTE PTR [eax],cl
  40c45b:	in     al,dx
  40c45c:	sahf   
  40c45d:	jns    0x40c45b
  40c45f:	sub    BYTE PTR [ebp+0x205d6c84],bl
  40c465:	fdivr  st,st(3)
  40c467:	(bad)  
  40c468:	sbb    al,0x40
  40c46a:	addr16 ret 0xe025
  40c46e:	inc    esi
  40c46f:	inc    ecx
  40c470:	out    dx,al
  40c471:	sbb    eax,0x567849be
  40c476:	cmc    
  40c477:	fcom   DWORD PTR [eax]
  40c479:	jp     0x40c424
  40c47b:	cmp    eax,0xe3a66ee4
  40c480:	mov    ds:0xe47275a5,al
  40c485:	jmp    0x95ffd551
  40c48a:	mov    eax,0x769840a6
  40c48f:	fnstcw WORD PTR [edi]
  40c491:	pop    ss
  40c492:	dec    ebp
  40c493:	xor    bh,dh
  40c495:	outs   dx,BYTE PTR ds:[si]
  40c497:	fisttp QWORD PTR [ecx]
  40c499:	and    dl,BYTE PTR [edi+0x10]
  40c49c:	dec    esi
  40c49d:	cmp    dl,BYTE PTR [edx+0x6]
  40c4a0:	jp     0x40c49d
  40c4a2:	fs adc al,0x4a
  40c4a5:	data16 loop 0x40c4d3
  40c4a8:	pop    ecx
  40c4a9:	shr    DWORD PTR [edx],1
  40c4ab:	and    ah,BYTE PTR [esi]
  40c4ad:	mov    dh,0x61
  40c4af:	sbb    al,0xb5
  40c4b1:	add    edi,DWORD PTR [ebp-0x62]
  40c4b4:	sub    eax,0x3e930ebe
  40c4b9:	fnstenv [edi-0x3d11fcd3]
  40c4bf:	sbb    al,0xac
  40c4c1:	loop   0x40c46b
  40c4c3:	ja     0x40c51e
  40c4c5:	dec    ch
  40c4c7:	imul   edx,DWORD PTR [edi+ecx*8-0x156dad1e],0xb5b7248a
  40c4d2:	fidivr DWORD PTR [edx-0x4f]
  40c4d5:	jp     0x40c473
  40c4d7:	mov    al,0xf4
  40c4d9:	mov    cl,0x99
  40c4db:	dec    BYTE PTR ds:0xb3790e5b
  40c4e1:	xor    ecx,DWORD PTR [edi+eiz*8]
  40c4e4:	pop    ebp
  40c4e5:	push   edi
  40c4e6:	shr    DWORD PTR [ebp-0x54bb4974],1
  40c4ec:	or     al,0x17
  40c4ee:	dec    esp
  40c4ef:	or     bh,al
  40c4f1:	in     al,0x73
  40c4f3:	xchg   bl,bh
  40c4f5:	push   edi
  40c4f6:	enter  0xb91b,0x42
  40c4fa:	add    al,bh
  40c4fc:	arpl   WORD PTR [edi*2+0x6d090ab6],cx
  40c503:	out    dx,eax
  40c504:	scas   eax,DWORD PTR es:[edi]
  40c505:	punpckhwd mm7,QWORD PTR [eax]
  40c508:	pop    esi
  40c509:	iret   
  40c50a:	addr16 in eax,dx
  40c50c:	mov    esi,0x5ce257e6
  40c511:	sbb    eax,0x5ec7612a
  40c516:	fcmovnb st,st(2)
  40c518:	or     edi,ebx
  40c51a:	mov    eax,ds:0x2851095b
  40c51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c520:	dec    esi
  40c521:	add    BYTE PTR [edx+ecx*4-0x2],dh
  40c525:	sub    al,0xe5
  40c527:	(bad)  
  40c528:	fwait
  40c529:	ss mov bl,0x63
  40c52c:	popf   
  40c52d:	xchg   esp,eax
  40c52e:	adc    eax,0x75a22001
  40c533:	or     eax,esp
  40c535:	dec    esp
  40c536:	mov    DWORD PTR [ebp-0x4e530548],edx
  40c53c:	xchg   esp,eax
  40c53d:	and    ebx,DWORD PTR [ecx-0x8e6e2b8]
  40c543:	std    
  40c544:	mov    esp,0x553dc656
  40c549:	jmp    DWORD PTR [edx+0x25cd7ff6]
  40c54f:	jno    0x40c4e4
  40c551:	retf   0x2951
  40c554:	mov    ecx,0x4fc041c6
  40c559:	fcomip st,st(5)
  40c55b:	pop    ds
  40c55c:	pop    edx
  40c55d:	ins    DWORD PTR es:[edi],dx
  40c55e:	push   esp
  40c55f:	mov    esi,0xfbd6ed29
  40c564:	push   0xffffffa2
  40c566:	dec    eax
  40c567:	hlt    
  40c568:	adc    dh,BYTE PTR [ecx]
  40c56a:	pop    eax
  40c56b:	lods   eax,DWORD PTR ds:[esi]
  40c56c:	add    al,0x72
  40c56e:	jle    0x40c5bb
  40c570:	repz test DWORD PTR [edi],edi
  40c573:	mov    edx,0x7d34334a
  40c578:	jg     0x40c5b4
  40c57a:	inc    esp
  40c57b:	push   0x4
  40c57d:	mov    al,ds:0x339983e0
  40c582:	mov    esp,0x8907d8bd
  40c587:	cmp    dh,BYTE PTR [ebx-0x6e724c8]
  40c58d:	(bad)  
  40c58e:	mov    esp,0xfe004dfe
  40c593:	push   0x3a475fc7
  40c598:	(bad)  
  40c599:	adc    ah,BYTE PTR ds:0x9b8778c2
  40c59f:	aad    0x21
  40c5a1:	pop    es
  40c5a2:	pslld  mm6,QWORD PTR [ecx+0x57]
  40c5a6:	sar    BYTE PTR [ebp+0x6b79053],0x4c
  40c5ad:	push   esp
  40c5ae:	shl    DWORD PTR [edi+0x5e],cl
  40c5b1:	dec    edx
  40c5b2:	hlt    
  40c5b3:	inc    edx
  40c5b4:	mov    ecx,DWORD PTR [esi]
  40c5b6:	movaps xmm6,XMMWORD PTR [eax-0x23]
  40c5ba:	mov    dh,BYTE PTR [ecx+0x2c]
  40c5bd:	sub    edi,DWORD PTR [ecx+edi*4]
  40c5c0:	jp     0x40c5cc
  40c5c2:	push   0x24
  40c5c4:	dec    edi
  40c5c5:	mov    gs,ebp
  40c5c7:	push   es
  40c5c8:	test   DWORD PTR [ecx-0x774471e7],eax
  40c5ce:	call   0xd939:0x973a07ad
  40c5d5:	out    0x62,eax
  40c5d7:	fidivr WORD PTR [eax]
  40c5d9:	mov    BYTE PTR [ebx+0x1c],al
  40c5dc:	or     edi,eax
  40c5de:	rcl    DWORD PTR [edx],0x9
  40c5e1:	cmp    DWORD PTR [ebx-0x54446c6b],eax
  40c5e7:	jbe    0x40c652
  40c5e9:	mov    al,0x5e
  40c5eb:	push   edx
  40c5ec:	xchg   ebp,eax
  40c5ed:	sbb    BYTE PTR [eax+0x462b5be3],cl
  40c5f3:	pop    ss
  40c5f4:	inc    edx
  40c5f5:	sahf   
  40c5f6:	mov    edx,0x352b783e
  40c5fb:	repnz pop ss
  40c5fd:	push   cs
  40c5fe:	pop    esp
  40c5ff:	mov    esi,0xb935bf4
  40c604:	mov    ah,0x53
  40c607:	push   ecx
  40c608:	push   eax
  40c609:	jmp    0x168b1848
  40c60e:	sar    al,0x4e
  40c611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c612:	ret    
  40c613:	leave  
  40c614:	in     al,0xe5
  40c616:	sub    eax,0xafd4cfa9
  40c61b:	sti    
  40c61c:	es (bad) 
  40c61e:	jnp    0x40c624
  40c620:	sbb    bl,cl
  40c622:	inc    edi
  40c623:	and    eax,0x7ba4f636
  40c628:	cmp    DWORD PTR [ebx],ebx
  40c62a:	mov    ah,0xb7
  40c62c:	xchg   edx,eax
  40c62d:	push   esp
  40c62e:	cmp    eax,0xd849772b
  40c633:	or     BYTE PTR [ebx+0x4d],dh
  40c636:	sub    eax,0x5a4c02
  40c63b:	push   ecx
  40c63c:	stc    
  40c63d:	jno    0x40c6b8
  40c63f:	sar    cl,0x74
  40c642:	cmp    BYTE PTR [ecx],cl
  40c644:	push   esp
  40c645:	pop    edx
  40c646:	fbstp  TBYTE PTR [eax+ebx*2+0x2616d55a]
  40c64d:	mov    esp,0x96a090aa
  40c652:	scas   al,BYTE PTR es:[edi]
  40c653:	sub    eax,DWORD PTR [esi-0x4046f185]
  40c659:	mov    ch,ah
  40c65b:	fsubr  st,st(3)
  40c65d:	mov    edi,0xe1fab88a
  40c662:	in     eax,dx
  40c663:	adc    eax,0x6b686069
  40c668:	or     BYTE PTR [edx+ebx*2+0x63],dl
  40c66c:	jl     0x40c61d
  40c66e:	pop    ecx
  40c66f:	sbb    al,al
  40c671:	shl    dl,cl
  40c673:	mov    edx,0x8b2f2f05
  40c678:	or     ch,dh
  40c67a:	jnp    0x40c6b7
  40c67c:	arpl   dx,bp
  40c67e:	mov    WORD PTR [eax-0x57],?
  40c681:	rcr    BYTE PTR [eax+0x79ece1a3],1
  40c687:	(bad)  
  40c688:	ret    
  40c689:	loope  0x40c6ec
  40c68b:	or     ah,BYTE PTR [esi-0x41]
  40c68e:	or     bh,BYTE PTR [eiz*1+0x110fdce2]
  40c695:	rcr    BYTE PTR [esi-0x24],0xbf
  40c699:	mov    gs,WORD PTR [edi-0x4379d364]
  40c69f:	lock inc ebp
  40c6a1:	cmp    ebp,DWORD PTR [edi]
  40c6a3:	stc    
  40c6a4:	lods   eax,DWORD PTR ds:[esi]
  40c6a5:	mov    WORD PTR [ebx-0x16e3bbf5],gs
  40c6ab:	(bad)  
  40c6ac:	loopne 0x40c6b3
  40c6ae:	jns    0x40c65c
  40c6b0:	(bad)  
  40c6b1:	leave  
  40c6b2:	dec    ebp
  40c6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b4:	xchg   edi,eax
  40c6b5:	add    BYTE PTR [ebx],0x11
  40c6b8:	lea    ebx,[edi]
  40c6ba:	call   0x14b1:0x60557b61
  40c6c1:	or     edx,ecx
  40c6c3:	sub    BYTE PTR [eax-0x70],bh
  40c6c6:	cdq    
  40c6c7:	stos   DWORD PTR es:[edi],eax
  40c6c8:	xchg   esp,eax
  40c6c9:	mov    dl,0x59
  40c6cb:	mov    dl,BYTE PTR [edi]
  40c6cd:	adc    al,0x5d
  40c6cf:	outs   dx,BYTE PTR ds:[esi]
  40c6d0:	mov    ecx,0x36ef6d55
  40c6d5:	shl    BYTE PTR [ecx+0x33],0xc
  40c6d9:	(bad)  
  40c6da:	ds xchg edi,eax
  40c6dc:	mov    ah,0x83
  40c6de:	test   eax,0xd4c233b3
  40c6e3:	adc    eax,0xbc80b541
  40c6e8:	int    0x75
  40c6ea:	jo     0x40c6c6
  40c6ec:	ja     0x40c761
  40c6ee:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f0:	push   0x819e3b33
  40c6f5:	push   eax
  40c6f6:	pop    es
  40c6f7:	ffree  st(0)
  40c6f9:	cli    
  40c6fa:	nop
  40c6fb:	int    0xf3
  40c6fd:	mov    ebx,DWORD PTR [esi+0x42c9b9fa]
  40c703:	mov    ds:0x3e571790,al
  40c708:	cmp    DWORD PTR ss:0x7226553a,edi
  40c70f:	push   cs
  40c710:	sub    al,BYTE PTR [ecx-0x4d]
  40c713:	push   ebx
  40c714:	(bad)  
  40c715:	dec    edi
  40c716:	inc    DWORD PTR [ecx-0x5a4c61b7]
  40c71c:	add    al,0xa6
  40c71e:	xlat   BYTE PTR ds:[ebx]
  40c71f:	xchg   esp,eax
  40c720:	dec    BYTE PTR [edx]
  40c722:	pop    edx
  40c723:	xor    DWORD PTR [esp+ebp*1-0x10801e71],eax
  40c72a:	in     al,dx
  40c72b:	sbb    al,0xe7
  40c72d:	pop    esi
  40c72e:	das    
  40c72f:	aam    0x8d
  40c731:	stos   DWORD PTR es:[edi],eax
  40c732:	and    DWORD PTR [edi-0x40],esp
  40c735:	cmp    BYTE PTR [ecx+0x2618ad80],dl
  40c73b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c73c:	and    esp,DWORD PTR [eax+0x15]
  40c73f:	in     eax,dx
  40c740:	push   ds
  40c741:	popf   
  40c742:	out    0xe8,eax
  40c744:	cmp    eax,0x5d5dd98e
  40c749:	cmc    
  40c74a:	jl     0x40c77c
  40c74c:	js     0x40c6f4
  40c74e:	outs   dx,DWORD PTR ds:[esi]
  40c74f:	test   al,0xf7
  40c751:	push   ds
  40c752:	call   DWORD PTR [edx]
  40c754:	es jns 0x40c7b6
  40c757:	idiv   BYTE PTR [ebx+0x38412af7]
  40c75d:	icebp  
  40c75e:	int3   
  40c75f:	hlt    
  40c760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c761:	leave  
  40c762:	aam    0xcd
  40c764:	pop    ss
  40c765:	shl    esi,0xe
  40c768:	mov    edi,ecx
  40c76a:	sbb    al,0x7d
  40c76c:	pop    eax
  40c76d:	mov    bl,0xa4
  40c76f:	loopne 0x40c721
  40c771:	pop    edx
  40c772:	iret   
  40c773:	and    BYTE PTR [esi-0x35aba05a],dl
  40c779:	pop    ecx
  40c77a:	retf   
  40c77b:	in     al,0xc
  40c77d:	jmp    0x66750813
  40c782:	sub    eax,0x7820f0be
  40c787:	stos   BYTE PTR es:[edi],al
  40c788:	icebp  
  40c789:	sahf   
  40c78a:	xchg   ebp,ebx
  40c78c:	pop    es
  40c78d:	neg    DWORD PTR [ebx+0x14fdd2c1]
  40c793:	mov    cl,0xa1
  40c795:	bound  edi,QWORD PTR [ebp-0x75]
  40c798:	loopne 0x40c744
  40c79a:	cmp    DWORD PTR [edx-0xe],edx
  40c79d:	mov    ch,0xbf
  40c79f:	push   ss
  40c7a0:	add    al,0x6c
  40c7a2:	pushf  
  40c7a3:	sbb    eax,0xca5e79e6
  40c7a8:	xor    al,0xa6
  40c7aa:	dec    edi
  40c7ab:	outs   dx,BYTE PTR ds:[esi]
  40c7ac:	inc    edx
  40c7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7af:	or     bh,BYTE PTR [esi+0x36]
  40c7b2:	aad    0x34
  40c7b4:	scas   al,BYTE PTR es:[edi]
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x3b4dc170]
  40c7fd:	mov    esi,0x1818f563
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    cl,ah
  40c807:	or     al,0xa2
  40c809:	mul    BYTE PTR [edi]
  40c80b:	cld    
  40c80c:	xor    al,BYTE PTR [eax-0x55]
  40c80f:	fidiv  WORD PTR [ebx+0x24]
  40c812:	js     0x40c81e
  40c814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c815:	mov    DWORD PTR [ebp-0x526b8726],ebp
  40c81b:	xor    BYTE PTR ds:0x2b4da368,bl
  40c821:	add    eax,0x4f733343
  40c826:	out    dx,al
  40c827:	push   ss
  40c828:	test   al,0xea
  40c82a:	and    eax,DWORD PTR [edi+0x75]
  40c82d:	in     al,dx
  40c82e:	(bad)  
  40c82f:	mov    al,ds:0x1af21370
  40c834:	mov    eax,0x8994d536
  40c839:	push   ds
  40c83a:	test   BYTE PTR [ebp-0x5b],ah
  40c83d:	or     ebx,DWORD PTR [edi]
  40c83f:	push   edx
  40c840:	add    al,0xca
  40c842:	jmp    0xb56b:0x55891c90
  40c849:	or     al,0xca
  40c84b:	push   es
  40c84c:	mov    al,ds:0x64b63a8
  40c851:	aaa    
  40c852:	out    dx,eax
  40c853:	push   cs
  40c854:	ins    DWORD PTR es:[edi],dx
  40c855:	cmp    ebx,DWORD PTR [edi+ecx*1+0x217b83dc]
  40c85c:	mov    bl,0xe2
  40c85e:	sbb    BYTE PTR [ecx+0x48],cl
  40c861:	mov    esp,0x4cca6f11
  40c866:	mov    WORD PTR ds:0xa83567ec,ds
  40c86c:	and    esi,DWORD PTR [ebp+0x3f]
  40c86f:	mov    eax,ds:0x2000dbc0
  40c874:	mov    esi,DWORD PTR [esi-0x10224f16]
  40c87a:	call   0xbf4f519
  40c87f:	push   edi
  40c880:	sti    
  40c881:	mov    ah,ch
  40c883:	call   0xd049ad41
  40c888:	and    al,0xc6
  40c88a:	cmp    eax,0xf58badcc
  40c88f:	leave  
  40c890:	xor    esp,ebp
  40c892:	cld    
  40c893:	sahf   
  40c894:	add    al,0x8c
  40c896:	jmp    0x95de24b
  40c89b:	cmp    bh,BYTE PTR [ebx+0x748f477b]
  40c8a1:	inc    eax
  40c8a2:	push   ecx
  40c8a3:	adc    al,0xc0
  40c8a5:	sub    ch,BYTE PTR [esi-0x5c8cec63]
  40c8ab:	daa    
  40c8ac:	dec    eax
  40c8ad:	pop    ebx
  40c8ae:	imul   ecx,DWORD PTR [bp+si-0x984],0x14
  40c8b4:	into   
  40c8b5:	and    al,BYTE PTR [ebp+0x4a53e534]
  40c8bb:	ds jl  0x40c91c
  40c8be:	in     al,dx
  40c8bf:	dec    ebx
  40c8c0:	sbb    al,0x2
  40c8c2:	retf   
  40c8c3:	jmp    0xa8e1:0x862fa531
  40c8ca:	test   al,0xf7
  40c8cc:	pop    ds
  40c8cd:	sbb    ch,BYTE PTR [eax+0x19]
  40c8d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d1:	dec    esi
  40c8d2:	xor    DWORD PTR [edi+eiz*8+0x6e],eax
  40c8d6:	call   0x8ae09fc8
  40c8db:	cwde   
  40c8dc:	icebp  
  40c8dd:	cs and eax,0xffffffe2
  40c8e1:	int3   
  40c8e2:	xchg   esp,eax
  40c8e3:	sub    BYTE PTR [edi-0x53],ch
  40c8e6:	mov    cl,0xae
  40c8e8:	xchg   esp,eax
  40c8e9:	sub    ebx,DWORD PTR [edx-0x48]
  40c8ec:	dec    esp
  40c8ed:	call   0xc12ac4d3
  40c8f2:	push   esi
  40c8f3:	or     BYTE PTR ds:0x1f6c731b,dh
  40c8f9:	xchg   DWORD PTR [edx+0x33],ebp
  40c8fc:	test   al,0xb7
  40c8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8ff:	mov    ds:0x388996fc,al
  40c904:	inc    ebp
  40c905:	cdq    
  40c906:	aaa    
  40c907:	add    eax,0x866c2e6a
  40c90c:	dec    edx
  40c90d:	cmp    ch,BYTE PTR [edx-0x16]
  40c910:	test   DWORD PTR [eax+0x24e4800f],eax
  40c916:	iret   
  40c917:	fwait
  40c918:	push   esp
  40c919:	or     ah,BYTE PTR [edx-0x3fb84605]
  40c91f:	scas   eax,DWORD PTR es:[edi]
  40c920:	add    BYTE PTR [esi],dh
  40c922:	push   ds
  40c923:	(bad)  [eax-0x1f]
  40c926:	xchg   BYTE PTR [edx+eax*1+0x2fda8a9f],ah
  40c92d:	lock scas eax,DWORD PTR es:[edi]
  40c92f:	mov    eax,0xca25c9b8
  40c934:	fsub   DWORD PTR [ebx-0x22d25f96]
  40c93a:	cwde   
  40c93b:	lods   eax,DWORD PTR ds:[esi]
  40c93c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c93d:	inc    esi
  40c93e:	(bad)  
  40c93f:	arpl   WORD PTR [edi+eiz*2],si
  40c942:	push   ss
  40c943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c944:	and    BYTE PTR [edx],ah
  40c946:	imul   edx,DWORD PTR [ecx],0x20044c2b
  40c94c:	xchg   edx,eax
  40c94d:	in     al,dx
  40c94e:	imul   DWORD PTR [esi]
  40c950:	inc    esp
  40c951:	sub    DWORD PTR [esi-0x20],ebx
  40c954:	sub    BYTE PTR [ecx+edi*4],cl
  40c957:	sti    
  40c958:	sub    eax,0x2d43981e
  40c95d:	out    dx,eax
  40c95e:	int3   
  40c95f:	pop    ebx
  40c960:	icebp  
  40c961:	xchg   esp,eax
  40c962:	fstp   TBYTE PTR [ebp+0x6b]
  40c965:	inc    eax
  40c966:	hlt    
  40c967:	push   edx
  40c968:	clc    
  40c969:	mov    cl,0x44
  40c96b:	es xor eax,0x4524f69a
  40c971:	pop    esi
  40c972:	cwde   
  40c973:	(bad)  
  40c974:	aam    0x81
  40c976:	(bad)  
  40c977:	lock test BYTE PTR [edx-0x3c],0xdb
  40c97c:	popf   
  40c97d:	and    al,0xcf
  40c97f:	pop    es
  40c980:	das    
  40c981:	pop    edi
  40c982:	pop    ebp
  40c983:	call   0xe9ab:0x4d8a26a8
  40c98a:	sub    al,0x57
  40c98c:	or     edx,DWORD PTR [ebx-0x9]
  40c98f:	sub    BYTE PTR [esp+eiz*8-0x13],cl
  40c993:	ds (bad) 
  40c996:	fs popa 
  40c998:	dec    ecx
  40c999:	add    esi,DWORD PTR [edi]
  40c99b:	ss jae 0x40c94b
  40c99e:	stc    
  40c99f:	jo     0x40ca15
  40c9a1:	mov    bh,0x87
  40c9a3:	xchg   ebx,eax
  40c9a4:	xchg   esp,eax
  40c9a5:	sbb    al,0x6a
  40c9a7:	bound  ebx,QWORD PTR [eax+0x2ac0a0e9]
  40c9ad:	sub    DWORD PTR [esi-0x3bf2981b],0x593f3d95
  40c9b7:	div    BYTE PTR [ecx-0x785a2a30]
  40c9bd:	loop   0x40c987
  40c9bf:	xor    edx,DWORD PTR [ebx+edi*1]
  40c9c2:	jno    0x40c998
  40c9c4:	int    0xf7
  40c9c6:	dec    edx
  40c9c7:	cdq    
  40c9c8:	cwde   
  40c9c9:	mov    BYTE PTR ds:0xc7af6e01,ah
  40c9cf:	test   al,0xa7
  40c9d1:	ret    0xbbb7
  40c9d4:	or     BYTE PTR [esi],ah
  40c9d6:	cmp    ch,BYTE PTR [ecx-0x14]
  40c9d9:	pop    ebp
  40c9da:	imul   esp,ebx,0xffffff8f
  40c9dd:	add    al,0x59
  40c9df:	xlat   BYTE PTR ds:[ebx]
  40c9e0:	jns    0x40c995
  40c9e2:	not    DWORD PTR [esi]
  40c9e4:	lods   al,BYTE PTR ds:[esi]
  40c9e5:	aad    0x15
  40c9e7:	jge    0x40ca0a
  40c9e9:	bound  esi,QWORD PTR [ebx+edi*4-0x1b8bf1b2]
  40c9f0:	pop    ecx
  40c9f1:	jb     0x40ca35
  40c9f3:	mov    eax,0xf51a4f
  40c9f8:	add    eax,0x8f4f35cf
  40c9fd:	jecxz  0x40ca5d
  40c9ff:	cli    
  40ca00:	cmp    DWORD PTR [ecx],0x1eebbc99
  40ca06:	pop    edi
  40ca07:	xor    eax,0x24310596
  40ca0c:	scas   eax,DWORD PTR es:[edi]
  40ca0d:	iret   
  40ca0e:	or     BYTE PTR cs:[ecx],ch
  40ca11:	add    bl,BYTE PTR [ecx*8+0x37d65229]
  40ca18:	jno    0x40ca76
  40ca1a:	and    al,0x3d
  40ca1c:	mov    bl,0xf0
  40ca1e:	test   ebp,ecx
  40ca20:	sub    esp,DWORD PTR [edx+edx*1+0x54c5e6d]
  40ca27:	in     al,0xfc
  40ca29:	sahf   
  40ca2a:	sti    
  40ca2b:	(bad)  
  40ca2c:	aam    0xa2
  40ca2e:	pop    ss
  40ca2f:	out    dx,eax
  40ca30:	xchg   esp,eax
  40ca31:	dec    esi
  40ca32:	mov    bh,BYTE PTR [ecx]
  40ca34:	in     eax,0x92
  40ca36:	jl     0x40cab4
  40ca38:	inc    ebp
  40ca39:	cs jbe 0x40ca69
  40ca3c:	fistp  QWORD PTR [edx]
  40ca3e:	inc    ecx
  40ca3f:	and    DWORD PTR [edx+0x23],0x7b5305fc
  40ca46:	div    edx
  40ca48:	pop    eax
  40ca49:	mov    bh,0x0
  40ca4b:	in     eax,dx
  40ca4c:	cld    
  40ca4d:	sub    edx,0x16
  40ca50:	(bad)  
  40ca51:	pop    esi
  40ca52:	je     0x40ca63
  40ca54:	push   esp
  40ca55:	jns    0x40ca84
  40ca57:	sub    eax,0x6d588296
  40ca5c:	inc    ebp
  40ca5d:	push   edi
  40ca5e:	js     0x40ca5a
  40ca60:	sbb    al,0x5
  40ca62:	push   es
  40ca63:	xor    BYTE PTR [ebx-0x26eb07a9],cl
  40ca69:	adc    al,0x18
  40ca6b:	jns    0x40cad4
  40ca6d:	pop    eax
  40ca6e:	xlat   BYTE PTR ds:[ebx]
  40ca6f:	frstor es:[eax]
  40ca72:	and    BYTE PTR [ebx+0x2e],dh
  40ca75:	sub    cl,BYTE PTR [ebx]
  40ca77:	ret    
  40ca78:	mov    edx,0x1c985606
  40ca7d:	mov    ebp,0xe5f3230a
  40ca82:	mov    edx,0xe9da6c97
  40ca87:	push   eax
  40ca88:	lods   eax,DWORD PTR ds:[esi]
  40ca89:	cdq    
  40ca8a:	mov    ecx,fs
  40ca8c:	pop    DWORD PTR [eax]
  40ca8e:	push   esi
  40ca8f:	fwait
  40ca90:	sbb    eax,0xc5254ea1
  40ca95:	sbb    edx,DWORD PTR [ebp-0x1ec99f17]
  40ca9b:	xchg   ecx,eax
  40ca9c:	mov    al,0x31
  40ca9e:	cmc    
  40ca9f:	push   0x73
  40caa1:	inc    edi
  40caa2:	stc    
  40caa3:	xor    BYTE PTR [eax],0xec
  40caa6:	sahf   
  40caa7:	fwait
  40caa8:	push   edi
  40caa9:	in     al,dx
  40caaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caab:	cmp    BYTE PTR [ecx-0xf0dbdb4],ch
  40cab1:	(bad)  
  40cab2:	and    esp,DWORD PTR [eax-0x3e]
  40cab5:	add    DWORD PTR [edx+0x5],esp
  40cab8:	(bad)  
  40cab9:	xor    al,0x43
  40cabb:	aas    
  40cabc:	xor    dh,cl
  40cabe:	jo     0x40cb33
  40cac0:	lds    ebp,FWORD PTR [ebp-0x6f]
  40cac3:	ja     0x40ca62
  40cac5:	sbb    eax,0x8c7c6c2d
  40caca:	fwait
  40cacb:	xor    eax,0xc94a2b0f
  40cad0:	fisub  DWORD PTR [ebx+ecx*1-0x2fb9cc9e]
  40cad7:	jno    0x40ca96
  40cad9:	jge    0x40ca77
  40cadb:	(bad)  
  40cadc:	std    
  40cadd:	loope  0x40cadf
  40cadf:	add    eax,0x99b0ddb3
  40cae4:	adc    ebp,DWORD PTR [edx+0x5b]
  40cae7:	ficom  DWORD PTR [eax-0x4323714e]
  40caed:	jp     0x40cb43
  40caef:	xor    BYTE PTR [edi-0x4bf4fa6e],0xe0
  40caf6:	fdivr  DWORD PTR [ebx]
  40caf8:	stos   BYTE PTR es:[edi],al
  40caf9:	ins    BYTE PTR es:[edi],dx
  40cafa:	leave  
  40cafb:	adc    DWORD PTR [ecx+0x370373c9],0x4e
  40cb02:	add    eax,0x77660adc
  40cb07:	dec    esi
  40cb08:	push   ds
  40cb09:	dec    ebx
  40cb0a:	lods   eax,DWORD PTR ds:[esi]
  40cb0b:	stc    
  40cb0c:	mov    dh,0x40
  40cb0e:	and    BYTE PTR [esi+0x4587ba52],cl
  40cb14:	adc    bl,BYTE PTR [edx-0x51]
  40cb17:	cld    
  40cb18:	fbld   TBYTE PTR [bx+si]
  40cb1b:	pop    ss
  40cb1c:	ds dec esp
  40cb1e:	(bad)  
  40cb1f:	test   al,0xbe
  40cb21:	pop    edi
  40cb22:	xchg   ebp,eax
  40cb23:	mov    ?,ebp
  40cb25:	fwait
  40cb26:	aaa    
  40cb27:	mov    al,ds:0x2767f45c
  40cb2c:	loop   0x40cabb
  40cb2e:	stos   DWORD PTR es:[edi],eax
  40cb2f:	cmp    ecx,DWORD PTR [esi+0x76ec0c0d]
  40cb35:	fcom   DWORD PTR [esi+ebx*4+0x7e9c81f]
  40cb3c:	shr    ecx,1
  40cb3e:	pop    esi
  40cb3f:	inc    ebp
  40cb40:	or     DWORD PTR [ecx+0x437fab36],edx
  40cb46:	jae    0x40cb27
  40cb48:	push   eax
  40cb49:	daa    
  40cb4a:	jno    0x40cb4d
  40cb4c:	inc    esi
  40cb4d:	sbb    edi,DWORD PTR [eax]
  40cb4f:	in     eax,dx
  40cb50:	out    0xc3,eax
  40cb52:	pop    esi
  40cb54:	xor    eax,0x26d98970
  40cb59:	sub    DWORD PTR [esi-0x208ee016],ebp
  40cb5f:	shl    DWORD PTR [ecx],0xc5
  40cb62:	jp     0x40cb0b
  40cb64:	retf   0xa588
  40cb67:	lods   al,BYTE PTR ds:[esi]
  40cb68:	xchg   DWORD PTR [esi-0x33],esp
  40cb6b:	sub    edi,DWORD PTR [eax-0x54e44996]
  40cb71:	inc    edi
  40cb72:	hlt    
  40cb73:	neg    eax
  40cb75:	(bad)  
  40cb76:	or     dh,dh
  40cb78:	int3   
  40cb79:	mov    cs,WORD PTR [edx-0x57]
  40cb7c:	aas    
  40cb7d:	sub    bl,BYTE PTR ss:[ebx+0x47]
  40cb81:	mov    ch,BYTE PTR [ecx+edi*1-0x78566ec2]
  40cb88:	mov    eax,ds:0x28ea545c
  40cb8d:	jns    0x40cb4f
  40cb8f:	stos   DWORD PTR es:[edi],eax
  40cb90:	dec    esp
  40cb91:	dec    eax
  40cb92:	sahf   
  40cb93:	mov    edi,0x98c09c9f
  40cb98:	cli    
  40cb99:	push   ss
  40cb9a:	test   BYTE PTR [ebx-0x13],0xab
  40cb9e:	mov    WORD PTR [edi-0x2cc29ab4],es
  40cba4:	rol    BYTE PTR [ebx+eax*8-0x5bc26cb],cl
  40cbab:	ja     0x40cb48
  40cbad:	push   ds
  40cbae:	vunpckhps xmm3,xmm0,XMMWORD PTR [edx-0x45248706]
  40cbb6:	(bad)  
  40cbb7:	fbstp  TBYTE PTR [ecx]
  40cbb9:	push   eax
  40cbba:	mov    ecx,0xdd8b4092
  40cbbf:	mov    WORD PTR [ebp-0x444c5b3],ss
  40cbc5:	popa   
  40cbc6:	inc    ebp
  40cbc7:	adc    BYTE PTR [ebp-0x16d0b6f9],bh
  40cbcd:	stos   DWORD PTR es:[edi],eax
  40cbce:	outs   dx,BYTE PTR ds:[esi]
  40cbcf:	popa   
  40cbd0:	fs mov al,0x86
  40cbd3:	outs   dx,DWORD PTR ds:[esi]
  40cbd4:	arpl   bp,di
  40cbd6:	add    ch,BYTE PTR [ebp+0x460f4651]
  40cbdc:	aam    0x64
  40cbde:	pop    esi
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422670,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax+0x7e1babf9],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [esi],bh
  40cc78:	cdq    
  40cc79:	and    al,0xf7
  40cc7b:	add    ah,ah
  40cc7d:	xchg   BYTE PTR [ebp+0x11f8fdfd],al
  40cc83:	add    al,al
  40cc85:	lds    edx,FWORD PTR [esi+edx*4+0x5017142e]
  40cc8c:	loope  0x40cc90
  40cc8e:	test   al,0x20
  40cc90:	pop    ebx
  40cc91:	push   ss
  40cc92:	cmp    eax,0x405e2f00
  40cc97:	and    al,0x9b
  40cc99:	jno    0x40cc6e
  40cc9b:	and    al,0x6f
  40cc9d:	mov    BYTE PTR [ebx],ah
  40cc9f:	scas   eax,DWORD PTR es:[edi]
  40cca0:	adc    eax,0x2b9f0bbb
  40cca5:	scas   eax,DWORD PTR es:[edi]
  40cca6:	dec    esi
  40cca7:	add    al,0x1a
  40cca9:	out    dx,eax
  40ccaa:	(bad)  
  40ccab:	fdivr  QWORD PTR [ebx+0xdfd859d]
  40ccb1:	stos   DWORD PTR es:[edi],eax
  40ccb2:	shl    ecx,0x82
  40ccb5:	jne    0x40cc95
  40ccb7:	enter  0x9db6,0x39
  40ccbb:	jp     0x40cc78
  40ccbd:	scas   al,BYTE PTR es:[edi]
  40ccbe:	loop   0x40cc68
  40ccc0:	pusha  
  40ccc1:	rcl    DWORD PTR [eax],1
  40ccc3:	es scas eax,DWORD PTR es:[edi]
  40ccc5:	adc    al,0xe1
  40ccc7:	repnz pop ds
  40ccc9:	in     eax,dx
  40ccca:	dec    ecx
  40cccb:	inc    edi
  40cccc:	ds or  al,0x15
  40cccf:	cdq    
  40ccd0:	mov    ds:0xb8e3b711,al
  40ccd5:	pop    edi
  40ccd6:	push   eax
  40ccd7:	test   DWORD PTR [edi-0x65],ebx
  40ccda:	jge    0x40cd27
  40ccdc:	inc    esp
  40ccdd:	arpl   di,bx
  40ccdf:	clc    
  40cce0:	cmp    eax,0xaa4f3161
  40cce5:	jbe    0x40cd57
  40cce7:	shl    BYTE PTR ds:0x66debf,1
  40cced:	stos   DWORD PTR es:[edi],eax
  40ccee:	push   edx
  40ccef:	fst    QWORD PTR [ebx]
  40ccf1:	or     eax,esi
  40ccf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf4:	test   eax,0xe790eef6
  40ccf9:	mov    esp,0x207479d0
  40ccfe:	push   esp
  40ccff:	adc    DWORD PTR [edi],edi
  40cd01:	inc    eax
  40cd02:	sbb    BYTE PTR [esi],ch
  40cd04:	mov    esi,0xa5917e8a
  40cd09:	loope  0x40cd35
  40cd0b:	sbb    DWORD PTR [eax+0x4bfaf499],ebp
  40cd11:	pop    ebp
  40cd12:	sbb    DWORD PTR [ebp+0x3a7f2340],eax
  40cd18:	and    al,0x8e
  40cd1a:	mov    ebx,ecx
  40cd1c:	js     0x40cd96
  40cd1e:	sub    DWORD PTR [ebx+edi*4-0x66f2876e],esi
  40cd25:	bound  esi,QWORD PTR [edx+ecx*8-0x5ac5b8cc]
  40cd2c:	cli    
  40cd2d:	inc    esi
  40cd2e:	sahf   
  40cd2f:	hlt    
  40cd30:	pop    edi
  40cd31:	rcr    BYTE PTR [edi+0x57],cl
  40cd34:	pop    ds
  40cd35:	jmp    0x40ccea
  40cd37:	pop    ss
  40cd38:	out    dx,eax
  40cd39:	in     al,dx
  40cd3a:	push   esi
  40cd3b:	nop
  40cd3c:	ror    BYTE PTR [eax],cl
  40cd3e:	mov    ah,0x1d
  40cd40:	and    ebx,ebx
  40cd42:	dec    esi
  40cd43:	fild   DWORD PTR [ecx-0x17d71392]
  40cd49:	mov    dl,0x32
  40cd4b:	push   esp
  40cd4c:	call   FWORD PTR [eax-0x37]
  40cd4f:	adc    DWORD PTR [esi-0x6122ed21],0xce0818ab
  40cd59:	loopne 0x40cd39
  40cd5b:	and    DWORD PTR [ebx+0x5ce50a00],esp
  40cd61:	lea    eax,ss:[eax]
  40cd64:	fiadd  DWORD PTR [esi]
  40cd66:	sbb    BYTE PTR [eax],bh
  40cd68:	fist   DWORD PTR [esi]
  40cd6a:	mov    bl,0x51
  40cd6c:	push   edi
  40cd6d:	pop    esi
  40cd6e:	popf   
  40cd6f:	test   eax,0x70fb6ea9
  40cd74:	mov    ds:0x887724ca,eax
  40cd79:	out    0xcd,eax
  40cd7b:	adc    ch,ah
  40cd7d:	mov    ah,0x4d
  40cd7f:	ins    BYTE PTR es:[edi],dx
  40cd80:	inc    ecx
  40cd81:	add    al,0x96
  40cd83:	add    eax,0x8e0b3e05
  40cd88:	cmc    
  40cd89:	out    dx,al
  40cd8a:	outs   dx,DWORD PTR ds:[esi]
  40cd8b:	fmul   DWORD PTR [eax+0x5b]
  40cd8e:	adc    BYTE PTR [eax+0x42],ch
  40cd91:	add    ah,BYTE PTR [esi-0x40]
  40cd94:	or     cl,BYTE PTR [eax]
  40cd96:	shl    BYTE PTR ds:[esi+0x4c],1
  40cd9a:	jns    0x40cdca
  40cd9c:	cs popf 
  40cd9e:	push   ebx
  40cd9f:	mov    eax,0x349b8aff
  40cda4:	jecxz  0x40ce0a
  40cda6:	sbb    al,0xac
  40cda8:	adc    cl,BYTE PTR ds:0x7c7227c1
  40cdae:	out    0x2b,al
  40cdb0:	jp     0x40cddd
  40cdb2:	call   0x1ac94cdc
  40cdb7:	and    ecx,DWORD PTR [eax-0x7f6646c9]
  40cdbd:	lods   al,BYTE PTR ds:[esi]
  40cdbe:	dec    ebx
  40cdbf:	xor    al,0xd5
  40cdc1:	jnp    0x40cdfe
  40cdc3:	xor    al,0x55
  40cdc5:	repz add eax,0x7b344ea5
  40cdcb:	int    0x65
  40cdcd:	sahf   
  40cdce:	dec    esp
  40cdcf:	or     eax,0xc582cf91
  40cdd4:	push   cs
  40cdd5:	sub    ah,BYTE PTR ss:0x8047f15a
  40cddc:	cwde   
  40cddd:	mov    al,0x9d
  40cddf:	fiadd  DWORD PTR [ebp+0xfa155f3]
  40cde5:	add    edx,edx
  40cde7:	mov    eax,ds:0xe39d1e4a
  40cdec:	mov    dl,BYTE PTR [esi]
  40cdee:	add    BYTE PTR [edx-0x43],dh
  40cdf1:	add    DWORD PTR [esp+ebx*8+0x7744c346],ebx
  40cdf8:	ins    BYTE PTR es:[edi],dx
  40cdf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdfa:	xchg   edi,eax
  40cdfb:	sbb    al,al
  40cdfd:	xor    eax,0xcf38539e
  40ce02:	jno    0x40ce33
  40ce04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce05:	jbe    0x40cdbc
  40ce07:	rcl    BYTE PTR [edi+edx*1],cl
  40ce0a:	sti    
  40ce0b:	or     al,0xfd
  40ce0d:	(bad)  
  40ce0e:	fcomp  st(2)
  40ce10:	xchg   ebx,eax
  40ce11:	pop    esi
  40ce12:	sbb    DWORD PTR [esi],0xffffffdd
  40ce15:	xor    ebx,edx
  40ce17:	sbb    BYTE PTR [ecx+0x2310b723],0x6b
  40ce1e:	iret   
  40ce1f:	loopne 0x40cdf7
  40ce21:	push   0xffffffd3
  40ce23:	xchg   edi,eax
  40ce24:	add    ebp,0xffffff8d
  40ce27:	not    DWORD PTR [eax]
  40ce29:	mov    dh,0x8d
  40ce2b:	jbe    0x40ce6b
  40ce2d:	rcr    ch,cl
  40ce2f:	ds add eax,0xce3c3e5f
  40ce35:	popf   
  40ce36:	(bad)  
  40ce37:	fnstcw WORD PTR [edi+0x77]
  40ce3a:	xor    bl,BYTE PTR [edi+0x15a41494]
  40ce40:	pop    ebx
  40ce41:	mov    al,0xe1
  40ce43:	cs jmp 0xdfdd:0xc0388068
  40ce4b:	adc    DWORD PTR [edx-0xf4ec8b4],edx
  40ce51:	push   ecx
  40ce52:	or     esi,DWORD PTR [ebp-0x37]
  40ce55:	fucomip st,st(5)
  40ce57:	std    
  40ce58:	test   DWORD PTR [esi],edi
  40ce5a:	xchg   edi,eax
  40ce5b:	sar    edi,0xb1
  40ce5e:	cwde   
  40ce5f:	mov    esp,0x9da0089
  40ce64:	add    ah,BYTE PTR [eax+0x2a04144c]
  40ce6a:	dec    ecx
  40ce6b:	pop    esi
  40ce6c:	cdq    
  40ce6d:	dec    eax
  40ce6e:	pusha  
  40ce6f:	dec    esi
  40ce70:	jecxz  0x40cec3
  40ce72:	in     eax,0xad
  40ce74:	rcl    BYTE PTR [ebx-0x671f4180],cl
  40ce7a:	sub    al,0xf7
  40ce7c:	add    BYTE PTR ds:0x4af50304,dl
  40ce82:	inc    ecx
  40ce83:	push   cs
  40ce84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce85:	xchg   edx,eax
  40ce86:	jl     0x40ce57
  40ce88:	push   ds
  40ce89:	call   0xe28bf4f3
  40ce8e:	cwde   
  40ce8f:	in     al,dx
  40ce90:	and    DWORD PTR [ecx],ebx
  40ce92:	lods   eax,DWORD PTR ds:[esi]
  40ce93:	mov    edx,0x5c513c64
  40ce98:	ja     0x40cefa
  40ce9a:	repnz or ecx,esp
  40ce9d:	and    BYTE PTR [eax-0x62],bh
  40cea0:	ds hlt 
  40cea2:	inc    DWORD PTR [eax+0x5a]
  40cea5:	dec    edx
  40cea6:	add    eax,0x973b5ef5
  40ceab:	ret    
  40ceac:	mov    ecx,0x48ec7308
  40ceb1:	(bad)  
  40ceb2:	cmp    BYTE PTR [edx],cl
  40ceb4:	push   esi
  40ceb5:	xchg   edi,eax
  40ceb6:	xlat   BYTE PTR ds:[ebx]
  40ceb7:	cs in  eax,dx
  40ceb9:	adc    edx,DWORD PTR [edi-0x15]
  40cebc:	scas   al,BYTE PTR es:[edi]
  40cebd:	ins    DWORD PTR es:[edi],dx
  40cebe:	push   ebx
  40cebf:	mov    edi,0x393fcecc
  40cec4:	popa   
  40cec5:	stc    
  40cec6:	iret   
  40cec7:	shr    BYTE PTR ds:0x42f0eac0,0x2a
  40cece:	imul   ebx,DWORD PTR [ecx-0x3f],0xc897dfeb
  40ced5:	in     al,dx
  40ced6:	mov    ds:0x5c85ae67,eax
  40cedb:	inc    esi
  40cedc:	fldenv [ebp+eiz*2-0x19daf2fd]
  40cee3:	imul   eax,DWORD PTR [edi+0x2e91d847],0xdd5c9613
  40ceed:	in     al,0x89
  40ceef:	(bad)  
  40cef0:	ja     0x40cebd
  40cef2:	dec    ebx
  40cef3:	sbb    bh,dl
  40cef5:	push   edi
  40cef6:	mov    dh,0x43
  40cef8:	or     esi,DWORD PTR [esi+0xd]
  40cefb:	(bad)  
  40cefc:	pop    ecx
  40cefd:	int    0x97
  40ceff:	mov    cl,0x65
  40cf01:	sub    BYTE PTR [edx+0x45],ch
  40cf04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf05:	xchg   ecx,eax
  40cf06:	hlt    
  40cf07:	lds    esp,FWORD PTR [edx+0x44]
  40cf0a:	xor    al,BYTE PTR [ebx+0x24]
  40cf0d:	mov    esi,0x1cf275ab
  40cf12:	sar    ebx,0xc2
  40cf15:	xor    al,0x34
  40cf17:	ss mov ch,0x43
  40cf1a:	jp     0x40ce9e
  40cf1c:	sbb    DWORD PTR [edx+0x2bfc458b],edi
  40cf22:	enter  0x4d03,0xf4
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422568
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x2db3432d],esi
  40cfad:	add    BYTE PTR [esi+0x1818e872],bh
  40cfb3:	rcl    BYTE PTR [eax+ebx*1],cl
  40cfb6:	sbb    BYTE PTR [ecx+0x29f8b1f6],dh
  40cfbc:	scas   al,BYTE PTR es:[edi]
  40cfbd:	cmp    eax,0x22e163a5
  40cfc2:	dec    ebx
  40cfc3:	sahf   
  40cfc4:	xor    eax,0xba878a1c
  40cfc9:	das    
  40cfca:	mov    ds:0x627b9fbc,al
  40cfcf:	pop    ss
  40cfd0:	fidivr DWORD PTR [eax-0x79e49ed8]
  40cfd6:	or     al,BYTE PTR [ecx-0x4d]
  40cfd9:	imul   esp,edi,0xddcb9733
  40cfdf:	push   cs
  40cfe0:	imul   esi,ebx,0x44
  40cfe3:	and    cl,BYTE PTR [edx]
  40cfe5:	jmp    0x9d0aa478
  40cfea:	and    DWORD PTR [ecx],esi
  40cfec:	inc    ecx
  40cfed:	mov    edi,0xfcb61751
  40cff2:	pop    ebp
  40cff3:	addr16 pop ds
  40cff5:	sub    BYTE PTR [edx+0x116e7f0c],dh
  40cffb:	pushf  
  40cffc:	dec    ebp
  40cffd:	or     al,0x4e
  40cfff:	lea    edx,[esi+0x479b7ff3]
  40d005:	push   esi
  40d006:	test   BYTE PTR [edi],cl
  40d008:	call   0xe5d7:0x5025affd
  40d00f:	jae    0x40d06a
  40d011:	test   eax,0x7c9c423c
  40d016:	dec    esp
  40d017:	ja     0x40d047
  40d019:	cmp    ah,ah
  40d01b:	dec    ecx
  40d01c:	dec    ebx
  40d01d:	(bad)  
  40d01e:	arpl   WORD PTR [esi-0x6],dx
  40d021:	pop    edx
  40d022:	ror    BYTE PTR [esi+0x5cc3567f],cl
  40d028:	pop    esi
  40d029:	adc    eax,DWORD PTR [edi+0xe]
  40d02c:	fs sub bl,dl
  40d02f:	jmp    0xdc818863
  40d034:	add    BYTE PTR [eax+0x3e],al
  40d037:	jnp    0x40d064
  40d039:	inc    eax
  40d03a:	jbe    0x40d006
  40d03c:	cdq    
  40d03d:	xchg   ecx,eax
  40d03e:	out    dx,eax
  40d03f:	(bad)  
  40d040:	xor    al,ah
  40d042:	test   BYTE PTR gs:[edi+0x1a],0xdd
  40d047:	dec    edx
  40d048:	or     DWORD PTR [ebp+eax*2+0x26d0ae45],0xabcfc2a1
  40d053:	arpl   WORD PTR [esi+0x30],bp
  40d056:	cdq    
  40d057:	cmp    DWORD PTR [edx],edi
  40d059:	sbb    bh,ch
  40d05b:	pop    ds
  40d05c:	jecxz  0x40d0d9
  40d05e:	cwde   
  40d05f:	add    DWORD PTR [ebp-0x5768cc36],eax
  40d065:	jne    0x40d084
  40d067:	pop    ebx
  40d068:	jne    0x40d07c
  40d06a:	sti    
  40d06b:	xor    dh,BYTE PTR [ebx+0x455af177]
  40d071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d072:	inc    ebp
  40d073:	aas    
  40d074:	pop    ebp
  40d075:	xor    eax,0xf1b24ad2
  40d07a:	mov    edx,0xf702f673
  40d07f:	vpaddsw xmm1,xmm4,XMMWORD PTR [edi+0x6b]
  40d084:	mov    al,bl
  40d086:	mov    ds:0xcc627e53,eax
  40d08b:	sbb    esi,ebp
  40d08d:	xor    BYTE PTR gs:[edi-0x4f06557e],bh
  40d094:	mov    dh,0x8b
  40d096:	mov    bh,BYTE PTR [ebp-0x5a68f49c]
  40d09c:	stos   BYTE PTR es:[edi],al
  40d09d:	sbb    eax,ebx
  40d09f:	mov    bh,0xb8
  40d0a1:	bound  edi,QWORD PTR [esi+0x79557b57]
  40d0a7:	or     al,0x2f
  40d0a9:	aam    0xa0
  40d0ab:	cmp    esi,0xffffff9e
  40d0ae:	sub    eax,0x87d583cb
  40d0b3:	fst    DWORD PTR [edi+0x55]
  40d0b6:	daa    
  40d0b7:	retf   
  40d0b8:	aaa    
  40d0b9:	pop    ds
  40d0ba:	xor    BYTE PTR [esi],ch
  40d0bc:	dec    edi
  40d0bd:	inc    edx
  40d0be:	pop    ebp
  40d0bf:	idiv   DWORD PTR ds:0x57cf6ac6
  40d0c5:	leave  
  40d0c6:	add    bh,dl
  40d0c8:	or     al,0x69
  40d0ca:	mov    ah,0x38
  40d0cc:	or     bl,BYTE PTR [ebp*4+0x3f7a2960]
  40d0d3:	rcr    eax,cl
  40d0d5:	pushf  
  40d0d6:	jmp    0xc30c:0xfcbccca5
  40d0dd:	(bad)  
  40d0de:	sti    
  40d0df:	dec    eax
  40d0e0:	hlt    
  40d0e1:	and    eax,0x10b7c256
  40d0e6:	loopne 0x40d13e
  40d0e8:	xchg   esp,eax
  40d0e9:	mov    edi,0x179ab01c
  40d0ee:	sub    BYTE PTR [edi],ch
  40d0f0:	sub    eax,DWORD PTR [esp+ecx*4]
  40d0f3:	and    DWORD PTR [eax],edi
  40d0f5:	aas    
  40d0f6:	dec    esp
  40d0f7:	cwde   
  40d0f8:	inc    eax
  40d0f9:	in     al,0x46
  40d0fb:	fwait
  40d0fc:	xlat   BYTE PTR ds:[ebx]
  40d0fd:	mov    bl,0x9f
  40d0ff:	or     BYTE PTR [eax*2-0x5eab5452],0x18
  40d107:	mov    DWORD PTR [edx],eax
  40d109:	sbb    al,0xe3
  40d10b:	in     al,dx
  40d10c:	sub    DWORD PTR [edx-0x588a7fc3],esi
  40d112:	mov    dl,0x81
  40d114:	jmp    0x67b5:0x37dba932
  40d11b:	adc    esp,DWORD PTR [ebx-0x44]
  40d11e:	mov    eax,0xfa912847
  40d123:	xchg   edx,eax
  40d124:	int3   
  40d125:	cli    
  40d126:	repz and edx,ebp
  40d129:	mov    edi,0xa47d3bc9
  40d12e:	mov    bh,0x75
  40d130:	ds inc edx
  40d132:	hlt    
  40d133:	dec    esi
  40d134:	push   es
  40d135:	push   DWORD PTR ds:0x17796a50
  40d13b:	sbb    DWORD PTR [esi+ecx*2-0x6e],ebx
  40d13f:	pop    edi
  40d140:	(bad)  
  40d141:	fiadd  WORD PTR [ebp-0x1d]
  40d144:	xchg   ebp,eax
  40d145:	mov    esp,0x1bfad04d
  40d14a:	pop    ebp
  40d14b:	jmp    0x40d1c8
  40d14d:	call   0x4c85:0x1f9c2167
  40d154:	pop    ds
  40d155:	inc    edx
  40d156:	lods   eax,DWORD PTR ds:[esi]
  40d157:	scas   eax,DWORD PTR es:[edi]
  40d158:	test   al,0xe8
  40d15a:	mov    esi,0xb2224e6c
  40d15f:	enter  0x985f,0xf4
  40d163:	adc    al,0xe0
  40d165:	daa    
  40d166:	xchg   dh,cl
  40d168:	push   0x2d
  40d16a:	outs   dx,DWORD PTR ds:[esi]
  40d16b:	sbb    DWORD PTR [esi+edi*8-0x5],0xf8e83e2c
  40d173:	mov    ds:0x43addbcb,al
  40d178:	pusha  
  40d179:	jo     0x40d14e
  40d17b:	sbb    esi,DWORD PTR [edx]
  40d17d:	push   0xcc08eabe
  40d182:	xchg   edi,eax
  40d183:	or     eax,0xfec7ec6
  40d188:	and    eax,0x4107cf4b
  40d18d:	cmp    al,0x95
  40d18f:	retf   
  40d190:	nop
  40d191:	and    DWORD PTR [edx-0x2228ada6],esp
  40d197:	cld    
  40d198:	mov    BYTE PTR [esi-0x45],bl
  40d19b:	loope  0x40d203
  40d19d:	stos   BYTE PTR es:[edi],al
  40d19e:	inc    eax
  40d19f:	push   DWORD PTR [edi-0x51]
  40d1a2:	sub    eax,0x4797ad72
  40d1a7:	add    eax,0x358ebff0
  40d1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ad:	adc    DWORD PTR gs:[di+0x3174],esi
  40d1b3:	dec    eax
  40d1b4:	adc    cl,al
  40d1b6:	sub    bl,BYTE PTR [ebp+0xf]
  40d1b9:	push   esp
  40d1ba:	cld    
  40d1bb:	call   0x6211f452
  40d1c0:	mov    gs,WORD PTR [edx]
  40d1c2:	push   esp
  40d1c3:	mov    ch,0x4
  40d1c5:	add    eax,0x4db9dda
  40d1ca:	xchg   ebx,eax
  40d1cb:	sub    ah,BYTE PTR [eax+esi*8+0x4882b2e4]
  40d1d2:	test   eax,0xbbdf9a9b
  40d1d7:	or     al,0xd2
  40d1d9:	nop
  40d1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1db:	idiv   DWORD PTR [esi+0x48]
  40d1de:	ds inc esi
  40d1e0:	add    ch,BYTE PTR ds:0xa18d0e40
  40d1e6:	adc    bl,bl
  40d1e8:	inc    ebp
  40d1e9:	fld    TBYTE PTR [ebp-0x14]
  40d1ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ed:	loope  0x40d176
  40d1ef:	xor    ah,BYTE PTR [esi+0x7e]
  40d1f2:	mov    cl,0xe3
  40d1f4:	mov    ebp,0x661c1897
  40d1f9:	in     al,dx
  40d1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1fb:	fld    DWORD PTR ds:0x8352ead4
  40d201:	fs cmp dh,ah
  40d204:	or     DWORD PTR [esp+ebx*2+0x3a1eb058],esi
  40d20b:	je     0x40d1e5
  40d20d:	outs   dx,DWORD PTR ds:[esi]
  40d20e:	rcl    bh,0x18
  40d211:	movd   mm3,DWORD PTR [ebx+0x55a5b201]
  40d218:	pushf  
  40d219:	test   BYTE PTR [edx],ch
  40d21b:	rcl    BYTE PTR [esi+esi*8-0x51cb062a],cl
  40d222:	mov    esi,0xc8049f71
  40d227:	repnz dec edi
  40d229:	pusha  
  40d22a:	retf   
  40d22b:	ja     0x40d1c3
  40d22d:	out    0x53,al
  40d22f:	in     eax,0x5f
  40d231:	int3   
  40d232:	dec    esi
  40d233:	out    0x71,al
  40d235:	cld    
  40d236:	leave  
  40d237:	rcl    DWORD PTR [ecx-0x7f],0xe7
  40d23b:	(bad)  
  40d23d:	xor    esi,DWORD PTR [ecx]
  40d23f:	xor    WORD PTR [ebx-0x1d1a069b],cx
  40d246:	bound  ebp,QWORD PTR [ebx-0xb]
  40d249:	cmp    eax,0x55fc5870
  40d24e:	push   edi
  40d24f:	pushf  
  40d250:	xor    DWORD PTR [ebp-0x51],ecx
  40d253:	xor    DWORD PTR [edi],esp
  40d255:	cmp    esp,eax
  40d257:	mov    edx,0xf589d6b5
  40d25c:	imul   edx,DWORD PTR [ebp-0x78],0x4
  40d260:	push   cs
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	stos   DWORD PTR es:[edi],eax
  40d2f3:	cld    
  40d2f4:	adc    ch,BYTE PTR [edx+0x1818e22d]
  40d2fa:	rcl    BYTE PTR [eax+ebx*1],cl
  40d2fd:	sbb    BYTE PTR [ecx],bh
  40d2ff:	int3   
  40d300:	add    al,0x29
  40d302:	cmp    DWORD PTR [eax+0x8],esi
  40d305:	xchg   esi,eax
  40d306:	and    bh,BYTE PTR [ebx]
  40d308:	les    ebp,FWORD PTR gs:[ecx-0x3c770b3a]
  40d30f:	and    BYTE PTR [ebp+0x6a],ah
  40d312:	pop    ebx
  40d313:	or     al,BYTE PTR [ebp+0x53]
  40d316:	inc    eax
  40d317:	sub    DWORD PTR ss:[edi],ebp
  40d31a:	or     al,0xea
  40d31c:	frstor [eax+0x47a8ab02]
  40d322:	mov    ch,0xb4
  40d324:	dec    eax
  40d325:	jl     0x40d2f0
  40d327:	inc    ebp
  40d328:	jecxz  0x40d2af
  40d32a:	retf   
  40d32b:	adc    edi,ebx
  40d32d:	xor    dl,BYTE PTR [edx+edx*1]
  40d330:	(bad)  
  40d331:	mov    ds:0xb67954,al
  40d336:	inc    esi
  40d337:	cmp    eax,0x9c8283bf
  40d33c:	bound  esp,QWORD PTR [esi]
  40d33e:	add    DWORD PTR [esi],eax
  40d340:	jge    0x40d2da
  40d342:	in     eax,dx
  40d343:	xchg   esi,eax
  40d344:	cld    
  40d345:	sub    BYTE PTR [ebp+0x6a],al
  40d348:	cmp    ecx,DWORD PTR [ecx+0x27cf8014]
  40d34e:	jecxz  0x40d37b
  40d350:	jns    0x40d333
  40d352:	push   0x7c70102b
  40d357:	and    eax,DWORD PTR [ebx+0x24]
  40d35a:	jae    0x40d38a
  40d35c:	iret   
  40d35d:	in     al,dx
  40d35e:	add    DWORD PTR [edx+0x4b1cfd04],edi
  40d364:	dec    esp
  40d365:	enterw 0x3f09,0xda
  40d36a:	int3   
  40d36b:	dec    eax
  40d36c:	push   cs
  40d36d:	pusha  
  40d36e:	js     0x40d361
  40d370:	out    dx,al
  40d371:	leave  
  40d372:	sbb    edi,esp
  40d374:	xchg   ebp,eax
  40d375:	fstp   DWORD PTR [edi]
  40d377:	into   
  40d378:	jae    0x40d359
  40d37a:	add    bl,BYTE PTR [eax]
  40d37c:	cmp    BYTE PTR [edx],dl
  40d37e:	shl    dl,0xf6
  40d381:	mov    edi,0xa09052e6
  40d386:	sub    cl,BYTE PTR [ecx-0x28]
  40d389:	nop
  40d38a:	test   eax,0xe4a618dc
  40d38f:	loop   0x40d383
  40d391:	mov    ebp,0x3659d8ae
  40d396:	mov    esi,edi
  40d398:	popf   
  40d399:	in     al,dx
  40d39a:	icebp  
  40d39b:	hlt    
  40d39c:	push   ebx
  40d39d:	add    BYTE PTR [eax+0x7e],al
  40d3a0:	pushf  
  40d3a1:	loopne 0x40d3ea
  40d3a3:	icebp  
  40d3a4:	and    ebp,esp
  40d3a6:	sub    bl,ch
  40d3a8:	fst    QWORD PTR [edi+eiz*4+0x5d]
  40d3ac:	sbb    DWORD PTR ds:0xb4fac4a8,ecx
  40d3b2:	retf   
  40d3b3:	test   al,0xaa
  40d3b5:	pop    es
  40d3b6:	lds    ebp,FWORD PTR [ebx-0x71]
  40d3b9:	retf   
  40d3ba:	imul   BYTE PTR [edi+0x7a6e0116]
  40d3c0:	jb     0x40d3c7
  40d3c2:	adc    edi,DWORD PTR [edx+0x60ea5f6e]
  40d3c8:	data16 test al,0x54
  40d3cb:	xchg   esp,eax
  40d3cc:	addr16 test al,0x9d
  40d3cf:	(bad)  
  40d3d0:	daa    
  40d3d1:	ds scas eax,DWORD PTR es:[edi]
  40d3d3:	xlat   BYTE PTR ds:[ebx]
  40d3d4:	adc    DWORD PTR [eax+0x50],edi
  40d3d7:	inc    esp
  40d3d8:	arpl   di,cx
  40d3da:	jno    0x40d38f
  40d3dc:	fidiv  WORD PTR [edi-0x5d]
  40d3df:	push   0xf361aeb
  40d3e4:	popf   
  40d3e5:	test   DWORD PTR [ebp+ebx*1-0x49],esi
  40d3e9:	mov    edx,0x163b93a3
  40d3ee:	nop
  40d3ef:	mov    ebp,0x2056ab07
  40d3f4:	popa   
  40d3f5:	jge    0x40d3da
  40d3f7:	lods   al,BYTE PTR ds:[esi]
  40d3f8:	jmp    0x4aa0:0xfdb9129
  40d3ff:	cmp    al,0x6b
  40d401:	mov    fs,WORD PTR [edx-0x5b2de1a0]
  40d407:	mov    esp,0xe8f6ad15
  40d40c:	xor    al,0x23
  40d40e:	ret    
  40d40f:	frstor [ecx+esi*1]
  40d412:	sub    al,0x85
  40d414:	(bad)  
  40d415:	mov    al,ds:0x8403e8cc
  40d41a:	cwde   
  40d41b:	jnp    0x40d474
  40d41d:	fsub   QWORD PTR [ebx-0x75acedb8]
  40d423:	mov    BYTE PTR [ebp-0x14a08482],ch
  40d429:	ret    
  40d42a:	jbe    0x40d405
  40d42c:	mov    ds:0xef62cc4d,al
  40d431:	push   0xffffffac
  40d433:	mov    ebx,0xac25ce44
  40d438:	adc    eax,0xae740309
  40d43d:	cmp    eax,0xd31fe739
  40d442:	sub    cl,cl
  40d444:	iret   
  40d445:	mov    esp,0x1e2a02eb
  40d44a:	inc    eax
  40d44b:	mov    esp,0x9bab0dd0
  40d450:	xor    esp,esp
  40d452:	aad    0x8a
  40d454:	xchg   DWORD PTR [ecx],eax
  40d456:	mov    fs,WORD PTR [edx+ebp*2-0x7ddb59e1]
  40d45d:	jnp    0x40d46c
  40d45f:	fisubr WORD PTR [ebx-0x17059856]
  40d465:	dec    edi
  40d466:	loop   0x40d4c5
  40d468:	loop   0x40d451
  40d46a:	pop    ds
  40d46b:	lock icebp 
  40d46d:	adc    esi,esp
  40d46f:	or     dl,BYTE PTR [eax]
  40d471:	jnp    0x40d476
  40d473:	out    dx,al
  40d474:	xlat   BYTE PTR ds:[ebx]
  40d475:	sbb    BYTE PTR [edx-0x6a],bl
  40d478:	push   edi
  40d479:	retf   0x4bb5
  40d47c:	sbb    ebx,DWORD PTR [esi]
  40d47e:	jo     0x40d468
  40d480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d481:	xchg   DWORD PTR [esp+edx*2+0x33],esi
  40d485:	outs   dx,BYTE PTR ds:[esi]
  40d486:	inc    ebp
  40d487:	dec    edx
  40d488:	dec    edi
  40d489:	cmp    DWORD PTR [ebx+ebp*2-0x54],esp
  40d48d:	retf   0x24b2
  40d490:	xchg   esi,eax
  40d491:	cld    
  40d492:	out    dx,al
  40d493:	mov    dh,0xb
  40d495:	(bad)  
  40d496:	cs xor eax,0x38ed398a
  40d49c:	jo     0x40d4f0
  40d49e:	xor    BYTE PTR [ecx],dl
  40d4a0:	test   eax,0x7f0005bf
  40d4a5:	bound  eax,QWORD PTR ds:0xe200cd02
  40d4ab:	pop    eax
  40d4ac:	out    dx,al
  40d4ad:	(bad)  
  40d4ae:	mov    esp,DWORD PTR [esi+0x4]
  40d4b1:	xor    BYTE PTR [ecx-0x10],ch
  40d4b4:	push   eax
  40d4b5:	enter  0x2b3f,0xb2
  40d4b9:	jg     0x40d4bf
  40d4bb:	out    0xb2,eax
  40d4bd:	sahf   
  40d4be:	push   ebx
  40d4bf:	inc    esp
  40d4c0:	sbb    ebp,DWORD PTR [ecx]
  40d4c2:	push   ds
  40d4c3:	xor    al,0x31
  40d4c5:	xorps  xmm0,xmm0
  40d4c8:	sbb    BYTE PTR [eax-0x24],0x4f
  40d4cc:	mul    cl
  40d4ce:	sub    al,0x91
  40d4d0:	dec    ebx
  40d4d1:	dec    eax
  40d4d2:	push   eax
  40d4d3:	jg     0x40d540
  40d4d5:	xor    edi,DWORD PTR [esi+eiz*4+0x77]
  40d4d9:	mov    BYTE PTR [ebx-0x749a70d],0x20
  40d4e0:	xlat   BYTE PTR ds:[ebx]
  40d4e1:	cmp    DWORD PTR [ebp-0x7d6efd0a],ebx
  40d4e7:	sti    
  40d4e8:	inc    ebp
  40d4e9:	or     eax,0xc530a546
  40d4ee:	add    DWORD PTR [edi],esp
  40d4f0:	or     al,0x77
  40d4f2:	addr16 pop ecx
  40d4f4:	and    BYTE PTR [edi+ebp*8+0x8524df],ch
  40d4fb:	dec    edx
  40d4fc:	popf   
  40d4fd:	add    esi,ebp
  40d4ff:	repnz retf 
  40d501:	clc    
  40d502:	adc    eax,0x30d224dc
  40d507:	fiadd  WORD PTR ds:0x830ba7bb
  40d50d:	cmc    
  40d50e:	ins    DWORD PTR es:[edi],dx
  40d50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d510:	mov    ecx,ecx
  40d512:	xlat   BYTE PTR cs:[ebx]
  40d514:	mov    ecx,ebp
  40d516:	xchg   esi,eax
  40d517:	sahf   
  40d518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d519:	pop    ebp
  40d51a:	pushf  
  40d51b:	dec    ebx
  40d51c:	push   edx
  40d51d:	cs or  al,0xd8
  40d520:	push   cs
  40d521:	outs   dx,BYTE PTR ds:[esi]
  40d522:	popa   
  40d523:	pushf  
  40d524:	add    BYTE PTR [eax+0x11c49a1a],0xc6
  40d52b:	mov    edi,0xa1a47429
  40d530:	add    al,0xab
  40d532:	sbb    bl,BYTE PTR [eax-0x66]
  40d535:	push   cs
  40d536:	xlat   BYTE PTR ds:[ebx]
  40d537:	cmp    eax,0x5603d392
  40d53c:	test   BYTE PTR [ebp+0x7c],ah
  40d53f:	pop    edx
  40d540:	fadd   QWORD PTR fs:[ebx+ebx*1-0x70c507b7]
  40d548:	in     eax,0x40
  40d54a:	call   0x242c0b1a
  40d54f:	jb     0x40d4fe
  40d551:	pusha  
  40d552:	or     DWORD PTR [edx],edi
  40d554:	add    BYTE PTR [edx-0x6ce31028],0x95
  40d55b:	push   ds
  40d55c:	xor    ch,dl
  40d55e:	push   eax
  40d55f:	loopne 0x40d543
  40d561:	inc    edx
  40d562:	ret    0xec3
  40d565:	mov    ah,0xad
  40d567:	dec    edx
  40d568:	jbe    0x40d583
  40d56a:	mov    ah,0xbb
  40d56c:	jb     0x40d548
  40d56e:	(bad)  
  40d56f:	push   ss
  40d570:	stos   BYTE PTR es:[edi],al
  40d571:	xor    eax,0x75654ab3
  40d576:	adc    edx,DWORD PTR [edi]
  40d578:	fdivr  QWORD PTR [ebx]
  40d57a:	std    
  40d57b:	xor    eax,0xe7c7c6e9
  40d580:	rcl    DWORD PTR [edi+eiz*4-0x1ae8eb82],cl
  40d587:	mov    WORD PTR [ebx-0x45e57aad],?
  40d58d:	fsubr  QWORD PTR ds:0x61874ebe
  40d593:	test   eax,0xf932d1a2
  40d598:	outs   dx,BYTE PTR ds:[esi]
  40d599:	mov    ebp,0xb5233043
  40d59e:	fldenv [esi]
  40d5a0:	shl    DWORD PTR [edi-0x743f9649],cl
  40d5a6:	dec    ebp
  40d5a7:	loopne 0x40d5dc
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	popf   
  40d5bc:	outs   dx,BYTE PTR ds:[esi]
  40d5bd:	mov    ecx,0x18dce77c
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    BYTE PTR [edi-0x7c],ch
  40d5c9:	mov    fs,eax
  40d5cb:	adc    DWORD PTR [ecx-0x5f97f263],eax
  40d5d1:	pop    es
  40d5d2:	xor    ebp,0x85bd1cb2
  40d5d8:	ds jae 0x40d57e
  40d5db:	ins    WORD PTR es:[edi],dx
  40d5dd:	iret   
  40d5de:	and    eax,0xae5d37eb
  40d5e3:	push   0xfffffff2
  40d5e5:	outs   dx,DWORD PTR ds:[esi]
  40d5e6:	scas   eax,DWORD PTR es:[edi]
  40d5e7:	ret    
  40d5e8:	pop    edx
  40d5e9:	jmp    0x40d612
  40d5eb:	jb     0x40d5c0
  40d5ed:	test   al,0x76
  40d5ef:	mov    bh,0xa3
  40d5f1:	addr16 pop ecx
  40d5f3:	xchg   ecx,eax
  40d5f4:	stos   DWORD PTR es:[edi],eax
  40d5f5:	iret   
  40d5f6:	inc    esi
  40d5f7:	test   edi,esp
  40d5f9:	inc    al
  40d5fb:	adc    eax,0x9f9839d7
  40d600:	mov    dl,0xd7
  40d602:	test   BYTE PTR [edi],al
  40d604:	mov    ebp,0xec5745a7
  40d609:	xchg   esp,eax
  40d60a:	imul   al
  40d60c:	mov    ebp,0x264c8538
  40d611:	aad    0xe7
  40d613:	mov    edi,0x8958be32
  40d618:	jne    0x40d63e
  40d61a:	ret    0x33f1
  40d61d:	add    al,0x78
  40d61f:	push   0xffffff8b
  40d621:	pop    ds
  40d622:	scas   eax,DWORD PTR es:[edi]
  40d623:	lock aaa 
  40d625:	or     DWORD PTR [eax-0x49dbac93],ecx
  40d62b:	push   es
  40d62c:	add    ecx,edi
  40d62e:	and    al,0x28
  40d631:	cmp    BYTE PTR [edx+ecx*1+0x13],0x23
  40d636:	pop    esi
  40d637:	cmp    al,0xa2
  40d639:	ret    
  40d63a:	sti    
  40d63b:	mov    edi,0x2ce775a9
  40d640:	pop    esi
  40d641:	dec    esp
  40d642:	imul   ecx,ebp,0xfffffffb
  40d645:	jae    0x40d64c
  40d647:	add    dh,BYTE PTR [esi+esi*1-0x25]
  40d64b:	cmp    esp,ebx
  40d64d:	icebp  
  40d64e:	mov    ch,bl
  40d650:	dec    ecx
  40d651:	push   esi
  40d652:	lds    esi,FWORD PTR [ecx-0x2b4b84bf]
  40d658:	mov    esi,0xd3a505b5
  40d65d:	or     BYTE PTR [ecx+0x16],0x32
  40d661:	jne    0x40d661
  40d663:	dec    esi
  40d664:	push   ss
  40d665:	mov    esi,0x268dd290
  40d66a:	pushf  
  40d66b:	or     esi,DWORD PTR [ebx+0x55ffce63]
  40d671:	out    dx,al
  40d672:	xchg   DWORD PTR [eax+0x41bb07a3],ecx
  40d678:	add    dl,BYTE PTR [ebx]
  40d67a:	dec    edi
  40d67b:	mov    bh,0xa7
  40d67d:	pop    DWORD PTR [ebx+0x47]
  40d680:	mov    bl,BYTE PTR [edi-0x4e]
  40d683:	sub    eax,edi
  40d685:	xor    DWORD PTR [esi+0x3fd86016],eax
  40d68b:	shl    dh,1
  40d68d:	arpl   WORD PTR [edi-0x3a],sp
  40d690:	jmp    0x40d67a
  40d692:	mov    ch,BYTE PTR [ebx+0x66c2f385]
  40d698:	xchg   dh,bl
  40d69a:	cmp    BYTE PTR [edi-0x79],ah
  40d69d:	adc    bl,BYTE PTR [ebx-0x20]
  40d6a0:	pop    eax
  40d6a1:	pop    edi
  40d6a2:	xor    al,0x18
  40d6a4:	rol    BYTE PTR [ecx+0x40],cl
  40d6a7:	adc    BYTE PTR [esi+0x77],0xe
  40d6ab:	enter  0x11ff,0x4f
  40d6af:	mov    ecx,0xb9347a5c
  40d6b4:	mov    al,ds:0xed6f61c8
  40d6b9:	out    dx,al
  40d6ba:	sub    ebp,DWORD PTR [eax]
  40d6bc:	out    dx,eax
  40d6bd:	nop    DWORD PTR [esi-0x3a]
  40d6c1:	or     ebx,ecx
  40d6c3:	or     BYTE PTR [ecx+0x64],0xd8
  40d6c7:	int    0x3c
  40d6c9:	add    dl,ch
  40d6cb:	mov    eax,0xbb05b213
  40d6d0:	xlat   BYTE PTR ds:[ebx]
  40d6d1:	int    0x84
  40d6d3:	xchg   ecx,eax
  40d6d4:	pop    ebp
  40d6d5:	clc    
  40d6d6:	and    DWORD PTR [edx+0x72],0x9176c5c6
  40d6dd:	lods   al,BYTE PTR ds:[esi]
  40d6de:	ins    BYTE PTR es:[edi],dx
  40d6df:	mov    ds:0x43f7d6de,eax
  40d6e4:	dec    ebp
  40d6e5:	lea    ecx,ds:0x86caa84
  40d6eb:	out    0xf0,al
  40d6ed:	fdiv   st,st(4)
  40d6ef:	clc    
  40d6f0:	clc    
  40d6f1:	rcr    DWORD PTR [ecx],cl
  40d6f3:	or     ebx,ebx
  40d6f5:	fnstcw WORD PTR ds:0xe0610b6b
  40d6fb:	sub    eax,0x53c9e8b6
  40d700:	retf   0x65c2
  40d703:	and    ah,bl
  40d705:	stos   DWORD PTR es:[edi],eax
  40d706:	or     DWORD PTR [edi],ebx
  40d708:	add    al,0xf5
  40d70a:	mov    eax,0x618d9660
  40d70f:	jns    0x40d753
  40d711:	sahf   
  40d712:	fldcw  WORD PTR [edx+0x35]
  40d715:	hlt    
  40d716:	xor    cl,ah
  40d718:	xor    BYTE PTR [esi],0xf
  40d71b:	test   al,0xef
  40d71d:	call   FWORD PTR [ecx+0x3fdc9674]
  40d723:	in     al,0x2f
  40d725:	and    DWORD PTR [edx],0xffffffb2
  40d728:	pop    edi
  40d729:	imul   eax,DWORD PTR [edi+edi*8],0xffffff92
  40d72d:	fild   WORD PTR [edx]
  40d72f:	and    al,0x99
  40d731:	pop    ss
  40d732:	push   edi
  40d733:	cmp    edx,ebx
  40d735:	mov    ch,0xdb
  40d737:	cwde   
  40d738:	es je  0x40d6bd
  40d73b:	jne    0x40d73f
  40d73d:	jg     0x40d740
  40d73f:	test   bh,dh
  40d741:	cmp    esp,edx
  40d743:	ins    DWORD PTR es:[edi],dx
  40d744:	push   ebp
  40d745:	mov    dl,0x83
  40d747:	nop
  40d748:	ror    BYTE PTR [ecx-0x31a51e73],0xb2
  40d74f:	push   0xb845f4e9
  40d754:	jbe    0x40d70c
  40d756:	pop    edi
  40d757:	push   ds
  40d758:	shld   DWORD PTR [esi],eax,0x15
  40d75c:	add    ebp,DWORD PTR [edx]
  40d75e:	sbb    BYTE PTR [ebx-0x7c],al
  40d761:	ja     0x40d6e9
  40d763:	inc    esp
  40d764:	repnz push ebp
  40d766:	(bad)  
  40d768:	or     eax,0x9dd5b03c
  40d76d:	popa   
  40d76e:	add    al,0xb8
  40d770:	mov    ecx,0x6abe9724
  40d775:	jecxz  0x40d7e2
  40d777:	rcl    DWORD PTR [edx+0x6237b23a],1
  40d77d:	scas   al,BYTE PTR es:[edi]
  40d77e:	sub    eax,eax
  40d780:	pushf  
  40d781:	jl     0x40d751
  40d783:	inc    ebx
  40d784:	push   ebp
  40d785:	jns    0x40d788
  40d787:	push   ecx
  40d788:	sbb    al,0x5c
  40d78a:	cmp    eax,DWORD PTR [ecx-0x448bf1a0]
  40d790:	imul   esp,esp,0xc6992ee1
  40d796:	xchg   ebx,eax
  40d797:	loopne 0x40d749
  40d799:	and    al,0xbc
  40d79b:	pop    ds
  40d79c:	jge    0x40d7bf
  40d79e:	add    dl,BYTE PTR [edx-0x62ceb1f]
  40d7a4:	pop    ss
  40d7a5:	rcl    esi,0x5f
  40d7a8:	out    0x44,al
  40d7aa:	cmp    al,0xcf
  40d7ac:	loopne 0x40d757
  40d7ae:	sbb    esi,DWORD PTR [eax]
  40d7b0:	add    al,0xc3
  40d7b2:	lock pop eax
  40d7b4:	retf   0x6b3a
  40d7b7:	push   esi
  40d7b8:	xor    eax,DWORD PTR [ecx]
  40d7ba:	daa    
  40d7bb:	jecxz  0x40d802
  40d7bd:	cdq    
  40d7be:	into   
  40d7bf:	inc    eax
  40d7c0:	sub    esi,DWORD PTR [esi+edi*2]
  40d7c3:	bnd jne 0x40d79c
  40d7c6:	lods   eax,DWORD PTR ds:[esi]
  40d7c7:	adc    bh,bl
  40d7c9:	dec    eax
  40d7ca:	jmp    0xd679c741
  40d7cf:	adc    DWORD PTR [edi+0x2d],ebx
  40d7d2:	stc    
  40d7d3:	loopne 0x40d79a
  40d7d5:	sbb    DWORD PTR [edi-0x5a80c5aa],eax
  40d7db:	fxch   st(6)
  40d7dd:	mov    ds:0xe34c1884,al
  40d7e2:	add    DWORD PTR [eax+0x23692b0e],esi
  40d7e8:	cmp    eax,0xbbbce483
  40d7ed:	lods   eax,DWORD PTR ds:[esi]
  40d7ee:	jl     0x40d778
  40d7f0:	mov    al,0x4
  40d7f2:	dec    ebp
  40d7f3:	push   edx
  40d7f4:	and    al,0x88
  40d7f6:	ss inc esi
  40d7f8:	sub    eax,0xfc512a2b
  40d7fd:	push   ebp
  40d7fe:	mov    bl,0xe4
  40d800:	mov    fs,esi
  40d802:	shr    DWORD PTR [esi+0x2c],cl
  40d805:	dec    eax
  40d806:	sub    ch,al
  40d808:	xchg   ebx,eax
  40d809:	xor    edx,DWORD PTR [ebx]
  40d80b:	int    0xfa
  40d80d:	ja     0x40d81a
  40d80f:	sub    bh,BYTE PTR [ebp+ecx*2-0x5]
  40d813:	pop    edi
  40d814:	push   edx
  40d815:	push   eax
  40d816:	sbb    al,0x2
  40d818:	sub    DWORD PTR [ebx+0x85e32f6],ebp
  40d81e:	mov    edx,0xf21d74e2
  40d823:	gs push ss
  40d825:	mov    ds:0xdd0441aa,eax
  40d82a:	scas   al,BYTE PTR es:[edi]
  40d82b:	test   al,0x4c
  40d82d:	loop   0x40d801
  40d82f:	dec    ecx
  40d830:	adc    ebx,ebp
  40d832:	std    
  40d833:	popa   
  40d834:	lea    esp,[edi]
  40d836:	jp     0x40d89a
  40d838:	xor    al,0xd0
  40d83a:	mov    eax,0xc19cc53e
  40d83f:	adc    cl,BYTE PTR [edx+edx*2-0x5f890295]
  40d846:	stc    
  40d847:	pop    edx
  40d848:	rcl    BYTE PTR [edx-0xfe79f3],0xed
  40d84f:	cli    
  40d850:	out    dx,al
  40d851:	aad    0xb9
  40d853:	stc    
  40d854:	std    
  40d855:	xchg   DWORD PTR [ecx+ecx*1],esi
  40d858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d859:	and    ax,0xd972
  40d85d:	cmp    eax,0x1698e9d2
  40d862:	test   DWORD PTR [edi+0x31],edi
  40d865:	or     al,0x3a
  40d867:	and    DWORD PTR [ebp+0x5a],ebp
  40d86a:	cdq    
  40d86b:	mov    ebp,0xb5bf83e7
  40d870:	dec    ebp
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xccf1ebc
  40d894:	jle    0x40d836
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [edi+0x6],ah
  40d89f:	(bad)  
  40d8a1:	ror    DWORD PTR [esi],cl
  40d8a3:	(bad)  
  40d8a4:	jno    0x40d8d6
  40d8a6:	inc    ebp
  40d8a7:	adc    DWORD PTR gs:[edi-0x4],ecx
  40d8ab:	js     0x40d8a5
  40d8ad:	dec    ecx
  40d8ae:	or     eax,0xfc2df386
  40d8b3:	or     esi,DWORD PTR [ebp-0x77]
  40d8b6:	cs xor eax,0x702ccfab
  40d8bc:	sub    BYTE PTR [esi],al
  40d8be:	or     eax,0xbc4a4f1d
  40d8c3:	jbe    0x40d8ed
  40d8c5:	(bad)
  40d8c8:	mov    dh,0x5e
  40d8ca:	pusha  
  40d8cb:	ret    0x9472
  40d8ce:	mov    esp,0xb8f1cdc4
  40d8d3:	sub    DWORD PTR [esi-0x6e],0x44
  40d8d7:	mov    dh,BYTE PTR [ebx-0x61]
  40d8da:	jge    0x40d89f
  40d8dc:	popf   
  40d8dd:	int    0x76
  40d8df:	stc    
  40d8e0:	sub    edx,ebp
  40d8e2:	mov    WORD PTR [edi],ds
  40d8e4:	dec    esp
  40d8e5:	and    DWORD PTR [edi-0x4e],esi
  40d8e8:	call   0x2eb5:0xb05123a7
  40d8ef:	daa    
  40d8f0:	iret   
  40d8f1:	aas    
  40d8f2:	mov    edi,0xcbdd88d
  40d8f7:	fldcw  WORD PTR [eax]
  40d8f9:	inc    edx
  40d8fa:	add    eax,0x4c9566b3
  40d8ff:	cs pop ebp
  40d901:	loop   0x40d8ce
  40d903:	mov    ebp,0xed2c35c9
  40d908:	mov    esi,0xa3bd03f5
  40d90d:	les    ebx,FWORD PTR [esi+ebp*1]
  40d910:	out    dx,al
  40d911:	call   0x31b3:0x4acfb5dd
  40d918:	jb     0x40d89f
  40d91a:	and    DWORD PTR [eax-0x41],ecx
  40d91d:	dec    ecx
  40d91e:	pop    eax
  40d91f:	lds    edi,FWORD PTR [ebx+0x5]
  40d922:	push   esp
  40d923:	mov    esp,DWORD PTR [ecx-0x58]
  40d926:	push   esp
  40d927:	idiv   DWORD PTR [edx+0x43]
  40d92a:	(bad)  
  40d92b:	jecxz  0x40d8b3
  40d92d:	stos   DWORD PTR es:[edi],eax
  40d92e:	dec    ecx
  40d92f:	mov    DWORD PTR [esi-0x301b76da],eax
  40d935:	sahf   
  40d936:	push   edi
  40d937:	xchg   ebp,eax
  40d938:	cmp    edx,DWORD PTR [edi]
  40d93a:	adc    dl,BYTE PTR [ecx+0x25]
  40d93d:	and    eax,0x55a874cc
  40d942:	outs   dx,DWORD PTR ds:[esi]
  40d943:	je     0x40d92f
  40d945:	out    dx,al
  40d946:	jae    0x40d8d5
  40d948:	dec    ebp
  40d949:	and    BYTE PTR [ebx-0x41d885d1],al
  40d94f:	cdq    
  40d950:	xchg   esi,eax
  40d951:	pop    es
  40d952:	mul    BYTE PTR [ebx]
  40d954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d955:	stos   BYTE PTR es:[edi],al
  40d956:	je     0x40d935
  40d958:	sub    eax,0xdbba6120
  40d95d:	jns    0x40d957
  40d95f:	pop    ebx
  40d960:	pop    esi
  40d961:	bound  edi,QWORD PTR [ebp-0x5]
  40d964:	call   0x81f691bf
  40d969:	or     eax,DWORD PTR ds:0x9560f973
  40d96f:	retf   
  40d970:	pop    eax
  40d971:	mov    ebx,0x51bebcde
  40d976:	pop    ds
  40d977:	jle    0x40d918
  40d979:	and    DWORD PTR [edx+0x2e4e7a9c],eax
  40d97f:	cwde   
  40d980:	shl    DWORD PTR [ebx-0x13cce3a7],1
  40d986:	cmp    BYTE PTR [ebx+0x52b4d93f],ch
  40d98c:	pop    esp
  40d98d:	jns    0x40d959
  40d98f:	xchg   BYTE PTR ds:0xce582cdc,ah
  40d995:	mov    dl,0x6b
  40d997:	nop
  40d998:	pop    edx
  40d999:	pop    edi
  40d99a:	dec    ecx
  40d99b:	add    eax,0xfad39c16
  40d9a0:	retf   0x185d
  40d9a3:	in     al,dx
  40d9a4:	and    eax,0x7a1408f0
  40d9a9:	jb     0x40d959
  40d9ab:	loope  0x40d98c
  40d9ad:	imul   ebp,DWORD PTR [eax-0x61],0x15
  40d9b1:	xchg   edi,eax
  40d9b2:	cli    
  40d9b3:	dec    esi
  40d9b4:	jmp    0x40d9e0
  40d9b6:	jno    0x40d9ef
  40d9b8:	mov    al,ds:0xe34c991d
  40d9bd:	sub    dl,dh
  40d9bf:	outs   dx,DWORD PTR ds:[esi]
  40d9c0:	jo     0x40d97b
  40d9c2:	fiadd  WORD PTR [esp+esi*2-0x3a]
  40d9c6:	hlt    
  40d9c7:	cld    
  40d9c8:	ret    
  40d9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ca:	mov    ebp,0x8e67383b
  40d9cf:	cmc    
  40d9d0:	test   BYTE PTR [ebp+0x40d284af],ah
  40d9d6:	dec    esi
  40d9d7:	icebp  
  40d9d8:	fild   WORD PTR [edi+0x3bdead7c]
  40d9de:	pusha  
  40d9df:	mov    dh,0x8b
  40d9e1:	jns    0x40d9e2
  40d9e3:	mov    edx,0x3c182d70
  40d9e8:	in     eax,0xc3
  40d9ea:	add    DWORD PTR [edi+0x63],eax
  40d9ed:	aam    0xc0
  40d9ef:	and    bl,BYTE PTR [edx+esi*1]
  40d9f2:	mov    al,BYTE PTR [edi+0x27f6f121]
  40d9f8:	and    bl,BYTE PTR [edi-0x46]
  40d9fb:	ret    
  40d9fc:	out    dx,al
  40d9fd:	add    dh,BYTE PTR [edx-0x67]
  40da00:	test   ebx,esi
  40da02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da03:	xchg   BYTE PTR [ebp+ebp*2-0x3d],bh
  40da07:	mov    ebx,0x549a3997
  40da0c:	xor    al,0xea
  40da0e:	out    dx,eax
  40da0f:	sbb    bl,al
  40da11:	daa    
  40da12:	retf   0xc90a
  40da15:	out    dx,al
  40da16:	out    0xa5,al
  40da18:	lods   al,BYTE PTR ds:[esi]
  40da19:	cmp    eax,0xe773cb46
  40da1e:	out    0x20,eax
  40da20:	dec    edi
  40da21:	sbb    DWORD PTR ss:[ebp+eiz*1+0x30c7d8bb],ebx
  40da29:	shl    BYTE PTR [edi+0x45],cl
  40da2c:	pop    esp
  40da2d:	dec    ebx
  40da2e:	mov    dl,0x3d
  40da30:	inc    edx
  40da31:	add    eax,0xdc761f48
  40da36:	shr    DWORD PTR ds:0x49034e5a,cl
  40da3c:	iret   
  40da3d:	jge    0x40da18
  40da3f:	ror    edx,1
  40da41:	retf   
  40da42:	cwd    
  40da44:	jp     0x40da5b
  40da46:	loope  0x40da93
  40da48:	hlt    
  40da49:	in     al,dx
  40da4a:	or     BYTE PTR [ebp+0x12c8437d],dh
  40da50:	add    ebx,edi
  40da52:	cmp    bl,BYTE PTR [edx-0x79]
  40da55:	test   al,0x3b
  40da57:	inc    esp
  40da58:	pop    esp
  40da59:	int    0xb0
  40da5b:	sbb    eax,0xeca1d314
  40da60:	mov    dl,0xd4
  40da62:	sub    ecx,eax
  40da64:	sar    BYTE PTR [edx+0x1c],cl
  40da67:	mov    eax,ds:0x5ad9035d
  40da6c:	xlat   BYTE PTR ds:[ebx]
  40da6d:	mov    al,ds:0x3cf1a6e5
  40da72:	(bad)  
  40da73:	xchg   ecx,eax
  40da74:	loopne 0x40dabe
  40da76:	shr    DWORD PTR [esi+0x2a4514fc],0x37
  40da7d:	mov    bh,0xe
  40da7f:	cwde   
  40da80:	push   eax
  40da81:	xchg   ebx,eax
  40da82:	dec    esp
  40da83:	stos   BYTE PTR es:[edi],al
  40da84:	js     0x40da34
  40da86:	rol    BYTE PTR [eax],1
  40da88:	and    bl,ch
  40da8a:	push   cs
  40da8b:	mov    dh,0xca
  40da8d:	aaa    
  40da8e:	or     al,0x0
  40da90:	rcr    DWORD PTR [eax],0x88
  40da93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da94:	dec    eax
  40da95:	mov    WORD PTR [ebx+eiz*2-0x6232b414],cs
  40da9c:	or     eax,0xb5eb0d82
  40daa1:	fisttp QWORD PTR [eax-0x30587334]
  40daa7:	(bad)  [eax+0x6d]
  40daaa:	fistp  QWORD PTR [ebx+0x51fbe130]
  40dab0:	inc    ecx
  40dab1:	fadd   QWORD PTR [edi]
  40dab3:	inc    edi
  40dab4:	cld    
  40dab5:	lahf   
  40dab6:	clc    
  40dab7:	dec    ebx
  40dab8:	jg     0x40da4a
  40daba:	jmp    DWORD PTR [eax-0x14]
  40dabd:	and    ecx,DWORD PTR [esp+eiz*2+0x17db276b]
  40dac4:	sbb    BYTE PTR [edi],cl
  40dac6:	pop    esp
  40dac7:	sub    edi,DWORD PTR ds:0x7a9f3757
  40dacd:	xchg   ebx,eax
  40dace:	jmp    0x865a:0xda96fbec
  40dad5:	and    dl,BYTE PTR [edx+edx*2+0x22ec73e3]
  40dadc:	dec    edi
  40dadd:	repnz (bad) 
  40dadf:	mov    esi,0x818e0de5
  40dae4:	mov    eax,ds:0xc8a4855
  40dae9:	fdivp  st(0),st
  40daeb:	aas    
  40daec:	mov    ds:0x5784add6,eax
  40daf1:	in     eax,0x26
  40daf3:	push   edx
  40daf4:	xor    BYTE PTR [edx+ecx*8],bl
  40daf7:	xor    al,0xf1
  40daf9:	(bad)  
  40dafb:	sahf   
  40dafc:	xchg   ebx,eax
  40dafd:	xlat   BYTE PTR ds:[ebx]
  40dafe:	gs test al,0xc1
  40db01:	cmc    
  40db02:	sub    DWORD PTR ds:0xd25f4d18,ebp
  40db08:	pop    ebx
  40db09:	das    
  40db0a:	add    al,0x42
  40db0c:	cmp    DWORD PTR [eax+esi*2+0x37],edi
  40db10:	cwde   
  40db11:	jmp    0x30392e39
  40db16:	test   DWORD PTR [eax],ebp
  40db18:	add    ebp,ecx
  40db1a:	push   esi
  40db1b:	inc    edx
  40db1c:	adc    BYTE PTR [edi+0x69],cl
  40db1f:	jmp    0x40dabb
  40db21:	(bad)
  40db25:	add    DWORD PTR [eax],esi
  40db27:	mov    esi,0x265b6cab
  40db2c:	clc    
  40db2d:	pushf  
  40db2e:	scas   eax,DWORD PTR es:[edi]
  40db2f:	and    dh,BYTE PTR [ebp+0x60979ca7]
  40db35:	idiv   DWORD PTR [ecx+ebp*1+0x62]
  40db39:	sbb    DWORD PTR [edi+0x12184576],0x520c3581
  40db43:	sti    
  40db44:	mov    eax,DWORD PTR [ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40db7e
  40db97:	xor    BYTE PTR [ecx],0xbe
  40db9a:	pop    ebx
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [eax-0x7a099144],cl
  40dba7:	stos   DWORD PTR es:[edi],eax
  40dba8:	in     al,0x2e
  40dbaa:	ins    BYTE PTR es:[edi],dx
  40dbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbac:	and    BYTE PTR [ebx-0x39824124],bl
  40dbb2:	add    BYTE PTR [eax+esi*4+0x255efd1],al
  40dbb9:	dec    edi
  40dbba:	jo     0x40db87
  40dbbc:	mov    DWORD PTR [edx],edi
  40dbbe:	popf   
  40dbbf:	popf   
  40dbc0:	and    al,0xaf
  40dbc2:	inc    esi
  40dbc3:	iret   
  40dbc4:	sbb    BYTE PTR [ecx+0x3ea1d477],bl
  40dbca:	xor    esp,DWORD PTR [eax]
  40dbcc:	out    dx,eax
  40dbcd:	loop   0x40dc22
  40dbcf:	cwde   
  40dbd0:	cli    
  40dbd1:	(bad)  
  40dbd3:	sub    dl,BYTE PTR [ecx+0x20]
  40dbd6:	es mov ah,0x20
  40dbd9:	push   ss
  40dbda:	jle    0x40dc52
  40dbdc:	sub    eax,DWORD PTR ds:0xd2ed0db0
  40dbe2:	sbb    DWORD PTR [eax],0xff9bbaff
  40dbe8:	mov    bl,0x9a
  40dbea:	push   esp
  40dbeb:	xchg   esi,eax
  40dbec:	sahf   
  40dbed:	hlt    
  40dbee:	in     eax,0x41
  40dbf0:	mov    DWORD PTR [edx+0x38637600],ecx
  40dbf6:	add    ebp,esp
  40dbf8:	fnstcw WORD PTR cs:[eax]
  40dbfb:	ds mov esp,0x35bcc150
  40dc01:	fcomp  DWORD PTR [eax]
  40dc03:	dec    esp
  40dc04:	cs pusha 
  40dc06:	add    esi,ecx
  40dc08:	xor    eax,0x93372846
  40dc0d:	popa   
  40dc0e:	mov    BYTE PTR [edi+0x1cd5b724],bh
  40dc14:	jecxz  0x40dba5
  40dc16:	cld    
  40dc17:	push   edx
  40dc18:	(bad)  
  40dc19:	clc    
  40dc1a:	js     0x40dc5e
  40dc1c:	or     bl,bh
  40dc1e:	dec    ecx
  40dc1f:	cli    
  40dc20:	push   0x57f2b160
  40dc25:	rcl    BYTE PTR [ecx+ebx*8+0x59425948],1
  40dc2c:	mov    ecx,DWORD PTR [ebp-0x1bc58ad8]
  40dc32:	test   eax,0x3968f229
  40dc37:	data16 mov gs,WORD PTR [edx+0x7c]
  40dc3b:	mov    ebx,0x4b672169
  40dc40:	adc    ecx,DWORD PTR [edx+0xb11d807]
  40dc46:	pushf  
  40dc47:	jmp    0x66b0:0x28e0e784
  40dc4e:	fs pop ss
  40dc50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc51:	(bad)  [ebx]
  40dc53:	xchg   ebx,eax
  40dc54:	or     BYTE PTR [eax],ah
  40dc56:	mov    ah,0xf7
  40dc58:	adc    al,0x53
  40dc5a:	mov    dh,0x5c
  40dc5c:	mov    ebp,0xf3c609fb
  40dc61:	icebp  
  40dc62:	ins    BYTE PTR es:[edi],dx
  40dc63:	and    al,0xb0
  40dc65:	xchg   ebx,eax
  40dc66:	jae    0x40dcb1
  40dc68:	mov    ds:0xf3e48071,eax
  40dc6d:	add    eax,0x9beed5fd
  40dc72:	or     BYTE PTR [ebp+0x54258122],al
  40dc78:	cmp    BYTE PTR [esi-0x1f],ch
  40dc7b:	int3   
  40dc7c:	(bad)  [edi+0x4b587933]
  40dc82:	jecxz  0x40dc87
  40dc84:	mov    BYTE PTR [eax],dl
  40dc86:	(bad)  
  40dc87:	mov    DWORD PTR [edx-0x5ddbf842],ecx
  40dc8d:	into   
  40dc8e:	scas   al,BYTE PTR es:[edi]
  40dc8f:	cmp    dh,0x40
  40dc92:	push   edx
  40dc93:	inc    ecx
  40dc94:	and    ah,BYTE PTR [edx]
  40dc96:	fwait
  40dc97:	or     ebx,DWORD PTR [ebp+0x3]
  40dc9a:	inc    esp
  40dc9b:	cmp    DWORD PTR [ebx],eax
  40dc9d:	cdq    
  40dc9e:	popf   
  40dc9f:	or     BYTE PTR [esi+0x95cdae5],bh
  40dca5:	fsubp  st(4),st
  40dca7:	mov    gs:0x2cf6890f,al
  40dcad:	retf   
  40dcae:	push   ebp
  40dcaf:	inc    ebx
  40dcb0:	aaa    
  40dcb1:	push   cs
  40dcb2:	adc    al,0x78
  40dcb4:	outs   dx,DWORD PTR ds:[esi]
  40dcb5:	outs   dx,DWORD PTR ds:[esi]
  40dcb6:	addr16 inc ecx
  40dcb8:	jns    0x40dc60
  40dcba:	mov    al,ds:0xb7113902
  40dcbf:	inc    edx
  40dcc0:	inc    edi
  40dcc1:	push   edx
  40dcc2:	test   BYTE PTR [edi+0x33dc69dc],0xb
  40dcc9:	push   esp
  40dcca:	push   ebp
  40dccb:	dec    ebx
  40dccc:	aam    0x84
  40dcce:	mov    ah,0x18
  40dcd0:	xchg   DWORD PTR [edx],edx
  40dcd2:	ds push 0x3c7e2fe1
  40dcd8:	pop    es
  40dcd9:	xor    eax,0x2d7e8cd
  40dcde:	xchg   ebx,eax
  40dcdf:	nop
  40dce0:	or     al,0x90
  40dce2:	add    DWORD PTR [ecx],eax
  40dce4:	test   DWORD PTR [esi+0x62081f9a],eax
  40dcea:	xchg   edi,eax
  40dceb:	ret    0xc499
  40dcee:	jl     0x40dca3
  40dcf0:	jmp    0x8b6b:0x5a2eee6d
  40dcf7:	jge    0x40dd3c
  40dcf9:	call   0xf2f8:0xfefb8b10
  40dd00:	jl     0x40dcaf
  40dd02:	adc    eax,0xa1743685
  40dd07:	addr16 or eax,0xb1309095
  40dd0d:	mov    dl,0x59
  40dd0f:	add    ebp,edx
  40dd11:	mov    dh,0x69
  40dd13:	push   ss
  40dd14:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40dd16:	mov    cl,0xff
  40dd18:	and    al,0x1
  40dd1a:	fist   WORD PTR [edi]
  40dd1c:	mov    dl,0xfe
  40dd1e:	ss inc esp
  40dd20:	mov    dh,0xd5
  40dd22:	push   eax
  40dd23:	leave  
  40dd24:	pop    ss
  40dd25:	ins    BYTE PTR es:[edi],dx
  40dd26:	mov    ch,0x2e
  40dd28:	dec    ebp
  40dd29:	xor    BYTE PTR [esi-0x52fd8ad6],cl
  40dd2f:	push   ss
  40dd30:	lods   eax,DWORD PTR ds:[esi]
  40dd31:	aaa    
  40dd32:	ss or  al,0x3b
  40dd35:	pop    eax
  40dd36:	jno    0x40dcc1
  40dd38:	lods   al,BYTE PTR ds:[esi]
  40dd39:	cs fwait
  40dd3b:	out    dx,al
  40dd3c:	lods   al,BYTE PTR ds:[esi]
  40dd3d:	aaa    
  40dd3e:	mov    al,ds:0xada88f8a
  40dd43:	(bad)  
  40dd44:	mov    ebp,DWORD PTR [eax]
  40dd46:	push   esi
  40dd47:	xchg   ch,dh
  40dd49:	mov    al,ds:0x296a493c
  40dd4e:	xchg   edx,eax
  40dd4f:	mov    WORD PTR [esi-0x5b],?
  40dd52:	jge    0x40dd90
  40dd54:	mov    dl,0x41
  40dd56:	mov    ch,0x42
  40dd58:	sahf   
  40dd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd5a:	mov    al,0x3c
  40dd5c:	mov    eax,ds:0xa845cdca
  40dd61:	sbb    DWORD PTR [edi-0x15],edi
  40dd64:	repz pop ebx
  40dd66:	scas   eax,DWORD PTR es:[edi]
  40dd67:	jl     0x40dd6f
  40dd69:	mov    edi,0xd0b3dc31
  40dd6e:	push   cs
  40dd6f:	sub    DWORD PTR [edi],0x4f20a734
  40dd75:	outs   dx,BYTE PTR ds:[esi]
  40dd76:	test   DWORD PTR ds:0xde8b3b97,ebx
  40dd7c:	or     DWORD PTR [edi],ebp
  40dd7e:	or     al,0xfc
  40dd80:	add    BYTE PTR [esi],dh
  40dd82:	lea    ebx,[edi+0x58]
  40dd85:	adc    BYTE PTR [edi+0x2c23cfce],ch
  40dd8b:	xchg   esp,eax
  40dd8c:	mov    esi,0x849abc0f
  40dd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd92:	adc    esp,DWORD PTR [edi-0x76]
  40dd95:	mov    esi,0xd751232d
  40dd9a:	xchg   ecx,eax
  40dd9b:	sbb    ecx,DWORD PTR [ecx+ebp*4-0x4ca7ed46]
  40dda2:	es push edi
  40dda4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda5:	in     eax,0xf8
  40dda7:	clc    
  40dda8:	jecxz  0x40ddb6
  40ddaa:	mov    ds:0x425a7616,al
  40ddaf:	imul   ecx,DWORD PTR [edx-0x7f],0xc7ae086c
  40ddb6:	rol    DWORD PTR [esi],1
  40ddb8:	dec    edx
  40ddb9:	call   0xb46:0xd9f9441d
  40ddc0:	mov    al,ds:0x38537eb4
  40ddc5:	mov    ch,0x40
  40ddc7:	inc    ebp
  40ddc8:	mov    BYTE PTR [ebp+0x68],dl
  40ddcb:	mov    esp,0xb6a6d7a9
  40ddd0:	jmp    0x857e:0xbd9934e1
  40ddd7:	les    esi,FWORD PTR [edx+0x41]
  40ddda:	inc    ebp
  40dddb:	xor    eax,0x2921e2b0
  40dde0:	mov    BYTE PTR [ebx+0x320b5e5c],bl
  40dde6:	or     BYTE PTR es:0x10318738,dh
  40dded:	into   
  40ddee:	sub    bh,BYTE PTR [ecx]
  40ddf0:	jb     0x40ddc2
  40ddf2:	repz in al,0xe8
  40ddf5:	les    ebx,FWORD PTR [ecx]
  40ddf7:	les    ecx,FWORD PTR [ebp-0x34]
  40ddfa:	inc    ebp
  40ddfb:	outs   dx,DWORD PTR ds:[esi]
  40ddfc:	push   ecx
  40ddfd:	xor    al,dh
  40ddff:	retf   0x639f
  40de02:	inc    ebp
  40de03:	mov    esi,0xfbe97a9
  40de08:	mov    DWORD PTR [edi+0x5e],ebp
  40de0b:	sbb    ebx,eax
  40de0d:	dec    edx
  40de0e:	fistp  QWORD PTR [ebp+0x7a]
  40de11:	(bad)  
  40de12:	shr    BYTE PTR [esi],0x7f
  40de15:	mov    eax,0xc27d4091
  40de1a:	test   BYTE PTR [esi+0x36],bh
  40de1d:	inc    esp
  40de1e:	inc    edx
  40de1f:	int3   
  40de20:	mov    al,0x2b
  40de22:	shl    DWORD PTR [edx+0x7f36dc33],1
  40de28:	and    eax,DWORD PTR [edx+0x23]
  40de2b:	pop    ds
  40de2c:	lods   eax,DWORD PTR ds:[esi]
  40de2d:	mov    al,BYTE PTR ds:[eax]
  40de30:	mov    ebx,0xf0e7095
  40de35:	push   edx
  40de36:	std    
  40de37:	call   0xc83db3e0
  40de3c:	test   al,0x9f
  40de3e:	test   eax,0x3d36ce36
  40de43:	lock jns 0x40dea8
  40de46:	stos   DWORD PTR es:[edi],eax
  40de47:	jg     0x40de1f
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422568
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40def1
  40deca:	add    al,BYTE PTR [ebp+0x18cc147c]
  40ded0:	sbb    dl,dl
  40ded2:	adc    al,0x18
  40ded4:	sbb    BYTE PTR [edi+0x43debdb2],al
  40deda:	shr    dh,1
  40dedc:	fistp  WORD PTR [eax+0xf9d9d7d]
  40dee2:	and    BYTE PTR [ebx-0x322af261],0xe5
  40dee9:	and    ebx,DWORD PTR [eax]
  40deeb:	xor    BYTE PTR [edx],cl
  40deed:	or     BYTE PTR [ebp-0x37],ah
  40def0:	mov    eax,ds:0xec50d6b6
  40def5:	shl    BYTE PTR [eax+0x5c],1
  40def8:	push   0x14d9af62
  40defd:	xchg   ebp,eax
  40defe:	mov    dh,0xd0
  40df00:	xchg   esp,eax
  40df01:	test   eax,0xdd0561ca
  40df06:	inc    edx
  40df07:	test   al,0xac
  40df09:	es js  0x40ded0
  40df0c:	push   esi
  40df0d:	addr16 imul esp,ecx,0xa47ff40d
  40df14:	pop    ds
  40df15:	add    bh,BYTE PTR [ecx+0x5aa21e3d]
  40df1b:	cld    
  40df1c:	popa   
  40df1d:	push   edi
  40df1e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df20:	inc    esp
  40df21:	dec    ecx
  40df22:	pusha  
  40df23:	data16 (bad) [eax]
  40df26:	rol    ebp,1
  40df28:	fdivr  st(1),st
  40df2a:	add    DWORD PTR [ebp-0x69a5ab17],ecx
  40df30:	scas   al,BYTE PTR es:[edi]
  40df31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df32:	sbb    DWORD PTR [eax+0x15],edi
  40df35:	les    eax,FWORD PTR [esp+ebp*2+0x18484560]
  40df3c:	jne    0x40df25
  40df3e:	aas    
  40df3f:	stc    
  40df40:	pop    edi
  40df41:	push   ebx
  40df42:	xor    esi,ebp
  40df44:	lds    esi,FWORD PTR [ebx-0x6ff317d]
  40df4a:	enter  0x1c4d,0x98
  40df4e:	rep ins BYTE PTR es:[edi],dx
  40df50:	push   edx
  40df51:	imul   esi,DWORD PTR [edi+eax*2],0x4bc2ee83
  40df58:	out    0xa1,eax
  40df5a:	retf   
  40df5b:	icebp  
  40df5c:	ins    DWORD PTR es:[edi],dx
  40df5d:	push   esi
  40df5e:	sub    eax,0x108f086d
  40df63:	cmp    BYTE PTR [esi-0x5ed19055],ah
  40df69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df6a:	mov    esi,0x26e08f4a
  40df6f:	pop    eax
  40df70:	out    0x9f,al
  40df72:	call   0xba4c:0xde8de6ea
  40df79:	ficomp DWORD PTR [eax-0x8]
  40df7c:	inc    eax
  40df7d:	pop    ecx
  40df7e:	dec    eax
  40df7f:	(bad)  
  40df80:	fimul  WORD PTR [esi+eax*8-0x38]
  40df84:	inc    ebx
  40df85:	push   ss
  40df86:	rol    ecx,cl
  40df88:	in     eax,0x25
  40df8a:	ror    DWORD PTR [eax+0x7d],0x52
  40df8e:	loope  0x40df33
  40df90:	es fcom st(5)
  40df93:	add    dh,BYTE PTR [esi]
  40df95:	out    dx,eax
  40df96:	push   cs
  40df97:	aaa    
  40df98:	ins    BYTE PTR es:[edi],dx
  40df99:	nop
  40df9a:	mov    bh,0x36
  40df9c:	(bad)  
  40df9d:	fdivr  DWORD PTR [esi+0x35902717]
  40dfa3:	pop    ds
  40dfa4:	addr16 call 0xbbc91d34
  40dfaa:	inc    ebp
  40dfab:	jne    0x40dfa5
  40dfad:	sub    DWORD PTR [ecx],edi
  40dfaf:	inc    edi
  40dfb0:	push   ecx
  40dfb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb2:	jg     0x40dfe8
  40dfb4:	pop    edi
  40dfb5:	aad    0x84
  40dfb7:	mov    bl,0x75
  40dfb9:	jns    0x40e037
  40dfbb:	clc    
  40dfbc:	jnp    0x40dfb9
  40dfbe:	in     al,0x89
  40dfc0:	imul   ecx,DWORD PTR [ecx+ebp*4+0x744acce5],0x72a90521
  40dfcb:	add    DWORD PTR [ecx+0x26],esi
  40dfce:	daa    
  40dfcf:	mov    ds:0x12c33818,eax
  40dfd4:	inc    edx
  40dfd5:	mov    ebx,0x7fa3f657
  40dfda:	test   al,0x2f
  40dfdc:	sbb    eax,0xad47d3e7
  40dfe1:	clc    
  40dfe2:	(bad)  
  40dfe3:	out    dx,al
  40dfe4:	arpl   WORD PTR [edi+edi*2-0x74],ax
  40dfe8:	cdq    
  40dfe9:	cmc    
  40dfea:	ins    DWORD PTR es:[edi],dx
  40dfeb:	jns    0x40e03a
  40dfed:	pop    esi
  40dfee:	adc    eax,DWORD PTR [esi+eiz*2]
  40dff1:	xor    eax,0x875131df
  40dff6:	call   0x454a7a05
  40dffb:	inc    edx
  40dffc:	sahf   
  40dffd:	xor    DWORD PTR [ecx],0xd2e5e6da
  40e003:	ret    0x3763
  40e006:	das    
  40e007:	adc    eax,0xc00933f6
  40e00c:	dec    esi
  40e00d:	mov    ah,0xd5
  40e00f:	jmp    0x2a8669e2
  40e014:	(bad)  
  40e015:	cld    
  40e016:	sar    BYTE PTR [esi+0x42fec3ac],0x0
  40e01d:	ds stos DWORD PTR es:[edi],eax
  40e01f:	iret   
  40e020:	(bad)  
  40e021:	mov    ch,0x24
  40e023:	adc    BYTE PTR [ecx-0x3052266d],cl
  40e029:	mov    BYTE PTR [eax+0x30],dh
  40e02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e02d:	pop    esp
  40e02e:	fldcw  WORD PTR [edi]
  40e030:	pop    ebx
  40e031:	mov    ds:0xb0650a21,al
  40e036:	imul   ecx,DWORD PTR [edi-0x6c7d96a2],0x33
  40e03d:	(bad)  
  40e03e:	leave  
  40e03f:	in     eax,0x5
  40e041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e042:	addr16 jne 0x40dfcf
  40e045:	dec    ecx
  40e046:	(bad)  
  40e047:	fistp  QWORD PTR [esi]
  40e049:	out    0x49,al
  40e04b:	sub    eax,0x9aebc5e8
  40e050:	test   BYTE PTR [esi-0x178face6],0x31
  40e057:	mov    al,0x45
  40e059:	xchg   BYTE PTR [edx+0x6e],bl
  40e05c:	stos   BYTE PTR es:[edi],al
  40e05d:	xchg   esi,eax
  40e05e:	std    
  40e05f:	pop    DWORD PTR [ecx+edi*4+0x34]
  40e063:	outs   dx,BYTE PTR ds:[esi]
  40e064:	push   eax
  40e065:	dec    edi
  40e066:	pop    es
  40e067:	test   BYTE PTR ds:[edi-0xf],ch
  40e06b:	sti    
  40e06c:	cmp    eax,0x9edb2914
  40e071:	xor    bl,BYTE PTR [edi-0x58240c0c]
  40e077:	mov    al,ds:0xd3a5af0b
  40e07c:	lock cs (bad) 
  40e07f:	mov    ebp,0x862ea741
  40e084:	fs ins BYTE PTR es:[edi],dx
  40e086:	sti    
  40e087:	pushf  
  40e088:	mov    ebx,ebx
  40e08a:	(bad)  
  40e08b:	jnp    0x40e072
  40e08d:	dec    edi
  40e08e:	aam    0x2d
  40e090:	js     0x40e0bb
  40e092:	add    BYTE PTR [ebx+0x10],0x6e
  40e096:	push   ss
  40e097:	in     eax,dx
  40e098:	sbb    ebp,eax
  40e09a:	into   
  40e09b:	xchg   BYTE PTR [ebx],cl
  40e09d:	cdq    
  40e09e:	call   FWORD PTR [ebp+0x4d]
  40e0a1:	ror    DWORD PTR [eax-0x7506fb6],cl
  40e0a7:	imul   ecx,DWORD PTR [ebp+0x3b],0x8714c46b
  40e0ae:	adc    edi,DWORD PTR [edx-0x72]
  40e0b1:	cmp    ecx,DWORD PTR [esi]
  40e0b3:	push   ss
  40e0b4:	mov    ?,WORD PTR [esi-0x5a]
  40e0b7:	fst    DWORD PTR [ecx-0x54a8f09d]
  40e0bd:	mov    ecx,0xcba64a17
  40e0c2:	xchg   edx,eax
  40e0c3:	push   ds
  40e0c4:	cmp    bl,0x9d
  40e0c7:	adc    eax,0xf50e5f5d
  40e0cc:	aad    0x7
  40e0ce:	xchg   edx,ecx
  40e0d0:	(bad)  
  40e0d1:	cld    
  40e0d2:	inc    edi
  40e0d3:	shl    BYTE PTR [ecx-0x28],1
  40e0d6:	cmp    BYTE PTR [ebp+0x54],0x73
  40e0da:	fnstsw WORD PTR [ecx]
  40e0dc:	call   0x182e4f1a
  40e0e1:	into   
  40e0e2:	loope  0x40e0f2
  40e0e4:	ret    0x2d18
  40e0e7:	cdq    
  40e0e8:	mov    dl,0xfe
  40e0ea:	adc    DWORD PTR [ebx+0x31c9c935],esp
  40e0f0:	das    
  40e0f1:	mov    ds:0x9dabb746,eax
  40e0f6:	adc    DWORD PTR [edi+edx*4+0x15],0xd680d269
  40e0fe:	adc    edi,ecx
  40e100:	cmp    edx,esi
  40e102:	sbb    edi,DWORD PTR [esi-0xf]
  40e105:	outs   dx,DWORD PTR ds:[esi]
  40e106:	mov    cl,al
  40e108:	fwait
  40e109:	mov    dl,0xdd
  40e10b:	sub    esp,ecx
  40e10d:	aas    
  40e10e:	xor    al,0xc4
  40e110:	jne    0x40e122
  40e112:	and    dh,dh
  40e114:	call   0x996cf3a7
  40e119:	(bad)  
  40e11a:	(bad)  
  40e11b:	cwde   
  40e11c:	jns    0x45c4f84d
  40e122:	fcom   st(0)
  40e124:	cli    
  40e125:	dec    eax
  40e126:	xchg   edx,eax
  40e127:	pop    esp
  40e128:	ficomp DWORD PTR [ecx+0x42229ee9]
  40e12e:	ss inc edx
  40e130:	call   0x53f8:0x8b067244
  40e137:	fist   DWORD PTR [edx]
  40e139:	aam    0xdb
  40e13b:	outs   dx,DWORD PTR ds:[esi]
  40e13c:	sbb    bl,dh
  40e13e:	add    eax,0x2ea1859
  40e143:	or     eax,0x77611e6e
  40e148:	sbb    DWORD PTR [edi+edx*1+0x24],edx
  40e14c:	nop
  40e14d:	int    0x0
  40e14f:	and    edx,DWORD PTR [ebp+0x6031ff7]
  40e155:	mov    eax,0xed0af7c4
  40e15a:	test   eax,0x641fe866
  40e15f:	mov    WORD PTR [edx+0x20df9f29],cs
  40e165:	jl     0x40e165
  40e167:	cld    
  40e168:	add    DWORD PTR [eax],eax
  40e16a:	inc    ebx
  40e16b:	mov    dh,0xa7
  40e16d:	mov    esi,0x60112c83
  40e172:	mov    ebx,0x769eae3e
  40e177:	imul   esp,DWORD PTR [edx-0x74580bf8],0x45
  40e17e:	lock xor eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1ca
  40e199:	test   DWORD PTR [esi],eax
  40e19b:	push   0xffffffce
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [edi],bl
  40e1a5:	stos   BYTE PTR es:[edi],al
  40e1a6:	shr    DWORD PTR [eax],cl
  40e1a8:	lea    ecx,[edi]
  40e1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ab:	mov    eax,0x8d0c2c7f
  40e1b0:	or     BYTE PTR [esi+0x2a0cf750],ah
  40e1b6:	scas   eax,DWORD PTR es:[edi]
  40e1b7:	cwde   
  40e1b8:	or     ah,bh
  40e1ba:	imul   ebx,DWORD PTR [esi],0xffffffec
  40e1bd:	pop    eax
  40e1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1bf:	xchg   eax,edx
  40e1c1:	fimul  WORD PTR [ebx-0x78736f25]
  40e1c7:	popf   
  40e1c8:	popa   
  40e1c9:	fstp   QWORD PTR ds:[edi-0x4b]
  40e1cd:	bound  edi,QWORD PTR [edi+0x2e7ab276]
  40e1d3:	push   ds
  40e1d4:	push   edi
  40e1d5:	jge    0x40e223
  40e1d7:	xchg   BYTE PTR [ebx+esi*4-0x53],ch
  40e1db:	icebp  
  40e1dc:	mov    dh,0x0
  40e1de:	inc    esp
  40e1df:	aas    
  40e1e0:	cmp    DWORD PTR [eax],edi
  40e1e2:	mov    edi,0x7502db5a
  40e1e7:	mov    ebp,0x189cbe3e
  40e1ec:	shl    DWORD PTR [edi+0x42d199d],1
  40e1f2:	dec    ebp
  40e1f3:	cmp    bl,ah
  40e1f5:	lahf   
  40e1f6:	addr16 mov cl,0x27
  40e1f9:	pop    eax
  40e1fa:	fisttp QWORD PTR [eax]
  40e1fc:	(bad)  
  40e1fd:	(bad)  [edx]
  40e1ff:	xor    eax,0xb5baac71
  40e204:	and    eax,0xb51b75e
  40e209:	ror    edx,0x9c
  40e20c:	les    edx,FWORD PTR [eax+0x77cf4170]
  40e212:	cmp    al,0xdd
  40e214:	dec    edx
  40e215:	fsubr  st(2),st
  40e217:	mov    al,BYTE PTR [eax]
  40e219:	jmp    0xe979695d
  40e21e:	jl     0x40e259
  40e220:	sti    
  40e221:	push   ds
  40e222:	jg     0x40e1d3
  40e224:	or     DWORD PTR [ebx],eax
  40e226:	popf   
  40e227:	pop    eax
  40e228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e229:	(bad)  
  40e22a:	xchg   edi,eax
  40e22b:	dec    edi
  40e22c:	mov    al,0x97
  40e22e:	push   edx
  40e22f:	mov    ah,0xa3
  40e231:	fadd   QWORD PTR ds:0xfc426824
  40e237:	jmp    0x40e26e
  40e239:	xchg   ecx,eax
  40e23a:	cld    
  40e23b:	or     BYTE PTR [ecx-0x39],ah
  40e23e:	adc    BYTE PTR es:[esi+0x53],bh
  40e242:	push   edx
  40e243:	push   ebx
  40e244:	fistp  WORD PTR [edi+edx*4+0x5e]
  40e248:	mov    cl,0xb5
  40e24a:	mov    al,ds:0x94d4d96
  40e24f:	pop    ecx
  40e250:	ret    
  40e251:	or     ebx,ecx
  40e253:	(bad)  
  40e254:	cmp    BYTE PTR [esi],dh
  40e256:	out    0xff,eax
  40e258:	cdq    
  40e259:	je     0x40e20f
  40e25b:	aad    0xb0
  40e25d:	mov    ds:0x17f3b6a4,eax
  40e262:	loop   0x40e26a
  40e264:	arpl   WORD PTR [ebx+0x10],ax
  40e267:	cmp    eax,ebx
  40e269:	aas    
  40e26a:	retf   0xa06d
  40e26d:	inc    eax
  40e26e:	xor    al,0x5d
  40e270:	dec    eax
  40e271:	rcl    BYTE PTR [ebp+0x5a5ce39],cl
  40e277:	call   0xb3fed59b
  40e27c:	jmp    0x5761:0x921627e7
  40e283:	mov    ah,0xe1
  40e285:	adc    ebx,DWORD PTR [ecx+ecx*8]
  40e288:	xchg   edi,eax
  40e289:	in     eax,dx
  40e28a:	iret   
  40e28b:	jns    0x40e2c7
  40e28d:	(bad)  
  40e28e:	sub    DWORD PTR [edi-0x4a],edx
  40e291:	adc    al,0x8b
  40e293:	and    cl,dh
  40e295:	fist   WORD PTR [ecx+eiz*2+0x1d]
  40e299:	daa    
  40e29a:	or     DWORD PTR [ebp-0x128e95ca],esp
  40e2a0:	jg     0x40e23a
  40e2a2:	mov    bh,BYTE PTR [ebx]
  40e2a4:	enter  0x71e8,0x63
  40e2a8:	in     al,dx
  40e2a9:	push   ss
  40e2aa:	inc    ebp
  40e2ab:	sub    eax,0x2ee02c5b
  40e2b0:	(bad)  [edx]
  40e2b2:	jmp    0xb2c2ca9f
  40e2b7:	adc    eax,0xe30bbe24
  40e2bc:	xchg   edi,eax
  40e2bd:	jmp    0x5451:0xfe265d32
  40e2c4:	fstp   QWORD PTR [ebp-0x6d801711]
  40e2ca:	sbb    al,0x53
  40e2cc:	leave  
  40e2cd:	pop    ebp
  40e2ce:	imul   esi,DWORD PTR [edx+0x139d0676],0xffffff9b
  40e2d5:	jno    0x40e272
  40e2d7:	retf   
  40e2d8:	push   eax
  40e2d9:	clc    
  40e2da:	fdiv   QWORD PTR [edx]
  40e2dc:	rcl    al,cl
  40e2de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2df:	int    0x42
  40e2e1:	fisttp WORD PTR [ebx+0x2c]
  40e2e4:	mov    ds:0x542e1ebb,al
  40e2e9:	lods   al,BYTE PTR ds:[esi]
  40e2ea:	call   0x68a2:0x2d79aea0
  40e2f1:	out    dx,eax
  40e2f2:	stos   BYTE PTR es:[edi],al
  40e2f3:	into   
  40e2f4:	pop    ebp
  40e2f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f6:	mov    esp,DWORD PTR [ebx+edi*2+0x2a38c6a3]
  40e2fd:	(bad)  
  40e2fe:	in     al,0x90
  40e300:	(bad)  
  40e301:	ficom  DWORD PTR [esi-0x67]
  40e304:	std    
  40e305:	mov    DWORD PTR [eax-0x1525b097],esp
  40e30b:	sti    
  40e30c:	ret    0xe139
  40e30f:	sub    BYTE PTR [edi],cl
  40e311:	add    al,0x79
  40e313:	xchg   ecx,eax
  40e314:	mov    ds:0x1e31c509,al
  40e319:	pop    ebp
  40e31a:	cmp    ch,BYTE PTR [esi]
  40e31c:	xchg   esi,eax
  40e31d:	adc    eax,0x712a9c31
  40e322:	xlat   BYTE PTR ds:[ebx]
  40e323:	adc    al,0xaf
  40e325:	stc    
  40e326:	pushf  
  40e327:	xchg   ebx,eax
  40e328:	push   edx
  40e329:	popf   
  40e32a:	mov    BYTE PTR [ebp-0x2bd0bc3a],ah
  40e330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e331:	ins    BYTE PTR es:[edi],dx
  40e332:	xlat   BYTE PTR ds:[ebx]
  40e333:	nop
  40e334:	or     al,0x30
  40e336:	cli    
  40e337:	arpl   WORD PTR [eax+0xb],di
  40e33a:	leave  
  40e33b:	mov    WORD PTR [edi+0x40071d9a],es
  40e341:	in     al,0x99
  40e343:	vmovhpd xmm5,xmm3,QWORD PTR [edx-0xda4f86d]
  40e34b:	ss inc eax
  40e34d:	inc    ecx
  40e34e:	xor    eax,ebp
  40e350:	jb     0x40e36a
  40e352:	sub    ax,0x5287
  40e356:	add    eax,DWORD PTR [ebp+0x2f]
  40e359:	cmp    BYTE PTR [edi+edx*1+0x38],0x16
  40e35e:	sub    bl,BYTE PTR [edi+0x29]
  40e361:	xchg   BYTE PTR fs:[ecx+0xbd06de4],ah
  40e368:	dec    DWORD PTR [eax+0x74]
  40e36b:	cdq    
  40e36c:	add    edx,ebp
  40e36e:	inc    edx
  40e36f:	pusha  
  40e370:	hlt    
  40e371:	(bad)  
  40e372:	out    0x35,eax
  40e374:	cmp    BYTE PTR [ebx-0x2f1dd9b1],al
  40e37a:	xor    al,0xf2
  40e37c:	js     0x40e3b4
  40e37e:	xor    BYTE PTR [ebx-0x31],dl
  40e381:	mov    dh,0x46
  40e383:	lea    esp,[edx]
  40e385:	ins    BYTE PTR es:[edi],dx
  40e386:	in     al,dx
  40e387:	xor    eax,0x5e373d1c
  40e38d:	and    eax,0xbea04f19
  40e392:	(bad)  
  40e393:	popa   
  40e394:	test   al,bl
  40e396:	aad    0x2e
  40e398:	adc    bl,ch
  40e39a:	mov    edx,0x9c13024f
  40e39f:	jno    0x40e335
  40e3a1:	clc    
  40e3a2:	aam    0xae
  40e3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a5:	adc    esp,DWORD PTR [eax]
  40e3a7:	pop    ebx
  40e3a8:	lds    ebp,FWORD PTR [ecx-0x11fa333e]
  40e3ae:	stos   DWORD PTR es:[edi],eax
  40e3af:	mov    DWORD PTR [esi+0x79],esi
  40e3b2:	mov    ecx,0xcd4fba65
  40e3b7:	inc    edx
  40e3b8:	hlt    
  40e3b9:	mov    ah,0x4c
  40e3bb:	lock pop ebx
  40e3bd:	inc    ecx
  40e3be:	jnp    0x40e387
  40e3c0:	int3   
  40e3c1:	push   ebx
  40e3c2:	je     0x40e3ca
  40e3c4:	cli    
  40e3c5:	fwait
  40e3c6:	add    al,0x3f
  40e3c8:	(bad)  
  40e3c9:	sti    
  40e3ca:	dec    ebx
  40e3cb:	out    dx,eax
  40e3cc:	sti    
  40e3cd:	test   eax,0x4edd7e85
  40e3d2:	scas   eax,DWORD PTR es:[edi]
  40e3d3:	mov    dh,0xc6
  40e3d5:	jp     0x40e42a
  40e3d7:	inc    edx
  40e3d8:	pop    edi
  40e3d9:	mov    al,ds:0xfb5e488
  40e3de:	inc    eax
  40e3df:	enter  0xf980,0xe8
  40e3e3:	retf   
  40e3e4:	sahf   
  40e3e5:	add    DWORD PTR [esi-0x5509fe83],esi
  40e3eb:	push   es
  40e3ec:	and    edi,DWORD PTR [esi-0x55]
  40e3ef:	push   esi
  40e3f0:	inc    eax
  40e3f1:	jno    0x40e385
  40e3f3:	push   es
  40e3f4:	mov    eax,0x47c39a8
  40e3f9:	jp     0x40e3d0
  40e3fb:	push   esp
  40e3fc:	mov    bl,0x3c
  40e3fe:	jmp    0x3fd9f015
  40e403:	cli    
  40e404:	adc    BYTE PTR [ecx],0xcf
  40e407:	sbb    eax,0x926c86e0
  40e40c:	outs   dx,DWORD PTR ds:[esi]
  40e40d:	jecxz  0x40e44d
  40e40f:	test   BYTE PTR [esi-0x59],cl
  40e412:	add    ebp,DWORD PTR [edx-0x789f80fa]
  40e418:	or     edi,esi
  40e41a:	xchg   edx,eax
  40e41b:	or     al,0x49
  40e41d:	push   ss
  40e41e:	test   eax,0x195e3cfb
  40e423:	xchg   BYTE PTR [ecx-0x7e],al
  40e426:	jae    0x40e3b5
  40e428:	pusha  
  40e429:	fist   DWORD PTR [ebx+0x67ef402e]
  40e42f:	enter  0xebb,0x3f
  40e433:	jge    0x40e469
  40e435:	in     eax,dx
  40e436:	sbb    BYTE PTR [edi],0xb5
  40e439:	jmp    0xf8b53fc6
  40e43e:	popa   
  40e43f:	mov    esp,0x649d98e9
  40e444:	popa   
  40e445:	jge    0x40e3dc
  40e447:	mov    eax,0x33af002f
  40e44c:	shl    BYTE PTR ds:0x6d33,cl
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax-0x4f42651f],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [eax+0x55],ah
  40e4ec:	mov    al,ds:0xa9425531
  40e4f1:	cdq    
  40e4f2:	out    dx,al
  40e4f3:	pusha  
  40e4f4:	iret   
  40e4f5:	push   edi
  40e4f6:	sbb    BYTE PTR [edx-0x99d2082],dl
  40e4fc:	sub    esp,ebx
  40e4fe:	popf   
  40e4ff:	or     al,0xec
  40e501:	xchg   esi,eax
  40e502:	ins    DWORD PTR es:[edi],dx
  40e503:	add    al,0xf1
  40e505:	jmp    0x40e51b
  40e507:	mov    es,WORD PTR [di]
  40e50a:	mov    bh,0xac
  40e50c:	out    0xda,al
  40e50e:	adc    cl,BYTE PTR [ebx-0x4]
  40e511:	fnsave [ebx-0x6212a906]
  40e517:	jle    0x40e4c0
  40e519:	mov    ch,0x10
  40e51b:	jne    0x40e4b9
  40e51d:	dec    esp
  40e51e:	adc    BYTE PTR [ebx+0x78db476],0x2b
  40e525:	scas   eax,DWORD PTR es:[edi]
  40e526:	mov    al,ds:0x539c52b7
  40e52b:	or     esi,DWORD PTR [esi-0x6f]
  40e52e:	nop
  40e52f:	push   cs
  40e530:	stos   DWORD PTR es:[edi],eax
  40e531:	test   eax,0xea4d9bb9
  40e536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e537:	lock inc edx
  40e539:	call   0x4697:0x81a42a4b
  40e540:	ret    
  40e541:	xchg   edx,eax
  40e542:	jg     0x40e5c2
  40e544:	jo     0x40e594
  40e546:	stos   BYTE PTR es:[edi],al
  40e547:	mov    esi,0xc35eddc8
  40e54c:	scas   eax,DWORD PTR es:[edi]
  40e54d:	loope  0x40e4e9
  40e54f:	xchg   ebp,eax
  40e550:	mov    eax,0x41cab8c
  40e555:	pop    esp
  40e556:	xor    al,0x4d
  40e558:	mov    ebp,0x32d46620
  40e55d:	push   ecx
  40e55e:	sub    eax,0x9afe509b
  40e563:	cdq    
  40e564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e565:	cmp    edi,DWORD PTR [ecx+0x11]
  40e568:	mov    ebx,0xd513467
  40e56d:	jle    0x40e5a3
  40e56f:	leave  
  40e570:	push   ebx
  40e571:	sub    DWORD PTR [eax],esp
  40e573:	xchg   DWORD PTR [ebp+0x1e92872c],ebx
  40e579:	(bad)  
  40e57a:	xchg   edx,eax
  40e57b:	aas    
  40e57c:	enter  0xfb5a,0xc9
  40e580:	mov    ebp,0x8f0bbc0f
  40e585:	mov    dl,BYTE PTR [edi-0x10]
  40e588:	dec    ecx
  40e589:	mov    al,ds:0x67c32510
  40e58e:	retf   
  40e58f:	in     eax,0x4c
  40e591:	arpl   WORD PTR [ebx+0x3d],bx
  40e594:	push   ebx
  40e595:	rcr    BYTE PTR [ebx],1
  40e597:	and    DWORD PTR [edx],esi
  40e599:	cs mov ecx,0xf69f7fd
  40e59f:	js     0x40e5bf
  40e5a1:	inc    esp
  40e5a2:	dec    ebx
  40e5a3:	pop    ebp
  40e5a4:	jmp    0x40e5f2
  40e5a6:	mov    dh,BYTE PTR [eax]
  40e5a8:	mov    esi,0x33227888
  40e5ad:	inc    ebx
  40e5ae:	sub    ch,ah
  40e5b0:	ins    BYTE PTR es:[edi],dx
  40e5b1:	popa   
  40e5b2:	pop    ebp
  40e5b3:	xor    DWORD PTR [ecx+eiz*8-0x6],esi
  40e5b7:	push   0xffffffb6
  40e5b9:	pop    ebp
  40e5ba:	inc    BYTE PTR [esi+esi*2+0x52]
  40e5be:	out    0xc9,eax
  40e5c0:	test   eax,0x822a45dd
  40e5c5:	inc    esi
  40e5c6:	inc    edi
  40e5c7:	mov    ch,0x88
  40e5c9:	adc    dl,ah
  40e5cb:	sub    ebx,DWORD PTR [edi]
  40e5cd:	clc    
  40e5ce:	pop    ss
  40e5cf:	jb     0x40e621
  40e5d1:	xchg   ebp,eax
  40e5d2:	inc    ebx
  40e5d3:	cmp    bl,BYTE PTR [edi]
  40e5d5:	test   eax,0x26c86840
  40e5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5db:	fwait
  40e5dc:	adc    al,0x35
  40e5de:	clc    
  40e5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5e0:	jne    0x40e65c
  40e5e2:	or     BYTE PTR [esi],bh
  40e5e4:	mov    ecx,0x5a92029e
  40e5e9:	inc    esp
  40e5ea:	mov    ch,0xa
  40e5ec:	or     DWORD PTR [ecx-0x49d250ff],0xacaa5b76
  40e5f6:	not    DWORD PTR [eax]
  40e5f8:	aad    0x45
  40e5fa:	sub    edi,DWORD PTR [esi-0x1c]
  40e5fd:	sbb    esi,DWORD PTR [ebx-0x5c03f7f8]
  40e603:	jo     0x40e5f9
  40e605:	ret    0x9d5
  40e608:	hlt    
  40e609:	mov    cl,0xde
  40e60b:	(bad)  [esi*1-0x672202e5]
  40e612:	dec    ebp
  40e613:	in     al,dx
  40e614:	xor    DWORD PTR [ebx+eiz*4+0x60],esp
  40e618:	push   es
  40e619:	xchg   ebp,eax
  40e61a:	fadd   DWORD PTR [ecx]
  40e61c:	adc    al,0xb3
  40e61e:	xor    BYTE PTR [edi+0x34fdafed],dh
  40e624:	call   0x9886:0x30543173
  40e62b:	mov    bh,0xe3
  40e62d:	mov    cl,0x19
  40e62f:	or     al,0x59
  40e631:	out    dx,al
  40e632:	aad    0x52
  40e634:	xor    eax,0xa74beb47
  40e639:	fisub  DWORD PTR [edx]
  40e63b:	cmp    ah,cl
  40e63d:	push   es
  40e63e:	and    DWORD PTR [ebx],0xffffff8d
  40e641:	cmp    esi,DWORD PTR [ebp+0x5fb2eea9]
  40e647:	(bad)  
  40e648:	adc    BYTE PTR ds:0xd92f3b4f,al
  40e64e:	mov    edi,0xd0908a67
  40e653:	es (bad) 
  40e655:	retf   
  40e656:	je     0x40e5e9
  40e658:	nop
  40e659:	out    dx,al
  40e65a:	push   ds
  40e65b:	dec    esi
  40e65c:	ss push cs
  40e65e:	ficomp DWORD PTR ds:0xf6207c69
  40e664:	(bad)
  40e669:	jnp    0x40e67c
  40e66b:	mul    ecx
  40e66d:	sti    
  40e66e:	lds    esp,FWORD PTR [ebx+0x44]
  40e671:	adc    ch,bh
  40e673:	test   DWORD PTR [ecx+0x5af2df2f],edx
  40e679:	int3   
  40e67a:	std    
  40e67b:	cmp    DWORD PTR [edi-0x65],ebx
  40e67e:	xor    DWORD PTR [edi],eax
  40e680:	retf   0x2bad
  40e683:	jne    0x40e658
  40e685:	cmc    
  40e686:	inc    edi
  40e687:	out    dx,eax
  40e688:	call   0x6bc3:0x177226b4
  40e68f:	or     BYTE PTR [ebx-0x40],bh
  40e692:	iret   
  40e693:	jp     0x40e63d
  40e695:	jno    0x40e682
  40e697:	(bad)  
  40e699:	fiadd  DWORD PTR [edx+0x3d]
  40e69c:	push   esp
  40e69d:	rol    ah,0xce
  40e6a0:	dec    ebp
  40e6a1:	dec    eax
  40e6a2:	and    al,0x1f
  40e6a4:	mov    al,0x64
  40e6a6:	fsub   QWORD PTR [esi-0x7ddac650]
  40e6ac:	ins    DWORD PTR es:[edi],dx
  40e6ad:	cmp    DWORD PTR [ecx-0x1d],eax
  40e6b0:	neg    edi
  40e6b2:	imul   ecx,DWORD PTR [ebp-0x7a],0x6435b09b
  40e6b9:	jae    0x40e6de
  40e6bb:	xchg   edx,eax
  40e6bc:	sahf   
  40e6bd:	repnz repnz sub eax,0x8e50e4d2
  40e6c4:	call   0x95c8:0x348f4cb
  40e6cb:	call   FWORD PTR [eax+0x24]
  40e6ce:	adc    al,0x1d
  40e6d0:	pop    ebx
  40e6d1:	in     al,dx
  40e6d2:	loope  0x40e724
  40e6d4:	(bad)  
  40e6d5:	out    dx,eax
  40e6d6:	dec    ebp
  40e6d7:	hlt    
  40e6d8:	add    BYTE PTR ss:[esp+ebp*1-0x50],0x83
  40e6de:	adc    DWORD PTR [ebx],ebp
  40e6e0:	and    al,0x93
  40e6e2:	jae    0x40e6e6
  40e6e4:	mov    esi,0x3de8dd35
  40e6e9:	inc    esp
  40e6ea:	mul    BYTE PTR [esi-0x561f436c]
  40e6f0:	or     ecx,DWORD PTR [ebp+0x7af32351]
  40e6f6:	mov    al,ds:0xd8f22ef9
  40e6fb:	pop    ebx
  40e6fc:	jl     0x40e75c
  40e6fe:	popf   
  40e6ff:	les    edi,FWORD PTR [esi]
  40e701:	daa    
  40e702:	ret    0xde2a
  40e705:	adc    dl,BYTE PTR [edi-0x44]
  40e708:	push   0xb6696c06
  40e70d:	cmp    ebp,esp
  40e70f:	iret   
  40e710:	dec    edx
  40e711:	icebp  
  40e712:	sbb    al,0xa3
  40e714:	ins    DWORD PTR es:[edi],dx
  40e715:	aad    0xb2
  40e717:	iret   
  40e718:	scas   al,BYTE PTR es:[edi]
  40e719:	and    BYTE PTR [ebp-0x3b],dh
  40e71c:	push   esi
  40e71d:	xchg   ebx,eax
  40e71e:	in     eax,dx
  40e71f:	cmp    bh,BYTE PTR ds:0x61806f81
  40e725:	mov    WORD PTR [esi+0x10],gs
  40e728:	pop    es
  40e729:	xor    al,0xeb
  40e72b:	hlt    
  40e72c:	mov    dh,0x41
  40e72e:	jle    0x40e6bc
  40e730:	fs push 0xfbb51ae2
  40e736:	xor    ebx,DWORD PTR [ecx+ebp*2+0x29b30c4a]
  40e73d:	or     eax,DWORD PTR [ebx+0xdf19fe0]
  40e743:	jmp    0xf0b2:0x7cc3ce86
  40e74a:	aaa    
  40e74b:	ja     0x40e78c
  40e74d:	loopne 0x40e732
  40e74f:	adc    eax,0x5ce29a27
  40e754:	mov    ebp,0x4811ed1a
  40e759:	fwait
  40e75a:	sar    DWORD PTR [eax+0x952c1c9],1
  40e760:	(bad)  
  40e761:	aas    
  40e762:	and    ch,BYTE PTR [edi+0x37]
  40e765:	and    eax,0x87f301c8
  40e76a:	fld    QWORD PTR [edi+0x2a]
  40e76d:	and    DWORD PTR [eax+0x16],ecx
  40e770:	cs adc al,0xbf
  40e773:	cwde   
  40e774:	ja     0x40e7d8
  40e776:	push   ss
  40e777:	add    eax,0xb207ddd9
  40e77c:	jge    0x40e7a0
  40e77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77f:	scas   al,BYTE PTR es:[edi]
  40e780:	test   DWORD PTR [ebx-0x38],0x89aac59
  40e787:	sub    DWORD PTR [eax-0x3e15e20e],esi
  40e78d:	sbb    eax,0x2bc9136f
  40e792:	enter  0x45c7,0xc
  40e796:	ror    DWORD PTR [eax],cl
  40e798:	add    BYTE PTR [eax],al
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	dec    esi
  40e7f0:	adc    al,ch
  40e7f2:	jl     0x40e836
  40e7f4:	mov    esi,0x14d21818
  40e7f9:	sbb    BYTE PTR [eax],bl
  40e7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7fc:	idiv   DWORD PTR [eax+eiz*8-0x509ee3ae]
  40e803:	mov    ebp,0x8dfa9a4e
  40e808:	in     eax,0x88
  40e80a:	xor    esp,DWORD PTR [esi+0x28]
  40e80d:	mov    bl,0xb8
  40e80f:	clc    
  40e810:	mov    eax,0xff984fee
  40e815:	push   ebp
  40e816:	mov    dl,0xff
  40e818:	mov    dh,0x61
  40e81a:	pop    ecx
  40e81b:	jl     0x40e7cd
  40e81d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e81e:	pop    edx
  40e81f:	ds jb  0x40e7f9
  40e822:	out    dx,eax
  40e823:	mov    ebx,0xe15e30f4
  40e828:	cmc    
  40e829:	cmp    ebx,DWORD PTR [edi+0x64]
  40e82c:	in     al,dx
  40e82d:	int3   
  40e82e:	shr    BYTE PTR [edx],0x2f
  40e831:	pop    esi
  40e832:	lea    esi,[edi+esi*8+0x39]
  40e836:	jbe    0x40e80c
  40e838:	stos   BYTE PTR es:[edi],al
  40e839:	sub    BYTE PTR cs:[ebx],ah
  40e83c:	sbb    BYTE PTR [ecx-0x7b829a1f],bh
  40e842:	jmp    0x66fd69cf
  40e847:	pusha  
  40e848:	loop   0x40e7e5
  40e84a:	pop    ss
  40e84b:	test   BYTE PTR [edi],cl
  40e84d:	jmp    0xc0ed:0x7aaa5889
  40e854:	mov    ecx,0xb3150b66
  40e859:	out    dx,al
  40e85a:	fsubp  st(5),st
  40e85c:	xor    dl,dh
  40e85e:	outs   dx,BYTE PTR ds:[esi]
  40e85f:	pop    ds
  40e860:	mov    ch,0xde
  40e862:	adc    eax,0x594081bb
  40e867:	pop    edi
  40e868:	fucompp 
  40e86a:	stos   BYTE PTR es:[edi],al
  40e86b:	inc    ecx
  40e86c:	sbb    eax,0x5a66c314
  40e871:	fmul   QWORD PTR [eax]
  40e873:	dec    eax
  40e874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e875:	mov    bh,0x61
  40e877:	popf   
  40e878:	in     eax,0x54
  40e87a:	mov    ecx,0x8a9eb2bf
  40e880:	add    ecx,esp
  40e882:	pushf  
  40e883:	inc    ebp
  40e884:	test   DWORD PTR [esi],esp
  40e886:	push   es
  40e887:	ja     0x40e8e9
  40e889:	xor    al,ch
  40e88b:	lock xchg ebp,eax
  40e88d:	repz mov ds:0x7d8ac46e,al
  40e893:	mov    ecx,edi
  40e895:	je     0x40e901
  40e897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e898:	idiv   BYTE PTR [ebp+0x53]
  40e89b:	mov    edx,0x16e8b790
  40e8a0:	mov    dl,0xbe
  40e8a2:	xchg   esp,eax
  40e8a3:	hlt    
  40e8a4:	mov    esp,0xa1b89fd9
  40e8a9:	and    bh,BYTE PTR [ebx-0x253af8e4]
  40e8af:	cld    
  40e8b0:	out    0xa3,eax
  40e8b2:	mov    esi,0x391cfc64
  40e8b7:	cwde   
  40e8b8:	mov    dl,0xe7
  40e8ba:	out    0xa0,al
  40e8bc:	sub    eax,0x2ba58374
  40e8c1:	test   DWORD PTR [eax],esp
  40e8c3:	lods   eax,DWORD PTR ds:[esi]
  40e8c4:	ja     0x40e90a
  40e8c6:	test   al,0x91
  40e8c8:	or     edx,DWORD PTR [ecx+0x5fb084e3]
  40e8ce:	push   esi
  40e8cf:	xor    al,0xde
  40e8d1:	adc    ch,ah
  40e8d3:	pop    esp
  40e8d4:	imul   edx,DWORD PTR ds:0xa9363ad2,0xa16c2291
  40e8de:	and    BYTE PTR [eax-0x65],cl
  40e8e1:	or     eax,0xa1b60c59
  40e8e6:	popa   
  40e8e7:	repz in al,dx
  40e8e9:	sub    ebx,0x3e
  40e8ec:	es xchg esi,eax
  40e8ee:	xchg   ebp,eax
  40e8ef:	jb     0x40e8de
  40e8f1:	hlt    
  40e8f2:	and    dh,dh
  40e8f4:	(bad)  
  40e8f5:	jl     0x40e964
  40e8f7:	idiv   BYTE PTR [ecx+0x463db99a]
  40e8fd:	mov    cl,0xce
  40e8ff:	hlt    
  40e900:	imul   eax,DWORD PTR cs:[eax+0x53],0xc4099a19
  40e908:	fwait
  40e909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e90a:	cmp    ch,BYTE PTR [ebx-0x25fe4317]
  40e910:	cmp    DWORD PTR [esi],0xf443e20b
  40e916:	sbb    eax,0x8077a4f9
  40e91b:	(bad)  
  40e91c:	xor    edx,DWORD PTR [ecx+0xce764]
  40e922:	mov    eax,0x74bec4a9
  40e927:	jbe    0x40e8eb
  40e929:	mov    eax,ds:0x76394c34
  40e92e:	xchg   edi,eax
  40e92f:	arpl   WORD PTR [edi],bp
  40e931:	pop    ebp
  40e932:	add    esi,DWORD PTR [edi+ebx*4+0x3aefd067]
  40e939:	lods   eax,DWORD PTR ds:[esi]
  40e93a:	ss aaa 
  40e93c:	pop    esi
  40e93d:	pop    esp
  40e93e:	push   ebx
  40e93f:	push   ebx
  40e940:	inc    ebp
  40e942:	fisubr DWORD PTR [ebx]
  40e944:	repz jns 0x40e94e
  40e947:	xchg   edx,eax
  40e948:	xchg   DWORD PTR [ecx+0x63],edx
  40e94b:	int    0x54
  40e94d:	adc    al,0x43
  40e94f:	mul    ebp
  40e951:	dec    bp
  40e953:	sar    BYTE PTR [eax-0x3c2b8287],cl
  40e959:	xchg   edx,eax
  40e95a:	xor    ch,dl
  40e95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e95d:	stos   DWORD PTR es:[di],eax
  40e95f:	loopne 0x40e96e
  40e961:	and    DWORD PTR [esi-0xb435de7],0xffffffb8
  40e968:	sub    bl,BYTE PTR [edi]
  40e96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e96b:	and    eax,0xcadee19d
  40e970:	hlt    
  40e971:	pop    ebp
  40e972:	push   ds
  40e973:	add    DWORD PTR [ebx-0x35d7b3b],0xffffffee
  40e97a:	pop    ss
  40e97b:	xchg   ebp,eax
  40e97c:	jmp    0x3326:0x4d98cc51
  40e983:	pop    eax
  40e984:	in     eax,0x75
  40e986:	and    DWORD PTR [ebp-0x40405129],ebp
  40e98c:	fwait
  40e98d:	xchg   ebp,eax
  40e98e:	cmp    dl,BYTE PTR [edi+0x18ea1e5]
  40e994:	cmp    BYTE PTR [ebx],cl
  40e996:	cmp    esi,DWORD PTR [edi]
  40e998:	out    0x1c,eax
  40e99a:	inc    ecx
  40e99b:	jge    0x40e93f
  40e99d:	loope  0x40e93d
  40e99f:	add    DWORD PTR [eax-0x4f33e03f],ebx
  40e9a5:	add    BYTE PTR [eax+0x69],bl
  40e9a8:	cmp    eax,0xefe6e1a6
  40e9ad:	and    edi,ecx
  40e9af:	adc    eax,0x2a94f1ba
  40e9b4:	daa    
  40e9b5:	jp     0x40e99e
  40e9b7:	sub    DWORD PTR [edx+0x29],edi
  40e9ba:	inc    eax
  40e9bb:	xchg   ecx,eax
  40e9bc:	sub    ebp,DWORD PTR [ecx-0x6e3beedb]
  40e9c2:	jecxz  0x40ea3b
  40e9c4:	into   
  40e9c5:	or     al,0x60
  40e9c7:	inc    ecx
  40e9c8:	dec    edx
  40e9c9:	aad    0x6a
  40e9cb:	dec    esp
  40e9cc:	pop    ebx
  40e9cd:	push   esi
  40e9ce:	cmc    
  40e9cf:	outs   dx,DWORD PTR ds:[esi]
  40e9d0:	lahf   
  40e9d1:	in     al,dx
  40e9d2:	xor    eax,ebx
  40e9d4:	ror    ch,0x4c
  40e9d7:	popa   
  40e9d8:	aam    0x9
  40e9da:	pop    edx
  40e9db:	adc    al,0x5a
  40e9dd:	cmp    edi,DWORD PTR [esi+0x79514db]
  40e9e3:	push   cs
  40e9e4:	(bad)  [ebx-0x3115e7a6]
  40e9ea:	push   edi
  40e9eb:	and    al,0x86
  40e9ed:	add    eax,0xa488b047
  40e9f2:	sub    al,0x60
  40e9f4:	shl    bl,1
  40e9f6:	nop
  40e9f7:	fdivr  QWORD PTR [ebx]
  40e9f9:	enter  0x365f,0xd1
  40e9fd:	push   es
  40e9fe:	js     0x40e9a8
  40ea00:	mov    al,0xd3
  40ea02:	in     al,0x6b
  40ea04:	mov    edx,0x81b01db9
  40ea09:	mov    eax,0x5ee34a90
  40ea0e:	cmp    ecx,DWORD PTR [eax-0x353aa2a6]
  40ea14:	pop    edi
  40ea15:	cli    
  40ea16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea17:	or     ebx,DWORD PTR [ecx+ecx*2+0x3c]
  40ea1b:	enter  0xd0ab,0x82
  40ea1f:	shr    esi,1
  40ea21:	xacquire xchg BYTE PTR [ebp+0x29],ah
  40ea25:	inc    esp
  40ea26:	fsub   st(0),st
  40ea28:	fnstenv [ebx]
  40ea2a:	pushf  
  40ea2b:	test   DWORD PTR [ecx-0x55],eax
  40ea2e:	mov    edx,0x880fe900
  40ea33:	ins    BYTE PTR es:[edi],dx
  40ea34:	loope  0x40e9d0
  40ea36:	add    eax,0x70d087b1
  40ea3b:	aam    0x98
  40ea3d:	gs mov fs,edi
  40ea40:	cdq    
  40ea41:	sub    BYTE PTR [esi],al
  40ea43:	pop    eax
  40ea44:	mov    edi,0xe7898b01
  40ea49:	dec    esi
  40ea4a:	cli    
  40ea4b:	cld    
  40ea4c:	fsubr  QWORD PTR [edx+0x52]
  40ea4f:	stos   BYTE PTR es:[edi],al
  40ea50:	inc    esi
  40ea51:	(bad)  
  40ea52:	setbe  bl
  40ea55:	pop    esp
  40ea56:	adc    eax,0x219ef85d
  40ea5b:	pop    es
  40ea5c:	shl    BYTE PTR [edx+0x6d],0x6a
  40ea60:	push   eax
  40ea61:	mov    al,0x21
  40ea63:	mov    edx,0x55fea4cb
  40ea68:	lahf   
  40ea69:	sub    al,0xfa
  40ea6b:	mov    eax,0x11377466
  40ea70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea71:	xchg   ecx,eax
  40ea72:	cmp    BYTE PTR [edx-0x66],ch
  40ea75:	push   ss
  40ea76:	(bad)  
  40ea77:	leave  
  40ea78:	pop    ebx
  40ea79:	retf   0x7031
  40ea7c:	cmp    BYTE PTR [edi+0x47fcfc1b],ah
  40ea82:	(bad)
  40ea86:	sub    BYTE PTR [edx-0x3ab65859],dl
  40ea8c:	or     eax,esi
  40ea8e:	pop    ebx
  40ea8f:	pop    ebx
  40ea90:	pop    esp
  40ea91:	mov    eax,0x8207b80e
  40ea96:	jmp    0x2c81:0x50cdf863
  40ea9d:	(bad)  
  40ea9e:	xor    al,0x6b
  40eaa0:	sbb    eax,0xf7d2331d
  40eaa5:	test   DWORD PTR [ebx+0x42256815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0x47aa14b9
  40eaf1:	and    ebp,DWORD PTR gs:[edx+0x1818b8fd]
  40eaf8:	rcl    BYTE PTR [eax+ebx*1],cl
  40eafb:	sbb    BYTE PTR [eax],cl
  40eafd:	sub    al,BYTE PTR [edx+0x27]
  40eb00:	aaa    
  40eb01:	adc    ebp,DWORD PTR [ecx+0x6d]
  40eb04:	mov    al,cl
  40eb06:	xchg   BYTE PTR [ecx-0x16],dl
  40eb09:	pop    edx
  40eb0a:	push   ecx
  40eb0b:	or     cl,BYTE PTR [eax-0x47]
  40eb0e:	jns    0x40eacf
  40eb10:	add    dl,al
  40eb12:	lock jns 0x40eb46
  40eb15:	icebp  
  40eb16:	test   DWORD PTR [ecx+0x180e2b94],esi
  40eb1c:	daa    
  40eb1d:	stc    
  40eb1e:	(bad)  
  40eb1f:	adc    dh,BYTE PTR [edi]
  40eb21:	push   ecx
  40eb22:	xor    al,0x3e
  40eb24:	lea    edx,[eax+0x78]
  40eb27:	push   eax
  40eb28:	les    edi,FWORD PTR [ebx+eiz*1+0xb]
  40eb2c:	data16 stos BYTE PTR es:[edi],al
  40eb2e:	ror    BYTE PTR ds:0x4b3e99d6,1
  40eb34:	inc    ecx
  40eb35:	jno    0x40eb9c
  40eb37:	inc    ebx
  40eb38:	rcl    BYTE PTR [esi-0x20d3a85],1
  40eb3e:	jno    0x40eb41
  40eb40:	mov    ds:0x6902aabc,eax
  40eb45:	popf   
  40eb46:	sti    
  40eb47:	dec    edx
  40eb48:	out    dx,eax
  40eb49:	pop    ebx
  40eb4a:	(bad)  
  40eb4b:	jo     0x40eaf1
  40eb4d:	in     al,0x3c
  40eb4f:	xchg   edi,eax
  40eb50:	std    
  40eb51:	cmp    al,0x2d
  40eb53:	pop    edi
  40eb54:	ret    
  40eb55:	push   ebp
  40eb56:	scas   al,BYTE PTR es:[edi]
  40eb57:	(bad)  
  40eb59:	ss out dx,al
  40eb5b:	cdq    
  40eb5c:	xor    dl,al
  40eb5e:	sbb    DWORD PTR [edx-0x1a],0x7f6c611d
  40eb65:	push   0xe8995d6e
  40eb6a:	mov    ds:0xdfad074e,al
  40eb6f:	imul   ecx,DWORD PTR [edx-0x4fe84d75],0xa1f52664
  40eb79:	call   0xade:0x65002a8c
  40eb80:	arpl   bx,bp
  40eb82:	dec    ebp
  40eb83:	in     al,0x7b
  40eb85:	jl     0x40ebc7
  40eb87:	jle    0x40eb2b
  40eb89:	pop    esi
  40eb8a:	sbb    BYTE PTR [ebx+0x57],cl
  40eb8d:	dec    edx
  40eb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb8f:	aam    0x86
  40eb91:	mov    bl,0x98
  40eb93:	pop    ecx
  40eb94:	rcl    DWORD PTR [esi-0x98909b8],1
  40eb9a:	sub    BYTE PTR [ebp+0x2846fff9],ah
  40eba0:	jns    0x40eb5d
  40eba2:	inc    esp
  40eba3:	inc    edi
  40eba4:	out    0x2a,eax
  40eba6:	xchg   esp,eax
  40eba7:	daa    
  40eba8:	inc    ecx
  40eba9:	mov    esi,0x63f664b3
  40ebae:	in     eax,0xcd
  40ebb0:	and    eax,0x71e81798
  40ebb5:	aam    0x9
  40ebb7:	pop    edx
  40ebb8:	jle    0x40ec1b
  40ebba:	in     al,0xf4
  40ebbc:	mov    WORD PTR [esi-0x50],gs
  40ebbf:	jmp    DWORD PTR ds:0xf50a27c4
  40ebc5:	mov    bh,0x14
  40ebc7:	sub    BYTE PTR [eax],bh
  40ebc9:	lahf   
  40ebca:	jne    0x40ebe1
  40ebcc:	sbb    al,0xa9
  40ebce:	pop    ebp
  40ebcf:	and    al,0xe9
  40ebd1:	icebp  
  40ebd2:	cdq    
  40ebd3:	xchg   esi,eax
  40ebd4:	dec    ecx
  40ebd5:	in     al,dx
  40ebd6:	ins    DWORD PTR es:[edi],dx
  40ebd7:	sti    
  40ebd8:	call   0x6676b273
  40ebdd:	aaa    
  40ebde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebdf:	call   0x4e71:0xbc46e2e2
  40ebe6:	sbb    edx,DWORD PTR [ecx+0x4a09ec6e]
  40ebec:	mov    bh,BYTE PTR [ebp+0x3c]
  40ebef:	cmc    
  40ebf0:	neg    BYTE PTR [edi+0x13]
  40ebf3:	push   esi
  40ebf4:	push   0x93d115b1
  40ebf9:	adc    DWORD PTR [edx-0x2f],esi
  40ebfc:	mov    al,0x34
  40ebfe:	push   es
  40ebff:	cmc    
  40ec00:	mov    ah,BYTE PTR [esi+0x49]
  40ec03:	rol    DWORD PTR [edx],cl
  40ec05:	(bad)  
  40ec06:	cmp    eax,0x55f969c1
  40ec0b:	pop    esi
  40ec0c:	push   edi
  40ec0d:	enter  0x187a,0xa4
  40ec11:	inc    ebp
  40ec12:	rcr    DWORD PTR [edi],cl
  40ec14:	inc    esi
  40ec15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec16:	or     ecx,eax
  40ec18:	(bad)  
  40ec19:	aas    
  40ec1a:	mov    ebp,0xd0370dae
  40ec1f:	add    ebx,ebx
  40ec21:	ss mov al,fs:0xcbd91dc1
  40ec28:	lods   eax,DWORD PTR ds:[esi]
  40ec29:	sub    cl,BYTE PTR [edi]
  40ec2b:	sbb    BYTE PTR [edx],bh
  40ec2d:	jne    0x40ebfc
  40ec2f:	jge    0x40ec2e
  40ec31:	sub    ch,al
  40ec33:	rol    DWORD PTR [edx],1
  40ec35:	imul   esp,edx,0x23c3b2a8
  40ec3b:	and    esp,DWORD PTR [ebp+0x2894aae1]
  40ec41:	pop    ds
  40ec42:	out    0x36,eax
  40ec44:	fdivr  st(4),st
  40ec46:	aad    0x76
  40ec48:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40ec4a:	xor    dh,BYTE PTR [ecx-0x4c8826ce]
  40ec50:	ror    DWORD PTR [edi],0x5d
  40ec53:	sub    BYTE PTR [eax+0x55e60d41],al
  40ec59:	sub    eax,0x8fd8548
  40ec5e:	sub    ebp,0x45
  40ec61:	inc    esi
  40ec62:	mov    ds:0xe17ec835,al
  40ec67:	cmp    dh,dl
  40ec69:	ret    
  40ec6a:	out    0x45,al
  40ec6c:	jnp    0x40ecce
  40ec6e:	cmp    DWORD PTR [ecx-0x21fcb4d8],esi
  40ec74:	jb     0x40ec05
  40ec76:	dec    edx
  40ec77:	stc    
  40ec78:	loope  0x40eced
  40ec7a:	(bad)  
  40ec7b:	test   eax,0x1f855f62
  40ec80:	add    al,0xb
  40ec82:	scas   eax,DWORD PTR es:[edi]
  40ec83:	pop    ss
  40ec84:	push   0x91db917
  40ec89:	and    esp,DWORD PTR [edi+0x1]
  40ec8c:	stc    
  40ec8d:	inc    eax
  40ec8e:	bound  esp,QWORD PTR [esi]
  40ec90:	int3   
  40ec91:	jge    0x40ecb5
  40ec93:	call   0x4799:0x2e914bb5
  40ec9a:	or     DWORD PTR [eax+0x45],esi
  40ec9d:	pop    ebx
  40ec9e:	rcr    BYTE PTR [edx+0x3e],0x59
  40eca2:	in     al,dx
  40eca3:	jmp    0xbc2d:0x359e5c66
  40ecaa:	pop    ds
  40ecab:	loop   0x40ec54
  40ecad:	mov    al,ds:0xb30cb7c5
  40ecb2:	loopne 0x40ed30
  40ecb4:	mov    ds:0x2a495014,eax
  40ecb9:	push   ecx
  40ecba:	inc    ebx
  40ecbb:	mov    eax,0x84b1e2d6
  40ecc0:	or     eax,0xb119f851
  40ecc5:	fs push eax
  40ecc7:	sbb    ecx,eax
  40ecc9:	xchg   ecx,eax
  40ecca:	mov    edi,0x2ec79a13
  40eccf:	dec    eax
  40ecd0:	xor    bl,BYTE PTR [ebp+0x1e98b487]
  40ecd6:	push   eax
  40ecd7:	in     al,dx
  40ecd8:	push   ecx
  40ecd9:	sahf   
  40ecda:	jmp    0x8c77:0xc50dae0b
  40ece1:	or     DWORD PTR [edi],edx
  40ece3:	add    BYTE PTR [esi],dh
  40ece5:	or     al,0xb6
  40ece7:	and    eax,0x28f517f5
  40ecec:	xchg   BYTE PTR [esi-0x2d],ch
  40ecef:	(bad)  
  40ecf0:	dec    edi
  40ecf1:	inc    edx
  40ecf2:	inc    ebp
  40ecf3:	push   esi
  40ecf4:	imul   eax,ecx,0x2b
  40ecf7:	and    ch,BYTE PTR [esi-0x2e]
  40ecfa:	xchg   ebx,eax
  40ecfb:	rcr    DWORD PTR [esi-0x215ab98d],0xd2
  40ed02:	sub    ecx,DWORD PTR [eax+0x3152c92b]
  40ed08:	repnz inc eax
  40ed0a:	push   edx
  40ed0b:	setge  BYTE PTR [edx]
  40ed0e:	xchg   esp,eax
  40ed0f:	jae    0x40ed33
  40ed11:	adc    eax,0x73e5d31
  40ed16:	jne    0x40ed00
  40ed18:	(bad)  
  40ed19:	jp     0x40ed85
  40ed1b:	inc    edx
  40ed1c:	add    DWORD PTR [edi],ebp
  40ed1e:	pop    ebx
  40ed1f:	repz xchg ebx,eax
  40ed21:	int    0x9d
  40ed23:	shl    BYTE PTR ds:0x658d6479,1
  40ed29:	xor    ch,dl
  40ed2b:	inc    esi
  40ed2c:	lods   eax,DWORD PTR ds:[esi]
  40ed2d:	mov    ah,0xd2
  40ed2f:	inc    ebx
  40ed30:	xlat   BYTE PTR ds:[ebx]
  40ed31:	out    0x5d,eax
  40ed33:	cs in  al,0xb9
  40ed36:	ror    DWORD PTR [ebx-0x5c],1
  40ed39:	stc    
  40ed3a:	and    eax,0x63a1a6e9
  40ed3f:	and    dh,ah
  40ed41:	mov    edi,esp
  40ed43:	mov    dl,0x9c
  40ed45:	xlat   BYTE PTR ds:[ebx]
  40ed46:	push   esp
  40ed47:	data16 int3 
  40ed49:	xchg   ebp,esp
  40ed4b:	das    
  40ed4c:	push   eax
  40ed4d:	ds ins BYTE PTR es:[edi],dx
  40ed4f:	cmp    ecx,DWORD PTR [edx+0x21ea1c3]
  40ed55:	fnstenv [eax+0x3f58eaa]
  40ed5b:	mov    cs,WORD PTR [ecx+0x39]
  40ed5e:	sbb    eax,0x150bd60d
  40ed63:	leave  
  40ed64:	adc    DWORD PTR [eax+0x39447059],0x598bf1b0
  40ed6e:	in     al,dx
  40ed6f:	xchg   edx,eax
  40ed70:	in     al,dx
  40ed71:	mov    eax,ds:0xcde3ca38
  40ed76:	sbb    BYTE PTR [esp+eax*1-0x51feb109],cl
  40ed7d:	cld    
  40ed7e:	mov    ebx,0xf52c9f9a
  40ed83:	jo     0x40ed3e
  40ed85:	xchg   edi,eax
  40ed86:	sbb    BYTE PTR ds:0x26beacac,cl
  40ed8c:	and    bl,BYTE PTR [edx+0x29b1be96]
  40ed92:	adc    edx,DWORD PTR [esi-0x1c3ffa0b]
  40ed98:	and    al,0xd2
  40ed9a:	xor    DWORD PTR [ebx+0x1d],ebp
  40ed9d:	jb     0x40ed4a
  40ed9f:	in     eax,dx
  40eda0:	inc    ebx
  40eda1:	dec    edi
  40eda2:	xchg   BYTE PTR [ebp+0x59e6018c],cl
  40eda8:	add    eax,0xf4458b35
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx-0x4255ed90]
  40edd3:	mov    eax,ds:0xb2b7aa12
  40edd8:	sbb    BYTE PTR [eax],bl
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    al,dh
  40eddf:	cmp    eax,0x5c712904
  40ede4:	pop    edx
  40ede5:	sbb    esp,eax
  40ede7:	mov    ebp,0x57f5fcd2
  40edec:	in     eax,dx
  40eded:	bound  edx,QWORD PTR [ebx+0x72581232]
  40edf3:	outs   dx,DWORD PTR ds:[esi]
  40edf4:	dec    edx
  40edf5:	push   ds
  40edf6:	dec    edx
  40edf7:	add    bh,BYTE PTR [ebp+esi*4-0x44]
  40edfb:	mov    esp,0xcba93698
  40ee00:	xor    al,0xf0
  40ee02:	int    0xeb
  40ee04:	pop    esi
  40ee05:	pop    edx
  40ee06:	push   edi
  40ee07:	adc    eax,0x7fbcb08a
  40ee0c:	add    dl,0xb7
  40ee0f:	or     BYTE PTR [ebx+0x63],bl
  40ee12:	aad    0xd3
  40ee14:	mov    edx,0xfa72e9b6
  40ee19:	out    dx,eax
  40ee1a:	ins    DWORD PTR es:[edi],dx
  40ee1b:	sub    bl,BYTE PTR [edx+0x75581565]
  40ee21:	xlat   BYTE PTR ds:[ebx]
  40ee22:	sbb    edi,DWORD PTR [ebp+0x1c1678a6]
  40ee28:	or     BYTE PTR [ebx-0x37],bl
  40ee2b:	les    ecx,FWORD PTR [esi+0x5ae01e3e]
  40ee31:	dec    ecx
  40ee32:	mov    cl,0xb6
  40ee34:	mov    eax,0xb84a11d6
  40ee39:	push   esi
  40ee3a:	dec    ecx
  40ee3b:	push   eax
  40ee3c:	mov    edi,0x8df33790
  40ee41:	and    BYTE PTR [edi+0x61],ah
  40ee44:	and    bl,BYTE PTR ds:0xe72e7f58
  40ee4a:	sti    
  40ee4b:	add    DWORD PTR [edx],eax
  40ee4d:	push   edi
  40ee4e:	les    edi,FWORD PTR [eax-0x2d]
  40ee51:	mov    ebx,0xc296e215
  40ee56:	push   0xffffffc2
  40ee58:	pop    ss
  40ee59:	xor    ah,BYTE PTR [edx-0xa]
  40ee5c:	or     ebx,DWORD PTR [edi-0x2f]
  40ee5f:	inc    edi
  40ee60:	inc    ecx
  40ee61:	sub    esi,DWORD PTR [edi]
  40ee63:	xchg   edi,eax
  40ee64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee65:	ret    
  40ee66:	ins    DWORD PTR es:[edi],dx
  40ee67:	je     0x40ee83
  40ee69:	cmp    eax,0xf3e22e7
  40ee6e:	lods   al,BYTE PTR ds:[esi]
  40ee6f:	popa   
  40ee70:	xchg   esp,eax
  40ee71:	scas   al,BYTE PTR es:[edi]
  40ee72:	sar    DWORD PTR [ebp+0x410ac2c8],1
  40ee78:	imul   BYTE PTR [edx+0x62]
  40ee7b:	jb     0x40eef8
  40ee7d:	sti    
  40ee7e:	mov    dh,0x41
  40ee80:	pop    edi
  40ee81:	cli    
  40ee82:	rcl    BYTE PTR [ebx],0x7a
  40ee85:	xchg   ebx,eax
  40ee86:	adc    ch,BYTE PTR [ebx]
  40ee88:	xor    eax,0x349eac5c
  40ee8d:	ins    DWORD PTR es:[edi],dx
  40ee8e:	sbb    al,0x3b
  40ee90:	lds    ebp,FWORD PTR [ebx]
  40ee92:	jecxz  0x40eea3
  40ee94:	fcom   DWORD PTR [edi+0x36]
  40ee97:	or     bh,BYTE PTR [si]
  40ee9a:	rcr    DWORD PTR [esi],1
  40ee9c:	aaa    
  40ee9d:	pop    ds
  40ee9e:	and    ecx,ebp
  40eea0:	add    ah,BYTE PTR [ebp+0x1b]
  40eea3:	pop    ds
  40eea4:	test   al,bh
  40eea6:	dec    ebx
  40eea7:	into   
  40eea8:	mov    esi,0xdea9c097
  40eeae:	mov    al,ds:0x52c17ac5
  40eeb3:	sbb    al,0x56
  40eeb5:	lods   al,BYTE PTR ds:[esi]
  40eeb6:	sub    eax,0x445830bf
  40eebb:	jmp    0x40ef1c
  40eebd:	rol    BYTE PTR [eax-0x39f09e97],1
  40eec3:	xchg   ebx,eax
  40eec4:	xchg   BYTE PTR [ebp-0x75],dl
  40eec7:	pop    es
  40eec8:	in     al,dx
  40eec9:	jno    0x40eea0
  40eecb:	pop    ebp
  40eecc:	bound  esp,QWORD PTR [esi]
  40eece:	jb     0x40ee83
  40eed0:	push   cs
  40eed1:	out    0xae,eax
  40eed3:	pop    ss
  40eed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed5:	add    BYTE PTR [eax+0x30],ah
  40eed8:	out    0x6b,al
  40eeda:	or     dh,bh
  40eedc:	sbb    ebp,eax
  40eede:	les    edx,FWORD PTR [edi]
  40eee0:	cmp    DWORD PTR [esi+0x21],ebx
  40eee3:	aaa    
  40eee4:	sbb    esi,edi
  40eee6:	and    al,0x88
  40eee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eee9:	ins    BYTE PTR es:[edi],dx
  40eeea:	mov    ds:0xd13c2f88,al
  40eeef:	jb     0x40eef9
  40eef1:	ins    BYTE PTR es:[edi],dx
  40eef2:	(bad)  
  40eef3:	cmp    eax,0xc9d674b1
  40eef8:	xchg   ebx,eax
  40eef9:	jnp    0x40eebe
  40eefb:	adc    ebp,DWORD PTR [ebp+0x38818487]
  40ef01:	ret    
  40ef02:	xor    BYTE PTR [ebp-0x7ac81170],ah
  40ef08:	lea    bx,[esi+0x22]
  40ef0c:	lods   eax,DWORD PTR ds:[esi]
  40ef0d:	(bad)  
  40ef0e:	jmp    0x3a08:0xf2fa13e9
  40ef15:	rol    BYTE PTR [edi-0x56],0xfa
  40ef19:	div    BYTE PTR [edi+0x1cdc964a]
  40ef1f:	adc    eax,0x268425aa
  40ef24:	test   BYTE PTR [ebx+0x48e4a772],cl
  40ef2a:	xor    al,0xad
  40ef2c:	and    bl,BYTE PTR [esi-0x6b12112d]
  40ef32:	daa    
  40ef33:	aad    0x13
  40ef35:	jo     0x40ef86
  40ef37:	dec    DWORD PTR [ecx+0x23]
  40ef3a:	pusha  
  40ef3b:	dec    ebx
  40ef3c:	cmp    DWORD PTR [eax-0x462c3ed0],ebp
  40ef42:	mov    bh,0xb7
  40ef44:	out    dx,eax
  40ef45:	sub    dl,bh
  40ef47:	inc    esi
  40ef48:	ret    
  40ef49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef4a:	pop    esi
  40ef4b:	addr16 addr16 data16 sti 
  40ef4f:	ret    0x5f3f
  40ef52:	inc    edi
  40ef53:	push   esp
  40ef54:	jg     0x40ef76
  40ef56:	stos   DWORD PTR es:[edi],eax
  40ef57:	(bad)  
  40ef59:	enter  0x1017,0x55
  40ef5d:	imul   ecx,DWORD PTR [edx+0x57],0x8617b2bd
  40ef64:	repz pop ds
  40ef66:	lea    edx,[ebx]
  40ef68:	pop    ds
  40ef69:	and    al,dh
  40ef6b:	stos   BYTE PTR es:[edi],al
  40ef6c:	jae    0x40efcc
  40ef6e:	pop    esi
  40ef6f:	aad    0x3a
  40ef71:	faddp  st(1),st
  40ef73:	jl     0x40ef2d
  40ef75:	cmp    DWORD PTR [edi],0xffffffd2
  40ef78:	and    eax,0x2e390e4d
  40ef7d:	mov    edi,0x2682cbd3
  40ef82:	sahf   
  40ef83:	inc    ebx
  40ef84:	leave  
  40ef85:	in     al,0xf9
  40ef87:	mov    cl,0xcf
  40ef89:	ret    0x142d
  40ef8c:	stc    
  40ef8d:	outs   dx,DWORD PTR ss:[esi]
  40ef8f:	push   0xffffffb0
  40ef91:	inc    edx
  40ef92:	mov    al,0x61
  40ef94:	mov    bl,0xe1
  40ef96:	mov    ?,WORD PTR [ecx]
  40ef98:	loop   0x40ef2a
  40ef9a:	adc    BYTE PTR [eax-0x1c],bh
  40ef9d:	enter  0x3dbb,0xab
  40efa1:	scas   eax,DWORD PTR es:[edi]
  40efa2:	push   edi
  40efa3:	cs nop
  40efa5:	mov    cl,BYTE PTR [ebx-0x162b262e]
  40efab:	lods   eax,DWORD PTR ds:[esi]
  40efac:	xor    dl,BYTE PTR [esi-0x75fbc549]
  40efb2:	popa   
  40efb3:	jo     0x40ef5e
  40efb5:	mov    ds,WORD PTR [ecx-0xc0c59f2]
  40efbb:	(bad)  
  40efbc:	push   ds
  40efbd:	test   eax,0xb6f4d4bf
  40efc2:	paddb  mm5,QWORD PTR [edi+ebp*2-0x7c4683c2]
  40efca:	stos   DWORD PTR es:[edi],eax
  40efcb:	dec    ebx
  40efcc:	inc    edi
  40efcd:	pop    esi
  40efce:	(bad)  
  40efcf:	fs out 0xff,eax
  40efd2:	les    esp,FWORD PTR [ecx+0x51]
  40efd5:	mov    BYTE PTR ds:0x503a3be5,dh
  40efdb:	jb     0x40ef7c
  40efdd:	add    eax,0xb8dd830d
  40efe2:	and    al,BYTE PTR [eax]
  40efe4:	test   al,0xf4
  40efe7:	stos   BYTE PTR es:[edi],al
  40efe8:	(bad)  
  40efea:	or     BYTE PTR [edx],dh
  40efec:	or     eax,0xfe0d6aba
  40eff1:	mov    fs,edx
  40eff3:	out    0x17,al
  40eff5:	enter  0x8622,0x0
  40eff9:	xor    cl,BYTE PTR [eax+0x1c]
  40effc:	mov    eax,0xa8afed79
  40f001:	frstor [edi-0x41c65495]
  40f007:	xchg   esp,eax
  40f008:	sub    dh,BYTE PTR [eax]
  40f00a:	sbb    eax,0xc9fccf45
  40f00f:	push   ebx
  40f010:	dec    ecx
  40f011:	stos   BYTE PTR es:[edi],al
  40f012:	jno    0x40f009
  40f014:	adc    eax,0xb1f1101d
  40f019:	add    cl,cl
  40f01b:	sub    BYTE PTR [edx+0x6b6ba779],ah
  40f021:	mov    dh,0x54
  40f023:	pop    ecx
  40f024:	sbb    DWORD PTR [esi],0xffffffcf
  40f027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f028:	sbb    edx,DWORD PTR [ebx+ebp*4+0x1f534f80]
  40f02f:	lea    eax,[edx-0x13b2aea1]
  40f035:	sub    al,BYTE PTR ds:0xc2b27232
  40f03b:	jns    0x40f06e
  40f03d:	cli    
  40f03e:	xchg   ecx,eax
  40f03f:	push   es
  40f040:	dec    eax
  40f041:	push   ss
  40f042:	les    eax,FWORD PTR [eax-0x67]
  40f045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f046:	dec    esi
  40f047:	cs das 
  40f049:	add    BYTE PTR [ebx-0x2e],dh
  40f04c:	iret   
  40f04d:	mov    WORD PTR [ebp+0x7d],gs
  40f050:	lea    ebx,[edi]
  40f052:	xor    al,0xb6
  40f054:	sbb    BYTE PTR [edi],ch
  40f056:	add    BYTE PTR [edi-0x1c],bl
  40f059:	test   BYTE PTR [eax-0x12],dh
  40f05c:	js     0x40f07a
  40f05e:	int3   
  40f05f:	sub    BYTE PTR [ecx+0x57],dl
  40f062:	cwde   
  40f063:	jae    0x40f075
  40f065:	xor    al,0x1f
  40f067:	ja     0x40efef
  40f069:	stos   BYTE PTR es:[edi],al
  40f06a:	imul   eax,edx,0xb39c8ff7
  40f070:	mov    ebx,ebp
  40f072:	push   ebp
  40f073:	push   edx
  40f074:	shl    DWORD PTR [esi+0x27],1
  40f077:	pop    esp
  40f078:	lods   eax,DWORD PTR ds:[esi]
  40f079:	pop    ebx
  40f07a:	hlt    
  40f07b:	jmp    0x40f015
  40f07d:	js     0x40f0ca
  40f07f:	mov    ch,0x2a
  40f081:	mov    ah,0xe2
  40f083:	pop    ecx
  40f084:	or     DWORD PTR [edi],ecx
  40f086:	test   DWORD PTR [eax],ecx
  40f088:	idiv   edi
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xb2b:0xaa146552
  40f09f:	iret   
  40f0a0:	jo     0x40f112
  40f0a2:	scas   al,BYTE PTR es:[edi]
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [edi],dh
  40f0aa:	adc    edi,ecx
  40f0ac:	xor    BYTE PTR [esi],ch
  40f0ae:	adc    al,0x6a
  40f0b0:	outs   dx,BYTE PTR ds:[esi]
  40f0b1:	jmp    0xd136:0xb183b5e5
  40f0b8:	enter  0x4073,0x0
  40f0bc:	xchg   ecx,eax
  40f0bd:	fmulp  st(6),st
  40f0bf:	test   al,0xa5
  40f0c1:	aaa    
  40f0c2:	loopne 0x40f126
  40f0c4:	xor    al,0x8b
  40f0c6:	xor    BYTE PTR [ebx+0x2aa99feb],0xc8
  40f0cd:	jae    0x40f097
  40f0cf:	xor    DWORD PTR [edx-0x71155cf8],ebp
  40f0d5:	rcl    ebp,0x3a
  40f0d8:	adc    DWORD PTR [edx],0xe7ba5550
  40f0de:	xor    eax,DWORD PTR [si+0x20]
  40f0e2:	out    0x39,eax
  40f0e4:	jne    0x40f110
  40f0e6:	push   esp
  40f0e7:	adc    edx,DWORD PTR [edx+ebp*8]
  40f0ea:	add    BYTE PTR [edx-0x39],0x8d
  40f0ee:	xor    dl,cl
  40f0f0:	inc    eax
  40f0f1:	int    0xa
  40f0f3:	(bad)  
  40f0f4:	push   ebp
  40f0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f6:	mov    al,0x16
  40f0f8:	jecxz  0x40f0a7
  40f0fa:	mov    dl,0x4e
  40f0fc:	retf   
  40f0fd:	(bad)  
  40f0fe:	jg     0x40f0d8
  40f100:	cmp    al,0xb8
  40f102:	mov    ebp,0x595ea083
  40f107:	sub    esp,eax
  40f109:	cmp    al,0xe7
  40f10b:	adc    esp,DWORD PTR [esi-0x28c7e7d6]
  40f111:	ds daa 
  40f113:	(bad)  [esi]
  40f115:	jno    0x40f104
  40f117:	xchg   BYTE PTR [edx+esi*1-0x51],al
  40f11b:	sub    eax,0xd85c58b1
  40f120:	arpl   bx,dx
  40f122:	jg     0x40f0de
  40f124:	jmp    0xffdfa7ec
  40f129:	retf   
  40f12a:	jg     0x40f0b7
  40f12c:	pop    ebx
  40f12d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f12f:	jecxz  0x40f0fb
  40f131:	push   edx
  40f132:	fdivp  st(6),st
  40f134:	cmp    DWORD PTR [ebp-0x72f42828],0xffffffc1
  40f13b:	test   eax,0xaaafd891
  40f140:	mov    eax,ds:0xa91f20cb
  40f145:	xor    DWORD PTR [ecx-0x53e971c9],edi
  40f14b:	adc    eax,0x37fc51cb
  40f150:	je     0x40f0dd
  40f152:	adc    cl,BYTE PTR [edx]
  40f154:	fwait
  40f155:	jmp    0xa84709fa
  40f15a:	(bad)  
  40f15b:	fldenv [eax+0x2dc26fee]
  40f161:	lods   al,BYTE PTR ds:[esi]
  40f162:	retf   0xde7a
  40f165:	sub    BYTE PTR [ebx],bh
  40f167:	fst    QWORD PTR ds:0xaec9059
  40f16d:	push   ds
  40f16e:	mov    dl,ch
  40f170:	xchg   ecx,eax
  40f171:	and    BYTE PTR [edx+0x7bc4ba05],cl
  40f177:	and    DWORD PTR [edx],ebp
  40f179:	jg     0x40f14b
  40f17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f17c:	mov    ebx,0x6858aea2
  40f181:	mov    edx,0x17f40785
  40f186:	out    0x53,al
  40f188:	mov    eax,0x2522a6e7
  40f18d:	cmp    DWORD PTR [eax],ecx
  40f18f:	lods   eax,DWORD PTR ds:[esi]
  40f190:	mov    eax,0xfdb89aaa
  40f195:	adc    dl,BYTE PTR [eax]
  40f197:	push   edi
  40f198:	data16 lock (bad) 
  40f19b:	stc    
  40f19c:	jge    0x40f150
  40f19e:	push   eax
  40f19f:	fdivr  DWORD PTR [bx+di-0x3749]
  40f1a4:	loop   0x40f13b
  40f1a6:	cli    
  40f1a7:	dec    ecx
  40f1a8:	iret   
  40f1a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1aa:	jb     0x40f1d7
  40f1ac:	fld    QWORD PTR [edi-0x5445c81a]
  40f1b2:	addr16 cmp cl,dl
  40f1b5:	inc    esi
  40f1b6:	test   DWORD PTR [ebx+0x5e],edi
  40f1b9:	mov    ecx,0x9ed01483
  40f1be:	fcom   DWORD PTR [ebp-0x7d2dc129]
  40f1c4:	repz jmp 0x438a:0x2be51dca
  40f1cc:	enter  0x1a74,0xfb
  40f1d0:	add    ebp,DWORD PTR [edx+0x48ca924d]
  40f1d6:	push   esi
  40f1d7:	xchg   ecx,eax
  40f1d8:	shl    DWORD PTR [ebp+0x6c],1
  40f1db:	inc    esp
  40f1dc:	ror    BYTE PTR [ecx+0x44c890cd],cl
  40f1e2:	ror    BYTE PTR [ebp-0x74966585],0x17
  40f1e9:	dec    BYTE PTR [edi]
  40f1eb:	mov    esp,0x4da52447
  40f1f0:	xor    bh,ch
  40f1f2:	mov    dl,0x91
  40f1f4:	xchg   esp,eax
  40f1f5:	sub    ebx,DWORD PTR ds:0x75009291
  40f1fb:	into   
  40f1fc:	cdq    
  40f1fd:	jl     0x40f1cd
  40f1ff:	and    dh,BYTE PTR [ebx-0x35]
  40f202:	push   0xffffff84
  40f204:	mov    ch,0x1f
  40f206:	shl    DWORD PTR [edx-0x338a4d24],1
  40f20c:	sub    eax,0x63548c06
  40f211:	xor    al,0x8c
  40f213:	mov    eax,0x432a37c7
  40f218:	xor    dl,BYTE PTR [ebp-0x17]
  40f21b:	jp     0x40f1ac
  40f21d:	sbb    ebx,esp
  40f21f:	jno    0x40f1d8
  40f221:	in     eax,0x7
  40f223:	ret    0x3037
  40f226:	pop    ebp
  40f227:	inc    ebx
  40f228:	mov    al,ds:0x4c2f2c20
  40f22d:	cmp    DWORD PTR [edi],esi
  40f22f:	xor    esi,esi
  40f231:	add    eax,0xfae105d9
  40f236:	loop   0x40f24c
  40f238:	push   ds
  40f239:	jo     0x40f1fb
  40f23b:	rcr    ebp,1
  40f23d:	lea    esi,[eax-0x1e]
  40f240:	cmp    DWORD PTR [esi+eiz*4+0x73b78ff],esi
  40f247:	call   0x3bfde1f
  40f24c:	fistp  DWORD PTR [ecx+0x5c]
  40f24f:	push   edi
  40f250:	aas    
  40f251:	sub    al,BYTE PTR [esi+edx*2-0x2b]
  40f255:	dec    ecx
  40f256:	icebp  
  40f257:	cmp    al,0xa3
  40f259:	out    dx,eax
  40f25a:	cli    
  40f25b:	fs pop ebx
  40f25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f25e:	push   es
  40f25f:	pop    DWORD PTR [ebx-0x1520431c]
  40f265:	loopne 0x40f209
  40f267:	ja     0x40f213
  40f269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f26a:	retf   0x28e8
  40f26d:	push   ebp
  40f26e:	sahf   
  40f26f:	dec    eax
  40f270:	xchg   esp,eax
  40f271:	jg     0x40f1f3
  40f273:	mov    eax,esp
  40f275:	das    
  40f276:	xor    cl,0x28
  40f279:	mov    eax,ds:0xa2a62a6a
  40f27e:	inc    eax
  40f27f:	lahf   
  40f280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f281:	push   ebp
  40f282:	fsubp  st(2),st
  40f284:	fsub   st,st(6)
  40f286:	es mul bl
  40f289:	aad    0xf4
  40f28b:	leave  
  40f28c:	test   DWORD PTR [edi+eax*2],esp
  40f28f:	aam    0xee
  40f291:	mov    WORD PTR [ebx],?
  40f293:	hlt    
  40f294:	mov    DWORD PTR [edx+0x38b715c9],edx
  40f29a:	shr    DWORD PTR [ecx+ebp*2-0x5476bf3b],1
  40f2a1:	loope  0x40f273
  40f2a3:	lahf   
  40f2a4:	inc    esp
  40f2a5:	adc    BYTE PTR [esi+0x5c],dh
  40f2a8:	xor    al,0xc8
  40f2aa:	ss inc ecx
  40f2ac:	pop    edi
  40f2ad:	push   ebp
  40f2ae:	jmp    0xaec4261f
  40f2b3:	mov    edi,0x3a64de12
  40f2b8:	jb     0x40f26f
  40f2ba:	fsubr  QWORD PTR [esi+0x1b97367]
  40f2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c1:	scas   al,BYTE PTR es:[edi]
  40f2c2:	sbb    ch,BYTE PTR [ebx]
  40f2c4:	loope  0x40f2e9
  40f2c6:	std    
  40f2c7:	ret    
  40f2c8:	xor    ah,BYTE PTR [ebp+0x7e]
  40f2cb:	rol    BYTE PTR [eax-0x3c251ad0],0x45
  40f2d2:	mov    edx,ecx
  40f2d4:	out    0x92,al
  40f2d6:	add    eax,0xa5033367
  40f2db:	inc    eax
  40f2dc:	xchg   edi,eax
  40f2dd:	sbb    DWORD PTR [edx],ebp
  40f2df:	mov    ds:0xf7090d2c,eax
  40f2e4:	daa    
  40f2e5:	push   cs
  40f2e6:	retf   0x2c58
  40f2e9:	fsubp  st(7),st
  40f2eb:	adc    al,0x99
  40f2ed:	add    eax,0xcb2558af
  40f2f2:	mov    edi,edi
  40f2f4:	mov    eax,ds:0x9dd68c08
  40f2f9:	jns    0x40f27c
  40f2fb:	dec    esp
  40f2fc:	data16 int3 
  40f2fe:	add    ebp,DWORD PTR [ebx+0x41]
  40f301:	adc    edx,ebp
  40f303:	pop    edi
  40f304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f305:	out    0x1d,eax
  40f307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f308:	xor    BYTE PTR [edx],cl
  40f30a:	dec    edx
  40f30b:	test   al,0xb6
  40f30d:	daa    
  40f30e:	adc    bl,bl
  40f310:	lods   eax,DWORD PTR ds:[esi]
  40f311:	and    DWORD PTR es:[eax-0xb],0xffffffc6
  40f316:	push   ebx
  40f317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f318:	call   0xa424:0xe4c6d644
  40f31f:	ret    0x81d8
  40f322:	(bad)  
  40f323:	xor    ebp,DWORD PTR ss:[edx+0x4d234a71]
  40f32a:	lock pxor mm5,QWORD PTR [ecx-0x4]
  40f32f:	jne    0x40f362
  40f331:	repnz pop ebp
  40f333:	inc    ecx
  40f334:	xchg   ebp,eax
  40f335:	xor    ch,BYTE PTR [eax]
  40f337:	adc    BYTE PTR ds:0x87abf2e2,cl
  40f33d:	sbb    DWORD PTR [edx-0x6f],esi
  40f340:	shr    DWORD PTR [edx],cl
  40f342:	jecxz  0x40f2f8
  40f344:	mov    al,ds:0xcfd5aca1
  40f349:	ja     0x40f2dc
  40f34b:	fidiv  DWORD PTR [esi+0x2c]
  40f34e:	mov    bh,0xfe
  40f350:	pop    esi
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x4f
  40f384:	mov    ecx,0xa82baae3
  40f389:	sbb    BYTE PTR [eax],bl
  40f38b:	mov    esi,0xa9181814
  40f390:	pop    ebx
  40f391:	inc    ebp
  40f392:	sub    DWORD PTR [edx],edi
  40f394:	add    DWORD PTR [edx],edi
  40f396:	sbb    al,bh
  40f398:	push   es
  40f399:	push   0x8f5edf42
  40f39e:	push   ebx
  40f39f:	pop    eax
  40f3a0:	push   es
  40f3a1:	sti    
  40f3a2:	dec    esi
  40f3a3:	push   0x23dbc691
  40f3a8:	mov    BYTE PTR [esi+0x621738d2],dl
  40f3ae:	cmc    
  40f3af:	scas   al,BYTE PTR es:[edi]
  40f3b0:	jmp    0x86cd:0xb93d2996
  40f3b7:	test   ebp,esi
  40f3b9:	and    DWORD PTR [eax],ebx
  40f3bb:	sbb    eax,0xe1bd6ac4
  40f3c0:	test   DWORD PTR [edi+0x17ea5c45],esp
  40f3c6:	scas   al,BYTE PTR es:[edi]
  40f3c7:	call   0x38d7:0x68dd61c1
  40f3ce:	sbb    ah,BYTE PTR [ebp-0x1775d1f6]
  40f3d4:	(bad)
  40f3d7:	inc    edi
  40f3d8:	xchg   ecx,eax
  40f3d9:	mov    bp,0xd46e
  40f3dd:	push   cs
  40f3de:	dec    esi
  40f3df:	ficomp WORD PTR [ebx+0x2f]
  40f3e2:	addr16 dec ebp
  40f3e4:	pushf  
  40f3e5:	inc    ebp
  40f3e6:	scas   al,BYTE PTR es:[edi]
  40f3e7:	and    al,BYTE PTR [eax*2+0x7562ae0e]
  40f3ee:	data16 cmp BYTE PTR [eax+0x5bd94d91],cl
  40f3f5:	ja     0x40f3d5
  40f3f7:	stc    
  40f3f8:	mov    ebp,ss
  40f3fa:	mov    esp,0xfe15abaf
  40f3ff:	mov    eax,0xa0ce0156
  40f404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f405:	adc    al,0x39
  40f407:	(bad)  [ecx+0xb41304d]
  40f40d:	xor    BYTE PTR [edx+0x1d3b24c4],bl
  40f413:	fstp   QWORD PTR [edi+0x5b32bd7b]
  40f419:	jno    0x40f3fd
  40f41b:	fnstenv [esi]
  40f41d:	mov    ebx,0x92a27f9c
  40f422:	leave  
  40f423:	ds int 0x3f
  40f426:	fmul   st(5),st
  40f428:	test   ebp,0xc904950c
  40f42e:	cmp    BYTE PTR [ecx],bl
  40f430:	jg     0x40f423
  40f432:	mul    dl
  40f434:	push   edi
  40f435:	push   0xd647f7f7
  40f43a:	jno    0x40f442
  40f43c:	jg     0x40f40a
  40f43e:	mov    WORD PTR [edx-0x19c89927],ds
  40f444:	inc    ecx
  40f445:	nop
  40f446:	das    
  40f447:	inc    ecx
  40f448:	add    eax,DWORD PTR [esi-0x45]
  40f44b:	pop    esi
  40f44c:	js     0x40f3d4
  40f44e:	mov    eax,ds:0x6bc82f34
  40f453:	sbb    ch,0x19
  40f456:	xchg   BYTE PTR ds:0x1321eb99,dh
  40f45c:	xor    al,0xf0
  40f45e:	aad    0x79
  40f460:	sysexit 
  40f462:	addr16 jge 0x40f3fa
  40f465:	sbb    cl,BYTE PTR [ecx-0x45242792]
  40f46b:	ds add al,0x58
  40f46e:	clc    
  40f46f:	mov    edi,0x15ffd30f
  40f474:	clc    
  40f475:	sti    
  40f476:	rol    DWORD PTR [esi+0x39],cl
  40f479:	sbb    eax,0x7b6b4930
  40f47e:	ds cli 
  40f480:	iret   
  40f481:	stc    
  40f482:	pop    esp
  40f483:	xor    al,0xdd
  40f485:	inc    ecx
  40f486:	jno    0x40f418
  40f488:	mov    dh,0x19
  40f48a:	bound  edx,QWORD PTR [edi]
  40f48c:	cmc    
  40f48d:	push   ecx
  40f48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f48f:	les    eax,FWORD PTR [ebp+ebx*1-0x65]
  40f493:	jns    0x40f42d
  40f495:	jge    0x40f41a
  40f497:	pusha  
  40f498:	mov    al,ds:0xc2dc8beb
  40f49d:	stos   BYTE PTR es:[edi],al
  40f49e:	mov    esi,0x1e86f880
  40f4a3:	mov    ah,0x82
  40f4a5:	jmp    0xf457:0x35fc5314
  40f4ac:	sbb    DWORD PTR [esi-0x7c],edi
  40f4af:	addr16 es (bad) 
  40f4b2:	hlt    
  40f4b3:	add    DWORD PTR [esi+0x70],ebp
  40f4b6:	jmp    0xa67f:0x7064016b
  40f4bd:	mov    ebp,0x2a43f636
  40f4c2:	push   ss
  40f4c3:	dec    eax
  40f4c4:	xchg   ebx,eax
  40f4c5:	loope  0x40f52d
  40f4c7:	xchg   ecx,eax
  40f4c8:	jbe    0x40f4e3
  40f4ca:	mov    al,0xd1
  40f4cc:	iret   
  40f4cd:	mov    BYTE PTR [ebx+edx*1-0x4f],0x87
  40f4d2:	inc    ecx
  40f4d3:	test   al,0xc2
  40f4d5:	xchg   edx,eax
  40f4d6:	setae  BYTE PTR [esp+ebp*2-0x3a]
  40f4db:	repnz push 0xaa41c110
  40f4e1:	or     al,0x3b
  40f4e3:	add    ebp,DWORD PTR [edx-0x56]
  40f4e6:	add    DWORD PTR [edx+0x3c314f97],esp
  40f4ec:	lock push ebp
  40f4ee:	sbb    ebx,edi
  40f4f0:	xor    eax,0xcc71e8c
  40f4f5:	mov    ds:0x4cef7ac3,al
  40f4fa:	mov    esi,0x2645fbab
  40f4ff:	(bad)  
  40f500:	cmp    BYTE PTR [ecx],ch
  40f502:	and    eax,0xb7fbfb1f
  40f507:	cmc    
  40f508:	(bad)  
  40f509:	xchg   edx,eax
  40f50a:	ret    
  40f50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f50c:	data16 sbb WORD PTR [eax],cx
  40f510:	sub    DWORD PTR [eax+0x41],ebp
  40f513:	call   0x6a48291a
  40f518:	xchg   ebp,eax
  40f519:	and    BYTE PTR [eax-0x28812575],cl
  40f51f:	xchg   esi,eax
  40f520:	jbe    0x40f572
  40f522:	clc    
  40f523:	mov    dh,0xaa
  40f525:	pop    esp
  40f526:	xor    al,0x91
  40f528:	dec    ecx
  40f529:	dec    eax
  40f52a:	inc    esi
  40f52b:	push   ss
  40f52c:	ss addr16 daa 
  40f52f:	lock or bh,BYTE PTR [ebp-0x4ee395d2]
  40f536:	mov    cl,0x9e
  40f538:	push   edx
  40f539:	and    ebp,DWORD PTR [esp+ecx*8-0x40]
  40f53d:	aas    
  40f53e:	mov    edx,0x5a0f1589
  40f543:	enter  0x92,0x97
  40f547:	aad    0xc0
  40f549:	xchg   edx,eax
  40f54a:	sub    eax,0xdb3bfc38
  40f54f:	xchg   ebp,eax
  40f550:	xlat   BYTE PTR ds:[ebx]
  40f551:	xchg   BYTE PTR [esi+0xc],ch
  40f554:	nop    DWORD PTR [edi+0x7eef8c63]
  40f55b:	add    ebx,esp
  40f55d:	aam    0xe6
  40f55f:	push   esi
  40f560:	lahf   
  40f561:	push   ss
  40f562:	icebp  
  40f563:	popf   
  40f564:	or     ecx,DWORD PTR ds:[esp+edx*1]
  40f568:	(bad)  
  40f569:	std    
  40f56a:	mov    DWORD PTR [ecx+0x33],edx
  40f56d:	adc    ch,bh
  40f56f:	inc    ebx
  40f570:	sbb    bh,al
  40f572:	lock outs dx,BYTE PTR es:[esi]
  40f575:	mov    bl,0x0
  40f577:	push   ebp
  40f578:	mov    eax,ds:0x2f63c44f
  40f57d:	jmp    0x40f57a
  40f57f:	imul   edi,edi,0xf991a96f
  40f585:	test   al,0x8c
  40f587:	dec    eax
  40f588:	inc    ebp
  40f589:	jge    0x40f512
  40f58b:	cmp    ebp,edi
  40f58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f58e:	shr    BYTE PTR [edi],1
  40f590:	dec    ecx
  40f591:	das    
  40f592:	dec    edx
  40f593:	push   edx
  40f594:	mov    BYTE PTR [ebp+edi*4-0x5d],bl
  40f598:	rol    DWORD PTR [ebx+0x29],1
  40f59b:	mov    eax,0x18cf6746
  40f5a0:	push   ebp
  40f5a1:	in     eax,0x32
  40f5a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a4:	ins    DWORD PTR es:[edi],dx
  40f5a5:	adc    DWORD PTR [eax],esp
  40f5a7:	and    BYTE PTR [ecx],dl
  40f5a9:	dec    BYTE PTR [ecx]
  40f5ab:	pop    ebx
  40f5ac:	cmp    al,0xd7
  40f5ae:	cmp    BYTE PTR [ebx+0x3d87781c],bl
  40f5b4:	je     0x40f615
  40f5b6:	adc    eax,0x8ffe7911
  40f5bb:	dec    esp
  40f5bc:	in     al,0xf4
  40f5be:	mov    al,ds:0x33c22365
  40f5c3:	cmp    cl,BYTE PTR [ebp+edi*8-0x6e]
  40f5c7:	fld    QWORD PTR [edi+edi*8-0x66]
  40f5cb:	cmpps  xmm4,XMMWORD PTR [esi-0x466620e4],0x69
  40f5d3:	push   esp
  40f5d4:	and    al,0xbc
  40f5d6:	inc    ebx
  40f5d7:	push   esp
  40f5d8:	and    al,0x7a
  40f5da:	cs call 0x272a6d7e
  40f5e0:	lods   eax,DWORD PTR ds:[esi]
  40f5e1:	in     eax,0x28
  40f5e3:	jle    0x40f5dc
  40f5e5:	cmp    al,0x40
  40f5e7:	or     eax,0xcce9ba5d
  40f5ec:	sub    al,0xbf
  40f5ee:	pop    es
  40f5ef:	call   0x4f144f5e
  40f5f4:	dec    BYTE PTR [eax+0x4f585d82]
  40f5fa:	mov    ebp,0xb865bbcb
  40f5ff:	xor    al,0xc1
  40f601:	push   ebx
  40f602:	mov    dh,0x6f
  40f604:	jae    0x40f634
  40f606:	jno    0x40f5fa
  40f608:	ror    BYTE PTR [ebp-0x77],1
  40f60b:	not    DWORD PTR [edi+0x710a3e98]
  40f611:	jo     0x40f61d
  40f613:	ds xchg esp,eax
  40f615:	and    DWORD PTR [edx],edx
  40f617:	ins    BYTE PTR es:[edi],dx
  40f618:	(bad)  
  40f619:	bnd ja 0x40f682
  40f61c:	mov    bh,0x9b
  40f61e:	jmp    0x40f64a
  40f620:	es jne 0x40f616
  40f623:	jo     0x40f684
  40f625:	iret   
  40f626:	add    eax,0x62544f56
  40f62b:	int3   
  40f62c:	mov    BYTE PTR [edx+0x28d33bef],dl
  40f632:	mov    bh,0xc1
  40f634:	out    dx,al
  40f635:	dec    ecx
  40f636:	mov    ch,BYTE PTR [eax-0x59]
  40f639:	out    0x99,al
  40f63b:	imul   edi,DWORD PTR [ebx-0x74d655e4],0x4d
  40f642:	clc    
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422568
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42269c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x4114da39],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	or     BYTE PTR ds:0x971ff863,ch
  40f737:	pop    esp
  40f738:	out    dx,eax
  40f739:	add    eax,0x82916834
  40f73e:	out    dx,al
  40f73f:	out    0xac,al
  40f741:	add    BYTE PTR [edx+0x635acad2],0xa9
  40f748:	(bad)  
  40f74a:	xchg   BYTE PTR [ecx+eiz*4-0x5f3ecd9e],ch
  40f751:	push   esi
  40f752:	aad    0x8d
  40f754:	dec    ebp
  40f755:	jae    0x40f72f
  40f757:	pop    ds
  40f758:	push   ecx
  40f759:	in     al,dx
  40f75a:	ror    eax,0x5e
  40f75d:	jae    0x40f76f
  40f75f:	xor    eax,0x64e15c93
  40f764:	cmc    
  40f765:	mov    WORD PTR [eax-0x62],?
  40f768:	shr    DWORD PTR [edi+0x55],1
  40f76b:	sbb    eax,0x6bcf9357
  40f770:	and    al,0xf1
  40f772:	jno    0x40f724
  40f774:	xor    BYTE PTR [ebp-0x5126e4de],bh
  40f77a:	sbb    ebx,DWORD PTR ds:[ebx]
  40f77d:	push   ecx
  40f77e:	adc    dh,cl
  40f780:	inc    esi
  40f781:	fdivr  st,st(5)
  40f783:	int    0x21
  40f785:	mov    bh,0x90
  40f787:	add    eax,DWORD PTR [eax+0x0]
  40f78a:	lods   al,BYTE PTR ds:[esi]
  40f78b:	retf   
  40f78c:	fmul   DWORD PTR [ecx+0x33f906b]
  40f792:	add    DWORD PTR [ebp+0x72],0xc3c833bd
  40f799:	fist   WORD PTR [ebx+0x792fc62]
  40f79f:	hlt    
  40f7a0:	outs   dx,DWORD PTR ds:[esi]
  40f7a1:	popa   
  40f7a2:	aas    
  40f7a3:	jmp    0x1845868
  40f7a8:	pop    ebx
  40f7a9:	jb     0x40f7cb
  40f7ab:	pusha  
  40f7ac:	out    0xa2,eax
  40f7ae:	icebp  
  40f7af:	sbb    BYTE PTR [esi],0x3e
  40f7b2:	in     eax,dx
  40f7b3:	sbb    DWORD PTR cs:[ecx+ebx*8+0x42d6f753],edi
  40f7bb:	and    DWORD PTR [edi],eax
  40f7bd:	jge    0x40f771
  40f7bf:	(bad)  
  40f7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7c1:	call   0x6e:0x40e86ab7
  40f7c8:	leave  
  40f7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ca:	inc    ecx
  40f7cb:	push   cs
  40f7cc:	addr16 push esp
  40f7ce:	out    dx,al
  40f7cf:	mov    ds:0x2d513caa,al
  40f7d4:	push   edx
  40f7d5:	not    BYTE PTR [esi+0xbe09859]
  40f7db:	out    0x92,al
  40f7dd:	(bad)  
  40f7de:	ss pop ss
  40f7e0:	shl    BYTE PTR [edi+0x62186f87],0x6f
  40f7e7:	idiv   BYTE PTR ds:0x5f2ceea0
  40f7ee:	and    eax,0xc02d518
  40f7f3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7f6:	inc    edi
  40f7f7:	mov    eax,ds:0x849ba7d6
  40f7fc:	aam    0x68
  40f7fe:	imul   ebx,edx,0x8
  40f801:	jb     0x40f7aa
  40f803:	add    edx,DWORD PTR gs:[ecx]
  40f806:	pop    ss
  40f807:	jnp    0x40f792
  40f809:	(bad)  
  40f80a:	or     BYTE PTR [eax+0x3450970e],dh
  40f810:	test   al,0xfb
  40f812:	inc    esi
  40f813:	or     BYTE PTR [edi-0x30],dl
  40f816:	mov    ebx,0x364e42b4
  40f81b:	mov    ah,0xcf
  40f81d:	pop    eax
  40f81e:	jnp    0x40f7b8
  40f820:	mov    dh,0x8d
  40f822:	cdq    
  40f823:	clc    
  40f824:	dec    ebp
  40f825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f826:	xchg   edi,eax
  40f827:	cli    
  40f828:	push   0x8166ebe8
  40f82d:	jle    0x40f822
  40f82f:	push   esi
  40f830:	add    bl,ch
  40f832:	mov    ds:0x6b210548,al
  40f837:	mov    dl,0xd5
  40f839:	inc    edx
  40f83a:	xchg   esp,eax
  40f83b:	mov    WORD PTR [esi-0x23ada3c3],ds
  40f841:	xchg   ebx,eax
  40f842:	out    dx,al
  40f843:	test   eax,0x6257effa
  40f848:	adc    eax,0x5ba575cc
  40f84d:	inc    esp
  40f84e:	xor    al,0x5
  40f850:	mov    al,ds:0xf579c0b
  40f855:	add    DWORD PTR [ecx+edi*1+0x6e],ecx
  40f859:	xor    DWORD PTR [ecx-0x59],eax
  40f85c:	int3   
  40f85d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f85e:	jns    0x40f8a2
  40f860:	adc    al,0x42
  40f862:	repnz or dh,BYTE PTR [ebx+0x1f]
  40f866:	sub    al,0x70
  40f868:	not    BYTE PTR [ecx-0x7aed26d5]
  40f86e:	xor    ch,dl
  40f870:	xchg   ebx,eax
  40f871:	push   esp
  40f872:	(bad)  
  40f873:	sub    eax,0x904f9bac
  40f878:	(bad)  
  40f879:	push   edx
  40f87a:	xor    BYTE PTR [ebp-0xac1ca75],dh
  40f880:	push   ebp
  40f881:	das    
  40f882:	shl    DWORD PTR [ecx-0x45],cl
  40f885:	push   ss
  40f886:	xchg   ebp,eax
  40f887:	cmp    eax,0xce5b40c0
  40f88c:	add    al,0x52
  40f88e:	jne    0x40f827
  40f890:	mov    bh,0x9e
  40f892:	adc    DWORD PTR ds:[ebp-0x15038615],esi
  40f899:	jp     0x40f846
  40f89b:	cli    
  40f89c:	inc    ebx
  40f89d:	xchg   esp,eax
  40f89e:	std    
  40f89f:	mov    dh,0xc1
  40f8a1:	pop    esi
  40f8a2:	jno    0x40f8ff
  40f8a4:	ret    
  40f8a5:	xor    al,0xc0
  40f8a7:	cdq    
  40f8a8:	vdivsd xmm1,xmm3,xmm3
  40f8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ad:	in     eax,0x37
  40f8af:	adc    eax,0xed9574d1
  40f8b4:	std    
  40f8b5:	inc    ecx
  40f8b6:	retf   
  40f8b7:	adc    edx,DWORD PTR [si]
  40f8ba:	test   DWORD PTR [ecx+edx*4+0x62e96566],ebp
  40f8c1:	sbb    DWORD PTR [esi-0x820465e],ecx
  40f8c7:	mov    WORD PTR [esp+edx*2-0x60],ss
  40f8cb:	jge    0x40f8c5
  40f8cd:	xor    edi,esp
  40f8cf:	fs stc 
  40f8d1:	loope  0x40f8d4
  40f8d3:	sti    
  40f8d4:	fbstp  TBYTE PTR [ecx+0x5f]
  40f8d7:	shl    DWORD PTR ds:0x951b5e5b,1
  40f8dd:	jg     0x40f926
  40f8df:	iret   
  40f8e0:	adc    bl,BYTE PTR [esi+eax*1]
  40f8e3:	xchg   edx,eax
  40f8e4:	sub    bh,BYTE PTR [ebx-0x7a]
  40f8e7:	push   ebp
  40f8e8:	xor    al,0xfc
  40f8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8eb:	jb     0x40f8ed
  40f8ed:	or     dh,al
  40f8ef:	pop    eax
  40f8f0:	inc    esi
  40f8f1:	icebp  
  40f8f2:	fisttp WORD PTR [edx+0x60]
  40f8f5:	xchg   edi,eax
  40f8f6:	cld    
  40f8f7:	adc    bl,BYTE PTR [ebx+0x7f65f5fa]
  40f8fd:	jnp    0x40f8f0
  40f8ff:	addr16 inc edx
  40f901:	inc    eax
  40f902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f903:	push   cs
  40f904:	dec    edx
  40f905:	popa   
  40f906:	adc    DWORD PTR [esi+0x1e],eax
  40f909:	aad    0xdd
  40f90b:	sub    DWORD PTR [ebp+0x46b8c16d],ecx
  40f911:	push   esp
  40f912:	imul   esi
  40f914:	enter  0x6c4c,0xfc
  40f918:	xchg   edi,eax
  40f919:	iret   
  40f91a:	leave  
  40f91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f91c:	sar    BYTE PTR [ebp-0x5ace53f9],1
  40f922:	dec    edx
  40f923:	psubsw mm0,QWORD PTR [ecx+eiz*4+0x4d]
  40f928:	or     DWORD PTR [esi],edi
  40f92a:	sbb    esi,edi
  40f92c:	je     0x40f95f
  40f92e:	out    0x74,eax
  40f930:	dec    esi
  40f931:	cmp    dh,ah
  40f933:	movaps XMMWORD PTR [ecx],xmm0
  40f936:	(bad)  
  40f937:	test   al,0x90
  40f939:	pop    ebx
  40f93a:	std    
  40f93b:	int    0x9f
  40f93d:	jge    0x40f94b
  40f93f:	and    ebx,DWORD PTR [ecx+0x6cb99a2d]
  40f945:	add    DWORD PTR [edx-0x3],0xfffffff7
  40f949:	and    ah,dh
  40f94b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f94c:	jecxz  0x40f9ca
  40f94e:	or     eax,0xc659de13
  40f953:	push   ebp
  40f954:	add    ebp,esi
  40f956:	mov    edx,0x307ca8d
  40f95b:	and    al,0xe7
  40f95d:	push   esp
  40f95e:	fwait
  40f95f:	mov    eax,0xfb3720e3
  40f964:	sbb    BYTE PTR [esi-0x29],bh
  40f967:	cdq    
  40f968:	xchg   esi,eax
  40f969:	xchg   BYTE PTR [ebp+0x1c],al
  40f96c:	and    BYTE PTR [edx],al
  40f96e:	shr    DWORD PTR [edi],0x28
  40f971:	les    edx,FWORD PTR [ebx-0x719e047a]
  40f977:	lock dec ecx
  40f979:	dec    esi
  40f97a:	jmp    edi
  40f97c:	mov    al,0xa2
  40f97e:	aaa    
  40f97f:	push   eax
  40f980:	dec    di
  40f982:	clc    
  40f983:	data16 lahf 
  40f985:	fwait
  40f986:	push   0xfffffffe
  40f988:	lods   eax,DWORD PTR ds:[esi]
  40f989:	and    ecx,DWORD PTR [esi-0x78]
  40f98c:	mov    ds:0x2e79668e,al
  40f991:	(bad)  
  40f992:	jl     0x40fa01
  40f994:	xchg   ebx,eax
  40f995:	lods   eax,DWORD PTR ds:[esi]
  40f996:	xchg   ebp,eax
  40f997:	adc    al,0xcb
  40f999:	pop    ebp
  40f99a:	mov    bl,0x5
  40f99c:	out    dx,al
  40f99d:	adc    bl,bl
  40f99f:	call   0x55f666e9
  40f9a4:	gs push ebx
  40f9a6:	add    al,0x28
  40f9a8:	cmp    eax,0xa815f37f
  40f9ad:	push   ss
  40f9ae:	ja     0x40f956
  40f9b0:	or     BYTE PTR [eax+ebp*8],cl
  40f9b3:	shl    DWORD PTR [ecx+0x7c],0xa5
  40f9b7:	not    ah
  40f9b9:	mov    al,0x19
  40f9bb:	int    0x24
  40f9bd:	(bad)  [esi]
  40f9bf:	gs test al,0x1c
  40f9c2:	adc    al,dl
  40f9c4:	ucomiss xmm7,DWORD PTR [edx-0x6b]
  40f9c8:	loope  0x40f957
  40f9ca:	mov    edi,0x4272727c
  40f9cf:	push   esp
  40f9d0:	inc    eax
  40f9d1:	or     eax,0x603e37df
  40f9d6:	out    0x9f,al
  40f9d8:	xchg   ebx,eax
  40f9d9:	loop   0x40f9e8
  40f9db:	mov    ebp,0x78a074bd
  40f9e0:	pop    ds
  40f9e1:	fsubr  DWORD PTR [ebx]
  40f9e3:	shl    DWORD PTR ds:0xc3e,0x89
  40f9ea:	inc    ebp
  40f9eb:	test   al,0xc7
  40f9ed:	inc    ebp
  40f9ee:	in     al,dx
  40f9ef:	mov    ebp,0x59000066
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x422078
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x23154370]
  40fc87:	stos   BYTE PTR es:[edi],al
  40fc88:	jbe    0x40fc28
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0x18181814
  40fc91:	jmp    0x6590:0x73322748
  40fc98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc99:	imul   ebx,DWORD PTR [esi-0x6ca6991],0xffffffe8
  40fca0:	enter  0xb6b8,0x7c
  40fca4:	sbb    bl,bh
  40fca6:	mov    ebx,0xfc284317
  40fcab:	dec    ecx
  40fcac:	jg     0x40fc89
  40fcae:	mov    ds:0x9b697a27,al
  40fcb3:	cmp    BYTE PTR [eax+0x16],dh
  40fcb6:	sub    al,BYTE PTR [esi-0x6719c1cd]
  40fcbc:	dec    edi
  40fcbd:	fild   QWORD PTR [ebx-0x12]
  40fcc0:	add    ch,al
  40fcc2:	bound  edx,QWORD PTR [edx+0x1e4ce303]
  40fcc8:	jmp    0x40fd3e
  40fcca:	pop    ds
  40fccb:	fiadd  WORD PTR [edi+0x7fb82f61]
  40fcd1:	mov    ebp,0xe4034145
  40fcd6:	push   0x5bc67924
  40fcdb:	add    eax,0x886e0bcb
  40fce0:	repz and al,0xe8
  40fce3:	push   ss
  40fce4:	cmp    ah,BYTE PTR [ebx]
  40fce6:	sub    eax,0x3d6e671a
  40fceb:	es loop 0x40fd00
  40fcee:	or     BYTE PTR [eax+ebx*4],bl
  40fcf1:	outs   dx,BYTE PTR ds:[esi]
  40fcf2:	pop    edx
  40fcf3:	ds out 0x4f,al
  40fcf6:	inc    ebp
  40fcf7:	je     0x40fd76
  40fcf9:	and    DWORD PTR [edx+0x9375aab],0x1
  40fd00:	imul   ecx,DWORD PTR [ebx+0x68ddd718],0x2d
  40fd07:	lods   eax,DWORD PTR ds:[esi]
  40fd08:	popa   
  40fd09:	or     ebx,DWORD PTR [ebx-0x63]
  40fd0c:	ds pop ecx
  40fd0e:	and    BYTE PTR [ebx],cl
  40fd10:	repz jb 0x40fcbf
  40fd13:	(bad)  
  40fd14:	ret    0xc181
  40fd17:	outs   dx,DWORD PTR ds:[esi]
  40fd18:	les    eax,FWORD PTR [ecx+0x691330af]
  40fd1e:	sbb    BYTE PTR [ebx+ecx*4+0x5a81cfa3],cl
  40fd25:	shl    eax,0x8b
  40fd28:	or     DWORD PTR [ebx+0x65],edi
  40fd2b:	pop    ebx
  40fd2c:	das    
  40fd2d:	arpl   di,bp
  40fd2f:	xchg   esi,eax
  40fd30:	in     al,dx
  40fd31:	aad    0x2a
  40fd33:	push   ebx
  40fd34:	adc    ebp,DWORD PTR [edx+0x611739d8]
  40fd3a:	adc    eax,DWORD PTR [eax-0xa]
  40fd3d:	ins    BYTE PTR es:[edi],dx
  40fd3e:	aaa    
  40fd3f:	fwait
  40fd40:	rcr    BYTE PTR [ebp-0x21],cl
  40fd43:	push   ds
  40fd44:	in     al,dx
  40fd45:	xchg   edx,eax
  40fd46:	ins    DWORD PTR es:[edi],dx
  40fd47:	mov    ebp,0x791a867e
  40fd4c:	fnstcw WORD PTR [ebx+0x48334fea]
  40fd52:	pop    es
  40fd53:	dec    ebp
  40fd54:	and    ah,BYTE PTR [esi+0x3a707f0f]
  40fd5a:	out    0x1a,eax
  40fd5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd5d:	(bad)  
  40fd5e:	cld    
  40fd5f:	out    dx,eax
  40fd60:	pop    ebp
  40fd61:	mov    dh,0x44
  40fd63:	cdq    
  40fd64:	outs   dx,BYTE PTR ds:[esi]
  40fd65:	sub    ch,BYTE PTR [edx-0x21]
  40fd68:	cld    
  40fd69:	sbb    eax,0x9294a03d
  40fd6e:	xchg   edi,eax
  40fd6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd70:	fidiv  WORD PTR [esi]
  40fd72:	jae    0x40fd93
  40fd74:	popa   
  40fd75:	mov    al,0xb7
  40fd77:	dec    edi
  40fd78:	jge    0x40fd35
  40fd7a:	rcr    DWORD PTR ds:0xb90749f3,0x1
  40fd81:	das    
  40fd82:	xchg   ebp,eax
  40fd83:	push   ds
  40fd84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd85:	cli    
  40fd86:	and    eax,0x71bdba4b
  40fd8b:	dec    ebp
  40fd8c:	mov    ds:0x93906bbc,eax
  40fd91:	inc    edi
  40fd92:	jae    0x40fd9d
  40fd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd95:	mov    edi,0x3cde0782
  40fd9a:	ds xchg ebx,eax
  40fd9c:	push   ds
  40fd9d:	xchg   ebx,eax
  40fd9e:	rcl    DWORD PTR [eax-0x3c6c4974],0xcf
  40fda5:	push   es
  40fda6:	es xchg edx,eax
  40fda8:	and    eax,0x7eec6881
  40fdad:	(bad)  
  40fdae:	jle    0x40fd33
  40fdb0:	sahf   
  40fdb1:	add    DWORD PTR [edx+0x7a],0xb06e759d
  40fdb8:	sbb    eax,0x717b6d07
  40fdbd:	(bad)  
  40fdbe:	xor    al,0x2c
  40fdc0:	daa    
  40fdc1:	sub    esp,DWORD PTR [esp+ebx*2-0x31]
  40fdc5:	(bad)  
  40fdc6:	icebp  
  40fdc7:	je     0x40fd77
  40fdc9:	std    
  40fdca:	loope  0x40fe21
  40fdcc:	xchg   edi,eax
  40fdcd:	or     al,0x96
  40fdcf:	inc    ebp
  40fdd0:	dec    esp
  40fdd1:	into   
  40fdd2:	add    al,0xfd
  40fdd4:	cmp    eax,0x3ff9e24
  40fdd9:	xor    BYTE PTR [eax-0x3f],bl
  40fddc:	cmp    esi,DWORD PTR [esi-0xd457759]
  40fde2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fde3:	jb     0x40fdcd
  40fde5:	(bad)  
  40fde6:	pusha  
  40fde7:	cmp    DWORD PTR [edx-0x7],0x427b7113
  40fdee:	mov    ecx,0x7676383f
  40fdf3:	cld    
  40fdf4:	lods   eax,DWORD PTR ds:[esi]
  40fdf5:	fld    DWORD PTR [ebp+0x79f5d721]
  40fdfb:	add    al,BYTE PTR [ecx-0x257542c9]
  40fe01:	push   cs
  40fe02:	add    dl,BYTE PTR [esi]
  40fe04:	inc    esp
  40fe05:	outs   dx,BYTE PTR ds:[esi]
  40fe06:	xor    eax,ebx
  40fe08:	mov    DWORD PTR [edx-0x24feb73f],ebp
  40fe0e:	les    esp,FWORD PTR [edx-0x33]
  40fe11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe12:	mov    edi,DWORD PTR [eax]
  40fe14:	adc    al,BYTE PTR [eax]
  40fe16:	dec    ebx
  40fe17:	mov    esp,0x898c060
  40fe1c:	sar    dh,0xc2
  40fe1f:	and    edi,DWORD PTR [eax+0x4]
  40fe22:	xor    cl,BYTE PTR [ecx]
  40fe24:	xchg   ebx,eax
  40fe25:	push   ds
  40fe26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe27:	jmp    0x40fe5a
  40fe29:	and    al,0x84
  40fe2b:	mov    edx,0xa57d2c72
  40fe30:	inc    esi
  40fe31:	mov    esi,0x6d6f03c9
  40fe36:	xor    ch,BYTE PTR [edx+0x59e47274]
  40fe3c:	sbb    bh,BYTE PTR [ebx]
  40fe3e:	sub    ah,BYTE PTR [eax]
  40fe40:	call   DWORD PTR [edx+0x3a]
  40fe43:	xor    bl,BYTE PTR [eax]
  40fe45:	out    dx,eax
  40fe46:	dec    edi
  40fe47:	jge    0x40fe08
  40fe49:	(bad)  
  40fe4a:	pusha  
  40fe4b:	xchg   edx,eax
  40fe4c:	fnsave [ebx+edx*4+0x6e6c22f0]
  40fe53:	mov    al,ds:0x2d0a4b47
  40fe58:	outs   dx,BYTE PTR ds:[esi]
  40fe59:	push   ecx
  40fe5a:	loop   0x40fe20
  40fe5c:	in     eax,0xb2
  40fe5e:	retf   
  40fe5f:	jo     0x40fe9c
  40fe61:	lds    edx,FWORD PTR [ebx]
  40fe63:	imul   edx,DWORD PTR [eax],0xa
  40fe66:	into   
  40fe67:	ror    BYTE PTR [ebp+0x641f9598],0xcd
  40fe6e:	dec    edx
  40fe6f:	call   0x248f:0xd155bd8d
  40fe76:	mov    ds:0x5afbb3d6,eax
  40fe7b:	jbe    0x40fea0
  40fe7d:	mov    ch,0xd3
  40fe7f:	cmc    
  40fe80:	mov    esp,0x764d4d8f
  40fe85:	push   eax
  40fe86:	daa    
  40fe87:	sbb    al,0xef
  40fe89:	(bad)
  40fe8c:	mov    esi,0xf634b04a
  40fe91:	in     al,0x92
  40fe93:	inc    eax
  40fe94:	jg     0x40fee2
  40fe96:	retf   0x2295
  40fe99:	in     al,0x77
  40fe9b:	add    BYTE PTR [edx-0x4cce28d],bl
  40fea1:	pop    esi
  40fea2:	lods   eax,DWORD PTR ds:[esi]
  40fea3:	jl     0x40fe3b
  40fea5:	mov    ebp,0x6c3be0b9
  40feaa:	fdiv   st(4),st
  40feac:	inc    ebx
  40fead:	fldcw  WORD PTR [ecx-0x557968b8]
  40feb3:	repz bound ebp,QWORD PTR [edi+ecx*1]
  40feb7:	mov    edi,0x42936f31
  40febc:	mov    bl,0x20
  40febe:	arpl   WORD PTR [ebx+0x5c19dfc7],ax
  40fec4:	loopne 0x40fe8a
  40fec6:	ins    DWORD PTR es:[edi],dx
  40fec7:	mov    ecx,0x82a39e2a
  40fecc:	inc    esi
  40fecd:	add    DWORD PTR [esi-0x31dfda07],ecx
  40fed3:	cmp    al,0x34
  40fed5:	jo     0x40feed
  40fed7:	sbb    edi,DWORD PTR [esi+0xd]
  40feda:	pop    esp
  40fedb:	sub    dl,al
  40fedd:	jle    0x40fecd
  40fedf:	das    
  40fee0:	ret    
  40fee1:	sub    cl,BYTE PTR [esi-0x3d23fdb5]
  40fee7:	pushf  
  40fee8:	imul   edi,DWORD PTR [edi],0xee936e88
  40feee:	mov    esi,0xdab3c328
  40fef3:	loop   0x40fe80
  40fef5:	add    BYTE PTR [esi],bl
  40fef7:	jge    0x40fea8
  40fef9:	mov    eax,ds:0x6d01dba9
  40fefe:	mov    cl,0x39
  40ff00:	inc    edx
  40ff01:	xor    DWORD PTR [eax],ebp
  40ff03:	(bad)  
  40ff04:	xor    ebx,eax
  40ff06:	mov    bh,0x5
  40ff08:	dec    ebx
  40ff09:	enter  0x32f3,0x2a
  40ff0d:	aaa    
  40ff0e:	xchg   ebp,eax
  40ff0f:	test   DWORD PTR [ecx-0x1],ecx
  40ff12:	mov    eax,ds:0xef0a56a7
  40ff17:	repnz stos DWORD PTR es:[edi],eax
  40ff19:	rol    DWORD PTR [eax-0x3423d947],cl
  40ff1f:	add    esp,DWORD PTR [ebp+0x38]
  40ff22:	mov    esi,DWORD PTR [edi]
  40ff24:	sbb    DWORD PTR [ecx+edx*2],edx
  40ff27:	xlat   BYTE PTR ds:[ebx]
  40ff28:	pop    edx
  40ff29:	in     eax,0x4d
  40ff2b:	inc    edx
  40ff2c:	test   ecx,ebp
  40ff2e:	(bad)  
  40ff2f:	addr16 ds sub al,al
  40ff33:	mov    ebx,0x27235c2c
  40ff38:	(bad)  
  40ff39:	popa   
  40ff3a:	les    ecx,FWORD PTR [esi+0x59f54fca]
  40ff40:	xor    BYTE PTR ds:0x3901,al
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0x3a838c47]
  40ff68:	daa    
  40ff69:	inc    ecx
  40ff6a:	mov    esi,0x1818981d
  40ff6f:	mov    esi,0x10181814
  40ff74:	and    eax,0x28a2f6aa
  40ff79:	xchg   edx,eax
  40ff7a:	xor    eax,ebx
  40ff7c:	pusha  
  40ff7d:	fistp  WORD PTR [esp+esi*1]
  40ff80:	push   0x2c
  40ff82:	pop    ebp
  40ff83:	or     ebp,DWORD PTR [ebx+ecx*4]
  40ff86:	add    BYTE PTR [esi-0x65],dl
  40ff89:	mov    dh,0xdd
  40ff8b:	ja     0x40ff29
  40ff8d:	and    DWORD PTR [esi-0x3321f829],ebp
  40ff93:	js     0x40ffc3
  40ff95:	xor    bl,al
  40ff97:	ds inc ebp
  40ff99:	fidivr WORD PTR [eax-0x2c5ccaaa]
  40ff9f:	mov    cl,0x9d
  40ffa1:	mov    ds:0x827473cf,eax
  40ffa6:	sbb    eax,0x9d8d9e38
  40ffab:	stc    
  40ffac:	das    
  40ffad:	add    eax,0x817bc3f4
  40ffb2:	xchg   ebx,eax
  40ffb3:	xchg   edx,eax
  40ffb4:	ss (bad) 
  40ffb6:	or     ch,BYTE PTR [eax+esi*1]
  40ffb9:	adc    BYTE PTR [ebx+ecx*8+0x2c],cl
  40ffbd:	pop    eax
  40ffbe:	in     al,0xfc
  40ffc0:	inc    edx
  40ffc1:	mov    bl,0xe
  40ffc3:	adc    al,BYTE PTR [esi+0x11fe678f]
  40ffc9:	mov    ecx,0x720ef6f2
  40ffce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffcf:	std    
  40ffd0:	jne    0x40ffeb
  40ffd2:	clc    
  40ffd3:	pop    edi
  40ffd4:	dec    edi
  40ffd5:	ror    al,0x65
  40ffd8:	in     eax,dx
  40ffd9:	popa   
  40ffda:	je     0x40ff61
  40ffdc:	rcr    edx,cl
  40ffde:	je     0x410058
  40ffe0:	sbb    al,BYTE PTR [esi+0x8]
  40ffe3:	adc    bl,BYTE PTR [edx]
  40ffe5:	call   0x279e:0xf251c4f8
  40ffec:	sahf   
  40ffed:	sbb    eax,DWORD PTR [ebx]
  40ffef:	add    DWORD PTR [edi-0x7c4f1de6],0x6f
  40fff6:	cmp    DWORD PTR [ebp-0x59eef791],0xea8009af
  410000:	aaa    
  410001:	fiadd  DWORD PTR [eax+0x16a65267]
  410007:	mov    dl,0xae
  410009:	jl     0x410038
  41000b:	jecxz  0x410023
  41000d:	outs   dx,BYTE PTR ds:[esi]
  41000e:	jmp    0x99a1:0x92b03554
  410015:	jns    0x40ffdf
  410017:	imul   eax,edi,0xb
  41001a:	dec    edx
  41001b:	jo     0x41007f
  41001d:	xchg   ecx,eax
  41001e:	sub    BYTE PTR [esi+0x61c80654],bh
  410024:	inc    eax
  410025:	cmp    ecx,DWORD PTR [edi]
  410027:	cld    
  410028:	mov    DWORD PTR [edi-0x354bc775],ecx
  41002e:	mov    ebp,DWORD PTR [edx+eiz*8+0x6a]
  410032:	sub    dh,BYTE PTR [ebp+0x3f]
  410035:	mov    DWORD PTR [eax+eiz*4],esi
  410038:	adc    al,0x8c
  41003a:	pop    ebp
  41003b:	pop    ds
  41003c:	jmp    0x41000e
  41003e:	aam    0x97
  410040:	jno    0x4100bc
  410042:	in     al,0x9d
  410044:	mov    ebx,0x148baec8
  410049:	int3   
  41004a:	(bad)  
  41004b:	out    0xb8,eax
  41004d:	(bad)  
  41004e:	and    al,0xb0
  410050:	rcr    DWORD PTR [esi-0xf],cl
  410053:	out    dx,al
  410054:	ficomp WORD PTR [ebp-0x50]
  410057:	inc    eax
  410058:	aam    0x8b
  41005a:	out    dx,eax
  41005b:	div    BYTE PTR [edi+0x7e]
  41005e:	pop    esi
  41005f:	sub    edx,ebx
  410061:	adc    ah,BYTE PTR [eax+edx*2+0x485fef0c]
  410068:	jmp    0x4100a9
  41006a:	addr16 mov bl,0xb1
  41006d:	inc    edx
  41006e:	std    
  41006f:	mov    al,BYTE PTR [edi+0xc]
  410072:	imul   ebx,esp,0xffffffe2
  410075:	push   0xffffff9a
  410077:	popf   
  410078:	call   0xebf3:0x52540039
  41007f:	cld    
  410080:	sbb    ecx,eax
  410082:	leave  
  410083:	icebp  
  410084:	xor    ch,BYTE PTR [esi-0x76a2e0e4]
  41008a:	mov    esp,0xc35bdf39
  41008f:	enter  0x59fb,0x2c
  410093:	shr    DWORD PTR [edi-0xddca96b],1
  410099:	pop    ebx
  41009a:	mov    ebx,0x1adb865e
  41009f:	gs add al,0x2d
  4100a2:	adc    al,0xf4
  4100a4:	jmp    0x410073
  4100a6:	mov    ds:0x4177970b,eax
  4100ab:	mov    edi,0xef8958e7
  4100b0:	adc    eax,0x53d5f78a
  4100b5:	test   DWORD PTR [ecx-0x60],ebx
  4100b8:	adc    dh,BYTE PTR [eax]
  4100ba:	push   es
  4100bb:	push   ss
  4100bc:	xor    edx,0x2d
  4100bf:	jl     0x410084
  4100c1:	adc    ebx,esi
  4100c3:	push   cs
  4100c4:	pop    ebp
  4100c5:	call   0xef316309
  4100ca:	add    al,0x76
  4100cc:	dec    ebp
  4100cd:	loopne 0x410059
  4100cf:	or     ah,BYTE PTR [ebx]
  4100d1:	xchg   edx,eax
  4100d2:	xchg   ebp,eax
  4100d3:	cs jmp 0x410090
  4100d6:	scas   al,BYTE PTR es:[edi]
  4100d7:	loope  0x410109
  4100d9:	in     eax,dx
  4100da:	sub    al,0xf1
  4100dc:	repnz sbb edi,DWORD PTR [ebx-0x51]
  4100e0:	ins    DWORD PTR es:[edi],dx
  4100e1:	jne    0x4100fd
  4100e3:	and    DWORD PTR [ebx+0x392c2532],ebx
  4100e9:	sbb    ebx,DWORD PTR [esp+edi*1-0x3b]
  4100ed:	pop    esi
  4100ee:	fnsave [esi+0x362deaba]
  4100f4:	(bad)  
  4100f5:	ja     0x410090
  4100f7:	inc    ecx
  4100f8:	sub    ebx,esp
  4100fa:	js     0x410130
  4100fc:	aas    
  4100fd:	pop    ebx
  4100fe:	loopne 0x410128
  410100:	jns    0x41016e
  410102:	ror    DWORD PTR [esi-0x56],1
  410105:	imul   eax,ebp,0x61
  410108:	arpl   bx,bx
  41010a:	adc    DWORD PTR [ebp+eax*8+0x48],0xffffffdd
  41010f:	(bad)
  410112:	bswap  ebp
  410114:	in     eax,0xc2
  410116:	(bad)  gs:[edi]
  410119:	nop
  41011a:	adc    DWORD PTR [eax-0x58],ebp
  41011d:	fbld   TBYTE PTR [ebx-0xccb9706]
  410123:	cwde   
  410124:	xchg   esi,eax
  410125:	mov    bl,0xe3
  410127:	rol    DWORD PTR [edx-0x713a507f],0x56
  41012e:	mov    ecx,0x3c72660b
  410133:	jp     0x41014d
  410135:	mov    eax,0x72a44047
  41013a:	repnz in al,dx
  41013c:	shl    DWORD PTR [ebx-0x14c7f6ee],0x64
  410143:	jne    0x4100c9
  410145:	mov    ch,ch
  410147:	inc    eax
  410148:	in     al,0x5f
  41014a:	in     eax,dx
  41014b:	jb     0x410117
  41014d:	sub    DWORD PTR [edi+0x299b41c9],ebp
  410153:	rol    BYTE PTR [esi-0x55],cl
  410156:	adc    eax,0xadf3c157
  41015b:	out    dx,al
  41015c:	ret    
  41015d:	or     cl,bh
  41015f:	and    al,0x7f
  410161:	js     0x4100f5
  410163:	mov    fs,WORD PTR [edi-0x3e]
  410166:	ss cwde 
  410168:	in     eax,dx
  410169:	fcmove st,st(7)
  41016b:	dec    ecx
  41016c:	pop    es
  41016d:	(bad)  
  41016e:	fist   DWORD PTR [eax-0x62]
  410171:	sub    al,BYTE PTR [ecx]
  410173:	jns    0x41019e
  410175:	outs   dx,DWORD PTR ds:[esi]
  410176:	pop    ebx
  410177:	div    ah
  410179:	xor    DWORD PTR [eax-0x5964d77d],edi
  41017f:	loopne 0x4101e2
  410181:	dec    ebp
  410182:	call   0x4f390a7c
  410187:	ds pop ebp
  410189:	je     0x4101c7
  41018b:	aad    0x59
  41018d:	call   0x36ee7861
  410192:	out    dx,al
  410193:	sbb    BYTE PTR [ebx+0x5d],ch
  410196:	add    eax,0xe7a45d6f
  41019b:	xchg   edx,eax
  41019c:	shl    BYTE PTR [ebp+eiz*2-0x4e],cl
  4101a0:	and    bh,BYTE PTR [ebx]
  4101a2:	mul    BYTE PTR [ecx+0x2668c98c]
  4101a8:	mov    esp,0xff562c94
  4101ad:	scas   eax,DWORD PTR es:[edi]
  4101ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101af:	dec    edi
  4101b0:	(bad)  
  4101b1:	es es icebp 
  4101b4:	cld    
  4101b5:	mov    BYTE PTR [edi],dh
  4101b7:	xlat   BYTE PTR ds:[ebx]
  4101b8:	inc    esp
  4101b9:	sti    
  4101ba:	scas   al,BYTE PTR es:[edi]
  4101bb:	in     al,0xa5
  4101bd:	in     eax,0x68
  4101bf:	sub    cl,BYTE PTR [ebx]
  4101c1:	and    edi,DWORD PTR [edi-0x16]
  4101c4:	sbb    edx,DWORD PTR [edx]
  4101c6:	mov    ds:0xd11d36fb,al
  4101cb:	dec    ecx
  4101cc:	js     0x41019f
  4101ce:	fisubr DWORD PTR [ebx]
  4101d0:	in     eax,0xf7
  4101d2:	push   ebp
  4101d3:	scas   eax,DWORD PTR es:[edi]
  4101d4:	inc    edx
  4101d5:	in     eax,dx
  4101d6:	add    ebp,DWORD PTR [ebx+0x8]
  4101d9:	(bad)  
  4101da:	fcmove st,st(6)
  4101dc:	out    dx,al
  4101dd:	retf   0x588e
  4101e0:	or     ch,BYTE PTR [edi-0x4feac1d8]
  4101e6:	jae    0x4101ac
  4101e8:	mov    bl,0xb6
  4101ea:	jmp    0x410224
  4101ec:	sbb    esp,edx
  4101ee:	lahf   
  4101ef:	out    dx,al
  4101f0:	dec    eax
  4101f1:	iret   
  4101f2:	icebp  
  4101f3:	xchg   ebp,eax
  4101f4:	sbb    DWORD PTR [esi+0x3104faa0],ecx
  4101fa:	xchg   edi,eax
  4101fb:	cmp    edx,DWORD PTR [edx-0x2b7fe8c1]
  410201:	es jmp 0x1d8d11ee
  410207:	jnp    0x410206
  410209:	dec    ebp
  41020a:	(bad)  
  41020b:	sub    ecx,esp
  41020d:	fxch   st(6)
  41020f:	mov    eax,0xfe84230c
  410214:	xor    eax,DWORD PTR [ebx+0x78]
  410217:	xor    ecx,DWORD PTR [ecx-0x6f8b2f6e]
  41021d:	pcmpgtd mm0,QWORD PTR [ecx-0x7d]
  410221:	test   ecx,edx
  410223:	sub    DWORD PTR [edi],ecx
  410225:	test   DWORD PTR ds:0x8b000004,esi
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422568
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422568
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422670
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422668],eax
  4102bc:	inc    DWORD PTR ds:0x422670
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	dec    edi
  41030d:	(bad)  
  41030e:	pop    edi
  41030f:	jo     0x4102d4
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0xa7181814
  410319:	jecxz  0x410354
  41031b:	cs pushf 
  41031d:	aad    0x63
  41031f:	(bad)
  410323:	sahf   
  410324:	xchg   esi,eax
  410325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410326:	loop   0x4102ca
  410328:	repnz clc 
  41032a:	aas    
  41032b:	and    eax,0xbd13a059
  410330:	(bad)  
  410331:	xchg   ebx,eax
  410332:	xor    DWORD PTR [esi+0x64cf73aa],esi
  410338:	mov    ds:0xdfc8fff6,al
  41033d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41033e:	dec    ecx
  41033f:	cmc    
  410340:	adc    DWORD PTR [ebp+0xd9394a2],0xd97702be
  41034a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41034b:	in     eax,dx
  41034c:	mov    al,ds:0xaaa18ca2
  410351:	loope  0x41031b
  410353:	aaa    
  410354:	dec    edx
  410355:	add    DWORD PTR [edx-0x7e3d282d],0x66
  41035c:	hlt    
  41035d:	mov    edi,0xacbbde56
  410362:	call   0xd621a622
  410367:	js     0x410364
  410369:	iret   
  41036a:	push   ecx
  41036b:	lahf   
  41036c:	adc    al,dl
  41036e:	loope  0x41030f
  410370:	push   esp
  410371:	shr    DWORD PTR [ebp+0x44],cl
  410374:	sub    esi,DWORD PTR [edx+0x259abc65]
  41037a:	and    esi,0x26
  41037d:	and    dl,dh
  41037f:	jge    0x4103ce
  410381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410382:	cli    
  410383:	dec    esp
  410384:	lock dec ecx
  410386:	fisttp QWORD PTR [ecx-0x55b0bae2]
  41038c:	ret    
  41038d:	stos   BYTE PTR es:[edi],al
  41038e:	gs jno 0x410394
  410391:	sbb    BYTE PTR [ebp+0x2],bh
  410394:	fisubr WORD PTR [edi+0x5e]
  410397:	inc    esp
  410398:	jns    0x4103f4
  41039a:	cmp    DWORD PTR [edi],eax
  41039c:	(bad)  
  41039d:	hlt    
  41039e:	dec    eax
  41039f:	xchg   DWORD PTR [edx],esi
  4103a1:	pop    edx
  4103a2:	xchg   ebp,eax
  4103a3:	ja     0x4103c1
  4103a5:	sbb    esi,DWORD PTR [ecx]
  4103a7:	fmul   QWORD PTR [edx+eax*1+0x18979b52]
  4103ae:	test   esi,0x6f84cb06
  4103b4:	loopne 0x41037b
  4103b6:	test   DWORD PTR [ecx],0x500bec7d
  4103bc:	ins    DWORD PTR es:[edi],dx
  4103bd:	push   0x4121f21a
  4103c2:	cmp    ecx,DWORD PTR [esp+ebp*2+0x374d6951]
  4103c9:	mov    edx,ebx
  4103cb:	in     al,dx
  4103cc:	cld    
  4103cd:	or     eax,0x8af8eb8a
  4103d2:	int    0x28
  4103d4:	fmul   st,st(4)
  4103d6:	push   ss
  4103d7:	iret   
  4103d8:	adc    eax,0xf1686f5d
  4103dd:	or     al,0x20
  4103df:	lods   eax,DWORD PTR ds:[esi]
  4103e0:	add    BYTE PTR [esp+ecx*4],0xf5
  4103e4:	outs   dx,BYTE PTR ds:[esi]
  4103e5:	inc    ebx
  4103e6:	push   esi
  4103e7:	test   eax,0xf2c1068f
  4103ec:	and    edi,DWORD PTR [ecx]
  4103ee:	retf   0xc61
  4103f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103f2:	or     dl,dl
  4103f4:	inc    esp
  4103f5:	cli    
  4103f6:	adc    BYTE PTR [edi-0xa466fb5],bl
  4103fc:	popa   
  4103fd:	push   0x7a
  4103ff:	push   ecx
  410400:	mov    ecx,DWORD PTR [ecx+0x7473b26e]
  410406:	mov    ch,0x44
  410408:	int    0x81
  41040a:	inc    esp
  41040b:	sub    ecx,edx
  41040d:	out    0xb9,al
  41040f:	xor    DWORD PTR [ecx+esi*8],eax
  410412:	and    DWORD PTR [ecx+0x825aaae],0x30
  410419:	cmp    dh,BYTE PTR [esi+edi*8+0x7a8d12a4]
  410420:	fidiv  DWORD PTR [ecx+0x45218ddd]
  410426:	inc    esi
  410427:	sbb    ebp,DWORD PTR [esi+ebp*8-0x31]
  41042b:	(bad)  [ecx-0x6f]
  41042e:	out    0x13,eax
  410430:	retf   0x72e1
  410433:	inc    edi
  410434:	icebp  
  410435:	leave  
  410436:	or     DWORD PTR [edi-0x24],eax
  410439:	loope  0x4103e5
  41043b:	int3   
  41043c:	jnp    0x4103ee
  41043e:	or     al,BYTE PTR [eax+0x73]
  410441:	xchg   DWORD PTR [ebx],esi
  410443:	int3   
  410444:	pop    ss
  410445:	rcl    DWORD PTR [edx-0x15],0x8c
  410449:	ins    BYTE PTR es:[edi],dx
  41044a:	int3   
  41044b:	stos   BYTE PTR es:[edi],al
  41044c:	ins    DWORD PTR es:[edi],dx
  41044d:	(bad)  
  41044e:	stc    
  41044f:	aad    0x9f
  410451:	fs xchg ebp,eax
  410453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410454:	pop    edi
  410455:	aas    
  410456:	mov    ds:0x2f16b97d,eax
  41045b:	push   es
  41045c:	lods   al,BYTE PTR ds:[esi]
  41045d:	xlat   BYTE PTR ds:[ebx]
  41045e:	ins    BYTE PTR es:[edi],dx
  41045f:	daa    
  410460:	jge    0x41048c
  410462:	lea    esi,ds:0xafa070f5
  410468:	cwd    
  41046a:	(bad)  
  41046b:	jge    0x410473
  41046d:	outs   dx,BYTE PTR ds:[esi]
  41046e:	not    ch
  410470:	pusha  
  410471:	sti    
  410472:	sub    bl,dl
  410474:	push   eax
  410475:	ins    DWORD PTR es:[edi],dx
  410476:	cmp    ecx,edx
  410478:	adc    ah,al
  41047a:	pop    ecx
  41047b:	mov    edi,0x9b67b16d
  410480:	add    BYTE PTR [esi+0x4e],cl
  410483:	push   edx
  410484:	jb     0x41042f
  410486:	fnstsw WORD PTR [eax+0x2ebc9031]
  41048c:	mov    ds:0x22ca1d4,al
  410491:	inc    edx
  410492:	and    cl,cl
  410494:	push   ss
  410495:	lods   eax,DWORD PTR ds:[esi]
  410496:	out    dx,al
  410497:	dec    edx
  410498:	push   edi
  410499:	jle    0x41048c
  41049b:	ins    BYTE PTR es:[edi],dx
  41049c:	mov    DWORD PTR [eax-0x68],ebp
  41049f:	sbb    DWORD PTR [ebp-0x4f855ce7],edi
  4104a5:	adc    edx,DWORD PTR [esi]
  4104a7:	jns    0x410440
  4104a9:	out    0x4,al
  4104ab:	es pop ecx
  4104ad:	icebp  
  4104ae:	xchg   eax,esp
  4104b0:	dec    ebp
  4104b1:	clc    
  4104b2:	test   al,0xe
  4104b4:	and    dh,BYTE PTR [ebx+esi*1-0x295e03e7]
  4104bb:	cdq    
  4104bc:	and    ch,BYTE PTR [esi]
  4104be:	add    al,0x33
  4104c0:	fnsave [ebx-0xfbacf69]
  4104c6:	pop    ss
  4104c7:	sbb    BYTE PTR [eax+0x4e],0xfd
  4104cb:	mov    esp,0x3e4eceab
  4104d0:	jp     0x41045f
  4104d2:	(bad)  
  4104d4:	in     eax,0x48
  4104d6:	push   es
  4104d7:	jle    0x41048a
  4104d9:	(bad)  
  4104db:	adc    bh,BYTE PTR [edi+0x39f59db3]
  4104e1:	pusha  
  4104e2:	lea    ebp,[esi-0x52]
  4104e5:	rol    DWORD PTR [ebx+0x2d],1
  4104e8:	sahf   
  4104e9:	aaa    
  4104ea:	mov    edx,0x73dc996c
  4104ef:	punpckldq mm1,DWORD PTR [edx+0x4f18b68d]
  4104f6:	mov    ch,BYTE PTR [edx]
  4104f8:	dec    ecx
  4104f9:	add    ah,BYTE PTR [edx]
  4104fb:	cmp    ebp,DWORD PTR [edi]
  4104fd:	adc    DWORD PTR [ebx+0x45e7c61c],0x0
  410504:	lds    eax,FWORD PTR [edx+0x7289d143]
  41050a:	call   0x94c:0x681cb34f
  410511:	ss pop esi
  410513:	dec    esi
  410514:	ret    0x5b4d
  410517:	and    eax,0x3e7aaaf3
  41051c:	rol    BYTE PTR [edx-0xa],0xc5
  410520:	aam    0xb
  410522:	inc    edi
  410523:	inc    edi
  410524:	and    edx,DWORD PTR [edx-0x44]
  410527:	jae    0x410503
  410529:	add    DWORD PTR [edx+eax*4+0x12],ecx
  41052d:	push   eax
  41052e:	mov    ch,0xf2
  410530:	out    0x43,al
  410532:	pop    es
  410533:	adc    edx,edi
  410535:	push   ebp
  410536:	jmp    0xf4d8fcf9
  41053b:	jnp    0x4104cf
  41053d:	stos   DWORD PTR es:[edi],eax
  41053e:	jecxz  0x4105bf
  410540:	xor    eax,0x6d8ac6c4
  410545:	sbb    edi,DWORD PTR [esi]
  410547:	(bad)  
  410548:	out    dx,al
  410549:	rcl    DWORD PTR [ebx+0x677517b8],cl
  41054f:	push   cs
  410550:	sub    al,0xe7
  410552:	jle    0x4104e9
  410554:	add    eax,0x63e9a703
  410559:	or     ah,cl
  41055b:	dec    esp
  41055c:	and    DWORD PTR [ecx+0x1f941f93],edx
  410562:	jnp    0x410599
  410564:	sti    
  410565:	and    esp,edx
  410567:	lahf   
  410568:	push   eax
  410569:	(bad)  
  41056a:	in     al,0x75
  41056c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41056d:	cmp    ebx,edx
  41056f:	fwait
  410570:	jle    0x4105c5
  410572:	sbb    eax,0xe02d3cee
  410577:	das    
  410578:	mov    edx,0x1a0867c4
  41057d:	dec    esi
  41057e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41057f:	xor    bh,BYTE PTR [ebx+0x103ce837]
  410585:	mov    BYTE PTR [esi],bh
  410587:	icebp  
  410588:	xchg   edi,eax
  410589:	and    eax,0xb8cc6228
  41058e:	sub    esi,DWORD PTR [edi+0x3b85cd30]
  410594:	xor    BYTE PTR [eax],dh
  410596:	mov    ebp,0x219bb22b
  41059b:	test   eax,0x1193de57
  4105a0:	(bad)  
  4105a2:	cmc    
  4105a3:	xor    DWORD PTR [ebx+eax*8+0x7b8d50c7],edx
  4105aa:	stos   DWORD PTR es:[edi],eax
  4105ab:	jl     0x4105b3
  4105ad:	inc    esi
  4105ae:	fadd   st,st(7)
  4105b0:	shr    BYTE PTR [ebx],cl
  4105b2:	jbe    0x410632
  4105b4:	test   BYTE PTR [ebx+0x564df74a],al
  4105ba:	outs   dx,DWORD PTR ds:[esi]
  4105bb:	and    cl,BYTE PTR [ebx+0x51]
  4105be:	fidiv  WORD PTR [eax+0x3e]
  4105c1:	pop    ds
  4105c2:	mov    edx,0x1b922cf2
  4105c7:	fcom   QWORD PTR [ebx-0x760fba73]
  4105cd:	test   DWORD PTR [edi+edi*8-0x1],esp
  4105d1:	dec    DWORD PTR [ebx+0x4589ac45]
  4105d7:	lock mov eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223e4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422658
  410612:	push   DWORD PTR ds:0x4223ec
  410618:	push   DWORD PTR ds:0x422638
  41061e:	push   DWORD PTR ds:0x4226ac
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422568
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	pop    edi
  4106ed:	jp     0x4106c4
  4106ef:	mov    esp,0x18188e68
  4106f4:	call   0xffd2:0x68181814
  4106fb:	loope  0x4106f1
  4106fd:	jmp    0x41067f
  4106ff:	in     al,dx
  410700:	mul    DWORD PTR [edx-0x69]
  410703:	xchg   esp,eax
  410704:	push   ebp
  410705:	mov    ds:0x1590c9d6,al
  41070a:	push   edi
  41070b:	pop    ebx
  41070c:	jnp    0x41071b
  41070e:	jmp    FWORD PTR [ebp+0x31d6a860]
  410714:	cld    
  410715:	je     0x4106dd
  410717:	push   ecx
  410718:	mov    ds:0x1019c04e,eax
  41071d:	and    al,0x8c
  41071f:	loope  0x410772
  410721:	push   es
  410722:	push   es
  410723:	pushf  
  410724:	and    eax,0x207a9cd
  410729:	shr    DWORD PTR [edx-0x17],cl
  41072c:	sub    ah,BYTE PTR [edx+0x1d]
  41072f:	mov    ebp,0x15f3dd84
  410734:	jg     0x410750
  410736:	pop    es
  410737:	enter  0xa25a,0x1
  41073b:	ja     0x4106c7
  41073d:	popa   
  41073e:	pop    ecx
  41073f:	loop   0x41075b
  410741:	out    dx,eax
  410742:	test   bl,ah
  410744:	or     al,0xa1
  410746:	inc    edi
  410747:	fadd   st,st(2)
  410749:	dec    esp
  41074a:	inc    esp
  41074b:	leave  
  41074c:	push   ecx
  41074d:	dec    ebx
  41074e:	stc    
  41074f:	scas   al,BYTE PTR es:[edi]
  410750:	jae    0x410772
  410752:	inc    ecx
  410753:	pop    ecx
  410754:	mov    ds:0xf42fa828,eax
  410759:	sbb    BYTE PTR [edi],dl
  41075b:	lods   eax,DWORD PTR ds:[esi]
  41075c:	rcr    DWORD PTR [ecx+0x63],1
  41075f:	pop    ebx
  410760:	fmul   DWORD PTR [ebx-0x73]
  410763:	add    DWORD PTR [ebx],ebx
  410765:	je     0x4107d3
  410767:	pop    ebx
  410768:	push   ebp
  410769:	or     eax,0x85709682
  41076e:	mov    dh,0x8d
  410770:	or     esp,eax
  410772:	aaa    
  410773:	pushf  
  410774:	test   al,0x3a
  410776:	or     eax,0xf99e12ad
  41077b:	fiadd  WORD PTR [ebx]
  41077d:	pop    ds
  41077e:	push   esp
  41077f:	int3   
  410780:	popa   
  410781:	inc    edi
  410782:	pop    esp
  410783:	sub    BYTE PTR [edi+0x12d8a5c7],0x6d
  41078a:	arpl   WORD PTR [edi],si
  41078c:	jne    0x4107a4
  41078e:	pop    ecx
  41078f:	bound  ecx,QWORD PTR [edi-0x7d2617f0]
  410795:	sbb    ah,BYTE PTR [edi]
  410797:	rol    BYTE PTR [ebx-0x5a306b8b],0x92
  41079e:	mov    edx,0x78aab2cb
  4107a3:	add    BYTE PTR [edx+0x776e9c4f],dl
  4107a9:	cmp    bh,BYTE PTR [ecx-0x39a411ef]
  4107af:	stc    
  4107b0:	push   ebx
  4107b1:	push   0xb820ba21
  4107b6:	xchg   edi,eax
  4107b7:	fldenv [ebp+0x46d3eddc]
  4107bd:	add    al,0xc3
  4107bf:	inc    edx
  4107c0:	loope  0x4107b7
  4107c2:	xchg   edi,eax
  4107c3:	out    0xc1,al
  4107c5:	rcl    DWORD PTR [edx+0x3f],1
  4107c8:	in     al,dx
  4107c9:	and    al,0xd8
  4107cb:	js     0x41077b
  4107cd:	ret    0x6a3
  4107d0:	mov    ah,0x61
  4107d2:	loopne 0x41081e
  4107d4:	data16 aas 
  4107d6:	push   ecx
  4107d7:	lds    edx,FWORD PTR [ecx+eax*1+0x208c2718]
  4107de:	popa   
  4107df:	sub    eax,0x249830b9
  4107e4:	retf   0x59af
  4107e7:	sbb    eax,0x401059c0
  4107ec:	pop    ds
  4107ed:	push   0xf7090333
  4107f2:	adc    al,BYTE PTR [ecx+0x1]
  4107f5:	add    eax,0x48e7327
  4107fa:	cmp    eax,0x7026720b
  4107ff:	mov    ds:0x8c3141ea,eax
  410804:	jle    0x410814
  410806:	sub    BYTE PTR [esi],0x59
  410809:	cmp    BYTE PTR [esi],0xa6
  41080c:	mov    ch,0x71
  41080e:	scas   eax,DWORD PTR es:[edi]
  41080f:	jo     0x41086b
  410811:	pop    ebx
  410812:	cmp    BYTE PTR [ebx-0x2684c81e],ch
  410818:	push   ebp
  410819:	cmp    ah,ch
  41081b:	push   esp
  41081c:	fisub  WORD PTR [edi]
  41081e:	add    BYTE PTR [esi+0x656a3ead],ah
  410824:	jecxz  0x410868
  410826:	jo     0x410847
  410828:	lods   al,BYTE PTR ds:[esi]
  410829:	iret   
  41082a:	aas    
  41082b:	mov    ebp,0x85f21328
  410830:	mov    ebx,edx
  410832:	xor    al,0x8b
  410834:	not    BYTE PTR [eax+edx*1+0xa]
  410838:	xor    BYTE PTR [ebp-0x4e934cf0],dh
  41083e:	pop    ss
  41083f:	imul   ebx,ebx,0xffffffb4
  410842:	test   DWORD PTR ds:0x905a1f9f,ebp
  410848:	loop   0x4108ab
  41084a:	test   BYTE PTR ds:0x4b8198c5,al
  410850:	out    dx,al
  410851:	iret   
  410852:	(bad)  
  410853:	shl    DWORD PTR [ebp+0x5be6229d],cl
  410859:	sbb    dl,BYTE PTR [eax-0x5356caf4]
  41085f:	xor    eax,0xeaffd953
  410864:	push   ebx
  410865:	add    eax,0xbcd80c66
  41086a:	rcl    BYTE PTR [esi+0x15c639f],1
  410870:	xchg   edi,eax
  410871:	sar    BYTE PTR [edx-0x1],1
  410874:	mov    dh,0xa8
  410876:	mov    ah,0x3a
  410878:	sbb    DWORD PTR [eax+eiz*8],edi
  41087b:	adc    al,0x8a
  41087d:	jge    0x410881
  41087f:	adc    BYTE PTR [ebp-0x49],dh
  410882:	xchg   BYTE PTR [ebx+edi*2-0xa9ec602],bl
  410889:	add    BYTE PTR [ecx+0x45],bh
  41088c:	xor    eax,DWORD PTR [esi+0x4570aa5c]
  410892:	rcr    DWORD PTR [esi+0x4de2667b],cl
  410898:	outs   dx,DWORD PTR ds:[esi]
  410899:	and    cl,dh
  41089b:	sahf   
  41089c:	xor    ah,BYTE PTR [esi-0x2deedc5b]
  4108a2:	pushf  
  4108a3:	xchg   edx,eax
  4108a4:	sbb    BYTE PTR [ebx+edx*8],0x29
  4108a8:	iret   
  4108a9:	aaa    
  4108aa:	jmp    0x8380:0x4f16f2ac
  4108b1:	pop    esi
  4108b2:	xor    bl,dh
  4108b4:	sbb    al,0x2a
  4108b6:	popf   
  4108b7:	or     al,0xa0
  4108b9:	hlt    
  4108ba:	pop    ecx
  4108bb:	xchg   esp,eax
  4108bc:	push   edi
  4108bd:	cmp    edi,eax
  4108bf:	push   esp
  4108c0:	sahf   
  4108c1:	fdecstp 
  4108c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108c4:	in     eax,dx
  4108c5:	int    0x0
  4108c7:	loope  0x41092f
  4108c9:	fdiv   DWORD PTR [ecx+ebx*2]
  4108cc:	mov    edi,0x2ac526a6
  4108d1:	(bad)  
  4108d2:	xor    esi,DWORD PTR [ecx+0x4d2c076f]
  4108d8:	jo     0x410905
  4108da:	adc    dl,cl
  4108dc:	test   DWORD PTR [esi+0x60],0xa554f949
  4108e3:	xor    esi,esi
  4108e5:	pop    ebx
  4108e6:	jl     0x4108e4
  4108e8:	or     eax,DWORD PTR [ebx-0x55]
  4108eb:	repz push ecx
  4108ed:	arpl   sp,ax
  4108ef:	adc    BYTE PTR [ebx-0x4efd3a2c],0xfa
  4108f6:	push   ss
  4108f7:	add    DWORD PTR [edx],esp
  4108f9:	es adc eax,0xe4c02419
  4108ff:	js     0x410930
  410901:	jg     0x410934
  410903:	std    
  410904:	inc    ebp
  410905:	mov    al,0xe4
  410907:	cld    
  410908:	jne    0x41096c
  41090a:	or     bl,BYTE PTR [ebx+0x1713216f]
  410910:	sub    eax,0x94f736b0
  410915:	mov    ah,BYTE PTR [esi+0x35]
  410918:	(bad)  
  410919:	jns    0x41089c
  41091b:	sti    
  41091c:	neg    eax
  41091e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091f:	(bad)  
  410920:	pop    ss
  410921:	in     al,0xd8
  410923:	xor    dl,BYTE PTR [esp+eiz*8-0x17]
  410927:	pop    DWORD PTR [esi]
  410929:	xor    eax,0x1ca520e0
  41092e:	not    DWORD PTR [edi-0x698871d6]
  410934:	add    ch,0x62
  410937:	gs dec ebp
  410939:	sbb    bh,BYTE PTR ds:0xa56ddc6b
  41093f:	stos   BYTE PTR es:[edi],al
  410940:	daa    
  410941:	pop    eax
  410942:	mov    ds:0x5218b431,al
  410947:	fist   WORD PTR [ebp-0x127bda67]
  41094d:	fucomip st,st(1)
  41094f:	fiadd  DWORD PTR [bp-0x10dc]
  410954:	pop    es
  410955:	mov    ebp,0x515edd1
  41095a:	enter  0x5263,0xf5
  41095e:	dec    esp
  41095f:	or     al,0xe5
  410961:	ins    BYTE PTR es:[edi],dx
  410962:	dec    esp
  410963:	mov    ebp,0x4499deb2
  410968:	jae    0x41092d
  41096a:	inc    ebp
  41096b:	sti    
  41096c:	(bad)  
  41096d:	ficom  WORD PTR [ecx+edx*4]
  410970:	mov    dh,0x6f
  410972:	pushf  
  410973:	popa   
  410974:	jae    0x4108f6
  410976:	mov    al,BYTE PTR [eax+0x52e60a19]
  41097c:	or     BYTE PTR [ecx],0x19
  41097f:	and    al,0xed
  410981:	shl    DWORD PTR ds:0xf40d330b,0x4e
  410988:	xor    BYTE PTR [eax],0x41
  41098b:	push   esi
  41098c:	cld    
  41098d:	fstp   DWORD PTR [eax+0x65da3fe9]
  410993:	lahf   
  410994:	mov    ebp,0x15ec1966
  410999:	stos   DWORD PTR es:[edi],eax
  41099a:	push   ss
  41099b:	std    
  41099c:	ss xchg esi,eax
  41099e:	or     eax,0xdf84c33
  4109a3:	andps  xmm6,XMMWORD PTR [ebx-0x51b4fea9]
  4109aa:	pushf  
  4109ab:	lods   eax,DWORD PTR ds:[esi]
  4109ac:	push   0xffffff84
  4109ae:	sub    eax,0xcff6f43f
  4109b3:	enter  0x7672,0xe1
  4109b7:	or     ah,BYTE PTR [ecx]
  4109b9:	cmp    cl,ah
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x422078
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x422078
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x6a39542b
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [edi],dh
  410a7d:	jmp    0x410a0d
  410a7f:	es pop edi
  410a81:	push   ecx
  410a82:	imul   edi,DWORD PTR [ebx+0x441efaba],0x5c00803d
  410a8c:	jmp    0xde41:0xccd06cac
  410a93:	mov    ds:0xdfa18809,eax
  410a98:	fisttp QWORD PTR [ebx+edx*8]
  410a9b:	loopne 0x410a59
  410a9d:	sub    al,0xd
  410a9f:	inc    eax
  410aa0:	mov    ebp,0x82f23aff
  410aa5:	inc    cl
  410aa7:	xor    ecx,DWORD PTR [ecx-0x583edee7]
  410aad:	ja     0x410a7b
  410aaf:	xor    eax,0xdde5b326
  410ab4:	stos   DWORD PTR es:[edi],eax
  410ab5:	push   0x588bf5f7
  410aba:	(bad)  
  410abc:	fimul  DWORD PTR [esi+edx*1]
  410abf:	pusha  
  410ac0:	lea    esp,[ebx+0x4c1be724]
  410ac6:	xor    DWORD PTR [ebx+0x36],0xffffffe4
  410aca:	test   ecx,ebx
  410acc:	jo     0x410b48
  410ace:	mov    DWORD PTR [ecx],ecx
  410ad0:	shl    ecx,cl
  410ad2:	gs jns 0x410b49
  410ad5:	sbb    BYTE PTR [ebx-0xb4ce3e7],ah
  410adb:	outs   dx,BYTE PTR ds:[esi]
  410adc:	inc    esi
  410add:	out    dx,eax
  410ade:	mov    ds:0x69fe7277,al
  410ae3:	fimul  DWORD PTR [esi-0x473e8c03]
  410ae9:	adc    bl,BYTE PTR [eax]
  410aeb:	xchg   esp,eax
  410aec:	arpl   WORD PTR [esi+0x60ef2ab],sp
  410af2:	sbb    ch,0xba
  410af5:	mov    esp,0xc878a4a6
  410afa:	mov    al,ds:0x334c152d
  410aff:	in     al,dx
  410b00:	push   ecx
  410b01:	lock pop ss
  410b03:	push   edx
  410b04:	inc    ebp
  410b05:	addr16 aam 0x20
  410b08:	stc    
  410b09:	xchg   ebp,eax
  410b0a:	and    BYTE PTR [ebp-0x5],ah
  410b0d:	and    BYTE PTR [ecx+0x14],ch
  410b10:	jp     0x410ad2
  410b12:	data16 mov BYTE PTR [ecx+0x1c3227cb],al
  410b19:	fucomip st,st(7)
  410b1b:	push   0x80f76c7e
  410b20:	mov    bh,0x5d
  410b22:	shl    DWORD PTR [edx],0x23
  410b25:	pop    eax
  410b26:	retf   
  410b27:	sbb    ebx,DWORD PTR [ebx+0x7f]
  410b2a:	dec    eax
  410b2b:	mov    bh,0xf7
  410b2d:	dec    ebx
  410b2e:	mov    DWORD PTR ds:0xa4db5e17,esp
  410b34:	xor    DWORD PTR [edx-0x42],ebp
  410b37:	push   edx
  410b38:	shl    edx,0xcf
  410b3b:	mov    ch,0x4b
  410b3d:	in     eax,dx
  410b3e:	sbb    al,0xfa
  410b40:	pop    edx
  410b41:	lods   al,BYTE PTR ds:[esi]
  410b42:	ds mov dl,0xc
  410b45:	add    BYTE PTR [ebx-0x6f],0x45
  410b49:	pop    edi
  410b4a:	pop    ecx
  410b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4c:	cs jbe 0x410bb1
  410b4f:	aas    
  410b50:	call   0x1c4:0x358f8c26
  410b57:	jo     0x410b4b
  410b59:	mov    DWORD PTR [eax],ecx
  410b5b:	inc    edx
  410b5c:	(bad)  
  410b5d:	mov    ebx,edx
  410b5f:	mov    esp,0x621990e7
  410b64:	adc    ah,bl
  410b66:	inc    eax
  410b67:	jae    0x410bc1
  410b69:	pushf  
  410b6a:	stos   DWORD PTR es:[edi],eax
  410b6b:	xor    al,0x9e
  410b6d:	(bad)  
  410b6e:	sub    al,0x89
  410b70:	jbe    0x410b94
  410b72:	mov    ebp,0x19b0bad2
  410b77:	fdiv   st(5),st
  410b79:	nop
  410b7a:	inc    esi
  410b7b:	pop    edx
  410b7c:	jns    0x410b42
  410b7e:	shl    edi,1
  410b80:	cs jg  0x410b2f
  410b83:	call   0xdcd0eba
  410b88:	or     BYTE PTR [eax+0x24],bh
  410b8b:	pop    ecx
  410b8c:	cld    
  410b8d:	or     eax,0x1a8d3cbf
  410b92:	sbb    dh,0xea
  410b95:	retf   0x12b2
  410b98:	pop    bp
  410b9a:	retf   
  410b9b:	push   ds
  410b9c:	sbb    BYTE PTR ds:0xa5e05996,bl
  410ba2:	jns    0x410b50
  410ba4:	out    0x56,eax
  410ba6:	sub    eax,0x40dcbe17
  410bab:	sti    
  410bac:	inc    ecx
  410bad:	cmp    ch,BYTE PTR [ecx]
  410baf:	cmp    eax,0xf70d4d9d
  410bb4:	cmp    bl,cl
  410bb6:	data16 xor al,0xc1
  410bb9:	aad    0xaa
  410bbb:	gs loope 0x410b45
  410bbe:	(bad)  
  410bc0:	fs imul ebx,ebx,0x24
  410bc4:	ins    BYTE PTR es:[edi],dx
  410bc5:	inc    ecx
  410bc6:	popf   
  410bc7:	inc    esp
  410bc8:	and    eax,0xa623027f
  410bcd:	push   ebp
  410bce:	rol    DWORD PTR [ebx],0x2a
  410bd1:	pop    ds
  410bd2:	pop    esi
  410bd3:	fidiv  WORD PTR [ecx+0x1f]
  410bd6:	je     0x410bfc
  410bd8:	gs adc dl,ch
  410bdb:	outs   dx,BYTE PTR ds:[esi]
  410bdc:	push   es
  410bdd:	jp     0x410be5
  410bdf:	sbb    eax,0x8295d942
  410be4:	mov    WORD PTR ds:0x28911e51,gs
  410bea:	imul   ebx,DWORD PTR [ebx-0x71],0xdf1c6c25
  410bf1:	jmp    0x6174:0x62563656
  410bf8:	inc    edx
  410bf9:	push   ebp
  410bfa:	mov    cl,0x24
  410bfc:	mov    dh,0xcc
  410bfe:	lods   eax,DWORD PTR ds:[esi]
  410bff:	leave  
  410c00:	mul    DWORD PTR [edx+0x5a]
  410c03:	xor    al,0x74
  410c05:	nop
  410c06:	jb     0x410bd0
  410c08:	or     bl,BYTE PTR [eax+0x37d04be8]
  410c0e:	lea    edi,[edx-0x2]
  410c11:	arpl   WORD PTR [esi],cx
  410c13:	test   al,0x4a
  410c15:	xor    ah,dl
  410c17:	mov    esi,0xb6792d4
  410c1c:	ror    BYTE PTR [ebp+0x291db2fa],cl
  410c22:	xchg   esp,eax
  410c23:	jns    0x410bd9
  410c25:	pop    edx
  410c26:	loopne 0x410c0c
  410c28:	hlt    
  410c29:	ret    
  410c2a:	fcmove st,st(3)
  410c2c:	shl    DWORD PTR [ebx],1
  410c2e:	add    BYTE PTR [eax+0x3c0ed49],cl
  410c34:	das    
  410c35:	adc    BYTE PTR [eax+0x2a0836f7],bl
  410c3b:	shl    DWORD PTR [eax-0xd],1
  410c3e:	lds    edi,FWORD PTR [ebp+esi*1-0x2f]
  410c42:	cmp    DWORD PTR [esi],ebp
  410c44:	les    ebp,FWORD PTR [ecx-0x7a]
  410c47:	push   ss
  410c48:	xchg   DWORD PTR ds:0xea8d57f3,ecx
  410c4e:	je     0x410c75
  410c50:	xchg   esi,eax
  410c51:	iret   
  410c52:	xchg   esp,eax
  410c53:	xchg   ebp,eax
  410c54:	xchg   ebp,eax
  410c55:	pop    edx
  410c56:	cwde   
  410c57:	dec    ebp
  410c58:	add    ebx,DWORD PTR [ecx+0x71]
  410c5b:	js     0x410cd6
  410c5d:	jl     0x410c01
  410c5f:	sub    DWORD PTR [ebx],esp
  410c61:	enter  0xebee,0x6c
  410c65:	cmp    DWORD PTR [ebx],eax
  410c67:	xlat   BYTE PTR ds:[ebx]
  410c68:	out    0x2d,eax
  410c6a:	sub    dh,BYTE PTR [ebx-0x7baa36bb]
  410c70:	mov    eax,ds:0xe7a0ee05
  410c75:	jnp    0x410ccd
  410c77:	xchg   edx,eax
  410c78:	in     eax,dx
  410c79:	popf   
  410c7a:	pop    esp
  410c7b:	lods   al,BYTE PTR ds:[esi]
  410c7c:	pushf  
  410c7d:	ror    BYTE PTR [ebx+0x66],1
  410c80:	into   
  410c81:	add    eax,0xfd3c6303
  410c86:	jmp    0x410d06
  410c88:	jns    0x410cc9
  410c8a:	clc    
  410c8b:	aaa    
  410c8c:	ds call 0xd35f:0xd0b8b979
  410c94:	lea    ecx,[edi]
  410c96:	push   ebp
  410c97:	and    DWORD PTR [ecx+esi*2],0x6eecfe8b
  410c9e:	xor    BYTE PTR [edx],ch
  410ca0:	hlt    
  410ca1:	popa   
  410ca2:	pop    ebx
  410ca3:	dec    ecx
  410ca4:	sub    DWORD PTR [esi],ebx
  410ca6:	aad    0x5
  410ca8:	cmp    ch,BYTE PTR [edi+0x74f588e9]
  410cae:	cli    
  410caf:	lea    esi,[edx]
  410cb1:	pop    ecx
  410cb2:	mov    ds:0xa7838737,al
  410cb7:	or     ecx,ebp
  410cb9:	xchg   edi,eax
  410cba:	inc    ebx
  410cbb:	enter  0x9190,0x61
  410cbf:	retf   0x77ca
  410cc2:	or     eax,0xd55cc9f4
  410cc7:	dec    eax
  410cc8:	pusha  
  410cc9:	or     al,0xda
  410ccb:	arpl   WORD PTR [eax+0x4568f99c],si
  410cd1:	xor    ecx,DWORD PTR [edi-0x219226a1]
  410cd7:	(bad)
  410cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cdd:	div    DWORD PTR [esi+ebx*1-0x48]
  410ce1:	es loopne 0x410d3e
  410ce4:	in     eax,0xf
  410ce6:	cmp    DWORD PTR [edx],eax
  410ce8:	add    al,bl
  410cea:	adc    eax,DWORD PTR [edi+0x4b]
  410ced:	sbb    eax,0xb6f7b007
  410cf2:	jne    0x410d6e
  410cf4:	jo     0x410d00
  410cf6:	fidivr DWORD PTR [esi]
  410cf8:	jns    0x410d70
  410cfa:	fsub   st,st(3)
  410cfc:	sbb    ah,BYTE PTR [ebp+0x140ad122]
  410d02:	enter  0x189c,0x44
  410d06:	sub    esp,0x7bb3cbfa
  410d0c:	xlat   BYTE PTR ds:[ebx]
  410d0d:	idiv   DWORD PTR [ebx-0x7ae8ebe2]
  410d13:	jg     0x410cd7
  410d15:	ds cmc 
  410d17:	xor    eax,DWORD PTR [esi]
  410d19:	or     DWORD PTR cs:[ecx+0x57],0xa68ad9e8
  410d21:	xor    edx,esi
  410d23:	mov    bl,0xa2
  410d25:	rcl    DWORD PTR [eax-0x222fa56d],1
  410d2b:	jp     0x410d82
  410d2d:	data16 (bad) 
  410d2f:	outs   dx,BYTE PTR ds:[esi]
  410d30:	stc    
  410d31:	std    
  410d32:	retf   
  410d33:	jle    0x410d6e
  410d35:	retf   0xa063
  410d38:	and    eax,0x926d02ac
  410d3d:	es mov ebx,0xc7fc7d89
  410d43:	inc    ebp
  410d44:	hlt    
  410d45:	mov    ch,BYTE PTR [eax+eax*1]
  410d48:	add    BYTE PTR [ebx+0x1b8f44d],cl
  410d4e:	inc    esp
  410d4f:	add    BYTE PTR [eax],al
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffffc2
  410d65:	inc    eax
  410d66:	xchg   DWORD PTR [ebp+ebp*2-0x7e],edi
  410d6a:	sbb    BYTE PTR [eax],bl
  410d6c:	call   0xd7c1:0x16181814
  410d73:	fdivrp st(3),st
  410d75:	mov    ds:0xe101779d,al
  410d7a:	arpl   sp,di
  410d7c:	dec    eax
  410d7d:	cmp    al,0xe3
  410d7f:	outs   dx,DWORD PTR ds:[esi]
  410d80:	inc    ebp
  410d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d82:	adc    bh,BYTE PTR [edx]
  410d84:	loopne 0x410d53
  410d86:	mov    ah,0xdf
  410d88:	and    al,0x75
  410d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d8b:	int3   
  410d8c:	jae    0x410d55
  410d8e:	mov    al,ds:0xbe3c928b
  410d93:	out    dx,eax
  410d94:	mov    dh,0x6c
  410d96:	and    BYTE PTR [esi+0x6c],ch
  410d99:	shl    BYTE PTR [ebx-0x48],cl
  410d9c:	and    al,0x1
  410d9e:	inc    BYTE PTR [eax+0x32c4b580]
  410da4:	jae    0x410ddc
  410da6:	mov    esp,0x40bd9cd5
  410dab:	xchg   ebx,eax
  410dac:	shl    BYTE PTR [edi-0x61],0xf4
  410db0:	fist   WORD PTR [edi+0x2c111a33]
  410db6:	out    dx,eax
  410db7:	inc    ebp
  410db8:	push   es
  410db9:	lds    esi,FWORD PTR [ebx]
  410dbb:	ds push ecx
  410dbd:	dec    esp
  410dbe:	shr    BYTE PTR [ecx-0xb],cl
  410dc1:	inc    edx
  410dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dc3:	adc    BYTE PTR [edx],ch
  410dc5:	dec    edx
  410dc6:	adc    BYTE PTR [ecx+0x3b50334b],0xef
  410dcd:	xchg   BYTE PTR [ebx],cl
  410dcf:	sub    bl,BYTE PTR [eax+ecx*4-0x2c]
  410dd3:	adc    BYTE PTR [edx-0x17],bl
  410dd6:	add    ch,BYTE PTR [edi+0x6e81c656]
  410ddc:	(bad)  
  410ddd:	cmp    ebx,ebx
  410ddf:	push   edx
  410de0:	sub    bh,BYTE PTR [ebx+0x7d]
  410de3:	retf   0x6fdb
  410de6:	dec    esi
  410de7:	add    bl,bh
  410de9:	std    
  410dea:	jmp    DWORD PTR [ebx-0x57]
  410ded:	dec    ebx
  410dee:	stos   DWORD PTR es:[edi],eax
  410def:	int3   
  410df0:	sub    al,BYTE PTR [ebx-0x37e7a6c5]
  410df6:	call   0x14a35c03
  410dfb:	out    dx,al
  410dfc:	shl    DWORD PTR [ebx-0x168ac5c9],cl
  410e02:	xor    al,0xb0
  410e04:	jb     0x410ddb
  410e06:	adc    dl,BYTE PTR [edi+0x55f0a852]
  410e0c:	mov    bl,0x50
  410e0e:	gs lock inc eax
  410e11:	sar    BYTE PTR [esi],0x42
  410e14:	xchg   esp,eax
  410e15:	jg     0x410e74
  410e17:	rcr    ecx,0x8e
  410e1a:	adc    eax,0xcb7c051b
  410e1f:	aas    
  410e20:	adc    eax,0xb2b64a62
  410e25:	stc    
  410e26:	outs   dx,DWORD PTR ds:[esi]
  410e27:	ret    0x6ebb
  410e2a:	xor    DWORD PTR ds:0xde52960c,edi
  410e30:	hlt    
  410e31:	mov    esp,?
  410e33:	cdq    
  410e34:	add    eax,0x1368d899
  410e39:	xchg   esi,eax
  410e3a:	add    al,0x67
  410e3c:	outs   dx,BYTE PTR ds:[esi]
  410e3d:	lds    eax,FWORD PTR [ebp-0x3e515ea3]
  410e43:	ins    BYTE PTR es:[edi],dx
  410e44:	mov    ds:0x571cf86e,al
  410e49:	mov    al,BYTE PTR ds:0xd90a822f
  410e4f:	or     esi,DWORD PTR [edx-0x64]
  410e52:	dec    edx
  410e53:	sbb    ch,BYTE PTR [edi]
  410e55:	aas    
  410e56:	xor    ebp,DWORD PTR [edx+eiz*2]
  410e59:	nop
  410e5a:	adc    al,0x4a
  410e5c:	jne    0x410e2d
  410e5e:	and    ecx,DWORD PTR [ecx+0x14e2145e]
  410e64:	xchg   edi,eax
  410e65:	mov    dh,bh
  410e67:	jb     0x410e69
  410e69:	adc    eax,0xaf5b6028
  410e6e:	or     al,0xc
  410e70:	sub    al,0x59
  410e72:	dec    ebx
  410e73:	push   ebx
  410e74:	dec    eax
  410e75:	push   esp
  410e76:	sub    DWORD PTR [ebp+0xa],0xffffff9c
  410e7a:	or     al,0x2d
  410e7c:	arpl   si,ax
  410e7e:	or     eax,0x27045771
  410e83:	push   0xd5f0a8af
  410e88:	add    al,0xb4
  410e8a:	inc    ebx
  410e8b:	call   0xa93a7ad1
  410e90:	jbe    0x410e1f
  410e92:	loop   0x410eda
  410e94:	mov    ebx,0x503f7b1f
  410e99:	fild   DWORD PTR [esi-0x16]
  410e9c:	jmp    DWORD PTR [ebp+eiz*8-0xa]
  410ea0:	ficom  DWORD PTR [eax]
  410ea2:	ins    BYTE PTR es:[edi],dx
  410ea3:	xchg   ecx,eax
  410ea4:	shr    eax,0x0
  410ea7:	add    BYTE PTR [edi-0x315b62a4],al
  410ead:	sub    al,0x63
  410eaf:	int3   
  410eb0:	and    eax,0xdd6977d8
  410eb5:	jmp    0x410e9c
  410eb7:	fwait
  410eb8:	cmp    DWORD PTR [ebx],ebx
  410eba:	retf   
  410ebb:	cli    
  410ebc:	test   al,0x7e
  410ebe:	out    dx,al
  410ebf:	xchg   edi,eax
  410ec0:	call   0xa077098d
  410ec5:	jecxz  0x410f31
  410ec7:	(bad)  
  410ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ec9:	les    eax,FWORD PTR [eax-0x73]
  410ecc:	call   0x8345:0xc400d6e5
  410ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ed4:	(bad)  
  410ed5:	das    
  410ed6:	pop    ebx
  410ed7:	mov    BYTE PTR [ecx-0x5],0xfd
  410edb:	fdivr  DWORD PTR [ecx-0x4b]
  410ede:	pop    esp
  410edf:	icebp  
  410ee0:	mov    ?,ecx
  410ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee3:	xchg   ecx,eax
  410ee4:	pop    edx
  410ee5:	(bad)  
  410ee7:	(bad)  
  410ee8:	outs   dx,DWORD PTR ds:[esi]
  410ee9:	jb     0x410eda
  410eeb:	call   0xd2b0:0x665fd18f
  410ef2:	shl    DWORD PTR [ebx+0x30d5deb4],cl
  410ef8:	call   0x8cc34c53
  410efd:	inc    esi
  410efe:	xor    dl,bl
  410f00:	jb     0x410f5d
  410f02:	mov    ecx,0xfaccfb8b
  410f07:	sub    al,ah
  410f09:	push   esp
  410f0a:	shl    DWORD PTR [eax+0x36],1
  410f0d:	mov    WORD PTR [ecx],ds
  410f0f:	or     DWORD PTR [edx],edi
  410f11:	push   esp
  410f12:	xchg   edx,eax
  410f13:	ss jo  0x410f7a
  410f16:	aad    0x3d
  410f18:	sti    
  410f19:	fs pop ebx
  410f1b:	adc    DWORD PTR [esi+0x7c],esp
  410f1e:	test   BYTE PTR [ebx+0xc736517],dl
  410f24:	or     ch,BYTE PTR [edi]
  410f26:	mov    al,ds:0xde779760
  410f2b:	mov    bl,0x90
  410f2d:	ret    0x277e
  410f30:	(bad)  
  410f33:	test   DWORD PTR [esi],ebx
  410f35:	sub    DWORD PTR [edx+0x72d16ec0],0xfffffffa
  410f3c:	imul   edx,DWORD PTR [eax+0x3f5906b5],0x3f33b30a
  410f46:	push   edx
  410f47:	psubb  mm6,mm2
  410f4a:	lea    ecx,[ecx-0x71c88285]
  410f50:	xor    dl,BYTE PTR [ecx-0x2bc87274]
  410f56:	fs mov cl,0x35
  410f59:	repnz daa 
  410f5b:	or     bh,BYTE PTR es:[ebx-0x5461303c]
  410f62:	sbb    ch,dl
  410f64:	in     al,dx
  410f65:	imul   esi,DWORD PTR [ecx+0x52],0x921f5431
  410f6c:	push   ecx
  410f6d:	repz lea ecx,[eax-0x57]
  410f71:	mov    ebx,0x23c892ae
  410f76:	dec    eax
  410f77:	stos   BYTE PTR es:[edi],al
  410f78:	and    al,0x40
  410f7a:	mov    ds:0xcc470d3d,al
  410f7f:	in     eax,0x5a
  410f81:	cmp    BYTE PTR [ebx],dl
  410f83:	ret    
  410f84:	jge    0x410fef
  410f86:	or     BYTE PTR [ebp+0x7d002b0e],dh
  410f8c:	or     al,0x97
  410f8e:	mov    ah,0x11
  410f90:	mov    edx,0x7dcbc54c
  410f95:	push   0x17733977
  410f9a:	mov    eax,ds:0x4737ca3a
  410f9f:	xlat   BYTE PTR ds:[ebx]
  410fa0:	or     eax,0x67352e96
  410fa5:	mov    edi,0xceaf6607
  410faa:	and    cl,bh
  410fac:	fistp  WORD PTR [esi+0x62f769e1]
  410fb2:	dec    esp
  410fb3:	and    bh,BYTE PTR [esi-0x1fa2b5e4]
  410fb9:	aas    
  410fba:	jecxz  0x410fc5
  410fbc:	mov    ds:0xc6960040,al
  410fc1:	pop    ecx
  410fc2:	fistp  WORD PTR [edx-0x280584f4]
  410fc8:	xchg   edx,eax
  410fc9:	mov    esi,0xd7824484
  410fce:	(bad)  
  410fd0:	(bad)  
  410fd1:	lea    eax,[edi+ecx*4-0x67]
  410fd5:	repnz ds mov bp,0x883c
  410fdb:	daa    
  410fdc:	sub    DWORD PTR gs:[edi-0x663e7f63],ecx
  410fe3:	dec    esi
  410fe4:	xchg   esp,eax
  410fe5:	out    0x5a,al
  410fe7:	pop    ebp
  410fe8:	jecxz  0x410f97
  410fea:	cmp    eax,edx
  410fec:	test   al,cl
  410fee:	adc    BYTE PTR [edi],ah
  410ff0:	cmp    DWORD PTR [edi+esi*1-0x39],0xffffffe4
  410ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff6:	cmp    DWORD PTR [edx+0x27],edi
  410ff9:	xchg   esp,eax
  410ffa:	mov    bl,0x62
  410ffc:	sbb    DWORD PTR [edi],ebx
  410ffe:	add    eax,0xe00b0d17
  411003:	cmp    BYTE PTR [ecx+edi*2+0x36061499],bh
  41100a:	test   eax,0xb96c8d4d
  41100f:	adc    ch,0x2
  411012:	jae    0x411041
  411014:	fiadd  WORD PTR [esi+0x66c38788]
  41101a:	adc    al,0x94
  41101c:	imul   eax,DWORD PTR [ecx+0x695710ff],0xf1f9558
  411026:	fld    st(2)
  411028:	inc    ebp
  411029:	inc    ebp
  41102a:	ud1    esi,ecx
  41102d:	inc    eax
  41102e:	mov    dl,0x7
  411030:	js     0x4110b1
  411032:	jo     0x410fbf
  411034:	dec    ebp
  411035:	cld    
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax+0x3d]
  4111f1:	das    
  4111f2:	dec    ebp
  4111f3:	jle    0x4111e3
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	out    dx,al
  4111fd:	sbb    edx,0xfffffff7
  411200:	es mov ch,0x64
  411203:	jbe    0x41121b
  411205:	sub    BYTE PTR [edi],bl
  411207:	xchg   ecx,eax
  411208:	lea    edx,[esi+0x6f]
  41120b:	or     DWORD PTR [eax],ecx
  41120d:	cmp    eax,0x8b18f4eb
  411212:	inc    ecx
  411213:	cli    
  411214:	push   ss
  411215:	mov    WORD PTR [ebx],?
  411217:	cli    
  411218:	jmp    0xb06e5350
  41121d:	jae    0x41127d
  41121f:	cdq    
  411220:	mov    DWORD PTR [edi+0x2048da58],edx
  411226:	popf   
  411227:	adc    eax,0x55a5ac54
  41122c:	test   DWORD PTR [edx-0x9],ebp
  41122f:	cmp    DWORD PTR [esi-0x19],0x111bedb1
  411236:	cmp    DWORD PTR [ecx-0x4e],esi
  411239:	enter  0x93fb,0x97
  41123d:	test   ecx,ebp
  41123f:	(bad)  
  411241:	sbb    eax,DWORD PTR [ebp+0x5a]
  411244:	jne    0x41120a
  411246:	xchg   DWORD PTR [ecx],ecx
  411248:	mov    eax,0x7815db30
  41124d:	mov    eax,0x4ba4dd98
  411252:	inc    ebp
  411253:	mov    ds:0x32c38622,eax
  411258:	in     al,0xc7
  41125a:	fdiv   st,st(6)
  41125c:	adc    BYTE PTR [ecx-0x6c02dfd1],dl
  411262:	add    eax,0x55424781
  411267:	mov    eax,0x8152dbba
  41126c:	cmp    eax,0xfda9c172
  411271:	pop    ecx
  411272:	dec    ebp
  411273:	pop    edi
  411274:	pop    ecx
  411275:	std    
  411276:	out    dx,al
  411277:	mov    ch,0xdb
  411279:	test   eax,0x4f277c63
  41127e:	push   0xffffffc0
  411280:	pusha  
  411281:	cmp    eax,0x1de7c322
  411286:	inc    edx
  411287:	or     ah,bl
  411289:	outs   dx,DWORD PTR ds:[esi]
  41128a:	lahf   
  41128b:	and    BYTE PTR [ebx+0x1157b6ef],cl
  411291:	xor    esi,edi
  411293:	out    dx,al
  411294:	mov    eax,ds:0xd809bb3b
  411299:	adc    eax,0xd1a8fed8
  41129e:	loop   0x41127b
  4112a0:	mov    dh,0x4b
  4112a2:	jecxz  0x4112f6
  4112a4:	jo     0x411289
  4112a6:	sub    al,0x42
  4112a8:	mov    ds:0x7da87a3a,al
  4112ad:	repz bound eax,QWORD PTR [ebp+0x26]
  4112b1:	xchg   ebp,eax
  4112b2:	cmp    al,0x70
  4112b4:	enter  0xaab,0xe9
  4112b8:	jno    0x4112d9
  4112ba:	loope  0x4112f5
  4112bc:	retf   
  4112bd:	cdq    
  4112be:	push   ds
  4112bf:	xchg   BYTE PTR [eax+edi*4-0x21],dh
  4112c3:	mov    esi,DWORD PTR [edi+0x6cc88799]
  4112c9:	rcr    BYTE PTR [edx+0x40aa2d10],1
  4112cf:	das    
  4112d0:	sbb    eax,0x9f87a941
  4112d5:	push   ecx
  4112d6:	and    al,BYTE PTR [edi+0x1dc9ab1]
  4112dc:	cmp    BYTE PTR [eax],al
  4112de:	in     al,dx
  4112df:	stc    
  4112e0:	jb     0x411334
  4112e2:	stos   BYTE PTR es:[edi],al
  4112e3:	in     al,dx
  4112e4:	sbb    ah,bh
  4112e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112e7:	xchg   DWORD PTR ds:0x14f6d898,edx
  4112ed:	dec    esi
  4112ee:	jmp    0x6ea2:0x9b6c25f3
  4112f5:	cdq    
  4112f6:	(bad)  
  4112f7:	mov    ds:0x4d0d1226,al
  4112fc:	jle    0x4112ac
  4112fe:	jl     0x4112ce
  411300:	stos   BYTE PTR es:[edi],al
  411301:	xor    BYTE PTR [ebp-0x66c2dc26],al
  411307:	in     al,0x3b
  411309:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41130b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41130c:	sbb    DWORD PTR [ecx],ecx
  41130e:	(bad)  [eax+0x64]
  411311:	jmp    0x4112ab
  411313:	push   esp
  411314:	(bad)  
  411315:	(bad)  
  411316:	aad    0x47
  411318:	xchg   esp,eax
  411319:	neg    DWORD PTR [edi]
  41131b:	or     BYTE PTR [ebp+0x15],0x67
  41131f:	adc    ebx,DWORD PTR [esi+0x3c78c9f4]
  411325:	and    al,0xd4
  411327:	call   0x455b9f7e
  41132c:	jge    0x4112d1
  41132e:	or     esi,eax
  411330:	sub    eax,DWORD PTR [ecx]
  411332:	mov    dl,0x9e
  411334:	sub    BYTE PTR [edi-0x22f77f08],0x92
  41133b:	mov    ebp,tr6
  41133e:	adc    BYTE PTR [edi],al
  411340:	pop    ebp
  411341:	neg    BYTE PTR [edi-0x32a23256]
  411347:	rcl    BYTE PTR [edi],cl
  411349:	dec    esp
  41134a:	or     eax,DWORD PTR [edx+0x7e971912]
  411350:	hlt    
  411351:	scas   eax,DWORD PTR es:[edi]
  411352:	jp     0x411318
  411354:	mov    bl,0x15
  411356:	and    DWORD PTR [edi],ecx
  411358:	jge    0x41136e
  41135a:	xor    eax,0x37c24bd2
  41135f:	enter  0xcd0e,0xd7
  411363:	sub    al,0xcb
  411365:	repz mov ds:0x864a5aad,eax
  41136b:	hlt    
  41136c:	mov    ch,0xe8
  41136e:	push   ecx
  41136f:	jno    0x41130d
  411371:	stos   BYTE PTR es:[edi],al
  411372:	fbstp  TBYTE PTR [edx+eiz*8+0x69c872e]
  411379:	ror    BYTE PTR [ecx+0x3a],cl
  41137c:	sti    
  41137d:	sub    eax,0x526dd121
  411382:	call   0x1411:0x59adbd13
  411389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41138a:	inc    esp
  41138b:	add    BYTE PTR [edi+0x1b],ch
  41138e:	icebp  
  41138f:	and    DWORD PTR [edx+0x640ebb22],eax
  411395:	enter  0x864f,0x46
  411399:	adc    al,0x2c
  41139b:	xlat   BYTE PTR ds:[ebx]
  41139c:	test   al,0x10
  41139e:	xor    edi,esp
  4113a0:	and    ebp,DWORD PTR [edi]
  4113a2:	inc    esp
  4113a3:	jge    0x41139b
  4113a5:	fldcw  WORD PTR [ecx*8-0x1102a84f]
  4113ac:	retf   
  4113ad:	out    dx,eax
  4113ae:	pop    esi
  4113af:	xor    eax,0x548f4e49
  4113b4:	(bad)  
  4113b6:	pop    edi
  4113b7:	fwait
  4113b8:	or     bl,dh
  4113ba:	rol    BYTE PTR [esi],cl
  4113bc:	xor    BYTE PTR [ebp+0x4b],ah
  4113bf:	push   esi
  4113c0:	xchg   edx,eax
  4113c1:	cwde   
  4113c2:	shl    BYTE PTR [eax],1
  4113c4:	push   eax
  4113c5:	ins    DWORD PTR es:[edi],dx
  4113c6:	dec    esp
  4113c7:	rol    esi,cl
  4113c9:	jno    0x411445
  4113cb:	add    al,0x7c
  4113cd:	dec    edi
  4113ce:	enter  0x2143,0xb
  4113d2:	fstp   DWORD PTR [ebp+0x3d7ff704]
  4113d8:	stc    
  4113d9:	inc    edi
  4113da:	test   edx,ebp
  4113dc:	cmp    esi,edx
  4113de:	out    dx,al
  4113df:	mov    ds:0x25207e11,eax
  4113e4:	mov    ds:0xfb8d9629,al
  4113e9:	(bad)  
  4113eb:	mul    DWORD PTR [eax-0x6feb9d9d]
  4113f1:	xchg   ecx,eax
  4113f2:	xchg   ecx,eax
  4113f3:	jae    0x4113e6
  4113f5:	inc    esp
  4113f6:	or     DWORD PTR [ecx+0x4c],0x8bd95dd5
  4113fd:	xor    BYTE PTR ds:0xdb0e0ad1,ah
  411403:	mov    dl,0xf2
  411405:	mov    ds:0x970f02fa,al
  41140a:	mov    ebx,0x828e244d
  41140f:	loope  0x4113bb
  411411:	mov    es,ecx
  411413:	into   
  411414:	xor    ebx,DWORD PTR [esi+0x8]
  411417:	ret    0xfc75
  41141a:	(bad)  
  41141b:	jg     0x4113a6
  41141d:	mov    ah,0x1c
  41141f:	in     eax,dx
  411420:	dec    esp
  411421:	jmp    0x6bed:0x66e4a003
  411428:	fcmovbe st,st(2)
  41142a:	cmp    al,BYTE PTR [edi+eiz*1]
  41142d:	sbb    esi,DWORD PTR [ebx+0x28b6b6dc]
  411433:	xlat   BYTE PTR ds:[ebx]
  411434:	cmp    al,0x99
  411436:	xchg   esi,eax
  411437:	test   al,0x35
  411439:	sub    DWORD PTR [ebp+0x2],edx
  41143c:	inc    esi
  41143d:	retf   
  41143e:	repnz sbb eax,0x3d11f0b0
  411444:	push   eax
  411445:	cs jecxz 0x411478
  411448:	mov    dh,0x61
  41144a:	out    dx,eax
  41144b:	or     eax,0x9523d537
  411450:	rcl    BYTE PTR [ebp+0x16],0x27
  411454:	mov    DWORD PTR [ebp-0xb0],0x7564
  41145e:	mov    DWORD PTR [ebp-0xac],0x18cf
  411468:	mov    DWORD PTR [ebp-0xa0],0x3135
  411472:	mov    DWORD PTR [ebp-0x9c],0x568d
  41147c:	mov    DWORD PTR [ebp-0x90],0x11f2
  411486:	mov    DWORD PTR [ebp-0x8c],0x63ea
  411490:	mov    DWORD PTR [ebp-0x10],0x3066
  411497:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41149e:	push   0x7e1d
  4114a3:	jmp    0x411718
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x217e2188]
  4114b5:	ret    0xaae3
  4114b8:	inc    edi
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	popa   
  4114c1:	mov    bl,0x49
  4114c3:	sub    DWORD PTR [ebx+0x648a7308],edi
  4114c9:	mov    ch,0x54
  4114cb:	jecxz  0x411481
  4114cd:	out    dx,eax
  4114ce:	ins    DWORD PTR es:[edi],dx
  4114cf:	in     eax,0xed
  4114d1:	or     al,BYTE PTR [edi]
  4114d3:	adc    al,dl
  4114d5:	xchg   BYTE PTR [ecx+0x37],cl
  4114d8:	pop    eax
  4114d9:	sub    esp,esi
  4114db:	mov    ds:0x1ecd12bd,al
  4114e0:	push   ebp
  4114e1:	sub    cx,si
  4114e4:	shl    DWORD PTR [eax+0x294fbb1f],cl
  4114ea:	adc    eax,0xc58d63b3
  4114ef:	xchg   ecx,eax
  4114f0:	cmp    dl,BYTE PTR [ecx+0x72]
  4114f3:	(bad)  
  4114f4:	ins    DWORD PTR es:[edi],dx
  4114f5:	xor    BYTE PTR [edi+edx*1+0x12],ah
  4114f9:	(bad)  
  4114fa:	loopne 0x411484
  4114fc:	lahf   
  4114fd:	mov    ebp,0xae5041ec
  411502:	dec    eax
  411503:	sub    ebp,DWORD PTR [edi+eiz*8-0x1e]
  411507:	sar    DWORD PTR [edx],cl
  411509:	mov    edx,0x536d42cc
  41150e:	xor    eax,0x35ab5759
  411513:	xor    ah,BYTE PTR [esi+0x2aa1db8c]
  411519:	scas   al,BYTE PTR es:[edi]
  41151a:	xchg   esi,eax
  41151b:	stc    
  41151c:	add    al,0x38
  41151e:	mov    eax,0x8b3b865
  411523:	(bad)  
  411527:	jecxz  0x41151f
  411529:	out    0x82,eax
  41152b:	(bad)  
  41152c:	cdq    
  41152d:	icebp  
  41152e:	cmp    eax,0x8611d95f
  411533:	xor    eax,0xa398d8db
  411538:	jae    0x4114ed
  41153a:	das    
  41153b:	out    dx,eax
  41153c:	(bad)  
  41153d:	in     al,dx
  41153e:	jg     0x411556
  411540:	mov    dh,0x31
  411542:	int    0xaa
  411544:	jmp    0x92dd39e3
  411549:	ins    BYTE PTR es:[edi],dx
  41154a:	mov    esi,0xd875237c
  41154f:	mov    dl,0x11
  411551:	das    
  411552:	and    edi,DWORD PTR [edi]
  411554:	call   0x37a4:0x23e380ad
  41155b:	in     eax,dx
  41155c:	jbe    0x4114de
  41155e:	(bad)  
  41155f:	push   cs
  411560:	daa    
  411561:	(bad)  
  411564:	lahf   
  411565:	or     eax,0x8c5633ca
  41156a:	xor    DWORD PTR [ebx],0xffffffd1
  41156d:	fdivr  st(2),st
  41156f:	into   
  411570:	jmp    0x4115bf
  411572:	jecxz  0x411507
  411574:	inc    edx
  411575:	mov    al,ds:0x77dbf30b
  41157a:	ins    DWORD PTR es:[edi],dx
  41157b:	or     BYTE PTR [eax],bh
  41157d:	ins    DWORD PTR es:[edi],dx
  41157e:	les    edi,FWORD PTR [ebp-0x3b2f411b]
  411584:	mov    ah,0xf3
  411586:	jno    0x41155c
  411588:	aam    0xc4
  41158a:	int3   
  41158b:	jno    0x41152c
  41158d:	jecxz  0x4115e3
  41158f:	add    eax,0x7e8d462f
  411594:	dec    ebx
  411595:	mov    al,0xda
  411597:	inc    eax
  411598:	daa    
  411599:	push   0x417f7549
  41159e:	mov    gs,WORD PTR [ecx+0x65]
  4115a1:	pop    ecx
  4115a2:	adc    DWORD PTR [eax+ecx*2-0x13895b93],ebx
  4115a9:	test   DWORD PTR [edi*1+0x3cea3733],eax
  4115b0:	mov    DWORD PTR [ecx],ebp
  4115b2:	mov    al,0x53
  4115b4:	inc    ebp
  4115b5:	cwde   
  4115b6:	ror    BYTE PTR [ebx],1
  4115b8:	mov    ch,0xf4
  4115ba:	hlt    
  4115bb:	dec    edx
  4115bc:	pop    ss
  4115bd:	sbb    al,0x8d
  4115bf:	push   ebp
  4115c0:	xchg   edx,eax
  4115c1:	aaa    
  4115c2:	adc    eax,0x2be19465
  4115c7:	mov    eax,ds:0xf1da39ac
  4115cc:	aad    0x55
  4115ce:	lds    edx,FWORD PTR [edi-0x63b3b440]
  4115d4:	mov    esp,0x6fa03423
  4115d9:	cld    
  4115da:	lock cmp DWORD PTR [eax+0x6ce65867],0xffffff8f
  4115e2:	js     0x411565
  4115e4:	dec    ebx
  4115e5:	jmp    0x4115a1
  4115e7:	ss pop esp
  4115e9:	jns    0x41163e
  4115eb:	xchg   esi,eax
  4115ec:	jge    0x4115d5
  4115ee:	or     ecx,DWORD PTR [edi+0x6f]
  4115f1:	loop   0x411610
  4115f3:	jns    0x4115fe
  4115f5:	jae    0x411656
  4115f7:	pop    ds
  4115f8:	je     0x4115f1
  4115fa:	mov    ah,0xc4
  4115fc:	rol    dh,cl
  4115fe:	ficomp DWORD PTR [eax+0x73]
  411601:	sub    bh,BYTE PTR [edi+eax*8+0x309d2ce]
  411608:	cmp    esi,DWORD PTR [eax+ecx*1+0x70801190]
  41160f:	xor    cl,BYTE PTR ds:0x9c614d26
  411615:	jno    0x41161c
  411617:	ds sahf 
  411619:	dec    edx
  41161a:	jnp    0x41162c
  41161c:	push   eax
  41161d:	push   cs
  41161e:	in     al,0x12
  411620:	jmp    0x411646
  411622:	(bad)  
  411623:	jmp    0x41166a
  411625:	arpl   WORD PTR [eax-0x6ceec9a],sp
  41162b:	or     al,ah
  41162d:	test   DWORD PTR [ecx],eax
  41162f:	xor    edi,DWORD PTR [esi+esi*1]
  411632:	jg     0x411637
  411634:	into   
  411635:	jbe    0x4115cf
  411637:	dec    eax
  411638:	je     0x41164f
  41163a:	jmp    0xb6ac4be1
  41163f:	xchg   edi,eax
  411640:	adc    DWORD PTR [eax+0x32599d76],ebx
  411646:	sbb    DWORD PTR [edx],0x518e4ba7
  41164c:	inc    esp
  41164d:	add    BYTE PTR [esi-0x18e5b4e8],ch
  411653:	sbb    cl,ch
  411655:	xor    DWORD PTR [ecx],0xffffffa5
  411658:	out    dx,eax
  411659:	lock call 0x4c1d8825
  41165f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411660:	mov    dl,0x43
  411662:	sbb    eax,0x1a0645eb
  411667:	mov    DWORD PTR [ecx-0x1a],ecx
  41166a:	fcom   QWORD PTR [edi+0x7357759f]
  411670:	in     al,0xc1
  411672:	stos   BYTE PTR es:[edi],al
  411673:	pop    ds
  411674:	mov    edx,0xd4e35c3e
  411679:	iret   
  41167a:	mov    DWORD PTR [esi],eax
  41167c:	ss inc ebp
  41167e:	fs dec ebp
  411680:	mov    ah,0x48
  411682:	aam    0xd9
  411684:	and    ah,al
  411686:	add    esp,ebp
  411688:	xchg   ecx,eax
  411689:	jg     0x41167b
  41168b:	mov    cs:0xabb3f045,eax
  411691:	jne    0x4116fa
  411693:	push   cs
  411694:	iret   
  411695:	imul   ebp,DWORD PTR [edx-0x2e02884e],0x9199a1aa
  41169f:	lods   eax,DWORD PTR ds:[esi]
  4116a0:	dec    esi
  4116a1:	outs   dx,BYTE PTR ds:[esi]
  4116a2:	not    ah
  4116a4:	or     eax,0x435bb787
  4116a9:	dec    eax
  4116aa:	lods   eax,DWORD PTR ds:[esi]
  4116ab:	pop    ecx
  4116ac:	xchg   edx,eax
  4116ad:	add    eax,edx
  4116af:	jo     0x4116f5
  4116b1:	sahf   
  4116b2:	pmullw mm7,QWORD PTR [edx-0x4720fb3d]
  4116b9:	or     DWORD PTR [edx-0x2e],ebx
  4116bc:	cmp    ah,ch
  4116be:	jnp    0x4116b2
  4116c0:	adc    ah,bh
  4116c2:	fmul   st(6),st
  4116c4:	push   esp
  4116c5:	mov    BYTE PTR [ebx],dh
  4116c7:	push   0xffffffb1
  4116c9:	or     al,0xb2
  4116cb:	dec    edi
  4116cc:	loop   0x41173a
  4116ce:	ins    BYTE PTR es:[edi],dx
  4116cf:	mov    gs,WORD PTR [esi+0x3a]
  4116d2:	imul   ecx,DWORD PTR [ebp+0x4b],0xd1fb97c9
  4116d9:	xor    DWORD PTR [eax],esp
  4116db:	aas    
  4116dc:	lods   al,BYTE PTR ds:[esi]
  4116dd:	add    BYTE PTR [esi],0x2e
  4116e0:	imul   edx,DWORD PTR [eax+eiz*1+0x78bfaf2d],0x23
  4116e8:	(bad)  
  4116e9:	dec    edx
  4116ea:	cmc    
  4116eb:	jmp    0x41166e
  4116ed:	push   0x592cc8d5
  4116f2:	mul    BYTE PTR [ebx+ebx*2-0x6]
  4116f6:	sbb    DWORD PTR ds:0x15bb9afc,eax
  4116fc:	push   ss
  4116fd:	adc    BYTE PTR [esi],bh
  4116ff:	lahf   
  411700:	int3   
  411701:	mov    ah,0x76
  411703:	pusha  
  411704:	fsub   DWORD PTR [eax+0x29abe691]
  41170a:	push   eax
  41170b:	pop    eax
  41170c:	outs   dx,BYTE PTR ds:[esi]
  41170d:	and    ebx,DWORD PTR [eax]
  41170f:	outs   dx,BYTE PTR ds:[esi]
  411710:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411712:	dec    edx
  411713:	and    eax,0x2cdd52a7
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x773daa57
  411755:	xchg   ecx,eax
  411756:	jo     0x4116f6
  411758:	je     0x411772
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	out    dx,al
  411760:	(bad)  
  411761:	jmp    0x411791
  411763:	test   DWORD PTR [edx],ebp
  411765:	mov    dh,0xc8
  411767:	daa    
  411768:	jmp    ecx
  41176a:	std    
  41176b:	outs   dx,BYTE PTR ds:[esi]
  41176c:	sub    dl,ah
  41176e:	ret    
  41176f:	push   0xc2971f8c
  411774:	out    dx,al
  411775:	call   0x44e3:0x5f66e25c
  41177c:	jp     0x4117e8
  41177e:	inc    ebx
  41177f:	loop   0x4117a3
  411781:	rcl    DWORD PTR ds:0xe90bead3,1
  411787:	loop   0x4117c2
  411789:	push   0xffffffaa
  41178b:	mov    esp,0x105dbb7f
  411790:	xchg   ebx,eax
  411791:	add    eax,edx
  411793:	dec    DWORD PTR [ecx+esi*1]
  411796:	fadd   DWORD PTR [ebx-0x72]
  411799:	sar    BYTE PTR [ebx+eax*4-0x39],cl
  41179d:	xchg   ecx,esi
  41179f:	ret    0x7174
  4117a2:	push   edi
  4117a3:	(bad)  
  4117a5:	sub    DWORD PTR [edi],esi
  4117a7:	adc    cl,ch
  4117a9:	jno    0x4117e6
  4117ab:	xchg   ebp,eax
  4117ac:	test   eax,0x8b3dc6e2
  4117b1:	push   esi
  4117b2:	aaa    
  4117b3:	cmp    bh,al
  4117b5:	xor    DWORD PTR ds:0x71a5c050,esp
  4117bb:	add    bh,BYTE PTR [esi+0x16]
  4117be:	sub    eax,0x2ec6f830
  4117c3:	aaa    
  4117c4:	push   ebx
  4117c5:	test   dh,bh
  4117c7:	inc    edx
  4117c8:	inc    ecx
  4117c9:	xchg   edx,eax
  4117ca:	in     eax,dx
  4117cb:	mov    ebx,0x652018bb
  4117d0:	jl     0x411819
  4117d2:	and    bl,cl
  4117d4:	or     ah,BYTE PTR [edi-0x51]
  4117d7:	das    
  4117d8:	xchg   BYTE PTR [edi-0x71],cl
  4117db:	test   dl,0x93
  4117de:	mov    bl,0xeb
  4117e0:	mov    bh,BYTE PTR [ebp-0x6c]
  4117e3:	fwait
  4117e4:	hlt    
  4117e5:	int    0xf2
  4117e7:	in     al,dx
  4117e8:	stos   DWORD PTR es:[edi],eax
  4117e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ea:	ds loope 0x411795
  4117ed:	push   ebx
  4117ee:	fisttp QWORD PTR [eax+ecx*4]
  4117f1:	not    BYTE PTR ds:0x45e993
  4117f7:	inc    edi
  4117f8:	push   ebx
  4117f9:	mov    WORD PTR [esp+ebp*8+0x1cc7403f],ds
  411800:	pop    edx
  411801:	stc    
  411802:	lods   eax,DWORD PTR ds:[esi]
  411803:	or     al,0x29
  411805:	ds popa 
  411807:	retf   0x6378
  41180a:	in     eax,dx
  41180b:	mov    ebx,0x65ad214c
  411810:	jmp    0xcaba4780
  411815:	repz pop esp
  411817:	sbb    ecx,DWORD PTR [ecx]
  411819:	out    dx,eax
  41181a:	pusha  
  41181b:	and    al,0xcb
  41181d:	loopne 0x4117cc
  41181f:	into   
  411820:	and    eax,0x565e0e4b
  411825:	pop    ebp
  411826:	scas   al,BYTE PTR es:[edi]
  411827:	cmp    eax,0x7f1f0990
  41182c:	pop    es
  41182d:	push   ebp
  41182e:	icebp  
  41182f:	xor    eax,0x6f8077c3
  411834:	mov    ds:0x5d9342e,eax
  411839:	mov    ebx,0x45a37bc
  41183e:	es std 
  411840:	sub    al,0x4
  411842:	inc    ebp
  411843:	dec    edx
  411844:	pop    esi
  411845:	mov    ah,0x57
  411847:	aam    0xec
  411849:	ds pop es
  41184b:	add    eax,0x68ff3bca
  411850:	(bad)  
  411851:	jae    0x41186b
  411853:	mov    esi,0x7f0114d5
  411858:	repnz mov al,ds:0xc0b2a944
  41185e:	xchg   edx,esi
  411860:	or     BYTE PTR [ecx],bl
  411862:	and    edi,ebx
  411864:	popa   
  411865:	mov    esp,0x46a0c182
  41186a:	ins    DWORD PTR es:[edi],dx
  41186b:	rcl    esp,cl
  41186d:	stos   DWORD PTR es:[edi],eax
  41186e:	mov    ch,0x91
  411870:	dec    ebx
  411871:	retf   0x9785
  411874:	pop    esi
  411875:	push   edi
  411876:	std    
  411877:	pop    esi
  411878:	pop    esi
  411879:	aaa    
  41187a:	sbb    DWORD PTR [esp+edi*8+0x14],ecx
  41187e:	jno    0x41181b
  411880:	retf   0x77cf
  411883:	mov    eax,0x415950e0
  411888:	mov    cl,0x54
  41188a:	int3   
  41188b:	js     0x41182b
  41188d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41188e:	test   dh,0x7b
  411891:	test   al,0x9
  411893:	je     0x411843
  411895:	jne    0x4118c2
  411897:	adc    edx,eax
  411899:	inc    edx
  41189a:	xchg   ebx,eax
  41189b:	mov    ch,0x20
  41189d:	scas   eax,DWORD PTR es:[edi]
  41189e:	jecxz  0x4118ef
  4118a0:	inc    ebx
  4118a1:	dec    esi
  4118a2:	fimul  WORD PTR [ebp+0x20]
  4118a5:	xchg   ch,dh
  4118a7:	pop    es
  4118a8:	sub    BYTE PTR [eax-0x2f],bl
  4118ab:	xlat   BYTE PTR ds:[ebx]
  4118ac:	sbb    BYTE PTR [ebp+0x3b],0x66
  4118b0:	jp     0x41183d
  4118b2:	mov    ch,0xa
  4118b4:	xchg   BYTE PTR [ebp-0x694f7b6d],ch
  4118ba:	dec    esp
  4118bb:	and    esp,edi
  4118bd:	ret    0x5d4b
  4118c0:	jg     0x4118ea
  4118c2:	retf   
  4118c3:	fdiv   DWORD PTR [eax+0x29a810c5]
  4118c9:	test   al,0x98
  4118cb:	jle    0x41191a
  4118cd:	push   esp
  4118ce:	repz cdq 
  4118d0:	ins    BYTE PTR es:[edi],dx
  4118d1:	sub    eax,0x4505f1a4
  4118d6:	dec    esp
  4118d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118d8:	or     esi,DWORD PTR [edx-0x1f]
  4118db:	and    BYTE PTR [esi+edx*2],al
  4118de:	push   ecx
  4118df:	and    al,0xcc
  4118e1:	ja     0x411898
  4118e3:	mov    ecx,0x341e148e
  4118e8:	std    
  4118e9:	adc    ah,cl
  4118eb:	rcr    DWORD PTR [esp+esi*2],cl
  4118ee:	outs   dx,BYTE PTR ds:[esi]
  4118ef:	mov    dl,0x5f
  4118f1:	test   BYTE PTR [edx-0x54],dl
  4118f4:	push   DWORD PTR [ebp+ecx*1+0x5f]
  4118f8:	cdq    
  4118f9:	mov    bh,0x50
  4118fb:	outs   dx,DWORD PTR ds:[esi]
  4118fc:	mov    al,ds:0xb81a8c2c
  411901:	mov    WORD PTR [edx],?
  411903:	(bad)  
  411904:	sti    
  411905:	pop    esp
  411906:	inc    ebp
  411907:	in     al,dx
  411908:	pusha  
  411909:	push   esp
  41190a:	retf   
  41190b:	test   eax,0x94fbf4cc
  411910:	in     eax,dx
  411911:	cs or  al,0x89
  411914:	scas   al,BYTE PTR es:[edi]
  411915:	pop    ebp
  411916:	mov    edx,0x8b710c33
  41191b:	pop    es
  41191c:	sub    eax,0x8c9bb5b7
  411921:	mov    fs,WORD PTR [esi+0x2e7f77d9]
  411927:	push   esp
  411928:	add    dl,BYTE PTR [ebx+0x7ddcf47]
  41192e:	adc    eax,0xe7c1d387
  411933:	mov    ds:0xac1b02f7,al
  411938:	inc    eax
  411939:	push   0x341abac4
  41193e:	jg     0x411942
  411940:	pop    ebx
  411941:	mov    BYTE PTR [esi],bh
  411943:	sbb    BYTE PTR [ebx+ebp*1],cl
  411946:	cmc    
  411947:	mov    al,0x13
  411949:	mov    eax,0x1a957602
  41194e:	push   ds
  41194f:	cmp    dl,BYTE PTR [ebp+edx*1-0xd34fc01]
  411956:	mov    ds:0x167d8851,eax
  41195b:	xchg   esi,eax
  41195c:	(bad)  
  41195d:	pop    ss
  41195e:	shl    bh,cl
  411960:	jle    0x4119c1
  411962:	fistp  DWORD PTR [ebp+esi*1+0x623c300a]
  411969:	in     eax,0xca
  41196b:	mov    al,0x89
  41196d:	test   al,0xdc
  41196f:	ret    
  411970:	loop   0x4118ff
  411972:	out    0x4c,al
  411974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411975:	jl     0x4119bf
  411977:	add    bl,dh
  411979:	add    al,0x6e
  41197b:	call   0xa69f:0xf72b5614
  411982:	pop    ecx
  411983:	ins    BYTE PTR es:[edi],dx
  411984:	or     BYTE PTR ds:[edx],dh
  411987:	xor    eax,0x137ba7cf
  41198c:	addr16 sub cl,dh
  41198f:	mov    ch,0x7f
  411991:	xchg   edx,eax
  411992:	scas   eax,DWORD PTR es:[edi]
  411993:	pop    es
  411994:	dec    edi
  411995:	bswap  edi
  411997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411998:	js     0x4119fd
  41199a:	repz (bad) 
  41199c:	leave  
  41199d:	scas   al,BYTE PTR es:[edi]
  41199e:	not    DWORD PTR [esi-0x1de1256b]
  4119a4:	addr16 clc 
  4119a6:	addr16 sti 
  4119a8:	aas    
  4119a9:	scas   eax,DWORD PTR es:[edi]
  4119aa:	mov    al,0x1f
  4119ac:	cwde   
  4119ad:	call   0xccc34623
  4119b2:	aas    
  4119b3:	inc    ecx
  4119b4:	dec    eax
  4119b5:	aas    
  4119b6:	jno    0x411943
  4119b8:	push   ebp
  4119b9:	les    eax,FWORD PTR [ecx+0xf3af1]
  4119bf:	add    BYTE PTR [ebx],cl
  4119c1:	enter  0x68a1,0x25
  4119c5:	inc    edx
  4119c6:	add    BYTE PTR [ebx+0x1d880],cl
  4119cc:	add    BYTE PTR [ebx+0x65f68100],cl
  4119d2:	data16 add BYTE PTR [eax],al
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7c87717a
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	idiv   DWORD PTR [esi-0x2d]
  411a17:	fidiv  WORD PTR ds:0xb4645450
  411a1d:	call   0xb0c7:0xcb57459a
  411a24:	sub    DWORD PTR [edi],ecx
  411a26:	in     eax,dx
  411a27:	xchg   esp,eax
  411a28:	out    dx,eax
  411a29:	push   ebp
  411a2a:	pusha  
  411a2b:	std    
  411a2c:	out    dx,al
  411a2d:	jmp    0x9dbb:0xba1401ee
  411a34:	add    bh,al
  411a36:	cmp    ecx,DWORD PTR [edx]
  411a38:	mov    dh,0x57
  411a3a:	in     al,dx
  411a3b:	mov    bh,0x9e
  411a3d:	jbe    0x411abe
  411a3f:	adc    al,0x6f
  411a41:	adc    DWORD PTR [edi],esp
  411a43:	test   eax,0x9398d8e3
  411a48:	cdq    
  411a49:	inc    esp
  411a4a:	inc    edi
  411a4b:	retf   0xb0ae
  411a4e:	into   
  411a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a50:	jne    0x4119f0
  411a52:	stos   BYTE PTR es:[edi],al
  411a53:	add    al,0xc8
  411a55:	in     al,0xcd
  411a57:	push   ds
  411a58:	push   cs
  411a59:	leave  
  411a5a:	mov    edi,0xedc44272
  411a5f:	mov    BYTE PTR [ebx-0x61],al
  411a62:	sbb    al,ah
  411a64:	sahf   
  411a65:	xchg   DWORD PTR [edi+eax*8],esp
  411a68:	mov    al,0xe1
  411a6a:	je     0x411a3a
  411a6c:	es inc ecx
  411a6e:	jl     0x411a59
  411a70:	sbb    edi,DWORD PTR [edi+0x48]
  411a73:	sub    DWORD PTR [esi+0x40],0xffffff9d
  411a77:	(bad)  
  411a78:	mov    ds,WORD PTR [ebp-0x27]
  411a7b:	ja     0x411a66
  411a7d:	repz into 
  411a7f:	inc    ebx
  411a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a81:	jecxz  0x411a62
  411a83:	add    DWORD PTR [eax],ebp
  411a85:	sbb    ch,cl
  411a87:	mov    esi,0xddd0c199
  411a8c:	adc    BYTE PTR [ebx],bl
  411a8e:	mov    ebp,0x804cf7bf
  411a93:	leave  
  411a94:	fdivr  DWORD PTR [ecx+0x436216e7]
  411a9a:	jecxz  0x411a7d
  411a9c:	push   esp
  411a9d:	pop    ss
  411a9e:	jmp    0x4aabc97d
  411aa3:	mov    ds:0xf106f2f7,eax
  411aa8:	add    BYTE PTR [ebx+0x19],bh
  411aab:	ss popf 
  411aad:	leave  
  411aae:	jmp    0x411afd
  411ab0:	or     esp,DWORD PTR [esi-0x54287b6a]
  411ab6:	mov    cl,BYTE PTR [ebp+0x64]
  411ab9:	jne    0x411aaa
  411abb:	sbb    DWORD PTR ss:[edi+0x38fe34f1],ebx
  411ac2:	inc    ebx
  411ac3:	icebp  
  411ac4:	mov    bh,0xaa
  411ac6:	mov    ds:0xb2df6276,eax
  411acb:	mov    ?,WORD PTR es:[eax]
  411ace:	sahf   
  411acf:	sti    
  411ad0:	les    ebx,FWORD PTR gs:[ecx-0xd1a0087]
  411ad7:	xlat   BYTE PTR ds:[ebx]
  411ad8:	cmp    edx,ebp
  411ada:	ret    0x7585
  411add:	pop    ds
  411ade:	(bad)  
  411adf:	and    cl,dl
  411ae1:	ds aaa 
  411ae3:	push   eax
  411ae4:	cmc    
  411ae5:	sub    eax,0x801a81d1
  411aea:	mov    ebx,ebp
  411aec:	mov    eax,0xcf7ab01d
  411af1:	push   ebx
  411af2:	lea    ecx,[edi]
  411af4:	push   eax
  411af5:	mov    ebp,0x9b834cc7
  411afa:	lods   eax,DWORD PTR ds:[esi]
  411afb:	pusha  
  411afc:	pop    ebx
  411afd:	stos   DWORD PTR es:[edi],eax
  411afe:	addr16 inc eax
  411b00:	or     DWORD PTR [ebx],edx
  411b02:	mov    bl,0x37
  411b04:	xor    esi,ebx
  411b06:	push   esp
  411b07:	mov    al,0xc1
  411b09:	js     0x411b21
  411b0b:	stos   DWORD PTR es:[edi],eax
  411b0c:	and    BYTE PTR [esi-0x3c],cl
  411b0f:	jle    0x411b6c
  411b11:	or     DWORD PTR [ebx-0x4915b423],esp
  411b17:	sbb    ebx,DWORD PTR [ebx+0x68]
  411b1a:	sbb    bh,BYTE PTR [edx+0x25]
  411b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b1e:	adc    esi,esi
  411b20:	mov    edi,0x7ede7511
  411b25:	push   es
  411b26:	pop    ebp
  411b27:	(bad)  
  411b28:	cmp    BYTE PTR [ebx+0x77f2eb23],0x42
  411b2f:	jmp    0x6e057051
  411b34:	ins    DWORD PTR es:[edi],dx
  411b35:	inc    ebp
  411b37:	mov    ds:0x92554c3c,eax
  411b3c:	add    eax,0x63337e1b
  411b41:	inc    eax
  411b42:	sbb    eax,0x74b74c1c
  411b47:	mov    bl,0x3b
  411b49:	loope  0x411bc0
  411b4b:	hlt    
  411b4c:	pop    ss
  411b4d:	xlat   BYTE PTR ds:[ebx]
  411b4e:	les    esp,FWORD PTR [edx-0x5e1c1b8a]
  411b54:	in     al,0x82
  411b56:	int3   
  411b57:	mov    ds:0xff5d0c3a,al
  411b5c:	fsubr  st(1),st
  411b5e:	imul   ebp,DWORD PTR [eax],0x69
  411b61:	add    ebx,DWORD PTR [eax+0x24]
  411b64:	out    dx,eax
  411b65:	pusha  
  411b66:	and    cl,BYTE PTR [ebp-0x80]
  411b69:	dec    ebx
  411b6a:	test   ch,dh
  411b6c:	out    0xe6,eax
  411b6e:	clc    
  411b6f:	shl    DWORD PTR [edx+0x4e],cl
  411b72:	mov    eax,ds
  411b74:	out    dx,eax
  411b75:	pop    ecx
  411b76:	fs pushf 
  411b78:	adc    ecx,DWORD PTR [eax]
  411b7a:	or     BYTE PTR [eax-0x72b201c4],0x3a
  411b81:	inc    esp
  411b82:	inc    eax
  411b83:	xor    BYTE PTR [ecx],ch
  411b85:	leave  
  411b86:	std    
  411b87:	call   0x79f9ddcf
  411b8c:	or     ebx,DWORD PTR [esi-0x32]
  411b8f:	jecxz  0x411b5c
  411b91:	inc    eax
  411b92:	sbb    eax,0xb033359b
  411b97:	fdivp  st(3),st
  411b99:	push   ebp
  411b9a:	add    esp,esi
  411b9c:	rcr    DWORD PTR [ebx-0x3b8b6a95],1
  411ba2:	adc    eax,0xe5f2691a
  411ba7:	nop
  411ba8:	adc    eax,DWORD PTR [ebp+0x381f860b]
  411bae:	and    eax,0x6d61af04
  411bb3:	les    esp,FWORD PTR [eax+0x7e]
  411bb6:	xor    al,0x59
  411bb8:	mov    edx,DWORD PTR [ebp-0x6f550d87]
  411bbe:	push   esp
  411bbf:	pop    esi
  411bc0:	mov    edx,0xff383a5c
  411bc5:	adc    BYTE PTR ds:0xceec96a,0xeb
  411bcc:	daa    
  411bcd:	jg     0x411bd1
  411bcf:	xchg   ebx,eax
  411bd0:	mov    ebp,0xf1547806
  411bd5:	mov    eax,0xca0fb0b2
  411bda:	jle    0x411b98
  411bdc:	pushf  
  411bdd:	jnp    0x411bcf
  411bdf:	and    al,0x2d
  411be1:	(bad)  
  411be2:	iret   
  411be3:	adc    DWORD PTR [edx-0x2d],0x9be12b2a
  411bea:	cmp    DWORD PTR [edx+ebx*2-0x36],0x28ba4962
  411bf2:	mov    BYTE PTR [ecx-0xf8f5aba],ah
  411bf8:	pop    ecx
  411bf9:	shl    ch,1
  411bfb:	push   0xffffff9d
  411bfd:	das    
  411bfe:	mov    cl,0x70
  411c00:	inc    eax
  411c01:	aaa    
  411c02:	or     eax,0xf7355ac6
  411c07:	imul   esi,DWORD PTR [ebp+0x41],0xbb6d4cc8
  411c0e:	cmp    ebx,esi
  411c10:	stc    
  411c11:	adc    edi,DWORD PTR [eax+esi*2+0x5e]
  411c15:	push   DWORD PTR [ecx+0x77cd202d]
  411c1b:	jp     0x411c60
  411c1d:	(bad)  
  411c1f:	pop    ebx
  411c20:	pop    edi
  411c21:	and    cl,BYTE PTR [esi]
  411c23:	and    al,0x90
  411c25:	jmp    0x200fb06e
  411c2a:	cmp    eax,0x1167d4d1
  411c2f:	adc    DWORD PTR [ecx],0x6e
  411c32:	int    0xdd
  411c34:	(bad)  
  411c35:	fld    DWORD PTR [edi+0x5d77979b]
  411c3b:	lods   al,BYTE PTR ds:[esi]
  411c3c:	sbb    dh,BYTE PTR [edi-0x15]
  411c3f:	(bad)  [esp+eax*8-0x3d126df6]
  411c46:	and    ebx,DWORD PTR [ecx+esi*8]
  411c49:	stos   BYTE PTR es:[edi],al
  411c4a:	cli    
  411c4b:	fst    QWORD PTR [ebp+0x1a9f9e91]
  411c51:	sar    DWORD PTR [ecx],0xe2
  411c54:	pop    ecx
  411c55:	mov    al,ds:0xc550b1bf
  411c5a:	and    al,0x6d
  411c5c:	int    0x46
  411c5e:	dec    ebx
  411c5f:	popf   
  411c60:	pop    esi
  411c61:	call   0x8be325f8
  411c66:	loop   0x411c05
  411c68:	or     DWORD PTR [ebp+0x4d8b128e],edi
  411c6e:	mov    ah,0x8b
  411c70:	push   ebp
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x25116a08]
  411c98:	pop    edi
  411c99:	jo     0x411cea
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	sahf   
  411ca3:	xor    DWORD PTR [ebx],esi
  411ca5:	adc    DWORD PTR cs:[ecx+ecx*4+0x50],edi
  411caa:	xchg   ebp,eax
  411cac:	scas   al,BYTE PTR es:[edi]
  411cad:	adc    al,0x89
  411caf:	sbb    BYTE PTR [eax-0x78],dh
  411cb2:	jbe    0x411d24
  411cb4:	fwait
  411cb5:	ins    BYTE PTR es:[edi],dx
  411cb6:	dec    ebx
  411cb7:	mov    ebp,0xffc2bf0b
  411cbc:	les    ebp,FWORD PTR [esi+0x7b39c4ac]
  411cc2:	retf   0x99d4
  411cc5:	push   eax
  411cc6:	xchg   ebp,eax
  411cc7:	shl    BYTE PTR [esi+0x52],0x3f
  411ccb:	and    eax,0x9fbaab26
  411cd0:	xchg   ecx,eax
  411cd1:	pop    edx
  411cd2:	mov    ds:0xcdc610d7,eax
  411cd7:	and    BYTE PTR cs:[esi+0x1e],dl
  411cdb:	pop    ebx
  411cdc:	cmp    al,0xe6
  411cde:	mov    ss,esi
  411ce0:	fcmovne st,st(5)
  411ce2:	add    BYTE PTR [eax+0x57],bh
  411ce5:	inc    esp
  411ce6:	mov    bl,0x15
  411ce8:	jg     0x411ca1
  411cea:	(bad)  
  411ceb:	popf   
  411cec:	dec    esi
  411ced:	aaa    
  411cee:	push   edx
  411cef:	jae    0x411d3c
  411cf1:	cli    
  411cf2:	aas    
  411cf3:	mov    ch,0x68
  411cf5:	mov    eax,0x509256df
  411cfa:	xor    ebp,esp
  411cfc:	jl     0x411d01
  411cfe:	sub    eax,DWORD PTR [ebx-0x26]
  411d01:	in     al,0x3c
  411d03:	out    0xd2,eax
  411d05:	pusha  
  411d06:	push   ds
  411d07:	or     bl,BYTE PTR [edi]
  411d09:	sub    eax,ebx
  411d0b:	xchg   esi,eax
  411d0c:	ins    DWORD PTR es:[edi],dx
  411d0d:	int3   
  411d0e:	call   0xa4c:0xf53aeed8
  411d15:	mov    ebp,0xa3a208d4
  411d1a:	test   al,0x60
  411d1c:	je     0x411d88
  411d1e:	add    BYTE PTR ds:0x9e3cee91,0x91
  411d25:	rol    BYTE PTR [ecx],cl
  411d27:	retf   0x4215
  411d2a:	int3   
  411d2b:	ja     0x411d66
  411d2d:	mov    ebx,0x65a32609
  411d32:	inc    edi
  411d33:	mov    ebp,0xbd21b4ba
  411d38:	inc    edx
  411d39:	inc    eax
  411d3a:	and    DWORD PTR [ebx-0x6e],ebp
  411d3d:	pop    esp
  411d3e:	stos   DWORD PTR es:[edi],eax
  411d3f:	in     al,0x32
  411d41:	scas   eax,DWORD PTR es:[edi]
  411d42:	rol    BYTE PTR [edi-0x2823cf4],1
  411d48:	or     esi,esp
  411d4a:	jb     0x411cd4
  411d4c:	mov    eax,ds:0x71ac380b
  411d51:	adc    eax,0x950d3921
  411d56:	ror    eax,0x44
  411d59:	xchg   ebp,eax
  411d5a:	out    dx,eax
  411d5b:	jp     0x411d68
  411d5d:	add    DWORD PTR [ebx*2-0x6b1895c2],edx
  411d64:	cwde   
  411d65:	lods   eax,DWORD PTR ds:[esi]
  411d66:	jae    0x411cea
  411d68:	les    ebx,FWORD PTR [esp+eiz*2]
  411d6b:	rcl    DWORD PTR [esi+0x2],cl
  411d6e:	jb     0x411d2f
  411d70:	popf   
  411d71:	and    BYTE PTR [edi],ch
  411d73:	jno    0x411db6
  411d75:	fiadd  WORD PTR [ecx]
  411d77:	jmp    0x89b4:0x8016dbea
  411d7e:	jmp    0x411d52
  411d80:	sbb    ebp,ecx
  411d82:	nop
  411d83:	in     eax,dx
  411d84:	xchg   ecx,eax
  411d85:	scas   eax,DWORD PTR es:[edi]
  411d86:	aas    
  411d87:	ror    BYTE PTR [eax-0x7bb6a66],1
  411d8d:	push   edx
  411d8e:	mov    ch,0x75
  411d90:	int3   
  411d91:	imul   ecx,DWORD PTR [ebp-0x1a],0x54
  411d95:	add    eax,0xf729b4be
  411d9a:	pop    edi
  411d9b:	imul   ecx,DWORD PTR [ebx],0x48ff8987
  411da1:	push   ds
  411da2:	jno    0x411dee
  411da4:	mul    BYTE PTR [edx+ecx*2+0x10]
  411da8:	jge    0x411e16
  411daa:	sub    eax,0x141becbd
  411daf:	popa   
  411db0:	push   esi
  411db1:	sbb    BYTE PTR [ebx-0x2bc29592],ch
  411db7:	mov    bh,0x5d
  411db9:	scas   eax,DWORD PTR es:[edi]
  411dba:	dec    BYTE PTR [ebx]
  411dbc:	mov    ch,BYTE PTR [edi]
  411dbe:	mov    ds:0x5f41afd4,eax
  411dc3:	and    eax,0x9be3c7d
  411dc8:	cdq    
  411dc9:	aad    0xf4
  411dcb:	cmp    DWORD PTR [ebx],ecx
  411dcd:	stos   DWORD PTR es:[edi],eax
  411dce:	mov    DWORD PTR [ebx-0x26cbcbdd],esp
  411dd4:	call   0x377c:0x43a35cb8
  411ddb:	mov    ebx,0x61ad06c6
  411de0:	or     BYTE PTR [eax-0x6f],bh
  411de3:	(bad)  
  411de4:	jle    0x411db7
  411de6:	enter  0x7f33,0xfe
  411dea:	dec    edx
  411deb:	cld    
  411dec:	lock jae 0x411e58
  411def:	push   edi
  411df0:	ins    BYTE PTR es:[edi],dx
  411df1:	push   ebx
  411df2:	ret    
  411df3:	ins    DWORD PTR es:[edi],dx
  411df4:	inc    ebx
  411df5:	sub    edx,DWORD PTR [ebx]
  411df7:	inc    ebp
  411df8:	jecxz  0x411e12
  411dfa:	jnp    0x411e18
  411dfc:	adc    DWORD PTR [eax],ebx
  411dfe:	jae    0x411e1e
  411e00:	imul   ebx,DWORD PTR [edi+0x12],0x11
  411e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e05:	jl     0x411e61
  411e07:	test   DWORD PTR [ebx+0xc],ebp
  411e0a:	les    ecx,FWORD PTR [ebx]
  411e0c:	jae    0x411ddf
  411e0e:	sub    al,0x58
  411e10:	push   ds
  411e11:	pop    ebx
  411e12:	pop    esi
  411e13:	add    al,0x77
  411e15:	daa    
  411e16:	ss dec dh
  411e19:	or     ebx,DWORD PTR [edx+0x7283db40]
  411e1f:	fst    QWORD PTR [esi-0x5f]
  411e22:	aas    
  411e23:	push   es
  411e24:	imul   esi,DWORD PTR [edx],0xf34f00bf
  411e2a:	iret   
  411e2b:	lea    esi,[edx-0x3e]
  411e2e:	sub    al,0x71
  411e30:	and    bh,0xe1
  411e33:	in     al,dx
  411e34:	jg     0x411eae
  411e36:	rcr    BYTE PTR [ebp+eiz*8+0x43b4990e],0x7
  411e3e:	and    eax,0xa1becaae
  411e43:	add    BYTE PTR [ebx+0x6b],0xf6
  411e47:	stc    
  411e48:	inc    esp
  411e49:	sahf   
  411e4a:	hlt    
  411e4b:	daa    
  411e4c:	mov    ecx,0xa44430fa
  411e51:	sbb    DWORD PTR [eax+eiz*4-0x2d],esi
  411e55:	adc    DWORD PTR [esi+0x3fcdae4f],ecx
  411e5b:	scas   al,BYTE PTR es:[edi]
  411e5c:	popa   
  411e5d:	xchg   ebx,ebx
  411e5f:	jns    0x411e10
  411e61:	sbb    al,0x71
  411e63:	jmp    ebp
  411e65:	inc    esp
  411e66:	adc    ebp,edx
  411e68:	sbb    DWORD PTR ds:0x759212bb,edx
  411e6e:	pop    ecx
  411e6f:	(bad)  
  411e70:	and    dl,dh
  411e72:	pop    ss
  411e73:	pop    es
  411e74:	push   ebx
  411e75:	lahf   
  411e76:	push   0xffffffb2
  411e78:	pop    esp
  411e79:	into   
  411e7a:	mov    ds:0xda63a156,eax
  411e7f:	ins    BYTE PTR es:[edi],dx
  411e80:	fcmove st,st(0)
  411e82:	inc    ecx
  411e83:	pop    es
  411e84:	ret    0x4f33
  411e87:	in     al,dx
  411e88:	mov    WORD PTR [si],gs
  411e8b:	sub    al,0xac
  411e8d:	mov    esp,DWORD PTR [edi+0x18]
  411e90:	xchg   ebp,eax
  411e91:	inc    ebp
  411e92:	out    0x3e,al
  411e94:	push   eax
  411e95:	or     eax,0xfb482143
  411e9a:	int3   
  411e9b:	mov    ebp,0x3f554436
  411ea0:	dec    edi
  411ea1:	add    eax,0xfbf357ab
  411ea6:	jo     0x411e43
  411ea8:	int3   
  411ea9:	and    DWORD PTR [ebx-0x7d],0x137af133
  411eb0:	jo     0x411f24
  411eb2:	jg     0x411ed9
  411eb4:	dec    edi
  411eb5:	inc    ecx
  411eb6:	jae    0x411f02
  411eb8:	xchg   ecx,eax
  411eb9:	inc    eax
  411eba:	cli    
  411ebb:	push   cs
  411ebc:	rol    BYTE PTR [eax-0x2b91791a],0x74
  411ec3:	shl    al,1
  411ec5:	push   esi
  411ec6:	fwait
  411ec7:	jae    0x411eea
  411ec9:	es jg  0x411ea3
  411ecc:	das    
  411ecd:	push   es
  411ece:	adc    ecx,DWORD PTR [edi+ecx*1+0x7a642bb7]
  411ed5:	dec    ebp
  411ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed7:	cs dec ecx
  411ed9:	mov    esi,0x8a0bcbc1
  411ede:	sbb    esp,esi
  411ee0:	dec    edi
  411ee1:	cdq    
  411ee2:	dec    esp
  411ee3:	lock jecxz 0x411e6a
  411ee6:	les    esp,FWORD PTR [ebx-0x5b]
  411ee9:	arpl   WORD PTR [edx],bp
  411eeb:	xchg   ecx,eax
  411eec:	dec    edi
  411eed:	fnstcw WORD PTR [eax]
  411eef:	je     0x411ed7
  411ef1:	and    ch,dl
  411ef3:	stos   BYTE PTR es:[edi],al
  411ef4:	mov    esi,0x10e04557
  411ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411efa:	or     ecx,esi
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422568
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x422604
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225fc,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	xor    al,0x9a
  411fab:	fistp  QWORD PTR [esi-0x5a]
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	dec    edi
  411fb6:	push   edi
  411fb7:	cmp    ecx,edi
  411fb9:	(bad)  
  411fba:	push   cs
  411fbb:	fidiv  DWORD PTR [eax+0x5d]
  411fbe:	jb     0x411f88
  411fc0:	xchg   esp,eax
  411fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc2:	dec    ebp
  411fc3:	jbe    0x411f80
  411fc5:	test   al,0xa1
  411fc7:	ja     0x411fcf
  411fc9:	and    eax,0x2d675169
  411fce:	cmp    ch,BYTE PTR ds:0xb7926bd2
  411fd4:	sub    eax,0xea636853
  411fd9:	imul   ebp,edx,0xffffffef
  411fdc:	xor    eax,0x79575723
  411fe1:	dec    edi
  411fe2:	rcr    DWORD PTR [eax+0x45],1
  411fe5:	jl     0x411f7d
  411fe7:	retf   
  411fe8:	jns    0x412052
  411fea:	inc    esi
  411feb:	dec    edi
  411fec:	dec    ecx
  411fed:	mov    esp,0xd0855500
  411ff2:	fcom   DWORD PTR [esi]
  411ff4:	and    eax,eax
  411ff6:	in     eax,0xd8
  411ff8:	sub    al,0xa8
  411ffa:	xchg   DWORD PTR [ecx],ecx
  411ffc:	ret    
  411ffd:	add    edi,eax
  411fff:	sub    al,0xce
  412001:	or     al,0xf7
  412003:	mov    bl,BYTE PTR [esi+0x53]
  412006:	dec    edx
  412007:	sahf   
  412008:	jb     0x41203e
  41200a:	(bad)  
  41200c:	xlat   BYTE PTR ds:[ebx]
  41200d:	call   0xac9f:0x188431ea
  412014:	addr16 cwde 
  412016:	aad    0x99
  412018:	jo     0x412082
  41201a:	push   esp
  41201b:	and    esi,edx
  41201d:	push   eax
  41201e:	montmul (bad)
  41201f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412020:	add    edi,ebp
  412022:	cli    
  412023:	add    BYTE PTR [esi+0x8],0xf
  412027:	cmp    DWORD PTR [edx+0x2582ee12],ebp
  41202d:	dec    edi
  41202e:	pop    esi
  41202f:	test   BYTE PTR [ebp+0x7b],al
  412032:	push   ss
  412033:	mov    edi,0x7b1b0e7e
  412038:	mov    bl,0x6c
  41203a:	add    DWORD PTR gs:[ecx+0x7b],ebp
  41203e:	push   esi
  41203f:	(bad)  
  412040:	rcl    DWORD PTR [eax-0x1f9d0d4d],1
  412046:	inc    edx
  412047:	jmp    0xc397daa8
  41204c:	xor    al,BYTE PTR [ebx]
  41204e:	mov    BYTE PTR [eax],dl
  412050:	mov    ah,0x68
  412052:	test   BYTE PTR [ebp+0x7a],cl
  412055:	cld    
  412056:	cmp    bl,BYTE PTR [ebp+0x58]
  412059:	into   
  41205a:	dec    ebx
  41205b:	jns    0x41206b
  41205d:	cmc    
  41205e:	fs in  al,dx
  412060:	ss mov ah,0x75
  412063:	push   edi
  412064:	pop    edi
  412065:	mov    ebx,0x67b0f86
  41206a:	aas    
  41206b:	ds lahf 
  41206d:	sti    
  41206e:	mov    esp,0x7519651a
  412073:	adc    bh,bh
  412075:	fadd   QWORD PTR [ebx+edx*1-0x3f]
  412079:	cld    
  41207a:	aas    
  41207b:	or     eax,0x11a5aac7
  412080:	xchg   ebx,eax
  412081:	nop
  412082:	fidiv  WORD PTR [esi+eiz*1+0x3a5622ed]
  412089:	popf   
  41208a:	sbb    ebx,eax
  41208c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41208d:	lods   al,BYTE PTR ds:[esi]
  41208e:	xchg   ebx,eax
  41208f:	and    DWORD PTR [edx-0x43ac1e52],ebx
  412095:	repz test BYTE PTR [esi-0x14589d40],0x5f
  41209d:	adc    al,ah
  41209f:	mov    edx,0x4d6630dc
  4120a4:	mov    WORD PTR [edi+0x3376df2e],ss
  4120aa:	repnz dec eax
  4120ac:	nop
  4120ad:	fld    QWORD PTR [edx+0x4b540f7d]
  4120b3:	repnz or al,0x3
  4120b6:	sub    eax,0xd55d938
  4120bb:	int    0x4d
  4120bd:	pop    esp
  4120be:	mov    dl,0xe8
  4120c0:	mov    dh,al
  4120c2:	jae    0x412102
  4120c4:	in     eax,0xaf
  4120c6:	pop    ebx
  4120c7:	std    
  4120c8:	push   edi
  4120c9:	jmp    0x447d:0xf8991353
  4120d0:	mov    edx,0x338d9f59
  4120d5:	mov    ch,0x29
  4120d7:	push   0xfc87ffae
  4120dc:	and    dh,ch
  4120de:	mov    al,0xeb
  4120e0:	dec    edi
  4120e1:	jno    0x412119
  4120e3:	in     al,dx
  4120e4:	push   esp
  4120e5:	sub    DWORD PTR [edi],ebp
  4120e7:	fwait
  4120e8:	imul   esi,esp,0x699ca059
  4120ee:	xor    edx,DWORD PTR ds:[ebp-0x58c820bb]
  4120f5:	pop    eax
  4120f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f7:	adc    DWORD PTR [ebp-0x1842d72f],0x6d
  4120fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ff:	pop    eax
  412100:	aas    
  412101:	ret    0xc659
  412104:	mov    ah,0x2d
  412106:	(bad)  
  412107:	iret   
  412108:	mov    ch,0xd
  41210a:	cmp    DWORD PTR [esi-0x7d],edi
  41210d:	jb     0x4120a7
  41210f:	adc    DWORD PTR ds:0x3b76636b,ecx
  412115:	dec    esi
  412116:	sub    al,0xef
  412118:	dec    ecx
  412119:	jns    0x4120e2
  41211b:	or     al,0x5
  41211d:	jle    0x4120c6
  41211f:	in     al,dx
  412120:	sbb    ch,ch
  412122:	cwde   
  412123:	in     al,dx
  412124:	mov    ss,WORD PTR [eax-0x2f4e9d73]
  41212a:	test   esp,eax
  41212c:	pop    esp
  41212d:	int    0x6a
  41212f:	pop    ds
  412130:	es xchg ebx,eax
  412132:	mov    esi,0xc88fad2e
  412137:	xor    dh,BYTE PTR [edi+0x47]
  41213a:	popa   
  41213b:	mov    ds:0xe5ec1c91,eax
  412140:	jmp    0xef8c:0xa46a9b33
  412147:	outs   dx,BYTE PTR ds:[esi]
  412148:	jns    0x4121a2
  41214a:	repnz sbb DWORD PTR [ebp-0x5d],ebx
  41214e:	repnz sub bh,ah
  412151:	not    DWORD PTR [edx]
  412153:	es jmp 0x1ebe:0x5a9996f3
  41215b:	add    edi,DWORD PTR [ecx]
  41215d:	fwait
  41215e:	adc    BYTE PTR [ecx+0x48f4e16f],ah
  412164:	mov    ecx,?
  412166:	(bad)  
  412167:	lahf   
  412168:	les    edi,FWORD PTR [edi-0x73cd3b01]
  41216e:	loopne 0x41212f
  412170:	mov    WORD PTR [ecx-0x55a92a7d],ds
  412176:	cli    
  412177:	retf   0x4b84
  41217a:	mov    gs,WORD PTR [ecx-0x7a983b2b]
  412180:	sbb    ecx,DWORD PTR [esp+ebx*1]
  412183:	fcmovnbe st,st(2)
  412185:	call   0xf4b296a8
  41218a:	adc    eax,0x4
  41218d:	test   DWORD PTR [edi+0x2e21d047],eax
  412193:	inc    edx
  412194:	in     eax,dx
  412195:	sub    BYTE PTR [eax+edx*8-0x17af4b91],bh
  41219c:	add    BYTE PTR [eax-0x6f],0xf
  4121a0:	mov    esp,0x58750c5f
  4121a5:	push   ecx
  4121a6:	pop    ds
  4121a7:	sub    eax,0x781cf13a
  4121ac:	dec    ecx
  4121ad:	hlt    
  4121ae:	and    BYTE PTR [esi-0x7f14ba9d],al
  4121b4:	out    0xde,eax
  4121b6:	test   bh,dh
  4121b8:	mov    ds:0x9e891d11,al
  4121bd:	push   es
  4121be:	jae    0x4121a6
  4121c0:	mov    ebx,0x22b2f39e
  4121c5:	in     eax,0x6
  4121c7:	sahf   
  4121c8:	stc    
  4121c9:	aam    0xdf
  4121cb:	jae    0x412243
  4121cd:	inc    esp
  4121ce:	ss out 0x56,eax
  4121d1:	xchg   ebp,eax
  4121d2:	xchg   ebp,eax
  4121d3:	call   0x590586d
  4121d8:	or     eax,0x40
  4121db:	into   
  4121dc:	inc    edi
  4121dd:	inc    ebx
  4121de:	add    al,0xc9
  4121e0:	leave  
  4121e1:	adc    al,BYTE PTR [ebx]
  4121e3:	stos   BYTE PTR es:[edi],al
  4121e4:	xchg   ebx,eax
  4121e5:	sar    BYTE PTR [ebp-0x1d],cl
  4121e8:	sbb    bl,al
  4121ea:	repz xchg ebp,eax
  4121ec:	out    0x34,al
  4121ee:	sbb    eax,0xe7b13cfb
  4121f3:	inc    DWORD PTR [edi]
  4121f5:	popa   
  4121f6:	sbb    eax,0x57ae09e6
  4121fb:	mov    ds:0xc5521875,al
  412200:	loop   0x41225f
  412202:	mov    cl,dl
  412204:	xor    DWORD PTR [edi],ebp
  412206:	push   ebp
  412207:	test   eax,0x23a8535a
  41220c:	(bad)  
  41220d:	push   0xe4c37b20
  412212:	xor    eax,0x3884
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225fc
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	add    BYTE PTR [edx+0x29],bh
  4122a4:	stos   BYTE PTR es:[edi],al
  4122a5:	(bad)  
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	loopne 0x412283
  4122af:	dec    esi
  4122b0:	daa    
  4122b1:	jmp    0x44be:0xfe10b0af
  4122b8:	sbb    ch,BYTE PTR [eax+0x42]
  4122bb:	ja     0x41229b
  4122bd:	aas    
  4122be:	loop   0x4122a5
  4122c0:	shl    BYTE PTR [eax],0x5c
  4122c3:	push   ebp
  4122c4:	stos   DWORD PTR es:[edi],eax
  4122c5:	mov    edx,0x11562d26
  4122ca:	add    DWORD PTR [esp+eiz*2-0x14],ecx
  4122ce:	das    
  4122cf:	push   cs
  4122d0:	mov    BYTE PTR ds:0xa6b887fa,bh
  4122d6:	cmc    
  4122d7:	in     al,dx
  4122d8:	jae    0x41226a
  4122da:	les    ecx,FWORD PTR [edx]
  4122dc:	cmp    al,0x7
  4122de:	xchg   ebx,eax
  4122df:	xchg   esi,eax
  4122e0:	mov    ecx,0xb4cf2152
  4122e5:	fisubr WORD PTR [esi]
  4122e7:	push   edx
  4122e8:	outs   dx,DWORD PTR ds:[esi]
  4122e9:	jb     0x4122a6
  4122eb:	shl    ebp,0xa5
  4122ee:	add    BYTE PTR [edi+0x16],al
  4122f1:	pop    edx
  4122f2:	mov    ch,0xed
  4122f4:	cld    
  4122f5:	sub    eax,0x5620c7dd
  4122fa:	or     al,0x69
  4122fc:	loope  0x412372
  4122fe:	popa   
  4122ff:	add    eax,0x7f1f4f1f
  412304:	scas   al,BYTE PTR es:[edi]
  412305:	xchg   ebx,eax
  412306:	xor    eax,0xdb2e2411
  41230b:	into   
  41230c:	sub    al,0x5d
  41230e:	or     dl,BYTE PTR [ebp+edi*2+0x63]
  412312:	pop    es
  412313:	push   ds
  412314:	fwait
  412315:	rcr    DWORD PTR [ebx],1
  412317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412318:	mov    cl,0xac
  41231a:	inc    esi
  41231b:	std    
  41231c:	lahf   
  41231d:	mov    bh,BYTE PTR [eax]
  41231f:	dec    ebp
  412320:	mov    al,ds:0x51e34a6
  412325:	mov    esp,0x3120f8b6
  41232a:	cmp    bh,BYTE PTR [eax-0x7d]
  41232d:	cs cdq 
  41232f:	aam    0x3e
  412331:	sti    
  412332:	dec    esp
  412333:	mov    ds:0xbad44f0b,eax
  412338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412339:	and    BYTE PTR [edx],ch
  41233b:	mov    edi,?
  41233d:	xchg   cl,bl
  41233f:	fcomp  QWORD PTR [edx+eiz*4]
  412342:	inc    edx
  412343:	loopne 0x412350
  412345:	pusha  
  412346:	ja     0x4123a6
  412348:	pushf  
  412349:	(bad)  
  41234a:	jmp    0x412393
  41234c:	cs (bad) 
  41234f:	and    DWORD PTR [edx+eiz*2-0x63],ecx
  412353:	sub    al,ah
  412355:	sub    al,0xbb
  412357:	sub    BYTE PTR [ebx+0x631656c7],cl
  41235d:	xchg   ebp,eax
  41235e:	sub    DWORD PTR [ebp+0x21f6b283],ebx
  412364:	das    
  412365:	clc    
  412366:	pusha  
  412367:	fcom   DWORD PTR [ecx+0xa]
  41236a:	and    DWORD PTR ds:0x6fd23785,esp
  412370:	dec    edi
  412371:	jnp    0x41231d
  412373:	xlat   BYTE PTR ds:[ebx]
  412374:	(bad)  
  412376:	jmp    0x1c92:0x2f80fe4a
  41237d:	inc    edi
  41237e:	mov    ah,0xfd
  412380:	mov    esi,0x496a703f
  412385:	out    0xd4,al
  412387:	sahf   
  412388:	int3   
  412389:	les    edi,FWORD PTR ds:0xc0527564
  41238f:	push   edi
  412390:	aaa    
  412391:	addr16 mov edx,0x247c0151
  412397:	jae    0x412354
  412399:	lods   al,BYTE PTR ds:[esi]
  41239a:	adc    eax,0x9f2254a6
  41239f:	cs or  al,0x9e
  4123a2:	ins    DWORD PTR es:[edi],dx
  4123a3:	or     ebp,edx
  4123a5:	mov    edi,0x35ebd114
  4123aa:	std    
  4123ab:	or     al,0x50
  4123ad:	in     eax,dx
  4123ae:	xchg   ebp,eax
  4123af:	icebp  
  4123b0:	inc    edi
  4123b1:	pop    ecx
  4123b2:	mov    WORD PTR [edx+esi*8+0x56],gs
  4123b6:	mov    ah,0x3f
  4123b8:	dec    esp
  4123b9:	into   
  4123ba:	xchg   ecx,eax
  4123bb:	add    eax,0x3028c921
  4123c0:	les    esi,FWORD PTR [ebp-0x77]
  4123c3:	out    0x48,eax
  4123c5:	into   
  4123c6:	mov    esp,0x7d4ec676
  4123cb:	mov    edi,0x60800fa9
  4123d0:	jnp    0x41236f
  4123d2:	aaa    
  4123d3:	fwait
  4123d4:	retf   0x453f
  4123d7:	jle    0x4123fb
  4123d9:	int3   
  4123da:	jns    0x4123a7
  4123dc:	fiadd  DWORD PTR [ebx+ebx*8-0x2297a2d2]
  4123e3:	cmc    
  4123e4:	mov    eax,ds:0xc56672c6
  4123e9:	fisttp QWORD PTR [esi+0x4d]
  4123ec:	or     esp,DWORD PTR [ecx+0x1de0534]
  4123f2:	push   esi
  4123f3:	ins    DWORD PTR es:[edi],dx
  4123f4:	(bad)  
  4123f5:	clc    
  4123f6:	cmp    al,0xe0
  4123f8:	inc    esp
  4123f9:	repnz das 
  4123fb:	mov    dl,0xa9
  4123fd:	jo     0x41240c
  4123ff:	mov    esp,0x5b3c1014
  412404:	or     ebp,DWORD PTR [esi]
  412406:	idiv   BYTE PTR [eax]
  412408:	std    
  412409:	dec    ebp
  41240a:	stos   DWORD PTR es:[edi],eax
  41240b:	sbb    eax,0x625507a0
  412410:	push   ecx
  412411:	(bad)  
  412413:	in     al,dx
  412414:	push   edx
  412415:	icebp  
  412416:	(bad)  
  412417:	out    0xfa,eax
  412419:	iret   
  41241a:	xlat   BYTE PTR ds:[ebx]
  41241b:	mov    edx,edi
  41241d:	xchg   DWORD PTR [esi-0x5c783e2c],esp
  412423:	call   0x44c9faa2
  412428:	in     al,0x3c
  41242a:	adc    eax,ebx
  41242c:	xchg   bl,al
  41242e:	retf   
  41242f:	xchg   edi,eax
  412430:	retf   0x936e
  412433:	aaa    
  412434:	ror    DWORD PTR [ecx-0xdbd8eb3],cl
  41243a:	and    edi,DWORD PTR [ebx]
  41243c:	ret    0x3aa8
  41243f:	sti    
  412440:	fucomi st,st(1)
  412442:	sbb    edx,esi
  412444:	xor    edi,DWORD PTR [ebx-0x360806a4]
  41244a:	in     al,0xe8
  41244c:	outs   dx,DWORD PTR ds:[esi]
  41244d:	bswap  ebp
  41244f:	sbb    al,0xd7
  412451:	add    ax,0x67ac
  412455:	test   BYTE PTR [ebx],bh
  412457:	xlat   BYTE PTR ds:[ebx]
  412458:	ins    DWORD PTR es:[edi],dx
  412459:	cmp    BYTE PTR [esi-0x1618edf6],al
  41245f:	push   0x48
  412461:	inc    ebx
  412462:	mov    bl,BYTE PTR [ebp-0x33]
  412465:	into   
  412466:	loope  0x4124c4
  412468:	shr    BYTE PTR [ebp+0x23],1
  41246b:	mov    edx,0x7bd2aeaf
  412470:	mov    esi,0x6bb4e162
  412475:	mov    eax,0xf37b7f98
  41247a:	(bad)  
  41247b:	push   0xffffffd8
  41247d:	neg    DWORD PTR [ebx]
  41247f:	xor    ah,dh
  412481:	pusha  
  412482:	outs   dx,DWORD PTR ds:[esi]
  412483:	(bad)  [eax]
  412485:	mov    DWORD PTR [eax],ebp
  412487:	stos   DWORD PTR es:[edi],eax
  412488:	ror    BYTE PTR [ebx],0x74
  41248b:	inc    esi
  41248c:	test   BYTE PTR [ebp-0x64],ch
  41248f:	out    0x6a,al
  412491:	sbb    eax,ebp
  412493:	add    eax,0xc5b999cc
  412498:	out    0xc3,al
  41249a:	adc    cl,dl
  41249c:	mov    eax,ds:0x42a29479
  4124a1:	stos   DWORD PTR es:[edi],eax
  4124a2:	dec    ebp
  4124a3:	jb     0x412489
  4124a5:	(bad)  ds:0x6c1f943b
  4124ab:	aas    
  4124ac:	(bad)  
  4124ae:	imul   esp,DWORD PTR [esp+edx*4],0xc1c8d0ae
  4124b5:	lea    ebp,[edi-0xe]
  4124b8:	inc    edx
  4124b9:	pop    edx
  4124ba:	or     DWORD PTR [ebx],ecx
  4124bc:	xor    DWORD PTR [ebx],0xd8143769
  4124c2:	rcr    BYTE PTR [ebp+0x40],0x7b
  4124c6:	sub    al,0x50
  4124c8:	add    al,0x65
  4124ca:	or     eax,0x4c89034c
  4124d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124d1:	lods   al,BYTE PTR ds:[esi]
  4124d2:	pop    ecx
  4124d3:	xchg   esi,eax
  4124d4:	xlat   BYTE PTR ds:[ebx]
  4124d5:	cld    
  4124d6:	push   esi
  4124d7:	xor    eax,0x89076cd8
  4124dc:	push   ebx
  4124dd:	arpl   WORD PTR [edx+0xa],ax
  4124e0:	les    eax,FWORD PTR [edx+0x1c38410b]
  4124e6:	jo     0x41252f
  4124e8:	xor    ah,bh
  4124ea:	bt     DWORD PTR [esi+0x6f8d5f17],ecx
  4124f1:	lahf   
  4124f2:	test   DWORD PTR [edx],ecx
  4124f4:	pusha  
  4124f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124f6:	push   eax
  4124f7:	daa    
  4124f8:	pop    ebp
  4124f9:	int    0x27
  4124fb:	(bad)  
  4124fc:	push   ebx
  4124fd:	adc    DWORD PTR [ebx-0x6a],edi
  412500:	sub    al,0xe
  412502:	cmp    al,0x20
  412504:	sbb    BYTE PTR [ebx],al
  412506:	rcl    BYTE PTR [ebx],1
  412508:	icebp  
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x422078
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4124f7
  412538:	pop    es
  412539:	test   DWORD PTR [edi+edx*2+0x5c],edi
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	out    0xa4,eax
  412545:	rcr    esi,0x27
  412548:	xor    DWORD PTR ds:0x94f883d6,eax
  41254e:	rcl    DWORD PTR [eax+0x395f0287],1
  412554:	ds ja  0x412565
  412557:	mov    dl,0xd2
  412559:	mov    edx,0x5d6154c2
  41255e:	and    eax,0x32a1a3a6
  412563:	mov    esp,0x6d8b249d
  412568:	std    
  412569:	fstp   QWORD PTR [edx]
  41256b:	ss aam 0xb
  41256e:	xchg   ebx,eax
  41256f:	mov    WORD PTR [edx-0x30db5b2e],ss
  412575:	xchg   al,al
  412577:	shr    DWORD PTR [esi-0x5ddec826],cl
  41257d:	pushf  
  41257e:	jle    0x41253f
  412580:	in     eax,dx
  412581:	bound  ebp,QWORD PTR [eax+0xa]
  412584:	in     eax,dx
  412585:	xchg   edx,eax
  412586:	xchg   BYTE PTR [esi-0x565a7f77],bl
  41258c:	mov    ecx,DWORD PTR [ecx]
  41258e:	add    dh,BYTE PTR [edi+0x5cb1d19b]
  412594:	data16 jecxz 0x41259c
  412597:	and    al,0xfd
  412599:	inc    ebx
  41259a:	xchg   DWORD PTR [ebp-0x23],edx
  41259d:	pop    es
  41259e:	mov    bl,0x3
  4125a0:	leave  
  4125a1:	pop    edx
  4125a2:	mov    bx,0x282a
  4125a6:	inc    edi
  4125a7:	shl    DWORD PTR [ebx-0x65602c18],1
  4125ad:	jge    0x4125f3
  4125af:	push   cs
  4125b0:	xor    al,0xef
  4125b2:	xchg   ecx,eax
  4125b3:	sbb    eax,0x3d7f8f56
  4125b8:	jae    0x412628
  4125ba:	arpl   WORD PTR [eax+0x6b],si
  4125bd:	push   ss
  4125be:	push   cs
  4125bf:	icebp  
  4125c0:	sbb    BYTE PTR [esi],cl
  4125c2:	sub    al,0xa7
  4125c4:	jb     0x412609
  4125c6:	hlt    
  4125c7:	sub    eax,0x1eee56c1
  4125cc:	push   0x26
  4125ce:	xor    BYTE PTR [ecx+0x4c],0x8c
  4125d2:	or     DWORD PTR [edi+eiz*8+0x17],edx
  4125d6:	outs   dx,BYTE PTR ds:[esi]
  4125d7:	dec    eax
  4125d8:	(bad)  
  4125d9:	loopne 0x412600
  4125db:	pushf  
  4125dc:	add    al,0xee
  4125de:	retf   0x5b99
  4125e1:	cmp    DWORD PTR [edi+0x6d31b94f],0x87defa97
  4125eb:	sbb    eax,0xd0129493
  4125f0:	pop    eax
  4125f1:	call   0x332f67c
  4125f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125f7:	sub    dl,BYTE PTR [edx+0x6d]
  4125fa:	int3   
  4125fb:	into   
  4125fc:	mov    bh,0xd1
  4125fe:	sbb    eax,0x4d62e10
  412603:	mov    fs:0xbd1ca1c9,eax
  412609:	jb     0x4125c1
  41260b:	pushf  
  41260c:	nop
  41260d:	jle    0x4125aa
  41260f:	sbb    DWORD PTR [ecx+eax*2+0x28],ecx
  412613:	inc    esi
  412614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412615:	mov    dl,0xf0
  412617:	rol    eax,1
  412619:	and    al,ch
  41261b:	pop    ss
  41261c:	fwait
  41261d:	mov    ch,0xa3
  41261f:	mov    cl,0x50
  412621:	stos   BYTE PTR es:[edi],al
  412622:	mov    edi,0x3af5ec0b
  412627:	or     al,0x2e
  412629:	out    dx,al
  41262a:	inc    ebx
  41262b:	sub    DWORD PTR [edi],0xffffffd9
  41262e:	sbb    al,0x81
  412630:	jno    0x4125da
  412632:	xchg   ebx,eax
  412633:	data16 aam 0x16
  412636:	(bad)  
  412637:	scas   eax,DWORD PTR es:[edi]
  412638:	ss mov ebx,0xdb4b77a6
  41263e:	aas    
  41263f:	mov    ds:0xf6bacf04,al
  412644:	add    esi,DWORD PTR [edi-0xc]
  412647:	pop    esi
  412648:	js     0x412692
  41264a:	mov    bh,0x85
  41264c:	pop    edx
  41264d:	jg     0x41269b
  41264f:	sub    eax,0x8cc7dc44
  412654:	add    al,0x9f
  412656:	js     0x4125e2
  412658:	addr16 dec ebx
  41265a:	pushf  
  41265b:	stos   DWORD PTR es:[edi],eax
  41265c:	inc    ebp
  41265d:	sbb    BYTE PTR [ebx+0x411a480e],al
  412663:	stos   DWORD PTR es:[edi],eax
  412664:	cmp    ecx,DWORD PTR [edx+edi*4+0x25]
  412668:	pushf  
  412669:	pusha  
  41266a:	fnsave [edx-0x5f]
  41266d:	push   es
  41266e:	mov    ds:0xfc52ff27,eax
  412673:	add    edx,ecx
  412675:	(bad)  
  412676:	imul   ebx,edi,0x5af12e8
  41267c:	dec    ecx
  41267d:	and    DWORD PTR [eax],0x1f
  412680:	pop    edi
  412681:	imul   edx,DWORD PTR [ebp+0x1e6ed124],0xffffffed
  412688:	fdivr  DWORD PTR [esi+edi*8]
  41268b:	cld    
  41268c:	push   ebp
  41268d:	cmp    bl,BYTE PTR [ebx-0x45]
  412690:	pop    ebx
  412691:	out    0xbd,al
  412693:	inc    edx
  412694:	dec    ebx
  412695:	scas   al,BYTE PTR es:[edi]
  412696:	pop    esp
  412697:	jmp    0x7b6563e
  41269c:	mov    cl,0x8d
  41269e:	add    esp,DWORD PTR [edx+0x286a9967]
  4126a4:	push   edi
  4126a5:	and    esp,eax
  4126a7:	test   eax,0x75f42e8e
  4126ac:	pop    ss
  4126ad:	xor    DWORD PTR [edi+0x70b0dc5f],esp
  4126b3:	fdivr  st(3),st
  4126b5:	push   edx
  4126b6:	push   ds
  4126b7:	inc    eax
  4126b8:	fs enter 0x78a1,0x46
  4126bd:	jmp    0x412667
  4126bf:	push   es
  4126c0:	mov    ah,BYTE PTR [edx+ecx*2+0x6cb65adf]
  4126c7:	mov    edi,DWORD PTR [esi-0x1babbb5f]
  4126cd:	or     ecx,eax
  4126cf:	outs   dx,DWORD PTR ds:[esi]
  4126d0:	xchg   ecx,eax
  4126d1:	(bad)  
  4126d3:	adc    DWORD PTR cs:[ebp+0x1c],edi
  4126d7:	adc    al,BYTE PTR [esi+0x48]
  4126da:	int    0x3e
  4126dc:	adc    dh,BYTE PTR [ebp+edx*1+0x1c]
  4126e0:	retf   0xdbe7
  4126e3:	push   0x17
  4126e5:	pop    ss
  4126e6:	ret    
  4126e7:	lock les eax,FWORD PTR [ebp-0x49]
  4126eb:	fistp  DWORD PTR [ebp+0x4d]
  4126ee:	ja     0x412744
  4126f0:	iret   
  4126f1:	inc    eax
  4126f2:	sub    eax,DWORD PTR [edi]
  4126f4:	push   ebx
  4126f5:	and    DWORD PTR [edi],esp
  4126f7:	xchg   ebx,eax
  4126f8:	push   es
  4126f9:	fdivp  st(5),st
  4126fb:	aaa    
  4126fc:	jle    0x412738
  4126fe:	xchg   DWORD PTR [eax],ebp
  412700:	xchg   ebp,eax
  412701:	shl    eax,cl
  412703:	loope  0x412762
  412705:	(bad)  
  412706:	ds mov dl,ah
  412709:	sbb    DWORD PTR [edi+0x1b],ebp
  41270c:	adc    BYTE PTR [ebp+0x73],cl
  41270f:	adc    esp,DWORD PTR [esi]
  412711:	mov    ?,WORD PTR [esi]
  412713:	mov    ecx,0x7595b90d
  412718:	gs fwait
  41271a:	mov    dh,0x3e
  41271c:	push   es
  41271d:	add    bl,BYTE PTR [edx]
  41271f:	pushf  
  412720:	(bad)  
  412721:	std    
  412722:	xor    BYTE PTR [ebx+esi*8+0x3ddfdaf6],0x6d
  41272a:	xchg   BYTE PTR [edx],bl
  41272c:	pop    ss
  41272d:	mov    es,WORD PTR [edx]
  41272f:	push   0xf267aa81
  412734:	dec    ecx
  412735:	clc    
  412736:	clc    
  412737:	add    DWORD PTR [ecx+0x1b],esi
  41273a:	call   0x9f:0x261d102a
  412741:	shl    DWORD PTR [edi+0x602f729],1
  412747:	out    0xfa,eax
  412749:	mul    BYTE PTR [ecx-0x97fe27d]
  41274f:	fstp   QWORD PTR [esi]
  412751:	call   0x7840:0x4660c2a7
  412758:	lahf   
  412759:	enter  0x1519,0x4f
  41275d:	lds    ebp,FWORD PTR [ebp+0x33]
  412760:	push   edx
  412761:	xchg   edi,eax
  412762:	jae    0x41273a
  412764:	mov    ds:0xf63f197a,al
  412769:	cmc    
  41276a:	test   DWORD PTR [eax+0x51],eax
  41276d:	dec    esi
  41276e:	inc    ebp
  41276f:	ret    0x125e
  412772:	ja     0x412708
  412774:	add    bh,BYTE PTR [ebx+0x7111b229]
  41277a:	push   eax
  41277b:	jo     0x4127ae
  41277d:	pushw  0x74
  412780:	adc    BYTE PTR [esi+0x69aca464],0xc3
  412787:	popa   
  412788:	sub    BYTE PTR [edi],0x78
  41278b:	and    DWORD PTR [esi],esi
  41278d:	inc    ebx
  41278e:	fidiv  DWORD PTR [edx-0x27]
  412791:	cmp    ah,BYTE PTR [ebx-0x53b4368a]
  412797:	icebp  
  412798:	adc    ebx,esp
  41279a:	fwait
  41279b:	sbb    eax,edx
  41279d:	mov    edx,DWORD PTR ds:0x4225fc
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225fc
  4127d5:	mov    ds:0x422604,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xbca79a22
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [ecx+0xde15857],bl
  4128b7:	mov    eax,0x64614c43
  4128bc:	out    dx,eax
  4128bd:	in     al,0x6b
  4128bf:	cmp    BYTE PTR [esi+0x4a],ch
  4128c2:	jle    0x412895
  4128c4:	xchg   edi,eax
  4128c5:	(bad)  
  4128c7:	and    bh,BYTE PTR [esp+esi*4-0x228333f5]
  4128ce:	std    
  4128cf:	cmp    ah,BYTE PTR [eax-0x2a8272f5]
  4128d5:	pavgb  mm1,QWORD PTR [edx]
  4128d8:	in     al,dx
  4128d9:	inc    edx
  4128da:	pop    esp
  4128db:	dec    ecx
  4128dc:	les    esi,FWORD PTR [edx-0x68a5556a]
  4128e2:	ficomp WORD PTR [esi+0x56201d3b]
  4128e8:	cld    
  4128e9:	jno    0x412935
  4128eb:	adc    edx,DWORD PTR [ebp+0x8]
  4128ee:	scas   eax,DWORD PTR es:[edi]
  4128ef:	xchg   esi,eax
  4128f0:	pop    ds
  4128f1:	lock rcr DWORD PTR [edx+0x6a],0x96
  4128f6:	push   edx
  4128f7:	or     al,BYTE PTR [edi-0x71]
  4128fa:	or     eax,0x4bd5c5ee
  4128ff:	sub    BYTE PTR [ecx],0xb5
  412902:	sub    DWORD PTR [ebx],0xd3cac72f
  412908:	cmp    al,0x30
  41290a:	outs   dx,DWORD PTR ds:[esi]
  41290b:	fisub  DWORD PTR [edx]
  41290d:	dec    edi
  41290e:	pop    ds
  41290f:	stc    
  412910:	outs   dx,BYTE PTR ds:[esi]
  412911:	int3   
  412912:	sti    
  412913:	jp     0x41295e
  412915:	and    edx,DWORD PTR [ebx]
  412917:	enter  0x35a3,0x3c
  41291b:	inc    esp
  41291c:	test   al,0x40
  41291e:	dec    esi
  41291f:	add    BYTE PTR [eax-0x1d],cl
  412922:	les    esi,FWORD PTR [edi+0x72]
  412925:	nop    DWORD PTR [eax-0x45630b69]
  41292c:	lods   eax,DWORD PTR ds:[esi]
  41292d:	mov    DWORD PTR [edx+eax*8+0x1c58e0db],0xb3b987f8
  412938:	add    bh,BYTE PTR ds:0x17f400e7
  41293e:	test   al,0xf5
  412940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412941:	leave  
  412942:	jp     0x4128d4
  412944:	add    eax,0x7829bf25
  412949:	sub    dh,BYTE PTR [edx]
  41294b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41294c:	nop
  41294d:	jecxz  0x412981
  41294f:	dec    esi
  412950:	pushf  
  412951:	xlat   BYTE PTR ds:[ebx]
  412952:	dec    bp
  412954:	adc    al,0xc0
  412956:	sbb    BYTE PTR [edi-0xb5fe589],0xed
  41295d:	outs   dx,DWORD PTR ds:[esi]
  41295e:	push   edi
  41295f:	dec    edx
  412960:	jg     0x412984
  412962:	pop    esp
  412963:	test   eax,0x5c1b2273
  412968:	inc    eax
  412969:	adc    al,0x2
  41296b:	(bad)  
  41296c:	(bad)  [ebx+0x64]
  41296f:	jae    0x4129c3
  412971:	fsub   DWORD PTR [ebx]
  412973:	push   edi
  412974:	int    0x81
  412976:	test   DWORD PTR [esi+0x74],0xdff641b1
  41297d:	cwde   
  41297e:	cdq    
  41297f:	popf   
  412980:	or     al,0xdc
  412982:	pop    edx
  412983:	and    BYTE PTR [ebx+0x48],al
  412986:	inc    ecx
  412987:	mov    ds:0x6bff2346,al
  41298c:	jne    0x41295e
  41298e:	cmp    al,0x1c
  412990:	cli    
  412991:	pop    ebp
  412992:	push   0x75
  412994:	ficom  WORD PTR [ebx-0x5a]
  412997:	std    
  412998:	sbb    BYTE PTR [esi],dl
  41299a:	mov    edi,DWORD PTR [esi+0x63]
  41299d:	sub    eax,0x944a75e1
  4129a2:	dec    edx
  4129a3:	pop    ebp
  4129a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129a5:	daa    
  4129a6:	aam    0x21
  4129a8:	push   ss
  4129a9:	jmp    0x75db:0x72707db6
  4129b0:	xor    ecx,esi
  4129b2:	lock pop eax
  4129b4:	dec    ebx
  4129b5:	adc    ecx,DWORD PTR [edx+0x3949eb26]
  4129bb:	mov    dh,0x1c
  4129bd:	sbb    al,0xd6
  4129bf:	jmp    0x26b94fa8
  4129c4:	inc    edi
  4129c5:	dec    esi
  4129c6:	sub    dl,bl
  4129c8:	(bad)  
  4129c9:	push   esp
  4129ca:	es jnp 0x4129fc
  4129cd:	loopne 0x4129c0
  4129cf:	xchg   BYTE PTR [ecx+ebp*1+0x30],dh
  4129d3:	dec    ebx
  4129d4:	retf   
  4129d5:	mov    esp,0xe05e8c54
  4129da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129db:	out    dx,al
  4129dc:	out    0x5f,eax
  4129de:	stos   DWORD PTR es:[edi],eax
  4129df:	sbb    BYTE PTR [ebx+ebx*1+0x40],0x97
  4129e4:	pop    ecx
  4129e5:	scas   eax,DWORD PTR es:[edi]
  4129e6:	(bad)  
  4129e7:	mov    WORD PTR [ebx+0x3b],?
  4129ea:	(bad)  
  4129eb:	hlt    
  4129ec:	pop    ds
  4129ed:	add    ah,al
  4129ef:	jbe    0x412996
  4129f1:	stos   DWORD PTR es:[edi],eax
  4129f2:	sbb    DWORD PTR [eax],edx
  4129f4:	jns    0x412993
  4129f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f7:	jge    0x41298f
  4129f9:	xor    BYTE PTR [esi-0x1282ae86],0xf2
  412a00:	aas    
  412a01:	and    DWORD PTR [ebx],esi
  412a03:	out    0x90,al
  412a05:	inc    ebp
  412a06:	in     eax,dx
  412a07:	ins    DWORD PTR es:[edi],dx
  412a08:	mov    ah,0x71
  412a0a:	outs   dx,BYTE PTR ds:[esi]
  412a0b:	jmp    0x4129e5
  412a0d:	jp     0x412a39
  412a0f:	and    al,BYTE PTR [ebx+0x7a]
  412a12:	(bad)  
  412a15:	mov    bl,0x3a
  412a17:	(bad)  
  412a18:	in     al,dx
  412a19:	out    dx,al
  412a1a:	nop
  412a1b:	add    ecx,0x3d45db67
  412a21:	jg     0x412a9e
  412a23:	call   0x5d67:0xd3bf58d1
  412a2a:	out    dx,eax
  412a2b:	idiv   BYTE PTR [di+0x34a2]
  412a30:	mov    WORD PTR ss:0x2db83134,gs
  412a37:	icebp  
  412a38:	push   edi
  412a39:	sub    eax,0xd14e48b
  412a3e:	jno    0x412a2b
  412a40:	add    BYTE PTR [edx],0xb4
  412a43:	cmp    al,0xb
  412a45:	stos   DWORD PTR es:[edi],eax
  412a46:	out    dx,eax
  412a47:	pop    ebp
  412a48:	cmp    edx,ebp
  412a4a:	(bad)  
  412a4b:	retf   
  412a4c:	iret   
  412a4d:	loope  0x412a2c
  412a4f:	dec    ecx
  412a50:	pop    ecx
  412a51:	xchg   esp,eax
  412a52:	mov    esp,0xbb0519a4
  412a57:	rcl    cl,cl
  412a59:	(bad)  
  412a5a:	gs xchg esi,eax
  412a5c:	popf   
  412a5d:	(bad)  
  412a5e:	jecxz  0x412acb
  412a60:	mov    bh,0xd5
  412a62:	pop    ss
  412a63:	lahf   
  412a64:	cld    
  412a65:	mov    ah,0xec
  412a67:	push   ss
  412a68:	pop    edx
  412a69:	sub    ah,dh
  412a6b:	jmp    0xbe7a8fcc
  412a70:	add    DWORD PTR [esi+0x24],eax
  412a73:	test   BYTE PTR ds:0xec678719,0x38
  412a7a:	int3   
  412a7b:	mov    al,ah
  412a7d:	sahf   
  412a7e:	imul   ebx,DWORD PTR ds:0x378b4656,0xfb7f70f8
  412a88:	test   DWORD PTR [esi-0x683142e5],0x5a347c73
  412a92:	loope  0x412a58
  412a94:	cmp    edi,DWORD PTR [edi+0x5a]
  412a97:	jb     0x412a67
  412a99:	inc    edi
  412a9a:	jmp    0x469fbef5
  412a9f:	loop   0x412ae0
  412aa1:	gs xchg edx,eax
  412aa3:	add    eax,0xbc016347
  412aa8:	mov    ah,0x97
  412aaa:	retf   
  412aab:	mov    gs,WORD PTR [ecx+ebx*1-0xa6921bd]
  412ab2:	repz adc BYTE PTR [edx-0x6],bh
  412ab6:	aaa    
  412ab7:	mul    BYTE PTR [edx-0xe]
  412aba:	jae    0x412a53
  412abc:	jle    0x412a6e
  412abe:	add    ebp,DWORD PTR [edi]
  412ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac1:	adc    al,0xfa
  412ac3:	imul   edi,DWORD PTR [ebp+0x524b5d],0xffffffd6
  412aca:	sbb    al,0xf3
  412acc:	mov    DWORD PTR [ebp+0x16],ecx
  412acf:	mov    WORD PTR [ebp-0x26],?
  412ad2:	outs   dx,BYTE PTR ds:[esi]
  412ad3:	cmp    eax,ecx
  412ad5:	jbe    0x412ad2
  412ad7:	xor    al,0xd1
  412ad9:	in     al,0x65
  412adb:	int3   
  412adc:	adc    BYTE PTR [ecx+0x3021741b],dl
  412ae2:	and    dl,BYTE PTR [edx-0x60]
  412ae5:	fnstenv [ecx]
  412ae7:	cli    
  412ae8:	cmp    eax,0xb31f688b
  412aed:	test   edi,edi
  412aef:	mov    eax,edx
  412af1:	mov    edx,0x74e94589
  412af6:	mov    bl,0x1a
  412af8:	pop    esi
  412af9:	ins    BYTE PTR es:[edi],dx
  412afa:	sar    DWORD PTR [edi-0x44b557f5],cl
  412b00:	jle    0x412b5b
  412b02:	std    
  412b03:	xchg   DWORD PTR ds:0x3f29f2a7,eax
  412b09:	cmp    edi,DWORD PTR [ebp-0x3001cd4b]
  412b0f:	ins    BYTE PTR es:[edi],dx
  412b10:	or     eax,0x57bdec7e
  412b15:	sbb    eax,0xa542f88d
  412b1a:	and    ah,dh
  412b1c:	sub    eax,0x67d30037
  412b21:	xchg   ebx,eax
  412b22:	sbb    DWORD PTR [eax+0x1d],0x6a154ac1
  412b29:	xchg   edx,eax
  412b2a:	ja     0x412ab7
  412b2c:	pop    es
  412b2d:	inc    ecx
  412b2e:	scas   eax,DWORD PTR es:[edi]
  412b2f:	test   dh,dl
  412b31:	outs   dx,DWORD PTR ds:[esi]
  412b32:	add    esp,edi
  412b34:	ret    
  412b35:	sbb    al,0x64
  412b37:	cwde   
  412b38:	in     al,dx
  412b39:	jns    0x412b3f
  412b3b:	frstor [edi]
  412b3d:	add    al,0xe4
  412b3f:	fild   DWORD PTR [esi+0x734c2acd]
  412b45:	jne    0x412b01
  412b47:	out    dx,eax
  412b48:	cmc    
  412b49:	test   BYTE PTR ss:[eax+0x7a785ea2],cl
  412b50:	fbstp  TBYTE PTR [edx]
  412b52:	imul   bh
  412b54:	cmp    BYTE PTR [eax],0xbf
  412b57:	shl    ch,1
  412b59:	aad    0xbf
  412b5b:	or     bh,BYTE PTR [eax+0x33]
  412b5e:	inc    esp
  412b5f:	icebp  
  412b60:	mov    WORD PTR [ebp+edx*4+0x28],ss
  412b64:	jno    0x412be3
  412b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b67:	popa   
  412b68:	cld    
  412b69:	retf   0x376a
  412b6c:	mov    esi,0xd4ab5b6a
  412b71:	mov    al,ds:0x885c1ea5
  412b76:	clc    
  412b77:	stos   BYTE PTR es:[edi],al
  412b78:	adc    DWORD PTR [ebx+edi*8],ebx
  412b7b:	xor    eax,0xdc944134
  412b80:	lahf   
  412b81:	dec    esi
  412b82:	push   ebp
  412b83:	and    eax,edx
  412b85:	push   eax
  412b86:	ror    DWORD PTR [esi-0x62],0x70
  412b8a:	add    BYTE PTR [ebx-0x50e343e9],cl
  412b90:	or     ebx,ecx
  412b92:	ds cmp edx,0xdb394690
  412b99:	lds    edi,FWORD PTR [ebx]
  412b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b9d:	push   esi
  412b9e:	mov    ds:0x53f8ec5,al
  412ba3:	(bad)  
  412ba4:	jle    0x412bcf
  412ba6:	mov    esi,0x8df2e875
  412bab:	nop
  412bac:	arpl   bx,bp
  412bae:	dec    ax
  412bb0:	pop    eax
  412bb1:	aaa    
  412bb2:	mov    ebx,0x696d91ad
  412bb7:	fsub   st,st(0)
  412bb9:	mov    dh,0x31
  412bbb:	ss out dx,eax
  412bbd:	push   ecx
  412bbe:	lods   al,BYTE PTR ds:[esi]
  412bbf:	vunpckhps ymm2,ymm2,YMMWORD PTR [edx-0x7b075734]
  412bc7:	jmp    0x992f:0xb9e5dea8
  412bce:	(bad)  
  412bcf:	repnz cdq 
  412bd1:	test   eax,0xc023e689
  412bd7:	mov    ?,WORD PTR [edi]
  412bd9:	scas   al,BYTE PTR es:[edi]
  412bda:	fisubr DWORD PTR [eax-0x60a9fad1]
  412be0:	or     al,BYTE PTR [edx]
  412be2:	push   ebp
  412be3:	sbb    ch,dh
  412be5:	inc    ebp
  412be6:	shr    DWORD PTR [ecx+0x6da09961],cl
  412bec:	daa    
  412bed:	pushf  
  412bee:	lods   eax,DWORD PTR ds:[esi]
  412bef:	jp     0x412bb5
  412bf1:	aad    0xd8
  412bf3:	dec    ebx
  412bf4:	cdq    
  412bf5:	cmp    al,0xfd
  412bf7:	push   ss
  412bf8:	ret    0x6deb
  412bfb:	int    0x9d
  412bfd:	loop   0x412c1d
  412bff:	inc    eax
  412c00:	xchg   ebx,eax
  412c01:	dec    ebx
  412c02:	scas   al,BYTE PTR es:[edi]
  412c03:	mov    dl,0x10
  412c05:	sub    eax,0x4278869
  412c0a:	adc    eax,0x42000d61
  412c0f:	jns    0x412bd0
  412c11:	sbb    dh,al
  412c13:	jge    0x412c2d
  412c15:	nop
  412c16:	adc    eax,0xd98d57bf
  412c1b:	push   0xf868d098
  412c20:	jecxz  0x412c98
  412c22:	test   esi,esi
  412c24:	pop    edx
  412c25:	push   es
  412c26:	(bad)  
  412c27:	pop    ds
  412c28:	nop
  412c29:	test   BYTE PTR [edx+edx*1],0x28
  412c2d:	out    0x2e,eax
  412c2f:	lds    ecx,FWORD PTR [ecx-0x900e44]
  412c35:	inc    esi
  412c36:	sti    
  412c37:	ss out dx,eax
  412c39:	lock jge 0x412c1a
  412c3c:	pop    eax
  412c3d:	push   ds
  412c3e:	hlt    
  412c3f:	push   ecx
  412c40:	lods   eax,DWORD PTR ds:[esi]
  412c41:	xor    dh,ah
  412c43:	fistp  WORD PTR [ecx]
  412c45:	fidiv  WORD PTR [eax]
  412c47:	fwait
  412c48:	push   esi
  412c49:	push   eax
  412c4a:	xlat   BYTE PTR ds:[ebx]
  412c4b:	sub    cl,0xa2
  412c4e:	cwde   
  412c4f:	mov    bh,0x26
  412c51:	dec    edx
  412c52:	cmp    al,BYTE PTR [edx]
  412c54:	fdivr  QWORD PTR [esi-0x76]
  412c57:	sbb    al,ch
  412c59:	call   0x9ca:0x1a526006
  412c60:	mov    ch,0x35
  412c62:	or     al,0x13
  412c64:	inc    ebp
  412c65:	(bad)  
  412c66:	xchg   ebx,eax
  412c67:	add    BYTE PTR [ebx-0x6],bl
  412c6a:	arpl   WORD PTR [esi-0x7ba7474],dx
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xb0abca59
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    cl,al
  412cae:	adc    ch,BYTE PTR [eax+0x31]
  412cb1:	inc    eax
  412cb2:	fidivr WORD PTR [ecx+0x3]
  412cb5:	mov    eax,0x5a2768ac
  412cba:	xchg   edi,esi
  412cbc:	add    edx,ebx
  412cbe:	pop    ecx
  412cbf:	xchg   esp,eax
  412cc0:	sub    al,0x96
  412cc2:	push   0x52
  412cc4:	or     DWORD PTR [edi],0x29
  412cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc8:	ins    BYTE PTR es:[edi],dx
  412cc9:	jae    0x412ca1
  412ccb:	mov    edi,0x51772fe3
  412cd0:	pushf  
  412cd1:	push   ecx
  412cd2:	ror    BYTE PTR [ecx+0x1b322df3],0xf6
  412cd9:	ja     0x412cae
  412cdb:	sar    BYTE PTR [ebx-0x2fd778ae],1
  412ce1:	cwde   
  412ce2:	stc    
  412ce3:	jecxz  0x412ced
  412ce5:	(bad)  [esi-0x48]
  412ce8:	scas   al,BYTE PTR es:[edi]
  412ce9:	jle    0x412d67
  412ceb:	lea    edi,[eax+0x34d649d7]
  412cf1:	push   0x4e
  412cf3:	pop    DWORD PTR cs:[esi+ecx*8-0x37]
  412cf8:	xor    DWORD PTR [edi-0x72],0xc42a4f71
  412cff:	sahf   
  412d00:	add    DWORD PTR [edx-0x4a747732],edi
  412d06:	stc    
  412d07:	dec    ebp
  412d08:	jo     0x412cea
  412d0a:	and    ah,BYTE PTR [edi+0x1c]
  412d0d:	push   es
  412d0e:	fimul  WORD PTR [eax-0x3f47e64d]
  412d14:	int3   
  412d15:	leave  
  412d16:	inc    ebp
  412d17:	push   edx
  412d18:	mov    dh,0x87
  412d1a:	mov    al,0x1c
  412d1c:	lea    esi,[ebx-0x7dc8fcd5]
  412d22:	adc    al,0xb7
  412d24:	nop
  412d25:	xor    al,0x16
  412d27:	ds stc 
  412d29:	push   ebx
  412d2a:	inc    ecx
  412d2b:	cdq    
  412d2c:	mov    DWORD PTR [ecx+0x535beae3],ecx
  412d32:	push   esp
  412d33:	push   ss
  412d34:	out    0x72,eax
  412d36:	or     DWORD PTR [ecx-0x28dbafdb],ebx
  412d3c:	popf   
  412d3d:	jg     0x412d9e
  412d3f:	add    dh,bh
  412d41:	loope  0x412ce2
  412d43:	sbb    eax,0xa935ac18
  412d48:	mov    ds:0x2eb2574c,al
  412d4d:	aad    0x13
  412d4f:	ror    BYTE PTR [ebx+0x15e46ec9],0xf
  412d56:	sbb    al,0xfa
  412d58:	jmp    0xe018:0xcbba76b
  412d5f:	gs cs mov edi,0x6c8262a1
  412d66:	xor    BYTE PTR [ecx-0x14128a71],ah
  412d6c:	lea    ebp,[eax]
  412d6e:	and    DWORD PTR [edx-0x52127c28],edx
  412d74:	adc    dl,BYTE PTR [ebx+edx*2-0x7fca8165]
  412d7b:	jmp    0xdb5cd24e
  412d80:	and    DWORD PTR [ecx+0x2c912e74],edx
  412d86:	xchg   edx,eax
  412d87:	jae    0x412d99
  412d89:	and    bl,bh
  412d8b:	daa    
  412d8c:	mov    bh,0x7f
  412d8e:	int    0x51
  412d90:	jns    0x412dca
  412d92:	aas    
  412d93:	add    DWORD PTR [eax],eax
  412d95:	add    edi,DWORD PTR [esi-0x7f]
  412d98:	dec    edx
  412d99:	or     edx,DWORD PTR [edx+ebx*1]
  412d9c:	shr    BYTE PTR [ecx-0x1842fc1f],0x6b
  412da3:	popa   
  412da4:	push   0xab67f4e5
  412da9:	push   edi
  412daa:	cmc    
  412dab:	and    ebp,DWORD PTR [edx]
  412dad:	fidiv  DWORD PTR [eax]
  412daf:	jmp    0xf201:0x6b1da18c
  412db6:	in     eax,0xc
  412db8:	rol    DWORD PTR [eax],cl
  412dba:	sbb    DWORD PTR [ecx-0x5b55ee63],edx
  412dc0:	mov    eax,0x812516b3
  412dc5:	out    0xf1,eax
  412dc7:	jecxz  0x412d4b
  412dc9:	(bad)  
  412dcb:	(bad)  
  412dcc:	push   esi
  412dcd:	retf   0xedbb
  412dd0:	mov    ch,0x88
  412dd2:	or     al,0x27
  412dd4:	and    cl,BYTE PTR [eax]
  412dd6:	aad    0x55
  412dd8:	imul   esi,DWORD PTR [ebx+0x4a],0xffffffab
  412ddc:	mov    al,0xf5
  412dde:	(bad)  
  412ddf:	add    eax,0x8aec0488
  412de4:	sbb    DWORD PTR [edx+edi*4+0x5],eax
  412de8:	je     0x412d6e
  412dea:	test   BYTE PTR [esi+0x741a3133],cl
  412df0:	aam    0x3e
  412df2:	or     edx,DWORD PTR [ebp-0x47b16ee]
  412df8:	jbe    0x412e4a
  412dfa:	bnd js 0x412e2d
  412dfd:	jbe    0x412dca
  412dff:	mov    edx,0xec7f45eb
  412e04:	xor    al,0x6b
  412e06:	jbe    0x412db2
  412e08:	xchg   esi,eax
  412e09:	mov    eax,DWORD PTR [edi+ecx*4+0x72]
  412e0d:	and    eax,0xf9510ca0
  412e12:	sbb    bl,al
  412e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e15:	cdq    
  412e16:	xchg   ecx,eax
  412e17:	fcomp  DWORD PTR [edi-0x77f6db0c]
  412e1d:	dec    esi
  412e1e:	aaa    
  412e1f:	repnz and cl,dh
  412e22:	or     eax,0xdc01fb88
  412e27:	mov    eax,0x17d783e
  412e2c:	ror    esi,cl
  412e2e:	xor    BYTE PTR [ecx+0x1b],0x79
  412e32:	jns    0x412e51
  412e34:	popf   
  412e35:	nop
  412e36:	mov    WORD PTR [esp+esi*1-0x3baeeec1],es
  412e3d:	jb     0x412e64
  412e3f:	nop
  412e40:	cmp    DWORD PTR [edx+0x51],eax
  412e43:	dec    esi
  412e44:	in     eax,dx
  412e45:	mov    ecx,0x3ebb60cd
  412e4a:	sbb    esi,DWORD PTR [ebx-0x80]
  412e4d:	mov    bl,BYTE PTR [esi-0x4b]
  412e50:	stos   DWORD PTR es:[edi],eax
  412e51:	cmp    dl,cl
  412e53:	cmp    ebp,ebp
  412e55:	inc    eax
  412e56:	mov    ch,0xe4
  412e58:	add    al,0x80
  412e5a:	(bad)  
  412e5d:	cmp    dl,cl
  412e5f:	js     0x412e00
  412e61:	cmp    eax,0xee25c05d
  412e66:	jmp    0x412e49
  412e68:	cs ins DWORD PTR es:[edi],dx
  412e6a:	gs xchg ebp,eax
  412e6c:	jge    0x412e05
  412e6e:	adc    al,0x40
  412e70:	sbb    edi,DWORD PTR [ecx-0x14bc5d72]
  412e76:	cmp    al,0x79
  412e78:	add    eax,0x8be150cd
  412e7d:	sbb    edx,DWORD PTR [edi+eiz*4-0xb3d5362]
  412e84:	dec    esi
  412e85:	add    bl,ch
  412e87:	push   0xea3b4057
  412e8c:	or     dl,ch
  412e8e:	cdq    
  412e8f:	dec    ebx
  412e90:	test   BYTE PTR [edi],al
  412e92:	lds    edx,FWORD PTR [edx-0x720d0e84]
  412e98:	mov    dh,0xca
  412e9a:	mov    edi,0x89a3f6
  412e9f:	push   0x4b
  412ea1:	and    bl,ch
  412ea3:	or     BYTE PTR [ebx+0x19],dh
  412ea6:	dec    ebp
  412ea7:	icebp  
  412ea8:	sub    esi,DWORD PTR [esi+0x7a698154]
  412eae:	outs   dx,DWORD PTR ds:[esi]
  412eaf:	rcl    BYTE PTR [ecx],0x4e
  412eb2:	mov    ?,WORD PTR [ebx-0x5c]
  412eb5:	mul    DWORD PTR [ebp-0x329c0c34]
  412ebb:	cli    
  412ebc:	in     al,dx
  412ebd:	adc    DWORD PTR [ebx],esi
  412ebf:	xor    DWORD PTR [ebp+0x758cafb],ecx
  412ec5:	or     esp,DWORD PTR [eax+edx*2+0x4f]
  412ec9:	pusha  
  412eca:	add    al,0xb4
  412ecc:	adc    DWORD PTR [bp-0x72],ecx
  412ed0:	cmp    ah,ah
  412ed2:	push   edx
  412ed3:	pusha  
  412ed4:	sub    DWORD PTR [ebx],ebp
  412ed6:	or     edi,DWORD PTR [ebp-0x51]
  412ed9:	das    
  412eda:	sub    esi,DWORD PTR [ecx]
  412edc:	ret    
  412edd:	test   ebx,eax
  412edf:	adc    bl,dh
  412ee1:	aad    0xa1
  412ee3:	jo     0x412f1d
  412ee5:	call   0x8c9f:0xcc4b33b1
  412eec:	aad    0x75
  412eee:	push   eax
  412eef:	sahf   
  412ef0:	ret    
  412ef1:	int    0x34
  412ef3:	jecxz  0x412ef1
  412ef5:	lods   al,BYTE PTR ss:[esi]
  412ef7:	mov    ch,0x2d
  412ef9:	push   edx
  412efa:	jmp    esi
  412efc:	pop    edx
  412efd:	mov    ebp,0xb8057139
  412f02:	ror    DWORD PTR [edi+0x2c2a78ba],cl
  412f08:	jle    0x412eb8
  412f0a:	mov    ch,0x99
  412f0c:	mov    bh,0x77
  412f0e:	jno    0x412f32
  412f10:	xchg   edi,eax
  412f11:	sbb    dl,al
  412f13:	(bad)  
  412f14:	ins    BYTE PTR es:[edi],dx
  412f15:	int3   
  412f16:	stos   DWORD PTR es:[edi],eax
  412f17:	das    
  412f18:	add    BYTE PTR [ebx+esi*1+0x3aee51ae],ah
  412f1f:	pop    ecx
  412f20:	test   BYTE PTR [ecx+0x35],dh
  412f23:	imul   edi,ecx,0xffffffeb
  412f26:	psllw  mm4,mm7
  412f29:	or     cl,ch
  412f2b:	mov    ds:0xfe8b601f,al
  412f30:	pop    edi
  412f31:	cld    
  412f32:	cmp    BYTE PTR [esp+esi*4+0x2],0xa9
  412f37:	retf   
  412f38:	sti    
  412f39:	mov    dl,0x59
  412f3b:	repnz and al,0x26
  412f3e:	stos   DWORD PTR es:[edi],eax
  412f3f:	jmp    0x2686:0x6f8536ae
  412f46:	into   
  412f47:	dec    ebp
  412f48:	test   BYTE PTR [edx-0x784ac763],al
  412f4e:	repnz sbb DWORD PTR [edi+edx*2+0x33f5e472],edx
  412f56:	sub    eax,edi
  412f58:	stos   BYTE PTR es:[edi],al
  412f59:	pushf  
  412f5a:	aaa    
  412f5b:	mov    cl,0x90
  412f5d:	xchg   ebx,eax
  412f5e:	inc    esp
  412f5f:	neg    DWORD PTR [edi+ecx*8-0xf383d94]
  412f66:	inc    ecx
  412f67:	fisttp WORD PTR [edi-0xa]
  412f6a:	adc    al,0xf1
  412f6c:	sbb    eax,0x11527735
  412f71:	xchg   ebp,eax
  412f72:	jbe    0x412f70
  412f74:	xor    bh,al
  412f76:	add    esp,edx
  412f78:	js     0x412f16
  412f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f7b:	aas    
  412f7c:	jnp    0x412fca
  412f7e:	fdiv   st,st(7)
  412f80:	ds jnp 0x412fc3
  412f83:	icebp  
  412f84:	mul    bh
  412f86:	adc    al,al
  412f88:	repnz dec ebx
  412f8a:	push   edi
  412f8b:	xlat   BYTE PTR ds:[ebx]
  412f8c:	mov    BYTE PTR [edx-0x123e53b9],cl
  412f92:	push   eax
  412f93:	sbb    ecx,DWORD PTR [edx-0x1e]
  412f96:	(bad)  
  412f97:	push   ds
  412f98:	test   BYTE PTR [ecx+0x152e3ed9],dl
  412f9e:	(bad)  
  412f9f:	out    0xc2,eax
  412fa1:	nop
  412fa2:	ds lock loope 0x412f87
  412fa6:	xor    BYTE PTR [eax+0x798f1ce1],bl
  412fac:	mov    ah,0x76
  412fae:	aaa    
  412faf:	out    dx,eax
  412fb0:	call   0x7aeb:0xe7ed9b95
  412fb7:	inc    edx
  412fb8:	dec    ecx
  412fb9:	jno    0x412f96
  412fbb:	cmp    edx,esp
  412fbd:	jae    0x413000
  412fbf:	js     0x412fd7
  412fc1:	push   es
  412fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc3:	cmp    al,0x51
  412fc5:	inc    ecx
  412fc6:	pushf  
  412fc7:	or     bh,BYTE PTR [esi-0x749e05da]
  412fcd:	jb     0x412f7d
  412fcf:	test   dl,ah
  412fd1:	call   FWORD PTR [ecx]
  412fd3:	push   ds
  412fd4:	add    dh,BYTE PTR [ebp-0x32]
  412fd7:	jmp    0x412f68
  412fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fda:	outs   dx,BYTE PTR ds:[esi]
  412fdb:	fild   DWORD PTR [esi]
  412fdd:	pop    edx
  412fde:	(bad)  
  412fdf:	popf   
  412fe0:	cdq    
  412fe1:	out    0x69,al
  412fe3:	pop    ds
  412fe4:	scas   eax,DWORD PTR es:[edi]
  412fe5:	inc    edi
  412fe6:	imul   ecx,DWORD PTR [ebx+0x4d179000],0x64
  412fed:	test   BYTE PTR [edi],ch
  412fef:	inc    esi
  412ff0:	(bad)  
  412ff1:	pop    ds
  412ff2:	sub    BYTE PTR [ebx-0x4a],ah
  412ff5:	ret    0x6b4d
  412ff8:	aaa    
  412ff9:	loope  0x412ffe
  412ffb:	ss scas al,BYTE PTR es:[edi]
  412ffd:	sbb    ch,dl
  412fff:	add    eax,0xe4a89bc4
  413004:	fisub  DWORD PTR [ebx]
  413006:	push   ds
  413007:	push   edi
  413008:	push   edi
  413009:	inc    ebx
  41300a:	aas    
  41300b:	jae    0x412f9d
  41300d:	aas    
  41300e:	rcl    DWORD PTR [ebx+eiz*8+0x39e4b797],0xba
  413016:	cli    
  413017:	bound  ebp,QWORD PTR [ecx]
  413019:	jae    0x41302b
  41301b:	(bad)  
  41301c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41301d:	(bad)  
  41301f:	or     al,0x1
  413021:	adc    cl,0xe0
  413024:	shr    DWORD PTR [edx+0x73],1
  413027:	and    al,0x6f
  413029:	xor    bl,BYTE PTR [ecx+ebx*8]
  41302c:	loopne 0x412fdb
  41302e:	imul   esp,DWORD PTR [esi+0x6f],0xffffffeb
  413032:	dec    edi
  413033:	sbb    al,0x5f
  413035:	add    ch,0xd3
  413038:	xchg   esi,eax
  413039:	(bad)  
  41303a:	xchg   edi,eax
  41303b:	lea    ebp,[edx-0x5a]
  41303e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41303f:	outs   dx,DWORD PTR ds:[esi]
  413040:	pop    es
  413041:	lds    esp,FWORD PTR [ebx-0x45]
  413044:	not    BYTE PTR [edi-0x76]
  413047:	aad    0x9e
  413049:	std    
  41304a:	mov    dh,0xe6
  41304c:	inc    eax
  41304d:	lods   al,BYTE PTR ds:[esi]
  41304e:	clc    
  41304f:	jl     0x412ffc
  413051:	sub    eax,0x77ae3a22
  413056:	xor    DWORD PTR [edx-0x59],0xffffff8d
  41305a:	inc    eax
  41305b:	ins    BYTE PTR es:[edi],dx
  41305c:	dec    edx
  41305d:	cmp    bl,BYTE PTR [ecx+0x495a4e0f]
  413063:	push   ds
  413064:	add    al,BYTE PTR [ebx+0x50513922]
  41306a:	call   0x422078
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [ebx+edx*1-0x7c],edi
  4130e0:	test   eax,0x1848d3bc
  4130e5:	sbb    BYTE PTR [edx-0x27e7e7ee],ch
  4130eb:	mov    al,0x4e
  4130ed:	loope  0x413122
  4130ef:	push   edi
  4130f0:	sub    al,0xf9
  4130f2:	mov    ch,0x1c
  4130f4:	or     esp,DWORD PTR [ecx-0x6f]
  4130f7:	pop    esp
  4130f8:	cdq    
  4130f9:	lahf   
  4130fa:	xchg   ebx,eax
  4130fb:	pop    ecx
  4130fc:	add    bl,BYTE PTR [edi]
  4130fe:	pop    esp
  4130ff:	adc    edi,DWORD PTR [ebx+0x1e]
  413102:	jb     0x41315c
  413104:	aaa    
  413105:	das    
  413106:	sbb    BYTE PTR [edi-0x6f],dh
  413109:	fmul   QWORD PTR [eax+ebx*8-0xa]
  41310d:	xchg   edx,eax
  41310e:	jo     0x413151
  413110:	jbe    0x413110
  413112:	pop    eax
  413113:	sub    BYTE PTR [edx-0x70873075],ah
  413119:	mov    edi,0xca73d6ae
  41311e:	mov    ah,0x69
  413120:	stos   DWORD PTR es:[edi],eax
  413121:	mov    cs,WORD PTR [ebp-0x43]
  413124:	cmp    bl,dl
  413126:	lock mov cl,0xd
  413129:	cdq    
  41312a:	inc    edx
  41312b:	jmp    0xa1eb9406
  413130:	sti    
  413131:	test   BYTE PTR [ecx-0x2d],bh
  413134:	dec    esp
  413135:	dec    esi
  413136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413137:	xchg   bx,ax
  413139:	mov    edi,0x86389981
  41313e:	gs gs xor eax,0x1347101a
  413145:	mul    edx
  413147:	push   eax
  413148:	push   0x8d107573
  41314d:	mov    cl,BYTE PTR [eax-0xd]
  413150:	mov    cl,0x1
  413152:	push   ebx
  413153:	mov    dh,0xc4
  413155:	add    DWORD PTR [eax+eax*1+0x6],eax
  413159:	lea    esi,[edx-0x5f]
  41315c:	jg     0x413133
  41315e:	fsubr  DWORD PTR [edx-0x666098a0]
  413164:	pop    eax
  413165:	push   edi
  413166:	addr16 push ds
  413168:	fmul   st,st(5)
  41316a:	mov    edi,DWORD PTR [esi+0x6e35d7a2]
  413170:	mov    ds:0x5ff76ea8,al
  413175:	cdq    
  413176:	fistp  DWORD PTR [edx]
  413178:	push   ebx
  413179:	sub    eax,0xefb3a152
  41317e:	mov    cl,0x8b
  413180:	inc    esi
  413181:	sti    
  413182:	js     0x4131f2
  413184:	push   0xd217caf3
  413189:	push   ecx
  41318a:	and    esp,DWORD PTR [edx-0x70]
  41318d:	or     bh,BYTE PTR [eax]
  41318f:	sti    
  413190:	pop    esi
  413191:	sub    BYTE PTR [ebx-0x2ef71f22],0x9d
  413198:	or     al,0xfa
  41319a:	repz jg 0x4131c6
  41319d:	ror    BYTE PTR [ecx],0xe
  4131a0:	and    esi,DWORD PTR [esi]
  4131a2:	push   edi
  4131a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131a5:	sti    
  4131a6:	dec    dl
  4131a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a9:	sbb    eax,0x11cb7cd9
  4131ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131af:	int    0x30
  4131b1:	add    cl,bl
  4131b3:	out    0xa8,eax
  4131b5:	out    dx,al
  4131b6:	popa   
  4131b7:	cmp    esi,0x7395f0e6
  4131bd:	add    esi,DWORD PTR [ebp+0x42]
  4131c0:	cli    
  4131c1:	adc    DWORD PTR [esi-0x4122c7f3],edi
  4131c7:	sub    esi,DWORD PTR [ecx]
  4131c9:	shl    BYTE PTR [ecx],1
  4131cb:	ja     0x41316b
  4131cd:	push   0x30
  4131cf:	pop    es
  4131d0:	fs push edx
  4131d2:	mov    esi,0xe6e1b8de
  4131d7:	repz and ch,BYTE PTR [esi]
  4131da:	mov    ebx,0x98fd6d79
  4131df:	push   ecx
  4131e0:	loop   0x4131f4
  4131e2:	out    0x8,al
  4131e4:	scas   eax,DWORD PTR es:[edi]
  4131e5:	jg     0x413220
  4131e7:	stos   DWORD PTR es:[edi],eax
  4131e8:	aas    
  4131e9:	xchg   edx,eax
  4131ea:	sbb    eax,0x17636faa
  4131ef:	out    0xab,al
  4131f1:	jmp    0x28c4:0x9144c3d2
  4131f8:	cld    
  4131f9:	ins    DWORD PTR es:[edi],dx
  4131fa:	sub    ecx,DWORD PTR [eax]
  4131fc:	sub    BYTE PTR [edi+esi*2+0xd],0xbe
  413201:	fnsave [ebx-0x5c]
  413204:	retf   
  413205:	loop   0x4131d0
  413207:	xchg   ebp,eax
  413208:	mov    esi,0x7664aad3
  41320d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41320e:	popf   
  41320f:	in     eax,0x5c
  413211:	or     eax,0xfca9a6ef
  413216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413217:	(bad)  
  413218:	pop    esi
  413219:	and    al,0xd2
  41321b:	mov    ds:0x15be7b96,al
  413220:	sub    DWORD PTR [edx+0x68],edx
  413223:	mov    edx,0xb04bae34
  413228:	cwde   
  413229:	fadd   DWORD PTR [edx]
  41322b:	push   edx
  41322c:	ds in  eax,dx
  41322e:	out    dx,eax
  41322f:	sbb    BYTE PTR [ebp+0x42ff3992],0xd4
  413236:	out    0x59,al
  413238:	adc    BYTE PTR [edx+0x1f],0xb7
  41323c:	les    ecx,FWORD PTR [ebp+0x710aa133]
  413242:	(bad)  
  413243:	cmc    
  413244:	cdq    
  413245:	arpl   WORD PTR [ecx],ax
  413247:	inc    esp
  413248:	aaa    
  413249:	pop    es
  41324a:	sbb    eax,0xdd86ed38
  41324f:	xor    eax,0x5058353f
  413254:	pop    esp
  413255:	sub    edi,eax
  413257:	mov    al,ds:0xf093b805
  41325c:	and    dh,bl
  41325e:	fwait
  41325f:	popa   
  413260:	jmp    0x7cca:0x55c3ed1b
  413267:	and    BYTE PTR [esi],0xdb
  41326a:	into   
  41326b:	mov    edx,0xc81dd136
  413270:	loop   0x4132a2
  413272:	fwait
  413273:	mov    eax,ds:0x485b2708
  413278:	sub    al,cl
  41327a:	pop    esi
  41327b:	fwait
  41327c:	pop    ss
  41327d:	xchg   ecx,eax
  41327e:	mov    WORD PTR [ebx],ds
  413280:	clc    
  413281:	out    dx,eax
  413282:	int    0x5a
  413284:	adc    ch,BYTE PTR [ebx+0x47]
  413287:	sbb    ch,BYTE PTR [ecx-0x3934ef98]
  41328d:	mov    edx,0xdf4a1751
  413292:	int3   
  413293:	sti    
  413294:	pop    es
  413295:	in     al,dx
  413296:	cmp    al,0x47
  413298:	js     0x41327e
  41329a:	jecxz  0x4132cb
  41329c:	push   0xffffffa2
  41329e:	addr16 mov cl,0x45
  4132a1:	mov    eax,ds:0x16ff035a
  4132a6:	mov    bh,0xbc
  4132a8:	inc    ebx
  4132a9:	(bad)  
  4132aa:	dec    ebx
  4132ab:	cmp    al,0xb8
  4132ad:	mov    ch,0xd4
  4132af:	test   BYTE PTR [ebx+0x46d259f2],dl
  4132b5:	or     DWORD PTR [edx-0x26],0x57
  4132b9:	mov    edi,0x104e8a96
  4132be:	icebp  
  4132bf:	sbb    al,0x13
  4132c1:	or     DWORD PTR [ebx],edx
  4132c3:	push   eax
  4132c4:	and    dh,BYTE PTR [ecx-0x5d]
  4132c7:	addr16 inc ebx
  4132c9:	in     eax,0xaf
  4132cb:	stc    
  4132cc:	arpl   WORD PTR [esi],ax
  4132ce:	fsub   DWORD PTR [ebx-0x78514257]
  4132d4:	jmp    0x4132be
  4132d6:	xor    BYTE PTR [ecx-0x2c],ah
  4132d9:	mov    DWORD PTR [eax-0x75cc19b5],edx
  4132df:	jns    0x4132b5
  4132e1:	arpl   WORD PTR [eax+0x43],ax
  4132e4:	arpl   WORD PTR ds:0xe8510c16,cx
  4132ea:	mov    edx,DWORD PTR fs:[ebx+0x6cacbfc9]
  4132f1:	out    0x5c,al
  4132f3:	mov    al,ds:0xbfadffa6
  4132f8:	xchg   BYTE PTR [edi+0x209dcf87],dl
  4132fe:	scas   eax,DWORD PTR es:[edi]
  4132ff:	outs   dx,DWORD PTR ds:[esi]
  413300:	xor    BYTE PTR [ebx],al
  413302:	sbb    eax,0xbb0f6e6f
  413307:	mov    esi,0x19b8d45a
  41330c:	int    0x90
  41330e:	and    BYTE PTR [edx],bl
  413310:	scas   al,BYTE PTR es:[edi]
  413311:	in     al,dx
  413312:	mov    eax,0x97e0c230
  413317:	inc    ebx
  413318:	pop    ebx
  413319:	mov    ch,0x18
  41331b:	xchg   ebp,eax
  41331c:	pop    ss
  41331d:	or     ebp,DWORD PTR [eax+0x75]
  413320:	adc    eax,0xd4d39f79
  413325:	xchg   ecx,eax
  413326:	add    eax,0x51244b58
  41332b:	pop    ss
  41332c:	cmc    
  41332d:	in     eax,0x83
  41332f:	out    0x10,eax
  413331:	out    dx,eax
  413332:	xor    DWORD PTR [ebp-0x40fabfb0],ebx
  413338:	add    DWORD PTR [ebp-0x23],edi
  41333b:	push   esp
  41333c:	inc    edx
  41333d:	loopne 0x413304
  41333f:	cmp    BYTE PTR ds:0x54dd3329,dh
  413345:	ret    0x107b
  413348:	sbb    cl,BYTE PTR [ebx-0x6f]
  41334b:	ins    BYTE PTR es:[edi],dx
  41334c:	aad    0xcc
  41334e:	repz je 0x41338b
  413351:	fnstenv [ebx-0x60]
  413354:	popf   
  413355:	or     BYTE PTR [edi-0x4b],al
  413358:	pop    ecx
  413359:	cmp    al,0xd4
  41335b:	dec    edi
  41335c:	push   es
  41335d:	iret   
  41335e:	test   BYTE PTR [edx],ch
  413360:	es popa 
  413362:	(bad)  
  413363:	iret   
  413364:	inc    ebx
  413365:	jecxz  0x4133e5
  413367:	jne    0x413314
  413369:	test   DWORD PTR [esi],eax
  41336b:	loop   0x413320
  41336d:	stos   BYTE PTR es:[edi],al
  41336e:	(bad)  
  41336f:	sbb    al,0xeb
  413371:	iret   
  413372:	cmc    
  413373:	pop    ss
  413374:	leave  
  413375:	pop    esp
  413376:	xchg   edi,eax
  413377:	ficomp DWORD PTR [edx-0x1e]
  41337a:	cmp    eax,DWORD PTR [eax+0x1a7a6a87]
  413380:	or     ebx,DWORD PTR [ecx]
  413382:	pop    ds
  413383:	adc    eax,0xdb15095f
  413388:	out    dx,eax
  413389:	adc    eax,0x749ad287
  41338e:	inc    edx
  41338f:	es xchg esp,eax
  413391:	loop   0x41338b
  413393:	and    eax,0xf13b6220
  413398:	in     eax,dx
  413399:	scas   al,BYTE PTR es:[edi]
  41339a:	sar    BYTE PTR [ecx],0xbc
  41339d:	jle    0x413383
  41339f:	(bad)  [edi+0x5881cd41]
  4133a5:	jl     0x413342
  4133a7:	mov    BYTE PTR [ebx-0x7c],0xe6
  4133ab:	push   ss
  4133ac:	adc    BYTE PTR [esi-0x51591a43],cl
  4133b2:	mov    eax,ds:0x34b44abd
  4133b7:	push   esp
  4133b8:	push   edi
  4133b9:	mov    bl,0x8f
  4133bb:	jmp    0x41337f
  4133bd:	xchg   ebp,eax
  4133be:	jle    0x413351
  4133c0:	leave  
  4133c1:	imul   edi,DWORD PTR [esi],0xffffffc6
  4133c4:	add    ah,BYTE PTR [edx-0x1f]
  4133c7:	call   0x1ab6:0x1297f684
  4133ce:	inc    edi
  4133cf:	sub    eax,0x70b4920c
  4133d4:	sbb    DWORD PTR [ebx-0x6e2bb42f],0xffffff8d
  4133db:	mov    ebx,0xad94fe65
  4133e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e1:	fs pushf 
  4133e3:	jge    0x413372
  4133e5:	das    
  4133e6:	fcomp  QWORD PTR [ecx-0x6a3a21d8]
  4133ec:	popf   
  4133ed:	mov    BYTE PTR [ebp+0x43],0xd9
  4133f1:	jnp    0x413376
  4133f3:	fucomip st,st(1)
  4133f5:	dec    esi
  4133f6:	sub    DWORD PTR [edx],edx
  4133f8:	hlt    
  4133f9:	and    eax,0x87a3d036
  4133fe:	pop    esp
  4133ff:	fucomip st,st(1)
  413401:	xor    al,0xdf
  413403:	or     esi,esp
  413405:	test   BYTE PTR ds:0xc6125567,0xa7
  41340c:	or     dh,BYTE PTR [esp+eax*2-0x5d]
  413410:	push   ebp
  413411:	ins    DWORD PTR es:[edi],dx
  413412:	pop    es
  413413:	xlat   BYTE PTR ds:[ebx]
  413414:	jle    0x4133ea
  413416:	ins    BYTE PTR es:[edi],dx
  413417:	or     BYTE PTR [edi-0x60],0xb8
  41341b:	mov    ecx,ebp
  41341d:	push   ebx
  41341e:	aam    0xa1
  413420:	pusha  
  413421:	mov    ah,0xd5
  413423:	sbb    bh,bl
  413425:	rcl    DWORD PTR ds:0xacc8,1
  41342a:	push   ebp
  41342b:	outs   dx,DWORD PTR ds:[esi]
  41342c:	pop    esp
  41342d:	and    ah,BYTE PTR [eax]
  41342f:	mov    al,ds:0x415f9946
  413434:	sub    esi,DWORD PTR [eax-0x419652f7]
  41343a:	cs cmp eax,0xfcaec1de
  413440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413441:	cmp    al,BYTE PTR [esi]
  413443:	dec    ebx
  413444:	xchg   ebx,eax
  413445:	fwait
  413446:	sbb    al,0x9
  413448:	push   cs
  413449:	data16 data16 and cl,bh
  41344d:	imul   esi,eax,0x12
  413450:	push   eax
  413451:	inc    ecx
  413452:	xchg   esi,eax
  413453:	ss stos BYTE PTR es:[edi],al
  413455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413456:	test   DWORD PTR [esi],ecx
  413458:	mov    bl,0xe6
  41345a:	sbb    ch,BYTE PTR [ecx+0x4]
  41345d:	mov    ecx,0x36e564f2
  413462:	(bad)  
  413463:	sbb    al,0xaa
  413465:	mov    ecx,0x5402da3d
  41346a:	jmp    0x4f3:0x18381a3c
  413471:	jmp    0xde69:0x184c9b68
  413478:	mov    cl,0x51
  41347a:	sub    ch,bh
  41347c:	rcr    DWORD PTR [ecx],cl
  41347e:	inc    esi
  41347f:	inc    edi
  413480:	xchg   al,al
  413482:	mov    al,0xc4
  413484:	pop    eax
  413485:	shl    DWORD PTR [esi+0x4],cl
  413488:	mov    al,ds:0xf52a9800
  41348d:	sbb    bl,BYTE PTR [ebx-0x864203c]
  413493:	push   ebx
  413494:	(bad)  
  413495:	cli    
  413496:	cwde   
  413497:	dec    esp
  413498:	xchg   ecx,eax
  413499:	mov    ds:0xa32a2ae2,eax
  41349e:	ss ins BYTE PTR es:[edi],dx
  4134a0:	push   ds
  4134a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a2:	lock jecxz 0x413515
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x422078
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x4aa1709f]
  4134d4:	mov    ecx,0x1842647c
  4134d9:	sbb    BYTE PTR [edx+0x5f181812],ch
  4134df:	adc    al,0x8e
  4134e1:	loopne 0x41346a
  4134e3:	(bad)  
  4134e4:	mov    ds:0x8baaa54a,eax
  4134e9:	je     0x413498
  4134eb:	test   BYTE PTR [esi+0x1fae7b6],ah
  4134f1:	inc    edx
  4134f2:	add    edi,DWORD PTR [eax]
  4134f4:	push   esp
  4134f5:	dec    ebx
  4134f6:	and    al,0x8c
  4134f8:	push   0xfffffffb
  4134fa:	mov    DWORD PTR [eax+0x7979f127],esp
  413500:	dec    edx
  413501:	addr16 jl 0x41355b
  413504:	cmp    DWORD PTR [ebx],esi
  413506:	or     DWORD PTR [ebx+0x50c76cdb],ebp
  41350c:	sub    al,0xaf
  41350e:	push   cs
  41350f:	test   DWORD PTR [edx+0x8],esi
  413512:	pop    edi
  413513:	and    al,0xee
  413515:	popf   
  413516:	dec    edi
  413517:	adc    eax,esp
  413519:	repz inc ebx
  41351b:	retf   0x320f
  41351e:	and    eax,0xd673a684
  413523:	cmc    
  413524:	adc    ecx,DWORD PTR [eax+edi*8]
  413527:	sbb    DWORD PTR [ebp-0x44535f87],ecx
  41352d:	pop    esi
  41352e:	retf   
  41352f:	xchg   edx,eax
  413530:	and    BYTE PTR [esi+esi*1],ch
  413533:	cwde   
  413534:	or     DWORD PTR [edi],ecx
  413536:	hlt    
  413537:	loop   0x41359a
  413539:	push   ebp
  41353a:	div    DWORD PTR [esp+ebx*8+0x7d572b79]
  413541:	sahf   
  413542:	ja     0x413548
  413544:	ins    BYTE PTR es:[edi],dx
  413545:	mov    dl,0xa5
  413547:	mov    edx,0x6ea281b0
  41354c:	pop    esi
  41354d:	pushf  
  41354e:	and    esp,DWORD PTR [ecx-0x1398b673]
  413554:	nop
  413555:	jp     0x413542
  413557:	or     dl,ah
  413559:	call   0xf1238b12
  41355e:	fisttp WORD PTR [eax]
  413560:	in     eax,dx
  413561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413562:	push   ss
  413563:	pop    esi
  413564:	test   al,0x7e
  413566:	into   
  413567:	xchg   edi,eax
  413568:	lods   eax,DWORD PTR ds:[esi]
  413569:	or     DWORD PTR [eax-0xb],0x3f301e37
  413570:	jmp    0x413510
  413572:	sub    eax,0xcaf3c2d5
  413577:	mov    ds:0xa0d81ae9,al
  41357c:	imul   esi,DWORD PTR [ebp+0x736a46da],0xfffffff5
  413583:	mov    dh,0xae
  413585:	jl     0x41350d
  413587:	xchg   edx,eax
  413588:	cmp    BYTE PTR [ebx-0x312672ee],bh
  41358e:	adc    al,0xc3
  413590:	sahf   
  413591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413592:	lods   eax,DWORD PTR ds:[esi]
  413593:	lods   eax,DWORD PTR ds:[esi]
  413594:	sub    bh,BYTE PTR [ecx+edx*4-0x1538d81]
  41359b:	ins    DWORD PTR es:[edi],dx
  41359c:	mov    eax,ds:0x95c3da8a
  4135a1:	lods   al,BYTE PTR ds:[esi]
  4135a2:	ret    
  4135a3:	jbe    0x41361a
  4135a5:	dec    esp
  4135a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a7:	addr16 cmc 
  4135a9:	shr    DWORD PTR [ebx-0x20],cl
  4135ac:	pop    edi
  4135ad:	jmp    0x714658de
  4135b2:	pop    ebp
  4135b3:	fcmovb st,st(5)
  4135b5:	pushf  
  4135b6:	cmc    
  4135b7:	and    dl,al
  4135b9:	cmp    eax,0x512aa844
  4135be:	repz and ax,0x6e0e
  4135c3:	jb     0x4135ba
  4135c5:	rcl    ebx,cl
  4135c7:	cmp    DWORD PTR [eax],edx
  4135c9:	das    
  4135ca:	sbb    esp,edi
  4135cc:	or     BYTE PTR [eax-0x19],dh
  4135cf:	test   DWORD PTR [ebp+0x19],esi
  4135d2:	add    DWORD PTR [eax+0x5a],ebp
  4135d5:	dec    DWORD PTR [ecx+0x3b44ac51]
  4135db:	cmp    eax,0x3b8c61e8
  4135e0:	xlat   BYTE PTR ds:[ebx]
  4135e1:	repz popa 
  4135e3:	sub    edx,DWORD PTR [esi]
  4135e5:	mov    edx,0x82c8dcba
  4135ea:	loop   0x41365a
  4135ec:	adc    al,0x83
  4135ee:	cwde   
  4135ef:	jnp    0x413652
  4135f1:	popa   
  4135f2:	jmp    0x413663
  4135f4:	(bad)  
  4135f5:	scas   al,BYTE PTR es:[edi]
  4135f6:	idiv   edx
  4135f8:	and    al,0xef
  4135fa:	fdivr  st,st(7)
  4135fc:	or     al,0x8f
  4135fe:	push   ds
  4135ff:	repz sbb DWORD PTR [bx+di-0x6f52],ebx
  413605:	fdivr  QWORD PTR [edi+0x98e397c]
  41360b:	sahf   
  41360c:	jmp    0xb158b9b3
  413611:	stc    
  413612:	jns    0x413644
  413614:	add    DWORD PTR [esi+0x6d],edi
  413617:	sub    al,0x61
  413619:	adc    ebp,DWORD PTR [eax]
  41361b:	inc    ebx
  41361c:	dec    ebp
  41361d:	adc    al,BYTE PTR [ecx-0x3b]
  413620:	mov    ds:0xb16e9638,eax
  413625:	mov    eax,0x5f8048af
  41362a:	add    BYTE PTR gs:[edx+0x2c1dca5d],bl
  413631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413632:	ss in  eax,dx
  413634:	push   eax
  413635:	aam    0xf1
  413637:	and    ebp,DWORD PTR ds:0x634a47d0
  41363d:	sar    ecx,1
  41363f:	and    al,0x41
  413641:	loope  0x4136b0
  413643:	outs   dx,DWORD PTR ds:[esi]
  413644:	and    DWORD PTR [ecx],0x61d1e734
  41364a:	add    DWORD PTR [edi],ebx
  41364c:	mov    dh,0x60
  41364e:	xchg   eax,esi
  413650:	push   esi
  413651:	call   0x1fc9:0xc25cd0d9
  413658:	test   eax,0xdf86530b
  41365d:	lds    ebp,FWORD PTR [esp+ecx*2]
  413660:	scas   al,BYTE PTR es:[edi]
  413661:	in     eax,0x6
  413663:	mov    ah,0x9b
  413665:	popf   
  413666:	(bad)  
  413667:	jns    0x41368f
  413669:	or     ch,dl
  41366b:	cmp    ebx,edi
  41366d:	sbb    DWORD PTR [edi+eax*8],ecx
  413670:	aam    0xac
  413672:	scas   eax,DWORD PTR es:[edi]
  413673:	push   esi
  413674:	xchg   edx,eax
  413675:	xchg   esp,eax
  413676:	iret   
  413677:	test   cl,0x11
  41367a:	pusha  
  41367b:	retf   0x31db
  41367e:	mov    ds:0xb9981d0b,al
  413683:	inc    ebx
  413684:	nop
  413685:	scas   eax,DWORD PTR es:[edi]
  413686:	pop    esp
  413687:	cmp    al,0xe7
  413689:	adc    al,0x32
  41368b:	sbb    eax,0xf063ab7
  413690:	(bad)  
  413693:	fsubr  st,st(1)
  413695:	sub    edx,DWORD PTR [edi+0x6f6e3b29]
  41369b:	pop    ds
  41369c:	jmp    0x413631
  41369e:	mov    esp,0x7cfbbff5
  4136a3:	push   esi
  4136a4:	inc    edx
  4136a5:	xlat   BYTE PTR ds:[ebx]
  4136a6:	or     ch,0xdd
  4136a9:	js     0x4136bf
  4136ab:	leave  
  4136ac:	fsub   QWORD PTR [ecx]
  4136ae:	jmp    0xfd5c:0xc73046d8
  4136b5:	adc    BYTE PTR [edi+0x77767825],0x85
  4136bc:	repnz sub eax,0x676461ef
  4136c2:	adc    DWORD PTR [ecx],esp
  4136c4:	(bad)  
  4136c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c6:	fiadd  WORD PTR [esi-0x2dac0e9d]
  4136cc:	in     eax,0x9b
  4136ce:	cmp    ebp,DWORD PTR [ebx+ebp*4]
  4136d1:	and    cl,ch
  4136d3:	or     al,0xd1
  4136d5:	inc    edi
  4136d6:	daa    
  4136d7:	paddusb mm4,QWORD PTR [ebx-0x77d03bb3]
  4136de:	xchg   bp,ax
  4136e0:	lahf   
  4136e1:	mov    cl,0x2a
  4136e3:	scas   eax,DWORD PTR es:[edi]
  4136e4:	ret    0x6408
  4136e7:	jp     0xd3418c51
  4136ed:	nop
  4136ee:	mov    ebx,0x678e4202
  4136f3:	shr    BYTE PTR [edi+0x220e3f41],1
  4136f9:	call   0x25aab25
  4136fe:	xchg   ebp,eax
  4136ff:	jp     0x413742
  413701:	push   edx
  413702:	push   ebx
  413703:	xor    BYTE PTR [edx+0x51e93bd3],ah
  413709:	adc    BYTE PTR [edi],0x7f
  41370c:	inc    esi
  41370d:	mov    BYTE PTR [edx],cl
  41370f:	pusha  
  413710:	in     al,0xbc
  413712:	mov    bh,0xc5
  413714:	imul   edx,DWORD PTR [eax],0xffffff87
  413717:	stos   BYTE PTR es:[edi],al
  413718:	pop    ebx
  413719:	xor    BYTE PTR [ecx-0x2f635d69],al
  41371f:	(bad)  
  413720:	mov    ds:0x9df73efc,eax
  413725:	lahf   
  413726:	out    0xc0,al
  413728:	leave  
  413729:	dec    esp
  41372a:	inc    ebx
  41372b:	add    BYTE PTR ds:0xe9612645,ah
  413731:	push   ds
  413732:	xchg   BYTE PTR [ebx+eax*2-0x25],al
  413736:	xchg   DWORD PTR [eax+0x353fab18],esp
  41373c:	push   cs
  41373d:	hlt    
  41373e:	dec    eax
  41373f:	adc    eax,0xda4500c2
  413744:	das    
  413745:	sub    bp,WORD PTR [eax+0x15]
  413749:	loop   0x413771
  41374b:	frstor [edi+0xaad59]
  413751:	cmp    DWORD PTR ds:0x4612f15e,edi
  413757:	sub    dl,BYTE PTR [esi]
  413759:	fld    TBYTE PTR cs:[esi-0x5e506c1e]
  413760:	test   al,0x67
  413762:	repnz mov bl,0xf1
  413765:	(bad)  
  413766:	nop
  413767:	push   ebp
  413768:	pop    es
  413769:	retf   
  41376a:	inc    ecx
  41376b:	cs int 0x59
  41376e:	adc    bh,BYTE PTR [eax-0x56064e0c]
  413774:	sub    bx,bx
  413777:	data16 xor al,0x7c
  41377a:	sahf   
  41377b:	(bad)  
  41377c:	(bad)  
  41377e:	pop    esi
  41377f:	in     al,0xa8
  413781:	mov    ebx,0x31f12419
  413786:	mov    esp,fs
  413788:	cmp    DWORD PTR [bx+di],0x1a
  41378c:	jp     0x413737
  41378e:	stos   DWORD PTR es:[edi],eax
  41378f:	xchg   ebx,eax
  413790:	jns    0x413737
  413792:	and    eax,0xebeed73f
  413797:	inc    ecx
  413798:	sub    eax,0x2214604
  41379d:	jp     0x413788
  41379f:	cmp    eax,0x157d1e3e
  4137a4:	(bad)  
  4137a5:	daa    
  4137a6:	pop    ecx
  4137a7:	sti    
  4137a8:	sti    
  4137a9:	lock (bad) 
  4137ab:	push   eax
  4137ac:	and    al,0xcd
  4137ae:	sbb    DWORD PTR [ecx+0x6d],ecx
  4137b1:	repz cmc 
  4137b3:	sbb    DWORD PTR [edx],esp
  4137b5:	jmp    0x49eca68f
  4137ba:	aad    0x9d
  4137bc:	or     DWORD PTR [ebx-0x41],ebp
  4137bf:	out    0x87,eax
  4137c1:	daa    
  4137c2:	push   edx
  4137c3:	jmp    0x78936511
  4137c8:	loop   0x41378a
  4137ca:	in     eax,0xfd
  4137cc:	rcr    DWORD PTR [ebp-0x2b],1
  4137cf:	mov    DWORD PTR [edx-0x47b6bf32],edi
  4137d5:	xchg   ebx,eax
  4137d6:	pop    edx
  4137d7:	in     eax,0x1d
  4137d9:	mov    edx,DWORD PTR [ebp+esi*8+0x6f831c84]
  4137e0:	std    
  4137e1:	jae    0x413830
  4137e3:	push   ds
  4137e4:	jns    0x4137e1
  4137e6:	lods   al,BYTE PTR ds:[esi]
  4137e7:	mov    dh,0x58
  4137e9:	leave  
  4137ea:	xlat   BYTE PTR ds:[ebx]
  4137eb:	daa    
  4137ec:	popf   
  4137ed:	cmp    bh,ah
  4137ef:	jl     0x41381f
  4137f1:	add    al,BYTE PTR [ebx+eiz*1]
  4137f4:	loop   0x4137fa
  4137f6:	lods   al,BYTE PTR ds:[esi]
  4137f7:	jno    0x41379f
  4137f9:	jl     0x413852
  4137fb:	mov    BYTE PTR ds:0x79b4b65b,ch
  413801:	es add ebx,edx
  413804:	mov    edx,DWORD PTR [eax]
  413806:	or     edi,ebx
  413808:	xor    edx,DWORD PTR [ebp-0x4f44dbe6]
  41380e:	out    dx,eax
  41380f:	push   0x55
  413811:	xchg   edx,eax
  413812:	jo     0x41388f
  413814:	mov    eax,0x3c62346c
  413819:	call   0xebe1c308
  41381e:	jge    0x413814
  413820:	add    eax,0x63b26476
  413825:	add    al,0x32
  413827:	je     0x4137db
  413829:	jecxz  0x4137f2
  41382b:	lock iret 
  41382d:	jno    0x41388f
  41382f:	xchg   BYTE PTR [edi+0x79],dl
  413832:	push   esi
  413833:	fwait
  413834:	adc    al,0xd3
  413836:	into   
  413837:	xchg   DWORD PTR [ecx-0x68d8cb58],esi
  41383d:	ret    
  41383e:	mov    ecx,DWORD PTR [ecx]
  413840:	sbb    al,0xd5
  413842:	or     eax,0x361e5742
  413847:	ror    edx,cl
  413849:	mov    WORD PTR [ecx-0x56],?
  41384c:	es retf 
  41384e:	call   0x6c8:0x55597cd8
  413855:	lahf   
  413856:	mov    BYTE PTR [ebp-0x44],dl
  413859:	retf   
  41385a:	int    0x61
  41385c:	test   BYTE PTR [eax-0x44b7da82],0x7e
  413863:	add    BYTE PTR [ebp+0x6aa18517],ah
  413869:	jmp    0x4138dd
  41386b:	fnsetpm(287 only) 
  41386d:	int    0x94
  41386f:	inc    ebx
  413870:	loop   0x413846
  413872:	cmc    
  413873:	(bad)  
  413875:	xor    DWORD PTR [edi+0x43],edi
  413878:	mov    al,ds:0xac8481f7
  41387d:	dec    eax
  41387e:	or     al,0xec
  413880:	dec    ebp
  413881:	aam    0x8
  413883:	pop    esp
  413884:	cli    
  413885:	loopne 0x413901
  413887:	jbe    0x4138e0
  413889:	wrmsr  
  41388b:	add    BYTE PTR [esi],bl
  41388d:	ret    
  41388e:	(bad)  
  41388f:	retf   0xe887
  413892:	call   0x1b1dd1ae
  413897:	shl    BYTE PTR [ecx-0x75],1
  41389a:	pop    ebp
  41389b:	in     al,0x81
  41389d:	icebp  
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x1e],ebp
  4138e5:	test   BYTE PTR [ecx-0x42],al
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [eax-0x95150],bl
  4138f5:	mov    ebx,0x63613417
  4138fa:	std    
  4138fb:	pop    edx
  4138fc:	push   eax
  4138fd:	add    ebx,DWORD PTR [ebp+edx*1-0x607739b5]
  413904:	div    DWORD PTR [ebx-0x69]
  413907:	out    0xe6,eax
  413909:	ror    DWORD PTR [edi+0x6d],1
  41390c:	mov    cl,0xbe
  41390e:	push   es
  41390f:	sti    
  413910:	cli    
  413911:	push   es
  413912:	rcl    BYTE PTR [edx-0x51],cl
  413915:	jmp    0xbd55:0x7ce533bb
  41391c:	int    0x1e
  41391e:	cmc    
  41391f:	repz mov ebx,DWORD PTR [ebp-0x78]
  413923:	or     BYTE PTR [edx+ecx*1+0x12c738d2],cl
  41392a:	call   0x5f8c:0x564ca7f4
  413931:	sti    
  413932:	sub    ebx,DWORD PTR [esp+eax*8-0x11]
  413936:	fcom   QWORD PTR [edx+eax*2]
  413939:	mov    ebx,0x6137b3ad
  41393e:	repnz add eax,edi
  413941:	call   0xfdcc:0xa793040b
  413948:	das    
  413949:	aas    
  41394a:	movntq QWORD PTR [eax+0x62374df4],mm6
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	add    al,0xac
  413954:	lods   al,BYTE PTR ds:[esi]
  413955:	mov    al,ds:0x315936e0
  41395a:	in     al,dx
  41395b:	hlt    
  41395c:	je     0x41394c
  41395e:	xor    DWORD PTR [eax-0x2d109402],0x3f
  413965:	sub    al,0x5b
  413967:	pop    ds
  413968:	cdq    
  413969:	lahf   
  41396a:	lock mov eax,ds:0xa9d8aad1
  413970:	inc    esi
  413971:	ror    ecx,cl
  413973:	adc    BYTE PTR [ecx],bh
  413975:	loopne 0x4139dc
  413977:	jbe    0x4139e3
  413979:	adc    DWORD PTR [ecx],ebp
  41397b:	jbe    0x4138fd
  41397d:	rcl    BYTE PTR [ebp+0xe1f8e05],0x29
  413984:	mov    bh,0x78
  413986:	outs   dx,BYTE PTR ds:[esi]
  413987:	(bad)  
  413988:	loopne 0x413981
  41398a:	not    DWORD PTR [ebp-0x74]
  41398d:	xchg   esp,eax
  41398e:	lods   eax,DWORD PTR ds:[esi]
  41398f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413990:	mov    eax,0x9d336c0a
  413995:	add    edi,DWORD PTR [edx+0x33]
  413998:	loop   0x413926
  41399a:	jle    0x4139bb
  41399c:	(bad)  
  41399d:	nop
  41399e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399f:	add    BYTE PTR [ebx+ebp*8-0x1991a529],0xb7
  4139a7:	popa   
  4139a8:	or     BYTE PTR ds:0x2d495111,0x56
  4139af:	dec    esi
  4139b0:	push   cs
  4139b1:	inc    esi
  4139b2:	jl     0x41393d
  4139b4:	adc    dl,al
  4139b6:	add    BYTE PTR [ebx*1-0x44e6d88e],ch
  4139bd:	add    BYTE PTR [ebx-0x2aa1294e],ch
  4139c3:	cmp    bl,BYTE PTR [ebp-0x3b]
  4139c6:	adc    DWORD PTR [esp+eax*1-0x200ed4d1],eax
  4139cd:	sbb    DWORD PTR ds:0x12cc3e9a,esi
  4139d3:	outs   dx,BYTE PTR ds:[esi]
  4139d4:	or     al,0xc8
  4139d6:	adc    al,0xe8
  4139d8:	mov    esp,0x78dbd208
  4139dd:	jo     0x413a45
  4139df:	sti    
  4139e0:	push   0x21
  4139e2:	inc    edi
  4139e3:	mov    BYTE PTR [ecx+0x2a853064],al
  4139e9:	mov    eax,0x387f239a
  4139ee:	out    dx,eax
  4139ef:	sub    al,0x7e
  4139f1:	sahf   
  4139f2:	and    BYTE PTR [esi-0x42],ah
  4139f5:	pop    edi
  4139f6:	out    0x4,eax
  4139f8:	ins    DWORD PTR es:[edi],dx
  4139f9:	xchg   ebp,eax
  4139fa:	xchg   ebx,eax
  4139fb:	test   esi,esi
  4139fd:	xchg   esp,eax
  4139fe:	ja     0x413a7f
  413a00:	sub    DWORD PTR [bx+di+0x518f],0xeb911c14
  413a09:	dec    esi
  413a0a:	in     ax,0x6e
  413a0d:	cs push esp
  413a0f:	scas   eax,DWORD PTR es:[edi]
  413a10:	fstp   TBYTE PTR ds:0x26059c77
  413a16:	fadd   st(6),st
  413a18:	pop    ds
  413a19:	daa    
  413a1a:	mov    edi,0x599bd8aa
  413a1f:	xchg   si,ax
  413a21:	cld    
  413a22:	xor    eax,0xaae88ea
  413a27:	stos   BYTE PTR es:[edi],al
  413a28:	adc    DWORD PTR [ebp+0x2fff78b2],edx
  413a2e:	ret    
  413a2f:	inc    ecx
  413a30:	add    edi,esp
  413a32:	sbb    DWORD PTR [edi],edi
  413a34:	dec    edx
  413a35:	and    eax,0x3ae44560
  413a3a:	pop    ds
  413a3b:	add    dh,BYTE PTR [bx+si-0x6b]
  413a3f:	cmp    al,0x13
  413a41:	out    0x76,al
  413a43:	or     bh,bh
  413a45:	sbb    dh,BYTE PTR [edi-0x14]
  413a48:	out    0x4c,al
  413a4a:	mov    WORD PTR [edx-0x27bef5fa],es
  413a50:	daa    
  413a51:	mov    ebp,0x8824b303
  413a56:	push   es
  413a57:	inc    ecx
  413a58:	inc    esi
  413a59:	add    al,0x99
  413a5b:	cmp    eax,0xad4cb41b
  413a60:	push   0x9e295d4b
  413a65:	js     0x4139f0
  413a67:	aad    0x5b
  413a69:	aaa    
  413a6a:	jne    0x413abf
  413a6c:	mov    dl,0xb4
  413a6e:	jmp    DWORD PTR [ebp-0x385eea4e]
  413a74:	jl     0x413ab6
  413a76:	sub    DWORD PTR [eax-0x48],esp
  413a79:	lods   al,BYTE PTR ds:[esi]
  413a7a:	adc    dl,BYTE PTR [eax+0x1bd72bf6]
  413a80:	push   ecx
  413a81:	adc    eax,0xa652ad59
  413a86:	push   esp
  413a87:	sub    al,0x95
  413a89:	mov    ecx,0x31e78c2d
  413a8e:	cdq    
  413a8f:	mov    ebp,0x48ce0d89
  413a94:	and    esi,DWORD PTR [edi]
  413a96:	mov    cl,0xcd
  413a98:	cmp    ebx,DWORD PTR [esi-0x3c7d2de4]
  413a9e:	mov    edi,0xae86df47
  413aa3:	mov    BYTE PTR [esi+0x38],al
  413aa6:	dec    esi
  413aa7:	(bad)  
  413aa8:	cli    
  413aa9:	pushf  
  413aaa:	fild   QWORD PTR ds:0xc92c4814
  413ab0:	lahf   
  413ab1:	and    BYTE PTR [eax],ch
  413ab3:	jl     0x413af8
  413ab5:	xchg   edx,eax
  413ab6:	push   es
  413ab7:	add    eax,0xc843ef90
  413abc:	or     DWORD PTR [edx],ebp
  413abe:	xchg   ebp,eax
  413abf:	(bad)  
  413ac1:	rcl    DWORD PTR [ecx+0x27],1
  413ac4:	cmp    BYTE PTR [eax+edi*1-0x7a173f39],bh
  413acb:	imul   esp,DWORD PTR [ebx-0x73],0xfffffffa
  413acf:	xchg   ecx,eax
  413ad0:	pop    eax
  413ad1:	add    ebx,DWORD PTR [edx]
  413ad3:	or     ah,BYTE PTR [eax+eax*4-0x10]
  413ad7:	adc    bh,ah
  413ad9:	xor    bl,BYTE PTR [eax]
  413adb:	(bad)  
  413adc:	jecxz  0x413a8a
  413ade:	(bad)  
  413adf:	cmp    ebx,ebx
  413ae1:	push   edi
  413ae2:	mov    ch,0xe8
  413ae4:	stos   BYTE PTR es:[edi],al
  413ae5:	test   BYTE PTR [edx],cl
  413ae7:	or     DWORD PTR [eax],ebp
  413ae9:	pop    edx
  413aea:	arpl   WORD PTR [ecx+edx*8-0x229fa586],si
  413af1:	dec    esp
  413af2:	and    ebx,DWORD PTR [edx-0x49e7ba84]
  413af8:	mov    edx,0x43cd8de1
  413afd:	fnstcw WORD PTR [ebx-0x594b85b6]
  413b03:	sub    al,0x8f
  413b05:	xor    al,0x1d
  413b07:	pop    esp
  413b08:	aaa    
  413b09:	inc    edi
  413b0a:	mov    ecx,0xd91e595
  413b0f:	sbb    dh,cl
  413b11:	pop    edi
  413b12:	cmc    
  413b13:	adc    bh,BYTE PTR fs:[ebx]
  413b16:	sbb    al,0xf9
  413b18:	loope  0x413aaa
  413b1a:	cmc    
  413b1b:	lods   eax,DWORD PTR ds:[esi]
  413b1c:	(bad)  
  413b1d:	loop   0x413aa7
  413b1f:	cmp    bh,al
  413b21:	nop
  413b22:	aam    0x15
  413b24:	outs   dx,DWORD PTR ds:[esi]
  413b25:	bound  ebx,QWORD PTR [ebp+0x702eef95]
  413b2b:	cmp    eax,DWORD PTR [ebp+0x1c]
  413b2e:	sahf   
  413b2f:	jmp    0x413b56
  413b31:	stos   BYTE PTR es:[edi],al
  413b32:	xchg   ecx,eax
  413b33:	repnz scas al,BYTE PTR es:[edi]
  413b35:	fdiv   st(6),st
  413b37:	cmp    ecx,DWORD PTR [ecx-0x72]
  413b3a:	mov    bl,bh
  413b3c:	cmp    edi,ebp
  413b3e:	ins    DWORD PTR es:[edi],dx
  413b3f:	push   eax
  413b40:	mov    ebp,edx
  413b42:	pop    ecx
  413b43:	pop    ebp
  413b44:	fst    DWORD PTR [ecx+0x62]
  413b47:	stos   BYTE PTR es:[edi],al
  413b48:	sbb    dl,0x8a
  413b4b:	(bad)  
  413b4c:	push   0xffffffe4
  413b4e:	cwde   
  413b4f:	xor    al,BYTE PTR [ebp-0x7f3c6863]
  413b55:	(bad)  
  413b57:	cmp    BYTE PTR [edx-0x677a56a2],ch
  413b5d:	cli    
  413b5e:	pop    esp
  413b5f:	add    eax,0xc50c7663
  413b64:	jecxz  0x413b40
  413b66:	jge    0x413b34
  413b68:	in     al,0x96
  413b6a:	add    dl,al
  413b6c:	iret   
  413b6d:	enter  0x63a2,0x18
  413b71:	call   0x1bd7:0xecb902c7
  413b78:	out    dx,al
  413b79:	xlat   BYTE PTR ds:[ebx]
  413b7a:	or     eax,0x7b5d9989
  413b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b80:	jge    0x413b5f
  413b82:	and    eax,0x72c4c0a9
  413b87:	xchg   ebx,eax
  413b88:	test   al,0x3b
  413b8a:	cwde   
  413b8b:	out    0x36,al
  413b8d:	hlt    
  413b8e:	data16 faddp st(4),st
  413b91:	add    bl,dl
  413b93:	jns    0x413c0e
  413b95:	sub    al,0xd7
  413b97:	shl    DWORD PTR [ecx+0x55af32e7],0x34
  413b9e:	mov    esp,0x12be47ba
  413ba3:	fistp  QWORD PTR [esi-0x5871b54c]
  413ba9:	div    DWORD PTR [ebp+0x68]
  413bac:	sub    BYTE PTR [ebp+0x6],ch
  413baf:	outs   dx,DWORD PTR ds:[esi]
  413bb0:	xor    DWORD PTR [ebp-0x69993e65],0x46
  413bb7:	outs   dx,DWORD PTR ds:[esi]
  413bb8:	leave  
  413bb9:	xchg   ebx,eax
  413bba:	xor    al,0x5
  413bbc:	adc    DWORD PTR [edx-0x2f],eax
  413bbf:	dec    ecx
  413bc0:	inc    esp
  413bc1:	xchg   ecx,eax
  413bc2:	sahf   
  413bc3:	lods   eax,DWORD PTR ds:[esi]
  413bc4:	mov    edx,0x7afb686d
  413bc9:	and    bh,BYTE PTR [edx+0x6]
  413bcc:	shl    DWORD PTR [ebx-0x54b5eaac],cl
  413bd2:	popf   
  413bd3:	push   esi
  413bd4:	push   esi
  413bd5:	mov    ecx,0x9ab20cee
  413bda:	push   esp
  413bdb:	leave  
  413bdc:	std    
  413bdd:	pop    ebp
  413bde:	loopne 0x413b87
  413be0:	jp     0x413bda
  413be2:	and    DWORD PTR ds:0x1217fc66,0x50
  413be9:	sub    ah,dl
  413beb:	mov    al,cl
  413bed:	das    
  413bee:	cmc    
  413bef:	dec    edi
  413bf0:	out    0xa8,eax
  413bf2:	lea    esi,gs:[edi]
  413bf5:	imul   ebx,DWORD PTR [ebp*2+0x18137641],0xc10c5cd5
  413c00:	sub    DWORD PTR [esp+ecx*1-0x4d],eax
  413c04:	pop    eax
  413c05:	nop
  413c06:	adc    eax,0x26a30ecc
  413c0b:	xor    bl,ch
  413c0d:	in     eax,dx
  413c0e:	jmp    0x413c88
  413c10:	mov    al,ds:0xe9a8812c
  413c15:	mov    dl,0x1f
  413c17:	mov    eax,DWORD PTR [ebx-0xb4221e3]
  413c1d:	pop    ecx
  413c1e:	icebp  
  413c1f:	scas   eax,DWORD PTR es:[edi]
  413c20:	clc    
  413c21:	das    
  413c22:	pop    edx
  413c23:	sub    eax,0xd04f63f1
  413c28:	mov    eax,ds:0x4719c43f
  413c2d:	nop
  413c2e:	xor    al,0x5f
  413c30:	repnz xor edx,DWORD PTR [eax+0x2474cd8e]
  413c37:	mov    ds:0xb1ddd86f,al
  413c3c:	lods   al,BYTE PTR ds:[esi]
  413c3d:	or     BYTE PTR [ebx+edi*2+0xd],0x57
  413c42:	out    dx,eax
  413c43:	push   esp
  413c44:	stos   DWORD PTR es:[edi],eax
  413c45:	add    eax,0x51a52838
  413c4a:	or     eax,0xa12aa70f
  413c4f:	and    al,0xd1
  413c51:	dec    edi
  413c52:	scas   eax,DWORD PTR es:[edi]
  413c53:	(bad)  
  413c54:	xor    eax,0x4af13d2
  413c59:	cmp    eax,0x1caf3cc
  413c5e:	std    
  413c5f:	cld    
  413c60:	xor    ch,ch
  413c62:	imul   edi,edx,0x72
  413c65:	and    BYTE PTR ds:0xc5a26fb4,dh
  413c6b:	dec    ebp
  413c6c:	shl    BYTE PTR [ecx+0x31],cl
  413c6f:	dec    eax
  413c70:	stos   BYTE PTR es:[edi],al
  413c71:	mov    ah,0xcc
  413c73:	sub    BYTE PTR [ecx+0x6],ch
  413c76:	cmp    al,0xf7
  413c78:	fnstcw WORD PTR [edx-0x1d]
  413c7b:	cmp    eax,0x9f7095db
  413c80:	cmp    BYTE PTR [edi-0x25aaccac],dl
  413c86:	push   ds
  413c87:	xchg   ebp,eax
  413c88:	dec    ebp
  413c89:	jae    0x413ce8
  413c8b:	add    ah,BYTE PTR [ebx+ecx*4-0x2b]
  413c8f:	nop
  413c90:	inc    edi
  413c91:	jmp    0x98891c77
  413c96:	jl     0x413c3e
  413c98:	pop    edx
  413c99:	push   ebx
  413c9a:	ja     0x413ce1
  413c9c:	dec    ecx
  413c9d:	xor    DWORD PTR [ecx-0x3543f2b7],eax
  413ca3:	xchg   esi,eax
  413ca4:	xchg   ebx,eax
  413ca5:	ins    BYTE PTR es:[edi],dx
  413ca6:	pop    ds
  413ca7:	xchg   ecx,eax
  413ca8:	inc    esp
  413ca9:	pop    ds
  413caa:	dec    esp
  413cab:	add    edx,DWORD PTR [eax]
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	sbb    DWORD PTR [ebp+0x3289aae7],esi
  413d04:	sbb    BYTE PTR [eax],bl
  413d06:	stos   BYTE PTR es:[edi],al
  413d07:	adc    bl,BYTE PTR [eax]
  413d09:	sbb    al,al
  413d0b:	jno    0x413d62
  413d0d:	sub    DWORD PTR [ebp-0x54],eax
  413d10:	xchg   DWORD PTR [edx+0x36],esp
  413d13:	mov    edx,0x7ad85923
  413d18:	popa   
  413d19:	xchg   edx,eax
  413d1a:	inc    edi
  413d1b:	mov    ch,0x60
  413d1d:	dec    esi
  413d1e:	retf   0xa68
  413d21:	mov    edx,0xf683cb50
  413d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d27:	fidiv  DWORD PTR [ebx+0x4181c0b7]
  413d2d:	mov    esi,0xf70c0b32
  413d32:	shl    BYTE PTR [eax],0xcd
  413d35:	call   0x41bebe8e
  413d3a:	xor    esi,0x6f
  413d3d:	or     DWORD PTR [ebx-0x6e707dcf],ebx
  413d43:	xor    ch,BYTE PTR [edx-0x5c]
  413d46:	sub    DWORD PTR [ecx+0x38],esp
  413d49:	out    dx,al
  413d4a:	jae    0x413d3c
  413d4c:	sahf   
  413d4d:	call   FWORD PTR [edx]
  413d4f:	add    DWORD PTR [ecx+esi*1-0x17f5c08e],0x9f02189
  413d5a:	je     0x413d86
  413d5c:	xchg   ebp,eax
  413d5d:	jle    0x413dd9
  413d5f:	into   
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	mov    ds:0x9a8449a9,eax
  413d66:	pop    esi
  413d67:	lock push eax
  413d69:	out    dx,eax
  413d6a:	or     al,BYTE PTR [ecx]
  413d6c:	sbb    DWORD PTR [edi+edi*1],esi
  413d6f:	outs   dx,BYTE PTR ds:[esi]
  413d70:	jne    0x413d37
  413d72:	loope  0x413d4f
  413d74:	mov    eax,0xd5e5719
  413d79:	jmp    0xdb0cd173
  413d7e:	and    ch,BYTE PTR [esp+ebp*2]
  413d81:	and    esp,ebp
  413d83:	popf   
  413d84:	push   0x83e2c0ee
  413d89:	(bad)  
  413d8a:	xor    ch,bh
  413d8c:	and    eax,0x6d54ec12
  413d91:	(bad)  
  413d92:	in     al,dx
  413d93:	push   ss
  413d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d95:	mov    dl,0xb9
  413d97:	adc    eax,0xb12d5658
  413d9c:	push   ds
  413d9d:	test   ebx,ecx
  413d9f:	call   0x16ffb1b4
  413da4:	gs cli 
  413da6:	rcr    DWORD PTR [esi-0x2348bdeb],0x57
  413dad:	cmp    eax,0x4ab199cb
  413db2:	or     ebx,DWORD PTR [esi+0x3f]
  413db5:	add    bl,ch
  413db7:	adc    al,0xe
  413db9:	adc    al,0xa5
  413dbb:	cld    
  413dbc:	inc    ebx
  413dbd:	fistp  DWORD PTR ds:0x11f5455
  413dc3:	loopne 0x413e31
  413dc5:	dec    ecx
  413dc6:	cmp    bh,BYTE PTR [edi]
  413dc8:	int    0x3e
  413dca:	cld    
  413dcb:	fwait
  413dcc:	or     BYTE PTR [ebp-0x28f1fbc2],dh
  413dd2:	stos   DWORD PTR es:[edi],eax
  413dd3:	xor    ebx,esp
  413dd5:	outs   dx,BYTE PTR ds:[esi]
  413dd6:	(bad)  
  413dd7:	test   eax,0x64ba079c
  413ddc:	out    0x7a,eax
  413dde:	out    0x9,al
  413de0:	add    al,BYTE PTR [esi]
  413de2:	ins    DWORD PTR es:[edi],dx
  413de3:	arpl   WORD PTR [esi-0x102739],bp
  413de9:	inc    ecx
  413dea:	in     eax,0x9e
  413dec:	shl    BYTE PTR ds:0x86ba54f4,cl
  413df2:	xor    DWORD PTR [ebx+0x3b],ebx
  413df5:	aad    0xea
  413df7:	mov    al,ds:0x37871604
  413dfc:	cmp    BYTE PTR [eax],bl
  413dfe:	daa    
  413dff:	aaa    
  413e00:	inc    esp
  413e01:	push   edi
  413e02:	les    edi,FWORD PTR [eax+0x19e31c02]
  413e08:	dec    ecx
  413e09:	xchg   esp,eax
  413e0a:	sub    eax,0x88975900
  413e0f:	stos   DWORD PTR es:[edi],eax
  413e10:	mov    ebp,0x12b5a61a
  413e15:	mov    cl,0x76
  413e17:	dec    edx
  413e18:	inc    esp
  413e19:	dec    ebp
  413e1a:	mov    bl,0x4a
  413e1c:	clc    
  413e1d:	mov    al,ds:0xf8f8a78c
  413e22:	popf   
  413e23:	cmp    dh,bl
  413e25:	pop    ebp
  413e26:	dec    edi
  413e27:	in     al,0xc2
  413e29:	xchg   DWORD PTR [ebp+0x2a0f7b90],esp
  413e2f:	dec    edx
  413e30:	mov    bh,0xa0
  413e32:	aaa    
  413e33:	shr    bh,0x69
  413e36:	out    dx,al
  413e37:	jge    0x413e29
  413e39:	xchg   edx,eax
  413e3a:	std    
  413e3b:	cdq    
  413e3c:	xor    DWORD PTR [ecx],0xce3d8944
  413e42:	fdiv   st,st(4)
  413e44:	popf   
  413e45:	mul    DWORD PTR [ecx+0x23190bac]
  413e4b:	leave  
  413e4c:	mov    gs,ebx
  413e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e4f:	push   0xf8e6fca6
  413e54:	inc    edx
  413e55:	or     dh,bl
  413e57:	or     al,0x8c
  413e59:	or     eax,0x68ebe572
  413e5e:	pop    ecx
  413e5f:	cmp    BYTE PTR [eax+esi*4],0x5c
  413e63:	(bad)  
  413e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e65:	jae    0x413e87
  413e67:	jecxz  0x413ec6
  413e69:	cwde   
  413e6a:	iret   
  413e6b:	hlt    
  413e6c:	test   BYTE PTR [ebp-0x3d],ah
  413e6f:	(bad)  
  413e70:	inc    edi
  413e71:	add    bh,BYTE PTR [ecx]
  413e73:	shl    DWORD PTR [esi+ebx*4],1
  413e76:	in     eax,dx
  413e77:	repz fcomip st,st(6)
  413e7a:	dec    esp
  413e7b:	loop   0x413e84
  413e7d:	cmc    
  413e7e:	push   ss
  413e7f:	add    DWORD PTR [edi],ebx
  413e81:	mov    ds:0x6923e4f4,eax
  413e86:	mov    eax,ds:0xbcb1493b
  413e8b:	push   ebx
  413e8c:	mul    DWORD PTR [edi]
  413e8e:	cwde   
  413e8f:	je     0x413e24
  413e91:	addr16 push ebp
  413e93:	adc    DWORD PTR [esi],edi
  413e95:	jmp    0x7628:0xad287042
  413e9c:	adc    DWORD PTR [edx+0x59b65e57],ecx
  413ea2:	sub    eax,0x2cc8ab77
  413ea7:	mov    DWORD PTR [ebx],eax
  413ea9:	pop    edx
  413eaa:	dec    esp
  413eab:	outs   dx,BYTE PTR ss:[esi]
  413ead:	xor    ch,BYTE PTR [ebp+0x97786b2]
  413eb3:	xchg   edx,eax
  413eb4:	iret   
  413eb5:	push   ebx
  413eb6:	in     eax,dx
  413eb7:	mov    al,0xf
  413eb9:	push   esp
  413eba:	cmp    cl,BYTE PTR [edx]
  413ebc:	loop   0x413e88
  413ebe:	cmp    al,0xcc
  413ec0:	ja     0x413ece
  413ec2:	add    cl,bh
  413ec4:	jecxz  0x413e47
  413ec6:	mov    dl,0x28
  413ec8:	stos   DWORD PTR es:[edi],eax
  413ec9:	call   0x1c3639c0
  413ece:	xor    BYTE PTR [edx+0x6],0xeb
  413ed2:	xchg   BYTE PTR ds:0xfbb14ddc,dl
  413ed8:	push   eax
  413ed9:	int    0xfe
  413edb:	mov    cl,al
  413edd:	adc    al,0x7c
  413edf:	std    
  413ee0:	cmp    dh,BYTE PTR [ebp+0x7b49e217]
  413ee6:	jno    0x413f27
  413ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee9:	adc    ah,bh
  413eeb:	mov    al,BYTE PTR [edi]
  413eed:	mov    cl,0x46
  413eef:	popa   
  413ef0:	jo     0x413f54
  413ef2:	lods   al,BYTE PTR ds:[esi]
  413ef3:	pop    edx
  413ef4:	bound  ebx,QWORD PTR [ebx-0x34]
  413ef7:	and    eax,0x2e67026f
  413efc:	pop    esi
  413efd:	popf   
  413efe:	(bad)  
  413eff:	fdiv   QWORD PTR [eax-0x1c8c9ba]
  413f05:	push   0x5b
  413f07:	pop    ss
  413f08:	and    ah,dl
  413f0a:	mov    ah,0xd4
  413f0c:	dec    edx
  413f0d:	jmp    0x248ff0b0
  413f12:	int3   
  413f13:	loop   0x413f59
  413f15:	cs pusha 
  413f17:	jb     0x413f05
  413f19:	adc    DWORD PTR [esi],ebp
  413f1b:	popf   
  413f1c:	push   esp
  413f1d:	(bad)  
  413f1e:	jns    0x413ea8
  413f20:	xchg   edi,eax
  413f21:	xchg   ebp,eax
  413f22:	mov    esi,DWORD PTR [eax]
  413f24:	push   eax
  413f25:	das    
  413f26:	adc    cl,bl
  413f28:	mov    ds:0x9c515586,ax
  413f2e:	vpsadbw ymm5,ymm1,YMMWORD PTR [eax-0x5b]
  413f33:	xchg   ebp,eax
  413f34:	scas   al,BYTE PTR es:[edi]
  413f35:	pop    ebx
  413f36:	outs   dx,DWORD PTR ds:[esi]
  413f37:	add    dh,BYTE PTR [ecx+ebp*1-0xa71daee]
  413f3e:	test   DWORD PTR [eax-0x6bcb4d62],eax
  413f44:	add    al,bh
  413f46:	and    DWORD PTR [esp+eiz*8],ebp
  413f49:	inc    ecx
  413f4a:	xchg   ecx,eax
  413f4b:	pushf  
  413f4c:	pop    edx
  413f4d:	aaa    
  413f4e:	lds    eax,FWORD PTR [eax+0x0]
  413f51:	mov    ?,WORD PTR [edx-0x79]
  413f54:	add    BYTE PTR [edx],0x29
  413f57:	ja     0x413f07
  413f59:	cli    
  413f5a:	mov    ecx,0x12fbb00
  413f5f:	(bad)  
  413f60:	out    0x3c,eax
  413f62:	mov    edi,0xbd338f91
  413f67:	mov    al,0xbd
  413f69:	stc    
  413f6a:	jecxz  0x413fe9
  413f6c:	ret    0x29aa
  413f6f:	cs out 0x11,al
  413f72:	pop    es
  413f73:	inc    ecx
  413f74:	cmp    ecx,0x11f1c83d
  413f7a:	cmp    ch,bh
  413f7c:	mov    eax,ds:0x10f7f2ff
  413f81:	dec    edi
  413f82:	mov    edx,0xd3915694
  413f87:	inc    edi
  413f88:	pop    edx
  413f89:	push   es
  413f8a:	xor    DWORD PTR [eax-0x44],eax
  413f8d:	ss shr eax,1
  413f90:	or     DWORD PTR [esi+0x5459ee3e],ecx
  413f96:	and    al,0xf4
  413f98:	jle    0x413f80
  413f9a:	xor    eax,0x196014d7
  413f9f:	push   bx
  413fa1:	(bad)  
  413fa2:	mov    bl,0xe3
  413fa4:	dec    edx
  413fa5:	ja     0x413f74
  413fa7:	pop    ds
  413fa8:	in     al,0xb8
  413faa:	inc    ebp
  413fab:	dec    ebp
  413fac:	adc    DWORD PTR [edx+0x605a3c9a],edi
  413fb2:	dec    edi
  413fb3:	gs inc esp
  413fb5:	inc    esp
  413fb6:	in     eax,dx
  413fb7:	imul   ecx,DWORD PTR [edx],0x68
  413fba:	add    ch,al
  413fbc:	push   ss
  413fbd:	xchg   ecx,eax
  413fbe:	loope  0x413fc9
  413fc0:	mov    es,WORD PTR ds:0xc333add0
  413fc6:	ins    BYTE PTR es:[edi],dx
  413fc7:	cld    
  413fc8:	inc    edi
  413fc9:	jns    0x413f52
  413fcb:	rol    BYTE PTR [edi+0x71],cl
  413fce:	mov    edx,0x73e405ef
  413fd3:	(bad)  
  413fd4:	in     eax,dx
  413fd5:	xor    DWORD PTR [ebx+0x67],ecx
  413fd8:	push   ebx
  413fd9:	jno    0x41404e
  413fdb:	xchg   ecx,eax
  413fdc:	aaa    
  413fdd:	daa    
  413fde:	fdiv   DWORD PTR [edi+0x29]
  413fe1:	mov    ebp,0x73f0d001
  413fe6:	retf   
  413fe7:	jmp    0xd1660ffc
  413fec:	ins    BYTE PTR es:[edi],dx
  413fed:	mov    fs,WORD PTR [ebp-0x4b342919]
  413ff3:	jmp    0x413fb1
  413ff5:	test   edi,ebp
  413ff7:	push   edx
  413ff8:	mov    BYTE PTR [ecx+ebx*1],al
  413ffb:	in     al,0x98
  413ffd:	or     bl,bh
  413fff:	rcl    BYTE PTR [edx],1
  414001:	add    DWORD PTR [ebx-0x7b],edx
  414004:	pusha  
  414005:	loopne 0x41401f
  414007:	adc    ecx,DWORD PTR [ebp-0x44]
  41400a:	test   DWORD PTR [ebx-0x60da4cac],edi
  414010:	adc    DWORD PTR [esi-0x78],ebx
  414013:	and    edx,ecx
  414015:	xor    BYTE PTR [ebp+edx*4+0x525c230a],0x2b
  41401d:	sbb    BYTE PTR [edi],dh
  41401f:	pop    eax
  414020:	mov    DWORD PTR [esi],eax
  414022:	pop    esi
  414023:	mov    al,BYTE PTR [eax-0x79]
  414026:	jno    0x414027
  414028:	lea    ebx,[ecx]
  41402a:	adc    eax,0xb2eadb0a
  41402f:	or     edx,ecx
  414031:	xlat   BYTE PTR ds:[ebx]
  414032:	adc    DWORD PTR [eax],0x4059875f
  414038:	pusha  
  414039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41403a:	dec    ebp
  41403b:	mov    ds:0x7cc9f40e,al
  414040:	jne    0x414081
  414042:	mov    ch,0x34
  414044:	jns    0x41405b
  414046:	mov    dh,0x58
  414048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414049:	jp     0x41401b
  41404b:	inc    ecx
  41404c:	inc    esp
  41404d:	fs pop esp
  41404f:	dec    eax
  414050:	mov    edx,0xaa5dedb5
  414055:	mov    bl,0xc2
  414057:	adc    DWORD PTR ds:0x925f53e1,ebp
  41405d:	and    BYTE PTR [edx-0x7c],cl
  414060:	jg     0x4140c4
  414062:	out    dx,eax
  414063:	retf   0x1223
  414066:	sub    bl,cl
  414068:	sti    
  414069:	stos   BYTE PTR es:[edi],al
  41406a:	ins    DWORD PTR es:[edi],dx
  41406b:	dec    edi
  41406c:	cli    
  41406d:	je     0x4140ee
  41406f:	inc    edx
  414070:	aas    
  414071:	mov    bh,0x3d
  414073:	push   ss
  414074:	out    dx,al
  414075:	mov    ds:0x9adf6dd8,al
  41407a:	std    
  41407b:	gs xchg ebp,eax
  41407d:	rep outs dx,BYTE PTR ds:[esi]
  41407f:	fcom   QWORD PTR [esi-0x2d]
  414082:	fdivr  DWORD PTR [edi-0x6638085e]
  414088:	ss leave 
  41408a:	int3   
  41408b:	pop    esp
  41408c:	inc    ebx
  41408d:	ja     0x4140fa
  41408f:	repz xor al,0x6f
  414092:	out    0xa4,al
  414094:	rcr    ah,cl
  414096:	jb     0x414077
  414098:	in     al,dx
  414099:	(bad)  
  41409a:	sbb    eax,0xc7b6463
  41409f:	loope  0x4140a7
  4140a1:	pop    es
  4140a2:	and    dl,BYTE PTR [ecx]
  4140a4:	mov    ch,0x81
  4140a6:	add    DWORD PTR [edi],ebx
  4140a8:	dec    esp
  4140a9:	dec    ebp
  4140aa:	inc    ebp
  4140ab:	fsubr  st,st(3)
  4140ad:	ror    BYTE PTR [eax-0x59441e6],1
  4140b3:	and    DWORD PTR [eax],ebp
  4140b5:	jp     0x414045
  4140b7:	lods   al,BYTE PTR gs:[esi]
  4140b9:	rol    BYTE PTR [edx+0x42c8fdb3],0xd7
  4140c0:	xchg   BYTE PTR [ebx-0x5e],dl
  4140c3:	das    
  4140c4:	dec    esp
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x422078
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ebp+esi*4-0x4b]
  414159:	lea    esi,[eax+0x1a]
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [edi+0x6d],cl
  414165:	(bad)  [esi]
  414167:	repz cmp al,0xf9
  41416a:	mov    ah,0x62
  41416c:	loope  0x414110
  41416e:	add    ah,BYTE PTR [edi+0xc]
  414171:	shr    DWORD PTR [edx-0x42],0x3b
  414175:	rol    DWORD PTR [edx+0x73751ffb],cl
  41417b:	push   esp
  41417c:	daa    
  41417d:	ss in  eax,dx
  41417f:	popa   
  414180:	repz xor DWORD PTR [esi],edi
  414183:	fwait
  414184:	inc    ebx
  414185:	cli    
  414186:	mov    ch,0x46
  414188:	pop    esi
  414189:	xchg   ebp,eax
  41418a:	jb     0x4141a9
  41418c:	inc    edx
  41418d:	out    0xff,al
  41418f:	stos   DWORD PTR es:[edi],eax
  414190:	mov    bl,0xc6
  414192:	dec    ecx
  414193:	jp     0x4141d5
  414195:	icebp  
  414196:	xchg   ebp,eax
  414197:	and    eax,0xe4f09e0a
  41419c:	pop    edi
  41419d:	pushf  
  41419e:	js     0x41412e
  4141a0:	mov    esi,0xfe2450e4
  4141a5:	retf   0xe731
  4141a8:	lods   al,BYTE PTR ds:[esi]
  4141a9:	stos   BYTE PTR es:[edi],al
  4141aa:	cmp    cl,BYTE PTR [edx-0x6d193ea1]
  4141b0:	shr    eax,cl
  4141b2:	xchg   edx,eax
  4141b3:	mov    ecx,0xd3449b6e
  4141b8:	inc    esp
  4141b9:	js     0x414220
  4141bb:	js     0x414171
  4141bd:	scas   al,BYTE PTR es:[edi]
  4141be:	arpl   WORD PTR ds:0xf7a977a8,ax
  4141c4:	test   edx,0xc98ff0ff
  4141ca:	loope  0x4141b3
  4141cc:	popf   
  4141cd:	lahf   
  4141ce:	in     al,dx
  4141cf:	leave  
  4141d0:	call   DWORD PTR [ebx-0x173616d]
  4141d6:	lea    ebp,[ecx-0xd]
  4141d9:	add    DWORD PTR [eax-0x761b11f7],ebx
  4141df:	mov    ah,0x47
  4141e1:	loopne 0x4141df
  4141e3:	call   DWORD PTR [esi+ebp*8+0xd2bba47]
  4141ea:	jecxz  0x41426a
  4141ec:	jge    0x4141a9
  4141ee:	repz inc eax
  4141f0:	xor    DWORD PTR ds:0x8e137f9b,ecx
  4141f6:	lock ret 0x7cb2
  4141fa:	xchg   esi,eax
  4141fb:	mov    ebp,0xb8be94e0
  414200:	adc    BYTE PTR [edi-0x69],cl
  414203:	shl    bl,cl
  414205:	jb     0x414226
  414207:	clc    
  414208:	sbb    DWORD PTR [edx-0x63],ebp
  41420b:	mov    ch,BYTE PTR [edx-0x43dc75e1]
  414211:	repnz ds (bad) 
  414214:	dec    ebx
  414215:	cmp    DWORD PTR [eax+esi*1+0x327f259f],0x20
  41421d:	jp     0x414294
  41421f:	cs retf 0xe61
  414223:	xor    eax,0x7cf732f8
  414228:	(bad)
  41422b:	gs enter 0x6256,0xae
  414230:	and    dh,ch
  414232:	mov    DWORD PTR ds:0x67e3d3cc,esp
  414238:	or     ebp,DWORD PTR [eax+0x42]
  41423b:	gs dec esp
  41423d:	retf   
  41423e:	jecxz  0x41423a
  414240:	out    dx,eax
  414241:	in     al,dx
  414242:	fcomp  QWORD PTR [esp+ebx*1]
  414245:	or     bl,cl
  414247:	inc    ebx
  414248:	cmp    edi,DWORD PTR [ebx-0x75]
  41424b:	push   eax
  41424c:	cwde   
  41424d:	dec    edi
  41424e:	sbb    al,0x17
  414250:	mov    ecx,0xdafe76f1
  414255:	cmp    bl,ah
  414257:	outs   dx,BYTE PTR ds:[esi]
  414258:	scas   eax,DWORD PTR es:[edi]
  414259:	jl     0x41421c
  41425b:	cld    
  41425c:	dec    ebp
  41425d:	mov    ebp,0x118c6d9
  414262:	push   esi
  414263:	add    eax,edx
  414265:	pop    es
  414266:	bound  esp,QWORD PTR ds:0x6e14f3fc
  41426c:	xchg   esp,eax
  41426d:	pop    eax
  41426e:	fld    st(0)
  414270:	dec    ebx
  414271:	xchg   esi,eax
  414272:	je     0x414246
  414274:	mov    ds:0x7672a22d,eax
  414279:	hlt    
  41427a:	fild   WORD PTR [edi]
  41427c:	aam    0xe2
  41427e:	or     DWORD PTR [ecx-0x6daf115f],0xe5d09136
  414288:	mov    WORD PTR [eax-0x6386cfa],es
  41428e:	ins    DWORD PTR es:[edi],dx
  41428f:	sub    ecx,DWORD PTR [ecx-0xcfcd931]
  414295:	sahf   
  414296:	inc    eax
  414297:	ret    
  414298:	adc    dh,BYTE PTR [edi+0x14]
  41429b:	popa   
  41429c:	xchg   esp,eax
  41429d:	call   0x8bf8a532
  4142a2:	push   es
  4142a3:	clc    
  4142a4:	shl    eax,1
  4142a6:	mov    BYTE PTR [eax+0x782a053a],dl
  4142ac:	test   DWORD PTR [edi],0x710c819
  4142b2:	cli    
  4142b3:	inc    ebp
  4142b4:	push   es
  4142b5:	hlt    
  4142b6:	imul   ebp,DWORD PTR [eax-0x12960226],0xa3176da
  4142c0:	sub    cl,dh
  4142c2:	push   esi
  4142c3:	in     al,0x56
  4142c5:	dec    ebx
  4142c6:	and    eax,0xf2b18e6
  4142cb:	inc    eax
  4142cc:	xor    al,0xce
  4142ce:	xchg   esp,eax
  4142cf:	mov    esi,0xc3f46177
  4142d4:	jl     0x41434d
  4142d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d7:	adc    ebp,DWORD PTR [esi-0x7374f28]
  4142dd:	aas    
  4142de:	mov    ch,0x1e
  4142e0:	cmp    ah,BYTE PTR [ecx+0x14]
  4142e3:	stc    
  4142e4:	jb     0x414362
  4142e6:	sahf   
  4142e7:	and    eax,0xd9a960ab
  4142ec:	and    eax,0xb7bb8e61
  4142f1:	sbb    al,BYTE PTR [ecx-0x27040ae7]
  4142f7:	jl     0x414332
  4142f9:	mov    edx,0xe3d7b6f3
  4142fe:	fbstp  TBYTE PTR [ebx+0x56]
  414301:	pushf  
  414302:	pop    ecx
  414303:	or     ebp,ebp
  414305:	pop    ebp
  414306:	imul   edi,DWORD PTR [edi+ebp*8],0x7e
  41430a:	xor    eax,0xed4fa9bc
  41430f:	rcr    BYTE PTR [edx-0x10],1
  414312:	jmp    0x4142a8
  414314:	or     al,0xbd
  414316:	(bad)  [esi]
  414318:	in     al,0x8d
  41431a:	mov    edi,0xeb6db20c
  41431f:	mov    ch,0x36
  414321:	cmp    edx,DWORD PTR [esi]
  414323:	enter  0x369e,0xdc
  414327:	imul   ebp,DWORD PTR [edx+0x3e],0xfffffff0
  41432b:	xchg   DWORD PTR [esi-0x49],ebp
  41432e:	stos   DWORD PTR es:[edi],eax
  41432f:	pop    edi
  414330:	jo     0x41435d
  414332:	adc    BYTE PTR [ebp+0x2f170fa4],0xe8
  414339:	adc    BYTE PTR [ebp+edi*1+0x50],ch
  41433d:	aas    
  41433e:	test   al,0x91
  414340:	mov    ecx,0x7b9d61e8
  414345:	out    0x92,al
  414347:	fcmovnb st,st(6)
  414349:	dec    ebx
  41434a:	jge    0x414300
  41434c:	cld    
  41434d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434e:	mov    al,0x8c
  414350:	push   0x5
  414352:	or     BYTE PTR [ebx+0x3df7da07],cl
  414358:	adc    al,0x5f
  41435a:	(bad)  
  41435b:	loopne 0x414337
  41435d:	dec    edx
  41435e:	cmp    al,0x2e
  414360:	mov    ah,0x72
  414362:	adc    DWORD PTR [edi-0xf6750d4],0xffffffac
  414369:	bound  ebp,QWORD PTR [esi-0x35454e15]
  41436f:	fcomip st,st(2)
  414371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414372:	jb     0x41433f
  414374:	jecxz  0x4142f9
  414376:	mov    dh,0x76
  414378:	inc    esi
  414379:	cwde   
  41437a:	xor    BYTE PTR [ecx-0x13],al
  41437d:	mov    dh,0x57
  41437f:	sub    al,0x93
  414381:	out    dx,al
  414382:	pop    ebp
  414383:	pop    ecx
  414384:	(bad)  
  414385:	xlat   BYTE PTR ds:[ebx]
  414386:	pop    ebp
  414387:	xor    ebp,eax
  414389:	jno    0x4143b0
  41438b:	mov    dh,0x5c
  41438d:	pop    ds
  41438e:	pop    ebx
  41438f:	mov    ebp,0xb4b43e33
  414394:	and    BYTE PTR [edi-0x554da569],dh
  41439a:	sti    
  41439b:	pop    ss
  41439c:	shr    BYTE PTR [ebx+0x4dd75de4],1
  4143a2:	(bad)  
  4143a3:	mov    bl,0xb7
  4143a5:	and    eax,0x59aaca50
  4143aa:	in     eax,dx
  4143ab:	cld    
  4143ac:	fcmovnu st,st(5)
  4143ae:	inc    ebx
  4143af:	loope  0x414366
  4143b1:	lods   eax,DWORD PTR ds:[esi]
  4143b2:	mov    cl,0x5c
  4143b4:	test   al,0x6f
  4143b6:	jae    0x41433a
  4143b8:	repz pusha 
  4143ba:	les    edi,FWORD PTR [esi]
  4143bc:	sbb    eax,0xc294185b
  4143c1:	fistp  DWORD PTR [ecx+0x38]
  4143c4:	rcr    BYTE PTR [ebp-0x24],1
  4143c7:	jo     0x414397
  4143c9:	mov    DWORD PTR [ecx-0x1c],ebp
  4143cc:	jns    0x4143de
  4143ce:	xor    al,0x54
  4143d0:	cs mov cl,0xe0
  4143d3:	push   ds
  4143d4:	aas    
  4143d5:	cdq    
  4143d6:	jge    0x414411
  4143d8:	sub    al,0x67
  4143da:	mov    ds:0x47e7c992,eax
  4143df:	xor    DWORD PTR [esi+0x23278952],eax
  4143e5:	push   esp
  4143e6:	leave  
  4143e7:	(bad)  
  4143e8:	ds sti 
  4143ea:	(bad)  
  4143eb:	mov    esp,0x1f906df8
  4143f0:	sbb    DWORD PTR [ebp+0x7e],edi
  4143f3:	and    ah,bl
  4143f5:	int3   
  4143f6:	mov    esi,0x944b7d36
  4143fb:	cs in  al,0x16
  4143fe:	icebp  
  4143ff:	add    al,0x41
  414401:	and    DWORD PTR [ebx+0x748d12d0],esi
  414407:	int    0x45
  414409:	lock arpl bx,ax
  41440c:	cmp    DWORD PTR [ebx-0x38],edx
  41440f:	push   cs
  414410:	adc    DWORD PTR [esi],esi
  414412:	mov    ecx,0xd1c43627
  414417:	data16 sahf 
  414419:	shl    DWORD PTR [esp+esi*2],cl
  41441c:	jno    0x41439f
  41441e:	mov    ch,0x9c
  414420:	mov    edx,0x6a4ab14
  414425:	mov    WORD PTR [eax-0x7d5611c7],gs
  41442b:	lock or DWORD PTR ds:0x68e66e1a,edx
  414432:	mov    ebx,0x28320e67
  414437:	mov    WORD PTR [esi-0x75],cs
  41443a:	fs jns 0x414432
  41443d:	add    al,0x61
  41443f:	push   edi
  414440:	inc    eax
  414441:	stos   DWORD PTR es:[edi],eax
  414442:	in     al,dx
  414443:	add    BYTE PTR [eax+0x7f],cl
  414446:	lock jnp 0x41444d
  414449:	pop    ebx
  41444a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41444b:	mov    al,0xe8
  41444d:	xlat   BYTE PTR ds:[ebx]
  41444e:	(bad)
  414451:	and    cl,al
  414453:	popf   
  414454:	lods   al,BYTE PTR ds:[esi]
  414455:	fwait
  414456:	call   0x776851bd
  41445b:	or     DWORD PTR [edx-0x2e],esp
  41445e:	call   FWORD PTR [edx-0x3f398267]
  414464:	setle  BYTE PTR [ecx]
  414467:	cmp    bl,ah
  414469:	pop    ebp
  41446a:	test   BYTE PTR [edx],bh
  41446c:	in     al,0x1f
  41446e:	sbb    esi,0x3c
  414471:	pop    esp
  414472:	dec    ebp
  414473:	push   esi
  414474:	frstor [edi+eiz*1]
  414477:	sbb    eax,ecx
  414479:	mov    ebp,0x7a1eb408
  41447e:	add    ah,BYTE PTR [edx-0x16]
  414481:	jno    0x4144f8
  414483:	pusha  
  414484:	inc    edi
  414485:	(bad)  
  414487:	imul   esp,DWORD PTR [esi],0xe86bbf2c
  41448d:	fnstcw WORD PTR [ebx+edi*4]
  414490:	push   ds
  414491:	jl     0x4144cd
  414493:	add    al,0x6a
  414495:	ss mov dl,0x0
  414498:	sbb    al,ch
  41449a:	rcr    DWORD PTR [edx],1
  41449c:	mov    esp,0x14b8e91e
  4144a1:	neg    BYTE PTR [eax-0x1b3cac42]
  4144a7:	sub    BYTE PTR ds:0x1b090317,bh
  4144ad:	int3   
  4144ae:	shl    cl,1
  4144b0:	inc    esi
  4144b1:	lods   eax,DWORD PTR ds:[esi]
  4144b2:	(bad)  
  4144b3:	stc    
  4144b4:	dec    eax
  4144b5:	mov    bl,0x67
  4144b7:	pop    ss
  4144b8:	sub    eax,0xa91b1723
  4144bd:	jp     0x4144a0
  4144bf:	int3   
  4144c0:	cmp    cl,BYTE PTR [edx-0x38]
  4144c3:	sub    eax,DWORD PTR [edx+0x4fec0b55]
  4144c9:	mov    DWORD PTR ds:0x69b6a94c,edi
  4144cf:	test   al,0x9d
  4144d1:	aas    
  4144d2:	xchg   ebx,eax
  4144d3:	mov    al,0x6e
  4144d5:	jge    0x414519
  4144d7:	into   
  4144d8:	xchg   esi,eax
  4144d9:	out    dx,eax
  4144da:	add    al,0xfd
  4144dc:	fsub   DWORD PTR [eax]
  4144de:	out    dx,eax
  4144df:	das    
  4144e0:	imul   eax,DWORD PTR [ebx],0x2f
  4144e3:	push   es
  4144e4:	sub    ah,dh
  4144e6:	into   
  4144e7:	enter  0xb39b,0x4d
  4144eb:	loop   0x4144cb
  4144ed:	jmp    0x18ab9791
  4144f2:	ins    BYTE PTR es:[edi],dx
  4144f3:	sub    BYTE PTR [edx],dh
  4144f5:	imul   ebx,esi,0x64
  4144f8:	or     eax,0x1be91f28
  4144fd:	sub    ebx,esi
  4144ff:	(bad)  
  414500:	stos   BYTE PTR es:[edi],al
  414501:	cwde   
  414502:	mov    esi,0x9f74432b
  414507:	pop    eax
  414508:	bound  edi,QWORD PTR [ecx-0x2e]
  41450b:	mov    DWORD PTR [ebp-0x8],0x3204
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0xdb7c:0x73623c4c
  414595:	out    0x3d,al
  414597:	mov    esi,0x181824d2
  41459c:	rcl    BYTE PTR [edx],1
  41459e:	sbb    BYTE PTR [eax],bl
  4145a0:	js     0x4145c6
  4145a2:	mov    al,ds:0x50ae9bf6
  4145a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a8:	push   ds
  4145a9:	dec    edx
  4145aa:	xor    al,0xf6
  4145ac:	pop    ecx
  4145ad:	xchg   edx,eax
  4145ae:	xor    cl,BYTE PTR ds:0xdf156bed
  4145b4:	push   eax
  4145b5:	icebp  
  4145b6:	jp     0x414564
  4145b8:	loop   0x4145a6
  4145ba:	aas    
  4145bb:	jbe    0x41454b
  4145bd:	pop    esp
  4145be:	sbb    al,0x9d
  4145c0:	or     ebx,DWORD PTR [esi+0x33]
  4145c3:	and    ch,BYTE PTR [eax-0x41]
  4145c6:	pop    ds
  4145c7:	cmp    dh,ah
  4145c9:	stc    
  4145ca:	mov    al,ds:0x46d7cee0
  4145cf:	mov    eax,0x5a33e576
  4145d4:	loopne 0x4145e3
  4145d6:	jp     0x414637
  4145d8:	ret    
  4145d9:	xor    edi,edx
  4145db:	add    BYTE PTR [ebx+0x48],dl
  4145de:	jo     0x41458a
  4145e0:	jl     0x414623
  4145e2:	jae    0x414644
  4145e4:	dec    edi
  4145e5:	dec    esi
  4145e6:	mov    edx,0xc00269c3
  4145eb:	adc    al,0xfe
  4145ed:	mov    al,0xbe
  4145ef:	and    DWORD PTR [eax-0x326bac34],eax
  4145f5:	jecxz  0x414610
  4145f7:	std    
  4145f8:	mov    bh,dl
  4145fa:	fcom   QWORD PTR [ebp+0x44eb2863]
  414600:	retf   
  414601:	leave  
  414602:	xchg   BYTE PTR [eax],bh
  414604:	add    al,dl
  414606:	ins    BYTE PTR es:[edi],dx
  414607:	and    BYTE PTR [ebp-0x4],dh
  41460a:	push   ebx
  41460b:	(bad)  
  41460c:	call   0x3706:0x89ee40de
  414613:	div    BYTE PTR [edi+0x77ae7595]
  414619:	je     0x41460a
  41461b:	adc    ah,0xe0
  41461e:	adc    esp,esp
  414620:	scas   al,BYTE PTR es:[edi]
  414621:	test   al,0xc7
  414623:	jne    0x4145d7
  414625:	cmp    eax,0x36310046
  41462a:	sbb    dl,bh
  41462c:	jl     0x41461f
  41462e:	sahf   
  41462f:	jge    0x4145bb
  414631:	les    ebp,FWORD PTR [ebp+0x6d]
  414634:	lock push es
  414636:	clc    
  414637:	loop   0x41464e
  414639:	adc    eax,0x15dca666
  41463e:	jl     0x4145f7
  414640:	shl    DWORD PTR [esi-0x24],0xe0
  414644:	jmp    0xf20e:0x1ff8e977
  41464b:	shl    DWORD PTR [edi],0xf6
  41464e:	sbb    al,0xcd
  414650:	sbb    al,0x85
  414652:	or     al,0x50
  414654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414655:	cli    
  414656:	sbb    eax,0x1d58c1bd
  41465b:	lods   eax,DWORD PTR ds:[esi]
  41465c:	retf   
  41465d:	add    bl,BYTE PTR [ebx]
  41465f:	or     eax,DWORD PTR [edi-0x423a90e]
  414665:	dec    eax
  414666:	mov    eax,0x20bfea23
  41466b:	std    
  41466c:	shl    ah,0xe0
  41466f:	push   edi
  414670:	sbb    al,0x99
  414672:	sub    al,0xe5
  414674:	adc    eax,0xb3ec3e5d
  414679:	sub    BYTE PTR [esi],ch
  41467b:	sbb    eax,DWORD PTR [edi+0x4a]
  41467e:	inc    esi
  41467f:	mov    ch,0x1a
  414681:	sbb    DWORD PTR [esi],0x5fb65e1d
  414687:	xor    eax,0xa4e0a98e
  41468c:	jo     0x41468a
  41468e:	mov    ebx,0xbbed5205
  414693:	stos   BYTE PTR es:[edi],al
  414694:	into   
  414695:	out    0x8e,al
  414697:	and    edx,DWORD PTR [edx+ebp*2-0x545203eb]
  41469e:	(bad)  
  41469f:	cmp    eax,0x8ab8d62d
  4146a4:	or     BYTE PTR [ebx+0x2222f529],ch
  4146aa:	push   ebx
  4146ab:	xchg   BYTE PTR gs:[eax-0x7cfd1eef],bh
  4146b2:	rol    cl,cl
  4146b4:	jl     0x414671
  4146b6:	sub    eax,0x8dd22f21
  4146bb:	aas    
  4146bc:	add    BYTE PTR [ebx],ch
  4146be:	adc    edx,DWORD PTR [eax+edx*8-0x4ea18bc3]
  4146c5:	pop    esp
  4146c6:	mov    esp,0x17a8df92
  4146cb:	fwait
  4146cc:	mov    ds:0xcb56c6de,al
  4146d1:	pushf  
  4146d2:	fcomp  QWORD PTR fs:[edi]
  4146d5:	xchg   BYTE PTR [edx+esi*4+0x568453aa],dl
  4146dc:	add    ah,ch
  4146de:	in     al,0x86
  4146e0:	(bad)  [esi]
  4146e2:	ja     0x4146ab
  4146e4:	push   0xffffff8d
  4146e6:	cmp    dl,dl
  4146e8:	add    ecx,edx
  4146ea:	mov    ebp,0x16c2175f
  4146ef:	inc    esi
  4146f0:	adc    esi,DWORD PTR [edx-0x6530aaff]
  4146f6:	jl     0x4146f3
  4146f8:	mov    ecx,0x996b3fbe
  4146fd:	mov    ds,WORD PTR [ecx+0x44]
  414700:	xchg   esi,eax
  414701:	addr16 imul ebp,eax,0x31
  414705:	jbe    0x4146d8
  414707:	lods   eax,DWORD PTR ds:[esi]
  414708:	sti    
  414709:	leave  
  41470a:	sahf   
  41470b:	sbb    al,ah
  41470d:	push   es
  41470e:	dec    esp
  41470f:	pop    esp
  414710:	xlat   BYTE PTR ds:[ebx]
  414711:	hlt    
  414712:	jle    0x414708
  414714:	jle    0x414752
  414716:	jbe    0x414779
  414718:	mov    WORD PTR [edi],?
  41471a:	xchg   ebx,eax
  41471b:	push   ds
  41471c:	adc    DWORD PTR [ebx],ecx
  41471e:	xchg   ecx,eax
  41471f:	fwait
  414720:	ins    BYTE PTR es:[edi],dx
  414721:	ss push es
  414723:	xor    eax,0x380f102c
  414728:	rol    DWORD PTR [ebx+0x1f],1
  41472b:	data16 lahf 
  41472d:	stc    
  41472e:	add    BYTE PTR [edi-0x4c4ab7d8],0x2d
  414735:	lds    ebp,FWORD PTR [eax-0x1c]
  414738:	bound  eax,QWORD PTR [esi+0x4b]
  41473b:	cmp    eax,DWORD PTR ds:0x411c9ca
  414741:	lods   eax,DWORD PTR ds:[esi]
  414742:	jae    0x4146f7
  414744:	and    al,0x6b
  414746:	das    
  414747:	and    ebp,DWORD PTR [edi]
  414749:	cmp    dh,dl
  41474b:	push   0xffffff91
  41474d:	adc    cl,bl
  41474f:	das    
  414750:	pushf  
  414751:	jecxz  0x41478c
  414753:	push   es
  414754:	sub    BYTE PTR [edx+0x4e],cl
  414757:	mov    esp,0x83f3e761
  41475c:	push   esp
  41475d:	jne    0x4147da
  41475f:	push   ebx
  414760:	sbb    ecx,0xee4ef9dd
  414766:	and    eax,0x689533d7
  41476b:	mov    BYTE PTR [ebp+0x74],ch
  41476e:	jmp    0xf807:0x440c5444
  414775:	bound  eax,QWORD PTR [esi]
  414777:	xor    dh,bh
  414779:	sbb    bl,bl
  41477b:	loopne 0x414782
  41477d:	dec    ebp
  41477e:	push   ss
  41477f:	mov    dl,dh
  414781:	ja     0x414767
  414783:	or     bh,BYTE PTR [ecx-0x26]
  414786:	addr16 loopne 0x414762
  414789:	xchg   ebp,eax
  41478a:	in     eax,dx
  41478b:	(bad)  
  41478c:	frstor [edi+edi*4+0x56]
  414790:	fimul  WORD PTR fs:[eax-0x409b39a3]
  414797:	aad    0x19
  414799:	push   ebp
  41479a:	nop
  41479b:	imul   edx,DWORD PTR ds:0xd8beb9ed,0xc36ad5dd
  4147a5:	mov    eax,ds:0x489140c7
  4147aa:	das    
  4147ab:	cmp    ebp,ebp
  4147ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ae:	repz sub eax,0x6a504ea7
  4147b4:	fcmovnb st,st(5)
  4147b6:	sbb    eax,0xcf223f8
  4147bb:	and    eax,0xa49c7e40
  4147c0:	xchg   BYTE PTR [edi+0x5e65b7f8],al
  4147c6:	add    ch,al
  4147c8:	or     edx,DWORD PTR [ebx-0x4b0928f5]
  4147ce:	fcom   DWORD PTR [ecx-0x7dfd117d]
  4147d4:	nop
  4147d5:	add    al,0xf9
  4147d7:	mov    eax,0x2bcfa8a6
  4147dc:	(bad)  
  4147de:	inc    esi
  4147df:	fistp  DWORD PTR ds:0xf15550d4
  4147e5:	or     eax,0xb88812d0
  4147ea:	ja     0x414829
  4147ec:	in     eax,0x12
  4147ee:	(bad)  
  4147ef:	jmp    0xf7eed455
  4147f4:	add    ah,BYTE PTR ss:[ebx-0x3d]
  4147f8:	outs   dx,DWORD PTR ds:[esi]
  4147f9:	jl     0x414792
  4147fb:	imul   esi,DWORD PTR [ecx+edi*8+0x319408d8],0xffffffca
  414803:	adc    eax,0xac14c306
  414808:	mov    ds:0x8d501f5e,eax
  41480d:	xchg   ebp,eax
  41480e:	pop    ds
  41480f:	jmp    0x5a8d06d9
  414814:	mov    ?,WORD PTR [ebp-0x43]
  414817:	dec    esi
  414818:	sub    edi,DWORD PTR [ebp+0x75545d07]
  41481e:	pop    esi
  41481f:	(bad)  
  414820:	jmp    0xd285d2d8
  414825:	sbb    BYTE PTR [edi-0x7e],ch
  414828:	(bad)  
  414829:	sub    bh,bh
  41482b:	mov    eax,ds:0x4a604c46
  414830:	out    0x3a,eax
  414832:	pop    eax
  414833:	cs pushf 
  414835:	push   es
  414836:	cdq    
  414837:	sub    bh,BYTE PTR [eax]
  414839:	or     eax,0x5114f7ba
  41483e:	stos   DWORD PTR es:[edi],eax
  41483f:	dec    ebp
  414840:	xchg   dl,bl
  414842:	xchg   ebx,eax
  414843:	data16 sub bh,BYTE PTR [ecx]
  414846:	xchg   DWORD PTR [esi-0x44],ecx
  414849:	sbb    al,BYTE PTR [esi+esi*8+0x4]
  41484d:	mov    bh,0x2f
  41484f:	jecxz  0x4148c8
  414851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414852:	lahf   
  414853:	or     ah,BYTE PTR [ecx-0xba98bc3]
  414859:	mov    esi,0x47192b98
  41485e:	pop    ebp
  41485f:	es xchg ecx,eax
  414861:	aaa    
  414862:	fwait
  414863:	shl    ebp,1
  414865:	test   al,0x1b
  414867:	retf   0x38ef
  41486a:	loope  0x4148a8
  41486c:	jne    0x414847
  41486e:	dec    ebp
  41486f:	jmp    0x838:0x1b91b508
  414876:	and    BYTE PTR [ebx+0x29831551],0x34
  41487d:	push   ds
  41487e:	dec    eax
  41487f:	out    0x7a,al
  414881:	aam    0xd9
  414883:	cs ja  0x41489b
  414886:	idiv   DWORD PTR [edi+ecx*2+0x51b470]
  41488d:	outs   dx,BYTE PTR ds:[esi]
  41488e:	cmp    edx,DWORD PTR fs:[esi-0x152c2e20]
  414895:	mov    ds:0xcb7b9d6b,al
  41489a:	push   edx
  41489b:	inc    ebp
  41489c:	mov    ebp,0x7058c82c
  4148a1:	mov    dl,BYTE PTR [edx+0x7b]
  4148a4:	aaa    
  4148a5:	push   ds
  4148a6:	mov    eax,ds:0xca35d7fc
  4148ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ac:	sub    al,0xc8
  4148ae:	mov    esp,0xdcc5c9d1
  4148b3:	sahf   
  4148b4:	jb     0x414894
  4148b6:	mov    ah,0xb3
  4148b8:	in     al,dx
  4148b9:	pop    eax
  4148ba:	mov    dl,0xc1
  4148bc:	pop    ss
  4148bd:	and    ch,BYTE PTR [esi+0x6a2be9d8]
  4148c3:	mov    WORD PTR [esi+0x57],ss
  4148c6:	xlat   BYTE PTR ds:[ebx]
  4148c7:	gs sub al,0x7a
  4148ca:	push   0x22
  4148cc:	mov    edx,0xca0f3aac
  4148d1:	sbb    BYTE PTR [ebx-0x3a],dl
  4148d4:	call   DWORD PTR [edx-0x3af365d3]
  4148da:	lock sub ebp,DWORD PTR [ecx]
  4148dd:	dec    esi
  4148de:	dec    edx
  4148df:	js     0x414943
  4148e1:	outs   dx,DWORD PTR ds:[esi]
  4148e2:	loop   0x41493b
  4148e4:	pop    eax
  4148e5:	add    eax,0x5babf26
  4148ea:	aas    
  4148eb:	out    0x6e,al
  4148ed:	dec    edi
  4148ee:	test   DWORD PTR [esi+0x3],ebp
  4148f1:	dec    ebx
  4148f2:	adc    eax,esp
  4148f4:	push   0x3b55e350
  4148f9:	inc    edx
  4148fa:	jl     0x4148d3
  4148fc:	test   eax,edi
  4148fe:	ss sub ebp,edi
  414901:	je     0x41488b
  414903:	iret   
  414904:	pop    ss
  414905:	mov    ?,WORD PTR [eax-0x79207fc4]
  41490b:	jno    0x414974
  41490d:	or     bh,BYTE PTR [ebx+0x3a835c0b]
  414913:	nop
  414914:	rol    DWORD PTR [eax+ebp*4+0x47573ae1],1
  41491b:	or     ebp,esi
  41491d:	and    al,0xc3
  41491f:	push   ecx
  414920:	hlt    
  414921:	data16 adc al,0xf3
  414924:	add    ecx,DWORD PTR [edx+0x3]
  414927:	not    DWORD PTR [esi+0x57]
  41492a:	adc    eax,0xe5f14b55
  41492f:	(bad)  
  414930:	xchg   ecx,eax
  414931:	std    
  414932:	pop    es
  414933:	and    eax,0xe8d589ee
  414938:	xchg   edi,eax
  414939:	sar    dl,cl
  41493b:	mov    eax,ds:0x499a45d9
  414940:	sub    bh,dl
  414942:	inc    ebx
  414943:	add    dl,al
  414945:	(bad)  
  414946:	lock inc edi
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0xffffffe0
  414996:	push   ebp
  414997:	fnstsw WORD PTR [esi-0x75]
  41499a:	sbb    al,0x18
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [esi-0x10],bl
  4149a3:	sbb    edi,ecx
  4149a5:	ds fsubrp st(5),st
  4149a8:	xchg   esp,eax
  4149a9:	mov    bl,0x17
  4149ab:	add    ebp,DWORD PTR [edi-0x39]
  4149ae:	push   esi
  4149af:	rcl    bh,1
  4149b1:	iret   
  4149b2:	jb     0x4149ad
  4149b4:	xor    DWORD PTR [edx+edx*8-0x7344f142],ecx
  4149bb:	add    ebx,DWORD PTR [ebp+0x2a]
  4149be:	shl    BYTE PTR [ecx+eiz*8+0x7f],cl
  4149c2:	jecxz  0x414a38
  4149c4:	imul   esi,DWORD PTR [ebx+esi*4-0x5e],0x70fe7bc2
  4149cc:	in     al,0x67
  4149ce:	pop    ebp
  4149cf:	retf   0xcab8
  4149d2:	jae    0x414a24
  4149d4:	and    dl,bh
  4149d6:	test   al,0x4f
  4149d8:	jo     0x4149f8
  4149da:	xchg   ecx,eax
  4149db:	jb     0x4149b4
  4149dd:	push   ss
  4149de:	ins    BYTE PTR es:[edi],dx
  4149df:	add    eax,0x5725e979
  4149e4:	or     BYTE PTR [edx-0x23],bh
  4149e7:	cmp    edi,DWORD PTR [edx+0x26d44cf4]
  4149ed:	dec    esp
  4149ee:	test   eax,0x46d672df
  4149f3:	(bad)  
  4149f4:	xor    ecx,DWORD PTR [edi+0x5236ba3e]
  4149fa:	lds    ecx,FWORD PTR ds:0xa3856331
  414a00:	mov    dh,0xb4
  414a02:	inc    edx
  414a03:	(bad)  
  414a04:	mov    dh,0x7
  414a06:	popf   
  414a07:	sahf   
  414a08:	sub    edi,DWORD PTR [ecx]
  414a0a:	rcr    esi,cl
  414a0c:	out    0x1,eax
  414a0e:	adc    DWORD PTR [ebx],eax
  414a10:	retf   
  414a11:	dec    ebx
  414a12:	xor    DWORD PTR [eax+0x20],0xd3b4e577
  414a19:	ret    
  414a1a:	paddd  mm6,mm1
  414a1d:	add    bl,BYTE PTR [edi+0x75886455]
  414a23:	cmp    eax,0xc769c59b
  414a28:	sub    DWORD PTR [edx-0x70],ebp
  414a2b:	pop    edx
  414a2c:	inc    ebp
  414a2d:	fwait
  414a2e:	ret    
  414a2f:	dec    esp
  414a30:	in     al,0xb3
  414a32:	pop    esp
  414a33:	int3   
  414a34:	outs   dx,BYTE PTR ds:[esi]
  414a35:	mov    al,ds:0x2cc39d7f
  414a3a:	inc    esp
  414a3b:	fstp   DWORD PTR [ecx]
  414a3d:	call   0x1f88f6f1
  414a42:	cmp    DWORD PTR [edi+0x19],esi
  414a45:	xchg   edi,eax
  414a46:	test   DWORD PTR [edi],ecx
  414a48:	retf   0xfc9a
  414a4b:	xchg   DWORD PTR [esi+edx*1-0x68],eax
  414a4f:	bound  eax,QWORD PTR [edx+0x7b2c809]
  414a55:	push   cs
  414a56:	adc    DWORD PTR [edx],edx
  414a58:	out    dx,eax
  414a59:	xor    BYTE PTR [ebx+ecx*4+0x66a302c7],dh
  414a60:	fwait
  414a61:	int3   
  414a62:	adc    BYTE PTR [eax],ch
  414a64:	inc    esp
  414a65:	sub    eax,0x20ba8d6b
  414a6a:	imul   ecx,DWORD PTR [ebp-0x3e7ed81e],0x36
  414a71:	add    ch,BYTE PTR [edi+0xd]
  414a74:	push   ebp
  414a75:	mov    al,ds:0xb4b26b13
  414a7a:	fdivrp st(3),st
  414a7c:	pop    esp
  414a7d:	ins    DWORD PTR es:[edi],dx
  414a7e:	pop    ss
  414a7f:	push   eax
  414a80:	nop
  414a81:	and    DWORD PTR [ebp-0x6e],esp
  414a84:	daa    
  414a85:	jecxz  0x414aec
  414a87:	inc    esi
  414a88:	cmp    al,0x4a
  414a8a:	xchg   ecx,eax
  414a8b:	cli    
  414a8c:	out    0x2c,eax
  414a8e:	fs sbb eax,0xa5451287
  414a94:	add    al,0x82
  414a96:	(bad)  
  414a97:	cs (bad) 
  414a99:	cmp    al,0xf9
  414a9b:	lock inc edx
  414a9d:	inc    edx
  414a9e:	pop    edi
  414a9f:	lock push cs
  414aa1:	je     0x414b1d
  414aa3:	inc    ecx
  414aa4:	int    0x88
  414aa6:	test   eax,0x5aefdca9
  414aab:	jle    0x414a5c
  414aad:	xor    ebx,DWORD PTR [ebx+esi*8]
  414ab0:	push   edi
  414ab1:	mov    eax,ds:0xf4c96dd
  414ab6:	outs   dx,DWORD PTR ds:[esi]
  414ab7:	(bad)  
  414ab8:	cmp    eax,0xefcfc3b6
  414abd:	mov    WORD PTR [eax+0x11],es
  414ac0:	cmp    BYTE PTR [edx+0x63],bh
  414ac3:	cdq    
  414ac4:	adc    DWORD PTR [eax+0x72c8fa5a],0x2a
  414acb:	loope  0x414a94
  414acd:	sbb    BYTE PTR [ebx],cl
  414acf:	jns    0x414a7d
  414ad1:	test   al,0xda
  414ad3:	clc    
  414ad4:	cld    
  414ad5:	ror    BYTE PTR [eax],cl
  414ad7:	call   0x1fbf:0xe9d2e7d7
  414ade:	cli    
  414adf:	adc    al,0xee
  414ae1:	sar    DWORD PTR [edx+0x6c],0x16
  414ae5:	ror    BYTE PTR [esi],cl
  414ae7:	xor    al,0x59
  414ae9:	push   ecx
  414aea:	mov    ebx,0xae486f48
  414aef:	sbb    BYTE PTR [ebx+eax*2+0x31],ch
  414af3:	call   0x2b71:0x9e82eeeb
  414afa:	idiv   DWORD PTR [ebx+0x7]
  414afd:	cmp    eax,0x9a582141
  414b02:	in     eax,0xae
  414b04:	les    esi,FWORD PTR [esi-0x65]
  414b07:	fisub  DWORD PTR [edi+0x73]
  414b0a:	es gs sti 
  414b0d:	(bad)  
  414b0f:	mov    cl,0x90
  414b11:	mov    WORD PTR [ebx-0xf],?
  414b14:	jo     0x414b5f
  414b16:	jbe    0x414b19
  414b18:	dec    eax
  414b19:	xor    DWORD PTR [ebx+0x45],0x7b3a226d
  414b20:	fistp  DWORD PTR [esi]
  414b22:	add    al,0xf9
  414b24:	pop    edx
  414b25:	xchg   ebp,eax
  414b26:	mov    bl,BYTE PTR [ebp+0x59]
  414b29:	repnz cwde 
  414b2b:	inc    eax
  414b2c:	adc    eax,0x3e3919c2
  414b31:	mov    dh,0x3b
  414b33:	les    edx,FWORD PTR [edi-0x4868104f]
  414b39:	mov    ecx,0x410e1e
  414b3e:	mov    esp,0x84ac6996
  414b43:	mov    al,0x44
  414b45:	call   0xc4e2:0x66fbcb6b
  414b4c:	popa   
  414b4d:	xor    eax,0xd5e153e4
  414b52:	inc    edi
  414b53:	stos   BYTE PTR es:[edi],al
  414b54:	in     al,dx
  414b55:	les    esi,FWORD PTR [ecx]
  414b57:	test   BYTE PTR [ebp+0x9],bh
  414b5a:	call   0x7a2c:0x90f4a547
  414b61:	cmp    al,0x78
  414b63:	fldenv [ebx-0x2d]
  414b66:	pop    ds
  414b67:	adc    al,ch
  414b69:	scas   eax,DWORD PTR es:[edi]
  414b6a:	push   edx
  414b6b:	jb     0x414b99
  414b6d:	sbb    ecx,DWORD PTR [esi-0x472ede3a]
  414b73:	sbb    dh,bl
  414b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b76:	mov    edi,DWORD PTR ds:0xb3b4982
  414b7c:	pop    ebp
  414b7d:	fild   WORD PTR [eax]
  414b7f:	cmp    ebx,DWORD PTR [edx+0x7c90d7bb]
  414b85:	fisub  DWORD PTR [eax]
  414b87:	sbb    DWORD PTR [edi+0x16670a7f],edx
  414b8d:	ins    BYTE PTR es:[edi],dx
  414b8e:	out    dx,eax
  414b8f:	je     0x414b52
  414b91:	jne    0x414bb2
  414b93:	out    dx,eax
  414b94:	ret    0x4fda
  414b97:	or     esi,eax
  414b99:	mov    DWORD PTR [ebp+edi*2+0x4948d989],esp
  414ba0:	fs out dx,eax
  414ba2:	fisttp QWORD PTR [edx]
  414ba4:	dec    esp
  414ba5:	xor    ebx,DWORD PTR [ebx]
  414ba7:	out    dx,eax
  414ba8:	aaa    
  414ba9:	sbb    esp,DWORD PTR [edx]
  414bab:	stos   DWORD PTR es:[edi],eax
  414bac:	jbe    0x414ba7
  414bae:	xchg   edi,eax
  414baf:	sub    al,0x9b
  414bb1:	in     eax,0x83
  414bb3:	inc    eax
  414bb4:	mov    edi,0x6f08a294
  414bb9:	push   ebp
  414bba:	jb     0x414b80
  414bbc:	mov    ds:0x7b168f02,al
  414bc1:	icebp  
  414bc2:	loop   0x414b96
  414bc4:	adc    eax,0xbc26bedb
  414bc9:	mov    ds:0xa76e2cb9,eax
  414bce:	or     DWORD PTR [esi+esi*4+0x47],ecx
  414bd2:	jbe    0x414bd3
  414bd4:	in     al,0x6a
  414bd6:	dec    ebp
  414bd7:	push   ecx
  414bd8:	(bad)  
  414bd9:	xor    BYTE PTR [eax+eiz*2-0x42c9dc80],dh
  414be0:	pop    ss
  414be1:	mov    cl,0xd5
  414be3:	icebp  
  414be4:	in     eax,dx
  414be5:	(bad)  
  414be6:	out    dx,al
  414be7:	aas    
  414be8:	xchg   ebx,eax
  414be9:	cs sub cl,al
  414bec:	xchg   ecx,eax
  414bed:	mov    ecx,esi
  414bef:	jge    0x414c3e
  414bf1:	aaa    
  414bf2:	fld    TBYTE PTR [edi-0x2d9f6758]
  414bf8:	push   ebx
  414bf9:	pop    es
  414bfa:	jbe    0x414bd6
  414bfc:	aad    0x4d
  414bfe:	xchg   edx,eax
  414bff:	push   ds
  414c00:	mov    edx,0xb829e320
  414c05:	xor    esi,ebp
  414c07:	sbb    BYTE PTR [ebp-0xb],ah
  414c0a:	mov    edi,0x99ffda70
  414c0f:	jg     0x414c83
  414c11:	dec    ebx
  414c12:	mov    bh,BYTE PTR [edx]
  414c14:	call   0x40e0826c
  414c19:	mov    ecx,0xca22e2e5
  414c1e:	mov    BYTE PTR ds:0xd1e758ea,bl
  414c24:	mov    cl,0x78
  414c26:	ds pop edi
  414c28:	cld    
  414c29:	jmp    0xe0ac:0x582ef356
  414c30:	mov    ebp,0x338ce27a
  414c35:	outs   dx,DWORD PTR ds:[esi]
  414c36:	leave  
  414c37:	and    eax,0xef94bad7
  414c3c:	repz lea esi,[edx+ecx*4-0x34b4109d]
  414c44:	cmp    bh,BYTE PTR [edi+0x33]
  414c47:	pushf  
  414c48:	ins    DWORD PTR es:[edi],dx
  414c49:	sbb    esi,DWORD PTR [esp+ebp*2-0x2f]
  414c4d:	out    0xf9,eax
  414c4f:	pusha  
  414c50:	add    DWORD PTR [esi],ebp
  414c52:	shl    BYTE PTR ds:0x4a5bedb3,1
  414c58:	mov    ds:0xfce3e91a,eax
  414c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c5e:	and    eax,0xa3e28f62
  414c63:	adc    eax,DWORD PTR [eax+0x5e]
  414c66:	mov    BYTE PTR [ecx],ch
  414c68:	cmp    DWORD PTR [ebx-0x75],ecx
  414c6b:	or     al,0x86
  414c6d:	sbb    BYTE PTR [ecx+0x1c2a903f],al
  414c73:	mov    ah,0x75
  414c75:	stos   BYTE PTR es:[edi],al
  414c76:	cmp    esi,DWORD PTR [ebx-0x25]
  414c79:	mov    al,0x1c
  414c7b:	ins    DWORD PTR es:[edi],dx
  414c7c:	ins    BYTE PTR es:[edi],dx
  414c7d:	sti    
  414c7e:	mov    cl,cl
  414c80:	bound  ebx,QWORD PTR [edx-0x5f7695c4]
  414c86:	xchg   DWORD PTR [eax-0x1d081f68],ebp
  414c8c:	jbe    0x414c64
  414c8e:	imul   ebp,DWORD PTR [eax+ebp*4],0x7528e24f
  414c95:	jno    0x414c8f
  414c97:	adc    al,0x82
  414c99:	mov    dl,0xb7
  414c9b:	cs pop esi
  414c9d:	pop    ss
  414c9e:	ins    DWORD PTR es:[edi],dx
  414c9f:	data16 mov dl,0xac
  414ca2:	push   ss
  414ca3:	pop    ecx
  414ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ca5:	clc    
  414ca6:	out    0xb4,eax
  414ca8:	inc    ebp
  414ca9:	daa    
  414caa:	(bad)  [esi+ebx*1]
  414cad:	shl    BYTE PTR [esi-0x66362f3a],0xe0
  414cb4:	sahf   
  414cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb6:	sti    
  414cb7:	pop    esi
  414cb8:	push   ss
  414cb9:	push   ds
  414cba:	fisttp WORD PTR fs:[ebx]
  414cbd:	push   cs
  414cbe:	or     BYTE PTR [ecx],bh
  414cc0:	or     al,BYTE PTR [esi+0x23]
  414cc3:	outs   dx,BYTE PTR ds:[esi]
  414cc4:	sbb    al,0xc7
  414cc6:	fistp  DWORD PTR [ecx+0x12]
  414cc9:	adc    BYTE PTR [eax-0x5171747d],bh
  414ccf:	outs   dx,DWORD PTR ds:[esi]
  414cd0:	dec    eax
  414cd1:	fstp   DWORD PTR ds:0xad252aa1
  414cd7:	mov    bl,0x6b
  414cd9:	mov    ebp,0x2111138d
  414cde:	(bad)  
  414cdf:	das    
  414ce0:	mov    cl,0x9c
  414ce2:	push   esp
  414ce3:	jb     0x414d4c
  414ce5:	xlat   BYTE PTR ds:[ebx]
  414ce6:	lea    edi,[ecx-0x20e2e760]
  414cec:	mov    esp,0x68a23724
  414cf1:	lock add al,0xde
  414cf4:	push   esi
  414cf5:	bound  ebx,QWORD PTR [eax+ecx*4]
  414cf8:	jmp    0x414caf
  414cfa:	mov    ds:0xc426fe68,eax
  414cff:	pushf  
  414d00:	add    ah,BYTE PTR [ecx]
  414d02:	ror    BYTE PTR [ebx-0x414fc883],1
  414d08:	cmp    al,0xa9
  414d0a:	lahf   
  414d0b:	iret   
  414d0c:	inc    BYTE PTR [edi-0x3]
  414d0f:	dec    edi
  414d10:	pop    esi
  414d11:	and    al,0xc4
  414d13:	mov    ds:0xe164ad94,eax
  414d18:	sahf   
  414d19:	neg    DWORD PTR [ebx]
  414d1b:	es test esi,ecx
  414d1e:	xchg   esp,eax
  414d1f:	stc    
  414d20:	or     dl,bl
  414d22:	sub    eax,0x1d3892dd
  414d27:	test   BYTE PTR [ebp-0x20c3bdb],ah
  414d2d:	push   es
  414d2e:	push   eax
  414d2f:	pop    edx
  414d30:	sar    DWORD PTR [ebp+0x2b],cl
  414d33:	pop    ss
  414d34:	pop    ds
  414d35:	ffree  st(2)
  414d37:	mov    bh,0x6f
  414d39:	cmp    bh,BYTE PTR [ecx+0x3204fd84]
  414d3f:	aas    
  414d40:	sub    al,0x6e
  414d42:	xchg   ecx,eax
  414d43:	jae    0x414d02
  414d45:	in     al,dx
  414d46:	sub    edx,ecx
  414d48:	xor    eax,DWORD PTR [ebx]
  414d4a:	ror    DWORD PTR [ebx-0x37fcf7b3],0x89
  414d51:	dec    ebp
  414d52:	or     BYTE PTR [ebx+0x4d8bdc45],cl
  414d58:	fsub   DWORD PTR [ebx]
  414d5a:	ror    DWORD PTR [ebx-0x3edc2bb3],0x8b
  414d61:	dec    ebp
  414d62:	ror    BYTE PTR [edi],1
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	ror    DWORD PTR [ebx-0x3ef433b3],0x8b
  414d6c:	dec    ebp
  414d6d:	enter  0xaf0f,0xc1
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xf8
  414e02:	mov    ecx,0x1642aa23
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x40181812],dl
  414e0e:	pop    ebp
  414e0f:	inc    esp
  414e10:	daa    
  414e11:	mov    DWORD PTR [edi+edi*8+0x5e7cf98a],esi
  414e18:	ds mov ch,dl
  414e1b:	and    al,0xfa
  414e1d:	xchg   esi,eax
  414e1e:	fs push ebx
  414e20:	(bad)  
  414e21:	sahf   
  414e22:	add    edi,ebp
  414e24:	lods   al,BYTE PTR ds:[esi]
  414e25:	or     DWORD PTR [edx+0x50cac38c],eax
  414e2b:	ins    DWORD PTR es:[edi],dx
  414e2c:	mov    ebx,0x48f147fe
  414e31:	jae    0x414e84
  414e33:	push   edi
  414e34:	jae    0x414dbe
  414e36:	inc    eax
  414e37:	push   ss
  414e38:	inc    esp
  414e39:	sbb    DWORD PTR [eax-0x65],esi
  414e3c:	stos   BYTE PTR es:[edi],al
  414e3d:	sub    DWORD PTR [edx],eax
  414e3f:	add    dl,al
  414e41:	sbb    dh,ch
  414e43:	(bad)  
  414e44:	xchg   ecx,eax
  414e45:	popf   
  414e46:	or     bh,bh
  414e48:	loopne 0x414e4e
  414e4a:	inc    eax
  414e4b:	adc    BYTE PTR fs:[esi+0x1b],ch
  414e4f:	xchg   BYTE PTR [esi+eax*4+0x11],ah
  414e53:	xchg   edi,eax
  414e54:	stc    
  414e55:	pusha  
  414e56:	shl    BYTE PTR [ebp+0x70],cl
  414e59:	push   es
  414e5a:	pusha  
  414e5b:	std    
  414e5c:	in     al,dx
  414e5d:	(bad)  
  414e5e:	adc    eax,0xfc1c6d7a
  414e63:	mov    esp,0x53f0046d
  414e68:	aaa    
  414e69:	adc    eax,0x871e61de
  414e6e:	adc    dh,dl
  414e70:	mov    ds:0x1477d8ae,al
  414e75:	push   cs
  414e76:	xchg   ebx,eax
  414e77:	aaa    
  414e78:	adc    DWORD PTR [ebx+ecx*2+0x23b0c8cc],esi
  414e7f:	clc    
  414e80:	push   ebp
  414e81:	push   0xa12b4f21
  414e86:	sub    al,0x3f
  414e88:	ds or  al,0x80
  414e8b:	jp     0x414e2a
  414e8d:	scas   al,BYTE PTR es:[edi]
  414e8e:	pusha  
  414e8f:	shl    DWORD PTR [esi-0x1a],1
  414e92:	mov    edx,0x507d91a3
  414e97:	outs   dx,DWORD PTR ds:[esi]
  414e98:	scas   eax,DWORD PTR es:[edi]
  414e99:	outs   dx,BYTE PTR ds:[esi]
  414e9a:	jo     0x414f01
  414e9c:	inc    DWORD PTR cs:[ecx]
  414e9f:	mov    esi,0xac053827
  414ea4:	aam    0x93
  414ea6:	inc    ebx
  414ea7:	mov    eax,0xfd643cd
  414eac:	pop    ds
  414ead:	mov    cl,0x72
  414eaf:	sbb    al,0xcb
  414eb1:	xchg   DWORD PTR [eax+0x74],ecx
  414eb4:	test   eax,0xfdc3b18d
  414eb9:	dec    DWORD PTR [edx+0x6d]
  414ebc:	neg    DWORD PTR [edi+ecx*1-0x328ace83]
  414ec3:	sar    edi,cl
  414ec5:	xchg   DWORD PTR [eax],esi
  414ec7:	add    cl,BYTE PTR [ecx]
  414ec9:	push   esp
  414eca:	addr16 int3 
  414ecc:	jmp    0x414f06
  414ece:	jno    0x414f4b
  414ed0:	fcmovnbe st,st(6)
  414ed2:	cmp    BYTE PTR [ecx+ecx*4-0x7e39e5b4],0x45
  414eda:	sbb    eax,0x43569abe
  414edf:	inc    ecx
  414ee0:	mov    esp,0x127c90fa
  414ee5:	add    al,0xec
  414ee7:	jge    0x414eb9
  414ee9:	scas   eax,DWORD PTR es:[edi]
  414eea:	cdq    
  414eeb:	popa   
  414eec:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414eee:	mov    eax,0x10b0d16a
  414ef3:	mov    bh,0xf9
  414ef5:	mov    WORD PTR [edx-0x7c],fs
  414ef8:	dec    eax
  414ef9:	retf   
  414efa:	cwde   
  414efb:	mov    edi,DWORD PTR ds:0x72abfa55
  414f01:	sub    BYTE PTR [eax-0x1b],ah
  414f04:	mov    ebp,0x6f8f6e53
  414f09:	loop   0x414f3a
  414f0b:	cs iret 
  414f0d:	mov    esp,0xaa9aff9a
  414f12:	jno    0x414f86
  414f14:	or     eax,0x78cfb695
  414f19:	clc    
  414f1a:	add    eax,DWORD PTR [edi]
  414f1c:	mov    dl,0xb6
  414f1e:	add    BYTE PTR [edx+0x55],0xaa
  414f22:	add    ah,ah
  414f24:	xor    bl,BYTE PTR [ecx-0x6142c8b7]
  414f2a:	jmp    0xe3bcc6c7
  414f2f:	jb     0x414f7d
  414f31:	cld    
  414f32:	cs push edx
  414f34:	aas    
  414f35:	ins    DWORD PTR es:[edi],dx
  414f36:	mov    gs,WORD PTR [ebx-0x1de1d2f0]
  414f3c:	repnz or BYTE PTR [edi-0x7a15bc4d],bh
  414f43:	pop    ss
  414f44:	mov    edi,0x7fd8cdfd
  414f49:	iret   
  414f4a:	shl    BYTE PTR [esp+eiz*8-0x14d8f2b1],cl
  414f51:	and    DWORD PTR [edx],edx
  414f53:	sti    
  414f54:	lock adc al,0x7f
  414f57:	mov    DWORD PTR [edx+edx*1-0x25],ebp
  414f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5c:	inc    edi
  414f5d:	mov    ds:0xeb130bc0,eax
  414f62:	push   esi
  414f63:	pushf  
  414f64:	ds int 0x5e
  414f67:	mov    ebx,0xdc18ee93
  414f6c:	popf   
  414f6d:	push   esp
  414f6e:	daa    
  414f6f:	push   0x3d9c9799
  414f74:	mov    ?,esp
  414f76:	dec    edi
  414f77:	jno    0x414efd
  414f79:	idiv   edi
  414f7b:	jmp    0x414fb1
  414f7d:	into   
  414f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f7f:	js     0x414f07
  414f81:	adc    ch,ch
  414f83:	xchg   DWORD PTR [ebp-0x3a3689bf],ebx
  414f89:	push   ebp
  414f8a:	inc    edi
  414f8b:	in     eax,0x58
  414f8d:	call   DWORD PTR [ecx+0x222625a1]
  414f93:	test   eax,0x149a99e4
  414f98:	fnstsw WORD PTR [esi-0x47]
  414f9b:	in     al,dx
  414f9c:	xchg   edx,eax
  414f9d:	jne    0x414fb7
  414f9f:	sub    BYTE PTR [ecx-0x6b17cea7],0x16
  414fa6:	in     al,dx
  414fa7:	adc    eax,DWORD PTR [ebp-0x24]
  414faa:	(bad)  
  414fab:	in     eax,0x84
  414fad:	int    0xa9
  414faf:	cmp    BYTE PTR [esi+0x5c],0x74
  414fb3:	and    al,BYTE PTR [ecx-0x5b98a79]
  414fb9:	jmp    0x5f7:0xf8153f27
  414fc0:	sub    DWORD PTR [esi-0xa],ebp
  414fc3:	jle    0x414f9c
  414fc5:	repnz shr DWORD PTR [edi-0x1476989],0x24
  414fcd:	mov    BYTE PTR [esi],bl
  414fcf:	mov    dl,0x77
  414fd1:	test   eax,0x1cafea53
  414fd6:	mov    al,ds:0xc1b99121
  414fdb:	mov    esi,0x55f17ef7
  414fe0:	mov    ecx,0x1ed77e1f
  414fe5:	inc    ebx
  414fe6:	cmp    cl,0x81
  414fe9:	sub    BYTE PTR [eax],0x4
  414fec:	mov    fs,WORD PTR [ecx+0x73ed8ff6]
  414ff2:	sbb    esi,ecx
  414ff4:	pop    ecx
  414ff5:	xor    BYTE PTR [edx],ch
  414ff7:	lods   eax,DWORD PTR ds:[esi]
  414ff8:	fdiv   st(0),st
  414ffa:	pop    edi
  414ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffc:	fdivr  QWORD PTR [ebx-0x2eaf3955]
  415002:	adc    BYTE PTR [ecx-0xa],bh
  415005:	sbb    BYTE PTR [esi],bh
  415007:	xchg   esi,eax
  415008:	mov    ch,0xb2
  41500a:	xor    bh,BYTE PTR [ecx+0x267898f5]
  415010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415011:	mul    BYTE PTR [edi-0x5be02bf8]
  415017:	lock xchg DWORD PTR [eax],ecx
  41501a:	xor    ch,BYTE PTR [edi]
  41501c:	xchg   al,dh
  41501e:	test   BYTE PTR [esi-0x5d],al
  415021:	pushf  
  415022:	pushf  
  415023:	xchg   ecx,eax
  415024:	popa   
  415025:	dec    ebx
  415026:	add    eax,0x4af528db
  41502b:	pop    ebp
  41502c:	inc    ebp
  41502d:	test   ch,0x2e
  415030:	into   
  415031:	out    0xe5,al
  415033:	inc    eax
  415034:	add    eax,0xf6a1c976
  415039:	lods   eax,DWORD PTR gs:[esi]
  41503b:	push   esp
  41503c:	mov    BYTE PTR [ebp+0x4403019d],bh
  415042:	push   ecx
  415043:	push   cs
  415044:	aas    
  415045:	push   ebp
  415046:	or     dh,BYTE PTR [ecx+edi*1+0x27665373]
  41504d:	imul   ecx,DWORD PTR [edi-0xc],0x49
  415051:	mov    DWORD PTR [ebx+0x5003aaa0],edi
  415057:	push   esp
  415058:	repz in eax,0xd4
  41505b:	push   edx
  41505c:	fst    st(2)
  41505e:	iret   
  41505f:	add    BYTE PTR [eax+eax*4+0x464cbbd9],dh
  415066:	test   al,0xdb
  415068:	aas    
  415069:	xor    ah,BYTE PTR [esi+0x13]
  41506c:	dec    esp
  41506d:	test   al,0x64
  41506f:	icebp  
  415070:	in     al,dx
  415071:	imul   ecx,DWORD PTR ds:0xbb3c1d77,0x5c
  415078:	xor    esi,0xcbe9f754
  41507e:	pop    ebx
  41507f:	or     bh,BYTE PTR [eax+0xfe05900]
  415085:	daa    
  415086:	fcomi  st,st(1)
  415088:	fiadd  WORD PTR [edi+0x53afb251]
  41508e:	pushf  
  41508f:	and    bh,bh
  415091:	es mov esi,0xc7aede1b
  415097:	and    al,0x35
  415099:	loop   0x415070
  41509b:	arpl   WORD PTR [ebx-0x30],si
  41509e:	imul   eax,ebx,0xffffffdf
  4150a1:	jae    0x41509f
  4150a3:	(bad)  
  4150a4:	aad    0xce
  4150a6:	std    
  4150a7:	xchg   ebx,eax
  4150a8:	mov    ss,WORD PTR [ecx+0x72fe55b5]
  4150ae:	loope  0x4150ff
  4150b0:	out    0xf3,eax
  4150b2:	(bad)  
  4150b4:	fdiv   QWORD PTR [ebp-0x606d637a]
  4150ba:	cmp    al,0x3b
  4150bc:	push   0x7c
  4150be:	and    al,0xd3
  4150c0:	cmp    BYTE PTR [esi+0x96128db],dl
  4150c6:	les    esi,FWORD PTR [edx]
  4150c8:	inc    esi
  4150c9:	add    al,0xde
  4150cb:	fcomp  QWORD PTR [ebx+0x74da219c]
  4150d1:	lods   al,BYTE PTR ds:[esi]
  4150d2:	jg     0x4150ea
  4150d4:	dec    ebx
  4150d5:	push   esi
  4150d6:	cmp    edi,DWORD PTR [ecx-0x7]
  4150d9:	retf   0x2c53
  4150dc:	ja     0x415133
  4150de:	xor    eax,0xc7126330
  4150e3:	lods   eax,DWORD PTR ds:[esi]
  4150e4:	mov    bh,0x6c
  4150e6:	ss dec ebp
  4150e8:	mov    dh,0x79
  4150ea:	push   cs
  4150eb:	jp     0x415165
  4150ed:	dec    ebx
  4150ee:	imul   ebp,esi,0xffffff80
  4150f1:	cmc    
  4150f2:	sbb    edi,ebp
  4150f4:	fcmovnb st,st(6)
  4150f6:	mov    bl,0x5
  4150f8:	test   eax,0xb5d3bd40
  4150fd:	arpl   WORD PTR [edi-0x39c5e53a],bx
  415103:	jecxz  0x41513e
  415105:	sub    DWORD PTR [edx],esp
  415107:	sti    
  415108:	pop    ss
  415109:	push   0xffffffed
  41510b:	jno    0x41514f
  41510d:	mov    bh,0x6e
  41510f:	sbb    eax,0xa888b598
  415114:	stos   BYTE PTR es:[edi],al
  415115:	mov    bl,0x3d
  415117:	cmp    BYTE PTR [eax],dl
  415119:	adc    al,0x35
  41511b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41511c:	and    BYTE PTR [eax+0x25],cl
  41511f:	cli    
  415120:	or     ecx,DWORD PTR [ebx+0x5099c818]
  415126:	shr    BYTE PTR [edi+0x3e],1
  415129:	xchg   esi,eax
  41512a:	fiadd  WORD PTR [esi]
  41512c:	xchg   edi,eax
  41512d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41512e:	xor    BYTE PTR ds:[ecx],0xba
  415132:	retf   
  415133:	inc    edi
  415134:	and    dl,ah
  415136:	jnp    0x415104
  415138:	jns    0x415178
  41513a:	nop
  41513b:	rcr    BYTE PTR [eax-0x69b24a8f],cl
  415141:	nop
  415142:	outs   dx,BYTE PTR ds:[esi]
  415143:	xor    bh,bl
  415145:	fsubp  st(4),st
  415147:	bound  edx,QWORD PTR [ecx+edi*1-0x72]
  41514b:	push   edx
  41514c:	imul   ebx,DWORD PTR [esi-0x415573f0],0x4d
  415153:	cld    
  415154:	cdq    
  415155:	push   esp
  415156:	loopne 0x41516a
  415158:	fmul   DWORD PTR [eax+0x57]
  41515b:	dec    ecx
  41515c:	aaa    
  41515d:	fild   QWORD PTR ss:0x1c32e09c
  415164:	cmp    BYTE PTR [ecx],bl
  415166:	gs ret 0xd90b
  41516a:	add    BYTE PTR [edx-0x34258711],0xe6
  415171:	mov    ebx,0x284037b6
  415176:	mov    BYTE PTR [edi],0xab
  415179:	push   ds
  41517a:	stc    
  41517b:	pop    ds
  41517c:	jmp    0x4151b2
  41517e:	scas   eax,DWORD PTR es:[edi]
  41517f:	fldenv [edi-0x4170d9ba]
  415185:	add    al,0xcc
  415187:	cmp    al,0x43
  415189:	cwde   
  41518a:	push   ss
  41518b:	aam    0x6c
  41518d:	das    
  41518e:	jmp    0xd2878bd3
  415193:	sub    DWORD PTR [edx-0x7e4c5992],eax
  415199:	out    dx,al
  41519a:	xor    al,0x1c
  41519c:	push   ecx
  41519d:	gs xchg ebx,eax
  41519f:	pop    ss
  4151a0:	(bad)  
  4151a1:	xor    DWORD PTR [edi+edi*2-0x3f],ebx
  4151a5:	mov    ebx,esp
  4151a7:	push   eax
  4151a8:	add    DWORD PTR [ebx+0x4e],edx
  4151ab:	xchg   edi,eax
  4151ac:	xchg   DWORD PTR [edx+eax*2-0x67],ebx
  4151b0:	add    al,0x95
  4151b2:	in     eax,dx
  4151b3:	test   ah,0xa0
  4151b6:	jne    0x41513e
  4151b8:	mov    DWORD PTR [edi],ebp
  4151ba:	xor    DWORD PTR [esi+0x2d],0x73
  4151be:	mov    eax,0xc385f9d
  4151c3:	mov    bh,0x4b
  4151c5:	adc    esi,DWORD PTR [esi-0x7f87179]
  4151cb:	sbb    eax,0xd457d700
  4151d0:	xchg   ebx,eax
  4151d1:	daa    
  4151d2:	fidivr DWORD PTR [eax+0x1424548b]
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x247e1b8c]
  415305:	mov    al,0xfa
  415307:	mov    esi,0x18160ebc
  41530c:	mov    ch,0x12
  41530e:	sbb    BYTE PTR [eax],bl
  415310:	xchg   ecx,eax
  415311:	jg     0x4152bc
  415313:	clc    
  415314:	push   esi
  415315:	xor    DWORD PTR ds:0x4f963663,eax
  41531b:	jb     0x415325
  41531d:	std    
  41531e:	xchg   esi,eax
  41531f:	inc    eax
  415320:	loop   0x41530a
  415322:	jnp    0x4152d9
  415324:	aam    0x89
  415326:	jecxz  0x41533c
  415328:	mov    bh,0x50
  41532a:	xchg   ebx,eax
  41532b:	addr16 sbb al,0xd4
  41532e:	push   es
  41532f:	outs   dx,BYTE PTR ds:[esi]
  415330:	adc    eax,0x4c35bfe7
  415335:	lea    edi,gs:[eax]
  415338:	push   0xba80f599
  41533d:	out    0xb2,eax
  41533f:	out    0x34,eax
  415341:	mov    ah,0x2a
  415343:	dec    edx
  415344:	xchg   ebp,eax
  415345:	not    ebp
  415347:	push   ebx
  415348:	(bad)  
  415349:	in     al,dx
  41534a:	mov    bh,0x81
  41534c:	jle    0x4153be
  41534e:	sbb    eax,0x3879fbc4
  415353:	ja     0x415397
  415355:	mov    ebx,0x75df5e44
  41535a:	mov    DWORD PTR [edx-0x62],esp
  41535d:	xchg   ebp,eax
  41535e:	addr16 retf 
  415360:	ficom  DWORD PTR [edi-0xb]
  415363:	enter  0x356f,0xe4
  415367:	jno    0x415362
  415369:	data16 mov al,ds:0xb640c40e
  41536f:	icebp  
  415370:	scas   al,BYTE PTR es:[edi]
  415371:	lods   eax,DWORD PTR ds:[esi]
  415372:	fwait
  415373:	nop
  415374:	ficomp DWORD PTR [ebx-0x37]
  415377:	popa   
  415378:	push   es
  415379:	dec    esp
  41537a:	aaa    
  41537b:	fdivr  QWORD PTR [ecx]
  41537d:	cmc    
  41537e:	pop    ebp
  41537f:	push   ebx
  415380:	push   ss
  415381:	clc    
  415382:	cmp    BYTE PTR [esi],dl
  415384:	xchg   BYTE PTR [ecx],bh
  415386:	mov    ch,BYTE PTR [bx-0x17]
  41538a:	ins    BYTE PTR es:[edi],dx
  41538b:	out    dx,eax
  41538c:	sub    BYTE PTR ds:0x15d801a5,cl
  415392:	sbb    cl,BYTE PTR [ebx+0xc]
  415395:	dec    ebp
  415396:	xchg   ebx,eax
  415397:	cwde   
  415398:	lahf   
  415399:	push   ecx
  41539a:	test   al,cl
  41539c:	pop    ecx
  41539d:	(bad)  
  41539e:	or     DWORD PTR [ecx+edx*2],ebp
  4153a1:	cmp    eax,0x2a0d67b2
  4153a6:	sbb    BYTE PTR [esi-0x2a],ch
  4153a9:	push   edx
  4153aa:	or     eax,DWORD PTR [edi+0x124923e]
  4153b0:	add    al,0xdc
  4153b2:	fwait
  4153b3:	in     al,dx
  4153b4:	and    BYTE PTR [ebx],ch
  4153b6:	inc    ebp
  4153b7:	xor    dh,BYTE PTR [edi+esi*2]
  4153ba:	ins    DWORD PTR es:[edi],dx
  4153bb:	ins    DWORD PTR es:[edi],dx
  4153bc:	jmp    0xabbee359
  4153c1:	mov    eax,0x1362b721
  4153c6:	or     al,0xc
  4153c8:	sub    al,0xd8
  4153ca:	cmp    al,0xca
  4153cc:	jmp    0xcbf04a0b
  4153d1:	adc    esp,ebp
  4153d3:	xchg   edx,eax
  4153d4:	enter  0x2edf,0xc0
  4153d8:	cmp    edx,DWORD PTR [esi]
  4153da:	pop    ebp
  4153db:	push   esp
  4153dc:	mov    edx,0xb83ec097
  4153e1:	leave  
  4153e2:	jne    0x41537f
  4153e4:	mov    dh,0x8e
  4153e6:	iret   
  4153e7:	inc    eax
  4153e8:	push   eax
  4153e9:	xchg   edx,eax
  4153ea:	sbb    BYTE PTR [edx],ch
  4153ec:	jnp    0x41542a
  4153ee:	repnz xchg ecx,eax
  4153f0:	cs ret 
  4153f2:	jle    0x4153bb
  4153f4:	fs aam 0x89
  4153f7:	cwde   
  4153f8:	shr    BYTE PTR [edi],cl
  4153fa:	je     0x4153b9
  4153fc:	xchg   edx,eax
  4153fd:	cmp    al,BYTE PTR [esi-0x21]
  415400:	mov    BYTE PTR [ebp+0x19],bl
  415403:	lds    eax,FWORD PTR [eax]
  415405:	mov    dl,0x9
  415407:	scas   al,BYTE PTR es:[edi]
  415408:	ret    0xf899
  41540b:	out    0xac,al
  41540d:	xchg   edx,eax
  41540e:	dec    ebp
  41540f:	in     al,dx
  415410:	adc    BYTE PTR [eax],bl
  415412:	into   
  415413:	sub    BYTE PTR [esi+0x20],al
  415416:	push   0x5dea9e7d
  41541b:	mov    al,0x27
  41541d:	xor    esi,ebx
  41541f:	dec    eax
  415420:	cmp    DWORD PTR [edx],ebx
  415422:	push   esp
  415423:	xchg   DWORD PTR [ebx+0x74],esi
  415426:	push   esp
  415427:	(bad)  
  415428:	(bad)  
  41542a:	dec    dh
  41542c:	mov    DWORD PTR [ecx-0x3528312],ebp
  415432:	mov    dl,0x59
  415434:	jp     0x415456
  415436:	es cmp al,0x20
  415439:	adc    dh,BYTE PTR [ebx+0x15]
  41543c:	loopne 0x41542e
  41543e:	push   esi
  41543f:	out    dx,al
  415440:	pop    es
  415441:	retfw  0x243f
  415445:	jae    0x41547e
  415447:	and    DWORD PTR [eax],ecx
  415449:	sbb    cl,BYTE PTR [ecx-0x6e]
  41544c:	and    BYTE PTR [ecx+0x78],bh
  41544f:	mov    edx,0x606f2125
  415454:	sub    eax,0xe47d61f9
  415459:	sbb    esp,DWORD PTR [edx+ecx*1+0x7b]
  41545d:	ja     0x4154b8
  41545f:	jb     0x415462
  415461:	loop   0x41542f
  415463:	push   ebp
  415464:	push   ebx
  415465:	icebp  
  415466:	mov    al,0x3
  415468:	dec    esp
  415469:	cmp    ah,cl
  41546b:	jnp    0x4153f3
  41546d:	mov    BYTE PTR cs:[eax-0x22],ch
  415471:	and    dl,dl
  415473:	jl     0x4154de
  415475:	test   eax,0x9e63facb
  41547a:	in     eax,0x5
  41547c:	dec    esp
  41547d:	rcr    BYTE PTR [esi],0x54
  415480:	xor    ebp,edx
  415482:	pop    eax
  415483:	mov    fs,WORD PTR [ecx+0x1d8ae9e]
  415489:	inc    esp
  41548a:	pop    es
  41548b:	sar    DWORD PTR [esp+eax*8],cl
  41548e:	cmp    esp,DWORD PTR [ebx]
  415490:	pop    fs
  415492:	mov    ?,WORD PTR [esi-0x72]
  415495:	nop    edi
  415498:	imul   edx,DWORD PTR [ebp+0xb],0xffffffed
  41549c:	ret    0x3651
  41549f:	fist   DWORD PTR [ebp+0x43]
  4154a2:	popa   
  4154a3:	dec    esp
  4154a4:	fiadd  DWORD PTR [ecx-0x1940404]
  4154aa:	cld    
  4154ab:	jmp    0xa2be:0x612f8876
  4154b2:	std    
  4154b3:	and    edi,ebp
  4154b5:	es jbe 0x415470
  4154b8:	lock cwde 
  4154ba:	retf   
  4154bb:	xor    ecx,ebx
  4154bd:	xchg   ecx,eax
  4154be:	or     eax,0xc5e60c32
  4154c3:	xchg   ebx,eax
  4154c4:	jmp    0x828a:0x624b4b06
  4154cb:	sub    DWORD PTR [edx+0x67],edx
  4154ce:	pop    eax
  4154cf:	les    ecx,FWORD PTR [edx]
  4154d1:	adc    BYTE PTR [edx],ch
  4154d3:	pop    es
  4154d4:	jo     0x4154ea
  4154d6:	popa   
  4154d7:	push   ebx
  4154d8:	add    esi,DWORD PTR gs:[ebx]
  4154db:	fprem  
  4154dd:	mov    bl,0x74
  4154df:	shr    BYTE PTR [esp+esi*4+0x58ed64db],cl
  4154e6:	push   0x5a
  4154e8:	sbb    ecx,ebp
  4154ea:	push   ebx
  4154eb:	js     0x41553e
  4154ed:	(bad)  
  4154ee:	iret   
  4154ef:	cmp    BYTE PTR [edi+0x5d],al
  4154f2:	call   DWORD PTR [ecx-0x21]
  4154f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f6:	lea    esp,[edx+0x51]
  4154f9:	sub    esi,DWORD PTR [eax+0x76]
  4154fc:	sub    ch,bl
  4154fe:	pop    es
  4154ff:	loopne 0x4154d0
  415501:	jb     0x4154ac
  415503:	xor    al,0x99
  415505:	inc    edi
  415506:	inc    edx
  415507:	lods   eax,DWORD PTR ds:[esi]
  415508:	or     dl,BYTE PTR ds:0xb0bb342f
  41550e:	scas   eax,DWORD PTR es:[edi]
  41550f:	adc    DWORD PTR [esp+edi*4],0x444af40e
  415516:	xchg   esp,eax
  415517:	nop
  415518:	pop    ecx
  415519:	icebp  
  41551a:	cld    
  41551b:	(bad)  
  41551c:	jp     0x4154c1
  41551e:	ror    BYTE PTR [ebx-0x43],0x80
  415522:	int    0x1a
  415524:	retf   0x78d9
  415527:	cmc    
  415528:	mov    al,0x81
  41552a:	push   esi
  41552b:	or     DWORD PTR [eax+eax*2],eax
  41552e:	fcmove st,st(5)
  415530:	push   ss
  415531:	shl    DWORD PTR [ebp-0x51],0xaf
  415535:	inc    edi
  415536:	add    dh,BYTE PTR [edx]
  415538:	pop    ebp
  415539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41553a:	xlat   BYTE PTR ds:[ebx]
  41553b:	xor    cl,ch
  41553d:	pop    esi
  41553e:	jns    0x415595
  415540:	push   edx
  415541:	and    DWORD PTR [ebx],0x72eac11a
  415547:	inc    ebp
  415548:	out    0x97,eax
  41554a:	aaa    
  41554b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41554c:	in     eax,dx
  41554d:	mov    DWORD PTR [eax+0x7b],ebx
  415550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415551:	les    ecx,FWORD PTR [ebp+0x5465615b]
  415557:	in     eax,0xd
  415559:	jns    0x415589
  41555b:	repnz sub eax,0x1491c83e
  415561:	clc    
  415562:	pop    ebx
  415563:	es jp  0x415537
  415566:	push   edi
  415567:	xchg   ebx,eax
  415568:	mov    cl,0xc7
  41556a:	out    dx,al
  41556b:	inc    edi
  41556c:	sbb    al,0xee
  41556e:	or     DWORD PTR [ecx-0x19c05940],0x525a99f4
  415578:	mov    ds:0x4b6c06dc,al
  41557d:	push   edx
  41557e:	and    DWORD PTR [ecx-0x71],0x3e864c60
  415585:	inc    ebx
  415586:	imul   edx,DWORD PTR [eax],0x35fb5664
  41558c:	push   cs
  41558d:	(bad)  
  41558e:	repz add al,0x62
  415591:	push   edx
  415592:	mov    edx,DWORD PTR [eax+0x37]
  415595:	iret   
  415596:	push   ebx
  415597:	xchg   esi,eax
  415598:	jle    0x415612
  41559a:	sub    ebp,edi
  41559c:	pop    edx
  41559d:	adc    eax,esp
  41559f:	scas   al,BYTE PTR es:[edi]
  4155a0:	lods   eax,DWORD PTR ds:[esi]
  4155a1:	jle    0x4155c0
  4155a3:	jnp    0x4155da
  4155a5:	in     al,dx
  4155a6:	test   ah,0xe2
  4155a9:	and    edx,ebp
  4155ab:	push   ebp
  4155ac:	scas   eax,DWORD PTR es:[edi]
  4155ad:	push   0xfffffff6
  4155af:	rcl    BYTE PTR [ebp+0x6423bb4b],0xe3
  4155b6:	cmp    DWORD PTR [eax-0x3b69e3a9],esi
  4155bc:	xchg   edi,eax
  4155bd:	xchg   edx,eax
  4155be:	mov    eax,0xe24024ff
  4155c3:	outs   dx,BYTE PTR ds:[esi]
  4155c4:	mov    ?,WORD PTR [ecx+0x1]
  4155c7:	pop    ebp
  4155c8:	es pop edi
  4155ca:	sub    al,0xcc
  4155cc:	push   0xa81608c8
  4155d1:	push   cs
  4155d2:	adc    ebp,esi
  4155d4:	cmp    al,0xcb
  4155d6:	bound  esi,QWORD PTR [esp+edx*1+0x6a]
  4155da:	jge    0x41562b
  4155dc:	rcr    BYTE PTR [ebx],0x43
  4155df:	xor    BYTE PTR [edx-0x34e230f3],0xdb
  4155e6:	scas   eax,DWORD PTR es:[edi]
  4155e7:	test   eax,0xf8cd4d47
  4155ec:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ee:	dec    eax
  4155ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f0:	dec    eax
  4155f1:	pop    eax
  4155f2:	ret    0x509e
  4155f5:	clc    
  4155f6:	inc    esi
  4155f7:	xchg   ebp,eax
  4155f8:	xchg   edi,eax
  4155f9:	add    eax,0x6c0fcd3d
  4155fe:	inc    ebx
  4155ff:	jne    0x4155cd
  415601:	adc    al,0xc7
  415603:	pop    esp
  415604:	mov    ah,0x3c
  415606:	pop    ecx
  415607:	mov    dh,0xd3
  415609:	sbb    DWORD PTR [edi],edx
  41560b:	sbb    dl,BYTE PTR [eax+0x2b]
  41560e:	rcl    DWORD PTR [edi+0x64],cl
  415611:	popa   
  415612:	retf   0xd256
  415615:	sub    bl,BYTE PTR [eax]
  415617:	and    BYTE PTR [edx+0x27cf66c7],0x9b
  41561e:	cmc    
  41561f:	xor    dl,BYTE PTR ds:0xcdf96a4b
  415625:	pop    ss
  415626:	cld    
  415627:	outs   dx,BYTE PTR ds:[esi]
  415628:	jns    0x41562d
  41562a:	push   esp
  41562b:	jmp    DWORD PTR [edx+0x51]
  41562e:	sar    DWORD PTR [ebx-0x1bbf0d1],cl
  415634:	push   edx
  415635:	mov    eax,ds:0x3c9bdebc
  41563a:	xchg   ebx,eax
  41563b:	push   edx
  41563c:	mov    cl,0x19
  41563e:	not    BYTE PTR [esi+0x361ec1a7]
  415644:	mov    ah,0x8f
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x4156f8
  41567f:	sbb    eax,0x8587edb
  415684:	push   ss
  415685:	sbb    BYTE PTR [ebp+0x3e181812],dh
  41568b:	dec    ebx
  41568c:	and    edi,ecx
  41568e:	push   esi
  41568f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415690:	add    bl,BYTE PTR [eax+0x7056724f]
  415696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415697:	jle    0x4156c9
  415699:	out    dx,eax
  41569a:	out    0xb1,eax
  41569c:	mov    ah,0x9b
  41569e:	or     eax,DWORD PTR [eax-0x63]
  4156a1:	neg    BYTE PTR [ecx]
  4156a3:	fbstp  TBYTE PTR [esi-0x43]
  4156a6:	push   ds
  4156a7:	pushf  
  4156a8:	ds inc ecx
  4156aa:	cmp    al,0x4f
  4156ac:	mov    edx,0xb1316d81
  4156b1:	mov    bl,0x3d
  4156b3:	mov    ebp,0xc1fb701e
  4156b8:	pushw  ss
  4156ba:	pop    DWORD PTR [edx-0x70712a8]
  4156c0:	and    ch,BYTE PTR [ecx-0x27b5c1d2]
  4156c6:	out    dx,al
  4156c7:	(bad)  
  4156c9:	xor    bh,0x45
  4156cc:	push   0x47044c77
  4156d1:	iret   
  4156d2:	in     al,0xb4
  4156d4:	inc    esi
  4156d5:	call   0xf5147ea7
  4156da:	xchg   ebp,eax
  4156db:	push   eax
  4156dc:	aam    0x57
  4156de:	cmp    eax,0xde37fcba
  4156e3:	add    eax,0x9af5ed5f
  4156e8:	or     eax,0x12051ed7
  4156ed:	je     0x415721
  4156ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f0:	dec    esi
  4156f1:	ficomp DWORD PTR [edi]
  4156f3:	add    al,0xe8
  4156f5:	loope  0x41572a
  4156f7:	inc    ebp
  4156f8:	std    
  4156f9:	jae    0x41567f
  4156fb:	adc    cl,BYTE PTR [ebx-0x7a6445db]
  415701:	fs pop es
  415703:	or     DWORD PTR [ecx-0x3],0xcbc1ab2e
  41570a:	dec    ebp
  41570b:	push   ecx
  41570c:	in     eax,0x4a
  41570e:	adc    DWORD PTR [esi],edi
  415710:	mov    WORD PTR [edx+0x5d3a8439],fs
  415716:	adc    ch,BYTE PTR [esi-0x4b]
  415719:	or     al,0xb1
  41571b:	pop    esi
  41571c:	(bad)  
  41571d:	in     al,0x22
  41571f:	fld    QWORD PTR [esi]
  415721:	nop
  415722:	pop    eax
  415723:	loop   0x41579e
  415725:	cwde   
  415726:	mov    DWORD PTR [edx+0x25748e55],esi
  41572c:	sbb    bh,BYTE PTR [edi-0x3c242c59]
  415732:	adc    DWORD PTR [eax+ebx*8-0x4a2c799a],ecx
  415739:	xchg   ecx,eax
  41573a:	stos   DWORD PTR es:[edi],eax
  41573b:	shl    BYTE PTR [ebx+0x1a46438d],1
  415741:	and    al,0x99
  415743:	push   eax
  415744:	xchg   edi,eax
  415745:	mov    eax,0x32974748
  41574a:	inc    eax
  41574b:	cli    
  41574c:	mov    dh,al
  41574e:	xor    al,0xe6
  415750:	xchg   ecx,eax
  415751:	xchg   ebp,eax
  415752:	jg     0x415755
  415754:	mov    ah,0x57
  415756:	adc    BYTE PTR [edi+edi*8+0x5a],dl
  41575a:	mov    WORD PTR [edi],fs
  41575c:	mov    edx,0xb7b57d76
  415761:	not    BYTE PTR es:[edx+0x54e7b857]
  415768:	lock test DWORD PTR [eax-0x3b],0x2b0e6492
  415770:	stc    
  415771:	or     BYTE PTR [edx-0x7498e5c2],dl
  415777:	stos   BYTE PTR es:[edi],al
  415778:	ret    
  415779:	sub    eax,0x56ba02b1
  41577e:	sub    al,0x82
  415780:	push   ebx
  415781:	push   edi
  415782:	mov    ebp,0xfd0f759f
  415787:	fcomp  QWORD PTR [ebp+0x1c]
  41578a:	mov    dl,0x63
  41578c:	and    al,bh
  41578e:	or     dl,bh
  415790:	ss jmp 0xc2a28000
  415796:	ret    
  415797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415798:	xchg   BYTE PTR [ecx+0x5e181c90],ch
  41579e:	add    DWORD PTR [edi],eax
  4157a0:	add    dh,BYTE PTR [edi-0x34]
  4157a3:	test   al,0x1b
  4157a5:	stc    
  4157a6:	sti    
  4157a7:	mov    al,ds:0x34d80cd1
  4157ac:	aaa    
  4157ad:	pop    es
  4157ae:	pop    eax
  4157af:	push   edx
  4157b0:	jl     0x41581e
  4157b2:	push   edi
  4157b3:	jns    0x415758
  4157b5:	push   ebx
  4157b6:	jle    0x41575b
  4157b8:	je     0x415757
  4157ba:	jmp    0x25411a60
  4157bf:	sar    DWORD PTR [eax],1
  4157c1:	push   ds
  4157c2:	jl     0x4157c4
  4157c4:	add    BYTE PTR [edi],0xff
  4157c7:	shl    DWORD PTR [edi-0x7f],0x35
  4157cb:	pushf  
  4157cc:	xchg   DWORD PTR [esi+0x351330ef],edi
  4157d2:	(bad)  
  4157d3:	pusha  
  4157d4:	cld    
  4157d5:	xchg   BYTE PTR [edx],cl
  4157d7:	pop    edi
  4157d8:	ret    0xbf3a
  4157db:	add    DWORD PTR [ecx-0x49],edi
  4157de:	clc    
  4157df:	(bad)  
  4157e0:	sar    DWORD PTR [esi],cl
  4157e2:	dec    ecx
  4157e3:	pop    eax
  4157e4:	int    0x6c
  4157e6:	mov    bl,0x1b
  4157e8:	jb     0x4157e3
  4157ea:	xchg   ebx,eax
  4157eb:	sub    BYTE PTR [ecx],dl
  4157ed:	aad    0x63
  4157ef:	int    0xce
  4157f1:	mov    ds:0x4bf5a434,eax
  4157f6:	mov    esp,0x27ba6fd3
  4157fb:	stc    
  4157fc:	xchg   ecx,eax
  4157fd:	ja     0x415868
  4157ff:	adc    DWORD PTR [eax-0x2021d3cb],esp
  415805:	packssdw mm7,QWORD PTR [ebx-0x123cbeb6]
  41580c:	call   0x286:0x7e5d60a2
  415813:	mov    ds:0x9fc0b687,eax
  415818:	call   0xcb385409
  41581d:	sub    bh,BYTE PTR [edi+0x73dc8ba]
  415823:	in     eax,dx
  415824:	adc    dl,bl
  415826:	jo     0x4157eb
  415828:	and    eax,0x357b421c
  41582d:	xchg   DWORD PTR [eax+0x0],esi
  415830:	das    
  415831:	jecxz  0x4157fb
  415833:	and    eax,0xd6c4c235
  415838:	in     eax,dx
  415839:	imul   edi,DWORD PTR [esi-0x32e372d3],0x161013a
  415843:	int    0xf4
  415845:	cli    
  415846:	sbb    DWORD PTR [ebx+0x31],ebx
  415849:	and    eax,0x901cc48c
  41584e:	test   al,0x80
  415850:	aam    0x17
  415852:	or     DWORD PTR [ebx-0x65fd26b3],ecx
  415858:	enter  0x3439,0x1a
  41585c:	cdq    
  41585d:	pusha  
  41585e:	xor    eax,0x3c9558e0
  415863:	inc    ecx
  415864:	sub    ebx,DWORD PTR [edi+0x5d]
  415867:	adc    dl,dl
  415869:	ja     0x41581f
  41586b:	pushf  
  41586c:	repnz shl BYTE PTR [ecx-0x80],0x1a
  415871:	push   edx
  415872:	iret   
  415873:	mov    esp,0x1ebcfc33
  415878:	cli    
  415879:	jecxz  0x41586a
  41587b:	jb     0x4158d0
  41587d:	adc    eax,0xb33e6539
  415882:	movzx  esp,si
  415885:	(bad)
  415888:	cli    
  415889:	cmp    ebx,DWORD PTR [ecx+esi*4+0x16]
  41588d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41588e:	mov    BYTE PTR [edi+eax*1],bh
  415891:	pop    ss
  415892:	es aas 
  415894:	jbe    0x4158c9
  415896:	shr    dh,cl
  415898:	sub    ah,BYTE PTR [esi]
  41589a:	sbb    DWORD PTR gs:[ebp-0x6959010d],ebx
  4158a1:	iret   
  4158a2:	mov    ebx,0x5bef60f1
  4158a7:	jno    0x415896
  4158a9:	cmp    ebx,DWORD PTR [esi]
  4158ab:	cld    
  4158ac:	pushf  
  4158ad:	jg     0x4158a9
  4158af:	mov    eax,0x917425cc
  4158b4:	int3   
  4158b5:	cmp    al,0xc6
  4158b7:	lods   al,BYTE PTR ds:[esi]
  4158b8:	mov    ds:0xa4517740,al
  4158bd:	push   ebx
  4158be:	repnz pop ecx
  4158c0:	and    BYTE PTR [esi],0x45
  4158c3:	jecxz  0x415894
  4158c5:	outs   dx,BYTE PTR ds:[esi]
  4158c6:	jg     0x4158ad
  4158c8:	imul   ebx,DWORD PTR [ecx-0x16],0x12
  4158cc:	(bad)  
  4158cd:	mov    dl,0xa4
  4158cf:	(bad)  ds:0xcf86756a
  4158d5:	mov    WORD PTR [ebx],fs
  4158d7:	outs   dx,DWORD PTR ds:[esi]
  4158d8:	fisub  DWORD PTR [eax+0xd063c27]
  4158de:	test   BYTE PTR [eax-0x3],dl
  4158e1:	(bad)  
  4158e2:	ret    0x2230
  4158e5:	cmp    DWORD PTR [ecx-0x70271928],ebx
  4158eb:	aad    0xe
  4158ed:	stc    
  4158ee:	xchg   DWORD PTR [edx],esp
  4158f0:	aam    0x8d
  4158f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158f3:	mov    esp,0x31990197
  4158f8:	scas   eax,DWORD PTR es:[edi]
  4158f9:	pop    edx
  4158fa:	or     eax,0x53a34888
  4158ff:	jno    0x41594c
  415901:	cmp    eax,DWORD PTR ds:0xb9d21d5a
  415907:	and    BYTE PTR [ebx-0x2b],dh
  41590a:	dec    ebp
  41590b:	ss push eax
  41590d:	pop    esi
  41590e:	retf   
  41590f:	ficom  WORD PTR ds:0x12208fb2
  415915:	mov    eax,ds:0x4fec9773
  41591a:	daa    
  41591b:	cmp    ecx,DWORD PTR [esi+0x5e69f6b6]
  415921:	ss mov bh,0xa8
  415924:	inc    ebp
  415925:	jae    0x41590d
  415927:	or     DWORD PTR [eax+0x63],ebp
  41592a:	mov    cl,0x7b
  41592c:	push   ds
  41592d:	(bad)  
  41592e:	pop    ebp
  41592f:	or     BYTE PTR [esi+0x7ed3baa],cl
  415935:	fwait
  415936:	bound  edx,QWORD PTR [ebp+0x28da66fe]
  41593c:	ds inc eax
  41593e:	mov    edx,0x6c9d1c78
  415943:	out    0xbd,al
  415945:	pushf  
  415946:	cld    
  415947:	jmp    0x41594f
  415949:	push   ecx
  41594a:	xor    bh,bh
  41594c:	mov    dh,0xc2
  41594e:	(bad)  
  41594f:	and    BYTE PTR [eax],dh
  415951:	mov    eax,0x9a78915a
  415956:	jae    0x415994
  415958:	cwde   
  415959:	or     eax,DWORD PTR [edi]
  41595b:	cmp    eax,0xf9e363e1
  415960:	push   0x6aae87e
  415965:	xor    eax,0x8905a7c6
  41596a:	fwait
  41596b:	mov    edi,0x19c1579f
  415970:	mov    dh,0x1
  415972:	rol    BYTE PTR [esi],cl
  415974:	mov    ch,0x90
  415976:	mov    edi,0x5cce6645
  41597b:	in     al,dx
  41597c:	mov    esp,DWORD PTR [ecx]
  41597e:	pushf  
  41597f:	xchg   ecx,eax
  415980:	icebp  
  415981:	retf   0xba74
  415984:	jle    0x4159e5
  415986:	arpl   WORD PTR [eax-0x2709e7bc],ax
  41598c:	and    edx,esi
  41598e:	ins    BYTE PTR es:[edi],dx
  41598f:	add    edi,DWORD PTR [edx+0x3dd038b8]
  415995:	xor    esp,ebp
  415997:	pop    es
  415998:	int    0x9d
  41599a:	push   es
  41599b:	pop    edi
  41599c:	mov    DWORD PTR [edi+0x3ef875c2],eax
  4159a2:	pop    eax
  4159a3:	sbb    al,0x33
  4159a5:	in     eax,0xfa
  4159a7:	repz push eax
  4159a9:	mov    dh,0x4a
  4159ab:	mov    esi,0x1f2dd95d
  4159b0:	mov    ecx,0x8b2b8d8d
  4159b5:	pop    edx
  4159b6:	iret   
  4159b7:	mov    ebp,0xffd81bfc
  4159bc:	iret   
  4159bd:	pushf  
  4159be:	inc    ecx
  4159bf:	into   
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42826b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x4283a7,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42823b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42819b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282ff
  415a48:	cmp    DWORD PTR ds:0x42823b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ef4
  415a74:	mov    edi,DWORD PTR ds:0x4281cf
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281ef
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428187
  415a8f:	and    DWORD PTR ds:0x4283b3,edx
  415a95:	xor    DWORD PTR ds:0x428253,0x17b
  415a9f:	sbb    DWORD PTR ds:0x428307,ecx
  415aa5:	adc    DWORD PTR ds:0x42817b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428183
  415ac7:	xor    DWORD PTR ds:0x4282af,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281ff
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282bb
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428393,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42825f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281df
  415b25:	mov    edx,DWORD PTR ds:0x42822f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42839f,0x0
  415b3a:	not    DWORD PTR ds:0x428323
  415b40:	mov    DWORD PTR ds:0x42827b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428173,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428383,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42839f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42816b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e8c
  415b83:	add    DWORD PTR ds:0x42837b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42832f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282fb
  415ba0:	adc    DWORD PTR ds:0x428337,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42818f,0x0
  415bb5:	mov    DWORD PTR ds:0x428187,0x74bf
  415bbf:	mov    DWORD PTR ds:0x428307,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42818f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428267
  415bef:	call   DWORD PTR ds:0x428e90
  415bf5:	sub    edi,DWORD PTR ds:0x4283b3
  415bfb:	sbb    DWORD PTR ds:0x428337,ecx
  415c01:	and    edx,DWORD PTR ds:0x4281a7
  415c07:	mov    edi,DWORD PTR ds:0x42824f
  415c0d:	and    DWORD PTR ds:0x42818b,edi
  415c13:	or     DWORD PTR ds:0x428183,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281b3
  415c23:	mov    edx,DWORD PTR ds:0x42833b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42837f,0x0
  415c38:	mov    DWORD PTR ds:0x4283ab,ebx
  415c3e:	mov    DWORD PTR ds:0x42817f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42819b,edx
  415c4f:	cmp    DWORD PTR ds:0x42837f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42831b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428de0
  415c88:	mov    edi,DWORD PTR ds:0x4281d7
  415c8e:	mov    edx,DWORD PTR ds:0x42835f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428337,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42824f
  415cab:	mov    eax,ds:0x4223e8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x422608
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42839b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42828b
  415cd7:	mov    ebx,DWORD PTR ds:0x4283b3
  415cdd:	mov    DWORD PTR ds:0x428253,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42838b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42839b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428de4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428277
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42828f,0x428273
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42831f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428337,0x0
  415d58:	mov    DWORD PTR ds:0x428293,0x5216
  415d62:	not    DWORD PTR ds:0x42826b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42828b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x4282ab,ebx
  415d82:	cmp    DWORD PTR ds:0x428337,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280cb
  415d94:	push   0x428079
  415d99:	call   DWORD PTR ds:0x428de8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42828f
  415dab:	sbb    DWORD PTR ds:0x4283b3,edx
  415db1:	or     DWORD PTR ds:0x428393,ebx
  415db7:	sbb    DWORD PTR ds:0x4282b3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42832f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42816f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428167,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x4281ab,0x428173
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x4281ab,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42837f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428287,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282b3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42825f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42828f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428317,0x42819f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428183,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42832f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42819f,0x1988
  415e9d:	mov    DWORD PTR ds:0x4282a7,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428183,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428dec
  415ec4:	or     DWORD PTR ds:0x428243,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42837b,0x174
  415ede:	mov    DWORD PTR ds:0x42839f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42839b
  415eee:	add    edx,DWORD PTR ds:0x42817f
  415ef4:	mov    DWORD PTR ds:0x42839b,edx
  415efa:	or     DWORD PTR ds:0x428387,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428337
  415f06:	or     DWORD PTR ds:0x428297,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x4282a7,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42832f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428163,0x0
  415f3b:	mov    DWORD PTR ds:0x428187,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428387
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428327,ebx
  415f59:	cmp    DWORD PTR ds:0x428163,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ef8
  415f91:	xor    DWORD PTR ds:0x4283b7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428293
  415f9d:	sub    DWORD PTR ds:0x42824f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42838b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428333
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428383,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42819b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42819b
  415fdc:	add    DWORD PTR ds:0x428283,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42824f,0x0
  415fec:	mov    DWORD PTR ds:0x4283a3,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283b7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428383,0x1cd3
  416015:	mov    DWORD PTR ds:0x42817f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42824f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428efc
  416037:	add    DWORD PTR ds:0x428183,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428327,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42825f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428257
  41605c:	adc    DWORD PTR ds:0x42827b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x4283ab,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428317,0x42828f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42819f,0x0
  416089:	mov    DWORD PTR ds:0x428337,0x1e83
  416093:	mov    DWORD PTR ds:0x428393,edx
  416099:	movzx  ecx,WORD PTR ds:0x42826b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x4281a3
  4160ad:	cmp    DWORD PTR ds:0x42819f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428df0
  4160c6:	adc    DWORD PTR ds:0x42832b,edi
  4160cc:	or     DWORD PTR ds:0x42826b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42823f
  4160dc:	sub    DWORD PTR ds:0x42819b,ecx
  4160e2:	add    DWORD PTR ds:0x42828f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422568
  4160f5:	and    ecx,DWORD PTR ds:0x42827f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42838b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x4283a3,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42819b,0x0
  416120:	mov    DWORD PTR ds:0x428383,0x7b16
  41612a:	mov    DWORD PTR ds:0x42819f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42827b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42819b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428f00
  416159:	xor    DWORD PTR ds:0x428177,0x42816b
  416163:	sub    DWORD PTR ds:0x428163,0x42818f
  41616d:	sbb    DWORD PTR ds:0x42829f,0x428297
  416177:	and    DWORD PTR ds:0x42828f,0x56d1
  416181:	xor    DWORD PTR ds:0x42827b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42826f,0x4281ab
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42821f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x4281a3,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42819b,0x428277
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42829b,0x42825b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428327,0x42823b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428293,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	cs jo  0x416308
  416312:	push   0xfffffff4
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x27181814],bl
  41631c:	jle    0x4162b5
  41631e:	sub    BYTE PTR ds:0x87dd50ff,cl
  416324:	into   
  416325:	and    eax,0x527ccff9
  41632a:	cdq    
  41632b:	mov    al,ds:0xaffb4200
  416330:	and    al,0x29
  416332:	xor    al,cl
  416334:	inc    eax
  416335:	adc    edi,DWORD PTR [esi+ebx*2]
  416338:	into   
  416339:	bound  ebx,QWORD PTR [ecx+eax*1]
  41633c:	mov    WORD PTR [eax-0x4a],?
  41633f:	or     cl,BYTE PTR [eax+0x4a01c67d]
  416345:	add    BYTE PTR [edi-0x58],dl
  416348:	jbe    0x4162e7
  41634a:	lods   al,BYTE PTR ds:[esi]
  41634b:	shl    BYTE PTR [eax-0x6f],1
  41634e:	sbb    BYTE PTR [edx],bh
  416350:	fist   WORD PTR [edi-0x4a1cb792]
  416356:	pusha  
  416357:	std    
  416358:	aam    0xef
  41635a:	xor    DWORD PTR [esi-0x73],esi
  41635d:	inc    ebx
  41635e:	mov    eax,0x2f6917ae
  416363:	sbb    al,0xc5
  416365:	test   DWORD PTR [edx-0x7e],ebp
  416368:	push   si
  41636a:	pop    DWORD PTR [esp+edx*4-0x62]
  41636e:	cmp    ah,BYTE PTR [esi]
  416370:	sub    DWORD PTR [esp+ebx*4-0x6b],esi
  416374:	sbb    eax,0x71bcb718
  416379:	push   0xda3e27a9
  41637e:	cmc    
  41637f:	inc    esp
  416380:	xor    ebp,edx
  416382:	xchg   edi,eax
  416383:	(bad)  
  416384:	xor    edi,esp
  416386:	sbb    eax,0x561ce656
  41638b:	test   BYTE PTR [ecx+eiz*2-0x522e10d0],dl
  416392:	jp     0x416351
  416394:	pop    edi
  416395:	cdq    
  416396:	pop    ecx
  416397:	mov    ah,ch
  416399:	cmp    eax,0xbaee0a55
  41639e:	out    dx,al
  41639f:	sbb    dh,BYTE PTR [ebx]
  4163a1:	dec    ebp
  4163a2:	call   0x7adc0296
  4163a7:	cmp    ch,BYTE PTR [eax-0x2b]
  4163aa:	rol    ebx,1
  4163ac:	push   edi
  4163ad:	pushf  
  4163ae:	leave  
  4163af:	mov    eax,0x3f66209a
  4163b4:	or     al,0xe1
  4163b6:	adc    ebp,DWORD PTR [ebx]
  4163b8:	lds    edi,FWORD PTR [esp+0xc]
  4163bc:	out    0x27,al
  4163be:	jnp    0x4163b5
  4163c0:	inc    ebp
  4163c1:	push   esi
  4163c2:	lds    edx,FWORD PTR [ebp-0x462f67d6]
  4163c8:	push   ds
  4163c9:	gs dec ebx
  4163cb:	dec    esi
  4163cc:	inc    edx
  4163cd:	mov    esp,0x7e96c444
  4163d2:	sub    BYTE PTR [esi+0x36],ch
  4163d5:	pop    ecx
  4163d6:	stos   BYTE PTR es:[edi],al
  4163d7:	push   cs
  4163d8:	adc    al,0xfe
  4163da:	jle    0x41635f
  4163dc:	dec    esp
  4163dd:	ja     0x4163d9
  4163df:	fwait
  4163e0:	inc    edi
  4163e1:	test   BYTE PTR [ebx-0x48a747b5],bl
  4163e7:	int    0x92
  4163e9:	jb     0x41636f
  4163eb:	and    al,BYTE PTR [ecx+0x317ee8f]
  4163f1:	mov    es,WORD PTR [ebp+0x7b]
  4163f4:	dec    edi
  4163f5:	and    dl,BYTE PTR [ecx-0x21364255]
  4163fb:	sahf   
  4163fc:	push   0xe
  4163fe:	int    0xda
  416400:	jp     0x416402
  416402:	das    
  416403:	fcmove st,st(6)
  416405:	imul   esi,ebx,0x7bce1438
  41640b:	xlat   BYTE PTR ds:[ebx]
  41640c:	cmp    al,0x39
  41640e:	jp     0x4163e2
  416410:	popa   
  416411:	mov    ds,WORD PTR [ebx-0x147b4ad6]
  416417:	adc    ebx,ebx
  416419:	stc    
  41641a:	or     al,0x1e
  41641c:	out    0x49,al
  41641e:	xor    dh,BYTE PTR [eax]
  416420:	mov    eax,0x19a87e9e
  416425:	mov    eax,0x1c256796
  41642b:	and    al,0x22
  41642d:	fs in  al,dx
  41642f:	add    edi,DWORD PTR [edx-0x4044dacd]
  416435:	xchg   ecx,eax
  416436:	loop   0x416488
  416438:	jmp    0x4163bb
  41643a:	mov    bl,0xd6
  41643c:	jb     0x4164a6
  41643e:	mov    bh,ah
  416440:	sbb    BYTE PTR ds:0x782e50d7,ch
  416446:	sbb    ah,dh
  416448:	jb     0x4163da
  41644a:	sbb    eax,0x994f63eb
  41644f:	push   esp
  416450:	sbb    DWORD PTR ds:0xabd69814,0xcb333bdc
  41645a:	adc    al,BYTE PTR [esi]
  41645c:	sar    al,0xda
  41645f:	pop    esp
  416460:	(bad)  
  416461:	sub    dl,BYTE PTR [edi-0x31]
  416464:	cmp    BYTE PTR [ecx+0x70521ddd],dl
  41646a:	inc    esi
  41646b:	sbb    ebp,DWORD PTR [ecx-0x6e3d2f6]
  416471:	stos   DWORD PTR es:[edi],eax
  416472:	mov    edx,0xfa7731a4
  416477:	cld    
  416478:	push   ss
  416479:	sub    al,0xd7
  41647b:	fistp  WORD PTR [ebx-0x38e669e4]
  416481:	xor    eax,0x437b3b71
  416486:	xchg   edi,eax
  416487:	cld    
  416488:	sbb    cl,bl
  41648a:	(bad)  
  41648b:	cmp    BYTE PTR [edi],al
  41648d:	loope  0x4164ad
  41648f:	push   es
  416490:	shr    BYTE PTR [ebx],0xc3
  416493:	or     DWORD PTR [esi-0x4a624f12],ecx
  416499:	jmp    0x4164b8
  41649b:	jnp    0x416452
  41649d:	sbb    ebp,DWORD PTR ss:[eax]
  4164a0:	xor    DWORD PTR [ebp-0x7d7e6b4e],edi
  4164a6:	idiv   BYTE PTR [ecx]
  4164a8:	into   
  4164a9:	mov    al,ah
  4164ab:	xlat   BYTE PTR ds:[ebx]
  4164ac:	xor    eax,0x54a699de
  4164b1:	jecxz  0x416500
  4164b3:	call   0xc935d748
  4164b8:	les    edx,FWORD PTR [ebx]
  4164ba:	jg     0x4164fc
  4164bc:	fisttp DWORD PTR [eax-0x5d]
  4164bf:	dec    esi
  4164c0:	push   ecx
  4164c1:	sbb    esp,DWORD PTR [ebx+0x39]
  4164c4:	add    BYTE PTR [edx],bl
  4164c6:	xchg   edi,eax
  4164c7:	arpl   WORD PTR [ebp+0x4aa20e65],cx
  4164cd:	inc    edx
  4164ce:	loope  0x4164d7
  4164d0:	xor    al,0x69
  4164d2:	sbb    DWORD PTR [ebx+0x6b570dda],edi
  4164d8:	push   edx
  4164d9:	xchg   edi,eax
  4164da:	push   ss
  4164db:	xor    bh,al
  4164dd:	xor    DWORD PTR [edx+0x50],esi
  4164e0:	cld    
  4164e1:	pusha  
  4164e2:	punpckldq mm6,DWORD PTR [edi]
  4164e5:	int    0xfb
  4164e7:	cdq    
  4164e8:	js     0x41654f
  4164ea:	lods   eax,DWORD PTR ds:[esi]
  4164eb:	js     0x416504
  4164ed:	adc    al,0x51
  4164ef:	das    
  4164f0:	aad    0xbe
  4164f2:	lock cld 
  4164f4:	fcom   QWORD PTR es:[eax]
  4164f7:	mov    ?,edx
  4164f9:	mov    dl,ch
  4164fb:	mov    DWORD PTR [esi-0x3],ebp
  4164fe:	adc    BYTE PTR [edi+0x784341c4],cl
  416504:	loop   0x416580
  416506:	hlt    
  416507:	and    ebp,esp
  416509:	cmc    
  41650a:	adc    eax,0x47e66287
  41650f:	jp     0x416491
  416511:	enter  0xa6f0,0xef
  416515:	int    0xa8
  416517:	xchg   edx,eax
  416518:	mov    BYTE PTR [ebx+0x2b],bh
  41651b:	or     ah,BYTE PTR [ecx]
  41651d:	outs   dx,DWORD PTR ds:[esi]
  41651e:	jae    0x4164cf
  416520:	sbb    BYTE PTR [ecx],cl
  416522:	imul   eax,DWORD PTR [ebp+ecx*2+0x4e],0xac19a106
  41652a:	add    bl,dh
  41652c:	stc    
  41652d:	or     ebp,ecx
  41652f:	mov    cl,0x3e
  416531:	test   DWORD PTR [edx-0x2f],esp
  416534:	jnp    0x416590
  416536:	or     edx,DWORD PTR [edi+0xd]
  416539:	xor    al,0x34
  41653b:	mov    al,0x3b
  41653d:	xchg   esi,eax
  41653e:	fsubr  DWORD PTR [ebx+0x61]
  416541:	pop    esi
  416542:	ret    0x7819
  416545:	das    
  416546:	out    dx,eax
  416547:	cmp    BYTE PTR [esi],ch
  416549:	or     eax,0xdb0aae75
  41654e:	pop    eax
  41654f:	loopne 0x416561
  416551:	stc    
  416552:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416554:	imul   ecx,edi,0x5f
  416557:	push   0x6e
  416559:	adc    esp,eax
  41655b:	lock or esi,edi
  41655e:	xor    eax,edi
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422598
  416605:	mov    edi,0x4224de
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422598
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp-0x4806a890]
  416729:	jl     0x4167a2
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx-0x38e7e7ec],bl
  416733:	pop    edx
  416734:	cwde   
  416735:	loopne 0x41674e
  416737:	addr16 aaa 
  416739:	xlat   BYTE PTR ds:[ebx]
  41673a:	inc    esi
  41673b:	ja     0x416789
  41673d:	stos   BYTE PTR es:[edi],al
  41673e:	mov    al,0x2f
  416740:	jbe    0x4166c5
  416742:	stos   DWORD PTR es:[edi],eax
  416743:	mov    al,0xa9
  416745:	xor    eax,0xa91d97f9
  41674a:	sub    al,0x3f
  41674c:	test   al,0x98
  41674e:	dec    ebp
  41674f:	mov    DWORD PTR [edx],edi
  416751:	iret   
  416752:	sub    BYTE PTR [edx],cl
  416754:	(bad)  
  416755:	and    DWORD PTR [esi-0x78],edx
  416758:	pop    edx
  416759:	(bad)  
  41675a:	mov    ?,WORD PTR [ecx-0x76]
  41675d:	cmp    DWORD PTR [eax-0x58],edx
  416760:	in     al,dx
  416761:	or     al,0x8a
  416763:	stos   DWORD PTR es:[edi],eax
  416764:	pop    ebx
  416765:	pusha  
  416766:	call   0x2e34:0x70fd7bae
  41676d:	sahf   
  41676e:	jp     0x4167a1
  416770:	and    esi,DWORD PTR [ecx+0x62]
  416773:	ins    DWORD PTR es:[edi],dx
  416774:	leave  
  416775:	aas    
  416776:	jmp    0x416736
  416778:	and    edi,DWORD PTR [edx*8+0x5f5fbd41]
  41677f:	shr    BYTE PTR [edx+0x48],0xd2
  416783:	pop    esp
  416784:	not    DWORD PTR [edi]
  416786:	pop    es
  416787:	fldenv [edx-0x29ca01bc]
  41678d:	mov    esp,0x417e0f82
  416792:	icebp  
  416793:	icebp  
  416794:	cwde   
  416795:	xor    BYTE PTR [edx+esi*8+0x2a05842e],dh
  41679c:	add    DWORD PTR [edx+0x64],0xae3723fa
  4167a3:	js     0x416765
  4167a5:	fdivr  DWORD PTR [eax]
  4167a7:	mov    ecx,0xd07d5b49
  4167ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ad:	mov    esi,0x41aaf2dd
  4167b2:	lahf   
  4167b3:	adc    ebp,0xecb20a82
  4167b9:	cmp    esi,DWORD PTR [ebp-0xd]
  4167bc:	inc    edi
  4167bd:	inc    esi
  4167be:	mov    al,0x2f
  4167c0:	dec    esi
  4167c1:	ror    DWORD PTR [ecx+0x75a29cbb],1
  4167c7:	aas    
  4167c8:	mov    al,ds:0x5cc5c7fa
  4167cd:	gs test al,0xe2
  4167d0:	xor    eax,0xd2db2be
  4167d5:	dec    ebx
  4167d6:	mov    eax,ds:0x5781258e
  4167db:	nop
  4167dc:	pop    eax
  4167dd:	push   esi
  4167de:	rol    DWORD PTR [ebx-0x7adfd980],cl
  4167e4:	test   DWORD PTR [esi+0x24e9905b],edx
  4167ea:	frstor [ebx]
  4167ec:	mov    al,0xec
  4167ee:	aaa    
  4167ef:	xchg   ebp,eax
  4167f0:	(bad)  
  4167f1:	fist   WORD PTR [eax+eiz*2+0x21]
  4167f5:	mov    edx,0x245918ee
  4167fa:	xor    ch,bh
  4167fc:	jo     0xcf459b7
  416802:	clc    
  416803:	(bad)  
  416804:	sti    
  416805:	inc    ebx
  416806:	call   0x7b1d:0x8d5443d4
  41680d:	and    ch,al
  41680f:	cs push eax
  416811:	cmp    DWORD PTR [edi+ebp*8-0x904fef8],0x9a0b5217
  41681c:	or     eax,0x9cb23df9
  416821:	pushf  
  416822:	or     DWORD PTR [ebp+0x12049c73],ebx
  416828:	shl    DWORD PTR ss:[ecx-0x3],cl
  41682c:	push   ss
  41682d:	xor    DWORD PTR [ebx],esi
  41682f:	stos   DWORD PTR es:[edi],eax
  416830:	addr16 push ebp
  416832:	dec    ebx
  416833:	pop    esi
  416834:	imul   esp,DWORD PTR [ecx],0xfffffffa
  416837:	push   0xfffffff6
  416839:	push   esp
  41683a:	nop
  41683b:	sub    ch,BYTE PTR [eax-0x35a7eb61]
  416841:	addr16 cli 
  416843:	stc    
  416844:	jae    0x416860
  416846:	out    0x7a,eax
  416848:	push   esi
  416849:	test   DWORD PTR [edi+0x19],ebx
  41684c:	jp     0x4168c6
  41684e:	daa    
  41684f:	inc    BYTE PTR [ebx-0x59]
  416852:	shl    DWORD PTR [edi*4+0x41b57e13],1
  416859:	test   al,0xe2
  41685b:	rol    BYTE PTR [ecx+0x48],1
  41685e:	retf   0xe61b
  416861:	xchg   DWORD PTR [eax+0x4cdb4cca],edi
  416867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416868:	sbb    edi,esi
  41686a:	pop    ds
  41686b:	mov    ecx,0x282bcaf5
  416870:	mov    ch,BYTE PTR [ecx]
  416872:	enter  0x3ed9,0x31
  416876:	sub    cl,BYTE PTR [edi-0x79]
  416879:	jns    0x416830
  41687b:	jbe    0x41688d
  41687d:	fnstsw ax
  41687f:	rcr    DWORD PTR [ebx],0xf9
  416882:	jmp    0x41680b
  416884:	xchg   ebp,eax
  416885:	stos   BYTE PTR es:[edi],al
  416886:	pop    edi
  416887:	mov    eax,ds:0x7a14a4ab
  41688c:	jl     0x4168ee
  41688e:	loop   0x41681e
  416890:	aam    0x33
  416892:	xchg   esi,eax
  416893:	jmp    0x4168d6
  416895:	push   ecx
  416896:	or     al,0x6f
  416898:	enter  0x2c42,0x38
  41689c:	jge    0x4168be
  41689e:	sub    ah,ch
  4168a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168a1:	xchg   esi,eax
  4168a2:	sub    BYTE PTR [esi+0x4a],bl
  4168a5:	jmp    0xc8155533
  4168aa:	sbb    eax,0x79023f86
  4168af:	mov    dl,0x7f
  4168b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b2:	aaa    
  4168b3:	cmp    eax,0xded7e27e
  4168b8:	mov    esi,0x4188d71c
  4168bd:	xor    al,0xc
  4168bf:	jo     0x41688e
  4168c1:	dec    ecx
  4168c2:	(bad)  
  4168c3:	cmp    al,0x46
  4168c5:	xchg   esp,eax
  4168c6:	icebp  
  4168c7:	sbb    edi,DWORD PTR ds:0xaf42c68e
  4168cd:	mov    bl,0xe7
  4168cf:	and    edx,DWORD PTR [esi-0x64]
  4168d2:	mov    ah,0xcf
  4168d5:	retf   
  4168d6:	fsub   DWORD PTR [eax]
  4168d8:	cmp    BYTE PTR [edx],bh
  4168da:	cmp    edi,0xffffffe7
  4168dd:	xor    eax,0x4ab03791
  4168e2:	mov    ecx,0xa3814da5
  4168e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e8:	sub    eax,edx
  4168ea:	repz add DWORD PTR [ecx-0x797a8450],ecx
  4168f1:	or     DWORD PTR [edx+0x4e2ba308],esp
  4168f7:	xchg   edx,eax
  4168f8:	mov    bh,0x5d
  4168fa:	adc    DWORD PTR [ecx-0x4378f9cf],edi
  416900:	add    bl,BYTE PTR [ebx+0xc28ca12]
  416906:	pushf  
  416907:	fstp   DWORD PTR [esi-0x40]
  41690a:	out    0x56,eax
  41690c:	cdq    
  41690d:	and    DWORD PTR [edx+eax*2+0x1f899af7],edi
  416914:	xor    al,BYTE PTR [edi+0x5c]
  416917:	sbb    BYTE PTR [edx-0x7a7bb7f6],ch
  41691d:	push   0xde6be41b
  416922:	(bad)  
  416923:	or     al,0x1
  416925:	fild   DWORD PTR [ebx-0x4d]
  416928:	cmp    BYTE PTR [ebp-0xfebea36],0xcb
  41692f:	push   0xdb6d4a01
  416934:	push   eax
  416935:	shl    BYTE PTR [ebp+0x9],cl
  416938:	call   FWORD PTR [edx-0x6925f755]
  41693e:	cwde   
  41693f:	add    BYTE PTR [edi-0x32],bh
  416942:	dec    eax
  416943:	dec    edx
  416944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416945:	add    edx,DWORD PTR [edx]
  416947:	lods   al,BYTE PTR ds:[esi]
  416948:	xchg   BYTE PTR [ebx+0x3693bd],dh
  41694e:	mov    edi,0x573ee8c8
  416953:	lahf   
  416954:	shl    BYTE PTR [edx],cl
  416956:	aas    
  416957:	ds xchg ebx,eax
  416959:	jle    0x416970
  41695b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41695c:	adc    BYTE PTR [eax],0x12
  41695f:	sbb    BYTE PTR [eax],dh
  416961:	push   edx
  416962:	xor    bh,BYTE PTR [ebp-0x53]
  416965:	and    BYTE PTR [edx-0x1d],0xae
  416969:	dec    eax
  41696a:	(bad)  
  41696b:	and    al,0xc6
  41696d:	inc    esp
  41696e:	outs   dx,BYTE PTR ds:[esi]
  41696f:	mov    ecx,edi
  416971:	push   edx
  416972:	ret    0xb1da
  416975:	lea    eax,[ebp-0x2]
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x7edd590a
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x49e7e7ec],bl
  4169ac:	fstp   QWORD PTR [ebx]
  4169ae:	stc    
  4169af:	out    0xab,al
  4169b1:	mov    edx,0x86b7206
  4169b6:	jbe    0x4169bd
  4169b8:	test   BYTE PTR [ebx-0x71],bl
  4169bb:	mov    al,ds:0xdcc875e0
  4169c0:	dec    esp
  4169c1:	mov    esi,0xec8acc8f
  4169c6:	xchg   esi,eax
  4169c7:	xor    al,0x15
  4169c9:	call   0x40ce713b
  4169ce:	jmp    0xc3c6:0xf3284f6
  4169d5:	cmp    cl,BYTE PTR [ebp+0x33]
  4169d8:	adc    esp,edi
  4169da:	ret    0xfd92
  4169dd:	inc    esi
  4169de:	cmp    edi,DWORD PTR [ecx-0x57]
  4169e1:	mov    edi,ebp
  4169e3:	pop    eax
  4169e4:	inc    edx
  4169e5:	in     al,0x81
  4169e7:	fwait
  4169e8:	or     ch,dh
  4169ea:	stos   DWORD PTR es:[edi],eax
  4169eb:	dec    edi
  4169ec:	cmp    bl,BYTE PTR [ebx+0x72]
  4169ef:	pop    ebp
  4169f0:	in     eax,dx
  4169f1:	push   es
  4169f2:	add    al,0x14
  4169f4:	jmp    FWORD PTR [ebp-0x15964681]
  4169fa:	pop    ebp
  4169fb:	adc    al,0x1f
  4169fd:	jmp    0x6d2c119
  416a02:	je     0x416a06
  416a04:	inc    ebx
  416a05:	inc    ecx
  416a06:	pop    eax
  416a07:	pusha  
  416a08:	and    cl,BYTE PTR [ebp-0x5ca43d81]
  416a0e:	inc    esp
  416a0f:	ss and al,0x22
  416a12:	dec    ecx
  416a13:	idiv   BYTE PTR [ecx+0x76495730]
  416a19:	in     eax,0x64
  416a1b:	and    BYTE PTR [edi-0x54],0x4f
  416a1f:	les    ebp,FWORD PTR [ebx+eiz*4+0x69991cc9]
  416a26:	xchg   ebx,eax
  416a27:	pop    ds
  416a28:	dec    esi
  416a29:	inc    eax
  416a2a:	invd   
  416a2c:	mov    dl,0x29
  416a2e:	push   es
  416a2f:	dec    BYTE PTR [ecx]
  416a31:	push   esp
  416a32:	mov    bh,dh
  416a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a35:	jae    0x416aad
  416a37:	test   DWORD PTR [edx+edi*4+0x1e691099],ecx
  416a3e:	popa   
  416a3f:	dec    ecx
  416a40:	mov    ebp,0x6fe83399
  416a45:	xor    BYTE PTR [eax],ah
  416a47:	pop    ecx
  416a48:	out    dx,eax
  416a49:	les    eax,FWORD PTR [ecx-0x18]
  416a4c:	retf   0x3277
  416a4f:	mov    WORD PTR [ebx+eiz*8+0x21],?
  416a53:	xor    ebx,DWORD PTR [edi]
  416a55:	mov    ds:0x86c2772d,al
  416a5a:	cdq    
  416a5b:	adc    dh,BYTE PTR [eax]
  416a5d:	inc    esp
  416a5e:	cmp    DWORD PTR [eax+edx*8-0x8],ebp
  416a62:	push   cs
  416a63:	je     0x416a75
  416a65:	xor    BYTE PTR [edi+0x58],dh
  416a68:	stos   BYTE PTR es:[edi],al
  416a69:	ror    DWORD PTR [ebp+0x7b4403fe],cl
  416a6f:	int3   
  416a70:	adc    bh,BYTE PTR [ebx+esi*8+0x3a]
  416a74:	fsub   st,st(6)
  416a76:	daa    
  416a77:	inc    ebx
  416a78:	aaa    
  416a79:	mov    dh,0xfa
  416a7b:	dec    edx
  416a7c:	les    ebx,FWORD PTR [ecx]
  416a7e:	(bad)  
  416a7f:	ret    0x1d8d
  416a82:	(bad)
  416a85:	icebp  
  416a86:	(bad)  
  416a87:	or     eax,0xa84035f9
  416a8c:	push   ebp
  416a8d:	int3   
  416a8e:	sbb    eax,0x7e6b5ee5
  416a93:	mov    esi,0x7ef3710a
  416a98:	xchg   edi,eax
  416a99:	dec    esi
  416a9a:	repnz fimul WORD PTR [eax-0x14]
  416a9e:	shl    DWORD PTR [edi+ebp*1+0x6c],cl
  416aa2:	adc    edi,ebp
  416aa4:	jb     0x416a82
  416aa6:	xor    eax,esp
  416aa8:	xor    al,0xac
  416aaa:	pop    edi
  416aab:	push   edx
  416aac:	mov    dh,0x69
  416aae:	xor    DWORD PTR [ebp-0x51],ecx
  416ab1:	imul   DWORD PTR [ebx]
  416ab3:	out    dx,al
  416ab4:	ret    0x203e
  416ab7:	xchg   ebp,eax
  416ab8:	inc    ebp
  416ab9:	mov    WORD PTR [esi],cs
  416abb:	stos   BYTE PTR es:[edi],al
  416abc:	loop   0x416a91
  416abe:	mov    bl,BYTE PTR [edx+ebp*1+0x6c261821]
  416ac5:	shl    DWORD PTR [ebx],cl
  416ac7:	sahf   
  416ac8:	xor    DWORD PTR [ebx],eax
  416aca:	mov    bl,0x2d
  416acc:	rol    edi,1
  416ace:	popf   
  416acf:	imul   edx,DWORD PTR [eax],0xfffffffe
  416ad2:	cwde   
  416ad3:	inc    edi
  416ad4:	sub    al,0xaf
  416ad6:	in     eax,0x1f
  416ad8:	jns    0x416acd
  416ada:	popf   
  416adb:	or     al,0xe6
  416add:	sbb    eax,0xa2c0228f
  416ae2:	outs   dx,BYTE PTR ds:[esi]
  416ae3:	pushf  
  416ae4:	pop    ebp
  416ae5:	(bad)  
  416ae6:	sbb    DWORD PTR [edi-0x29],esp
  416ae9:	inc    ecx
  416aea:	jmp    0x416a9c
  416aec:	jae    0x416aa7
  416aee:	jmp    0xfd9a41c6
  416af3:	sbb    DWORD PTR [edx-0x1d6dc467],ebx
  416af9:	stos   DWORD PTR es:[edi],eax
  416afa:	jo     0x416a7c
  416afc:	inc    esp
  416afd:	jno    0x416adb
  416aff:	jg     0x416ab8
  416b01:	scas   eax,DWORD PTR es:[edi]
  416b02:	ins    BYTE PTR es:[edi],dx
  416b03:	call   0xeacfdb03
  416b08:	add    BYTE PTR [ebx+0x51],bl
  416b0b:	cmp    eax,0xfaa6698c
  416b10:	dec    edx
  416b11:	call   0xfb86:0x657ebe1d
  416b18:	sub    eax,0xe8a806d3
  416b1d:	mov    ebx,DWORD PTR [ebx]
  416b1f:	xor    ebx,esi
  416b21:	ret    0xbdd7
  416b24:	loopne 0x416b20
  416b26:	add    ah,BYTE PTR [ecx+0x1f]
  416b29:	mov    bl,0x78
  416b2b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416b2d:	adc    al,0xa8
  416b2f:	inc    ecx
  416b30:	push   0x2f96e055
  416b35:	push   esi
  416b36:	xor    ch,ch
  416b38:	and    bl,ch
  416b3a:	cli    
  416b3b:	fild   QWORD PTR [esp+esi*1-0x1202e088]
  416b42:	xchg   edx,eax
  416b43:	mov    eax,0xe101165c
  416b48:	inc    esi
  416b49:	mov    esi,0x2afe5599
  416b4e:	pop    ecx
  416b4f:	sbb    eax,ebp
  416b51:	xchg   edi,ecx
  416b53:	mov    bl,0x7a
  416b55:	pop    edx
  416b56:	or     eax,0x6ad0cde5
  416b5b:	mov    ds:0xd5831571,eax
  416b60:	fldcw  WORD PTR [edi]
  416b62:	and    BYTE PTR [edi],0x74
  416b65:	rcl    DWORD PTR [ebp+0x25],cl
  416b68:	xchg   ecx,eax
  416b69:	pop    eax
  416b6a:	repz lock shl DWORD PTR [ebp+0x48],1
  416b6f:	xchg   edx,eax
  416b70:	fdiv   DWORD PTR [edx+0x2aa25e1c]
  416b76:	mov    ah,0xe
  416b78:	dec    ecx
  416b79:	adc    BYTE PTR [ecx-0x5a8fbea7],bl
  416b7f:	add    al,0xbd
  416b81:	popw   ds
  416b83:	inc    ebp
  416b84:	lahf   
  416b85:	(bad)  
  416b86:	push   0xffffffb8
  416b88:	or     eax,0x82158e12
  416b8d:	js     0x416bf6
  416b8f:	ss fcmovbe st,st(3)
  416b92:	call   FWORD PTR [ebx-0x7b]
  416b95:	out    dx,eax
  416b96:	or     ch,BYTE PTR [ebx]
  416b98:	jae    0x416bab
  416b9a:	inc    dh
  416b9c:	or     eax,0x8c56b6c3
  416ba1:	fistp  DWORD PTR [ebp-0x57]
  416ba4:	add    eax,0xfb0552bb
  416ba9:	lds    ebp,FWORD PTR [eax-0x366e6e63]
  416baf:	push   0x55fc18c9
  416bb4:	push   es
  416bb5:	ss mov edx,0x12cc30db
  416bbb:	mov    eax,0xacd6c0dd
  416bc0:	das    
  416bc1:	jmp    0xf56a4b6a
  416bc6:	mov    WORD PTR [ecx],es
  416bc8:	jge    0x416c1d
  416bca:	jmp    0x9c9e07f6
  416bcf:	sti    
  416bd0:	or     BYTE PTR [ebp+0x5f],al
  416bd3:	jns    0x416b8c
  416bd5:	out    dx,al
  416bd6:	mov    esp,0x2b942de3
  416bdb:	pop    ecx
  416bdc:	mov    ebp,0xd609151f
  416be1:	and    eax,0xc24c376c
  416be6:	and    cl,BYTE PTR [ebp-0x11a834de]
  416bec:	add    al,0xab
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42825f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42838b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42823b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282b3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428313,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281fb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42823f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xcc
  416d7e:	cwde   
  416d7f:	daa    
  416d80:	stos   BYTE PTR es:[edi],al
  416d81:	jp     0x416d77
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    BYTE PTR [ecx+0x7b2756e0],dh
  416d8e:	inc    esi
  416d8f:	lea    ebp,[ebx+0x5f]
  416d92:	aas    
  416d93:	push   edx
  416d94:	sub    BYTE PTR [edi+0x75260a7d],bh
  416d9a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  416d9c:	mov    ds:0x7d08fbb8,eax
  416da1:	nop
  416da2:	xlat   BYTE PTR ds:[ebx]
  416da3:	and    al,0xac
  416da6:	das    
  416da7:	xchg   ecx,eax
  416da8:	lds    edi,FWORD PTR ds:0xef5416f3
  416dae:	dec    ebp
  416daf:	mov    ch,0xde
  416db1:	inc    esp
  416db2:	daa    
  416db3:	aam    0x10
  416db5:	ins    BYTE PTR es:[edi],dx
  416db6:	adc    al,0x13
  416db8:	mov    esi,0xb4e4d450
  416dbd:	inc    eax
  416dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dbf:	mov    esp,0x52b405ac
  416dc4:	out    dx,eax
  416dc5:	shr    DWORD PTR [eax+edi*4-0x5728e5d7],1
  416dcc:	imul   edi,DWORD PTR [eax-0x36],0xdcd4c19a
  416dd3:	scas   eax,DWORD PTR es:[edi]
  416dd4:	push   ebp
  416dd5:	jmp    ecx
  416dd7:	mov    ds,WORD PTR [esi+0x2bf5d5f3]
  416ddd:	imul   esi,DWORD PTR [esi-0x10cc2b89],0xd2a0d039
  416de7:	sar    BYTE PTR [eax+0x7f86903e],cl
  416ded:	cmp    al,0xf4
  416def:	mov    DWORD PTR [esi+0x44],ecx
  416df2:	sbb    al,0x91
  416df4:	sbb    DWORD PTR [ecx],ebp
  416df6:	mov    esp,DWORD PTR [eax+0x53f2cd83]
  416dfc:	aas    
  416dfd:	xor    eax,0xb28e55bb
  416e02:	ins    DWORD PTR es:[edi],dx
  416e03:	and    DWORD PTR [edi+0x680b63e1],esi
  416e09:	mov    eax,0x35a87483
  416e0e:	mov    ds:0xfe36194c,eax
  416e13:	nop    DWORD PTR [esi+0x54f93585]
  416e1a:	fs xchg ebp,eax
  416e1c:	add    BYTE PTR [esi+0x2d],dl
  416e1f:	jae    0x416dc0
  416e21:	sbb    BYTE PTR [edx-0x5f],ch
  416e24:	(bad)  
  416e25:	aam    0x80
  416e27:	jecxz  0x416e99
  416e29:	fstp   QWORD PTR [eax+0x610d9df4]
  416e2f:	scas   al,BYTE PTR es:[edi]
  416e30:	jmp    0x1df4e307
  416e35:	push   esi
  416e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e37:	and    edx,0x2e
  416e3a:	(bad)  
  416e3b:	and    bl,BYTE PTR [edi+ecx*2]
  416e3e:	retf   0xc71d
  416e41:	xor    DWORD PTR [ecx-0x2ce54bc2],edi
  416e47:	rol    DWORD PTR [eax+edx*8+0x24],1
  416e4b:	dec    ebp
  416e4c:	(bad)  
  416e4e:	ja     0x416e0e
  416e50:	cs inc ebx
  416e52:	jecxz  0x416ecb
  416e54:	mov    ebp,0xbd8b4c17
  416e59:	adc    al,0xdb
  416e5b:	es jl  0x416e38
  416e5e:	mov    al,ds:0x4435cdb9
  416e63:	sub    BYTE PTR [edx+0x7b],dl
  416e66:	aad    0xfe
  416e68:	sbb    eax,0x9e2af581
  416e6d:	mov    bl,0xc1
  416e6f:	mov    ds:0x61e18dc8,eax
  416e74:	dec    BYTE PTR [eax-0x161416e6]
  416e7a:	ror    DWORD PTR [ebx-0x56],1
  416e7d:	clc    
  416e7e:	or     BYTE PTR [edi+0x5090e539],dl
  416e84:	mov    dh,0xa0
  416e86:	sub    eax,0x7bef2f42
  416e8b:	adc    BYTE PTR [edi+0x72],ch
  416e8e:	jge    0x416e80
  416e90:	dec    ebx
  416e91:	cli    
  416e92:	push   ds
  416e93:	stos   DWORD PTR es:[edi],eax
  416e94:	shr    DWORD PTR [esi+0x31],1
  416e97:	pop    esi
  416e98:	popa   
  416e99:	in     al,0xc9
  416e9b:	or     eax,DWORD PTR [eax+0x11]
  416e9e:	mov    al,ds:0xfe38121
  416ea3:	push   esp
  416ea4:	fidivr WORD PTR [ebx-0x4b]
  416ea7:	retf   0x7278
  416eaa:	lods   al,BYTE PTR ds:[esi]
  416eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eac:	dec    ebx
  416ead:	cmp    esi,DWORD PTR [esi+0x8]
  416eb0:	(bad)  
  416eb1:	je     0x416eda
  416eb3:	mov    BYTE PTR [edx],al
  416eb5:	popf   
  416eb6:	mov    ds:0xe3dae9c7,eax
  416ebb:	inc    esi
  416ebc:	xor    al,0x9a
  416ebe:	inc    edx
  416ebf:	je     0x416ec5
  416ec1:	loop   0x416f37
  416ec3:	adc    BYTE PTR [ecx-0x2d888a0e],ch
  416ec9:	xchg   edx,eax
  416eca:	mov    dl,0xda
  416ecc:	push   eax
  416ecd:	data16 icebp 
  416ecf:	sub    al,BYTE PTR [ebx-0x514978e3]
  416ed5:	and    al,0x41
  416ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ed8:	(bad)
  416edb:	outs   dx,BYTE PTR ds:[esi]
  416edc:	xchg   esp,eax
  416edd:	dec    esp
  416ede:	mov    dh,0x1
  416ee0:	ins    BYTE PTR es:[edi],dx
  416ee1:	pop    ebx
  416ee2:	jecxz  0x416e73
  416ee4:	inc    esi
  416ee5:	adc    eax,0x7744b73e
  416eea:	adc    BYTE PTR [edx+eax*8-0x3a734397],al
  416ef1:	(bad)  
  416ef2:	out    0x64,eax
  416ef4:	sbb    eax,ecx
  416ef6:	in     al,0x3
  416ef8:	xchg   ebx,eax
  416ef9:	cmp    BYTE PTR [ebx-0xb],0x7e
  416efd:	dec    ebp
  416efe:	popa   
  416eff:	call   0x96a86c64
  416f04:	push   0xffffff92
  416f06:	(bad)  
  416f07:	ins    DWORD PTR es:[edi],dx
  416f08:	sub    al,0x76
  416f0a:	and    dh,BYTE PTR [ebx-0x56]
  416f0d:	mov    bh,BYTE PTR [ebx]
  416f0f:	sub    eax,0x7491f8b2
  416f14:	jnp    0x416ec0
  416f16:	data16 aas 
  416f18:	jo     0x416f11
  416f1a:	pop    edx
  416f1b:	js     0x416f8f
  416f1d:	cmp    esp,esp
  416f1f:	je     0x416eed
  416f21:	pushf  
  416f22:	mov    ah,0x4b
  416f24:	jno    0x416ed5
  416f26:	mov    dl,0xae
  416f28:	dec    ebp
  416f29:	sbb    ebx,DWORD PTR [ecx]
  416f2b:	pop    ebx
  416f2c:	inc    edi
  416f2d:	push   0x51
  416f2f:	int    0x4f
  416f31:	add    edx,DWORD PTR [ebx]
  416f33:	xchg   ebx,eax
  416f34:	lahf   
  416f35:	popf   
  416f36:	xor    eax,0x23f4ba86
  416f3b:	iret   
  416f3c:	test   DWORD PTR [ebx-0x446fac81],ebx
  416f42:	loopne 0x416f19
  416f44:	mov    ebp,0x10abe46f
  416f49:	or     al,0xf4
  416f4b:	fnsave [ecx-0x582d5bbc]
  416f51:	mov    dl,0xf6
  416f53:	into   
  416f54:	mov    ecx,0x552bbf04
  416f59:	in     al,0xa2
  416f5b:	cwde   
  416f5c:	shr    edx,cl
  416f5e:	fcmovne st,st(2)
  416f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f61:	or     al,0x9f
  416f63:	icebp  
  416f64:	shl    BYTE PTR ss:[eax-0x4926f6b6],cl
  416f6b:	repnz add ebp,DWORD PTR [eax+0x22]
  416f6f:	mov    edi,0xd4bbb23e
  416f74:	pop    ecx
  416f75:	ret    0xba5c
  416f78:	jno    0x416f3e
  416f7a:	inc    edx
  416f7b:	adc    eax,0xc9bd549
  416f80:	push   es
  416f81:	(bad)  
  416f82:	sbb    eax,0x2aa55c6
  416f87:	adc    DWORD PTR [ebx+0x52],ebp
  416f8a:	frstor [esi-0x29bc8ef]
  416f90:	sbb    DWORD PTR [eax+0x6f],edi
  416f93:	add    al,BYTE PTR [eax+eax*2-0x67]
  416f97:	xchg   ebp,eax
  416f98:	mov    gs,WORD PTR ds:[edi]
  416f9b:	in     al,0x98
  416f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f9e:	retf   
  416f9f:	adc    DWORD PTR [ecx],ebp
  416fa1:	ret    
  416fa2:	mov    WORD PTR ds:0xbb8f8414,ss
  416fa8:	lods   al,BYTE PTR ds:[esi]
  416fa9:	pop    ds
  416faa:	add    DWORD PTR [ebx+0x6bbbe6a1],ebp
  416fb0:	or     DWORD PTR [edx+0x13ac0792],eax
  416fb6:	xor    cl,bl
  416fb8:	sbb    ch,ah
  416fba:	imul   eax,DWORD PTR ds:0xdb9c844e,0xb0538c56
  416fc4:	xchg   ebp,eax
  416fc5:	pop    ebp
  416fc6:	fcomp  QWORD PTR [edx+0xbf166e5]
  416fcc:	lea    edx,[di+0x36]
  416fd0:	icebp  
  416fd1:	jle    0x417016
  416fd3:	xchg   ebx,eax
  416fd4:	enter  0x134f,0xcd
  416fd8:	in     eax,dx
  416fd9:	pop    ebp
  416fda:	add    al,0x39
  416fdc:	xor    esp,DWORD PTR [ecx]
  416fde:	call   0x4ab2:0x536dc4af
  416fe5:	aas    
  416fe6:	cmp    bl,BYTE PTR [esp+ecx*4-0x66040c0e]
  416fed:	cld    
  416fee:	push   esp
  416fef:	jae    0x417044
  416ff1:	adc    eax,0x560bddc3
  416ff6:	shr    BYTE PTR [ecx-0x21c54bae],0xb7
  416ffd:	outs   dx,BYTE PTR ds:[esi]
  416ffe:	push   ss
  416fff:	inc    ecx
  417000:	pop    eax
  417001:	cld    
  417002:	in     eax,0x5
  417004:	adc    al,0x94
  417006:	push   ebx
  417007:	pop    ss
  417008:	xchg   ebp,eax
  417009:	dec    ebx
  41700a:	or     BYTE PTR ds:0xeb41c8cf,dh
  417010:	push   esi
  417011:	cld    
  417012:	leave  
  417013:	inc    esi
  417014:	cmp    al,0xbf
  417016:	dec    edx
  417017:	fmul   st(5),st
  417019:	aaa    
  41701a:	add    BYTE PTR [edx-0x2853e223],dh
  417020:	or     BYTE PTR [esi+0x408c96d7],cl
  417026:	adc    al,0x8d
  417028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417029:	sub    ebp,DWORD PTR ds:0xde3bc05a
  41702f:	inc    eax
  417030:	xchg   ebp,eax
  417031:	mov    ecx,0xc2a31896
  417036:	pop    ebp
  417037:	push   esp
  417038:	shr    BYTE PTR [ecx-0x10ad61c],0xfc
  41703f:	cmp    esp,DWORD PTR [esi+0x4caaf8b1]
  417045:	icebp  
  417046:	test   eax,0x19b2fcdc
  41704c:	jo     0x416ff3
  41704e:	mov    edi,edi
  417050:	jae    0x41700a
  417052:	inc    edi
  417053:	cli    
  417054:	sahf   
  417055:	pushf  
  417056:	sub    BYTE PTR [edx+ecx*1-0x62666310],cl
  41705d:	xchg   esi,eax
  41705e:	and    DWORD PTR [edi+0x5e],edi
  417061:	imul   di,WORD PTR [edi+ecx*8],0x64
  417066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417067:	mov    ebp,?
  417069:	mov    ecx,0x9277eda8
  41706e:	sub    BYTE PTR ds:0x61c0dad9,0x17
  417075:	mov    ebp,ebx
  417077:	xor    dh,BYTE PTR [eax]
  417079:	mov    al,ds:0xebfd7c6c
  41707e:	addr16 retf 
  417080:	and    ecx,DWORD PTR [edi+0x23]
  417083:	and    eax,0xb35222a5
  417088:	sub    dh,BYTE PTR [edi]
  41708a:	add    esi,esi
  41708c:	scas   eax,DWORD PTR es:[edi]
  41708d:	popf   
  41708e:	rol    DWORD PTR [ecx-0x6d],1
  417091:	mov    edx,0x8eaa1628
  417096:	cmp    bl,BYTE PTR [esi]
  417098:	inc    edx
  417099:	fldz   
  41709b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709c:	xlat   BYTE PTR ds:[ebx]
  41709d:	push   ebp
  41709e:	mov    eax,ds:0x4069e5c8
  4170a3:	mov    BYTE PTR [edi],dl
  4170a5:	inc    esi
  4170a6:	js     0x417053
  4170a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xaae5c1ee
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [eax],ch
  41719f:	mov    ebp,0xd571293d
  4171a4:	xor    BYTE PTR [ebx],cl
  4171a6:	jge    0x417155
  4171a8:	adc    BYTE PTR [eax+0x6b],al
  4171ab:	adc    bh,cl
  4171ad:	fld    TBYTE PTR [edi-0x74a6d00f]
  4171b3:	dec    ebx
  4171b4:	fwait
  4171b5:	inc    ebx
  4171b6:	js     0x417213
  4171b8:	adc    DWORD PTR [ebx+0x65454a6b],ebx
  4171be:	in     eax,dx
  4171bf:	arpl   WORD PTR [ebx-0x28],ax
  4171c2:	mov    ebp,0xde1bfc1b
  4171c7:	xchg   edx,eax
  4171c8:	xchg   DWORD PTR ds:0x437e15b1,ebp
  4171ce:	fimul  DWORD PTR [edx]
  4171d0:	push   es
  4171d1:	les    eax,FWORD PTR fs:[esi-0x5e]
  4171d5:	cld    
  4171d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171d7:	jmp    0xba53:0x310b7410
  4171de:	call   0xbd44:0x51bfeae
  4171e5:	inc    esp
  4171e6:	push   esi
  4171e7:	and    dh,0xa7
  4171ea:	sbb    al,0x4c
  4171ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ed:	ja     0x417237
  4171ef:	xchg   edi,eax
  4171f0:	fcomp  DWORD PTR [ebx]
  4171f2:	add    DWORD PTR [edx-0x4fa14009],edi
  4171f8:	retf   0x6ff0
  4171fb:	push   esi
  4171fc:	dec    ebp
  4171fd:	leave  
  4171fe:	xchg   BYTE PTR [edx],ah
  417200:	xor    edi,DWORD PTR [edx-0x59]
  417203:	sbb    cl,ah
  417205:	repnz push 0x1b
  417208:	outs   dx,BYTE PTR ds:[esi]
  417209:	push   0x30369ab
  41720e:	sahf   
  41720f:	int3   
  417210:	sbb    bh,ah
  417212:	imul   BYTE PTR [ebp-0x7]
  417215:	daa    
  417216:	pop    es
  417217:	test   DWORD PTR [ebx],ebx
  417219:	sbb    DWORD PTR [ebx+0x26213895],ebp
  41721f:	xor    DWORD PTR [eax],0x3fc1876a
  417225:	lods   al,BYTE PTR ds:[esi]
  417226:	js     0x417200
  417228:	add    DWORD PTR [ebp-0x2],ecx
  41722b:	xor    al,0x6a
  41722d:	fwait
  41722e:	sbb    al,0x32
  417230:	mov    dl,0xc8
  417232:	in     al,dx
  417233:	pop    ss
  417234:	mov    eax,0xd7961a70
  417239:	inc    eax
  41723a:	test   BYTE PTR [esp+ebx*2-0x2f],0x7d
  41723f:	fist   WORD PTR [ecx+0x3f7c44b3]
  417245:	std    
  417246:	mov    WORD PTR [esi],gs
  417248:	in     eax,0x4d
  41724a:	pop    edi
  41724b:	shr    BYTE PTR [esi-0x26c25a79],0xb9
  417252:	inc    bx
  417254:	mov    ebx,0xfffd23cc
  417259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41725a:	test   BYTE PTR [ebx+eax*8],ch
  41725d:	lahf   
  41725e:	icebp  
  41725f:	mov    edx,DWORD PTR [ebx-0x63]
  417262:	mul    BYTE PTR [eax+0x5]
  417265:	(bad)  
  417266:	mov    al,ds:0x25e7c93e
  41726b:	mov    dl,BYTE PTR [edi+0x5247f0e0]
  417271:	jmp    0x72e58b8e
  417276:	ss fld st(4)
  417279:	dec    edx
  41727a:	cmp    edi,eax
  41727c:	loopne 0x417204
  41727e:	xchg   ebp,eax
  41727f:	push   eax
  417280:	push   eax
  417281:	daa    
  417282:	mov    dh,BYTE PTR [edx-0x4a]
  417285:	xor    ebx,DWORD PTR [edi]
  417287:	jbe    0x417297
  417289:	into   
  41728a:	adc    eax,0xc36a9727
  41728f:	pop    edx
  417290:	test   eax,0x110943bd
  417295:	jmp    0x417302
  417297:	adc    ebp,esp
  417299:	mov    bh,0x49
  41729b:	jae    0x41725d
  41729d:	mov    bl,0xa7
  41729f:	cmc    
  4172a0:	(bad)  
  4172a1:	lea    esp,[edx+0x406981b6]
  4172a7:	(bad)  
  4172a8:	jnp    0x417308
  4172aa:	lock xchg ebp,esp
  4172ad:	cli    
  4172ae:	pop    ss
  4172af:	mov    dl,BYTE PTR [eax+ecx*4+0x766b1e26]
  4172b6:	pushf  
  4172b7:	push   ds
  4172b8:	mov    ebx,0xde402832
  4172bd:	add    dh,bh
  4172bf:	clc    
  4172c0:	xor    BYTE PTR [ecx],bl
  4172c2:	ins    DWORD PTR es:[edi],dx
  4172c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c4:	mov    BYTE PTR [ebx-0x1e9bbd74],bh
  4172ca:	dec    edi
  4172cb:	fadd   QWORD PTR [ecx-0x49517025]
  4172d1:	jbe    0x41734a
  4172d3:	arpl   WORD PTR [edx],cx
  4172d5:	jp     0x4172f6
  4172d7:	(bad)  
  4172d8:	xchg   esp,eax
  4172d9:	imul   ecx,eax,0xffffffa2
  4172dc:	shl    BYTE PTR [edx-0x2ff36e22],1
  4172e2:	adc    ch,BYTE PTR ds:0xaa939e2
  4172e8:	fadd   st(7),st
  4172ea:	mov    al,0x57
  4172ec:	mov    bh,0x1c
  4172ee:	stos   DWORD PTR es:[edi],eax
  4172ef:	(bad)  
  4172f0:	ret    0x9acb
  4172f3:	inc    esi
  4172f4:	rol    BYTE PTR [edi],cl
  4172f6:	pop    edi
  4172f7:	repnz mov esp,DWORD PTR [edx]
  4172fa:	jl     0x41729c
  4172fc:	dec    esp
  4172fd:	push   ss
  4172fe:	ficom  WORD PTR ds:0xb329b85d
  417304:	fsubrp st(1),st
  417306:	lahf   
  417307:	mov    esi,0x133e06b8
  41730c:	mov    bh,0xd7
  41730e:	dec    edx
  41730f:	test   al,0x4a
  417311:	(bad)  
  417312:	xchg   ecx,eax
  417313:	mov    ebp,0xa52e9a99
  417318:	and    ch,al
  41731a:	mov    eax,0x2c950483
  41731f:	dec    esi
  417320:	add    eax,0x81ac655e
  417325:	jg     0x4172f5
  417327:	cmp    ah,cl
  417329:	sub    BYTE PTR [edi],dh
  41732b:	inc    ebp
  41732c:	ds inc eax
  41732e:	push   edx
  41732f:	xchg   ebp,eax
  417330:	add    edx,DWORD PTR [eax]
  417332:	jnp    0x417380
  417334:	push   esp
  417335:	xlat   BYTE PTR ds:[ebx]
  417336:	mov    bh,0x4a
  417338:	xchg   edx,eax
  417339:	pop    esp
  41733a:	ins    DWORD PTR es:[edi],dx
  41733b:	stos   BYTE PTR es:[edi],al
  41733c:	or     al,0x2a
  41733e:	fbstp  TBYTE PTR [ecx]
  417340:	or     al,0xcb
  417342:	jecxz  0x41731e
  417344:	sub    eax,0xf1839221
  417349:	pop    eax
  41734a:	std    
  41734b:	add    edi,DWORD PTR [ebp+eiz*8-0x6dc7866a]
  417352:	xor    ch,BYTE PTR [esi-0x3]
  417355:	and    eax,0x9089261
  41735a:	mov    ebx,0x2f1e6d80
  41735f:	jmp    0x9623:0x15271dca
  417366:	jge    0x41732b
  417368:	fistp  DWORD PTR [esp+ecx*8]
  41736b:	and    al,0x6
  41736d:	arpl   WORD PTR [edi],ax
  41736f:	nop
  417370:	sti    
  417371:	pop    edx
  417372:	into   
  417373:	dec    eax
  417374:	dec    eax
  417375:	cmp    ecx,edx
  417377:	mov    bl,0x8f
  417379:	jmp    0xa97c:0x46c1a182
  417380:	push   es
  417381:	xchg   edi,eax
  417382:	rcl    BYTE PTR [edx+0x16],cl
  417385:	jge    0x4173bf
  417387:	dec    ebp
  417388:	sub    al,0xd3
  41738a:	pop    ebx
  41738b:	bound  edx,QWORD PTR [edx+0x16]
  41738e:	scas   eax,DWORD PTR es:[edi]
  41738f:	cmp    BYTE PTR [ebp-0x627c7f63],dh
  417395:	shl    DWORD PTR [edx+0x25b11f6a],cl
  41739b:	jae    0x417358
  41739d:	push   edi
  41739e:	or     DWORD PTR [eax-0x10755c35],esp
  4173a4:	adc    BYTE PTR [eax],bh
  4173a6:	ret    0x2045
  4173a9:	jb     0x4173ff
  4173ab:	xor    eax,0x4ad1a03b
  4173b0:	push   ss
  4173b1:	(bad)
  4173b6:	adc    al,BYTE PTR [ecx-0x205c4051]
  4173bc:	cmp    ebp,ebp
  4173be:	les    esp,FWORD PTR [edi]
  4173c0:	cmp    dl,BYTE PTR [ebp-0x4425ce76]
  4173c6:	mov    BYTE PTR [edi+eax*4+0x1f5df0f9],cl
  4173cd:	enter  0x9e0a,0x22
  4173d1:	les    esp,FWORD PTR [ecx-0x5]
  4173d4:	(bad)  
  4173d5:	sbb    esp,eax
  4173d7:	and    al,BYTE PTR [esi+0x47]
  4173da:	pop    esp
  4173db:	fstp   TBYTE PTR [edx]
  4173dd:	pusha  
  4173de:	(bad)  
  4173e0:	call   0x18b35e4e
  4173e5:	loope  0x417373
  4173e7:	(bad)  
  4173e8:	adc    al,0x72
  4173ea:	fs wbinvd 
  4173ed:	jge    0x41738c
  4173ef:	mov    eax,ds:0xb89761f4
  4173f4:	inc    edx
  4173f5:	sti    
  4173f6:	or     bl,BYTE PTR [edx]
  4173f8:	out    dx,eax
  4173f9:	loop   0x417442
  4173fb:	or     dh,BYTE PTR [esi+ecx*8+0x2e917ad0]
  417402:	mov    ebx,0x49efb74
  417407:	and    al,0xfc
  417409:	nop
  41740a:	dec    edx
  41740b:	je     0x41748a
  41740d:	mov    eax,0x1dc2bedb
  417412:	push   edi
  417413:	add    BYTE PTR [ebp-0x3ebc4e9],bh
  417419:	jge    0x4173c8
  41741b:	fdiv   DWORD PTR [edx-0x29]
  41741e:	sahf   
  41741f:	in     al,dx
  417420:	jbe    0x41740c
  417422:	adc    ecx,DWORD PTR [esi]
  417424:	lahf   
  417425:	pop    bx
  417427:	cmp    BYTE PTR [eax+ecx*1-0x4f],ah
  41742b:	cs stos BYTE PTR es:[edi],al
  41742d:	les    ebx,FWORD PTR [edx]
  41742f:	pop    eax
  417430:	(bad)  
  417431:	(bad)  
  417432:	out    dx,al
  417433:	dec    ebx
  417434:	jp     0x4173e1
  417436:	test   BYTE PTR [esp+0x0],0xfe
  41743b:	test   DWORD PTR [esi],eax
  41743d:	mov    ecx,0xa11318a3
  417442:	mov    bh,0xe2
  417444:	cwde   
  417445:	rcl    BYTE PTR [edx-0x68],cl
  417448:	mov    esi,0xd983ebeb
  41744d:	add    eax,0x7b192da7
  417452:	ins    BYTE PTR es:[edi],dx
  417453:	hlt    
  417454:	in     eax,0x63
  417456:	or     eax,0xd1ce3533
  41745b:	fimul  DWORD PTR [esi+0x11a137bb]
  417461:	sub    al,0xae
  417463:	pop    DWORD PTR [esi]
  417465:	adc    bh,dh
  417467:	xchg   ebp,eax
  417468:	jno    0x417492
  41746a:	ds mov gs,WORD PTR cs:[edx-0x42]
  41746f:	push   ecx
  417470:	out    dx,al
  417471:	or     eax,0xc2572ab9
  417476:	cli    
  417477:	adc    cl,BYTE PTR [ecx]
  417479:	add    esp,ebp
  41747b:	mov    ch,0xb9
  41747d:	sub    ecx,DWORD PTR [ebx]
  41747f:	add    esp,DWORD PTR [esi+0x74ee58e1]
  417485:	icebp  
  417486:	mov    edi,0x1dcb0736
  41748b:	outs   dx,BYTE PTR ds:[esi]
  41748c:	call   0x87b5:0xe2ce63fc
  417493:	pop    edi
  417494:	inc    ebx
  417495:	leave  
  417496:	adc    dh,BYTE PTR [esi]
  417498:	retf   
  417499:	and    BYTE PTR [edi-0x69],cl
  41749c:	pop    ebp
  41749d:	popa   
  41749e:	mov    dh,0x62
  4174a0:	push   ebx
  4174a1:	add    DWORD PTR [ebx-0x2941eeae],ecx
  4174a7:	xor    ax,di
  4174aa:	aam    0x2d
  4174ac:	inc    ebx
  4174ad:	scas   al,BYTE PTR es:[edi]
  4174ae:	ds aam 0x8a
  4174b1:	sub    BYTE PTR [edx+0x19],dh
  4174b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b5:	dec    edi
  4174b6:	xor    ah,BYTE PTR [esi]
  4174b8:	cdq    
  4174b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ba:	adc    bl,BYTE PTR [edx+0x335ab550]
  4174c0:	shr    DWORD PTR [ebx],0xd0
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223d4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e70
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223c0
  417502:	call   DWORD PTR ds:0x428e94
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e7c
  41750f:	mov    ecx,DWORD PTR ds:0x422788
  417515:	sub    DWORD PTR ds:0x42830f,0x42838b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [edx+ecx*2+0xabca73f]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x3846e7e8],bh
  41753e:	push   edx
  41753f:	loope  0x4174f9
  417541:	sub    al,0x8e
  417543:	je     0x4175b0
  417545:	mov    ah,0x2a
  417547:	add    eax,0xa12d40fd
  41754c:	in     al,0xf5
  41754e:	or     ch,BYTE PTR [edx]
  417550:	daa    
  417551:	fbstp  TBYTE PTR [ecx+0x3e]
  417554:	imul   esi,DWORD PTR [ecx+0x3e20e39],0x3b540745
  41755e:	add    eax,0x4201c67a
  417563:	inc    esp
  417564:	fdiv   QWORD PTR [ebp+0x550ada97]
  41756a:	out    dx,eax
  41756b:	mov    ebp,0x8cfead07
  417570:	add    al,0xfd
  417572:	cmc    
  417573:	je     0x41755d
  417575:	cli    
  417576:	jb     0x4175d9
  417578:	in     ax,dx
  41757a:	mov    eax,0xd7e1c087
  41757f:	push   0x3b
  417581:	sub    DWORD PTR [ecx],ebx
  417583:	dec    edi
  417584:	mov    eax,DWORD PTR [esi-0x13f05c5d]
  41758a:	in     al,0xea
  41758c:	aad    0x43
  41758e:	arpl   si,di
  417590:	addr16 and eax,0x6fd96fff
  417596:	lahf   
  417597:	shl    DWORD PTR [edx],0xee
  41759a:	xchg   esi,eax
  41759b:	retf   0x5e9
  41759e:	cmp    ebp,edi
  4175a0:	cmp    di,WORD PTR [esi]
  4175a3:	push   ds
  4175a4:	pop    edx
  4175a5:	jbe    0x41752b
  4175a7:	sub    eax,0x930dedb
  4175ac:	xchg   esi,eax
  4175ad:	aad    0xdb
  4175af:	add    cl,BYTE PTR [edi+0x6c]
  4175b2:	mov    ebp,0xff709fec
  4175b7:	pop    es
  4175b8:	popf   
  4175b9:	and    ecx,DWORD PTR [edx-0x3c]
  4175bc:	ss int 0xf4
  4175bf:	fsub   DWORD PTR [edi-0x7d]
  4175c2:	or     BYTE PTR [esi+edx*2-0x52414279],dh
  4175c9:	jne    0x417630
  4175cb:	or     esi,DWORD PTR [ebp+0x33f0fdd9]
  4175d1:	arpl   WORD PTR [ebx+ebp*1],di
  4175d4:	pop    edi
  4175d5:	dec    ebx
  4175d6:	daa    
  4175d7:	sbb    DWORD PTR [ebx],edx
  4175d9:	and    eax,0xadd3afb9
  4175de:	stc    
  4175df:	mov    al,0x2b
  4175e1:	scas   eax,DWORD PTR es:[edi]
  4175e2:	inc    esp
  4175e3:	push   ecx
  4175e4:	stos   DWORD PTR es:[edi],eax
  4175e5:	lods   al,BYTE PTR ds:[esi]
  4175e6:	mov    WORD PTR [ecx+ebp*1-0x2f],fs
  4175ea:	jno    0x4175eb
  4175ec:	mov    ds:0xd02134e0,eax
  4175f1:	add    ah,BYTE PTR [ecx-0x2a970a7]
  4175f7:	sbb    DWORD PTR [esi-0x5054b952],eax
  4175fd:	addr16 jo 0x417637
  417600:	push   ebp
  417601:	call   0xfc21:0x8afd995a
  417608:	adc    al,0xff
  41760a:	jb     0x41764e
  41760c:	jbe    0x41767a
  41760e:	pusha  
  41760f:	mov    bh,al
  417611:	stc    
  417612:	add    dl,bh
  417614:	pop    ecx
  417615:	popa   
  417616:	mov    edi,0xb6073642
  41761b:	xchg   esp,eax
  41761c:	(bad)  
  41761d:	shl    DWORD PTR [eax],cl
  41761f:	stos   DWORD PTR es:[edi],eax
  417620:	xor    eax,0xfa65c240
  417625:	cmp    ch,BYTE PTR [esi-0x2f4b535c]
  41762b:	fadd   DWORD PTR [edx]
  41762d:	xor    al,0xbf
  41762f:	push   ss
  417630:	sbb    dl,BYTE PTR [ecx+0x4f0af3f9]
  417636:	sti    
  417637:	je     0x417691
  417639:	sbb    DWORD PTR [ecx-0x36e798d1],ecx
  41763f:	frstor [ecx]
  417641:	(bad)  
  417642:	rcl    BYTE PTR [ecx+ecx*2-0x5],cl
  417646:	pushf  
  417647:	add    eax,0xe22b3414
  41764c:	lahf   
  41764d:	xor    esi,DWORD PTR [ebp+ecx*4+0x3c27edb6]
  417654:	jns    0x417685
  417656:	test   eax,0x86f640f4
  41765b:	sub    eax,0x1b0795ee
  417660:	lds    edx,FWORD PTR [esi-0xd]
  417663:	je     0x417667
  417665:	int    0xad
  417667:	je     0x4176bd
  417669:	lahf   
  41766a:	inc    esp
  41766b:	mov    edi,0x14176dde
  417670:	sbb    BYTE PTR [ebp-0x4315da8c],bh
  417676:	sbb    eax,0x797ef9c4
  41767b:	fsubr  QWORD PTR [ecx-0x445d74e6]
  417681:	push   esi
  417682:	lock in eax,0x8e
  417685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417686:	adc    BYTE PTR ds:0x4bf7478d,0xa5
  41768d:	cmp    al,BYTE PTR [ebx]
  41768f:	(bad)
  417692:	popa   
  417693:	pop    ebp
  417694:	sbb    bl,cl
  417696:	fcmovnu st,st(0)
  417698:	pop    edi
  417699:	cmc    
  41769a:	pop    ebp
  41769b:	retf   
  41769c:	or     esi,ebx
  41769e:	call   0x58cf:0xcc63972f
  4176a5:	fild   DWORD PTR [esi]
  4176a7:	aam    0xc4
  4176a9:	mov    esi,0xb79d0a16
  4176ae:	loop   0x417641
  4176b0:	xchg   ebp,eax
  4176b1:	das    
  4176b2:	inc    ebp
  4176b3:	dec    esp
  4176b4:	push   0xd612f722
  4176b9:	mov    ch,0x58
  4176bb:	faddp  st(5),st
  4176bd:	adc    DWORD PTR [edx+0x65],edi
  4176c0:	adc    eax,0x1c8cff03
  4176c5:	test   DWORD PTR [eax-0x10],0x1c63b36e
  4176cc:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ce:	and    edi,DWORD PTR [ecx+0x2966fcb8]
  4176d4:	push   edi
  4176d5:	sub    bl,ch
  4176d7:	xchg   ebx,eax
  4176d8:	adc    al,0x6
  4176da:	shl    DWORD PTR [esp+edx*8-0x3841c679],1
  4176e1:	les    edx,FWORD PTR [eax]
  4176e3:	cmc    
  4176e4:	push   edx
  4176e5:	arpl   WORD PTR [ecx+0x5694313d],sp
  4176eb:	and    edx,DWORD PTR [edi-0x77d87733]
  4176f1:	mov    ebx,0x36a61c2c
  4176f6:	dec    esi
  4176f7:	dec    edx
  4176f8:	pop    ebp
  4176f9:	sub    DWORD PTR [eax+0x28a3ecf0],0xffffffe7
  417700:	xor    ah,BYTE PTR [edi+0x59acb3cb]
  417706:	(bad)  
  417707:	pop    esp
  417708:	xchg   ebp,eax
  417709:	sbb    DWORD PTR [ebp-0x44],0xc4dcb078
  417710:	pop    es
  417711:	push   ds
  417712:	ret    0xea8
  417715:	mov    ebp,0x14f2160
  41771a:	lock and al,0xd7
  41771d:	adc    DWORD PTR [eax],esi
  41771f:	adc    dl,BYTE PTR [esi-0x5e219a01]
  417725:	mov    gs,WORD PTR [ecx]
  417727:	dec    ebp
  417728:	adc    ecx,DWORD PTR [ecx+edi*1-0x5d]
  41772c:	jp     0x417738
  41772e:	repz pop eax
  417730:	pop    eax
  417731:	push   ebx
  417732:	gs dec edx
  417734:	retf   
  417735:	sahf   
  417736:	sub    ebx,DWORD PTR [esi]
  417738:	enter  0xce13,0xa3
  41773c:	jns    0x41770b
  41773e:	es add eax,0x12ad1ffe
  417744:	adc    ebx,DWORD PTR [edi+0x29]
  417747:	dec    ebp
  417748:	adc    BYTE PTR [eax+ecx*4-0x45ac47e6],ch
  41774f:	(bad)  
  417750:	sub    eax,0x69ac2e18
  417755:	jg     0x4177bf
  417757:	pop    ecx
  417758:	and    edi,ebp
  41775a:	(bad)  [esi-0x48]
  41775d:	cs enter 0xdc35,0x92
  417762:	stc    
  417763:	or     eax,0x457f1882
  417768:	jge    0x417723
  41776a:	in     al,dx
  41776b:	mov    bh,0x3c
  41776d:	hlt    
  41776e:	stos   BYTE PTR es:[edi],al
  41776f:	and    BYTE PTR [edi],ah
  417771:	aad    0xe3
  417773:	pop    ds
  417774:	int3   
  417775:	xchg   edx,eax
  417776:	push   DWORD PTR [esi+0x63fe7c46]
  41777c:	lods   al,BYTE PTR ds:[esi]
  41777d:	sti    
  41777e:	jecxz  0x4177e0
  417780:	sbb    BYTE PTR [ebp+0x42],al
  417783:	repnz pop eax
  417785:	ss in  eax,0xdf
  417788:	xchg   edi,eax
  417789:	into   
  41778a:	mov    ds:0x75ae00b8,al
  41778f:	nop
  417790:	xlat   BYTE PTR ds:[ebx]
  417791:	aad    0xa9
  417793:	cwde   
  417794:	adc    BYTE PTR [ecx-0x66560355],cl
  41779a:	ins    BYTE PTR es:[edi],dx
  41779b:	out    0xee,eax
  41779d:	mov    bh,0x9f
  41779f:	or     al,0x79
  4177a1:	out    dx,eax
  4177a2:	xchg   DWORD PTR [eax-0x65],ebp
  4177a5:	(bad)  
  4177a6:	icebp  
  4177a7:	pushf  
  4177a8:	jns    0x41779d
  4177aa:	shr    DWORD PTR [ebx],1
  4177ac:	repnz and edx,DWORD PTR [esi-0x20]
  4177b0:	in     eax,dx
  4177b1:	mov    dl,BYTE PTR [ecx]
  4177b3:	add    ebp,ebp
  4177b5:	cmp    al,0xb5
  4177b7:	ffree  st(6)
  4177b9:	mov    DWORD PTR [ecx-0x240f4d4],ebp
  4177bf:	push   ss
  4177c0:	sub    BYTE PTR [ebx],bh
  4177c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c3:	pushf  
  4177c4:	ins    DWORD PTR es:[edi],dx
  4177c5:	retf   0x3729
  4177c8:	dec    esi
  4177c9:	pop    edi
  4177ca:	push   0x200f80da
  4177cf:	jns    0x4177b7
  4177d1:	ins    DWORD PTR es:[edi],dx
  4177d2:	shl    DWORD PTR fs:0x3e7cef96,cl
  4177d9:	arpl   si,cx
  4177db:	push   edi
  4177dc:	(bad)  
  4177dd:	retf   
  4177de:	pop    esi
  4177df:	popa   
  4177e0:	push   esp
  4177e1:	call   0xb052:0x132fcb53
  4177e8:	mov    edx,0xb053e60d
  4177ed:	push   ebp
  4177ee:	sub    DWORD PTR ds:0xfd4e8eb7,esp
  4177f4:	into   
  4177f5:	(bad)  
  4177f6:	push   esi
  4177f7:	adc    BYTE PTR [edi-0x5b],bl
  4177fa:	loope  0x417792
  4177fc:	add    eax,edi
  4177fe:	cmp    eax,0xd45876d0
  417803:	mov    ebp,0x30544cc9
  417808:	out    0xc0,al
  41780a:	sub    BYTE PTR [esp+edi*2-0x3683c9b3],bl
  417811:	jmp    0xe8bc:0xdd1b8fc2
  417818:	xor    DWORD PTR [ebx+0x56],esi
  41781b:	cmp    dl,BYTE PTR [esi+0x51]
  41781e:	pop    ebx
  41781f:	stos   DWORD PTR es:[edi],eax
  417820:	mov    edx,0x45a97f4d
  417825:	das    
  417826:	fld    TBYTE PTR [edx+0x55bb2289]
  41782c:	inc    ecx
  41782d:	dec    edx
  41782e:	popf   
  41782f:	mov    edi,0xa92d4a05
  417834:	nop
  417835:	or     DWORD PTR [edx+0x7d],0xfffffffc
  417839:	out    0xfc,eax
  41783b:	lahf   
  41783c:	hlt    
  41783d:	icebp  
  41783e:	mov    dl,0x9c
  417840:	pop    ds
  417841:	clc    
  417842:	xchg   edx,eax
  417843:	cmp    esp,DWORD PTR [esi-0x1efef25d]
  417849:	icebp  
  41784a:	and    ah,bl
  41784c:	cwde   
  41784d:	in     eax,0xb2
  41784f:	sub    dl,al
  417851:	push   0x92d0030c
  417856:	jmp    0xaf18b4b1
  41785b:	sub    eax,0x5f0c560d
  417860:	mov    DWORD PTR [edi-0x47],edx
  417863:	sub    ah,BYTE PTR [esi-0x15d556cc]
  417869:	aam    0xe5
  41786b:	sar    BYTE PTR [esi-0x3a821e1a],cl
  417871:	cmp    bh,BYTE PTR [eax+0x78]
  417874:	daa    
  417875:	add    esi,DWORD PTR [esi+0x771e9b81]
  41787b:	jecxz  0x417804
  41787d:	bnd call DWORD PTR [ebx-0x2e82cfdd]
  417884:	dec    ecx
  417885:	push   es
  417886:	out    0xa4,eax
  417888:	xchg   BYTE PTR [edx+0x33c75577],cl
  41788e:	clc    
  41788f:	in     eax,dx
  417890:	inc    ebx
  417891:	cwde   
  417892:	sub    ch,BYTE PTR [edx]
  417894:	mov    ds:0x72b45e67,al
  417899:	push   esi
  41789a:	adc    ecx,esi
  41789c:	scas   al,BYTE PTR es:[edi]
  41789d:	xor    edi,esp
  41789f:	iret   
  4178a0:	test   BYTE PTR [ecx+0x657a64a1],ch
  4178a6:	push   esi
  4178a7:	mov    edx,0x97146e50
  4178ac:	inc    edx
  4178ad:	push   esp
  4178ae:	pop    esi
  4178af:	mov    BYTE PTR [ebx+0x28450b21],bh
  4178b5:	sub    edx,DWORD PTR [edx+0x3a14c2f5]
  4178bb:	hlt    
  4178bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bd:	mov    eax,ds:0x56cfede6
  4178c2:	lods   eax,DWORD PTR ds:[esi]
  4178c3:	jne    0x4178f2
  4178c5:	jg     0x417851
  4178c7:	and    dl,bl
  4178c9:	fist   WORD PTR [eax+edx*1-0x31]
  4178cd:	xchg   esp,eax
  4178ce:	hlt    
  4178cf:	mov    DWORD PTR [ebx],edx
  4178d1:	das    
  4178d2:	push   0xffffffec
  4178d4:	sbb    BYTE PTR [ecx+0x14],dh
  4178d7:	call   0x3072311
  4178dc:	cmp    eax,0x935f6cc5
  4178e1:	fistp  DWORD PTR [ecx-0x3e328528]
  4178e7:	sub    al,0x21
  4178e9:	fisubr WORD PTR [edi]
  4178eb:	addr16 add al,0x34
  4178ee:	push   0x0
  4178f0:	and    DWORD PTR ds:0x4282a7,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428247,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42825f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428247,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282e7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x4282af,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42825f,0x428267
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428323,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42827f,0x4281ab
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42816b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42826f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x4282ab,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283b7
  4179bb:	add    DWORD PTR ds:0x42817b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x4282a3,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428163,0x42837f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42817b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428267
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x428307,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428283,0x0
  417a53:	mov    DWORD PTR ds:0x4282ff,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428277,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428283,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428df4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428257,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282e3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42819b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x4281ab,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42816f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ebx+eax*2-0x5181e0a1],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1+0x42161818],bh
  417b02:	xor    dh,bh
  417b04:	or     DWORD PTR [edx+0x7cec661],ebx
  417b0a:	call   0x54e:0xda323981
  417b11:	push   edx
  417b12:	mov    DWORD PTR [ebp-0x1d],esp
  417b15:	mov    esp,0x458202db
  417b1a:	mov    ebx,0x8ad9934d
  417b1f:	sbb    BYTE PTR [esp+eiz*8+0x69],dh
  417b23:	inc    edi
  417b24:	fucomp st(4)
  417b26:	call   0xf0074658
  417b2b:	adc    eax,0x5df5e63d
  417b30:	addr16 sbb al,0x66
  417b33:	pop    ss
  417b34:	sbb    BYTE PTR cs:[ecx-0x4a6e69ff],cl
  417b3b:	jp     0x417b12
  417b3d:	test   DWORD PTR [edi+0x68],eax
  417b40:	mov    fs,ebp
  417b42:	mov    ah,0x19
  417b44:	xor    DWORD PTR [ecx],eax
  417b46:	cmp    ah,BYTE PTR [edx]
  417b48:	sub    dl,BYTE PTR [ecx+ebp*4+0x671f535c]
  417b4f:	adc    eax,0xc8ed9303
  417b54:	add    bh,cl
  417b56:	add    eax,edi
  417b58:	leave  
  417b59:	cmc    
  417b5a:	repnz inc ebx
  417b5c:	jmp    0x417afc
  417b5e:	cmp    bh,ch
  417b60:	call   0x1470:0x7dd1deca
  417b67:	sub    DWORD PTR [ebx],esi
  417b69:	loope  0x417b7f
  417b6b:	xor    eax,0x2c6ee7ce
  417b70:	hlt    
  417b71:	lds    esp,FWORD PTR [edx]
  417b73:	fnstcw WORD PTR [edx]
  417b75:	and    DWORD PTR [ebx+0x1796987a],edi
  417b7b:	xchg   ebp,eax
  417b7c:	in     eax,dx
  417b7d:	pusha  
  417b7e:	pop    es
  417b7f:	inc    ebx
  417b80:	jnp    0x417b19
  417b82:	jmp    0x417bad
  417b84:	dec    ecx
  417b85:	push   cs
  417b86:	dec    eax
  417b87:	fldcw  WORD PTR [edi]
  417b89:	repnz ror BYTE PTR [eax+edx*1+0x64],cl
  417b8e:	jnp    0x417bf1
  417b90:	shr    DWORD PTR [edx+0x1db4a79e],cl
  417b96:	jg     0x417b22
  417b98:	adc    BYTE PTR [eax-0x732ddbab],dl
  417b9e:	pop    ss
  417b9f:	int3   
  417ba0:	(bad)  
  417ba1:	adc    bl,BYTE PTR [edx-0x4c]
  417ba4:	push   ebp
  417ba5:	cmp    DWORD PTR [eax-0x6d562b44],ecx
  417bab:	aaa    
  417bac:	int    0x60
  417bae:	dec    ebp
  417baf:	aam    0xab
  417bb1:	(bad)  
  417bb2:	xchg   edi,eax
  417bb3:	pusha  
  417bb4:	inc    ecx
  417bb5:	ds jns 0x417bae
  417bb8:	jb     0x417c0d
  417bba:	mov    bh,0xf7
  417bbc:	call   0x4bd5b309
  417bc1:	inc    ecx
  417bc2:	lds    edi,FWORD PTR [edx]
  417bc4:	sbb    ch,BYTE PTR es:[edx]
  417bc7:	(bad)  
  417bc8:	pop    ds
  417bc9:	test   al,0xc3
  417bcb:	test   BYTE PTR [ebp+0x16],bh
  417bce:	pop    ss
  417bcf:	ds mov ecx,0xe1100b52
  417bd5:	fld    TBYTE PTR [eax+0x22]
  417bd8:	push   ebp
  417bd9:	jmp    0xd5d43aa8
  417bde:	loope  0x417c21
  417be0:	and    al,0x8e
  417be2:	test   al,0x19
  417be4:	loop   0x417c4e
  417be6:	pop    esp
  417be7:	cld    
  417be8:	xor    DWORD PTR [ebx+0x32],edi
  417beb:	arpl   WORD PTR [ecx],bp
  417bed:	add    BYTE PTR fs:[ebx+eiz*4+0x67],ch
  417bf2:	arpl   WORD PTR [ecx-0x7b],dx
  417bf5:	xchg   edi,eax
  417bf6:	inc    esp
  417bf7:	mov    edx,0xeaa959bb
  417bfc:	rcl    BYTE PTR [edx+0x5e],0xdd
  417c00:	adc    esp,DWORD PTR [edi+0x3f]
  417c03:	xchg   DWORD PTR [esi],ebx
  417c05:	mov    ah,0x59
  417c07:	cmp    esi,ebx
  417c09:	(bad)  
  417c0a:	pop    esi
  417c0b:	ret    0x7b0f
  417c0e:	fs cdq 
  417c10:	add    cl,dh
  417c12:	cmp    DWORD PTR [edi+0x27754bf4],edi
  417c18:	jbe    0x417bc7
  417c1a:	shr    edx,0x81
  417c1d:	sti    
  417c1e:	scas   al,BYTE PTR es:[edi]
  417c1f:	jmp    0x5315cf4c
  417c24:	mov    ds:0x638b4a36,al
  417c29:	and    al,BYTE PTR [eax]
  417c2b:	call   0x21088c5
  417c30:	cld    
  417c31:	pop    DWORD PTR [ebx-0x5eee4a61]
  417c37:	test   eax,0x30b50ac9
  417c3c:	(bad)
  417c3f:	lahf   
  417c40:	jmp    0x417c11
  417c42:	jmp    0xe89a4930
  417c47:	push   es
  417c48:	push   eax
  417c49:	test   eax,0x53aed71b
  417c4e:	jns    0x417c8a
  417c50:	clc    
  417c51:	add    eax,0xa5a2f54
  417c56:	mov    ds:0xc05bdab3,al
  417c5b:	hlt    
  417c5c:	adc    al,0x1e
  417c5e:	call   0x9d67:0xa4ff2aeb
  417c65:	sub    BYTE PTR [edi-0x3e],0x89
  417c69:	pop    edx
  417c6a:	push   ecx
  417c6b:	sbb    DWORD PTR [edx-0x2],0x74
  417c6f:	mov    ecx,0xbeede06c
  417c74:	pop    edx
  417c75:	adc    BYTE PTR [edx-0x28],0x9a
  417c79:	dec    ebp
  417c7a:	lock pop edx
  417c7c:	mov    bl,0xbf
  417c7e:	and    eax,0x9bb60ee4
  417c83:	or     dh,bl
  417c85:	ja     0x417cb5
  417c87:	sub    BYTE PTR [ebx],bh
  417c89:	mov    bl,bh
  417c8b:	inc    esi
  417c8c:	fmul   QWORD PTR [ecx]
  417c8e:	ror    BYTE PTR [eax],1
  417c90:	sbb    al,0xe2
  417c92:	call   0x481e92a1
  417c97:	les    ebp,FWORD PTR [eax]
  417c99:	dec    ecx
  417c9a:	hlt    
  417c9b:	pop    ss
  417c9c:	pop    ss
  417c9d:	sbb    al,0xa5
  417c9f:	mov    ch,0xc3
  417ca1:	jg     0x417c28
  417ca3:	xchg   ebx,eax
  417ca4:	adc    BYTE PTR [edx-0x7fd0b216],al
  417caa:	mov    ah,0x96
  417cac:	push   cs
  417cad:	mov    dl,0x92
  417caf:	mov    dl,0x7e
  417cb1:	mov    ecx,0xb11d6db4
  417cb6:	jge    0x417c63
  417cb8:	les    esi,FWORD PTR [edx+0x47]
  417cbb:	aad    0xe6
  417cbd:	adc    ch,BYTE PTR [edx+0x70]
  417cc0:	xlat   BYTE PTR ds:[ebx]
  417cc1:	enter  0xf5b1,0x89
  417cc5:	add    dl,cl
  417cc7:	mov    ebp,esi
  417cc9:	enter  0x87e9,0xd5
  417ccd:	mov    bh,0x1b
  417ccf:	pop    ecx
  417cd0:	xchg   BYTE PTR [ebx],ah
  417cd2:	pop    eax
  417cd3:	pop    bx
  417cd5:	jmp    0x417cd1
  417cd7:	call   0xc42:0x6fb90ea0
  417cde:	inc    esi
  417cdf:	add    esp,ebp
  417ce1:	mov    al,0x47
  417ce3:	cmp    ecx,ecx
  417ce5:	mov    ebp,0x776d5cfd
  417cea:	and    edi,ecx
  417cec:	push   cs
  417ced:	mov    eax,ds:0x9cf1550d
  417cf2:	xor    dx,WORD PTR [ebp-0x1f]
  417cf6:	popa   
  417cf7:	scas   al,BYTE PTR es:[edi]
  417cf8:	jle    0x417cbc
  417cfa:	test   eax,0x415cb9a4
  417cff:	outs   dx,BYTE PTR ds:[esi]
  417d00:	push   ss
  417d01:	xchg   edi,eax
  417d02:	inc    ebp
  417d03:	and    edi,DWORD PTR [edx+0x62]
  417d06:	jne    0x417d35
  417d08:	jle    0x417ca8
  417d0a:	scas   al,BYTE PTR es:[edi]
  417d0b:	sbb    eax,0x8f77bae5
  417d10:	int    0xe7
  417d12:	(bad)  
  417d14:	mov    ebx,DWORD PTR [esi]
  417d16:	sbb    eax,0xd9a0fd14
  417d1b:	dec    edx
  417d1c:	and    cl,ch
  417d1e:	sar    ch,0xe5
  417d21:	jno    0x417d40
  417d23:	shl    ebx,1
  417d25:	cli    
  417d26:	and    eax,0xe259d0c4
  417d2b:	(bad)  
  417d2c:	ret    
  417d2d:	outs   dx,BYTE PTR ds:[esi]
  417d2e:	adc    esp,ebp
  417d30:	int3   
  417d31:	pop    edi
  417d32:	jecxz  0x417d49
  417d34:	mov    esi,0x9b56e2a7
  417d39:	pusha  
  417d3a:	add    dh,BYTE PTR [esi-0x2f]
  417d3d:	ja     0x417d54
  417d3f:	data16 lods al,BYTE PTR ds:[esi]
  417d41:	xor    dl,cl
  417d43:	adc    eax,0x2e2fe4ff
  417d48:	or     ecx,DWORD PTR ds:0xb8796b54
  417d4e:	in     al,dx
  417d4f:	mov    WORD PTR [esi],?
  417d51:	add    dh,dh
  417d53:	jge    0x417d02
  417d55:	das    
  417d56:	xlat   BYTE PTR ds:[ebx]
  417d57:	sub    DWORD PTR [ebp+ecx*1+0x4a],ebp
  417d5b:	pop    eax
  417d5c:	sbb    al,0xbd
  417d5e:	push   edi
  417d5f:	cmp    BYTE PTR [esi],ch
  417d61:	enter  0xb36f,0x1b
  417d65:	jbe    0x417d79
  417d67:	ins    DWORD PTR es:[edi],dx
  417d68:	or     al,BYTE PTR ds:0x1e53c9b2
  417d6e:	ins    BYTE PTR es:[edi],dx
  417d6f:	(bad)  
  417d70:	test   DWORD PTR [ebx+0x6468b2c4],0x7e8d5e9c
  417d7a:	ins    BYTE PTR es:[edi],dx
  417d7b:	int3   
  417d7c:	jl     0x417dcd
  417d7e:	fldenv [edi+0x1e]
  417d81:	add    BYTE PTR [ecx+eax*4+0x40],bl
  417d85:	call   0x2b1b:0x7024d730
  417d8c:	xchg   esi,eax
  417d8d:	sbb    BYTE PTR [ebp-0x626908ec],cl
  417d93:	btc    DWORD PTR [eax+0x70],esi
  417d97:	inc    esi
  417d98:	mov    ah,0x80
  417d9a:	(bad)  
  417d9b:	push   eax
  417d9c:	aad    0x73
  417d9e:	inc    eax
  417d9f:	stos   DWORD PTR es:[edi],eax
  417da0:	je     0x417d8a
  417da2:	add    DWORD PTR [esi-0x7a509e63],0x41
  417da9:	xchg   ecx,eax
  417daa:	daa    
  417dab:	inc    eax
  417dac:	fnstenv [eax-0x2e]
  417daf:	sbb    cl,BYTE PTR [edi+0x34]
  417db2:	inc    ebx
  417db3:	test   BYTE PTR [esi-0x5d898644],dl
  417db9:	dec    ebp
  417dba:	loop   0x417d42
  417dbc:	mov    ebx,0xec5c4eb2
  417dc1:	push   esp
  417dc2:	shr    DWORD PTR [esp+ecx*1+0x20],cl
  417dc6:	icebp  
  417dc7:	in     eax,dx
  417dc8:	cs cmc 
  417dca:	call   0xd513:0x32356f7c
  417dd1:	inc    edx
  417dd2:	loope  0x417e09
  417dd4:	cmp    ebx,DWORD PTR [ebx*4-0x7c7d2dad]
  417ddb:	sub    dl,ah
  417ddd:	push   ds
  417dde:	pushf  
  417ddf:	xor    ch,BYTE PTR [esp+ebp*8]
  417de2:	xor    al,0x77
  417de4:	mov    ch,0x12
  417de6:	xchg   BYTE PTR [edi+0x5e],bl
  417de9:	jbe    0x417d98
  417deb:	adc    al,0xb5
  417ded:	loop   0x417dd6
  417def:	fisubr WORD PTR [ebx]
  417df1:	scas   eax,DWORD PTR es:[edi]
  417df2:	xchg   esp,eax
  417df3:	sub    ah,cl
  417df5:	pop    esi
  417df6:	jnp    0x417dd6
  417df8:	dec    edx
  417df9:	fwait
  417dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dfb:	and    eax,0xf881924a
  417e00:	sub    eax,0x5250f88d
  417e05:	fadd   DWORD PTR [edx]
  417e07:	push   cs
  417e08:	imul   edi,DWORD PTR ss:[ebx+0x1cdab53],0x24
  417e10:	imul   ecx,DWORD PTR ds:0x2e3c9bf2,0x12
  417e17:	inc    edx
  417e18:	push   eax
  417e19:	or     BYTE PTR [edi-0x1c],0x3c
  417e1d:	fst    QWORD PTR [ecx+0x6c]
  417e20:	and    al,0xf4
  417e22:	cwde   
  417e23:	inc    edx
  417e24:	mov    dl,0x9
  417e26:	mov    esi,0x6079ab36
  417e2b:	and    eax,0xdbf1f6f8
  417e30:	pusha  
  417e31:	repnz int 0xe8
  417e34:	retf   0xf284
  417e37:	scas   al,BYTE PTR es:[edi]
  417e38:	(bad)
  417e3b:	inc    ebx
  417e3c:	xor    DWORD PTR [edx],ecx
  417e3e:	xchg   ecx,eax
  417e3f:	mov    ah,0xbd
  417e41:	jecxz  0x417e1d
  417e43:	ins    BYTE PTR es:[edi],dx
  417e44:	add    ch,dl
  417e46:	adc    DWORD PTR [eax-0x19],ebp
  417e49:	xchg   BYTE PTR [eax-0x25da2e30],bl
  417e4f:	leave  
  417e50:	shl    DWORD PTR [ebx+eiz*8+0x44814dbb],0x93
  417e58:	adc    DWORD PTR [eax+0x1b82403b],eax
  417e5e:	sub    ebx,DWORD PTR [ebx+0x2c]
  417e61:	stos   BYTE PTR es:[edi],al
  417e62:	dec    eax
  417e63:	jno    0x417df7
  417e65:	sbb    esi,DWORD PTR [ebx+0x2204898c]
  417e6b:	or     eax,ebx
  417e6d:	daa    
  417e6e:	mov    dh,0x94
  417e70:	cs adc dh,ah
  417e73:	aad    0x9f
  417e75:	call   0xa27e:0x13ce1082
  417e7c:	and    BYTE PTR [edx],ch
  417e7e:	inc    edi
  417e7f:	mov    edx,0x4cf495b2
  417e84:	stos   DWORD PTR es:[edi],eax
  417e85:	out    dx,al
  417e86:	int    0xd5
  417e88:	jb     0x417ef3
  417e8a:	xor    eax,0x9cfca5ba
  417e8f:	sbb    eax,0x14bc743a
  417e94:	sahf   
  417e95:	jmp    0x9840:0xf36f691c
  417e9c:	inc    esp
  417e9d:	shl    BYTE PTR [esi+edx*2],1
  417ea0:	data16 and al,0x7
  417ea3:	or     DWORD PTR [ebx+eiz*8-0x6c5c34cb],eax
  417eaa:	es jecxz 0x417ec3
  417ead:	inc    edi
  417eae:	cs sbb eax,0x44c72ed0
  417eb4:	and    al,0x3c
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x42837f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428243,0x42829b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428393,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42828f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42838b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428393,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e98
  417f43:	sub    DWORD PTR ds:0x428267,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42824b
  417f53:	mov    ecx,DWORD PTR ds:0x4282ab
  417f59:	and    DWORD PTR ds:0x4281a7,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428383
  417f65:	mov    ecx,DWORD PTR ds:0x428197
  417f6b:	or     DWORD PTR ds:0x42832b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x4283af
  417f77:	or     DWORD PTR ds:0x428297,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x34
  417f8f:	xor    bl,cl
  417f91:	jo     0x417fe6
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0x7f4f1818],bh
  417f9c:	out    0x30,al
  417f9e:	stos   BYTE PTR es:[edi],al
  417f9f:	ins    DWORD PTR es:[edi],dx
  417fa0:	mov    ecx,0xa5e03aa
  417fa5:	arpl   WORD PTR [edi+0x7666ac10],bx
  417fab:	fild   WORD PTR [ebp-0x1a61355d]
  417fb1:	sub    edx,DWORD PTR ds:0x77f56bf9
  417fb7:	mov    eax,ds:0xe441b3c7
  417fbc:	and    DWORD PTR [edx],ecx
  417fbe:	mov    edi,0xd7c89373
  417fc3:	mov    edi,0xa8d33e9e
  417fc8:	aas    
  417fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fca:	cwde   
  417fcb:	outs   dx,DWORD PTR ds:[esi]
  417fcc:	fwait
  417fcd:	mov    DWORD PTR [edx+0x31033de4],0x73967345
  417fd7:	arpl   WORD PTR [eax+0x733df2f5],dx
  417fdd:	mov    ecx,0x6bf64494
  417fe2:	dec    esp
  417fe3:	fucomip st,st(3)
  417fe5:	jmp    0x417ffa
  417fe7:	adc    DWORD PTR [esi+ebx*4+0x4b],esp
  417feb:	and    al,0xdd
  417fed:	call   FWORD PTR [edi+eax*4]
  417ff0:	aad    0xcd
  417ff2:	fcmovb st,st(7)
  417ff4:	shl    dl,cl
  417ff6:	and    DWORD PTR [edi-0x7f0211f1],ebp
  417ffc:	xor    ebp,ebp
  417ffe:	mov    DWORD PTR [edx],esp
  418000:	and    DWORD PTR [ecx-0x1e],ecx
  418003:	sub    eax,0x374929e8
  418008:	mov    esi,0x4964de97
  41800d:	inc    edi
  41800e:	fcmovnbe st,st(3)
  418010:	iret   
  418011:	or     esp,DWORD PTR [edi]
  418013:	iret   
  418014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418015:	jb     0x418080
  418017:	and    esi,edi
  418019:	iret   
  41801a:	inc    ebx
  41801b:	dec    esp
  41801c:	dec    ebx
  41801d:	push   ebx
  41801e:	out    0x1,eax
  418020:	cli    
  418021:	mov    ch,BYTE PTR [edi]
  418023:	mov    esi,0xb5aa8d9a
  418028:	sub    al,0x5c
  41802a:	gs ins BYTE PTR es:[edi],dx
  41802c:	mov    al,ds:0xb02d1c53
  418031:	push   ds
  418032:	xor    esi,DWORD PTR [esp+ebx*8]
  418035:	inc    edx
  418036:	xor    esp,DWORD PTR [ebx]
  418038:	or     eax,0xf586b293
  41803d:	pop    esp
  41803e:	mov    ebx,0xcc8a38e
  418043:	loopne 0x41802e
  418045:	push   ebp
  418046:	lds    ebp,FWORD PTR [eax+0x4b172fb7]
  41804c:	push   esp
  41804d:	(bad)  [ebp-0x59b01a38]
  418053:	fsubr  DWORD PTR [ebp-0x1b]
  418056:	je     0x418013
  418058:	into   
  418059:	fs push 0x8e97de4e
  41805f:	add    al,0x75
  418061:	popa   
  418062:	mov    esp,0x1e6673f9
  418067:	mov    edi,0x145b0d2d
  41806c:	into   
  41806d:	jae    0x4180d8
  41806f:	and    BYTE PTR [esi],bh
  418071:	retf   0x8ea9
  418074:	and    esp,DWORD PTR [edi+ecx*8+0x576ccc2a]
  41807b:	shr    DWORD PTR [ebx+0xd11dd23],cl
  418081:	jae    0x418063
  418083:	ret    
  418084:	push   0x75
  418086:	sub    al,0xb8
  418088:	sub    DWORD PTR [edx+0x3d],0x17
  41808c:	pusha  
  41808d:	push   es
  41808e:	and    bl,BYTE PTR [esi-0x36453dcf]
  418094:	push   esi
  418095:	out    dx,al
  418096:	xchg   ecx,eax
  418097:	daa    
  418098:	out    dx,al
  418099:	xchg   esp,eax
  41809a:	sub    eax,0x258622f8
  41809f:	imul   ch
  4180a1:	in     al,dx
  4180a2:	shr    esp,cl
  4180a4:	xor    al,0x3d
  4180a6:	sti    
  4180a7:	out    0x90,al
  4180a9:	or     bh,al
  4180ab:	outs   dx,DWORD PTR ds:[esi]
  4180ac:	sub    DWORD PTR [esi],edx
  4180ae:	jns    0x418057
  4180b0:	mov    eax,0x3d958aa8
  4180b5:	popf   
  4180b6:	(bad)  
  4180b7:	fisttp DWORD PTR [esi+0x19e5b194]
  4180bd:	mov    ah,0xaa
  4180bf:	fidiv  WORD PTR [edx+ebp*1]
  4180c2:	arpl   ax,ax
  4180c4:	leave  
  4180c5:	push   ebx
  4180c6:	push   es
  4180c7:	repz arpl WORD PTR [edi],dx
  4180ca:	in     al,dx
  4180cb:	mov    edi,0xfe82f606
  4180d0:	and    dh,al
  4180d2:	sbb    eax,0x28b2cf1d
  4180d7:	mov    ecx,0x5ff8a603
  4180dc:	fcom   QWORD PTR [ebp+0x77aa9e72]
  4180e2:	and    eax,0x4b7cdd1a
  4180e7:	xchg   esi,eax
  4180e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180e9:	loope  0x4180ec
  4180eb:	iret   
  4180ec:	mov    ecx,0x8efcf61b
  4180f1:	int    0xde
  4180f3:	iret   
  4180f4:	enter  0x25e6,0xef
  4180f8:	push   ecx
  4180f9:	out    dx,eax
  4180fa:	pop    edx
  4180fb:	fidiv  WORD PTR [esi+0x68bcb476]
  418101:	clc    
  418102:	cmp    al,0x7b
  418104:	adc    BYTE PTR [esi-0x1f001573],0x5d
  41810b:	int    0x38
  41810d:	pop    eax
  41810e:	sub    DWORD PTR ds:0x86c979f4,edx
  418114:	fisubr WORD PTR [esi-0x29c7c861]
  41811a:	je     0x4180e4
  41811c:	lods   eax,DWORD PTR ds:[esi]
  41811d:	push   ss
  41811e:	(bad)  [esi+0x5d]
  418121:	test   eax,edx
  418123:	mov    bl,0xeb
  418125:	inc    esi
  418126:	jg     0x41812f
  418128:	(bad)  
  418129:	hlt    
  41812a:	pop    esi
  41812b:	fcos   
  41812d:	popf   
  41812e:	inc    eax
  41812f:	and    ecx,edx
  418131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418132:	sbb    cl,BYTE PTR [ebx-0x63419264]
  418138:	lea    esp,[esp+edi*8-0x446b60f4]
  41813f:	and    eax,0xa6029d8a
  418144:	mov    ds:0xfcd7bb2b,al
  418149:	jecxz  0x4181aa
  41814b:	push   ss
  41814c:	add    esi,DWORD PTR [esi+0x76]
  41814f:	cdq    
  418150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418151:	push   esp
  418152:	jle    0x4180f4
  418154:	mov    ch,BYTE PTR [eax+0x5a899a7d]
  41815a:	into   
  41815b:	sti    
  41815c:	jmp    0x811e:0x35bcc842
  418163:	and    BYTE PTR ds:0x989c3fe3,bh
  418169:	cwde   
  41816a:	add    BYTE PTR [edx+0x75],cl
  41816d:	and    ch,0x55
  418170:	pop    es
  418171:	pop    edi
  418172:	sti    
  418173:	arpl   WORD PTR [ebx-0x65],si
  418176:	pop    es
  418177:	retf   
  418178:	adc    al,0x1d
  41817a:	and    dl,bl
  41817c:	retf   0xcdac
  41817f:	pop    es
  418180:	mov    bl,0xd1
  418182:	push   ebp
  418183:	jmp    0x225d22e
  418188:	fwait
  418189:	je     0x418160
  41818b:	pop    ecx
  41818c:	and    BYTE PTR [edi],dl
  41818e:	inc    eax
  41818f:	sbb    BYTE PTR [edi+0x76],al
  418192:	dec    ebp
  418193:	out    0x73,al
  418195:	fistp  QWORD PTR [eax-0x4e]
  418198:	sub    ch,al
  41819a:	shl    bl,cl
  41819c:	fsubr  QWORD PTR ss:[edi]
  41819f:	leave  
  4181a0:	sbb    eax,0x935ef5d2
  4181a5:	retf   0xa323
  4181a8:	inc    ebp
  4181a9:	test   eax,0x2c1a640f
  4181ae:	lahf   
  4181af:	xchg   edx,eax
  4181b0:	scas   eax,DWORD PTR es:[edi]
  4181b1:	jae    0x41818d
  4181b3:	dec    esp
  4181b4:	aad    0x1f
  4181b6:	enter  0xe0d3,0xd3
  4181ba:	cli    
  4181bb:	jb     0x4181e1
  4181bd:	sar    ch,0x28
  4181c0:	jns    0x418149
  4181c2:	cmc    
  4181c3:	retf   
  4181c4:	jecxz  0x41814b
  4181c6:	sub    al,dl
  4181c8:	push   0xffffff8a
  4181ca:	pop    edi
  4181cb:	pop    esi
  4181cc:	jmp    0xc6858834
  4181d1:	pop    ebp
  4181d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d3:	lock (bad) 
  4181d5:	loop   0x4181cf
  4181d7:	int    0xf1
  4181d9:	and    BYTE PTR [edi+0x5c],ch
  4181dc:	fcmovnb st,st(1)
  4181de:	cmp    DWORD PTR [esi-0x8],eax
  4181e1:	repnz push 0x4d08e20f
  4181e7:	outs   dx,BYTE PTR ds:[esi]
  4181e8:	add    eax,0x8f0e71ad
  4181ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ee:	(bad)  
  4181ef:	jmp    0x543c:0xf1783834
  4181f6:	cmp    al,0x42
  4181f8:	sbb    BYTE PTR [edi+edx*4-0x418cda97],bh
  4181ff:	int3   
  418200:	je     0x418247
  418202:	arpl   bp,dx
  418204:	jno    0x418201
  418206:	jg     0x4181b9
  418208:	bound  edi,QWORD PTR [edi+ecx*2]
  41820b:	loop   0x4181ec
  41820d:	int    0x1
  41820f:	cld    
  418210:	int    0x6e
  418212:	xchg   esi,eax
  418213:	xchg   ecx,eax
  418214:	shr    BYTE PTR [ecx],0x15
  418217:	sbb    ebx,DWORD PTR [edx+edx*1+0x51e230a3]
  41821e:	pop    ss
  41821f:	adc    ah,al
  418221:	push   ss
  418222:	pop    ds
  418223:	aas    
  418224:	and    esp,edx
  418226:	pushf  
  418227:	push   eax
  418228:	loope  0x4181ca
  41822a:	fcomi  st,st(0)
  41822c:	ins    DWORD PTR es:[edi],dx
  41822d:	ins    DWORD PTR es:[edi],dx
  41822e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41822f:	inc    DWORD PTR [ecx+ebp*4+0x5bb6ff61]
  418236:	sub    BYTE PTR [esi+0x16],bh
  418239:	sub    BYTE PTR [ecx],ch
  41823b:	xor    al,0x74
  41823d:	dec    ecx
  41823e:	loope  0x418222
  418240:	inc    ebx
  418241:	hlt    
  418242:	sub    edi,edi
  418244:	mov    ds:0xb23da8ac,al
  418249:	ror    BYTE PTR [ebx+0x74b56418],1
  41824f:	in     eax,dx
  418250:	jbe    0x418286
  418252:	xor    DWORD PTR [ebx+ecx*2],esp
  418255:	mov    al,0x79
  418257:	(bad)  
  418258:	scas   al,BYTE PTR es:[edi]
  418259:	jmp    FWORD PTR [eax-0x3b58264a]
  41825f:	rol    BYTE PTR [ecx-0x72744534],cl
  418265:	xor    bl,BYTE PTR [edx+0x23d36d05]
  41826b:	xor    eax,0xdffdad02
  418270:	fimul  WORD PTR [edx+ecx*8]
  418273:	adc    al,0x6b
  418275:	jmp    0x94db:0x4c02de61
  41827c:	sub    dl,BYTE PTR [edi-0x59a6c5ce]
  418282:	(bad)  
  418283:	in     eax,dx
  418284:	jbe    0x4182e8
  418286:	mov    ebp,0x966068f8
  41828b:	push   esp
  41828c:	cmp    BYTE PTR ds:0x74178193,ah
  418292:	dec    esi
  418293:	xor    BYTE PTR ds:0xe7039752,dl
  418299:	ds scas eax,DWORD PTR es:[edi]
  41829b:	dec    edi
  41829c:	test   BYTE PTR [edx+edi*2-0x2a82a2a9],bh
  4182a3:	jle    0x418284
  4182a5:	into   
  4182a6:	repnz add BYTE PTR [esp+ebp*8-0x80],cl
  4182ab:	not    DWORD PTR [ebp+0x20e13a6b]
  4182b1:	aad    0x4b
  4182b3:	aam    0xaf
  4182b5:	inc    ecx
  4182b6:	jp     0x41830a
  4182b8:	sub    DWORD PTR [edi],edx
  4182ba:	mov    ecx,DWORD PTR [ebp-0x1cfabc8b]
  4182c0:	sti    
  4182c1:	sub    DWORD PTR [ebx+0x71],esi
  4182c4:	hlt    
  4182c5:	pop    ss
  4182c6:	(bad)  
  4182c7:	mov    esp,0xf4c2ae12
  4182cc:	adc    eax,0xaa23d2c2
  4182d1:	jmp    0x3bf7:0x5c923285
  4182d8:	sbb    edx,edx
  4182da:	inc    edx
  4182db:	or     ebx,DWORD PTR [esi+eax*2+0x7e]
  4182df:	mov    al,0xd9
  4182e1:	or     eax,DWORD PTR [ebp-0x75bdecff]
  4182e7:	push   ebp
  4182e8:	xchg   ebp,eax
  4182e9:	and    bl,cl
  4182eb:	and    eax,0x8eec3ce0
  4182f0:	imul   edi,DWORD PTR [esi],0xffffffeb
  4182f3:	lods   al,BYTE PTR ds:[esi]
  4182f4:	xor    esp,DWORD PTR [edi]
  4182f6:	lock test BYTE PTR [ecx+0x6d],al
  4182fa:	mov    WORD PTR [ebx-0x486ca5f5],fs
  418300:	outs   dx,DWORD PTR ds:[esi]
  418301:	and    eax,0xab9f7501
  418306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418307:	lds    esp,FWORD PTR [edx]
  418309:	mov    cl,0x61
  41830b:	jp     0x418314
  41830d:	xor    eax,0x6b23465a
  418312:	sub    edi,DWORD PTR [ecx]
  418314:	retf   0x58b4
  418317:	adc    bh,BYTE PTR [ebx]
  418319:	mov    ah,0x80
  41831b:	ret    0x1b9e
  41831e:	dec    ecx
  41831f:	mov    bh,0xae
  418321:	jnp    0x4182de
  418323:	adc    al,0xb6
  418325:	ins    BYTE PTR es:[edi],dx
  418326:	in     eax,0xc8
  418328:	bound  ebx,QWORD PTR [ebp-0x3b]
  41832b:	jecxz  0x41833c
  41832d:	fist   DWORD PTR [edi]
  41832f:	dec    ebp
  418330:	mov    bl,0xfe
  418332:	inc    ebx
  418333:	mov    cl,0xfd
  418335:	mov    al,0x7
  418337:	pushf  
  418338:	push   ebx
  418339:	cmp    al,0x84
  41833b:	jecxz  0x4182c4
  41833d:	jb     0x4182c2
  41833f:	(bad)  
  418340:	adc    ah,cl
  418342:	sbb    bl,BYTE PTR ds:0xa84c9b92
  418348:	stc    
  418349:	and    eax,0x30ff9daa
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428197,0x0
  418359:	mov    DWORD PTR ds:0x42825b,0x42c6
  418363:	mov    DWORD PTR ds:0x428397,edx
  418369:	mov    DWORD PTR ds:0x428173,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428297,0x243f
  418382:	mov    DWORD PTR ds:0x42826f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428197,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428333
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e9c
  4183ae:	add    DWORD PTR ds:0x4282ff,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428283
  4183ba:	xor    DWORD PTR ds:0x428337,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428313
  4183c6:	or     DWORD PTR ds:0x42818f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42823b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42823f,0x4281ab
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42819f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42839f
  418409:	or     DWORD PTR ds:0x428397,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42816f,0x428337
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42823b,0x0
  418430:	mov    DWORD PTR ds:0x42824b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428393,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42823b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428093
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428df8
  41846b:	sbb    DWORD PTR ds:0x42827f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428177,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428393
  418485:	xor    ecx,DWORD PTR ds:0x4282fb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428397,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x42830f,0x42827b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283b7,0x42823f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x42830b,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	sbb    BYTE PTR [eax],0x23
  4184fa:	stos   BYTE PTR es:[edi],al
  4184fb:	not    cl
  4184fd:	push   ss
  4184fe:	sbb    BYTE PTR [edx+edx*1-0x211fe7e8],bh
  418505:	inc    esp
  418506:	daa    
  418507:	jmp    0x3be171ca
  41850c:	cdq    
  41850d:	jno    0x418571
  41850f:	stc    
  418510:	fucomp st(2)
  418512:	inc    ecx
  418513:	sbb    al,0xd4
  418515:	push   ebp
  418516:	(bad)  
  418517:	jp     0x4184fe
  418519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41851a:	mov    eax,ds:0xa898d29a
  41851f:	shl    DWORD PTR [eax],1
  418521:	cdq    
  418522:	iret   
  418523:	jmp    0xd292c331
  418528:	fisub  WORD PTR [edi+0x2c]
  41852b:	add    edi,DWORD PTR [edi+0x6c]
  41852e:	scas   eax,DWORD PTR es:[edi]
  41852f:	dec    ecx
  418530:	nop
  418531:	xchg   ebx,eax
  418532:	push   esi
  418533:	imul   ecx,DWORD PTR [edx],0x23
  418536:	shl    DWORD PTR [esi-0x792ac2c5],1
  41853c:	sub    DWORD PTR [eax+0xe9c62f9],eax
  418542:	sbb    eax,0x9116780b
  418547:	sbb    eax,0xa5b75526
  41854c:	mov    cl,0x9b
  41854e:	and    esi,DWORD PTR [edi+0x74]
  418551:	push   0xf8f53dc1
  418556:	xor    BYTE PTR [edx],dh
  418558:	jle    0x4185d6
  41855a:	jge    0x41858a
  41855c:	cld    
  41855d:	scas   eax,DWORD PTR es:[edi]
  41855e:	sub    al,0xc3
  418560:	mov    ecx,0x8fc8c2aa
  418565:	xchg   DWORD PTR [edi+ecx*8],ebp
  418568:	retf   0xf5ac
  41856b:	adc    DWORD PTR [ebx],0xdade6907
  418571:	jmp    0x97ce:0x97d847f3
  418578:	dec    ebx
  418579:	es into 
  41857b:	pop    ds
  41857c:	lds    ebp,FWORD PTR [ecx]
  41857e:	and    eax,0x230f82cd
  418583:	sub    al,0xd5
  418585:	cdq    
  418586:	mov    eax,ds:0xa58f3706
  41858b:	pop    edi
  41858c:	mov    esi,0x72db9efa
  418591:	mov    ds:0xf2a5bd79,al
  418596:	ja     0x418539
  418598:	popa   
  418599:	cmp    ebx,edx
  41859b:	iret   
  41859c:	int    0xcf
  41859e:	sbb    al,0xa
  4185a0:	add    BYTE PTR [edi+0x257aaa35],dh
  4185a6:	sbb    al,0xe4
  4185a8:	cmp    al,0xaa
  4185aa:	or     esi,DWORD PTR [ecx-0x44]
  4185ad:	in     eax,0x51
  4185af:	mov    ecx,0xec7fdf21
  4185b4:	das    
  4185b5:	imul   esp,DWORD PTR [esi-0x6ea2066e],0x5c
  4185bc:	popa   
  4185bd:	popf   
  4185be:	adc    bl,0xfb
  4185c1:	mov    esp,0x4bd4b75
  4185c6:	mov    ds:0xb6e83b95,al
  4185cb:	mov    bl,0xd2
  4185cd:	xor    al,0x43
  4185cf:	not    BYTE PTR [edi]
  4185d1:	and    ecx,DWORD PTR [edi-0x15b47dfd]
  4185d7:	and    eax,0xbabe596e
  4185dc:	sbb    eax,0x1800f222
  4185e1:	jmp    0x7194:0xeffa7155
  4185e8:	mov    ebx,DWORD PTR [edx-0x37de133b]
  4185ee:	(bad)  [eax]
  4185f0:	into   
  4185f1:	lods   eax,DWORD PTR ds:[esi]
  4185f2:	jo     0x4185e3
  4185f4:	xor    BYTE PTR [ebx],dh
  4185f6:	adc    DWORD PTR [ecx+0x7ae38b8a],edi
  4185fc:	cmp    BYTE PTR [edx+0x11],cl
  4185ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418600:	shl    edx,1
  418602:	jge    0x418613
  418604:	lock shr eax,0x21
  418608:	sub    al,0x5b
  41860a:	sbb    esi,DWORD PTR [edi]
  41860c:	lods   al,BYTE PTR ds:[esi]
  41860d:	sbb    eax,0xe4d0040f
  418612:	sub    ah,dl
  418614:	and    ebx,DWORD PTR [ecx+0x7852b637]
  41861a:	push   edi
  41861b:	jo     0x418678
  41861d:	repnz xor DWORD PTR [edi-0x6b],ebx
  418621:	ret    0x9c20
  418624:	jp     0x4185f0
  418626:	mov    eax,0xe958f6af
  41862b:	jne    0x41861b
  41862d:	in     eax,0x54
  41862f:	daa    
  418630:	add    DWORD PTR [ecx],ebp
  418632:	jecxz  0x41868c
  418634:	data16 or al,0xc2
  418637:	jge    0x4186ac
  418639:	ret    
  41863a:	popf   
  41863b:	int3   
  41863c:	fst    st(6)
  41863e:	mov    al,0x84
  418640:	pop    ds
  418641:	mov    ah,0xde
  418643:	out    0x1d,eax
  418645:	mov    eax,ds:0x7efeffba
  41864a:	cmp    ch,BYTE PTR [ecx-0xe392b1e]
  418650:	std    
  418651:	push   es
  418652:	jnp    0x41868b
  418654:	(bad)  
  418655:	cld    
  418656:	mov    esi,0xc1a69435
  41865b:	jmp    0x9d33:0x6feb0fa5
  418662:	dec    edx
  418663:	and    al,0x7f
  418665:	xor    eax,DWORD PTR [ecx+eax*4+0x5b]
  418669:	test   ecx,0x9d66acf7
  41866f:	sbb    ecx,DWORD PTR [esi-0x40]
  418672:	xchg   ebp,eax
  418673:	jecxz  0x41863b
  418675:	cs mov bl,0xc1
  418678:	sahf   
  418679:	pop    ds
  41867a:	push   0x3b3bce71
  41867f:	jbe    0x41860c
  418681:	mov    dl,0x9b
  418683:	add    eax,0x57f723b6
  418688:	out    0x80,eax
  41868a:	mov    eax,ds:0x30d1110d
  41868f:	out    dx,al
  418690:	cmp    ecx,ebx
  418692:	jmp    0xea81fad
  418697:	icebp  
  418698:	pop    edx
  418699:	rol    BYTE PTR [ebp-0x3a],0xdf
  41869d:	in     al,dx
  41869e:	stc    
  41869f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186a0:	ds (bad) 
  4186a3:	fcomp  DWORD PTR [edi]
  4186a5:	mov    WORD PTR [esi+0x1e],?
  4186a8:	push   esi
  4186a9:	rcr    BYTE PTR [esi-0x2f],0x5f
  4186ad:	push   cs
  4186ae:	push   esp
  4186af:	inc    ebx
  4186b0:	xor    al,0x9d
  4186b2:	sbb    ecx,DWORD PTR [ebx+0x3b]
  4186b5:	push   ds
  4186b6:	fimul  DWORD PTR [edx-0x69]
  4186b9:	jo     0x4186ef
  4186bb:	clc    
  4186bc:	in     eax,dx
  4186bd:	sbb    al,0x1
  4186bf:	or     ebp,DWORD PTR [ebx]
  4186c1:	fist   WORD PTR [edi+0x545e976c]
  4186c7:	adc    al,0xd0
  4186c9:	cs nop
  4186cb:	adc    eax,edi
  4186cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ce:	mov    ebp,DWORD PTR [eax]
  4186d0:	and    bh,BYTE PTR [ebx-0x6abda902]
  4186d6:	cmp    esi,esi
  4186d8:	lahf   
  4186d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186da:	jmp    0x41871f
  4186dc:	pushf  
  4186dd:	cmp    ecx,DWORD PTR [ecx]
  4186df:	and    DWORD PTR [ebp-0x4d],0xbe4ec2ea
  4186e6:	fmulp  st(7),st
  4186e8:	sbb    bl,cl
  4186ea:	icebp  
  4186eb:	inc    eax
  4186ec:	sub    eax,0xdad0ea9c
  4186f1:	xchg   esp,eax
  4186f2:	adc    DWORD PTR [eax+0x18b381f7],edx
  4186f8:	jo     0x41868c
  4186fa:	cmp    bl,bl
  4186fc:	aaa    
  4186fd:	jge    0x418683
  4186ff:	push   edi
  418700:	jae    0x4186dd
  418702:	push   edi
  418703:	or     ah,cl
  418705:	mov    esi,0x8f6e638b
  41870a:	mov    esp,0x7c628cca
  41870f:	jmp    0x849d:0xd834f9fa
  418716:	push   edi
  418717:	pop    eax
  418718:	mov    BYTE PTR [ecx+0x3416ab4e],0xbe
  41871f:	mov    esp,0x9d9e0fe
  418724:	add    DWORD PTR [esi+0x468ed57],esi
  41872a:	pop    esi
  41872b:	stc    
  41872c:	pop    ebp
  41872d:	js     0x418721
  41872f:	aas    
  418730:	outs   dx,DWORD PTR ds:[esi]
  418731:	mov    esi,0x7ac01026
  418736:	rcr    DWORD PTR [ebx],0xcd
  418739:	scas   eax,DWORD PTR es:[edi]
  41873a:	out    dx,al
  41873b:	gs mov edx,0x4d49986a
  418741:	or     BYTE PTR [edx+0x2ac8ce8f],ch
  418747:	inc    ecx
  418748:	idiv   BYTE PTR [edx]
  41874a:	adc    edx,DWORD PTR [edi]
  41874c:	and    dl,BYTE PTR [eax-0x19]
  41874f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418750:	pop    edx
  418751:	fidiv  DWORD PTR [ecx+0x13]
  418754:	xor    dh,ah
  418756:	pop    ebx
  418757:	outs   dx,BYTE PTR ds:[esi]
  418758:	jl     0x4186fd
  41875a:	pop    eax
  41875b:	jbe    0x4187c9
  41875d:	xchg   edx,eax
  41875e:	adc    BYTE PTR [ebx+0x59595d3f],bl
  418764:	es int 0xaa
  418767:	push   edi
  418768:	mov    eax,0xa647ce1f
  41876d:	bound  esi,QWORD PTR [ecx]
  41876f:	push   esp
  418770:	nop
  418771:	cmp    DWORD PTR [edi-0x77],edx
  418774:	adc    al,0xe
  418776:	call   0x65f1003c
  41877b:	js     0x41870d
  41877d:	xor    BYTE PTR [edi-0x74],cl
  418780:	in     al,0xc8
  418782:	clc    
  418783:	xor    cl,BYTE PTR [ebx+eiz*8+0x30]
  418787:	add    ebx,DWORD PTR [ebx-0x78845265]
  41878d:	mov    bl,0x4
  41878f:	shl    DWORD PTR [eax-0x7a6c1604],cl
  418795:	mov    edi,DWORD PTR [ebp+0x6fa3ad58]
  41879b:	retf   
  41879c:	aas    
  41879d:	mov    dh,0xe4
  41879f:	sbb    BYTE PTR [edi],0xe6
  4187a2:	xchg   edi,eax
  4187a3:	and    BYTE PTR [edx-0x28b795f2],al
  4187a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187aa:	cld    
  4187ab:	or     al,0x9c
  4187ad:	call   0x60bde8b3
  4187b2:	sub    eax,0x5083e072
  4187b7:	mov    dh,0xa7
  4187b9:	cmp    esi,0xcd1a2f5e
  4187bf:	loope  0x418828
  4187c1:	dec    ebp
  4187c2:	pusha  
  4187c3:	in     al,dx
  4187c4:	adc    esp,esp
  4187c6:	cmp    eax,0x8981996a
  4187cb:	jne    0x4187bf
  4187cd:	aad    0xc7
  4187cf:	out    0xcc,al
  4187d1:	pop    edi
  4187d2:	jne    0x41880c
  4187d4:	push   ebp
  4187d5:	into   
  4187d6:	sbb    eax,0xb81c7861
  4187db:	mov    esi,0xb61a835a
  4187e0:	push   ds
  4187e1:	add    ch,BYTE PTR [ebp+edx*2-0x2f]
  4187e5:	cwde   
  4187e6:	xor    esi,0x54
  4187e9:	nop
  4187ea:	(bad)  
  4187eb:	cld    
  4187ec:	inc    ebx
  4187ed:	cs adc al,0x31
  4187f0:	fmul   DWORD PTR [ebx+0x4d]
  4187f3:	inc    esi
  4187f4:	int    0xa9
  4187f6:	mov    ah,0x58
  4187f8:	and    BYTE PTR [ecx],cl
  4187fa:	fsub   st,st(7)
  4187fc:	out    0xcf,eax
  4187fe:	add    DWORD PTR [ecx],eax
  418800:	push   edx
  418801:	add    DWORD PTR [ebx-0x47920c83],ebx
  418807:	inc    edx
  418808:	dec    edi
  418809:	inc    al
  41880b:	int    0x37
  41880d:	(bad)  
  41880e:	call   0x1dd8:0xfd601cb5
  418815:	fimul  DWORD PTR [ebx-0x6617124c]
  41881b:	es in  al,dx
  41881d:	scas   eax,DWORD PTR es:[edi]
  41881e:	jnp    0x418853
  418820:	call   0x3c586d66
  418825:	jno    0x418836
  418827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418828:	pop    ebx
  418829:	adc    BYTE PTR [ebp+0xa9cf472],dh
  41882f:	sti    
  418830:	sar    BYTE PTR [ebx-0x6ac0c12e],0x19
  418837:	ret    
  418838:	mov    eax,ds:0xfe31e7d1
  41883d:	fwait
  41883e:	mov    esi,0x6e31b901
  418843:	xchg   ecx,edi
  418845:	push   esp
  418846:	pop    eax
  418847:	dec    edx
  418848:	cmp    eax,0xb8c34b34
  41884d:	lods   al,BYTE PTR ds:[esi]
  41884e:	sbb    eax,0xf5d2ad2a
  418853:	mov    dl,0xb1
  418855:	mov    ds:0xbe82aacc,eax
  41885a:	stos   DWORD PTR es:[edi],eax
  41885b:	call   0xe2fb:0x23f2caff
  418862:	push   edi
  418863:	enter  0x5d3b,0x22
  418867:	(bad)  
  418868:	jp     0x4187f6
  41886a:	jae    0x4188a0
  41886c:	sub    bh,ah
  41886e:	add    BYTE PTR [eax],dl
  418870:	pop    edx
  418871:	dec    BYTE PTR [ebx-0x59]
  418874:	jns    0x418853
  418876:	pop    edx
  418877:	cld    
  418878:	push   0x4fdcff5
  41887d:	repz pop esp
  41887f:	out    0xb,eax
  418881:	(bad)  
  418882:	jp     0x41884f
  418884:	repz push 0xffffff83
  418887:	dec    edi
  418888:	aaa    
  418889:	std    
  41888a:	aas    
  41888b:	inc    ecx
  41888c:	cmp    bh,BYTE PTR [ebp-0x6b77b8ed]
  418892:	test   al,0x43
  418894:	test   eax,0xe3637e5a
  418899:	add    dl,0x14
  41889c:	sub    al,0x3b
  41889e:	inc    esp
  41889f:	jecxz  0x41883c
  4188a1:	xor    edx,DWORD PTR [eax+ebx*2-0x11]
  4188a5:	dec    eax
  4188a6:	xor    bl,ch
  4188a8:	bound  ecx,QWORD PTR [ebx]
  4188aa:	mov    ah,0xe2
  4188ac:	and    BYTE PTR [ecx+0x6695766],al
  4188b2:	fdiv   QWORD PTR [ebx+0x5b]
  4188b5:	mov    ecx,DWORD PTR [esp+0x48]
  4188b9:	or     DWORD PTR ds:0x42824b,0x42823b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428163
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428253,0x4282ab
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42819f,0x4282a3
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42824f,0x42838f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42828b,0x7154
  418909:	call   DWORD PTR ds:0x428db8
  41890f:	or     DWORD PTR ds:0x4282a3,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x4283a7,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42832f,0x0
  418935:	mov    DWORD PTR ds:0x42830f,ebx
  41893b:	mov    DWORD PTR ds:0x428293,ebx
  418941:	mov    esi,DWORD PTR ds:0x428263
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42832f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dfc
  41896e:	movzx  esi,WORD PTR ds:0x428333
  418975:	sbb    DWORD PTR ds:0x428173,esi
  41897b:	adc    DWORD PTR ds:0x42837f,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283b7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428247
  418991:	xor    esi,DWORD PTR ds:0x428183
  418997:	mov    DWORD PTR ds:0x428247,esi
  41899d:	add    DWORD PTR ds:0x428257,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283b3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42838b,0x42824b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428173,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42832b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282b3
  4189ec:	mov    edx,DWORD PTR ds:0x42823b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283b3,0x606f
  418a03:	mov    DWORD PTR ds:0x42818f,ebx
  418a09:	cmp    DWORD PTR ds:0x42832b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428e00
  418a1c:	adc    DWORD PTR ds:0x42816b,ebx
  418a22:	or     DWORD PTR ds:0x42826f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42821f
  418a34:	mov    edx,DWORD PTR ds:0x428343
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428333
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282b7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283b3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42828b,0x11c5
  418a73:	mov    DWORD PTR ds:0x4283a7,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42816b
  418a85:	mov    eax,ds:0x4282ab
  418a8a:	cmp    DWORD PTR ds:0x4283b3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428ea0
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428383,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428293,edi
  418ac0:	or     DWORD PTR ds:0x42828b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42837f,ebx
  418ad0:	mov    eax,ds:0x422568
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42818b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0x5b0b184
  418af3:	mov    ch,bl
  418af5:	jle    0x418a91
  418af7:	retf   
  418af8:	push   ss
  418af9:	sbb    BYTE PTR [edx+edx*1-0x5ff0e7e8],bh
  418b00:	pop    ds
  418b01:	stc    
  418b02:	mov    ebx,0x77e543b8
  418b07:	sbb    al,0xb
  418b09:	fincstp 
  418b0b:	lea    edi,ds:0x85152da4
  418b11:	fld    TBYTE PTR [edi-0x1bcae388]
  418b17:	cld    
  418b18:	out    dx,al
  418b19:	ds dec ebx
  418b1b:	sbb    edi,DWORD PTR [ecx+0x4935940]
  418b21:	sub    ah,BYTE PTR [esi+0x7d]
  418b24:	cmp    eax,eax
  418b26:	mov    edi,0xa7daf514
  418b2b:	cmc    
  418b2c:	fbstp  TBYTE PTR [ecx+0x6]
  418b2f:	test   DWORD PTR [ecx-0x16],esi
  418b32:	dec    edx
  418b33:	daa    
  418b34:	call   0x64da4861
  418b39:	sub    BYTE PTR [edx+0x1e],0x5
  418b3d:	sub    DWORD PTR [ebx*4+0x10f37399],ebp
  418b44:	push   ecx
  418b45:	sahf   
  418b46:	pop    eax
  418b47:	and    al,0xa5
  418b49:	sub    eax,DWORD PTR [edx]
  418b4b:	test   cl,dh
  418b4d:	test   BYTE PTR [esi-0x97b5aef],cl
  418b53:	(bad)
  418b56:	bound  eax,QWORD PTR [eax+0x3893fb43]
  418b5c:	stos   BYTE PTR es:[edi],al
  418b5d:	or     al,0x86
  418b5f:	push   edi
  418b60:	addr16 mov al,cs:0x5ac
  418b65:	push   esi
  418b66:	bound  edx,QWORD PTR [edx-0x31b3b8f3]
  418b6c:	adc    edi,DWORD PTR [edx-0x74455fc5]
  418b72:	loop   0x418bdd
  418b74:	fbld   TBYTE PTR [eax+0x679af5bb]
  418b7a:	hlt    
  418b7b:	std    
  418b7c:	addr16 mov ebx,0x5f65ce19
  418b82:	xor    esp,edx
  418b84:	popf   
  418b85:	popa   
  418b86:	dec    ebp
  418b87:	jae    0x418baa
  418b89:	mov    dl,0x26
  418b8b:	stos   DWORD PTR es:[edi],eax
  418b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b8d:	add    ecx,DWORD PTR [eax+0x3d26ae2a]
  418b93:	into   
  418b94:	fld    QWORD PTR [eax+0x16]
  418b97:	mov    eax,ds:0x14fccf4d
  418b9c:	scas   al,BYTE PTR es:[edi]
  418b9d:	sub    BYTE PTR [edi+0x68],ch
  418ba0:	scas   eax,DWORD PTR es:[edi]
  418ba1:	and    eax,0xb059a802
  418ba6:	pop    ds
  418ba7:	push   edi
  418ba8:	stc    
  418ba9:	cmp    BYTE PTR [edi-0x3c931658],0x9e
  418bb0:	sar    ch,1
  418bb2:	add    DWORD PTR [edi+0x5a427cab],0xffffffa0
  418bb9:	adc    eax,0x1291aa85
  418bbe:	push   ecx
  418bbf:	stos   DWORD PTR es:[edi],eax
  418bc0:	in     eax,dx
  418bc1:	pop    ds
  418bc2:	push   ss
  418bc3:	dec    ebp
  418bc4:	mov    WORD PTR [ecx-0x334d14c7],ss
  418bca:	jle    0x418c17
  418bcc:	push   ebp
  418bcd:	mov    edi,0x596285d0
  418bd2:	mov    ds:0x6ad471de,al
  418bd7:	loopne 0x418c46
  418bd9:	pop    edi
  418bda:	out    0xda,eax
  418bdc:	(bad)  [edx]
  418bde:	pushf  
  418bdf:	cmp    ch,cl
  418be1:	and    ecx,DWORD PTR [esi+0x67d7a02c]
  418be7:	je     0x418b83
  418be9:	pop    es
  418bea:	aam    0xde
  418bec:	jge    0x418beb
  418bee:	inc    ebx
  418bef:	adc    ch,ch
  418bf1:	repz push ebx
  418bf3:	mov    bl,0xa9
  418bf5:	pop    ss
  418bf6:	mov    al,0xf6
  418bf8:	nop
  418bf9:	jecxz  0x418c0b
  418bfb:	pop    ecx
  418bfc:	retf   
  418bfd:	jbe    0x418bca
  418bff:	pop    ds
  418c00:	repnz add eax,0x6ec3c7de
  418c06:	or     ebx,DWORD PTR ds:0x9c3ae8dd
  418c0c:	xor    cl,al
  418c0e:	cmp    dh,0xcb
  418c11:	and    al,0x8
  418c13:	les    ebx,FWORD PTR ds:0x2a5d6de4
  418c19:	mov    cl,0x6f
  418c1b:	imul   edi,eax,0x25d5f09a
  418c21:	repz imul esi,DWORD PTR [bx],0x42
  418c26:	js     0x418bc0
  418c28:	mov    al,0x37
  418c2a:	out    0xaf,al
  418c2c:	push   ebp
  418c2d:	scas   eax,DWORD PTR es:[edi]
  418c2e:	je     0x418c4e
  418c30:	mov    bl,0xb1
  418c32:	fwait
  418c33:	addr16 jmp 0xa4d74a24
  418c39:	xchg   ebx,eax
  418c3a:	dec    ecx
  418c3b:	adc    al,0xb5
  418c3d:	xor    eax,0x9a0f3784
  418c42:	es mov ch,0x8b
  418c45:	inc    esp
  418c46:	pop    ebp
  418c47:	inc    edx
  418c48:	and    eax,0x1b784d31
  418c4d:	je     0x418c0b
  418c4f:	add    DWORD PTR [ebx+0x3e33ac70],ebp
  418c55:	inc    ebp
  418c56:	ins    BYTE PTR es:[edi],dx
  418c57:	sbb    ebx,DWORD PTR [ecx+0x6ef00773]
  418c5d:	mov    ecx,0xe90bf8a1
  418c62:	jmp    0x15a5:0xbc4e4b12
  418c69:	cwde   
  418c6a:	mov    edi,0x5ae89d71
  418c6f:	push   esp
  418c70:	icebp  
  418c71:	push   esp
  418c72:	lds    esi,FWORD PTR [esi+0x59]
  418c75:	xchg   ebp,eax
  418c76:	add    edx,ebp
  418c78:	xlat   BYTE PTR ds:[ebx]
  418c79:	sub    BYTE PTR [edx-0x4dac84b1],dh
  418c7f:	cmp    ch,cl
  418c81:	test   BYTE PTR [esi+0x5b],0x17
  418c85:	push   ebp
  418c86:	xchg   edx,eax
  418c87:	push   cs
  418c88:	mov    eax,0xa16d5f24
  418c8d:	fisubr WORD PTR [ecx]
  418c8f:	lods   eax,DWORD PTR ds:[esi]
  418c90:	adc    BYTE PTR [edi+0x5fc1a66c],cl
  418c96:	and    dh,BYTE PTR [esi-0x332db738]
  418c9c:	pop    esp
  418c9d:	cld    
  418c9e:	sbb    BYTE PTR [ebx-0x4c6be010],dl
  418ca4:	(bad)  
  418ca5:	imul   edi,ecx,0x90e43e91
  418cab:	xchg   BYTE PTR [edx-0x1e],cl
  418cae:	jle    0x418c34
  418cb0:	cmp    DWORD PTR [ebx],0x635d5851
  418cb6:	jbe    0x418c49
  418cb8:	fidivr DWORD PTR [ecx-0x6e]
  418cbb:	fist   DWORD PTR [ecx]
  418cbd:	sbb    DWORD PTR [edi],esp
  418cbf:	mov    al,BYTE PTR [eax-0x2a672b85]
  418cc5:	gs jns 0x418ceb
  418cc8:	loope  0x418cf2
  418cca:	pop    edx
  418ccb:	inc    ecx
  418ccc:	push   edi
  418ccd:	rcr    DWORD PTR [ecx+0x9],1
  418cd0:	(bad)  
  418cd1:	mov    bh,0xc0
  418cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cd4:	mov    dh,0x37
  418cd6:	sub    cl,BYTE PTR [edx+0x5781d21a]
  418cdc:	mov    BYTE PTR [ebp+0x39041e8a],ch
  418ce2:	pop    esp
  418ce3:	stos   DWORD PTR es:[edi],eax
  418ce4:	(bad)  
  418ce5:	jmp    DWORD PTR ds:0x696734c1
  418ceb:	shr    edx,1
  418ced:	xchg   esp,eax
  418cee:	fs push ebp
  418cf0:	mov    ds:0x8843a008,al
  418cf5:	fs je  0x418cab
  418cf8:	int3   
  418cf9:	fstp   DWORD PTR [edi]
  418cfb:	dec    esp
  418cfc:	xchg   DWORD PTR [edx-0x1cbf23ac],ecx
  418d02:	pop    ecx
  418d03:	sub    eax,DWORD PTR [esp+esi*4-0xbba7eae]
  418d0a:	push   0x8fa66aa8
  418d0f:	jl     0x418d63
  418d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d12:	and    DWORD PTR [eax-0x60],0x8b5d1ddf
  418d19:	shr    BYTE PTR [ebp-0x2ae5ffdd],0x49
  418d20:	inc    edx
  418d21:	fidivr DWORD PTR [eax-0x62611839]
  418d27:	rcr    DWORD PTR [ebx+ebx*4],1
  418d2a:	aam    0xf2
  418d2c:	add    DWORD PTR [edx-0x64],ebp
  418d2f:	ss cmp eax,0x86b32b54
  418d35:	xor    eax,DWORD PTR [ebx+0x63997a4b]
  418d3b:	inc    ebx
  418d3c:	(bad)  
  418d3e:	jge    0x418dbf
  418d40:	enter  0x3b11,0x3
  418d44:	xor    DWORD PTR [eax+0x2],ecx
  418d47:	ds adc eax,0x474c8614
  418d4d:	adc    cl,BYTE PTR [eax+esi*1]
  418d50:	inc    edx
  418d51:	jp     0x418d8b
  418d53:	(bad)  
  418d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d55:	iret   
  418d56:	jmp    0x4bf063e0
  418d5b:	jecxz  0x418db4
  418d5d:	mov    bl,0x93
  418d5f:	jns    0x418d4b
  418d61:	pop    ebx
  418d62:	aas    
  418d63:	mov    eax,0x335b8335
  418d68:	xlat   BYTE PTR ds:[ebx]
  418d69:	adc    ecx,DWORD PTR [eax-0x29082788]
  418d6f:	xchg   ebx,eax
  418d70:	jmp    0xf084:0xff0bab84
  418d77:	js     0x418db9
  418d79:	ja     0x418de8
  418d7b:	pop    edx
  418d7c:	xchg   esp,eax
  418d7d:	pushf  
  418d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d7f:	cwde   
  418d80:	call   0xa9a4ff2b
  418d85:	add    al,0xfd
  418d87:	lea    eax,[edi+edi*4-0x762ba98d]
  418d8e:	dec    esi
  418d8f:	dec    ebx
  418d90:	mov    edi,0xa6b47c61
  418d95:	pop    ss
  418d96:	shl    DWORD PTR [ebp-0x15],1
  418d99:	cli    
  418d9a:	mov    edi,0x12190a37
  418d9f:	adc    ah,ah
  418da1:	dec    esi
  418da2:	sar    BYTE PTR [edi+0x725a61cf],0x4c
  418da9:	add    edx,DWORD PTR [ecx-0x1c]
  418dac:	adc    eax,DWORD PTR [edi-0x6d]
  418daf:	scas   eax,DWORD PTR es:[edi]
  418db0:	ror    cl,1
  418db2:	hlt    
  418db3:	in     al,dx
  418db4:	loop   0x418de7
  418db6:	cdq    
  418db7:	and    al,0x4d
  418db9:	push   es
  418dba:	xchg   edx,eax
  418dbb:	in     eax,0x33
  418dbd:	hlt    
  418dbe:	repnz sbb dh,BYTE PTR [di+0x2e]
  418dc3:	xchg   edi,eax
  418dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc5:	inc    ecx
  418dc6:	and    BYTE PTR [esi],bh
  418dc8:	pop    ebp
  418dc9:	xchg   DWORD PTR [ecx+0x43],esi
  418dcc:	xor    edi,esi
  418dce:	and    ah,BYTE PTR [ebp-0x7]
  418dd1:	add    DWORD PTR ds:0x3ade53d7,eax
  418dd7:	mov    ebx,0x53251e5
  418ddc:	cmc    
  418ddd:	inc    esp
  418dde:	jo     0x418e4a
  418de0:	cmp    esi,eax
  418de2:	jecxz  0x418dc0
  418de4:	ss call 0x9d99ea58
  418dea:	adc    edx,0x63c6b248
  418df0:	sub    eax,0xd5d6bad6
  418df5:	(bad)  
  418df6:	(bad)  
  418df7:	mov    bl,0x5
  418df9:	add    eax,0xc35b50d3
  418dfe:	sub    DWORD PTR [eax+0x6ccef885],0x73
  418e05:	sti    
  418e06:	imul   esi,DWORD PTR [ecx],0x269269c5
  418e0c:	arpl   WORD PTR [ecx],di
  418e0e:	and    BYTE PTR [ebx],0x40
  418e11:	or     dl,BYTE PTR [edi+0x4f7f882d]
  418e17:	adc    edi,ebx
  418e19:	leave  
  418e1a:	and    dl,bh
  418e1c:	lea    ebp,ds:0x7d7891f6
  418e22:	inc    esi
  418e23:	mov    al,ds:0xbbd25341
  418e28:	pop    ebx
  418e29:	mov    eax,0xd1eaec4e
  418e2e:	sar    DWORD PTR [edx+0x7c],1
  418e31:	test   BYTE PTR [eax-0x374832b8],ah
  418e37:	jecxz  0x418ea0
  418e39:	xchg   ebx,eax
  418e3a:	icebp  
  418e3b:	data16 shl BYTE PTR [ecx-0x48819d2e],0xf9
  418e43:	bound  esp,QWORD PTR [ecx+0x44e6069d]
  418e49:	in     al,0xf3
  418e4b:	jl     0x418e79
  418e4d:	or     BYTE PTR [eax+0x50],dl
  418e50:	in     al,0x87
  418e52:	adc    DWORD PTR [ebx-0x6a],ebp
  418e55:	jl     0x418e3d
  418e57:	mov    DWORD PTR [ecx+0x41],esi
  418e5a:	ss push esp
  418e5c:	or     ecx,DWORD PTR [edi+0x27]
  418e5f:	push   ss
  418e60:	dec    esi
  418e61:	push   ecx
  418e62:	sbb    ebp,ecx
  418e64:	fdivr  DWORD PTR [edx-0xa2751e9]
  418e6a:	push   ss
  418e6b:	sub    BYTE PTR [ebx-0x74],ch
  418e6e:	push   edx
  418e6f:	sbb    ah,0x22
  418e72:	aam    0x1c
  418e74:	je     0x418e45
  418e76:	xchg   ebp,eax
  418e77:	ins    DWORD PTR es:[edi],dx
  418e78:	mov    edx,0xb803a9c9
  418e7d:	push   ss
  418e7e:	cli    
  418e7f:	or     bl,dh
  418e81:	sbb    eax,0xe3c5b604
  418e86:	cld    
  418e87:	retf   0xbd60
  418e8a:	mov    bl,0x2e
  418e8c:	pop    esi
  418e8d:	pop    ss
  418e8e:	xor    eax,0x6dd5b61d
  418e93:	ror    DWORD PTR [ebp-0x5e74f320],cl
  418e99:	sbb    DWORD PTR [ebp-0x47e9e7e4],esi
  418e9f:	mov    ah,0x4
  418ea1:	fnstenv ds:0x1ba14ae0
  418ea7:	pop    esp
  418ea8:	xor    al,BYTE PTR [eax]
  418eaa:	lock popf 
  418eac:	xor    BYTE PTR [edi-0x47],cl
  418eaf:	jnp    0x8c0ab1b5
  418eb5:	enter  0xf181,0xaf
  418eb9:	call   0x83af:0x3d83a406
  418ec0:	inc    edx
  418ec1:	add    BYTE PTR [eax],al
  418ec3:	mov    DWORD PTR ds:0x428177,0x216c
  418ecd:	mov    DWORD PTR ds:0x42827b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428273,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428283,0x562c
  418ef0:	mov    DWORD PTR ds:0x4282ab,0x3af5
  418efa:	cmp    DWORD PTR ds:0x4283af,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428337
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428e04
  418f1a:	not    DWORD PTR ds:0x4281ab
  418f20:	sub    DWORD PTR ds:0x42839f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428163
  418f32:	mov    edx,DWORD PTR ds:0x4282a7
  418f38:	sbb    DWORD PTR ds:0x42838b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282e3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42831b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42839f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283b3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x42830b,0x0
  418f6c:	not    DWORD PTR ds:0x428277
  418f72:	not    DWORD PTR ds:0x4281a7
  418f78:	mov    DWORD PTR ds:0x4282ff,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42832f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x42830b,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42838b
  418fb5:	call   DWORD PTR ds:0x428e08
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42823f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42819f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42838f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42819b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42817f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42816f,0x0
  41900e:	mov    DWORD PTR ds:0x428183,0x4347
  419018:	mov    DWORD PTR ds:0x4281a7,0x6064
  419022:	mov    DWORD PTR ds:0x42828f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428263,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42816f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428e0c
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282ff
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42823b
  41906c:	or     DWORD PTR ds:0x42837f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x728f3402]
  419095:	mov    ecx,0xc33fb06d
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1+0x5bb01818],bh
  4190a2:	pop    ebp
  4190a3:	das    
  4190a4:	and    DWORD PTR [esi-0xa98aa19],eax
  4190aa:	jmp    0x4190c9
  4190ac:	cmp    edi,DWORD PTR [eax-0x59c2de19]
  4190b2:	lea    esi,[edi-0x2e]
  4190b5:	push   edx
  4190b7:	mov    WORD PTR [ebx-0x51],cs
  4190ba:	ja     0x41912c
  4190bc:	pop    esp
  4190bd:	fwait
  4190be:	mov    BYTE PTR [esi+0x36],ah
  4190c1:	inc    ebx
  4190c2:	mov    DWORD PTR [edx+ecx*8],esi
  4190c5:	ret    
  4190c6:	dec    edi
  4190c7:	rcl    BYTE PTR [edi*2-0x7f135031],0xce
  4190cf:	stos   BYTE PTR es:[edi],al
  4190d0:	push   eax
  4190d1:	mov    ecx,0xb7b1e2b
  4190d6:	jo     0x4190b0
  4190d8:	jle    0x4190b3
  4190da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190dc:	daa    
  4190dd:	mov    al,ds:0x8b5645a9
  4190e2:	ret    0xbc9c
  4190e5:	push   cs
  4190e6:	pop    edx
  4190e7:	cs ins BYTE PTR es:[edi],dx
  4190e9:	cmp    BYTE PTR [esi-0x2],dh
  4190ec:	dec    ebp
  4190ed:	int    0x4
  4190ef:	pop    ss
  4190f0:	repz scas al,BYTE PTR es:[edi]
  4190f2:	xor    ch,BYTE PTR [edx]
  4190f4:	dec    esi
  4190f5:	imul   edx,DWORD PTR [edx],0xc1f7bd0a
  4190fb:	pextrw esp,(bad),0xc5
  4190fd:	xor    ah,BYTE PTR es:[eax]
  419100:	adc    BYTE PTR [edx+eax*1+0x777fa02b],ah
  419107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419108:	mov    edi,0x73f3365
  41910d:	xchg   edi,eax
  41910e:	sti    
  41910f:	cmp    ebp,DWORD PTR [eax]
  419111:	imul   eax,DWORD PTR [eax],0x9964afe
  419117:	xchg   esp,eax
  419118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419119:	jb     0x41913e
  41911b:	ret    
  41911c:	repz retf 0xe234
  419120:	xchg   DWORD PTR [edi],eax
  419122:	in     eax,dx
  419123:	and    al,BYTE PTR [edi+0x6c077a78]
  419129:	fld    TBYTE PTR [edi-0x7b]
  41912c:	ins    BYTE PTR es:[edi],dx
  41912d:	pop    esp
  41912e:	cmp    DWORD PTR [eax+eiz*2],ebx
  419131:	adc    dh,dh
  419133:	dec    ebx
  419134:	or     bh,BYTE PTR [edi]
  419136:	adc    al,0x9a
  419138:	jp     0x41911e
  41913a:	imul   edx,ecx,0xf176fd08
  419140:	stos   DWORD PTR es:[edi],eax
  419141:	pop    ds
  419142:	test   ch,0x80
  419145:	or     al,0xba
  419147:	jno    0x41919b
  419149:	iret   
  41914a:	fist   WORD PTR [ebp+0xc9a62c6]
  419150:	cmp    eax,DWORD PTR [ebx+edi*4]
  419153:	sub    dh,ch
  419155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419156:	jns    0x419179
  419158:	adc    al,0xc1
  41915a:	lods   al,BYTE PTR ds:[esi]
  41915b:	jmp    0xb8291f02
  419160:	test   eax,0xf54f2f05
  419165:	add    DWORD PTR [esp+ebp*2+0x29be48b4],ecx
  41916c:	fdiv   st,st(3)
  41916e:	add    eax,0x1e300767
  419173:	xor    esi,eax
  419175:	mov    ebp,0x82bdd738
  41917a:	push   esp
  41917b:	jmp    0xb32f:0x49f831e9
  419182:	int3   
  419183:	aad    0x3b
  419185:	pop    esp
  419186:	lahf   
  419187:	je     0x4191d4
  419189:	add    dh,BYTE PTR [edi+0x7d605235]
  41918f:	add    al,BYTE PTR [edi+0x24f2608]
  419195:	ins    DWORD PTR es:[edi],dx
  419196:	inc    esi
  419197:	cmc    
  419198:	test   dl,dl
  41919a:	out    dx,al
  41919b:	imul   esi,DWORD PTR [esi-0x47],0x5c
  41919f:	aam    0x0
  4191a1:	out    dx,al
  4191a2:	jns    0x41921d
  4191a4:	mov    esi,0x1cfd8c4
  4191a9:	jge    0x419198
  4191ab:	mov    dh,0x34
  4191ad:	add    BYTE PTR [edx+0x6a004127],bh
  4191b3:	xor    eax,0x8930681c
  4191b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191b9:	xchg   ecx,eax
  4191ba:	xchg   esi,eax
  4191bb:	inc    edx
  4191bc:	ror    BYTE PTR [ebx+0x26dbd171],0x54
  4191c3:	sbb    dl,BYTE PTR [ebx+0x68]
  4191c6:	jmp    0x41916f
  4191c8:	fistp  WORD PTR ds:0x409aa0d2
  4191ce:	leave  
  4191cf:	jno    0x419188
  4191d1:	pop    ecx
  4191d2:	fdiv   DWORD PTR [ecx+ebx*1-0x55]
  4191d6:	test   al,0x4a
  4191d8:	jno    0x419247
  4191da:	xor    BYTE PTR [ebp+0x3c],0x1f
  4191de:	sbb    eax,0xddcbf8d
  4191e3:	push   es
  4191e4:	outs   dx,DWORD PTR ds:[esi]
  4191e5:	jno    0x41919c
  4191e7:	cmp    esp,DWORD PTR [ecx-0x3d137fc9]
  4191ed:	ret    
  4191ee:	call   0x8a8aafb6
  4191f3:	and    ebp,esp
  4191f5:	sbb    BYTE PTR [ebx+0x5a16f],dl
  4191fb:	fs cli 
  4191fd:	jg     0x419279
  4191ff:	int3   
  419200:	or     edi,0x4f
  419203:	adc    esp,ecx
  419205:	out    dx,al
  419206:	xchg   edx,eax
  419207:	xchg   ch,al
  419209:	test   DWORD PTR [eax-0x2fc9820f],eax
  41920f:	mov    bl,0xc8
  419211:	push   eax
  419212:	jae    0x419261
  419214:	mov    esp,0x919852fa
  419219:	fcom   QWORD PTR [esi-0x6f579c26]
  41921f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419220:	ret    0xc6a2
  419223:	jmp    0x6248f4f1
  419228:	in     eax,dx
  419229:	adc    BYTE PTR [di-0x3850],ah
  41922e:	aas    
  41922f:	clc    
  419230:	cmp    DWORD PTR [ebx+edx*2],ecx
  419233:	scas   eax,DWORD PTR es:[edi]
  419234:	(bad)  
  419235:	std    
  419236:	xor    BYTE PTR [esp+edx*2-0x30],cl
  41923a:	ds xor eax,0x328a48a4
  419240:	test   DWORD PTR [edi-0x4f],ecx
  419243:	ins    DWORD PTR es:[edi],dx
  419244:	das    
  419245:	es test eax,0x7fba4b06
  41924b:	adc    al,0xec
  41924d:	push   ds
  41924e:	(bad)  
  41924f:	lock mov ah,0x57
  419252:	and    esi,DWORD PTR [eax+0x2e]
  419255:	or     dh,0xc1
  419258:	adc    eax,0x56439500
  41925d:	dec    ebx
  41925e:	inc    ecx
  41925f:	mov    ch,0x58
  419261:	push   ss
  419262:	retf   0xd33b
  419265:	sub    al,0x3a
  419267:	xor    ch,cl
  419269:	pop    esp
  41926a:	xchg   edx,eax
  41926b:	(bad)  
  41926c:	jmp    0x438fe054
  419271:	mov    dh,bl
  419273:	adc    dl,bl
  419275:	cmc    
  419276:	push   edi
  419277:	(bad)  
  419278:	aaa    
  419279:	adc    eax,DWORD PTR [eax+edx*4]
  41927c:	rol    DWORD PTR [ebx],0x9a
  41927f:	add    eax,0xfb915112
  419284:	add    eax,0x953048de
  419289:	out    0xd5,eax
  41928b:	iret   
  41928c:	dec    esi
  41928d:	mov    ds:0xc9476813,eax
  419292:	addr16 pop ds
  419294:	push   ecx
  419295:	push   eax
  419296:	pop    esi
  419297:	call   0x5685:0x98b15350
  41929e:	cs adc al,0x1e
  4192a1:	loope  0x41929a
  4192a3:	fisttp DWORD PTR [edx+0x16]
  4192a6:	cmp    eax,ebp
  4192a8:	mov    ebp,DWORD PTR [ebx]
  4192aa:	nop
  4192ab:	dec    ebx
  4192ac:	(bad)  
  4192ae:	xor    al,0x2e
  4192b0:	mov    al,ds:0xbe1907c1
  4192b5:	dec    eax
  4192b6:	inc    ecx
  4192b7:	xlat   BYTE PTR ds:[ebx]
  4192b8:	aam    0xc2
  4192ba:	xchg   edi,eax
  4192bb:	pusha  
  4192bc:	xchg   esp,eax
  4192bd:	add    DWORD PTR [ebp-0x2690894b],esi
  4192c3:	arpl   WORD PTR [ebp-0x25],ax
  4192c6:	jae    0x4192bf
  4192c8:	cmp    eax,0xf0b133e0
  4192cd:	push   ss
  4192ce:	rol    BYTE PTR [ebx+0x604be3cd],cl
  4192d4:	cmp    DWORD PTR [eax+0x52],ebx
  4192d7:	mov    bl,0x34
  4192d9:	push   DWORD PTR [edi-0x5a]
  4192dc:	add    eax,DWORD PTR [esi+0x4121706d]
  4192e2:	xchg   BYTE PTR [ebx],bh
  4192e4:	mov    DWORD PTR [esi],0x82726d4e
  4192ea:	jl     0x419316
  4192ec:	retf   0x6e67
  4192ef:	cmp    al,0xd5
  4192f1:	scas   al,BYTE PTR es:[edi]
  4192f2:	vorps  xmm7,xmm3,XMMWORD PTR [esi+0x7c76031b]
  4192fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192fb:	pop    edi
  4192fc:	pop    es
  4192fd:	(bad)  
  4192fe:	outs   dx,DWORD PTR ds:[esi]
  4192ff:	mov    al,dl
  419301:	push   0xe97bd30b
  419306:	(bad)  
  419307:	cwde   
  419308:	dec    ebp
  419309:	jmp    0x9d1d1a89
  41930e:	sub    eax,0x560cee08
  419313:	test   al,0xa3
  419315:	xchg   ecx,eax
  419316:	imul   eax,DWORD PTR [eax+0x10],0x69
  41931a:	repz dec eax
  41931c:	jecxz  0x4192a3
  41931e:	mov    WORD PTR [eax-0x77],?
  419321:	jmp    0x419321
  419323:	xor    BYTE PTR [ebp+0x5931a33c],0xe7
  41932a:	out    0x54,al
  41932c:	loope  0x419313
  41932e:	dec    eax
  41932f:	(bad)  
  419330:	push   0x1
  419332:	adc    al,0x51
  419334:	ins    DWORD PTR es:[edi],dx
  419335:	sbb    al,0x1c
  419337:	push   ecx
  419338:	pop    eax
  419339:	or     bh,ah
  41933b:	xchg   ecx,eax
  41933c:	fcom   st(2)
  41933e:	push   edx
  41933f:	push   es
  419340:	pop    es
  419341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419342:	out    0x12,al
  419344:	fsub   st(7),st
  419346:	ficomp DWORD PTR [edi]
  419348:	and    eax,0xeca88bf4
  41934d:	iret   
  41934e:	pop    ecx
  41934f:	les    esp,FWORD PTR ds:0x1bad9058
  419355:	test   BYTE PTR [esi+ecx*8+0x1ec97602],0x5d
  41935d:	jg     0x4193cb
  41935f:	and    BYTE PTR [edx-0x4318827e],bh
  419365:	out    0x7f,al
  419367:	add    eax,0x8b922839
  41936c:	mov    bh,BYTE PTR [esi+0x2a0436cc]
  419372:	imul   ecx,DWORD PTR [ecx+esi*8-0x56],0xca7c5bf0
  41937a:	jg     0x41936f
  41937c:	rcr    BYTE PTR [edx+edx*2],cl
  41937f:	inc    esp
  419380:	xchg   DWORD PTR [edx+0x36],esi
  419383:	shl    BYTE PTR [eax-0x18],0xd1
  419387:	or     BYTE PTR [edx],ch
  419389:	lahf   
  41938a:	mov    ds:0x5b31385,eax
  41938f:	lods   al,BYTE PTR ds:[esi]
  419390:	mov    ch,0x19
  419392:	hlt    
  419393:	lock sub eax,0x155cb572
  419399:	je     0x419379
  41939b:	ja     0x41940f
  41939d:	in     al,dx
  41939e:	mov    eax,0xe1e1b2e
  4193a3:	(bad)
  4193a6:	sbb    al,0xb
  4193a8:	dec    esi
  4193a9:	cmp    esi,ecx
  4193ab:	popa   
  4193ac:	jb     0x419412
  4193ae:	pop    edx
  4193af:	jae    0x419349
  4193b1:	stos   DWORD PTR es:[edi],eax
  4193b2:	pop    ebp
  4193b3:	js     0x41934d
  4193b5:	rcr    cl,cl
  4193b7:	mov    dh,0x98
  4193b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ba:	sbb    al,0xff
  4193bc:	jg     0x41936b
  4193be:	inc    esp
  4193bf:	mov    dl,0x7e
  4193c1:	push   eax
  4193c2:	mov    bh,0xed
  4193c4:	mov    cl,0x5f
  4193c6:	fbstp  TBYTE PTR [eax]
  4193c8:	add    bl,BYTE PTR [edx]
  4193ca:	mov    ah,0x34
  4193cc:	push   ecx
  4193cd:	cli    
  4193ce:	mov    al,0xb9
  4193d0:	mov    bh,0x35
  4193d2:	jecxz  0x41940c
  4193d4:	sub    al,0x5
  4193d6:	cmp    DWORD PTR [esi-0x624fc7e6],esp
  4193dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193dd:	lock (bad) 
  4193df:	sub    ah,BYTE PTR ds:0x6484f113
  4193e5:	mov    al,0xdd
  4193e7:	in     eax,dx
  4193e8:	mov    esi,0x511d5f1e
  4193ed:	call   0x2027:0x5677b96a
  4193f4:	popf   
  4193f5:	mov    bh,0xc6
  4193f7:	add    eax,0x6d4bc56e
  4193fc:	rol    DWORD PTR [eax],0x51
  4193ff:	jo     0x41940b
  419401:	xchg   esi,edx
  419403:	push   ecx
  419404:	cmp    al,BYTE PTR [ebx-0x79]
  419407:	sub    edx,DWORD PTR [eax+0x50]
  41940a:	inc    esp
  41940b:	jbe    0x4193b0
  41940d:	sub    ebx,eax
  41940f:	out    0x47,al
  419411:	js     0x419456
  419413:	cmp    eax,0x996cb183
  419418:	mov    eax,0xa5aefda7
  41941d:	retf   
  41941e:	push   ebx
  41941f:	cld    
  419420:	dec    ebp
  419421:	adc    ebx,edi
  419423:	push   esp
  419424:	je     0x419438
  419426:	cmp    al,0x4e
  419428:	in     al,0x32
  41942a:	xchg   esp,eax
  41942b:	fisttp DWORD PTR [edx+ebx*8]
  41942e:	test   BYTE PTR [esi*8-0x2f4aa63],cl
  419435:	jb     0x4193c8
  419437:	ins    DWORD PTR es:[edi],dx
  419438:	add    eax,DWORD PTR [eax+edi*2+0x4e7d3b78]
  41943f:	ds retf 
  419441:	push   0x77
  419443:	add    BYTE PTR [edx-0x11],dh
  419446:	pop    ds
  419447:	sbb    al,0x4d
  419449:	inc    edi
  41944a:	ret    0x3880
  41944d:	popa   
  41944e:	mov    ds:0x8b0ac528,al
  419453:	mov    WORD PTR [esp+eax*4],fs
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	dec    edi
  419460:	add    BYTE PTR [edx+0x0],0x0
  419464:	mov    DWORD PTR ds:0x4283a7,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283b3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42824f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e10
  41949a:	mov    DWORD PTR ds:0x42828b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282f3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42832b,edx
  4194b2:	mov    DWORD PTR ds:0x4282b3,0x52b1
  4194bc:	or     DWORD PTR ds:0x42818b,edx
  4194c2:	and    DWORD PTR ds:0x42838f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428337,0x0
  4194cf:	mov    DWORD PTR ds:0x428337,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282b3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283b3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42818f,0x3203
  419506:	cmp    DWORD PTR ds:0x428337,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280cb
  419518:	push   0x4280af
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428ea4
  419528:	adc    DWORD PTR ds:0x428197,0x266f
  419532:	xor    DWORD PTR ds:0x42838f,ebx
  419538:	xor    DWORD PTR ds:0x428317,ecx
  41953e:	mov    DWORD PTR ds:0x428187,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428263
  41954e:	dec    DWORD PTR ds:0x428317
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x428307,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42839b,0x4283b7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42819f,0x0
  419589:	mov    DWORD PTR ds:0x42818f,0x514f
  419593:	mov    DWORD PTR ds:0x428193,0x65eb
  41959d:	mov    DWORD PTR ds:0x428243,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x4282a3,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42819f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42805d
  4195cd:	push   0x428079
  4195d2:	call   DWORD PTR ds:0x428ea8
  4195d8:	adc    DWORD PTR ds:0x4282b7,ecx
  4195de:	and    DWORD PTR ds:0x4282ab,0x4c04
  4195e8:	add    DWORD PTR ds:0x428183,ebx
  4195ee:	and    DWORD PTR ds:0x42828f,0x6136
  4195f8:	add    DWORD PTR ds:0x428197,ebx
  4195fe:	mov    eax,ds:0x422568
  419603:	and    DWORD PTR ds:0x42831f,0x428287
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42817b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x4281a3,0x428177
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428287,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282b7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42828f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x4282a3,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428193,0x428163
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428297,0x42825f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42817b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42817b,0x428307
  4196ab:	push   0x4223ec
  4196b0:	sbb    DWORD PTR ds:0x428293,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42823b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42824f
  4196da:	sbb    DWORD PTR ds:0x428333,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428263,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42827f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42824b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428383,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282ff
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42827b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428393,0x5836
  419737:	cmp    DWORD PTR ds:0x428383,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e14
  41974d:	movzx  edx,BYTE PTR ds:0x42817b
  419754:	adc    DWORD PTR ds:0x428303,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282b7
  419761:	add    DWORD PTR ds:0x42819b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x4282af,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42819b,0x0
  419781:	mov    DWORD PTR ds:0x428263,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42827b,ebx
  419797:	cmp    DWORD PTR ds:0x42819b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e18
  4197bf:	sub    DWORD PTR ds:0x428293,0x63b8
  4197c9:	add    DWORD PTR ds:0x42830f,0x42824f
  4197d3:	add    DWORD PTR ds:0x42826f,0x428197
  4197dd:	mov    ebx,DWORD PTR ds:0x4281b7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282c7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428247,ecx
  4197f8:	and    DWORD PTR ds:0x42829f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42831f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42819b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428387,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428327,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283b3,0x6551
  419858:	cmp    DWORD PTR ds:0x42819b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428eac
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283bb
  419891:	mov    ecx,DWORD PTR ds:0x4283bf
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x4282ab
  4198a2:	cmp    DWORD PTR ds:0x42816f,0x0
  4198a9:	mov    DWORD PTR ds:0x428163,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42832f
  4198ba:	not    DWORD PTR ds:0x428323
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42816f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e1c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428293
  4198e5:	and    DWORD PTR ds:0x42832b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282ff
  4198f1:	sbb    DWORD PTR ds:0x428187,edx
  4198f7:	or     DWORD PTR ds:0x428317,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428283,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42822f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428233
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428327,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42823b,0x4551
  419946:	mov    DWORD PTR ds:0x42829f,0x487
  419950:	cmp    DWORD PTR ds:0x428327,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e20
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282ff,0x75a
  419988:	sub    DWORD PTR ds:0x4282a7,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42824b
  419999:	sub    ecx,DWORD PTR ds:0x4283af
  41999f:	mov    DWORD PTR ds:0x42824b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42826b,0x0
  4199ac:	mov    DWORD PTR ds:0x428303,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42816b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428387,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42826b,edi
  4199da:	cmp    DWORD PTR ds:0x42826b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428243
  4199ec:	push   0x427f6b
  4199f1:	call   DWORD PTR ds:0x428eb0
  4199f7:	sub    DWORD PTR ds:0x4283b7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42832f
  419a03:	sbb    DWORD PTR ds:0x4282b7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42839b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428317,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x42830f,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428327
  419a31:	xor    DWORD PTR ds:0x42823b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42823f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx+0x38708ffa]
  419a79:	push   esi
  419a7a:	out    0xaa,eax
  419a7c:	jecxz  0x419a39
  419a7e:	push   ss
  419a7f:	sbb    BYTE PTR [edx+edx*1-0x18bee7e8],bh
  419a86:	push   edi
  419a87:	sub    DWORD PTR [ebp+0x5b],edi
  419a8a:	xchg   ecx,eax
  419a8b:	inc    ebx
  419a8c:	fld    DWORD PTR [eax]
  419a8e:	jae    0x419a24
  419a90:	loopne 0x419acf
  419a92:	loop   0x419a60
  419a94:	ret    
  419a95:	and    BYTE PTR [ecx-0x35],dh
  419a98:	push   ebx
  419a99:	inc    ebp
  419a9a:	(bad)  
  419a9b:	data16 sahf 
  419a9d:	ss aaa 
  419a9f:	lahf   
  419aa0:	mov    ebp,0x69e3b0ed
  419aa5:	pop    edi
  419aa6:	xor    DWORD PTR [esi-0x51],eax
  419aa9:	sub    BYTE PTR [edx-0x720b69f8],ch
  419aaf:	pop    ds
  419ab0:	rdpmc  
  419ab2:	dec    ebx
  419ab3:	inc    eax
  419ab4:	jl     0x419afa
  419ab6:	cmp    esp,DWORD PTR [eax+0x2a]
  419ab9:	jns    0x419ae0
  419abb:	xor    al,0x6f
  419abd:	shl    BYTE PTR [edx-0x15],0x49
  419ac1:	mov    esi,DWORD PTR [edx+0x307aef8f]
  419ac7:	retf   
  419ac8:	push   0xffffffd9
  419aca:	loopne 0x419aa8
  419acc:	inc    ebp
  419acd:	cld    
  419ace:	(bad)  
  419acf:	cs cmp ecx,ebp
  419ad2:	and    al,0x85
  419ad4:	inc    ecx
  419ad5:	xor    al,bh
  419ad7:	cmp    BYTE PTR [ebx-0xf0afbbf],cl
  419add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ade:	fld    TBYTE PTR [edx+0x1f]
  419ae1:	cmp    DWORD PTR [edx+0x6e],0x31
  419ae5:	push   edi
  419ae6:	xchg   ecx,eax
  419ae7:	stos   DWORD PTR es:[edi],eax
  419ae8:	ja     0x419aa8
  419aea:	pusha  
  419aeb:	pushf  
  419aec:	ds inc ebx
  419aee:	mov    ds:0x9604c72,eax
  419af3:	idiv   BYTE PTR [ebx]
  419af5:	in     eax,dx
  419af6:	(bad)  
  419af7:	inc    edx
  419af8:	jg     0x419b03
  419afa:	scas   eax,DWORD PTR es:[edi]
  419afb:	adc    eax,0xd65c5f55
  419b00:	scas   eax,DWORD PTR es:[edi]
  419b01:	retf   0x1da8
  419b04:	push   edx
  419b05:	(bad)  
  419b06:	push   ss
  419b07:	das    
  419b08:	jp     0x419b19
  419b0a:	popf   
  419b0b:	pusha  
  419b0c:	jae    0x419b3d
  419b0e:	sti    
  419b0f:	test   BYTE PTR [edx+0x71332aa0],ch
  419b15:	popa   
  419b16:	sbb    DWORD PTR [ebp+0x58a29b15],0xc3927ec7
  419b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b21:	retf   
  419b22:	test   al,0xb9
  419b24:	sti    
  419b25:	mov    fs,WORD PTR [ecx]
  419b27:	sbb    ecx,DWORD PTR [edx]
  419b29:	jne    0x419b22
  419b2b:	(bad)  
  419b2c:	repnz mov ah,0x78
  419b2f:	jno    0x419ad0
  419b31:	mov    esp,DWORD PTR [eax+eax*4+0x3a]
  419b35:	inc    esp
  419b36:	pop    eax
  419b37:	adc    eax,0xe36e0974
  419b3c:	or     DWORD PTR [esi+0x42ca84dd],ebx
  419b42:	nop
  419b43:	fisub  DWORD PTR [ebx]
  419b45:	mov    eax,0x1e64d0b7
  419b4a:	sub    DWORD PTR [edx+eax*4+0x5b],0x1777d446
  419b52:	mov    dl,0x7c
  419b54:	std    
  419b55:	jmp    0x419bd5
  419b57:	xor    eax,0x31e5e9fa
  419b5c:	mov    dl,0x90
  419b5e:	or     ah,0x83
  419b61:	out    dx,al
  419b62:	jmp    0x419b06
  419b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b65:	add    eax,0x59d5517d
  419b6a:	dec    esi
  419b6b:	adc    cl,bl
  419b6d:	push   ss
  419b6e:	pop    ss
  419b6f:	add    bl,bl
  419b71:	addr16 fwait
  419b73:	and    DWORD PTR [edi-0x1879fdbb],ecx
  419b79:	cld    
  419b7a:	xor    ah,BYTE PTR [esp+eiz*4+0x3c]
  419b7e:	adc    al,0x75
  419b80:	ret    0x9a67
  419b83:	aad    0x57
  419b85:	in     al,0x1d
  419b87:	mov    al,dl
  419b89:	and    dh,BYTE PTR [edi+0x74aeb3fb]
  419b8f:	sub    eax,0x6b22152e
  419b94:	iret   
  419b95:	jns    0x419b26
  419b97:	push   ss
  419b98:	xlat   BYTE PTR ds:[ebx]
  419b99:	xchg   DWORD PTR [eax-0x4b],edi
  419b9c:	xor    ch,cl
  419b9e:	mov    ecx,0x24a9d995
  419ba3:	mov    dl,0xb1
  419ba5:	(bad)  
  419ba6:	xor    al,0x8e
  419ba8:	jae    0x419b2d
  419baa:	es xchg ecx,esp
  419bad:	ret    
  419bae:	shl    dh,1
  419bb0:	dec    edi
  419bb1:	shl    DWORD PTR [ebp+eax*8+0x5cad0857],cl
  419bb8:	in     eax,dx
  419bb9:	mov    edi,0xc02c59e0
  419bbe:	sahf   
  419bbf:	jae    0x419b83
  419bc1:	mov    esp,edx
  419bc3:	mov    ecx,0x11d5b83f
  419bc8:	fsub   DWORD PTR [ebx-0x31]
  419bcb:	xchg   ch,al
  419bcd:	add    BYTE PTR [edi-0x6b10d049],dh
  419bd3:	inc    esp
  419bd4:	imul   ecx,DWORD PTR [eax-0x23],0xffffff92
  419bd8:	jl     0x419c26
  419bda:	ret    
  419bdb:	xchg   BYTE PTR [esi-0x1c],dl
  419bde:	add    DWORD PTR cs:0x8393e5dc,eax
  419be5:	or     eax,0xffffffe9
  419be8:	or     dh,BYTE PTR [ecx]
  419bea:	add    al,0x98
  419bec:	xchg   ebx,eax
  419bed:	call   0x5f0b:0x34e28a8e
  419bf4:	mov    esi,0xdce4f1d7
  419bf9:	or     DWORD PTR [esi+0x35],0xffffffb6
  419bfd:	inc    edi
  419bfe:	lods   eax,DWORD PTR ds:[esi]
  419bff:	push   edx
  419c00:	(bad)  
  419c01:	ss out dx,al
  419c03:	ret    0x7b22
  419c06:	or     ecx,DWORD PTR [edx]
  419c08:	push   eax
  419c09:	mov    ?,WORD PTR [eax+eiz*8]
  419c0c:	sahf   
  419c0d:	lock test eax,0x4f2b9373
  419c13:	pop    esp
  419c14:	sbb    al,0xa
  419c16:	mov    ah,0xe3
  419c18:	jns    0x419bc0
  419c1a:	fucomp st(6)
  419c1c:	sub    eax,0xf978f45c
  419c21:	hlt    
  419c22:	je     0x419c1f
  419c24:	nop
  419c25:	mov    ah,0xe5
  419c27:	je     0x419c80
  419c29:	add    edx,DWORD PTR [ebx]
  419c2b:	fst    DWORD PTR [ecx-0x35]
  419c2e:	push   ss
  419c2f:	out    0x12,eax
  419c31:	sbb    DWORD PTR ds:0xec334c8e,esi
  419c37:	pop    eax
  419c38:	addr16 inc edx
  419c3a:	inc    esp
  419c3b:	stos   DWORD PTR es:[edi],eax
  419c3c:	ret    
  419c3d:	sar    BYTE PTR [edx+0x62cb6730],1
  419c43:	out    0xbf,eax
  419c45:	xor    al,0x0
  419c47:	push   eax
  419c48:	(bad)  
  419c49:	pop    esi
  419c4a:	out    dx,al
  419c4b:	and    edx,DWORD PTR [esi+eiz*1+0x28]
  419c4f:	inc    eax
  419c50:	fwait
  419c51:	repnz imul ebp
  419c54:	mov    WORD PTR [edx+0x5c],ss
  419c57:	loop   0x419cd6
  419c59:	ret    0x2c
  419c5c:	mov    esp,0xf0fa4e6f
  419c61:	inc    ebx
  419c62:	sbb    DWORD PTR [edi+0x75],esi
  419c65:	outs   dx,BYTE PTR ds:[esi]
  419c66:	or     dh,BYTE PTR [ebx+edx*4-0x75e1db50]
  419c6d:	sub    ebp,edi
  419c6f:	mov    al,BYTE PTR [eax+edi*8+0x37b2c071]
  419c76:	aad    0x23
  419c78:	fisub  DWORD PTR [ecx-0x54b09ee8]
  419c7e:	adc    dh,bl
  419c80:	clc    
  419c81:	in     al,0x75
  419c83:	sub    dh,dh
  419c85:	mov    WORD PTR ds:0xbdfde5e4,ds
  419c8b:	(bad)  
  419c8c:	mov    esi,0xbf023a62
  419c91:	fs int3 
  419c93:	xor    eax,0xbe19488c
  419c98:	pusha  
  419c99:	or     ah,ah
  419c9b:	aaa    
  419c9c:	gs jo  0x419cbf
  419c9f:	mov    cl,0x4b
  419ca1:	lods   al,BYTE PTR ds:[esi]
  419ca2:	jnp    0x419cfe
  419ca4:	cli    
  419ca5:	retf   0x5043
  419ca8:	pop    edi
  419ca9:	jle    0x419c2e
  419cab:	pop    edi
  419cac:	cwde   
  419cad:	xchg   edi,eax
  419cae:	(bad)  
  419caf:	push   edi
  419cb0:	out    dx,eax
  419cb1:	sbb    eax,0x78ca163d
  419cb6:	lds    eax,FWORD PTR [ebx-0x50]
  419cb9:	jge    0x419d22
  419cbb:	jmp    0x64d510dc
  419cc0:	cdq    
  419cc1:	mov    ds:0xc97c400e,al
  419cc6:	jo     0x419cdf
  419cc8:	sub    eax,DWORD PTR [ebx+0x1593094e]
  419cce:	jp     0x419ce2
  419cd0:	cld    
  419cd1:	cmp    BYTE PTR [edi],0x30
  419cd4:	pop    esp
  419cd5:	adc    BYTE PTR [eax+0x1e],0xf3
  419cd9:	lods   al,BYTE PTR ds:[esi]
  419cda:	push   edi
  419cdb:	pop    ebx
  419cdc:	(bad)  
  419cdd:	xchg   ebx,eax
  419cde:	xor    ecx,eax
  419ce0:	mov    eax,ds:0x49946835
  419ce5:	inc    ecx
  419ce6:	push   edx
  419ce7:	add    ebp,edi
  419ce9:	add    eax,0xb1674416
  419cee:	sti    
  419cef:	repz add DWORD PTR [ebp-0x69],ebp
  419cf3:	dec    esp
  419cf4:	repz aam 0xbe
  419cf7:	sub    eax,DWORD PTR [eax]
  419cf9:	in     eax,dx
  419cfa:	fadd   QWORD PTR [ebx+0x6c16ce67]
  419d00:	sub    eax,0x81c729da
  419d05:	inc    esi
  419d06:	mov    eax,0x1804d9f9
  419d0b:	or     DWORD PTR [ebx],ecx
  419d0d:	jl     0x419ce8
  419d0f:	xchg   esi,eax
  419d10:	(bad)  
  419d11:	cld    
  419d12:	push   0x1bde5f4c
  419d17:	(bad)  
  419d18:	jbe    0x419cbf
  419d1a:	mov    edi,0x4da7953d
  419d1f:	add    cl,al
  419d21:	cmp    edi,DWORD PTR [eax+edx*1]
  419d24:	out    dx,eax
  419d25:	cmp    BYTE PTR [ebx-0x3d],dl
  419d28:	pop    esi
  419d29:	loope  0x419d25
  419d2b:	xor    al,0x23
  419d2d:	and    BYTE PTR [eax],ah
  419d2f:	xchg   esi,eax
  419d30:	or     eax,0x393d2187
  419d35:	in     eax,0xfc
  419d37:	inc    edx
  419d38:	fld    QWORD PTR [ecx-0x47c2be9f]
  419d3e:	xchg   ebp,eax
  419d3f:	and    al,0x76
  419d41:	sub    edi,DWORD PTR [ebp-0x265245a8]
  419d47:	pushf  
  419d48:	leave  
  419d49:	ja     0x419dac
  419d4b:	xor    eax,0xf05e85b0
  419d50:	pop    esi
  419d51:	push   eax
  419d52:	rcr    BYTE PTR [eax+ebp*2],cl
  419d55:	shr    DWORD PTR [edx-0x7f],cl
  419d58:	ins    DWORD PTR es:[edi],dx
  419d59:	cdq    
  419d5a:	shl    DWORD PTR [ecx+0x44643549],cl
  419d60:	push   edx
  419d61:	cmp    cl,BYTE PTR [eax-0x7d]
  419d64:	push   edi
  419d65:	(bad)
  419d6a:	push   ds
  419d6b:	xlat   BYTE PTR ds:[ebx]
  419d6c:	std    
  419d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d6e:	xchg   esp,eax
  419d6f:	les    ecx,FWORD PTR [eax-0x78]
  419d72:	and    eax,0x75e0cd69
  419d77:	pop    esi
  419d78:	repz sub BYTE PTR ds:0x58cbbb3f,bh
  419d7f:	or     dl,bl
  419d81:	jne    0x419db7
  419d83:	imul   esp,DWORD PTR [bx-0x35],0x25
  419d88:	push   esp
  419d89:	mul    BYTE PTR [ebx+0x5]
  419d8c:	dec    ebp
  419d8d:	mov    dh,0x14
  419d8f:	ds stc 
  419d91:	hlt    
  419d92:	mov    eax,ds:0x1135c423
  419d97:	pop    ds
  419d98:	arpl   cx,si
  419d9a:	jne    0x419d91
  419d9c:	enter  0xa45e,0x15
  419da0:	aaa    
  419da1:	jl     0x419d5b
  419da3:	ins    BYTE PTR es:[edi],dx
  419da4:	stos   DWORD PTR es:[edi],eax
  419da5:	(bad)  
  419da6:	(bad)  
  419da7:	in     al,0x5e
  419da9:	or     eax,0x1de12334
  419dae:	dec    edi
  419daf:	jmp    0x419ddb
  419db1:	out    0x10,eax
  419db3:	inc    esp
  419db4:	mov    ch,0xc7
  419db6:	sub    eax,0xd808c271
  419dbb:	pop    edi
  419dbc:	inc    edx
  419dbd:	stos   BYTE PTR es:[edi],al
  419dbe:	frstor [ebx+0x790a5be8]
  419dc4:	inc    ebx
  419dc5:	pop    ds
  419dc6:	fnstenv [eax]
  419dc8:	mov    eax,ds:0x60650bec
  419dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dce:	in     eax,0xc7
  419dd0:	or     BYTE PTR cs:[edi-0x26cfc2e8],ah
  419dd7:	push   ebx
  419dd8:	push   eax
  419dd9:	jb     0x419e0d
  419ddb:	jge    0x419d95
  419ddd:	arpl   WORD PTR [ebx+0x304250c3],di
  419de3:	call   0x8c790564
  419de8:	mov    ch,BYTE PTR [eax+edx*4-0x60]
  419dec:	push   esp
  419ded:	xor    eax,0xc6b49bae
  419df2:	les    ebx,FWORD PTR ds:0xdb3fa2e2
  419df8:	jns    0x419dd1
  419dfa:	cmp    BYTE PTR [ecx+0x152a5980],dl
  419e00:	repz in al,0x7e
  419e03:	out    0x17,al
  419e05:	jmp    0xc650:0x492ca049
  419e0c:	test   BYTE PTR [edx+ebx*1-0x6a],al
  419e10:	ret    
  419e11:	pop    ecx
  419e12:	pop    ebx
  419e13:	jmp    0x419e1a
  419e15:	sub    DWORD PTR [esi],esi
  419e17:	popf   
  419e18:	jge    0x419e52
  419e1a:	loop   0x419e10
  419e1c:	in     eax,dx
  419e1d:	adc    bh,dh
  419e1f:	mov    bl,dh
  419e21:	adc    ah,BYTE PTR [ecx-0x3d]
  419e24:	in     eax,dx
  419e25:	inc    ebx
  419e26:	jecxz  0x419e76
  419e28:	mov    BYTE PTR [esi-0xb],dh
  419e2b:	ss jle 0x419e71
  419e2e:	pop    esp
  419e2f:	loop   0x419dd8
  419e31:	adc    ebp,edi
  419e33:	mov    bl,0x50
  419e35:	and    DWORD PTR [ebx-0x74ebdbb4],ecx
  419e3b:	push   esp
  419e3c:	and    al,0x30
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x7c77e436
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	inc    edi
  419e6f:	cs cdq 
  419e71:	fidivr WORD PTR [esi+0x61]
  419e74:	dec    ebp
  419e75:	cdq    
  419e76:	dec    eax
  419e77:	mov    al,0x8b
  419e79:	(bad)  
  419e7a:	xor    eax,esp
  419e7c:	cmc    
  419e7d:	pop    edi
  419e7e:	cmp    al,0xd
  419e80:	sahf   
  419e81:	mov    WORD PTR [esi+0x1476d58],es
  419e87:	sbb    ebx,0xc8cfc4e2
  419e8d:	xchg   esi,eax
  419e8e:	arpl   WORD PTR [ebx-0x13],bx
  419e91:	or     DWORD PTR [edi],0x22c53c26
  419e97:	pop    ecx
  419e98:	push   eax
  419e99:	scas   eax,DWORD PTR es:[edi]
  419e9a:	cmp    dh,bh
  419e9c:	mov    bh,0xaa
  419e9e:	and    ecx,eax
  419ea0:	jns    0x419e40
  419ea2:	sub    bh,dh
  419ea4:	mov    al,dl
  419ea6:	test   BYTE PTR [edi+0x5ae388d7],dl
  419eac:	clc    
  419ead:	repz push esp
  419eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eb0:	ds std 
  419eb2:	ins    DWORD PTR es:[edi],dx
  419eb3:	inc    ebp
  419eb4:	add    al,0xd5
  419eb6:	mov    tr1,ebx
  419eb9:	cmp    esi,esi
  419ebb:	addr16 jb 0x419ea5
  419ebe:	imul   ecx,eax,0x7aaeae72
  419ec4:	xor    eax,0x5f264ea8
  419ec9:	sahf   
  419eca:	stos   DWORD PTR es:[edi],eax
  419ecb:	xor    ah,BYTE PTR [eax-0xc2db92d]
  419ed1:	add    edi,DWORD PTR [esi]
  419ed3:	mov    ebp,0x9407d8a8
  419ed8:	retf   0x319f
  419edb:	push   edi
  419edc:	mov    ebp,0xfc30f6ab
  419ee1:	(bad)  
  419ee2:	out    0x21,eax
  419ee4:	imul   edx,DWORD PTR [edx+0x25],0x9cb321f5
  419eeb:	sbb    ch,ah
  419eed:	and    cl,BYTE PTR [ecx-0x563a821f]
  419ef3:	js     0x419f4a
  419ef5:	fst    QWORD PTR ds:0xe45ce096
  419efb:	in     eax,dx
  419efc:	jmp    FWORD PTR [edi+0x3c]
  419eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f00:	inc    ebx
  419f01:	mov    dl,0x6a
  419f03:	add    al,0x7c
  419f05:	fld    TBYTE PTR [ecx-0x7799520b]
  419f0b:	int    0x9a
  419f0d:	dec    ebp
  419f0e:	sbb    cl,BYTE PTR [edx+0x74]
  419f11:	mov    al,ds:0x9d390fec
  419f16:	xchg   edx,eax
  419f17:	xlat   BYTE PTR ds:[ebx]
  419f18:	mov    ?,WORD PTR [edx+ebp*8+0x58]
  419f1c:	imul   eax,DWORD PTR [edx],0x30
  419f1f:	fscale 
  419f21:	mov    bl,0xe8
  419f23:	push   edx
  419f24:	test   DWORD PTR [ebx],ebx
  419f26:	sub    al,0x96
  419f28:	and    eax,0xc9037bbd
  419f2d:	rol    edx,cl
  419f2f:	mov    ds:0x695aebbd,eax
  419f34:	fldenv [eax+0x19ad502d]
  419f3a:	xchg   edi,eax
  419f3b:	cmc    
  419f3c:	stc    
  419f3d:	ror    BYTE PTR [edx],1
  419f3f:	cmp    ebx,DWORD PTR [edx-0x581902b2]
  419f45:	fst    st(4)
  419f47:	push   ecx
  419f48:	xchg   edi,eax
  419f49:	or     ebp,DWORD PTR [ecx]
  419f4b:	mov    al,0xc4
  419f4d:	push   ds
  419f4e:	pop    edi
  419f4f:	mov    ecx,0x1ba7905
  419f54:	call   0xd0ed:0xaaf2ad3e
  419f5b:	out    dx,eax
  419f5c:	shl    DWORD PTR [ebp-0x131cbca3],cl
  419f62:	and    ecx,esp
  419f64:	or     esp,DWORD PTR [ebp+0x16]
  419f67:	repz xchg esp,eax
  419f69:	scas   al,BYTE PTR es:[edi]
  419f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f6b:	fsub   QWORD PTR [esi-0x76493371]
  419f71:	mov    al,0xe9
  419f73:	xchg   BYTE PTR [eax+0x38],bh
  419f76:	lods   eax,DWORD PTR ds:[esi]
  419f77:	ficomp WORD PTR [ecx+0x180cbf5e]
  419f7d:	call   0x5d04:0x553ed05e
  419f84:	or     dh,0xb4
  419f87:	add    al,0x72
  419f89:	adc    al,0x10
  419f8b:	jmp    0x4312c3b5
  419f90:	mov    ch,0x39
  419f92:	fucompp 
  419f94:	inc    edx
  419f95:	xchg   esi,eax
  419f96:	dec    esi
  419f97:	sub    dl,BYTE PTR [ebx+0x65]
  419f9a:	test   BYTE PTR [ebx+esi*2],cl
  419f9d:	jns    0x419f2a
  419f9f:	xchg   BYTE PTR [eax],bl
  419fa1:	xchg   ecx,eax
  419fa2:	int3   
  419fa3:	mov    dl,cl
  419fa5:	outs   dx,DWORD PTR ds:[esi]
  419fa6:	bsr    esp,DWORD PTR [ebx+eiz*4-0x10]
  419fab:	sbb    ch,BYTE PTR [edi*8-0x3eedf40d]
  419fb2:	in     al,dx
  419fb3:	addr16 add al,0x74
  419fb6:	in     eax,dx
  419fb7:	jl     0x419f86
  419fb9:	lahf   
  419fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fbb:	push   cs
  419fbc:	sbb    dh,bl
  419fbe:	out    dx,al
  419fbf:	jmp    0x41a02a
  419fc1:	test   eax,0x50a4e6a0
  419fc6:	adc    esp,esi
  419fc8:	add    eax,0x3ca3bdc2
  419fcd:	sahf   
  419fce:	fcom   QWORD PTR [ecx]
  419fd0:	add    DWORD PTR [edx+0x260e62e],eax
  419fd6:	dec    ebx
  419fd7:	(bad)  
  419fd8:	mov    WORD PTR [esi],es
  419fda:	push   es
  419fdb:	jne    0x419fe1
  419fdd:	push   cs
  419fde:	sub    ch,BYTE PTR ds:0xc888cd6
  419fe4:	cmp    BYTE PTR [esi-0x3ec266bf],0x69
  419feb:	jae    0x419fd0
  419fed:	(bad)  
  419fee:	push   edx
  419fef:	(bad)  
  419ff0:	ja     0x41a031
  419ff2:	inc    edx
  419ff3:	icebp  
  419ff4:	cmp    eax,0x12b33360
  419ff9:	lds    ebp,FWORD PTR [eax+0x13137c75]
  419fff:	(bad)  
  41a001:	xor    al,0x30
  41a003:	add    edi,DWORD PTR [esi-0x391e26e2]
  41a009:	imul   ebp,DWORD PTR [ebp+0x55],0x54fc472b
  41a010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a011:	jb     0x41a035
  41a013:	inc    esi
  41a014:	nop
  41a015:	pop    ebp
  41a016:	and    DWORD PTR [edi],edi
  41a018:	out    0x8,eax
  41a01a:	jns    0x41a022
  41a01c:	jo     0x419fb7
  41a01e:	popf   
  41a01f:	xlat   BYTE PTR ds:[ebx]
  41a020:	xor    eax,0x8a7a2149
  41a025:	fwait
  41a026:	xchg   edx,eax
  41a027:	pushf  
  41a028:	retf   0x8b4f
  41a02b:	mov    ebx,0x58d857c0
  41a030:	js     0x419ff4
  41a032:	fimul  WORD PTR [ecx-0x3c]
  41a035:	scas   eax,DWORD PTR es:[edi]
  41a036:	mov    edi,0x1ff3b5f5
  41a03b:	mov    cl,0x2e
  41a03d:	push   es
  41a03e:	xor    DWORD PTR [eax],ebx
  41a040:	pop    edx
  41a041:	cmp    BYTE PTR [ecx-0x741edca0],dh
  41a047:	aad    0xc6
  41a049:	imul   BYTE PTR [esp+ebp*2]
  41a04c:	sbb    ah,bl
  41a04e:	out    dx,al
  41a04f:	adc    BYTE PTR [esi-0x65f3ebec],cl
  41a055:	mov    ch,0xbd
  41a057:	push   0x8
  41a059:	out    0x86,eax
  41a05b:	xchg   ebp,eax
  41a05c:	sub    BYTE PTR [edx+eax*2+0x21],0xcc
  41a061:	jb     0x41a031
  41a063:	dec    ebx
  41a064:	and    DWORD PTR [ecx+0x57],edi
  41a067:	mov    edx,0xf64a52ec
  41a06c:	xor    eax,ebp
  41a06e:	pushf  
  41a06f:	mov    bl,0xce
  41a071:	inc    DWORD PTR ds:[eax+0x6]
  41a075:	pop    es
  41a076:	scas   al,BYTE PTR es:[edi]
  41a077:	mov    esi,0x68087915
  41a07c:	adc    eax,0x1ec9fb68
  41a082:	lods   al,BYTE PTR ds:[esi]
  41a083:	ret    0x310
  41a086:	lahf   
  41a087:	mov    al,0xee
  41a089:	mov    bl,0x6f
  41a08b:	mov    ch,0x8a
  41a08d:	cmp    eax,0x67199ce
  41a092:	imul   esi,esi,0x22
  41a095:	push   ecx
  41a096:	cwde   
  41a097:	fs mov ebp,0xe78dc667
  41a09d:	fdivrp st(2),st
  41a09f:	mov    bl,0x97
  41a0a1:	icebp  
  41a0a2:	les    ecx,FWORD PTR [edi+edi*8]
  41a0a5:	pop    edx
  41a0a6:	or     BYTE PTR [edi-0x20784cd0],ch
  41a0ac:	out    0x61,al
  41a0ae:	sahf   
  41a0af:	ins    BYTE PTR es:[edi],dx
  41a0b0:	lods   eax,DWORD PTR ds:[esi]
  41a0b1:	(bad)  
  41a0b2:	jge    0x41a0f6
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	data16 cli 
  41a0b7:	xchg   esi,eax
  41a0b8:	lock and bl,al
  41a0bb:	adc    cl,BYTE PTR [edx-0x16f6d04]
  41a0c1:	push   edi
  41a0c2:	jl     0x41a12b
  41a0c4:	aam    0xd1
  41a0c6:	sub    al,bl
  41a0c8:	cmp    eax,0xc8623c5e
  41a0cd:	repnz xor ah,cl
  41a0d0:	jl     0x41a0b4
  41a0d2:	mov    ebx,0x67c7e80d
  41a0d7:	jns    0x41a132
  41a0d9:	mov    edx,0x22992987
  41a0de:	jge    0x41a14e
  41a0e0:	cld    
  41a0e1:	cdq    
  41a0e2:	cmp    bl,BYTE PTR [ebx-0x54]
  41a0e5:	cmc    
  41a0e6:	sbb    eax,0x1e419b9d
  41a0eb:	push   ss
  41a0ec:	xchg   ecx,eax
  41a0ed:	sahf   
  41a0ee:	in     eax,0x4
  41a0f0:	jmp    0x41a0a7
  41a0f2:	pop    ds
  41a0f3:	adc    DWORD PTR [esi],esp
  41a0f5:	mov    ebx,0xff9062f9
  41a0fa:	and    al,BYTE PTR [edi-0x50a4cd88]
  41a100:	xchg   DWORD PTR [esi+edx*1+0x33],eax
  41a104:	pop    esp
  41a105:	outs   dx,BYTE PTR ds:[esi]
  41a106:	loopne 0x41a0bf
  41a108:	xor    cl,al
  41a10a:	and    BYTE PTR [ebp-0x55],bl
  41a10d:	aaa    
  41a10e:	pop    ebx
  41a10f:	add    eax,DWORD PTR [edi-0x29]
  41a112:	lock inc edx
  41a114:	and    al,0x55
  41a117:	sbb    BYTE PTR [eax-0x15],dl
  41a11a:	jp     0x41a162
  41a11c:	rcr    al,0xcb
  41a11f:	pop    ss
  41a120:	xor    esp,esi
  41a122:	dec    ecx
  41a123:	cmp    al,0x70
  41a125:	dec    eax
  41a126:	je     0x41a17c
  41a128:	cmp    eax,0x221b3d33
  41a12d:	jle    0x41a0db
  41a12f:	stos   BYTE PTR es:[edi],al
  41a130:	enter  0x655c,0x2
  41a134:	xor    eax,ebp
  41a136:	xor    al,BYTE PTR [eax+ebx*8-0xe]
  41a13a:	pop    edi
  41a13b:	gs cmp al,0xb0
  41a13e:	lods   al,BYTE PTR ds:[esi]
  41a13f:	and    DWORD PTR [eax-0x1c],0x61
  41a143:	push   esp
  41a144:	mov    cs,WORD PTR [ecx]
  41a146:	mov    ss,WORD PTR [eax+0x2e]
  41a149:	xor    ecx,DWORD PTR [ebx+0x68983edb]
  41a14f:	push   es
  41a150:	xchg   BYTE PTR [ebx-0x80],al
  41a153:	imul   ebx,DWORD PTR [edx-0x58],0xffffffa9
  41a157:	pop    ebx
  41a158:	cmp    ecx,ebp
  41a15a:	or     BYTE PTR [esi+0x49e92098],dh
  41a160:	push   edx
  41a161:	sub    BYTE PTR [eax],ch
  41a163:	pop    eax
  41a164:	sti    
  41a165:	mov    bl,0x6b
  41a167:	mov    dh,0x5b
  41a169:	fistp  WORD PTR [edi]
  41a16b:	or     BYTE PTR [edx+0x4a6b70c9],0x58
  41a172:	repnz stos DWORD PTR es:[edi],eax
  41a174:	mov    esi,DWORD PTR [ebp+0x6873e5da]
  41a17a:	dec    ebx
  41a17b:	test   DWORD PTR ds:0xca1bac22,ecx
  41a181:	(bad)  
  41a182:	pop    eax
  41a183:	mov    al,ds:0xfc1c5d9f
  41a188:	dec    ebp
  41a189:	retf   
  41a18a:	das    
  41a18b:	dec    edx
  41a18c:	mov    ah,0x32
  41a18e:	xlat   BYTE PTR ds:[ebx]
  41a18f:	enter  0xfa44,0x82
  41a193:	sub    esi,DWORD PTR [esi]
  41a195:	mov    ebx,0xdbad2f05
  41a19a:	dec    esp
  41a19b:	test   eax,0xebefeead
  41a1a0:	inc    eax
  41a1a1:	push   ds
  41a1a2:	loopne 0x41a212
  41a1a4:	pop    edx
  41a1a5:	add    edx,ebp
  41a1a7:	adc    al,0xe5
  41a1a9:	stos   BYTE PTR es:[edi],al
  41a1aa:	in     eax,0xbf
  41a1ac:	jmp    0xfd52:0x91d697e1
  41a1b3:	adc    al,0x25
  41a1b5:	push   eax
  41a1b6:	scas   eax,DWORD PTR es:[edi]
  41a1b7:	xchg   ecx,eax
  41a1b8:	leave  
  41a1b9:	adc    al,0xc1
  41a1bb:	and    ah,BYTE PTR [ebx]
  41a1bd:	or     DWORD PTR [edi+0x5b537f56],eax
  41a1c3:	add    BYTE PTR [edx+0x21b0b25f],dl
  41a1c9:	mov    al,0x21
  41a1cb:	cld    
  41a1cc:	(bad)  
  41a1cd:	stos   DWORD PTR es:[edi],eax
  41a1ce:	push   0xa3990b09
  41a1d3:	push   edx
  41a1d4:	(bad)  
  41a1d5:	outs   dx,DWORD PTR ds:[esi]
  41a1d6:	cdq    
  41a1d7:	shr    DWORD PTR [edi+0x22],0xa2
  41a1db:	cdq    
  41a1dc:	fs mov edi,0xbbf5b4a7
  41a1e2:	sub    al,0xc
  41a1e4:	arpl   WORD PTR [edi-0x15],sp
  41a1e7:	jo     0x41a174
  41a1e9:	push   ecx
  41a1ea:	mov    edx,0x8de9073
  41a1ef:	mov    ss,WORD PTR [ebp-0x4df17b40]
  41a1f5:	sub    ah,ch
  41a1f7:	pushf  
  41a1f8:	dec    esi
  41a1f9:	fstp   TBYTE PTR [ecx+0x21]
  41a1fc:	lods   eax,DWORD PTR ds:[esi]
  41a1fd:	jnp    0x41a255
  41a1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a200:	mov    eax,ds:0x67852717
  41a205:	es mov cl,0xca
  41a208:	mov    esp,DWORD PTR [esi+0x2a]
  41a20b:	mov    bh,0x27
  41a20d:	and    al,0x6
  41a20f:	shl    BYTE PTR [esp+ecx*1],1
  41a212:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a214:	out    0x50,eax
  41a216:	shl    DWORD PTR [esi+0x6891b01],1
  41a21c:	or     al,0xd
  41a21e:	mov    WORD PTR [ecx+0x25],ss
  41a221:	pop    ebp
  41a222:	xor    al,BYTE PTR [eax]
  41a224:	add    BYTE PTR [ecx-0x7eafdbbc],cl
  41a22a:	loope  0x41a270
  41a22c:	xor    eax,0x4c890000
  41a231:	and    al,0x54
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	sbb    BYTE PTR [esi],dh
  41a2a2:	daa    
  41a2a3:	stos   BYTE PTR es:[edi],al
  41a2a4:	sub    ebp,DWORD PTR [ebp+0x12bc1816]
  41a2aa:	sbb    BYTE PTR [eax],bl
  41a2ac:	shl    BYTE PTR [ebp+0x56],0x27
  41a2b0:	xchg   esp,eax
  41a2b1:	ret    0xf42c
  41a2b4:	mov    ecx,0x6a664561
  41a2b9:	std    
  41a2ba:	es dec ebp
  41a2bc:	sub    eax,0x54ca7134
  41a2c1:	in     eax,0xc0
  41a2c3:	xor    edx,0x65
  41a2c6:	cmp    edi,DWORD PTR [ebp+0x12]
  41a2c9:	jne    0x41a31e
  41a2cb:	mov    esi,DWORD PTR ds:0xa9db3680
  41a2d1:	ds pop esi
  41a2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d4:	pushf  
  41a2d5:	dec    eax
  41a2d6:	std    
  41a2d7:	xor    al,0x90
  41a2d9:	lods   al,BYTE PTR ds:[si]
  41a2db:	into   
  41a2dc:	sub    al,0x24
  41a2de:	shr    BYTE PTR [ebp-0x60f54840],cl
  41a2e4:	dec    edx
  41a2e5:	jge    0x41a33e
  41a2e7:	xlat   BYTE PTR ds:[ebx]
  41a2e8:	sub    BYTE PTR [esi],0xf6
  41a2eb:	icebp  
  41a2ec:	inc    ebx
  41a2ed:	sbb    BYTE PTR [edx],bh
  41a2ef:	adc    ecx,DWORD PTR [eax-0x395ac31a]
  41a2f5:	fadd   DWORD PTR [ebx]
  41a2f7:	lock add eax,0xb95e5478
  41a2fd:	pop    eax
  41a2fe:	ret    0xb954
  41a301:	lods   al,BYTE PTR ds:[esi]
  41a302:	mov    bl,0x69
  41a304:	pop    ebx
  41a305:	int    0x6e
  41a307:	lea    esi,[ecx]
  41a309:	mov    dh,0xaa
  41a30b:	cmp    ebx,DWORD PTR [eax+edx*2]
  41a30e:	cdq    
  41a30f:	fiadd  DWORD PTR [esi]
  41a311:	mov    edx,0x8ae5b3da
  41a316:	loopne 0x41a2be
  41a318:	mov    dl,0x93
  41a31a:	enter  0x2aef,0xb
  41a31e:	inc    edx
  41a31f:	xor    edx,DWORD PTR [eax]
  41a321:	mov    eax,ds:0x51ac812
  41a327:	jne    0x41a31d
  41a329:	sub    al,0x84
  41a32b:	jle    0x41a36b
  41a32d:	(bad)  
  41a32e:	cmp    BYTE PTR [esp+ebx*8-0x6659c053],ah
  41a335:	jae    0x41a39f
  41a337:	test   BYTE PTR [edx+0x3a],dh
  41a33a:	xor    esp,0x29a71233
  41a340:	cwde   
  41a341:	mov    ds:0x67b32a1a,al
  41a346:	outs   dx,BYTE PTR ds:[esi]
  41a347:	out    dx,eax
  41a348:	inc    ebp
  41a349:	sub    BYTE PTR [ebx+ebx*1-0x16],al
  41a34d:	arpl   cx,di
  41a34f:	cwde   
  41a350:	rcr    DWORD PTR [eax-0x44],0xc5
  41a354:	aam    0x6b
  41a356:	xor    al,bl
  41a358:	or     BYTE PTR [ebp-0x2debba51],bh
  41a35e:	test   al,0x72
  41a360:	es js  0x41a3d7
  41a363:	pop    esi
  41a364:	mov    eax,ds:0x3a4fbd83
  41a369:	gs mov bh,0x89
  41a36c:	xchg   edi,eax
  41a36d:	inc    esp
  41a36e:	or     eax,DWORD PTR [ecx-0x587c655a]
  41a374:	or     ah,BYTE PTR [ebx+ebp*8+0x1c]
  41a378:	aaa    
  41a379:	inc    edi
  41a37a:	push   edi
  41a37b:	inc    eax
  41a37c:	xchg   edx,eax
  41a37d:	fistp  QWORD PTR [esi+0x53b7e2e2]
  41a383:	rcl    al,0xd2
  41a386:	inc    edi
  41a387:	call   0x2fd936f1
  41a38c:	int3   
  41a38d:	push   edx
  41a38e:	gs (bad) 
  41a390:	adc    eax,0x9a1b3b1
  41a395:	je     0x41a389
  41a397:	mov    esp,0x17df149a
  41a39c:	(bad)  
  41a39d:	scas   eax,DWORD PTR es:[edi]
  41a39e:	iret   
  41a39f:	out    0x54,al
  41a3a1:	and    ebp,ecx
  41a3a3:	mov    eax,0x36d8eb1c
  41a3a8:	add    al,0x62
  41a3aa:	mov    edx,0xf7a65a53
  41a3af:	jl     0x41a378
  41a3b1:	stc    
  41a3b2:	lahf   
  41a3b3:	push   0xd5491f0b
  41a3b8:	inc    eax
  41a3b9:	lahf   
  41a3ba:	push   0xffffffdd
  41a3bc:	mov    BYTE PTR ds:[ecx+0x20],cl
  41a3c0:	fst    st(0)
  41a3c2:	(bad)  
  41a3c3:	pop    ss
  41a3c4:	xchg   edx,eax
  41a3c5:	sub    al,0xec
  41a3c7:	sbb    DWORD PTR [edi-0xdb86c88],0xffffffc8
  41a3ce:	fidivr WORD PTR [edx+edx*4]
  41a3d1:	imul   DWORD PTR gs:0x8e8f2067
  41a3d8:	ja     0x41a3bd
  41a3da:	add    al,0xa5
  41a3dc:	adc    al,0x7d
  41a3de:	or     al,0xa9
  41a3e0:	aas    
  41a3e1:	shr    DWORD PTR [ecx+0x51b9e3e7],1
  41a3e7:	bswap  esi
  41a3e9:	mov    esp,0x21154d43
  41a3ee:	rcl    DWORD PTR gs:[eax-0x2d3a3774],cl
  41a3f5:	mov    cs,WORD PTR [eax]
  41a3f7:	jo     0x41a3fd
  41a3f9:	push   0x60
  41a3fb:	xor    esi,esp
  41a3fd:	pop    esi
  41a3fe:	(bad)  
  41a3ff:	xchg   edx,eax
  41a400:	mov    al,ds:0x90091de7
  41a405:	sub    dl,BYTE PTR [ecx-0x2499cfe0]
  41a40b:	cmc    
  41a40c:	xchg   esi,eax
  41a40d:	mov    ds,ecx
  41a40f:	inc    eax
  41a410:	mov    bl,0x84
  41a412:	mov    ecx,0x427d4ef8
  41a417:	xor    ebx,DWORD PTR [ecx+eiz*1-0x3e3faf2f]
  41a41e:	push   ebx
  41a41f:	pop    es
  41a420:	lds    ecx,FWORD PTR [ecx-0x20]
  41a423:	outs   dx,BYTE PTR ds:[esi]
  41a424:	dec    esi
  41a425:	or     esi,0x89849f5c
  41a42b:	loope  0x41a3ba
  41a42d:	add    esi,esi
  41a42f:	fs mov dh,0x4d
  41a432:	mov    bl,0xd3
  41a434:	(bad)  
  41a435:	sbb    bh,BYTE PTR [ebx]
  41a437:	and    cl,BYTE PTR [edi]
  41a439:	fsub   DWORD PTR [esi]
  41a43b:	imul   edx,DWORD PTR [eax],0x84daa3d9
  41a441:	ret    0x1ba0
  41a444:	jbe    0x41a4ac
  41a446:	dec    ecx
  41a447:	ret    
  41a448:	jne    0x41a3e5
  41a44a:	in     al,dx
  41a44b:	dec    edi
  41a44c:	in     al,0xd8
  41a44e:	stos   BYTE PTR es:[edi],al
  41a44f:	sahf   
  41a450:	jmp    0x41a3f1
  41a452:	stos   DWORD PTR es:[edi],eax
  41a453:	adc    eax,0x81756cf0
  41a458:	sbb    al,0xa7
  41a45a:	aas    
  41a45b:	dec    edx
  41a45c:	cld    
  41a45d:	cmp    eax,0xeef8a8e6
  41a462:	dec    edx
  41a463:	lods   eax,DWORD PTR ds:[esi]
  41a464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a465:	cmp    eax,0x75f4de0d
  41a46a:	repz push esp
  41a46c:	les    ebp,FWORD PTR [ebx-0x30]
  41a46f:	cmp    eax,0xc15bd111
  41a474:	iret   
  41a475:	les    eax,FWORD PTR [eax+0x2b650314]
  41a47b:	sbb    eax,0xff3e17fb
  41a480:	mov    ecx,0x5f820438
  41a485:	pusha  
  41a486:	out    0xe0,al
  41a488:	scas   al,BYTE PTR es:[edi]
  41a489:	ss test eax,0x3984cb7e
  41a48f:	mov    DWORD PTR [ebp+0x5eb24c25],0x8da296c4
  41a499:	mov    ah,0xa5
  41a49b:	rcr    BYTE PTR [ebx+ecx*1],1
  41a49e:	daa    
  41a49f:	jbe    0x41a47e
  41a4a1:	mov    esi,0xde5284b0
  41a4a6:	arpl   WORD PTR [esi+0x4f],bx
  41a4a9:	jnp    0x41a4f6
  41a4ab:	fimul  WORD PTR [ecx-0x62a3c5f5]
  41a4b1:	dec    ebp
  41a4b2:	dec    esp
  41a4b3:	lea    ebx,[ebp+0x77b9688a]
  41a4b9:	inc    esi
  41a4ba:	xor    ecx,ecx
  41a4bc:	sbb    DWORD PTR [edi-0x757f668],eax
  41a4c2:	int3   
  41a4c3:	pavgw  mm0,mm4
  41a4c6:	pushf  
  41a4c7:	jl     0x41a53c
  41a4c9:	in     eax,0xb4
  41a4cb:	jae    0x41a4b8
  41a4cd:	(bad)  
  41a4ce:	std    
  41a4cf:	sbb    al,0x47
  41a4d1:	jge    0x41a4ae
  41a4d3:	addr16 adc al,0x9b
  41a4d6:	sub    BYTE PTR [ebp+0x59a35c83],dl
  41a4dc:	cli    
  41a4dd:	mov    edx,0xed40c856
  41a4e2:	outs   dx,DWORD PTR ds:[esi]
  41a4e3:	or     eax,0xde2bc2c4
  41a4e8:	xor    al,0x1e
  41a4ea:	sub    al,0x65
  41a4ec:	(bad)  
  41a4ed:	jecxz  0x41a4da
  41a4ef:	pusha  
  41a4f0:	dec    esp
  41a4f1:	dec    ebp
  41a4f2:	fist   DWORD PTR [eax-0x20]
  41a4f5:	retf   0xd8e1
  41a4f8:	aam    0x34
  41a4fa:	xchg   ecx,eax
  41a4fb:	jbe    0x41a4e2
  41a4fd:	push   ss
  41a4fe:	dec    edx
  41a4ff:	out    dx,al
  41a500:	fisttp QWORD PTR [edi+0x673b38a2]
  41a506:	icebp  
  41a507:	aaa    
  41a508:	nop
  41a509:	ja     0x41a4bf
  41a50b:	test   BYTE PTR [edi+eiz*4+0x292eff6a],ch
  41a512:	retf   0xd907
  41a515:	mov    ebx,0x590640e5
  41a51a:	adc    ebx,ebp
  41a51c:	inc    ecx
  41a51d:	ins    BYTE PTR es:[edi],dx
  41a51e:	repz jne 0x41a5a0
  41a521:	imul   eax,ebp,0xfffffffd
  41a524:	retf   0xb2ed
  41a527:	mov    ebx,0x8fac60cf
  41a52c:	fild   DWORD PTR [esi-0x612fdb6b]
  41a532:	mov    al,0x1e
  41a534:	sbb    eax,0xb1a81c19
  41a539:	add    al,0x94
  41a53b:	mov    eax,0xdcbaa44d
  41a540:	out    0x6d,eax
  41a542:	jecxz  0x41a524
  41a544:	nop
  41a545:	test   al,0x22
  41a547:	addr16 add bl,bh
  41a54a:	(bad)  
  41a54b:	fimul  DWORD PTR [edx-0x69]
  41a54e:	mov    al,ds:0x4cfdffe8
  41a553:	dec    ebx
  41a554:	sbb    DWORD PTR [eax+0x71a36374],ebp
  41a55a:	cmp    edx,0x7ad50371
  41a560:	mov    ecx,0x4cc06c3e
  41a565:	pop    ecx
  41a566:	jae    0x41a598
  41a568:	cmc    
  41a569:	xor    ecx,DWORD PTR es:[eax-0x11]
  41a56d:	ret    
  41a56e:	inc    ebp
  41a56f:	and    bh,bl
  41a571:	enter  0x4c08,0xf1
  41a575:	adc    ah,BYTE PTR [edi-0x550a791c]
  41a57b:	pop    edx
  41a57c:	(bad)  
  41a57d:	fsub   DWORD PTR [ecx+0x5c8b39fb]
  41a583:	(bad)  
  41a584:	shl    ecx,cl
  41a586:	mov    eax,0xb8cb635c
  41a58b:	sbb    ebp,esp
  41a58d:	cmp    cl,dl
  41a58f:	mov    ah,BYTE PTR [esi]
  41a591:	xchg   ebp,eax
  41a592:	dec    esp
  41a593:	sub    DWORD PTR [esi],esp
  41a595:	or     DWORD PTR [ebp-0x70],esp
  41a598:	aaa    
  41a599:	ret    0x93b4
  41a59c:	sbb    ecx,DWORD PTR [esp+ebp*4]
  41a59f:	mov    ch,0xd8
  41a5a1:	xor    BYTE PTR [ecx+0x490293df],0x1
  41a5a8:	mov    esi,0x16b76398
  41a5ad:	add    eax,0xbe09ac55
  41a5b2:	sub    DWORD PTR [edx-0x7d],ebx
  41a5b5:	jno    0x41a56d
  41a5b7:	stos   DWORD PTR es:[edi],eax
  41a5b8:	ret    0xcc07
  41a5bb:	repnz retf 0xb483
  41a5bf:	scas   al,BYTE PTR es:[edi]
  41a5c0:	mov    edi,DWORD PTR [ecx+0x30]
  41a5c3:	test   eax,0xf75d286f
  41a5c8:	scas   eax,DWORD PTR es:[edi]
  41a5c9:	(bad)  
  41a5ca:	pop    ebx
  41a5cb:	loope  0x41a563
  41a5cd:	pop    ecx
  41a5ce:	dec    edi
  41a5cf:	jg     0x41a59c
  41a5d1:	fidiv  WORD PTR [ebp+0x31]
  41a5d4:	clc    
  41a5d5:	punpckhbw mm5,QWORD PTR [ecx]
  41a5d8:	mov    eax,0x56803d27
  41a5dd:	neg    DWORD PTR [edx-0x52]
  41a5e0:	add    eax,0xffc371a6
  41a5e5:	push   0xffffffde
  41a5e7:	lds    esi,FWORD PTR [esi+0x73]
  41a5ea:	or     eax,0x22eeed6b
  41a5ef:	fimul  WORD PTR [esi]
  41a5f1:	cs ins DWORD PTR es:[edi],dx
  41a5f3:	add    cl,ah
  41a5f5:	xor    al,0x3e
  41a5f7:	sbb    BYTE PTR [esi],ah
  41a5f9:	dec    ecx
  41a5fa:	pusha  
  41a5fb:	not    BYTE PTR [ecx+0x74]
  41a5fe:	pop    ecx
  41a5ff:	xor    BYTE PTR [eax],0x2f
  41a602:	gs popw ss
  41a605:	cmc    
  41a606:	and    esp,ecx
  41a608:	mov    WORD PTR [ecx],es
  41a60a:	push   cs
  41a60b:	repz dec esi
  41a60d:	cdq    
  41a60e:	xor    ecx,eax
  41a610:	or     DWORD PTR [ebp+0x64],ebp
  41a613:	fmul   st(0),st
  41a615:	pop    esp
  41a616:	xchg   edi,eax
  41a617:	pop    ecx
  41a618:	mov    edx,0xc01f5a68
  41a61d:	add    ch,ah
  41a61f:	ret    
  41a620:	aas    
  41a621:	ins    BYTE PTR es:[edi],dx
  41a622:	leave  
  41a623:	xchg   ebx,eax
  41a624:	pop    edi
  41a625:	or     al,0xb8
  41a627:	inc    ecx
  41a628:	daa    
  41a629:	nop
  41a62a:	inc    edx
  41a62b:	mov    ds:0x3d64a8cf,eax
  41a630:	xchg   ebp,eax
  41a631:	mov    ah,0x5
  41a633:	lods   al,BYTE PTR ds:[esi]
  41a634:	jmp    0x58eb:0x694639c5
  41a63b:	mov    al,ds:0x32fc3361
  41a640:	mov    BYTE PTR [ecx-0x3f],dl
  41a643:	lods   al,BYTE PTR ds:[esi]
  41a644:	add    cl,al
  41a646:	or     BYTE PTR [ecx+0x34c5969f],cl
  41a64c:	repnz test eax,0xfd267375
  41a652:	push   0x3c45ea8e
  41a657:	lods   al,BYTE PTR ds:[esi]
  41a658:	xchg   ebp,eax
  41a659:	adc    BYTE PTR [ebx+ebp*1],al
  41a65c:	int3   
  41a65d:	pop    ebx
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x422078
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	mov    WORD PTR ds:0xa5cf7e21,?
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x6fae1818],bh
  41a756:	sub    dh,bh
  41a758:	sub    dh,dl
  41a75a:	or     BYTE PTR [ebx+ebx*1-0x55],ah
  41a75e:	pop    ebx
  41a75f:	push   0x323a1b8
  41a764:	pop    esi
  41a765:	(bad)  
  41a766:	call   0x266ddeaa
  41a76b:	sub    BYTE PTR [eax+0x19],dh
  41a76e:	mov    ds,WORD PTR [eax+ecx*1-0x60debcee]
  41a775:	add    ebx,DWORD PTR [esi]
  41a777:	jl     0x41a73d
  41a779:	jnp    0x41a71e
  41a77b:	cmp    eax,0x928c88ee
  41a780:	dec    ebp
  41a781:	repz inc eax
  41a783:	jnp    0x41a7ce
  41a785:	fidiv  WORD PTR [esi-0x6d6cada]
  41a78b:	mov    eax,0xb6dfdea1
  41a790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a791:	rol    BYTE PTR [esi],0x32
  41a794:	cmp    al,0x1c
  41a796:	ds (bad) 
  41a798:	aas    
  41a799:	adc    eax,0xae63d5e5
  41a79e:	lds    eax,FWORD PTR [edi]
  41a7a0:	adc    ch,dl
  41a7a2:	retf   
  41a7a3:	dec    esi
  41a7a4:	push   eax
  41a7a5:	hlt    
  41a7a6:	(bad)  
  41a7a7:	cmp    al,BYTE PTR [eax+0x30]
  41a7aa:	iret   
  41a7ab:	stc    
  41a7ac:	loop   0x41a7d8
  41a7ae:	xchg   BYTE PTR ds:[eax+edi*8+0x32],bh
  41a7b3:	or     edx,DWORD PTR [edi-0x26f493a2]
  41a7b9:	add    DWORD PTR [bp+di+0x50c],ecx
  41a7be:	push   0xd304295c
  41a7c3:	scas   al,BYTE PTR es:[edi]
  41a7c4:	lahf   
  41a7c5:	js     0x41a78e
  41a7c7:	or     DWORD PTR [edi-0x4885f3f3],edi
  41a7cd:	xchg   DWORD PTR [edi-0x32],esp
  41a7d0:	mov    ah,0xeb
  41a7d2:	mov    dh,0xa4
  41a7d4:	mov    eax,0x87674b4
  41a7d9:	xor    eax,0x6a995e7a
  41a7de:	sub    DWORD PTR [ebx-0x4a],esp
  41a7e1:	iret   
  41a7e2:	or     al,0xa4
  41a7e4:	jo     0x41a7d5
  41a7e6:	sub    ah,BYTE PTR [edx]
  41a7e8:	mov    ds:0x1f3dc23b,eax
  41a7ed:	and    ah,BYTE PTR [edi-0x6e]
  41a7f0:	jle    0x41a86c
  41a7f2:	cli    
  41a7f3:	pop    ss
  41a7f4:	outs   dx,DWORD PTR ds:[esi]
  41a7f5:	(bad)  
  41a7f6:	lahf   
  41a7f7:	pop    eax
  41a7f8:	add    dh,BYTE PTR [edi-0x74b209e7]
  41a7fe:	inc    BYTE PTR [ebx+0x5e3cc804]
  41a804:	imul   BYTE PTR [ecx-0x7b7e1e48]
  41a80a:	and    esi,DWORD PTR [ecx+0x750d97be]
  41a810:	push   0xdcde410
  41a815:	scas   al,BYTE PTR es:[edi]
  41a816:	out    dx,eax
  41a817:	jnp    0x41a805
  41a819:	jmp    0xb58b8b6b
  41a81e:	jbe    0x41a88f
  41a820:	jae    0x41a893
  41a822:	jge    0x41a823
  41a824:	xor    eax,DWORD PTR [ecx-0x61e61c29]
  41a82a:	(bad)  [edx]
  41a82c:	push   0x5a8f93ee
  41a831:	call   DWORD PTR [eax-0x3]
  41a834:	into   
  41a835:	xor    dh,BYTE PTR [eax-0x2b]
  41a838:	sub    BYTE PTR [ebp+0x4887b03c],ch
  41a83e:	and    eax,0xa3d1e637
  41a843:	cmc    
  41a844:	js     0x41a877
  41a846:	dec    esp
  41a847:	push   0xca35dbf
  41a84c:	stc    
  41a84d:	dec    edx
  41a84e:	pop    esi
  41a84f:	push   ecx
  41a850:	sahf   
  41a851:	or     edx,eax
  41a853:	pop    eax
  41a854:	add    eax,0x64c65c69
  41a859:	ins    BYTE PTR es:[edi],dx
  41a85a:	jns    0x41a85a
  41a85c:	mov    dl,0x64
  41a85e:	xchg   esi,eax
  41a85f:	bound  ebp,QWORD PTR [edx-0x74]
  41a862:	ror    DWORD PTR [ecx-0x61],cl
  41a865:	aas    
  41a866:	mov    cs,WORD PTR ds:0x501b899
  41a86c:	and    cl,BYTE PTR [edi+0x4ccddfad]
  41a872:	push   esi
  41a873:	mov    ebp,0x13e70285
  41a878:	aaa    
  41a879:	add    bl,cl
  41a87b:	mov    eax,0xd28ec0de
  41a880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a881:	out    dx,al
  41a882:	xor    al,0x7f
  41a884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a885:	jmp    DWORD PTR [esi]
  41a887:	fwait
  41a888:	cld    
  41a889:	xor    esp,DWORD PTR [eax]
  41a88b:	mov    ds:0x49ead3e9,eax
  41a890:	xor    dl,BYTE PTR [edi+eiz*8+0x7f]
  41a894:	mov    bh,0xb6
  41a896:	sbb    eax,0x604eb49
  41a89b:	stc    
  41a89c:	rcl    DWORD PTR [esp+eax*2+0xb],0x98
  41a8a1:	ja     0x41a91c
  41a8a3:	in     al,dx
  41a8a4:	mov    eax,0xc5214d04
  41a8a9:	fmul   QWORD PTR [eax]
  41a8ab:	das    
  41a8ac:	dec    ebx
  41a8ad:	or     BYTE PTR [edi-0x2a],cl
  41a8b0:	push   0x63
  41a8b2:	popf   
  41a8b3:	mov    al,ds:0xa8137ffb
  41a8b8:	shl    DWORD PTR [eax],0xf8
  41a8bb:	pop    eax
  41a8bc:	xchg   edi,eax
  41a8bd:	int    0x6e
  41a8bf:	mov    ds:0xb5690b15,al
  41a8c4:	jmp    0x41a873
  41a8c6:	or     ch,al
  41a8c8:	mov    esp,0x729118d5
  41a8cd:	pop    esi
  41a8ce:	pop    edx
  41a8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d0:	sbb    DWORD PTR [eax+0x69],edi
  41a8d3:	das    
  41a8d4:	pop    edi
  41a8d5:	into   
  41a8d6:	fld    QWORD PTR [ebp-0x78]
  41a8d9:	out    0x53,eax
  41a8db:	add    eax,edi
  41a8dd:	ss js  0x41a8fb
  41a8e0:	fcom   QWORD PTR [edi-0x6f6a6f9b]
  41a8e6:	(bad)  
  41a8e7:	mov    al,0x50
  41a8e9:	clc    
  41a8ea:	jbe    0x41a938
  41a8ec:	xchg   ch,cl
  41a8ee:	or     eax,0x6750b643
  41a8f3:	test   eax,0x2e14fbd4
  41a8f8:	frstor [ebx+0x2e]
  41a8fb:	dec    eax
  41a8fc:	xor    DWORD PTR [edx+0x14],edi
  41a8ff:	retf   0xf7c3
  41a902:	call   0xeed09d8
  41a907:	fisubr DWORD PTR [eax-0x5c]
  41a90a:	fidiv  WORD PTR ds:0xfe559c7
  41a910:	sub    eax,0xda236e1d
  41a915:	xchg   esi,eax
  41a916:	push   edi
  41a917:	mov    bl,0x35
  41a919:	fcompp 
  41a91b:	sub    BYTE PTR [edx+0x6187b408],ch
  41a921:	iret   
  41a922:	(bad)  
  41a923:	inc    DWORD PTR [esi]
  41a925:	jmp    0x9ee8:0xdea15280
  41a92c:	ja     0x41a922
  41a92e:	dec    eax
  41a92f:	mov    ebp,0xbf4c8f56
  41a934:	lea    esi,[esi+0x6f4f16d8]
  41a93a:	lea    edx,[esi+eax*8+0x618941da]
  41a941:	addr16 or eax,0xf9c67246
  41a947:	pop    edx
  41a948:	push   ecx
  41a949:	mov    dl,0xbc
  41a94b:	int    0x49
  41a94d:	sub    DWORD PTR [ecx-0x6b535afe],esi
  41a953:	je     0x41a9a2
  41a955:	test   esp,edx
  41a957:	aaa    
  41a958:	or     BYTE PTR [ebp-0x4a864dd0],dh
  41a95e:	mov    bh,0x79
  41a960:	add    ebp,eax
  41a962:	sub    dl,ch
  41a964:	push   edx
  41a965:	fisub  WORD PTR [esi-0x3c9a071c]
  41a96b:	sbb    BYTE PTR [esi-0x26],bl
  41a96e:	adc    DWORD PTR [edx+0x49],edx
  41a971:	sub    DWORD PTR ds:0x36b1ae92,eax
  41a977:	in     al,0x32
  41a979:	xchg   edi,eax
  41a97a:	pop    edi
  41a97b:	cmp    DWORD PTR [edx],ebp
  41a97d:	cmp    al,BYTE PTR [eax]
  41a97f:	xor    ah,BYTE PTR [eax]
  41a981:	scas   al,BYTE PTR es:[edi]
  41a982:	inc    cl
  41a984:	xor    BYTE PTR [ebx+ebp*2],ah
  41a987:	(bad)  
  41a988:	mov    esi,0x5bde2d6f
  41a98d:	cmp    eax,DWORD PTR [eax-0x62cc8fe2]
  41a993:	data16 fnstsw WORD PTR [ecx]
  41a996:	adc    al,0xf7
  41a998:	bound  ebx,QWORD PTR ds:0x3079d8b0
  41a99e:	xor    BYTE PTR [ebp-0x25d9746f],bl
  41a9a4:	dec    ecx
  41a9a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9a6:	dec    edi
  41a9a7:	loope  0x41a962
  41a9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9aa:	jmp    0x41a9c5
  41a9ac:	scas   eax,DWORD PTR es:[edi]
  41a9ad:	scas   al,BYTE PTR es:[edi]
  41a9ae:	pop    ds
  41a9af:	jmp    0x41a9ed
  41a9b1:	int3   
  41a9b2:	mov    edi,DWORD PTR [edx-0x43]
  41a9b5:	ss ret 
  41a9b7:	pop    ebx
  41a9b8:	(bad)  
  41a9b9:	sahf   
  41a9ba:	adc    eax,0xe8cf535e
  41a9bf:	pop    eax
  41a9c0:	fisttp DWORD PTR [edi+0x19655b8c]
  41a9c6:	jbe    0x41a967
  41a9c8:	mov    DWORD PTR [edi+ebx*8],0xccbb04e5
  41a9cf:	push   esi
  41a9d0:	sbb    al,0x89
  41a9d2:	sub    bh,bl
  41a9d4:	xor    al,0x3a
  41a9d6:	pop    esi
  41a9d7:	adc    al,0x74
  41a9d9:	ins    DWORD PTR es:[edi],dx
  41a9da:	and    eax,0x139be835
  41a9df:	jns    0x41aa05
  41a9e1:	imul   esp,DWORD PTR [eax],0x971c626
  41a9e7:	jo     0x41a9b5
  41a9e9:	and    DWORD PTR [ecx+edi*1],ebx
  41a9ec:	and    edx,DWORD PTR [esi]
  41a9ee:	es repnz inc edx
  41a9f1:	stc    
  41a9f2:	mov    ah,0xef
  41a9f4:	aam    0x55
  41a9f6:	ja     0x41aa50
  41a9f8:	xor    ebx,0x54
  41a9fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9fc:	or     BYTE PTR [edx+0x52],0x29
  41aa00:	pop    edi
  41aa01:	lods   eax,DWORD PTR ds:[esi]
  41aa02:	cmp    ah,bl
  41aa04:	imul   ebp,DWORD PTR [edx+ebx*8],0x4a586670
  41aa0b:	fcomi  st,st(4)
  41aa0d:	push   ebx
  41aa0e:	xlat   BYTE PTR ds:[ebx]
  41aa0f:	add    edx,DWORD PTR [edx-0xb]
  41aa12:	inc    esp
  41aa13:	xor    ebp,ebx
  41aa15:	cmp    al,BYTE PTR [ecx+0x69]
  41aa18:	nop
  41aa19:	shl    DWORD PTR [ebx+0x18],1
  41aa1c:	daa    
  41aa1d:	sbb    al,0x47
  41aa1f:	frstor [ebx]
  41aa21:	xchg   ebp,eax
  41aa22:	mov    WORD PTR [eax-0x21],?
  41aa25:	jmp    DWORD PTR [edi-0x26d0c424]
  41aa2b:	call   0x5e377c87
  41aa30:	cdq    
  41aa31:	outs   dx,DWORD PTR ds:[esi]
  41aa32:	lock sbb ah,dl
  41aa35:	call   0x9e08:0x71a1aaec
  41aa3c:	xor    ebx,DWORD PTR [edi-0x3561488f]
  41aa42:	mov    cl,0x52
  41aa44:	or     DWORD PTR [edi],edx
  41aa46:	fstp   QWORD PTR [edx]
  41aa48:	pop    esi
  41aa49:	cmc    
  41aa4a:	pop    ds
  41aa4b:	mov    bh,BYTE PTR [ebx]
  41aa4d:	gs adc bl,bh
  41aa50:	xor    dl,BYTE PTR [ecx]
  41aa52:	and    eax,0x9bf4cb3
  41aa57:	mov    esp,0x23962e77
  41aa5c:	inc    esi
  41aa5d:	and    al,0x97
  41aa5f:	sub    al,0x74
  41aa61:	cmc    
  41aa62:	xor    ebp,edi
  41aa64:	enter  0x5598,0xb
  41aa68:	push   ecx
  41aa69:	lods   al,BYTE PTR ds:[esi]
  41aa6a:	icebp  
  41aa6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa6c:	add    eax,0x27aecce9
  41aa71:	sub    eax,0xcd2f4ccc
  41aa76:	loopne 0x41aaba
  41aa78:	repz mov al,0x10
  41aa7b:	or     bl,BYTE PTR [edi+0x0]
  41aa7e:	cdq    
  41aa7f:	or     DWORD PTR [eax+0x620b09d7],esi
  41aa85:	in     eax,0x7c
  41aa87:	cwde   
  41aa88:	outs   dx,DWORD PTR ds:[esi]
  41aa89:	(bad)  
  41aa8a:	jge    0x41aad4
  41aa8c:	fstp   TBYTE PTR [eax+0x288b35ac]
  41aa92:	and    BYTE PTR [eax],dl
  41aa94:	sbb    BYTE PTR [esi+0x61],ah
  41aa97:	and    esp,DWORD PTR [esi]
  41aa99:	cmp    edi,DWORD PTR [ebp-0x8d7f2fc]
  41aa9f:	pushf  
  41aaa0:	or     bh,BYTE PTR [esi]
  41aaa2:	cmp    BYTE PTR [edx+ebx*8],ah
  41aaa5:	ins    BYTE PTR es:[edi],dx
  41aaa6:	dec    ebp
  41aaa7:	fcmovne st,st(0)
  41aaa9:	aam    0x16
  41aaab:	in     al,dx
  41aaac:	mov    ebp,0x157de3db
  41aab1:	adc    DWORD PTR [eax-0x51398d19],esp
  41aab7:	repnz loopne 0x41aa75
  41aaba:	dec    ebx
  41aabb:	aas    
  41aabc:	icebp  
  41aabd:	xor    al,0x4
  41aabf:	xor    DWORD PTR [eax+0x79ab5c5a],ecx
  41aac5:	lds    esp,FWORD PTR [eax-0x6a]
  41aac8:	mov    BYTE PTR [ebp+ebp*4+0x22bdc972],bl
  41aacf:	or     esp,DWORD PTR [ebx+eiz*8]
  41aad2:	mov    dh,0xf3
  41aad4:	dec    ebx
  41aad5:	fwait
  41aad6:	call   0x799:0x813d788c
  41aadd:	inc    esi
  41aade:	cli    
  41aadf:	cdq    
  41aae0:	fwait
  41aae1:	xor    ecx,DWORD PTR [edx]
  41aae3:	enter  0x7173,0x99
  41aae7:	jge    0x41aa9a
  41aae9:	retf   
  41aaea:	loope  0x41aa71
  41aaec:	mov    dh,0xd3
  41aaee:	mov    bl,0x6b
  41aaf0:	push   esi
  41aaf1:	jnp    0x41aade
  41aaf3:	or     DWORD PTR [ecx+edi*8-0x4c],eax
  41aaf7:	mov    dl,0x2d
  41aaf9:	add    ecx,edx
  41aafb:	xor    eax,0x46c66612
  41ab00:	adc    BYTE PTR [ecx],bl
  41ab02:	jp     0x41aaec
  41ab04:	or     BYTE PTR [ebp+0x34245c8b],ah
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x422078
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x422078
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x70a19ad0],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x599f1818],bh
  41ab67:	xor    BYTE PTR [eax],dh
  41ab69:	pop    ss
  41ab6a:	(bad)  
  41ab6b:	rcr    DWORD PTR [edx],cl
  41ab6d:	mov    esi,0x97ebd929
  41ab72:	dec    esp
  41ab73:	mov    al,ds:0xf8d66250
  41ab78:	dec    ebp
  41ab79:	je     0x41ab23
  41ab7b:	lock mov ecx,0x8a89f19a
  41ab81:	pusha  
  41ab82:	loope  0x41abfd
  41ab84:	mov    edx,0x35ecd2a1
  41ab89:	cmp    ebx,eax
  41ab8b:	jmp    0x41ab0e
  41ab8d:	cmc    
  41ab8e:	xor    ah,cl
  41ab90:	cmp    edx,DWORD PTR [ebx+0x3682a322]
  41ab96:	jmp    0xc357:0xcfdaf1eb
  41ab9d:	add    eax,0x3634c2fb
  41aba2:	and    DWORD PTR [ebp+0x68],ebx
  41aba5:	cmp    DWORD PTR [ebx-0x49828d1c],ecx
  41abab:	lock imul ebp,DWORD PTR ds:[ebp+esi*4-0x26],0xffffffc0
  41abb2:	leave  
  41abb3:	add    DWORD PTR [eax],ebp
  41abb5:	mov    ah,0xbc
  41abb7:	and    BYTE PTR [ecx+0x72],ah
  41abba:	jo     0x41ab9e
  41abbc:	(bad)  
  41abbe:	js     0x41abcf
  41abc0:	and    eax,0xfbd9a3dd
  41abc5:	xchg   esp,eax
  41abc6:	ins    BYTE PTR es:[edi],dx
  41abc7:	add    eax,DWORD PTR [eax+0x4e4d9a3]
  41abcd:	cs fwait
  41abcf:	hlt    
  41abd0:	les    edx,FWORD PTR [edi-0x4ac9b04e]
  41abd6:	imul   esp,DWORD PTR [edi+0x90b5570],0xffffffa0
  41abdd:	mov    DWORD PTR [ebx],ebx
  41abdf:	adc    DWORD PTR [eax+0x3d241956],0xffffffc5
  41abe6:	mov    al,0x9
  41abe8:	jmp    0xe3a7fc3c
  41abed:	cld    
  41abee:	imul   edi,edx,0x461472bc
  41abf4:	imul   eax,DWORD PTR [ebx+0x7c],0x3732a676
  41abfb:	test   al,0x5b
  41abfd:	push   ds
  41abfe:	test   DWORD PTR [ebx+0x68],edi
  41ac01:	push   ds
  41ac02:	jl     0x41aba2
  41ac04:	mov    ds:0xc5311837,eax
  41ac09:	fs hlt 
  41ac0b:	dec    esp
  41ac0c:	daa    
  41ac0d:	cmp    eax,0x8421c44d
  41ac12:	pusha  
  41ac13:	in     al,dx
  41ac14:	outs   dx,DWORD PTR ds:[esi]
  41ac15:	imul   esp,DWORD PTR [ecx+edx*4],0x125a075f
  41ac1c:	mov    ch,0x6a
  41ac1e:	cmp    DWORD PTR [edi+0x3b5f9175],0x1f
  41ac25:	pop    es
  41ac26:	xor    ch,cl
  41ac28:	mov    edx,cs
  41ac2a:	(bad)  
  41ac2b:	xchg   esp,eax
  41ac2c:	sub    al,0x17
  41ac2e:	icebp  
  41ac2f:	adc    DWORD PTR [esi],ecx
  41ac31:	sti    
  41ac32:	or     edi,esi
  41ac34:	nop
  41ac35:	addr16 dec edx
  41ac37:	cld    
  41ac38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac39:	aas    
  41ac3a:	sbb    al,0x84
  41ac3c:	stos   BYTE PTR es:[edi],al
  41ac3d:	push   ebp
  41ac3e:	aaa    
  41ac3f:	or     esi,DWORD PTR [edi-0x70]
  41ac42:	mov    edi,0xba070422
  41ac47:	loop   0x41ac2b
  41ac49:	js     0x41ac53
  41ac4b:	mov    eax,ds:0x694b992e
  41ac50:	and    ch,0xaa
  41ac53:	dec    ecx
  41ac54:	dec    eax
  41ac55:	(bad)  [eax+0x6]
  41ac58:	daa    
  41ac59:	jmp    0xe7c6:0x1c58a7e4
  41ac60:	ss xchg edx,eax
  41ac62:	(bad)  
  41ac63:	js     0x41acaf
  41ac65:	mov    ebx,0x4eecf84b
  41ac6a:	jne    0x41acdc
  41ac6c:	fisttp WORD PTR [edi+edi*2-0x5d]
  41ac70:	popa   
  41ac71:	pop    esp
  41ac72:	shl    DWORD PTR [esi+0x1172485],cl
  41ac78:	mov    dh,0x25
  41ac7a:	inc    eax
  41ac7b:	test   edi,ecx
  41ac7d:	mov    eax,0x83906de6
  41ac82:	mov    cl,0x91
  41ac84:	dec    edx
  41ac85:	inc    BYTE PTR [edi-0x4693d47f]
  41ac8b:	sbb    al,0xc1
  41ac8d:	dec    ebp
  41ac8e:	cli    
  41ac8f:	mov    eax,ds:0x3f68a094
  41ac94:	cmp    eax,0x8a5228c
  41ac99:	push   ds
  41ac9a:	shl    DWORD PTR [edi],1
  41ac9c:	sub    DWORD PTR [edx],ebx
  41ac9e:	cmp    eax,0x821f7eab
  41aca3:	dec    ebx
  41aca4:	sub    DWORD PTR ds:0x3c48485,eax
  41acaa:	sub    BYTE PTR [esi],ch
  41acac:	inc    edx
  41acad:	xchg   dl,ch
  41acaf:	sub    ch,BYTE PTR [edi]
  41acb1:	outs   dx,DWORD PTR ds:[esi]
  41acb2:	test   al,0xd5
  41acb4:	jg     0x41ac68
  41acb6:	data16 mov bl,BYTE PTR [ebx+ebx*8-0x1a]
  41acbb:	(bad)  
  41acbc:	push   ebx
  41acbd:	pop    eax
  41acbe:	adc    al,0x5f
  41acc0:	mov    ds:0x9ecf12c5,eax
  41acc5:	sahf   
  41acc6:	jp     0x41acb1
  41acc8:	ja     0x41ac78
  41acca:	pusha  
  41accb:	mov    esi,0x8931b8a0
  41acd0:	ja     0x41ad12
  41acd2:	xchg   ebx,eax
  41acd3:	mov    ds:0x920938d1,eax
  41acd8:	dec    esi
  41acd9:	repz ret 0x1501
  41acdd:	(bad)  
  41acde:	fcomp  st(3)
  41ace0:	retf   
  41ace1:	adc    ebp,DWORD PTR [ebp+0x2c3620b3]
  41ace7:	dec    ecx
  41ace8:	cmp    ebx,DWORD PTR [eax-0x15]
  41aceb:	stos   DWORD PTR es:[edi],eax
  41acec:	scas   eax,DWORD PTR es:[edi]
  41aced:	xchg   edi,eax
  41acee:	rcr    BYTE PTR [edi],1
  41acf0:	outs   dx,DWORD PTR ds:[esi]
  41acf1:	push   ecx
  41acf2:	daa    
  41acf3:	aam    0x32
  41acf5:	jb     0x41acb5
  41acf7:	ins    DWORD PTR es:[edi],dx
  41acf8:	repnz mov al,cs:0x2e98745d
  41acff:	ss push esi
  41ad01:	pop    ds
  41ad02:	jbe    0x41acfa
  41ad04:	movnti DWORD PTR [esp+ebx*1],ecx
  41ad08:	bound  eax,QWORD PTR ds:0x3e77ee13
  41ad0e:	mov    al,0x56
  41ad10:	stos   BYTE PTR es:[edi],al
  41ad11:	cmp    DWORD PTR [edi],0x3e7daf42
  41ad17:	stc    
  41ad18:	aaa    
  41ad19:	add    BYTE PTR [esi],ch
  41ad1b:	dec    edi
  41ad1c:	sub    DWORD PTR [ebp+0x7dd096f5],ebx
  41ad22:	inc    ecx
  41ad23:	mov    eax,0x86c2d3e
  41ad28:	shl    BYTE PTR [edi+edi*4],cl
  41ad2b:	fst    QWORD PTR [ebx]
  41ad2d:	pop    ds
  41ad2e:	fcom   QWORD PTR [esi+0x5b]
  41ad31:	stos   DWORD PTR es:[edi],eax
  41ad32:	fistp  WORD PTR [eax+0x56859d82]
  41ad38:	(bad)  
  41ad39:	out    0x17,eax
  41ad3b:	xlat   BYTE PTR ds:[ebx]
  41ad3c:	add    dl,BYTE PTR [edx+ebx*1]
  41ad3f:	rcl    BYTE PTR [esi+0x35175fa5],cl
  41ad45:	push   esi
  41ad46:	dec    eax
  41ad47:	loop   0x41ad18
  41ad49:	and    esp,DWORD PTR [esi+0x113ab8de]
  41ad4f:	and    ch,bh
  41ad51:	pop    ss
  41ad52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad53:	mov    bl,0x22
  41ad55:	loopne 0x41acfe
  41ad57:	gs xchg ebx,eax
  41ad59:	mov    ebp,0x81b1e1f1
  41ad5e:	loopne 0x41acef
  41ad60:	ins    DWORD PTR es:[edi],dx
  41ad61:	sub    BYTE PTR [ebx+0x5d],bl
  41ad64:	push   ebx
  41ad65:	aas    
  41ad66:	arpl   WORD PTR [ebx],dx
  41ad68:	or     cl,BYTE PTR [eax]
  41ad6a:	dec    ecx
  41ad6b:	mov    cl,0xc9
  41ad6d:	retf   
  41ad6e:	mov    ebx,0xd454a634
  41ad73:	cld    
  41ad74:	adc    dh,bl
  41ad76:	mov    bl,0x4a
  41ad78:	xor    ch,BYTE PTR [ebp-0x53b5e92]
  41ad7e:	push   eax
  41ad7f:	ss scas al,BYTE PTR es:[edi]
  41ad81:	mov    ebx,0x4d201ee5
  41ad86:	ds iret 
  41ad88:	popa   
  41ad89:	call   0xd827d079
  41ad8e:	cld    
  41ad8f:	wrmsr  
  41ad91:	scas   eax,DWORD PTR es:[edi]
  41ad92:	and    ebp,ebp
  41ad94:	mov    ch,0x82
  41ad96:	(bad)  
  41ad97:	lock push ebx
  41ad99:	push   ecx
  41ad9a:	rcr    DWORD PTR [eax-0x42],cl
  41ad9d:	inc    esp
  41ad9e:	adc    al,0x3a
  41ada0:	test   BYTE PTR [ebx+ecx*2],al
  41ada3:	pop    ebx
  41ada4:	or     al,BYTE PTR ds:0x162785f7
  41adaa:	ss (bad) 
  41adac:	jmp    0x9b89acbe
  41adb1:	jns    0x41adaa
  41adb3:	jbe    0x41ad43
  41adb5:	(bad)  
  41adb6:	xlat   BYTE PTR ds:[ebx]
  41adb7:	push   0x6c
  41adb9:	push   ebx
  41adba:	popf   
  41adbb:	cmp    ebp,DWORD PTR [ecx]
  41adbd:	jo     0x41ae24
  41adbf:	int3   
  41adc0:	inc    esi
  41adc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc2:	adc    DWORD PTR [ebp+0x5ed92f0d],ebp
  41adc8:	cdq    
  41adc9:	cdq    
  41adca:	je     0x41adf7
  41adcc:	sub    bh,ch
  41adce:	fwait
  41adcf:	sbb    eax,0x96ef2df7
  41add4:	and    BYTE PTR [edx],al
  41add6:	stc    
  41add7:	add    eax,0xe6f58d13
  41addc:	dec    eax
  41addd:	fdiv   QWORD PTR [edx+0x65]
  41ade0:	stc    
  41ade1:	aam    0xe
  41ade3:	add    eax,0x63ff6893
  41ade8:	out    dx,al
  41ade9:	cld    
  41adea:	lods   eax,DWORD PTR ds:[esi]
  41adeb:	push   eax
  41adec:	pop    ss
  41aded:	jge    0x41addf
  41adef:	popf   
  41adf0:	out    0x35,al
  41adf2:	jp     0x41ae36
  41adf4:	pop    es
  41adf5:	ret    
  41adf6:	inc    edx
  41adf7:	sub    al,0x70
  41adf9:	xlat   BYTE PTR ds:[ebx]
  41adfa:	mov    bh,BYTE PTR [edx-0x50]
  41adfd:	retf   0x1f71
  41ae00:	jb     0x41ae60
  41ae02:	outs   dx,BYTE PTR ds:[esi]
  41ae03:	adc    edi,DWORD PTR [ebp+0x61]
  41ae06:	mov    ecx,0x93ea045d
  41ae0b:	xchg   ebp,eax
  41ae0c:	adc    dl,bl
  41ae0e:	adc    al,0x7e
  41ae10:	xchg   esi,eax
  41ae11:	test   al,0xa4
  41ae13:	lods   eax,DWORD PTR ds:[esi]
  41ae14:	push   edx
  41ae15:	xchg   esi,eax
  41ae16:	cld    
  41ae17:	or     ecx,esi
  41ae19:	mov    eax,0x4f523ffd
  41ae1e:	pop    edi
  41ae1f:	pop    ds
  41ae20:	sahf   
  41ae21:	sub    BYTE PTR [esi+ecx*2+0x48],dl
  41ae25:	idiv   DWORD PTR [eax-0x71]
  41ae28:	mov    edx,DWORD PTR [edi-0x554f7e5d]
  41ae2e:	push   0x7c
  41ae30:	std    
  41ae31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae32:	inc    edx
  41ae33:	add    bl,ch
  41ae35:	sub    al,0x63
  41ae37:	enter  0xb31e,0x6b
  41ae3b:	xor    cl,BYTE PTR [esi]
  41ae3d:	ins    DWORD PTR es:[edi],dx
  41ae3e:	aad    0x4e
  41ae40:	repz or al,0xb0
  41ae43:	ins    BYTE PTR es:[edi],dx
  41ae44:	jle    0x41aec1
  41ae46:	push   ecx
  41ae47:	(bad)  
  41ae48:	mov    eax,ds:0x80600f25
  41ae4d:	mov    BYTE PTR [edx],cl
  41ae4f:	enter  0xc8b2,0x59
  41ae53:	popf   
  41ae54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae55:	mov    al,0x10
  41ae57:	mov    WORD PTR [ecx],?
  41ae59:	adc    al,0x1c
  41ae5b:	rol    BYTE PTR [edi-0x3d],cl
  41ae5e:	cwde   
  41ae5f:	jge    0x41ae1c
  41ae61:	sahf   
  41ae62:	dec    ebp
  41ae63:	push   edi
  41ae64:	bound  esi,QWORD PTR [esi+0x9]
  41ae67:	mov    ah,0xb0
  41ae69:	imul   ebx,esp,0x8b11c41b
  41ae6f:	cmc    
  41ae70:	xchg   ebx,eax
  41ae71:	test   DWORD PTR [eax+eiz*4+0x1f2637cf],0x8d8254d1
  41ae7c:	ins    BYTE PTR es:[edi],dx
  41ae7d:	pop    ds
  41ae7e:	sbb    eax,0xdcc2fe7c
  41ae83:	es sar bl,1
  41ae86:	xor    DWORD PTR [eax+0x4b],edi
  41ae89:	adc    DWORD PTR [bx],0x159ae5f
  41ae90:	into   
  41ae91:	add    BYTE PTR [ebx],bh
  41ae93:	mov    dl,0xef
  41ae95:	scas   eax,DWORD PTR es:[edi]
  41ae96:	xor    BYTE PTR ds:0xf85992da,bl
  41ae9c:	add    al,0xc3
  41ae9e:	mov    ebp,0xdeb0ec02
  41aea3:	pushf  
  41aea4:	adc    bl,bh
  41aea6:	rcl    DWORD PTR [edx],1
  41aea8:	jns    0x41aed2
  41aeaa:	icebp  
  41aeab:	arpl   WORD PTR [ebp-0x5b],si
  41aeae:	pushf  
  41aeaf:	xor    al,0x9
  41aeb1:	jmp    0x80598172
  41aeb6:	fwait
  41aeb7:	mov    eax,0xf5762b76
  41aebc:	bound  edx,QWORD PTR [edx-0xb6a7066]
  41aec2:	jl     0x41ae5c
  41aec4:	jecxz  0x41ae86
  41aec6:	repz aam 0x48
  41aec9:	(bad)  
  41aeca:	out    dx,eax
  41aecb:	daa    
  41aecc:	inc    edx
  41aecd:	mov    WORD PTR [ebp+edi*1-0x64],?
  41aed1:	pop    esi
  41aed2:	or     dh,BYTE PTR [eax+0x69]
  41aed5:	xchg   esi,eax
  41aed6:	sub    BYTE PTR [ecx-0x55],dh
  41aed9:	mov    dh,BYTE PTR [ebx+ebx*1+0x3f7437a6]
  41aee0:	nop
  41aee1:	mov    edx,0x5c743314
  41aee6:	sbb    eax,0x5558723f
  41aeeb:	push   edi
  41aeec:	jp     0x41aea5
  41aeee:	jge    0x41aed8
  41aef0:	dec    ebx
  41aef1:	xchg   DWORD PTR [edi],edx
  41aef3:	xchg   esp,eax
  41aef4:	lock mov DWORD PTR [esp+esi*1],edx
  41aef8:	pop    ss
  41aef9:	sub    eax,0xeb850dff
  41aefe:	push   0xfffffff0
  41af00:	in     al,0x6a
  41af02:	lods   al,BYTE PTR ds:[esi]
  41af03:	call   DWORD PTR [esi-0x40]
  41af06:	scas   al,BYTE PTR es:[edi]
  41af07:	sub    DWORD PTR [esi+0x17eda970],eax
  41af0d:	add    esp,DWORD PTR [esi+0x362c4470]
  41af13:	pop    ds
  41af14:	mov    dh,0x55
  41af16:	sub    BYTE PTR [edi],cl
  41af18:	test   BYTE PTR [edx+ebp*1],al
  41af1b:	add    BYTE PTR [eax],al
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41afb3
  41af80:	pop    ecx
  41af81:	and    DWORD PTR [esi+0x17],edi
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1-0x24a8e7e8],bh
  41af8d:	sub    dh,bh
  41af8f:	jg     0x41af4f
  41af91:	imul   eax,DWORD PTR [edx+0x8a734c2],0x6a
  41af98:	push   0x8bcc9309
  41af9d:	fsub   QWORD PTR [ebp-0x11]
  41afa0:	jmp    0x41af51
  41afa2:	mov    ax,0x314
  41afa6:	adc    BYTE PTR [ebp-0x74],al
  41afa9:	sub    al,0xe0
  41afab:	in     eax,0xaf
  41afad:	bound  ebp,QWORD PTR [ecx]
  41afaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb0:	das    
  41afb1:	push   esi
  41afb2:	pusha  
  41afb3:	lods   al,BYTE PTR ds:[esi]
  41afb4:	outs   dx,BYTE PTR ds:[esi]
  41afb5:	hlt    
  41afb6:	jmp    0x41afe6
  41afb8:	add    BYTE PTR [ebx-0x43],0xbc
  41afbc:	shr    dl,cl
  41afbe:	xor    ecx,ebx
  41afc0:	or     cl,0xa2
  41afc3:	jnp    0x41afe2
  41afc5:	or     BYTE PTR [eax-0x2d082a34],bh
  41afcb:	sub    al,0x51
  41afcd:	mov    ch,0xa8
  41afcf:	pop    edx
  41afd0:	ins    DWORD PTR es:[di],dx
  41afd2:	sti    
  41afd3:	pop    esi
  41afd4:	jecxz  0x41afee
  41afd6:	test   BYTE PTR [eax+0x19368367],0x11
  41afdd:	sahf   
  41afde:	sub    BYTE PTR [edx+0x56],0x88
  41afe2:	lds    esi,FWORD PTR [edi-0x79c3754]
  41afe8:	shr    DWORD PTR [edi+0x73d5bb47],0x52
  41afef:	pop    ebp
  41aff0:	je     0x41afc8
  41aff2:	jmp    0xc82d170c
  41aff7:	jmp    0x41aff5
  41aff9:	rcl    BYTE PTR [ebp-0x22],0x6a
  41affd:	into   
  41affe:	out    dx,eax
  41afff:	xor    esp,ecx
  41b001:	(bad)  
  41b002:	xlat   BYTE PTR ds:[ebx]
  41b003:	shl    BYTE PTR [esi+ebp*2+0x50],cl
  41b007:	push   esp
  41b008:	add    DWORD PTR [ebx],edx
  41b00a:	ret    0x3020
  41b00d:	lahf   
  41b00e:	int    0x46
  41b010:	pop    ebp
  41b011:	stos   BYTE PTR es:[edi],al
  41b012:	mov    esp,0x876c3f65
  41b017:	cmc    
  41b018:	push   0x26f36873
  41b01d:	dec    esi
  41b01e:	into   
  41b01f:	mov    al,0x66
  41b021:	dec    edi
  41b022:	stos   DWORD PTR es:[edi],eax
  41b023:	or     esi,DWORD PTR [eax+0x49]
  41b026:	mov    cl,0x59
  41b028:	ret    0x4fa6
  41b02b:	xchg   ebp,eax
  41b02c:	loopne 0x41aff5
  41b02e:	sbb    BYTE PTR [edi-0x6c],bh
  41b031:	or     dh,BYTE PTR [edi+0x203939de]
  41b037:	pop    ebp
  41b038:	jo     0x41afe2
  41b03a:	jne    0x41b072
  41b03c:	out    0x97,eax
  41b03e:	inc    esp
  41b03f:	push   edi
  41b040:	mov    al,ds:0x3f100d17
  41b045:	ins    DWORD PTR es:[edi],dx
  41b046:	cmc    
  41b047:	mov    bl,BYTE PTR [ecx-0x77983207]
  41b04d:	push   esi
  41b04e:	xor    edi,DWORD PTR [ecx+0x73446fa6]
  41b054:	(bad)  
  41b055:	popa   
  41b056:	dec    edx
  41b057:	mov    eax,0x6e0664ab
  41b05c:	aam    0xa4
  41b05e:	shr    esi,cl
  41b060:	fst    QWORD PTR [esi]
  41b062:	ror    ebp,1
  41b064:	lds    edi,FWORD PTR [edx-0xc6bbdc]
  41b06a:	sub    eax,0x83d3d436
  41b06f:	mov    al,ds:0x8d5a1c05
  41b074:	add    cl,BYTE PTR [ebx-0x1fb2eba3]
  41b07a:	fwait
  41b07b:	pop    edi
  41b07c:	xchg   ecx,esi
  41b07e:	mov    eax,ds:0x310f6664
  41b083:	ficomp WORD PTR [ebx+0x2b]
  41b086:	xchg   ecx,eax
  41b087:	in     al,dx
  41b088:	ror    cl,0x6a
  41b08b:	mov    DWORD PTR [esi],ebx
  41b08d:	mov    edi,0x31a8a065
  41b092:	push   ebx
  41b093:	or     DWORD PTR [ebx-0x26],esi
  41b096:	pop    edi
  41b097:	mov    edi,0x537d0d07
  41b09c:	pop    eax
  41b09d:	dec    edx
  41b09e:	sahf   
  41b09f:	int    0x6c
  41b0a1:	jnp    0x41b045
  41b0a3:	xor    al,0xda
  41b0a5:	in     al,dx
  41b0a6:	mov    BYTE PTR [esi],dl
  41b0a8:	xor    ebp,DWORD PTR ds:0x124a36d7
  41b0ae:	adc    ch,dh
  41b0b0:	pop    ebx
  41b0b1:	sar    eax,1
  41b0b3:	fsubr  DWORD PTR [ecx+0x6d]
  41b0b6:	rol    DWORD PTR [esi-0x3c72faed],1
  41b0bc:	sub    dh,dh
  41b0be:	loope  0x41b061
  41b0c0:	mov    edx,0xf77043d8
  41b0c5:	xchg   ebx,eax
  41b0c6:	and    al,0xe9
  41b0c8:	int    0x53
  41b0ca:	inc    esi
  41b0cb:	sbb    DWORD PTR [esi],0xa13bf069
  41b0d1:	lods   al,BYTE PTR ds:[esi]
  41b0d2:	ins    DWORD PTR es:[edi],dx
  41b0d3:	pop    ecx
  41b0d4:	and    BYTE PTR [ecx],ch
  41b0d6:	sub    esi,DWORD PTR ds:0x2bea7678
  41b0dc:	xor    dl,BYTE PTR [esi-0x50]
  41b0df:	jle    0x41b126
  41b0e1:	add    BYTE PTR [ebp-0x33584734],bh
  41b0e7:	fbld   TBYTE PTR [ecx-0x24]
  41b0ea:	xchg   ebx,eax
  41b0eb:	sub    bh,ah
  41b0ed:	call   0xfdde:0x1bed0cfe
  41b0f4:	div    BYTE PTR [esi]
  41b0f6:	dec    ebx
  41b0f7:	adc    al,0x25
  41b0f9:	pop    eax
  41b0fa:	and    DWORD PTR [ebp+0x67b03cd2],ecx
  41b100:	or     bl,al
  41b102:	adc    edx,DWORD PTR cs:[ebx+0x35]
  41b106:	inc    edx
  41b107:	adc    DWORD PTR [ebx*2+0x5cc8af96],ebx
  41b10e:	pusha  
  41b10f:	mov    al,ds:0x806e876e
  41b114:	lods   al,BYTE PTR ds:[esi]
  41b115:	mov    eax,0x4a3fc522
  41b11a:	push   DWORD PTR [ebx+eiz*4-0x61313daf]
  41b121:	inc    ecx
  41b122:	xchg   DWORD PTR [ebp+edx*2+0x1556a317],eax
  41b129:	lods   eax,DWORD PTR ds:[esi]
  41b12a:	scas   eax,DWORD PTR es:[edi]
  41b12b:	mov    ah,0x32
  41b12d:	clc    
  41b12e:	and    DWORD PTR [eax],ebp
  41b130:	dec    ebp
  41b131:	neg    BYTE PTR [esp+edi*1-0x6a]
  41b135:	jle    0x41b14b
  41b137:	clc    
  41b138:	out    dx,al
  41b139:	dec    ecx
  41b13a:	leave  
  41b13b:	retf   
  41b13c:	cmp    DWORD PTR [esi],ecx
  41b13e:	popf   
  41b13f:	adc    esp,eax
  41b141:	scas   eax,DWORD PTR es:[edi]
  41b142:	lock mov al,0xaa
  41b145:	mov    bh,0xa3
  41b147:	inc    esi
  41b148:	jl     0x41b151
  41b14a:	adc    cl,al
  41b14c:	xchg   ecx,eax
  41b14d:	mov    edi,0xc3c8c2e4
  41b152:	xor    ecx,DWORD PTR [ebx]
  41b154:	xor    DWORD PTR [eax],ebp
  41b156:	popf   
  41b157:	inc    eax
  41b158:	out    0x7b,eax
  41b15a:	cdq    
  41b15b:	(bad)  
  41b15c:	sahf   
  41b15d:	push   es
  41b15e:	jmp    0x41b142
  41b160:	pop    ecx
  41b161:	aaa    
  41b162:	aad    0x6
  41b164:	das    
  41b165:	(bad)  
  41b166:	aad    0x75
  41b168:	lea    ecx,[eax-0x1c1feea2]
  41b16e:	add    eax,0x2c22b93b
  41b173:	jbe    0x41b1d5
  41b175:	test   eax,0x976216f0
  41b17a:	mov    ss,ebx
  41b17c:	jecxz  0x41b1f1
  41b17e:	loop   0x41b11c
  41b180:	leave  
  41b181:	pop    esp
  41b182:	jne    0x41b182
  41b184:	adc    dl,BYTE PTR [ebp+0x3bc69405]
  41b18a:	push   edx
  41b18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18c:	ret    
  41b18d:	outs   dx,BYTE PTR ds:[esi]
  41b18e:	xor    ebp,DWORD PTR [ebp-0x5f]
  41b191:	je     0x41b164
  41b193:	dec    edx
  41b194:	sahf   
  41b195:	aam    0x5f
  41b197:	mov    esp,0xf2e51bc
  41b19c:	lahf   
  41b19d:	sbb    al,0xf1
  41b19f:	push   esi
  41b1a0:	xchg   ebx,eax
  41b1a1:	shr    BYTE PTR [edx+0x31d01cd7],cl
  41b1a7:	cmp    al,0xda
  41b1a9:	das    
  41b1aa:	(bad)  
  41b1ab:	popf   
  41b1ac:	sbb    dl,BYTE PTR [edi+0xd]
  41b1af:	mov    ebp,0x9e7c2648
  41b1b4:	mov    ds:0x673b2bca,al
  41b1b9:	xchg   DWORD PTR [esi-0x17c82d5f],ebx
  41b1bf:	dec    esi
  41b1c0:	test   DWORD PTR [eax],edi
  41b1c2:	inc    eax
  41b1c3:	xor    al,0xda
  41b1c5:	xchg   ebp,eax
  41b1c6:	inc    DWORD PTR [ecx-0x548d79ff]
  41b1cc:	pop    ebx
  41b1cd:	jp     0x41b1c1
  41b1cf:	js     0x41b1cf
  41b1d1:	aad    0xd1
  41b1d3:	inc    eax
  41b1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d5:	das    
  41b1d6:	popf   
  41b1d7:	enter  0xeace,0x73
  41b1db:	dec    ecx
  41b1dc:	ret    
  41b1dd:	aad    0x28
  41b1df:	jp     0x41b1d1
  41b1e1:	clc    
  41b1e2:	jmp    FWORD PTR [ebp-0xe]
  41b1e5:	sbb    BYTE PTR [edi+edx*1],bl
  41b1e8:	out    0x9e,eax
  41b1ea:	mov    esi,0x6acbe3b7
  41b1ef:	sti    
  41b1f0:	shl    DWORD PTR [edi-0x60],0x44
  41b1f4:	out    0xf7,eax
  41b1f6:	jno    0x41b216
  41b1f8:	jecxz  0x41b21e
  41b1fa:	sbb    edi,edx
  41b1fc:	mov    cl,0xc1
  41b1fe:	inc    edx
  41b1ff:	out    0x23,al
  41b201:	dec    edx
  41b202:	mov    eax,ds:0x995b2b06
  41b207:	jecxz  0x41b26c
  41b209:	shl    ebx,cl
  41b20b:	mov    bl,0xe9
  41b20d:	adc    cl,cl
  41b20f:	lock dec ecx
  41b211:	lock sub DWORD PTR [ecx+0x2df7b3e5],eax
  41b218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b219:	test   BYTE PTR [edx-0x1607bbaf],dl
  41b21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b220:	add    bl,BYTE PTR [ecx-0x29]
  41b223:	add    BYTE PTR [edx],dl
  41b225:	mov    cl,0x4c
  41b227:	mov    WORD PTR [ecx-0x75cee0f8],fs
  41b22d:	xchg   esp,eax
  41b22e:	ret    0x8b23
  41b231:	(bad)  
  41b232:	in     al,0xf2
  41b234:	call   0x5502:0x27f1da46
  41b23b:	pop    ss
  41b23c:	test   eax,0x102c6622
  41b241:	push   0x29
  41b243:	jo     0x41b1ea
  41b245:	shr    edx,0x6c
  41b248:	sub    eax,0x23719116
  41b24d:	je     0x41b1de
  41b24f:	cmp    bh,BYTE PTR [edx-0x4d]
  41b252:	and    al,0x17
  41b254:	pop    ecx
  41b255:	adc    bh,BYTE PTR [ecx]
  41b257:	call   0xcb61:0xf6ab9220
  41b25e:	adc    eax,0x6b7cab8a
  41b263:	(bad)  
  41b264:	and    dl,BYTE PTR [ebp-0x78]
  41b267:	sub    bl,BYTE PTR [edx]
  41b269:	inc    esp
  41b26a:	ss js  0x41b2d4
  41b26d:	cmp    DWORD PTR [ebp+0x7b],0xffffffaf
  41b271:	ret    0x5f7f
  41b274:	sbb    DWORD PTR [ebx-0x5a9e8e8e],0x68
  41b27b:	sub    eax,0x3d0257d0
  41b280:	test   eax,0x23457888
  41b285:	cli    
  41b286:	in     al,dx
  41b287:	dec    edx
  41b288:	mov    ebx,0x532aa9c4
  41b28d:	outs   dx,DWORD PTR ds:[esi]
  41b28e:	push   cs
  41b28f:	je     0x41b295
  41b291:	cmc    
  41b292:	out    0x1,eax
  41b294:	sti    
  41b295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b296:	sahf   
  41b297:	fs aas 
  41b299:	jg     0x41b303
  41b29b:	lods   eax,DWORD PTR ds:[esi]
  41b29c:	es push edi
  41b29e:	push   edi
  41b29f:	test   BYTE PTR [edi],0x39
  41b2a2:	jo     0x41b24f
  41b2a4:	adc    eax,0x733f2c2b
  41b2a9:	and    edi,ebx
  41b2ab:	cs mov cl,0x2d
  41b2ae:	pop    edi
  41b2af:	pop    ebx
  41b2b0:	adc    DWORD PTR ds:0xa83fa330,edi
  41b2b6:	jle    0x41b29d
  41b2b8:	sbb    ch,al
  41b2ba:	pop    es
  41b2bb:	xor    esi,DWORD PTR [esi-0x1e]
  41b2be:	mov    fs,WORD PTR [esi-0x75]
  41b2c1:	cmp    ch,BYTE PTR [eax-0x13fd8a45]
  41b2c7:	inc    edx
  41b2c8:	aad    0x72
  41b2ca:	mov    al,ds:0x13a28e51
  41b2cf:	aad    0xd2
  41b2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d2:	push   ebp
  41b2d3:	aaa    
  41b2d4:	fwait
  41b2d5:	xor    eax,0x922e37c2
  41b2da:	xchg   esi,eax
  41b2db:	adc    eax,0xae85ed1e
  41b2e0:	out    0x29,al
  41b2e2:	in     al,0x8d
  41b2e4:	sub    bh,ah
  41b2e6:	sub    BYTE PTR [edx],cl
  41b2e8:	lea    ebp,[eax+0x6faa71a9]
  41b2ee:	jl     0x41b2ea
  41b2f0:	call   0x96ff0b69
  41b2f5:	out    0x80,eax
  41b2f7:	xor    esi,esp
  41b2f9:	jno    0x41b360
  41b2fb:	jle    0x41b2dc
  41b2fd:	mov    ds:0x3cfa349d,eax
  41b302:	adc    BYTE PTR [esi+eiz*1+0x52],0xf0
  41b307:	std    
  41b308:	mov    ds:0xd37d0f2a,al
  41b30d:	lahf   
  41b30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b30f:	dec    edi
  41b310:	mov    ds:0x8580ee4c,eax
  41b315:	mov    ds:0xcfbaf45c,eax
  41b31a:	sahf   
  41b31b:	push   ss
  41b31c:	adc    ebp,DWORD PTR [edx+0x271ccda9]
  41b322:	fisttp WORD PTR [edx+0x5c]
  41b325:	or     cl,0xc5
  41b328:	lods   eax,DWORD PTR ds:[esi]
  41b329:	fcmovnu st,st(6)
  41b32b:	test   al,0x3a
  41b32d:	fidiv  WORD PTR [ecx+esi*4+0x3eab9669]
  41b334:	ds aaa 
  41b336:	gs push ecx
  41b338:	xor    eax,0xf31c3845
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	in     al,dx
  41b368:	push   ebp
  41b369:	loope  0x41b3e9
  41b36b:	mov    ebx,0xbc18168f
  41b370:	adc    bl,BYTE PTR [eax]
  41b372:	sbb    BYTE PTR [esi],ch
  41b374:	in     al,dx
  41b375:	sub    edi,ecx
  41b377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b378:	outs   dx,BYTE PTR ss:[esi]
  41b37a:	cmove  eax,ebx
  41b37d:	or     BYTE PTR [edi],0x88
  41b380:	mov    ch,0x93
  41b382:	or     ecx,ebx
  41b384:	ror    DWORD PTR [eax-0x49],1
  41b387:	pop    ebp
  41b388:	out    dx,al
  41b389:	push   0xffffff9f
  41b38b:	add    edx,esi
  41b38d:	inc    ecx
  41b38e:	scas   eax,DWORD PTR es:[edi]
  41b38f:	add    dl,BYTE PTR [eax-0x4d2ac2ad]
  41b395:	shl    BYTE PTR [ebp+0x43],0x17
  41b399:	popa   
  41b39a:	imul   edi,DWORD PTR [edx],0x60
  41b39d:	(bad)  
  41b39e:	or     edi,DWORD PTR [ebx]
  41b3a0:	pop    edi
  41b3a1:	fsub   DWORD PTR [eax+edx*2-0x67]
  41b3a5:	test   DWORD PTR [ecx],0x756bc06a
  41b3ab:	arpl   WORD PTR [esi+0x83ff32e],bx
  41b3b1:	jge    0x41b342
  41b3b3:	xor    cl,BYTE PTR [eax]
  41b3b5:	call   0x4c28:0x1784a088
  41b3bc:	out    dx,eax
  41b3bd:	test   eax,0x88b3f34
  41b3c2:	add    eax,0x8ededf07
  41b3c7:	and    bh,ah
  41b3c9:	shl    DWORD PTR [ecx+eax*4+0x7a],1
  41b3cd:	mov    ah,0x74
  41b3cf:	test   DWORD PTR [ebp-0xa],edi
  41b3d2:	adc    BYTE PTR [esi],ch
  41b3d4:	dec    eax
  41b3d5:	add    DWORD PTR [ebp-0x2a44cd3a],ebp
  41b3db:	ret    0xc43e
  41b3de:	iret   
  41b3df:	ins    DWORD PTR es:[edi],dx
  41b3e0:	leave  
  41b3e1:	adc    ah,BYTE PTR [edx+0x2e35d940]
  41b3e7:	push   cs
  41b3e8:	daa    
  41b3e9:	loopne 0x41b3e8
  41b3eb:	pop    edx
  41b3ec:	and    ah,BYTE PTR [edi]
  41b3ee:	ret    
  41b3ef:	push   es
  41b3f0:	pop    ss
  41b3f1:	jmp    0xd6c5:0x6b21823c
  41b3f8:	adc    esi,DWORD PTR [ecx]
  41b3fa:	out    0x62,al
  41b3fc:	or     al,0x75
  41b3fe:	pop    ebx
  41b3ff:	xchg   edi,eax
  41b400:	jnp    0x41b3d3
  41b402:	sahf   
  41b403:	daa    
  41b404:	repz icebp 
  41b406:	(bad)  
  41b407:	cld    
  41b408:	fcomp  DWORD PTR [ecx-0x37]
  41b40b:	(bad)  
  41b40c:	mov    eax,ds:0xda6e78be
  41b411:	call   0x4e20:0x19d9a760
  41b418:	inc    eax
  41b419:	jecxz  0x41b3a4
  41b41b:	pop    ss
  41b41c:	or     bl,dh
  41b41e:	rcr    BYTE PTR [edx+0x2e487c94],1
  41b424:	rcl    BYTE PTR [edx-0x34],1
  41b427:	mov    edi,0x9e091c1c
  41b42c:	inc    esp
  41b42d:	push   edi
  41b42e:	rcr    BYTE PTR [edi+0x7d],1
  41b431:	fistp  WORD PTR [ecx-0x2f7e70cd]
  41b437:	sar    cl,1
  41b439:	pop    es
  41b43a:	adc    dl,dh
  41b43c:	pop    es
  41b43d:	inc    ecx
  41b43e:	adc    ch,BYTE PTR [ebp+0x6f40ffa3]
  41b444:	ja     0x41b404
  41b446:	add    al,0x23
  41b448:	xchg   edx,eax
  41b44a:	cld    
  41b44b:	lahf   
  41b44c:	arpl   WORD PTR [ecx+0x3afb3d94],si
  41b452:	push   ebp
  41b453:	inc    edi
  41b454:	push   ss
  41b455:	out    0x7c,eax
  41b457:	lods   eax,DWORD PTR ds:[esi]
  41b458:	arpl   WORD PTR [edi-0xf80e8d4],ax
  41b45e:	pop    edi
  41b45f:	inc    edx
  41b460:	ins    BYTE PTR es:[edi],dx
  41b461:	adc    al,0xea
  41b463:	add    al,al
  41b465:	xchg   edx,eax
  41b466:	pop    edi
  41b467:	adc    ebp,0xffffff8f
  41b46a:	pop    ebx
  41b46b:	jno    0x41b48e
  41b46d:	or     al,0xaa
  41b46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b470:	fidiv  WORD PTR [ebp+0x65]
  41b473:	mov    edi,0x8ac62183
  41b478:	int3   
  41b479:	arpl   WORD PTR [eax+0x43ac93a6],dx
  41b47f:	nop
  41b480:	jnp    0x41b490
  41b482:	sbb    ch,bl
  41b484:	pusha  
  41b485:	cld    
  41b486:	pop    ebp
  41b487:	cmc    
  41b488:	push   ebp
  41b489:	cmp    al,0xf1
  41b48b:	gs jo  0x41b4f3
  41b48e:	and    al,0x7
  41b490:	aaa    
  41b491:	dec    ebp
  41b492:	fs jp  0x41b50d
  41b495:	dec    eax
  41b496:	loope  0x41b505
  41b498:	pop    ds
  41b499:	rol    BYTE PTR [eax+ecx*8],0x79
  41b49d:	or     DWORD PTR [ebx+0x458e5bdf],0x9d1e309e
  41b4a7:	mov    dh,0xd1
  41b4a9:	sub    eax,0xc79b6f8b
  41b4ae:	pop    ss
  41b4af:	xor    DWORD PTR [esi],esp
  41b4b1:	mov    al,0xe7
  41b4b3:	xchg   esp,eax
  41b4b4:	mov    eax,ds:0xc7db39c2
  41b4b9:	adc    eax,0xd33aa660
  41b4be:	mov    ch,0x81
  41b4c0:	leave  
  41b4c1:	jmp    DWORD PTR [esi]
  41b4c3:	and    BYTE PTR [edi-0x1e2c3bf7],ah
  41b4c9:	sub    edi,DWORD PTR es:0xecd0dc17
  41b4d0:	adc    eax,0xc38eec45
  41b4d5:	repz and BYTE PTR [ecx+0x1dfa50],cl
  41b4dc:	pop    edi
  41b4dd:	or     DWORD PTR [edx+0x5],esi
  41b4e0:	shr    DWORD PTR [esi-0x740d3684],1
  41b4e6:	cdq    
  41b4e7:	cmp    dh,ch
  41b4e9:	xchg   DWORD PTR [esi-0x3],esi
  41b4ec:	popf   
  41b4ed:	mov    ch,0x6e
  41b4ef:	push   0xffffff9a
  41b4f1:	dec    ecx
  41b4f2:	adc    BYTE PTR [edx-0x1f],cl
  41b4f5:	out    dx,eax
  41b4f6:	pop    esi
  41b4f7:	inc    DWORD PTR [esi+0x3d]
  41b4fa:	ins    BYTE PTR es:[edi],dx
  41b4fb:	sar    DWORD PTR [edi+0x31],0xd
  41b4ff:	jmp    0x717b:0xeb4bdd4d
  41b506:	(bad)  
  41b507:	lock mov dh,0x30
  41b50a:	das    
  41b50b:	fdivr  QWORD PTR [esp+esi*1-0x5a5c0731]
  41b512:	stos   DWORD PTR es:[edi],eax
  41b513:	js     0x41b569
  41b515:	dec    eax
  41b516:	push   edx
  41b517:	dec    eax
  41b518:	repnz cmc 
  41b51a:	in     eax,dx
  41b51b:	dec    ebx
  41b51c:	sbb    BYTE PTR [edi+0x74],0x1e
  41b520:	imul   eax,DWORD PTR [edi+0x13],0xbeb52ac2
  41b527:	mov    WORD PTR [ebp+0x11],es
  41b52a:	out    dx,al
  41b52b:	cmp    BYTE PTR [esi-0x50630d4a],dh
  41b531:	xchg   edx,eax
  41b532:	test   DWORD PTR [esp+eiz*8+0x5445ccfd],ebx
  41b539:	adc    BYTE PTR [edx-0x51],cl
  41b53c:	or     al,0xf2
  41b53e:	sbb    eax,DWORD PTR [esi]
  41b540:	push   ebx
  41b541:	fistp  WORD PTR [edi]
  41b543:	push   0x2a7c3f6c
  41b548:	fs aas 
  41b54a:	pop    ss
  41b54b:	outs   dx,BYTE PTR ds:[esi]
  41b54c:	ins    DWORD PTR es:[edi],dx
  41b54d:	retf   0xf08a
  41b550:	dec    esi
  41b551:	or     al,0xd4
  41b553:	into   
  41b554:	sub    al,0xa
  41b556:	jmp    0xb27e:0x726408c8
  41b55d:	jg     0x41b5ce
  41b55f:	and    BYTE PTR [ebx+eiz*2+0x2a68ed48],al
  41b566:	push   ecx
  41b567:	push   ss
  41b568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b569:	and    bl,BYTE PTR [ecx-0x65]
  41b56c:	adc    BYTE PTR [edx+0x7aac5cd1],al
  41b572:	fistp  QWORD PTR [ecx-0x5aeaf8db]
  41b578:	cs adc eax,esi
  41b57b:	mov    eax,ds:0xab97e249
  41b580:	or     dh,dl
  41b582:	std    
  41b583:	cmc    
  41b584:	jle    0x41b524
  41b586:	iret   
  41b587:	mov    DWORD PTR [ecx],ebx
  41b589:	ficomp DWORD PTR [edi-0x60]
  41b58c:	jne    0x41b593
  41b58e:	xchg   BYTE PTR [ebx-0xc],al
  41b591:	shl    cl,cl
  41b593:	mov    esi,0xd99432f6
  41b598:	jns    0x41b568
  41b59a:	in     eax,0x6a
  41b59c:	mov    edx,0x70e9481
  41b5a1:	dec    edx
  41b5a2:	ja     0x41b5d7
  41b5a4:	ja     0x41b534
  41b5a6:	fwait
  41b5a7:	and    eax,0x8f7653c1
  41b5ac:	cld    
  41b5ad:	xchg   BYTE PTR [ecx+0x50e0ae49],dl
  41b5b3:	add    dl,BYTE PTR [eax]
  41b5b5:	mov    ch,0xe0
  41b5b7:	and    al,0x9d
  41b5b9:	cmp    DWORD PTR [esi-0x5549dc70],edx
  41b5bf:	repnz or al,0xa5
  41b5c2:	(bad)  
  41b5c3:	or     cl,dl
  41b5c5:	jb     0x41b597
  41b5c7:	cmp    ebp,DWORD PTR [eax+0x56da425a]
  41b5cd:	cmc    
  41b5ce:	stc    
  41b5cf:	adc    bh,bh
  41b5d1:	xor    eax,0x9f0d4b56
  41b5d6:	outs   dx,DWORD PTR ds:[esi]
  41b5d7:	addr16 jne 0x41b5e1
  41b5da:	imul   BYTE PTR [eax+0x43]
  41b5dd:	setp   BYTE PTR [eax]
  41b5e0:	dec    eax
  41b5e1:	xor    al,0xad
  41b5e3:	xchg   esp,eax
  41b5e4:	sub    eax,0x93afec56
  41b5e9:	xor    DWORD PTR ss:[ebx-0x19],0x6d650f9
  41b5f1:	cmp    ecx,DWORD PTR [edx-0x295754d5]
  41b5f7:	pop    es
  41b5f8:	enter  0x5bf,0x81
  41b5fc:	sbb    DWORD PTR [esi],ebp
  41b5fe:	loope  0x41b654
  41b600:	mov    dh,0xd1
  41b602:	jnp    0x41b599
  41b604:	xor    al,0xd7
  41b606:	shr    eax,0xc2
  41b609:	call   0x830d:0x8b531d89
  41b610:	push   edx
  41b611:	mov    dl,0x58
  41b613:	and    DWORD PTR [esi+edx*1],0xffffffbb
  41b617:	call   0xc93:0xe362e914
  41b61e:	sahf   
  41b61f:	push   eax
  41b620:	sub    BYTE PTR [ecx],ch
  41b622:	lock scas eax,DWORD PTR es:[edi]
  41b624:	jb     0x41b681
  41b626:	xor    DWORD PTR [edx-0x765da6a2],ebx
  41b62c:	dec    edi
  41b62d:	xor    ch,BYTE PTR [edi+0x1bc5d176]
  41b633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b634:	adc    dh,BYTE PTR [ebx-0x13bd9a0e]
  41b63a:	pusha  
  41b63b:	push   eax
  41b63c:	cmp    al,bl
  41b63e:	and    ecx,DWORD PTR [edx]
  41b640:	mov    al,ds:0x21f99fec
  41b645:	dec    eax
  41b646:	out    dx,eax
  41b647:	pop    edi
  41b648:	adc    BYTE PTR [ecx+0x748546f5],0x1f
  41b64f:	push   cs
  41b650:	push   cs
  41b651:	in     eax,0xe
  41b653:	shl    BYTE PTR [esp+edx*1-0x67],0x83
  41b658:	pop    ebx
  41b659:	or     eax,0xbca7c705
  41b65e:	pop    ebx
  41b65f:	jb     0x41b683
  41b661:	fnstcw WORD PTR [ebx-0xe078d74]
  41b667:	in     al,dx
  41b668:	cs mov bh,0x62
  41b66b:	pop    ss
  41b66c:	lods   al,BYTE PTR ds:[esi]
  41b66d:	mov    edi,0x20b5e8a8
  41b672:	pop    esp
  41b673:	sbb    BYTE PTR [esi+0x75],dh
  41b676:	xchg   al,cl
  41b678:	ror    DWORD PTR [ebp-0x5769875],0xb
  41b67f:	(bad)  
  41b681:	mov    edi,ebx
  41b683:	test   BYTE PTR [ebx+0x67bff6e0],al
  41b689:	arpl   WORD PTR [esi],cx
  41b68b:	push   es
  41b68c:	dec    ecx
  41b68d:	stos   DWORD PTR es:[edi],eax
  41b68e:	mov    bl,0x62
  41b690:	stc    
  41b691:	ret    
  41b692:	call   0x913:0xce506b99
  41b699:	cld    
  41b69a:	(bad)  
  41b69b:	xchg   edx,eax
  41b69c:	aaa    
  41b69d:	das    
  41b69e:	(bad)  
  41b69f:	mov    WORD PTR [edi+0x7ef04c65],ds
  41b6a5:	mov    DWORD PTR [eax],esp
  41b6a7:	not    BYTE PTR [esi-0x66]
  41b6aa:	ret    
  41b6ab:	push   esi
  41b6ac:	and    BYTE PTR [ecx],bl
  41b6ae:	pop    ss
  41b6af:	jmp    0x41b722
  41b6b1:	(bad)  
  41b6b2:	fsub   DWORD PTR [ebx-0x10]
  41b6b5:	mov    edi,0xb45a0ed3
  41b6ba:	ds (bad) 
  41b6bc:	jbe    0x41b6f5
  41b6be:	push   ecx
  41b6bf:	test   DWORD PTR [ebp+0xcb1753a],0x9c92d193
  41b6c9:	outs   dx,DWORD PTR ds:[esi]
  41b6ca:	ret    0x2f9f
  41b6cd:	sti    
  41b6ce:	pop    esi
  41b6cf:	es int 0x3a
  41b6d2:	lock xchg esp,eax
  41b6d4:	or     eax,0xf1773fa3
  41b6d9:	(bad)  
  41b6da:	mov    edx,0x9d7a8790
  41b6df:	dec    eax
  41b6e0:	adc    bl,BYTE PTR [edx]
  41b6e2:	push   ebx
  41b6e3:	xchg   ebx,eax
  41b6e4:	adc    eax,0xbb3de111
  41b6e9:	add    ecx,DWORD PTR [edi-0x4a23afe]
  41b6ef:	pop    ss
  41b6f0:	ja     0x41b6f0
  41b6f2:	push   ecx
  41b6f3:	arpl   WORD PTR [edi+0x46054cab],bx
  41b6f9:	jmp    0x41b6e4
  41b6fb:	push   0xffffffb0
  41b6fd:	repz test ebx,0xce2bf5a5
  41b704:	mov    al,ds:0x2d983b08
  41b709:	adc    BYTE PTR [ebp-0x3f],cl
  41b70c:	xchg   ebx,eax
  41b70d:	jae    0x41b782
  41b70f:	in     eax,0x78
  41b711:	pushf  
  41b712:	(bad)  
  41b713:	test   al,0x15
  41b715:	mov    ch,0x12
  41b717:	mov    ah,0x63
  41b719:	xchg   ebx,eax
  41b71a:	inc    edi
  41b71b:	xlat   BYTE PTR ds:[ebx]
  41b71c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b71d:	jmp    0xa3dfa32b
  41b722:	or     edx,DWORD PTR [esi+0x1ee0c1c8]
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x422604
  41b758:	mov    DWORD PTR [esp+0x68],0x4225fc
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42258c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x3a55d674],dh
  41b815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b816:	xlat   BYTE PTR ds:[ebx]
  41b817:	mov    esp,0x1816895e
  41b81c:	mov    esp,0x10181812
  41b821:	sub    eax,0xc2bee115
  41b826:	fisttp WORD PTR [ebx+0x2b5eee90]
  41b82c:	mov    ah,0xa4
  41b82e:	fcmovnu st,st(2)
  41b830:	pop    edi
  41b831:	fs mov eax,0xed311576
  41b837:	(bad)  
  41b838:	sub    esp,DWORD PTR [ebp+0x15]
  41b83b:	dec    eax
  41b83c:	loope  0x41b89d
  41b83e:	dec    esi
  41b83f:	lds    esp,FWORD PTR [edi]
  41b841:	dec    edx
  41b842:	sub    al,0xef
  41b844:	push   ecx
  41b845:	cmp    eax,0x390c7d51
  41b84a:	mov    bh,0x36
  41b84c:	cmc    
  41b84d:	cmp    dh,cl
  41b84f:	and    al,0x9
  41b851:	or     eax,0x5b09ad5c
  41b856:	out    0x7a,eax
  41b858:	mov    ebx,0x4853f344
  41b85d:	mov    dh,0xae
  41b85f:	mov    BYTE PTR [esi+0x16bbf8ae],ah
  41b865:	cmc    
  41b866:	es adc eax,0x515f4f66
  41b86c:	xor    edx,DWORD PTR [esi]
  41b86e:	popf   
  41b86f:	pop    esi
  41b870:	call   0xcdd0:0xb71ec2f0
  41b877:	xchg   ebx,eax
  41b878:	dec    esi
  41b879:	jae    0x41b86a
  41b87b:	dec    ebx
  41b87c:	lock jmp 0x4a46235a
  41b882:	adc    bl,BYTE PTR [edx]
  41b884:	mov    cs:0xe4c542c0,al
  41b88a:	fsub   st(6),st
  41b88c:	je     0x41b8bd
  41b88e:	(bad)  
  41b88f:	inc    DWORD PTR [eax+0x7846d166]
  41b895:	cmp    eax,0x7fc7d604
  41b89a:	mov    esi,0xf92d38ee
  41b89f:	cld    
  41b8a0:	ror    DWORD PTR [ecx],cl
  41b8a2:	sahf   
  41b8a3:	sub    al,0x2b
  41b8a5:	mov    eax,ds:0xfd6cbc92
  41b8aa:	cld    
  41b8ab:	cli    
  41b8ac:	add    edi,ecx
  41b8ae:	fadd   st(7),st
  41b8b0:	call   0x1afcfb46
  41b8b5:	pusha  
  41b8b6:	(bad)  
  41b8b7:	jnp    0x41b8d9
  41b8b9:	jge    0x41b90e
  41b8bb:	push   eax
  41b8bc:	jmp    0x41b85c
  41b8be:	test   al,0x68
  41b8c0:	sahf   
  41b8c1:	add    al,0xc5
  41b8c3:	mul    BYTE PTR gs:[ecx]
  41b8c6:	gs sbb al,0x59
  41b8c9:	scas   al,BYTE PTR es:[edi]
  41b8ca:	icebp  
  41b8cb:	adc    dl,BYTE PTR [esi-0x3afe626]
  41b8d1:	jno    0x41b8a8
  41b8d3:	ja     0x41b8ba
  41b8d5:	cmp    DWORD PTR [eax-0x23b86902],esi
  41b8db:	arpl   WORD PTR [ebx+0x3e95525c],bp
  41b8e1:	(bad)  
  41b8e2:	aad    0x82
  41b8e4:	mov    ds,ebp
  41b8e6:	mov    al,BYTE PTR [eax-0xe2e076b]
  41b8ec:	pop    es
  41b8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ee:	and    DWORD PTR [edx-0x3e],esp
  41b8f1:	or     eax,DWORD PTR [edx+0x4c34f7aa]
  41b8f7:	das    
  41b8f8:	jns    0x41b8d9
  41b8fa:	sbb    eax,0xfe605daa
  41b8ff:	jl     0x41b8ad
  41b901:	adc    ch,BYTE PTR [eax+0x55]
  41b904:	(bad)  
  41b905:	xchg   ecx,eax
  41b906:	mov    esp,0x5556d3a2
  41b90b:	retf   0xf732
  41b90e:	inc    ebx
  41b90f:	aaa    
  41b910:	pop    ebx
  41b911:	lods   eax,DWORD PTR ds:[esi]
  41b912:	add    BYTE PTR [esi+0x4c],0xda
  41b916:	fdivr  st,st(1)
  41b918:	sbb    eax,0xffffffb3
  41b91b:	je     0x41b8c9
  41b91d:	sar    DWORD PTR ss:[ebp*2-0x731fe11a],1
  41b925:	add    ch,ah
  41b927:	cmp    BYTE PTR [edx+0x49addb00],dh
  41b92d:	adc    DWORD PTR [esi-0x8],0xdd040209
  41b934:	or     cl,BYTE PTR [esp+edx*2-0x66ddd178]
  41b93b:	add    al,0xd2
  41b93d:	retf   
  41b93e:	ret    
  41b93f:	ret    0x89fc
  41b942:	in     eax,dx
  41b943:	(bad)  
  41b944:	fwait
  41b945:	lods   al,BYTE PTR ds:[esi]
  41b946:	cmc    
  41b947:	ss loope 0x41b9c4
  41b94a:	inc    esp
  41b94b:	xchg   esp,eax
  41b94c:	int3   
  41b94d:	dec    ecx
  41b94e:	stc    
  41b94f:	add    al,0x2e
  41b951:	cld    
  41b952:	inc    eax
  41b953:	add    DWORD PTR [ebx-0x4c],ecx
  41b956:	test   al,0x50
  41b958:	and    eax,0x1d5190d0
  41b95d:	mov    eax,DWORD PTR [eax+0x3d]
  41b960:	or     DWORD PTR [esi],ecx
  41b962:	adc    DWORD PTR [ecx],0xffffff93
  41b965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b966:	pop    esi
  41b967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b968:	mov    WORD PTR [edx+0x2a],fs
  41b96b:	sub    BYTE PTR [edi-0x55feef8a],bh
  41b971:	sub    al,0x1
  41b973:	cli    
  41b974:	and    al,0x73
  41b976:	loope  0x41b8fa
  41b978:	loop   0x41b9a7
  41b97a:	repz scas al,BYTE PTR es:[edi]
  41b97c:	xchg   edx,eax
  41b97d:	sbb    al,0xf8
  41b97f:	or     edx,DWORD PTR cs:[ebx+0x28]
  41b983:	jge    0x41b94f
  41b985:	clc    
  41b986:	in     eax,0x1e
  41b988:	ret    0xe27e
  41b98b:	data16 xor cl,BYTE PTR [ebp+eax*4-0x390a7a6e]
  41b993:	pop    ecx
  41b994:	fcom   st(5)
  41b996:	pop    esi
  41b997:	scas   eax,DWORD PTR es:[edi]
  41b998:	int    0x19
  41b99a:	fsubp  st(6),st
  41b99c:	add    ch,ah
  41b99e:	mov    ebx,0xc81ae0b6
  41b9a3:	pop    esi
  41b9a4:	(bad)  
  41b9a5:	fild   QWORD PTR [ecx-0x64cfc986]
  41b9ab:	shr    BYTE PTR [esi+ebp*8-0x4e],cl
  41b9af:	lods   al,BYTE PTR ds:[esi]
  41b9b0:	std    
  41b9b1:	dec    ebx
  41b9b2:	mov    eax,ds:0x80229acc
  41b9b7:	scas   eax,DWORD PTR es:[edi]
  41b9b8:	stos   BYTE PTR es:[edi],al
  41b9b9:	lds    edx,FWORD PTR [esi+ebp*1-0x17]
  41b9bd:	and    eax,0x8083f289
  41b9c2:	mov    ebp,0x8b6d0233
  41b9c7:	inc    ebx
  41b9c8:	jmp    0x41ba31
  41b9ca:	std    
  41b9cb:	mov    eax,ds:0xf070ad02
  41b9d0:	jmp    0x41ba10
  41b9d2:	into   
  41b9d3:	sub    DWORD PTR [eax+0x6b],0x55389ca2
  41b9da:	div    DWORD PTR [edx+0x5b]
  41b9dd:	aaa    
  41b9de:	push   esp
  41b9df:	aas    
  41b9e0:	pop    esi
  41b9e1:	movntq QWORD PTR [edi+esi*1+0x5572bbfb],mm7
  41b9e9:	mov    al,BYTE PTR [eax+0x7d894fb7]
  41b9ef:	jl     0x41b9c7
  41b9f1:	xor    edx,ecx
  41b9f3:	femms  
  41b9f5:	ins    BYTE PTR es:[edi],dx
  41b9f6:	jae    0x41b9e2
  41b9f8:	rcl    BYTE PTR [edx-0x11],1
  41b9fb:	and    eax,0xeadfc53a
  41ba00:	jae    0x41ba06
  41ba02:	stc    
  41ba03:	clc    
  41ba04:	mov    esp,0x1aa9da56
  41ba09:	sub    DWORD PTR [ebp+0x3c],esp
  41ba0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba0d:	sbb    al,0x24
  41ba0f:	push   es
  41ba10:	mov    ch,0x83
  41ba12:	xchg   ebx,eax
  41ba13:	adc    BYTE PTR [eax+edi*8+0x33],ah
  41ba17:	lock push ebx
  41ba19:	(bad)  
  41ba1a:	xor    eax,0x7173bd79
  41ba1f:	pop    ss
  41ba20:	sub    ch,BYTE PTR [eax]
  41ba22:	mov    gs,WORD PTR [edi-0x6dd40717]
  41ba28:	jl     0x41b9c6
  41ba2a:	cmc    
  41ba2b:	dec    esi
  41ba2c:	and    BYTE PTR [edi+0x35],0xbb
  41ba30:	or     eax,0x395a141e
  41ba35:	mov    cl,0xf
  41ba37:	in     al,0x68
  41ba39:	mov    eax,0x312f2a8f
  41ba3e:	or     BYTE PTR [esi-0x1357f9d6],bh
  41ba44:	dec    edi
  41ba45:	(bad)  
  41ba46:	(bad)  
  41ba47:	into   
  41ba48:	(bad)  [bp+0x6030]
  41ba4d:	mov    ch,0x16
  41ba4f:	call   0xc75be547
  41ba54:	push   ecx
  41ba55:	add    esi,DWORD PTR [eax]
  41ba57:	xor    eax,0xd3677b94
  41ba5c:	shl    esp,0xb5
  41ba5f:	fld    DWORD PTR ds:0xa03cad44
  41ba65:	mov    es,ebx
  41ba67:	push   0xffffff8d
  41ba69:	call   0x2a2:0x6e4839ef
  41ba70:	sub    ah,ch
  41ba72:	test   al,0x8b
  41ba74:	aaa    
  41ba75:	shl    DWORD PTR [esi+0x22854947],cl
  41ba7b:	sbb    DWORD PTR [ebx+0x13],esp
  41ba7e:	ds test eax,0xd7ac22d5
  41ba84:	xchg   esi,eax
  41ba85:	jbe    0x41ba37
  41ba87:	sbb    al,0x3c
  41ba89:	or     eax,0xb4c69fca
  41ba8e:	jmp    0x8e229ec1
  41ba93:	sub    al,0x4c
  41ba95:	xchg   DWORD PTR [ecx+0x5dda4371],esi
  41ba9b:	xchg   esi,eax
  41ba9c:	bnd jno 0x41ba36
  41ba9f:	loope  0x41ba80
  41baa1:	ins    BYTE PTR es:[edi],dx
  41baa2:	sbb    eax,DWORD PTR [edx-0x4da3b580]
  41baa8:	sti    
  41baa9:	dec    esi
  41baaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baab:	cld    
  41baac:	in     al,0x55
  41baae:	sbb    eax,0xf3ae5ca
  41bab3:	pop    eax
  41bab4:	cmp    eax,0x108bc5db
  41bab9:	or     eax,0xcf47693c
  41babe:	aaa    
  41babf:	call   0xc988:0x60c2490d
  41bac6:	aam    0x4c
  41bac8:	mov    edi,0x27cb5b8f
  41bacd:	int3   
  41bace:	into   
  41bacf:	pop    ebx
  41bad0:	idiv   BYTE PTR [ebx+0x44]
  41bad3:	stos   BYTE PTR es:[edi],al
  41bad4:	inc    edi
  41bad5:	dec    esp
  41bad6:	fdiv   DWORD PTR [edx]
  41bad8:	sbb    al,0x4d
  41bada:	sub    ch,BYTE PTR [ebp+0x1d]
  41badd:	rcl    DWORD PTR [edi],0xad
  41bae0:	cmp    DWORD PTR [edi],0x74
  41bae3:	ds cmp al,0x19
  41bae6:	xor    BYTE PTR [ecx-0x58a59e9a],al
  41baec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baed:	inc    eax
  41baee:	xor    eax,esp
  41baf0:	sbb    cl,BYTE PTR [ecx-0x220eb095]
  41baf6:	aaa    
  41baf7:	push   esi
  41baf8:	push   0x5d73e7ae
  41bafd:	fcomip st,st(5)
  41baff:	ret    0xc97a
  41bb02:	les    esp,FWORD PTR [eax-0xc712fb5]
  41bb08:	push   eax
  41bb09:	mov    ds,WORD PTR [ecx-0x23]
  41bb0c:	push   esi
  41bb0d:	cmp    ah,0x4a
  41bb10:	sub    al,0xa4
  41bb12:	inc    eax
  41bb13:	ret    0xf167
  41bb16:	mov    edx,0xfc8010c6
  41bb1b:	jl     0x41bb96
  41bb1d:	sub    bh,cl
  41bb1f:	add    edi,esp
  41bb21:	adc    ch,BYTE PTR [edx]
  41bb23:	sub    DWORD PTR [edx+0x2f],esi
  41bb26:	xor    DWORD PTR [ecx+0x15],edi
  41bb29:	and    edi,DWORD PTR [edx+ebx*1-0x3f]
  41bb2d:	loopne 0x41badc
  41bb2f:	fs retf 0xe6dd
  41bb33:	or     al,BYTE PTR [edi+0x5]
  41bb36:	pop    ds
  41bb37:	xor    dl,BYTE PTR [edi+0x13]
  41bb3a:	sbb    BYTE PTR [ecx+eax*2+0x74],bl
  41bb3e:	sbb    eax,0x9bb55512
  41bb43:	add    bl,ah
  41bb45:	mov    ebx,0x2d0fd15f
  41bb4a:	scas   al,BYTE PTR es:[edi]
  41bb4b:	(bad)  
  41bb4c:	pop    ebx
  41bb4d:	sbb    dh,BYTE PTR [ebx+esi*8-0x8]
  41bb51:	sbb    DWORD PTR [ebp+esi*1-0x9],eax
  41bb55:	inc    edi
  41bb56:	push   0x3f
  41bb58:	mov    ds:0x339c010c,al
  41bb5d:	and    al,0x79
  41bb5f:	cwde   
  41bb60:	xchg   esp,eax
  41bb61:	icebp  
  41bb62:	mov    bh,0x6e
  41bb64:	and    bl,ch
  41bb66:	iret   
  41bb67:	lea    esi,[edx+0x21]
  41bb6a:	arpl   sp,di
  41bb6c:	lea    eax,[ebx+0x61]
  41bb6f:	mov    bl,0xfe
  41bb71:	das    
  41bb72:	ins    DWORD PTR es:[edi],dx
  41bb73:	pusha  
  41bb74:	jo     0x41bb26
  41bb76:	dec    edx
  41bb77:	lods   eax,DWORD PTR ds:[esi]
  41bb78:	imul   ecx,DWORD PTR [edi+0x52079878],0x5f
  41bb7f:	jmp    0x41bb32
  41bb81:	pop    DWORD PTR [ecx]
  41bb83:	out    0xbc,eax
  41bb85:	sar    BYTE PTR [ebp+0x714fd848],cl
  41bb8b:	jo     0x41bbc3
  41bb8d:	test   BYTE PTR [eax],ah
  41bb8f:	cs mov edi,0xb0993b93
  41bb95:	and    al,0x9a
  41bb97:	mov    BYTE PTR ds:0xb2b1d482,bl
  41bb9d:	mov    ah,0xec
  41bb9f:	xor    al,0xb3
  41bba1:	dec    ebx
  41bba2:	fisubr WORD PTR [eax-0x78e0c613]
  41bba8:	xor    eax,ebp
  41bbaa:	cdq    
  41bbab:	sbb    al,0x61
  41bbad:	sbb    edx,DWORD PTR [ecx-0x61f1c7ab]
  41bbb3:	mov    dh,0xbf
  41bbb5:	call   FWORD PTR [eax]
  41bbb7:	inc    ecx
  41bbb8:	pop    esi
  41bbb9:	cld    
  41bbba:	cmp    al,0xb
  41bbbc:	aam    0xd3
  41bbbe:	xor    dl,ah
  41bbc0:	not    dl
  41bbc2:	fdivr  QWORD PTR [edi+0x2e]
  41bbc5:	call   FWORD PTR [edi+ebp*4]
  41bbc8:	cmp    edx,DWORD PTR [eax-0x7ed23ebf]
  41bbce:	loopne 0x41bc2c
  41bbd0:	cmp    BYTE PTR [esi+0x66],dl
  41bbd3:	and    ecx,edx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	ror    DWORD PTR [ebp+eax*2+0x6a],1
  41bc05:	add    eax,DWORD PTR [ecx+0x12bc1816]
  41bc0b:	sbb    BYTE PTR [eax],bl
  41bc0d:	lahf   
  41bc0e:	or     al,0xbe
  41bc10:	lods   eax,DWORD PTR es:[esi]
  41bc12:	aas    
  41bc13:	ss aad 0x2c
  41bc16:	push   0xffffffe5
  41bc18:	hlt    
  41bc19:	imul   eax,DWORD PTR [ecx-0x62],0xed800d52
  41bc20:	xor    al,dh
  41bc22:	imul   ebx,DWORD PTR [eax+ebp*4-0x2a0233c1],0x43
  41bc2a:	sbb    DWORD PTR [ebx],ebp
  41bc2c:	mov    gs,WORD PTR [eax+0x502b8c2e]
  41bc32:	or     DWORD PTR [eax+0x53],0xfffffff9
  41bc36:	lea    esi,[ecx]
  41bc38:	in     eax,0x48
  41bc3a:	loop   0x41bbc0
  41bc3c:	mov    dh,0x7c
  41bc3e:	mov    ebp,0x7dde6331
  41bc43:	scas   al,BYTE PTR es:[edi]
  41bc44:	jnp    0x41bc43
  41bc46:	pop    ss
  41bc47:	adc    al,0x3
  41bc49:	adc    DWORD PTR [ebx-0x1f2c0e90],eax
  41bc4f:	lahf   
  41bc50:	data16 ins BYTE PTR es:[edi],dx
  41bc52:	sub    BYTE PTR [eax-0x11],0x30
  41bc56:	lea    ebp,[edx]
  41bc58:	mov    edi,0x96efca10
  41bc5d:	jb     0x41bc5b
  41bc5f:	jp     0x41bc74
  41bc61:	(bad)  
  41bc62:	push   0x3
  41bc64:	dec    edx
  41bc65:	rol    DWORD PTR [ebx],0x3a
  41bc68:	rol    edi,cl
  41bc6a:	xor    DWORD PTR [esp-0x1316ddee],esi
  41bc71:	xor    edx,DWORD PTR [edi-0x6128ad08]
  41bc77:	xchg   edi,eax
  41bc78:	scas   eax,DWORD PTR es:[edi]
  41bc79:	jbe    0x41bc46
  41bc7b:	int    0xb7
  41bc7d:	es jg  0x41bc56
  41bc80:	cwde   
  41bc81:	dec    esi
  41bc82:	mov    ebx,0xb4e3f763
  41bc87:	jl     0x41bcc2
  41bc89:	in     eax,dx
  41bc8a:	dec    esi
  41bc8b:	sub    bl,BYTE PTR [ebp+0x14]
  41bc8e:	or     DWORD PTR [esi+0x3c],0xb3854d3
  41bc95:	adc    BYTE PTR [ebp-0x48],0xb1
  41bc99:	ja     0x41bccf
  41bc9b:	inc    eax
  41bc9c:	adc    eax,0xb2cd4ab6
  41bca1:	add    eax,0x79175ef4
  41bca6:	daa    
  41bca7:	nop
  41bca8:	popa   
  41bca9:	inc    edx
  41bcaa:	jae    0x41bd05
  41bcac:	stc    
  41bcad:	dec    ebx
  41bcae:	mov    al,bh
  41bcb0:	lds    ebx,FWORD PTR [ecx]
  41bcb2:	jmp    0xda7c:0xadff76de
  41bcb9:	cs jbe 0x41bc75
  41bcbc:	xchg   edx,eax
  41bcbd:	outs   dx,BYTE PTR ds:[esi]
  41bcbe:	xchg   ebx,eax
  41bcbf:	or     esi,eax
  41bcc1:	out    dx,eax
  41bcc2:	clc    
  41bcc3:	sbb    DWORD PTR [ebp+0xa],0xd85b97d3
  41bcca:	mov    ds:0x865d2253,eax
  41bccf:	jns    0x41bd32
  41bcd1:	mov    ds:0x692bf001,al
  41bcd6:	and    bh,BYTE PTR [ebp-0x6e]
  41bcd9:	mov    ds:0x3d86ee9a,eax
  41bcde:	dec    ebx
  41bcdf:	jb     0x41bc8b
  41bce1:	mov    eax,ds:0xebe6016c
  41bce6:	inc    eax
  41bce7:	cmc    
  41bce8:	sub    DWORD PTR [eax-0x7],0xd2ebe6ec
  41bcef:	xor    al,0xd8
  41bcf1:	cs push ds
  41bcf3:	inc    edi
  41bcf4:	jecxz  0x41bca3
  41bcf6:	cli    
  41bcf7:	jnp    0x41bc98
  41bcf9:	cmp    ah,ah
  41bcfb:	ins    BYTE PTR es:[edi],dx
  41bcfc:	ja     0x41bcb8
  41bcfe:	pop    es
  41bcff:	push   ss
  41bd00:	push   ebp
  41bd01:	(bad)  
  41bd02:	xor    DWORD PTR [eax-0x2b],ecx
  41bd05:	mov    al,0x34
  41bd07:	ficom  DWORD PTR [edi]
  41bd09:	js     0x41bc9f
  41bd0b:	cwde   
  41bd0c:	jnp    0x41bcbd
  41bd0e:	out    0xfc,al
  41bd10:	push   ss
  41bd11:	xchg   edi,eax
  41bd12:	mov    ebp,0xdc3528bd
  41bd17:	xchg   edx,eax
  41bd18:	push   ds
  41bd19:	xchg   BYTE PTR [ebx],dl
  41bd1b:	int3   
  41bd1c:	ins    DWORD PTR es:[edi],dx
  41bd1d:	mov    ch,0x5
  41bd1f:	ret    
  41bd20:	into   
  41bd21:	push   si
  41bd23:	jmp    DWORD PTR [esi]
  41bd25:	mul    al
  41bd27:	pop    ss
  41bd28:	scas   al,BYTE PTR es:[edi]
  41bd29:	pop    esp
  41bd2a:	xchg   edi,eax
  41bd2b:	sbb    cl,BYTE PTR [eax-0x21]
  41bd2e:	cs mov cl,0xf9
  41bd31:	push   0x5f9e5d50
  41bd36:	inc    eax
  41bd37:	jmp    0x41bdb3
  41bd39:	jle    0x41bd57
  41bd3b:	aas    
  41bd3c:	push   eax
  41bd3d:	outs   dx,DWORD PTR ds:[esi]
  41bd3e:	or     al,0xa8
  41bd40:	adc    BYTE PTR [edx+0x75],ch
  41bd43:	mov    ebp,0x27c34b32
  41bd48:	inc    ebx
  41bd49:	ret    
  41bd4a:	mov    WORD PTR [edi-0x27],ss
  41bd4d:	addr16 xor esi,eax
  41bd50:	or     al,0x81
  41bd52:	lahf   
  41bd53:	add    al,0x7a
  41bd55:	pop    esi
  41bd56:	in     eax,dx
  41bd57:	adc    edx,DWORD PTR [ebx+0x69]
  41bd5a:	wrmsr  
  41bd5c:	(bad)
  41bd5f:	mov    dl,dh
  41bd61:	ror    BYTE PTR [eax],0x51
  41bd64:	inc    ebx
  41bd65:	mov    ebx,0x88169015
  41bd6a:	add    edi,esi
  41bd6c:	stc    
  41bd6d:	cld    
  41bd6e:	xchg   ebx,eax
  41bd6f:	push   edi
  41bd70:	adc    ch,BYTE PTR [ebx-0x6e]
  41bd73:	sar    DWORD PTR [edx],cl
  41bd75:	retf   
  41bd76:	(bad)  
  41bd77:	and    DWORD PTR ds:[edx-0x1680a463],0x5e307418
  41bd82:	into   
  41bd83:	fwait
  41bd84:	add    bh,BYTE PTR [ebp-0x19]
  41bd87:	mov    eax,ds:0xef5a9be9
  41bd8c:	dec    eax
  41bd8d:	cmp    eax,0xdc1d4e10
  41bd92:	loop   0x41be0a
  41bd94:	out    0xc1,al
  41bd96:	aad    0x53
  41bd98:	icebp  
  41bd99:	jmp    0x41bd80
  41bd9b:	xchg   ebx,eax
  41bd9c:	adc    ecx,0x59641641
  41bda2:	cld    
  41bda3:	(bad)  
  41bda4:	jle    0x41bd3d
  41bda6:	lock push esi
  41bda8:	sbb    BYTE PTR [edx+0x4a],0x7
  41bdac:	pushf  
  41bdad:	test   ecx,ecx
  41bdaf:	mov    BYTE PTR [ecx+0x4afc6d75],al
  41bdb5:	mov    bl,0x4
  41bdb7:	push   0x1f
  41bdb9:	push   esp
  41bdba:	fsubr  DWORD PTR [eax-0xe6dbc33]
  41bdc0:	or     DWORD PTR [edi],ecx
  41bdc2:	call   0x327e:0xf662b339
  41bdc9:	xor    cl,BYTE PTR [ecx-0x18]
  41bdcc:	jp     0x41be21
  41bdce:	push   eax
  41bdcf:	sar    DWORD PTR [eax-0x4e],1
  41bdd2:	mov    al,ds:0xbb03be78
  41bdd7:	sbb    BYTE PTR [ebp-0x3fe5c8fa],bl
  41bddd:	inc    ebx
  41bdde:	mov    edi,0x46105c8e
  41bde3:	repnz push 0xffffff88
  41bde6:	push   ebp
  41bde7:	xor    eax,0x11ea9fec
  41bdec:	mov    eax,0x42214a30
  41bdf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf2:	int    0x1f
  41bdf4:	push   ds
  41bdf5:	pop    edx
  41bdf6:	js     0x41bdb1
  41bdf8:	cdq    
  41bdf9:	ss inc edx
  41bdfb:	mov    ebx,0x54e3108
  41be00:	jle    0x41bdd0
  41be02:	push   es
  41be03:	stos   BYTE PTR es:[edi],al
  41be04:	bound  esi,QWORD PTR [ecx-0x6]
  41be07:	push   0x5028fce2
  41be0c:	jo     0x41be5b
  41be0e:	mov    ds:0x60ca38e1,eax
  41be13:	adc    ah,BYTE PTR [ebp+0x1361f4c6]
  41be19:	pusha  
  41be1a:	sub    DWORD PTR [ebx-0x63],0xffffffa6
  41be1e:	inc    eax
  41be1f:	retf   
  41be20:	les    esi,FWORD PTR [ecx-0x6b]
  41be23:	sbb    DWORD PTR [ebp-0x7b],esi
  41be26:	jb     0x41be9b
  41be28:	loopne 0x41be7a
  41be2a:	xchg   ecx,eax
  41be2b:	shr    DWORD PTR [esi+0x7e],0x17
  41be2f:	adc    DWORD PTR [esi-0x7c],esp
  41be32:	int    0xbe
  41be34:	or     eax,0x38ee789
  41be39:	add    ch,0x6
  41be3c:	shr    BYTE PTR [edi+0xe45e808],0x22
  41be43:	cmp    ebp,DWORD PTR [ebx]
  41be45:	aas    
  41be46:	pop    ds
  41be47:	sub    ah,BYTE PTR [esi+ebp*8-0x4e]
  41be4b:	das    
  41be4c:	xchg   DWORD PTR [ebx+0x7281642b],ebp
  41be52:	iret   
  41be53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be54:	ss mov ecx,0xaa02d232
  41be5a:	mov    esi,0x105f5027
  41be5f:	cld    
  41be60:	push   ds
  41be61:	ret    0xa44e
  41be64:	fucompp 
  41be66:	and    DWORD PTR [edi+esi*4-0x37],0x7aa8651e
  41be6e:	dec    esp
  41be6f:	mov    bl,0xec
  41be71:	out    dx,eax
  41be72:	cmp    DWORD PTR [edi+0x27],eax
  41be75:	loop   0x41be18
  41be77:	mov    eax,0xc61a20c9
  41be7c:	pop    esp
  41be7d:	addr16 dec edx
  41be7f:	pushf  
  41be80:	sbb    BYTE PTR [edi+0x675b8945],ch
  41be86:	dec    eax
  41be87:	and    edi,DWORD PTR [esi+0x455dc2d6]
  41be8d:	ror    DWORD PTR [ebx+0x6b],cl
  41be90:	push   es
  41be91:	ret    
  41be92:	xchg   ebx,eax
  41be93:	sub    ch,BYTE PTR [edi+0x1f597b54]
  41be99:	(bad)
  41be9d:	pop    esi
  41be9e:	(bad)  
  41be9f:	jnp    0x41be53
  41bea1:	xchg   DWORD PTR [esi+edx*4+0x12],eax
  41bea5:	out    0x2e,eax
  41bea7:	cmp    ecx,ebp
  41bea9:	rcl    BYTE PTR [ebp+edi*8+0x53],cl
  41bead:	mov    ah,BYTE PTR ds:0x84bf7264
  41beb3:	jae    0x41bec1
  41beb5:	es adc al,0x98
  41beb8:	in     eax,dx
  41beb9:	cwde   
  41beba:	adc    dl,dh
  41bebc:	sbb    ah,BYTE PTR [ecx]
  41bebe:	xor    DWORD PTR [eax],eax
  41bec0:	cmp    al,0x9
  41bec2:	sub    esi,DWORD PTR [ebx+0x20]
  41bec5:	sbb    eax,0x49103708
  41beca:	xchg   ebp,eax
  41becb:	mov    ah,0xa8
  41becd:	jecxz  0x41bf13
  41becf:	push   0x9e998967
  41bed4:	nop
  41bed5:	inc    edi
  41bed6:	sub    ebp,DWORD PTR [edi+ebx*2]
  41bed9:	aas    
  41beda:	dec    ecx
  41bedb:	cs gs fs push ebp
  41bedf:	jg     0x41bf09
  41bee1:	(bad)  
  41bee2:	aam    0x9c
  41bee4:	bound  edx,QWORD PTR ds:0x12caf6ba
  41beea:	sbb    ah,BYTE PTR [ebp+0x69e643d3]
  41bef0:	cmp    ebp,DWORD PTR [eax]
  41bef2:	push   es
  41bef3:	mov    ch,0x84
  41bef5:	add    bh,BYTE PTR [ebp+0x7b2eb5f]
  41befb:	pop    edx
  41befc:	test   ebp,edx
  41befe:	ficomp WORD PTR [eax+ebx*2]
  41bf01:	push   ebx
  41bf02:	sub    al,0x22
  41bf04:	jae    0x41beb7
  41bf06:	xchg   BYTE PTR [ebx+0x6],cl
  41bf09:	in     al,0x0
  41bf0b:	dec    edi
  41bf0c:	scas   eax,DWORD PTR es:[edi]
  41bf0d:	add    DWORD PTR [ecx-0x638773ad],ebp
  41bf13:	inc    edx
  41bf14:	xchg   edx,ebp
  41bf16:	jo     0x41bea4
  41bf18:	pushf  
  41bf19:	xchg   DWORD PTR [edx-0x80],ecx
  41bf1c:	xor    DWORD PTR [ecx],edi
  41bf1e:	lds    edi,FWORD PTR [ecx+0x375e0607]
  41bf24:	jp     0x41bf62
  41bf26:	cmp    BYTE PTR [edi-0x53],dh
  41bf29:	bound  ebp,QWORD PTR [esi+ebx*4-0x7ebeb1a4]
  41bf30:	sbb    DWORD PTR [ecx],ebp
  41bf32:	mov    ecx,0x2dce47a3
  41bf37:	ret    
  41bf38:	cwde   
  41bf39:	sub    ebx,esp
  41bf3b:	mov    dl,0x69
  41bf3d:	pop    ebx
  41bf3e:	call   0x8dd1:0x3c9f092
  41bf45:	jl     0x41bee2
  41bf47:	cmp    eax,DWORD PTR [ebx-0x1b]
  41bf4a:	or     ecx,esi
  41bf4c:	fdivr  DWORD PTR [eax+0x238e280b]
  41bf52:	daa    
  41bf53:	add    DWORD PTR [ecx-0x7],ebx
  41bf56:	xchg   DWORD PTR [ecx],ecx
  41bf58:	pop    esp
  41bf59:	icebp  
  41bf5a:	test   eax,0x756950a
  41bf5f:	mov    bl,0xe3
  41bf61:	xor    ebx,0x55a1d495
  41bf67:	icebp  
  41bf68:	add    BYTE PTR [edx],dh
  41bf6a:	pop    ecx
  41bf6b:	push   esp
  41bf6c:	sub    ecx,DWORD PTR [edi]
  41bf6e:	cmp    al,0x4a
  41bf70:	add    DWORD PTR [ecx],0xffffffc4
  41bf73:	popa   
  41bf74:	mov    al,ds:0x5865c2b3
  41bf79:	jb     0x41bfb5
  41bf7b:	fcomip st,st(0)
  41bf7d:	pusha  
  41bf7e:	jmp    0x286c:0x7efc8fb9
  41bf85:	ja     0x41bf73
  41bf87:	(bad)  
  41bf88:	cmp    al,0x21
  41bf8a:	jae    0x41bfdd
  41bf8c:	jbe    0x41bf17
  41bf8e:	mov    ah,BYTE PTR [edi]
  41bf90:	dec    edx
  41bf91:	add    BYTE PTR [eax],dl
  41bf93:	and    al,0x8b
  41bf95:	inc    ebx
  41bf96:	cmp    al,0x3e
  41bf98:	xor    ah,bl
  41bf9a:	mov    al,ds:0x5b8e1088
  41bf9f:	mov    ?,WORD PTR [ecx-0x4f]
  41bfa2:	loopne 0x41bfc8
  41bfa4:	mov    dh,al
  41bfa6:	stos   DWORD PTR es:[edi],eax
  41bfa7:	(bad)  
  41bfa9:	push   ecx
  41bfaa:	mov    ds:0x3afb0615,al
  41bfaf:	std    
  41bfb0:	pop    edx
  41bfb1:	mov    al,0x85
  41bfb3:	dec    ebx
  41bfb4:	or     DWORD PTR [esi-0x4582aa10],0xb4da0933
  41bfbe:	out    dx,eax
  41bfbf:	mov    ecx,0x57d4
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	or     ah,ch
  41c0f8:	cmp    eax,0x1679a7be
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x2cb81818],bh
  41c104:	pushf  
  41c105:	test   BYTE PTR [ecx+edx*8],0xac
  41c109:	and    ebp,DWORD PTR [edi-0x2a]
  41c10c:	leave  
  41c10d:	pop    eax
  41c10e:	ss std 
  41c110:	push   edx
  41c111:	sahf   
  41c112:	ins    BYTE PTR es:[edi],dx
  41c113:	push   ecx
  41c114:	dec    esp
  41c115:	in     al,dx
  41c116:	(bad)  
  41c117:	cli    
  41c118:	ins    BYTE PTR es:[edi],dx
  41c119:	and    al,0x9d
  41c11b:	push   es
  41c11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c11d:	out    0x7f,eax
  41c11f:	inc    ebp
  41c120:	jge    0x41c14c
  41c122:	push   0xffffff84
  41c124:	lds    eax,FWORD PTR [eax+0x503e87f3]
  41c12a:	cmp    al,0x96
  41c12c:	jnp    0x41c0d7
  41c12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c12f:	mov    ch,BYTE PTR [ecx-0x14]
  41c132:	xchg   ecx,eax
  41c133:	or     bl,0xaf
  41c136:	xor    eax,0x1d22dfa7
  41c13b:	icebp  
  41c13c:	push   ds
  41c13d:	pop    ebx
  41c13e:	aaa    
  41c13f:	mov    ah,0x1a
  41c141:	mov    ebx,0x2d894391
  41c146:	jae    0x41c194
  41c148:	imul   ecx,DWORD PTR [edi+eiz*8],0x265ac1cc
  41c14f:	inc    ebx
  41c150:	inc    ebp
  41c151:	rcr    DWORD PTR [eax-0x52bd132],1
  41c157:	fnsave [eax-0x54]
  41c15a:	pop    ds
  41c15b:	sub    al,0x2a
  41c15d:	fiadd  WORD PTR [edx]
  41c15f:	mov    edx,0x77636766
  41c164:	cmp    bh,BYTE PTR [ecx]
  41c166:	dec    edi
  41c167:	mov    WORD PTR [ebx+0x6f97f7b8],cs
  41c16d:	pop    ss
  41c16e:	test   BYTE PTR ds:0x2b3384f6,ch
  41c174:	sub    edx,eax
  41c176:	in     al,0x8a
  41c178:	xor    eax,0x3b951ad2
  41c17d:	and    DWORD PTR [ebp+0x6c099fcc],ebx
  41c183:	ret    
  41c184:	push   edx
  41c185:	call   esp
  41c187:	sahf   
  41c188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c189:	nop
  41c18a:	(bad)  
  41c18b:	fbstp  TBYTE PTR [ebx]
  41c18d:	jns    0x41c15e
  41c18f:	xchg   BYTE PTR [ebp+edx*4-0x707a16f9],dl
  41c196:	aas    
  41c197:	fdivr  QWORD PTR ss:[esi]
  41c19a:	(bad)  
  41c19b:	popa   
  41c19c:	aam    0x5b
  41c19e:	test   BYTE PTR [ecx-0x40],cl
  41c1a1:	jnp    0x41c204
  41c1a3:	pop    esi
  41c1a4:	sub    DWORD PTR ds:0x9da7911d,0xffffff98
  41c1ab:	ret    0x762c
  41c1ae:	in     al,0x16
  41c1b0:	inc    ebp
  41c1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b2:	push   ecx
  41c1b3:	mov    eax,0x14f984d2
  41c1b8:	and    DWORD PTR [edi],ebp
  41c1ba:	imul   eax,DWORD PTR [edi],0xe5264ebe
  41c1c0:	sub    DWORD PTR [ecx+edx*1-0x27],0x665aa0f5
  41c1c8:	lods   eax,DWORD PTR ds:[esi]
  41c1c9:	arpl   sp,dx
  41c1cb:	lock mov bh,0x45
  41c1ce:	loopne 0x41c22e
  41c1d0:	ins    DWORD PTR es:[edi],dx
  41c1d1:	pop    es
  41c1d2:	cmp    al,0xf9
  41c1d4:	scas   eax,DWORD PTR es:[edi]
  41c1d5:	jns    0x41c225
  41c1d7:	lods   al,BYTE PTR ds:[esi]
  41c1d8:	and    eax,0x22b4b2a8
  41c1dd:	pop    eax
  41c1de:	mov    edi,0x3446d9d2
  41c1e3:	dec    ebp
  41c1e4:	call   0x37d3:0x222c5581
  41c1eb:	clc    
  41c1ec:	pop    esi
  41c1ed:	or     ch,BYTE PTR [edx-0x12]
  41c1f0:	es adc al,0x6
  41c1f3:	add    esi,DWORD PTR [edx]
  41c1f5:	sbb    eax,0xd6fdf877
  41c1fa:	xchg   ebx,eax
  41c1fb:	fs dec edi
  41c1fd:	mov    eax,ds:0x9234bbfa
  41c202:	add    ecx,edi
  41c204:	pop    es
  41c205:	mov    al,0xa3
  41c207:	xor    bh,dl
  41c209:	push   0x7eb62fd5
  41c20e:	and    BYTE PTR [edx-0x81eccde],ch
  41c214:	loopne 0x41c1f5
  41c216:	pop    esi
  41c217:	inc    edx
  41c218:	push   edx
  41c219:	fwait
  41c21a:	rol    BYTE PTR [eax-0x51],0xa5
  41c21e:	mov    ebp,0x7ca9ea26
  41c223:	aas    
  41c224:	shr    BYTE PTR [ebp+ebx*1+0x2c],0x6a
  41c229:	jne    0x41c298
  41c22b:	aaa    
  41c22c:	(bad)  
  41c22d:	dec    esp
  41c22e:	add    eax,0x8ab8ce16
  41c233:	xchg   BYTE PTR [edx+0x5b76f7a7],bh
  41c239:	jno    0x41c20d
  41c23b:	inc    esp
  41c23c:	test   DWORD PTR [edi],0xef31831
  41c242:	ja     0x41c26e
  41c244:	js     0x41c228
  41c246:	mov    bh,0x44
  41c248:	pop    eax
  41c249:	add    DWORD PTR [ebx+edi*8],ebx
  41c24c:	mov    esp,0x4fc99183
  41c251:	jb     0x41c23d
  41c253:	out    dx,eax
  41c254:	inc    esi
  41c255:	stos   BYTE PTR es:[edi],al
  41c256:	aam    0x1b
  41c258:	dec    ecx
  41c259:	jne    0x41c24c
  41c25b:	jb     0x41c226
  41c25d:	cmp    dl,dh
  41c25f:	xchg   edx,eax
  41c260:	xchg   DWORD PTR [edi*4-0x59dbab43],esp
  41c267:	dec    edi
  41c268:	loope  0x41c2e2
  41c26a:	hlt    
  41c26b:	aam    0x9e
  41c26d:	jg     0x41c294
  41c26f:	fstp   TBYTE PTR ds:0x26c0a0be
  41c275:	and    esi,DWORD PTR [ebx]
  41c277:	neg    BYTE PTR [edi+0x5fa6d04e]
  41c27d:	(bad)  
  41c27e:	repz leave 
  41c280:	sub    BYTE PTR [ecx+0x59f7265],al
  41c286:	jb     0x41c293
  41c288:	mov    ecx,0x5cabe96b
  41c28d:	mov    edi,0x87d4cea0
  41c292:	shr    DWORD PTR [edi-0x2f],0x50
  41c296:	mov    eax,ds:0xca37f519
  41c29b:	mov    eax,ds:0x65b7bb80
  41c2a0:	sbb    DWORD PTR [eax],esp
  41c2a2:	lds    esp,FWORD PTR [edi-0x17574a2f]
  41c2a8:	pop    ss
  41c2a9:	pop    edi
  41c2aa:	jno    0x41c327
  41c2ac:	adc    eax,0x2ac644d8
  41c2b1:	push   ecx
  41c2b2:	pushf  
  41c2b3:	or     DWORD PTR [ebx+0x37],eax
  41c2b6:	xlat   BYTE PTR ds:[ebx]
  41c2b7:	fs mov ecx,0x5ebe9779
  41c2bd:	xchg   BYTE PTR [edi],dl
  41c2bf:	push   0x8cc321b5
  41c2c4:	xchg   ebp,eax
  41c2c5:	stos   BYTE PTR es:[edi],al
  41c2c6:	cmp    BYTE PTR [edi+0x2e],0xb3
  41c2ca:	in     eax,0x1d
  41c2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2cd:	pop    esp
  41c2ce:	pop    edx
  41c2cf:	mov    ebp,0x33da9b4
  41c2d4:	mov    cl,0x60
  41c2d6:	adc    BYTE PTR [ebx],ah
  41c2d8:	fistp  QWORD PTR [edi-0x58]
  41c2db:	push   cs
  41c2dc:	add    al,0xf3
  41c2de:	ret    
  41c2df:	mov    ?,WORD PTR [ecx-0x3c]
  41c2e2:	fwait
  41c2e3:	test   al,0xe5
  41c2e5:	lock adc dh,BYTE PTR [esi+0x5f]
  41c2e9:	xchg   ecx,eax
  41c2ea:	test   eax,0x904fa78a
  41c2ef:	mov    dh,bl
  41c2f1:	sbb    ebp,DWORD PTR [ebp-0xf6f34f2]
  41c2f7:	push   ebx
  41c2f8:	inc    ebx
  41c2f9:	retf   
  41c2fa:	es and edi,ecx
  41c2fd:	mov    ebx,0x61045ca6
  41c302:	(bad)  
  41c303:	enter  0x5221,0x5a
  41c307:	xlat   BYTE PTR ds:[ebx]
  41c308:	mov    ecx,0x8414b653
  41c30d:	imul   ebp,DWORD PTR [ecx],0xffffff9d
  41c310:	sub    ecx,DWORD PTR [edx+0x59]
  41c313:	rep movs DWORD PTR es:[di],DWORD PTR ds:[si]
  41c316:	add    DWORD PTR [ebx+0x53],edx
  41c319:	mov    bh,0xa9
  41c31b:	cmp    eax,0xcad675a2
  41c320:	or     edi,DWORD PTR [ebx]
  41c322:	int    0x75
  41c324:	call   0x1495404f
  41c329:	je     0x41c359
  41c32b:	xchg   ebp,eax
  41c32c:	rol    BYTE PTR [edi-0x139ea600],cl
  41c332:	cmp    bl,bl
  41c334:	mov    ds:0xe9765374,eax
  41c339:	adc    dl,0x3c
  41c33c:	inc    esi
  41c33d:	lahf   
  41c33e:	(bad)  
  41c33f:	ss pop ebx
  41c341:	pop    eax
  41c342:	pop    eax
  41c343:	and    al,0x96
  41c345:	ds scas al,BYTE PTR es:[edi]
  41c347:	int    0x30
  41c349:	sahf   
  41c34a:	mov    ch,0x17
  41c34c:	ins    DWORD PTR es:[edi],dx
  41c34d:	cli    
  41c34e:	push   cs
  41c34f:	xchg   ecx,eax
  41c350:	mov    ecx,0x2c09a763
  41c355:	add    esi,0x257f9ac3
  41c35b:	sub    bh,0xcf
  41c35e:	jno    0x41c38f
  41c360:	cmp    eax,0x90d3e4b7
  41c365:	pop    esp
  41c366:	cmp    BYTE PTR [ebp+0x36],bh
  41c369:	xlat   BYTE PTR ds:[ebx]
  41c36a:	inc    esi
  41c36b:	retf   
  41c36c:	xor    eax,0x6c3d7a6c
  41c371:	push   edx
  41c372:	push   cs
  41c373:	pop    es
  41c374:	outs   dx,BYTE PTR fs:[esi]
  41c376:	push   ss
  41c377:	xchg   edx,eax
  41c378:	jmp    0xc32dd0e8
  41c37d:	test   DWORD PTR [ecx],ebx
  41c37f:	jnp    0x41c38f
  41c381:	loop   0x41c325
  41c383:	lea    edx,[edx-0x7c]
  41c386:	(bad)  
  41c387:	pop    edx
  41c388:	mov    dh,0x40
  41c38a:	repz sbb ch,BYTE PTR [eax+ecx*4-0x347ee910]
  41c392:	adc    eax,0xa3cb9b2e
  41c397:	inc    ebp
  41c398:	lds    esp,FWORD PTR [ecx]
  41c39a:	fisub  WORD PTR [ebx]
  41c39c:	push   esp
  41c39d:	push   ecx
  41c39e:	ficomp DWORD PTR [ecx]
  41c3a0:	ldmxcsr DWORD PTR [ebx-0x6c]
  41c3a4:	inc    esi
  41c3a5:	xor    al,0xf0
  41c3a7:	mov    ah,0xa1
  41c3a9:	arpl   WORD PTR [ebx-0x7b],di
  41c3ac:	push   ss
  41c3ad:	dec    esi
  41c3ae:	ret    
  41c3af:	cmp    al,0xae
  41c3b1:	imul   ebx,ecx,0x42
  41c3b4:	iret   
  41c3b5:	dec    edi
  41c3b6:	aas    
  41c3b7:	in     al,dx
  41c3b8:	pop    es
  41c3b9:	inc    edx
  41c3ba:	bnd jae 0x41c403
  41c3bd:	lock imul eax,DWORD PTR [ebp-0x4c],0xffffffe1
  41c3c2:	loop   0x41c3bd
  41c3c4:	fiadd  DWORD PTR [eax-0x76647739]
  41c3ca:	jnp    0x41c408
  41c3cc:	adc    BYTE PTR [edx],0x83
  41c3cf:	jp     0x41c377
  41c3d1:	sar    BYTE PTR [ecx],cl
  41c3d3:	sbb    BYTE PTR [edi],ah
  41c3d5:	or     esp,edi
  41c3d7:	mov    ebp,ds
  41c3d9:	(bad)  
  41c3da:	dec    eax
  41c3db:	sub    ebp,esi
  41c3dd:	jnp    0x41c42b
  41c3df:	xchg   esp,eax
  41c3e0:	lds    ebx,FWORD PTR [esi]
  41c3e2:	(bad)  
  41c3e3:	cmp    ah,BYTE PTR [esi-0x36]
  41c3e6:	mov    ah,0x89
  41c3e8:	std    
  41c3e9:	mov    bl,0xae
  41c3eb:	call   0x1ccd:0xa43b125a
  41c3f2:	mov    ah,0xd9
  41c3f4:	repz sbb eax,0x1efd5c89
  41c3fa:	cld    
  41c3fb:	mov    eax,ds:0x2cf960a5
  41c400:	sub    dh,BYTE PTR [eax+ecx*1+0x41b7d2fd]
  41c407:	sub    eax,DWORD PTR [esi]
  41c409:	sbb    BYTE PTR [ebp+0x4676a3fa],0x6e
  41c410:	pop    edx
  41c411:	fidiv  WORD PTR [ecx]
  41c413:	inc    esi
  41c414:	sub    esp,DWORD PTR [esi-0x2f]
  41c417:	mov    bh,0x4b
  41c419:	pop    ebx
  41c41a:	jg     0x41c3b3
  41c41c:	push   ss
  41c41d:	das    
  41c41e:	pop    ebx
  41c41f:	add    bl,bh
  41c421:	(bad)  [ebp-0x60393d7c]
  41c427:	call   0xb64f9375
  41c42c:	aam    0xd1
  41c42e:	jb     0x41c3f9
  41c430:	test   al,0x1d
  41c432:	loop   0x41c480
  41c434:	dec    bx
  41c436:	(bad)  
  41c437:	cdq    
  41c438:	fs cdq 
  41c43a:	add    al,0x31
  41c43d:	dec    edx
  41c43e:	(bad)  
  41c43f:	arpl   WORD PTR ds:0x3464d0d0,si
  41c445:	sub    DWORD PTR [esi],edi
  41c447:	adc    esi,esi
  41c449:	clc    
  41c44a:	mov    edi,0x943d4cb
  41c44f:	cmp    DWORD PTR [esi+0x6f6f7bc6],edx
  41c455:	das    
  41c456:	push   ss
  41c457:	xchg   edx,eax
  41c458:	sbb    al,0x2
  41c45a:	cli    
  41c45b:	pop    esi
  41c45c:	test   DWORD PTR [esi+ebp*8+0x78],eax
  41c460:	push   ss
  41c461:	adc    BYTE PTR [ecx+0x32ff8bb9],cl
  41c467:	push   ss
  41c468:	pop    ecx
  41c469:	sti    
  41c46a:	jecxz  0x41c43b
  41c46c:	or     eax,0x9cfb6dae
  41c471:	jle    0x41c49f
  41c473:	scas   eax,DWORD PTR es:[edi]
  41c474:	imul   ebp,DWORD PTR [ebx],0x86e43917
  41c47a:	lea    ebp,[edx]
  41c47c:	mov    DWORD PTR es:[ecx-0x45],0xa2826f5
  41c484:	mov    fs,WORD PTR [eax-0x53]
  41c487:	jmp    0x41c4ac
  41c489:	adc    ebp,DWORD PTR [ecx+esi*1+0x51fc3125]
  41c490:	dec    esp
  41c491:	push   ds
  41c492:	repz mov ebx,DWORD PTR [ecx-0x5b]
  41c496:	in     al,0x50
  41c498:	in     al,dx
  41c499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c49a:	mov    ecx,0xf04f4165
  41c49f:	lods   eax,DWORD PTR ds:[esi]
  41c4a0:	inc    ecx
  41c4a1:	repnz push 0x2e988806
  41c4a7:	fnstcw WORD PTR [esi+0x66]
  41c4aa:	mov    DWORD PTR [edx+0x65],esp
  41c4ad:	sub    eax,0x9436da31
  41c4b2:	jb     0x41c448
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4ac
  41c4cb:	test   DWORD PTR [edi+0x16734abc],edx
  41c4d1:	sbb    BYTE PTR [edx+edx*1-0x539fe7e8],bh
  41c4d8:	adc    bl,bh
  41c4da:	push   eax
  41c4db:	je     0x41c49a
  41c4dd:	aas    
  41c4de:	nop
  41c4df:	retf   
  41c4e0:	call   0x67fc949f
  41c4e5:	mov    ds:0xa02b6c03,eax
  41c4ea:	test   al,0x3b
  41c4ec:	jge    0x41c470
  41c4ee:	push   ss
  41c4ef:	adc    BYTE PTR [eax],0x33
  41c4f2:	icebp  
  41c4f3:	lahf   
  41c4f4:	aas    
  41c4f5:	sub    DWORD PTR [edi+0x5d],ebp
  41c4f8:	push   eax
  41c4f9:	aaa    
  41c4fa:	ret    
  41c4fb:	mov    eax,ds:0x7be985c7
  41c500:	sub    al,0xf4
  41c502:	(bad)  [ebx+ebp*2-0x531dc6d1]
  41c509:	repnz fs sbb bh,0x9a
  41c50e:	hlt    
  41c50f:	push   esi
  41c510:	in     eax,0x18
  41c512:	mov    ebp,0xa59c0570
  41c517:	sbb    eax,0x2863822c
  41c51c:	loopne 0x41c571
  41c51e:	pushf  
  41c51f:	inc    ebp
  41c520:	xor    BYTE PTR [esi-0x22a30e25],ah
  41c526:	mov    ah,BYTE PTR [edi]
  41c528:	fimul  WORD PTR [edx+0x457b4f1e]
  41c52e:	(bad)  
  41c52f:	or     DWORD PTR [eax-0x6f92d1f6],ebx
  41c535:	cmp    DWORD PTR [ebp+edi*1-0x2a],esi
  41c539:	pop    esp
  41c53a:	div    BYTE PTR [edx]
  41c53c:	mov    dl,0x16
  41c53e:	or     BYTE PTR [edi],ah
  41c540:	mov    eax,0xe5652fd1
  41c545:	jge    0x41c52c
  41c547:	dec    ebp
  41c548:	sbb    DWORD PTR ds:0x67c74dc5,esi
  41c54e:	cld    
  41c54f:	push   edi
  41c550:	mov    edx,0x51690560
  41c555:	inc    eax
  41c556:	push   edi
  41c557:	xchg   ebp,eax
  41c558:	pop    edx
  41c559:	jl     0x41c5d7
  41c55b:	push   0x2f
  41c55d:	les    esp,FWORD PTR [ebp-0x2b3c3c80]
  41c563:	cdq    
  41c564:	popa   
  41c565:	adc    DWORD PTR [ebx-0x2b],esp
  41c568:	push   ebp
  41c569:	enter  0xff43,0x7b
  41c56d:	(bad)  
  41c56f:	inc    ecx
  41c570:	nop
  41c571:	call   0xa7f5:0xf02f860b
  41c578:	mov    eax,ds:0x55faa96
  41c57d:	pop    ecx
  41c57e:	loop   0x41c53f
  41c580:	xor    DWORD PTR [edi+0x47],ebp
  41c583:	iret   
  41c584:	cmp    dl,ch
  41c586:	mov    dl,0xc4
  41c588:	sahf   
  41c589:	cmp    DWORD PTR ds:0x75dc1607,eax
  41c58f:	fstp   TBYTE PTR [edi+0x30]
  41c592:	repz sbb eax,0xd81f4b8d
  41c598:	inc    ecx
  41c599:	leave  
  41c59a:	sahf   
  41c59b:	and    DWORD PTR [ecx],esp
  41c59d:	mov    edx,0xb123679b
  41c5a2:	ret    0x282d
  41c5a5:	or     eax,0xcf710be6
  41c5aa:	lods   al,BYTE PTR ds:[esi]
  41c5ab:	inc    ebp
  41c5ac:	push   ss
  41c5ad:	inc    edx
  41c5ae:	jp     0x41c562
  41c5b0:	fistp  WORD PTR [ebx-0x62ba84e6]
  41c5b6:	mov    edx,0xabbe5ded
  41c5bb:	and    cl,BYTE PTR [edi+0x642939cb]
  41c5c1:	lods   al,BYTE PTR ds:[esi]
  41c5c2:	push   esp
  41c5c3:	xchg   ebx,eax
  41c5c4:	sub    al,bl
  41c5c6:	mov    ebx,0x9cf4de4d
  41c5cb:	jmp    0x6a6b7b7c
  41c5d0:	fwait
  41c5d1:	push   0x76b90849
  41c5d6:	sub    BYTE PTR [ebx-0x52],0xb9
  41c5da:	sbb    ecx,edi
  41c5dc:	outs   dx,DWORD PTR ds:[esi]
  41c5dd:	dec    esp
  41c5de:	sbb    DWORD PTR [ebp-0x49],eax
  41c5e1:	and    eax,0x6e73c332
  41c5e6:	mov    eax,ds:0xbde8e7ec
  41c5eb:	repnz lahf 
  41c5ed:	in     al,dx
  41c5ee:	dec    eax
  41c5ef:	xor    eax,0x24c70ca6
  41c5f4:	mov    eax,0xd4e6b86f
  41c5f9:	fisubr WORD PTR [ebx-0xe47c5e3]
  41c5ff:	outs   dx,DWORD PTR gs:[esi]
  41c601:	(bad)  
  41c602:	pusha  
  41c603:	sub    eax,0x19462752
  41c608:	(bad)  
  41c609:	arpl   WORD PTR [eax+ebp*2+0x6],cx
  41c60d:	adc    eax,0xdeb70e37
  41c612:	aam    0x15
  41c614:	mov    edx,0xe45838d7
  41c619:	pop    ss
  41c61a:	adc    al,bh
  41c61c:	push   eax
  41c61d:	dec    esi
  41c61e:	retf   
  41c61f:	push   edi
  41c620:	fs xchg ecx,eax
  41c622:	pushf  
  41c623:	lock xor BYTE PTR [ebx],dl
  41c626:	or     al,0xb3
  41c628:	shr    edx,cl
  41c62a:	nop
  41c62b:	gs ds repnz ins BYTE PTR es:[edi],dx
  41c62f:	mov    ds:0xd358fbd8,eax
  41c634:	push   es
  41c635:	mov    ebx,0xc35cf28f
  41c63a:	cdq    
  41c63b:	add    BYTE PTR [ebp+esi*2+0x26ce7d6e],dl
  41c642:	and    BYTE PTR [esi+0x24171366],ah
  41c648:	imul   BYTE PTR [esi-0x64]
  41c64b:	cmp    eax,0xaff32895
  41c650:	call   0x65ab7a16
  41c655:	retf   0x6903
  41c658:	es mov bl,0xde
  41c65b:	call   0x6302a846
  41c660:	fs push esp
  41c662:	nop
  41c663:	jb     0x41c6a7
  41c665:	shr    DWORD PTR [ecx],cl
  41c667:	outs   dx,DWORD PTR ds:[esi]
  41c668:	jb     0x41c6e3
  41c66a:	(bad)  
  41c66b:	or     esi,0xffffff99
  41c66e:	pop    ds
  41c66f:	fxch   st(4)
  41c671:	jge    0x41c6a5
  41c673:	sub    BYTE PTR [eax+0x13],0xba
  41c677:	lods   al,BYTE PTR ds:[esi]
  41c678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c679:	js     0x41c6e4
  41c67b:	inc    edi
  41c67c:	fidiv  DWORD PTR [esi+eax*1+0x59fc57f]
  41c683:	retf   0xec0c
  41c686:	and    al,0x16
  41c688:	adc    al,0xa4
  41c68a:	aad    0x60
  41c68c:	adc    edi,DWORD PTR [eax-0x1b]
  41c68f:	sbb    ebp,DWORD PTR [ebx+0x38874887]
  41c695:	push   0x68ae96c6
  41c69a:	adc    cl,BYTE PTR [edx+0x1]
  41c69d:	adc    ebp,DWORD PTR [esi]
  41c69f:	or     BYTE PTR [eax],bl
  41c6a1:	fisttp QWORD PTR [ecx]
  41c6a3:	mov    al,ds:0xaa282d9d
  41c6a8:	adc    al,0x83
  41c6aa:	sub    eax,0xa9b31dd5
  41c6af:	sbb    al,0xd3
  41c6b1:	mov    ah,0xe8
  41c6b3:	(bad)  
  41c6b5:	pushf  
  41c6b6:	or     DWORD PTR [ebx-0x7c3c5317],0x1b5d7549
  41c6c0:	das    
  41c6c1:	ror    BYTE PTR [esi+0x74],1
  41c6c4:	adc    dl,dh
  41c6c6:	arpl   dx,bx
  41c6c8:	and    eax,DWORD PTR [edx-0x3c]
  41c6cb:	mov    bl,0x7f
  41c6cd:	pop    es
  41c6ce:	test   eax,0x10496189
  41c6d3:	(bad)  
  41c6d4:	ror    BYTE PTR [ebx+0x19],cl
  41c6d7:	and    al,0x81
  41c6d9:	fs (bad) 
  41c6db:	fidivr DWORD PTR [esi-0x4c]
  41c6de:	adc    eax,0xd588611f
  41c6e3:	xchg   ecx,eax
  41c6e4:	mov    ds:0x28c36e0c,al
  41c6e9:	dec    edx
  41c6ea:	aas    
  41c6eb:	leave  
  41c6ec:	lods   al,BYTE PTR ds:[esi]
  41c6ed:	test   eax,0x27d43453
  41c6f2:	dec    edx
  41c6f3:	xor    dh,BYTE PTR [edi+esi*4]
  41c6f6:	pop    esp
  41c6f7:	int    0x11
  41c6f9:	mov    ds:0x8bff1095,al
  41c6fe:	cmp    DWORD PTR [ecx],0xffffff8b
  41c701:	hlt    
  41c702:	aam    0x7d
  41c704:	push   0x4
  41c706:	fs out 0x64,al
  41c709:	mov    eax,ds:0x65f3af8f
  41c70e:	lock mov esi,0xad8eb004
  41c714:	lods   eax,DWORD PTR ds:[esi]
  41c715:	jne    0x41c76d
  41c717:	adc    eax,0x828aea07
  41c71c:	pop    ss
  41c71d:	fild   QWORD PTR [ecx+0x5550e314]
  41c723:	lock add al,0x49
  41c726:	or     al,BYTE PTR [eax+0x18]
  41c729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c72a:	sbb    ah,dl
  41c72c:	loope  0x41c71b
  41c72e:	aad    0xf9
  41c730:	leave  
  41c731:	mov    dl,0xf5
  41c733:	aam    0x6e
  41c735:	mul    ebp
  41c737:	aaa    
  41c738:	inc    ebp
  41c739:	cli    
  41c73a:	add    BYTE PTR [ebp-0x19186595],0xbc
  41c741:	mov    DWORD PTR [ecx],eax
  41c743:	ret    0x4b38
  41c746:	(bad)  [edx+esi*8-0x8]
  41c74a:	addr16 add al,0x6b
  41c74d:	ror    eax,1
  41c74f:	pop    es
  41c750:	lahf   
  41c751:	mov    ebx,0xc0c7e659
  41c756:	sti    
  41c757:	cld    
  41c758:	fisttp DWORD PTR [ebx]
  41c75a:	fbld   TBYTE PTR [edx-0x5d0a979c]
  41c760:	inc    esi
  41c761:	mov    cl,ch
  41c763:	fisttp QWORD PTR [edx+0x5a0ddd10]
  41c769:	test   DWORD PTR [edx-0x62],edx
  41c76c:	ds adc eax,0x956f181
  41c772:	stos   DWORD PTR es:[edi],eax
  41c773:	or     BYTE PTR [edi+0x5f],ah
  41c776:	adc    dh,BYTE PTR [edx+0x385d5bc8]
  41c77c:	mov    eax,0x66c14a71
  41c781:	js     0x41c7b2
  41c783:	xchg   edi,eax
  41c784:	push   ecx
  41c785:	dec    eax
  41c786:	setb   BYTE PTR [edi]
  41c789:	iret   
  41c78a:	lods   al,BYTE PTR ds:[esi]
  41c78b:	xchg   ebp,eax
  41c78c:	sub    ch,BYTE PTR [ebx+0xe68352b]
  41c792:	xchg   DWORD PTR [esp+edi*1],eax
  41c795:	sar    esi,0xd7
  41c798:	adc    DWORD PTR [edi-0x13],edi
  41c79b:	lahf   
  41c79c:	jp     0x41c7bd
  41c79e:	push   ebp
  41c79f:	adc    edx,DWORD PTR es:[ecx]
  41c7a2:	addr16 ss pop edx
  41c7a5:	mov    bl,0xcb
  41c7a7:	pusha  
  41c7a8:	add    edx,esp
  41c7aa:	and    ebx,edi
  41c7ac:	cld    
  41c7ad:	jmp    DWORD PTR [esp+eax*4-0x6f66f1c4]
  41c7b4:	cdq    
  41c7b5:	cmp    edi,edx
  41c7b7:	mov    BYTE PTR [esi-0x5a76436d],dh
  41c7bd:	inc    edi
  41c7be:	push   cs
  41c7bf:	or     DWORD PTR [edi+ebx*2-0x37bdc7ed],0xfffffffd
  41c7c7:	jg     0x41c822
  41c7c9:	add    BYTE PTR ds:0xaa6612cd,ah
  41c7cf:	imul   edx,ecx,0xc96c9fc
  41c7d5:	mov    ebx,0xa3337e84
  41c7da:	int    0xa2
  41c7dc:	sub    DWORD PTR [esi-0x1116f678],eax
  41c7e2:	mov    gs,ebx
  41c7e4:	test   BYTE PTR [ebp-0x57],cl
  41c7e7:	jns    0x41c784
  41c7e9:	xor    al,0xef
  41c7eb:	cli    
  41c7ec:	mov    DWORD PTR [esi-0x3741223d],edi
  41c7f2:	int    0xd4
  41c7f4:	std    
  41c7f5:	js     0x41c78a
  41c7f7:	aad    0x5f
  41c7f9:	sbb    dl,cl
  41c7fb:	int3   
  41c7fc:	jo     0x41c81b
  41c7fe:	inc    eax
  41c7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c800:	ror    BYTE PTR [esi+0x18],0xb9
  41c804:	fdivr  st,st(4)
  41c806:	mov    al,ds:0x91fba87c
  41c80b:	add    DWORD PTR [esi],esp
  41c80d:	pop    edi
  41c80e:	jecxz  0x41c830
  41c810:	push   ebx
  41c811:	mov    ds:0x6799edbc,eax
  41c816:	adc    eax,0xaca9b3de
  41c81b:	in     al,dx
  41c81c:	pop    eax
  41c81d:	jp     0x41c87b
  41c81f:	jge    0x41c817
  41c821:	fisttp WORD PTR [edx+esi*1+0x2d94c1e3]
  41c828:	sbb    eax,0x72fb9740
  41c82d:	add    esp,0xffffffd0
  41c830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c831:	stc    
  41c832:	and    eax,0x80f3bf9a
  41c837:	add    eax,esi
  41c839:	pop    ecx
  41c83a:	push   eax
  41c83b:	mov    bh,0xe4
  41c83d:	sub    BYTE PTR [esi],ah
  41c83f:	fisub  DWORD PTR [ebx+0x12]
  41c842:	ss jg  0x41c896
  41c845:	scas   eax,DWORD PTR es:[edi]
  41c846:	call   0x35a6:0xe7519479
  41c84d:	xchg   edi,eax
  41c84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c84f:	jmp    ecx
  41c851:	sbb    bl,BYTE PTR [edx-0x2120e0e3]
  41c857:	pop    ebx
  41c858:	pushf  
  41c859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85a:	(bad)  
  41c85b:	(bad)  
  41c85d:	fcmovb st,st(0)
  41c85f:	mov    dh,ah
  41c861:	ds mov ss,eax
  41c864:	pop    ecx
  41c865:	(bad)  
  41c866:	arpl   cx,si
  41c868:	and    cl,BYTE PTR [ebp+0x0]
  41c86b:	pop    esi
  41c86c:	sbb    DWORD PTR [ebx],edi
  41c86e:	(bad)  
  41c870:	dec    ecx
  41c871:	mov    ds:0x82bb032f,eax
  41c876:	sbb    DWORD PTR [eax-0x6bea00f6],ebx
  41c87c:	mov    eax,0xfa86990c
  41c881:	cmp    bh,ch
  41c883:	imul   ebx,DWORD PTR [edi],0xffb4e3ef
  41c889:	je     0x41c8af
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	loop   0x41c95b
  41c93d:	pop    ebp
  41c93e:	jo     0x41c92f
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0x96181812
  41c948:	dec    ecx
  41c949:	pop    ds
  41c94a:	cs jg  0x41c957
  41c94d:	sbb    al,BYTE PTR [edi]
  41c94f:	outs   dx,DWORD PTR ds:[esi]
  41c950:	add    eax,DWORD PTR ss:[ebx]
  41c953:	jp     0x41c910
  41c955:	push   esi
  41c956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c957:	mov    esi,0x48fbf875
  41c95c:	loop   0x41c9cc
  41c95e:	jg     0x41c98c
  41c960:	xchg   esp,eax
  41c961:	fild   WORD PTR [edi]
  41c963:	sysret 
  41c965:	fld    QWORD PTR [ebx]
  41c967:	inc    edx
  41c968:	loopne 0x41c9a6
  41c96a:	push   edi
  41c96b:	scas   al,BYTE PTR es:[edi]
  41c96c:	out    0xac,al
  41c96e:	cmc    
  41c96f:	outs   dx,BYTE PTR ds:[esi]
  41c970:	icebp  
  41c971:	push   esi
  41c972:	lock push ebp
  41c974:	mov    edi,0xccbabbfb
  41c979:	xor    ebp,DWORD PTR [edx-0x92e4d47]
  41c97f:	pop    ecx
  41c980:	or     DWORD PTR [ebx],0xffffffa0
  41c983:	in     eax,0x52
  41c985:	cmp    BYTE PTR ds:0x1fe1dbf1,cl
  41c98b:	sbb    ah,cl
  41c98d:	pushf  
  41c98e:	call   0x4b7f:0xe739a87
  41c995:	mov    bh,0x39
  41c997:	xor    al,BYTE PTR [esi+0x10172de0]
  41c99d:	stos   BYTE PTR es:[edi],al
  41c99e:	dec    eax
  41c99f:	(bad)  
  41c9a0:	lods   eax,DWORD PTR ds:[esi]
  41c9a1:	je     0x41c954
  41c9a3:	xchg   ecx,eax
  41c9a4:	xor    DWORD PTR [edx],ebx
  41c9a6:	fnstcw WORD PTR [esi+0x1681beca]
  41c9ac:	inc    ebx
  41c9ad:	sbb    al,0x1d
  41c9af:	dec    ebp
  41c9b0:	push   ebx
  41c9b1:	mov    cl,0x2a
  41c9b3:	fs sti 
  41c9b5:	cmp    cl,0xb5
  41c9b8:	pusha  
  41c9b9:	mov    DWORD PTR [esi-0x57958a3b],esp
  41c9bf:	mov    WORD PTR [eax-0x1c],ss
  41c9c2:	daa    
  41c9c3:	xchg   esi,eax
  41c9c4:	xor    esi,eax
  41c9c6:	pop    edx
  41c9c7:	xchg   ecx,eax
  41c9c8:	(bad)  
  41c9c9:	int    0xa1
  41c9cb:	mov    ebp,0x45a139ca
  41c9d0:	or     dl,al
  41c9d2:	fprem  
  41c9d4:	xlat   BYTE PTR ds:[ebx]
  41c9d5:	je     0x41ca4e
  41c9d7:	dec    ebp
  41c9d8:	push   eax
  41c9d9:	mov    WORD PTR [ecx-0x1ea50e75],ds
  41c9df:	lock mov esi,0x8e6d475
  41c9e5:	sub    esi,DWORD PTR [edi+0x77]
  41c9e8:	call   0xef5ccb7f
  41c9ed:	shl    BYTE PTR [edx+0x7a],0x48
  41c9f1:	outs   dx,BYTE PTR ds:[esi]
  41c9f2:	xchg   esi,eax
  41c9f3:	mov    BYTE PTR [esi+0x1debe465],ch
  41c9f9:	fcomp  DWORD PTR [edi+0x69]
  41c9fc:	push   0x76
  41c9fe:	in     al,0x8e
  41ca00:	retf   0xcb2d
  41ca03:	or     eax,0xaf71b500
  41ca08:	es xchg ebp,eax
  41ca0a:	mov    bl,0x76
  41ca0c:	test   BYTE PTR [ecx],al
  41ca0e:	push   ecx
  41ca0f:	adc    eax,0x897044d4
  41ca14:	in     eax,0x3b
  41ca16:	add    eax,0xe1c6023c
  41ca1b:	mov    cl,0x3a
  41ca1d:	and    DWORD PTR ds:0xdbf47daf,edx
  41ca23:	xchg   edx,eax
  41ca24:	in     al,dx
  41ca25:	dec    ebx
  41ca26:	(bad)  
  41ca28:	mov    eax,0x27066a88
  41ca2d:	ins    BYTE PTR es:[edi],dx
  41ca2e:	sbb    al,0xc8
  41ca30:	in     al,dx
  41ca31:	xor    DWORD PTR [edx+ebx*8+0x344a8789],ecx
  41ca38:	xlat   BYTE PTR ds:[ebx]
  41ca39:	xlat   BYTE PTR ds:[ebx]
  41ca3a:	add    ebp,0xa3da3380
  41ca40:	mov    gs,WORD PTR [eax-0x76fec624]
  41ca46:	stc    
  41ca47:	and    dl,BYTE PTR [edi+0x6b758e5c]
  41ca4d:	sar    DWORD PTR [ecx],1
  41ca4f:	adc    DWORD PTR [edi+eax*8-0x15],edi
  41ca53:	loop   0x41ca28
  41ca55:	ins    BYTE PTR es:[edi],dx
  41ca56:	dec    ebp
  41ca57:	add    eax,0xcb5e9376
  41ca5c:	mov    DWORD PTR [edx+0x21],ebp
  41ca5f:	dec    esp
  41ca60:	outs   dx,DWORD PTR ds:[esi]
  41ca61:	dec    edi
  41ca62:	out    0x2c,eax
  41ca64:	int3   
  41ca65:	int3   
  41ca66:	clc    
  41ca67:	pop    esp
  41ca68:	inc    eax
  41ca69:	(bad)  
  41ca6a:	aad    0x1a
  41ca6c:	jno    0x41ca38
  41ca6e:	inc    edx
  41ca6f:	cmp    DWORD PTR [esi+0x70],ecx
  41ca72:	rol    BYTE PTR [esi],cl
  41ca74:	mov    dl,0xf
  41ca76:	add    BYTE PTR [ebp+0x4d1b9444],dh
  41ca7c:	xor    DWORD PTR [ecx+0x7569fb96],0x88987c06
  41ca86:	xor    edi,DWORD PTR [edi]
  41ca88:	xor    eax,0xd8e58b15
  41ca8d:	sbb    eax,0xc80ae3c5
  41ca92:	sub    DWORD PTR [ebx-0x29],esi
  41ca95:	pop    ebp
  41ca96:	icebp  
  41ca97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca98:	pop    ebp
  41ca99:	xchg   esp,eax
  41ca9a:	sahf   
  41ca9b:	sahf   
  41ca9c:	int    0xb1
  41ca9e:	push   es
  41ca9f:	xlat   BYTE PTR ds:[ebx]
  41caa0:	and    DWORD PTR [esi+esi*8],eax
  41caa3:	popf   
  41caa4:	lods   eax,DWORD PTR ds:[esi]
  41caa5:	inc    edi
  41caa6:	jmp    FWORD PTR [ecx]
  41caa8:	sar    BYTE PTR [ebp+0x416c30dc],cl
  41caae:	adc    DWORD PTR [edx],eax
  41cab0:	les    eax,FWORD PTR [edi+0x7b]
  41cab3:	iret   
  41cab4:	push   0xffffffc4
  41cab6:	stos   DWORD PTR es:[edi],eax
  41cab7:	jecxz  0x41cafb
  41cab9:	lea    eax,[edx+0x36]
  41cabc:	or     dh,BYTE PTR [edx]
  41cabe:	and    BYTE PTR [esi-0x77],dl
  41cac1:	std    
  41cac2:	arpl   WORD PTR [ecx-0x55],sp
  41cac5:	push   esi
  41cac6:	xlat   BYTE PTR ds:[ebx]
  41cac7:	push   edx
  41cac8:	cmp    BYTE PTR [eax+0x7c],ch
  41cacb:	mov    al,0x9
  41cacd:	add    BYTE PTR [ebx+0x62eb8f29],ch
  41cad3:	push   ss
  41cad4:	adc    eax,DWORD PTR [ebx-0x79]
  41cad7:	gs sub eax,0x60593da6
  41cadd:	add    eax,0x19a5596c
  41cae2:	loope  0x41caa2
  41cae4:	dec    esp
  41cae5:	sbb    ah,BYTE PTR [edx+edx*1-0x31]
  41cae9:	ficom  DWORD PTR [ebx]
  41caeb:	xor    al,0x89
  41caed:	sar    BYTE PTR [ebx-0x267702a4],1
  41caf3:	sbb    al,0xdc
  41caf5:	mov    esi,DWORD PTR [edx-0x6819b8fc]
  41cafb:	and    edi,DWORD PTR [edx+0x6970ca1c]
  41cb01:	sbb    eax,0xcad8702c
  41cb06:	inc    eax
  41cb07:	in     al,dx
  41cb08:	out    0x58,al
  41cb0a:	scas   al,BYTE PTR es:[edi]
  41cb0b:	fadd   QWORD PTR [ebx-0x6eaf15ad]
  41cb11:	inc    edi
  41cb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb13:	cld    
  41cb14:	mov    eax,0x58b1aad4
  41cb19:	mov    ds:0x6586a428,eax
  41cb1e:	lds    eax,FWORD PTR [ecx+0x3d]
  41cb21:	popf   
  41cb22:	mov    ds,WORD PTR [edx-0x47c2dc27]
  41cb28:	mov    cl,0x96
  41cb2a:	jo     0x41cb48
  41cb2c:	pushf  
  41cb2d:	add    al,0x82
  41cb2f:	cdq    
  41cb30:	push   0xffffffa2
  41cb32:	jp     0x41cb22
  41cb34:	mov    edx,0xf62303b3
  41cb39:	mov    ds:0xe5ca7aa7,al
  41cb3e:	add    dh,BYTE PTR cs:[ebx+0x4fa692b5]
  41cb45:	and    al,0xc4
  41cb47:	call   0x652df46e
  41cb4c:	arpl   WORD PTR [edi+0x2],ax
  41cb4f:	out    0x3,al
  41cb51:	xor    ecx,ebx
  41cb53:	cmp    BYTE PTR [eax-0x65],ah
  41cb56:	loop   0x41cb43
  41cb58:	fisub  WORD PTR [esi-0x52]
  41cb5b:	and    esp,ebp
  41cb5d:	shr    BYTE PTR [edx-0x76],0xef
  41cb61:	add    ebx,DWORD PTR [ebp-0x3d]
  41cb64:	mov    ah,0x32
  41cb66:	div    DWORD PTR [edi]
  41cb68:	jbe    0x41cb7c
  41cb6a:	xor    DWORD PTR [esi+0x1f],edx
  41cb6d:	xchg   esp,eax
  41cb6e:	push   ebx
  41cb6f:	in     eax,0x88
  41cb71:	xor    al,0xad
  41cb73:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41cb75:	retf   0x7356
  41cb78:	adc    al,BYTE PTR [esi+0x4]
  41cb7b:	xor    al,0xa3
  41cb7d:	xor    BYTE PTR [edx+eiz*1+0x79],0xed
  41cb82:	mov    cl,0x16
  41cb84:	or     edx,DWORD PTR [edi+0x37]
  41cb87:	add    ecx,DWORD PTR [eax-0x59af73bd]
  41cb8d:	xor    al,BYTE PTR [ecx+0x14]
  41cb90:	pop    eax
  41cb91:	call   0xad:0x25cc29b3
  41cb98:	out    0x39,eax
  41cb9a:	jns    0x41cb6e
  41cb9c:	into   
  41cb9d:	lods   al,BYTE PTR ds:[esi]
  41cb9e:	mov    ebp,0x81c86173
  41cba3:	mov    esi,0x114c8c1a
  41cba8:	or     eax,0xe3f91945
  41cbad:	into   
  41cbae:	jb     0x41cbc0
  41cbb0:	hlt    
  41cbb1:	(bad)  
  41cbb2:	(bad)  [ebx-0x27]
  41cbb5:	rcr    BYTE PTR [eax],cl
  41cbb7:	xor    BYTE PTR [edx-0x3e7def44],ch
  41cbbd:	and    DWORD PTR fs:[eax-0x350c6869],ecx
  41cbc4:	test   eax,0x5da3f0d
  41cbc9:	mov    ch,0x3
  41cbcb:	lahf   
  41cbcc:	mov    cl,0x14
  41cbce:	cmp    BYTE PTR [ebx-0x32d7c05],bh
  41cbd4:	adc    eax,0x252f38f6
  41cbd9:	xor    eax,ebp
  41cbdb:	push   ebp
  41cbdc:	shr    cl,0x8
  41cbdf:	sub    BYTE PTR [ebp-0x52],0xca
  41cbe3:	pop    ecx
  41cbe4:	dec    esi
  41cbe5:	and    esi,DWORD PTR [edi-0x73]
  41cbe8:	mov    edx,DWORD PTR [edx-0x21]
  41cbeb:	gs test eax,0xc4e68af6
  41cbf1:	sub    DWORD PTR [edi],ebp
  41cbf3:	retf   
  41cbf4:	xchg   ebx,eax
  41cbf5:	push   ds
  41cbf6:	xor    ch,bh
  41cbf8:	mov    WORD PTR [esi+0x45f02ffe],?
  41cbfe:	pop    ecx
  41cbff:	into   
  41cc00:	adc    eax,DWORD PTR [edi]
  41cc02:	xchg   DWORD PTR [edi+0x280fef6f],ebx
  41cc08:	sbb    dh,cl
  41cc0a:	fs cmp eax,0x8605fc58
  41cc10:	inc    ebp
  41cc11:	inc    ebp
  41cc12:	pop    ebx
  41cc13:	jp     0x41cc37
  41cc15:	push   edx
  41cc16:	sub    al,0x8c
  41cc18:	adc    al,0x2b
  41cc1a:	scas   al,BYTE PTR es:[edi]
  41cc1b:	imul   esi,esp,0xb798cebb
  41cc21:	cmp    al,0x2d
  41cc23:	pop    ds
  41cc24:	and    BYTE PTR [ebx+0x457a0468],al
  41cc2a:	adc    al,0x43
  41cc2c:	scas   eax,DWORD PTR es:[edi]
  41cc2d:	imul   ecx,DWORD PTR [edi],0x2
  41cc30:	mov    es,WORD PTR [eax+0x5154b77a]
  41cc36:	fstcw  WORD PTR [esi-0x24390174]
  41cc3d:	repz mov esp,0x4dabd89d
  41cc43:	ins    BYTE PTR es:[edi],dx
  41cc44:	xor    esp,DWORD PTR [esi-0x40fc05a6]
  41cc4a:	mov    edi,0x94e24d90
  41cc4f:	js     0x41ccb5
  41cc51:	fdivr  st(7),st
  41cc53:	mov    eax,0x69b0765d
  41cc58:	lahf   
  41cc59:	adc    dh,BYTE PTR [eax-0x53bacd4f]
  41cc5f:	dec    ecx
  41cc60:	je     0x41cccf
  41cc62:	clc    
  41cc63:	sub    eax,0xe93d4cdb
  41cc68:	lods   eax,DWORD PTR ds:[esi]
  41cc69:	sahf   
  41cc6a:	cli    
  41cc6b:	sbb    al,0x6c
  41cc6d:	sub    esi,ecx
  41cc6f:	mov    ds:0xc29943ee,al
  41cc74:	jecxz  0x41cca0
  41cc76:	enter  0xc1cd,0x46
  41cc7a:	call   0x7b7fc55f
  41cc7f:	stc    
  41cc80:	popa   
  41cc81:	cmc    
  41cc82:	std    
  41cc83:	call   FWORD PTR [ebp-0xb]
  41cc86:	lahf   
  41cc87:	int3   
  41cc88:	cmp    bl,BYTE PTR [eax+0x63]
  41cc8b:	jae    0x41cc82
  41cc8d:	add    eax,0x2201b47c
  41cc92:	sub    DWORD PTR [esp+edx*2+0x1],0xec1bd86e
  41cc9a:	imul   ebx,DWORD PTR [ecx-0x52],0x1a7fe874
  41cca1:	add    BYTE PTR [ebp+0x23],al
  41cca4:	lock xchg DWORD PTR [esi+0x7955748a],esi
  41ccab:	and    al,0x96
  41ccad:	pop    esi
  41ccae:	call   DWORD PTR [esi+ebp*1+0x45]
  41ccb2:	lds    eax,FWORD PTR [ecx+0x60]
  41ccb5:	pop    es
  41ccb6:	push   ds
  41ccb7:	mov    esi,0x8cd1ad39
  41ccbc:	jb     0x41ccb0
  41ccbe:	test   al,0x2d
  41ccc0:	call   0xf19a:0xdd1e3704
  41ccc7:	ds push ds
  41ccc9:	xchg   edi,eax
  41ccca:	mov    ebx,0x94823687
  41cccf:	loope  0x41cc75
  41ccd1:	fwait
  41ccd2:	dec    ecx
  41ccd3:	push   ecx
  41ccd4:	adc    cl,cl
  41ccd6:	repnz mov bl,0x28
  41ccd9:	mov    edi,0x20c4ec3c
  41ccde:	sub    ah,BYTE PTR [edi-0x65061f6]
  41cce4:	jp     0x41cd08
  41cce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce7:	jbe    0x41cc9a
  41cce9:	cmp    edx,DWORD PTR [edx-0x9b6a56b]
  41ccef:	clc    
  41ccf0:	repz (bad) 
  41ccf2:	jle    0x41cd47
  41ccf4:	pop    ds
  41ccf5:	adc    ebx,esp
  41ccf7:	cs sub eax,0x3c244c8a
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0x7c739246
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1-0x8f9e7e8],bh
  41cd1e:	xchg   esi,ebx
  41cd20:	lock add eax,0xcd46a823
  41cd26:	in     al,dx
  41cd27:	mov    ch,0xf2
  41cd29:	sub    eax,0x3fe8caa0
  41cd2e:	sbb    DWORD PTR [edi-0x3],ebx
  41cd31:	(bad)  
  41cd33:	bound  edi,QWORD PTR [eax-0x23]
  41cd36:	pop    esp
  41cd37:	out    dx,eax
  41cd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd39:	and    al,0x46
  41cd3b:	stos   BYTE PTR es:[edi],al
  41cd3c:	jle    0x41ccdd
  41cd3e:	xchg   ebp,eax
  41cd3f:	inc    edx
  41cd40:	or     BYTE PTR [ebp+0x2c12417f],dh
  41cd46:	pop    ebx
  41cd47:	and    DWORD PTR [ebx-0x53],ebp
  41cd4a:	(bad)
  41cd4d:	pop    ecx
  41cd4e:	in     eax,0xaa
  41cd50:	pushf  
  41cd51:	xchg   esi,eax
  41cd52:	inc    edi
  41cd53:	(bad)  
  41cd54:	test   BYTE PTR [eax],0x2e
  41cd57:	push   ebx
  41cd58:	data16 lock outs dx,BYTE PTR ds:[esi]
  41cd5b:	add    dh,cl
  41cd5d:	sub    dh,BYTE PTR [esp+eax*4+0x2e]
  41cd61:	pushf  
  41cd62:	test   DWORD PTR [edi-0x54],0x4cf491df
  41cd69:	adc    eax,0xf45331ac
  41cd6e:	repz cli 
  41cd70:	adc    al,0x83
  41cd72:	pop    ss
  41cd73:	mov    esi,0x6522bad6
  41cd78:	push   edx
  41cd79:	and    al,0xf4
  41cd7b:	dec    esp
  41cd7c:	in     eax,0x9d
  41cd7e:	xor    al,0xe7
  41cd80:	(bad)  
  41cd81:	jmp    0x41a4:0xa0bf5b7f
  41cd88:	ins    DWORD PTR es:[edi],dx
  41cd89:	push   0x5a52d20
  41cd8e:	sub    DWORD PTR [edx+0x1],ebp
  41cd91:	test   al,0xee
  41cd93:	dec    ebp
  41cd94:	sbb    cl,dh
  41cd96:	jmp    0x3ef4:0xdeb357e8
  41cd9d:	inc    edi
  41cd9e:	in     eax,0x78
  41cda0:	push   esi
  41cda1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda2:	xchg   ecx,eax
  41cda3:	and    edi,ecx
  41cda5:	in     eax,dx
  41cda6:	retf   
  41cda7:	and    eax,0x5ffac44c
  41cdac:	inc    ecx
  41cdad:	mov    bh,BYTE PTR [esi-0x61439ec]
  41cdb3:	hlt    
  41cdb4:	cli    
  41cdb5:	sub    DWORD PTR [edx+eiz*8+0x4bf5d803],esi
  41cdbc:	push   ss
  41cdbd:	sub    al,BYTE PTR [edx-0x28f67f41]
  41cdc3:	out    0x43,al
  41cdc5:	ret    0x5394
  41cdc8:	repnz imul esi,DWORD PTR [ecx],0x1d
  41cdcc:	or     DWORD PTR [ebp+0x70],esp
  41cdcf:	int    0x4a
  41cdd1:	xor    ch,BYTE PTR [edi-0x1731d318]
  41cdd7:	icebp  
  41cdd8:	pop    ds
  41cdd9:	arpl   WORD PTR [eax-0x49c78a21],dx
  41cddf:	js     0x41ce33
  41cde1:	pop    ecx
  41cde2:	and    al,0x33
  41cde4:	or     ah,BYTE PTR [edx]
  41cde6:	clc    
  41cde7:	mov    ebx,0xc51c3b8a
  41cdec:	xchg   ecx,eax
  41cded:	pop    eax
  41cdee:	dec    ebp
  41cdef:	aaa    
  41cdf0:	mov    eax,ds:0xd158ee7a
  41cdf5:	lds    esp,FWORD PTR [ebx+ebp*4]
  41cdf8:	or     al,ah
  41cdfa:	xlat   BYTE PTR ds:[ebx]
  41cdfb:	sahf   
  41cdfc:	add    dh,dl
  41cdfe:	stc    
  41cdff:	outs   dx,BYTE PTR ds:[esi]
  41ce00:	push   edx
  41ce01:	daa    
  41ce02:	add    al,0x9a
  41ce04:	mov    eax,0x7b19c113
  41ce09:	fsubrp st(3),st
  41ce0b:	call   0x93d1:0x768db767
  41ce12:	dec    edi
  41ce13:	gs mov dh,0x24
  41ce16:	push   edx
  41ce17:	retf   
  41ce18:	outs   dx,DWORD PTR ds:[esi]
  41ce19:	xchg   dl,ch
  41ce1b:	int    0xda
  41ce1d:	adc    BYTE PTR ds:0x37090b3c,dl
  41ce23:	fild   DWORD PTR [ebp+0x1b]
  41ce26:	pop    eax
  41ce27:	(bad)  [ebx]
  41ce29:	stos   BYTE PTR es:[edi],al
  41ce2a:	lods   eax,DWORD PTR ds:[esi]
  41ce2b:	push   cs
  41ce2c:	cs (bad) 
  41ce2e:	push   ss
  41ce2f:	add    eax,0xdde7654b
  41ce34:	test   esi,0xe45c1f6
  41ce3a:	out    dx,eax
  41ce3b:	pop    ebx
  41ce3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce3d:	jmp    0x683b:0x9b3d0ddd
  41ce44:	fdivr  st(1),st
  41ce46:	hlt    
  41ce47:	jecxz  0x41cea0
  41ce49:	mov    bl,BYTE PTR [edx]
  41ce4b:	mov    es,esi
  41ce4d:	outs   dx,DWORD PTR ds:[esi]
  41ce4e:	mov    cl,0x30
  41ce50:	adc    eax,0x7a59a4ff
  41ce55:	xor    ch,0x31
  41ce58:	pop    edx
  41ce59:	daa    
  41ce5a:	and    al,0x81
  41ce5c:	in     eax,dx
  41ce5d:	add    edi,edi
  41ce5f:	pop    ss
  41ce60:	add    DWORD PTR [edi-0x4c],esi
  41ce63:	mov    eax,ds:0x83449589
  41ce68:	jp     0x41ce25
  41ce6a:	in     eax,dx
  41ce6b:	pusha  
  41ce6c:	stos   DWORD PTR es:[edi],eax
  41ce6d:	jg     0x41cede
  41ce6f:	jmp    0xe0b9:0x534936d5
  41ce76:	shl    DWORD PTR [edi],cl
  41ce78:	xchg   esi,eax
  41ce79:	xor    BYTE PTR [edi-0x5fd57e68],al
  41ce7f:	mov    edx,0x6559d788
  41ce84:	and    BYTE PTR [eax],dl
  41ce86:	mov    dl,bh
  41ce88:	ss ret 0x3128
  41ce8c:	pop    eax
  41ce8d:	inc    edi
  41ce8e:	int    0xfb
  41ce90:	add    DWORD PTR [esp+esi*1+0xcb0b9eb],edi
  41ce97:	lea    esp,[ecx]
  41ce99:	pop    ebp
  41ce9a:	mov    ds:0xdca0c84a,eax
  41ce9f:	inc    edx
  41cea0:	push   ebp
  41cea1:	aam    0xbc
  41cea3:	shl    BYTE PTR [ebx-0x7935c8dd],1
  41cea9:	dec    ecx
  41ceaa:	lods   al,BYTE PTR ds:[esi]
  41ceab:	fs dec ebp
  41cead:	pop    ds
  41ceae:	pop    edx
  41ceaf:	outs   dx,BYTE PTR ds:[esi]
  41ceb0:	dec    esi
  41ceb1:	pushf  
  41ceb2:	shl    ch,1
  41ceb4:	fisubr DWORD PTR [edx-0x22]
  41ceb7:	and    DWORD PTR [eax],ebx
  41ceb9:	fwait
  41ceba:	aam    0x8c
  41cebc:	add    DWORD PTR [ecx-0x5cc259f9],0xc6e2d258
  41cec6:	mov    esi,0xaaf8aa89
  41cecb:	xor    eax,0x77d99202
  41ced0:	push   esp
  41ced1:	jb     0x41cf39
  41ced3:	mov    bl,0x7b
  41ced5:	push   es
  41ced6:	ja     0x41cf53
  41ced8:	mov    ah,0x17
  41ceda:	pop    ebx
  41cedb:	jecxz  0x41cf45
  41cedd:	jecxz  0x41ce79
  41cedf:	fcomp  QWORD PTR ds:0xf4998d9d
  41cee5:	cld    
  41cee6:	xlat   BYTE PTR ds:[ebx]
  41cee7:	mov    bl,BYTE PTR [eax+0x3d63edb]
  41ceed:	mov    ebp,0xe2427574
  41cef2:	loop   0x41cee5
  41cef4:	lds    edx,FWORD PTR [ecx+eiz*2+0xb3cfd11]
  41cefb:	es inc esi
  41cefd:	je     0x41cf79
  41ceff:	inc    edx
  41cf00:	sbb    DWORD PTR [ebp+ebx*8+0x236a7dd7],0xd33eee0b
  41cf0b:	cmp    BYTE PTR [edx],bh
  41cf0d:	and    ebx,DWORD PTR [eax+0x59]
  41cf10:	ss push 0x65
  41cf13:	ins    DWORD PTR es:[edi],dx
  41cf14:	and    ch,dl
  41cf16:	pop    ss
  41cf17:	outs   dx,DWORD PTR ds:[esi]
  41cf18:	jl     0x41ceba
  41cf1a:	push   ebx
  41cf1b:	pop    ecx
  41cf1c:	xchg   ebx,esp
  41cf1e:	sahf   
  41cf1f:	push   ebx
  41cf20:	xchg   esi,eax
  41cf21:	cmp    al,bh
  41cf23:	cli    
  41cf24:	ror    DWORD PTR [edx+0x34],cl
  41cf27:	and    DWORD PTR [edi-0x14b9294c],0x970943a9
  41cf31:	jmp    0xc5d64447
  41cf36:	mov    ebx,0x25181c88
  41cf3b:	repz repz mov ds:0xd20185cb,eax
  41cf42:	scas   al,BYTE PTR es:[edi]
  41cf43:	rcr    BYTE PTR [edi+0x141dc87],0x22
  41cf4a:	cli    
  41cf4b:	inc    edx
  41cf4c:	add    al,0x52
  41cf4e:	mov    esp,0x935a0e72
  41cf53:	fld    DWORD PTR [esi-0x48e9d511]
  41cf59:	popf   
  41cf5a:	les    ecx,FWORD PTR [ebp+0x71]
  41cf5d:	test   BYTE PTR [ebp+0x61],0x27
  41cf61:	or     eax,0x3c8cbb71
  41cf66:	dec    edi
  41cf67:	cmp    BYTE PTR [eax+edi*1+0x837c31b],0x58
  41cf6f:	and    ah,dh
  41cf71:	or     BYTE PTR [eax+0x170a6b44],0x26
  41cf78:	fistp  DWORD PTR [esi-0x12]
  41cf7b:	btc    DWORD PTR [edx+0x7a9986ea],esp
  41cf82:	sbb    BYTE PTR [esi-0x2d1439fc],dl
  41cf88:	inc    eax
  41cf89:	push   esi
  41cf8a:	cld    
  41cf8b:	push   es
  41cf8c:	lea    esp,[bx+si-0x1fcd]
  41cf91:	(bad)  
  41cf92:	xchg   ecx,eax
  41cf93:	mov    BYTE PTR [ebx-0x448c661f],bl
  41cf99:	pushf  
  41cf9a:	cmp    DWORD PTR [eax+0x68329909],ebx
  41cfa0:	mov    WORD PTR ds:0x5b6bacd9,gs
  41cfa6:	pop    edx
  41cfa7:	test   dh,bh
  41cfa9:	imul   ebp,DWORD PTR [ebx],0xae9883e1
  41cfaf:	call   0x37b6:0x2c41dce4
  41cfb6:	xchg   ebx,ecx
  41cfb8:	xor    ebp,ecx
  41cfba:	add    al,0x7c
  41cfbc:	int3   
  41cfbd:	mov    ch,0xd0
  41cfbf:	ins    BYTE PTR es:[edi],dx
  41cfc0:	in     al,0x48
  41cfc2:	mov    cl,0xc6
  41cfc4:	test   BYTE PTR [esi+eiz*8-0x3a8aa535],ch
  41cfcb:	mov    ebx,0xcc33af57
  41cfd0:	in     eax,dx
  41cfd1:	sbb    al,0x1b
  41cfd3:	mov    ebx,0xf8bcbd71
  41cfd8:	mov    eax,0x8d4deeea
  41cfdd:	mov    ds:0x2916b743,eax
  41cfe2:	inc    esp
  41cfe3:	add    ecx,DWORD PTR [ebp+0x31]
  41cfe6:	pushf  
  41cfe7:	call   0x309a:0x5d3ccf8a
  41cfee:	je     0x41cfa1
  41cff0:	sub    DWORD PTR [edi-0x3],esp
  41cff3:	inc    ebp
  41cff4:	lahf   
  41cff5:	rcr    BYTE PTR [esp+eax*4-0x7f7ece91],0xa
  41cffd:	in     al,0x83
  41cfff:	test   DWORD PTR [ebp+0x22],eax
  41d002:	dec    ebp
  41d003:	ror    DWORD PTR [ebx+0x4a57d2d0],cl
  41d009:	add    DWORD PTR [eax+0x7fd79a4b],0xfffffffd
  41d010:	daa    
  41d011:	sub    DWORD PTR [eax],edi
  41d013:	xchg   ecx,eax
  41d014:	lds    sp,DWORD PTR [edi+0x4db05161]
  41d01b:	adc    al,0xb0
  41d01d:	sbb    DWORD PTR [ebp-0x4d],ecx
  41d020:	mov    ebx,0xf0a252ea
  41d025:	inc    edi
  41d026:	(bad)  
  41d027:	jae    0x41d0a1
  41d029:	jb     0x41cfc8
  41d02b:	pop    ds
  41d02c:	arpl   WORD PTR [ebp+0x797551f3],si
  41d032:	orps   xmm4,xmm7
  41d035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d036:	jg     0x41cfca
  41d038:	mov    edi,0x40336eb3
  41d03d:	pop    ebx
  41d03e:	or     DWORD PTR [edx+ecx*1+0x18c55652],0x64
  41d046:	(bad)  
  41d048:	fidiv  DWORD PTR [esi+0x45c52470]
  41d04e:	data16 das 
  41d050:	ret    
  41d051:	push   ecx
  41d052:	add    DWORD PTR [edx+0x51e62b53],ebx
  41d058:	loopne 0x41d008
  41d05a:	neg    BYTE PTR [edi+0x4bcb31b6]
  41d060:	lea    edx,[ebp+0x3fedbd00]
  41d066:	outs   dx,BYTE PTR ds:[esi]
  41d067:	xor    ch,dl
  41d069:	mov    ds:0x22d6afd0,al
  41d06e:	mov    ds:0xad4e6f2f,al
  41d073:	fild   WORD PTR [esi]
  41d075:	shl    BYTE PTR [ecx],cl
  41d077:	fiadd  WORD PTR ds:0x8f153c58
  41d07d:	(bad)  
  41d07e:	aad    0xab
  41d080:	adc    DWORD PTR [ecx-0x7],edi
  41d083:	mov    eax,0x7ba675e4
  41d088:	test   DWORD PTR [edi+eiz*4],0xfdd231ec
  41d08f:	arpl   WORD PTR [ebx],si
  41d091:	retf   
  41d092:	ja     0x41d092
  41d094:	mov    eax,DWORD PTR [esi-0x6854f]
  41d09a:	mov    WORD PTR [eax],ds
  41d09c:	jg     0x41d0c9
  41d09e:	pushf  
  41d09f:	fsub   DWORD PTR [ebx]
  41d0a1:	mov    esp,0x7f0afab9
  41d0a6:	mul    DWORD PTR [ebx]
  41d0a8:	sbb    esp,edi
  41d0aa:	sub    DWORD PTR [edx],ebp
  41d0ac:	inc    edi
  41d0ad:	mov    al,ds:0x2a8223e8
  41d0b2:	test   al,0x62
  41d0b4:	cmp    ecx,DWORD PTR [ecx]
  41d0b6:	jp     0x41d0f7
  41d0b8:	dec    esp
  41d0b9:	idiv   cl
  41d0bb:	or     eax,0xc02cb4b3
  41d0c0:	inc    BYTE PTR [ecx]
  41d0c2:	mov    ah,0xb6
  41d0c4:	ficomp DWORD PTR [ebx]
  41d0c6:	adc    al,BYTE PTR [esi-0x1c]
  41d0c9:	jne    0x41d0dc
  41d0cb:	jo     0x41d0d5
  41d0cd:	jo     0x41d0f9
  41d0cf:	ror    DWORD PTR [edx+0x2c38244c],0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0xc2bc6585
  41d15f:	mov    eax,ecx
  41d161:	mov    al,0x36
  41d163:	pop    ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1+0x19181818],bh
  41d16c:	stos   BYTE PTR es:[edi],al
  41d16d:	xor    DWORD PTR [eax-0x75679ccc],ebx
  41d173:	in     al,dx
  41d174:	in     eax,dx
  41d175:	mov    dl,0xc2
  41d177:	cld    
  41d178:	clc    
  41d179:	mov    bl,0xa8
  41d17b:	push   cs
  41d17c:	jmp    0x41d12e
  41d17e:	jae    0x41d1de
  41d180:	jl     0x41d1e2
  41d182:	xchg   DWORD PTR [eax+ebx*4-0x35e603d1],edx
  41d189:	jg     0x41d162
  41d18b:	mov    ds:0x1ab77966,al
  41d190:	mov    edx,0x22fd3a86
  41d195:	mov    ch,0x2f
  41d197:	imul   esi,DWORD PTR [edx],0x1ce7aa0d
  41d19d:	adc    ecx,DWORD PTR [ebp-0x5327e7d3]
  41d1a3:	and    DWORD PTR [edx+0x283e0584],esi
  41d1a9:	push   es
  41d1aa:	ja     0x41d1db
  41d1ac:	adc    ch,BYTE PTR [eax+0x1f]
  41d1af:	push   cs
  41d1b0:	lahf   
  41d1b1:	out    0x88,eax
  41d1b3:	xchg   edx,eax
  41d1b4:	push   edi
  41d1b5:	lds    edi,FWORD PTR [esi]
  41d1b7:	pop    esp
  41d1b8:	or     edi,ebp
  41d1ba:	sbb    al,0xe
  41d1bc:	jns    0x41d157
  41d1be:	xor    eax,0xdbf9c1e2
  41d1c3:	cmp    eax,0x349e56d6
  41d1c8:	je     0x41d15e
  41d1ca:	repz fwait
  41d1cc:	xor    al,0x38
  41d1ce:	fwait
  41d1cf:	cmp    esi,DWORD PTR [esp+edx*2+0x640da27f]
  41d1d6:	mov    ch,0x61
  41d1d8:	js     0x41d1a3
  41d1da:	ud2    
  41d1dc:	ficomp DWORD PTR [ecx+0x36e7480d]
  41d1e2:	xor    eax,0xea78428a
  41d1e7:	mov    eax,ds:0x36101fc9
  41d1ec:	fmulp  st(3),st
  41d1ee:	call   0xefcc:0x18c83c0b
  41d1f5:	scas   al,BYTE PTR es:[edi]
  41d1f6:	outs   dx,DWORD PTR ds:[esi]
  41d1f7:	and    esi,ebx
  41d1f9:	push   ecx
  41d1fa:	push   ebx
  41d1fb:	ja     0x41d1d1
  41d1fd:	cwde   
  41d1fe:	sub    ecx,DWORD PTR [edi+0x1a783b73]
  41d204:	pop    esi
  41d205:	js     0x41d21d
  41d207:	(bad)  
  41d208:	icebp  
  41d209:	jg     0x41d271
  41d20b:	fisubr DWORD PTR [eax-0x6f]
  41d20e:	mov    dh,0xf4
  41d210:	test   DWORD PTR [ebp-0x7d],eax
  41d213:	jg     0x41d1fa
  41d215:	cdq    
  41d216:	sub    DWORD PTR [eax],ebx
  41d218:	bound  edi,QWORD PTR [ecx+0x62]
  41d21b:	push   es
  41d21c:	je     0x41d1d7
  41d21e:	test   BYTE PTR [ebx-0x5],0xf1
  41d222:	pop    ebp
  41d223:	or     BYTE PTR [ecx+0x4b],bl
  41d226:	xor    al,0xdd
  41d228:	call   FWORD PTR [edi-0x16]
  41d22b:	les    ebx,FWORD PTR [edi]
  41d22d:	(bad)  
  41d22e:	pop    ebx
  41d22f:	cli    
  41d230:	pop    ds
  41d231:	mov    edi,0x5e6ad582
  41d236:	push   ds
  41d237:	outs   dx,DWORD PTR ds:[esi]
  41d238:	retf   0x13b7
  41d23b:	xchg   edx,eax
  41d23d:	icebp  
  41d23e:	and    DWORD PTR [eax+0x8],ebp
  41d241:	add    BYTE PTR [eax+ebx*8+0x32b017af],ch
  41d248:	pop    ss
  41d249:	add    BYTE PTR [ebx-0x39],bh
  41d24c:	cmp    eax,0x15e029d1
  41d251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d252:	sbb    BYTE PTR [edi+0xe],0x7f
  41d256:	sub    BYTE PTR [ecx+esi*1+0x25],cl
  41d25a:	retf   0x71eb
  41d25d:	psrld  mm2,mm7
  41d260:	ficom  WORD PTR [eax-0x8]
  41d263:	adc    ecx,DWORD PTR ds:0xd6988c72
  41d269:	cmp    BYTE PTR [ecx+edi*2],al
  41d26c:	push   ds
  41d26d:	jno    0x41d2e0
  41d26f:	mov    eax,0xb95bfa64
  41d274:	loope  0x41d2e4
  41d276:	dec    ebp
  41d277:	cs sti 
  41d279:	into   
  41d27a:	xchg   DWORD PTR [edx-0x17],esp
  41d27d:	xor    al,0x81
  41d27f:	lahf   
  41d280:	sbb    bh,dl
  41d282:	push   es
  41d283:	(bad)  
  41d284:	and    ecx,esi
  41d286:	jle    0x41d2f1
  41d288:	sub    eax,0xc916cc56
  41d28d:	mov    bh,BYTE PTR [ebp-0x30ac1933]
  41d293:	sbb    eax,0xf60a0277
  41d298:	inc    edx
  41d299:	cwde   
  41d29a:	xchg   ebx,eax
  41d29b:	xchg   al,al
  41d29d:	(bad)  
  41d29e:	pop    esi
  41d29f:	jp     0x41d2bf
  41d2a1:	mov    eax,0x38255c8a
  41d2a6:	int3   
  41d2a7:	pop    es
  41d2a8:	sub    eax,DWORD PTR [edx+0x1e]
  41d2ab:	sub    eax,0xdf01716a
  41d2b0:	cmp    DWORD PTR [edx-0x3efc5cee],0x92ed75d5
  41d2ba:	(bad)  
  41d2bb:	push   esi
  41d2bc:	mul    BYTE PTR [ebx-0x4e]
  41d2bf:	aas    
  41d2c0:	xchg   edi,eax
  41d2c1:	call   0xc279e695
  41d2c6:	jmp    0x15c373cb
  41d2cb:	hlt    
  41d2cc:	popf   
  41d2cd:	adc    al,BYTE PTR [edi+0x59c8482c]
  41d2d3:	fisttp WORD PTR ds:[esi]
  41d2d6:	imul   esp,DWORD PTR [ebx-0x20],0x9d3fd960
  41d2dd:	dec    esi
  41d2de:	cmp    dl,BYTE PTR ds:0xd992a744
  41d2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e5:	sub    BYTE PTR [edx+0x72],dh
  41d2e8:	or     DWORD PTR [ebp-0x26],0xfffffff4
  41d2ec:	mov    eax,ds:0xa88e5bee
  41d2f1:	adc    ebx,DWORD PTR [ebx+0x66]
  41d2f4:	mov    BYTE PTR [esi-0x29],bh
  41d2f7:	mov    eax,0x5a546d1c
  41d2fc:	xor    eax,0x6993f936
  41d301:	inc    BYTE PTR [eax+0x58]
  41d304:	fld    DWORD PTR [ecx-0x16fc30f9]
  41d30a:	pusha  
  41d30b:	loop   0x41d2ee
  41d30d:	mov    bl,0xd9
  41d30f:	jle    0x41d2a5
  41d311:	push   ds
  41d312:	aas    
  41d313:	pop    ecx
  41d314:	inc    ecx
  41d315:	cld    
  41d316:	mov    cl,BYTE PTR [edx-0xeb07ac4]
  41d31c:	mov    bl,0xab
  41d31e:	mov    bh,0x81
  41d320:	xchg   bl,dh
  41d322:	push   esi
  41d323:	fdivr  QWORD PTR [esi-0x2cc515d6]
  41d329:	sub    al,0xe
  41d32b:	(bad)  
  41d32d:	dec    edx
  41d32e:	popa   
  41d32f:	aas    
  41d330:	jb     0x41d374
  41d332:	mov    ds:0x557d3f9c,al
  41d337:	sbb    BYTE PTR [ebx+esi*8],cl
  41d33a:	cmp    cl,bl
  41d33c:	pop    eax
  41d33d:	stc    
  41d33e:	loop   0x41d3b6
  41d340:	cmc    
  41d341:	sub    ecx,DWORD PTR [ecx-0x16]
  41d344:	xor    edi,DWORD PTR [edi]
  41d346:	mov    BYTE PTR [eax+0x5bcb5115],ch
  41d34c:	inc    edi
  41d34d:	pop    ebx
  41d34e:	sub    esp,DWORD PTR [esi]
  41d350:	(bad)  
  41d351:	outs   dx,DWORD PTR ds:[esi]
  41d352:	sbb    al,0xf1
  41d354:	icebp  
  41d355:	call   0x438e4777
  41d35a:	mov    ebp,0xe1e1e4a6
  41d35f:	hlt    
  41d360:	mov    eax,gs
  41d362:	xor    dl,BYTE PTR [edi]
  41d364:	(bad)  
  41d365:	ficomp WORD PTR [edi-0x57]
  41d368:	mov    al,ds:0x4771fc1b
  41d36d:	mov    BYTE PTR [edx+0x9],cl
  41d370:	mov    ch,0x7c
  41d372:	daa    
  41d373:	xchg   edx,eax
  41d374:	mov    DWORD PTR [edx+0x37fa378c],eax
  41d37a:	das    
  41d37b:	into   
  41d37c:	fcom   QWORD PTR [esi-0x33794057]
  41d382:	xchg   ecx,eax
  41d383:	(bad)  [edi]
  41d385:	test   BYTE PTR [ecx+0x5cc00f46],bh
  41d38b:	sub    BYTE PTR [eax-0xc],dl
  41d38e:	pop    ebx
  41d38f:	test   DWORD PTR [edx-0xbbbe41c],ebp
  41d395:	sbb    al,0xbc
  41d397:	dec    esi
  41d398:	sar    BYTE PTR [esi],1
  41d39a:	xor    ebx,DWORD PTR [edi+0x37557b6a]
  41d3a0:	(bad)  
  41d3a1:	cs iret 
  41d3a3:	and    eax,0x6643876f
  41d3a8:	test   dh,bl
  41d3aa:	pop    edi
  41d3ab:	xor    DWORD PTR [edx+0x980448f],ecx
  41d3b1:	aaa    
  41d3b2:	in     al,0x11
  41d3b4:	fwait
  41d3b5:	pusha  
  41d3b6:	or     DWORD PTR [ebp+0x5f],edi
  41d3b9:	in     eax,0xd9
  41d3bb:	ins    BYTE PTR es:[edi],dx
  41d3bc:	ss xor eax,0x547001e5
  41d3c2:	(bad)  
  41d3c3:	push   eax
  41d3c4:	sub    DWORD PTR [ebp-0x23],0xa5e2771d
  41d3cb:	cmp    eax,0x32ffe37a
  41d3d0:	je     0x41d446
  41d3d2:	add    BYTE PTR ss:0x64834616,0x5d
  41d3da:	aad    0x46
  41d3dc:	push   es
  41d3dd:	jge    0x41d396
  41d3df:	or     edx,ebx
  41d3e1:	clc    
  41d3e2:	cld    
  41d3e3:	mov    edi,0xfdc4d865
  41d3e8:	fdiv   DWORD PTR [ecx-0x6a]
  41d3eb:	clc    
  41d3ec:	or     ah,0xea
  41d3ef:	cmp    dl,BYTE PTR [eax*2-0x6b3b9f71]
  41d3f6:	arpl   WORD PTR [esi],cx
  41d3f8:	or     BYTE PTR [esi+edi*8+0x1c08811c],dh
  41d3ff:	nop
  41d400:	xchg   DWORD PTR [edi-0x390aa7fa],esp
  41d406:	rol    DWORD PTR ds:0x36217a45,1
  41d40c:	jnp    0x41d474
  41d40e:	cs (bad) 
  41d410:	sub    ecx,edx
  41d412:	loopne 0x41d444
  41d414:	jmp    DWORD PTR [edx-0x71]
  41d417:	sbb    eax,0x78be6ff8
  41d41c:	pop    ss
  41d41d:	xor    DWORD PTR [edx],ebx
  41d41f:	pop    ebx
  41d420:	mov    cl,0xd
  41d422:	jb     0x41d3e8
  41d424:	rcl    BYTE PTR ss:0x31797d55,1
  41d42b:	(bad)  
  41d42c:	sub    BYTE PTR [esi-0x7b4369b3],ah
  41d432:	in     eax,0x2a
  41d434:	pop    edx
  41d435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d436:	out    0xd4,al
  41d438:	stos   BYTE PTR es:[edi],al
  41d439:	xor    al,0x7f
  41d43b:	and    eax,0x379b4418
  41d440:	gs jbe 0x41d466
  41d443:	xor    esp,ebx
  41d445:	xchg   ebx,eax
  41d446:	or     BYTE PTR [eax-0x3d],0x9e
  41d44a:	cmc    
  41d44b:	test   BYTE PTR [eax],ch
  41d44d:	out    0x80,al
  41d44f:	and    DWORD PTR [edx],eax
  41d451:	scas   al,BYTE PTR es:[edi]
  41d452:	mov    ds:0xd552d40d,eax
  41d457:	mov    ds:0x9f3ba65c,eax
  41d45c:	outs   dx,BYTE PTR ds:[esi]
  41d45d:	test   BYTE PTR ds:0x7a6758d6,cl
  41d463:	mov    eax,0x6d7842ba
  41d468:	xchg   edx,eax
  41d469:	inc    esi
  41d46a:	fist   DWORD PTR ds:0x8bb25a48
  41d470:	push   edi
  41d471:	sub    eax,0x9e9fccaa
  41d476:	xor    ebp,DWORD PTR [eax-0x19385c5b]
  41d47c:	xor    ebx,ebp
  41d47e:	cmp    al,0x27
  41d480:	fiadd  DWORD PTR [ebx]
  41d482:	mov    ebx,0x46e7c3f7
  41d487:	gs pop ds
  41d489:	imul   edx,DWORD PTR [edx+0x54dbfaa9],0xa67a9c97
  41d493:	pop    edx
  41d494:	das    
  41d495:	mov    dl,0xa7
  41d497:	mov    dl,0x38
  41d499:	mov    edi,0x1783aa50
  41d49e:	add    BYTE PTR [eax],al
  41d4a0:	dec    ecx
  41d4a1:	jg     0x41d4ff
  41d4a3:	add    bh,BYTE PTR [esi+ebp*1]
  41d4a6:	jp     0x41d4da
  41d4a8:	in     al,0x73
  41d4aa:	xor    DWORD PTR [edx+ebx*2],ebp
  41d4ad:	aaa    
  41d4ae:	push   ecx
  41d4af:	jbe    0x41d482
  41d4b1:	repnz fwait
  41d4b3:	sbb    BYTE PTR [ecx-0x60],cl
  41d4b6:	ins    DWORD PTR es:[edi],dx
  41d4b7:	jbe    0x41d48b
  41d4b9:	clc    
  41d4ba:	xchg   edi,eax
  41d4bb:	test   al,0x82
  41d4bd:	xchg   ecx,eax
  41d4be:	jno    0x41d536
  41d4c0:	xchg   BYTE PTR [edx+0x7711b37f],dh
  41d4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4c7:	adc    dh,BYTE PTR [edi+ebp*8+0x5a11a694]
  41d4ce:	inc    ecx
  41d4cf:	push   ecx
  41d4d0:	add    bh,BYTE PTR [ebp-0x59]
  41d4d3:	cmp    ch,dh
  41d4d5:	jmp    0xbb52:0x9fe8ca73
  41d4dc:	dec    esi
  41d4dd:	xor    al,0x65
  41d4df:	xor    esp,DWORD PTR [ecx]
  41d4e1:	mov    cs,WORD PTR [esi-0x3b]
  41d4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e5:	in     eax,dx
  41d4e6:	sub    eax,0x87a5e006
  41d4eb:	jne    0xa5bc2a06
  41d4f1:	hlt    
  41d4f2:	or     eax,ecx
  41d4f4:	aad    0x36
  41d4f6:	loopne 0x41d4f6
  41d4f8:	push   edx
  41d4f9:	(bad)  
  41d4fa:	jmp    0x41d535
  41d4fc:	jae    0x41d49f
  41d4fe:	imul   edi,DWORD PTR [ebx],0x25b77cb3
  41d504:	dec    esi
  41d505:	(bad)  
  41d507:	call   0x12d8:0xce73
  41d50d:	cmp    al,BYTE PTR [esi*4+0x42412dd6]
  41d514:	dec    esp
  41d515:	aas    
  41d516:	cmp    bh,BYTE PTR [edi-0x79]
  41d519:	cli    
  41d51a:	out    0xf3,eax
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d4ed
  41d54b:	or     eax,edi
  41d54d:	push   0xffffffda
  41d54f:	push   ebp
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1-0x5f68e7e8],bh
  41d558:	xchg   ecx,eax
  41d559:	sub    BYTE PTR [ecx-0x443b8376],al
  41d55f:	mov    bh,ch
  41d561:	dec    ebp
  41d562:	xchg   esp,eax
  41d563:	xor    dh,BYTE PTR ds:0x9a9c6409
  41d569:	inc    esi
  41d56a:	xchg   edx,eax
  41d56b:	icebp  
  41d56c:	mov    dh,0x76
  41d56e:	hlt    
  41d56f:	jne    0x41d5ad
  41d571:	sbb    DWORD PTR [ecx-0x75fd98b7],eax
  41d577:	jmp    0x695a:0x711b999e
  41d57e:	adc    ch,BYTE PTR [ecx+ebx*4-0xd]
  41d582:	jmp    0x8283b32f
  41d587:	(bad)  
  41d588:	and    eax,0x8cccac08
  41d58d:	sbb    al,0x29
  41d58f:	stos   BYTE PTR es:[edi],al
  41d590:	jnp    0x41d586
  41d592:	scas   eax,DWORD PTR es:[edi]
  41d593:	xchg   ecx,eax
  41d594:	sbb    al,0x41
  41d596:	sbb    eax,0xcc8de845
  41d59b:	loope  0x41d5f1
  41d59d:	sbb    eax,0x34822837
  41d5a2:	data16 icebp 
  41d5a4:	sahf   
  41d5a5:	mov    bl,0x64
  41d5a7:	shr    BYTE PTR [eax+0xb],1
  41d5aa:	sti    
  41d5ab:	sub    edi,esp
  41d5ad:	or     ch,BYTE PTR [ebp+0x34d03456]
  41d5b3:	dec    ecx
  41d5b4:	adc    BYTE PTR [edx+0x67fede4b],0x38
  41d5bb:	jnp    0x41d5da
  41d5bd:	mov    ch,0xeb
  41d5bf:	mov    edx,DWORD PTR [ebp-0x12]
  41d5c2:	mov    ah,0x4b
  41d5c4:	lods   eax,DWORD PTR ds:[esi]
  41d5c5:	inc    esi
  41d5c6:	sti    
  41d5c7:	push   0x5a
  41d5c9:	add    esp,ebp
  41d5cb:	test   DWORD PTR [edx],0x2e7fed8
  41d5d1:	mov    BYTE PTR ds:0x3c0fb623,ah
  41d5d7:	ficom  DWORD PTR [edx-0x33505831]
  41d5dd:	and    dh,BYTE PTR [ecx+0x35]
  41d5e0:	push   ebp
  41d5e1:	lahf   
  41d5e2:	jb     0x41d5e8
  41d5e4:	fistp  WORD PTR [ecx-0x4a8cf81d]
  41d5ea:	mov    ecx,0xc4360d26
  41d5ef:	xor    DWORD PTR [edx],ebp
  41d5f1:	push   ss
  41d5f2:	(bad)  
  41d5f3:	adc    esp,DWORD PTR [ecx]
  41d5f5:	and    al,0xa0
  41d5f7:	lods   eax,DWORD PTR ds:[esi]
  41d5f8:	fstp   TBYTE PTR [ebp+0x76]
  41d5fb:	in     al,dx
  41d5fc:	ss aam 0x82
  41d5ff:	sub    edi,DWORD PTR [edi-0x5003c5c]
  41d605:	ins    BYTE PTR es:[edi],dx
  41d606:	imul   edx
  41d608:	dec    esp
  41d609:	icebp  
  41d60a:	pop    ss
  41d60b:	inc    eax
  41d60c:	mov    dl,0x7f
  41d60e:	sti    
  41d60f:	fldl2e 
  41d611:	sub    DWORD PTR [edi+0x53f5656e],ebx
  41d617:	or     edx,esi
  41d619:	fst    DWORD PTR [ebx-0x63]
  41d61c:	add    dh,BYTE PTR [ebx-0x67]
  41d61f:	mov    esi,0x539aa4f7
  41d624:	push   cs
  41d625:	push   esp
  41d626:	xor    BYTE PTR [ebp+eiz*4-0x2a],0xfb
  41d62b:	adc    al,0x24
  41d62d:	push   es
  41d62e:	cdq    
  41d62f:	rol    eax,0x29
  41d632:	ja     0x41d659
  41d634:	and    edi,DWORD PTR [ecx+0x5596b180]
  41d63a:	sbb    BYTE PTR ds:0xd78e5c28,bl
  41d640:	fs xchg esi,eax
  41d642:	xor    cl,BYTE PTR [eax+0x7909ea12]
  41d648:	adc    eax,esp
  41d64a:	aas    
  41d64b:	mov    ss,WORD PTR [ebx]
  41d64d:	loop   0x41d630
  41d64f:	loopne 0x41d67d
  41d651:	inc    ebp
  41d652:	and    edi,edi
  41d654:	test   al,0x7e
  41d656:	mov    esp,0x9996442e
  41d65b:	lods   al,BYTE PTR ds:[esi]
  41d65c:	push   esi
  41d65d:	daa    
  41d65e:	enter  0x277b,0x7c
  41d662:	dec    BYTE PTR [ebx]
  41d664:	add    DWORD PTR [ecx-0x4d24f8e0],esi
  41d66a:	and    eax,0xf64cb6e0
  41d66f:	add    ah,ch
  41d671:	xchg   ebx,eax
  41d672:	popa   
  41d673:	sti    
  41d674:	rcr    DWORD PTR [ecx],cl
  41d676:	sbb    DWORD PTR [edi+0x12],ebp
  41d679:	test   eax,0x4ffd6567
  41d67e:	dec    ebp
  41d67f:	push   cs
  41d680:	lods   al,BYTE PTR ds:[esi]
  41d681:	pop    ecx
  41d682:	stc    
  41d683:	test   eax,0xdd041d3a
  41d688:	or     eax,0xb5a78c18
  41d68d:	jne    0x41d6b5
  41d68f:	jg     0x41d637
  41d691:	pop    ds
  41d692:	test   eax,0xe1987a4
  41d697:	cmp    dl,bh
  41d699:	jnp    0x41d681
  41d69b:	ret    
  41d69c:	xchg   esi,eax
  41d69d:	or     al,0x67
  41d69f:	jecxz  0x41d688
  41d6a1:	rol    DWORD PTR [ebx+0x4e19a196],1
  41d6a7:	xchg   BYTE PTR [ecx-0x7b],cl
  41d6aa:	stc    
  41d6ab:	or     cl,BYTE PTR [edi+eiz*1-0x4]
  41d6af:	enter  0xb2eb,0x5b
  41d6b3:	fdivr  DWORD PTR [edi+0x6e]
  41d6b6:	ror    BYTE PTR [esi],1
  41d6b8:	in     al,0x91
  41d6ba:	push   0x3f441c1b
  41d6bf:	sbb    al,0xbe
  41d6c1:	lds    esi,FWORD PTR [esi]
  41d6c3:	hlt    
  41d6c4:	xor    BYTE PTR [ebx+0x86c8f78],bl
  41d6ca:	mov    edi,0x9f8c3745
  41d6cf:	adc    BYTE PTR [esp+edx*1+0x107bb239],0x42
  41d6d7:	arpl   WORD PTR [ebp-0x6b462822],bx
  41d6dd:	pop    ss
  41d6de:	pop    esi
  41d6df:	mov    ss,WORD PTR cs:[ecx+0x137a2c94]
  41d6e6:	jge    0x41d6db
  41d6e8:	xchg   ebx,eax
  41d6e9:	mov    ebx,0xa73b2da3
  41d6ee:	pop    ebx
  41d6ef:	call   0x49de:0xe500e576
  41d6f6:	clc    
  41d6f7:	sub    eax,0xe1302bdb
  41d6fc:	cmp    eax,0x2fe936a7
  41d701:	add    eax,0xc61e8276
  41d706:	or     esi,DWORD PTR [edx+0x5d3e0ac6]
  41d70c:	xchg   edi,eax
  41d70d:	or     DWORD PTR [ebx-0xc],esi
  41d710:	adc    eax,0xe657607c
  41d715:	xchg   ebp,eax
  41d716:	mov    eax,0x1ff5ae25
  41d71b:	jmp    0x41d703
  41d71d:	jns    0x41d706
  41d71f:	mov    ebp,0x26f35334
  41d724:	cmp    al,0xf7
  41d726:	inc    ebx
  41d727:	outs   dx,BYTE PTR ds:[esi]
  41d728:	fsub   DWORD PTR [ebp+edx*4+0x36c3758a]
  41d72f:	into   
  41d730:	ins    DWORD PTR es:[edi],dx
  41d731:	mov    al,0xc5
  41d733:	pop    es
  41d734:	lods   al,BYTE PTR ds:[esi]
  41d735:	mov    ds:0x6c98826e,al
  41d73a:	cmp    bh,BYTE PTR [edx]
  41d73c:	cmp    eax,0x27ffbbd2
  41d741:	aas    
  41d742:	jno    0x41d7a6
  41d744:	gs pop es
  41d746:	jns    0x41d783
  41d748:	pushf  
  41d749:	int    0xc5
  41d74b:	dec    esi
  41d74c:	add    BYTE PTR [edi-0x4d21c9a1],cl
  41d752:	or     esp,DWORD PTR [edi+0x110ed926]
  41d758:	out    dx,al
  41d759:	jno    0x41d78e
  41d75b:	sbb    al,0x3c
  41d75e:	mov    ch,0x37
  41d760:	xchg   edx,eax
  41d761:	cmp    dl,BYTE PTR [edi]
  41d763:	fsubp  st(3),st
  41d765:	stc    
  41d766:	not    BYTE PTR [edx+0x5b7df718]
  41d76c:	pop    esi
  41d76d:	nop
  41d76e:	ret    
  41d76f:	repz add BYTE PTR [edx+0x3363e21a],cl
  41d776:	arpl   WORD PTR [ebx+ebp*4],si
  41d779:	push   0x5273a9ae
  41d77e:	xor    BYTE PTR [edx-0x1],ah
  41d781:	arpl   WORD PTR [ecx],sp
  41d783:	pop    esp
  41d784:	popf   
  41d785:	inc    ebx
  41d786:	aad    0x18
  41d788:	ins    BYTE PTR es:[edi],dx
  41d789:	adc    al,0x8b
  41d78b:	or     edx,DWORD PTR [edi-0x17979410]
  41d791:	das    
  41d792:	cmp    eax,0x6fe6f7f5
  41d797:	sar    BYTE PTR [edx],1
  41d799:	popa   
  41d79a:	fwait
  41d79b:	stc    
  41d79c:	enter  0x9190,0x4e
  41d7a0:	scas   al,BYTE PTR es:[edi]
  41d7a1:	jmp    0x86ab:0x3f9ea522
  41d7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7a9:	lods   eax,DWORD PTR ds:[esi]
  41d7aa:	test   DWORD PTR ds:0x732298cc,0x9c772193
  41d7b4:	out    0x41,eax
  41d7b6:	jae    0x41d760
  41d7b8:	sub    DWORD PTR [esi-0x791d366c],ecx
  41d7be:	pop    esi
  41d7bf:	jmp    0x41d7fa
  41d7c1:	loope  0x41d7a1
  41d7c3:	sbb    eax,0x9f4e2d3a
  41d7c8:	loop   0x41d769
  41d7ca:	inc    esp
  41d7cb:	mov    ds:0xdcd402be,eax
  41d7d0:	loop   0x41d849
  41d7d2:	and    eax,0xe40a415b
  41d7d7:	test   BYTE PTR [esi-0x2e2fb01],al
  41d7dd:	cmp    eax,0xa487d56
  41d7e2:	xchg   esi,esp
  41d7e4:	(bad)  
  41d7e5:	jb     0x41d804
  41d7e7:	cmc    
  41d7e8:	es gs loopne 0x41d7a2
  41d7ec:	xchg   esp,eax
  41d7ed:	test   BYTE PTR [ecx],cl
  41d7ef:	pop    esi
  41d7f0:	fst    st(3)
  41d7f2:	cld    
  41d7f3:	mov    ecx,0xf50a8d03
  41d7f8:	rcr    dl,1
  41d7fa:	dec    ebx
  41d7fb:	sub    ecx,DWORD PTR [esi]
  41d7fd:	stos   BYTE PTR es:[edi],al
  41d7fe:	fs aad 0x1c
  41d801:	push   0xffffffc7
  41d803:	shl    eax,cl
  41d805:	aaa    
  41d806:	call   0x267c3208
  41d80b:	push   edi
  41d80c:	mov    esp,0x47a765d9
  41d811:	adc    ecx,ebx
  41d813:	mov    edx,0x924969d1
  41d818:	sbb    ebp,DWORD PTR [ecx]
  41d81a:	adc    bh,BYTE PTR [edi+0xcbc9566]
  41d820:	and    DWORD PTR [ebx],0x54fcb951
  41d826:	pop    esi
  41d827:	dec    esi
  41d828:	pop    ss
  41d829:	dec    ecx
  41d82a:	jo     0x41d853
  41d82c:	ins    DWORD PTR es:[edi],dx
  41d82d:	add    DWORD PTR [esi+ebp*1],eax
  41d830:	pop    edi
  41d831:	mov    al,0x73
  41d833:	rcr    DWORD PTR [edx-0x79],cl
  41d836:	mov    cl,0xfa
  41d838:	adc    eax,0xd7a76998
  41d83d:	cmp    ah,BYTE PTR [esi+0x1f8a3e9d]
  41d843:	jl     0x41d7e0
  41d845:	jno    0x41d824
  41d847:	and    ch,BYTE PTR ds:0x323244a0
  41d84d:	jns    0x41d7f1
  41d84f:	and    BYTE PTR [eax+0x6c0654be],dl
  41d855:	cli    
  41d856:	or     esp,ecx
  41d858:	js     0x41d803
  41d85a:	cmp    ebx,esp
  41d85c:	out    0xfa,al
  41d85e:	aaa    
  41d85f:	pop    ds
  41d860:	and    eax,0x672b86cc
  41d865:	push   eax
  41d866:	xor    dl,0xe4
  41d869:	sub    ecx,ecx
  41d86b:	icebp  
  41d86c:	inc    esi
  41d86d:	in     eax,0xa2
  41d86f:	pusha  
  41d870:	sub    DWORD PTR [ecx+eax*1+0x24728a7a],0xffffff9c
  41d878:	inc    edx
  41d879:	add    DWORD PTR [edx-0x7b],ecx
  41d87c:	sbb    dl,BYTE PTR [eax+ebx*2]
  41d87f:	cwde   
  41d880:	les    edx,FWORD PTR ds:0x2b9584bb
  41d886:	jb     0x41d885
  41d888:	fnstenv [ebx+0x9]
  41d88b:	pop    DWORD PTR [eax+edi*2+0x50]
  41d88f:	lods   al,BYTE PTR ds:[esi]
  41d890:	mov    dl,0x1e
  41d892:	sbb    bl,ah
  41d894:	nop
  41d895:	jo     0x41d81f
  41d897:	pop    esi
  41d898:	out    0x93,eax
  41d89a:	inc    ebx
  41d89b:	mov    edi,0x1acf2a8d
  41d8a0:	adc    eax,0xe5371243
  41d8a5:	dec    edx
  41d8a6:	add    al,0x6c
  41d8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8a9:	push   0x37637b19
  41d8ae:	xor    eax,0x56667a2c
  41d8b3:	adc    BYTE PTR [eax],ah
  41d8b5:	sti    
  41d8b6:	xchg   BYTE PTR [esi],dl
  41d8b8:	sbb    edi,DWORD PTR [esi-0x56]
  41d8bb:	adc    edx,edx
  41d8bd:	mov    eax,0xa172cc5
  41d8c2:	jl     0x41d91b
  41d8c4:	test   al,0x36
  41d8c6:	bound  edi,QWORD PTR [ebp-0x47]
  41d8c9:	outs   dx,DWORD PTR ds:[esi]
  41d8ca:	sbb    BYTE PTR [ebx-0x6756ef30],0x8e
  41d8d1:	jo     0x41d86d
  41d8d3:	bound  esp,QWORD PTR [eax]
  41d8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8d6:	pop    ebp
  41d8d7:	mov    eax,ds:0x645c9a4c
  41d8dc:	in     eax,0x7f
  41d8de:	and    eax,0xf1fdc03
  41d8e3:	ficomp DWORD PTR [eax]
  41d8e5:	cmp    al,al
  41d8e7:	add    al,BYTE PTR [ebx-0x4c]
  41d8ea:	xchg   edx,eax
  41d8eb:	sti    
  41d8ec:	mov    al,0x85
  41d8ee:	es nop
  41d8f0:	(bad)  
  41d8f1:	stos   DWORD PTR es:[edi],eax
  41d8f2:	or     eax,0x49
  41d8f5:	fisttp DWORD PTR ds:0xae47beae
  41d8fb:	jnp    0x41d93a
  41d8fd:	je     0x41d93f
  41d8ff:	mov    ebp,0x95f6135e
  41d904:	iret   
  41d905:	add    bh,BYTE PTR [ebx+0x24548b0a]
  41d90b:	sbb    BYTE PTR [ebx+0x31c247c],cl
  41d911:	ret    0xcf13
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422568
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x14d260bc,eax
  41d941:	stos   BYTE PTR es:[edi],al
  41d942:	jg     0x41d991
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1-0x99fe7e8],bh
  41d94c:	add    BYTE PTR [ecx],ch
  41d94e:	lods   eax,DWORD PTR ds:[esi]
  41d94f:	or     ah,BYTE PTR [edi]
  41d951:	inc    edi
  41d952:	sar    DWORD PTR [esi],cl
  41d954:	ins    DWORD PTR es:[edi],dx
  41d955:	dec    ebx
  41d956:	pop    esi
  41d957:	adc    BYTE PTR [edi+0x7812f512],dl
  41d95d:	comiss xmm5,DWORD PTR [edx-0x1483e677]
  41d964:	dec    ebp
  41d965:	and    al,0x6
  41d967:	out    0x4b,al
  41d969:	xchg   ebp,eax
  41d96a:	scas   al,BYTE PTR es:[edi]
  41d96b:	gs push esi
  41d96d:	mov    dh,0x64
  41d96f:	or     ah,BYTE PTR [ecx+0x46d7364]
  41d975:	cwde   
  41d976:	(bad)  
  41d977:	dec    ebp
  41d978:	sbb    bl,BYTE PTR [edi+0x33c3eae]
  41d97e:	mov    ecx,0x6e07658
  41d983:	pop    ss
  41d984:	xlat   BYTE PTR ds:[ebx]
  41d985:	jo     0x41d974
  41d987:	jae    0x41d99b
  41d989:	aaa    
  41d98a:	mov    ebp,0x4ae22253
  41d98f:	lods   eax,DWORD PTR ds:[esi]
  41d990:	mov    DWORD PTR [esi-0x5678772],ecx
  41d996:	out    0x3d,al
  41d998:	dec    esi
  41d999:	jmp    0x41d935
  41d99b:	sub    dh,ah
  41d99d:	ins    DWORD PTR es:[edi],dx
  41d99e:	dec    esp
  41d99f:	repnz cmp al,0x14
  41d9a2:	mov    ebp,ebx
  41d9a4:	fstp   st(2)
  41d9a6:	cmp    DWORD PTR [ebx+ebp*2],esi
  41d9a9:	dec    esi
  41d9aa:	lods   eax,DWORD PTR ds:[esi]
  41d9ab:	sub    al,0xc7
  41d9ad:	inc    ecx
  41d9ae:	push   0x2d
  41d9b0:	push   ecx
  41d9b1:	(bad)  
  41d9b2:	cmp    eax,0xaca2f574
  41d9b7:	fmul   QWORD PTR [edx]
  41d9b9:	adc    edx,ebx
  41d9bb:	out    dx,eax
  41d9bc:	sahf   
  41d9bd:	adc    ah,ah
  41d9bf:	fwait
  41d9c0:	test   DWORD PTR [edi-0x3104550],esi
  41d9c6:	inc    eax
  41d9c7:	out    0x95,eax
  41d9c9:	stc    
  41d9ca:	jge    0x41da48
  41d9cc:	sbb    ebx,DWORD PTR [edi+0xd696c15]
  41d9d2:	mov    dl,0xdf
  41d9d4:	mov    ch,0x3c
  41d9d6:	pop    esp
  41d9d7:	mov    edi,0xed92ab5
  41d9dc:	outs   dx,DWORD PTR ds:[esi]
  41d9dd:	cld    
  41d9de:	mov    ebp,esp
  41d9e0:	rcr    esp,1
  41d9e2:	inc    esi
  41d9e3:	pop    ds
  41d9e4:	lea    edx,ds:0xe1ae8e7f
  41d9ea:	mov    edi,0x17ae64f9
  41d9ef:	ja     0x41d9ee
  41d9f1:	jle    0x41da02
  41d9f3:	repnz pop ecx
  41d9f5:	rcl    DWORD PTR [edx],0x18
  41d9f8:	or     al,0xd9
  41d9fa:	mov    DWORD PTR [eax-0x5c],esi
  41d9fd:	(bad)  
  41d9fe:	pop    ebp
  41d9ff:	mov    ds:0xc0b1cfe7,al
  41da04:	mov    WORD PTR [ebp+0x34bd3380],?
  41da0a:	cli    
  41da0b:	leave  
  41da0c:	cli    
  41da0d:	sbb    DWORD PTR ds:0x21a47cd6,edx
  41da13:	data16 add BYTE PTR [ecx-0x33],ah
  41da17:	pop    ds
  41da18:	aam    0x2
  41da1a:	mov    ds:0x5cd4ba1b,eax
  41da1f:	mov    ebx,0xb12104dc
  41da24:	rol    DWORD PTR [edi+0x49e69d7b],0x13
  41da2b:	jbe    0x41da6e
  41da2d:	or     ebx,DWORD PTR [ebx-0xe]
  41da30:	neg    bh
  41da32:	adc    al,0x85
  41da34:	dec    ebx
  41da35:	jmp    0x636b9a08
  41da3a:	inc    ebx
  41da3b:	and    dl,bl
  41da3d:	xor    dl,BYTE PTR [esi]
  41da3f:	xchg   edx,eax
  41da40:	stc    
  41da41:	ins    BYTE PTR es:[edi],dx
  41da42:	pop    ds
  41da43:	popf   
  41da44:	hlt    
  41da45:	call   FWORD PTR [eax]
  41da47:	pop    esi
  41da48:	pop    es
  41da49:	fstp   st(6)
  41da4b:	add    DWORD PTR [ebp+0x29],0x1
  41da4f:	stc    
  41da50:	jmp    0x41da68
  41da52:	sti    
  41da53:	jnp    0x41dabf
  41da55:	mov    eax,ds:0x6333a02
  41da5a:	nop
  41da5b:	sbb    BYTE PTR [edi-0x4b],al
  41da5e:	pop    eax
  41da5f:	es cli 
  41da61:	push   edi
  41da62:	jb     0x41da78
  41da64:	push   cs
  41da65:	and    dl,BYTE PTR [esi+0x7da48968]
  41da6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da6c:	test   BYTE PTR [eax+edi*4],dl
  41da6f:	sub    eax,0x414ff726
  41da74:	dec    edx
  41da75:	dec    ebp
  41da76:	add    al,0x22
  41da78:	jbe    0x41daf3
  41da7a:	push   edi
  41da7b:	push   edx
  41da7c:	inc    esi
  41da7d:	aam    0x40
  41da7f:	outs   dx,DWORD PTR ds:[esi]
  41da80:	xchg   ebp,eax
  41da81:	mov    DWORD PTR [esp+eiz*8],edx
  41da84:	stc    
  41da85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da86:	outs   dx,DWORD PTR ds:[esi]
  41da87:	icebp  
  41da88:	repnz push eax
  41da8a:	and    DWORD PTR [edx],ebp
  41da8c:	sub    DWORD PTR [edx+0x6d2d9a99],0x92bac2b1
  41da96:	mov    eax,ds:0xb715b15d
  41da9b:	xchg   edx,eax
  41da9c:	push   eax
  41da9d:	dec    edx
  41da9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da9f:	in     eax,dx
  41daa0:	sub    DWORD PTR [eax+edi*2],edi
  41daa3:	loop   0x41da76
  41daa5:	push   cs
  41daa6:	inc    esp
  41daa8:	cdq    
  41daa9:	pop    ss
  41daaa:	sar    BYTE PTR [esp+edx*1+0x62],1
  41daae:	dec    ebx
  41daaf:	lahf   
  41dab0:	and    ebx,DWORD PTR [edi+edi*8+0x701016f7]
  41dab7:	iret   
  41dab8:	and    eax,0x2d3c48c9
  41dabd:	fs mov ah,0x47
  41dac0:	test   eax,0xa5f6b8c1
  41dac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dac6:	sahf   
  41dac7:	iret   
  41dac8:	adc    DWORD PTR [ebx+0x13f6ca2a],esi
  41dace:	jnp    0x41daca
  41dad0:	into   
  41dad1:	adc    al,0xd
  41dad3:	scas   al,BYTE PTR es:[edi]
  41dad4:	sbb    dl,BYTE PTR [ebp-0x63]
  41dad7:	add    al,0xff
  41dad9:	cwde   
  41dada:	jne    0x41db5b
  41dadc:	psubq  mm1,QWORD PTR [ebp-0x65]
  41dae0:	test   eax,0xa41160c3
  41dae5:	and    dl,ah
  41dae7:	arpl   WORD PTR [ecx+0x67f3f365],dx
  41daed:	test   al,0x35
  41daef:	xor    al,0x25
  41daf1:	xchg   ebp,eax
  41daf2:	lods   eax,DWORD PTR ds:[esi]
  41daf3:	cmp    al,0xa0
  41daf5:	shr    DWORD PTR [esi],1
  41daf7:	mov    esi,0xd5b7cc5a
  41dafc:	and    BYTE PTR [eax-0x36443c64],bl
  41db02:	sub    BYTE PTR [edx],cl
  41db04:	fstp   DWORD PTR [eax-0x2826f446]
  41db0a:	les    ecx,FWORD PTR [ebp+0x7dc5b62d]
  41db10:	xor    dh,BYTE PTR [ebp+0x3a]
  41db13:	fst    DWORD PTR [edi+edi*1]
  41db16:	mov    edi,0x71036993
  41db1b:	xor    bh,BYTE PTR ds:0x371830d1
  41db21:	mov    esp,0x64e8c32
  41db26:	dec    eax
  41db27:	mov    ecx,0xb4906077
  41db2c:	loope  0x41db94
  41db2e:	and    ecx,esp
  41db30:	or     al,BYTE PTR [edx-0x358fc2ce]
  41db36:	in     al,dx
  41db37:	pop    esi
  41db38:	mov    bl,0xa1
  41db3a:	out    dx,eax
  41db3b:	fisubr WORD PTR [edi-0x25202d96]
  41db41:	xchg   ecx,eax
  41db42:	pop    esi
  41db43:	in     eax,dx
  41db44:	sbb    ebp,ecx
  41db46:	inc    edi
  41db47:	fld    QWORD PTR [esi]
  41db49:	dec    ebp
  41db4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db4b:	xor    edx,eax
  41db4d:	mov    cl,0x12
  41db4f:	stos   BYTE PTR es:[edi],al
  41db50:	int3   
  41db51:	pop    ss
  41db52:	outs   dx,BYTE PTR ds:[esi]
  41db53:	fnstcw WORD PTR [edx+0x23]
  41db56:	arpl   WORD PTR [ebp+edi*1-0xc],cx
  41db5a:	xor    DWORD PTR [esp+eiz*4],ecx
  41db5d:	mov    cl,0x35
  41db5f:	pusha  
  41db60:	cmc    
  41db61:	mov    gs,WORD PTR [esp+ebp*8]
  41db64:	fsincos 
  41db66:	les    ebp,FWORD PTR ds:0xbf1483f
  41db6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db6d:	test   ch,bl
  41db6f:	aad    0xe2
  41db71:	stos   BYTE PTR es:[edi],al
  41db72:	jb     0x41db33
  41db74:	mov    dh,0x88
  41db76:	push   0x75
  41db78:	in     eax,0x7c
  41db7a:	ss shl cl,1
  41db7d:	cmp    cl,BYTE PTR [esi-0x9]
  41db80:	xor    DWORD PTR [edi-0x1e159e56],eax
  41db86:	stos   BYTE PTR es:[edi],al
  41db87:	jmp    0x41db6c
  41db89:	dec    esp
  41db8a:	(bad)  
  41db8c:	add    DWORD PTR [esi],edi
  41db8e:	loop   0x41dbe8
  41db90:	test   al,0x4d
  41db92:	and    DWORD PTR [eax],0x55
  41db95:	dec    eax
  41db96:	fidivr WORD PTR [ecx-0x62464832]
  41db9c:	jne    0x41db97
  41db9e:	ins    DWORD PTR es:[edi],dx
  41db9f:	fs jne 0x41db6c
  41dba2:	xchg   BYTE PTR [ebp-0x57ce67],dl
  41dba8:	push   edi
  41dba9:	ins    DWORD PTR es:[edi],dx
  41dbaa:	pop    edx
  41dbab:	ja     0x41dbb3
  41dbad:	(bad)  
  41dbb0:	adc    eax,0x64359cfb
  41dbb5:	mov    ebx,ebx
  41dbb7:	pop    ebx
  41dbb8:	or     al,0xd8
  41dbba:	push   es
  41dbbb:	nop    DWORD PTR [ecx]
  41dbbe:	dec    esp
  41dbbf:	push   es
  41dbc0:	add    eax,0x9dbc8e46
  41dbc5:	xchg   ebx,eax
  41dbc6:	and    ebp,eax
  41dbc8:	add    eax,0x1aec68d6
  41dbcd:	popa   
  41dbce:	outs   dx,BYTE PTR ds:[esi]
  41dbcf:	push   ebp
  41dbd0:	aas    
  41dbd1:	stos   BYTE PTR es:[edi],al
  41dbd2:	imul   edx,DWORD PTR [ecx+ecx*8+0x43bd43bf],0xffffff95
  41dbda:	jmp    0xeed6:0x2cb0264d
  41dbe1:	stc    
  41dbe2:	scas   al,BYTE PTR es:[edi]
  41dbe3:	arpl   WORD PTR [edx+0x6fa33325],ax
  41dbe9:	int3   
  41dbea:	clc    
  41dbeb:	fcomp  DWORD PTR [ebx+edx*2+0x2595a7c4]
  41dbf2:	fsubr  DWORD PTR [ecx-0x76]
  41dbf5:	cld    
  41dbf6:	pop    ebx
  41dbf7:	mov    al,0x90
  41dbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbfa:	sub    DWORD PTR [ebx-0x14],esp
  41dbfd:	sub    al,0xf5
  41dbff:	dec    esp
  41dc00:	mov    dh,0xbf
  41dc02:	data16 (bad) 
  41dc04:	clc    
  41dc05:	push   edx
  41dc06:	pop    esi
  41dc07:	xchg   edx,eax
  41dc08:	sti    
  41dc09:	jns    0x41dc18
  41dc0b:	cs mov cl,0x4f
  41dc0e:	(bad)  
  41dc0f:	pop    ss
  41dc10:	and    BYTE PTR [edx-0x3f],ch
  41dc13:	pop    ebp
  41dc14:	add    eax,0x7ea2b03e
  41dc19:	adc    al,0xff
  41dc1b:	jmp    0xb75ed322
  41dc20:	fwait
  41dc21:	sub    al,0x70
  41dc23:	in     al,0x5c
  41dc25:	inc    ecx
  41dc26:	mov    al,0xf2
  41dc28:	stos   BYTE PTR es:[edi],al
  41dc29:	lahf   
  41dc2a:	and    eax,0x8c549b4e
  41dc2f:	lock jb 0x41dbc7
  41dc32:	inc    edi
  41dc33:	into   
  41dc34:	leave  
  41dc35:	das    
  41dc36:	inc    edx
  41dc37:	jl     0x41dbd6
  41dc39:	xchg   ebp,eax
  41dc3a:	sub    ebx,DWORD PTR [edi+0x79d79f0b]
  41dc40:	dec    esp
  41dc41:	bound  eax,QWORD PTR [edi+0x161038ec]
  41dc47:	adc    BYTE PTR [esi-0x667742e8],dl
  41dc4d:	adc    dh,al
  41dc4f:	and    al,0xf3
  41dc51:	sbb    bh,cl
  41dc53:	or     esi,DWORD PTR [esi+0x1c]
  41dc56:	xchg   esi,eax
  41dc57:	xchg   DWORD PTR ds:0xf6321d2d,esp
  41dc5d:	or     eax,0xb35b9126
  41dc62:	push   0xaaf93173
  41dc67:	pusha  
  41dc68:	adc    eax,0xfe78f46e
  41dc6d:	and    BYTE PTR [ebx+0x17],dl
  41dc70:	out    0x89,eax
  41dc72:	add    eax,0x2a7894ae
  41dc77:	lock add ch,ch
  41dc7a:	xchg   DWORD PTR [eax+0x15c8b855],ecx
  41dc80:	mov    DWORD PTR [esi],eax
  41dc82:	lods   eax,DWORD PTR ds:[esi]
  41dc83:	inc    esi
  41dc84:	sub    eax,0x1f0617e
  41dc89:	mov    al,ds:0x6a53c0db
  41dc8e:	pushf  
  41dc8f:	cmp    bl,BYTE PTR [eax-0x4deee169]
  41dc95:	imul   eax,esp,0xffffffdb
  41dc98:	pop    ds
  41dc99:	test   bh,ch
  41dc9b:	mov    ebp,DWORD PTR [edx-0x5e]
  41dc9e:	xor    eax,0x10339b1e
  41dca3:	sbb    edi,DWORD PTR [esi]
  41dca5:	aaa    
  41dca6:	sub    DWORD PTR [edx],ebp
  41dca8:	and    al,0x7e
  41dcaa:	test   BYTE PTR [edi+edi*2+0x688c5b6f],0xee
  41dcb2:	repz iret 
  41dcb4:	ror    esp,1
  41dcb6:	mov    BYTE PTR [eax+0x4a],cl
  41dcb9:	or     DWORD PTR [ebx+edi*2+0x11],0x5071451b
  41dcc1:	push   ds
  41dcc2:	pop    edi
  41dcc3:	sbb    bh,cl
  41dcc5:	pop    ds
  41dcc6:	loope  0x41dc5a
  41dcc8:	cmc    
  41dcc9:	sbb    eax,0xa4936129
  41dcce:	in     al,0xf8
  41dcd0:	pop    es
  41dcd1:	in     eax,dx
  41dcd2:	cmp    bh,BYTE PTR [esi+0x6b]
  41dcd5:	lock dec ecx
  41dcd7:	sbb    edi,esp
  41dcd9:	jg     0x41dc9f
  41dcdb:	popf   
  41dcdc:	xlat   BYTE PTR ds:[ebx]
  41dcdd:	sub    DWORD PTR es:0x9e78f584,edx
  41dce4:	(bad)  
  41dce5:	not    ecx
  41dce7:	dec    eax
  41dce8:	inc    ebx
  41dce9:	or     esp,esi
  41dceb:	(bad)  
  41dced:	mov    ch,0x2
  41dcef:	mov    ebx,0xc8c5d772
  41dcf4:	jmp    0x11cec8b
  41dcf9:	mov    edi,0x448db4cb
  41dcfe:	and    al,0x6c
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xffffffd7
  41dd5b:	xchg   ebp,eax
  41dd5c:	dec    ebx
  41dd5d:	jle    0x41dd81
  41dd5f:	inc    edi
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x1238e7e8],bh
  41dd68:	loop   0x41dd61
  41dd6a:	sbb    al,0x41
  41dd6c:	js     0x41dd75
  41dd6e:	xor    BYTE PTR [edi-0x76],0x31
  41dd72:	sub    al,0x30
  41dd74:	out    dx,al
  41dd75:	retf   0x3f90
  41dd78:	lock push 0xda19c5c7
  41dd7e:	lock pop edi
  41dd80:	pop    esp
  41dd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd82:	mov    ds:0x1ad776e4,eax
  41dd87:	test   eax,0xf318cafd
  41dd8c:	test   DWORD PTR gs:[ebx-0x74],edi
  41dd90:	out    0x4a,eax
  41dd92:	sub    bh,dl
  41dd94:	popa   
  41dd95:	push   cs
  41dd96:	and    al,0xe1
  41dd98:	jmp    0x4aea2324
  41dd9d:	adc    DWORD PTR [edx-0x122ec78f],edi
  41dda3:	sbb    ah,BYTE PTR [esi]
  41dda5:	xor    DWORD PTR [ebx],edx
  41dda7:	and    ebx,edx
  41dda9:	cld    
  41ddaa:	jmp    0x41dd3f
  41ddac:	out    0x4c,al
  41ddae:	fnstcw WORD PTR [eax+0x1bfc40b4]
  41ddb4:	ds mov edx,0x285d9924
  41ddba:	arpl   WORD PTR [edx],di
  41ddbc:	lock mov bh,0xb8
  41ddbf:	add    esp,edx
  41ddc1:	int3   
  41ddc2:	sti    
  41ddc3:	push   eax
  41ddc4:	pop    edx
  41ddc5:	in     al,dx
  41ddc6:	rcr    BYTE PTR [eax],cl
  41ddc8:	or     eax,0xc0853291
  41ddcd:	arpl   bp,cx
  41ddcf:	xchg   edx,eax
  41ddd0:	aad    0x2d
  41ddd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddd3:	push   edx
  41ddd4:	mov    bh,0x79
  41ddd6:	add    ah,bh
  41ddd8:	mov    DWORD PTR [eax],esp
  41ddda:	inc    eax
  41dddb:	shl    BYTE PTR [edx+0x3],0x26
  41dddf:	or     DWORD PTR [esi],0x2
  41dde2:	mov    ecx,0x2e65b8d3
  41dde7:	lods   al,BYTE PTR ds:[esi]
  41dde8:	mov    al,0xe3
  41ddea:	int3   
  41ddeb:	xchg   ebp,eax
  41ddec:	sub    edi,ebp
  41ddee:	push   esp
  41ddef:	pop    ds
  41ddf0:	aad    0x16
  41ddf2:	outs   dx,BYTE PTR ds:[esi]
  41ddf3:	nop
  41ddf4:	push   edx
  41ddf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddf6:	aam    0xd6
  41ddf8:	mov    eax,0x8551dd69
  41ddfd:	mov    ebx,DWORD PTR [esi+0x5641e724]
  41de03:	pop    ebp
  41de04:	mov    DWORD PTR [esi-0x5d],esp
  41de07:	stc    
  41de08:	xor    dh,BYTE PTR [edx-0xf77ae6c]
  41de0e:	sbb    eax,0x94fc3dbe
  41de13:	scas   eax,DWORD PTR es:[edi]
  41de14:	push   ecx
  41de15:	addr16 cld 
  41de17:	mov    dh,0xbf
  41de19:	imul   ecx,ecx,0x2c29f9a2
  41de1f:	adc    BYTE PTR [edx+0x78c1d8a8],dh
  41de25:	cli    
  41de26:	push   edi
  41de27:	int    0x6c
  41de29:	sbb    eax,0xc50fcd27
  41de2e:	adc    al,ah
  41de30:	mov    fs,WORD PTR ds:0xb4e3aa30
  41de36:	repnz dec edi
  41de39:	sub    al,0x9e
  41de3b:	repz xchg ecx,eax
  41de3d:	mov    ds:0x4d73cb2c,al
  41de42:	aam    0xfa
  41de44:	ror    BYTE PTR [ebp-0x55],0x2b
  41de48:	cwde   
  41de49:	jg     0x41ddfd
  41de4b:	push   ss
  41de4c:	add    DWORD PTR [ebx],ebp
  41de4e:	xchg   DWORD PTR [esi+0x64],esi
  41de51:	push   ss
  41de52:	mov    esp,0xfbdbe745
  41de57:	mov    bl,0x8
  41de59:	jp     0x41debd
  41de5b:	jecxz  0x41de79
  41de5d:	jno    0x41de2f
  41de5f:	ficomp DWORD PTR [ebx]
  41de61:	fadd   DWORD PTR [ebp-0x23]
  41de64:	or     ebx,DWORD PTR [edi-0x26a5e185]
  41de6a:	jns    0x41dea2
  41de6c:	add    bh,bl
  41de6e:	shl    BYTE PTR [edx],0x49
  41de71:	shl    DWORD PTR [ebx-0x57],0x83
  41de75:	in     eax,dx
  41de76:	int3   
  41de77:	cmp    eax,DWORD PTR [ecx+eiz*8]
  41de7a:	(bad)  
  41de7b:	xchg   esi,eax
  41de7c:	mov    ds:0x32d47870,al
  41de81:	es sar ebp,1
  41de84:	pop    ebx
  41de85:	inc    esi
  41de86:	or     ch,BYTE PTR [edx+eax*1+0x278098a5]
  41de8d:	cdq    
  41de8e:	jnp    0x41deb8
  41de90:	mov    esp,0xd42eb56c
  41de95:	jmp    FWORD PTR [ebx-0x3b]
  41de98:	ret    
  41de99:	mov    dl,0x97
  41de9b:	cdq    
  41de9c:	inc    ebx
  41de9d:	fstp   DWORD PTR [ecx+ebx*8+0x15a49bb]
  41dea4:	sbb    BYTE PTR ds:0xcf8e1933,bh
  41deaa:	adc    ch,dl
  41deac:	ss std 
  41deae:	fadd   DWORD PTR [eax-0x58]
  41deb1:	mov    esi,0x4f69afa6
  41deb6:	(bad)  
  41deb7:	jg     0x41dece
  41deb9:	std    
  41deba:	and    eax,0xda8bc4fb
  41debf:	ret    
  41dec0:	es xchg esp,eax
  41dec2:	xlat   BYTE PTR ds:[ebx]
  41dec3:	sbb    al,0x7f
  41dec5:	and    esp,DWORD PTR [eax-0x62a0b711]
  41decb:	mov    al,ds:0x4814364d
  41ded0:	jmp    0x6b83e72a
  41ded5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded6:	jmp    0xc7a21b5
  41dedb:	dec    ecx
  41dedc:	push   ebx
  41dedd:	in     al,0xad
  41dedf:	add    DWORD PTR ds:0x795073b3,ebp
  41dee5:	mov    BYTE PTR [ebp+0x6b],bh
  41dee8:	dec    ebp
  41dee9:	fist   WORD PTR ds:0x38990775
  41deef:	je     0x41df5b
  41def1:	push   ds
  41def2:	sub    DWORD PTR [eax+eax*4+0x28340aa2],ebx
  41def9:	jg     0x41df0b
  41defb:	xchg   edx,eax
  41defc:	daa    
  41defd:	or     al,0x58
  41deff:	leave  
  41df00:	sub    al,0xcd
  41df02:	pop    eax
  41df03:	retf   
  41df04:	xor    BYTE PTR [ecx-0x50cba035],0x39
  41df0b:	out    dx,al
  41df0c:	(bad)  
  41df0d:	(bad)  
  41df0f:	jae    0x41def5
  41df11:	aas    
  41df12:	mov    ebx,0x94e52d1
  41df17:	push   esi
  41df18:	mov    ah,0x97
  41df1a:	adc    DWORD PTR [esi+0x6a],esi
  41df1d:	aaa    
  41df1e:	inc    edx
  41df1f:	mov    esp,0x21ab34d1
  41df25:	sub    DWORD PTR [ecx+edx*1+0x35],ecx
  41df29:	jmp    0x41df68
  41df2b:	hlt    
  41df2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2d:	stc    
  41df2e:	cmp    esp,DWORD PTR [esi+0x53a1d708]
  41df34:	mov    al,ds:0x8c5ad740
  41df39:	and    al,0x19
  41df3b:	(bad)  
  41df3c:	mov    edi,0x27298b84
  41df41:	stos   DWORD PTR es:[edi],eax
  41df42:	adc    esp,ecx
  41df44:	or     esi,DWORD PTR [ebp+0x4c]
  41df47:	imul   ebx,DWORD PTR [ebp+0x51],0x19
  41df4b:	or     bh,BYTE PTR [ecx-0x4a]
  41df4e:	mov    ds:0xaed7be17,eax
  41df53:	aaa    
  41df54:	ror    DWORD PTR [esi-0x1337b11],0x89
  41df5b:	and    esi,ebx
  41df5d:	sub    DWORD PTR [eax-0x50],ebx
  41df60:	dec    edi
  41df61:	lods   al,BYTE PTR ds:[esi]
  41df62:	xor    edi,DWORD PTR ds:0x1c9f98a1
  41df68:	xor    esi,DWORD PTR [ecx+ecx*8]
  41df6b:	xor    al,0x6
  41df6d:	gs pop es
  41df6f:	ffreep st(0)
  41df71:	dec    edi
  41df72:	sub    edi,DWORD PTR [edi+0x519b840]
  41df78:	jg     0x41df13
  41df7a:	and    eax,0x24aa5fac
  41df7f:	sbb    edi,DWORD PTR [edx+0xb]
  41df82:	push   esp
  41df83:	jle    0x41dfe5
  41df85:	imul   ecx,DWORD PTR ds:0x191fb38c,0xa339b47
  41df8f:	pop    ecx
  41df90:	sbb    BYTE PTR [ebp-0x5d567273],al
  41df96:	inc    ecx
  41df97:	and    eax,0x172ab669
  41df9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df9d:	cmp    DWORD PTR [ebp+0x61],edi
  41dfa0:	and    BYTE PTR [ebx+eax*4-0x578b2471],dl
  41dfa7:	sahf   
  41dfa8:	inc    eax
  41dfa9:	or     al,0x85
  41dfab:	pop    ebp
  41dfac:	xchg   edi,eax
  41dfad:	je     0x41df6b
  41dfaf:	mov    eax,ds:0x6bc5ceb8
  41dfb4:	leave  
  41dfb5:	popa   
  41dfb6:	cmp    DWORD PTR [ebx+0x7c],ebx
  41dfb9:	shl    DWORD PTR [edi],0x8f
  41dfbc:	sub    al,0x9a
  41dfbe:	mov    esp,0x4f44292c
  41dfc3:	mov    esi,0x46e97760
  41dfc8:	inc    ecx
  41dfc9:	sub    al,BYTE PTR ds:[ecx+0x30]
  41dfcd:	mov    ebp,0xf85a38f6
  41dfd2:	pop    ds
  41dfd3:	cs iret 
  41dfd5:	call   0x4a007025
  41dfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfdb:	lods   eax,DWORD PTR ds:[esi]
  41dfdc:	jl     0x41e044
  41dfde:	or     BYTE PTR [edi+eiz*4+0x4f0cbe1],dl
  41dfe5:	shr    DWORD PTR ss:[edx+0x782e5e1],1
  41dfec:	rcl    DWORD PTR [edi-0xfb46739],cl
  41dff2:	cwde   
  41dff3:	dec    ebp
  41dff4:	punpckhbw mm6,QWORD PTR [edx]
  41dff7:	jle    0x41e020
  41dff9:	dec    edi
  41dffa:	sbb    DWORD PTR [ebp-0x4b06a298],ecx
  41e000:	fst    DWORD PTR [ebx-0x60]
  41e003:	or     al,0xf2
  41e005:	xchg   esp,eax
  41e006:	adc    esi,DWORD PTR [ecx]
  41e008:	mov    WORD PTR [ecx-0x17],fs
  41e00b:	scas   eax,DWORD PTR es:[edi]
  41e00c:	mov    al,ds:0x20bdbc1d
  41e011:	retf   0xc1c3
  41e014:	lahf   
  41e015:	mov    al,0xe8
  41e017:	fisub  WORD PTR [edi+ecx*1+0x5]
  41e01b:	icebp  
  41e01c:	mov    ecx,0xd17a980
  41e021:	dec    esi
  41e022:	inc    ecx
  41e023:	lds    esi,FWORD PTR [esi]
  41e025:	mov    edi,0x28aee166
  41e02a:	pop    eax
  41e02b:	or     al,0xa4
  41e02d:	adc    esp,DWORD PTR [ebx-0x19665319]
  41e033:	xchg   DWORD PTR [ebp-0x1888997c],eax
  41e039:	call   edi
  41e03b:	xor    ebp,DWORD PTR [edx]
  41e03d:	mov    eax,ds:0xa7dd9c18
  41e042:	add    eax,0xa827cabd
  41e047:	setg   BYTE PTR [edi]
  41e04a:	push   es
  41e04b:	mov    bh,0xeb
  41e04d:	in     al,0x70
  41e04f:	fisttp QWORD PTR [ebp-0x6bce2816]
  41e055:	fist   WORD PTR [ebx-0x59]
  41e058:	popf   
  41e059:	das    
  41e05a:	mov    WORD PTR [ecx-0x69dbdc84],ss
  41e060:	push   eax
  41e061:	cmp    BYTE PTR [edi+0x476ca2e0],bh
  41e067:	test   BYTE PTR [ecx+esi*4],ch
  41e06a:	lahf   
  41e06b:	mov    ah,0x48
  41e06d:	aad    0xaf
  41e06f:	stos   DWORD PTR es:[edi],eax
  41e070:	cmp    ah,BYTE PTR [ebp+0x54]
  41e073:	arpl   WORD PTR [edi],ax
  41e075:	dec    edx
  41e076:	mov    esi,0x9b1f7c18
  41e07b:	pushf  
  41e07c:	mov    eax,ds:0xf23d6341
  41e081:	xor    DWORD PTR [esi+0x37ce0ff],ecx
  41e087:	pop    ss
  41e088:	enter  0x3697,0xf7
  41e08c:	jp     0x41e060
  41e08e:	mov    ebp,0x51ccf55a
  41e093:	loopne 0x41e034
  41e095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e096:	cmp    BYTE PTR [esi+0x5b],dh
  41e099:	aas    
  41e09a:	jbe    0x41e07f
  41e09c:	shl    BYTE PTR [ecx-0x4125f6b2],1
  41e0a2:	addr16 push esi
  41e0a4:	cmp    al,0xed
  41e0a6:	adc    cl,BYTE PTR [edi+0x7e615b7]
  41e0ac:	in     eax,dx
  41e0ad:	sub    edx,DWORD PTR [ebp-0x2615df22]
  41e0b3:	xlat   BYTE PTR ds:[ebx]
  41e0b4:	cli    
  41e0b5:	cmp    al,0x87
  41e0b7:	cmp    DWORD PTR [edx-0x3f8a140f],ecx
  41e0bd:	in     al,0x83
  41e0bf:	lock mov edi,0x5bf3d622
  41e0c5:	sti    
  41e0c6:	(bad)  
  41e0c8:	idiv   DWORD PTR ds:[esi]
  41e0cb:	mov    dl,BYTE PTR [edx-0x6ea1a3e]
  41e0d1:	add    al,0x9b
  41e0d3:	loopne 0x41e0af
  41e0d5:	sub    DWORD PTR [ebp+ebx*1+0x15],edi
  41e0d9:	das    
  41e0da:	int    0xf0
  41e0dc:	cmp    eax,0xf93b4485
  41e0e1:	ficomp WORD PTR [ecx-0x61f5d2c5]
  41e0e7:	jb     0x41e135
  41e0e9:	outs   dx,DWORD PTR ds:[esi]
  41e0ea:	lea    ebp,[ecx]
  41e0ec:	sbb    BYTE PTR [ebx+0x6e],cl
  41e0ef:	stos   BYTE PTR es:[edi],al
  41e0f0:	mov    ebx,0xacd9a0b4
  41e0f5:	mov    dh,0x46
  41e0f8:	cmc    
  41e0f9:	cmp    eax,0x92ec641c
  41e0fe:	jecxz  0x41e0c4
  41e100:	jl     0x41e0b0
  41e102:	arpl   WORD PTR [eax],cx
  41e104:	clc    
  41e105:	rol    esp,1
  41e107:	pushf  
  41e108:	icebp  
  41e109:	jne    0x41e15b
  41e10b:	ins    DWORD PTR es:[edi],dx
  41e10c:	cdq    
  41e10d:	push   ebp
  41e10e:	ins    DWORD PTR es:[edi],dx
  41e10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e110:	inc    edx
  41e111:	jns    0x41e18a
  41e113:	dec    esi
  41e114:	xlat   BYTE PTR ds:[ebx]
  41e115:	cmp    DWORD PTR [ecx],eax
  41e117:	add    al,0xc7
  41e119:	inc    esp
  41e11a:	and    al,0x10
  41e11c:	sbb    al,BYTE PTR [edx+0x0]
  41e11f:	add    BYTE PTR [ebx+0x25102444],cl
  41e125:	inc    esp
  41e126:	ret    0xffff
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	fs data16 jg 0x41e1a5
  41e1f5:	(bad)  
  41e1f6:	aas    
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1+0x26901818],bh
  41e1ff:	mov    bh,0x2f
  41e201:	xchg   BYTE PTR [esi+0x61],ch
  41e204:	mov    ?,WORD PTR [edx-0x774baf10]
  41e20a:	stos   DWORD PTR es:[edi],eax
  41e20b:	(bad)  [esp+eiz*8-0xc]
  41e20f:	sbb    eax,0x466eeed8
  41e214:	daa    
  41e215:	and    DWORD PTR [esi+0x69b5d586],0xffffffaf
  41e21c:	dec    esp
  41e21d:	das    
  41e21e:	push   cs
  41e21f:	shl    DWORD PTR [esp+eiz*8],1
  41e222:	pusha  
  41e223:	ds xor esi,ecx
  41e226:	pop    eax
  41e227:	aad    0x4d
  41e229:	scas   eax,DWORD PTR es:[edi]
  41e22a:	sub    esi,edi
  41e22c:	(bad)
  41e22f:	jae    0x41e272
  41e231:	adc    BYTE PTR [edx],al
  41e233:	pop    ss
  41e234:	xchg   esp,eax
  41e235:	push   eax
  41e236:	sti    
  41e237:	or     eax,ebp
  41e239:	fisttp DWORD PTR [ecx-0x13c092ec]
  41e23f:	call   0x66690acb
  41e244:	sbb    eax,0x89d317fa
  41e249:	aaa    
  41e24a:	adc    al,0x54
  41e24c:	les    esi,FWORD PTR [ebx-0x2fdf2242]
  41e252:	mov    dh,BYTE PTR [ebx+0x558a1db]
  41e258:	outs   dx,DWORD PTR ds:[esi]
  41e259:	je     0x41e29b
  41e25b:	outs   dx,DWORD PTR ds:[esi]
  41e25c:	test   al,0xf9
  41e25e:	in     eax,dx
  41e25f:	jb     0x41e2cc
  41e261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e262:	fimul  DWORD PTR [edx]
  41e264:	cs push esi
  41e266:	and    eax,0x6db05436
  41e26b:	(bad)  
  41e26c:	cmp    bl,ah
  41e26e:	or     DWORD PTR ds:[ecx+0x68],edx
  41e272:	pop    ebp
  41e273:	test   BYTE PTR [ebx+0x59],ch
  41e276:	inc    edx
  41e277:	call   0xc74a:0x184f6244
  41e27e:	sbb    dl,BYTE PTR [esi]
  41e280:	mov    dh,0x50
  41e282:	jmp    0xfa968727
  41e287:	push   ebx
  41e288:	or     bl,BYTE PTR [ebx+0x433c1b3a]
  41e28e:	aaa    
  41e28f:	dec    ebp
  41e290:	sub    DWORD PTR [edx-0x1a0512dd],0xdbd89e8f
  41e29a:	pop    ebx
  41e29b:	and    al,0xc2
  41e29d:	fidivr DWORD PTR [eax]
  41e29f:	xchg   ebx,eax
  41e2a0:	and    ebx,esp
  41e2a2:	inc    esi
  41e2a3:	cmp    al,0xd7
  41e2a5:	das    
  41e2a6:	(bad)  
  41e2a7:	into   
  41e2a8:	cld    
  41e2a9:	int    0x95
  41e2ab:	pop    DWORD PTR [ebx+edx*8-0xe]
  41e2af:	cwde   
  41e2b0:	push   ds
  41e2b1:	call   0xe8b460d9
  41e2b6:	inc    edx
  41e2b7:	push   cs
  41e2b8:	or     DWORD PTR [ecx-0x480205d1],eax
  41e2be:	push   ebx
  41e2bf:	sub    BYTE PTR [esi+esi*8+0x7d26a1d4],ah
  41e2c6:	add    DWORD PTR [ebx-0x21380c7d],ebx
  41e2cc:	mov    edx,0x479cef13
  41e2d1:	cmp    esp,DWORD PTR [edx]
  41e2d3:	mov    esi,DWORD PTR [ebx+0x74]
  41e2d6:	jne    0x41e296
  41e2d8:	dec    ebp
  41e2d9:	in     al,0x32
  41e2db:	scas   eax,DWORD PTR es:[edi]
  41e2dc:	or     ah,BYTE PTR [ecx]
  41e2de:	daa    
  41e2df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e0:	cmp    dh,ch
  41e2e2:	jmp    0x9593:0x811
  41e2e8:	adc    bh,BYTE PTR es:[ebp+eiz*4-0x7560a78d]
  41e2f0:	aas    
  41e2f1:	mov    eax,0xde04bdf
  41e2f6:	sti    
  41e2f7:	or     ecx,DWORD PTR [ecx]
  41e2f9:	inc    eax
  41e2fa:	jns    0x41e2bd
  41e2fc:	jo     0x41e285
  41e2fe:	jle    0x41e28e
  41e300:	jmp    0x91b2255a
  41e305:	sti    
  41e306:	adc    BYTE PTR [eax-0x3d8e8f77],dh
  41e30c:	sub    eax,0x7c9ccb54
  41e311:	sbb    cl,ch
  41e313:	pop    ds
  41e314:	mov    cl,0x3e
  41e316:	fs popf 
  41e318:	or     dh,BYTE PTR [edx+0x6]
  41e31b:	inc    ecx
  41e31c:	mov    ds:0x8758b8b2,eax
  41e321:	and    dh,0xe1
  41e324:	dec    eax
  41e325:	mov    ds:0x350c5450,al
  41e32a:	sbb    al,0xa9
  41e32c:	sti    
  41e32d:	into   
  41e32e:	ret    0x96eb
  41e331:	pop    ebx
  41e332:	icebp  
  41e333:	cdq    
  41e334:	push   edi
  41e335:	jnp    0x41e325
  41e337:	out    dx,eax
  41e338:	push   0x8406b0b9
  41e33d:	jno    0x41e3a5
  41e33f:	push   0xb4b7b01c
  41e344:	iret   
  41e345:	dec    ebp
  41e346:	jb     0x41e2f5
  41e348:	repz mov dl,0x84
  41e34b:	add    al,0xc9
  41e34d:	fwait
  41e34e:	addr16 sbb al,0x7
  41e351:	leave  
  41e352:	pop    ebp
  41e353:	dec    ebp
  41e354:	inc    edx
  41e355:	outs   dx,BYTE PTR ds:[esi]
  41e356:	mov    ds:0xca390755,eax
  41e35b:	in     al,dx
  41e35c:	repz or BYTE PTR [ecx-0x74b4a4cd],al
  41e363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e364:	stos   DWORD PTR es:[edi],eax
  41e365:	and    DWORD PTR [ecx],ecx
  41e367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e368:	xacquire xchg DWORD PTR [esi+ebx*2-0x2b],eax
  41e36d:	sahf   
  41e36e:	ret    
  41e36f:	jmp    0x7869:0x23c11555
  41e376:	call   0x90fd5f5
  41e37b:	push   eax
  41e37c:	jno    0x41e3bd
  41e37e:	enter  0xe14e,0xe9
  41e382:	aas    
  41e383:	jo     0x41e3f1
  41e385:	arpl   si,sp
  41e387:	pop    ebp
  41e388:	mov    bh,0xa7
  41e38a:	mov    cl,0x8b
  41e38c:	into   
  41e38d:	xchg   BYTE PTR [edx+0x25958b53],bl
  41e393:	add    bl,BYTE PTR [ebx]
  41e395:	or     eax,0x15bf0d0
  41e39a:	loope  0x41e39d
  41e39c:	loop   0x41e3c4
  41e39e:	js     0x41e3c3
  41e3a0:	mov    ecx,0xed31e002
  41e3a5:	popf   
  41e3a6:	mov    ch,0x3e
  41e3a8:	into   
  41e3a9:	(bad)  
  41e3aa:	shl    ah,1
  41e3ac:	xchg   ebp,edi
  41e3ae:	scas   eax,DWORD PTR es:[edi]
  41e3af:	mov    eax,ds:0xb66b36d0
  41e3b4:	jbe    0x41e344
  41e3b6:	ins    BYTE PTR es:[edi],dx
  41e3b7:	test   al,0xd8
  41e3b9:	mov    edx,0xe8509ff7
  41e3be:	mov    ah,0x31
  41e3c0:	lods   eax,DWORD PTR ds:[esi]
  41e3c2:	xchg   BYTE PTR [ebx],bh
  41e3c4:	dec    edx
  41e3c5:	repz cdq 
  41e3c7:	pop    edx
  41e3c8:	out    0x81,al
  41e3ca:	cli    
  41e3cb:	pop    eax
  41e3cc:	loope  0x41e3e4
  41e3ce:	int    0x38
  41e3d0:	and    al,0xd3
  41e3d2:	push   edi
  41e3d3:	sbb    bl,ah
  41e3d5:	and    ebp,DWORD PTR [ecx-0x6b]
  41e3d8:	sub    ch,BYTE PTR [ebx+0x40]
  41e3db:	rcr    DWORD PTR [ebx+edi*2],1
  41e3de:	pop    esi
  41e3df:	adc    bh,BYTE PTR [eax-0x7c7dd1a9]
  41e3e5:	inc    edx
  41e3e6:	addr16 pop ebp
  41e3e8:	data16 sbb ch,BYTE PTR [edx-0x34]
  41e3ec:	dec    esi
  41e3ed:	or     BYTE PTR [ebx+0x72],al
  41e3f0:	in     eax,dx
  41e3f1:	sub    al,0x7f
  41e3f3:	out    dx,eax
  41e3f4:	cwde   
  41e3f5:	and    ch,dl
  41e3f7:	out    dx,al
  41e3f8:	rcl    BYTE PTR [ebx+0x445e11bb],1
  41e3fe:	add    dh,BYTE PTR [edi]
  41e400:	sbb    al,0xca
  41e402:	push   cs
  41e403:	inc    ebp
  41e404:	and    bl,cl
  41e406:	imul   eax,DWORD PTR [ebp+0x647b8bba],0x19
  41e40d:	xor    DWORD PTR [ecx],0x3a0f81b2
  41e413:	cmp    BYTE PTR [ecx+0x68],0xb3
  41e417:	rol    DWORD PTR [edi],cl
  41e419:	mov    dh,0x2d
  41e41b:	jmp    0x41e45e
  41e41d:	jg     0x41e3fe
  41e41f:	push   esi
  41e420:	fwait
  41e421:	and    al,0xed
  41e423:	push   es
  41e424:	fdiv   QWORD PTR [ecx+0x2a330ce]
  41e42a:	add    BYTE PTR [ecx-0x3d],al
  41e42d:	out    dx,eax
  41e42e:	add    al,0x97
  41e430:	sbb    al,0x46
  41e432:	sbb    DWORD PTR [edx-0x25],eax
  41e435:	imul   edx,DWORD PTR gs:[ecx+0x40bd2f7d],0xffffffaa
  41e43d:	mov    eax,0x38ac3312
  41e442:	mov    ?,WORD PTR [ebp-0x3566ef18]
  41e448:	dec    edi
  41e449:	xchg   ebx,eax
  41e44a:	pop    ebx
  41e44b:	mov    dl,0xbc
  41e44d:	jb     0x41e4a7
  41e44f:	arpl   WORD PTR [ebx+0x4e],bp
  41e452:	fidiv  WORD PTR [ebx+0x367e7694]
  41e458:	cmp    ebx,DWORD PTR [edi-0x22]
  41e45b:	mov    esp,0x9805aeed
  41e460:	mov    ebx,0xa1befa75
  41e465:	cmp    eax,0x9af44258
  41e46a:	or     al,0xb4
  41e46c:	dec    ebp
  41e46d:	mov    ebx,DWORD PTR ds:0xd03f7708
  41e473:	push   edx
  41e474:	jnp    0x41e3f7
  41e476:	scas   al,BYTE PTR es:[edi]
  41e477:	xchg   ch,al
  41e479:	(bad)  
  41e47a:	pop    ebx
  41e47b:	jge    0x41e484
  41e47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47e:	mov    eax,0xcce934b8
  41e483:	mov    ecx,0xdcde81fb
  41e488:	push   edi
  41e489:	xor    esi,edx
  41e48b:	imul   ebp,DWORD PTR [eax+0x7425c836],0x32b29ad7
  41e495:	jno    0x41e477
  41e497:	cld    
  41e498:	adc    eax,0xffc52489
  41e49d:	adc    eax,0x6ecc2923
  41e4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4a3:	and    BYTE PTR [edi-0xd],ah
  41e4a6:	sub    ch,BYTE PTR [ecx+0x68]
  41e4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4aa:	add    BYTE PTR [edi+0x7b],cl
  41e4ad:	sbb    eax,0xfb64828d
  41e4b2:	sti    
  41e4b3:	add    al,0x2b
  41e4b5:	jnp    0x41e52c
  41e4b7:	jb     0x41e4ff
  41e4b9:	repz adc DWORD PTR [eax-0x6f],edx
  41e4bd:	mov    al,ds:0xcc854da2
  41e4c2:	pop    ebx
  41e4c3:	jecxz  0x41e499
  41e4c5:	mov    ch,0x8e
  41e4c7:	pop    eax
  41e4c8:	cmp    al,BYTE PTR [esi+0x69ab113b]
  41e4ce:	int    0x24
  41e4d0:	lahf   
  41e4d1:	sub    ecx,DWORD PTR [esi-0x107ce73a]
  41e4d7:	retf   
  41e4d8:	ret    
  41e4d9:	push   0xffffffdc
  41e4db:	add    al,0xe5
  41e4dd:	aaa    
  41e4de:	add    eax,0xffffffa7
  41e4e1:	cmp    bh,bl
  41e4e3:	test   DWORD PTR [edx-0x55],eax
  41e4e6:	ja     0x41e543
  41e4e8:	and    ebx,DWORD PTR [ebx-0x7e5f3114]
  41e4ee:	stos   BYTE PTR es:[edi],al
  41e4ef:	test   BYTE PTR [ecx],ah
  41e4f1:	mov    edx,0xf563641a
  41e4f6:	dec    edx
  41e4f7:	adc    esi,DWORD PTR [ecx]
  41e4f9:	ret    0x6d8d
  41e4fc:	xor    BYTE PTR [ecx-0x528652bb],ah
  41e502:	xor    edx,DWORD PTR [ebx]
  41e504:	mov    ebx,0xb581b9d9
  41e509:	push   esp
  41e50a:	xor    esp,DWORD PTR [ecx+ecx*1-0x5b]
  41e50e:	xor    DWORD PTR [ecx-0x4cf6a582],0xffffffb6
  41e515:	loopne 0x41e581
  41e517:	std    
  41e518:	adc    dl,BYTE PTR [ebp-0x49]
  41e51b:	sbb    ch,bl
  41e51d:	repz adc cl,ch
  41e520:	cli    
  41e521:	adc    BYTE PTR ds:0xdbfaeaab,bh
  41e527:	(bad)  
  41e529:	(bad)  [esi+0x21]
  41e52c:	retf   
  41e52d:	stos   DWORD PTR es:[edi],eax
  41e52e:	popf   
  41e52f:	mov    ebp,DWORD PTR [eax]
  41e531:	ins    BYTE PTR es:[edi],dx
  41e532:	shl    BYTE PTR [ecx-0x5191bd1e],0x69
  41e539:	inc    ebp
  41e53a:	pop    edi
  41e53b:	sub    eax,0x14f95101
  41e540:	add    al,0xc2
  41e542:	ficom  WORD PTR ds:0x63fafba2
  41e548:	test   eax,0x5f668373
  41e54d:	bound  esp,QWORD PTR [esi-0x7cc1122f]
  41e553:	inc    edi
  41e554:	iret   
  41e555:	push   cs
  41e556:	aad    0x60
  41e558:	inc    ecx
  41e559:	inc    edi
  41e55a:	jmp    0x865d71ae
  41e55f:	outs   dx,DWORD PTR ds:[esi]
  41e560:	lock out dx,eax
  41e562:	call   0xcbdd:0xb198cd46
  41e569:	ds jle 0x41e50d
  41e56c:	rol    dh,cl
  41e56e:	jg     0x41e5a6
  41e570:	mov    ds:0x57a08677,eax
  41e575:	call   0xfa4c:0x7a70e070
  41e57c:	xor    DWORD PTR [edx-0x62f8435f],esp
  41e582:	hlt    
  41e583:	push   eax
  41e584:	xchg   esp,eax
  41e585:	mov    ecx,0xa8314629
  41e58a:	xor    bh,ch
  41e58c:	sub    al,0xa6
  41e58e:	test   eax,0x42b559f7
  41e593:	int    0xa5
  41e595:	xchg   edx,ebp
  41e597:	add    DWORD PTR [ebp+0x331b5392],edx
  41e59d:	jo     0x41e5c9
  41e59f:	or     ecx,DWORD PTR [eax+0x5ed0576a]
  41e5a5:	jbe    0x41e533
  41e5a7:	stos   DWORD PTR es:[edi],eax
  41e5a8:	ss push ecx
  41e5aa:	(bad)  [edi+0x3e]
  41e5ad:	xlat   BYTE PTR ds:[ebx]
  41e5ae:	sbb    al,0xc1
  41e5b0:	loopne 0x41e5b4
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0xbfaae715
  41e5c6:	int3   
  41e5c7:	imul   esi,DWORD PTR [eax+0x1816376b],0xffffffbc
  41e5ce:	adc    bl,BYTE PTR [eax]
  41e5d0:	sbb    cl,ch
  41e5d2:	or     al,0x69
  41e5d4:	das    
  41e5d5:	mov    esp,0xdf237971
  41e5da:	adc    al,0x86
  41e5dc:	cmp    al,0x64
  41e5de:	arpl   WORD PTR [ebx],dx
  41e5e0:	sub    al,0xb3
  41e5e2:	push   esi
  41e5e3:	cmp    DWORD PTR [ebx-0x74],esp
  41e5e6:	xor    BYTE PTR [edi-0x37b871c7],bl
  41e5ec:	dec    ebx
  41e5ed:	sbb    al,BYTE PTR [ecx+0x1e8670be]
  41e5f3:	call   0x6a72ba48
  41e5f8:	pop    es
  41e5f9:	inc    edi
  41e5fa:	hlt    
  41e5fb:	pop    eax
  41e5fc:	stos   DWORD PTR es:[edi],eax
  41e5fd:	or     DWORD PTR [ebx],ebp
  41e5ff:	retf   0x7369
  41e602:	xchg   ecx,eax
  41e603:	ficom  WORD PTR [eax+0x4c4a2528]
  41e609:	sahf   
  41e60a:	jl     0x41e5ce
  41e60c:	inc    ecx
  41e60d:	cmp    BYTE PTR [edx-0x7bce567c],bl
  41e613:	sbb    DWORD PTR [edx-0x67f1bafe],edi
  41e619:	dec    esp
  41e61a:	out    dx,eax
  41e61b:	lods   eax,DWORD PTR ds:[esi]
  41e61c:	imul   edi,DWORD PTR [esi+ebp*8-0xa],0x6050344e
  41e624:	test   BYTE PTR [edi],ch
  41e626:	mov    bl,0x99
  41e628:	fistp  DWORD PTR [ecx+0x76]
  41e62b:	adc    DWORD PTR [ebx-0x3d95c0cf],0x17
  41e632:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41e634:	mov    eax,ds:0xd486751d
  41e639:	mov    BYTE PTR [eax-0x2622709],0xb5
  41e640:	xor    DWORD PTR [ebx-0x36],esp
  41e643:	fmul   QWORD PTR [ecx]
  41e646:	mov    dl,0x9c
  41e648:	cdq    
  41e649:	pop    eax
  41e64a:	jnp    0x41e62e
  41e64c:	retf   0x4d7c
  41e64f:	stc    
  41e650:	shr    DWORD PTR [ebp+0x3d60ad96],1
  41e656:	test   DWORD PTR [edi+0x32],esp
  41e659:	rol    DWORD PTR [ebx],cl
  41e65b:	cli    
  41e65c:	in     eax,dx
  41e65d:	adc    bh,BYTE PTR [edx]
  41e65f:	cmp    eax,0x84d46377
  41e664:	pop    ds
  41e665:	mov    ds:0x61f5307b,eax
  41e66a:	adc    eax,0xe7ecc4f4
  41e66f:	xchg   edx,eax
  41e670:	sub    dh,BYTE PTR [ebx+ebx*2+0x6829b437]
  41e677:	bnd jo 0x41e65e
  41e67a:	mov    bh,0x41
  41e67c:	dec    BYTE PTR [ebp-0x78]
  41e67f:	mov    dl,0x87
  41e681:	pushf  
  41e682:	(bad)  [edi+edi*8]
  41e685:	or     DWORD PTR ds:0xd4a1174,esi
  41e68b:	ins    DWORD PTR es:[edi],dx
  41e68c:	jecxz  0x41e650
  41e68e:	fdivr  QWORD PTR [eax+0x654a694e]
  41e694:	mov    al,ds:0x4b4c13a4
  41e699:	test   eax,0x6313a9a0
  41e69e:	jp     0x41e66b
  41e6a0:	xor    BYTE PTR [edi+0x42d7c2f0],0x4b
  41e6a7:	xchg   edx,eax
  41e6a8:	mov    eax,ds:0xba7029eb
  41e6ad:	jp     0x41e696
  41e6af:	addr16 (bad) 
  41e6b2:	fiadd  WORD PTR [ebx-0x14]
  41e6b5:	mov    esp,0x2ea1a1f5
  41e6ba:	pop    esi
  41e6bb:	dec    DWORD PTR [edx-0x2596eb8d]
  41e6c1:	(bad)  
  41e6c2:	sub    dl,BYTE PTR ds:0x65291b22
  41e6c8:	call   0x9cd5:0xce2a5981
  41e6cf:	xor    al,0x34
  41e6d1:	jl     0x41e696
  41e6d3:	pop    esi
  41e6d4:	scas   al,BYTE PTR es:[edi]
  41e6d5:	loope  0x41e670
  41e6d7:	or     al,0xda
  41e6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6da:	pop    es
  41e6db:	xor    cl,0xdf
  41e6de:	cmp    BYTE PTR [eax+0x1c8603a],0xe8
  41e6e5:	(bad)  
  41e6e6:	out    dx,eax
  41e6e7:	test   BYTE PTR ds:0xe49eb6cb,dh
  41e6ed:	out    dx,al
  41e6ee:	loope  0x41e73c
  41e6f0:	cld    
  41e6f1:	dec    esp
  41e6f2:	shr    DWORD PTR [ecx+edx*1-0x4a5c1e0],1
  41e6f9:	jl     0x41e75e
  41e6fb:	jg     0x41e6b6
  41e6fd:	mul    edi
  41e6ff:	(bad)  
  41e700:	inc    ebx
  41e701:	pusha  
  41e702:	(bad)  [ebp+0x4200e9c4]
  41e708:	lea    ecx,[edx+eiz*2]
  41e70b:	fcom   QWORD PTR [esi]
  41e70d:	push   ds
  41e70e:	data16 fdivrp st(7),st
  41e711:	shl    edi,cl
  41e713:	aam    0x97
  41e715:	outs   dx,BYTE PTR ds:[esi]
  41e716:	sbb    cl,BYTE PTR [ecx+eiz*2-0x1cf3b885]
  41e71d:	push   esp
  41e71e:	loop   0x41e72f
  41e720:	lahf   
  41e721:	jns    0x41e6e0
  41e723:	loop   0x41e758
  41e725:	jge    0x41e701
  41e727:	cmp    al,0x67
  41e729:	mul    DWORD PTR [edx+0x62e52d5]
  41e72f:	adc    ch,BYTE PTR [eax-0x27]
  41e732:	add    DWORD PTR ss:[edi],0xd1f1222d
  41e739:	retf   
  41e73a:	push   ebx
  41e73b:	popa   
  41e73c:	int3   
  41e73d:	xchg   ebp,eax
  41e73e:	jae    0x41e6f5
  41e740:	push   ebx
  41e741:	inc    ecx
  41e742:	imul   edi,DWORD PTR [ebx+0x7d9d2a41],0x5cdbc6b1
  41e74c:	and    DWORD PTR [esp+ebp*1+0x29671c24],0xf475b3e2
  41e757:	iret   
  41e758:	xchg   BYTE PTR [ecx],cl
  41e75a:	sub    ecx,DWORD PTR [ebp-0x480726a6]
  41e760:	outs   dx,BYTE PTR ds:[esi]
  41e761:	xor    dl,BYTE PTR [esi+0x4d]
  41e764:	pop    es
  41e765:	das    
  41e766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e767:	mov    cl,0x9a
  41e769:	or     DWORD PTR [ebx+0x4f],edi
  41e76c:	jg     0x41e70c
  41e76e:	scas   al,BYTE PTR es:[edi]
  41e76f:	inc    edi
  41e770:	test   eax,0x7a0b66e0
  41e775:	sbb    esp,DWORD PTR [ebx-0x17]
  41e778:	sbb    ecx,ecx
  41e77a:	push   cs
  41e77b:	(bad)  
  41e77c:	ficomp DWORD PTR [eax]
  41e77e:	inc    ecx
  41e77f:	out    dx,eax
  41e780:	mov    DWORD PTR [edi+0x64],eax
  41e783:	mov    esi,0xedb6095f
  41e788:	xlat   BYTE PTR ds:[ebx]
  41e789:	popa   
  41e78a:	xchg   ecx,eax
  41e78b:	mov    ds:0xe5714c86,al
  41e790:	mov    ebx,0xa1895af6
  41e795:	call   0x5cb:0xaff3c7a6
  41e79c:	std    
  41e79d:	scas   eax,DWORD PTR es:[edi]
  41e79e:	cmp    edi,esp
  41e7a0:	jbe    0x41e794
  41e7a2:	nop
  41e7a3:	jb     0x41e809
  41e7a5:	pop    esi
  41e7a6:	mov    ebp,0x4da10fc7
  41e7ab:	pop    ebp
  41e7ac:	and    al,0x4f
  41e7ae:	rol    BYTE PTR [ebx-0x2],cl
  41e7b1:	sahf   
  41e7b2:	icebp  
  41e7b3:	lea    ebp,[eax-0x9]
  41e7b6:	push   0x11
  41e7b8:	sub    al,0x95
  41e7ba:	inc    edx
  41e7bb:	sbb    edx,DWORD PTR [eax]
  41e7bd:	jo     0x41e7e0
  41e7bf:	lock sub DWORD PTR [edx+0x33],ecx
  41e7c3:	jmp    0xbb71:0x86c3d083
  41e7ca:	cmp    eax,edi
  41e7cc:	or     eax,0x3b677f0c
  41e7d1:	imul   edx,eax,0xb6bea2de
  41e7d7:	xchg   esp,eax
  41e7d8:	add    al,0x65
  41e7da:	sbb    DWORD PTR [esp+eax*8],ebp
  41e7dd:	inc    ebp
  41e7de:	ds pop ss
  41e7e0:	xor    BYTE PTR [edi+0x617c0fd6],0x56
  41e7e7:	cmp    eax,ebp
  41e7e9:	push   edi
  41e7ea:	dec    edi
  41e7eb:	mov    gs,ecx
  41e7ed:	xchg   ebp,eax
  41e7ee:	xchg   ecx,eax
  41e7ef:	test   BYTE PTR [ecx-0x60a186e7],bh
  41e7f5:	inc    esi
  41e7f6:	stc    
  41e7f7:	adc    DWORD PTR [ebx+0x73],0x24f7eddf
  41e7fe:	sbb    eax,0x783a18bb
  41e803:	fdivr  st,st(0)
  41e805:	push   edi
  41e806:	or     ebp,DWORD PTR [ebp+0x74]
  41e809:	test   al,0x92
  41e80b:	push   edi
  41e80c:	jb     0x41e856
  41e80e:	sar    DWORD PTR [edi+0x20f1ca67],1
  41e814:	jmp    0xb521dadc
  41e819:	ds xchg edi,eax
  41e81b:	mov    DWORD PTR [ecx-0x3cac7ac4],ebx
  41e821:	ja     0x41e870
  41e823:	adc    esp,ebx
  41e825:	gs mov ebp,0x2e192cd8
  41e82b:	rcr    DWORD PTR [ebp-0x140dadb5],1
  41e831:	mov    al,0xb4
  41e833:	push   ss
  41e834:	repnz jmp 0x4ac7:0x1c25e9c7
  41e83c:	inc    ebp
  41e83d:	mov    al,0x4b
  41e83f:	cmc    
  41e840:	jecxz  0x41e88f
  41e842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e843:	dec    esi
  41e844:	jbe    0x41e831
  41e846:	test   eax,0xc101240e
  41e84b:	push   ebp
  41e84c:	push   es
  41e84d:	pop    ss
  41e84e:	mov    ebx,DWORD PTR [ebx-0x5bd31171]
  41e854:	push   ebx
  41e855:	or     al,0x20
  41e857:	stos   BYTE PTR es:[edi],al
  41e858:	popa   
  41e859:	aas    
  41e85a:	push   edi
  41e85b:	cmp    eax,0x6e561e0b
  41e860:	mov    ch,0x3e
  41e862:	pop    ds
  41e863:	mov    al,ds:0x643155b1
  41e868:	fld    DWORD PTR [ebp-0x2e7658bf]
  41e86e:	inc    eax
  41e86f:	mov    ecx,0xce3bb6bf
  41e874:	mov    cl,0x9b
  41e876:	cld    
  41e877:	(bad)  
  41e878:	call   0xaf3f5dca
  41e87d:	loopne 0x41e8d8
  41e87f:	mov    dh,0x40
  41e881:	fisubr DWORD PTR es:[esi]
  41e884:	mov    DWORD PTR [esi],0xa4bed6fe
  41e88a:	jge    0x41e871
  41e88c:	cmp    ebp,ecx
  41e88e:	push   ds
  41e88f:	lds    ebp,FWORD PTR [esi]
  41e891:	mov    ch,0x30
  41e893:	cmp    ah,BYTE PTR [edx+0x7ece937a]
  41e899:	dec    edx
  41e89a:	sbb    cl,BYTE PTR [edi-0x3c]
  41e89d:	inc    ecx
  41e89f:	jl     0x41e8fa
  41e8a1:	sub    DWORD PTR [eax-0x24a26be4],0x79cb7a66
  41e8ab:	out    0x27,al
  41e8ad:	xor    eax,0x9af54ee3
  41e8b2:	mov    ch,0xc5
  41e8b4:	imul   esi,DWORD PTR [ebp-0x685d4255],0x3b
  41e8bb:	into   
  41e8bc:	int3   
  41e8bd:	shl    ebp,1
  41e8bf:	jb     0x41e895
  41e8c1:	jns    0x41e8c1
  41e8c3:	es adc bl,0xe9
  41e8c7:	push   eax
  41e8c8:	cdq    
  41e8c9:	or     dl,BYTE PTR [eax-0x18]
  41e8cc:	dec    esi
  41e8cd:	inc    esi
  41e8ce:	ret    0xeefb
  41e8d1:	push   esi
  41e8d2:	clc    
  41e8d3:	mov    esi,0x94edaf4c
  41e8d8:	mov    dh,0x47
  41e8da:	rcl    DWORD PTR [edx+0x6ca6b365],0x90
  41e8e1:	fld    QWORD PTR [ebx]
  41e8e3:	push   esi
  41e8e4:	repnz outs dx,DWORD PTR ds:[esi]
  41e8e6:	ja     0x41e928
  41e8e8:	imul   esi,ecx,0xffffffc0
  41e8eb:	imul   ebx,DWORD PTR [edi],0x35975563
  41e8f1:	addr16 nop
  41e8f3:	sbb    ebp,edi
  41e8f5:	jg     0x41e8e5
  41e8f7:	sub    al,0x5a
  41e8f9:	nop
  41e8fa:	dec    eax
  41e8fb:	xlat   BYTE PTR ds:[ebx]
  41e8fc:	or     eax,0x5a0dfff3
  41e901:	xor    al,0x4c
  41e903:	mov    ecx,0x434bb934
  41e908:	xchg   DWORD PTR [ecx+0xe],edi
  41e90b:	push   cs
  41e90c:	std    
  41e90d:	push   esi
  41e90e:	out    0xcc,al
  41e910:	cmp    BYTE PTR [eax+0x23bd0606],ah
  41e916:	(bad)  
  41e917:	and    eax,0x89738883
  41e91c:	mov    cl,0x15
  41e91e:	test   eax,0x16a97511
  41e923:	std    
  41e924:	push   0x5391ae1
  41e929:	test   eax,0x76294ae3
  41e92e:	call   0xbec1:0x7745e1c2
  41e935:	sub    ebp,DWORD PTR [esi+0x11627b06]
  41e93b:	xchg   edi,eax
  41e93c:	adc    DWORD PTR [ecx],esi
  41e93e:	lods   eax,DWORD PTR ds:[esi]
  41e93f:	in     al,dx
  41e940:	lahf   
  41e941:	mov    edx,0xad2878ca
  41e946:	nop
  41e947:	mov    al,0x38
  41e949:	rcl    BYTE PTR [edi+0x4865153],1
  41e94f:	add    DWORD PTR [esi-0x64],0x79363d89
  41e956:	xchg   ebp,eax
  41e957:	adc    dl,BYTE PTR [edi+edx*1]
  41e95a:	sar    DWORD PTR [esi-0x11],1
  41e95d:	adc    esi,DWORD PTR [ebx+0x23]
  41e960:	push   ebp
  41e961:	and    ebp,DWORD PTR [edx]
  41e963:	iret   
  41e964:	pop    esi
  41e965:	sbb    DWORD PTR [eax-0x20],esi
  41e968:	lea    edi,[ebx+0x5]
  41e96b:	push   esp
  41e96c:	mov    dh,0x20
  41e96e:	not    esp
  41e970:	push   ebp
  41e971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e972:	push   eax
  41e973:	sub    BYTE PTR [edx-0x4b],bl
  41e976:	enter  0x2b8f,0xaa
  41e97a:	hlt    
  41e97b:	cs js  0x41e995
  41e97e:	lock clc 
  41e980:	iret   
  41e981:	dec    ebx
  41e982:	cmp    cl,BYTE PTR [ebx]
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422658
  41e9a9:	push   DWORD PTR ds:0x4223ec
  41e9af:	mov    eax,ds:0x422568
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422568
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422568
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428277,0x0
  41ea0c:	mov    DWORD PTR ds:0x428383,0x7749
  41ea16:	mov    DWORD PTR ds:0x428183,ebx
  41ea1c:	mov    DWORD PTR ds:0x428323,edx
  41ea22:	mov    DWORD PTR ds:0x428323,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42829b,edx
  41ea37:	cmp    DWORD PTR ds:0x428277,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e24
  41ea54:	sbb    DWORD PTR ds:0x42837f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42832b
  41ea60:	xor    ecx,DWORD PTR ds:0x428317
  41ea66:	mov    DWORD PTR ds:0x42832b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428253,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x4281a7
  41ea80:	mov    ecx,DWORD PTR ds:0x4281f3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428197,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x428207
  41ea95:	mov    eax,ds:0x4282f3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42826b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42829b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42832b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x4283a7,0x4282ff
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428393,0x4283a3
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428313
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42826b,0x42819f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283b7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428337,0x0
  41eb42:	mov    DWORD PTR ds:0x4283a7,edx
  41eb48:	mov    DWORD PTR ds:0x428247,ebx
  41eb4e:	not    DWORD PTR ds:0x428243
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42823b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428327
  41eb69:	cmp    DWORD PTR ds:0x428337,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e28
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42839f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x4283a7,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42823f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282d3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x4283a3,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42816b,0x4282b7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42825f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0xb1
  41ec04:	stc    
  41ec05:	lea    esi,[eax+0xe]
  41ec08:	das    
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx+0x1f181812],ah
  41ec10:	pop    esp
  41ec11:	loope  0x41ec41
  41ec13:	add    al,0xbd
  41ec15:	xor    DWORD PTR [ecx-0x74],0x39f8634d
  41ec1c:	jg     0x41ec0b
  41ec1e:	xchg   ebx,eax
  41ec1f:	lahf   
  41ec20:	rcl    BYTE PTR [eax],0xff
  41ec23:	in     al,dx
  41ec24:	xchg   ebp,eax
  41ec25:	xor    eax,0x30c56414
  41ec2a:	clc    
  41ec2b:	ins    BYTE PTR es:[edi],dx
  41ec2c:	xchg   esi,eax
  41ec2d:	ins    DWORD PTR es:[edi],dx
  41ec2e:	and    al,0xf5
  41ec30:	mov    eax,ds:0xbbfcdd4d
  41ec35:	push   ebp
  41ec36:	xor    DWORD PTR [esi],edi
  41ec38:	cs dec ebp
  41ec3a:	mov    ebp,0x8b5fbeef
  41ec3f:	sub    eax,0x2eeb4af7
  41ec44:	inc    edi
  41ec45:	cmp    al,0x4
  41ec47:	push   es
  41ec48:	and    BYTE PTR [esp-0x75ed4ea5],0xc5
  41ec50:	sbb    eax,0x1a964fd2
  41ec55:	adc    eax,0x35d9e8a6
  41ec5a:	mov    cl,0x5b
  41ec5c:	pop    ds
  41ec5d:	jmp    0xa8a69dcc
  41ec62:	xchg   ebp,eax
  41ec63:	mov    dh,0x93
  41ec65:	mov    al,ds:0xb06fb9c3
  41ec6a:	out    dx,al
  41ec6b:	mov    ds:0xbcb313aa,al
  41ec70:	mov    eax,ds:0xb6be5e
  41ec75:	ret    0x98a
  41ec78:	inc    ecx
  41ec79:	mov    esp,DWORD PTR [eax+esi*2]
  41ec7c:	jne    0x41ec5a
  41ec7e:	(bad)  
  41ec7f:	leave  
  41ec80:	dec    edi
  41ec81:	jecxz  0x41ecdc
  41ec83:	enter  0x1631,0x3a
  41ec87:	mov    ds:0x9431b3d9,al
  41ec8c:	scas   al,BYTE PTR es:[edi]
  41ec8d:	mov    esi,ebp
  41ec8f:	mov    esp,0xef52397b
  41ec94:	mov    ds:0x43445a6e,eax
  41ec99:	cmc    
  41ec9a:	or     al,0x73
  41ec9c:	inc    ebp
  41ec9d:	(bad)  
  41ec9e:	pop    ebp
  41ec9f:	pop    ds
  41eca0:	mov    ebx,0x31abc1a6
  41eca5:	mov    ?,WORD PTR [ebx]
  41eca7:	imul   eax,esp,0x45deb4ff
  41ecad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecae:	pop    ebp
  41ecaf:	xor    DWORD PTR [edi],0xade4c87e
  41ecb5:	jle    0x41ec5d
  41ecb7:	das    
  41ecb8:	test   al,0xd3
  41ecba:	mov    cl,0xf4
  41ecbc:	jmp    0x3c33:0x32979f91
  41ecc3:	mov    eax,0x8539aa08
  41ecc8:	add    DWORD PTR [edx],edx
  41ecca:	cmp    eax,edx
  41eccc:	retf   0xb30a
  41eccf:	leave  
  41ecd0:	mov    edx,0xfbf8ad48
  41ecd5:	shl    BYTE PTR [ebp-0xea885b8],cl
  41ecdb:	dec    ebx
  41ecdc:	(bad)  
  41ecdd:	pushf  
  41ecde:	sub    BYTE PTR [ebx+0x744c33c3],0x80
  41ece5:	(bad)  
  41ece6:	jns    0x41ed50
  41ece8:	mov    esp,0x4f88a2c7
  41eced:	and    BYTE PTR [ebp-0x5f],0x90
  41ecf1:	jnp    0x41ec9c
  41ecf3:	(bad)  [ebx-0x14]
  41ecf6:	addr16 push edx
  41ecf8:	mov    bh,0xd1
  41ecfa:	and    ebx,eax
  41ecfc:	retf   0xc5f
  41ecff:	jo     0x41ed4c
  41ed01:	fimul  DWORD PTR [ebx-0x40804055]
  41ed07:	aaa    
  41ed08:	shl    BYTE PTR ds:0x78c095df,0xd3
  41ed0f:	popf   
  41ed10:	xchg   BYTE PTR [edx*8-0x789c5d5d],bl
  41ed17:	ins    BYTE PTR es:[edi],dx
  41ed18:	push   ds
  41ed19:	jl     0x41ed42
  41ed1b:	sub    BYTE PTR [ecx-0x68],cl
  41ed1e:	dec    ebx
  41ed1f:	inc    esi
  41ed20:	rol    edx,cl
  41ed22:	xor    eax,0x16d685c6
  41ed27:	add    ecx,DWORD PTR [edx+ebx*1-0x1e]
  41ed2b:	inc    ebx
  41ed2c:	out    dx,al
  41ed2d:	mov    cl,0xe2
  41ed2f:	push   0x7215f3f6
  41ed34:	or     BYTE PTR [eax-0x51],ah
  41ed37:	int    0xa8
  41ed39:	ss jno 0x41ed8f
  41ed3c:	cmp    BYTE PTR [ebx-0x4b],0xe9
  41ed40:	stos   DWORD PTR es:[edi],eax
  41ed41:	data16 sti 
  41ed43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed44:	mov    esi,0xd3ade2b7
  41ed49:	sbb    ebp,DWORD PTR [ebx-0x4743db4e]
  41ed4f:	popf   
  41ed50:	push   0xffffffef
  41ed52:	cmp    ecx,DWORD PTR [ecx+ecx*1-0x6855e82]
  41ed59:	mov    ebx,?
  41ed5b:	jne    0x41edb2
  41ed5d:	(bad)  
  41ed5e:	cmp    DWORD PTR [ebx+0x63131d2f],eax
  41ed64:	inc    edi
  41ed65:	jmp    0xb0c7:0xa2fdc3a6
  41ed6c:	add    BYTE PTR [esi-0x1a],al
  41ed6f:	inc    edi
  41ed70:	pushf  
  41ed71:	icebp  
  41ed72:	or     ecx,DWORD PTR [ebp+ebp*4-0x49]
  41ed76:	pop    ds
  41ed77:	push   esp
  41ed78:	aam    0x90
  41ed7a:	xor    dl,ah
  41ed7c:	jb     0x41edd0
  41ed7e:	inc    eax
  41ed7f:	sub    DWORD PTR [edx-0x74c8b233],ebp
  41ed85:	mov    esp,0x2637e123
  41ed8a:	mov    ebp,esp
  41ed8c:	inc    ecx
  41ed8d:	mov    ecx,?
  41ed8f:	leave  
  41ed90:	iret   
  41ed91:	xlat   BYTE PTR ds:[ebx]
  41ed92:	push   ecx
  41ed93:	les    eax,FWORD PTR [ecx-0x33]
  41ed96:	leave  
  41ed97:	sbb    DWORD PTR [ecx],eax
  41ed99:	cmp    DWORD PTR [edi-0x5d93b9df],esp
  41ed9f:	mov    dh,BYTE PTR [ebx+0x5d]
  41eda2:	mov    ds:0x1a7103b0,eax
  41eda7:	nop
  41eda8:	inc    edi
  41eda9:	xlat   BYTE PTR ds:[ebx]
  41edaa:	inc    eax
  41edab:	jne    0x41ed6a
  41edad:	ret    0x6fe3
  41edb0:	hlt    
  41edb1:	mov    bh,0xef
  41edb3:	pop    ds
  41edb4:	cmc    
  41edb5:	inc    ebx
  41edb6:	mov    cl,0x15
  41edb8:	pop    edi
  41edb9:	cwde   
  41edba:	and    BYTE PTR [edx],0xb9
  41edbd:	div    dh
  41edbf:	adc    DWORD PTR [esi-0x4b0443c5],esi
  41edc5:	aam    0xf0
  41edc7:	dec    ecx
  41edc8:	les    ebx,FWORD PTR [ebx+0x4e]
  41edcb:	fiadd  DWORD PTR [eax+0x3e3c08d1]
  41edd1:	or     eax,0x81a3744e
  41edd6:	jno    0x41ed94
  41edd8:	lock aam 0x3d
  41eddb:	rcr    BYTE PTR [edi-0x3],0x54
  41eddf:	(bad)  
  41ede0:	das    
  41ede1:	scas   al,BYTE PTR es:[edi]
  41ede2:	xchg   ebx,eax
  41ede3:	bound  esp,QWORD PTR [esi-0x17]
  41ede6:	imul   ebp,DWORD PTR [esi+esi*4+0x5cd72218],0xfffffff0
  41edee:	mov    al,ds:0xfe6ad579
  41edf3:	push   edi
  41edf4:	popa   
  41edf5:	mov    dh,0x1f
  41edf7:	xchg   edi,eax
  41edf8:	std    
  41edf9:	lods   al,BYTE PTR ds:[esi]
  41edfa:	add    al,0x30
  41edfc:	(bad)
  41ee01:	sub    al,0xa7
  41ee03:	sbb    DWORD PTR [ecx],0xffffffc4
  41ee06:	out    dx,eax
  41ee07:	cld    
  41ee08:	pop    ss
  41ee09:	mov    eax,0xa5bb3c2a
  41ee0e:	stc    
  41ee0f:	lock or al,0x85
  41ee12:	inc    BYTE PTR [edx-0x6d]
  41ee15:	jl     0x41edad
  41ee17:	cli    
  41ee18:	leave  
  41ee19:	fistp  QWORD PTR [eax]
  41ee1b:	in     eax,0xea
  41ee1d:	cmp    ecx,DWORD PTR [edi]
  41ee1f:	xor    eax,0xbeb4ed1e
  41ee24:	mov    ebx,0x6d711214
  41ee29:	push   ds
  41ee2a:	xor    al,BYTE PTR [eax+0x3b602e69]
  41ee30:	mov    eax,0x2be0b9a2
  41ee35:	jge    0x41edc5
  41ee37:	inc    ebx
  41ee38:	idiv   DWORD PTR [edi+0x48f9ec55]
  41ee3e:	ja     0x41ee16
  41ee40:	and    BYTE PTR ds:0xeda8fa0c,al
  41ee46:	jmp    0x85c2:0xe4530fb3
  41ee4d:	aaa    
  41ee4e:	enter  0xf2fa,0xbb
  41ee52:	push   eax
  41ee53:	cmp    al,0x72
  41ee55:	mov    eax,0x70bdd98f
  41ee5a:	fadd   st,st(7)
  41ee5c:	sub    al,0x2a
  41ee5e:	out    dx,al
  41ee5f:	pop    ecx
  41ee60:	inc    edi
  41ee61:	mov    esp,DWORD PTR [esi-0x2e]
  41ee64:	cdq    
  41ee65:	(bad)  
  41ee66:	push   0x7b
  41ee68:	sub    BYTE PTR [ebx+esi*2+0x2d],cl
  41ee6c:	jg     0x41ee76
  41ee6e:	repnz mov bl,0x62
  41ee71:	dec    ecx
  41ee72:	fs out dx,al
  41ee74:	jmp    0x41ee8a
  41ee76:	xchg   esp,edx
  41ee78:	nop
  41ee79:	dec    eax
  41ee7a:	stc    
  41ee7b:	int    0x2f
  41ee7d:	xchg   esi,eax
  41ee7e:	pop    es
  41ee7f:	dec    ebx
  41ee80:	pop    ds
  41ee81:	xchg   edi,eax
  41ee82:	lahf   
  41ee83:	dec    edx
  41ee84:	push   0x7baccf01
  41ee89:	or     cl,bh
  41ee8b:	sbb    al,0xb0
  41ee8d:	cmp    ebp,DWORD PTR [edi-0x11]
  41ee90:	sbb    DWORD PTR [ecx+0x3],ecx
  41ee93:	dec    esi
  41ee94:	xor    edi,DWORD PTR [edi-0x3f397c65]
  41ee9a:	retf   
  41ee9b:	add    al,bl
  41ee9d:	repz xchg ebp,eax
  41ee9f:	ds inc esi
  41eea1:	out    dx,al
  41eea2:	sbb    eax,0x1000117d
  41eea7:	call   0x77ab448d
  41eeac:	iret   
  41eead:	jmp    0x58d:0x88eaa160
  41eeb4:	dec    edx
  41eeb5:	rcr    dh,1
  41eeb7:	or     ch,bl
  41eeb9:	jg     0x41eef8
  41eebb:	xchg   ebp,eax
  41eebc:	push   edx
  41eebd:	jmp    0x5076596f
  41eec2:	cdq    
  41eec3:	stc    
  41eec4:	scas   eax,DWORD PTR es:[edi]
  41eec5:	sub    DWORD PTR [edx+esi*4-0x22],esp
  41eec9:	jns    0x41eedd
  41eecb:	mov    ah,0xf3
  41eecd:	jl     0x41ef27
  41eecf:	ret    
  41eed0:	add    DWORD PTR [edi+0x34dd7f70],esi
  41eed6:	pop    ecx
  41eed7:	pop    edi
  41eed8:	rcl    DWORD PTR [edx+0x10],0x94
  41eedc:	mov    al,0x4d
  41eede:	adc    dl,BYTE PTR es:[ebx-0x3b56cac5]
  41eee5:	cmp    bl,ah
  41eee7:	sbb    dh,BYTE PTR [eax+0x2c]
  41eeea:	cmp    al,0x38
  41eeec:	lds    bp,DWORD PTR ds:[eax]
  41eef0:	pop    edi
  41eef1:	jbe    0x41ef4d
  41eef3:	cdq    
  41eef4:	cld    
  41eef5:	stc    
  41eef6:	mov    bl,0x51
  41eef8:	mov    DWORD PTR [edi],0x9d58df94
  41eefe:	or     cl,BYTE PTR [eax+0x54045899]
  41ef04:	lock outs dx,DWORD PTR ds:[esi]
  41ef06:	pushf  
  41ef07:	scas   eax,DWORD PTR es:[edi]
  41ef08:	xor    DWORD PTR [ebx],ebx
  41ef0a:	pop    eax
  41ef0b:	rcr    DWORD PTR ds:0xc0b46a40,cl
  41ef11:	rcr    edi,cl
  41ef13:	dec    edx
  41ef14:	jnp    0x41eeeb
  41ef16:	adc    eax,ebx
  41ef18:	cmp    DWORD PTR [ebp+0x1847c5cf],ebp
  41ef1e:	shl    BYTE PTR [edx-0x5bee431c],1
  41ef24:	inc    ebp
  41ef25:	xlat   BYTE PTR ds:[ebx]
  41ef26:	cmp    ah,0xa9
  41ef29:	push   esi
  41ef2a:	add    BYTE PTR ds:0x907bb1b4,al
  41ef30:	xchg   edx,eax
  41ef31:	mov    bh,0xdb
  41ef33:	retf   
  41ef34:	imul   ebx,DWORD PTR [esi],0xa
  41ef37:	add    esp,DWORD PTR [edx+0x65]
  41ef3a:	dec    ebx
  41ef3b:	pop    edi
  41ef3c:	push   es
  41ef3d:	cmovno edx,DWORD PTR [eax+0x2723a5d7]
  41ef44:	sbb    DWORD PTR [edi-0x7db8d647],ecx
  41ef4a:	rcl    DWORD PTR [edi+0x458bdc30],1
  41ef50:	mov    ah,0x81
  41ef52:	adc    eax,0x42817f
  41ef57:	xchg   ebx,eax
  41ef58:	xor    al,0x0
  41ef5a:	add    BYTE PTR [ebx],al
  41ef5c:	test   DWORD PTR [edi+edi*8-0x1],ecx
  41ef60:	inc    DWORD PTR [ecx+0x29cf2]
  41ef66:	add    BYTE PTR ds:0x2e02,dh
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x4282a3
  41ef7a:	sbb    DWORD PTR ds:0x42817f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428197,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x42830b,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282fb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x42830b,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e2c
  41efd7:	sub    edx,DWORD PTR ds:0x42823f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42825b
  41efe4:	mov    DWORD PTR ds:0x4283a3,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42824b
  41eff4:	xor    edx,DWORD PTR ds:0x4282b7
  41effa:	and    DWORD PTR ds:0x4283b7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x2383b3b0
  41f021:	stos   BYTE PTR es:[edi],al
  41f022:	cdq    
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx+0x59181812],ah
  41f02b:	mov    ah,0x42
  41f02d:	daa    
  41f02e:	dec    di
  41f030:	push   edi
  41f031:	xchg   edi,eax
  41f032:	ret    
  41f033:	adc    edi,edi
  41f035:	lods   eax,DWORD PTR ds:[esi]
  41f036:	sbb    bh,al
  41f038:	mov    ecx,0x56dfb02a
  41f03d:	imul   edx,DWORD PTR [edx],0x8
  41f040:	inc    esp
  41f041:	rcl    DWORD PTR [ebp+ebp*4+0x72fc507d],0xd
  41f049:	(bad)
  41f04c:	cmc    
  41f04d:	(bad)  
  41f04f:	lods   eax,DWORD PTR ds:[esi]
  41f050:	push   ebp
  41f051:	int3   
  41f052:	sub    esp,ebx
  41f054:	lods   eax,DWORD PTR ds:[esi]
  41f055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f056:	mov    ch,0x92
  41f058:	arpl   WORD PTR [eax],sp
  41f05a:	ja     0x41f081
  41f05c:	inc    eax
  41f05d:	loop   0x41efe3
  41f05f:	mov    edi,0x80be55fb
  41f064:	sub    eax,0xf356a9d9
  41f069:	and    al,0x81
  41f06b:	outs   dx,BYTE PTR ds:[esi]
  41f06c:	in     al,0x59
  41f06e:	mov    ds:0x4bafdfe8,eax
  41f073:	fmulp  st(4),st
  41f075:	iret   
  41f076:	cwde   
  41f077:	popf   
  41f078:	shl    BYTE PTR [ebx-0x33],1
  41f07b:	push   ebp
  41f07c:	mov    bh,0x38
  41f07e:	into   
  41f07f:	je     0x41f0a8
  41f081:	push   ebx
  41f082:	sub    eax,0x8bfb7851
  41f087:	rcr    BYTE PTR [eax-0x16],1
  41f08a:	push   ds
  41f08b:	or     DWORD PTR [esi-0x6347daa9],ecx
  41f091:	clc    
  41f092:	imul   ecx,DWORD PTR ds:0x78042e8e,0xc3c4121b
  41f09c:	mov    cl,0xd6
  41f09e:	popa   
  41f09f:	enter  0xf05c,0xe5
  41f0a3:	jnp    0x41f02b
  41f0a5:	inc    ebp
  41f0a6:	mov    dl,0x77
  41f0a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0a9:	xor    esi,edx
  41f0ab:	pop    es
  41f0ac:	mov    ecx,0x568ea11a
  41f0b1:	lods   eax,DWORD PTR ds:[esi]
  41f0b2:	push   0x891c6815
  41f0b7:	ja     0x41f126
  41f0b9:	add    BYTE PTR [eax+0x16bbdde7],0x99
  41f0c0:	xor    ch,BYTE PTR es:[edx+0x4a73094c]
  41f0c7:	jns    0x41f074
  41f0c9:	lods   eax,DWORD PTR ds:[esi]
  41f0ca:	hlt    
  41f0cb:	outs   dx,BYTE PTR ds:[esi]
  41f0cc:	mov    edx,DWORD PTR [edx+eiz*8]
  41f0cf:	push   ss
  41f0d0:	int3   
  41f0d1:	cwde   
  41f0d2:	ss add ebp,0x42
  41f0d6:	cmp    BYTE PTR [ebx+0x5],cl
  41f0d9:	shl    DWORD PTR [edi],0xed
  41f0dc:	jno    0x41f0af
  41f0de:	mov    cl,bh
  41f0e0:	push   edi
  41f0e1:	mov    ebx,0x81ebc10d
  41f0e6:	(bad)  
  41f0e7:	cmc    
  41f0e8:	sub    DWORD PTR [edi],esi
  41f0ea:	sti    
  41f0eb:	ds push 0xffffff8c
  41f0ee:	push   ecx
  41f0ef:	dec    edi
  41f0f0:	sar    DWORD PTR [edx-0x7cc61046],1
  41f0f6:	mov    bl,0x96
  41f0f8:	scas   al,BYTE PTR es:[edi]
  41f0f9:	ins    DWORD PTR es:[edi],dx
  41f0fa:	pop    esi
  41f0fb:	fsubr  st(0),st
  41f0fd:	(bad)  
  41f0fe:	fsubrp st(7),st
  41f100:	ret    
  41f101:	sub    DWORD PTR [edx+0x2b],0x3e
  41f105:	jbe    0x41f0aa
  41f107:	fadd   st,st(5)
  41f109:	out    dx,eax
  41f10a:	inc    eax
  41f10b:	inc    ebx
  41f10c:	imul   eax,DWORD PTR [edi-0x3107bd2c],0x429d5fc7
  41f116:	call   0x6c15c869
  41f11b:	jge    0x41f0a4
  41f11d:	aaa    
  41f11e:	jmp    0x9c4ac5b2
  41f123:	gs and al,0x88
  41f126:	div    BYTE PTR [edx+0x25b84372]
  41f12c:	sub    bh,cl
  41f12e:	and    DWORD PTR [ecx-0x3e545a8b],esp
  41f134:	stos   DWORD PTR es:[edi],eax
  41f135:	push   0x6aa2ceb6
  41f13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f13b:	mov    dl,0x49
  41f13d:	push   edx
  41f13e:	xor    BYTE PTR [ecx+0x27],dh
  41f141:	mov    eax,ds:0xa14bbe9
  41f146:	and    DWORD PTR [ecx],0xe9752713
  41f14c:	and    BYTE PTR [edx+0x5169ad31],ah
  41f152:	mov    dl,0xd3
  41f154:	push   0x24f1ea0
  41f159:	sbb    al,0x8a
  41f15b:	mov    cl,0xdc
  41f15d:	sub    eax,0x5a51e52e
  41f162:	mov    BYTE PTR [ebp-0x11453b5c],dh
  41f168:	sbb    edi,DWORD PTR [edi]
  41f16a:	cmp    eax,0xf2084e8f
  41f16f:	sub    eax,0x5c25602c
  41f174:	cmp    BYTE PTR [esi+0x41eb8a65],bl
  41f17a:	imul   edx,DWORD PTR [edx-0x6],0x18c89728
  41f181:	cmc    
  41f182:	mov    WORD PTR [ebx+0x5641c0be],ds
  41f188:	dec    edx
  41f189:	ret    
  41f18a:	push   0x36753202
  41f18f:	stc    
  41f190:	(bad)
  41f194:	pop    ebp
  41f195:	sbb    esi,DWORD PTR [ecx+ebx*1+0x77]
  41f199:	enter  0x16d1,0xef
  41f19d:	loope  0x41f180
  41f19f:	daa    
  41f1a0:	push   cs
  41f1a1:	scas   al,BYTE PTR es:[edi]
  41f1a2:	pop    ebx
  41f1a3:	and    dl,BYTE PTR [ebp+0x48eb4f2b]
  41f1a9:	les    ecx,FWORD PTR [ebp-0x489d4f2b]
  41f1af:	test   eax,0x8e0b1669
  41f1b4:	adc    eax,0x696ede48
  41f1b9:	popa   
  41f1ba:	loopne 0x41f1fe
  41f1bc:	push   ss
  41f1bd:	iret   
  41f1be:	hlt    
  41f1bf:	push   0x69
  41f1c1:	pushf  
  41f1c2:	jecxz  0x41f16b
  41f1c4:	iret   
  41f1c5:	mov    esi,0x12f26e33
  41f1ca:	push   ds
  41f1cb:	retf   
  41f1cc:	dec    edi
  41f1cd:	push   esi
  41f1ce:	push   ebp
  41f1cf:	imul   ebp,DWORD PTR [eax+0x75],0xffffffd4
  41f1d3:	add    dh,dl
  41f1d5:	inc    ebx
  41f1d6:	xchg   ecx,eax
  41f1d7:	inc    ebx
  41f1d8:	inc    ebx
  41f1d9:	aaa    
  41f1da:	mov    ebx,DWORD PTR [edx]
  41f1dc:	mov    WORD PTR [ebp-0x53],gs
  41f1df:	push   es
  41f1e0:	ins    BYTE PTR es:[edi],dx
  41f1e1:	adc    esi,DWORD PTR [esi]
  41f1e3:	call   0x9ceba77
  41f1e8:	pushf  
  41f1e9:	push   ebp
  41f1ea:	xor    al,0x72
  41f1ec:	jb     0x41f17a
  41f1ee:	repz xchg edi,eax
  41f1f0:	setl   cl
  41f1f3:	xchg   ebx,eax
  41f1f4:	(bad)  
  41f1f5:	adc    DWORD PTR [ecx+0x5367734b],edi
  41f1fb:	pop    edi
  41f1fc:	loopne 0x41f1ae
  41f1fe:	int    0xf3
  41f200:	xchg   DWORD PTR [ebp+0x7fb37442],esi
  41f206:	in     al,dx
  41f207:	js     0x41f278
  41f209:	xchg   ebx,eax
  41f20a:	fsubr  QWORD PTR [edx]
  41f20c:	scas   eax,DWORD PTR es:[edi]
  41f20d:	(bad)  ds:0xba38ea5a
  41f213:	out    dx,eax
  41f214:	dec    edx
  41f215:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f217:	ror    BYTE PTR [eax+0x5c],1
  41f21a:	inc    edx
  41f21b:	loope  0x41f273
  41f21d:	and    eax,0xe426cecc
  41f222:	bound  edx,QWORD PTR ds:0x3e45954f
  41f228:	or     eax,0x299a5d98
  41f22d:	mov    ecx,0x7ee7be8b
  41f232:	push   es
  41f233:	jecxz  0x41f1d6
  41f235:	out    0x6,eax
  41f237:	scas   al,BYTE PTR es:[edi]
  41f238:	shl    DWORD PTR [edx+0x6f5451c2],cl
  41f23e:	add    dh,BYTE PTR [eax+0x15]
  41f241:	mov    ecx,DWORD PTR [esi-0x19]
  41f244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f245:	in     al,0x9a
  41f247:	mov    cl,0xbe
  41f249:	clc    
  41f24a:	ficomp DWORD PTR [ecx]
  41f24c:	jle    0x41f239
  41f24e:	xor    DWORD PTR [esi+0x441269d7],0xffffffd1
  41f255:	dec    edi
  41f256:	not    BYTE PTR ds:0x3c5b65c3
  41f25c:	arpl   WORD PTR [ebp-0x6],di
  41f25f:	enter  0xea9c,0xf3
  41f263:	shr    BYTE PTR [eax+0x2b293bd8],cl
  41f269:	addr16 adc al,0x94
  41f26c:	shl    bh,1
  41f26e:	aam    0x26
  41f270:	jle    0x41f29d
  41f272:	loope  0x41f231
  41f274:	push   edi
  41f275:	sbb    DWORD PTR [esi+0xe],0x3529b155
  41f27c:	ret    
  41f27d:	cmp    DWORD PTR [ebp-0x1d],edx
  41f280:	sbb    BYTE PTR [edi-0x8],al
  41f283:	stos   BYTE PTR es:[edi],al
  41f284:	ret    
  41f285:	shl    ebp,cl
  41f287:	ds add eax,0x7e53cf19
  41f28d:	loope  0x41f219
  41f28f:	and    DWORD PTR [ecx+0x7b],0xe99c07fb
  41f296:	sub    DWORD PTR [edx],eax
  41f298:	dec    edi
  41f299:	xor    BYTE PTR [edx-0x47cdbb4d],bl
  41f29f:	xchg   edx,eax
  41f2a0:	and    DWORD PTR [edi-0x21],edx
  41f2a3:	in     eax,0xfb
  41f2a5:	jmp    0x41f27e
  41f2a7:	and    al,0x52
  41f2a9:	and    esi,DWORD PTR [ebp-0x29]
  41f2ac:	adc    BYTE PTR [ecx],dh
  41f2ae:	pushf  
  41f2af:	mov    DWORD PTR [ebp+esi*8-0xe],esp
  41f2b3:	adc    dl,cl
  41f2b5:	outs   dx,DWORD PTR ds:[esi]
  41f2b6:	fwait
  41f2b7:	lock pop eax
  41f2b9:	mov    cl,0x5e
  41f2bb:	ror    ebp,0x60
  41f2be:	fld    QWORD PTR [edx]
  41f2c0:	stos   DWORD PTR es:[edi],eax
  41f2c1:	scas   al,BYTE PTR es:[edi]
  41f2c2:	test   al,bl
  41f2c4:	jmp    0xff99:0xf4dea167
  41f2cb:	ins    DWORD PTR es:[edi],dx
  41f2cc:	movhps QWORD PTR [edx+0x52],xmm0
  41f2d0:	sbb    DWORD PTR [ebp-0x2b],0x7b
  41f2d4:	retf   0x398d
  41f2d7:	sub    BYTE PTR [ecx],cl
  41f2d9:	pop    eax
  41f2da:	in     eax,dx
  41f2db:	pop    ds
  41f2dc:	jecxz  0x41f2f1
  41f2de:	push   eax
  41f2df:	fisub  DWORD PTR [edi+0x65e8a89c]
  41f2e5:	clc    
  41f2e6:	inc    eax
  41f2e7:	inc    edi
  41f2e8:	add    DWORD PTR [ecx+0x6a],ebp
  41f2eb:	ss sbb al,0xbb
  41f2ee:	inc    ecx
  41f2ef:	add    ebp,DWORD PTR [esi]
  41f2f1:	or     ebx,ecx
  41f2f3:	add    BYTE PTR [ebx-0x2],bh
  41f2f6:	int3   
  41f2f7:	or     ebx,DWORD PTR [eax-0x74131d7d]
  41f2fd:	popa   
  41f2fe:	add    bl,cl
  41f300:	adc    eax,0x3888b5fc
  41f305:	adc    BYTE PTR [eax+edx*1-0x4187b380],0x1d
  41f30d:	imul   esi,DWORD PTR [esi-0x15f23224],0xffffffe9
  41f314:	push   edi
  41f315:	pop    edi
  41f316:	retf   
  41f317:	jecxz  0x41f367
  41f319:	xor    al,0x5c
  41f31b:	pop    ecx
  41f31c:	sbb    ecx,ecx
  41f31e:	shl    BYTE PTR ds:0x6dede58,1
  41f324:	es jne 0x41f35b
  41f327:	popf   
  41f328:	jmp    DWORD PTR [ebx]
  41f32a:	daa    
  41f32b:	add    cl,BYTE PTR [edi-0xfe1e81b]
  41f331:	sub    BYTE PTR [ecx+esi*8+0x6dca9ce5],bh
  41f338:	clc    
  41f339:	cmp    BYTE PTR [edi+0x11],0x84
  41f33d:	jmp    0x41f315
  41f33f:	call   0x4973:0x8ba806b9
  41f346:	sub    dl,dl
  41f348:	ret    0x4a81
  41f34b:	jmp    0x41f3b2
  41f34d:	cwde   
  41f34e:	std    
  41f34f:	mov    DWORD PTR [eax+ebx*8],esi
  41f352:	sbb    DWORD PTR [edx+0x21],edi
  41f355:	idiv   ch
  41f357:	cwde   
  41f358:	(bad)  [eax]
  41f35a:	dec    edx
  41f35b:	dec    eax
  41f35c:	inc    BYTE PTR [edx]
  41f35e:	jecxz  0x41f3d4
  41f360:	pop    edi
  41f362:	jmp    0x41f2fb
  41f364:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f366:	pop    esp
  41f367:	adc    dl,BYTE PTR [ecx-0x39]
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4283233d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x42823f
  41f37e:	mov    ecx,DWORD PTR ds:0x428287
  41f384:	mov    ecx,DWORD PTR ds:0x428273
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42825f,ebx
  41f397:	cmp    DWORD PTR ds:0x428323,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428133
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e30
  41f3c7:	sub    ecx,DWORD PTR ds:0x428257
  41f3cd:	mov    DWORD PTR ds:0x4281a7,0x2f55
  41f3d7:	and    DWORD PTR ds:0x428303,ebx
  41f3dd:	or     DWORD PTR ds:0x42831b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x4281af
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428337,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42818f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42839b,0x0
  41f428:	mov    DWORD PTR ds:0x42832f,0xae0
  41f432:	mov    DWORD PTR ds:0x42816b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42838b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428313,ebx
  41f449:	mov    DWORD PTR ds:0x42818f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42839b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f45
  41f468:	call   DWORD PTR ds:0x428eb4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x4283a7
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x4281a7,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282ff,0x6486
  41f49d:	mov    DWORD PTR ds:0x42826b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42829b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x4283a3,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x4281a7,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x42800b
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e34
  41f4d7:	neg    DWORD PTR ds:0x42819b
  41f4dd:	and    DWORD PTR ds:0x42827f,0x428303
  41f4e7:	and    DWORD PTR ds:0x42837f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428197
  41f4f4:	sbb    edx,DWORD PTR ds:0x42831f
  41f4fa:	mov    DWORD PTR ds:0x428197,edx
  41f500:	sub    DWORD PTR ds:0x428293,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42819f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x4283a3,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428183,0x0
  41f53b:	mov    DWORD PTR ds:0x42839f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42825f,0x6044
  41f55b:	not    DWORD PTR ds:0x42826b
  41f561:	cmp    DWORD PTR ds:0x428183,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e38
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428163,edi
  41f5a3:	and    DWORD PTR ds:0x4282fb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428313
  41f5b0:	add    edx,DWORD PTR ds:0x42830b
  41f5b6:	mov    DWORD PTR ds:0x428313,edx
  41f5bc:	add    DWORD PTR ds:0x428307,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42826b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42839f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x4281ab,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42832f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42831f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x4283a3,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428267,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42827b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428297,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428263
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x4282af,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42827b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e3c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42823b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x428307
  41f67a:	add    DWORD PTR ds:0x42832b,ecx
  41f680:	sbb    DWORD PTR ds:0x42829f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428173
  41f68c:	adc    DWORD PTR ds:0x428167,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283cf
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42825f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428333,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428317,0x0
  41f6e5:	mov    DWORD PTR ds:0x42831f,0x6375
  41f6ef:	not    DWORD PTR ds:0x42817f
  41f6f5:	mov    DWORD PTR ds:0x42823b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42824b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42828f,ebx
  41f710:	cmp    DWORD PTR ds:0x428317,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42827b
  41f727:	call   DWORD PTR ds:0x428e40
  41f72d:	movzx  ecx,WORD PTR ds:0x42824b
  41f734:	xor    DWORD PTR ds:0x4283b7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42827b
  41f740:	add    ecx,DWORD PTR ds:0x428273
  41f746:	mov    DWORD PTR ds:0x42827b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42828b
  41f752:	adc    DWORD PTR ds:0x42839b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428337,ebx
  41f75f:	sub    DWORD PTR ds:0x428197,edx
  41f765:	and    DWORD PTR ds:0x428317,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42832b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428397,0x42830b
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428247,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428257
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42824b,0x4281a7
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428397,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428297
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x4283a3,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428387
  41f7d9:	mov    DWORD PTR ds:0x42837b,ecx
  41f7df:	mov    DWORD PTR ds:0x42831f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42829f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428197,edi
  41f7fe:	cmp    DWORD PTR ds:0x4283a3,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f8a
  41f813:	push   0x427ef1
  41f818:	call   DWORD PTR ds:0x428eb8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283cb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428287,ecx
  41f830:	adc    DWORD PTR ds:0x42816f,edi
  41f836:	and    DWORD PTR ds:0x4283af,0x3101
  41f840:	mov    DWORD PTR ds:0x4283b7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42817f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42826f
  41f857:	mov    DWORD PTR ds:0x42825b,0x4504
  41f861:	mov    DWORD PTR ds:0x42838f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283b3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42831f,ebx
  41f87c:	cmp    DWORD PTR ds:0x42817f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fbc
  41f890:	push   0x427fc6
  41f895:	call   DWORD PTR ds:0x428ebc
  41f89b:	and    DWORD PTR ds:0x428197,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42831f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283b3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428187,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428277,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42838b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428173,0x4283af
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428287
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42823f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x428303,0x0
  41f93e:	mov    DWORD PTR ds:0x428313,0x63c0
  41f948:	mov    DWORD PTR ds:0x4281a3,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x4282af
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x428303,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428ec0
  41f979:	sbb    DWORD PTR ds:0x4283b3,0x209
  41f983:	xor    DWORD PTR ds:0x4283a3,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42829f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x4281a3
  41f9bf:	or     DWORD PTR ds:0x42838f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x428307,0x0
  41f9d1:	mov    DWORD PTR ds:0x42824b,0x756d
  41f9db:	mov    DWORD PTR ds:0x428303,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x42830b
  41f9f0:	cmp    DWORD PTR ds:0x428307,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e44
  41fa08:	adc    DWORD PTR ds:0x42839f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428323,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42837b
  41fa1b:	add    DWORD PTR ds:0x42838b,ecx
  41fa21:	add    DWORD PTR ds:0x428383,0x77eb
  41fa2b:	or     DWORD PTR ds:0x428303,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x4282af
  41fa3b:	and    DWORD PTR ds:0x42816f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42825b,0x42819b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x4282a3,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428287,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428317,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x4281a7
  41fa8d:	mov    DWORD PTR ds:0x42819f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428287,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428093
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e48
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428163
  41fabc:	sbb    ecx,DWORD PTR ds:0x42825b
  41fac2:	mov    DWORD PTR ds:0x428163,ecx
  41fac8:	xor    DWORD PTR ds:0x4282ab,edx
  41face:	movzx  ecx,WORD PTR ds:0x428263
  41fad5:	or     DWORD PTR ds:0x4282fb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42838b
  41fae3:	add    DWORD PTR ds:0x42829f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42817b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x4281ab,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x42830f
  41fb06:	mov    DWORD PTR ds:0x428393,edx
  41fb0c:	mov    DWORD PTR ds:0x42816f,ebx
  41fb12:	mov    DWORD PTR ds:0x428317,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x4281ab,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e4c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283b3
  41fb48:	or     ecx,DWORD PTR ds:0x428283
  41fb4e:	mov    DWORD PTR ds:0x4283b3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42817b
  41fb5a:	add    ecx,DWORD PTR ds:0x4283b3
  41fb60:	mov    DWORD PTR ds:0x42817b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42829b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x4282af
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42825f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428267,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42819f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428297,0x42829b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x4283ab,0x428313
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42837f,0x0
  41fbc2:	mov    DWORD PTR ds:0x4281ab,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283b7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428287,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428187,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42837f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280ef
  41fbfd:	call   DWORD PTR ds:0x428e50
  41fc03:	and    ecx,DWORD PTR ds:0x428273
  41fc09:	adc    DWORD PTR ds:0x428303,ecx
  41fc0f:	sub    DWORD PTR ds:0x42830b,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42837b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42823b
  41fc21:	mov    DWORD PTR ds:0x42837b,ecx
  41fc27:	and    DWORD PTR ds:0x428323,0x55d2
  41fc31:	add    DWORD PTR ds:0x42819f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42828f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42829f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42816b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428287,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42823f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x4282a3,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282b7,0x2746
  41fc84:	mov    DWORD PTR ds:0x428287,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42817b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42823f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428ec4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283b3
  41fcc1:	and    DWORD PTR ds:0x42817b,0x42832f
  41fccb:	mov    ecx,DWORD PTR ds:0x428183
  41fcd1:	xor    DWORD PTR ds:0x42824f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428297
  41fcde:	sub    DWORD PTR ds:0x4283a3,ecx
  41fce4:	mov    DWORD PTR ds:0x428253,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283b7
  41fd0b:	add    eax,DWORD PTR ds:0x42817f
  41fd11:	mov    ds:0x4283b7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428323,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x42830b
  41fd39:	mov    ecx,DWORD PTR ds:0x42839b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42823b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428323,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e54
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428283,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42825f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282c3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x4282af,ecx
  41fd92:	sbb    DWORD PTR ds:0x4283a3,0x42832b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42831f,0x428323
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42818f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42837f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42837f
  41fe15:	xor    DWORD PTR ds:0x428387,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42817f,0x0
  41fe51:	not    DWORD PTR ds:0x4282ab
  41fe57:	mov    DWORD PTR ds:0x428247,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42817f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e58
  41fe7d:	and    DWORD PTR ds:0x428397,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42824f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428327
  41fe94:	and    DWORD PTR ds:0x428303,ecx
  41fe9a:	and    DWORD PTR ds:0x428277,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281bb
  41feab:	mov    ecx,DWORD PTR ds:0x4283ef
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42819f
  41fed3:	or     DWORD PTR ds:0x4283b3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42827b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42837f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282fb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42827b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428163
  41ff18:	call   DWORD PTR ds:0x428ec8
  41ff1e:	or     ecx,DWORD PTR ds:0x428183
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428327,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42824b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x9c
  41ff55:	jecxz  0x41ff98
  41ff57:	mov    esi,0x18162323
  41ff5c:	mov    ds:0x71181812,eax
  41ff61:	cmp    BYTE PTR [esi+esi*8+0x763e8c12],ch
  41ff68:	push   ss
  41ff69:	or     al,0xe7
  41ff6b:	cmp    eax,0x92a90c59
  41ff70:	lock icebp 
  41ff72:	push   ds
  41ff73:	shl    BYTE PTR [esp+edi*4-0x225871e8],cl
  41ff7a:	ss add al,0x0
  41ff7d:	xor    eax,0x2eb286d0
  41ff82:	fs adc al,0x68
  41ff85:	mov    esp,0x8ed321fa
  41ff8a:	push   es
  41ff8b:	fst    DWORD PTR ss:[ecx+ebx*1+0x7]
  41ff90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff91:	xchg   esp,eax
  41ff92:	mov    edx,DWORD PTR [eax-0x51bed378]
  41ff98:	in     al,dx
  41ff99:	jbe    0x41ff23
  41ff9b:	in     al,dx
  41ff9c:	aam    0x38
  41ff9e:	fwait
  41ff9f:	inc    esi
  41ffa0:	push   es
  41ffa1:	test   esp,edx
  41ffa3:	into   
  41ffa4:	dec    edi
  41ffa5:	xor    eax,0xb0394cc5
  41ffaa:	xor    al,0xe9
  41ffac:	(bad)  
  41ffad:	pop    edx
  41ffae:	ror    ebx,cl
  41ffb0:	wbinvd 
  41ffb2:	dec    edi
  41ffb3:	fisubr WORD PTR ds:0x6fdc4ba7
  41ffb9:	addr16 jb 0x41ffcb
  41ffbc:	(bad)  
  41ffbd:	mov    DWORD PTR [edi+0x446fef48],0xfdf8e412
  41ffc7:	faddp  st(7),st
  41ffc9:	loop   0x41ffdc
  41ffcb:	mov    edi,0x85f470eb
  41ffd0:	ins    DWORD PTR es:[edi],dx
  41ffd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffd2:	pop    ebx
  41ffd3:	pop    edx
  41ffd4:	bnd jae 0x41ff68
  41ffd7:	or     bl,0xbc
  41ffda:	jbe    0x420048
  41ffdc:	call   0x352e:0x6cd5576d
  41ffe3:	push   ebx
  41ffe4:	jg     0x420003
  41ffe6:	xor    bl,BYTE PTR [esi-0x7b]
  41ffe9:	xor    esi,esi
  41ffeb:	inc    edi
  41ffec:	cmpps  xmm4,XMMWORD PTR ds:0x62218e8f,0x2b
  41fff4:	xchg   al,bl
  41fff6:	mov    ebx,0xc0626868
  41fffb:	push   es
  41fffc:	pop    ds
  41fffd:	push   ebx
  41fffe:	adc    DWORD PTR [edi+0x699b555],0x1b1fda21
  420008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420009:	aad    0x35
  42000b:	and    al,0x86
  42000d:	in     eax,dx
  42000e:	jp     0x420046
  420010:	and    esp,DWORD PTR [ecx-0x3897481f]
  420016:	sub    BYTE PTR ds:0x1fc27fed,ch
  42001c:	inc    ebp
  42001d:	and    ah,ch
  42001f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420020:	pop    esi
  420021:	sbb    DWORD PTR [ebp-0x796942c8],esi
  420027:	and    dh,BYTE PTR ds:0x348c7d2
  42002d:	ins    DWORD PTR es:[edi],dx
  42002e:	sub    dl,dh
  420030:	jns    0x41ffb5
  420032:	inc    ecx
  420033:	mov    ebx,0x652abe72
  420038:	lock outs dx,BYTE PTR ds:[esi]
  42003a:	inc    eax
  42003b:	push   eax
  42003c:	add    esi,DWORD PTR [edx-0x607c0a83]
  420042:	xchg   ecx,eax
  420043:	out    dx,eax
  420044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420045:	xchg   ebx,eax
  420046:	mov    dl,0x81
  420048:	jle    0x420053
  42004a:	or     eax,0xabdaedb3
  42004f:	push   ecx
  420050:	mov    DWORD PTR [esi-0x74],esi
  420053:	enter  0x8f3b,0xfb
  420057:	mov    cs,esp
  420059:	clc    
  42005a:	in     eax,0x1e
  42005c:	xchg   ebp,eax
  42005d:	or     BYTE PTR [ecx],bh
  42005f:	pop    ebp
  420060:	loopne 0x4200c2
  420062:	aad    0xfe
  420064:	int    0x77
  420066:	xor    al,0x68
  420068:	into   
  420069:	push   esi
  42006a:	pop    ecx
  42006b:	cmp    DWORD PTR [ecx+0x6b],ebp
  42006e:	nop
  42006f:	xchg   DWORD PTR [edi+0x1b],edx
  420072:	push   ebx
  420073:	jp     0x4200c6
  420075:	sbb    eax,0xb2b4b8cf
  42007a:	pop    edi
  42007b:	sti    
  42007c:	add    al,0x8a
  42007e:	jle    0x4200ba
  420080:	mov    dl,0xd1
  420082:	out    0x11,eax
  420084:	aam    0xad
  420086:	(bad)  
  420087:	gs dec ebp
  420089:	bound  esi,QWORD PTR [esi-0x50]
  42008c:	jmp    0x4200a3
  42008e:	push   ecx
  42008f:	xchg   ecx,eax
  420090:	or     eax,0x77e66ace
  420095:	fbstp  TBYTE PTR gs:[esi]
  420098:	xchg   esp,eax
  420099:	or     al,0x66
  42009b:	adc    cl,BYTE PTR [esi+0x28]
  42009e:	repnz sar ebp,0x23
  4200a2:	inc    edi
  4200a3:	lds    eax,FWORD PTR [edi]
  4200a5:	sub    edx,DWORD PTR [edx+0x34]
  4200a8:	ja     0x42003f
  4200aa:	push   ss
  4200ab:	in     al,0xc0
  4200ad:	mov    dl,0x38
  4200af:	mov    ebx,0x48780257
  4200b4:	aam    0x12
  4200b6:	cli    
  4200b7:	scas   eax,DWORD PTR es:[edi]
  4200b8:	or     esp,DWORD PTR [edx+0x68669923]
  4200be:	dec    ebx
  4200bf:	xchg   ebx,eax
  4200c0:	(bad)  
  4200c1:	xor    esi,DWORD PTR [ebx]
  4200c3:	jle    0x4200a8
  4200c5:	rcl    ah,cl
  4200c7:	pop    esi
  4200c8:	xor    edx,DWORD PTR [edi-0x16]
  4200cb:	enter  0x7ba4,0xe1
  4200cf:	and    DWORD PTR [ebp-0x2a],esi
  4200d2:	fldenv [ecx]
  4200d4:	add    eax,0xe433a373
  4200d9:	jb     0x420082
  4200db:	push   esi
  4200dc:	or     edi,esi
  4200de:	jo     0x4200dc
  4200e0:	mov    WORD PTR [eax+ebp*1],fs
  4200e3:	(bad)  
  4200e4:	push   0xffffffc0
  4200e6:	hlt    
  4200e7:	shl    edi,1
  4200e9:	test   al,0x94
  4200eb:	out    dx,al
  4200ec:	ret    0x249b
  4200ef:	popa   
  4200f0:	xor    esp,DWORD PTR [eax]
  4200f2:	call   DWORD PTR [eax]
  4200f4:	xor    edi,DWORD PTR [ebp+0x21]
  4200f7:	outs   dx,BYTE PTR ds:[esi]
  4200f8:	fwait
  4200f9:	push   ebp
  4200fa:	mov    ecx,0xabd94710
  4200ff:	jns    0x4200b7
  420101:	(bad)  
  420102:	fnstenv [edi+0x68]
  420105:	mov    esi,0x35a80fd6
  42010a:	cmp    BYTE PTR [edi+0x14],0xa8
  42010e:	daa    
  42010f:	loop   0x4200c8
  420111:	jnp    0x420157
  420113:	fadd   QWORD PTR [ecx+0x67]
  420116:	rcl    BYTE PTR [esi+0x22],1
  420119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42011a:	xor    edi,ebx
  42011c:	jle    0x42009e
  42011e:	push   0x7e
  420120:	test   BYTE PTR [edi-0x4b],ch
  420123:	stc    
  420124:	jge    0x42017f
  420126:	int3   
  420127:	inc    esi
  420128:	dec    ebx
  420129:	push   ecx
  42012a:	adc    eax,0x1eca3bc7
  42012f:	lds    edi,FWORD PTR [edx-0x4f]
  420132:	call   0xae6ceb40
  420137:	push   0xab76fb
  42013c:	call   0x823461b7
  420141:	inc    ebp
  420142:	nop
  420143:	sub    al,0xbd
  420145:	jbe    0x42011a
  420147:	push   ebx
  420148:	lahf   
  420149:	mov    al,ds:0xdedcf6bb
  42014e:	jns    0x4200f0
  420150:	mov    ebx,0xa292aa5c
  420155:	mov    DWORD PTR [ecx-0x11],esi
  420158:	jmp    0x420133
  42015a:	push   ebx
  42015b:	mov    eax,es:0x4b4ecdf5
  420161:	ins    BYTE PTR es:[edi],dx
  420162:	loopne 0x42012a
  420164:	push   ebp
  420165:	(bad)  
  420167:	jne    0x4201d0
  420169:	sub    eax,DWORD PTR [edx-0x5f]
  42016c:	daa    
  42016d:	ja     0x420195
  42016f:	(bad)  
  420170:	or     al,BYTE PTR [esi]
  420172:	das    
  420173:	scas   eax,DWORD PTR es:[edi]
  420174:	test   esi,esi
  420176:	aad    0x23
  420178:	xchg   DWORD PTR [ecx-0x9],edx
  42017b:	cdq    
  42017c:	xchg   dh,ah
  42017e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42017f:	xor    al,0xe3
  420181:	enter  0x6517,0x6a
  420185:	dec    eax
  420186:	or     bh,BYTE PTR [ebp+0x17]
  420189:	jmp    0x30725507
  42018e:	cmp    al,0x53
  420190:	lods   eax,DWORD PTR ds:[esi]
  420191:	cwde   
  420192:	jb     0x42013e
  420194:	data16 adc al,0xb5
  420197:	(bad)  
  420198:	cmc    
  420199:	mov    bl,0x9c
  42019b:	jbe    0x4201c0
  42019d:	in     eax,dx
  42019e:	pop    ebp
  42019f:	outs   dx,DWORD PTR ds:[esi]
  4201a0:	mov    cs:0x988d3f13,al
  4201a6:	jns    0x4201f3
  4201a8:	fdiv   DWORD PTR [edx]
  4201aa:	add    DWORD PTR [ebx-0x7b39157],esi
  4201b0:	jns    0x42019f
  4201b2:	or     ch,BYTE PTR [esi+0x2871610]
  4201b8:	jmp    0xdd6fdd3f
  4201bd:	icebp  
  4201be:	cli    
  4201bf:	jg     0x420222
  4201c1:	jecxz  0x420223
  4201c3:	ret    0x44db
  4201c6:	retf   0x504e
  4201c9:	sahf   
  4201ca:	dec    ebp
  4201cb:	adc    DWORD PTR ds:0x41bcf656,eax
  4201d1:	inc    esi
  4201d2:	fld    TBYTE PTR [esi]
  4201d4:	lar    esi,WORD PTR [ebx+0x68368d5]
  4201db:	scas   eax,DWORD PTR es:[edi]
  4201dc:	outs   dx,DWORD PTR ds:[esi]
  4201dd:	stos   BYTE PTR es:[edi],al
  4201de:	and    al,0x40
  4201e0:	dec    ebp
  4201e1:	and    bh,bl
  4201e3:	rol    DWORD PTR [eax+0x7c],0xfb
  4201e7:	add    ebp,DWORD PTR [ecx+0x70]
  4201ea:	jns    0x420226
  4201ec:	add    DWORD PTR [ebp-0x73],esp
  4201ef:	popf   
  4201f0:	xor    esp,eax
  4201f2:	ins    BYTE PTR es:[edi],dx
  4201f3:	int3   
  4201f4:	cmp    eax,0x56036aaa
  4201f9:	loopne 0x4201af
  4201fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201fc:	push   esi
  4201fd:	js     0x42024f
  4201ff:	inc    ebp
  420200:	out    0x6b,eax
  420202:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420204:	cmc    
  420205:	xor    eax,0x64c9e875
  42020a:	outs   dx,DWORD PTR ds:[esi]
  42020b:	retf   
  42020c:	add    ebx,DWORD PTR [ebp-0x3e]
  42020f:	push   ebx
  420210:	and    eax,DWORD PTR [edi-0x26dd48a0]
  420216:	or     al,0x79
  420218:	xor    al,0xec
  42021a:	adc    bl,BYTE PTR [esi-0xce27e62]
  420220:	mov    ah,0xbc
  420222:	popf   
  420223:	inc    esi
  420224:	xchg   ebp,eax
  420225:	and    DWORD PTR [ecx+edi*2-0xbd36933],edi
  42022c:	or     esp,ecx
  42022e:	push   eax
  42022f:	das    
  420230:	xchg   edi,eax
  420231:	sti    
  420232:	jns    0x4201ca
  420234:	lods   eax,DWORD PTR ds:[esi]
  420235:	jl     0x4201fc
  420237:	nop
  420238:	and    esp,ecx
  42023a:	push   cs
  42023b:	call   0xa5b70f65
  420240:	dec    ebx
  420241:	mov    cl,al
  420243:	in     eax,0x83
  420245:	ins    DWORD PTR es:[edi],dx
  420246:	rcr    DWORD PTR [esi+0x1a],cl
  420249:	mov    DWORD PTR [ebx],edx
  42024b:	ret    0x650
  42024e:	xor    BYTE PTR [ebx-0x6904d66b],0xc4
  420255:	aaa    
  420256:	push   ebx
  420257:	stc    
  420258:	loop   0x4201e1
  42025a:	adc    eax,0x84e67fcd
  42025f:	mov    ebp,0xa0d04b0
  420264:	ds mov ebx,0x1c99f0fe
  42026a:	xor    cl,BYTE PTR [esi+0x3b]
  42026d:	mov    ds:0xbd61c43c,al
  420272:	call   0x9040:0xc699071a
  420279:	adc    al,0x7
  42027b:	test   al,0x5a
  42027d:	mov    eax,ds:0x9e1db08
  420282:	daa    
  420283:	outs   dx,DWORD PTR ds:[esi]
  420284:	adc    BYTE PTR ds:0x3e7af0b8,ch
  42028a:	xor    eax,0xfe23a575
  42028f:	test   BYTE PTR [ecx-0x51b20262],bl
  420295:	in     eax,0x37
  420297:	pop    ds
  420298:	pop    ds
  420299:	adc    al,bl
  42029b:	pop    es
  42029c:	in     eax,dx
  42029d:	add    BYTE PTR [eax],cl
  42029f:	mov    ecx,DWORD PTR [ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x42829f,0x42831b
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428397
  4202b7:	add    DWORD PTR ds:0x42831f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42839b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428177,0x428297
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42838b,0x42816f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428283,0x42823b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42831b,0x0
  42030c:	mov    DWORD PTR ds:0x428273,edx
  420312:	mov    esi,DWORD PTR ds:0x42823b
  420318:	mov    DWORD PTR ds:0x428317,ebx
  42031e:	mov    DWORD PTR ds:0x428327,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428193,0x3019
  420337:	not    DWORD PTR ds:0x42831b
  42033d:	cmp    DWORD PTR ds:0x42831b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42837b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428ecc
  420363:	adc    ecx,DWORD PTR ds:0x428253
  420369:	xor    DWORD PTR ds:0x42830f,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42822b
  420377:	mov    esi,DWORD PTR ds:0x4282e3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428197,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x42830b,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428387,0x0
  4203b4:	mov    DWORD PTR ds:0x4282af,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x4281ab
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42826f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42826b,edi
  4203db:	cmp    DWORD PTR ds:0x428387,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fff
  4203ed:	call   DWORD PTR ds:0x428ed0
  4203f3:	movzx  esi,WORD PTR ds:0x428187
  4203fa:	add    DWORD PTR ds:0x428307,esi
  420400:	adc    DWORD PTR ds:0x4281a7,ebx
  420406:	add    DWORD PTR ds:0x428383,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428383
  420416:	or     DWORD PTR ds:0x42837f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x428303
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428283,0x0
  42042e:	mov    DWORD PTR ds:0x428383,0x5615
  420438:	mov    DWORD PTR ds:0x42817b,0x419b
  420442:	mov    DWORD PTR ds:0x42819f,0x389d
  42044c:	not    DWORD PTR ds:0x428273
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428283,0x0
  420463:	je     0x4204a0
  420469:	push   0x42824f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ed4
  420477:	sub    DWORD PTR ds:0x428307,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42827b
  420488:	xor    esi,DWORD PTR ds:0x42832b
  42048e:	mov    DWORD PTR ds:0x42827b,esi
  420494:	mov    esi,DWORD PTR ds:0x428263
  42049a:	or     DWORD PTR ds:0x4282ff,esi
  4204a0:	xor    DWORD PTR ds:0x42832f,ecx
  4204a6:	add    DWORD PTR ds:0x42832f,ebx
  4204ac:	or     DWORD PTR ds:0x428387,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42819b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42817f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283b7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42819b,0x0
  420500:	mov    DWORD PTR ds:0x428303,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42829f
  42051b:	cmp    DWORD PTR ds:0x42819b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ed8
  420543:	mov    esi,DWORD PTR ds:0x42818b
  420549:	sbb    DWORD PTR ds:0x4281a7,esi
  42054f:	and    DWORD PTR ds:0x4282a3,edx
  420555:	sbb    DWORD PTR ds:0x428257,edx
  42055b:	mov    esi,DWORD PTR ds:0x42838f
  420561:	or     DWORD PTR ds:0x428393,esi
  420567:	mov    esi,DWORD PTR ds:0x4281b7
  42056d:	mov    edx,DWORD PTR ds:0x42834f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42838f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428183,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x4283a7,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428243,0x2222
  4205bd:	not    DWORD PTR ds:0x428253
  4205c3:	cmp    DWORD PTR ds:0x428183,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x4283af
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e5c
  4205e8:	xor    edx,DWORD PTR ds:0x428257
  4205ee:	mov    ecx,DWORD PTR ds:0x42823f
  4205f4:	or     DWORD PTR ds:0x42816f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282e3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x4283ab,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42828b
  42061a:	xor    DWORD PTR ds:0x428277,edx
  420620:	movzx  ecx,WORD PTR ds:0x428263
  420627:	and    ecx,DWORD PTR ds:0x42839b
  42062d:	mov    DWORD PTR ds:0x428263,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x4283af,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	push   ebp
  42066f:	imul   edx,DWORD PTR [ebx-0x56],0xffffffac
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	rcl    DWORD PTR [edx-0x5aa6d8fd],1
  420680:	popf   
  420681:	push   0x25
  420683:	outs   dx,DWORD PTR ds:[esi]
  420684:	aas    
  420685:	push   esp
  420686:	and    eax,0xb4da47c8
  42068b:	jbe    0x4206e2
  42068d:	xor    eax,0xc880cc66
  420692:	add    eax,0x916f7c99
  420697:	daa    
  420698:	into   
  420699:	or     bh,BYTE PTR [ebx+0x5c32c2b7]
  42069f:	xor    ah,cl
  4206a1:	inc    edi
  4206a2:	dec    ecx
  4206a3:	cmp    edx,DWORD PTR [edi-0x7672b509]
  4206a9:	out    0x45,al
  4206ab:	pusha  
  4206ac:	fist   WORD PTR ds:0xdf65393e
  4206b2:	in     eax,0xa5
  4206b4:	adc    dh,BYTE PTR [esi]
  4206b6:	je     0x42067f
  4206b8:	mov    cl,0x77
  4206ba:	sub    BYTE PTR [eax+0x66a716e2],dh
  4206c0:	or     di,WORD PTR [eax+0x29]
  4206c4:	in     eax,dx
  4206c5:	stc    
  4206c6:	mov    bh,0x90
  4206c8:	ficom  DWORD PTR [edx]
  4206ca:	fwait
  4206cb:	adc    eax,DWORD PTR [ebx+0x409dc353]
  4206d1:	out    0x1a,al
  4206d3:	pop    ecx
  4206d4:	xor    DWORD PTR [eax],ebx
  4206d6:	das    
  4206d7:	xchg   ecx,eax
  4206d8:	rcl    BYTE PTR [edi+0x2e],1
  4206db:	add    BYTE PTR [eax+eiz*8],0x6d
  4206df:	push   es
  4206e0:	out    dx,eax
  4206e1:	aaa    
  4206e2:	push   0xffffffd6
  4206e4:	scas   eax,DWORD PTR es:[edi]
  4206e5:	mov    bh,0x59
  4206e7:	add    al,0x0
  4206e9:	leave  
  4206ea:	xchg   edx,eax
  4206eb:	lahf   
  4206ec:	mov    DWORD PTR [ebx+0x57765cc8],edi
  4206f2:	fcomp  QWORD PTR [ecx+0x20]
  4206f5:	(bad)  
  4206f6:	fdivp  st(1),st
  4206f8:	push   ebp
  4206f9:	cmovl  edi,esi
  4206fc:	and    DWORD PTR [ebp-0x54],ebp
  4206ff:	xchg   edx,eax
  420700:	enter  0x5708,0x54
  420704:	es jle 0x42069c
  420707:	sub    al,BYTE PTR [esi-0x2f598e47]
  42070d:	add    dl,al
  42070f:	repnz out 0x60,al
  420712:	push   cs
  420713:	push   cs
  420714:	cmp    ebx,eax
  420716:	push   ss
  420717:	dec    edi
  420718:	push   eax
  420719:	push   0x25
  42071b:	jl     0x420795
  42071d:	or     eax,0xaabfb922
  420722:	ins    DWORD PTR es:[edi],dx
  420723:	sub    eax,0xd4f0f01d
  420728:	mov    ecx,0x63a4160e
  42072d:	sub    ebp,DWORD PTR [eax-0x57]
  420730:	xchg   DWORD PTR [edi-0x39],ecx
  420733:	ds lahf 
  420735:	ins    BYTE PTR es:[edi],dx
  420736:	sbb    al,0xfa
  420738:	jns    0x42074a
  42073a:	clc    
  42073b:	ficom  WORD PTR [ecx-0x29f67b16]
  420741:	addr16 push eax
  420743:	ja     0x420784
  420745:	int3   
  420746:	ds add al,0xe3
  420749:	inc    edx
  42074a:	jae    0x420740
  42074c:	ret    
  42074d:	adc    edx,ebp
  42074f:	dec    ebx
  420750:	inc    ecx
  420751:	mov    BYTE PTR [eax-0x1286c9be],bl
  420757:	aas    
  420758:	mov    ch,0xe3
  42075a:	repz mov edi,0x569b1ca1
  420760:	fs stc 
  420762:	cmp    cl,BYTE PTR [edx-0x3edb59c5]
  420768:	inc    BYTE PTR [ecx+ecx*4+0x12eb31fe]
  42076f:	outs   dx,BYTE PTR ds:[esi]
  420770:	jae    0x42071c
  420772:	jne    0x4207bf
  420774:	jns    0x4207de
  420776:	cs mov dl,0x30
  420779:	or     al,0xab
  42077b:	or     esp,esi
  42077d:	in     al,0x41
  42077f:	cmp    BYTE PTR [edx],bh
  420781:	push   ss
  420782:	pop    ss
  420783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420784:	into   
  420785:	xor    eax,0xb483b667
  42078a:	aad    0x9f
  42078c:	cwde   
  42078d:	mov    ds:0xd5791246,eax
  420792:	int    0x78
  420794:	addr16 in al,0xdd
  420797:	xor    DWORD PTR [edx],ebp
  420799:	bound  eax,QWORD PTR [edi-0x2f000f77]
  42079f:	imul   esp,DWORD PTR [ecx-0x31],0x10ef86e
  4207a6:	outs   dx,BYTE PTR ds:[esi]
  4207a7:	dec    esp
  4207a8:	xor    dl,dh
  4207aa:	(bad)  [edx]
  4207ac:	arpl   WORD PTR [eax-0x5e],di
  4207af:	int    0x64
  4207b1:	int    0x83
  4207b3:	pop    edi
  4207b4:	out    0xf7,eax
  4207b6:	rcl    BYTE PTR [eax-0x62],1
  4207b9:	xor    esp,ebx
  4207bb:	loop   0x420766
  4207bd:	ror    DWORD PTR [ecx],0x92
  4207c0:	jmp    0x3b38:0x3b73d802
  4207c7:	push   ebx
  4207c8:	cmp    BYTE PTR [esi+esi*1],al
  4207cb:	icebp  
  4207cc:	cmp    cl,cl
  4207ce:	inc    ebx
  4207cf:	jb     0x42079b
  4207d1:	in     eax,0xef
  4207d3:	daa    
  4207d4:	mov    al,ds:0xbf96e686
  4207d9:	adc    al,0x7d
  4207db:	(bad)  
  4207dc:	mov    edx,0x6f36df72
  4207e1:	dec    eax
  4207e2:	xchg   DWORD PTR [ebx-0x1f],ecx
  4207e5:	sbb    DWORD PTR [eax+0x48ded233],esp
  4207eb:	out    dx,eax
  4207ec:	data16 cli 
  4207ee:	push   esi
  4207ef:	inc    ebx
  4207f0:	nop
  4207f1:	outs   dx,BYTE PTR ds:[esi]
  4207f2:	test   eax,0x91fba5af
  4207f7:	imul   esp,DWORD PTR [ebx+ecx*2],0x31
  4207fb:	out    dx,eax
  4207fc:	retf   0xe95
  4207ff:	gs inc ebx
  420801:	mov    ah,0x2
  420803:	jg     0x42082b
  420805:	pop    ebp
  420806:	icebp  
  420807:	popf   
  420808:	fwait
  420809:	leave  
  42080a:	test   BYTE PTR [ebx],0xba
  42080d:	(bad)  
  42080e:	jno    0x420854
  420810:	rcr    ecx,0xaa
  420813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420814:	ret    0xb855
  420817:	cmp    eax,0xd90fab0c
  42081c:	(bad)  
  42081e:	ror    BYTE PTR [ebx+edi*8+0xd7b4268],1
  420825:	push   cs
  420826:	test   al,0x21
  420828:	xchg   esi,eax
  420829:	push   edx
  42082a:	sahf   
  42082b:	repz rcl DWORD PTR [ecx-0x6],cl
  42082f:	pusha  
  420830:	pop    eax
  420831:	cmp    bl,BYTE PTR [edx+0x64]
  420834:	xor    al,0xe9
  420836:	xor    esi,DWORD PTR [edx+0x21]
  420839:	xchg   edx,eax
  42083a:	jge    0x42082e
  42083c:	push   esi
  42083d:	fnstcw WORD PTR [ebp+0x65dfe9ce]
  420843:	push   eax
  420844:	shl    DWORD PTR [edx+0xe],1
  420847:	retf   
  420848:	inc    ebp
  420849:	mov    ch,0x34
  42084b:	retf   
  42084c:	gs clc 
  42084e:	xlat   BYTE PTR ds:[ebx]
  42084f:	sbb    DWORD PTR [edx],ecx
  420851:	imul   esp,edx,0x4f
  420854:	sti    
  420855:	xor    eax,0x9da99ea1
  42085a:	pop    ebx
  42085b:	or     eax,0x127c480f
  420860:	and    eax,0x89df21e5
  420865:	push   eax
  420866:	out    0xba,eax
  420868:	adc    al,0x46
  42086a:	int    0x1f
  42086c:	daa    
  42086d:	dec    edi
  42086e:	add    ecx,DWORD PTR [edi]
  420870:	xchg   ebx,eax
  420871:	mov    ebx,0xd90ace24
  420876:	mov    ds:0x6ba59164,al
  42087b:	dec    eax
  42087c:	mov    al,BYTE PTR [ebx]
  42087e:	aas    
  42087f:	je     0x420854
  420881:	pop    edi
  420882:	jb     0x42089d
  420884:	dec    eax
  420885:	mov    BYTE PTR [ecx],bl
  420887:	pop    ss
  420888:	add    edi,DWORD PTR [eax+0x4bfbb4a9]
  42088e:	imul   ebp,edx,0x1c
  420891:	loopne 0x420904
  420893:	inc    ecx
  420894:	inc    esp
  420895:	cmp    ebx,DWORD PTR [eax+0x3c04b59b]
  42089b:	call   0xa1b32a1a
  4208a0:	mov    esi,0xdb907eb0
  4208a5:	mov    ds:0xcd39bb53,al
  4208aa:	push   ds
  4208ab:	iret   
  4208ac:	in     eax,dx
  4208ad:	loope  0x4208ef
  4208af:	xor    ah,al
  4208b1:	or     eax,0x3c97a08d
  4208b6:	outs   dx,DWORD PTR ds:[esi]
  4208b7:	push   edi
  4208b8:	jno    0x420877
  4208ba:	imul   ebx,DWORD PTR [edi],0xffffffe0
  4208bd:	sub    eax,0x1cc8f32f
  4208c2:	cli    
  4208c3:	call   DWORD PTR [edi]
  4208c5:	das    
  4208c6:	adc    eax,DWORD PTR [ecx+ebx*1]
  4208c9:	sbb    edx,ebx
  4208cb:	cmp    eax,DWORD PTR [esi-0x739afdf0]
  4208d1:	lahf   
  4208d2:	fbld   TBYTE PTR [eax]
  4208d4:	push   ds
  4208d5:	bnd ja 0x4208a5
  4208d8:	call   FWORD PTR [ecx+edi*2]
  4208db:	loop   0x4208f5
  4208dd:	cmp    eax,0x49f54847
  4208e2:	inc    DWORD PTR [ebx+eax*4]
  4208e5:	sub    eax,0xec3954c8
  4208ea:	lods   eax,DWORD PTR ds:[esi]
  4208eb:	retf   0xfe6
  4208ee:	imul   eax,DWORD PTR [ecx-0x15],0xffffff81
  4208f2:	mov    cl,0x98
  4208f4:	lock ins BYTE PTR es:[edi],dx
  4208f6:	mov    dh,BYTE PTR [edi-0x7068918e]
  4208fc:	xor    bl,0x92
  4208ff:	(bad)  
  420900:	push   edx
  420901:	loope  0x42097c
  420903:	mov    bh,0xca
  420905:	fsub   DWORD PTR [eax-0x19ed94f]
  42090b:	add    ebx,DWORD PTR [esi*2+0x358f9ffe]
  420912:	mov    ds:0x250e723e,al
  420917:	push   edx
  420918:	stc    
  420919:	xor    ah,BYTE PTR [edi]
  42091b:	scas   eax,DWORD PTR es:[edi]
  42091c:	add    BYTE PTR ds:0x61869444,al
  420922:	shr    ebp,cl
  420924:	(bad)  
  420925:	or     BYTE PTR [ecx+0x5c],dh
  420928:	sbb    BYTE PTR [edi-0x45b1c0e0],0x82
  42092f:	pop    ecx
  420930:	dec    edi
  420931:	xchg   esi,eax
  420932:	fcomp  QWORD PTR [edi+0x63]
  420935:	sahf   
  420936:	cmp    al,0x12
  420938:	daa    
  420939:	xchg   ecx,eax
  42093a:	cvttps2pi mm4,QWORD PTR [ecx+esi*8-0x4a4df0e5]
  420942:	fwait
  420943:	loopne 0x4208d0
  420945:	inc    ebx
  420947:	cld    
  420948:	inc    edx
  420949:	hlt    
  42094a:	sbb    DWORD PTR [edx+0x6],0x4b
  42094e:	inc    ecx
  42094f:	mov    DWORD PTR [ecx+0x263f0889],edi
  420955:	sub    ebp,esi
  420957:	repz xchg esp,eax
  420959:	les    edx,FWORD PTR [edx+0x32]
  42095c:	inc    ebp
  42095d:	add    esp,DWORD PTR [edi*2-0x741dfd71]
  420964:	dec    edx
  420965:	pmulhw mm6,QWORD PTR [ecx]
  420968:	inc    esi
  420969:	addr16 sbb eax,0x853e6271
  42096f:	das    
  420970:	inc    ecx
  420971:	cwde   
  420972:	jge    0x42097a
  420974:	aad    0xb9
  420976:	pushf  
  420977:	mov    cl,0x53
  420979:	fs retf 0xdcb9
  42097d:	sub    al,0x32
  42097f:	push   es
  420980:	jge    0x420950
  420982:	int3   
  420983:	sbb    DWORD PTR [esi],edi
  420985:	sub    BYTE PTR [ebx+ecx*1-0x769a8f48],0x21
  42098d:	sbb    DWORD PTR [edi],0xffffffbc
  420990:	pop    ds
  420991:	sub    esp,esi
  420993:	in     al,0xc
  420995:	inc    edx
  420996:	inc    edx
  420997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420998:	and    DWORD PTR [ebx+eiz*2-0x7b],edi
  42099c:	imul   edi,DWORD PTR [ebx-0x6],0xaa2fbe67
  4209a3:	adc    BYTE PTR ds:0x42dcfb6f,bl
  4209a9:	xchg   ebp,eax
  4209aa:	xchg   esp,eax
  4209ab:	mov    al,0x40
  4209ad:	cmp    DWORD PTR [esi+0x51d60800],ebx
  4209b3:	cdq    
  4209b4:	shl    BYTE PTR [esi],1
  4209b6:	sbb    al,0x18
  4209b8:	inc    edx
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428273
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x42830f,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428337,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42824f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42817b,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283b3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428337,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e60
  420a34:	sub    DWORD PTR ds:0x42830b,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42823f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42829b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x42830b
  420a66:	sub    DWORD PTR ds:0x42831f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42817f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428293,0x0
  420a81:	mov    DWORD PTR ds:0x4282fb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428333
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42827b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428293,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e64
  420abd:	mov    esi,DWORD PTR ds:0x42837b
  420ac3:	or     DWORD PTR ds:0x4282a3,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281b3
  420ad1:	mov    esi,DWORD PTR ds:0x4283f7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42817b
  420ae2:	or     DWORD PTR ds:0x4282a3,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x428303,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x50
  420b0e:	cld    
  420b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b10:	mov    esp,0x18161736
  420b15:	mov    ds:0xa1181812,eax
  420b1a:	into   
  420b1b:	push   esp
  420b1c:	loope  0x420b04
  420b1e:	cmc    
  420b1f:	sub    bh,BYTE PTR [edi+0x5e]
  420b22:	xor    ch,BYTE PTR [esi+0x34]
  420b25:	xchg   esi,eax
  420b26:	(bad)  
  420b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b28:	stos   BYTE PTR es:[edi],al
  420b29:	mov    al,0x2b
  420b2b:	mov    esi,0x9f34e58d
  420b30:	xlat   BYTE PTR ds:[ebx]
  420b31:	nop
  420b32:	fnsave [edi]
  420b34:	jno    0x420bb2
  420b36:	jae    0x420b8f
  420b38:	out    0x98,al
  420b3a:	push   ss
  420b3b:	loop   0x420b73
  420b3d:	enter  0x36c3,0xd6
  420b41:	in     eax,dx
  420b42:	nop
  420b43:	nop
  420b44:	cmp    ecx,DWORD PTR [esp+ebp*4-0xa065eec]
  420b4b:	scas   eax,DWORD PTR es:[edi]
  420b4c:	bound  esp,QWORD PTR ds:[ecx-0x5bb9eb1d]
  420b53:	out    0xa1,eax
  420b55:	pop    edi
  420b56:	jmp    0x420bc9
  420b58:	shr    BYTE PTR [eax],0x8a
  420b5b:	jl     0x420af2
  420b5d:	sti    
  420b5e:	mov    dh,0xb6
  420b60:	arpl   WORD PTR [ecx-0x694873f3],si
  420b66:	fimul  DWORD PTR [edx+0x760d2745]
  420b6c:	mov    bl,0x1
  420b6e:	leave  
  420b6f:	mov    dl,0x8b
  420b71:	enter  0x5ee5,0x62
  420b75:	jmp    0x6765:0xa22ad6f1
  420b7c:	ror    DWORD PTR [edx+0x58],1
  420b7f:	jmp    0x456702f2
  420b84:	xor    BYTE PTR [ebx+0x46f3a039],bl
  420b8a:	mov    bh,0x12
  420b8c:	mov    esp,fs
  420b8e:	and    BYTE PTR [esi],bh
  420b90:	sbb    bl,ah
  420b92:	sti    
  420b93:	xchg   ebx,eax
  420b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b95:	rcl    BYTE PTR [edi],0x32
  420b98:	pop    ss
  420b99:	dec    esi
  420b9a:	inc    edx
  420b9b:	iret   
  420b9c:	xor    DWORD PTR [ebx-0x35],0x6c
  420ba0:	repnz pop ecx
  420ba2:	inc    esi
  420ba3:	inc    edi
  420ba4:	dec    ebp
  420ba5:	dec    edi
  420ba6:	leave  
  420ba7:	cmp    DWORD PTR [edx+0x500d716e],ebx
  420bad:	loopne 0x420b58
  420baf:	sub    DWORD PTR [ecx+ecx*1-0x2878bbfd],edx
  420bb6:	xor    BYTE PTR [edi+0x145c2287],al
  420bbc:	aas    
  420bbd:	push   cs
  420bbe:	pop    eax
  420bbf:	ja     0x420b78
  420bc1:	les    ecx,FWORD PTR [ebx+0x38620fc6]
  420bc7:	cdq    
  420bc8:	ss sti 
  420bca:	xchg   edx,eax
  420bcb:	jmp    0x43d:0xa7e163a8
  420bd2:	mov    ah,0x50
  420bd4:	cs jbe 0x420bd1
  420bd7:	xor    bl,BYTE PTR [eax+0x5a]
  420bda:	lea    esi,[ecx-0x2f]
  420bdd:	and    DWORD PTR [edi],esp
  420bdf:	pop    ebp
  420be0:	adc    DWORD PTR [esi+0x786decb0],ebp
  420be6:	mov    edi,0x285001c8
  420beb:	bound  edx,QWORD PTR [eax]
  420bed:	(bad)  
  420bee:	lods   al,BYTE PTR ds:[esi]
  420bef:	jbe    0x420b90
  420bf1:	retf   
  420bf2:	push   es
  420bf3:	lea    ecx,ds:0x4c08a004
  420bf9:	jns    0x420c2e
  420bfb:	xlat   BYTE PTR ds:[ebx]
  420bfc:	mov    cl,BYTE PTR fs:[edi+0x5e]
  420c00:	mov    eax,ds:0xa3781266
  420c05:	xor    eax,0x77ceaf9b
  420c0a:	in     al,dx
  420c0b:	fs in  eax,dx
  420c0d:	pop    esi
  420c0e:	push   es
  420c0f:	rcr    BYTE PTR [edi+0x4aaf221f],0x8
  420c16:	mov    cl,0x98
  420c18:	imul   BYTE PTR [ebp-0x79f0ca23]
  420c1e:	int3   
  420c1f:	pop    es
  420c20:	in     al,0xdc
  420c22:	fcmove st,st(3)
  420c24:	imul   ecx,DWORD PTR [ecx],0x1a
  420c27:	lea    ecx,[edx+0x44]
  420c2a:	aaa    
  420c2b:	jo     0x420c8d
  420c2d:	je     0x420c92
  420c2f:	xor    dl,bl
  420c31:	test   eax,0x9f7832d5
  420c36:	and    bl,BYTE PTR [ebp-0x6c04e0b9]
  420c3c:	inc    eax
  420c3d:	lea    ebp,[esi+0x2d]
  420c40:	pusha  
  420c41:	cmp    esp,DWORD PTR [esi]
  420c43:	mov    ecx,0x177b2b91
  420c48:	imul   ebp,eax,0xea4c542
  420c4e:	push   ss
  420c4f:	add    al,0xf6
  420c51:	aam    0x87
  420c53:	xchg   edx,eax
  420c54:	pop    ecx
  420c55:	cmp    eax,0x44fd52f0
  420c5a:	mov    ch,0x49
  420c5c:	jmp    0xe0134420
  420c61:	jge    0x420c67
  420c63:	sub    al,BYTE PTR [ebp+0x5781076]
  420c69:	lahf   
  420c6a:	in     eax,0x75
  420c6c:	jbe    0x420ca6
  420c6e:	ficomp WORD PTR [esi+0x23]
  420c71:	scas   al,BYTE PTR es:[edi]
  420c72:	not    BYTE PTR [edi]
  420c74:	lock adc ebp,ebp
  420c77:	sbb    al,0x99
  420c79:	lahf   
  420c7a:	sbb    al,0x62
  420c7c:	and    BYTE PTR [edx+0x5d],0x9
  420c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c81:	psubb  mm0,QWORD PTR [ecx]
  420c84:	sbb    dl,BYTE PTR [ebx-0x24]
  420c87:	jg     0x420c09
  420c89:	sti    
  420c8a:	sbb    DWORD PTR [ecx],ebx
  420c8c:	mov    ecx,0xd246a11b
  420c91:	mov    cl,0xe9
  420c93:	mov    eax,ds:0x1d41be5d
  420c98:	ss ins BYTE PTR es:[edi],dx
  420c9a:	(bad)  
  420c9b:	loopne 0x420c43
  420c9d:	mov    cl,0x4
  420c9f:	jb     0x420caf
  420ca1:	xchg   ebx,eax
  420ca2:	xor    edi,edx
  420ca4:	push   0x5c5a7df1
  420ca9:	xor    ch,BYTE PTR [edx+0x49adec3f]
  420caf:	xchg   ebp,eax
  420cb0:	(bad)  
  420cb1:	fisttp QWORD PTR [edi]
  420cb3:	je     0x420cab
  420cb5:	call   0x131dfb5
  420cba:	in     al,dx
  420cbb:	mov    cl,BYTE PTR [ebx-0x2a83e0df]
  420cc1:	cmp    BYTE PTR [ebx-0x60b4471b],bh
  420cc7:	xor    al,0x92
  420cc9:	popf   
  420cca:	pop    eax
  420ccb:	pop    ds
  420ccc:	jecxz  0x420ce8
  420cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ccf:	lock rol dh,cl
  420cd2:	jae    0x420ced
  420cd4:	call   0x5c3d9c42
  420cd9:	jns    0x420cb0
  420cdb:	push   edi
  420cdc:	(bad)  
  420cde:	add    DWORD PTR [edx+edi*4-0x3355f91d],esi
  420ce5:	dec    eax
  420ce6:	mov    ds:0x391995a7,al
  420ceb:	jecxz  0x420d27
  420ced:	stos   BYTE PTR es:[edi],al
  420cee:	xchg   dh,dl
  420cf0:	rcr    dh,0x20
  420cf3:	(bad)  
  420cf5:	je     0x420d24
  420cf7:	add    al,0x41
  420cfa:	push   ds
  420cfb:	cmp    al,0x95
  420cfd:	clc    
  420cfe:	cmc    
  420cff:	xchg   edi,eax
  420d00:	adc    BYTE PTR [ecx],ah
  420d02:	inc    ebx
  420d03:	xchg   esp,eax
  420d04:	sub    al,0x1a
  420d06:	mov    ch,0xf3
  420d08:	shr    BYTE PTR [eax],1
  420d0a:	mov    ah,0x2a
  420d0c:	push   esi
  420d0d:	rcl    esp,0x9b
  420d10:	xchg   DWORD PTR [edx-0x5b],edi
  420d13:	sahf   
  420d14:	ror    BYTE PTR [ecx+0x175b2703],cl
  420d1a:	fdiv   st,st(6)
  420d1c:	inc    eax
  420d1d:	push   edx
  420d1e:	add    eax,0xa94472e3
  420d23:	in     al,dx
  420d24:	in     al,dx
  420d25:	and    DWORD PTR [ebx+0x5e08a4e6],ebp
  420d2b:	mov    dh,0x4b
  420d2d:	repnz pop edx
  420d2f:	sbb    eax,0x9a51b255
  420d34:	test   al,0x21
  420d36:	ror    BYTE PTR [esi],1
  420d38:	lods   eax,DWORD PTR ds:[esi]
  420d39:	xor    eax,0x5bbe017f
  420d3e:	or     esp,DWORD PTR [esi-0x7e]
  420d41:	icebp  
  420d42:	repnz stos BYTE PTR es:[edi],al
  420d44:	fwait
  420d45:	inc    edx
  420d46:	fsubr  DWORD PTR [eax]
  420d48:	dec    eax
  420d49:	inc    esi
  420d4a:	bound  ebp,QWORD PTR [edi+0x15bb73f]
  420d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d51:	das    
  420d52:	dec    eax
  420d53:	enter  0x84,0xb
  420d57:	in     eax,0x60
  420d59:	pop    ebx
  420d5a:	pop    DWORD PTR [ebx]
  420d5c:	(bad)  
  420d5d:	pop    edi
  420d5e:	jno    0x420d7b
  420d60:	or     ch,BYTE PTR [ebx-0xd]
  420d63:	int3   
  420d64:	mov    bl,0xcb
  420d66:	xchg   edx,eax
  420d67:	push   ss
  420d68:	stos   BYTE PTR es:[edi],al
  420d69:	stos   DWORD PTR es:[edi],eax
  420d6a:	push   eax
  420d6b:	arpl   WORD PTR [ecx-0x3e],di
  420d6e:	outs   dx,BYTE PTR ds:[esi]
  420d6f:	shr    ebx,1
  420d71:	adc    BYTE PTR [esi-0x49],0x4e
  420d75:	mov    ds:0x4f944231,eax
  420d7a:	and    DWORD PTR [ebx],ebx
  420d7c:	(bad)  
  420d7d:	xchg   edx,eax
  420d7e:	push   esi
  420d7f:	rep stos DWORD PTR es:[edi],eax
  420d81:	jmp    0x2af1f640
  420d86:	ins    DWORD PTR es:[edi],dx
  420d87:	mov    WORD PTR ds:0x1bd8c730,cs
  420d8d:	(bad)  [ebp-0x2a284f9f]
  420d93:	aam    0x19
  420d95:	add    al,0x8f
  420d97:	jle    0x420dcc
  420d99:	test   al,0x2e
  420d9b:	call   0xf85ad731
  420da0:	aad    0x6c
  420da2:	sbb    esi,eax
  420da4:	outs   dx,DWORD PTR ds:[esi]
  420da5:	sti    
  420da6:	sahf   
  420da7:	inc    ecx
  420da8:	and    eax,0xda3feb97
  420dad:	xchg   ecx,eax
  420dae:	inc    esi
  420daf:	push   esi
  420db0:	ds push ss
  420db2:	into   
  420db3:	mov    gs,WORD PTR [edx+0x26f1ba42]
  420db9:	sub    eax,0x8171d6ab
  420dbe:	lahf   
  420dbf:	dec    edi
  420dc0:	fadd   QWORD PTR [ebx]
  420dc2:	test   eax,0x84446c52
  420dc7:	in     al,0x4
  420dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dca:	push   ebp
  420dcb:	sub    BYTE PTR [edi],bh
  420dcd:	push   ecx
  420dce:	xlat   BYTE PTR ds:[ebx]
  420dcf:	sub    al,0xae
  420dd1:	ds repz pop ss
  420dd4:	ins    BYTE PTR es:[edi],dx
  420dd5:	cwde   
  420dd6:	and    bl,BYTE PTR [ecx-0x16]
  420dd9:	mov    al,0x1a
  420ddb:	cmp    ch,ah
  420ddd:	jp     0x420dda
  420ddf:	enter  0x99ab,0x2
  420de3:	pusha  
  420de4:	loopne 0x420e49
  420de6:	mov    ebp,0xec23f2ce
  420deb:	mov    ebx,0x72e3de3d
  420df0:	sub    eax,0xdcd63324
  420df5:	or     BYTE PTR [edx-0x18],dh
  420df8:	add    bh,cl
  420dfa:	(bad)  
  420dfc:	icebp  
  420dfd:	jmp    0xad5:0xeab79463
  420e04:	pop    ecx
  420e05:	in     al,dx
  420e06:	cmp    DWORD PTR [eax-0x1689c6df],ebx
  420e0c:	popf   
  420e0d:	adc    ebx,edi
  420e0f:	fst    QWORD PTR [edx]
  420e11:	jae    0x420e8e
  420e13:	inc    edx
  420e14:	out    dx,al
  420e15:	aaa    
  420e16:	push   0x1b
  420e18:	ja     0x420da7
  420e1a:	adc    DWORD PTR [esi*2-0x44704f6f],ecx
  420e21:	push   ebx
  420e22:	mov    edi,0x10878b27
  420e27:	dec    esi
  420e28:	sub    BYTE PTR ds:0x436566a9,al
  420e2e:	mov    ecx,DWORD PTR [ebp+0x4a362154]
  420e34:	sub    dh,BYTE PTR [ebp+0xdcb484c]
  420e3a:	ds mov edi,0x1f04076c
  420e40:	inc    eax
  420e41:	mov    ds:0x21ed1ab7,eax
  420e46:	arpl   ax,di
  420e48:	and    DWORD PTR [edi],ebx
  420e4a:	outs   dx,BYTE PTR ds:[esi]
  420e4b:	mov    ebx,0xe5d638a2
  420e50:	(bad)  
  420e51:	xlat   BYTE PTR ds:[ebx]
  420e52:	scas   eax,DWORD PTR es:[edi]
  420e53:	xor    bh,BYTE PTR [ecx-0x7e89b97b]
  420e59:	jmp    0x358b:0x29ad
  420e60:	fwait
  420e61:	add    DWORD PTR [edx+0x0],0x838f3519
  420e68:	inc    edx
  420e69:	add    BYTE PTR [edi],cl
  420e6b:	scas   eax,DWORD PTR es:[edi]
  420e6c:	rol    BYTE PTR [ebx+0x4283ab3d],1
  420e72:	add    BYTE PTR [eax],al
  420e74:	mov    DWORD PTR ds:0x428263,ebx
  420e7a:	mov    DWORD PTR ds:0x42819b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42818f
  420e8e:	mov    DWORD PTR ds:0x428273,0x776f
  420e98:	cmp    DWORD PTR ds:0x4283ab,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428247
  420eaa:	push   0x4280af
  420eaf:	call   DWORD PTR ds:0x428e68
  420eb5:	add    ecx,DWORD PTR ds:0x4283a7
  420ebb:	xor    esi,DWORD PTR ds:0x42823f
  420ec1:	adc    DWORD PTR ds:0x428297,edx
  420ec7:	xor    DWORD PTR ds:0x42831f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42824b
  420ed3:	or     esi,DWORD PTR ds:0x4281a7
  420ed9:	mov    DWORD PTR ds:0x42824b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42827f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428167
  420eef:	sbb    eax,DWORD PTR ds:0x42831b
  420ef5:	mov    ds:0x428167,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428217
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42836f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42831f,0x0
  420f23:	mov    DWORD PTR ds:0x4282b3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428263,edx
  420f33:	mov    DWORD PTR ds:0x42829f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428383,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42831f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428ee0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281ef
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281fb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428277,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42826f
  420f87:	sbb    edx,DWORD PTR ds:0x4283b7
  420f8d:	mov    DWORD PTR ds:0x42826f,edx
  420f93:	add    DWORD PTR ds:0x4281ab,ecx
  420f99:	sub    DWORD PTR ds:0x42839b,0x42830b
  420fa3:	cmp    DWORD PTR ds:0x428297,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42837b
  420fb0:	movzx  edx,BYTE PTR ds:0x428183
  420fb7:	mov    DWORD PTR ds:0x428307,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283b3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283b7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428297,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d84
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428317
  421000:	sbb    DWORD PTR ds:0x428293,edx
  421006:	movzx  edx,WORD PTR ds:0x42816b
  42100d:	or     edx,DWORD PTR ds:0x428393
  421013:	mov    DWORD PTR ds:0x42816b,edx
  421019:	dec    DWORD PTR ds:0x428383
  42101f:	sub    DWORD PTR ds:0x42828f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42817b,0x0
  421048:	mov    DWORD PTR ds:0x428387,0x62d9
  421052:	mov    DWORD PTR ds:0x428167,0x300d
  42105c:	mov    DWORD PTR ds:0x42816b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x42830f
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42837f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42817b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428da4
  4210a1:	sbb    ecx,DWORD PTR ds:0x428293
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282b7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428173
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422243
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x421386
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x28bc:0x65828d2a
  42115b:	fadd   DWORD PTR [eax]
  42115d:	mov    esi,0x18160fc1
  421162:	loope  0x421178
  421164:	sbb    BYTE PTR [eax],bl
  421166:	sbb    edi,0xa139f8b1
  42116c:	and    al,0x5b
  42116e:	mov    dh,0x7b
  421170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421171:	test   DWORD PTR [ebp+0x48d36e62],ecx
  421177:	xor    cl,BYTE PTR [esi]
  421179:	or     eax,0x1f8be7a0
  42117e:	imul   edx,DWORD PTR [ebx+edi*2],0x879ed082
  421185:	add    eax,0xb214ec3a
  42118a:	xor    BYTE PTR [eax],bh
  42118c:	inc    ecx
  42118d:	lds    esp,FWORD PTR [esi]
  42118f:	dec    esp
  421190:	jle    0x42112b
  421192:	mov    esi,DWORD PTR ds:0x71268273
  421198:	loopne 0x4211d0
  42119a:	and    edi,0x4a
  42119d:	pop    edi
  42119e:	push   ebp
  42119f:	mov    BYTE PTR [ebx-0x6e6aa2cf],ch
  4211a5:	test   DWORD PTR [ebp-0x38],edx
  4211a8:	mul    DWORD PTR [ebx+0x40]
  4211ab:	les    eax,FWORD PTR [edi]
  4211ad:	mov    DWORD PTR [edi-0x2fb326a1],edx
  4211b3:	dec    esp
  4211b4:	xor    dh,BYTE PTR [ebp+0x5add90ae]
  4211ba:	jae    0x421188
  4211bc:	cli    
  4211bd:	xor    ecx,DWORD PTR [edi-0x65]
  4211c0:	adc    eax,0x41568d76
  4211c5:	dec    ecx
  4211c6:	mov    esi,0x948f1384
  4211cb:	pop    ds
  4211cc:	repnz xchg edx,eax
  4211ce:	adc    dh,BYTE PTR [esi]
  4211d0:	xchg   ebx,eax
  4211d1:	out    dx,al
  4211d2:	jno    0x4211bc
  4211d4:	jmp    0xdb39:0xa674de37
  4211db:	dec    edi
  4211dc:	inc    edx
  4211dd:	retf   
  4211de:	push   esp
  4211df:	sbb    DWORD PTR [edi+0x2a],ecx
  4211e2:	(bad)  
  4211e3:	push   ds
  4211e4:	test   dh,ah
  4211e6:	dec    edx
  4211e7:	xchg   esp,eax
  4211e8:	pop    ss
  4211e9:	mov    edx,0xc94d288
  4211ee:	cwde   
  4211ef:	cmp    edi,DWORD PTR [ebp+0x16]
  4211f2:	arpl   WORD PTR [edi],di
  4211f4:	push   0xcf542d53
  4211f9:	(bad)  
  4211fa:	int3   
  4211fb:	pop    ss
  4211fc:	dec    esi
  4211fd:	ror    DWORD PTR [eax-0x514241a1],1
  421203:	out    0x23,al
  421205:	xlat   BYTE PTR ds:[ebx]
  421206:	sar    BYTE PTR [edi+0x34],0x3a
  42120a:	in     eax,dx
  42120b:	xchg   edi,eax
  42120c:	retf   0xe045
  42120f:	test   DWORD PTR [esi+ecx*4+0xcf2f952],ebx
  421216:	mov    edx,0x202271ad
  42121b:	sahf   
  42121c:	jmp    0xf25d:0xb06d2942
  421223:	xchg   ecx,eax
  421224:	nop
  421225:	out    0xa2,al
  421227:	adc    eax,DWORD PTR [eax]
  421229:	xor    cl,0x49
  42122c:	test   DWORD PTR [eax],esp
  42122e:	enter  0xa51c,0x43
  421232:	pop    edx
  421233:	mov    DWORD PTR [esi+0x9c615dd],ebx
  421239:	cmp    al,0xd9
  42123b:	pop    esi
  42123c:	fbld   TBYTE PTR [esi+0x54]
  42123f:	adc    al,0xb5
  421241:	in     al,dx
  421242:	mov    dh,0x51
  421244:	data16 (bad) 
  421247:	lods   al,BYTE PTR ds:[esi]
  421248:	or     BYTE PTR [edi-0x46],cl
  42124b:	add    esp,DWORD PTR [ecx-0x4ba84848]
  421251:	adc    BYTE PTR [edx-0x7b],0x94
  421255:	sar    BYTE PTR [edx],0x2b
  421258:	or     BYTE PTR [ecx-0x265aa572],dl
  42125e:	outs   dx,DWORD PTR ds:[esi]
  42125f:	mov    ah,0xf4
  421261:	mov    cl,0x3d
  421263:	dec    esp
  421264:	int    0xf5
  421266:	loopne 0x421240
  421268:	lock int 0x7b
  42126b:	sbb    al,0x73
  42126d:	add    BYTE PTR [edi+0x3c26003a],ch
  421273:	je     0x421280
  421275:	xor    eax,0x392247c3
  42127a:	jl     0x42128d
  42127c:	das    
  42127d:	(bad)  
  42127e:	adc    DWORD PTR [edi-0x7b98c1aa],esi
  421284:	pop    ebx
  421285:	mov    edi,0x15ebccf4
  42128a:	imul   bh
  42128c:	sub    ebx,DWORD PTR [ebx-0x1a8114df]
  421292:	fwait
  421293:	test   edi,ebp
  421295:	mov    esi,0x742285dd
  42129a:	lock lea edx,[ebx]
  42129d:	dec    edx
  42129e:	js     0x4212a4
  4212a0:	cmp    eax,0x32bdacc4
  4212a5:	jne    0x42123b
  4212a7:	imul   ebp,DWORD PTR [eax],0xffffffa3
  4212aa:	push   cs
  4212ab:	mov    esi,0x2fcce686
  4212b0:	(bad)  
  4212b2:	add    DWORD PTR [esi-0x23],edi
  4212b5:	cmp    esi,ebx
  4212b7:	in     al,0x2d
  4212b9:	push   ss
  4212ba:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4212bc:	or     eax,0x907d62d7
  4212c1:	mov    bh,0x99
  4212c3:	fld    QWORD PTR [edi-0x7b1fd4c5]
  4212c9:	sub    bh,BYTE PTR [edx-0x65]
  4212cc:	dec    ebp
  4212cd:	addr16 cmp ebp,esi
  4212d0:	cdq    
  4212d1:	or     al,0xa
  4212d3:	or     dl,ah
  4212d5:	sbb    BYTE PTR [ebx-0x49fe459d],dh
  4212db:	outs   dx,BYTE PTR ds:[esi]
  4212dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212dd:	push   edi
  4212de:	ror    DWORD PTR [edi],1
  4212e0:	mov    ebp,0xbbc3d4b2
  4212e5:	jmp    0x421319
  4212e7:	dec    edx
  4212e8:	inc    esi
  4212e9:	and    al,0x74
  4212eb:	mov    dh,0xea
  4212ed:	fisttp QWORD PTR [edx+0x60]
  4212f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212f1:	mov    ?,WORD PTR [edi-0x8b04c80]
  4212f7:	jmp    0xe6212d84
  4212fc:	int    0x41
  4212fe:	xor    bl,BYTE PTR [ecx]
  421300:	pop    ss
  421301:	or     DWORD PTR [ebx-0x18c2c5c2],ebp
  421307:	scas   al,BYTE PTR es:[edi]
  421308:	nop
  421309:	adc    eax,eax
  42130b:	not    dl
  42130d:	jp     0x4212b4
  42130f:	hlt    
  421310:	retf   0x125f
  421313:	in     al,dx
  421314:	mov    edx,eax
  421316:	or     BYTE PTR [esi+0x6b],cl
  421319:	mov    esi,0x94e59e5e
  42131e:	enter  0xd1e7,0xec
  421322:	inc    edx
  421323:	mov    eax,0xad5cec07
  421328:	imul   DWORD PTR [esi-0x13a49cdc]
  42132e:	sbb    eax,0x2e0a1fb3
  421333:	mov    DWORD PTR [esi+ebp*4],ebp
  421336:	retf   
  421337:	mov    WORD PTR [ecx-0xf093f8],?
  42133d:	xchg   edi,eax
  42133e:	jno    0x421371
  421340:	adc    bh,ah
  421342:	in     eax,0x78
  421344:	mov    ebx,DWORD PTR [edx+0x55]
  421347:	shr    DWORD PTR [ecx+0x2c],cl
  42134a:	ds inc edx
  42134c:	stc    
  42134d:	and    DWORD PTR [edx+edx*2],ebp
  421350:	inc    edx
  421351:	mov    bh,0x29
  421353:	adc    edi,DWORD PTR [edi]
  421355:	xchg   ebp,eax
  421356:	scas   eax,DWORD PTR es:[edi]
  421357:	mov    ecx,0xcd3bdd76
  42135c:	stc    
  42135d:	out    dx,al
  42135e:	neg    edx
  421360:	xchg   BYTE PTR [ebp-0x559111c5],bl
  421366:	out    0x90,eax
  421368:	je     0x4213c2
  42136a:	imul   ecx,DWORD PTR [edx+ecx*8-0xe],0xffffff99
  42136f:	lock fbld TBYTE PTR [esi-0x7b]
  421373:	sbb    al,0xc0
  421375:	popf   
  421376:	push   0x4e
  421378:	out    0x87,al
  42137a:	mov    bl,0xe
  42137c:	cmp    eax,0xf669b346
  421381:	lock or DWORD PTR [esi-0x7a74a368],eax
  421388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421389:	(bad)  
  42138a:	(bad)  
  42138b:	dec    DWORD PTR [ebx-0x1576b]
  421391:	push   DWORD PTR ds:0xca79a575
  421397:	xor    edx,0x9c1b89e8
  42139d:	mov    cl,0x2
  42139f:	call   0x40a9b5
  4213a4:	mov    ecx,edx
  4213a6:	mov    edx,DWORD PTR [ebp-0x15c]
  4213ac:	mov    DWORD PTR [ebp-0x218],esi
  4213b2:	mov    esi,DWORD PTR [ebp-0x158]
  4213b8:	xor    edx,0xca79a575
  4213be:	xor    esi,0x9c1b89e8
  4213c4:	mov    DWORD PTR [ebp-0x21c],eax
  4213ca:	mov    eax,edx
  4213cc:	mov    edx,esi
  4213ce:	mov    DWORD PTR [ebp-0x220],ecx
  4213d4:	mov    cl,0x3e
  4213d6:	call   0x422243
  4213db:	mov    esi,DWORD PTR [ebp-0x21c]
  4213e1:	or     esi,eax
  4213e3:	mov    eax,DWORD PTR [ebp-0x220]
  4213e9:	or     eax,edx
  4213eb:	push   eax
  4213ec:	push   esi
  4213ed:	push   ebx
  4213ee:	push   edi
  4213ef:	call   0x416c20
  4213f4:	mov    esi,DWORD PTR [ebp-0x218]
  4213fa:	cmp    esi,eax
  4213fc:	jne    0x4214b2
  421402:	mov    eax,DWORD PTR [ebp-0x154]
  421408:	mov    edx,DWORD PTR [ebp-0x150]
  42140e:	xor    eax,0xca79a575
  421413:	xor    edx,0x9c1b89e8
  421419:	mov    cl,0x2
  42141b:	call   0x40a9b5
  421420:	mov    esi,eax
  421422:	mov    edi,edx
  421424:	mov    eax,DWORD PTR [ebp-0x154]
  42142a:	mov    edx,DWORD PTR [ebp-0x150]
  421430:	xor    eax,0xca79a575
  421435:	xor    edx,0x9c1b89e8
  42143b:	mov    cl,0x3e
  42143d:	call   0x422243
  421442:	or     esi,eax
  421444:	or     edi,edx
  421446:	mov    eax,DWORD PTR [ebp-0x15c]
  42144c:	mov    edx,DWORD PTR [ebp-0x158]
  421452:	xor    eax,0xca79a575
  421457:	xor    edx,0x9c1b89e8
  42145d:	mov    cl,0x2
  42145f:	call   0x40a9b5
  421464:	mov    ebx,eax
  421466:	mov    eax,edx
  421468:	mov    ecx,DWORD PTR [ebp-0x15c]
  42146e:	mov    edx,DWORD PTR [ebp-0x158]
  421474:	xor    ecx,0xca79a575
  42147a:	xor    edx,0x9c1b89e8
  421480:	mov    DWORD PTR [ebp-0x224],eax
  421486:	mov    eax,ecx
  421488:	mov    cl,0x3e
  42148a:	call   0x422243
  42148f:	or     ebx,eax
  421491:	mov    eax,DWORD PTR [ebp-0x224]
  421497:	or     eax,edx
  421499:	push   eax
  42149a:	push   ebx
  42149b:	push   edi
  42149c:	push   esi
  42149d:	call   0x416c20
  4214a2:	mov    DWORD PTR [ebp-0x178],eax
  4214a8:	jmp    0x421772
  4214ad:	jmp    0x421728
  4214b2:	lea    eax,[ebp-0x168]
  4214b8:	mov    DWORD PTR [ebp-0x164],eax
  4214be:	mov    eax,DWORD PTR [ebp-0x164]
  4214c4:	mov    DWORD PTR [eax],0xa4069aae
  4214ca:	mov    eax,DWORD PTR [ebp-0x168]
  4214d0:	xor    eax,0xa4069aae
  4214d5:	shr    eax,0x2
  4214d8:	mov    ecx,DWORD PTR [ebp-0x168]
  4214de:	xor    ecx,0xa4069aae
  4214e4:	shl    ecx,0x1e
  4214e7:	or     eax,ecx
  4214e9:	mov    ecx,DWORD PTR [ebp-0x174]
  4214ef:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214f3:	mov    DWORD PTR [ebp-0x160],eax
  4214f9:	mov    esi,DWORD PTR [ebp-0x160]
  4214ff:	mov    eax,DWORD PTR [ebp-0x154]
  421505:	mov    edx,DWORD PTR [ebp-0x150]
  42150b:	xor    eax,0xca79a575
  421510:	xor    edx,0x9c1b89e8
  421516:	mov    cl,0x2
  421518:	call   0x40a9b5
  42151d:	mov    edi,eax
  42151f:	mov    ebx,edx
  421521:	mov    eax,DWORD PTR [ebp-0x154]
  421527:	mov    edx,DWORD PTR [ebp-0x150]
  42152d:	xor    eax,0xca79a575
  421532:	xor    edx,0x9c1b89e8
  421538:	mov    cl,0x3e
  42153a:	call   0x422243
  42153f:	or     edi,eax
  421541:	or     ebx,edx
  421543:	mov    eax,DWORD PTR [ebp-0x15c]
  421549:	mov    edx,DWORD PTR [ebp-0x158]
  42154f:	xor    eax,0xca79a575
  421554:	xor    edx,0x9c1b89e8
  42155a:	mov    cl,0x2
  42155c:	call   0x40a9b5
  421561:	mov    ecx,edx
  421563:	mov    edx,DWORD PTR [ebp-0x15c]
  421569:	mov    DWORD PTR [ebp-0x228],esi
  42156f:	mov    esi,DWORD PTR [ebp-0x158]
  421575:	xor    edx,0xca79a575
  42157b:	xor    esi,0x9c1b89e8
  421581:	mov    DWORD PTR [ebp-0x22c],eax
  421587:	mov    eax,edx
  421589:	mov    edx,esi
  42158b:	mov    DWORD PTR [ebp-0x230],ecx
  421591:	mov    cl,0x3e
  421593:	call   0x422243
  421598:	mov    esi,DWORD PTR [ebp-0x22c]
  42159e:	or     esi,eax
  4215a0:	mov    eax,DWORD PTR [ebp-0x230]
  4215a6:	or     eax,edx
  4215a8:	push   eax
  4215a9:	push   esi
  4215aa:	push   ebx
  4215ab:	push   edi
  4215ac:	call   0x416c20
  4215b1:	mov    esi,DWORD PTR [ebp-0x228]
  4215b7:	cmp    esi,eax
  4215b9:	je     0x42162e
  4215bf:	mov    eax,DWORD PTR [ebp-0x154]
  4215c5:	mov    edx,DWORD PTR [ebp-0x150]
  4215cb:	xor    eax,0xca79a575
  4215d0:	xor    edx,0x9c1b89e8
  4215d6:	mov    cl,0x2
  4215d8:	call   0x40a9b5
  4215dd:	mov    esi,eax
  4215df:	mov    edi,edx
  4215e1:	mov    eax,DWORD PTR [ebp-0x154]
  4215e7:	mov    edx,DWORD PTR [ebp-0x150]
  4215ed:	xor    eax,0xca79a575
  4215f2:	xor    edx,0x9c1b89e8
  4215f8:	mov    cl,0x3e
  4215fa:	call   0x422243
  4215ff:	or     esi,eax
  421601:	or     edi,edx
  421603:	mov    eax,DWORD PTR [ebp-0x160]
  421609:	imul   esi,eax
  42160c:	add    esi,DWORD PTR [ebp-0x170]
  421612:	mov    DWORD PTR [ebp-0x16c],esi
  421618:	mov    eax,DWORD PTR [ebp-0x16c]
  42161e:	mov    DWORD PTR [ebp-0x178],eax
  421624:	jmp    0x421772
  421629:	jmp    0x4216d9
  42162e:	mov    eax,DWORD PTR [ebp-0x154]
  421634:	mov    edx,DWORD PTR [ebp-0x150]
  42163a:	xor    eax,0xca79a575
  42163f:	xor    edx,0x9c1b89e8
  421645:	mov    cl,0x2
  421647:	call   0x40a9b5
  42164c:	mov    esi,eax
  42164e:	mov    edi,edx
  421650:	mov    eax,DWORD PTR [ebp-0x154]
  421656:	mov    edx,DWORD PTR [ebp-0x150]
  42165c:	xor    eax,0xca79a575
  421661:	xor    edx,0x9c1b89e8
  421667:	mov    cl,0x3e
  421669:	call   0x422243
  42166e:	or     esi,eax
  421670:	or     edi,edx
  421672:	mov    eax,DWORD PTR [ebp-0x15c]
  421678:	mov    edx,DWORD PTR [ebp-0x158]
  42167e:	xor    eax,0xca79a575
  421683:	xor    edx,0x9c1b89e8
  421689:	mov    cl,0x2
  42168b:	call   0x40a9b5
  421690:	mov    ebx,eax
  421692:	mov    eax,edx
  421694:	mov    ecx,DWORD PTR [ebp-0x15c]
  42169a:	mov    edx,DWORD PTR [ebp-0x158]
  4216a0:	xor    ecx,0xca79a575
  4216a6:	xor    edx,0x9c1b89e8
  4216ac:	mov    DWORD PTR [ebp-0x234],eax
  4216b2:	mov    eax,ecx
  4216b4:	mov    cl,0x3e
  4216b6:	call   0x422243
  4216bb:	or     ebx,eax
  4216bd:	mov    eax,DWORD PTR [ebp-0x234]
  4216c3:	or     eax,edx
  4216c5:	push   eax
  4216c6:	push   ebx
  4216c7:	push   edi
  4216c8:	push   esi
  4216c9:	call   0x416c20
  4216ce:	mov    DWORD PTR [ebp-0x178],eax
  4216d4:	jmp    0x421772
  4216d9:	mov    eax,DWORD PTR [ebp-0x15c]
  4216df:	mov    edx,DWORD PTR [ebp-0x158]
  4216e5:	xor    eax,0xca79a575
  4216ea:	xor    edx,0x9c1b89e8
  4216f0:	mov    cl,0x2
  4216f2:	call   0x40a9b5
  4216f7:	mov    esi,eax
  4216f9:	mov    edi,edx
  4216fb:	mov    eax,DWORD PTR [ebp-0x15c]
  421701:	mov    edx,DWORD PTR [ebp-0x158]
  421707:	xor    eax,0xca79a575
  42170c:	xor    edx,0x9c1b89e8
  421712:	mov    cl,0x3e
  421714:	call   0x422243
  421719:	or     esi,eax
  42171b:	or     edi,edx
  42171d:	mov    DWORD PTR [ebp-0x178],esi
  421723:	jmp    0x421772
  421728:	mov    eax,DWORD PTR [ebp-0x15c]
  42172e:	mov    edx,DWORD PTR [ebp-0x158]
  421734:	xor    eax,0xca79a575
  421739:	xor    edx,0x9c1b89e8
  42173f:	mov    cl,0x2
  421741:	call   0x40a9b5
  421746:	mov    esi,eax
  421748:	mov    edi,edx
  42174a:	mov    eax,DWORD PTR [ebp-0x15c]
  421750:	mov    edx,DWORD PTR [ebp-0x158]
  421756:	xor    eax,0xca79a575
  42175b:	xor    edx,0x9c1b89e8
  421761:	mov    cl,0x3e
  421763:	call   0x422243
  421768:	or     esi,eax
  42176a:	or     edi,edx
  42176c:	mov    DWORD PTR [ebp-0x178],esi
  421772:	mov    ecx,DWORD PTR [ebp-0xd8]
  421778:	mov    eax,0x459a
  42177d:	xor    edx,edx
  42177f:	div    ecx
  421781:	mov    ecx,DWORD PTR [ebp-0xdc]
  421787:	and    eax,ecx
  421789:	add    eax,DWORD PTR [ebp-0x44]
  42178c:	mov    ecx,DWORD PTR [ebp-0xe0]
  421792:	lea    eax,[eax+ecx*1+0x272f]
  421799:	xor    eax,0x1080c
  42179e:	add    eax,DWORD PTR [ebp-0x178]
  4217a4:	mov    DWORD PTR [ebp-0xe8],eax
  4217aa:	mov    DWORD PTR [ebp-0xc],0x5950
  4217b1:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217bb:	mov    DWORD PTR [ebp-0x130],0x3
  4217c5:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217cc:	mov    DWORD PTR [ebp-0x8],0x4524
  4217d3:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217dd:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217e7:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217f1:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217fb:	mov    DWORD PTR [ebp-0x10c],0x3315
  421805:	mov    eax,DWORD PTR [ebp-0xf8]
  42180b:	mov    ecx,DWORD PTR [ebp-0x130]
  421811:	xor    edx,edx
  421813:	div    ecx
  421815:	add    eax,0x454e
  42181a:	mov    ecx,DWORD PTR [ebp-0xc]
  42181d:	and    eax,ecx
  42181f:	xor    eax,0x5940
  421824:	add    eax,DWORD PTR [ebp+0x8]
  421827:	mov    ecx,DWORD PTR [ebp-0x110]
  42182d:	mov    edx,DWORD PTR [ebp-0xa4]
  421833:	sub    ecx,edx
  421835:	mov    edx,DWORD PTR [ebp-0xd4]
  42183b:	or     ecx,edx
  42183d:	mov    edx,DWORD PTR [ebp-0x8]
  421840:	and    ecx,edx
  421842:	mov    edx,DWORD PTR [ebp-0x20]
  421845:	xor    ecx,edx
  421847:	mov    edx,DWORD PTR [ebp-0x10c]
  42184d:	mov    esi,0x180f
  421852:	sub    esi,edx
  421854:	mov    edx,DWORD PTR [ebp-0xa0]
  42185a:	imul   esi,edx
  42185d:	xor    esi,0x402b
  421863:	xor    esi,0xfed78c17
  421869:	mov    edx,DWORD PTR [ebp-0xe8]
  42186f:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  421876:	add    ecx,eax
  421878:	add    esi,ecx
  42187a:	mov    DWORD PTR [ebp-0x38],esi
  42187d:	mov    DWORD PTR [ebp-0x4],0x59a8
  421884:	mov    DWORD PTR [ebp-0x30],0x7021
  42188b:	mov    DWORD PTR [ebp-0xf4],0x6210
  421895:	mov    DWORD PTR [ebp-0x58],0x73d5
  42189c:	mov    DWORD PTR [ebp-0x124],0x1e7d
  4218a6:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218ad:	mov    eax,DWORD PTR [ebp-0x30]
  4218b0:	xor    eax,0x75cb
  4218b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4218b8:	imul   eax,ecx
  4218bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4218be:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218c5:	mov    eax,DWORD PTR [ebp-0xf4]
  4218cb:	and    eax,0x6b34
  4218d0:	and    eax,0x658d
  4218d5:	xor    edx,edx
  4218d7:	push   0x6
  4218d9:	pop    esi
  4218da:	div    esi
  4218dc:	imul   eax,eax,0x3fb9
  4218e2:	mov    edx,DWORD PTR [ebp-0x3c]
  4218e5:	and    edx,0x58c7
  4218eb:	mov    esi,DWORD PTR [ebp-0x124]
  4218f1:	or     edx,esi
  4218f3:	add    edx,0x7a25
  4218f9:	imul   edx,edx,0x28d2
  4218ff:	mov    esi,DWORD PTR [ebp-0x58]
  421902:	xor    edx,esi
  421904:	xor    edx,0x1856f731
  42190a:	mov    esi,DWORD PTR [ebp-0xe8]
  421910:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421917:	add    eax,ecx
  421919:	add    edx,eax
  42191b:	mov    DWORD PTR [ebp-0xac],edx
  421921:	mov    DWORD PTR [ebp-0x54],0x1
  421928:	mov    DWORD PTR [ebp-0x40],0x1ee8
  42192f:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421936:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421940:	mov    DWORD PTR [ebp-0x108],0x2eeb
  42194a:	mov    DWORD PTR [ebp-0x104],0x2108
  421954:	mov    eax,DWORD PTR [ebp-0x1c]
  421957:	xor    edx,edx
  421959:	push   0x3
  42195b:	pop    ecx
  42195c:	div    ecx
  42195e:	mov    ecx,DWORD PTR [ebp-0x40]
  421961:	or     eax,ecx
  421963:	mov    ecx,DWORD PTR [ebp-0x54]
  421966:	xor    edx,edx
  421968:	div    ecx
  42196a:	imul   eax,eax,0x7d53
  421970:	mov    ecx,DWORD PTR [ebp+0x8]
  421973:	lea    eax,[ecx+eax*1-0x1f534807]
  42197a:	mov    ecx,DWORD PTR [ebp-0xf0]
  421980:	and    ecx,0x4108
  421986:	and    ecx,0x40e7
  42198c:	sub    ecx,0x1a54
  421992:	xor    ecx,0x25ac
  421998:	mov    edx,DWORD PTR [ebp-0x104]
  42199e:	xor    edx,0x6dda
  4219a4:	mov    esi,DWORD PTR [ebp-0x108]
  4219aa:	and    edx,esi
  4219ac:	and    edx,0xe0c
  4219b2:	or     edx,0x5b
  4219b5:	mov    esi,DWORD PTR [ebp-0xe8]
  4219bb:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219bf:	add    ecx,eax
  4219c1:	lea    eax,[edx+ecx*1-0xc5b]
  4219c8:	mov    DWORD PTR [ebp-0xa8],eax
  4219ce:	and    DWORD PTR [ebp-0x144],0x0
  4219d5:	jmp    0x4219e7
  4219da:	mov    eax,DWORD PTR [ebp-0x144]
  4219e0:	inc    eax
  4219e1:	mov    DWORD PTR [ebp-0x144],eax
  4219e7:	mov    eax,DWORD PTR [ebp-0xe8]
  4219ed:	mov    ecx,DWORD PTR [ebp-0x144]
  4219f3:	cmp    ecx,DWORD PTR [eax+0x18]
  4219f6:	je     0x421faf
  4219fc:	mov    eax,DWORD PTR [ebp-0x144]
  421a02:	mov    ecx,DWORD PTR [ebp-0x38]
  421a05:	mov    edx,DWORD PTR [ebp+0x8]
  421a08:	add    edx,DWORD PTR [ecx+eax*4]
  421a0b:	mov    DWORD PTR [ebp-0x48],edx
  421a0e:	mov    eax,DWORD PTR [ebp-0x48]
  421a11:	mov    DWORD PTR [ebp-0x210],eax
  421a17:	mov    eax,DWORD PTR [ebp+0xc]
  421a1a:	mov    DWORD PTR [ebp-0x20c],eax
  421a20:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a2a:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a34:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a3e:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a48:	lea    eax,[ebp-0x1e8]
  421a4e:	mov    DWORD PTR [ebp-0x1f4],eax
  421a54:	mov    eax,DWORD PTR [ebp-0x20c]
  421a5a:	movzx  eax,WORD PTR [eax+0x20]
  421a5e:	xor    eax,0xa49b
  421a63:	movzx  eax,ax
  421a66:	sar    eax,1
  421a68:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a6e:	movzx  ecx,WORD PTR [ecx+0x20]
  421a72:	xor    ecx,0xa49b
  421a78:	movzx  ecx,cx
  421a7b:	shl    ecx,0xf
  421a7e:	or     eax,ecx
  421a80:	movzx  eax,ax
  421a83:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a89:	mov    DWORD PTR [ecx],eax
  421a8b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a91:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a97:	xor    eax,0xca79a575
  421a9c:	xor    edx,0x9c1b89e8
  421aa2:	mov    cl,0x2
  421aa4:	call   0x40a9b5
  421aa9:	mov    ebx,eax
  421aab:	mov    esi,edx
  421aad:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ab3:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ab9:	xor    eax,0xca79a575
  421abe:	xor    edx,0x9c1b89e8
  421ac4:	mov    cl,0x3e
  421ac6:	call   0x422243
  421acb:	or     ebx,eax
  421acd:	or     esi,edx
  421acf:	movzx  eax,bl
  421ad2:	push   eax
  421ad3:	lea    eax,[ebp-0x198]
  421ad9:	push   eax
  421ada:	call   0x416c9e
  421adf:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ae5:	mov    edx,DWORD PTR [ebp-0x1ec]
  421aeb:	xor    eax,0xca79a575
  421af0:	xor    edx,0x9c1b89e8
  421af6:	mov    cl,0x2
  421af8:	call   0x40a9b5
  421afd:	mov    esi,eax
  421aff:	mov    edi,edx
  421b01:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b07:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b0d:	xor    eax,0xca79a575
  421b12:	xor    edx,0x9c1b89e8
  421b18:	mov    cl,0x3e
  421b1a:	call   0x422243
  421b1f:	or     esi,eax
  421b21:	or     edi,edx
  421b23:	mov    DWORD PTR [ebp-0x1f8],esi
  421b29:	jmp    0x421b7e
  421b2e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b34:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b3a:	xor    eax,0xca79a575
  421b3f:	xor    edx,0x9c1b89e8
  421b45:	mov    cl,0x2
  421b47:	call   0x40a9b5
  421b4c:	mov    esi,eax
  421b4e:	mov    edi,edx
  421b50:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b56:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b5c:	xor    eax,0xca79a575
  421b61:	xor    edx,0x9c1b89e8
  421b67:	mov    cl,0x3e
  421b69:	call   0x422243
  421b6e:	or     esi,eax
  421b70:	or     edi,edx
  421b72:	add    esi,DWORD PTR [ebp-0x1f8]
  421b78:	mov    DWORD PTR [ebp-0x1f8],esi
  421b7e:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b84:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b8a:	je     0x421c1d
  421b90:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b96:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b9c:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421ba1:	xor    eax,0xa49b
  421ba6:	movzx  eax,ax
  421ba9:	sar    eax,1
  421bab:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bb1:	mov    edx,DWORD PTR [ebp-0x20c]
  421bb7:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bbc:	xor    ecx,0xa49b
  421bc2:	movzx  ecx,cx
  421bc5:	shl    ecx,0xf
  421bc8:	or     eax,ecx
  421bca:	movzx  eax,ax
  421bcd:	mov    DWORD PTR [ebp-0x1fc],eax
  421bd3:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bd9:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bdf:	movzx  eax,WORD PTR [ecx+eax*4]
  421be3:	xor    eax,0xa49b
  421be8:	movzx  eax,ax
  421beb:	sar    eax,1
  421bed:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bf3:	mov    edx,DWORD PTR [ebp-0x20c]
  421bf9:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bfd:	xor    ecx,0xa49b
  421c03:	movzx  ecx,cx
  421c06:	shl    ecx,0xf
  421c09:	or     eax,ecx
  421c0b:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c11:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c18:	jmp    0x421b2e
  421c1d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c23:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c29:	xor    eax,0xca79a575
  421c2e:	xor    edx,0x9c1b89e8
  421c34:	mov    cl,0x2
  421c36:	call   0x40a9b5
  421c3b:	mov    esi,eax
  421c3d:	mov    edi,edx
  421c3f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c45:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c4b:	xor    eax,0xca79a575
  421c50:	xor    edx,0x9c1b89e8
  421c56:	mov    cl,0x3e
  421c58:	call   0x422243
  421c5d:	or     esi,eax
  421c5f:	or     edi,edx
  421c61:	mov    DWORD PTR [ebp-0x1e4],esi
  421c67:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c6d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c73:	xor    eax,0xca79a575
  421c78:	xor    edx,0x9c1b89e8
  421c7e:	mov    cl,0x2
  421c80:	call   0x40a9b5
  421c85:	mov    esi,eax
  421c87:	mov    edi,edx
  421c89:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c8f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c95:	xor    eax,0xca79a575
  421c9a:	xor    edx,0x9c1b89e8
  421ca0:	mov    cl,0x3e
  421ca2:	call   0x422243
  421ca7:	or     esi,eax
  421ca9:	or     edi,edx
  421cab:	mov    DWORD PTR [ebp-0x23c],esi
  421cb1:	mov    DWORD PTR [ebp-0x238],edi
  421cb7:	mov    eax,DWORD PTR [ebp-0x23c]
  421cbd:	or     eax,DWORD PTR [ebp-0x238]
  421cc3:	je     0x421f23
  421cc9:	lea    eax,[ebp-0x204]
  421ccf:	mov    DWORD PTR [ebp-0x208],eax
  421cd5:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cdb:	xor    edx,edx
  421cdd:	mov    cl,0x2
  421cdf:	call   0x422243
  421ce4:	mov    esi,eax
  421ce6:	mov    edi,edx
  421ce8:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cee:	xor    edx,edx
  421cf0:	mov    cl,0x3e
  421cf2:	call   0x40a9b5
  421cf7:	or     esi,eax
  421cf9:	or     edi,edx
  421cfb:	xor    esi,0xca79a575
  421d01:	xor    edi,0x9c1b89e8
  421d07:	mov    eax,DWORD PTR [ebp-0x208]
  421d0d:	mov    DWORD PTR [eax],esi
  421d0f:	mov    DWORD PTR [eax+0x4],edi
  421d12:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d18:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d20:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d26:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d2c:	xor    eax,0xca79a575
  421d31:	xor    edx,0x9c1b89e8
  421d37:	mov    cl,0x2
  421d39:	call   0x40a9b5
  421d3e:	mov    ebx,eax
  421d40:	mov    edi,edx
  421d42:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d48:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d4e:	xor    eax,0xca79a575
  421d53:	xor    edx,0x9c1b89e8
  421d59:	mov    cl,0x3e
  421d5b:	call   0x422243
  421d60:	or     ebx,eax
  421d62:	or     edi,edx
  421d64:	movsx  eax,bl
  421d67:	cmp    esi,eax
  421d69:	je     0x421ec9
  421d6f:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d75:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d7d:	mov    eax,DWORD PTR [ebp-0x204]
  421d83:	mov    edx,DWORD PTR [ebp-0x200]
  421d89:	xor    eax,0xca79a575
  421d8e:	xor    edx,0x9c1b89e8
  421d94:	mov    cl,0x2
  421d96:	call   0x40a9b5
  421d9b:	mov    edi,eax
  421d9d:	mov    ebx,edx
  421d9f:	mov    eax,DWORD PTR [ebp-0x204]
  421da5:	mov    edx,DWORD PTR [ebp-0x200]
  421dab:	xor    eax,0xca79a575
  421db0:	xor    edx,0x9c1b89e8
  421db6:	mov    cl,0x3e
  421db8:	call   0x422243
  421dbd:	or     edi,eax
  421dbf:	or     ebx,edx
  421dc1:	mov    eax,DWORD PTR [ebp-0x210]
  421dc7:	movsx  eax,BYTE PTR [eax+edi*1]
  421dcb:	cmp    esi,eax
  421dcd:	je     0x421ddd
  421dd3:	jmp    0x421f23
  421dd8:	jmp    0x421ec9
  421ddd:	mov    eax,DWORD PTR [ebp-0x204]
  421de3:	mov    edx,DWORD PTR [ebp-0x200]
  421de9:	xor    eax,0xca79a575
  421dee:	xor    edx,0x9c1b89e8
  421df4:	mov    cl,0x2
  421df6:	call   0x40a9b5
  421dfb:	mov    esi,eax
  421dfd:	mov    edi,edx
  421dff:	mov    eax,DWORD PTR [ebp-0x204]
  421e05:	mov    edx,DWORD PTR [ebp-0x200]
  421e0b:	xor    eax,0xca79a575
  421e10:	xor    edx,0x9c1b89e8
  421e16:	mov    cl,0x3e
  421e18:	call   0x422243
  421e1d:	or     esi,eax
  421e1f:	or     edi,edx
  421e21:	mov    eax,DWORD PTR [ebp-0x210]
  421e27:	movsx  esi,BYTE PTR [eax+esi*1]
  421e2b:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e31:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e37:	xor    eax,0xca79a575
  421e3c:	xor    edx,0x9c1b89e8
  421e42:	mov    cl,0x2
  421e44:	call   0x40a9b5
  421e49:	mov    ebx,eax
  421e4b:	mov    edi,edx
  421e4d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e53:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e59:	xor    eax,0xca79a575
  421e5e:	xor    edx,0x9c1b89e8
  421e64:	mov    cl,0x3e
  421e66:	call   0x422243
  421e6b:	or     ebx,eax
  421e6d:	or     edi,edx
  421e6f:	movsx  eax,bl
  421e72:	cmp    esi,eax
  421e74:	jne    0x421ec9
  421e7a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e80:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e86:	xor    eax,0xca79a575
  421e8b:	xor    edx,0x9c1b89e8
  421e91:	mov    cl,0x2
  421e93:	call   0x40a9b5
  421e98:	mov    esi,eax
  421e9a:	mov    edi,edx
  421e9c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ea2:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea8:	xor    eax,0xca79a575
  421ead:	xor    edx,0x9c1b89e8
  421eb3:	mov    cl,0x3e
  421eb5:	call   0x422243
  421eba:	or     esi,eax
  421ebc:	or     edi,edx
  421ebe:	mov    DWORD PTR [ebp-0x214],esi
  421ec4:	jmp    0x421f6d
  421ec9:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ecf:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ed5:	xor    eax,0xca79a575
  421eda:	xor    edx,0x9c1b89e8
  421ee0:	mov    cl,0x2
  421ee2:	call   0x40a9b5
  421ee7:	mov    esi,eax
  421ee9:	mov    edi,edx
  421eeb:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ef1:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ef7:	xor    eax,0xca79a575
  421efc:	xor    edx,0x9c1b89e8
  421f02:	mov    cl,0x3e
  421f04:	call   0x422243
  421f09:	or     esi,eax
  421f0b:	or     edi,edx
  421f0d:	add    esi,DWORD PTR [ebp-0x1e4]
  421f13:	mov    DWORD PTR [ebp-0x1e4],esi
  421f19:	jmp    0x421c67
  421f1e:	jmp    0x421c67
  421f23:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f29:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f2f:	xor    eax,0xca79a575
  421f34:	xor    edx,0x9c1b89e8
  421f3a:	mov    cl,0x2
  421f3c:	call   0x40a9b5
  421f41:	mov    esi,eax
  421f43:	mov    edi,edx
  421f45:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f4b:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f51:	xor    eax,0xca79a575
  421f56:	xor    edx,0x9c1b89e8
  421f5c:	mov    cl,0x3e
  421f5e:	call   0x422243
  421f63:	or     esi,eax
  421f65:	or     edi,edx
  421f67:	mov    DWORD PTR [ebp-0x214],esi
  421f6d:	mov    eax,DWORD PTR [ebp-0x214]
  421f73:	mov    DWORD PTR [ebp-0xc8],eax
  421f79:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f80:	je     0x421faa
  421f86:	mov    eax,DWORD PTR [ebp-0x144]
  421f8c:	mov    ecx,DWORD PTR [ebp-0xac]
  421f92:	movzx  eax,WORD PTR [ecx+eax*2]
  421f96:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f9c:	mov    eax,DWORD PTR [ecx+eax*4]
  421f9f:	mov    DWORD PTR [ebp-0xfc],eax
  421fa5:	jmp    0x421faf
  421faa:	jmp    0x4219da
  421faf:	cmp    DWORD PTR [ebp-0xfc],0x0
  421fb6:	jne    0x421fc3
  421fbc:	xor    eax,eax
  421fbe:	jmp    0x42223c
  421fc3:	mov    eax,DWORD PTR [ebp+0x8]
  421fc6:	add    eax,DWORD PTR [ebp-0xfc]
  421fcc:	mov    DWORD PTR [ebp-0xec],eax
  421fd2:	mov    DWORD PTR [ebp-0x74],0x0
  421fd9:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fe0:	je     0x42205c
  421fe6:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fed:	je     0x42205c
  421ff3:	mov    eax,DWORD PTR [ebp-0xb0]
  421ff9:	shl    eax,0x2
  421ffc:	mov    DWORD PTR [ebp-0x74],eax
  421fff:	mov    DWORD PTR [ebp-0x14c],0x0
  422009:	sub    esp,DWORD PTR [ebp-0x74]
  42200c:	mov    DWORD PTR [ebp-0x14c],esp
  422012:	mov    DWORD PTR [ebp-0x148],0x0
  42201c:	mov    eax,DWORD PTR [ebp-0x148]
  422022:	cmp    eax,DWORD PTR [ebp-0xb0]
  422028:	je     0x42205c
  42202e:	mov    eax,DWORD PTR [ebp-0x148]
  422034:	mov    ecx,DWORD PTR [ebp-0x14c]
  42203a:	mov    edx,DWORD PTR [ebp-0x148]
  422040:	mov    esi,DWORD PTR [ebp+0x14]
  422043:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422047:	mov    DWORD PTR [ecx+eax*4],edx
  42204a:	mov    eax,DWORD PTR [ebp-0x148]
  422050:	inc    eax
  422051:	mov    DWORD PTR [ebp-0x148],eax
  422057:	jmp    0x42201c
  42205c:	mov    DWORD PTR [ebp-0x9c],0x0
  422066:	push   0x4221f5
  42206b:	jmp    DWORD PTR [ebp-0xec]
  422071:	mov    eax,eax
  422073:	mov    ecx,esp
  422075:	ret    0xc
  422078:	cmp    DWORD PTR ds:0x42830f,0x0
  42207f:	mov    DWORD PTR ds:0x42830b,0x7476
  422089:	mov    DWORD PTR ds:0x428187,0x1cdc
  422093:	mov    DWORD PTR ds:0x42830b,0x65fa
  42209d:	mov    DWORD PTR ds:0x428177,0x5dca
  4220a7:	jmp    0x4220f1
  4220ac:	mov    eax,ds:0x428307
  4220b1:	cmp    DWORD PTR ds:0x42830f,0x0
  4220b8:	jbe    0x4220d9
  4220be:	push   0x24f1
  4220c3:	call   DWORD PTR ds:0x428d88
  4220c9:	inc    DWORD PTR ds:0x4283b3
  4220cf:	sub    DWORD PTR ds:0x428193,0x46d9
  4220d9:	inc    DWORD PTR ds:0x42830f
  4220df:	adc    DWORD PTR ds:0x42831b,ebx
  4220e5:	or     DWORD PTR ds:0x428243,0x4029
  4220ef:	not    eax
  4220f1:	push   ebx
  4220f2:	push   esi
  4220f3:	sbb    DWORD PTR ds:0x42839f,edx
  4220f9:	mov    eax,DWORD PTR [esp+0x18]
  4220fd:	or     eax,eax
  4220ff:	jne    0x42212f
  422105:	mov    ecx,DWORD PTR [esp+0x14]
  422109:	mov    eax,DWORD PTR [esp+0x10]
  42210d:	xor    edx,edx
  42210f:	div    ecx
  422111:	xor    DWORD PTR ds:0x42819f,0x45f1
  42211b:	mov    ebx,eax
  42211d:	mov    eax,DWORD PTR [esp+0xc]
  422121:	div    ecx
  422123:	mov    edx,0x36e3
  422128:	mov    edx,ebx
  42212a:	jmp    0x4221f0
  42212f:	mov    ecx,eax
  422131:	sbb    eax,0x67a9
  422136:	mov    ebx,DWORD PTR [esp+0x14]
  42213a:	cmp    DWORD PTR ds:0x428307,0x0
  422141:	mov    edx,DWORD PTR ds:0x4283b7
  422147:	mov    DWORD PTR ds:0x428337,0x4bc7
  422151:	mov    edx,DWORD PTR ds:0x42831f
  422157:	jmp    0x4221a1
  42215c:	mov    DWORD PTR ds:0x428267,0x15f
  422166:	mov    DWORD PTR ds:0x42829f,0x4dd1
  422170:	cmp    DWORD PTR ds:0x428307,0x0
  422177:	jle    0x422194
  42217d:	push   0x824e
  422182:	call   DWORD PTR ds:0x428d8c
  422188:	xor    DWORD PTR ds:0x42831f,0x6c44
  422192:	sub    edx,edx
  422194:	sbb    DWORD PTR ds:0x428267,0x445e
  42219e:	dec    edx
  42219f:	not    edx
  4221a1:	mov    edx,DWORD PTR [esp+0x10]
  4221a5:	mov    eax,DWORD PTR [esp+0xc]
  4221a9:	shr    ecx,1
  4221ab:	rcr    ebx,1
  4221ad:	shr    edx,1
  4221af:	rcr    eax,1
  4221b1:	or     ecx,ecx
  4221b3:	jne    0x4221a9
  4221b9:	div    ebx
  4221bb:	mov    esi,eax
  4221bd:	mul    DWORD PTR [esp+0x18]
  4221c1:	mov    ecx,eax
  4221c3:	mov    eax,DWORD PTR [esp+0x14]
  4221c7:	mul    esi
  4221c9:	add    edx,ecx
  4221cb:	jb     0x4221eb
  4221d1:	cmp    edx,DWORD PTR [esp+0x10]
  4221d5:	ja     0x4221eb
  4221db:	jb     0x4221ec
  4221e1:	cmp    eax,DWORD PTR [esp+0xc]
  4221e5:	jbe    0x4221ec
  4221eb:	dec    esi
  4221ec:	xor    edx,edx
  4221ee:	mov    eax,esi
  4221f0:	pop    esi
  4221f1:	pop    ebx
  4221f2:	ret    0x10
  4221f5:	or     DWORD PTR ds:0x428383,0x42838f
  4221ff:	sub    DWORD PTR [ebp+0x10],0x1
  422203:	mov    DWORD PTR ds:0x42818b,0x43bf
  42220d:	cmp    DWORD PTR [ebp+0x10],0x0
  422211:	mov    DWORD PTR ds:0x42837b,0x612a
  42221b:	je     0x42222a
  422221:	xor    DWORD PTR ds:0x428177,edx
  422227:	add    esp,DWORD PTR [ebp-0x74]
  42222a:	mov    DWORD PTR [ebp-0x9c],eax
  422230:	mov    DWORD PTR ds:0x42827f,ebx
  422236:	mov    eax,DWORD PTR [ebp-0x9c]
  42223c:	pop    edi
  42223d:	pop    esi
  42223e:	pop    ebx
  42223f:	leave  
  422240:	ret    0x10
  422243:	cmp    cl,0x40
  422246:	mov    DWORD PTR ds:0x428263,0x43a8
  422250:	jae    0x4222a2
  422256:	mov    DWORD PTR ds:0x428197,0x42f2
  422260:	cmp    cl,0x20
  422263:	mov    DWORD PTR ds:0x42817f,0x3d58
  42226d:	jae    0x42228d
  422273:	or     DWORD PTR ds:0x428173,0x5e1e
  42227d:	shld   edx,eax,cl
  422280:	mov    DWORD PTR ds:0x428297,0x1bd2
  42228a:	shl    eax,cl
  42228c:	ret    
  42228d:	inc    edx
  42228e:	mov    edx,eax
  422290:	sub    DWORD PTR ds:0x4283b3,0x42830b
  42229a:	xor    eax,eax
  42229c:	and    cl,0x1f
  42229f:	shl    edx,cl
  4222a1:	ret    
  4222a2:	xor    eax,eax
  4222a4:	xor    edx,edx
  4222a6:	ret    
	...
  4222af:	add    cl,ch
  4222b1:	cmp    ebp,DWORD PTR [ebx+0x14]
  4222b4:	cmp    al,0x26
  4222b6:	sub    al,0x44
  4222b8:	jno    0x422323
  4222ba:	ja     0x422321
  4222bc:	int3   
  4222bd:	fsubr  QWORD PTR [edx+0x1e]
  4222c0:	jo     0x422327
  4222c2:	popa   
  4222c3:	ins    BYTE PTR es:[edi],dx
  4222c4:	push   eax
  4222c5:	lods   eax,DWORD PTR ds:[esi]
  4222c6:	xor    DWORD PTR [esi+0x41],edi
  4222c9:	ins    BYTE PTR es:[edi],dx
  4222ca:	popa   
  4222cb:	outs   dx,BYTE PTR ds:[esi]
  4222cc:	add    BYTE PTR [eax],al
  4222ce:	add    BYTE PTR [eax],al
  4222d0:	addr16 jb 0x422338
  4222d3:	popa   
  4222d4:	je     0x42233d
  4222d6:	jb     0x42233d
  4222d8:	popa   
  4222d9:	je     0x422342
  4222db:	jb     0x422342
  4222dd:	popa   
  4222de:	je     0x422347
  4222e0:	jb     0x422347
  4222e2:	popa   
  4222e3:	je     0x42234c
  4222e5:	jb     0x42234c
  4222e7:	popa   
  4222e8:	je     0x422351
  4222ea:	jb     0x422351
  4222ec:	popa   
  4222ed:	je     0x422356
  4222ef:	jb     0x422356
  4222f1:	popa   
  4222f2:	je     0x42235b
  4222f4:	jb     0x42235b
  4222f6:	popa   
  4222f7:	je     0x422360
  4222f9:	jb     0x422360
  4222fb:	popa   
  4222fc:	je     0x422365
  4222fe:	jb     0x422365
  422300:	popa   
  422301:	je     0x422303
  422303:	add    BYTE PTR [eax+0x65],ch
  422306:	ins    BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	push   0x686c6c65
  42230d:	gs ins BYTE PTR es:[edi],dx
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	push   0x686c6c65
  422315:	gs ins BYTE PTR es:[edi],dx
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	push   0x686c6c65
  42231d:	gs ins BYTE PTR es:[edi],dx
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	push   0x686c6c65
  422325:	gs ins BYTE PTR es:[edi],dx
  422327:	ins    BYTE PTR es:[edi],dx
  422328:	push   0x686c6c65
  42232d:	gs ins BYTE PTR es:[edi],dx
  42232f:	ins    BYTE PTR es:[edi],dx
  422330:	push   0x686c6c65
  422335:	gs ins BYTE PTR es:[edi],dx
  422337:	ins    BYTE PTR es:[edi],dx
  422338:	add    BYTE PTR [eax],al
  42233a:	add    BYTE PTR [eax],al
  42233c:	outs   dx,DWORD PTR ds:[esi]
  42233d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422341:	add    BYTE PTR [ecx+0x0],ah
  422344:	jne    0x422346
  422346:	je     0x422348
  422348:	xor    eax,DWORD PTR [eax]
  42234a:	xor    al,BYTE PTR [eax]
  42234c:	add    BYTE PTR [eax],al
  42234e:	add    BYTE PTR [eax],al
  422350:	push   0x61006500
  422355:	add    BYTE PTR [esi+0x0],dh
  422358:	add    BYTE PTR gs:[esi+0x0],ch
  42235c:	push   0x61006500
  422361:	add    BYTE PTR [esi+0x0],dh
  422364:	add    BYTE PTR gs:[esi+0x0],ch
  422368:	push   0x61006500
  42236d:	add    BYTE PTR [esi+0x0],dh
  422370:	add    BYTE PTR gs:[esi+0x0],ch
  422374:	push   0x61006500
  422379:	add    BYTE PTR [esi+0x0],dh
  42237c:	add    BYTE PTR gs:[esi+0x0],ch
  422380:	push   0x61006500
  422385:	add    BYTE PTR [esi+0x0],dh
  422388:	add    BYTE PTR gs:[esi+0x0],ch
  42238c:	push   0x61006500
  422391:	add    BYTE PTR [esi+0x0],dh
  422394:	add    BYTE PTR gs:[esi+0x0],ch
  422398:	push   0x61006500
  42239d:	add    BYTE PTR [esi+0x0],dh
  4223a0:	add    BYTE PTR gs:[esi+0x0],ch
  4223a4:	push   0x61006500
  4223a9:	add    BYTE PTR [esi+0x0],dh
  4223ac:	add    BYTE PTR gs:[esi+0x0],ch
  4223b0:	push   0x61006500
  4223b5:	add    BYTE PTR [esi+0x0],dh
  4223b8:	add    BYTE PTR gs:[esi+0x0],ch
  4223bc:	add    BYTE PTR [eax],al
  4223be:	add    BYTE PTR [eax],al
  4223c0:	cmp    al,0x23
  4223c2:	inc    edx
  4223c3:	add    BYTE PTR [edi+0x6c],cl
  4223c6:	gs dec ecx
  4223c8:	arpl   WORD PTR [edi+0x6e],bp
  4223cb:	push   esp
  4223cc:	outs   dx,DWORD PTR ds:[esi]
  4223cd:	inc    ebx
  4223ce:	jne    0x422442
  4223d0:	jae    0x422441
  4223d2:	jb     0x4223d4
  4223d4:	les    esp,FWORD PTR [ebx]
  4223d6:	inc    edx
	...
  4223df:	add    BYTE PTR [eax-0x77ffbdd9],al
  4223e5:	daa    
  4223e6:	inc    edx
  4223e7:	add    BYTE PTR [eax+0x26],al
  4223ea:	inc    edx
  4223eb:	add    dl,dh
  4223ed:	inc    ebx
  4223ee:	push   ebx
  4223ef:	mov    WORD PTR ds:0x1a49ba4,ss
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	popf   
  4223f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f8:	jno    0x42239e
  4223fa:	xchg   edi,eax
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422404:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  42240b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240c:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422412:	adc    eax,0x1a49ba4
  422417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422418:	popf   
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	jno    0x4223c0
  42241c:	xchg   edi,eax
  42241d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422426:	xor    eax,0x9ba485a4
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	mov    ebx,0xd1e2d3a4
  422431:	in     al,dx
  422432:	xchg   ebp,eax
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	adc    eax,0x3ba49ba4
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	popf   
  42243b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422444:	fwait
  422445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422446:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42244d:	sub    al,0xf7
  42244f:	cs pop ss
  422451:	push   cs
  422452:	adc    eax,0x3a49108
  422457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422458:	fwait
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422462:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	shl    DWORD PTR [edx],cl
  42246c:	shr    DWORD PTR [ecx+esi*8],1
  42246f:	or     al,0xf7
  422471:	push   cs
  422472:	pop    ss
  422473:	outs   dx,BYTE PTR ds:[esi]
  422474:	adc    eax,0x3a49168
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	fwait
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422484:	xor    eax,0x9ba48da4
  422489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422492:	imul   DWORD PTR [esi+0x17]
  422495:	dec    esi
  422496:	adc    eax,0x37a49148
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	fwait
  42249d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249e:	jae    0x422444
  4224a0:	popf   
  4224a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a2:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	fwait
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224b4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224bc:	aaa    
  4224bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224be:	fwait
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	jae    0x422466
  4224c2:	popf   
  4224c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c4:	pop    ss
  4224c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c6:	xchg   ebp,eax
  4224c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c8:	push   ecx
  4224c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ca:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224d1:	inc    edx
  4224d2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224d6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224dc:	xchg   ecx,eax
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	aaa    
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	fwait
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	jae    0x422488
  4224e4:	popf   
  4224e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ee:	fwait
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224f7:	mov    esi,?
  4224f9:	mov    ss,WORD PTR [esi]
  4224fb:	out    dx,al
  4224fc:	adc    al,0xe8
  4224fe:	xchg   ecx,eax
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	aaa    
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	fwait
  422503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422504:	jae    0x4224aa
  422506:	popf   
  422507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422508:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  42250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422510:	fwait
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42251a:	imul   dh
  42251c:	push   ss
  42251d:	into   
  42251e:	adc    al,0xc8
  422520:	xchg   ecx,eax
  422521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422522:	cmp    eax,0x51a49ba4
  422527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422528:	popf   
  422529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252a:	jnp    0x4224d0
  42252c:	xchg   ebx,eax
  42252d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252e:	fwait
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	xchg   ecx,eax
  422531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	shl    dl,cl
  422534:	shr    ah,1
  422536:	lock int3 
  422538:	test   dh,0x16
  42253b:	cs adc al,0x28
  42253e:	push   ss
  42253f:	push   cs
  422540:	adc    al,0x8
  422542:	xchg   ebx,eax
  422543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422544:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42254b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42254c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	fwait
  422555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422556:	lea    esp,[edx+edx*8-0xfd32fde]
  42255d:	or     al,0xf6
  42255f:	push   cs
  422560:	push   ss
  422561:	outs   dx,BYTE PTR ds:[esi]
  422562:	adc    al,0x68
  422564:	xchg   ecx,eax
  422565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422566:	add    BYTE PTR [eax],al
  422568:	lock and eax,DWORD PTR [edx+0x0]
  42256c:	cld    
  42256d:	and    eax,0x26040042
  422572:	inc    edx
  422573:	add    BYTE PTR [edi+eiz*1+0x23e80042],cl
  42257a:	inc    edx
  42257b:	add    BYTE PTR [eax],cl
  42257d:	es inc edx
  42257f:	add    BYTE PTR [edx+0x7c],ch
  422582:	inc    edx
  422583:	add    dl,ah
  422585:	jle    0x4225c9
  422587:	add    al,bh
  422589:	es inc edx
  42258b:	add    BYTE PTR [edi+eiz*1+0x42],bh
  42258f:	add    ah,ah
  422591:	and    eax,0x25e80042
  422596:	inc    edx
  422597:	add    BYTE PTR [eax+0x27],bh
  42259a:	inc    edx
  42259b:	add    BYTE PTR [esi+eiz*1+0x42],cl
  42259f:	add    BYTE PTR [edx-0x35],cl
  4225a2:	push   es
  4225a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a4:	scas   al,BYTE PTR es:[edi]
  4225a5:	or     al,0x6
  4225a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a8:	add    BYTE PTR [esi],ah
  4225aa:	inc    edx
  4225ab:	add    BYTE PTR [eax-0x3bffbdda],dh
  4225b1:	es inc edx
  4225b3:	add    al,dl
  4225b5:	es inc edx
  4225b7:	add    al,ah
  4225b9:	es inc edx
  4225bb:	add    BYTE PTR [eax],bh
  4225bd:	es inc edx
  4225bf:	add    ah,ch
  4225c1:	and    eax,DWORD PTR [edx+0x0]
  4225c4:	pop    eax
  4225c5:	es inc edx
  4225c7:	add    BYTE PTR [eax+0x26],cl
  4225ca:	inc    edx
  4225cb:	add    BYTE PTR [eax-0x51ffbdd9],dl
  4225d1:	call   0xbde7:0x4338a406
  4225d8:	push   0x70004226
  4225dd:	es inc edx
  4225df:	add    BYTE PTR [esi+eiz*1],cl
  4225e2:	inc    edx
  4225e3:	add    BYTE PTR [edi+eax*4],ah
  4225e6:	loopne 0x4225a5
  4225e8:	jbe    0x422665
  4225ea:	pop    ds
  4225eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ec:	add    BYTE PTR [eax],al
  4225ee:	inc    eax
  4225ef:	add    dl,ch
  4225f1:	rcl    dl,cl
  4225f3:	pop    ecx
  4225f4:	fistp  QWORD PTR [esi+0x42]
  4225f7:	add    bl,bl
  4225f9:	outs   dx,DWORD PTR fs:[esi]
  4225fb:	arpl   WORD PTR [edi+0xf],si
  4225fe:	pop    ebx
  4225ff:	xor    DWORD PTR [esi-0x5],esi
  422602:	(bad)  
  422603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422604:	mov    dl,0xc
  422606:	xchg   ebx,eax
  422607:	test   al,0xf4
  422609:	and    eax,0xdaaa0042
  42260e:	push   es
  42260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422610:	stos   BYTE PTR es:[edi],al
  422611:	fiadd  WORD PTR [esi]
  422613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422615:	fiadd  DWORD PTR [esi]
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	mov    ds:0xbea406da,al
  42261d:	fiadd  DWORD PTR [esi]
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	mov    edx,0xb6a406da
  422625:	fiadd  DWORD PTR [esi]
  422627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422628:	mov    dl,0xda
  42262a:	push   es
  42262b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42262c:	mov    ds,edx
  42262e:	push   es
  42262f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422630:	mov    bl,dl
  422632:	push   es
  422633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422634:	out    dx,al
  422635:	fiadd  DWORD PTR [esi]
  422637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422638:	dec    DWORD PTR [ebx]
  42263a:	adc    edi,DWORD PTR [edx]
  42263c:	in     al,0x23
  42263e:	inc    edx
  42263f:	add    ch,dl
  422641:	sub    BYTE PTR [edx+0x0],al
  422644:	pop    ss
  422645:	loop   0x4225d0
  422647:	js     0x4225f7
  422649:	call   0xa4d7:0xcb3aa406
  422650:	and    al,0x75
  422652:	add    BYTE PTR [eax],al
  422654:	loopne 0x422679
  422656:	inc    edx
  422657:	add    BYTE PTR [edx],ah
  422659:	inc    ebx
  42265a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422668:	hlt    
  422669:	clc    
  42266a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422670:	sub    eax,DWORD PTR [edi+0x1f]
  422673:	jle    0x422675
	...
  422699:	add    BYTE PTR [eax],al
  42269b:	add    BYTE PTR [edx+0x7c],ch
  42269e:	inc    edx
	...
  4226ab:	add    cl,bh
  4226ad:	jmp    0xa48f26f3
  4226b2:	push   ecx
  4226b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b4:	jg     0x42265a
  4226b6:	inc    edi
  4226b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b8:	push   ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	inc    ebx
  4226bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226bc:	std    
  4226bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226be:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c6:	push   ebx
  4226c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c8:	dec    ecx
  4226c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ca:	std    
  4226cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226cc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d4:	push   ecx
  4226d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d6:	jg     0x42267c
  4226d8:	std    
  4226d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226da:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e2:	dec    ebx
  4226e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e4:	inc    ebx
  4226e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e6:	jne    0x42268c
  4226e8:	pop    ecx
  4226e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ea:	jnp    0x422690
  4226ec:	dec    ecx
  4226ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ee:	fwait
  4226ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226f8:	xor    eax,eax
  4226fa:	xor    esp,DWORD PTR [eax]
  4226fc:	xor    eax,DWORD PTR [eax]
  4226fe:	xor    esp,DWORD PTR [eax+0x33]
  422701:	inc    eax
  422702:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  422708:	xor    al,al
  42270a:	xor    ah,BYTE PTR [eax]
  42270c:	xor    al,BYTE PTR [eax]
  42270e:	xor    ah,BYTE PTR [eax+0x32]
  422711:	inc    eax
  422712:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422718:	xor    ecx,esp
  42271a:	xor    ecx,esi
  42271c:	xor    ecx,eax
  42271e:	xor    ecx,edx
  422720:	xor    edx,esp
  422722:	xor    edx,esi
  422724:	xor    edx,eax
  422726:	xor    edx,edx
  422728:	xor    ebx,esp
  42272a:	xor    ebx,esi
  42272c:	xor    ebx,eax
  42272e:	xor    ebx,edx
  422730:	xor    eax,esi
  422732:	push   ebx
  422733:	shl    BYTE PTR [ebx-0x40],0x93
  422737:	rcl    DWORD PTR [esi-0x56],0x15
  42273b:	into   
  42273c:	xchg   ebp,eax
  42273d:	dec    ecx
  42273e:	xor    ecx,esp
  422740:	sbb    eax,0x50abaae2
  422745:	push   0x1e
  422747:	cs je  0x42275e
  42274a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422750:	imul   edi,edx,0xffffffd5
  422753:	leave  
  422754:	daa    
  422755:	dec    eax
  422756:	out    dx,eax
  422757:	pushf  
  422758:	mov    dh,0xdf
  42275a:	dec    esi
  42275b:	xchg   ebp,eax
  42275c:	lock xor DWORD PTR [esi-0x6c],ebp
  422760:	inc    ebp
  422761:	or     eax,0xc1470876
  422766:	js     0x422723
  422768:	popa   
  422769:	pop    ecx
  42276a:	jecxz  0x4227d7
  42276c:	mov    BYTE PTR [edx-0x56],0x5
  422770:	cs enter 0xaa46,0x44
  422775:	aas    
  422776:	inc    ebp
  422777:	leave  
  422778:	test   BYTE PTR [ebx+0x819a593],0xd8
  42277f:	jl     0x4227f9
  422781:	mov    es,WORD PTR [edx+0x0]
  422784:	jb     0x4227e0
  422786:	pop    ss
  422787:	sub    ebp,esp
  422789:	and    eax,0x26500042
  42278e:	inc    edx
  42278f:	add    BYTE PTR [esi-0x5],dh
  422792:	fbld   TBYTE PTR [ebp+0x0]
	...
  4227a0:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  4227a6:	popa   
  4227a7:	arpl   WORD PTR [edi+0x7a],bp
  4227aa:	popa   
  4227ab:	outs   dx,DWORD PTR ds:[si]
  4227ad:	gs ins DWORD PTR es:[edi],dx
  4227af:	jae    0x4227f3
  4227b1:	outs   dx,DWORD PTR ds:[esi]
  4227b2:	ins    BYTE PTR es:[edi],dx
  4227b3:	gs mov cl,0x65
  4227b6:	in     eax,dx
  4227b7:	jg     0x4227f2
  4227b9:	ja     0x422824
  4227bb:	jp     0x4227b0
  4227bd:	inc    esp
  4227be:	push   0x1b
  4227c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c1:	push   ecx
  4227c2:	dec    esp
  4227c3:	gs jb  0x42283f
  4227c6:	popa   
  4227c7:	push   ebx
  4227c8:	jne    0x42283b
  4227ca:	jae    0x42282d
  4227cc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227d3:	inc    esp
  4227d4:	(bad)  [edx+0x65]
  4227d7:	jae    0x42282f
  4227d9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227e0:	jb     0x422844
  4227e2:	gs je  0x4227b8
  4227e5:	lds    edx,FWORD PTR [eax-0x68]
  4227e8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227ec:	fs jne 0x42285e
  4227ef:	push   eax
  4227f0:	gs fs jae 0x422861
  4227f4:	popa   
  4227f5:	ins    DWORD PTR es:[edi],dx
  4227f6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  422809:	add    BYTE PTR [eax],al
  42280b:	add    BYTE PTR [esp+ecx*4],ch
  42280e:	push   ss
  42280f:	mov    esi,0x6f4c8773
  422814:	jb     0x422884
  422816:	jno    0x422881
  422818:	or     al,0x36
  42281a:	lods   al,BYTE PTR ds:[esi]
  42281b:	repnz push edx
  42281d:	je     0x42288e
  42281f:	je     0x422865
  422821:	js     0x4227df
  422823:	cmc    
  422824:	outs   dx,DWORD PTR ds:[esi]
  422825:	ins    DWORD PTR es:[edi],dx
  422826:	popa   
  422827:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42282e:	popa   
  42282f:	jb     0x4228a6
  422831:	push   0x68736f79
  422836:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42283d:	mov    ch,0xa5
  42283f:	jns    0x4228b4
  422841:	outs   dx,DWORD PTR ds:[esi]
  422842:	addr16 popa 
  422844:	add    BYTE PTR [bp+si],bh
  422847:	sub    bh,cl
  422849:	icebp  
  42284a:	gs ins BYTE PTR es:[edi],dx
  42284c:	jae    0x422896
  42284e:	popa   
  42284f:	je     0x4228b9
  422851:	ins    DWORD PTR es:[edi],dx
  422852:	add    BYTE PTR gs:[bx+si],al
  422856:	in     al,dx
  422857:	mov    ecx,0x414ad1d2
  42285c:	ins    DWORD PTR es:[edi],dx
  42285d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422864:	gs ins DWORD PTR es:[edi],dx
  422866:	add    BYTE PTR [eax],al
  422868:	jne    0x42287a
  42286a:	popa   
  42286b:	or     BYTE PTR [esi+0x73654dbb],al
  422871:	popa   
  422872:	push   0x78000061
  422877:	loope  0x4228bb
  422879:	stos   BYTE PTR es:[edi],al
  42287a:	je     0x4228dd
  42287c:	push   edi
  42287d:	popa   
  42287e:	jb     0x4228eb
  422880:	jae    0x4228ed
  422882:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422889:	loope  0x422857
  42288b:	aad    0x6f
  42288d:	jb     0x4228fb
  42288f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422896:	je     0x4228ab
  422898:	adc    al,BYTE PTR [ebp+0x77646172]
  42289e:	outs   dx,DWORD PTR ds:[esi]
  42289f:	gs ins DWORD PTR es:[edi],dx
  4228a1:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  4228a8:	outs   dx,BYTE PTR ds:[esi]
  4228a9:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228b0:	ja     0x422916
  4228b2:	outs   dx,DWORD PTR ds:[esi]
  4228b3:	popa   
  4228b4:	outs   dx,BYTE PTR ds:[esi]
  4228b5:	gs jae 0x42291a
  4228b8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228bf:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228c7:	inc    ebx
  4228c8:	jb     0x422883
  4228ca:	sbb    al,0xd9
  4228cc:	jo     0x422937
  4228ce:	addr16 js 0x422946
  4228d1:	jo     0x422948
  4228d3:	fs add ch,cl
  4228d6:	xchg   esi,eax
  4228d7:	in     eax,dx
  4228d8:	jno    0x42294b
  4228da:	iret   
  4228db:	jbe    0x4228d6
  4228dd:	or     dh,BYTE PTR [esi-0x3]
  4228e0:	cwde   
  4228e1:	int    0xd6
  4228e3:	std    
  4228e4:	pop    ebp
  4228e5:	fsubr  DWORD PTR [edi]
  4228e7:	dec    edx
  4228e8:	xor    eax,0xd6cd860a
  4228ed:	stc    
  4228ee:	inc    ebx
  4228ef:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228f5:	dec    edx
  4228f6:	sbb    BYTE PTR [ecx+0x52],bh
  4228f9:	mov    ch,al
  4228fb:	jns    0x42294f
  4228fd:	dec    edx
  4228fe:	sbb    BYTE PTR [ecx+0x6e],bh
  422901:	xchg   edx,eax
  422902:	cmp    eax,0xcd96c5cb
  422907:	in     eax,dx
  422908:	jno    0x42297b
  42290a:	iret   
  42290b:	jbe    0x422906
  42290d:	or     dh,BYTE PTR [esi-0x3]
  422910:	int    0x96
  422912:	std    
  422913:	pop    ebp
  422914:	jns    0x422961
  422916:	pop    edx
  422917:	xor    eax,0x96cd920a
  42291c:	stc    
  42291d:	inc    ebx
  42291e:	icebp  
  42291f:	(bad)  
  422920:	das    
  422921:	int    0x76
  422923:	mov    BYTE PTR [ecx+0x6e],bh
  422926:	mov    DWORD PTR [edx-0x13749387],esi
  42292c:	jns    0x42299c
  42292e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422934:	retf   
  422935:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42293c:	jno    0x42290d
  42293e:	jbe    0x422939
  422940:	or     dh,BYTE PTR [esi-0x3]
  422943:	int    0x96
  422945:	std    
  422946:	pop    ebp
  422947:	fdiv   DWORD PTR [ebx-0x6df55465]
  42294d:	int    0x96
  42294f:	stc    
  422950:	inc    ebx
  422951:	icebp  
  422952:	(bad)  
  422953:	test   BYTE PTR [ecx+0x6e],bh
  422956:	mov    ebp,esp
  422958:	int    0x76
  42295a:	mov    BYTE PTR [ecx+0x6e],bh
  42295d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422964:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42296b:	jno    0x42293c
  42296d:	jbe    0x422968
  42296f:	or     dh,BYTE PTR [esi-0x3]
  422972:	cwde   
  422973:	int    0xd6
  422975:	std    
  422976:	pop    ebp
  422977:	ret    0x2be4
  42297a:	cmp    DWORD PTR [edx],ecx
  42297c:	xchg   ch,cl
  42297e:	(bad)  
  42297f:	stc    
  422980:	inc    ebx
  422981:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422987:	test   BYTE PTR [ebx-0x78913648],ch
  42298d:	ret    0x79ab
  422990:	xchg   edx,eax
  422991:	aad    0xcb
  422993:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422999:	iret   
  42299a:	jbe    0x422995
  42299c:	or     dh,BYTE PTR [esi-0x3]
  42299f:	int    0x96
  4229a1:	std    
  4229a2:	pop    ebp
  4229a3:	pop    ecx
  4229a4:	ins    BYTE PTR es:[edi],dx
  4229a5:	cmp    dh,BYTE PTR ds:0x96cd920a
  4229ab:	stc    
  4229ac:	inc    ebx
  4229ad:	icebp  
  4229ae:	(bad)  
  4229af:	push   ebx
  4229b0:	int    0x76
  4229b2:	mov    BYTE PTR [ecx+0x6e],bh
  4229b5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229bb:	jns    0x422a2b
  4229bd:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229c3:	call   0xcded:0xcd965b98
  4229ca:	jbe    0x422a00
  4229cc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229d3:	sbb    al,0x81
  4229d5:	(bad)  
  4229d6:	and    al,0x98
  4229d8:	int    0xd6
  4229da:	adc    al,0x47
  4229dc:	mov    ds:0xff8eca62,al
  4229e1:	add    al,0x7d
  4229e3:	add    ch,dl
  4229e5:	lods   eax,DWORD PTR ds:[esi]
  4229e6:	clc    
  4229e7:	icebp  
  4229e8:	jo     0x4229b4
  4229ea:	(bad)  
  4229ec:	jge    0x4229ee
  4229ee:	aad    0xad
  4229f0:	clc    
  4229f1:	icebp  
  4229f2:	jo     0x422986
  4229f4:	adc    ecx,ebp
  4229f6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229fd:	jo     0x422a6f
  4229ff:	jo     0x422a71
  422a01:	jo     0x42299d
  422a03:	xor    esi,edi
  422a05:	cwde   
  422a06:	add    al,0xc
  422a08:	add    BYTE PTR [ebp-0x80],bl
  422a0b:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a11:	or     DWORD PTR [eax-0x75],ebx
  422a14:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a1b:	jecxz  0x422a08
  422a1d:	hlt    
  422a1e:	scas   eax,DWORD PTR es:[edi]
  422a1f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a26:	sub    dl,0xfa
  422a29:	iret   
  422a2a:	pop    eax
  422a2b:	iret   
  422a2c:	push   0xffffffcd
  422a2e:	out    0xfd,al
  422a30:	int    0x76
  422a32:	adc    DWORD PTR [ebx],esi
  422a34:	out    0x34,al
  422a36:	sub    ecx,ecx
  422a38:	or     dh,BYTE PTR [esi-0x43]
  422a3b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a41:	sub    BYTE PTR [edi],0x6
  422a44:	sub    DWORD PTR [eax-0x72357f80],eax
  422a4a:	cmc    
  422a4b:	sub    esp,esi
  422a4d:	in     eax,dx
  422a4e:	aad    0xe9
  422a50:	add    ebx,ebp
  422a52:	mov    bh,dh
  422a54:	fcmovnbe st,st(5)
  422a56:	out    dx,eax
  422a57:	pushf  
  422a58:	xchg   edi,edi
  422a5a:	test   al,0xcf
  422a5c:	fs adc ebx,0xffffffe9
  422a60:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a64:	iret   
  422a65:	int3   
  422a66:	call   0x80c2792f
  422a6b:	jno    0x422a05
  422a6d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a77:	int    0xe6
  422a79:	std    
  422a7a:	xor    esp,esi
  422a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a7d:	das    
  422a7e:	pop    ecx
  422a7f:	push   0xffffffcd
  422a81:	(bad)  
  422a82:	or     eax,0xfcde9e3
  422a87:	sub    edi,eax
  422a89:	xchg   DWORD PTR [edi],ecx
  422a8b:	iret   
  422a8c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a92:	add    BYTE PTR [eax-0x102c8233],0x88
  422a99:	add    al,0xf2
  422a9b:	add    DWORD PTR [ebx+0x2],0x80818069
  422aa2:	adc    dh,0x4e
  422aa5:	inc    ebx
  422aa6:	jns    0x422a2a
  422aa8:	fldlg2 
  422aaa:	es int 0xc6
  422aad:	or     eax,0x809221bd
  422ab2:	add    al,0x81
  422ab5:	mov    al,ds:0xfb87d287
  422aba:	add    al,0xbd
  422abc:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422ac3:	jns    0x422a92
  422ac5:	ins    DWORD PTR es:[edi],dx
  422ac6:	and    ch,0xa0
  422ac9:	push   edx
  422aca:	add    al,0x3
  422acc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422ad2:	push   edx
  422ad3:	add    al,0x3
  422ad5:	push   ebx
  422ad6:	mov    al,cl
  422ad8:	test   bh,bh
  422ada:	retf   
  422adb:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ae3:	(bad)  
  422ae4:	in     al,dx
  422ae5:	outs   dx,DWORD PTR ds:[esi]
  422ae6:	rcl    bl,1
  422ae8:	(bad)  
  422ae9:	jge    0x422aa8
  422aeb:	outs   dx,DWORD PTR ds:[esi]
  422aec:	xchg   edx,eax
  422aed:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422af4:	sahf   
  422af5:	mov    al,ds:0x3454009e
  422afa:	jno    0x422b5e
  422afc:	popa   
  422afd:	mov    ah,0x86
  422aff:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422b06:	push   cs
  422b07:	(bad)  
  422b08:	jge    0x422ac7
  422b0a:	push   eax
  422b0b:	xchg   edx,eax
  422b0c:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b13:	jge    0x422ad2
  422b15:	push   ss
  422b16:	xchg   edx,eax
  422b17:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b1e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b24:	jo     0x422af3
  422b26:	(bad)  
  422b27:	std    
  422b28:	xor    edx,esi
  422b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b2b:	inc    ebx
  422b2c:	(bad)  
  422b2d:	xor    al,0x2f
  422b2f:	or     esp,ebx
  422b31:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b3b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b45:	int    0xd6
  422b47:	popf   
  422b48:	aam    0x23
  422b4a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b50:	or     ch,0xd6
  422b53:	xchg   ebp,eax
  422b54:	aam    0x89
  422b56:	int    0xd6
  422b58:	icebp  
  422b59:	int    0x8d
  422b5b:	xchg   ebp,eax
  422b5c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b62:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b68:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b6e:	pushf  
  422b6f:	stos   BYTE PTR es:[edi],al
  422b70:	sahf   
  422b71:	popa   
  422b72:	mov    esp,0xc180804a
  422b77:	mov    BYTE PTR [edi+0x649a62d9],al
  422b7d:	mov    ecx,edx
  422b7f:	rol    DWORD PTR [edx+0x70878492],cl
  422b85:	int    0xc6
  422b87:	or     eax,0x808169bd
  422b8c:	adc    dh,0x14
  422b8f:	int    0x76
  422b91:	mov    ebp,0xd30de6cd
  422b96:	lods   eax,DWORD PTR ds:[esi]
  422b97:	xchg   DWORD PTR [ebx],esi
  422b99:	retf   
  422b9a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422ba1:	in     al,dx
  422ba2:	push   esi
  422ba3:	int    0xc6
  422ba5:	or     eax,0xbd92c704
  422baa:	daa    
  422bab:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422bb5:	or     eax,0xc087add3
  422bba:	mov    BYTE PTR [esi-0x30577740],bl
  422bc0:	gs jp  0x422b47
  422bc3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bcd:	xchg   esi,esp
  422bcf:	or     eax,0x699e30c0
  422bd4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bdb:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bde:	int    0x10
  422be0:	mov    ebp,0x808081bc
  422be5:	int    0x7d
  422be7:	xor    ecx,DWORD PTR [edi]
  422be9:	xor    ah,0x81
  422bec:	lea    esi,[ebp-0x7b8a19fc]
  422bf2:	das    
  422bf3:	add    al,0xd0
  422bf5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bfc:	int    0x8d
  422bfe:	mov    ch,0x4
  422c00:	cli    
  422c01:	test   BYTE PTR [edx-0x61783f79],al
  422c07:	int    0xe6
  422c09:	jge    0x422bde
  422c0b:	xacquire xchg BYTE PTR [ebx],dh
  422c0e:	ins    DWORD PTR es:[edi],dx
  422c0f:	ins    BYTE PTR es:[edi],dx
  422c10:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c15:	outs   dx,DWORD PTR ds:[esi]
  422c16:	lods   al,BYTE PTR ds:[esi]
  422c17:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c1d:	inc    esp
  422c1e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c28:	lea    edi,[ebp+0x4a58d0a]
  422c2e:	cli    
  422c2f:	test   BYTE PTR [edx+0x402cd77],al
  422c35:	mov    dh,0xa5
  422c37:	and    ebx,0xa58d04ef
  422c3d:	xchg   edx,eax
  422c3e:	mov    es,WORD PTR [edx+edi*8]
  422c41:	dec    esi
  422c42:	ja     0x422c62
  422c44:	pop    ebp
  422c45:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c4b:	int    0xf
  422c4d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c53:	jecxz  0x422c02
  422c55:	xchg   DWORD PTR [esi+0x7d],esi
  422c58:	or     dh,BYTE PTR [esi+0xd]
  422c5b:	in     al,dx
  422c5c:	inc    esi
  422c5d:	add    al,0xef
  422c5f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c65:	jecxz  0x422c53
  422c67:	jecxz  0x422c1f
  422c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c6a:	pop    esi
  422c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c6c:	lods   eax,DWORD PTR ds:[esi]
  422c6d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c74:	lods   eax,DWORD PTR ds:[esi]
  422c75:	mov    ss,esi
  422c77:	mov    ebp,0x8086745d
  422c7c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c83:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c89:	test   al,0x33
  422c8b:	add    BYTE PTR [edx-0x33],bh
  422c8e:	leave  
  422c8f:	int    0xc6
  422c91:	or     eax,0x808059bd
  422c96:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9e:	jecxz  0x422c89
  422ca0:	mov    ss,esi
  422ca2:	in     eax,dx
  422ca3:	in     al,dx
  422ca4:	add    BYTE PTR [eax],0x76
  422ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca8:	int    0x8d
  422caa:	mov    ch,0x4
  422cac:	rcl    DWORD PTR [edx-0x32021933],cl
  422cb2:	leave  
  422cb3:	xor    esi,DWORD PTR [esi+0x34]
  422cb6:	pop    esi
  422cb7:	jbe    0x422c5e
  422cb9:	jnp    0x422c45
  422cbb:	int    0xf8
  422cbd:	xor    edx,esi
  422cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc0:	int    0x96
  422cc2:	cmp    al,0x45
  422cc4:	inc    ecx
  422cc5:	inc    ebx
  422cc6:	add    esi,DWORD PTR [edi-0x79]
  422cc9:	jle    0x422ca1
  422ccb:	clc    
  422ccc:	or     ah,dh
  422cce:	std    
  422ccf:	das    
  422cd0:	pop    ecx
  422cd1:	adc    DWORD PTR [ebx-0x1a],eax
  422cd4:	cmp    al,0x2f
  422cd6:	or     esp,DWORD PTR [edx-0x2]
  422cd9:	add    BYTE PTR [eax],al
  422cdb:	mov    ebp,0x80808040
  422ce0:	xor    ebp,DWORD PTR [ebp-0x31]
  422ce3:	les    esi,FWORD PTR [esp+eiz*2]
  422ce6:	int    0x96
  422ce8:	sub    al,0xcd
  422cea:	(bad)  
  422ceb:	stc    
  422cec:	xor    edx,esi
  422cee:	sbb    al,0xa
  422cf0:	inc    edx
  422cf1:	int    0x96
  422cf3:	inc    esp
  422cf4:	int    0xe6
  422cf6:	std    
  422cf7:	xor    esp,esi
  422cf9:	xor    al,0xa
  422cfb:	pusha  
  422cfc:	retf   
  422cfd:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422d03:	test   al,0x9c
  422d05:	xor    ebp,DWORD PTR [ebp+0x6c]
  422d08:	in     al,dx
  422d09:	popf   
  422d0a:	adc    bh,ah
  422d0c:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d13:	shl    ebp,cl
  422d15:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d1b:	(bad)  
  422d1c:	and    al,0x77
  422d1e:	mov    ch,0xcd
  422d20:	jbe    0x422ccf
  422d22:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d28:	lods   eax,DWORD PTR ds:[esi]
  422d29:	or     dl,dh
  422d2b:	stc    
  422d2c:	test   al,0xc5
  422d2e:	int    0x8d
  422d30:	jne    0x422d61
  422d32:	pop    ecx
  422d33:	ins    DWORD PTR es:[edi],dx
  422d34:	shl    edx,cl
  422d36:	test   BYTE PTR [edi-0x2c78428a],al
  422d3c:	in     al,dx
  422d3d:	xchg   BYTE PTR [edi],ch
  422d3f:	pop    ecx
  422d40:	ins    DWORD PTR es:[edi],dx
  422d41:	xchg   DWORD PTR [esi+0x75],esi
  422d44:	int    0xc6
  422d46:	jge    0x422d17
  422d48:	les    esi,FWORD PTR [esi-0x80]
  422d4b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d4e:	les    esi,FWORD PTR [esi-0x80]
  422d51:	adc    bh,ah
  422d53:	add    BYTE PTR [eax+0x24778180],0xcd
  422d5a:	mov    WORD PTR [esp+ebx*2],?
  422d5d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d64:	xor    al,0xa4
  422d66:	ja     0x422d8d
  422d68:	retf   0x31
  422d6b:	je     0x422da1
  422d6d:	pop    esp
  422d6e:	shl    ebp,cl
  422d70:	mov    BYTE PTR [ecx],cl
  422d72:	xchg   esp,eax
  422d73:	xor    al,0x2c
  422d75:	int    0xc
  422d77:	das    
  422d78:	mov    ebx,0xebd38096
  422d7d:	push   ebx
  422d7e:	das    
  422d7f:	rcl    DWORD PTR [ebx],1
  422d81:	pop    esi
  422d82:	mov    WORD PTR [esp+ebp*1],?
  422d85:	ja     0x422da1
  422d87:	int    0xdb
  422d89:	pop    edi
  422d8a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d91:	jmp    0x422d18
  422d93:	mov    eax,0x87808d81
  422d98:	ins    DWORD PTR es:[edi],dx
  422d99:	iret   
  422d9a:	les    esi,FWORD PTR [esp+ebp*2]
  422d9d:	(bad)
  422da0:	test   DWORD PTR [esi],edi
  422da2:	mov    WORD PTR [esp+ebp*1],?
  422da5:	xor    ebx,ebx
  422da7:	mov    eax,0x8780963e
  422dac:	ins    DWORD PTR es:[edi],dx
  422dad:	add    al,0x6d
  422daf:	or     edi,0xc56c34c4
  422db5:	cwde   
  422db6:	int    0xf0
  422db8:	mov    ebp,0xfcd9
  422dbd:	int    0xd9
  422dbf:	int    0xf
  422dc1:	jns    0x422d49
  422dc3:	mov    bh,0xbd
  422dc5:	sub    esp,edi
  422dc7:	add    BYTE PTR [eax],al
  422dc9:	cwde   
  422dca:	int    0xf0
  422dcc:	jns    0x422e46
  422dce:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422dd4:	add    BYTE PTR [eax-0x58798787],bl
  422dda:	mov    ebp,0xfc38
  422ddf:	jns    0x422e59
  422de1:	xchg   edx,eax
  422de2:	cmp    eax,0xeceb99cd
  422de7:	add    eax,DWORD PTR [eax]
  422de9:	add    BYTE PTR [esi-0x12ed1233],dl
  422def:	inc    esp
  422df0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dfa:	leave  
  422dfb:	jbe    0x422db2
  422dfd:	inc    ecx
  422dfe:	and    DWORD PTR [esi-0x778932cb],eax
  422e04:	or     dh,BYTE PTR [esi-0x78]
  422e07:	int    0x76
  422e09:	stc    
  422e0a:	int    0x96
  422e0c:	stc    
  422e0d:	pop    ebx
  422e0e:	cwde   
  422e0f:	call   0xd3e3:0x3b9effc0
  422e16:	jmp    0x3586:0x21d1bf28
  422e1d:	cmp    eax,ebp
  422e1f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e25:	jbe    0x422e9c
  422e27:	int    0x76
  422e29:	stc    
  422e2a:	int    0x96
  422e2c:	stc    
  422e2d:	cmp    eax,ebp
  422e2f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e35:	jmp    0xfd76:0xad25328
  422e3c:	int    0x76
  422e3e:	stc    
  422e3f:	int    0x96
  422e41:	stc    
  422e42:	cmp    eax,ebp
  422e44:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e4a:	jmp    0xd076:0xad25328
  422e51:	int    0x76
  422e53:	stc    
  422e54:	int    0x96
  422e56:	stc    
  422e57:	cmp    eax,ebp
  422e59:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e5f:	jmp    0xbd76:0xad25328
  422e66:	leave  
  422e67:	jbe    0x422e96
  422e69:	dec    ecx
  422e6a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e71:	mov    al,ds:0x76c93586
  422e76:	and    eax,0x35862169
  422e7b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e7f:	jbe    0x422e51
  422e81:	or     dh,BYTE PTR [esi-0x30]
  422e84:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e8c:	ror    cl,1
  422e8e:	jbe    0x422e60
  422e90:	jo     0x422e12
  422e92:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e99:	add    BYTE PTR [eax-0x32068933],0x96
  422ea0:	stc    
  422ea1:	cmp    eax,ebp
  422ea3:	cmp    esp,ebx
  422ea5:	sar    DWORD PTR [ebp+0x28ead392],cl
  422eab:	push   ebx
  422eac:	ror    BYTE PTR [edx],cl
  422eae:	jbe    0x422e80
  422eb0:	int    0x76
  422eb2:	stc    
  422eb3:	int    0x96
  422eb5:	stc    
  422eb6:	cmp    eax,ebp
  422eb8:	cmp    esp,ebx
  422eba:	sar    DWORD PTR [ebp+0x28ead392],cl
  422ec0:	push   ebx
  422ec1:	ror    BYTE PTR [edx],cl
  422ec3:	jbe    0x422e95
  422ec5:	leave  
  422ec6:	jbe    0x422e5d
  422ec8:	arpl   WORD PTR [edx+0x76c98080],dx
  422ece:	lods   eax,DWORD PTR ds:[esi]
  422ecf:	pop    esi
  422ed0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ed7:	add    BYTE PTR [eax-0xa983080],0xff
  422ede:	add    BYTE PTR [eax],al
  422ee0:	iret   
  422ee1:	push   edi
  422ee2:	xchg   ebp,eax
  422ee3:	inc    DWORD PTR [eax]
  422ee5:	add    BYTE PTR [ebp+0xff13],bh
  422eeb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ef1:	lea    ebp,[ebp-0x72ff562a]
  422ef7:	xchg   ebp,eax
  422ef8:	(bad)  
  422ef9:	fcmove st,st(1)
  422efb:	jbe    0x422eaa
  422efd:	dec    esi
  422efe:	ins    BYTE PTR es:[edi],dx
  422eff:	add    BYTE PTR [eax-0x32068933],0x8d
  422f06:	stc    
  422f07:	cmp    eax,ebp
  422f09:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422f0f:	cmp    ecx,DWORD PTR [edi]
  422f11:	shl    edx,cl
  422f13:	sub    BYTE PTR [ebx-0x2d],dl
  422f16:	or     dh,BYTE PTR [esi+0x6d]
  422f19:	int    0x76
  422f1b:	stc    
  422f1c:	int    0x8d
  422f1e:	stc    
  422f1f:	add    al,0xb6
  422f21:	cmc    
  422f22:	cmp    BYTE PTR [ebx],0xc5
  422f25:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f2b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f2f:	or     dh,BYTE PTR [esi-0x6b]
  422f32:	mov    ah,0xb1
  422f34:	sbb    al,0x80
  422f36:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f3d:	push   eax
  422f3e:	or     dh,BYTE PTR [esi-0x13]
  422f41:	int    0x6c
  422f43:	dec    esp
  422f44:	or     dh,BYTE PTR [esi+0x11]
  422f47:	int    0x76
  422f49:	mov    bh,cl
  422f4b:	(bad)  
  422f4c:	cmc    
  422f4d:	or     cl,BYTE PTR [ecx]
  422f4f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f55:	mov    bh,cl
  422f57:	(bad)  
  422f58:	in     eax,dx
  422f59:	or     cl,BYTE PTR [ecx]
  422f5b:	push   ebp
  422f5c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f66:	lea    edx,[ecx]
  422f68:	or     cl,BYTE PTR [ecx]
  422f6a:	pop    ebp
  422f6b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f75:	stc    
  422f76:	int    0x96
  422f78:	stc    
  422f79:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f7c:	cdq    
  422f7d:	shr    ebx,cl
  422f7f:	xchg   edx,eax
  422f80:	shr    edx,cl
  422f82:	sub    BYTE PTR [ebx+0x13],dl
  422f85:	inc    ebx
  422f86:	jge    0x422fb7
  422f88:	add    eax,0x808087ca
  422f8d:	int    0x76
  422f8f:	mov    ch,cl
  422f91:	add    DWORD PTR ds:0xcd808081,esi
  422f97:	mov    ch,cl
  422f99:	jbe    0x422f23
  422f9b:	int    0x1
  422f9d:	xor    eax,0xcd808081
  422fa2:	add    BYTE PTR [edi-0x72329b92],0x88
  422fa9:	int    0xa
  422fab:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fb1:	adc    al,0x0
  422fb3:	add    BYTE PTR [eax],al
  422fb5:	(bad)  
  422fb6:	int    0x96
  422fb8:	mov    ch,cl
  422fba:	mov    ds:0x80808125,al
  422fbf:	int    0x22
  422fc1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422fc7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fcf:	bound  eax,QWORD PTR [eax]
  422fd1:	jno    0x422ff7
  422fd3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fd6:	push   es
  422fd7:	push   esp
  422fd8:	add    BYTE PTR [eax],al
  422fda:	add    BYTE PTR [esi],cl
  422fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fdd:	aad    0x49
  422fdf:	leave  
  422fe0:	push   es
  422fe1:	pop    esp
  422fe2:	add    BYTE PTR [eax],al
  422fe4:	add    BYTE PTR [edi+0x35],dl
  422fe7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fed:	add    BYTE PTR [eax],al
  422fef:	mov    ds:0x79d735c1,eax
  422ff4:	push   es
  422ff5:	ins    BYTE PTR es:[edi],dx
  422ff6:	add    BYTE PTR [eax],al
  422ff8:	add    BYTE PTR [eax],bl
  422ffa:	iret   
  422ffb:	outs   dx,BYTE PTR ds:[si]
  422ffd:	add    BYTE PTR [eax],al
  422fff:	add    BYTE PTR [edi+0x3b41afb8],ch
  423005:	ins    DWORD PTR es:[edi],dx
  423006:	leave  
  423007:	push   es
  423008:	sub    al,0x0
  42300a:	add    BYTE PTR [eax],al
  42300c:	push   cs
  42300d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300e:	aad    0x49
  423010:	leave  
  423011:	push   es
  423012:	xor    al,0x0
  423014:	add    BYTE PTR [eax],al
  423016:	push   edi
  423017:	xor    eax,0x6c9ab13
  42301c:	cmp    al,0x0
  42301e:	add    BYTE PTR [eax],al
  423020:	mov    ds:0x79c335c1,eax
  423025:	push   es
  423026:	inc    esp
  423027:	add    BYTE PTR [eax],al
  423029:	add    BYTE PTR [eax],bl
  42302b:	iret   
  42302c:	addr16 inc esi
  42302e:	add    BYTE PTR [eax],al
  423030:	add    BYTE PTR [edi-0x32be5048],ch
  423036:	jbe    0x422fc0
  423038:	int    0x1
  42303a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423040:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423047:	int    0x76
  423049:	mov    ch,cl
  42304b:	add    DWORD PTR [ebp-0x7f],edi
  42304e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423055:	mov    dl,0x35
  423057:	leave  
  423058:	jbe    0x42305f
  42305a:	mov    bh,0x3f
  42305c:	cmp    DWORD PTR [edi-0x48],eax
  42305f:	leave  
  423060:	jbe    0x42306b
  423062:	xlat   BYTE PTR ds:[ebx]
  423063:	sbb    cl,cl
  423065:	push   es
  423066:	les    eax,FWORD PTR [eax]
  423068:	add    BYTE PTR [eax],al
  42306a:	push   cs
  42306b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42306c:	aad    0x49
  42306e:	leave  
  42306f:	push   es
  423070:	nop
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [edi+0x35],dl
  423076:	xlat   BYTE PTR ds:[ebx]
  423077:	inc    ecx
  423078:	leave  
  423079:	push   es
  42307a:	aam    0x0
  42307c:	add    BYTE PTR [eax],al
  42307e:	cmp    DWORD PTR [ecx+0x57],ecx
  423081:	jge    0x42304c
  423083:	push   es
  423084:	fadd   QWORD PTR [eax]
  423086:	add    BYTE PTR [eax],al
  423088:	mov    cl,0x3f
  42308a:	shl    DWORD PTR ds:0xe406c9,0x0
  423091:	add    BYTE PTR [edi-0x49],al
  423094:	xlat   BYTE PTR ds:[ebx]
  423095:	sbb    cl,cl
  423097:	push   es
  423098:	pushf  
  423099:	add    BYTE PTR [eax],al
  42309b:	add    BYTE PTR [esi],cl
  42309d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42309e:	aad    0x49
  4230a0:	leave  
  4230a1:	push   es
  4230a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a3:	add    BYTE PTR [eax],al
  4230a5:	add    BYTE PTR [edi+0x35],dl
  4230a8:	xlat   BYTE PTR ds:[ebx]
  4230a9:	inc    ecx
  4230aa:	leave  
  4230ab:	push   es
  4230ac:	lods   al,BYTE PTR ds:[esi]
  4230ad:	add    BYTE PTR [eax],al
  4230af:	add    BYTE PTR [ecx],bh
  4230b1:	dec    ecx
  4230b2:	push   edi
  4230b3:	jge    0x42307e
  4230b5:	push   es
  4230b6:	mov    ah,0x0
  4230b8:	add    BYTE PTR [eax],al
  4230ba:	mov    cl,0x3f
  4230bc:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230c3:	add    BYTE PTR [edi-0x49],al
  4230c6:	ret    
  4230c7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230cd:	jo     0x42309c
  4230cf:	jbe    0x423106
  4230d1:	add    BYTE PTR [eax],dh
  4230d3:	int    0x76
  4230d5:	stc    
  4230d6:	int    0x8d
  4230d8:	stc    
  4230d9:	cmp    eax,ebp
  4230db:	cmp    ecx,DWORD PTR [edi]
  4230dd:	shl    edx,cl
  4230df:	sub    bl,dl
  4230e1:	mov    ebp,0xcdd35392
  4230e6:	lea    ebp,[ebp+0x52fd343]
  4230ec:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230f3:	int    0x8d
  4230f5:	mov    ch,0x3b
  4230f7:	lds    edi,FWORD PTR [ebx]
  4230f9:	psrlq  mm6,mm2
  4230fc:	sub    bl,dl
  4230fe:	mov    ebp,0xcdd35392
  423103:	lea    ebp,[ebp+0x76cd7d33]
  423109:	ins    DWORD PTR es:[edi],dx
  42310a:	inc    ebx
  42310b:	shr    DWORD PTR [edi],cl
  42310d:	or     ch,dl
  42310f:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423119:	int    0x76
  42311b:	mov    ch,cl
  42311d:	rcl    BYTE PTR [ecx],1
  42311f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423129:	add    DWORD PTR [ebp-0x7f],esi
  42312c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423133:	jo     0x423135
  423135:	cwde   
  423136:	xor    ch,cl
  423138:	lea    ecx,[eax-0x7ebaf533]
  42313e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423145:	int    0x5d
  423147:	adc    DWORD PTR [ecx-0x29327f80],eax
  42314d:	mov    BYTE PTR [ebx],bh
  42314f:	ins    DWORD PTR es:[edi],dx
  423150:	iret   
  423151:	pop    ss
  423152:	pushf  
  423153:	add    BYTE PTR [eax],al
  423155:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42315b:	jo     0x42312a
  42315d:	jbe    0x4230e7
  42315f:	int    0x1
  423161:	inc    ebp
  423162:	add    DWORD PTR [eax+0x500080],0x760a889a
  42316c:	adc    eax,0xcd8876cd
  423171:	pop    ebp
  423172:	adc    DWORD PTR [ecx-0x29327f80],eax
  423178:	mov    BYTE PTR [ebx],bh
  42317a:	ins    DWORD PTR es:[edi],dx
  42317b:	iret   
  42317c:	pop    ss
  42317d:	les    eax,FWORD PTR [eax]
  42317f:	add    BYTE PTR [eax],al
  423181:	mov    ebp,0x80803ad9
  423186:	jo     0x423155
  423188:	jbe    0x423112
  42318a:	int    0x1
  42318c:	inc    ebp
  42318d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423197:	mov    ch,cl
  423199:	pop    ebp
  42319a:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a0:	mov    BYTE PTR [ebx],bh
  4231a2:	ins    DWORD PTR es:[edi],dx
  4231a3:	iret   
  4231a4:	pop    ss
  4231a5:	push   esp
  4231a6:	add    BYTE PTR [eax],al
  4231a8:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  4231ae:	jo     0x42317d
  4231b0:	jbe    0x42313a
  4231b2:	int    0x1
  4231b4:	inc    ebp
  4231b5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231bf:	pop    ebp
  4231c0:	or     BYTE PTR [edx],0x76
  4231c3:	xor    eax,0xc05d76cd
  4231c8:	push   ds
  4231c9:	cmp    ebx,edx
  4231cb:	sahf   
  4231cc:	clc    
  4231cd:	add    al,BYTE PTR [ecx]
  4231cf:	shr    BYTE PTR [esi+0x2f],cl
  4231d2:	pop    ecx
  4231d3:	shl    BYTE PTR [eax+0x0],cl
  4231d6:	xchg   esi,eax
  4231d7:	xor    eax,0x43d66d06
  4231dc:	int    0x76
  4231de:	pop    ebp
  4231df:	add    al,0xad
  4231e1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231e8:	adc    eax,0x40d46d06
  4231ed:	int    0x76
  4231ef:	mov    ch,cl
  4231f1:	pop    ebp
  4231f2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231f8:	mov    BYTE PTR [ebx],bh
  4231fa:	ins    DWORD PTR es:[edi],dx
  4231fb:	iret   
  4231fc:	xchg   esi,eax
  4231fd:	add    DWORD PTR [ebp-0x7f7fc560],edi
  423203:	jo     0x4231d2
  423205:	jbe    0x42318f
  423207:	int    0x1
  423209:	cmp    eax,0x808081
  42320e:	push   eax
  42320f:	add    BYTE PTR [edx+0xd760a88],bl
  423215:	in     al,dx
  423216:	test   BYTE PTR [esi+esi*4],al
  423219:	or     eax,0x5d760080
  42321e:	add    al,0xe6
  423220:	pop    ebp
  423221:	sub    al,0x82
  423223:	sub    eax,0xcdb576cd
  423228:	lea    esi,[ebp-0x3f772933]
  42322e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423234:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42323a:	push   ebx
  42323b:	ror    edi,cl
  42323d:	pop    ss
  42323e:	cmc    
  42323f:	inc    DWORD PTR [eax]
  423241:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423247:	jo     0x423216
  423249:	jbe    0x423244
  42324b:	int    0x8d
  42324d:	stc    
  42324e:	int    0xd6
  423250:	mov    BYTE PTR [ebx],bh
  423252:	lds    edi,FWORD PTR [ebx]
  423254:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42325b:	push   ebx
  42325c:	ror    edi,cl
  42325e:	pop    ss
  42325f:	xchg   ebp,eax
  423260:	inc    DWORD PTR [eax]
  423262:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423268:	jo     0x42326a
  42326a:	xchg   esi,eax
  42326b:	or     eax,0xcdf98dcd
  423270:	xchg   esi,eax
  423271:	stc    
  423272:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423275:	(bad)  
  423277:	jmp    0x42320b
  423279:	shr    edx,cl
  42327b:	sub    BYTE PTR [ebx+0x13],dl
  42327e:	inc    ebx
  42327f:	jge    0x423257
  423281:	mov    ecx,ecx
  423283:	jbe    0x4232c2
  423285:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42328f:	cmp    eax,ebp
  423291:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423297:	repnz sub BYTE PTR [ebx-0x2d],dl
  42329b:	xchg   DWORD PTR [esi+0x6d],esi
  42329e:	or     dh,BYTE PTR [esi+0x6d]
  4232a1:	int    0x76
  4232a3:	cmp    eax,0x1cd46d06
  4232a8:	int    0x76
  4232aa:	mov    ch,0xcd
  4232ac:	lea    esi,[ebp-0xfc43ac5]
  4232b2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232b8:	push   ebx
  4232b9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232bf:	xchg   ebp,eax
  4232c0:	int    0x76
  4232c2:	mov    ch,0xcd
  4232c4:	lea    esi,[ebp-0xfc43ac5]
  4232ca:	shl    edx,cl
  4232cc:	sub    bl,dl
  4232ce:	mov    ebp,0xcdd35392
  4232d3:	lea    ebp,[ebp+0x76cd7d33]
  4232d9:	ins    DWORD PTR es:[edi],dx
  4232da:	inc    ebx
  4232db:	shr    DWORD PTR [edi],cl
  4232dd:	pop    es
  4232de:	push   eax
  4232df:	inc    DWORD PTR [eax]
  4232e1:	add    al,al
  4232e3:	jmp    FWORD PTR [eax-0x326a8933]
  4232e9:	lea    ebp,[ebp+0x43]
  4232ec:	jge    0x4232c4
  4232ee:	xor    DWORD PTR [eax],eax
  4232f0:	(bad)  
  4232f1:	mov    bh,cl
  4232f3:	jbe    0x4232f2
  4232f5:	jo     0x4232b4
  4232f7:	stc    
  4232f8:	jl     0x42327a
  4232fa:	or     BYTE PTR [edx],0x76
  4232fd:	jne    0x4232eb
  4232ff:	sbb    cl,ch
  423301:	jbe    0x423378
  423303:	int    0x8d
  423305:	mov    ch,0xcd
  423307:	xchg   esi,eax
  423308:	mov    ch,0x3b
  42330a:	or     al,0x3b
  42330c:	cdq    
  42330d:	shr    ebx,cl
  42330f:	xchg   edx,eax
  423310:	shr    edx,cl
  423312:	sub    BYTE PTR [ebx+0x13],dl
  423315:	push   ecx
  423316:	mov    ch,cl
  423318:	jbe    0x423313
  42331a:	int    0x8d
  42331c:	stc    
  42331d:	cmp    eax,ebp
  42331f:	cmp    ecx,DWORD PTR [edi]
  423321:	shl    edx,cl
  423323:	sub    bl,dl
  423325:	mov    ebp,0xcdd35392
  42332a:	lea    esi,[ebp+0x43]
  42332d:	shr    DWORD PTR [edi],cl
  42332f:	add    eax,0x80805300
  423334:	int    0x76
  423336:	stc    
  423337:	int    0x8d
  423339:	stc    
  42333a:	cmp    eax,ebp
  42333c:	cmp    ecx,DWORD PTR [edi]
  42333e:	shl    edx,cl
  423340:	sub    bl,dl
  423342:	mov    ebp,0xcdd35392
  423347:	(bad)  
  423348:	std    
  423349:	inc    ebx
  42334a:	shr    DWORD PTR [edi],cl
  42334c:	add    eax,0x808053ea
  423351:	int    0x76
  423353:	stc    
  423354:	int    0x8d
  423356:	stc    
  423357:	cmp    eax,ebp
  423359:	cmp    ecx,DWORD PTR [edi]
  42335b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423361:	push   ebx
  423362:	shr    esp,cl
  423364:	adc    al,0xcd
  423366:	lea    esi,[ebp+0x3bb596cd]
  42336c:	or     al,0x3b
  42336e:	cdq    
  42336f:	shr    ebx,cl
  423371:	xchg   edx,eax
  423372:	shr    edx,cl
  423374:	sub    BYTE PTR [ebx+0x13],dl
  423377:	xchg   ebx,edx
  423379:	int    0x8d
  42337b:	std    
  42337c:	inc    ebx
  42337d:	rol    DWORD PTR [edx-0x2893219],cl
  423383:	or     dh,BYTE PTR [esi-0x53]
  423386:	int    0x76
  423388:	jne    0x423394
  42338a:	jbe    0x42335c
  42338c:	ret    
  42338d:	dec    ecx
  42338e:	and    DWORD PTR [esi+0x45e60a35],eax
  423394:	leave  
  423395:	jbe    0x423334
  423397:	inc    ecx
  423398:	and    DWORD PTR [esi+0x4576cd35],eax
  42339e:	int    0x8d
  4233a0:	inc    ebp
  4233a1:	cmp    eax,ebp
  4233a3:	cmp    ecx,DWORD PTR [edi]
  4233a5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233ab:	push   ebx
  4233ac:	ror    DWORD PTR [edx],cl
  4233ae:	jbe    0x423405
  4233b0:	int    0x76
  4233b2:	inc    ebp
  4233b3:	int    0x8d
  4233b5:	inc    ebp
  4233b6:	cmp    eax,ebp
  4233b8:	cmp    ecx,DWORD PTR [edi]
  4233ba:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233c0:	push   ebx
  4233c1:	ror    DWORD PTR [edx],cl
  4233c3:	jbe    0x42335a
  4233c5:	leave  
  4233c6:	jbe    0x423405
  4233c8:	dec    eax
  4233c9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233cf:	ret    0x8621
  4233d2:	xor    eax,0xcd4576cd
  4233d7:	lea    eax,[ebp+0x3b]
  4233da:	lds    edi,FWORD PTR [ebx]
  4233dc:	psrlq  mm6,mm2
  4233df:	sub    bl,dl
  4233e1:	mov    ebp,0xcdd35392
  4233e6:	lea    ebp,[ebp+0x52f7d43]
  4233ec:	push   ss
  4233ed:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233f3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233fa:	cmp    eax,0x3b5596cd
  4233ff:	jns    0x42343c
  423401:	or     al,0xd3
  423403:	lods   eax,DWORD PTR ds:[esi]
  423404:	sub    bl,dl
  423406:	jmp    0x42339a
  423408:	push   ebx
  423409:	jge    0x4233d8
  42340b:	jbe    0x4233ba
  42340d:	xor    edx,edx
  42340f:	cmp    ebx,edx
  423411:	clc    
  423412:	add    cl,BYTE PTR [edx]
  423414:	jbe    0x4233ab
  423416:	int    0x76
  423418:	sbb    eax,0x3b1d8dcd
  42341d:	lds    edi,FWORD PTR [ebx]
  42341f:	psrlq  mm6,mm2
  423422:	sub    bl,dl
  423424:	mov    ebp,0xcdd35392
  423429:	lea    edx,[ebp+0x16d87d43]
  42342f:	int    0x76
  423431:	sbb    eax,0x3b1d8dcd
  423436:	lds    edi,FWORD PTR [ebx]
  423438:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42343f:	push   ebx
  423440:	ror    DWORD PTR [edx],cl
  423442:	jbe    0x4233d9
  423444:	int    0x76
  423446:	cmp    eax,0x3b3d8dcd
  42344b:	lds    edi,FWORD PTR [ebx]
  42344d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423454:	push   ebx
  423455:	ror    ebp,cl
  423457:	lea    edx,[ebp+0xad3d12f]
  42345d:	jbe    0x4233f4
  42345f:	int    0x76
  423461:	inc    ebp
  423462:	int    0x8d
  423464:	inc    ebp
  423465:	cmp    eax,ebp
  423467:	cmp    ecx,DWORD PTR [edi]
  423469:	shl    edx,cl
  42346b:	sub    bl,dl
  42346d:	mov    ebp,0xcdd35392
  423472:	lea    edx,[ebp+0x52f7d43]
  423478:	pusha  
  423479:	xchg   edx,eax
  42347a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423481:	or     eax,0x875576cd
  423486:	jbe    0x423458
  423488:	or     ah,dh
  42348a:	xchg   ebp,eax
  42348b:	or     dh,BYTE PTR [esi+0x6d]
  42348e:	pop    ebp
  42348f:	inc    ecx
  423490:	and    DWORD PTR [esi+0x5d760a35],eax
  423496:	leave  
  423497:	jbe    0x4234ae
  423499:	cmp    DWORD PTR [ecx],esp
  42349b:	xchg   BYTE PTR ds:0xb23576c9,dh
  4234a1:	and    DWORD PTR [esi-0xe89f5cb],eax
  4234a7:	int    0x76
  4234a9:	xchg   ebp,eax
  4234aa:	int    0x8d
  4234ac:	xchg   ebp,eax
  4234ad:	cmp    eax,ebp
  4234af:	cmp    ecx,DWORD PTR [edi]
  4234b1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234b7:	push   ebx
  4234b8:	ror    DWORD PTR [edx],cl
  4234ba:	jbe    0x423539
  4234bc:	int    0x6d
  4234be:	jmp    0x4234c6
  4234c0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234ca:	add    BYTE PTR [ebx],cl
  4234cc:	and    DWORD PTR [esi-0x369232cb],eax
  4234d2:	push   es
  4234d3:	xchg   esp,eax
  4234d4:	add    BYTE PTR [eax],al
  4234d6:	add    bh,dh
  4234d8:	and    DWORD PTR [esi-0x329232cb],eax
  4234de:	ins    DWORD PTR es:[edi],dx
  4234df:	int    0x76
  4234e1:	icebp  
  4234e2:	int    0x8d
  4234e4:	icebp  
  4234e5:	cmp    eax,ebp
  4234e7:	cmp    ecx,DWORD PTR [edi]
  4234e9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234ef:	push   ebx
  4234f0:	ror    ebp,cl
  4234f2:	lea    edi,[ebp+0x2f]
  4234f5:	rcl    ebx,1
  4234f7:	int    0x8d
  4234f9:	ins    DWORD PTR es:[edi],dx
  4234fa:	retf   0x8884
  4234fd:	or     DWORD PTR [esi-0x57],esi
  423500:	int    0x6d
  423502:	int    0x76
  423504:	icebp  
  423505:	int    0x8d
  423507:	icebp  
  423508:	cmp    ecx,DWORD PTR [edi]
  42350a:	cmp    eax,ebp
  42350c:	shl    edx,cl
  42350e:	sub    bl,dl
  423510:	mov    ebp,0xcdd35392
  423515:	lea    edi,[ebp+0x2f]
  423518:	rcl    ebx,1
  42351a:	int    0x8d
  42351c:	adc    eax,0x3b1596cd
  423521:	or     al,0x3b
  423523:	cdq    
  423524:	shr    ebx,cl
  423526:	xchg   edx,eax
  423527:	shr    edx,cl
  423529:	sub    BYTE PTR [ebx+0x13],dl
  42352c:	xchg   ebx,edx
  42352e:	int    0x8d
  423530:	ins    DWORD PTR es:[edi],dx
  423531:	das    
  423532:	pop    ecx
  423533:	dec    esp
  423534:	mov    ch,cl
  423536:	push   es
  423537:	jo     0x423539
  423539:	add    BYTE PTR [eax],al
  42353b:	int    0x17
  42353d:	jo     0x42353f
  42353f:	add    BYTE PTR [eax],al
  423541:	cmp    eax,ebp
  423543:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423549:	jmp    0x2fd3:0x87d25328
  423550:	pop    ecx
  423551:	lea    ebp,[ecx-0x72f682c5]
  423557:	test   eax,0x76ca6dcd
  42355c:	test   eax,0xcdf18dcd
  423561:	xchg   esi,eax
  423562:	icebp  
  423563:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423566:	cdq    
  423567:	shr    edx,cl
  423569:	sub    bl,dl
  42356b:	jmp    0x4234ff
  42356d:	push   ebx
  42356e:	adc    ecx,ebp
  423570:	xchg   esi,eax
  423571:	jge    0x4235a2
  423573:	rcl    DWORD PTR [ebx],1
  423575:	int    0x96
  423577:	ins    DWORD PTR es:[edi],dx
  423578:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42357f:	icebp  
  423580:	int    0x8d
  423582:	icebp  
  423583:	cmp    eax,ebp
  423585:	cmp    ecx,DWORD PTR [edi]
  423587:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42358d:	push   ebx
  42358e:	ror    ebp,cl
  423590:	lea    edi,[ebp+0x2f]
  423593:	rcl    ebx,1
  423595:	int    0x8d
  423597:	ins    DWORD PTR es:[edi],dx
  423598:	retf   0x8884
  42359b:	or     DWORD PTR [esi-0x57],esi
  42359e:	int    0x6d
  4235a0:	int    0x76
  4235a2:	icebp  
  4235a3:	int    0x8d
  4235a5:	icebp  
  4235a6:	cmp    eax,ebp
  4235a8:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4235ae:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235b2:	int    0x8d
  4235b4:	jge    0x4235e5
  4235b6:	rcl    ebx,1
  4235b8:	int    0x8d
  4235ba:	pop    ebp
  4235bb:	int    0x96
  4235bd:	pop    ebp
  4235be:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235c1:	cdq    
  4235c2:	shr    ebx,cl
  4235c4:	xchg   edx,eax
  4235c5:	shr    edx,cl
  4235c7:	sub    BYTE PTR [ebx+0x13],dl
  4235ca:	xchg   ebx,edx
  4235cc:	int    0x8d
  4235ce:	ins    DWORD PTR es:[edi],dx
  4235cf:	das    
  4235d0:	pop    ecx
  4235d1:	dec    esp
  4235d2:	mov    ch,cl
  4235d4:	push   es
  4235d5:	xchg   esp,eax
  4235d6:	add    BYTE PTR [eax],al
  4235d8:	add    ch,cl
  4235da:	pop    ss
  4235db:	xchg   esp,eax
  4235dc:	add    BYTE PTR [eax],al
  4235de:	add    BYTE PTR [ebx],bh
  4235e0:	lds    edi,FWORD PTR [ebx]
  4235e2:	cdq    
  4235e3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235e9:	push   ebx
  4235ea:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235f0:	test   eax,0x8d097d3b
  4235f5:	test   eax,0x76ca6dcd
  4235fa:	test   eax,0xcdf18dcd
  4235ff:	xchg   esi,eax
  423600:	icebp  
  423601:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423604:	cdq    
  423605:	shr    edx,cl
  423607:	sub    bl,dl
  423609:	jmp    0x42359d
  42360b:	push   ebx
  42360c:	adc    ecx,ebp
  42360e:	xchg   esi,eax
  42360f:	jge    0x423640
  423611:	rcl    DWORD PTR [ebx],1
  423613:	int    0x96
  423615:	ins    DWORD PTR es:[edi],dx
  423616:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42361d:	xor    eax,0x3b358dcd
  423622:	(bad)  
  423624:	(bad)
  423627:	sub    bl,dl
  423629:	mov    ebp,0xcdd35392
  42362e:	lea    ebx,[ebp-0x33]
  423631:	xchg   esi,eax
  423632:	pop    ebp
  423633:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423636:	cdq    
  423637:	shr    ebx,cl
  423639:	xchg   edx,eax
  42363a:	shr    edx,cl
  42363c:	sub    BYTE PTR [ebx+0x13],dl
  42363f:	das    
  423640:	rcl    ebx,1
  423642:	xchg   DWORD PTR [esi+0x7d],esi
  423645:	or     dh,BYTE PTR [esi+0x7d]
  423648:	int    0x76
  42364a:	jge    0x423619
  42364c:	lea    ecx,ds:0xb2f7d43
  423652:	(bad)  
  423653:	inc    DWORD PTR [eax]
  423655:	add    ch,cl
  423657:	jbe    0x4236b6
  423659:	int    0x8d
  42365b:	pop    ebp
  42365c:	cmp    ecx,DWORD PTR [edi]
  42365e:	shl    edx,cl
  423660:	sub    BYTE PTR [ebx],bh
  423662:	(bad)
  423665:	xchg   edx,eax
  423666:	push   ebx
  423667:	ror    ebp,cl
  423669:	lea    ecx,ds:0xcdd3d12f
  42366f:	lea    edx,[ebp-0x142cf3c5]
  423675:	xchg   edx,eax
  423676:	push   ebx
  423677:	ror    ebp,cl
  423679:	lea    edx,[ebp-0xd2cf0c5]
  42367f:	sub    BYTE PTR [ebx-0x2d],dl
  423682:	or     dh,BYTE PTR [esi+0x35]
  423685:	int    0x76
  423687:	popf   
  423688:	int    0x8d
  42368a:	popf   
  42368b:	cmp    ecx,DWORD PTR [edi]
  42368d:	shl    edx,cl
  42368f:	sub    BYTE PTR [ebx],bh
  423691:	(bad)
  423694:	xchg   edx,eax
  423695:	push   ebx
  423696:	ror    ebp,cl
  423698:	lea    ebx,[ebp+0x3b9d96cd]
  42369e:	or     al,0xd3
  4236a0:	jmp    0x423634
  4236a2:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4236a8:	adc    eax,DWORD PTR [edi+0x7d87358d]
  4236ae:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236b4:	in     al,dx
  4236b5:	sbb    al,0xcd
  4236b7:	jbe    0x423656
  4236b9:	int    0x8d
  4236bb:	popf   
  4236bc:	cmp    eax,ebp
  4236be:	cmp    ecx,DWORD PTR [edi]
  4236c0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236c6:	push   ebx
  4236c7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236cd:	push   ebp
  4236ce:	int    0x76
  4236d0:	popf   
  4236d1:	int    0x8d
  4236d3:	popf   
  4236d4:	cmp    eax,ebp
  4236d6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236dc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236e0:	int    0x8d
  4236e2:	lods   eax,DWORD PTR ds:[esi]
  4236e3:	xor    edi,DWORD PTR [ebp-0x33]
  4236e6:	jbe    0x423685
  4236e8:	int    0x96
  4236ea:	popf   
  4236eb:	cmp    eax,ebp
  4236ed:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236f3:	mov    ebp,0xcdd25392
  4236f8:	xchg   esi,eax
  4236f9:	push   ebp
  4236fa:	das    
  4236fb:	rcl    edx,1
  4236fd:	inc    ebx
  4236fe:	shr    DWORD PTR [edi],cl
  423700:	pop    es
  423701:	adc    ebp,edi
  423703:	add    BYTE PTR [eax],al
  423705:	int    0x76
  423707:	stc    
  423708:	int    0x76
  42370a:	stc    
  42370b:	int    0x76
  42370d:	std    
  42370e:	or     dh,BYTE PTR [esi+0x35]
  423711:	int    0x76
  423713:	mov    ch,cl
  423715:	lea    esp,ds:0x3b2596cd
  42371b:	or     al,0xd3
  42371d:	jmp    0x4236b1
  42371f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423725:	add    BYTE PTR [eax+0x5328ead3],0x13
  42372c:	jno    0x4236fb
  42372e:	lea    esp,[ebp-0x33]
  423731:	xchg   esi,eax
  423732:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423736:	cdq    
  423737:	shr    ebx,cl
  423739:	xchg   edx,eax
  42373a:	shr    edx,cl
  42373c:	sub    BYTE PTR [ebx+0x13],dl
  42373f:	jno    0x42370e
  423741:	(bad)  
  423742:	stc    
  423743:	int    0x96
  423745:	stc    
  423746:	add    dh,dl
  423748:	xor    eax,0x993b0c3b
  42374d:	shr    ebx,cl
  42374f:	xchg   edx,eax
  423750:	shr    edx,cl
  423752:	sub    BYTE PTR [ebx+0x13],dl
  423755:	jno    0x423757
  423757:	jo     0x42376d
  423759:	int    0x8d
  42375b:	stc    
  42375c:	int    0x96
  42375e:	stc    
  42375f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423762:	cdq    
  423763:	shr    ebx,cl
  423765:	xchg   edx,eax
  423766:	shr    edx,cl
  423768:	sub    BYTE PTR [ebx+0x13],dl
  42376b:	or     dh,BYTE PTR [esi+0x65]
  42376e:	inc    ebx
  42376f:	jge    0x4237a0
  423771:	add    eax,0x808080ab
  423776:	int    0x76
  423778:	stc    
  423779:	in     al,dx
  42377a:	(bad)  
  42377b:	int    0x96
  42377d:	or     dh,BYTE PTR gs:[esi-0x53]
  423781:	push   ecx
  423782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423783:	lods   eax,DWORD PTR ds:[esi]
  423784:	int    0x8d
  423786:	lods   eax,DWORD PTR ds:[esi]
  423787:	shr    ebx,cl
  423789:	xchg   edx,eax
  42378a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42378d:	lods   eax,DWORD PTR ds:[esi]
  42378e:	sub    BYTE PTR [ebx-0x2d],dl
  423791:	int    0x8d
  423793:	jne    0x42375f
  423795:	dec    esp
  423796:	or     DWORD PTR [ecx],0x8dcd304c
  42379c:	mov    ch,0xcd
  42379e:	lea    esi,[ebp+0x3bb596cd]
  4237a4:	or     al,0x3b
  4237a6:	cdq    
  4237a7:	shr    edx,cl
  4237a9:	sub    bl,dl
  4237ab:	jmp    0x42373f
  4237ad:	push   ebx
  4237ae:	adc    ecx,ebp
  4237b0:	xchg   esi,eax
  4237b1:	mov    ch,0x87
  4237b3:	jge    0x423782
  4237b5:	jbe    0x423764
  4237b7:	cmp    edx,ebp
  4237b9:	add    al,0xad
  4237bb:	std    
  4237bc:	add    al,0xea
  4237be:	std    
  4237bf:	shr    ebx,cl
  4237c1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237c7:	leave  
  4237c8:	int    0x8d
  4237ca:	std    
  4237cb:	int    0x96
  4237cd:	std    
  4237ce:	shr    edx,cl
  4237d0:	xchg   edx,eax
  4237d1:	shr    ebx,cl
  4237d3:	sub    BYTE PTR [ebx-0x1d],dl
  4237d6:	cmp    ebx,ecx
  4237d8:	inc    ebx
  4237d9:	rcl    dh,cl
  4237db:	mov    ds:0xcd8876cd,eax
  4237e0:	lea    ebp,ds:0xcd2d96cd
  4237e6:	add    DWORD PTR [ecx],edx
  4237e8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237f2:	shr    edx,cl
  4237f4:	sub    BYTE PTR [ebx+0x13],dl
  4237f7:	jno    0x4237c6
  4237f9:	(bad)  
  4237fa:	stc    
  4237fb:	int    0x96
  4237fd:	stc    
  4237fe:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423801:	cdq    
  423802:	shr    ebx,cl
  423804:	xchg   edx,eax
  423805:	shr    edx,cl
  423807:	sub    BYTE PTR [ebx+0x13],dl
  42380a:	jno    0x42380c
  42380c:	(bad)  
  42380d:	jne    0x42380f
  42380f:	jo     0x42382d
  423811:	int    0x76
  423813:	or     dh,BYTE PTR gs:[esi+0x75]
  423817:	int    0x76
  423819:	xor    eax,0xcdfd760a
  42381e:	jbe    0x42381d
  423820:	cmp    ecx,ebx
  423822:	add    al,0xbd
  423824:	test   ah,dl
  423826:	xor    ecx,ebp
  423828:	jbe    0x42389f
  42382a:	int    0x14
  42382c:	mov    ch,cl
  42382e:	jbe    0x4238a5
  423830:	int    0x84
  423832:	mov    BYTE PTR [ebx],bh
  423834:	jns    0x423871
  423836:	aad    0xd3
  423838:	lods   eax,DWORD PTR ds:[esi]
  423839:	sub    bl,dl
  42383b:	repz xchg edx,eax
  42383d:	push   ebx
  42383e:	ror    ch,cl
  423840:	xchg   esi,eax
  423841:	jne    0x42384d
  423843:	test   BYTE PTR [edx-0x33],cl
  423846:	jbe    0x423845
  423848:	add    al,0xd3
  42384a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423851:	xlat   BYTE PTR ds:[ebx]
  423852:	int    0x76
  423854:	std    
  423855:	cmp    ecx,ebx
  423857:	add    al,0xbd
  423859:	test   ah,dl
  42385b:	xor    ecx,ebp
  42385d:	jbe    0x4238d4
  42385f:	int    0x14
  423861:	mov    ch,cl
  423863:	jbe    0x4238da
  423865:	int    0x84
  423867:	mov    BYTE PTR [ebx],bh
  423869:	jns    0x4238a6
  42386b:	aad    0xd3
  42386d:	lods   eax,DWORD PTR ds:[esi]
  42386e:	sub    bl,dl
  423870:	repz xchg edx,eax
  423872:	push   ebx
  423873:	ror    ch,cl
  423875:	xchg   esi,eax
  423876:	jne    0x423882
  423878:	test   BYTE PTR [edx-0x33],cl
  42387b:	jbe    0x42387a
  42387d:	add    al,0xd3
  42387f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423886:	xlat   BYTE PTR ds:[ebx]
  423887:	int    0x76
  423889:	jne    0x423895
  42388b:	jbe    0x42389a
  42388d:	int    0x76
  42388f:	mov    ch,0xcd
  423891:	lea    esi,[ebp+0xf3bc53b]
  423897:	shl    edx,cl
  423899:	sub    bl,dl
  42389b:	mov    ebp,0xcdd35392
  4238a0:	(bad)  
  4238a1:	stc    
  4238a2:	or     dh,BYTE PTR [esi+0x25]
  4238a5:	leave  
  4238a6:	jbe    0x423874
  4238a8:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  4238af:	imul   edx,ebp,0x8d0a0c69
  4238b5:	gs adc bh,dl
  4238b8:	into   
  4238b9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238bf:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238c6:	sar    DWORD PTR [ebx],cl
  4238c8:	lds    ecx,FWORD PTR [edx]
  4238ca:	jbe    0x423879
  4238cc:	rol    esi,cl
  4238ce:	lods   eax,DWORD PTR ds:[esi]
  4238cf:	xchg   edx,eax
  4238d0:	or     dh,BYTE PTR [esi-0x30]
  4238d3:	int    0xd3
  4238d5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238d8:	lods   eax,DWORD PTR ds:[esi]
  4238d9:	sub    BYTE PTR [ebx+0x76],dl
  4238dc:	lods   eax,DWORD PTR ds:[esi]
  4238dd:	retf   0x858c
  4238e0:	int3   
  4238e1:	das    
  4238e2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238ed:	retf   
  4238ee:	inc    ebx
  4238ef:	rcl    esi,cl
  4238f1:	jle    0x4238c0
  4238f3:	jbe    0x4238aa
  4238f5:	int    0x8d
  4238f7:	mov    ch,0xcd
  4238f9:	jbe    0x4238b0
  4238fb:	int    0x96
  4238fd:	mov    ch,0x3b
  4238ff:	jns    0x42393c
  423901:	or     al,0xd3
  423903:	lods   eax,DWORD PTR ds:[esi]
  423904:	sub    bl,dl
  423906:	jmp    0x42389a
  423908:	push   ebx
  423909:	jge    0x4238d8
  42390b:	jbe    0x423972
  42390d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423910:	lods   eax,DWORD PTR ds:[esi]
  423911:	sub    BYTE PTR [ebx+0x76],dl
  423914:	lods   eax,DWORD PTR ds:[esi]
  423915:	cmp    edx,ebp
  423917:	xchg   DWORD PTR [ebp-0x33],edi
  42391a:	jbe    0x4238ec
  42391c:	add    al,0xea
  42391e:	std    
  42391f:	add    al,0xad
  423921:	std    
  423922:	shr    ebx,cl
  423924:	sub    BYTE PTR [edi+0x3b1353f1],al
  42392a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423931:	and    DWORD PTR [esi-0x323329cb],eax
  423937:	jbe    0x42395e
  423939:	in     al,dx
  42393a:	and    cl,ch
  42393c:	jbe    0x423937
  42393e:	int    0x8d
  423940:	stc    
  423941:	cmp    eax,ebp
  423943:	cmp    ecx,DWORD PTR [edi]
  423945:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42394b:	push   ebx
  42394c:	ror    ebp,cl
  42394e:	(bad)  
  42394f:	stc    
  423950:	int    0x96
  423952:	stc    
  423953:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423956:	cdq    
  423957:	shr    ebx,cl
  423959:	xchg   edx,eax
  42395a:	shr    edx,cl
  42395c:	sub    BYTE PTR [ebx+0x13],dl
  42395f:	inc    ebx
  423960:	jge    0x423991
  423962:	add    eax,0x80809223
  423967:	int    0x76
  423969:	or     eax,0xa886ccd
  42396e:	out    0xb5,al
  423970:	leave  
  423971:	jbe    0x423998
  423973:	mov    dl,0x21
  423975:	xchg   BYTE PTR ds:0x393576c9,dh
  42397b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423981:	dec    ecx
  423982:	mov    al,ds:0x76c93586
  423987:	lods   eax,DWORD PTR ds:[esi]
  423988:	imul   esp,DWORD PTR [ecx],0x76c93586
  42398e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423992:	xor    eax,0xcd3d760a
  423997:	jbe    0x423921
  423999:	int    0x8d
  42399b:	lods   eax,DWORD PTR ds:[esi]
  42399c:	int    0x96
  42399e:	lods   eax,DWORD PTR ds:[esi]
  42399f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  4239a2:	jmp    0x423936
  4239a4:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4239aa:	adc    esi,DWORD PTR [ecx-0x33]
  4239ad:	lea    edx,[ebp+0x3b9596cd]
  4239b3:	or     al,0xd3
  4239b5:	jmp    0x423949
  4239b7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239bd:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239c4:	jno    0x423993
  4239c6:	lea    esp,[ebp-0x33]
  4239c9:	xchg   esi,eax
  4239ca:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239ce:	cdq    
  4239cf:	shr    ebx,cl
  4239d1:	xchg   edx,eax
  4239d2:	shr    edx,cl
  4239d4:	sub    BYTE PTR [ebx+0x13],dl
  4239d7:	jno    0x4239a6
  4239d9:	lea    esi,[ebp+0x3bb596cd]
  4239df:	or     al,0x3b
  4239e1:	cdq    
  4239e2:	shr    ebx,cl
  4239e4:	xchg   edx,eax
  4239e5:	shr    edx,cl
  4239e7:	sub    BYTE PTR [ebx+0x13],dl
  4239ea:	jno    0x4239ec
  4239ec:	jo     0x423a02
  4239ee:	or     dh,BYTE PTR [esi+0x65]
  4239f1:	int    0x76
  4239f3:	mov    ch,cl
  4239f5:	lea    ebp,[ebp+0x3bad96cd]
  4239fb:	or     al,0xd3
  4239fd:	jmp    0x423991
  4239ff:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a05:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a0c:	jno    0x4239db
  423a0e:	lea    edx,[ebp+0x3b9596cd]
  423a14:	or     al,0x3b
  423a16:	cdq    
  423a17:	shr    ebx,cl
  423a19:	xchg   edx,eax
  423a1a:	shr    edx,cl
  423a1c:	sub    BYTE PTR [ebx+0x13],dl
  423a1f:	jno    0x4239ee
  423a21:	lea    esi,[ebp+0xb596cd]
  423a27:	(bad)  
  423a28:	cmp    eax,0x993b0c3b
  423a2d:	shr    ebx,cl
  423a2f:	xchg   edx,eax
  423a30:	shr    edx,cl
  423a32:	sub    BYTE PTR [ebx+0x13],dl
  423a35:	jno    0x423a37
  423a37:	jo     0x423a4d
  423a39:	int    0x8d
  423a3b:	mov    ch,0xa
  423a3d:	jbe    0x4239ec
  423a3f:	int    0x76
  423a41:	mov    ch,0x3b
  423a43:	or     al,0x3b
  423a45:	jns    0x423a1a
  423a47:	jmp    0x4239db
  423a49:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a4f:	jbe    0x423ab6
  423a51:	inc    ebx
  423a52:	jge    0x423a83
  423a54:	add    eax,0x8080853c
  423a59:	int    0x8d
  423a5b:	mov    ch,0xcd
  423a5d:	xchg   esi,eax
  423a5e:	mov    ch,0x3b
  423a60:	or     al,0x3b
  423a62:	cdq    
  423a63:	shr    ebx,cl
  423a65:	xchg   edx,eax
  423a66:	shr    edx,cl
  423a68:	sub    BYTE PTR [ebx+0x13],dl
  423a6b:	inc    ebx
  423a6c:	lea    ebp,[ebp-0x7ab2fad1]
  423a72:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a79:	and    eax,0x192ebd3
  423a7e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a84:	mov    ch,0xcd
  423a86:	lea    esi,[ebp+0x192ebd3]
  423a8c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a92:	lea    esi,ds:0xd3358dcd
  423a98:	jmp    0x423a2c
  423a9a:	add    DWORD PTR [edx],eax
  423a9c:	scas   eax,DWORD PTR es:[edi]
  423a9d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423aa1:	aaa    
  423aa2:	sbb    al,0x0
  423aa4:	add    BYTE PTR [eax],al
  423aa6:	add    BYTE PTR [edi+esi*1],0x24
  423aaa:	add    BYTE PTR [eax],al
  423aac:	add    BYTE PTR [eax+0x24cfcf],al
  423ab2:	add    BYTE PTR [eax],al
  423ab4:	jno    0x423ab6
  423ab6:	(bad)  
  423ab7:	cmp    eax,0x1ccfcf
  423abc:	add    BYTE PTR [eax],al
  423abe:	add    dh,dl
  423ac0:	lods   eax,DWORD PTR ds:[esi]
  423ac1:	jno    0x423a90
  423ac3:	lea    ecx,ds:0xcd4c9100
  423ac9:	lea    esi,[ebp+0x4]
  423acc:	shl    DWORD PTR [eax],cl
  423ace:	jno    0x423b40
  423ad0:	mov    ebp,0xefef
  423ad5:	or     dh,BYTE PTR [esi-0x30]
  423ad8:	int    0x76
  423ada:	mov    ch,cl
  423adc:	lea    ebp,ds:0xcd2d96cd
  423ae2:	add    DWORD PTR [ecx],edx
  423ae4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423aee:	shr    edx,cl
  423af0:	sub    BYTE PTR [ebx+0x13],dl
  423af3:	jno    0x423ac2
  423af5:	lea    esi,[ebp+0x3bb596cd]
  423afb:	or     al,0x3b
  423afd:	cdq    
  423afe:	shr    ebx,cl
  423b00:	xchg   edx,eax
  423b01:	shr    edx,cl
  423b03:	sub    BYTE PTR [ebx+0x13],dl
  423b06:	jno    0x423b08
  423b08:	(bad)  
  423b09:	add    BYTE PTR gs:[eax+0x1c],dh
  423b0d:	int    0x76
  423b0f:	rcl    bl,1
  423b11:	ins    DWORD PTR es:[edi],dx
  423b12:	xchg   edx,eax
  423b13:	cmp    ecx,ecx
  423b15:	inc    ebx
  423b16:	leave  
  423b17:	int    0x76
  423b19:	mov    ch,cl
  423b1b:	lea    ebp,ds:0x811101cd
  423b21:	add    BYTE PTR [eax-0x29d26933],0x54
  423b28:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b2b:	cdq    
  423b2c:	shr    ebx,cl
  423b2e:	xchg   edx,eax
  423b2f:	shr    edx,cl
  423b31:	sub    BYTE PTR [ebx+0x13],dl
  423b34:	jno    0x423b03
  423b36:	lea    esi,[ebp+0x3bb596cd]
  423b3c:	or     al,0x3b
  423b3e:	cdq    
  423b3f:	shr    ebx,cl
  423b41:	xchg   edx,eax
  423b42:	shr    edx,cl
  423b44:	sub    BYTE PTR [ebx+0x13],dl
  423b47:	jno    0x423b49
  423b49:	(bad)  
  423b4a:	jne    0x423b4c
  423b4c:	jo     0x423b6a
  423b4e:	int    0x76
  423b50:	lods   eax,DWORD PTR ds:[esi]
  423b51:	or     dh,BYTE PTR [esi+0x75]
  423b54:	int    0x76
  423b56:	cmp    eax,0xecfd760a
  423b5b:	cmp    BYTE PTR [ebx],bh
  423b5d:	or     al,0x3b
  423b5f:	cdq    
  423b60:	shr    ebx,cl
  423b62:	xchg   edx,eax
  423b63:	shr    edx,cl
  423b65:	sub    BYTE PTR [ebx+0x13],dl
  423b68:	jno    0x423b37
  423b6a:	lea    esi,[ebp+0x3bb596cd]
  423b70:	or     al,0x3b
  423b72:	cdq    
  423b73:	shr    ebx,cl
  423b75:	xchg   edx,eax
  423b76:	shr    edx,cl
  423b78:	sub    BYTE PTR [ebx+0x13],dl
  423b7b:	jno    0x423b7d
  423b7d:	(bad)  
  423b7e:	lods   eax,DWORD PTR ds:[esi]
  423b7f:	add    BYTE PTR [eax+0x1c],dh
  423b82:	int    0x76
  423b84:	std    
  423b85:	or     dh,BYTE PTR [esi+0x1d]
  423b88:	int    0x76
  423b8a:	jne    0x423b96
  423b8c:	out    0x55,al
  423b8e:	or     dh,BYTE PTR [esi-0x30]
  423b91:	leave  
  423b92:	jbe    0x423b31
  423b94:	inc    ecx
  423b95:	and    DWORD PTR [esi+0x5576cd35],eax
  423b9b:	int    0x8d
  423b9d:	push   ebp
  423b9e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ba1:	or     al,0xd3
  423ba3:	lods   eax,DWORD PTR ds:[esi]
  423ba4:	sub    bl,dl
  423ba6:	jmp    0x423b3a
  423ba8:	push   ebx
  423ba9:	ror    DWORD PTR [edx],cl
  423bab:	jbe    0x423bf2
  423bad:	int    0x76
  423baf:	push   ebp
  423bb0:	int    0x8d
  423bb2:	push   ebp
  423bb3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bb6:	or     al,0xd3
  423bb8:	lods   eax,DWORD PTR ds:[esi]
  423bb9:	sub    bl,dl
  423bbb:	jmp    0x423b4f
  423bbd:	push   ebx
  423bbe:	ror    DWORD PTR [edx],cl
  423bc0:	jbe    0x423bcf
  423bc2:	leave  
  423bc3:	jbe    0x423b5a
  423bc5:	dec    eax
  423bc6:	and    DWORD PTR [esi-0x528936cb],eax
  423bcc:	ret    0x8621
  423bcf:	xor    eax,0xcd5576cd
  423bd4:	lea    edx,[ebp+0x3b]
  423bd7:	jns    0x423c14
  423bd9:	or     al,0xd3
  423bdb:	jmp    0x423b6f
  423bdd:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423be3:	lea    ebx,ds:0x52f7d43
  423be9:	push   ss
  423bea:	xchg   DWORD PTR [eax-0x6d241480],eax
  423bf0:	add    BYTE PTR [eax-0x326a7233],0x76
  423bf7:	xchg   ebp,eax
  423bf8:	int    0x96
  423bfa:	inc    ebp
  423bfb:	cmp    eax,ebp
  423bfd:	cmp    ecx,DWORD PTR [edi]
  423bff:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423c05:	push   ebx
  423c06:	jge    0x423bd5
  423c08:	jbe    0x423c27
  423c0a:	xor    edx,edx
  423c0c:	cmp    ebx,edx
  423c0e:	clc    
  423c0f:	add    cl,BYTE PTR [edx]
  423c11:	jbe    0x423c20
  423c13:	int    0x76
  423c15:	lods   eax,DWORD PTR ds:[esi]
  423c16:	int    0x8d
  423c18:	lods   eax,DWORD PTR ds:[esi]
  423c19:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c1c:	or     al,0xd3
  423c1e:	jmp    0x423bb2
  423c20:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c26:	lea    ecx,ds:0x16d87d43
  423c2c:	int    0x76
  423c2e:	lods   eax,DWORD PTR ds:[esi]
  423c2f:	int    0x8d
  423c31:	lods   eax,DWORD PTR ds:[esi]
  423c32:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c35:	or     al,0xd3
  423c37:	lods   eax,DWORD PTR ds:[esi]
  423c38:	sub    bl,dl
  423c3a:	jmp    0x423bce
  423c3c:	push   ebx
  423c3d:	ror    DWORD PTR [edx],cl
  423c3f:	jbe    0x423c4e
  423c41:	int    0x76
  423c43:	xchg   ebp,eax
  423c44:	int    0x8d
  423c46:	xchg   ebp,eax
  423c47:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c4a:	or     al,0xd3
  423c4c:	lods   eax,DWORD PTR ds:[esi]
  423c4d:	sub    bl,dl
  423c4f:	jmp    0x423be3
  423c51:	push   ebx
  423c52:	ror    ebp,cl
  423c54:	lea    ecx,ds:0xad3d12f
  423c5a:	jbe    0x423c69
  423c5c:	int    0x76
  423c5e:	push   ebp
  423c5f:	int    0x8d
  423c61:	push   ebp
  423c62:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c65:	or     al,0xd3
  423c67:	jmp    0x423bfb
  423c69:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c6f:	lea    ecx,ds:0x52f7d43
  423c75:	pusha  
  423c76:	xchg   edx,eax
  423c77:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c7e:	or     eax,0x874576cd
  423c83:	jbe    0x423c55
  423c85:	or     ah,dh
  423c87:	cmp    eax,0x5d5d760a
  423c8c:	inc    ecx
  423c8d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c93:	leave  
  423c94:	jbe    0x423cfb
  423c96:	cmp    DWORD PTR [ecx],esp
  423c98:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c9e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423ca4:	int    0x76
  423ca6:	cmp    eax,0x3b3d8dcd
  423cab:	jns    0x423ce8
  423cad:	or     al,0xd3
  423caf:	lods   eax,DWORD PTR ds:[esi]
  423cb0:	sub    bl,dl
  423cb2:	jmp    0x423c46
  423cb4:	push   ebx
  423cb5:	ror    DWORD PTR [edx],cl
  423cb7:	jbe    0x423d36
  423cb9:	int    0x6d
  423cbb:	jmp    0x423cc3
  423cbd:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cc7:	add    BYTE PTR [ebx],cl
  423cc9:	and    DWORD PTR [esi-0x369232cb],eax
  423ccf:	push   es
  423cd0:	jl     0x423cd2
  423cd2:	add    BYTE PTR [eax],al
  423cd4:	mul    DWORD PTR [ecx]
  423cd6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423cdc:	int    0x76
  423cde:	icebp  
  423cdf:	int    0x8d
  423ce1:	icebp  
  423ce2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ce5:	or     al,0xd3
  423ce7:	lods   eax,DWORD PTR ds:[esi]
  423ce8:	sub    bl,dl
  423cea:	jmp    0x423c7e
  423cec:	push   ebx
  423ced:	ror    ebp,cl
  423cef:	lea    edi,[ebp+0x2f]
  423cf2:	rcl    ebx,1
  423cf4:	int    0x8d
  423cf6:	pop    ebp
  423cf7:	retf   0x8884
  423cfa:	or     DWORD PTR [esi-0x1f],esi
  423cfd:	int    0x6d
  423cff:	int    0x76
  423d01:	icebp  
  423d02:	int    0x8d
  423d04:	icebp  
  423d05:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423d08:	jns    0x423cdd
  423d0a:	jmp    0x423c9e
  423d0c:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d12:	lea    edi,[ebp+0x2f]
  423d15:	rcl    ebx,1
  423d17:	int    0x8d
  423d19:	gs int 0x96
  423d1c:	cmp    ecx,DWORD PTR gs:[edi]
  423d1f:	cmp    edx,ebp
  423d21:	shl    edx,cl
  423d23:	sub    bl,dl
  423d25:	repz xchg edx,eax
  423d27:	push   ebx
  423d28:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d2e:	das    
  423d2f:	pop    ecx
  423d30:	dec    esp
  423d31:	mov    ch,cl
  423d33:	push   es
  423d34:	mov    WORD PTR [eax],es
  423d36:	add    BYTE PTR [eax],al
  423d38:	int    0x17
  423d3a:	mov    WORD PTR [eax],es
  423d3c:	add    BYTE PTR [eax],al
  423d3e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d41:	aad    0xd3
  423d43:	lods   eax,DWORD PTR ds:[esi]
  423d44:	sub    bl,dl
  423d46:	repz xchg edx,eax
  423d48:	push   ebx
  423d49:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d4f:	loope  0x423d8c
  423d51:	jge    0x423d5c
  423d53:	(bad)  
  423d54:	loope  0x423d23
  423d56:	ins    DWORD PTR es:[edi],dx
  423d57:	retf   0xe176
  423d5a:	int    0x8d
  423d5c:	icebp  
  423d5d:	int    0x96
  423d5f:	icebp  
  423d60:	cmp    ecx,DWORD PTR [edi]
  423d62:	cmp    edx,ebp
  423d64:	shl    ebx,cl
  423d66:	xchg   edx,eax
  423d67:	shl    edx,cl
  423d69:	sub    BYTE PTR [ebx+0x13],dl
  423d6c:	int    0x96
  423d6e:	jge    0x423d9f
  423d70:	rcl    DWORD PTR [ebx],1
  423d72:	int    0x96
  423d74:	pop    ebp
  423d75:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d7c:	icebp  
  423d7d:	int    0x8d
  423d7f:	icebp  
  423d80:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d83:	or     al,0xd3
  423d85:	lods   eax,DWORD PTR ds:[esi]
  423d86:	sub    bl,dl
  423d88:	jmp    0x423d1c
  423d8a:	push   ebx
  423d8b:	ror    ebp,cl
  423d8d:	lea    edi,[ebp+0x2f]
  423d90:	rcl    ebx,1
  423d92:	int    0x8d
  423d94:	pop    ebp
  423d95:	retf   0x8884
  423d98:	or     DWORD PTR [esi-0x1f],esi
  423d9b:	int    0x6d
  423d9d:	int    0x76
  423d9f:	icebp  
  423da0:	int    0x8d
  423da2:	icebp  
  423da3:	cmp    edi,DWORD PTR [ecx-0x2d]
  423da6:	lods   eax,DWORD PTR ds:[esi]
  423da7:	sub    BYTE PTR [ebx],bh
  423da9:	or     al,0xd3
  423dab:	jmp    0x423d3f
  423dad:	push   ebx
  423dae:	ror    ebp,cl
  423db0:	lea    edi,[ebp+0x2f]
  423db3:	rcl    ebx,1
  423db5:	int    0x8d
  423db7:	ins    DWORD PTR es:[edi],dx
  423db8:	int    0x96
  423dba:	ins    DWORD PTR es:[edi],dx
  423dbb:	cmp    ecx,DWORD PTR [edi]
  423dbd:	cmp    edx,ebp
  423dbf:	shl    edx,cl
  423dc1:	sub    bl,dl
  423dc3:	repz xchg edx,eax
  423dc5:	push   ebx
  423dc6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dcc:	das    
  423dcd:	pop    ecx
  423dce:	dec    esp
  423dcf:	mov    ch,cl
  423dd1:	push   es
  423dd2:	jl     0x423dd4
  423dd4:	add    BYTE PTR [eax],al
  423dd6:	int    0x17
  423dd8:	jl     0x423dda
  423dda:	add    BYTE PTR [eax],al
  423ddc:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ddf:	aad    0xd3
  423de1:	lods   eax,DWORD PTR ds:[esi]
  423de2:	sub    bl,dl
  423de4:	repz xchg edx,eax
  423de6:	push   ebx
  423de7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423ded:	loope  0x423e2a
  423def:	jge    0x423dfa
  423df1:	(bad)  
  423df2:	loope  0x423dc1
  423df4:	ins    DWORD PTR es:[edi],dx
  423df5:	retf   0xe176
  423df8:	int    0x8d
  423dfa:	icebp  
  423dfb:	int    0x96
  423dfd:	icebp  
  423dfe:	cmp    ecx,DWORD PTR [edi]
  423e00:	cmp    edx,ebp
  423e02:	shl    ebx,cl
  423e04:	xchg   edx,eax
  423e05:	shl    edx,cl
  423e07:	sub    BYTE PTR [ebx+0x13],dl
  423e0a:	int    0x96
  423e0c:	jge    0x423e3d
  423e0e:	rcl    DWORD PTR [ebx],1
  423e10:	int    0x96
  423e12:	pop    ebp
  423e13:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e1a:	and    eax,0x3b258dcd
  423e1f:	or     al,0x3b
  423e21:	jns    0x423df6
  423e23:	jmp    0x423db7
  423e25:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e2b:	lea    ebp,[ebp-0x33]
  423e2e:	xchg   esi,eax
  423e2f:	ins    DWORD PTR es:[edi],dx
  423e30:	cmp    ecx,DWORD PTR [edi]
  423e32:	cmp    edx,ebp
  423e34:	shl    edx,cl
  423e36:	sub    bl,dl
  423e38:	repz xchg edx,eax
  423e3a:	push   ebx
  423e3b:	adc    ebp,DWORD PTR [edi]
  423e3d:	rcl    ebx,1
  423e3f:	xchg   DWORD PTR [esi+0x7d],esi
  423e42:	or     dh,BYTE PTR [esi+0x7d]
  423e45:	int    0x76
  423e47:	jge    0x423e16
  423e49:	lea    ecx,ds:0xb2f7d43
  423e4f:	(bad)  
  423e50:	inc    DWORD PTR [eax]
  423e52:	add    ch,cl
  423e54:	jbe    0x423ec3
  423e56:	int    0x8d
  423e58:	ins    DWORD PTR es:[edi],dx
  423e59:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e5c:	jmp    0x423df0
  423e5e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e61:	lods   eax,DWORD PTR ds:[esi]
  423e62:	sub    BYTE PTR [ebx-0x2d],dl
  423e65:	int    0x8d
  423e67:	or     eax,0xcdd3d12f
  423e6c:	lea    edi,ds:0xf2d30f3b
  423e72:	sub    BYTE PTR [ebx-0x2d],dl
  423e75:	int    0x8d
  423e77:	cmp    eax,0xebd30c3b
  423e7c:	xchg   edx,eax
  423e7d:	push   ebx
  423e7e:	ror    DWORD PTR [edx],cl
  423e80:	jbe    0x423ee7
  423e82:	int    0x76
  423e84:	popf   
  423e85:	int    0x8d
  423e87:	popf   
  423e88:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e8b:	jmp    0x423e1f
  423e8d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e90:	lods   eax,DWORD PTR ds:[esi]
  423e91:	sub    BYTE PTR [ebx-0x2d],dl
  423e94:	int    0x8d
  423e96:	popf   
  423e97:	int    0x96
  423e99:	popf   
  423e9a:	cmp    ecx,DWORD PTR [edi]
  423e9c:	shl    edx,cl
  423e9e:	sub    BYTE PTR [ebx],bh
  423ea0:	aad    0xd3
  423ea2:	repz xchg edx,eax
  423ea4:	push   ebx
  423ea5:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423eab:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423eb1:	in     al,dx
  423eb2:	sbb    al,0xcd
  423eb4:	jbe    0x423e53
  423eb6:	int    0x8d
  423eb8:	popf   
  423eb9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ebc:	or     al,0xd3
  423ebe:	lods   eax,DWORD PTR ds:[esi]
  423ebf:	sub    bl,dl
  423ec1:	jmp    0x423e55
  423ec3:	push   ebx
  423ec4:	rol    DWORD PTR [edi+0x760a4576],cl
  423eca:	inc    ebp
  423ecb:	int    0x76
  423ecd:	popf   
  423ece:	int    0x8d
  423ed0:	popf   
  423ed1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ed4:	lods   eax,DWORD PTR ds:[esi]
  423ed5:	sub    BYTE PTR [ebx],bh
  423ed7:	or     al,0xd3
  423ed9:	jmp    0x423e6d
  423edb:	push   ebx
  423edc:	ror    ebp,cl
  423ede:	lea    ebx,ds:0x76cd7d33
  423ee4:	popf   
  423ee5:	int    0x96
  423ee7:	popf   
  423ee8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eeb:	aad    0xd3
  423eed:	repz xchg edx,eax
  423eef:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ef5:	xchg   esi,eax
  423ef6:	inc    ebp
  423ef7:	das    
  423ef8:	rcl    edx,1
  423efa:	inc    ebx
  423efb:	shr    DWORD PTR [edi],cl
  423efd:	pop    es
  423efe:	adc    ebp,edi
  423f00:	add    BYTE PTR [eax],al
  423f02:	int    0x76
  423f04:	mov    BYTE PTR [eax],al
  423f06:	(bad)  
  423f07:	dec    esp
  423f08:	iret   
  423f09:	jbe    0x423ec8
  423f0b:	add    dh,dl
  423f0d:	mov    BYTE PTR [eax-0x33],dh
  423f10:	jbe    0x423e9a
  423f12:	int    0x1
  423f14:	xchg   ebp,eax
  423f15:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f1f:	icebp  
  423f20:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f2a:	jne    0x423ee9
  423f2c:	test   al,0x88
  423f2e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f35:	stc    
  423f36:	int    0x8d
  423f38:	stc    
  423f39:	cmp    eax,ebp
  423f3b:	cmp    ecx,DWORD PTR [edi]
  423f3d:	shl    edx,cl
  423f3f:	sub    bl,dl
  423f41:	mov    ebp,0xcdd35392
  423f46:	lea    esi,[ebp+0x43]
  423f49:	rcl    esp,cl
  423f4b:	push   esi
  423f4c:	int    0x76
  423f4e:	mov    ch,cl
  423f50:	lea    ebp,ds:0xcd2d96cd
  423f56:	add    DWORD PTR [ecx],edx
  423f58:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f62:	shr    edx,cl
  423f64:	sub    BYTE PTR [ebx+0x13],dl
  423f67:	jno    0x423f36
  423f69:	(bad)  
  423f6a:	stc    
  423f6b:	int    0x96
  423f6d:	stc    
  423f6e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f71:	cdq    
  423f72:	shr    ebx,cl
  423f74:	xchg   edx,eax
  423f75:	shr    edx,cl
  423f77:	sub    BYTE PTR [ebx+0x13],dl
  423f7a:	jno    0x423f7c
  423f7c:	(bad)  
  423f7d:	jne    0x423f7f
  423f7f:	jo     0x423f9d
  423f81:	stos   BYTE PTR es:[edi],al
  423f82:	test   al,0x63
  423f84:	retf   
  423f85:	ror    BYTE PTR [eax-0x12326980],cl
  423f8b:	add    al,0xed
  423f8d:	and    al,0x98
  423f8f:	int    0x11
  423f91:	int    0x12
  423f93:	sub    eax,0x4808081
  423f98:	pop    esp
  423f99:	sub    BYTE PTR [edi],0x5
  423f9c:	dec    edx
  423f9d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423fa7:	add    BYTE PTR [esi],0xf7
  423faa:	das    
  423fab:	add    eax,0x80808003
  423fb0:	int    0x7
  423fb2:	or     DWORD PTR [eax+0x6d068080],eax
  423fb8:	das    
  423fb9:	add    eax,0x808080e9
  423fbe:	add    al,0x69
  423fc0:	int3   
  423fc1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423fc8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fcf:	add    eax,0x808080e3
  423fd4:	int    0xc1
  423fd6:	and    eax,0x4808081
  423fdb:	mov    dh,0x11
  423fdd:	or     ch,0x13
  423fe0:	xor    ecx,DWORD PTR [esi-0x79]
  423fe3:	shr    BYTE PTR [edi],cl
  423fe5:	mov    ebx,0x8d0a4c70
  423fea:	mov    ch,0x2f
  423fec:	mov    ebx,0x13874e7c
  423ff1:	das    
  423ff2:	add    eax,0x80808049
  423ff7:	iret   
  423ff8:	jl     0x42400e
  423ffa:	pop    ebx
  423ffb:	or     cl,BYTE PTR [ebp+0x69bd]
  424001:	add    BYTE PTR [ebx-0x2baef966],al
  424007:	or     ebp,0x31
  42400a:	add    al,0xb6
  42400c:	cmc    
  42400d:	sub    BYTE PTR [ebx],0x99
  424010:	xchg   ecx,esi
  424012:	das    
  424013:	mov    ebx,0xbb2f4ee0
  424018:	mov    al,ds:0xd4fc874c
  42401d:	mov    esi,0xa148acf
  424022:	(bad)  
  424023:	in     eax,dx
  424024:	push   es
  424025:	push   ecx
  424026:	aam    0x6e
  424028:	int    0x89
  42402a:	add    al,0xb6
  42402c:	stc    
  42402d:	sub    BYTE PTR [ebx],0xf
  424030:	xchg   DWORD PTR [ebp+0x2f],edi
  424033:	mov    ebx,0xbb2f4ede
  424038:	sahf   
  424039:	dec    esp
  42403a:	xchg   esp,edi
  42403c:	aam    0x33
  42403e:	iret   
  42403f:	ficom  WORD PTR [edx+ecx*1]
  424042:	out    0xfd,al
  424044:	int    0xe6
  424046:	std    
  424047:	int    0x6a
  424049:	push   es
  42404a:	add    ah,dl
  42404c:	xchg   ch,cl
  42404e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42404f:	mov    ch,0x81
  424051:	and    al,0x8b
  424053:	das    
  424054:	mov    ebx,0xbb2f4ede
  424059:	sahf   
  42405a:	dec    esp
  42405b:	add    BYTE PTR [esi-0x7],dh
  42405e:	add    al,0x76
  424060:	std    
  424061:	mov    BYTE PTR [edi-0x619a104],al
  424067:	sbb    ch,0x2f
  42406a:	mov    ebx,0xbb2f4ee0
  42406f:	mov    al,ds:0xed8dcd4c
  424074:	add    BYTE PTR [esi-0xb],dh
  424077:	add    al,0xd3
  424079:	mov    BYTE PTR [edi-0x1272f504],al
  42407f:	pop    esi
  424080:	out    0xf5,al
  424082:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424089:	jo     0x4240d9
  42408b:	das    
  42408c:	mov    ebx,0x76004cdc
  424091:	adc    DWORD PTR [ebx+edx*8],eax
  424094:	mov    BYTE PTR [edi-0x4272f527],al
  42409a:	pop    esi
  42409b:	xchg   esi,eax
  42409c:	adc    DWORD PTR [edi],ebp
  42409e:	or     ebp,DWORD PTR [esi-0x56000000]
  4240a4:	arpl   WORD PTR [ebx],di
  4240a6:	ins    DWORD PTR es:[edi],dx
  4240a7:	ins    BYTE PTR es:[edi],dx
  4240a8:	in     al,dx
  4240a9:	xchg   edx,eax
  4240aa:	cmp    ebp,DWORD PTR [ebp-0x58]
  4240ad:	retf   
  4240ae:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240b4:	sub    eax,0xcd808081
  4240b9:	jbe    0x424107
  4240bb:	add    al,0xed
  4240bd:	xor    BYTE PTR [ebx+0x3b],bl
  4240c0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240c6:	add    eax,0x8080800b
  4240cb:	inc    ebx
  4240cc:	(bad)
  4240cf:	pop    esi
  4240d0:	pushf  
  4240d1:	(bad)  
  4240d3:	test   DWORD PTR [ebx],edi
  4240d5:	ins    DWORD PTR es:[edi],dx
  4240d6:	ins    BYTE PTR es:[edi],dx
  4240d7:	in     al,dx
  4240d8:	fmul   st,st(5)
  4240da:	ins    BYTE PTR es:[edi],dx
  4240db:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240e1:	and    al,0xcd
  4240e3:	jo     0x424119
  4240e5:	int    0x90
  4240e7:	adc    al,0xcd
  4240e9:	fcomp  QWORD PTR [edi+eax*4]
  4240ec:	lea    ecx,[eax+0xa889687]
  4240f2:	(bad)  
  4240f3:	std    
  4240f4:	inc    ebx
  4240f5:	clc    
  4240f6:	jnp    0x42407f
  4240f8:	or     ah,dh
  4240fa:	std    
  4240fb:	or     ah,BYTE PTR [esi-0x259a107]
  424101:	fsub   st,st(3)
  424103:	inc    ebx
  424104:	pushf  
  424105:	adc    al,0x77
  424107:	xchg   BYTE PTR [edi],ch
  424109:	mov    ebx,0x92eca054
  42410e:	int    0xf4
  424110:	iret   
  424111:	push   esp
  424112:	ror    ebp,0x68
  424115:	push   es
  424116:	add    ah,dl
  424118:	ds xchg esi,esp
  42411b:	mov    BYTE PTR [edx],cl
  42411d:	out    0x11,al
  42411f:	inc    ebx
  424120:	stc    
  424121:	fdiv   DWORD PTR [eax]
  424123:	int    0xa6
  424125:	dec    esp
  424126:	int    0x63
  424128:	in     al,0x87
  42412a:	popf   
  42412b:	inc    ebx
  42412c:	cld    
  42412d:	ja     0x4240b3
  42412f:	int    0x58
  424131:	in     al,dx
  424132:	mov    BYTE PTR [ebx],dh
  424134:	out    0x88,al
  424136:	or     ch,BYTE PTR [eax-0x33]
  424139:	(bad)  
  42413a:	adc    DWORD PTR [esi],eax
  42413c:	not    esp
  42413e:	dec    esi
  42413f:	int    0xa6
  424141:	stc    
  424142:	dec    ebx
  424143:	or     ah,BYTE PTR [esi-0x259bc07]
  424149:	sbb    BYTE PTR [ebp-0x14],0x8
  42414d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424150:	test   al,0x63
  424152:	retf   
  424153:	ror    BYTE PTR [eax-0x12326980],cl
  424159:	add    al,0xed
  42415b:	push   eax
  42415c:	pop    ebx
  42415d:	cwde   
  42415e:	pop    ebp
  42415f:	dec    ecx
  424160:	and    DWORD PTR [esi-0x289f5cb],eax
  424166:	leave  
  424167:	jbe    0x424162
  424169:	inc    ecx
  42416a:	and    DWORD PTR [esi-0x27232cb],eax
  424170:	int    0xa6
  424172:	std    
  424173:	call   0x3b81:0x90cfffc0
  42417a:	psrlq  mm5,mm3
  42417d:	xchg   edx,eax
  42417e:	stos   BYTE PTR es:[edi],al
  42417f:	cmp    esp,ecx
  424181:	shl    ebp,cl
  424183:	sub    BYTE PTR [ebx+0xc],dl
  424186:	or     cl,BYTE PTR [ebp-0x2723243]
  42418c:	int    0x8d
  42418e:	std    
  42418f:	int    0x8d
  424191:	std    
  424192:	int    0x8d
  424194:	std    
  424195:	int    0x8d
  424197:	std    
  424198:	int    0x8d
  42419a:	std    
  42419b:	int    0x8d
  42419d:	std    
  42419e:	int    0x8d
  4241a0:	std    
  4241a1:	int    0x8d
  4241a3:	std    
  4241a4:	int    0x8d
  4241a6:	std    
  4241a7:	leave  
  4241a8:	jbe    0x4241bb
  4241aa:	fadd   st,st(5)
  4241ac:	loope  0x424203
  4241ae:	int    0x8d
  4241b0:	std    
  4241b1:	int    0xa6
  4241b3:	std    
  4241b4:	cmp    esp,ecx
  4241b6:	cmp    ecx,DWORD PTR [edi]
  4241b8:	shl    ebp,cl
  4241ba:	sub    bl,dl
  4241bc:	jmp    0x424150
  4241be:	push   ebx
  4241bf:	or     al,0xcd
  4241c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241c2:	dec    esp
  4241c3:	int    0x9f
  4241c5:	sub    eax,0x43808081
  4241ca:	push   ebx
  4241cb:	das    
  4241cc:	add    eax,0x80808717
  4241d1:	int    0x8d
  4241d3:	std    
  4241d4:	int    0xa6
  4241d6:	std    
  4241d7:	cmp    ecx,DWORD PTR [edi]
  4241d9:	cmp    esp,ecx
  4241db:	shr    ebx,cl
  4241dd:	xchg   edx,eax
  4241de:	shl    ebp,cl
  4241e0:	sub    BYTE PTR [ebx+0xc],dl
  4241e3:	inc    ebx
  4241e4:	adc    ebp,DWORD PTR [edi]
  4241e6:	add    eax,0x8080877f
  4241eb:	int    0xca
  4241ed:	add    DWORD PTR [eax-0x69327f80],eax
  4241f3:	std    
  4241f4:	int    0xa6
  4241f6:	std    
  4241f7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241fd:	xchg   edx,eax
  4241fe:	shl    ebp,cl
  424200:	sub    BYTE PTR [ebx-0x2b],dl
  424203:	inc    ebx
  424204:	adc    ebp,DWORD PTR [edi]
  424206:	add    eax,0x8080875b
  42420b:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424211:	int    0xf1
  424213:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424219:	shl    ebx,cl
  42421b:	xchg   edx,eax
  42421c:	shl    ebp,cl
  42421e:	sub    BYTE PTR [ebx-0x2b],dl
  424221:	or     dl,BYTE PTR [esi+0x1196cd11]
  424227:	inc    ebx
  424228:	icebp  
  424229:	aam    0x26
  42422b:	int    0x76
  42422d:	std    
  42422e:	int    0x96
  424230:	std    
  424231:	cmp    ebx,ecx
  424233:	cmp    edi,DWORD PTR [ecx-0x2d]
  424236:	jmp    0xd253:0x92bdd328
  42423d:	int    0x96
  42423f:	adc    DWORD PTR [ebx-0x26],esi
  424242:	adc    al,0x5e
  424244:	test   BYTE PTR [edx-0x2a],cl
  424247:	xor    cl,ch
  424249:	jbe    0x424248
  42424b:	int    0x96
  42424d:	std    
  42424e:	cmp    ebx,ecx
  424250:	cmp    edi,DWORD PTR [ecx-0x2d]
  424253:	jmp    0xd253:0x92bdd328
  42425a:	int    0x96
  42425c:	adc    DWORD PTR [ebx-0x26],esi
  42425f:	adc    al,0x5e
  424261:	je     0x4242ad
  424263:	xor    BYTE PTR [edi],ch
  424265:	add    eax,0x808092df
  42426a:	int    0x76
  42426c:	std    
  42426d:	int    0x76
  42426f:	std    
  424270:	int    0xa6
  424272:	std    
  424273:	int    0x76
  424275:	std    
  424276:	cmp    ecx,ecx
  424278:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42427e:	in     al,dx
  42427f:	xchg   edx,eax
  424280:	push   ebx
  424281:	popf   
  424282:	int    0x76
  424284:	adc    DWORD PTR [ebx+0x6d],esi
  424287:	adc    al,0x87
  424289:	ror    ebp,cl
  42428b:	jl     0x4242bd
  42428d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424293:	int    0x8d
  424295:	std    
  424296:	int    0x96
  424298:	std    
  424299:	cmp    ecx,DWORD PTR [edi]
  42429b:	cmp    ebx,ecx
  42429d:	shr    ebx,cl
  42429f:	xchg   edx,eax
  4242a0:	shr    edx,cl
  4242a2:	sub    BYTE PTR [ebx+0x13],dl
  4242a5:	int    0x96
  4242a7:	std    
  4242a8:	or     cl,BYTE PTR [ebp+0xa88cd95]
  4242ae:	lea    esi,[ebp+0x3bfd8dcd]
  4242b4:	cdq    
  4242b5:	cmp    esi,eax
  4242b7:	shl    edx,cl
  4242b9:	sub    bl,dl
  4242bb:	repz xchg edx,eax
  4242bd:	push   ebx
  4242be:	jecxz  0x42428d
  4242c0:	lea    esi,[ebp-0x792becbd]
  4242c6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242cc:	int    0x8d
  4242ce:	std    
  4242cf:	int    0x96
  4242d1:	std    
  4242d2:	cmp    ecx,DWORD PTR [edi]
  4242d4:	cmp    ebx,ecx
  4242d6:	shr    ebx,cl
  4242d8:	xchg   edx,eax
  4242d9:	shr    edx,cl
  4242db:	sub    BYTE PTR [ebx+0x13],dl
  4242de:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242e2:	jbe    0x424281
  4242e4:	popa   
  4242e5:	and    DWORD PTR [esi-0x777278cb],eax
  4242eb:	or     cl,BYTE PTR [ebp-0x32781313]
  4242f1:	(bad)  
  4242f2:	in     eax,dx
  4242f3:	int    0x76
  4242f5:	dec    esp
  4242f6:	int    0x1
  4242f8:	adc    DWORD PTR [ecx+0x718080],eax
  4242fe:	xor    ch,cl
  424300:	jbe    0x42434e
  424302:	add    dh,dl
  424304:	in     eax,dx
  424305:	int    0x1
  424307:	adc    DWORD PTR [ecx+0x70008080],eax
  42430d:	dec    esp
  42430e:	leave  
  42430f:	jbe    0x4242b6
  424311:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424318:	dec    edx
  424319:	pop    ss
  42431a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424320:	xchg   esi,eax
  424321:	std    
  424322:	cmp    ecx,DWORD PTR [edi]
  424324:	cmp    ebx,ecx
  424326:	shr    ebx,cl
  424328:	xchg   edx,eax
  424329:	shr    edx,cl
  42432b:	sub    BYTE PTR [ebx+0x13],dl
  42432e:	or     dh,BYTE PTR [esi-0x4b]
  424331:	inc    ebx
  424332:	jge    0x42430a
  424334:	pop    eax
  424335:	int    0x76
  424337:	stc    
  424338:	int    0x8d
  42433a:	stc    
  42433b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42433e:	lock shl edx,cl
  424341:	sub    bl,dl
  424343:	mov    ebp,0xcdd35392
  424348:	lea    esp,[ebp+0x3ba596cd]
  42434e:	fnstcw WORD PTR [ebx]
  424350:	psrlq  mm5,mm2
  424353:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424359:	int    0x1
  42435b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424361:	xchg   edx,eax
  424362:	push   ebx
  424363:	jecxz  0x424394
  424365:	rcl    ebp,1
  424367:	bound  eax,QWORD PTR [eax]
  424369:	jo     0x42439f
  42436b:	int    0x76
  42436d:	std    
  42436e:	int    0x8d
  424370:	std    
  424371:	cmp    edi,DWORD PTR [ecx+0x3b]
  424374:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42437b:	push   ebx
  42437c:	rol    DWORD PTR [ebx+0x76],cl
  42437f:	mov    ch,0xd6
  424381:	and    ch,cl
  424383:	jbe    0x424322
  424385:	int    0x8d
  424387:	popf   
  424388:	cmp    esi,eax
  42438a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42438d:	mov    ebp,0x28f2d392
  424392:	push   ebx
  424393:	jge    0x4243d8
  424395:	fld    TBYTE PTR [edi]
  424397:	pop    es
  424398:	xchg   esp,eax
  424399:	add    BYTE PTR [eax],al
  42439b:	add    ch,cl
  42439d:	jbe    0x42439c
  42439f:	int    0x8d
  4243a1:	std    
  4243a2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243a5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243ac:	push   ebx
  4243ad:	rol    DWORD PTR [ebx+0x76],cl
  4243b0:	mov    ch,0xd6
  4243b2:	and    ch,cl
  4243b4:	jbe    0x4243af
  4243b6:	int    0x8d
  4243b8:	stc    
  4243b9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243bc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243c3:	push   ebx
  4243c4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243ca:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243d4:	leave  
  4243d5:	jbe    0x4243cc
  4243d7:	fdivr  st,st(4)
  4243d9:	sbb    al,0xb
  4243db:	int    0xa6
  4243dd:	std    
  4243de:	int    0x76
  4243e0:	std    
  4243e1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243e7:	xchg   edx,eax
  4243e8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243ee:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243f4:	std    
  4243f5:	int    0x8d
  4243f7:	std    
  4243f8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243fb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424402:	push   ebx
  424403:	ror    DWORD PTR [edx],cl
  424405:	jbe    0x4243f4
  424407:	int    0x76
  424409:	std    
  42440a:	int    0x8d
  42440c:	std    
  42440d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424410:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424417:	push   ebx
  424418:	ror    DWORD PTR [edx],cl
  42441a:	jbe    0x424411
  42441c:	int    0x8d
  42441e:	std    
  42441f:	int    0x76
  424421:	std    
  424422:	cmp    ecx,DWORD PTR [edi]
  424424:	cmp    ecx,ecx
  424426:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42442c:	push   ebx
  42442d:	jge    0x4243fc
  42442f:	jbe    0x4243c6
  424431:	inc    ebx
  424432:	jge    0x424408
  424434:	xchg   ch,cl
  424436:	test   BYTE PTR ds:0xcded760a,bl
  42443c:	jbe    0x4243eb
  42443e:	int    0x84
  424440:	sbb    eax,0xcdf5760a
  424445:	jbe    0x424444
  424447:	int    0x8d
  424449:	std    
  42444a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42444d:	lock shl edx,cl
  424450:	sub    bl,dl
  424452:	mov    ebp,0xcdd35392
  424457:	(bad)  
  424458:	in     eax,dx
  424459:	inc    ebx
  42445a:	rcl    esp,cl
  42445c:	push   esp
  42445d:	int    0x76
  42445f:	std    
  424460:	int    0x8d
  424462:	std    
  424463:	cmp    esi,eax
  424465:	cmp    edi,DWORD PTR [ecx-0x2d]
  424468:	repnz sub bl,dl
  42446b:	mov    ebp,0xcdd35392
  424470:	(bad)  
  424471:	in     eax,dx
  424472:	shr    ebx,cl
  424474:	sub    al,BYTE PTR [ebx-0x2d]
  424477:	aam    0x1c
  424479:	int    0x8d
  42447b:	in     eax,dx
  42447c:	int    0x76
  42447e:	dec    esp
  42447f:	int    0x1
  424481:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424487:	retf   
  424488:	jno    0x42448a
  42448a:	(bad)  
  42448b:	mov    ch,0x0
  42448d:	jo     0x424417
  42448f:	in     al,dx
  424490:	push   ds
  424491:	int    0x76
  424493:	cmc    
  424494:	xchg   DWORD PTR [esi-0x78],esi
  424497:	int    0x8d
  424499:	dec    esp
  42449a:	int    0xa
  42449c:	adc    DWORD PTR [ecx+0x6d048080],eax
  4244a2:	xchg   edx,eax
  4244a3:	jo     0x4244a5
  4244a5:	(bad)  
  4244a6:	mov    ch,0x0
  4244a8:	jno    0x424432
  4244aa:	or     dh,BYTE PTR [esi-0xb]
  4244ad:	int    0x76
  4244af:	std    
  4244b0:	int    0x8d
  4244b2:	std    
  4244b3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244b6:	lock shl edx,cl
  4244b9:	sub    bl,dl
  4244bb:	mov    ebp,0xcdd35392
  4244c0:	(bad)  
  4244c1:	cmc    
  4244c2:	inc    ebx
  4244c3:	ror    ebp,cl
  4244c5:	jbe    0x4244c0
  4244c7:	int    0x8d
  4244c9:	stc    
  4244ca:	(bad)  
  4244cb:	xor    DWORD PTR [ebx],edi
  4244cd:	jns    0x42450a
  4244cf:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244d6:	push   ebx
  4244d7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244dd:	cmp    esi,eax
  4244df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244e2:	repnz sub bl,dl
  4244e5:	mov    ebp,0xcdd35392
  4244ea:	(bad)  
  4244eb:	cmc    
  4244ec:	das    
  4244ed:	rcl    ebx,1
  4244ef:	int    0x8d
  4244f1:	lods   eax,DWORD PTR ds:[esi]
  4244f2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244f9:	(bad)  
  4244fa:	stc    
  4244fb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244fe:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424505:	push   ebx
  424506:	rol    DWORD PTR [edi-0x2893263],cl
  42450c:	int    0x8d
  42450e:	std    
  42450f:	cmp    esi,eax
  424511:	cmp    edi,DWORD PTR [ecx-0x2d]
  424514:	repnz sub bl,dl
  424517:	mov    ebp,0xcdd35392
  42451c:	lea    ebp,[ebp+0x2f1f845e]
  424522:	push   es
  424523:	or     al,0xff
  424525:	add    BYTE PTR [eax],al
  424527:	int    0x76
  424529:	adc    ebp,ecx
  42452b:	lea    edx,[ecx]
  42452d:	ins    BYTE PTR es:[edi],dx
  42452e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424534:	test   BYTE PTR [eax-0x2cac7f80],al
  42453a:	int    0x8d
  42453c:	icebp  
  42453d:	push   esi
  42453e:	dec    ecx
  42453f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424545:	add    BYTE PTR [eax],al
  424547:	int    0x76
  424549:	std    
  42454a:	int    0x8d
  42454c:	std    
  42454d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424550:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424557:	push   ebx
  424558:	rcr    DWORD PTR [esi+0x76],cl
  42455b:	mov    ebp,0x76cd88d6
  424560:	stc    
  424561:	int    0x8d
  424563:	stc    
  424564:	in     al,dx
  424565:	xchg   ch,cl
  424567:	jbe    0x424566
  424569:	int    0x8d
  42456b:	std    
  42456c:	cmp    esi,eax
  42456e:	cmp    edi,DWORD PTR [ecx-0x56]
  424571:	shl    edx,cl
  424573:	sub    bl,dl
  424575:	mov    ebp,0xd353a892
  42457a:	arpl   bx,cx
  42457c:	ror    BYTE PTR [eax-0x12326980],cl
  424582:	add    al,0xed
  424584:	xor    al,0xc9
  424586:	jbe    0x424585
  424588:	dec    ecx
  424589:	and    DWORD PTR [esi-0x528936cb],eax
  42458f:	inc    ecx
  424590:	and    DWORD PTR [esi+0x4c76cd35],eax
  424596:	or     dh,BYTE PTR [esi+0x4c]
  424599:	cwde   
  42459a:	int    0x6d
  42459c:	int    0x76
  42459e:	std    
  42459f:	int    0x96
  4245a1:	std    
  4245a2:	sar    bh,0x5f
  4245a5:	shl    DWORD PTR [ecx],1
  4245a7:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  4245ad:	cdq    
  4245ae:	shr    edx,cl
  4245b0:	sub    bl,dl
  4245b2:	mov    ebp,0xcdd25392
  4245b7:	xchg   esi,eax
  4245b8:	mov    BYTE PTR [ebx-0xf],al
  4245bb:	das    
  4245bc:	add    eax,0x80808159
  4245c1:	int    0x76
  4245c3:	mov    ch,cl
  4245c5:	xchg   esi,eax
  4245c6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245cc:	xchg   esi,eax
  4245cd:	cmc    
  4245ce:	leave  
  4245cf:	jbe    0x4245ca
  4245d1:	popa   
  4245d2:	and    DWORD PTR [esi-0x68932cb],eax
  4245d8:	int    0x96
  4245da:	stc    
  4245db:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245e1:	rcl    ebx,cl
  4245e3:	mov    ebp,0xcdd25392
  4245e8:	xchg   esi,eax
  4245e9:	std    
  4245ea:	int    0xe6
  4245ec:	std    
  4245ed:	cmp    esp,ebx
  4245ef:	cmp    edi,edi
  4245f1:	shr    ecx,cl
  4245f3:	sub    bl,dl
  4245f5:	repz xchg edx,eax
  4245f7:	push   ebx
  4245f8:	fxch   st(5)
  4245fa:	out    0xf5,al
  4245fc:	pop    esi
  4245fd:	xchg   esp,eax
  4245fe:	leave  
  4245ff:	fsubr  QWORD PTR [edi]
  424601:	add    eax,0x8080816b
  424606:	int    0x96
  424608:	cmc    
  424609:	int    0x76
  42460b:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424611:	or     ch,0x96
  424614:	mov    ch,cl
  424616:	out    0xf5,al
  424618:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42461e:	pop    ebx
  42461f:	int    0xa6
  424621:	std    
  424622:	cmp    edi,edx
  424624:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42462a:	in     eax,0x28
  42462c:	push   ebx
  42462d:	cld    
  42462e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424634:	add    eax,0x8080814f
  424639:	int    0x96
  42463b:	std    
  42463c:	int    0xe6
  42463e:	std    
  42463f:	cmp    esp,ebx
  424641:	cmp    edi,edi
  424643:	shl    ebx,cl
  424645:	xchg   edx,eax
  424646:	shr    ecx,cl
  424648:	sub    BYTE PTR [ebx-0x27],dl
  42464b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424651:	mov    dl,0x21
  424653:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424659:	out    0xfd,al
  42465b:	cmp    esp,ebx
  42465d:	cmp    edi,edi
  42465f:	shl    ebx,cl
  424661:	xchg   edx,eax
  424662:	shr    ecx,cl
  424664:	sub    BYTE PTR [ebx-0x27],dl
  424667:	jmp    0x42466b
  424669:	add    BYTE PTR [eax-0x2693280],0xcd
  424670:	(bad)  
  424671:	std    
  424672:	add    al,0xf7
  424674:	(bad)  
  424675:	cmp    esp,ebx
  424677:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42467d:	push   ebx
  42467e:	cdq    
  42467f:	iret   
  424680:	ja     0x42467b
  424682:	jecxz  0x424673
  424684:	inc    ebx
  424685:	cdq    
  424686:	das    
  424687:	add    al,0x21
  424689:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424690:	jo     0x42461a
  424692:	or     dl,dh
  424694:	mov    ch,0x2f
  424696:	mov    ebx,0xea121a
  42469b:	das    
  42469c:	add    BYTE PTR [eax-0x321269f6],0x96
  4246a3:	in     eax,dx
  4246a4:	xchg   DWORD PTR [eax],esi
  4246a6:	int    0xd6
  4246a8:	in     eax,dx
  4246a9:	xchg   DWORD PTR [eax-0x2d],edx
  4246ac:	repz sub bl,dl
  4246af:	mov    ecx,0x2ffb5392
  4246b4:	mov    ebx,0x4cf3d31a
  4246b9:	adc    dh,bh
  4246bb:	dec    ecx
  4246bc:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246c2:	or     dl,BYTE PTR [esi-0x12693243]
  4246c8:	int    0xd6
  4246ca:	in     eax,dx
  4246cb:	cmp    esp,ebx
  4246cd:	add    al,0xf7
  4246cf:	call   ebx
  4246d1:	repz xchg edx,eax
  4246d3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246d9:	xchg   esi,eax
  4246da:	mov    BYTE PTR [edx],cl
  4246dc:	xchg   esi,eax
  4246dd:	in     eax,dx
  4246de:	int    0x96
  4246e0:	dec    esp
  4246e1:	int    0xd6
  4246e3:	dec    esp
  4246e4:	cmp    esp,ebx
  4246e6:	add    al,0xf7
  4246e8:	call   ebx
  4246ea:	mov    ecx,0x92f3d328
  4246ef:	push   ebx
  4246f0:	cdq    
  4246f1:	int    0xd6
  4246f3:	mov    ebp,0x32d6fb43
  4246f8:	int    0x96
  4246fa:	dec    esp
  4246fb:	int    0xd6
  4246fd:	dec    esp
  4246fe:	cmp    esp,ebx
  424700:	add    al,0xf7
  424702:	call   ebx
  424704:	mov    ecx,0x92f3d328
  424709:	push   ebx
  42470a:	cdq    
  42470b:	int    0xd6
  42470d:	mov    ebp,0x88d6fb43
  424712:	int    0x96
  424714:	in     eax,dx
  424715:	int    0xd6
  424717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424718:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42471f:	mov    ch,0x2f
  424721:	push   es
  424722:	xchg   ebx,eax
  424723:	add    BYTE PTR [eax],al
  424725:	add    BYTE PTR [ecx-0x6932ee5a],al
  42472b:	stc    
  42472c:	int    0xd6
  42472e:	stc    
  42472f:	cmp    esp,ebx
  424731:	add    al,0xf7
  424733:	call   ebx
  424735:	mov    ecx,0x92f3d328
  42473a:	push   ebx
  42473b:	cdq    
  42473c:	int    0xd6
  42473e:	adc    ebp,ecx
  424740:	out    0xf5,al
  424742:	inc    ebx
  424743:	aam    0xd9
  424745:	in     al,0x77
  424747:	sub    al,0xcd
  424749:	xchg   esi,eax
  42474a:	std    
  42474b:	int    0xd6
  42474d:	std    
  42474e:	cmp    esp,ebx
  424750:	add    al,0xf7
  424752:	call   ebx
  424754:	repz xchg edx,eax
  424756:	sar    DWORD PTR [ecx+0x53c58728],cl
  42475c:	cdq    
  42475d:	int    0x9c
  42475f:	test   BYTE PTR [ebx-0x1e],al
  424762:	das    
  424763:	push   es
  424764:	test   BYTE PTR [eax],al
  424766:	add    BYTE PTR [eax],al
  424768:	arpl   bp,cx
  42476a:	jbe    0x424719
  42476c:	cmp    edx,ebx
  42476e:	int    0x8d
  424770:	lods   eax,DWORD PTR ds:[esi]
  424771:	add    al,0x2
  424773:	jmp    FWORD PTR [edx+0x76cd4aec]
  424779:	std    
  42477a:	cmp    edx,ebx
  42477c:	int    0x8d
  42477e:	std    
  42477f:	cmp    ecx,DWORD PTR [edi]
  424781:	shl    edx,cl
  424783:	sub    bl,dl
  424785:	mov    ebp,0xa8d35392
  42478a:	retf   
  42478b:	ror    BYTE PTR [eax-0x12326980],cl
  424791:	adc    ch,ch
  424793:	xchg   ebp,eax
  424794:	add    BYTE PTR [eax-0x2893680],0x49
  42479b:	and    DWORD PTR [esi-0x68936cb],eax
  4247a1:	inc    ecx
  4247a2:	and    DWORD PTR [esi-0x28932cb],eax
  4247a8:	int    0x8d
  4247aa:	std    
  4247ab:	cwde   
  4247ac:	call   0x8621:0xd169ffc0
  4247b3:	xor    eax,0xbdd3793b
  4247b8:	xchg   edx,eax
  4247b9:	mov    al,ds:0xf2d3133b
  4247be:	sub    BYTE PTR [ebx-0x2d],dl
  4247c1:	or     dh,BYTE PTR [esi-0x53]
  4247c4:	int    0x76
  4247c6:	std    
  4247c7:	int    0x8d
  4247c9:	std    
  4247ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247cd:	mov    ebp,0xd3133b92
  4247d2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247d6:	or     dh,BYTE PTR [esi-0xf]
  4247d9:	int    0xe6
  4247db:	and    al,0xcd
  4247dd:	jbe    0x4247cc
  4247df:	int    0x8d
  4247e1:	in     eax,dx
  4247e2:	cmp    edx,ebx
  4247e4:	or     dh,BYTE PTR [esi-0x13]
  4247e7:	adc    dh,BYTE PTR [esi-0x13]
  4247ea:	dec    ecx
  4247eb:	mov    al,ds:0x76cd3586
  4247f0:	cmc    
  4247f1:	int    0x8d
  4247f3:	cmc    
  4247f4:	cmp    edx,ebx
  4247f6:	or     dh,BYTE PTR [esi-0xb]
  4247f9:	adc    dh,BYTE PTR [esi-0xb]
  4247fc:	dec    ecx
  4247fd:	lahf   
  4247fe:	xchg   BYTE PTR ds:0xcd1176cd,dh
  424804:	lea    edx,[ecx]
  424806:	cmp    edx,ebx
  424808:	or     dh,BYTE PTR [esi+0x11]
  42480b:	adc    dh,BYTE PTR [esi+0x11]
  42480e:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424814:	mov    ch,0xcd
  424816:	lea    esi,[ebp+0x760ad33b]
  42481c:	mov    ch,0x12
  42481e:	jbe    0x4247d5
  424820:	dec    ecx
  424821:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424828:	hlt    
  424829:	mov    esi,DWORD PTR ds:0x68876cd
  42482f:	ins    DWORD PTR es:[edi],dx
  424830:	das    
  424831:	add    eax,0x80808551
  424836:	int    0x76
  424838:	dec    esp
  424839:	push   es
  42483a:	ins    DWORD PTR es:[edi],dx
  42483b:	das    
  42483c:	add    eax,0x80808538
  424841:	int    0x76
  424843:	sbb    al,0x6
  424845:	ins    DWORD PTR es:[edi],dx
  424846:	das    
  424847:	add    eax,0x80808523
  42484c:	int    0x76
  42484e:	and    al,0xcd
  424850:	jbe    0x424876
  424852:	int    0x8d
  424854:	mov    bl,dl
  424856:	mov    ebp,0x39af5692
  42485b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424862:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42486c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42486f:	mov    ebp,0xd3133b92
  424874:	repnz sub BYTE PTR [ebx-0x2d],dl
  424878:	or     dh,BYTE PTR [esi-0xf]
  42487b:	int    0x76
  42487d:	std    
  42487e:	int    0x76
  424880:	std    
  424881:	int    0x76
  424883:	mov    ch,cl
  424885:	lea    ecx,[eax-0x329b8379]
  42488b:	outs   dx,BYTE PTR ds:[esi]
  42488c:	jo     0x424898
  42488e:	lea    esp,[esi+eax*1]
  424891:	ins    DWORD PTR es:[edi],dx
  424892:	das    
  424893:	add    eax,0x808084f0
  424898:	leave  
  424899:	jbe    0x424830
  42489b:	dec    ecx
  42489c:	and    DWORD PTR [eax+0x35],edi
  42489f:	int    0x76
  4248a1:	xchg   ebp,eax
  4248a2:	pop    ebx
  4248a3:	int    0xa6
  4248a5:	xchg   ebp,eax
  4248a6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248a9:	loop   0x42487e
  4248ab:	mov    ebp,0x28e5d392
  4248b0:	push   ebx
  4248b1:	popf   
  4248b2:	or     ah,BYTE PTR [esi-0x289326b]
  4248b8:	int    0x76
  4248ba:	std    
  4248bb:	int    0x8
  4248bd:	sub    eax,0xcd808081
  4248c2:	xor    ch,cl
  4248c4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248c8:	int    0x76
  4248ca:	std    
  4248cb:	int    0x76
  4248cd:	std    
  4248ce:	int    0x8
  4248d0:	and    eax,0xcd808081
  4248d5:	sbb    al,0xa
  4248d7:	xchg   esi,eax
  4248d8:	dec    esp
  4248d9:	inc    ebx
  4248da:	fst    st(6)
  4248dc:	push   0xffffffcd
  4248de:	(bad)  
  4248df:	cmc    
  4248e0:	int    0x8
  4248e2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248e8:	lods   eax,DWORD PTR ds:[esi]
  4248e9:	(bad)  
  4248ea:	int    0x96
  4248ec:	cmc    
  4248ed:	cmp    ecx,DWORD PTR [edi]
  4248ef:	add    al,0xfb
  4248f1:	call   ebx
  4248f3:	jmp    0x424887
  4248f5:	shr    edx,cl
  4248f7:	sub    BYTE PTR [ebx-0x1d],dl
  4248fa:	int    0x8d
  4248fc:	dec    esp
  4248fd:	bound  eax,QWORD PTR [eax]
  4248ff:	xchg   ecx,eax
  424900:	jo     0x42495d
  424902:	add    BYTE PTR [eax+0x24],dh
  424905:	int    0x8d
  424907:	dec    esp
  424908:	int    0x6e
  42490a:	xchg   esp,eax
  42490b:	int    0x7e
  42490d:	jo     0x424942
  42490f:	jge    0x424982
  424911:	xchg   ebp,eax
  424913:	jo     0x4248d2
  424915:	dec    esi
  424916:	xchg   BYTE PTR [eax+0x248dcd80],al
  42491c:	int    0x8
  42491e:	xor    eax,0xa808081
  424923:	sbb    al,0x0
  424925:	xchg   ecx,eax
  424926:	xchg   esp,eax
  424927:	add    dh,dl
  424929:	mov    BYTE PTR [ebx-0x43],bl
  42492c:	or     eax,0xcd808084
  424931:	pop    ebx
  424932:	fs xchg ebp,edx
  424935:	das    
  424936:	mov    ebx,0x74cf1452
  42493b:	xor    BYTE PTR [edx+ecx*1],bl
  42493e:	jbe    0x42495c
  424940:	int    0x76
  424942:	std    
  424943:	int    0x8d
  424945:	std    
  424946:	cmp    edi,DWORD PTR [ecx+0x4]
  424949:	add    bh,bh
  42494b:	shl    edx,cl
  42494d:	sub    bl,dl
  42494f:	mov    ebp,0x2fd35392
  424954:	mov    ebx,0x960a868a
  424959:	and    al,0x43
  42495b:	jge    0x42498c
  42495d:	add    eax,0x808080e9
  424962:	int    0x76
  424964:	std    
  424965:	int    0x8d
  424967:	std    
  424968:	cmp    edi,DWORD PTR [ecx+0x4]
  42496b:	add    bh,bh
  42496d:	shl    edx,cl
  42496f:	sub    bl,dl
  424971:	mov    ebp,0xad35392
  424976:	jbe    0x42491d
  424978:	int    0x76
  42497a:	stc    
  42497b:	int    0x8d
  42497d:	stc    
  42497e:	add    al,0x2
  424980:	(bad)  
  424981:	cmp    edi,DWORD PTR [ecx-0x2d]
  424984:	repnz sub bl,dl
  424987:	mov    ebp,0x2fd35392
  42498c:	mov    ebx,0x7d33868a
  424991:	pop    esi
  424992:	lea    esp,[ebp-0x7f2ef7d1]
  424998:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42499f:	mov    BYTE PTR [edx],cl
  4249a1:	lea    ebx,[esp+ebp*8]
  4249a4:	xchg   ebp,ecx
  4249a6:	lea    ebx,[ecx*8+0x31cd5c52]
  4249ad:	or     dh,BYTE PTR [esi-0x63]
  4249b0:	jl     0x4249b8
  4249b2:	icebp  
  4249b3:	aam    0x89
  4249b5:	clc    
  4249b6:	icebp  
  4249b7:	sub    edx,edx
  4249b9:	xchg   DWORD PTR [esi-0x63],esi
  4249bc:	in     al,dx
  4249bd:	xchg   edx,eax
  4249be:	int    0xd2
  4249c0:	jo     0x42498f
  4249c2:	outs   dx,BYTE PTR ds:[esi]
  4249c3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249c9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249cf:	int    0x7c
  4249d1:	mov    BYTE PTR [edx],cl
  4249d3:	lea    ebx,[ebp-0x32027233]
  4249d9:	xchg   esi,eax
  4249da:	std    
  4249db:	cmp    ecx,DWORD PTR [edi]
  4249dd:	add    al,0xfb
  4249df:	call   ebx
  4249e1:	jmp    0x424975
  4249e3:	shr    edx,cl
  4249e5:	sub    BYTE PTR [ebx+0x13],dl
  4249e8:	pop    esi
  4249e9:	lea    ebx,[ebp-0x7232e32c]
  4249ef:	mov    BYTE PTR [edi-0x29ffb384],al
  4249f5:	popf   
  4249f6:	int    0x6c
  4249f8:	test   BYTE PTR [ecx-0x79],dh
  4249fb:	lds    esi,FWORD PTR [eax-0x43]
  4249fe:	add    eax,DWORD PTR [edi+0x76cd8080]
  424a04:	sbb    al,0xcd
  424a06:	(bad)  
  424a07:	stc    
  424a08:	int    0x96
  424a0a:	stc    
  424a0b:	cmp    ecx,DWORD PTR [edi]
  424a0d:	shr    ebx,cl
  424a0f:	xchg   edx,eax
  424a10:	add    al,0xfb
  424a12:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a19:	push   ebx
  424a1a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a20:	and    al,0xa
  424a22:	jbe    0x424a40
  424a24:	int    0x76
  424a26:	stc    
  424a27:	int    0x8d
  424a29:	stc    
  424a2a:	add    al,0x2
  424a2c:	(bad)  
  424a2d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a30:	repnz sub bl,dl
  424a33:	mov    ebp,0xcdd35392
  424a38:	lea    esp,[edi+ebp*1]
  424a3b:	mov    ebx,0x7d33867e
  424a40:	pop    esi
  424a41:	lea    esp,[ebp+0xa4072f]
  424a47:	add    BYTE PTR [eax],al
  424a49:	int    0x8
  424a4b:	and    eax,0x43808081
  424a50:	sbb    al,0xd6
  424a52:	cmp    ecx,ebp
  424a54:	lea    edx,[ecx]
  424a56:	int    0x8
  424a58:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a5e:	lods   eax,DWORD PTR ds:[esi]
  424a5f:	(bad)  
  424a60:	int    0x96
  424a62:	adc    DWORD PTR [ebx],edi
  424a64:	(bad)  
  424a66:	sti    
  424a67:	call   ebx
  424a69:	jmp    0x4249fd
  424a6b:	shr    edx,cl
  424a6d:	sub    BYTE PTR [ebx-0x1d],dl
  424a70:	int    0x8d
  424a72:	dec    esp
  424a73:	bound  eax,QWORD PTR [eax]
  424a75:	xchg   ecx,eax
  424a76:	xchg   esp,eax
  424a77:	pop    ebx
  424a78:	add    BYTE PTR [eax+0x24],dh
  424a7b:	push   es
  424a7c:	ins    DWORD PTR es:[edi],dx
  424a7d:	das    
  424a7e:	add    eax,0x808092d9
  424a83:	int    0x96
  424a85:	and    al,0xcd
  424a87:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a8d:	or     ch,0x7d
  424a90:	cmp    ecx,DWORD PTR [edi]
  424a92:	add    al,0x11
  424a94:	call   ebx
  424a96:	jmp    0x424a2a
  424a98:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a9e:	add    eax,0x808081da
  424aa3:	int    0x76
  424aa5:	std    
  424aa6:	int    0x8d
  424aa8:	std    
  424aa9:	cmp    edi,DWORD PTR [ecx+0x4]
  424aac:	add    bh,bh
  424aae:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424ab4:	push   ebx
  424ab5:	ror    DWORD PTR [edx],cl
  424ab7:	jbe    0x424a76
  424ab9:	pop    ebp
  424aba:	push   0xcf35869f
  424abf:	jl     0x424a6e
  424ac1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424ac7:	leave  
  424ac8:	jbe    0x424b0f
  424aca:	sbb    BYTE PTR [edi+0x76c93586],bl
  424ad0:	shr    al,1
  424ad2:	lahf   
  424ad3:	xchg   BYTE PTR ds:0xc955760a,dh
  424ad9:	jbe    0x424b48
  424adb:	dec    ecx
  424adc:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ae2:	xchg   esp,eax
  424ae3:	iret   
  424ae4:	inc    ebp
  424ae5:	shl    ebx,cl
  424ae7:	xchg   edx,eax
  424ae8:	adc    bh,bl
  424aea:	scas   eax,DWORD PTR es:[edi]
  424aeb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424af1:	lea    esi,[eax+eax*1+0x0]
  424af5:	add    BYTE PTR [esi+0x4],ch
  424af8:	cli    
  424af9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aff:	xchg   BYTE PTR ds:0x94060a,dh
  424b05:	add    BYTE PTR [eax],al
  424b07:	or     al,BYTE PTR [esi]
  424b09:	mov    esp,0xa000000
  424b0e:	jbe    0x424ac0
  424b10:	or     dh,BYTE PTR [esi+0x15]
  424b13:	iret   
  424b14:	outs   dx,BYTE PTR ds:[esi]
  424b15:	std    
  424b16:	iret   
  424b17:	jno    0x424b89
  424b19:	or     dh,BYTE PTR [esi+0x2d]
  424b1c:	or     dh,BYTE PTR [esi+0x35]
  424b1f:	leave  
  424b20:	push   es
  424b21:	jo     0x424b23
  424b23:	add    BYTE PTR [eax],al
  424b25:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b2b:	pushf  
  424b2c:	add    BYTE PTR [eax],al
  424b2e:	add    BYTE PTR [edx],cl
  424b30:	pop    ss
  424b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b32:	add    BYTE PTR [eax],al
  424b34:	add    cl,cl
  424b36:	push   es
  424b37:	lods   al,BYTE PTR ds:[esi]
  424b38:	add    BYTE PTR [eax],al
  424b3a:	add    BYTE PTR [edx-0x61],cl
  424b3d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b43:	add    BYTE PTR [eax],al
  424b45:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b4b:	les    eax,FWORD PTR [eax]
  424b4d:	add    BYTE PTR [eax],al
  424b4f:	popa   
  424b50:	lahf   
  424b51:	xchg   BYTE PTR ds:0x9006c9,dh
  424b57:	add    BYTE PTR [eax],al
  424b59:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b5f:	aam    0x0
  424b61:	add    BYTE PTR [eax],al
  424b63:	call   0xa77d207
  424b68:	iret   
  424b69:	fadd   QWORD PTR [eax]
  424b6b:	add    BYTE PTR [eax],al
  424b6d:	leave  
  424b6e:	push   es
  424b6f:	in     al,0x0
  424b71:	add    BYTE PTR [eax],al
  424b73:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b79:	add    ecx,ecx
  424b7b:	jbe    0x424b82
  424b7d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b83:	or     ecx,ecx
  424b85:	jbe    0x424b53
  424b87:	inc    ecx
  424b88:	lahf   
  424b89:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b8f:	jbe    0x424bb6
  424b91:	pusha  
  424b92:	lahf   
  424b93:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b99:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b9f:	int3   
  424ba0:	push   es
  424ba1:	jo     0x424ba3
  424ba3:	add    BYTE PTR [eax],al
  424ba5:	shr    ebx,cl
  424ba7:	xchg   edx,eax
  424ba8:	add    DWORD PTR [edx],eax
  424baa:	scas   eax,DWORD PTR es:[edi]
  424bab:	or     esp,ecx
  424bad:	test   DWORD PTR [eax+eax*1+0x0],eax
  424bb1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424bb5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424bbb:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bc5:	add    BYTE PTR [eax-0x7c],dh
  424bc8:	int    0xb3
  424bca:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424bd0:	inc    esp
  424bd1:	add    BYTE PTR [eax],al
  424bd3:	add    BYTE PTR [edx+0x70],ah
  424bd6:	add    BYTE PTR [ecx-0x78],dh
  424bd9:	or     dh,BYTE PTR [esi+0x7d]
  424bdc:	iret   
  424bdd:	jbe    0x424b9c
  424bdf:	jo     0x424bae
  424be1:	or     BYTE PTR ds:0x808081,ah
  424be7:	push   eax
  424be8:	int    0x76
  424bea:	jge    0x424bec
  424bec:	icebp  
  424bed:	int    0x76
  424bef:	std    
  424bf0:	int    0x8d
  424bf2:	std    
  424bf3:	cmp    edi,DWORD PTR [ecx+0x4]
  424bf6:	add    bh,bh
  424bf8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bfe:	push   ebx
  424bff:	ror    DWORD PTR [edx],cl
  424c01:	jbe    0x424c10
  424c03:	int    0x8d
  424c05:	std    
  424c06:	int    0x76
  424c08:	std    
  424c09:	cmp    ecx,DWORD PTR [edi]
  424c0b:	add    al,0x11
  424c0d:	call   ebx
  424c0f:	lods   eax,DWORD PTR ds:[esi]
  424c10:	sub    bl,dl
  424c12:	jmp    0x424ba6
  424c14:	push   ebx
  424c15:	jge    0x424be4
  424c17:	jbe    0x424bd6
  424c19:	inc    ebx
  424c1a:	rcl    esp,cl
  424c1c:	xchg   esi,eax
  424c1d:	or     dh,BYTE PTR [esi+0x75]
  424c20:	in     al,dx
  424c21:	das    
  424c22:	int    0x80
  424c24:	int    0x8d
  424c26:	jne    0x424c32
  424c28:	jbe    0x424be7
  424c2a:	int    0x76
  424c2c:	mov    ebp,0x4dd4d343
  424c31:	int    0x70
  424c33:	sbb    al,0xcd
  424c35:	mov    bl,0x25
  424c37:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c41:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c4b:	int    0xb3
  424c4d:	sub    eax,0xcd808081
  424c52:	xchg   esi,eax
  424c53:	dec    esp
  424c54:	int    0x62
  424c56:	cmp    al,0x87
  424c58:	xor    DWORD PTR [edx],ecx
  424c5a:	jo     0x424c80
  424c5c:	int    0x76
  424c5e:	stc    
  424c5f:	int    0x8d
  424c61:	stc    
  424c62:	cmp    edi,DWORD PTR [ecx+0x4]
  424c65:	add    bh,bh
  424c67:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c6d:	push   ebx
  424c6e:	ror    DWORD PTR [edx],cl
  424c70:	jbe    0x424c7f
  424c72:	int    0x96
  424c74:	and    al,0x9a
  424c76:	pop    ebx
  424c77:	mov    ebp,0xf5e2
  424c7c:	push   es
  424c7d:	ins    DWORD PTR es:[edi],dx
  424c7e:	das    
  424c7f:	add    eax,0x80808099
  424c84:	add    dh,dl
  424c86:	and    al,0xcd
  424c88:	lock pop ebx
  424c8a:	mov    ebp,0xf52c
  424c8f:	push   es
  424c90:	ins    DWORD PTR es:[edi],dx
  424c91:	das    
  424c92:	add    eax,0x808080c5
  424c97:	int    0x76
  424c99:	and    al,0xcd
  424c9b:	lock int 0xd5
  424c9e:	mov    ebp,0xfbe7
  424ca3:	push   es
  424ca4:	ins    DWORD PTR es:[edi],dx
  424ca5:	das    
  424ca6:	add    eax,0x808080d1
  424cab:	call   0x0:0xf90ebd5b
  424cb2:	push   es
  424cb3:	ins    DWORD PTR es:[edi],dx
  424cb4:	das    
  424cb5:	add    eax,0x8080802d
  424cba:	int    0x8
  424cbc:	and    eax,0x43808081
  424cc1:	sbb    al,0xd6
  424cc3:	sbb    cl,ch
  424cc5:	or     BYTE PTR [ecx],dl
  424cc7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424cd1:	int    0x8d
  424cd3:	dec    esp
  424cd4:	add    BYTE PTR [ecx+0x70005b94],dl
  424cda:	and    al,0xcd
  424cdc:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424ce2:	or     ch,0x7d
  424ce5:	cmp    ecx,DWORD PTR [edi]
  424ce7:	add    al,0x11
  424ce9:	call   ebx
  424ceb:	jmp    0x424c7f
  424ced:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424cf3:	(bad)
  424cf7:	dec    ecx
  424cf8:	and    BYTE PTR [esi-0x778932cb],al
  424cfe:	int    0x8d
  424d00:	mov    ch,cl
  424d02:	jbe    0x424d28
  424d04:	shr    ebx,cl
  424d06:	xchg   edx,eax
  424d07:	adc    al,BYTE PTR [edx]
  424d09:	scas   eax,DWORD PTR es:[edi]
  424d0a:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d10:	sbb    ch,cl
  424d12:	ins    BYTE PTR es:[edi],dx
  424d13:	cmp    al,0xcd
  424d15:	lea    ebp,[edi+eax*4]
  424d18:	lds    ecx,FWORD PTR [edx]
  424d1a:	outs   dx,BYTE PTR ds:[esi]
  424d1b:	adc    al,0xcd
  424d1d:	jbe    0x424d4b
  424d1f:	leave  
  424d20:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d27:	sub    al,0xa
  424d29:	pushf  
  424d2a:	test   ch,cl
  424d2c:	jbe    0x424d5e
  424d2e:	int    0x8d
  424d30:	sub    al,0xa
  424d32:	outs   dx,BYTE PTR ds:[esi]
  424d33:	mov    ch,cl
  424d35:	jbe    0x424d4b
  424d37:	int    0x8d
  424d39:	sub    al,0xa
  424d3b:	outs   dx,BYTE PTR ds:[esi]
  424d3c:	dec    esp
  424d3d:	in     al,dx
  424d3e:	adc    al,0xcd
  424d40:	jbe    0x424d66
  424d42:	int    0x6c
  424d44:	cmp    al,0xcd
  424d46:	lea    ebp,[edi+eax*4]
  424d49:	lds    ecx,FWORD PTR [edx]
  424d4b:	outs   dx,BYTE PTR ds:[esi]
  424d4c:	adc    al,0xcd
  424d4e:	jbe    0x424d7c
  424d50:	add    al,0x2c
  424d52:	or     cl,0x76
  424d55:	icebp  
  424d56:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d60:	cmp    ebx,ebp
  424d62:	int    0xc5
  424d64:	arpl   sp,bp
  424d66:	xchg   edx,eax
  424d67:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d6a:	test   al,0xcb
  424d6c:	shl    BYTE PTR [eax+eax*4],cl
  424d6f:	xchg   esi,eax
  424d70:	int    0xed
  424d72:	jno    0x424de5
  424d74:	das    
  424d75:	mov    ebx,0x74cf146e
  424d7a:	mov    BYTE PTR [edi+ebp*1],bl
  424d7d:	mov    ebx,0x9a5b867e
  424d82:	leave  
  424d83:	jbe    0x424d82
  424d85:	dec    ecx
  424d86:	and    DWORD PTR [esi-0x672f5cb],eax
  424d8c:	push   es
  424d8d:	retf   
  424d8e:	aam    0xb4
  424d90:	popa   
  424d91:	shl    DWORD PTR [ecx],1
  424d93:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d99:	out    0x88,al
  424d9b:	xchg   edx,edi
  424d9d:	pop    esi
  424d9e:	out    0x4c,al
  424da0:	or     BYTE PTR [ebp-0x33],0xdc
  424da4:	mov    BYTE PTR [edi-0x77197806],al
  424daa:	pop    esi
  424dab:	out    0x4c,al
  424dad:	cmp    BYTE PTR [edx-0x33],0x8d
  424db1:	std    
  424db2:	int    0xe6
  424db4:	std    
  424db5:	cmp    edx,DWORD PTR [ebx]
  424db7:	add    al,0xf8
  424db9:	call   ebx
  424dbb:	jmp    0xd41e1ae8
  424dc0:	in     al,dx
  424dc1:	xchg   edx,eax
  424dc2:	push   ebx
  424dc3:	cld    
  424dc4:	add    al,0xf2
  424dc6:	std    
  424dc7:	add    al,0xd3
  424dc9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424dd0:	sub    BYTE PTR [ebx-0x6],dl
  424dd3:	adc    bh,al
  424dd5:	dec    ecx
  424dd6:	and    DWORD PTR [esi-0x2197ecb],eax
  424ddc:	int    0x8d
  424dde:	std    
  424ddf:	int    0xe6
  424de1:	std    
  424de2:	cmp    edx,DWORD PTR [ebx]
  424de4:	add    al,0xf8
  424de6:	call   ebx
  424de8:	jmp    0x424d7c
  424dea:	shr    ecx,cl
  424dec:	sub    BYTE PTR [ebx-0x10],dl
  424def:	inc    ebx
  424df0:	(bad)  
  424df1:	stc    
  424df2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424df9:	ror    BYTE PTR [eax-0x12326980],cl
  424dff:	add    al,0xed
  424e01:	push   eax
  424e02:	leave  
  424e03:	jbe    0x424daa
  424e05:	mov    edx,0xc98080ac
  424e0a:	jbe    0x424dc1
  424e0c:	xchg   eax,ecx
  424e0e:	add    BYTE PTR [eax-0x68528937],0x40
  424e15:	add    BYTE PTR [eax-0x51068937],0x30
  424e1c:	test   BYTE PTR [eax-0x4a028937],al
  424e22:	lods   al,BYTE PTR ds:[esi]
  424e23:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e2a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e31:	add    BYTE PTR [eax-0x78628937],0x80
  424e38:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e3f:	add    BYTE PTR [eax-0x32128937],0x71
  424e46:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e4d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e54:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e5a:	(bad)  
  424e5b:	stc    
  424e5c:	cmp    ebx,edx
  424e5e:	clc    
  424e5f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e65:	repnz popa 
  424e67:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e6d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e74:	add    BYTE PTR [eax+0x3cded312],0x80
  424e7b:	or     cl,0x76
  424e7e:	cmc    
  424e7f:	icebp  
  424e80:	lea    eax,[eax-0x2893680]
  424e86:	jnp    0x424e5c
  424e88:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e8f:	add    BYTE PTR [eax-0x32068933],0x96
  424e96:	std    
  424e97:	ss dec eax
  424e99:	pushf  
  424e9a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424ea1:	int    0xe3
  424ea3:	push   esi
  424ea4:	jp     0x424ea5
  424ea6:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424ead:	int    0x76
  424eaf:	std    
  424eb0:	xchg   DWORD PTR [esi-0x78],esi
  424eb3:	int    0x96
  424eb5:	std    
  424eb6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424ebc:	xor    ch,cl
  424ebe:	jbe    0x424ed1
  424ec0:	int    0x96
  424ec2:	in     eax,dx
  424ec3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424ec7:	cmp    BYTE PTR [ebx],0xd2
  424eca:	int    0x96
  424ecc:	mov    ebp,0xe261d253
  424ed1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ed7:	jbe    0x424e8e
  424ed9:	xchg   DWORD PTR [ebx],edx
  424edb:	popa   
  424edc:	fist   WORD PTR [eax+eax*4-0x80]
  424ee0:	xor    esi,ecx
  424ee2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424ee8:	int    0xd6
  424eea:	xor    ch,cl
  424eec:	out    0x9d,al
  424eee:	adc    bh,bl
  424ef0:	mov    DWORD PTR [ecx-0x80],esi
  424ef3:	sub    BYTE PTR [ebx],0xf1
  424ef6:	int    0x76
  424ef8:	xchg   ebp,eax
  424ef9:	adc    bh,bl
  424efb:	mov    dh,0x2c
  424efd:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424f04:	clc    
  424f05:	int    0x96
  424f07:	icebp  
  424f08:	push   esi
  424f09:	out    0x1e,al
  424f0b:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f12:	icebp  
  424f13:	adc    dh,bl
  424f15:	pop    es
  424f16:	push   edx
  424f17:	add    BYTE PTR [eax+0x72f9943],0x63
  424f1e:	add    BYTE PTR [eax],al
  424f20:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f26:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f2d:	pop    ebx
  424f2e:	cwde   
  424f2f:	call   0x8043:0xd9ed76c9
  424f36:	or     cl,0x76
  424f39:	adc    DWORD PTR [edx+0x7e],esi
  424f3c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f43:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f4a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f51:	add    BYTE PTR [eax-0x275a8937],0x58
  424f58:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f5f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f66:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f6d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f74:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f7b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f82:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f89:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f90:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f97:	add    BYTE PTR [eax-0x32528933],0x8d
  424f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f9f:	dec    ebp
  424fa0:	bound  ebp,QWORD PTR [ebx]
  424fa2:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424fa9:	dec    ebp
  424faa:	pop    ds
  424fab:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fb1:	pop    edi
  424fb2:	xchg   ecx,eax
  424fb3:	mov    bh,0x7e
  424fb5:	stc    
  424fb6:	xor    edi,DWORD PTR [ebp-0x33]
  424fb9:	jbe    0x424fb8
  424fbb:	int    0x96
  424fbd:	stc    
  424fbe:	sub    edx,edx
  424fc0:	int    0x96
  424fc2:	cmc    
  424fc3:	dec    ebp
  424fc4:	inc    edi
  424fc5:	outs   dx,DWORD PTR ds:[esi]
  424fc6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424fcd:	xor    edx,edx
  424fcf:	int    0x96
  424fd1:	in     eax,dx
  424fd2:	push   ebx
  424fd3:	sar    BYTE PTR [ebx],cl
  424fd5:	fisubr DWORD PTR [ecx-0x27]
  424fd8:	ret    
  424fd9:	add    BYTE PTR [eax],al
  424fdb:	clc    
  424fdc:	test   ebp,0x72c34c96
  424fe2:	push   ds
  424fe3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fea:	int    0xd6
  424fec:	mov    ch,0x33
  424fee:	leave  
  424fef:	das    
  424ff0:	sar    DWORD PTR [ecx+0x69],1
  424ff3:	fisttp DWORD PTR [edx]
  424ff5:	xchg   ecx,eax
  424ff6:	mov    ebx,ebp
  424ff8:	popa   
  424ff9:	add    BYTE PTR [eax-0x6a893680],0x9b
  425000:	push   esp
  425001:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  425008:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  42500f:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425016:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42501d:	pop    ebp
  42501e:	call   0xcdf4:0xf880806f
  425025:	xchg   esi,eax
  425026:	lods   eax,DWORD PTR ds:[esi]
  425027:	int    0xa6
  425029:	mov    BYTE PTR [ebx-0x2e],dl
  42502c:	int    0x96
  42502e:	popf   
  42502f:	xor    edx,edx
  425031:	int    0x96
  425033:	xchg   ebp,eax
  425034:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425036:	push   eax
  425037:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42503e:	mov    BYTE PTR [eax+0x2c],bl
  425041:	ret    0xafd
  425044:	jbe    0x424fdb
  425046:	int    0x76
  425048:	icebp  
  425049:	int    0x96
  42504b:	or     eax,0xf3f7f534
  425050:	int    0x96
  425052:	xchg   ebp,eax
  425053:	xor    al,0x23
  425055:	inc    esp
  425056:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42505a:	inc    esi
  42505b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425062:	rol    esi,0x80
  425065:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42506c:	cmp    ebx,edx
  42506e:	clc    
  42506f:	hlt    
  425070:	int    0x96
  425072:	gs mov edi,0xc3d9
  425078:	ss aaa 
  42507a:	push   esi
  42507b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425082:	add    BYTE PTR [eax],al
  425084:	xchg   DWORD PTR [ebp-0x33],edi
  425087:	jbe    0x425086
  425089:	int    0x96
  42508b:	stc    
  42508c:	sub    edx,edx
  42508e:	int    0x96
  425090:	cmc    
  425091:	dec    ebp
  425092:	inc    edi
  425093:	outs   dx,DWORD PTR ds:[esi]
  425094:	add    BYTE PTR [eax-0x69322dcd],0x11
  42509b:	xor    edx,edx
  42509d:	int    0x96
  42509f:	in     eax,dx
  4250a0:	push   ebx
  4250a1:	sar    BYTE PTR [ebx],cl
  4250a3:	(bad)  
  4250a5:	hlt    
  4250a6:	int    0x96
  4250a8:	dec    esp
  4250a9:	xor    esi,ecx
  4250ab:	int    0x76
  4250ad:	mov    ebp,0x33b5a6cd
  4250b2:	leave  
  4250b3:	das    
  4250b4:	rol    ebp,1
  4250b6:	int    0xdb
  4250b8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250be:	das    
  4250bf:	pop    es
  4250c0:	pop    esp
  4250c1:	add    BYTE PTR [eax],al
  4250c3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250c9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250cf:	in     eax,dx
  4250d0:	jo     0x42509b
  4250d2:	jbe    0x4250a4
  4250d4:	xchg   ecx,eax
  4250d5:	aaa    
  4250d6:	ficom  WORD PTR [ebx]
  4250d8:	pop    ebp
  4250d9:	mov    ebp,0xa25230a
  4250de:	jbe    0x425135
  4250e0:	leave  
  4250e1:	jbe    0x425140
  4250e3:	mov    esi,0xa13de37
  4250e8:	jbe    0x42514f
  4250ea:	leave  
  4250eb:	jbe    0x42515a
  4250ed:	fidiv  WORD PTR [edi]
  4250ef:	ficom  WORD PTR [ebx]
  4250f1:	or     dh,BYTE PTR [esi+0x75]
  4250f4:	pop    ebx
  4250f5:	leave  
  4250f6:	jbe    0x425175
  4250f8:	scas   al,BYTE PTR es:[edi]
  4250f9:	aaa    
  4250fa:	ficom  WORD PTR [ebx]
  4250fc:	or     dh,BYTE PTR [esi+0xd]
  4250ff:	cwde   
  425100:	call   0xde37:0x96f176c9
  425107:	adc    ecx,DWORD PTR [edx]
  425109:	jbe    0x4250a0
  42510b:	cmp    ebx,edx
  42510d:	cmp    eax,DWORD PTR [eax]
  42510f:	pop    edi
  425110:	dec    ecx
  425111:	and    DWORD PTR [esi-0x628936cb],eax
  425117:	out    0x37,al
  425119:	ficom  WORD PTR [ebx]
  42511b:	jp     0x425127
  42511d:	jbe    0x4250c4
  42511f:	int    0xd3
  425121:	or     dl,BYTE PTR [esi-0x4a19f513]
  425127:	iret   
  425128:	xchg   ecx,eax
  425129:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425130:	push   ebx
  425131:	ror    bh,cl
  425133:	je     0x4250fc
  425135:	ror    ch,1
  425137:	xor    ch,cl
  425139:	pushf  
  42513a:	test   BYTE PTR [edi],ch
  42513c:	inc    ebp
  42513d:	loop   0x4250d1
  42513f:	shr    esp,cl
  425141:	xchg   edx,eax
  425142:	int    0x1c
  425144:	int    0x6c
  425146:	test   BYTE PTR [ebx],bh
  425148:	ins    DWORD PTR es:[edi],dx
  425149:	adc    bh,bl
  42514b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42514c:	mov    esi,0xf1534229
  425151:	or     dl,BYTE PTR [esi-0x6893207]
  425157:	xchg   DWORD PTR [ebp-0x2d],ebp
  42515a:	in     eax,0x28
  42515c:	inc    ebx
  42515d:	jbe    0x4251ab
  42515f:	das    
  425160:	or     BYTE PTR [edi-0x327f7f80],bh
  425166:	jbe    0x425161
  425168:	add    al,0xb6
  42516a:	mov    ebp,0x11e60a80
  42516f:	int    0x76
  425171:	stc    
  425172:	push   es
  425173:	ins    DWORD PTR es:[edi],dx
  425174:	aam    0xb6
  425176:	cmp    ebp,DWORD PTR [ebp+0xa]
  425179:	out    0xf5,al
  42517b:	int    0x96
  42517d:	mov    ebp,0xcf88a6cd
  425182:	fs xor ch,cl
  425185:	xchg   esi,eax
  425186:	mov    BYTE PTR [edi-0x5269f527],al
  42518c:	retf   0x922
  42518f:	xchg   esi,eax
  425190:	add    ch,cl
  425192:	xchg   esi,eax
  425193:	stc    
  425194:	xchg   ecx,ebx
  425196:	retf   0x2014
  425199:	int    0xa6
  42519b:	lods   eax,DWORD PTR ds:[esi]
  42519c:	or     DWORD PTR [ebx],ebx
  42519e:	retf   0x96
  4251a1:	int    0xa6
  4251a3:	stc    
  4251a4:	xchg   ecx,esp
  4251a6:	int    0xe6
  4251a8:	mov    BYTE PTR [ecx],cl
  4251aa:	adc    al,0x43
  4251ac:	int    0x96
  4251ae:	cmc    
  4251af:	ins    BYTE PTR es:[edi],dx
  4251b0:	add    al,0xea
  4251b2:	std    
  4251b3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251b9:	push   ebx
  4251ba:	sar    BYTE PTR [ebx],cl
  4251bc:	ror    DWORD PTR [edx],cl
  4251be:	jbe    0x4251b5
  4251c0:	push   ecx
  4251c1:	(bad)  
  4251c2:	cmc    
  4251c3:	int    0x96
  4251c5:	cmc    
  4251c6:	add    al,0x11
  4251c8:	call   ebx
  4251ca:	repz xchg edx,eax
  4251cc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251d2:	xchg   esi,eax
  4251d3:	stc    
  4251d4:	inc    ebx
  4251d5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251db:	int    0x76
  4251dd:	adc    ebp,ecx
  4251df:	xchg   esi,eax
  4251e0:	stc    
  4251e1:	int    0xa6
  4251e3:	mov    ebp,0xcffdad04
  4251e8:	test   cl,dh
  4251ea:	int    0x96
  4251ec:	stc    
  4251ed:	iret   
  4251ee:	adc    al,0x5b
  4251f0:	int    0xa6
  4251f2:	dec    esp
  4251f3:	shl    ebx,cl
  4251f5:	sub    BYTE PTR [ebx-0x2e],dl
  4251f8:	cmp    edx,ebx
  4251fa:	or     dh,BYTE PTR [esi+0x11]
  4251fd:	push   ecx
  4251fe:	(bad)  
  4251ff:	adc    ebp,ecx
  425201:	xchg   esi,eax
  425202:	adc    DWORD PTR [ecx+edx*1],eax
  425205:	call   ebx
  425207:	repz xchg edx,eax
  425209:	shr    DWORD PTR [ebp-0x322dacd8],cl
  42520f:	xchg   esi,eax
  425210:	stc    
  425211:	xchg   edx,ebx
  425213:	xor    esp,edx
  425215:	or     dh,BYTE PTR [esi-0x43]
  425218:	inc    ebx
  425219:	lds    ebp,FWORD PTR [edi]
  42521b:	pop    es
  42521c:	outs   dx,DWORD PTR ds:[esi]
  42521d:	add    BYTE PTR [eax],al
  42521f:	add    ch,cl
  425221:	jbe    0x425210
  425223:	int    0x96
  425225:	mov    ch,0x4
  425227:	jmp    0xd384:0xd2046cfd
  42522e:	mov    ebp,0x3bd25328
  425233:	ror    ebp,cl
  425235:	popf   
  425236:	int    0xf1
  425238:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42523e:	in     eax,0x28
  425240:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425246:	or     ah,BYTE PTR [esi-0x12697613]
  42524c:	add    al,0xe6
  42524e:	in     eax,dx
  42524f:	xchg   BYTE PTR [edi],ch
  425251:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425257:	test   al,0x63
  425259:	retf   
  42525a:	ror    BYTE PTR [eax-0x12326980],cl
  425260:	add    al,0xed
  425262:	adc    al,0xcd
  425264:	jbe    0x4251ee
  425266:	leave  
  425267:	jbe    0x42527a
  425269:	dec    ecx
  42526a:	and    DWORD PTR [esi-0x28936cb],eax
  425270:	inc    ecx
  425271:	and    DWORD PTR [esi+0x5b80cd35],eax
  425277:	cwde   
  425278:	or     dh,BYTE PTR [esi-0x7]
  42527b:	leave  
  42527c:	jbe    0x425273
  42527e:	into   
  42527f:	and    DWORD PTR [esi+0x76c99a35],eax
  425285:	in     eax,dx
  425286:	inc    esi
  425287:	sbb    DWORD PTR [ebp-0x22932de],esi
  42528d:	int    0x8d
  42528f:	std    
  425290:	sar    bh,0x5d
  425293:	shl    DWORD PTR [ecx],1
  425295:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42529b:	repnz sub BYTE PTR [ebx],bh
  42529e:	adc    ebx,edx
  4252a0:	out    dx,eax
  4252a1:	xchg   edx,eax
  4252a2:	push   ebx
  4252a3:	add    cl,ch
  4252a5:	lea    edx,[ecx]
  4252a7:	int    0x96
  4252a9:	adc    DWORD PTR [ebx],edi
  4252ab:	jge    0x4252e8
  4252ad:	(bad)  
  4252af:	jmp    0x425243
  4252b1:	shr    edx,cl
  4252b3:	sub    BYTE PTR [ebx+0x13],dl
  4252b6:	das    
  4252b7:	rol    DWORD PTR [edx],1
  4252b9:	jmp    0x42525a
  4252bb:	add    BYTE PTR [eax-0x6723280],0xcd
  4252c2:	xchg   esi,eax
  4252c3:	stc    
  4252c4:	cmp    ebx,ecx
  4252c6:	shr    edx,cl
  4252c8:	sub    BYTE PTR [ebx],bh
  4252ca:	jge    0x42529f
  4252cc:	jmp    0x425260
  4252ce:	push   ebx
  4252cf:	adc    ecx,ebp
  4252d1:	xchg   esi,eax
  4252d2:	std    
  4252d3:	int    0xa6
  4252d5:	std    
  4252d6:	cmp    esi,ecx
  4252d8:	cmp    esp,ecx
  4252da:	shl    ebx,cl
  4252dc:	xchg   edx,eax
  4252dd:	shl    ebp,cl
  4252df:	sub    BYTE PTR [ebx-0x2b],dl
  4252e2:	push   es
  4252e3:	adc    ecx,ebp
  4252e5:	xchg   esi,eax
  4252e6:	stc    
  4252e7:	int    0x8d
  4252e9:	stc    
  4252ea:	aam    0x58
  4252ec:	cmp    esi,eax
  4252ee:	shl    edx,cl
  4252f0:	sub    BYTE PTR [ebx],bh
  4252f2:	icebp  
  4252f3:	shl    ebx,cl
  4252f5:	xchg   edx,eax
  4252f6:	push   ebx
  4252f7:	jecxz  0x4252c6
  4252f9:	(bad)  
  4252fa:	std    
  4252fb:	int    0xa6
  4252fd:	std    
  4252fe:	cmp    edi,DWORD PTR [ebp+0x3b]
  425301:	loope  0x4252d6
  425303:	jmp    0x425297
  425305:	shl    ebp,cl
  425307:	sub    BYTE PTR [ebx+0xc],dl
  42530a:	aad    0xf3
  42530c:	int    0x8d
  42530e:	in     eax,dx
  42530f:	int    0xa6
  425311:	in     eax,dx
  425312:	cmp    edi,DWORD PTR [ebp+0x3b]
  425315:	loope  0x4252ea
  425317:	jmp    0x4252ab
  425319:	shl    ebp,cl
  42531b:	sub    BYTE PTR [ebx+0xc],dl
  42531e:	cmp    esp,ebx
  425320:	in     al,dx
  425321:	sub    al,0x3b
  425323:	lock shl edx,cl
  425326:	sub    BYTE PTR [ebx],bh
  425328:	icebp  
  425329:	shl    ebx,cl
  42532b:	xchg   edx,eax
  42532c:	push   ebx
  42532d:	jecxz  0x4252fc
  42532f:	(bad)  
  425330:	std    
  425331:	int    0xa6
  425333:	std    
  425334:	cmp    edi,DWORD PTR [ebp+0x3b]
  425337:	loope  0x42530c
  425339:	jmp    0x4252cd
  42533b:	shl    ebp,cl
  42533d:	sub    BYTE PTR [ebx+0xc],dl
  425340:	aad    0xf3
  425342:	or     dl,BYTE PTR [esi-0x2723207]
  425348:	int    0x96
  42534a:	std    
  42534b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42534e:	(bad)  
  425350:	jmp    0x4252e4
  425352:	shr    edx,cl
  425354:	sub    BYTE PTR [ebx+0x13],dl
  425357:	xchg   DWORD PTR [edx],eax
  425359:	int    0x8d
  42535b:	cmc    
  42535c:	int    0x96
  42535e:	cmc    
  42535f:	cmp    ebx,ecx
  425361:	cmp    edi,DWORD PTR [ebp-0x2d]
  425364:	jmp    0x1353:0x92ebd328
  42536b:	int    0x96
  42536d:	std    
  42536e:	int    0xa6
  425370:	std    
  425371:	cmp    esi,ecx
  425373:	cmp    esp,ecx
  425375:	shl    ebp,cl
  425377:	sub    bl,dl
  425379:	repz xchg edx,eax
  42537b:	push   ebx
  42537c:	aad    0x33
  42537e:	adc    eax,DWORD PTR [ebx+0x2]
  425381:	das    
  425382:	pop    es
  425383:	pop    edx
  425384:	add    BYTE PTR [eax],al
  425386:	add    ch,cl
  425388:	jbe    0x425383
  42538a:	int    0x8d
  42538c:	mov    BYTE PTR [edx-0x327ef558],ch
  425392:	jbe    0x42538d
  425394:	arpl   bx,cx
  425396:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42539d:	ins    DWORD PTR es:[edi],dx
  42539e:	pop    esi
  42539f:	jbe    0x4253ed
  4253a1:	aam    0x3a
  4253a3:	pop    esi
  4253a4:	jbe    0x42532e
  4253a6:	fdiv   DWORD PTR [edx]
  4253a8:	retf   0x8814
  4253ab:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253b1:	das    
  4253b2:	adc    dh,bl
  4253b4:	in     eax,dx
  4253b5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253bc:	lea    ebp,[edi]
  4253be:	retf   0x2f96
  4253c1:	or     DWORD PTR [eax+ecx*4],edx
  4253c4:	ins    BYTE PTR es:[edi],dx
  4253c5:	inc    ebx
  4253c6:	jbe    0x425350
  4253c8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253cf:	stc    
  4253d0:	std    
  4253d1:	add    BYTE PTR [eax],al
  4253d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253d4:	ror    BYTE PTR [eax-0x12326980],cl
  4253da:	adc    ch,ch
  4253dc:	cmp    al,0x84
  4253de:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253e5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253eb:	jbe    0x4253ea
  4253ed:	inc    ecx
  4253ee:	and    DWORD PTR [esi-0x128936cb],eax
  4253f4:	dec    ecx
  4253f5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253fb:	jno    0x4253b3
  4253fd:	cli    
  4253fe:	arpl   bp,cx
  425400:	jbe    0x425413
  425402:	int    0x8d
  425404:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  42540a:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425414:	repnz sub BYTE PTR [ebx-0x2d],dl
  425418:	or     dh,BYTE PTR [esi-0x7]
  42541b:	leave  
  42541c:	jbe    0x4253c3
  42541e:	into   
  42541f:	and    DWORD PTR [esi-0x628936cb],eax
  425425:	inc    esi
  425426:	sbb    DWORD PTR [ebp-0x528936de],esi
  42542c:	mov    BYTE PTR [eax-0x34327f80],al
  425432:	int    0x76
  425434:	std    
  425435:	int    0x8d
  425437:	std    
  425438:	cmp    esi,eax
  42543a:	shl    edx,cl
  42543c:	sub    BYTE PTR [ebx],bh
  42543e:	jns    0x425413
  425440:	mov    ebp,0xcdd35392
  425445:	lea    edx,[ecx]
  425447:	int    0x96
  425449:	adc    DWORD PTR [ebx],edi
  42544b:	(bad)  
  42544d:	(bad)  
  42544f:	jmp    0x4253e3
  425451:	shr    edx,cl
  425453:	sub    BYTE PTR [ebx+0x13],dl
  425456:	das    
  425457:	rcl    ebx,1
  425459:	in     al,dx
  42545a:	outs   dx,BYTE PTR ds:[esi]
  42545b:	int    0x76
  42545d:	cmc    
  42545e:	int    0x8d
  425460:	cmc    
  425461:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425467:	push   ebx
  425468:	sar    DWORD PTR [ebx],cl
  42546a:	lds    ecx,FWORD PTR [edx]
  42546c:	jbe    0x425467
  42546e:	iret   
  42546f:	jbe    0x42546a
  425471:	jo     0x425430
  425473:	mov    ecx,0xa0000fe
  425478:	jbe    0x425473
  42547a:	int    0x76
  42547c:	stc    
  42547d:	int    0x8d
  42547f:	cmc    
  425480:	or     al,BYTE PTR ds:0xfc9dcf
  425486:	add    ch,cl
  425488:	jbe    0x425487
  42548a:	int    0x8d
  42548c:	std    
  42548d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425490:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425497:	push   ebx
  425498:	rol    DWORD PTR [edi+0x760af576],cl
  42549e:	cmc    
  42549f:	int    0x76
  4254a1:	in     eax,dx
  4254a2:	int    0x8d
  4254a4:	in     eax,dx
  4254a5:	cmp    esi,eax
  4254a7:	shl    edx,cl
  4254a9:	sub    BYTE PTR [ebx],bh
  4254ab:	jns    0x425480
  4254ad:	mov    ebp,0xcdd35392
  4254b2:	(bad)  
  4254b3:	std    
  4254b4:	int    0x96
  4254b6:	std    
  4254b7:	cmp    ecx,DWORD PTR [edi]
  4254b9:	cmp    ebx,ecx
  4254bb:	shr    ebx,cl
  4254bd:	xchg   edx,eax
  4254be:	shr    edx,cl
  4254c0:	sub    BYTE PTR [ebx+0x13],dl
  4254c3:	xor    edx,ebx
  4254c5:	int    0x8d
  4254c7:	cmc    
  4254c8:	inc    ebx
  4254c9:	jge    0x4254a3
  4254cb:	mov    bl,0xcd
  4254cd:	jbe    0x425484
  4254cf:	int    0x8d
  4254d1:	mov    ch,0x3b
  4254d3:	jns    0x425510
  4254d5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254dc:	push   ebx
  4254dd:	ror    DWORD PTR [edx],cl
  4254df:	jbe    0x4254da
  4254e1:	leave  
  4254e2:	jbe    0x4254d1
  4254e4:	bound  ebx,QWORD PTR [edi]
  4254e6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254ec:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254f3:	jbe    0x42549a
  4254f5:	cmp    ecx,ecx
  4254f7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254fd:	jmp    0x425491
  4254ff:	push   ebx
  425500:	jge    0x4254cf
  425502:	jbe    0x4254fd
  425504:	aad    0xbd
  425506:	or     dh,BYTE PTR [esi-0x63]
  425509:	int    0x76
  42550b:	mov    dl,cl
  42550d:	or     BYTE PTR [ecx],0x76
  425510:	in     al,dx
  425511:	retf   0xec76
  425514:	int    0x8d
  425516:	stc    
  425517:	das    
  425518:	pop    ecx
  425519:	ins    DWORD PTR es:[edi],dx
  42551a:	cmp    edx,ebx
  42551c:	or     dh,BYTE PTR [esi-0xb]
  42551f:	int    0x76
  425521:	in     eax,dx
  425522:	int    0x8d
  425524:	in     eax,dx
  425525:	cmp    edi,DWORD PTR [ecx-0x2d]
  425528:	mov    ebp,0xd3f03b92
  42552d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425531:	int    0x8d
  425533:	cmc    
  425534:	sub    edx,ebx
  425536:	int    0x5
  425538:	push   es
  425539:	popf   
  42553a:	cld    
  42553b:	add    BYTE PTR [eax],al
  42553d:	int    0x8d
  42553f:	popf   
  425540:	cmp    edx,ebx
  425542:	or     dh,BYTE PTR [esi-0x7]
  425545:	int    0x76
  425547:	std    
  425548:	int    0x8d
  42554a:	std    
  42554b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42554e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425555:	push   ebx
  425556:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42555c:	std    
  42555d:	int    0x8d
  42555f:	std    
  425560:	cmp    edi,DWORD PTR [ecx+0x3b]
  425563:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42556a:	push   ebx
  42556b:	sar    DWORD PTR [esi],cl
  42556d:	jbe    0x42551c
  42556f:	int    0x76
  425571:	adc    ebp,ecx
  425573:	lea    edx,[ecx]
  425575:	cmp    esi,eax
  425577:	cmp    edi,DWORD PTR [ecx-0x2d]
  42557a:	repnz sub bl,dl
  42557d:	mov    ebp,0xcdd35392
  425582:	lea    ebp,[ebp+0x62f7d43]
  425588:	imul   eax,DWORD PTR [eax],0x0
  42558b:	add    ch,cl
  42558d:	jbe    0x425544
  42558f:	int    0x8d
  425591:	mov    ch,0x3b
  425593:	jns    0x4255d0
  425595:	lock shl edx,cl
  425598:	sub    bl,dl
  42559a:	mov    ebp,0xd353aa92
  42559f:	int    0x8d
  4255a1:	stc    
  4255a2:	test   al,0x3b
  4255a4:	shl    DWORD PTR [ebx-0x35],cl
  4255a7:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  4255ae:	in     eax,dx
  4255af:	xor    BYTE PTR [ebx],bh
  4255b1:	retf   
  4255b2:	pop    ebx
  4255b3:	call   0xbb05:0x2f888d5e
  4255ba:	add    BYTE PTR [eax+0x2f024380],0x5
  4255c1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255c7:	cwde   
  4255c8:	sub    al,0x5d
  4255ca:	lahf   
  4255cb:	xor    eax,0x8d0a8080
  4255d0:	std    
  4255d1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255d7:	(bad)  
  4255d8:	stc    
  4255d9:	mov    eax,0xe3b813cd
  4255de:	retf   
  4255df:	cmp    eax,DWORD PTR [eax]
  4255e1:	leave  
  4255e2:	jbe    0x4255d9
  4255e4:	adc    al,0x80
  4255e6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255ed:	mov    eax,0xb8fde6cd
  4255f2:	jecxz  0x4255bd
  4255f4:	mov    eax,0xbb2ff93b
  4255f9:	(bad)  
  4255fa:	stc    
  4255fb:	iret   
  4255fc:	dec    esp
  4255fd:	into   
  4255fe:	mov    eax,0xd692de5e
  425603:	pop    edx
  425604:	das    
  425605:	mov    ebx,0xf58d0a89
  42560a:	mov    eax,0x4dd67d43
  42560f:	das    
  425610:	mov    ebx,0xa6cdfd8d
  425615:	mov    BYTE PTR [ecx],al
  425617:	fs push ds
  425619:	adc    ah,0x3b
  42561c:	das    
  42561d:	mov    ebx,0xa6cdfd8d
  425622:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425628:	mov    eax,0x3bb8d3e3
  42562d:	jge    0x4255e7
  42562f:	pop    esi
  425630:	(bad)  
  425631:	cmc    
  425632:	aam    0x23
  425634:	leave  
  425635:	jbe    0x42562c
  425637:	sbb    BYTE PTR [eax+0x76008080],al
  42563d:	stc    
  42563e:	int    0x7d
  425640:	mov    eax,0xb82c8e3b
  425645:	jecxz  0x425612
  425647:	mov    eax,0x82f98d5e
  42564c:	inc    ecx
  42564d:	in     al,dx
  42564e:	dec    edx
  42564f:	add    BYTE PTR [esi+0x11],dh
  425652:	leave  
  425653:	jbe    0x42564a
  425655:	push   ss
  425656:	add    BYTE PTR [eax-0x1944d080],0xfd
  42565d:	int    0xa6
  42565f:	mov    BYTE PTR [ebx],bh
  425661:	retf   
  425662:	pop    esp
  425663:	dec    esp
  425664:	sub    dl,ah
  425666:	push   ss
  425667:	add    BYTE PTR [esi-0x3],dh
  42566a:	add    al,0xe6
  42566c:	cmc    
  42566d:	sbb    BYTE PTR [edi],ch
  42566f:	push   es
  425670:	jb     0x425672
  425672:	add    BYTE PTR [eax],al
  425674:	cmp    ebp,DWORD PTR [ebp-0x56]
  425677:	arpl   bx,cx
  425679:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425680:	jecxz  0x425655
  425682:	mov    eax,0x6d3b7d3b
  425687:	mov    eax,0x2f2c8e43
  42568c:	adc    eax,0x96b9ec6d
  425691:	int    0xed
  425693:	add    al,0xed
  425695:	mov    esp,0xc09a985b
  42569a:	inc    esp
  42569b:	add    dh,dl
  42569d:	mov    ch,cl
  42569f:	adc    DWORD PTR [ebp+0xf90b],edi
  4256a5:	iret   
  4256a6:	js     0x4256da
  4256a8:	or     dh,BYTE PTR [esi+0x25]
  4256ab:	iret   
  4256ac:	js     0x425722
  4256ae:	or     dh,BYTE PTR [esi+0x2d]
  4256b1:	iret   
  4256b2:	js     0x42566c
  4256b4:	or     dh,BYTE PTR [esi+0x35]
  4256b7:	iret   
  4256b8:	pop    es
  4256b9:	or     DWORD PTR [eax+0x760a8080],eax
  4256bf:	cmp    eax,0x804107cf
  4256c4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256cb:	or     eax,0xa808080
  4256d0:	jbe    0x4256a2
  4256d2:	iret   
  4256d3:	pop    es
  4256d4:	out    dx,eax
  4256d5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256dc:	pop    es
  4256dd:	xor    BYTE PTR [ecx+0x760a8080],al
  4256e3:	pop    ebp
  4256e4:	iret   
  4256e5:	pop    es
  4256e6:	inc    edx
  4256e7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256f1:	pop    es
  4256f2:	xchg   esp,eax
  4256f3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256fd:	add    BYTE PTR [eax-0x25c4af33],0xa
  425704:	xchg   esi,eax
  425705:	icebp  
  425706:	or     dl,BYTE PTR [esi-0x6269f56b]
  42570c:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425712:	(bad)  
  425713:	mov    cl,0xde
  425715:	adc    ebx,DWORD PTR [ebp-0x43]
  425718:	or     ah,BYTE PTR [ebx]
  42571a:	and    eax,0xcd0d760a
  42571f:	lea    edi,[ebp-0x33]
  425722:	out    0xd,al
  425724:	cmp    edi,ecx
  425726:	adc    al,BYTE PTR [edx]
  425728:	jnp    0x425761
  42572a:	ficom  WORD PTR [ebx]
  42572c:	das    
  42572d:	inc    ebp
  42572e:	cli    
  42572f:	xchg   edx,eax
  425730:	rcl    DWORD PTR [eax],cl
  425732:	xchg   edx,eax
  425733:	or     ah,dh
  425735:	mov    ch,0xcd
  425737:	out    0x7d,al
  425739:	int    0xa6
  42573b:	or     eax,0x3be1cd
  425740:	cmp    eax,DWORD PTR [ebx]
  425742:	shl    ebp,cl
  425744:	sub    BYTE PTR [ebx-0x10],dl
  425747:	int    0xe6
  425749:	mov    ch,0x61
  42574b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425752:	cld    
  425753:	push   ebx
  425754:	lock or dl,dh
  425757:	stc    
  425758:	das    
  425759:	add    eax,0x808080f2
  42575e:	adc    dh,BYTE PTR [esi-0xf]
  425761:	(bad)  
  425762:	mov    esp,0xeb5f8bbd
  425767:	or     ah,BYTE PTR [ebx]
  425769:	and    eax,0x12958d31
  42576e:	jbe    0x42570d
  425770:	(bad)  
  425771:	mov    esp,0x8d318790
  425776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425777:	int    0x8d
  425779:	jge    0x425748
  42577b:	(bad)  
  42577c:	or     eax,0xcd7de6cd
  425781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425782:	or     eax,0x212113b
  425787:	jnp    0x4257c0
  425789:	ficom  WORD PTR [ebx]
  42578b:	das    
  42578c:	inc    ebp
  42578d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425793:	out    dx,eax
  425794:	xchg   edx,eax
  425795:	cmp    ebx,ebp
  425797:	cmp    eax,DWORD PTR [ebx]
  425799:	push   ebx
  42579a:	or     al,0x53
  42579c:	clc    
  42579d:	add    al,0xd3
  42579f:	add    BYTE PTR [ecx+ebx*4],al
  4257a2:	add    BYTE PTR [edx],cl
  4257a4:	lea    edi,[ebp+0xa]
  4257a7:	(bad)  
  4257a8:	or     eax,0x53f18dcd
  4257ad:	lea    edx,[ebp+0x761223d4]
  4257b3:	icebp  
  4257b4:	mov    edx,DWORD PTR [ebx]
  4257b6:	dec    edx
  4257b7:	stc    
  4257b8:	pop    edi
  4257b9:	sbb    al,bl
  4257bb:	mov    ch,0x6b
  4257bd:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257c3:	(bad)
  4257c6:	std    
  4257c7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257cd:	(bad)  
  4257ce:	icebp  
  4257cf:	(bad)  
  4257d0:	mov    esp,0x76897abd
  4257d5:	xchg   ebp,eax
  4257d6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257dc:	add    al,0x12
  4257de:	mov    dh,0xa5
  4257e0:	jmp    0x4257ec
  4257e2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257e8:	lea    ecx,ds:0xcd7de6cd
  4257ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ef:	or     eax,0x92fc352f
  4257f4:	shr    ebx,cl
  4257f6:	sub    BYTE PTR [ebx],bh
  4257f8:	not    DWORD PTR [ebx-0xc]
  4257fb:	shr    ecx,cl
  4257fd:	xchg   edx,eax
  4257fe:	push   ebx
  4257ff:	lock adc al,BYTE PTR [edx]
  425802:	(bad)  
  425803:	aaa    
  425804:	ficom  WORD PTR [ebx]
  425806:	or     cl,BYTE PTR [ebp+0xa113b7d]
  42580c:	(bad)  
  42580d:	or     eax,0xcd7d8dcd
  425812:	(bad)  
  425813:	or     eax,0xcd7de6cd
  425818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425819:	or     eax,0x212113b
  42581e:	jnp    0x425857
  425820:	ficom  WORD PTR [ebx]
  425822:	das    
  425823:	inc    ebp
  425824:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42582a:	out    dx,eax
  42582b:	xchg   edx,eax
  42582c:	cmp    ebx,ebp
  42582e:	cmp    eax,DWORD PTR [ebx]
  425830:	push   ebx
  425831:	or     al,0x53
  425833:	clc    
  425834:	push   ebx
  425835:	comiss xmm0,DWORD PTR [esi]
  425838:	xor    al,BYTE PTR [eax]
  42583a:	add    BYTE PTR [eax],al
  42583c:	int    0xd6
  42583e:	stc    
  42583f:	push   es
  425840:	imul   DWORD PTR [edi]
  425842:	add    eax,0x808080d1
  425847:	int    0x78
  425849:	fs int 0xe4
  42584c:	push   eax
  42584d:	fadd   QWORD PTR [edi+0x349acdff]
  425853:	int    0x6f
  425855:	and    al,0xcd
  425857:	jp     0x425885
  425859:	int    0xaa
  42585b:	sbb    al,0x87
  42585d:	cdq    
  42585e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425864:	xchg   DWORD PTR [edi],ecx
  425866:	xchg   DWORD PTR [ecx+0xa],edi
  425869:	(bad)  
  42586a:	in     eax,dx
  42586b:	or     dh,BYTE PTR [esi-0x6b]
  42586e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425874:	xchg   DWORD PTR [edx],ecx
  425876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425877:	cmc    
  425878:	cmp    ebx,edx
  42587a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425880:	fcom   st(4)
  425882:	in     al,dx
  425883:	xchg   ebp,ecx
  425885:	jbe    0x42581c
  425887:	int    0xa6
  425889:	or     eax,0x5b24bb2f
  42588e:	inc    ebx
  42588f:	call   0x14aa:0x436b771c
  425896:	ja     0x425840
  425898:	int    0x84
  42589a:	mov    al,0xcd
  42589c:	xchg   esi,eax
  42589d:	mov    ch,cl
  42589f:	and    al,0x1f
  4258a1:	or     dl,BYTE PTR [esi-0x30867803]
  4258a7:	xchg   esi,eax
  4258a8:	sbb    eax,0x9633a987
  4258ad:	mov    BYTE PTR [edx],cl
  4258af:	jbe    0x4258c2
  4258b1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258b7:	push   ebx
  4258b8:	add    BYTE PTR [eax-0x2693280],0x4
  4258bf:	pusha  
  4258c0:	adc    dh,0x28
  4258c3:	jo     0x425892
  4258c5:	jbe    0x42593c
  4258c7:	int    0x54
  4258c9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258cf:	int    0xd6
  4258d1:	stc    
  4258d2:	int    0x8d
  4258d4:	in     eax,dx
  4258d5:	push   es
  4258d6:	ins    DWORD PTR es:[edi],dx
  4258d7:	aam    0x85
  4258d9:	int    0x76
  4258db:	std    
  4258dc:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258e3:	std    
  4258e4:	test   BYTE PTR [eax],al
  4258e6:	lea    esi,[ebp-0x69321c2a]
  4258ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258ed:	push   edx
  4258ee:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258f4:	or     dh,0xaa
  4258f7:	int    0x79
  4258f9:	test   al,0x63
  4258fb:	retf   
  4258fc:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  425903:	int    0xd6
  425905:	mov    BYTE PTR [eax],al
  425907:	pop    ecx
  425908:	adc    DWORD PTR [ecx+0x76cd8080],eax
  42590e:	mov    BYTE PTR [ebp+0xfee4],bh
  425914:	int    0x7
  425916:	cmp    eax,0x3b808081
  42591b:	retf   
  42591c:	pop    esi
  42591d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425923:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425929:	fwait
  42592a:	sbb    eax,0x5b808081
  42592f:	cwde   
  425930:	int    0x11
  425932:	pop    ebp
  425933:	lahf   
  425934:	xor    eax,0x4eec8080
  425939:	cmp    edi,DWORD PTR [ebp-0x48]
  42593c:	jecxz  0x425909
  42593e:	mov    eax,0xd2044a0a
  425943:	xchg   edx,eax
  425944:	add    al,0x79
  425946:	xchg   edx,eax
  425947:	das    
  425948:	mov    ebx,0x7d43b84e
  42594d:	(bad)  
  42594e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425952:	mov    eax,0x8cd920a
  425957:	sbb    eax,0x63808081
  42595c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425962:	sbb    eax,0xd3808081
  425967:	jmp    0xed0be0f2
  42596c:	dec    edx
  42596d:	add    DWORD PTR [edx],eax
  42596f:	add    DWORD PTR [ecx],0xffffffeb
  425972:	mov    esi,0x526c8809
  425977:	retf   0x14a
  42597a:	cli    
  42597b:	sbb    dh,dl
  42597d:	adc    BYTE PTR [ecx-0x80],bh
  425980:	or     ch,0x7
  425983:	sbb    eax,0x87808081
  425988:	leave  
  425989:	stos   BYTE PTR es:[edi],al
  42598a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425990:	mov    al,0x80
  425992:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425999:	and    eax,0x76c99a98
  42599e:	cmc    
  42599f:	xchg   ecx,eax
  4259a0:	aaa    
  4259a1:	ficom  WORD PTR [ebx]
  4259a3:	or     cl,BYTE PTR [ebp-0x12893607]
  4259a9:	(bad)  
  4259aa:	aaa    
  4259ab:	ficom  WORD PTR [ebx]
  4259ad:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259b3:	jbe    0x425972
  4259b5:	dec    ecx
  4259b6:	and    DWORD PTR [esi-0x28936cb],eax
  4259bc:	inc    ecx
  4259bd:	and    DWORD PTR [esi-0xe8936cb],eax
  4259c3:	out    0x37,al
  4259c5:	ficom  WORD PTR [ebx]
  4259c7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259cd:	fidiv  WORD PTR [edi]
  4259cf:	ficom  WORD PTR [ebx]
  4259d1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259d7:	int    0x96
  4259d9:	adc    DWORD PTR [edi],ebp
  4259db:	inc    ebp
  4259dc:	icebp  
  4259dd:	xchg   edx,eax
  4259de:	shl    ebx,cl
  4259e0:	xchg   edx,eax
  4259e1:	int    0x96
  4259e3:	in     eax,dx
  4259e4:	int    0xd6
  4259e6:	adc    ebx,edx
  4259e8:	jmp    0x4229:0xbea6c328
  4259ef:	cmp    ecx,ecx
  4259f1:	cmp    esi,edi
  4259f3:	push   ebx
  4259f4:	jns    0x425a00
  4259f6:	jbe    0x42599d
  4259f8:	iret   
  4259f9:	jbe    0x4259a8
  4259fb:	or     dh,BYTE PTR [esi+0xd]
  4259fe:	int    0x76
  425a00:	or     eax,0x8621d169
  425a05:	xor    eax,0x37b680c9
  425a0a:	ficom  WORD PTR [ebx]
  425a0c:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a10:	(bad)  
  425a11:	std    
  425a12:	int    0x96
  425a14:	std    
  425a15:	cmp    ecx,DWORD PTR [edi]
  425a17:	shr    ebx,cl
  425a19:	xchg   edx,eax
  425a1a:	sar    bh,0x9c
  425a1d:	cmp    esi,ecx
  425a1f:	shr    edx,cl
  425a21:	sub    BYTE PTR [ebx+0x13],dl
  425a24:	int    0x96
  425a26:	std    
  425a27:	int    0xa6
  425a29:	std    
  425a2a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a30:	popf   
  425a31:	shl    ebp,cl
  425a33:	sub    BYTE PTR [ebx-0x2b],dl
  425a36:	xchg   DWORD PTR [ebx],edx
  425a38:	int    0x96
  425a3a:	std    
  425a3b:	int    0xa6
  425a3d:	std    
  425a3e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a44:	popf   
  425a45:	shl    ebp,cl
  425a47:	sub    BYTE PTR [ebx-0x2b],dl
  425a4a:	xchg   DWORD PTR [ebx],edx
  425a4c:	int    0x96
  425a4e:	std    
  425a4f:	int    0xa6
  425a51:	std    
  425a52:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a58:	popf   
  425a59:	shl    ebp,cl
  425a5b:	sub    BYTE PTR [ebx-0x2b],dl
  425a5e:	xchg   DWORD PTR [ebx],edx
  425a60:	or     cl,bh
  425a62:	nop
  425a63:	add    BYTE PTR [eax],al
  425a65:	add    ch,cl
  425a67:	lea    edi,[ebp+0x3bbd96cd]
  425a6d:	icebp  
  425a6e:	cmp    ecx,DWORD PTR [edi]
  425a70:	shr    edx,cl
  425a72:	sub    bl,dl
  425a74:	jmp    0x425a08
  425a76:	push   ebx
  425a77:	adc    ecx,ebp
  425a79:	xchg   esi,eax
  425a7a:	mov    ebp,0x3bbda6cd
  425a7f:	cdq    
  425a80:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a86:	in     eax,0x28
  425a88:	push   ebx
  425a89:	aad    0xa
  425a8b:	int3   
  425a8c:	pop    ss
  425a8d:	aam    0x0
  425a8f:	add    BYTE PTR [eax],al
  425a91:	int    0x8d
  425a93:	dec    esp
  425a94:	int    0x89
  425a96:	int    0x96
  425a98:	std    
  425a99:	int    0xa6
  425a9b:	std    
  425a9c:	int    0x7e
  425a9e:	jo     0x425adb
  425aa0:	popf   
  425aa1:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425aa7:	in     eax,0x28
  425aa9:	push   ebx
  425aaa:	aad    0xa
  425aac:	int3   
  425aad:	pop    ss
  425aae:	aam    0x0
  425ab0:	add    BYTE PTR [eax],al
  425ab2:	int    0x8d
  425ab4:	xor    ch,cl
  425ab6:	xchg   esi,eax
  425ab7:	xor    BYTE PTR [ebx],bh
  425ab9:	icebp  
  425aba:	cmp    ecx,DWORD PTR [edi]
  425abc:	shr    edx,cl
  425abe:	sub    bl,dl
  425ac0:	jmp    0x425a54
  425ac2:	push   ebx
  425ac3:	adc    ecx,ebp
  425ac5:	xchg   esi,eax
  425ac6:	std    
  425ac7:	int    0xa6
  425ac9:	std    
  425aca:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ad0:	cdq    
  425ad1:	shl    ebx,cl
  425ad3:	xchg   edx,eax
  425ad4:	shl    ebp,cl
  425ad6:	sub    BYTE PTR [ebx-0x2b],dl
  425ad9:	int    0xa6
  425adb:	std    
  425adc:	cmp    edi,DWORD PTR [ecx-0x2d]
  425adf:	mov    ebp,0xfff40492
  425ae4:	shl    ebp,cl
  425ae6:	sub    BYTE PTR [ebx-0x3b],dl
  425ae9:	xchg   ecx,esi
  425aeb:	int    0x76
  425aed:	adc    al,0xa
  425aef:	int3   
  425af0:	pop    ss
  425af1:	aam    0x0
  425af3:	add    BYTE PTR [eax],al
  425af5:	int    0x8d
  425af7:	adc    al,0x4
  425af9:	add    bh,bh
  425afb:	shl    edx,cl
  425afd:	sub    BYTE PTR [ebx],bh
  425aff:	jns    0x425ad4
  425b01:	mov    ebp,0xcdd35392
  425b06:	(bad)  
  425b07:	std    
  425b08:	int    0x96
  425b0a:	std    
  425b0b:	add    al,0xfb
  425b0d:	(bad)  
  425b0e:	cmp    ecx,DWORD PTR [edi]
  425b10:	shr    edx,cl
  425b12:	sub    bl,dl
  425b14:	jmp    0x425aa8
  425b16:	push   ebx
  425b17:	adc    ecx,ebp
  425b19:	xchg   esi,eax
  425b1a:	std    
  425b1b:	int    0xa6
  425b1d:	std    
  425b1e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b24:	repz xchg edx,eax
  425b26:	shl    ebp,cl
  425b28:	sub    BYTE PTR [ebx-0x2b],dl
  425b2b:	xchg   DWORD PTR [ebx],edx
  425b2d:	int    0x96
  425b2f:	std    
  425b30:	int    0xa6
  425b32:	std    
  425b33:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b39:	in     eax,0x28
  425b3b:	shl    ebx,cl
  425b3d:	xchg   edx,eax
  425b3e:	push   ebx
  425b3f:	aad    0x87
  425b41:	adc    ecx,DWORD PTR [edx]
  425b43:	add    eax,0xd4cf
  425b48:	add    bh,cl
  425b4a:	push   es
  425b4b:	nop
  425b4c:	add    BYTE PTR [eax],al
  425b4e:	add    BYTE PTR [eax-0x33],dh
  425b51:	jbe    0x425b50
  425b53:	int    0x8d
  425b55:	std    
  425b56:	sar    bh,0x63
  425b59:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b5c:	or     al,0xd3
  425b5e:	mov    ebp,0x28f2d392
  425b63:	push   ebx
  425b64:	shl    DWORD PTR [eax-0x33],cl
  425b67:	jbe    0x425b95
  425b69:	iret   
  425b6a:	or     DWORD PTR [ecx-0x80],eax
  425b6d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b74:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b7b:	int    0x8d
  425b7d:	push   esp
  425b7e:	or     al,BYTE PTR [ecx-0x32528933]
  425b84:	lea    esi,[ebp-0x6d82bad1]
  425b8a:	shr    ebx,cl
  425b8c:	xchg   edx,eax
  425b8d:	int    0x8d
  425b8f:	lods   eax,DWORD PTR ds:[esi]
  425b90:	int    0x96
  425b92:	mov    ch,0x3b
  425b94:	leave  
  425b95:	cmp    ebx,edx
  425b97:	push   ebx
  425b98:	icebp  
  425b99:	bound  eax,QWORD PTR [eax]
  425b9b:	(bad)  
  425b9c:	xor    al,0xd3
  425b9e:	repnz sub BYTE PTR [eax],al
  425ba1:	(bad)  
  425ba2:	inc    esp
  425ba3:	mov    ebp,0xfb94
  425ba8:	int    0x76
  425baa:	lods   eax,DWORD PTR ds:[esi]
  425bab:	int    0x8d
  425bad:	mov    ch,0x2f
  425baf:	inc    ebp
  425bb0:	jge    0x425b44
  425bb2:	shr    ebx,cl
  425bb4:	xchg   edx,eax
  425bb5:	int    0x8d
  425bb7:	lods   eax,DWORD PTR ds:[esi]
  425bb8:	int    0x96
  425bba:	mov    ch,0x3b
  425bbc:	leave  
  425bbd:	cmp    ebx,edx
  425bbf:	push   ebx
  425bc0:	icebp  
  425bc1:	bound  eax,QWORD PTR [eax]
  425bc3:	(bad)  
  425bc4:	push   esp
  425bc5:	shl    edx,cl
  425bc7:	sub    BYTE PTR [eax],al
  425bc9:	(bad)  
  425bca:	cmp    al,0xbd
  425bcc:	inc    esp
  425bcd:	sti    
  425bce:	add    BYTE PTR [eax],al
  425bd0:	int    0x76
  425bd2:	std    
  425bd3:	int    0x8d
  425bd5:	std    
  425bd6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425bd9:	repnz sub BYTE PTR [ebx],bh
  425bdc:	jns    0x425bb1
  425bde:	mov    ebp,0xcdd35392
  425be3:	(bad)  
  425be4:	std    
  425be5:	int    0x96
  425be7:	std    
  425be8:	cmp    ecx,DWORD PTR [edi]
  425bea:	shr    ebx,cl
  425bec:	xchg   edx,eax
  425bed:	cmp    edx,ebp
  425bef:	shr    edx,cl
  425bf1:	sub    BYTE PTR [ebx+0x13],dl
  425bf4:	xchg   ebx,edx
  425bf6:	int    0x8d
  425bf8:	std    
  425bf9:	int    0x96
  425bfb:	std    
  425bfc:	cmp    ecx,DWORD PTR [edi]
  425bfe:	shr    ebx,cl
  425c00:	xchg   edx,eax
  425c01:	cmp    edx,ebp
  425c03:	shr    edx,cl
  425c05:	sub    BYTE PTR [ebx+0x13],dl
  425c08:	xchg   ebx,edx
  425c0a:	int    0x8d
  425c0c:	std    
  425c0d:	int    0x96
  425c0f:	std    
  425c10:	cmp    ecx,DWORD PTR [edi]
  425c12:	shr    ebx,cl
  425c14:	xchg   edx,eax
  425c15:	cmp    edx,ebp
  425c17:	shr    edx,cl
  425c19:	sub    BYTE PTR [ebx+0x13],dl
  425c1c:	xchg   ebx,edx
  425c1e:	or     al,BYTE PTR [esi]
  425c20:	nop
  425c21:	add    BYTE PTR [eax],al
  425c23:	add    ch,cl
  425c25:	jbe    0x425c7b
  425c27:	int    0x80
  425c29:	int    0x8d
  425c2b:	mov    ebp,0x3bbd96cd
  425c30:	(bad)  
  425c32:	aad    0xd3
  425c34:	jmp    0x425bc8
  425c36:	shr    edx,cl
  425c38:	sub    BYTE PTR [ebx+0x13],dl
  425c3b:	or     al,BYTE PTR ds:0xd4cf
  425c41:	add    ch,cl
  425c43:	jbe    0x425c91
  425c45:	int    0x80
  425c47:	int    0x8d
  425c49:	std    
  425c4a:	int    0x96
  425c4c:	std    
  425c4d:	cmp    ecx,DWORD PTR [edi]
  425c4f:	shr    ebx,cl
  425c51:	xchg   edx,eax
  425c52:	int    0x6c
  425c54:	jo     0x425c91
  425c56:	aad    0xd3
  425c58:	jmp    0xcf05:0xa135328
  425c5f:	aam    0x0
  425c61:	add    BYTE PTR [eax],al
  425c63:	int    0x76
  425c65:	sbb    al,0xcd
  425c67:	lea    ebx,[ebx+edi*1]
  425c6a:	or     al,0xd3
  425c6c:	repnz sub BYTE PTR [ebx],bh
  425c6f:	jns    0x425c44
  425c71:	mov    ebp,0xcdd35392
  425c76:	(bad)  
  425c77:	std    
  425c78:	int    0x96
  425c7a:	std    
  425c7b:	cmp    edx,ebp
  425c7d:	cmp    ecx,DWORD PTR [edi]
  425c7f:	shr    edx,cl
  425c81:	sub    bl,dl
  425c83:	jmp    0x425c17
  425c85:	push   ebx
  425c86:	adc    ecx,ebp
  425c88:	xchg   esi,eax
  425c89:	std    
  425c8a:	int    0xa6
  425c8c:	std    
  425c8d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c93:	hlt    
  425c94:	call   ebx
  425c96:	in     eax,0x28
  425c98:	push   ebx
  425c99:	aad    0x87
  425c9b:	adc    ecx,DWORD PTR [edx]
  425c9d:	add    eax,0xd4cf
  425ca2:	add    ch,cl
  425ca4:	jbe    0x425ca3
  425ca6:	int    0x8d
  425ca8:	std    
  425ca9:	add    al,0x2
  425cab:	call   ebx
  425cad:	repnz sub BYTE PTR [ebx],bh
  425cb0:	jns    0x425c85
  425cb2:	mov    ebp,0xcdd35392
  425cb7:	(bad)  
  425cb8:	std    
  425cb9:	int    0x96
  425cbb:	std    
  425cbc:	add    al,0xfb
  425cbe:	(bad)  
  425cbf:	cmp    ecx,DWORD PTR [edi]
  425cc1:	shr    edx,cl
  425cc3:	sub    bl,dl
  425cc5:	jmp    0x425c59
  425cc7:	push   ebx
  425cc8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cce:	int    0x96
  425cd0:	std    
  425cd1:	add    al,0xfb
  425cd3:	(bad)  
  425cd4:	cmp    ecx,DWORD PTR [edi]
  425cd6:	shr    edx,cl
  425cd8:	sub    bl,dl
  425cda:	jmp    0x425c6e
  425cdc:	push   ebx
  425cdd:	adc    ecx,edi
  425cdf:	pop    ss
  425ce0:	nop
  425ce1:	add    BYTE PTR [eax],al
  425ce3:	add    BYTE PTR [edx-0x33],ah
  425ce6:	xchg   esi,eax
  425ce7:	std    
  425ce8:	int    0xa6
  425cea:	std    
  425ceb:	xchg   ebx,edx
  425ced:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425cf3:	int3   
  425cf4:	push   es
  425cf5:	aam    0x0
  425cf7:	add    BYTE PTR [eax],al
  425cf9:	int    0x76
  425cfb:	sub    al,0x4
  425cfd:	hlt    
  425cfe:	call   ebx
  425d00:	repz xchg edx,eax
  425d02:	shl    ebp,cl
  425d04:	sub    BYTE PTR [ebx-0x2b],dl
  425d07:	iret   
  425d08:	or     edi,ebp
  425d0a:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d11:	add    BYTE PTR [eax+0x50007162],0x0
  425d18:	xchg   esi,eax
  425d19:	and    al,0x6
  425d1b:	ins    DWORD PTR es:[edi],dx
  425d1c:	aam    0xbc
  425d1e:	int    0x76
  425d20:	in     eax,dx
  425d21:	int    0x8d
  425d23:	adc    DWORD PTR [edi],ebp
  425d25:	inc    ebp
  425d26:	jge    0x425cba
  425d28:	shr    ebx,cl
  425d2a:	xchg   edx,eax
  425d2b:	int    0xe3
  425d2d:	int    0x7d
  425d2f:	int    0x76
  425d31:	in     eax,dx
  425d32:	int    0x96
  425d34:	adc    DWORD PTR [ebx],edi
  425d36:	fidivr DWORD PTR [ebx]
  425d38:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d3f:	push   ebx
  425d40:	adc    ecx,ebp
  425d42:	xor    BYTE PTR [ebx-0x76],al
  425d45:	jo     0x425d14
  425d47:	xchg   esi,eax
  425d48:	push   esp
  425d49:	in     al,dx
  425d4a:	push   esp
  425d4b:	int    0x92
  425d4d:	int    0xa6
  425d4f:	push   eax
  425d50:	retf   0x5324
  425d53:	or     DWORD PTR [eax+ecx*4],esp
  425d56:	int    0x76
  425d58:	cmc    
  425d59:	int    0x8d
  425d5b:	stc    
  425d5c:	das    
  425d5d:	inc    ebp
  425d5e:	jge    0x425cf2
  425d60:	shr    ebx,cl
  425d62:	xchg   edx,eax
  425d63:	int    0x8d
  425d65:	cmc    
  425d66:	int    0xa6
  425d68:	stc    
  425d69:	cmp    ecx,ecx
  425d6b:	cmp    ebx,ebp
  425d6d:	shl    edx,cl
  425d6f:	sub    ch,cl
  425d71:	lea    esi,[eax]
  425d73:	push   ebx
  425d74:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d7a:	int    0x1c
  425d7c:	inc    ebx
  425d7d:	(bad)  
  425d7e:	jo     0x425d8a
  425d80:	lea    esi,[eax]
  425d82:	or     cl,0xec
  425d85:	xchg   ch,cl
  425d87:	xchg   esi,eax
  425d88:	push   esp
  425d89:	int    0x76
  425d8b:	dec    esp
  425d8c:	int    0x4a
  425d8e:	int    0x20
  425d90:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d96:	sbb    al,0xcd
  425d98:	dec    edx
  425d99:	xchg   ebp,ecx
  425d9b:	sub    eax,0xa808080
  425da0:	lea    esi,[eax]
  425da2:	int    0x4a
  425da4:	int    0xa6
  425da6:	push   eax
  425da7:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425dae:	int    0x80
  425db0:	int    0x4a
  425db2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425db6:	jbe    0x425da5
  425db8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dbe:	das    
  425dbf:	inc    ebp
  425dc0:	jge    0x425d54
  425dc2:	shr    ebx,cl
  425dc4:	xchg   edx,eax
  425dc5:	int    0x8d
  425dc7:	in     eax,dx
  425dc8:	int    0xa6
  425dca:	adc    DWORD PTR [ebx],edi
  425dcc:	leave  
  425dcd:	cmp    ebx,ebp
  425dcf:	shl    edx,cl
  425dd1:	sub    BYTE PTR [ebx-0x3b],dl
  425dd4:	or     dh,BYTE PTR [esi+0x44]
  425dd7:	int    0x76
  425dd9:	xor    bl,ch
  425ddb:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425de1:	in     eax,dx
  425de2:	int    0x8d
  425de4:	adc    DWORD PTR [edi],ebp
  425de6:	inc    ebp
  425de7:	jge    0x425d7b
  425de9:	shr    ebx,cl
  425deb:	xchg   edx,eax
  425dec:	int    0x8d
  425dee:	in     eax,dx
  425def:	int    0xa6
  425df1:	adc    ebx,edx
  425df3:	repnz sub ch,cl
  425df6:	lea    edx,[ebx+edi*1]
  425df9:	leave  
  425dfa:	cmp    ebx,ebp
  425dfc:	add    al,0xd3
  425dfe:	stc    
  425dff:	push   ebx
  425e00:	(bad)
  425e03:	inc    ebx
  425e04:	shr    DWORD PTR [edi],cl
  425e06:	add    al,0xf7
  425e08:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e10:	dec    ebx
  425e11:	mov    BYTE PTR [ebx],dh
  425e13:	jge    0x425e1f
  425e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e16:	xor    al,0xa
  425e18:	lea    edi,[ecx*8+0x76cdf18d]
  425e1f:	xchg   ebp,eax
  425e20:	das    
  425e21:	inc    ebp
  425e22:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e28:	jbe    0x425e1b
  425e2a:	int    0xa6
  425e2c:	xchg   ebp,eax
  425e2d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e33:	cmp    esi,eax
  425e35:	cmp    ebx,ebp
  425e37:	push   ebx
  425e38:	or     al,0xcd
  425e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e3b:	stc    
  425e3c:	das    
  425e3d:	inc    ebp
  425e3e:	popf   
  425e3f:	xchg   edx,eax
  425e40:	or     dh,BYTE PTR [esi+0x54]
  425e43:	int    0x76
  425e45:	cmc    
  425e46:	push   ecx
  425e47:	out    0x54,al
  425e49:	add    al,0xd3
  425e4b:	dec    edx
  425e4c:	shr    esp,cl
  425e4e:	xchg   edx,eax
  425e4f:	int    0xa6
  425e51:	stc    
  425e52:	cmp    ebx,ebp
  425e54:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e5a:	int    0xa6
  425e5c:	cmc    
  425e5d:	int    0x8d
  425e5f:	stc    
  425e60:	das    
  425e61:	inc    ebp
  425e62:	or     al,0x92
  425e64:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e6a:	shr    ebx,cl
  425e6c:	xchg   edx,eax
  425e6d:	int    0x8d
  425e6f:	stc    
  425e70:	cmp    ecx,ebx
  425e72:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e78:	cmp    esp,ecx
  425e7a:	push   ebx
  425e7b:	fcmovne st,st(5)
  425e7d:	lea    esi,[edi+ebp*1]
  425e80:	mov    ebx,0x2bc53389
  425e85:	ror    ebp,cl
  425e87:	(bad)  
  425e88:	icebp  
  425e89:	or     dh,BYTE PTR [esi+0x54]
  425e8c:	int    0x76
  425e8e:	xchg   ebp,eax
  425e8f:	das    
  425e90:	inc    ebp
  425e91:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e97:	jbe    0x425e8a
  425e99:	int    0xa6
  425e9b:	xchg   ebp,eax
  425e9c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425ea2:	das    
  425ea3:	mov    ebx,0xa6020180
  425ea8:	cmp    ebx,ebp
  425eaa:	dec    edx
  425eab:	or     al,0x1
  425ead:	ror    DWORD PTR [edx-0x2b],cl
  425eb0:	mov    ebp,0xbdbfcb3b
  425eb5:	or     ah,BYTE PTR [ebx]
  425eb7:	and    eax,0x92d3352f
  425ebc:	shr    DWORD PTR [ebp+0x37d65692],cl
  425ec2:	ficom  WORD PTR [ebx]
  425ec4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425ec7:	fidiv  WORD PTR [edi]
  425ec9:	ficom  WORD PTR [ebx]
  425ecb:	(bad)  
  425ecc:	ss inc ebx
  425ece:	or     al,0xd6
  425ed0:	cs int 0x92
  425ed3:	int    0x8d
  425ed5:	xor    BYTE PTR [edi+0x548dcd81],al
  425edb:	add    al,0x64
  425edd:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425ee3:	int    0x8d
  425ee5:	xor    BYTE PTR [edi-0x7772327f],al
  425eeb:	xchg   DWORD PTR [esi+0x54],esi
  425eee:	int    0x89
  425ef0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425efa:	push   es
  425efb:	and    eax,DWORD PTR [eax]
  425efd:	add    BYTE PTR [eax],al
  425eff:	in     al,dx
  425f00:	test   DWORD PTR [edi+0x25230abd],edi
  425f06:	int    0x76
  425f08:	adc    al,0x81
  425f0a:	jbe    0x425f50
  425f0c:	leave  
  425f0d:	jbe    0x425f7c
  425f0f:	scas   al,BYTE PTR es:[edi]
  425f10:	aaa    
  425f11:	ficom  WORD PTR [ebx]
  425f13:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f19:	int    0x8d
  425f1b:	jne    0x425f4c
  425f1d:	inc    ebp
  425f1e:	jge    0x425eb2
  425f20:	shr    ebx,cl
  425f22:	xchg   edx,eax
  425f23:	int    0x8d
  425f25:	ins    DWORD PTR es:[edi],dx
  425f26:	int    0xa6
  425f28:	jne    0x425efd
  425f2a:	repnz sub ch,cl
  425f2d:	lea    ecx,[ebp+ecx*8-0x77]
  425f31:	cmp    ecx,ecx
  425f33:	cmp    ebx,ebp
  425f35:	push   ebx
  425f36:	(bad)
  425f39:	shl    esp,cl
  425f3b:	int    0x8d
  425f3d:	inc    esp
  425f3e:	inc    ebx
  425f3f:	mov    BYTE PTR [edi+0x54],dh
  425f42:	int    0x76
  425f44:	xor    BYTE PTR [edi+0x760a1476],al
  425f4a:	xor    ch,cl
  425f4c:	ins    BYTE PTR es:[edi],dx
  425f4d:	test   BYTE PTR [edx],cl
  425f4f:	jbe    0x425f65
  425f51:	int    0x76
  425f53:	in     eax,dx
  425f54:	int    0x8d
  425f56:	adc    DWORD PTR [edi],ebp
  425f58:	inc    ebp
  425f59:	jge    0x425eed
  425f5b:	shr    ebx,cl
  425f5d:	xchg   edx,eax
  425f5e:	int    0x8d
  425f60:	in     eax,dx
  425f61:	int    0xa6
  425f63:	adc    DWORD PTR [ebx],edi
  425f65:	fnstsw WORD PTR [ebx]
  425f67:	leave  
  425f68:	push   ebx
  425f69:	(bad)
  425f6c:	sub    BYTE PTR [esi+0x76],bl
  425f6f:	adc    al,0x2f
  425f71:	push   es
  425f72:	mov    esi,0xcd0000ff
  425f77:	(bad)  
  425f78:	std    
  425f79:	int    0x96
  425f7b:	std    
  425f7c:	cmp    ecx,DWORD PTR [edi]
  425f7e:	shr    ebx,cl
  425f80:	xchg   edx,eax
  425f81:	sar    bh,0x9c
  425f84:	cmp    esi,ecx
  425f86:	shr    edx,cl
  425f88:	sub    BYTE PTR [ebx+0x13],dl
  425f8b:	int    0x96
  425f8d:	std    
  425f8e:	int    0xa6
  425f90:	std    
  425f91:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f97:	popf   
  425f98:	shl    ebp,cl
  425f9a:	sub    BYTE PTR [ebx-0x2b],dl
  425f9d:	xchg   DWORD PTR [ebx],edx
  425f9f:	int    0x96
  425fa1:	std    
  425fa2:	int    0xa6
  425fa4:	std    
  425fa5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fab:	popf   
  425fac:	shl    ebp,cl
  425fae:	sub    BYTE PTR [ebx-0x2b],dl
  425fb1:	xchg   DWORD PTR [ebx],edx
  425fb3:	int    0x96
  425fb5:	std    
  425fb6:	int    0xa6
  425fb8:	std    
  425fb9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425fbf:	xchg   edx,eax
  425fc0:	shl    ebp,cl
  425fc2:	sub    BYTE PTR [ebx-0x2b],dl
  425fc5:	xchg   DWORD PTR [ebx],edx
  425fc7:	or     cl,bh
  425fc9:	nop
  425fca:	add    BYTE PTR [eax],al
  425fcc:	add    ch,cl
  425fce:	lea    edx,[eax-0x33]
  425fd1:	xchg   esi,eax
  425fd2:	mov    ebp,0x3bbda6cd
  425fd7:	cdq    
  425fd8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fde:	in     eax,0x28
  425fe0:	push   ebx
  425fe1:	aad    0xa
  425fe3:	int3   
  425fe4:	pop    ss
  425fe5:	aam    0x0
  425fe7:	add    BYTE PTR [eax],al
  425fe9:	int    0x8d
  425feb:	dec    esp
  425fec:	int    0x89
  425fee:	int    0x96
  425ff0:	std    
  425ff1:	int    0xa6
  425ff3:	std    
  425ff4:	int    0x7e
  425ff6:	jo     0x426033
  425ff8:	cdq    
  425ff9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fff:	in     eax,0x28
  426001:	push   ebx
  426002:	aad    0xa
  426004:	int3   
  426005:	pop    ss
  426006:	aam    0x0
  426008:	add    BYTE PTR [eax],al
  42600a:	int    0x8d
  42600c:	sbb    al,0xcd
  42600e:	xchg   esi,eax
  42600f:	sbb    al,0x3b
  426011:	icebp  
  426012:	shr    edx,cl
  426014:	sub    BYTE PTR [ebx],bh
  426016:	psrlq  mm5,mm3
  426019:	xchg   edx,eax
  42601a:	push   ebx
  42601b:	adc    ecx,ebp
  42601d:	xchg   esi,eax
  42601e:	std    
  42601f:	int    0xa6
  426021:	std    
  426022:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426028:	cdq    
  426029:	shl    ebp,cl
  42602b:	sub    bl,dl
  42602d:	repz xchg edx,eax
  42602f:	push   ebx
  426030:	aad    0xcd
  426032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426033:	std    
  426034:	cmp    edi,DWORD PTR [ecx+0x4]
  426037:	hlt    
  426038:	call   ebx
  42603a:	mov    ebp,0x28e5d392
  42603f:	push   ebx
  426040:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426046:	aam    0x0
  426048:	add    BYTE PTR [eax],al
  42604a:	int    0x8d
  42604c:	std    
  42604d:	int    0x96
  42604f:	std    
  426050:	cmp    ecx,DWORD PTR [edi]
  426052:	shr    ebx,cl
  426054:	xchg   edx,eax
  426055:	sar    bh,0x9c
  426058:	cmp    esi,ecx
  42605a:	shr    edx,cl
  42605c:	sub    BYTE PTR [ebx+0x13],dl
  42605f:	int    0x96
  426061:	std    
  426062:	int    0xa6
  426064:	std    
  426065:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42606b:	popf   
  42606c:	shl    ebp,cl
  42606e:	sub    BYTE PTR [ebx-0x2b],dl
  426071:	xchg   DWORD PTR [ebx],edx
  426073:	int    0x96
  426075:	std    
  426076:	int    0xa6
  426078:	std    
  426079:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42607f:	popf   
  426080:	shl    ebp,cl
  426082:	sub    BYTE PTR [ebx-0x2b],dl
  426085:	xchg   DWORD PTR [ebx],edx
  426087:	iret   
  426088:	xchg   esi,eax
  426089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42608a:	or     dl,BYTE PTR ds:0xd4cf
  426090:	add    bh,cl
  426092:	iret   
  426093:	nop
  426094:	add    BYTE PTR [eax],al
  426096:	add    BYTE PTR [ecx-0x33],dh
  426099:	(bad)  
  42609a:	std    
  42609b:	int    0x96
  42609d:	std    
  42609e:	cmp    ecx,DWORD PTR [edi]
  4260a0:	int    0xd6
  4260a2:	sub    al,0x3b
  4260a4:	icebp  
  4260a5:	shr    ebx,cl
  4260a7:	xchg   edx,eax
  4260a8:	shr    edx,cl
  4260aa:	sub    BYTE PTR [ebx+0x13],dl
  4260ad:	jno    0x42607e
  4260af:	pop    es
  4260b0:	out    dx,eax
  4260b1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260b8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260c2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260c8:	dec    esp
  4260c9:	int    0x76
  4260cb:	mov    ch,cl
  4260cd:	mov    BYTE PTR [edi-0x72f5b373],al
  4260d3:	dec    esp
  4260d4:	int    0x8d
  4260d6:	cmc    
  4260d7:	int    0x96
  4260d9:	stc    
  4260da:	das    
  4260db:	inc    ebp
  4260dc:	jecxz  0x426070
  4260de:	shl    ebx,cl
  4260e0:	xchg   edx,eax
  4260e1:	int    0x96
  4260e3:	cmc    
  4260e4:	int    0xd6
  4260e6:	stc    
  4260e7:	cmp    esi,edi
  4260e9:	shr    edx,cl
  4260eb:	sub    ch,cl
  4260ed:	xchg   esi,eax
  4260ee:	cmc    
  4260ef:	cmp    esi,eax
  4260f1:	push   ebx
  4260f2:	bswap  ebp
  4260f4:	(bad)  
  4260f5:	stc    
  4260f6:	das    
  4260f7:	inc    ebp
  4260f8:	sti    
  4260f9:	xchg   edx,eax
  4260fa:	shr    edi,cl
  4260fc:	xchg   edx,eax
  4260fd:	int    0xd6
  4260ff:	cmc    
  426100:	int    0xa6
  426102:	stc    
  426103:	cmp    ebx,ecx
  426105:	cmp    ebx,ebp
  426107:	push   ebx
  426108:	aad    0x87
  42610a:	adc    ecx,ebp
  42610c:	xchg   esi,eax
  42610d:	cmc    
  42610e:	sar    DWORD PTR [ecx-0x62932d8],cl
  426114:	das    
  426115:	inc    ebp
  426116:	sti    
  426117:	xchg   edx,eax
  426118:	shr    edi,cl
  42611a:	xchg   edx,eax
  42611b:	int    0xd6
  42611d:	cmc    
  42611e:	int    0xa6
  426120:	stc    
  426121:	cmp    ebx,ecx
  426123:	cmp    ebx,ebp
  426125:	push   ebx
  426126:	aad    0x87
  426128:	adc    ecx,ebp
  42612a:	xchg   esi,eax
  42612b:	cmc    
  42612c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426132:	das    
  426133:	inc    ebp
  426134:	sti    
  426135:	xchg   edx,eax
  426136:	shr    edi,cl
  426138:	xchg   edx,eax
  426139:	int    0xd6
  42613b:	cmc    
  42613c:	cmp    ebx,ecx
  42613e:	int    0xe6
  426140:	stc    
  426141:	cmp    eax,DWORD PTR [eax]
  426143:	push   ebx
  426144:	fld    DWORD PTR [edi+0x707113]
  42614a:	(bad)  
  42614b:	dec    esp
  42614c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426152:	add    BYTE PTR [eax],al
  426154:	int    0x76
  426156:	or     eax,0xcb63a8aa
  42615b:	rcl    BYTE PTR [eax-0x80],cl
  42615e:	xchg   esi,eax
  42615f:	int    0xed
  426161:	add    al,0xed
  426163:	inc    esp
  426164:	pop    ebx
  426165:	cwde   
  426166:	call   0x76c9:0xcb3bdd3b
  42616d:	popf   
  42616e:	(bad)  
  42616f:	aaa    
  426170:	ficom  WORD PTR [ebx]
  426172:	pop    ebp
  426173:	mov    ebp,0xa25230a
  426178:	jbe    0x42611f
  42617a:	leave  
  42617b:	jbe    0x42613a
  42617d:	xchg   ecx,eax
  42617e:	aaa    
  42617f:	ficom  WORD PTR [ebx]
  426181:	or     dh,BYTE PTR [esi-0x13]
  426184:	leave  
  426185:	jbe    0x426174
  426187:	dec    ecx
  426188:	mov    al,ds:0x76c93586
  42618d:	cmc    
  42618e:	dec    ecx
  42618f:	lahf   
  426190:	xchg   BYTE PTR ds:0x691176c9,dh
  426196:	and    DWORD PTR [esi+0x1176c935],eax
  42619c:	cmp    DWORD PTR [ecx],esp
  42619e:	xchg   BYTE PTR ds:0x49f976c9,dh
  4261a4:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  4261ab:	jbe    0x4261a6
  4261ad:	int    0x76
  4261af:	sbb    al,0xcd
  4261b1:	shl    BYTE PTR ds:0xcd808081,1
  4261b7:	jbe    0x4261d5
  4261b9:	int    0x8d
  4261bb:	sbb    al,0xcd
  4261bd:	add    DWORD PTR ds:0xcd808081,ebp
  4261c3:	xor    ch,cl
  4261c5:	pop    esp
  4261c6:	xchg   eax,esp
  4261c8:	fs int 0x96
  4261cb:	popf   
  4261cc:	int    0xa
  4261ce:	and    eax,0xa808081
  4261d3:	out    0xb5,al
  4261d5:	int    0xe6
  4261d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d8:	das    
  4261d9:	inc    ebp
  4261da:	add    edx,DWORD PTR [edx-0x326def2d]
  4261e0:	out    0x9d,al
  4261e2:	int    0xa6
  4261e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	adc    bh,bl
  4261e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261e8:	mov    esi,0xdd3b4229
  4261ed:	shr    ecx,cl
  4261ef:	sub    ch,cl
  4261f1:	pop    esi
  4261f2:	push   ebx
  4261f3:	aad    0x43
  4261f5:	(bad)  
  4261f7:	nop
  4261f8:	int    0x18
  4261fa:	or     dl,BYTE PTR [esi+0x1496cdf9]
  426200:	int    0x96
  426202:	xor    ch,cl
  426204:	xchg   esi,eax
  426205:	dec    esp
  426206:	iret   
  426207:	xchg   esi,eax
  426208:	lods   eax,DWORD PTR ds:[esi]
  426209:	bound  eax,QWORD PTR [eax]
  42620b:	(bad)  
  42620c:	stc    
  42620d:	jno    0x42627f
  42620f:	cwde   
  426210:	add    dh,dl
  426212:	sbb    al,0xcf
  426214:	jbe    0x4261cb
  426216:	add    dh,dl
  426218:	mov    BYTE PTR [eax],al
  42621a:	(bad)  
  42621b:	cmc    
  42621c:	add    dh,dl
  42621e:	adc    DWORD PTR [eax],eax
  426220:	(bad)  
  426221:	in     eax,dx
  426222:	jo     0x4261f3
  426224:	jbe    0x426223
  426226:	jo     0x4261e5
  426228:	stos   BYTE PTR es:[edi],al
  426229:	clc    
  42622a:	add    BYTE PTR [eax],al
  42622c:	or     dh,BYTE PTR [esi+0x1c]
  42622f:	int    0x76
  426231:	sbb    al,0xcd
  426233:	lea    esp,[edx+ecx*1]
  426236:	outs   dx,BYTE PTR ds:[esi]
  426237:	adc    al,0xcd
  426239:	jbe    0x42625f
  42623b:	leave  
  42623c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426243:	lods   eax,DWORD PTR ds:[esi]
  426244:	int    0x8d
  426246:	and    al,0xa
  426248:	outs   dx,BYTE PTR ds:[esi]
  426249:	test   ch,cl
  42624b:	jbe    0x42627d
  42624d:	int    0x8d
  42624f:	and    al,0xa
  426251:	outs   dx,BYTE PTR ds:[esi]
  426252:	mov    ch,cl
  426254:	jbe    0x42626a
  426256:	int    0x8d
  426258:	and    al,0xa
  42625a:	outs   dx,BYTE PTR ds:[esi]
  42625b:	dec    esp
  42625c:	int    0x76
  42625e:	and    al,0xc9
  426260:	ins    BYTE PTR es:[edi],dx
  426261:	and    al,0x81
  426263:	add    BYTE PTR [eax-0x32e11380],0x76
  42626a:	sbb    al,0xcd
  42626c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426273:	or     ch,0xa
  426276:	and    eax,0xcd808081
  42627b:	xor    BYTE PTR [ebx],0x81
  42627e:	or     dh,BYTE PTR [esi-0x3]
  426281:	int    0x76
  426283:	std    
  426284:	stos   BYTE PTR es:[edi],al
  426285:	test   al,0x63
  426287:	retf   
  426288:	rcr    BYTE PTR [eax+eax*4],cl
  42628b:	xchg   esi,eax
  42628c:	int    0xed
  42628e:	int    0x76
  426290:	dec    esp
  426291:	adc    ch,ch
  426293:	cmp    eax,0x5b808081
  426298:	cwde   
  426299:	call   0x2f35:0x86214966
  4262a0:	push   es
  4262a1:	mov    ecx,0xcd80804a
  4262a6:	jbe    0x4262d8
  4262a8:	inc    cx
  4262aa:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262b0:	dec    edx
  4262b1:	add    BYTE PTR [eax-0x29128937],0x37
  4262b8:	ficom  WORD PTR [ebx]
  4262ba:	pop    ebp
  4262bb:	mov    ebp,0xa25230a
  4262c0:	jbe    0x4262d3
  4262c2:	leave  
  4262c3:	jbe    0x42627a
  4262c5:	xchg   ecx,eax
  4262c6:	aaa    
  4262c7:	ficom  WORD PTR [ebx]
  4262c9:	or     dh,BYTE PTR [esi-0x43]
  4262cc:	int    0x76
  4262ce:	mov    BYTE PTR [edx],cl
  4262d0:	jbe    0x4262c7
  4262d2:	int    0x76
  4262d4:	cmc    
  4262d5:	int    0x1
  4262d7:	mov    ebp,0xcd808081
  4262dc:	or     ch,0x80
  4262df:	or     dh,BYTE PTR [esi-0x7]
  4262e2:	pop    edi
  4262e3:	jle    0x42631a
  4262e5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262ec:	mov    eax,0x4b0760a
  4262f1:	ins    DWORD PTR es:[edi],dx
  4262f2:	(bad)  
  4262f3:	mov    eax,0xcda2760a
  4262f8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262fe:	(bad)  
  4262ff:	xor    eax,0xf1cd8080
  426304:	mov    eax,0xcf19960a
  426309:	nop
  42630a:	xchg   edx,eax
  42630b:	iret   
  42630c:	sahf   
  42630d:	(bad)  
  42630e:	int    0x99
  426310:	mov    eax,0xcd1d960a
  426315:	aad    0xb8
  426317:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42631d:	mov    eax,0xcf01960a
  426322:	jno    0x426378
  426324:	int    0x3
  426326:	mov    eax,0x40be60a
  42632b:	leave  
  42632c:	xchg   ebp,eax
  42632d:	mov    eax,0xcf05e60a
  426332:	ficomp WORD PTR [eax-0x48]
  426335:	or     ah,dh
  426337:	pop    es
  426338:	mov    eax,0xb809760a
  42633d:	or     dl,dh
  42633f:	retf   0xc5cd
  426342:	mov    eax,0xb8cc760a
  426347:	or     dl,BYTE PTR [edi]
  426349:	ins    BYTE PTR es:[edi],dx
  42634a:	add    BYTE PTR [eax],al
  42634c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426353:	push   edx
  426354:	add    BYTE PTR [eax],al
  426356:	add    bh,cl
  426358:	outs   dx,BYTE PTR ds:[esi]
  426359:	add    edi,DWORD PTR [eax+0x74060a]
  42635f:	add    BYTE PTR [eax],al
  426361:	add    al,0x6d
  426363:	inc    edx
  426364:	mov    eax,0x78060a
  426369:	add    BYTE PTR [eax],al
  42636b:	iret   
  42636c:	outs   dx,BYTE PTR ds:[esi]
  42636d:	xor    BYTE PTR [eax+0x7c060a],bh
  426373:	add    BYTE PTR [eax],al
  426375:	add    al,0x6d
  426377:	xor    bh,BYTE PTR [eax+0x8a060a]
  42637d:	add    BYTE PTR [eax],al
  42637f:	mov    eax,0x8ccf0a
  426384:	add    BYTE PTR [eax],al
  426386:	int    0xc5
  426388:	mov    eax,0x8e060a
  42638d:	add    BYTE PTR [eax],al
  42638f:	int    0x76
  426391:	in     eax,dx
  426392:	int    0x8d
  426394:	adc    DWORD PTR [edi],ebp
  426396:	inc    ebp
  426397:	jge    0x42632b
  426399:	shr    ebx,cl
  42639b:	xchg   edx,eax
  42639c:	int    0x8d
  42639e:	in     eax,dx
  42639f:	int    0x96
  4263a1:	adc    ebx,eax
  4263a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263a4:	mov    esi,0xc93b4229
  4263a9:	cmp    ebx,edx
  4263ab:	shl    edx,cl
  4263ad:	sub    BYTE PTR [ebx-0x2e],dl
  4263b0:	in     al,dx
  4263b1:	outs   dx,BYTE PTR ds:[esi]
  4263b2:	iret   
  4263b3:	aam    0x76
  4263b5:	mov    al,0xb8
  4263b7:	int    0x4e
  4263b9:	das    
  4263ba:	mov    ebx,0xcbbb2f18
  4263bf:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263c2:	sti    
  4263c3:	and    DWORD PTR ds:0xf3e38080,esi
  4263c9:	shl    edx,cl
  4263cb:	das    
  4263cc:	push   ebx
  4263cd:	adc    ecx,DWORD PTR [ecx]
  4263cf:	int3   
  4263d0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263d6:	lea    esi,[ebp+0x2fbd96cd]
  4263dc:	inc    ebp
  4263dd:	jecxz  0x426371
  4263df:	shl    ebx,cl
  4263e1:	xchg   edx,eax
  4263e2:	int    0x96
  4263e4:	mov    ch,0xcd
  4263e6:	(bad)  
  4263e7:	mov    ebp,0xf73bf03b
  4263ec:	push   ebx
  4263ed:	psrlq  mm5,mm2
  4263f0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263f6:	(bad)  
  4263f7:	popa   
  4263f8:	int    0x76
  4263fa:	in     eax,dx
  4263fb:	int    0x8d
  4263fd:	adc    DWORD PTR [edi],ebp
  4263ff:	inc    ebp
  426400:	jge    0x426394
  426402:	shr    ebx,cl
  426404:	xchg   edx,eax
  426405:	int    0x8d
  426407:	in     eax,dx
  426408:	int    0x96
  42640a:	adc    DWORD PTR [ebx],edi
  42640c:	leave  
  42640d:	cmp    ebx,edx
  42640f:	shl    edx,cl
  426411:	sub    BYTE PTR [ebx-0x2e],dl
  426414:	in     al,dx
  426415:	outs   dx,BYTE PTR ds:[esi]
  426416:	iret   
  426417:	aam    0x76
  426419:	add    DWORD PTR [eax-0x44d0b133],edi
  42641f:	sbb    BYTE PTR [edi],ch
  426421:	mov    ebx,0x120c3bcb
  426426:	sti    
  426427:	and    DWORD PTR ds:0xf3e38080,esi
  42642d:	shl    edx,cl
  42642f:	das    
  426430:	push   ebx
  426431:	adc    ecx,DWORD PTR [ecx]
  426433:	int3   
  426434:	test   esp,ecx
  426436:	inc    DWORD PTR [eax]
  426438:	add    ch,cl
  42643a:	lea    esi,[ebp+0x2fbd96cd]
  426440:	inc    ebp
  426441:	jecxz  0x4263d5
  426443:	shl    ebx,cl
  426445:	xchg   edx,eax
  426446:	int    0x96
  426448:	mov    ch,0xcd
  42644a:	(bad)  
  42644b:	mov    ebp,0xf73bf03b
  426450:	push   ebx
  426451:	psrlq  mm5,mm2
  426454:	sub    BYTE PTR [edi-0x7406fb2d],al
  42645a:	(bad)  
  42645b:	popa   
  42645c:	int    0x76
  42645e:	in     eax,dx
  42645f:	int    0x8d
  426461:	adc    DWORD PTR [edi],ebp
  426463:	inc    ebp
  426464:	jge    0x4263f8
  426466:	shr    ebx,cl
  426468:	xchg   edx,eax
  426469:	int    0x8d
  42646b:	in     eax,dx
  42646c:	int    0x96
  42646e:	adc    DWORD PTR [ebx],edi
  426470:	leave  
  426471:	cmp    ebx,edx
  426473:	shl    edx,cl
  426475:	sub    BYTE PTR [ebx-0x2e],dl
  426478:	in     al,dx
  426479:	je     0x42644a
  42647b:	push   ebp
  42647c:	jbe    0x4264ea
  42647e:	add    BYTE PTR [eax],al
  426480:	add    BYTE PTR [eax-0x44d0b133],bh
  426486:	sbb    BYTE PTR [edi],ch
  426488:	mov    ebx,0x120c3bcb
  42648d:	sti    
  42648e:	and    DWORD PTR ds:0xf3e38080,esi
  426494:	shl    edx,cl
  426496:	das    
  426497:	push   ebx
  426498:	adc    ecx,DWORD PTR [ecx]
  42649a:	int3   
  42649b:	test   DWORD PTR ds:0xcd0000ff,eax
  4264a1:	lea    esi,[ebp+0x2fbd96cd]
  4264a7:	inc    ebp
  4264a8:	jecxz  0x42643c
  4264aa:	shl    ebx,cl
  4264ac:	xchg   edx,eax
  4264ad:	int    0x96
  4264af:	mov    ch,0xcd
  4264b1:	(bad)  
  4264b2:	mov    ebp,0xf73bf03b
  4264b7:	push   ebx
  4264b8:	psrlq  mm5,mm2
  4264bb:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264c1:	(bad)  
  4264c2:	mov    ebx,0xffb506cf
  4264c7:	add    BYTE PTR [eax],al
  4264c9:	or     dh,BYTE PTR [esi-0x7]
  4264cc:	int    0x76
  4264ce:	stc    
  4264cf:	pop    edi
  4264d0:	inc    esi
  4264d1:	pop    esp
  4264d2:	inc    ebp
  4264d3:	xchg   edi,eax
  4264d4:	or     cl,BYTE PTR [eax+0x79245161]
  4264da:	daa    
  4264db:	or     dh,BYTE PTR [eax-0x7c]
  4264de:	int    0x6
  4264e0:	mov    ch,0xff
  4264e2:	add    BYTE PTR [eax],al
  4264e4:	int    0x57
  4264e6:	mov    ebp,0xa0000ff
  4264eb:	(bad)  
  4264ec:	mov    ebp,0x8621d169
  4264f1:	xor    eax,0x62fd343
  4264f6:	pusha  
  4264f7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  426501:	add    BYTE PTR [eax-0x7fca76a3],0x80
  426508:	mov    eax,0xfff9060a
  42650d:	add    BYTE PTR [eax],al
  42650f:	int    0xc5
  426511:	mov    eax,0xff03060a
  426516:	add    BYTE PTR [eax],al
  426518:	pop    ebp
  426519:	es xor eax,0xab88080
  42651f:	push   es
  426520:	std    
  426521:	inc    DWORD PTR [eax]
  426523:	add    BYTE PTR [ebp-0x5d],bl
  426526:	xor    eax,0xab88080
  42652b:	push   es
  42652c:	(bad)  
  42652d:	inc    DWORD PTR [eax]
  42652f:	add    BYTE PTR [ebp+0x1e],bl
  426532:	xor    eax,0xab88080
  426537:	push   es
  426538:	add    BYTE PTR [eax],0x0
  42653b:	add    BYTE PTR [ebp*2-0x47823218],al
  426542:	or     cl,bh
  426544:	xchg   edx,eax
  426545:	add    BYTE PTR [eax],al
  426547:	add    ch,cl
  426549:	jbe    0x42657b
  42654b:	pop    edi
  42654c:	dec    ebx
  42654d:	xor    eax,0xab88080
  426552:	iret   
  426553:	test   BYTE PTR [eax],al
  426555:	add    BYTE PTR [eax],al
  426557:	add    al,0xd3
  426559:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42655f:	add    BYTE PTR [eax],al
  426561:	pop    edi
  426562:	push   esi
  426563:	xor    eax,0xab88080
  426568:	iret   
  426569:	mov    BYTE PTR [eax],al
  42656b:	add    BYTE PTR [eax],al
  42656d:	add    al,0xd3
  42656f:	pushf  
  426570:	mov    eax,0x4acf0a
  426575:	add    BYTE PTR [eax],al
  426577:	int    0xc
  426579:	mov    eax,0x4ccf0a
  42657e:	add    BYTE PTR [eax],al
  426580:	pop    edi
  426581:	add    al,0x35
  426583:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42658a:	add    BYTE PTR [eax],al
  42658c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42658f:	adc    DWORD PTR [eax-0x80],edx
  426592:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426599:	add    bl,dl
  42659b:	mov    ebp,0x151a5f92
  4265a0:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  4265a7:	add    BYTE PTR [eax],al
  4265a9:	pop    edi
  4265aa:	call   0xcf0a:0xb88080eb
  4265b1:	adc    al,0x0
  4265b3:	add    BYTE PTR [eax],al
  4265b5:	int    0x8d
  4265b7:	xor    BYTE PTR [edx+eax*1],al
  4265ba:	call   ebx
  4265bc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265c0:	or     al,BYTE PTR [esi]
  4265c2:	adc    eax,0xcd0000ff
  4265c7:	jbe    0x426615
  4265c9:	int    0x8d
  4265cb:	dec    esp
  4265cc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265cf:	mov    ebp,0xff020492
  4265d4:	shl    edx,cl
  4265d6:	sub    BYTE PTR [ebx-0x2d],dl
  4265d9:	leave  
  4265da:	add    eax,0xff1d06
  4265df:	add    BYTE PTR [eax],al
  4265e1:	add    BYTE PTR [eax+0x1506cf80],al
  4265e7:	inc    DWORD PTR [eax]
  4265e9:	add    BYTE PTR [eax-0x33],dh
  4265ec:	jbe    0x42661e
  4265ee:	int    0x8d
  4265f0:	xor    BYTE PTR [ebx],bh
  4265f2:	jns    0x4265c7
  4265f4:	mov    ebp,0xff020492
  4265f9:	shl    edx,cl
  4265fb:	sub    BYTE PTR [ebx-0x2d],dl
  4265fe:	jo     0x4265cf
  426600:	push   es
  426601:	stc    
  426602:	inc    DWORD PTR [eax]
  426604:	add    BYTE PTR [eax-0x33],dh
  426607:	jbe    0x4265fe
  426609:	int    0x1
  42660b:	cmp    eax,0xc9808081
  426610:	push   es
  426611:	sbb    BYTE PTR [eax],al
  426613:	add    BYTE PTR [eax],al
  426615:	inc    eax
  426616:	retf   
  426617:	fwait
  426618:	xor    eax,0x76cd5000
  42661d:	adc    al,0x0
  42661f:	icebp  
  426620:	or     dh,BYTE PTR [esi-0x7]
  426623:	int    0x76
  426625:	stc    
  426626:	push   es
  426627:	ins    DWORD PTR es:[edi],dx
  426628:	aam    0x4a
  42662a:	adc    dl,BYTE PTR [esi+0x68]
  42662d:	or     BYTE PTR [ebx+ecx*1],bl
  426630:	fmul   QWORD PTR [ebx-0x17]
  426633:	(bad)  
  426634:	int    0x8d
  426636:	dec    esp
  426637:	int    0x96
  426639:	dec    esp
  42663a:	sar    bh,0x3b
  42663d:	setl   BYTE PTR [ebx]
  426640:	icebp  
  426641:	shr    edx,cl
  426643:	sub    bl,dl
  426645:	jmp    0x4265d9
  426647:	push   ebx
  426648:	adc    ecx,ebp
  42664a:	xchg   esi,eax
  42664b:	cmc    
  42664c:	int    0xa2
  42664e:	and    eax,0x5e808081
  426653:	dec    edx
  426654:	das    
  426655:	push   es
  426656:	popa   
  426657:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42665d:	int    0x96
  42665f:	dec    esp
  426660:	cmp    ecx,DWORD PTR [edi]
  426662:	shr    ebx,cl
  426664:	xchg   edx,eax
  426665:	cmp    esi,ecx
  426667:	shr    edx,cl
  426669:	sub    BYTE PTR [ebx+0x13],dl
  42666c:	int    0x96
  42666e:	cmc    
  42666f:	int    0xa2
  426671:	in     al,0x81
  426673:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42667a:	int    0x96
  42667c:	dec    esp
  42667d:	cmp    ecx,DWORD PTR [edi]
  42667f:	shr    ebx,cl
  426681:	xchg   edx,eax
  426682:	cmp    esi,ecx
  426684:	shr    edx,cl
  426686:	sub    BYTE PTR [ebx+0x13],dl
  426689:	int    0x96
  42668b:	cmc    
  42668c:	int    0xa2
  42668e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426694:	pop    edi
  426695:	xor    ax,0x8080
  426699:	mov    eax,0x24cf0a
  42669e:	add    BYTE PTR [eax],al
  4266a0:	int    0xc
  4266a2:	mov    eax,0x28cf0a
  4266a7:	add    BYTE PTR [eax],al
  4266a9:	pop    edi
  4266aa:	es xor eax,0xab88080
  4266b0:	iret   
  4266b1:	sub    al,0x0
  4266b3:	add    BYTE PTR [eax],al
  4266b5:	pop    edi
  4266b6:	daa    
  4266b7:	xor    eax,0xab88080
  4266bc:	iret   
  4266bd:	xor    al,BYTE PTR [eax]
  4266bf:	add    BYTE PTR [eax],al
  4266c1:	add    al,0xd3
  4266c3:	test   eax,0x34cf0ab8
  4266c8:	add    BYTE PTR [eax],al
  4266ca:	add    BYTE PTR [edi-0x69],bl
  4266cd:	xor    eax,0xab88080
  4266d2:	iret   
  4266d3:	cmp    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [eax],al
  4266d7:	add    al,0xd3
  4266d9:	mov    dl,0xb8
  4266db:	or     cl,bh
  4266dd:	cmp    al,0x0
  4266df:	add    BYTE PTR [eax],al
  4266e1:	pop    edi
  4266e2:	fwait
  4266e3:	xor    eax,0xab88080
  4266e8:	iret   
  4266e9:	inc    eax
  4266ea:	add    BYTE PTR [eax],al
  4266ec:	add    ch,cl
  4266ee:	or     al,0xb8
  4266f0:	or     cl,bh
  4266f2:	inc    esp
  4266f3:	add    BYTE PTR [eax],al
  4266f5:	add    BYTE PTR [edi+0x17],bl
  4266f8:	xor    eax,0xab88080
  4266fd:	iret   
  4266fe:	dec    eax
  4266ff:	add    BYTE PTR [eax],al
  426701:	add    BYTE PTR [edi+0x26],bl
  426704:	pop    esi
  426705:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  42670c:	add    BYTE PTR [eax],al
  42670e:	pop    edi
  42670f:	cmp    esi,DWORD PTR [edx]
  426711:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426718:	add    BYTE PTR [eax],al
  42671a:	jns    0x426792
  42671c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42671d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42671e:	pop    edi
  42671f:	pop    esp
  426720:	adc    eax,0xab88080
  426725:	iret   
  426726:	push   esp
  426727:	add    BYTE PTR [eax],al
  426729:	add    BYTE PTR [ebx+edx*8],al
  42672c:	pop    esp
  42672d:	mov    eax,0x58cf0a
  426732:	add    BYTE PTR [eax],al
  426734:	jns    0x4267ac
  426736:	fisttp WORD PTR [ecx+0x79]
  426739:	jbe    0x4266e4
  42673b:	inc    ecx
  42673c:	jns    0x4267b4
  42673e:	loope  0x4266e3
  426740:	pop    edi
  426741:	fcom   st(4)
  426743:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42674a:	add    BYTE PTR [eax],al
  42674c:	jns    0x4267c4
  42674e:	lods   eax,DWORD PTR ds:[esi]
  42674f:	push   edi
  426750:	pop    edi
  426751:	jnp    0x4267a8
  426753:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42675a:	add    BYTE PTR [eax],al
  42675c:	jns    0x4267d4
  42675e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426762:	jmp    0x8080:0x35a15f47
  426769:	mov    eax,0x64cf0a
  42676e:	add    BYTE PTR [eax],al
  426770:	jns    0x4267e8
  426772:	in     eax,0x18
  426774:	int    0x8d
  426776:	xor    ch,cl
  426778:	xchg   esi,eax
  426779:	xor    BYTE PTR [ebx],bh
  42677b:	(bad)  
  42677d:	icebp  
  42677e:	shr    ebx,cl
  426780:	xchg   edx,eax
  426781:	shr    edx,cl
  426783:	sub    BYTE PTR [ebx+0x13],dl
  426786:	in     al,dx
  426787:	xchg   esp,eax
  426788:	int    0x96
  42678a:	xor    ch,cl
  42678c:	out    0x30,al
  42678e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426794:	stc    
  426795:	shr    ecx,cl
  426797:	sub    BYTE PTR [ebx-0x27],dl
  42679a:	xor    edx,DWORD PTR [ebx]
  42679c:	das    
  42679d:	pop    ecx
  42679e:	mov    WORD PTR [ebp-0x5b],cs
  4267a1:	int    0x96
  4267a3:	xor    ch,cl
  4267a5:	out    0x30,al
  4267a7:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267ad:	stc    
  4267ae:	shr    ecx,cl
  4267b0:	sub    BYTE PTR [ebx-0x27],dl
  4267b3:	int    0xe6
  4267b5:	stc    
  4267b6:	add    al,0x2
  4267b8:	adc    DWORD PTR [edx],0xffffffd3
  4267bb:	fwait
  4267bc:	add    BYTE PTR [eax+0x9033380],0x8c
  4267c3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267c5:	int    0x96
  4267c7:	xor    ch,cl
  4267c9:	lea    esi,[eax]
  4267cb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267d1:	sub    bl,dl
  4267d3:	repz xchg edx,eax
  4267d5:	push   ebx
  4267d6:	jecxz  0x4267a5
  4267d8:	(bad)  
  4267d9:	stc    
  4267da:	xchg   DWORD PTR [ebx],edx
  4267dc:	int    0x96
  4267de:	xor    ch,cl
  4267e0:	out    0x30,al
  4267e2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267e8:	xchg   edx,eax
  4267e9:	shr    ecx,cl
  4267eb:	sub    BYTE PTR [ebx-0x27],dl
  4267ee:	add    al,0xd2
  4267f0:	mov    BYTE PTR [edx],cl
  4267f2:	(bad)  
  4267f3:	stc    
  4267f4:	inc    ebx
  4267f5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267fb:	int    0x96
  4267fd:	xor    BYTE PTR [ebx],bh
  4267ff:	(bad)  
  426801:	icebp  
  426802:	shr    ebx,cl
  426804:	xchg   edx,eax
  426805:	shr    edx,cl
  426807:	sub    BYTE PTR [ebx+0x13],dl
  42680a:	or     cl,bh
  42680c:	adc    eax,0xcd0000ff
  426811:	lea    ecx,[ebp+ecx*8-0x6a]
  426815:	dec    esp
  426816:	cmp    ecx,DWORD PTR [edi]
  426818:	cmp    esi,ecx
  42681a:	shr    edx,cl
  42681c:	sub    bl,dl
  42681e:	jmp    0x4267b2
  426820:	push   ebx
  426821:	adc    ecx,edi
  426823:	xchg   esi,eax
  426824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	or     dl,BYTE PTR ds:0xff1dcf
  42682b:	add    BYTE PTR [ecx+0x6b],ah
  42682e:	xor    eax,0x13cd8080
  426833:	mov    eax,0x4258d0a
  426838:	rcl    edx,cl
  42683a:	int    0xfa
  42683c:	mov    eax,0xcf29e60a
  426841:	loopne 0x4267ec
  426843:	mov    eax,0x42de60a
  426848:	leave  
  426849:	test   BYTE PTR [eax-0x304d19f6],bh
  42684f:	loopne 0x426865
  426851:	mov    eax,0x435e60a
  426856:	leave  
  426857:	loop   0x426811
  426859:	or     ah,dh
  42685b:	cmp    ebp,ecx
  42685d:	cli    
  42685e:	mov    eax,0xcd3de60a
  426863:	add    edi,DWORD PTR [eax-0x32be19f6]
  426869:	cld    
  42686a:	mov    eax,0xcd45e60a
  42686f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426875:	cli    
  426876:	mov    eax,0xcfc2e60a
  42687b:	loopne 0x4268a6
  42687d:	mov    eax,0x455e60a
  426882:	leave  
  426883:	test   BYTE PTR [eax-0x30a619f6],bh
  426889:	loopne 0x426820
  42688b:	mov    eax,0x45de60a
  426890:	leave  
  426891:	loop   0x42684b
  426893:	or     ah,dh
  426895:	popa   
  426896:	mov    eax,0xb8658d0a
  42689b:	or     dl,BYTE PTR [esi-0x47f33297]
  4268a1:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  4268a7:	int    0x96
  4268a9:	dec    esp
  4268aa:	cmp    esi,ecx
  4268ac:	cmp    ecx,DWORD PTR [edi]
  4268ae:	shr    edx,cl
  4268b0:	sub    bl,dl
  4268b2:	jmp    0x426846
  4268b4:	push   ebx
  4268b5:	adc    ecx,ebp
  4268b7:	xchg   esi,eax
  4268b8:	dec    esp
  4268b9:	int    0xe6
  4268bb:	dec    esp
  4268bc:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268c2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268c8:	jmp    0x301bbbf5
  4268cd:	mov    ebx,0xb8d93b5e
  4268d2:	or     dh,BYTE PTR [ecx]
  4268d4:	int    0x8d
  4268d6:	dec    esp
  4268d7:	int    0x96
  4268d9:	dec    esp
  4268da:	cmp    ecx,DWORD PTR [edi]
  4268dc:	cmp    esi,ecx
  4268de:	shr    ebx,cl
  4268e0:	xchg   edx,eax
  4268e1:	shr    edx,cl
  4268e3:	sub    BYTE PTR [ebx+0x13],dl
  4268e6:	int    0x96
  4268e8:	dec    esp
  4268e9:	iret   
  4268ea:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268f0:	out    0x4c,al
  4268f2:	shl    ebx,cl
  4268f4:	xchg   edx,eax
  4268f5:	cmp    edi,ecx
  4268f7:	shr    ecx,cl
  4268f9:	sub    BYTE PTR [ebx-0x27],dl
  4268fc:	das    
  4268fd:	mov    ebx,0xb8d93b5e
  426902:	or     dh,BYTE PTR [ecx]
  426904:	int    0x8d
  426906:	dec    esp
  426907:	int    0x96
  426909:	dec    esp
  42690a:	cmp    esi,ecx
  42690c:	shr    edx,cl
  42690e:	sub    BYTE PTR [ebx],bh
  426910:	psrlq  mm5,mm3
  426913:	xchg   edx,eax
  426914:	push   ebx
  426915:	adc    ecx,ebp
  426917:	xchg   esi,eax
  426918:	dec    esp
  426919:	int    0xe6
  42691b:	dec    esp
  42691c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426922:	stc    
  426923:	shr    ecx,cl
  426925:	sub    BYTE PTR [ebx-0x27],dl
  426928:	mov    eax,0x9096cc0a
  42692d:	inc    DWORD PTR [eax]
  42692f:	add    ch,cl
  426931:	lea    ecx,[ebp+ecx*8-0x6a]
  426935:	dec    esp
  426936:	cmp    esi,ecx
  426938:	shr    edx,cl
  42693a:	sub    BYTE PTR [ebx],bh
  42693c:	psrlq  mm5,mm3
  42693f:	xchg   edx,eax
  426940:	push   ebx
  426941:	adc    ecx,ebp
  426943:	xchg   esi,eax
  426944:	dec    esp
  426945:	int    0xe6
  426947:	dec    esp
  426948:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42694e:	stc    
  42694f:	shr    ecx,cl
  426951:	sub    BYTE PTR [ebx-0x27],dl
  426954:	mov    eax,0xa496cc0a
  426959:	inc    DWORD PTR [eax]
  42695b:	add    ch,cl
  42695d:	lea    esi,[eax]
  42695f:	int    0x96
  426961:	xor    BYTE PTR [ebx],bh
  426963:	icebp  
  426964:	cmp    ecx,DWORD PTR [edi]
  426966:	shr    edx,cl
  426968:	sub    bl,dl
  42696a:	jmp    0x4268fe
  42696c:	push   ebx
  42696d:	adc    ecx,ebp
  42696f:	xchg   esi,eax
  426970:	xor    ch,cl
  426972:	out    0x30,al
  426974:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42697a:	xchg   edx,eax
  42697b:	shr    ecx,cl
  42697d:	sub    BYTE PTR [ebx-0x27],dl
  426980:	xchg   DWORD PTR [ebx],edx
  426982:	or     cl,bh
  426984:	adc    eax,0xcd0000ff
  426989:	lea    ecx,[ebp+ecx*8-0x6a]
  42698d:	dec    esp
  42698e:	int    0xe6
  426990:	mov    BYTE PTR [ebx],bh
  426992:	icebp  
  426993:	cmp    ecx,DWORD PTR [edi]
  426995:	shr    ebx,cl
  426997:	xchg   edx,eax
  426998:	shr    edx,cl
  42699a:	sub    BYTE PTR [ebx+0x13],dl
  42699d:	iret   
  42699e:	push   es
  42699f:	nop
  4269a0:	inc    DWORD PTR [eax]
  4269a2:	add    BYTE PTR [edx],cl
  4269a4:	add    eax,0xff1dcf
  4269a9:	add    bh,cl
  4269ab:	jbe    0x42697d
  4269ad:	mov    ebp,0x10d8
  4269b2:	int    0x8d
  4269b4:	xor    ch,cl
  4269b6:	xchg   esi,eax
  4269b7:	xor    al,al
  4269b9:	(bad)  
  4269ba:	cmp    ecx,DWORD PTR [edi]
  4269bc:	stos   BYTE PTR es:[edi],al
  4269bd:	cmp    ebx,ecx
  4269bf:	shr    ebx,cl
  4269c1:	xchg   edx,eax
  4269c2:	shr    edx,cl
  4269c4:	sub    BYTE PTR [ebx+0x13],dl
  4269c7:	or     al,BYTE PTR ds:0xff1dcf
  4269cd:	add    ch,cl
  4269cf:	jbe    0x426a1d
  4269d1:	int    0x8d
  4269d3:	dec    esp
  4269d4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269d7:	mov    ebp,0xd3f03b92
  4269dc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269e0:	aam    0x3c
  4269e2:	iret   
  4269e3:	push   es
  4269e4:	adc    eax,0x700000ff
  4269e9:	int    0x76
  4269eb:	xor    ch,cl
  4269ed:	lea    esi,[eax]
  4269ef:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269f2:	mov    ebp,0xd3f03b92
  4269f7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269fb:	jo     0x4269cc
  4269fd:	push   es
  4269fe:	and    al,0x0
  426a00:	add    BYTE PTR [eax],al
  426a02:	jo     0x4269d1
  426a04:	jbe    0x426a1a
  426a06:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  426a0d:	int    0x8d
  426a0f:	dec    esp
  426a10:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a13:	lock int 0xe6
  426a16:	mov    bl,dl
  426a18:	mov    ebp,0x28f2d392
  426a1d:	push   ebx
  426a1e:	ror    edi,cl
  426a20:	iret   
  426a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a22:	inc    DWORD PTR [eax]
  426a24:	add    BYTE PTR [edx],cl
  426a26:	int3   
  426a27:	push   es
  426a28:	sbb    eax,0xcf0000ff
  426a2d:	jbe    0x426a54
  426a2f:	mov    ebp,0xeff5
  426a34:	int    0x8d
  426a36:	xor    ch,cl
  426a38:	xchg   esi,eax
  426a39:	xor    BYTE PTR [ebx],bh
  426a3b:	psrlq  mm5,mm3
  426a3e:	xchg   edx,eax
  426a3f:	add    al,0xfb
  426a41:	call   ebx
  426a43:	jmp    0xcf05:0xa135328
  426a4a:	sbb    eax,0x610000ff
  426a4f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a55:	xor    eax,0xab88080
  426a5a:	push   es
  426a5b:	jo     0x426a5d
  426a5d:	add    BYTE PTR [eax],al
  426a5f:	iret   
  426a60:	mov    dh,BYTE PTR [eax]
  426a62:	mov    eax,0xb4cf0a
  426a67:	add    BYTE PTR [eax],al
  426a69:	pop    ebp
  426a6a:	adc    BYTE PTR ds:0xab88080,dh
  426a70:	push   es
  426a71:	bound  eax,QWORD PTR [eax]
  426a73:	add    BYTE PTR [eax],al
  426a75:	int    0xd2
  426a77:	mov    eax,0x94060a
  426a7c:	add    BYTE PTR [eax],al
  426a7e:	int    0xd3
  426a80:	mov    eax,0x98060a
  426a85:	add    BYTE PTR [eax],al
  426a87:	add    al,0x6d
  426a89:	sub    ch,cl
  426a8b:	jge    0x426a45
  426a8d:	or     cl,bh
  426a8f:	mov    eax,0xcf000000
  426a94:	mov    ch,BYTE PTR [eax]
  426a96:	mov    eax,0xbccf0a
  426a9b:	add    BYTE PTR [eax],al
  426a9d:	add    al,0xd3
  426a9f:	pusha  
  426aa0:	mov    eax,0xc0cf0a
  426aa5:	add    BYTE PTR [eax],al
  426aa7:	iret   
  426aa8:	mov    cl,BYTE PTR [edx-0x48]
  426aab:	or     cl,bh
  426aad:	les    eax,FWORD PTR [eax]
  426aaf:	add    BYTE PTR [eax],al
  426ab1:	int    0xf9
  426ab3:	mov    eax,0x9c670a
  426ab8:	add    BYTE PTR [eax],al
  426aba:	iret   
  426abb:	loopne 0x426a5d
  426abd:	pop    edi
  426abe:	add    BYTE PTR ds:0xab88080,dh
  426ac4:	iret   
  426ac5:	enter  0x0,0x0
  426ac9:	iret   
  426aca:	mov    bh,bh
  426acc:	mov    eax,0x90cf0a
  426ad1:	add    BYTE PTR [eax],al
  426ad3:	mov    eax,0xa0670a
  426ad8:	add    BYTE PTR [eax],al
  426ada:	add    al,0xc9
  426adc:	stc    
  426add:	mov    eax,0xa4670a
  426ae2:	add    BYTE PTR [eax],al
  426ae4:	int    0xf9
  426ae6:	pop    edi
  426ae7:	leave  
  426ae8:	xor    eax,0xab88080
  426aed:	iret   
  426aee:	add    BYTE PTR [eax],0x0
  426af1:	add    ch,cl
  426af3:	jge    0x426aad
  426af5:	or     cl,bh
  426af7:	aam    0x0
  426af9:	add    BYTE PTR [eax],al
  426afb:	int    0xc5
  426afd:	mov    eax,0xe0060a
  426b02:	add    BYTE PTR [eax],al
  426b04:	cmp    ebp,DWORD PTR [ebp-0x48]
  426b07:	or     ah,BYTE PTR [edi-0x58]
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	add    bh,cl
  426b0e:	addr16 in al,0x0
  426b11:	add    BYTE PTR [eax],al
  426b13:	leave  
  426b14:	push   es
  426b15:	lods   al,BYTE PTR ds:[esi]
  426b16:	add    BYTE PTR [eax],al
  426b18:	add    dh,ah
  426b1a:	xor    eax,0x6c9352b
  426b1f:	fadd   DWORD PTR [eax]
  426b21:	add    BYTE PTR [eax],al
  426b23:	jae    0x426b5a
  426b25:	jno    0x426b5c
  426b27:	mov    eax,0x3076cdaf
  426b2c:	int    0x8d
  426b2e:	xor    ch,cl
  426b30:	xchg   esi,eax
  426b31:	xor    BYTE PTR [edx+eax*1],al
  426b34:	call   ebx
  426b36:	repnz sub BYTE PTR [ebx],bh
  426b39:	jns    0x426b0e
  426b3b:	mov    ebp,0xcdd35392
  426b40:	lea    esi,[eax]
  426b42:	add    al,0x2
  426b44:	(bad)  
  426b45:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b4b:	repz xchg edx,eax
  426b4d:	push   ebx
  426b4e:	jecxz  0x426b8b
  426b50:	retf   
  426b51:	add    al,0xd2
  426b53:	sbb    bl,BYTE PTR [ebx]
  426b55:	retf   
  426b56:	cmp    eax,DWORD PTR [eax]
  426b58:	inc    ebx
  426b59:	cli    
  426b5a:	das    
  426b5b:	or     cl,dl
  426b5d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b64:	das    
  426b65:	add    al,0x37
  426b67:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b6e:	xchg   esi,eax
  426b6f:	xor    BYTE PTR [ebx],bh
  426b71:	psrlq  mm5,mm3
  426b74:	xchg   edx,eax
  426b75:	add    al,0xfb
  426b77:	call   ebx
  426b79:	jmp    0xcd7d:0x87135328
  426b80:	aad    0xb8
  426b82:	cmp    edx,DWORD PTR ds:0x708d
  426b88:	add    ch,cl
  426b8a:	lea    esi,[eax]
  426b8c:	int    0xe6
  426b8e:	xor    BYTE PTR [ebx],bh
  426b90:	psrlq  mm5,mm3
  426b93:	xchg   edx,eax
  426b94:	add    al,0xf8
  426b96:	call   ebx
  426b98:	jmp    0x8832bec5
  426b9d:	jge    0x426b57
  426b9f:	int    0xcc
  426ba1:	lea    esi,[eax+0x0]
  426ba4:	add    BYTE PTR [eax],al
  426ba6:	mov    eax,0xd3b8e3f8
  426bab:	repnz das 
  426bad:	mov    eax,0x53b8f3e3
  426bb2:	jecxz  0x426b81
  426bb4:	lea    esi,[eax]
  426bb6:	int    0xe6
  426bb8:	xor    BYTE PTR [ebx],bh
  426bba:	psrlq  mm5,mm3
  426bbd:	xchg   edx,eax
  426bbe:	add    al,0xf8
  426bc0:	call   ebx
  426bc2:	jmp    0x8832beef
  426bc7:	jge    0x426b81
  426bc9:	or     dl,BYTE PTR ds:0x708d
  426bcf:	add    ch,cl
  426bd1:	lea    esi,[eax]
  426bd3:	int    0x96
  426bd5:	xor    BYTE PTR [ebx],bh
  426bd7:	(bad)  
  426bd9:	sti    
  426bda:	call   ebx
  426bdc:	jmp    0x426b70
  426bde:	shr    edx,cl
  426be0:	sub    BYTE PTR [ebx+0x13],dl
  426be3:	int    0x96
  426be5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426beb:	add    al,0x2
  426bed:	(bad)  
  426bee:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426bf4:	repz xchg edx,eax
  426bf6:	push   ebx
  426bf7:	jecxz  0x426c34
  426bf9:	retf   
  426bfa:	add    al,0xd2
  426bfc:	sbb    bl,BYTE PTR [ebx]
  426bfe:	retf   
  426bff:	cmp    eax,DWORD PTR [eax]
  426c01:	inc    ebx
  426c02:	cli    
  426c03:	das    
  426c04:	or     ebp,DWORD PTR [esi+0x2f000000]
  426c0a:	pop    es
  426c0b:	pop    ebx
  426c0c:	add    BYTE PTR [eax],al
  426c0e:	add    bl,al
  426c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c11:	mov    esi,0x76cf4229
  426c16:	jne    0x426c22
  426c18:	jbe    0x426ba2
  426c1a:	int    0x76
  426c1c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c22:	or     bl,BYTE PTR [ecx+ecx*8]
  426c25:	ins    BYTE PTR es:[edi],dx
  426c26:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c2c:	jbe    0x426ca3
  426c2e:	int    0x8d
  426c30:	jge    0x426c61
  426c32:	inc    ebp
  426c33:	jge    0x426bc7
  426c35:	shr    ebx,cl
  426c37:	xchg   edx,eax
  426c38:	int    0x8d
  426c3a:	jne    0x426c09
  426c3c:	xchg   esi,eax
  426c3d:	jge    0x426c7a
  426c3f:	leave  
  426c40:	cmp    ebx,edx
  426c42:	push   ebx
  426c43:	icebp  
  426c44:	int    0x76
  426c46:	cmc    
  426c47:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c4d:	jo     0x426c1e
  426c4f:	push   es
  426c50:	cmc    
  426c51:	inc    DWORD PTR [eax]
  426c53:	add    BYTE PTR [eax-0x2d],dh
  426c56:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c5d:	int    0x76
  426c5f:	in     eax,dx
  426c60:	int    0x8d
  426c62:	adc    DWORD PTR [edi],ebp
  426c64:	inc    ebp
  426c65:	jge    0x426bf9
  426c67:	shr    ebx,cl
  426c69:	xchg   edx,eax
  426c6a:	int    0x8d
  426c6c:	in     eax,dx
  426c6d:	int    0x96
  426c6f:	adc    ebx,edx
  426c71:	repnz sub ch,cl
  426c74:	iret   
  426c75:	cmc    
  426c76:	inc    DWORD PTR [eax]
  426c78:	add    ch,cl
  426c7a:	mov    DWORD PTR [ebx],edi
  426c7c:	leave  
  426c7d:	cmp    ebx,edx
  426c7f:	push   ebx
  426c80:	rol    BYTE PTR [ebx+0x7d],cl
  426c83:	das    
  426c84:	push   es
  426c85:	push   ebp
  426c86:	add    BYTE PTR [eax-0xa293280],0xc9
  426c8d:	jbe    0x426c9c
  426c8f:	(bad)  
  426c90:	ficom  WORD PTR ss:[ebx]
  426c93:	pop    ebp
  426c94:	mov    ebp,0xa25230a
  426c99:	jbe    0x426c8c
  426c9b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426ca1:	int    0x76
  426ca3:	xchg   ebp,eax
  426ca4:	int    0x8d
  426ca6:	popf   
  426ca7:	das    
  426ca8:	inc    ebp
  426ca9:	jge    0x426c3d
  426cab:	shr    ebx,cl
  426cad:	xchg   edx,eax
  426cae:	int    0x8d
  426cb0:	xchg   ebp,eax
  426cb1:	int    0x96
  426cb3:	popf   
  426cb4:	cmp    ecx,ecx
  426cb6:	cmp    ebx,edx
  426cb8:	push   ebx
  426cb9:	icebp  
  426cba:	bound  eax,QWORD PTR [eax]
  426cbc:	(bad)  
  426cbd:	xor    al,0xd3
  426cbf:	repnz sub BYTE PTR [eax],al
  426cc2:	pop    ecx
  426cc3:	xor    eax,0xbd808081
  426cc8:	push   eax
  426cc9:	repnz add BYTE PTR [eax],al
  426ccc:	int    0x76
  426cce:	xchg   ebp,eax
  426ccf:	int    0x8d
  426cd1:	popf   
  426cd2:	das    
  426cd3:	inc    ebp
  426cd4:	jge    0x426c68
  426cd6:	shr    ebx,cl
  426cd8:	xchg   edx,eax
  426cd9:	int    0x8d
  426cdb:	xchg   ebp,eax
  426cdc:	int    0x96
  426cde:	popf   
  426cdf:	cmp    ecx,ecx
  426ce1:	cmp    ebx,edx
  426ce3:	push   ebx
  426ce4:	icebp  
  426ce5:	bound  eax,QWORD PTR [eax]
  426ce7:	pop    ecx
  426ce8:	xor    eax,0xd3808081
  426ced:	repnz sub BYTE PTR [eax],al
  426cf0:	pop    ecx
  426cf1:	sub    eax,0xbd808081
  426cf6:	xchg   edx,eax
  426cf7:	repnz add BYTE PTR [eax],al
  426cfa:	int    0x7
  426cfc:	xor    eax,0xcd808081
  426d01:	mov    ch,cl
  426d03:	jle    0x426d69
  426d05:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426d0b:	lea    ecx,ds:0x2ff176cd
  426d11:	inc    ebp
  426d12:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d18:	jbe    0x426d27
  426d1a:	int    0x96
  426d1c:	icebp  
  426d1d:	cmp    esi,eax
  426d1f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d25:	ror    ebp,cl
  426d27:	lea    ecx,[eax+0x187ebb2f]
  426d2d:	push   es
  426d2e:	jge    0x426d04
  426d30:	dec    esp
  426d31:	int    0x7
  426d33:	popf   
  426d34:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d3e:	jbe    0x426d8c
  426d40:	int    0x76
  426d42:	xor    BYTE PTR [eax],al
  426d44:	(bad)  
  426d45:	cmp    al,0x0
  426d47:	(bad)  
  426d48:	cmc    
  426d49:	add    dh,dl
  426d4b:	sub    al,0x0
  426d4d:	(bad)  
  426d4e:	and    al,0x0
  426d50:	(bad)  
  426d51:	sbb    al,0x0
  426d53:	(bad)  
  426d54:	adc    al,0xbd
  426d56:	test   ch,dh
  426d58:	add    BYTE PTR [eax],al
  426d5a:	or     al,BYTE PTR [esi]
  426d5c:	adc    edi,edi
  426d5e:	add    BYTE PTR [eax],al
  426d60:	int    0x76
  426d62:	cmp    al,0x4
  426d64:	fcom   QWORD PTR [eax+eax*4]
  426d67:	aam    0x1a
  426d69:	int    0x76
  426d6b:	cmp    al,0x4
  426d6d:	fsub   QWORD PTR [eax+eax*4]
  426d70:	aam    0x4e
  426d72:	int    0x6
  426d74:	adc    edi,edi
  426d76:	add    BYTE PTR [eax],al
  426d78:	int    0x8d
  426d7a:	cmp    al,0xa
  426d7c:	outs   dx,BYTE PTR ds:[esi]
  426d7d:	sbb    al,0xec
  426d7f:	push   ebx
  426d80:	add    dh,dl
  426d82:	cmp    al,0x0
  426d84:	(bad)  
  426d85:	cmc    
  426d86:	mov    ebp,0x6daa
  426d8b:	stos   BYTE PTR es:[edi],al
  426d8c:	test   al,0x63
  426d8e:	retf   
  426d8f:	shl    BYTE PTR [eax+eax*4],cl
  426d92:	xchg   esi,eax
  426d93:	int    0xed
  426d95:	jno    0x426e08
  426d97:	cwde   
  426d98:	leave  
  426d99:	jbe    0x426d98
  426d9b:	dec    ecx
  426d9c:	and    DWORD PTR [esi-0x68936cb],eax
  426da2:	inc    ecx
  426da3:	and    DWORD PTR [esi-0x28932cb],eax
  426da9:	int    0xd6
  426dab:	std    
  426dac:	sar    bh,0x5f
  426daf:	shl    DWORD PTR [ecx],1
  426db1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426db7:	sti    
  426db8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dbe:	push   ebx
  426dbf:	jns    0x426d8e
  426dc1:	(bad)  
  426dc2:	mov    BYTE PTR [ebx+0x11],al
  426dc5:	int    0x76
  426dc7:	std    
  426dc8:	aam    0xc4
  426dca:	int    0xd6
  426dcc:	std    
  426dcd:	cmp    edx,ebx
  426dcf:	cmp    edi,ebx
  426dd1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426dd7:	push   ebx
  426dd8:	jns    0x426da7
  426dda:	(bad)  
  426ddb:	dec    esp
  426ddc:	inc    ebx
  426ddd:	adc    esp,edx
  426ddf:	pop    ebx
  426de0:	int    0x96
  426de2:	xor    BYTE PTR [edx-0x32b31933],bl
  426de8:	jbe    0x426d72
  426dea:	cmp    esi,edi
  426dec:	push   es
  426ded:	add    ah,dl
  426def:	push   esi
  426df0:	pop    ebx
  426df1:	retf   0x8624
  426df4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dfa:	das    
  426dfb:	push   es
  426dfc:	fcmovbe st,st(6)
  426dfe:	dec    esi
  426dff:	add    al,0xf4
  426e01:	adc    DWORD PTR [edx],0xffffffc5
  426e04:	fwait
  426e05:	add    BYTE PTR [eax+0x2fa60980],0xec
  426e0c:	dec    esp
  426e0d:	adc    ch,ah
  426e0f:	in     eax,dx
  426e10:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e17:	lea    ebp,[edi]
  426e19:	retf   0x2fa6
  426e1c:	or     DWORD PTR [esi+eax*4],esp
  426e1f:	js     0x426e64
  426e21:	clc    
  426e22:	or     BYTE PTR [esi],0x63
  426e25:	int    0x76
  426e27:	stc    
  426e28:	cmp    edx,ebx
  426e2a:	int    0x8d
  426e2c:	stc    
  426e2d:	add    al,0x2
  426e2f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e35:	std    
  426e36:	cmp    edx,ebx
  426e38:	int    0x8d
  426e3a:	std    
  426e3b:	cmp    edx,DWORD PTR [ebx]
  426e3d:	shl    edx,cl
  426e3f:	sub    bl,dl
  426e41:	mov    ebp,0xa8d35392
  426e46:	retf   
  426e47:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e4b:	int    0xed
  426e4d:	add    al,0xed
  426e4f:	(bad)  
  426e50:	leave  
  426e51:	jbe    0x426e50
  426e53:	dec    ecx
  426e54:	and    DWORD PTR [esi+0x21416135],eax
  426e5a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e60:	jbe    0x426e76
  426e62:	or     dh,BYTE PTR [esi+0x14]
  426e65:	int    0x76
  426e67:	adc    al,0xcd
  426e69:	add    DWORD PTR ds:0xcd808081,ebp
  426e6f:	lea    edx,[ecx*8+0x2d0acd80]
  426e76:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e80:	lea    esi,[ebp-0x32028933]
  426e86:	(bad)  
  426e87:	std    
  426e88:	cwde   
  426e89:	call   0x3b85:0x82cfffc0
  426e90:	jns    0x426e65
  426e92:	mov    ebp,0xf03baa92
  426e97:	shl    edx,cl
  426e99:	sub    BYTE PTR [ebx-0x2d],dl
  426e9c:	or     dh,BYTE PTR [esi-0x63]
  426e9f:	int    0x76
  426ea1:	std    
  426ea2:	int    0x8d
  426ea4:	std    
  426ea5:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ea8:	mov    ebp,0xd3f03b92
  426ead:	repnz sub BYTE PTR [ebx-0x2d],dl
  426eb1:	or     dh,BYTE PTR [esi-0x53]
  426eb4:	int    0x76
  426eb6:	mov    ch,0xcd
  426eb8:	ins    BYTE PTR es:[edi],dx
  426eb9:	jo     0x426ebf
  426ebb:	mov    ebp,0xf1760a4c
  426ec0:	int    0x76
  426ec2:	mov    ch,0xcd
  426ec4:	ins    BYTE PTR es:[edi],dx
  426ec5:	pop    esp
  426ec6:	int    0x8d
  426ec8:	mov    ch,0x7c
  426eca:	push   es
  426ecb:	outs   dx,BYTE PTR ds:[esi]
  426ecc:	xchg   esp,eax
  426ecd:	int    0x76
  426ecf:	mov    ch,0xd4
  426ed1:	sbb    al,0xcd
  426ed3:	ins    BYTE PTR es:[edi],dx
  426ed4:	pop    esp
  426ed5:	int    0x8d
  426ed7:	mov    ch,0xcd
  426ed9:	jle    0x426e6f
  426edb:	jl     0x426ed5
  426edd:	icebp  
  426ede:	sub    edi,DWORD PTR [ebp-0x33]
  426ee1:	jbe    0x426e98
  426ee3:	int    0x6c
  426ee5:	pop    esp
  426ee6:	xchg   ebx,edx
  426ee8:	in     al,dx
  426ee9:	xchg   ebp,ecx
  426eeb:	ins    BYTE PTR es:[edi],dx
  426eec:	xchg   esp,eax
  426eed:	or     dh,BYTE PTR [esi-0x43]
  426ef0:	int    0x76
  426ef2:	std    
  426ef3:	int    0x8d
  426ef5:	std    
  426ef6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ef9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f00:	push   ebx
  426f01:	ror    DWORD PTR [edx],cl
  426f03:	jbe    0x426f19
  426f05:	int    0x76
  426f07:	std    
  426f08:	int    0x8d
  426f0a:	std    
  426f0b:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f0e:	lock shl edx,cl
  426f11:	sub    bl,dl
  426f13:	mov    ebp,0xad35392
  426f18:	jbe    0x426f2e
  426f1a:	int    0x76
  426f1c:	std    
  426f1d:	int    0x8d
  426f1f:	std    
  426f20:	cmp    esi,eax
  426f22:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f25:	repnz sub bl,dl
  426f28:	mov    ebp,0xcdd35392
  426f2d:	lea    esi,[eax]
  426f2f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f35:	jbe    0x426f4b
  426f37:	cmp    DWORD PTR [ecx],esp
  426f39:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f3f:	and    DWORD PTR [esi+0x1476c935],eax
  426f45:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f4b:	xchg   BYTE PTR [eax-0x2893280],al
  426f51:	int    0x8d
  426f53:	std    
  426f54:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f57:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f5e:	push   ebx
  426f5f:	ror    DWORD PTR [edx],cl
  426f61:	jbe    0x426f10
  426f63:	int    0x76
  426f65:	mov    ebp,0xa4c7687
  426f6a:	jbe    0x426f09
  426f6c:	add    dh,dl
  426f6e:	popf   
  426f6f:	add    dh,dl
  426f71:	dec    esp
  426f72:	int    0x8d
  426f74:	mov    ch,0xbd
  426f76:	neg    bh
  426f78:	add    BYTE PTR [eax],al
  426f7a:	or     dh,BYTE PTR [esi+0x14]
  426f7d:	int    0x76
  426f7f:	adc    al,0x6
  426f81:	ins    DWORD PTR es:[edi],dx
  426f82:	aam    0x60
  426f84:	int    0x76
  426f86:	popf   
  426f87:	or     dh,BYTE PTR [esi-0x5b]
  426f8a:	int    0x76
  426f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f8d:	int    0x8d
  426f8f:	dec    esp
  426f90:	xor    edx,ebx
  426f92:	or     dh,BYTE PTR [esi-0x5b]
  426f95:	int    0x76
  426f97:	adc    al,0xcd
  426f99:	lea    edx,[ecx*8+0x6e87306c]
  426fa0:	dec    esp
  426fa1:	int    0x8d
  426fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fa4:	inc    ebx
  426fa5:	jge    0x426f29
  426fa7:	sbb    ch,cl
  426fa9:	jbe    0x426fbf
  426fab:	int    0x6c
  426fad:	dec    esp
  426fae:	int    0x8d
  426fb0:	adc    al,0x87
  426fb2:	outs   dx,BYTE PTR ds:[esi]
  426fb3:	mov    ch,cl
  426fb5:	lea    esp,[ebp-0x2e142ccd]
  426fbb:	test   DWORD PTR [eax+0x2149bf80],eax
  426fc1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426fc7:	jbe    0x427046
  426fc9:	inc    ecx
  426fca:	and    DWORD PTR [esi+0x7576c935],eax
  426fd0:	cmp    DWORD PTR [ecx],esp
  426fd2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fd8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fde:	or     dh,BYTE PTR [esi-0xb]
  426fe1:	iret   
  426fe2:	jbe    0x427061
  426fe4:	or     dh,BYTE PTR [esi+0x11]
  426fe7:	iret   
  426fe8:	jbe    0x42705f
  426fea:	or     dh,BYTE PTR [esi+0x14]
  426fed:	iret   
  426fee:	jbe    0x42705d
  426ff0:	or     dh,BYTE PTR [esi-0x13]
  426ff3:	int    0x76
  426ff5:	std    
  426ff6:	int    0x8d
  426ff8:	std    
  426ff9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ffc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427003:	push   ebx
  427004:	ror    DWORD PTR [edx],cl
  427006:	jbe    0x426fad
  427008:	jmp    0x42701d
  42700a:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427010:	and    DWORD PTR [esi-0x22fad0cb],eax
  427016:	xchg   DWORD PTR [eax+0x4cc080],eax
  42701c:	(bad)  
  42701d:	popf   
  42701e:	iret   
  42701f:	jbe    0x426ff1
  427021:	jo     0x426fe0
  427023:	xlat   BYTE PTR ds:[ebx]
  427024:	fild   WORD PTR [eax]
  427026:	add    ch,cl
  427028:	jbe    0x427023
  42702a:	int    0x8d
  42702c:	stc    
  42702d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427030:	lock shl edx,cl
  427033:	sub    bl,dl
  427035:	mov    ebp,0xad35392
  42703a:	jbe    0x426fe9
  42703c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427042:	int    0x76
  427044:	xchg   ebp,eax
  427045:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42704b:	in     eax,0x28
  42704d:	push   ebx
  42704e:	popf   
  42704f:	or     ah,BYTE PTR [esi-0x689325b]
  427055:	int    0x8d
  427057:	stc    
  427058:	cmp    esi,eax
  42705a:	shl    edx,cl
  42705c:	sub    BYTE PTR [ebx],bh
  42705e:	jns    0x427033
  427060:	mov    ebp,0xcdd35392
  427065:	(bad)  
  427066:	stc    
  427067:	int    0x96
  427069:	stc    
  42706a:	cmp    ecx,DWORD PTR [edi]
  42706c:	cmp    ebx,ecx
  42706e:	shr    ebx,cl
  427070:	xchg   edx,eax
  427071:	shr    edx,cl
  427073:	sub    BYTE PTR [ebx+0x13],dl
  427076:	xchg   ebx,edx
  427078:	int    0x8d
  42707a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42707b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427081:	sub    ch,cl
  427083:	jbe    0x42707e
  427085:	int    0x8d
  427087:	stc    
  427088:	cmp    edi,DWORD PTR [ecx+0x3b]
  42708b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427092:	push   ebx
  427093:	shl    DWORD PTR [eax-0x40],cl
  427096:	dec    esp
  427097:	iret   
  427098:	jbe    0x42706a
  42709a:	jo     0x427059
  42709c:	sti    
  42709d:	std    
  42709e:	add    BYTE PTR [eax],al
  4270a0:	int    0x76
  4270a2:	std    
  4270a3:	int    0x8d
  4270a5:	std    
  4270a6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270a9:	lock shl edx,cl
  4270ac:	sub    bl,dl
  4270ae:	mov    ebp,0xcdd35392
  4270b3:	lea    esp,[ebp+0x28d47d43]
  4270b9:	int    0x76
  4270bb:	std    
  4270bc:	int    0x8d
  4270be:	std    
  4270bf:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270c2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270c9:	push   ebx
  4270ca:	shl    DWORD PTR [eax-0x40],cl
  4270cd:	dec    esp
  4270ce:	iret   
  4270cf:	jbe    0x4270a1
  4270d1:	jo     0x427090
  4270d3:	mov    edi,0xcd0000fd
  4270d8:	jbe    0x4270cf
  4270da:	int    0x8d
  4270dc:	cmc    
  4270dd:	int    0x89
  4270df:	int    0x80
  4270e1:	cmp    esi,eax
  4270e3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270e6:	repnz sub bl,dl
  4270e9:	mov    ebp,0xcad35392
  4270ee:	je     0x427075
  4270f0:	ror    ch,1
  4270f2:	(bad)  
  4270f3:	std    
  4270f4:	int    0x96
  4270f6:	std    
  4270f7:	cmp    ecx,DWORD PTR [edi]
  4270f9:	cmp    ebx,ecx
  4270fb:	shr    ebx,cl
  4270fd:	xchg   edx,eax
  4270fe:	shr    edx,cl
  427100:	sub    BYTE PTR [edi],ch
  427102:	pop    ecx
  427103:	ins    DWORD PTR es:[edi],dx
  427104:	push   ebx
  427105:	adc    eax,DWORD PTR [ebx-0x2d]
  427108:	das    
  427109:	add    eax,0x80809212
  42710e:	int    0x76
  427110:	adc    ebp,ecx
  427112:	lea    edx,[ecx]
  427114:	int    0x89
  427116:	int    0x80
  427118:	cmp    esi,eax
  42711a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42711d:	repnz sub bl,dl
  427120:	mov    ebp,0xcad35392
  427125:	je     0x4270ac
  427127:	ror    ch,1
  427129:	(bad)  
  42712a:	std    
  42712b:	int    0x96
  42712d:	std    
  42712e:	cmp    ecx,DWORD PTR [edi]
  427130:	cmp    ebx,ecx
  427132:	shr    ebx,cl
  427134:	xchg   edx,eax
  427135:	shr    edx,cl
  427137:	sub    BYTE PTR [edi],ch
  427139:	pop    ecx
  42713a:	ins    DWORD PTR es:[edi],dx
  42713b:	push   ebx
  42713c:	adc    eax,DWORD PTR [ebx-0x2d]
  42713f:	das    
  427140:	add    eax,0x8080928a
  427145:	int    0x76
  427147:	adc    al,0xcd
  427149:	lea    edx,[ecx*8+0x3b80cd89]
  427150:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427154:	repnz sub bl,dl
  427157:	mov    ebp,0xcad35392
  42715c:	je     0x4270e3
  42715e:	ror    ch,1
  427160:	(bad)  
  427161:	std    
  427162:	int    0x96
  427164:	std    
  427165:	cmp    ecx,DWORD PTR [edi]
  427167:	cmp    ebx,ecx
  427169:	shr    ebx,cl
  42716b:	xchg   edx,eax
  42716c:	shr    edx,cl
  42716e:	sub    BYTE PTR [edi],ch
  427170:	pop    ecx
  427171:	ins    DWORD PTR es:[edi],dx
  427172:	push   ebx
  427173:	adc    eax,DWORD PTR [ebx-0x2d]
  427176:	das    
  427177:	add    eax,0x8080921b
  42717c:	int    0x76
  42717e:	in     eax,dx
  42717f:	int    0x8d
  427181:	in     eax,dx
  427182:	int    0x89
  427184:	int    0x80
  427186:	cmp    esi,eax
  427188:	cmp    edi,DWORD PTR [ecx-0x2d]
  42718b:	repnz sub bl,dl
  42718e:	mov    ebp,0xcad35392
  427193:	je     0x42711a
  427195:	ror    ch,1
  427197:	(bad)  
  427198:	std    
  427199:	int    0x96
  42719b:	std    
  42719c:	cmp    ecx,DWORD PTR [edi]
  42719e:	cmp    ebx,ecx
  4271a0:	shr    ebx,cl
  4271a2:	xchg   edx,eax
  4271a3:	shr    edx,cl
  4271a5:	sub    BYTE PTR [edi],ch
  4271a7:	pop    ecx
  4271a8:	ins    DWORD PTR es:[edi],dx
  4271a9:	push   ebx
  4271aa:	adc    eax,DWORD PTR [ebx-0x2d]
  4271ad:	das    
  4271ae:	add    eax,0x808081a5
  4271b3:	int    0x76
  4271b5:	adc    ebp,ecx
  4271b7:	lea    edx,[ecx]
  4271b9:	int    0x89
  4271bb:	int    0x80
  4271bd:	cmp    esi,eax
  4271bf:	shl    edx,cl
  4271c1:	sub    BYTE PTR [ebx],bh
  4271c3:	jns    0x427198
  4271c5:	mov    ebp,0xcad35392
  4271ca:	je     0x427151
  4271cc:	ror    ch,1
  4271ce:	(bad)  
  4271cf:	cmc    
  4271d0:	int    0x89
  4271d2:	int    0x96
  4271d4:	cmc    
  4271d5:	int    0x22
  4271d7:	cmp    ecx,DWORD PTR [edi]
  4271d9:	shr    ebx,cl
  4271db:	xchg   edx,eax
  4271dc:	cmp    ebx,ecx
  4271de:	shr    edx,cl
  4271e0:	sub    BYTE PTR [ebx+0x13],dl
  4271e3:	retf   0x4d8c
  4271e6:	rol    BYTE PTR [edx-0x2d],1
  4271e9:	int    0x8d
  4271eb:	adc    al,0xcd
  4271ed:	mov    ebp,ecx
  4271ef:	xchg   esi,eax
  4271f0:	adc    al,0xcd
  4271f2:	and    bh,BYTE PTR [ebx]
  4271f4:	psrlq  mm5,mm3
  4271f7:	xchg   edx,eax
  4271f8:	cmp    ebx,ecx
  4271fa:	shr    edx,cl
  4271fc:	sub    BYTE PTR [ebx+0x13],dl
  4271ff:	retf   0x4d8c
  427202:	ror    BYTE PTR [edx-0x2d],1
  427205:	int    0x8d
  427207:	cmc    
  427208:	int    0x89
  42720a:	int    0x96
  42720c:	cmc    
  42720d:	int    0x22
  42720f:	cmp    ecx,DWORD PTR [edi]
  427211:	cmp    ebx,ecx
  427213:	shr    ebx,cl
  427215:	xchg   edx,eax
  427216:	shr    edx,cl
  427218:	sub    BYTE PTR [ebx+0x13],dl
  42721b:	retf   0x4d8c
  42721e:	push   ebp
  42721f:	pusha  
  427220:	jge    0x427251
  427222:	push   es
  427223:	mov    esp,0xcd808081
  427228:	jbe    0x42723e
  42722a:	int    0x8d
  42722c:	adc    al,0xcd
  42722e:	mov    ebp,ecx
  427230:	cmp    BYTE PTR [ebx],0xf0
  427233:	shl    edx,cl
  427235:	sub    BYTE PTR [ebx],bh
  427237:	jns    0x42720c
  427239:	mov    ebp,0xcad35392
  42723e:	je     0x4271c5
  427240:	ror    ch,1
  427242:	lea    edx,[ecx]
  427244:	int    0x89
  427246:	int    0x96
  427248:	adc    ebp,ecx
  42724a:	and    bh,BYTE PTR [ebx]
  42724c:	psrlq  mm5,mm3
  42724f:	xchg   edx,eax
  427250:	cmp    ebx,ecx
  427252:	shr    edx,cl
  427254:	sub    BYTE PTR [ebx+0x13],dl
  427257:	retf   0x4d8c
  42725a:	rol    BYTE PTR [edx-0x2d],1
  42725d:	int    0x8d
  42725f:	in     eax,dx
  427260:	int    0x89
  427262:	int    0x96
  427264:	in     eax,dx
  427265:	int    0x22
  427267:	cmp    ecx,DWORD PTR [edi]
  427269:	shr    ebx,cl
  42726b:	xchg   edx,eax
  42726c:	cmp    ebx,ecx
  42726e:	shr    edx,cl
  427270:	sub    BYTE PTR [ebx+0x13],dl
  427273:	retf   0x4d8c
  427276:	ror    BYTE PTR [edx-0x2d],1
  427279:	int    0x8d
  42727b:	adc    ebp,ecx
  42727d:	mov    ebp,ecx
  42727f:	xchg   esi,eax
  427280:	adc    ebp,ecx
  427282:	and    bh,BYTE PTR [ebx]
  427284:	(bad)  
  427286:	(bad)  
  427288:	jmp    0x42721c
  42728a:	shr    edx,cl
  42728c:	sub    BYTE PTR [ebx+0x13],dl
  42728f:	retf   0x4d8c
  427292:	push   ebp
  427293:	pusha  
  427294:	jge    0x4272c5
  427296:	push   es
  427297:	cmc    
  427298:	add    BYTE PTR [eax-0x12893280],0xcd
  42729f:	(bad)  
  4272a0:	in     eax,dx
  4272a1:	int    0x89
  4272a3:	int    0x80
  4272a5:	cmp    esi,eax
  4272a7:	shl    edx,cl
  4272a9:	sub    BYTE PTR [ebx],bh
  4272ab:	jns    0x427280
  4272ad:	mov    ebp,0xcad35392
  4272b2:	je     0x427239
  4272b4:	ror    ch,1
  4272b6:	lea    edx,[ecx*8+0x1496cd89]
  4272bd:	int    0x22
  4272bf:	cmp    ecx,DWORD PTR [edi]
  4272c1:	shr    ebx,cl
  4272c3:	xchg   edx,eax
  4272c4:	cmp    ebx,ecx
  4272c6:	shr    edx,cl
  4272c8:	sub    BYTE PTR [ebx+0x13],dl
  4272cb:	retf   0x4d8c
  4272ce:	rol    BYTE PTR [edx-0x2d],1
  4272d1:	int    0x8d
  4272d3:	cmc    
  4272d4:	int    0x89
  4272d6:	int    0x96
  4272d8:	cmc    
  4272d9:	int    0x22
  4272db:	cmp    ecx,DWORD PTR [edi]
  4272dd:	shr    ebx,cl
  4272df:	xchg   edx,eax
  4272e0:	cmp    ebx,ecx
  4272e2:	shr    edx,cl
  4272e4:	sub    BYTE PTR [ebx+0x13],dl
  4272e7:	retf   0x4d8c
  4272ea:	ror    BYTE PTR [edx-0x2d],1
  4272ed:	int    0x8d
  4272ef:	adc    al,0xcd
  4272f1:	mov    ebp,ecx
  4272f3:	xchg   esi,eax
  4272f4:	adc    al,0xcd
  4272f6:	and    bh,BYTE PTR [ebx]
  4272f8:	(bad)  
  4272fa:	(bad)  
  4272fc:	jmp    0x427290
  4272fe:	shr    edx,cl
  427300:	sub    BYTE PTR [ebx+0x13],dl
  427303:	retf   0x4d8c
  427306:	push   ebp
  427307:	pusha  
  427308:	jge    0x427339
  42730a:	push   es
  42730b:	add    DWORD PTR [eax+0x76cd8080],eax
  427311:	in     eax,dx
  427312:	int    0x8d
  427314:	in     eax,dx
  427315:	int    0x89
  427317:	int    0x80
  427319:	cmp    esi,eax
  42731b:	shl    edx,cl
  42731d:	sub    BYTE PTR [ebx],bh
  42731f:	jns    0x4272f4
  427321:	mov    ebp,0xcad35392
  427326:	je     0x4272ad
  427328:	ror    ch,1
  42732a:	(bad)  
  42732b:	cmc    
  42732c:	int    0x89
  42732e:	int    0x96
  427330:	cmc    
  427331:	int    0x22
  427333:	cmp    ecx,DWORD PTR [edi]
  427335:	shr    ebx,cl
  427337:	xchg   edx,eax
  427338:	cmp    ebx,ecx
  42733a:	shr    edx,cl
  42733c:	sub    BYTE PTR [ebx+0x13],dl
  42733f:	retf   0x4d8c
  427342:	rol    BYTE PTR [edx-0x2d],1
  427345:	int    0x8d
  427347:	adc    ebp,ecx
  427349:	mov    ebp,ecx
  42734b:	xchg   esi,eax
  42734c:	adc    ebp,ecx
  42734e:	and    bh,BYTE PTR [ebx]
  427350:	psrlq  mm5,mm3
  427353:	xchg   edx,eax
  427354:	cmp    ebx,ecx
  427356:	shr    edx,cl
  427358:	sub    BYTE PTR [ebx+0x13],dl
  42735b:	retf   0x4d8c
  42735e:	ror    BYTE PTR [edx-0x2d],1
  427361:	int    0x8d
  427363:	in     eax,dx
  427364:	int    0x89
  427366:	int    0x96
  427368:	in     eax,dx
  427369:	int    0x22
  42736b:	cmp    ecx,DWORD PTR [edi]
  42736d:	cmp    ebx,ecx
  42736f:	shr    ebx,cl
  427371:	xchg   edx,eax
  427372:	shr    edx,cl
  427374:	sub    BYTE PTR [ebx+0x13],dl
  427377:	retf   0x4d8c
  42737a:	push   ebp
  42737b:	pusha  
  42737c:	jge    0x427354
  42737e:	xor    bh,cl
  427380:	jbe    0x427352
  427382:	jo     0x427341
  427384:	outs   dx,DWORD PTR ds:[esi]
  427385:	lods   eax,DWORD PTR ds:[esi]
  427386:	add    BYTE PTR [eax],al
  427388:	int    0x8d
  42738a:	pop    ebp
  42738b:	inc    ebx
  42738c:	rcl    esp,cl
  42738e:	push   ss
  42738f:	int    0x76
  427391:	std    
  427392:	int    0x8d
  427394:	std    
  427395:	cmp    esi,eax
  427397:	cmp    edi,DWORD PTR [ecx-0x2d]
  42739a:	repnz sub bl,dl
  42739d:	mov    ebp,0xad35392
  4273a2:	jbe    0x427351
  4273a4:	int    0x76
  4273a6:	stc    
  4273a7:	int    0xa6
  4273a9:	stc    
  4273aa:	int    0x76
  4273ac:	stc    
  4273ad:	int    0x8d
  4273af:	stc    
  4273b0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273b6:	xchg   edx,eax
  4273b7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273be:	gs int 0x76
  4273c1:	xchg   ebp,eax
  4273c2:	cmp    ecx,DWORD PTR [edi]
  4273c4:	add    al,0xf2
  4273c6:	std    
  4273c7:	add    al,0xad
  4273c9:	std    
  4273ca:	shr    esp,cl
  4273cc:	sub    BYTE PTR [edi+0x12db537d],al
  4273d2:	hlt    
  4273d3:	dec    ecx
  4273d4:	and    DWORD PTR [esi-0x28932cb],eax
  4273da:	int    0x8d
  4273dc:	std    
  4273dd:	cmp    esi,eax
  4273df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273e2:	repnz sub bl,dl
  4273e5:	mov    ebp,0xcdd35392
  4273ea:	lea    ebp,[ebp+0x52f7d43]
  4273f0:	push   ds
  4273f1:	std    
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	int    0x76
  4273f6:	std    
  4273f7:	int    0x8d
  4273f9:	std    
  4273fa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273fd:	lock shl edx,cl
  427400:	sub    bl,dl
  427402:	mov    ebp,0xcdd35392
  427407:	lea    ebp,[ebp+0x1ad67d43]
  42740d:	int    0x76
  42740f:	stc    
  427410:	int    0x8d
  427412:	stc    
  427413:	cmp    edi,DWORD PTR [ecx+0x3b]
  427416:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42741d:	push   ebx
  42741e:	shr    ebx,cl
  427420:	jle    0x4273a3
  427422:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427429:	(bad)  
  42742a:	popf   
  42742b:	iret   
  42742c:	jbe    0x427443
  42742e:	jo     0x4273ed
  427430:	jge    0x42740d
  427432:	add    BYTE PTR [eax],al
  427434:	int    0x76
  427436:	std    
  427437:	int    0x8d
  427439:	std    
  42743a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743d:	lock shl edx,cl
  427440:	sub    bl,dl
  427442:	mov    ebp,0xcdd35392
  427447:	lea    esp,[ebp+0x5bd4d343]
  42744d:	int    0x76
  42744f:	stc    
  427450:	int    0x8d
  427452:	stc    
  427453:	cmp    edi,DWORD PTR [ecx+0x3b]
  427456:	lock shl edx,cl
  427459:	sub    bl,dl
  42745b:	mov    ebp,0xcdd35392
  427460:	lea    esp,[ebp+0x26d4d343]
  427466:	int    0x76
  427468:	stc    
  427469:	int    0x8d
  42746b:	stc    
  42746c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42746f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427476:	push   ebx
  427477:	shl    DWORD PTR [eax+0x5b],cl
  42747a:	iret   
  42747b:	jbe    0x427492
  42747d:	jo     0x42743c
  42747f:	das    
  427480:	cli    
  427481:	add    BYTE PTR [eax],al
  427483:	int    0x76
  427485:	std    
  427486:	int    0x8d
  427488:	std    
  427489:	cmp    edi,DWORD PTR [ecx+0x3b]
  42748c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427493:	push   ebx
  427494:	shl    DWORD PTR [eax+0x5b],cl
  427497:	iret   
  427498:	jbe    0x4274af
  42749a:	jo     0x427459
  42749c:	sti    
  42749d:	stc    
  42749e:	add    BYTE PTR [eax],al
  4274a0:	int    0x76
  4274a2:	popf   
  4274a3:	xchg   ebp,eax
  4274a5:	or     dh,BYTE PTR [esi+0x14]
  4274a8:	add    dh,dl
  4274aa:	cmp    eax,0xcd14d600
  4274af:	jbe    0x4274e6
  4274b1:	xchg   DWORD PTR [esi-0x78],esi
  4274b4:	jo     0x427473
  4274b6:	push   edx
  4274b7:	fild   DWORD PTR [eax]
  4274b9:	add    ch,cl
  4274bb:	jbe    0x4274ba
  4274bd:	int    0x8d
  4274bf:	std    
  4274c0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274c3:	lock shl edx,cl
  4274c6:	sub    bl,dl
  4274c8:	mov    ebp,0xcdd35392
  4274cd:	lea    esp,[ebp-0x592b2cbd]
  4274d3:	int    0x76
  4274d5:	stc    
  4274d6:	int    0x8d
  4274d8:	stc    
  4274d9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274dc:	lock shl edx,cl
  4274df:	sub    bl,dl
  4274e1:	mov    ebp,0xcdd35392
  4274e6:	lea    esp,[ebp+0x32d4d343]
  4274ec:	int    0x76
  4274ee:	stc    
  4274ef:	int    0x8d
  4274f1:	stc    
  4274f2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274f5:	mov    ebp,0xd3f03b92
  4274fa:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274fe:	jo     0x427500
  427500:	(bad)  
  427501:	cmp    eax,0x873576cd
  427506:	jbe    0x427490
  427508:	jo     0x4274c7
  42750a:	add    eax,0xcd0000f9
  42750f:	jbe    0x42750e
  427511:	int    0x8d
  427513:	std    
  427514:	cmp    edi,DWORD PTR [ecx-0x2d]
  427517:	mov    ebp,0xd3f03b92
  42751c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427520:	jo     0x427522
  427522:	(bad)  
  427523:	cmp    eax,0x873576cd
  427528:	jbe    0x4274b2
  42752a:	jo     0x4274e9
  42752c:	jb     0x427527
  42752e:	add    BYTE PTR [eax],al
  427530:	int    0x8d
  427532:	inc    ebp
  427533:	int    0x76
  427535:	inc    ebp
  427536:	cmp    ecx,ecx
  427538:	cmp    ecx,DWORD PTR [edi]
  42753a:	shr    ebx,cl
  42753c:	xchg   edx,eax
  42753d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427543:	lea    ebp,ds:0x803fd33b
  427549:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427553:	jo     0x427555
  427555:	(bad)  
  427556:	cmp    eax,0x87358dcd
  42755b:	lea    ecx,[eax+0xa95abd]
  427561:	add    ch,cl
  427563:	jbe    0x427595
  427565:	int    0x8d
  427567:	cmp    eax,0x76cd8881
  42756c:	cmp    eax,0xabd7687
  427571:	jbe    0x427530
  427573:	int    0x76
  427575:	stc    
  427576:	int    0x8d
  427578:	stc    
  427579:	cmp    esi,eax
  42757b:	shl    edx,cl
  42757d:	sub    BYTE PTR [ebx],bh
  42757f:	jns    0x427554
  427581:	mov    ebp,0xcdd35392
  427586:	lea    edi,[ebp-0x322c2ed1]
  42758c:	(bad)  
  42758d:	std    
  42758e:	int    0x96
  427590:	std    
  427591:	cmp    ecx,DWORD PTR [edi]
  427593:	cmp    ebx,ecx
  427595:	shr    ebx,cl
  427597:	xchg   edx,eax
  427598:	shr    edx,cl
  42759a:	sub    BYTE PTR [ebx+0x13],dl
  42759d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  4275a3:	or     edi,DWORD PTR [ecx]
  4275a5:	cli    
  4275a6:	add    BYTE PTR [eax],al
  4275a8:	int    0x76
  4275aa:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275b0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275b6:	in     eax,dx
  4275b7:	adc    al,0x5b
  4275b9:	cwde   
  4275ba:	call   0xcd34:0x76cd6d3b
  4275c1:	add    DWORD PTR ds:0xcd808081,ebp
  4275c7:	xchg   esi,eax
  4275c8:	mov    ch,cl
  4275ca:	or     ch,0xd6
  4275cd:	dec    esp
  4275ce:	int    0xe6
  4275d0:	mov    ch,cl
  4275d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275d3:	dec    esp
  4275d4:	or     dh,BYTE PTR [esi-0x3]
  4275d7:	pop    edi
  4275d8:	jnp    0x427611
  4275da:	ficom  WORD PTR [ebx]
  4275dc:	cmp    esp,ebx
  4275de:	pop    ebp
  4275df:	mov    ebp,0x3b25230a
  4275e4:	adc    DWORD PTR [edi],ebp
  4275e6:	inc    ebp
  4275e7:	sti    
  4275e8:	xchg   edx,eax
  4275e9:	shr    ecx,cl
  4275eb:	sub    BYTE PTR [edx],dl
  4275ed:	clc    
  4275ee:	add    BYTE PTR [eax-0x102c9380],0x92
  4275f5:	cmp    ebx,ebp
  4275f7:	push   ebx
  4275f8:	clc    
  4275f9:	int    0xe6
  4275fb:	sbb    al,0x53
  4275fd:	aad    0x43
  4275ff:	(bad)  
  427601:	sbb    eax,DWORD PTR [ebx-0xc]
  427604:	(bad)  
  427605:	das    
  427606:	adc    cl,BYTE PTR [ebp+0x59]
  427609:	je     0x4275b5
  42760b:	push   edi
  42760c:	ja     0x4275d3
  42760e:	xchg   edi,eax
  42760f:	shr    ebx,0xd9
  427612:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42761c:	xchg   esi,eax
  42761d:	mov    ch,cl
  42761f:	(bad)  
  427620:	dec    esp
  427621:	int    0x96
  427623:	mov    ch,cl
  427625:	(bad)  
  427626:	dec    esp
  427627:	int    0xe6
  427629:	mov    ch,cl
  42762b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762c:	dec    esp
  42762d:	cmp    edx,DWORD PTR [ecx]
  42762f:	cmp    esp,ebx
  427631:	das    
  427632:	inc    ebp
  427633:	sti    
  427634:	xchg   edx,eax
  427635:	shr    ecx,cl
  427637:	sub    BYTE PTR [edx],dl
  427639:	clc    
  42763a:	add    BYTE PTR [eax-0x22c49380],0x53
  427641:	aad    0xd3
  427643:	out    dx,eax
  427644:	xchg   edx,eax
  427645:	push   ebx
  427646:	clc    
  427647:	int    0xe6
  427649:	xor    ch,cl
  42764b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42764c:	adc    al,0x3b
  42764e:	popf   
  42764f:	int    0x76
  427651:	xor    BYTE PTR [ebx],bh
  427653:	cli    
  427654:	int    0x8d
  427656:	adc    al,0x2f
  427658:	inc    ebp
  427659:	loope  0x4275ed
  42765b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427661:	cli    
  427662:	push   esi
  427663:	add    BYTE PTR [eax-0x132c9380],0x92
  42766a:	push   ebx
  42766b:	popf   
  42766c:	int    0x76
  42766e:	mov    BYTE PTR [edi-0x320be427],al
  427674:	bswap  ebp
  427676:	(bad)  
  427677:	dec    esp
  427678:	int    0xe6
  42767a:	xor    ch,cl
  42767c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42767d:	adc    al,0x4
  42767f:	lods   eax,DWORD PTR ds:[esi]
  427680:	std    
  427681:	add    al,0xe9
  427683:	std    
  427684:	shr    ebx,cl
  427686:	sub    BYTE PTR [ebx],bh
  427688:	ficom  DWORD PTR [esi-0x2c]
  42768b:	aaa    
  42768c:	ficom  WORD PTR [ebx]
  42768e:	adc    dh,bh
  427690:	mov    ebp,0x1225230a
  427695:	clc    
  427696:	aam    0x37
  427698:	ficom  WORD PTR [ebx]
  42769a:	adc    dh,ah
  42769c:	mov    ebp,0x8725230a
  4276a1:	leave  
  4276a2:	sbb    esi,esp
  4276a4:	push   ebx
  4276a5:	jge    0x4276fa
  4276a7:	cdq    
  4276a8:	pop    ebp
  4276a9:	mov    ebp,0x1225230a
  4276ae:	add    dl,dh
  4276b0:	aaa    
  4276b1:	ficom  WORD PTR [ebx]
  4276b3:	cmp    esi,ecx
  4276b5:	adc    bh,dl
  4276b7:	out    0x37,al
  4276b9:	ficom  WORD PTR [ebx]
  4276bb:	(bad)  
  4276bc:	sbb    eax,DWORD PTR [ebx-0xf]
  4276bf:	(bad)  
  4276c0:	das    
  4276c1:	adc    dl,BYTE PTR [esi-0x1]
  4276c4:	das    
  4276c5:	stos   DWORD PTR es:[edi],eax
  4276c6:	push   es
  4276c7:	in     eax,0x9b
  4276c9:	xchg   edi,eax
  4276ca:	imul   bl
  4276cc:	and    al,0x81
  4276ce:	add    BYTE PTR [eax-0x32776933],0xd6
  4276d5:	dec    esp
  4276d6:	int    0xa6
  4276d8:	mov    ch,cl
  4276da:	out    0x4c,al
  4276dc:	cmp    edx,DWORD PTR [ecx]
  4276de:	pop    edi
  4276df:	jnp    0x427718
  4276e1:	ficom  WORD PTR [ebx]
  4276e3:	cmp    esp,ebx
  4276e5:	das    
  4276e6:	inc    ebp
  4276e7:	sti    
  4276e8:	xchg   edx,eax
  4276e9:	shr    edi,cl
  4276eb:	xchg   edx,eax
  4276ec:	cmp    eax,DWORD PTR [eax]
  4276ee:	shl    ebp,cl
  4276f0:	sub    BYTE PTR [edx],cl
  4276f2:	(bad)  
  4276f3:	cmc    
  4276f4:	push   ebx
  4276f5:	fxch   st(5)
  4276f7:	out    0xf5,al
  4276f9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  427703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427704:	and    al,0xcd
  427706:	and    ecx,DWORD PTR [edx]
  427708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427709:	adc    DWORD PTR [ebx-0x1e],eax
  42770c:	(bad)  
  42770d:	xchg   BYTE PTR [ebx],bh
  42770f:	fiadd  DWORD PTR [ebx-0x27]
  427712:	aam    0x20
  427714:	add    dh,dl
  427716:	xor    al,0xcd
  427718:	(bad)  
  427719:	and    al,0x0
  42771b:	(bad)  
  42771c:	sub    al,0x0
  42771e:	(bad)  
  42771f:	std    
  427720:	add    BYTE PTR [eax-0x43],bl
  427723:	sub    edi,eax
  427725:	add    BYTE PTR [eax],al
  427727:	or     al,BYTE PTR [esi-0x7f7f9615]
  42772d:	or     ch,0x96
  427730:	mov    ch,cl
  427732:	out    0x4c,al
  427734:	cmp    edi,ecx
  427736:	cmp    esp,ebx
  427738:	das    
  427739:	inc    ebp
  42773a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427740:	out    0xf5,al
  427742:	int    0xe6
  427744:	mov    ch,cl
  427746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427747:	dec    esp
  427748:	shr    ecx,cl
  42774a:	sub    BYTE PTR [ebx],bh
  42774c:	dec    ebp
  42774e:	(bad)  
  42774f:	cmc    
  427750:	cmp    ebx,ebp
  427752:	push   ebx
  427753:	clc    
  427754:	int    0xe6
  427756:	xor    BYTE PTR [ebx],bh
  427758:	cli    
  427759:	push   ebx
  42775a:	aad    0xcd
  42775c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42775d:	adc    al,0x3b
  42775f:	popf   
  427760:	int    0xc9
  427762:	int    0xe6
  427764:	xor    ch,cl
  427766:	or     al,0xcd
  427768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427769:	adc    al,0x2f
  42776b:	inc    ebp
  42776c:	jge    0x427700
  42776e:	shr    ecx,cl
  427770:	sub    BYTE PTR [ebx],bh
  427772:	fst    st(3)
  427774:	jmp    0x427708
  427776:	adc    bh,al
  427778:	add    BYTE PTR [eax-0x3aac9380],0x53
  42777f:	lock inc ebx
  427781:	icebp  
  427782:	(bad)  
  427783:	sbb    BYTE PTR [ebx+0x2],al
  427786:	(bad)  
  427787:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42778d:	mov    esi,0xdd8bf56d
  427792:	(bad)  
  427793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427794:	cmp    edi,esp
  427796:	sbb    eax,0xcd62ec76
  42779b:	jbe    0x427725
  42779d:	int    0x8d
  42779f:	dec    esp
  4277a0:	int    0x96
  4277a2:	mov    ch,cl
  4277a4:	(bad)  
  4277a5:	dec    esp
  4277a6:	adc    al,BYTE PTR [edx]
  4277a8:	mov    ebp,0x5625230a
  4277ad:	jnp    0x4277e6
  4277af:	ficom  WORD PTR [ebx]
  4277b1:	das    
  4277b2:	inc    ebp
  4277b3:	jge    0x427747
  4277b5:	int    0xfb
  4277b7:	cmp    eax,DWORD PTR [eax]
  4277b9:	cmp    ebx,edx
  4277bb:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277c1:	jmp    0x427755
  4277c3:	adc    dh,bh
  4277c5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277cc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277d0:	(bad)  
  4277d1:	test   BYTE PTR [ebx-0x1d],al
  4277d4:	aam    0x4c
  4277d6:	adc    al,BYTE PTR [esi-0x3e]
  4277d9:	gs sub al,0x1
  4277dc:	jo     0x427818
  4277de:	mov    edx,0x124aece0
  4277e3:	ss inc edx
  4277e5:	das    
  4277e6:	sbb    edx,esi
  4277e8:	mov    ebx,0xaa029f75
  4277ed:	test   al,0x63
  4277ef:	retf   
  4277f0:	shr    BYTE PTR [eax+eax*4],cl
  4277f3:	xchg   esi,eax
  4277f4:	int    0xed
  4277f6:	add    al,0xed
  4277f8:	dec    esp
  4277f9:	int    0x76
  4277fb:	mov    ch,cl
  4277fd:	lea    ecx,[edi+ebp*1+0x45]
  427801:	jge    0x427795
  427803:	shr    ebx,cl
  427805:	xchg   edx,eax
  427806:	int    0x8d
  427808:	mov    ch,cl
  42780a:	xchg   esi,eax
  42780b:	dec    esp
  42780c:	cwde   
  42780d:	shl    edx,cl
  42780f:	sub    ch,cl
  427811:	lea    ebx,[ecx+ebp*2]
  427814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427815:	mov    esi,0x793b4229
  42781a:	cmp    ebx,edx
  42781c:	push   ebx
  42781d:	ror    BYTE PTR [edx],cl
  42781f:	or     ebp,0x1cd2476
  427825:	xor    eax,0xcd808081
  42782a:	mov    ch,cl
  42782c:	jbe    0x427852
  42782e:	int    0x1
  427830:	xor    eax,0xcd808081
  427835:	add    BYTE PTR [edi-0x72329b92],0x24
  42783c:	int    0xa
  42783e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427844:	adc    al,0xc0
  427846:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42784d:	nop
  42784e:	jo     0x4278b2
  427850:	add    bl,ah
  427852:	or     cl,BYTE PTR [ebx-0x32778933]
  427858:	lea    ecx,[edi+ebp*1+0x45]
  42785c:	jge    0x4277f0
  42785e:	shr    ebx,cl
  427860:	xchg   edx,eax
  427861:	int    0x8d
  427863:	mov    ch,cl
  427865:	xchg   esi,eax
  427866:	dec    esp
  427867:	add    dh,dl
  427869:	and    al,0x3b
  42786b:	jns    0x4278a8
  42786d:	ficom  DWORD PTR [ebx-0x2e]
  427870:	or     dh,BYTE PTR [esi-0x3]
  427873:	iret   
  427874:	jbe    0x427873
  427876:	jo     0x427812
  427878:	add    dh,dl
  42787a:	sbb    al,0xd3
  42787c:	repnz sub BYTE PTR [eax],al
  42787f:	(bad)  
  427880:	adc    al,0x0
  427882:	(bad)  
  427883:	xor    BYTE PTR [eax],al
  427885:	(bad)  
  427886:	dec    esp
  427887:	add    dh,dl
  427889:	mov    BYTE PTR [ebp+0xfe2b],bh
  42788f:	int    0x76
  427891:	mov    ch,cl
  427893:	lea    ecx,[edi+ebp*1+0x45]
  427897:	jge    0x42782b
  427899:	shr    ebx,cl
  42789b:	xchg   edx,eax
  42789c:	int    0x8d
  42789e:	mov    ch,cl
  4278a0:	xchg   esi,eax
  4278a1:	dec    esp
  4278a2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4278a5:	fcmovbe st,st(3)
  4278a7:	repnz sub ch,cl
  4278aa:	das    
  4278ab:	push   ebx
  4278ac:	rol    BYTE PTR [ebx+0x7d],cl
  4278af:	aam    0x36
  4278b1:	int    0x76
  4278b3:	xor    ch,cl
  4278b5:	lea    edx,[edi+ebp*1]
  4278b8:	inc    ebp
  4278b9:	jge    0x42784d
  4278bb:	shr    ebx,cl
  4278bd:	xchg   edx,eax
  4278be:	int    0x8d
  4278c0:	xor    ch,cl
  4278c2:	xchg   esi,eax
  4278c3:	adc    al,0x3b
  4278c5:	jns    0x427902
  4278c7:	fcmovbe st,st(3)
  4278c9:	repnz sub ch,cl
  4278cc:	lea    ebx,[ebx+edx*2]
  4278cf:	shr    BYTE PTR [edi],cl
  4278d1:	shl    DWORD PTR [esi-0x3],1
  4278d4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278da:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278e1:	call   0xcd3c:0xd6cd6d3b
  4278e8:	xchg   esi,eax
  4278e9:	inc    esp
  4278ea:	int    0xe6
  4278ec:	and    al,0x5d
  4278ee:	mov    ebp,0x5f25230a
  4278f3:	jnp    0x42792c
  4278f5:	ficom  WORD PTR [ebx]
  4278f7:	inc    ebx
  4278f8:	icebp  
  4278f9:	das    
  4278fa:	or     BYTE PTR [edi],al
  4278fc:	add    BYTE PTR [eax-0x4613080],0x82
  427903:	test   BYTE PTR [ebx-0xc],al
  427906:	jnp    0x4278ee
  427908:	inc    ebx
  427909:	hlt    
  42790a:	(bad)  
  42790b:	mov    BYTE PTR [ebx-0xf],al
  42790e:	das    
  42790f:	add    eax,0x80809216
  427914:	adc    bh,bh
  427916:	jno    0x42794f
  427918:	ficom  WORD PTR [ebx]
  42791a:	(bad)  
  42791b:	mov    BYTE PTR [ebx-0xf],al
  42791e:	das    
  42791f:	add    eax,0x80809285
  427924:	adc    bh,bh
  427926:	xchg   esi,eax
  427927:	aaa    
  427928:	ficom  WORD PTR [ebx]
  42792a:	(bad)  
  42792b:	mov    BYTE PTR [ebx-0xf],al
  42792e:	das    
  42792f:	add    eax,0x808080f8
  427934:	adc    bh,bh
  427936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427937:	aaa    
  427938:	ficom  WORD PTR [ebx]
  42793a:	(bad)  
  42793b:	test   BYTE PTR [ebx-0xf],al
  42793e:	aam    0x3e
  427940:	adc    bh,bh
  427942:	scas   al,BYTE PTR es:[edi]
  427943:	aaa    
  427944:	ficom  WORD PTR [ebx]
  427946:	(bad)  
  427947:	mov    BYTE PTR [ebx-0xf],al
  42794a:	das    
  42794b:	add    eax,0x808081db
  427950:	adc    bh,bh
  427952:	mov    dh,0x37
  427954:	ficom  WORD PTR [ebx]
  427956:	das    
  427957:	push   es
  427958:	into   
  427959:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427963:	sub    bl,0x12
  427966:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427970:	(bad)  
  427971:	adc    al,0x0
  427973:	(bad)  
  427974:	xor    BYTE PTR [eax],al
  427976:	(bad)  
  427977:	dec    esp
  427978:	add    dh,dl
  42797a:	mov    BYTE PTR [ebp+0xff77],bh
  427980:	jmp    0x427938
  427982:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42798c:	mov    BYTE PTR [ebx-0xf],al
  42798f:	das    
  427990:	add    eax,0x80808019
  427995:	adc    bh,bh
  427997:	xchg   ecx,eax
  427998:	aaa    
  427999:	ficom  WORD PTR [ebx]
  42799b:	(bad)  
  42799c:	mov    BYTE PTR [ebx-0xf],al
  42799f:	das    
  4279a0:	add    eax,0x8080818e
  4279a5:	adc    bh,bh
  4279a7:	(bad)  
  4279a8:	aaa    
  4279a9:	ficom  WORD PTR [ebx]
  4279ab:	(bad)  
  4279ac:	test   BYTE PTR [ebx-0xf],al
  4279af:	aam    0x1c
  4279b1:	adc    bh,bh
  4279b3:	fidiv  WORD PTR [edi]
  4279b5:	ficom  WORD PTR [ebx]
  4279b7:	(bad)  
  4279b8:	mov    BYTE PTR [ebx-0xf],al
  4279bb:	das    
  4279bc:	add    eax,0x80808142
  4279c1:	adc    bh,bh
  4279c3:	out    0x37,al
  4279c5:	ficom  WORD PTR [ebx]
  4279c7:	in     al,dx
  4279c8:	iret   
  4279c9:	int    0x96
  4279cb:	mov    ch,cl
  4279cd:	(bad)  
  4279ce:	dec    esp
  4279cf:	int    0xe6
  4279d1:	mov    ch,cl
  4279d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279d4:	dec    esp
  4279d5:	cmp    edx,DWORD PTR [ecx]
  4279d7:	cmp    esp,ebx
  4279d9:	das    
  4279da:	inc    ebp
  4279db:	sti    
  4279dc:	xchg   edx,eax
  4279dd:	shr    ecx,cl
  4279df:	sub    BYTE PTR [edx],dl
  4279e1:	clc    
  4279e2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279e9:	cmp    ebx,ebp
  4279eb:	push   ebx
  4279ec:	clc    
  4279ed:	int    0xe6
  4279ef:	mov    BYTE PTR [ebx-0x2b],dl
  4279f2:	int    0xa6
  4279f4:	dec    esp
  4279f5:	xchg   ecx,ebx
  4279f7:	sbb    esi,esp
  4279f9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279ff:	int    0x96
  427a01:	mov    ch,cl
  427a03:	(bad)  
  427a04:	dec    esp
  427a05:	int    0xe6
  427a07:	mov    ch,cl
  427a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a0a:	dec    esp
  427a0b:	cmp    edx,DWORD PTR [ecx]
  427a0d:	cmp    esp,ebx
  427a0f:	das    
  427a10:	inc    ebp
  427a11:	sti    
  427a12:	xchg   edx,eax
  427a13:	shr    ecx,cl
  427a15:	sub    BYTE PTR [ebx],bh
  427a17:	fst    st(3)
  427a19:	out    dx,eax
  427a1a:	xchg   edx,eax
  427a1b:	adc    bh,al
  427a1d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a24:	clc    
  427a25:	ds xchg esi,eax
  427a27:	xor    BYTE PTR [esi],bl
  427a29:	(bad)  
  427a2a:	adc    al,0xcd
  427a2c:	xchg   esi,eax
  427a2d:	cmp    al,0xcd
  427a2f:	(bad)  
  427a30:	inc    esp
  427a31:	int    0x96
  427a33:	xor    ch,cl
  427a35:	(bad)  
  427a36:	adc    al,0xcd
  427a38:	xchg   esi,eax
  427a39:	xor    ch,cl
  427a3b:	(bad)  
  427a3c:	adc    al,0xcd
  427a3e:	out    0x30,al
  427a40:	int    0xa6
  427a42:	adc    al,0x3b
  427a44:	adc    DWORD PTR [ebx],edi
  427a46:	jecxz  0x427a77
  427a48:	inc    ebp
  427a49:	sti    
  427a4a:	xchg   edx,eax
  427a4b:	shr    ecx,cl
  427a4d:	sub    BYTE PTR [ebx],bh
  427a4f:	fst    QWORD PTR [edx]
  427a51:	clc    
  427a52:	add    BYTE PTR [eax-0x102c9380],0x92
  427a59:	push   ebx
  427a5a:	clc    
  427a5b:	int    0xe6
  427a5d:	cmp    al,0x53
  427a5f:	aad    0xcd
  427a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a62:	inc    esp
  427a63:	cmp    edi,edx
  427a65:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a6b:	lea    eax,[edi+ebp*1+0x45]
  427a6f:	loope  0x427a03
  427a71:	cmp    ecx,ebx
  427a73:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a79:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a7e:	lea    esi,[eax]
  427a80:	shr    esp,cl
  427a82:	xchg   edx,eax
  427a83:	push   ebx
  427a84:	popf   
  427a85:	xchg   ecx,ebx
  427a87:	int    0x96
  427a89:	adc    al,0x1b
  427a8b:	hlt    
  427a8c:	add    al,0xf2
  427a8e:	std    
  427a8f:	shr    edi,cl
  427a91:	sub    BYTE PTR [ebx],bh
  427a93:	ins    DWORD PTR es:[edi],dx
  427a94:	adc    al,BYTE PTR [edx]
  427a96:	aam    0x37
  427a98:	ficom  WORD PTR [ebx]
  427a9a:	adc    bh,bl
  427a9c:	mov    ebp,0xcd25230a
  427aa1:	out    0x3c,al
  427aa3:	int    0xa6
  427aa5:	inc    esp
  427aa6:	add    al,0xe9
  427aa8:	std    
  427aa9:	adc    bh,al
  427aab:	aam    0x37
  427aad:	ficom  WORD PTR [ebx]
  427aaf:	adc    dh,ah
  427ab1:	mov    ebp,0x8725230a
  427ab6:	lock int 0xe6
  427ab9:	and    al,0x1b
  427abb:	aad    0x53
  427abd:	rcl    BYTE PTR [esi-0x43],cl
  427ac0:	or     ah,BYTE PTR [ebx]
  427ac2:	and    eax,0x12025370
  427ac7:	not    esi
  427ac9:	aaa    
  427aca:	ficom  WORD PTR [ebx]
  427acc:	cwde   
  427acd:	add    dh,dl
  427acf:	xor    al,0x0
  427ad1:	(bad)  
  427ad2:	sub    al,0x9a
  427ad4:	add    dh,dl
  427ad6:	sbb    al,0x0
  427ad8:	(bad)  
  427ad9:	adc    al,0x0
  427adb:	(bad)  
  427adc:	xor    BYTE PTR [eax],al
  427ade:	(bad)  
  427adf:	dec    esp
  427ae0:	add    dh,dl
  427ae2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ae8:	or     cl,BYTE PTR [ebx-0x57557433]
  427aee:	arpl   bx,cx
  427af0:	sar    BYTE PTR [eax+eax*4],cl
  427af3:	int    0x96
  427af5:	mov    ch,cl
  427af7:	(bad)  
  427af8:	dec    esp
  427af9:	int    0xe6
  427afb:	mov    ch,cl
  427afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427afe:	dec    esp
  427aff:	cmp    esp,ebx
  427b01:	cmp    edx,DWORD PTR [ecx]
  427b03:	das    
  427b04:	inc    ebp
  427b05:	sti    
  427b06:	xchg   edx,eax
  427b07:	shr    ecx,cl
  427b09:	sub    BYTE PTR [edx],dl
  427b0b:	clc    
  427b0c:	add    BYTE PTR [eax-0x102c9380],0x92
  427b13:	cmp    ebx,ebp
  427b15:	push   ebx
  427b16:	aad    0x53
  427b18:	clc    
  427b19:	int    0xe6
  427b1b:	xor    ch,cl
  427b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b1e:	adc    al,0x53
  427b20:	fst    DWORD PTR [ebx-0xc]
  427b23:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b29:	int    0x96
  427b2b:	cmp    al,0xcd
  427b2d:	(bad)  
  427b2e:	inc    esp
  427b2f:	int    0x96
  427b31:	xor    ch,cl
  427b33:	(bad)  
  427b34:	adc    al,0xcd
  427b36:	xchg   esi,eax
  427b37:	mov    ch,cl
  427b39:	(bad)  
  427b3a:	dec    esp
  427b3b:	int    0x96
  427b3d:	mov    ch,cl
  427b3f:	(bad)  
  427b40:	dec    esp
  427b41:	int    0xe6
  427b43:	mov    ch,cl
  427b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b46:	dec    esp
  427b47:	cmp    esp,ebx
  427b49:	cmp    edx,DWORD PTR [ecx]
  427b4b:	das    
  427b4c:	inc    ebp
  427b4d:	sti    
  427b4e:	xchg   edx,eax
  427b4f:	shr    ecx,cl
  427b51:	sub    BYTE PTR [edx],dl
  427b53:	clc    
  427b54:	add    BYTE PTR [eax-0x22c49380],0x53
  427b5b:	aad    0xd3
  427b5d:	out    dx,eax
  427b5e:	xchg   edx,eax
  427b5f:	push   ebx
  427b60:	clc    
  427b61:	int    0xe6
  427b63:	xor    ch,cl
  427b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b66:	adc    al,0x3b
  427b68:	cli    
  427b69:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b6f:	lea    edx,[edi+ebp*1]
  427b72:	inc    ebp
  427b73:	loope  0x427b07
  427b75:	cmp    ecx,ebx
  427b77:	push   ebx
  427b78:	cli    
  427b79:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b7f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b84:	push   ebx
  427b85:	popf   
  427b86:	int    0x76
  427b88:	cmp    al,0xcd
  427b8a:	lea    eax,[edi+eax*4-0x27]
  427b8e:	int    0xe6
  427b90:	cmp    al,0x1b
  427b92:	hlt    
  427b93:	int    0xa6
  427b95:	inc    esp
  427b96:	adc    al,BYTE PTR [edx]
  427b98:	mov    ebp,0x5625230a
  427b9d:	jnp    0x427bd6
  427b9f:	ficom  WORD PTR [ebx]
  427ba1:	das    
  427ba2:	inc    ebp
  427ba3:	jge    0x427b37
  427ba5:	shr    ecx,cl
  427ba7:	sub    bl,dl
  427ba9:	jmp    0x427b3d
  427bab:	cmp    ebx,ebp
  427bad:	adc    bh,al
  427baf:	add    BYTE PTR [eax-0xfac9380],0x53
  427bb6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bbc:	lea    ecx,[eax-0x32b36933]
  427bc2:	out    0x30,al
  427bc4:	int    0xa6
  427bc6:	adc    al,0x4
  427bc8:	repnz std 
  427bca:	add    al,0xe9
  427bcc:	std    
  427bcd:	adc    al,BYTE PTR [edx]
  427bcf:	aam    0x37
  427bd1:	ficom  WORD PTR [ebx]
  427bd3:	adc    bh,al
  427bd5:	aam    0x37
  427bd7:	ficom  WORD PTR [ebx]
  427bd9:	shr    edi,cl
  427bdb:	sub    BYTE PTR [ebx],bh
  427bdd:	ins    DWORD PTR es:[edi],dx
  427bde:	adc    bh,bl
  427be0:	mov    ebp,0x1225230a
  427be5:	hlt    
  427be6:	mov    ebp,0x8725230a
  427beb:	lock sbb edx,ebp
  427bee:	jmp    0x427c37
  427bf0:	inc    DWORD PTR [eax]
  427bf2:	add    BYTE PTR [esi-0x12fb1233],dl
  427bf8:	sbb    al,0x98
  427bfa:	pop    edi
  427bfb:	(bad)  
  427bfc:	aaa    
  427bfd:	ficom  WORD PTR [ebx]
  427bff:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427c05:	and    esp,DWORD PTR ds:0xc9f5760a
  427c0b:	jbe    0x427bca
  427c0d:	xchg   ecx,eax
  427c0e:	aaa    
  427c0f:	ficom  WORD PTR [ebx]
  427c11:	or     dh,BYTE PTR [esi-0x13]
  427c14:	int    0x96
  427c16:	adc    ebp,ecx
  427c18:	(bad)  
  427c19:	cmc    
  427c1a:	call   0xefd3:0x92fb452f
  427c21:	xchg   edx,eax
  427c22:	int    0xd6
  427c24:	adc    ebp,ecx
  427c26:	out    0xf5,al
  427c28:	jo     0x427c3c
  427c2a:	sti    
  427c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c2c:	mov    esi,0x3b4229
  427c31:	jno    0x427c86
  427c33:	(bad)  [edx]
  427c35:	xchg   esi,eax
  427c36:	std    
  427c37:	int    0x96
  427c39:	dec    esp
  427c3a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c40:	iret   
  427c41:	jbe    0x427c40
  427c43:	add    dh,dl
  427c45:	mov    bl,dl
  427c47:	mov    ecx,0xd6007028
  427c4c:	dec    esp
  427c4d:	add    dh,dl
  427c4f:	in     eax,dx
  427c50:	add    dh,dl
  427c52:	mov    ebp,0xf5d600
  427c57:	(bad)  
  427c58:	adc    DWORD PTR [ebp+0xfde6],edi
  427c5e:	stos   BYTE PTR es:[edi],al
  427c5f:	or     dh,BYTE PTR [esi-0x3]
  427c62:	int    0x76
  427c64:	std    
  427c65:	test   al,0xcb
  427c67:	ror    BYTE PTR [eax-0x12326980],cl
  427c6d:	add    al,0xb5
  427c6f:	stc    
  427c70:	add    al,0xed
  427c72:	inc    esp
  427c73:	cwde   
  427c74:	leave  
  427c75:	je     0x427cab
  427c77:	xor    al,0x80
  427c79:	add    BYTE PTR [eax+0x3474c980],0x44
  427c80:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c87:	xor    BYTE PTR [eax+0x0],dh
  427c8a:	(bad)  
  427c8b:	xor    al,0x0
  427c8d:	(bad)  
  427c8e:	sub    al,0x0
  427c90:	(bad)  
  427c91:	and    al,0x0
  427c93:	(bad)  
  427c94:	sbb    al,0x0
  427c96:	(bad)  
  427c97:	adc    al,0x0
  427c99:	(bad)  
  427c9a:	xor    BYTE PTR [eax],al
  427c9c:	(bad)  
  427c9d:	dec    esp
  427c9e:	add    dh,dl
  427ca0:	mov    BYTE PTR [ebp+0xe7e7],bh
  427ca6:	int    0x76
  427ca8:	mov    BYTE PTR [edx],cl
  427caa:	je     0x427ce0
  427cac:	test   ch,cl
  427cae:	je     0x427ce4
  427cb0:	xor    al,0x6
  427cb2:	ins    DWORD PTR es:[edi],dx
  427cb3:	das    
  427cb4:	add    eax,0x80808017
  427cb9:	int    0x74
  427cbb:	xor    al,0x44
  427cbd:	push   es
  427cbe:	ins    DWORD PTR es:[edi],dx
  427cbf:	das    
  427cc0:	add    eax,0x8080800a
  427cc5:	add    ah,dl
  427cc7:	xor    al,0x24
  427cc9:	add    ah,dl
  427ccb:	xor    al,0x24
  427ccd:	add    ah,dl
  427ccf:	xor    al,0x24
  427cd1:	int    0x74
  427cd3:	xor    al,0x50
  427cd5:	add    cl,dh
  427cd7:	int    0x74
  427cd9:	xor    al,0x84
  427cdb:	int    0x74
  427cdd:	xor    al,0x84
  427cdf:	int    0x74
  427ce1:	xor    al,0x84
  427ce3:	iret   
  427ce4:	jbe    0x427c6a
  427ce6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cea:	int    0x74
  427cec:	xor    al,0x3c
  427cee:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427cf2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427cf6:	int    0x74
  427cf8:	xor    al,0x84
  427cfa:	int    0x74
  427cfc:	xor    al,0x84
  427cfe:	int    0x8c
  427d00:	xor    al,0x84
  427d02:	int    0xa
  427d04:	and    eax,0xcd808081
  427d09:	xor    ebp,ecx
  427d0b:	aam    0x34
  427d0d:	mov    ch,cl
  427d0f:	add    DWORD PTR ds:0x5e808081,ebp
  427d15:	sbb    BYTE PTR [edi],ch
  427d17:	or     edx,DWORD PTR ds:0xcd808081
  427d1d:	xor    ch,cl
  427d1f:	push   eax
  427d20:	int    0x62
  427d22:	fs iret 
  427d24:	xchg   esp,eax
  427d25:	sbb    BYTE PTR [eax-0x33],dh
  427d28:	push   ecx
  427d29:	int    0x22
  427d2b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d31:	pop    esi
  427d32:	sbb    BYTE PTR [edi],ch
  427d34:	add    al,0x7b
  427d36:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d40:	dec    edx
  427d41:	int    0x80
  427d43:	xor    ecx,DWORD PTR [edi]
  427d45:	xchg   ebx,edx
  427d47:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d4d:	or     ch,0x74
  427d50:	xor    al,0x44
  427d52:	push   es
  427d53:	ins    DWORD PTR es:[edi],dx
  427d54:	das    
  427d55:	push   es
  427d56:	cwde   
  427d57:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d61:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d6b:	je     0x427da1
  427d6d:	test   ch,cl
  427d6f:	add    DWORD PTR ds:0xcd808081,esp
  427d75:	or     BYTE PTR [edx],0x74
  427d78:	xor    al,0x4c
  427d7a:	int    0x74
  427d7c:	xor    al,0x84
  427d7e:	int    0x1
  427d80:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d86:	int    0x80
  427d88:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d8c:	int    0x74
  427d8e:	xor    al,0x84
  427d90:	int    0x1
  427d92:	int3   
  427d93:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d9d:	dec    esp
  427d9e:	int    0x74
  427da0:	xor    al,0x84
  427da2:	int    0x8c
  427da4:	xor    al,0x84
  427da6:	int    0x1
  427da8:	popf   
  427da9:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427db3:	or     ch,0x89
  427db6:	imul   edx,ecx,0x3b358621
  427dbc:	jns    0x427dc2
  427dbe:	add    bh,bh
  427dc0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427dc6:	push   ebx
  427dc7:	jge    0x427dd3
  427dc9:	mov    WORD PTR [esp+ecx*2],?
  427dcc:	leave  
  427dcd:	je     0x427e03
  427dcf:	mov    BYTE PTR [eax-0x327f7f80],al
  427dd5:	je     0x427e0b
  427dd7:	xor    al,0x6
  427dd9:	ins    DWORD PTR es:[edi],dx
  427dda:	aam    0x73
  427ddc:	int    0x74
  427dde:	xor    al,0x30
  427de0:	add    al,0xbd
  427de2:	adc    ah,0x52
  427de5:	jl     0x427dbb
  427de7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427deb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427def:	add    ah,dl
  427df1:	xor    al,0x2c
  427df3:	add    ah,dl
  427df5:	xor    al,0x2c
  427df7:	add    ah,dl
  427df9:	xor    al,0x2c
  427dfb:	add    ah,dl
  427dfd:	xor    al,0x2c
  427dff:	int    0x74
  427e01:	xor    al,0x54
  427e03:	add    cl,dh
  427e05:	in     al,dx
  427e06:	cmp    BYTE PTR [eax],al
  427e08:	aam    0x34
  427e0a:	and    al,0x0
  427e0c:	aam    0x34
  427e0e:	and    al,0x0
  427e10:	aam    0x34
  427e12:	and    al,0xcd
  427e14:	je     0x427e4a
  427e16:	push   eax
  427e17:	add    cl,dh
  427e19:	in     al,dx
  427e1a:	and    al,BYTE PTR [eax]
  427e1c:	aam    0x34
  427e1e:	adc    al,0xcd
  427e20:	je     0x427e56
  427e22:	cmp    al,0x0
  427e24:	icebp  
  427e25:	in     al,dx
  427e26:	xchg   ch,cl
  427e28:	je     0x427e5e
  427e2a:	xor    al,0x0
  427e2c:	icebp  
  427e2d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e31:	int    0x74
  427e33:	xor    al,0x4c
  427e35:	push   es
  427e36:	ins    DWORD PTR es:[edi],dx
  427e37:	aam    0x4e
  427e39:	int    0x74
  427e3b:	xor    al,0x84
  427e3d:	leave  
  427e3e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e44:	and    DWORD PTR [esi+0x3474cd35],eax
  427e4a:	mov    ch,cl
  427e4c:	mov    WORD PTR [esp+eax*4],?
  427e4f:	int    0xa
  427e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e52:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e5c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e62:	mov    ch,cl
  427e64:	mov    WORD PTR [eax+ecx*4],?
  427e67:	cmp    edi,DWORD PTR [ecx+0x4]
  427e6a:	add    bh,bh
  427e6c:	shl    edx,cl
  427e6e:	sub    bl,dl
  427e70:	mov    ebp,0xcdd35392
  427e75:	mov    WORD PTR [esp+ecx*2],?
  427e78:	inc    ebx
  427e79:	rcl    esi,cl
  427e7b:	and    ecx,ebp
  427e7d:	je     0x427eb3
  427e7f:	test   ch,cl
  427e81:	mov    WORD PTR [esp+eax*4],?
  427e84:	int    0xa
  427e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e87:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e91:	add    BYTE PTR [eax],0x70
  427e94:	cmp    al,0xec
  427e96:	push   ds
  427e97:	iret   
  427e98:	jbe    0x427e1e
  427e9a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e9e:	int    0x74
  427ea0:	xor    al,0x4c
  427ea2:	int    0x8c
  427ea4:	xor    al,0x84
  427ea6:	int    0xa
  427ea8:	in     al,0x81
  427eaa:	add    BYTE PTR [eax-0x777e7633],0xcd
  427eb1:	je     0x427ee7
  427eb3:	test   ch,cl
  427eb5:	add    ebp,ebp
  427eb7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427ec1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427ec7:	or     bh,0x84
  427eca:	adc    cl,ch
  427ecc:	mov    WORD PTR [esp+eax*4],?
  427ecf:	int    0xa
  427ed1:	in     al,0x81
  427ed3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eda:	mov    BYTE PTR [eax-0x2d591833],ch
  427ee0:	sub    al,0x80
  427ee2:	lds    edx,FWORD PTR [eax+0x75]
  427ee5:	ins    BYTE PTR es:[edi],dx
  427ee6:	jae    0x427f5f
  427ee8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427eec:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ef0:	add    BYTE PTR [ecx+0x74],ah
  427ef3:	ins    BYTE PTR es:[edi],dx
  427ef4:	popa   
  427ef5:	inc    esp
  427ef6:	gs popa 
  427ef8:	fs push 0x6561686d
  427efe:	add    BYTE PTR fs:[ebp+0x74],ah
  427f02:	push   0x65726143
  427f07:	outs   dx,DWORD PTR ds:[esi]
  427f08:	jns    0x427f70
  427f0a:	add    BYTE PTR gs:[edi+0x72],dh
  427f0e:	jns    0x427f7d
  427f10:	popa   
  427f11:	outs   dx,DWORD PTR ds:[esi]
  427f12:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f16:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f1a:	push   0x6f6d6568
  427f1f:	add    BYTE PTR fs:[edx+0x65],dl
  427f23:	arpl   WORD PTR [ebx+0x62],si
  427f26:	popa   
  427f27:	ins    BYTE PTR es:[edi],dx
  427f28:	jne    0x427fa2
  427f2a:	gs jae 0x427f2d
  427f2d:	ins    DWORD PTR es:[edi],dx
  427f2e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f35:	outs   dx,DWORD PTR ds:[esi]
  427f36:	jb     0x427fa7
  427f38:	jo     0x427f3a
  427f3a:	ja     0x427f9d
  427f3c:	gs je  0x427fae
  427f3f:	jb     0x427fb0
  427f41:	bound  esp,QWORD PTR [ecx+0x70]
  427f44:	add    BYTE PTR [ebx+0x69],cl
  427f47:	outs   dx,BYTE PTR ds:[esi]
  427f48:	addr16 addr16 popa 
  427f4b:	outs   dx,BYTE PTR ds:[esi]
  427f4c:	arpl   WORD PTR [ecx+0x70],sp
  427f4f:	add    BYTE PTR [edi+0x6e],al
  427f52:	jne    0x427fc7
  427f54:	je     0x427fbb
  427f56:	outs   dx,BYTE PTR ds:[esi]
  427f57:	push   esi
  427f58:	popa   
  427f59:	jb     0x427fd4
  427f5b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f5f:	jb     0x427fb1
  427f61:	popa   
  427f62:	ins    BYTE PTR es:[edi],dx
  427f63:	ins    DWORD PTR es:[edi],dx
  427f64:	je     0x427fcf
  427f66:	outs   dx,DWORD PTR ds:[esi]
  427f67:	ja     0x427fce
  427f69:	jb     0x427f6b
  427f6b:	jo     0x427fd2
  427f6d:	ins    DWORD PTR es:[edi],dx
  427f6e:	jns    0x427fe4
  427f70:	push   0x6f656562
  427f75:	outs   dx,BYTE PTR ds:[esi]
  427f76:	push   eax
  427f77:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f7e:	inc    ebx
  427f7f:	outs   dx,DWORD PTR ds:[esi]
  427f80:	popa   
  427f81:	ins    BYTE PTR es:[edi],dx
  427f82:	popa   
  427f83:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f8a:	je     0x428005
  427f8c:	outs   dx,DWORD PTR gs:[esi]
  427f8e:	outs   dx,BYTE PTR ds:[esi]
  427f8f:	gs ins BYTE PTR es:[edi],dx
  427f91:	inc    ebx
  427f92:	push   0x54007261
  427f97:	jns    0x428009
  427f99:	jns    0x428008
  427f9b:	jne    0x428002
  427f9d:	imul   eax,DWORD PTR gs:[eax],0x70
  427fa1:	outs   dx,DWORD PTR ds:[esi]
  427fa2:	je     0x427fe6
  427fa4:	gs gs jb 0x428018
  427fa8:	outs   dx,DWORD PTR ds:[esi]
  427fa9:	je     0x428016
  427fab:	imul   eax,DWORD PTR [eax],0x616c7548
  427fb1:	jo     0x42801c
  427fb3:	popa   
  427fb4:	ins    BYTE PTR es:[edi],dx
  427fb5:	dec    ebx
  427fb6:	outs   dx,BYTE PTR ds:[esi]
  427fb7:	popa   
  427fb8:	jo     0x428033
  427fba:	add    BYTE PTR gs:[eax+0x6f],dh
  427fbe:	je     0x428002
  427fc0:	gs ins BYTE PTR es:[edi],dx
  427fc2:	jae    0x428033
  427fc4:	js     0x427fc6
  427fc6:	popa   
  427fc7:	data16 je 0x428010
  427fca:	ins    BYTE PTR es:[edi],dx
  427fcb:	popa   
  427fcc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fd0:	gs jae 0x428034
  427fd3:	jb     0x427fd5
  427fd5:	inc    edx
  427fd6:	ins    BYTE PTR es:[edi],dx
  427fd7:	popa   
  427fd8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fdc:	je     0x428044
  427fde:	ins    BYTE PTR es:[edi],dx
  427fdf:	jns    0x428056
  427fe1:	push   0x6d6d6800
  427fe6:	popa   
  427fe7:	inc    edi
  427fe8:	popa   
  427fe9:	ins    BYTE PTR es:[edi],dx
  427fea:	ins    BYTE PTR es:[edi],dx
  427feb:	push   0x48007361
  427ff0:	outs   dx,DWORD PTR ds:[esi]
  427ff1:	ins    DWORD PTR es:[edi],dx
  427ff2:	outs   dx,DWORD PTR gs:[esi]
  427ff4:	jb     0x42805b
  427ff6:	data16 jno 0x428062
  427ff9:	jae    0x42805c
  427ffb:	bound  esi,QWORD PTR [eax+0x61]
  427ffe:	add    BYTE PTR [ebp+0x74],ah
  428001:	outs   dx,BYTE PTR ds:[esi]
  428002:	gs addr16 jbe 0x428067
  428006:	je     0x428081
  428008:	gs popa 
  42800a:	add    BYTE PTR [ebp+0x67],ah
  42800d:	outs   dx,DWORD PTR ds:[esi]
  42800e:	inc    edi
  42800f:	popa   
  428010:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428018:	jo     0x42807f
  42801a:	fs jbe 0x42807e
  42801d:	je     0x428094
  42801f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428023:	outs   dx,DWORD PTR ds:[esi]
  428024:	add    BYTE PTR [edx+0x0],ch
  428027:	jne    0x428029
  428029:	add    BYTE PTR [bp+0x0],ch
  42802d:	popa   
  42802e:	add    BYTE PTR [esi+0x0],ch
  428031:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428036:	add    BYTE PTR [ebp+0x0],dh
  428039:	ins    DWORD PTR es:[edi],dx
  42803a:	add    BYTE PTR [eax],al
  42803c:	add    BYTE PTR [edi+0x0],ch
  42803f:	jb     0x428041
  428041:	ja     0x428043
  428043:	imul   eax,DWORD PTR [eax],0x680073
  428049:	outs   dx,BYTE PTR ds:[esi]
  42804a:	add    BYTE PTR [ecx+0x0],ch
  42804d:	add    BYTE PTR fs:[ecx+0x0],ch
  428051:	ja     0x428053
  428053:	imul   eax,DWORD PTR [eax],0x65006e
  428059:	push   0x70000000
  42805e:	add    BYTE PTR [ecx+0x0],ah
  428061:	je     0x428063
  428063:	jbe    0x428065
  428065:	add    BYTE PTR gs:[ebp+0x0],ah
  428069:	je     0x42806b
  42806b:	add    BYTE PTR gs:[edi+0x0],ah
  42806f:	ins    BYTE PTR es:[edi],dx
  428070:	add    BYTE PTR [ecx+0x0],ah
  428073:	imul   eax,DWORD PTR [eax],0x66
  428079:	outs   dx,DWORD PTR ds:[esi]
  42807a:	add    BYTE PTR [esi+0x0],ch
  42807d:	je     0x42807f
  42807f:	popa   
  428080:	add    BYTE PTR [edi+0x0],dh
  428083:	push   ebx
  428084:	add    BYTE PTR [edi+0x0],ch
  428087:	arpl   WORD PTR [eax],ax
  428089:	imul   eax,DWORD PTR [eax],0x61
  42808c:	add    BYTE PTR [esi+0x0],dh
  42808f:	outs   dx,DWORD PTR ds:[esi]
  428090:	add    BYTE PTR [eax],al
  428092:	add    BYTE PTR [ebp+0x0],ch
  428095:	jns    0x428097
  428097:	add    BYTE PTR gs:[esi+0x0],ah
  42809b:	ins    BYTE PTR es:[edi],dx
  42809c:	add    BYTE PTR [ecx+0x0],ah
  42809f:	jns    0x4280a1
  4280a1:	jbe    0x4280a3
  4280a3:	popa   
  4280a4:	add    BYTE PTR [esi+0x0],ch
  4280a7:	popa   
  4280a8:	add    BYTE PTR [edi+0x0],ah
  4280ab:	outs   dx,DWORD PTR ds:[esi]
  4280ac:	add    BYTE PTR [eax],al
  4280ae:	add    BYTE PTR [edi+0x0],ch
  4280b1:	jb     0x4280b3
  4280b3:	jae    0x4280b5
  4280b5:	imul   eax,DWORD PTR [eax],0x47006e
  4280bb:	imul   eax,DWORD PTR [eax],0x70006d
  4280c1:	bound  eax,QWORD PTR [eax]
  4280c3:	outs   dx,DWORD PTR ds:[esi]
  4280c4:	add    BYTE PTR [eax+0x0],dh
  4280c7:	imul   eax,DWORD PTR [eax],0x650000
  4280cd:	js     0x4280cf
  4280cf:	jae    0x4280d1
  4280d1:	outs   dx,DWORD PTR ds:[esi]
  4280d2:	add    BYTE PTR [ebx+0x0],dh
  4280d5:	popa   
  4280d6:	add    BYTE PTR [esi+0x0],ch
  4280d9:	je     0x4280db
  4280db:	add    BYTE PTR [eax],al
  4280dd:	bound  eax,QWORD PTR [eax]
  4280df:	jns    0x4280e1
  4280e1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280e6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280ea:	add    BYTE PTR [ecx+0x0],ah
  4280ed:	add    BYTE PTR [eax],al
  4280ef:	js     0x4280f1
  4280f1:	imul   eax,DWORD PTR [eax],0x610054
  4280f7:	imul   eax,DWORD PTR [eax],0x48006e
  4280fd:	popa   
  4280fe:	add    BYTE PTR [esi+0x0],ch
  428101:	add    BYTE PTR fs:[eax],al
  428104:	add    BYTE PTR [edi+0x0],cl
  428107:	ja     0x428109
  428109:	ins    BYTE PTR es:[edi],dx
  42810a:	add    BYTE PTR [ebx+0x0],dh
  42810d:	popa   
  42810e:	add    BYTE PTR [ebx+0x0],dh
  428111:	jo     0x428113
  428113:	popa   
  428114:	add    BYTE PTR [ecx+0x0],ch
  428117:	imul   eax,DWORD PTR [eax],0x72
  42811a:	add    BYTE PTR [ebp+0x0],ah
  42811d:	jbe    0x42811f
  42811f:	add    BYTE PTR [eax],al
  428121:	jb     0x428123
  428123:	jne    0x428125
  428125:	je     0x428127
  428127:	ins    DWORD PTR es:[edi],dx
  428128:	add    BYTE PTR [ebp+0x0],dh
  42812b:	arpl   WORD PTR [eax],ax
  42812d:	jne    0x42812f
  42812f:	jo     0x428131
  428131:	add    BYTE PTR [eax],al
  428133:	jae    0x428135
  428135:	outs   dx,DWORD PTR ds:[esi]
  428136:	add    BYTE PTR [esi+0x0],ah
  428139:	imul   eax,DWORD PTR [eax],0x630062
  42813f:	outs   dx,DWORD PTR ds:[esi]
  428140:	add    BYTE PTR [ecx+0x0],ch
  428143:	jb     0x428145
  428145:	jae    0x428147
  428147:	outs   dx,DWORD PTR ds:[esi]
  428148:	add    BYTE PTR [eax],al
  42814a:	add    BYTE PTR [ebx+0x0],dl
  42814d:	outs   dx,DWORD PTR ds:[esi]
  42814e:	add    BYTE PTR [ebx+0x0],ah
  428151:	popa   
  428152:	add    BYTE PTR [ecx+0x0],ch
  428155:	jae    0x428157
  428157:	data16 add BYTE PTR [ecx+0x0],ah
  42815b:	jb     0x42815d
  42815d:	popa   
  42815e:	add    BYTE PTR [ecx+0x0],ch
  428161:	add    BYTE PTR [eax],al
  428163:	add    BYTE PTR [esi],cl
  428165:	adc    BYTE PTR [eax],al
  428167:	out    0x67,eax
  428169:	adc    BYTE PTR [eax],al
  42816b:	js     0x428194
  42816d:	adc    BYTE PTR [eax],al
  42816f:	test   al,0x13
  428171:	adc    BYTE PTR [eax],al
  428173:	fs push esi
  428175:	adc    BYTE PTR [eax],al
  428177:	jp     0x428199
  428179:	adc    BYTE PTR [eax],al
  42817b:	enter  0x1052,0x0
  42817f:	loop   0x4281f4
  428181:	adc    BYTE PTR [eax],al
  428183:	ja     0x4281f0
  428185:	adc    BYTE PTR [eax],al
  428187:	cmp    al,0x2b
  428189:	adc    BYTE PTR [eax],al
  42818b:	rcl    BYTE PTR [edx],1
  42818d:	adc    BYTE PTR [eax],al
  42818f:	sbb    DWORD PTR [eax+0x10],ebx
  428192:	add    BYTE PTR [esi],ah
  428194:	add    dl,BYTE PTR [eax]
  428196:	add    BYTE PTR [edi+0xc],dh
  428199:	adc    BYTE PTR [eax],al
  42819b:	mov    dh,BYTE PTR [ecx]
  42819d:	adc    BYTE PTR [eax],al
  42819f:	out    dx,al
  4281a0:	sbb    eax,0xed80010
  4281a5:	adc    BYTE PTR [eax],al
  4281a7:	add    eax,0x3300107f
  4281ac:	jbe    0x4281be
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [edi-0x7f],bh
  4281cd:	inc    edx
  4281ce:	add    BYTE PTR [ebx-0x78ffbd7f],al
  4281d4:	add    DWORD PTR [edx+0x0],0x42818b
  4281db:	pop    DWORD PTR [ecx-0x7e6cffbe]
  4281e1:	inc    edx
  4281e2:	add    BYTE PTR [edi-0x64ffbd7f],dl
  4281e8:	add    DWORD PTR [edx+0x0],0x42819f
  4281ef:	mov    ds:0xa7004281,eax
  4281f4:	add    DWORD PTR [edx+0x0],0x4281ab
  4281fb:	cmp    eax,DWORD PTR [edx-0x7dc0ffbe]
  428201:	inc    edx
  428202:	add    BYTE PTR [ebx-0x7e],al
  428205:	inc    edx
  428206:	add    BYTE PTR [edi-0x7e],al
  428209:	inc    edx
  42820a:	add    BYTE PTR [ebx-0x7e],cl
  42820d:	inc    edx
  42820e:	add    BYTE PTR [edi-0x7e],cl
  428211:	inc    edx
  428212:	add    BYTE PTR [ebx-0x7e],dl
  428215:	inc    edx
  428216:	add    BYTE PTR [edi-0x7e],dl
  428219:	inc    edx
  42821a:	add    BYTE PTR [ebx-0x7e],bl
  42821d:	inc    edx
  42821e:	add    BYTE PTR [edi-0x7e],bl
  428221:	inc    edx
  428222:	add    BYTE PTR [ebx-0x7e],ah
  428225:	inc    edx
  428226:	add    BYTE PTR [edi-0x7e],ah
  428229:	inc    edx
  42822a:	add    BYTE PTR [ebx-0x7e],ch
  42822d:	inc    edx
  42822e:	add    BYTE PTR [edi-0x7e],ch
  428231:	inc    edx
  428232:	add    BYTE PTR [ebx-0x7e],dh
  428235:	inc    edx
  428236:	add    BYTE PTR [edi-0x7e],dh
  428239:	inc    edx
  42823a:	add    BYTE PTR [ecx],ch
  42823c:	or     al,0x10
  42823e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428244:	push   edi
  428245:	adc    BYTE PTR [eax],al
  428247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428248:	outs   dx,DWORD PTR ds:[esi]
  428249:	adc    BYTE PTR [eax],al
  42824b:	push   ebx
  42824c:	popa   
  42824d:	adc    BYTE PTR [eax],al
  42824f:	add    dh,BYTE PTR [ebp+0x10]
  428252:	add    dh,cl
  428254:	jle    0x428266
  428256:	add    BYTE PTR [esi+edx*2],dl
  428259:	adc    BYTE PTR [eax],al
  42825b:	mov    al,0x68
  42825d:	adc    BYTE PTR [eax],al
  42825f:	aas    
  428260:	inc    esp
  428261:	adc    BYTE PTR [eax],al
  428263:	pop    ebp
  428264:	and    DWORD PTR [eax],edx
  428266:	add    bl,dl
  428268:	jl     0x42827a
  42826a:	add    BYTE PTR [edx+0xb],dh
  42826d:	adc    BYTE PTR [eax],al
  42826f:	inc    edx
  428270:	push   eax
  428271:	adc    BYTE PTR [eax],al
  428273:	mov    ebp,0xbb001074
  428278:	pop    ds
  428279:	adc    BYTE PTR [eax],al
  42827b:	sub    DWORD PTR [eax+0x10],eax
  42827e:	add    BYTE PTR [ecx],dh
  428280:	ja     0x428292
  428282:	add    bl,dl
  428284:	sbb    dl,BYTE PTR [eax]
  428286:	add    BYTE PTR [esi+0x1e],ch
  428289:	adc    BYTE PTR [eax],al
  42828b:	or     ch,BYTE PTR [esi]
  42828d:	adc    BYTE PTR [eax],al
  42828f:	sbb    eax,0xa100103e
  428294:	data16 adc BYTE PTR [eax],al
  428297:	xchg   ecx,eax
  428298:	bound  edx,QWORD PTR [eax]
  42829a:	add    BYTE PTR [esi],bh
  42829c:	dec    edi
  42829d:	adc    BYTE PTR [eax],al
  42829f:	in     eax,dx
  4282a0:	adc    BYTE PTR fs:[eax],al
  4282a3:	sub    bl,BYTE PTR [ecx+0x10]
  4282a6:	add    BYTE PTR [esi+0x43],al
  4282a9:	adc    BYTE PTR [eax],al
  4282ab:	imul   edi,DWORD PTR [eax+edx*1],0x0
  4282af:	rol    BYTE PTR [esi+0x10],0x0
  4282b3:	in     eax,0x31
  4282b5:	adc    BYTE PTR [eax],al
  4282b7:	mov    esp,0x7b00104f
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0x8b
  4282cc:	add    BYTE PTR [edx+0x0],0x8f
  4282d0:	add    BYTE PTR [edx+0x0],0x93
  4282d4:	add    BYTE PTR [edx+0x0],0x97
  4282d8:	add    BYTE PTR [edx+0x0],0x9b
  4282dc:	add    BYTE PTR [edx+0x0],0x9f
  4282e0:	add    BYTE PTR [edx+0x0],0xa3
  4282e4:	add    BYTE PTR [edx+0x0],0xa7
  4282e8:	add    BYTE PTR [edx+0x0],0xab
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xe1
  4282fc:	and    dl,BYTE PTR [eax]
  4282fe:	add    bh,bh
  428300:	push   ecx
  428301:	adc    BYTE PTR [eax],al
  428303:	test   BYTE PTR ds:0x1d0c0010,0x10
  42830a:	add    BYTE PTR [ebx],al
  42830c:	sbb    dl,BYTE PTR [eax]
  42830e:	add    ch,ah
  428310:	or     dl,BYTE PTR [eax]
  428312:	add    BYTE PTR [edi+0x42001035],bl
  428318:	pop    edi
  428319:	adc    BYTE PTR [eax],al
  42831b:	adc    eax,0xd300103f
  428320:	cmp    dl,BYTE PTR [eax]
  428322:	add    BYTE PTR [ebp+0x1001021],ah
  428328:	sbb    al,0x10
  42832a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428330:	adc    BYTE PTR cs:[eax],al
  428333:	push   eax
  428334:	adc    BYTE PTR [bx+si],al
  428337:	mov    edi,0xfb00102d
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xb
  42834c:	add    DWORD PTR [edx+0x0],0xf
  428350:	add    DWORD PTR [edx+0x0],0x13
  428354:	add    DWORD PTR [edx+0x0],0x17
  428358:	add    DWORD PTR [edx+0x0],0x1b
  42835c:	add    DWORD PTR [edx+0x0],0x1f
  428360:	add    DWORD PTR [edx+0x0],0x23
  428364:	add    DWORD PTR [edx+0x0],0x27
  428368:	add    DWORD PTR [edx+0x0],0x2b
  42836c:	add    DWORD PTR [edx+0x0],0x2f
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0xffffff98
  42837c:	pusha  
  42837d:	adc    BYTE PTR [eax],al
  42837f:	pop    ebp
  428380:	js     0x428392
  428382:	add    BYTE PTR [esi],bh
  428384:	dec    eax
  428385:	adc    BYTE PTR [eax],al
  428387:	cmp    al,0x7a
  428389:	adc    BYTE PTR [eax],al
  42838b:	aam    0x9
  42838d:	adc    BYTE PTR [eax],al
  42838f:	or     cl,BYTE PTR [ebx]
  428391:	adc    BYTE PTR [eax],al
  428393:	pop    ebx
  428394:	push   ebp
  428395:	adc    BYTE PTR [eax],al
  428397:	mov    esi,0x6001032
  42839c:	xor    edx,DWORD PTR [eax]
  42839e:	add    BYTE PTR [esi-0x16ffefc0],al
  4283a4:	and    eax,0x61460010
  4283a9:	adc    BYTE PTR [eax],al
  4283ab:	adc    DWORD PTR [ebp+0x10],ebp
  4283ae:	add    al,al
  4283b0:	dec    esi
  4283b1:	adc    BYTE PTR [eax],al
  4283b3:	jae    0x4283d3
  4283b5:	adc    BYTE PTR [eax],al
  4283b7:	dec    ebx
  4283b8:	add    eax,0x837b0010
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff8b
  4283cc:	add    DWORD PTR [edx+0x0],0xffffff8f
  4283d0:	add    DWORD PTR [edx+0x0],0xffffff93
  4283d4:	add    DWORD PTR [edx+0x0],0xffffff97
  4283d8:	add    DWORD PTR [edx+0x0],0xffffff9b
  4283dc:	add    DWORD PTR [edx+0x0],0xffffff9f
  4283e0:	add    DWORD PTR [edx+0x0],0xffffffa3
  4283e4:	add    DWORD PTR [edx+0x0],0xffffffa7
  4283e8:	add    DWORD PTR [edx+0x0],0xffffffab
  4283ec:	add    DWORD PTR [edx+0x0],0xffffffaf
  4283f0:	add    DWORD PTR [edx+0x0],0xffffffb3
  4283f4:	add    DWORD PTR [edx+0x0],0xffffffb7
  4283f8:	add    DWORD PTR [edx+0x0],0x0
	...
  428404:	cmp    dh,BYTE PTR [ecx+0x52]
  428407:	dec    edi
  428408:	add    BYTE PTR [eax],al
  42840a:	add    BYTE PTR [eax],al
  42840c:	pusha  
  42840d:	lea    eax,[edx]
  42840f:	add    BYTE PTR [ecx],al
  428411:	add    BYTE PTR [eax],al
  428413:	add    BYTE PTR [ecx],al
  428415:	add    BYTE PTR [eax],al
  428417:	add    BYTE PTR [ecx],al
  428419:	add    BYTE PTR [eax],al
  42841b:	add    BYTE PTR [eax],dh
  42841d:	lea    eax,[edx]
  42841f:	add    BYTE PTR [eax-0x73],dl
  428422:	add    al,BYTE PTR [eax]
  428424:	inc    eax
  428425:	lea    eax,[edx]
	...
  428433:	add    al,bh
  428435:	test   DWORD PTR [edx],eax
  428437:	add    BYTE PTR [esi+eax*4],dl
  42843a:	add    al,BYTE PTR [eax]
  42843c:	xchg   BYTE PTR es:[edx],al
  42843f:	add    BYTE PTR [eax],bh
  428441:	xchg   BYTE PTR [edx],al
  428443:	add    BYTE PTR [eax-0x7a],dl
  428446:	add    al,BYTE PTR [eax]
  428448:	xchg   BYTE PTR fs:[edx],al
  42844b:	add    BYTE PTR [esi-0x7a],bh
  42844e:	add    al,BYTE PTR [eax]
  428450:	add    BYTE PTR [eax],al
  428452:	add    BYTE PTR [eax],al
  428454:	mov    al,ds:0xbe000286
  428459:	xchg   BYTE PTR [edx],al
  42845b:	add    ah,cl
  42845d:	xchg   BYTE PTR [edx],al
  42845f:	add    dl,bl
  428461:	xchg   BYTE PTR [edx],al
  428463:	add    dh,ch
  428465:	xchg   BYTE PTR [edx],al
  428467:	add    ah,bh
  428469:	xchg   BYTE PTR [edx],al
  42846b:	add    BYTE PTR [esi],cl
  42846d:	xchg   DWORD PTR [edx],eax
  42846f:	add    BYTE PTR [eax],ah
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    BYTE PTR [esi],ch
  428475:	xchg   DWORD PTR [edx],eax
  428477:	add    BYTE PTR [eax-0x79],al
  42847a:	add    al,BYTE PTR [eax]
  42847c:	push   edx
  42847d:	xchg   DWORD PTR [edx],eax
  42847f:	add    BYTE PTR [eax-0x79],ah
  428482:	add    al,BYTE PTR [eax]
  428484:	outs   dx,BYTE PTR ds:[esi]
  428485:	xchg   DWORD PTR [edx],eax
  428487:	add    BYTE PTR [eax-0x73fffd79],al
  42848d:	xchg   DWORD PTR [edx],eax
  42848f:	add    BYTE PTR [edx-0x4bfffd79],ah
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    dh,al
  428499:	xchg   DWORD PTR [edx],eax
  42849b:	add    dl,dl
  42849d:	xchg   DWORD PTR [edx],eax
  42849f:	add    dl,ah
  4284a1:	xchg   DWORD PTR [edx],eax
  4284a3:	add    dl,dh
  4284a5:	xchg   DWORD PTR [edx],eax
  4284a7:	add    BYTE PTR [eax],cl
  4284a9:	mov    BYTE PTR [edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4],dl
  4284ae:	add    al,BYTE PTR [eax]
  4284b0:	mov    BYTE PTR es:[edx],al
  4284b3:	add    BYTE PTR [eax+ecx*4],bh
  4284b6:	add    al,BYTE PTR [eax]
  4284b8:	dec    esi
  4284b9:	mov    BYTE PTR [edx],al
  4284bb:	add    BYTE PTR [eax+ecx*4+0x2],bl
  4284bf:	add    BYTE PTR [eax+ecx*4+0x2],ch
  4284c3:	add    BYTE PTR [esi-0x78],bh
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	xchg   edx,eax
  4284c9:	mov    BYTE PTR [edx],al
  4284cb:	add    BYTE PTR [eax-0x45fffd78],ch
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    ah,cl
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    ah,bl
  4284d9:	mov    BYTE PTR [edx],al
  4284db:	add    ah,ch
  4284dd:	mov    BYTE PTR [edx],al
  4284df:	add    ah,bh
  4284e1:	mov    BYTE PTR [edx],al
  4284e3:	add    BYTE PTR [esi],cl
  4284e5:	mov    DWORD PTR [edx],eax
  4284e7:	add    BYTE PTR [ecx+ecx*4],bl
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	sub    cl,BYTE PTR [ecx-0x76bdfffe]
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	push   esp
  4284f5:	mov    DWORD PTR [edx],eax
  4284f7:	add    BYTE PTR [esi-0x77],ah
  4284fa:	add    al,BYTE PTR [eax]
  4284fc:	jb     0x428487
  4284fe:	add    al,BYTE PTR [eax]
  428500:	jle    0x42848b
  428502:	add    al,BYTE PTR [eax]
  428504:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  42850a:	add    al,BYTE PTR [eax]
  42850c:	mov    al,0x89
  42850e:	add    al,BYTE PTR [eax]
  428510:	mov    esi,0xd0000289
  428515:	mov    DWORD PTR [edx],eax
  428517:	add    dl,ah
  428519:	mov    DWORD PTR [edx],eax
  42851b:	add    BYTE PTR [eax],al
  42851d:	add    BYTE PTR [eax],al
  42851f:	add    ah,bh
  428521:	mov    DWORD PTR [edx],eax
  428523:	add    BYTE PTR [eax],al
  428525:	add    BYTE PTR [eax],al
  428527:	add    BYTE PTR [edx],bl
  428529:	mov    al,BYTE PTR [edx]
  42852b:	add    BYTE PTR [edx+ecx*4],ch
  42852e:	add    al,BYTE PTR [eax]
  428530:	mov    al,BYTE PTR ds:[edx]
  428533:	add    BYTE PTR [edx+ecx*4+0x2],dl
  428537:	add    BYTE PTR [esi-0x76],ah
  42853a:	add    al,BYTE PTR [eax]
  42853c:	js     0x4284c8
  42853e:	add    al,BYTE PTR [eax]
  428540:	mov    BYTE PTR [edx-0x7559fffe],cl
  428546:	add    al,BYTE PTR [eax]
  428548:	mov    dh,0x8a
  42854a:	add    al,BYTE PTR [eax]
  42854c:	les    ecx,FWORD PTR [edx-0x752bfffe]
  428552:	add    al,BYTE PTR [eax]
  428554:	loop   0x4284e0
  428556:	add    al,BYTE PTR [eax]
  428558:	repnz mov al,BYTE PTR [edx]
  42855b:	add    dh,bh
  42855d:	mov    al,BYTE PTR [edx]
  42855f:	add    BYTE PTR [eax],dl
  428561:	mov    eax,DWORD PTR [edx]
  428563:	add    BYTE PTR [edx],ah
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    BYTE PTR [eax],bh
  428569:	mov    eax,DWORD PTR [edx]
  42856b:	add    BYTE PTR [esi-0x75],al
  42856e:	add    al,BYTE PTR [eax]
  428570:	push   edx
  428571:	mov    eax,DWORD PTR [edx]
  428573:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428577:	add    BYTE PTR [ebx+ecx*4-0x7463fffe],al
  42857e:	add    al,BYTE PTR [eax]
  428580:	stos   BYTE PTR es:[edi],al
  428581:	mov    eax,DWORD PTR [edx]
  428583:	add    BYTE PTR [esi-0x37fffd75],dh
  428589:	mov    eax,DWORD PTR [edx]
  42858b:	add    BYTE PTR [eax],al
  42858d:	add    BYTE PTR [eax],al
  42858f:	add    al,ch
  428591:	mov    eax,DWORD PTR [edx]
  428593:	add    dl,dh
  428595:	mov    eax,DWORD PTR [edx]
  428597:	add    BYTE PTR [eax],al
  428599:	mov    WORD PTR [edx],es
  42859b:	add    BYTE PTR [esp+ecx*4],cl
  42859e:	add    al,BYTE PTR [eax]
  4285a0:	sbb    al,0x8c
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	sub    cl,BYTE PTR [edx+eax*1+0x28c3600]
  4285ab:	add    BYTE PTR [eax-0x74],al
  4285ae:	add    al,BYTE PTR [eax]
  4285b0:	push   edx
  4285b1:	mov    WORD PTR [edx],es
  4285b3:	add    BYTE PTR [eax-0x74],ch
  4285b6:	add    al,BYTE PTR [eax]
  4285b8:	jle    0x428546
  4285ba:	add    al,BYTE PTR [eax]
  4285bc:	xchg   esp,eax
  4285bd:	mov    WORD PTR [edx],es
  4285bf:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  4285c6:	add    al,BYTE PTR [eax]
  4285c8:	les    ecx,FWORD PTR [edx+eax*1+0x28cd200]
  4285cf:	add    dl,ch
  4285d1:	mov    WORD PTR [edx],es
  4285d3:	add    ah,dh
  4285d5:	mov    WORD PTR [edx],es
  4285d7:	add    BYTE PTR [eax],al
  4285d9:	lea    eax,[edx]
  4285db:	add    BYTE PTR [esi],cl
  4285dd:	lea    eax,[edx]
	...
  4285ef:	add    BYTE PTR [ebx+0x6d],ah
  4285f2:	fs cs gs js 0x42865c
  4285f7:	add    BYTE PTR [edi],dl
  4285f9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285fd:	je     0x428671
  4285ff:	outs   dx,DWORD PTR ds:[esi]
  428600:	jns    0x428652
  428602:	jb     0x428673
  428604:	jo     0x42866b
  428606:	jb     0x42867c
  428608:	jns    0x42865d
  42860a:	push   0x50746565
  42860f:	popa   
  428610:	add    BYTE PTR gs:[bx+si],al
  428614:	pop    esp
  428615:	add    BYTE PTR [eax+0x72],dl
  428618:	outs   dx,DWORD PTR ds:[esi]
  428619:	jo     0x428680
  42861b:	jb     0x428691
  42861d:	jns    0x428672
  42861f:	push   0x57746565
  428624:	add    BYTE PTR [eax],al
  428626:	pop    ebx
  428627:	add    BYTE PTR [eax+0x72],dl
  42862a:	outs   dx,DWORD PTR ds:[esi]
  42862b:	jo     0x428692
  42862d:	jb     0x4286a3
  42862f:	jns    0x428684
  428631:	push   0x41746565
  428636:	add    BYTE PTR [eax],al
  428638:	dec    esi
  428639:	add    BYTE PTR [ecx+0x6d],cl
  42863c:	popa   
  42863d:	addr16 gs dec esp
  428640:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428647:	ins    BYTE PTR es:[edi],dx
  428648:	popa   
  428649:	arpl   WORD PTR [ebp+0x49],sp
  42864c:	arpl   WORD PTR [edi+0x6e],bp
  42864f:	add    BYTE PTR [ecx],dh
  428651:	add    BYTE PTR [ecx+0x6d],cl
  428654:	popa   
  428655:	addr16 gs dec esp
  428658:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42865f:	je     0x4286d3
  428661:	outs   dx,DWORD PTR ds:[esi]
  428662:	jns    0x428664
  428664:	inc    eax
  428665:	add    BYTE PTR [ecx+0x6d],cl
  428668:	popa   
  428669:	addr16 gs dec esp
  42866c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428673:	dec    ecx
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	popa   
  428676:	addr16 gs inc ebx
  428679:	outs   dx,DWORD PTR ds:[esi]
  42867a:	jne    0x4286ea
  42867c:	je     0x42867e
  42867e:	dec    esp
  42867f:	add    BYTE PTR [ecx+0x6d],cl
  428682:	popa   
  428683:	addr16 gs dec esp
  428686:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42868d:	outs   dx,DWORD PTR ds:[esi]
  42868e:	jbe    0x4286f5
  428690:	add    BYTE PTR [eax],al
  428692:	inc    ebx
  428693:	dec    edi
  428694:	dec    ebp
  428695:	inc    ebx
  428696:	push   esp
  428697:	dec    esp
  428698:	xor    esi,DWORD PTR [edx]
  42869a:	cs fs ins BYTE PTR es:[edi],dx
  42869d:	ins    BYTE PTR es:[edi],dx
  42869e:	add    BYTE PTR [eax],al
  4286a0:	push   edi
  4286a1:	add    BYTE PTR [ebx+0x72],al
  4286a4:	gs popa 
  4286a6:	je     0x42870d
  4286a8:	inc    esp
  4286a9:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286b0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286b8:	jb     0x42871b
  4286ba:	ins    DWORD PTR es:[edi],dx
  4286bb:	push   edi
  4286bc:	add    BYTE PTR [eax],al
  4286be:	xor    al,BYTE PTR [edx]
  4286c0:	push   ebx
  4286c1:	gs je  0x428707
  4286c4:	popa   
  4286c5:	jb     0x42872c
  4286c7:	je     0x428719
  4286c9:	outs   dx,DWORD PTR ds:[esi]
  4286ca:	jae    0x4286cc
  4286cc:	cmp    al,BYTE PTR [ecx]
  4286ce:	inc    edi
  4286cf:	gs je  0x42871f
  4286d2:	gs jae 0x428748
  4286d5:	popa   
  4286d6:	addr16 gs inc ecx
  4286d9:	add    BYTE PTR [edx+0x61724400],dh
  4286df:	ja     0x428727
  4286e1:	jb     0x428744
  4286e3:	ins    DWORD PTR es:[edi],dx
  4286e4:	gs inc ebx
  4286e6:	outs   dx,DWORD PTR ds:[esi]
  4286e7:	outs   dx,BYTE PTR ds:[esi]
  4286e8:	je     0x42875c
  4286ea:	outs   dx,DWORD PTR ds:[esi]
  4286eb:	ins    BYTE PTR es:[edi],dx
  4286ec:	add    BYTE PTR [eax],al
  4286ee:	sbb    BYTE PTR [ecx],al
  4286f0:	inc    edi
  4286f1:	gs je  0x42873d
  4286f4:	arpl   WORD PTR [edi+0x6e],bp
  4286f7:	dec    ecx
  4286f8:	outs   dx,BYTE PTR ds:[esi]
  4286f9:	outs   dx,WORD PTR ds:[esi]
  4286fb:	add    bl,bh
  4286fd:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428701:	arpl   WORD PTR [ebx+0x50],bp
  428704:	outs   dx,DWORD PTR ds:[esi]
  428705:	jo     0x42877c
  428707:	jo     0x428756
  428709:	outs   dx,BYTE PTR gs:[esi]
  42870b:	jne    0x42870d
  42870d:	add    cl,bl
  42870f:	add    DWORD PTR [ebp+0x6f],ecx
  428712:	outs   dx,BYTE PTR ds:[esi]
  428713:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42871b:	push   edx
  42871c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428721:	add    BYTE PTR [ebx+0x68],al
  428724:	popa   
  428725:	jb     0x42877c
  428727:	jo     0x428799
  428729:	gs jb  0x428783
  42872c:	add    BYTE PTR [eax],al
  42872e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428732:	je     0x428778
  428734:	ins    BYTE PTR es:[edi],dx
  428735:	addr16 dec ecx
  428737:	je     0x42879e
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	push   esp
  42873b:	gs js  0x4287b2
  42873e:	inc    ecx
  42873f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428743:	push   0x774f776f
  428748:	outs   dx,BYTE PTR ds:[esi]
  428749:	gs fs push eax
  42874c:	outs   dx,DWORD PTR ds:[esi]
  42874d:	jo     0x4287c4
  42874f:	jo     0x4287c4
  428751:	add    BYTE PTR [eax],bl
  428753:	add    dl,BYTE PTR [edx+0x65]
  428756:	ins    DWORD PTR es:[edi],dx
  428757:	outs   dx,DWORD PTR ds:[esi]
  428758:	jbe    0x4287bf
  42875a:	push   eax
  42875b:	jb     0x4287cc
  42875d:	jo     0x4287b6
  42875f:	add    BYTE PTR [edi+0x2],bh
  428762:	push   ebx
  428763:	push   0x6957776f
  428768:	outs   dx,BYTE PTR ds:[esi]
  428769:	outs   dx,DWORD PTR fs:[esi]
  42876b:	ja     0x42876d
  42876d:	add    BYTE PTR [ebx],bl
  42876f:	add    BYTE PTR [ebx+0x61],al
  428772:	ins    BYTE PTR es:[edi],dx
  428773:	ins    BYTE PTR es:[edi],dx
  428774:	push   edi
  428775:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42877c:	outs   dx,DWORD PTR ds:[esi]
  42877d:	arpl   WORD PTR [edi+0x0],dx
  428780:	mov    dh,0x1
  428782:	dec    esp
  428783:	outs   dx,DWORD PTR ds:[esi]
  428784:	popa   
  428785:	fs dec ebp
  428787:	outs   dx,BYTE PTR gs:[esi]
  428789:	jne    0x4287cc
  42878b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428792:	arpl   WORD PTR [eax+0x54],bp
  428795:	outs   dx,DWORD PTR ds:[esi]
  428796:	push   esp
  428797:	push   0x69577369
  42879c:	outs   dx,BYTE PTR ds:[esi]
  42879d:	outs   dx,DWORD PTR fs:[esi]
  42879f:	ja     0x4287a1
  4287a1:	add    BYTE PTR [eax],ah
  4287a3:	add    dl,BYTE PTR [ebx+0x63]
  4287a6:	jb     0x428817
  4287a8:	ins    BYTE PTR es:[edi],dx
  4287a9:	ins    BYTE PTR es:[edi],dx
  4287aa:	push   edi
  4287ab:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	pop    DWORD PTR [eax]
  4287b6:	inc    esp
  4287b7:	gs push di
  4287ba:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287c1:	outs   dx,DWORD PTR ds:[esi]
  4287c2:	arpl   WORD PTR [edi+0x0],dx
  4287c5:	add    BYTE PTR [ecx],dh
  4287c7:	add    BYTE PTR [ebx+0x68],al
  4287ca:	popa   
  4287cb:	jb     0x42881d
  4287cd:	jb     0x428834
  4287cf:	jbe    0x428828
  4287d1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287d8:	fs popa 
  4287da:	je     0x428841
  4287dc:	push   edx
  4287dd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287e2:	xor    eax,DWORD PTR [ecx]
  4287e4:	inc    edi
  4287e5:	gs je  0x428835
  4287e8:	outs   dx,BYTE PTR gs:[esi]
  4287ea:	jne    0x428835
  4287ec:	je     0x428853
  4287ee:	ins    DWORD PTR es:[edi],dx
  4287ef:	dec    ecx
  4287f0:	inc    esp
  4287f1:	add    BYTE PTR ds:0x6e655302,ch
  4287f7:	fs dec esi
  4287f9:	outs   dx,DWORD PTR ds:[esi]
  4287fa:	je     0x428865
  4287fc:	data16 jns 0x42884c
  4287ff:	gs jae 0x428875
  428802:	popa   
  428803:	addr16 gs push edi
  428806:	add    BYTE PTR [eax],al
  428808:	mov    al,0x1
  42880a:	dec    esp
  42880b:	outs   dx,DWORD PTR ds:[esi]
  42880c:	popa   
  42880d:	fs dec ecx
  42880f:	arpl   WORD PTR [edi+0x6e],bp
  428812:	push   edi
  428813:	add    BYTE PTR [ecx+0x57734901],ah
  428819:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428820:	popa   
  428821:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428825:	add    BYTE PTR ds:0x74654701,dl
  42882b:	inc    esi
  42882c:	outs   dx,DWORD PTR ds:[esi]
  42882d:	jb     0x428894
  42882f:	addr16 jb 0x4288a1
  428832:	jne    0x4288a2
  428834:	fs push edi
  428836:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42883d:	add    DWORD PTR [edi+0x65],eax
  428840:	je     0x428899
  428842:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428849:	js     0x4288bf
  42884b:	inc    ecx
  42884c:	add    BYTE PTR [eax],al
  42884e:	add    DWORD PTR ds:[edi+0x65],eax
  428852:	je     0x4288a1
  428854:	gs jae 0x4288ca
  428857:	popa   
  428858:	addr16 gs push edi
  42885b:	add    BYTE PTR [ebx],ch
  42885d:	add    dl,BYTE PTR [ebx+0x65]
  428860:	outs   dx,BYTE PTR ds:[esi]
  428861:	fs dec ebp
  428863:	gs jae 0x4288d9
  428866:	popa   
  428867:	addr16 gs push edi
  42886a:	add    BYTE PTR [eax],al
  42886c:	das    
  42886d:	add    dl,BYTE PTR [ebx+0x65]
  428870:	je     0x4288b3
  428872:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428876:	gs push edi
  428878:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42887f:	add    dl,BYTE PTR [edx+0x65]
  428882:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42888a:	popa   
  42888b:	jae    0x428900
  42888d:	inc    ebp
  42888e:	js     0x4288e7
  428890:	add    BYTE PTR [eax],al
  428892:	and    DWORD PTR [edx],eax
  428894:	push   ebx
  428895:	outs   dx,BYTE PTR gs:[esi]
  428897:	fs inc esp
  428899:	ins    BYTE PTR es:[edi],dx
  42889a:	addr16 dec ecx
  42889c:	je     0x428903
  42889e:	ins    DWORD PTR es:[edi],dx
  42889f:	dec    ebp
  4288a0:	gs jae 0x428916
  4288a3:	popa   
  4288a4:	addr16 gs inc ecx
  4288a7:	add    BYTE PTR ds:0x74654701,bh
  4288ad:	dec    ebp
  4288ae:	gs jae 0x428924
  4288b1:	popa   
  4288b2:	addr16 gs push esp
  4288b5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288bc:	inc    ebx
  4288bd:	popa   
  4288be:	jae    0x428923
  4288c0:	popa   
  4288c1:	fs gs push edi
  4288c4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288cb:	add    bh,bl
  4288cd:	add    BYTE PTR [ebp+0x78],al
  4288d0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288d8:	jae    0x42891f
  4288da:	js     0x4288dc
  4288dc:	repnz add DWORD PTR [eax+0x6f],edx
  4288e0:	jae    0x428956
  4288e2:	dec    ebp
  4288e3:	gs jae 0x428959
  4288e6:	popa   
  4288e7:	addr16 gs push edi
  4288ea:	add    BYTE PTR [eax],al
  4288ec:	add    DWORD PTR fs:[edi+0x65],eax
  4288f0:	je     0x428947
  4288f2:	jo     0x428958
  4288f4:	popa   
  4288f5:	je     0x42895c
  4288f7:	push   edx
  4288f8:	outs   dx,BYTE PTR ds:[si]
  4288fa:	add    BYTE PTR [eax],al
  4288fc:	mov    BYTE PTR [edx],al
  4288fe:	push   esp
  4288ff:	popa   
  428900:	bound  esp,QWORD PTR [edx+0x65]
  428903:	fs push esp
  428905:	gs js  0x42897c
  428908:	dec    edi
  428909:	jne    0x42897f
  42890b:	push   edi
  42890c:	add    BYTE PTR [eax],al
  42890e:	test   eax,0x616f4c01
  428913:	fs inc edx
  428915:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42891d:	add    BYTE PTR [edx+esi*2+0x61],al
  428921:	ja     0x428976
  428923:	je     0x428986
  428925:	je     0x42898c
  428927:	push   edi
  428928:	add    BYTE PTR [eax],al
  42892a:	ja     0x42892d
  42892c:	inc    edi
  42892d:	gs je  0x428987
  428930:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428937:	js     0x4289ad
  428939:	dec    esp
  42893a:	outs   dx,BYTE PTR gs:[esi]
  42893c:	addr16 je 0x4289a7
  42893f:	push   edi
  428940:	add    BYTE PTR [eax],al
  428942:	cmp    BYTE PTR [eax],al
  428944:	inc    ebx
  428945:	push   0x70557261
  42894a:	jo     0x4289b1
  42894c:	jb     0x428990
  42894e:	jne    0x4289b6
  428950:	push   di
  428952:	add    BYTE PTR [eax],al
  428954:	daa    
  428955:	add    DWORD PTR [edi+0x65],eax
  428958:	je     0x4289a5
  42895a:	gs jns 0x4289bf
  42895d:	outs   dx,DWORD PTR ds:[esi]
  42895e:	popa   
  42895f:	jb     0x4289c5
  428961:	push   esp
  428962:	jns    0x4289d4
  428964:	add    BYTE PTR gs:[ebx+0x1],cl
  428968:	inc    edi
  428969:	gs je  0x4289bc
  42896c:	jb     0x4289dd
  42896e:	jo     0x4289c7
  428970:	add    BYTE PTR [eax],al
  428972:	dec    ebp
  428973:	add    BYTE PTR [ebx+0x6f],al
  428976:	jo     0x4289f1
  428978:	push   edx
  428979:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42897e:	sub    eax,0x61684300
  428983:	jb     0x4289d3
  428985:	gs js  0x4289fc
  428988:	push   edi
  428989:	add    BYTE PTR [eax+0x43734901],dl
  42898f:	push   0x6f4c7261
  428994:	ja     0x4289fb
  428996:	jb     0x4289d9
  428998:	add    BYTE PTR [eax],al
  42899a:	sub    BYTE PTR [ecx],al
  42899c:	inc    edi
  42899d:	gs je  0x4289ec
  4289a0:	popa   
  4289a1:	jae    0x428a17
  4289a3:	inc    ecx
  4289a4:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4289a8:	gs push eax
  4289aa:	outs   dx,DWORD PTR ds:[esi]
  4289ab:	jo     0x428a22
  4289ad:	jo     0x4289af
  4289af:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289b5:	fs push ebx
  4289b7:	je     0x428a2b
  4289b9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289c0:	inc    edi
  4289c1:	gs je  0x428a1b
  4289c4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289cb:	outs   dx,BYTE PTR ds:[esi]
  4289cc:	addr16 push edi
  4289ce:	add    BYTE PTR [eax],al
  4289d0:	leave  
  4289d1:	add    DWORD PTR [ebp+0x61],ecx
  4289d4:	jo     0x428a2d
  4289d6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289dd:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289e4:	inc    ebx
  4289e5:	push   0x6f547261
  4289ea:	dec    edi
  4289eb:	gs ins DWORD PTR es:[edi],dx
  4289ed:	push   edi
  4289ee:	add    BYTE PTR [eax],al
  4289f0:	push   ebp
  4289f1:	push   ebx
  4289f2:	inc    ebp
  4289f3:	push   edx
  4289f4:	xor    esi,DWORD PTR [edx]
  4289f6:	cs fs ins BYTE PTR es:[edi],dx
  4289f9:	ins    BYTE PTR es:[edi],dx
  4289fa:	add    BYTE PTR [eax],al
  4289fc:	xchg   edx,eax
  4289fd:	add    edx,DWORD PTR [edx+0x74]
  428a00:	ins    BYTE PTR es:[edi],dx
  428a01:	dec    ecx
  428a02:	outs   dx,BYTE PTR ds:[esi]
  428a03:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  428a0b:	jb     0x428a76
  428a0d:	outs   dx,BYTE PTR ds:[esi]
  428a0e:	add    BYTE PTR [bp+0x74],ch
  428a12:	fs ins BYTE PTR es:[edi],dx
  428a14:	ins    BYTE PTR es:[edi],dx
  428a15:	cs fs ins BYTE PTR es:[edi],dx
  428a18:	ins    BYTE PTR es:[edi],dx
  428a19:	add    BYTE PTR ds:0x74654702,al
  428a1f:	dec    esp
  428a20:	outs   dx,DWORD PTR ds:[esi]
  428a21:	arpl   WORD PTR [ecx+0x6c],sp
  428a24:	gs dec ecx
  428a26:	outs   dx,BYTE PTR ds:[esi]
  428a27:	outs   dx,WORD PTR ds:[esi]
  428a29:	push   edi
  428a2a:	add    BYTE PTR [eax],al
  428a2c:	inc    ebp
  428a2d:	add    al,BYTE PTR [edi+0x65]
  428a30:	je     0x428a82
  428a32:	jb     0x428aa3
  428a34:	arpl   WORD PTR [ecx+0x64],ax
  428a37:	fs jb  0x428a9f
  428a3a:	jae    0x428aaf
  428a3c:	add    BYTE PTR [eax],al
  428a3e:	rol    DWORD PTR [eax],cl
  428a40:	inc    ebx
  428a41:	jb     0x428aa8
  428a43:	popa   
  428a44:	je     0x428aab
  428a46:	inc    esi
  428a47:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a4f:	outs   dx,BYTE PTR ds:[esi]
  428a50:	addr16 push edi
  428a52:	add    BYTE PTR [eax],al
  428a54:	sub    BYTE PTR [ebx+edx*2],al
  428a57:	gs je  0x428aa2
  428a5a:	popa   
  428a5b:	outs   dx,BYTE PTR ds:[esi]
  428a5c:	fs ins BYTE PTR es:[edi],dx
  428a5e:	gs inc ebx
  428a60:	outs   dx,DWORD PTR ds:[esi]
  428a61:	jne    0x428ad1
  428a63:	je     0x428a65
  428a65:	add    ah,bl
  428a67:	add    BYTE PTR [ebx+0x72],al
  428a6a:	gs popa 
  428a6c:	je     0x428ad3
  428a6e:	dec    ebp
  428a6f:	popa   
  428a70:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a78:	pop    DWORD PTR [ecx]
  428a7a:	inc    edi
  428a7b:	gs je  0x428abf
  428a7e:	je     0x428aef
  428a80:	ins    DWORD PTR es:[edi],dx
  428a81:	dec    esi
  428a82:	popa   
  428a83:	ins    DWORD PTR es:[edi],dx
  428a84:	gs inc ecx
  428a86:	add    BYTE PTR [eax],al
  428a88:	pusha  
  428a89:	add    al,BYTE PTR [edi+0x65]
  428a8c:	je     0x428ae1
  428a8e:	jns    0x428b03
  428a90:	je     0x428af7
  428a92:	ins    DWORD PTR es:[edi],dx
  428a93:	push   edi
  428a94:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a9b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428aa2:	jns    0x428ae5
  428aa4:	add    BYTE PTR [eax],al
  428aa6:	aas    
  428aa7:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428aab:	fs dec esp
  428aad:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428ab4:	add    BYTE PTR [eax],al
  428ab6:	xchg   ecx,eax
  428ab7:	add    al,BYTE PTR [edi+0x6c]
  428aba:	outs   dx,DWORD PTR ds:[esi]
  428abb:	bound  esp,QWORD PTR [ecx+0x6c]
  428abe:	inc    ecx
  428abf:	ins    BYTE PTR es:[edi],dx
  428ac0:	ins    BYTE PTR es:[edi],dx
  428ac1:	outs   dx,DWORD PTR ds:[esi]
  428ac2:	arpl   WORD PTR [eax],ax
  428ac4:	xchg   edx,eax
  428ac5:	add    al,0x56
  428ac7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428ace:	jne    0x428b35
  428ad0:	jb     0x428b4b
  428ad2:	add    BYTE PTR [eax],al
  428ad4:	test   DWORD PTR [ecx],0x46746547
  428ada:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ae2:	jb     0x428ae5
  428ae4:	inc    esi
  428ae5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428aec:	jne    0x428b60
  428aee:	arpl   WORD PTR [ebp+0x57],sp
  428af1:	add    BYTE PTR [eax],bh
  428af3:	add    ecx,DWORD PTR [ebp+0x6f]
  428af6:	jbe    0x428b5d
  428af8:	inc    esi
  428af9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428b01:	popa   
  428b02:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428b09:	jo     0x428b7f
  428b0b:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b12:	inc    edi
  428b13:	gs je  0x428b58
  428b16:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b1d:	jo     0x428b84
  428b1f:	inc    ecx
  428b20:	add    BYTE PTR [eax],al
  428b22:	and    DWORD PTR [ebx+edx*2],eax
  428b25:	gs je  0x428b6e
  428b28:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b30:	bound  esi,QWORD PTR [ebp+0x74]
  428b33:	gs jae 0x428b77
  428b36:	add    BYTE PTR [eax],al
  428b38:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b3c:	jbe    0x428ba3
  428b3e:	inc    esi
  428b3f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b47:	add    BYTE PTR [ebx+0x6f],al
  428b4a:	jo     0x428bc5
  428b4c:	inc    esi
  428b4d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b55:	jne    0x428bbc
  428b57:	jb     0x428bd2
  428b59:	push   eax
  428b5a:	gs jb  0x428bc3
  428b5d:	outs   dx,DWORD PTR ds:[esi]
  428b5e:	jb     0x428bcd
  428b60:	popa   
  428b61:	outs   dx,BYTE PTR ds:[esi]
  428b62:	arpl   WORD PTR [ebp+0x43],sp
  428b65:	outs   dx,DWORD PTR ds:[esi]
  428b66:	jne    0x428bd6
  428b68:	je     0x428bcf
  428b6a:	jb     0x428b6c
  428b6c:	sub    DWORD PTR [ebx+edx*2],eax
  428b6f:	gs je  0x428bba
  428b72:	popa   
  428b73:	outs   dx,BYTE PTR ds:[esi]
  428b74:	fs ins BYTE PTR es:[edi],dx
  428b76:	gs dec ecx
  428b78:	outs   dx,BYTE PTR ds:[esi]
  428b79:	outs   dx,WORD PTR ds:[esi]
  428b7b:	jb     0x428bea
  428b7d:	popa   
  428b7e:	je     0x428be9
  428b80:	outs   dx,DWORD PTR ds:[esi]
  428b81:	outs   dx,BYTE PTR ds:[esi]
  428b82:	add    BYTE PTR [eax],al
  428b84:	push   ss
  428b85:	add    DWORD PTR [ebp+0x6e],eax
  428b88:	je     0x428bef
  428b8a:	jb     0x428bcf
  428b8c:	jb     0x428bf7
  428b8e:	je     0x428bf9
  428b90:	arpl   WORD PTR [ecx+0x6c],sp
  428b93:	push   ebx
  428b94:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b99:	outs   dx,BYTE PTR ds:[esi]
  428b9a:	add    BYTE PTR [eax],al
  428b9c:	jg     0x428b9f
  428b9e:	inc    esi
  428b9f:	outs   dx,DWORD PTR ds:[esi]
  428ba0:	ins    BYTE PTR es:[edi],dx
  428ba1:	fs push ebx
  428ba3:	je     0x428c17
  428ba5:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428bac:	ins    BYTE PTR es:[edi],dx
  428bad:	jae    0x428c23
  428baf:	jb     0x428c1d
  428bb1:	outs   dx,BYTE PTR gs:[esi]
  428bb3:	inc    ecx
  428bb4:	add    BYTE PTR [eax],al
  428bb6:	sahf   
  428bb7:	add    DWORD PTR [edi+0x65],eax
  428bba:	je     0x428bff
  428bbc:	outs   dx,DWORD PTR ds:[esi]
  428bbd:	ins    DWORD PTR es:[edi],dx
  428bbe:	ins    DWORD PTR es:[edi],dx
  428bbf:	push   esp
  428bc0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bc7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bcb:	gs je  0x428c22
  428bce:	push   0x64616572
  428bd3:	push   esp
  428bd4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bdb:	inc    ebp
  428bdc:	push   edx
  428bdd:	dec    esi
  428bde:	inc    ebp
  428bdf:	dec    esp
  428be0:	xor    esi,DWORD PTR [edx]
  428be2:	cs fs ins BYTE PTR es:[edi],dx
  428be5:	ins    BYTE PTR es:[edi],dx
  428be6:	add    BYTE PTR [eax],al
  428be8:	mov    dh,0x1
  428bea:	push   eax
  428beb:	outs   dx,DWORD PTR ds:[esi]
  428bec:	ins    BYTE PTR es:[edi],dx
  428bed:	jns    0x428c56
  428bef:	outs   dx,DWORD PTR ds:[esi]
  428bf0:	outs   dx,BYTE PTR ds:[esi]
  428bf1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428bf5:	gs je  0x428c47
  428bf8:	bound  ebp,QWORD PTR [edx+0x65]
  428bfb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bff:	add    BYTE PTR [ebx+0x6c654400],dh
  428c05:	gs je  0x428c6d
  428c08:	inc    esp
  428c09:	inc    ebx
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	rol    DWORD PTR [ecx],1
  428c0e:	push   ebx
  428c0f:	gs ins BYTE PTR es:[edi],dx
  428c11:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c16:	push   0x65
  428c18:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c1c:	jmp    0x428c1f
  428c1e:	push   ebx
  428c1f:	gs je  0x428c6f
  428c22:	popa   
  428c23:	jo     0x428c72
  428c25:	outs   dx,DWORD PTR ds:[esi]
  428c26:	fs add BYTE PTR gs:[eax],al
  428c2a:	leave  
  428c2b:	add    DWORD PTR [edx+0x6f],edx
  428c2e:	jne    0x428c9e
  428c30:	fs push edx
  428c32:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c37:	add    BYTE PTR [edx+0x69],al
  428c3a:	je     0x428c7e
  428c3c:	ins    BYTE PTR es:[edi],dx
  428c3d:	je     0x428c3f
  428c3f:	add    BYTE PTR [ebx+0x61655201],bh
  428c45:	ins    BYTE PTR es:[edi],dx
  428c46:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c4d:	je     0x428cc3
  428c4f:	add    BYTE PTR gs:[eax],al
  428c52:	jge    0x428c55
  428c54:	inc    edi
  428c55:	gs je  0x428cab
  428c58:	jns    0x428ccd
  428c5a:	je     0x428cc1
  428c5c:	ins    DWORD PTR es:[edi],dx
  428c5d:	push   eax
  428c5e:	popa   
  428c5f:	ins    BYTE PTR es:[edi],dx
  428c60:	gs je  0x428cd7
  428c63:	gs push ebp
  428c65:	jae    0x428ccc
  428c67:	add    BYTE PTR [eax+0x74654701],cl
  428c6d:	push   esp
  428c6e:	gs js  0x428ce5
  428c71:	inc    ebp
  428c72:	js     0x428ce8
  428c74:	outs   dx,BYTE PTR gs:[esi]
  428c76:	je     0x428cc8
  428c78:	outs   dx,DWORD PTR ds:[esi]
  428c79:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c80:	push   ebx
  428c81:	arpl   WORD PTR [ecx+0x6c],sp
  428c84:	gs push esi
  428c86:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c8d:	inc    ebp
  428c8e:	js     0x428d04
  428c90:	inc    ebp
  428c91:	js     0x428c93
  428c93:	add    bh,cl
  428c95:	add    DWORD PTR [ebx+0x65],edx
  428c98:	ins    BYTE PTR es:[edi],dx
  428c99:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c9e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428ca5:	add    DWORD PTR [ebx+0x65],edx
  428ca8:	je     0x428cfe
  428caa:	gs js  0x428d21
  428cad:	inc    ebx
  428cae:	outs   dx,DWORD PTR ds:[esi]
  428caf:	ins    BYTE PTR es:[edi],dx
  428cb0:	outs   dx,DWORD PTR ds:[esi]
  428cb1:	jb     0x428cb3
  428cb3:	add    BYTE PTR [eax+0x74615001],ch
  428cb9:	push   0x65526f54
  428cbe:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cc6:	inc    ebx
  428cc7:	outs   dx,DWORD PTR ds:[esi]
  428cc8:	ins    DWORD PTR es:[edi],dx
  428cc9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428ccc:	gs push edx
  428cce:	outs   dx,BYTE PTR ds:[si]
  428cd0:	add    BYTE PTR [eax],al
  428cd2:	lods   al,BYTE PTR ds:[esi]
  428cd3:	add    BYTE PTR [ebx+0x72],al
  428cd6:	gs popa 
  428cd8:	je     0x428d3f
  428cda:	push   edx
  428cdb:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ce0:	outs   dx,BYTE PTR ds:[esi]
  428ce1:	dec    ecx
  428ce2:	outs   dx,BYTE PTR ds:[esi]
  428ce3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428ceb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cef:	gs push esp
  428cf1:	outs   dx,DWORD PTR ds:[esi]
  428cf2:	add    BYTE PTR [eax],al
  428cf4:	mov    ds:0x65724300,al
  428cf9:	popa   
  428cfa:	je     0x428d61
  428cfc:	dec    ecx
  428cfd:	inc    ebx
  428cfe:	push   edi
  428cff:	add    BYTE PTR [ebp+0x63655201],bh
  428d05:	je     0x428d5d
  428d07:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d0f:	add    BYTE PTR [ebx+0x72],al
  428d12:	gs popa 
  428d14:	je     0x428d7b
  428d16:	push   eax
  428d17:	popa   
  428d18:	ins    BYTE PTR es:[edi],dx
  428d19:	gs je  0x428d90
  428d1c:	add    BYTE PTR gs:[edi+0x44],al
  428d20:	dec    ecx
  428d21:	xor    esi,DWORD PTR [edx]
  428d23:	cs fs ins BYTE PTR es:[edi],dx
  428d26:	ins    BYTE PTR es:[edi],dx
	...
  428d2f:	add    BYTE PTR [ecx+0x20],dh
  428d32:	add    al,BYTE PTR [eax]
	...
  428d50:	imul   ecx,DWORD PTR [ebp+0x2],0x0
	...
  428d5f:	add    BYTE PTR [ecx+0x64],ch
  428d62:	js     0x428dcd
  428d64:	outs   dx,DWORD PTR fs:[esi]
  428d66:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d6a:	add    BYTE PTR [ebx+0x65],dl
  428d6d:	je     0x428db0
  428d6f:	outs   dx,BYTE PTR ds:[esi]
  428d70:	arpl   WORD PTR [eax+0x6f],bp
  428d73:	jb     0x428dc4
  428d75:	jb     0x428de0
  428d77:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d7f:	add    BYTE PTR [eax],al
  428d81:	add    BYTE PTR [eax],al
  428d83:	add    al,bh
  428d85:	test   DWORD PTR [edx],eax
  428d87:	add    BYTE PTR [esi+eax*4],dl
  428d8a:	add    al,BYTE PTR [eax]
  428d8c:	xchg   BYTE PTR es:[edx],al
  428d8f:	add    BYTE PTR [eax],bh
  428d91:	xchg   BYTE PTR [edx],al
  428d93:	add    BYTE PTR [eax-0x7a],dl
  428d96:	add    al,BYTE PTR [eax]
  428d98:	xchg   BYTE PTR fs:[edx],al
  428d9b:	add    BYTE PTR [esi-0x7a],bh
  428d9e:	add    al,BYTE PTR [eax]
  428da0:	add    BYTE PTR [eax],al
  428da2:	add    BYTE PTR [eax],al
  428da4:	mov    al,ds:0xbe000286
  428da9:	xchg   BYTE PTR [edx],al
  428dab:	add    ah,cl
  428dad:	xchg   BYTE PTR [edx],al
  428daf:	add    dl,bl
  428db1:	xchg   BYTE PTR [edx],al
  428db3:	add    dh,ch
  428db5:	xchg   BYTE PTR [edx],al
  428db7:	add    ah,bh
  428db9:	xchg   BYTE PTR [edx],al
  428dbb:	add    BYTE PTR [esi],cl
  428dbd:	xchg   DWORD PTR [edx],eax
  428dbf:	add    BYTE PTR [eax],ah
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    BYTE PTR [esi],ch
  428dc5:	xchg   DWORD PTR [edx],eax
  428dc7:	add    BYTE PTR [eax-0x79],al
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	push   edx
  428dcd:	xchg   DWORD PTR [edx],eax
  428dcf:	add    BYTE PTR [eax-0x79],ah
  428dd2:	add    al,BYTE PTR [eax]
  428dd4:	outs   dx,BYTE PTR ds:[esi]
  428dd5:	xchg   DWORD PTR [edx],eax
  428dd7:	add    BYTE PTR [eax-0x73fffd79],al
  428ddd:	xchg   DWORD PTR [edx],eax
  428ddf:	add    BYTE PTR [edx-0x4bfffd79],ah
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    dh,al
  428de9:	xchg   DWORD PTR [edx],eax
  428deb:	add    dl,dl
  428ded:	xchg   DWORD PTR [edx],eax
  428def:	add    dl,ah
  428df1:	xchg   DWORD PTR [edx],eax
  428df3:	add    dl,dh
  428df5:	xchg   DWORD PTR [edx],eax
  428df7:	add    BYTE PTR [eax],cl
  428df9:	mov    BYTE PTR [edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4],dl
  428dfe:	add    al,BYTE PTR [eax]
  428e00:	mov    BYTE PTR es:[edx],al
  428e03:	add    BYTE PTR [eax+ecx*4],bh
  428e06:	add    al,BYTE PTR [eax]
  428e08:	dec    esi
  428e09:	mov    BYTE PTR [edx],al
  428e0b:	add    BYTE PTR [eax+ecx*4+0x2],bl
  428e0f:	add    BYTE PTR [eax+ecx*4+0x2],ch
  428e13:	add    BYTE PTR [esi-0x78],bh
  428e16:	add    al,BYTE PTR [eax]
  428e18:	xchg   edx,eax
  428e19:	mov    BYTE PTR [edx],al
  428e1b:	add    BYTE PTR [eax-0x45fffd78],ch
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    ah,cl
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    ah,bl
  428e29:	mov    BYTE PTR [edx],al
  428e2b:	add    ah,ch
  428e2d:	mov    BYTE PTR [edx],al
  428e2f:	add    ah,bh
  428e31:	mov    BYTE PTR [edx],al
  428e33:	add    BYTE PTR [esi],cl
  428e35:	mov    DWORD PTR [edx],eax
  428e37:	add    BYTE PTR [ecx+ecx*4],bl
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	sub    cl,BYTE PTR [ecx-0x76bdfffe]
  428e42:	add    al,BYTE PTR [eax]
  428e44:	push   esp
  428e45:	mov    DWORD PTR [edx],eax
  428e47:	add    BYTE PTR [esi-0x77],ah
  428e4a:	add    al,BYTE PTR [eax]
  428e4c:	jb     0x428dd7
  428e4e:	add    al,BYTE PTR [eax]
  428e50:	jle    0x428ddb
  428e52:	add    al,BYTE PTR [eax]
  428e54:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  428e5a:	add    al,BYTE PTR [eax]
  428e5c:	mov    al,0x89
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	mov    esi,0xd0000289
  428e65:	mov    DWORD PTR [edx],eax
  428e67:	add    dl,ah
  428e69:	mov    DWORD PTR [edx],eax
  428e6b:	add    BYTE PTR [eax],al
  428e6d:	add    BYTE PTR [eax],al
  428e6f:	add    ah,bh
  428e71:	mov    DWORD PTR [edx],eax
  428e73:	add    BYTE PTR [eax],al
  428e75:	add    BYTE PTR [eax],al
  428e77:	add    BYTE PTR [edx],bl
  428e79:	mov    al,BYTE PTR [edx]
  428e7b:	add    BYTE PTR [edx+ecx*4],ch
  428e7e:	add    al,BYTE PTR [eax]
  428e80:	mov    al,BYTE PTR ds:[edx]
  428e83:	add    BYTE PTR [edx+ecx*4+0x2],dl
  428e87:	add    BYTE PTR [esi-0x76],ah
  428e8a:	add    al,BYTE PTR [eax]
  428e8c:	js     0x428e18
  428e8e:	add    al,BYTE PTR [eax]
  428e90:	mov    BYTE PTR [edx-0x7559fffe],cl
  428e96:	add    al,BYTE PTR [eax]
  428e98:	mov    dh,0x8a
  428e9a:	add    al,BYTE PTR [eax]
  428e9c:	les    ecx,FWORD PTR [edx-0x752bfffe]
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	loop   0x428e30
  428ea6:	add    al,BYTE PTR [eax]
  428ea8:	repnz mov al,BYTE PTR [edx]
  428eab:	add    dh,bh
  428ead:	mov    al,BYTE PTR [edx]
  428eaf:	add    BYTE PTR [eax],dl
  428eb1:	mov    eax,DWORD PTR [edx]
  428eb3:	add    BYTE PTR [edx],ah
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    BYTE PTR [eax],bh
  428eb9:	mov    eax,DWORD PTR [edx]
  428ebb:	add    BYTE PTR [esi-0x75],al
  428ebe:	add    al,BYTE PTR [eax]
  428ec0:	push   edx
  428ec1:	mov    eax,DWORD PTR [edx]
  428ec3:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428ec7:	add    BYTE PTR [ebx+ecx*4-0x7463fffe],al
  428ece:	add    al,BYTE PTR [eax]
  428ed0:	stos   BYTE PTR es:[edi],al
  428ed1:	mov    eax,DWORD PTR [edx]
  428ed3:	add    BYTE PTR [esi-0x37fffd75],dh
  428ed9:	mov    eax,DWORD PTR [edx]
  428edb:	add    BYTE PTR [eax],al
  428edd:	add    BYTE PTR [eax],al
  428edf:	add    al,ch
  428ee1:	mov    eax,DWORD PTR [edx]
  428ee3:	add    dl,dh
  428ee5:	mov    eax,DWORD PTR [edx]
  428ee7:	add    BYTE PTR [eax],al
  428ee9:	mov    WORD PTR [edx],es
  428eeb:	add    BYTE PTR [esp+ecx*4],cl
  428eee:	add    al,BYTE PTR [eax]
  428ef0:	sbb    al,0x8c
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	sub    cl,BYTE PTR [edx+eax*1+0x28c3600]
  428efb:	add    BYTE PTR [eax-0x74],al
  428efe:	add    al,BYTE PTR [eax]
  428f00:	push   edx
  428f01:	mov    WORD PTR [edx],es
  428f03:	add    BYTE PTR [eax-0x74],ch
  428f06:	add    al,BYTE PTR [eax]
  428f08:	jle    0x428e96
  428f0a:	add    al,BYTE PTR [eax]
  428f0c:	xchg   esp,eax
  428f0d:	mov    WORD PTR [edx],es
  428f0f:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  428f16:	add    al,BYTE PTR [eax]
  428f18:	les    ecx,FWORD PTR [edx+eax*1+0x28cd200]
  428f1f:	add    dl,ch
  428f21:	mov    WORD PTR [edx],es
  428f23:	add    ah,dh
  428f25:	mov    WORD PTR [edx],es
  428f27:	add    BYTE PTR [eax],al
  428f29:	lea    eax,[edx]
  428f2b:	add    BYTE PTR [esi],cl
  428f2d:	lea    eax,[edx]
  428f2f:	add    BYTE PTR [eax],al
  428f31:	add    BYTE PTR [eax],al
	...
