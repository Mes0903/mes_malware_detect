
029d4fa427d821bcb8c12d4f19dd99403a8c0356a096d854dd09c1c51a0c53fc.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e89,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e89,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9d,0x10
  401025:	cmp    DWORD PTR ds:0x428e9d,0x0
  40102c:	je     0x401092
  401032:	cmp    DWORD PTR ds:0x428e9d,0x3
  401039:	jle    0x401092
  40103f:	jmp    0x401066
  401044:	push   0x559d
  401049:	push   0x2a1f
  40104e:	push   0x41ed
  401053:	push   DWORD PTR [ebp-0x1c]
  401056:	push   0x428124
  40105b:	push   0x44ac
  401060:	call   DWORD PTR ds:0x42ca10
  401066:	cmp    DWORD PTR ds:0x428e9d,0x4
  40106d:	jne    0x401080
  401073:	mov    edi,DWORD PTR ds:0x428e9d
  401079:	dec    edi
  40107a:	mov    DWORD PTR ds:0x428e9d,edi
  401080:	mov    edi,DWORD PTR ds:0x428e9d
  401086:	dec    edi
  401087:	mov    DWORD PTR ds:0x428e9d,edi
  40108d:	jmp    0x401025
  401092:	mov    esi,0x75108b1
  401097:	mov    DWORD PTR ds:0x428e91,0x16
  4010a1:	cmp    DWORD PTR ds:0x428e91,0x0
  4010a8:	je     0x4010ef
  4010ae:	cmp    DWORD PTR ds:0x428e91,0x25
  4010b5:	jge    0x4010ef
  4010bb:	jmp    0x4010dd
  4010c0:	push   DWORD PTR [ebp-0x20]
  4010c3:	push   0x1b69
  4010c8:	push   0x4c28
  4010cd:	push   0x78bb
  4010d2:	push   0x428ec1
  4010d7:	call   DWORD PTR ds:0x42ca14
  4010dd:	mov    ecx,DWORD PTR ds:0x428e91
  4010e3:	dec    ecx
  4010e4:	mov    DWORD PTR ds:0x428e91,ecx
  4010ea:	jmp    0x4010a1
  4010ef:	xor    eax,esi
  4010f1:	or     ecx,DWORD PTR ds:0x428e95
  4010f7:	mov    edi,0x3272f8
  4010fc:	add    eax,edi
  4010fe:	xor    ecx,DWORD PTR ds:0x428e61
  401104:	mov    DWORD PTR [ebp-0x40],eax
  401107:	mov    ecx,DWORD PTR ds:0x428ef5
  40110d:	mov    eax,ds:0x42a065
  401112:	sub    eax,ecx
  401114:	sub    ecx,DWORD PTR [ecx+eax*1]
  401117:	mov    eax,ds:0x4281e5
  40111c:	or     ecx,0x6919
  401122:	mov    eax,DWORD PTR [eax]
  401124:	mov    DWORD PTR [ebp-0x3c],eax
  401127:	mov    eax,ds:0x4283f5
  40112c:	xor    ecx,0x14c1
  401132:	mov    eax,DWORD PTR [eax]
  401134:	mov    DWORD PTR [ebp-0x1c],eax
  401137:	and    DWORD PTR ds:0x428e75,0x31f0
  401141:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  401148:	or     ecx,ecx
  40114a:	mov    eax,DWORD PTR [ebp-0x34]
  40114d:	xor    eax,esi
  40114f:	add    eax,edi
  401151:	mov    DWORD PTR [ebp-0x40],eax
  401154:	and    DWORD PTR ds:0x428eb9,0x0
  40115e:	jmp    0x401170
  401163:	mov    ecx,DWORD PTR ds:0x428eb9
  401169:	inc    ecx
  40116a:	mov    DWORD PTR ds:0x428eb9,ecx
  401170:	cmp    DWORD PTR ds:0x428eb9,0x1c
  401177:	jae    0x4011a0
  40117d:	cmp    DWORD PTR ds:0x428eb9,0x21
  401184:	jl     0x4011a0
  40118a:	jmp    0x40119b
  40118f:	push   DWORD PTR [ebp-0xc]
  401192:	push   DWORD PTR [ebp-0x18]
  401195:	call   DWORD PTR ds:0x42ca18
  40119b:	jmp    0x401163
  4011a0:	mov    eax,ds:0x428365
  4011a5:	or     DWORD PTR ds:0x428eb1,0x3218
  4011af:	mov    DWORD PTR [ebp-0x40],eax
  4011b2:	mov    DWORD PTR ds:0x428e69,0x16
  4011bc:	cmp    DWORD PTR ds:0x428e69,0x0
  4011c3:	je     0x401218
  4011c9:	cmp    DWORD PTR ds:0x428e69,0xb
  4011d0:	jg     0x401218
  4011d6:	jmp    0x4011ec
  4011db:	push   0x42804e
  4011e0:	push   DWORD PTR [ebp-0x24]
  4011e3:	push   DWORD PTR [ebp-0x24]
  4011e6:	call   DWORD PTR ds:0x42ca4c
  4011ec:	cmp    DWORD PTR ds:0x428e69,0xc
  4011f3:	jne    0x401206
  4011f9:	mov    ecx,DWORD PTR ds:0x428e69
  4011ff:	dec    ecx
  401200:	mov    DWORD PTR ds:0x428e69,ecx
  401206:	mov    ecx,DWORD PTR ds:0x428e69
  40120c:	dec    ecx
  40120d:	mov    DWORD PTR ds:0x428e69,ecx
  401213:	jmp    0x4011bc
  401218:	mov    eax,DWORD PTR [ebp-0x3c]
  40121b:	sbb    DWORD PTR ds:0x428ea5,0x6db4
  401225:	mov    DWORD PTR [ebp-0x14],eax
  401228:	mov    eax,DWORD PTR [ebp-0x14]
  40122b:	movzx  ecx,BYTE PTR ds:0x428e45
  401232:	xor    ecx,DWORD PTR ds:0x428e79
  401238:	mov    DWORD PTR ds:0x428e45,ecx
  40123e:	jmp    0x403595
  401243:	lods   eax,DWORD PTR ds:[esi]
  401244:	ins    DWORD PTR es:[edi],dx
  401245:	call   0x9776:0xb1685a84
  40124c:	xchg   ebx,eax
  40124d:	add    bh,cl
  40124f:	xchg   DWORD PTR [ebp-0x4d],ecx
  401252:	out    0x7b,al
  401254:	jnp    0x4012d1
  401256:	jnp    0x40120d
  401258:	sahf   
  401259:	jnp    0x4012d6
  40125b:	aam    0xcd
  40125d:	(bad)  
  40125e:	rcr    al,0xc4
  401261:	fcmove st,st(6)
  401263:	test   cl,al
  401265:	mov    BYTE PTR [edi-0x7473726f],al
  40126b:	mov    WORD PTR [ebx-0x6effe2dc],?
  401271:	test   eax,0x519a808a
  401276:	or     DWORD PTR [eax+ebx*4-0x3e5463d2],0x7766fb6d
  401281:	xchg   esi,eax
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	jle    0x40123b
  401285:	jno    0x4012ce
  401287:	jle    0x4012ca
  401289:	inc    ebx
  40128a:	mov    edx,0x1d87fecd
  40128f:	sti    
  401290:	xchg   edx,eax
  401291:	jle    0x401272
  401293:	or     al,0xb8
  401295:	sub    al,0x3b
  401297:	or     al,0x66
  401299:	rcr    BYTE PTR [edi],cl
  40129b:	push   0xffffffc8
  40129d:	out    dx,al
  40129e:	cwde   
  40129f:	dec    edx
  4012a0:	imul   esp,DWORD PTR ds:0xe51c8cf6,0x15
  4012a7:	out    dx,eax
  4012a8:	sti    
  4012a9:	(bad)  
  4012aa:	fldcw  WORD PTR [ecx-0x76753813]
  4012b0:	cmp    BYTE PTR [esi-0x2e],cl
  4012b3:	mov    al,ds:0x8fe47e4
  4012b8:	test   al,0xca
  4012ba:	jne    0x40126f
  4012bc:	sub    DWORD PTR [edx+0x79fbdbf8],ebx
  4012c2:	inc    eax
  4012c3:	sbb    BYTE PTR [ecx+ebx*2],0x9e
  4012c7:	push   0x40
  4012c9:	out    0xd5,al
  4012cb:	arpl   WORD PTR [eax+0x73bd5ff2],si
  4012d1:	jb     0x4012bd
  4012d3:	sbb    ecx,esp
  4012d5:	xchg   ebx,eax
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	mov    ch,0xb2
  4012d9:	xchg   ebp,eax
  4012da:	add    ch,BYTE PTR [esi]
  4012dc:	imul   ecx,eax,0x68
  4012df:	xor    DWORD PTR [esi],esi
  4012e1:	sub    eax,0xa4059069
  4012e6:	xchg   ebx,eax
  4012e7:	lods   eax,DWORD PTR ds:[esi]
  4012e8:	in     eax,dx
  4012e9:	mov    edi,0x4ce2b7f2
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    eax,DWORD PTR [esi-0x4f]
  4012f2:	and    ebp,esp
  4012f4:	xchg   edi,eax
  4012f5:	cld    
  4012f6:	xchg   ebx,eax
  4012f7:	xchg   edi,eax
  4012f8:	inc    esp
  4012f9:	clc    
  4012fa:	mov    DWORD PTR [esi],edi
  4012fc:	stc    
  4012fd:	mov    ds:0x8b5ea7dd,eax
  401302:	jne    0x4012b8
  401304:	push   es
  401305:	ret    
  401306:	pop    ss
  401307:	rdpmc  
  401309:	fsub   QWORD PTR [edx]
  40130b:	adc    al,0x5
  40130d:	pop    eax
  40130e:	in     al,dx
  40130f:	ds cli 
  401311:	adc    dh,ch
  401313:	xchg   esp,eax
  401314:	loope  0x4012ae
  401316:	push   es
  401317:	(bad)
  40131a:	dec    edi
  40131b:	arpl   WORD PTR [edi-0xd0e548c],di
  401321:	xor    sp,di
  401324:	scas   eax,DWORD PTR es:[edi]
  401325:	(bad)  
  401326:	or     al,0xd5
  401328:	in     al,0xd6
  40132a:	push   esp
  40132b:	or     dl,BYTE PTR [ecx-0x6f]
  40132e:	aas    
  40132f:	push   es
  401330:	push   0x75
  401332:	inc    esi
  401333:	mov    WORD PTR gs:[eax*2-0x48b4fc79],ss
  40133b:	outs   dx,BYTE PTR ds:[esi]
  40133c:	das    
  40133d:	test   eax,0xcf7a213e
  401342:	and    BYTE PTR [edi],bl
  401344:	mov    WORD PTR [esp+edi*8+0x54e8644f],es
  40134b:	call   0x106e86e7
  401350:	sbb    dl,ch
  401352:	pop    edx
  401353:	sti    
  401354:	pop    esp
  401355:	lock js 0x401306
  401358:	jae    0x4013b2
  40135a:	pop    ebx
  40135b:	xor    al,0xdb
  40135d:	push   edi
  40135e:	mov    ebx,edi
  401360:	push   0x35674ffb
  401365:	call   esp
  401367:	shr    DWORD PTR [edx-0x3e],cl
  40136a:	mov    ah,0x5d
  40136c:	ret    
  40136d:	xchg   edx,eax
  40136e:	por    mm1,QWORD PTR [ebx+0x2ceaa526]
  401375:	mov    eax,0x48eab00f
  40137a:	push   ecx
  40137b:	xor    al,0xf
  40137d:	paddw  mm1,QWORD PTR ds:0x1b760292
  401384:	in     eax,dx
  401385:	or     ecx,DWORD PTR [edi]
  401387:	push   ebx
  401388:	cld    
  401389:	mov    ds:0xe8c93bb0,al
  40138e:	outs   dx,BYTE PTR ds:[esi]
  40138f:	bound  eax,QWORD PTR [esi]
  401391:	or     eax,0x5ab341b2
  401396:	jno    0x4013c6
  401398:	inc    ecx
  401399:	xor    dh,BYTE PTR [esi+0x2d]
  40139c:	nop
  40139d:	clc    
  40139e:	jnp    0x401358
  4013a0:	test   al,0xcf
  4013a2:	cld    
  4013a3:	outs   dx,BYTE PTR ds:[esi]
  4013a4:	popf   
  4013a5:	jbe    0x4013f4
  4013a7:	ret    
  4013a8:	adc    ah,al
  4013aa:	and    dl,ah
  4013ac:	scas   al,BYTE PTR es:[edi]
  4013ad:	sahf   
  4013ae:	fld    QWORD PTR [esi+0x412dd9b0]
  4013b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013b5:	popa   
  4013b6:	int3   
  4013b7:	jo     0x401384
  4013b9:	jne    0x4013ab
  4013bb:	lds    esp,FWORD PTR [ecx]
  4013bd:	or     DWORD PTR [eax+0x11f956f4],ebx
  4013c3:	ins    DWORD PTR es:[edi],dx
  4013c4:	aas    
  4013c5:	add    al,BYTE PTR [edx+0x4d]
  4013c8:	xor    eax,0xcba5142b
  4013cd:	push   ebx
  4013ce:	add    BYTE PTR [edi],ch
  4013d0:	sti    
  4013d1:	in     eax,dx
  4013d2:	dec    esi
  4013d3:	addr16 jg 0x40137d
  4013d6:	loop   0x401393
  4013d8:	pop    ebp
  4013d9:	(bad)  
  4013da:	aas    
  4013db:	fistp  DWORD PTR [ebx+0xb860932]
  4013e1:	xchg   ecx,eax
  4013e2:	add    BYTE PTR [edi+0x6a4505c7],0x3c
  4013e9:	jae    0x401395
  4013eb:	adc    dh,BYTE PTR [ebx+0x7568aae5]
  4013f1:	loop   0x4013a6
  4013f3:	pusha  
  4013f4:	cli    
  4013f5:	mov    al,ds:0x6a7e40d3
  4013fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013fb:	cwde   
  4013fc:	push   edx
  4013fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013fe:	call   0x2a96bdfa
  401403:	call   0x3404288c
  401408:	or     ch,BYTE PTR [edx-0x47]
  40140b:	in     al,dx
  40140c:	and    eax,0x92461509
  401411:	cld    
  401412:	psadbw mm5,QWORD PTR [esi+ecx*8]
  401416:	fnstenv [ecx]
  401418:	ds stos DWORD PTR es:[edi],eax
  40141a:	sbb    eax,DWORD PTR [ebp+0x3cd9de8b]
  401420:	xor    BYTE PTR [ebp+0x22],bl
  401423:	ins    DWORD PTR es:[edi],dx
  401424:	inc    edi
  401425:	stc    
  401426:	cmp    sp,WORD PTR [eax+0x5d]
  40142a:	retf   0x490a
  40142d:	fild   WORD PTR [esi-0x1ca27049]
  401433:	popf   
  401434:	pop    ebp
  401435:	mov    edi,0xcc595a2
  40143a:	lods   eax,DWORD PTR ds:[esi]
  40143b:	cmp    ebx,ebx
  40143d:	ffreep st(5)
  40143f:	sti    
  401440:	test   eax,0x92525dc9
  401445:	stos   DWORD PTR es:[edi],eax
  401446:	daa    
  401447:	mov    edx,0x6fae9f57
  40144c:	aad    0x7f
  40144e:	inc    ebp
  40144f:	jbe    0x40145a
  401451:	pop    edx
  401452:	div    BYTE PTR [ecx-0x1d]
  401455:	mov    ebp,0x3516adf3
  40145a:	dec    esi
  40145b:	sub    eax,ecx
  40145d:	mov    DWORD PTR [edi-0x1902f933],eax
  401463:	sub    al,0xae
  401465:	test   BYTE PTR [ebx-0x2a],ah
  401468:	fwait
  401469:	in     al,dx
  40146a:	aad    0x12
  40146c:	fs jb  0x40143b
  40146f:	pop    ds
  401470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401471:	loopne 0x401453
  401473:	pop    esp
  401474:	push   ds
  401475:	adc    esp,edi
  401477:	push   edx
  401478:	mov    ds,esi
  40147a:	sub    al,0x8f
  40147c:	test   DWORD PTR [ebx+0x46],0xe66c92a
  401483:	shl    DWORD PTR [edi+0x75c0bb96],cl
  401489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40148a:	mov    edi,0x98d24ead
  40148f:	pusha  
  401490:	jae    0x4014b9
  401492:	add    eax,0xadf52701
  401497:	mov    al,ds:0xbc139f4b
  40149c:	pop    ss
  40149d:	sub    eax,0xf0e31af1
  4014a2:	cmp    dl,BYTE PTR [esi+0x5b]
  4014a5:	cld    
  4014a6:	stos   DWORD PTR es:[edi],eax
  4014a7:	ret    0x53d4
  4014aa:	(bad)  
  4014ab:	mov    ecx,0x3defaefc
  4014b0:	retf   
  4014b1:	aas    
  4014b2:	push   es
  4014b3:	into   
  4014b4:	inc    edx
  4014b5:	retf   
  4014b6:	xor    BYTE PTR [edx-0x786bdeec],bh
  4014bc:	scas   eax,DWORD PTR es:[edi]
  4014bd:	xchg   esi,eax
  4014be:	add    al,0x7
  4014c0:	ds pop esp
  4014c2:	xor    al,0x6f
  4014c4:	pop    edi
  4014c5:	sub    ebx,DWORD PTR [edi+0x409d4d7d]
  4014cb:	sar    DWORD PTR [esi-0x720e5d6c],cl
  4014d1:	push   edx
  4014d2:	popf   
  4014d3:	aas    
  4014d4:	mov    esp,0x9db07003
  4014d9:	in     al,dx
  4014da:	xor    bh,cl
  4014dc:	aas    
  4014dd:	into   
  4014de:	jne    0x401520
  4014e0:	xchg   ecx,eax
  4014e1:	push   edi
  4014e2:	add    eax,0x79703597
  4014e7:	mov    DWORD PTR [edx+ecx*2-0x4c],esp
  4014eb:	jl     0x40147f
  4014ed:	inc    ebx
  4014ee:	cmp    eax,0x55bcc852
  4014f3:	push   ds
  4014f4:	adc    ah,BYTE PTR ds:0xeb5ba262
  4014fa:	xlat   BYTE PTR ds:[ebx]
  4014fb:	mov    ah,0xa4
  4014fd:	and    eax,0xce632ac9
  401502:	scas   al,BYTE PTR es:[edi]
  401503:	jecxz  0x401556
  401505:	inc    ebp
  401506:	ret    0xcb50
  401509:	mov    bl,0xc3
  40150b:	js     0x4014c1
  40150d:	lods   eax,DWORD PTR ds:[esi]
  40150e:	fistp  DWORD PTR [ecx-0x14e75678]
  401514:	sub    eax,0xde5d8993
  401519:	and    BYTE PTR [esi+0x45241799],0x62
  401520:	inc    esp
  401521:	or     eax,0xb646336d
  401526:	dec    ebp
  401527:	mov    bh,0x78
  401529:	sahf   
  40152a:	mov    WORD PTR [edi],ss
  40152c:	push   0xffffffe3
  40152e:	mov    esi,0xb14f31d0
  401533:	out    0x9f,al
  401535:	lods   al,BYTE PTR cs:[esi]
  401537:	cmp    DWORD PTR [ebx-0x2e],eax
  40153a:	dec    edi
  40153b:	push   ds
  40153c:	sub    DWORD PTR [ebx],ebx
  40153e:	imul   ebp,DWORD PTR [ebx-0x61410ce0],0xebc5547c
  401548:	inc    eax
  401549:	push   ds
  40154a:	popf   
  40154b:	jle    0x401511
  40154d:	imul   ecx,DWORD PTR [edi-0x3e855e90],0xffffff92
  401554:	adc    bl,al
  401556:	inc    edx
  401558:	inc    eax
  401559:	enter  0x906d,0xae
  40155d:	or     eax,0xda272bc
  401562:	cmc    
  401563:	xor    ecx,DWORD PTR [edi+0x6d6abbed]
  401569:	scas   eax,DWORD PTR es:[edi]
  40156a:	or     al,0x26
  40156c:	aas    
  40156d:	push   ds
  40156e:	das    
  40156f:	call   0x59819c62
  401574:	repz or BYTE PTR [ebp+0x37],ah
  401578:	and    eax,0x5662da26
  40157d:	xchg   esi,eax
  40157e:	sub    edi,ebx
  401580:	popa   
  401581:	inc    ebx
  401582:	pop    esi
  401583:	xchg   ebp,eax
  401584:	cmp    ecx,DWORD PTR [ebx]
  401586:	and    DWORD PTR [esi+0x21],ecx
  401589:	iret   
  40158a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40158b:	clc    
  40158c:	add    al,0x35
  40158f:	fwait
  401590:	mov    al,0x77
  401592:	adc    edx,DWORD PTR [ebx-0x53]
  401595:	mov    edx,0x4d38b702
  40159a:	adc    BYTE PTR [edx+0x297ae360],cl
  4015a0:	sbb    BYTE PTR [edx+0x5a],0x3b
  4015a4:	or     eax,0xc6fdc4c6
  4015a9:	mov    eax,ds:0xe727baae
  4015ae:	cmc    
  4015af:	daa    
  4015b0:	pushf  
  4015b1:	(bad)  
  4015b2:	imul   ecx,DWORD PTR [ecx+0x1f824336],0xfffffff7
  4015b9:	inc    edi
  4015ba:	mov    ch,0x86
  4015bc:	stos   BYTE PTR es:[edi],al
  4015bd:	xchg   ebx,eax
  4015be:	out    0xce,eax
  4015c0:	cwde   
  4015c1:	leave  
  4015c2:	pop    ecx
  4015c3:	stc    
  4015c4:	xchg   edx,eax
  4015c5:	mov    al,0x50
  4015c7:	imul   esi,DWORD PTR [ebp+0x78e7defd],0x27c2e47b
  4015d1:	xchg   edx,eax
  4015d2:	out    dx,eax
  4015d3:	push   0xd2987929
  4015d8:	cmp    al,0x87
  4015da:	jge    0x401574
  4015dc:	nop
  4015dd:	mov    bl,BYTE PTR [edi-0x66]
  4015e0:	add    bl,bl
  4015e2:	outs   dx,BYTE PTR ds:[esi]
  4015e3:	or     eax,DWORD PTR es:[ecx+0x564c0601]
  4015ea:	mov    al,ds:0x59aad98e
  4015ef:	fcom   DWORD PTR [edx+0x74fb3738]
  4015f5:	ss sbb ecx,ebp
  4015f8:	out    dx,eax
  4015f9:	and    cl,BYTE PTR [edx-0x17fb2e64]
  4015ff:	cmp    DWORD PTR [ecx-0x691f30dc],0x6d804e33
  401609:	xor    ch,dl
  40160b:	test   DWORD PTR [ebx],ebp
  40160d:	test   DWORD PTR [edx+eiz*2+0x2f534d3e],esp
  401614:	jp     0x4015f5
  401616:	push   esp
  401617:	xor    bl,ch
  401619:	pop    ebp
  40161a:	into   
  40161b:	push   esi
  40161c:	add    eax,0xa320a930
  401621:	shl    BYTE PTR [esp+edi*4+0x11],0x3f
  401626:	sub    al,0x8
  401628:	nop
  401629:	sti    
  40162a:	loopne 0x4016a2
  40162c:	push   0xe2f62aa4
  401631:	(bad)  
  401633:	jp     0x4015dd
  401635:	jbe    0x40161a
  401637:	jmp    DWORD PTR [ebx-0x223982ad]
  40163d:	sub    BYTE PTR [eax+eax*2-0x4],ch
  401641:	(bad)  
  401642:	dec    edx
  401644:	je     0x401619
  401646:	(bad)  
  401647:	enter  0x16b5,0xa4
  40164b:	mov    eax,DWORD PTR [ebx-0x2ab181bf]
  401651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401652:	cmp    BYTE PTR [edi+0x19],0xfe
  401656:	xchg   ecx,eax
  401657:	out    dx,eax
  401658:	and    esi,DWORD PTR [ebp+0x72]
  40165b:	sub    cl,BYTE PTR [ebx+0x1e]
  40165e:	xchg   DWORD PTR [ebp-0x44],eax
  401661:	loop   0x401644
  401663:	xor    BYTE PTR [esi+edi*1],bh
  401666:	or     al,0x2d
  401668:	loopne 0x401670
  40166a:	push   ds
  40166b:	(bad)  
  40166c:	ss stos BYTE PTR es:[edi],al
  40166e:	(bad)  
  40166f:	or     edi,DWORD PTR [edx-0x13]
  401672:	rcr    DWORD PTR [ebx+0x5ab2b57],1
  401678:	xor    eax,0xfd3d9d5b
  40167d:	loope  0x4016a6
  40167f:	adc    BYTE PTR [edx+0x538d7c37],ch
  401685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401686:	cmovae edx,DWORD PTR [edi-0x36]
  40168a:	and    cl,BYTE PTR [esi-0x53]
  40168d:	jp     0x401654
  40168f:	fimul  DWORD PTR [eax-0x289c0b15]
  401695:	mov    ecx,0x58319702
  40169a:	dec    eax
  40169b:	dec    ebx
  40169c:	mov    ebx,0xf4a49b0a
  4016a1:	cli    
  4016a2:	ins    BYTE PTR es:[edi],dx
  4016a3:	(bad)  
  4016a4:	fstp   st(3)
  4016a6:	mov    al,0x74
  4016a8:	int3   
  4016a9:	mov    edx,0x54e1a9dd
  4016ae:	pop    ds
  4016af:	push   0x1d
  4016b1:	test   BYTE PTR [eax],0x5
  4016b4:	sbb    al,0x90
  4016b6:	mov    ah,0x75
  4016b8:	dec    edi
  4016b9:	(bad)  
  4016ba:	fst    st(4)
  4016bc:	dec    esi
  4016bd:	jbe    0x401709
  4016bf:	inc    edi
  4016c0:	push   ebx
  4016c1:	mov    edi,ebp
  4016c3:	push   ds
  4016c4:	xchg   esp,eax
  4016c5:	int3   
  4016c6:	push   eax
  4016c7:	loope  0x4016a5
  4016c9:	jl     0x4016e3
  4016cb:	inc    esp
  4016cc:	adc    edi,edi
  4016ce:	int3   
  4016cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016d0:	jp     0x40173b
  4016d2:	rol    DWORD PTR [eax-0x5e5c613d],cl
  4016d8:	jae    0x401676
  4016da:	pusha  
  4016db:	(bad)  
  4016dc:	cmp    BYTE PTR [eax],dh
  4016de:	lahf   
  4016df:	call   0xbd6b8a16
  4016e4:	ret    
  4016e5:	(bad)  
  4016e6:	imul   BYTE PTR [edx+esi*4-0x56]
  4016ea:	(bad)  
  4016eb:	(bad)  
  4016ed:	sbb    DWORD PTR [esi-0x62],ebx
  4016f0:	lahf   
  4016f1:	shl    DWORD PTR [eax-0x46],0xf4
  4016f5:	out    dx,eax
  4016f6:	dec    eax
  4016f7:	inc    esi
  4016f8:	data16 jbe 0x40170a
  4016fb:	sbb    ebp,eax
  4016fd:	out    dx,al
  4016fe:	cmp    ecx,DWORD PTR ds:0x2c7d2dc
  401704:	jae    0x4016f9
  401706:	scas   al,BYTE PTR es:[edi]
  401707:	jmp    FWORD PTR [ecx]
  401709:	sub    al,cl
  40170b:	or     DWORD PTR [ebx-0x71475573],ebp
  401711:	div    DWORD PTR [esi]
  401713:	jnp    0x401776
  401715:	add    al,0x2
  401717:	js     0x4016cb
  401719:	inc    edi
  40171a:	jae    0x40170a
  40171c:	push   ecx
  40171d:	ins    BYTE PTR es:[edi],dx
  40171e:	mov    ebx,0x34b17783
  401723:	cli    
  401724:	lock (bad) 
  401726:	jmp    0x401746
  401728:	mov    esi,0x33923e82
  40172e:	push   eax
  40172f:	sub    ecx,ebx
  401731:	mov    ebx,ds
  401733:	lods   al,BYTE PTR ds:[esi]
  401734:	inc    edx
  401735:	sub    al,0xd2
  401737:	adc    al,0x44
  401739:	inc    edx
  40173a:	cmc    
  40173b:	inc    edx
  40173c:	sahf   
  40173d:	out    0x77,eax
  40173f:	ret    
  401740:	icebp  
  401741:	lock (bad) 
  401743:	clc    
  401744:	out    0x71,al
  401746:	add    DWORD PTR [esi-0x2d],esi
  401749:	out    0x84,al
  40174b:	out    dx,eax
  40174c:	in     al,0xdd
  40174e:	test   eax,0x6d67ed5d
  401753:	pop    ds
  401754:	push   ebx
  401755:	xchg   ecx,eax
  401756:	push   ss
  401757:	(bad)  
  401758:	mov    ds:0x543533f7,eax
  40175d:	sar    BYTE PTR [esi+0x73442ece],0xaf
  401764:	int3   
  401765:	shl    DWORD PTR [esi-0x6c],0xf
  401769:	sar    bl,cl
  40176b:	mov    ebx,0xe3a181db
  401770:	and    BYTE PTR [esi-0x5],0xe0
  401774:	pop    ds
  401775:	popa   
  401776:	enter  0x6e63,0x1
  40177a:	hlt    
  40177b:	jnp    0x401715
  40177d:	sbb    DWORD PTR [edi+0x58],eax
  401780:	int3   
  401781:	fild   WORD PTR [eax-0xe]
  401784:	arpl   WORD PTR [bx+di+0x21d5],di
  401789:	loope  0x4017b4
  40178b:	push   es
  40178c:	(bad)  
  40178d:	cmp    edi,DWORD PTR [ecx]
  40178f:	inc    esi
  401790:	mov    WORD PTR [edi+0x71d7e5f8],ds
  401796:	ins    DWORD PTR es:[edi],dx
  401797:	mov    dl,0xb0
  401799:	(bad)  
  40179b:	inc    edi
  40179c:	push   ecx
  40179d:	cli    
  40179e:	int    0xf9
  4017a0:	xor    DWORD PTR [esp+ecx*1+0x29],edi
  4017a4:	outs   dx,DWORD PTR ds:[esi]
  4017a5:	add    BYTE PTR [edx],ah
  4017a7:	pop    esi
  4017a8:	aad    0x8c
  4017aa:	cld    
  4017ab:	and    bh,al
  4017ad:	xchg   ebp,eax
  4017ae:	mov    eax,ds:0x763edc10
  4017b3:	xor    al,0xe2
  4017b5:	mov    DWORD PTR [eax+edi*1],esi
  4017b8:	or     edx,DWORD PTR [ebp+0x35]
  4017bb:	or     DWORD PTR ds:0xf8792eeb,edx
  4017c1:	dec    eax
  4017c2:	rcl    DWORD PTR [esi],0xeb
  4017c5:	pop    ecx
  4017c6:	add    DWORD PTR [ebx-0x3ca008af],0xffffffdf
  4017cd:	jno    0x4017a2
  4017cf:	(bad)  
  4017d0:	dec    ecx
  4017d1:	in     eax,dx
  4017d2:	mov    cl,0x31
  4017d4:	and    ch,BYTE PTR [ecx]
  4017d6:	or     eax,0x3ca7dfac
  4017db:	sub    al,0xc
  4017dd:	xor    DWORD PTR [eax],ebx
  4017df:	out    dx,al
  4017e0:	and    eax,0x4ea12c74
  4017e5:	(bad)  
  4017e6:	aad    0xec
  4017e8:	int    0x2f
  4017ea:	xor    cl,BYTE PTR [esp+edx*8+0x48e9f787]
  4017f1:	ds push 0x94aab4ca
  4017f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017f8:	inc    ecx
  4017f9:	mov    ebp,0xebb143f
  4017fe:	xor    BYTE PTR [ecx-0x746b8721],dh
  401804:	ja     0x4017f5
  401806:	repnz stos BYTE PTR es:[edi],al
  401808:	leave  
  401809:	xor    BYTE PTR [edi-0x27],ah
  40180c:	jecxz  0x401816
  40180e:	mov    ebx,0xb28b556c
  401813:	jns    0x401828
  401815:	stc    
  401816:	adc    ecx,DWORD PTR [esi+0x41]
  401819:	sub    cl,dh
  40181b:	inc    esi
  40181c:	push   ecx
  40181d:	mov    ebx,esp
  40181f:	call   0x570e1909
  401824:	push   es
  401825:	sbb    dl,BYTE PTR [edx+0x34989087]
  40182b:	or     BYTE PTR [ebp+0x518a7d86],bl
  401831:	jmp    0xba88644
  401836:	pop    ds
  401837:	shr    BYTE PTR [esi],0xda
  40183a:	fld    TBYTE PTR [ebx+esi*4-0x69]
  40183e:	aas    
  40183f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401841:	scas   al,BYTE PTR es:[edi]
  401842:	addr16 cwde 
  401844:	xchg   ebp,ecx
  401846:	imul   edi,DWORD PTR [esi+0x6abe812e],0xfffffff5
  40184d:	in     al,dx
  40184e:	shl    al,cl
  401850:	fcomi  st,st(2)
  401852:	call   0x5423:0xf48047bd
  401859:	xor    BYTE PTR [ebp-0x1e],0xc6
  40185d:	mov    esi,0x42630494
  401862:	es xchg edi,eax
  401864:	adc    BYTE PTR [ebx-0x79],0xb9
  401868:	or     eax,0x389be0fb
  40186d:	or     ebp,DWORD PTR [edx-0x5a]
  401870:	aaa    
  401871:	xchg   edi,eax
  401872:	loopne 0x401806
  401874:	stc    
  401875:	aas    
  401876:	adc    DWORD PTR [eax-0x5a547c8a],ebp
  40187c:	push   ecx
  40187d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40187e:	adc    DWORD PTR [esi],0x6d
  401881:	mov    al,0x8a
  401883:	imul   edi,DWORD PTR [edi+0x50200cfc],0x4258c2aa
  40188d:	mov    ?,WORD PTR [esp+ecx*1]
  401890:	push   ebx
  401891:	enter  0xb902,0xd9
  401895:	xchg   esp,eax
  401896:	sti    
  401897:	jp     0x4018c8
  401899:	dec    edi
  40189a:	mov    ebp,0xdf8f060d
  40189f:	iret   
  4018a0:	mov    ah,0x2f
  4018a2:	mov    al,0xd1
  4018a4:	xor    BYTE PTR [ebp-0x520e527],0x89
  4018ab:	and    DWORD PTR [edi+ebx*1],ebx
  4018ae:	or     DWORD PTR [ecx-0x2d21a27b],edx
  4018b4:	xchg   edx,eax
  4018b5:	stc    
  4018b6:	es lahf 
  4018b8:	xchg   esi,eax
  4018b9:	(bad)  
  4018ba:	rol    DWORD PTR [ebx],cl
  4018bc:	call   0xdc6c:0xab6ba018
  4018c3:	lahf   
  4018c4:	adc    ch,BYTE PTR [eax-0x62]
  4018c7:	fdivrp st(3),st
  4018c9:	push   edx
  4018ca:	les    esi,FWORD PTR [edi-0x19]
  4018cd:	cmp    bl,BYTE PTR ds:0x4f921d16
  4018d3:	fist   DWORD PTR [eax]
  4018d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d6:	adc    DWORD PTR [ebp+0x39],0xffffffdc
  4018da:	imul   edi,esp,0xfffffffe
  4018dd:	add    DWORD PTR [esi+0x16],eax
  4018e0:	push   ecx
  4018e1:	outs   dx,BYTE PTR ds:[esi]
  4018e2:	in     al,0x1e
  4018e4:	adc    BYTE PTR [ecx-0x3aafd45b],dl
  4018ea:	inc    esp
  4018eb:	inc    edx
  4018ec:	pop    edx
  4018ed:	xchg   edi,eax
  4018ee:	cmp    eax,0x4adc4f56
  4018f3:	and    al,0x66
  4018f5:	clc    
  4018f6:	rcl    BYTE PTR [edx-0x53],0x93
  4018fa:	adc    al,0xb3
  4018fc:	fsubr  QWORD PTR [eax-0x1a]
  4018ff:	bound  eax,QWORD PTR [ebx+0x2b]
  401902:	(bad)  
  401903:	mov    bh,0xa6
  401905:	(bad)  
  401906:	js     0x4018ae
  401908:	mov    ebp,0xc9f50deb
  40190d:	xor    eax,0x61cbe687
  401912:	mov    ds:0x74707d83,al
  401917:	sbb    edx,eax
  401919:	push   ss
  40191a:	xor    dh,bh
  40191c:	div    DWORD PTR [eax+edx*1+0x19]
  401920:	lods   al,BYTE PTR ds:[esi]
  401921:	test   DWORD PTR [esi+0x64],esp
  401924:	sub    cl,al
  401926:	or     ebp,DWORD PTR [ebp+0xd]
  401929:	push   cs
  40192a:	mul    DWORD PTR [edi+0x7039c413]
  401930:	pop    ebx
  401931:	cmp    eax,0x6202ded2
  401936:	fldcw  WORD PTR [eax]
  401938:	ins    BYTE PTR es:[edi],dx
  401939:	xor    DWORD PTR [esi+0x4c],ebp
  40193c:	and    al,0xd5
  40193e:	dec    edi
  40193f:	jle    0x4018c1
  401941:	rcl    DWORD PTR [ecx],0xe
  401944:	or     DWORD PTR [ebp-0xabc3ada],0x28
  40194b:	cmp    DWORD PTR [ebx+0x32734f7e],ecx
  401951:	dec    edx
  401952:	int3   
  401953:	fiadd  WORD PTR [edx]
  401955:	xor    al,0xb1
  401957:	sub    edi,DWORD PTR [edi-0x4c490171]
  40195d:	jbe    0x4019a2
  40195f:	push   cs
  401960:	das    
  401961:	aad    0xc5
  401963:	mov    bl,0xa3
  401965:	ds pop ecx
  401967:	loopne 0x401974
  401969:	(bad)  
  40196a:	cmp    eax,0x55d3dab9
  40196f:	stc    
  401970:	shr    BYTE PTR [esi+ebp*1+0x3],1
  401974:	test   al,0x89
  401976:	push   esp
  401977:	ss xchg esi,eax
  401979:	pop    esi
  40197a:	ror    DWORD PTR [edx+0x42997e4c],0xcf
  401981:	mov    esp,0x16e01d66
  401986:	pop    eax
  401987:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401989:	js     0x401962
  40198b:	mov    eax,DWORD PTR [ebx-0x3de91134]
  401991:	jmp    0x6d1b:0x5a4a6a0f
  401998:	bound  ecx,QWORD PTR [eax+ebx*8]
  40199b:	pop    edx
  40199c:	icebp  
  40199d:	shl    BYTE PTR [edx+0x30d9dbbc],1
  4019a3:	inc    ebx
  4019a4:	aaa    
  4019a5:	fadd   DWORD PTR [ecx-0xecb7d96]
  4019ab:	pop    esp
  4019ac:	bnd call 0x5283c2fc
  4019b2:	scas   eax,DWORD PTR es:[edi]
  4019b3:	fwait
  4019b4:	repz mov bh,0x15
  4019b7:	xchg   ebx,eax
  4019b8:	fidivr DWORD PTR ds:0xe3886c0c
  4019be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019bf:	pop    ebp
  4019c0:	jo     0x401a01
  4019c2:	cld    
  4019c3:	push   esi
  4019c4:	or     ecx,eax
  4019c6:	adc    DWORD PTR [esi],esp
  4019c8:	and    edi,DWORD PTR [ebx]
  4019ca:	add    ah,BYTE PTR [edi-0x7432873e]
  4019d0:	mov    esp,0x4a623c
  4019d5:	or     DWORD PTR [edx+0x30303038],eax
  4019db:	jg     0x401979
  4019dd:	jbe    0x401a1c
  4019df:	out    dx,al
  4019e0:	out    dx,eax
  4019e1:	retf   
  4019e2:	call   FWORD PTR [ebp+eax*2+0x5c540dd7]
  4019e9:	mov    ds:0xb8eff1e,al
  4019ee:	adc    BYTE PTR [edi-0x5d],dh
  4019f1:	mov    al,0xd1
  4019f3:	ss mov ebp,0xf6d4c15c
  4019f9:	mov    edx,DWORD PTR [edx-0x52]
  4019fc:	and    BYTE PTR [edi],bh
  4019fe:	add    bh,ah
  401a00:	cwde   
  401a01:	or     al,0x40
  401a03:	inc    eax
  401a04:	inc    esp
  401a05:	faddp  st(7),st
  401a07:	arpl   WORD PTR [eax-0x5af316d0],sp
  401a0d:	lock or ah,ch
  401a10:	fwait
  401a11:	outs   dx,BYTE PTR ds:[esi]
  401a12:	sti    
  401a13:	dec    eax
  401a14:	les    ebx,FWORD PTR [ebx+0x43890dc0]
  401a1a:	or     DWORD PTR [ebx-0x63],esp
  401a1d:	mov    BYTE PTR [eax],ah
  401a1f:	ja     0x4019f3
  401a21:	into   
  401a22:	adc    al,0x71
  401a24:	inc    edi
  401a25:	pop    ss
  401a26:	inc    edx
  401a27:	fstp   DWORD PTR [esi+0x440edd7]
  401a2d:	mov    ebp,0xae1c4684
  401a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a33:	mov    bh,0xb2
  401a35:	pop    eax
  401a36:	pop    edi
  401a37:	sbb    esi,DWORD PTR [edi]
  401a39:	inc    esp
  401a3a:	push   cs
  401a3b:	jae    0x4019e0
  401a3d:	sbb    BYTE PTR [ecx+0x15],cl
  401a40:	adc    al,0xd5
  401a42:	enter  0xfb66,0x14
  401a46:	push   ebp
  401a47:	and    DWORD PTR [edx],ecx
  401a49:	ret    
  401a4a:	pop    edi
  401a4b:	aas    
  401a4c:	xchg   edi,eax
  401a4d:	out    0xb,al
  401a4f:	stc    
  401a50:	pop    es
  401a51:	mov    ah,0x68
  401a53:	or     eax,0xcfb6a843
  401a58:	sbb    DWORD PTR [edx+0x511e7d0e],esi
  401a5e:	pop    eax
  401a5f:	imul   ebx,esp,0x500c4d99
  401a65:	dec    edx
  401a66:	xchg   ecx,eax
  401a67:	pop    es
  401a68:	mov    dl,0xff
  401a6a:	adc    DWORD PTR [edx],ecx
  401a6c:	ret    0x9430
  401a6f:	aad    0xcf
  401a71:	call   0xefa6dcc
  401a76:	ss leave 
  401a78:	add    eax,0xbd898874
  401a7d:	sbb    eax,0xe0d5d0d1
  401a82:	xchg   edx,eax
  401a83:	mov    bl,0x54
  401a85:	in     eax,0xdc
  401a87:	cmp    eax,DWORD PTR [edx]
  401a89:	fsub   QWORD PTR [ebx]
  401a8b:	mov    eax,0xdad56a2e
  401a90:	icebp  
  401a91:	clc    
  401a92:	ins    DWORD PTR es:[edi],dx
  401a93:	pop    ecx
  401a94:	in     al,dx
  401a95:	out    dx,eax
  401a96:	(bad)  
  401a98:	mov    dh,0x74
  401a9a:	imul   edi,DWORD PTR [eax],0xffffffa7
  401a9d:	test   DWORD PTR [ebp-0x2e],esp
  401aa0:	dec    esi
  401aa1:	not    DWORD PTR [ecx]
  401aa3:	or     al,0x1
  401aa5:	(bad)  
  401aa6:	rep ins BYTE PTR es:[edi],dx
  401aa8:	lods   eax,DWORD PTR ds:[esi]
  401aa9:	adc    al,0x26
  401aab:	daa    
  401aac:	and    al,0xdd
  401aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aaf:	xchg   BYTE PTR [edi-0x6],cl
  401ab2:	test   BYTE PTR [ebx+0x38],dh
  401ab5:	mov    edi,0xc038d3d1
  401aba:	cmp    dh,BYTE PTR [ebx+0x6189da59]
  401ac0:	repz xchg esi,eax
  401ac2:	ficomp WORD PTR [esi]
  401ac4:	push   esp
  401ac5:	call   0x810eadb3
  401aca:	adc    DWORD PTR [ebx+0x3f],edi
  401acd:	imul   ebx,DWORD PTR [eax],0xffffffc2
  401ad0:	xchg   DWORD PTR [edx+0x68],edx
  401ad3:	in     al,0xba
  401ad5:	push   ecx
  401ad6:	cmovns ebx,esp
  401ad9:	stos   BYTE PTR es:[edi],al
  401ada:	out    0x2,al
  401adc:	add    eax,0x87714b05
  401ae1:	shl    DWORD PTR [esi-0x58],0xbf
  401ae5:	sbb    ah,al
  401ae7:	sub    BYTE PTR [esi],0xb8
  401aea:	xor    ebp,DWORD PTR [esi]
  401aec:	inc    esp
  401aed:	sbb    ebx,DWORD PTR [eax+0x35]
  401af0:	sub    ah,bl
  401af2:	xlat   BYTE PTR ds:[ebx]
  401af3:	sahf   
  401af4:	and    BYTE PTR [ebp+0xeea1879],bl
  401afa:	icebp  
  401afb:	jecxz  0x401a80
  401afd:	mov    eax,ds:0xc5aff1a
  401b02:	je     0x401ab1
  401b04:	xor    esi,DWORD PTR [ecx+0x20c7558c]
  401b0a:	mov    al,ds:0x739f2c16
  401b0f:	hlt    
  401b10:	sbb    bh,BYTE PTR [ecx]
  401b12:	jae    0x401ac3
  401b14:	cld    
  401b15:	aas    
  401b16:	sub    al,0x10
  401b18:	(bad)  
  401b19:	mov    ch,BYTE PTR [esi]
  401b1b:	push   0x34f681eb
  401b20:	shl    DWORD PTR [eax],cl
  401b22:	nop
  401b23:	aad    0x35
  401b25:	pop    edx
  401b26:	add    dl,0xb4
  401b29:	sbb    BYTE PTR [ecx],cl
  401b2b:	xor    al,0x34
  401b2d:	ss (bad) 
  401b31:	rcl    DWORD PTR [ecx-0x5c5c3fa1],1
  401b37:	adc    DWORD PTR [ebx],esp
  401b39:	mov    ecx,0x3f5db29
  401b3e:	inc    ebx
  401b3f:	xchg   ebx,eax
  401b40:	rcl    eax,cl
  401b42:	shl    DWORD PTR [edx+ebp*1+0xf025482],cl
  401b49:	dec    ebp
  401b4a:	out    0x12,al
  401b4c:	mov    edi,0x69c1c6f3
  401b51:	xchg   eax,ecx
  401b53:	pop    esi
  401b54:	xchg   esi,eax
  401b55:	shl    DWORD PTR [esi+ecx*8+0x74c8628c],cl
  401b5c:	add    DWORD PTR [eax],ecx
  401b5e:	repz mov al,ds:0x753b0691
  401b64:	xor    DWORD PTR [edi+0x6d],0xced14fc1
  401b6b:	rol    cl,1
  401b6d:	addr16 push 0x5bf35058
  401b73:	jmp    esi
  401b75:	stos   BYTE PTR es:[edi],al
  401b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b77:	arpl   WORD PTR ds:0x4b4afc74,sp
  401b7d:	push   ebp
  401b7e:	jno    0x401bc4
  401b80:	xor    ebx,esp
  401b82:	loope  0x401bd4
  401b84:	mov    eax,0xd6c47b34
  401b89:	sbb    eax,0x2e433165
  401b8e:	ret    0xa63c
  401b91:	adc    bl,BYTE PTR ds:0x99792e2e
  401b97:	sub    BYTE PTR [edx+0x7067505e],bl
  401b9d:	inc    edi
  401b9e:	ror    ch,1
  401ba0:	fidivr WORD PTR [eax]
  401ba2:	ret    0x31be
  401ba5:	data16 lahf 
  401ba7:	popa   
  401ba8:	xchg   esp,eax
  401ba9:	lods   eax,DWORD PTR ds:[esi]
  401bab:	clc    
  401bac:	pop    esi
  401bad:	pop    ebx
  401bae:	adc    bl,BYTE PTR [esi+0x1239db92]
  401bb4:	sub    BYTE PTR [ebx+edi*8],ch
  401bb7:	mov    ebx,0x2c2324d6
  401bbc:	cmp    ah,BYTE PTR [edi]
  401bbe:	inc    ecx
  401bbf:	outs   dx,DWORD PTR ds:[esi]
  401bc0:	rcr    BYTE PTR [eax+ecx*1-0x4e],1
  401bc4:	xor    eax,0x21ff19d4
  401bc9:	mov    ?,WORD PTR [ecx-0x5d]
  401bcc:	push   ds
  401bcd:	cmp    al,0x9a
  401bcf:	(bad)  
  401bd0:	fdivr  DWORD PTR [esi-0x2c]
  401bd3:	adc    ch,BYTE PTR [ebx]
  401bd5:	imul   BYTE PTR [edx-0x63]
  401bd8:	and    edx,eax
  401bda:	xor    al,0xe3
  401bdc:	push   edx
  401bdd:	or     al,0xff
  401bdf:	into   
  401be0:	and    ecx,edx
  401be2:	push   ds
  401be3:	push   edx
  401be4:	or     edx,DWORD PTR [ecx-0x43081d3b]
  401bea:	push   ss
  401beb:	xchg   ah,cl
  401bed:	adc    bh,BYTE PTR ds:0xf953a57a
  401bf3:	in     al,0x78
  401bf5:	outs   dx,DWORD PTR ds:[esi]
  401bf6:	mov    cl,0xe1
  401bf8:	gs mov bl,0xc2
  401bfb:	js     0x401c0a
  401bfd:	rcr    DWORD PTR es:[ebx+0x72],0xba
  401c02:	mov    esi,0xfbe91cbe
  401c07:	push   0x6
  401c09:	jl     0x401c65
  401c0b:	inc    esp
  401c0c:	cmp    al,0x33
  401c0e:	sahf   
  401c0f:	sbb    edx,edx
  401c11:	mov    ebx,0x2a79e067
  401c16:	jbe    0x401c7d
  401c18:	jae    0x401c22
  401c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c1b:	dec    esi
  401c1c:	pop    eax
  401c1d:	xor    BYTE PTR [esi],0xe8
  401c20:	pop    ds
  401c21:	mov    BYTE PTR [esi+0x5],dl
  401c24:	mov    eax,0x96377a73
  401c29:	lods   eax,DWORD PTR ds:[esi]
  401c2a:	pop    eax
  401c2b:	lds    edi,FWORD PTR [ebx-0x41]
  401c2e:	(bad)  
  401c2f:	mov    DWORD PTR [eax],esp
  401c31:	inc    esp
  401c32:	retf   0xd7ff
  401c35:	inc    esi
  401c36:	shr    edi,cl
  401c38:	aad    0x36
  401c3a:	dec    ecx
  401c3b:	test   DWORD PTR [edx+edi*8],ebp
  401c3e:	push   DWORD PTR [edx-0x53ca5fb5]
  401c44:	sbb    BYTE PTR [edi+0x17],bh
  401c47:	jbe    0x401cb2
  401c49:	push   es
  401c4a:	stc    
  401c4b:	(bad)  
  401c4c:	icebp  
  401c4d:	or     eax,0xb3ce652f
  401c52:	stc    
  401c53:	jmp    0x4bd13ea9
  401c58:	pop    ds
  401c59:	loop   0x401cd0
  401c5b:	xchg   BYTE PTR [edi+0x13],ah
  401c5e:	pop    edx
  401c5f:	sbb    al,0x7f
  401c61:	push   cs
  401c62:	sub    DWORD PTR [edi+edx*2-0xf],0xffffffff
  401c67:	jp     0x401c11
  401c69:	retf   
  401c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c6b:	ror    DWORD PTR [ebp+eiz*1+0x3e],cl
  401c6f:	jecxz  0x401ca8
  401c71:	icebp  
  401c72:	ret    
  401c73:	pop    ebx
  401c74:	pop    edi
  401c75:	push   eax
  401c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c77:	pop    esi
  401c78:	popf   
  401c79:	inc    ecx
  401c7a:	enter  0x61bc,0x7d
  401c7e:	mov    ch,0xec
  401c80:	push   edi
  401c81:	cld    
  401c82:	adc    bh,bl
  401c84:	mov    dh,0x3f
  401c86:	or     eax,0x482c179e
  401c8b:	sub    al,0x57
  401c8d:	xchg   al,al
  401c8f:	sbb    eax,0xa8431f93
  401c94:	fld    QWORD PTR [esi-0xe]
  401c97:	mov    dh,0x47
  401c99:	jbe    0x401c86
  401c9b:	mul    BYTE PTR cs:[ebp-0x71]
  401c9f:	and    BYTE PTR es:[ebp-0x6f],al
  401ca3:	sub    edi,edi
  401ca5:	stos   BYTE PTR es:[edi],al
  401ca6:	mov    ebx,0x15d7441d
  401cab:	popf   
  401cac:	std    
  401cad:	ror    BYTE PTR [eax*4-0x14c7f965],1
  401cb4:	mov    eax,0x1dfa6a48
  401cb9:	sahf   
  401cba:	or     esp,ebp
  401cbc:	cmp    BYTE PTR ds:0xfba31e23,cl
  401cc2:	adc    edx,esi
  401cc4:	adc    bh,BYTE PTR [esi]
  401cc6:	inc    ebx
  401cc7:	jmp    0xc94095b7
  401ccc:	aaa    
  401ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cce:	mov    ah,0x55
  401cd0:	lods   al,BYTE PTR ds:[esi]
  401cd1:	and    al,0xdb
  401cd3:	xor    eax,0xd6069d4f
  401cd8:	sbb    eax,DWORD PTR [edx+edi*4+0x67]
  401cdc:	in     eax,dx
  401cdd:	out    0x16,al
  401cdf:	jbe    0x401c77
  401ce1:	inc    esp
  401ce2:	lods   al,BYTE PTR ds:[esi]
  401ce3:	push   es
  401ce4:	cmp    bl,BYTE PTR [esi-0x5f]
  401ce7:	xchg   esi,eax
  401ce8:	or     al,0xd0
  401cea:	cli    
  401ceb:	dec    edi
  401cec:	mov    cl,0x27
  401cee:	sti    
  401cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cf0:	clc    
  401cf1:	les    ebx,FWORD PTR [ebx-0x6d]
  401cf4:	xor    al,0x52
  401cf6:	jmp    0x401cd3
  401cf8:	or     eax,0xdbfefd98
  401cfd:	retf   0xe8f2
  401d00:	jmp    0xb6b2:0xdd007140
  401d07:	(bad)  [eax]
  401d09:	xor    al,0x14
  401d0b:	jnp    0x401d13
  401d0d:	or     eax,0x45077e78
  401d12:	pop    esp
  401d13:	in     al,0x8e
  401d15:	jmp    0xeb8192f0
  401d1a:	xor    DWORD PTR [edx],ebx
  401d1c:	sbb    eax,DWORD PTR [ebx+ebx*2-0x61]
  401d20:	aaa    
  401d21:	bound  ebp,QWORD PTR [esi]
  401d23:	fnstcw WORD PTR ds:0xaa5e62b4
  401d29:	sub    DWORD PTR [edx],ebx
  401d2b:	scas   al,BYTE PTR es:[edi]
  401d2c:	push   eax
  401d2d:	in     al,dx
  401d2e:	shl    DWORD PTR [ebx+0x27691f7a],cl
  401d34:	int    0xf3
  401d36:	mov    ebp,0xfeb29c56
  401d3b:	lds    ebx,FWORD PTR [edi+0x406f2962]
  401d41:	add    bl,bl
  401d43:	mov    edx,0xb5a60e77
  401d48:	and    eax,0x3ae228b5
  401d4d:	and    cl,al
  401d4f:	cmp    BYTE PTR [edx],bh
  401d51:	(bad)  
  401d52:	jecxz  0x401cdb
  401d54:	xchg   ecx,eax
  401d55:	imul   esp,ebp,0xc5625c81
  401d5b:	ds fucomp st(1)
  401d5e:	aam    0x9
  401d60:	ret    0xed9f
  401d63:	loop   0x401d06
  401d65:	test   dl,al
  401d67:	and    DWORD PTR [edi],edx
  401d69:	int    0x82
  401d6b:	out    0x1,al
  401d6d:	cmc    
  401d6e:	push   ebx
  401d6f:	lds    edx,FWORD PTR [eax]
  401d71:	or     esi,DWORD PTR [eax-0x60]
  401d74:	mov    eax,ds:0x4343634b
  401d79:	mov    ds:0xec9832c7,eax
  401d7e:	sub    cl,BYTE PTR [ebx]
  401d80:	jmp    0x401d55
  401d82:	popa   
  401d83:	add    al,0x24
  401d85:	cmp    eax,0x5b1cf96d
  401d8a:	xchg   ecx,eax
  401d8b:	sub    eax,0x3652107a
  401d90:	ins    DWORD PTR es:[edi],dx
  401d91:	sub    eax,0x799ea5f4
  401d96:	sub    BYTE PTR [edi],ch
  401d98:	mov    DWORD PTR [esi],eax
  401d9a:	lods   al,BYTE PTR ds:[esi]
  401d9b:	aas    
  401d9c:	sbb    bh,BYTE PTR [edx+edx*8+0x3d85b79d]
  401da3:	push   es
  401da4:	aad    0xf7
  401da6:	js     0x401e1d
  401da8:	daa    
  401da9:	imul   ebp,ecx,0x730acd27
  401daf:	jno    0x401d3e
  401db1:	or     BYTE PTR [ecx-0x25],0xe8
  401db5:	mov    ds:0xf89f0cbb,al
  401dba:	mov    esi,0x16ec744d
  401dbf:	(bad)  [ecx]
  401dc1:	mov    WORD PTR [ebx],?
  401dc3:	or     al,0xb7
  401dc5:	call   0x4758:0x3bd566ac
  401dcc:	ror    esi,cl
  401dce:	mov    dh,0x4f
  401dd0:	and    DWORD PTR [ebp+ecx*8+0x6b],edx
  401dd4:	jnp    0x401de1
  401dd6:	and    DWORD PTR [ecx+0x26],0xd727d2bf
  401ddd:	jae    0x401dff
  401ddf:	test   BYTE PTR [ebx-0x164a2d8b],al
  401de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de6:	popa   
  401de7:	call   0x70b:0x64a95147
  401dee:	sub    al,BYTE PTR ds:[esi+0x7575b3f7]
  401df5:	and    ah,ah
  401df7:	mov    ds:0xff0bab29,eax
  401dfc:	adc    dl,BYTE PTR [esi]
  401dfe:	jg     0x401dfc
  401e00:	scas   al,BYTE PTR es:[edi]
  401e01:	sub    DWORD PTR [edx-0x39],esp
  401e04:	pop    ebx
  401e05:	mov    edi,0xd22496f8
  401e0a:	pusha  
  401e0b:	popa   
  401e0c:	adc    ebp,ecx
  401e0e:	inc    esi
  401e0f:	push   ebx
  401e10:	inc    eax
  401e11:	dec    ebp
  401e12:	ret    0xdef9
  401e15:	scas   al,BYTE PTR es:[edi]
  401e16:	out    0x36,eax
  401e18:	int3   
  401e19:	xchg   edi,eax
  401e1a:	fwait
  401e1b:	shr    DWORD PTR [esi+0x4d31c164],1
  401e21:	and    eax,0x2e22915c
  401e26:	push   edi
  401e27:	sub    ecx,DWORD PTR [edx]
  401e29:	pop    edi
  401e2a:	mov    dh,0x77
  401e2c:	xor    eax,0x1dd5e70a
  401e31:	popa   
  401e32:	test   eax,0x46f2ba62
  401e37:	out    dx,al
  401e38:	cmp    DWORD PTR [ebx-0x63],edi
  401e3b:	and    al,0x8c
  401e3d:	pop    esi
  401e3e:	mov    esp,0xb00df699
  401e43:	aad    0x1b
  401e45:	adc    DWORD PTR [ebx+eax*4+0x11],esp
  401e49:	pop    eax
  401e4a:	mov    edi,0x593e5b84
  401e4f:	inc    esi
  401e50:	rcr    DWORD PTR [ebx+0x74],cl
  401e53:	test   al,0x7a
  401e55:	icebp  
  401e56:	mov    cs,WORD PTR [ecx]
  401e58:	test   DWORD PTR [eax-0x36],ebp
  401e5b:	in     al,dx
  401e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e5d:	pop    es
  401e5e:	out    dx,al
  401e5f:	mov    ax,ds:0xa1f76a6b
  401e65:	sbb    DWORD PTR ds:0xd76d0552,edi
  401e6b:	jno    0x401e45
  401e6d:	enter  0x74ee,0xe3
  401e71:	enter  0x1731,0x6d
  401e75:	js     0x401e58
  401e77:	sbb    BYTE PTR [ebp-0x64f38bfc],bh
  401e7d:	mov    ebp,0x56c3cd3a
  401e82:	popf   
  401e83:	into   
  401e84:	sahf   
  401e85:	aaa    
  401e86:	pop    edi
  401e87:	into   
  401e88:	push   0xa8caa454
  401e8d:	out    dx,eax
  401e8e:	pop    eax
  401e8f:	pop    esi
  401e90:	jbe    0x401ef7
  401e92:	les    eax,FWORD PTR [edx+0x57d8cb12]
  401e98:	nop
  401e99:	jge    0x401edd
  401e9b:	scas   eax,DWORD PTR es:[edi]
  401e9c:	dec    DWORD PTR [ebx-0x2c]
  401e9f:	cmp    al,0xd7
  401ea1:	adc    al,0x62
  401ea3:	stc    
  401ea4:	fnstcw WORD PTR [edi-0x57db625a]
  401eaa:	cli    
  401eab:	add    al,0x16
  401ead:	out    0x55,eax
  401eaf:	jnp    0x401eb2
  401eb1:	jecxz  0x401e5d
  401eb3:	pop    ss
  401eb4:	cmp    eax,DWORD PTR [edi]
  401eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb7:	mov    ebp,0x615a4cbe
  401ebc:	fstp   QWORD PTR [edx]
  401ebe:	(bad)  
  401ec0:	sti    
  401ec1:	add    ebp,0x4f50adfb
  401ec7:	(bad)  
  401ec8:	iret   
  401ec9:	adc    BYTE PTR [ebp+0x24],bh
  401ecc:	xchg   DWORD PTR [ecx],esp
  401ece:	stc    
  401ecf:	add    DWORD PTR [ebx+ecx*8+0x7f00fb30],0xffffff83
  401ed7:	mov    dh,0x21
  401ed9:	jge    0x401e8d
  401edb:	sbb    dh,cl
  401edd:	mov    cl,0x88
  401edf:	mov    edx,0xaa3f6788
  401ee4:	imul   ecx,DWORD PTR [edi],0xd2f57d86
  401eea:	mov    ds:0x382312c0,eax
  401eef:	mov    ch,0x85
  401ef1:	mov    ds:0xa904d772,al
  401ef6:	or     ebp,DWORD PTR [edx+0x11]
  401ef9:	xchg   BYTE PTR [edx+0x68fe7a0e],cl
  401eff:	pop    esp
  401f00:	rcr    esi,0xdc
  401f03:	push   edx
  401f04:	retf   
  401f05:	inc    eax
  401f06:	retf   0x8f84
  401f09:	in     eax,dx
  401f0a:	outs   dx,BYTE PTR ds:[esi]
  401f0b:	bound  ebp,QWORD PTR [ebp-0x8]
  401f0e:	xor    bh,ch
  401f10:	mov    dl,0x78
  401f12:	xor    ecx,DWORD PTR [eax]
  401f14:	mov    eax,ds:0xdbc2c2f4
  401f19:	cwde   
  401f1a:	shl    edi,1
  401f1c:	fucomip st,st(4)
  401f1e:	call   0x7a1070b8
  401f23:	mov    edx,0xc2583848
  401f28:	sar    DWORD PTR [eax+0x40ffb4d4],0x8c
  401f2f:	xchg   esp,eax
  401f30:	xchg   ecx,eax
  401f31:	mov    ebx,esp
  401f33:	cmc    
  401f34:	add    edi,ebx
  401f36:	repz dec DWORD PTR [edx]
  401f39:	or     al,0x73
  401f3b:	push   esi
  401f3c:	jno    0x401f86
  401f3e:	call   0xb658:0x4069062c
  401f45:	jb     0x401f47
  401f47:	push   eax
  401f48:	std    
  401f49:	icebp  
  401f4a:	jae    0x401f09
  401f4c:	leave  
  401f4d:	ret    
  401f4e:	mov    ecx,0x938bde8a
  401f53:	loope  0x401f99
  401f55:	inc    ebp
  401f56:	jp     0x401f2b
  401f58:	mov    bl,0x1
  401f5a:	je     0x401f9c
  401f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f5d:	hlt    
  401f5e:	inc    ebp
  401f5f:	push   ebp
  401f60:	mov    eax,0x53693229
  401f65:	mov    al,0x7a
  401f67:	adc    DWORD PTR [esi],eax
  401f69:	fldenv [eax+esi*4]
  401f6c:	and    eax,DWORD PTR ds:0x5e94971c
  401f72:	inc    DWORD PTR ds:0x2566a3a
  401f78:	loopne 0x401f5a
  401f7a:	push   cs
  401f7b:	cmp    eax,0xedf974e3
  401f80:	pusha  
  401f81:	xchg   ecx,eax
  401f82:	xor    al,0x79
  401f84:	fld    DWORD PTR [ecx]
  401f86:	int    0xb2
  401f88:	fstp   st(4)
  401f8a:	mov    WORD PTR [ebx-0x5c351eec],?
  401f90:	add    esi,DWORD PTR [ebx]
  401f92:	cmp    al,0xb5
  401f94:	or     BYTE PTR [ebx+0x4aaadc8d],bh
  401f9a:	aam    0xfb
  401f9c:	and    al,0xae
  401f9e:	jmp    0xdc0ff23b
  401fa3:	popf   
  401fa4:	sub    ebx,DWORD PTR [esi]
  401fa6:	popf   
  401fa7:	mov    dh,0x2d
  401fa9:	test   al,0x83
  401fab:	fs add eax,0x843cd5c9
  401fb1:	dec    eax
  401fb2:	inc    esi
  401fb3:	ret    
  401fb4:	push   esi
  401fb5:	cmp    al,0xce
  401fb7:	cmp    BYTE PTR [esi+0xe],bl
  401fba:	adc    edi,DWORD PTR [eax]
  401fbc:	add    al,0x1b
  401fbe:	inc    ebx
  401fbf:	add    BYTE PTR [edi+0x151b0709],0xec
  401fc6:	xchg   edi,eax
  401fc7:	(bad)  
  401fc8:	pusha  
  401fc9:	dec    eax
  401fca:	jecxz  0x40203e
  401fcc:	stc    
  401fcd:	push   0xffffff84
  401fcf:	fstp   TBYTE PTR [edx]
  401fd1:	call   0x3b9:0xbbc4c056
  401fd8:	mov    edi,0xb95f331b
  401fdd:	mov    DWORD PTR [edx+ebp*1-0x3a],ecx
  401fe1:	mov    dl,0x8e
  401fe3:	scas   al,BYTE PTR es:[edi]
  401fe4:	and    DWORD PTR [edx],eax
  401fe6:	fdivr  st,st(3)
  401fe9:	pop    ss
  401fea:	sub    al,0xa8
  401fec:	jmp    0x9c52dcd4
  401ff1:	fimul  WORD PTR [edi]
  401ff3:	hlt    
  401ff4:	dec    esi
  401ff5:	mov    eax,0x97cf6efe
  401ffa:	iret   
  401ffb:	xchg   esi,eax
  401ffc:	pop    edi
  401ffd:	icebp  
  401ffe:	mov    esp,0x98dec40b
  402003:	or     ch,BYTE PTR [ebx+0x1d1f37af]
  402009:	or     DWORD PTR ds:0x89dd4eb1,ebp
  40200f:	mov    cs:0xb9dbbc22,eax
  402015:	adc    eax,DWORD PTR [esi+0x1]
  402018:	es cdq 
  40201a:	dec    eax
  40201b:	push   edx
  40201c:	inc    edi
  40201d:	bound  edx,QWORD PTR [ecx]
  40201f:	xchg   esi,esp
  402021:	adc    eax,0x5cd82cd7
  402026:	adc    ah,bl
  402028:	xchg   DWORD PTR [ebx+0x6e],edx
  40202b:	gs mov edi,0x4aa83f25
  402031:	stc    
  402032:	sub    ch,dl
  402034:	xchg   ebx,eax
  402035:	loop   0x401fba
  402037:	cli    
  402038:	pusha  
  402039:	xchg   ebp,eax
  40203a:	jno    0x4020b6
  40203c:	inc    edi
  40203d:	adc    al,bl
  40203f:	aaa    
  402040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402041:	mov    ch,0x19
  402043:	xchg   esi,eax
  402044:	and    al,0xc2
  402046:	pusha  
  402047:	fcmovb st,st(5)
  402049:	dec    ebx
  40204a:	lea    ecx,[edx+0x4fe390b4]
  402050:	(bad)  
  402051:	push   ebp
  402052:	cld    
  402053:	sbb    DWORD PTR [ebp+0x2abcc7c9],esi
  402059:	push   eax
  40205a:	mov    eax,0x2cc16b18
  40205f:	mov    ecx,0xafdf370f
  402064:	fild   DWORD PTR [edi+0x1]
  402067:	inc    edi
  402068:	jmp    0x18f:0xdbf675a1
  40206f:	cmp    BYTE PTR [ebp+eiz*1-0x696ec103],bh
  402076:	fstp   QWORD PTR [ebx]
  402078:	jo     0x402079
  40207a:	in     al,0x3b
  40207c:	into   
  40207d:	out    0x9f,al
  40207f:	dec    eax
  402080:	ret    0x1904
  402083:	rcl    DWORD PTR [eax],cl
  402085:	fcom   DWORD PTR [ebx]
  402087:	sub    dl,bh
  402089:	lds    ecx,FWORD PTR [eax-0x38]
  40208c:	xchg   ebx,eax
  40208d:	jmp    0x2785a19d
  402092:	pop    ds
  402093:	mov    bl,0xce
  402095:	adc    ah,BYTE PTR [esp+eiz*8]
  402098:	cwde   
  402099:	mov    esi,0x7698b617
  40209e:	clc    
  40209f:	pop    edx
  4020a0:	outs   dx,DWORD PTR ds:[esi]
  4020a1:	icebp  
  4020a2:	loop   0x4020d4
  4020a4:	int    0xd2
  4020a6:	mov    fs,WORD PTR [ebp-0x76]
  4020a9:	pop    ebx
  4020aa:	xlat   BYTE PTR ds:[ebx]
  4020ab:	sbb    ebp,ebx
  4020ad:	pushf  
  4020ae:	xor    edi,DWORD PTR [ecx+eax*2]
  4020b1:	gs dec ebp
  4020b3:	cmp    al,0x22
  4020b5:	and    al,0x95
  4020b7:	cwde   
  4020b8:	push   edx
  4020b9:	(bad)  
  4020ba:	test   al,0xb7
  4020bc:	pop    esi
  4020bd:	xor    ch,BYTE PTR [ebx]
  4020bf:	je     0x40209a
  4020c1:	add    DWORD PTR [esi-0x45],eax
  4020c4:	sahf   
  4020c5:	(bad)  
  4020c6:	jp     0x402087
  4020c8:	arpl   WORD PTR ss:[esi-0x5ad817ce],ax
  4020cf:	push   cs
  4020d0:	sub    ebp,eax
  4020d2:	(bad)  [esi]
  4020d4:	imul   eax,DWORD PTR ds:0x9d780de5,0x3f
  4020db:	mov    edx,0xfdbaceed
  4020e0:	dec    esp
  4020e1:	xchg   DWORD PTR [edx],edx
  4020e3:	dec    eax
  4020e4:	repnz in eax,0xd1
  4020e7:	daa    
  4020e8:	fist   DWORD PTR [edi-0x51d94a68]
  4020ee:	mov    eax,0xc7a0759b
  4020f3:	inc    eax
  4020f4:	adc    eax,0x44edcbd9
  4020f9:	mov    WORD PTR [ecx-0x109c1df1],?
  4020ff:	dec    BYTE PTR [ebx+0x7b08adf7]
  402105:	je     0x402169
  402107:	jno    0x4020b3
  402109:	in     al,0x32
  40210b:	loopne 0x4020e2
  40210d:	and    BYTE PTR [ebp-0xe79bbf5],0xab
  402114:	js     0x40218b
  402116:	jmp    0x402101
  402118:	in     eax,0xe8
  40211a:	out    dx,al
  40211b:	mov    bh,0x7c
  40211d:	call   FWORD PTR [esi]
  40211f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402120:	mov    edx,?
  402122:	rol    BYTE PTR [ecx-0x40dd5143],cl
  402128:	jmp    0x8510b8d8
  40212d:	loope  0x402148
  40212f:	and    BYTE PTR [ebp+ebx*4-0x80],bh
  402133:	or     al,0x41
  402135:	lods   al,BYTE PTR ds:[esi]
  402136:	rcr    DWORD PTR [esi+eiz*4],1
  402139:	out    0x21,eax
  40213b:	ss cmp al,0xb8
  40213e:	test   DWORD PTR [ebx+esi*4+0x2c7ad602],esp
  402145:	push   0x7c
  402147:	xchg   esp,eax
  402148:	sub    eax,0xf3d6cae
  40214d:	retf   0xf09f
  402150:	cli    
  402151:	stos   BYTE PTR es:[edi],al
  402152:	cli    
  402153:	mov    eax,ds:0x8af70e02
  402158:	rol    ebx,0xe3
  40215b:	xchg   ecx,eax
  40215c:	push   ss
  40215d:	push   ebx
  40215e:	and    cl,BYTE PTR [ebp+edx*2+0x701fa4d0]
  402165:	xchg   ebp,eax
  402166:	sbb    esp,DWORD PTR [esi+ecx*1]
  402169:	pusha  
  40216a:	das    
  40216b:	mov    edi,0x5147a828
  402170:	jl     0x40219c
  402172:	xchg   ebx,eax
  402173:	in     al,0xdb
  402175:	adc    eax,0x3c562fbb
  40217a:	(bad)  [ebx+edi*8+0x3c]
  40217e:	mov    eax,0xecb426d2
  402183:	sbb    bh,BYTE PTR [ebp+0x3c]
  402186:	aaa    
  402187:	mov    WORD PTR [ecx],?
  402189:	cdq    
  40218a:	add    bl,BYTE PTR [ecx+edi*1-0x410975f7]
  402191:	mov    ebx,0x5c1c43fd
  402196:	adc    dl,bh
  402198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402199:	and    al,0x3d
  40219b:	jp     0x4021d6
  40219d:	xchg   ebx,eax
  40219e:	(bad)  
  4021a0:	sub    ebp,0x509ca468
  4021a6:	mov    DWORD PTR [esi-0x41b728d7],ebx
  4021ac:	push   edi
  4021ad:	or     DWORD PTR [esi+0x54050694],0x6
  4021b4:	add    bh,dl
  4021b6:	cmp    ebx,DWORD PTR [ecx+0x7adf1f8e]
  4021bc:	aaa    
  4021bd:	mov    ch,0x9f
  4021bf:	int3   
  4021c0:	cmp    esp,0xffffff96
  4021c3:	ror    DWORD PTR [esi],0x5
  4021c6:	jp     0x402201
  4021c8:	mov    ds:0xcff606e9,eax
  4021cd:	addr16 es add eax,0x4e268269
  4021d4:	lods   eax,DWORD PTR ds:[esi]
  4021d5:	cwde   
  4021d6:	mov    edi,0xd084c308
  4021db:	or     BYTE PTR [ebx+0x6c2ee9c5],0x42
  4021e2:	(bad)  [edi-0x67]
  4021e5:	adc    esp,0xf5f92dfe
  4021eb:	mov    esp,0xc7f89bcb
  4021f0:	retf   
  4021f1:	scas   al,BYTE PTR es:[edi]
  4021f2:	push   ds
  4021f3:	mov    ds:0x7f12a87f,al
  4021f8:	out    dx,al
  4021f9:	iret   
  4021fa:	jl     0x402259
  4021fc:	test   eax,0xabe4da6
  402201:	add    ah,BYTE PTR [esi+0xcbce97c]
  402207:	or     BYTE PTR [ebx-0x73557a56],bl
  40220d:	pop    ecx
  40220e:	test   DWORD PTR [edi+ecx*8-0x76],0xce34973a
  402216:	add    al,0xb8
  402218:	stos   DWORD PTR es:[edi],eax
  402219:	and    DWORD PTR [edx],eax
  40221b:	xlat   BYTE PTR ds:[ebx]
  40221c:	sahf   
  40221d:	dec    edi
  40221e:	or     edx,DWORD PTR [eax+0x54498d39]
  402224:	fild   QWORD PTR [eax]
  402226:	les    esi,FWORD PTR [ebp+0x1e]
  402229:	adc    dh,cl
  40222b:	imul   eax,DWORD PTR [ebx],0x262085ec
  402231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402232:	rcl    dl,0xda
  402235:	out    dx,eax
  402236:	or     ch,BYTE PTR [ebp+0x29]
  402239:	dec    edi
  40223a:	cmp    eax,0xd36b9050
  40223f:	or     ah,BYTE PTR [edi-0x1b477857]
  402245:	mov    esi,edx
  402247:	cmp    ebp,DWORD PTR [edi]
  402249:	into   
  40224a:	mov    DWORD PTR [eax-0x16],edi
  40224d:	inc    ebx
  40224e:	fidivr DWORD PTR [edx]
  402250:	xchg   ebp,eax
  402251:	dec    eax
  402252:	aaa    
  402253:	retf   0xbb15
  402256:	lock leave 
  402258:	dec    eax
  402259:	push   es
  40225a:	fist   WORD PTR [esi+0x442d13bd]
  402260:	jge    0x4022d8
  402262:	(bad)  
  402263:	loopne 0x4022cd
  402265:	dec    ebp
  402266:	mov    esp,DWORD PTR [edx+edi*2]
  402269:	not    BYTE PTR [bx+di+0x1df6]
  40226e:	inc    esp
  40226f:	ins    BYTE PTR es:[edi],dx
  402270:	jmp    0x402245
  402272:	aad    0x61
  402274:	pop    ebx
  402275:	xor    BYTE PTR [eax+0x5f96595a],al
  40227b:	cmp    al,0xa8
  40227d:	rcr    ebp,1
  40227f:	inc    edi
  402280:	inc    BYTE PTR [edi+ebp*8-0x79d1a5e]
  402287:	sub    eax,0x22e4dd91
  40228c:	int    0x26
  40228e:	push   es
  40228f:	jns    0x40223e
  402291:	fwait
  402292:	outs   dx,BYTE PTR ds:[esi]
  402293:	xor    dl,BYTE PTR [eax-0x3f]
  402296:	adc    al,0x60
  402298:	outs   dx,DWORD PTR ds:[esi]
  402299:	cmc    
  40229a:	cmp    al,0x58
  40229c:	jne    0x402225
  40229e:	jmp    0x19444d68
  4022a3:	dec    edi
  4022a4:	and    al,0x31
  4022a6:	hlt    
  4022a7:	mov    ecx,0x56be141d
  4022ac:	jmp    0x402329
  4022ae:	lahf   
  4022af:	mov    BYTE PTR [edi],bh
  4022b1:	xchg   edi,eax
  4022b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022b3:	jmp    0x15d2:0x54934b46
  4022ba:	pusha  
  4022bb:	lahf   
  4022bc:	bound  edi,QWORD PTR [edx+eax*8-0x12]
  4022c0:	mov    esi,0xb5fdee55
  4022c5:	push   edi
  4022c6:	adc    eax,0xc87fd5a5
  4022cb:	mov    esp,0x859dde2a
  4022d0:	aad    0xc4
  4022d2:	leave  
  4022d3:	mov    ds:0x66e6f7c8,eax
  4022d8:	jns    0x4022ad
  4022da:	shl    DWORD PTR [edi],1
  4022dc:	call   0x9136b5e9
  4022e1:	xchg   cl,cl
  4022e3:	iret   
  4022e4:	xchg   esi,eax
  4022e5:	pop    edi
  4022e6:	push   eax
  4022e7:	mov    ds,WORD PTR [ecx+0x393c9ef1]
  4022ed:	jl     0x40232a
  4022ef:	lods   eax,DWORD PTR ds:[esi]
  4022f0:	push   0x21b0cda0
  4022f5:	inc    ecx
  4022f6:	inc    BYTE PTR [edi+0x18]
  4022f9:	fldcw  WORD PTR [eax-0x7e906ca7]
  402300:	sub    al,0x0
  402302:	hlt    
  402303:	adc    ecx,ecx
  402305:	jp     0x4022ae
  402307:	or     al,0xeb
  402309:	hlt    
  40230a:	ds (bad) 
  40230d:	in     al,dx
  40230e:	scas   eax,DWORD PTR es:[edi]
  40230f:	xchg   DWORD PTR [edi-0x75],ebp
  402312:	cmp    BYTE PTR [eax-0x40],cl
  402315:	jb     0x40231d
  402317:	xchg   DWORD PTR [eax+eiz*2-0x22f94f1c],edx
  40231e:	mov    edi,0xd0c377ce
  402323:	(bad)  
  402324:	jmp    0xd438:0x7a8e273a
  40232b:	mov    al,ds:0xf96214b7
  402330:	mov    ebp,0xe0dc03b0
  402335:	fnstenv [edi-0x376dd581]
  40233b:	mov    BYTE PTR [bx-0x6685],ch
  402340:	adc    eax,0xbc33e0b3
  402345:	loop   0x402343
  402347:	or     DWORD PTR [eax-0x7a],ecx
  40234a:	out    0xc5,al
  40234c:	arpl   WORD PTR [esi],di
  40234e:	mov    ebx,0x662d22a5
  402353:	clc    
  402354:	cld    
  402355:	adc    BYTE PTR [ebx],cl
  402357:	mov    WORD PTR [ebx+0x59c9199a],gs
  40235d:	push   esi
  40235e:	and    ebp,DWORD PTR [edx+0x73c7379]
  402364:	setg   BYTE PTR [eax-0x8402084]
  40236b:	outs   dx,DWORD PTR ds:[esi]
  40236c:	arpl   WORD PTR [ebx],bp
  40236e:	xchg   edi,eax
  40236f:	call   0xe1ce:0xd0862fc5
  402376:	scas   al,BYTE PTR es:[edi]
  402377:	stos   BYTE PTR es:[edi],al
  402378:	push   ds
  402379:	fucomp st(2)
  40237b:	pop    ecx
  40237c:	xchg   ecx,eax
  40237d:	test   BYTE PTR [ecx+0x4d],ah
  402380:	fstp   DWORD PTR [ebx-0x65ec1ec7]
  402386:	jl     0x40237d
  402388:	aas    
  402389:	or     cl,dl
  40238b:	fadd   DWORD PTR [eax]
  40238d:	out    0x74,eax
  40238f:	jbe    0x4023d6
  402391:	sbb    al,0x6a
  402393:	lahf   
  402394:	aas    
  402395:	jns    0x4023cd
  402397:	or     BYTE PTR [edx-0x1795f52],dl
  40239d:	jbe    0x4023c3
  40239f:	ss inc edi
  4023a1:	jg     0x4023a8
  4023a3:	and    esp,DWORD PTR [eax+0x16]
  4023a6:	dec    ebp
  4023a7:	shl    DWORD PTR [edi-0x5c],cl
  4023aa:	mov    dh,0x56
  4023ac:	mov    ebx,0x150065ee
  4023b1:	inc    esi
  4023b2:	mov    ah,0x23
  4023b4:	jl     0x40235c
  4023b6:	cld    
  4023b7:	jmp    0x75303974
  4023bc:	jno    0x402380
  4023be:	arpl   WORD PTR [ebp-0x45e6e482],sp
  4023c4:	sbb    ah,BYTE PTR ds:0x6dfb59f9
  4023ca:	cmp    eax,0xc9b94f93
  4023cf:	lds    ebx,FWORD PTR [edx+0x35e5815f]
  4023d5:	cli    
  4023d6:	pop    edi
  4023d7:	ret    
  4023d8:	mov    ds:0x55f7fab2,eax
  4023dd:	dec    edi
  4023de:	push   ds
  4023df:	js     0x402402
  4023e1:	push   0x8f9b81a
  4023e6:	cwde   
  4023e7:	and    bl,BYTE PTR [edx]
  4023e9:	lahf   
  4023ea:	std    
  4023eb:	pop    ds
  4023ec:	mov    ch,0xbd
  4023ee:	pop    ds
  4023ef:	jg     0x402446
  4023f1:	sub    BYTE PTR [ebx-0x4143fbf0],cl
  4023f7:	dec    ebx
  4023f8:	mov    ah,BYTE PTR [esp+edx*2+0x2f0fffe4]
  4023ff:	lea    ecx,[edx*4-0x26ab282]
  402406:	shr    BYTE PTR [ebx+0x2f],1
  402409:	mov    eax,0xb2c49884
  40240e:	pop    ebp
  40240f:	sub    ch,BYTE PTR [edx-0x7275370b]
  402415:	sub    dl,BYTE PTR [eax]
  402417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402418:	repz jle 0x402479
  40241b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40241c:	sub    eax,0x31227c9f
  402421:	add    dh,BYTE PTR [ebx]
  402423:	enter  0x81bd,0xbb
  402427:	leave  
  402428:	lock ret 
  40242a:	lock inc eax
  40242c:	add    BYTE PTR [ebp+ebp*1+0x76],bh
  402430:	dec    ebx
  402431:	js     0x4023e4
  402433:	sar    BYTE PTR [esi-0x48],cl
  402436:	and    BYTE PTR [ebx+0x2b5ca9f4],ch
  40243c:	sub    esi,ebp
  40243e:	loope  0x4024ac
  402440:	dec    ecx
  402441:	sbb    esp,DWORD PTR [edx-0x24]
  402444:	jo     0x4023e1
  402446:	out    0xcc,al
  402448:	mov    dl,0x30
  40244a:	popf   
  40244b:	std    
  40244c:	add    esi,DWORD PTR [edx]
  40244e:	jnp    0x402440
  402450:	xchg   esp,eax
  402451:	retf   0xe669
  402454:	mov    cl,0x1d
  402456:	in     al,dx
  402457:	and    eax,0xc64d8dd9
  40245c:	loope  0x4024af
  40245e:	outs   dx,BYTE PTR ds:[esi]
  40245f:	dec    ebx
  402460:	ja     0x402498
  402462:	leave  
  402463:	cmp    eax,0x11fabcc2
  402468:	in     eax,dx
  402469:	cmp    eax,0xa7d6a243
  40246e:	and    eax,0x3f22a93a
  402473:	add    al,0xe4
  402475:	call   0x1504:0xa9c2f7d4
  40247c:	cs pop esp
  40247e:	mov    eax,0x415b2720
  402483:	cli    
  402484:	dec    esp
  402485:	stc    
  402486:	xchg   edi,eax
  402487:	into   
  402488:	hlt    
  402489:	popa   
  40248a:	hlt    
  40248b:	push   0xd43605b7
  402490:	jbe    0x402427
  402492:	xor    al,BYTE PTR [ecx]
  402494:	dec    esi
  402495:	test   DWORD PTR [edi],edi
  402497:	fstp   DWORD PTR [edx]
  402499:	retf   0x70ce
  40249c:	gs add esp,ecx
  40249f:	ins    DWORD PTR es:[edi],dx
  4024a0:	ds pusha 
  4024a2:	rcr    cl,0x7
  4024a5:	shl    eax,cl
  4024a7:	fdivr  QWORD PTR [edx-0x419537e5]
  4024ad:	mul    BYTE PTR [ebx]
  4024af:	frstor [edx-0x7e]
  4024b2:	call   0xae7a30bd
  4024b7:	push   es
  4024b8:	call   0xda5f:0xf59ff41e
  4024bf:	xor    DWORD PTR [ebp-0x1adf3ede],ecx
  4024c5:	into   
  4024c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c7:	outs   dx,DWORD PTR ds:[esi]
  4024c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c9:	jge    0x4024b3
  4024cb:	dec    ebx
  4024cc:	jle    0x4024d0
  4024ce:	pop    eax
  4024cf:	stc    
  4024d0:	arpl   bp,bp
  4024d2:	test   eax,0xa168bb98
  4024d7:	push   cs
  4024d8:	mov    eax,0xf0c38f5d
  4024dd:	shl    DWORD PTR [ebx+0xb6b3c2a],0x13
  4024e4:	fcomp  DWORD PTR [edx+0x2f]
  4024e7:	test   DWORD PTR [eax],edi
  4024e9:	dec    edx
  4024ea:	xor    DWORD PTR [ebp+eiz*4+0x31],0xf1e829da
  4024f2:	stc    
  4024f3:	or     al,0xdf
  4024f5:	mov    ebp,0xd2ae8856
  4024fa:	cmp    ah,bl
  4024fc:	sti    
  4024fd:	pop    ebp
  4024fe:	inc    ebx
  4024ff:	jle    0x402572
  402501:	jo     0x40256d
  402503:	push   0x90c63188
  402508:	das    
  402509:	call   edi
  40250b:	lahf   
  40250c:	jp     0x402517
  40250e:	push   0x44
  402510:	inc    eax
  402511:	inc    ebx
  402512:	out    dx,al
  402513:	pop    ecx
  402514:	fdiv   DWORD PTR [edi-0x3d]
  402517:	and    ebp,DWORD PTR [ecx+0x19]
  40251a:	inc    eax
  40251b:	mov    DWORD PTR [edx+0x502fee0b],esi
  402521:	cdq    
  402522:	and    DWORD PTR [ebx],esp
  402524:	adc    eax,DWORD PTR [ebx+0x3a]
  402527:	inc    esp
  402528:	xor    al,0x78
  40252a:	(bad)  
  40252c:	add    BYTE PTR [ebx],ch
  40252e:	mov    al,0xeb
  402530:	push   0xb2f8c74
  402535:	xchg   ebx,eax
  402536:	mov    WORD PTR [edx],fs
  402538:	test   DWORD PTR [edx+0x68429e9f],edx
  40253e:	inc    ecx
  40253f:	push   ecx
  402540:	add    al,0x83
  402542:	push   ss
  402543:	icebp  
  402544:	sub    eax,0x8ed1e44b
  402549:	sbb    eax,DWORD PTR [esi+ebx*1+0x27240fd5]
  402550:	dec    esi
  402551:	mov    dl,0x29
  402553:	dec    ebx
  402554:	adc    BYTE PTR [edi-0x6b],al
  402557:	jle    0x402567
  402559:	aam    0xbb
  40255b:	sbb    edi,DWORD PTR [edi+eiz*8+0x1e1f9c47]
  402562:	pop    esi
  402563:	fmulp  st(1),st
  402565:	lods   al,BYTE PTR ds:[esi]
  402566:	pop    esi
  402567:	inc    esi
  402568:	pushf  
  402569:	loopne 0x40251c
  40256b:	jecxz  0x402541
  40256d:	mov    ?,WORD PTR [esi+0xebc31ce]
  402573:	jmp    0x42bf:0xb36563ec
  40257a:	nop
  40257b:	enter  0xfcdd,0x12
  40257f:	push   ds
  402580:	mov    esp,esp
  402582:	mov    eax,0x49d43481
  402587:	add    al,0xfd
  402589:	pop    edx
  40258a:	and    BYTE PTR [edx+0x3a],0x97
  40258e:	cld    
  40258f:	(bad)  
  402590:	in     al,dx
  402591:	adc    eax,edx
  402593:	mov    ds:0x282f1fe9,eax
  402598:	and    ah,0x29
  40259b:	cwde   
  40259c:	aaa    
  40259d:	inc    DWORD PTR [edi]
  40259f:	inc    ebx
  4025a0:	dec    edi
  4025a1:	sbb    esi,ebx
  4025a3:	jp     0x40253a
  4025a5:	mov    cl,0x34
  4025a7:	cmp    BYTE PTR ds:0x768cbf6d,dh
  4025ad:	ja     0x40262d
  4025af:	inc    ecx
  4025b0:	repnz inc ecx
  4025b2:	inc    esp
  4025b3:	bnd jmp 0xcd5be7b6
  4025b9:	add    ecx,esi
  4025bb:	outs   dx,BYTE PTR ds:[esi]
  4025bc:	adc    DWORD PTR [edi],ebp
  4025be:	(bad)  
  4025bf:	pop    edi
  4025c0:	jnp    0x4025d1
  4025c2:	sub    BYTE PTR [esi],dl
  4025c4:	idiv   DWORD PTR [ebx]
  4025c6:	pop    esi
  4025c7:	test   al,0x2a
  4025c9:	jg     0x4025a1
  4025cb:	rcl    BYTE PTR [edi+ebp*2-0x4e],1
  4025cf:	call   FWORD PTR [edx-0x3348fa97]
  4025d5:	pop    es
  4025d6:	inc    edx
  4025d7:	neg    BYTE PTR [ebx+0x4d9da4e9]
  4025dd:	clc    
  4025de:	pop    ebx
  4025df:	xchg   ecx,eax
  4025e0:	push   ds
  4025e1:	add    esp,DWORD PTR [edx+0x5b110bfe]
  4025e7:	loop   0x4025b0
  4025e9:	jmp    0x7777963d
  4025ee:	stc    
  4025ef:	jmp    0x149e15ee
  4025f4:	in     al,0x90
  4025f6:	out    dx,al
  4025f7:	stc    
  4025f8:	popf   
  4025f9:	adc    al,0x5e
  4025fb:	pop    ss
  4025fc:	cld    
  4025fd:	repnz pop ss
  4025ff:	mov    gs,WORD PTR [ebx+0x13]
  402602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402603:	mul    BYTE PTR [esi+ebp*2+0x4c]
  402607:	add    dl,BYTE PTR [eax-0x7f]
  40260a:	or     dl,BYTE PTR [ebp-0x57]
  40260d:	mov    dh,0x47
  40260f:	mov    esp,0x8e98540f
  402614:	xor    eax,0xbc919e0c
  402619:	push   ebp
  40261a:	sti    
  40261b:	jp     0x402614
  40261d:	sti    
  40261e:	ss xchg ebp,eax
  402620:	inc    ebp
  402621:	add    DWORD PTR [edx+eax*4],eax
  402624:	sub    al,0x7b
  402626:	mov    al,0x6e
  402628:	sub    DWORD PTR [eax+0x64c4589e],ebx
  40262e:	mov    edx,0x3fa638d0
  402633:	sbb    eax,0x56837bbf
  402638:	mov    eax,ds:0x62697e4b
  40263d:	xchg   esi,eax
  40263e:	test   eax,0x4296e7d8
  402643:	repnz pop ebx
  402645:	xor    DWORD PTR [esi],0x53
  402648:	sbb    ebx,ebx
  40264a:	push   ds
  40264b:	ror    BYTE PTR [edx-0x1a],1
  40264e:	daa    
  40264f:	int3   
  402650:	jmp    0xeeb5:0x9bd96387
  402657:	mov    ch,0x1b
  402659:	mov    al,0xe4
  40265b:	out    0xc1,eax
  40265d:	jp     0x4025fc
  40265f:	xlat   BYTE PTR ds:[ebx]
  402660:	gs sub esi,ebx
  402663:	jp     0x402631
  402665:	sbb    BYTE PTR [edx],0xca
  402668:	and    edi,edx
  40266a:	(bad)  
  40266b:	(bad)  
  40266d:	popa   
  40266e:	enter  0x4f40,0xaa
  402672:	cld    
  402673:	mov    edi,0xf0184c96
  402678:	dec    ebp
  402679:	cs pop ds
  40267b:	push   cs
  40267c:	aas    
  40267d:	pop    esi
  40267e:	jl     0x402630
  402680:	ret    0x899
  402683:	jno    0x402690
  402685:	sbb    DWORD PTR [eax+0x24ebfafa],esp
  40268b:	inc    edi
  40268c:	add    BYTE PTR [ecx+0x687e0534],cl
  402692:	leave  
  402693:	jae    0x402664
  402695:	xchg   esi,eax
  402696:	(bad)  
  402698:	call   0xc5b4:0x3796219d
  40269f:	mov    ah,0x67
  4026a1:	outs   dx,DWORD PTR ds:[esi]
  4026a2:	call   0x8275:0x99b3e578
  4026a9:	ror    BYTE PTR [edi],cl
  4026ab:	rcl    BYTE PTR [esi+0x29e16218],cl
  4026b1:	std    
  4026b2:	cdq    
  4026b3:	mov    ebx,0xd853120d
  4026b8:	nop
  4026b9:	mov    ecx,0x1ffd63c6
  4026be:	pop    es
  4026bf:	jmp    0xc15a:0x19645599
  4026c6:	and    edi,0xffffffc5
  4026c9:	add    eax,0xf6de0a76
  4026ce:	add    eax,0x211dab99
  4026d3:	repnz and ch,dl
  4026d6:	mov    esp,0x2c839f58
  4026db:	cmp    al,0xf4
  4026dd:	mov    cl,0x69
  4026df:	jns    0x40266d
  4026e1:	xchg   edi,eax
  4026e2:	call   0xad5b:0xd177e091
  4026e9:	dec    edx
  4026ea:	outs   dx,BYTE PTR ds:[esi]
  4026eb:	bound  ebp,QWORD PTR [eax]
  4026ed:	cmp    esi,ebx
  4026ef:	int3   
  4026f0:	dec    edi
  4026f1:	fcomp  QWORD PTR [eax]
  4026f3:	add    al,0x2f
  4026f5:	xor    ah,BYTE PTR [ebp+0x50]
  4026f8:	je     0x4026df
  4026fa:	jp     0x4026e7
  4026fc:	std    
  4026fd:	aaa    
  4026fe:	mov    dh,0xcb
  402700:	icebp  
  402701:	repnz dec ebx
  402703:	pop    esi
  402705:	inc    esp
  402706:	jnp    0x4026b9
  402708:	adc    bl,BYTE PTR [edx]
  40270a:	push   cs
  40270b:	(bad)  
  40270c:	mov    dh,0x20
  40270e:	mov    ds:0xff69274,eax
  402713:	push   ebx
  402714:	pop    esi
  402715:	lods   eax,DWORD PTR ds:[esi]
  402716:	ret    
  402717:	aas    
  402718:	cmp    BYTE PTR [ebx+ebx*1],cl
  40271b:	ja     0x40270b
  40271d:	xor    esp,esp
  40271f:	test   eax,0x98c20575
  402724:	xor    DWORD PTR [edx+0x570f7ce7],eax
  40272a:	sbb    BYTE PTR [esi-0x7d3ef033],dh
  402730:	popf   
  402731:	in     al,0x4b
  402733:	pop    esp
  402734:	bound  ecx,QWORD PTR [esp+ebp*4-0x1cfef0b8]
  40273b:	cmp    DWORD PTR [ebx+0x4],ebp
  40273e:	in     al,dx
  40273f:	ror    DWORD PTR ds:0x8870e90e,1
  402745:	or     DWORD PTR [eax],ebx
  402747:	in     eax,dx
  402748:	lods   eax,DWORD PTR ds:[esi]
  402749:	and    BYTE PTR [edi-0x5a],dh
  40274c:	test   eax,0x1382a171
  402751:	pop    ebp
  402752:	pop    esi
  402753:	and    al,0xf6
  402755:	mov    dh,BYTE PTR [esi-0x40]
  402758:	xor    edx,DWORD PTR [ebp+0xa]
  40275b:	sub    bl,bh
  40275d:	inc    esp
  40275e:	mov    eax,0x3100ebf2
  402763:	mov    al,0x47
  402765:	sub    al,0xbc
  402767:	xchg   DWORD PTR [ebp-0x6c],eax
  40276a:	inc    esi
  40276b:	sbb    dh,BYTE PTR [ebx-0x13]
  40276e:	popf   
  40276f:	mov    esp,0x4d655b62
  402774:	sbb    al,0xf7
  402776:	jmp    0x6434:0x872a556a
  40277d:	jbe    0x402737
  40277f:	retf   
  402780:	(bad)  [eax+0x7b5f68f9]
  402786:	test   BYTE PTR [ebx],0x30
  402789:	jno    0x402741
  40278b:	lods   eax,DWORD PTR ds:[esi]
  40278c:	mov    edi,0x64d88a68
  402791:	and    eax,0x507dc981
  402796:	ds jg  0x40279f
  402799:	and    BYTE PTR [esi+0xc],0xf3
  40279d:	jp     0x402747
  40279f:	xchg   edi,eax
  4027a0:	pusha  
  4027a1:	imul   ebx,ebp,0x9
  4027a4:	push   eax
  4027a5:	hlt    
  4027a6:	mov    esp,0x44f1aeb5
  4027ab:	push   edi
  4027ac:	and    eax,0xe34c7977
  4027b1:	pop    edi
  4027b2:	mov    ah,0xb
  4027b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b5:	and    edx,DWORD PTR [edi+0x52d1e437]
  4027bb:	dec    edx
  4027bc:	idiv   BYTE PTR [esi-0x70]
  4027bf:	(bad)  
  4027c1:	sub    ch,dl
  4027c3:	xor    cl,BYTE PTR [ebp+0x63]
  4027c6:	test   eax,0xca5b1d44
  4027cb:	outs   dx,DWORD PTR ds:[esi]
  4027cc:	retf   0xfc14
  4027cf:	out    dx,al
  4027d0:	fcomp  st(7)
  4027d2:	outs   dx,DWORD PTR ds:[esi]
  4027d3:	jecxz  0x4027cf
  4027d5:	(bad)  
  4027d6:	(bad)  
  4027d7:	mov    dh,0xcf
  4027d9:	fisttp WORD PTR [edx+0x76]
  4027dc:	or     al,0x90
  4027de:	dec    esi
  4027df:	jbe    0x4027a6
  4027e1:	in     al,dx
  4027e2:	stos   DWORD PTR es:[edi],eax
  4027e3:	inc    esi
  4027e4:	pop    eax
  4027e5:	sahf   
  4027e6:	mov    al,ds:0x3d28feb0
  4027eb:	or     BYTE PTR [esp+ecx*1-0x525a030e],al
  4027f2:	loop   0x402855
  4027f4:	jne    0x40277f
  4027f6:	jno    0x40286c
  4027f8:	inc    edx
  4027f9:	mov    dh,0x80
  4027fb:	inc    edi
  4027fc:	pop    esi
  4027fd:	jge    0x40280f
  4027ff:	shl    BYTE PTR [edx],0xdd
  402802:	retf   
  402803:	imul   ebp
  402805:	fild   DWORD PTR ds:[eax+edi*1+0x20512e80]
  40280d:	ret    0x16da
  402810:	mov    ds:0xb5408158,eax
  402815:	push   eax
  402816:	xchg   edx,eax
  402817:	mov    ch,0x66
  402819:	dec    ebp
  40281a:	xchg   esp,eax
  40281b:	rcl    bl,1
  40281d:	fwait
  40281e:	mov    ch,0xe7
  402820:	test   al,0x59
  402822:	neg    edx
  402824:	or     al,0xa0
  402826:	imul   edi,DWORD PTR [ecx-0x4a],0x56
  40282a:	sbb    bh,BYTE PTR ss:[eax-0x3e]
  40282e:	and    eax,DWORD PTR [edx]
  402830:	test   eax,0xd24c572f
  402835:	(bad)  
  402836:	stc    
  402837:	push   ebp
  402838:	aaa    
  402839:	add    DWORD PTR [eax+0x7fd7df12],0xd97e0866
  402843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402844:	pop    ebx
  402845:	mov    bh,0x3d
  402847:	dec    ecx
  402848:	jno    0x402809
  40284a:	and    ebx,DWORD PTR [ecx-0x2ee85a15]
  402850:	enter  0x265,0xf0
  402854:	push   ss
  402855:	xchg   ebp,eax
  402856:	loope  0x4028ca
  402858:	xchg   ecx,eax
  402859:	push   edi
  40285a:	pop    ss
  40285b:	mov    DWORD PTR [edx+0x1e508862],ebp
  402861:	push   eax
  402862:	(bad)  
  402863:	adc    al,0x18
  402865:	xor    cl,BYTE PTR [ebx-0x30]
  402868:	cdq    
  402869:	sub    ah,bh
  40286b:	lea    ebp,ds:0x509e7948
  402871:	mov    WORD PTR [edi+eax*2-0x3f],?
  402875:	pop    ebp
  402876:	sbb    al,BYTE PTR [edi+0x496269ae]
  40287c:	fnsave [eax+0x550f74b7]
  402882:	mov    eax,0xd18a07fc
  402887:	inc    ebp
  402888:	pop    edx
  402889:	inc    eax
  40288a:	push   edi
  40288b:	add    dl,ah
  40288d:	cwde   
  40288e:	pushf  
  40288f:	addr16 mov bl,0x5f
  402892:	mov    bh,0x1a
  402894:	addr16 pop ebx
  402896:	or     ebx,edi
  402898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402899:	cmc    
  40289a:	cmp    al,0xd5
  40289c:	inc    esp
  40289d:	cli    
  40289e:	test   DWORD PTR [ebx-0x1570e5da],edx
  4028a4:	sbb    DWORD PTR [ebp-0x2c],0xffffffab
  4028a8:	push   edi
  4028a9:	iret   
  4028aa:	(bad)  
  4028ab:	sub    DWORD PTR ds:0x7d116ae3,ebp
  4028b1:	out    0x2f,eax
  4028b3:	outs   dx,DWORD PTR ds:[esi]
  4028b4:	pop    esp
  4028b5:	(bad)  
  4028b7:	add    DWORD PTR [ebx],ebp
  4028b9:	mov    BYTE PTR [eax-0x7e],bl
  4028bc:	or     BYTE PTR [edx-0x3d500ee7],0x87
  4028c3:	ret    0x5637
  4028c6:	out    dx,al
  4028c7:	enter  0x9c89,0x85
  4028cb:	mov    ds:0xc2ae31af,eax
  4028d0:	jnp    0x40289d
  4028d2:	dec    edi
  4028d3:	ins    BYTE PTR es:[edi],dx
  4028d4:	and    eax,0x69e5ca2c
  4028d9:	add    al,0x25
  4028db:	ret    
  4028dc:	dec    ecx
  4028dd:	cmp    al,0x9c
  4028df:	popa   
  4028e0:	in     al,dx
  4028e1:	xchg   ebx,eax
  4028e2:	(bad)  
  4028e3:	mov    eax,0xcfaff4
  4028e8:	sahf   
  4028e9:	fnstcw WORD PTR [ebx+0x60]
  4028ec:	ss inc esp
  4028ee:	push   0x57
  4028f0:	adc    cl,dh
  4028f2:	mov    al,ds:0x5c37ab88
  4028f7:	inc    edi
  4028f8:	or     BYTE PTR [edi-0x1138bb2a],dh
  4028fe:	fldenv [ebx]
  402900:	jg     0x402968
  402902:	jno    0x402925
  402904:	retf   
  402905:	pop    ebp
  402906:	das    
  402907:	or     al,0xdb
  402909:	ret    
  40290a:	push   esp
  40290b:	dec    ebp
  40290c:	pushf  
  40290d:	aad    0xd5
  40290f:	pop    edx
  402910:	add    eax,0x5ff79e9c
  402915:	mov    al,fs:0x9e9d8e6d
  40291b:	jb     0x40295e
  40291d:	test   dl,dh
  40291f:	push   es
  402920:	mov    edi,0x5ffce421
  402925:	dec    edi
  402926:	jno    0x4028d9
  402928:	outs   dx,BYTE PTR es:[esi]
  40292a:	enter  0x6ac1,0xac
  40292e:	leave  
  40292f:	mov    dl,0xfa
  402931:	in     al,0xce
  402933:	mov    dh,0xbb
  402935:	stos   DWORD PTR es:[edi],eax
  402936:	push   ebx
  402937:	xor    al,dl
  402939:	repz adc esp,edi
  40293c:	mov    bh,BYTE PTR [esi]
  40293e:	loop   0x40295c
  402940:	dec    ecx
  402941:	push   0x7e
  402943:	dec    esi
  402944:	popf   
  402945:	push   es
  402946:	mov    esp,0x5b82728b
  40294b:	xor    al,0xcd
  40294d:	clc    
  40294e:	mov    cl,0x38
  402950:	bound  esi,QWORD PTR [edi-0x63]
  402953:	push   0x5
  402955:	enter  0xdbc4,0x1f
  402959:	jl     0x4029c7
  40295b:	mov    al,0x54
  40295d:	test   eax,0x3bf35c24
  402962:	and    dh,BYTE PTR [ebx-0x66]
  402965:	mov    esp,0xe0eed0a
  40296a:	mov    al,al
  40296c:	mov    ds:0xb2a7d72,al
  402971:	add    al,0x72
  402973:	(bad)  
  402974:	pop    edi
  402975:	push   0xffffffe3
  402977:	ret    0x5c41
  40297a:	mov    ah,0x7a
  40297c:	test   eax,0xed63ed27
  402981:	lods   eax,DWORD PTR ds:[esi]
  402982:	(bad)  
  402983:	xchg   esp,eax
  402984:	mov    WORD PTR [edi],fs
  402986:	mov    ch,0xf9
  402988:	mov    dh,BYTE PTR [ebx-0x7a1f00cc]
  40298e:	loope  0x402a06
  402990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402991:	dec    ebx
  402992:	mov    eax,ebx
  402994:	(bad)  
  402995:	mov    dl,0x72
  402997:	sbb    ah,BYTE PTR [ecx+ebx*1+0x66]
  40299b:	push   ss
  40299c:	fwait
  40299d:	jecxz  0x4029ed
  40299f:	iret   
  4029a0:	xchg   DWORD PTR [edx-0x13],ecx
  4029a3:	mov    eax,0x40354a0c
  4029a8:	pop    ebp
  4029a9:	sbb    cl,0x2e
  4029ac:	outs   dx,DWORD PTR ds:[esi]
  4029ad:	clc    
  4029ae:	xchg   esi,eax
  4029af:	addr16 jge 0x402a17
  4029b2:	in     al,dx
  4029b3:	push   esp
  4029b4:	fs push 0xc492ab7a
  4029ba:	mov    al,ds:0x756685c2
  4029bf:	or     edx,ecx
  4029c1:	arpl   di,di
  4029c3:	mov    bh,cl
  4029c5:	push   ebx
  4029c6:	pop    edi
  4029c7:	jl     0x402989
  4029c9:	xchg   BYTE PTR [eax],bl
  4029cb:	or     eax,0x49f0f8e7
  4029d0:	jne    0x402977
  4029d2:	sub    dl,bl
  4029d4:	adc    al,0x1f
  4029d6:	mov    WORD PTR [edx],ds
  4029d8:	pushfw 
  4029da:	mov    dl,0x76
  4029dc:	and    al,0x6
  4029de:	mov    al,0x4b
  4029e0:	test   ecx,ecx
  4029e2:	push   eax
  4029e3:	scas   eax,DWORD PTR es:[edi]
  4029e4:	test   DWORD PTR [edx],0x759b19ed
  4029ea:	push   ebp
  4029eb:	add    edx,DWORD PTR [eax-0x57]
  4029ee:	cmp    ebx,ecx
  4029f0:	(bad)  
  4029f1:	xchg   ecx,eax
  4029f2:	mov    dl,0x9e
  4029f4:	sub    BYTE PTR [edi],cl
  4029f6:	or     eax,0xfe73c14c
  4029fb:	adc    ch,dh
  4029fd:	or     al,0xc9
  4029ff:	sub    al,0x34
  402a01:	cld    
  402a02:	mov    cl,0x67
  402a04:	pop    ecx
  402a05:	stc    
  402a06:	push   DWORD PTR [eax]
  402a08:	les    ebx,FWORD PTR [edi+0x198745bc]
  402a0e:	mov    edx,0x40b38c3b
  402a13:	mov    ebx,0x6a10be9
  402a18:	adc    esi,DWORD PTR [ecx+ebp*4+0x39db7298]
  402a1f:	jbe    0x402a46
  402a21:	xor    dh,ah
  402a23:	or     DWORD PTR [esi+0x25441505],edi
  402a29:	out    0x7b,eax
  402a2b:	push   DWORD PTR [eax-0x4f81e69]
  402a31:	push   edx
  402a32:	shl    BYTE PTR [esi],1
  402a34:	cli    
  402a35:	pop    esp
  402a36:	icebp  
  402a37:	mov    bh,0x8c
  402a39:	add    cl,BYTE PTR [esi+edx*1-0x296908b1]
  402a40:	and    ch,dh
  402a42:	pop    edi
  402a43:	out    dx,al
  402a44:	jmp    0xa743:0x21f33c89
  402a4b:	mov    ch,0xf2
  402a4d:	retf   
  402a4e:	mov    BYTE PTR [edi+0x3f],dl
  402a51:	or     DWORD PTR [ecx-0xe],esi
  402a54:	and    dh,dl
  402a56:	ficomp WORD PTR [ebp+esi*8+0xad30052]
  402a5d:	xor    eax,DWORD PTR [ecx+0x5af40d76]
  402a63:	adc    eax,0x4ddee4ad
  402a68:	dec    eax
  402a69:	sub    DWORD PTR [edx],ebp
  402a6b:	cli    
  402a6c:	mov    ebp,0xabbaee28
  402a71:	xchg   esi,eax
  402a72:	in     eax,0x51
  402a74:	pop    DWORD PTR [eax+0xa]
  402a77:	add    cl,al
  402a79:	js     0x402ab7
  402a7b:	mov    ds:0x6d7cd4c,al
  402a80:	sbb    eax,0x4d5030aa
  402a85:	jmp    0x2f75:0xb2a181d7
  402a8c:	and    DWORD PTR [edi-0x14a74812],edx
  402a92:	ret    
  402a93:	sub    eax,DWORD PTR [edx+0x1b]
  402a96:	fisubr DWORD PTR [ebp-0x7e7b359e]
  402a9c:	dec    esp
  402a9d:	push   ebp
  402a9e:	dec    edi
  402a9f:	push   ebp
  402aa0:	mov    bl,0x93
  402aa2:	adc    dh,BYTE PTR [ebx]
  402aa4:	and    ebp,DWORD PTR [esp+edx*8+0x65963a57]
  402aab:	test   BYTE PTR [ebp+0x10ea1a4f],bh
  402ab1:	or     dl,BYTE PTR [ecx]
  402ab3:	dec    eax
  402ab4:	lods   al,BYTE PTR ds:[esi]
  402ab5:	out    0x5a,al
  402ab7:	xlat   BYTE PTR ds:[ebx]
  402ab8:	pop    ecx
  402ab9:	lock fxch st(7)
  402abc:	pop    esp
  402abd:	(bad)
  402ac2:	inc    esp
  402ac3:	ds push es
  402ac5:	sub    DWORD PTR [ecx-0x4c7c69b7],0xca33d99b
  402acf:	outs   dx,DWORD PTR ds:[esi]
  402ad0:	sub    ah,BYTE PTR [esi-0x41]
  402ad3:	ds int3 
  402ad5:	or     BYTE PTR [esp+eax*2+0x6fa5dae1],dh
  402adc:	jge    0x402ad6
  402ade:	and    al,0x4d
  402ae0:	lods   al,BYTE PTR ds:[esi]
  402ae1:	push   ss
  402ae2:	sbb    DWORD PTR [ecx-0x4fd28cb8],ebx
  402ae8:	scas   al,BYTE PTR es:[edi]
  402ae9:	into   
  402aea:	mov    edx,0xbe3d7178
  402aef:	(bad)  
  402af1:	sbb    esi,DWORD PTR [esp+ebx*4-0x21]
  402af5:	xchg   BYTE PTR [ebp+0x5e8519ae],bh
  402afb:	(bad)  
  402afc:	jns    0x402aad
  402afe:	add    eax,0xe30cc8ff
  402b03:	push   edx
  402b04:	or     al,0xb8
  402b06:	add    DWORD PTR [ebx+0xf161958],eax
  402b0c:	mov    edx,0x9612e76d
  402b11:	pop    ecx
  402b12:	sbb    eax,0x37a88ec6
  402b17:	sar    BYTE PTR [edx+0x6911dfb0],1
  402b1d:	lds    ecx,FWORD PTR [esi+0x36e8864a]
  402b23:	ret    
  402b24:	mov    ds:0xdd62ba34,eax
  402b29:	mov    ?,WORD PTR [esi+eiz*2+0x7a]
  402b2d:	ja     0x402b94
  402b2f:	sbb    DWORD PTR [eax],esi
  402b31:	add    DWORD PTR [edx],esp
  402b33:	inc    ebx
  402b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b35:	xor    DWORD PTR [esi+0x7b064fc8],esp
  402b3b:	push   ds
  402b3c:	xchg   ecx,eax
  402b3d:	mov    edx,0x361efd29
  402b42:	stos   BYTE PTR es:[edi],al
  402b43:	(bad)  
  402b44:	cmp    eax,0xe6481ed7
  402b49:	inc    edx
  402b4a:	(bad)  
  402b4b:	retf   
  402b4c:	test   bh,0x4a
  402b4f:	inc    dh
  402b51:	mov    ebx,0x44867710
  402b56:	ss xchg dh,bh
  402b59:	sbb    eax,0x71a3ae70
  402b5e:	or     al,0xab
  402b60:	(bad)  
  402b61:	pop    eax
  402b62:	lock dec eax
  402b64:	xchg   ebp,eax
  402b65:	mov    edi,ss
  402b67:	push   esp
  402b68:	jg     0x402ba3
  402b6a:	(bad)  
  402b6b:	out    dx,eax
  402b6c:	lods   al,BYTE PTR ds:[esi]
  402b6d:	nop
  402b6e:	test   DWORD PTR [edi],0x99043b8c
  402b74:	lea    esp,[ebp+0x57]
  402b77:	popf   
  402b78:	punpckhbw mm0,QWORD PTR [eax+0x6d69b2be]
  402b7f:	mov    BYTE PTR [edx-0x7d],cl
  402b82:	mov    esp,0x5f32f9d5
  402b87:	daa    
  402b88:	sahf   
  402b89:	mov    bh,0xa4
  402b8b:	mov    edx,0xe761a920
  402b90:	data16 cmp al,0x36
  402b93:	mov    DWORD PTR ds:0x6abfa97b,esi
  402b99:	fisttp WORD PTR [ebx]
  402b9b:	pop    ebx
  402b9c:	je     0x402b9a
  402b9e:	push   edi
  402b9f:	ror    BYTE PTR ds:0x73318c3b,1
  402ba5:	mov    edx,0xd6ac3dba
  402baa:	inc    ecx
  402bab:	jb     0x402b6b
  402bad:	pop    ebp
  402bae:	mov    ebp,0x9964c755
  402bb3:	mov    ds:0x58aec3e0,al
  402bb8:	xor    eax,DWORD PTR [eax-0x71]
  402bbb:	test   BYTE PTR [ebp+edx*1+0x3fedfb71],dh
  402bc2:	ret    0x57ce
  402bc5:	ret    
  402bc6:	jg     0x402b8a
  402bc8:	inc    eax
  402bc9:	sahf   
  402bca:	xor    DWORD PTR [eax-0x3d],ecx
  402bcd:	sbb    BYTE PTR [esi-0x2],al
  402bd0:	dec    esp
  402bd1:	dec    edi
  402bd2:	data16 mov al,ds:0x25ae64b1
  402bd8:	xchg   ecx,eax
  402bd9:	and    al,0xca
  402bdb:	inc    ebx
  402bdc:	stc    
  402bdd:	cli    
  402bde:	and    ch,BYTE PTR [edx]
  402be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402be1:	dec    ebx
  402be2:	sub    BYTE PTR [edx],ah
  402be4:	push   0x80325f24
  402be9:	dec    eax
  402bea:	punpcklbw mm1,DWORD PTR [eax+0x3]
  402bee:	iret   
  402bef:	(bad)  [edx-0x29]
  402bf2:	inc    esi
  402bf3:	jae    0x402b9e
  402bf5:	les    eax,FWORD PTR [ecx-0x73f24b09]
  402bfb:	push   0x46
  402bfd:	add    eax,DWORD PTR [ecx-0xbf1b173]
  402c03:	jl     0x402bf5
  402c05:	scas   eax,DWORD PTR es:[edi]
  402c06:	rol    DWORD PTR [esi+0x795d0f5],cl
  402c0c:	sub    DWORD PTR [ebx+0x12],edx
  402c0f:	and    BYTE PTR [edi-0x133892ba],bh
  402c15:	(bad)  
  402c16:	push   ecx
  402c17:	lods   eax,DWORD PTR ds:[esi]
  402c18:	push   DWORD PTR [eax-0x73]
  402c1b:	mov    edx,gs
  402c1d:	push   ebx
  402c1e:	(bad)  
  402c1f:	inc    edx
  402c20:	or     ebp,DWORD PTR [edi+0x40]
  402c23:	jg     0x402c3f
  402c25:	add    eax,0x2e12e837
  402c2a:	sti    
  402c2b:	mov    bh,0x5
  402c2d:	je     0x402cac
  402c2f:	mov    BYTE PTR [esi-0x3943aef6],bl
  402c35:	outs   dx,DWORD PTR ds:[esi]
  402c36:	nop
  402c37:	jne    0xc6b806fd
  402c3d:	sbb    dl,al
  402c3f:	sbb    bh,BYTE PTR [ecx+ebp*8-0xf]
  402c43:	ret    0xfee9
  402c46:	add    cl,BYTE PTR [ebx-0x1f]
  402c49:	inc    edi
  402c4a:	idiv   BYTE PTR [edx+0x7b]
  402c4d:	xlat   BYTE PTR ds:[ebx]
  402c4e:	es pusha 
  402c50:	ja     0x402c0b
  402c52:	pusha  
  402c53:	jge    0x402ca7
  402c55:	cdq    
  402c56:	or     bh,BYTE PTR [ebx]
  402c58:	dec    esi
  402c59:	mov    BYTE PTR [edx-0x250917f3],ch
  402c5f:	mov    dh,0xd1
  402c61:	inc    ecx
  402c62:	adc    BYTE PTR ds:0x3ec15484,0x98
  402c69:	mov    ebp,0x3c262cc3
  402c6e:	dec    ebp
  402c6f:	mov    esi,cs
  402c71:	mov    ch,0x99
  402c73:	and    edi,DWORD PTR [edi-0x6d]
  402c76:	sbb    ch,BYTE PTR [esi]
  402c78:	push   ds
  402c79:	sbb    BYTE PTR [ebx-0x36],0xd4
  402c7d:	mov    edi,0x85fac44b
  402c82:	inc    ecx
  402c83:	ja     0x402c10
  402c85:	mov    DWORD PTR [edx+0x24],eax
  402c88:	mov    ebx,0x65518aae
  402c8d:	in     eax,dx
  402c8e:	xchg   edi,eax
  402c8f:	ret    0x2456
  402c92:	mov    eax,ds:0x7091c647
  402c97:	fidivr DWORD PTR [ecx-0x260998d4]
  402c9d:	jne    0x402d05
  402c9f:	stos   DWORD PTR es:[edi],eax
  402ca0:	cmp    dl,bh
  402ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ca3:	scas   eax,DWORD PTR es:[edi]
  402ca4:	pop    edi
  402ca5:	jge    0x402c8c
  402ca7:	sti    
  402ca8:	adc    DWORD PTR [eax-0x20],ebp
  402cab:	(bad)  
  402cad:	aam    0x9b
  402caf:	das    
  402cb0:	mov    ebp,0xba44cc2c
  402cb5:	cmp    eax,0x63ffac85
  402cba:	dec    edi
  402cbb:	mov    es,esp
  402cbd:	cmp    ah,dl
  402cbf:	call   0xda75054d
  402cc4:	fwait
  402cc5:	das    
  402cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc7:	and    DWORD PTR [esi],eax
  402cc9:	ds sbb al,0xd1
  402ccc:	ficom  DWORD PTR [edx]
  402cce:	inc    eax
  402ccf:	pop    ebp
  402cd0:	and    DWORD PTR [edi-0x20ba00d7],ecx
  402cd6:	jp     0x402c5f
  402cd8:	int3   
  402cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cda:	std    
  402cdb:	push   cs
  402cdc:	push   ss
  402cdd:	adc    al,0xb2
  402cdf:	in     eax,0x5f
  402ce1:	pop    ebp
  402ce2:	dec    esi
  402ce3:	dec    ebx
  402ce4:	jle    0x402d41
  402ce6:	out    0xf9,al
  402ce8:	mov    bl,0x60
  402cea:	jmp    0x402c91
  402cec:	jb     0x402cbd
  402cee:	dec    ebx
  402cef:	std    
  402cf0:	xor    bl,al
  402cf2:	push   ebp
  402cf3:	xor    al,0xa6
  402cf5:	dec    eax
  402cf6:	pop    ecx
  402cf7:	push   es
  402cf8:	dec    ebx
  402cf9:	jmp    FWORD PTR [esi]
  402cfb:	loopne 0x402cc3
  402cfd:	mov    cs,esi
  402cff:	push   edx
  402d00:	mov    ebx,0xa237b19f
  402d05:	stos   DWORD PTR es:[edi],eax
  402d06:	mov    ecx,DWORD PTR [esi-0x71ea3e44]
  402d0c:	neg    BYTE PTR [eax]
  402d0e:	push   esp
  402d0f:	mov    ds:0xab68f6dc,al
  402d14:	ds aad 0x58
  402d17:	fsubr  DWORD PTR [ebp+ecx*2-0x6df107ba]
  402d1f:	sub    ecx,DWORD PTR [ebp+0x62]
  402d22:	fsubr  st(1),st
  402d24:	call   0x8897cb66
  402d29:	(bad)  
  402d2a:	(bad)  
  402d2b:	cmp    eax,0xcd4aa0f9
  402d30:	mov    esi,0x9bca4303
  402d35:	and    esi,DWORD PTR [ecx-0x30]
  402d38:	dec    esp
  402d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d3b:	repz inc ecx
  402d3d:	scas   eax,DWORD PTR es:[edi]
  402d3e:	cmp    BYTE PTR [edx+0x39efa7d3],dl
  402d44:	inc    eax
  402d45:	sbb    eax,0xf4263b53
  402d4a:	bound  edx,QWORD PTR [esi-0x1f]
  402d4d:	pusha  
  402d4e:	jmp    DWORD PTR [edi+ecx*2-0x54d8bd2]
  402d55:	fs data16 loop 0x402db8
  402d59:	sbb    al,dl
  402d5b:	pop    ecx
  402d5c:	(bad)  
  402d5d:	std    
  402d5e:	aaa    
  402d5f:	jno    0x402d60
  402d61:	xor    BYTE PTR [eax],ch
  402d63:	jl     0x402d3e
  402d65:	pop    ebp
  402d66:	dec    edi
  402d67:	mov    eax,ds:0x43f8e44b
  402d6c:	repnz xor al,0x16
  402d6f:	out    0x96,al
  402d71:	cli    
  402d72:	inc    ebp
  402d73:	mov    dh,0x89
  402d75:	outs   dx,BYTE PTR ds:[esi]
  402d76:	shl    DWORD PTR [ebp+0x5e60f7d0],0x57
  402d7d:	mov    edi,0xbe438472
  402d82:	jecxz  0x402d9b
  402d84:	(bad)  
  402d85:	iret   
  402d86:	(bad)  
  402d87:	jmp    0x402d97
  402d89:	jg     0x402d23
  402d8b:	or     BYTE PTR [ebx-0x23],0x6e
  402d8f:	mov    ah,0xd5
  402d91:	mov    esi,0x6e68f762
  402d96:	inc    ah
  402d98:	jae    0x402d60
  402d9a:	mov    ch,BYTE PTR [ebx+0x7b]
  402d9d:	push   ds
  402d9e:	lock je 0x402d90
  402da1:	imul   BYTE PTR [ebx-0x75]
  402da4:	in     al,0xf2
  402da6:	inc    ebx
  402da7:	jnp    0x402d6d
  402da9:	jecxz  0x402d84
  402dab:	jno    0x402e08
  402dad:	mov    edx,0x4ee91b91
  402db2:	or     esp,DWORD PTR [ebx+0x57fa2879]
  402db8:	stos   DWORD PTR es:[edi],eax
  402db9:	push   edx
  402dba:	outs   dx,BYTE PTR ds:[esi]
  402dbb:	pop    ss
  402dbc:	inc    ebp
  402dbd:	fimul  WORD PTR [edx-0x4c]
  402dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dc1:	jp     0x402de2
  402dc3:	fcmovu st,st(1)
  402dc5:	adc    eax,DWORD PTR [edx]
  402dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc8:	sub    edi,esi
  402dca:	loop   0x402d97
  402dcc:	mov    gs,WORD PTR [esi+esi*1-0x2841692f]
  402dd3:	push   0x7a2d08de
  402dd8:	out    0x42,eax
  402dda:	(bad)  
  402ddb:	pusha  
  402ddc:	loop   0x402dcf
  402dde:	xchg   ebp,eax
  402ddf:	mov    al,0x2f
  402de1:	test   BYTE PTR ds:0x75641be8,ah
  402de7:	xchg   edi,eax
  402de8:	iret   
  402de9:	push   0x5a
  402deb:	bound  ebp,QWORD PTR [edi]
  402ded:	stos   DWORD PTR es:[edi],eax
  402dee:	cmp    edi,edi
  402df0:	rcl    BYTE PTR [ebp+0x276a9519],cl
  402df6:	pop    ebx
  402df7:	lods   eax,DWORD PTR ds:[esi]
  402df8:	pop    ecx
  402df9:	out    0x9c,al
  402dfb:	dec    esi
  402dfc:	ror    DWORD PTR [ebp-0x4e8e1607],cl
  402e02:	mov    BYTE PTR ds:0x1e74b36f,dl
  402e08:	dec    eax
  402e09:	jb     0x402e13
  402e0b:	dec    edi
  402e0c:	fld    TBYTE PTR [edi+0x7aaf9dc2]
  402e12:	in     eax,dx
  402e13:	(bad)  
  402e14:	sbb    BYTE PTR [ebp-0x56143e16],bl
  402e1a:	inc    ebp
  402e1b:	jnp    0x402e72
  402e1d:	arpl   WORD PTR [ebp-0x7c3f1487],si
  402e23:	(bad)  
  402e24:	fcmovbe st,st(5)
  402e26:	mov    dh,0xd0
  402e28:	pop    esi
  402e29:	mov    eax,ds:0x46f6a38b
  402e2e:	push   ss
  402e2f:	push   eax
  402e30:	cmp    ah,al
  402e32:	or     al,0x93
  402e34:	pusha  
  402e35:	pop    esp
  402e36:	adc    eax,0x2a76e60d
  402e3b:	adc    ch,BYTE PTR [ebx+0x6dce7803]
  402e41:	hlt    
  402e42:	cdq    
  402e43:	call   0x6da6:0xf033e352
  402e4a:	lock adc BYTE PTR [ebx],dh
  402e4d:	aam    0xa3
  402e4f:	or     DWORD PTR [edx],edx
  402e51:	inc    edx
  402e52:	shl    cl,cl
  402e54:	sub    BYTE PTR [eax-0x44],bh
  402e57:	xlat   BYTE PTR fs:[ebx]
  402e59:	outs   dx,DWORD PTR cs:[esi]
  402e5b:	ins    BYTE PTR es:[edi],dx
  402e5c:	jmp    0x402eac
  402e5e:	outs   dx,DWORD PTR ds:[esi]
  402e5f:	popa   
  402e60:	rcl    DWORD PTR [esi+edx*4],cl
  402e63:	mov    dh,0xf1
  402e65:	scas   al,BYTE PTR es:[edi]
  402e66:	repz adc BYTE PTR [esi-0x2c8addcf],dh
  402e6d:	pop    ebx
  402e6e:	mov    bh,0x1a
  402e70:	out    0x46,al
  402e72:	adc    DWORD PTR [edx],eax
  402e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e75:	pop    ecx
  402e76:	add    edi,DWORD PTR [esi]
  402e78:	jle    0x402e66
  402e7a:	sub    ebp,edi
  402e7c:	div    dh
  402e7e:	jae    0x402e97
  402e80:	rol    bh,cl
  402e82:	mov    ebx,ebx
  402e84:	sbb    BYTE PTR [eax+ebx*8-0x39],bh
  402e88:	dec    eax
  402e89:	(bad)  
  402e8a:	push   edx
  402e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e8c:	fcmovb st,st(2)
  402e8e:	xchg   ebp,eax
  402e8f:	fmul   QWORD PTR [ecx]
  402e91:	push   ss
  402e92:	sub    eax,ebp
  402e94:	cs push esi
  402e96:	push   ebx
  402e97:	fwait
  402e98:	inc    ebp
  402e99:	cmc    
  402e9a:	sahf   
  402e9b:	fsubr  DWORD PTR fs:[esi]
  402e9f:	repz jmp 0x402e23
  402ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea3:	enter  0x9d60,0x28
  402ea7:	dec    eax
  402ea8:	mov    edx,0xd75b3b27
  402ead:	lea    edi,[ebp-0x6b]
  402eb0:	cld    
  402eb1:	jnp    0x402f32
  402eb3:	das    
  402eb4:	test   eax,0x7717fb0f
  402eba:	mov    edi,0x27ab1191
  402ebf:	addr16 jne 0x402eae
  402ec2:	jp     0x402eeb
  402ec4:	mov    cl,0xb3
  402ec6:	pusha  
  402ec7:	test   BYTE PTR [edx],bh
  402ec9:	frstor [ebx-0x18]
  402ecc:	sub    al,0xe7
  402ece:	pop    ecx
  402ecf:	xchg   BYTE PTR [edx+0x193ba186],bl
  402ed5:	test   bh,bh
  402ed7:	stos   BYTE PTR es:[edi],al
  402ed8:	add    eax,0x9aef6a4d
  402edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ede:	and    al,0xfb
  402ee0:	dec    esi
  402ee1:	adc    DWORD PTR [eax],ecx
  402ee3:	cli    
  402ee4:	sub    eax,DWORD PTR [edi]
  402ee6:	mov    al,BYTE PTR [edx-0x77]
  402ee9:	ret    0x7791
  402eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eed:	in     al,0x43
  402eef:	ins    BYTE PTR es:[edi],dx
  402ef0:	pop    ebp
  402ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ef2:	fst    DWORD PTR [esi+0x573f1463]
  402ef8:	xor    bl,bl
  402efa:	data16 mov ah,0x2a
  402efd:	mov    bh,0x2d
  402eff:	jno    0x402f63
  402f01:	or     BYTE PTR [ebp-0x13],al
  402f04:	mov    eax,0xdad23508
  402f09:	inc    esi
  402f0a:	lahf   
  402f0b:	int    0x8f
  402f0d:	dec    edi
  402f0e:	add    al,bl
  402f10:	inc    edi
  402f11:	cmp    BYTE PTR [esi-0x5f],0x65
  402f15:	ret    0xb3a5
  402f18:	add    esp,DWORD PTR [esi]
  402f1a:	(bad)  
  402f1b:	cs stos DWORD PTR es:[edi],eax
  402f1d:	or     esi,ecx
  402f1f:	(bad)  
  402f20:	frstor [edi]
  402f22:	int    0x7d
  402f24:	xlat   BYTE PTR ds:[ebx]
  402f25:	out    0xf0,eax
  402f27:	sar    DWORD PTR ds:0xe36e065d,1
  402f2d:	or     al,0x63
  402f2f:	(bad)  
  402f30:	(bad)  
  402f31:	fwait
  402f32:	add    ch,dh
  402f34:	lea    ebx,[ebx+0x46]
  402f37:	jno    0x402ebf
  402f39:	mov    edx,0xc19747ae
  402f3e:	ins    DWORD PTR es:[edi],dx
  402f3f:	imul   esp,esi,0xa6c5b4d4
  402f45:	es xchg ebp,eax
  402f47:	outs   dx,DWORD PTR ds:[esi]
  402f48:	ror    DWORD PTR [eax],cl
  402f4a:	in     al,dx
  402f4b:	mov    ch,0x56
  402f4d:	jmp    0xbe3e:0xba8376d6
  402f54:	ror    DWORD PTR [edx-0x9],1
  402f57:	push   0x3a570b97
  402f5c:	inc    ecx
  402f5d:	jbe    0x402ee7
  402f5f:	push   edx
  402f60:	jecxz  0x402fca
  402f62:	inc    ebp
  402f63:	test   al,0x40
  402f65:	aaa    
  402f66:	(bad)  [edx+0x3b80dff5]
  402f6c:	xchg   BYTE PTR [edi-0x69],al
  402f6f:	rcl    BYTE PTR [eax+edx*2],1
  402f72:	stos   BYTE PTR es:[edi],al
  402f73:	ficomp WORD PTR ds:0x23bb5e1f
  402f79:	fwait
  402f7a:	push   ds
  402f7b:	aad    0x7b
  402f7d:	stos   BYTE PTR es:[edi],al
  402f7e:	int3   
  402f7f:	imul   DWORD PTR [esp+eax*8-0x3f3439bf]
  402f86:	jle    0x402f2d
  402f88:	outs   dx,DWORD PTR ds:[esi]
  402f89:	inc    edi
  402f8a:	push   ebx
  402f8b:	adc    edi,0xffffffc4
  402f8e:	add    DWORD PTR [ebx-0x63f1a7d9],esi
  402f94:	fwait
  402f95:	cdq    
  402f96:	sub    DWORD PTR [ecx-0x13b9c6c7],edi
  402f9c:	jge    0x402f7a
  402f9e:	add    BYTE PTR ds:0xe1e346ae,dl
  402fa4:	rol    BYTE PTR [esi+0x7ab72f4e],1
  402faa:	popf   
  402fab:	mov    eax,0x7fc626c8
  402fb0:	dec    edi
  402fb1:	stos   DWORD PTR es:[edi],eax
  402fb2:	mov    ch,0x4f
  402fb4:	ds out dx,al
  402fb6:	arpl   WORD PTR gs:[esi],dx
  402fb9:	or     bh,BYTE PTR [eax-0x6c]
  402fbc:	jae    0x402fab
  402fbe:	out    0x37,eax
  402fc0:	(bad)  
  402fc1:	adc    esi,DWORD PTR ds:0x49beaee1
  402fc7:	jnp    0x402f51
  402fc9:	repz cmp BYTE PTR [ebx],ah
  402fcc:	mov    edx,0x3a61a7af
  402fd1:	rcr    DWORD PTR [ebx+0x46a7e70f],0xc3
  402fd8:	imul   esi,DWORD PTR [edx],0x233bd549
  402fde:	add    BYTE PTR [edi+edx*8],cl
  402fe1:	xor    BYTE PTR [edi+0x31629c96],ah
  402fe7:	sub    eax,0x773b818f
  402fec:	pusha  
  402fed:	mov    bh,0x25
  402fef:	in     eax,0xb6
  402ff1:	(bad)  
  402ff3:	add    al,0xaf
  402ff5:	lods   eax,DWORD PTR ds:[esi]
  402ff6:	push   edx
  402ff7:	mov    ?,WORD PTR [edx-0x5eecf0ed]
  402ffd:	inc    ebx
  402ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fff:	scas   al,BYTE PTR es:[edi]
  403000:	jge    0x402fb0
  403002:	or     BYTE PTR [eax+0x64],dh
  403005:	into   
  403006:	ins    BYTE PTR es:[edi],dx
  403007:	cld    
  403008:	jno    0x402ffc
  40300a:	mov    ss,WORD PTR [ecx+eax*1-0x65]
  40300e:	or     bl,BYTE PTR [eax-0x76]
  403011:	outs   dx,BYTE PTR ds:[esi]
  403012:	cmc    
  403013:	adc    esp,DWORD PTR [ebx]
  403015:	xor    edi,esp
  403017:	aas    
  403018:	mov    ebx,0x6b28384d
  40301d:	lds    edi,FWORD PTR [edx-0x44954657]
  403023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403024:	repz mov ds:0xafaab79,eax
  40302a:	adc    DWORD PTR [edi-0x2248db52],edi
  403030:	mov    DWORD PTR [eax+0x3d],ecx
  403033:	clc    
  403034:	sbb    ebx,DWORD PTR [ecx]
  403036:	clc    
  403037:	lahf   
  403038:	imul   BYTE PTR [eax+0x1e]
  40303b:	push   ss
  40303c:	test   BYTE PTR [ebx+0x37dd1adc],0x12
  403043:	stc    
  403044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403045:	adc    BYTE PTR [ecx-0x3e],0xb
  403049:	push   esp
  40304a:	cmp    DWORD PTR [edi-0x5c],esp
  40304d:	sbb    edx,eax
  40304f:	inc    eax
  403050:	cwde   
  403051:	(bad)  
  403053:	push   edi
  403054:	in     eax,0xbe
  403056:	or     edi,ecx
  403058:	in     al,0xcb
  40305a:	and    eax,0x1aa931f2
  40305f:	xor    BYTE PTR ds:[edx],dl
  403062:	push   edi
  403063:	sub    eax,0xce326c47
  403068:	xchg   esi,eax
  403069:	mov    ebx,0xd06b6321
  40306e:	(bad)  
  40306f:	sbb    edi,DWORD PTR [ebx+0x1adf52c1]
  403075:	dec    ecx
  403076:	adc    al,0xc7
  403078:	pop    ss
  403079:	aam    0x74
  40307b:	inc    esp
  40307c:	imul   eax,DWORD PTR [ebx],0xffffffb9
  40307f:	ins    DWORD PTR es:[edi],dx
  403080:	xor    al,0x64
  403082:	into   
  403083:	mov    al,0x4c
  403085:	(bad)  
  403086:	enter  0x13c0,0x9
  40308a:	xor    al,0x7
  40308c:	(bad)  
  40308d:	idiv   DWORD PTR [ebx-0x73]
  403090:	pop    esi
  403091:	push   ds
  403092:	iret   
  403093:	aad    0xba
  403095:	adc    al,0xd4
  403097:	es call 0x16120b3b
  40309d:	mov    dl,0x2e
  40309f:	rcr    BYTE PTR [ecx],0xa2
  4030a2:	je     0x403058
  4030a4:	loop   0x403044
  4030a6:	pop    ss
  4030a7:	call   DWORD PTR [ebx+esi*4]
  4030aa:	mov    edx,0x62bbc226
  4030af:	lds    ebx,FWORD PTR [ebx]
  4030b1:	nop    esi
  4030b4:	ins    DWORD PTR es:[edi],dx
  4030b5:	aam    0x2
  4030b7:	popa   
  4030b8:	cdq    
  4030b9:	arpl   cx,cx
  4030bb:	sub    eax,0x5eace3a
  4030c0:	lds    esp,FWORD PTR [ebx+ecx*4]
  4030c3:	push   ds
  4030c4:	jmp    0xd062:0x3783aef6
  4030cb:	rcl    DWORD PTR [ebx-0x4b959778],0x8e
  4030d2:	xor    DWORD PTR [edi],0xf84d3b8b
  4030d8:	mov    esp,0x29cb4217
  4030dd:	sbb    al,0x57
  4030df:	pusha  
  4030e0:	push   es
  4030e1:	(bad)  
  4030e2:	push   eax
  4030e3:	and    DWORD PTR [edi+0x68],esi
  4030e6:	(bad)  
  4030e7:	cwde   
  4030e8:	out    dx,al
  4030e9:	push   es
  4030ea:	lahf   
  4030eb:	mov    eax,ds:0xa8d7ec8
  4030f0:	fadd   DWORD PTR [ebx]
  4030f2:	fistp  QWORD PTR [eax+eiz*1+0x1f]
  4030f6:	clc    
  4030f7:	icebp  
  4030f8:	loopne 0x40314f
  4030fa:	mul    esi
  4030fc:	inc    ebx
  4030fd:	rcl    BYTE PTR [esi+0x643b3b40],1
  403103:	sub    al,0x36
  403106:	jns    0x40313e
  403108:	(bad)  [edi+0x6c]
  40310b:	rol    DWORD PTR [esi+edi*2+0x6a289bc5],0xdc
  403113:	adc    esp,DWORD PTR [esp+edx*1+0x3b0ad190]
  40311a:	cmp    DWORD PTR [ebp+0x4da2d73a],edi
  403120:	pop    es
  403121:	sti    
  403122:	ret    0xd21
  403125:	mov    edx,eax
  403127:	shl    DWORD PTR [eax+edx*1+0x5e],1
  40312b:	mov    dl,0x95
  40312d:	in     eax,dx
  40312e:	cmp    ecx,DWORD PTR [edi]
  403130:	cwde   
  403131:	push   cs
  403132:	imul   edx,DWORD PTR [eax+0x7d],0xbae0783d
  403139:	jmp    0x4030e7
  40313b:	lods   al,BYTE PTR ds:[esi]
  40313c:	das    
  40313d:	div    DWORD PTR [eax-0x6a]
  403140:	mov    ds:0x37015520,al
  403145:	add    al,0x7c
  403147:	jb     0x40311f
  403149:	(bad)  
  40314a:	jb     0x403167
  40314c:	rcl    BYTE PTR [ebp+0x4],cl
  40314f:	jnp    0x40312c
  403151:	sbb    al,0x6a
  403153:	push   0xffffff9c
  403155:	or     DWORD PTR [eax+0x11c55f6a],ebp
  40315b:	(bad)  
  40315c:	fld    TBYTE PTR [ebx-0x41cb73ef]
  403162:	ror    DWORD PTR [ebx],0x17
  403165:	push   esi
  403166:	mov    gs,ebp
  403168:	rcr    BYTE PTR [ebp+0x7f],0x22
  40316c:	jb     0x40317a
  40316e:	arpl   bp,dx
  403170:	idiv   BYTE PTR [edx]
  403172:	inc    esi
  403173:	dec    esp
  403174:	out    0x86,eax
  403176:	mov    ebx,0xbcf9313c
  40317b:	out    0x49,eax
  40317d:	mov    BYTE PTR [eax],bh
  40317f:	in     eax,0x4c
  403181:	mov    ah,0x61
  403183:	imul   esp,DWORD PTR [ecx],0x609442de
  403189:	and    al,0xfd
  40318b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40318c:	jns    0x40314f
  40318e:	imul   ecx,DWORD PTR [edx-0x68],0xc4ff3f45
  403195:	sub    ah,ch
  403197:	mov    ebp,0x6bc88304
  40319c:	icebp  
  40319d:	adc    al,0xf1
  40319f:	faddp  st(2),st
  4031a1:	push   ds
  4031a2:	lea    esp,[ebx+0x43]
  4031a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031a6:	mov    esp,0x6d4912d2
  4031ab:	call   0xc5c91a71
  4031b0:	inc    eax
  4031b1:	pop    ss
  4031b2:	mov    ds:0xcc4e397f,al
  4031b7:	inc    edi
  4031b8:	or     DWORD PTR [ecx-0x6668442f],esi
  4031be:	xchg   ebx,eax
  4031bf:	xchg   ebx,eax
  4031c0:	rcl    BYTE PTR [eax+0x7e],1
  4031c3:	(bad)
  4031c6:	(bad)  
  4031c7:	outs   dx,BYTE PTR ds:[esi]
  4031c8:	sbb    eax,0x3243c965
  4031cd:	imul   esp,esi,0x74
  4031d0:	in     al,dx
  4031d1:	or     esp,edi
  4031d3:	das    
  4031d4:	push   edi
  4031d5:	hlt    
  4031d6:	mov    ebx,0xf4629a4f
  4031db:	inc    BYTE PTR [eax+0x4580da4a]
  4031e1:	dec    ebp
  4031e2:	mov    cl,0xe0
  4031e4:	mov    dh,0x33
  4031e6:	push   ds
  4031e7:	push   ds
  4031e8:	cwde   
  4031e9:	jmp    FWORD PTR [ebx+ebp*4+0x4]
  4031ed:	aam    0x8f
  4031ef:	add    DWORD PTR [ecx+0x7b284e71],ecx
  4031f5:	arpl   WORD PTR es:[edi+0x1021b870],dx
  4031fc:	sbb    ecx,DWORD PTR [edx+0x29d8a11]
  403202:	call   0x4810b4ba
  403207:	dec    ecx
  403208:	sbb    eax,0xf42072d5
  40320d:	inc    edx
  40320e:	imul   esp,DWORD PTR [edi+0x53],0x21
  403212:	cli    
  403213:	add    al,0x39
  403215:	popf   
  403216:	inc    edx
  403217:	stos   BYTE PTR es:[edi],al
  403218:	pop    ebp
  403219:	rcl    DWORD PTR [ecx],0x87
  40321c:	das    
  40321d:	and    DWORD PTR [ecx+0x11f59335],edx
  403223:	imul   edx,DWORD PTR [ebx],0xb63e4ff3
  403229:	shl    BYTE PTR [ecx-0x6fd9a503],0x67
  403230:	jmp    0xe6cd:0xbe801217
  403237:	push   esi
  403238:	sbb    bh,BYTE PTR [esi+edi*8-0x2756247c]
  40323f:	inc    ebx
  403240:	int    0xf
  403242:	jg     0x4032a0
  403244:	cwde   
  403245:	adc    bl,bl
  403247:	aas    
  403248:	fsub   DWORD PTR [edx-0x17086152]
  40324e:	pop    ecx
  40324f:	inc    ebp
  403250:	mov    ebp,ebx
  403252:	sub    al,0x2b
  403254:	test   DWORD PTR [eax-0xe9c1db6],ebx
  40325a:	cli    
  40325b:	xor    eax,DWORD PTR fs:[ebp-0xf1595a7]
  403262:	sbb    ch,bl
  403264:	mov    dl,0xe6
  403266:	or     eax,0x2f76201d
  40326b:	mov    ch,0xe2
  40326d:	call   0x8e56:0x69a49e50
  403274:	jmp    0xf891:0x18fd0630
  40327b:	test   BYTE PTR [ebp-0x6],dh
  40327e:	and    eax,0xaecd87cf
  403283:	sub    edi,DWORD PTR [edx-0x17b10f42]
  403289:	in     eax,0xfd
  40328b:	je     0x40327c
  40328d:	xchg   esp,eax
  40328e:	ss xchg ecx,eax
  403290:	cld    
  403291:	inc    ebp
  403292:	sub    BYTE PTR [edi+0x158d26e],ah
  403298:	add    BYTE PTR [ebp+ebx*8-0x56],0x2e
  40329d:	test   BYTE PTR [ecx],cl
  40329f:	sbb    DWORD PTR [ebp-0x6e],esi
  4032a2:	or     dl,BYTE PTR [edi-0x78c79500]
  4032a8:	fidiv  WORD PTR ss:[ebx]
  4032ab:	inc    esi
  4032ac:	stos   BYTE PTR es:[edi],al
  4032ad:	sbb    eax,0x89201bdc
  4032b2:	jl     0x403267
  4032b4:	sbb    al,al
  4032b6:	mov    ebx,0xb1224b7d
  4032bb:	mov    esi,0x4cd1c678
  4032c0:	xchg   edi,eax
  4032c1:	stos   DWORD PTR es:[edi],eax
  4032c2:	into   
  4032c3:	adc    ecx,edx
  4032c5:	ds pop ecx
  4032c7:	mov    edi,edi
  4032c9:	jnp    0x40330a
  4032cb:	xchg   cl,dl
  4032cd:	inc    edi
  4032ce:	scas   al,BYTE PTR es:[edi]
  4032cf:	xchg   DWORD PTR [edx+esi*1],esi
  4032d2:	pop    ecx
  4032d3:	jp     0x403300
  4032d5:	fwait
  4032d6:	jge    0x4032f7
  4032d8:	clc    
  4032d9:	(bad)  
  4032da:	jmp    FWORD PTR [ebx-0xe]
  4032dd:	xor    al,0x5
  4032df:	cmp    al,0x79
  4032e1:	cli    
  4032e2:	in     al,dx
  4032e3:	push   0xcddbe554
  4032e8:	sub    edx,esp
  4032ea:	sti    
  4032eb:	loopne 0x4032dd
  4032ed:	dec    ebx
  4032ee:	dec    ebx
  4032ef:	icebp  
  4032f0:	out    0x83,eax
  4032f2:	or     ebp,DWORD PTR [ebx]
  4032f4:	dec    esi
  4032f5:	fnsave [edx-0x16405ecb]
  4032fb:	mov    dh,BYTE PTR [edi]
  4032fd:	rcr    DWORD PTR [eax-0x3c],0xed
  403301:	retf   0x87c1
  403304:	(bad)  
  403305:	cmc    
  403306:	inc    esi
  403307:	mov    dh,0x85
  403309:	mov    esi,0x62cfc43b
  40330e:	and    eax,0x7f5765fe
  403313:	inc    edx
  403314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403315:	xchg   edx,eax
  403316:	dec    eax
  403317:	or     eax,0x8d043542
  40331c:	adc    eax,0xdcdf6ab6
  403321:	ret    0x2014
  403324:	pop    ss
  403325:	inc    ebx
  403326:	and    ebx,DWORD PTR ds:0xeb2a04cf
  40332c:	dec    eax
  40332d:	cdq    
  40332e:	mov    eax,ds:0x42250466
  403333:	cmp    al,0x2
  403335:	mov    ah,0x18
  403337:	pop    ebp
  403338:	adc    ebp,DWORD PTR [ebx+0x69]
  40333b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40333c:	add    eax,0x22b4fb5
  403341:	push   eax
  403342:	add    ch,BYTE PTR [edi+0x7e868289]
  403348:	cwde   
  403349:	icebp  
  40334a:	jmp    0x40331e
  40334c:	cli    
  40334d:	out    0x6c,eax
  40334f:	fsubr  QWORD PTR [ebp+0x23426645]
  403355:	into   
  403356:	adc    al,0xfe
  403358:	adc    cl,bl
  40335a:	xchg   esi,eax
  40335b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40335c:	adc    eax,0xa02dca
  403361:	ja     0x403368
  403363:	sbb    al,0xe1
  403365:	push   esp
  403366:	aaa    
  403367:	out    dx,eax
  403368:	fiadd  DWORD PTR [edi+0x54]
  40336b:	sbb    dl,ch
  40336d:	test   ecx,0xf1d4c5cd
  403373:	inc    ebp
  403374:	and    al,0x14
  403376:	or     dl,BYTE PTR [ecx]
  403378:	jge    0x403345
  40337a:	cli    
  40337b:	cmp    eax,0x763ade24
  403380:	and    eax,0xa5e57fe0
  403385:	sbb    DWORD PTR [eax+ecx*8],ebp
  403388:	dec    ebx
  403389:	not    DWORD PTR [edi]
  40338b:	ret    
  40338c:	adc    BYTE PTR [edi+0x65],bl
  40338f:	(bad)  [edi+ecx*1]
  403392:	test   al,0x14
  403394:	lock pop esp
  403396:	xchg   edi,ebp
  403398:	in     al,dx
  403399:	push   esi
  40339a:	shr    DWORD PTR [ebp-0xf037601],cl
  4033a0:	(bad)  
  4033a1:	cmp    BYTE PTR [ebx],dl
  4033a3:	sbb    eax,DWORD PTR cs:[edi+0x2514db31]
  4033aa:	sar    ch,cl
  4033ac:	dec    edi
  4033ad:	pop    eax
  4033ae:	cmp    dl,ah
  4033b0:	jnp    0x40336b
  4033b2:	lea    edx,[eax]
  4033b4:	repz sbb ch,BYTE PTR [ebx]
  4033b7:	cmp    esp,DWORD PTR [edi]
  4033b9:	fwait
  4033ba:	inc    esi
  4033bb:	dec    esi
  4033bc:	ret    
  4033bd:	xchg   edi,eax
  4033be:	(bad)  
  4033bf:	stc    
  4033c0:	in     al,0x3d
  4033c2:	stos   DWORD PTR es:[edi],eax
  4033c3:	adc    ecx,ecx
  4033c5:	rcr    DWORD PTR ds:0x37973ac0,cl
  4033cb:	push   0x2eb09b7c
  4033d0:	pop    ecx
  4033d1:	adc    BYTE PTR [esi-0x51],dh
  4033d4:	mov    WORD PTR gs:[ecx],gs
  4033d7:	and    esp,DWORD PTR [ebp+0x74]
  4033da:	hlt    
  4033db:	mov    es,edx
  4033dd:	out    dx,al
  4033de:	add    BYTE PTR [esi],dh
  4033e0:	dec    edx
  4033e1:	pop    ss
  4033e2:	je     0x403436
  4033e4:	xchg   ecx,eax
  4033e5:	add    edi,edi
  4033e7:	call   0xf0ae11e8
  4033ec:	dec    edx
  4033ed:	sar    DWORD PTR [ebx],cl
  4033ef:	in     eax,dx
  4033f0:	mov    ch,0xff
  4033f2:	xchg   esp,eax
  4033f3:	es cmp eax,0x7ba7fbc6
  4033f9:	jle    0x403475
  4033fb:	xchg   edi,eax
  4033fc:	dec    eax
  4033fd:	cld    
  4033fe:	mov    ecx,0x58d3dd81
  403403:	arpl   WORD PTR [edx-0x792d9d09],dx
  403409:	inc    edx
  40340a:	add    esp,DWORD PTR [edi]
  40340c:	cld    
  40340d:	ret    0x314e
  403410:	and    eax,0x92978957
  403415:	ret    0xecd7
  403418:	xchg   ebx,eax
  403419:	pop    edx
  40341a:	pop    edi
  40341b:	inc    ebp
  40341c:	xchg   esi,eax
  40341d:	mov    edi,0x1fd79899
  403422:	adc    DWORD PTR [edx+ebx*4-0x39cbed07],ecx
  403429:	rol    DWORD PTR [ecx],0x63
  40342c:	popa   
  40342d:	fiadd  DWORD PTR [esi]
  40342f:	fild   WORD PTR [eax+0x7824a439]
  403435:	xchg   edx,eax
  403436:	fisub  WORD PTR [esi]
  403438:	mov    edi,0xd2a53433
  40343d:	into   
  40343e:	inc    BYTE PTR [ebx+eax*8-0x7a]
  403442:	xchg   ecx,eax
  403443:	push   es
  403444:	call   0xfd81:0x7a7caad7
  40344b:	push   edi
  40344c:	add    edx,esi
  40344e:	lock xchg esp,eax
  403450:	push   DWORD PTR [ebp-0x6ad0a97d]
  403456:	bound  edi,QWORD PTR [edx]
  403458:	adc    DWORD PTR [edi-0x44bacad1],eax
  40345e:	mov    ds:0xa9529285,al
  403463:	aam    0x73
  403465:	stos   DWORD PTR es:[edi],eax
  403466:	daa    
  403467:	mov    edx,0x5b5e13cc
  40346c:	mov    dl,0xea
  40346e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40346f:	mov    edx,DWORD PTR [edx-0x2f]
  403472:	inc    ebp
  403473:	ret    
  403474:	mov    eax,0xf2057d66
  403479:	push   ecx
  40347a:	jnp    0x40340c
  40347c:	pop    ebp
  40347d:	push   esi
  40347e:	std    
  40347f:	pop    edi
  403480:	mov    DWORD PTR [ecx+0x3f2fd889],esp
  403486:	xor    edi,DWORD PTR [edx+ebp*1-0x21a76440]
  40348d:	mov    ch,bh
  40348f:	sbb    cl,BYTE PTR [ecx+esi*1+0x6]
  403493:	js     0x403421
  403495:	mov    bh,0xc7
  403497:	inc    edi
  403498:	jle    0x4034a5
  40349a:	addr16 daa 
  40349c:	cmp    ebp,esp
  40349e:	repz pop es
  4034a0:	dec    edx
  4034a1:	jmp    0x11349060
  4034a6:	(bad)  
  4034a7:	(bad)  
  4034a8:	out    0x2f,al
  4034aa:	pop    ss
  4034ab:	repz add al,BYTE PTR [eax]
  4034ae:	add    dh,bh
  4034b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034b1:	sbb    eax,0x4476ee6f
  4034b6:	jae    0x403450
  4034b8:	shl    DWORD PTR [esi-0x1e],1
  4034bb:	mov    edx,0xcfd2ac5c
  4034c0:	mov    cs,esi
  4034c2:	cmc    
  4034c3:	jnp    0x40353f
  4034c5:	jl     0x40346b
  4034c7:	inc    ebp
  4034c8:	(bad)  
  4034ca:	sbb    ch,al
  4034cc:	shl    BYTE PTR [edx-0x12],1
  4034cf:	mov    esp,0x63eb5a58
  4034d4:	mov    dh,bl
  4034d6:	fwait
  4034d7:	pop    eax
  4034d8:	or     DWORD PTR [ecx],ecx
  4034da:	xor    al,0xb4
  4034dc:	mov    ebx,0x86c3c140
  4034e1:	cmp    dl,BYTE PTR [ebp+0x630cc0fc]
  4034e7:	stos   DWORD PTR es:[edi],eax
  4034e8:	out    0x8a,al
  4034ea:	or     BYTE PTR [edx-0x3c3b881d],dh
  4034f0:	adc    eax,0x3c4b55fb
  4034f5:	lock test eax,0xe00776e3
  4034fb:	shl    DWORD PTR [eax-0x7a],1
  4034fe:	adc    edx,ebp
  403500:	(bad)  
  403501:	jecxz  0x4034bd
  403503:	cmp    DWORD PTR [eax+edx*1-0x471c17e8],edi
  40350a:	popa   
  40350b:	adc    eax,0xe59f6585
  403510:	ins    BYTE PTR es:[edi],dx
  403511:	ds jbe 0x403519
  403514:	fs in  eax,0x71
  403517:	call   0xe84c:0x1e94a5eb
  40351e:	dec    ebx
  40351f:	jecxz  0x403546
  403521:	inc    edi
  403522:	aam    0x3b
  403524:	sbb    ecx,esi
  403526:	fist   WORD PTR [ebx+ebx*8]
  403529:	int    0x36
  40352b:	retf   
  40352c:	mov    al,0x4f
  40352f:	push   edx
  403530:	sub    al,0xeb
  403532:	dec    ebp
  403533:	sub    BYTE PTR [eax+eiz*4-0x74],bh
  403537:	push   es
  403538:	mov    ecx,0x5b5dc45c
  40353d:	push   es
  40353e:	mov    bl,0xfc
  403540:	test   BYTE PTR [edx],0x82
  403543:	sahf   
  403544:	fnstcw WORD PTR [edi]
  403546:	mov    ebp,0x6d091530
  40354b:	mov    DWORD PTR [edx+eiz*4],edi
  40354e:	push   0x87e00220
  403553:	adc    ah,cl
  403555:	sar    DWORD PTR [ecx+esi*4-0x3],1
  403559:	jo     0x4034de
  40355b:	lock stos BYTE PTR es:[edi],al
  40355d:	fs xchg esp,eax
  40355f:	sub    DWORD PTR [ebp-0x57a21a12],ebp
  403565:	mov    ch,0x31
  403567:	aas    
  403568:	out    dx,eax
  403569:	push   esi
  40356a:	jecxz  0x40352f
  40356c:	fidiv  DWORD PTR [eax+0x54ebe8c8]
  403572:	stos   DWORD PTR es:[edi],eax
  403573:	std    
  403574:	jae    0x40357a
  403576:	test   BYTE PTR [ebp+0x34],dl
  403579:	sub    cl,BYTE PTR [ecx]
  40357b:	or     esi,DWORD PTR [ebx-0x619fe869]
  403581:	repnz test dh,ah
  403584:	mov    dh,0x48
  403586:	push   edi
  403587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403588:	jb     0x403601
  40358a:	inc    DWORD PTR [ecx-0x2c7b907c]
  403590:	or     BYTE PTR [eax+0x6a045a70],dh
  403596:	add    al,0x59
  403598:	and    DWORD PTR ds:0x428e5d,0x744e
  4035a2:	sub    ecx,eax
  4035a4:	and    DWORD PTR ds:0x428e5d,0x0
  4035ae:	mov    eax,ds:0x428e5d
  4035b3:	inc    eax
  4035b4:	mov    ds:0x428e5d,eax
  4035b9:	cmp    DWORD PTR ds:0x428e5d,0x1f
  4035c0:	jge    0x4035e8
  4035c6:	jmp    0x4035db
  4035cb:	push   0x7a18
  4035d0:	push   0x1440
  4035d5:	call   DWORD PTR ds:0x42ca1c
  4035db:	cmp    DWORD PTR ds:0x428e5d,0x1b
  4035e2:	jb     0x4035ae
  4035e8:	add    ecx,DWORD PTR [ebp-0x1c]
  4035eb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4035f2:	and    DWORD PTR ds:0x428e89,0x0
  4035fc:	mov    eax,ds:0x428e89
  403601:	inc    eax
  403602:	mov    ds:0x428e89,eax
  403607:	cmp    DWORD PTR ds:0x428e89,0x25
  40360e:	jb     0x403631
  403614:	jmp    0x403624
  403619:	push   0x5d03
  40361e:	call   DWORD PTR ds:0x42ca50
  403624:	cmp    DWORD PTR ds:0x428e89,0x1d
  40362b:	jb     0x4035fc
  403631:	mov    DWORD PTR [ebp-0x18],ecx
  403634:	mov    eax,ds:0x4292e5
  403639:	mov    eax,DWORD PTR [eax]
  40363b:	or     DWORD PTR ds:0x428e99,eax
  403641:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  40364b:	and    DWORD PTR ds:0x428e29,0x0
  403655:	jmp    0x403665
  40365a:	mov    eax,ds:0x428e29
  40365f:	inc    eax
  403660:	mov    ds:0x428e29,eax
  403665:	cmp    DWORD PTR ds:0x428e29,0x13
  40366c:	jae    0x4036b6
  403672:	cmp    DWORD PTR ds:0x428e29,0x6
  403679:	jge    0x4036b6
  40367f:	jmp    0x403699
  403684:	push   0x4646
  403689:	push   0x428124
  40368e:	push   0x428ec1
  403693:	call   DWORD PTR ds:0x42ca54
  403699:	cmp    DWORD PTR ds:0x428e29,0x5
  4036a0:	jne    0x4036b1
  4036a6:	mov    eax,ds:0x428e29
  4036ab:	inc    eax
  4036ac:	mov    ds:0x428e29,eax
  4036b1:	jmp    0x40365a
  4036b6:	mov    eax,DWORD PTR [ebp-0x14]
  4036b9:	mov    DWORD PTR [ebp-0x9c],eax
  4036bf:	mov    eax,DWORD PTR [ebp-0x18]
  4036c2:	or     DWORD PTR ds:0x428e99,0x71ca
  4036cc:	mov    DWORD PTR [ebp-0x98],eax
  4036d2:	movzx  eax,WORD PTR ds:0x428e2d
  4036d9:	sub    DWORD PTR ds:0x428e8d,eax
  4036df:	mov    eax,DWORD PTR [ebp-0x2c]
  4036e2:	xor    eax,esi
  4036e4:	xor    DWORD PTR ds:0x428ec9,0x428e59
  4036ee:	add    eax,edi
  4036f0:	mov    DWORD PTR [ebp-0x94],eax
  4036f6:	lea    eax,[ebp-0x48]
  4036f9:	mov    DWORD PTR [ebp-0x90],eax
  4036ff:	adc    eax,0x53e7
  403704:	mov    eax,DWORD PTR [ebp-0xa0]
  40370a:	adc    DWORD PTR ds:0x428e2d,0x2edb
  403714:	xor    eax,esi
  403716:	sbb    DWORD PTR ds:0x428ed1,0x428e95
  403720:	add    eax,edi
  403722:	or     DWORD PTR ds:0x428e25,0x5a5f
  40372c:	mov    DWORD PTR [ebp-0xa0],eax
  403732:	not    DWORD PTR ds:0x428e49
  403738:	lea    eax,[ebp-0xa0]
  40373e:	push   eax
  40373f:	adc    DWORD PTR ds:0x428ea9,edx
  403745:	mov    eax,DWORD PTR [ebp+0xc]
  403748:	or     DWORD PTR ds:0x428e59,0x428e79
  403752:	xor    eax,esi
  403754:	or     DWORD PTR ds:0x428e81,0x24f1
  40375e:	add    eax,edi
  403760:	or     DWORD PTR ds:0x428e75,0x428e65
  40376a:	push   eax
  40376b:	or     eax,DWORD PTR ds:0x428e55
  403771:	mov    eax,ds:0x428385
  403776:	push   0x4282db
  40377b:	push   DWORD PTR [eax]
  40377d:	call   0x40854d
  403782:	and    eax,0x5bd3
  403787:	mov    ebx,DWORD PTR [ebp-0x14]
  40378a:	movzx  edx,BYTE PTR ds:0x428ed1
  403791:	sbb    edx,DWORD PTR ds:0x428e79
  403797:	mov    DWORD PTR ds:0x428ed1,edx
  40379d:	mov    eax,DWORD PTR [ebp-0x18]
  4037a0:	mov    DWORD PTR [ebp-0x58],eax
  4037a3:	mov    DWORD PTR [ebp-0x34],0xf89c8523
  4037aa:	mov    eax,0xf89c85bb
  4037af:	mov    DWORD PTR [ebp-0x1c],eax
  4037b2:	lea    ecx,[eax-0x2]
  4037b5:	or     DWORD PTR ds:0x428ea1,0x10a8
  4037bf:	mov    DWORD PTR [ebp-0x28],ecx
  4037c2:	sub    edx,0x6e70
  4037c8:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4037cf:	movzx  edx,WORD PTR ds:0x428e7d
  4037d6:	sbb    DWORD PTR ds:0x428e4d,edx
  4037dc:	mov    DWORD PTR [ebp-0x8],eax
  4037df:	sbb    eax,DWORD PTR ds:0x428e2d
  4037e5:	mov    eax,DWORD PTR [ebp-0x10]
  4037e8:	and    DWORD PTR ds:0x428eb9,0x0
  4037f2:	jmp    0x403804
  4037f7:	mov    edx,DWORD PTR ds:0x428eb9
  4037fd:	inc    edx
  4037fe:	mov    DWORD PTR ds:0x428eb9,edx
  403804:	cmp    DWORD PTR ds:0x428eb9,0x14
  40380b:	jae    0x403852
  403811:	cmp    DWORD PTR ds:0x428eb9,0xc
  403818:	jb     0x403852
  40381e:	jmp    0x403833
  403823:	push   0x428019
  403828:	push   0x7b14
  40382d:	call   DWORD PTR ds:0x42ca20
  403833:	cmp    DWORD PTR ds:0x428eb9,0xb
  40383a:	jne    0x40384d
  403840:	mov    edx,DWORD PTR ds:0x428eb9
  403846:	inc    edx
  403847:	mov    DWORD PTR ds:0x428eb9,edx
  40384d:	jmp    0x4037f7
  403852:	xor    eax,esi
  403854:	mov    edx,0xffcd8d88
  403859:	add    DWORD PTR ds:0x428eb1,0x428ec1
  403863:	sub    edx,eax
  403865:	mov    DWORD PTR ds:0x428e39,0x1fc
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  403879:	mov    DWORD PTR ds:0x428ea5,ebx
  40387f:	mov    eax,DWORD PTR [ebp-0x8]
  403882:	mov    DWORD PTR ds:0x428ec9,0x6695
  40388c:	mov    DWORD PTR [ebp-0x3c],ebx
  40388f:	cmp    eax,ecx
  403891:	mov    DWORD PTR ds:0x428e8d,0x71c
  40389b:	je     0x403bca
  4038a1:	mov    eax,DWORD PTR [ebp-0x10]
  4038a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a7:	xor    eax,esi
  4038a9:	xor    ecx,esi
  4038ab:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4038b2:	and    DWORD PTR ds:0x428e81,0x0
  4038bc:	jmp    0x4038cf
  4038c1:	xor    eax,eax
  4038c3:	add    eax,DWORD PTR ds:0x428e81
  4038c9:	inc    eax
  4038ca:	mov    ds:0x428e81,eax
  4038cf:	cmp    DWORD PTR ds:0x428e81,0x11
  4038d6:	jae    0x403909
  4038dc:	cmp    DWORD PTR ds:0x428e81,0x1e
  4038e3:	jg     0x403909
  4038e9:	jmp    0x403904
  4038ee:	push   0x6b74
  4038f3:	push   DWORD PTR [ebp-0x10]
  4038f6:	push   DWORD PTR [ebp-0x1c]
  4038f9:	push   0x7d9c
  4038fe:	call   DWORD PTR ds:0x42ca58
  403904:	jmp    0x4038c1
  403909:	mov    eax,DWORD PTR [ebp-0xc]
  40390c:	xor    edx,edx
  40390e:	or     DWORD PTR ds:0x428eb9,0x5ac4
  403918:	div    ecx
  40391a:	mov    eax,DWORD PTR [ebp-0x8]
  40391d:	sbb    DWORD PTR ds:0x428e55,0x2d6
  403927:	mov    ecx,DWORD PTR [ebp-0x10]
  40392a:	and    DWORD PTR ds:0x428e8d,0x428e9d
  403934:	xor    eax,esi
  403936:	xor    ecx,esi
  403938:	sub    eax,ecx
  40393a:	mov    DWORD PTR ds:0x428ec5,0x3e75
  403944:	cmp    edx,eax
  403946:	mov    DWORD PTR ds:0x428e2d,0x53e
  403950:	jne    0x403b0b
  403956:	mov    eax,DWORD PTR [ebp-0xc]
  403959:	xor    DWORD PTR ds:0x428e45,ebx
  40395f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403966:	sub    ecx,0x200f
  40396c:	mov    eax,DWORD PTR [ebp-0x28]
  40396f:	or     ecx,DWORD PTR ds:0x428e5d
  403975:	mov    ecx,DWORD PTR [ebp-0x18]
  403978:	xor    eax,esi
  40397a:	xor    ecx,esi
  40397c:	sbb    DWORD PTR ds:0x428e8d,0x428ead
  403986:	add    eax,edi
  403988:	sbb    DWORD PTR ds:0x428e45,0x428ec9
  403992:	add    ecx,edi
  403994:	mov    BYTE PTR [ebp-0x21],dl
  403997:	mov    DWORD PTR ds:0x428ea5,0x17c
  4039a1:	cmp    eax,ecx
  4039a3:	jae    0x403a98
  4039a9:	xor    edx,0x3299
  4039af:	lea    ecx,[eax-0x3272f8]
  4039b5:	mov    DWORD PTR [ebp-0x14],ecx
  4039b8:	mov    edx,DWORD PTR [ebp-0x14]
  4039bb:	xor    edx,esi
  4039bd:	add    edx,0x7f55d8fb
  4039c3:	lea    ecx,[ebp+eax*4-0xb4]
  4039ca:	mov    DWORD PTR ds:0x428e59,0x12ce
  4039d4:	mov    DWORD PTR [ecx],edx
  4039d6:	mov    edx,DWORD PTR ds:0x428e95
  4039dc:	mov    edx,DWORD PTR [ecx]
  4039de:	cmp    edx,0x244ecb9a
  4039e4:	mov    DWORD PTR ds:0x428e99,0x3868
  4039ee:	jbe    0x403a09
  4039f4:	add    DWORD PTR ds:0x428ea1,0x428e75
  4039fe:	add    DWORD PTR [ecx],0x405fcdd
  403a04:	jmp    0x403a15
  403a09:	dec    DWORD PTR ds:0x428e99
  403a0f:	add    DWORD PTR [ecx],0xfdaf4323
  403a15:	and    DWORD PTR ds:0x428ea5,0x0
  403a1f:	jmp    0x403a31
  403a24:	mov    ecx,DWORD PTR ds:0x428ea5
  403a2a:	inc    ecx
  403a2b:	mov    DWORD PTR ds:0x428ea5,ecx
  403a31:	cmp    DWORD PTR ds:0x428ea5,0x1a
  403a38:	jae    0x403a68
  403a3e:	cmp    DWORD PTR ds:0x428ea5,0x24
  403a45:	jle    0x403a68
  403a4b:	jmp    0x403a63
  403a50:	push   0x428124
  403a55:	push   DWORD PTR [ebp-0x24]
  403a58:	push   0x8716
  403a5d:	call   DWORD PTR ds:0x42ca60
  403a63:	jmp    0x403a24
  403a68:	mov    ecx,DWORD PTR [ebp-0x18]
  403a6b:	xor    ecx,esi
  403a6d:	adc    DWORD PTR ds:0x428e49,0xcc9
  403a77:	inc    eax
  403a78:	inc    DWORD PTR [ebp-0x14]
  403a7b:	sub    DWORD PTR ds:0x428ed1,0x428e99
  403a85:	add    ecx,edi
  403a87:	cmp    eax,ecx
  403a89:	jb     0x4039b8
  403a8f:	not    DWORD PTR ds:0x428e69
  403a95:	mov    dl,BYTE PTR [ebp-0x21]
  403a98:	add    eax,DWORD PTR ds:0x428e2d
  403a9e:	mov    eax,DWORD PTR [ebp-0x34]
  403aa1:	adc    DWORD PTR ds:0x428e91,0x428e69
  403aab:	xor    al,0xb1
  403aad:	sbb    DWORD PTR ds:0x428e49,0x428e75
  403ab7:	mov    cl,0x8
  403ab9:	sub    cl,al
  403abb:	add    dl,cl
  403abd:	sub    DWORD PTR ds:0x428ea9,ecx
  403ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ac6:	sbb    DWORD PTR ds:0x428ed1,0x428e31
  403ad0:	xor    cl,0xb1
  403ad3:	xor    DWORD PTR ds:0x428ea5,0x741f
  403add:	sub    cl,0x8
  403ae0:	sub    DWORD PTR ds:0x428e39,0x428eb9
  403aea:	ror    dl,cl
  403aec:	xor    eax,eax
  403aee:	mov    eax,ds:0x4292e9
  403af3:	xor    ecx,ecx
  403af5:	add    ecx,DWORD PTR ds:0x429bd5
  403afb:	sub    eax,ecx
  403afd:	imul   eax,DWORD PTR [eax+ecx*1]
  403b01:	mov    eax,DWORD PTR [ebp-0xc]
  403b04:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b0b:	mov    DWORD PTR ds:0x428e61,0x15
  403b15:	cmp    DWORD PTR ds:0x428e61,0x0
  403b1c:	je     0x403b74
  403b22:	cmp    DWORD PTR ds:0x428e61,0x5
  403b29:	jb     0x403b74
  403b2f:	jmp    0x403b49
  403b34:	push   0x42819a
  403b39:	push   0x0
  403b3b:	push   DWORD PTR [ebp-0x18]
  403b3e:	push   0x1deb
  403b43:	call   DWORD PTR ds:0x42ca64
  403b49:	cmp    DWORD PTR ds:0x428e61,0x6
  403b50:	jne    0x403b61
  403b56:	mov    eax,ds:0x428e61
  403b5b:	dec    eax
  403b5c:	mov    ds:0x428e61,eax
  403b61:	xor    eax,eax
  403b63:	xor    eax,DWORD PTR ds:0x428e61
  403b69:	dec    eax
  403b6a:	mov    ds:0x428e61,eax
  403b6f:	jmp    0x403b15
  403b74:	mov    eax,DWORD PTR [ebp-0xc]
  403b77:	mov    ecx,DWORD PTR [ebp-0x28]
  403b7a:	sub    eax,edi
  403b7c:	xor    eax,esi
  403b7e:	cmp    eax,ecx
  403b80:	jne    0x403baa
  403b86:	mov    eax,DWORD PTR [ebp-0x8]
  403b89:	mov    ecx,DWORD PTR [ebp-0x10]
  403b8c:	xor    eax,esi
  403b8e:	xor    ecx,esi
  403b90:	sub    eax,ecx
  403b92:	sub    eax,edi
  403b94:	xor    eax,esi
  403b96:	mov    DWORD PTR [ebp-0x8],eax
  403b99:	mov    eax,DWORD PTR [ebp-0x10]
  403b9c:	xor    eax,esi
  403b9e:	mov    ecx,0xffcd8d88
  403ba3:	sub    ecx,eax
  403ba5:	jmp    0x403bb9
  403baa:	mov    eax,DWORD PTR [ebp-0x10]
  403bad:	xor    eax,esi
  403baf:	mov    ecx,0xffcd8d08
  403bb4:	sub    ecx,eax
  403bb6:	add    ecx,DWORD PTR [ebp-0xc]
  403bb9:	mov    DWORD PTR [ebp-0xc],ecx
  403bbc:	mov    eax,DWORD PTR [ebp-0x8]
  403bbf:	cmp    eax,0xf89c85b9
  403bc4:	jne    0x4038a1
  403bca:	mov    DWORD PTR [ebp-0x34],0x9
  403bd1:	mov    ecx,DWORD PTR [ebp+0x8]
  403bd4:	xor    ecx,esi
  403bd6:	add    ecx,edi
  403bd8:	jmp    0x4084e6
  403bdd:	lea    eax,[ecx+ebx*1]
  403be0:	mov    DWORD PTR [ebp-0x2c],eax
  403be3:	mov    eax,DWORD PTR [ebp-0x58]
  403be6:	sub    eax,ecx
  403be8:	mov    DWORD PTR [ebp-0x1c],eax
  403beb:	mov    eax,DWORD PTR [ebp-0x1c]
  403bee:	mov    DWORD PTR [ebp-0x14],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x2c]
  403bf4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  403bfb:	mov    DWORD PTR [ebp-0x54],eax
  403bfe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  403c05:	mov    eax,DWORD PTR [ebp-0x38]
  403c08:	xor    eax,esi
  403c0a:	add    eax,edi
  403c0c:	mov    DWORD PTR [ebp-0x10],eax
  403c0f:	mov    eax,DWORD PTR [ebp-0x38]
  403c12:	xor    eax,esi
  403c14:	add    eax,edi
  403c16:	mov    DWORD PTR [ebp-0x8],eax
  403c19:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  403c20:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c27:	mov    eax,DWORD PTR [ebp-0x38]
  403c2a:	mov    edx,DWORD PTR [ebp-0x14]
  403c2d:	xor    eax,esi
  403c2f:	add    eax,edi
  403c31:	cmp    edx,eax
  403c33:	je     0x4084da
  403c39:	mov    eax,DWORD PTR [ebp-0x20]
  403c3c:	xor    eax,esi
  403c3e:	mov    edx,0xffcd8d08
  403c43:	sub    edx,eax
  403c45:	add    edx,DWORD PTR [ebp-0x14]
  403c48:	mov    eax,DWORD PTR [ebp-0x20]
  403c4b:	mov    ebx,DWORD PTR [ebp-0x10]
  403c4e:	xor    eax,esi
  403c50:	add    eax,edi
  403c52:	imul   eax,ebx
  403c55:	cmp    eax,edx
  403c57:	ja     0x4084d7
  403c5d:	mov    edx,DWORD PTR [ebp-0x10]
  403c60:	mov    eax,DWORD PTR [ebp-0x14]
  403c63:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c66:	sub    eax,edx
  403c68:	xor    ebx,esi
  403c6a:	xor    edx,edx
  403c6c:	add    ebx,edi
  403c6e:	div    ebx
  403c70:	mov    DWORD PTR [ebp-0x8],eax
  403c73:	mov    eax,DWORD PTR [ebp-0x44]
  403c76:	mov    edx,DWORD PTR [ebp-0x8]
  403c79:	xor    eax,esi
  403c7b:	add    eax,edi
  403c7d:	cmp    edx,eax
  403c7f:	jbe    0x403c8f
  403c85:	mov    eax,DWORD PTR [ebp-0x44]
  403c88:	xor    eax,esi
  403c8a:	add    eax,edi
  403c8c:	mov    DWORD PTR [ebp-0x8],eax
  403c8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403c92:	mov    edx,DWORD PTR [ebp-0x8]
  403c95:	xor    eax,esi
  403c97:	add    eax,edi
  403c99:	imul   eax,edx
  403c9c:	mov    DWORD PTR [ebp-0x8],eax
  403c9f:	mov    eax,DWORD PTR [ebp-0x38]
  403ca2:	mov    edx,DWORD PTR [ebp-0x8]
  403ca5:	xor    eax,esi
  403ca7:	add    eax,edi
  403ca9:	cmp    edx,eax
  403cab:	je     0x4084c0
  403cb1:	mov    eax,DWORD PTR [ebp-0x8]
  403cb4:	mov    DWORD PTR [ebp-0x18],eax
  403cb7:	mov    eax,DWORD PTR [ebp-0x10]
  403cba:	add    eax,DWORD PTR [ebp-0x54]
  403cbd:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  403cc4:	mov    DWORD PTR [ebp-0x8],eax
  403cc7:	mov    eax,0xf89c85b8
  403ccc:	mov    DWORD PTR [ebp-0x28],eax
  403ccf:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  403cd6:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  403cdd:	mov    DWORD PTR [ebp-0x30],eax
  403ce0:	mov    eax,DWORD PTR [ebp-0x1c]
  403ce3:	xor    eax,esi
  403ce5:	add    eax,edi
  403ce7:	jmp    0x40847c
  403cec:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  403cf3:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  403cfa:	mov    eax,DWORD PTR [ebp-0x30]
  403cfd:	mov    edx,DWORD PTR [ebp-0xc]
  403d00:	xor    eax,esi
  403d02:	add    eax,edi
  403d04:	imul   eax,edx
  403d07:	mov    edx,DWORD PTR [ebp-0x8]
  403d0a:	mov    al,BYTE PTR [eax+edx*1]
  403d0d:	mov    BYTE PTR [ebp-0x1],al
  403d10:	mov    eax,DWORD PTR [ebp-0x30]
  403d13:	mov    edx,DWORD PTR [ebp-0xc]
  403d16:	xor    eax,esi
  403d18:	add    eax,edi
  403d1a:	imul   eax,edx
  403d1d:	mov    edx,DWORD PTR [ebp-0x5c]
  403d20:	xor    edx,esi
  403d22:	add    eax,edx
  403d24:	mov    edx,DWORD PTR [ebp-0x8]
  403d27:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  403d2f:	mov    edx,DWORD PTR [ebp-0x4c]
  403d32:	xor    edx,esi
  403d34:	lea    eax,[edx+eax*1+0x3272f8]
  403d3b:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3f:	xor    edx,eax
  403d41:	mov    BYTE PTR [ebp-0x1],dl
  403d44:	mov    al,BYTE PTR [ebp-0x1]
  403d47:	mov    edx,DWORD PTR [ebp-0x30]
  403d4a:	mov    ebx,DWORD PTR [ebp-0xc]
  403d4d:	xor    edx,esi
  403d4f:	add    edx,edi
  403d51:	imul   edx,ebx
  403d54:	mov    ebx,DWORD PTR [ebp-0x8]
  403d57:	mov    BYTE PTR [edx+ebx*1],al
  403d5a:	mov    eax,DWORD PTR [ebp-0x30]
  403d5d:	mov    edx,DWORD PTR [ebp-0xc]
  403d60:	xor    eax,esi
  403d62:	add    eax,edi
  403d64:	imul   eax,edx
  403d67:	mov    edx,DWORD PTR [ebp-0x8]
  403d6a:	mov    al,BYTE PTR [eax+edx*1]
  403d6d:	mov    BYTE PTR [ebp-0x1],al
  403d70:	mov    eax,DWORD PTR [ebp-0x30]
  403d73:	jmp    0x4060ca
  403d78:	iret   
  403d79:	xor    ebp,eax
  403d7b:	jne    0x403de2
  403d7d:	jns    0x403dee
  403d7f:	cmp    edx,edi
  403d81:	mov    ecx,0xf60e0752
  403d86:	setge  BYTE PTR [ebp-0x4a848462]
  403d8d:	sahf   
  403d8e:	jnp    0x403e0b
  403d90:	pushf  
  403d91:	repnz mov al,0xd5
  403d94:	fwait
  403d95:	sahf   
  403d96:	xor    eax,0x5469046
  403d9b:	jo     0x403d44
  403d9d:	jne    0x403de5
  403d9f:	jmp    0x8363ec32
  403da4:	(bad)  [ebp+0x2e0fbb62]
  403daa:	cmp    ah,dh
  403dac:	dec    ebx
  403dad:	jle    0x403e19
  403daf:	sti    
  403db0:	shl    BYTE PTR [edx+0x4b],cl
  403db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403db4:	mov    cl,0x4f
  403db6:	sub    BYTE PTR [edx+ebx*8-0x53],ah
  403dba:	push   ss
  403dbb:	jle    0x403d6b
  403dbd:	xchg   esp,eax
  403dbe:	jl     0x403d88
  403dc0:	test   DWORD PTR [esi+0x7f60c878],eax
  403dc6:	xchg   BYTE PTR [edx+0x4b],cl
  403dc9:	dec    esi
  403dca:	sub    DWORD PTR [eax],eax
  403dcc:	test   eax,edx
  403dce:	mov    dl,0xa1
  403dd0:	(bad)  
  403dd1:	cmp    al,0x55
  403dd3:	in     al,dx
  403dd4:	jge    0x403d93
  403dd6:	aad    0x21
  403dd8:	iret   
  403dd9:	jno    0x403d69
  403ddb:	aad    0xf3
  403ddd:	mov    cs,eax
  403ddf:	adc    al,0xb
  403de1:	pop    edi
  403de2:	test   al,0xf5
  403de4:	movhps QWORD PTR [ecx+edi*2-0x3a58aeda],xmm6
  403dec:	iret   
  403ded:	ror    BYTE PTR [edi+0x49],0x19
  403df1:	jae    0x403e33
  403df3:	sub    BYTE PTR [eax],ch
  403df5:	out    0xc8,eax
  403df7:	sub    BYTE PTR [edx+0x34],bl
  403dfa:	cmp    esi,esi
  403dfc:	ficom  WORD PTR [ebx+0x26]
  403dff:	(bad)  
  403e00:	std    
  403e01:	adc    BYTE PTR [esi-0x1efa20ee],bl
  403e07:	rcl    BYTE PTR [ecx+edx*8],cl
  403e0a:	adc    BYTE PTR [esi-0x3682f6c0],cl
  403e10:	ja     0x403e0a
  403e12:	popa   
  403e13:	jge    0x403df6
  403e15:	out    dx,al
  403e16:	pusha  
  403e17:	add    al,0x1c
  403e19:	repz (bad) 
  403e1b:	jae    0x403e84
  403e1d:	inc    edi
  403e1e:	mov    al,ds:0x42dc9902
  403e23:	xchg   ebp,eax
  403e24:	xchg   BYTE PTR [edi-0x395deb77],cl
  403e2a:	loopne 0x403e19
  403e2c:	pop    edi
  403e2d:	lods   eax,DWORD PTR ds:[esi]
  403e2e:	sub    al,BYTE PTR ds:0xa7e7cdaf
  403e34:	xchg   ebp,eax
  403e35:	pop    eax
  403e36:	jbe    0x403e2a
  403e38:	mov    BYTE PTR [ebp-0x2c26f494],ch
  403e3e:	ret    
  403e3f:	xchg   ecx,eax
  403e40:	add    BYTE PTR [ecx-0x6e],dh
  403e43:	clc    
  403e44:	jecxz  0x403dea
  403e46:	sar    DWORD PTR ds:0xf029f45f,cl
  403e4c:	mov    ch,0xc3
  403e4e:	push   esi
  403e4f:	sti    
  403e50:	or     DWORD PTR [edi],esp
  403e52:	adc    ah,BYTE PTR [edx]
  403e54:	xchg   esp,eax
  403e55:	jmp    0x983b:0x7339d8a
  403e5c:	fbld   TBYTE PTR [esi]
  403e5e:	ret    0xd564
  403e61:	test   dh,0x59
  403e64:	and    esp,edx
  403e66:	add    ebp,DWORD PTR [esi+0x63]
  403e69:	mov    esp,0xf6ddf0d3
  403e6e:	popf   
  403e6f:	push   ss
  403e70:	std    
  403e71:	inc    ecx
  403e72:	(bad)  
  403e73:	lock add ebp,esp
  403e76:	std    
  403e77:	in     al,0xff
  403e79:	mov    esi,0xaac17211
  403e7e:	push   ebx
  403e7f:	add    BYTE PTR [esi-0x288cbe6b],0x21
  403e86:	xchg   edi,eax
  403e87:	rcl    BYTE PTR [edx+0x620097cb],cl
  403e8d:	cs cmp bh,ah
  403e90:	push   ecx
  403e91:	sub    eax,0x183a5f68
  403e96:	sahf   
  403e97:	mov    esi,0x68cf57b2
  403e9c:	mov    dh,0x11
  403e9e:	aaa    
  403e9f:	rol    BYTE PTR [edx+0x4e4b4a16],1
  403ea5:	leave  
  403ea6:	push   ecx
  403ea7:	pop    ss
  403ea8:	push   ecx
  403ea9:	cmc    
  403eaa:	data16 loop 0x403eb6
  403ead:	fwait
  403eae:	xor    al,0x46
  403eb0:	pop    ebp
  403eb1:	retf   0x6103
  403eb4:	retf   0x63f8
  403eb7:	je     0x403ef4
  403eb9:	sbb    BYTE PTR [ebx-0x48],dh
  403ebc:	fidiv  DWORD PTR [edi+0x44]
  403ebf:	outs   dx,BYTE PTR ds:[esi]
  403ec0:	push   eax
  403ec1:	dec    ebp
  403ec2:	xor    DWORD PTR [ebx-0x5451117e],ebx
  403ec8:	and    BYTE PTR [edi-0x62584384],bl
  403ece:	cs test al,0x38
  403ed1:	int3   
  403ed2:	es or  ebp,edi
  403ed5:	imul   eax,DWORD PTR [edi+0x6e42dad3],0xa2a9461d
  403edf:	cs mov ah,0x92
  403ee2:	(bad)
  403ee5:	jle    0x403f1e
  403ee7:	outs   dx,BYTE PTR ds:[esi]
  403ee8:	(bad)
  403eeb:	cwde   
  403eec:	push   ds
  403eed:	hlt    
  403eee:	(bad)  
  403eef:	jmp    0xf5907ac1
  403ef4:	dec    edx
  403ef5:	mov    dh,0x65
  403ef7:	and    DWORD PTR [ebx-0x6b],esi
  403efa:	mov    bl,0x1a
  403efc:	lea    edi,[edx-0x5906c839]
  403f02:	fs (bad) 
  403f04:	aaa    
  403f05:	das    
  403f06:	inc    edx
  403f07:	lds    ebp,FWORD PTR [ebp+0x53d6857a]
  403f0d:	sub    BYTE PTR [esp+edx*4-0x36],0x86
  403f12:	cmp    dl,ch
  403f14:	pop    ebp
  403f15:	xchg   esp,eax
  403f16:	push   edx
  403f17:	push   esp
  403f18:	gs push cs
  403f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f1b:	add    DWORD PTR [ebx+0x32],ebx
  403f1e:	repnz pop esp
  403f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f21:	fidiv  WORD PTR [eax+ebp*4-0x55439ed6]
  403f28:	(bad)  
  403f29:	push   ds
  403f2a:	not    BYTE PTR [ebp+0xf]
  403f2d:	xchg   DWORD PTR [eax],esi
  403f2f:	jle    0x403ebd
  403f31:	cwde   
  403f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f33:	mov    bl,0x66
  403f35:	fstp   TBYTE PTR [edx+0x6258e9af]
  403f3b:	loope  0x403ec2
  403f3d:	fstp   TBYTE PTR [ebp-0x47]
  403f40:	fs js  0x403f4c
  403f43:	loopne 0x403ec7
  403f45:	sbb    bh,BYTE PTR [eax-0x3]
  403f48:	in     eax,dx
  403f49:	mov    DWORD PTR [ecx-0x21],ecx
  403f4c:	push   es
  403f4d:	scas   al,BYTE PTR es:[edi]
  403f4e:	mov    bl,0x51
  403f50:	pop    esi
  403f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f52:	sbb    cl,BYTE PTR gs:[esi+0x39b87b44]
  403f59:	data16 icebp 
  403f5b:	xchg   ebp,eax
  403f5c:	lods   al,BYTE PTR ds:[esi]
  403f5d:	test   eax,0xcf5af127
  403f62:	repz mov ds:0xdc18f013,al
  403f68:	jg     0x403f72
  403f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f6b:	ins    BYTE PTR es:[edi],dx
  403f6c:	inc    ecx
  403f6d:	jo     0x403f83
  403f6f:	mov    eax,0xdd3f2aa8
  403f74:	xchg   esp,eax
  403f75:	and    DWORD PTR [ecx],eax
  403f77:	sti    
  403f78:	std    
  403f79:	inc    edi
  403f7a:	outs   dx,DWORD PTR ds:[esi]
  403f7b:	mov    cl,0x4d
  403f7d:	dec    ecx
  403f7e:	adc    al,al
  403f80:	outs   dx,DWORD PTR ds:[esi]
  403f81:	mov    esi,?
  403f83:	in     eax,0xe8
  403f85:	into   
  403f86:	enter  0xcc83,0xc6
  403f8a:	inc    ecx
  403f8b:	mov    bh,0x4a
  403f8d:	cmp    DWORD PTR [edi-0x65c1e157],eax
  403f93:	cmp    eax,ebx
  403f95:	adc    DWORD PTR [edi],eax
  403f97:	addr16 hlt 
  403f99:	push   ebx
  403f9a:	push   0x49506d82
  403f9f:	arpl   WORD PTR [esi-0x56],ax
  403fa2:	or     eax,0x93270dff
  403fa7:	mov    edx,0x3f800b11
  403fac:	(bad)  
  403fae:	ret    0x7a20
  403fb1:	cmp    DWORD PTR [ecx+0x8],esi
  403fb4:	icebp  
  403fb5:	sub    bl,BYTE PTR [eax-0x57e1d254]
  403fbb:	repz xchg ebp,eax
  403fbd:	imul   esi,DWORD PTR [edx+0xb],0x5d53418
  403fc4:	popf   
  403fc5:	mov    ds:0x9e0b67cd,al
  403fca:	mov    eax,db0
  403fcd:	push   esp
  403fce:	jp     0x403f80
  403fd0:	inc    esp
  403fd1:	add    bl,bl
  403fd3:	push   0x16
  403fd5:	nop
  403fd6:	ret    
  403fd7:	mov    ds:0x467dcdb8,al
  403fdc:	mov    al,fs:0xa99e6246
  403fe2:	aad    0xc6
  403fe4:	(bad)  
  403fe5:	lea    eax,[edi]
  403fe7:	pop    ebx
  403fe8:	sbb    eax,0x69e8f8cc
  403fed:	push   eax
  403fee:	jnp    0x403f80
  403ff0:	ds inc ebp
  403ff2:	push   ecx
  403ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff4:	sahf   
  403ff5:	mov    cl,0xf7
  403ff7:	ret    0xdcad
  403ffa:	mov    edi,0x4c98f11c
  403fff:	push   ss
  404000:	mov    esp,0x9db2de2
  404005:	cs inc esp
  404007:	adc    BYTE PTR [eax+eax*8+0x10],dh
  40400b:	jno    0x404059
  40400d:	test   dh,0x83
  404010:	pushf  
  404011:	les    eax,FWORD PTR [ecx*1-0x2d3c89fb]
  404018:	sbb    ebx,ecx
  40401a:	iret   
  40401b:	imul   edx,DWORD PTR [esi+0x5e6ed574],0xffffffcd
  404022:	cld    
  404023:	or     al,0xc7
  404025:	ds push ds
  404027:	std    
  404028:	and    al,0x76
  40402a:	popa   
  40402b:	push   eax
  40402c:	push   esp
  40402d:	jl     0x404069
  40402f:	sahf   
  404030:	jg     0x404010
  404032:	ss xor eax,0x63fd0f8f
  404038:	outs   dx,DWORD PTR ds:[esi]
  404039:	sub    ch,bh
  40403b:	aam    0xbe
  40403d:	sar    BYTE PTR [ebx+0x2d],1
  404040:	imul   ebx,DWORD PTR [esi+0x55046bcc],0x41
  404047:	pusha  
  404048:	jno    0x404022
  40404a:	nop
  40404b:	adc    al,0xb8
  40404d:	mov    ebp,0x8cbdf9e1
  404052:	adc    BYTE PTR [ebx-0x81ed073],dl
  404058:	cs in  eax,dx
  40405a:	xor    BYTE PTR [edx],bl
  40405c:	mov    bl,0x6e
  40405e:	mov    WORD PTR cs:0xb1ca466c,cs
  404065:	jecxz  0x40406c
  404067:	repnz leave 
  404069:	frstor [bp+di+0x45]
  40406d:	shr    BYTE PTR [ebx-0x64246c9c],cl
  404073:	pop    esi
  404074:	mov    ecx,0xdc67494a
  404079:	retf   0x21cb
  40407c:	pop    ebx
  40407d:	outs   dx,BYTE PTR ds:[esi]
  40407e:	cmp    esi,0x45
  404081:	retf   
  404082:	pop    ebp
  404083:	mov    esp,0x4a95af
  404088:	(bad)  
  40408a:	add    DWORD PTR [edx-0x38],edx
  40408d:	rcl    DWORD PTR [edi+0x29],cl
  404090:	retf   0x3bbe
  404093:	mov    ebp,0x9c46b305
  404098:	aaa    
  404099:	stos   DWORD PTR es:[edi],eax
  40409a:	cmc    
  40409b:	xchg   BYTE PTR [edi],ah
  40409d:	adc    ebp,esi
  40409f:	push   edi
  4040a0:	sub    eax,0x1dc2a0cb
  4040a5:	pop    edi
  4040a6:	aad    0xaf
  4040a8:	jmp    0x40410b
  4040aa:	push   ds
  4040ab:	pop    ecx
  4040ac:	dec    edx
  4040ad:	fld    QWORD PTR [eax-0x6b]
  4040b0:	push   ecx
  4040b1:	rol    bh,0xbd
  4040b4:	or     eax,0xbbc3ea2c
  4040b9:	test   BYTE PTR [edi+0x74],ch
  4040bc:	inc    eax
  4040bd:	inc    esi
  4040be:	rcr    BYTE PTR [eax+0xe],1
  4040c1:	stos   BYTE PTR es:[edi],al
  4040c2:	call   0xcc0eb867
  4040c7:	cs mov ah,0x29
  4040ca:	aaa    
  4040cb:	dec    esp
  4040cc:	xchg   esi,eax
  4040cd:	enter  0x70a2,0x52
  4040d1:	cwde   
  4040d2:	inc    eax
  4040d3:	push   edx
  4040d4:	and    DWORD PTR [edi],0xffffffcc
  4040d7:	(bad)  
  4040d8:	mov    edx,?
  4040da:	fwait
  4040db:	popa   
  4040dc:	daa    
  4040dd:	adc    edi,DWORD PTR [ebx+0x53c96fe1]
  4040e3:	cwde   
  4040e4:	xor    DWORD PTR [ecx],edi
  4040e6:	pusha  
  4040e7:	jno    0x4040c9
  4040e9:	mov    bl,0xb3
  4040eb:	cdq    
  4040ec:	cmp    edi,DWORD PTR [ecx+0xa]
  4040ef:	push   ebp
  4040f0:	ins    BYTE PTR es:[edi],dx
  4040f1:	xchg   ebp,eax
  4040f2:	inc    ebx
  4040f3:	push   cs
  4040f4:	xchg   ecx,eax
  4040f5:	lea    esi,[edi-0x5f]
  4040f8:	daa    
  4040f9:	int    0x8b
  4040fb:	mov    bh,0x5d
  4040fd:	pop    es
  4040fe:	lds    ecx,FWORD PTR [eax+0x5c7e0c09]
  404104:	loop   0x4040e7
  404106:	fs jl  0x404184
  404109:	cwde   
  40410a:	push   ecx
  40410b:	div    DWORD PTR [esi+0x737ebd93]
  404111:	loop   0x40415d
  404113:	sbb    al,BYTE PTR [esi-0x31d0ec6b]
  404119:	push   es
  40411a:	fst    DWORD PTR [ebx+0x570933]
  404120:	sbb    esp,DWORD PTR [ecx]
  404122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404123:	fistp  DWORD PTR [esi+0x4a]
  404126:	add    eax,0x356b6148
  40412b:	retf   0xf043
  40412e:	or     DWORD PTR [ecx+0xd],edx
  404131:	shr    DWORD PTR [ebx],cl
  404133:	inc    edi
  404134:	lea    ebp,[esi-0x80]
  404137:	sub    al,0xa7
  404139:	cld    
  40413a:	sub    eax,0x4f3d1167
  40413f:	xor    BYTE PTR [ecx],dl
  404141:	push   0x65d1b406
  404146:	out    dx,eax
  404147:	adc    ebp,DWORD PTR [edi+0x29]
  40414a:	xchg   ebx,eax
  40414b:	out    dx,eax
  40414c:	in     eax,dx
  40414d:	(bad)  
  40414e:	jbe    0x4040e8
  404150:	jle    0x404184
  404152:	push   edi
  404153:	sahf   
  404154:	push   ss
  404155:	add    eax,0xfe0fc45b
  40415a:	jbe    0x4040df
  40415c:	push   esi
  40415d:	and    DWORD PTR [ebx+0x6575e4e3],edi
  404163:	and    BYTE PTR [edx],ch
  404165:	call   FWORD PTR [ebp+0x56]
  404168:	sub    dl,BYTE PTR [ecx+0xb]
  40416b:	adc    DWORD PTR [ebp-0x7715c1ed],ebp
  404171:	xchg   BYTE PTR [ebp+0x39],dh
  404174:	dec    edi
  404175:	cwde   
  404176:	pop    ecx
  404177:	stos   DWORD PTR es:[edi],eax
  404178:	mov    esp,0xca2e01b3
  40417d:	jmp    0xc04c40e0
  404182:	ds jno 0x40418d
  404185:	cmp    DWORD PTR [esi-0x4898a768],esi
  40418b:	mov    edx,0x52256f1f
  404190:	jbe    0x4041bf
  404192:	mov    al,ds:0xea1ff86f
  404197:	mov    DWORD PTR [edx-0x2e],edi
  40419a:	dec    ebx
  40419b:	xchg   esp,eax
  40419c:	int3   
  40419d:	out    dx,al
  40419e:	or     al,0xf9
  4041a0:	pop    edi
  4041a1:	ret    
  4041a2:	push   cs
  4041a3:	xchg   ebp,eax
  4041a4:	ret    
  4041a5:	adc    al,BYTE PTR [edx*8-0x6c5d2bb4]
  4041ac:	mov    eax,ds:0x6a47e9c9
  4041b1:	test   eax,0xcb993dbd
  4041b6:	in     al,0x44
  4041b8:	add    eax,0x9010676e
  4041bd:	mov    ebp,DWORD PTR [esi-0x7d]
  4041c0:	jl     0x40419e
  4041c2:	push   eax
  4041c3:	add    al,0x6d
  4041c5:	arpl   WORD PTR [ebp+edi*8+0x68],sp
  4041c9:	sub    DWORD PTR [esp+eiz*2-0x2c6ee0f7],ebx
  4041d0:	lock sub BYTE PTR [esi-0x2c],0xd8
  4041d5:	nop
  4041d6:	cmp    eax,eax
  4041d8:	xchg   edi,eax
  4041d9:	push   0x6a2e459f
  4041de:	xchg   DWORD PTR [ecx+0x20882831],esp
  4041e4:	enter  0x4ed2,0xe7
  4041e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e9:	(bad)  
  4041ea:	iret   
  4041eb:	mov    eax,0xb43f5b2
  4041f0:	xchg   ecx,eax
  4041f1:	xchg   edx,eax
  4041f2:	aad    0x2
  4041f4:	cmc    
  4041f5:	imul   ebx,DWORD PTR [edx+0x6e],0x47b436dd
  4041fc:	es in  al,dx
  4041fe:	sar    DWORD PTR [edx-0x26dad329],cl
  404204:	sbb    DWORD PTR [ebx-0x26b7881b],eax
  40420a:	aaa    
  40420b:	lahf   
  40420c:	bnd jmp 0x404194
  40420f:	mov    ebx,DWORD PTR [esi-0x2a]
  404212:	sbb    BYTE PTR [esi],ch
  404214:	fcomp  DWORD PTR [edx+0x7a07ba26]
  40421a:	aad    0x13
  40421c:	mov    DWORD PTR [ebp+0x312f8c07],esi
  404222:	pop    ds
  404223:	enter  0xd4fe,0x44
  404227:	inc    ecx
  404228:	or     DWORD PTR [eax-0x15],ecx
  40422b:	and    edx,DWORD PTR [edx-0x2a]
  40422e:	xchg   esp,eax
  40422f:	ret    
  404230:	dec    edx
  404231:	sub    BYTE PTR [ecx+0x76a92ba2],0xba
  404238:	sub    eax,0x504943c9
  40423d:	inc    edi
  40423e:	cmp    esp,ebx
  404240:	pusha  
  404241:	mov    ds:0x71300393,al
  404246:	retf   
  404247:	mov    ch,0xef
  404249:	sbb    ecx,DWORD PTR [ebx+0xeec897c]
  40424f:	icebp  
  404250:	iret   
  404251:	imul   ebx,eax,0x69e4dffc
  404257:	int    0xec
  404259:	xchg   BYTE PTR [eax],dh
  40425b:	add    ebx,DWORD PTR [esi+edi*2+0xc0a6505]
  404262:	retf   
  404263:	adc    eax,0x679a51a5
  404268:	cmp    al,0x87
  40426a:	rcl    DWORD PTR [ebp-0x66],cl
  40426d:	mov    esi,0x172057b7
  404272:	call   0x7b13:0xf52a1d18
  404279:	pop    esi
  40427a:	jnp    0x4042fb
  40427c:	mov    cl,0x10
  40427e:	(bad)  
  40427f:	shl    BYTE PTR [edi+0x6a],1
  404282:	hlt    
  404283:	xor    DWORD PTR [eax-0x11],edx
  404286:	lahf   
  404287:	cmp    ah,BYTE PTR [ebx+0x6b]
  40428a:	sbb    edi,DWORD PTR [esi+0x647afca9]
  404290:	mov    BYTE PTR [ebp+0x66],bl
  404293:	pusha  
  404294:	lahf   
  404295:	out    0xe0,al
  404297:	inc    ebp
  404298:	jmp    0x961a:0x64853038
  40429f:	sbb    DWORD PTR [esi-0x2b],ebp
  4042a2:	repnz mov ds:0xfbe5f9a6,al
  4042a8:	or     ecx,ebx
  4042aa:	sbb    eax,0x9c730e1
  4042af:	mov    ah,0x2d
  4042b1:	cwde   
  4042b2:	adc    eax,0x8c87fc46
  4042b7:	aad    0xfe
  4042b9:	cmp    BYTE PTR [edi+0x2dda0359],bl
  4042bf:	mov    ds:0x3bba18df,al
  4042c4:	add    ebx,DWORD PTR [ecx]
  4042c6:	sub    DWORD PTR [ebx],esi
  4042c8:	xchg   cl,ch
  4042ca:	stc    
  4042cb:	pop    esi
  4042cc:	mov    bh,0xf9
  4042ce:	adc    eax,0xee6cd53e
  4042d3:	jno    0x404319
  4042d5:	push   ds
  4042d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d7:	dec    ebx
  4042d8:	call   0x2b1b:0x4dfcb5f4
  4042df:	stc    
  4042e0:	pushf  
  4042e1:	retf   
  4042e2:	sub    cl,BYTE PTR [ebp-0x38]
  4042e5:	mov    si,bx
  4042e8:	lods   eax,DWORD PTR ds:[esi]
  4042e9:	adc    DWORD PTR [eax],ebp
  4042eb:	aad    0xce
  4042ed:	les    edx,FWORD PTR cs:[edx+0x35705b97]
  4042f4:	jmp    0x40432c
  4042f6:	bound  edx,QWORD PTR [ebx-0x71]
  4042f9:	mov    bl,BYTE PTR [ecx+0x438b32bb]
  4042ff:	push   es
  404300:	repz mov ah,0xc6
  404303:	nop
  404304:	arpl   WORD PTR [esi-0x210f5139],si
  40430a:	cmp    al,0x59
  40430c:	push   edx
  40430d:	dec    edi
  40430e:	out    dx,eax
  40430f:	leave  
  404310:	mov    eax,ds:0xec448589
  404315:	dec    eax
  404316:	lods   al,BYTE PTR ds:[esi]
  404317:	out    0x14,al
  404319:	mov    esi,0x3635ece0
  40431e:	shr    ebx,1
  404320:	xor    eax,esi
  404322:	ret    
  404323:	fmulp  st(7),st
  404325:	shl    DWORD PTR [esi],0x30
  404328:	pop    ebp
  404329:	and    cl,al
  40432b:	xchg   esp,eax
  40432c:	shl    BYTE PTR [ecx-0xf],1
  40432f:	cmp    esp,ecx
  404331:	sbb    DWORD PTR [edi+0x54],esp
  404334:	in     al,0x20
  404336:	and    bl,BYTE PTR [ebx]
  404338:	stc    
  404339:	clc    
  40433a:	ins    DWORD PTR es:[edi],dx
  40433b:	xchg   edi,eax
  40433c:	pop    ebx
  40433d:	mov    cl,0xc7
  40433f:	cwde   
  404340:	push   esi
  404341:	mov    dl,0x5c
  404343:	fidivr WORD PTR [edi-0x6a]
  404346:	loop   0x4042d3
  404348:	hlt    
  404349:	bound  edx,QWORD PTR [edi-0x1bcd4ae0]
  40434f:	fldcw  WORD PTR [ebx+0x306d7c1b]
  404355:	ja     0x4042df
  404357:	ret    0x62a4
  40435a:	cwde   
  40435b:	mov    ecx,0xcd1a5e94
  404360:	sub    eax,0x34b79324
  404365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404366:	test   eax,0x5311042a
  40436b:	retf   
  40436c:	xor    DWORD PTR [eax+ebp*8],edi
  40436f:	push   esp
  404370:	xchg   ebp,eax
  404371:	cdq    
  404372:	outs   dx,DWORD PTR ds:[esi]
  404373:	loope  0x4043cc
  404375:	pop    ecx
  404376:	push   eax
  404377:	popf   
  404378:	stos   BYTE PTR es:[edi],al
  404379:	add    ch,bl
  40437b:	leave  
  40437c:	ficom  DWORD PTR [eax-0x535b0f38]
  404382:	sbb    ah,BYTE PTR [ecx+0x35]
  404385:	sbb    al,0x78
  404387:	addr16 lahf 
  404389:	jo     0x40436a
  40438b:	adc    dl,bl
  40438d:	add    edx,esp
  40438f:	rcl    BYTE PTR [ebx],0xc4
  404392:	xchg   ebx,eax
  404393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404394:	jno    0x404387
  404396:	inc    esi
  404397:	mov    bl,0x26
  404399:	dec    eax
  40439a:	and    al,0xf5
  40439c:	ins    BYTE PTR es:[edi],dx
  40439d:	mov    bh,bl
  40439f:	pop    ebp
  4043a0:	jns    0x4043b8
  4043a2:	mov    edi,0xe8e7ac85
  4043a7:	push   DWORD PTR es:[ebx+0x4e]
  4043ab:	mov    al,0x7c
  4043ad:	pop    edi
  4043ae:	push   esi
  4043af:	icebp  
  4043b0:	pop    edx
  4043b1:	(bad)  
  4043b2:	lock sbb ax,WORD PTR ds:[ebp-0x1eb24eba]
  4043bb:	es inc esi
  4043bd:	test   BYTE PTR [ecx+0x19bed15e],ah
  4043c3:	xchg   esi,eax
  4043c4:	test   bl,bl
  4043c6:	sbb    ch,BYTE PTR [esi+0x51]
  4043c9:	add    al,0x25
  4043cb:	xchg   ecx,eax
  4043cc:	inc    eax
  4043cd:	pop    ecx
  4043ce:	(bad)  
  4043cf:	mov    bl,0x99
  4043d1:	push   eax
  4043d2:	lea    edi,[ebp-0xd]
  4043d5:	xchg   BYTE PTR [ebx+0x23],bh
  4043d8:	add    eax,0x54d54e0c
  4043dd:	pusha  
  4043de:	mov    DWORD PTR [ebx],esp
  4043e0:	pop    esi
  4043e1:	nop
  4043e2:	cdq    
  4043e3:	pop    ebx
  4043e4:	sbb    BYTE PTR [esi-0x40],ah
  4043e7:	mov    cl,0x9f
  4043e9:	sub    BYTE PTR [eax],al
  4043eb:	mov    esi,0xec524278
  4043f0:	cs pop ds
  4043f2:	rol    BYTE PTR [edx+0x57],cl
  4043f5:	bound  eax,QWORD PTR [eax]
  4043f7:	fwait
  4043f8:	(bad)  
  4043f9:	xor    ebp,DWORD PTR [edx+0x7374c2fa]
  4043ff:	je     0x4043bc
  404401:	ror    cl,cl
  404403:	push   ebp
  404404:	mov    dh,0xdd
  404406:	jmp    0x4043ee
  404408:	xlat   BYTE PTR ds:[ebx]
  404409:	outs   dx,DWORD PTR ds:[esi]
  40440a:	test   DWORD PTR [ebp+0x3f],eax
  40440d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40440e:	mov    ah,0x93
  404410:	sbb    eax,DWORD PTR [ecx]
  404412:	mov    ds:0xae975e1d,al
  404417:	(bad)  
  404418:	and    ecx,DWORD PTR [edx-0xab5e4c2]
  40441e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40441f:	repnz pop esi
  404421:	xor    ecx,DWORD PTR [ebx+0x12]
  404424:	mov    DWORD PTR [eax+0x6b826502],0x3ee31d6c
  40442e:	das    
  40442f:	sub    eax,0xa9428200
  404434:	(bad)  
  404435:	(bad)  
  404437:	and    DWORD PTR [ecx],edi
  404439:	test   eax,0x3ceec98
  40443e:	jnp    0x404485
  404440:	mov    edi,0xaee9065e
  404445:	cwde   
  404446:	push   ds
  404447:	jo     0x40440b
  404449:	push   es
  40444a:	aad    0xd8
  40444c:	mov    bh,BYTE PTR [ebx-0x67]
  40444f:	sahf   
  404450:	jmp    0x2c2acfb1
  404455:	jno    0x40442c
  404457:	fldcw  WORD PTR [ecx+0x483433f0]
  40445d:	jae    0x40449c
  40445f:	int3   
  404460:	lods   al,BYTE PTR ds:[esi]
  404461:	jecxz  0x404407
  404463:	sar    BYTE PTR [ecx],0xce
  404466:	imul   esp,esi,0xffffffa3
  404469:	int3   
  40446a:	mov    ecx,0x87820290
  40446f:	clc    
  404470:	mov    ds:0xf04a621a,eax
  404475:	and    eax,0x6ee98041
  40447a:	pop    eax
  40447b:	cmp    BYTE PTR [esi+0x3ebecd25],al
  404481:	mov    ah,0xff
  404483:	ret    
  404484:	mov    dl,0x92
  404486:	xor    eax,0x7eed4d1d
  40448b:	add    al,0x7f
  40448d:	jl     0x4044ec
  40448f:	pop    esi
  404490:	std    
  404491:	pop    ss
  404492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404493:	call   0xec43:0x720f3588
  40449a:	inc    ecx
  40449b:	mov    esi,0xad9233af
  4044a0:	pop    ds
  4044a1:	call   0xf93c:0x60ed184e
  4044a8:	jno    0x404453
  4044aa:	jne    0x404458
  4044ac:	cdq    
  4044ad:	nop
  4044ae:	or     cl,BYTE PTR [si]
  4044b1:	aad    0xb2
  4044b3:	adc    bx,WORD PTR [ecx+0x5dd13673]
  4044ba:	or     al,0xf6
  4044bc:	mov    esi,0xee61efa6
  4044c1:	jo     0x4044fc
  4044c3:	push   ebp
  4044c4:	loope  0x404472
  4044c6:	pop    ss
  4044c7:	mov    ss,WORD PTR [ebx-0x69]
  4044ca:	popa   
  4044cb:	xchg   edi,eax
  4044cc:	mov    esp,0xdbca79ad
  4044d1:	dec    ebx
  4044d2:	rcr    DWORD PTR [edx+0x3f],1
  4044d5:	mov    eax,ds:0xddfc4324
  4044da:	pop    ebx
  4044db:	int    0x9
  4044dd:	dec    edx
  4044de:	mov    dh,0x66
  4044e0:	(bad)  [eax-0x1c]
  4044e3:	inc    edi
  4044e4:	xchg   edx,eax
  4044e5:	repz aaa 
  4044e7:	fdiv   QWORD PTR [ecx+0x1c]
  4044ea:	rol    ecx,1
  4044ec:	ds sub al,0x97
  4044ef:	jl     0x4044d1
  4044f1:	std    
  4044f2:	push   ebx
  4044f3:	inc    ecx
  4044f4:	xchg   ebx,eax
  4044f5:	mov    esp,0x1f02d469
  4044fa:	push   ebx
  4044fb:	mov    al,ds:0xa0118734
  404500:	or     eax,0x10ddaefe
  404505:	sbb    DWORD PTR [ecx],esi
  404507:	mov    ds:0x15c91950,al
  40450c:	mov    BYTE PTR [esi],ch
  40450e:	pushf  
  40450f:	mov    eax,0x1c4b863f
  404514:	mov    dl,0xf3
  404516:	pop    es
  404517:	out    dx,al
  404518:	and    DWORD PTR [esi],edi
  40451a:	xchg   ebp,eax
  40451b:	xor    eax,0xa2e7b7d9
  404520:	ret    
  404521:	aad    0xad
  404523:	push   esp
  404524:	shl    DWORD PTR [esi+0x3a],0xdf
  404528:	out    0x79,al
  40452a:	xchg   ecx,eax
  40452b:	pop    ebx
  40452c:	ss adc ecx,ebp
  40452f:	aam    0x72
  404531:	and    al,0xda
  404533:	dec    ebp
  404534:	xor    DWORD PTR [ebx+eiz*1],ebx
  404537:	inc    ecx
  404538:	pusha  
  404539:	arpl   WORD PTR [esp+eax*8-0x6d0aaa1e],sp
  404540:	inc    ebx
  404541:	sub    bl,BYTE PTR [edi+0x3a]
  404544:	(bad)  
  404545:	out    dx,eax
  404546:	call   0x396c:0xb17b8e68
  40454d:	push   0x1e
  40454f:	out    dx,eax
  404550:	pop    ecx
  404551:	inc    eax
  404552:	xor    BYTE PTR [edx+ebp*8],0xd7
  404556:	ror    BYTE PTR [ebx],cl
  404558:	popf   
  404559:	fistp  QWORD PTR [edx]
  40455b:	xor    eax,0xae12f802
  404560:	xor    BYTE PTR [ebx],bl
  404562:	popa   
  404563:	pushf  
  404564:	adc    eax,0x973778b0
  404569:	mov    ah,0xc9
  40456b:	sbb    al,0x6f
  40456d:	mov    esp,0x845c21ef
  404572:	inc    esp
  404573:	cld    
  404574:	leave  
  404575:	dec    edi
  404576:	popf   
  404577:	pop    ebp
  404578:	and    al,0x1f
  40457a:	fldenv [edx+0x49893e58]
  404580:	test   eax,0x7fc2aa9b
  404585:	pop    ebp
  404586:	xor    ah,BYTE PTR [eax+0x3a75b613]
  40458c:	out    0x9b,eax
  40458e:	mov    eax,0x8efabfb4
  404593:	push   si
  404595:	mov    bl,0xc3
  404597:	cmp    al,0x90
  404599:	daa    
  40459a:	push   0x43299b07
  40459f:	retf   
  4045a0:	xchg   esi,eax
  4045a2:	add    dh,BYTE PTR [eax+eax*8]
  4045a5:	mov    ebx,0x7e551570
  4045aa:	mov    ch,0x50
  4045ac:	fcomp  QWORD PTR [ebx+0x7f]
  4045af:	cmp    esi,0xbdb60fe6
  4045b5:	fistp  DWORD PTR [eax]
  4045b7:	adc    DWORD PTR [ebp+ecx*1-0x7ed68b33],eax
  4045be:	mov    bh,0xe6
  4045c0:	fisub  DWORD PTR [edi+0xdc44f9e]
  4045c6:	cmp    ecx,ebp
  4045c8:	jnp    0x4045e6
  4045ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045cb:	outs   dx,DWORD PTR ds:[esi]
  4045cc:	ficomp DWORD PTR [edi-0x32e2d428]
  4045d2:	stc    
  4045d3:	ret    0xc2bd
  4045d6:	fucom  st(4)
  4045d8:	inc    ebx
  4045d9:	mov    ds:0x39dc8a1b,eax
  4045de:	fdiv   DWORD PTR [ebx]
  4045e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e1:	xor    DWORD PTR [edx],edi
  4045e3:	subps  xmm4,xmm0
  4045e6:	(bad)  
  4045e7:	nop
  4045e8:	fidivr WORD PTR [ebp+eax*2-0x71]
  4045ec:	clc    
  4045ed:	pop    eax
  4045ee:	adc    ah,BYTE PTR [ebx]
  4045f0:	push   eax
  4045f1:	loope  0x404606
  4045f3:	fistp  DWORD PTR ds:0xc22f10ea
  4045f9:	dec    edx
  4045fa:	mov    dh,0x5
  4045fc:	cmp    al,0xf5
  4045fe:	adc    BYTE PTR [eax+0x41],dh
  404601:	lods   al,BYTE PTR ds:[esi]
  404602:	mov    al,ds:0x848e6c72
  404607:	dec    ecx
  404608:	dec    eax
  404609:	cmp    BYTE PTR [esi],dl
  40460b:	outs   dx,DWORD PTR ds:[esi]
  40460c:	cmp    BYTE PTR [edi+0x5a20838e],ch
  404612:	std    
  404613:	lods   eax,DWORD PTR ds:[esi]
  404614:	add    dl,dl
  404616:	jecxz  0x4045dc
  404618:	loope  0x40463c
  40461a:	imul   edi,eax,0x49
  40461d:	mov    edi,eax
  40461f:	inc    edi
  404620:	adc    al,BYTE PTR [edx]
  404622:	or     al,0x60
  404624:	jno    0x404689
  404626:	fs cld 
  404628:	leave  
  404629:	xchg   ecx,eax
  40462a:	scas   al,BYTE PTR es:[edi]
  40462b:	(bad)  
  40462c:	cmp    BYTE PTR [edx-0x3b],ch
  40462f:	daa    
  404630:	(bad)  
  404631:	push   esi
  404632:	sub    BYTE PTR [ecx],bl
  404634:	jge    0x404673
  404636:	xor    eax,0xd2e004
  40463b:	mov    eax,0x3f987c4f
  404640:	mov    BYTE PTR [esi+0x7e8df286],0x82
  404647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404648:	bsr    ecx,DWORD PTR [edi+0x43]
  40464c:	mov    ebx,0xa5c245dd
  404651:	icebp  
  404652:	lahf   
  404653:	out    dx,al
  404654:	mov    ds:0xdb2ae307,eax
  404659:	mov    DWORD PTR [edx],ebx
  40465b:	ins    BYTE PTR es:[edi],dx
  40465c:	out    dx,al
  40465d:	stos   BYTE PTR es:[edi],al
  40465e:	in     eax,0x84
  404660:	xor    edx,DWORD PTR [ebx-0x7b]
  404663:	das    
  404664:	or     al,0xd1
  404666:	fdiv   QWORD PTR [esi]
  404668:	sbb    al,0x64
  40466a:	add    edx,ebp
  40466c:	leave  
  40466d:	pusha  
  40466e:	aaa    
  40466f:	retf   0x6e18
  404672:	jmp    0xa069:0xbab31f4c
  404679:	(bad)  
  40467c:	fldenv [eax-0x11]
  40467f:	jmp    FWORD PTR [ecx-0x7a]
  404682:	not    BYTE PTR [esi]
  404684:	retf   
  404685:	data16 add al,0x7f
  404688:	cmp    edx,DWORD PTR [eax+0x1c3f2407]
  40468e:	in     al,dx
  40468f:	cli    
  404690:	ja     0x4046c3
  404692:	enter  0x78bf,0xa2
  404696:	cmp    edi,DWORD PTR [edx]
  404698:	test   DWORD PTR [ebp+esi*4-0xb],esp
  40469c:	push   es
  40469d:	mov    edx,0x7f2c7437
  4046a2:	out    0x46,eax
  4046a4:	outs   dx,BYTE PTR ds:[esi]
  4046a5:	xor    ch,BYTE PTR [ecx+0x3]
  4046a8:	ret    0x5d8e
  4046ab:	ins    BYTE PTR es:[edi],dx
  4046ac:	sbb    al,0x39
  4046ae:	pop    es
  4046af:	and    BYTE PTR [eax-0x23],al
  4046b2:	stos   BYTE PTR es:[edi],al
  4046b3:	sub    BYTE PTR [ebx],al
  4046b5:	cli    
  4046b6:	bound  ecx,QWORD PTR [edx+0x3d]
  4046b9:	inc    ebx
  4046ba:	ret    
  4046bb:	jne    0x404735
  4046bd:	popa   
  4046be:	mov    edi,0x987ea4d
  4046c3:	pop    esp
  4046c4:	adc    ecx,DWORD PTR ds:[edx-0x25]
  4046c8:	inc    eax
  4046c9:	es jg  0x40469d
  4046cc:	sar    ecx,1
  4046ce:	stc    
  4046cf:	adc    esi,edx
  4046d1:	cdq    
  4046d2:	mov    al,ds:0x66cff115
  4046d7:	stc    
  4046d8:	dec    edi
  4046d9:	pop    es
  4046da:	out    dx,al
  4046db:	sub    BYTE PTR [edx-0x62],dl
  4046de:	idiv   bh
  4046e0:	retf   
  4046e1:	cmp    eax,0x1bc0b53f
  4046e6:	sbb    al,0x89
  4046e8:	gs pop esp
  4046ea:	scas   al,BYTE PTR es:[edi]
  4046eb:	jl     0x4046b9
  4046ed:	mov    BYTE PTR [ebx+edi*4],0x9c
  4046f1:	outs   dx,DWORD PTR ds:[esi]
  4046f2:	(bad)  
  4046f3:	int    0x4e
  4046f5:	inc    ebp
  4046f6:	cwde   
  4046f7:	fdivp  st(1),st
  4046f9:	sub    eax,0x4d32fce5
  4046fe:	cmp    BYTE PTR [edx],0xab
  404701:	fidiv  DWORD PTR [ebx+esi*8+0x22]
  404705:	push   ss
  404706:	outs   dx,BYTE PTR ds:[esi]
  404707:	test   al,0xb9
  404709:	sbb    al,BYTE PTR [eax+0x6657761f]
  40470f:	cs sbb al,0xbc
  404712:	shr    al,1
  404714:	xor    DWORD PTR [esi],esp
  404716:	dec    ebx
  404717:	retf   0x4e72
  40471a:	lods   al,BYTE PTR ds:[esi]
  40471b:	shl    DWORD PTR [esi+ebp*2-0x57],1
  40471f:	pop    esp
  404720:	xchg   BYTE PTR [ecx],ch
  404722:	mov    ds:0xc4ce6c0,al
  404727:	sbb    dh,BYTE PTR [edx-0x2bf8f973]
  40472d:	add    ebp,0xffffff86
  404730:	jg     0x404776
  404732:	xor    DWORD PTR [eax],ebp
  404734:	mov    al,0x42
  404736:	dec    esi
  404737:	scas   al,BYTE PTR es:[edi]
  404738:	adc    ebp,DWORD PTR [ecx]
  40473a:	inc    esp
  40473b:	xor    eax,0x3c4422fb
  404740:	cmp    eax,0x38831fbb
  404745:	mov    ds:0xdf10470d,al
  40474a:	fsubr  DWORD PTR [edi]
  40474c:	xor    DWORD PTR [edi+0x72],0x3d
  404750:	fbstp  TBYTE PTR [ecx-0x789f6a06]
  404756:	or     esp,esi
  404758:	es pop ds
  40475a:	cs inc eax
  40475c:	gs test al,0xc9
  40475f:	pushf  
  404760:	inc    ebp
  404761:	mov    WORD PTR [edx],?
  404763:	hlt    
  404764:	or     ah,dh
  404766:	jg     0x404759
  404768:	pop    esi
  404769:	call   edx
  40476b:	loopne 0x4047d7
  40476d:	inc    ebp
  40476e:	sub    BYTE PTR [ecx-0x2247b7c0],dl
  404774:	mov    esp,0x32aafd91
  404779:	push   cs
  40477a:	jp     0x404700
  40477c:	cmp    DWORD PTR [eax],edi
  40477e:	push   esp
  40477f:	(bad)  
  404781:	icebp  
  404782:	xchg   esp,eax
  404783:	repz or ecx,esp
  404786:	fcmovb st,st(5)
  404788:	xchg   ecx,eax
  404789:	xchg   ebp,eax
  40478a:	cs retf 0x35ab
  40478e:	sbb    dl,BYTE PTR [esi]
  404790:	dec    edx
  404791:	fmul   st,st(4)
  404793:	imul   edx,DWORD PTR [edx],0xaf9c2f00
  404799:	cbw    
  40479b:	(bad)  
  40479c:	xchg   ebx,eax
  40479d:	arpl   WORD PTR [ebp+0x72],cx
  4047a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a1:	and    edx,DWORD PTR [edi+0x55d50b30]
  4047a7:	pop    ds
  4047a8:	jle    0x40480d
  4047aa:	rol    ebx,cl
  4047ac:	cs int3 
  4047ae:	lds    ecx,FWORD PTR [esi-0x59dd7a7a]
  4047b4:	ror    BYTE PTR [edi+edi*2+0x5d],1
  4047b8:	cmp    esi,eax
  4047ba:	inc    ebx
  4047bb:	test   bl,0x2e
  4047be:	arpl   WORD PTR [ecx+0x56],cx
  4047c1:	sbb    bl,BYTE PTR [ebx]
  4047c3:	jge    0x404804
  4047c5:	fs clc 
  4047c7:	ss dec ebp
  4047c9:	sub    DWORD PTR [ecx],0x8601b4a5
  4047cf:	stc    
  4047d0:	jo     0x404807
  4047d2:	ins    BYTE PTR es:[edi],dx
  4047d3:	adc    DWORD PTR [edi+0x1ed25cb5],edi
  4047d9:	jecxz  0x404822
  4047db:	xchg   edi,eax
  4047dc:	mov    bh,0x71
  4047de:	mov    ecx,0xddf26fc5
  4047e3:	xchg   BYTE PTR ds:0xa15265ce,al
  4047e9:	scas   al,BYTE PTR es:[edi]
  4047ea:	mov    WORD PTR [esi+0x19b88a08],ds
  4047f0:	or     DWORD PTR [edx+0x5d],ecx
  4047f3:	lock jl 0x4047f1
  4047f6:	inc    ecx
  4047f7:	or     al,BYTE PTR [edx+0x7a]
  4047fa:	adc    cl,al
  4047fc:	pop    ecx
  4047fd:	pop    ebp
  4047fe:	cwde   
  4047ff:	dec    ebp
  404800:	cmc    
  404801:	fst    st(4)
  404803:	std    
  404804:	pusha  
  404805:	mov    al,ds:0x21d13bb8
  40480a:	jb     0x404837
  40480c:	and    ebp,ecx
  40480e:	push   0x5e
  404810:	lea    ecx,[edi-0x4dc706db]
  404816:	fs scas eax,DWORD PTR es:[di]
  404819:	iret   
  40481a:	hlt    
  40481b:	bound  ebx,QWORD PTR [eax+ecx*2]
  40481e:	popa   
  40481f:	inc    ebp
  404820:	loope  0x40489c
  404822:	into   
  404823:	xchg   ebp,eax
  404824:	les    ecx,FWORD PTR [ecx]
  404826:	dec    ecx
  404827:	jns    0x40482b
  404829:	inc    ecx
  40482a:	iret   
  40482b:	or     al,0xda
  40482d:	shr    DWORD PTR [ecx-0x788674bf],1
  404833:	popa   
  404834:	neg    BYTE PTR [ebx]
  404836:	add    al,0x2
  404838:	loopne 0x404874
  40483a:	mov    bl,0x4a
  40483c:	mov    eax,0xeb183cda
  404841:	pop    ds
  404842:	imul   esi,ecx,0xffffffe6
  404845:	jmp    0x7cb6:0xe86dafc4
  40484c:	out    dx,eax
  40484d:	sub    bl,bh
  40484f:	add    esp,DWORD PTR [esp+ebx*4-0x61]
  404853:	mov    edi,0x409a8619
  404858:	out    0xbc,eax
  40485a:	dec    edi
  40485b:	add    eax,0x1f66e585
  404860:	xor    DWORD PTR [esi-0x3f],esp
  404863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404864:	lahf   
  404865:	stc    
  404866:	push   ecx
  404867:	nop
  404868:	adc    eax,0xe5c7f3ed
  40486d:	xchg   ecx,eax
  40486e:	and    al,0x81
  404870:	fsubr  QWORD PTR [ebx]
  404872:	and    BYTE PTR [eax],bh
  404874:	ins    BYTE PTR es:[edi],dx
  404875:	push   edx
  404876:	test   BYTE PTR [ecx+ebx*1-0x2b1d01ae],bh
  40487d:	call   edx
  40487f:	cdq    
  404880:	cwde   
  404881:	pop    es
  404882:	sbb    eax,0x8c2bae2a
  404887:	mov    al,0xd9
  404889:	cwde   
  40488a:	jmp    0x4784:0xfa3171ed
  404891:	and    BYTE PTR [edi+0x11],bh
  404894:	adc    DWORD PTR [ecx+0x69f4a73b],ebp
  40489a:	test   eax,0x11ec64c0
  40489f:	fucom  st(5)
  4048a1:	stos   BYTE PTR es:[edi],al
  4048a2:	dec    esi
  4048a3:	dec    esi
  4048a4:	push   ds
  4048a5:	xor    edx,DWORD PTR [eax+0x6d223d78]
  4048ab:	fcomi  st,st(0)
  4048ad:	mov    eax,ds:0x2650c696
  4048b2:	das    
  4048b3:	stc    
  4048b4:	call   0x769a:0x9cd5bf34
  4048bb:	push   ecx
  4048bc:	dec    esi
  4048bd:	cwde   
  4048be:	scas   eax,DWORD PTR es:[edi]
  4048bf:	push   esi
  4048c0:	(bad)  
  4048c1:	retf   0x5d01
  4048c4:	cmp    eax,0x490243fb
  4048c9:	test   eax,0x7b2269a6
  4048ce:	loopne 0x4048d2
  4048d0:	jl     0x40490b
  4048d2:	jnp    0x40491b
  4048d4:	int    0x41
  4048d6:	enter  0xc8eb,0x1c
  4048da:	push   0x71
  4048dc:	lods   eax,DWORD PTR ds:[esi]
  4048dd:	inc    edi
  4048de:	in     eax,0xf0
  4048e0:	xor    BYTE PTR [eax+0x1c],0x1f
  4048e4:	into   
  4048e5:	and    eax,0x218794db
  4048ea:	hlt    
  4048eb:	pop    edx
  4048ec:	adc    dl,ah
  4048ee:	arpl   WORD PTR [edx],dx
  4048f0:	stc    
  4048f1:	jmp    0xfcdc4301
  4048f6:	sahf   
  4048f7:	mov    eax,0x5af344fe
  4048fc:	jge    0x4048e4
  4048fe:	cwde   
  4048ff:	sahf   
  404900:	inc    ebp
  404901:	jno    0x40488b
  404903:	lods   al,BYTE PTR ds:[esi]
  404904:	inc    eax
  404905:	(bad)  
  404906:	push   ebp
  404907:	mov    BYTE PTR [ebx],cl
  404909:	push   edx
  40490a:	addr16 mov dl,0xc8
  40490d:	mov    ds:0xa86af97,al
  404912:	scas   al,BYTE PTR es:[edi]
  404913:	lock fisttp DWORD PTR [ebx-0x79c779fd]
  40491a:	jl     0x404952
  40491c:	(bad)  [ebp-0x60]
  40491f:	pop    esi
  404920:	xchg   ebx,eax
  404921:	loope  0x4048e5
  404923:	dec    ebx
  404924:	cmp    al,0x42
  404926:	lock inc ecx
  404928:	adc    BYTE PTR [eax+0x25],bl
  40492b:	sbb    BYTE PTR [ebx-0x132f7a0f],dl
  404931:	stos   BYTE PTR es:[edi],al
  404932:	gs in  eax,0x8d
  404935:	mov    dl,0xe0
  404937:	jns    0x4048d5
  404939:	lea    edi,ds:0xeebb6a1d
  40493f:	retf   
  404940:	mov    ch,BYTE PTR [ecx-0x7209e9a0]
  404946:	ins    DWORD PTR es:[edi],dx
  404947:	ins    BYTE PTR es:[edi],dx
  404948:	jae    0x404943
  40494a:	enter  0x4c61,0x6e
  40494e:	pusha  
  40494f:	sbb    ch,bl
  404951:	outs   dx,DWORD PTR ds:[esi]
  404952:	jb     0x40499a
  404954:	jne    0x404907
  404956:	addr16 iret 
  404958:	(bad)  
  404959:	xchg   esi,eax
  40495a:	rol    cl,cl
  40495c:	inc    edi
  40495d:	popa   
  40495e:	mov    al,BYTE PTR [ebp-0x28]
  404961:	mov    edx,0xc4f373d9
  404966:	push   0xdd8dde51
  40496b:	xchg   edx,eax
  40496c:	xor    bh,BYTE PTR [ebx]
  40496e:	scas   eax,DWORD PTR es:[edi]
  40496f:	ss mov eax,0x94e0c2cb
  404975:	mov    ch,0xe
  404977:	sbb    cl,BYTE PTR [ecx-0x320bec20]
  40497d:	(bad)  
  40497f:	bound  edx,QWORD PTR [edx]
  404981:	int3   
  404982:	dec    ebp
  404983:	(bad)  
  404984:	xlat   BYTE PTR ds:[ebx]
  404985:	jmp    0x40490d
  404987:	(bad)  
  404988:	hlt    
  404989:	inc    ebx
  40498a:	sbb    DWORD PTR [edx],esi
  40498c:	mov    bh,0x9b
  40498e:	(bad)  
  40498f:	mov    ebx,DWORD PTR [ebx-0x2e3d4ce4]
  404995:	xchg   edx,eax
  404996:	or     eax,0xc7f91205
  40499b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40499c:	enter  0x83da,0x4
  4049a0:	pop    edi
  4049a1:	shl    edx,0x4e
  4049a4:	out    dx,eax
  4049a5:	mov    ecx,0x1264905f
  4049aa:	(bad)  
  4049ab:	and    ecx,DWORD PTR [eax+0x8585fef]
  4049b1:	add    esi,DWORD PTR [ecx]
  4049b3:	pop    eax
  4049b4:	sbb    esi,DWORD PTR [edi]
  4049b6:	mov    al,0xff
  4049b8:	enter  0x39a7,0x5f
  4049bc:	aam    0x85
  4049be:	popa   
  4049bf:	jbe    0x4049df
  4049c1:	lea    esp,[ebp+0x28]
  4049c4:	shl    dl,cl
  4049c6:	mov    eax,ds:0xfb796526
  4049cb:	out    dx,eax
  4049cc:	pop    ebx
  4049cd:	lods   al,BYTE PTR ds:[esi]
  4049ce:	pop    ds
  4049cf:	mov    ah,0xe0
  4049d1:	shl    DWORD PTR [edx+0x76],1
  4049d4:	xchg   edx,eax
  4049d5:	add    BYTE PTR [edx+0x16],bl
  4049d8:	fidivr WORD PTR [ebp+0x12]
  4049db:	popa   
  4049dc:	in     al,dx
  4049dd:	xor    BYTE PTR ss:[edi-0x43],bh
  4049e1:	popf   
  4049e2:	mov    ebx,0x9d2cadc1
  4049e7:	pusha  
  4049e8:	adc    DWORD PTR [esi-0x40a44346],esi
  4049ee:	dec    ecx
  4049ef:	mov    cl,0x57
  4049f1:	push   ss
  4049f2:	gs rol edi,0x7d
  4049f6:	dec    edi
  4049f7:	test   BYTE PTR cs:[ebx-0x15ac4c0c],bh
  4049fe:	pop    ebx
  4049ff:	cmp    al,0x26
  404a01:	sub    esp,DWORD PTR [ebx]
  404a03:	adc    eax,0xd6f641f4
  404a08:	test   esp,esp
  404a0a:	mov    gs,edx
  404a0c:	fwait
  404a0d:	mov    edx,0x51fef78a
  404a12:	or     al,ch
  404a14:	cmp    al,0xe4
  404a16:	iret   
  404a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a18:	jae    0x4049e7
  404a1a:	aam    0xf0
  404a1c:	push   esp
  404a1d:	and    dh,BYTE PTR cs:[ecx+0x18ba0f4b]
  404a24:	add    eax,0x4364f4b7
  404a29:	jo     0x404a3b
  404a2b:	sub    BYTE PTR [ecx+ebp*4-0x77fd0689],ah
  404a32:	mov    al,0xe5
  404a34:	cmc    
  404a35:	sbb    ah,BYTE PTR [ecx+0x4289d103]
  404a3b:	adc    edi,ecx
  404a3d:	add    DWORD PTR [edx],edx
  404a3f:	(bad)  
  404a41:	push   edx
  404a42:	push   edx
  404a43:	and    eax,0x470fa96a
  404a48:	dec    esp
  404a49:	adc    DWORD PTR [edx],eax
  404a4b:	call   0xb9fa:0x9a132c0b
  404a52:	call   0x289c:0x44678c64
  404a59:	outs   dx,DWORD PTR ds:[esi]
  404a5a:	rcl    DWORD PTR [edx+0x76d0a26],1
  404a60:	fmul   DWORD PTR [esi]
  404a62:	popa   
  404a63:	mov    bl,0x26
  404a65:	add    BYTE PTR [ecx+0x31],al
  404a68:	in     eax,dx
  404a69:	leave  
  404a6a:	adc    dl,0x3d
  404a6d:	and    ebp,DWORD PTR ds:0x30f55f5d
  404a73:	loop   0x404acf
  404a75:	push   ebp
  404a76:	xor    al,dl
  404a78:	or     dl,ah
  404a7a:	cmp    ebp,DWORD PTR ds:0x44156859
  404a80:	out    dx,al
  404a81:	xlat   BYTE PTR ds:[ebx]
  404a82:	xor    eax,0xe617ed8d
  404a87:	mov    al,ds:0xb0b32f36
  404a8c:	cmp    BYTE PTR [edi-0x5e7acb24],dl
  404a92:	and    ecx,ebx
  404a94:	inc    ecx
  404a95:	gs retf 
  404a97:	mov    al,ds:0x43c00326
  404a9c:	xor    eax,0x3e758b80
  404aa1:	fcom   st(2)
  404aa3:	scas   eax,DWORD PTR es:[edi]
  404aa4:	in     al,dx
  404aa5:	dec    esp
  404aa6:	loope  0x404b25
  404aa8:	push   esp
  404aa9:	sub    BYTE PTR ds:0x78dcd37b,ah
  404aaf:	dec    ecx
  404ab0:	inc    esi
  404ab1:	sti    
  404ab2:	inc    esp
  404ab3:	popf   
  404ab4:	out    dx,eax
  404ab5:	out    dx,eax
  404ab6:	call   0x5fd6:0x9a2f76b4
  404abd:	fxch   st(3)
  404abf:	xor    al,0xb0
  404ac1:	mov    WORD PTR [ecx],ss
  404ac3:	lods   al,BYTE PTR ds:[esi]
  404ac4:	out    dx,eax
  404ac5:	fs dec esi
  404ac7:	lds    esp,FWORD PTR ds:0x180458d6
  404acd:	cmp    eax,0x4e11579f
  404ad2:	push   0x4
  404ad4:	push   ds
  404ad5:	sar    BYTE PTR [esi],cl
  404ad7:	or     eax,0x5cc88e4a
  404adc:	push   ebp
  404add:	and    bl,BYTE PTR [ecx-0x6ed27ee7]
  404ae3:	cwde   
  404ae4:	ins    DWORD PTR es:[edi],dx
  404ae5:	xor    eax,0x78759367
  404aea:	(bad)  
  404aec:	push   ebp
  404aed:	or     DWORD PTR [eax+ebx*8+0x76d66109],0xfffffffa
  404af5:	fisubr DWORD PTR [edi+0x1]
  404af8:	aad    0xc3
  404afa:	sbb    eax,esp
  404afc:	stc    
  404afd:	mov    edx,0x119b6805
  404b03:	jg     0x404b1b
  404b05:	push   esp
  404b06:	jb     0x404acd
  404b08:	xchg   DWORD PTR [esi],esi
  404b0a:	pop    esi
  404b0b:	imul   edi,DWORD PTR [eax],0x4678f1e7
  404b11:	mov    ch,0x45
  404b13:	(bad)  
  404b14:	mov    ds:0xc8842663,eax
  404b19:	test   al,0x4a
  404b1b:	out    0x20,eax
  404b1d:	and    BYTE PTR [edx+0x54],0x66
  404b21:	sub    al,0xbd
  404b23:	loope  0x404b71
  404b25:	jne    0x404aa7
  404b27:	pop    esp
  404b28:	or     cl,0x3a
  404b2b:	jle    0x404b1a
  404b2d:	cmp    al,0x7
  404b2f:	adc    eax,0x5b4da612
  404b34:	pop    ds
  404b35:	jl     0x404ac3
  404b37:	xor    eax,0x69574406
  404b3c:	push   esp
  404b3d:	or     ebx,edx
  404b3f:	rcr    DWORD PTR [ebp+0x70],1
  404b42:	fld    QWORD PTR [edi+ecx*1-0x70]
  404b46:	mov    al,BYTE PTR [edx+0x53cce1b3]
  404b4c:	ins    BYTE PTR es:[edi],dx
  404b4d:	sbb    DWORD PTR [eax+0x10],ebp
  404b50:	shl    DWORD PTR [ebx],0xd2
  404b53:	mov    WORD PTR [eax-0x4e4098bb],es
  404b59:	jo     0x404b48
  404b5b:	jns    0x404b97
  404b5d:	(bad)
  404b61:	outs   dx,BYTE PTR ds:[esi]
  404b62:	dec    edx
  404b63:	xchg   edi,eax
  404b64:	inc    esi
  404b65:	push   0xffffffbd
  404b67:	push   0xda6b1548
  404b6c:	xlat   BYTE PTR ds:[ebx]
  404b6d:	inc    edi
  404b6e:	iret   
  404b6f:	add    esi,ecx
  404b71:	mov    ecx,DWORD PTR [edi]
  404b73:	jbe    0x404b8c
  404b75:	adc    al,0xb9
  404b77:	push   esp
  404b78:	sbb    eax,0x577b86e9
  404b7d:	(bad)  
  404b7e:	mov    ds:0x170a8620,al
  404b83:	inc    edi
  404b84:	iret   
  404b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b86:	inc    edi
  404b87:	sub    BYTE PTR [ebx+esi*1],0xb8
  404b8b:	sub    al,0xb7
  404b8d:	jecxz  0x404ba6
  404b8f:	inc    ebx
  404b90:	cmp    al,0xa8
  404b92:	js     0x404bc4
  404b94:	arpl   si,si
  404b96:	lds    eax,FWORD PTR [eax]
  404b98:	fnsave [eax-0x92d77e6]
  404b9e:	push   ebx
  404b9f:	push   cs
  404ba0:	out    0x14,eax
  404ba2:	xchg   esi,eax
  404ba3:	loope  0x404b80
  404ba5:	mov    esp,0x38133423
  404baa:	lock pop esp
  404bac:	ficomp WORD PTR cs:[edi-0x7df7d062]
  404bb3:	int3   
  404bb4:	xchg   esi,eax
  404bb5:	mov    al,0x30
  404bb7:	ret    0x2c63
  404bba:	popf   
  404bbb:	dec    edx
  404bbc:	xchg   esp,eax
  404bbd:	and    edi,edx
  404bbf:	outs   dx,BYTE PTR ds:[esi]
  404bc0:	in     al,dx
  404bc1:	inc    esp
  404bc2:	add    DWORD PTR [esi],0xaab68258
  404bc8:	cs out dx,eax
  404bca:	adc    esi,DWORD PTR [ebx+0x5c26079a]
  404bd0:	in     eax,dx
  404bd1:	cmp    bl,bh
  404bd3:	mov    dl,0x24
  404bd5:	pop    es
  404bd6:	cmp    DWORD PTR [ecx-0x34],edx
  404bd9:	sbb    al,0x53
  404bdb:	dec    ebp
  404bdc:	jge    0x404c38
  404bde:	aad    0xce
  404be0:	push   0x57b6b15c
  404be5:	fld    DWORD PTR [ebp+0x614315e7]
  404beb:	adc    esi,DWORD PTR [ebx+0x68e46f77]
  404bf1:	and    eax,0xdcf86123
  404bf6:	fbstp  TBYTE PTR [eax-0x1c65efba]
  404bfc:	and    DWORD PTR [ebp-0x6d],ecx
  404bff:	je     0x404c7e
  404c01:	or     bl,ah
  404c03:	pushf  
  404c04:	mov    cl,0x35
  404c06:	retf   0x2947
  404c09:	call   0x397468d0
  404c0e:	inc    ecx
  404c0f:	repz sub DWORD PTR [esi+eiz*2-0x21],ebx
  404c14:	cmovbe eax,eax
  404c17:	mov    bh,0xa7
  404c19:	ret    
  404c1a:	(bad)
  404c1d:	inc    ebx
  404c1e:	in     al,dx
  404c1f:	scas   al,BYTE PTR es:[edi]
  404c20:	cld    
  404c21:	and    bl,BYTE PTR [ebp-0x78769ee0]
  404c27:	jecxz  0x404c0f
  404c29:	and    eax,0xb828dcc2
  404c2e:	jp     0x404c87
  404c30:	or     BYTE PTR [ebx+0x20b1660b],ah
  404c36:	fsub   QWORD PTR [edx-0x27]
  404c39:	call   0x7ade47ca
  404c3e:	cld    
  404c3f:	mov    ch,0x7d
  404c41:	jne    0x404c77
  404c43:	mov    edi,cs
  404c45:	jo     0x404c77
  404c47:	mov    BYTE PTR [eax],ch
  404c49:	mov    ds:0xa944ae56,eax
  404c4e:	inc    esi
  404c4f:	mov    BYTE PTR [edx],bh
  404c51:	jge    0x404ca1
  404c53:	jo     0x404c91
  404c55:	cwde   
  404c56:	loop   0x404cb3
  404c58:	cli    
  404c59:	inc    esi
  404c5a:	into   
  404c5b:	mov    ds:0x104a54f8,eax
  404c60:	jae    0x404c76
  404c62:	je     0x404cd8
  404c64:	push   edi
  404c65:	push   ebx
  404c66:	(bad)  
  404c67:	jbe    0x404ca1
  404c69:	or     cl,ah
  404c6b:	push   eax
  404c6c:	and    bh,BYTE PTR [eax-0x3271071f]
  404c72:	retf   0x8ac4
  404c75:	jl     0x404c91
  404c77:	iret   
  404c78:	mov    bl,0x53
  404c7a:	mov    ds:0x2727ecd,eax
  404c7f:	std    
  404c80:	pop    ss
  404c81:	daa    
  404c82:	aad    0xe7
  404c84:	rcl    BYTE PTR [eax],0x59
  404c87:	push   esp
  404c88:	cdq    
  404c89:	or     DWORD PTR [ebx],esp
  404c8b:	into   
  404c8c:	inc    ecx
  404c8d:	mov    ds:0xf57c13da,al
  404c92:	es pop eax
  404c94:	push   eax
  404c95:	(bad)  
  404c96:	fmul   st(7),st
  404c98:	loopne 0x404c2c
  404c9a:	or     esp,DWORD PTR [edx]
  404c9c:	jg     0x404c93
  404c9e:	sbb    BYTE PTR [edx],dh
  404ca0:	push   0x114eb56f
  404ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca6:	lahf   
  404ca7:	xchg   edx,eax
  404ca8:	cmc    
  404ca9:	lods   eax,DWORD PTR ds:[esi]
  404caa:	jns    0x404cde
  404cac:	dec    ecx
  404cad:	xchg   ebp,eax
  404cae:	outs   dx,BYTE PTR ds:[esi]
  404caf:	xchg   ecx,eax
  404cb0:	sub    esp,DWORD PTR [eax-0x428b68bf]
  404cb6:	aam    0xf7
  404cb8:	jecxz  0x404c5e
  404cba:	loopne 0x404c47
  404cbc:	pop    ecx
  404cbd:	inc    eax
  404cbe:	fwait
  404cbf:	push   edx
  404cc0:	push   es
  404cc1:	test   DWORD PTR [ebx-0x64],esi
  404cc4:	pushf  
  404cc5:	bound  edx,QWORD PTR [eax+0x6bdd506f]
  404ccb:	mov    dl,0x68
  404ccd:	jge    0x404c53
  404ccf:	mov    ds:0x2c83b916,eax
  404cd4:	cli    
  404cd5:	lahf   
  404cd6:	(bad)  
  404cd7:	lods   al,BYTE PTR ds:[esi]
  404cd8:	test   BYTE PTR [esi+0xa5ccbaf],ah
  404cde:	jmp    0x95ce:0xa4e8afee
  404ce5:	dec    edi
  404ce6:	cmc    
  404ce7:	pushf  
  404ce8:	in     eax,0x34
  404cea:	and    DWORD PTR ds:0x7f95e2e3,ebp
  404cf0:	xor    al,0xab
  404cf2:	push   ds
  404cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cf4:	add    esi,ecx
  404cf6:	xlat   BYTE PTR ds:[ebx]
  404cf7:	cld    
  404cf8:	js     0x404cbb
  404cfa:	xor    eax,0xc423180e
  404cff:	push   es
  404d00:	fimul  WORD PTR [esi-0x1d]
  404d03:	sub    al,0xde
  404d05:	pop    es
  404d06:	shr    edi,cl
  404d08:	xchg   DWORD PTR [edx-0x101847d0],edx
  404d0e:	ss es xchg ecx,eax
  404d11:	jl     0x404ca5
  404d13:	mov    DWORD PTR [edx-0x3b31884e],ebx
  404d19:	mov    dh,0x39
  404d1b:	(bad)  
  404d1c:	mov    al,ds:0xee710a30
  404d21:	pop    ebx
  404d22:	xchg   esp,eax
  404d23:	stos   BYTE PTR es:[edi],al
  404d24:	loopne 0x404d4e
  404d26:	pusha  
  404d27:	ins    BYTE PTR es:[edi],dx
  404d28:	jg     0x404d47
  404d2a:	or     esi,DWORD PTR [ebp+0x2ec0e107]
  404d30:	rdmsr  
  404d32:	mov    edx,0x450f33b8
  404d37:	mov    ch,BYTE PTR [ecx]
  404d39:	mov    edi,0x17fed037
  404d3e:	add    al,0x4
  404d40:	mov    ?,ebx
  404d42:	int3   
  404d43:	fst    DWORD PTR [ebx+0x7c33257f]
  404d49:	inc    di
  404d4b:	mov    bh,0x7d
  404d4d:	cmp    BYTE PTR [ebx+0x46065231],al
  404d53:	fwait
  404d54:	inc    esp
  404d55:	dec    ebp
  404d56:	leave  
  404d57:	(bad)  
  404d59:	adc    al,0xdb
  404d5b:	sbb    BYTE PTR [ebp+ebx*1-0x5a],dl
  404d5f:	sbb    esp,DWORD PTR [edx-0x3e]
  404d62:	cmp    cl,0xbf
  404d65:	outs   dx,DWORD PTR ds:[esi]
  404d66:	inc    edi
  404d67:	outs   dx,DWORD PTR ds:[esi]
  404d68:	mov    esp,0x1224ef2b
  404d6d:	push   0x38
  404d6f:	int    0xe2
  404d71:	aam    0x2b
  404d73:	std    
  404d74:	mov    BYTE PTR [edi],ch
  404d76:	ja     0x404dea
  404d78:	fcmovnbe st,st(2)
  404d7a:	mov    ebx,0x1443de0e
  404d7f:	stc    
  404d80:	aam    0x5d
  404d82:	adc    ch,bh
  404d84:	and    ah,0x6f
  404d87:	and    al,0x3e
  404d89:	pop    esi
  404d8a:	lods   al,BYTE PTR ds:[esi]
  404d8b:	(bad)  
  404d8c:	push   esp
  404d8d:	push   esi
  404d8e:	mov    esp,0xa6baf244
  404d93:	jo     0x404d8d
  404d95:	fchs   
  404d97:	adc    eax,0x22597b43
  404d9c:	in     al,dx
  404d9d:	xor    cl,bl
  404d9f:	mov    bh,0xd4
  404da1:	sbb    eax,0x8c272a87
  404da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da7:	sub    dl,BYTE PTR [ebp-0x34]
  404daa:	(bad)  
  404dab:	leave  
  404dac:	int    0xca
  404dae:	inc    eax
  404daf:	pcmpgtd mm3,QWORD PTR [esp+eiz*4+0x511b39d0]
  404db7:	jmp    0x87f63a29
  404dbc:	fwait
  404dbd:	lds    edi,FWORD PTR [ebx]
  404dbf:	and    cl,bh
  404dc1:	push   ecx
  404dc2:	mov    cl,0x8d
  404dc4:	rol    edx,1
  404dc6:	xor    DWORD PTR [ecx],edi
  404dc8:	mov    ecx,0x2746af72
  404dcd:	rcr    DWORD PTR [eax-0x5705a0ab],1
  404dd3:	add    BYTE PTR [ecx-0x5e83f044],ah
  404dd9:	cli    
  404dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ddb:	jno    0x404d9a
  404ddd:	xchg   esp,eax
  404dde:	pop    es
  404ddf:	sbb    DWORD PTR [edi+ecx*4+0x63],0x6d
  404de4:	or     eax,0x8e9eecd5
  404de9:	loop   0x404db6
  404deb:	xor    dl,bl
  404ded:	ffreep st(4)
  404def:	inc    edx
  404df0:	scas   eax,DWORD PTR es:[edi]
  404df1:	gs fwait
  404df3:	and    DWORD PTR [eax-0x5f2a9675],ebx
  404df9:	inc    ecx
  404dfa:	outs   dx,BYTE PTR ds:[esi]
  404dfb:	jmp    0x8edf:0x50907ce2
  404e02:	push   esp
  404e03:	sahf   
  404e04:	add    BYTE PTR [edx+0x17671796],dl
  404e0a:	push   0xabf7f706
  404e0f:	fidiv  WORD PTR [esi]
  404e11:	jle    0x404dbe
  404e13:	dec    ebp
  404e14:	inc    ecx
  404e15:	xor    al,0xac
  404e17:	hlt    
  404e18:	leave  
  404e19:	rcr    edx,0xf7
  404e1c:	test   BYTE PTR [edx+0x59],ch
  404e1f:	jns    0x404e0d
  404e21:	push   edx
  404e22:	test   BYTE PTR [eax-0x61],dl
  404e25:	call   0xdb8:0xef9533cc
  404e2c:	adc    eax,0x9c62be60
  404e31:	xchg   edi,eax
  404e32:	adc    eax,0xe5aaf501
  404e37:	xlat   BYTE PTR ds:[ebx]
  404e38:	cmp    BYTE PTR [ecx],bl
  404e3a:	xchg   esi,eax
  404e3b:	cmp    BYTE PTR [eax+eax*4-0x17],bl
  404e3f:	jp     0x404de8
  404e41:	sahf   
  404e42:	adc    eax,0x19367104
  404e47:	xchg   ebx,eax
  404e48:	je     0x404dfa
  404e4a:	rol    DWORD PTR [edi],1
  404e4c:	outs   dx,DWORD PTR ds:[esi]
  404e4d:	mov    dl,0x8c
  404e4f:	mov    bl,0x2
  404e51:	ins    BYTE PTR es:[edi],dx
  404e52:	das    
  404e53:	(bad)  [ebp-0x58]
  404e56:	jmp    0x404e63
  404e58:	lock push ds
  404e5a:	sub    esp,edi
  404e5c:	jnp    0x404e36
  404e5e:	sti    
  404e5f:	dec    ebp
  404e60:	push   es
  404e61:	mov    edx,0x149e5b16
  404e67:	adc    DWORD PTR [ebp+0x4a],eax
  404e6a:	pop    esp
  404e6b:	xor    ah,0x1f
  404e6e:	leave  
  404e6f:	je     0x404ee5
  404e71:	pop    edi
  404e72:	add    al,0xf9
  404e74:	sub    DWORD PTR [ebp+0x65],eax
  404e77:	dec    ebx
  404e78:	inc    esp
  404e79:	cmc    
  404e7a:	add    ch,BYTE PTR [edx+0x1]
  404e7d:	ins    BYTE PTR es:[edi],dx
  404e7e:	shr    DWORD PTR [esi],cl
  404e80:	(bad)
  404e83:	jb     0x404ef9
  404e85:	hlt    
  404e86:	add    al,0x72
  404e88:	fidiv  WORD PTR [ebx-0xd17c5bb]
  404e8e:	xchg   ebp,eax
  404e8f:	inc    esi
  404e90:	fdiv   st,st(1)
  404e92:	adc    al,0xa4
  404e94:	dec    esi
  404e95:	imul   ecx,DWORD PTR [ebx+0x21],0xffffffc5
  404e99:	mov    WORD PTR [edi-0x66],ss
  404e9c:	in     al,0xa8
  404e9e:	enter  0x5e22,0xbd
  404ea2:	inc    ecx
  404ea3:	sub    eax,0xd3db550b
  404ea8:	push   ds
  404ea9:	not    BYTE PTR [edi]
  404eab:	mov    esi,DWORD PTR [esp+eiz*8-0x2d]
  404eaf:	jns    0x404f08
  404eb1:	int    0x9e
  404eb3:	mov    BYTE PTR [eax],cl
  404eb5:	mov    ds:0x2c9a14c7,eax
  404eba:	and    DWORD PTR [edi],esp
  404ebc:	fmul   QWORD PTR [eax+eax*1-0x42]
  404ec0:	repnz inc eax
  404ec2:	lds    eax,FWORD PTR [esi-0x37]
  404ec5:	aas    
  404ec6:	pop    ecx
  404ec7:	cwd    
  404ec9:	push   ds
  404eca:	call   0xd1af:0xf47aee61
  404ed1:	sub    DWORD PTR [edi+0x4],esp
  404ed4:	in     al,dx
  404ed5:	add    DWORD PTR [ecx+0x4e],eax
  404ed8:	add    ebp,DWORD PTR [ecx+0x666ad8c1]
  404ede:	add    dl,BYTE PTR [edi]
  404ee0:	mul    BYTE PTR [edi]
  404ee2:	xor    esp,DWORD PTR [ecx]
  404ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ee5:	fcmovu st,st(0)
  404ee7:	push   ecx
  404ee8:	push   es
  404ee9:	inc    edx
  404eea:	mov    eax,DWORD PTR [esi+edx*8+0x72b26236]
  404ef1:	out    0xe,eax
  404ef3:	outs   dx,BYTE PTR ds:[esi]
  404ef4:	rol    BYTE PTR [edx],1
  404ef6:	dec    edi
  404ef7:	jb     0x404f53
  404ef9:	sbb    BYTE PTR [ecx+edx*4],bl
  404efc:	adc    eax,0x2a2136ff
  404f01:	sti    
  404f02:	out    dx,al
  404f03:	xchg   DWORD PTR [ebp-0xe],ebp
  404f06:	sbb    edx,DWORD PTR [edx+0x7b]
  404f09:	pop    edx
  404f0a:	push   0xa180126f
  404f0f:	adc    al,0xa
  404f11:	or     ecx,DWORD PTR [edi+0x4b]
  404f14:	push   ecx
  404f16:	pop    es
  404f17:	pop    edx
  404f18:	clc    
  404f19:	test   eax,0x2074788c
  404f1e:	fist   WORD PTR [edx+ebp*2+0x41c434fd]
  404f25:	sti    
  404f26:	addr16 xchg ebp,eax
  404f28:	retf   
  404f29:	into   
  404f2a:	cmp    dh,BYTE PTR [edi-0x10564a79]
  404f30:	in     al,dx
  404f31:	sub    al,0xdc
  404f33:	push   es
  404f34:	test   al,0xfe
  404f36:	add    dh,dl
  404f38:	xchg   ecx,eax
  404f39:	call   0xfc33aaff
  404f3e:	clc    
  404f3f:	sub    al,ch
  404f41:	mov    ebp,0xe97646cb
  404f46:	jecxz  0x404fa9
  404f48:	mov    bh,0xe4
  404f4a:	ja     0x404ef3
  404f4c:	xchg   BYTE PTR [ebx+0x41],dh
  404f4f:	xchg   DWORD PTR ds:0x208d5a92,esp
  404f55:	adc    ah,BYTE PTR [ecx]
  404f57:	into   
  404f58:	repz mov bl,0x87
  404f5b:	xlat   BYTE PTR ds:[ebx]
  404f5c:	test   DWORD PTR [ecx-0x6bd55cee],0x75cdd229
  404f66:	mov    ebx,0xd95bfda4
  404f6b:	ss (bad) 
  404f6d:	shr    BYTE PTR [ebx+0x60],1
  404f70:	lds    eax,FWORD PTR [edx-0x27bf72a7]
  404f76:	sub    ch,0x2e
  404f79:	cwde   
  404f7a:	jmp    0x404f9d
  404f7c:	lock pop ebx
  404f7e:	out    0x2a,eax
  404f80:	loope  0x404fb0
  404f82:	jmp    0x248:0x6a84e26c
  404f89:	dec    ebx
  404f8a:	rcl    BYTE PTR [edi-0x245f423b],1
  404f90:	enter  0x93dc,0x40
  404f94:	cmp    BYTE PTR [eax-0x6eca05d2],0x63
  404f9b:	(bad)  
  404f9c:	adc    ch,bl
  404f9e:	aaa    
  404f9f:	jl     0x404fb6
  404fa1:	or     DWORD PTR [edx+eiz*1],ebx
  404fa4:	lock jp 0x404fc0
  404fa7:	daa    
  404fa8:	es in  al,0xad
  404fab:	cli    
  404fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fad:	push   ebp
  404fae:	mov    BYTE PTR [eax],bh
  404fb0:	pop    ebp
  404fb1:	cmp    al,0x3a
  404fb3:	outs   dx,DWORD PTR ds:[esi]
  404fb4:	(bad)  
  404fb5:	fwait
  404fb6:	xor    eax,0xd70034ca
  404fbb:	fild   DWORD PTR [esi-0x8]
  404fbe:	(bad)  
  404fc0:	cdq    
  404fc1:	iret   
  404fc2:	xlat   BYTE PTR ds:[ebx]
  404fc3:	ins    DWORD PTR es:[edi],dx
  404fc4:	inc    eax
  404fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc6:	sbb    bh,BYTE PTR [esi-0x5a]
  404fc9:	push   cs
  404fca:	xchg   BYTE PTR [edx-0x11ee0f0b],ah
  404fd0:	xchg   ebp,eax
  404fd1:	inc    ecx
  404fd2:	loop   0x405046
  404fd4:	add    eax,DWORD PTR [ebx-0x63]
  404fd7:	addr16 clc 
  404fd9:	cmp    esi,DWORD PTR [ebp+0x53a21415]
  404fdf:	imul   esp,DWORD PTR [ebp+0xd],0x1a68d251
  404fe6:	ins    BYTE PTR es:[edi],dx
  404fe7:	adc    al,0x7
  404fe9:	and    DWORD PTR [edi],ecx
  404feb:	pop    edx
  404fec:	imul   eax,DWORD PTR [edi+0x11],0xffffff84
  404ff0:	xchg   edi,eax
  404ff1:	or     ebx,DWORD PTR [ebx]
  404ff3:	pop    ecx
  404ff4:	ret    
  404ff5:	add    BYTE PTR [edi],dh
  404ff7:	jbe    0x404fc6
  404ff9:	outs   dx,BYTE PTR ds:[esi]
  404ffa:	mov    dh,0xa
  404ffc:	std    
  404ffd:	sahf   
  404ffe:	sub    al,0x69
  405000:	xchg   edx,eax
  405001:	push   0xfcb0ba78
  405006:	xor    BYTE PTR [edx+0x52],al
  405009:	icebp  
  40500a:	pop    ebx
  40500b:	into   
  40500c:	xlat   BYTE PTR ds:[ebx]
  40500d:	xchg   edx,eax
  40500e:	sbb    DWORD PTR [edi+eiz*8+0x1c],ebp
  405012:	dec    BYTE PTR [edi-0x23]
  405015:	clc    
  405016:	icebp  
  405017:	push   ebp
  405018:	jnp    0x405001
  40501a:	and    bl,ch
  40501c:	iret   
  40501d:	pop    eax
  40501e:	(bad)  
  40501f:	(bad)  [ecx+eiz*8]
  405022:	push   edx
  405023:	scas   eax,DWORD PTR es:[edi]
  405024:	add    BYTE PTR [ecx-0x221e5b17],bl
  40502a:	mov    ds:0xfeece9ba,eax
  40502f:	cmp    al,0x50
  405031:	and    BYTE PTR [eax],ah
  405033:	aas    
  405034:	shl    DWORD PTR [edx],cl
  405036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405037:	test   al,0x98
  405039:	add    eax,0x6c858d6
  40503e:	xchg   edx,eax
  40503f:	mov    cl,0xb3
  405041:	cmp    BYTE PTR [edi-0x9],dh
  405044:	mov    ecx,0xd06c619d
  405049:	into   
  40504a:	ja     0x404fd4
  40504c:	int    0x37
  40504e:	xor    esp,DWORD PTR [ebp+0x43a1f372]
  405054:	inc    edx
  405055:	jnp    0x4050b6
  405057:	dec    ebx
  405058:	out    0xa4,eax
  40505a:	addr16 loope 0x40507f
  40505d:	push   ds
  40505e:	mov    esp,0x8f7b19aa
  405063:	outs   dx,BYTE PTR ds:[esi]
  405064:	fsqrt  
  405066:	popf   
  405067:	fcmove st,st(5)
  405069:	(bad)  
  40506a:	imul   esi,DWORD PTR [ebp+0x5a],0x7b
  40506e:	mov    ebp,0x41eaa947
  405073:	repnz add edi,ebp
  405076:	sar    al,0x1f
  405079:	pushf  
  40507a:	and    edi,DWORD PTR [esi+ebp*2]
  40507d:	xchg   DWORD PTR [esp+eiz*4],ecx
  405080:	lea    ecx,[ebx]
  405082:	imul   dx,WORD PTR [edx],0xe836
  405087:	or     ch,BYTE PTR [edi+0x42169b8]
  40508d:	cmp    ah,bl
  40508f:	into   
  405090:	mov    cs,WORD PTR [eax]
  405092:	lock pop ds
  405094:	inc    edx
  405095:	leave  
  405096:	ja     0x40507a
  405098:	daa    
  405099:	inc    esi
  40509a:	repnz aaa 
  40509c:	arpl   WORD PTR [ebp-0x50],cx
  40509f:	adc    ecx,edi
  4050a1:	add    al,0x1e
  4050a3:	sbb    eax,0xc82e5e5a
  4050a8:	frstor [esi]
  4050aa:	icebp  
  4050ab:	popf   
  4050ac:	jl     0x40506f
  4050ae:	scas   eax,DWORD PTR es:[edi]
  4050af:	mov    ecx,0x34d75d8b
  4050b4:	icebp  
  4050b5:	lock lods al,BYTE PTR ds:[esi]
  4050b7:	jae    0x40506c
  4050b9:	test   DWORD PTR [esi],0xdea06c74
  4050bf:	fmulp  st(7),st
  4050c1:	mov    cs,WORD PTR [ebx*4+0x24d20d51]
  4050c8:	fisttp DWORD PTR [esi+0x47a8544a]
  4050ce:	pop    edx
  4050cf:	mov    bl,0xa5
  4050d1:	mov    dl,0x9f
  4050d3:	mov    ebp,0x57871121
  4050d8:	out    0x1f,eax
  4050da:	add    dh,BYTE PTR [esi+0x4a]
  4050dd:	mov    al,BYTE PTR [eax]
  4050df:	push   edx
  4050e1:	fwait
  4050e2:	rcl    DWORD PTR [esi-0x636d202c],1
  4050e8:	or     BYTE PTR [edx],ah
  4050ea:	retf   
  4050eb:	add    esp,DWORD PTR [eax-0x6]
  4050ee:	xor    eax,0x2f5ecd6b
  4050f3:	push   ecx
  4050f4:	out    dx,al
  4050f5:	adc    edi,DWORD PTR [eax-0x4b5ad950]
  4050fb:	cmc    
  4050fc:	push   edi
  4050fd:	xor    edi,DWORD PTR ss:[esi+0x6d2f0482]
  405104:	dec    ebp
  405105:	(bad)  [esi]
  405107:	xchg   ebp,eax
  405108:	(bad)  
  405109:	xchg   ebx,eax
  40510a:	inc    edi
  40510b:	fcmove st,st(1)
  40510d:	fist   DWORD PTR [ecx+0x5e78bbe6]
  405113:	sub    bl,BYTE PTR [eax+0xee5c3e4]
  405119:	mov    eax,0xbe62852f
  40511e:	leave  
  40511f:	jo     0x4050a7
  405121:	push   cs
  405122:	jecxz  0x4050ba
  405124:	std    
  405125:	das    
  405126:	cli    
  405127:	xchg   esi,eax
  405128:	lds    eax,FWORD PTR [ebp+0x6f]
  40512b:	sbb    eax,0x10e972ec
  405130:	xor    BYTE PTR [ebp+0x6ec9139a],ah
  405136:	sti    
  405137:	fwait
  405138:	popa   
  405139:	mov    eax,0xc6d9146d
  40513e:	jno    0x405194
  405140:	mov    esp,DWORD PTR [ecx+0x3b8c60d5]
  405146:	sbb    ebp,0xfffffff8
  405149:	and    bh,dl
  40514b:	mov    ch,0xc5
  40514d:	mov    ah,BYTE PTR [ebx-0x3683c8c]
  405153:	mov    al,ds:0x4e0c67b
  405158:	pop    ebx
  405159:	fwait
  40515a:	ss aaa 
  40515c:	push   eax
  40515d:	jmp    0x4fca1acf
  405162:	jp     0x40513a
  405164:	fwait
  405165:	mov    ah,0xde
  405167:	mov    ebx,0xc8b2d734
  40516c:	inc    ecx
  40516d:	push   ecx
  40516e:	aad    0x12
  405170:	add    DWORD PTR [ecx],edx
  405172:	mov    esp,0xaa62402
  405177:	or     esp,ecx
  405179:	add    ebx,DWORD PTR [ecx]
  40517b:	jae    0x4051c0
  40517d:	fisub  DWORD PTR [edx-0x51]
  405180:	aaa    
  405181:	sahf   
  405182:	pop    ds
  405183:	xchg   edx,eax
  405184:	xor    ah,BYTE PTR [ecx-0x4ce94968]
  40518a:	or     eax,DWORD PTR [ecx+0x51]
  40518d:	mov    ebp,0x1fc131fc
  405192:	and    BYTE PTR [ebx],ch
  405194:	fisubr DWORD PTR [ecx+0x71]
  405197:	mov    dh,0x39
  405199:	jmp    0x53e:0x78f7f0c0
  4051a0:	mov    ?,WORD PTR [ebx]
  4051a2:	push   ds
  4051a3:	push   esi
  4051a4:	cmp    ax,0xd759
  4051a8:	dec    edx
  4051a9:	out    0x56,eax
  4051ab:	inc    ecx
  4051ac:	jo     0x40514d
  4051ae:	aas    
  4051af:	aad    0xe5
  4051b1:	jp     0x4051a5
  4051b3:	fmul   DWORD PTR [edx+edx*1+0x3d4cd868]
  4051ba:	push   ebx
  4051bb:	sub    eax,0xfdd43a48
  4051c0:	push   DWORD PTR [eax+0x77b78531]
  4051c6:	add    BYTE PTR [eax],0xbd
  4051c9:	(bad)  
  4051ca:	dec    ecx
  4051cb:	(bad)  
  4051cc:	lea    ebp,[eax-0x58ca1093]
  4051d2:	adc    eax,0xda1df434
  4051d7:	in     al,0xa0
  4051d9:	cwde   
  4051da:	cdq    
  4051db:	outs   dx,DWORD PTR ds:[esi]
  4051dc:	jns    0x405210
  4051de:	inc    esp
  4051df:	sbb    DWORD PTR [ebx+0x67],0x8f6c0d4d
  4051e6:	push   ebp
  4051e7:	jae    0x4051a8
  4051e9:	fbstp  TBYTE PTR [edi-0x57e567bf]
  4051ef:	aaa    
  4051f0:	(bad)  
  4051f1:	test   eax,0xa195acd9
  4051f6:	not    DWORD PTR [ebx-0x61520996]
  4051fc:	loope  0x4051dc
  4051fe:	push   cs
  4051ff:	push   edx
  405200:	push   cs
  405201:	call   0x5690:0xff169f32
  405208:	jmp    0x7bde:0xe932dd25
  40520f:	xor    eax,0xa9d07e4
  405214:	lahf   
  405215:	jmp    0x5441:0xfa516470
  40521c:	cli    
  40521d:	sbb    bh,BYTE PTR [ecx*2-0x5fed9320]
  405224:	nop
  405225:	mov    dh,0xd0
  405227:	pop    eax
  405228:	jmp    0x4051c9
  40522a:	sbb    eax,0xc33eb091
  40522f:	lock mov eax,0x34567505
  405235:	test   ch,bl
  405237:	outs   dx,BYTE PTR fs:[esi]
  405239:	xchg   ebx,eax
  40523a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40523b:	cli    
  40523c:	fisubr WORD PTR ds:[edx]
  40523f:	mov    edx,0xf9eb7da9
  405244:	sub    al,BYTE PTR [edx+0x73]
  405247:	and    al,bl
  405249:	mov    ebp,0x49666110
  40524e:	mov    edx,0x74c200
  405253:	out    0xcf,eax
  405255:	adc    DWORD PTR [ecx-0xccf2921],ebp
  40525b:	push   edi
  40525c:	jns    0x405291
  40525e:	inc    esi
  40525f:	in     al,0xb2
  405261:	jmp    0x405254
  405263:	ss inc ebx
  405265:	(bad)  
  405266:	imul   eax,DWORD PTR [edx],0x70
  405269:	and    eax,0xe65ddf67
  40526e:	adc    eax,0x8a4d4943
  405273:	adc    edi,DWORD PTR [ebp-0x2298ce9c]
  405279:	and    DWORD PTR [edi-0x3af2b902],ebx
  40527f:	mov    BYTE PTR [edi+0x65e453be],bl
  405285:	pop    ds
  405286:	sahf   
  405287:	(bad)  
  405288:	les    esi,FWORD PTR [edx]
  40528a:	popf   
  40528b:	in     al,0x1e
  40528d:	push   ss
  40528e:	xor    DWORD PTR [edi],0xffffffa2
  405291:	adc    BYTE PTR [edx+0x64205633],cl
  405297:	push   edi
  405298:	lahf   
  405299:	stc    
  40529a:	jne    0x40527b
  40529c:	mov    esi,0xb1bee8a1
  4052a1:	mov    WORD PTR [edi-0x6b8a187c],gs
  4052a7:	mov    ss,WORD PTR ds:0x7aab7f4b
  4052ad:	adc    BYTE PTR [eax],dl
  4052af:	mov    edx,0x5a4e0369
  4052b4:	mov    ah,0x70
  4052b6:	shr    BYTE PTR [edi-0x7ab82051],1
  4052bc:	xlat   BYTE PTR ds:[ebx]
  4052bd:	inc    esp
  4052be:	pop    ds
  4052bf:	cdq    
  4052c0:	xchg   edx,eax
  4052c1:	les    esi,FWORD PTR [edx-0x10a09964]
  4052c7:	mov    ebx,0x5aeee17d
  4052cc:	enter  0x48de,0x9d
  4052d0:	sub    ch,BYTE PTR [edx+eiz*1+0x35]
  4052d4:	push   0xffffff96
  4052d6:	adc    edx,DWORD PTR [edi+0x73]
  4052d9:	cmp    al,0x12
  4052db:	xchg   ebx,eax
  4052dc:	inc    BYTE PTR [esi+0x74fdc614]
  4052e2:	dec    esi
  4052e3:	xchg   ebp,eax
  4052e4:	fist   DWORD PTR [esi]
  4052e6:	loop   0x4052e7
  4052e8:	dec    esp
  4052e9:	push   0xd07b54f6
  4052ee:	inc    ecx
  4052ef:	retf   
  4052f0:	les    esi,FWORD PTR ss:[edx]
  4052f3:	and    bh,BYTE PTR [eax-0x6]
  4052f6:	and    ebx,DWORD PTR [esp+esi*4-0x7c]
  4052fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052fb:	sar    DWORD PTR [esi-0xd],1
  4052fe:	popa   
  4052ff:	pop    edi
  405300:	(bad)  [esi-0xc81b595]
  405306:	sbb    DWORD PTR [ebx-0x2],esp
  405309:	es das 
  40530b:	mov    edi,0x6f9a2126
  405310:	jo     0x405351
  405312:	outs   dx,DWORD PTR ds:[esi]
  405313:	fist   WORD PTR [eax+0x4d]
  405316:	cmp    ah,BYTE PTR [esi+0x1faa1e72]
  40531c:	or     eax,0xf17fd3fe
  405321:	ins    DWORD PTR es:[edi],dx
  405322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405324:	mov    ebp,0x59ae02fe
  405329:	or     ebx,DWORD PTR [esi]
  40532b:	sub    cl,dh
  40532d:	mov    edi,0x7257f687
  405332:	stos   DWORD PTR es:[edi],eax
  405333:	sbb    DWORD PTR [esp+edx*4-0x7338f544],ebp
  40533a:	xor    edx,DWORD PTR [eax+0x1b]
  40533d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40533e:	xor    al,bh
  405340:	push   ds
  405341:	fwait
  405342:	push   edi
  405343:	or     dl,0xc
  405346:	push   cs
  405347:	and    al,0xc5
  405349:	mov    bh,BYTE PTR [ebp-0xf]
  40534c:	imul   esp,DWORD PTR [edx-0x27],0x532e1217
  405353:	mov    ecx,0xeecda549
  405358:	xor    ecx,DWORD PTR [eax+0x20]
  40535b:	fnstcw WORD PTR [edi+0x57]
  40535e:	mov    fs,edi
  405360:	ret    
  405361:	addr16 mov ecx,0xbada7033
  405367:	pop    ebx
  405368:	pop    esp
  405369:	lods   eax,DWORD PTR ds:[esi]
  40536a:	mov    al,ch
  40536c:	adc    al,0x8f
  40536e:	adc    DWORD PTR [esi],esp
  405370:	jecxz  0x40539c
  405372:	cwde   
  405373:	mov    bh,BYTE PTR [ebp+eax*1+0x29]
  405377:	add    BYTE PTR [esp],0xa3
  40537b:	mov    eax,0x71c48d98
  405380:	into   
  405381:	mov    ah,0x7f
  405383:	inc    edi
  405384:	pop    ecx
  405385:	xchg   edx,eax
  405386:	sbb    ebx,esi
  405388:	xlat   BYTE PTR ds:[ebx]
  405389:	std    
  40538a:	cmp    ebx,DWORD PTR [ebp-0x64a1e0f8]
  405390:	lods   eax,DWORD PTR ds:[esi]
  405391:	mov    BYTE PTR [eax-0x60df3f39],ah
  405397:	xor    eax,0x4b040b1d
  40539c:	sbb    al,ch
  40539e:	pop    ebx
  40539f:	pop    eax
  4053a0:	push   ss
  4053a1:	push   cs
  4053a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a3:	dec    edx
  4053a4:	pop    edx
  4053a5:	cmp    DWORD PTR [edx],edx
  4053a7:	pop    ds
  4053a8:	adc    eax,esp
  4053aa:	fidiv  WORD PTR [esi-0x4e]
  4053ad:	jp     0x4053f4
  4053af:	sbb    DWORD PTR [edi],edi
  4053b1:	in     al,dx
  4053b2:	or     cl,BYTE PTR [ecx+0x60db851]
  4053b8:	sub    al,0xb5
  4053ba:	xor    DWORD PTR [edx-0x128c8a0e],edi
  4053c0:	mov    ch,0x5b
  4053c2:	ins    BYTE PTR es:[edi],dx
  4053c3:	xchg   edi,eax
  4053c4:	lds    ecx,FWORD PTR [ebx+eax*2]
  4053c7:	aad    0x13
  4053c9:	gs aaa 
  4053cb:	cdq    
  4053cc:	sar    DWORD PTR [ecx-0x5d],0x97
  4053d0:	retf   
  4053d1:	mov    ebx,DWORD PTR [edi]
  4053d3:	or     eax,0xf45a9fae
  4053d8:	test   DWORD PTR [esi],edi
  4053da:	jecxz  0x40540c
  4053dc:	scas   eax,DWORD PTR es:[edi]
  4053dd:	or     cl,BYTE PTR [edi-0x26]
  4053e0:	imul   edi,DWORD PTR [ebp+0xd],0x3da60133
  4053e7:	rol    BYTE PTR [edi+0x7fcf0108],1
  4053ed:	xor    BYTE PTR ds:0x49d2915c,ch
  4053f3:	jmp    0x4053a5
  4053f5:	pop    eax
  4053f6:	or     eax,0x46c9996
  4053fb:	or     eax,0xc1154540
  405400:	into   
  405401:	in     eax,dx
  405402:	and    al,0x33
  405404:	call   FWORD PTR [ecx]
  405406:	addr16 push 0xffffff8e
  405409:	adc    edx,DWORD PTR [ebx]
  40540b:	xor    DWORD PTR [edi-0x2d],eax
  40540e:	mov    edx,DWORD PTR [edx]
  405410:	(bad)  
  405411:	jb     0x4053e0
  405413:	fwait
  405414:	cmp    BYTE PTR [eax],dh
  405416:	jb     0x40545b
  405418:	pop    esp
  405419:	adc    bh,bl
  40541b:	hlt    
  40541c:	dec    esp
  40541d:	inc    esp
  40541e:	adc    BYTE PTR [esi],0x9d
  405421:	cs add ch,al
  405424:	sub    eax,0xd4f76542
  405429:	mov    ds:0xa17fef30,al
  40542e:	in     eax,0x22
  405430:	cmp    dh,BYTE PTR [ecx+eax*2+0x29]
  405434:	jno    0x405498
  405436:	cmc    
  405437:	scas   al,BYTE PTR es:[edi]
  405438:	pop    ds
  405439:	repz push 0x46
  40543c:	clc    
  40543d:	add    BYTE PTR [ecx+0x5e],0x11
  405441:	sub    eax,0xd080259f
  405446:	adc    al,0x2a
  405448:	ret    
  405449:	inc    eax
  40544a:	fstp   QWORD PTR [edi-0x65d597a8]
  405450:	add    esp,esp
  405452:	jbe    0x40547c
  405454:	jne    0x405463
  405456:	push   cs
  405457:	mov    esi,DWORD PTR [edx]
  405459:	sub    edx,DWORD PTR [ebx]
  40545b:	mov    ebx,0x66de05a4
  405460:	test   BYTE PTR [edx-0x29],bh
  405463:	mov    al,ds:0xd2dc9e5e
  405468:	push   0x54
  40546a:	sub    edi,edi
  40546c:	aas    
  40546d:	std    
  40546e:	daa    
  40546f:	gs int3 
  405471:	push   esi
  405472:	mov    ebp,0x561198f2
  405477:	sub    eax,0x44a44b97
  40547c:	mov    ss,esi
  40547e:	push   edi
  40547f:	fwait
  405480:	loopne 0x405406
  405482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405483:	inc    si
  405485:	mov    DWORD PTR [eax-0x25e35a5d],edx
  40548b:	fld    DWORD PTR [ecx+0x2d]
  40548e:	push   ebx
  40548f:	(bad)  
  405490:	pop    ebp
  405491:	xchg   ebx,eax
  405492:	jg     0x4054f9
  405494:	cmp    DWORD PTR [eax-0x75],esi
  405497:	sbb    DWORD PTR [edx-0x2f],ebx
  40549a:	inc    esi
  40549b:	and    BYTE PTR [ebp-0x9],bl
  40549e:	add    edi,DWORD PTR [edi-0x8957472]
  4054a4:	icebp  
  4054a5:	mov    ebx,0xe839c598
  4054aa:	push   cs
  4054ab:	es ret 
  4054ad:	add    BYTE PTR [eax],dh
  4054af:	sbb    eax,0xfa6caabc
  4054b4:	iret   
  4054b5:	in     al,dx
  4054b6:	out    dx,eax
  4054b7:	adc    eax,0x5d401cb7
  4054bc:	inc    esi
  4054bd:	dec    ecx
  4054be:	js     0x40545f
  4054c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c1:	adc    esp,eax
  4054c3:	dec    eax
  4054c4:	in     al,dx
  4054c5:	and    BYTE PTR [ebp-0x2647ee0d],dh
  4054cb:	jl     0x4054c2
  4054cd:	(bad)  
  4054cf:	sbb    al,0x79
  4054d1:	rcr    ah,cl
  4054d3:	aaa    
  4054d4:	cmp    al,0x15
  4054d6:	aam    0xa8
  4054d8:	ror    ah,1
  4054da:	sub    BYTE PTR [edx],ch
  4054dc:	xchg   ecx,eax
  4054dd:	or     edx,esp
  4054df:	xchg   esi,eax
  4054e0:	push   ebx
  4054e1:	js     0x4054c5
  4054e3:	cmp    eax,0x7cbda19f
  4054e8:	push   ebp
  4054e9:	out    0xd3,al
  4054eb:	or     eax,0xc79ca66a
  4054f0:	sub    BYTE PTR [edx],al
  4054f2:	popa   
  4054f3:	pop    edi
  4054f4:	(bad)  
  4054f5:	push   ebx
  4054f6:	sar    DWORD PTR [ecx],0x30
  4054f9:	(bad)  [eax+eax*1]
  4054fc:	lods   al,BYTE PTR ds:[esi]
  4054fd:	sti    
  4054fe:	jmp    0x1fade64f
  405503:	cli    
  405504:	or     ebx,DWORD PTR [ebx-0x78]
  405507:	push   edi
  405508:	jmp    0xf90a:0xbde125c0
  40550f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405510:	mov    eax,0x5f2de50f
  405515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405516:	push   ebp
  405517:	xchg   cl,ah
  405519:	lock shl DWORD PTR [ecx-0x57],cl
  40551d:	sub    dl,BYTE PTR [eax+0x73bb7458]
  405523:	xchg   ebp,eax
  405524:	rol    DWORD PTR [esi-0x6a219f5b],cl
  40552a:	or     edi,esp
  40552c:	xchg   edx,eax
  40552d:	aam    0xeb
  40552f:	int3   
  405530:	aaa    
  405531:	dec    edi
  405532:	mov    esi,0xc40f9500
  405537:	push   ebp
  405538:	dec    edi
  405539:	and    bl,0x18
  40553c:	mov    esp,DWORD PTR [edi-0x77]
  40553f:	int3   
  405540:	dec    esp
  405541:	aad    0xdc
  405543:	push   es
  405544:	int3   
  405545:	pop    ebp
  405546:	loop   0x4054f7
  405548:	sub    ebx,DWORD PTR [eax-0x63bcf1d7]
  40554e:	shr    DWORD PTR [ebx],1
  405550:	xor    ch,BYTE PTR [edx-0x1c28f867]
  405556:	cmp    eax,0xcc2fef6e
  40555b:	cmp    eax,0xd78c3736
  405560:	mov    BYTE PTR [ecx+0x427c0ab6],al
  405566:	cmp    ebp,ebx
  405568:	inc    esp
  405569:	in     eax,0xad
  40556b:	retf   
  40556c:	(bad)  
  40556d:	jle    0x4055e1
  40556f:	out    dx,eax
  405570:	lahf   
  405571:	leave  
  405572:	rcl    ch,cl
  405574:	xchg   ebx,eax
  405575:	mov    ebp,DWORD PTR [ecx+0x790a8532]
  40557b:	pop    edi
  40557c:	ins    DWORD PTR es:[edi],dx
  40557d:	and    dh,cl
  40557f:	dec    edi
  405580:	push   ecx
  405581:	or     BYTE PTR [esi-0x105ffec8],bh
  405587:	lods   eax,DWORD PTR ds:[esi]
  405588:	ficom  WORD PTR [eax]
  40558a:	mov    ah,0x5e
  40558c:	xadd   DWORD PTR [ebx],esi
  40558f:	cmc    
  405590:	add    DWORD PTR [esi+edi*1],edi
  405593:	jmp    0x40560d
  405595:	loop   0x4055b2
  405597:	or     ebx,DWORD PTR [esi]
  405599:	dec    ebx
  40559a:	jb     0x40554a
  40559c:	mov    edx,0xffbb76d4
  4055a1:	jne    0x4055cd
  4055a3:	cld    
  4055a4:	test   eax,0xd68c005f
  4055a9:	call   0xc966:0xb6b7b68c
  4055b0:	dec    ecx
  4055b1:	test   BYTE PTR [ebx],0xa6
  4055b4:	xlat   BYTE PTR ds:[ebx]
  4055b5:	ret    0x8fdb
  4055b8:	inc    ecx
  4055b9:	in     eax,dx
  4055ba:	or     ah,BYTE PTR [ecx]
  4055bc:	aad    0xee
  4055be:	jp     0x405551
  4055c0:	mov    ecx,DWORD PTR [ebp+0x1cc12774]
  4055c6:	xor    edi,DWORD PTR [ebp-0x7ce68056]
  4055cc:	out    0x9d,al
  4055ce:	xchg   DWORD PTR [edx-0x63],ebp
  4055d1:	ds call 0x480776ff
  4055d7:	popa   
  4055d8:	push   ss
  4055d9:	loopne 0x4055a5
  4055db:	push   ebp
  4055dc:	push   cs
  4055dd:	sub    bl,bl
  4055df:	pop    ecx
  4055e0:	aas    
  4055e1:	test   al,0xcf
  4055e3:	stc    
  4055e4:	adc    edi,DWORD PTR [ebp+0x73]
  4055e7:	or     al,0x7
  4055e9:	adc    eax,0x6b5f8157
  4055ee:	stos   DWORD PTR es:[edi],eax
  4055ef:	rcl    ah,cl
  4055f1:	dec    ebp
  4055f2:	push   ss
  4055f3:	outs   dx,BYTE PTR ds:[esi]
  4055f4:	hlt    
  4055f5:	sbb    al,0x50
  4055f7:	popa   
  4055f8:	adc    al,0xca
  4055fa:	inc    ecx
  4055fb:	aaa    
  4055fc:	fild   WORD PTR [ebx-0x17]
  4055ff:	mov    al,0xb5
  405601:	popf   
  405602:	push   esi
  405603:	mov    ah,0x36
  405605:	fdivr  st,st(2)
  405607:	pop    ecx
  405608:	mov    ?,WORD PTR [eax-0x80]
  40560b:	xor    BYTE PTR [ecx-0x27],dl
  40560e:	xchg   edx,eax
  40560f:	jg     0x4055b7
  405611:	pop    DWORD PTR [edi-0x3d7ceeb1]
  405617:	stc    
  405618:	jnp    0x405685
  40561a:	fisttp DWORD PTR [ecx+0x61]
  40561d:	ret    
  40561e:	into   
  40561f:	daa    
  405620:	add    eax,0xe5458e14
  405625:	test   BYTE PTR [ebp-0x30],ch
  405628:	mov    eax,ds:0x8d7fe7e4
  40562d:	inc    esi
  40562e:	jbe    0x4055dc
  405630:	jne    0x405648
  405632:	shr    DWORD PTR [edi+ebx*8+0x39],0x37
  405637:	loope  0x405623
  405639:	add    al,0x3b
  40563b:	das    
  40563c:	mov    eax,0xa723f59e
  405641:	aas    
  405642:	jno    0x405653
  405644:	xchg   dl,dl
  405646:	aad    0x30
  405648:	sbb    ecx,DWORD PTR [edx-0x3e]
  40564b:	aad    0x2d
  40564d:	mov    ebp,0x525910e9
  405652:	mov    bh,0x51
  405654:	jae    0x40563c
  405656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405657:	cmp    edx,DWORD PTR [esi]
  405659:	cmp    al,0xa7
  40565b:	and    ch,ch
  40565d:	push   0x7e
  40565f:	ins    BYTE PTR es:[edi],dx
  405660:	stos   BYTE PTR es:[edi],al
  405661:	xchg   edx,eax
  405662:	test   DWORD PTR [eax],esp
  405664:	add    ah,BYTE PTR [eax+edi*1+0x10f14961]
  40566b:	sub    BYTE PTR [ebx],ch
  40566d:	loope  0x405685
  40566f:	cmp    eax,0xa7bf959
  405674:	or     al,0xa0
  405676:	mov    ebp,0xca06434b
  40567b:	ficomp WORD PTR [edi]
  40567d:	bound  edi,QWORD PTR [ebp-0x6e]
  405680:	mov    dh,0xe0
  405682:	mov    ebx,0x57a456b8
  405687:	jns    0x4056ca
  405689:	sbb    eax,DWORD PTR [eax]
  40568b:	dec    esp
  40568c:	outs   dx,DWORD PTR ds:[esi]
  40568d:	push   es
  40568e:	test   DWORD PTR [esi+esi*1-0x54],0xe988bbcf
  405696:	add    esi,ebp
  405698:	jnp    0x4056ef
  40569a:	dec    ebp
  40569b:	ss jbe 0x4056c0
  40569e:	sub    DWORD PTR [edi+0x70cc6f06],0x3469bcbe
  4056a8:	in     al,dx
  4056a9:	sar    ecx,cl
  4056ab:	retf   
  4056ac:	ret    0xf283
  4056af:	mov    ds:0x90e8978f,al
  4056b4:	ror    ebx,1
  4056b6:	mov    edx,DWORD PTR [edx+0x5f260a1a]
  4056bc:	push   esi
  4056bd:	sub    ecx,DWORD PTR [ebp-0x42]
  4056c0:	in     al,0x17
  4056c2:	shl    BYTE PTR [edi-0x6545223f],1
  4056c8:	lods   al,BYTE PTR ds:[esi]
  4056c9:	mov    ah,0x3b
  4056cb:	in     al,dx
  4056cc:	cmp    al,0xf4
  4056ce:	jns    0x405692
  4056d0:	es imul ecx,edx,0xd5b07a28
  4056d7:	ins    BYTE PTR es:[edi],dx
  4056d8:	xor    ecx,esi
  4056da:	jp     0x405718
  4056dc:	sbb    DWORD PTR [ebx+0x151460b2],edi
  4056e2:	mov    dl,0x49
  4056e4:	mov    esp,0x39134476
  4056e9:	mov    al,0xe1
  4056eb:	fcom   QWORD PTR [esi+esi*8-0x36577900]
  4056f2:	(bad)  
  4056f3:	mov    esi,0x717482f2
  4056f8:	sar    DWORD PTR [esi],1
  4056fa:	dec    edx
  4056fb:	mov    ebp,0xfb13d545
  405700:	jne    0x405692
  405702:	ror    DWORD PTR [edx+0x41ca7d],1
  405708:	xchg   ecx,eax
  405709:	ds mov ebx,0xe3136b02
  40570f:	xchg   ebp,eax
  405710:	popa   
  405711:	call   0xf46e:0x79c97235
  405718:	adc    eax,DWORD PTR [esi-0xbeeb35f]
  40571e:	ins    DWORD PTR es:[edi],dx
  40571f:	mov    edx,0xdba2ea15
  405724:	loope  0x40570d
  405726:	cmp    al,0x63
  405728:	adc    edx,ebp
  40572a:	retf   0xcd47
  40572d:	mov    cl,0xdc
  40572f:	inc    ebx
  405730:	dec    esi
  405731:	(bad)  
  405732:	jmp    0x4056e3
  405734:	ja     0x405794
  405736:	scas   eax,DWORD PTR es:[edi]
  405737:	loope  0x4057a1
  405739:	sti    
  40573a:	inc    ebp
  40573b:	adc    edx,DWORD PTR [edi-0x696e3528]
  405741:	mov    bl,0xd
  405743:	push   ebx
  405744:	outs   dx,BYTE PTR ss:[esi]
  405746:	and    eax,ebx
  405748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405749:	fistp  WORD PTR [eax-0x34]
  40574c:	and    esi,edi
  40574e:	sbb    al,bh
  405750:	jae    0x4057a1
  405752:	pop    edi
  405753:	retf   0x669f
  405756:	push   ebp
  405757:	xor    edi,eax
  405759:	aas    
  40575a:	jmp    0x40572a
  40575c:	cmp    DWORD PTR [ebx-0x78b796c],0x39
  405763:	jmp    0x40576f
  405765:	xor    dl,BYTE PTR [ebx]
  405767:	ss and al,0x78
  40576a:	cs sub al,0xc6
  40576d:	leavew 
  40576f:	out    dx,eax
  405770:	or     DWORD PTR [edx+0x9],0x1d
  405774:	ret    0xf7a3
  405777:	add    esp,DWORD PTR [edx+eax*4]
  40577a:	scas   eax,DWORD PTR es:[edi]
  40577b:	js     0x40575f
  40577d:	ret    0x14f9
  405780:	xchg   esi,eax
  405781:	cs in  eax,0x4c
  405784:	xor    DWORD PTR [edi+0x56],edx
  405787:	popf   
  405788:	jp     0x40578f
  40578a:	test   bl,dh
  40578c:	or     BYTE PTR [ebx+0x5c04872a],cl
  405792:	adc    ah,al
  405794:	mov    esi,0x62465c2c
  405799:	cdq    
  40579a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40579b:	arpl   WORD PTR [eax],di
  40579d:	test   DWORD PTR [edi],esp
  40579f:	scas   al,BYTE PTR es:[edi]
  4057a0:	adc    ebp,DWORD PTR [ebx-0x60]
  4057a3:	mov    al,ds:0x9f0fcd74
  4057a8:	push   ds
  4057a9:	std    
  4057aa:	mov    edi,esi
  4057ac:	cmc    
  4057ad:	adc    ch,BYTE PTR [edx+0x6]
  4057b0:	aad    0xe2
  4057b2:	pop    ecx
  4057b4:	out    dx,al
  4057b5:	test   eax,0x65858646
  4057ba:	gs icebp 
  4057bc:	sub    dh,BYTE PTR [ebp-0x5a]
  4057bf:	jmp    0xd405da71
  4057c4:	aad    0x7e
  4057c6:	push   0x1a
  4057c8:	(bad)  [edx]
  4057ca:	push   ebp
  4057cb:	test   BYTE PTR [edi+0x73],cl
  4057ce:	sub    DWORD PTR [esi+0x524a0f5a],eax
  4057d4:	push   esp
  4057d5:	femms  
  4057d7:	adc    edx,eax
  4057d9:	data16 jne 0x405800
  4057dc:	scas   eax,DWORD PTR es:[edi]
  4057dd:	cs sti 
  4057df:	pop    esp
  4057e0:	xchg   esp,eax
  4057e1:	lahf   
  4057e2:	adc    ebp,DWORD PTR [edi-0x2d060be5]
  4057e8:	mov    ecx,0xddac72a3
  4057ed:	push   esi
  4057ee:	dec    ecx
  4057ef:	stos   DWORD PTR es:[edi],eax
  4057f0:	stc    
  4057f1:	lods   al,BYTE PTR ds:[esi]
  4057f2:	and    ecx,esi
  4057f4:	scas   eax,DWORD PTR es:[edi]
  4057f5:	(bad)  
  4057f6:	pop    eax
  4057f7:	lods   eax,DWORD PTR ds:[esi]
  4057f8:	inc    ebx
  4057f9:	vmwrite edx,DWORD PTR [ebx-0x4b]
  4057fd:	sbb    ebx,DWORD PTR [esi+0x58]
  405800:	or     BYTE PTR [ebp+ebx*4-0x37],0x9e
  405805:	ret    
  405806:	mov    bl,0x82
  405808:	ds push 0x5bac691c
  40580e:	cwde   
  40580f:	popf   
  405810:	test   DWORD PTR [ebx+0x43],ebp
  405813:	test   al,0x1f
  405815:	ficomp DWORD PTR [ecx-0x6c]
  405818:	repnz mov bh,0xb
  40581b:	and    cl,BYTE PTR [edi]
  40581d:	cmp    eax,0xd8712ffc
  405822:	sub    bl,dh
  405824:	out    dx,al
  405825:	aaa    
  405826:	sub    dl,BYTE PTR [edx+0x36]
  405829:	sar    DWORD PTR [ebp+ecx*2-0x6b3ec6f6],1
  405830:	clc    
  405831:	lds    eax,FWORD PTR [esp+ecx*2-0x1a]
  405835:	xor    ecx,DWORD PTR [edx+0x12]
  405838:	daa    
  405839:	repz inc edi
  40583b:	out    0xaa,eax
  40583d:	retf   
  40583e:	ins    DWORD PTR es:[edi],dx
  40583f:	jmp    0x4057c6
  405841:	or     al,0x4d
  405843:	push   0x2d933e2d
  405848:	fld    TBYTE PTR [ebx]
  40584a:	inc    esi
  40584b:	jo     0x4057fe
  40584d:	mov    ah,0x19
  40584f:	jmp    0xe9ea403d
  405854:	aaa    
  405855:	sub    eax,0x6cf07ed9
  40585a:	jb     0x405804
  40585c:	cmc    
  40585d:	jno    0x405828
  40585f:	xlat   BYTE PTR ds:[ebx]
  405860:	dec    ebx
  405861:	mov    ebx,0x481dc149
  405866:	stos   BYTE PTR es:[edi],al
  405867:	mov    edi,0xc237c716
  40586c:	xchg   ebx,eax
  40586d:	cdq    
  40586e:	inc    esp
  40586f:	add    BYTE PTR [edi+0x5e496bf0],0x2e
  405876:	add    ebx,edi
  405878:	inc    esp
  405879:	loope  0x405805
  40587b:	loopne 0x405870
  40587d:	ja     0x405897
  40587f:	or     DWORD PTR [edi+0x26],eax
  405882:	or     DWORD PTR [esi-0x7f],esp
  405885:	ins    DWORD PTR es:[edi],dx
  405886:	mov    esp,0x513efb50
  40588b:	mov    dl,0xfb
  40588d:	jmp    0x40589f
  40588f:	mov    ebx,0x11c8ed7d
  405894:	je     0x405832
  405896:	mov    ebp,0x157797e5
  40589b:	(bad)  [edi+0x570b9000]
  4058a1:	inc    ebx
  4058a2:	mov    edx,0xb260622b
  4058a7:	adc    al,dl
  4058a9:	cwde   
  4058aa:	adc    eax,0xd3f2ef07
  4058af:	mov    ebp,0xb953ea95
  4058b4:	lock xor BYTE PTR [esp+eiz*4+0x753c8220],0xa4
  4058bd:	mov    gs,WORD PTR ds:0x258251d0
  4058c3:	sbb    DWORD PTR [ecx],0x4
  4058c6:	push   es
  4058c7:	jle    0x4058d0
  4058c9:	cmp    eax,0x408dd95a
  4058ce:	loop   0x4058c5
  4058d0:	xor    eax,edi
  4058d2:	xor    al,0x9e
  4058d4:	pop    es
  4058d5:	jecxz  0x4058ae
  4058d7:	cmp    BYTE PTR [edi+eiz*1+0x7a],cl
  4058db:	into   
  4058dc:	jg     0x4058c0
  4058de:	cwde   
  4058df:	daa    
  4058e0:	(bad)  
  4058e1:	mov    dh,0x93
  4058e3:	push   edx
  4058e4:	js     0x405950
  4058e6:	and    DWORD PTR [edx-0x78],0x72
  4058ea:	fstp   DWORD PTR [edi+0xc]
  4058ed:	xlat   BYTE PTR ds:[ebx]
  4058ee:	pusha  
  4058ef:	push   ss
  4058f0:	repnz scas eax,DWORD PTR es:[edi]
  4058f2:	div    DWORD PTR [ebp-0xf]
  4058f5:	cdq    
  4058f6:	sbb    BYTE PTR [ebx+0x33],dh
  4058f9:	out    0x11,eax
  4058fb:	sbb    dl,BYTE PTR [ebx]
  4058fd:	sub    eax,0x7afa39fa
  405902:	imul   DWORD PTR [edx]
  405904:	aaa    
  405905:	cmp    edi,DWORD PTR [ebp-0x65]
  405908:	lods   ax,WORD PTR cs:[esi]
  40590b:	pop    ebp
  40590c:	xor    DWORD PTR [edx],0xb0d868eb
  405912:	in     al,0xba
  405914:	fld    DWORD PTR [ebx-0x250e957b]
  40591a:	or     DWORD PTR [ecx*2+0x452d097f],ebx
  405921:	loop   0x4058c0
  405923:	(bad)  
  405925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405926:	mov    al,0x3c
  405928:	mov    ecx,0x4865c9fb
  40592d:	xor    ebx,DWORD PTR [edx]
  40592f:	fdivrp st(1),st
  405931:	pop    edx
  405932:	loopne 0x405952
  405934:	adc    eax,DWORD PTR [ebx+0x3c]
  405937:	repnz adc BYTE PTR [eax+0x60],ah
  40593b:	mov    edx,0xea80b669
  405940:	cmp    eax,0x63f1c89
  405945:	sbb    DWORD PTR [edx-0x221935f1],0x5d
  40594c:	div    ebp
  40594e:	gs dec eax
  405950:	or     cl,BYTE PTR [ebx-0x3a19c908]
  405956:	xlat   BYTE PTR ds:[ebx]
  405957:	in     eax,0xe5
  405959:	ret    0x6f69
  40595c:	hlt    
  40595d:	inc    DWORD PTR [ecx+0x36]
  405960:	xchg   edi,eax
  405961:	dec    esp
  405962:	mov    ss,WORD PTR [edx+0x49ca2a2b]
  405968:	pop    esp
  405969:	xor    BYTE PTR [ebx+0x5d],ch
  40596c:	lock jmp 0x1f61:0x5c422c2d
  405974:	xchg   BYTE PTR [ebp-0x6a],dl
  405977:	inc    esi
  405978:	idiv   DWORD PTR [esi]
  40597a:	out    dx,al
  40597b:	push   0x838f5aef
  405980:	dec    ebp
  405981:	(bad)  
  405982:	pop    ss
  405983:	add    BYTE PTR [eax],bh
  405985:	cmc    
  405986:	inc    edi
  405987:	cdq    
  405988:	mov    al,0xba
  40598a:	inc    eax
  40598b:	dec    edi
  40598c:	xchg   edx,eax
  40598d:	in     eax,dx
  40598e:	repnz scas eax,DWORD PTR es:[edi]
  405990:	ret    
  405991:	and    BYTE PTR [ebx+edx*4+0x54],bl
  405995:	cwde   
  405996:	ss into 
  405998:	outs   dx,BYTE PTR ds:[esi]
  405999:	shl    edi,0x1d
  40599c:	mov    ss,WORD PTR [edi+0x5e]
  40599f:	sbb    BYTE PTR [edi-0x4eea6e54],0xb8
  4059a6:	cmp    BYTE PTR [edi+ecx*2],al
  4059a9:	jne    0x405942
  4059ab:	fucomip st,st(4)
  4059ad:	mov    DWORD PTR ds:0x83a43817,ebx
  4059b3:	pop    ds
  4059b4:	mov    dh,0xbb
  4059b6:	pop    ebx
  4059b7:	imul   ebp,DWORD PTR [ecx-0x253332e9],0x54102fa4
  4059c1:	add    DWORD PTR [esi-0x3],esp
  4059c4:	xchg   edx,eax
  4059c5:	add    DWORD PTR [esp+edx*2-0x37546a9a],ebp
  4059cc:	pop    edi
  4059cd:	push   ds
  4059ce:	push   ebx
  4059cf:	pop    edi
  4059d0:	(bad)  
  4059d1:	ds cld 
  4059d3:	lock dec esp
  4059d5:	jo     0x405984
  4059d7:	rcr    BYTE PTR [ecx-0x12],0x91
  4059db:	leave  
  4059dc:	xchg   esp,eax
  4059dd:	push   ds
  4059de:	sub    BYTE PTR [edx],0xc1
  4059e1:	pop    eax
  4059e2:	push   esp
  4059e3:	in     eax,dx
  4059e4:	mov    cl,0xb6
  4059e6:	aad    0x77
  4059e8:	je     0x4059fe
  4059ea:	ds cdq 
  4059ec:	stc    
  4059ed:	gs out 0x35,al
  4059f0:	dec    ebx
  4059f1:	gs pop ecx
  4059f3:	or     eax,0xfc822956
  4059f8:	repnz fistp QWORD PTR [ecx]
  4059fb:	ret    
  4059fc:	pop    esi
  4059fd:	push   edx
  4059fe:	addr16 cli 
  405a00:	sub    eax,0xedd0f0d0
  405a05:	push   ds
  405a06:	ss sbb eax,0x4f428661
  405a0c:	push   ecx
  405a0d:	or     DWORD PTR [edx+ebx*2],ebx
  405a10:	cmp    eax,0x1b2bd5ba
  405a15:	out    0xf6,al
  405a17:	lea    ebx,[ebx]
  405a19:	xchg   esi,eax
  405a1a:	loop   0x405a7c
  405a1c:	dec    esp
  405a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a1e:	popf   
  405a1f:	push   es
  405a20:	xor    eax,0x5
  405a23:	pop    es
  405a24:	push   esp
  405a25:	pop    ss
  405a26:	out    0x12,eax
  405a28:	jb     0x4059b2
  405a2a:	mov    ah,0x98
  405a2c:	(bad)  
  405a2d:	lds    edi,FWORD PTR [si+0x7b]
  405a31:	bnd call 0x40287842
  405a37:	loopne 0x405aa9
  405a39:	popf   
  405a3a:	mov    es,WORD PTR [ebp+ebp*8+0x1639b71a]
  405a41:	pop    ecx
  405a42:	jnp    0x4059f1
  405a44:	adc    eax,0x5af73020
  405a49:	int    0xe5
  405a4b:	xlat   BYTE PTR ds:[ebx]
  405a4c:	stos   DWORD PTR es:[edi],eax
  405a4d:	and    BYTE PTR [esi+ecx*2],al
  405a50:	enter  0xb046,0xc
  405a54:	inc    edx
  405a55:	mov    ds:0xaa8d60de,eax
  405a5a:	outs   dx,BYTE PTR ds:[esi]
  405a5b:	or     eax,0x361a11be
  405a60:	aaa    
  405a61:	add    DWORD PTR [esi-0x1888d788],esp
  405a67:	loop   0x405a0e
  405a69:	iret   
  405a6a:	sub    dl,dl
  405a6c:	add    DWORD PTR [esi+eiz*4],0xffffff8e
  405a70:	pop    es
  405a71:	ret    
  405a72:	dec    BYTE PTR [edi]
  405a74:	xor    eax,0xbfa02d1f
  405a79:	cwde   
  405a7a:	cmp    eax,0x1a694b78
  405a7f:	outs   dx,BYTE PTR ds:[esi]
  405a80:	fs popf 
  405a82:	out    0xda,al
  405a84:	jge    0x405ae9
  405a86:	nop
  405a87:	fstp   QWORD PTR [esi+0x2a9ef73a]
  405a8d:	xor    BYTE PTR [eax+0x7e],cl
  405a90:	cld    
  405a91:	inc    ebp
  405a92:	cmp    BYTE PTR [edi+ebp*1+0x37938c4d],ah
  405a99:	add    BYTE PTR [edx+0x36],ah
  405a9c:	imul   ebx,DWORD PTR [esi-0x289a3c95],0x2a
  405aa3:	jo     0x405ad9
  405aa5:	lods   al,BYTE PTR ds:[esi]
  405aa6:	sub    edi,DWORD PTR [edx-0x5c]
  405aa9:	jbe    0x405afa
  405aab:	cdq    
  405aac:	dec    esi
  405aad:	mov    dh,0x9
  405aaf:	retf   
  405ab0:	retf   
  405ab1:	test   al,0xac
  405ab3:	jne    0x405b1a
  405ab5:	out    dx,eax
  405ab6:	push   ebp
  405ab7:	mov    WORD PTR [esi+0x79],ds
  405aba:	ja     0x405aaf
  405abc:	inc    edi
  405abd:	jge    0x405b04
  405abf:	cmc    
  405ac0:	pop    es
  405ac1:	adc    dl,BYTE PTR [eax]
  405ac3:	imul   ebx,DWORD PTR [ebp+0x11abf31b],0x6f
  405aca:	jmp    0x2acc3c31
  405acf:	xchg   ebp,eax
  405ad0:	shl    DWORD PTR [ecx],0x3e
  405ad3:	and    eax,0x25d2f275
  405ad8:	ins    DWORD PTR es:[edi],dx
  405ad9:	clc    
  405ada:	ud2    
  405adc:	fld    TBYTE PTR es:[ebp+0x38]
  405ae0:	stos   DWORD PTR es:[edi],eax
  405ae1:	out    0x73,eax
  405ae3:	jae    0x405b57
  405ae5:	mov    ds:0xc579a5e6,eax
  405aea:	cli    
  405aeb:	ss push edx
  405aed:	inc    ecx
  405aee:	inc    edi
  405aef:	jp     0xc989b20a
  405af5:	add    al,0xe
  405af7:	jnp    0x405b67
  405af9:	mov    eax,ds:0x1d393dfa
  405afe:	cmc    
  405aff:	cmp    esi,ebx
  405b01:	cmp    al,0x8a
  405b03:	fstp   TBYTE PTR [ebp-0x2]
  405b06:	xor    al,BYTE PTR [ebp-0x7c]
  405b09:	out    dx,al
  405b0a:	fwait
  405b0b:	rcl    DWORD PTR ds:[esi+0x64],1
  405b0f:	or     eax,0x6b21a568
  405b14:	ss jno 0x405ad6
  405b17:	out    0x92,al
  405b19:	scas   al,BYTE PTR es:[edi]
  405b1a:	and    DWORD PTR [esi+edi*8],eax
  405b1d:	adc    DWORD PTR [edi+eax*8],esi
  405b20:	adc    BYTE PTR [edx],ah
  405b22:	or     al,0x8e
  405b24:	adc    bh,al
  405b26:	fadd   QWORD PTR [ecx]
  405b28:	xchg   ebp,edx
  405b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b2b:	mov    dh,0x7c
  405b2d:	(bad)  
  405b2e:	push   ds
  405b2f:	test   al,0x74
  405b31:	idiv   BYTE PTR [edx+ebx*1+0x18e95486]
  405b38:	inc    esi
  405b39:	inc    ebp
  405b3a:	rcl    BYTE PTR [edi-0x7cf13eb3],1
  405b40:	push   edi
  405b41:	out    0x5d,eax
  405b43:	mov    eax,0xe126cb1b
  405b48:	je     0x405b5f
  405b4a:	scas   eax,DWORD PTR es:[edi]
  405b4b:	fild   DWORD PTR [ebx-0x1fca9619]
  405b51:	inc    ebp
  405b52:	mov    bl,0x82
  405b54:	adc    al,0x83
  405b56:	sub    edi,eax
  405b58:	push   esi
  405b59:	sub    al,0xfa
  405b5b:	sbb    edi,DWORD PTR [esi+0xae3dcf0]
  405b61:	mov    esi,DWORD PTR [edi+0x62]
  405b64:	stos   DWORD PTR es:[edi],eax
  405b65:	mov    dl,0x2d
  405b67:	rol    BYTE PTR [eax],cl
  405b69:	dec    edi
  405b6a:	xchg   ecx,eax
  405b6b:	loopne 0x405bb4
  405b6d:	aas    
  405b6e:	das    
  405b6f:	ret    
  405b70:	xor    BYTE PTR [ebx-0x52],bh
  405b73:	jnp    0x405b7a
  405b75:	(bad)  [ebx]
  405b77:	clc    
  405b78:	mov    al,ds:0x4f9026cc
  405b7d:	scas   al,BYTE PTR es:[edi]
  405b7e:	inc    esp
  405b7f:	lahf   
  405b80:	xor    DWORD PTR [esi+0x36],esp
  405b83:	mov    al,0xd5
  405b85:	cmc    
  405b86:	dec    edi
  405b87:	mov    ecx,DWORD PTR [ebx]
  405b89:	mov    dl,0x27
  405b8b:	(bad)  
  405b8c:	loop   0x405c0c
  405b8e:	add    eax,0x1afb17aa
  405b93:	mov    fs,WORD PTR [eax-0x46]
  405b96:	push   DWORD PTR [eax-0x5a5edf4b]
  405b9c:	aam    0x0
  405b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b9f:	in     eax,dx
  405ba0:	(bad)  [esi*1-0x404f1609]
  405ba7:	call   0x70aaba5b
  405bac:	loop   0x405bf6
  405bae:	fist   WORD PTR [edx]
  405bb0:	(bad)  
  405bb1:	push   ss
  405bb2:	or     eax,0xfa92b7ba
  405bb7:	push   ss
  405bb8:	cs jb  0x405b8f
  405bbb:	mov    ebx,0x58161859
  405bc0:	cmp    ebp,DWORD PTR [eax-0xe6fe9cf]
  405bc6:	in     al,0x37
  405bc8:	scas   eax,DWORD PTR es:[edi]
  405bc9:	cmp    BYTE PTR [edi],al
  405bcb:	fwait
  405bcc:	outs   dx,BYTE PTR ds:[esi]
  405bcd:	jmp    0xff9:0x1919f4d1
  405bd4:	add    esp,DWORD PTR [ecx+0x1a]
  405bd7:	adc    dl,BYTE PTR [ebp-0x5f]
  405bda:	iret   
  405bdb:	push   esp
  405bdc:	(bad)  
  405bdd:	in     eax,0xbf
  405bdf:	sub    al,0xac
  405be1:	cmp    DWORD PTR [edx-0x367403],0x1edf611d
  405beb:	mov    eax,0xa541f220
  405bf0:	(bad)  
  405bf1:	out    dx,al
  405bf2:	aaa    
  405bf3:	fmul   QWORD PTR [ecx]
  405bf5:	jle    0x405bc1
  405bf7:	jecxz  0x405c05
  405bf9:	push   edi
  405bfa:	dec    edx
  405bfb:	xchg   esp,eax
  405bfc:	push   ebp
  405bfd:	cmp    DWORD PTR [ecx-0x4f],0x3609b39c
  405c04:	fs sub bl,ch
  405c07:	mov    bl,0x4a
  405c09:	iret   
  405c0a:	test   al,0x73
  405c0c:	dec    esp
  405c0d:	sbb    edi,DWORD PTR [ecx+0x59e2131c]
  405c13:	add    esp,DWORD PTR [edi]
  405c15:	call   0x302a:0x90a9a047
  405c1c:	or     al,0x2f
  405c1e:	or     eax,0x9e02cb5f
  405c23:	stos   BYTE PTR es:[edi],al
  405c24:	sub    al,BYTE PTR [edi+ebp*4+0x6b]
  405c28:	loopne 0x405c5e
  405c2a:	gs jle 0x405c4c
  405c2d:	popf   
  405c2e:	std    
  405c2f:	fadd   DWORD PTR [eax-0x3ce7d63d]
  405c35:	bound  ecx,QWORD PTR [ebx-0x3e070365]
  405c3b:	pop    ebx
  405c3c:	inc    eax
  405c3d:	jae    0x405c58
  405c3f:	pop    ds
  405c40:	outs   dx,BYTE PTR ds:[esi]
  405c41:	lock mov cl,0x6e
  405c44:	push   edi
  405c45:	call   0xfc0c7e3b
  405c4a:	cli    
  405c4b:	ret    0xf742
  405c4e:	sub    ah,bh
  405c50:	iret   
  405c51:	mov    al,0x62
  405c53:	mov    DWORD PTR [ebp+0x51],0xc4a211e8
  405c5a:	sbb    BYTE PTR [ebx+0x6d36c1ea],bl
  405c60:	lahf   
  405c61:	sbb    al,0x2a
  405c63:	pop    esp
  405c64:	ja     0x405c66
  405c66:	int    0x74
  405c68:	xor    eax,0xec68860f
  405c6d:	test   DWORD PTR [esp+eax*2-0x20],eax
  405c71:	retf   0x502e
  405c74:	inc    esi
  405c75:	dec    BYTE PTR [ebx-0x7dc7b4a9]
  405c7b:	jns    0x405c2d
  405c7d:	data16 mov ch,0x87
  405c80:	pushf  
  405c81:	mov    eax,0xf633d26f
  405c86:	pop    esp
  405c87:	sti    
  405c88:	mov    ds:0x60018742,al
  405c8d:	cwde   
  405c8e:	loope  0x405cfa
  405c90:	sbb    ch,al
  405c92:	dec    ebx
  405c93:	enter  0xc695,0x4
  405c97:	push   ecx
  405c98:	push   esp
  405c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c9a:	aad    0x27
  405c9c:	push   cs
  405c9d:	scas   al,BYTE PTR es:[edi]
  405c9e:	js     0x405c4e
  405ca0:	lea    ecx,[esi]
  405ca2:	push   es
  405ca3:	mov    esi,0x1459e93a
  405ca8:	jbe    0x405c5a
  405caa:	pop    edx
  405cab:	fadd   QWORD PTR [ebx-0x22c036b2]
  405cb1:	adc    eax,0xf1b63540
  405cb6:	mov    cs,WORD PTR [eax+0xd]
  405cb9:	sbb    ch,BYTE PTR [eax+0x1e3fac7f]
  405cbf:	xchg   edi,eax
  405cc0:	inc    edx
  405cc1:	push   0xffffff9a
  405cc3:	ins    DWORD PTR es:[edi],dx
  405cc4:	mov    al,BYTE PTR [edx-0x7b]
  405cc7:	out    dx,eax
  405cc8:	pop    esi
  405cc9:	push   edx
  405cca:	pop    ss
  405ccb:	and    eax,0x3af561d9
  405cd0:	pop    ds
  405cd1:	lock sbb BYTE PTR [edx+esi*2],0x16
  405cd6:	xchg   ebp,eax
  405cd7:	jecxz  0x405c9f
  405cd9:	into   
  405cda:	rol    eax,cl
  405cdc:	sbb    edx,ecx
  405cde:	adc    BYTE PTR [ecx],0xf4
  405ce1:	mov    bh,0x12
  405ce3:	shl    esi,cl
  405ce5:	add    bl,BYTE PTR [ecx]
  405ce7:	add    dl,BYTE PTR [edi+0x32a983a0]
  405ced:	enter  0x6fc9,0x70
  405cf1:	mov    esp,DWORD PTR [edi+0x30]
  405cf4:	mov    bh,0x7a
  405cf6:	dec    ebp
  405cf7:	inc    ecx
  405cf8:	push   edx
  405cf9:	aad    0xdc
  405cfb:	aas    
  405cfc:	cwde   
  405cfd:	dec    ebx
  405cfe:	out    0x98,eax
  405d00:	lods   eax,DWORD PTR ds:[esi]
  405d01:	sub    ch,BYTE PTR cs:[ecx]
  405d04:	stc    
  405d05:	gs int 0x7e
  405d08:	ds xor al,0x97
  405d0b:	icebp  
  405d0c:	cwde   
  405d0d:	paddusb mm4,QWORD PTR [edi]
  405d10:	pushf  
  405d11:	jb     0x405ccf
  405d13:	call   DWORD PTR [esi-0x1de810c8]
  405d19:	mov    ebx,0xd4f8e322
  405d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1f:	in     al,dx
  405d20:	imul   edi,ebx,0x688b8f1a
  405d26:	jg     0x405ca9
  405d28:	adc    al,dl
  405d2a:	adc    BYTE PTR [ebx+0x75],cl
  405d2d:	and    BYTE PTR [edx+0x1d41cbfa],ah
  405d33:	mov    al,0xce
  405d35:	mov    al,ds:0x4fad954b
  405d3a:	jmp    0x3e00:0x47a40e9f
  405d41:	xor    BYTE PTR ds:0xb2412753,al
  405d47:	sbb    al,0xc1
  405d49:	and    al,0x41
  405d4b:	mov    ah,0xfa
  405d4d:	cmp    BYTE PTR [esi+0x35],bh
  405d50:	sahf   
  405d51:	(bad)  
  405d52:	out    0x46,al
  405d54:	and    DWORD PTR [edx+0x2e],ecx
  405d57:	nop
  405d58:	es ret 0x95b6
  405d5c:	sub    al,BYTE PTR [esi-0x6fc227f2]
  405d62:	sahf   
  405d63:	rcr    DWORD PTR [esi+ecx*8+0x22],0x46
  405d68:	(bad)  
  405d69:	into   
  405d6a:	inc    edx
  405d6b:	jg     0x405d33
  405d6d:	jo     0x405da2
  405d6f:	xchg   esi,eax
  405d70:	sbb    bh,BYTE PTR [esi-0x72bddeb]
  405d76:	add    BYTE PTR [esp+edi*4],ah
  405d79:	jo     0x405d95
  405d7b:	xchg   edx,eax
  405d7c:	test   edi,esi
  405d7e:	jecxz  0x405d1b
  405d80:	adc    eax,0x56b40414
  405d85:	gs mov bl,0x92
  405d88:	cmp    BYTE PTR [edi-0x5d],dh
  405d8b:	int    0x85
  405d8d:	sub    BYTE PTR [eax-0x73],0xfb
  405d91:	out    dx,al
  405d92:	push   edi
  405d93:	push   0x9377b203
  405d98:	inc    ebp
  405d99:	mov    dh,0xe6
  405d9b:	xchg   esp,eax
  405d9c:	cmp    edi,DWORD PTR [ebp-0x9]
  405d9f:	mov    ch,0xcf
  405da1:	scas   al,BYTE PTR es:[edi]
  405da2:	dec    edx
  405da3:	or     ebp,DWORD PTR [edx+ebx*1-0x2d]
  405da7:	mov    bh,0x47
  405da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405daa:	cmp    dh,BYTE PTR [eax-0x4d]
  405dad:	mov    esi,0xb5967f79
  405db2:	push   esp
  405db3:	pop    es
  405db4:	add    eax,0x550585bc
  405db9:	adc    eax,0xc8b1acce
  405dbe:	adc    eax,0x757b70a4
  405dc3:	retf   0x42a1
  405dc6:	xchg   esi,eax
  405dc7:	gs dec ebp
  405dc9:	push   ss
  405dca:	iret   
  405dcb:	xchg   ebp,eax
  405dcc:	dec    ecx
  405dcd:	retf   0x27d7
  405dd0:	xor    BYTE PTR [eax+0x5e653be8],ch
  405dd6:	xor    DWORD PTR [ecx+0x58],esi
  405dd9:	mov    ebp,DWORD PTR [ecx+0x1b0b48c]
  405ddf:	cs loope 0x405d87
  405de2:	imul   esp,DWORD PTR [ebx],0x54
  405de5:	(bad)  
  405de6:	imul   ebx,DWORD PTR [edi+0x47],0x9d50c6d3
  405ded:	xlat   BYTE PTR ds:[ebx]
  405dee:	inc    ebx
  405df0:	xchg   edi,eax
  405df1:	cdq    
  405df2:	(bad)  
  405df3:	ror    esp,1
  405df5:	mov    ebp,ebp
  405df7:	outs   dx,DWORD PTR ds:[esi]
  405df8:	sub    eax,DWORD PTR [edi-0x16]
  405dfb:	ret    0x91be
  405dfe:	cmc    
  405dff:	inc    edx
  405e00:	sbb    cl,dh
  405e02:	cmp    esi,DWORD PTR [esi+0x5aea9efa]
  405e08:	sub    al,0x44
  405e0a:	pop    esp
  405e0b:	rol    esi,0x68
  405e0e:	lds    ebp,FWORD PTR [eax]
  405e10:	data16 mov al,0xa2
  405e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e14:	pop    ss
  405e15:	and    al,BYTE PTR [edx]
  405e17:	icebp  
  405e18:	pop    eax
  405e19:	call   0xffd9:0xa619d159
  405e20:	xor    BYTE PTR [ebx],bh
  405e22:	add    DWORD PTR [edx+0x1a2b11e4],esi
  405e28:	jge    0x405e36
  405e2a:	aas    
  405e2b:	ret    0xf688
  405e2e:	jno    0x405e03
  405e30:	fcomp  QWORD PTR [edx+0x6bd81d32]
  405e36:	int3   
  405e37:	call   0x63fd:0xf7edfd4f
  405e3e:	js     0x405e34
  405e40:	jmp    0xb0bbf174
  405e45:	fmul   QWORD PTR [esi-0x67]
  405e48:	sub    eax,0x20ddc8b7
  405e4d:	icebp  
  405e4e:	in     eax,dx
  405e4f:	mov    BYTE PTR [ebx+ecx*2],dh
  405e52:	mov    dl,0x8f
  405e54:	inc    eax
  405e55:	iret   
  405e56:	cwde   
  405e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e58:	xchg   esi,eax
  405e59:	xor    BYTE PTR [ecx-0x6a],dh
  405e5c:	dec    ecx
  405e5d:	pop    esi
  405e5e:	and    dl,BYTE PTR [edx+0x6a]
  405e61:	cwde   
  405e62:	je     0x405e3a
  405e64:	cli    
  405e65:	retf   0x655a
  405e68:	and    esp,ebp
  405e6a:	jp     0x405e1a
  405e6c:	jb     0x405e3b
  405e6e:	test   DWORD PTR [esi+edx*4+0x28],edi
  405e72:	adc    al,0xfc
  405e74:	cmp    al,0x9
  405e76:	rol    BYTE PTR [esi+0x644201f5],1
  405e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e7d:	sub    DWORD PTR [edi],edi
  405e7f:	jmp    0x46265ec0
  405e84:	sub    ch,BYTE PTR [ebx+0x65]
  405e87:	scas   eax,DWORD PTR es:[edi]
  405e88:	inc    ebx
  405e89:	cmp    dh,BYTE PTR [edi-0x3a]
  405e8c:	jmp    0x4574:0x2c050ad
  405e93:	add    ebx,0x92f01bc8
  405e99:	inc    eax
  405e9a:	(bad)  
  405e9c:	xchg   ebp,eax
  405e9d:	es stos DWORD PTR es:[edi],eax
  405e9f:	js     0x405e98
  405ea1:	inc    ebp
  405ea2:	add    BYTE PTR [esi-0x2],dl
  405ea5:	std    
  405ea6:	adc    ebp,DWORD PTR ds:0xd0b3a462
  405eac:	loope  0x405e78
  405eae:	das    
  405eaf:	in     eax,0x50
  405eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eb2:	mov    ds:0x2b9bcaa5,eax
  405eb7:	adc    bl,BYTE PTR [ecx-0xbad55ba]
  405ebd:	dec    edx
  405ebe:	sub    eax,0x26551f6c
  405ec3:	pop    es
  405ec4:	and    eax,0xbb441fa6
  405ec9:	jae    0x405f0d
  405ecb:	adc    eax,0x8500c498
  405ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed1:	ror    BYTE PTR es:[esp+edi*2-0x25ea1896],cl
  405ed9:	jp     0x405ead
  405edb:	hlt    
  405edc:	add    BYTE PTR [edi],ch
  405ede:	push   0x3a
  405ee0:	xchg   edx,eax
  405ee1:	fwait
  405ee2:	mov    ch,0x14
  405ee4:	rol    ebx,0x28
  405ee7:	dec    edi
  405ee8:	cmp    DWORD PTR [ebp+0x2441cd8],edi
  405eee:	jle    0x405e70
  405ef0:	rol    BYTE PTR [edx+0x13],0x1e
  405ef4:	add    al,0x2
  405ef6:	cmp    al,0x4a
  405ef8:	test   eax,0xa1a28472
  405efd:	sbb    ebp,DWORD PTR [ecx+0x16]
  405f00:	push   edx
  405f01:	shl    BYTE PTR [ebx],cl
  405f03:	mov    ah,0xd
  405f05:	stc    
  405f06:	pop    esp
  405f07:	jge    0x405ec0
  405f09:	push   eax
  405f0a:	and    BYTE PTR [edi-0x5c],ah
  405f0d:	jmp    0x5a4e:0xac8f5382
  405f14:	stos   DWORD PTR es:[di],eax
  405f16:	cdq    
  405f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f18:	(bad)  
  405f1a:	push   esp
  405f1b:	fld    QWORD PTR es:[esi-0x54]
  405f1f:	(bad)  
  405f20:	shr    BYTE PTR ds:0x2e568efd,1
  405f26:	loope  0x405f41
  405f28:	sub    DWORD PTR [eax-0x17],ecx
  405f2b:	cli    
  405f2c:	fnstenv [edx+ebp*1-0x7760bad9]
  405f33:	and    al,ah
  405f35:	repz pop eax
  405f37:	sub    dl,BYTE PTR cs:[esi+0x3c06f747]
  405f3e:	sub    eax,0xb4f4f1bc
  405f43:	xchg   BYTE PTR [ebx+0x44a8c299],cl
  405f49:	out    0x95,eax
  405f4b:	jnp    0x405f07
  405f4d:	xchg   ebx,eax
  405f4e:	and    eax,0x588cbbdb
  405f53:	adc    cl,BYTE PTR [esi-0x7547997d]
  405f59:	adc    DWORD PTR [esi+0x5d],esi
  405f5c:	and    eax,0x3763fa98
  405f61:	div    DWORD PTR [esi]
  405f63:	in     eax,0x33
  405f65:	sub    edi,DWORD PTR [ebx+edi*4]
  405f68:	sub    BYTE PTR [ecx+0x14ba051f],ch
  405f6e:	ins    DWORD PTR es:[edi],dx
  405f6f:	mov    dh,0x7a
  405f71:	xchg   esi,eax
  405f72:	adc    edx,ecx
  405f74:	(bad)  
  405f75:	call   0xdfca:0x96157fbf
  405f7c:	ror    DWORD PTR [ecx],0xde
  405f7f:	scas   eax,DWORD PTR es:[edi]
  405f80:	mov    edx,0x48bf64c8
  405f85:	(bad)
  405f88:	or     al,BYTE PTR [ecx+0xb]
  405f8b:	pusha  
  405f8c:	fbstp  TBYTE PTR [edx]
  405f8e:	or     al,0xa4
  405f90:	pop    esp
  405f91:	inc    ebp
  405f92:	cli    
  405f93:	mov    esp,ecx
  405f95:	ds cmp al,0xe3
  405f98:	adc    ch,BYTE PTR [esi]
  405f9a:	and    ch,BYTE PTR [edx]
  405f9c:	xchg   BYTE PTR [eax],ah
  405f9e:	cdq    
  405f9f:	adc    al,0x6e
  405fa1:	mov    eax,ds:0x8f8d3f0a
  405fa6:	stc    
  405fa7:	push   edx
  405fa8:	sub    al,0xa8
  405faa:	mov    ch,0x7
  405fac:	icebp  
  405fad:	mov    eax,ds:0x51cd5274
  405fb2:	cmp    al,0x56
  405fb4:	sub    ebp,edi
  405fb6:	loopne 0x405fdd
  405fb8:	mov    ds:0x7b59d02c,al
  405fbd:	mov    esi,0x5a010bef
  405fc2:	outs   dx,BYTE PTR ds:[esi]
  405fc3:	push   cs
  405fc4:	enter  0x2c64,0x5a
  405fc8:	sti    
  405fc9:	mov    ecx,0xd3b0f9a2
  405fce:	mov    eax,0xb73a9d38
  405fd3:	stc    
  405fd4:	mov    BYTE PTR [edi-0x5f],ah
  405fd7:	je     0x405f9a
  405fd9:	xor    BYTE PTR [edi],0xac
  405fdc:	hlt    
  405fdd:	scas   al,BYTE PTR es:[edi]
  405fde:	mov    al,0x96
  405fe0:	fistp  QWORD PTR [ebp+0x7dc83ded]
  405fe6:	mov    ah,0x72
  405fe8:	ror    DWORD PTR [ebp+0x34001adb],1
  405fee:	call   0xe32c0f99
  405ff3:	aaa    
  405ff4:	pop    edi
  405ff5:	repz loop 0x406066
  405ff8:	dec    eax
  405ff9:	and    al,bl
  405ffb:	sub    al,BYTE PTR [ebp-0x1b]
  405ffe:	xchg   BYTE PTR [esi-0x60],ah
  406001:	push   bp
  406003:	cli    
  406004:	sub    BYTE PTR [esp+ecx*4],0x3d
  406008:	and    DWORD PTR [ebp-0x37f7ca46],eax
  40600e:	scas   eax,DWORD PTR es:[edi]
  40600f:	adc    ecx,esi
  406011:	inc    edi
  406012:	pop    ebx
  406013:	mov    esp,0xacba5fb4
  406018:	mov    dh,0xcf
  40601a:	cmp    al,0x39
  40601c:	xchg   ebx,eax
  40601d:	add    eax,0xbc382639
  406022:	or     dh,BYTE PTR [edx]
  406024:	popa   
  406025:	jns    0x405fcd
  406027:	add    bl,al
  406029:	sbb    al,0xe
  40602b:	int    0x94
  40602d:	push   esi
  40602e:	sub    DWORD PTR [edi+esi*1+0x5b8df0d7],edx
  406035:	dec    edi
  406036:	scas   al,BYTE PTR es:[edi]
  406037:	mov    ah,BYTE PTR [eax]
  406039:	pop    ebp
  40603a:	(bad)  
  40603b:	jns    0x406091
  40603d:	jnp    0x40608c
  40603f:	retf   
  406040:	pushf  
  406041:	mov    BYTE PTR [eax],ch
  406043:	(bad)  
  406045:	xor    eax,0xdc93e259
  40604a:	mov    ch,0x51
  40604c:	std    
  40604d:	fs jns 0x40607d
  406050:	pushf  
  406051:	dec    edi
  406052:	jl     0x406096
  406054:	(bad)  [edx]
  406056:	div    cl
  406058:	int3   
  406059:	xor    esp,DWORD PTR [ebx+0x61]
  40605c:	pop    edi
  40605d:	pop    ecx
  40605e:	xchg   DWORD PTR [ebp+0x73],edi
  406061:	sbb    DWORD PTR [edi],0x29b9b463
  406067:	ins    BYTE PTR es:[edi],dx
  406068:	stos   DWORD PTR es:[edi],eax
  406069:	sahf   
  40606a:	loopne 0x4060c3
  40606c:	shl    BYTE PTR [ebp-0x20994cc0],1
  406072:	push   esi
  406073:	shl    DWORD PTR [edx+0x7a],1
  406076:	aaa    
  406077:	mov    ds:0x70f06094,al
  40607c:	push   eax
  40607d:	lods   eax,DWORD PTR ds:[esi]
  40607e:	out    0x94,al
  406080:	push   ss
  406081:	sub    eax,0x5a3c3240
  406086:	jl     0x406053
  406088:	dec    edi
  406089:	(bad)  
  40608a:	cmp    eax,0x65d322d6
  40608f:	repz jb 0x4060d8
  406092:	pop    eax
  406093:	mov    esp,0xbe039e6d
  406098:	mov    al,ds:0xc8c5470c
  40609d:	mov    ebx,0x30fe511f
  4060a2:	mov    esi,0xe2bf0117
  4060a7:	(bad)  
  4060a8:	popw   es
  4060aa:	xor    eax,0x384d3cc5
  4060af:	push   ecx
  4060b0:	sahf   
  4060b1:	and    dl,BYTE PTR [edx-0x635e608e]
  4060b7:	mov    cr3,esp
  4060ba:	cmp    DWORD PTR [edi+ebx*2],ebp
  4060bd:	mov    edi,0x72e88450
  4060c2:	stos   DWORD PTR es:[edi],eax
  4060c3:	and    ah,ch
  4060c5:	loop   0x40605a
  4060c7:	es ret 
  4060c9:	lea    ecx,[ebx-0x39cc0bab]
  4060cf:	add    eax,edi
  4060d1:	imul   eax,edx
  4060d4:	mov    edx,DWORD PTR [ebp-0x28]
  4060d7:	xor    edx,esi
  4060d9:	add    eax,edx
  4060db:	mov    edx,DWORD PTR [ebp-0x8]
  4060de:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  4060e6:	mov    edx,DWORD PTR [ebp-0x50]
  4060e9:	xor    edx,esi
  4060eb:	lea    eax,[edx+eax*1+0x3272f8]
  4060f2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060f6:	xor    edx,eax
  4060f8:	mov    BYTE PTR [ebp-0x1],dl
  4060fb:	mov    al,BYTE PTR [ebp-0x1]
  4060fe:	mov    edx,DWORD PTR [ebp-0x30]
  406101:	mov    ebx,DWORD PTR [ebp-0xc]
  406104:	xor    edx,esi
  406106:	add    edx,edi
  406108:	imul   edx,ebx
  40610b:	jmp    0x408462
  406110:	add    eax,edx
  406112:	test   BYTE PTR [esi+edx*2],al
  406115:	pop    eax
  406116:	add    edx,ebx
  406118:	push   edx
  406119:	popf   
  40611a:	and    dl,bh
  40611c:	mov    BYTE PTR [ebx],cl
  40611e:	stos   BYTE PTR es:[edi],al
  40611f:	pop    esp
  406120:	out    dx,eax
  406121:	sar    DWORD PTR [ebx+0x7b],0xb5
  406125:	sahf   
  406126:	jnp    0x4061a3
  406128:	jge    0x406184
  40612a:	in     eax,dx
  40612b:	in     al,dx
  40612c:	push   esi
  40612d:	mov    al,cl
  40612f:	push   ss
  406130:	in     al,dx
  406131:	mov    esi,0x6ea63b3c
  406136:	xlat   BYTE PTR ds:[ebx]
  406137:	in     al,dx
  406138:	fwait
  406139:	in     al,0x40
  40613b:	cmp    DWORD PTR ds:0x4c3f22b7,esi
  406141:	nop
  406142:	mov    eax,edi
  406144:	inc    ecx
  406145:	sti    
  406146:	les    ebx,FWORD PTR [edi-0x1ecc1d47]
  40614c:	(bad)  [ecx+0x5c]
  40614f:	enter  0x2684,0x6b
  406153:	fincstp 
  406155:	or     al,0x1d
  406157:	pop    ebp
  406158:	retf   0x5d71
  40615b:	shl    DWORD PTR [edx],0x44
  40615e:	or     al,0xa4
  406160:	push   0xccff4302
  406165:	inc    edx
  406166:	mov    WORD PTR [eax-0x414ef007],cs
  40616c:	cmp    BYTE PTR [edi],cl
  40616e:	sbb    bl,ah
  406170:	mov    bh,0xda
  406172:	cwde   
  406173:	inc    edx
  406174:	push   edi
  406175:	ins    DWORD PTR es:[edi],dx
  406176:	mov    bh,0x2a
  406178:	push   es
  406179:	rcr    DWORD PTR [edi+0x29d052a1],0xc3
  406180:	mov    ebx,0xc13a5262
  406185:	outs   dx,DWORD PTR ds:[esi]
  406186:	enter  0x8c84,0x1b
  40618a:	rol    BYTE PTR [edx],cl
  40618c:	outs   dx,DWORD PTR ds:[esi]
  40618d:	and    BYTE PTR [ebp+ebp*4-0x14be1545],cl
  406194:	push   0x40
  406196:	sar    DWORD PTR [edx],0xa2
  406199:	ja     0x4061d3
  40619b:	fcmovbe st,st(7)
  40619d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40619e:	pop    edx
  40619f:	jmp    0xc83951ea
  4061a4:	test   eax,0xbc3bbaee
  4061a9:	es jecxz 0x4061d8
  4061ac:	call   0x981d3617
  4061b1:	loop   0x4061af
  4061b3:	add    BYTE PTR [edx-0x78244e6d],0xb2
  4061ba:	cmp    BYTE PTR [edi+0x3f386a03],al
  4061c0:	push   0xffffff98
  4061c2:	(bad)  
  4061c3:	iret   
  4061c4:	out    0x84,al
  4061c6:	ror    DWORD PTR [ebx+0x653bf343],1
  4061cc:	sbb    DWORD PTR [eax-0x48],esp
  4061cf:	cmp    edx,edi
  4061d1:	sbb    eax,0x2a50ab93
  4061d6:	push   edx
  4061d7:	push   cs
  4061d8:	xchg   ebx,eax
  4061d9:	icebp  
  4061da:	ins    DWORD PTR es:[edi],dx
  4061db:	xor    eax,0x42a24f5
  4061e0:	mov    DWORD PTR [ebx],ebp
  4061e2:	loop   0x406247
  4061e4:	push   ebx
  4061e5:	ja     0x4061af
  4061e7:	imul   ebp,ebx,0x6c922eec
  4061ed:	jp     0x40618d
  4061ef:	and    DWORD PTR [esi+0x61],ebx
  4061f2:	(bad)  
  4061f3:	mov    cl,0x5
  4061f5:	mov    eax,ds:0xf28812c2
  4061fa:	stc    
  4061fb:	xchg   ebx,eax
  4061fc:	xor    eax,0xc41f47f7
  406201:	push   edi
  406202:	xchg   edi,eax
  406203:	je     0x4061a2
  406205:	cmp    ch,BYTE PTR [edi+edx*4+0x2d]
  406209:	cld    
  40620a:	and    BYTE PTR [esi+0x73],bh
  40620d:	jae    0x406231
  40620f:	rcr    DWORD PTR [ebx-0x46],0xcd
  406213:	dec    ebx
  406214:	and    edi,eax
  406216:	sbb    dh,BYTE PTR [eax-0x7c3231e7]
  40621c:	shl    BYTE PTR ds:0xb8050187,0x1c
  406223:	add    DWORD PTR [edx-0xe],ecx
  406226:	and    DWORD PTR [edi],0xfffffff1
  406229:	jecxz  0x406271
  40622b:	jecxz  0x406271
  40622d:	push   ds
  40622e:	int3   
  40622f:	push   0x46
  406231:	mov    esi,0x2045156c
  406236:	xchg   ebx,eax
  406237:	in     al,0xb5
  406239:	sbb    al,0xee
  40623b:	int    0x6f
  40623d:	jo     0x4062b8
  40623f:	fistp  WORD PTR [esi]
  406241:	fst    QWORD PTR [edx-0x36]
  406244:	jmp    0x2d7f89a3
  406249:	test   dl,dl
  40624b:	mov    dl,0x68
  40624d:	add    eax,DWORD PTR [ecx+0x2c96980]
  406253:	cmp    cl,BYTE PTR [esi]
  406255:	inc    ecx
  406256:	jmp    0xf00f6a83
  40625b:	aaa    
  40625c:	dec    ecx
  40625d:	test   eax,0x4fef6130
  406262:	mov    ?,WORD PTR [ebp+0x2c]
  406265:	dec    edi
  406266:	into   
  406267:	das    
  406268:	into   
  406269:	in     al,0x2c
  40626b:	push   esi
  40626c:	xchg   ebx,eax
  40626e:	(bad)  
  40626f:	call   0x6ca609df
  406274:	cmc    
  406275:	mov    ebp,0x4245787
  40627a:	mov    ch,0x31
  40627c:	or     ah,BYTE PTR gs:[ebx+edi*2]
  406280:	sbb    bh,BYTE PTR [ebp-0x66]
  406283:	call   0x4256:0x5dfd03af
  40628a:	call   0x54fe17c3
  40628f:	mov    dl,0xaf
  406291:	xor    eax,0x1711c60a
  406296:	daa    
  406297:	lods   al,BYTE PTR ds:[esi]
  406298:	sbb    ecx,0x48d6c90
  40629e:	out    dx,eax
  40629f:	add    al,0xd4
  4062a1:	xor    eax,0x1d59264d
  4062a6:	outs   dx,DWORD PTR ds:[esi]
  4062a7:	or     BYTE PTR [ebx],cl
  4062a9:	pop    ds
  4062aa:	adc    BYTE PTR [edi+esi*2],0xb1
  4062ae:	dec    ebx
  4062af:	push   esp
  4062b0:	packssdw mm0,QWORD PTR [ecx-0x76287efa]
  4062b7:	lods   al,BYTE PTR ds:[esi]
  4062b8:	inc    eax
  4062b9:	std    
  4062ba:	pop    esp
  4062bb:	shr    BYTE PTR [edi],1
  4062bd:	out    0xd0,eax
  4062bf:	fnop   
  4062c1:	dec    ecx
  4062c2:	(bad)  
  4062c3:	jle    0x406265
  4062c5:	stos   DWORD PTR es:[edi],eax
  4062c6:	test   eax,0x81f88f01
  4062cb:	popf   
  4062cc:	jle    0x406336
  4062ce:	jne    0x406338
  4062d0:	outs   dx,DWORD PTR ds:[esi]
  4062d1:	mov    esp,0x7c9da0c9
  4062d6:	popa   
  4062d7:	mov    BYTE PTR [eax],al
  4062d9:	xchg   ecx,eax
  4062da:	xor    ebp,0xd82080bd
  4062e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062e1:	and    ebp,DWORD PTR [edi+0x46]
  4062e4:	cs daa 
  4062e6:	(bad)  
  4062e7:	aad    0x1
  4062e9:	pusha  
  4062ea:	add    edi,esp
  4062ec:	cli    
  4062ed:	sub    edi,DWORD PTR ds:0xed19f530
  4062f3:	mov    eax,0x54c43a48
  4062f8:	jg     0x4062b2
  4062fa:	cwde   
  4062fb:	inc    edx
  4062fc:	add    bh,dh
  4062fe:	adc    DWORD PTR [eax-0x8c8bd5b],edi
  406304:	inc    ebp
  406305:	repnz push cs
  406307:	adc    eax,0x74
  40630a:	das    
  40630b:	pop    ss
  40630c:	(bad)  
  40630d:	out    dx,al
  40630e:	jle    0x406350
  406310:	mov    dl,BYTE PTR [ebp-0x1d]
  406313:	cmp    bh,BYTE PTR [esi-0x452d358]
  406319:	or     ecx,ebp
  40631b:	push   edx
  40631c:	sub    al,0x2
  40631e:	push   ebp
  40631f:	mov    ebx,0x9966dfd3
  406324:	aad    0x74
  406326:	aaa    
  406327:	hlt    
  406328:	cdq    
  406329:	ret    
  40632a:	pop    esi
  40632b:	xchg   edx,eax
  40632c:	sbb    al,0x9d
  40632e:	std    
  40632f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406330:	xchg   edx,eax
  406331:	jno    0x4062c8
  406333:	jmp    0xd197:0xde66b9dd
  40633a:	in     eax,dx
  40633b:	or     eax,ebx
  40633d:	sti    
  40633e:	xor    eax,esi
  406340:	push   ecx
  406341:	dec    edx
  406342:	jne    0x406304
  406344:	xchg   BYTE PTR [ebx+0x3c],al
  406347:	pop    ds
  406348:	mov    eax,0xc4c4e3b7
  40634d:	push   eax
  40634e:	xchg   esi,eax
  40634f:	sub    ebp,DWORD PTR [ebp-0x25ec0c5e]
  406355:	inc    ecx
  406356:	popa   
  406357:	aad    0x47
  406359:	or     esi,eax
  40635b:	mov    ah,0x93
  40635d:	in     al,dx
  40635e:	fstp   st(7)
  406360:	inc    esp
  406361:	es sahf 
  406363:	(bad)  
  406364:	sbb    BYTE PTR [esi+ecx*4+0x9],cl
  406368:	jmp    0x4063b1
  40636a:	sub    DWORD PTR [esi+ebx*4],edi
  40636d:	shl    BYTE PTR [esi],cl
  40636f:	cmp    cl,cl
  406371:	push   esp
  406372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406373:	(bad)  
  406375:	fbstp  TBYTE PTR [edi]
  406377:	test   eax,0x9bde83da
  40637c:	mov    edi,0x8b322289
  406381:	inc    ebx
  406382:	mov    ch,0xdf
  406384:	pop    edx
  406385:	jmp    0x572b:0x15c8372
  40638c:	xlat   BYTE PTR ds:[ebx]
  40638d:	adc    eax,DWORD PTR [edi-0x425c8d57]
  406393:	test   BYTE PTR [ecx],bh
  406395:	xor    ebp,DWORD PTR [edi+eax*2]
  406398:	sbb    eax,0x3c4158a6
  40639d:	mov    ebp,0x33e116eb
  4063a2:	pop    edx
  4063a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a4:	sub    al,0x89
  4063a6:	loopne 0x406337
  4063a8:	idiv   cl
  4063aa:	xor    BYTE PTR ds:0xfb0f3791,bh
  4063b0:	push   eax
  4063b1:	push   0xffffffb6
  4063b3:	mov    ds:0xb67a204f,al
  4063b8:	pop    ds
  4063b9:	pop    es
  4063ba:	inc    esp
  4063bb:	scas   eax,DWORD PTR es:[edi]
  4063bc:	push   0xc175b571
  4063c1:	inc    ebx
  4063c2:	pop    ss
  4063c3:	or     DWORD PTR [esi],ebp
  4063c5:	sbb    dh,BYTE PTR [ecx-0x34be4fe7]
  4063cb:	imul   esi,DWORD PTR [edi-0x13],0xf210051
  4063d2:	sahf   
  4063d3:	fdiv   QWORD PTR [esi]
  4063d5:	(bad)  
  4063d6:	or     eax,eax
  4063d8:	leave  
  4063d9:	addr16 sbb eax,0x80cb0707
  4063df:	sbb    dl,BYTE PTR [edi+0x2b]
  4063e2:	pop    esp
  4063e3:	cs cmc 
  4063e5:	mov    esi,0x6b3dc021
  4063ea:	xor    DWORD PTR [ebx],eax
  4063ec:	and    eax,DWORD PTR [eax+0x5a]
  4063ef:	ins    BYTE PTR es:[edi],dx
  4063f0:	ins    DWORD PTR es:[edi],dx
  4063f1:	xchg   esi,eax
  4063f2:	rcl    DWORD PTR [ebp+0x55],0xc7
  4063f6:	xchg   esp,eax
  4063f7:	aad    0x14
  4063f9:	je     0x406452
  4063fb:	inc    ebx
  4063fc:	into   
  4063fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063fe:	mov    ah,0x67
  406400:	inc    eax
  406401:	fcomp  st(0)
  406403:	push   ecx
  406404:	adc    dl,BYTE PTR [eax]
  406406:	pusha  
  406407:	xchg   al,ch
  406409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40640a:	cmp    ebp,esp
  40640c:	ds (bad) 
  40640e:	and    DWORD PTR [ebx+ebx*4+0x15],ecx
  406412:	or     esi,edx
  406414:	call   0x43c0:0xd0edd286
  40641b:	imul   ecx,DWORD PTR [ebx+eax*1],0xffffffe4
  40641f:	fistp  QWORD PTR [edi]
  406421:	jge    0x4063dd
  406423:	fwait
  406424:	inc    ebp
  406425:	xor    al,0x5e
  406427:	dec    esp
  406428:	or     esi,DWORD PTR [ecx-0x1e]
  40642b:	stos   DWORD PTR es:[edi],eax
  40642c:	add    dl,al
  40642e:	mov    dl,0x96
  406430:	sahf   
  406431:	retf   0xc65e
  406434:	cvtps2pd xmm3,QWORD PTR [ebx]
  406437:	dec    BYTE PTR [ecx+0x23b725a3]
  40643d:	mov    ah,0x66
  40643f:	xchg   ebp,eax
  406440:	xor    DWORD PTR [esi],edx
  406442:	adc    al,0xb8
  406444:	adc    DWORD PTR [ebx-0x5bcbb574],ebp
  40644a:	enter  0x24ee,0x4f
  40644e:	or     al,0xb0
  406450:	push   0xa6947137
  406455:	xchg   esp,eax
  406456:	jnp    0x4063e0
  406458:	push   ds
  406459:	lea    ebp,[ebp-0x398ed794]
  40645f:	cmp    eax,0x82c9c361
  406464:	jle    0x406499
  406466:	and    esp,DWORD PTR [esi]
  406468:	push   esi
  406469:	lock inc BYTE PTR [edi]
  40646c:	cs jae 0x4063f4
  40646f:	test   esp,esi
  406471:	mov    bh,0x5e
  406473:	xchg   edx,eax
  406474:	inc    edx
  406475:	hlt    
  406476:	adc    DWORD PTR [esi+0x40],ebp
  406479:	inc    ebx
  40647a:	(bad)  
  40647d:	repnz push ecx
  40647f:	mov    al,ds:0xc5c49c72
  406484:	out    dx,al
  406485:	fisttp QWORD PTR [eax-0x45]
  406488:	(bad)  
  406489:	xchg   esi,eax
  40648a:	add    eax,0x2acf82d6
  40648f:	dec    ebp
  406490:	dec    esp
  406491:	popa   
  406492:	mov    ecx,0x36fd7d1c
  406497:	jbe    0x4064ee
  406499:	xor    al,BYTE PTR [edx-0x6f8ad83e]
  40649f:	jp     0x406447
  4064a1:	fmul   st,st(0)
  4064a3:	mov    esp,0x19fdf9e6
  4064a8:	enter  0x5455,0x10
  4064ac:	or     eax,0x5fa1801e
  4064b1:	ret    0xfbf5
  4064b4:	ja     0x406515
  4064b6:	and    BYTE PTR [edx+eiz*8+0x26638bfb],bl
  4064bd:	xchg   edx,eax
  4064be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064bf:	push   edx
  4064c0:	jp     0x4064c5
  4064c2:	push   edx
  4064c3:	inc    edi
  4064c4:	pop    ds
  4064c5:	sbb    ecx,DWORD PTR [ebx]
  4064c7:	pushf  
  4064c8:	push   edx
  4064c9:	cmp    eax,0xb6c88c22
  4064ce:	ins    DWORD PTR es:[edi],dx
  4064cf:	not    BYTE PTR [edx-0x370404fd]
  4064d5:	and    ebp,ebx
  4064d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064d8:	jno    0x4064b7
  4064da:	into   
  4064db:	sbb    bl,BYTE PTR [edi]
  4064dd:	mov    al,ds:0x3e60cc26
  4064e2:	das    
  4064e3:	mov    ds:0xd547aa27,eax
  4064e8:	sub    DWORD PTR [ecx+0x4d4d3d7f],0x189cb896
  4064f2:	retf   
  4064f3:	push   ds
  4064f4:	ins    DWORD PTR es:[edi],dx
  4064f5:	sub    edi,edi
  4064f7:	pop    edi
  4064f8:	xor    DWORD PTR [eax+0x62f57823],ebp
  4064fe:	ret    
  4064ff:	in     al,dx
  406500:	js     0x406524
  406502:	sub    BYTE PTR [ebx+0x4c58c938],0x91
  406509:	adc    ebp,ebx
  40650b:	test   eax,0xcddf31f0
  406510:	test   BYTE PTR ds:0xa2af30a3,0x38
  406517:	jnp    0x40652d
  406519:	mov    ds:0xbb096f84,eax
  40651e:	outs   dx,DWORD PTR fs:[esi]
  406520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406522:	je     0x406592
  406524:	sahf   
  406525:	(bad)  
  406526:	fstp   TBYTE PTR [ebx-0x7895baef]
  40652c:	adc    eax,0x91e32460
  406531:	shl    BYTE PTR [esi+esi*1-0x49],0x16
  406536:	cmc    
  406537:	ja     0x40653c
  406539:	test   DWORD PTR ds:0xbb49d7b6,esp
  40653f:	(bad)  
  406540:	jmp    0x414c:0x5dbd6dbd
  406547:	test   al,0xdf
  406549:	pop    ebx
  40654a:	pop    eax
  40654b:	pushf  
  40654c:	inc    edi
  40654d:	mov    ah,0x84
  40654f:	mov    bh,0xa3
  406551:	nop
  406552:	mov    bh,0xf7
  406554:	inc    ebp
  406555:	adc    ecx,edx
  406557:	and    al,0x12
  406559:	inc    esp
  40655a:	cmp    DWORD PTR [edx-0x5d],ecx
  40655d:	ficomp DWORD PTR [ecx-0x7c]
  406560:	add    ch,BYTE PTR [eax+0xa]
  406563:	mov    ss,WORD PTR [eax+0x25204da4]
  406569:	jae    0x406587
  40656b:	and    cl,BYTE PTR [eax-0x64]
  40656e:	xchg   esp,eax
  40656f:	jnp    0x406518
  406571:	mov    bh,0xb5
  406573:	cmp    BYTE PTR [ebx],0xfc
  406576:	and    DWORD PTR [esi+0x2313e57b],ebp
  40657c:	fild   WORD PTR [edx+ecx*2+0x6ad5c28e]
  406583:	icebp  
  406584:	mov    esp,0x46b0aa39
  406589:	pop    esi
  40658a:	outs   dx,BYTE PTR ds:[esi]
  40658b:	jecxz  0x406603
  40658d:	xchg   ebx,eax
  40658e:	out    0x83,eax
  406590:	jg     0x4065cd
  406592:	mov    dh,0xcc
  406594:	push   edi
  406595:	test   al,0xd3
  406597:	ret    0xd22f
  40659a:	push   esp
  40659b:	stos   BYTE PTR es:[edi],al
  40659c:	pop    eax
  40659d:	and    BYTE PTR [esp+ebx*2+0x7a],dl
  4065a1:	push   esi
  4065a2:	pop    esp
  4065a3:	jb     0x40661e
  4065a5:	cs pop es
  4065a7:	xor    BYTE PTR [esi+ecx*1],cl
  4065aa:	test   BYTE PTR [edi+0x22],bl
  4065ad:	push   ds
  4065ae:	mov    al,0x57
  4065b0:	ret    
  4065b1:	push   0x47
  4065b3:	mov    edx,0x9e781d12
  4065b8:	int    0xde
  4065ba:	pop    ds
  4065bb:	rcr    DWORD PTR [edx-0x3a],0x2a
  4065bf:	add    cl,ah
  4065c1:	je     0x4065e1
  4065c3:	jle    0x4065f8
  4065c5:	mov    edi,0x5e4a054e
  4065ca:	clc    
  4065cb:	aad    0xfd
  4065cd:	or     BYTE PTR [eax],bl
  4065cf:	push   ss
  4065d0:	cmp    al,0x6c
  4065d2:	sbb    ecx,DWORD PTR [ebp-0x22]
  4065d5:	and    DWORD PTR [ebx],0xffffffb7
  4065d8:	push   0x5d
  4065da:	mov    dl,0x5e
  4065dc:	push   ebx
  4065dd:	rol    DWORD PTR [edx-0x65249865],cl
  4065e3:	scas   eax,DWORD PTR es:[edi]
  4065e4:	pop    ebp
  4065e5:	mov    eax,0x10a13d44
  4065ea:	hlt    
  4065eb:	in     al,0xc3
  4065ed:	adc    edi,ebx
  4065ef:	sbb    bh,BYTE PTR [ebp-0x10a65525]
  4065f5:	sar    ah,0x6b
  4065f8:	xchg   edi,eax
  4065f9:	or     dl,BYTE PTR [esi]
  4065fb:	cmp    ebx,DWORD PTR ds:0x623fd2b4
  406601:	jmp    0x406596
  406603:	pop    edi
  406604:	or     al,0x5b
  406606:	pop    ss
  406607:	das    
  406608:	ror    BYTE PTR [edx+0x7c49cc00],0xcb
  40660f:	iret   
  406610:	out    0x78,eax
  406612:	shl    BYTE PTR [edx+0xc],1
  406615:	lahf   
  406616:	inc    eax
  406617:	das    
  406618:	dec    ecx
  406619:	aad    0x37
  40661b:	xor    BYTE PTR [ebx-0x68ee249f],0xb9
  406622:	pop    edx
  406623:	mov    al,0x9e
  406625:	neg    BYTE PTR [esi+0x575baf63]
  40662b:	inc    ebx
  40662c:	or     BYTE PTR [edx],cl
  40662e:	add    dh,al
  406630:	(bad)  
  406632:	xchg   ebx,eax
  406633:	cwde   
  406634:	push   ebp
  406635:	outs   dx,BYTE PTR ds:[esi]
  406636:	cmp    BYTE PTR [ebx],dh
  406638:	pop    ds
  406639:	test   BYTE PTR ds:0x9b844ae4,ah
  40663f:	jbe    0x406689
  406641:	xor    ebx,DWORD PTR [ebx+0x72]
  406644:	jle    0x4065f6
  406646:	xchg   cl,bh
  406648:	(bad)  
  406649:	push   0x643db529
  40664e:	aas    
  40664f:	lock adc BYTE PTR [eax],al
  406652:	mov    dh,0x4c
  406654:	mov    ds:0x40a1b084,eax
  406659:	clc    
  40665a:	fcmovne st,st(7)
  40665c:	dec    ebx
  40665d:	add    dh,BYTE PTR [eax]
  40665f:	retf   0xdf1
  406662:	xchg   esp,eax
  406663:	fcmovnbe st,st(7)
  406665:	fwait
  406666:	pushf  
  406667:	xchg   edi,esi
  406669:	rcr    DWORD PTR [ebx-0x59],0xcb
  40666d:	test   dh,bl
  40666f:	lahf   
  406670:	hlt    
  406671:	lds    edi,FWORD PTR [esi]
  406673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406674:	mov    es,WORD PTR [ebp+0x7e]
  406677:	(bad)  
  406678:	aaa    
  406679:	retf   
  40667a:	nop
  40667b:	mov    cl,0x7c
  40667d:	cwde   
  40667e:	sti    
  40667f:	neg    ebx
  406681:	fmul   DWORD PTR [ecx-0x80]
  406684:	aam    0x4b
  406686:	adc    BYTE PTR [edi-0x71543827],dh
  40668c:	sbb    ebx,DWORD PTR [ecx]
  40668e:	cmp    DWORD PTR [eax+0x38],ecx
  406691:	cmp    dh,BYTE PTR [eax]
  406693:	mov    cl,0xc0
  406695:	and    eax,edx
  406697:	das    
  406698:	push   ss
  406699:	push   ebp
  40669a:	retf   
  40669b:	(bad)  
  40669c:	out    dx,al
  40669d:	or     al,0x2c
  40669f:	aad    0xdf
  4066a1:	(bad)  
  4066a2:	pop    eax
  4066a3:	in     al,0x92
  4066a5:	mov    bl,0xdb
  4066a7:	cmp    al,0x37
  4066a9:	push   ss
  4066aa:	xchg   ecx,eax
  4066ab:	mov    ds:0x879ca940,al
  4066b0:	dec    esi
  4066b1:	sbb    ebx,edi
  4066b3:	jns    0x4066fe
  4066b5:	faddp  st(3),st
  4066b7:	ret    
  4066b8:	fs push 0x3b
  4066bb:	dec    edi
  4066bc:	mov    fs,esi
  4066be:	addr16 (bad) 
  4066c0:	pop    edi
  4066c1:	outs   dx,DWORD PTR ds:[esi]
  4066c2:	pushf  
  4066c3:	or     eax,0xcef4aa5a
  4066c8:	xor    BYTE PTR [esi-0x27108231],dh
  4066ce:	out    dx,al
  4066cf:	bound  edi,QWORD PTR [edi-0xf9ee677]
  4066d5:	jp     0x4066ad
  4066d7:	mov    es,WORD PTR [eax-0x26fcff17]
  4066dd:	int    0xfb
  4066df:	push   edi
  4066e0:	xchg   ecx,eax
  4066e1:	aam    0xc8
  4066e3:	call   0x38a6:0x9b57f34b
  4066ea:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4066ec:	push   0x65
  4066ee:	lods   al,BYTE PTR ds:[esi]
  4066ef:	fmul   QWORD PTR [ebx]
  4066f1:	dec    ebx
  4066f2:	pop    DWORD PTR [ecx+0x50]
  4066f5:	sub    DWORD PTR [ebp+0xc],edx
  4066f8:	add    esp,DWORD PTR [esi-0x4b]
  4066fb:	fld    st(1)
  4066fd:	add    ebx,DWORD PTR [ecx]
  4066ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406700:	cmp    ah,BYTE PTR [ebx]
  406702:	out    0xec,al
  406704:	int3   
  406705:	mov    DWORD PTR [edx-0x4b800d9a],eax
  40670b:	inc    esi
  40670c:	repnz jecxz 0x406764
  40670f:	(bad)
  406712:	mov    BYTE PTR [esi],al
  406714:	icebp  
  406715:	pop    esp
  406716:	loope  0x4066a0
  406718:	sahf   
  406719:	mov    dl,0x6
  40671b:	jmp    0x7c68:0x149eeff
  406722:	xor    cl,BYTE PTR [esi-0x6a7a27da]
  406728:	cmp    eax,0x527fe8b
  40672d:	and    DWORD PTR [edi],esi
  40672f:	retf   
  406730:	fninit 
  406732:	xchg   edx,eax
  406733:	call   0xd0e494a6
  406738:	jp     0x4066f7
  40673a:	mov    ds:0x5f3bd298,al
  40673f:	jge    0x406719
  406741:	inc    edi
  406742:	bound  ebp,QWORD PTR es:[ecx+0x19]
  406746:	les    edi,FWORD PTR [ecx]
  406748:	dec    ebx
  406749:	neg    BYTE PTR [eax+edi*4]
  40674c:	icebp  
  40674d:	scas   eax,DWORD PTR es:[edi]
  40674e:	pop    ebp
  40674f:	ret    
  406750:	cmp    esp,DWORD PTR [ebx]
  406752:	(bad)  
  406753:	lds    edx,FWORD PTR [ebp-0x3f]
  406756:	mov    ds:0x37952eef,eax
  40675b:	not    BYTE PTR [edx]
  40675d:	and    eax,0x582e70b9
  406762:	ds pop ecx
  406764:	mov    edx,0x108c5d86
  406769:	xchg   esp,eax
  40676a:	xchg   esp,eax
  40676b:	pop    esi
  40676c:	cmc    
  40676d:	imul   ebx,DWORD PTR [eax+0x52],0x44
  406771:	cmp    dl,dl
  406773:	(bad)  
  406775:	into   
  406776:	mov    eax,ds:0xcd785e25
  40677b:	das    
  40677c:	popa   
  40677d:	aad    0x41
  40677f:	test   BYTE PTR [eax],dl
  406781:	xor    eax,0xbfee4b83
  406786:	stos   BYTE PTR es:[edi],al
  406787:	lea    esi,[ebx]
  406789:	push   cs
  40678a:	and    dh,BYTE PTR [esi]
  40678c:	or     DWORD PTR [edi-0xd],ecx
  40678f:	fwait
  406790:	jo     0x4067b0
  406792:	daa    
  406793:	adc    DWORD PTR [ebp+0x6fd4317d],0x4c
  40679a:	in     eax,dx
  40679b:	dec    esi
  40679c:	ret    
  40679d:	jb     0x406773
  40679f:	or     al,0xb4
  4067a1:	jb     0x406778
  4067a3:	adc    BYTE PTR [edi],al
  4067a5:	push   0x3fe7d8d1
  4067aa:	sub    al,0x5c
  4067ac:	adc    al,0x48
  4067ae:	retf   
  4067af:	mov    ?,ebp
  4067b1:	popf   
  4067b2:	cmp    BYTE PTR [ecx],cl
  4067b4:	sbb    eax,0xcc951c17
  4067b9:	lods   eax,DWORD PTR ds:[esi]
  4067ba:	ror    ebx,0xfc
  4067bd:	add    DWORD PTR [edi+0x5974e824],0xb8ada35f
  4067c7:	push   0xffffffa9
  4067c9:	push   es
  4067ca:	(bad)  
  4067cb:	mov    bl,0x56
  4067cd:	and    ch,BYTE PTR [ebx+0x2a]
  4067d0:	mov    dl,0x9d
  4067d2:	pop    edx
  4067d3:	jge    0x40682c
  4067d5:	add    BYTE PTR [esi+edi*4+0x6f0fddb8],bl
  4067dc:	sbb    BYTE PTR [edi+ebp*8],dl
  4067df:	add    ecx,DWORD PTR [esi]
  4067e1:	or     ch,BYTE PTR [ebp-0x56]
  4067e4:	mov    ah,0x8d
  4067e6:	and    al,0xb4
  4067e9:	fidivr DWORD PTR [ecx+0x501d6806]
  4067ef:	lods   eax,DWORD PTR fs:[esi]
  4067f1:	and    BYTE PTR [ebx-0x1b],bl
  4067f4:	or     DWORD PTR [esi],esp
  4067f6:	pusha  
  4067f7:	push   esi
  4067f8:	mov    ebp,0xb4914874
  4067fd:	dec    esi
  4067fe:	and    DWORD PTR [edx+0x55934bc4],ecx
  406804:	pop    esp
  406805:	jge    0x4067c6
  406807:	fdivr  QWORD PTR [esi+esi*8+0x43e52546]
  40680e:	ss repz aad 0x87
  406812:	or     DWORD PTR [edi],edi
  406814:	dec    esi
  406815:	outs   dx,BYTE PTR ds:[esi]
  406816:	(bad)  
  406817:	stos   DWORD PTR es:[edi],eax
  406818:	mov    ecx,0x8f62a2cb
  40681d:	dec    eax
  40681e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40681f:	jmp    0xac9d3df7
  406824:	or     al,0xef
  406826:	push   0xffffffaf
  406828:	pop    esi
  406829:	xor    edx,DWORD PTR [esi+0x3c]
  40682c:	mov    fs,WORD PTR [esi]
  40682e:	xchg   edx,eax
  40682f:	sub    DWORD PTR [eax-0x51],edx
  406832:	bound  ebp,QWORD PTR [ebp+0xc]
  406835:	or     DWORD PTR [edx+esi*4+0x76],eax
  406839:	(bad)  
  40683a:	jg     0x406887
  40683c:	gs mov ebp,0xa25b7e6e
  406842:	in     al,0xd2
  406844:	push   ss
  406845:	add    al,BYTE PTR [ebx-0x81d4fb9]
  40684b:	cmp    al,0xdd
  40684d:	sub    al,0x49
  40684f:	(bad)  
  406850:	push   edi
  406851:	jle    0x40680b
  406853:	mov    dl,0xc0
  406855:	js     0x406876
  406857:	lods   al,BYTE PTR ds:[esi]
  406858:	xlat   BYTE PTR ds:[ebx]
  406859:	push   edx
  40685a:	mov    esp,0x14c22583
  40685f:	jp     0x406871
  406861:	adc    ecx,DWORD PTR [ebp+0x77504360]
  406867:	sub    cl,BYTE PTR [edx-0x16950b09]
  40686d:	in     al,dx
  40686e:	adc    eax,0x81a19100
  406873:	mov    cs,WORD PTR [esi+0x474944fb]
  406879:	(bad)  [edi+0x688bc1ab]
  40687f:	add    eax,0xc6d80b52
  406884:	test   eax,0xc7e822e8
  406889:	inc    edi
  40688a:	ret    0x3694
  40688d:	ins    DWORD PTR es:[edi],dx
  40688e:	jg     0x4068a4
  406890:	dec    esp
  406891:	adc    cl,dh
  406893:	push   0x13b7a5cd
  406898:	int3   
  406899:	pusha  
  40689a:	and    eax,0xe9221f4c
  40689f:	pop    ebp
  4068a0:	push   esi
  4068a1:	gs mov eax,0x8026cd34
  4068a7:	leave  
  4068a8:	(bad)  
  4068a9:	pop    edi
  4068aa:	or     al,0x7f
  4068ac:	bnd jp 0x4068ea
  4068af:	xchg   edi,eax
  4068b0:	xor    ch,cl
  4068b2:	das    
  4068b3:	and    DWORD PTR [bx+di],ebp
  4068b6:	loop   0x406851
  4068b8:	adc    esi,esp
  4068ba:	aas    
  4068bb:	dec    ebp
  4068bc:	mov    DWORD PTR [eax-0x6c735f9],0x576d92da
  4068c6:	xchg   esp,eax
  4068c7:	xor    eax,0xf0c1821f
  4068cc:	mov    bl,0x2d
  4068ce:	push   ebp
  4068cf:	iret   
  4068d0:	push   ecx
  4068d1:	retf   
  4068d2:	ror    DWORD PTR [esi],1
  4068d4:	xchg   ebp,eax
  4068d5:	mov    esi,0xf57f60fb
  4068da:	fidivr WORD PTR [ebx-0x59]
  4068dd:	dec    ebp
  4068de:	fimul  WORD PTR [eax-0x2316a72d]
  4068e4:	inc    esi
  4068e5:	jmp    0x406893
  4068e7:	mov    DWORD PTR [ecx+edi*8],esp
  4068ea:	jns    0x406901
  4068ec:	mov    WORD PTR [ecx+0x5fadbb45],?
  4068f2:	test   al,0xc8
  4068f4:	or     al,0xf8
  4068f6:	jge    0x4068d8
  4068f8:	sbb    al,0x2c
  4068fa:	(bad)
  4068fe:	and    DWORD PTR [edx],ecx
  406900:	mov    ebp,0xf4652e16
  406905:	in     eax,dx
  406906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406907:	cmp    ah,cl
  406909:	dec    BYTE PTR [eax+0x75]
  40690c:	dec    esp
  40690d:	arpl   WORD PTR [edi-0x52f60d83],bp
  406913:	cmc    
  406914:	and    al,0x6e
  406916:	cli    
  406917:	fs mov cl,0x2
  40691a:	cwde   
  40691b:	pop    esi
  40691c:	lods   eax,DWORD PTR ds:[esi]
  40691d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40691e:	cs jecxz 0x406945
  406921:	mov    esp,0x3b699cfe
  406926:	and    DWORD PTR [ebp-0x48ce716e],ebp
  40692c:	push   ecx
  40692d:	call   DWORD PTR [edi+0x25]
  406930:	push   0xec4bf344
  406935:	sub    eax,0x94e7085e
  40693a:	clc    
  40693b:	ds jb  0x406953
  40693e:	push   ds
  40693f:	cmp    esp,DWORD PTR [esi]
  406941:	rol    DWORD PTR [edx+edx*8+0x72],0x35
  406946:	or     al,0xd3
  406948:	mov    cs,WORD PTR [eax-0x24cf436a]
  40694e:	arpl   WORD PTR [eax+eax*1],cx
  406951:	jne    0x406950
  406953:	dec    esi
  406954:	mov    eax,0xa5744992
  406959:	leave  
  40695a:	inc    edi
  40695b:	es push ss
  40695d:	outs   dx,DWORD PTR ds:[esi]
  40695e:	mov    edi,0x158f966
  406963:	fisubr WORD PTR [eax-0x7dc646d2]
  406969:	pop    ebp
  40696a:	pushf  
  40696b:	or     DWORD PTR [ebp+0x6c],esi
  40696e:	jmp    0x40691e
  406970:	and    bh,BYTE PTR [ecx]
  406972:	dec    ebp
  406973:	ret    0x3059
  406976:	ret    0x9497
  406979:	fimul  DWORD PTR [esi]
  40697b:	ficom  DWORD PTR [esp+edx*4+0xf]
  40697f:	mov    edx,0x85edd72f
  406984:	jb     0x406935
  406986:	mov    WORD PTR [ecx],gs
  406988:	stos   DWORD PTR es:[edi],eax
  406989:	jmp    0x93f00d22
  40698e:	and    eax,0x946d3e5e
  406993:	mov    dh,cl
  406995:	cmc    
  406996:	cmp    DWORD PTR [edx+0xa136563],edi
  40699c:	lock shr BYTE PTR [esi+0x1cd935e],cl
  4069a3:	repz push 0x5caf924c
  4069a9:	test   BYTE PTR [ecx-0x7645c2db],0x5d
  4069b0:	mov    bh,0x8c
  4069b2:	mov    ds:0x650be977,al
  4069b7:	arpl   WORD PTR [edx],bx
  4069b9:	pop    eax
  4069ba:	jno    0x4069ae
  4069bc:	cmp    esp,ebp
  4069be:	not    al
  4069c0:	sub    BYTE PTR [edi-0x7b54070a],al
  4069c6:	pushf  
  4069c7:	jecxz  0x406a07
  4069c9:	mov    al,0x1a
  4069cb:	mov    dl,0x68
  4069cd:	iret   
  4069ce:	mov    ds:0xa7cba494,al
  4069d3:	push   edi
  4069d4:	jmp    FWORD PTR [edx]
  4069d6:	scas   al,BYTE PTR es:[edi]
  4069d7:	repz das 
  4069d9:	pop    ss
  4069da:	in     al,dx
  4069db:	pop    eax
  4069dc:	and    DWORD PTR [ebx],eax
  4069de:	fwait
  4069df:	int    0xf7
  4069e1:	mov    ecx,0x3c9a6bfb
  4069e6:	jecxz  0x40696f
  4069e8:	mov    ebp,0x84bb9141
  4069ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ee:	dec    edi
  4069ef:	(bad)  
  4069f1:	data16 jge 0x406a09
  4069f4:	adc    DWORD PTR [edx+0x2b],ebp
  4069f7:	jno    0x406a0c
  4069f9:	pusha  
  4069fa:	xchg   ebp,eax
  4069fb:	xchg   edi,eax
  4069fc:	or     ebx,DWORD PTR [edi-0x41]
  4069ff:	in     al,dx
  406a00:	ja     0x406a30
  406a02:	scas   eax,DWORD PTR es:[edi]
  406a03:	add    ecx,DWORD PTR [ecx]
  406a05:	arpl   WORD PTR [ebp+0x61cb3ed9],ax
  406a0b:	xor    al,0xa2
  406a0d:	loop   0x4069f9
  406a0f:	test   eax,0xac09d1dc
  406a14:	stc    
  406a15:	fcmovnb st,st(1)
  406a17:	adc    al,BYTE PTR [eax]
  406a19:	adc    BYTE PTR [esi-0x73],cl
  406a1c:	scas   al,BYTE PTR es:[edi]
  406a1d:	adc    al,al
  406a1f:	rol    DWORD PTR [ebx],1
  406a21:	int    0x16
  406a23:	mov    dl,0xf2
  406a25:	mov    WORD PTR [edx-0x26],ss
  406a28:	jmp    0x26ce7627
  406a2d:	xchg   ebx,eax
  406a2e:	pop    edi
  406a2f:	xlat   BYTE PTR ds:[ebx]
  406a30:	jnp    0x406a8e
  406a32:	inc    eax
  406a33:	data16 adc bl,BYTE PTR [ecx+0x54]
  406a37:	aad    0x62
  406a39:	pop    ebp
  406a3a:	aaa    
  406a3b:	imul   edi,DWORD PTR [edi+0x79],0x4c793ac4
  406a42:	add    DWORD PTR [ebp-0x641a7c85],ecx
  406a48:	adc    al,0xb7
  406a4a:	jle    0x406a33
  406a4c:	pop    edx
  406a4d:	push   ebx
  406a4e:	mov    cl,0xf4
  406a50:	jge    0x406ac2
  406a52:	push   ebp
  406a53:	mov    cl,0x77
  406a55:	or     DWORD PTR [eax+ebx*1],ebx
  406a58:	cli    
  406a59:	call   0x7069:0x4564b730
  406a60:	dec    ebx
  406a61:	mov    ch,0xed
  406a63:	inc    edx
  406a64:	aas    
  406a65:	pop    eax
  406a66:	adc    eax,0x1b4fed55
  406a6b:	jecxz  0x406a6e
  406a6d:	or     bl,BYTE PTR [edi+eiz*1-0x12]
  406a71:	ja     0x406a9f
  406a73:	xchg   DWORD PTR [eax+0x56fdbc6f],esp
  406a79:	popf   
  406a7a:	mov    al,ds:0xab4acab8
  406a7f:	pop    eax
  406a80:	cmp    BYTE PTR gs:[edx],al
  406a83:	inc    ecx
  406a84:	enter  0x15d1,0x85
  406a88:	out    0x5e,eax
  406a8a:	mov    ah,0xf
  406a8c:	nop
  406a8d:	shr    DWORD PTR [edx],1
  406a8f:	popa   
  406a90:	xor    BYTE PTR [ebp+edx*8-0x7c],dl
  406a94:	rcl    DWORD PTR [ecx+ecx*1-0x4302c58f],cl
  406a9b:	dec    esi
  406a9c:	out    dx,eax
  406a9d:	xchg   ebp,eax
  406a9e:	lahf   
  406a9f:	mov    edi,0xac491808
  406aa4:	outs   dx,BYTE PTR ds:[esi]
  406aa5:	aaa    
  406aa6:	push   esp
  406aa7:	jmp    0xb296f8bf
  406aac:	dec    ebp
  406aad:	lea    ecx,[edi+0x61]
  406ab0:	int    0xcb
  406ab2:	sbb    esp,edx
  406ab4:	(bad)  
  406ab5:	pop    edi
  406ab6:	cmp    dl,ch
  406ab8:	jmp    0xd4aa:0x9c89a7eb
  406abf:	mov    eax,0x783552a4
  406ac4:	push   ds
  406ac5:	enter  0xdee0,0x91
  406ac9:	sub    al,ah
  406acb:	mov    al,ds:0xf2de6b7d
  406ad0:	push   es
  406ad1:	xlat   BYTE PTR ds:[ebx]
  406ad2:	push   ebx
  406ad3:	cmp    ah,BYTE PTR [ebx]
  406ad5:	fnstsw WORD PTR [ebx+0x61cac877]
  406adb:	scas   al,BYTE PTR es:[edi]
  406adc:	pop    ecx
  406add:	push   esp
  406ade:	jge    0x406b0b
  406ae0:	cmc    
  406ae1:	fild   DWORD PTR [ebx+esi*2-0x541f75e8]
  406ae8:	enter  0x6e53,0xdc
  406aec:	push   ss
  406aed:	outs   dx,BYTE PTR ds:[esi]
  406aee:	test   DWORD PTR [ecx+0x14],esi
  406af1:	inc    ebx
  406af2:	or     eax,0x7e9ed5f3
  406af7:	mov    ch,0xff
  406af9:	sti    
  406afa:	call   FWORD PTR [edx*2+0x14565e71]
  406b01:	xchg   esi,eax
  406b02:	xlat   BYTE PTR ds:[ebx]
  406b03:	push   ebx
  406b04:	mov    ebp,0x8190a878
  406b09:	mov    cl,cl
  406b0b:	xchg   edx,eax
  406b0c:	mov    ebp,0xa5233b33
  406b11:	ret    
  406b12:	daa    
  406b13:	push   cs
  406b14:	or     dl,dh
  406b16:	popf   
  406b17:	jns    0x406aa5
  406b19:	loope  0x406b80
  406b1b:	dec    esp
  406b1c:	les    eax,FWORD PTR [esi-0x28ef7d09]
  406b22:	stos   DWORD PTR es:[edi],eax
  406b23:	dec    ecx
  406b24:	mov    cl,0xc9
  406b26:	and    BYTE PTR [ebp-0x3affed5f],dl
  406b2c:	jb     0x406b2d
  406b2e:	fsubr  st,st(3)
  406b30:	loopne 0x406af5
  406b32:	mov    ah,0xa1
  406b34:	pop    ebx
  406b35:	pop    eax
  406b36:	ret    
  406b37:	ficomp WORD PTR [eax+esi*8-0x65]
  406b3b:	cmc    
  406b3c:	test   al,0x52
  406b3e:	xor    DWORD PTR [esi-0x480583f8],eax
  406b44:	popa   
  406b45:	sbb    BYTE PTR [edx+0x2b],dh
  406b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b49:	pop    esp
  406b4a:	xchg   edx,eax
  406b4b:	and    al,0xad
  406b4d:	adc    edx,DWORD PTR [ebp+0x25]
  406b50:	je     0x406b4b
  406b52:	mov    ecx,0x847475e8
  406b57:	(bad)  
  406b58:	stc    
  406b59:	inc    edx
  406b5a:	fdivr  st(7),st
  406b5c:	mov    ecx,0x5a960ec0
  406b61:	cmc    
  406b62:	sbb    eax,0x6793eb8b
  406b67:	jg     0x406be3
  406b69:	outs   dx,DWORD PTR ds:[esi]
  406b6a:	mov    ch,0x45
  406b6c:	aad    0xed
  406b6e:	jmp    0x6b5eb63e
  406b73:	aad    0xf7
  406b75:	mov    al,0x87
  406b77:	dec    eax
  406b78:	mov    cl,0x6b
  406b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b7b:	sti    
  406b7c:	out    dx,eax
  406b7d:	int3   
  406b7e:	inc    edx
  406b7f:	ret    
  406b80:	cmp    BYTE PTR [edi+0x24b90cd9],al
  406b86:	inc    eax
  406b87:	xchg   edi,eax
  406b88:	add    BYTE PTR [ebx+0x44],0xd5
  406b8c:	push   esi
  406b8d:	in     eax,dx
  406b8e:	mov    ebp,0x802fb8a0
  406b93:	dec    ebp
  406b94:	mov    dl,0xa2
  406b96:	inc    eax
  406b97:	add    al,0xb5
  406b99:	lahf   
  406b9a:	jle    0x406c16
  406b9c:	repnz lock xchg ebp,eax
  406b9f:	inc    edx
  406ba0:	sbb    al,0xa9
  406ba2:	cmp    eax,0xa519fb3a
  406ba7:	adc    al,0x9c
  406ba9:	addr16 inc ebp
  406bab:	(bad)  
  406bac:	jle    0x406bf7
  406bae:	rcr    BYTE PTR [edi+0x63],0x9c
  406bb2:	xlat   BYTE PTR ds:[ebx]
  406bb3:	dec    ebx
  406bb4:	stc    
  406bb5:	cmp    dl,BYTE PTR [ebx+0x72133af9]
  406bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bbc:	mov    ebx,0x741e7061
  406bc1:	(bad)  [edx-0x1e]
  406bc4:	call   0x8931:0x29e5c59f
  406bcb:	loop   0x406b9d
  406bcd:	iret   
  406bce:	test   BYTE PTR [ebp+0x19],ch
  406bd1:	dec    esp
  406bd2:	(bad)  [ecx]
  406bd4:	jmp    0xe6ee:0xd598b916
  406bdb:	pop    ebp
  406bdc:	xor    DWORD PTR [ecx+eax*2-0x5b2e2a],esi
  406be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be4:	push   esi
  406be5:	mov    esp,0xa8a7ccf6
  406bea:	shr    DWORD PTR [edx+eiz*4-0x5c986bcf],cl
  406bf1:	es fwait
  406bf3:	retf   
  406bf4:	jmp    FWORD PTR [esi]
  406bf6:	jne    0x25a0856
  406bfc:	aas    
  406bfd:	pop    edx
  406bfe:	imul   esi,DWORD PTR [eiz*1+0x59d99118],0xde83206c
  406c09:	cmp    DWORD PTR [ebx+0x7e],esp
  406c0c:	sub    al,0x60
  406c0e:	sub    eax,0xe16503cb
  406c13:	add    DWORD PTR [edx-0x51],edx
  406c16:	push   cs
  406c17:	pop    esi
  406c18:	out    0xdd,eax
  406c1a:	int    0xd7
  406c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c1d:	pop    edi
  406c1e:	inc    edi
  406c1f:	ror    BYTE PTR [ecx-0x70],0x7f
  406c23:	mov    ebx,ds
  406c25:	adc    bl,cl
  406c27:	adc    eax,0x8f974243
  406c2c:	(bad)  
  406c2d:	xchg   ebx,eax
  406c2e:	sbb    al,0xf0
  406c30:	inc    ebx
  406c31:	adc    eax,0xb2db0e3d
  406c36:	adc    ch,BYTE PTR [edx-0x4f]
  406c39:	push   0x9f51ba5
  406c3e:	xchg   ebp,eax
  406c3f:	jmp    0xf7a2b140
  406c44:	popa   
  406c45:	inc    edi
  406c46:	sub    al,0x64
  406c48:	push   ebx
  406c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c4a:	and    al,0x34
  406c4c:	rcl    DWORD PTR [edx+0x7ab1fd65],0x83
  406c53:	jne    0x406bde
  406c55:	dec    ecx
  406c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c57:	mov    al,ds:0x2d7ebca5
  406c5c:	push   ecx
  406c5d:	mov    ds:0xf6b43fb7,al
  406c62:	push   edi
  406c63:	out    dx,al
  406c64:	cmp    DWORD PTR [esi-0x3af372ab],ebp
  406c6a:	js     0x406c3b
  406c6c:	lock adc eax,0x2d4618b0
  406c72:	into   
  406c73:	je     0x406c1c
  406c75:	mov    ah,0xd0
  406c77:	mov    WORD PTR [ebp-0x7b],cs
  406c7a:	jmp    0xc5ceff2d
  406c7f:	jae    0x406c78
  406c81:	mov    esi,0x4ee8af49
  406c86:	lahf   
  406c87:	xchg   edx,eax
  406c88:	jne    0x406c57
  406c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c8b:	dec    esi
  406c8c:	xor    esp,DWORD PTR [eax]
  406c8e:	std    
  406c8f:	mov    ecx,0xc02442c9
  406c94:	xchg   ecx,eax
  406c95:	mov    ebp,0x15d74ab
  406c9a:	push   esi
  406c9b:	push   ss
  406c9c:	cmp    eax,0x105eee2f
  406ca1:	xchg   ecx,eax
  406ca2:	dec    ecx
  406ca3:	push   esp
  406ca4:	pop    ds
  406ca5:	mov    eax,0x40975679
  406caa:	test   BYTE PTR [esi],0x8c
  406cad:	cdq    
  406cae:	xor    ebp,esp
  406cb0:	outs   dx,DWORD PTR ds:[esi]
  406cb1:	sbb    BYTE PTR [edx],0x7a
  406cb4:	ds cmp al,0xa3
  406cb7:	inc    esp
  406cb8:	ret    0x20e1
  406cbb:	test   BYTE PTR [edi+0x1c],bl
  406cbe:	xor    eax,0xfa07a29a
  406cc3:	pusha  
  406cc4:	xchg   BYTE PTR [edx],bh
  406cc6:	in     eax,0x4d
  406cc8:	cmp    al,0x70
  406cca:	js     0x406c5e
  406ccc:	shr    BYTE PTR [edx],1
  406cce:	arpl   WORD PTR [ecx+eiz*1],dx
  406cd1:	adc    dl,BYTE PTR [ebp+0x63]
  406cd4:	shl    BYTE PTR [ecx+0xad291ca],cl
  406cda:	sbb    esp,DWORD PTR [ecx-0x5e]
  406cdd:	pop    ax
  406cdf:	rcl    BYTE PTR [esi],1
  406ce1:	push   0x28
  406ce3:	in     al,dx
  406ce4:	push   0x685f13ff
  406ce9:	aas    
  406cea:	mov    al,ds:0x6509e564
  406cef:	jmp    0x6b0753f0
  406cf4:	or     BYTE PTR [eax],bl
  406cf6:	push   ss
  406cf7:	add    DWORD PTR [edi+0x7b5416b9],esi
  406cfd:	fs je  0x406cc3
  406d00:	mov    ebx,0x7a103b8b
  406d05:	mov    bl,0x7
  406d07:	lock call 0x3d9f:0x65c89b3e
  406d0f:	and    eax,0x43e0d2c2
  406d14:	jmp    0x9de1:0x6d465708
  406d1b:	outs   dx,BYTE PTR ds:[esi]
  406d1c:	stc    
  406d1d:	mov    ?,WORD PTR [edi-0xdac44c2]
  406d23:	push   ebx
  406d24:	mov    DWORD PTR [ebx-0x29],esi
  406d27:	pop    ds
  406d28:	sub    dh,ah
  406d2a:	mov    WORD PTR [ebp+0x42],?
  406d2d:	mov    ds:0xce139f4b,al
  406d32:	and    ch,ah
  406d34:	data16 and cl,bh
  406d37:	mov    esp,0xd8521919
  406d3c:	in     al,0xbd
  406d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d3f:	mov    ds:0x5d65fac5,eax
  406d44:	adc    eax,0x6e407099
  406d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d4a:	shr    BYTE PTR [edi-0x43],cl
  406d4d:	mov    esi,0x930c06c2
  406d52:	call   0x388bb7f
  406d57:	add    eax,0xbf775af9
  406d5c:	and    DWORD PTR [edi+0x7847e848],0x4126b931
  406d66:	pop    edi
  406d67:	jb     0x406d0d
  406d69:	ret    0x310e
  406d6c:	cmp    bh,BYTE PTR [edx-0x31]
  406d6f:	pop    ecx
  406d70:	mov    eax,ds:0xeea33acd
  406d75:	icebp  
  406d76:	div    BYTE PTR [ebx-0x61]
  406d79:	pop    eax
  406d7a:	jmp    FWORD PTR [ebx-0x449f81a]
  406d80:	or     eax,0xaf8c963
  406d85:	fsubp  st(0),st
  406d87:	add    BYTE PTR [edx+0xd],0x34
  406d8b:	addr16 mov ecx,0x1712a15d
  406d91:	fild   QWORD PTR [edx-0x42]
  406d94:	mov    BYTE PTR [edx-0x22],cl
  406d97:	loopne 0x406df5
  406d99:	popf   
  406d9a:	repnz popf 
  406d9c:	add    BYTE PTR [eax],bl
  406d9e:	das    
  406d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406da0:	or     esp,DWORD PTR [ecx+0x2f87283e]
  406da6:	mov    bl,0x20
  406da8:	add    bl,BYTE PTR [ecx-0x3852b12d]
  406dae:	mov    ebx,0xd17b34a2
  406db3:	jmp    0xaafb55ed
  406db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db9:	adc    bl,BYTE PTR [eax+eiz*4]
  406dbc:	xchg   ebp,eax
  406dbd:	lock ja 0x406dc6
  406dc0:	in     eax,dx
  406dc1:	and    DWORD PTR [ecx+0x61],ebx
  406dc4:	loop   0x406dcc
  406dc6:	dec    esp
  406dc7:	(bad)  
  406dc8:	cli    
  406dc9:	loopne 0x406dda
  406dcb:	push   esp
  406dcc:	cmp    al,0x86
  406dce:	inc    ebp
  406dcf:	push   ss
  406dd0:	sbb    DWORD PTR ss:[ebp-0x262d4192],0xffffffdd
  406dd8:	cmc    
  406dd9:	out    dx,al
  406dda:	mov    bl,0xb6
  406ddc:	cs inc ecx
  406dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de0:	fadd   DWORD PTR [eax+0x61]
  406de3:	jmp    0x2544:0x88f269ab
  406dea:	pop    eax
  406deb:	test   DWORD PTR [ebp+0x64],esp
  406dee:	jmp    0x406d7c
  406df0:	dec    esp
  406df1:	rcr    BYTE PTR [eax+0xc238b],1
  406df7:	pusha  
  406df8:	mov    ds:0x72329230,al
  406dfd:	xor    ebx,DWORD PTR [ebx-0x7c]
  406e00:	(bad)  
  406e02:	pop    edi
  406e03:	pcmpeqd mm7,QWORD PTR [edx]
  406e06:	aas    
  406e07:	jmp    0x406e3b
  406e09:	xlat   BYTE PTR ds:[ebx]
  406e0a:	sub    al,0x2a
  406e0c:	mov    bl,0xc8
  406e0e:	xchg   ecx,eax
  406e0f:	and    eax,DWORD PTR [ebx+0x4d]
  406e12:	sub    DWORD PTR [eax],edi
  406e14:	jo     0x406e8e
  406e16:	pop    DWORD PTR [esi]
  406e18:	cmp    ebp,edx
  406e1a:	mov    ds:0xa8ae34a5,eax
  406e1f:	jbe    0x406e76
  406e21:	fsubr  QWORD PTR [esi+0x22]
  406e24:	xchg   edi,eax
  406e25:	js     0x406e6b
  406e27:	or     eax,DWORD PTR [esi-0x11]
  406e2a:	jo     0x406e1a
  406e2c:	xor    ecx,edx
  406e2e:	fidivr DWORD PTR [edx+edx*8-0x72]
  406e32:	adc    eax,0x167998ca
  406e37:	mov    esi,DWORD PTR [ecx-0x5dce08ac]
  406e3d:	aad    0xe6
  406e3f:	icebp  
  406e40:	ss out 0x9,al
  406e43:	and    cl,BYTE PTR [esi-0x2e54849e]
  406e49:	dec    edx
  406e4a:	mul    DWORD PTR [edx]
  406e4c:	(bad)
  406e50:	xchg   BYTE PTR [ebp-0xe],cl
  406e53:	cs jmp 0x406eac
  406e56:	cmc    
  406e57:	add    eax,0x56891069
  406e5c:	(bad)  
  406e5d:	imul   edi,DWORD PTR [ebx],0xf
  406e60:	stos   BYTE PTR es:[edi],al
  406e61:	dec    esi
  406e62:	aad    0xb0
  406e64:	push   0xffffffa0
  406e66:	fst    DWORD PTR [edi+0xdb00f7b]
  406e6c:	jmp    0xc3f6c568
  406e71:	fisub  WORD PTR [ecx]
  406e73:	test   eax,0x9007e82f
  406e78:	ss hlt 
  406e7a:	push   es
  406e7b:	hlt    
  406e7c:	ja     0x406e7e
  406e7e:	das    
  406e7f:	arpl   WORD PTR [edx-0x7f9df25c],ax
  406e85:	jne    0x406e39
  406e87:	scas   eax,DWORD PTR es:[edi]
  406e88:	dec    esp
  406e89:	inc    esi
  406e8a:	sti    
  406e8b:	ret    
  406e8c:	std    
  406e8d:	xchg   edi,eax
  406e8e:	js     0x406e55
  406e90:	inc    esp
  406e91:	fisub  WORD PTR [edx]
  406e93:	ret    
  406e94:	adc    eax,0x97f89ed8
  406e99:	sub    eax,0x4caecd58
  406e9e:	push   0x11afb422
  406ea3:	adc    bh,BYTE PTR [ecx]
  406ea5:	dec    ebp
  406ea6:	sub    ebx,DWORD PTR [edi]
  406ea8:	adc    al,BYTE PTR [edi+0x22]
  406eab:	loope  0x406ee2
  406ead:	shl    BYTE PTR [ecx-0x3f],0x9c
  406eb1:	pop    esi
  406eb2:	push   edi
  406eb3:	outs   dx,DWORD PTR ds:[esi]
  406eb4:	aam    0x1d
  406eb6:	jmp    0xe8a5:0x7d19a213
  406ebd:	and    eax,0x99e9a92c
  406ec2:	hlt    
  406ec3:	(bad)  
  406ec4:	rol    BYTE PTR [esi-0x4cbc67a7],1
  406eca:	adc    al,0xc5
  406ecc:	mov    esi,0x9f8b23e2
  406ed1:	jo     0x406f15
  406ed3:	mov    ch,0xb0
  406ed5:	mov    gs,eax
  406ed7:	add    al,0x23
  406ed9:	in     eax,dx
  406eda:	lock icebp 
  406edc:	push   edx
  406edd:	sbb    ch,BYTE PTR [ecx-0x349f1d27]
  406ee3:	adc    DWORD PTR [eax+0x61],edx
  406ee6:	cdq    
  406ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ee8:	pushf  
  406ee9:	dec    eax
  406eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eeb:	push   ebx
  406eec:	adc    cl,BYTE PTR [esi]
  406eee:	in     al,0xd2
  406ef0:	arpl   WORD PTR [ecx],bx
  406ef2:	pop    edi
  406ef3:	fwait
  406ef4:	es popf 
  406ef6:	or     dh,BYTE PTR [esi-0x25]
  406ef9:	test   cl,0x69
  406efc:	pop    esp
  406efd:	ja     0x406f77
  406eff:	mov    ds:0x9353d7e6,al
  406f04:	push   ecx
  406f05:	vmread DWORD PTR [ebx-0x9],esp
  406f09:	les    edi,FWORD PTR [ebx]
  406f0b:	push   ebx
  406f0c:	enter  0xe67e,0xd4
  406f10:	dec    edi
  406f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f12:	jle    0x406ee0
  406f14:	dec    esi
  406f15:	or     ebp,DWORD PTR [ecx+0x27]
  406f18:	std    
  406f19:	cmovbe ecx,DWORD PTR ss:[esi]
  406f1d:	adc    eax,0xf52fd729
  406f22:	or     DWORD PTR [ecx+0x59a4249d],ebx
  406f28:	mov    ?,WORD PTR [edx+0x362e0c91]
  406f2e:	jmp    0xc0b46f8d
  406f33:	stos   DWORD PTR es:[edi],eax
  406f34:	pop    edx
  406f35:	aam    0x31
  406f37:	jns    0x406f9f
  406f39:	(bad)  
  406f3a:	fucomp st(6)
  406f3c:	push   es
  406f3d:	mov    ch,0xd6
  406f3f:	sbb    ebp,edi
  406f41:	std    
  406f42:	push   edx
  406f43:	leave  
  406f44:	(bad)  
  406f45:	scas   eax,DWORD PTR es:[edi]
  406f46:	mov    ds:0x16582389,eax
  406f4b:	popf   
  406f4c:	mov    eax,0xf971b95f
  406f51:	ins    BYTE PTR es:[edi],dx
  406f52:	mov    al,0xa0
  406f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f55:	(bad)  
  406f56:	adc    esi,DWORD PTR [edx+ecx*2-0x442d256a]
  406f5d:	dec    BYTE PTR [edx+0xd]
  406f60:	(bad)  
  406f61:	(bad)  
  406f62:	je     0x406fc0
  406f64:	lods   eax,DWORD PTR ds:[esi]
  406f65:	mov    BYTE PTR [ecx-0x61],bh
  406f68:	mov    eax,0xedc165a5
  406f6d:	adc    DWORD PTR [ebx+0x5b10d101],0xf809fdfc
  406f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f78:	mov    ebp,0x4749549d
  406f7d:	gs fwait
  406f7f:	lahf   
  406f80:	mov    ch,ch
  406f82:	push   ecx
  406f83:	mov    esp,0xb8b63703
  406f88:	and    bl,dh
  406f8a:	iret   
  406f8b:	icebp  
  406f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f8d:	jns    0x406f10
  406f8f:	or     ecx,DWORD PTR [edx]
  406f91:	test   DWORD PTR [edi+0x6cd7bbc5],0x45404e6e
  406f9b:	pop    esi
  406f9c:	jae    0x407011
  406f9e:	mov    dl,0x60
  406fa0:	push   ebp
  406fa1:	jns    0x406f23
  406fa3:	mul    DWORD PTR [ebx+0x4bc3306d]
  406fa9:	mov    esp,0xfb2a15f3
  406fae:	in     al,dx
  406faf:	fldcw  WORD PTR [ebx-0x45]
  406fb2:	ret    
  406fb3:	sbb    eax,0x8dd6206c
  406fb8:	inc    eax
  406fb9:	dec    edx
  406fba:	call   0x998b0304
  406fbf:	xor    bl,BYTE PTR [eax-0x57]
  406fc2:	and    dh,bh
  406fc4:	xor    BYTE PTR [eax-0x60eb59c1],dl
  406fca:	(bad)  
  406fcb:	in     eax,0x2f
  406fcd:	call   FWORD PTR [eax+0x694ff573]
  406fd3:	scas   eax,DWORD PTR es:[edi]
  406fd4:	mov    ss,WORD PTR [ebx-0x5f]
  406fd7:	cmc    
  406fd8:	shl    eax,0xa1
  406fdb:	test   eax,0x60ce759c
  406fe0:	mov    DWORD PTR [ecx-0x21b06614],esi
  406fe6:	icebp  
  406fe7:	pop    ss
  406fe8:	rol    DWORD PTR [ebx],0x1c
  406feb:	out    0xe8,al
  406fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fee:	das    
  406fef:	repz fs pop esi
  406ff2:	mov    ds,WORD PTR [esi]
  406ff4:	mov    dl,0x1
  406ff6:	pop    ebx
  406ff7:	push   edi
  406ff8:	mov    edx,0x2a19b822
  406ffd:	inc    edi
  406ffe:	call   0xdb00d81
  407003:	aam    0x9d
  407005:	lock mov ds:0x13dc2606,eax
  40700b:	cs pop edx
  40700d:	ins    DWORD PTR es:[edi],dx
  40700e:	fdiv   DWORD PTR [ebp+0x9]
  407011:	cmp    DWORD PTR gs:[ecx+esi*2+0x20],ebx
  407016:	xchg   ecx,eax
  407017:	outs   dx,BYTE PTR ds:[esi]
  407018:	mov    ds:0xc3afc3b0,eax
  40701d:	pop    edi
  40701e:	clc    
  40701f:	mov    cl,0x8b
  407021:	sbb    DWORD PTR [edx+0x328eefc0],edx
  407027:	loopne 0x40709d
  407029:	in     eax,dx
  40702a:	bound  eax,QWORD PTR [edi-0x33]
  40702d:	jbe    0x406fd2
  40702f:	adc    al,0x73
  407031:	daa    
  407032:	push   edi
  407033:	mov    al,0x92
  407035:	test   ebx,0xcdeda0de
  40703b:	mov    ah,0xfc
  40703d:	xor    eax,0x9281d3ca
  407042:	push   ebx
  407043:	push   ecx
  407044:	add    eax,0x41ad7f49
  407049:	leave  
  40704a:	sub    BYTE PTR [ebx-0x44],dh
  40704d:	into   
  40704e:	loopne 0x407035
  407050:	loop   0x406ff1
  407052:	sbb    ecx,DWORD PTR [eax]
  407054:	dec    edi
  407055:	outs   dx,DWORD PTR ds:[esi]
  407056:	(bad)  
  407057:	pusha  
  407058:	sbb    ecx,esp
  40705a:	popa   
  40705b:	aam    0xfe
  40705d:	(bad)  ss:[ecx+0x387391ac]
  407064:	popf   
  407065:	or     DWORD PTR [ecx-0x7260f126],ebp
  40706b:	dec    esi
  40706c:	dec    esi
  40706d:	out    0xce,eax
  40706f:	add    dh,BYTE PTR [ebp+0x41cfa8d2]
  407075:	jo     0x4070b2
  407077:	and    BYTE PTR [edx],bl
  407079:	xor    eax,edx
  40707b:	cld    
  40707c:	mov    ds:0x5935f1d2,eax
  407081:	or     DWORD PTR [esi],0xc59c2663
  407087:	xchg   esp,eax
  407088:	test   edx,esp
  40708a:	push   ss
  40708b:	pop    esp
  40708c:	in     al,0x9a
  40708e:	xchg   ecx,eax
  40708f:	jo     0x4070f3
  407091:	mov    ah,0xf5
  407093:	xor    bl,al
  407095:	pop    es
  407096:	lds    esi,FWORD PTR [ebx-0x65]
  407099:	ins    DWORD PTR es:[edi],dx
  40709a:	add    al,0x33
  40709c:	lea    edi,[ebx]
  40709e:	jge    0x4070b3
  4070a0:	shl    BYTE PTR [ebx+ebp*8-0x38],1
  4070a4:	push   edx
  4070a5:	xchg   edi,eax
  4070a6:	imul   esp,DWORD PTR [ebx-0x5a056b96],0x75795096
  4070b0:	and    al,0xed
  4070b2:	aas    
  4070b3:	or     eax,0xf0b1278a
  4070b8:	icebp  
  4070b9:	fdiv   QWORD PTR [edx-0x6dfc7412]
  4070bf:	hlt    
  4070c0:	out    0x82,al
  4070c2:	push   edi
  4070c3:	test   eax,0x598c51fb
  4070c8:	sbb    al,0x1c
  4070ca:	mov    ecx,0x86ab25c2
  4070cf:	or     al,0x58
  4070d1:	inc    edx
  4070d2:	test   ebp,edi
  4070d4:	jg     0x4070b8
  4070d6:	ins    DWORD PTR es:[edi],dx
  4070d7:	aaa    
  4070d8:	test   BYTE PTR [edx],ch
  4070da:	fs jmp 0x5a5086ff
  4070e0:	es ins DWORD PTR es:[edi],dx
  4070e2:	jbe    0x4070b7
  4070e4:	jge    0x407076
  4070e6:	aam    0xa4
  4070e8:	ja     0x407123
  4070ea:	ret    
  4070eb:	mov    ds:0xc6a85965,al
  4070f0:	sbb    DWORD PTR ds:0x16248ffa,ecx
  4070f6:	dec    esi
  4070f7:	add    ch,0x64
  4070fa:	push   es
  4070fb:	or     BYTE PTR [edx+0x6931e9bf],0x8c
  407102:	dec    esp
  407103:	(bad)  
  407104:	adc    bl,BYTE PTR [ebx+0x15]
  407107:	xchg   ebx,eax
  407108:	adc    ebp,ecx
  40710a:	adc    eax,ebp
  40710c:	mov    ch,dl
  40710e:	ror    BYTE PTR [edx-0x19],1
  407111:	mov    ebx,0xed4f5076
  407116:	xlat   BYTE PTR ds:[ebx]
  407117:	lods   al,BYTE PTR ds:[esi]
  407118:	btc    DWORD PTR [edx+0x4],eax
  40711c:	add    esi,DWORD PTR [edi+0x59744a80]
  407122:	cwde   
  407123:	add    DWORD PTR [esi+ecx*4-0x1b747ee0],ecx
  40712a:	icebp  
  40712b:	mov    ecx,DWORD PTR [edi+0x59915a7c]
  407131:	sbb    bl,0x23
  407134:	cmp    BYTE PTR [edi],dh
  407136:	(bad)  
  407137:	and    esp,esi
  407139:	cmp    esp,DWORD PTR ds:0x9f749fd2
  40713f:	or     BYTE PTR [esi+0x4bb4d7f2],al
  407145:	retf   
  407146:	(bad)  
  407147:	cdq    
  407148:	fwait
  407149:	mov    ecx,0xacff8b0d
  40714e:	push   es
  40714f:	ins    BYTE PTR es:[edi],dx
  407150:	bound  esp,QWORD PTR [ebx]
  407152:	pop    ecx
  407153:	xlat   BYTE PTR ds:[ebx]
  407154:	test   al,0xe0
  407156:	push   edi
  407157:	stos   DWORD PTR es:[edi],eax
  407158:	or     ebp,DWORD PTR ds:[eax]
  40715b:	in     eax,0x17
  40715d:	jae    0x407100
  40715f:	add    al,0xe
  407161:	mov    ds:0x7cd0f098,al
  407166:	add    al,0x5c
  407168:	push   eax
  407169:	sub    bh,BYTE PTR [ebx]
  40716b:	sub    DWORD PTR [edi-0x4718a244],ebx
  407171:	dec    eax
  407172:	lahf   
  407173:	ins    BYTE PTR es:[edi],dx
  407174:	and    al,BYTE PTR [eax-0x6cc99355]
  40717a:	add    ah,BYTE PTR [ecx+0x18]
  40717d:	gs ret 
  40717f:	pop    ebp
  407180:	fadd   QWORD PTR [edx+0x26]
  407183:	and    edx,DWORD PTR [edx+0x2bcf899b]
  407189:	mov    al,0x48
  40718b:	and    eax,0x71f52876
  407190:	xor    al,BYTE PTR ds:0x428ca232
  407196:	pop    ss
  407197:	mov    eax,0x1bb2fef2
  40719c:	and    BYTE PTR [ebp+0x6656be46],ah
  4071a2:	imul   edi,ebx,0xd08994e7
  4071a8:	cli    
  4071a9:	rol    DWORD PTR [ebp-0x34],0xb8
  4071ad:	sub    ch,BYTE PTR [eax+0x48e42fbb]
  4071b3:	aaa    
  4071b4:	pop    eax
  4071b5:	jl     0x40715c
  4071b7:	jbe    0x407211
  4071b9:	jl     0x407172
  4071bb:	lea    ebx,[eax]
  4071bd:	addr16 sbb eax,0x9a421eb7
  4071c3:	jg     0x4071e6
  4071c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c6:	mov    ebp,DWORD PTR [eax]
  4071c8:	out    0x2a,eax
  4071ca:	pop    ebx
  4071cb:	sub    edi,esi
  4071cd:	fimul  DWORD PTR [ebx-0x39]
  4071d0:	jmp    0x407241
  4071d2:	aas    
  4071d3:	or     ah,BYTE PTR [edi]
  4071d5:	sub    DWORD PTR [eax-0x3d],0x5b63e1ae
  4071dc:	mov    ?,WORD PTR [ebp+eiz*1+0x68]
  4071e0:	inc    edi
  4071e1:	ret    0x3d61
  4071e4:	hlt    
  4071e5:	aad    0xb3
  4071e7:	aam    0x82
  4071e9:	and    bl,BYTE PTR [edi-0x5c]
  4071ec:	and    cl,BYTE PTR [ecx+0x2a2d7e21]
  4071f2:	push   esp
  4071f3:	mov    ds:0x8785d91d,al
  4071f8:	pop    ebp
  4071f9:	clc    
  4071fa:	pop    ebx
  4071fb:	adc    esi,esp
  4071fd:	pop    esp
  4071fe:	pop    esi
  4071ff:	mov    bl,0x7a
  407201:	pop    edi
  407202:	mov    ebx,0x692ac0d4
  407207:	(bad)  
  407208:	in     al,dx
  407209:	stos   BYTE PTR es:[edi],al
  40720a:	lds    eax,FWORD PTR [ebx+0x57]
  40720d:	sti    
  40720e:	push   edx
  40720f:	xchg   bx,bp
  407212:	loopne 0x407291
  407214:	push   edi
  407215:	inc    esi
  407216:	sar    bl,cl
  407218:	lods   eax,DWORD PTR ds:[esi]
  407219:	retf   0x836f
  40721c:	mov    bl,0xb3
  40721e:	push   es
  40721f:	inc    edi
  407220:	ja     0x40728e
  407222:	mov    al,ds:0xa97d1453
  407227:	lods   al,BYTE PTR gs:[esi]
  407229:	jnp    0x407244
  40722b:	pop    eax
  40722c:	or     BYTE PTR [edx+edi*8+0xd],al
  407230:	inc    esi
  407231:	jo     0x40728c
  407233:	test   BYTE PTR [esi],dh
  407235:	iret   
  407236:	test   al,0xca
  407238:	pop    es
  407239:	in     al,dx
  40723a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40723b:	shr    DWORD PTR [edi+0x3f491f08],1
  407241:	jecxz  0x407238
  407243:	adc    DWORD PTR [edi+0x74],esp
  407246:	mov    edi,eax
  407248:	or     bh,al
  40724a:	mov    ch,0xf6
  40724c:	or     eax,0x5f7cd725
  407251:	fwait
  407252:	ret    
  407253:	xchg   ebp,eax
  407254:	shr    BYTE PTR [esi-0xa],cl
  407257:	jmp    0x407252
  407259:	pop    esp
  40725a:	cld    
  40725b:	addr16 mov al,0x2b
  40725e:	sub    eax,0xf46673ec
  407263:	jp     0x407214
  407265:	xchg   ebx,eax
  407266:	out    0xdf,al
  407268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407269:	pop    edx
  40726a:	xor    esi,DWORD PTR [ebp-0x3f]
  40726d:	jnp    0x407275
  40726f:	adc    eax,0xf679a263
  407274:	mov    bh,0x30
  407276:	mov    esp,0x9a9dde7c
  40727b:	and    dl,BYTE PTR [ebx+eiz*2+0x10]
  40727f:	in     eax,0xb1
  407281:	mov    BYTE PTR [ebx+0x66],ch
  407284:	arpl   ax,ax
  407286:	or     BYTE PTR [ebx],dl
  407288:	add    BYTE PTR ds:0x3e952e67,al
  40728e:	jp     0x4072dc
  407290:	xlat   BYTE PTR ds:[ebx]
  407291:	push   ss
  407292:	lds    edi,FWORD PTR [ebp-0x74]
  407295:	sub    dl,BYTE PTR [eax]
  407297:	pop    es
  407298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407299:	push   ecx
  40729a:	cmp    al,0x68
  40729c:	sar    BYTE PTR [ebx+0x719d538f],cl
  4072a2:	dec    esi
  4072a3:	into   
  4072a4:	inc    ebp
  4072a5:	xchg   edi,eax
  4072a6:	pushf  
  4072a7:	inc    ebx
  4072a8:	mov    ebp,DWORD PTR [edi]
  4072aa:	scas   eax,DWORD PTR es:[edi]
  4072ab:	sub    esi,DWORD PTR [esi+ebp*1+0x7e]
  4072af:	out    dx,eax
  4072b0:	pop    esp
  4072b1:	adc    al,BYTE PTR [ebp+0x40]
  4072b4:	cmp    ah,al
  4072b6:	adc    eax,0xe10cafde
  4072bb:	sbb    dh,ah
  4072bd:	fimul  WORD PTR ds:0x17652c3b
  4072c3:	jle    0x40730d
  4072c5:	cmc    
  4072c6:	lods   eax,DWORD PTR ds:[esi]
  4072c7:	fs aam 0x80
  4072ca:	mov    ds,WORD PTR [ebx]
  4072cc:	test   eax,0xeba37094
  4072d1:	sub    eax,0x48c176ed
  4072d6:	les    eax,FWORD PTR [eax+ecx*1+0x74]
  4072da:	xchg   ebx,eax
  4072db:	dec    eax
  4072dc:	jb     0x40729d
  4072de:	gs adc edi,edx
  4072e1:	xchg   DWORD PTR [edi],edx
  4072e3:	jle    0x40734d
  4072e5:	pop    es
  4072e6:	cli    
  4072e7:	cmp    DWORD PTR [eax+0xd],0x3ee8a66a
  4072ee:	je     0x4072b9
  4072f0:	xor    DWORD PTR [ebx+0x32],0xffffffd8
  4072f4:	nop
  4072f5:	lds    esp,FWORD PTR [ecx+esi*1+0x23e146]
  4072fc:	mov    ah,0xab
  4072fe:	mov    ecx,0x785bb73d
  407303:	pushf  
  407304:	retf   
  407305:	push   ds
  407306:	mov    esi,0x9ea89847
  40730b:	push   esi
  40730c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40730d:	push   edx
  40730e:	sbb    edx,ebx
  407310:	fisubr WORD PTR [edi-0x4a]
  407313:	jae    0x4072f8
  407315:	or     DWORD PTR [eax-0x483d6375],ebp
  40731b:	add    al,0x94
  40731d:	xor    esi,edx
  40731f:	cmp    al,0x84
  407321:	push   ecx
  407322:	stos   BYTE PTR es:[edi],al
  407323:	mov    al,0xf9
  407325:	mov    esp,0x4316f04
  40732a:	mul    BYTE PTR [ecx]
  40732c:	jno    0x4073ac
  40732e:	dec    ebx
  40732f:	push   0x2a
  407331:	call   0xfe97:0xde2a3c8a
  407338:	jg     0x4072d8
  40733a:	push   0x42
  40733c:	cmp    eax,0x4c9db2d8
  407341:	stos   BYTE PTR es:[edi],al
  407342:	imul   eax,DWORD PTR [ecx-0x20],0x69
  407346:	mov    bh,0x81
  407348:	push   ebx
  407349:	sub    ch,BYTE PTR [esi+0x696993ea]
  40734f:	test   al,0x90
  407351:	xor    al,0x9f
  407353:	mov    eax,?
  407355:	cmp    eax,edi
  407357:	out    dx,al
  407358:	jge    0x40738e
  40735a:	ret    0xc7fb
  40735d:	mov    dh,BYTE PTR [edi+0x63]
  407360:	inc    eax
  407361:	bound  edx,QWORD PTR [esi+0x7cc09233]
  407367:	sub    esi,DWORD PTR [ecx+edi*2]
  40736a:	sar    DWORD PTR [edi-0x75],1
  40736d:	dec    esp
  40736e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40736f:	iret   
  407370:	jnp    0x40734d
  407372:	xor    al,0xe9
  407374:	int3   
  407375:	xchg   ecx,eax
  407376:	pop    ss
  407377:	call   0x4487cf2a
  40737c:	retf   0xf50
  40737f:	stos   DWORD PTR es:[edi],eax
  407380:	xlat   BYTE PTR ds:[ebx]
  407381:	ins    BYTE PTR es:[edi],dx
  407382:	add    ch,cl
  407384:	add    DWORD PTR [edi-0x1fcf3ecf],ebx
  40738a:	jb     0x407365
  40738c:	outs   dx,BYTE PTR ds:[esi]
  40738d:	push   eax
  40738e:	xor    ebp,DWORD PTR [esi-0x3f235e75]
  407394:	or     DWORD PTR [edx+0x606c7674],ebx
  40739a:	das    
  40739b:	dec    ebx
  40739c:	jecxz  0x407409
  40739e:	(bad)  
  40739f:	and    al,0xbd
  4073a1:	(bad)  
  4073a2:	call   0x5a7:0x4c17ca60
  4073a9:	in     al,0xf5
  4073ab:	imul   eax,DWORD PTR [ebx-0x7e],0xffffff98
  4073af:	push   eax
  4073b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b1:	ficom  WORD PTR [edx-0x7e89b5a0]
  4073b7:	pop    eax
  4073b8:	mov    ebp,edx
  4073ba:	mov    DWORD PTR [ebp+0x34],0xc20b3acf
  4073c1:	xor    edi,edx
  4073c3:	mov    ah,0x29
  4073c5:	cmp    al,0x62
  4073c7:	sbb    dl,BYTE PTR [esi]
  4073c9:	rcr    DWORD PTR [ecx-0x2b],0x18
  4073cd:	xor    DWORD PTR [edi-0x2b980180],esp
  4073d3:	cdq    
  4073d4:	inc    esp
  4073d5:	jl     0x40743e
  4073d7:	pusha  
  4073d8:	dec    eax
  4073d9:	dec    ebp
  4073da:	ror    BYTE PTR [edx+0x1c55aab6],cl
  4073e0:	clc    
  4073e1:	test   eax,0x5a79d241
  4073e6:	rol    DWORD PTR ds:0xe998ce50,cl
  4073ec:	xchg   edx,eax
  4073ed:	inc    ecx
  4073ee:	sub    eax,edi
  4073f0:	xlat   BYTE PTR ds:[ebx]
  4073f1:	adc    ch,dh
  4073f3:	iret   
  4073f4:	jbe    0x40740d
  4073f6:	dec    ebx
  4073f7:	nop
  4073f8:	push   eax
  4073f9:	push   0xea6d10f4
  4073fe:	or     al,0x8b
  407400:	jb     0x407459
  407402:	(bad)  
  407403:	and    bl,bl
  407405:	fisttp WORD PTR [ebx-0x24]
  407408:	xor    ebx,DWORD PTR [ebp+0x6281b340]
  40740e:	inc    edx
  40740f:	mov    esp,0x47a30a3b
  407414:	je     0x40748c
  407416:	enterw 0x729,0xee
  40741b:	pop    ebp
  40741c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40741d:	push   eax
  40741e:	mov    edx,0x4e8210dd
  407423:	repz mov eax,ds:0x4cf4dea7
  407429:	pop    edi
  40742a:	push   ebp
  40742b:	cld    
  40742c:	push   esp
  40742d:	daa    
  40742e:	clc    
  40742f:	adc    DWORD PTR [edi],ebx
  407431:	mov    edi,0xf353fb41
  407436:	fst    QWORD PTR [edi]
  407438:	push   eax
  407439:	popa   
  40743a:	cmp    eax,0x130df11a
  40743f:	in     eax,dx
  407440:	xchg   ax,ax
  407442:	clflush BYTE PTR [ebx-0x14]
  407446:	xor    al,0xd6
  407448:	and    ebx,DWORD PTR [esi-0x22]
  40744b:	sbb    ebp,edx
  40744d:	int3   
  40744e:	dec    edi
  40744f:	adc    DWORD PTR [ebx+0x2f],ecx
  407452:	jl     0x40746e
  407454:	mov    bh,0x7a
  407456:	mov    al,bh
  407458:	pop    eax
  407459:	adc    DWORD PTR [edx+0xc],eax
  40745c:	xor    bh,BYTE PTR [esi+0x26e78236]
  407462:	shl    BYTE PTR [eax+0x7dffb41d],0x85
  407469:	imul   ebp,DWORD PTR [ebx],0xffffff9c
  40746c:	jae    0x407428
  40746e:	call   0xf3fe65f5
  407473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407474:	dec    ebp
  407475:	icebp  
  407476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407477:	or     esp,DWORD PTR [ebx+0x28a468]
  40747d:	enter  0x5a1f,0x28
  407481:	arpl   WORD PTR es:[esi],bx
  407484:	or     al,0xb2
  407486:	fld    QWORD PTR [ebx+0x1c]
  407489:	outs   dx,BYTE PTR ds:[esi]
  40748a:	ror    BYTE PTR [ecx+0x631a428],0xe3
  407491:	outs   dx,DWORD PTR ds:[esi]
  407492:	imul   ebx,DWORD PTR [eax+0x7444f21d],0xee0e4ee9
  40749c:	add    al,0x80
  40749e:	mov    ds:0x459017b6,eax
  4074a3:	inc    esi
  4074a4:	iret   
  4074a5:	sub    BYTE PTR [esi+0xc],bl
  4074a8:	into   
  4074a9:	xchg   ebp,eax
  4074aa:	xchg   ecx,ebp
  4074ac:	inc    esi
  4074ad:	ja     0x40750a
  4074af:	mov    eax,0xf5438bc
  4074b4:	xlat   BYTE PTR ds:[ebx]
  4074b5:	pop    esi
  4074b6:	rol    BYTE PTR ds:[ebx],1
  4074b9:	jle    0x4074d1
  4074bb:	jb     0x40743d
  4074bd:	out    dx,eax
  4074be:	rcl    DWORD PTR [esp+edi*1],1
  4074c1:	and    ebx,DWORD PTR [ebp-0x50]
  4074c4:	mov    eax,ds:0xfd074d8f
  4074c9:	inc    eax
  4074ca:	shr    BYTE PTR [ecx],1
  4074cc:	and    eax,0xb289e4ee
  4074d1:	jp     0x407482
  4074d3:	arpl   WORD PTR [edx+0x27],cx
  4074d6:	mov    ebp,0x26555a34
  4074db:	(bad)  
  4074dc:	jge    0x407532
  4074de:	push   edx
  4074df:	js     0x40754c
  4074e1:	and    eax,0xf74c92c4
  4074e6:	cmp    esi,DWORD PTR [si-0x80]
  4074ea:	add    ebx,ebx
  4074ec:	imul   esi,DWORD PTR [esi+edx*2],0x76f2442c
  4074f3:	xchg   BYTE PTR [eax+ebp*8+0x25],al
  4074f7:	test   BYTE PTR [ebx-0x1ab1b4e3],al
  4074fd:	jg     0x407579
  4074ff:	sbb    ah,bl
  407501:	cmp    DWORD PTR [edi+0x45894987],ecx
  407507:	xor    esi,edi
  407509:	sbb    ah,ah
  40750b:	loope  0x4074a7
  40750d:	div    BYTE PTR [esi+0x61871cda]
  407513:	pusha  
  407514:	mov    bh,0xda
  407516:	loope  0x407556
  407518:	cs pop ds
  40751a:	stos   DWORD PTR es:[edi],eax
  40751b:	or     edi,DWORD PTR [ebp-0x68c7f5bf]
  407521:	xor    ch,BYTE PTR [ecx+0x7c2ff63b]
  407527:	sub    al,0xce
  407529:	dec    esi
  40752a:	cmp    BYTE PTR [ebp+0xc],bh
  40752d:	sub    edx,DWORD PTR [edx]
  40752f:	jmp    0x407550
  407531:	lods   eax,DWORD PTR ds:[esi]
  407532:	int    0x68
  407534:	cmp    BYTE PTR [esi+0x8],al
  407537:	push   DWORD PTR [ebx+0x2d]
  40753a:	sbb    eax,DWORD PTR [eax]
  40753c:	sbb    esi,eax
  40753e:	xchg   ecx,eax
  40753f:	and    eax,0xc4350cc9
  407544:	pop    esp
  407545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407546:	mov    ds:0xe168a8c2,al
  40754b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40754c:	push   ebx
  40754d:	jmp    0x4075ac
  40754f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407550:	jae    0x4074d2
  407552:	add    edi,DWORD PTR [esi-0x40]
  407555:	mov    edx,0x53176171
  40755a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40755b:	pop    ds
  40755c:	add    edi,DWORD PTR [eax+0x56]
  40755f:	outs   dx,DWORD PTR ds:[esi]
  407560:	shr    al,0x2
  407563:	(bad)  
  407564:	retf   
  407565:	ret    0xedd4
  407568:	inc    ebx
  407569:	ror    BYTE PTR [esi],1
  40756b:	loope  0x4075de
  40756d:	mov    ecx,0xdcf8a0fd
  407572:	mov    ah,bl
  407574:	lahf   
  407575:	sbb    BYTE PTR [esi-0x840ef0f],bh
  40757b:	jnp    0x407540
  40757d:	and    esi,esi
  40757f:	test   BYTE PTR [ecx-0x7a433896],ch
  407585:	inc    edx
  407586:	scas   eax,DWORD PTR es:[edi]
  407587:	mov    esp,0x500e32fe
  40758c:	dec    ecx
  40758d:	scas   eax,DWORD PTR es:[edi]
  40758e:	mov    dl,0xa7
  407590:	jmp    0x407583
  407592:	fs pusha 
  407594:	sub    eax,0x8912938
  407599:	out    dx,eax
  40759a:	inc    DWORD PTR [ebp+0x20]
  40759d:	and    esp,DWORD PTR [edx]
  40759f:	inc    esi
  4075a0:	pop    esp
  4075a1:	push   ecx
  4075a2:	dec    esi
  4075a3:	sar    dh,0x3d
  4075a6:	sbb    al,0x13
  4075a8:	inc    ebx
  4075a9:	cld    
  4075aa:	addr16 ror bh,1
  4075ad:	dec    edi
  4075ae:	xor    DWORD PTR [esi+0x6896fa71],edx
  4075b4:	clc    
  4075b5:	stc    
  4075b6:	loopne 0x4075e0
  4075b8:	mov    DWORD PTR [edx-0x36],esi
  4075bb:	mov    DWORD PTR [esp+ebx*8+0x19],0xed83b068
  4075c3:	add    ebp,DWORD PTR [ebp-0x5c]
  4075c6:	xchg   ebx,eax
  4075c7:	jns    0x407572
  4075c9:	or     ebx,ecx
  4075cb:	xchg   DWORD PTR [ebx],esi
  4075cd:	adc    eax,0x5847f5b3
  4075d2:	jmp    DWORD PTR [eax+0x7ebc75d5]
  4075d8:	mov    ch,0xc0
  4075da:	out    dx,eax
  4075db:	cs mov bh,0xfc
  4075de:	adc    BYTE PTR [eax-0x5d],dl
  4075e1:	std    
  4075e2:	mov    cl,0x8e
  4075e4:	sar    bh,0x99
  4075e7:	xor    cl,BYTE PTR [ebp+0xb]
  4075ea:	push   esi
  4075eb:	xchg   ebp,eax
  4075ec:	push   0x4
  4075ee:	in     al,dx
  4075ef:	inc    esp
  4075f0:	daa    
  4075f1:	mov    esp,ecx
  4075f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075f4:	mul    DWORD PTR [edi+edi*4-0x6fbb2303]
  4075fb:	pop    eax
  4075fc:	stos   DWORD PTR es:[edi],eax
  4075fd:	rcl    BYTE PTR [ebp-0x67],cl
  407600:	jne    0x4075e7
  407602:	ss push edx
  407604:	cmp    esp,eax
  407606:	fisub  DWORD PTR [eax+0x3a1c4367]
  40760c:	aas    
  40760d:	sub    dh,BYTE PTR [ebp+0x1e]
  407610:	outs   dx,BYTE PTR ds:[esi]
  407611:	hlt    
  407612:	dec    ebx
  407613:	cmp    BYTE PTR gs:[bp+di-0x29],0xb4
  407619:	cwde   
  40761a:	rol    ebp,0x13
  40761d:	jl     0x40761b
  40761f:	pop    ebp
  407620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407621:	stos   BYTE PTR es:[edi],al
  407622:	leave  
  407623:	jne    0x407661
  407625:	push   es
  407626:	xchg   ah,bh
  407628:	adc    DWORD PTR [eax],ebp
  40762a:	or     eax,edx
  40762c:	push   0xad559fdf
  407631:	loop   0x40765c
  407633:	rol    bl,0xb5
  407636:	lods   eax,DWORD PTR ds:[esi]
  407637:	jmp    0x5972:0x9fd156d5
  40763e:	and    eax,0x9e6145f6
  407643:	ds out dx,al
  407645:	push   edi
  407646:	popf   
  407647:	je     0x407628
  407649:	enter  0xbafd,0x53
  40764d:	xchg   ebx,eax
  40764e:	adc    ch,BYTE PTR [edx-0x7c]
  407651:	push   eax
  407652:	repnz push esp
  407654:	bnd call 0x5348f091
  40765a:	dec    edi
  40765b:	iret   
  40765c:	xor    DWORD PTR [ebx-0x254be27e],edi
  407662:	lock neg BYTE PTR [ecx-0x6bf59ffa]
  407669:	xor    eax,0x15ea4eef
  40766e:	xchg   esp,eax
  40766f:	add    al,0xaf
  407671:	leave  
  407672:	sar    BYTE PTR [ebx-0x38668400],1
  407678:	mov    esp,0x38599ce8
  40767d:	or     eax,0xd07270c7
  407682:	sub    BYTE PTR [ecx-0x1015017a],ch
  407688:	das    
  407689:	mov    edx,0x947bdcb4
  40768e:	sbb    BYTE PTR [ebx+0x6e],bh
  407691:	xchg   dh,cl
  407693:	icebp  
  407694:	out    dx,al
  407695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407696:	mov    gs,WORD PTR [edx-0x6f78dcfc]
  40769c:	or     esi,DWORD PTR [edi+0x17e58028]
  4076a2:	pop    eax
  4076a3:	shl    DWORD PTR [edx-0x2b],cl
  4076a6:	pop    edx
  4076a7:	fnstcw WORD PTR [edx-0x22]
  4076aa:	mov    bh,0xaf
  4076ac:	into   
  4076ad:	das    
  4076ae:	or     al,0x57
  4076b0:	test   dl,ah
  4076b2:	adc    eax,0xc7bb6785
  4076b7:	stos   DWORD PTR es:[edi],eax
  4076b8:	shr    BYTE PTR ds:0xc4f1cbec,0x3c
  4076bf:	outs   dx,BYTE PTR ds:[esi]
  4076c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c1:	add    bh,dl
  4076c3:	and    al,0x24
  4076c5:	lods   eax,DWORD PTR ds:[esi]
  4076c6:	and    DWORD PTR [edx+0x3],eax
  4076c9:	not    DWORD PTR [eax]
  4076cb:	jecxz  0x407717
  4076cd:	ins    BYTE PTR es:[edi],dx
  4076ce:	fs pop edi
  4076d0:	fxch   st(4)
  4076d2:	jmp    0x4d8f1ceb
  4076d7:	xchg   ebx,eax
  4076d8:	xchg   BYTE PTR [ecx+0x5b],ah
  4076db:	or     eax,0xabc9b55a
  4076e0:	adc    DWORD PTR [eax+0xb],ebp
  4076e3:	sti    
  4076e4:	ds mov esp,0x16727fb0
  4076ea:	fst    QWORD PTR [esi+0xd]
  4076ed:	sub    BYTE PTR [esi+ebp*8+0x46],0x72
  4076f2:	dec    edi
  4076f3:	xor    ch,bh
  4076f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f6:	in     eax,dx
  4076f7:	xchg   ecx,eax
  4076f8:	mov    ebp,0xb8136801
  4076fd:	push   esp
  4076fe:	pop    edx
  4076ff:	fisub  WORD PTR [eax+0x5ce889a8]
  407705:	fldcw  WORD PTR [ebp-0x7853287b]
  40770b:	imul   eax,DWORD PTR [ebx-0x79],0x33de7bc8
  407712:	test   BYTE PTR [esi],0x50
  407715:	dec    edx
  407716:	cld    
  407717:	jg     0x4076d3
  407719:	sar    DWORD PTR [ecx],0x58
  40771c:	pop    edi
  40771d:	rcl    BYTE PTR [ebx+eax*1],cl
  407720:	outs   dx,BYTE PTR ds:[esi]
  407721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407722:	xchg   BYTE PTR [edi-0x3816b4ac],ah
  407728:	xchg   esp,eax
  407729:	inc    ecx
  40772a:	push   edi
  40772b:	(bad)  
  40772c:	cld    
  40772d:	bound  ecx,QWORD PTR [ebx-0x5f]
  407730:	test   BYTE PTR [edx+0x9f684cf],bh
  407736:	int    0x8b
  407738:	sub    esi,DWORD PTR [ebx+0x21]
  40773b:	sbb    ebx,DWORD PTR [ebx]
  40773d:	jb     0x407773
  40773f:	push   ebp
  407740:	sbb    eax,0x4464da79
  407745:	ins    BYTE PTR es:[edi],dx
  407746:	mov    al,0x2c
  407748:	popf   
  407749:	adc    DWORD PTR [edi],esp
  40774b:	adc    ebp,edx
  40774d:	dec    DWORD PTR [edx]
  40774f:	or     eax,ecx
  407751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407752:	mov    ds:0x58f965d3,eax
  407757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407758:	jnp    0x4077b1
  40775a:	adc    eax,DWORD PTR ds:0xaaf95709
  407760:	mov    ecx,0xb32c2d46
  407765:	dec    esp
  407766:	mov    ebp,0x1c0c2b63
  40776b:	cmp    cl,BYTE PTR [eax-0x14]
  40776e:	add    edi,eax
  407770:	dec    esi
  407771:	cdq    
  407772:	dec    edi
  407773:	test   BYTE PTR [esi+0x77],bh
  407776:	mov    DWORD PTR [ecx],edi
  407778:	push   0x2d38c99d
  40777d:	cmp    DWORD PTR [ebx-0x66],eax
  407780:	enter  0xa2e8,0xd5
  407784:	jg     0x4077e8
  407786:	add    BYTE PTR [edi-0x6c],al
  407789:	add    al,0xb3
  40778b:	movlps QWORD PTR [edx+eiz*8-0x21],xmm4
  407790:	pop    DWORD PTR [esi+edi*4]
  407793:	pop    esi
  407794:	into   
  407795:	sub    ch,BYTE PTR ds:0x877bdf4b
  40779b:	pop    es
  40779c:	adc    DWORD PTR [edx-0x7f],0x9fdd5f35
  4077a3:	xor    DWORD PTR [edx],eax
  4077a5:	and    BYTE PTR [edx-0x3f20b869],dh
  4077ab:	cs enter 0x3ed7,0x23
  4077b0:	and    bh,al
  4077b2:	inc    edi
  4077b3:	mov    dh,0x67
  4077b5:	loope  0x407759
  4077b7:	cmp    al,0x24
  4077b9:	xchg   edi,eax
  4077ba:	inc    esp
  4077bb:	dec    ecx
  4077bc:	out    dx,eax
  4077bd:	pusha  
  4077be:	pusha  
  4077bf:	pop    ds
  4077c0:	fwait
  4077c1:	outs   dx,BYTE PTR ds:[esi]
  4077c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c3:	sahf   
  4077c4:	addr16 cmc 
  4077c6:	sub    bh,dh
  4077c8:	or     DWORD PTR [edi+0x18],ebx
  4077cb:	fs jns 0x4077f5
  4077ce:	mov    bh,0xac
  4077d0:	fstp   DWORD PTR [edx+0x4c]
  4077d3:	in     al,dx
  4077d4:	pop    edx
  4077d5:	lock cdq 
  4077d7:	mov    ch,0xc3
  4077d9:	jmp    0xdffb87bb
  4077de:	in     al,dx
  4077df:	add    BYTE PTR [ebp-0x31bc430b],dl
  4077e5:	fwait
  4077e6:	sti    
  4077e7:	push   esp
  4077e8:	jae    0x407770
  4077ea:	and    BYTE PTR [ebp-0xd],bl
  4077ed:	or     BYTE PTR [ebx-0x36],ch
  4077f0:	lea    ebp,[edx+0x44]
  4077f3:	retf   
  4077f4:	aam    0x4e
  4077f6:	in     al,0xae
  4077f8:	loope  0x4077bb
  4077fa:	jecxz  0x407841
  4077fc:	cmp    cl,BYTE PTR [edi+edx*1-0x45fbcf99]
  407803:	mov    edx,0x30975519
  407808:	rol    BYTE PTR [ebp-0x31e1a3e7],cl
  40780e:	or     al,0x3
  407810:	imul   ebx
  407812:	fisub  DWORD PTR [ebx+eax*4+0x3b]
  407816:	loope  0x4077b4
  407818:	xchg   DWORD PTR [edx-0x3e],esi
  40781b:	xchg   dh,ch
  40781d:	mov    cs,WORD PTR [ebx+edi*2+0x0]
  407821:	sbb    al,dl
  407823:	retf   
  407824:	inc    ecx
  407825:	ins    BYTE PTR es:[edi],dx
  407826:	int    0x81
  407828:	adc    dl,bl
  40782a:	mov    edi,0xd60d5602
  40782f:	mov    ah,0xbb
  407831:	cmp    BYTE PTR [edx-0x3f78d7f],ah
  407837:	xlat   BYTE PTR ds:[ebx]
  407838:	push   cs
  407839:	add    ch,BYTE PTR [eax]
  40783b:	add    bl,ah
  40783d:	mov    DWORD PTR [esi+0x33],ebp
  407840:	repz jns 0x407891
  407843:	test   DWORD PTR [ecx-0x7c66091],eax
  407849:	out    dx,al
  40784a:	xchg   edx,eax
  40784b:	scas   eax,DWORD PTR es:[edi]
  40784c:	lds    ecx,FWORD PTR [ebx+0x7e7889f0]
  407852:	inc    ebp
  407853:	push   ss
  407854:	ret    0xf209
  407857:	or     ebx,DWORD PTR [esi+0x64]
  40785a:	dec    ebx
  40785b:	loopne 0x40786a
  40785d:	adc    BYTE PTR [edx+ebx*2-0x67],ah
  407861:	stos   BYTE PTR es:[edi],al
  407862:	ins    BYTE PTR es:[edi],dx
  407863:	inc    BYTE PTR [ebx+eax*4+0x21666ae]
  40786a:	retf   0x4007
  40786d:	mov    cl,0x3f
  40786f:	js     0x407894
  407871:	xor    al,0xb9
  407873:	mov    dh,0x37
  407875:	inc    esp
  407876:	and    ebx,DWORD PTR [ecx-0xb8b7933]
  40787c:	inc    esp
  40787d:	jb     0x40782a
  40787f:	push   edx
  407880:	ins    BYTE PTR es:[edi],dx
  407881:	jb     0x407848
  407883:	jns    0x40783a
  407885:	pushf  
  407886:	mov    cl,0xbd
  407888:	sub    ecx,edx
  40788a:	cwde   
  40788b:	stos   DWORD PTR es:[edi],eax
  40788c:	mov    ah,0x4e
  40788e:	(bad)  
  40788f:	idiv   BYTE PTR [esi-0x49]
  407892:	xchg   esi,eax
  407893:	clc    
  407894:	and    edi,DWORD PTR [esi]
  407896:	add    esi,esp
  407898:	popf   
  407899:	or     al,0x40
  40789b:	hlt    
  40789c:	addr16 fld st(7)
  40789f:	add    DWORD PTR [ebp-0x55],eax
  4078a2:	cdq    
  4078a3:	out    dx,al
  4078a4:	pop    ebx
  4078a5:	(bad)  
  4078a6:	add    eax,DWORD PTR [eax]
  4078a8:	and    al,0xcf
  4078aa:	cmp    al,0x26
  4078ac:	js     0x4078dd
  4078ae:	adc    eax,0x535c8251
  4078b3:	mov    ds:0x6ce1969b,al
  4078b8:	int3   
  4078b9:	jg     0x4078e4
  4078bb:	and    BYTE PTR [ebx+0x79],cl
  4078be:	call   0xa28b:0x7aa1176f
  4078c5:	push   0xffffffd5
  4078c7:	out    dx,eax
  4078c8:	jmp    0xe49b:0xef66a786
  4078cf:	pusha  
  4078d0:	adc    BYTE PTR [esi+esi*1],bl
  4078d3:	or     al,0xd8
  4078d5:	sub    ah,BYTE PTR [ebp-0x5]
  4078d8:	push   eax
  4078d9:	sbb    BYTE PTR [eax+ebx*1+0x23456b61],bh
  4078e0:	jmp    0x78f6:0xa67ce9e5
  4078e7:	mov    cl,0x1
  4078e9:	sar    DWORD PTR [ecx+0x59],cl
  4078ec:	mov    ?,WORD PTR [edx+0x35f2910b]
  4078f2:	outs   dx,DWORD PTR ds:[esi]
  4078f3:	and    BYTE PTR [esi+edx*4-0x160c3150],bh
  4078fa:	or     al,0x71
  4078fc:	push   edi
  4078fd:	xlat   BYTE PTR ds:[ebx]
  4078fe:	jbe    0x4078c4
  407900:	sub    eax,0x2b226c4b
  407905:	mov    esp,0x6799dded
  40790a:	(bad)  
  40790b:	mul    ebx
  40790d:	loop   0x40796e
  40790f:	das    
  407910:	int3   
  407911:	push   ebx
  407912:	mov    ds:0xf3f1c582,al
  407917:	call   0xaabd9b44
  40791c:	sti    
  40791d:	retf   
  40791e:	or     ah,dh
  407920:	arpl   WORD PTR [ecx+0xf],ax
  407923:	jmp    0x4078ac
  407925:	pop    ds
  407926:	cmp    DWORD PTR [edx+0x7c],edi
  407929:	ins    BYTE PTR es:[di],dx
  40792b:	jmp    0x48ad11d
  407930:	push   edi
  407931:	inc    eax
  407932:	adc    DWORD PTR [eax],ebp
  407934:	push   es
  407935:	inc    ebx
  407936:	shr    BYTE PTR [ebx-0x1f],0x46
  40793a:	xor    esi,ebp
  40793c:	fisubr DWORD PTR [ecx+edi*1-0x176408da]
  407943:	lods   al,BYTE PTR ds:[esi]
  407944:	and    al,0xe
  407946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407947:	xor    eax,0x7b95ba85
  40794c:	push   ds
  40794d:	adc    BYTE PTR [edi-0x36559458],ch
  407953:	push   ecx
  407954:	(bad)  
  407955:	and    DWORD PTR [ecx+0x2b],ebx
  407958:	sbb    BYTE PTR [eax-0x41d305c],0xf2
  40795f:	cmp    cl,al
  407961:	cmp    eax,0xb31cc9b
  407966:	push   ds
  407967:	fistp  QWORD PTR [ebx]
  407969:	scas   al,BYTE PTR es:[edi]
  40796a:	sbb    esp,DWORD PTR [esi+0x78d48876]
  407970:	fs pop esp
  407972:	jle    0x4079b2
  407974:	push   cs
  407975:	pop    eax
  407976:	dec    ecx
  407977:	fdivrp st(2),st
  407979:	rcl    ebp,cl
  40797b:	add    al,0x38
  40797d:	pop    ebx
  40797e:	mov    cl,0xa5
  407980:	lds    ebx,FWORD PTR [eax+esi*1+0x46]
  407984:	lahf   
  407985:	inc    ebp
  407986:	test   eax,0x33f78288
  40798b:	popa   
  40798c:	or     edx,DWORD PTR [edx-0x11]
  40798f:	xor    ecx,DWORD PTR [edx+0x3db77b4b]
  407995:	jne    0x407a15
  407997:	xchg   BYTE PTR [edi-0x6184c24e],dl
  40799d:	pop    esp
  40799e:	and    BYTE PTR [edx+0x759ba018],ch
  4079a4:	cld    
  4079a5:	(bad)  [esi-0x1a73ad14]
  4079ab:	test   eax,0x108aa563
  4079b0:	test   eax,eax
  4079b2:	mov    ecx,0x2d02387
  4079b7:	cmp    al,0xb7
  4079b9:	out    dx,al
  4079ba:	and    BYTE PTR [ebx],dl
  4079bc:	mov    cx,0xe6d0
  4079c0:	jbe    0x407a13
  4079c2:	les    esi,FWORD PTR [ebp+0x21215692]
  4079c8:	in     al,dx
  4079c9:	or     esp,DWORD PTR [edi-0x14d6369b]
  4079cf:	nop
  4079d0:	jge    0x4079fc
  4079d2:	in     eax,0xc4
  4079d4:	shr    DWORD PTR [esp+ecx*4+0x0],1
  4079d8:	dec    ebx
  4079d9:	es ffree st(3)
  4079dc:	ins    DWORD PTR es:[edi],dx
  4079dd:	leave  
  4079de:	scas   eax,DWORD PTR es:[edi]
  4079df:	cwde   
  4079e0:	jbe    0x40797c
  4079e2:	mov    ebx,0x881ba01a
  4079e7:	sbb    dl,BYTE PTR [ecx]
  4079e9:	int    0x5d
  4079eb:	les    ebp,FWORD PTR [edi]
  4079ed:	cwde   
  4079ee:	outs   dx,BYTE PTR ds:[esi]
  4079ef:	and    DWORD PTR [ebx],0xa56b0705
  4079f5:	sbb    edx,DWORD PTR [edx-0x56]
  4079f8:	dec    ebx
  4079f9:	jmp    0x64711561
  4079fe:	repnz scas al,BYTE PTR es:[edi]
  407a00:	test   al,0x9e
  407a02:	(bad)  
  407a03:	xchg   edx,eax
  407a04:	(bad)  
  407a05:	cmp    DWORD PTR [esi],0x412d6fbb
  407a0b:	jge    0x407a0a
  407a0d:	(bad)  
  407a0e:	jmp    0x430db784
  407a13:	mov    ah,BYTE PTR [esi-0x788a6109]
  407a19:	or     DWORD PTR [esi+0xb],ebx
  407a1c:	call   FWORD PTR es:[edi]
  407a1f:	in     al,0xda
  407a21:	in     al,0x5f
  407a23:	mov    ecx,0x5d2ae252
  407a28:	adc    ecx,esi
  407a2a:	sbb    al,0x38
  407a2c:	xor    BYTE PTR [eax-0x7ac1b2b2],al
  407a32:	retf   
  407a33:	add    al,0x2f
  407a35:	lods   eax,DWORD PTR ds:[esi]
  407a36:	mov    eax,ds:0x88b7341f
  407a3b:	jmp    0x812f7088
  407a40:	or     esp,ebp
  407a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a43:	aam    0xfb
  407a45:	sbb    edx,DWORD PTR [edx]
  407a47:	dec    esi
  407a48:	std    
  407a49:	pop    ss
  407a4a:	ins    BYTE PTR es:[edi],dx
  407a4b:	mov    ds:0x31cb0e15,eax
  407a50:	push   ebx
  407a51:	sti    
  407a52:	mov    dl,0x27
  407a54:	ja     0x407a95
  407a56:	jbe    0x407a53
  407a58:	fnstcw WORD PTR [edi]
  407a5a:	pop    ss
  407a5b:	sbb    eax,ebp
  407a5d:	das    
  407a5e:	ror    ah,1
  407a60:	stc    
  407a61:	sbb    eax,0xb473d7dc
  407a66:	test   DWORD PTR [ebp-0x3a],ebx
  407a69:	mov    esp,0xc55cab7b
  407a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a6f:	sbb    bh,bh
  407a71:	nop
  407a72:	(bad)  
  407a73:	pop    edi
  407a74:	fcmovnb st,st(0)
  407a76:	add    al,BYTE PTR [ebp+0x1e]
  407a79:	hlt    
  407a7a:	mov    ebx,0x99912c82
  407a7f:	retf   0x89a5
  407a82:	test   ebx,ecx
  407a84:	std    
  407a85:	mov    cl,BYTE PTR [ebx+0x4ef82e48]
  407a8b:	aam    0x97
  407a8d:	or     al,0xbc
  407a8f:	dec    ecx
  407a90:	daa    
  407a91:	test   DWORD PTR ss:[ebx+0x65],0x84e28668
  407a99:	push   es
  407a9a:	jecxz  0x407a77
  407a9c:	addr16 pop ecx
  407a9e:	fisttp WORD PTR [ebp+0x6142bc07]
  407aa4:	adc    eax,0x6eeda241
  407aa9:	repz pop edi
  407aab:	sub    al,ch
  407aad:	test   eax,0x84818600
  407ab2:	(bad)  
  407ab3:	dec    ecx
  407ab4:	sub    eax,0xbae41bd4
  407ab9:	retf   0xbde4
  407abc:	add    dl,0x26
  407abf:	pop    ss
  407ac0:	fldcw  WORD PTR [eax]
  407ac2:	aas    
  407ac3:	mov    ah,0xb5
  407ac5:	mov    edx,0x5c764f6f
  407aca:	fidivr WORD PTR [eax]
  407acc:	cmp    dh,BYTE PTR [ebx+0x31]
  407acf:	mov    DWORD PTR ss:[esi+0x51b52d45],ebx
  407ad6:	push   es
  407ad7:	addr16 retf 
  407ad9:	ja     0x407ab7
  407adb:	cwde   
  407adc:	sbb    DWORD PTR [esi+0x625ffc7c],edx
  407ae2:	push   0xffffffa3
  407ae4:	sub    DWORD PTR [edx-0x6dc69583],ebx
  407aea:	xchg   dl,dl
  407aec:	push   ebp
  407aed:	mov    ?,WORD PTR [ebp+edi*1+0x1a]
  407af1:	out    0xd2,eax
  407af3:	(bad)  
  407af4:	fsin   
  407af6:	xor    eax,0xeac3144f
  407afb:	int    0x5e
  407afd:	push   esp
  407afe:	sbb    eax,0x653577e8
  407b03:	hlt    
  407b04:	imul   ebp,DWORD PTR [edi],0x1ffbcd33
  407b0a:	push   esp
  407b0b:	xchg   ecx,eax
  407b0c:	call   0x493d3958
  407b11:	jp     0x407b48
  407b13:	popa   
  407b14:	sbb    edx,esi
  407b16:	xchg   dh,cl
  407b18:	cmp    DWORD PTR [ebx+eax*8+0x16],edi
  407b1c:	dec    ebx
  407b1d:	imul   ebp,DWORD PTR [ebx-0x28],0x24
  407b21:	mov    esi,0x2012bbca
  407b26:	fiadd  WORD PTR [edi+0x4755383a]
  407b2c:	imul   ebx,DWORD PTR [esi+0x1a94f1f1],0x43
  407b33:	mov    ebp,0xcef131f3
  407b38:	js     0x407b04
  407b3a:	or     ecx,0x2d
  407b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3e:	sahf   
  407b3f:	rol    dl,cl
  407b41:	inc    DWORD PTR [eax]
  407b43:	aad    0x84
  407b45:	mov    dl,0xea
  407b47:	cmc    
  407b48:	fdivr  st(5),st
  407b4a:	imul   edx,ebp,0x44
  407b4d:	adc    esp,DWORD PTR [esi+0x52]
  407b50:	imul   ebp,DWORD PTR [esi+0x44],0x3f1dfd0b
  407b57:	loop   0x407bcc
  407b59:	pop    esp
  407b5a:	retf   0x5f3a
  407b5d:	push   0xf1883ca5
  407b62:	scas   eax,DWORD PTR es:[edi]
  407b63:	push   ebp
  407b64:	sub    BYTE PTR [esi+0x56],0xa6
  407b68:	mov    cl,bl
  407b6a:	inc    ebx
  407b6b:	add    al,0xdd
  407b6d:	or     DWORD PTR [esi+0x70856679],esi
  407b73:	push   ebx
  407b74:	mov    ch,0x27
  407b76:	xor    edi,DWORD PTR [ebx-0x51]
  407b79:	std    
  407b7a:	xchg   ecx,eax
  407b7b:	out    dx,eax
  407b7c:	std    
  407b7d:	iret   
  407b7e:	retf   0xdc61
  407b81:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b83:	jnp    0x407bef
  407b85:	out    dx,al
  407b86:	sub    al,0xc1
  407b88:	mov    ds:0x5a3c0e45,al
  407b8d:	lods   al,BYTE PTR ds:[esi]
  407b8e:	sub    bh,0xc
  407b91:	xchg   BYTE PTR [ebx-0x71443c9f],bh
  407b97:	dec    eax
  407b98:	enter  0x894b,0x26
  407b9c:	icebp  
  407b9d:	sub    esi,eax
  407b9f:	add    bl,bh
  407ba1:	mov    ebp,DWORD PTR [eax-0x6b595]
  407ba7:	xlat   BYTE PTR ds:[ebx]
  407ba8:	push   edx
  407ba9:	aam    0xa6
  407bab:	lahf   
  407bac:	and    eax,0x21f592fb
  407bb1:	xchg   ah,bh
  407bb3:	or     dl,BYTE PTR [edi+0x4d4dff11]
  407bb9:	mov    dx,WORD PTR [edx]
  407bbc:	aad    0x8e
  407bbe:	inc    esp
  407bbf:	mov    ds:0x614c03bd,eax
  407bc4:	iret   
  407bc5:	mov    ?,WORD PTR [ebp*4+0xa308ff8]
  407bcc:	sbb    eax,0xb8f221de
  407bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd2:	dec    ebx
  407bd3:	aam    0x56
  407bd5:	sahf   
  407bd6:	lea    edx,[edx+0x55df1406]
  407bdc:	ret    
  407bdd:	test   al,0xe9
  407bdf:	mov    esi,0xc9c5721f
  407be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be5:	ins    DWORD PTR es:[edi],dx
  407be6:	cmp    ah,BYTE PTR [eax-0x20fde0ad]
  407bec:	shr    BYTE PTR [esi+0x23],0xed
  407bf0:	shl    DWORD PTR [ebx],cl
  407bf2:	push   esp
  407bf3:	or     eax,DWORD PTR [edi]
  407bf5:	imul   edi,edi,0x7eecf88d
  407bfb:	aad    0x4e
  407bfd:	dec    ecx
  407bfe:	and    eax,0x53175809
  407c03:	out    dx,al
  407c04:	xchg   edi,eax
  407c05:	mov    ah,0xbb
  407c07:	sbb    eax,ebx
  407c09:	cmp    DWORD PTR [edx+ebp*4],edi
  407c0c:	pop    es
  407c0d:	push   esi
  407c0e:	sti    
  407c0f:	clc    
  407c10:	test   BYTE PTR [edx-0x2a],ch
  407c13:	loope  0x407c3b
  407c15:	cmp    bh,BYTE PTR [ecx+0x14]
  407c18:	mov    ah,0xc8
  407c1a:	scas   al,BYTE PTR es:[edi]
  407c1b:	test   al,0x55
  407c1d:	push   eax
  407c1e:	pop    ds
  407c1f:	sbb    BYTE PTR ds:0x75bc3e29,bl
  407c25:	add    esp,DWORD PTR [ebx]
  407c27:	dec    ecx
  407c28:	push   eax
  407c29:	or     ecx,DWORD PTR [edx]
  407c2b:	sub    ebp,DWORD PTR [ecx+0x44]
  407c2e:	(bad)  
  407c2f:	cmp    al,0x4a
  407c31:	shr    ch,cl
  407c33:	push   edx
  407c34:	lods   al,BYTE PTR ds:[esi]
  407c35:	push   es
  407c36:	pop    ss
  407c37:	xchg   DWORD PTR [ecx-0x3a858918],ecx
  407c3d:	jg     0x407ca4
  407c3f:	leave  
  407c40:	mov    ebx,0x7522aaa0
  407c45:	inc    BYTE PTR [ebp-0x7efb19fb]
  407c4b:	jp     0x407c4f
  407c4d:	fcom   DWORD PTR ds:0x106a94aa
  407c53:	push   ebp
  407c54:	sbb    eax,0xb021bf2c
  407c59:	cmp    al,0x76
  407c5b:	jnp    0x407bf7
  407c5d:	fs loop 0x407c58
  407c60:	rcr    ebp,0xbd
  407c63:	inc    BYTE PTR [esi]
  407c65:	or     DWORD PTR [eax],edx
  407c67:	adc    cx,bx
  407c6a:	dec    edx
  407c6b:	xchg   ecx,eax
  407c6c:	stos   DWORD PTR es:[edi],eax
  407c6d:	(bad)  
  407c6e:	sbb    DWORD PTR [ebx],ebp
  407c70:	fdivrp st(2),st
  407c72:	icebp  
  407c73:	into   
  407c74:	bound  edi,QWORD PTR [ebp+0x14]
  407c77:	mov    bh,0xb3
  407c79:	into   
  407c7a:	sbb    ch,0x90
  407c7d:	push   es
  407c7e:	and    edx,DWORD PTR [ecx-0x7c3356a8]
  407c84:	fcomp  QWORD PTR [eax-0x5b4654b5]
  407c8a:	or     al,BYTE PTR [ebx+ebx*2+0x39]
  407c8e:	sbb    al,0xca
  407c90:	xor    edi,0x4e
  407c93:	xor    DWORD PTR [ecx+0x5],eax
  407c96:	data16 icebp 
  407c98:	jno    0x407c6c
  407c9a:	icebp  
  407c9b:	in     al,0x49
  407c9d:	aaa    
  407c9e:	mov    edi,0xddad342b
  407ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca4:	adc    eax,0x8bcfb24e
  407ca9:	mov    edx,0x88d87858
  407cae:	retf   
  407caf:	pushf  
  407cb0:	sub    BYTE PTR [ecx],ah
  407cb2:	xlat   BYTE PTR ds:[ebx]
  407cb3:	int3   
  407cb4:	push   esi
  407cb5:	fstp   QWORD PTR [esi-0x2ae015b5]
  407cbb:	cmp    DWORD PTR ds:0x643b0300,edi
  407cc1:	shr    BYTE PTR [ebx-0x42],1
  407cc4:	adc    al,0xa8
  407cc6:	cli    
  407cc7:	fs push 0xfc952411
  407ccd:	mov    ax,0x8d2b
  407cd1:	jmp    0x7dfb:0x143f147f
  407cd8:	push   ds
  407cd9:	fidivr WORD PTR [eax+edi*4-0x6f]
  407cdd:	fdivr  st(5),st
  407cdf:	or     bh,BYTE PTR [ecx]
  407ce1:	popa   
  407ce2:	aaa    
  407ce3:	std    
  407ce4:	sbb    edi,DWORD PTR [edx]
  407ce6:	sub    eax,0xd8789c12
  407ceb:	pop    esi
  407cec:	and    ebx,ecx
  407cee:	sahf   
  407cef:	(bad)  
  407cf0:	jg     0x407ca7
  407cf2:	mov    esp,0x9bbe83a6
  407cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf8:	dec    eax
  407cf9:	jae    0x407d30
  407cfb:	loope  0x407c96
  407cfd:	pop    ecx
  407cfe:	pop    esp
  407cff:	sbb    eax,DWORD PTR [esi+0x67]
  407d02:	fiadd  DWORD PTR [ebp+0x64]
  407d05:	push   0x4eafd660
  407d0a:	mov    ecx,0x7c645d23
  407d0f:	xchg   ecx,eax
  407d10:	test   eax,0x4f20fb39
  407d15:	dec    edx
  407d16:	test   al,0x3b
  407d18:	outs   dx,DWORD PTR ds:[esi]
  407d19:	or     DWORD PTR [ecx],esp
  407d1b:	cmp    dl,BYTE PTR [ecx+0x4f]
  407d1e:	jg     0x407d4f
  407d20:	cli    
  407d21:	in     al,dx
  407d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d23:	and    DWORD PTR [edx],edi
  407d25:	jl     0x407cae
  407d27:	sub    edi,DWORD PTR [ecx+0xf]
  407d2a:	addr16 inc ch
  407d2d:	imul   eax,DWORD PTR [edi+0xa],0x48b5d416
  407d34:	cmp    ebx,DWORD PTR [edx+esi*1+0xb]
  407d38:	imul   eax,DWORD PTR [edi-0x7c],0xe42abee5
  407d3f:	out    dx,eax
  407d40:	mov    eax,ds:0xd84fa01e
  407d45:	arpl   cx,si
  407d47:	aas    
  407d48:	loope  0x407d25
  407d4a:	mov    eax,ds:0xc7296d65
  407d4f:	ins    DWORD PTR es:[edi],dx
  407d50:	iret   
  407d51:	hlt    
  407d52:	push   eax
  407d53:	dec    ecx
  407d54:	xor    al,0x3a
  407d56:	leave  
  407d57:	add    dl,ah
  407d59:	fiadd  DWORD PTR [esi-0x6]
  407d5c:	pop    ebx
  407d5d:	bound  ebx,QWORD PTR [eax+edi*4]
  407d60:	shl    DWORD PTR [edx],1
  407d62:	(bad)  
  407d63:	aas    
  407d64:	daa    
  407d65:	and    ebx,DWORD PTR [ebp-0x2abc7232]
  407d6b:	xor    BYTE PTR [edx-0xdeb8d8d],0xa4
  407d72:	in     eax,dx
  407d73:	daa    
  407d74:	ror    BYTE PTR ds:0x400966a3,0x4d
  407d7b:	cli    
  407d7c:	pop    edi
  407d7d:	mov    al,0xa8
  407d7f:	dec    eax
  407d80:	mov    al,ds:0xd6104fff
  407d85:	pop    edx
  407d86:	and    al,0x6f
  407d88:	popa   
  407d89:	loop   0x407d48
  407d8b:	imul   esi,DWORD PTR [eax+edi*4-0x45eb87e],0xffffffb1
  407d93:	pop    ebp
  407d94:	dec    edx
  407d95:	lds    edx,FWORD PTR [edi]
  407d97:	jp     0x407db7
  407d99:	cmp    eax,0x64020d5c
  407d9e:	add    eax,0x458b2110
  407da3:	add    ch,ch
  407da5:	adc    eax,0x216b6de5
  407daa:	das    
  407dab:	inc    edi
  407dac:	sbb    ebp,0xa7737bc
  407db2:	push   ecx
  407db3:	cmp    eax,0xd4c3d09a
  407db8:	push   0x13c3ca03
  407dbd:	psllq  mm4,QWORD PTR [edx]
  407dc0:	mov    al,BYTE PTR [edx-0x5f]
  407dc3:	je     0x407d55
  407dc5:	jne    0x407dbc
  407dc7:	inc    esi
  407dc8:	jnp    0x407dce
  407dca:	das    
  407dcb:	add    BYTE PTR ds:0xf6a5548a,0xc
  407dd2:	lea    ecx,[eax+eax*4-0x2c722200]
  407dd9:	sub    eax,ebp
  407ddb:	in     eax,dx
  407ddc:	push   esp
  407ddd:	scas   eax,DWORD PTR es:[edi]
  407dde:	sbb    al,0xdf
  407de0:	xlat   BYTE PTR ds:[ebx]
  407de1:	scas   eax,DWORD PTR es:[edi]
  407de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de3:	es ins DWORD PTR es:[edi],dx
  407de5:	push   esp
  407de6:	mov    ebp,0x2b970d01
  407deb:	xor    ebx,edi
  407ded:	push   0xffffffd8
  407def:	pusha  
  407df0:	mov    ch,0xd8
  407df2:	push   eax
  407df3:	jnp    0x407dbd
  407df5:	and    ch,bl
  407df7:	int    0x7d
  407df9:	push   edx
  407dfa:	mov    eax,0x193bbf9e
  407dff:	jg     0x407dd5
  407e01:	jae    0x407db9
  407e03:	jae    0x407e71
  407e05:	jmp    0x8a66eccd
  407e0a:	mov    bl,0xcc
  407e0c:	or     BYTE PTR cs:[edx],ch
  407e0f:	and    edi,DWORD PTR [esi+0x71]
  407e12:	adc    BYTE PTR [ecx-0x50],ch
  407e15:	js     0x407e15
  407e17:	in     eax,0xf
  407e19:	push   0xffffffe2
  407e1b:	xchg   esp,eax
  407e1c:	jp     0x407e5c
  407e1e:	push   ebp
  407e1f:	daa    
  407e20:	add    DWORD PTR [edx+0x7c],0xc1256da1
  407e27:	sub    cl,BYTE PTR [ecx+0xc]
  407e2a:	jnp    0x407df9
  407e2c:	ds sbb al,0x85
  407e2f:	or     DWORD PTR [ebx-0x6f2319b9],edi
  407e35:	pop    ebp
  407e36:	jnp    0x407e3f
  407e38:	inc    edx
  407e39:	out    0xc1,al
  407e3b:	xchg   esp,eax
  407e3c:	add    bh,0xfb
  407e3f:	test   BYTE PTR [ecx+0x53],bh
  407e42:	add    al,0x4b
  407e44:	mov    ebp,0xbba94ef4
  407e49:	xchg   edi,eax
  407e4a:	lahf   
  407e4b:	mov    BYTE PTR [esi+eax*1-0x9e6fa69],cl
  407e52:	dec    edx
  407e53:	fisub  WORD PTR [ebx+0x2c]
  407e56:	push   edx
  407e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e58:	sbb    DWORD PTR [edi],esp
  407e5a:	mov    ebx,0x9d5b683
  407e5f:	ins    BYTE PTR es:[edi],dx
  407e60:	outs   dx,BYTE PTR ds:[esi]
  407e61:	jecxz  0x407e53
  407e63:	js     0x407dea
  407e65:	mov    bh,0xdf
  407e67:	ret    
  407e68:	adc    DWORD PTR [ebx+0x72],edx
  407e6b:	push   ebp
  407e6c:	sbb    al,0xff
  407e6e:	xchg   esp,eax
  407e6f:	jmp    0xb017:0xede30594
  407e76:	push   ss
  407e77:	add    ebx,DWORD PTR [edi-0x8]
  407e7a:	test   DWORD PTR [eax],0xdd0255db
  407e80:	ins    DWORD PTR es:[edi],dx
  407e81:	icebp  
  407e82:	xchg   edi,eax
  407e83:	jl     0x407ea6
  407e85:	push   cs
  407e86:	retf   0xc8d6
  407e89:	cs cdq 
  407e8b:	jns    0x407f09
  407e8d:	jmp    0x407eed
  407e8f:	fwait
  407e90:	or     bl,BYTE PTR [esi+0x3d9724f5]
  407e96:	loop   0x407ec8
  407e98:	jne    0x407f0c
  407e9a:	jns    0x407f0e
  407e9c:	rol    DWORD PTR [esi+0x1f1524fc],0xa9
  407ea3:	jo     0x407e53
  407ea5:	push   edi
  407ea6:	and    edi,DWORD PTR [esi]
  407ea8:	in     eax,dx
  407ea9:	or     ebx,DWORD PTR [ebx+ebx*8+0x26f1efe5]
  407eb0:	retf   0x8d7d
  407eb3:	mov    edi,0x6caa356d
  407eb8:	mov    WORD PTR [eax],gs
  407eba:	or     edi,DWORD PTR [edx+edi*2]
  407ebd:	adc    BYTE PTR ds:0x5a1b4134,cl
  407ec3:	adc    al,dl
  407ec5:	push   esp
  407ec6:	cwde   
  407ec7:	loopne 0x407e58
  407ec9:	jecxz  0x407f26
  407ecb:	sbb    ebp,DWORD PTR [eax+eax*2-0x3d]
  407ecf:	pop    esi
  407ed0:	movzx  edi,BYTE PTR [edi]
  407ed3:	lds    esi,FWORD PTR [edi-0x5a4ff054]
  407ed9:	jle    0x407e5f
  407edb:	popa   
  407edc:	bound  ebp,QWORD PTR [ebx-0x33]
  407edf:	fimul  WORD PTR [ebx+0x48]
  407ee2:	or     esp,DWORD PTR [edi+0x15]
  407ee5:	push   es
  407ee6:	and    BYTE PTR [edi],ah
  407ee8:	sub    ch,BYTE PTR [ebx]
  407eea:	aad    0xe6
  407eec:	retf   
  407eed:	jns    0x407f6d
  407eef:	adc    al,0x5a
  407ef1:	lods   al,BYTE PTR ds:[esi]
  407ef2:	jnp    0x407f33
  407ef4:	ret    
  407ef5:	ds inc esi
  407ef7:	cs pop ecx
  407ef9:	ret    
  407efa:	adc    eax,0x760b7de8
  407eff:	inc    ecx
  407f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f01:	retf   0x659f
  407f04:	mov    ecx,DWORD PTR [ecx+ebp*1+0x27]
  407f08:	test   eax,0x9a50df22
  407f0d:	add    BYTE PTR [edx],dh
  407f0f:	jo     0x407f76
  407f11:	cmp    ah,bh
  407f13:	push   0x32
  407f15:	push   ebx
  407f16:	out    dx,al
  407f17:	cmp    al,0x43
  407f19:	bound  edx,QWORD PTR [ecx+0x3e66c2e1]
  407f1f:	adc    al,0x14
  407f21:	push   0xa3076ba8
  407f26:	push   ecx
  407f27:	ja     0x407f51
  407f29:	sub    al,0x4b
  407f2b:	fs iret 
  407f2d:	mov    ch,0xd2
  407f2f:	cmp    dl,dl
  407f31:	fistp  WORD PTR [ebp+ebx*2+0x7006195]
  407f38:	and    al,bl
  407f3a:	pop    esp
  407f3b:	gs mov cl,0x70
  407f3e:	pop    esi
  407f3f:	pop    edx
  407f40:	mov    edx,0x28934673
  407f45:	inc    ebp
  407f46:	retf   
  407f47:	fist   DWORD PTR [ebx-0x3b399e52]
  407f4d:	mov    ecx,0x5569b3b0
  407f52:	repnz in al,dx
  407f54:	mov    dh,0xe3
  407f56:	dec    ebp
  407f57:	(bad)  
  407f58:	add    BYTE PTR [esi+edx*1],ah
  407f5b:	pop    eax
  407f5c:	cli    
  407f5d:	lock and dl,BYTE PTR [edx+0x36834caf]
  407f64:	in     eax,0x64
  407f66:	mov    dl,0x45
  407f68:	mov    BYTE PTR [eax+0x14b07d4c],0x59
  407f6f:	daa    
  407f70:	(bad)  
  407f72:	jl     0x407fc8
  407f74:	mov    eax,0xffd90dd3
  407f79:	loope  0x407f4d
  407f7b:	call   0x51d5:0xeb35e133
  407f82:	xchg   esp,eax
  407f83:	fsubr  st,st(0)
  407f85:	xor    DWORD PTR [esi],edi
  407f87:	mov    ah,cl
  407f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f8a:	mov    bh,0xdc
  407f8c:	sub    BYTE PTR [eax-0xd],dh
  407f8f:	adc    eax,0x7f76b15b
  407f94:	ss dec ebp
  407f96:	dec    edx
  407f97:	lahf   
  407f98:	(bad)  [ecx+0x4c]
  407f9b:	pop    ss
  407f9c:	inc    esp
  407f9d:	mov    bl,0xed
  407f9f:	sbb    esp,esp
  407fa1:	sub    edi,DWORD PTR ds:0x84a44c3e
  407fa7:	sub    ah,BYTE PTR [edi+0x14]
  407faa:	mov    ch,0x2
  407fac:	cmp    dh,BYTE PTR [ebx]
  407fae:	shl    BYTE PTR [eax+0x4b],1
  407fb1:	jns    0x407f36
  407fb3:	aad    0xd3
  407fb5:	adc    al,0x2
  407fb7:	adc    DWORD PTR [ebp-0x31af11d2],esi
  407fbd:	dec    ecx
  407fbe:	pop    ebp
  407fbf:	ds in  eax,0xf4
  407fc2:	mov    ch,0xcf
  407fc4:	xchg   edx,eax
  407fc5:	cmp    al,0x98
  407fc7:	push   es
  407fc8:	fstp   TBYTE PTR [ecx+0x49ddd815]
  407fce:	jp     0x407fae
  407fd0:	mov    edi,0x3539c2b6
  407fd5:	cs push ss
  407fd7:	test   al,0x46
  407fd9:	and    ebx,DWORD PTR [edi+0x3768d86e]
  407fdf:	inc    ecx
  407fe0:	xor    eax,0x106e5f65
  407fe5:	in     al,0xba
  407fe7:	fcomp  QWORD PTR [eax-0x2659200b]
  407fed:	sub    al,0x93
  407fef:	pop    ds
  407ff0:	fsubr  QWORD PTR [ebx]
  407ff2:	jb     0x407fa7
  407ff4:	pop    ebx
  407ff5:	test   DWORD PTR ds:0xc5f2d18b,0x54d4c205
  407fff:	fcomip st,st(0)
  408001:	sbb    DWORD PTR [edx],esp
  408003:	mov    ch,0xfd
  408005:	mov    dl,0x7d
  408007:	add    eax,ecx
  408009:	jg     0x407fb1
  40800b:	cmp    edx,DWORD PTR [edx+eiz*8+0x2]
  40800f:	sbb    ebp,esi
  408011:	cmp    cl,bh
  408013:	popa   
  408014:	cmp    BYTE PTR [edx+0x1c],bh
  408017:	cmp    dh,bl
  408019:	push   es
  40801a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40801b:	adc    BYTE PTR [edx+0x347a2582],dl
  408021:	or     eax,0xb928d1d4
  408026:	push   es
  408027:	popf   
  408028:	dec    ebp
  408029:	mov    ds:0x9ca06675,eax
  40802e:	mov    esp,0xa11c1953
  408033:	inc    edi
  408034:	lds    ebx,FWORD PTR [ebx]
  408036:	xchg   BYTE PTR [ecx+0x12957fb],cl
  40803c:	cli    
  40803d:	mov    ch,0x18
  40803f:	sub    edx,0x67010460
  408045:	xchg   DWORD PTR [edi],esp
  408047:	stc    
  408048:	dec    edx
  408049:	not    BYTE PTR [edi+ecx*4]
  40804c:	dec    ebp
  40804d:	jbe    0x408004
  40804f:	mov    dl,0xef
  408051:	xchg   esp,eax
  408052:	cmp    al,0x64
  408054:	jnp    0x408001
  408056:	call   0xbde:0x2815b9e6
  40805d:	adc    eax,eax
  40805f:	or     DWORD PTR [edi+ebp*1+0x7f41ff58],0xffffffd1
  408067:	cmp    eax,0x15fb3d8d
  40806c:	xchg   edi,eax
  40806d:	jmp    0x4080c0
  40806f:	aaa    
  408070:	sbb    cl,ch
  408072:	loop   0x4080be
  408074:	pop    es
  408075:	lahf   
  408076:	fwait
  408077:	jne    0x4080c9
  408079:	push   esi
  40807a:	cmc    
  40807b:	pop    ebx
  40807c:	int3   
  40807d:	adc    dl,dl
  40807f:	mov    eax,ds:0xce5e28eb
  408084:	ins    DWORD PTR es:[edi],dx
  408085:	ja     0x408088
  408087:	shr    cl,0xa6
  40808a:	(bad)  
  40808b:	dec    ebx
  40808c:	pop    ds
  40808d:	xchg   ebp,eax
  40808e:	mov    ebx,0x52fb25c9
  408093:	xchg   edx,eax
  408094:	sti    
  408095:	push   0xffffffa1
  408097:	fs ss push esi
  40809a:	imul   esi,DWORD PTR [esi],0xf964ba24
  4080a0:	jno    0x4080c2
  4080a2:	stos   DWORD PTR es:[edi],eax
  4080a3:	mov    esp,DWORD PTR [edi]
  4080a5:	mov    ah,0x9e
  4080a7:	xchg   ecx,eax
  4080a8:	and    bl,dh
  4080aa:	push   0xea087f3b
  4080af:	outs   dx,BYTE PTR ds:[esi]
  4080b0:	lock fld QWORD PTR [eax-0x3f]
  4080b4:	(bad)  
  4080b5:	mov    edi,0x479130e4
  4080ba:	mov    fs,WORD PTR [edx-0x78409a16]
  4080c0:	xor    DWORD PTR [ebp-0x56],ebx
  4080c3:	sub    dh,0x5
  4080c6:	cmp    edi,DWORD PTR [esi-0x19]
  4080c9:	jns    0x408107
  4080cb:	aas    
  4080cc:	push   edi
  4080cd:	push   0x37
  4080cf:	leave  
  4080d0:	jecxz  0x40809a
  4080d2:	inc    ebx
  4080d3:	or     dh,dl
  4080d5:	inc    edi
  4080d6:	mov    al,ds:0x1c1efb74
  4080db:	fst    QWORD PTR [edx-0x21ac1543]
  4080e1:	lds    esi,FWORD PTR [ecx]
  4080e3:	mov    ecx,0xd01dc904
  4080e8:	or     eax,edi
  4080ea:	jl     0x4080d6
  4080ec:	jns    0x408079
  4080ee:	and    ebx,DWORD PTR [esi]
  4080f0:	sub    eax,0x2be27a37
  4080f5:	pop    edi
  4080f6:	std    
  4080f7:	pop    ds
  4080f8:	loopne 0x40812e
  4080fa:	or     dl,BYTE PTR [eax+eiz*8-0x3658a4b5]
  408101:	mov    edi,0x646df255
  408106:	inc    esi
  408107:	mov    cs,esp
  408109:	xor    ch,BYTE PTR [eax]
  40810b:	xor    eax,0x955999b0
  408110:	push   ss
  408111:	test   BYTE PTR [edi+edx*4],ah
  408114:	mul    BYTE PTR [edx+0x56]
  408117:	ins    BYTE PTR es:[edi],dx
  408118:	pop    ebp
  408119:	int    0x62
  40811b:	je     0x40818f
  40811d:	push   edx
  40811e:	jl     0x40810f
  408120:	int    0xa4
  408122:	lea    ebp,[edx-0x1048a22a]
  408128:	pop    ss
  408129:	mov    edx,0x7279b1a9
  40812e:	and    al,0x86
  408130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408131:	fcmovne st,st(1)
  408133:	popa   
  408134:	xchg   ebx,eax
  408135:	pop    eax
  408136:	ss pop ecx
  408138:	les    eax,FWORD PTR ds:0x7abf657c
  40813e:	(bad)  
  40813f:	push   esi
  408140:	in     eax,0xfb
  408142:	call   0xb29caf6f
  408147:	and    eax,0x2fa5056b
  40814c:	repz cli 
  40814e:	pop    ecx
  40814f:	jmp    0x26d724f4
  408154:	ret    
  408155:	dec    edi
  408156:	(bad)  gs:[ebp+ecx*2+0x4545419e]
  40815e:	jmp    0x40811d
  408160:	sahf   
  408161:	adc    ebp,0x48a285d6
  408167:	fs dec ecx
  408169:	sti    
  40816a:	push   ebx
  40816b:	ds (bad) 
  40816d:	cli    
  40816e:	jo     0x408184
  408170:	jmp    0x408152
  408172:	iret   
  408173:	pop    eax
  408174:	adc    esp,ebp
  408176:	pushf  
  408177:	pop    esi
  408178:	ret    
  408179:	xchg   ebp,eax
  40817a:	mov    ebp,0x2a7e9e86
  40817f:	cs jecxz 0x4081dc
  408182:	es pop es
  408184:	pop    esp
  408185:	fnstsw WORD PTR [eax+edx*2-0x16a7adbc]
  40818c:	aam    0x53
  40818e:	push   ebp
  40818f:	lea    eax,[ecx]
  408191:	sub    edi,DWORD PTR [edx+ecx*4-0x68]
  408195:	ret    
  408196:	jbe    0x40811d
  408198:	fist   DWORD PTR [esi+0x5aee44c9]
  40819e:	push   0x5a
  4081a0:	test   al,0xe7
  4081a2:	dec    eax
  4081a3:	pop    ds
  4081a4:	arpl   WORD PTR [edi],bp
  4081a6:	push   edi
  4081a7:	mov    ebx,0x5b616bcc
  4081ac:	cwde   
  4081ad:	(bad)  
  4081ae:	dec    ebx
  4081af:	(bad)  
  4081b1:	mov    ds:0xcb6a2438,al
  4081b6:	out    0x44,eax
  4081b8:	imul   esp,DWORD PTR [ebx+0x5a9f1c5a],0x2ee60151
  4081c2:	dec    eax
  4081c3:	push   cs
  4081c4:	sub    al,0xe9
  4081c6:	mov    ah,0xc9
  4081c8:	or     bl,dl
  4081ca:	rcr    DWORD PTR [ebx-0x39],cl
  4081cd:	imul   esp,DWORD PTR [ebx+0x64b3ec30],0xfffffff1
  4081d4:	mov    cl,BYTE PTR [edx+0x6e]
  4081d7:	adc    bh,BYTE PTR [edi+edi*2-0xb]
  4081db:	cs test eax,0x3793ba5a
  4081e1:	cmp    edx,esp
  4081e3:	imul   esp,eax,0x11
  4081e6:	enter  0x381b,0xc
  4081ea:	lock into 
  4081ec:	add    al,0x7f
  4081ee:	xor    esp,DWORD PTR [ebp+0x50]
  4081f1:	push   ebp
  4081f2:	fucomi st,st(2)
  4081f4:	or     al,0xbf
  4081f6:	add    DWORD PTR [edx+ebp*2-0xef1941c],ecx
  4081fd:	add    BYTE PTR [eax],cl
  4081ff:	(bad)  
  408200:	iret   
  408201:	test   al,0xc5
  408203:	cdq    
  408204:	pop    ds
  408205:	stos   BYTE PTR es:[edi],al
  408206:	xor    cl,bh
  408208:	(bad)
  40820c:	call   DWORD PTR [esi+eiz*8-0x70845c8d]
  408213:	test   al,0x8f
  408215:	pop    ss
  408216:	test   BYTE PTR [ebx+edx*2-0x1e1cbc18],dh
  40821d:	fldenv [esi+0x1ddc27d5]
  408223:	idiv   BYTE PTR [edx]
  408225:	int3   
  408226:	stos   DWORD PTR es:[edi],eax
  408227:	out    dx,al
  408228:	out    dx,al
  408229:	shl    ch,0x7b
  40822c:	push   ecx
  40822d:	xor    esp,DWORD PTR [edx+0x6d]
  408230:	add    BYTE PTR [eax],0x82
  408233:	imul   ecx,DWORD PTR [edi],0xfe8d9e93
  408239:	sub    eax,DWORD PTR [ebx+0x191dc5b2]
  40823f:	stc    
  408240:	pushf  
  408241:	ins    BYTE PTR es:[edi],dx
  408242:	out    dx,al
  408243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408244:	in     al,0xa1
  408246:	call   0x9577315c
  40824b:	add    BYTE PTR [edi],dl
  40824d:	mov    al,0xe1
  40824f:	nop
  408250:	xor    al,0x3a
  408252:	out    0x19,al
  408254:	or     al,0xd3
  408256:	jnp    0x408223
  408258:	outs   dx,DWORD PTR ds:[esi]
  408259:	cmp    esi,DWORD PTR [eax+0x50]
  40825c:	mov    BYTE PTR [edx],bh
  40825e:	out    0x30,eax
  408260:	inc    edi
  408261:	xor    esi,DWORD PTR [esi+0x18]
  408264:	loope  0x4082d2
  408266:	hlt    
  408267:	cmp    BYTE PTR [edx-0x21e4f848],0x66
  40826e:	inc    DWORD PTR [ebp+eax*8+0x364010c2]
  408275:	popf   
  408276:	aad    0xb8
  408278:	xchg   ecx,eax
  408279:	mov    eax,0xc5a88566
  40827e:	adc    DWORD PTR [eax+0x49c0c343],edx
  408284:	pop    edx
  408285:	xor    al,0x9a
  408287:	cld    
  408288:	push   ebx
  408289:	stc    
  40828a:	adc    BYTE PTR [ebp-0x3a0301f7],ch
  408290:	inc    edx
  408291:	cmp    DWORD PTR [ebx],edx
  408293:	ror    DWORD PTR [ecx+0x34],0x11
  408297:	inc    edi
  408298:	ja     0x40824c
  40829a:	push   cs
  40829b:	fdiv   QWORD PTR [ebp-0x59]
  40829e:	xchg   DWORD PTR [edi+0xc4ff09b],esp
  4082a4:	ds jb  0x408321
  4082a7:	push   edi
  4082a8:	cmp    al,0x5c
  4082aa:	inc    esp
  4082ab:	jne    0x4082e5
  4082ad:	mov    bh,0x5d
  4082af:	or     eax,0xd4940b36
  4082b4:	mov    WORD PTR [ebp+0x66e814cf],ss
  4082ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082bb:	jnp    0x4082a0
  4082bd:	and    al,0xb3
  4082bf:	out    dx,al
  4082c0:	stc    
  4082c1:	push   0xc77e3cdd
  4082c6:	inc    ebp
  4082c7:	enter  0x8fea,0xff
  4082cb:	ds pushaw 
  4082ce:	popa   
  4082cf:	ins    DWORD PTR es:[edi],dx
  4082d0:	cmp    eax,0xd481a22a
  4082d5:	mov    fs,WORD PTR [edi+0x27]
  4082d8:	jnp    0x4082ad
  4082da:	mov    bh,BYTE PTR [eax]
  4082dc:	repz (bad)
  4082df:	sbb    DWORD PTR ds:0x2af783b4,ecx
  4082e5:	loop   0x408307
  4082e7:	push   edx
  4082e8:	mov    eax,0x57fa7c93
  4082ed:	push   0xfccbd4a7
  4082f2:	adc    eax,0xfc37a01
  4082f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f8:	aaa    
  4082f9:	stos   DWORD PTR es:[edi],eax
  4082fa:	mov    ebp,0x530c7351
  4082ff:	add    bl,BYTE PTR [ecx+eax*2]
  408302:	imul   BYTE PTR ds:0x7cbac1cb
  408308:	outs   dx,DWORD PTR ds:[esi]
  408309:	and    BYTE PTR [ebx+eiz*4],0x53
  40830d:	mov    cl,0x60
  40830f:	loop   0x40832a
  408311:	jne    0x4082a2
  408313:	lods   al,BYTE PTR ds:[esi]
  408314:	fwait
  408315:	ret    
  408316:	or     al,0x65
  408318:	aad    0x4e
  40831a:	repnz sub eax,DWORD PTR [edi-0x5cf4bdd2]
  408321:	lds    ecx,FWORD PTR [edx-0x7c]
  408324:	inc    eax
  408325:	call   0x94f5:0x78b49483
  40832c:	xchg   esi,eax
  40832d:	(bad)  
  40832e:	pop    ss
  40832f:	xor    DWORD PTR [edx-0x3b],edi
  408332:	xacquire xchg DWORD PTR [edi],esi
  408335:	push   ecx
  408336:	(bad)  
  408337:	dec    edx
  408338:	pop    ds
  408339:	ds (bad) 
  40833b:	mov    edx,0xedc8fd8f
  408340:	dec    ebp
  408341:	push   es
  408342:	out    dx,al
  408343:	sbb    DWORD PTR [edi+0x0],esp
  408346:	popa   
  408347:	int3   
  408348:	jne    0x4082e1
  40834a:	pop    eax
  40834b:	add    ecx,DWORD PTR [esp+ecx*1-0x17]
  40834f:	and    DWORD PTR ds:0x9a14b454,0xffffffa9
  408356:	scas   al,BYTE PTR es:[edi]
  408357:	or     ebx,DWORD PTR [eax-0x57]
  40835a:	test   DWORD PTR [ebx],edx
  40835c:	jle    0x408321
  40835e:	sahf   
  40835f:	mov    bl,0xdd
  408361:	pop    ebx
  408362:	leave  
  408363:	adc    ebx,DWORD PTR [edi-0x76]
  408366:	out    dx,al
  408367:	popf   
  408368:	dec    edi
  408369:	repz out dx,al
  40836b:	mov    ah,0xea
  40836d:	mov    dl,0x7c
  40836f:	inc    BYTE PTR [eax+eax*4+0x13ac5ff4]
  408376:	xchg   edx,eax
  408377:	repnz mov BYTE PTR [ebx-0x513a1d68],dh
  40837e:	popf   
  40837f:	add    DWORD PTR [edi+edx*4],0x1710a5a4
  408386:	daa    
  408387:	mov    edi,0x36b24de0
  40838c:	stos   DWORD PTR es:[edi],eax
  40838d:	cdq    
  40838e:	lahf   
  40838f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408390:	pushf  
  408391:	stc    
  408392:	sub    esp,ebp
  408394:	data16 or BYTE PTR [ebp+0x2a],bl
  408398:	shl    DWORD PTR [edx+eax*4-0x3a],1
  40839c:	xchg   edi,eax
  40839d:	je     0x408401
  40839f:	mov    ecx,0x4541a9b7
  4083a4:	adc    esp,eax
  4083a6:	add    ebp,ebp
  4083a8:	js     0x40837d
  4083aa:	out    dx,eax
  4083ab:	loop   0x40836e
  4083ad:	push   esp
  4083ae:	mov    bh,0x3e
  4083b0:	mov    ebp,eax
  4083b2:	push   edi
  4083b3:	inc    ebx
  4083b4:	mov    gs,WORD PTR [edi+0x7d]
  4083b7:	mov    ebx,0x8a023c8d
  4083bc:	mov    ch,0xe6
  4083be:	sub    al,0x8e
  4083c0:	repz out 0xe3,al
  4083c3:	rol    BYTE PTR [edx],1
  4083c5:	xor    BYTE PTR ds:0x37a88588,bh
  4083cb:	mov    esi,0xd80e3593
  4083d0:	and    BYTE PTR [edi+esi*8-0x57],0x11
  4083d5:	rcr    DWORD PTR [edx],0xa2
  4083d8:	dec    ecx
  4083d9:	or     eax,0x360ba6ff
  4083de:	in     eax,dx
  4083df:	test   eax,esp
  4083e1:	mov    dl,0xc3
  4083e3:	sub    eax,0xc412f63d
  4083e8:	mov    ebp,0xd06759f3
  4083ed:	adc    BYTE PTR [ecx-0x4c],0xa6
  4083f1:	sar    edx,cl
  4083f3:	and    BYTE PTR [edi],dl
  4083f5:	iret   
  4083f6:	xor    ah,dh
  4083f8:	shl    dl,0x19
  4083fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083fc:	test   DWORD PTR [ebp-0x4870262a],0x5823d68c
  408406:	dec    edx
  408407:	mov    eax,DWORD PTR ss:[ebp-0x61e1f8d0]
  40840e:	jl     0x408487
  408410:	pop    ebx
  408411:	push   ds
  408412:	xor    eax,0x8c08a16
  408417:	popf   
  408418:	pop    ecx
  408419:	std    
  40841a:	jnp    0x40842e
  40841c:	or     DWORD PTR [esi],0x87775bbe
  408422:	jns    0x408442
  408424:	mov    ecx,0xa3396019
  408429:	test   BYTE PTR [edi+0x27],cl
  40842c:	pop    ss
  40842d:	es aaa 
  40842f:	sub    al,0xd7
  408431:	or     dl,dl
  408433:	jge    0x40849b
  408435:	add    BYTE PTR [edi-0x29],bl
  408438:	add    al,0x16
  40843a:	std    
  40843b:	add    DWORD PTR [edx-0x45956c40],0xffffffd9
  408442:	push   ebp
  408443:	push   edi
  408444:	out    0xfb,al
  408446:	out    dx,eax
  408447:	mov    esi,es
  408449:	mov    ecx,0x5d0408b8
  40844e:	cdq    
  40844f:	xchg   DWORD PTR [esi],esi
  408451:	sub    al,0xe5
  408453:	fwait
  408454:	mov    edi,0x36bbb6d2
  408459:	(bad)  
  40845a:	lahf   
  40845b:	aas    
  40845c:	nop
  40845d:	ret    0x280a
  408460:	(bad)  
  408461:	dec    DWORD PTR [ebx+0x488f85d]
  408467:	sbb    cl,BYTE PTR [ebx+0x558bc045]
  40846d:	fdiv   DWORD PTR [ebx]
  40846f:	(bad)  
  408470:	xor    edx,esi
  408472:	add    eax,edi
  408474:	add    edx,edi
  408476:	imul   eax,edx
  408479:	add    eax,DWORD PTR [ebp-0xc]
  40847c:	mov    DWORD PTR [ebp-0xc],eax
  40847f:	mov    eax,DWORD PTR [ebp-0xc]
  408482:	mov    edx,DWORD PTR [ebp-0x18]
  408485:	cmp    edx,eax
  408487:	jb     0x403cec
  40848d:	mov    eax,DWORD PTR [ebp-0x28]
  408490:	mov    edx,DWORD PTR [ebp-0x18]
  408493:	xor    eax,esi
  408495:	add    eax,edi
  408497:	imul   eax,edx
  40849a:	mov    edx,DWORD PTR [ebp-0x1c]
  40849d:	xor    edx,esi
  40849f:	add    edx,edi
  4084a1:	or     eax,edx
  4084a3:	mov    edx,DWORD PTR [ebp-0x20]
  4084a6:	xor    edx,esi
  4084a8:	add    eax,edx
  4084aa:	mov    edx,DWORD PTR [ebp-0x20]
  4084ad:	xor    edx,esi
  4084af:	add    eax,edx
  4084b1:	mov    edx,DWORD PTR [ebp-0x10]
  4084b4:	lea    eax,[eax+edx*1+0x64e5f0]
  4084bb:	jmp    0x4084cf
  4084c0:	mov    eax,DWORD PTR [ebp-0x20]
  4084c3:	mov    edx,DWORD PTR [ebp-0x10]
  4084c6:	xor    eax,esi
  4084c8:	lea    eax,[eax+edx*1+0x3272f8]
  4084cf:	mov    DWORD PTR [ebp-0x10],eax
  4084d2:	jmp    0x403c39
  4084d7:	mov    ebx,DWORD PTR [ebp-0x3c]
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	lea    ecx,[ecx+eax*1+0x3272f8]
  4084e6:	lea    eax,[ecx-0x3272f8]
  4084ec:	xor    eax,esi
  4084ee:	cmp    eax,0xf89c95b9
  4084f3:	jne    0x403bdd
  4084f9:	dec    DWORD PTR [ebp-0x34]
  4084fc:	jne    0x403bd1
  408502:	mov    eax,DWORD PTR [ebp+0x8]
  408505:	mov    ecx,DWORD PTR [ebp+0xc]
  408508:	mov    edx,DWORD PTR [ebp+0x8]
  40850b:	xor    ecx,esi
  40850d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f8]
  408514:	xor    eax,esi
  408516:	mov    al,BYTE PTR [eax+ebx*1+0x3272f8]
  40851d:	xor    edx,esi
  40851f:	mov    BYTE PTR [edx+ebx*1+0x3272f8],cl
  408526:	mov    ecx,DWORD PTR [ebp+0xc]
  408529:	xor    ecx,esi
  40852b:	mov    BYTE PTR [ecx+ebx*1+0x3272f8],al
  408532:	mov    eax,DWORD PTR [ebp+0xc]
  408535:	xor    eax,esi
  408537:	add    eax,edi
  408539:	pop    edi
  40853a:	pop    esi
  40853b:	pop    ebx
  40853c:	leave  
  40853d:	ret    0x8
  408540:	sbb    DWORD PTR ds:0x428ec1,0x6a44
  40854a:	xor    eax,eax
  40854c:	ret    
  40854d:	push   ebp
  40854e:	mov    ebp,esp
  408550:	sub    esp,0x38
  408553:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40855a:	adc    DWORD PTR ds:0x428ead,0x214
  408564:	push   ebx
  408565:	sbb    DWORD PTR ds:0x428e39,0x495a
  40856f:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  408576:	add    DWORD PTR ds:0x428ea9,0x428e91
  408580:	mov    eax,DWORD PTR [ebp-0x4]
  408583:	sub    DWORD PTR ds:0x428ea5,0x68fd
  40858d:	push   esi
  40858e:	sub    DWORD PTR ds:0x428e6d,ebx
  408594:	mov    esi,0x75108b1
  408599:	xor    eax,esi
  40859b:	adc    DWORD PTR ds:0x428e95,0x428e2d
  4085a5:	push   edi
  4085a6:	mov    edi,0x3272f8
  4085ab:	sub    DWORD PTR ds:0x428ecd,0x5e85
  4085b5:	add    eax,edi
  4085b7:	sub    DWORD PTR ds:0x428eb5,0x428e59
  4085c1:	mov    DWORD PTR [ebp-0x1c],eax
  4085c4:	mov    eax,DWORD PTR [ebp+0x14]
  4085c7:	test   eax,eax
  4085c9:	je     0x408625
  4085cf:	and    DWORD PTR ds:0x428e41,0x0
  4085d9:	mov    eax,ds:0x428e41
  4085de:	inc    eax
  4085df:	mov    ds:0x428e41,eax
  4085e4:	cmp    DWORD PTR ds:0x428e41,0x1c
  4085eb:	jl     0x408613
  4085f1:	jmp    0x408606
  4085f6:	push   0x428073
  4085fb:	push   0x400000
  408600:	call   DWORD PTR ds:0x42ca24
  408606:	cmp    DWORD PTR ds:0x428e41,0x13
  40860d:	jb     0x4085d9
  408613:	mov    eax,DWORD PTR [ebp+0x14]
  408616:	sbb    DWORD PTR ds:0x428e25,0x208f
  408620:	mov    eax,DWORD PTR [eax]
  408622:	mov    DWORD PTR [ebp-0x1c],eax
  408625:	and    DWORD PTR ds:0x428e4d,edx
  40862b:	mov    eax,DWORD PTR [ebp-0x4]
  40862e:	xor    eax,esi
  408630:	add    eax,edi
  408632:	movzx  ebx,BYTE PTR ds:0x428e6d
  408639:	sub    DWORD PTR ds:0x428eb5,ebx
  40863f:	mov    DWORD PTR [ebp-0x8],eax
  408642:	mov    ebx,DWORD PTR ds:0x428e45
  408648:	sub    DWORD PTR ds:0x428ead,ebx
  40864e:	mov    eax,DWORD PTR [ebp-0xc]
  408651:	xor    eax,esi
  408653:	or     DWORD PTR ds:0x428e25,0x7ae1
  40865d:	add    eax,edi
  40865f:	mov    DWORD PTR [ebp-0x24],eax
  408662:	mov    DWORD PTR ds:0x428eb5,0x1d
  40866c:	cmp    DWORD PTR ds:0x428eb5,0x0
  408673:	je     0x4086a6
  408679:	cmp    DWORD PTR ds:0x428eb5,0x22
  408680:	jb     0x4086a6
  408686:	jmp    0x408696
  40868b:	push   0x35a8
  408690:	call   DWORD PTR ds:0x42ca28
  408696:	mov    eax,ds:0x428eb5
  40869b:	dec    eax
  40869c:	mov    ds:0x428eb5,eax
  4086a1:	jmp    0x40866c
  4086a6:	mov    eax,DWORD PTR [ebp-0x4]
  4086a9:	xor    eax,esi
  4086ab:	sub    ebx,DWORD PTR ds:0x428e35
  4086b1:	add    eax,edi
  4086b3:	mov    DWORD PTR [ebp-0x30],eax
  4086b6:	sbb    eax,0x56d4
  4086bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4086be:	sub    DWORD PTR ds:0x428e55,edi
  4086c4:	xor    ebx,esi
  4086c6:	mov    DWORD PTR ds:0x428e8d,0xdd6
  4086d0:	add    ebx,edi
  4086d2:	mov    eax,DWORD PTR [ebp-0x24]
  4086d5:	sub    eax,edi
  4086d7:	xor    DWORD PTR ds:0x428e2d,0x506a
  4086e1:	lea    ecx,[ebx-0x3272f8]
  4086e7:	or     DWORD PTR ds:0x428e31,0x428e75
  4086f1:	xor    eax,esi
  4086f3:	or     DWORD PTR ds:0x428e41,0x428e89
  4086fd:	xor    ecx,esi
  4086ff:	mov    DWORD PTR ds:0x428e71,0xf9c
  408709:	cmp    ecx,eax
  40870b:	je     0x408990
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	add    DWORD PTR ds:0x428e99,0x428e29
  40871e:	xor    eax,esi
  408720:	sbb    DWORD PTR ds:0x428ead,0x428e4d
  40872a:	add    eax,edi
  40872c:	cmp    ebx,eax
  40872e:	jne    0x408947
  408734:	push   DWORD PTR [ebp+0x8]
  408737:	call   0x423f19
  40873c:	and    DWORD PTR ds:0x428ea1,0x3c45
  408746:	mov    DWORD PTR [ebp-0x14],eax
  408749:	and    DWORD PTR ds:0x428e89,0x0
  408753:	mov    eax,ds:0x428e89
  408758:	inc    eax
  408759:	mov    ds:0x428e89,eax
  40875e:	cmp    DWORD PTR ds:0x428e89,0x23
  408765:	ja     0x408786
  40876b:	jmp    0x408779
  408770:	push   DWORD PTR [ebp-0x24]
  408773:	call   DWORD PTR ds:0x42ca2c
  408779:	cmp    DWORD PTR ds:0x428e89,0x15
  408780:	jb     0x408753
  408786:	mov    eax,DWORD PTR [ebp-0x4]
  408789:	mov    ecx,DWORD PTR [ebp-0x14]
  40878c:	sbb    DWORD PTR ds:0x428e71,0x428e81
  408796:	xor    eax,esi
  408798:	and    DWORD PTR ds:0x428e4d,0x12fb
  4087a2:	add    eax,edi
  4087a4:	cmp    ecx,eax
  4087a6:	mov    DWORD PTR ds:0x428e69,0x743f
  4087b0:	je     0x408a8e
  4087b6:	xor    DWORD PTR ds:0x428e7d,0x5052
  4087c0:	push   DWORD PTR [ebp-0x14]
  4087c3:	push   DWORD PTR [ebp+0x8]
  4087c6:	xor    DWORD PTR ds:0x428ea5,0x6996
  4087d0:	call   0x423fff
  4087d5:	mov    DWORD PTR [ebp-0x14],eax
  4087d8:	mov    eax,DWORD PTR [ebp-0x4]
  4087db:	sub    DWORD PTR ds:0x428e4d,edi
  4087e1:	mov    ecx,DWORD PTR [ebp-0x14]
  4087e4:	sbb    DWORD PTR ds:0x428e35,0x169a
  4087ee:	xor    eax,esi
  4087f0:	sbb    DWORD PTR ds:0x428e31,0x428ebd
  4087fa:	add    eax,edi
  4087fc:	mov    DWORD PTR ds:0x428e99,0xb5
  408806:	cmp    ecx,eax
  408808:	mov    DWORD PTR ds:0x428ebd,0x5868
  408812:	je     0x408a8e
  408818:	mov    DWORD PTR ds:0x428e41,0x51a7
  408822:	mov    eax,DWORD PTR [ebp-0x14]
  408825:	mov    eax,DWORD PTR [eax+0x18]
  408828:	adc    ecx,DWORD PTR ds:0x428e71
  40882e:	mov    DWORD PTR [ebp-0x24],eax
  408831:	and    DWORD PTR ds:0x428e95,0x0
  40883b:	jmp    0x40884d
  408840:	mov    ecx,DWORD PTR ds:0x428e95
  408846:	inc    ecx
  408847:	mov    DWORD PTR ds:0x428e95,ecx
  40884d:	cmp    DWORD PTR ds:0x428e95,0x1a
  408854:	jae    0x408896
  40885a:	cmp    DWORD PTR ds:0x428e95,0xd
  408861:	jge    0x408896
  408867:	jmp    0x408877
  40886c:	push   0x428043
  408871:	call   DWORD PTR ds:0x42ca30
  408877:	cmp    DWORD PTR ds:0x428e95,0xc
  40887e:	jne    0x408891
  408884:	mov    ecx,DWORD PTR ds:0x428e95
  40888a:	inc    ecx
  40888b:	mov    DWORD PTR ds:0x428e95,ecx
  408891:	jmp    0x408840
  408896:	mov    eax,DWORD PTR [ebp-0x14]
  408899:	dec    DWORD PTR ds:0x428ea9
  40889f:	mov    ecx,DWORD PTR [ebp+0x8]
  4088a2:	add    DWORD PTR ds:0x428e71,0x6a43
  4088ac:	add    ecx,DWORD PTR [eax+0x20]
  4088af:	mov    DWORD PTR ds:0x428e95,0x1e
  4088b9:	cmp    DWORD PTR ds:0x428e95,0x0
  4088c0:	je     0x40890b
  4088c6:	cmp    DWORD PTR ds:0x428e95,0xd
  4088cd:	jl     0x40890b
  4088d3:	jmp    0x4088e3
  4088d8:	push   0x635d
  4088dd:	call   DWORD PTR ds:0x42ca38
  4088e3:	cmp    DWORD PTR ds:0x428e95,0xe
  4088ea:	jne    0x4088fb
  4088f0:	mov    eax,ds:0x428e95
  4088f5:	dec    eax
  4088f6:	mov    ds:0x428e95,eax
  4088fb:	mov    eax,ds:0x428e95
  408900:	dec    eax
  408901:	mov    ds:0x428e95,eax
  408906:	jmp    0x4088b9
  40890b:	mov    DWORD PTR [ebp-0x2c],ecx
  40890e:	mov    eax,DWORD PTR [ebp-0x14]
  408911:	mov    ecx,DWORD PTR [ebp+0x8]
  408914:	add    DWORD PTR ds:0x428e75,0x428ed1
  40891e:	add    ecx,DWORD PTR [eax+0x24]
  408921:	or     DWORD PTR ds:0x428e3d,edi
  408927:	mov    DWORD PTR [ebp-0x34],ecx
  40892a:	sbb    ecx,ecx
  40892c:	mov    eax,DWORD PTR [ebp-0x14]
  40892f:	mov    ecx,DWORD PTR [ebp+0x8]
  408932:	add    ecx,DWORD PTR [eax+0x1c]
  408935:	mov    DWORD PTR ds:0x428e9d,0x2455
  40893f:	mov    DWORD PTR [ebp-0x14],ecx
  408942:	jmp    0x408a15
  408947:	add    eax,DWORD PTR ds:0x428e65
  40894d:	mov    eax,DWORD PTR [ebp-0x2c]
  408950:	mov    ecx,DWORD PTR [ebp+0x8]
  408953:	add    ecx,DWORD PTR [eax+ebx*4]
  408956:	mov    DWORD PTR [ebp-0x28],ecx
  408959:	mov    ecx,DWORD PTR ds:0x428ea5
  40895f:	and    DWORD PTR ds:0x428e31,ecx
  408965:	mov    eax,DWORD PTR [ebp-0x4]
  408968:	mov    ecx,DWORD PTR [ebp-0x28]
  40896b:	xor    eax,esi
  40896d:	sub    DWORD PTR ds:0x428ebd,0x6f28
  408977:	add    eax,edi
  408979:	cmp    ecx,eax
  40897b:	mov    DWORD PTR ds:0x428ea9,0x5189
  408985:	je     0x408a15
  40898b:	jmp    0x4089f2
  408990:	mov    eax,DWORD PTR [ebp-0x4]
  408993:	and    ecx,DWORD PTR ds:0x428e65
  408999:	mov    ecx,DWORD PTR [ebp-0x8]
  40899c:	xor    eax,esi
  40899e:	dec    DWORD PTR ds:0x428e8d
  4089a4:	add    eax,edi
  4089a6:	mov    DWORD PTR ds:0x428e99,0x7af8
  4089b0:	cmp    ecx,eax
  4089b2:	mov    eax,DWORD PTR [ebp-0x4]
  4089b5:	mov    DWORD PTR ds:0x428e4d,0x614e
  4089bf:	je     0x408a91
  4089c5:	and    DWORD PTR ds:0x428e79,0x1e6e
  4089cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4089d2:	xor    eax,esi
  4089d4:	add    eax,edi
  4089d6:	mov    DWORD PTR ds:0x428ecd,0x6155
  4089e0:	cmp    ecx,eax
  4089e2:	mov    DWORD PTR ds:0x428e41,0x6810
  4089ec:	je     0x408a9a
  4089f2:	lea    eax,[ebp-0x8]
  4089f5:	xor    DWORD PTR ds:0x428ec1,0x428e25
  4089ff:	push   eax
  408a00:	push   DWORD PTR [ebp-0x28]
  408a03:	sbb    DWORD PTR ds:0x428e71,0x1b8d
  408a0d:	push   DWORD PTR [ebp+0xc]
  408a10:	call   0x40f741
  408a15:	or     DWORD PTR ds:0x428e9d,edx
  408a1b:	mov    eax,DWORD PTR [ebp-0x4]
  408a1e:	sbb    DWORD PTR ds:0x428e5d,edx
  408a24:	mov    ecx,DWORD PTR [ebp-0x8]
  408a27:	xor    DWORD PTR ds:0x428e9d,0xa39
  408a31:	xor    eax,esi
  408a33:	sbb    DWORD PTR ds:0x428e39,0x428e35
  408a3d:	add    eax,edi
  408a3f:	mov    DWORD PTR ds:0x428e3d,0x1847
  408a49:	cmp    ecx,eax
  408a4b:	mov    DWORD PTR ds:0x428e41,0x373f
  408a55:	je     0x408a7d
  408a5b:	movzx  ecx,WORD PTR ds:0x428e49
  408a62:	mov    eax,DWORD PTR [ebp-0x34]
  408a65:	movzx  eax,WORD PTR [eax+ebx*2]
  408a69:	mov    ecx,DWORD PTR ds:0x428e4d
  408a6f:	mov    ecx,DWORD PTR [ebp-0x14]
  408a72:	mov    eax,DWORD PTR [ecx+eax*4]
  408a75:	mov    DWORD PTR [ebp-0x38],eax
  408a78:	jmp    0x408990
  408a7d:	mov    eax,DWORD PTR [ebp-0xc]
  408a80:	xor    eax,esi
  408a82:	lea    ebx,[ebx+eax*1+0x3272f8]
  408a89:	jmp    0x4086d2
  408a8e:	mov    eax,DWORD PTR [ebp-0x4]
  408a91:	xor    eax,esi
  408a93:	add    eax,edi
  408a95:	jmp    0x40f699
  408a9a:	mov    eax,DWORD PTR [ebp-0x38]
  408a9d:	add    eax,DWORD PTR [ebp+0x8]
  408aa0:	mov    DWORD PTR [ebp-0x18],eax
  408aa3:	mov    eax,DWORD PTR [ebp-0x1c]
  408aa6:	test   eax,eax
  408aa8:	je     0x40d282
  408aae:	mov    DWORD PTR [ebp-0x20],0x0
  408ab5:	push   0x4
  408ab7:	xor    edx,edx
  408ab9:	pop    edx
  408aba:	add    edx,0x9
  408abd:	push   edx
  408abe:	pop    ecx
  408abf:	push   0x8
  408ac1:	dec    ecx
  408ac2:	pop    ebx
  408ac3:	dec    ebx
  408ac4:	xchg   ebx,ecx
  408ac6:	sub    ebx,ecx
  408ac8:	xchg   ebx,ecx
  408aca:	dec    ecx
  408acb:	mov    eax,DWORD PTR [ebp-0x1c]
  408ace:	imul   eax,ecx
  408ad1:	sub    esp,eax
  408ad3:	mov    DWORD PTR [ebp-0x20],esp
  408ad6:	mov    eax,DWORD PTR [ebp-0x4]
  408ad9:	xor    eax,esi
  408adb:	add    eax,edi
  408add:	jmp    0x40aebb
  408ae2:	mov    ecx,DWORD PTR [ebp-0xc]
  408ae5:	mov    eax,DWORD PTR [ebp+0x8]
  408ae8:	mov    edx,DWORD PTR [ebp+0x14]
  408aeb:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  408aef:	xor    ecx,esi
  408af1:	add    ecx,edi
  408af3:	xor    edx,edx
  408af5:	div    ecx
  408af7:	mov    ecx,DWORD PTR [ebp-0x4]
  408afa:	xor    ecx,esi
  408afc:	lea    eax,[ecx+eax*1+0x3272f8]
  408b03:	mov    ecx,DWORD PTR [ebp+0x8]
  408b06:	mov    edx,DWORD PTR [ebp-0x20]
  408b09:	jmp    0x40aea9
  408b0e:	fbstp  TBYTE PTR [ebp*1-0xe9985a5]
  408b15:	cmp    cl,dh
  408b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b18:	fnstsw WORD PTR [ecx-0x72]
  408b1b:	pop    ecx
  408b1c:	add    DWORD PTR cs:[ecx],ebp
  408b1f:	in     al,0x7b
  408b21:	jnp    0x408b21
  408b23:	sahf   
  408b24:	jnp    0x408ba1
  408b26:	sbb    cl,bl
  408b28:	call   0xd6191ccf
  408b2d:	jp     0x408ba5
  408b2f:	mov    esi,0x16df61fa
  408b34:	sub    ah,BYTE PTR [ebp+ebp*8-0x52]
  408b38:	mov    dh,0x4b
  408b3a:	lock cli 
  408b3c:	sub    BYTE PTR [esi],0x90
  408b3f:	call   0x853d:0x8d6497ca
  408b46:	fcmovne st,st(2)
  408b48:	cmp    eax,DWORD PTR [esi-0x2d]
  408b4b:	ret    
  408b4c:	sbb    ecx,DWORD PTR [edx+0x632788b2]
  408b52:	xchg   esi,eax
  408b53:	scas   al,BYTE PTR es:[edi]
  408b54:	and    DWORD PTR [esi+ebp*8],edi
  408b57:	jo     0x408b55
  408b59:	cmp    eax,0xa8540a39
  408b5e:	popf   
  408b5f:	mov    WORD PTR [eax],ss
  408b61:	imul   ebx,DWORD PTR [ecx],0xffffff87
  408b64:	xor    dh,0x65
  408b67:	push   ss
  408b68:	xlat   BYTE PTR ds:[ebx]
  408b69:	popa   
  408b6a:	pop    ds
  408b6b:	addr16 out dx,al
  408b6d:	sbb    eax,DWORD PTR [eax-0x3d]
  408b70:	scas   eax,DWORD PTR es:[edi]
  408b71:	pop    ecx
  408b72:	or     eax,0x12d5cd8c
  408b77:	pusha  
  408b78:	std    
  408b79:	adc    eax,0x9174d965
  408b7e:	dec    ebp
  408b7f:	enter  0xfba5,0x61
  408b83:	adc    edx,DWORD PTR [ebx]
  408b85:	inc    ebp
  408b86:	pop    ds
  408b87:	adc    ah,BYTE PTR [edi+ebp*4+0x55]
  408b8b:	lahf   
  408b8c:	dec    edi
  408b8d:	xchg   BYTE PTR [eax],dh
  408b8f:	pushf  
  408b90:	xchg   ebx,eax
  408b91:	arpl   WORD PTR [edi+0x670fef91],di
  408b97:	sub    al,0x54
  408b99:	mov    cl,0x79
  408b9b:	pop    ebp
  408b9c:	lds    edx,FWORD PTR [edi]
  408b9e:	in     eax,0x8a
  408ba0:	mov    edi,0x5e34d849
  408ba5:	push   ecx
  408ba6:	sbb    BYTE PTR [edi],bh
  408ba8:	into   
  408ba9:	js     0x408b64
  408bab:	cwde   
  408bac:	push   ebp
  408bad:	std    
  408bae:	mov    ecx,0x328f8c5
  408bb3:	repnz push ebx
  408bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb6:	jp     0x408bbc
  408bb8:	mov    bl,0x60
  408bba:	add    DWORD PTR [esi+0x5ac5fd40],0xffffff85
  408bc1:	lahf   
  408bc2:	sub    BYTE PTR [edi],bl
  408bc4:	cmc    
  408bc5:	mov    esp,0x37a131c1
  408bca:	fwait
  408bcb:	lock (bad) 
  408bcd:	push   cs
  408bce:	test   DWORD PTR [ebx],esi
  408bd0:	or     BYTE PTR [esi+0x5c3ea240],bh
  408bd6:	mov    BYTE PTR [edi-0xd],cl
  408bd9:	pop    esp
  408bda:	xor    dl,BYTE PTR [ebx]
  408bdc:	sub    ecx,edx
  408bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bdf:	les    ecx,FWORD PTR [esi]
  408be1:	aam    0x31
  408be3:	outs   dx,BYTE PTR ds:[esi]
  408be4:	pop    eax
  408be5:	dec    ecx
  408be6:	cwde   
  408be7:	cmp    al,0x96
  408be9:	hlt    
  408bea:	out    dx,eax
  408beb:	std    
  408bec:	xor    BYTE PTR [esi+0x52],dl
  408bef:	cwde   
  408bf0:	cmp    eax,0xb950895b
  408bf5:	or     BYTE PTR ds:0x101eb06,ah
  408bfb:	xchg   esp,eax
  408bfc:	sub    esp,DWORD PTR [ebp+ebp*1-0x3e]
  408c00:	cmc    
  408c01:	mov    bl,BYTE PTR [ebp-0x3d]
  408c04:	in     al,0xe4
  408c06:	or     eax,0x6a942164
  408c0b:	mov    edi,0x5068fd23
  408c10:	sbb    eax,0x306bc61
  408c15:	pushf  
  408c16:	add    DWORD PTR [esi+0xd78ba3e],0x515222d1
  408c20:	out    0x42,eax
  408c22:	or     esi,DWORD PTR [ebp-0x4f]
  408c25:	jae    0x408bec
  408c27:	add    ax,sp
  408c2a:	or     ch,BYTE PTR [edx+0x79b16e]
  408c30:	pushf  
  408c31:	or     esi,eax
  408c33:	add    dl,cl
  408c35:	jb     0x408c3d
  408c37:	lock sbb DWORD PTR [eax+0x3e329666],0xffffffa5
  408c3f:	loopne 0x408bfa
  408c41:	aaa    
  408c42:	mov    ch,0x6
  408c44:	mov    ss,WORD PTR [edi-0x19ba801f]
  408c4a:	xchg   ebp,eax
  408c4b:	shl    BYTE PTR [edx-0x44],1
  408c4e:	sub    al,0x47
  408c50:	inc    ecx
  408c51:	lods   eax,DWORD PTR ds:[esi]
  408c52:	rol    BYTE PTR [esi-0x42337bd5],0x9b
  408c59:	pop    esi
  408c5a:	jmp    0x408c36
  408c5c:	gs xchg ebx,eax
  408c5e:	push   0xffffffc2
  408c60:	repz mov ebx,0xdcfe35c3
  408c66:	mov    ah,0xc5
  408c68:	(bad)  [ebp+0x48]
  408c6b:	jmp    0x408bf5
  408c6d:	int3   
  408c6e:	sub    DWORD PTR [ebx*1+0x2cea670a],ebx
  408c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c76:	adc    ebx,esp
  408c78:	leave  
  408c79:	and    eax,0x1c378848
  408c7e:	add    ecx,DWORD PTR [esi]
  408c80:	adc    al,0x51
  408c82:	push   0x17404033
  408c87:	jae    0x408c33
  408c89:	mov    ah,0x7f
  408c8b:	in     eax,dx
  408c8c:	in     eax,0xe3
  408c8e:	retf   0xdfd0
  408c91:	sbb    al,0xbd
  408c93:	sbb    ah,ah
  408c95:	mov    esi,ebp
  408c97:	cmp    DWORD PTR [eax],esi
  408c99:	pop    es
  408c9a:	mov    bh,0xbf
  408c9c:	bound  ecx,QWORD PTR [edi+0x148a1390]
  408ca2:	cld    
  408ca3:	lahf   
  408ca4:	xor    edi,DWORD PTR [ebx+0x21]
  408ca7:	jb     0x408ccf
  408ca9:	bound  ebx,QWORD PTR [eax+0x6ae63e6]
  408caf:	sbb    edi,ebx
  408cb1:	inc    edx
  408cb2:	dec    edx
  408cb3:	lods   eax,DWORD PTR ds:[esi]
  408cb4:	pusha  
  408cb5:	and    eax,0x273c77e8
  408cba:	push   ebx
  408cbb:	xchg   ebp,eax
  408cbc:	rcl    ch,1
  408cbe:	je     0x408cb8
  408cc0:	(bad)  
  408cc1:	fdiv   DWORD PTR [ecx+0xa]
  408cc4:	push   eax
  408cc5:	cs aam 0xff
  408cc8:	idiv   edi
  408cca:	mov    ecx,0xd119e452
  408ccf:	mov    cl,0xf1
  408cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cd2:	xor    dl,ch
  408cd4:	push   ds
  408cd5:	xor    al,0x40
  408cd7:	inc    esp
  408cd8:	jo     0x408cc0
  408cda:	lods   al,BYTE PTR ds:[esi]
  408cdb:	jae    0x408ce4
  408cdd:	sbb    al,0xa7
  408cdf:	jne    0x408d60
  408ce1:	not    BYTE PTR [esi-0x4fd546c8]
  408ce7:	mov    cl,0xc9
  408ce9:	mov    bh,0xfb
  408ceb:	pop    edx
  408cec:	mov    ds:0x2e9fae58,al
  408cf1:	(bad)  
  408cf2:	xor    DWORD PTR [eax+eiz*4+0x2b],ebx
  408cf6:	add    ecx,ecx
  408cf8:	(bad)  
  408cf9:	stc    
  408cfa:	and    ah,BYTE PTR [edi+0x3b23d261]
  408d00:	pop    edx
  408d01:	sub    al,0xf0
  408d03:	icebp  
  408d04:	and    dh,BYTE PTR [edx-0x4b]
  408d07:	dec    dl
  408d09:	pushf  
  408d0a:	bound  edi,QWORD PTR [edx-0x3abd0a56]
  408d10:	test   DWORD PTR [ebx+0x448c515b],ebx
  408d16:	mov    ds:0x48ff33ee,al
  408d1b:	or     al,dl
  408d1d:	pop    ebx
  408d1e:	inc    ebx
  408d1f:	xlat   BYTE PTR ds:[ebx]
  408d20:	inc    edi
  408d21:	xchg   esi,eax
  408d22:	rcr    BYTE PTR [eax-0x6b],1
  408d25:	add    BYTE PTR [edx+0x7d9992d8],0x1d
  408d2c:	jne    0x408da6
  408d2e:	xor    al,0xfb
  408d30:	into   
  408d31:	out    dx,al
  408d32:	outs   dx,BYTE PTR ds:[esi]
  408d33:	test   eax,0xc2addcf9
  408d38:	lds    esp,FWORD PTR [ecx+0x29]
  408d3b:	xor    eax,0x31f61315
  408d40:	mov    dh,0x3a
  408d42:	cli    
  408d43:	mov    edx,0xea868f35
  408d48:	pop    ebp
  408d49:	pop    edx
  408d4a:	jns    0x408d8c
  408d4c:	sbb    ecx,ebp
  408d4e:	sbb    BYTE PTR [ebp-0x9],0x50
  408d52:	inc    edx
  408d53:	repnz popf 
  408d55:	int    0x91
  408d57:	bound  edx,QWORD PTR [ecx+0x19c6c4c6]
  408d5d:	arpl   bx,di
  408d5f:	hlt    
  408d60:	test   BYTE PTR ds:[ebx],dl
  408d63:	and    eax,0xafedf67a
  408d68:	cmp    cl,ah
  408d6a:	fcomp  DWORD PTR [eax+ebp*8]
  408d6d:	loope  0x408dd6
  408d6f:	retf   0x6d03
  408d72:	inc    eax
  408d73:	ds (bad) 
  408d75:	push   0x34
  408d77:	cli    
  408d78:	xchg   esi,eax
  408d79:	mov    ebp,0x411c01a0
  408d7e:	pop    eax
  408d7f:	retf   0x1be0
  408d82:	add    DWORD PTR [edi+0x56fdd2d9],esp
  408d88:	mov    esp,0x5b949f90
  408d8d:	or     DWORD PTR ds:0x3f3bd4c2,0x5cc7a4f8
  408d97:	add    BYTE PTR [ecx],0x59
  408d9a:	cwde   
  408d9b:	push   edx
  408d9d:	mul    BYTE PTR [ebx+esi*2]
  408da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408da1:	inc    ebp
  408da2:	sar    eax,1
  408da4:	ja     0x408ddb
  408da6:	pop    ebp
  408da7:	and    eax,0xbebd7242
  408dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dad:	out    0x2a,al
  408daf:	lea    esi,[esi]
  408db1:	mov    esi,0xe648326
  408db6:	push   esp
  408db7:	loope  0x408d9d
  408db9:	sbb    eax,0xdd050952
  408dbe:	mov    ds:0xb221c38b,eax
  408dc3:	inc    esi
  408dc4:	pop    eax
  408dc5:	imul   ebp,DWORD PTR [ebx+0x4e],0xfffffffb
  408dc9:	pop    esp
  408dca:	lea    ecx,[ebx-0x9]
  408dcd:	ins    BYTE PTR es:[edi],dx
  408dce:	popf   
  408dcf:	test   DWORD PTR [eax],ecx
  408dd1:	sbb    eax,0xaa2c7a2b
  408dd6:	sti    
  408dd7:	scas   al,BYTE PTR es:[edi]
  408dd8:	fs out 0x38,eax
  408ddb:	imul   ebp,DWORD PTR [eax+0x236f0d21],0xe15eb7b4
  408de5:	mov    ds,WORD PTR [ecx]
  408de7:	add    edx,esp
  408de9:	cmp    DWORD PTR fs:[esi-0x68535942],edi
  408df0:	xor    BYTE PTR [ebx-0x537d2320],dl
  408df6:	sub    DWORD PTR [ebx-0x6d],ebp
  408df9:	xchg   edx,eax
  408dfa:	push   cs
  408dfb:	pop    ss
  408dfc:	inc    edx
  408dfd:	mov    WORD PTR [ebx-0x6127c08e],gs
  408e03:	jge    0x408ddd
  408e05:	push   ss
  408e06:	mov    DWORD PTR [edx+0x1e44fd9b],0x90d10ed5
  408e10:	fmul   QWORD PTR [ebp+0x5]
  408e13:	pop    ebx
  408e14:	mov    edi,0x93da15f8
  408e19:	sub    BYTE PTR [ebx+eiz*2+0x45],0xe1
  408e1e:	adc    DWORD PTR [eax+edi*4],ecx
  408e21:	mov    esp,0x69a553f3
  408e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e27:	(bad)  
  408e28:	nop
  408e29:	(bad)  
  408e2a:	dec    edx
  408e2b:	push   ebp
  408e2c:	mov    ebx,0xbebe9e1b
  408e31:	fstp   st(1)
  408e33:	xor    dl,BYTE PTR [esi+0x2af1e03d]
  408e39:	push   edx
  408e3a:	sub    ch,ah
  408e3c:	outs   dx,BYTE PTR ds:[esi]
  408e3d:	loop   0x408eb5
  408e3f:	rcr    DWORD PTR [edx+ebp*8+0x18043d22],1
  408e46:	jbe    0x408e0a
  408e48:	cmp    esi,DWORD PTR [edx+edx*4]
  408e4b:	pop    ebp
  408e4c:	out    dx,eax
  408e4d:	outs   dx,DWORD PTR ds:[esi]
  408e4e:	push   ebx
  408e4f:	aas    
  408e50:	xchg   edx,eax
  408e51:	stos   BYTE PTR es:[edi],al
  408e52:	sbb    ch,al
  408e54:	pop    esi
  408e55:	retf   0x32fe
  408e58:	jne    0x408e0d
  408e5a:	lds    eax,FWORD PTR [ebx-0x2dc29b98]
  408e60:	fimul  WORD PTR [edi+edi*4-0x3d0f095d]
  408e67:	ja     0x408e34
  408e69:	inc    esp
  408e6a:	out    0xd2,eax
  408e6c:	inc    ebp
  408e6e:	mov    ds:0x3c9e34e8,eax
  408e73:	fidivr DWORD PTR [esi-0x1a]
  408e76:	ja     0x408e97
  408e78:	fistp  WORD PTR [esi-0x64ca6326]
  408e7e:	(bad)  
  408e7f:	icebp  
  408e80:	xchg   ecx,eax
  408e81:	and    eax,0x743451a9
  408e86:	pop    ebx
  408e87:	loope  0x408e73
  408e89:	xor    al,0x40
  408e8b:	aam    0x88
  408e8d:	rol    BYTE PTR [esi+0x74],0x20
  408e91:	jle    0x408f08
  408e93:	xlat   BYTE PTR ds:[ebx]
  408e94:	bound  bp,DWORD PTR [eax-0xcc5739b]
  408e9b:	imul   DWORD PTR [edi-0x73]
  408e9e:	and    BYTE PTR [edx+0x5064d930],bl
  408ea4:	adc    DWORD PTR [ecx-0x8],0x59
  408ea8:	sahf   
  408ea9:	popa   
  408eaa:	mov    edi,0x9b08befa
  408eaf:	sar    DWORD PTR [ebp+0x61],0x99
  408eb3:	push   0x5173141d
  408eb8:	call   DWORD PTR [ebx+0x4978b8f1]
  408ebe:	xor    BYTE PTR [ecx],0x75
  408ec1:	add    edx,DWORD PTR ds:0xa88ba7e6
  408ec7:	arpl   WORD PTR [eax],cx
  408ec9:	enter  0xab95,0xfb
  408ecd:	jecxz  0x408f3c
  408ecf:	sub    al,0xfc
  408ed1:	mov    ch,0x1c
  408ed3:	or     bl,BYTE PTR ds:[ebx+0x3d6c19cc]
  408eda:	test   al,0xa2
  408edc:	test   al,0xc2
  408ede:	int    0x17
  408ee0:	inc    esp
  408ee1:	xchg   ecx,eax
  408ee2:	push   0x4287d1e
  408ee7:	mov    ebx,0xa2eb1fc5
  408eec:	hlt    
  408eed:	scas   eax,DWORD PTR es:[edi]
  408eee:	push   ds
  408eef:	aaa    
  408ef0:	mov    al,ds:0x8bc9fa0
  408ef5:	in     al,dx
  408ef6:	mov    eax,0x902cc49e
  408efb:	fisttp QWORD PTR [edx]
  408efd:	call   0x125d:0x1c6dded7
  408f04:	sahf   
  408f05:	push   es
  408f06:	sar    DWORD PTR [ebp-0x50f00c1c],1
  408f0c:	adc    bl,dl
  408f0e:	and    edi,DWORD PTR [eax-0x1f6b85c5]
  408f14:	pop    ebx
  408f15:	push   cs
  408f16:	push   edi
  408f17:	mov    eax,0x4e3aac04
  408f1c:	inc    ebp
  408f1d:	xchg   DWORD PTR ds:0x876f5ab0,ebx
  408f23:	push   esi
  408f24:	mov    BYTE PTR [ecx-0x37],bl
  408f27:	cld    
  408f28:	pushf  
  408f29:	(bad)  
  408f2a:	jge    0x408fa4
  408f2c:	retf   
  408f2d:	popf   
  408f2e:	adc    ecx,DWORD PTR [ecx-0x71]
  408f31:	and    edi,ebx
  408f33:	pusha  
  408f34:	imul   esi,DWORD PTR [ebx],0x17
  408f37:	adc    edx,eax
  408f39:	mov    WORD PTR [ecx+ecx*4-0x12],gs
  408f3d:	adc    esi,esi
  408f3f:	out    0x1e,eax
  408f41:	or     eax,0x2887da8
  408f46:	inc    edi
  408f47:	xor    al,BYTE PTR [eax+0x16]
  408f4a:	ror    al,0xd6
  408f4d:	dec    ebx
  408f4e:	(bad)  
  408f4f:	outs   dx,BYTE PTR ds:[esi]
  408f50:	sub    dh,BYTE PTR [ebp+0x8163c00]
  408f56:	mov    bl,0xdf
  408f58:	sbb    ebp,DWORD PTR [ecx+0xf]
  408f5b:	pop    edx
  408f5c:	ss stos DWORD PTR es:[edi],eax
  408f5e:	gs inc ebp
  408f60:	xor    edx,DWORD PTR [esi+0x59145dfa]
  408f66:	push   es
  408f67:	and    eax,esi
  408f69:	aam    0xd
  408f6b:	out    dx,eax
  408f6c:	inc    ecx
  408f6d:	push   ecx
  408f6e:	mov    eax,ss:0x9e4ce5fc
  408f74:	into   
  408f75:	add    esp,DWORD PTR [ebx]
  408f77:	sub    al,0xa
  408f79:	cmp    al,0x3d
  408f7c:	inc    esp
  408f7d:	jmp    FWORD PTR [esi+ebp*2+0x5a]
  408f81:	arpl   sp,dx
  408f83:	mov    edx,0xc4c27aab
  408f88:	je     0x409000
  408f8a:	mov    ebp,0x716571e7
  408f8f:	lods   al,BYTE PTR ds:[esi]
  408f90:	pop    ebx
  408f91:	imul   eax,eax,0xe3773813
  408f97:	pop    eax
  408f98:	mov    al,0x84
  408f9a:	enter  0xfff6,0x91
  408f9e:	push   edi
  408f9f:	ucomiss xmm1,xmm7
  408fa2:	aam    0xd
  408fa4:	lock mov bh,0xdb
  408fa7:	cmp    eax,0x62a24834
  408fac:	data16 jns 0x408fa6
  408faf:	mov    bh,0xd2
  408fb1:	sbb    DWORD PTR [edi+0x52],ecx
  408fb4:	pop    es
  408fb5:	push   0x400fd1c4
  408fba:	sub    eax,0xd82b57f6
  408fbf:	or     BYTE PTR [ebx-0x27e13e34],bl
  408fc5:	push   ebp
  408fc6:	sbb    DWORD PTR [ecx+0x4900d32a],0x4b973b4d
  408fd0:	push   eax
  408fd1:	jnp    0x408f9d
  408fd3:	scas   eax,DWORD PTR es:[edi]
  408fd4:	test   ebx,edi
  408fd6:	mov    edi,0x738c6f99
  408fdb:	inc    esi
  408fdc:	pop    eax
  408fdd:	rcl    BYTE PTR [ebx+0x3e151af6],1
  408fe3:	rol    DWORD PTR [ebx-0x13],0x82
  408fe7:	fs (bad) 
  408fe9:	and    esi,DWORD PTR [esi-0x1a]
  408fec:	es jg  0x408fac
  408fef:	pop    esp
  408ff0:	xchg   esp,eax
  408ff1:	or     eax,0x8c6cd935
  408ff6:	jg     0x408fb8
  408ff8:	fidiv  DWORD PTR [ebp-0x60]
  408ffb:	(bad)  
  408ffc:	dec    esi
  408ffd:	push   cs
  408ffe:	enter  0xcefe,0x2a
  409002:	adc    BYTE PTR [esi+eiz*4+0x2f],0xb5
  409007:	popf   
  409008:	leave  
  409009:	jb     0x40900f
  40900b:	mov    BYTE PTR [edx-0x486c6629],ah
  409011:	mov    esp,0x756bcc70
  409016:	es scas al,BYTE PTR es:[edi]
  409018:	sti    
  409019:	fisub  WORD PTR [ebp-0x64163067]
  40901f:	inc    edx
  409020:	mov    ah,0x97
  409022:	pop    edx
  409023:	stos   BYTE PTR es:[edi],al
  409024:	or     ebp,edi
  409026:	(bad)  
  409027:	inc    ebp
  409028:	fcomp  DWORD PTR [esi-0x47]
  40902b:	or     ebp,esi
  40902d:	mov    dh,0x60
  40902f:	mov    DWORD PTR [edx+0x58],edi
  409032:	jno    0x4090a5
  409034:	xchg   BYTE PTR [ecx+0x4f0e77c],dh
  40903a:	or     DWORD PTR [ecx+0x74],0x9b6a5c0
  409041:	inc    ebx
  409042:	push   eax
  409043:	xor    BYTE PTR [edi-0x7b385121],ah
  409049:	xor    DWORD PTR [ebp+0x3ee2a582],eax
  40904f:	std    
  409050:	bound  edi,QWORD PTR [ebx+0x34b86bcf]
  409056:	xchg   edx,ebp
  409058:	push   eax
  409059:	mov    al,ds:0xdf2eba22
  40905e:	int    0xbc
  409060:	inc    esi
  409061:	fldcw  WORD PTR [eax]
  409063:	jo     0x40901c
  409065:	loop   0x40902f
  409067:	sahf   
  409068:	jmp    0x409055
  40906a:	xor    eax,0xee0d1d4b
  40906f:	es inc ebp
  409071:	push   ecx
  409072:	out    0xe8,al
  409074:	out    dx,al
  409075:	add    esp,0xf05f9332
  40907b:	out    0x22,eax
  40907d:	fild   DWORD PTR [ebp+0x4b]
  409080:	push   ss
  409081:	pop    ecx
  409082:	and    dl,BYTE PTR [esi+eax*8-0x3d54edc7]
  409089:	retf   0xab6e
  40908c:	sbb    DWORD PTR [edx],eax
  40908e:	cmp    DWORD PTR [eax],esp
  409090:	xor    esi,DWORD PTR [eax+0x2e]
  409093:	pop    esp
  409094:	inc    edx
  409095:	cs (bad) 
  409097:	jge    0x40909d
  409099:	outs   dx,BYTE PTR ds:[esi]
  40909a:	add    edi,ecx
  40909c:	shl    DWORD PTR [edi+eax*2],cl
  40909f:	out    dx,eax
  4090a0:	mov    ?,ebx
  4090a2:	inc    ebp
  4090a3:	inc    edi
  4090a4:	cld    
  4090a5:	cld    
  4090a6:	shl    ecx,cl
  4090a8:	mov    ecx,0xd1020e9d
  4090ad:	pop    ds
  4090ae:	or     eax,0xaf20c37c
  4090b3:	lahf   
  4090b4:	mov    ecx,0xf3a7046e
  4090b9:	push   ebx
  4090ba:	es loop 0x4090b7
  4090bd:	dec    esi
  4090be:	mov    edx,0xe397df9c
  4090c3:	dec    esi
  4090c4:	aad    0x8c
  4090c6:	mov    ah,0x71
  4090c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090c9:	or     eax,0x12f853e7
  4090ce:	iret   
  4090cf:	aas    
  4090d0:	mov    dl,0xa9
  4090d2:	lahf   
  4090d3:	push   0x2a1cc98d
  4090d8:	das    
  4090d9:	repz xchg ebx,eax
  4090db:	push   DWORD PTR [edi-0x5b]
  4090de:	xchg   edi,eax
  4090df:	lahf   
  4090e0:	stos   BYTE PTR es:[edi],al
  4090e1:	jg     0x409099
  4090e3:	dec    edx
  4090e4:	ins    DWORD PTR es:[edi],dx
  4090e5:	inc    edi
  4090e6:	and    dh,BYTE PTR [ecx]
  4090e8:	push   ecx
  4090e9:	sahf   
  4090ea:	mov    ds,WORD PTR [ecx-0x6a]
  4090ed:	push   0x10498d8a
  4090f2:	inc    edx
  4090f3:	pop    ds
  4090f4:	imul   ebp,DWORD PTR [esi],0x62
  4090f7:	mul    BYTE PTR [eax-0x41]
  4090fa:	into   
  4090fb:	and    edi,DWORD PTR [esp+edx*2]
  4090fe:	push   es
  4090ff:	or     eax,0x4c3e8ee5
  409104:	pusha  
  409105:	mov    ah,BYTE PTR [eax]
  409107:	push   0x3b
  409109:	jp     0x40911b
  40910b:	shr    BYTE PTR [eax+0x60],cl
  40910e:	sbb    bh,BYTE PTR [ecx+0x35988d38]
  409114:	sub    esp,ecx
  409116:	test   BYTE PTR ds:0xe1c5c2f7,ch
  40911c:	gs leave 
  40911e:	push   edx
  40911f:	and    eax,ebx
  409121:	pop    ebp
  409122:	out    0x8f,eax
  409124:	mov    es,WORD PTR [edx]
  409126:	or     eax,0xd7a87c2e
  40912b:	(bad)  
  40912c:	cmp    ecx,edi
  40912e:	push   0xdbc4576c
  409133:	or     ecx,DWORD PTR [edx]
  409135:	jo     0x4090bb
  409137:	outs   dx,DWORD PTR ds:[esi]
  409138:	out    0xe0,al
  40913a:	in     al,0xcb
  40913c:	rcr    BYTE PTR [edi-0x8],0x8a
  409140:	in     al,dx
  409141:	fsubp  st(7),st
  409143:	mov    bl,0x22
  409145:	jnp    0x409198
  409147:	sbb    ecx,DWORD PTR [ecx+0x75]
  40914a:	mov    dh,0x62
  40914c:	push   0xd08019d6
  409151:	js     0x409195
  409153:	add    edi,ecx
  409155:	push   0x5be4c9ff
  40915a:	and    DWORD PTR [edi+0x5c],ebx
  40915d:	in     eax,0x28
  40915f:	xor    BYTE PTR [ebx+0x50],0xcd
  409163:	push   0x21420697
  409168:	pushf  
  409169:	ret    0xdce6
  40916c:	inc    esi
  40916d:	cmp    bl,bl
  40916f:	inc    esp
  409170:	daa    
  409171:	cmp    dh,BYTE PTR [edx-0x1bbccfb8]
  409177:	sbb    BYTE PTR [esi],al
  409179:	mov    eax,ds:0x316a2458
  40917e:	dec    esi
  40917f:	mov    ah,0x5a
  409181:	daa    
  409182:	push   0x5c
  409184:	out    0xe9,eax
  409186:	stos   DWORD PTR es:[edi],eax
  409187:	and    bh,BYTE PTR [ebx+0x54]
  40918a:	clc    
  40918b:	inc    ebp
  40918c:	sbb    DWORD PTR [esi+0x50eef1c6],0x58
  409193:	shl    DWORD PTR [ecx-0x10b379af],0x93
  40919a:	(bad)  
  40919b:	jnp    0x4091e2
  40919d:	(bad)  
  40919e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40919f:	loopne 0x4091a0
  4091a1:	popa   
  4091a2:	test   eax,eax
  4091a4:	dec    eax
  4091a5:	xchg   ecx,eax
  4091a6:	mov    edx,0xcd608e44
  4091ab:	pop    edx
  4091ac:	imul   ebp,DWORD PTR [eax],0xffffffee
  4091af:	(bad)  
  4091b0:	retf   
  4091b1:	add    DWORD PTR [eax+0x38],esi
  4091b4:	cmp    ch,dh
  4091b6:	ins    DWORD PTR es:[edi],dx
  4091b7:	(bad)  
  4091b8:	jo     0x4091f6
  4091ba:	mul    BYTE PTR [eax+0x62]
  4091bd:	bound  edi,QWORD PTR [ebx+0x50]
  4091c0:	mov    al,0xa7
  4091c2:	mov    ebp,0xec819b0b
  4091c7:	jo     0x409217
  4091c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ca:	jae    0x4091ea
  4091cc:	mov    DWORD PTR [ecx+esi*8],eax
  4091cf:	dec    ebp
  4091d0:	imul   edx,DWORD PTR [ecx+eiz*8-0x75],0x47389422
  4091d8:	aam    0xda
  4091da:	pusha  
  4091db:	inc    eax
  4091dc:	fmul   DWORD PTR [edi+0x398c8702]
  4091e2:	sbb    al,0x53
  4091e4:	or     eax,0x7f1835d7
  4091e9:	push   0x27
  4091eb:	out    0xd8,eax
  4091ed:	jle    0x40919f
  4091ef:	(bad)  
  4091f0:	loop   0x409248
  4091f2:	arpl   WORD PTR [ebx-0x3b],bx
  4091f5:	fild   QWORD PTR [edi-0x39d30f9e]
  4091fb:	xchg   edi,eax
  4091fc:	test   BYTE PTR [edx-0x1a45c7f2],cl
  409202:	mov    esp,0x624ae18f
  409207:	je     0x4091a1
  409209:	and    eax,0xad07928d
  40920e:	or     eax,0xca429f05
  409213:	add    esi,DWORD PTR [ebp-0x9]
  409216:	outs   dx,DWORD PTR ds:[esi]
  409217:	sbb    bl,ah
  409219:	dec    ebp
  40921a:	cmc    
  40921b:	dec    esi
  40921c:	dec    ecx
  40921d:	jmp    0x3d3b:0x300c5dae
  409224:	scas   eax,DWORD PTR es:[edi]
  409225:	stos   DWORD PTR es:[edi],eax
  409226:	(bad)  [edx+0x391a22ec]
  40922c:	icebp  
  40922d:	cmc    
  40922e:	sbb    ebp,DWORD PTR [edx+0xdc344e2]
  409234:	enter  0x474d,0x49
  409238:	jno    0x40925c
  40923a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40923b:	test   al,0x28
  40923d:	and    ecx,DWORD PTR [edx+0x31]
  409240:	jne    0x4091e9
  409242:	clc    
  409243:	rcr    edx,cl
  409245:	scas   al,BYTE PTR es:[edi]
  409246:	outs   dx,BYTE PTR ds:[esi]
  409247:	nop
  409248:	in     eax,dx
  409249:	lds    ecx,FWORD PTR [ecx-0x18ad2ddc]
  40924f:	cs cmp esi,edx
  409252:	xchg   ebp,eax
  409253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409254:	aam    0xca
  409256:	pop    ds
  409257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409258:	or     al,0x74
  40925a:	mov    ebx,es
  40925c:	dec    esi
  40925d:	fucomip st,st(7)
  40925f:	pusha  
  409260:	dec    ecx
  409261:	inc    eax
  409262:	sbb    eax,0xedf92549
  409267:	iret   
  409268:	mov    ch,0x7
  40926a:	inc    ecx
  40926b:	jecxz  0x409293
  40926d:	fcomip st,st(2)
  40926f:	cmp    al,0x1b
  409271:	jmp    0x68e:0xf6b342f
  409278:	sub    eax,0xfc51e25f
  40927d:	aam    0xaf
  40927f:	mov    ecx,ecx
  409281:	sub    BYTE PTR [eax],ah
  409283:	push   0xffffff98
  409285:	cmp    DWORD PTR [ebx-0x7a47cfdc],esp
  40928b:	sub    ecx,0x32fcebc4
  409291:	dec    esi
  409292:	adc    edi,DWORD PTR ds:0x499ac3d
  409298:	adc    eax,0x908e0cb5
  40929d:	popa   
  40929e:	les    esp,FWORD PTR [ecx-0x1d]
  4092a1:	into   
  4092a2:	out    0x55,al
  4092a4:	daa    
  4092a5:	adc    DWORD PTR [ecx+0x3ae1cf1d],esi
  4092ab:	pop    eax
  4092ac:	jns    0x409307
  4092ae:	arpl   si,bx
  4092b0:	in     eax,0x51
  4092b2:	retf   
  4092b3:	mov    eax,ds:0x1901f83e
  4092b8:	lods   eax,DWORD PTR ds:[esi]
  4092b9:	in     al,0xd4
  4092bb:	mov    bl,0xa6
  4092bd:	xor    DWORD PTR [eax+0x38c6e612],0xc3b481c5
  4092c7:	push   esi
  4092c8:	leave  
  4092c9:	push   ss
  4092ca:	clc    
  4092cb:	std    
  4092cc:	es cs sbb dl,ah
  4092d0:	jecxz  0x4092bc
  4092d2:	dec    ebx
  4092d3:	mov    ds:0x1243ee87,al
  4092d8:	fucomi st,st(1)
  4092da:	jle    0x4092f2
  4092dc:	test   DWORD PTR [edi-0x3b3ee419],0x8d805ce4
  4092e6:	xor    eax,0xcad9e729
  4092eb:	je     0x4092e1
  4092ed:	xor    al,0xb6
  4092ef:	js     0x409307
  4092f1:	in     al,0x45
  4092f3:	test   eax,0xd1e57e17
  4092f8:	adc    BYTE PTR [ecx+eiz*4+0x29077928],bh
  4092ff:	mov    bh,0x6
  409301:	lods   eax,DWORD PTR fs:[esi]
  409303:	jb     0x40928e
  409305:	or     BYTE PTR [eax+0x5761b589],cl
  40930b:	loopne 0x409379
  40930d:	fwait
  40930e:	(bad)  
  40930f:	ins    BYTE PTR es:[edi],dx
  409310:	jne    0x4092c9
  409312:	jnp    0x4092a3
  409314:	inc    esi
  409315:	loopne 0x4092b9
  409317:	loope  0x4092b6
  409319:	test   al,0xaa
  40931b:	jle    0x4092b7
  40931d:	adc    cl,cl
  40931f:	daa    
  409320:	xor    DWORD PTR [edx+0x3570ef13],edi
  409326:	xchg   edx,eax
  409327:	retf   
  409328:	test   al,0x15
  40932a:	adc    dl,BYTE PTR [ecx-0x64f9b43]
  409330:	jle    0x409377
  409332:	dec    DWORD PTR ds:0x5b125ca4
  409338:	push   eax
  409339:	jp     0x40938f
  40933b:	mov    esp,0x2248315
  409340:	adc    ecx,ebp
  409342:	rol    DWORD PTR [esi+0x18],cl
  409345:	enter  0xac0a,0xf7
  409349:	mov    eax,cs:0x81daba0b
  40934f:	xchg   edi,eax
  409350:	jne    0x40936d
  409352:	hlt    
  409353:	jnp    0x4092f9
  409355:	cmp    eax,0x4345d41d
  40935a:	mov    bh,0xfb
  40935c:	data16 and al,cl
  40935f:	adc    DWORD PTR [edx-0x63],edx
  409362:	je     0x4092f8
  409364:	in     al,0x29
  409366:	adc    eax,esp
  409368:	sub    BYTE PTR [edx+edi*2+0x73],0xb0
  40936d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40936e:	adc    cl,dl
  409370:	xchg   BYTE PTR [ebx-0x29],dh
  409373:	jae    0x40935a
  409375:	inc    esi
  409376:	add    al,0x10
  409378:	lahf   
  409379:	sub    BYTE PTR [edi+0x62483240],ch
  40937f:	(bad)  
  409380:	out    dx,al
  409381:	jl     0x4093d5
  409383:	mov    ecx,0x3399c619
  409388:	jg     0x40930b
  40938a:	mov    ch,0xbc
  40938c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40938d:	xchg   ebx,eax
  40938e:	cmc    
  40938f:	mov    esp,0x389b9382
  409394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409395:	push   ebp
  409396:	fist   DWORD PTR [edi+ebx*1]
  409399:	mov    ebp,0x987d7794
  40939e:	and    eax,0xea8ea8c7
  4093a3:	mov    WORD PTR [ebp+0x7b833a28],ds
  4093a9:	mov    ecx,0x88f36028
  4093ae:	cld    
  4093af:	fldenv [eax]
  4093b1:	jecxz  0x409405
  4093b3:	ins    BYTE PTR es:[edi],dx
  4093b4:	fldenv [edx-0x378ba4b4]
  4093ba:	mov    cl,0xf
  4093bc:	test   eax,0x53268064
  4093c1:	adc    eax,0xaaccfb1f
  4093c6:	(bad)  
  4093c7:	xchg   ebp,eax
  4093c8:	and    dl,BYTE PTR [ecx+0x4148aafe]
  4093ce:	xchg   edx,eax
  4093cf:	sub    ch,bl
  4093d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d2:	jnp    0x409392
  4093d4:	scas   al,BYTE PTR es:[edi]
  4093d5:	jg     0x4093ba
  4093d7:	pop    ecx
  4093d8:	out    0xb5,al
  4093da:	fistp  WORD PTR [ebx]
  4093dc:	in     al,0x42
  4093de:	push   ss
  4093df:	fwait
  4093e0:	call   0xe96b2f2b
  4093e5:	mov    DWORD PTR [edi],edx
  4093e7:	inc    ebx
  4093e8:	adc    eax,0x76b46541
  4093ed:	or     BYTE PTR [edi+eiz*2],0xde
  4093f1:	mov    dl,0x92
  4093f3:	hlt    
  4093f4:	ss xchg ebx,eax
  4093f6:	mov    ah,0x5d
  4093f8:	test   BYTE PTR [ebx],cl
  4093fa:	mov    edi,0x81c44723
  4093ff:	jle    0x4093d6
  409401:	dec    ebx
  409402:	leave  
  409403:	jo     0x409478
  409405:	adc    esp,ebp
  409407:	push   edx
  409408:	lahf   
  409409:	xchg   esp,ebp
  40940b:	iret   
  40940c:	jmp    0x7af4:0x4ed5c2c9
  409413:	shr    al,1
  409415:	pop    es
  409416:	xlat   BYTE PTR ds:[ebx]
  409417:	mov    ?,WORD PTR [edi+0x4e915df0]
  40941d:	add    eax,DWORD PTR [esi+esi*2+0x27]
  409421:	inc    esi
  409422:	mov    ch,0x3c
  409424:	loopne 0x40947f
  409426:	aas    
  409427:	aas    
  409428:	lock sub DWORD PTR [ecx],eax
  40942b:	inc    ecx
  40942c:	js     0x409422
  40942e:	int    0x3e
  409430:	imul   ecx,DWORD PTR [edx+0x63df73e6],0xc9adff97
  40943a:	mov    ebx,0xba8fd7e
  40943f:	and    al,0x22
  409441:	cmp    eax,0x6e223973
  409446:	pop    ds
  409447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409448:	mov    bh,BYTE PTR [ebp-0x27]
  40944b:	pop    edi
  40944c:	mov    ecx,0xf175bdb5
  409451:	stc    
  409452:	push   eax
  409453:	leave  
  409454:	or     BYTE PTR [edi],0x86
  409457:	pushf  
  409458:	mul    DWORD PTR [ecx-0x59891c40]
  40945e:	sti    
  40945f:	fisttp QWORD PTR [edi+0x2]
  409462:	iret   
  409463:	push   esp
  409464:	in     eax,dx
  409465:	cwde   
  409466:	icebp  
  409467:	and    al,0xa6
  409469:	sahf   
  40946a:	cmp    edi,DWORD PTR [ebx+0x15]
  40946d:	lahf   
  40946e:	in     al,0x5d
  409470:	and    DWORD PTR [esi],ebx
  409472:	out    0xb9,eax
  409474:	cmp    BYTE PTR [edx-0x5a],dh
  409477:	pop    edx
  409478:	call   DWORD PTR [edx]
  40947a:	dec    edi
  40947b:	repz test al,0x95
  40947e:	ret    0x8f4d
  409481:	sub    dh,BYTE PTR [eax+0x274d3362]
  409487:	imul   ebx,DWORD PTR [ebx+0x350ead22],0x39
  40948e:	xchg   edx,eax
  40948f:	out    0x21,eax
  409491:	setbe  BYTE PTR [ebp-0x2f]
  409495:	jb     0x4094eb
  409497:	xor    DWORD PTR [edi+0x7ef29d89],esi
  40949d:	add    ebx,DWORD PTR [ebx-0x2c]
  4094a0:	mov    ah,0x4f
  4094a2:	hlt    
  4094a3:	mov    DWORD PTR [edi+0x39c7e20c],0xa0b3c15e
  4094ad:	sbb    eax,0x5c7612bc
  4094b2:	nop
  4094b3:	mov    fs,esi
  4094b5:	daa    
  4094b6:	adc    bl,ch
  4094b8:	gs dec ecx
  4094ba:	ret    
  4094bb:	in     al,dx
  4094bc:	mov    ebp,0x7dfcbd13
  4094c1:	push   ebx
  4094c2:	push   edi
  4094c3:	pop    eax
  4094c4:	shl    DWORD PTR [edx+0x45],1
  4094c7:	in     eax,dx
  4094c8:	out    dx,eax
  4094c9:	adc    edi,edi
  4094cb:	sahf   
  4094cc:	sub    bh,BYTE PTR [ecx-0x37727eba]
  4094d2:	mov    esi,0x7186f3aa
  4094d7:	dec    eax
  4094d8:	push   esi
  4094d9:	pop    esp
  4094da:	popf   
  4094db:	or     dh,bh
  4094dd:	aad    0xaa
  4094df:	jbe    0x409491
  4094e1:	inc    edx
  4094e2:	not    edi
  4094e4:	in     eax,dx
  4094e5:	loopne 0x40950c
  4094e7:	mov    bl,0xa7
  4094e9:	daa    
  4094ea:	in     al,0xe7
  4094ec:	mov    esp,0x81901222
  4094f1:	mov    ah,0xe5
  4094f3:	div    BYTE PTR [ebx+0x402ac860]
  4094f9:	jle    0x409519
  4094fb:	jle    0x4094ca
  4094fd:	sbb    ebp,DWORD PTR [ebx+0x2099d272]
  409503:	jns    0x4094e3
  409505:	pusha  
  409506:	aad    0xf6
  409508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409509:	outs   dx,DWORD PTR ds:[esi]
  40950a:	mov    ah,0x57
  40950c:	cwde   
  40950d:	add    BYTE PTR [ebp-0x8fe2a7a],bh
  409513:	iret   
  409514:	sub    eax,0xc2e9addb
  409519:	adc    DWORD PTR [ebx],0x25
  40951c:	enter  0x3d50,0x88
  409520:	lods   eax,DWORD PTR ds:[esi]
  409521:	sbb    esi,edx
  409523:	mov    eax,0xc0fe9d2e
  409528:	jp     0x40954f
  40952a:	add    ah,BYTE PTR [edx+0x42f59a87]
  409530:	dec    esp
  409531:	call   DWORD PTR [edx-0x4c1819b5]
  409537:	out    dx,al
  409538:	inc    edx
  409539:	cmp    dh,BYTE PTR [edi-0xaab055d]
  40953f:	xor    BYTE PTR [esi+0xa],cl
  409542:	scas   eax,DWORD PTR es:[edi]
  409543:	scas   eax,DWORD PTR es:[edi]
  409544:	fist   WORD PTR [ebp-0x3972c18e]
  40954a:	lds    eax,FWORD PTR [eax+0x42100768]
  409550:	test   eax,0x8891c5fe
  409555:	mov    bl,0x28
  409557:	pop    es
  409558:	adc    eax,0xcb7e790f
  40955d:	stos   BYTE PTR es:[edi],al
  40955e:	xchg   edi,eax
  40955f:	xor    esp,DWORD PTR [edx+0x5a]
  409562:	push   esp
  409563:	cmp    eax,DWORD PTR [edi+edi*8-0xb4f8ebc]
  40956a:	sub    DWORD PTR ds:0x7c61ab6e,esp
  409570:	lods   eax,DWORD PTR ds:[esi]
  409571:	mov    ecx,0xa3357bdc
  409576:	sbb    dl,BYTE PTR [ecx]
  409578:	mov    eax,ds:0xbb46c3a5
  40957d:	dec    ecx
  40957e:	pusha  
  40957f:	mov    edi,0x6b598c7c
  409584:	fwait
  409585:	push   ecx
  409586:	out    dx,eax
  409587:	xchg   edi,eax
  409588:	sbb    DWORD PTR [eax],esp
  40958a:	fimul  DWORD PTR [eax-0x7b]
  40958d:	mov    al,0x82
  40958f:	popf   
  409590:	ret    0xe9a1
  409593:	inc    esi
  409594:	jle    0x409615
  409596:	cli    
  409597:	add    eax,esi
  409599:	scas   al,BYTE PTR es:[edi]
  40959a:	gs imul ecx,ecx,0xa
  40959e:	scas   al,BYTE PTR es:[edi]
  40959f:	push   0xc6dcce89
  4095a4:	daa    
  4095a5:	sti    
  4095a6:	daa    
  4095a7:	aas    
  4095a8:	and    DWORD PTR [ecx],ecx
  4095aa:	ret    
  4095ab:	mov    BYTE PTR [esi-0x79],bl
  4095ae:	dec    eax
  4095af:	out    dx,eax
  4095b0:	push   eax
  4095b1:	mov    ds:0xa800007a,eax
  4095b6:	push   ebp
  4095b7:	por    mm5,mm1
  4095ba:	jns    0x40957d
  4095bc:	add    DWORD PTR [esi],eax
  4095be:	test   BYTE PTR [edi+0x44e6cd7a],cl
  4095c4:	fimul  WORD PTR [esi]
  4095c6:	adc    eax,0x33660175
  4095cb:	pop    eax
  4095cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cd:	fmulp  st(2),st
  4095cf:	jns    0x4095b6
  4095d1:	cmp    al,0x95
  4095d3:	jns    0x409635
  4095d5:	pop    edi
  4095d6:	mov    ch,0xf4
  4095d8:	sbb    edx,DWORD PTR [edi]
  4095da:	xchg   ebp,eax
  4095db:	push   esi
  4095dc:	xchg   ebx,eax
  4095dd:	cmp    eax,0x5d58624
  4095e2:	enter  0x944e,0xc3
  4095e6:	add    DWORD PTR [edi+ecx*1-0x557d91d],0xffffff88
  4095ee:	and    ah,ah
  4095f0:	not    DWORD PTR [ebx+0x3b]
  4095f3:	out    0x5c,al
  4095f5:	push   0xffffffc9
  4095f7:	lods   eax,DWORD PTR ds:[esi]
  4095f8:	add    al,0xfd
  4095fa:	add    eax,0x287cb5a9
  4095ff:	mov    WORD PTR [ecx],?
  409601:	xchg   edi,eax
  409602:	loop   0x4095fa
  409604:	icebp  
  409605:	pop    edx
  409606:	mov    esi,0x13a89108
  40960b:	outs   dx,BYTE PTR ds:[esi]
  40960c:	mov    ch,0x98
  40960e:	jmp    0xf418:0x899943f5
  409615:	mov    BYTE PTR [ecx+ebp*8+0x73385851],al
  40961c:	loope  0x409653
  40961e:	daa    
  40961f:	rcr    BYTE PTR [ebx+0x4a],cl
  409622:	dec    edi
  409623:	test   al,0xb9
  409625:	mov    al,0x71
  409627:	jle    0x409653
  409629:	outs   dx,DWORD PTR ds:[esi]
  40962a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40962b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40962c:	loop   0x4095be
  40962e:	sbb    cl,bh
  409630:	sub    ebp,DWORD PTR [edi+eax*1+0x2f]
  409634:	out    0x3,eax
  409636:	rcr    BYTE PTR [edi],1
  409638:	xor    cl,BYTE PTR [ecx+0x1d]
  40963b:	popf   
  40963c:	inc    ecx
  40963d:	ss jge 0x4095d5
  409640:	sbb    BYTE PTR [esi],bl
  409642:	aas    
  409643:	add    al,0xf1
  409645:	(bad)  
  409646:	jae    0x4096b5
  409648:	ss mov dh,0x40
  40964b:	dec    esp
  40964c:	enter  0x2cee,0x33
  409650:	(bad)  
  409652:	popf   
  409653:	(bad)  
  409654:	jae    0x4095ef
  409656:	xor    DWORD PTR [ecx+0x6453da09],0xffffff95
  40965d:	cmp    eax,0x8267226f
  409662:	leave  
  409663:	cmp    al,0xdb
  409665:	inc    esp
  409666:	call   0x1f40abac
  40966b:	mov    ecx,0x69926810
  409670:	nop
  409671:	dec    edx
  409672:	dec    esi
  409673:	es pushf 
  409675:	int3   
  409676:	lock push ebp
  409678:	push   es
  409679:	sbb    ecx,edx
  40967b:	stos   BYTE PTR es:[edi],al
  40967c:	mov    ecx,esi
  40967e:	push   edi
  40967f:	fst    DWORD PTR [edi-0x70e11dd3]
  409685:	push   ebx
  409686:	mov    ch,BYTE PTR ds:0x3d86f8f0
  40968c:	cmp    eax,0xc891d283
  409691:	lock das 
  409693:	in     al,dx
  409694:	cmp    eax,0x2510f671
  409699:	jp     0x40970c
  40969b:	pop    ebx
  40969c:	add    BYTE PTR [edi-0x1c],dl
  40969f:	dec    esp
  4096a0:	mov    bh,0x2e
  4096a2:	ins    DWORD PTR es:[edi],dx
  4096a3:	cs cli 
  4096a5:	cmc    
  4096a6:	jne    0x409639
  4096a8:	jp     0x4096a0
  4096aa:	cmc    
  4096ab:	aam    0xee
  4096ad:	cmp    BYTE PTR [eax+0x16],bh
  4096b0:	dec    edi
  4096b1:	fs inc esp
  4096b3:	push   ebp
  4096b4:	push   ecx
  4096b5:	outs   dx,DWORD PTR ds:[esi]
  4096b6:	sahf   
  4096b7:	daa    
  4096b8:	data16 sti 
  4096ba:	fiadd  DWORD PTR [edi+0x2e]
  4096bd:	and    al,0x15
  4096bf:	rcr    BYTE PTR [ecx],0xc5
  4096c2:	dec    esp
  4096c3:	leave  
  4096c4:	not    ebp
  4096c6:	mov    edi,0x87154ec4
  4096cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096cc:	and    al,ah
  4096ce:	(bad)  
  4096cf:	push   edi
  4096d0:	test   eax,0x9ad2ec2d
  4096d5:	daa    
  4096d6:	mov    BYTE PTR [edx+0x365c7598],al
  4096dc:	ins    BYTE PTR es:[edi],dx
  4096dd:	sbb    eax,0xf5b3386
  4096e2:	shr    DWORD PTR [edi],cl
  4096e4:	adc    edi,DWORD PTR [edi+0x3d]
  4096e7:	push   edx
  4096e8:	mov    eax,ds:0x1b7affed
  4096ed:	mov    esp,0x61ba8737
  4096f2:	pop    ebx
  4096f3:	(bad)  
  4096f4:	retf   0x1b1
  4096f7:	rcr    DWORD PTR ds:0xf31cd586,1
  4096fd:	jns    0x409706
  4096ff:	and    ch,bl
  409701:	inc    esp
  409702:	je     0x4096bb
  409704:	adc    eax,ecx
  409706:	sub    esp,esp
  409708:	jae    0x409696
  40970a:	dec    ecx
  40970b:	adc    ecx,DWORD PTR [ecx+ecx*4+0x6c]
  40970f:	ret    0x2103
  409712:	stos   DWORD PTR es:[edi],eax
  409713:	push   cs
  409714:	inc    ebx
  409715:	mov    esi,ebp
  409717:	mov    ecx,0x402abe99
  40971c:	or     DWORD PTR [esi-0x4a],0xfffffff8
  409720:	jns    0x40976c
  409722:	mov    dl,dl
  409724:	xor    al,0x59
  409726:	jmp    0xb2a6c679
  40972b:	pop    edx
  40972c:	dec    esp
  40972d:	cmp    edi,esi
  40972f:	rcl    DWORD PTR [eax+0x4832fd22],cl
  409735:	jg     0x40978a
  409737:	or     eax,0xa937ff06
  40973c:	je     0x40973d
  40973e:	dec    eax
  40973f:	pusha  
  409740:	mov    esp,0xda467ef7
  409745:	es inc ebp
  409747:	test   eax,0xbd06d055
  40974c:	and    dl,BYTE PTR [ebx-0x19]
  40974f:	lock sbb ecx,eax
  409752:	aas    
  409753:	jecxz  0x4096e6
  409755:	inc    ebp
  409756:	adc    ebx,DWORD PTR [esi-0x61]
  409759:	add    al,0x8f
  40975b:	adc    dh,BYTE PTR [esi]
  40975d:	xchg   ecx,eax
  40975e:	pop    ds
  40975f:	aam    0x19
  409761:	mov    ch,0x17
  409763:	ja     0x40972e
  409765:	cld    
  409766:	cmp    bl,ch
  409768:	lock rcl BYTE PTR [eax-0x1e10c473],cl
  40976f:	or     DWORD PTR [edx-0x656daeac],0x6e
  409776:	xchg   ebx,eax
  409777:	pop    ss
  409778:	loop   0x40974c
  40977a:	repz lahf 
  40977c:	sbb    ebp,DWORD PTR [edx+0x77ccbb1]
  409782:	adc    DWORD PTR [ebx],ebp
  409784:	(bad)  
  409785:	cmp    al,0x5b
  409787:	fucomi st,st(2)
  409789:	rol    bl,0x69
  40978c:	(bad)  
  40978d:	xchg   esp,eax
  40978e:	out    0x63,eax
  409790:	sbb    eax,DWORD PTR [edx]
  409792:	sbb    DWORD PTR gs:[ecx+0x4c],edi
  409796:	jg     0x409805
  409798:	and    al,0xb1
  40979a:	loope  0x409780
  40979c:	and    eax,0xfbde1b69
  4097a1:	dec    ebp
  4097a2:	dec    eax
  4097a3:	fsub   DWORD PTR [ecx+0x11c174a]
  4097a9:	cmc    
  4097aa:	in     eax,0xad
  4097ac:	add    eax,DWORD PTR [ecx+esi*4]
  4097af:	mov    ah,0xf5
  4097b1:	out    dx,al
  4097b2:	shl    DWORD PTR [esi+0x58],1
  4097b5:	inc    ebp
  4097b6:	and    DWORD PTR [edi-0x43],ebx
  4097b9:	xchg   DWORD PTR ds:0xfc0f5c55,esp
  4097bf:	lahf   
  4097c0:	push   ebx
  4097c1:	call   0x3fdd8555
  4097c6:	int3   
  4097c7:	scas   al,BYTE PTR es:[edi]
  4097c8:	cli    
  4097c9:	ins    DWORD PTR es:[edi],dx
  4097ca:	ins    BYTE PTR es:[edi],dx
  4097cb:	mov    edx,0x40f60c9f
  4097d0:	ja     0x409769
  4097d2:	sbb    DWORD PTR [edx],ebx
  4097d4:	jl     0x4097ab
  4097d6:	fs xchg ebx,eax
  4097d8:	push   edi
  4097d9:	sbb    BYTE PTR [edi],bh
  4097db:	jmp    0x4698a587
  4097e0:	test   DWORD PTR [eax+0x74],edx
  4097e3:	push   ss
  4097e4:	or     BYTE PTR [edi],bh
  4097e6:	ss loop 0x409860
  4097e9:	out    0x3d,al
  4097eb:	or     edi,DWORD PTR [ebx-0xe]
  4097ee:	test   al,0xf1
  4097f0:	cwde   
  4097f1:	in     al,dx
  4097f2:	in     eax,0x7b
  4097f4:	mov    esi,0xabbd69b
  4097f9:	jbe    0x409874
  4097fb:	rcr    DWORD PTR [ebx+eax*1],1
  4097fe:	hlt    
  4097ff:	and    dh,BYTE PTR [ebx+0x19]
  409802:	nop
  409803:	adc    eax,0xb8693e0b
  409808:	mov    ds,WORD PTR [ecx]
  40980a:	fldcw  WORD PTR [edi-0x78]
  40980d:	aaa    
  40980e:	dec    esp
  40980f:	mov    al,0x70
  409811:	push   es
  409812:	imul   edi,DWORD PTR [eax+0x75],0xa5a40559
  409819:	arpl   WORD PTR [ebx],di
  40981b:	repnz scas al,BYTE PTR es:[edi]
  40981d:	iret   
  40981e:	ja     0x4097be
  409820:	aas    
  409821:	add    ebx,DWORD PTR [edx+0x56bdbcb9]
  409827:	stos   BYTE PTR es:[edi],al
  409828:	js     0x4097c1
  40982a:	sar    DWORD PTR [ecx-0xd],cl
  40982d:	icebp  
  40982e:	pop    ebx
  40982f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409830:	add    eax,0x2d320ac
  409835:	inc    ebx
  409836:	add    al,BYTE PTR [edx+0x35ae486e]
  40983c:	lods   al,BYTE PTR ds:[esi]
  40983d:	sub    dh,BYTE PTR [ebp-0x6c]
  409840:	and    al,BYTE PTR [ebx]
  409842:	jl     0x409803
  409844:	mov    ch,0xc8
  409846:	retf   0x40c7
  409849:	div    DWORD PTR [esi-0x12bac82a]
  40984f:	test   eax,0xfcb14cdc
  409854:	aaa    
  409855:	shl    DWORD PTR [edi+0x7c],0x55
  409859:	ret    
  40985a:	dec    edi
  40985b:	sahf   
  40985c:	call   0xff9f:0xada00b88
  409863:	inc    edi
  409864:	fldcw  WORD PTR ds:0x76ab3666
  40986a:	shl    BYTE PTR ds:0x52985d92,1
  409870:	xor    DWORD PTR es:[edx+0x71],edx
  409874:	data16 fwait
  409876:	cmp    BYTE PTR [esi],0xb1
  409879:	loop   0x40989c
  40987b:	xor    BYTE PTR ds:[esp+ecx*4],0xc1
  409880:	rcr    BYTE PTR [edi],0x15
  409883:	loope  0x40983a
  409885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409886:	push   esi
  409887:	aas    
  409888:	jecxz  0x4098df
  40988a:	loope  0x4098c9
  40988c:	push   ds
  40988d:	ret    0xb96
  409890:	jb     0x40989d
  409892:	adc    ecx,DWORD PTR ds:0x67b0ca94
  409898:	ins    BYTE PTR es:[edi],dx
  409899:	mov    DWORD PTR [esi+0x7881c28c],edi
  40989f:	mov    ds:0x42c74e86,al
  4098a4:	xlat   BYTE PTR ds:[ebx]
  4098a5:	ins    DWORD PTR es:[edi],dx
  4098a6:	fisttp QWORD PTR [esi+esi*8+0xdf70290]
  4098ad:	mov    DWORD PTR [ecx+0x14],0xa9f477e8
  4098b4:	pop    DWORD PTR [ecx+0x6aafd55d]
  4098ba:	into   
  4098bb:	xor    eax,0x5dc63d15
  4098c0:	ins    BYTE PTR es:[edi],dx
  4098c1:	leave  
  4098c2:	addr16 test dl,dh
  4098c5:	int3   
  4098c6:	es mov bh,0x23
  4098c9:	das    
  4098ca:	(bad)
  4098cd:	jl     0x4098da
  4098cf:	sub    ah,dl
  4098d1:	dec    ebp
  4098d2:	inc    ecx
  4098d3:	push   ebx
  4098d4:	or     bh,BYTE PTR [ebp+0x46]
  4098d7:	push   esi
  4098d8:	inc    esi
  4098d9:	mov    al,0x5f
  4098db:	bound  esp,QWORD PTR [esi+0x7bac068c]
  4098e1:	(bad)  
  4098e2:	cmp    al,0x4
  4098e4:	std    
  4098e5:	or     esp,DWORD PTR [ebx]
  4098e7:	cld    
  4098e8:	and    ebp,DWORD PTR [ebp-0x3f24c680]
  4098ee:	gs pop ecx
  4098f0:	in     al,dx
  4098f1:	mov    esp,0xc6df91d1
  4098f6:	mov    al,ds:0x237ac84e
  4098fb:	xchg   ebp,eax
  4098fc:	(bad)  
  4098fd:	xor    eax,0x5bc0f5a5
  409902:	xchg   ebp,eax
  409904:	fimul  DWORD PTR es:[ebx-0x3d]
  409908:	xchg   esp,eax
  409909:	test   al,0xca
  40990b:	mov    ah,0x9e
  40990d:	sub    BYTE PTR [edi-0x726792d],ch
  409913:	push   eax
  409914:	fs retf 
  409916:	out    dx,eax
  409917:	and    ch,ah
  409919:	test   al,0xee
  40991b:	inc    esp
  40991c:	lds    ebp,FWORD PTR [eax-0x5f326580]
  409922:	dec    BYTE PTR [ecx+0x32]
  409925:	sub    eax,0x6a517ee8
  40992a:	jne    0x409910
  40992c:	jnp    0x40994a
  40992e:	arpl   WORD PTR [edi+0x1723558b],sp
  409934:	test   BYTE PTR [ecx+0x19],bl
  409937:	jb     0x409901
  409939:	push   eax
  40993a:	loop   0x4098d3
  40993c:	int    0x11
  40993e:	mov    eax,ds:0x3fb815ff
  409943:	pop    ds
  409944:	xor    edx,DWORD PTR [ecx-0x21]
  409947:	stos   DWORD PTR es:[edi],eax
  409948:	or     ebx,eax
  40994a:	out    dx,al
  40994b:	pop    ebx
  40994c:	jns    0x4099c2
  40994e:	leave  
  40994f:	mov    bh,0x63
  409951:	enter  0xb07e,0xfd
  409955:	jae    0x40999a
  409957:	test   al,0x99
  409959:	lea    ebx,[ebx-0x34]
  40995c:	pop    ecx
  40995d:	mov    dl,0x6d
  40995f:	in     al,0xff
  409961:	jge    0x4099b8
  409963:	xchg   ebp,eax
  409964:	mov    esi,0xa17b656d
  409969:	(bad)  
  40996a:	dec    DWORD PTR gs:[edi-0x3d]
  40996e:	mov    al,0x78
  409970:	ret    
  409971:	adc    dl,BYTE PTR [edi+0x61]
  409974:	jo     0x409949
  409976:	std    
  409977:	fwait
  409978:	jl     0x4099c8
  40997a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40997b:	cmp    edx,ecx
  40997d:	push   ds
  40997e:	ins    BYTE PTR es:[edi],dx
  40997f:	sbb    ah,BYTE PTR [edi+ebx*8]
  409982:	adc    al,0x9d
  409984:	cdq    
  409985:	mov    ds:0xbf300552,eax
  40998a:	shl    esi,1
  40998c:	ret    
  40998d:	mov    WORD PTR [edx+0x68],es
  409990:	and    DWORD PTR ss:[edx+0x62],edx
  409994:	ja     0x409978
  409996:	aas    
  409997:	outs   dx,DWORD PTR es:[esi]
  409999:	mul    DWORD PTR [ebx]
  40999b:	xor    DWORD PTR [edx+0x57],eax
  40999e:	xchg   ecx,eax
  40999f:	pop    es
  4099a0:	stos   DWORD PTR es:[edi],eax
  4099a1:	pushf  
  4099a2:	gs sub cl,ah
  4099a5:	xchg   ebp,eax
  4099a6:	inc    edx
  4099a7:	call   0x6dc5bf98
  4099ac:	rcl    BYTE PTR [edi+0x5d],cl
  4099af:	fisub  DWORD PTR [ecx-0x753f6e68]
  4099b5:	mov    cl,0xbe
  4099b7:	pushf  
  4099b8:	call   0x1112f45b
  4099bd:	inc    esi
  4099be:	sbb    eax,0x237625a7
  4099c3:	xchg   esp,eax
  4099c4:	pop    esp
  4099c5:	in     eax,0xfe
  4099c7:	push   0xffffffc9
  4099c9:	xchg   edx,eax
  4099ca:	scas   al,BYTE PTR es:[edi]
  4099cb:	fild   WORD PTR [edi+0x6054861]
  4099d1:	jno    0x409a01
  4099d3:	test   eax,0x1b94b2fa
  4099d8:	fimul  WORD PTR [esi+0x50]
  4099db:	pop    edx
  4099dc:	or     BYTE PTR [ebx-0x63],al
  4099df:	daa    
  4099e0:	jb     0x409a40
  4099e2:	sub    BYTE PTR [ecx-0x4a99c546],cl
  4099e8:	in     al,0x21
  4099ea:	mov    ah,0x50
  4099ec:	jp     0x409a13
  4099ee:	call   0xe0d231ad
  4099f3:	stos   DWORD PTR es:[edi],eax
  4099f4:	sti    
  4099f5:	mov    edi,ss
  4099f7:	mov    DWORD PTR [edi],esp
  4099f9:	sbb    BYTE PTR [esi-0x5102ead1],0x98
  409a00:	push   esp
  409a01:	ins    DWORD PTR es:[edi],dx
  409a02:	push   ebp
  409a03:	jne    0x409a48
  409a05:	mov    al,ds:0xe4c10463
  409a0a:	(bad)  
  409a0b:	out    dx,eax
  409a0c:	fwait
  409a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a0e:	std    
  409a0f:	cmc    
  409a10:	nop
  409a11:	xchg   ebx,eax
  409a12:	fs xchg ebp,eax
  409a14:	inc    esi
  409a15:	out    dx,eax
  409a16:	sbb    esp,0x3e35d019
  409a1c:	push   esi
  409a1e:	mov    cl,0x65
  409a20:	cli    
  409a21:	and    DWORD PTR [edi],ebp
  409a23:	std    
  409a24:	inc    esi
  409a25:	jmp    0x4aaf91ef
  409a2a:	pop    esp
  409a2b:	pop    eax
  409a2c:	ins    DWORD PTR es:[edi],dx
  409a2d:	add    eax,0xf66f7d3d
  409a32:	sahf   
  409a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a34:	dec    ebx
  409a35:	and    DWORD PTR [ecx],esp
  409a37:	sub    eax,ebx
  409a39:	mov    cs,WORD PTR [edi]
  409a3b:	xchg   ecx,eax
  409a3c:	or     al,0x4
  409a3e:	pop    ss
  409a3f:	xchg   DWORD PTR [ecx+0xc],ebp
  409a42:	and    ebx,DWORD PTR [esi+0x37]
  409a45:	(bad)  
  409a46:	int3   
  409a47:	pop    ecx
  409a48:	jg     0x409a68
  409a4a:	xor    al,0xac
  409a4c:	addr16 jmp 0x1a18deb1
  409a52:	scas   al,BYTE PTR es:[edi]
  409a53:	std    
  409a54:	xchg   ebp,eax
  409a55:	cmp    DWORD PTR [ecx-0x59f5e4c6],esp
  409a5b:	sub    dl,BYTE PTR [ebx-0x4b]
  409a5e:	pusha  
  409a5f:	dec    edi
  409a60:	mov    edi,0xc51f7573
  409a65:	push   cs
  409a66:	out    dx,eax
  409a67:	dec    eax
  409a68:	pusha  
  409a69:	imul   ebp,DWORD PTR [ebp-0x549dcb82],0xffffff88
  409a70:	mov    dh,0xda
  409a72:	and    ch,al
  409a74:	jns    0x409a54
  409a76:	sbb    bh,BYTE PTR [ebx]
  409a78:	stos   DWORD PTR es:[edi],eax
  409a79:	loope  0x409ac8
  409a7b:	jb     0x409a98
  409a7d:	cmp    eax,0x66ca6880
  409a82:	ins    BYTE PTR es:[edi],dx
  409a83:	dec    esi
  409a84:	test   eax,0x7632fb4e
  409a89:	jl     0x409a57
  409a8b:	adc    al,0x11
  409a8d:	cmp    al,0x9e
  409a8f:	mov    cl,0xcf
  409a91:	mov    cl,0x1a
  409a93:	mov    cl,dh
  409a95:	ret    0xdc3c
  409a98:	scas   al,BYTE PTR es:[edi]
  409a99:	les    esi,FWORD PTR [ebp+0x69]
  409a9c:	int    0x2e
  409a9e:	lds    ebx,FWORD PTR [ebx-0x22bf69fa]
  409aa4:	bound  ecx,QWORD PTR [edi-0x8]
  409aa7:	add    bh,BYTE PTR [edx+0x1972268d]
  409aad:	loope  0x409ad6
  409aaf:	stc    
  409ab0:	js     0x409a6e
  409ab2:	add    dl,al
  409ab4:	sub    al,0xfd
  409ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab7:	pop    esi
  409ab8:	inc    edx
  409ab9:	jecxz  0x409abd
  409abb:	inc    edx
  409abc:	in     al,0x9f
  409abe:	stos   DWORD PTR es:[edi],eax
  409abf:	jo     0x409aad
  409ac1:	adc    al,0x57
  409ac3:	sahf   
  409ac4:	mov    bh,0x3b
  409ac6:	aas    
  409ac7:	or     DWORD PTR [ebp+0x49],edi
  409aca:	mov    BYTE PTR [edi],0x4e
  409acd:	sbb    eax,0x1ec50546
  409ad2:	and    bl,BYTE PTR [edi+0x2569f504]
  409ad8:	jecxz  0x409aac
  409ada:	push   edi
  409adb:	dec    edi
  409adc:	cld    
  409add:	cdq    
  409ade:	(bad)  
  409adf:	lods   al,BYTE PTR ds:[esi]
  409ae0:	call   0xec27:0x3b68c0ac
  409ae7:	test   eax,0x6a22e889
  409aec:	jae    0x409b2b
  409aee:	shr    esi,0x7f
  409af1:	loop   0x409ae6
  409af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af4:	jbe    0x409b13
  409af6:	jmp    0x5cc0e3bf
  409afb:	out    dx,al
  409afc:	and    al,0x46
  409afe:	call   0x26b4:0x1996f2b6
  409b05:	mov    ds:0x40ec5d08,eax
  409b0a:	xlat   BYTE PTR fs:[ebx]
  409b0c:	js     0x409b67
  409b0e:	cmp    ecx,DWORD PTR [edi+esi*4]
  409b11:	ja     0x409aab
  409b13:	lods   eax,DWORD PTR ds:[esi]
  409b14:	cld    
  409b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b16:	jmp    DWORD PTR [esi]
  409b18:	sub    eax,0xccc05a69
  409b1d:	rol    DWORD PTR [edi-0x24954d41],cl
  409b23:	pop    edx
  409b24:	add    BYTE PTR [edx],ch
  409b26:	push   esi
  409b27:	xchg   esi,eax
  409b28:	lea    edi,[esi+0x24]
  409b2b:	mov    dl,0x44
  409b2d:	sbb    eax,0x9e1de15b
  409b32:	outs   dx,BYTE PTR ds:[esi]
  409b33:	jmp    0x409b54
  409b35:	mov    eax,DWORD PTR [ebp-0x76]
  409b38:	popf   
  409b39:	and    eax,0x6bde8b14
  409b3e:	push   edi
  409b3f:	jle    0x409b3c
  409b41:	popa   
  409b42:	add    eax,0xdaa191d0
  409b47:	fst    DWORD PTR [ebx-0x78]
  409b4a:	lock add cl,BYTE PTR [ebp-0x11]
  409b4e:	push   edx
  409b4f:	mov    edx,0xd68aaeb
  409b54:	call   0x2ac1ad71
  409b59:	fmul   DWORD PTR [ebx]
  409b5b:	mov    ds:0xf30dd195,eax
  409b60:	mov    eax,ds:0x4f903971
  409b65:	jecxz  0x409bca
  409b67:	(bad)  
  409b68:	cmc    
  409b69:	rcl    BYTE PTR [ecx+ebx*8],cl
  409b6c:	inc    ebx
  409b6d:	sub    cl,0x1a
  409b70:	cmp    bl,bh
  409b72:	xor    eax,0x39176815
  409b77:	int    0x23
  409b79:	and    ecx,DWORD PTR [ecx+0x1bd64844]
  409b7f:	cli    
  409b80:	mov    ds:0x7b75c355,eax
  409b85:	xor    bl,BYTE PTR [ecx]
  409b87:	pop    es
  409b88:	sbb    DWORD PTR [edx+eax*2+0xc98b185],edx
  409b8f:	inc    eax
  409b90:	out    dx,eax
  409b91:	add    BYTE PTR [esi-0x606086ec],dh
  409b97:	pop    ds
  409b98:	push   ss
  409b99:	jmp    0xa0afed8b
  409b9e:	or     ah,BYTE PTR ds:0xca55a4df
  409ba4:	mov    bl,0x65
  409ba6:	mov    esi,DWORD PTR [ebp-0x7c6b7c44]
  409bac:	pop    ecx
  409bad:	cwde   
  409bae:	arpl   WORD PTR [edx+ebx*8],cx
  409bb1:	sub    eax,0xf968071f
  409bb6:	or     eax,0xe973c8a0
  409bbb:	das    
  409bbc:	mov    edx,0x48758074
  409bc1:	inc    ecx
  409bc2:	(bad)  
  409bc3:	and    eax,DWORD PTR [ecx]
  409bc5:	stos   BYTE PTR es:[edi],al
  409bc6:	adc    eax,0x6e7f2265
  409bcb:	(bad)  
  409bcc:	mov    esp,0xcf18567b
  409bd1:	jle    0x409baf
  409bd3:	push   ds
  409bd4:	mov    ecx,DWORD PTR [ecx]
  409bd6:	or     BYTE PTR [eax],ah
  409bd8:	rol    BYTE PTR [edx],0xb4
  409bdb:	mov    esi,0x9d629c5
  409be0:	mov    dl,0x35
  409be2:	mov    edi,0xace13ed4
  409be7:	les    ebp,FWORD PTR [edi]
  409be9:	mov    ds:0xd8d05bb0,eax
  409bee:	and    al,0xc6
  409bf0:	pushf  
  409bf1:	imul   ecx,ecx,0x5dce78f2
  409bf7:	mov    ds,WORD PTR [esi-0x26]
  409bfa:	push   ecx
  409bfb:	sub    al,0xc1
  409bfd:	(bad)  
  409bfe:	bound  edx,QWORD PTR [ebx+0x7b]
  409c01:	and    al,0x8c
  409c03:	mov    eax,0xde815c4d
  409c08:	and    DWORD PTR [esi-0x5a],esp
  409c0b:	jns    0x409be8
  409c0d:	aad    0xcc
  409c0f:	sbb    BYTE PTR [eax+0x12b78e79],0xd6
  409c16:	inc    esp
  409c17:	add    BYTE PTR [ecx+ecx*8-0x48fe195f],0x99
  409c1f:	xor    ecx,DWORD PTR [ebp-0x49e1194e]
  409c25:	shr    DWORD PTR [edi],1
  409c27:	fistp  DWORD PTR [edi+0x7c]
  409c2a:	cmp    eax,0xf639f31a
  409c2f:	shl    BYTE PTR [eax-0x1e],1
  409c32:	ins    DWORD PTR es:[edi],dx
  409c33:	mov    BYTE PTR [edi+0x36],ah
  409c36:	pop    edx
  409c37:	outs   dx,DWORD PTR ds:[esi]
  409c38:	push   edx
  409c39:	ins    DWORD PTR es:[edi],dx
  409c3a:	inc    edi
  409c3b:	cmc    
  409c3c:	pop    ecx
  409c3d:	or     dh,BYTE PTR [esi+esi*2+0x62]
  409c41:	dec    ebp
  409c42:	push   ss
  409c43:	jne    0x409c01
  409c45:	stos   DWORD PTR es:[edi],eax
  409c46:	dec    esp
  409c47:	leave  
  409c48:	sub    edi,edi
  409c4a:	outs   dx,BYTE PTR ds:[esi]
  409c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c4c:	push   es
  409c4d:	(bad)  
  409c4e:	int3   
  409c4f:	and    BYTE PTR [ebx],bh
  409c51:	sbb    ecx,DWORD PTR [esp+esi*4+0x52]
  409c55:	mov    BYTE PTR [ebx+0x2a],bh
  409c58:	xor    eax,0x682737d5
  409c5d:	daa    
  409c5e:	push   esi
  409c5f:	pop    esp
  409c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c61:	stc    
  409c62:	push   0x5e
  409c64:	adc    edi,DWORD PTR [edi]
  409c66:	loop   0x409ca3
  409c68:	cmp    DWORD PTR [ecx],eax
  409c6a:	push   DWORD PTR [eax-0x11482fb2]
  409c70:	push   ss
  409c71:	xchg   esi,eax
  409c72:	test   eax,0xbe75b5d5
  409c77:	std    
  409c78:	enter  0x1f5f,0x84
  409c7c:	jecxz  0x409c73
  409c7e:	out    dx,eax
  409c7f:	daa    
  409c80:	add    DWORD PTR [esi+0x33b580],edx
  409c86:	je     0x409c20
  409c88:	je     0x409c22
  409c8a:	inc    eax
  409c8b:	mov    ?,WORD PTR [edi-0x1c]
  409c8e:	in     eax,0x9b
  409c90:	fcmovne st,st(4)
  409c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c93:	sbb    al,0xee
  409c95:	and    eax,0x19bb1d08
  409c9a:	xchg   BYTE PTR [ebp-0x594cd239],cl
  409ca0:	rcr    ebp,1
  409ca2:	adc    al,0x4
  409ca4:	add    al,BYTE PTR [ebx]
  409ca6:	int3   
  409ca7:	pop    esi
  409ca8:	inc    esi
  409ca9:	add    ch,BYTE PTR [esi+0x3dd4d9aa]
  409caf:	add    DWORD PTR [ebp-0x739e5272],edi
  409cb5:	fisttp DWORD PTR [ecx+eiz*2+0x286fe12a]
  409cbc:	pop    edi
  409cbd:	push   es
  409cbe:	adc    ah,BYTE PTR [esi+0x67]
  409cc1:	jnp    0x409cb3
  409cc3:	xor    ebp,DWORD PTR ds:[edi+edx*1-0x447a19c3]
  409ccb:	dec    eax
  409ccc:	ror    DWORD PTR [ebx+0x3f],1
  409ccf:	adc    esi,0x6ddab7c7
  409cd5:	shl    DWORD PTR [edi-0x3],1
  409cd8:	adc    al,0x90
  409cda:	fcmovb st,st(3)
  409cdc:	push   es
  409cdd:	mov    dl,0xa3
  409cdf:	fldcw  WORD PTR [eax-0x29a0c63d]
  409ce5:	sub    esi,DWORD PTR [edi+0x5ee2088a]
  409ceb:	cs jp  0x409ce5
  409cee:	jle    0x409cb1
  409cf0:	jecxz  0x409d3c
  409cf2:	adc    esi,DWORD PTR [ebx+0x34]
  409cf5:	dec    esi
  409cf6:	jmp    DWORD PTR [ebx-0x3]
  409cf9:	stc    
  409cfa:	out    0x94,al
  409cfc:	ja     0x409d47
  409cfe:	fstp   st(3)
  409d00:	enter  0x2629,0xc8
  409d04:	div    BYTE PTR [edx-0x480c288c]
  409d0a:	fild   QWORD PTR ds:0xdc94ef02
  409d10:	in     eax,0x7d
  409d12:	sub    al,0x2f
  409d14:	jnp    0x409d3b
  409d16:	sahf   
  409d17:	or     al,0x9
  409d19:	lock orps xmm7,xmm1
  409d1d:	pop    esp
  409d1e:	jns    0x409d5e
  409d20:	xchg   DWORD PTR [ebx],edx
  409d22:	(bad)  
  409d23:	mov    dl,0x2d
  409d25:	inc    eax
  409d26:	pop    edi
  409d27:	mov    ch,0x1b
  409d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d2a:	rol    DWORD PTR [ebp+0x2d],1
  409d2d:	daa    
  409d2e:	pop    ss
  409d2f:	mov    DWORD PTR [ebx+0x69],edx
  409d32:	sbb    bh,BYTE PTR [ebx+0x2d]
  409d35:	sbb    eax,0x8c1b2b34
  409d3a:	mov    edi,0x8c562310
  409d3f:	mov    bh,0x6b
  409d41:	push   ebx
  409d42:	xchg   ebp,eax
  409d43:	ret    
  409d44:	mov    bh,0xe1
  409d46:	repz push esp
  409d48:	jg     0x409d29
  409d4a:	push   ss
  409d4b:	shl    dl,1
  409d4d:	jl     0x409dbb
  409d4f:	mov    dl,0x25
  409d51:	fadd   st(4),st
  409d53:	mov    esp,DWORD PTR ds:0xb32aab88
  409d59:	sub    al,0x1f
  409d5b:	mov    esi,0x1d5cdeb9
  409d60:	push   0x3
  409d62:	dec    edi
  409d63:	ficomp WORD PTR ds:[ebp+0x1a20a3c7]
  409d6a:	(bad)  
  409d6b:	pop    es
  409d6c:	xor    BYTE PTR [ebp+0x1c],dh
  409d6f:	add    DWORD PTR [edx-0x7456eb03],ecx
  409d75:	lds    eax,FWORD PTR [edi]
  409d77:	cmp    dh,BYTE PTR [ebp-0xb]
  409d7a:	cdq    
  409d7b:	jp     0x409d20
  409d7d:	mov    al,0x68
  409d7f:	das    
  409d80:	cmc    
  409d81:	xor    ah,ah
  409d83:	sbb    esi,ebp
  409d85:	test   eax,0xa2bf64
  409d8a:	mov    ?,WORD PTR [ebx+0x6fa50935]
  409d90:	enter  0x4293,0x44
  409d94:	pop    ebp
  409d95:	into   
  409d96:	xor    cl,dl
  409d98:	jno    0x409dac
  409d9a:	scas   eax,DWORD PTR es:[edi]
  409d9b:	xor    edi,DWORD PTR [esi]
  409d9d:	cmp    edi,DWORD PTR [edx]
  409d9f:	adc    esp,DWORD PTR [edi+edi*2-0x64807441]
  409da6:	inc    esp
  409da7:	xchg   esp,eax
  409da8:	push   ebp
  409da9:	dec    edx
  409daa:	adc    eax,0xffffffab
  409dad:	pop    eax
  409dae:	jle    0x409da9
  409db0:	vunpckhpd xmm5,xmm0,XMMWORD PTR [ecx-0x3996fac5]
  409db8:	inc    ecx
  409db9:	mov    ch,0x80
  409dbb:	outs   dx,BYTE PTR ds:[esi]
  409dbc:	mov    bl,0xf4
  409dbe:	call   0xb98eb62c
  409dc3:	fsubr  st(5),st
  409dc5:	in     eax,0x4e
  409dc7:	inc    esp
  409dc8:	fisubr DWORD PTR [ecx+0x2c3ae6da]
  409dce:	into   
  409dcf:	lods   al,BYTE PTR ds:[esi]
  409dd0:	add    ebp,edi
  409dd2:	xor    eax,ecx
  409dd4:	inc    edi
  409dd5:	push   ds
  409dd6:	cli    
  409dd7:	mov    ?,WORD PTR [esi+0x16751d08]
  409ddd:	pushf  
  409dde:	jge    0x409e5d
  409de0:	mov    BYTE PTR [edi+ebx*4+0x24],0xb0
  409de5:	cmp    ch,BYTE PTR [eax+0x5b]
  409de8:	les    ebx,FWORD PTR [edx-0x4f4d1745]
  409dee:	rcl    ebp,cl
  409df0:	pop    esp
  409df1:	and    esi,DWORD PTR [edx+0x52]
  409df4:	and    esp,DWORD PTR [ebx-0x7b]
  409df7:	xchg   esp,eax
  409df8:	in     eax,dx
  409df9:	jbe    0x409dd3
  409dfb:	mov    edx,0xd33ee2b3
  409e00:	dec    esp
  409e01:	aaa    
  409e02:	and    BYTE PTR [ebx-0x1a],0x46
  409e06:	pop    edx
  409e07:	dec    edx
  409e08:	pop    eax
  409e09:	stos   BYTE PTR es:[edi],al
  409e0a:	jae    0x409df2
  409e0c:	js     0x409e3e
  409e0e:	or     esp,DWORD PTR [ecx+eiz*8-0x4c]
  409e12:	or     bl,BYTE PTR [ecx+0x490f7dad]
  409e18:	stc    
  409e19:	repnz push esi
  409e1b:	xor    DWORD PTR [edx+ecx*8],ebx
  409e1e:	push   edx
  409e1f:	push   edx
  409e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e21:	out    0x6d,al
  409e23:	ss push ebp
  409e25:	js     0x409dae
  409e27:	add    BYTE PTR [ecx-0x140426ce],bl
  409e2d:	mov    DWORD PTR [ebp-0x45f7d929],0xb2cfd17b
  409e37:	retf   0x8721
  409e3a:	push   edx
  409e3b:	adc    ah,BYTE PTR [ebx+0x4fd0eeca]
  409e41:	iret   
  409e42:	jbe    0x409e00
  409e44:	jo     0x409e5d
  409e46:	loop   0x409de3
  409e48:	jbe    0x409e30
  409e4a:	mov    al,ds:0xd8f0bb31
  409e4f:	sbb    BYTE PTR [edi+0x51d1b38a],dl
  409e55:	call   0x68890b46
  409e5a:	mov    dh,0x29
  409e5c:	pop    edx
  409e5d:	jecxz  0x409e72
  409e5f:	pop    ds
  409e60:	(bad)  
  409e62:	or     dl,BYTE PTR [ebp+0x1dd22f24]
  409e68:	ret    0x181a
  409e6b:	xor    DWORD PTR [ebp-0x31],edi
  409e6e:	imul   eax,DWORD PTR [ebx],0xfffffffc
  409e71:	imul   esi,DWORD PTR [bp+di-0x1e],0x2b6107a9
  409e79:	mov    WORD PTR [ebx-0x690e954e],cs
  409e7f:	mov    ds:0xb9fcbf03,al
  409e84:	xchg   ebp,esi
  409e86:	or     BYTE PTR [eax],ah
  409e88:	pusha  
  409e89:	int    0x72
  409e8b:	rcl    BYTE PTR [ecx+0x2e678581],1
  409e91:	push   edi
  409e92:	leave  
  409e93:	sub    eax,0x7d0f29fb
  409e98:	inc    ecx
  409e99:	add    DWORD PTR [edi+edi*2-0x3c],eax
  409e9d:	aaa    
  409e9e:	out    0x1f,eax
  409ea0:	cdq    
  409ea1:	sbb    bl,ch
  409ea3:	cmc    
  409ea4:	jae    0x409ef3
  409ea6:	adc    edi,edx
  409ea8:	mov    cl,BYTE PTR [eax+eax*8-0x15]
  409eac:	inc    esp
  409ead:	jbe    0x409f12
  409eaf:	in     eax,0x55
  409eb1:	pusha  
  409eb2:	repnz mov ds:0x34c4a34e,eax
  409eb8:	data16 std 
  409eba:	push   ebx
  409ebb:	das    
  409ebc:	or     DWORD PTR [ebx-0x3e],ebx
  409ebf:	shl    BYTE PTR [esi-0x1f165890],cl
  409ec5:	scas   al,BYTE PTR es:[edi]
  409ec6:	dec    edx
  409ec7:	jne    0x409f04
  409ec9:	and    eax,0x33225ccf
  409ece:	fimul  WORD PTR [ebx-0x21d1f4d8]
  409ed4:	call   0xad6e:0x55afd69e
  409edb:	mov    edx,0x9a392402
  409ee0:	jnp    0x409f39
  409ee2:	sub    esp,ebx
  409ee4:	je     0x409ee3
  409ee6:	nop
  409ee7:	scas   al,BYTE PTR es:[edi]
  409ee8:	push   edx
  409ee9:	jb     0x409f30
  409eeb:	lahf   
  409eec:	fcom   DWORD PTR [edx+0x2b96b299]
  409ef2:	xor    edx,DWORD PTR [edx-0x3c4f6c0f]
  409ef8:	mov    bh,0x8b
  409efa:	pop    esi
  409efb:	fidivr DWORD PTR [eax+0x5bbfb970]
  409f01:	(bad)  
  409f02:	cmp    ch,bh
  409f04:	test   BYTE PTR [edi],ah
  409f06:	and    BYTE PTR [edx+0x8],ch
  409f09:	push   0x344c2a96
  409f0e:	in     eax,dx
  409f0f:	fild   DWORD PTR [esi]
  409f11:	mov    dh,BYTE PTR [edx]
  409f13:	pop    ecx
  409f14:	test   ecx,edi
  409f16:	scas   eax,DWORD PTR es:[edi]
  409f17:	mov    ch,0xe
  409f19:	ret    
  409f1a:	jg     0x409ef8
  409f1c:	dec    eax
  409f1d:	ja     0x409f4f
  409f1f:	ds ins DWORD PTR es:[edi],dx
  409f21:	inc    ebx
  409f22:	xor    al,0x41
  409f24:	jmp    0x409eb4
  409f26:	ret    
  409f27:	inc    ebp
  409f28:	out    dx,eax
  409f29:	rcr    cl,0xe8
  409f2c:	xlat   BYTE PTR ds:[ebx]
  409f2d:	(bad)  
  409f2e:	fst    DWORD PTR [ecx+0x32]
  409f31:	cli    
  409f32:	or     al,0x22
  409f34:	mov    bh,0x65
  409f36:	or     ecx,DWORD PTR [ecx]
  409f38:	in     eax,0xd
  409f3a:	in     al,0xff
  409f3c:	sbb    eax,0x6cfdf28d
  409f41:	xor    ah,0xef
  409f44:	sti    
  409f45:	pop    edx
  409f46:	add    DWORD PTR [ecx+0x22c11d64],esi
  409f4c:	mov    ch,0x9c
  409f4e:	jecxz  0x409ed5
  409f50:	mov    ch,0xdb
  409f52:	fnstsw ax
  409f54:	nop
  409f55:	int3   
  409f56:	retf   0xb0ff
  409f59:	cmp    esp,edi
  409f5b:	imul   esp,DWORD PTR [esi+0x68],0xffffff8f
  409f5f:	aas    
  409f60:	and    cl,bh
  409f62:	mov    al,ds:0x6223eaf8
  409f67:	sahf   
  409f68:	sub    DWORD PTR [eax-0x4b],ebx
  409f6b:	test   eax,0x340dcab3
  409f70:	dec    esp
  409f71:	stos   BYTE PTR es:[edi],al
  409f72:	(bad)  
  409f73:	and    BYTE PTR [eax+edx*4],bl
  409f76:	mov    bl,0x2c
  409f78:	cld    
  409f79:	cld    
  409f7a:	scas   al,BYTE PTR es:[edi]
  409f7b:	icebp  
  409f7c:	test   al,0x74
  409f7e:	int    0x6
  409f80:	test   BYTE PTR [ebp+0xb85f4d1],bh
  409f86:	pop    ebp
  409f87:	push   eax
  409f88:	les    esi,FWORD PTR [edi-0x17]
  409f8b:	adc    cl,BYTE PTR [edx]
  409f8d:	push   0xffffff90
  409f8f:	or     ch,BYTE PTR [eax]
  409f91:	and    eax,0x1bbffa2f
  409f96:	adc    edi,DWORD PTR [ecx+0x60d1c91b]
  409f9c:	mov    DWORD PTR cs:[esi-0x6],ebp
  409fa0:	jmp    0x36b7:0x15527ac3
  409fa7:	int    0x68
  409fa9:	push   ebx
  409faa:	ret    
  409fab:	enter  0xa6f6,0xe3
  409faf:	push   0x2650844d
  409fb4:	jno    0x409fb7
  409fb6:	shr    dl,cl
  409fb8:	pushf  
  409fb9:	inc    edi
  409fba:	mov    ecx,0xde88391d
  409fbf:	mov    eax,0x972430b2
  409fc4:	jl     0x40a004
  409fc6:	frstor [edx-0x364df09d]
  409fcc:	mov    esi,0xe2731c40
  409fd1:	sbb    BYTE PTR [edx+0x38],al
  409fd4:	mov    edx,DWORD PTR [ecx+0x3]
  409fd7:	(bad)  
  409fd8:	call   FWORD PTR [esi+0x737d2fb9]
  409fde:	popf   
  409fdf:	mov    bl,0x34
  409fe1:	out    0x54,al
  409fe3:	neg    BYTE PTR [ecx-0x2e]
  409fe6:	lods   eax,DWORD PTR ds:[esi]
  409fe7:	(bad)  
  409fe9:	and    al,0x2
  409feb:	xor    al,0xfc
  409fed:	cmp    edx,esi
  409fef:	and    ebp,eax
  409ff1:	aad    0x1d
  409ff3:	adc    bl,al
  409ff5:	daa    
  409ff6:	gs dec ebx
  409ff8:	mov    ch,BYTE PTR [esi]
  409ffa:	(bad)  
  409ffb:	sub    ch,BYTE PTR [ebp+ecx*4+0x11794f5b]
  40a002:	repnz push 0x68
  40a005:	xor    eax,0xe6ed0f6
  40a00a:	lahf   
  40a00b:	dec    edx
  40a00c:	jmp    0xb6a:0x9aef0db3
  40a013:	jo     0x40a01a
  40a015:	or     al,0x93
  40a017:	mov    ds,esp
  40a019:	je     0x409fa7
  40a01b:	jp     0x40a099
  40a01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a01e:	or     DWORD PTR [esi+0x43cd6561],esp
  40a024:	cmp    eax,ebp
  40a026:	cmp    al,0x3c
  40a028:	inc    esi
  40a029:	push   0x5a8b43a8
  40a02e:	lds    esi,FWORD PTR [eax+0x27]
  40a031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a032:	sub    eax,0xbb3bdfc3
  40a037:	ins    BYTE PTR es:[edi],dx
  40a038:	out    dx,eax
  40a039:	aaa    
  40a03a:	dec    esp
  40a03b:	xor    al,0x24
  40a03d:	adc    eax,0xe2dc3a57
  40a042:	or     al,0x7
  40a044:	hlt    
  40a045:	and    dh,BYTE PTR [edx+0x36]
  40a048:	mov    eax,0x25becad9
  40a04d:	hlt    
  40a04e:	mov    esi,0xd1a3fe15
  40a053:	jno    0x40a037
  40a055:	popf   
  40a056:	xchg   ebx,eax
  40a057:	loope  0x40a0a8
  40a059:	pushf  
  40a05a:	jnp    0x40a041
  40a05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a05d:	inc    edx
  40a05e:	jge    0x40a098
  40a060:	clc    
  40a061:	jp     0x40a046
  40a063:	rcr    cl,0x56
  40a066:	xchg   ebx,eax
  40a068:	adc    ecx,esi
  40a06a:	sbb    al,ch
  40a06c:	cmp    dh,BYTE PTR [eax]
  40a06e:	xchg   esi,eax
  40a070:	mov    ebp,0xbb01818b
  40a075:	ds test eax,0x32d371cd
  40a07b:	or     al,0xb8
  40a07d:	dec    esp
  40a07e:	popf   
  40a07f:	gs out 0xcf,eax
  40a082:	loope  0x40a007
  40a084:	ror    DWORD PTR [ecx-0x2c],cl
  40a087:	les    esp,FWORD PTR [ebx]
  40a089:	icebp  
  40a08a:	inc    edx
  40a08b:	inc    ebx
  40a08c:	jecxz  0x40a0ed
  40a08e:	imul   edi,DWORD PTR [ecx-0x73],0x7f
  40a092:	sbb    al,0x23
  40a094:	inc    ebx
  40a095:	mov    al,ds:0x400a72a
  40a09a:	popf   
  40a09b:	and    eax,0x8c07e18d
  40a0a0:	inc    edx
  40a0a1:	jg     0x40a034
  40a0a3:	lahf   
  40a0a4:	push   esp
  40a0a5:	adc    al,0x79
  40a0a7:	xor    DWORD PTR [edi],esp
  40a0a9:	sbb    DWORD PTR [esi+0x5c],edi
  40a0ac:	adc    edi,DWORD PTR [edi+0x2a99b06f]
  40a0b2:	cwde   
  40a0b3:	iret   
  40a0b4:	jo     0x40a081
  40a0b6:	mov    ebx,0xcc3e93de
  40a0bb:	inc    edx
  40a0bc:	pop    ebx
  40a0bd:	arpl   bp,sp
  40a0bf:	pusha  
  40a0c0:	adc    DWORD PTR [eax+0x77ed5c58],0xb5487808
  40a0ca:	imul   esp,DWORD PTR [ecx],0xfffffff9
  40a0cd:	push   0xffffff86
  40a0cf:	daa    
  40a0d0:	fwait
  40a0d1:	test   al,0x6b
  40a0d3:	inc    esi
  40a0d4:	mov    bl,0xe6
  40a0d6:	call   0xba37d220
  40a0db:	mov    ds:0x83c3c9de,eax
  40a0e0:	fsincos 
  40a0e2:	inc    esi
  40a0e3:	cld    
  40a0e4:	fidivr DWORD PTR [ebx+eax*1-0x62f5844]
  40a0eb:	cmp    dl,cl
  40a0ed:	cmc    
  40a0ee:	sub    esp,esi
  40a0f0:	sbb    BYTE PTR [edx+ebx*2+0x9cdc2eb],al
  40a0f7:	int    0x2f
  40a0f9:	fs jno 0x40a138
  40a0fc:	cmp    esi,DWORD PTR [eax]
  40a0fe:	adc    edx,DWORD PTR [ebp+0x1b9fbae2]
  40a104:	arpl   WORD PTR [edi+esi*4-0x5f],si
  40a108:	or     cl,bh
  40a10a:	add    bl,BYTE PTR [edx+0x5c]
  40a10d:	mov    ?,ecx
  40a10f:	mov    DWORD PTR [ebp-0x75],edi
  40a112:	push   esi
  40a113:	push   edx
  40a114:	xor    al,0xa1
  40a116:	and    DWORD PTR [esi-0x4ce8c893],0x81954ea8
  40a120:	test   bh,al
  40a122:	test   BYTE PTR [ecx],bh
  40a124:	sahf   
  40a125:	lds    edi,FWORD PTR [edx+0x7ee93d76]
  40a12b:	outs   dx,DWORD PTR ds:[esi]
  40a12c:	repnz aaa 
  40a12e:	sbb    DWORD PTR [eax],esi
  40a130:	jl     0x40a141
  40a132:	int3   
  40a133:	xor    edx,ebx
  40a135:	rcr    BYTE PTR ds:[ebx-0x74],cl
  40a139:	jge    0x40a170
  40a13b:	das    
  40a13c:	lahf   
  40a13d:	imul   edx,eax,0x36238fae
  40a143:	cmp    al,0x2a
  40a145:	imul   esi,DWORD PTR [ebp+0xc],0xffffff84
  40a149:	test   DWORD PTR [eax-0x58584137],ebx
  40a14f:	popa   
  40a150:	mov    ds:0x60d6265d,eax
  40a155:	test   al,0x44
  40a157:	out    0xc5,eax
  40a159:	movaps XMMWORD PTR [ecx-0xf],xmm4
  40a15d:	retf   
  40a15e:	sbb    DWORD PTR ds:0x6a2243e,0xfffffff6
  40a165:	add    al,0xbf
  40a167:	shr    DWORD PTR [ebp+0x81e3ecd],cl
  40a16d:	push   edi
  40a16e:	lds    eax,FWORD PTR [edi]
  40a170:	cmp    al,0xcd
  40a172:	loopne 0x40a125
  40a174:	ret    
  40a175:	xchg   ebp,eax
  40a176:	mov    eax,0x14c47dbb
  40a17b:	bound  eax,QWORD PTR [edx+0x6de3a752]
  40a181:	cmp    bh,BYTE PTR [edi-0x63b28f4f]
  40a187:	add    DWORD PTR [ebx+0x6b2ce684],ebp
  40a18d:	aaa    
  40a18e:	shl    DWORD PTR [edx],0xf0
  40a191:	arpl   WORD PTR [ebx],di
  40a193:	ins    BYTE PTR es:[edi],dx
  40a194:	sbb    ebp,DWORD PTR [ebx+0xd]
  40a197:	cmp    BYTE PTR [ecx-0x78],ch
  40a19a:	fstp   TBYTE PTR [esp+eax*2]
  40a19d:	cmp    DWORD PTR [ebp-0x79],0x5d
  40a1a1:	repnz fiadd DWORD PTR [ebp+0x6e]
  40a1a5:	out    dx,eax
  40a1a6:	sub    esp,DWORD PTR [esi+0x70]
  40a1a9:	push   eax
  40a1aa:	mov    bh,0x4c
  40a1ac:	mov    DWORD PTR [ebx],ebp
  40a1ae:	retf   
  40a1af:	(bad)  
  40a1b0:	mov    ebx,DWORD PTR [edx]
  40a1b2:	or     edi,0x195516d3
  40a1b8:	cmp    eax,0x420a1d82
  40a1bd:	ficomp DWORD PTR [esi-0x7e]
  40a1c0:	xchg   esi,eax
  40a1c1:	in     al,0x97
  40a1c3:	and    ebp,DWORD PTR [ebx-0x21]
  40a1c6:	adc    BYTE PTR [edx-0x21480dc0],dl
  40a1cc:	push   esi
  40a1cd:	push   cs
  40a1ce:	ss data16 mov bl,0x3d
  40a1d2:	adc    al,0x33
  40a1d4:	or     eax,0xa7a62ec0
  40a1d9:	sub    DWORD PTR [edi],ecx
  40a1db:	mov    eax,ds:0xdde9143
  40a1e0:	dec    edx
  40a1e1:	mov    ah,0xc6
  40a1e3:	hlt    
  40a1e4:	in     eax,0x36
  40a1e6:	mov    DWORD PTR ds:0xfc71c7f2,ebp
  40a1ec:	das    
  40a1ed:	add    eax,0x707aa496
  40a1f2:	cmp    bl,BYTE PTR [ebx+eiz*2-0x1d]
  40a1f6:	or     bh,dl
  40a1f8:	sub    eax,0x900c6903
  40a1fd:	pop    edx
  40a1fe:	loop   0x40a1ff
  40a200:	sar    DWORD PTR [edx-0x5fa52314],cl
  40a206:	dec    DWORD PTR [ebx-0xe8c920]
  40a20c:	(bad)  
  40a20d:	push   0x4a02b872
  40a212:	pusha  
  40a213:	in     al,0x2b
  40a215:	jno    0x40a25d
  40a217:	jbe    0x40a225
  40a219:	into   
  40a21a:	dec    eax
  40a21b:	jae    0x40a20f
  40a21d:	fdiv   DWORD PTR [eax]
  40a21f:	and    ebx,DWORD PTR [edi+ecx*4-0x21]
  40a223:	call   0x5c3644a7
  40a228:	xchg   ecx,eax
  40a229:	xchg   ebp,eax
  40a22a:	jecxz  0x40a25e
  40a22c:	dec    ecx
  40a22d:	enter  0xd64f,0x7a
  40a231:	call   0x562e5f75
  40a236:	adc    eax,0x1c8ca4cd
  40a23b:	shr    BYTE PTR [esi+edi*8+0x4953ff40],0x88
  40a243:	out    0x7,eax
  40a245:	call   0xe46e:0x78bbe5c2
  40a24c:	sub    ch,BYTE PTR [ecx]
  40a24e:	cmp    ebx,DWORD PTR [ecx]
  40a250:	sub    al,0x50
  40a252:	imul   eax,edi,0xd65544a7
  40a258:	dec    ebx
  40a259:	or     al,0x32
  40a25b:	ret    
  40a25c:	out    0x51,al
  40a25e:	sar    DWORD PTR [edi],1
  40a260:	xlat   BYTE PTR ds:[ebx]
  40a261:	scas   eax,DWORD PTR es:[edi]
  40a262:	sti    
  40a263:	push   eax
  40a264:	mov    ebx,0x93d8957f
  40a269:	daa    
  40a26a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a26b:	in     eax,0x57
  40a26d:	cwde   
  40a26e:	fsub   QWORD PTR [esi+0x10]
  40a271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a272:	fwait
  40a273:	xor    eax,0xe440a082
  40a278:	jecxz  0x40a2eb
  40a27a:	dec    eax
  40a27b:	xlat   BYTE PTR ds:[ebx]
  40a27c:	inc    ebx
  40a27d:	jecxz  0x40a20a
  40a27f:	(bad)  
  40a280:	xlat   BYTE PTR ds:[ebx]
  40a281:	sar    esp,cl
  40a283:	push   ds
  40a284:	movsx  ebx,WORD PTR [edx+0x4e]
  40a288:	sub    DWORD PTR [edx+0x16],ecx
  40a28b:	dec    ebp
  40a28c:	ret    0x175b
  40a28f:	dec    ecx
  40a290:	test   DWORD PTR [edx],esi
  40a292:	dec    edi
  40a293:	and    al,0xff
  40a295:	inc    ebp
  40a296:	shl    DWORD PTR [ebx+eax*4],1
  40a299:	test   ecx,0x75ace522
  40a29f:	sbb    ch,BYTE PTR ds:0x5f191687
  40a2a5:	int3   
  40a2a6:	mov    BYTE PTR [ecx],ah
  40a2a8:	ds xor al,0x6
  40a2ab:	unpckhps xmm7,XMMWORD PTR [esi+eax*8-0x44]
  40a2b0:	or     DWORD PTR [edx+0x78],esi
  40a2b3:	clc    
  40a2b4:	push   ecx
  40a2b5:	inc    esi
  40a2b6:	int    0xae
  40a2b8:	fucomp st(3)
  40a2ba:	sahf   
  40a2bb:	sbb    al,0xd9
  40a2bd:	sar    DWORD PTR [esi+0x5f],0xa7
  40a2c1:	sbb    DWORD PTR [eax+0x232e99b5],eax
  40a2c7:	mov    fs,WORD PTR [edi-0x50d07d8f]
  40a2cd:	push   edi
  40a2ce:	xchg   ebp,eax
  40a2cf:	mov    esi,0x8b36e014
  40a2d4:	in     al,dx
  40a2d5:	bound  ecx,QWORD PTR [ebp+0x31d43bb9]
  40a2db:	push   eax
  40a2dc:	sbb    eax,0x4add0f27
  40a2e1:	stos   DWORD PTR es:[edi],eax
  40a2e2:	push   edx
  40a2e3:	int    0xe2
  40a2e5:	push   ecx
  40a2e6:	fcomip st,st(6)
  40a2e8:	fisttp QWORD PTR [eax]
  40a2ea:	mov    eax,0xe75359a9
  40a2ef:	lods   al,BYTE PTR ds:[esi]
  40a2f0:	aas    
  40a2f1:	div    DWORD PTR [ecx+0x64cd8509]
  40a2f7:	popf   
  40a2f8:	cmp    ch,BYTE PTR [ecx+0x76f88be2]
  40a2fe:	scas   eax,DWORD PTR es:[edi]
  40a2ff:	fs adc eax,0xa6698630
  40a305:	call   0x501730c
  40a30a:	cmp    eax,DWORD PTR [ecx+0x7e]
  40a30d:	ja     0x40a36b
  40a30f:	repz out 0x22,eax
  40a312:	mov    edx,0xdab50561
  40a317:	int3   
  40a318:	stc    
  40a319:	pop    esi
  40a31a:	and    DWORD PTR [eax+eax*8],eax
  40a31d:	sbb    DWORD PTR [esi+0x569bf0ec],ecx
  40a323:	ins    BYTE PTR es:[edi],dx
  40a324:	cmp    al,0x17
  40a326:	adc    eax,0x6ab1350b
  40a32b:	jnp    0x40a395
  40a32d:	jge    0x40a344
  40a32f:	xor    eax,0x3b391420
  40a334:	out    0x1,eax
  40a336:	into   
  40a337:	cmp    ecx,edx
  40a339:	jge    0x40a309
  40a33b:	fisttp WORD PTR [edi]
  40a33d:	and    edi,DWORD PTR [esi]
  40a33f:	mov    ebp,0xe957ed4b
  40a344:	aad    0x80
  40a346:	and    DWORD PTR [ecx-0x3060160d],0x2c2f1d2b
  40a350:	and    eax,0xb6b076f6
  40a355:	or     edx,DWORD PTR [edx-0x7b]
  40a358:	and    ebx,DWORD PTR [esi+0x670c2c1c]
  40a35e:	arpl   WORD PTR [esp+edi*8],dx
  40a361:	out    dx,eax
  40a362:	pop    fs
  40a364:	or     DWORD PTR [edi],edx
  40a366:	call   0x57123761
  40a36b:	xchg   esi,eax
  40a36c:	and    DWORD PTR [esi-0x1ba6de54],ecx
  40a372:	call   0xe3e9:0xcd8bd5d0
  40a379:	sti    
  40a37a:	retf   
  40a37b:	jl     0x40a355
  40a37d:	mov    ch,BYTE PTR [ecx]
  40a37f:	xchg   DWORD PTR [eax],eax
  40a381:	xor    al,0x25
  40a383:	sub    DWORD PTR [ebx-0x4f],esp
  40a386:	lahf   
  40a387:	dec    edx
  40a388:	cmp    eax,0xf2cccf14
  40a38d:	xchg   esp,eax
  40a38e:	adc    BYTE PTR [edx],cl
  40a390:	push   esi
  40a391:	xchg   ebp,eax
  40a392:	jmp    0x40a3eb
  40a394:	jno    0x40a3dc
  40a396:	pop    edi
  40a397:	xor    bl,BYTE PTR [eax+ecx*8-0x60caf210]
  40a39e:	out    dx,al
  40a39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a0:	mov    bh,0xf3
  40a3a2:	xor    DWORD PTR [ebx-0x16019dd1],esp
  40a3a8:	cwde   
  40a3a9:	inc    edx
  40a3aa:	mov    ds:0x46f72d9c,eax
  40a3af:	sub    ecx,ebp
  40a3b1:	xor    BYTE PTR [edi-0x2734c936],bh
  40a3b7:	leave  
  40a3b8:	xlat   BYTE PTR ds:[ebx]
  40a3b9:	scas   eax,DWORD PTR es:[edi]
  40a3ba:	aaa    
  40a3bb:	sub    eax,0x6de737c8
  40a3c0:	push   esp
  40a3c1:	and    DWORD PTR [ebx-0x3e],edx
  40a3c4:	xlat   BYTE PTR ds:[ebx]
  40a3c5:	jp     0x40a39b
  40a3c7:	mov    esi,0x364939c2
  40a3cc:	mov    ah,0x1a
  40a3ce:	cwde   
  40a3cf:	cmp    eax,DWORD PTR [edx*1+0x14d3e9d0]
  40a3d6:	pop    edi
  40a3d7:	adc    eax,esp
  40a3d9:	sub    al,0x70
  40a3db:	sbb    DWORD PTR [edi+0x66],esi
  40a3de:	outs   dx,BYTE PTR ds:[esi]
  40a3df:	dec    ebp
  40a3e0:	mov    esi,0x8e7f6836
  40a3e5:	retf   
  40a3e6:	adc    DWORD PTR [ebx],0xffffffed
  40a3e9:	into   
  40a3ea:	add    al,0x62
  40a3ec:	sub    ah,BYTE PTR [ebx+0xe]
  40a3ef:	(bad)  
  40a3f0:	push   esp
  40a3f1:	ins    DWORD PTR es:[edi],dx
  40a3f2:	nop
  40a3f3:	aam    0x4f
  40a3f5:	add    edx,DWORD PTR [eax-0x7a]
  40a3f8:	addr16 loop 0x40a470
  40a3fb:	push   ds
  40a3fc:	sbb    DWORD PTR [esp+ecx*8],esp
  40a3ff:	jb     0x40a40e
  40a401:	repnz aam 0x71
  40a404:	sub    cl,BYTE PTR [esi+eiz*2-0x23]
  40a408:	and    ebx,DWORD PTR [ecx+ebp*8-0x44]
  40a40c:	and    al,0x2c
  40a40e:	inc    ebp
  40a40f:	push   ebp
  40a410:	xor    BYTE PTR es:[esi+0x73d56840],ch
  40a417:	ins    DWORD PTR es:[edi],dx
  40a418:	sbb    al,0x4c
  40a41a:	or     DWORD PTR [ecx+edx*1-0x69f709c3],ebx
  40a421:	pop    ecx
  40a422:	aam    0x26
  40a424:	inc    ebp
  40a425:	pop    esi
  40a426:	push   ebx
  40a427:	mov    esp,0x4c28b22e
  40a42c:	pusha  
  40a42d:	je     0x40a3fe
  40a42f:	imul   ch
  40a431:	push   edi
  40a432:	test   eax,ecx
  40a434:	sub    eax,0x51a283f0
  40a439:	add    ebx,0xd541a6e0
  40a43f:	jge    0x40a469
  40a441:	ins    BYTE PTR es:[edi],dx
  40a442:	aas    
  40a443:	mov    al,ds:0xa3e64fc8
  40a448:	sub    cl,BYTE PTR [edx]
  40a44a:	inc    DWORD PTR [edx+edx*1+0x59bab20d]
  40a451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a452:	xchg   BYTE PTR [ecx-0x32],dh
  40a455:	sbb    BYTE PTR [eax],al
  40a457:	jns    0x40a456
  40a459:	xchg   esp,eax
  40a45a:	sahf   
  40a45b:	ror    dh,cl
  40a45d:	xchg   ebp,eax
  40a45e:	not    BYTE PTR [ebx+0x54]
  40a461:	xor    eax,0x666d8a32
  40a466:	les    ebx,FWORD PTR [eax+0x7]
  40a469:	popf   
  40a46a:	lds    esp,FWORD PTR [edi+0x20304d]
  40a470:	sub    cl,BYTE PTR [esi+0x0]
  40a473:	shl    DWORD PTR cs:[ecx+edi*4],cl
  40a477:	bound  edi,QWORD PTR [ebx+0x2a]
  40a47a:	stc    
  40a47b:	outs   dx,BYTE PTR ds:[esi]
  40a47c:	inc    ebp
  40a47d:	adc    al,0x1e
  40a47f:	repnz test BYTE PTR [ebp+0x56],bl
  40a483:	sar    BYTE PTR [ecx-0x78d9443e],1
  40a489:	aaa    
  40a48a:	mov    eax,ds:0x1cb63c20
  40a48f:	ds mov dh,0x34
  40a492:	and    al,0xb8
  40a494:	sub    dl,BYTE PTR [eax+ecx*2]
  40a497:	stc    
  40a498:	into   
  40a499:	lods   al,BYTE PTR ds:[esi]
  40a49a:	dec    eax
  40a49b:	or     al,0xe8
  40a49d:	test   BYTE PTR [edx-0x79],al
  40a4a0:	in     eax,0x62
  40a4a2:	adc    eax,0x581fdb9d
  40a4a7:	shl    BYTE PTR [edi-0x10a1a2d1],0x34
  40a4ae:	adc    ecx,DWORD PTR [edi-0x47]
  40a4b1:	sbb    BYTE PTR [eax-0x40],ch
  40a4b4:	xor    eax,0x37d56aaa
  40a4b9:	out    0x6c,eax
  40a4bb:	push   ecx
  40a4bc:	rol    BYTE PTR [edx-0x3aa06a57],0x83
  40a4c3:	bound  edx,QWORD PTR gs:[eax]
  40a4c6:	mov    ebx,edi
  40a4c8:	in     al,dx
  40a4c9:	mov    dl,0xa1
  40a4cb:	sbb    eax,0xe9d0ca89
  40a4d0:	xchg   edx,eax
  40a4d1:	ror    bl,1
  40a4d3:	and    BYTE PTR [ecx+0x45a1b40c],dl
  40a4d9:	lods   al,BYTE PTR ds:[esi]
  40a4da:	push   esp
  40a4db:	daa    
  40a4dc:	sub    ebp,DWORD PTR [ecx]
  40a4de:	enter  0x5909,0x38
  40a4e2:	stos   DWORD PTR es:[edi],eax
  40a4e3:	and    ebp,ecx
  40a4e5:	sub    al,0x53
  40a4e7:	mov    ds:0x66c9cbed,al
  40a4ec:	ins    BYTE PTR es:[edi],dx
  40a4ed:	je     0x40a4d0
  40a4ef:	jge    0x40a4db
  40a4f1:	loopne 0x40a523
  40a4f3:	je     0x40a51a
  40a4f5:	lock mov edx,ecx
  40a4f8:	ret    
  40a4f9:	and    esp,DWORD PTR [ebx+0x9]
  40a4fc:	add    BYTE PTR [ecx+0x53],cl
  40a4ff:	xor    al,0xd3
  40a501:	fstp   TBYTE PTR [ebx]
  40a503:	fs je  0x40a51c
  40a506:	mov    esp,0x5988072c
  40a50b:	cwde   
  40a50c:	jmpw   0x223d
  40a510:	stos   DWORD PTR es:[edi],eax
  40a511:	pop    ss
  40a512:	mov    esi,eax
  40a514:	pop    eax
  40a515:	mov    ch,bl
  40a517:	mov    edx,0x234b760e
  40a51c:	inc    ecx
  40a51d:	jg     0x40a572
  40a51f:	xor    al,0x65
  40a521:	imul   ebx,DWORD PTR ds:0x687e3385,0x6d
  40a528:	scas   eax,DWORD PTR es:[edi]
  40a529:	popw   ds
  40a52b:	loopne 0x40a533
  40a52d:	aaa    
  40a52e:	in     al,0x26
  40a530:	add    BYTE PTR [edi],0x15
  40a533:	jge    0x40a532
  40a535:	stos   BYTE PTR es:[edi],al
  40a536:	fdivr  DWORD PTR [eax+0x5a69faed]
  40a53c:	mov    esi,DWORD PTR [eax]
  40a53e:	rol    DWORD PTR [ebp*1-0x5515462],1
  40a545:	cmp    esi,DWORD PTR [edi+0x20a81a31]
  40a54b:	mov    ds:0xb8d4826b,al
  40a550:	mov    bh,dh
  40a552:	out    0xbd,al
  40a554:	ins    DWORD PTR es:[edi],dx
  40a555:	cmp    DWORD PTR [ebx+0x60481578],ebx
  40a55b:	call   0x2ab1:0xbc06b033
  40a562:	mov    dh,0x88
  40a564:	xor    al,cl
  40a566:	stc    
  40a567:	xor    DWORD PTR [esi-0x790b60e7],esp
  40a56d:	jnp    0x40a579
  40a56f:	or     eax,0xc453102a
  40a574:	xchg   esi,eax
  40a575:	scas   al,BYTE PTR es:[edi]
  40a576:	xlat   BYTE PTR ds:[ebx]
  40a577:	sub    eax,0x97b5509f
  40a57c:	test   al,0x42
  40a57e:	dec    esp
  40a57f:	push   ss
  40a580:	sbb    DWORD PTR [ebp-0x7a],ebp
  40a583:	lods   al,BYTE PTR ds:[esi]
  40a584:	nop
  40a585:	outs   dx,DWORD PTR ds:[esi]
  40a586:	int    0xf4
  40a588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a589:	push   eax
  40a58a:	repnz sub DWORD PTR [edx+0x304d5595],ebp
  40a591:	test   al,0xaa
  40a593:	mov    edi,DWORD PTR [edx-0x5dba6fe2]
  40a599:	push   0x46b1c634
  40a59e:	int    0x88
  40a5a0:	popf   
  40a5a1:	fistp  QWORD PTR [ebx+esi*2-0xa]
  40a5a5:	or     al,0x8a
  40a5a7:	adc    al,0x8e
  40a5a9:	aad    0xb1
  40a5ab:	jns    0x40a60e
  40a5ad:	push   edx
  40a5ae:	push   esp
  40a5af:	pusha  
  40a5b0:	push   ss
  40a5b1:	mov    cl,0x89
  40a5b3:	cmc    
  40a5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5b5:	das    
  40a5b6:	test   al,0x40
  40a5b8:	fcomp  QWORD PTR [edi+0x25d12ef3]
  40a5be:	adc    ecx,DWORD PTR [eax]
  40a5c0:	getsec 
  40a5c2:	fwait
  40a5c3:	sub    ecx,edx
  40a5c5:	inc    ebx
  40a5c6:	loopne 0x40a5aa
  40a5c8:	pusha  
  40a5c9:	test   BYTE PTR [ecx],ah
  40a5cb:	mov    DWORD PTR [ebx+eiz*1],ebx
  40a5ce:	mov    dl,0x2d
  40a5d0:	in     eax,0x51
  40a5d2:	push   edi
  40a5d3:	adc    edi,DWORD PTR [ecx-0x6e1b6ba9]
  40a5d9:	enter  0x4720,0xb0
  40a5dd:	xor    DWORD PTR [edx],eax
  40a5df:	xor    dl,BYTE PTR [ebx]
  40a5e1:	pop    ss
  40a5e2:	and    DWORD PTR [esi+0xb],eax
  40a5e5:	jg     0x40a5ea
  40a5e7:	push   ds
  40a5e8:	aad    0x6a
  40a5ea:	sbb    eax,0x66406b85
  40a5f0:	ja     0x40a665
  40a5f2:	fisttp DWORD PTR [ecx-0xc]
  40a5f5:	add    al,0x58
  40a5f7:	pushf  
  40a5f8:	jnp    0x40a585
  40a5fa:	je     0x40a5cc
  40a5fc:	jbe    0x40a57f
  40a5fe:	stc    
  40a5ff:	xchg   esp,eax
  40a600:	xor    eax,0x26f17dbf
  40a605:	aam    0x73
  40a607:	out    dx,al
  40a608:	in     eax,dx
  40a609:	stc    
  40a60a:	xchg   esi,eax
  40a60b:	push   ebx
  40a60c:	mov    ebx,0x531270e2
  40a611:	jecxz  0x40a59f
  40a613:	sub    BYTE PTR ds:0x620cfa64,al
  40a619:	popa   
  40a61a:	ficom  WORD PTR [edx-0x26]
  40a61d:	lahf   
  40a61e:	cmp    DWORD PTR [esp+esi*4+0x4a27d154],ecx
  40a625:	cmp    bl,BYTE PTR [edi+0x55fad83]
  40a62b:	xchg   edi,eax
  40a62c:	adc    BYTE PTR [ebp+0x3c],0x1b
  40a630:	or     al,0xb2
  40a632:	or     dl,0x94
  40a635:	dec    ebx
  40a636:	sub    ebp,DWORD PTR [esi-0x4c64826c]
  40a63c:	retf   0x3e8d
  40a63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a640:	pop    esp
  40a641:	(bad)
  40a645:	in     al,0x35
  40a647:	or     DWORD PTR [ecx+0x25],ebp
  40a64a:	adc    eax,DWORD PTR [ecx-0x29]
  40a64d:	aas    
  40a64e:	push   0xd9bf9b7b
  40a653:	xor    dl,ch
  40a655:	out    dx,al
  40a656:	inc    ebx
  40a657:	outs   dx,DWORD PTR ds:[esi]
  40a658:	cmp    al,0xe0
  40a65a:	push   ebx
  40a65b:	sbb    al,0x4c
  40a65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a65e:	add    bh,cl
  40a660:	add    eax,0x5ce23c4
  40a665:	(bad)  
  40a666:	fldenv [ebx+0x72]
  40a669:	pop    edi
  40a66a:	mov    cl,0x82
  40a66c:	mov    WORD PTR [edx+0x2],?
  40a66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a670:	xor    DWORD PTR [esi-0x1d],edi
  40a673:	dec    esp
  40a674:	mov    cl,0x64
  40a676:	push   edx
  40a677:	jmp    0x3fe3:0x7f0551f8
  40a67e:	out    0x87,eax
  40a680:	popf   
  40a681:	and    BYTE PTR [eax],cl
  40a683:	dec    eax
  40a684:	pop    esp
  40a685:	mov    DWORD PTR [ecx+0xd],esi
  40a688:	adc    al,0x84
  40a68a:	fs adc eax,0x24023bcd
  40a690:	cmp    ch,al
  40a692:	rcl    dh,cl
  40a694:	out    dx,eax
  40a695:	pop    ebp
  40a696:	adc    dl,cl
  40a698:	pop    ebx
  40a699:	and    dl,ah
  40a69b:	mov    DWORD PTR [ecx+0x20],edi
  40a69e:	shr    dh,1
  40a6a0:	pusha  
  40a6a1:	dec    esp
  40a6a2:	mov    cl,0x8d
  40a6a4:	dec    ebp
  40a6a5:	lea    edx,[edi-0x6200621c]
  40a6ab:	xor    al,ch
  40a6ad:	mov    esp,ebx
  40a6af:	jne    0x40a64f
  40a6b1:	sbb    eax,0x3d94f54f
  40a6b6:	aaa    
  40a6b7:	into   
  40a6b8:	mov    BYTE PTR [edx],0xf8
  40a6bb:	iret   
  40a6bc:	add    BYTE PTR ds:0xdf67269a,ah
  40a6c2:	inc    ebp
  40a6c3:	iret   
  40a6c4:	jge    0x40a64b
  40a6c6:	sbb    al,0x8b
  40a6c8:	addr16 out 0xba,eax
  40a6cb:	test   al,0x5
  40a6cd:	dec    ebx
  40a6ce:	mov    bh,0x1
  40a6d0:	adc    esp,0xa2e67fb0
  40a6d6:	imul   esi,DWORD PTR [esi+0x27],0x11b45680
  40a6dd:	or     al,0x8f
  40a6df:	pop    edi
  40a6e0:	mov    eax,0x4ee904f2
  40a6e5:	aam    0xb1
  40a6e7:	rcl    ebx,cl
  40a6e9:	pop    edx
  40a6ea:	adc    eax,DWORD PTR [ebx-0x762c11a]
  40a6f0:	add    BYTE PTR [ebx+0x59],0xef
  40a6f4:	mov    ah,0x7f
  40a6f6:	xor    BYTE PTR [ebx-0x26135d2f],bl
  40a6fc:	sahf   
  40a6fd:	inc    DWORD PTR [ebx-0x5bb7993d]
  40a703:	retf   0x461e
  40a706:	(bad)  
  40a707:	xor    ebx,DWORD PTR [eax]
  40a709:	in     al,dx
  40a70a:	mov    dl,0x5
  40a70c:	(bad)  
  40a70d:	aam    0xff
  40a70f:	sub    BYTE PTR [esi],ah
  40a711:	test   BYTE PTR [eax-0xf],0x8a
  40a715:	imul   eax,DWORD PTR [esi],0xffffffc7
  40a718:	retf   0xd7f3
  40a71b:	out    0x90,al
  40a71d:	xchg   edx,eax
  40a71e:	repnz call 0x34a2:0x6d719aca
  40a726:	and    ebp,edx
  40a728:	cmp    DWORD PTR cs:[edi+0x75dbcafd],ecx
  40a72f:	dec    ecx
  40a730:	xchg   ebp,eax
  40a731:	mov    eax,esp
  40a733:	popa   
  40a734:	pop    eax
  40a735:	push   ebx
  40a736:	push   0xce8eb4a2
  40a73b:	pop    esp
  40a73c:	and    ebp,DWORD PTR [edi-0x1e8663e0]
  40a742:	xor    edi,DWORD PTR [edx]
  40a744:	push   0xf7adedf9
  40a749:	loope  0x40a7bc
  40a74b:	xor    DWORD PTR ds:0x7bb0756f,0x5
  40a752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a753:	retf   0x809d
  40a756:	outs   dx,BYTE PTR ds:[esi]
  40a757:	push   eax
  40a758:	rcl    DWORD PTR [edi+ecx*8],cl
  40a75b:	es and eax,0xa694e22b
  40a761:	lahf   
  40a762:	test   DWORD PTR [ebp-0x61],0x4ebd4d0b
  40a769:	mov    dh,0x67
  40a76b:	call   FWORD PTR [esi-0x3aae2896]
  40a771:	lds    eax,FWORD PTR [ecx]
  40a773:	and    al,0xab
  40a775:	ins    BYTE PTR es:[edi],dx
  40a776:	(bad)  
  40a777:	in     eax,dx
  40a778:	cmp    ch,al
  40a77a:	stos   BYTE PTR es:[edi],al
  40a77b:	push   ebx
  40a77c:	adc    esi,DWORD PTR [esi]
  40a77e:	lods   eax,DWORD PTR ds:[esi]
  40a77f:	sbb    DWORD PTR [eax+0x53],esp
  40a782:	xor    eax,0xb5516a89
  40a787:	xor    DWORD PTR [ebp-0x38],eax
  40a78a:	sbb    al,0xc3
  40a78c:	arpl   WORD PTR [ecx],sp
  40a78e:	push   ebp
  40a78f:	ins    DWORD PTR es:[edi],dx
  40a790:	cdq    
  40a791:	mov    al,ds:0xcd6bfcd4
  40a796:	shl    BYTE PTR [ecx-0x24860490],0x30
  40a79d:	call   0x8d9:0x6bbafb51
  40a7a4:	xor    al,0xc7
  40a7a6:	out    dx,al
  40a7a7:	adc    ch,BYTE PTR ds:0x734a0608
  40a7ad:	cmp    dh,dh
  40a7af:	jb     0x40a7a7
  40a7b1:	fist   WORD PTR [eax-0x80]
  40a7b4:	jo     0x40a81a
  40a7b6:	shl    DWORD PTR [esi+0x13],0xf2
  40a7ba:	jg     0x40a753
  40a7bc:	xor    BYTE PTR [ecx+ebx*4+0x2c40e22a],dl
  40a7c3:	test   eax,0xaaf69822
  40a7c8:	pop    esi
  40a7c9:	das    
  40a7ca:	pop    es
  40a7cb:	(bad)  
  40a7cd:	cmp    esp,esi
  40a7cf:	sbb    dl,cl
  40a7d1:	ficom  DWORD PTR [ecx-0x45]
  40a7d4:	in     eax,dx
  40a7d5:	mov    cl,0x13
  40a7d7:	sub    ebx,DWORD PTR [edx]
  40a7d9:	loope  0x40a7f6
  40a7db:	fld    DWORD PTR [ecx]
  40a7dd:	xchg   ecx,eax
  40a7de:	xor    eax,0xc861b42a
  40a7e3:	call   0x1a04:0x867939fd
  40a7ea:	cdq    
  40a7eb:	mov    ecx,0x33f3012e
  40a7f0:	int3   
  40a7f1:	std    
  40a7f2:	(bad)  
  40a7f3:	ins    DWORD PTR es:[edi],dx
  40a7f4:	push   0x79
  40a7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f7:	add    ecx,esi
  40a7f9:	lods   al,BYTE PTR ds:[esi]
  40a7fa:	dec    ebp
  40a7fb:	add    dh,BYTE PTR [ebx+0x63]
  40a7fe:	in     al,0x5b
  40a800:	mov    eax,0x870ad6b7
  40a805:	lods   eax,DWORD PTR ds:[esi]
  40a806:	ss xor eax,0x146ca30
  40a80c:	pop    es
  40a80d:	int3   
  40a80e:	cmp    ebp,ebx
  40a810:	sbb    ecx,ebx
  40a812:	pop    ds
  40a813:	mov    bl,0x12
  40a815:	mov    ah,0x48
  40a817:	jne    0x40a836
  40a819:	dec    ebx
  40a81a:	sub    DWORD PTR [edi+0x18beb0f0],ecx
  40a820:	mov    al,0x19
  40a822:	push   ebx
  40a823:	mov    dh,0x8
  40a825:	popa   
  40a826:	sub    BYTE PTR [edx],bl
  40a828:	loopne 0x40a7f5
  40a82a:	fistp  WORD PTR [ebx]
  40a82c:	cwde   
  40a82d:	xchg   esi,eax
  40a82e:	(bad)  
  40a82f:	mov    DWORD PTR [ecx+0x2d96ae9e],esi
  40a835:	jae    0x40a89c
  40a837:	cs call 0x9ac4:0x74ffb04a
  40a83f:	cmp    edi,DWORD PTR [ebx-0x6d8d8540]
  40a845:	repnz or eax,0x5c4cb469
  40a84b:	cmp    DWORD PTR [edx+0x40],edi
  40a84e:	inc    BYTE PTR ds:0x5b490e8
  40a854:	and    ebx,ebx
  40a856:	dec    edx
  40a857:	into   
  40a858:	je     0x40a8c7
  40a85a:	add    DWORD PTR [ecx+0x72],esi
  40a85d:	pop    ebp
  40a85e:	cli    
  40a85f:	dec    edx
  40a860:	dec    ebx
  40a861:	fldenv [edx+0x3a]
  40a864:	adc    BYTE PTR [ecx+0x59],cl
  40a867:	mov    BYTE PTR [ecx+esi*2-0x3a],dl
  40a86b:	adc    ch,dh
  40a86d:	dec    edi
  40a86e:	cmp    al,0x91
  40a870:	pop    eax
  40a871:	or     eax,0x4a162318
  40a876:	jno    0x40a803
  40a878:	arpl   WORD PTR ss:0xaa571a66,ax
  40a87f:	inc    eax
  40a880:	xor    esi,ebp
  40a882:	pop    esp
  40a883:	retf   0xfe21
  40a886:	repz aas 
  40a888:	pop    esp
  40a889:	repz xor esi,edx
  40a88c:	xlat   BYTE PTR ds:[ebx]
  40a88d:	xor    DWORD PTR [esi],edx
  40a88f:	(bad)  
  40a890:	test   eax,0xf33a5bc7
  40a895:	jno    0x40a8aa
  40a897:	ds addr16 xchg edx,eax
  40a89a:	mul    BYTE PTR [eax]
  40a89c:	cmp    DWORD PTR [ecx-0x48],0x13
  40a8a0:	xor    DWORD PTR [ecx-0x41],esi
  40a8a3:	out    dx,al
  40a8a4:	mov    al,0x5d
  40a8a6:	sti    
  40a8a7:	adc    DWORD PTR ds:0x209fc177,esp
  40a8ad:	gs push 0x5f
  40a8b0:	xlat   BYTE PTR ds:[ebx]
  40a8b1:	mov    ch,0x20
  40a8b3:	inc    edi
  40a8b4:	sbb    al,0x3b
  40a8b6:	mov    edx,0xbc5ac91a
  40a8bb:	fnstcw WORD PTR [edi+0x57]
  40a8be:	in     al,dx
  40a8bf:	adc    ebp,esp
  40a8c1:	outs   dx,BYTE PTR ds:[esi]
  40a8c2:	push   edi
  40a8c3:	loopne 0x40a90e
  40a8c5:	int3   
  40a8c6:	out    dx,al
  40a8c7:	mov    edx,0x3b15a3fe
  40a8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8cd:	sbb    al,0xc
  40a8cf:	pop    ebp
  40a8d0:	ficom  DWORD PTR [edx+0x733bd6db]
  40a8d6:	jg     0x40a940
  40a8d8:	mov    bl,0x5a
  40a8da:	mov    BYTE PTR [ebx+0x6b5d480],bl
  40a8e0:	(bad)  
  40a8e1:	aam    0x1e
  40a8e3:	dec    DWORD PTR [edi-0x1f8d0fdc]
  40a8e9:	outs   dx,DWORD PTR ds:[esi]
  40a8ea:	xor    DWORD PTR [edx],ebp
  40a8ec:	mov    ebp,0xf58f4eb8
  40a8f1:	xor    BYTE PTR [ebp+0x4373fd81],ch
  40a8f7:	sub    eax,0xb112e146
  40a8fc:	mov    ebx,0x58b31bee
  40a901:	setbe  ch
  40a904:	test   eax,0xd40572e2
  40a909:	push   edi
  40a90a:	jl     0x40a983
  40a90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a90d:	fs ss mov al,0x93
  40a911:	cld    
  40a912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a913:	es xor ecx,ecx
  40a916:	ds jb  0x40a8c9
  40a919:	push   ebp
  40a91a:	pop    es
  40a91b:	mov    ebp,0xe87d3cd7
  40a920:	dec    esp
  40a921:	push   0x52
  40a923:	mov    cl,0xd3
  40a925:	mov    ecx,0xfd5dea81
  40a92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a92b:	outs   dx,BYTE PTR ds:[esi]
  40a92c:	xchg   ecx,eax
  40a92d:	inc    ecx
  40a92e:	xchg   ebx,eax
  40a92f:	pop    esi
  40a930:	sub    al,0x59
  40a932:	inc    ebx
  40a933:	mov    BYTE PTR [edi],dl
  40a935:	out    dx,al
  40a936:	enter  0x95e1,0xa3
  40a93a:	dec    esp
  40a93b:	ret    
  40a93c:	dec    ecx
  40a93d:	inc    esi
  40a93e:	imul   esi,DWORD PTR [edx+0x7d89c6f7],0xffffffcf
  40a945:	push   ds
  40a946:	mov    al,ds:0x8e81d430
  40a94b:	pop    ds
  40a94c:	gs scas eax,DWORD PTR es:[edi]
  40a94e:	adc    dh,BYTE PTR [edi-0x7b]
  40a951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a952:	aad    0x5f
  40a954:	fwait
  40a955:	mov    cl,0x8a
  40a957:	int3   
  40a958:	daa    
  40a959:	maskmovq mm2,(bad)
  40a95a:	not    DWORD PTR [ecx]
  40a95c:	lods   eax,DWORD PTR ds:[esi]
  40a95d:	push   ss
  40a95e:	add    cl,dl
  40a960:	call   DWORD PTR ds:0x42d2b6a8
  40a966:	jle    0x40a959
  40a968:	xor    DWORD PTR [edi-0xede336a],eax
  40a96e:	jecxz  0x40a9ac
  40a970:	xchg   esp,eax
  40a971:	out    dx,al
  40a972:	and    edi,DWORD PTR [ebx-0x7f]
  40a975:	ficom  DWORD PTR [esi+edi*8]
  40a978:	out    dx,al
  40a979:	mov    dl,0x94
  40a97b:	xor    BYTE PTR [edi],0xfa
  40a97e:	pop    edx
  40a97f:	into   
  40a980:	ret    0x3673
  40a983:	shr    DWORD PTR [ecx+0x54],1
  40a986:	add    al,0x18
  40a988:	shl    DWORD PTR [edi+0x46],cl
  40a98b:	ja     0x40a957
  40a98d:	pop    bp
  40a98f:	cdq    
  40a990:	into   
  40a991:	jp     0x40a96a
  40a993:	push   edi
  40a994:	jp     0x40a972
  40a996:	add    al,0xd5
  40a998:	mov    ecx,0xef6c81fa
  40a99d:	push   cs
  40a99e:	sbb    eax,0xb0df6e0c
  40a9a3:	aas    
  40a9a4:	fbld   TBYTE PTR [ebp-0x2ae59050]
  40a9aa:	xor    BYTE PTR [eax],dh
  40a9ac:	and    ebp,eax
  40a9ae:	in     al,0xdd
  40a9b0:	into   
  40a9b1:	xlat   BYTE PTR ds:[ebx]
  40a9b2:	fld    QWORD PTR [edx-0x32]
  40a9b5:	sub    DWORD PTR ds:0xd0d6e73b,edx
  40a9bb:	lods   al,BYTE PTR ds:[esi]
  40a9bc:	ret    
  40a9bd:	call   0xa0aeda10
  40a9c2:	mov    edx,0xb6aa2f3e
  40a9c7:	rol    DWORD PTR [ecx+0x506e43],0xad
  40a9ce:	cmp    esp,DWORD PTR [edi]
  40a9d0:	cmp    eax,0x2a8ee128
  40a9d5:	ret    
  40a9d6:	add    bh,bl
  40a9d8:	sti    
  40a9d9:	xor    DWORD PTR [ebx+0x5e2dd196],0xffffffde
  40a9e0:	pmulhw mm6,QWORD PTR [ecx-0x59eb48f8]
  40a9e7:	pop    ds
  40a9e8:	fs icebp 
  40a9ea:	in     eax,0xb6
  40a9ec:	je     0x40aa28
  40a9ee:	stos   BYTE PTR es:[edi],al
  40a9ef:	push   ss
  40a9f0:	jbe    0x40a998
  40a9f2:	cmp    BYTE PTR [esi-0x3fcc6776],ch
  40a9f8:	int    0x2d
  40a9fa:	cwde   
  40a9fb:	ja     0x40a990
  40a9fd:	cld    
  40a9fe:	aaa    
  40a9ff:	add    edx,DWORD PTR [esp+eax*1]
  40aa02:	mov    cl,BYTE PTR [edi]
  40aa04:	push   esp
  40aa05:	inc    ebp
  40aa06:	inc    eax
  40aa07:	xchg   esi,eax
  40aa08:	jp     0x40aa11
  40aa0a:	jg     0x40a99b
  40aa0c:	rcr    ebx,1
  40aa0e:	mov    ds,edx
  40aa10:	(bad)  
  40aa11:	fsubr  st(7),st
  40aa13:	in     eax,0x6f
  40aa15:	lahf   
  40aa16:	inc    ecx
  40aa17:	sbb    eax,0x14fc62cc
  40aa1c:	jmp    0x40aa8c
  40aa1e:	out    0xac,al
  40aa20:	mov    ebp,0xb157f6f5
  40aa25:	pusha  
  40aa26:	inc    ebp
  40aa27:	outs   dx,BYTE PTR ds:[esi]
  40aa28:	rcl    BYTE PTR [eax-0x4d],1
  40aa2b:	in     al,dx
  40aa2c:	ja     0x40a9cc
  40aa2e:	and    eax,0x664e1bf4
  40aa33:	ja     0x40aa5c
  40aa35:	out    0x62,al
  40aa37:	int    0xe7
  40aa39:	sub    edx,DWORD PTR [ecx-0x9]
  40aa3c:	cmp    bl,ah
  40aa3e:	jle    0x40aa77
  40aa40:	stc    
  40aa41:	jp     0x40a9d3
  40aa43:	xor    edi,0x39
  40aa46:	inc    ecx
  40aa47:	inc    esi
  40aa48:	dec    esp
  40aa49:	test   DWORD PTR [ecx],0xb222ebd3
  40aa4f:	mov    ch,0x13
  40aa51:	push   edx
  40aa52:	xchg   edx,edx
  40aa54:	cwde   
  40aa55:	and    BYTE PTR [ebp-0x224f30f8],0xc8
  40aa5c:	(bad)  
  40aa5d:	fistp  QWORD PTR [ebx]
  40aa5f:	add    BYTE PTR [edx+0x36],dl
  40aa62:	and    al,0xdc
  40aa64:	adc    ebx,ebp
  40aa66:	jne    0x40aa3a
  40aa68:	sbb    BYTE PTR [edx-0x13f6a028],cl
  40aa6e:	sbb    al,bl
  40aa70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa71:	imul   esi,DWORD PTR [edx],0x849d18c0
  40aa77:	mov    ds:0xbb69ac93,al
  40aa7c:	mov    al,ds:0x6f7811db
  40aa81:	gs mov ecx,0x4d4cf48e
  40aa87:	xor    esi,DWORD PTR [esi-0x1d7f4f57]
  40aa8d:	out    dx,eax
  40aa8e:	xor    dl,BYTE PTR [edi-0x51]
  40aa91:	imul   eax,DWORD PTR [ebx+0x60],0x319fa42
  40aa98:	imul   ebx,esi,0x17
  40aa9b:	lods   al,BYTE PTR ds:[esi]
  40aa9c:	jnp    0x40aaa9
  40aa9e:	and    eax,0x2ef54562
  40aaa3:	repnz stos BYTE PTR es:[edi],al
  40aaa5:	inc    edx
  40aaa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa7:	mov    esp,0xab3f7fdd
  40aaac:	inc    esp
  40aaad:	pushf  
  40aaae:	lea    edx,[ecx-0x53bad034]
  40aab4:	xor    eax,0xb687e535
  40aab9:	arpl   WORD PTR [ecx-0x39],si
  40aabc:	cmp    ecx,DWORD PTR [ecx+0x67]
  40aabf:	xor    al,0x12
  40aac1:	fimul  DWORD PTR [edi+0x4fef106a]
  40aac7:	lods   eax,DWORD PTR ds:[esi]
  40aac8:	push   0xfbf5859e
  40aacd:	jne    0x40aa60
  40aacf:	test   al,0x70
  40aad1:	clc    
  40aad2:	repz test al,0xc4
  40aad5:	mov    ah,0xa8
  40aad7:	rol    DWORD PTR [ebp-0x4b7e48e5],cl
  40aadd:	push   ebp
  40aade:	lahf   
  40aadf:	dec    ebx
  40aae0:	lods   al,BYTE PTR ds:[esi]
  40aae1:	push   ds
  40aae2:	shl    BYTE PTR [edi+0x1a511889],1
  40aae8:	out    dx,al
  40aae9:	ja     0x40aadb
  40aaeb:	adc    DWORD PTR [eax],ebx
  40aaed:	outs   dx,BYTE PTR ds:[esi]
  40aaee:	pop    edi
  40aaef:	or     esp,eax
  40aaf1:	pop    eax
  40aaf2:	xchg   esp,eax
  40aaf3:	sbb    ch,cl
  40aaf5:	cmp    DWORD PTR [esi+0x1a4d788b],ecx
  40aafb:	ficomp WORD PTR [ecx+0x3bc63269]
  40ab01:	sbb    ecx,ebp
  40ab03:	daa    
  40ab04:	jecxz  0x40ab0b
  40ab06:	pop    esi
  40ab07:	neg    DWORD PTR [ebx+0x7bd75d86]
  40ab0d:	xchg   ebp,eax
  40ab0e:	xlat   BYTE PTR ds:[ebx]
  40ab0f:	ret    
  40ab10:	outs   dx,BYTE PTR ds:[esi]
  40ab11:	ins    DWORD PTR es:[edi],dx
  40ab12:	dec    eax
  40ab13:	xchg   edi,eax
  40ab14:	rcr    DWORD PTR [esi+0x1290ba37],1
  40ab1a:	push   edx
  40ab1b:	stos   BYTE PTR es:[edi],al
  40ab1c:	(bad)  
  40ab1d:	push   esi
  40ab1e:	mov    ds:0x6adb0888,eax
  40ab23:	retf   0x377c
  40ab26:	out    0xce,eax
  40ab28:	call   0xc25bece9
  40ab2d:	jb     0x40ab3b
  40ab2f:	push   0x55ca9964
  40ab34:	jae    0x40aac7
  40ab36:	enter  0xf656,0x23
  40ab3a:	mov    WORD PTR [edx-0x62],?
  40ab3d:	stc    
  40ab3e:	add    DWORD PTR [esi],esp
  40ab40:	or     BYTE PTR [ebx],bl
  40ab42:	inc    ecx
  40ab43:	call   0x6db8:0x6fa2418f
  40ab4a:	push   ds
  40ab4b:	cmp    esi,DWORD PTR [ebx-0x1389797b]
  40ab51:	hlt    
  40ab52:	(bad)  
  40ab53:	out    0x5a,eax
  40ab55:	cld    
  40ab56:	shl    DWORD PTR [ecx-0xcf9994d],0xe4
  40ab5d:	setb   BYTE PTR [edi-0x5b83d40a]
  40ab64:	pop    edx
  40ab65:	mov    bl,0x43
  40ab67:	fimul  WORD PTR [ecx+0x3d592088]
  40ab6d:	dec    edi
  40ab6e:	mov    ds:0x1cfd998c,eax
  40ab73:	and    dl,BYTE PTR [ebx+esi*8+0x40]
  40ab77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab78:	xchg   edx,eax
  40ab79:	fcom   DWORD PTR [edi-0x6f223e82]
  40ab7f:	mov    al,ds:0x7906f76f
  40ab84:	vaddps ymm4,ymm4,YMMWORD PTR [ebp+0x13]
  40ab89:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ab8b:	xor    DWORD PTR [eax-0x61f74f8a],0xb018ea04
  40ab95:	push   esp
  40ab96:	fwait
  40ab97:	jbe    0x40ac09
  40ab99:	mov    es,WORD PTR [edi+0x278b40b0]
  40ab9f:	mov    cl,0xe5
  40aba1:	push   ebx
  40aba2:	dec    ecx
  40aba3:	jno    0x40abd5
  40aba5:	cmc    
  40aba6:	nop
  40aba7:	jmp    0x2f1a:0xff0de96
  40abae:	adc    al,0x2e
  40abb0:	out    0x2c,eax
  40abb2:	jmp    0x772:0xcecb8d8f
  40abb9:	mov    ecx,0x43d9650c
  40abbe:	outs   dx,BYTE PTR ds:[esi]
  40abbf:	retf   
  40abc0:	and    al,0xce
  40abc2:	xor    DWORD PTR [ecx-0x57],eax
  40abc5:	push   ss
  40abc6:	and    ebx,esp
  40abc8:	adc    bl,BYTE PTR [eax+0x7f32f13f]
  40abce:	das    
  40abcf:	bnd ret 
  40abd1:	stos   DWORD PTR es:[edi],eax
  40abd2:	mov    ds:0xd2184452,al
  40abd7:	lods   eax,DWORD PTR ds:[esi]
  40abd8:	div    BYTE PTR [esi]
  40abda:	mov    DWORD PTR cs:[edx+0x47],eax
  40abde:	sbb    bl,ah
  40abe0:	dec    ecx
  40abe1:	ftst   
  40abe3:	jmp    0xfd18:0xb3ce5e12
  40abea:	dec    ecx
  40abeb:	and    dl,BYTE PTR [edi-0x53]
  40abee:	push   es
  40abef:	xor    bl,BYTE PTR [edi+0x3f]
  40abf2:	add    eax,DWORD PTR ds:0x79f0ebfa
  40abf8:	lods   eax,DWORD PTR ds:[esi]
  40abf9:	push   edi
  40abfa:	sub    al,0x98
  40abfc:	icebp  
  40abfd:	inc    eax
  40abfe:	xor    edi,DWORD PTR [edi]
  40ac00:	je     0x40abe3
  40ac02:	jns    0x40ab8b
  40ac04:	retf   
  40ac05:	in     eax,0xd7
  40ac07:	add    al,0xc1
  40ac09:	xor    edx,esp
  40ac0b:	mov    dh,0xe7
  40ac0d:	test   al,0xa2
  40ac0f:	ficomp WORD PTR [ebp-0x633d7716]
  40ac15:	sbb    al,0x4d
  40ac17:	cs pop esi
  40ac19:	les    ecx,FWORD PTR [ebx]
  40ac1b:	and    dh,BYTE PTR [ecx]
  40ac1d:	and    al,0xc4
  40ac1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac20:	aaa    
  40ac21:	jle    0x40ac1a
  40ac23:	mov    esp,0xbdcc70b0
  40ac28:	mov    ds:0x7fabd7c,eax
  40ac2d:	and    ecx,eax
  40ac2f:	popa   
  40ac30:	mov    eax,0x744473eb
  40ac35:	cdq    
  40ac36:	out    dx,al
  40ac37:	leave  
  40ac38:	sub    eax,0xe979551c
  40ac3d:	add    al,0xac
  40ac3f:	mov    esp,0xbf62b3c0
  40ac44:	pop    eax
  40ac45:	mov    ebx,0xd2d04b1e
  40ac4a:	je     0x40ac67
  40ac4c:	ss pop edi
  40ac4e:	mov    esp,0x6683a290
  40ac53:	add    eax,0xea21e1aa
  40ac58:	jge    0x40abf4
  40ac5a:	aaa    
  40ac5b:	cmp    DWORD PTR [edi+0x6],esi
  40ac5e:	xchg   edi,eax
  40ac5f:	add    eax,0xcdf67508
  40ac64:	loop   0x40ac66
  40ac66:	xor    ebp,DWORD PTR [eax+0x67]
  40ac69:	je     0x40ac1c
  40ac6b:	xor    BYTE PTR [ebx],dl
  40ac6d:	test   BYTE PTR [ebp-0x4d],bh
  40ac70:	stc    
  40ac71:	and    eax,0x7f8de4e3
  40ac76:	test   DWORD PTR [esi],ecx
  40ac78:	pop    edi
  40ac79:	mov    ds:0x44d42b8b,eax
  40ac7e:	addr16 cld 
  40ac80:	cmovg  esi,ebx
  40ac83:	lods   al,BYTE PTR ds:[esi]
  40ac84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac85:	inc    esi
  40ac86:	in     eax,dx
  40ac87:	sub    eax,edx
  40ac89:	or     al,0xcc
  40ac8b:	out    dx,al
  40ac8c:	inc    eax
  40ac8d:	cmp    ebp,DWORD PTR [edi]
  40ac8f:	sub    DWORD PTR [edi],ebp
  40ac91:	enter  0x884a,0x74
  40ac95:	xchg   ebp,eax
  40ac96:	or     esi,DWORD PTR [edi+eax*2+0x22f380b1]
  40ac9d:	pop    ebp
  40ac9e:	out    dx,eax
  40ac9f:	mov    gs,WORD PTR [ebx]
  40aca1:	pop    ebx
  40aca2:	int    0x0
  40aca4:	bound  ecx,QWORD PTR [eax-0xd]
  40aca7:	pop    es
  40aca8:	lds    ecx,FWORD PTR [edi]
  40acaa:	sub    BYTE PTR [ebp+0x50],bl
  40acad:	scas   al,BYTE PTR es:[edi]
  40acae:	inc    ebp
  40acaf:	vmaxsd xmm4,xmm1,QWORD PTR [edi+0x7689ed92]
  40acb7:	scas   al,BYTE PTR es:[edi]
  40acb8:	or     ebp,esp
  40acba:	int    0x4c
  40acbc:	stc    
  40acbd:	cmp    DWORD PTR [ebp+0x484c1a9e],ebp
  40acc3:	or     esp,DWORD PTR fs:0x60afddd6
  40acca:	xchg   BYTE PTR [ebx],al
  40accc:	das    
  40accd:	ror    esi,0x85
  40acd0:	push   0x2d
  40acd2:	leave  
  40acd3:	stos   BYTE PTR es:[edi],al
  40acd4:	std    
  40acd5:	xor    BYTE PTR [edi+0x3fc12dcb],cl
  40acdb:	adc    eax,0x4b82a9e8
  40ace0:	repnz loope 0x40ad47
  40ace3:	pop    ebx
  40ace4:	aad    0xa
  40ace6:	cs mov edx,0x33f384e1
  40acec:	cs mov ch,0xe9
  40acef:	mov    ch,0xd7
  40acf1:	or     eax,0x92f6f843
  40acf6:	popf   
  40acf7:	int    0x9f
  40acf9:	jg     0x40acf6
  40acfb:	sbb    esp,DWORD PTR [ebx]
  40acfd:	pop    ss
  40acfe:	(bad)  
  40acff:	mov    esp,0x31ed99f9
  40ad04:	mov    WORD PTR [edi],?
  40ad06:	cli    
  40ad07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad08:	dec    ecx
  40ad09:	popf   
  40ad0a:	mov    cs,ecx
  40ad0c:	jns    0x40ad18
  40ad0e:	mov    bh,0xc7
  40ad10:	sahf   
  40ad11:	ret    
  40ad12:	push   eax
  40ad13:	sub    al,0x8
  40ad15:	jl     0x40acef
  40ad17:	sbb    DWORD PTR [edx+0x3102af2e],ecx
  40ad1d:	das    
  40ad1e:	mov    cl,0xd
  40ad20:	test   al,0xa
  40ad22:	test   al,0x6a
  40ad24:	jo     0x40ad59
  40ad26:	test   eax,0xa79b1e4a
  40ad2b:	xchg   edi,eax
  40ad2c:	test   ebp,0xcc9ca975
  40ad32:	add    eax,esi
  40ad34:	cmp    eax,0xd015f6b8
  40ad39:	mov    ah,BYTE PTR [ebp+0x1a37059f]
  40ad3f:	mov    ds:0xf3733da1,eax
  40ad44:	push   ebx
  40ad45:	adc    eax,0x9bbc7af9
  40ad4a:	xchg   esi,eax
  40ad4b:	lock out dx,eax
  40ad4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4e:	dec    ecx
  40ad4f:	dec    eax
  40ad50:	jp     0x40ad28
  40ad52:	mov    ecx,0xd23c7fa3
  40ad57:	outs   dx,DWORD PTR ds:[esi]
  40ad58:	push   cs
  40ad59:	icebp  
  40ad5a:	xchg   ebp,eax
  40ad5b:	call   0x841152e2
  40ad60:	stc    
  40ad61:	mov    edx,0x9180323
  40ad66:	inc    edi
  40ad67:	inc    eax
  40ad68:	out    0xca,eax
  40ad6a:	sub    sp,ax
  40ad6d:	test   eax,0xc78cf1d3
  40ad72:	pop    esp
  40ad73:	xchg   ecx,eax
  40ad74:	pushf  
  40ad75:	fs and al,0xf8
  40ad78:	push   eax
  40ad79:	fwait
  40ad7a:	aam    0xd7
  40ad7c:	mov    dh,0xc6
  40ad7e:	or     ecx,esi
  40ad80:	ins    DWORD PTR es:[edi],dx
  40ad81:	sbb    ch,0xa2
  40ad84:	add    bl,BYTE PTR [edx]
  40ad86:	add    eax,0xe422979a
  40ad8b:	jmp    0x2751f4a
  40ad90:	pusha  
  40ad91:	popa   
  40ad92:	aaa    
  40ad93:	or     bh,bh
  40ad95:	and    ebp,0xffffffbd
  40ad98:	jmp    0x40ad32
  40ad9a:	das    
  40ad9b:	jle    0x40ad6d
  40ad9d:	cs push ds
  40ad9f:	add    al,0x76
  40ada1:	pop    ss
  40ada2:	mov    eax,DWORD PTR es:[ecx-0x6ed89abe]
  40ada9:	addr16 pop ebx
  40adab:	dec    ebp
  40adac:	mov    DWORD PTR [ebp-0x5774173],edx
  40adb2:	shl    bl,cl
  40adb4:	scas   al,BYTE PTR es:[edi]
  40adb5:	or     eax,0xe475523a
  40adba:	outs   dx,DWORD PTR ds:[esi]
  40adbb:	aaa    
  40adbc:	sbb    dl,0x70
  40adbf:	cmc    
  40adc0:	repz cdq 
  40adc2:	mov    es,WORD PTR [edi]
  40adc4:	rcr    DWORD PTR [eax],0xd3
  40adc7:	enter  0xdbbe,0xe2
  40adcb:	jmp    0x40ad63
  40adcd:	outs   dx,BYTE PTR ds:[esi]
  40adce:	stos   BYTE PTR es:[edi],al
  40adcf:	cmc    
  40add0:	fisttp DWORD PTR [esi]
  40add2:	shl    dl,0x26
  40add5:	sti    
  40add6:	fisub  DWORD PTR [ebp+0x346f71ac]
  40addc:	out    dx,eax
  40addd:	rcr    DWORD PTR [ebx+0x1b],0x25
  40ade1:	div    DWORD PTR [ebx]
  40ade3:	mov    eax,0xca34eb56
  40ade8:	vmread ebp,ebx
  40adeb:	push   ebx
  40adec:	adc    al,BYTE PTR [eax]
  40adee:	stc    
  40adef:	shl    DWORD PTR [edi-0x4b7194b3],0x63
  40adf6:	and    BYTE PTR [ebp+0x240d0c64],ch
  40adfc:	or     BYTE PTR [ebx+0x7bfe90e],ch
  40ae02:	pop    es
  40ae03:	ficomp DWORD PTR [edi+0x2d]
  40ae06:	sbb    al,0x14
  40ae08:	xor    al,0xe0
  40ae0a:	push   cs
  40ae0b:	leave  
  40ae0c:	daa    
  40ae0d:	mov    ds:0x244b67f5,eax
  40ae12:	dec    edx
  40ae13:	jmp    0xd83f366e
  40ae18:	pop    esi
  40ae19:	lock (bad) 
  40ae1c:	(bad)  
  40ae1d:	push   esi
  40ae1e:	xchg   esp,eax
  40ae1f:	jg     0x40ae5e
  40ae21:	lahf   
  40ae22:	fmul   DWORD PTR [edi-0x4734185a]
  40ae28:	adc    eax,0xc96976de
  40ae2d:	mov    WORD PTR [edi+0xcf19b85],gs
  40ae33:	inc    eax
  40ae34:	cmp    al,0x8e
  40ae36:	jbe    0x40ae16
  40ae38:	or     BYTE PTR [edi-0xc],ah
  40ae3b:	(bad)
  40ae3e:	inc    eax
  40ae3f:	ret    0x4dc0
  40ae42:	cld    
  40ae43:	ret    0x3c24
  40ae46:	sbb    eax,0xce6a607d
  40ae4b:	iret   
  40ae4c:	push   ecx
  40ae4d:	(bad)  
  40ae4f:	push   ss
  40ae50:	shl    BYTE PTR [esi+0x43],1
  40ae53:	stos   BYTE PTR es:[edi],al
  40ae54:	pushf  
  40ae55:	dec    esi
  40ae56:	mov    BYTE PTR [edx+eiz*1],0xa4
  40ae5a:	or     DWORD PTR [ebp+0x4e05a149],ebp
  40ae60:	es test al,0x5b
  40ae63:	cmp    BYTE PTR [ebx+0x395255e],0xec
  40ae6a:	mov    cl,0x15
  40ae6c:	in     al,dx
  40ae6d:	dec    ecx
  40ae6e:	stos   BYTE PTR es:[edi],al
  40ae6f:	or     ebx,DWORD PTR [ebx-0x646f564c]
  40ae75:	mov    ds:0xcf58c1e8,al
  40ae7a:	add    ah,BYTE PTR ds:0x2053a8f6
  40ae80:	leave  
  40ae81:	pop    edi
  40ae82:	repz pop ebp
  40ae84:	or     al,0xff
  40ae86:	je     0x40ae26
  40ae88:	sub    bh,BYTE PTR [eax+0x64]
  40ae8b:	lds    ebx,FWORD PTR [eax-0x22]
  40ae8e:	adc    al,0x4
  40ae90:	jb     0x40aedd
  40ae92:	mov    edi,DWORD PTR [edi-0x80]
  40ae95:	mov    al,ds:0x3f12e18e
  40ae9a:	pop    ss
  40ae9b:	jno    0x40ae40
  40ae9d:	iret   
  40ae9e:	adc    al,0x8b
  40aea0:	cs scas eax,DWORD PTR es:[edi]
  40aea2:	popa   
  40aea3:	add    bl,0x25
  40aea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea7:	mov    bh,bh
  40aea9:	mov    DWORD PTR [edx+ecx*4],eax
  40aeac:	mov    eax,DWORD PTR [ebp-0xc]
  40aeaf:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeb2:	xor    eax,esi
  40aeb4:	lea    eax,[eax+ecx*1+0x3272f8]
  40aebb:	mov    DWORD PTR [ebp+0x8],eax
  40aebe:	mov    eax,DWORD PTR [ebp-0xc]
  40aec1:	mov    ecx,DWORD PTR [ebp+0x14]
  40aec4:	xor    eax,esi
  40aec6:	add    eax,edi
  40aec8:	imul   eax,DWORD PTR [ecx]
  40aecb:	mov    ecx,DWORD PTR [ebp-0x4]
  40aece:	mov    edx,DWORD PTR [ebp+0x8]
  40aed1:	xor    ecx,esi
  40aed3:	jmp    0x40d273
  40aed8:	mov    WORD PTR [esi+edi*8+0x6c5d2edd],ds
  40aedf:	out    dx,al
  40aee0:	fwait
  40aee1:	push   edx
  40aee2:	(bad)  
  40aee3:	xor    edx,DWORD PTR [ebx]
  40aee5:	xchg   BYTE PTR [edi+edi*4-0x54],dl
  40aee9:	or     BYTE PTR [ebx+0x7b],bh
  40aeec:	(bad)  
  40aeed:	sahf   
  40aeee:	jnp    0x40af6b
  40aef0:	mov    ch,0x3c
  40aef2:	test   al,0x6f
  40aef4:	bound  ebx,QWORD PTR [edi+eiz*8+0x6b]
  40aef8:	das    
  40aef9:	mov    ds:0xd07d50c4,al
  40aefe:	ds push ss
  40af00:	push   ecx
  40af01:	scas   eax,DWORD PTR es:[edi]
  40af02:	push   ebp
  40af03:	cmp    ebp,DWORD PTR [esi+0x7c]
  40af06:	adc    bl,dl
  40af08:	cwde   
  40af09:	or     eax,0x1c693ab3
  40af0e:	push   ss
  40af0f:	adc    BYTE PTR [eax],0x5c
  40af12:	cdq    
  40af13:	in     al,0xe3
  40af15:	shr    BYTE PTR [ecx],0x8f
  40af18:	add    eax,0x11ce5d95
  40af1d:	call   0xa37b:0xce7f94ec
  40af24:	ror    cl,cl
  40af26:	int    0x73
  40af28:	adc    dl,BYTE PTR [esi]
  40af2a:	sbb    DWORD PTR [ebx-0x51],ecx
  40af2d:	mov    dl,0x68
  40af2f:	mov    dl,BYTE PTR [ecx-0x6b]
  40af32:	cld    
  40af33:	sbb    ah,0x28
  40af36:	sub    ecx,0xe2324d59
  40af3c:	(bad)  
  40af3d:	xor    ecx,DWORD PTR [ebx-0x30]
  40af40:	sub    bh,ah
  40af42:	ror    DWORD PTR [eax+eax*4],cl
  40af45:	pushf  
  40af46:	outs   dx,BYTE PTR ds:[esi]
  40af47:	and    eax,0x476eb7e8
  40af4c:	fiadd  DWORD PTR [ebp+0x3e]
  40af4f:	jp     0x40afc8
  40af51:	jecxz  0x40af8d
  40af53:	popa   
  40af54:	cli    
  40af55:	cmp    eax,0x7640eee7
  40af5a:	sub    eax,0x40c61f1d
  40af5f:	xchg   DWORD PTR [edi-0x72],ebp
  40af62:	cwde   
  40af63:	and    ch,BYTE PTR [ebx]
  40af65:	jnp    0x40af82
  40af67:	arpl   WORD PTR [esi+0xced808c],ax
  40af6d:	xchg   esi,eax
  40af6e:	mov    dl,0x88
  40af70:	cmc    
  40af71:	pusha  
  40af72:	ja     0x40af99
  40af74:	into   
  40af75:	ror    DWORD PTR [edx],1
  40af77:	jo     0x40af61
  40af79:	xchg   BYTE PTR ds:0xc8baa44,bh
  40af7f:	loope  0x40afab
  40af81:	loopne 0x40af0f
  40af83:	jnp    0x40af7e
  40af85:	jle    0x40af26
  40af87:	jge    0x40af70
  40af89:	xor    al,ah
  40af8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af8c:	mov    ebx,0x40f856c1
  40af91:	das    
  40af92:	and    eax,0x6095a4fb
  40af97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af98:	or     DWORD PTR [ebp+0x5e],0xffffffb3
  40af9c:	lods   al,BYTE PTR ds:[esi]
  40af9d:	sub    bh,BYTE PTR [esi+0x7f2f738f]
  40afa3:	shl    DWORD PTR [edx],0xa2
  40afa6:	or     esp,DWORD PTR [ebp+ebp*4-0x6d141082]
  40afad:	mov    dl,0xea
  40afaf:	scas   eax,DWORD PTR es:[edi]
  40afb0:	stos   BYTE PTR es:[edi],al
  40afb1:	cmp    esi,edi
  40afb3:	imul   ebp,edx,0xf2b6eabf
  40afb9:	rcl    esp,cl
  40afbb:	arpl   WORD PTR [edi],dx
  40afbd:	in     eax,0xb3
  40afbf:	pop    eax
  40afc0:	call   0x930a41bf
  40afc5:	mov    cl,0x81
  40afc7:	add    eax,0x9a3b1c1d
  40afcc:	mov    ecx,0x7d5c80e
  40afd1:	pop    ebx
  40afd2:	dec    eax
  40afd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd4:	inc    ebp
  40afd5:	push   ds
  40afd6:	dec    ebx
  40afd7:	cld    
  40afd8:	sub    al,ch
  40afda:	inc    ebx
  40afdb:	jne    0x40afdf
  40afdd:	int3   
  40afde:	sub    DWORD PTR [esi-0x48],esp
  40afe1:	jmp    ebx
  40afe3:	sbb    al,0x99
  40afe5:	inc    edx
  40afe6:	scas   eax,DWORD PTR es:[edi]
  40afe7:	xchg   ecx,eax
  40afe8:	aas    
  40afe9:	mov    ds:0xe1f266f6,eax
  40afee:	dec    eax
  40afef:	sub    edi,DWORD PTR [edi+0x6f541361]
  40aff5:	sbb    dl,BYTE PTR [edi+edi*8+0x94dff8]
  40affc:	mov    cl,0x2b
  40affe:	stos   BYTE PTR es:[edi],al
  40afff:	imul   DWORD PTR [edi-0x62]
  40b002:	mov    al,BYTE PTR [ebp+0x3d]
  40b005:	stos   DWORD PTR es:[edi],eax
  40b006:	(bad)  
  40b007:	mov    eax,ds:0xf65845fd
  40b00c:	mov    ds:0xbe611d3d,eax
  40b011:	(bad)  
  40b012:	xor    DWORD PTR [ebp-0x4ac3cdad],eax
  40b018:	xchg   eax,esp
  40b01a:	mov    ds:0x789d1f8d,eax
  40b01f:	and    bh,ah
  40b021:	jnp    0x40b04b
  40b023:	sahf   
  40b024:	jge    0x40b01b
  40b026:	lods   eax,DWORD PTR ds:[esi]
  40b027:	ja     0x40afaf
  40b029:	jns    0x40b086
  40b02b:	xor    DWORD PTR [esi+0x6b],edi
  40b02e:	push   esp
  40b02f:	push   edx
  40b030:	cmp    esp,ebp
  40b032:	jmp    0xff9feff2
  40b037:	inc    edi
  40b038:	jns    0x40afc3
  40b03a:	loope  0x40b06d
  40b03c:	fbstp  TBYTE PTR [edx+0x53]
  40b03f:	call   0xfd13a2b3
  40b044:	retf   
  40b045:	mov    bl,0xe
  40b047:	cli    
  40b048:	and    ah,BYTE PTR [ecx-0x1d]
  40b04b:	ins    DWORD PTR es:[edi],dx
  40b04c:	(bad)  
  40b04e:	adc    BYTE PTR [ecx+0x4d],dl
  40b051:	fs xchg ecx,eax
  40b053:	addr16 mov ch,0x56
  40b056:	cmp    cl,BYTE PTR [edi+0x4d]
  40b059:	cmc    
  40b05a:	xchg   ecx,eax
  40b05b:	dec    esp
  40b05c:	int    0xd6
  40b05e:	mov    BYTE PTR [edi+0x65882a78],bh
  40b064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b065:	sbb    al,0x2d
  40b067:	sbb    BYTE PTR [ecx-0xa],dh
  40b06a:	and    DWORD PTR [ecx-0x7b1a0126],ebp
  40b070:	loopne 0x40b03f
  40b072:	xchg   al,bl
  40b074:	cmp    ecx,DWORD PTR [eax]
  40b076:	mov    cl,0xcb
  40b078:	fldenv ds:0xacc837ca
  40b07e:	xchg   ebx,eax
  40b07f:	adc    eax,0xd5b764b7
  40b084:	pop    edx
  40b085:	mov    ecx,0xa1b4de7d
  40b08a:	rcl    DWORD PTR [edx-0x57c497e6],1
  40b090:	adc    DWORD PTR [ebx+0x1],ecx
  40b093:	jge    0x40b0e7
  40b095:	jno    0x40b089
  40b097:	mov    ch,0xe6
  40b099:	nop
  40b09a:	dec    edi
  40b09b:	leave  
  40b09c:	aas    
  40b09d:	mov    bh,0x76
  40b09f:	js     0x40b045
  40b0a1:	and    al,0x23
  40b0a3:	cld    
  40b0a4:	test   al,0x3a
  40b0a6:	out    dx,eax
  40b0a7:	mov    bl,0x56
  40b0a9:	iret   
  40b0aa:	inc    eax
  40b0ab:	rcl    BYTE PTR cs:[eax+edi*8],cl
  40b0af:	xor    DWORD PTR [edi+0xc],ecx
  40b0b2:	(bad)  
  40b0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b4:	lds    esp,FWORD PTR [esi+esi*8]
  40b0b7:	stos   BYTE PTR es:[edi],al
  40b0b8:	sti    
  40b0b9:	dec    esi
  40b0ba:	cld    
  40b0bb:	pushf  
  40b0bc:	dec    ecx
  40b0bd:	push   ebp
  40b0be:	jmp    0x85d73148
  40b0c3:	mov    bl,0xaf
  40b0c5:	js     0x40b117
  40b0c7:	js     0x40b101
  40b0c9:	in     al,0x1e
  40b0cb:	fxch   st(6)
  40b0cd:	xchg   al,ch
  40b0cf:	push   ss
  40b0d0:	xor    BYTE PTR [ebx],bl
  40b0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0d3:	popa   
  40b0d4:	jp     0x40b109
  40b0d6:	xchg   ecx,eax
  40b0d7:	mov    ebp,esi
  40b0d9:	cld    
  40b0da:	pop    ss
  40b0db:	aaa    
  40b0dc:	pop    esp
  40b0dd:	pop    eax
  40b0de:	ins    BYTE PTR es:[edi],dx
  40b0df:	(bad)  
  40b0e0:	shl    BYTE PTR [edx],cl
  40b0e2:	lahf   
  40b0e3:	cmp    al,0x85
  40b0e5:	or     DWORD PTR [edx],edi
  40b0e7:	in     eax,dx
  40b0e8:	mov    eax,es
  40b0ea:	stos   BYTE PTR es:[edi],al
  40b0eb:	in     eax,dx
  40b0ec:	push   ebp
  40b0ed:	sbb    BYTE PTR [esi],al
  40b0ef:	int    0xc0
  40b0f1:	and    al,0xe3
  40b0f3:	clc    
  40b0f4:	stos   DWORD PTR es:[edi],eax
  40b0f5:	adc    DWORD PTR [ecx],edi
  40b0f7:	sbb    ah,bh
  40b0f9:	out    dx,al
  40b0fa:	jbe    0x40b0a8
  40b0fc:	cmp    BYTE PTR [ecx],bl
  40b0fe:	push   ss
  40b0ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b100:	jp     0x40b0cc
  40b102:	push   ecx
  40b103:	inc    ebp
  40b104:	mov    dh,0x9a
  40b106:	jno    0x40b161
  40b108:	das    
  40b109:	pop    esp
  40b10a:	es or  al,0x32
  40b10d:	addr16 mov ecx,0xf1bb1606
  40b113:	daa    
  40b114:	add    eax,0xf4996ecb
  40b119:	(bad)  
  40b11b:	out    dx,al
  40b11c:	mov    dl,0xb3
  40b11e:	mov    ah,0x22
  40b120:	mov    ds:0x63f42ea1,eax
  40b125:	outs   dx,BYTE PTR ds:[esi]
  40b126:	or     eax,esp
  40b128:	nop
  40b129:	pop    ebp
  40b12a:	jmp    0x57e2f02e
  40b12f:	loop   0x40b0f3
  40b131:	hlt    
  40b132:	adc    eax,0x5810079e
  40b137:	push   edi
  40b138:	in     al,0x5e
  40b13a:	mov    eax,0x1efb81b7
  40b13f:	xchg   ecx,eax
  40b140:	mov    esi,0x7a8e2496
  40b145:	xchg   esi,eax
  40b146:	jmp    0x40b0d6
  40b148:	xor    al,BYTE PTR [eax+eiz*4]
  40b14b:	std    
  40b14c:	cmp    eax,0x4cdd5fe4
  40b151:	ins    DWORD PTR es:[edi],dx
  40b152:	xchg   BYTE PTR [ebx],cl
  40b154:	int    0x12
  40b156:	jne    0x40b0d9
  40b158:	jbe    0x40b193
  40b15a:	pop    esp
  40b15b:	gs call 0x95c7c042
  40b161:	mov    esi,0xf4872be8
  40b166:	add    DWORD PTR [edi-0x4],ebx
  40b169:	mov    edx,0x647dd02b
  40b16e:	inc    eax
  40b16f:	sbb    DWORD PTR [edi],ecx
  40b171:	sahf   
  40b172:	nop
  40b173:	adc    al,0x62
  40b175:	cmp    ch,al
  40b177:	ss jae 0x40b124
  40b17a:	add    DWORD PTR [edi+ebp*4],ecx
  40b17d:	out    0xe5,eax
  40b17f:	push   0x3856b2df
  40b184:	(bad)  
  40b185:	aas    
  40b186:	mov    eax,0x10168019
  40b18b:	das    
  40b18c:	mov    cl,0xb4
  40b18e:	xchg   al,ch
  40b190:	mov    DWORD PTR [eax-0x19],esi
  40b193:	dec    esp
  40b194:	cmp    dh,BYTE PTR [eax-0x132da335]
  40b19a:	push   ss
  40b19b:	stos   DWORD PTR es:[edi],eax
  40b19c:	mov    ds:0x9a62433f,al
  40b1a1:	(bad)  [ecx+0x115a0579]
  40b1a7:	(bad)  
  40b1a8:	out    0x99,al
  40b1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ab:	pop    ds
  40b1ac:	or     BYTE PTR [ebx+0x57fd3514],ah
  40b1b2:	dec    edx
  40b1b3:	mov    al,ds:0xf337aedf
  40b1b8:	test   eax,0x8a4bd0d8
  40b1bd:	ins    DWORD PTR es:[edi],dx
  40b1be:	pop    ss
  40b1bf:	or     al,0x50
  40b1c1:	inc    eax
  40b1c2:	inc    esi
  40b1c3:	push   DWORD PTR [esi]
  40b1c5:	scas   eax,DWORD PTR es:[edi]
  40b1c6:	rol    DWORD PTR [esi-0x8e91348],0xb0
  40b1cd:	out    0x69,eax
  40b1cf:	xchg   edi,eax
  40b1d0:	inc    esp
  40b1d1:	adc    ebx,DWORD PTR [edx]
  40b1d3:	int    0x68
  40b1d5:	stc    
  40b1d6:	adc    al,0xf7
  40b1d8:	lahf   
  40b1d9:	push   es
  40b1da:	xor    al,cl
  40b1dc:	adc    eax,0x1bfb602c
  40b1e1:	sti    
  40b1e2:	stc    
  40b1e3:	rcl    BYTE PTR [edi],0xf7
  40b1e6:	jmp    0x8df1ebc6
  40b1eb:	dec    ebx
  40b1ec:	rcr    al,1
  40b1ee:	inc    edx
  40b1ef:	ins    BYTE PTR es:[edi],dx
  40b1f0:	push   0xffffff95
  40b1f2:	mov    al,BYTE PTR [ebx-0x6]
  40b1f5:	js     0x40b268
  40b1f7:	(bad)  
  40b1f8:	sub    eax,0x1a51ff3d
  40b1fd:	cmc    
  40b1fe:	mov    ebx,0xdf0c7516
  40b203:	mov    eax,ds:0x785d5ab6
  40b208:	push   ebx
  40b209:	add    eax,0x73866a04
  40b20e:	ret    
  40b20f:	pop    DWORD PTR [eax-0x7c920b4]
  40b215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b216:	adc    DWORD PTR [ecx],0xffffffad
  40b219:	imul   ebp,ebx,0x71
  40b21c:	mov    eax,0xc425deab
  40b221:	cmp    al,BYTE PTR [ecx+0x31]
  40b224:	js     0x40b242
  40b226:	add    al,0xa1
  40b228:	xchg   edi,eax
  40b229:	inc    esp
  40b22a:	pop    ss
  40b22b:	xchg   esp,eax
  40b22c:	xchg   BYTE PTR [edx-0x11],bh
  40b22f:	mov    dh,0xd
  40b231:	xchg   edi,eax
  40b232:	mov    ch,0xf5
  40b234:	and    al,BYTE PTR [edx+edx*2+0x6a]
  40b238:	xchg   ebp,eax
  40b239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b23a:	pop    esi
  40b23b:	repz or ebp,DWORD PTR [eax+ebp*8]
  40b23f:	lods   eax,DWORD PTR ds:[esi]
  40b240:	adc    DWORD PTR [ecx+0x29ca1409],eax
  40b246:	idiv   DWORD PTR [esi]
  40b248:	xchg   esi,eax
  40b249:	push   edx
  40b24a:	js     0x40b228
  40b24c:	ret    
  40b24d:	mov    esi,0xc41eccc8
  40b252:	cmc    
  40b253:	and    eax,0x564e4e2
  40b258:	fisttp WORD PTR [esp+eiz*8]
  40b25b:	(bad)  
  40b25c:	ja     0x40b22b
  40b25e:	(bad)  
  40b25f:	rcr    al,0x79
  40b262:	shl    DWORD PTR [eax+0x7d558281],1
  40b268:	inc    edi
  40b269:	xchg   esi,eax
  40b26a:	mov    ecx,0x609ecc5a
  40b26f:	out    0x1,eax
  40b271:	shl    BYTE PTR [eax],1
  40b273:	dec    ebx
  40b274:	es sti 
  40b276:	jg     0x40b2d0
  40b278:	and    eax,0x6884d57a
  40b27d:	adc    al,0x86
  40b27f:	mov    fs,WORD PTR [ebx]
  40b281:	ss cmp al,0xf2
  40b284:	xor    al,0x5b
  40b286:	xchg   ebp,eax
  40b287:	les    eax,FWORD PTR [ecx+0xa]
  40b28a:	loopne 0x40b309
  40b28c:	int    0x3e
  40b28e:	aam    0xd
  40b290:	ins    DWORD PTR es:[edi],dx
  40b291:	shl    BYTE PTR [edi],1
  40b293:	iret   
  40b294:	mov    ebp,0x70edc30c
  40b299:	(bad)  
  40b29a:	in     al,dx
  40b29b:	dec    ecx
  40b29c:	out    0x92,al
  40b29e:	in     eax,dx
  40b29f:	stc    
  40b2a0:	or     eax,0x62efbee4
  40b2a5:	jb     0x40b313
  40b2a7:	pop    ebp
  40b2a8:	push   ebp
  40b2a9:	paddd  mm1,QWORD PTR [ecx-0x55ed8c62]
  40b2b0:	pushaw 
  40b2b2:	das    
  40b2b3:	cmp    esp,DWORD PTR [ecx+0x15]
  40b2b6:	jo     0x40b317
  40b2b8:	pop    ebp
  40b2b9:	push   ebx
  40b2ba:	jbe    0x40b2b9
  40b2bc:	and    al,0x8c
  40b2be:	repz push ss
  40b2c0:	jmp    0x37dd:0x730b2ebc
  40b2c7:	outs   dx,BYTE PTR ds:[esi]
  40b2c8:	or     dl,dh
  40b2ca:	mov    bl,0xd1
  40b2cc:	fnsave [ebx-0x58cfac25]
  40b2d2:	or     ecx,eax
  40b2d4:	push   esi
  40b2d5:	sbb    ebx,ecx
  40b2d7:	inc    edi
  40b2d8:	loopne 0x40b2e6
  40b2da:	rcr    ch,1
  40b2dc:	(bad)  
  40b2dd:	mov    al,ds:0x9f78f777
  40b2e2:	lea    esi,[ebp+0x28881a7c]
  40b2e8:	and    ecx,ebx
  40b2ea:	ins    DWORD PTR es:[edi],dx
  40b2eb:	and    al,0xf9
  40b2ed:	enter  0x3416,0xea
  40b2f1:	mov    al,0xcf
  40b2f3:	xchg   DWORD PTR [ecx+ebx*4],edx
  40b2f6:	mov    ds:0xb23beb40,eax
  40b2fb:	cmovge edi,DWORD PTR [ecx-0xe]
  40b2ff:	jmp    0x6f06:0xc9d00f8e
  40b306:	fstp   DWORD PTR [eax]
  40b308:	and    esi,DWORD PTR [esi-0x15be9b24]
  40b30e:	add    BYTE PTR [ecx+0x26],0xa1
  40b312:	fisttp WORD PTR [esi+0x60bbe21]
  40b318:	mov    dh,0xa3
  40b31a:	xchg   ecx,eax
  40b31b:	xor    eax,DWORD PTR [ecx]
  40b31d:	push   eax
  40b31e:	cmp    al,0xad
  40b320:	jb     0x40b2d3
  40b322:	shr    DWORD PTR [eax],0x19
  40b325:	rcl    BYTE PTR [esi-0x80],0xb9
  40b329:	push   ss
  40b32a:	inc    esi
  40b32b:	dec    ebp
  40b32c:	push   ebp
  40b32d:	sar    ch,1
  40b32f:	push   0x47de58bb
  40b334:	mov    esi,0x20412520
  40b339:	ret    0xd1a0
  40b33c:	mov    dl,0x28
  40b33e:	shl    BYTE PTR [esi],cl
  40b340:	mov    ds:0x3a6a8441,al
  40b345:	mov    DWORD PTR [edx-0x5cc541de],ebp
  40b34b:	inc    esi
  40b34c:	mov    edx,0x612f6320
  40b351:	rol    eax,1
  40b353:	push   0x26
  40b355:	mov    al,ds:0xc69759e1
  40b35a:	in     eax,0x2
  40b35c:	jnp    0x40b316
  40b35e:	rcl    ch,cl
  40b360:	popa   
  40b361:	(bad)  
  40b362:	ret    0xec30
  40b365:	cmp    al,0xb
  40b367:	stos   DWORD PTR es:[edi],eax
  40b368:	fs jo  0x40b2f8
  40b36b:	into   
  40b36c:	cmovs  ebx,DWORD PTR [ecx-0x2a]
  40b370:	inc    edx
  40b371:	sbb    BYTE PTR [edi-0x1d],dh
  40b374:	outs   dx,DWORD PTR ds:[esi]
  40b375:	mov    eax,ds:0x9acc0c40
  40b37a:	or     eax,0x19362595
  40b37f:	or     DWORD PTR [edi+0x3c],esp
  40b382:	push   0x8b321a75
  40b387:	jmp    0x40b356
  40b389:	mov    dl,0x72
  40b38b:	sub    eax,0xa8fd188a
  40b390:	sbb    BYTE PTR [edx-0x373ffb41],ah
  40b396:	mov    edx,0xd7e39a40
  40b39b:	ds inc edx
  40b39d:	test   BYTE PTR [ebx],cl
  40b39f:	and    al,0x2f
  40b3a1:	push   ds
  40b3a2:	dec    ecx
  40b3a3:	jbe    0x40b3ea
  40b3a5:	in     al,dx
  40b3a6:	jge    0x40b364
  40b3a8:	inc    ebx
  40b3a9:	outs   dx,BYTE PTR ds:[esi]
  40b3aa:	fst    QWORD PTR [esi-0x61]
  40b3ad:	xchg   edx,eax
  40b3ae:	mov    es,WORD PTR [edx]
  40b3b0:	pushf  
  40b3b1:	mov    ah,0xe1
  40b3b3:	jb     0x40b3e1
  40b3b5:	mov    dl,bl
  40b3b7:	(bad)
  40b3ba:	sbb    esi,edi
  40b3bc:	or     BYTE PTR [eax],ah
  40b3be:	jmp    0x5655:0xa05609d7
  40b3c5:	mov    ah,0x39
  40b3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3c8:	jmp    0x5be44678
  40b3cd:	mov    eax,0xc8e9a5bc
  40b3d2:	push   es
  40b3d3:	jecxz  0x40b37f
  40b3d5:	and    eax,0xe05d11a1
  40b3da:	or     bh,BYTE PTR [ebx+0x1a]
  40b3dd:	das    
  40b3de:	icebp  
  40b3df:	stos   DWORD PTR es:[edi],eax
  40b3e0:	add    eax,0x6032621a
  40b3e5:	hlt    
  40b3e6:	xchg   dh,cl
  40b3e8:	lds    ecx,FWORD PTR [ecx-0x7a20657d]
  40b3ee:	pop    edx
  40b3ef:	mov    WORD PTR [esi],es
  40b3f1:	adc    eax,0x323a281b
  40b3f6:	jmp    0x4ccef092
  40b3fb:	push   cs
  40b3fc:	jno    0x40b3d0
  40b3fe:	das    
  40b3ff:	jne    0x40b3d7
  40b401:	add    eax,0x6b02796b
  40b406:	jmp    DWORD PTR [edi+0x2d]
  40b409:	aas    
  40b40a:	and    dh,BYTE PTR [ebx+eax*1-0x1a65741b]
  40b411:	fcom   DWORD PTR [eax-0x35]
  40b414:	inc    ebp
  40b415:	mov    WORD PTR [ebx],fs
  40b417:	inc    bp
  40b419:	dec    eax
  40b41a:	xchg   BYTE PTR [esi+0x14f46dea],dh
  40b420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b421:	mov    ?,WORD PTR [ebp-0x6e]
  40b424:	adc    ebx,DWORD PTR [eax+edi*4+0x38]
  40b428:	mov    DWORD PTR [edi+0x52],0xb552a32
  40b42f:	mov    eax,ds:0x114f9cb6
  40b434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b435:	sub    DWORD PTR [ebp+eiz*4-0x4],ecx
  40b439:	out    0x68,al
  40b43b:	or     dh,BYTE PTR [ebx-0x2c55611d]
  40b441:	dec    ebx
  40b442:	call   0x5469:0xde4c98bc
  40b449:	jno    0x40b417
  40b44b:	pop    esp
  40b44c:	aas    
  40b44d:	sar    DWORD PTR [edi-0x3a471a2e],0x42
  40b454:	(bad)  
  40b455:	adc    eax,0xbe94bd9b
  40b45a:	xchg   ecx,eax
  40b45b:	outs   dx,DWORD PTR ds:[esi]
  40b45c:	aad    0xb8
  40b45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b45f:	mov    al,0xfd
  40b461:	jae    0x40b4a2
  40b463:	shr    DWORD PTR ds:0x39ca33e5,0x25
  40b46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b46b:	in     eax,0x94
  40b46d:	xor    dh,BYTE PTR [eax-0x5a7f9d9c]
  40b473:	jmp    0x5ffa4db5
  40b478:	in     al,dx
  40b479:	retf   
  40b47a:	pusha  
  40b47b:	outs   dx,DWORD PTR ds:[esi]
  40b47c:	jmp    0x7e0ffdaf
  40b481:	mov    ch,0xa3
  40b483:	es push eax
  40b485:	(bad)  
  40b487:	mov    ebx,0x2b4b8267
  40b48c:	hlt    
  40b48d:	imul   ebp,esi,0x7140c881
  40b493:	sbb    esi,DWORD PTR [edi-0x7a]
  40b496:	in     eax,dx
  40b497:	dec    edx
  40b498:	and    edi,ecx
  40b49a:	xchg   DWORD PTR [ecx-0x76],ebp
  40b49d:	repnz or esi,DWORD PTR [edi+0x56]
  40b4a1:	jnp    0x40b51a
  40b4a3:	sti    
  40b4a4:	jmp    0x1658:0x5c336f68
  40b4ab:	shl    BYTE PTR [esp+esi*8+0x15],0x46
  40b4b0:	call   0xf104:0xe0d8a337
  40b4b7:	pop    eax
  40b4b8:	add    BYTE PTR [esi],cl
  40b4ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4bb:	(bad)  
  40b4bc:	xchg   DWORD PTR ds:0x8b3c2577,eax
  40b4c2:	ret    
  40b4c3:	retf   0x524e
  40b4c6:	sar    BYTE PTR ds:0x48408ea9,1
  40b4cc:	sahf   
  40b4cd:	stc    
  40b4ce:	ds int 0x1d
  40b4d1:	pop    esi
  40b4d2:	sub    al,BYTE PTR [eax]
  40b4d4:	mov    edi,0xfdc6f6d
  40b4d9:	add    esp,edi
  40b4db:	repz adc eax,0x9532e821
  40b4e1:	test   DWORD PTR [edx+0x7c605448],ebx
  40b4e7:	adc    dl,BYTE PTR [ecx]
  40b4e9:	loopne 0x40b52d
  40b4eb:	pop    ebp
  40b4ec:	jae    0x40b481
  40b4ee:	pop    esp
  40b4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4f0:	add    DWORD PTR [ecx],ecx
  40b4f2:	fadd   st,st(6)
  40b4f4:	frstor ds:0xddae9f58
  40b4fa:	test   al,0x82
  40b4fc:	push   ds
  40b4fd:	mov    bl,0xf2
  40b4ff:	cmc    
  40b500:	dec    ebx
  40b501:	push   edx
  40b502:	push   ds
  40b503:	dec    esp
  40b504:	mov    dh,0x3e
  40b506:	popf   
  40b507:	fwait
  40b508:	inc    edi
  40b509:	jmp    0x207a:0xe33a1292
  40b510:	inc    ebx
  40b511:	inc    eax
  40b512:	or     edi,DWORD PTR [eax-0x73]
  40b515:	aas    
  40b516:	mov    esi,0x7d9a9c4b
  40b51b:	test   eax,0xccc37b37
  40b520:	ss sbb al,0xae
  40b523:	adc    al,0x50
  40b525:	push   ebx
  40b526:	cmp    ebx,DWORD PTR [esi+0x38]
  40b529:	cld    
  40b52a:	and    DWORD PTR [edx],ebx
  40b52c:	nop
  40b52d:	adc    ebx,DWORD PTR [edi-0x32]
  40b530:	call   0xc407:0x2adb6afd
  40b537:	cmp    edi,ebp
  40b539:	and    dh,BYTE PTR [eax-0x5b]
  40b53c:	rol    DWORD PTR [edx-0x24484406],0xcf
  40b543:	(bad)  
  40b544:	loop   0x40b51e
  40b546:	push   0x49017c94
  40b54b:	cwde   
  40b54c:	imul   ebx,DWORD PTR [esi],0x3d9d3178
  40b552:	sub    eax,0xd9b7b4fc
  40b557:	ins    DWORD PTR es:[edi],dx
  40b558:	ja     0x40b5c0
  40b55a:	punpckhdq mm2,mm7
  40b55d:	jmp    0x9a12:0x21c9c971
  40b564:	mov    eax,ds:0x49484c66
  40b569:	jmp    0x39f2:0x43660139
  40b570:	fxtract 
  40b572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b573:	in     al,dx
  40b574:	icebp  
  40b575:	sti    
  40b576:	mov    BYTE PTR [ebx+0x2a],dh
  40b579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b57a:	loope  0x40b59a
  40b57c:	xor    eax,0xf251f6ab
  40b581:	mov    esp,0x973e7253
  40b586:	in     al,0x7d
  40b588:	jmp    0x40b52a
  40b58a:	cdq    
  40b58b:	out    0x14,eax
  40b58d:	mov    bh,0xdd
  40b58f:	pusha  
  40b590:	loop   0x40b532
  40b592:	jne    0x40b52a
  40b594:	add    eax,0xc2235848
  40b599:	mov    bl,0xc8
  40b59b:	pop    esi
  40b59c:	aad    0x17
  40b59e:	push   ss
  40b59f:	arpl   WORD PTR [ecx],ax
  40b5a1:	ja     0x40b5ee
  40b5a3:	das    
  40b5a4:	xchg   DWORD PTR [ebx],eax
  40b5a6:	popf   
  40b5a7:	pop    ds
  40b5a8:	daa    
  40b5a9:	sub    eax,0x35824c5d
  40b5ae:	sahf   
  40b5af:	adc    esp,DWORD PTR [esi-0x3b]
  40b5b2:	inc    ecx
  40b5b3:	xchg   esi,eax
  40b5b4:	pop    edi
  40b5b5:	ret    0xf2df
  40b5b8:	enter  0x3bea,0xec
  40b5bc:	push   0xb8c44e53
  40b5c1:	mov    bh,0xe7
  40b5c3:	repnz sbb dh,bl
  40b5c6:	xchg   BYTE PTR [esi+0x1f24e548],bh
  40b5cc:	and    al,0xf7
  40b5ce:	shr    DWORD PTR [eax+edi*2+0x43],1
  40b5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d3:	push   edi
  40b5d4:	in     al,0x72
  40b5d6:	add    DWORD PTR [edx+0x4314f5f6],ebp
  40b5dc:	aas    
  40b5dd:	mov    fs,WORD PTR [edx-0x3deaa36]
  40b5e3:	sti    
  40b5e4:	sbb    ebp,DWORD PTR [eax+0x20]
  40b5e7:	aad    0x4c
  40b5e9:	nop
  40b5ea:	into   
  40b5eb:	iret   
  40b5ec:	pop    esi
  40b5ed:	(bad)  
  40b5ee:	xchg   BYTE PTR [ebx-0x2a66bb43],ch
  40b5f4:	in     al,0x42
  40b5f6:	mov    ecx,0x89ecb4d3
  40b5fb:	inc    edi
  40b5fc:	xchg   ebp,eax
  40b5fd:	std    
  40b5fe:	cli    
  40b5ff:	pushf  
  40b600:	(bad)  
  40b601:	punpckldq mm7,DWORD PTR [ebp-0x60]
  40b605:	xchg   ebx,eax
  40b606:	mov    al,0x2e
  40b608:	push   esi
  40b609:	lods   al,BYTE PTR ds:[esi]
  40b60a:	and    DWORD PTR [edx-0x21],ebp
  40b60d:	push   0xffffffcf
  40b60f:	rcr    DWORD PTR [edi+eax*1-0x61522bb9],0xc3
  40b617:	mov    WORD PTR [eax],ss
  40b619:	sti    
  40b61a:	les    edx,FWORD PTR [ebx]
  40b61c:	icebp  
  40b61d:	sub    cl,BYTE PTR [eax+0x7]
  40b620:	cmp    al,0x2f
  40b622:	pop    ebx
  40b623:	and    al,0xf1
  40b625:	clc    
  40b626:	dec    esp
  40b627:	cmp    eax,DWORD PTR [eax+0x29]
  40b62a:	fisub  DWORD PTR [ebx-0x3c]
  40b62d:	stc    
  40b62e:	pop    ecx
  40b62f:	ds cmp BYTE PTR fs:[ecx+0x50],al
  40b634:	arpl   WORD PTR [edx-0x42],ax
  40b637:	ja     0x40b5d7
  40b639:	imul   DWORD PTR [ecx-0x32]
  40b63c:	mov    eax,ds:0x7de7e497
  40b641:	mov    al,0x9
  40b643:	retf   
  40b644:	xchg   esi,ebx
  40b646:	leave  
  40b647:	hlt    
  40b648:	mov    ebx,0x5a41f7e5
  40b64d:	in     eax,0x1a
  40b64f:	cmp    BYTE PTR [ecx-0x40],al
  40b652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b653:	jae    0x40b6d0
  40b655:	leave  
  40b656:	dec    ecx
  40b657:	imul   esi,DWORD PTR [ecx-0x3aa427b2],0xffffffb0
  40b65e:	mov    ds:0x407458f,eax
  40b663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b664:	ja     0x40b6e3
  40b666:	stos   DWORD PTR es:[edi],eax
  40b667:	and    ch,BYTE PTR [ecx+0x48073cb7]
  40b66d:	sub    DWORD PTR [esi-0x3a],eax
  40b670:	jp     0x40b618
  40b672:	jnp    0x40b6e6
  40b674:	sbb    ebx,DWORD PTR [edx+0x60]
  40b677:	shl    BYTE PTR [ecx],cl
  40b679:	lock in eax,dx
  40b67b:	cli    
  40b67c:	xor    eax,0xccf79499
  40b681:	or     bl,BYTE PTR [eiz*2+0x345b4769]
  40b688:	xchg   edx,eax
  40b689:	xchg   edx,eax
  40b68a:	fstp   QWORD PTR [ebx-0x78f9edc7]
  40b690:	inc    edx
  40b691:	or     dl,BYTE PTR [ebp+0x1d38331f]
  40b697:	pop    edx
  40b698:	jle    0x40b697
  40b69a:	imul   ecx,edi,0x79a50311
  40b6a0:	jmp    0xa02d7e43
  40b6a5:	scas   al,BYTE PTR es:[edi]
  40b6a6:	aam    0x63
  40b6a8:	into   
  40b6a9:	test   eax,0x76af8fc3
  40b6ae:	test   al,0x32
  40b6b0:	sar    BYTE PTR [esp+ecx*4],0x5d
  40b6b4:	mov    DWORD PTR [edx],ebx
  40b6b6:	mov    ebx,0xa7ca8e29
  40b6bb:	inc    edx
  40b6bc:	pop    es
  40b6bd:	pushf  
  40b6be:	pop    ss
  40b6bf:	mov    cl,0xdd
  40b6c1:	push   ebp
  40b6c2:	and    eax,0x76ee87d1
  40b6c7:	cmp    bl,al
  40b6c9:	mov    WORD PTR [eax+0x56119f9f],?
  40b6cf:	icebp  
  40b6d0:	adc    al,0xbe
  40b6d2:	retf   
  40b6d3:	push   ss
  40b6d4:	sub    DWORD PTR [bp+si+0x61],0x996093ee
  40b6dc:	adc    al,BYTE PTR [esi-0x7b]
  40b6df:	mov    es,WORD PTR [edx-0x1872f72d]
  40b6e5:	jb     0x40b68f
  40b6e7:	mov    dl,0x36
  40b6ea:	scas   eax,DWORD PTR es:[edi]
  40b6eb:	pop    eax
  40b6ec:	iret   
  40b6ed:	mov    eax,ds:0x9b769be6
  40b6f2:	push   eax
  40b6f3:	sub    dl,bh
  40b6f5:	stos   DWORD PTR es:[edi],eax
  40b6f6:	ss in  eax,dx
  40b6f8:	xchg   ebp,eax
  40b6f9:	and    BYTE PTR [edx+0x3d],0xc7
  40b6fd:	mov    ds:0x4b359c47,eax
  40b702:	popa   
  40b703:	dec    ebp
  40b704:	xor    eax,0x96f9ebc1
  40b709:	pop    ebp
  40b70a:	push   es
  40b70b:	clc    
  40b70c:	dec    esp
  40b70d:	xor    edx,edx
  40b70f:	shr    DWORD PTR [edi+0xa216109],cl
  40b715:	lds    ebx,FWORD PTR [esi]
  40b717:	ins    BYTE PTR es:[edi],dx
  40b718:	stc    
  40b719:	(bad)  
  40b71c:	pop    edi
  40b71d:	into   
  40b71e:	xor    eax,0x7427e7e2
  40b723:	repnz nop
  40b725:	add    al,BYTE PTR [ebx+0x2e9c31f6]
  40b72b:	add    dl,dl
  40b72d:	add    BYTE PTR [ebx],dl
  40b72f:	xchg   ecx,eax
  40b730:	jecxz  0x40b7ab
  40b732:	fadd   DWORD PTR [edx+esi*8+0x4b]
  40b736:	rcr    edi,1
  40b738:	std    
  40b739:	lods   eax,DWORD PTR ds:[esi]
  40b73a:	xor    ebx,DWORD PTR [ebp+ebp*4-0x14711b26]
  40b741:	mov    edi,0x49f6dc7a
  40b746:	idiv   BYTE PTR [ebx+ecx*2-0x755de7f8]
  40b74d:	fwait
  40b74e:	pop    ecx
  40b74f:	pop    ebp
  40b750:	xchg   DWORD PTR [ebx],ebx
  40b752:	sub    esp,DWORD PTR [edx-0x6cd0ac38]
  40b758:	jne    0x40b722
  40b75a:	add    al,0x65
  40b75c:	and    eax,0x618c4001
  40b761:	repnz mov esi,0x19ca640f
  40b767:	xor    eax,0x856421c1
  40b76c:	xor    DWORD PTR [eax-0x5a24ee39],0xffffff8b
  40b773:	stos   DWORD PTR es:[edi],eax
  40b774:	add    DWORD PTR [edi-0x26e579f3],0x9fe89825
  40b77e:	sahf   
  40b77f:	push   0xffffffb3
  40b781:	aaa    
  40b782:	(bad)  
  40b783:	xor    eax,0x235fb396
  40b788:	sub    dh,BYTE PTR ds:0x67643509
  40b78e:	or     al,0x9f
  40b791:	out    0xb7,al
  40b793:	(bad)  
  40b794:	repz jecxz 0x40b761
  40b797:	into   
  40b798:	ror    BYTE PTR [ebp-0x78d2b99d],cl
  40b79e:	iret   
  40b79f:	mov    dl,0xc5
  40b7a1:	aam    0xbd
  40b7a3:	in     eax,dx
  40b7a4:	add    BYTE PTR [esi-0x54],ch
  40b7a7:	gs cs xor eax,0x7fed1573
  40b7ae:	push   esp
  40b7af:	xchg   ebp,eax
  40b7b0:	mov    esp,0x422e4288
  40b7b5:	sti    
  40b7b6:	in     al,dx
  40b7b7:	pop    eax
  40b7b8:	(bad)  
  40b7b9:	push   edi
  40b7ba:	dec    ebx
  40b7bb:	pop    ss
  40b7bc:	scas   al,BYTE PTR es:[edi]
  40b7bd:	cmp    DWORD PTR [eax-0x68faf805],edi
  40b7c3:	mov    ds:0x1d207784,al
  40b7c8:	adc    al,0x52
  40b7ca:	xchg   esi,eax
  40b7cb:	arpl   WORD PTR [edi-0x25],si
  40b7ce:	aad    0x1b
  40b7d0:	push   ebp
  40b7d1:	mov    bl,0x4e
  40b7d3:	mov    ebp,0x85dc805b
  40b7d8:	pop    ss
  40b7d9:	and    esi,DWORD PTR [edx-0x9]
  40b7dc:	sub    al,0x7b
  40b7de:	jne    0x40b7bb
  40b7e0:	scas   al,BYTE PTR es:[edi]
  40b7e1:	outs   dx,DWORD PTR ds:[esi]
  40b7e2:	mov    ebx,0xb94ffff5
  40b7e7:	loope  0x40b7c2
  40b7e9:	push   ecx
  40b7ea:	jl     0x40b7e3
  40b7ec:	call   FWORD PTR [ebp+0x4]
  40b7ef:	dec    edi
  40b7f0:	loopne 0x40b817
  40b7f2:	push   esi
  40b7f3:	imul   ecx,DWORD PTR ds:0xa6077048,0x42
  40b7fa:	das    
  40b7fb:	jns    0x40b865
  40b7fd:	pushf  
  40b7fe:	lods   eax,DWORD PTR ds:[esi]
  40b7ff:	fmul   DWORD PTR [eax]
  40b801:	fld    DWORD PTR [eax+0x154b42f7]
  40b807:	mov    edi,0x46f87aa8
  40b80c:	hlt    
  40b80d:	lds    ecx,FWORD PTR [edx+0x47c40cea]
  40b813:	adc    al,0xe0
  40b815:	cmc    
  40b816:	jmp    0xc567c724
  40b81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b81d:	and    esp,edx
  40b81f:	aad    0x5a
  40b821:	test   eax,0x2f2bb9cd
  40b826:	sbb    BYTE PTR [edi],ah
  40b828:	into   
  40b829:	push   0xcbeae316
  40b82e:	sar    BYTE PTR [ebx],0x1b
  40b831:	dec    edx
  40b832:	dec    edi
  40b833:	ja     0x40b805
  40b835:	or     eax,0xb24b634f
  40b83a:	ret    
  40b83b:	xor    ah,bl
  40b83d:	fbld   TBYTE PTR [esi-0x6cd6bb9e]
  40b843:	mov    dh,0x4a
  40b845:	pop    ecx
  40b846:	jl     0x40b851
  40b848:	ficom  WORD PTR [ecx+0x5f]
  40b84b:	sbb    BYTE PTR [ecx-0x52d16bcf],dh
  40b851:	xchg   ecx,eax
  40b852:	stc    
  40b853:	cmp    BYTE PTR [ebp+0x40],al
  40b856:	dec    esp
  40b857:	int    0xa
  40b859:	loop   0x40b827
  40b85b:	jl     0x40b820
  40b85d:	jb     0x40b7ed
  40b85f:	pop    esp
  40b860:	sbb    al,ah
  40b862:	xchg   ebx,eax
  40b863:	or     al,0x2b
  40b865:	push   edi
  40b866:	pusha  
  40b867:	cs out dx,eax
  40b869:	adc    bh,ch
  40b86b:	ins    DWORD PTR es:[edi],dx
  40b86c:	in     eax,dx
  40b86d:	push   ecx
  40b86e:	inc    ecx
  40b86f:	jg     0x40b865
  40b871:	mov    edi,0x41879550
  40b876:	and    eax,0xb2a5d5a9
  40b87b:	mov    bh,0xd9
  40b87d:	cld    
  40b87e:	fdiv   DWORD PTR [esi+0x34b87f4]
  40b884:	ror    BYTE PTR [edi-0x5aeb0a9c],0xf9
  40b88b:	mov    ch,0xc1
  40b88d:	call   0xeb74:0x74f51581
  40b894:	inc    edx
  40b895:	xchg   DWORD PTR [eax],ecx
  40b897:	mov    WORD PTR [esi],fs
  40b899:	cmp    eax,0xe9734a61
  40b89e:	adc    ebx,DWORD PTR [eax]
  40b8a0:	sbb    ah,dh
  40b8a2:	into   
  40b8a3:	pop    esi
  40b8a4:	sub    DWORD PTR [ecx-0x76],edx
  40b8a7:	outs   dx,DWORD PTR ds:[esi]
  40b8a8:	push   ebx
  40b8a9:	add    DWORD PTR [esi+eax*2],0xa7c2d7be
  40b8b0:	xchg   ebp,eax
  40b8b1:	lock add al,0x2a
  40b8b4:	out    dx,eax
  40b8b5:	dec    edi
  40b8b6:	scas   al,BYTE PTR es:[edi]
  40b8b7:	mov    ebp,0xc68be95
  40b8bc:	mov    edi,0x34f04fba
  40b8c1:	in     eax,dx
  40b8c2:	retf   
  40b8c3:	mov    cl,0xac
  40b8c5:	xor    eax,0x4b6baa4e
  40b8ca:	xchg   esp,eax
  40b8cb:	xchg   esi,eax
  40b8cc:	js     0x40b923
  40b8ce:	xor    al,0x94
  40b8d0:	xor    BYTE PTR [ecx],bl
  40b8d2:	rol    DWORD PTR [esi],cl
  40b8d4:	js     0x40b86e
  40b8d6:	mov    fs,esp
  40b8d8:	cmp    al,0x44
  40b8da:	sub    al,0xd7
  40b8dc:	xchg   ebx,eax
  40b8dd:	xchg   ebx,eax
  40b8de:	(bad)  
  40b8df:	adc    bh,BYTE PTR [ebp-0x53]
  40b8e2:	cli    
  40b8e3:	bound  edx,QWORD PTR [ecx+ecx*1-0x798fcf09]
  40b8ea:	jae    0x40b8a6
  40b8ec:	test   BYTE PTR [eax-0x6925f23b],dh
  40b8f2:	mov    dh,0xd6
  40b8f4:	pop    ds
  40b8f5:	sub    WORD PTR [eax-0x45],ax
  40b8f9:	jle    0x40b87b
  40b8fb:	mov    dl,0x2a
  40b8fd:	fld    DWORD PTR [edi+0x74508678]
  40b903:	add    eax,0x511b5736
  40b908:	mov    edx,0x5cd42422
  40b90d:	or     al,0xa7
  40b90f:	scas   eax,DWORD PTR es:[edi]
  40b910:	sbb    eax,0x71c6a87b
  40b915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b916:	mov    al,0xb0
  40b918:	sub    ebx,DWORD PTR [ebx-0x72d1d365]
  40b91e:	push   esp
  40b91f:	fwait
  40b920:	leave  
  40b921:	ja     0x40b92d
  40b923:	adc    bl,BYTE PTR [ecx+0x7347ee2b]
  40b929:	push   edx
  40b92a:	adc    eax,0xee439327
  40b92f:	clc    
  40b930:	ja     0x40b8e1
  40b932:	cdq    
  40b933:	lds    esp,FWORD PTR [ebp*1+0x32d2c115]
  40b93a:	mov    BYTE PTR [edx],cl
  40b93c:	xor    dh,BYTE PTR [ecx+0x41]
  40b93f:	std    
  40b940:	adc    al,0x31
  40b942:	jo     0x40b956
  40b944:	inc    edi
  40b945:	cmp    edi,DWORD PTR [edi+eiz*4+0xd]
  40b949:	pop    ebx
  40b94a:	mov    eax,0x44a67d88
  40b94f:	pop    eax
  40b950:	xor    BYTE PTR [esi-0x1f],0x91
  40b954:	pop    es
  40b955:	icebp  
  40b956:	push   esi
  40b957:	push   esi
  40b958:	mov    dh,0x34
  40b95a:	xor    DWORD PTR [eax],0xffffffc5
  40b95d:	dec    ebp
  40b95e:	sub    DWORD PTR [edx-0x40],ebx
  40b961:	jl     0x40b96f
  40b963:	outs   dx,BYTE PTR ds:[esi]
  40b964:	fidiv  DWORD PTR [ebp-0x2ef259e1]
  40b96a:	cmp    eax,DWORD PTR [edx]
  40b96c:	jno    0x40b9c5
  40b96e:	inc    esi
  40b96f:	int3   
  40b970:	sbb    al,BYTE PTR [esi]
  40b972:	sahf   
  40b973:	gs stos BYTE PTR es:[edi],al
  40b975:	dec    ebp
  40b976:	fild   DWORD PTR [ecx]
  40b978:	mov    al,BYTE PTR [ebp+0x39]
  40b97b:	rcr    BYTE PTR [eax+edx*2-0x1eddd070],cl
  40b982:	jl     0x40b92a
  40b984:	push   ecx
  40b985:	inc    ebp
  40b986:	pop    ecx
  40b987:	jmp    0x85d89ecb
  40b98c:	loopne 0x40b968
  40b98e:	push   ebp
  40b98f:	pop    esi
  40b990:	jmp    0xbdad6610
  40b995:	and    DWORD PTR [esi+0x22],esp
  40b998:	xlat   BYTE PTR ds:[ebx]
  40b999:	outs   dx,DWORD PTR ds:[esi]
  40b99a:	xlat   BYTE PTR ds:[ebx]
  40b99b:	push   esp
  40b99c:	test   BYTE PTR [esi+0x21],cl
  40b99f:	jmp    0x40b9ad
  40b9a1:	push   esi
  40b9a2:	fidivr DWORD PTR [ecx-0xb]
  40b9a5:	(bad)  
  40b9a6:	sbb    dl,bl
  40b9a8:	lods   eax,DWORD PTR ds:[esi]
  40b9a9:	hlt    
  40b9aa:	push   ecx
  40b9ab:	mov    edx,0xb8f6bd37
  40b9b0:	sti    
  40b9b1:	adc    BYTE PTR [esi+0x79],dl
  40b9b4:	repnz adc ch,al
  40b9b7:	xchg   edi,eax
  40b9b8:	rcl    BYTE PTR [esi+0xa64fc9b],cl
  40b9be:	mov    ebp,0xf86c73c1
  40b9c3:	fidivr DWORD PTR [eax-0x34d1d0c3]
  40b9c9:	pop    ecx
  40b9ca:	adc    DWORD PTR [ebx],ebx
  40b9cc:	rol    DWORD PTR [eax],0x42
  40b9cf:	cmp    bl,al
  40b9d1:	out    dx,eax
  40b9d2:	and    al,0x60
  40b9d4:	ss mov bh,0xc
  40b9d7:	inc    edx
  40b9d8:	xchg   ebp,eax
  40b9d9:	fcom   QWORD PTR [ebp+0xc80ec73]
  40b9df:	pushf  
  40b9e0:	ds ins DWORD PTR es:[edi],dx
  40b9e2:	xchg   ecx,eax
  40b9e3:	and    BYTE PTR [ecx+ebx*1+0x37],dh
  40b9e7:	cmp    eax,DWORD PTR [ecx]
  40b9e9:	ficom  WORD PTR [ebp+0x1f]
  40b9ec:	push   0x37
  40b9ee:	jmp    0x40ba66
  40b9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f1:	mov    dl,0x70
  40b9f3:	xchg   ebp,eax
  40b9f4:	jecxz  0x40b9f1
  40b9f6:	pop    ss
  40b9f7:	mov    bl,0xb8
  40b9f9:	(bad)  
  40b9fa:	cmp    ch,BYTE PTR [edi-0x25fcb918]
  40ba00:	test   al,0x88
  40ba02:	xchg   BYTE PTR [ebx],dl
  40ba04:	fild   DWORD PTR [esi-0x43]
  40ba07:	pop    ss
  40ba08:	push   0x7c
  40ba0a:	test   BYTE PTR ds:0x96568767,dl
  40ba10:	inc    ebp
  40ba11:	cmp    dh,bl
  40ba13:	rcr    DWORD PTR [ebx+0x24],1
  40ba16:	enter  0xe5b3,0xa
  40ba1a:	sub    DWORD PTR [edi+0x40],ebx
  40ba1d:	outs   dx,DWORD PTR ds:[esi]
  40ba1e:	cmp    DWORD PTR [ebp-0x51e7e244],edx
  40ba24:	repnz mov dl,0x4f
  40ba27:	call   0xe3371838
  40ba2c:	inc    ebx
  40ba2d:	mov    cs,WORD PTR [esi-0x80]
  40ba30:	fiadd  DWORD PTR [ecx+0x64]
  40ba33:	xor    eax,0x4113831
  40ba38:	sbb    eax,DWORD PTR [eax-0x42486214]
  40ba3e:	sub    DWORD PTR [edx],ecx
  40ba40:	lods   al,BYTE PTR ds:[esi]
  40ba41:	jl     0x40ba83
  40ba43:	mov    cl,0x75
  40ba45:	ret    
  40ba46:	scas   al,BYTE PTR es:[edi]
  40ba47:	adc    DWORD PTR [ebp+0x2dc2706c],0xffffff83
  40ba4e:	jl     0x40ba59
  40ba50:	xlat   BYTE PTR ds:[ebx]
  40ba51:	in     eax,0x41
  40ba53:	je     0x40b9e0
  40ba55:	jnp    0x40baa4
  40ba57:	xchg   esp,eax
  40ba58:	imul   ebx,DWORD PTR ss:[eax+0x4d],0x16
  40ba5d:	adc    eax,DWORD PTR [ecx+0x5ea3f0ba]
  40ba63:	call   0xebfa5c1a
  40ba68:	inc    esp
  40ba69:	les    edi,FWORD PTR [ecx-0x64]
  40ba6c:	sbb    bl,cl
  40ba6e:	shl    BYTE PTR [esi],1
  40ba70:	lds    ecx,FWORD PTR [edi]
  40ba72:	scas   al,BYTE PTR es:[edi]
  40ba73:	cmc    
  40ba74:	aaa    
  40ba75:	js     0x40bac1
  40ba77:	xchg   BYTE PTR [eax+0x44],al
  40ba7a:	adc    DWORD PTR [ebx+esi*1+0x1223610a],ebp
  40ba81:	pop    ds
  40ba82:	mov    al,0xb8
  40ba84:	push   edi
  40ba85:	jne    0x40ba70
  40ba87:	or     eax,0x47a89545
  40ba8c:	dec    esi
  40ba8d:	sub    eax,0x36fbbd76
  40ba92:	push   ebx
  40ba93:	pop    ecx
  40ba94:	and    eax,0xd4973720
  40ba99:	mov    cl,0x32
  40ba9b:	mov    WORD PTR [ebx],ss
  40ba9d:	retf   0x548d
  40baa0:	clc    
  40baa1:	dec    DWORD PTR [edi+esi*8]
  40baa4:	xor    al,0xa9
  40baa6:	add    BYTE PTR [esi+0xb078192],dl
  40baac:	loope  0x40ba4e
  40baae:	sbb    DWORD PTR [ebx-0x78],edi
  40bab1:	mov    ?,WORD PTR [esi]
  40bab3:	inc    edx
  40bab4:	das    
  40bab5:	xchg   ebx,eax
  40bab6:	aam    0x2d
  40bab8:	dec    edi
  40bab9:	sti    
  40baba:	fisub  DWORD PTR [esi+0x31]
  40babd:	retf   
  40babe:	rcr    edi,cl
  40bac0:	dec    eax
  40bac1:	cmp    DWORD PTR [ecx+0x67],0xc3620d78
  40bac8:	popf   
  40bac9:	imul   eax,esi,0xcfa1a40b
  40bacf:	int    0x48
  40bad1:	stos   DWORD PTR es:[edi],eax
  40bad2:	jle    0x40bacb
  40bad4:	test   DWORD PTR [ecx-0x3b06c936],0xf9d0336c
  40bade:	repnz push esi
  40bae0:	imul   eax,DWORD PTR [ecx-0x55]
  40bae4:	cmp    BYTE PTR [edi-0xdcefc57],bh
  40baea:	add    bl,cl
  40baec:	das    
  40baed:	sbb    eax,0xd386b15c
  40baf2:	sub    eax,0x61c0851f
  40baf7:	dec    esp
  40baf8:	xchg   esi,eax
  40baf9:	(bad)  
  40bafa:	loop   0x40bab9
  40bafc:	into   
  40bafd:	sub    al,0xcd
  40baff:	sbb    DWORD PTR [edx],edx
  40bb01:	mov    dl,0x2d
  40bb03:	repz xor DWORD PTR [ebx],edx
  40bb06:	(bad)  
  40bb07:	lock inc ebx
  40bb09:	shl    DWORD PTR [esi-0x4f652b54],1
  40bb0f:	dec    ebx
  40bb10:	gs cld 
  40bb12:	push   esi
  40bb13:	mov    al,0x98
  40bb15:	cmp    DWORD PTR [edx+0x3e],ebx
  40bb18:	addr16 pushf 
  40bb1a:	xchg   esp,eax
  40bb1b:	dec    edi
  40bb1c:	scas   al,BYTE PTR es:[edi]
  40bb1d:	scas   al,BYTE PTR es:[edi]
  40bb1e:	cwde   
  40bb1f:	mov    edx,0xdad1d485
  40bb24:	cmp    DWORD PTR [ecx+0x40],esi
  40bb27:	xchg   esp,eax
  40bb28:	cmp    al,0xe2
  40bb2a:	scas   al,BYTE PTR es:[edi]
  40bb2b:	xor    eax,0x6aad17bb
  40bb30:	or     al,0x8f
  40bb32:	adc    eax,0x80bcd8aa
  40bb37:	inc    esi
  40bb38:	cmp    BYTE PTR [esi+0x33b0474f],dh
  40bb3e:	out    dx,al
  40bb3f:	sti    
  40bb40:	leave  
  40bb41:	aas    
  40bb42:	xor    DWORD PTR [eax],edi
  40bb44:	push   esp
  40bb45:	addr16 push ss
  40bb47:	cmp    eax,0x1491bd7b
  40bb4c:	push   ebp
  40bb4d:	shl    ebp,0xc9
  40bb50:	lds    edx,FWORD PTR [ebx-0xf]
  40bb53:	pop    esp
  40bb54:	sti    
  40bb55:	or     al,0xb7
  40bb57:	test   ebp,edx
  40bb59:	call   0xfbfb0ab0
  40bb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb5f:	push   ss
  40bb60:	xchg   ebp,eax
  40bb61:	addr16 jbe 0x40bbba
  40bb64:	sbb    BYTE PTR [ebx+0x5f],dh
  40bb67:	repz (bad) 
  40bb69:	es push es
  40bb6b:	call   0x7f43:0x35b807b7
  40bb72:	xlat   BYTE PTR ds:[ebx]
  40bb73:	sbb    ecx,DWORD PTR [esi-0x1f51fc4e]
  40bb79:	test   dh,ah
  40bb7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb7c:	cmp    BYTE PTR [esi-0x1c],bh
  40bb7f:	cmp    cl,BYTE PTR ds:0x1e4c113d
  40bb85:	push   ebx
  40bb86:	dec    esp
  40bb87:	ds jno 0x40bb23
  40bb8a:	in     eax,0xcc
  40bb8c:	pop    esp
  40bb8d:	sbb    dl,BYTE PTR ds:0xc7256ad5
  40bb93:	imul   eax,DWORD PTR [eax-0x44],0x2868e7cd
  40bb9a:	ficom  DWORD PTR [eax+0xfe5b32f]
  40bba0:	inc    ebx
  40bba1:	test   al,0x1a
  40bba3:	nop
  40bba4:	(bad)  
  40bba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba6:	mov    eax,ds:0xec4b3d12
  40bbab:	inc    edi
  40bbac:	adc    al,0x5b
  40bbae:	scas   eax,DWORD PTR es:[edi]
  40bbaf:	retf   0xf13a
  40bbb2:	mov    al,BYTE PTR [eax+ebx*2+0x3b]
  40bbb6:	and    BYTE PTR [ebp+0x7e],al
  40bbb9:	test   DWORD PTR [eax+ebp*8+0x4a9a3ee6],ebx
  40bbc0:	push   esp
  40bbc1:	std    
  40bbc2:	clc    
  40bbc3:	(bad)  
  40bbc4:	shl    DWORD PTR [edi+0x30585e57],cl
  40bbca:	jge    0x40bb8f
  40bbcc:	sub    DWORD PTR [eax+ebp*2+0x69],esp
  40bbd0:	retf   
  40bbd1:	pop    edi
  40bbd2:	enter  0x6276,0xb5
  40bbd6:	or     BYTE PTR [ebx+0xa],bl
  40bbd9:	sub    DWORD PTR [eax-0x3b],ecx
  40bbdc:	mov    cl,0xff
  40bbde:	sbb    ah,cl
  40bbe0:	xchg   ecx,eax
  40bbe1:	add    al,0x94
  40bbe3:	js     0x40bbf5
  40bbe5:	mov    al,ds:0x3859fc73
  40bbea:	cs and ah,0xd4
  40bbee:	push   0xffffffd8
  40bbf0:	jmp    0x4e71:0x30213293
  40bbf7:	or     eax,0xb08d15b1
  40bbfc:	dec    esi
  40bbfd:	ret    
  40bbfe:	aaa    
  40bbff:	ja     0x40bbda
  40bc01:	pop    esi
  40bc02:	sti    
  40bc03:	loope  0x40bbb6
  40bc05:	(bad)  
  40bc06:	(bad)  
  40bc07:	pop    ss
  40bc08:	sbb    ebx,DWORD PTR [ebp-0x24]
  40bc0b:	jne    0x40bc27
  40bc0d:	cmc    
  40bc0e:	xchg   ebx,eax
  40bc0f:	std    
  40bc10:	in     eax,0xa7
  40bc12:	push   ecx
  40bc13:	xor    bh,dh
  40bc15:	and    BYTE PTR [esi+0x25a0e2e4],ah
  40bc1b:	(bad)  
  40bc1c:	mov    ecx,0x85fcf188
  40bc21:	nop
  40bc22:	or     bl,cl
  40bc24:	aad    0x42
  40bc26:	xchg   edx,eax
  40bc27:	xchg   esp,eax
  40bc28:	xor    edx,DWORD PTR [edx+edi*2+0x52]
  40bc2c:	push   ebp
  40bc2d:	leave  
  40bc2e:	bound  esp,QWORD PTR [esp+ebx*4+0x5c]
  40bc32:	int    0x95
  40bc34:	and    BYTE PTR [edx+edi*8-0x1c],cl
  40bc38:	mov    cl,0xe7
  40bc3a:	aam    0xe0
  40bc3c:	pop    ds
  40bc3d:	and    cl,BYTE PTR [eax-0x7100ed55]
  40bc43:	inc    ebp
  40bc44:	add    ebx,DWORD PTR [ebp+0x6dbc6a76]
  40bc4a:	mov    ds:0x8f3ed33,eax
  40bc4f:	and    eax,DWORD PTR [ebp-0x54]
  40bc52:	xchg   DWORD PTR [ecx+edi*2-0x448261eb],ebx
  40bc59:	out    0xb5,al
  40bc5b:	rcl    BYTE PTR [ebp+ebp*2+0x4ef44ca4],1
  40bc62:	enter  0x74ed,0x6e
  40bc66:	vmovups YMMWORD PTR [ebx],ymm0
  40bc6a:	cmp    DWORD PTR [bp-0x5e],edi
  40bc6e:	loope  0x40bc75
  40bc70:	inc    eax
  40bc71:	in     al,dx
  40bc72:	js     0x40bc46
  40bc74:	mov    edx,0x84db31f3
  40bc79:	aas    
  40bc7a:	sbb    al,0xda
  40bc7c:	adc    eax,0xfab632ff
  40bc81:	aaa    
  40bc82:	lods   al,BYTE PTR ds:[esi]
  40bc83:	cli    
  40bc84:	adc    DWORD PTR [esi+0x4d7449ba],ebp
  40bc8a:	xor    al,0x1d
  40bc8c:	dec    ebx
  40bc8d:	sbb    ah,bh
  40bc8f:	push   edx
  40bc90:	push   edx
  40bc91:	nop
  40bc92:	mov    cl,0x50
  40bc94:	fst    st(5)
  40bc96:	and    eax,0x73b0e027
  40bc9b:	and    ebp,DWORD PTR [ecx]
  40bc9d:	pop    edi
  40bc9e:	mov    edi,ebx
  40bca0:	(bad)  
  40bca1:	mov    BYTE PTR [eax-0x6d002ef8],bl
  40bca7:	fstp   QWORD PTR [edi+edi*2+0x3c64d180]
  40bcae:	or     ah,dl
  40bcb0:	add    ebp,ebx
  40bcb2:	test   dl,0x93
  40bcb5:	or     DWORD PTR [ebx+ebx*2+0x41cdf5b8],eax
  40bcbc:	call   FWORD PTR ds:0x69087f0f
  40bcc2:	xchg   edx,eax
  40bcc3:	pop    edi
  40bcc4:	pop    ds
  40bcc5:	aaa    
  40bcc6:	dec    ecx
  40bcc7:	ins    DWORD PTR es:[edi],dx
  40bcc8:	(bad)  
  40bcc9:	cld    
  40bcca:	and    al,0x52
  40bccc:	and    esi,esp
  40bcce:	or     BYTE PTR [edi+0x5bf4fc9b],0x2f
  40bcd5:	scas   eax,DWORD PTR es:[edi]
  40bcd6:	push   ds
  40bcd7:	jmp    0x40bc5b
  40bcd9:	adc    bh,BYTE PTR [eax-0x2d]
  40bcdc:	jmp    0x4ab5726e
  40bce1:	xor    dl,bl
  40bce3:	jo     0x40bd22
  40bce5:	clc    
  40bce6:	inc    ecx
  40bce7:	ins    BYTE PTR es:[edi],dx
  40bce8:	push   esi
  40bce9:	adc    eax,0x70b10540
  40bcee:	sbb    ebp,DWORD PTR [ecx+0x77]
  40bcf1:	sub    al,0x40
  40bcf3:	into   
  40bcf4:	mov    al,0xc8
  40bcf6:	fcmovnbe st,st(3)
  40bcf8:	mov    ch,0x2e
  40bcfa:	mov    ?,WORD PTR [ecx-0x2b]
  40bcfd:	mov    ecx,0x4845e243
  40bd02:	pop    es
  40bd03:	pushf  
  40bd04:	fadd   DWORD PTR [edi-0x4]
  40bd07:	fadd   QWORD PTR [ebp+0x690f70c0]
  40bd0d:	or     DWORD PTR [edx],ebx
  40bd0f:	jp     0x40bd86
  40bd11:	sbb    eax,0x8e838d3e
  40bd16:	push   eax
  40bd17:	pop    ebp
  40bd18:	loopne 0x40bd4e
  40bd1a:	jmp    0x40bcee
  40bd1c:	xor    DWORD PTR [edx],ecx
  40bd1e:	mov    DWORD PTR [edi+0x6bdb0de6],edx
  40bd24:	pop    edx
  40bd25:	bound  esi,QWORD PTR [edx+eiz*4+0x7e2c0ad4]
  40bd2c:	ins    DWORD PTR es:[edi],dx
  40bd2d:	fnstsw WORD PTR [edi+esi*1+0x1b]
  40bd31:	xchg   ch,bh
  40bd33:	mov    ds:0xbc8bf42a,eax
  40bd38:	(bad)  
  40bd39:	mov    ds:0x8118cca0,al
  40bd3e:	lds    edi,FWORD PTR [ebp-0x40350b72]
  40bd44:	sbb    eax,0x7e30e06
  40bd49:	and    bh,BYTE PTR [ebx-0x2d]
  40bd4c:	cwde   
  40bd4d:	mul    cl
  40bd4f:	jb     0x40bced
  40bd51:	int3   
  40bd52:	icebp  
  40bd53:	(bad)  
  40bd54:	cmp    ah,BYTE PTR [edi+eax*4-0x59]
  40bd58:	mov    edi,0x6745cbd8
  40bd5d:	dec    esp
  40bd5e:	sbb    DWORD PTR [esi+edx*8+0x728c4f22],esp
  40bd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd66:	fnstsw WORD PTR [ebx+0x4320ca08]
  40bd6c:	cmp    eax,DWORD PTR [eax-0x52]
  40bd6f:	push   ebx
  40bd70:	test   BYTE PTR [edx],0xba
  40bd73:	(bad)  
  40bd74:	ins    DWORD PTR es:[edi],dx
  40bd75:	or     al,0x9d
  40bd77:	sub    ch,BYTE PTR [ebp+0x504d398d]
  40bd7d:	imul   edx,eax,0xab59d9ab
  40bd83:	(bad)  
  40bd84:	cmp    al,0xbc
  40bd86:	(bad)  
  40bd87:	sti    
  40bd88:	outs   dx,DWORD PTR ds:[esi]
  40bd89:	inc    esp
  40bd8a:	cmc    
  40bd8b:	and    ebp,DWORD PTR [edi-0x49]
  40bd8e:	xlat   BYTE PTR ds:[ebx]
  40bd8f:	test   DWORD PTR [edx+0x6],esi
  40bd92:	sub    DWORD PTR [eax+eax*8],esi
  40bd95:	iret   
  40bd96:	xchg   BYTE PTR [esi+0x36],dh
  40bd99:	sbb    cl,BYTE PTR [edx-0x49]
  40bd9c:	and    BYTE PTR es:[ebp-0x376f9ca0],ah
  40bda3:	call   0xc385fd96
  40bda8:	rcl    DWORD PTR [ecx],1
  40bdaa:	or     ebp,0x6b
  40bdad:	in     al,dx
  40bdae:	sub    ebx,DWORD PTR [esi-0x49853d5]
  40bdb4:	ficom  DWORD PTR [esi]
  40bdb6:	mov    ds:0x54a341c5,al
  40bdbb:	fist   DWORD PTR [edx-0x15ad6030]
  40bdc1:	mov    eax,ds:0xc73363a4
  40bdc6:	mov    WORD PTR [eax],?
  40bdc8:	mov    dh,cl
  40bdca:	push   ebx
  40bdcb:	popf   
  40bdcc:	out    0x36,al
  40bdce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdcf:	dec    edx
  40bdd0:	and    eax,0x21f3a416
  40bdd5:	dec    ebx
  40bdd6:	mov    esp,0xde8a2803
  40bddb:	jl     0x40bdf9
  40bddd:	inc    esi
  40bdde:	std    
  40bddf:	sti    
  40bde0:	aaa    
  40bde1:	fisttp DWORD PTR [edi+0x2]
  40bde4:	xchg   ebp,eax
  40bde5:	cli    
  40bde6:	daa    
  40bde7:	hlt    
  40bde8:	pop    ds
  40bde9:	xchg   ebx,eax
  40bdea:	call   0x2d212622
  40bdef:	mov    dl,0xe3
  40bdf1:	rol    eax,cl
  40bdf3:	mov    ds:0xade72f43,al
  40bdf8:	sti    
  40bdf9:	push   esp
  40bdfa:	sar    DWORD PTR ds:0xfe17cd00,cl
  40be00:	pop    ss
  40be01:	test   ebp,0x47f68a02
  40be07:	mov    eax,0x478a19c4
  40be0c:	fcomp  QWORD PTR [esi-0x2871a300]
  40be12:	mov    dh,0x3
  40be14:	sub    ch,0x61
  40be17:	retf   0xf43d
  40be1a:	inc    ebx
  40be1b:	xchg   ebp,eax
  40be1c:	sbb    al,0x31
  40be1e:	(bad)  
  40be20:	xor    BYTE PTR [edi+esi*4],al
  40be23:	xlat   BYTE PTR ds:[ebx]
  40be24:	or     ebp,DWORD PTR [eax+0xc33358f]
  40be2a:	outs   dx,DWORD PTR ds:[esi]
  40be2b:	add    eax,0xfb4d7090
  40be30:	or     eax,0xaad08f1f
  40be35:	xor    ch,BYTE PTR [eax]
  40be37:	jecxz  0x40be11
  40be39:	jmp    0x40be36
  40be3b:	mov    esi,0x39320985
  40be40:	stos   BYTE PTR es:[edi],al
  40be41:	fwait
  40be42:	in     eax,dx
  40be43:	fdivr  DWORD PTR [esi]
  40be45:	mov    esp,0x4957eb5c
  40be4a:	aas    
  40be4b:	dec    eax
  40be4c:	scas   al,BYTE PTR es:[edi]
  40be4d:	dec    esp
  40be4e:	icebp  
  40be4f:	push   0x4a188c16
  40be54:	pop    ss
  40be55:	push   eax
  40be56:	push   ebx
  40be57:	pop    ss
  40be58:	cld    
  40be59:	push   es
  40be5a:	inc    ebp
  40be5b:	and    DWORD PTR [edx],ecx
  40be5d:	rcr    ch,cl
  40be5f:	cmp    bl,cl
  40be61:	cld    
  40be62:	ficom  WORD PTR [esi]
  40be64:	inc    edx
  40be65:	jb     0x40be77
  40be67:	test   ebp,0x1d0598f
  40be6d:	mov    eax,ds:0x735b9190
  40be72:	ror    BYTE PTR fs:[edx-0x3f4848af],0xf
  40be7a:	aad    0xe5
  40be7c:	int    0xf9
  40be7e:	mov    bh,cl
  40be80:	popf   
  40be81:	xchg   DWORD PTR [ecx+eiz*2+0x1f],ebx
  40be85:	or     eax,DWORD PTR [edx-0x4aa201ea]
  40be8b:	loope  0x40beb1
  40be8d:	mov    cl,0x29
  40be8f:	jns    0x40be47
  40be91:	jne    0x40bea7
  40be93:	cmc    
  40be94:	pushf  
  40be95:	dec    ebp
  40be96:	inc    ecx
  40be97:	aaa    
  40be98:	cs fs ret 
  40be9b:	pop    esi
  40be9c:	repz mov ebx,0xcfe549da
  40bea2:	das    
  40bea3:	ret    0xc81
  40bea6:	xchg   ebp,eax
  40bea7:	add    edi,0x9
  40beaa:	je     0x40bf1e
  40beac:	imul   ebx,DWORD PTR [eax+esi*8+0x3b],0x1af9f2f5
  40beb4:	fs cld 
  40beb6:	jl     0x40beeb
  40beb8:	cwde   
  40beb9:	xchg   ecx,eax
  40beba:	xor    esp,DWORD PTR [edx-0x46d1e445]
  40bec0:	jae    0x40befd
  40bec2:	clc    
  40bec3:	call   0xa814d051
  40bec8:	adc    eax,0xfd1d16d6
  40becd:	ja     0x40be8c
  40becf:	ret    0x65e6
  40bed2:	sbb    al,al
  40bed4:	or     al,ah
  40bed6:	add    dh,ch
  40bed8:	jmp    0x40be6e
  40beda:	push   edi
  40bedb:	cmp    eax,0x3db3233a
  40bee0:	mov    ebp,0x5cc8959e
  40bee5:	lods   al,BYTE PTR ds:[esi]
  40bee6:	mov    esp,DWORD PTR [ebx-0x6f]
  40bee9:	pop    ecx
  40beea:	lock cli 
  40beec:	bound  ebx,QWORD PTR [ebx]
  40beee:	mov    fs,WORD PTR [ecx+0x7a]
  40bef1:	repz aas 
  40bef3:	cli    
  40bef4:	call   0x9fcd:0x35a7e472
  40befb:	adc    eax,0xed928935
  40bf00:	xchg   esp,eax
  40bf01:	scas   eax,DWORD PTR es:[edi]
  40bf02:	ja     0x40beef
  40bf04:	lea    edx,[eax]
  40bf06:	sub    esi,DWORD PTR [ecx]
  40bf08:	aam    0x55
  40bf0a:	ins    DWORD PTR es:[edi],dx
  40bf0b:	and    eax,0xcfd606ef
  40bf10:	pop    ds
  40bf11:	(bad)  
  40bf12:	or     al,0x10
  40bf14:	in     eax,0x77
  40bf16:	add    ch,dl
  40bf18:	cmp    eax,ebx
  40bf1a:	daa    
  40bf1b:	dec    edi
  40bf1c:	add    bl,BYTE PTR [ecx]
  40bf1e:	sbb    cl,BYTE PTR [esi-0x69891a01]
  40bf24:	mov    edx,0xb6a82910
  40bf29:	enter  0xc67d,0xa3
  40bf2d:	ficom  DWORD PTR [esp+ebp*8+0x1c416237]
  40bf34:	mov    BYTE PTR [esi-0x66242ffa],dl
  40bf3a:	arpl   di,cx
  40bf3c:	(bad)  
  40bf3d:	fwait
  40bf3e:	dec    ebp
  40bf3f:	(bad)  
  40bf40:	in     al,0xf5
  40bf42:	pop    esp
  40bf43:	cwde   
  40bf44:	sbb    esp,DWORD PTR [ecx]
  40bf46:	cli    
  40bf47:	lahf   
  40bf48:	rol    DWORD PTR [edx+edi*1-0x41],cl
  40bf4c:	adc    dh,BYTE PTR [edi]
  40bf4e:	xor    esi,esi
  40bf50:	shl    bl,1
  40bf52:	stos   DWORD PTR es:[edi],eax
  40bf53:	int3   
  40bf54:	repnz inc edx
  40bf56:	call   0x1a98:0xa3c29ba6
  40bf5d:	adc    bh,BYTE PTR [eax]
  40bf5f:	mov    dl,BYTE PTR fs:[esi-0x6]
  40bf63:	(bad)  
  40bf64:	imul   ecx,ecx,0x6
  40bf67:	adc    BYTE PTR [eax+0x6d],0x6
  40bf6b:	push   edx
  40bf6c:	mov    DWORD PTR [edx],ebx
  40bf6e:	jmp    0x40bfc0
  40bf70:	stc    
  40bf71:	mov    eax,0x84c8aec9
  40bf76:	shr    BYTE PTR [edx],1
  40bf78:	fistp  WORD PTR [edi+eiz*2+0x24]
  40bf7c:	cld    
  40bf7d:	inc    esi
  40bf7e:	into   
  40bf7f:	mul    ch
  40bf81:	jne    0x40bf27
  40bf83:	cmp    DWORD PTR [ebp-0x34],esp
  40bf86:	test   al,0xd3
  40bf88:	hlt    
  40bf89:	and    al,0x72
  40bf8b:	inc    edx
  40bf8c:	jl     0x40bf3c
  40bf8e:	aaa    
  40bf8f:	popf   
  40bf90:	cwde   
  40bf91:	js     0x40c010
  40bf93:	jb     0x40bf16
  40bf95:	test   BYTE PTR [ebp-0x17],cl
  40bf98:	jo     0x40bfb1
  40bf9a:	jl     0x40bf6c
  40bf9c:	mov    ah,0x69
  40bf9e:	arpl   WORD PTR [ebp-0x365b40b0],bp
  40bfa4:	xchg   esi,eax
  40bfa5:	cmp    BYTE PTR [esp+ebp*8-0x362f1e94],bl
  40bfac:	sub    al,0x3e
  40bfae:	inc    esi
  40bfaf:	or     ecx,DWORD PTR [ecx+0x6488eed4]
  40bfb5:	xor    BYTE PTR [esi],cl
  40bfb7:	pop    ecx
  40bfb8:	stc    
  40bfb9:	lods   al,BYTE PTR ds:[esi]
  40bfba:	adc    DWORD PTR [ebx],ebp
  40bfbc:	nop
  40bfbd:	jo     0x40bfaf
  40bfbf:	jl     0x40c03b
  40bfc1:	cmp    BYTE PTR [ebx-0x6db5cae0],bh
  40bfc7:	add    DWORD PTR [edx+0x7e],ecx
  40bfca:	xlat   BYTE PTR ds:[ebx]
  40bfcb:	rsm    
  40bfcd:	dec    esp
  40bfce:	fs jl  0x40bf7e
  40bfd1:	sahf   
  40bfd2:	mov    dh,dh
  40bfd4:	push   ebx
  40bfd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfd6:	xor    BYTE PTR [esp+eax*2-0x1],bh
  40bfda:	aad    0xec
  40bfdc:	imul   esp,DWORD PTR [ecx+0x8135fb1],0x44
  40bfe3:	adc    BYTE PTR [ebp-0xa934911],dh
  40bfe9:	(bad)  
  40bfea:	xchg   ebp,eax
  40bfeb:	xor    eax,0x24358b61
  40bff0:	mov    ebx,0x9ebfcf2b
  40bff5:	push   0xe809f214
  40bffa:	(bad)  
  40bffc:	inc    esp
  40bffd:	sub    al,0xa
  40bfff:	mov    bl,0x8
  40c001:	stos   BYTE PTR es:[edi],al
  40c002:	int3   
  40c003:	inc    ebp
  40c004:	and    bl,BYTE PTR [eax]
  40c006:	mov    ds:0xfeb6a45d,al
  40c00b:	push   es
  40c00c:	lods   al,BYTE PTR ds:[esi]
  40c00d:	xlat   BYTE PTR ds:[ebx]
  40c00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00f:	sub    al,BYTE PTR [edi-0x41]
  40c012:	ret    0x61e5
  40c015:	dec    edx
  40c016:	jnp    0x40c041
  40c018:	fbld   TBYTE PTR [esi+edx*1+0x35]
  40c01c:	mov    ds:0x738734de,eax
  40c021:	cmp    eax,0x632866c
  40c026:	popa   
  40c027:	or     DWORD PTR ds:[eax],edi
  40c02a:	xchg   edx,eax
  40c02b:	mov    eax,ds:0x1286aa20
  40c030:	call   0x5b11:0x65b92b4d
  40c037:	jno    0x40c087
  40c039:	pop    ebp
  40c03a:	cmp    al,0x5c
  40c03c:	adc    BYTE PTR [edi],bh
  40c03e:	or     esi,ebp
  40c040:	idiv   DWORD PTR ss:[eax]
  40c043:	pop    eax
  40c044:	cmp    dh,BYTE PTR [eax+0x42f240c3]
  40c04a:	cmc    
  40c04b:	xchg   ebp,eax
  40c04c:	inc    ecx
  40c04d:	int3   
  40c04e:	jbe    0x40c01d
  40c050:	dec    edx
  40c051:	push   ds
  40c052:	pop    edx
  40c053:	pop    esi
  40c054:	jnp    0x40c0b0
  40c056:	push   DWORD PTR es:[eax-0x32]
  40c05a:	or     esi,DWORD PTR [esi]
  40c05c:	les    edx,FWORD PTR [esi+eax*8-0x29302eba]
  40c063:	fs aaa 
  40c065:	add    eax,0x66ff6144
  40c06a:	xchg   edi,eax
  40c06b:	jle    0x40c0b5
  40c06d:	dec    esi
  40c06e:	sbb    bh,al
  40c070:	xchg   edx,eax
  40c071:	enter  0x7374,0xa1
  40c075:	loope  0x40c075
  40c077:	xchg   ebx,esp
  40c079:	scas   al,BYTE PTR es:[edi]
  40c07a:	stos   DWORD PTR es:[edi],eax
  40c07b:	in     eax,0xc5
  40c07d:	push   esp
  40c07e:	mov    esi,0xdb4ef334
  40c083:	add    DWORD PTR [ebx+edx*4],ebp
  40c086:	pushf  
  40c087:	fcomip st,st(6)
  40c089:	sub    edx,DWORD PTR [eax]
  40c08b:	ficom  DWORD PTR [esi+ecx*1+0x3c]
  40c08f:	adc    DWORD PTR [ecx-0x21],0x3b102d22
  40c096:	xchg   ebp,eax
  40c097:	test   al,0xc1
  40c099:	rcl    BYTE PTR [edi+0x531df9e4],0x1e
  40c0a0:	jns    0x40c0b0
  40c0a2:	cmp    BYTE PTR [ecx+0x3659d369],bh
  40c0a8:	sbb    dl,ch
  40c0aa:	jmp    0x40c12b
  40c0ac:	xchg   ecx,eax
  40c0ad:	test   DWORD PTR [esi+0x72d67f56],esi
  40c0b3:	ja     0x40c0bd
  40c0b5:	fwait
  40c0b6:	iret   
  40c0b7:	add    al,0x80
  40c0b9:	aad    0x4d
  40c0bb:	lahf   
  40c0bc:	add    ah,BYTE PTR [eax-0x6c32860c]
  40c0c2:	jg     0x40c112
  40c0c4:	pop    ecx
  40c0c5:	pop    edx
  40c0c6:	sub    DWORD PTR [ebp+ebx*1-0x48],eax
  40c0ca:	sub    BYTE PTR [edi-0x25ca6e1c],cl
  40c0d0:	sahf   
  40c0d1:	inc    esi
  40c0d2:	pusha  
  40c0d3:	or     al,0x90
  40c0d5:	fsubr  DWORD PTR [eax+0x59]
  40c0d8:	out    dx,eax
  40c0d9:	push   esi
  40c0da:	int3   
  40c0db:	sub    DWORD PTR [ecx],esi
  40c0dd:	icebp  
  40c0de:	push   0xffffffca
  40c0e0:	cmp    eax,0xddf8df6a
  40c0e5:	stos   BYTE PTR es:[edi],al
  40c0e6:	sub    bl,BYTE PTR [esi+0x4475d015]
  40c0ec:	call   0x6232f9a
  40c0f1:	popa   
  40c0f2:	imul   esp,DWORD PTR [ebx+0x40],0xffffffee
  40c0f6:	dec    ebx
  40c0f7:	dec    esi
  40c0f8:	and    DWORD PTR [esi+eax*1-0x78],ebp
  40c0fc:	loop   0x40c166
  40c0fe:	push   eax
  40c0ff:	mov    cl,0x6a
  40c101:	sub    cl,BYTE PTR [esi-0x79637151]
  40c107:	fsubrp st(0),st
  40c109:	xchg   ebx,eax
  40c10a:	mov    ds,WORD PTR [edi+0x63]
  40c10d:	mov    ebx,0xc62332d9
  40c112:	sar    al,0x71
  40c115:	add    edi,ebp
  40c117:	(bad)  
  40c118:	fcomi  st,st(1)
  40c11a:	jne    0x40c0e5
  40c11c:	mov    ax,ds:0xedc06af2
  40c122:	aaa    
  40c123:	mov    ah,0xf1
  40c125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c126:	or     dh,BYTE PTR [edi]
  40c128:	jg     0x40c10f
  40c12a:	xor    al,0xf7
  40c12c:	push   0xfabd9511
  40c131:	and    DWORD PTR [edx+edi*4],0xffffffcd
  40c135:	lahf   
  40c136:	jne    0x40c0e4
  40c138:	mov    bl,0x4
  40c13a:	fmul   QWORD PTR [edx+edi*2+0x20]
  40c13e:	jo     0x40c14f
  40c140:	data16 fstp QWORD PTR es:[ecx+0x9ebb8e8]
  40c148:	shl    DWORD PTR [eax-0x404c316d],cl
  40c14e:	cli    
  40c14f:	mov    eax,0x6edd074e
  40c154:	nop
  40c155:	or     eax,0xb1f89fbe
  40c15a:	mov    eax,0x53bfb57e
  40c15f:	es scas eax,DWORD PTR es:[edi]
  40c161:	sub    bl,BYTE PTR [edi-0x1173ef0d]
  40c167:	loopne 0x40c15a
  40c169:	ror    DWORD PTR ds:0xc131643c,cl
  40c16f:	cmc    
  40c170:	rcr    cl,cl
  40c172:	rcr    BYTE PTR [edi-0x2d8f48de],cl
  40c178:	loopne 0x40c10b
  40c17a:	and    al,0x50
  40c17c:	inc    BYTE PTR [edi+0x10478ebf]
  40c182:	jecxz  0x40c171
  40c184:	or     al,0x3f
  40c186:	push   edi
  40c187:	jae    0x40c166
  40c189:	sbb    BYTE PTR [ebx-0x4d],bh
  40c18c:	fst    QWORD PTR [edx+0x27ea8d10]
  40c192:	adc    esp,DWORD PTR [ecx+0x46]
  40c195:	ja     0x40c167
  40c197:	cmp    al,0x2
  40c199:	xchg   BYTE PTR [ebx+0x23edb84c],al
  40c19f:	pop    esi
  40c1a0:	cmp    dh,BYTE PTR [esi]
  40c1a2:	push   ebp
  40c1a3:	sar    DWORD PTR [esi],0x2c
  40c1a6:	in     al,0x9b
  40c1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1a9:	nop
  40c1aa:	test   al,0x87
  40c1ac:	mov    cs,WORD PTR [edx-0x74]
  40c1af:	imul   edx,DWORD PTR [edx+0x68],0xde955710
  40c1b6:	js     0x40c16a
  40c1b8:	cs ins DWORD PTR es:[edi],dx
  40c1ba:	out    0x7a,al
  40c1bc:	mov    edx,0x8c54ddc8
  40c1c1:	add    BYTE PTR [ebx+ebp*8-0x38],ch
  40c1c5:	adc    BYTE PTR [ecx-0x56],cl
  40c1c8:	mov    ecx,0xad880b61
  40c1cd:	pop    esp
  40c1ce:	push   0x3c
  40c1d0:	and    cl,0x9
  40c1d3:	fwait
  40c1d4:	ret    0xfde7
  40c1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d8:	in     eax,0x74
  40c1da:	mov    esp,0x13eb7784
  40c1df:	mov    esi,0xaf2bdd5b
  40c1e4:	enter  0xc98e,0x69
  40c1e8:	hlt    
  40c1e9:	xchg   edi,eax
  40c1ea:	fcom   st(6)
  40c1ec:	fwait
  40c1ed:	pop    ecx
  40c1ee:	sbb    DWORD PTR [esi+0x12],0xffffff83
  40c1f2:	or     BYTE PTR [ebx+0x587222ce],bh
  40c1f8:	lods   eax,DWORD PTR ds:[esi]
  40c1f9:	cmp    bh,bh
  40c1fb:	popa   
  40c1fc:	mov    DWORD PTR [edx],esi
  40c1fe:	lods   eax,DWORD PTR ds:[esi]
  40c1ff:	sar    bl,cl
  40c201:	add    eax,eax
  40c203:	hlt    
  40c204:	add    eax,0x33ac4cb0
  40c209:	aas    
  40c20a:	lock dec esi
  40c20c:	inc    eax
  40c20d:	jg     0x40c22d
  40c20f:	push   ebx
  40c210:	repz repnz adc dh,BYTE PTR [ebp-0x24]
  40c215:	fs inc ebx
  40c217:	out    0xc,eax
  40c219:	(bad)  
  40c21a:	jecxz  0x40c1f7
  40c21c:	mov    ds:0xc4ac307e,eax
  40c221:	ins    DWORD PTR es:[edi],dx
  40c222:	push   ds
  40c223:	test   BYTE PTR [esi+0x62],dl
  40c226:	into   
  40c227:	stc    
  40c228:	jne    0x40c28d
  40c22a:	dec    edi
  40c22b:	gs jmp 0x13989a0e
  40c231:	push   ss
  40c232:	sbb    cl,al
  40c234:	fcmove st,st(2)
  40c236:	jecxz  0x40c299
  40c238:	leave  
  40c239:	dec    esi
  40c23a:	cmp    eax,ebp
  40c23c:	popa   
  40c23d:	hlt    
  40c23e:	cmc    
  40c23f:	xchg   ecx,eax
  40c240:	fidivr DWORD PTR [ebp-0x1e394a69]
  40c246:	xor    BYTE PTR [ebp-0x40e23c3c],al
  40c24c:	inc    ecx
  40c24d:	hlt    
  40c24e:	push   0xffffffbb
  40c250:	lock call 0xeaf794fa
  40c256:	add    bh,bh
  40c258:	call   0x2f2e:0xb87546d8
  40c25f:	add    BYTE PTR [eax+0x41cf25b],bl
  40c265:	mov    edi,0x66634ec5
  40c26a:	xchg   DWORD PTR [edx+ebx*8-0x55],ecx
  40c26e:	mov    ebx,0x2736c08e
  40c273:	daa    
  40c274:	push   edx
  40c275:	xchg   BYTE PTR ds:0xf9156040,ch
  40c27b:	push   ecx
  40c27c:	jae    0x40c276
  40c27e:	add    ecx,DWORD PTR [esi-0x192400e8]
  40c284:	sub    ebp,DWORD PTR [edx-0x18fb4c99]
  40c28a:	inc    edi
  40c28b:	int3   
  40c28c:	cmp    al,0x34
  40c28e:	test   al,0x77
  40c290:	mov    ah,0x44
  40c292:	imul   edx,DWORD PTR [eax-0x2c32c96],0xda780d9
  40c29c:	fldenv [edx]
  40c29e:	cwde   
  40c29f:	or     eax,0xcf959266
  40c2a4:	(bad)  
  40c2a6:	jmp    0xbdc2:0x1fb3340c
  40c2ad:	mov    dl,0x41
  40c2af:	sahf   
  40c2b0:	add    BYTE PTR [ecx+0x6dbd869f],ch
  40c2b6:	test   DWORD PTR [esi+0x4c],eax
  40c2b9:	ror    DWORD PTR [ecx-0x38],cl
  40c2bc:	scas   al,BYTE PTR es:[edi]
  40c2bd:	mul    BYTE PTR [edx-0xb62f165]
  40c2c3:	and    DWORD PTR [ebx],ebp
  40c2c5:	adc    BYTE PTR [edi+0x17],dl
  40c2c8:	inc    ebp
  40c2c9:	and    esp,esp
  40c2cb:	sbb    DWORD PTR [ebx],edi
  40c2cd:	jp     0x40c324
  40c2cf:	mov    ah,0xcb
  40c2d1:	(bad)  
  40c2d2:	leave  
  40c2d3:	adc    edi,DWORD PTR [esi-0x16]
  40c2d6:	stos   BYTE PTR es:[edi],al
  40c2d7:	pop    es
  40c2d8:	xor    dl,BYTE PTR [eax+0x68]
  40c2db:	add    dh,0xac
  40c2de:	jmp    0xbae6:0x7728025b
  40c2e5:	and    al,0x91
  40c2e7:	adc    ecx,DWORD PTR [edi]
  40c2e9:	scas   eax,DWORD PTR es:[edi]
  40c2ea:	enter  0x2a18,0xa3
  40c2ee:	pop    edx
  40c2ef:	mov    esp,0xba1b2b6
  40c2f4:	add    eax,0x5d88d772
  40c2f9:	cmp    eax,0xd21d8a93
  40c2fe:	jp     0x40c2a7
  40c300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c301:	push   0xe70f534a
  40c306:	enter  0x6d87,0xb9
  40c30a:	and    esi,ebp
  40c30c:	jne    0x40c374
  40c30e:	into   
  40c30f:	dec    esp
  40c310:	aaa    
  40c311:	fwait
  40c312:	iret   
  40c313:	inc    edi
  40c314:	bound  ebp,QWORD PTR [ebp+0x631fdf96]
  40c31a:	in     eax,dx
  40c31b:	adc    ch,BYTE PTR [esi]
  40c31d:	mov    cl,0xf7
  40c31f:	mov    ch,BYTE PTR [ebx-0x4b]
  40c322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c323:	mov    ds:0x3a56566b,eax
  40c328:	push   ds
  40c329:	xor    eax,0x1a5eb775
  40c32e:	or     BYTE PTR [ecx-0x23584171],ah
  40c334:	rcl    BYTE PTR [ebx],1
  40c336:	call   0xd8fc4d3c
  40c33b:	or     BYTE PTR [esi-0x5b1a0638],dl
  40c341:	and    eax,edx
  40c343:	sbb    edx,DWORD PTR ds:0x263147de
  40c349:	aas    
  40c34a:	adc    BYTE PTR [edx-0x20],cl
  40c34d:	adc    esp,DWORD PTR [ecx+0x4]
  40c350:	cld    
  40c351:	cmp    al,0x59
  40c353:	jbe    0x40c3be
  40c355:	push   0x21db8785
  40c35a:	xchg   esi,eax
  40c35b:	int    0x86
  40c35d:	add    al,BYTE PTR [ebx+ebx*8]
  40c360:	dec    ebx
  40c361:	cs jbe 0x40c309
  40c364:	ss inc edi
  40c366:	das    
  40c367:	cdq    
  40c368:	sbb    DWORD PTR [esi-0x1f681741],edx
  40c36e:	cmp    BYTE PTR [eax+0x73e10238],0x9
  40c375:	mov    BYTE PTR [eax+0xb],cl
  40c378:	test   cl,0x4a
  40c37b:	mov    ebx,0xfb7cdf07
  40c380:	test   BYTE PTR [edi*4-0x4c4ab404],al
  40c387:	mov    ds:0xd162c700,eax
  40c38c:	lds    ebx,FWORD PTR [edx]
  40c38e:	aad    0x73
  40c390:	mov    ds:0xfae19aa0,al
  40c395:	jnp    0x40c3f7
  40c397:	xchg   edi,eax
  40c398:	lock jg 0x40c322
  40c39b:	push   esp
  40c39c:	aaa    
  40c39d:	daa    
  40c39e:	xchg   ecx,eax
  40c39f:	jo     0x40c3ec
  40c3a1:	pop    esp
  40c3a2:	adc    DWORD PTR [esi+0x11b4aae9],ebx
  40c3a8:	mov    al,ds:0x4b2d8ad
  40c3ad:	push   0x8cc91c06
  40c3b2:	inc    ecx
  40c3b3:	icebp  
  40c3b4:	test   eax,0xc354b066
  40c3b9:	addr16 nop
  40c3bb:	imul   edx,ecx,0xa8153720
  40c3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3c2:	add    eax,0xedcbb7e2
  40c3c7:	mov    edi,0xbe5a3858
  40c3cc:	cmp    ah,BYTE PTR [ecx+0x2f744575]
  40c3d2:	shl    DWORD PTR [edx-0x246d3ac8],1
  40c3d8:	ins    BYTE PTR es:[edi],dx
  40c3d9:	test   eax,0x82eeb7f4
  40c3de:	lea    esp,[edi+ebp*8]
  40c3e1:	or     eax,0x3f6de8c
  40c3e6:	dec    esp
  40c3e7:	(bad)  
  40c3e8:	scas   eax,DWORD PTR es:[edi]
  40c3e9:	neg    cl
  40c3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ec:	das    
  40c3ed:	push   ds
  40c3ee:	xor    eax,0x394cdd22
  40c3f3:	sub    BYTE PTR [esi-0x59],dh
  40c3f6:	xchg   edi,eax
  40c3f7:	ins    DWORD PTR es:[edi],dx
  40c3f8:	add    BYTE PTR [esi+0x55],ch
  40c3fb:	ja     0x40c388
  40c3fd:	mov    ds:0x7d56cdcc,al
  40c402:	push   cs
  40c403:	add    eax,0x349131ff
  40c408:	and    DWORD PTR [ebp-0x33],eax
  40c40b:	jnp    0x40c48b
  40c40d:	add    eax,0x7e10944f
  40c412:	push   ecx
  40c413:	add    esp,DWORD PTR [ebx+0x7e72ab5a]
  40c419:	aaa    
  40c41a:	xchg   edx,eax
  40c41b:	inc    ebp
  40c41c:	(bad)  
  40c41d:	mov    ecx,0x61ee5133
  40c422:	mov    esi,DWORD PTR [ebx-0x5be64da2]
  40c428:	push   eax
  40c429:	xchg   esp,eax
  40c42a:	push   es
  40c42b:	adc    eax,0xdf2627d1
  40c430:	stc    
  40c431:	hlt    
  40c432:	jb     0x40c3e1
  40c434:	push   ds
  40c435:	and    al,BYTE PTR [edx]
  40c437:	cld    
  40c438:	adc    BYTE PTR [ebp+0x2155226c],bh
  40c43e:	xor    DWORD PTR [ecx],edi
  40c440:	add    bl,ch
  40c442:	jge    0x40c46a
  40c444:	inc    ecx
  40c445:	ret    0xd9ff
  40c448:	out    dx,eax
  40c449:	fild   WORD PTR [ecx+0x38]
  40c44c:	cmc    
  40c44d:	or     DWORD PTR [ecx],edi
  40c44f:	ror    BYTE PTR [ebx],1
  40c451:	dec    esi
  40c452:	shr    ebx,0x6a
  40c455:	(bad)  
  40c456:	dec    ecx
  40c457:	inc    edx
  40c458:	dec    edx
  40c459:	push   eax
  40c45a:	(bad)  
  40c45b:	sub    BYTE PTR ds:0x676a661f,ch
  40c461:	lods   eax,DWORD PTR ds:[esi]
  40c462:	add    dh,BYTE PTR [ecx]
  40c464:	arpl   WORD PTR [ebx],sp
  40c466:	imul   esp,DWORD PTR [ebx],0x69188c07
  40c46c:	std    
  40c46d:	mov    ah,0x3b
  40c46f:	lea    esi,[edx-0x56]
  40c472:	sbb    bh,BYTE PTR [edx-0x7f63aef9]
  40c478:	adc    al,0xcd
  40c47a:	and    eax,0xdb936867
  40c47f:	push   edi
  40c480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c481:	mov    ch,0x4c
  40c483:	std    
  40c484:	mov    al,0xdf
  40c486:	add    eax,0xb02ebd55
  40c48b:	int    0x9e
  40c48d:	or     al,0xe9
  40c48f:	xchg   ecx,eax
  40c490:	std    
  40c491:	dec    ebp
  40c492:	ins    DWORD PTR es:[edi],dx
  40c493:	push   cs
  40c494:	pop    esp
  40c495:	inc    esp
  40c496:	or     al,0x7f
  40c498:	clc    
  40c499:	mov    DWORD PTR [ebx+0x8],esp
  40c49c:	das    
  40c49d:	jmp    0x40c4c6
  40c49f:	dec    esi
  40c4a0:	adc    eax,0x329d78d4
  40c4a5:	jb     0x40c460
  40c4a7:	mov    eax,ds:0x6b2c9415
  40c4ac:	int    0xc9
  40c4ae:	pop    ecx
  40c4af:	ret    0xbf2d
  40c4b2:	(bad)  
  40c4b3:	lahf   
  40c4b4:	scas   eax,DWORD PTR es:[edi]
  40c4b5:	lods   eax,DWORD PTR ds:[esi]
  40c4b6:	in     al,0xff
  40c4b8:	repz push ecx
  40c4ba:	sbb    eax,0x6c96d18d
  40c4bf:	xchg   esp,eax
  40c4c0:	mov    ebx,ebx
  40c4c2:	dec    esi
  40c4c3:	push   cs
  40c4c4:	dec    ebx
  40c4c5:	shl    BYTE PTR ss:[ecx],cl
  40c4c8:	xchg   DWORD PTR [ebp-0x7250fd45],edx
  40c4ce:	retf   0xa252
  40c4d1:	push   ss
  40c4d2:	fistp  QWORD PTR [ecx]
  40c4d4:	inc    ecx
  40c4d5:	jmp    0x6790:0xaaa5841c
  40c4dc:	ja     0x40c4f8
  40c4de:	adc    eax,0xda10059b
  40c4e3:	pushf  
  40c4e4:	sar    BYTE PTR [ebp+0x7f210033],1
  40c4ea:	add    bl,ch
  40c4ec:	xchg   esp,eax
  40c4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ee:	or     eax,0x794be63e
  40c4f3:	lods   eax,DWORD PTR ds:[esi]
  40c4f4:	ds in  al,0xec
  40c4f7:	jns    0x40c54e
  40c4f9:	lock popa 
  40c4fb:	xchg   esi,eax
  40c4fc:	out    0x15,al
  40c4fe:	jb     0x40c4e4
  40c500:	push   0x55
  40c502:	or     eax,0x21c37354
  40c507:	inc    edx
  40c508:	(bad)  
  40c50a:	and    ch,BYTE PTR [edx]
  40c50c:	xlat   BYTE PTR ds:[ebx]
  40c50d:	fs and dl,ch
  40c510:	mov    bl,0xb0
  40c512:	inc    esp
  40c513:	popa   
  40c514:	test   al,0xd
  40c516:	daa    
  40c517:	sbb    al,0x91
  40c519:	out    dx,al
  40c51a:	pushf  
  40c51b:	and    eax,0x3979c51c
  40c520:	pop    ebp
  40c521:	stos   DWORD PTR es:[edi],eax
  40c522:	popf   
  40c523:	add    ebp,ebp
  40c525:	jae    0x40c519
  40c527:	aad    0x7a
  40c529:	push   ds
  40c52a:	jle    0x40c565
  40c52c:	xor    DWORD PTR [edi],ebx
  40c52e:	mov    dl,0x8c
  40c530:	cmp    al,0xdd
  40c532:	imul   esp,DWORD PTR [ebp-0x65b6bb82],0xf9877a38
  40c53c:	stos   DWORD PTR es:[edi],eax
  40c53d:	mov    eax,DWORD PTR [ecx-0x7b32e5b5]
  40c543:	jne    0x40c56c
  40c545:	das    
  40c546:	stos   DWORD PTR es:[edi],eax
  40c547:	call   0x1bbe:0xae1e36d0
  40c54e:	pop    ebp
  40c54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c550:	(bad)  
  40c551:	loop   0x40c572
  40c553:	pop    edx
  40c554:	lods   al,BYTE PTR ds:[esi]
  40c555:	or     al,0x69
  40c557:	sets   bh
  40c55a:	sub    eax,0xf459c707
  40c55f:	push   esi
  40c560:	inc    esi
  40c561:	retf   
  40c562:	imul   DWORD PTR [edx]
  40c564:	fcomp  QWORD PTR [ebx-0x54]
  40c567:	sbb    DWORD PTR [esi-0x3f6fd49a],ecx
  40c56d:	ret    
  40c56e:	addr16 inc esp
  40c570:	popf   
  40c571:	and    eax,0x5714a5ce
  40c576:	das    
  40c577:	cli    
  40c578:	jecxz  0x40c54c
  40c57a:	dec    esi
  40c57b:	test   eax,0x5d8ab990
  40c580:	adc    eax,0x5c72fe51
  40c585:	aam    0x68
  40c587:	mov    edi,0xcb0a9565
  40c58c:	xchg   esi,eax
  40c58d:	loope  0x40c564
  40c58f:	lods   eax,DWORD PTR ds:[esi]
  40c590:	pop    es
  40c591:	(bad)  
  40c592:	jns    0x40c594
  40c594:	daa    
  40c595:	ror    DWORD PTR [ebp-0x63],1
  40c598:	jbe    0x40c560
  40c59a:	test   DWORD PTR [eax+0x5297dab2],esi
  40c5a0:	int3   
  40c5a1:	aas    
  40c5a2:	fild   WORD PTR ds:0xd72f17f8
  40c5a8:	shl    DWORD PTR [edx],1
  40c5aa:	mov    cl,0xbc
  40c5ac:	in     al,dx
  40c5ad:	cs (bad) 
  40c5af:	shr    ebx,cl
  40c5b1:	jne    0x40c597
  40c5b3:	add    DWORD PTR [esi-0x5d],edi
  40c5b6:	mov    bh,dh
  40c5b8:	popf   
  40c5b9:	pop    esp
  40c5ba:	rol    DWORD PTR [eax+edx*1],1
  40c5bd:	xor    DWORD PTR ds:[ecx+0x3a],eax
  40c5c1:	jle    0x40c56d
  40c5c3:	xchg   ecx,eax
  40c5c4:	data16 sbb al,bh
  40c5c7:	add    DWORD PTR ds:[eax-0xf27568e],eax
  40c5ce:	ins    DWORD PTR es:[edi],dx
  40c5cf:	jle    0x40c562
  40c5d1:	lds    edi,FWORD PTR [ebx-0x11e63ce0]
  40c5d7:	push   edx
  40c5d8:	mov    edx,0xc4a1de03
  40c5dd:	push   eax
  40c5de:	mov    al,ds:0xdcf63174
  40c5e3:	jo     0x40c5b3
  40c5e5:	sbb    ch,BYTE PTR [ecx+0x167798ed]
  40c5eb:	mov    bl,0x58
  40c5ed:	xchg   edi,eax
  40c5ee:	sub    al,0x46
  40c5f0:	sbb    al,BYTE PTR [eax]
  40c5f2:	sbb    bh,BYTE PTR [ecx+ecx*1+0x35da4b49]
  40c5f9:	mov    BYTE PTR [ecx-0x1b6574a2],bl
  40c5ff:	lods   eax,DWORD PTR ds:[esi]
  40c600:	scas   al,BYTE PTR es:[edi]
  40c601:	loop   0x40c5cc
  40c603:	adc    eax,0x5b15a5b3
  40c608:	rcr    DWORD PTR [ebx],1
  40c60a:	mov    bl,0xa7
  40c60c:	mov    cl,0x80
  40c60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60f:	add    DWORD PTR [edi-0x30dc6202],ebx
  40c615:	bound  eax,QWORD PTR [ebp+0x952e980]
  40c61b:	fs pushf 
  40c61d:	mov    dh,0x47
  40c61f:	cmovl  esi,DWORD PTR [edx+eax*2]
  40c623:	mov    bl,0xd9
  40c625:	pop    edi
  40c626:	jne    0x40c605
  40c628:	push   esp
  40c629:	inc    ebp
  40c62a:	inc    eax
  40c62b:	std    
  40c62c:	and    DWORD PTR [ebp-0x1b],edi
  40c62f:	cmp    DWORD PTR [eax*8-0x4a6f7862],esp
  40c636:	mov    eax,ds:0x132c170d
  40c63b:	repz (bad) 
  40c63d:	ficomp WORD PTR [edi+0x45]
  40c640:	inc    ebp
  40c641:	sbb    bh,bh
  40c643:	rol    BYTE PTR [ecx],cl
  40c645:	fs dec edx
  40c647:	mov    al,0xd6
  40c649:	add    eax,esp
  40c64b:	mov    eax,0xb5e3b11
  40c650:	add    BYTE PTR [esi-0x60],dh
  40c653:	xchg   edx,eax
  40c654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c655:	test   eax,0x1b7154d8
  40c65a:	loopne 0x40c69b
  40c65c:	add    eax,0x2bc32bef
  40c661:	sahf   
  40c662:	loope  0x40c680
  40c664:	pop    es
  40c665:	jp     0x40c610
  40c667:	and    eax,0x498cc9cd
  40c66c:	cmc    
  40c66d:	push   0xfffffff7
  40c66f:	call   0xa318:0x889dca79
  40c676:	iret   
  40c677:	ins    BYTE PTR es:[edi],dx
  40c678:	mov    ah,BYTE PTR [ecx]
  40c67a:	adc    DWORD PTR [ebp+ebp*4-0x4a0aca39],ecx
  40c681:	ins    BYTE PTR es:[edi],dx
  40c682:	xchg   DWORD PTR [eax+0x3f],ebx
  40c685:	or     eax,DWORD PTR [ebx]
  40c687:	jle    0x40c6f4
  40c689:	test   eax,0x74ed3740
  40c68e:	shr    BYTE PTR [edx+0x1f],cl
  40c691:	gs pusha 
  40c693:	adc    eax,0x33c56834
  40c698:	(bad)  
  40c699:	mov    ebx,0xbe858ea8
  40c69e:	jp     0x40c6a9
  40c6a0:	jnp    0x40c62a
  40c6a2:	push   ds
  40c6a3:	jo     0x40c6ee
  40c6a5:	cmp    bl,BYTE PTR [ecx]
  40c6a7:	fs jl  0x40c707
  40c6aa:	fmul   QWORD PTR ds:[edi+0x9]
  40c6ae:	pop    eax
  40c6af:	xchg   esi,eax
  40c6b0:	xor    DWORD PTR ds:0x9970d109,edx
  40c6b6:	or     dl,ah
  40c6b8:	pop    ds
  40c6b9:	popf   
  40c6ba:	repz mov ds:0x171b7a8e,al
  40c6c0:	push   eax
  40c6c1:	pushf  
  40c6c2:	sbb    al,0x1d
  40c6c4:	adc    ebx,DWORD PTR [edx-0x6e]
  40c6c7:	jp     0x40c6fa
  40c6c9:	arpl   bp,si
  40c6cb:	stos   BYTE PTR es:[edi],al
  40c6cc:	(bad)  
  40c6cd:	xchg   edx,eax
  40c6ce:	outs   dx,DWORD PTR ds:[esi]
  40c6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d0:	or     ecx,ebx
  40c6d2:	xchg   ecx,eax
  40c6d3:	stos   DWORD PTR es:[edi],eax
  40c6d4:	sub    eax,0x336cee29
  40c6d9:	mov    ecx,0xfdcc8c2b
  40c6de:	sti    
  40c6df:	dec    eax
  40c6e0:	cmp    BYTE PTR [esi+esi*4-0x4a],bh
  40c6e4:	test   BYTE PTR [esi+eax*8+0x69],cl
  40c6e8:	jns    0x40c709
  40c6ea:	push   cs
  40c6eb:	xchg   edx,eax
  40c6ec:	sub    al,0xb4
  40c6ee:	in     eax,0x16
  40c6f0:	sbb    BYTE PTR [eax+0x2899a93d],dl
  40c6f6:	mov    ah,0xfd
  40c6f8:	sbb    esi,edi
  40c6fa:	sbb    eax,0x60d2ad5
  40c6ff:	inc    ecx
  40c700:	ret    0xb0dc
  40c703:	pop    eax
  40c704:	outs   dx,DWORD PTR ds:[esi]
  40c705:	xchg   esp,eax
  40c706:	xchg   esp,eax
  40c707:	pop    ebx
  40c708:	push   esi
  40c709:	or     edx,DWORD PTR [ecx+0x65dccac7]
  40c70f:	sti    
  40c710:	div    BYTE PTR [eax]
  40c712:	pusha  
  40c713:	push   ss
  40c714:	shl    BYTE PTR [ecx],cl
  40c716:	adc    esi,esp
  40c718:	ss retf 
  40c71a:	outs   dx,DWORD PTR ds:[esi]
  40c71b:	sbb    BYTE PTR [esi-0x29],ch
  40c71e:	shl    DWORD PTR [ebp+0x20],0xa1
  40c722:	les    eax,FWORD PTR [eax+0x1d]
  40c725:	xchg   ebx,eax
  40c726:	lods   eax,DWORD PTR ds:[esi]
  40c727:	out    0x43,eax
  40c729:	ja     0x40c6e9
  40c72b:	in     al,0x49
  40c72d:	add    eax,0x4611dbfa
  40c732:	sub    DWORD PTR [ebx+0x12],0x53
  40c736:	int3   
  40c737:	push   esp
  40c738:	dec    ebp
  40c739:	das    
  40c73a:	lahf   
  40c73b:	adc    DWORD PTR [edx+0x51cfeb44],ebp
  40c741:	arpl   bx,ax
  40c743:	sub    eax,DWORD PTR [esi]
  40c745:	ret    0xd8e6
  40c748:	jge    0x40c6ca
  40c74a:	xchg   ebp,eax
  40c74b:	pop    esi
  40c74c:	xchg   ebp,eax
  40c74d:	mov    ebx,0x80c35721
  40c752:	dec    esi
  40c753:	int3   
  40c754:	test   BYTE PTR [edi+esi*8],dh
  40c757:	lds    ebp,FWORD PTR [ebx-0x26]
  40c75a:	push   0x52453cfd
  40c75f:	into   
  40c760:	mov    cl,0xa8
  40c762:	arpl   WORD PTR [eax-0x6266a72a],dx
  40c768:	xchg   DWORD PTR [edi-0x6d636fa0],esi
  40c76e:	cmp    ebp,DWORD PTR [edi]
  40c770:	lock inc edx
  40c772:	les    ebx,FWORD PTR [edi+0x1d9b3133]
  40c778:	repnz repnz pop esp
  40c77b:	mov    ebp,0x8e414311
  40c780:	xor    eax,0x7a306318
  40c785:	xor    DWORD PTR [ebx-0x1bc9456f],eax
  40c78b:	imul   edx,DWORD PTR [edi+0x62a88637],0x42
  40c792:	pop    eax
  40c793:	fidivr WORD PTR [edi-0x28]
  40c796:	push   esp
  40c797:	pop    eax
  40c798:	out    dx,al
  40c799:	push   ds
  40c79a:	xor    edi,ecx
  40c79c:	push   0xefec7db1
  40c7a1:	fsubr  QWORD PTR [ecx+0x77]
  40c7a4:	jmp    0x40c726
  40c7a6:	sub    al,0x7c
  40c7a8:	dec    edi
  40c7a9:	das    
  40c7aa:	adc    eax,0xe4ec7604
  40c7af:	fdiv   QWORD PTR [bx-0x245b]
  40c7b4:	mov    BYTE PTR cs:0x24137b13,ah
  40c7bb:	mov    bh,0xfe
  40c7bd:	je     0x40c763
  40c7bf:	stos   DWORD PTR es:[edi],eax
  40c7c0:	rol    BYTE PTR [eax+0x60d7351a],1
  40c7c6:	stos   BYTE PTR es:[edi],al
  40c7c7:	jno    0x40c758
  40c7c9:	loopne 0x40c75f
  40c7cb:	mov    dh,0x93
  40c7cd:	in     eax,dx
  40c7ce:	pop    es
  40c7cf:	push   edx
  40c7d0:	lds    esp,FWORD PTR [ecx+esi*8-0x7a]
  40c7d4:	aas    
  40c7d5:	fimul  DWORD PTR [edx-0x39df9c80]
  40c7db:	lds    ecx,FWORD PTR [ebx]
  40c7dd:	(bad)  
  40c7de:	pop    ebx
  40c7df:	and    bh,BYTE PTR [edx]
  40c7e1:	std    
  40c7e2:	adc    ebx,DWORD PTR [eax+0x42c0decb]
  40c7e8:	ret    
  40c7e9:	(bad)  
  40c7eb:	pop    esi
  40c7ec:	clc    
  40c7ed:	jmp    0xd34afd4d
  40c7f2:	push   edx
  40c7f3:	retf   
  40c7f4:	dec    edx
  40c7f5:	jo     0x40c7b2
  40c7f7:	and    al,al
  40c7f9:	xchg   ecx,eax
  40c7fa:	cmp    BYTE PTR [ecx+0x39a8852f],dh
  40c800:	(bad)  
  40c801:	je     0x40c869
  40c803:	fcomp  QWORD PTR [edi-0x4675305e]
  40c809:	(bad)  
  40c80a:	in     al,0x3e
  40c80c:	inc    ecx
  40c80d:	push   ds
  40c80e:	jno    0x40c887
  40c810:	ror    dl,0x1b
  40c813:	outs   dx,BYTE PTR ds:[esi]
  40c814:	ror    edi,0xee
  40c817:	pop    edi
  40c818:	pop    ebp
  40c819:	fnstcw WORD PTR [di-0xe]
  40c81d:	and    DWORD PTR [esi-0x5c6e62bb],0xf3be2135
  40c827:	test   al,0x5d
  40c829:	sbb    ch,bh
  40c82b:	mov    dh,0xe
  40c82d:	(bad)  
  40c82e:	scas   al,BYTE PTR es:[edi]
  40c82f:	addr16 call 0x845df3f4
  40c835:	mov    ecx,0xe3f4b09f
  40c83a:	pop    edi
  40c83b:	in     eax,0x76
  40c83d:	xor    esi,edx
  40c83f:	xor    DWORD PTR [edi-0x1585656e],ebx
  40c845:	sub    BYTE PTR [ebx-0x43],dh
  40c848:	mov    ds:0xed53065e,eax
  40c84d:	or     edx,DWORD PTR [ecx]
  40c84f:	int    0x87
  40c851:	jecxz  0x40c891
  40c853:	cmp    BYTE PTR [ebx-0x4407ff92],cl
  40c859:	adc    eax,0x2b88df2f
  40c85e:	mov    cl,0xe7
  40c860:	dec    esi
  40c861:	mov    edx,DWORD PTR ds:0x1fe66274
  40c867:	leave  
  40c868:	mov    bh,0xe1
  40c86a:	sbb    DWORD PTR [edx-0x6d],esp
  40c86d:	pop    edx
  40c86e:	ss icebp 
  40c870:	leave  
  40c871:	idiv   BYTE PTR ds:0xa48ac97c
  40c877:	out    0xd1,al
  40c879:	and    eax,0xbc9ffbd8
  40c87e:	(bad)  
  40c87f:	and    BYTE PTR [edi-0x125d9bf8],ah
  40c885:	add    bh,dl
  40c887:	fdiv   QWORD PTR [ebx+0x50]
  40c88a:	outs   dx,BYTE PTR ds:[esi]
  40c88b:	push   ss
  40c88c:	retf   0xf56
  40c88f:	push   0x74
  40c891:	add    al,0x42
  40c893:	aad    0x3c
  40c895:	pushf  
  40c896:	imul   edx,DWORD PTR [edx+0x6b],0x26
  40c89a:	fidiv  DWORD PTR [esi]
  40c89c:	in     eax,0xab
  40c89e:	retf   0x1bea
  40c8a1:	arpl   WORD PTR [ebp+0x69511e06],di
  40c8a7:	ins    DWORD PTR es:[edi],dx
  40c8a8:	inc    esi
  40c8a9:	sbb    ebp,DWORD PTR [esp+eax*2+0x2]
  40c8ad:	push   ebp
  40c8ae:	jge    0x40c888
  40c8b0:	adc    ebp,ebp
  40c8b2:	inc    ebx
  40c8b3:	mov    ch,0xbc
  40c8b5:	xchg   ebp,eax
  40c8b6:	lds    ebp,FWORD PTR [edi-0x512c741e]
  40c8bc:	jg     0x40c893
  40c8be:	inc    esp
  40c8bf:	mov    BYTE PTR [esi+0x76],al
  40c8c2:	ret    
  40c8c3:	dec    edi
  40c8c4:	bound  edi,QWORD PTR [ecx+0x5d]
  40c8c7:	int3   
  40c8c8:	enter  0x2e71,0xec
  40c8cc:	ds inc eax
  40c8ce:	sbb    dl,BYTE PTR fs:[esp+eiz*8+0x2f25d927]
  40c8d6:	sub    dh,BYTE PTR [esi+0x7b]
  40c8d9:	shl    DWORD PTR [ebx+0x13b68ea4],cl
  40c8df:	xlat   BYTE PTR ds:[ebx]
  40c8e0:	push   ds
  40c8e1:	xchg   edx,eax
  40c8e2:	adc    BYTE PTR [edi],ch
  40c8e4:	dec    edi
  40c8e5:	mov    ah,0x6c
  40c8e7:	es dec ecx
  40c8e9:	test   DWORD PTR [esi-0x26],esp
  40c8ec:	mov    edx,0xd4deb59d
  40c8f1:	int3   
  40c8f2:	inc    eax
  40c8f3:	sub    DWORD PTR [edi-0x6bfb28af],edx
  40c8f9:	bswap  esi
  40c8fb:	pop    ebp
  40c8fc:	jno    0x40c8a7
  40c8fe:	mov    eax,0xb76f89d3
  40c903:	xchg   ebp,eax
  40c904:	stos   DWORD PTR es:[edi],eax
  40c905:	sub    BYTE PTR ds:0xe97cca2b,ch
  40c90b:	xchg   esi,eax
  40c90c:	scas   al,BYTE PTR es:[edi]
  40c90d:	loopne 0x40c917
  40c90f:	into   
  40c910:	js     0x40c967
  40c912:	(bad)  
  40c914:	and    ecx,DWORD PTR [ebx]
  40c916:	dec    ebx
  40c917:	cs (bad) 
  40c919:	(bad)  
  40c91a:	mov    ecx,0x626c30f3
  40c91f:	and    DWORD PTR [ebp-0x72ee3c94],0x500d1430
  40c929:	rcl    DWORD PTR ds:0x72992f4d,0x61
  40c930:	mul    BYTE PTR [ecx+0x1]
  40c933:	cli    
  40c934:	sbb    ah,BYTE PTR [edx+edx*8]
  40c937:	retf   0xa38b
  40c93a:	out    dx,eax
  40c93b:	pop    ecx
  40c93c:	sbb    BYTE PTR [edi+0x10],bh
  40c93f:	(bad)  
  40c940:	sti    
  40c941:	loopne 0x40c8f4
  40c943:	pop    ecx
  40c944:	ins    BYTE PTR es:[edi],dx
  40c945:	or     eax,DWORD PTR [eax]
  40c947:	cli    
  40c948:	mov    ebp,esp
  40c94a:	jle    0x40c8ed
  40c94c:	mov    dh,BYTE PTR [eax+ebp*8]
  40c94f:	add    BYTE PTR [esi],al
  40c951:	dec    esi
  40c952:	jmp    0x40c919
  40c954:	test   DWORD PTR [esi+0x42],ebp
  40c957:	add    DWORD PTR [ebx+0xc],esp
  40c95a:	ins    BYTE PTR es:[edi],dx
  40c95b:	leave  
  40c95c:	dec    ebp
  40c95d:	push   ebp
  40c95e:	scas   eax,DWORD PTR es:[edi]
  40c95f:	aaa    
  40c960:	(bad)  
  40c961:	xchg   ecx,eax
  40c962:	sbb    DWORD PTR [esi-0x69],0x9144e166
  40c969:	cmp    al,0x22
  40c96b:	rcr    ah,1
  40c96d:	popa   
  40c96e:	pop    esi
  40c96f:	add    BYTE PTR [edi],0x4b
  40c972:	cmp    al,0x57
  40c974:	pushf  
  40c975:	call   0x67986567
  40c97a:	retf   
  40c97b:	(bad)  
  40c97c:	inc    edi
  40c97d:	loopne 0x40c9b7
  40c97f:	push   0x30d6d940
  40c984:	mov    bl,bl
  40c986:	or     DWORD PTR es:[ebp+0x72f29e84],eax
  40c98d:	cdq    
  40c98e:	pushf  
  40c98f:	and    eax,0xa349b412
  40c994:	(bad)  [esi+0x3c162701]
  40c99a:	push   ebx
  40c99b:	mov    BYTE PTR [ebx],ah
  40c99d:	xor    ecx,edx
  40c99f:	or     DWORD PTR [eax-0x18],0xabb414d3
  40c9a6:	fidiv  WORD PTR [eax+edx*4]
  40c9a9:	inc    ecx
  40c9aa:	enter  0xb277,0xb2
  40c9ae:	push   ebp
  40c9af:	jmp    0xc32bf9f2
  40c9b4:	into   
  40c9b5:	mov    esp,0x4c65ab45
  40c9ba:	ins    DWORD PTR es:[edi],dx
  40c9bb:	sbb    al,0x7e
  40c9bd:	jb     0x40c9a6
  40c9bf:	mov    dl,0xfd
  40c9c1:	jle    0x40c991
  40c9c3:	pop    es
  40c9c4:	xor    ah,ch
  40c9c6:	fist   WORD PTR [ecx]
  40c9c8:	les    ebx,FWORD PTR gs:[ecx-0x1338c078]
  40c9cf:	or     bh,BYTE PTR [edi+0x2bc2af1]
  40c9d5:	cs jnp 0x40ca46
  40c9d8:	fs push esi
  40c9da:	dec    ebp
  40c9db:	jp     0x40c9e9
  40c9dd:	or     eax,0xc2a0e868
  40c9e2:	cmp    DWORD PTR [ebp+0x2fec9541],ebx
  40c9e8:	outs   dx,DWORD PTR ds:[esi]
  40c9e9:	cs (bad) 
  40c9ec:	sbb    BYTE PTR [ecx],0x3f
  40c9ef:	fstp   DWORD PTR [eax]
  40c9f1:	mov    ebx,DWORD PTR [edi]
  40c9f3:	pop    DWORD PTR [ebx+0x20]
  40c9f6:	repz push esi
  40c9f8:	addr16 push ecx
  40c9fa:	call   0x9728960c
  40c9ff:	dec    ecx
  40ca00:	icebp  
  40ca01:	jno    0x40c984
  40ca03:	bound  esp,QWORD PTR [esp+esi*8+0x52]
  40ca07:	aad    0xd9
  40ca09:	nop
  40ca0a:	(bad)  
  40ca0b:	out    dx,eax
  40ca0c:	dec    esp
  40ca0d:	inc    esp
  40ca0e:	adc    BYTE PTR [edi-0x3c],dh
  40ca11:	iret   
  40ca12:	sbb    ebx,DWORD PTR [eax]
  40ca14:	dec    edx
  40ca15:	xchg   esp,edi
  40ca17:	pop    ecx
  40ca19:	das    
  40ca1a:	retf   
  40ca1b:	push   0xffffffd6
  40ca1d:	retf   0xc1e8
  40ca20:	idiv   cl
  40ca22:	add    BYTE PTR [edi],bh
  40ca24:	add    eax,DWORD PTR [ebp+0x611a4a49]
  40ca2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca2b:	(bad)  
  40ca2c:	call   0x95b5:0x5018adac
  40ca33:	out    dx,al
  40ca34:	sub    ebp,DWORD PTR [edi]
  40ca36:	or     al,0x84
  40ca38:	fs retf 
  40ca3a:	adc    BYTE PTR ss:[edi],0x1e
  40ca3e:	popf   
  40ca3f:	inc    esi
  40ca40:	add    ecx,DWORD PTR [edi+0x2c]
  40ca43:	pop    edi
  40ca44:	mov    edi,gs
  40ca46:	mov    cl,0xb2
  40ca48:	push   ss
  40ca49:	data16 loop 0x40ca7c
  40ca4c:	jmp    0x6bbb966e
  40ca51:	sub    al,0x9d
  40ca53:	fs fs mov eax,gs:0x662c225c
  40ca5b:	push   eax
  40ca5c:	inc    ecx
  40ca5d:	mov    esi,0x518fa35d
  40ca62:	test   DWORD PTR [eax+0x2d],esp
  40ca65:	(bad)  
  40ca66:	mov    ebp,0xb98bb6dc
  40ca6b:	jno    0x40ca3d
  40ca6d:	sbb    esp,DWORD PTR [edi]
  40ca6f:	sahf   
  40ca70:	mov    bh,0xf6
  40ca72:	sbb    DWORD PTR [ebp+eiz*2+0x0],edx
  40ca76:	loop   0x40ca2e
  40ca78:	jae    0x40ca29
  40ca7a:	ret    0xf035
  40ca7d:	hlt    
  40ca7e:	add    BYTE PTR [ebp+0x3869d963],dh
  40ca84:	hlt    
  40ca85:	ss push 0xffffffc8
  40ca88:	stos   BYTE PTR es:[edi],al
  40ca89:	push   ecx
  40ca8a:	cmp    al,0xb2
  40ca8c:	push   ss
  40ca8d:	mov    al,ds:0x3f4f07e4
  40ca92:	(bad)  
  40ca93:	push   0x48ddd624
  40ca98:	call   0x7ed3d6b1
  40ca9d:	(bad)  
  40ca9e:	(bad)
  40caa3:	out    0xc8,al
  40caa5:	das    
  40caa6:	adc    ecx,DWORD PTR [eax-0x4e]
  40caa9:	rol    BYTE PTR [eax+0x5ce4b5be],0xfb
  40cab0:	inc    ecx
  40cab1:	dec    edx
  40cab2:	push   0x5750ba12
  40cab7:	jne    0x40caaa
  40cab9:	push   ebp
  40caba:	fiadd  WORD PTR ds:0x5e74135d
  40cac0:	xor    bl,BYTE PTR [ebp-0x1]
  40cac3:	jno    0x40caa1
  40cac5:	sub    bh,BYTE PTR [edi]
  40cac7:	ret    0x8a30
  40caca:	pmullw mm6,QWORD PTR [ecx-0x44d6c802]
  40cad1:	cmp    eax,0xeadcce54
  40cad6:	lahf   
  40cad7:	sub    al,0x5
  40cad9:	sub    al,0x80
  40cadb:	or     BYTE PTR cs:[ebp-0x3edcec41],bh
  40cae2:	cmp    eax,0x3186bd5
  40cae7:	mov    ds:0x2aa617e1,al
  40caec:	jbe    0x40caec
  40caee:	test   eax,0xe8c5e4d
  40caf3:	jmp    0x16e5205a
  40caf8:	jmp    0x2811:0x3d995e8c
  40caff:	dec    esi
  40cb00:	(bad)
  40cb04:	push   0x788cdb3d
  40cb09:	arpl   WORD PTR [esi],dx
  40cb0b:	fdivrp st(6),st
  40cb0d:	xlat   BYTE PTR ds:[ebx]
  40cb0e:	xor    BYTE PTR [edi],cl
  40cb10:	adc    edi,ecx
  40cb12:	pop    ebp
  40cb13:	ret    0x85bf
  40cb16:	retf   0xb9a6
  40cb19:	fld    QWORD PTR [esi+0x6a]
  40cb1c:	add    bl,BYTE PTR ds:0x66025bde
  40cb22:	push   ss
  40cb23:	ds data16 fwait
  40cb26:	std    
  40cb27:	pop    esp
  40cb28:	arpl   si,sp
  40cb2a:	xchg   edx,eax
  40cb2b:	cmp    DWORD PTR [eax+0x2022f8ca],ecx
  40cb31:	rol    eax,cl
  40cb33:	xor    dl,BYTE PTR [eax-0x69b95eef]
  40cb39:	mov    eax,0xf11462df
  40cb3e:	adc    ecx,DWORD PTR [edx+0x72]
  40cb41:	test   al,0x1a
  40cb43:	or     edi,DWORD PTR [ebx+0x1c923d68]
  40cb49:	adc    cl,cl
  40cb4b:	mov    dh,0xd8
  40cb4d:	xchg   ecx,eax
  40cb4e:	shl    BYTE PTR [ebx-0x315cd687],cl
  40cb54:	pusha  
  40cb55:	jl     0x40cb76
  40cb57:	fidivr DWORD PTR [esi]
  40cb59:	and    al,0xf1
  40cb5b:	call   DWORD PTR ds:0x261fa4c2
  40cb61:	xor    eax,0x2b02cc24
  40cb66:	pop    esp
  40cb67:	rcr    BYTE PTR [esi-0x27584362],1
  40cb6d:	test   eax,0xb0acba23
  40cb72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb73:	xlat   BYTE PTR ds:[ebx]
  40cb74:	out    dx,eax
  40cb75:	cmp    ah,bl
  40cb77:	frstor [ebx+ebx*1+0x69]
  40cb7b:	ror    BYTE PTR [esi],0xcd
  40cb7e:	stc    
  40cb7f:	push   esi
  40cb80:	dec    eax
  40cb81:	mov    eax,cs
  40cb83:	sbb    eax,0xe93c8c48
  40cb88:	iret   
  40cb89:	xchg   edi,eax
  40cb8a:	push   ebp
  40cb8b:	fs call 0x27e26fa1
  40cb91:	aam    0x25
  40cb93:	mov    eax,ds:0xb2b65ba3
  40cb98:	lahf   
  40cb99:	xlat   BYTE PTR ds:[ebx]
  40cb9a:	daa    
  40cb9b:	int    0x97
  40cb9d:	dec    ebp
  40cb9e:	pop    ebx
  40cb9f:	cmp    DWORD PTR [ecx],ebx
  40cba1:	cdq    
  40cba2:	mov    edx,0xb709e2af
  40cba7:	outs   dx,BYTE PTR ds:[esi]
  40cba8:	sub    eax,0xeffa39f
  40cbad:	call   FWORD PTR [eax+0x32681e07]
  40cbb3:	xchg   ebx,eax
  40cbb4:	test   DWORD PTR [edx],esp
  40cbb6:	cmp    al,0xa9
  40cbb8:	pop    ebp
  40cbb9:	mov    ch,0x2b
  40cbbb:	mov    eax,esp
  40cbbd:	je     0x40cb52
  40cbbf:	dec    edi
  40cbc0:	cmp    ecx,esp
  40cbc2:	xchg   esp,eax
  40cbc3:	mov    dh,0x98
  40cbc5:	cwde   
  40cbc6:	sar    BYTE PTR [ebx],1
  40cbc8:	xor    eax,0x80d979da
  40cbcd:	inc    esp
  40cbce:	xlat   BYTE PTR ds:[ebx]
  40cbcf:	dec    esi
  40cbd0:	(bad)  
  40cbd1:	xchg   esp,eax
  40cbd2:	sub    BYTE PTR [esi-0x52],dl
  40cbd5:	inc    esi
  40cbd6:	cmp    eax,0x71615fe4
  40cbdb:	pop    edi
  40cbdc:	cmp    BYTE PTR [ecx],dl
  40cbde:	xor    DWORD PTR [ecx+0x425f7191],ebx
  40cbe4:	(bad)  
  40cbe5:	sbb    eax,ebp
  40cbe7:	dec    ebx
  40cbe8:	and    bh,BYTE PTR [eax+0x52e6fdd5]
  40cbee:	add    DWORD PTR [edx+0x60],0x4a9a4c84
  40cbf5:	fcmovnu st,st(2)
  40cbf7:	retf   
  40cbf8:	pop    esp
  40cbf9:	ins    BYTE PTR es:[edi],dx
  40cbfa:	push   esi
  40cbfb:	or     al,0x9b
  40cbfd:	xchg   ecx,eax
  40cbfe:	jmp    0x96e6:0x2a4b4fa9
  40cc05:	adc    DWORD PTR [ebp-0x213ba2ce],eax
  40cc0b:	push   ds
  40cc0c:	jne    0x40cc6f
  40cc0e:	push   es
  40cc0f:	(bad)  
  40cc11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc12:	jnp    0x40cc01
  40cc14:	int3   
  40cc15:	jmp    0x40cc3a
  40cc17:	add    edi,DWORD PTR ds:0x2b93fd2a
  40cc1d:	imul   esp,edi,0xfffffff0
  40cc20:	out    0x51,eax
  40cc22:	mov    cl,0x5b
  40cc24:	fidiv  WORD PTR [edx]
  40cc26:	sbb    DWORD PTR [ebx],eax
  40cc28:	pop    ss
  40cc29:	in     eax,0x10
  40cc2b:	add    BYTE PTR ds:0x281387ae,dh
  40cc31:	fnstsw WORD PTR [edi+0x1db84bd6]
  40cc37:	leave  
  40cc38:	cmp    DWORD PTR [ebx],0x20d1f239
  40cc3e:	or     eax,DWORD PTR [eax-0x12]
  40cc41:	lea    esp,[edx-0x5b]
  40cc44:	xchg   ebp,eax
  40cc45:	(bad)  
  40cc46:	push   esi
  40cc48:	jl     0x40cbcb
  40cc4a:	in     eax,dx
  40cc4b:	push   DWORD PTR [edi]
  40cc4d:	pop    edi
  40cc4e:	xor    DWORD PTR [ebx],ecx
  40cc50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc51:	pop    ecx
  40cc52:	in     al,dx
  40cc53:	fadd   st(4),st
  40cc55:	fcmovne st,st(0)
  40cc57:	mov    ch,0xee
  40cc59:	cld    
  40cc5a:	in     eax,0x94
  40cc5c:	out    dx,al
  40cc5d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc5f:	jg     0x40cc14
  40cc61:	push   ecx
  40cc62:	inc    edx
  40cc63:	imul   DWORD PTR [edi-0x50]
  40cc66:	xchg   DWORD PTR [edi+edi*4+0x7e89a54c],esp
  40cc6d:	pop    edi
  40cc6e:	call   0x90fba8d9
  40cc73:	push   ebx
  40cc74:	aad    0x8d
  40cc76:	loopne 0x40ccf2
  40cc78:	sbb    BYTE PTR ds:0x8adace59,dh
  40cc7e:	ret    
  40cc7f:	and    BYTE PTR [edi],cl
  40cc81:	pop    ebp
  40cc82:	ss std 
  40cc84:	xchg   ecx,eax
  40cc85:	xor    eax,0xf1f23d1b
  40cc8a:	xor    ebx,0x9263c53c
  40cc90:	sbb    BYTE PTR [edx],0xca
  40cc93:	sub    bh,BYTE PTR [ecx-0x7f]
  40cc96:	jo     0x40cd04
  40cc98:	xchg   esi,eax
  40cc99:	pusha  
  40cc9a:	ret    0x5fce
  40cc9d:	in     al,0xe
  40cc9f:	ror    DWORD PTR [ecx+0x4f],cl
  40cca2:	adc    DWORD PTR [ebx],edx
  40cca4:	out    0x97,eax
  40cca6:	and    edi,DWORD PTR [ebx-0x2f]
  40cca9:	mov    bh,0x15
  40ccab:	out    dx,eax
  40ccac:	dec    eax
  40ccad:	int3   
  40ccae:	adc    DWORD PTR [eax],0xa58b1049
  40ccb4:	sar    BYTE PTR ds:0x9179b24d,cl
  40ccba:	fwait
  40ccbb:	int    0xe5
  40ccbd:	add    al,0xd6
  40ccbf:	mov    ds:0x400c13fb,al
  40ccc4:	mov    ah,0x23
  40ccc6:	aad    0x65
  40ccc8:	pusha  
  40ccc9:	xor    ah,ah
  40cccb:	pop    ds
  40cccc:	adc    BYTE PTR [edx+0xc],0x58
  40ccd0:	jp     0x40cd39
  40ccd2:	fstp   TBYTE PTR [ebp+eax*1-0x10]
  40ccd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd7:	xchg   esp,eax
  40ccd8:	cmp    BYTE PTR [ebx+0x3624b3b5],cl
  40ccde:	inc    eax
  40ccdf:	gs dec edi
  40cce1:	idiv   DWORD PTR [ecx]
  40cce3:	sbb    BYTE PTR [ebp+0x7baa074f],dl
  40cce9:	fcomp  QWORD PTR [ecx+0x979aebe]
  40ccef:	jl     0x40cc78
  40ccf1:	cs sbb eax,0x27e4177a
  40ccf7:	mov    al,BYTE PTR ds:0x3fd5d965
  40ccfd:	pop    ss
  40ccfe:	jl     0x40cc99
  40cd00:	sbb    BYTE PTR [edi-0x7707e080],ch
  40cd06:	xor    DWORD PTR [edi-0x4f],0xffffff90
  40cd0a:	inc    ebx
  40cd0b:	and    dl,cl
  40cd0d:	jno    0x40cd1e
  40cd0f:	pop    ds
  40cd10:	pop    ds
  40cd11:	mov    al,0x1f
  40cd13:	inc    eax
  40cd14:	pop    es
  40cd15:	push   ds
  40cd16:	fcom   QWORD PTR [ebx+0x5472b372]
  40cd1c:	add    eax,0x769fe56
  40cd21:	and    BYTE PTR [esi+esi*4],al
  40cd24:	sub    ebx,DWORD PTR ds:0xdb9e2f6d
  40cd2a:	mul    BYTE PTR [edi*2+0x3dd0ce7d]
  40cd31:	aad    0xfa
  40cd33:	inc    edx
  40cd34:	xchg   ecx,eax
  40cd35:	adc    bh,bl
  40cd37:	cmp    DWORD PTR [esi-0x788fd429],eax
  40cd3d:	stc    
  40cd3e:	jo     0x40cdab
  40cd40:	pop    ebp
  40cd41:	or     BYTE PTR [ecx-0x62208438],cl
  40cd47:	cwde   
  40cd48:	push   ss
  40cd49:	lods   al,BYTE PTR ds:[esi]
  40cd4a:	mov    edx,0x2cfc5bcf
  40cd4f:	sti    
  40cd50:	fistp  DWORD PTR [eax*8+0x3e902ffa]
  40cd57:	push   ss
  40cd58:	xor    dh,BYTE PTR [ebx-0x41d4663]
  40cd5e:	push   edi
  40cd5f:	xor    eax,0x99cae369
  40cd64:	pop    ebp
  40cd65:	adc    BYTE PTR [ebx-0x2c],ah
  40cd68:	add    BYTE PTR [ebp-0x6e],bh
  40cd6b:	mov    ah,0xe5
  40cd6d:	aas    
  40cd6e:	xlat   BYTE PTR ds:[ebx]
  40cd6f:	out    dx,al
  40cd70:	add    al,BYTE PTR [eax+edx*4]
  40cd73:	fst    DWORD PTR [edx]
  40cd75:	or     eax,DWORD PTR [ebp-0x3e]
  40cd78:	cmc    
  40cd79:	cli    
  40cd7a:	dec    esp
  40cd7b:	xchg   BYTE PTR [ebx+0x7fbf7168],al
  40cd81:	mov    esp,0x2ed975e
  40cd86:	call   0xb36529e5
  40cd8b:	add    DWORD PTR [edi-0x4421a477],esp
  40cd91:	je     0x40ce01
  40cd93:	adc    al,0x43
  40cd95:	xchg   BYTE PTR [esp+esi*8],bh
  40cd98:	adc    DWORD PTR [ecx-0x57761591],esp
  40cd9e:	dec    edx
  40cd9f:	fistp  WORD PTR [esi-0x50628ac1]
  40cda5:	loope  0x40cd74
  40cda7:	pop    edi
  40cda8:	loop   0x40ce00
  40cdaa:	mov    ebp,0x64547b70
  40cdaf:	jmp    0xa40e:0x8980f02d
  40cdb6:	jl     0x40cd4f
  40cdb8:	push   ds
  40cdb9:	mov    cl,0x4
  40cdbb:	sub    eax,0x6526d217
  40cdc0:	cwde   
  40cdc1:	and    ebp,DWORD PTR [ecx+0x25]
  40cdc4:	add    DWORD PTR [edi],ebx
  40cdc6:	ficomp WORD PTR [ebp+0x2b58f981]
  40cdcc:	cmp    al,0xd6
  40cdce:	neg    cl
  40cdd0:	into   
  40cdd1:	lock xor ecx,DWORD PTR [ebx]
  40cdd4:	imul   dh
  40cdd6:	test   BYTE PTR [edi-0x6466702a],ah
  40cddc:	add    DWORD PTR [esi+0x7ce53143],edx
  40cde2:	adc    DWORD PTR [ebx+ecx*4-0xe],ebp
  40cde6:	inc    eax
  40cde8:	pop    ebp
  40cde9:	lods   al,BYTE PTR ds:[esi]
  40cdea:	stc    
  40cdeb:	jmp    0x657f52a7
  40cdf0:	xor    dl,bl
  40cdf2:	fucomi st,st(5)
  40cdf4:	mov    cs,WORD PTR [ebx-0x6f]
  40cdf7:	pop    esi
  40cdf8:	loope  0x40cda8
  40cdfa:	js     0x40cde0
  40cdfc:	cmp    bl,BYTE PTR [edx-0x63f7ee9b]
  40ce02:	pop    edi
  40ce03:	cwde   
  40ce04:	cmp    al,0x48
  40ce06:	sahf   
  40ce07:	sub    DWORD PTR [ebx+0x1bd7d975],esp
  40ce0d:	cwde   
  40ce0e:	mov    edi,0x745b086c
  40ce13:	out    0x2,eax
  40ce15:	dec    esi
  40ce16:	sbb    DWORD PTR [esi],0x6f338b07
  40ce1c:	xchg   edi,eax
  40ce1d:	xor    dl,al
  40ce1f:	push   0x973a601e
  40ce24:	add    BYTE PTR [eax-0x4d],cl
  40ce27:	sub    dl,ah
  40ce29:	inc    ebp
  40ce2a:	xlat   BYTE PTR ds:[ebx]
  40ce2b:	adc    eax,0x41276dfa
  40ce30:	aad    0x44
  40ce32:	fcmovbe st,st(0)
  40ce34:	nop
  40ce35:	(bad)  
  40ce36:	jge    0x40ce4d
  40ce38:	pusha  
  40ce39:	lods   eax,DWORD PTR ds:[esi]
  40ce3a:	dec    edx
  40ce3b:	adc    eax,0x9f22296
  40ce40:	pop    edi
  40ce41:	neg    bl
  40ce43:	pop    ecx
  40ce44:	aas    
  40ce45:	adc    DWORD PTR [ecx+ebx*8+0x5011a001],ecx
  40ce4c:	or     al,0x60
  40ce4e:	mov    BYTE PTR [edi],0x1d
  40ce51:	cld    
  40ce52:	(bad)  
  40ce53:	icebp  
  40ce54:	add    DWORD PTR [edx-0x4],ebx
  40ce57:	(bad)  
  40ce59:	ss in  eax,dx
  40ce5b:	xor    al,0x29
  40ce5d:	enter  0x564a,0x0
  40ce61:	or     dl,BYTE PTR [ebx+0x31a5a84d]
  40ce67:	xchg   edi,eax
  40ce68:	test   BYTE PTR [esi-0x5bd4d3b4],ch
  40ce6e:	mov    ebp,0x357640b4
  40ce73:	pcmpgtd mm5,QWORD PTR [edi+0x55]
  40ce77:	stos   BYTE PTR es:[edi],al
  40ce78:	ins    BYTE PTR es:[edi],dx
  40ce79:	mov    ebx,ss
  40ce7b:	fnsave [edx]
  40ce7d:	xchg   esi,eax
  40ce7e:	mov    eax,0xc9a7e1c1
  40ce83:	fsubr  DWORD PTR [edx]
  40ce85:	jp     0x40ce6d
  40ce87:	popa   
  40ce88:	pop    ebx
  40ce89:	jmp    DWORD PTR [ebp+0x67d7f935]
  40ce8f:	push   eax
  40ce90:	xchg   ebp,eax
  40ce91:	sbb    eax,ebx
  40ce93:	loope  0x40ce47
  40ce95:	or     esp,DWORD PTR [eax-0x72]
  40ce98:	fild   WORD PTR [edx+0x502790ec]
  40ce9e:	push   es
  40ce9f:	mov    esp,0xa4741eed
  40cea4:	sub    ah,BYTE PTR [edi-0x3b67bbce]
  40ceaa:	mov    DWORD PTR [edx-0x68c50c51],eax
  40ceb0:	jnp    0x40ceee
  40ceb2:	and    edx,ebx
  40ceb4:	mov    ecx,esi
  40ceb6:	sub    eax,0x4d9542d7
  40cebb:	ja     0x40cf04
  40cebd:	jae    0x40ceca
  40cebf:	leave  
  40cec0:	ret    
  40cec1:	call   0x4b8962d5
  40cec6:	jp     0x40ceb5
  40cec8:	pop    edi
  40cec9:	ret    0x241e
  40cecc:	retf   
  40cecd:	aaa    
  40cece:	mov    al,0x3e
  40ced0:	jnp    0x40cf3a
  40ced2:	push   0x83df5f3a
  40ced7:	dec    BYTE PTR [edx]
  40ced9:	fbld   TBYTE PTR [ebx+0x539d257]
  40cedf:	xor    BYTE PTR [eax],al
  40cee1:	fnstcw WORD PTR [edx+ecx*1]
  40cee4:	push   0xd8fcdc72
  40cee9:	push   ecx
  40ceea:	jmp    0x5a76b907
  40ceef:	or     al,dh
  40cef1:	push   esp
  40cef2:	enter  0x69e8,0x7b
  40cef6:	loop   0x40cf5d
  40cef8:	lahf   
  40cef9:	push   es
  40cefa:	scas   eax,DWORD PTR es:[edi]
  40cefb:	fmul   DWORD PTR [edx-0x70]
  40cefe:	icebp  
  40ceff:	enter  0xcf3f,0x92
  40cf03:	(bad)  
  40cf04:	fnstsw WORD PTR [eax]
  40cf06:	dec    ebx
  40cf07:	inc    edx
  40cf08:	or     BYTE PTR [esi+0x40880631],0x34
  40cf0f:	or     esi,DWORD PTR [edi+edx*2]
  40cf12:	icebp  
  40cf13:	hlt    
  40cf14:	adc    BYTE PTR [edi-0x7aeddc1c],dl
  40cf1a:	xchg   esp,eax
  40cf1b:	out    0x14,eax
  40cf1d:	sbb    DWORD PTR [edx-0x24686f59],0x685e5046
  40cf27:	gs add al,0xf
  40cf2a:	ds sub eax,0x7bcbae54
  40cf30:	es rcr ebp,cl
  40cf33:	outs   dx,DWORD PTR ds:[esi]
  40cf34:	inc    edx
  40cf35:	imul   esp,DWORD PTR [esi-0x235b75ef],0x35cb3bbf
  40cf3f:	inc    edi
  40cf40:	sub    bl,BYTE PTR [edi-0x3f7fbb8f]
  40cf46:	imul   DWORD PTR [eax-0x61]
  40cf49:	mov    ch,BYTE PTR [ecx+0x3e]
  40cf4c:	icebp  
  40cf4d:	(bad)  
  40cf4e:	adc    edi,DWORD PTR [ebx]
  40cf50:	xor    eax,0x26c902d3
  40cf55:	fwait
  40cf56:	push   0xffffffbf
  40cf58:	xchg   edx,eax
  40cf59:	sub    BYTE PTR [eax+edi*4-0x6755a7e9],bh
  40cf60:	sub    BYTE PTR [edx],0x63
  40cf63:	xchg   ebp,eax
  40cf64:	jge    0x40cefb
  40cf66:	and    al,0x94
  40cf68:	int    0x29
  40cf6a:	xchg   ecx,eax
  40cf6b:	shl    ecx,0x1c
  40cf6e:	cmp    DWORD PTR [edx],0xb7d0e354
  40cf74:	and    edx,DWORD PTR [ecx-0x15153816]
  40cf7a:	jae    0x40cff8
  40cf7c:	sahf   
  40cf7d:	sti    
  40cf7e:	sbb    DWORD PTR [ebx-0x2f],0xffffffba
  40cf82:	in     al,0x8a
  40cf84:	pop    ecx
  40cf85:	mov    al,ds:0x10c85b2
  40cf8a:	inc    esp
  40cf8b:	aam    0x7
  40cf8d:	cmp    al,0x63
  40cf8f:	clc    
  40cf90:	xchg   esi,eax
  40cf91:	rcr    bh,0x48
  40cf94:	cs dec ebp
  40cf96:	dec    esp
  40cf97:	cmp    ebx,ebx
  40cf99:	fnstcw WORD PTR [esi-0x17]
  40cf9c:	mov    cl,BYTE PTR [eax+ebx*8]
  40cf9f:	stos   BYTE PTR es:[edi],al
  40cfa0:	adc    esi,0x5d70fdb2
  40cfa6:	jne    0x40cfd8
  40cfa8:	ins    BYTE PTR es:[edi],dx
  40cfa9:	adc    dh,ah
  40cfab:	push   ss
  40cfac:	call   0xef38876a
  40cfb1:	push   edx
  40cfb2:	push   ecx
  40cfb3:	push   eax
  40cfb4:	lods   al,BYTE PTR ds:[esi]
  40cfb5:	(bad)  
  40cfb6:	int3   
  40cfb7:	jbe    0x40d038
  40cfb9:	inc    eax
  40cfba:	into   
  40cfbb:	or     eax,0x7873bb83
  40cfc0:	mov    DWORD PTR [edi],esi
  40cfc2:	sub    eax,0xb9949863
  40cfc7:	mov    al,ds:0xa4427b0a
  40cfcc:	test   eax,ecx
  40cfce:	cmp    al,0x23
  40cfd0:	jae    0x40cf6d
  40cfd2:	mov    edi,ebp
  40cfd4:	jb     0x40d004
  40cfd6:	scas   eax,DWORD PTR es:[edi]
  40cfd7:	jo     0x40cfb8
  40cfd9:	jecxz  0x40cf8b
  40cfdb:	scas   al,BYTE PTR es:[edi]
  40cfdc:	add    ah,dl
  40cfde:	lods   al,BYTE PTR ds:[esi]
  40cfdf:	adc    cl,BYTE PTR [edx-0x72]
  40cfe2:	fs fwait
  40cfe4:	xchg   esi,eax
  40cfe5:	test   eax,0x8fecc95
  40cfea:	xor    dh,dl
  40cfec:	and    al,0xa7
  40cfee:	in     al,0xdf
  40cff0:	mov    edi,0x4d70db07
  40cff5:	fiadd  WORD PTR [ebp+0x79]
  40cff8:	xchg   ebp,eax
  40cff9:	add    eax,0xbfbbe86b
  40cffe:	lods   al,BYTE PTR ds:[esi]
  40cfff:	pop    ds
  40d000:	or     DWORD PTR ds:[edx+0x7d],eax
  40d004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d005:	fistp  DWORD PTR [ebx-0x2fb5dee3]
  40d00b:	lds    eax,FWORD PTR [ebx+0x2865afa9]
  40d011:	jmp    0x6d7493ed
  40d016:	mov    ch,0xc0
  40d018:	push   ebx
  40d019:	pop    edx
  40d01a:	sbb    cl,ch
  40d01c:	jae    0x40cfba
  40d01e:	loope  0x40d084
  40d020:	jb     0x40d030
  40d022:	fidivr DWORD PTR [edi-0x75]
  40d025:	mov    ds:0x93b0f155,eax
  40d02a:	enter  0xee26,0x53
  40d02e:	into   
  40d02f:	rcl    BYTE PTR gs:[ebx-0x344b0ccb],0x1b
  40d037:	mov    ebp,0xd6101c7
  40d03c:	aaa    
  40d03d:	pop    ecx
  40d03e:	pop    ebp
  40d03f:	(bad)  
  40d040:	xor    dh,bh
  40d042:	and    dl,BYTE PTR [eax+0x26098896]
  40d048:	cmc    
  40d049:	loopne 0x40d04c
  40d04b:	test   eax,0xc2b33ed5
  40d050:	mov    ecx,0x7ad95787
  40d055:	repnz imul esi,DWORD PTR [edx],0x1f95d809
  40d05c:	jnp    0x40d09d
  40d05e:	and    BYTE PTR [edi],cl
  40d060:	icebp  
  40d061:	test   eax,0xca3cd17b
  40d066:	dec    edi
  40d067:	sbb    ah,BYTE PTR [eax+0x121c5d17]
  40d06d:	enter  0x9627,0x54
  40d071:	iret   
  40d072:	dec    eax
  40d073:	inc    ecx
  40d074:	or     BYTE PTR [esi],ah
  40d076:	cmp    eax,0xde3b5efb
  40d07b:	adc    DWORD PTR [esi+edx*2+0x26e7da7f],edi
  40d082:	dec    eax
  40d083:	mov    cl,0x44
  40d085:	cmp    eax,0xad0d45aa
  40d08a:	sar    BYTE PTR [edx],0x8c
  40d08d:	push   0x13a2ea43
  40d092:	mov    ebp,DWORD PTR [ebx]
  40d094:	sahf   
  40d095:	sbb    al,0x38
  40d097:	mov    ch,0xea
  40d099:	add    DWORD PTR [esi],0x209632f8
  40d09f:	mov    ebx,0x4abb58de
  40d0a4:	out    0xfa,al
  40d0a6:	cmp    eax,0x9cc2f404
  40d0ab:	push   ebx
  40d0ac:	rcr    BYTE PTR [edi-0x40],cl
  40d0af:	push   esp
  40d0b0:	push   edx
  40d0b1:	enter  0x594c,0x67
  40d0b5:	push   ss
  40d0b6:	and    BYTE PTR [edi+0x3be28c85],bl
  40d0bc:	jne    0x40d12c
  40d0be:	mov    eax,ds:0x9f3e6dcc
  40d0c3:	jl     0x40d0d4
  40d0c5:	addr16 das 
  40d0c7:	popa   
  40d0c8:	adc    ch,BYTE PTR [ebp+edx*8-0x4ea01e00]
  40d0cf:	add    eax,DWORD PTR [edi-0x36353989]
  40d0d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d6:	retf   
  40d0d7:	or     al,0x87
  40d0d9:	pop    eax
  40d0da:	inc    edx
  40d0db:	imul   esp,DWORD PTR [ebx-0x1b],0x89ff59c8
  40d0e2:	mov    ecx,DWORD PTR [edi+0x53]
  40d0e5:	mov    dl,0xf5
  40d0e7:	mov    esi,0x56a4f1d2
  40d0ec:	jnp    0x40d0a3
  40d0ee:	cmp    cl,ah
  40d0f0:	das    
  40d0f1:	test   eax,0xad460262
  40d0f6:	or     al,0xe2
  40d0f8:	in     eax,0xd7
  40d0fa:	ficomp DWORD PTR [edi+0x1293c685]
  40d100:	ins    BYTE PTR es:[edi],dx
  40d101:	iret   
  40d102:	(bad)  
  40d103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d104:	retf   
  40d105:	leave  
  40d106:	cwde   
  40d107:	inc    ebx
  40d108:	out    0x86,eax
  40d10a:	fiadd  DWORD PTR [esi+0x696f0882]
  40d110:	sub    eax,0xc17ace26
  40d115:	sbb    al,0x44
  40d117:	mov    ds:0x2813df72,al
  40d11c:	mov    ecx,0xdcba0d5c
  40d121:	mov    ecx,0xa03aef4c
  40d126:	iret   
  40d127:	(bad)  [edi+0x7e842120]
  40d12d:	mov    ch,0xf5
  40d12f:	int    0x1a
  40d131:	popa   
  40d132:	xor    edi,DWORD PTR [ecx-0xf]
  40d135:	dec    esi
  40d136:	pop    ss
  40d137:	adc    BYTE PTR [ebx],cl
  40d139:	ins    BYTE PTR es:[edi],dx
  40d13a:	mov    dl,0x8e
  40d13c:	xchg   ecx,eax
  40d13d:	scas   al,BYTE PTR es:[edi]
  40d13e:	dec    edi
  40d13f:	into   
  40d140:	out    dx,eax
  40d141:	xchg   esi,eax
  40d142:	inc    eax
  40d143:	adc    cl,bh
  40d145:	cmc    
  40d146:	int3   
  40d147:	cwde   
  40d148:	cwde   
  40d149:	enter  0x959b,0xbc
  40d14d:	push   edi
  40d14e:	mov    ds:0x9733009f,eax
  40d153:	clc    
  40d154:	out    dx,eax
  40d155:	mov    edx,0x124e7c46
  40d15a:	xor    dl,dl
  40d15c:	ret    0xcca0
  40d15f:	jb     0x40d107
  40d161:	xchg   BYTE PTR [eax],ah
  40d163:	jnp    0x40d1df
  40d165:	test   al,0x4d
  40d167:	clc    
  40d168:	std    
  40d169:	sti    
  40d16a:	xchg   edx,eax
  40d16b:	test   eax,0xfb53b115
  40d170:	ss inc esp
  40d172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d173:	test   edx,edx
  40d175:	(bad)  
  40d177:	jo     0x40d14e
  40d179:	ins    DWORD PTR es:[edi],dx
  40d17a:	jae    0x40d133
  40d17c:	fild   WORD PTR [ebp+0x3b21b9fc]
  40d182:	add    eax,0x36508ed0
  40d187:	ja     0x40d1b1
  40d189:	dec    ecx
  40d18a:	je     0x40d19e
  40d18c:	dec    edx
  40d18d:	jp     0x40d112
  40d18f:	mov    ebx,0xac4c833c
  40d194:	dec    edx
  40d195:	fcmovnb st,st(2)
  40d197:	xlat   BYTE PTR ds:[ebx]
  40d198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d199:	or     eax,0x6ae07eaf
  40d19e:	dec    esi
  40d19f:	out    dx,eax
  40d1a0:	push   ss
  40d1a1:	sub    ecx,ebp
  40d1a3:	in     al,0x4d
  40d1a5:	or     DWORD PTR [ebp+0x3],edx
  40d1a8:	ja     0x40d204
  40d1aa:	enter  0x3535,0x11
  40d1ae:	inc    ebx
  40d1af:	xchg   esi,eax
  40d1b0:	mov    WORD PTR [edi-0x34],cs
  40d1b3:	jmp    0xf7de:0xfc3f98b2
  40d1ba:	outs   dx,DWORD PTR ds:[esi]
  40d1bb:	pop    edx
  40d1bc:	pop    edi
  40d1bd:	test   eax,0xdf69117d
  40d1c2:	pop    ss
  40d1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1c4:	xchg   esi,eax
  40d1c5:	cmp    al,0x44
  40d1c7:	and    ah,BYTE PTR ds:0xf634af4
  40d1cd:	and    ecx,DWORD PTR [ebx]
  40d1cf:	push   esi
  40d1d0:	ins    BYTE PTR es:[edi],dx
  40d1d1:	(bad)  
  40d1d2:	and    eax,0xeede0a7b
  40d1d7:	aad    0x4
  40d1d9:	push   edx
  40d1da:	lods   al,BYTE PTR ds:[esi]
  40d1db:	jb     0x40d1d7
  40d1dd:	sbb    al,0x63
  40d1df:	jl     0x40d192
  40d1e1:	cmp    eax,0x4fcde4ea
  40d1e6:	psrld  mm5,QWORD PTR [ebp-0x15]
  40d1ea:	sub    edx,ebp
  40d1ec:	push   0x9a9c1d4a
  40d1f1:	sub    ch,BYTE PTR [edi]
  40d1f3:	inc    edx
  40d1f4:	shr    DWORD PTR [edi],cl
  40d1f6:	loopne 0x40d20e
  40d1f8:	rol    DWORD PTR [eax-0x27],cl
  40d1fb:	retf   
  40d1fc:	xchg   edi,eax
  40d1fd:	xor    DWORD PTR [edx+ebx*4-0x2a],ebx
  40d201:	push   0x53b4361c
  40d206:	push   edi
  40d207:	leave  
  40d208:	push   esp
  40d209:	pop    esi
  40d20a:	and    al,0xe2
  40d20c:	add    dh,dh
  40d20e:	dec    ebx
  40d20f:	add    eax,0x7577b2a6
  40d214:	jo     0x40d21b
  40d216:	mov    BYTE PTR ds:[ecx-0x6e4c6c4a],ch
  40d21d:	mov    edi,0xa5bb5b90
  40d222:	or     al,0x45
  40d224:	cli    
  40d225:	retf   0x313d
  40d228:	shl    BYTE PTR [esi],cl
  40d22a:	ss (bad) 
  40d22c:	pop    esi
  40d22d:	or     eax,0xb6d5ef28
  40d232:	mov    esp,0x91dad0ac
  40d237:	test   DWORD PTR [esp+eax*8-0x45ec41c6],edx
  40d23e:	aam    0xc6
  40d240:	aad    0x10
  40d242:	jo     0x40d1fd
  40d244:	sub    al,0x93
  40d246:	pushf  
  40d247:	pop    edi
  40d248:	test   al,0x74
  40d24a:	bound  esp,QWORD PTR [esp+edi*2]
  40d24d:	retf   0x7a14
  40d250:	out    dx,eax
  40d251:	and    eax,0xc08eb553
  40d256:	aaa    
  40d257:	adc    ch,ch
  40d259:	aaa    
  40d25a:	jo     0x40d20c
  40d25c:	xor    BYTE PTR [esi+edi*1+0x5b1a6c92],bl
  40d263:	adc    al,0xd7
  40d265:	push   cs
  40d266:	out    0x35,eax
  40d268:	ret    
  40d269:	jne    0x40d1ee
  40d26b:	jnp    0x40d2ae
  40d26d:	and    esp,DWORD PTR [edx+0x2a8b702f]
  40d273:	lea    ecx,[ecx+edx*1+0x3272f8]
  40d27a:	cmp    ecx,eax
  40d27c:	jne    0x408ae2
  40d282:	mov    eax,DWORD PTR [ebp-0x4]
  40d285:	xor    eax,esi
  40d287:	add    eax,edi
  40d289:	mov    DWORD PTR [ebp-0x10],eax
  40d28c:	mov    ebx,0x756654
  40d291:	add    ebx,0x567645
  40d297:	jmp    0x40f637
  40d29c:	iret   
  40d29d:	jmp    0x40d284
  40d29f:	sub    cl,0x9a
  40d2a2:	cli    
  40d2a3:	in     al,dx
  40d2a4:	xchg   ebx,eax
  40d2a5:	sbb    al,0x4b
  40d2a7:	or     cl,BYTE PTR [edi-0x2a]
  40d2aa:	sbb    al,0x41
  40d2ac:	das    
  40d2ad:	sub    edi,DWORD PTR [ebx+0x7b]
  40d2b0:	(bad)  
  40d2b1:	sahf   
  40d2b2:	jnp    0x40d32f
  40d2b4:	nop
  40d2b5:	in     al,0xd9
  40d2b7:	inc    edi
  40d2b8:	aas    
  40d2b9:	bound  esi,QWORD PTR [ebp-0x48668be3]
  40d2bf:	mov    ah,0x53
  40d2c1:	push   edx
  40d2c2:	or     ch,0x74
  40d2c5:	fs into 
  40d2c7:	jmp    0x1342ca22
  40d2cc:	repnz inc esi
  40d2ce:	imul   esp,DWORD PTR [eax+ebp*2+0x5e],0xffffff8f
  40d2d3:	lds    ebp,FWORD PTR [ebx+edi*4+0x14]
  40d2d7:	mov    al,ds:0x79b3e175
  40d2dc:	jg     0x40d357
  40d2de:	sbb    BYTE PTR ds:[ecx-0x1f],ch
  40d2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e3:	pop    eax
  40d2e4:	xor    al,0x24
  40d2e6:	out    dx,al
  40d2e7:	xchg   edi,eax
  40d2e8:	ret    
  40d2e9:	ficomp DWORD PTR [eax+0x6f]
  40d2ec:	fisttp QWORD PTR [ecx+0x6e]
  40d2ef:	imul   esi,DWORD PTR [ebx+0x3d78accb],0xd
  40d2f6:	adc    ebp,esi
  40d2f8:	cmp    ebp,DWORD PTR [ebx]
  40d2fa:	adc    BYTE PTR [edx],al
  40d2fc:	in     eax,dx
  40d2fd:	sti    
  40d2fe:	lea    eax,[edx+ecx*4-0x15d1a5cf]
  40d305:	out    dx,eax
  40d306:	xchg   ecx,eax
  40d307:	test   BYTE PTR [eax+0x1e9e696d],bh
  40d30d:	scas   al,BYTE PTR es:[edi]
  40d30e:	cmp    al,0x97
  40d310:	je     0x40d34d
  40d312:	mov    edi,0xda234cdb
  40d317:	mov    al,0xf1
  40d319:	inc    ebp
  40d31a:	fwait
  40d31b:	inc    eax
  40d31c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d31e:	into   
  40d31f:	pusha  
  40d320:	cmp    BYTE PTR [eax+0x46],al
  40d323:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40d325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d326:	xchg   BYTE PTR [eax+0x31],dh
  40d329:	fwait
  40d32a:	add    ebp,DWORD PTR [edi+ebp*4]
  40d32d:	add    al,0x40
  40d32f:	in     al,dx
  40d330:	xlat   BYTE PTR ds:[ebx]
  40d331:	cmp    dh,BYTE PTR [eax+0x5e265af0]
  40d337:	push   ecx
  40d338:	cmp    BYTE PTR [esi+0x65debaef],bh
  40d33e:	ret    
  40d33f:	ins    BYTE PTR es:[edi],dx
  40d340:	mov    edi,DWORD PTR [edx]
  40d342:	push   ebp
  40d343:	mov    ds:0x8c185d79,eax
  40d348:	mov    edi,0xfcd0018a
  40d34d:	imul   edx,DWORD PTR [ebx],0x57986892
  40d353:	icebp  
  40d354:	nop    edx
  40d357:	lods   eax,DWORD PTR ds:[esi]
  40d358:	xchg   ebx,eax
  40d359:	inc    ebp
  40d35a:	icebp  
  40d35b:	pop    ebx
  40d35c:	aas    
  40d35d:	aam    0x7a
  40d35f:	ror    DWORD PTR [eax+esi*1],0xe8
  40d363:	scas   al,BYTE PTR es:[edi]
  40d364:	jbe    0x40d2f8
  40d366:	hlt    
  40d367:	jae    0x40d3b5
  40d369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d36a:	in     eax,dx
  40d36b:	mov    bl,0x32
  40d36d:	out    dx,al
  40d36e:	(bad)  
  40d36f:	mov    cl,0x38
  40d371:	scas   al,BYTE PTR es:[edi]
  40d372:	js     0x40d384
  40d374:	loop   0x40d347
  40d376:	mov    eax,0xa6ad9e95
  40d37b:	and    bl,ah
  40d37d:	in     al,0xc6
  40d37f:	call   0x1ea8:0x2ffe344d
  40d386:	push   eax
  40d387:	stos   BYTE PTR es:[edi],al
  40d388:	xchg   DWORD PTR [ebp+0x14720771],esi
  40d38e:	adc    al,0x12
  40d390:	and    ah,al
  40d392:	sbb    eax,0x304722e2
  40d397:	mov    dh,0xbc
  40d399:	pop    ecx
  40d39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39b:	push   0xc3ee8b89
  40d3a0:	scas   eax,DWORD PTR es:[edi]
  40d3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3a2:	mov    edi,edx
  40d3a4:	fsub   QWORD PTR [ebx+0x30]
  40d3a7:	stos   BYTE PTR es:[edi],al
  40d3a8:	fmul   DWORD PTR [ecx+0x32fe7315]
  40d3ae:	dec    edx
  40d3af:	add    esp,DWORD PTR [ecx-0x78194c72]
  40d3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3b6:	arpl   WORD PTR [edi+0x34],sp
  40d3b9:	mov    esi,DWORD PTR [ebp+0x5a]
  40d3bc:	mov    edi,DWORD PTR [ebp-0x5975b2bf]
  40d3c2:	or     BYTE PTR [esi-0x742297fe],al
  40d3c8:	clc    
  40d3c9:	cmp    eax,0x86ca74db
  40d3ce:	nop
  40d3cf:	and    BYTE PTR [edi],bl
  40d3d1:	mov    eax,ds:0x36a76239
  40d3d6:	xor    DWORD PTR gs:[ebp-0x47],edi
  40d3da:	add    bh,BYTE PTR [edi+edi*1-0x74e2f3ed]
  40d3e1:	cmp    eax,0xd3ad7423
  40d3e6:	loopne 0x40d3f1
  40d3e8:	cs inc eax
  40d3ea:	add    cl,bl
  40d3ec:	jl     0x40d41b
  40d3ee:	mov    ds:0x2261b98b,eax
  40d3f3:	cmp    DWORD PTR [eax+0x69c09eeb],esi
  40d3f9:	call   0xb18a6e4e
  40d3fe:	aad    0xa
  40d400:	xchg   esp,eax
  40d401:	add    DWORD PTR [ebx-0x32b1d54a],esi
  40d407:	aas    
  40d408:	out    dx,al
  40d409:	outs   dx,DWORD PTR ds:[esi]
  40d40a:	test   al,0xdd
  40d40c:	xchg   esi,eax
  40d40d:	xacquire xchg BYTE PTR [ebp-0x61],cl
  40d411:	test   DWORD PTR [eax+0x39480b27],eax
  40d417:	or     esi,DWORD PTR [esi-0x3c]
  40d41a:	xchg   BYTE PTR [ebp+0x3909f79],dh
  40d420:	js     0x40d434
  40d422:	xchg   esi,eax
  40d423:	scas   al,BYTE PTR es:[edi]
  40d424:	sub    eax,0xb46c5fc
  40d429:	clc    
  40d42a:	jbe    0x40d427
  40d42c:	mov    ebx,0xb27be689
  40d431:	or     esp,eax
  40d433:	push   0x8
  40d435:	adc    DWORD PTR [edi+0x3f57c1cf],esi
  40d43b:	nop
  40d43c:	ret    0xaa9e
  40d43f:	xor    BYTE PTR [esi-0x7bb9aa62],dh
  40d445:	push   cs
  40d446:	cmp    eax,0x910e95d6
  40d44b:	sbb    BYTE PTR [edi],cl
  40d44d:	jg     0x40d48b
  40d44f:	imul   edx,DWORD PTR [esp+eax*4],0x8fde6375
  40d456:	or     ebx,eax
  40d458:	fisubr DWORD PTR [ebp-0x5c1be9a]
  40d45e:	js     0x40d4af
  40d460:	gs push esp
  40d462:	ror    DWORD PTR [ebx-0x7efc1913],1
  40d468:	xlat   BYTE PTR ds:[ebx]
  40d469:	mov    esi,DWORD PTR [edx-0x289f5b10]
  40d46f:	stc    
  40d470:	dec    esi
  40d471:	mov    ebp,0x72bf474d
  40d476:	(bad)  
  40d477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d478:	jmp    0xf851:0x70bfe4a3
  40d47f:	dec    ebx
  40d480:	lods   eax,DWORD PTR ds:[esi]
  40d481:	sub    DWORD PTR [ebp-0x4d],esi
  40d484:	add    DWORD PTR [ebx+0x1],edx
  40d487:	lods   eax,DWORD PTR ds:[esi]
  40d488:	xchg   edx,edi
  40d48a:	sbb    eax,DWORD PTR [eax+0x1faec2c6]
  40d490:	aam    0x55
  40d492:	sub    bl,al
  40d494:	push   cs
  40d495:	out    dx,eax
  40d496:	lods   al,BYTE PTR ds:[esi]
  40d497:	cmp    al,0x67
  40d499:	or     al,0xd0
  40d49b:	loopne 0x40d46d
  40d49d:	idiv   cl
  40d49f:	mov    eax,ds:0x2a97c42a
  40d4a4:	and    al,al
  40d4a6:	retf   
  40d4a7:	pusha  
  40d4a8:	push   ebp
  40d4a9:	pop    esi
  40d4aa:	adc    eax,0xd9912e5d
  40d4af:	sub    eax,0xb2cf95aa
  40d4b4:	loopne 0x40d4bd
  40d4b6:	retf   
  40d4b7:	jne    0x40d442
  40d4b9:	(bad)  
  40d4ba:	rol    BYTE PTR [ebp+0x1879ae47],cl
  40d4c0:	ja     0x40d48b
  40d4c2:	in     al,0x4b
  40d4c4:	mov    esi,0xdaddf91e
  40d4c9:	test   al,0x4c
  40d4cb:	lahf   
  40d4cc:	lds    esp,FWORD PTR [esi]
  40d4ce:	xchg   esi,eax
  40d4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4d0:	ins    BYTE PTR es:[edi],dx
  40d4d1:	cwde   
  40d4d2:	mov    al,ds:0x849e930d
  40d4d7:	es mov eax,0x32463d9
  40d4dd:	xchg   ebx,eax
  40d4de:	push   edi
  40d4df:	adc    al,0xe3
  40d4e1:	mov    ah,0xff
  40d4e3:	dec    edi
  40d4e4:	mov    ds:0x51ac127f,eax
  40d4e9:	div    dh
  40d4eb:	lods   al,BYTE PTR ds:[esi]
  40d4ec:	addr16 iret 
  40d4ee:	out    0xb5,al
  40d4f0:	or     edi,DWORD PTR [ebp+0x5b]
  40d4f3:	in     al,0xac
  40d4f5:	push   cs
  40d4f6:	xlat   BYTE PTR ds:[ebx]
  40d4f7:	js     0x40d548
  40d4f9:	mov    cl,BYTE PTR [ebx+0x21c24ced]
  40d4ff:	cld    
  40d500:	sub    ch,cl
  40d502:	dec    esi
  40d503:	pop    es
  40d504:	sbb    al,BYTE PTR [ebp+0x688e684]
  40d50a:	daa    
  40d50b:	bound  edx,QWORD PTR [edx-0x43]
  40d50e:	xchg   ebp,eax
  40d50f:	inc    edx
  40d510:	sbb    dh,0xe2
  40d513:	or     DWORD PTR [esi],ebp
  40d515:	xor    BYTE PTR [eax+eiz*8],0xea
  40d519:	mov    ds:0x952b9ed3,eax
  40d51e:	mov    eax,DWORD PTR [eax+0xa68efd9]
  40d524:	js     0x40d4a8
  40d526:	push   ecx
  40d527:	repnz mov WORD PTR [esi+0x12],ds
  40d52b:	adc    edx,DWORD PTR [edi-0x2c]
  40d52e:	mov    cl,0x3b
  40d530:	je     0x40d54f
  40d532:	xor    BYTE PTR [edx],ah
  40d534:	fdiv   DWORD PTR [edx]
  40d536:	add    cl,bl
  40d538:	jb     0x40d505
  40d53a:	or     esp,DWORD PTR [edx-0x8]
  40d53d:	aad    0x7a
  40d53f:	mov    dh,0xa5
  40d541:	iret   
  40d542:	mov    ?,WORD PTR [edx-0x3a]
  40d545:	loop   0x40d5c0
  40d547:	xor    ch,cl
  40d549:	add    al,0xc
  40d54b:	xchg   edi,eax
  40d54c:	cmp    ebx,DWORD PTR [eax+0x592caf0]
  40d552:	inc    edi
  40d553:	fbld   TBYTE PTR [esi-0x4e]
  40d556:	and    al,0x64
  40d558:	ret    
  40d559:	pop    esi
  40d55a:	adc    al,0x1
  40d55c:	adc    ebp,DWORD PTR [edx]
  40d55e:	fwait
  40d55f:	dec    edi
  40d560:	leave  
  40d561:	cdq    
  40d562:	xor    al,BYTE PTR [edx+edi*2]
  40d565:	(bad)  
  40d566:	repz jmp 0xb215:0xcfdd6d8f
  40d56e:	xchg   edx,eax
  40d56f:	fs xchg esi,eax
  40d571:	or     al,0x4f
  40d573:	les    ebx,FWORD PTR [edx-0x6c]
  40d576:	dec    ecx
  40d577:	fcomip st,st(7)
  40d579:	sbb    BYTE PTR [ebx+ebp*1+0x3a],dl
  40d57d:	push   ss
  40d57e:	pop    ss
  40d57f:	push   0x3e
  40d581:	cs ss dec esi
  40d584:	push   edx
  40d585:	popf   
  40d586:	aam    0xcd
  40d588:	cld    
  40d589:	ret    
  40d58a:	leave  
  40d58b:	mov    ecx,0x58292e8f
  40d590:	add    dh,BYTE PTR [eax+edx*4+0x3b]
  40d594:	mov    bh,0x55
  40d596:	pop    ebx
  40d597:	add    edx,edi
  40d599:	stos   BYTE PTR es:[edi],al
  40d59a:	inc    ebx
  40d59b:	xor    al,0x5a
  40d59d:	test   DWORD PTR [eax],esp
  40d59f:	js     0x40d559
  40d5a1:	jle    0x40d546
  40d5a3:	int    0x59
  40d5a5:	pop    ds
  40d5a6:	fisttp DWORD PTR [edi]
  40d5a8:	xlat   BYTE PTR ds:[ebx]
  40d5a9:	or     al,0x35
  40d5ab:	mov    bh,0xac
  40d5ad:	xchg   edi,eax
  40d5ae:	js     0x40d5f6
  40d5b0:	sub    esi,ecx
  40d5b2:	stc    
  40d5b3:	xchg   edx,eax
  40d5b4:	clc    
  40d5b5:	pusha  
  40d5b6:	fwait
  40d5b7:	mov    WORD PTR [ebp-0x62c59820],ss
  40d5bd:	xor    al,0x44
  40d5bf:	pop    ds
  40d5c0:	cmp    BYTE PTR [ecx],0x7b
  40d5c3:	clc    
  40d5c4:	inc    esp
  40d5c5:	inc    ebp
  40d5c6:	arpl   WORD PTR [eax+0x4d061b6],bx
  40d5cc:	xchg   ecx,eax
  40d5cd:	mov    esi,esp
  40d5cf:	sahf   
  40d5d0:	mov    ds:0xead66aa,al
  40d5d5:	aam    0xa8
  40d5d7:	(bad)  
  40d5d8:	push   esp
  40d5d9:	shr    edi,0x22
  40d5dc:	sub    al,0x76
  40d5de:	lods   eax,DWORD PTR ds:[esi]
  40d5df:	sub    BYTE PTR [edi+0x3b],ch
  40d5e2:	and    al,0x71
  40d5e4:	mov    al,0x63
  40d5e6:	imul   esi,DWORD PTR [ebx],0x92747e31
  40d5ec:	daa    
  40d5ed:	call   0x402cb0be
  40d5f2:	icebp  
  40d5f3:	adc    ebx,DWORD PTR [esi-0x4c]
  40d5f6:	hlt    
  40d5f7:	xchg   DWORD PTR [eax],edi
  40d5f9:	adc    BYTE PTR [ebp+0x22],cl
  40d5fc:	xchg   esp,eax
  40d5fd:	pop    ebx
  40d5fe:	dec    ecx
  40d5ff:	out    dx,eax
  40d600:	pop    esi
  40d601:	push   ss
  40d602:	add    ebx,DWORD PTR [edi+edi*4-0x59]
  40d606:	in     eax,dx
  40d607:	or     bl,BYTE PTR ds:0x969ea930
  40d60d:	(bad)  
  40d60f:	paddsb mm5,QWORD PTR [edx+0x6acc6cf2]
  40d616:	push   ds
  40d617:	fnstcw WORD PTR [edx-0x4ae18d2a]
  40d61d:	ret    
  40d61e:	pop    ebp
  40d61f:	cmp    BYTE PTR [esi+0xb03e3c6],al
  40d625:	sub    BYTE PTR [esi-0x4f],ch
  40d628:	call   0x165392f1
  40d62d:	sbb    BYTE PTR [edi-0x3a],0x85
  40d631:	or     DWORD PTR [edi],0x4215d1be
  40d637:	test   DWORD PTR [edi+esi*4-0x57b63a01],ebx
  40d63e:	inc    edi
  40d63f:	dec    ebx
  40d640:	add    DWORD PTR ss:[esp+ecx*1+0x55],ebp
  40d645:	jmp    0x40d6b5
  40d647:	loope  0x40d617
  40d649:	push   ecx
  40d64a:	(bad)  
  40d64b:	push   eax
  40d64c:	xlat   BYTE PTR ds:[ebx]
  40d64d:	push   0xe57a299f
  40d652:	sub    ecx,edi
  40d654:	pop    es
  40d655:	ds pop ecx
  40d657:	mov    ebx,0x6c3491f5
  40d65c:	in     al,0x3c
  40d65e:	dec    ecx
  40d65f:	outs   dx,DWORD PTR ds:[esi]
  40d660:	repnz add BYTE PTR [esi-0x69a041c7],dh
  40d667:	dec    ecx
  40d668:	mov    eax,ds:0xc628946f
  40d66d:	fidivr DWORD PTR [edx]
  40d66f:	jmp    0x6f36:0x6055d65d
  40d676:	ja     0x40d600
  40d678:	mov    BYTE PTR [ebp+0x2ed7dbf1],ah
  40d67e:	aas    
  40d67f:	ins    BYTE PTR es:[edi],dx
  40d680:	mov    eax,ebp
  40d682:	add    BYTE PTR [edx+0x2a],dh
  40d685:	sbb    DWORD PTR [ebp+0x20],esi
  40d688:	inc    ebx
  40d689:	mov    dh,0xa1
  40d68b:	pop    esp
  40d68c:	es je  0x40d685
  40d68f:	jle    0x40d6bd
  40d691:	and    eax,0x420e13f6
  40d696:	(bad)  
  40d697:	or     DWORD PTR [edx],ebx
  40d699:	jecxz  0x40d633
  40d69b:	je     0x40d6c9
  40d69d:	ficom  WORD PTR [ebp-0x923e9ce]
  40d6a3:	ss leave 
  40d6a5:	in     al,0xac
  40d6a7:	jle    0x40d727
  40d6a9:	aad    0x1
  40d6ab:	push   ecx
  40d6ac:	jae    0x40d638
  40d6ae:	cmp    dh,BYTE PTR [edi-0x51]
  40d6b1:	mov    edx,0xf58548a0
  40d6b6:	ror    DWORD PTR [edi-0x6e034674],cl
  40d6bc:	sub    BYTE PTR [eax],cl
  40d6be:	or     DWORD PTR [esi],0x49
  40d6c1:	pop    esp
  40d6c2:	inc    esi
  40d6c3:	mov    fs,WORD PTR [ebx+ecx*2-0x7c]
  40d6c7:	push   ebx
  40d6c8:	mov    bl,BYTE PTR [edx]
  40d6ca:	add    BYTE PTR [ebx-0x65],bh
  40d6cd:	xor    dh,BYTE PTR [esi]
  40d6cf:	fist   DWORD PTR [edx+edx*8]
  40d6d2:	ins    DWORD PTR es:[edi],dx
  40d6d3:	es hlt 
  40d6d5:	add    BYTE PTR [esi],al
  40d6d7:	(bad)  
  40d6d8:	retf   
  40d6d9:	pop    eax
  40d6da:	sub    ecx,DWORD PTR [esi+0x2a]
  40d6dd:	shr    DWORD PTR [ebp+0x68],cl
  40d6e0:	mov    DWORD PTR [eax-0x78],esi
  40d6e3:	fcmovbe st,st(2)
  40d6e5:	dec    eax
  40d6e6:	inc    ecx
  40d6e7:	adc    al,0x21
  40d6e9:	cmp    al,0xdf
  40d6eb:	(bad)  
  40d6ed:	xchg   ebp,eax
  40d6ee:	jecxz  0x40d721
  40d6f0:	and    dh,BYTE PTR [esi+0x22]
  40d6f3:	cli    
  40d6f4:	mov    al,0xc9
  40d6f6:	mov    bl,0x5a
  40d6f8:	xlat   BYTE PTR ds:[ebx]
  40d6f9:	mov    ebp,0x747f5b46
  40d6fe:	xchg   edi,eax
  40d6ff:	pop    esp
  40d700:	pop    ebx
  40d701:	dec    ecx
  40d702:	mov    ebx,0x4fb676f4
  40d707:	jmp    0x3e55:0x58d976c
  40d70e:	xchg   edi,eax
  40d70f:	jne    0x40d6b7
  40d711:	gs fwait
  40d713:	neg    DWORD PTR [ebx-0x769cb701]
  40d719:	lea    edi,[edx+0x6e835416]
  40d71f:	les    ecx,FWORD PTR [edi+ebp*8+0x64]
  40d723:	xchg   BYTE PTR [eax+0x51],ch
  40d726:	sbb    eax,0x94c20e74
  40d72b:	push   ebx
  40d72c:	shr    DWORD PTR [ebp-0x3f],cl
  40d72f:	(bad)  
  40d730:	jne    0x40d730
  40d732:	into   
  40d733:	pop    ds
  40d734:	inc    ebp
  40d735:	(bad)  
  40d736:	jmp    FWORD PTR [ebx]
  40d738:	sbb    al,0xc6
  40d73a:	fild   DWORD PTR [edx]
  40d73c:	inc    esp
  40d73d:	(bad)  
  40d73e:	scas   al,BYTE PTR es:[edi]
  40d73f:	test   BYTE PTR [esi+ecx*8-0x15],cl
  40d743:	pop    edx
  40d744:	lahf   
  40d745:	shr    dh,cl
  40d747:	dec    edx
  40d748:	jb     0x40d73f
  40d74a:	sbb    al,0x17
  40d74c:	dec    edi
  40d74d:	sbb    ebx,DWORD PTR [eax+0xf670fa1]
  40d753:	pop    edi
  40d754:	pop    es
  40d755:	rcr    BYTE PTR ds:0xa41efa06,cl
  40d75b:	mov    ss,WORD PTR [edx+0x71]
  40d75e:	add    al,BYTE PTR [edx-0x44986fb4]
  40d764:	call   0xe562f035
  40d769:	stc    
  40d76a:	jmp    DWORD PTR [esi+0x2c31e884]
  40d770:	ret    0x366c
  40d773:	bound  ebp,QWORD PTR [ebx-0x4a]
  40d776:	arpl   WORD PTR [eax],di
  40d778:	cmp    BYTE PTR [ebx],0x9c
  40d77b:	pop    edx
  40d77c:	imul   edx,DWORD PTR [esi+0x2b3c7c8a],0x62c39c29
  40d786:	push   0xbc5e14f3
  40d78b:	dec    ebp
  40d78c:	retf   0x34fc
  40d78f:	dec    ebx
  40d790:	arpl   WORD PTR [ebp+0x2c],sp
  40d793:	cmp    al,BYTE PTR [ebx+eiz*8-0x22]
  40d797:	in     eax,dx
  40d798:	inc    ebx
  40d799:	pop    esi
  40d79a:	dec    esp
  40d79b:	mul    DWORD PTR [esi-0x73524f77]
  40d7a1:	popa   
  40d7a2:	and    BYTE PTR [eax-0x25146607],cl
  40d7a8:	(bad)  
  40d7a9:	adc    cl,dh
  40d7ab:	jg     0x40d81b
  40d7ad:	pop    es
  40d7ae:	push   esp
  40d7af:	xchg   esi,eax
  40d7b0:	hlt    
  40d7b1:	xchg   ebx,eax
  40d7b2:	push   0xffffffb3
  40d7b4:	mov    eax,0x3c76814e
  40d7b9:	aaa    
  40d7ba:	dec    ebx
  40d7bb:	pop    es
  40d7bc:	lods   al,BYTE PTR ds:[esi]
  40d7bd:	call   0xf0bededc
  40d7c2:	add    BYTE PTR [eax-0x7914fac8],0x5b
  40d7c9:	test   DWORD PTR [ebp-0xc],esp
  40d7cc:	inc    esi
  40d7cd:	sub    BYTE PTR [esi-0x3bf63046],0xd5
  40d7d4:	mov    al,0x9a
  40d7d6:	mov    al,ds:0xf0948e33
  40d7db:	jb     0x40d843
  40d7dd:	push   es
  40d7de:	dec    edx
  40d7df:	adc    edx,DWORD PTR [ebp+0x36]
  40d7e2:	lods   al,BYTE PTR ds:[esi]
  40d7e3:	in     eax,0xd1
  40d7e5:	inc    ebx
  40d7e6:	pop    ss
  40d7e7:	xchg   esp,eax
  40d7e8:	xchg   esp,eax
  40d7e9:	push   eax
  40d7ea:	dec    edi
  40d7eb:	inc    ebp
  40d7ec:	cli    
  40d7ed:	sub    edx,edi
  40d7ef:	leave  
  40d7f0:	sahf   
  40d7f1:	jnp    0x40d7ed
  40d7f3:	xor    bl,BYTE PTR [edi+0x38]
  40d7f6:	retf   
  40d7f7:	sbb    BYTE PTR [eax+0x41],0x4f
  40d7fb:	mov    ch,0xd6
  40d7fd:	and    al,0x7a
  40d7ff:	jg     0x40d7fa
  40d801:	push   ds
  40d802:	int    0xa
  40d804:	bound  eax,QWORD PTR [esp+ebx*1]
  40d807:	rcr    DWORD PTR [ecx-0x32],cl
  40d80a:	retf   
  40d80b:	int3   
  40d80c:	xor    al,0x18
  40d80e:	push   ebx
  40d80f:	call   0x6d45:0x3123210
  40d816:	or     DWORD PTR [esi+0x2eae20d],esp
  40d81c:	or     eax,0xd4a2c9ce
  40d821:	test   bl,bh
  40d823:	shl    DWORD PTR [ecx],1
  40d825:	out    0xed,al
  40d827:	jmp    0x4a5dbcea
  40d82c:	jmp    0x40d7e8
  40d82e:	add    dl,BYTE PTR [edx-0x4e03fc0d]
  40d834:	add    edx,0x71ab9ec7
  40d83a:	jmp    0x40d7f4
  40d83c:	pop    ss
  40d83d:	fld    TBYTE PTR fs:[ebp+0x1e]
  40d841:	mov    esp,0xa3673486
  40d846:	adc    cl,BYTE PTR [ebx]
  40d848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d849:	fcomp  DWORD PTR [edx+0x67]
  40d84c:	loope  0x40d7f6
  40d84e:	or     DWORD PTR ds:0xd907c184,ecx
  40d854:	push   ss
  40d855:	cld    
  40d856:	xor    DWORD PTR [esi+esi*1+0x56],eax
  40d85a:	jae    0x40d882
  40d85c:	pop    ds
  40d85d:	inc    edi
  40d85e:	jmp    0xb1ab:0x1b56ab32
  40d865:	sbb    al,0x5d
  40d867:	jne    0x40d837
  40d869:	popa   
  40d86a:	and    eax,0x2a5bf73e
  40d86f:	pop    ecx
  40d870:	gs sbb dh,al
  40d873:	add    al,BYTE PTR [esi-0x3e387508]
  40d879:	and    DWORD PTR [esi-0x6b84c1fd],ecx
  40d87f:	int3   
  40d880:	out    dx,eax
  40d881:	fst    QWORD PTR [edx-0x406580e1]
  40d887:	js     0x40d858
  40d889:	cdq    
  40d88a:	int3   
  40d88b:	mov    al,ds:0x89ce1356
  40d890:	jne    0x40d8ad
  40d892:	push   ecx
  40d893:	call   0xcf636cb7
  40d898:	sbb    eax,0x7f861763
  40d89d:	and    ch,cl
  40d89f:	dec    eax
  40d8a0:	mov    ch,0x87
  40d8a2:	dec    eax
  40d8a3:	popf   
  40d8a4:	jle    0x40d88b
  40d8a6:	mov    eax,ds:0x861cef71
  40d8ab:	(bad)  
  40d8ac:	out    0x65,eax
  40d8ae:	cwde   
  40d8af:	jno    0x40d83f
  40d8b1:	(bad)  
  40d8b2:	jae    0x40d842
  40d8b4:	add    al,0xaa
  40d8b6:	frstor [eax-0x48]
  40d8b9:	fistp  QWORD PTR [ecx]
  40d8bb:	aaa    
  40d8bc:	ret    0xa92c
  40d8bf:	push   esp
  40d8c0:	fdivr  QWORD PTR [eax]
  40d8c2:	mov    al,ds:0xa2f9084b
  40d8c7:	pop    esi
  40d8c8:	xchg   edi,eax
  40d8c9:	adc    esi,DWORD PTR [eax-0x212285af]
  40d8cf:	xor    cl,BYTE PTR ds:0x8d4ba20
  40d8d5:	rcl    DWORD PTR [ecx-0x66],cl
  40d8d8:	add    edi,ecx
  40d8da:	inc    ebx
  40d8db:	or     DWORD PTR [ebp-0x10],ebx
  40d8de:	lods   al,BYTE PTR ds:[esi]
  40d8df:	(bad)  
  40d8e0:	shl    BYTE PTR [eax],0x8
  40d8e3:	lea    eax,[esi]
  40d8e5:	loopne 0x40d890
  40d8e7:	jge    0x40d905
  40d8e9:	jl     0x40d93d
  40d8eb:	jmp    0x1139631c
  40d8f0:	mov    cs,WORD PTR [ebp+0x17]
  40d8f3:	add    esp,DWORD PTR [eax-0x55]
  40d8f6:	loope  0x40d8ce
  40d8f8:	inc    ebp
  40d8f9:	loope  0x40d975
  40d8fb:	jg     0x40d91a
  40d8fd:	push   edx
  40d8fe:	xchg   edx,eax
  40d8ff:	aaa    
  40d900:	pop    esp
  40d901:	outs   dx,DWORD PTR ds:[esi]
  40d902:	mov    ds:0x494ba77d,al
  40d907:	push   eax
  40d908:	fiadd  DWORD PTR [ebx+0x714cfd8d]
  40d90e:	mov    ah,0x1b
  40d910:	sar    ah,cl
  40d912:	inc    ecx
  40d913:	sub    BYTE PTR [esi+0x4a5eb3fd],0xbe
  40d91a:	jno    0x40d8b5
  40d91c:	dec    ebx
  40d91d:	sti    
  40d91e:	pushf  
  40d91f:	jns    0x40d969
  40d921:	mov    esp,0xe6760a6f
  40d926:	arpl   WORD PTR [ecx+0x48],bx
  40d929:	shl    dh,1
  40d92b:	bound  ebx,QWORD PTR [edx-0x75]
  40d92e:	aam    0x7e
  40d930:	stc    
  40d931:	cmp    ah,BYTE PTR [eax-0x11]
  40d934:	xchg   esp,eax
  40d935:	push   eax
  40d936:	mov    al,ds:0x7979e17d
  40d93b:	outs   dx,BYTE PTR ds:[esi]
  40d93c:	fsubr  QWORD PTR [ebp-0x23f40102]
  40d942:	in     al,dx
  40d943:	mov    BYTE PTR [eax+0x60],bl
  40d946:	sub    dl,BYTE PTR [edx+eiz*4+0x5a]
  40d94a:	jmp    0xd32a:0xe0909ced
  40d951:	jne    0x40d93d
  40d953:	inc    dl
  40d955:	sub    bh,bl
  40d957:	pop    ebp
  40d958:	add    ebp,DWORD PTR [eax-0x52]
  40d95b:	fidivr DWORD PTR es:[ecx+0x7c5f3c0c]
  40d962:	js     0x40d911
  40d964:	xor    eax,0xe10b5ab7
  40d969:	jl     0x40d919
  40d96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d96c:	int    0x6d
  40d96e:	jg     0x40d9ef
  40d970:	sbb    ebp,DWORD PTR [edx]
  40d972:	and    eax,0xb7ed1d55
  40d977:	rcr    BYTE PTR [edi-0x20],cl
  40d97a:	je     0x40d9e5
  40d97c:	mov    bh,0x69
  40d97e:	(bad)  
  40d97f:	rol    BYTE PTR [ebp-0x6a],1
  40d982:	jbe    0x40d93b
  40d984:	push   esi
  40d985:	test   al,0xa6
  40d987:	out    0xb3,eax
  40d989:	sub    DWORD PTR [eax+0x3e],ebx
  40d98c:	sbb    DWORD PTR [ebx+0x27],edx
  40d98f:	inc    edx
  40d990:	jge    0x40d929
  40d992:	fdiv   st(4),st
  40d994:	test   al,0x20
  40d996:	out    dx,al
  40d997:	or     al,0x16
  40d999:	push   edx
  40d99a:	pop    es
  40d99b:	mov    edx,0xf2bfc85
  40d9a0:	or     DWORD PTR [ebx+0x62],esp
  40d9a3:	xchg   esi,eax
  40d9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a5:	cli    
  40d9a6:	add    edx,ebx
  40d9a8:	mov    ds:0xb8996669,al
  40d9ad:	loop   0x40d9f0
  40d9af:	les    ebx,FWORD PTR ds:[edi+0x75639d5a]
  40d9b6:	and    al,0xe9
  40d9b8:	mov    al,ds:0xa30e456f
  40d9bd:	mov    ch,0xef
  40d9bf:	int    0x79
  40d9c1:	pop    edi
  40d9c2:	sbb    eax,DWORD PTR [edi]
  40d9c4:	adc    DWORD PTR [edi],eax
  40d9c6:	push   0x3cd10db3
  40d9cb:	push   ss
  40d9cc:	in     al,0xe4
  40d9ce:	or     esp,DWORD PTR [edi+0x2e]
  40d9d1:	jnp    0x40da4e
  40d9d3:	mov    dl,0xf9
  40d9d5:	push   eax
  40d9d6:	iret   
  40d9d7:	fiadd  WORD PTR [ecx+0x65a48e4e]
  40d9dd:	leave  
  40d9de:	mov    ah,0x3d
  40d9e0:	bound  esp,QWORD PTR [ebx+esi*1+0x44027dfb]
  40d9e7:	push   0x2f
  40d9e9:	(bad)  
  40d9ea:	and    al,0x44
  40d9ec:	repz pop edx
  40d9ee:	or     dl,ah
  40d9f0:	xchg   BYTE PTR [ecx-0xffd6ba5],bl
  40d9f6:	stos   BYTE PTR es:[edi],al
  40d9f7:	iret   
  40d9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f9:	and    ah,BYTE PTR [eax-0x63cec8e6]
  40d9ff:	popa   
  40da00:	cmp    DWORD PTR [ebx+0x2a660bdb],edi
  40da06:	push   ss
  40da07:	les    ebx,FWORD PTR [esi-0x4dd04b60]
  40da0d:	sub    DWORD PTR [edi-0x2e0c215],edx
  40da13:	push   es
  40da14:	mov    eax,ds:0x2f784cbc
  40da19:	pop    esp
  40da1a:	(bad)  
  40da1c:	dec    eax
  40da1d:	in     eax,dx
  40da1e:	mov    dl,0x7e
  40da20:	gs or  al,0xe1
  40da23:	lds    ebx,FWORD PTR [edx+0x27128eb0]
  40da29:	test   eax,0x2f8d2959
  40da2e:	push   es
  40da2f:	mov    dh,0xbc
  40da31:	mov    al,ds:0x1a03c19a
  40da36:	shr    DWORD PTR [eax+esi*1+0x56d26065],1
  40da3d:	mov    ah,0xba
  40da3f:	fwait
  40da40:	and    al,0x56
  40da42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da43:	add    eax,eax
  40da45:	fstp   TBYTE PTR [esp+ebx*2-0x5b]
  40da49:	mov    eax,ds:0xe01b3398
  40da4e:	or     BYTE PTR [edx+0x4032f93],dh
  40da54:	fild   QWORD PTR [edx]
  40da56:	mov    DWORD PTR [eax+0x43b2c718],edi
  40da5c:	jae    0x40da58
  40da5e:	mov    DWORD PTR es:[ebp-0x79],ebp
  40da62:	add    al,0x42
  40da64:	xchg   ecx,eax
  40da65:	or     ah,BYTE PTR [ebx-0x5d]
  40da68:	xchg   edi,eax
  40da69:	adc    eax,0x8fb77d9b
  40da6e:	push   ds
  40da6f:	or     BYTE PTR [ebp+ecx*2+0x93fa52],ah
  40da76:	scas   eax,DWORD PTR es:[edi]
  40da77:	aaa    
  40da78:	add    esp,eax
  40da7a:	add    edi,DWORD PTR [edi-0x69]
  40da7d:	dec    esi
  40da7e:	push   esp
  40da7f:	mov    eax,0x7eecdc9e
  40da84:	daa    
  40da85:	fdivr  QWORD PTR [esi-0x57840a70]
  40da8b:	loop   0x40da9d
  40da8d:	das    
  40da8e:	test   al,0x12
  40da90:	je     0x40dabb
  40da92:	xor    esi,edx
  40da94:	int3   
  40da95:	jne    0x40daa1
  40da97:	repz pusha 
  40da99:	cmp    esp,edx
  40da9b:	es retf 0x1935
  40da9f:	test   eax,esi
  40daa1:	aas    
  40daa2:	ins    BYTE PTR es:[edi],dx
  40daa3:	fisubr WORD PTR [edx-0x31]
  40daa6:	sub    cl,cl
  40daa8:	repnz xor al,0x2e
  40daab:	sub    BYTE PTR [edx+ebx*2+0x24],bh
  40daaf:	xor    DWORD PTR [edx+0x64],ecx
  40dab2:	repnz dec ch
  40dab5:	imul   edx,DWORD PTR [edx],0x34dd5599
  40dabb:	aam    0x63
  40dabd:	adc    edi,DWORD PTR [edx-0xc77941e]
  40dac3:	fs aad 0xe8
  40dac6:	cli    
  40dac7:	stc    
  40dac8:	aam    0xf3
  40daca:	mov    bh,0x75
  40dacc:	loopne 0x40db33
  40dace:	shl    dh,cl
  40dad0:	shr    DWORD PTR [edx+0x4a],cl
  40dad3:	inc    ebx
  40dad4:	inc    ecx
  40dad5:	scas   al,BYTE PTR es:[edi]
  40dad6:	push   ebx
  40dad7:	or     ebx,DWORD PTR [edx-0x37]
  40dada:	inc    edi
  40dadb:	aas    
  40dadc:	add    DWORD PTR ds:0x320a4933,edx
  40dae2:	mov    ds:0x4f706af8,eax
  40dae7:	nop
  40dae8:	sbb    cl,dh
  40daea:	and    BYTE PTR [edx-0x4873f2c9],al
  40daf0:	cld    
  40daf1:	jg     0x40dab0
  40daf3:	leave  
  40daf4:	mov    ds:0xad7cb8b2,eax
  40daf9:	push   es
  40dafa:	cs (bad) 
  40dafd:	or     BYTE PTR [ecx+0x627ea5f0],bl
  40db03:	fsin   
  40db05:	int3   
  40db06:	add    al,0xdd
  40db08:	std    
  40db09:	and    eax,0x19f5c8ae
  40db0e:	mov    ebp,0x6e4c7370
  40db13:	test   al,0xb4
  40db15:	popa   
  40db16:	out    0x99,al
  40db18:	sub    dh,ah
  40db1a:	cmp    edi,DWORD PTR [ebx+0x35]
  40db1d:	loope  0x40daf7
  40db1f:	(bad)  
  40db20:	imul   edi,ecx,0x51
  40db23:	sbb    DWORD PTR [ebx+0x26],edx
  40db26:	aas    
  40db27:	add    ch,BYTE PTR [esi+0x6d]
  40db2a:	repz sbb bl,BYTE PTR [edx+edi*2-0x36917567]
  40db32:	xor    BYTE PTR [ebx-0x41],ch
  40db35:	mov    ebx,0xfe49af47
  40db3a:	jmp    0xfbaa:0xa6a70e3c
  40db41:	test   edi,edx
  40db43:	iret   
  40db44:	pop    esp
  40db45:	ret    0xb97b
  40db48:	jecxz  0x40dad5
  40db4a:	push   ebx
  40db4b:	popf   
  40db4c:	cld    
  40db4d:	shl    DWORD PTR [ecx+0x5ef412d5],1
  40db53:	jmp    0x9f12b37c
  40db58:	sti    
  40db59:	push   ds
  40db5a:	xor    eax,0xa4d70244
  40db5f:	lea    ebx,[eax]
  40db61:	add    dh,BYTE PTR [edi-0x7151cc68]
  40db67:	sub    cl,BYTE PTR [edi+0x14]
  40db6a:	jb     0x40db75
  40db6c:	cli    
  40db6d:	mov    eax,ds:0x6207f25b
  40db72:	push   edx
  40db73:	xchg   esi,eax
  40db74:	jbe    0x40db89
  40db76:	jne    0x40db86
  40db78:	scas   eax,DWORD PTR es:[edi]
  40db79:	xchg   ecx,eax
  40db7a:	(bad)  
  40db7b:	jmp    0x1b7a:0xab0c69de
  40db82:	sti    
  40db83:	or     cl,BYTE PTR [ebx-0x18e5ad7f]
  40db89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db8a:	xor    BYTE PTR [esi-0xa],ch
  40db8d:	mov    ds:0x429928c2,al
  40db92:	sbb    eax,0x128727b8
  40db97:	or     ch,bh
  40db99:	add    eax,esi
  40db9b:	(bad)  
  40db9c:	(bad)  
  40db9d:	in     al,0x20
  40db9f:	pop    ebp
  40dba0:	test   BYTE PTR [edx+eax*4-0x50e419fc],dl
  40dba7:	enter  0x774,0x21
  40dbab:	aas    
  40dbac:	in     eax,0xf3
  40dbae:	mov    DWORD PTR [edx-0x15],ebp
  40dbb1:	and    eax,0x2695dabb
  40dbb6:	bound  eax,QWORD PTR [eax+ecx*1+0x26]
  40dbba:	xchg   BYTE PTR [ebx],cl
  40dbbc:	lods   eax,DWORD PTR ds:[esi]
  40dbbd:	jbe    0x40dbb4
  40dbbf:	in     eax,dx
  40dbc0:	out    dx,al
  40dbc1:	xchg   edx,eax
  40dbc2:	adc    dl,BYTE PTR [eax]
  40dbc4:	std    
  40dbc5:	pop    edx
  40dbc6:	lods   al,BYTE PTR ds:[esi]
  40dbc7:	dec    ecx
  40dbc8:	xor    BYTE PTR [ebx],cl
  40dbca:	das    
  40dbcb:	sub    DWORD PTR [esp+edi*8],esp
  40dbce:	ficom  DWORD PTR [esi+0x6a]
  40dbd1:	pop    esp
  40dbd2:	pop    ecx
  40dbd3:	sub    esp,DWORD PTR [edx]
  40dbd5:	or     bl,BYTE PTR [eax]
  40dbd7:	xor    cl,ch
  40dbd9:	and    al,0x68
  40dbdb:	xchg   esi,eax
  40dbdc:	loop   0x40dbc6
  40dbde:	push   ds
  40dbdf:	xor    BYTE PTR [esi+0x1a],0x77
  40dbe3:	scas   al,BYTE PTR es:[edi]
  40dbe4:	adc    ecx,DWORD PTR ds:0x962dc7de
  40dbea:	inc    edi
  40dbeb:	daa    
  40dbec:	pushf  
  40dbed:	mov    dh,0xab
  40dbef:	cmp    al,0x2e
  40dbf1:	call   0x7b449aac
  40dbf6:	mov    dh,0x35
  40dbf8:	and    eax,0xe0f9adce
  40dbfd:	cmp    bl,BYTE PTR [ebx+edi*2-0x45]
  40dc01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc02:	inc    esi
  40dc03:	(bad)  
  40dc04:	in     eax,dx
  40dc05:	and    eax,0xea3ed001
  40dc0a:	clc    
  40dc0b:	jns    0x40dc01
  40dc0d:	xchg   edx,eax
  40dc0e:	shr    DWORD PTR [edi+0xe],0x5d
  40dc12:	sbb    bl,BYTE PTR [ebx+0x5d]
  40dc15:	inc    edx
  40dc16:	(bad)  
  40dc17:	adc    BYTE PTR [edx+0x67676ab8],bl
  40dc1d:	(bad)  
  40dc1e:	sub    DWORD PTR [ecx-0x537cc49e],ecx
  40dc24:	sub    DWORD PTR ds:0x76d99a1d,edx
  40dc2a:	add    DWORD PTR [ebx-0x67074837],esi
  40dc30:	add    ecx,DWORD PTR [eax]
  40dc32:	arpl   WORD PTR [edx-0x122b4fef],dx
  40dc38:	push   0xffa3917d
  40dc3d:	out    dx,eax
  40dc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc3f:	test   eax,0x598c654b
  40dc44:	fild   QWORD PTR [esi-0x27]
  40dc47:	inc    esi
  40dc48:	fwait
  40dc49:	push   ds
  40dc4a:	fwait
  40dc4b:	pop    esi
  40dc4c:	inc    esp
  40dc4d:	pushf  
  40dc4e:	jbe    0x40dc73
  40dc50:	add    DWORD PTR [edi-0x1d],edi
  40dc53:	xor    BYTE PTR [edi+0x3d8d5cd6],bl
  40dc59:	es or  edx,ecx
  40dc5c:	repnz loop 0x40dbee
  40dc5f:	test   BYTE PTR ds:0x5d4dde31,cl
  40dc65:	leave  
  40dc66:	sub    esp,DWORD PTR [edx+0x19]
  40dc69:	mov    ds:0x36ff63c0,al
  40dc6e:	mov    bl,0x35
  40dc70:	rol    BYTE PTR [edx],1
  40dc72:	test   DWORD PTR [ecx],edi
  40dc74:	mov    cl,BYTE PTR [edi]
  40dc76:	stc    
  40dc77:	mov    bh,0x52
  40dc79:	push   esi
  40dc7a:	inc    edx
  40dc7b:	dec    edx
  40dc7c:	pop    ebp
  40dc7d:	or     BYTE PTR [ebx+ecx*2],0xd8
  40dc81:	lods   al,BYTE PTR ds:[esi]
  40dc82:	sbb    al,0xd4
  40dc84:	inc    eax
  40dc85:	mov    ebx,0x964a02d
  40dc8a:	sahf   
  40dc8b:	sbb    ebx,DWORD PTR [edi+edi*2+0x3c]
  40dc8f:	mov    ebx,0x5c91a765
  40dc94:	popa   
  40dc95:	cdq    
  40dc96:	push   esp
  40dc97:	out    dx,al
  40dc98:	ret    0xfd3e
  40dc9b:	gs jo  0x40dca5
  40dc9e:	push   ds
  40dc9f:	mov    ebp,0xf7f11fd6
  40dca4:	or     dl,BYTE PTR [eax]
  40dca6:	xchg   ebx,eax
  40dca7:	jecxz  0x40dd0c
  40dca9:	cld    
  40dcaa:	cmp    ebp,ebx
  40dcac:	push   0x1
  40dcae:	test   BYTE PTR [edi+0x21],ah
  40dcb1:	data16 int3 
  40dcb3:	cli    
  40dcb4:	sbb    DWORD PTR [esp+edi*1],ebp
  40dcb7:	push   eax
  40dcb8:	mov    dh,0xf1
  40dcba:	cmp    DWORD PTR [ebp+0x7a],0xffffff92
  40dcbe:	scas   eax,DWORD PTR es:[edi]
  40dcbf:	jb     0x40dd19
  40dcc1:	retf   0x31d2
  40dcc4:	out    0x44,eax
  40dcc6:	push   cs
  40dcc7:	jl     0x40dd23
  40dcc9:	icebp  
  40dcca:	test   BYTE PTR [edi],dl
  40dccc:	ja     0x40dcfe
  40dcce:	pop    esp
  40dccf:	push   ebx
  40dcd0:	mov    esp,0x7238791d
  40dcd5:	sbb    edi,ebp
  40dcd7:	fldcw  WORD PTR [ecx]
  40dcd9:	mov    ebp,0xff9d9091
  40dcde:	or     WORD PTR [eax-0x4a1459c8],si
  40dce5:	stc    
  40dce6:	addr16 push ss
  40dce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce9:	sbb    al,0x10
  40dceb:	out    dx,al
  40dcec:	leave  
  40dced:	cmp    esp,DWORD PTR [eax]
  40dcef:	jecxz  0x40dcee
  40dcf1:	cdq    
  40dcf2:	shl    DWORD PTR [ecx+ecx*1-0x27],1
  40dcf6:	push   0xba418a13
  40dcfb:	jno    0x40dd0c
  40dcfd:	fsub   DWORD PTR [ecx]
  40dcff:	das    
  40dd00:	mov    ebx,0xd43598bc
  40dd05:	cmc    
  40dd06:	scas   al,BYTE PTR es:[edi]
  40dd07:	sub    eax,0x1c12be71
  40dd0c:	sbb    ah,dh
  40dd0e:	int    0xe6
  40dd10:	xchg   esi,eax
  40dd11:	mov    eax,ds:0x1f13bf37
  40dd16:	inc    eax
  40dd17:	je     0x40dcdf
  40dd19:	jl     0x40dd1f
  40dd1b:	cmp    BYTE PTR [edi-0x35],dh
  40dd1e:	mov    DWORD PTR [ebp+0x23],0x504e9260
  40dd25:	sub    al,0xfe
  40dd27:	pop    edx
  40dd28:	xlat   BYTE PTR ds:[ebx]
  40dd29:	bnd jbe 0x40dda3
  40dd2c:	sbb    DWORD PTR ds:0x7b5e79de,ebx
  40dd32:	jmp    0x40dd10
  40dd34:	ss retf 
  40dd36:	pop    eax
  40dd37:	sti    
  40dd38:	fcomp  QWORD PTR [eax]
  40dd3a:	mov    ds:0x74d454d7,eax
  40dd3f:	scas   eax,DWORD PTR es:[edi]
  40dd40:	daa    
  40dd41:	scas   eax,DWORD PTR es:[edi]
  40dd42:	adc    ebx,DWORD PTR [ebp-0xd]
  40dd45:	jge    0x40dd39
  40dd47:	sub    al,bl
  40dd49:	sbb    al,BYTE PTR [edx+ecx*2+0x54ca4a77]
  40dd50:	lea    ebx,[edx+0x67600e99]
  40dd56:	jecxz  0x40dd21
  40dd58:	add    BYTE PTR [ecx+ebx*8-0x6c],ah
  40dd5c:	mov    fs,edi
  40dd5e:	mov    ebx,0x34139229
  40dd63:	cmp    ah,dh
  40dd65:	adc    cl,BYTE PTR [edi-0x6a]
  40dd68:	fcomp  QWORD PTR ds:[ebx]
  40dd6b:	out    0x3b,eax
  40dd6d:	scas   eax,DWORD PTR es:[edi]
  40dd6e:	push   edi
  40dd6f:	dec    esi
  40dd70:	mov    al,0x75
  40dd72:	adc    esp,DWORD PTR [eax+0x7ee4731f]
  40dd78:	in     al,dx
  40dd79:	ja     0x40dd70
  40dd7b:	add    ebp,eax
  40dd7d:	test   eax,0x8977efbe
  40dd82:	popf   
  40dd83:	inc    ebx
  40dd84:	rcl    BYTE PTR [ecx-0x153d6982],1
  40dd8a:	pop    ecx
  40dd8b:	int3   
  40dd8c:	xor    edx,edi
  40dd8e:	into   
  40dd8f:	push   ebp
  40dd90:	push   cs
  40dd91:	rcr    DWORD PTR [ecx],cl
  40dd93:	add    BYTE PTR [edx-0x55f35585],bh
  40dd99:	outs   dx,BYTE PTR ds:[esi]
  40dd9a:	xchg   edx,eax
  40dd9b:	pop    esp
  40dd9c:	je     0x40dd5b
  40dd9e:	cdq    
  40dd9f:	sub    BYTE PTR [esi+ebp*2],cl
  40dda2:	fadd   QWORD PTR [eax]
  40dda4:	stos   BYTE PTR es:[edi],al
  40dda5:	push   ss
  40dda6:	mov    ebp,0xa4cbe427
  40ddab:	mov    ch,0xad
  40ddad:	push   ebx
  40ddae:	aad    0x75
  40ddb0:	mul    DWORD PTR [edi]
  40ddb2:	sbb    ah,dl
  40ddb4:	adc    DWORD PTR [edi-0x16],0x13
  40ddb8:	and    BYTE PTR [bx-0xe],ah
  40ddbc:	loop   0x40dd60
  40ddbe:	and    al,0xa9
  40ddc0:	scas   al,BYTE PTR es:[edi]
  40ddc1:	inc    esp
  40ddc2:	jge    0x40de43
  40ddc4:	jl     0x40de30
  40ddc6:	jg     0x40dd90
  40ddc8:	int3   
  40ddc9:	(bad)  
  40ddca:	mov    bl,0xb1
  40ddcc:	jmp    0xfa6c:0x4ad52a4d
  40ddd3:	std    
  40ddd4:	add    BYTE PTR [ebx],0x25
  40ddd7:	xchg   esp,eax
  40ddd8:	lds    esi,FWORD PTR [edi+0x34]
  40dddb:	or     ch,ah
  40dddd:	stc    
  40ddde:	dec    esp
  40dddf:	xchg   BYTE PTR [edi+0x7083d31c],dl
  40dde5:	jb     0x40ddcc
  40dde7:	xchg   edx,eax
  40dde8:	fsub   DWORD PTR [esi]
  40ddea:	scas   eax,DWORD PTR es:[edi]
  40ddeb:	mov    esi,0xf01a9418
  40ddf0:	popf   
  40ddf1:	push   0xe14b5971
  40ddf6:	jmp    0x8f5c:0x29d9f0d7
  40ddfd:	and    BYTE PTR [edx+0x38c2f566],dl
  40de03:	pop    ebx
  40de04:	and    DWORD PTR ds:[esi],ebp
  40de07:	push   ebx
  40de08:	and    dl,al
  40de0a:	xchg   esi,eax
  40de0b:	and    DWORD PTR [edi-0x4b28d341],edx
  40de11:	push   es
  40de12:	(bad)  
  40de14:	inc    edx
  40de15:	fwait
  40de16:	sbb    al,0x91
  40de18:	sbb    BYTE PTR [esi],dh
  40de1a:	pop    ebx
  40de1b:	cdq    
  40de1c:	sahf   
  40de1d:	push   esp
  40de1e:	repnz sub al,0xc0
  40de21:	push   ss
  40de22:	adc    al,0x47
  40de24:	leave  
  40de25:	pop    ecx
  40de26:	addr16 mov al,ds:0xf529
  40de2a:	mov    ds:0xfefd5055,eax
  40de2f:	xchg   ecx,eax
  40de30:	sub    ecx,esp
  40de32:	jg     0x40de6b
  40de34:	in     al,dx
  40de35:	nop
  40de36:	jmp    0x48f0fdf3
  40de3b:	pushf  
  40de3c:	adc    al,0x36
  40de3e:	push   cs
  40de3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de40:	pop    ebx
  40de41:	sti    
  40de42:	and    DWORD PTR ds:0x44746663,esi
  40de48:	push   ebx
  40de49:	js     0x40de7b
  40de4b:	loopne 0x40dde4
  40de4d:	loope  0x40deab
  40de4f:	push   es
  40de50:	add    eax,edi
  40de52:	mov    bl,0x6d
  40de54:	loopne 0x40ddf1
  40de56:	sub    BYTE PTR [ecx+0x35e37533],bl
  40de5c:	mov    ah,0x9f
  40de5e:	adc    eax,DWORD PTR [ebp-0xc]
  40de61:	imul   esi,eax,0x84047827
  40de67:	lock push DWORD PTR [eax-0x323df746]
  40de6e:	xchg   esp,eax
  40de6f:	dec    edx
  40de70:	rcl    dh,0xe6
  40de73:	std    
  40de74:	clc    
  40de75:	push   ss
  40de76:	ds sbb ah,cl
  40de79:	mov    eax,ds:0x5f2c6e58
  40de7e:	pop    ds
  40de7f:	mov    edi,0xb8f384b9
  40de84:	add    al,0xc6
  40de86:	mov    eax,ds:0xd816c89c
  40de8b:	adc    cl,BYTE PTR [edx-0x5eae359b]
  40de91:	fidivr DWORD PTR [edi-0x42]
  40de94:	repnz fwait
  40de96:	pop    es
  40de97:	icebp  
  40de98:	scas   al,BYTE PTR es:[edi]
  40de99:	mov    WORD PTR [ebx-0x1f],?
  40de9c:	test   ch,0xc7
  40de9f:	mov    ds:0xff465447,al
  40dea4:	mov    dh,0x4d
  40dea6:	inc    esp
  40dea7:	cld    
  40dea8:	aam    0xf2
  40deaa:	jae    0x40deb8
  40deac:	es mov bh,0x5
  40deaf:	inc    ebp
  40deb0:	sahf   
  40deb1:	jge    0x40df20
  40deb3:	inc    esi
  40deb4:	cs adc cl,ah
  40deb7:	mov    esi,0x374d194d
  40debc:	aad    0xd4
  40debe:	cmc    
  40debf:	push   ebp
  40dec0:	cli    
  40dec1:	mov    dh,0xfc
  40dec3:	jae    0x40dec9
  40dec5:	jmp    0x40def8
  40dec7:	inc    ebp
  40dec8:	pop    es
  40dec9:	cmc    
  40deca:	sahf   
  40decb:	push   cs
  40decc:	dec    esi
  40decd:	mov    edi,0x41c8db1c
  40ded2:	push   0x75b6da45
  40ded7:	jb     0x40de9e
  40ded9:	in     al,0xf0
  40dedb:	jl     0x40df3f
  40dedd:	ss jb  0x40df35
  40dee0:	jae    0x40de77
  40dee2:	cmp    al,0x8d
  40dee4:	mov    eax,ds:0xfbe3095b
  40dee9:	cli    
  40deea:	or     DWORD PTR [ebp-0xa06097b],ecx
  40def0:	call   0x2b1b:0xba52d72a
  40def7:	push   eax
  40def8:	push   ebx
  40def9:	cdq    
  40defa:	ins    BYTE PTR es:[edi],dx
  40defb:	pop    ss
  40defc:	bound  esp,QWORD PTR [edi+ebx*8]
  40deff:	inc    ecx
  40df00:	cmp    DWORD PTR [esi-0x33],edx
  40df03:	push   0x25749411
  40df08:	xchg   ebx,eax
  40df09:	je     0x40de8c
  40df0b:	jg     0x40defe
  40df0d:	int    0xd9
  40df0f:	xchg   ebp,eax
  40df10:	icebp  
  40df11:	and    eax,edi
  40df13:	mov    esi,0x3c263383
  40df18:	test   al,0x3a
  40df1a:	push   ebp
  40df1b:	les    ecx,FWORD PTR [ecx-0x19]
  40df1e:	clc    
  40df1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df20:	dec    edx
  40df21:	cwde   
  40df22:	lods   eax,DWORD PTR ds:[esi]
  40df23:	pop    ebx
  40df24:	addr16 repnz mov ch,0xd
  40df28:	and    bh,BYTE PTR [esi-0xf071806]
  40df2e:	imul   esp
  40df30:	pop    es
  40df31:	or     eax,0xf462b0b8
  40df36:	add    al,0x20
  40df38:	inc    ebx
  40df39:	cmp    dh,BYTE PTR [esi+0x49]
  40df3c:	sbb    DWORD PTR [esi],ecx
  40df3e:	lods   al,BYTE PTR ds:[esi]
  40df3f:	icebp  
  40df40:	xor    ebx,esi
  40df42:	cmc    
  40df43:	mov    ds:0x91431988,al
  40df48:	inc    edi
  40df49:	sbb    BYTE PTR [eax+eax*2+0x2b65ef52],bh
  40df50:	clc    
  40df51:	mov    esp,DWORD PTR [ecx-0x9]
  40df54:	imul   eax,ebp,0x99e033df
  40df5a:	inc    ecx
  40df5b:	push   0xffffffb8
  40df5d:	(bad)  
  40df5e:	cmp    eax,0x8485e0c2
  40df63:	pop    ecx
  40df64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df65:	or     BYTE PTR gs:[esp+edx*4],bl
  40df69:	mov    ebx,0x309edde8
  40df6e:	bound  esi,QWORD PTR [eax]
  40df70:	rol    DWORD PTR [ecx-0xa],0xc8
  40df74:	test   DWORD PTR [esi],ecx
  40df76:	and    eax,edi
  40df78:	pusha  
  40df79:	fidiv  WORD PTR [ecx+0x2]
  40df7c:	xor    esi,esp
  40df7e:	sti    
  40df7f:	(bad)
  40df82:	add    bh,BYTE PTR [ecx+0x2a]
  40df85:	clc    
  40df86:	sbb    eax,0x4d9d6fc2
  40df8b:	pop    ss
  40df8c:	sahf   
  40df8d:	cdq    
  40df8e:	je     0x40df92
  40df90:	repz inc esp
  40df92:	cli    
  40df93:	daa    
  40df94:	retf   0xddbd
  40df97:	ins    BYTE PTR es:[edi],dx
  40df98:	add    DWORD PTR [ecx-0x60],eax
  40df9b:	mov    DWORD PTR [ebx+esi*2-0x5e],0xdf2a9fa4
  40dfa3:	xor    al,0xca
  40dfa5:	jbe    0x40e01a
  40dfa7:	pop    ss
  40dfa8:	lea    esi,[edi+0x4a]
  40dfab:	push   cs
  40dfac:	inc    edi
  40dfad:	fst    QWORD PTR [eax+0x50703999]
  40dfb3:	xchg   DWORD PTR [esi],ebp
  40dfb5:	fwait
  40dfb6:	jae    0x40df42
  40dfb8:	(bad)  
  40dfb9:	mov    al,ds:0x94984148
  40dfbe:	xchg   ecx,eax
  40dfbf:	inc    eax
  40dfc0:	xchg   DWORD PTR [ebp-0x70],ebx
  40dfc3:	ins    BYTE PTR es:[edi],dx
  40dfc4:	push   0xffffff86
  40dfc6:	push   ss
  40dfc7:	jb     0x40e03f
  40dfc9:	cdq    
  40dfca:	cmp    DWORD PTR [ebx-0x73],esi
  40dfcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfce:	push   edi
  40dfcf:	jne    0x40dfbc
  40dfd1:	arpl   WORD PTR [edx+0xc],bp
  40dfd4:	add    al,0xed
  40dfd6:	xchg   ebp,eax
  40dfd7:	fcomp  DWORD PTR [edx]
  40dfd9:	push   ds
  40dfda:	mov    WORD PTR [ecx+edx*2],?
  40dfdd:	into   
  40dfde:	bound  eax,QWORD PTR [eax]
  40dfe0:	push   cs
  40dfe1:	sahf   
  40dfe2:	inc    edi
  40dfe3:	jle    0x40dfa2
  40dfe5:	xor    esi,DWORD PTR ds:0xe83839b2
  40dfeb:	cmp    al,0x31
  40dfed:	sub    BYTE PTR [ebx],ah
  40dfef:	inc    esi
  40dff0:	mov    eax,0x889b20b9
  40dff5:	fxch   st(0)
  40dff7:	mov    ebx,0xecb223f4
  40dffc:	lahf   
  40dffd:	lea    esp,[eax+0x18e3b4c4]
  40e003:	popf   
  40e004:	cmp    DWORD PTR [eax+eax*2],0x675cdf90
  40e00b:	call   0xc4cc3191
  40e010:	xchg   esp,eax
  40e011:	add    al,bl
  40e013:	cld    
  40e014:	mov    edi,0x7813252
  40e019:	idiv   ecx
  40e01b:	mov    eax,ds:0x69a8de6
  40e020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e021:	pop    ss
  40e022:	pop    edi
  40e023:	sbb    ebx,eax
  40e025:	xor    DWORD PTR [edi+edi*4+0xc3c07d9],esi
  40e02c:	popa   
  40e02d:	mov    eax,0x1cf265
  40e032:	and    esi,DWORD PTR [ebx+0x23]
  40e035:	es push esi
  40e037:	retf   
  40e038:	pusha  
  40e039:	sub    al,0x5
  40e03b:	out    0xf,eax
  40e03d:	jmp    0x6fd8:0x9b5bfc7a
  40e044:	data16 hlt 
  40e046:	test   al,0x34
  40e048:	jne    0x40e00e
  40e04a:	pop    esi
  40e04b:	(bad)  
  40e04c:	out    0xfc,al
  40e04e:	dec    esi
  40e04f:	xor    eax,0xa02f8d71
  40e054:	push   0x3c40165d
  40e059:	pop    ss
  40e05a:	xlat   BYTE PTR ds:[ebx]
  40e05b:	stos   DWORD PTR es:[edi],eax
  40e05c:	ret    
  40e05d:	mov    ds,WORD PTR ds:0x739137b6
  40e063:	and    DWORD PTR [eax-0x71],ebp
  40e066:	pop    eax
  40e067:	imul   eax,edx,0xc98e3f02
  40e06d:	or     bl,BYTE PTR [eax+0x10e2d761]
  40e073:	loope  0x40e0d8
  40e075:	mov    ebp,0x6b663a47
  40e07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e07b:	adc    eax,ecx
  40e07d:	shl    DWORD PTR [ebx+esi*8],1
  40e080:	das    
  40e081:	jno    0x40e003
  40e083:	cli    
  40e084:	add    BYTE PTR [eax-0x76242526],ch
  40e08a:	mov    al,0xae
  40e08c:	adc    ah,BYTE PTR [ebx+0x74]
  40e08f:	scas   eax,DWORD PTR es:[edi]
  40e090:	push   cs
  40e091:	gs inc ecx
  40e093:	out    0x1d,al
  40e095:	dec    esi
  40e096:	pop    eax
  40e097:	test   al,0x3c
  40e099:	lock scas al,BYTE PTR es:[edi]
  40e09b:	push   ebx
  40e09c:	inc    edi
  40e09d:	mov    dh,0x19
  40e09f:	jmp    0x40e08a
  40e0a1:	dec    eax
  40e0a2:	je     0x40e054
  40e0a4:	dec    eax
  40e0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a6:	xchg   ebx,eax
  40e0a7:	inc    ecx
  40e0a8:	or     BYTE PTR [edx+0x73967a58],bh
  40e0ae:	sub    eax,0x9e9d9903
  40e0b3:	xchg   edi,eax
  40e0b4:	xchg   esi,eax
  40e0b5:	sub    cl,BYTE PTR [esp+edx*1]
  40e0b8:	mov    BYTE PTR [edi-0x7b1c9c6],dl
  40e0be:	pop    ebp
  40e0bf:	sti    
  40e0c0:	sub    dl,BYTE PTR [ebx-0x16]
  40e0c3:	stos   BYTE PTR es:[edi],al
  40e0c4:	add    bl,bh
  40e0c6:	pushf  
  40e0c7:	mov    esp,DWORD PTR [edx-0x634458ba]
  40e0cd:	mov    es,WORD PTR [ebx]
  40e0cf:	mov    dl,0xfa
  40e0d1:	mov    ecx,0x459e2f24
  40e0d6:	shr    BYTE PTR [esi+ebp*2+0x61],1
  40e0da:	ret    
  40e0db:	pop    ecx
  40e0dc:	mov    ch,0x36
  40e0de:	ret    
  40e0df:	ret    0xf0fb
  40e0e2:	xchg   edx,eax
  40e0e3:	in     al,0xb1
  40e0e5:	icebp  
  40e0e6:	clc    
  40e0e7:	jge    0x40e146
  40e0e9:	mov    edi,0xdd44d7e2
  40e0ee:	jge    0x40e11a
  40e0f0:	and    DWORD PTR [edx+0x31],edx
  40e0f3:	ficomp WORD PTR ds:[ecx-0x145867f4]
  40e0fa:	fcmove st,st(2)
  40e0fc:	mov    ax,0xb49
  40e100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e101:	adc    dl,BYTE PTR [edx+0x66]
  40e104:	sbb    al,0xa0
  40e106:	adc    DWORD PTR [edx],ebp
  40e108:	fld    DWORD PTR [ecx]
  40e10a:	and    ch,BYTE PTR [esi+0x59a4b9e4]
  40e110:	out    0xb7,al
  40e112:	add    BYTE PTR [ebp+0x7],bl
  40e115:	dec    edi
  40e116:	hlt    
  40e117:	xchg   edi,eax
  40e118:	outs   dx,DWORD PTR ds:[esi]
  40e119:	sub    edx,DWORD PTR [eax+0x62]
  40e11c:	add    BYTE PTR [edi+0x2c],dl
  40e11f:	(bad)  
  40e120:	retf   
  40e121:	daa    
  40e122:	xchg   BYTE PTR [esi+0x6d],bh
  40e125:	push   ebx
  40e126:	jbe    0x40e128
  40e128:	stos   DWORD PTR es:[edi],eax
  40e129:	ja     0x40e0b0
  40e12b:	sbb    edx,edi
  40e12d:	pusha  
  40e12e:	lea    ebp,[ecx]
  40e130:	mov    cl,0xcb
  40e132:	idiv   BYTE PTR [esi+ebp*2]
  40e135:	push   edx
  40e136:	xchg   ebp,eax
  40e137:	xlat   BYTE PTR ds:[ebx]
  40e138:	or     eax,0x9b81504b
  40e13d:	adc    eax,ebp
  40e13f:	pop    edx
  40e140:	call   FWORD PTR [edx-0x6f]
  40e143:	ss scas al,BYTE PTR es:[edi]
  40e145:	fistp  WORD PTR [ebp+edx*1+0xa]
  40e149:	das    
  40e14a:	pop    esi
  40e14b:	xor    BYTE PTR [ebx+0x5db953bb],ch
  40e151:	adc    bl,BYTE PTR [ebx]
  40e153:	push   edi
  40e154:	rcl    DWORD PTR [edi],0x51
  40e157:	scas   al,BYTE PTR es:[edi]
  40e158:	hlt    
  40e159:	or     eax,0xee66cd1e
  40e15e:	ror    cl,0x37
  40e161:	mov    ebx,0xeecfe6e6
  40e166:	ss mov cl,0xbc
  40e169:	in     al,0x98
  40e16b:	jnp    0x40e1b5
  40e16d:	or     eax,0x583a619e
  40e172:	pop    edi
  40e173:	stc    
  40e174:	xchg   ecx,eax
  40e175:	loopne 0x40e1a4
  40e177:	div    esi
  40e179:	outs   dx,BYTE PTR ds:[esi]
  40e17a:	and    eax,0xdcb0a1cf
  40e17f:	jae    0x40e1cd
  40e181:	dec    edi
  40e182:	out    dx,al
  40e183:	ds dec esp
  40e185:	inc    ebp
  40e186:	imul   esi,DWORD PTR [eax-0x21d6721e],0x8fcc6ff6
  40e190:	aaa    
  40e191:	out    dx,eax
  40e192:	lea    esi,[ebx]
  40e194:	add    edx,DWORD PTR [esi+0x538edffc]
  40e19a:	addr16 or ebx,ebx
  40e19d:	sub    eax,0x66f3d399
  40e1a2:	jp     0x40e144
  40e1a4:	mov    edx,0xfd7d9205
  40e1a9:	dec    ecx
  40e1aa:	push   es
  40e1ab:	dec    edx
  40e1ac:	ret    
  40e1ad:	aad    0x30
  40e1af:	mov    bl,0x7f
  40e1b1:	mov    bh,BYTE PTR [ecx-0x4ffe53b4]
  40e1b7:	adc    eax,ecx
  40e1b9:	fnstenv [ebx+0x19]
  40e1bc:	xor    BYTE PTR [edi+ebp*2+0x1b9bac86],cl
  40e1c3:	iret   
  40e1c4:	lahf   
  40e1c5:	stc    
  40e1c6:	cmp    bh,BYTE PTR [eax-0x12142dbf]
  40e1cc:	or     eax,0x46c57061
  40e1d1:	push   ebp
  40e1d2:	inc    edi
  40e1d3:	neg    BYTE PTR [edi-0x7d]
  40e1d6:	cmp    ecx,esp
  40e1d8:	and    BYTE PTR [edi],al
  40e1da:	sbb    eax,0x94914162
  40e1df:	fwait
  40e1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e1:	into   
  40e1e2:	(bad)  [edx+0x38c86b4f]
  40e1e8:	fsub   st,st(7)
  40e1ea:	or     BYTE PTR [ecx-0xc24a16d],cl
  40e1f0:	pop    ebx
  40e1f1:	mov    DWORD PTR [esi],esi
  40e1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f4:	cmp    eax,0x59c340b6
  40e1f9:	inc    ecx
  40e1fa:	add    bl,BYTE PTR [ecx*8+0x7a649fae]
  40e201:	jo     0x40e25c
  40e203:	fsubr  QWORD PTR [eax-0x14]
  40e206:	fst    QWORD PTR [edi+0x13efcc69]
  40e20c:	aam    0x2
  40e20e:	ss adc eax,0xca641cb5
  40e214:	mov    eax,ds:0x284c612f
  40e219:	int    0x2f
  40e21b:	xchg   esi,eax
  40e21c:	imul   ecx,DWORD PTR [edi],0x15b8ca32
  40e222:	scas   eax,DWORD PTR es:[edi]
  40e223:	js     0x40e1c5
  40e225:	jbe    0x40e272
  40e227:	mov    eax,0x213adf7c
  40e22c:	add    ch,BYTE PTR [eax]
  40e22e:	les    ebx,FWORD PTR [esi]
  40e230:	test   eax,0xfcf4d738
  40e235:	adc    eax,0xeea94e48
  40e23a:	ds stos DWORD PTR es:[edi],eax
  40e23c:	cdq    
  40e23d:	retf   0xde02
  40e240:	popa   
  40e241:	pop    es
  40e242:	jg     0x40e244
  40e244:	dec    edi
  40e245:	jae    0x40e256
  40e247:	or     BYTE PTR [ecx+0x50d67ea2],0x45
  40e24e:	xor    bl,BYTE PTR [ebx+ebp*1+0x8]
  40e252:	xor    al,0xda
  40e254:	aas    
  40e255:	or     al,0x49
  40e257:	xchg   DWORD PTR [edi-0x7e],ecx
  40e25a:	xchg   esp,eax
  40e25b:	mov    esi,0xd85c56bc
  40e260:	add    eax,0x31b5318
  40e265:	aas    
  40e266:	shl    bh,0x19
  40e269:	nop
  40e26a:	xor    BYTE PTR [edx+ebx*2-0x53],dh
  40e26e:	iret   
  40e26f:	and    eax,DWORD PTR [eax+ecx*8-0x5]
  40e273:	pushf  
  40e274:	push   cs
  40e275:	mov    ecx,0x57656ba0
  40e27a:	xlat   BYTE PTR ds:[ebx]
  40e27b:	rcr    BYTE PTR [ecx+0x31],1
  40e27e:	(bad)  
  40e27f:	not    DWORD PTR [ecx+0xa541c5f]
  40e285:	test   DWORD PTR [ebp+0x64d7e8ce],esi
  40e28b:	ret    0x2bc6
  40e28e:	ss (bad) 
  40e290:	push   cs
  40e291:	and    BYTE PTR [ebp-0x688b8365],dl
  40e297:	mov    bl,BYTE PTR [eax+eax*4+0x3e]
  40e29b:	outs   dx,BYTE PTR ds:[esi]
  40e29c:	shl    cl,1
  40e29e:	cmp    cl,BYTE PTR [esi+eax*2-0x54b30d93]
  40e2a5:	fisttp QWORD PTR [ebx]
  40e2a7:	push   edx
  40e2a8:	ror    BYTE PTR [eax+0x27],0x5a
  40e2ac:	dec    esi
  40e2ad:	push   esp
  40e2ae:	inc    ebx
  40e2af:	jne    0x40e30e
  40e2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2b2:	daa    
  40e2b3:	mov    eax,0x991e3a64
  40e2b8:	sub    BYTE PTR [ecx-0x80],cl
  40e2bb:	jmp    0x40e33c
  40e2bd:	lahf   
  40e2be:	in     al,0xb8
  40e2c0:	pop    esp
  40e2c1:	sub    DWORD PTR [eax-0x58],ebx
  40e2c4:	push   ds
  40e2c5:	push   0x2b727718
  40e2ca:	dec    ebx
  40e2cb:	mov    edi,0x43c57af2
  40e2d0:	fmul   DWORD PTR [eax-0x32e8f0f0]
  40e2d6:	dec    ecx
  40e2d7:	aas    
  40e2d8:	clc    
  40e2d9:	sub    BYTE PTR [ebx+0x56fcdf4b],ch
  40e2df:	addr16 cwde 
  40e2e1:	or     eax,0x8dde23e7
  40e2e6:	push   ebp
  40e2e7:	int3   
  40e2e8:	mov    dh,0x98
  40e2ea:	mov    edx,0x3ca84439
  40e2ef:	lds    ebx,FWORD PTR [edi+0x2f]
  40e2f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2f3:	outs   dx,BYTE PTR ds:[esi]
  40e2f4:	and    al,0x43
  40e2f6:	inc    edx
  40e2f7:	inc    ecx
  40e2f8:	xchg   edi,eax
  40e2f9:	icebp  
  40e2fa:	shr    ecx,cl
  40e2fc:	aaa    
  40e2fd:	lock call FWORD PTR [esi-0x6426b990]
  40e304:	test   DWORD PTR [esi],ebx
  40e306:	xchg   cl,cl
  40e308:	mov    ss,WORD PTR [esi+ebx*2-0x48]
  40e30c:	dec    eax
  40e30d:	push   ecx
  40e30e:	xor    bh,BYTE PTR [edx]
  40e310:	nop
  40e311:	cmp    esi,0x80ef643b
  40e317:	mov    al,0xba
  40e319:	and    dl,BYTE PTR [ebx]
  40e31b:	xor    bh,dh
  40e31d:	out    dx,eax
  40e31e:	ins    BYTE PTR es:[edi],dx
  40e31f:	loop   0x40e2c0
  40e321:	xor    DWORD PTR [ebp+0x72],0x4ec70ec1
  40e328:	call   0x2378:0xf3c2d730
  40e32f:	les    edx,FWORD PTR [esi+0x39]
  40e332:	and    al,0x7b
  40e334:	out    dx,eax
  40e335:	add    DWORD PTR [ecx+ebp*8],esi
  40e338:	clc    
  40e339:	or     BYTE PTR [ecx],ch
  40e33b:	pop    ecx
  40e33c:	jmp    0x8e8e:0xada9cb8d
  40e343:	not    BYTE PTR [ebp+edx*1+0x23c2006]
  40e34a:	test   BYTE PTR [ebp-0x3a],cl
  40e34d:	data16 cli 
  40e34f:	repz lock inc esi
  40e352:	jle    0x40e2f4
  40e354:	clc    
  40e355:	add    eax,0xc5352066
  40e35a:	mov    ch,0x4c
  40e35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e35d:	into   
  40e35e:	aaa    
  40e35f:	xchg   ebx,eax
  40e360:	xchg   esi,eax
  40e361:	mov    esi,0xf9de86d2
  40e366:	and    bl,BYTE PTR [ebx-0x7963690]
  40e36c:	and    DWORD PTR [ebx],ebp
  40e36e:	dec    esi
  40e36f:	arpl   bp,sp
  40e371:	push   ecx
  40e372:	imul   ecx,DWORD PTR [ebp+eax*8-0x2299133a],0xfac87a89
  40e37d:	fst    DWORD PTR [ebp-0x7d98f919]
  40e383:	dec    esi
  40e384:	jnp    0x40e3f4
  40e386:	out    0x71,al
  40e388:	inc    ecx
  40e389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e38a:	mov    eax,0xd454c9bf
  40e38f:	sbb    BYTE PTR [ebx+0x49],ch
  40e392:	imul   esi,esi,0x3dbf3bfe
  40e398:	loope  0x40e35c
  40e39a:	mov    dl,0xca
  40e39c:	fwait
  40e39d:	into   
  40e39e:	in     eax,0x10
  40e3a0:	lds    eax,FWORD PTR cs:[ebp+0x443f10d9]
  40e3a7:	loopne 0x40e41a
  40e3a9:	in     eax,dx
  40e3aa:	jnp    0x40e336
  40e3ac:	mov    eax,DWORD PTR [bp+si+0x53]
  40e3b0:	mov    DWORD PTR [edx+0x2a],edi
  40e3b3:	arpl   WORD PTR [ebp+0x7f946c90],bx
  40e3b9:	out    dx,al
  40e3ba:	add    DWORD PTR [edi+0x1c21f7cc],esp
  40e3c0:	std    
  40e3c1:	ret    
  40e3c2:	xor    DWORD PTR [bx+di+0x1e6b],0xe0b6e3c
  40e3cb:	mov    ds:0x3763e56a,eax
  40e3d0:	retf   0x4459
  40e3d3:	into   
  40e3d4:	mov    ecx,0x2c09c2c
  40e3d9:	pop    ds
  40e3da:	ror    BYTE PTR [edx],cl
  40e3dc:	leave  
  40e3dd:	push   ds
  40e3de:	inc    ebx
  40e3df:	adc    edx,DWORD PTR [esi-0x5ee86f36]
  40e3e5:	jns    0x40e3ac
  40e3e7:	mov    cl,0xe7
  40e3e9:	jge    0x40e3b4
  40e3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ec:	or     esi,edx
  40e3ee:	int3   
  40e3ef:	inc    ebp
  40e3f0:	fild   WORD PTR [ecx+0xedd3389]
  40e3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3f7:	mov    eax,0x5c384901
  40e3fc:	push   ecx
  40e3fd:	mov    bh,BYTE PTR [edx]
  40e3ff:	push   eax
  40e400:	ins    DWORD PTR es:[edi],dx
  40e401:	test   edi,edi
  40e403:	test   eax,0x7254379f
  40e408:	inc    ebx
  40e409:	dec    esi
  40e40a:	cmp    bh,ah
  40e40c:	fdiv   DWORD PTR [ebx+ecx*4+0x5c]
  40e410:	fcmove st,st(1)
  40e412:	(bad)  
  40e413:	mov    ecx,0x99dc8aa8
  40e418:	or     al,0xa4
  40e41a:	mov    bl,0x9d
  40e41c:	cmp    al,0x6c
  40e41e:	jmp    0x40e462
  40e420:	sub    bl,dl
  40e422:	loope  0x40e483
  40e424:	pop    ss
  40e425:	dec    edi
  40e426:	ror    BYTE PTR [esi-0x14],0x7
  40e42a:	pop    esp
  40e42b:	test   DWORD PTR [edx],0xb1f2e81f
  40e431:	ja     0x40e3e9
  40e433:	dec    edx
  40e434:	fldenv [edi+0xd]
  40e437:	dec    ebx
  40e438:	adc    BYTE PTR [esi],bh
  40e43a:	jbe    0x40e47e
  40e43c:	jbe    0x40e3dd
  40e43e:	pop    esi
  40e43f:	dec    eax
  40e440:	outs   dx,DWORD PTR ds:[esi]
  40e441:	sub    DWORD PTR [ecx+ebx*8],ecx
  40e444:	stc    
  40e445:	mov    esi,0x746797c2
  40e44a:	jmp    0x3c24:0xcb5f4f9
  40e451:	iret   
  40e452:	pop    edx
  40e453:	dec    ebx
  40e454:	pop    es
  40e455:	loop   0x40e446
  40e457:	cmp    eax,0xa14b3f98
  40e45c:	jo     0x40e475
  40e45e:	rcr    BYTE PTR [eax],0x18
  40e461:	push   0x4b
  40e463:	mov    al,ds:0xdf270b15
  40e468:	xor    eax,DWORD PTR [ecx+0x5b]
  40e46b:	sbb    BYTE PTR [ecx-0x3f],cl
  40e46e:	mov    bl,ah
  40e470:	int    0x3b
  40e472:	mov    dl,0xe7
  40e474:	(bad)  
  40e475:	dec    edx
  40e476:	test   al,0xfd
  40e478:	in     al,dx
  40e479:	cli    
  40e47a:	xor    BYTE PTR [edi+0x682271ba],dl
  40e480:	inc    ebx
  40e481:	imul   DWORD PTR [ecx-0x3fef865f]
  40e487:	adc    eax,0x7dabf0fd
  40e48c:	push   esp
  40e48d:	imul   ebx,DWORD PTR [ecx+ecx*4-0x1f],0xbf9f5a
  40e495:	push   es
  40e496:	dec    esp
  40e497:	pusha  
  40e498:	shl    cl,1
  40e49a:	pop    esi
  40e49b:	jecxz  0x40e464
  40e49d:	adc    DWORD PTR [eax-0x517c16fd],ebp
  40e4a3:	test   DWORD PTR [edi+0x4f8609aa],ecx
  40e4a9:	(bad)  
  40e4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ab:	sub    BYTE PTR [ecx+eax*1-0x48],al
  40e4af:	xor    BYTE PTR [esi],0xe4
  40e4b2:	scas   eax,DWORD PTR es:[edi]
  40e4b3:	dec    edx
  40e4b4:	outs   dx,DWORD PTR ds:[esi]
  40e4b5:	pop    ss
  40e4b6:	rol    BYTE PTR [ecx],cl
  40e4b8:	xchg   esp,eax
  40e4b9:	push   0xe1f8a1d0
  40e4be:	cdq    
  40e4bf:	aad    0xd6
  40e4c1:	cld    
  40e4c2:	xchg   edx,eax
  40e4c3:	fs pop eax
  40e4c5:	les    edx,FWORD PTR [eax-0x77d91486]
  40e4cb:	jl     0x40e53f
  40e4cd:	dec    ebp
  40e4ce:	xor    BYTE PTR [eax+0x3453ebdc],dl
  40e4d4:	dec    ebx
  40e4d5:	cmp    al,0x7
  40e4d7:	jns    0x40e4c9
  40e4d9:	xor    al,0xc0
  40e4dc:	sar    BYTE PTR ds:0xe8d251d4,cl
  40e4e2:	jge    0x40e4bd
  40e4e4:	dec    esp
  40e4e5:	or     BYTE PTR [ebp+0x7e],al
  40e4e8:	add    al,0x56
  40e4ea:	mov    ebx,DWORD PTR ds:0x9baf5b4b
  40e4f0:	xchg   ecx,eax
  40e4f1:	xchg   DWORD PTR [eiz*8-0x2333960d],ebp
  40e4f8:	inc    ecx
  40e4f9:	scas   eax,DWORD PTR es:[edi]
  40e4fa:	inc    eax
  40e4fb:	inc    edx
  40e4fc:	mov    WORD PTR [esi],ss
  40e4fe:	push   0x1
  40e500:	inc    ecx
  40e501:	jecxz  0x40e569
  40e503:	sub    BYTE PTR [edi-0x52],0x19
  40e507:	push   ebx
  40e508:	or     BYTE PTR [ecx],ah
  40e50a:	(bad)  
  40e50b:	inc    ebx
  40e50c:	stc    
  40e50d:	les    ecx,FWORD PTR [edi]
  40e50f:	xchg   DWORD PTR [ecx-0x55ea077d],ecx
  40e515:	test   al,0x6b
  40e517:	in     eax,dx
  40e518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e519:	jne    0x40e556
  40e51b:	mov    BYTE PTR [ebp+0x40abdac],dl
  40e521:	inc    eax
  40e522:	nop
  40e523:	push   0xffffff8b
  40e525:	lock mov edi,0xc66da36d
  40e52b:	test   DWORD PTR [esi],0xec3aa0bf
  40e531:	or     dl,BYTE PTR [ebx]
  40e533:	out    dx,eax
  40e534:	push   edi
  40e535:	sbb    BYTE PTR [esi+0x7ca73eb6],ch
  40e53b:	outs   dx,BYTE PTR ds:[esi]
  40e53c:	pop    ss
  40e53d:	xor    DWORD PTR [edx-0x6a],edi
  40e540:	mov    es,ebx
  40e542:	xor    eax,0x6e12870b
  40e547:	shl    DWORD PTR [esi],cl
  40e549:	push   ss
  40e54a:	jbe    0x40e573
  40e54c:	mov    edi,es
  40e54e:	mov    dh,0x46
  40e550:	jae    0x40e54f
  40e552:	push   cs
  40e553:	push   0xb77a806e
  40e558:	add    ecx,ebp
  40e55a:	fisubr DWORD PTR [edx]
  40e55c:	pop    edx
  40e55d:	lahf   
  40e55e:	inc    edi
  40e55f:	adc    edx,DWORD PTR [esi+edx*4+0x7123d8ea]
  40e566:	mov    al,ds:0xe473c946
  40e56b:	cs push es
  40e56d:	xor    DWORD PTR [ecx],edi
  40e56f:	dec    ecx
  40e570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e571:	mov    ah,al
  40e573:	sub    eax,0xc89f481a
  40e578:	iret   
  40e579:	jmp    0xbc610e4d
  40e57e:	pop    edx
  40e57f:	mov    edx,0x432c6bf9
  40e584:	adc    bl,dh
  40e586:	lahf   
  40e587:	pop    ds
  40e588:	mov    ecx,0xb2082c6b
  40e58d:	addr16 mov bl,0x96
  40e590:	cli    
  40e591:	ss inc ecx
  40e593:	ficom  WORD PTR [ebx]
  40e595:	dec    ebp
  40e596:	lds    esi,FWORD PTR [ebp+0x77561d17]
  40e59c:	leave  
  40e59d:	add    al,0xfd
  40e59f:	ret    
  40e5a0:	add    al,0xbf
  40e5a2:	test   cl,dh
  40e5a4:	jp     0x40e56d
  40e5a6:	cmp    eax,0xc547389c
  40e5ab:	mov    cl,0xf2
  40e5ad:	or     eax,0xdee3d5d9
  40e5b2:	mov    ds:0xecaa65b6,eax
  40e5b7:	cmovs  esp,DWORD PTR [edx+0x3e]
  40e5bb:	jne    0x40e638
  40e5bd:	clc    
  40e5be:	jl     0x40e613
  40e5c0:	aam    0xa3
  40e5c2:	mov    ebp,0xb5f2c279
  40e5c7:	dec    ebx
  40e5c8:	mov    ch,dl
  40e5ca:	pop    ds
  40e5cb:	call   0xafbb616a
  40e5d0:	fisub  WORD PTR [ebx-0x33]
  40e5d3:	xchg   DWORD PTR [edi+0x4d],ebx
  40e5d6:	rcr    DWORD PTR [eax-0x551c8624],0x7d
  40e5dd:	sub    esp,ecx
  40e5df:	mov    ebp,ebx
  40e5e1:	dec    esp
  40e5e2:	or     eax,0xe1bf3061
  40e5e7:	dec    edi
  40e5e8:	mov    ch,0xa9
  40e5ea:	sub    BYTE PTR [eax+0x4a7592b6],cl
  40e5f0:	jno    0x40e61b
  40e5f2:	pushf  
  40e5f3:	shl    DWORD PTR [ebx],0x44
  40e5f6:	adc    al,0xd2
  40e5f8:	sub    eax,0x707ff2e5
  40e5fd:	mov    esp,DWORD PTR [eax-0x11df23c2]
  40e603:	fistp  DWORD PTR [eax+0x29]
  40e606:	adc    cl,ch
  40e608:	push   0x426990ce
  40e60d:	in     al,dx
  40e60e:	lahf   
  40e60f:	in     eax,dx
  40e610:	test   DWORD PTR [edi+0x33],ebp
  40e613:	shl    esp,0xd
  40e616:	mov    al,0x84
  40e618:	sub    esi,esi
  40e61a:	repz xchg ebp,eax
  40e61c:	scas   al,BYTE PTR es:[edi]
  40e61d:	mov    bl,0xe7
  40e61f:	jae    0x40e62c
  40e621:	fdiv   QWORD PTR [ecx+edx*2-0x20]
  40e625:	(bad)  
  40e626:	pop    esp
  40e627:	pop    ebp
  40e628:	fisttp WORD PTR [ebp-0x58c58fbf]
  40e62e:	lea    esi,[esp+ecx*8-0x70]
  40e632:	jmp    0x40e668
  40e634:	ins    BYTE PTR es:[edi],dx
  40e635:	mov    al,ds:0x395d77f0
  40e63a:	push   ebx
  40e63b:	push   esp
  40e63c:	inc    BYTE PTR [ebx]
  40e63e:	pushf  
  40e63f:	test   BYTE PTR [eax+0x1c],dl
  40e642:	pop    ds
  40e643:	js     0x40e6a2
  40e645:	gs ret 
  40e647:	mov    ebx,0xfcf53c4c
  40e64c:	xor    al,0xf7
  40e64e:	mov    ebx,0x7cd35536
  40e653:	mov    ecx,0x42f8e41d
  40e658:	ror    BYTE PTR [ecx+0x3f],0x79
  40e65c:	in     eax,0x52
  40e65e:	and    BYTE PTR es:[edx-0x4d],0x4c
  40e663:	jae    0x40e60d
  40e665:	lods   eax,DWORD PTR ds:[esi]
  40e666:	cld    
  40e667:	mov    esi,DWORD PTR [edx-0x196cf245]
  40e66d:	int    0xce
  40e66f:	cli    
  40e670:	pop    ss
  40e671:	mov    dh,BYTE PTR [esi]
  40e673:	xor    BYTE PTR ds:0x16cff3f,dh
  40e679:	loopne 0x40e659
  40e67b:	pop    esp
  40e67c:	and    eax,0x2897de41
  40e681:	ret    0x91cc
  40e684:	test   eax,0x7a2ff32c
  40e689:	xchg   DWORD PTR [eax+0x58],edi
  40e68c:	int    0xa4
  40e68e:	adc    eax,0x20399871
  40e693:	pop    ss
  40e694:	mov    cl,0x42
  40e696:	push   ss
  40e697:	pop    esi
  40e698:	test   cl,dh
  40e69a:	adc    eax,DWORD PTR [ebx-0x2e]
  40e69d:	sub    BYTE PTR [edx],ch
  40e69f:	stc    
  40e6a0:	sbb    eax,0xb0fa7d8f
  40e6a5:	es scas al,BYTE PTR es:[edi]
  40e6a7:	out    0xc6,al
  40e6a9:	push   ss
  40e6aa:	or     BYTE PTR [edx-0x4d],ch
  40e6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ae:	cmp    eax,esi
  40e6b0:	out    dx,al
  40e6b1:	icebp  
  40e6b2:	xchg   DWORD PTR cs:[ecx-0x4e],edi
  40e6b6:	sbb    BYTE PTR [esi+0x57],ch
  40e6b9:	xlat   BYTE PTR ds:[ebx]
  40e6ba:	pop    ecx
  40e6bb:	jecxz  0x40e6d2
  40e6bd:	je     0x40e6d5
  40e6bf:	or     DWORD PTR [ecx],esp
  40e6c1:	sbb    DWORD PTR [eax],edi
  40e6c3:	lds    ebp,FWORD PTR [esp+esi*2]
  40e6c6:	cli    
  40e6c7:	loopne 0x40e6b1
  40e6c9:	out    dx,al
  40e6ca:	movaps xmm6,XMMWORD PTR [esi+0x4d1dc61b]
  40e6d1:	repz mov cl,0x53
  40e6d4:	pop    ecx
  40e6d5:	stos   BYTE PTR es:[edi],al
  40e6d6:	outs   dx,BYTE PTR ds:[esi]
  40e6d7:	push   es
  40e6d8:	add    esi,eax
  40e6da:	push   edi
  40e6db:	sub    dl,BYTE PTR [edi-0xfb56dd2]
  40e6e1:	inc    eax
  40e6e2:	mov    bl,0xdf
  40e6e4:	jg     0x40e74f
  40e6e6:	js     0x40e750
  40e6e8:	imul   edi,edx,0xcece71e4
  40e6ee:	or     ebx,DWORD PTR [ebp+0x40]
  40e6f1:	or     BYTE PTR [ecx-0x42],bl
  40e6f4:	or     al,0x81
  40e6f6:	hlt    
  40e6f7:	mov    edi,0x15ef8a08
  40e6fc:	push   ebx
  40e6fd:	pop    ecx
  40e6fe:	or     DWORD PTR [ebp+0x3f],edx
  40e701:	push   edi
  40e702:	adc    DWORD PTR [ebp+0x28],0x7bc2594c
  40e709:	push   es
  40e70a:	adc    eax,0xd3368cfa
  40e70f:	nop
  40e710:	jae    0x40e748
  40e712:	pop    eax
  40e713:	pop    esi
  40e714:	mov    bl,0x5
  40e716:	ins    BYTE PTR es:[edi],dx
  40e717:	inc    edi
  40e718:	dec    eax
  40e719:	cwde   
  40e71a:	int3   
  40e71b:	pushf  
  40e71c:	mov    esp,ecx
  40e71e:	xchg   ebp,eax
  40e71f:	cmp    BYTE PTR ds:0x53ab36d0,bl
  40e725:	into   
  40e726:	jmp    0xa514:0x5d9a3888
  40e72d:	into   
  40e72e:	jg     0x40e764
  40e730:	js     0x40e79c
  40e732:	pusha  
  40e733:	(bad)  
  40e734:	pop    edi
  40e735:	sbb    eax,0x819d8e18
  40e73a:	sub    DWORD PTR [esi+edx*2-0x476fb41c],0x3f
  40e742:	shl    dh,cl
  40e744:	es std 
  40e746:	inc    ecx
  40e747:	jno    0x40e6db
  40e749:	call   0xb54b672c
  40e74e:	push   ebp
  40e74f:	in     al,dx
  40e750:	lahf   
  40e751:	push   esi
  40e752:	test   BYTE PTR [edx+0x3e],0x7
  40e756:	(bad)  
  40e757:	cmp    eax,0xd7f00737
  40e75c:	inc    edi
  40e75d:	dec    eax
  40e75e:	aam    0x7b
  40e760:	imul   eax,DWORD PTR [ebp+0x46],0xdf950756
  40e767:	(bad)  
  40e768:	cs and eax,0xf9aeb49
  40e76e:	sahf   
  40e76f:	lods   al,BYTE PTR ds:[esi]
  40e770:	outs   dx,BYTE PTR ds:[esi]
  40e771:	xchg   ebx,eax
  40e772:	and    esi,DWORD PTR [edi-0x8]
  40e775:	loope  0x40e744
  40e777:	push   ecx
  40e778:	push   ebx
  40e779:	shl    BYTE PTR [ebp-0x79d3c6cb],0xb9
  40e780:	push   esi
  40e781:	loope  0x40e716
  40e783:	in     eax,dx
  40e784:	push   esi
  40e785:	fimul  DWORD PTR [edi-0x54]
  40e788:	pop    ds
  40e789:	xor    al,0x32
  40e78b:	loope  0x40e775
  40e78d:	fisub  DWORD PTR [eax+0x710706aa]
  40e793:	imul   ebp,DWORD PTR [esi+0xdd3a80a],0xffffff9e
  40e79a:	stos   BYTE PTR es:[edi],al
  40e79b:	cli    
  40e79c:	mov    WORD PTR [ebp-0x22],ds
  40e79f:	mov    ah,0x16
  40e7a1:	jbe    0x40e75e
  40e7a3:	in     al,0xa
  40e7a5:	test   BYTE PTR [edi+0xd],dl
  40e7a8:	(bad)  [ecx+0x461ac747]
  40e7ae:	jp     0x40e82f
  40e7b0:	or     bl,BYTE PTR [edi]
  40e7b2:	fistp  QWORD PTR [ecx+0x7b]
  40e7b5:	scas   eax,DWORD PTR es:[edi]
  40e7b6:	inc    esi
  40e7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b8:	sbb    BYTE PTR [ecx+0x1d0554c6],dl
  40e7be:	es push es
  40e7c0:	and    ebp,DWORD PTR es:[esi-0x74b498ee]
  40e7c7:	loope  0x40e7a1
  40e7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ca:	fdiv   st,st(6)
  40e7cc:	icebp  
  40e7cd:	xchg   edx,eax
  40e7ce:	push   es
  40e7cf:	push   edi
  40e7d0:	jae    0x40e830
  40e7d2:	push   ss
  40e7d3:	cs dec edi
  40e7d5:	fwait
  40e7d6:	xor    dl,dh
  40e7d8:	(bad)  
  40e7d9:	inc    esp
  40e7da:	jno    0x40e821
  40e7dc:	inc    ebp
  40e7dd:	pop    edx
  40e7de:	sub    al,0x7e
  40e7e0:	sub    DWORD PTR [edx+ebp*2],0xffffffed
  40e7e4:	jne    0x40e7c0
  40e7e6:	leave  
  40e7e7:	iret   
  40e7e8:	push   ebx
  40e7e9:	(bad)  
  40e7eb:	popf   
  40e7ec:	cmp    DWORD PTR [ebx-0x36],0x47d726f2
  40e7f3:	sbb    eax,esi
  40e7f5:	out    dx,al
  40e7f6:	cmp    al,0xa4
  40e7f8:	push   edx
  40e7f9:	fnsave [ebp-0x6c]
  40e7fc:	jg     0x40e7f9
  40e7fe:	stc    
  40e7ff:	add    DWORD PTR [ebx+0x31],0x68e069ce
  40e806:	arpl   WORD PTR [edi],bp
  40e808:	or     eax,0x41092002
  40e80d:	pop    eax
  40e80e:	pop    edx
  40e80f:	movlps QWORD PTR [edi+0x1e],xmm5
  40e813:	imul   esi,DWORD PTR [esi+0x17b4911e],0x4a
  40e81a:	cwde   
  40e81b:	sbb    bh,bh
  40e81d:	xchg   edx,eax
  40e81e:	call   0x3d681c3c
  40e823:	jmp    0x40e7c1
  40e825:	jmp    0x1a667416
  40e82a:	mov    ecx,0xd712898e
  40e82f:	loopne 0x40e7c1
  40e831:	sbb    BYTE PTR [edx+0x2887b2a8],0xcb
  40e838:	jge    0x40e825
  40e83a:	jae    0x40e801
  40e83c:	icebp  
  40e83d:	hlt    
  40e83e:	jge    0x40e7d4
  40e840:	daa    
  40e841:	cmc    
  40e842:	push   0x49
  40e844:	cld    
  40e845:	jmp    0x5117:0xe9e27fe6
  40e84c:	cmp    eax,0xf2324c99
  40e851:	pop    ebx
  40e852:	mov    eax,ds:0xcdec6dbd
  40e857:	xchg   esi,eax
  40e858:	push   es
  40e859:	add    edi,esp
  40e85b:	push   ds
  40e85c:	pop    ecx
  40e85d:	add    bh,BYTE PTR [ebx+edx*2-0x3ee4a36b]
  40e864:	sbb    al,0x56
  40e866:	inc    ebp
  40e867:	xchg   BYTE PTR [edx+eax*1+0x3efb595c],bh
  40e86e:	mov    dh,0xdd
  40e870:	add    al,al
  40e872:	and    eax,0xfebca029
  40e877:	hlt    
  40e878:	daa    
  40e879:	adc    esi,edi
  40e87b:	mov    ds:0xc2f3ad99,eax
  40e880:	popf   
  40e881:	fdivr  QWORD PTR [si]
  40e884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e885:	jne    0x40e877
  40e887:	adc    al,0x10
  40e889:	out    0x6f,eax
  40e88b:	(bad)  
  40e88c:	mov    ebx,0x6ef6fb78
  40e891:	pop    ss
  40e892:	fwait
  40e893:	jns    0x40e8ee
  40e895:	pop    ebx
  40e896:	inc    eax
  40e897:	call   0x7030:0xd60533fc
  40e89e:	sbb    ebx,ecx
  40e8a0:	inc    ebp
  40e8a1:	mov    ebp,0x165868d3
  40e8a6:	ret    0xd112
  40e8a9:	popa   
  40e8aa:	ja     0x40e8b5
  40e8ac:	cdq    
  40e8ad:	xchg   ebp,eax
  40e8ae:	out    dx,eax
  40e8af:	je     0x40e862
  40e8b1:	jg     0x40e84d
  40e8b3:	push   0xffffff81
  40e8b5:	and    ecx,DWORD PTR [ecx+0x5ed54aed]
  40e8bb:	fwait
  40e8bc:	inc    eax
  40e8bd:	retf   
  40e8be:	je     0x40e8d8
  40e8c0:	je     0x40e89e
  40e8c2:	jecxz  0x40e8db
  40e8c4:	adc    BYTE PTR [ecx],0x4b
  40e8c7:	(bad)  
  40e8c9:	or     ah,BYTE PTR [ebp-0x48]
  40e8cc:	fs aad 0x96
  40e8cf:	cmp    eax,0x4bb1fcbf
  40e8d4:	cli    
  40e8d5:	sub    esi,DWORD PTR [esi+esi*2-0x52805256]
  40e8dc:	mov    ah,0x57
  40e8de:	xor    al,BYTE PTR [edi+0x0]
  40e8e1:	out    0x82,eax
  40e8e3:	inc    esi
  40e8e4:	push   0x128b6148
  40e8e9:	mov    esi,0x86209689
  40e8ee:	(bad)  
  40e8ef:	popf   
  40e8f0:	and    al,0x9f
  40e8f2:	stos   DWORD PTR es:[edi],eax
  40e8f3:	psrld  mm5,QWORD PTR [ecx+0x1babc45a]
  40e8fa:	outs   dx,DWORD PTR ds:[esi]
  40e8fb:	call   0xed8cf11f
  40e900:	mov    al,ds:0xb53baed5
  40e905:	mov    DWORD PTR [edi-0x49990de],esi
  40e90b:	push   eax
  40e90c:	out    0x66,al
  40e90e:	xor    BYTE PTR [edx+0x29],bl
  40e911:	arpl   WORD PTR [esi+0x2d60c51b],bx
  40e917:	or     eax,0xa667aa1b
  40e91c:	sub    al,0x59
  40e91e:	adc    bh,ch
  40e920:	jmp    0xdcfe7f63
  40e925:	jmp    0x9c232c1b
  40e92a:	mov    edx,edi
  40e92c:	ss stc 
  40e92e:	mov    BYTE PTR [ebx+0x6765e33f],bl
  40e934:	cs jne 0x40e8f8
  40e937:	cmp    eax,DWORD PTR [ecx-0x46]
  40e93a:	dec    edi
  40e93b:	cwde   
  40e93c:	(bad)  
  40e93d:	push   edx
  40e93e:	push   ss
  40e93f:	jnp    0x40e998
  40e941:	fmulp  st(7),st
  40e943:	outs   dx,DWORD PTR ds:[esi]
  40e944:	idiv   DWORD PTR [esi-0x3a]
  40e947:	shl    edi,1
  40e949:	mov    bh,0x34
  40e94b:	es lock adc eax,0xb44e1a06
  40e952:	xchg   ebx,eax
  40e953:	xor    BYTE PTR [ebx-0x13],bl
  40e956:	push   edi
  40e957:	fidivr DWORD PTR [esi+0x6f]
  40e95a:	or     esp,DWORD PTR [edi-0x3e]
  40e95d:	fnstcw WORD PTR [eax-0x58]
  40e960:	add    al,0x80
  40e962:	mov    BYTE PTR [ebx],bh
  40e964:	jb     0x40e977
  40e966:	and    al,BYTE PTR [ecx]
  40e968:	or     eax,0x31075718
  40e96d:	cmp    al,0xdc
  40e96f:	pop    ds
  40e970:	imul   eax,ebx,0x2a74c132
  40e976:	or     DWORD PTR [edx],ebx
  40e978:	pop    ecx
  40e979:	(bad)  
  40e97b:	jmp    0x40e9df
  40e97d:	repz das 
  40e97f:	lock sub edx,DWORD PTR gs:[edx+0x613e86b1]
  40e987:	pushf  
  40e988:	pop    esi
  40e989:	push   ebp
  40e98a:	inc    ecx
  40e98b:	xor    DWORD PTR [ebp-0x558ba98a],esi
  40e991:	mov    al,0x9a
  40e993:	iret   
  40e994:	lock fs mov esi,0xba0f0447
  40e99b:	sbb    DWORD PTR [ebp+0x1b352946],edx
  40e9a1:	dec    ecx
  40e9a2:	lock cmp al,BYTE PTR [ecx+ebx*4-0x2c1d818c]
  40e9aa:	mov    ch,0xf8
  40e9ac:	dec    ecx
  40e9ad:	ror    BYTE PTR [eax],0x3c
  40e9b0:	jle    0x40e9c4
  40e9b2:	dec    eax
  40e9b3:	and    BYTE PTR [edi+esi*2],ah
  40e9b6:	mov    al,ds:0x8d3f9dea
  40e9bb:	push   cs
  40e9bc:	out    dx,al
  40e9bd:	xor    eax,0xb5413406
  40e9c2:	sbb    eax,0x1b1d113c
  40e9c7:	sbb    eax,0xdbb2733e
  40e9cc:	mov    esp,0xb13be3f1
  40e9d1:	test   eax,0x85fd956
  40e9d6:	xchg   edi,eax
  40e9d7:	sub    eax,0x91216fd3
  40e9dc:	push   es
  40e9dd:	sbb    dh,BYTE PTR [esp+ebx*4]
  40e9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9e1:	iret   
  40e9e2:	dec    esi
  40e9e3:	xor    BYTE PTR [ebx+0x6deaa9bc],dl
  40e9e9:	icebp  
  40e9ea:	sub    DWORD PTR cs:[esi],edx
  40e9ed:	pop    ds
  40e9ee:	mov    ebx,0x6bfe38c4
  40e9f3:	and    bh,BYTE PTR [eiz*2-0x4c303604]
  40e9fa:	jmp    0x40ea30
  40e9fc:	push   ss
  40e9fd:	cmc    
  40e9fe:	mov    edx,?
  40ea00:	iret   
  40ea01:	adc    DWORD PTR [esp+ebx*8+0x3bd202b4],edi
  40ea08:	jne    0x40e98a
  40ea0a:	push   cs
  40ea0b:	mov    ebx,fs
  40ea0d:	push   edi
  40ea0e:	xchg   esi,eax
  40ea0f:	aas    
  40ea10:	je     0x40ea44
  40ea12:	data16 out dx,al
  40ea14:	test   BYTE PTR [edx-0x34],0xe7
  40ea18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea19:	cmc    
  40ea1a:	icebp  
  40ea1b:	inc    ebp
  40ea1c:	idiv   DWORD PTR [edx]
  40ea1e:	es fcmovnb st,st(0)
  40ea21:	jecxz  0x40e9f5
  40ea23:	mov    ds:0x622e1601,eax
  40ea28:	imul   ebx,DWORD PTR [edi+0x1fdcdf42],0x3f
  40ea2f:	aaa    
  40ea30:	test   al,0x75
  40ea32:	shl    DWORD PTR [ebp+0x4ff54d32],0x51
  40ea39:	xchg   edi,eax
  40ea3a:	test   DWORD PTR [edx],0x8dfd0458
  40ea40:	mov    al,ds:0xd69f0c68
  40ea45:	ds sub al,0xaa
  40ea48:	mov    al,BYTE PTR ds:0xdfa2230b
  40ea4e:	push   ecx
  40ea4f:	push   esi
  40ea50:	or     al,0xe1
  40ea52:	(bad)  
  40ea53:	push   edx
  40ea54:	cs xor eax,0x3b1d8f19
  40ea5a:	je     0x40e9dd
  40ea5c:	or     eax,0x9d475f66
  40ea61:	js     0x40ea9f
  40ea63:	je     0x40ea7c
  40ea65:	fdivr  st(7),st
  40ea67:	dec    edi
  40ea68:	jb     0x40ea1e
  40ea6a:	jno    0x40ea18
  40ea6c:	mov    BYTE PTR [edi+ebx*4],bl
  40ea6f:	and    DWORD PTR [edi],edi
  40ea71:	mov    eax,ds:0x547ae64a
  40ea76:	mov    edx,0x3d212724
  40ea7b:	sub    ecx,DWORD PTR [edi]
  40ea7d:	push   esp
  40ea7e:	pop    ss
  40ea7f:	pop    ecx
  40ea80:	into   
  40ea81:	pop    edx
  40ea82:	xor    BYTE PTR [ecx-0x63],ch
  40ea85:	mov    ch,0x8b
  40ea87:	imul   ebx,DWORD PTR [ecx+0x4c2e7587],0x4787008f
  40ea91:	cmp    ecx,DWORD PTR [ecx-0x6aa95f4e]
  40ea97:	repz cmp cl,dh
  40ea9a:	mov    al,0x7a
  40ea9c:	rcl    DWORD PTR [esi-0x14272802],1
  40eaa2:	xor    eax,0x3b2cf127
  40eaa7:	mov    ds:0xf47ada8c,eax
  40eaac:	enter  0x5b4b,0x6c
  40eab0:	mov    eax,ds:0x25673154
  40eab5:	sub    eax,edi
  40eab7:	dec    esp
  40eab8:	rcl    DWORD PTR [esi],cl
  40eaba:	scas   eax,DWORD PTR es:[edi]
  40eabb:	inc    esp
  40eabc:	fidivr WORD PTR [ecx]
  40eabe:	lahf   
  40eabf:	xor    BYTE PTR [edi],cl
  40eac1:	mov    ds:0xe61b9ef7,eax
  40eac6:	sub    al,BYTE PTR [eax+0x60]
  40eac9:	add    al,0x96
  40eacb:	pop    edx
  40eacc:	lahf   
  40eacd:	jno    0x40ea81
  40eacf:	jno    0x40eafd
  40ead1:	xchg   edi,eax
  40ead2:	mov    BYTE PTR [eax-0x9ec5e7e],dh
  40ead8:	lock xchg ebp,eax
  40eada:	dec    esi
  40eadb:	jae    0x40ea75
  40eadd:	rol    BYTE PTR [edx+esi*2-0x78fff33e],1
  40eae4:	addr16 or eax,0xe17b301a
  40eaea:	mov    bh,0x93
  40eaec:	(bad)  
  40eaee:	sub    edx,DWORD PTR [edi+0x6b]
  40eaf1:	stc    
  40eaf2:	test   eax,0xa506b77f
  40eaf7:	retf   0x192a
  40eafa:	mov    bl,al
  40eafc:	sub    eax,0x5ea4d97a
  40eb01:	xor    edx,DWORD PTR [ecx-0x1f]
  40eb04:	or     al,0xd2
  40eb06:	cmp    DWORD PTR [eax-0x2a],esp
  40eb09:	(bad)  
  40eb0a:	pop    esi
  40eb0b:	jl     0x40eac6
  40eb0d:	sbb    DWORD PTR [eax],edx
  40eb0f:	popf   
  40eb10:	in     al,dx
  40eb11:	add    al,0x7f
  40eb13:	shr    DWORD PTR [edx-0x5d227c7b],1
  40eb19:	sub    eax,ebx
  40eb1b:	into   
  40eb1c:	inc    edi
  40eb1d:	sti    
  40eb1e:	mov    ah,0xc2
  40eb20:	push   ebp
  40eb21:	cs mov ecx,0x1df10cd1
  40eb27:	mov    edi,0x808f2622
  40eb2c:	or     BYTE PTR [eax+0x2505615f],al
  40eb32:	jle    0x40eb68
  40eb34:	lock cmp BYTE PTR [eax],bh
  40eb37:	data16 and BYTE PTR [ebp-0x24d36176],al
  40eb3e:	xor    ecx,edx
  40eb40:	mov    eax,0xec31913
  40eb45:	mov    BYTE PTR [esp+esi*2-0x655d0346],bl
  40eb4c:	les    esp,FWORD PTR [ebp+0x0]
  40eb4f:	mov    edi,0x5e849327
  40eb54:	pop    edx
  40eb55:	(bad)  
  40eb56:	outs   dx,BYTE PTR ds:[esi]
  40eb57:	jbe    0x40eafb
  40eb59:	mov    ds:0xf021c267,al
  40eb5e:	sub    ebp,0x3da119a1
  40eb64:	mov    bh,0x67
  40eb66:	push   edx
  40eb67:	push   DWORD PTR [ecx-0xd87e5b6]
  40eb6d:	sub    DWORD PTR [esi+ebp*1-0x6a1ef],edi
  40eb74:	je     0x40ebd9
  40eb76:	cld    
  40eb77:	ins    BYTE PTR es:[edi],dx
  40eb78:	add    al,0x62
  40eb7a:	pop    ds
  40eb7b:	stc    
  40eb7c:	pop    eax
  40eb7d:	sbb    eax,0x9af04611
  40eb82:	mov    al,ds:0x543f3fbe
  40eb87:	je     0x40eb40
  40eb89:	stos   BYTE PTR es:[edi],al
  40eb8a:	mov    al,0x43
  40eb8c:	pop    edi
  40eb8d:	enter  0x7700,0xb3
  40eb91:	fisubr WORD PTR [ebx]
  40eb93:	sbb    DWORD PTR [ecx+0x60a30e1f],edi
  40eb99:	sti    
  40eb9a:	or     esi,edx
  40eb9c:	cdq    
  40eb9d:	sub    eax,0xf5c836a6
  40eba2:	mov    edx,esi
  40eba4:	nop
  40eba5:	(bad)  
  40eba6:	sbb    bl,BYTE PTR [esi+0x5d]
  40eba9:	fs sar BYTE PTR fs:[eax-0x38],0x6
  40ebaf:	bound  ecx,QWORD PTR [edi-0x8]
  40ebb2:	jp     0x40ec0f
  40ebb4:	test   DWORD PTR [edx],esp
  40ebb6:	pop    esi
  40ebb7:	mov    ebp,0x6af33bbc
  40ebbc:	push   ebx
  40ebbd:	popf   
  40ebbe:	bound  ebx,QWORD PTR [esi+0x1e77a3fc]
  40ebc4:	call   0xf6bbc91d
  40ebc9:	sahf   
  40ebca:	jge    0x40ebd4
  40ebcc:	mov    esp,DWORD PTR [eax+0x5f]
  40ebcf:	xchg   ecx,ecx
  40ebd1:	or     BYTE PTR [eax+0x482cdd03],cl
  40ebd7:	xchg   ebp,eax
  40ebd8:	push   edi
  40ebd9:	out    0xfe,al
  40ebdb:	push   ds
  40ebdc:	mov    bl,0x4e
  40ebde:	lds    edx,FWORD PTR [ebx]
  40ebe0:	inc    esp
  40ebe1:	fld    DWORD PTR ds:0xbc916ed8
  40ebe7:	sub    eax,0x6b467e1d
  40ebec:	es call 0xa551:0xe6cba08c
  40ebf4:	xchg   ebp,eax
  40ebf5:	cmp    eax,0x82b4d6c2
  40ebfa:	pop    ecx
  40ebfb:	xchg   ebx,eax
  40ebfc:	sub    eax,0x88a1ead7
  40ec01:	adc    al,0xa0
  40ec03:	mov    dh,0x35
  40ec05:	nop
  40ec06:	leave  
  40ec07:	ficomp DWORD PTR [eiz*8-0x3e6e872b]
  40ec0e:	js     0x40ec7f
  40ec10:	mov    DWORD PTR [esi-0x3bd8c09d],ebx
  40ec16:	dec    ebx
  40ec17:	cwde   
  40ec18:	jmp    0x81ca6a42
  40ec1d:	xchg   ebx,eax
  40ec1e:	in     eax,0x5d
  40ec20:	pop    edx
  40ec21:	cdq    
  40ec22:	sub    al,0x7c
  40ec24:	fisub  DWORD PTR [ebx+0x28f916c8]
  40ec2a:	dec    ah
  40ec2c:	lea    ecx,[eax]
  40ec2e:	jle    0x40ebf0
  40ec30:	add    bh,BYTE PTR [edi]
  40ec32:	jp     0x40ec27
  40ec34:	fwait
  40ec35:	or     eax,DWORD PTR [edi+eax*2+0x2]
  40ec39:	push   eax
  40ec3a:	push   cs
  40ec3b:	pop    esp
  40ec3c:	dec    edx
  40ec3d:	aam    0x5b
  40ec3f:	scas   eax,DWORD PTR es:[edi]
  40ec40:	mov    eax,ds:0x1f3e307f
  40ec45:	iret   
  40ec46:	aas    
  40ec47:	loope  0x40ec57
  40ec49:	mov    dl,0x3d
  40ec4b:	dec    esp
  40ec4c:	cli    
  40ec4d:	jl     0x40ecbd
  40ec4f:	jns    0x40ec73
  40ec51:	sbb    bh,BYTE PTR [ebx-0x26]
  40ec54:	jmp    0x40ebf1
  40ec56:	cmp    DWORD PTR [eax-0x60f2430b],ebp
  40ec5c:	mov    ah,0x4e
  40ec5e:	mov    al,ds:0xedcf5e39
  40ec63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec64:	or     BYTE PTR [ebx-0x45b676b5],0xfe
  40ec6b:	pop    ss
  40ec6c:	cs push ds
  40ec6e:	ds inc esi
  40ec70:	and    DWORD PTR [ebx+esi*2-0x118df359],ecx
  40ec77:	ins    BYTE PTR es:[edi],dx
  40ec78:	pop    esi
  40ec79:	xor    cl,BYTE PTR [edx-0x6d]
  40ec7c:	lock and al,0x4
  40ec7f:	std    
  40ec80:	xor    edi,DWORD PTR [esi+0x7db8170b]
  40ec86:	mov    ebp,0x402a0275
  40ec8b:	xchg   ecx,eax
  40ec8c:	fdiv   DWORD PTR ds:0x34cb041
  40ec92:	mov    WORD PTR [esi-0x78],?
  40ec95:	adc    ah,cl
  40ec97:	in     eax,dx
  40ec98:	mov    edx,0x9a832abc
  40ec9d:	ret    0xcf30
  40eca0:	fldenv [ebp+ecx*2+0x6c3ece0d]
  40eca7:	int3   
  40eca8:	mov    ebx,0x2e4e8569
  40ecad:	ss hlt 
  40ecaf:	inc    ebx
  40ecb0:	gs mov al,0x41
  40ecb3:	or     BYTE PTR [ebp-0x19ea35e],0x59
  40ecba:	pop    es
  40ecbb:	clc    
  40ecbc:	ret    
  40ecbd:	inc    eax
  40ecbe:	cmp    edx,DWORD PTR [ecx+0x89a2a38]
  40ecc4:	jp     0x40ece3
  40ecc6:	pusha  
  40ecc7:	inc    ecx
  40ecc8:	jne    0x40ecc8
  40ecca:	call   0x55f05557
  40eccf:	cdq    
  40ecd0:	icebp  
  40ecd1:	out    dx,al
  40ecd2:	not    BYTE PTR [edi]
  40ecd4:	pop    esp
  40ecd5:	dec    ebx
  40ecd6:	push   0xffffffe1
  40ecd8:	or     ebp,esp
  40ecda:	les    edx,FWORD PTR [esi+0x65]
  40ecdd:	push   0x33
  40ecdf:	push   cs
  40ece0:	arpl   WORD PTR fs:[ebx],bp
  40ece3:	pop    edi
  40ece4:	sub    al,0xb3
  40ece6:	push   0xffffffcc
  40ece8:	shr    BYTE PTR [edx-0x600b2a9c],cl
  40ecee:	xor    BYTE PTR [ebx+0x2fe4901e],al
  40ecf4:	fdivr  st(6),st
  40ecf6:	mov    dl,0xca
  40ecf8:	into   
  40ecf9:	icebp  
  40ecfa:	mov    ds:0x69fb5cd0,al
  40ecff:	jae    0x40ec84
  40ed01:	jnp    0x40ecd3
  40ed03:	cmp    DWORD PTR [edx-0x70],ebx
  40ed06:	sub    ecx,DWORD PTR [eax+0x316abb48]
  40ed0c:	lods   eax,DWORD PTR fs:[esi]
  40ed0e:	cmc    
  40ed0f:	(bad)  
  40ed10:	cmp    BYTE PTR [edi],dh
  40ed12:	sbb    eax,0x11ce1f4f
  40ed17:	into   
  40ed18:	cmp    al,0x7d
  40ed1a:	xor    bl,bh
  40ed1c:	sub    eax,0x4d6f3dcb
  40ed21:	sahf   
  40ed22:	lods   eax,DWORD PTR ds:[esi]
  40ed23:	arpl   WORD PTR [ebx+0x2a],bp
  40ed26:	xchg   esp,eax
  40ed27:	push   ebx
  40ed28:	jmp    0x38dbfd9d
  40ed2d:	add    al,0x68
  40ed2f:	nop    DWORD PTR [esi-0x6c]
  40ed33:	pusha  
  40ed34:	ret    0x3ee
  40ed37:	inc    esp
  40ed38:	(bad)  
  40ed39:	retf   
  40ed3a:	scas   al,BYTE PTR es:[edi]
  40ed3b:	mov    bl,BYTE PTR [esi]
  40ed3d:	cmp    BYTE PTR [ecx+0x4ecb855c],0x3b
  40ed44:	(bad)
  40ed48:	inc    ecx
  40ed49:	enter  0x8a76,0x87
  40ed4d:	mov    ah,0x43
  40ed4f:	outs   dx,BYTE PTR ds:[esi]
  40ed50:	stos   DWORD PTR es:[edi],eax
  40ed51:	sub    BYTE PTR [ebx*2-0x62a9bf88],bh
  40ed58:	jge    0x40ece8
  40ed5a:	es sub edx,esp
  40ed5d:	push   ecx
  40ed5e:	inc    ecx
  40ed5f:	mov    ds:0xb041991a,eax
  40ed64:	dec    eax
  40ed65:	add    al,0x75
  40ed67:	fidivr DWORD PTR [edx]
  40ed69:	or     al,0x4a
  40ed6b:	xchg   ecx,eax
  40ed6c:	mov    al,ss:0x593edad
  40ed72:	scas   eax,DWORD PTR es:[edi]
  40ed73:	leave  
  40ed74:	test   al,0xf9
  40ed76:	ds retf 0x3c13
  40ed7a:	clc    
  40ed7b:	enter  0x244a,0x69
  40ed7f:	mov    cl,0x54
  40ed81:	stos   BYTE PTR es:[edi],al
  40ed82:	jnp    0x40ed82
  40ed84:	aad    0x4a
  40ed86:	stos   BYTE PTR es:[edi],al
  40ed87:	lahf   
  40ed88:	or     DWORD PTR [ebx],esi
  40ed8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed8b:	fcmove st,st(3)
  40ed8d:	ret    0x76b4
  40ed90:	(bad)  
  40ed91:	mov    esi,ebx
  40ed93:	cli    
  40ed94:	sbb    esi,esi
  40ed96:	aaa    
  40ed97:	js     0x40ed19
  40ed99:	inc    ecx
  40ed9a:	out    dx,eax
  40ed9b:	inc    edi
  40ed9c:	retf   
  40ed9d:	cmp    BYTE PTR [ebx-0x4f],0x4b
  40eda1:	or     ch,BYTE PTR [ebp-0x4a688061]
  40eda7:	sbb    esi,DWORD PTR [eax]
  40eda9:	lods   al,BYTE PTR ds:[esi]
  40edaa:	add    al,al
  40edac:	or     DWORD PTR [edx+0x5f],ecx
  40edaf:	(bad)  [ebx+0xd]
  40edb2:	sub    eax,0x62ac6379
  40edb7:	jo     0x40edf0
  40edb9:	(bad)  
  40edba:	fwait
  40edbb:	rcr    DWORD PTR [edi-0x1],1
  40edbe:	jne    0x40ee01
  40edc0:	das    
  40edc1:	adc    BYTE PTR [ebx+0x77],0xfe
  40edc5:	push   ss
  40edc6:	call   0x452a:0x3d0d45f4
  40edcd:	xchg   esi,eax
  40edce:	and    eax,0xe930f12c
  40edd3:	shr    esi,1
  40edd5:	push   ds
  40edd6:	outs   dx,BYTE PTR ds:[esi]
  40edd7:	fild   DWORD PTR [ecx+0x5d]
  40edda:	push   ebx
  40eddb:	dec    ecx
  40eddc:	popa   
  40eddd:	mov    edi,0x120d2ef7
  40ede2:	xchg   ebp,eax
  40ede3:	fsubr  st(2),st
  40ede5:	adc    DWORD PTR [edi-0x58bf9695],edi
  40edeb:	add    DWORD PTR [eax],ebx
  40eded:	enter  0x2c9d,0xfc
  40edf1:	call   0xe7992007
  40edf6:	aaa    
  40edf7:	scas   al,BYTE PTR es:[edi]
  40edf8:	test   BYTE PTR [esi-0x64a6a7bb],0x3e
  40edff:	mov    DWORD PTR [esi],0x9d99fdf3
  40ee05:	stos   DWORD PTR es:[edi],eax
  40ee06:	rcl    DWORD PTR [ebx+0x34f2e52d],cl
  40ee0c:	mov    esi,0x4ed99799
  40ee11:	xchg   DWORD PTR [edx],edi
  40ee13:	fild   WORD PTR [esi-0x128bb485]
  40ee19:	in     al,dx
  40ee1a:	rcr    DWORD PTR [ebx],1
  40ee1c:	enter  0x6b7e,0x41
  40ee20:	push   es
  40ee21:	cdq    
  40ee22:	cmp    ebx,DWORD PTR [ecx]
  40ee24:	or     eax,0x5d9661be
  40ee29:	cld    
  40ee2a:	and    ch,ah
  40ee2c:	xchg   esp,eax
  40ee2d:	popa   
  40ee2e:	mov    ?,WORD PTR [edx+0x7f]
  40ee31:	dec    edx
  40ee32:	mov    ch,0x52
  40ee34:	dec    edi
  40ee35:	dec    edx
  40ee36:	and    eax,DWORD PTR [edx+0x49]
  40ee39:	cs pop esp
  40ee3b:	shr    ecx,1
  40ee3d:	retf   0x2ea1
  40ee40:	mov    edi,0x129a5605
  40ee45:	inc    esi
  40ee46:	clc    
  40ee47:	xchg   esp,eax
  40ee48:	pusha  
  40ee49:	mov    esi,0xdcef053
  40ee4e:	cld    
  40ee4f:	mov    bh,0xe1
  40ee51:	loop   0x40edf7
  40ee53:	leave  
  40ee54:	add    eax,0x234791c5
  40ee59:	sub    ebx,esi
  40ee5b:	push   0x71
  40ee5d:	fst    DWORD PTR [ecx+0x1d]
  40ee60:	call   0x54bb:0x1bfc1eea
  40ee67:	or     bl,dh
  40ee69:	pop    esp
  40ee6a:	adc    DWORD PTR [ebx+0x6e8891b1],esp
  40ee70:	out    0x48,eax
  40ee72:	xor    ah,dl
  40ee74:	enter  0x4127,0x9d
  40ee78:	xchg   ebx,eax
  40ee79:	dec    ebp
  40ee7a:	aaa    
  40ee7b:	mov    WORD PTR [ebx+0x303a2ae6],fs
  40ee81:	add    DWORD PTR [ebx-0x69],eax
  40ee84:	repnz imul ebx
  40ee87:	clc    
  40ee88:	pop    esi
  40ee89:	jb     0x40eeeb
  40ee8b:	adc    BYTE PTR [ebx-0x52],ch
  40ee8e:	inc    edx
  40ee8f:	and    BYTE PTR [esi+0x4afadf1d],dh
  40ee95:	sbb    DWORD PTR [ebx+esi*2],0x50
  40ee99:	cmp    bl,BYTE PTR [edi]
  40ee9b:	jl     0x40ef0f
  40ee9d:	push   edx
  40ee9e:	bound  ebx,QWORD PTR [esi+ecx*8+0x798892cf]
  40eea5:	pop    ebx
  40eea6:	mov    ebp,0xf029e15
  40eeab:	out    dx,al
  40eeac:	xchg   ebp,eax
  40eead:	scas   al,BYTE PTR es:[edi]
  40eeae:	fld    st(0)
  40eeb0:	xor    eax,0xcf1ad954
  40eeb5:	add    cl,BYTE PTR [ebp-0x77]
  40eeb8:	add    cl,BYTE PTR [esi+0xb]
  40eebb:	icebp  
  40eebc:	ret    0x9e71
  40eebf:	stc    
  40eec0:	aad    0xca
  40eec2:	es aad 0x16
  40eec5:	push   ecx
  40eec6:	inc    ebx
  40eec7:	call   0x74405579
  40eecc:	loope  0x40eeee
  40eece:	or     edx,DWORD PTR [ebp+0x1a]
  40eed1:	(bad)  
  40eed2:	jmp    0x40eec7
  40eed4:	cmp    DWORD PTR [esi],0x1d
  40eed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed8:	pusha  
  40eed9:	push   eax
  40eeda:	or     eax,0xe59bc56a
  40eedf:	jp     0x40ef00
  40eee1:	ror    dh,0x51
  40eee4:	retf   0x2612
  40eee7:	hlt    
  40eee8:	ss jns 0x40ef05
  40eeeb:	cmp    esi,DWORD PTR [esi+ebp*1+0x27]
  40eeef:	inc    esp
  40eef0:	cmp    DWORD PTR [edx+0x4b],esi
  40eef3:	mov    ds:0x8fb13975,eax
  40eef8:	add    cl,BYTE PTR [edi-0x4a60023e]
  40eefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeff:	dec    ebp
  40ef00:	and    BYTE PTR [eax-0x29],bh
  40ef03:	into   
  40ef04:	push   ebp
  40ef05:	xor    esp,ebp
  40ef07:	mov    edi,0x308d6cc
  40ef0c:	and    eax,0x6a4599ba
  40ef11:	jg     0x40ee9d
  40ef13:	dec    esi
  40ef14:	mov    ecx,0x6faa7a4a
  40ef19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1a:	aad    0xab
  40ef1c:	daa    
  40ef1d:	adc    al,0xa1
  40ef1f:	dec    edx
  40ef20:	ins    BYTE PTR es:[edi],dx
  40ef21:	jg     0x40eeb6
  40ef23:	push   esp
  40ef24:	dec    edx
  40ef25:	jge    0x40ef3b
  40ef27:	fwait
  40ef28:	aas    
  40ef29:	loopne 0x40ef81
  40ef2b:	ret    
  40ef2c:	cmp    DWORD PTR [ebx],edx
  40ef2e:	sub    ebx,DWORD PTR [ecx+0x4b]
  40ef31:	jae    0x40ef90
  40ef33:	jo     0x40ef53
  40ef35:	jno    0x40efa6
  40ef37:	or     eax,0x7342e1ed
  40ef3c:	xor    BYTE PTR ds:0x83466f24,bh
  40ef42:	out    dx,al
  40ef43:	jge    0x40ef41
  40ef45:	not    DWORD PTR [esi]
  40ef47:	xchg   edi,eax
  40ef48:	or     al,0x4a
  40ef4a:	fs xchg ebx,eax
  40ef4c:	mov    bl,0x6f
  40ef4e:	inc    edi
  40ef4f:	inc    ebp
  40ef50:	das    
  40ef51:	pushf  
  40ef52:	rcl    DWORD PTR [ecx+0x73],0xa
  40ef56:	imul   esp,esp,0xffffffec
  40ef59:	maskmovq mm4,(bad)
  40ef5a:	mul    DWORD PTR [edx]
  40ef5c:	addr16 sub eax,0x2d49b4e6
  40ef62:	xor    BYTE PTR [eax-0xeed7f4b],bl
  40ef68:	ja     0x40efd5
  40ef6a:	mov    eax,ss:0x8f53aa89
  40ef70:	inc    eax
  40ef71:	out    dx,eax
  40ef72:	inc    ebx
  40ef73:	sbb    dh,0xf7
  40ef76:	inc    ebp
  40ef77:	inc    esp
  40ef78:	repz adc esi,DWORD PTR [ebx-0x71]
  40ef7c:	and    al,0xd1
  40ef7e:	inc    ecx
  40ef7f:	sub    edi,DWORD PTR [ecx-0x3fdb5b5b]
  40ef85:	xchg   esi,eax
  40ef86:	rol    DWORD PTR [esi],0xf
  40ef89:	xor    al,0x6
  40ef8b:	xor    dh,BYTE PTR [ecx-0x78]
  40ef8e:	pop    edx
  40ef8f:	jge    0x40ef73
  40ef91:	inc    esp
  40ef92:	mov    ds:0x41b2ffa0,al
  40ef97:	push   esi
  40ef98:	sub    ecx,eax
  40ef9a:	cmp    bl,BYTE PTR [edx]
  40ef9c:	fadd   DWORD PTR [ebx+0x64]
  40ef9f:	sbb    bh,ch
  40efa1:	out    0xd5,al
  40efa3:	fld    st(3)
  40efa5:	cmp    ebx,ebx
  40efa7:	mov    edx,DWORD PTR [eax-0xfc8d12]
  40efad:	mov    ecx,0xfd8d40c
  40efb2:	dec    eax
  40efb3:	cld    
  40efb4:	test   eax,0x5120fc32
  40efb9:	ins    BYTE PTR es:[edi],dx
  40efba:	fimul  WORD PTR [ebx]
  40efbc:	faddp  st(6),st
  40efbe:	or     DWORD PTR [edi-0x7ecc7340],edx
  40efc4:	dec    BYTE PTR [esi-0x5f]
  40efc7:	fbld   TBYTE PTR [edx]
  40efc9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40efcb:	inc    esp
  40efcc:	bound  edi,QWORD PTR [esi]
  40efce:	jl     0x40eff3
  40efd0:	pop    esp
  40efd1:	dec    edi
  40efd2:	es push ecx
  40efd4:	mov    ebx,DWORD PTR [eax]
  40efd6:	jg     0x40ef84
  40efd8:	stos   DWORD PTR es:[edi],eax
  40efd9:	test   al,0xe6
  40efdb:	jno    0x40efa8
  40efdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efde:	repz sbb BYTE PTR [edx],bh
  40efe1:	sti    
  40efe2:	hlt    
  40efe3:	mov    dl,0xc6
  40efe5:	test   al,0x54
  40efe7:	call   edi
  40efe9:	test   dh,ah
  40efeb:	not    DWORD PTR [eax+0x24aa394b]
  40eff1:	(bad)  
  40eff2:	(bad)  
  40eff3:	arpl   WORD PTR ds:0x9a0fc83b,bp
  40eff9:	(bad)  
  40effa:	(bad)  
  40effb:	scas   eax,DWORD PTR es:[edi]
  40effc:	or     eax,0xfaa02d94
  40f001:	std    
  40f002:	dec    edi
  40f003:	or     edx,edi
  40f005:	int3   
  40f006:	push   es
  40f007:	aaa    
  40f008:	jnp    0x40efa3
  40f00a:	clc    
  40f00b:	jb     0x40eff8
  40f00d:	pop    edx
  40f00e:	das    
  40f00f:	pop    edx
  40f010:	and    ecx,esi
  40f012:	dec    ecx
  40f013:	pop    ebp
  40f014:	push   cs
  40f015:	and    eax,0xcdbac05a
  40f01a:	ret    
  40f01b:	icebp  
  40f01c:	push   esp
  40f01d:	jns    0x40f00e
  40f01f:	cli    
  40f020:	xor    ebp,ebp
  40f022:	pop    ebp
  40f023:	test   BYTE PTR [esi-0x5f],0x9
  40f027:	shl    DWORD PTR [eax+0x75],cl
  40f02a:	push   esi
  40f02b:	xchg   esi,eax
  40f02c:	pushf  
  40f02d:	ja     0x40f019
  40f02f:	xchg   ebx,eax
  40f030:	sbb    eax,0x1bde8ad0
  40f035:	or     DWORD PTR [eax+edx*4],ebp
  40f038:	jge    0x40f05a
  40f03a:	test   al,0x5
  40f03c:	in     eax,0x37
  40f03e:	lds    eax,FWORD PTR [ecx]
  40f040:	imul   ebp,DWORD PTR [esi-0x7d1c40d0],0x84425224
  40f04a:	sbb    BYTE PTR [ebx],bh
  40f04c:	pop    ebp
  40f04d:	jl     0x40f0cb
  40f04f:	lahf   
  40f050:	sbb    eax,0x5d90524
  40f055:	ror    edx,1
  40f057:	shr    DWORD PTR [ecx],0xaa
  40f05a:	push   edx
  40f05b:	sbb    bh,dh
  40f05d:	mov    eax,DWORD PTR [ebx-0x3e]
  40f060:	jb     0x40f010
  40f062:	(bad)  
  40f064:	cs cmp eax,0xe2d352f1
  40f06a:	jnp    0x40f0cb
  40f06c:	stc    
  40f06d:	aad    0x2b
  40f06f:	mov    ds:0xf4e7b47d,eax
  40f074:	mov    ebp,0x2f38a308
  40f079:	popa   
  40f07a:	inc    esp
  40f07b:	and    cl,BYTE PTR [ecx]
  40f07d:	sbb    al,0x32
  40f07f:	sbb    dl,BYTE PTR [esi+0x63]
  40f082:	test   DWORD PTR [ebp-0x44788f18],esi
  40f088:	aad    0x95
  40f08a:	sub    edx,ebx
  40f08c:	pop    ss
  40f08d:	ret    
  40f08e:	xchg   DWORD PTR [edx-0x39],ebp
  40f091:	cdq    
  40f092:	xor    dl,BYTE PTR [ebx]
  40f094:	xor    DWORD PTR [ecx-0x969af1],ebp
  40f09a:	shl    eax,1
  40f09c:	stos   DWORD PTR es:[edi],eax
  40f09d:	pop    ds
  40f09e:	ret    
  40f09f:	jae    0x40f086
  40f0a1:	mov    ebp,0xc0103b80
  40f0a6:	pop    ebp
  40f0a7:	jmp    0x787f44e3
  40f0ac:	(bad)  [edi+0x10]
  40f0af:	or     BYTE PTR [ebp+0x37b2f144],bl
  40f0b5:	aas    
  40f0b6:	fistp  DWORD PTR [edx-0x72]
  40f0b9:	and    DWORD PTR [ebx],ecx
  40f0bb:	sbb    bl,dl
  40f0bd:	sbb    dh,BYTE PTR [eax+0xf]
  40f0c0:	fimul  WORD PTR [ecx]
  40f0c2:	dec    ecx
  40f0c3:	dec    esp
  40f0c4:	mov    eax,0xde98d140
  40f0c9:	sub    al,0xc7
  40f0cb:	test   esp,0x15127872
  40f0d1:	out    dx,eax
  40f0d2:	out    dx,al
  40f0d3:	mov    ah,0x46
  40f0d5:	stc    
  40f0d6:	jl     0x40f0c3
  40f0d8:	dec    eax
  40f0d9:	test   edx,ebp
  40f0db:	pushf  
  40f0dc:	leave  
  40f0dd:	jmp    0xe9c7:0xd75ed2b9
  40f0e4:	ins    DWORD PTR es:[edi],dx
  40f0e5:	aas    
  40f0e6:	inc    ebp
  40f0e7:	and    ebx,eax
  40f0e9:	in     eax,0x34
  40f0eb:	retf   0xccc
  40f0ee:	aas    
  40f0ef:	(bad)
  40f0f3:	in     al,dx
  40f0f4:	in     eax,dx
  40f0f5:	mov    eax,ds:0xac74655a
  40f0fa:	retf   
  40f0fb:	inc    ebx
  40f0fc:	cdq    
  40f0fd:	xchg   esi,eax
  40f0fe:	cmp    DWORD PTR [eax],0xcd860eea
  40f104:	ror    BYTE PTR [ecx-0x6c59451c],1
  40f10a:	xor    ebx,edx
  40f10c:	mov    dh,ah
  40f10e:	pushf  
  40f10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f110:	bound  ecx,QWORD PTR [ebx-0x3c]
  40f113:	push   ecx
  40f114:	jnp    0x40f0fb
  40f116:	jne    0x40f0ca
  40f118:	adc    DWORD PTR [eax-0x189d9d59],esp
  40f11e:	push   esi
  40f11f:	pcmpgtb mm3,QWORD PTR [ecx+0x65]
  40f123:	test   BYTE PTR [edx+edx*2-0x4e31721d],ch
  40f12a:	jge    0x40f18b
  40f12c:	imul   ebp,DWORD PTR [ebx],0xc3db1770
  40f132:	mov    edi,0x367afbd9
  40f137:	add    eax,0xac43a915
  40f13c:	or     DWORD PTR [ebp-0x35],ecx
  40f13f:	and    DWORD PTR ds:0x9dfa2895,ebp
  40f145:	(bad)  
  40f146:	pop    edi
  40f147:	adc    eax,0xfbb519aa
  40f14c:	mov    dl,0xb1
  40f14e:	test   DWORD PTR [eax+esi*8],ecx
  40f151:	or     BYTE PTR cs:[edx-0x33],bl
  40f155:	gs and eax,0x736b0435
  40f15b:	cmp    ecx,edi
  40f15d:	ret    0x2eaa
  40f160:	test   bl,ah
  40f162:	xor    al,0x52
  40f164:	into   
  40f165:	jge    0x40f107
  40f167:	mov    cl,0xd4
  40f169:	jp     0x40f15d
  40f16b:	ja     0x40f14d
  40f16d:	inc    edx
  40f16e:	arpl   WORD PTR ds:0xbd038b43,di
  40f174:	mov    ebp,0x854b2945
  40f179:	xchg   edi,eax
  40f17a:	mov    ds:0xd1e4dcb4,al
  40f17f:	cmp    bh,al
  40f181:	daa    
  40f182:	out    dx,eax
  40f183:	pop    ds
  40f184:	(bad)  
  40f185:	js     0x40f1c3
  40f187:	and    ecx,eax
  40f189:	loope  0x40f16e
  40f18b:	into   
  40f18c:	or     eax,DWORD PTR [edi+0x1b]
  40f18f:	sbb    DWORD PTR [eax],0xc1ea16e3
  40f195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f196:	sub    al,0x25
  40f198:	push   es
  40f199:	jecxz  0x40f177
  40f19b:	xor    eax,0xa97b88c8
  40f1a0:	sahf   
  40f1a1:	push   ebp
  40f1a2:	lods   eax,DWORD PTR ds:[esi]
  40f1a3:	xchg   BYTE PTR [esi+0x63],al
  40f1a6:	jae    0x40f18f
  40f1a8:	and    eax,0x9cddf257
  40f1ad:	rol    cl,0xb0
  40f1b0:	jmp    0xf9b9d89b
  40f1b5:	mov    ss,WORD PTR [eax+0x30]
  40f1b8:	test   BYTE PTR [ebp-0x33],bh
  40f1bb:	test   eax,0x73ede03e
  40f1c0:	mov    edx,0xfa2d0976
  40f1c5:	outs   dx,DWORD PTR ds:[esi]
  40f1c6:	mov    dh,0x46
  40f1c8:	lock loopne 0x40f208
  40f1cb:	test   DWORD PTR [edi-0x27],edx
  40f1ce:	mov    ds:0x49aaa80d,eax
  40f1d3:	lea    esi,[edi-0x1a62c747]
  40f1d9:	jmp    0x1d0b:0x9a3d5b52
  40f1e0:	or     DWORD PTR [eax+0x4a6ab0d6],esi
  40f1e6:	lods   eax,DWORD PTR ds:[esi]
  40f1e7:	loop   0x40f1a5
  40f1e9:	mov    dl,0xfa
  40f1eb:	jecxz  0x40f1ea
  40f1ed:	xchg   esi,eax
  40f1ee:	jl     0x40f242
  40f1f0:	mov    gs,WORD PTR ds:0xfdb48b34
  40f1f6:	push   0xffffffa2
  40f1f8:	or     DWORD PTR [edx+0x37acae57],ebp
  40f1fe:	mov    esi,0x7e055abb
  40f203:	mov    al,ds:0x85b1def7
  40f208:	pop    esp
  40f209:	dec    ecx
  40f20a:	fwait
  40f20b:	loopne 0x40f208
  40f20d:	sbb    ch,BYTE PTR [esi]
  40f20f:	or     eax,0xc6ad57c5
  40f214:	sbb    edi,ebp
  40f216:	(bad)  
  40f217:	sbb    al,0x9c
  40f219:	pop    ebx
  40f21a:	push   eax
  40f21b:	lods   al,BYTE PTR ds:[esi]
  40f21c:	rcr    BYTE PTR [ebx+0x1063df37],cl
  40f222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f223:	in     eax,0xe8
  40f225:	and    ch,BYTE PTR [ebp+ebx*1+0x15]
  40f229:	arpl   WORD PTR [di+0x69],si
  40f22d:	ret    
  40f22e:	or     DWORD PTR [ebp-0x7],0x8f26745
  40f235:	push   0xffffff99
  40f237:	and    al,0x9f
  40f239:	mov    al,0xe3
  40f23b:	aaa    
  40f23c:	(bad)
  40f23f:	and    al,0x3a
  40f241:	cmp    DWORD PTR [edx+0x41],ecx
  40f244:	dec    edx
  40f245:	mov    dl,0x36
  40f247:	sar    ebx,1
  40f249:	test   DWORD PTR [ecx],0x4bd9c1b0
  40f24f:	adc    eax,0x666485bb
  40f254:	stos   BYTE PTR es:[edi],al
  40f255:	push   esp
  40f256:	aam    0x9f
  40f258:	enter  0x1321,0x30
  40f25c:	ds dec edx
  40f25e:	push   cs
  40f25f:	mov    edx,0x81ee59dd
  40f264:	(bad)  
  40f265:	push   es
  40f266:	and    DWORD PTR [edi],0xffffffea
  40f269:	popa   
  40f26a:	mov    eax,ds:0x19f04f3
  40f26f:	sbb    BYTE PTR [edx+edi*2-0x4a2cec2b],0xe6
  40f277:	jmp    0x40f213
  40f279:	xchg   edx,eax
  40f27a:	fs jmp 0x647d:0x8edc197b
  40f282:	jp     0x40f2b5
  40f284:	pop    ss
  40f285:	int3   
  40f286:	jbe    0x40f279
  40f288:	dec    eax
  40f289:	in     al,0xc0
  40f28b:	mov    esi,0x64355bec
  40f290:	jb     0x40f2a7
  40f292:	dec    ecx
  40f293:	jle    0x40f234
  40f295:	fild   QWORD PTR [edx-0x2d]
  40f298:	sbb    eax,0x3ce9eee5
  40f29d:	push   edi
  40f29e:	loopne 0x40f223
  40f2a0:	inc    eax
  40f2a1:	and    BYTE PTR [esp+ebx*2],0xd2
  40f2a5:	or     al,0x38
  40f2a7:	fcmovu st,st(5)
  40f2a9:	hlt    
  40f2aa:	sbb    eax,0x5626f6cf
  40f2af:	sub    eax,0x35efac47
  40f2b4:	mov    ds:0x203f5e51,al
  40f2b9:	lods   al,BYTE PTR ds:[esi]
  40f2ba:	cdq    
  40f2bb:	(bad)  
  40f2bc:	fmul   QWORD PTR [eax]
  40f2be:	loope  0x40f249
  40f2c0:	pushf  
  40f2c1:	call   0xd7f64612
  40f2c6:	jo     0x40f343
  40f2c8:	dec    ebx
  40f2c9:	xchg   esp,eax
  40f2ca:	push   0xb
  40f2cc:	jl     0x40f2dc
  40f2ce:	sub    edx,DWORD PTR [esi+0x6fa73ce]
  40f2d4:	test   DWORD PTR [eax],0xc4c278a2
  40f2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2db:	jb     0x40f33c
  40f2dd:	adc    al,0xb9
  40f2df:	(bad)  
  40f2e0:	jg     0x40f2a2
  40f2e2:	ret    0x5b77
  40f2e5:	mov    ebp,0xd116198f
  40f2ea:	mov    bl,0x2d
  40f2ec:	mov    esi,0x82c17b8e
  40f2f1:	and    eax,0x16733201
  40f2f6:	loop   0x40f320
  40f2f8:	stos   DWORD PTR es:[edi],eax
  40f2f9:	mov    edx,0xb5984e7c
  40f2fe:	push   0xb3cd87f9
  40f303:	pop    esi
  40f304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f305:	push   cs
  40f306:	stos   BYTE PTR es:[edi],al
  40f307:	or     ch,al
  40f309:	enter  0x31a9,0xb5
  40f30d:	xlat   BYTE PTR ds:[ebx]
  40f30e:	adc    DWORD PTR [esi+0x433d3205],ebx
  40f314:	sub    esi,DWORD PTR [ebx+0x2a]
  40f317:	shl    BYTE PTR [esi-0x7321e62c],1
  40f31d:	add    ecx,esp
  40f31f:	push   edi
  40f320:	dec    ebp
  40f321:	mov    ecx,0xff0d2cce
  40f326:	mov    eax,0x1da4053c
  40f32b:	jle    0x40f344
  40f32d:	sbb    DWORD PTR [ecx],0xc4c16197
  40f333:	stos   BYTE PTR es:[edi],al
  40f334:	pushf  
  40f335:	repnz (bad) 
  40f338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f339:	popa   
  40f33a:	das    
  40f33b:	push   0xe2f8c91d
  40f340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f341:	xchg   esi,eax
  40f342:	gs fs mov eax,0xe10f587b
  40f349:	sbb    BYTE PTR [edi],bl
  40f34b:	and    DWORD PTR [edi+0xb],eax
  40f34e:	jp     0x40f31b
  40f350:	jmp    0x40f329
  40f352:	icebp  
  40f353:	pop    ss
  40f354:	(bad)  
  40f355:	xlat   BYTE PTR ds:[ebx]
  40f356:	es or  al,0xba
  40f359:	pop    ebx
  40f35a:	pushw  ss
  40f35c:	and    eax,0xa212fb66
  40f361:	aad    0x1b
  40f363:	sti    
  40f364:	mov    ecx,gs
  40f366:	mov    esp,0xfc7262e0
  40f36b:	shl    DWORD PTR [eax-0x32fb6085],cl
  40f371:	fs stos DWORD PTR es:[edi],eax
  40f373:	push   ecx
  40f374:	in     eax,0x41
  40f376:	rcr    DWORD PTR [edx],1
  40f378:	jno    0x40f326
  40f37a:	or     ch,BYTE PTR [edi+0x2d]
  40f37d:	mov    eax,ds:0x32c290dc
  40f382:	into   
  40f383:	jns    0x40f322
  40f385:	ret    0x78b0
  40f388:	call   0x103a:0xa10eee0
  40f38f:	(bad)  
  40f390:	adc    BYTE PTR [edx+0x7fadc8ae],al
  40f396:	imul   edx,DWORD PTR [ecx-0x3c873096],0xa
  40f39d:	xchg   edi,eax
  40f39e:	imul   ebp,DWORD PTR [ebx-0x2304952e],0x3f
  40f3a5:	push   es
  40f3a6:	loope  0x40f3c7
  40f3a8:	ret    0x14fa
  40f3ab:	test   DWORD PTR [ebx-0x1b],esi
  40f3ae:	lods   al,BYTE PTR ds:[esi]
  40f3af:	inc    ebp
  40f3b0:	jge    0x40f3e4
  40f3b2:	loop   0x40f3d1
  40f3b4:	fwait
  40f3b5:	loopne 0x40f3e2
  40f3b7:	enter  0xbd41,0xe4
  40f3bb:	pop    esi
  40f3bc:	adc    eax,0x826197ed
  40f3c1:	movzx  edx,WORD PTR [ebp-0x64]
  40f3c5:	rcr    BYTE PTR [esi+0x1d],1
  40f3c8:	xchg   ebx,eax
  40f3c9:	iret   
  40f3ca:	mov    edx,DWORD PTR [ecx]
  40f3cc:	sbb    DWORD PTR [esi+0x72],esp
  40f3cf:	cdq    
  40f3d0:	or     ecx,DWORD PTR [ebp-0x51]
  40f3d3:	cmp    eax,0x6465e3cf
  40f3d8:	mov    dl,0xdf
  40f3da:	xchg   edi,eax
  40f3db:	sub    al,0xc9
  40f3dd:	pushw  cs
  40f3df:	out    dx,al
  40f3e0:	push   edx
  40f3e1:	adc    eax,0x255866a8
  40f3e6:	jno    0x40f3ce
  40f3e8:	popf   
  40f3e9:	cmp    ecx,DWORD PTR [ebp+0x1d]
  40f3ec:	push   edi
  40f3ed:	cdq    
  40f3ee:	pop    esp
  40f3ef:	push   es
  40f3f0:	pop    ds
  40f3f1:	mov    eax,ds:0xb3d31fc0
  40f3f6:	rcl    ah,cl
  40f3f8:	(bad)  
  40f3f9:	int3   
  40f3fa:	or     ebx,DWORD PTR [edx]
  40f3fc:	addr16 lahf 
  40f3fe:	sahf   
  40f3ff:	inc    edx
  40f400:	test   eax,0x4bf00842
  40f405:	shr    DWORD PTR [eax],0x71
  40f408:	push   0x328c0169
  40f40d:	or     BYTE PTR [ebp-0x9857fe5],ah
  40f413:	xchg   esi,eax
  40f414:	dec    esp
  40f415:	jmp    0x40f46b
  40f417:	adc    cl,BYTE PTR [edx+ecx*4-0x16]
  40f41b:	jae    0x40f492
  40f41d:	pop    ebp
  40f41e:	cmp    BYTE PTR [ebx-0xb],0x6c
  40f422:	(bad)  
  40f423:	jbe    0x40f45a
  40f425:	pop    ebx
  40f426:	test   DWORD PTR [edi+ebp*8-0x39],esi
  40f42a:	and    al,BYTE PTR [ecx-0x2]
  40f42d:	(bad)  
  40f42e:	clc    
  40f42f:	or     BYTE PTR [ecx],ch
  40f431:	inc    edi
  40f432:	cld    
  40f433:	inc    edx
  40f434:	xchg   esi,eax
  40f435:	push   esi
  40f436:	mov    bh,bh
  40f438:	or     DWORD PTR [eax-0x710442c0],eax
  40f43e:	cmp    DWORD PTR [ebx-0x691ed19],ebp
  40f444:	popf   
  40f445:	mov    dl,0x9e
  40f447:	push   0x9456381b
  40f44c:	mov    esp,ebp
  40f44e:	gs dec edx
  40f450:	push   ebp
  40f451:	mov    esi,0x611c14e
  40f456:	xchg   ebp,eax
  40f457:	pop    ebx
  40f458:	nop
  40f459:	mov    ch,0xc6
  40f45b:	ret    0xa122
  40f45e:	cmp    al,0x21
  40f460:	add    ch,BYTE PTR [ebx-0x52]
  40f463:	shl    BYTE PTR [esi+0x53cf8469],1
  40f469:	or     DWORD PTR ds:0xab0e9a4c,edx
  40f46f:	aad    0x8
  40f471:	mov    ebx,0x8933bfa7
  40f476:	pop    ds
  40f477:	add    DWORD PTR [esi],eax
  40f479:	aam    0xca
  40f47b:	jge    0x40f476
  40f47d:	sbb    DWORD PTR [esp+esi*4-0x2b5a1d77],edi
  40f484:	or     BYTE PTR [ecx+0xa],ah
  40f487:	or     eax,0xd0b3f3ba
  40f48c:	pop    esp
  40f48d:	scas   al,BYTE PTR es:[edi]
  40f48e:	loopne 0x40f428
  40f490:	pop    es
  40f491:	xor    BYTE PTR [eax-0x3ecf093],0xd8
  40f498:	xchg   edi,eax
  40f499:	daa    
  40f49a:	sbb    BYTE PTR [edx-0x68a4e9f],bl
  40f4a0:	pop    edx
  40f4a1:	cmc    
  40f4a2:	sub    bl,dh
  40f4a4:	add    DWORD PTR [ebp-0x7d4dfc79],esp
  40f4aa:	dec    edx
  40f4ab:	sbb    al,0x8c
  40f4ad:	cmp    DWORD PTR [edi],0xe9ca1da3
  40f4b3:	sbb    dl,0xdc
  40f4b6:	enter  0x7a5d,0xd1
  40f4ba:	fisttp QWORD PTR [ebx]
  40f4bc:	xlat   BYTE PTR ds:[ebx]
  40f4bd:	xchg   esp,eax
  40f4be:	inc    esp
  40f4bf:	xor    DWORD PTR [ecx+0x6d],esi
  40f4c2:	add    eax,0x4586fdb1
  40f4c7:	and    bh,BYTE PTR [ebp-0x4de3e132]
  40f4cd:	in     al,0xe1
  40f4cf:	cmp    bl,al
  40f4d1:	jmp    0x5ee8:0x6b3528e5
  40f4d8:	inc    ebx
  40f4d9:	push   edi
  40f4da:	or     dh,bl
  40f4dc:	cwde   
  40f4dd:	jno    0x40f4fd
  40f4df:	ret    0xc64b
  40f4e2:	dec    edi
  40f4e3:	loopne 0x40f531
  40f4e5:	mov    esi,0xbcd77e58
  40f4ea:	mov    dh,0x16
  40f4ec:	stos   DWORD PTR es:[edi],eax
  40f4ed:	rcl    DWORD PTR [ebx+edx*8],1
  40f4f0:	mov    ebp,0x2aec8466
  40f4f5:	test   eax,0x3b282e4
  40f4fa:	push   ss
  40f4fb:	or     ebp,DWORD PTR [eax-0x66]
  40f4fe:	popa   
  40f4ff:	mov    gs,WORD PTR [ebp+0xf12d91e]
  40f505:	mov    ebp,0x63524474
  40f50a:	jne    0x40f50a
  40f50c:	test   edx,ecx
  40f50e:	pop    ebp
  40f50f:	adc    BYTE PTR ds:0xca1775a,0x1f
  40f516:	ret    
  40f517:	mov    eax,0x6ae8f10c
  40f51c:	dec    ebx
  40f51d:	imul   edi,eax,0x1
  40f520:	repnz rcr BYTE PTR [ebx],cl
  40f523:	jno    0x40f54b
  40f525:	ins    DWORD PTR es:[edi],dx
  40f526:	call   0xb3e3:0x6527c453
  40f52d:	mov    ecx,0xfb4e96a0
  40f532:	jnp    0x40f586
  40f534:	pop    esp
  40f535:	inc    edi
  40f536:	enter  0x25ad,0x46
  40f53a:	inc    ecx
  40f53b:	mov    ebp,0x64d15223
  40f540:	(bad)  [ebp*8+0x79b0105d]
  40f547:	mov    bh,0x3
  40f549:	aad    0x9c
  40f54b:	daa    
  40f54c:	call   0x42cc:0xe9e9b9b7
  40f553:	jg     0x40f560
  40f555:	or     dl,BYTE PTR [edi-0x4d]
  40f558:	std    
  40f559:	and    cl,0xd8
  40f55c:	leave  
  40f55d:	cmp    bl,BYTE PTR [eax-0x3726977a]
  40f563:	add    al,0x9d
  40f565:	or     eax,0xd1216e8e
  40f56a:	daa    
  40f56b:	mov    DWORD PTR [ebx],edi
  40f56d:	mov    eax,0x2efcc9c4
  40f572:	aad    0x32
  40f574:	pop    ebp
  40f575:	imul   DWORD PTR [eax+0x3192a85a]
  40f57b:	xchg   ebx,eax
  40f57c:	fdiv   st,st(4)
  40f57e:	inc    ebp
  40f57f:	jns    0x40f5da
  40f581:	xor    eax,0xfe852707
  40f586:	or     eax,0xb5891469
  40f58b:	cmp    BYTE PTR [esi-0x75],dl
  40f58e:	inc    ebp
  40f58f:	push   cs
  40f590:	std    
  40f591:	add    BYTE PTR [esi],ch
  40f593:	pop    ebx
  40f594:	mov    eax,0x1516e01f
  40f599:	sbb    DWORD PTR [esi-0x68],edx
  40f59c:	or     eax,0x2310eee6
  40f5a1:	inc    ecx
  40f5a2:	xor    eax,0x7b2a03f4
  40f5a7:	sub    eax,DWORD PTR [edx+edi*4]
  40f5aa:	call   0xe8756217
  40f5af:	iret   
  40f5b0:	lods   eax,DWORD PTR ds:[esi]
  40f5b1:	pop    ds
  40f5b2:	pusha  
  40f5b3:	mov    al,gs:0xe21a1df5
  40f5b9:	retf   0x336f
  40f5bc:	add    ch,BYTE PTR [edi+ecx*1]
  40f5bf:	and    al,dl
  40f5c1:	scas   al,BYTE PTR es:[edi]
  40f5c2:	in     eax,0x76
  40f5c4:	rol    BYTE PTR [eax-0x4a66e04f],0x9b
  40f5cb:	dec    edx
  40f5cc:	cmp    eax,0xd5ed9466
  40f5d1:	pop    esp
  40f5d2:	fisttp DWORD PTR [ecx]
  40f5d4:	push   eax
  40f5d5:	push   0x34bad1b2
  40f5da:	inc    edx
  40f5db:	mov    ebp,0x8d3aad9f
  40f5e0:	dec    ecx
  40f5e1:	call   0x92e9:0x18108f81
  40f5e8:	fbstp  TBYTE PTR [eax]
  40f5ea:	mov    eax,0x70114c30
  40f5ef:	shr    BYTE PTR [esi-0x7a0fe59d],0xaa
  40f5f6:	aas    
  40f5f7:	in     al,dx
  40f5f8:	push   es
  40f5f9:	daa    
  40f5fa:	inc    ebp
  40f5fb:	jns    0x40f5ea
  40f5fd:	pop    esi
  40f5fe:	mov    ebp,0x6ae5c305
  40f603:	outs   dx,DWORD PTR ds:[esi]
  40f604:	fstp   QWORD PTR [ecx+0x64]
  40f607:	int3   
  40f608:	cs scas eax,DWORD PTR es:[edi]
  40f60a:	(bad)  
  40f60c:	aam    0x4f
  40f60e:	imul   ebx,DWORD PTR [edx-0x56bdc30d],0x7d
  40f615:	sbb    DWORD PTR [ebx+0x48136691],0xffffff83
  40f61c:	repz or ecx,DWORD PTR [ebx+0x21661c19]
  40f623:	sbb    bh,BYTE PTR [ebx*4-0x56cd9bf3]
  40f62a:	pusha  
  40f62b:	aaa    
  40f62c:	or     bh,al
  40f62e:	mov    ds:0x8178746d,eax
  40f633:	into   
  40f634:	sbb    BYTE PTR [ecx],bl
  40f636:	xchg   DWORD PTR [edi+0x56db33f3],eax
  40f63c:	mov    esi,ebx
  40f63e:	pop    ebx
  40f63f:	mov    edx,esi
  40f641:	add    ebx,0x1002
  40f647:	lea    eax,[ebp-0x18]
  40f64a:	add    edx,eax
  40f64c:	add    edx,0x5
  40f64f:	push   edx
  40f650:	inc    esi
  40f651:	pop    ecx
  40f652:	dec    ecx
  40f653:	xchg   ecx,eax
  40f654:	dec    eax
  40f655:	xchg   ecx,eax
  40f656:	dec    ecx
  40f657:	xchg   ecx,edx
  40f659:	dec    edx
  40f65a:	push   edx
  40f65b:	mov    edx,ebx
  40f65d:	pop    ebx
  40f65e:	dec    ebx
  40f65f:	call   DWORD PTR [ebx]
  40f661:	cmp    DWORD PTR [ebp+0x10],esi
  40f664:	je     0x40f685
  40f66a:	xchg   edx,eax
  40f66b:	push   0xc
  40f66d:	pop    ecx
  40f66e:	dec    ecx
  40f66f:	push   0x3
  40f671:	pop    ebx
  40f672:	inc    ebx
  40f673:	xchg   ebx,ecx
  40f675:	inc    ecx
  40f676:	sub    ebx,ecx
  40f678:	xchg   ebx,ecx
  40f67a:	dec    ecx
  40f67b:	dec    ecx
  40f67c:	mov    eax,DWORD PTR [ebp-0x1c]
  40f67f:	imul   eax,ecx
  40f682:	add    esp,eax
  40f684:	xchg   edx,eax
  40f685:	push   eax
  40f686:	xor    ebx,ebx
  40f688:	mov    edx,esp
  40f68a:	dec    edx
  40f68b:	inc    ebx
  40f68c:	add    ebx,DWORD PTR [edx+ebx*1]
  40f68f:	dec    ebx
  40f690:	xor    edx,edx
  40f692:	add    DWORD PTR [ebp-0x10],ebx
  40f695:	pop    ebx
  40f696:	mov    eax,DWORD PTR [ebp-0x10]
  40f699:	pop    edi
  40f69a:	pop    esi
  40f69b:	pop    ebx
  40f69c:	leave  
  40f69d:	ret    0x10
  40f6a0:	push   ebp
  40f6a1:	mov    ebp,esp
  40f6a3:	push   ecx
  40f6a4:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f6ab:	xor    DWORD PTR ds:0x428eb1,0x6807
  40f6b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f6b8:	mov    edx,DWORD PTR [ebp+0x10]
  40f6bb:	mov    ecx,0x75108b1
  40f6c0:	xor    eax,ecx
  40f6c2:	add    eax,0x3272f8
  40f6c7:	mov    DWORD PTR [edx],eax
  40f6c9:	mov    eax,DWORD PTR [ebp+0xc]
  40f6cc:	xor    eax,ecx
  40f6ce:	or     DWORD PTR ds:0x428e95,0x4274
  40f6d8:	push   esi
  40f6d9:	xor    edx,DWORD PTR ds:0x428e25
  40f6df:	mov    esi,DWORD PTR [ebp+0x10]
  40f6e2:	mov    edx,0x3272f8
  40f6e7:	sub    DWORD PTR ds:0x428e35,0x428e89
  40f6f1:	add    eax,edx
  40f6f3:	mov    DWORD PTR [esi+0x4],eax
  40f6f6:	mov    eax,DWORD PTR [ebp+0x14]
  40f6f9:	sub    DWORD PTR ds:0x428e6d,0x71ec
  40f703:	mov    esi,DWORD PTR [ebp+0x10]
  40f706:	xor    DWORD PTR ds:0x428e75,0xbd4
  40f710:	mov    DWORD PTR [esi+0x8],eax
  40f713:	mov    eax,DWORD PTR [ebp+0x18]
  40f716:	mov    esi,DWORD PTR [ebp+0x10]
  40f719:	sub    DWORD PTR ds:0x428e31,0x4173
  40f723:	mov    DWORD PTR [esi+0xc],eax
  40f726:	add    esi,0x59ec
  40f72c:	mov    eax,DWORD PTR [ebp+0x1c]
  40f72f:	mov    esi,DWORD PTR [ebp+0x10]
  40f732:	mov    DWORD PTR [esi+0x10],eax
  40f735:	mov    eax,DWORD PTR [ebp+0x8]
  40f738:	xor    eax,ecx
  40f73a:	add    eax,edx
  40f73c:	pop    esi
  40f73d:	leave  
  40f73e:	ret    0x18
  40f741:	push   ebp
  40f742:	mov    ebp,esp
  40f744:	sub    esp,0x9c
  40f74a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f74d:	sbb    DWORD PTR ds:0x428e9d,edx
  40f753:	mov    eax,0x8a9c
  40f758:	sbb    DWORD PTR ds:0x428ed1,0x428ec1
  40f762:	xor    ax,WORD PTR [ecx+0x20]
  40f766:	and    DWORD PTR ds:0x428e65,ebx
  40f76c:	mov    ecx,0x3b5e
  40f771:	add    ax,cx
  40f774:	movzx  eax,ax
  40f777:	xor    ecx,DWORD PTR ds:0x428e89
  40f77d:	mov    DWORD PTR [ebp-0x10],eax
  40f780:	mov    BYTE PTR [ebp-0x1],0x7c
  40f784:	and    DWORD PTR ds:0x428e9d,0x0
  40f78e:	mov    ecx,DWORD PTR ds:0x428e9d
  40f794:	inc    ecx
  40f795:	mov    DWORD PTR ds:0x428e9d,ecx
  40f79b:	cmp    DWORD PTR ds:0x428e9d,0x25
  40f7a2:	ja     0x40f7ce
  40f7a8:	jmp    0x40f7c1
  40f7ad:	push   0x762d
  40f7b2:	push   DWORD PTR [ebp-0x1c]
  40f7b5:	push   DWORD PTR [ebp-0x10]
  40f7b8:	push   DWORD PTR [ebp-0x1c]
  40f7bb:	call   DWORD PTR ds:0x42ca3c
  40f7c1:	cmp    DWORD PTR ds:0x428e9d,0x1d
  40f7c8:	jb     0x40f78e
  40f7ce:	lea    eax,[ebp-0x1]
  40f7d1:	mov    DWORD PTR [ebp-0xc],eax
  40f7d4:	mov    DWORD PTR ds:0x428e65,0x1c
  40f7de:	cmp    DWORD PTR ds:0x428e65,0x0
  40f7e5:	je     0x40f82d
  40f7eb:	cmp    DWORD PTR ds:0x428e65,0x22
  40f7f2:	jle    0x40f82d
  40f7f8:	jmp    0x40f819
  40f7fd:	push   0x5d70
  40f802:	push   DWORD PTR [ebp-0x24]
  40f805:	push   DWORD PTR [ebp-0x20]
  40f808:	push   DWORD PTR [ebp-0x28]
  40f80b:	push   0x428104
  40f810:	push   DWORD PTR [ebp-0x24]
  40f813:	call   DWORD PTR ds:0x42ca10
  40f819:	xor    ecx,ecx
  40f81b:	or     ecx,DWORD PTR ds:0x428e65
  40f821:	dec    ecx
  40f822:	mov    DWORD PTR ds:0x428e65,ecx
  40f828:	jmp    0x40f7de
  40f82d:	mov    al,BYTE PTR [ebp-0x1]
  40f830:	add    DWORD PTR ds:0x428e95,edi
  40f836:	mov    ecx,DWORD PTR [ebp-0xc]
  40f839:	xor    al,0x80
  40f83b:	sub    DWORD PTR ds:0x428ebd,0x428e99
  40f845:	add    al,0x5
  40f847:	sbb    DWORD PTR ds:0x428e29,0x428ead
  40f851:	mov    BYTE PTR [ecx],al
  40f853:	mov    DWORD PTR ds:0x428eb1,0x18
  40f85d:	cmp    DWORD PTR ds:0x428eb1,0x0
  40f864:	je     0x40f8ba
  40f86a:	cmp    DWORD PTR ds:0x428eb1,0xc
  40f871:	jl     0x40f8ba
  40f877:	jmp    0x40f88c
  40f87c:	push   0x428009
  40f881:	push   DWORD PTR [ebp-0x28]
  40f884:	push   0x0
  40f886:	call   DWORD PTR ds:0x42ca4c
  40f88c:	cmp    DWORD PTR ds:0x428eb1,0xd
  40f893:	jne    0x40f8a6
  40f899:	mov    ecx,DWORD PTR ds:0x428eb1
  40f89f:	dec    ecx
  40f8a0:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8a6:	xor    ecx,ecx
  40f8a8:	add    ecx,DWORD PTR ds:0x428eb1
  40f8ae:	dec    ecx
  40f8af:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8b5:	jmp    0x40f85d
  40f8ba:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f8c1:	push   ebx
  40f8c2:	mov    DWORD PTR ds:0x428e59,0x10
  40f8cc:	cmp    DWORD PTR ds:0x428e59,0x0
  40f8d3:	je     0x40f909
  40f8d9:	cmp    DWORD PTR ds:0x428e59,0x12
  40f8e0:	jg     0x40f909
  40f8e6:	jmp    0x40f8f6
  40f8eb:	push   0x21fb
  40f8f0:	call   DWORD PTR ds:0x42ca50
  40f8f6:	xor    eax,eax
  40f8f8:	or     eax,DWORD PTR ds:0x428e59
  40f8fe:	dec    eax
  40f8ff:	mov    ds:0x428e59,eax
  40f904:	jmp    0x40f8cc
  40f909:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f910:	mov    ecx,DWORD PTR [ebp-0x18]
  40f913:	push   esi
  40f914:	mov    eax,0x75108b1
  40f919:	and    DWORD PTR ds:0x428e8d,0x6e27
  40f923:	xor    ecx,eax
  40f925:	or     esi,DWORD PTR ds:0x428e41
  40f92b:	mov    esi,0x3272f8
  40f930:	sbb    DWORD PTR ds:0x428e65,0x3911
  40f93a:	push   edi
  40f93b:	add    ecx,esi
  40f93d:	jmp    0x40f957
  40f942:	mov    dl,BYTE PTR [ebp-0x1]
  40f945:	mov    DWORD PTR ds:0x428ea5,0x4ad2
  40f94f:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f956:	inc    ecx
  40f957:	cmp    ecx,0x40
  40f95a:	mov    DWORD PTR ds:0x428ec9,0x10ec
  40f964:	jb     0x40f942
  40f96a:	not    edx
  40f96c:	mov    edx,DWORD PTR [ebp-0x18]
  40f96f:	or     DWORD PTR ds:0x428e95,0x5092
  40f979:	xor    edx,eax
  40f97b:	sbb    DWORD PTR ds:0x428e7d,0x7f40
  40f985:	add    edx,esi
  40f987:	mov    DWORD PTR ds:0x428e35,0x3958
  40f991:	jmp    0x40fa14
  40f996:	sbb    ecx,DWORD PTR ds:0x428e6d
  40f99c:	mov    edi,DWORD PTR [ebp+0x8]
  40f99f:	sub    DWORD PTR ds:0x428e2d,0x7feb
  40f9a9:	mov    ecx,0x8a9c
  40f9ae:	sbb    DWORD PTR ds:0x428e25,0x428e91
  40f9b8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f9bd:	or     DWORD PTR ds:0x428e2d,0x498b
  40f9c7:	mov    edi,0x3b5e
  40f9cc:	or     DWORD PTR ds:0x428e49,0x428e35
  40f9d6:	add    cx,di
  40f9d9:	movzx  ecx,cx
  40f9dc:	mov    DWORD PTR [ebp-0xc],ecx
  40f9df:	and    DWORD PTR ds:0x428ec9,ecx
  40f9e5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9e8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f9ec:	add    DWORD PTR ds:0x428e71,0x1e66
  40f9f6:	xor    ecx,0x8a9c
  40f9fc:	add    ecx,edi
  40f9fe:	inc    edi
  40f9ff:	mov    edi,DWORD PTR [ebp-0xc]
  40fa02:	mov    DWORD PTR ds:0x428e49,0x2418
  40fa0c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fa13:	inc    edx
  40fa14:	mov    DWORD PTR ds:0x428e81,ecx
  40fa1a:	mov    ecx,DWORD PTR [ebp-0x10]
  40fa1d:	mov    DWORD PTR ds:0x428e61,0x6126
  40fa27:	cmp    edx,ecx
  40fa29:	jne    0x40f996
  40fa2f:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa32:	and    DWORD PTR ds:0x428ec9,0x0
  40fa3c:	jmp    0x40fa50
  40fa41:	xor    edi,edi
  40fa43:	or     edi,DWORD PTR ds:0x428ec9
  40fa49:	inc    edi
  40fa4a:	mov    DWORD PTR ds:0x428ec9,edi
  40fa50:	cmp    DWORD PTR ds:0x428ec9,0x19
  40fa57:	jae    0x40fa87
  40fa5d:	cmp    DWORD PTR ds:0x428ec9,0x28
  40fa64:	jbe    0x40fa87
  40fa6a:	jmp    0x40fa82
  40fa6f:	push   DWORD PTR [ebp-0x20]
  40fa72:	push   0x428104
  40fa77:	push   0x428eb9
  40fa7c:	call   DWORD PTR ds:0x42ca54
  40fa82:	jmp    0x40fa41
  40fa87:	mov    edx,DWORD PTR [ebp+0x10]
  40fa8a:	mov    edi,DWORD PTR ds:0x428e55
  40fa90:	sub    DWORD PTR ds:0x428e75,edi
  40fa96:	xor    ecx,eax
  40fa98:	add    ecx,esi
  40fa9a:	neg    edi
  40fa9c:	mov    DWORD PTR [edx],ecx
  40fa9e:	and    DWORD PTR ds:0x428e49,0x0
  40faa8:	jmp    0x40faba
  40faad:	mov    ecx,DWORD PTR ds:0x428e49
  40fab3:	inc    ecx
  40fab4:	mov    DWORD PTR ds:0x428e49,ecx
  40faba:	cmp    DWORD PTR ds:0x428e49,0x1d
  40fac1:	jae    0x40faf7
  40fac7:	cmp    DWORD PTR ds:0x428e49,0x21
  40face:	jb     0x40faf7
  40fad4:	jmp    0x40faf2
  40fad9:	push   DWORD PTR [ebp-0x14]
  40fadc:	push   DWORD PTR [ebp-0x28]
  40fadf:	push   0x4b8c
  40fae4:	push   DWORD PTR [ebp-0x18]
  40fae7:	push   0x428e9d
  40faec:	call   DWORD PTR ds:0x42ca14
  40faf2:	jmp    0x40faad
  40faf7:	mov    ecx,DWORD PTR [ebp-0x18]
  40fafa:	xor    ecx,eax
  40fafc:	add    ecx,esi
  40fafe:	neg    edi
  40fb00:	mov    DWORD PTR [ebp-0xc],ecx
  40fb03:	or     DWORD PTR ds:0x428e59,edx
  40fb09:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fb10:	movzx  edi,BYTE PTR ds:0x428e35
  40fb17:	or     edi,DWORD PTR ds:0x428ec5
  40fb1d:	mov    DWORD PTR ds:0x428e35,edi
  40fb23:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40fb2a:	and    DWORD PTR ds:0x428e81,0x0
  40fb34:	jmp    0x40fb46
  40fb39:	mov    ecx,DWORD PTR ds:0x428e81
  40fb3f:	inc    ecx
  40fb40:	mov    DWORD PTR ds:0x428e81,ecx
  40fb46:	cmp    DWORD PTR ds:0x428e81,0x1b
  40fb4d:	jae    0x40fb94
  40fb53:	cmp    DWORD PTR ds:0x428e81,0xa
  40fb5a:	jbe    0x40fb94
  40fb60:	jmp    0x40fb75
  40fb65:	push   0x3736
  40fb6a:	push   0x7077
  40fb6f:	call   DWORD PTR ds:0x42ca18
  40fb75:	cmp    DWORD PTR ds:0x428e81,0x9
  40fb7c:	jne    0x40fb8f
  40fb82:	mov    ecx,DWORD PTR ds:0x428e81
  40fb88:	inc    ecx
  40fb89:	mov    DWORD PTR ds:0x428e81,ecx
  40fb8f:	jmp    0x40fb39
  40fb94:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fb9b:	and    DWORD PTR ds:0x428e35,0x0
  40fba5:	jmp    0x40fbb7
  40fbaa:	mov    ecx,DWORD PTR ds:0x428e35
  40fbb0:	inc    ecx
  40fbb1:	mov    DWORD PTR ds:0x428e35,ecx
  40fbb7:	cmp    DWORD PTR ds:0x428e35,0x11
  40fbbe:	jae    0x40fc0b
  40fbc4:	cmp    DWORD PTR ds:0x428e35,0x5
  40fbcb:	jge    0x40fc0b
  40fbd1:	jmp    0x40fbec
  40fbd6:	push   DWORD PTR [ebp-0xc]
  40fbd9:	push   DWORD PTR [ebp-0x18]
  40fbdc:	push   0x1f27
  40fbe1:	push   0x4d22
  40fbe6:	call   DWORD PTR ds:0x42ca58
  40fbec:	cmp    DWORD PTR ds:0x428e35,0x4
  40fbf3:	jne    0x40fc06
  40fbf9:	mov    ecx,DWORD PTR ds:0x428e35
  40fbff:	inc    ecx
  40fc00:	mov    DWORD PTR ds:0x428e35,ecx
  40fc06:	jmp    0x40fbaa
  40fc0b:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc0e:	xor    edi,edi
  40fc10:	add    edi,DWORD PTR ds:0x428e95
  40fc16:	xor    DWORD PTR ds:0x428e41,edi
  40fc1c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc1f:	adc    DWORD PTR ds:0x428e31,ebx
  40fc25:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc28:	adc    DWORD PTR ds:0x428e39,0x50fd
  40fc32:	xor    ecx,eax
  40fc34:	or     DWORD PTR ds:0x428e49,0x428e31
  40fc3e:	add    ecx,esi
  40fc40:	mov    ecx,0xf641bea
  40fc45:	mov    edi,0x15c3
  40fc4a:	mov    edi,0x5a1eade
  40fc4f:	je     0x412616
  40fc55:	add    edx,ebx
  40fc57:	mov    edx,DWORD PTR [ebp+0x8]
  40fc5a:	and    DWORD PTR ds:0x428eb5,0x428e6d
  40fc64:	mov    ebx,DWORD PTR [ebp-0x8]
  40fc67:	xor    edx,eax
  40fc69:	adc    DWORD PTR ds:0x428e49,0x78c3
  40fc73:	xor    ebx,eax
  40fc75:	sub    edx,ebx
  40fc77:	not    DWORD PTR ds:0x428e65
  40fc7d:	sub    edx,esi
  40fc7f:	xor    edx,eax
  40fc81:	sub    DWORD PTR ds:0x428ec1,ebx
  40fc87:	mov    DWORD PTR [ebp+0x8],edx
  40fc8a:	mov    DWORD PTR ds:0x428e81,0x18
  40fc94:	cmp    DWORD PTR ds:0x428e81,0x0
  40fc9b:	je     0x40fcef
  40fca1:	cmp    DWORD PTR ds:0x428e81,0x9
  40fca8:	jg     0x40fcef
  40fcae:	jmp    0x40fcc1
  40fcb3:	push   DWORD PTR [ebp-0x1c]
  40fcb6:	push   0x8c8f
  40fcbb:	call   DWORD PTR ds:0x42ca1c
  40fcc1:	cmp    DWORD PTR ds:0x428e81,0xa
  40fcc8:	jne    0x40fcdd
  40fcce:	xor    edx,edx
  40fcd0:	xor    edx,DWORD PTR ds:0x428e81
  40fcd6:	dec    edx
  40fcd7:	mov    DWORD PTR ds:0x428e81,edx
  40fcdd:	mov    edx,DWORD PTR ds:0x428e81
  40fce3:	dec    edx
  40fce4:	mov    DWORD PTR ds:0x428e81,edx
  40fcea:	jmp    0x40fc94
  40fcef:	mov    edx,DWORD PTR [ebp+0x8]
  40fcf2:	adc    ebx,0x7b56
  40fcf8:	mov    ebx,DWORD PTR [ebp-0x58]
  40fcfb:	sub    DWORD PTR ds:0x428ea9,0xceb
  40fd05:	lea    edx,[ebx+edx*1+0x5708f8]
  40fd0c:	mov    DWORD PTR ds:0x428e91,0x63b8
  40fd16:	mov    DWORD PTR [ebp-0x58],edx
  40fd19:	mov    edx,DWORD PTR [ebp+0x8]
  40fd1c:	mov    ebx,DWORD PTR [ebp-0x54]
  40fd1f:	add    edx,0x64f89a
  40fd25:	adc    DWORD PTR ds:0x428e6d,0x428e79
  40fd2f:	imul   edx,ebx
  40fd32:	mov    DWORD PTR [ebp-0x54],edx
  40fd35:	xor    ebx,edx
  40fd37:	mov    edx,DWORD PTR [ebp+0x8]
  40fd3a:	xor    DWORD PTR ds:0x428e75,0x629e
  40fd44:	mov    ebx,DWORD PTR [ebp-0x50]
  40fd47:	mov    DWORD PTR ds:0x428ea5,0x655f
  40fd51:	add    edx,0x242ebed
  40fd57:	mov    DWORD PTR ds:0x428e49,0x3be8
  40fd61:	and    edx,ebx
  40fd63:	and    DWORD PTR ds:0x428e5d,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ebx,DWORD PTR ds:0x428e5d
  40fd78:	inc    ebx
  40fd79:	mov    DWORD PTR ds:0x428e5d,ebx
  40fd7f:	cmp    DWORD PTR ds:0x428e5d,0x1e
  40fd86:	jae    0x412148
  40fd8c:	cmp    DWORD PTR ds:0x428e5d,0x8
  40fd93:	ja     0x412148
  40fd99:	jmp    0x40fdae
  40fd9e:	push   0x4280dc
  40fda3:	push   0x2c09
  40fda8:	call   DWORD PTR ds:0x42ca20
  40fdae:	cmp    DWORD PTR ds:0x428e5d,0x7
  40fdb5:	jne    0x40fdca
  40fdbb:	xor    ebx,ebx
  40fdbd:	xor    ebx,DWORD PTR ds:0x428e5d
  40fdc3:	inc    ebx
  40fdc4:	mov    DWORD PTR ds:0x428e5d,ebx
  40fdca:	jmp    0x40fd72
  40fdcf:	jmp    0x412148
  40fdd4:	xadd   edi,edi
  40fdd7:	dec    ebx
  40fdd8:	push   ecx
  40fdd9:	dec    ebp
  40fdda:	dec    edi
  40fddb:	sar    eax,0xe5
  40fdde:	mov    al,ah
  40fde0:	in     eax,0x6
  40fde2:	mov    eax,ds:0x7b4fb21f
  40fde7:	jnp    0x40fdc0
  40fde9:	sahf   
  40fdea:	jnp    0x40fe67
  40fdec:	inc    edx
  40fded:	jo     0x40fe1c
  40fdef:	stos   DWORD PTR es:[edi],eax
  40fdf0:	mul    BYTE PTR [edi]
  40fdf2:	mov    dl,dl
  40fdf4:	fsubr  DWORD PTR [ecx]
  40fdf6:	shr    BYTE PTR [esi+0x19],0x67
  40fdfa:	dec    ebp
  40fdfb:	loope  0x40fdec
  40fdfd:	sbb    BYTE PTR [eax+0x14],al
  40fe00:	(bad)  
  40fe01:	fidiv  WORD PTR [edx]
  40fe03:	inc    ebx
  40fe04:	sub    eax,0x3cbbc816
  40fe09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0a:	cli    
  40fe0b:	into   
  40fe0c:	inc    ebp
  40fe0d:	sub    al,0x4b
  40fe0f:	fadd   st(4),st
  40fe11:	mov    dh,bl
  40fe13:	xor    ecx,DWORD PTR [edx]
  40fe15:	pop    ss
  40fe16:	test   eax,0x8745d475
  40fe1b:	(bad)  [edi+0x65ee08b9]
  40fe21:	out    dx,eax
  40fe22:	(bad)  
  40fe24:	push   0xffffffff
  40fe26:	sbb    DWORD PTR [edx],edi
  40fe28:	sub    esp,ebp
  40fe2a:	mov    ds,WORD PTR [ebp+ecx*8-0x54f7f0c9]
  40fe31:	lods   eax,DWORD PTR ds:[esi]
  40fe32:	dec    edx
  40fe33:	push   esi
  40fe34:	je     0x40fe23
  40fe36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe37:	and    al,0x5e
  40fe39:	icebp  
  40fe3a:	or     al,0x8c
  40fe3c:	loop   0x40fde5
  40fe3e:	sti    
  40fe3f:	or     eax,0x6867417a
  40fe44:	and    bh,BYTE PTR [esi]
  40fe46:	scas   al,BYTE PTR es:[edi]
  40fe47:	add    esi,DWORD PTR [eax]
  40fe49:	mov    eax,0x653fcb75
  40fe4e:	sub    DWORD PTR [ebp+eiz*1+0x71ec66b5],edi
  40fe55:	gs lahf 
  40fe57:	mov    DWORD PTR [edi+0x77d8133],esp
  40fe5d:	pop    esp
  40fe5e:	les    eax,FWORD PTR [ecx+0x36ecbbbf]
  40fe64:	xlat   BYTE PTR gs:[ebx]
  40fe66:	ret    0x1da2
  40fe69:	imul   esi,eax,0xffffffc8
  40fe6c:	popf   
  40fe6d:	push   ds
  40fe6e:	mov    DWORD PTR [edx+ebx*2],esi
  40fe71:	cmp    esi,edx
  40fe73:	mov    eax,ds:0x7045baef
  40fe78:	pop    es
  40fe79:	adc    eax,0x61724bf7
  40fe7e:	pop    edi
  40fe7f:	stc    
  40fe80:	mov    ebp,0x3649f0bb
  40fe85:	lods   eax,DWORD PTR ds:[esi]
  40fe86:	sub    eax,0xd6e5e27c
  40fe8b:	jecxz  0x40fe1f
  40fe8d:	pop    ecx
  40fe8e:	ja     0x40ff0b
  40fe90:	imul   DWORD PTR [edi-0x91388c]
  40fe96:	mov    DWORD PTR [ebx+esi*2+0x36bc3d45],0x7fb7fa07
  40fea1:	adc    al,0xed
  40fea3:	loope  0x40fee4
  40fea5:	cdq    
  40fea6:	dec    ebp
  40fea7:	out    dx,al
  40fea8:	popa   
  40fea9:	leave  
  40feaa:	inc    edx
  40feab:	xchg   ecx,eax
  40feac:	jmp    0x40fedb
  40feae:	dec    esi
  40feaf:	sub    BYTE PTR [ebx],al
  40feb1:	sub    al,0xde
  40feb3:	mov    ah,0x49
  40feb5:	mov    dl,dl
  40feb7:	or     al,0x57
  40feb9:	push   0x14
  40febb:	add    al,0x34
  40febd:	xor    dl,BYTE PTR [ebp+0x73e26f70]
  40fec3:	retf   0x1ca4
  40fec6:	sbb    al,0x5a
  40fec8:	lds    eax,FWORD PTR [ecx]
  40feca:	es pop edi
  40fecc:	test   DWORD PTR [ebx+ecx*8],ebp
  40fecf:	cmc    
  40fed0:	ins    BYTE PTR es:[edi],dx
  40fed1:	sub    eax,0xea44aaff
  40fed6:	loope  0x40ff41
  40fed8:	popf   
  40fed9:	in     al,dx
  40feda:	test   DWORD PTR [ebx+0x6],edx
  40fedd:	and    DWORD PTR [edi-0x33],edx
  40fee0:	sub    ecx,DWORD PTR [ecx+0x4b]
  40fee3:	popf   
  40fee4:	jno    0x40fea7
  40fee6:	mov    eax,0xbd9b6e9c
  40feeb:	jecxz  0x40fe70
  40feed:	jge    0x40ff1a
  40feef:	je     0x40ff1c
  40fef1:	dec    eax
  40fef2:	dec    edi
  40fef3:	daa    
  40fef4:	lods   al,BYTE PTR ds:[esi]
  40fef5:	dec    ecx
  40fef6:	jecxz  0x40fe94
  40fef8:	pop    es
  40fef9:	les    eax,FWORD PTR [edx]
  40fefb:	push   ebp
  40fefc:	jbe    0x40ff20
  40fefe:	das    
  40feff:	jb     0x40fee2
  40ff01:	sub    DWORD PTR [eax-0x721d870b],esi
  40ff07:	clc    
  40ff08:	scas   eax,DWORD PTR es:[edi]
  40ff09:	xor    eax,0x381b73c3
  40ff0e:	por    mm0,QWORD PTR [ecx-0x64bb1afb]
  40ff15:	fs ror al,cl
  40ff18:	jmp    0xa0f0d6f
  40ff1d:	cmp    eax,0x3dbb5ecd
  40ff22:	es inc esp
  40ff24:	in     al,0x71
  40ff26:	jmp    0xba5d:0xae0f6718
  40ff2d:	stc    
  40ff2e:	mov    eax,0x10b27ab5
  40ff33:	out    dx,al
  40ff34:	push   eax
  40ff35:	cmp    ecx,DWORD PTR [edi]
  40ff37:	js     0x40ffa7
  40ff39:	fbstp  TBYTE PTR [ebp-0x2cf3dc2a]
  40ff3f:	(bad)  
  40ff40:	mov    bl,0x84
  40ff42:	imul   edi,DWORD PTR [esi],0xffffff86
  40ff45:	push   ebp
  40ff46:	ror    DWORD PTR [eax-0x8c0cf53],cl
  40ff4c:	(bad)  
  40ff4d:	icebp  
  40ff4e:	sbb    dl,BYTE PTR [ebp+0x58]
  40ff51:	daa    
  40ff52:	lods   eax,DWORD PTR ds:[esi]
  40ff53:	fld    QWORD PTR [esi]
  40ff55:	xor    BYTE PTR [edi-0x61],ch
  40ff58:	in     eax,0x1
  40ff5a:	sbb    al,0x1e
  40ff5c:	add    BYTE PTR [esi-0x36],cl
  40ff5f:	pop    es
  40ff60:	jp     0x40ff98
  40ff62:	ret    0x92eb
  40ff65:	mov    ds:0x86df42d1,al
  40ff6a:	sbb    BYTE PTR [eax+0x3f],0xcd
  40ff6e:	add    DWORD PTR [ecx],ecx
  40ff70:	xor    dh,al
  40ff72:	sahf   
  40ff73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff74:	xchg   ebx,eax
  40ff75:	(bad)  
  40ff76:	cmp    bh,BYTE PTR [esp+ebx*1+0x55dc575c]
  40ff7d:	pop    ecx
  40ff7e:	pop    ss
  40ff7f:	inc    eax
  40ff80:	gs inc eax
  40ff82:	or     cl,ah
  40ff84:	or     BYTE PTR [ebx+0x16e93cb0],0x80
  40ff8b:	lods   al,BYTE PTR ds:[esi]
  40ff8c:	jae    0x40ff5d
  40ff8e:	jle    0x40ffce
  40ff90:	dec    ebp
  40ff91:	clc    
  40ff92:	stos   DWORD PTR es:[edi],eax
  40ff93:	in     al,0xb4
  40ff95:	shl    BYTE PTR fs:[ecx+0x6e9de10f],1
  40ff9c:	mov    ecx,0xc4db996f
  40ffa1:	xor    BYTE PTR [ebx-0x72],bh
  40ffa4:	jmp    0xc708:0x25bcee33
  40ffab:	fwait
  40ffac:	push   edx
  40ffad:	xor    eax,0x896952e4
  40ffb2:	add    cl,BYTE PTR [esi]
  40ffb4:	pop    es
  40ffb5:	xchg   ebp,eax
  40ffb6:	add    dl,al
  40ffb8:	and    eax,0xb2bfc591
  40ffbd:	mov    bh,0xc2
  40ffbf:	ror    BYTE PTR [ebp-0x52],0x39
  40ffc3:	jmp    0x40ff70
  40ffc5:	inc    edx
  40ffc6:	mov    DWORD PTR [edi+eiz*4+0x5a],esp
  40ffca:	and    eax,0x896f7f05
  40ffcf:	xchg   ebp,eax
  40ffd0:	pop    es
  40ffd1:	cli    
  40ffd2:	jmp    0x2f1bd289
  40ffd7:	jnp    0x40ff7f
  40ffd9:	iret   
  40ffda:	call   0x568d7487
  40ffdf:	lea    eax,[edi]
  40ffe1:	addr16 (bad) 
  40ffe3:	in     eax,0xc3
  40ffe5:	inc    esp
  40ffe6:	jle    0x410024
  40ffe8:	sbb    cl,BYTE PTR [eax]
  40ffea:	jmp    0x9ffad497
  40ffef:	pop    ss
  40fff0:	scas   eax,DWORD PTR es:[edi]
  40fff1:	pop    ebp
  40fff2:	data16 cmp BYTE PTR [ebp+0x4b7507e8],bh
  40fff9:	and    eax,0x491fa822
  40fffe:	pop    ebp
  40ffff:	fdivr  st,st(0)
  410001:	outs   dx,DWORD PTR ds:[esi]
  410002:	popf   
  410003:	je     0x41003a
  410005:	ins    BYTE PTR es:[edi],dx
  410006:	sbb    al,0x92
  410008:	dec    ebp
  410009:	(bad)  
  41000a:	sbb    BYTE PTR [esi],cl
  41000c:	pop    esp
  41000d:	pop    ds
  41000e:	jg     0x410075
  410010:	push   ebp
  410011:	push   ecx
  410012:	or     DWORD PTR [esi-0x68],edi
  410015:	idiv   BYTE PTR [esp+edx*4+0x7d]
  410019:	dec    ebx
  41001a:	(bad)  
  41001b:	sbb    al,0xd1
  41001d:	xchg   esi,eax
  41001e:	(bad)  
  410020:	mov    eax,0x1e546d68
  410025:	cmp    bh,BYTE PTR [esi+eax*8+0x6d77ec89]
  41002c:	out    0x84,eax
  41002e:	ss dec ebx
  410030:	rol    BYTE PTR [ebx],1
  410032:	adc    eax,0x1bcf1518
  410037:	loop   0x410097
  410039:	loope  0x410000
  41003b:	push   esp
  41003c:	inc    esp
  41003d:	mov    ah,0xd9
  41003f:	cmp    esi,DWORD PTR [esi+0x69]
  410042:	mov    dl,0x77
  410044:	loope  0x40fffd
  410046:	or     eax,0xd86570d6
  41004b:	gs and al,0xb5
  41004e:	mov    al,0x3e
  410050:	in     al,0x47
  410052:	or     DWORD PTR [edx],0x66023d05
  410058:	retf   
  410059:	out    0xb9,eax
  41005b:	fld    TBYTE PTR [eax-0x56e29516]
  410061:	out    0xff,eax
  410063:	es popf 
  410065:	add    al,0x82
  410067:	or     DWORD PTR [esi],edi
  410069:	scas   al,BYTE PTR es:[edi]
  41006a:	or     ch,BYTE PTR [edi-0x6a0a6a5]
  410070:	daa    
  410071:	ins    BYTE PTR es:[edi],dx
  410072:	sbb    ebp,esp
  410074:	lock mov fs,WORD PTR [ebx+0x148d885]
  41007b:	sti    
  41007c:	inc    eax
  41007d:	sbb    eax,0x49132db3
  410082:	xchg   ecx,eax
  410083:	inc    ebp
  410084:	push   0xffffff83
  410086:	cmp    ebp,esi
  410088:	pop    ecx
  410089:	fsub   st,st(3)
  41008b:	mov    edx,0x8abc7448
  410090:	out    0x8a,eax
  410092:	fmul   DWORD PTR [edx-0x28]
  410095:	xchg   edx,eax
  410096:	mov    ah,0x24
  410098:	push   0x30
  41009a:	push   cs
  41009b:	fcmovnb st,st(0)
  41009d:	pop    edi
  41009e:	jo     0x41005f
  4100a0:	shl    DWORD PTR [eax-0x250c2b6e],1
  4100a6:	(bad)  
  4100a7:	push   edx
  4100a8:	sub    eax,0xa15cb5fc
  4100ad:	or     ebx,DWORD PTR [ebp-0x43]
  4100b0:	and    ah,BYTE PTR [eax-0x1515526a]
  4100b6:	jle    0x41006e
  4100b8:	ja     0x4100b1
  4100ba:	jns    0x4100a4
  4100bc:	dec    ecx
  4100bd:	in     eax,dx
  4100be:	jp     0x410092
  4100c0:	jecxz  0x4100ea
  4100c2:	sbb    al,0xb4
  4100c4:	xor    esp,DWORD PTR [esi+0x4c]
  4100c7:	mov    ah,0xbd
  4100c9:	inc    ebx
  4100ca:	lea    ebp,ds:0xd67ab8c0
  4100d0:	test   DWORD PTR [ebp-0x69],esi
  4100d3:	inc    edi
  4100d4:	xor    BYTE PTR [edi+esi*1-0x6e7dc9cd],ah
  4100db:	stos   DWORD PTR es:[edi],eax
  4100dc:	xchg   edi,eax
  4100dd:	nop
  4100de:	pop    edi
  4100df:	xor    al,0xef
  4100e1:	adc    eax,0x4a297e03
  4100e6:	repz jmp 0x4100ff
  4100e9:	xchg   ebp,eax
  4100ea:	and    BYTE PTR [ecx-0x23],cl
  4100ed:	xor    al,0x41
  4100ef:	or     bh,bl
  4100f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f2:	push   edi
  4100f3:	(bad)  
  4100f4:	dec    edx
  4100f5:	push   ss
  4100f6:	sub    al,0x2
  4100f8:	and    ch,bl
  4100fa:	sub    al,0x8f
  4100fc:	cdq    
  4100fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100fe:	push   0xf6b0dc47
  410103:	mov    ah,dl
  410105:	add    eax,0x8dc224e3
  41010a:	enter  0x971e,0x30
  41010e:	dec    ebp
  41010f:	lods   eax,DWORD PTR ds:[esi]
  410110:	pop    ds
  410111:	cmp    DWORD PTR [edx-0x66a2f0b],ebx
  410117:	add    ah,BYTE PTR [esi-0x5e]
  41011a:	popa   
  41011b:	aas    
  41011c:	test   dh,dh
  41011e:	jnp    0x4100a1
  410120:	in     al,dx
  410121:	pusha  
  410122:	mov    es,WORD PTR [eax-0x60]
  410125:	sbb    eax,0x16bb9874
  41012a:	mov    DWORD PTR [ecx+0xd6b4e1],ecx
  410130:	stos   BYTE PTR es:[edi],al
  410131:	int3   
  410132:	mov    BYTE PTR [edi-0x45],cl
  410135:	fldenv [edi]
  410137:	xchg   esp,eax
  410138:	cmp    DWORD PTR [ebx+0x25],edx
  41013b:	or     dh,BYTE PTR [ebp-0x1fba1622]
  410141:	and    DWORD PTR [eax-0x59],ebx
  410144:	mov    edx,0x959d51b1
  410149:	inc    eax
  41014a:	scas   eax,DWORD PTR es:[edi]
  41014b:	mov    bl,0x20
  41014d:	xchg   esp,eax
  41014e:	ret    0x893c
  410151:	(bad)  
  410152:	test   eax,0xd9fdb2d1
  410157:	xlat   BYTE PTR ds:[ebx]
  410158:	jmp    0x5368:0xdd547b5
  41015f:	sub    ah,BYTE PTR [ebp+edi*2-0xc]
  410163:	sbb    dl,BYTE PTR [esi+0x9]
  410166:	lock xor eax,0xcfc13516
  41016c:	ficom  WORD PTR [ecx+0x6a]
  41016f:	outs   dx,DWORD PTR ds:[esi]
  410170:	cmp    eax,0x9dc4972f
  410175:	sub    esp,DWORD PTR [ebx]
  410177:	dec    ecx
  410178:	or     ebx,DWORD PTR [ebx-0x37]
  41017b:	and    BYTE PTR [ecx],al
  41017d:	inc    ecx
  41017e:	add    edi,DWORD PTR [ebx-0x3]
  410181:	inc    edi
  410182:	call   0xcd28:0x2457a522
  410189:	push   ecx
  41018a:	and    ecx,ebp
  41018c:	sbb    edi,edi
  41018e:	loop   0x41014f
  410190:	jnp    0x410184
  410192:	add    al,0xf7
  410194:	cdq    
  410195:	enter  0x2002,0xf3
  410199:	mov    esp,0x5808a376
  41019e:	sub    eax,0x1d72238f
  4101a3:	data16 fnsetpm(287 only) 
  4101a6:	xchg   esi,eax
  4101a7:	dec    eax
  4101a8:	popf   
  4101a9:	and    esi,esp
  4101ab:	mov    bl,0xa1
  4101ad:	mov    al,BYTE PTR [ebp-0x432e38f8]
  4101b3:	loopne 0x4101ee
  4101b5:	mov    cl,0xdc
  4101b7:	ror    BYTE PTR [edx+edx*2-0x7f2d8a31],0x42
  4101bf:	inc    ebp
  4101c0:	jmp    0x4101bb
  4101c2:	rol    DWORD PTR [edi+0x75741b90],1
  4101c8:	std    
  4101c9:	adc    DWORD PTR [ecx+0x2f8ce176],ebp
  4101cf:	pop    ecx
  4101d0:	pop    ecx
  4101d1:	ja     0x4101cd
  4101d3:	inc    esi
  4101d4:	je     0x4101c0
  4101d6:	jns    0x41021d
  4101d8:	mov    ebp,0xadf0d7ff
  4101dd:	ss push eax
  4101df:	cmp    ebx,DWORD PTR [ecx-0x1d]
  4101e2:	das    
  4101e3:	stc    
  4101e4:	lea    ebp,ds:0x6f210bc4
  4101ea:	es mov bh,0x6b
  4101ed:	inc    esp
  4101ee:	test   al,0x2b
  4101f0:	mov    esp,0x95eb9752
  4101f5:	shl    dh,cl
  4101f7:	sub    al,0x67
  4101f9:	(bad)  
  4101fa:	jno    0x4101ef
  4101fc:	xor    ecx,DWORD PTR [edi-0x74]
  4101ff:	(bad)  
  410201:	lea    ecx,[edx+0x193b3eb4]
  410207:	popf   
  410208:	(bad)  
  410209:	sbb    dh,al
  41020b:	adc    al,BYTE PTR [ebp-0x42]
  41020e:	inc    edx
  41020f:	xchg   esp,eax
  410210:	cmp    dh,bh
  410212:	add    bh,0x67
  410215:	int    0xbc
  410217:	xor    al,0x5c
  410219:	popf   
  41021a:	and    BYTE PTR [esi+0x51],ch
  41021d:	dec    esi
  41021e:	push   ss
  41021f:	and    bl,BYTE PTR [ecx+0x14]
  410222:	ret    
  410223:	sbb    al,0x33
  410225:	mov    eax,0x4890b645
  41022a:	xor    eax,0xb46386cc
  41022f:	dec    ebx
  410230:	(bad)  
  410231:	xchg   esi,eax
  410232:	jb     0x41027b
  410234:	or     DWORD PTR [edx+0x26],0xffffffc0
  410238:	pop    ebp
  410239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41023a:	inc    ebx
  41023b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41023c:	add    bh,bl
  41023e:	cs mov ecx,0x8e1621bc
  410244:	or     al,0xc8
  410246:	rcr    esp,cl
  410248:	prefetch BYTE PTR [esi+ebx*2]
  41024c:	add    DWORD PTR [esi+0x4c50567e],0x486945a
  410256:	sub    eax,0xae4933fb
  41025b:	or     edx,edx
  41025d:	dec    esp
  41025e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41025f:	push   esi
  410260:	or     edi,DWORD PTR [eax+eiz*8+0x3d2f7aec]
  410267:	inc    eax
  410268:	xchg   ebx,eax
  410269:	test   DWORD PTR [ebx+0x4f],esp
  41026c:	aaa    
  41026d:	dec    ebx
  41026e:	sbb    eax,0x9b916bd1
  410273:	sub    eax,DWORD PTR [esi+0x4d]
  410276:	sub    eax,DWORD PTR [edx+ecx*8]
  410279:	div    ebp
  41027b:	test   eax,0x34a4fb7
  410280:	mov    esi,0xadae21a0
  410285:	xchg   BYTE PTR [ecx],dl
  410287:	and    eax,0xee409a39
  41028c:	and    DWORD PTR [edx+eiz*1-0x1f2ee4c4],edi
  410293:	inc    edi
  410294:	test   al,0x48
  410296:	push   edx
  410297:	inc    ecx
  410298:	xor    eax,0xfe7d2cda
  41029d:	sti    
  41029e:	jae    0x4102e0
  4102a0:	mov    WORD PTR [esp+eax*1],gs
  4102a3:	sbb    cl,BYTE PTR ds:0x4ade4736
  4102a9:	cdq    
  4102aa:	in     al,dx
  4102ab:	adc    al,0x9f
  4102ad:	mov    eax,ds:0xb78b29ad
  4102b2:	adc    al,0x6d
  4102b4:	cmp    eax,0x4e080aef
  4102b9:	leave  
  4102ba:	pusha  
  4102bb:	rcl    edi,1
  4102bd:	dec    edi
  4102be:	mov    ah,0x84
  4102c0:	sbb    BYTE PTR [edi+0x2d446d42],0xae
  4102c7:	pop    edx
  4102c8:	sbb    al,0x48
  4102ca:	add    DWORD PTR [edi],esi
  4102cc:	std    
  4102cd:	cmc    
  4102ce:	cmp    ebx,ebx
  4102d0:	cdq    
  4102d1:	cmp    DWORD PTR [esi],edi
  4102d3:	pop    ebp
  4102d4:	jle    0x410263
  4102d6:	mov    dl,0xd2
  4102d8:	js     0x410345
  4102da:	push   ds
  4102db:	push   ebp
  4102dc:	fucomp st(2)
  4102de:	fcmovu st,st(4)
  4102e0:	add    esi,DWORD PTR [ebp-0x52]
  4102e3:	dec    eax
  4102e4:	push   0x105cf8e5
  4102e9:	lock clc 
  4102eb:	into   
  4102ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ed:	cmc    
  4102ee:	or     eax,0x7cbf1e5b
  4102f3:	loop   0x410282
  4102f5:	outs   dx,BYTE PTR gs:[esi]
  4102f7:	es jne 0x41027e
  4102fa:	sbb    eax,0xf5c09a54
  4102ff:	sti    
  410300:	daa    
  410301:	push   0xffffffe1
  410303:	adc    dl,0x3d
  410306:	les    ebx,FWORD PTR [ebx+0x4dc59cd0]
  41030c:	add    eax,0x31c17f32
  410311:	lods   al,BYTE PTR ds:[esi]
  410312:	push   ebx
  410313:	pop    ebx
  410314:	stos   DWORD PTR es:[edi],eax
  410315:	ror    BYTE PTR [ebp-0x4c],0xb5
  410319:	mov    eax,edi
  41031b:	inc    eax
  41031c:	mov    eax,ds:0x2517d74e
  410321:	push   edx
  410322:	iret   
  410323:	std    
  410324:	push   edi
  410325:	nop
  410326:	xor    BYTE PTR [ecx],0xf2
  410329:	stos   BYTE PTR es:[edi],al
  41032a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41032b:	int    0xd3
  41032d:	jb     0x4102c6
  41032f:	jge    0x41036e
  410331:	test   BYTE PTR [ecx+0x2de5072],ch
  410337:	pop    ss
  410338:	lods   eax,DWORD PTR ds:[esi]
  410339:	sbb    ch,BYTE PTR [ecx+edi*8+0x48]
  41033d:	push   0x3e
  41033f:	(bad)  
  410340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410341:	jne    0x410346
  410343:	pop    ebx
  410344:	in     eax,0x19
  410346:	push   cs
  410347:	out    0x70,al
  410349:	add    eax,0xb25736d4
  41034e:	inc    esp
  41034f:	iret   
  410350:	neg    BYTE PTR [eax]
  410352:	inc    esp
  410353:	sbb    BYTE PTR ds:0x21cfd86,dh
  410359:	push   cs
  41035a:	cmp    ebx,DWORD PTR [ebp-0x3c]
  41035d:	mov    ch,0x5
  41035f:	pop    ecx
  410360:	imul   edx,DWORD PTR [edi+0x54],0x19c91293
  410367:	xor    ebp,DWORD PTR [esi+ecx*1+0x4c5e1993]
  41036e:	cmp    esi,DWORD PTR [edx]
  410370:	jno    0x4103bf
  410372:	cmp    bh,BYTE PTR [eax]
  410374:	mov    ecx,0xd73e7efc
  410379:	and    BYTE PTR [ebp-0x1a],ah
  41037c:	or     eax,0xac26b477
  410381:	push   ss
  410382:	push   ecx
  410383:	push   ebp
  410384:	xchg   edx,eax
  410385:	int    0x0
  410387:	int    0x12
  410389:	inc    edx
  41038a:	out    0x98,al
  41038c:	sbb    BYTE PTR [eax+eax*4+0x4c5b4105],ch
  410393:	or     bh,ch
  410395:	dec    edi
  410396:	ins    DWORD PTR es:[edi],dx
  410397:	mov    bl,0xbd
  410399:	and    al,0x79
  41039b:	adc    ecx,DWORD PTR [ebx]
  41039d:	jg     0x410341
  41039f:	fisubr WORD PTR [ecx+0x6a3206a6]
  4103a5:	(bad)  
  4103a6:	cli    
  4103a7:	pop    esp
  4103a8:	push   0xffffffcf
  4103aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ab:	jle    0x4103bf
  4103ad:	stos   DWORD PTR es:[edi],eax
  4103ae:	mov    al,0xa7
  4103b0:	push   esp
  4103b1:	hlt    
  4103b2:	and    BYTE PTR [ebx],dh
  4103b4:	cli    
  4103b5:	push   ss
  4103b6:	and    eax,0xdd7bd6c3
  4103bb:	dec    esi
  4103bc:	and    edx,ebx
  4103be:	(bad)  
  4103bf:	fisubr WORD PTR [esi-0x21]
  4103c2:	(bad)  
  4103c3:	pop    ss
  4103c4:	repnz inc ebx
  4103c6:	xor    eax,DWORD PTR [eax]
  4103c8:	scas   al,BYTE PTR es:[edi]
  4103c9:	outs   dx,DWORD PTR ds:[esi]
  4103ca:	sub    eax,0xe272d38
  4103cf:	sti    
  4103d0:	call   0xa6adcd59
  4103d5:	cmp    eax,DWORD PTR [ecx-0x904f15f]
  4103db:	pusha  
  4103dc:	fwait
  4103dd:	or     eax,DWORD PTR [edi+0x5dc3f19b]
  4103e3:	jecxz  0x4103b2
  4103e5:	mov    DWORD PTR [esi],ebx
  4103e7:	outs   dx,BYTE PTR ds:[esi]
  4103e8:	fbstp  TBYTE PTR [edx]
  4103ea:	and    al,0x3d
  4103ec:	adc    eax,0xb80840f8
  4103f1:	fldenv [ebp+0x5]
  4103f4:	push   ecx
  4103f5:	sbb    BYTE PTR [eax-0xad21e5f],0x14
  4103fc:	sub    eax,0x508b3663
  410401:	inc    edi
  410402:	mov    edx,0x4851b4a4
  410407:	mov    eax,ds:0xc762106
  41040c:	arpl   ax,sp
  41040e:	ret    
  41040f:	dec    ecx
  410410:	pop    es
  410411:	xor    ecx,esi
  410413:	mov    esp,0x5d77425a
  410418:	pop    edx
  410419:	jns    0x4103f5
  41041b:	sbb    eax,0xba2158b9
  410420:	data16 add BYTE PTR [edi+0xe],0xff
  410425:	lahf   
  410426:	ss retf 
  410428:	sar    DWORD PTR [edi],cl
  41042a:	pop    es
  41042b:	data16 aad 0xa
  41042e:	fs pop edx
  410430:	orps   xmm7,XMMWORD PTR gs:[ecx-0x64d15e2]
  410438:	adc    DWORD PTR [ebp-0x88a4734],ebx
  41043e:	push   edi
  41043f:	mov    ah,0xa1
  410441:	push   edx
  410442:	dec    esp
  410443:	rcr    DWORD PTR [eax+eiz*2],cl
  410446:	adc    eax,0xf46d8243
  41044b:	fcmove st,st(6)
  41044d:	pop    ds
  41044e:	inc    edi
  41044f:	mov    ecx,edx
  410451:	and    ebx,DWORD PTR [edi-0x74]
  410454:	jae    0x410465
  410456:	mov    eax,0xcf3cf190
  41045b:	out    0x32,eax
  41045d:	cmp    DWORD PTR [edi-0x28d9a463],ebp
  410463:	les    esi,FWORD PTR [ecx+0x5c]
  410466:	fisubr WORD PTR [edx+0x66]
  410469:	(bad)  
  41046b:	stos   BYTE PTR es:[edi],al
  41046c:	test   DWORD PTR [edx+ebx*2+0x1c0db038],edi
  410473:	sub    al,bl
  410475:	or     cl,ch
  410477:	cs jp  0x4103fb
  41047a:	and    bl,BYTE PTR [esi-0x2b]
  41047d:	pop    edx
  41047e:	mov    cs,WORD PTR [ecx-0x38ccf45c]
  410484:	dec    edi
  410485:	add    BYTE PTR [ecx-0x57],dl
  410488:	stos   BYTE PTR es:[edi],al
  410489:	ret    
  41048a:	dec    eax
  41048b:	(bad)  
  41048c:	adc    dh,cl
  41048e:	inc    ebx
  41048f:	stos   BYTE PTR es:[edi],al
  410490:	mov    esp,0xa141988e
  410495:	push   eax
  410496:	aas    
  410497:	lea    eax,[edx]
  410499:	sub    eax,esi
  41049b:	test   BYTE PTR [ebp+0x531b0fe4],0x3d
  4104a2:	retf   0xb64c
  4104a5:	popa   
  4104a6:	sbb    al,0x2e
  4104a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104aa:	aas    
  4104ab:	sti    
  4104ac:	cmp    edi,DWORD PTR [ebx]
  4104ae:	push   cs
  4104af:	push   ss
  4104b0:	not    BYTE PTR [ebp-0x4a]
  4104b3:	jp     0x4104de
  4104b5:	in     al,0xa5
  4104b7:	fmul   st(1),st
  4104b9:	add    esi,DWORD PTR [edi+esi*1+0x6cdbc5e1]
  4104c0:	mov    dh,0xe0
  4104c2:	jmp    0xce86:0xda5c1b26
  4104c9:	fstp   DWORD PTR [esi-0x3ef5833e]
  4104cf:	adc    edi,DWORD PTR [eax-0x42]
  4104d2:	cmp    DWORD PTR [edx+esi*8+0x6373495a],ebp
  4104d9:	xor    eax,0x7df5e8c5
  4104de:	cwde   
  4104df:	mov    eax,DWORD PTR [eax-0x32f34d55]
  4104e5:	sahf   
  4104e6:	inc    esi
  4104e7:	sahf   
  4104e8:	cmc    
  4104e9:	aas    
  4104ea:	test   eax,0xfa4b7b37
  4104ef:	fstp   TBYTE PTR [ecx-0x26]
  4104f2:	push   ss
  4104f3:	adc    al,ch
  4104f5:	push   0xeae6e75c
  4104fa:	dec    edi
  4104fb:	popw   ss
  4104fd:	ds nop
  4104ff:	cmp    ebx,ecx
  410501:	aad    0x46
  410503:	std    
  410504:	inc    edx
  410505:	out    dx,eax
  410506:	test   eax,0xa911ca9e
  41050b:	rcr    BYTE PTR [eax-0x18],0xe0
  41050f:	ret    
  410510:	xor    ah,BYTE PTR [edi]
  410512:	xlat   BYTE PTR ds:[ebx]
  410513:	mov    ds:0x3b371992,al
  410518:	jmp    0x410533
  41051a:	pop    ds
  41051b:	jmp    0x410528
  41051d:	inc    edi
  41051e:	loop   0x4104df
  410520:	add    bl,dh
  410522:	xchg   ebp,eax
  410523:	pusha  
  410524:	into   
  410525:	cmp    eax,0x47ab9152
  41052a:	xchg   BYTE PTR [edi],ah
  41052c:	shr    eax,0x91
  41052f:	cmp    ch,al
  410531:	cmovp  eax,ebx
  410534:	mov    BYTE PTR [esi+esi*1],bl
  410537:	mov    ebx,0x22ed22c
  41053c:	and    esi,DWORD PTR [edx+0x5e80ebd0]
  410542:	pop    ds
  410543:	pop    es
  410544:	mov    ah,0x40
  410546:	jb     0x410525
  410548:	ja     0x4105b5
  41054a:	loope  0x4105c8
  41054c:	mov    dl,0x7e
  41054e:	hlt    
  41054f:	addr16 sbb cl,bh
  410552:	xchg   DWORD PTR gs:[eax+0x7a],esp
  410556:	(bad)
  410559:	lea    edi,[ebx]
  41055b:	sub    edi,DWORD PTR [ebx-0x2f]
  41055e:	out    0x2c,eax
  410560:	sbb    BYTE PTR ds:0x84d0ff19,ch
  410566:	pop    ebx
  410567:	cdq    
  410568:	jge    0x4105a8
  41056a:	pusha  
  41056b:	enter  0x28fc,0x9a
  41056f:	in     al,dx
  410570:	pop    edi
  410571:	adc    dh,0x46
  410574:	and    bl,ch
  410576:	pushf  
  410577:	rcr    BYTE PTR [ecx],1
  410579:	jmp    0x4d2d84cc
  41057e:	xchg   ebx,eax
  41057f:	adc    ebx,DWORD PTR [edi-0x4c]
  410582:	imul   dh
  410584:	jecxz  0x41053d
  410586:	and    al,0x92
  410588:	je     0x410511
  41058a:	nop
  41058b:	rcl    BYTE PTR [ecx+0x21ed847d],cl
  410591:	jae    0x41060f
  410593:	push   cs
  410594:	or     esi,DWORD PTR [ebx]
  410596:	adc    al,0xe8
  410598:	mov    cl,0x9f
  41059a:	hlt    
  41059b:	push   es
  41059c:	jmp    0x410563
  41059e:	jp     0x4105b6
  4105a0:	pop    ss
  4105a1:	pop    ecx
  4105a2:	push   esp
  4105a3:	rol    DWORD PTR [edx],0x57
  4105a6:	aam    0xb9
  4105a8:	ret    0xe736
  4105ab:	or     bl,BYTE PTR [eax-0x69]
  4105ae:	xchg   esp,eax
  4105af:	mov    al,0x2b
  4105b1:	test   DWORD PTR ds:0x7fdde0e3,eax
  4105b7:	mov    ecx,0x64b9bfbd
  4105bc:	mov    eax,ds:0x6f520564
  4105c1:	fild   WORD PTR [ebp+0x679425f]
  4105c7:	push   0x91eb4fdd
  4105cc:	xor    eax,0x5b5aa87
  4105d1:	inc    esi
  4105d2:	aad    0xcc
  4105d4:	cmp    BYTE PTR [eax],bh
  4105d6:	and    DWORD PTR [esp+esi*1],esi
  4105d9:	in     eax,dx
  4105da:	pop    ebx
  4105db:	pop    ebp
  4105dc:	popf   
  4105dd:	fld    DWORD PTR [edx]
  4105df:	icebp  
  4105e0:	dec    eax
  4105e1:	rol    DWORD PTR [esi+edi*8-0x44b264cc],1
  4105e8:	or     BYTE PTR [ebp-0x1d3f517c],ch
  4105ee:	cmp    ah,dl
  4105f0:	sar    BYTE PTR [ebx+0x503e8d36],1
  4105f6:	or     DWORD PTR [esi-0x35],esi
  4105f9:	popa   
  4105fa:	dec    eax
  4105fb:	(bad)  
  4105fd:	daa    
  4105fe:	sbb    ch,BYTE PTR [eax+0x73]
  410601:	imul   eax,edi,0x12
  410604:	or     eax,0x5b6d4246
  410609:	inc    edx
  41060a:	pop    es
  41060b:	(bad)
  41060e:	inc    ebp
  41060f:	mov    ah,0xf6
  410611:	mov    al,bl
  410613:	and    ah,BYTE PTR [ebp-0x645979cd]
  410619:	xor    DWORD PTR [ecx+0x4dca0445],ebp
  41061f:	mov    edi,0xb355c59a
  410624:	in     eax,dx
  410625:	mul    DWORD PTR [esi-0x6c]
  410628:	sbb    al,0xa6
  41062a:	dec    ch
  41062c:	call   0x6e2d:0x4104b8d3
  410633:	or     DWORD PTR [edi-0x4f],ebx
  410636:	mov    esp,0x3d1b8bcf
  41063b:	jo     0x410646
  41063d:	and    ch,BYTE PTR [edi]
  41063f:	test   eax,0x6282708f
  410644:	sub    al,BYTE PTR [eax+edi*8-0x47]
  410648:	pop    esi
  410649:	push   ds
  41064a:	scas   al,BYTE PTR es:[edi]
  41064b:	and    bh,BYTE PTR [ecx-0x50e26f29]
  410651:	add    DWORD PTR [edi+0x3febca6f],esi
  410657:	dec    eax
  410658:	out    dx,al
  410659:	adc    eax,0xcb920e71
  41065e:	(bad)  
  41065f:	sbb    ebx,DWORD PTR ds:0x49a1e35e
  410665:	jecxz  0x41062b
  410667:	cmp    DWORD PTR [edx+eax*4],ebx
  41066a:	cmp    eax,0x19d31c17
  41066f:	mov    ds:0x9cd5dc,al
  410674:	mov    dl,0xd5
  410676:	jae    0x4105f9
  410678:	mov    edx,0xdec1d867
  41067d:	outs   dx,DWORD PTR ds:[esi]
  41067e:	adc    al,0x74
  410680:	mov    al,ds:0xc5a44d4d
  410685:	ins    DWORD PTR es:[edi],dx
  410686:	lea    edx,[edx-0x64]
  410689:	fdivr  DWORD PTR [eax-0x57]
  41068c:	mov    bh,0xf4
  41068e:	(bad)  
  41068f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410690:	(bad)  
  410691:	push   edi
  410692:	pop    ss
  410693:	push   eax
  410694:	and    DWORD PTR [eax],esp
  410696:	imul   ebp,DWORD PTR [eax+0x22],0x26
  41069a:	int    0x4a
  41069c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41069d:	xchg   esp,eax
  41069e:	jp     0x410657
  4106a0:	mov    edi,0x2ee0fbbe
  4106a5:	pushf  
  4106a6:	arpl   WORD PTR [ecx],ax
  4106a8:	or     eax,0x7c1888e4
  4106ad:	pop    esp
  4106ae:	lods   al,BYTE PTR ds:[esi]
  4106af:	enter  0x6fe9,0x3
  4106b3:	xor    DWORD PTR [edx-0xf],esp
  4106b6:	or     al,0x28
  4106b8:	mov    bl,0x82
  4106ba:	dec    ebx
  4106bb:	bound  ebp,QWORD PTR [ebx+0x3d34572]
  4106c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106c2:	mov    ds:0x5e44fb8b,eax
  4106c7:	inc    eax
  4106c8:	xchg   ebx,eax
  4106c9:	push   ss
  4106ca:	mov    ebx,0x49a332b4
  4106cf:	in     eax,0x68
  4106d1:	jmp    0x410737
  4106d3:	int3   
  4106d4:	jmp    0x1664:0xd5b9e086
  4106db:	dec    edi
  4106dc:	add    eax,0x899f707d
  4106e1:	mov    eax,0x2665ce1e
  4106e6:	fnstenv [ecx+eiz*2+0x52d39b02]
  4106ed:	inc    eax
  4106ee:	pop    esi
  4106ef:	dec    ebx
  4106f0:	in     eax,dx
  4106f1:	aas    
  4106f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106f3:	clc    
  4106f4:	lock push 0x8ebfa065
  4106fa:	jmp    0x410725
  4106fc:	fdivr  DWORD PTR [edx]
  4106fe:	mov    ebx,0x4ba4fa5f
  410703:	xor    al,0xca
  410705:	add    dl,BYTE PTR [eax+0x10f70114]
  41070b:	stos   BYTE PTR es:[edi],al
  41070c:	out    dx,eax
  41070d:	or     esp,DWORD PTR [esi]
  41070f:	sbb    al,0x2
  410711:	std    
  410712:	pop    eax
  410713:	mov    esi,0xcf790fe6
  410718:	ss pop esp
  41071a:	cmp    DWORD PTR [eax-0x51],esp
  41071d:	pushf  
  41071e:	test   DWORD PTR [edi+0x30],esi
  410721:	into   
  410722:	cdq    
  410723:	fsub   DWORD PTR [ecx]
  410725:	push   ss
  410726:	mov    ch,0x13
  410728:	cld    
  410729:	jg     0x410719
  41072b:	div    DWORD PTR ds:[edi+0x71bac4de]
  410732:	add    dh,BYTE PTR [esi-0x5a]
  410735:	pop    ebx
  410736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410737:	int    0x28
  410739:	jl     0x41073c
  41073b:	push   edx
  41073c:	jno    0x410715
  41073e:	mov    esp,0xce29c62
  410743:	imul   edx,ecx,0x123ce335
  410749:	push   ds
  41074a:	xor    al,0x4
  41074c:	sbb    eax,0xb5e032a3
  410751:	scas   al,BYTE PTR es:[edi]
  410752:	jo     0x41076f
  410754:	and    eax,0xe8b5453e
  410759:	inc    esp
  41075a:	ret    0x3503
  41075d:	leave  
  41075e:	pusha  
  41075f:	push   esp
  410760:	sbb    BYTE PTR [edi],0x36
  410763:	sar    DWORD PTR [ebx-0x13800ad7],1
  410769:	scas   al,BYTE PTR es:[edi]
  41076a:	mov    ebp,gs
  41076c:	ins    BYTE PTR es:[edi],dx
  41076d:	sub    eax,0x9598c851
  410772:	mov    bh,0xcb
  410774:	daa    
  410775:	jbe    0x4107c2
  410777:	xchg   esp,eax
  410778:	cdq    
  410779:	pop    esi
  41077a:	(bad)  
  41077b:	out    0x38,eax
  41077d:	mov    es,WORD PTR [esi-0xa915592]
  410783:	int3   
  410784:	out    dx,al
  410785:	mov    dh,BYTE PTR [edi+edi*2]
  410788:	test   BYTE PTR [eax+0x3f9a8a45],al
  41078e:	adc    BYTE PTR [esi+0x10],dl
  410791:	push   es
  410792:	retf   0x352c
  410795:	in     eax,0x19
  410797:	pop    esp
  410798:	addr16 loop 0x410723
  41079b:	xchg   ecx,eax
  41079c:	nop
  41079d:	repz iret 
  41079f:	mov    edx,0x57f6366a
  4107a4:	aam    0xc0
  4107a6:	adc    eax,0xea5ea55b
  4107ab:	mov    eax,0x910717fe
  4107b0:	mov    eax,0x38c78dbe
  4107b5:	lahf   
  4107b6:	sbb    al,0x63
  4107b8:	push   es
  4107b9:	test   eax,0xd88ebdbe
  4107be:	push   edx
  4107bf:	pop    edx
  4107c0:	test   DWORD PTR [edx+0x3703898],ebx
  4107c6:	jnp    0x410763
  4107c8:	jp     0x41075b
  4107ca:	add    al,0xff
  4107cc:	push   es
  4107cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ce:	cld    
  4107cf:	inc    esi
  4107d0:	add    DWORD PTR [edi+0x53817277],ecx
  4107d6:	xor    DWORD PTR [ecx+esi*2+0x67],ecx
  4107da:	xor    DWORD PTR [edx-0x1a],ecx
  4107dd:	xchg   ebp,eax
  4107de:	cmp    DWORD PTR gs:[ebx],0x1c
  4107e2:	pushf  
  4107e3:	sbb    dl,bh
  4107e5:	mov    ebx,0x26085038
  4107ea:	and    eax,eax
  4107ec:	mov    edx,0xf2d21415
  4107f1:	out    dx,eax
  4107f2:	in     al,dx
  4107f3:	sub    BYTE PTR [ebp+esi*4-0x3b37b5b],dl
  4107fa:	jo     0x41086e
  4107fc:	cmp    edx,DWORD PTR [eax]
  4107fe:	loope  0x410809
  410800:	xchg   BYTE PTR [esp+eiz*4-0x629fd88],cl
  410807:	imul   ecx,DWORD PTR [ebp+0x4c0799fe],0x47c96e05
  410811:	scas   al,BYTE PTR es:[edi]
  410812:	mov    ?,WORD PTR [edi]
  410814:	xor    al,0x35
  410816:	or     ebp,DWORD PTR [ecx+0x3c1ccbbd]
  41081c:	mov    DWORD PTR [edx],edx
  41081e:	out    0xe1,eax
  410820:	test   eax,0x77f4e43d
  410825:	mov    ecx,0xc8dcca9
  41082a:	lods   eax,DWORD PTR ds:[esi]
  41082b:	xchg   esp,eax
  41082c:	jmp    0x2705:0x8bb6da6d
  410833:	or     DWORD PTR [edi+0x2ccb9a3b],eax
  410839:	in     eax,0xa8
  41083b:	sbb    eax,0x5b40b53
  410840:	jle    0x41088b
  410842:	jbe    0x41089a
  410844:	pop    es
  410845:	push   cs
  410846:	sub    eax,0x602d27b2
  41084b:	(bad)  
  41084c:	fcom   DWORD PTR [edi+0x20]
  41084f:	fstp   QWORD PTR [eax+0x69c971fc]
  410855:	test   BYTE PTR [edi+0x52],dl
  410858:	mov    es,WORD PTR [esp+ecx*8-0x51]
  41085c:	xchg   ecx,eax
  41085d:	ret    
  41085e:	add    BYTE PTR [edx+0x27],ch
  410861:	jl     0x41081e
  410863:	lods   eax,DWORD PTR ds:[esi]
  410864:	jmp    0x2f9674ee
  410869:	(bad)  
  41086a:	dec    ebp
  41086b:	fstp   st(4)
  41086d:	cmp    DWORD PTR [ebx+ebp*8-0xf],ecx
  410871:	daa    
  410872:	cli    
  410873:	shr    ebp,cl
  410875:	adc    ch,BYTE PTR [eax]
  410877:	jbe    0x410801
  410879:	mov    esp,0xd5263571
  41087e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41087f:	pop    edx
  410880:	jle    0x410869
  410882:	test   DWORD PTR [esi+edi*2-0x2b],ebp
  410886:	stos   WORD PTR es:[edi],ax
  410888:	(bad)  
  410889:	cmp    bh,BYTE PTR [eax]
  41088b:	popf   
  41088c:	mov    al,0x83
  41088e:	aas    
  41088f:	inc    esp
  410890:	leave  
  410891:	push   ss
  410892:	icebp  
  410893:	xchg   esp,eax
  410894:	push   cs
  410895:	pop    ss
  410896:	inc    esi
  410897:	jg     0x4108fc
  410899:	mov    bh,cl
  41089b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41089c:	xor    eax,0x9b0bf8a6
  4108a1:	rol    BYTE PTR [eax+0x56b85005],cl
  4108a7:	inc    eax
  4108a8:	pop    ebp
  4108a9:	adc    BYTE PTR [edx],al
  4108ab:	xchg   esi,eax
  4108ac:	fisubr WORD PTR [eax+0x36]
  4108af:	cmp    dh,dh
  4108b1:	mov    ebx,0x3b41003a
  4108b6:	and    BYTE PTR [esi+edx*2+0x23],dh
  4108ba:	cmp    DWORD PTR [ecx-0x6],0x28b95f03
  4108c1:	dec    ebp
  4108c2:	dec    ebx
  4108c3:	pop    edi
  4108c4:	mov    cl,0xf4
  4108c6:	scas   eax,DWORD PTR es:[edi]
  4108c7:	add    ecx,ecx
  4108c9:	jg     0x410914
  4108cb:	in     al,dx
  4108cc:	(bad)  
  4108ce:	sahf   
  4108cf:	imul   edi,DWORD PTR [edi-0x7ddec032],0xffffffae
  4108d6:	xor    eax,0x7d6e7e49
  4108db:	push   ecx
  4108dc:	mov    DWORD PTR [edi-0x4b],ebx
  4108df:	jge    0x4108be
  4108e1:	sub    eax,0xce2025e2
  4108e6:	rol    DWORD PTR [ebp+0x67],1
  4108e9:	test   DWORD PTR [ebx+0x23b8f01d],esi
  4108ef:	mov    gs,edi
  4108f1:	push   ds
  4108f2:	cli    
  4108f3:	or     DWORD PTR [ebp+0x8],ebx
  4108f6:	add    ebp,DWORD PTR [edx+0x9]
  4108f9:	push   edx
  4108fa:	ret    0x3bce
  4108fd:	icebp  
  4108fe:	mov    esp,0x32ae9a45
  410903:	sti    
  410904:	jae    0x4108e4
  410906:	push   esi
  410907:	sub    BYTE PTR [ecx],ch
  410909:	ss pop ds
  41090b:	sub    al,BYTE PTR [ebp-0x2d]
  41090e:	add    DWORD PTR [eax-0x2b],ecx
  410911:	jmp    0x4108a7
  410913:	dec    esi
  410914:	int    0x5c
  410916:	in     al,dx
  410917:	mov    esp,0x12b8e534
  41091c:	into   
  41091d:	mov    ch,0x18
  41091f:	or     edx,ebx
  410921:	js     0x4108d0
  410923:	mov    dh,0x62
  410925:	int    0x10
  410927:	push   ebp
  410928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410929:	shr    BYTE PTR [esi+0x53e11561],0xe4
  410930:	add    edx,ebx
  410932:	pop    edi
  410933:	std    
  410934:	xor    al,0x98
  410936:	outs   dx,BYTE PTR ds:[esi]
  410937:	repz in eax,0xa1
  41093a:	and    BYTE PTR [ecx-0x6d],bh
  41093d:	lea    edi,[ebp+0x11b9e295]
  410943:	inc    ebx
  410944:	inc    ebp
  410945:	sets   BYTE PTR fs:[edx]
  410949:	jge    0x4109c7
  41094b:	jecxz  0x4108de
  41094d:	add    BYTE PTR [eax],0x62
  410950:	add    BYTE PTR [ecx-0x49],0x91
  410954:	jbe    0x4109c2
  410956:	jmp    0x8fee3493
  41095b:	stc    
  41095c:	mov    dh,0x3d
  41095e:	adc    edx,DWORD PTR [eax+eiz*1-0x51]
  410962:	pop    ss
  410963:	fistp  QWORD PTR [ebx+ebx*8+0xd3959fa]
  41096a:	mov    al,0x5
  41096c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41096d:	jle    0x410913
  41096f:	lock sub esp,DWORD PTR [edx+0x3fe2ab87]
  410976:	arpl   WORD PTR [edi],ax
  410978:	and    eax,0x28c61bc
  41097d:	ror    BYTE PTR [edx-0x6f],0xd0
  410981:	aas    
  410982:	sti    
  410983:	(bad)  
  410984:	jnp    0x4109f3
  410986:	repnz cmp esi,DWORD PTR [eax+edi*4+0x4a8f1a9]
  41098e:	out    dx,al
  41098f:	mov    dl,0x80
  410991:	or     ebp,DWORD PTR [ebx-0x7d]
  410994:	sub    eax,0xb1105abd
  410999:	iret   
  41099a:	dec    ebx
  41099b:	mov    esp,0x42a6a733
  4109a0:	leave  
  4109a1:	inc    edi
  4109a2:	(bad)  
  4109a3:	inc    sp
  4109a5:	mov    ch,0x6
  4109a7:	mov    bl,0x60
  4109a9:	lahf   
  4109aa:	cmp    DWORD PTR [eax+0x22],esi
  4109ad:	out    dx,eax
  4109ae:	into   
  4109af:	jge    0x4109e3
  4109b1:	cmp    eax,0x9a327104
  4109b6:	mov    ah,BYTE PTR [edx]
  4109b8:	ret    0x5caf
  4109bb:	jge    0x41096d
  4109bd:	jne    0x410975
  4109bf:	cmp    al,0x7a
  4109c1:	in     al,0xa2
  4109c3:	dec    DWORD PTR [eax+0xcd639d]
  4109c9:	and    ah,cl
  4109cb:	jecxz  0x410a4c
  4109cd:	cmp    eax,0x80701380
  4109d2:	or     eax,0xda7de928
  4109d7:	pop    edx
  4109d8:	jae    0x410992
  4109da:	int    0xdc
  4109dc:	inc    esi
  4109dd:	dec    ebp
  4109de:	add    DWORD PTR gs:[ecx+0x2524b5d7],ecx
  4109e5:	in     eax,0x81
  4109e7:	xor    DWORD PTR [esi],0x2bdf54c2
  4109ed:	sbb    al,BYTE PTR [edx+0x6a]
  4109f0:	sbb    esp,DWORD PTR [esi]
  4109f2:	enter  0x6dd0,0xea
  4109f6:	sbb    DWORD PTR [edi-0x5ddf39d3],edi
  4109fc:	fbstp  TBYTE PTR [ebx]
  4109fe:	inc    edi
  4109ff:	and    ah,BYTE PTR [eax+0x1]
  410a02:	cmp    ebx,DWORD PTR [edi+esi*8-0x2098202]
  410a09:	adc    dl,BYTE PTR [edi+0x7c]
  410a0c:	loop   0x410a78
  410a0e:	mov    dh,0x35
  410a10:	lods   eax,DWORD PTR ds:[esi]
  410a11:	xchg   ebx,eax
  410a12:	xchg   ebp,eax
  410a13:	int    0xd3
  410a15:	jl     0x410a5a
  410a17:	repz or BYTE PTR [ebp+0x1327baa4],dh
  410a1e:	sbb    esi,DWORD PTR [ebp+0x5]
  410a21:	and    esi,DWORD PTR [eax-0x4fc5eeff]
  410a27:	dec    edi
  410a28:	stos   BYTE PTR es:[edi],al
  410a29:	sahf   
  410a2a:	mov    edx,0xe5814857
  410a2f:	das    
  410a30:	pop    eax
  410a31:	(bad)  
  410a32:	out    dx,al
  410a33:	mov    DWORD PTR ds:0xc8f64755,eax
  410a39:	test   ecx,edx
  410a3b:	push   cs
  410a3c:	mov    ecx,edi
  410a3e:	and    DWORD PTR [esi+0x7d],ebp
  410a41:	dec    edx
  410a42:	xchg   BYTE PTR [ecx-0x1c],bl
  410a45:	ja     0x410a12
  410a47:	or     DWORD PTR [esi+0x12],ecx
  410a4a:	cmp    esi,ecx
  410a4c:	scas   eax,DWORD PTR es:[edi]
  410a4d:	push   ebp
  410a4e:	xchg   edx,eax
  410a4f:	xlat   BYTE PTR ds:[ebx]
  410a50:	mov    dl,0x77
  410a52:	movups xmm0,XMMWORD PTR [ebp+0x6e718219]
  410a59:	pop    ebp
  410a5a:	daa    
  410a5b:	adc    DWORD PTR [esp+ebp*4],0x7b974450
  410a62:	pop    esi
  410a63:	leave  
  410a64:	dec    esp
  410a65:	push   0x62613259
  410a6a:	mov    cl,0xa5
  410a6c:	mov    ch,0xf7
  410a6e:	jns    0x410a43
  410a70:	jo     0x410a0b
  410a72:	cld    
  410a73:	jne    0x410a28
  410a75:	mov    ebx,0x67355f28
  410a7a:	out    0x17,al
  410a7c:	data16 mov cl,0x5e
  410a7f:	ret    0x8430
  410a82:	cmp    DWORD PTR [edx-0x1cc5294b],ecx
  410a88:	jo     0x410acf
  410a8a:	mov    edi,0x4675ea0d
  410a8f:	retf   0x7a2d
  410a92:	test   eax,0xd4dd8603
  410a97:	imul   ebx,DWORD PTR cs:[ebx+0x32465ed],0x26d2ba83
  410aa2:	push   ebx
  410aa3:	xor    al,0x50
  410aa5:	hlt    
  410aa6:	inc    esi
  410aa7:	mov    cl,BYTE PTR [esi-0x49]
  410aaa:	cmc    
  410aab:	mov    esi,esp
  410aad:	outs   dx,BYTE PTR ds:[esi]
  410aae:	mov    WORD PTR [ebp-0x41],?
  410ab1:	jns    0x410ac5
  410ab3:	xor    bl,dh
  410ab5:	retf   
  410ab6:	dec    eax
  410ab7:	push   cs
  410ab8:	stos   BYTE PTR es:[edi],al
  410ab9:	mov    ds:0x26ec85b9,al
  410abe:	in     al,0x91
  410ac0:	mov    DWORD PTR [ecx+0x4150c566],edx
  410ac6:	xor    al,BYTE PTR [eax]
  410ac8:	jae    0x410a9c
  410aca:	addr16 jle 0x410ae5
  410acd:	loopne 0x410a60
  410acf:	inc    esp
  410ad0:	mov    WORD PTR [edx+edx*8+0x27b1a236],es
  410ad7:	outs   dx,BYTE PTR ds:[esi]
  410ad8:	dec    esi
  410ad9:	int3   
  410ada:	dec    eax
  410adb:	and    bl,al
  410add:	add    DWORD PTR gs:[ebx-0x49],ebx
  410ae1:	nop
  410ae2:	cdq    
  410ae3:	mov    dh,0x29
  410ae5:	mov    esp,0x99bf220b
  410aea:	sti    
  410aeb:	inc    ebp
  410aec:	pop    es
  410aed:	sti    
  410aee:	mov    esp,0x23a56aa4
  410af3:	mov    ebp,DWORD PTR [esi]
  410af5:	std    
  410af6:	mov    bh,0xda
  410af8:	xchg   ecx,eax
  410af9:	mov    ds:0x6d6de21c,al
  410afe:	scas   al,BYTE PTR es:[edi]
  410aff:	inc    esi
  410b00:	retf   0xe448
  410b03:	test   DWORD PTR [edi-0x7e5d9bc6],ebx
  410b09:	fist   DWORD PTR [edx]
  410b0b:	int3   
  410b0c:	cmp    ebx,ebp
  410b0e:	mov    esi,0x9d4de2ad
  410b13:	xchg   ebx,eax
  410b14:	call   0x4ea1:0x5de2b2ba
  410b1b:	cli    
  410b1c:	add    esp,edi
  410b1e:	ins    DWORD PTR es:[edi],dx
  410b1f:	ss adc al,0xa4
  410b22:	(bad)  [esp+eiz*4+0x6097ca8c]
  410b29:	ret    
  410b2a:	shl    BYTE PTR [ebp+0x16673e11],cl
  410b30:	cmp    dl,BYTE PTR [edx]
  410b32:	jmp    0x410b9c
  410b34:	jmp    0x7137:0xc7e26a75
  410b3b:	sub    al,0xd1
  410b3d:	jbe    0x410b44
  410b3f:	add    dh,ch
  410b41:	sub    DWORD PTR [ebp+0x43],eax
  410b44:	lods   al,BYTE PTR ds:[esi]
  410b45:	in     al,0x52
  410b47:	popa   
  410b48:	push   eax
  410b49:	sbb    BYTE PTR [edx+0x16],al
  410b4c:	adc    BYTE PTR [ecx+0x17],0xac
  410b50:	fstp   QWORD PTR [edi-0x4fe5962a]
  410b56:	cs mov esi,0x57756855
  410b5c:	mov    DWORD PTR [eax+0x2c],eax
  410b5f:	(bad)  
  410b60:	sbb    eax,0x14c648ea
  410b65:	and    esi,DWORD PTR [ebx+0x7eeafee4]
  410b6b:	bound  ebp,QWORD PTR fs:[eax+0x7e6f3e13]
  410b72:	mov    ebx,0x7d9117e6
  410b77:	int    0x6b
  410b79:	in     eax,dx
  410b7a:	lock call DWORD PTR [ebp+0x1f]
  410b7e:	jnp    0x410bde
  410b80:	jo     0x410b44
  410b82:	xor    al,0xc7
  410b84:	aad    0xa4
  410b86:	or     ch,BYTE PTR [ebx-0x785cdf89]
  410b8c:	cs fwait
  410b8e:	js     0x410c06
  410b90:	shr    DWORD PTR [ebx+ecx*4+0x29],1
  410b94:	scas   al,BYTE PTR es:[edi]
  410b95:	inc    eax
  410b96:	inc    ecx
  410b97:	xchg   DWORD PTR [edi-0x9],edx
  410b9a:	sub    BYTE PTR ds:0xfffc3486,ah
  410ba0:	xchg   edx,eax
  410ba1:	in     eax,dx
  410ba2:	inc    ebx
  410ba3:	das    
  410ba4:	jno    0x410b92
  410ba6:	cmp    BYTE PTR [edi-0x37],ah
  410ba9:	jecxz  0x410bff
  410bab:	outs   dx,DWORD PTR ds:[esi]
  410bac:	adc    WORD PTR [ebp-0x75edddd1],dx
  410bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb4:	addr16 and al,0x2a
  410bb7:	je     0x410bca
  410bb9:	cmp    BYTE PTR [esi+0x42],dh
  410bbc:	retf   0x41ed
  410bbf:	aad    0x76
  410bc1:	push   eax
  410bc2:	in     eax,dx
  410bc3:	(bad)  [edx-0x15]
  410bc6:	xchg   DWORD PTR [edx+ecx*8],ebp
  410bc9:	iret   
  410bca:	jle    0x410c2c
  410bcc:	pusha  
  410bcd:	push   es
  410bce:	in     al,dx
  410bcf:	lahf   
  410bd0:	cwde   
  410bd1:	pop    ebx
  410bd2:	(bad)  
  410bd3:	jge    0x410c10
  410bd5:	scas   al,BYTE PTR es:[edi]
  410bd6:	add    edx,edx
  410bd8:	push   ebp
  410bd9:	imul   ebp,DWORD PTR [eax-0x13],0x757c3f0e
  410be0:	adc    eax,0xb7b1fb0a
  410be5:	shl    DWORD PTR [esi+0x6e],0x9d
  410be9:	pop    ecx
  410bea:	sbb    ch,dh
  410bec:	je     0x410bf5
  410bee:	cmp    eax,0xef1c2195
  410bf3:	ds pop es
  410bf5:	sub    bl,BYTE PTR [edi+0x38]
  410bf8:	inc    edi
  410bf9:	sbb    esi,edx
  410bfb:	sar    DWORD PTR [ebp-0x51],0x1d
  410bff:	dec    ebp
  410c00:	xlat   BYTE PTR ds:[ebx]
  410c01:	mov    eax,0x38301f81
  410c06:	xchg   ah,ch
  410c08:	xchg   ebp,eax
  410c09:	cli    
  410c0a:	sbb    al,0x8e
  410c0c:	popf   
  410c0d:	and    al,0xd7
  410c0f:	inc    ebp
  410c10:	jne    0x410bda
  410c12:	or     esi,DWORD PTR [edx+0x1c804d2d]
  410c18:	and    BYTE PTR [eax+0x47c0448d],dl
  410c1e:	inc    edi
  410c1f:	xor    DWORD PTR cs:[edi],0x15060ff3
  410c26:	mov    esi,0xddd51855
  410c2b:	es jmp 0x741ebbad
  410c31:	jg     0x410c8e
  410c33:	push   es
  410c34:	jnp    0x410be0
  410c36:	inc    ecx
  410c37:	sub    BYTE PTR [eax+0x19],0xd6
  410c3b:	daa    
  410c3c:	xor    eax,0x9d925be1
  410c41:	jne    0x410c08
  410c43:	mov    fs,WORD PTR [edi+ebx*8+0x1e]
  410c47:	sahf   
  410c48:	fcmovb st,st(7)
  410c4a:	cwde   
  410c4b:	xor    al,BYTE PTR [edx]
  410c4d:	xchg   ecx,eax
  410c4e:	xor    BYTE PTR [esi-0x6b0480a8],ch
  410c54:	(bad)
  410c57:	daa    
  410c58:	xchg   esp,eax
  410c59:	addr16 xor DWORD PTR [bx+0x60],eax
  410c5e:	scas   al,BYTE PTR es:[edi]
  410c5f:	fild   QWORD PTR [ebp*1+0x1b5805b0]
  410c66:	ret    0x4796
  410c69:	out    dx,eax
  410c6a:	shl    BYTE PTR [ebx-0x55],1
  410c6d:	xor    al,0x73
  410c6f:	in     eax,dx
  410c70:	popa   
  410c71:	adc    eax,0x44f971c4
  410c76:	adc    DWORD PTR [ebx-0x28abd888],edx
  410c7c:	dec    esp
  410c7d:	adc    al,dl
  410c7f:	xchg   ebx,eax
  410c80:	xchg   edi,eax
  410c81:	jle    0x410c76
  410c83:	stos   DWORD PTR es:[edi],eax
  410c84:	sbb    DWORD PTR [esi],ecx
  410c86:	mov    bh,cl
  410c88:	push   edi
  410c89:	fiadd  DWORD PTR [eax+0xf5f06fd]
  410c8f:	jae    0x410caf
  410c91:	hlt    
  410c92:	sahf   
  410c93:	cmc    
  410c94:	lock pop ebp
  410c96:	ror    DWORD PTR [ebp+0x25686e6a],cl
  410c9c:	dec    ebx
  410c9d:	int3   
  410c9e:	aam    0x9
  410ca0:	(bad)  
  410ca2:	xor    eax,esp
  410ca4:	data16 int3 
  410ca6:	or     al,0xa0
  410ca8:	jmp    0x410cd9
  410caa:	jle    0x410cb2
  410cac:	mov    cl,0x9a
  410cae:	arpl   ax,si
  410cb0:	mov    eax,ds:0x2b8f7a98
  410cb5:	(bad)  
  410cb6:	fld    DWORD PTR [ecx+edi*4+0x31]
  410cba:	xor    ecx,DWORD PTR [edx]
  410cbc:	lea    edi,[ebp-0x68]
  410cbf:	test   BYTE PTR [esp+eax*4-0x27],0xa
  410cc4:	and    cl,cl
  410cc6:	xchg   ebx,eax
  410cc7:	xchg   ebp,eax
  410cc8:	adc    al,0x46
  410cca:	in     al,dx
  410ccb:	add    DWORD PTR [ebp+0x492f40d4],esp
  410cd1:	or     ecx,DWORD PTR [edi]
  410cd3:	xor    edx,ebp
  410cd5:	xor    ebx,DWORD PTR [eax+eax*4-0x6de5166f]
  410cdc:	leave  
  410cdd:	loope  0x410c6f
  410cdf:	lods   al,BYTE PTR ds:[esi]
  410ce0:	xchg   ecx,eax
  410ce1:	jecxz  0x410d54
  410ce3:	dec    esp
  410ce4:	pushf  
  410ce5:	mov    ecx,ds
  410ce7:	push   esp
  410ce8:	adc    al,dh
  410cea:	sub    BYTE PTR [eax],bl
  410cec:	mov    bl,bl
  410cee:	cmp    edx,edx
  410cf0:	hlt    
  410cf1:	ins    BYTE PTR es:[edi],dx
  410cf2:	ja     0x410d6d
  410cf4:	jbe    0x410caf
  410cf6:	loop   0x410d17
  410cf8:	nop
  410cf9:	adc    DWORD PTR [esi+0x24],ecx
  410cfc:	sbb    BYTE PTR [ecx+0xc],bl
  410cff:	inc    eax
  410d00:	pop    edi
  410d01:	addr16 push eax
  410d03:	lods   al,BYTE PTR ds:[esi]
  410d04:	add    BYTE PTR [edi-0x15],dh
  410d07:	(bad)  
  410d08:	sub    dl,BYTE PTR [esi-0x11]
  410d0b:	dec    esp
  410d0c:	into   
  410d0d:	and    al,0x8
  410d0f:	adc    BYTE PTR [ebp+0x4d0f9f6],cl
  410d15:	xor    edx,DWORD PTR [edi+0x67]
  410d18:	(bad)  
  410d19:	(bad)  
  410d1b:	mov    esp,0x7c303c21
  410d20:	in     al,0x39
  410d22:	or     bl,bh
  410d24:	pop    ds
  410d25:	jno    0x410d54
  410d27:	adc    esi,eax
  410d29:	(bad)  
  410d2a:	jg     0x410cf5
  410d2c:	lds    ecx,FWORD PTR ds:0x33fa72a1
  410d32:	pop    edx
  410d33:	mov    dl,0x8c
  410d35:	xchg   ebx,eax
  410d36:	jle    0x410ce6
  410d38:	sub    al,0x15
  410d3a:	cmp    eax,0xa89d68a1
  410d3f:	mov    DWORD PTR [ebp-0x60],edx
  410d42:	rcl    DWORD PTR [ebp-0xe92a4aa],1
  410d48:	inc    edx
  410d49:	mov    dl,0x5b
  410d4b:	push   ecx
  410d4c:	jbe    0x410d12
  410d4e:	pop    edi
  410d4f:	mov    dh,0x62
  410d51:	hlt    
  410d52:	mov    dh,0xa6
  410d54:	je     0x410d6a
  410d56:	cmp    DWORD PTR [ebx],ebx
  410d58:	add    al,0xf
  410d5a:	addr16 (bad) 
  410d5c:	mov    dl,0xa4
  410d5e:	sbb    al,0xef
  410d60:	ret    0x393a
  410d63:	stos   DWORD PTR es:[edi],eax
  410d64:	mov    ds:0x985a343f,al
  410d69:	ins    DWORD PTR es:[edi],dx
  410d6a:	push   ss
  410d6b:	push   ss
  410d6c:	mov    cs,WORD PTR ds:0xd6d86c37
  410d72:	adc    BYTE PTR [ebp+0x66000502],cl
  410d78:	push   edx
  410d79:	adc    bl,dl
  410d7b:	xor    ch,dl
  410d7d:	adc    eax,0xbf8ca13
  410d82:	shl    BYTE PTR [edi-0x30],1
  410d85:	sar    DWORD PTR [esi],cl
  410d87:	and    BYTE PTR [ebx+ebp*2],ch
  410d8a:	and    DWORD PTR ds:0x231da82b,edx
  410d90:	ins    DWORD PTR es:[edi],dx
  410d91:	pusha  
  410d92:	jle    0x410d57
  410d94:	mov    DWORD PTR [edx],0x2c7f8bf0
  410d9a:	fild   WORD PTR [ecx]
  410d9c:	xchg   esp,eax
  410d9d:	or     BYTE PTR [esi-0x3338c671],0xbf
  410da4:	dec    eax
  410da5:	shl    eax,0x5f
  410da8:	in     al,dx
  410da9:	mov    dl,0xaf
  410dab:	ror    BYTE PTR [edi],cl
  410dad:	not    dh
  410daf:	cdq    
  410db0:	jo     0x410d8c
  410db2:	pop    ds
  410db3:	push   cs
  410db4:	and    al,BYTE PTR [ebp+0x361b9f3f]
  410dba:	aam    0x62
  410dbc:	and    edi,DWORD PTR [esi]
  410dbe:	or     DWORD PTR [ebp+0x27],esi
  410dc1:	out    0x8f,al
  410dc3:	(bad)  
  410dc4:	scas   eax,DWORD PTR es:[edi]
  410dc5:	inc    ecx
  410dc6:	repnz xchg esi,eax
  410dc8:	xchg   edx,eax
  410dc9:	fsub   st,st(0)
  410dcb:	mov    ss:0x29b54cce,eax
  410dd1:	sbb    esp,DWORD PTR [ecx]
  410dd3:	arpl   sp,bp
  410dd5:	mov    dh,0x44
  410dd7:	cli    
  410dd8:	test   BYTE PTR [eax+0x7e],dh
  410ddb:	(bad)  
  410ddc:	sub    dl,bh
  410dde:	cld    
  410ddf:	jae    0x410d62
  410de1:	pop    edx
  410de2:	and    dh,BYTE PTR [eax+0x1b4e62a9]
  410de8:	dec    ebx
  410de9:	sbb    ah,BYTE PTR [eax+0x168e8fbc]
  410def:	pop    ecx
  410df0:	sub    BYTE PTR [esi-0x7c],ch
  410df3:	dec    ebp
  410df4:	pop    es
  410df5:	adc    ecx,DWORD PTR [edx+0x55bef0af]
  410dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dfc:	jns    0x410e57
  410dfe:	push   ecx
  410dff:	(bad)  
  410e00:	jmp    0x410e30
  410e02:	add    esi,esp
  410e04:	pushf  
  410e05:	mov    eax,DWORD PTR [eax+0x28a6bac3]
  410e0b:	mov    ebx,0x30a52fe7
  410e10:	sbb    DWORD PTR [eax],ecx
  410e12:	mov    dh,0xef
  410e14:	int    0xfb
  410e16:	enter  0x92e7,0xa0
  410e1a:	shrd   DWORD PTR [ecx],ecx,0xcd
  410e1e:	mov    dh,0xbb
  410e20:	cmp    edx,DWORD PTR [ebp-0x595bb805]
  410e26:	or     eax,0x7bb30887
  410e2b:	sbb    dh,BYTE PTR [ecx+0x7f]
  410e2e:	cmp    ecx,ebp
  410e30:	stos   DWORD PTR es:[edi],eax
  410e31:	xor    al,0xe3
  410e33:	jmp    0x84b7:0x2535de38
  410e3a:	gs ret 
  410e3c:	dec    edi
  410e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e3e:	pop    ds
  410e3f:	scas   al,BYTE PTR es:[edi]
  410e40:	pop    edi
  410e41:	or     al,0x22
  410e43:	das    
  410e44:	dec    eax
  410e45:	dec    ebx
  410e46:	jns    0x410e42
  410e48:	shl    BYTE PTR [edi],cl
  410e4a:	in     al,dx
  410e4b:	leave  
  410e4c:	mov    cl,BYTE PTR [ebx+eiz*1]
  410e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e50:	or     ch,BYTE PTR [edi]
  410e52:	ret    0xb4f6
  410e55:	icebp  
  410e56:	(bad)  
  410e57:	fwait
  410e58:	lds    esi,FWORD PTR [eax]
  410e5a:	xchg   DWORD PTR [esi],esp
  410e5c:	push   edi
  410e5d:	inc    edi
  410e5e:	addr16 and bh,dl
  410e61:	or     DWORD PTR ds:0x33b90fc7,ebp
  410e67:	cld    
  410e68:	inc    edx
  410e69:	cmp    eax,0x2276186c
  410e6e:	dec    esi
  410e6f:	cmp    edx,edi
  410e71:	repnz cs call 0xdbfd:0x87400d89
  410e7a:	mov    ds:0x60daed6e,eax
  410e7f:	dec    edi
  410e80:	push   ds
  410e81:	fst    st(3)
  410e83:	push   esi
  410e84:	and    BYTE PTR ss:[eax],bh
  410e87:	clc    
  410e88:	jmp    0x8ca:0x296473e9
  410e8f:	fidiv  DWORD PTR [ebx+0x2895c2c]
  410e95:	scas   al,BYTE PTR es:[edi]
  410e96:	dec    edx
  410e97:	jo     0x410efb
  410e99:	fist   DWORD PTR [ecx+0x7715932b]
  410e9f:	(bad)  
  410ea0:	into   
  410ea1:	(bad)  
  410ea2:	aas    
  410ea3:	pop    ds
  410ea4:	adc    edi,DWORD PTR [esi]
  410ea6:	mov    eax,0xa683f607
  410eab:	aaa    
  410eac:	sbb    BYTE PTR [eax-0x72300644],dh
  410eb2:	add    ebx,esi
  410eb4:	cmp    DWORD PTR [ebx-0x10803657],0xbf0d79b9
  410ebe:	xor    eax,0xdeaf6ced
  410ec3:	adc    al,0x9
  410ec5:	pushf  
  410ec6:	imul   edx,DWORD PTR [edi],0xffffffd9
  410ec9:	fbld   TBYTE PTR [edx-0x7b2620f7]
  410ecf:	repz pop ecx
  410ed1:	pop    es
  410ed2:	cmp    al,0x3c
  410ed4:	xchg   DWORD PTR [edx-0x523e8819],ebx
  410eda:	dec    esp
  410edb:	fldcw  WORD PTR [edx+0x10ce93e8]
  410ee1:	(bad)  
  410ee2:	retf   
  410ee3:	sbb    esp,0x59
  410ee6:	cmp    DWORD PTR [esi+0x10b1fd69],0xe13624b1
  410ef0:	jge    0x410f1b
  410ef2:	inc    esi
  410ef3:	adc    eax,0x78b46c8c
  410ef8:	add    BYTE PTR [edi-0x6b417ead],dh
  410efe:	int3   
  410eff:	outs   dx,DWORD PTR ds:[esi]
  410f00:	xchg   ebp,eax
  410f01:	or     BYTE PTR [edi-0x76934bcb],bh
  410f07:	pop    eax
  410f08:	aam    0x64
  410f0a:	mov    al,ds:0x8277d339
  410f0f:	ficom  DWORD PTR [edi-0x2e]
  410f12:	addr16 mov esp,0x6d6217fe
  410f18:	mov    ebx,es
  410f1a:	inc    ebx
  410f1b:	or     cl,BYTE PTR [esi]
  410f1d:	jecxz  0x410f71
  410f1f:	fldcw  WORD PTR [edx+ecx*8+0x2300a4]
  410f26:	aam    0x41
  410f28:	push   ebp
  410f29:	ins    DWORD PTR es:[edi],dx
  410f2a:	inc    eax
  410f2b:	mov    edx,0x1320a5ac
  410f30:	dec    edi
  410f31:	(bad)  
  410f32:	outs   dx,DWORD PTR ds:[esi]
  410f33:	ss aaa 
  410f35:	lock jnp 0x410ef7
  410f38:	xchg   esi,eax
  410f39:	push   eax
  410f3a:	ins    DWORD PTR es:[edi],dx
  410f3b:	push   edi
  410f3c:	or     BYTE PTR ss:[edi],ah
  410f3f:	cmp    eax,0xe99a9353
  410f44:	pop    ss
  410f45:	gs (bad) 
  410f47:	iret   
  410f48:	(bad)  
  410f49:	in     al,dx
  410f4a:	in     al,0x78
  410f4c:	imul   edx,DWORD PTR [edx],0xd
  410f4f:	or     esi,DWORD PTR [ecx-0x45]
  410f52:	sub    ecx,edi
  410f54:	imul   ebx,DWORD PTR [eax],0x955dd33d
  410f5a:	mov    cl,BYTE PTR [eax-0xab030ea]
  410f60:	mov    DWORD PTR [ebx+0x6d],ecx
  410f63:	xchg   edx,eax
  410f64:	pcmpeqb mm1,QWORD PTR [ecx+ebp*4+0x45c929e0]
  410f6c:	imul   ebx,DWORD PTR [ecx-0x665123e3],0xffffffbb
  410f73:	push   0x3c
  410f75:	int3   
  410f76:	jmp    0xa727:0xb7d74b8b
  410f7d:	ret    
  410f7e:	and    ebp,ebx
  410f80:	or     DWORD PTR [edi+0x15],0xffffffcd
  410f84:	xlat   BYTE PTR ds:[ebx]
  410f85:	or     al,0x98
  410f87:	in     eax,0xeb
  410f89:	add    al,0x87
  410f8b:	pop    esp
  410f8c:	int    0xd7
  410f8e:	cwde   
  410f8f:	add    esi,DWORD PTR [ebx]
  410f91:	pop    ecx
  410f92:	dec    edx
  410f93:	adc    ebp,ebx
  410f95:	inc    edi
  410f96:	stc    
  410f97:	adc    eax,0x12f89954
  410f9c:	rcl    bh,1
  410f9e:	test   DWORD PTR [edi],esp
  410fa0:	ret    
  410fa1:	ds (bad) 
  410fa3:	xor    edx,DWORD PTR [ebp-0x3]
  410fa6:	push   edx
  410fa7:	jns    0x410ff0
  410fa9:	std    
  410faa:	inc    ebp
  410fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fac:	cmp    eax,edx
  410fae:	fwait
  410faf:	adc    eax,DWORD PTR [ebx]
  410fb1:	les    esp,FWORD PTR ds:0x66a61b54
  410fb7:	inc    esp
  410fb8:	lea    edi,[ecx+eiz*2+0x21731c]
  410fbf:	push   esp
  410fc0:	inc    ebp
  410fc1:	cmp    eax,0x2115131b
  410fc6:	ja     0x410f65
  410fc8:	push   ebx
  410fc9:	call   0x99ba:0x42717d00
  410fd0:	mov    ebx,0xcd52ae2d
  410fd5:	out    0xfb,al
  410fd7:	pop    es
  410fd8:	inc    esi
  410fd9:	and    BYTE PTR ds:0x58d6661e,cl
  410fdf:	outs   dx,BYTE PTR ds:[esi]
  410fe0:	mov    al,0x77
  410fe2:	cwde   
  410fe3:	outs   dx,BYTE PTR ds:[esi]
  410fe4:	outs   dx,DWORD PTR ds:[esi]
  410fe5:	adc    al,0x13
  410fe7:	cmp    ecx,DWORD PTR [esi]
  410fe9:	push   edx
  410fea:	iret   
  410feb:	mov    esp,0xdf07f9f9
  410ff1:	dec    esi
  410ff2:	dec    esp
  410ff3:	or     al,0x97
  410ff5:	xchg   edx,eax
  410ff6:	int3   
  410ff7:	dec    ebp
  410ff8:	xchg   edi,eax
  410ff9:	mov    BYTE PTR [ebp+0x2c5b55cf],0x41
  411000:	pop    edx
  411001:	stos   BYTE PTR es:[edi],al
  411002:	out    0x8c,al
  411004:	and    cl,BYTE PTR [esi-0x12b14365]
  41100a:	inc    ecx
  41100b:	ret    0xa915
  41100e:	loope  0x41100f
  411010:	(bad)  
  411011:	sbb    edx,DWORD PTR [eax-0x7]
  411014:	mov    eax,ds:0x15180fae
  411019:	outs   dx,BYTE PTR ds:[esi]
  41101a:	sbb    al,0x81
  41101c:	pop    edx
  41101d:	cdq    
  41101e:	xchg   ebx,eax
  41101f:	call   0x3425b2e
  411024:	in     al,0xb
  411026:	xchg   edx,eax
  411027:	adc    ecx,DWORD PTR [ecx-0x65f08a0]
  41102d:	arpl   sp,si
  41102f:	add    ch,BYTE PTR [ecx]
  411031:	xor    ebp,ebx
  411033:	jnp    0x41108c
  411035:	inc    eax
  411036:	push   edx
  411037:	outs   dx,BYTE PTR ds:[esi]
  411038:	cmp    eax,0xa5f53878
  41103d:	data16 (bad) 
  41103f:	(bad)  
  411042:	ficom  DWORD PTR [edx+eiz*1+0x1f]
  411046:	sbb    al,0x84
  411048:	dec    eax
  411049:	ss push cs
  41104b:	push   edx
  41104c:	cmp    BYTE PTR [ecx+0x7f],cl
  41104f:	jle    0x410fdd
  411051:	ds je  0x41108f
  411054:	xchg   esp,eax
  411056:	stc    
  411057:	or     BYTE PTR [eax+0x1c3ec64b],al
  41105d:	push   0xffffffe0
  41105f:	xor    al,0x23
  411061:	(bad)  
  411062:	mov    ch,0xc0
  411064:	add    esi,eax
  411066:	pop    esi
  411067:	inc    eax
  411068:	mov    ecx,0x35f73dac
  41106d:	jo     0x4110b2
  41106f:	out    dx,al
  411070:	in     al,dx
  411071:	shr    dl,1
  411073:	sub    al,0x6b
  411075:	sbb    DWORD PTR [edi*4-0x5fb364e],edi
  41107c:	das    
  41107d:	test   eax,0xbf7c7943
  411082:	xor    BYTE PTR [ebx],al
  411084:	sbb    eax,0xe6b1b3a4
  411089:	test   DWORD PTR [edi+eiz*8-0x73],0x93fe5f6f
  411091:	and    eax,0x92820b32
  411096:	xchg   edx,eax
  411097:	cwde   
  411098:	mov    esp,0x56493fdd
  41109d:	das    
  41109e:	rcl    ah,0x0
  4110a1:	gs xchg esp,eax
  4110a3:	(bad)
  4110a6:	(bad)  
  4110a7:	mov    edx,0xe33e929b
  4110ac:	mov    edi,0x79172d67
  4110b1:	adc    al,BYTE PTR [esi+0x54]
  4110b4:	push   ecx
  4110b5:	gs jmp 0x411118
  4110b8:	xchg   BYTE PTR [edi+0x79775943],bh
  4110be:	inc    edx
  4110bf:	pop    esp
  4110c0:	scas   al,BYTE PTR es:[edi]
  4110c1:	add    BYTE PTR [ecx+0x71],bl
  4110c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c5:	mov    edi,0xfbbbc15d
  4110ca:	fild   DWORD PTR [esi+ebp*1+0x55]
  4110ce:	sub    al,0xd9
  4110d0:	(bad)  
  4110d1:	fisttp QWORD PTR [edx]
  4110d3:	mov    DWORD PTR [ebx+0x92d4a03],ebx
  4110d9:	adc    DWORD PTR [edx+ebp*2+0xc],0x25690f7f
  4110e1:	fisub  WORD PTR [edi]
  4110e3:	ror    DWORD PTR [eax],cl
  4110e5:	adc    ecx,DWORD PTR [ebp+0x11]
  4110e8:	test   DWORD PTR [eax],esp
  4110ea:	outs   dx,DWORD PTR ds:[esi]
  4110eb:	xor    dh,BYTE PTR [ebx-0x6bc70688]
  4110f1:	pop    esp
  4110f2:	je     0x4110ec
  4110f4:	lods   al,BYTE PTR ds:[esi]
  4110f5:	loop   0x41114e
  4110f7:	push   es
  4110f8:	outs   dx,DWORD PTR ds:[esi]
  4110f9:	dec    ebx
  4110fa:	cmp    eax,0xc06edc2e
  4110ff:	(bad)  
  411100:	mov    dh,0x7a
  411102:	xchg   BYTE PTR ds:0xc3d4943d,ch
  411108:	pushf  
  411109:	rcl    BYTE PTR [esi],cl
  41110b:	jae    0x411120
  41110d:	cmp    BYTE PTR [edi+0x18],al
  411110:	mov    al,0x80
  411112:	sbb    eax,0x78041dc5
  411117:	xchg   ebp,eax
  411118:	jl     0x411139
  41111a:	jl     0x41116d
  41111c:	out    dx,eax
  41111d:	adc    cl,BYTE PTR [ecx+0x8507545]
  411123:	shl    BYTE PTR [esi+0x36],cl
  411126:	jl     0x411173
  411128:	dec    ecx
  411129:	or     BYTE PTR [ebp-0x22],0xca
  41112d:	sub    DWORD PTR [esi+0x6e],ebp
  411130:	xchg   ebp,eax
  411131:	jmp    0x411119
  411133:	push   ebp
  411134:	dec    ebx
  411135:	test   BYTE PTR [esi-0x15227662],dl
  41113b:	cmp    eax,0xab8b532f
  411140:	and    dh,BYTE PTR [edi+0x4d]
  411143:	xchg   edi,eax
  411144:	or     BYTE PTR [ebx+0x47],dl
  411147:	and    al,0x5d
  411149:	fnsave [ebp-0x385ae0cf]
  41114f:	mov    ch,0xb9
  411151:	sahf   
  411152:	cdq    
  411153:	ins    DWORD PTR es:[edi],dx
  411154:	ins    BYTE PTR es:[edi],dx
  411155:	stos   DWORD PTR es:[edi],eax
  411156:	cmp    bl,BYTE PTR [edi-0x3d8f8651]
  41115c:	lock (bad) 
  41115e:	sbb    eax,0xf800297
  411163:	and    esi,ecx
  411165:	je     0x4110f9
  411167:	cwde   
  411168:	push   cs
  411169:	inc    edx
  41116a:	and    edi,0xe7a28a14
  411170:	pop    es
  411171:	xor    BYTE PTR [ecx+ebx*8-0x6d87769d],bh
  411178:	mov    DWORD PTR [ebx],ebp
  41117a:	jae    0x411111
  41117c:	or     DWORD PTR [eax+edi*4],ecx
  41117f:	xor    ebx,DWORD PTR [edx+0x33]
  411182:	add    DWORD PTR [ebp+0x67842158],0x53
  411189:	shl    DWORD PTR [eax+eiz*1+0x60],1
  41118d:	fiadd  WORD PTR [edi]
  41118f:	fidivr WORD PTR [edi]
  411191:	shl    DWORD PTR fs:[esi-0x567e29c3],0x8d
  411199:	loope  0x4111fc
  41119b:	dec    eax
  41119c:	aam    0xb3
  41119e:	or     edi,esp
  4111a0:	sub    al,0x48
  4111a2:	mov    esp,0xe7ab3812
  4111a7:	out    0xc5,al
  4111a9:	push   edi
  4111aa:	inc    esp
  4111ab:	or     eax,DWORD PTR es:[ebp+0x2ff9e3bf]
  4111b2:	jge    0x4111eb
  4111b4:	lahf   
  4111b5:	(bad)  
  4111b6:	mov    ds:0x46060c96,eax
  4111bb:	cmp    bl,BYTE PTR [ebp+0x2]
  4111be:	leave  
  4111bf:	in     eax,dx
  4111c0:	xchg   ebx,eax
  4111c1:	xor    bl,bh
  4111c3:	xor    cl,BYTE PTR ds:0xda9999e6
  4111c9:	jmp    0x41119c
  4111cb:	imul   ebx,eax,0xb348aed7
  4111d1:	std    
  4111d2:	and    DWORD PTR [ebx-0x3b],ebp
  4111d5:	in     al,0x41
  4111d7:	retf   
  4111d8:	push   edx
  4111d9:	imul   esp,edx,0x66532f22
  4111df:	xchg   ecx,eax
  4111e0:	jb     0x411241
  4111e2:	xor    ebp,esi
  4111e4:	test   ecx,ebx
  4111e6:	lahf   
  4111e7:	aad    0x95
  4111e9:	imul   ecx,DWORD PTR [edx-0x22],0xffffffdb
  4111ed:	in     eax,0xb6
  4111ef:	push   ebp
  4111f0:	add    BYTE PTR [esi+0x19],0x18
  4111f4:	out    dx,al
  4111f5:	cmc    
  4111f6:	add    DWORD PTR [edi],edi
  4111f8:	imul   esp,DWORD PTR [ecx+esi*1],0xfc8269cb
  4111ff:	push   es
  411200:	retf   
  411201:	or     BYTE PTR [eax+ebp*8],bh
  411204:	mov    eax,esp
  411206:	and    cl,ah
  411208:	in     eax,dx
  411209:	mov    DWORD PTR [esi],edi
  41120b:	(bad)  
  41120c:	es sbb eax,0x5e15dfe7
  411212:	fisubr WORD PTR [esi]
  411214:	sub    BYTE PTR [edi+0x7c],0x97
  411218:	adc    al,0x58
  41121a:	repnz (bad) 
  41121c:	pop    ebp
  41121d:	cmp    edx,DWORD PTR [edx-0x7dab7228]
  411223:	or     BYTE PTR [eax],0x36
  411226:	aad    0x59
  411228:	outs   dx,BYTE PTR ds:[esi]
  411229:	int    0x2d
  41122b:	xchg   edi,eax
  41122c:	pusha  
  41122d:	shl    dl,0x2
  411230:	add    ecx,DWORD PTR [eax]
  411232:	add    BYTE PTR [ebx+0x67],ah
  411235:	adc    BYTE PTR [ebp-0x7566cefb],bl
  41123b:	fcom   QWORD PTR ds:[ecx]
  41123e:	xor    BYTE PTR [edi+0x36],dh
  411241:	push   ss
  411242:	xlat   BYTE PTR ds:[ebx]
  411243:	dec    ebp
  411244:	lods   eax,DWORD PTR ds:[esi]
  411245:	push   ecx
  411246:	push   eax
  411247:	outs   dx,DWORD PTR ds:[esi]
  411248:	dec    edx
  411249:	sub    bl,ch
  41124b:	in     al,dx
  41124c:	out    dx,al
  41124d:	jl     0x41128c
  41124f:	data16 das 
  411251:	leave  
  411252:	cli    
  411253:	mov    eax,0x4128c6ce
  411258:	add    al,0x70
  41125a:	rcl    DWORD PTR [ebp-0x572335af],cl
  411260:	out    0xa,al
  411262:	repnz clc 
  411264:	rcl    DWORD PTR [edx],cl
  411266:	xchg   edx,eax
  411267:	pop    ebp
  411268:	fdivr  QWORD PTR [esi-0x10]
  41126b:	pop    ebx
  41126c:	sub    BYTE PTR [ecx-0x3cecf31],ch
  411272:	xchg   edx,eax
  411273:	push   edx
  411274:	stos   DWORD PTR es:[edi],eax
  411275:	aas    
  411276:	cld    
  411277:	push   es
  411278:	(bad)
  41127c:	(bad)  
  41127d:	mov    ah,0x56
  41127f:	dec    esi
  411280:	lods   eax,DWORD PTR ds:[esi]
  411281:	sbb    DWORD PTR [edx+0x74],0x5564a526
  411288:	jns    0x411300
  41128a:	ja     0x411242
  41128c:	pop    eax
  41128d:	or     ebx,DWORD PTR [esi-0xb0c440d]
  411293:	add    al,0xef
  411295:	aaa    
  411296:	adc    eax,0x8926049e
  41129b:	cdq    
  41129c:	inc    ebx
  41129d:	rol    BYTE PTR [esi+0xd],cl
  4112a0:	fs retf 
  4112a2:	cli    
  4112a3:	mov    ebp,0xd69a5fc8
  4112a8:	mov    edx,0x699b3ad1
  4112ad:	sbb    ch,BYTE PTR [ebx+0x38]
  4112b0:	int3   
  4112b1:	jecxz  0x411252
  4112b3:	cli    
  4112b4:	mov    bh,0x6b
  4112b6:	lahf   
  4112b7:	sub    esi,DWORD PTR [ecx]
  4112b9:	arpl   si,di
  4112bb:	jbe    0x4112c3
  4112bd:	add    al,0xb6
  4112bf:	inc    ebx
  4112c0:	imul   ebx,DWORD PTR [esi-0x17e5850],0x60
  4112c7:	adc    al,0x7d
  4112c9:	mov    eax,0x1bda85e8
  4112ce:	fisubr DWORD PTR [eax+0x3ce1bf5c]
  4112d4:	leave  
  4112d5:	retf   
  4112d6:	je     0x4112ec
  4112d8:	push   ecx
  4112d9:	arpl   WORD PTR [edi+0x6a],bx
  4112dc:	mov    ecx,0x26077d3c
  4112e1:	lahf   
  4112e2:	cmp    eax,0xeaa4870b
  4112e7:	mov    ecx,0xe38df479
  4112ec:	xchg   ecx,eax
  4112ed:	pusha  
  4112ee:	sbb    al,0x4b
  4112f0:	xlat   BYTE PTR ds:[ebx]
  4112f1:	repz sbb al,0xfe
  4112f4:	in     al,0x71
  4112f6:	je     0x41131d
  4112f8:	js     0x4112a5
  4112fa:	hlt    
  4112fb:	adc    BYTE PTR [ebp-0x14],0x32
  4112ff:	xor    eax,0x1939aa1c
  411304:	mov    ?,WORD PTR [eax+0x274e97a9]
  41130a:	sub    ch,ch
  41130c:	add    eax,0x28a60ab9
  411311:	cmp    eax,0x24eccd83
  411316:	das    
  411317:	(bad)  
  411318:	pop    DWORD PTR [edi-0x4e601b04]
  41131e:	or     eax,0xf6ed8d9e
  411323:	jecxz  0x411317
  411325:	fistp  DWORD PTR [ecx]
  411327:	retf   
  411328:	xor    BYTE PTR [esi+0x47ddcc06],0x12
  41132f:	mov    eax,0xefc2100d
  411334:	pushf  
  411335:	pop    esp
  411336:	call   FWORD PTR [ecx]
  411338:	test   BYTE PTR [ecx+0x41],ah
  41133b:	out    0xaf,eax
  41133d:	pop    ss
  41133e:	cwde   
  41133f:	cmc    
  411340:	ja     0x41138b
  411342:	in     eax,0x8
  411344:	add    BYTE PTR [esi],dl
  411346:	pop    DWORD PTR [edx+0x49717157]
  41134c:	or     ebx,DWORD PTR [ecx+0x572ee77b]
  411352:	mov    cl,0x9
  411354:	mov    esi,0xcafb047c
  411359:	push   edx
  41135a:	inc    ebp
  41135b:	sbb    ebx,DWORD PTR [ebx+0x35]
  41135e:	test   esp,esp
  411360:	nop
  411361:	inc    ecx
  411362:	pop    ebx
  411363:	adc    edx,DWORD PTR [edx+0x346a1b97]
  411369:	adc    al,0xf
  41136b:	out    0xe5,eax
  41136d:	jl     0x4113d3
  41136f:	dec    edx
  411370:	and    al,0xcc
  411372:	ja     0x41135b
  411374:	sub    esi,DWORD PTR [edx+0x286cbb53]
  41137a:	xor    ch,BYTE PTR [ebp+0x4a74f1b3]
  411380:	test   edx,edi
  411382:	retf   
  411383:	inc    edi
  411384:	es (bad) 
  411386:	cwde   
  411387:	jge    0x41130a
  411389:	sub    BYTE PTR [edx+eax*2-0x7a],dl
  41138d:	jae    0x4113cd
  41138f:	xchg   esi,edx
  411391:	mov    ebx,0xcb41bbeb
  411396:	xor    bh,BYTE PTR [esi-0x6bf212d6]
  41139c:	adc    BYTE PTR [edi],0xce
  41139f:	dec    edi
  4113a0:	xor    DWORD PTR [ebp+eiz*1-0x11],edi
  4113a4:	out    0x46,eax
  4113a6:	sub    edx,edi
  4113a8:	jmp    0xad4d55ad
  4113ad:	inc    ebx
  4113ae:	das    
  4113af:	hlt    
  4113b0:	cmc    
  4113b1:	in     al,dx
  4113b2:	fcmovnb st,st(4)
  4113b4:	ror    DWORD PTR [ebp-0x1a],cl
  4113b7:	jp     0x503e049f
  4113bd:	je     0x411414
  4113bf:	mov    BYTE PTR [eax+0x27],0xa4
  4113c3:	(bad)  
  4113c4:	test   eax,0xc304d0c
  4113c9:	test   DWORD PTR [ecx],ecx
  4113cb:	jae    0x411437
  4113cd:	xchg   edx,eax
  4113ce:	retf   0x93f1
  4113d1:	(bad)  
  4113d3:	push   ds
  4113d4:	or     esi,ebp
  4113d6:	mov    DWORD PTR [ecx-0x95cb89c],esp
  4113dc:	sbb    eax,0x7237302e
  4113e1:	add    al,0xbb
  4113e3:	loope  0x411377
  4113e5:	xchg   ebp,eax
  4113e6:	shl    BYTE PTR [edi+0x3c656725],0x5d
  4113ed:	inc    ebx
  4113ee:	mov    ds:0x7317c3c5,al
  4113f3:	pop    ebx
  4113f4:	jl     0x411410
  4113f6:	xor    al,0x2a
  4113f8:	inc    esp
  4113f9:	jge    0x41139d
  4113fb:	add    al,0x95
  4113fd:	nop
  4113fe:	xchg   edx,eax
  4113ff:	mov    al,0x36
  411401:	mov    bh,0x26
  411403:	nop
  411404:	js     0x4113ab
  411406:	xor    ebp,esi
  411408:	sbb    BYTE PTR [eax-0x37],dh
  41140b:	ins    BYTE PTR es:[edi],dx
  41140c:	add    DWORD PTR [ebp+0x1d84b163],eax
  411412:	(bad)
  411415:	ds mov dl,0x3b
  411418:	daa    
  411419:	inc    ebp
  41141a:	stc    
  41141b:	mov    ebx,DWORD PTR ds:0xdcfe6890
  411421:	pop    es
  411422:	in     al,0x87
  411424:	(bad)  
  411425:	hlt    
  411426:	inc    ecx
  411427:	dec    ebx
  411428:	fistp  QWORD PTR [edi-0x5e]
  41142b:	cmp    esp,edx
  41142d:	aas    
  41142e:	dec    ebx
  41142f:	jbe    0x411493
  411431:	xlat   BYTE PTR ds:[ebx]
  411432:	sahf   
  411433:	out    dx,al
  411434:	pop    es
  411435:	pushw  ss
  411437:	or     eax,0x71bd4abf
  41143c:	lods   al,BYTE PTR ds:[esi]
  41143d:	hlt    
  41143e:	stos   BYTE PTR es:[edi],al
  41143f:	fwait
  411440:	dec    ebx
  411441:	mov    bl,0xef
  411443:	mov    ebx,0x71e8d3e2
  411448:	sar    BYTE PTR [ebx],cl
  41144a:	dec    eax
  41144b:	aas    
  41144c:	xchg   dh,dh
  41144e:	fbstp  TBYTE PTR [edi-0x56766889]
  411454:	mov    cl,0x8d
  411456:	jo     0x411440
  411458:	xchg   ebx,eax
  411459:	push   es
  41145a:	mov    DWORD PTR [esi],ecx
  41145c:	mov    DWORD PTR [eax],eax
  41145e:	mov    edx,0x20c59ca9
  411463:	push   edx
  411464:	fistp  WORD PTR [edi-0x52360767]
  41146a:	mov    al,0x52
  41146c:	stos   DWORD PTR es:[edi],eax
  41146d:	je     0x4114b0
  41146f:	shr    WORD PTR ds:0xf54cb9d9,cl
  411476:	add    DWORD PTR [ebp-0x14],esp
  411479:	jns    0x4114e4
  41147b:	pop    edi
  41147c:	mov    dh,0x5d
  41147e:	clc    
  41147f:	inc    ebp
  411480:	dec    ebp
  411481:	add    edx,DWORD PTR [edi-0x47016201]
  411487:	loop   0x41144d
  411489:	jne    0x4114ed
  41148b:	push   ebp
  41148c:	(bad)
  41148f:	or     ah,al
  411491:	aas    
  411492:	daa    
  411493:	xchg   esp,eax
  411494:	cdq    
  411495:	xchg   BYTE PTR [eax],ch
  411497:	enter  0xa94,0xca
  41149b:	(bad)  
  41149c:	imul   ebx,DWORD PTR [edi],0xfffffffb
  41149f:	inc    edi
  4114a0:	push   ecx
  4114a1:	and    esi,esi
  4114a3:	mov    ds:0x6886bdb3,al
  4114a8:	jmp    0xfafe:0x7e966759
  4114af:	inc    edi
  4114b0:	mov    ebx,0xebd2cec8
  4114b5:	aas    
  4114b6:	add    al,0x51
  4114b8:	jns    0x41151d
  4114ba:	enter  0x7b23,0x9a
  4114be:	gs xchg esi,eax
  4114c0:	lods   al,BYTE PTR ds:[esi]
  4114c1:	imul   esp,DWORD PTR [ebx],0x32
  4114c4:	xchg   ecx,eax
  4114c5:	jnp    0x411462
  4114c7:	std    
  4114c8:	stc    
  4114c9:	gs mov dh,0xfe
  4114cc:	stos   BYTE PTR es:[edi],al
  4114cd:	sbb    DWORD PTR [ecx+0x23],edi
  4114d0:	or     BYTE PTR [ecx+0x5e6a64b5],bh
  4114d6:	or     eax,0xdbdadc0d
  4114db:	icebp  
  4114dc:	outs   dx,DWORD PTR ds:[esi]
  4114dd:	mov    ebx,0xbdd5d6b
  4114e2:	pop    ds
  4114e3:	push   ebx
  4114e4:	repnz xchg ebx,eax
  4114e6:	aam    0x54
  4114e8:	stos   DWORD PTR es:[edi],eax
  4114e9:	out    0xa5,eax
  4114eb:	(bad)  
  4114ec:	dec    ecx
  4114ed:	sar    BYTE PTR [eax-0x5b],0x55
  4114f1:	mov    ch,0x56
  4114f3:	cmp    esp,DWORD PTR [eax+0x110f9d72]
  4114f9:	inc    ebx
  4114fa:	mov    WORD PTR [eiz*4-0xda76e86],ss
  411501:	fadd   QWORD PTR [ebx+0x1b]
  411504:	fbld   TBYTE PTR [ebx-0x3aa5e049]
  41150a:	add    BYTE PTR [edi],dh
  41150c:	xchg   esi,eax
  41150d:	or     DWORD PTR [edx-0x41],esp
  411510:	xlat   BYTE PTR ds:[ebx]
  411511:	loop   0x411549
  411513:	jne    0x41155e
  411515:	inc    esp
  411516:	ss (bad) 
  411518:	in     al,dx
  411519:	push   es
  41151a:	sub    edi,DWORD PTR [esi-0x2dd5fd57]
  411520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411521:	test   edx,ebx
  411523:	mov    edi,0x98aaa6d7
  411528:	xchg   edx,eax
  411529:	cmp    BYTE PTR [edx-0x1e],0xe3
  41152d:	or     eax,0xd8a1c072
  411532:	mov    al,0xc3
  411534:	out    0xa3,eax
  411536:	adc    BYTE PTR [eax],bl
  411538:	cwde   
  411539:	pop    ebx
  41153a:	repnz mov al,BYTE PTR [ecx-0x21]
  41153e:	hlt    
  41153f:	fwait
  411540:	sub    al,BYTE PTR [eax]
  411542:	mov    bl,0xf2
  411544:	mov    esp,DWORD PTR [ecx-0x1b44c58]
  41154a:	sar    ecx,0x80
  41154d:	push   0xd93e3630
  411552:	ds (bad) 
  411554:	xor    dl,ch
  411556:	push   cs
  411557:	push   eax
  411558:	hlt    
  411559:	xchg   BYTE PTR [edx],ch
  41155b:	dec    edi
  41155c:	dec    esi
  41155d:	repz in al,0x22
  411560:	repz push esi
  411562:	into   
  411563:	aaa    
  411564:	leave  
  411565:	adc    eax,0xbe13c032
  41156a:	repnz mov esp,0x58aef3cf
  411570:	add    al,0x6e
  411572:	mov    ds:0x810b7873,al
  411577:	sbb    BYTE PTR [esi+ebx*8-0x47e7bb3c],al
  41157e:	xchg   ebp,eax
  41157f:	sti    
  411580:	fcomi  st,st(4)
  411582:	mov    ds:0x273a26a0,al
  411587:	arpl   WORD PTR ds:0xcc12e9ff,cx
  41158d:	push   esi
  41158e:	outs   dx,BYTE PTR ds:[esi]
  41158f:	push   0x38
  411591:	dec    eax
  411592:	sub    BYTE PTR [edx-0x1],dl
  411595:	fmul   QWORD PTR [ebx+ebx*8-0x55de452c]
  41159c:	test   DWORD PTR [eax],edi
  41159e:	xlat   BYTE PTR ds:[ebx]
  41159f:	mov    ds:0xeb5071f9,al
  4115a4:	hlt    
  4115a5:	inc    edx
  4115a6:	push   edx
  4115a7:	xor    al,0xa8
  4115a9:	xlat   BYTE PTR ds:[ebx]
  4115aa:	pop    edi
  4115ab:	sbb    bh,BYTE PTR [edx]
  4115ad:	cmc    
  4115ae:	lds    edx,FWORD PTR [edi]
  4115b0:	xchg   esi,eax
  4115b1:	imul   ecx,DWORD PTR [edx],0x7e95dcf
  4115b7:	iret   
  4115b8:	aas    
  4115b9:	out    0x8,al
  4115bb:	xlat   BYTE PTR ds:[ebx]
  4115bc:	das    
  4115bd:	jns    0x411578
  4115bf:	push   ebx
  4115c0:	scas   eax,DWORD PTR es:[edi]
  4115c1:	pop    edx
  4115c2:	jne    0x4115b7
  4115c4:	jl     0x4115cf
  4115c6:	mul    BYTE PTR [eax+0x3c6e699f]
  4115cc:	test   ah,bl
  4115ce:	(bad)  
  4115cf:	in     eax,dx
  4115d0:	fcmovne st,st(4)
  4115d2:	scas   al,BYTE PTR es:[edi]
  4115d3:	in     eax,0xba
  4115d5:	dec    eax
  4115d6:	(bad)  
  4115d8:	cmp    ebx,ebp
  4115da:	cmp    BYTE PTR [edi],ch
  4115dc:	cmp    al,0x15
  4115de:	add    DWORD PTR [edx+0x7b75bfcf],ecx
  4115e4:	adc    ch,BYTE PTR [esi+eiz*1+0x5c613be6]
  4115eb:	call   0xb981a40e
  4115f0:	mov    dl,0x54
  4115f2:	jg     0x411637
  4115f4:	dec    DWORD PTR [ecx-0x10ea9d8]
  4115fa:	dec    esp
  4115fb:	sub    dl,BYTE PTR [ebp-0x399122e0]
  411601:	fst    QWORD PTR [eax-0x20]
  411604:	cmp    BYTE PTR [ecx],bh
  411606:	lea    ebx,ds:0xe70873ba
  41160c:	mul    BYTE PTR [edi-0xa66e9ce]
  411612:	ror    DWORD PTR [ecx+0x64324576],cl
  411618:	or     bh,BYTE PTR [edx+0x61]
  41161b:	xor    esi,DWORD PTR [ebx]
  41161d:	push   es
  41161e:	je     0x41164c
  411620:	cwde   
  411621:	pop    ebx
  411622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411623:	(bad)  
  411624:	clc    
  411625:	and    al,0x88
  411627:	xor    esi,eax
  411629:	pop    ebx
  41162a:	sub    al,0xa3
  41162c:	lods   eax,DWORD PTR ds:[esi]
  41162d:	imul   edi,DWORD PTR ds:0xe24eac31,0x4f
  411634:	xor    dl,al
  411636:	xchg   edi,eax
  411637:	aam    0xae
  411639:	pop    ds
  41163a:	jmp    0x411605
  41163c:	call   0x4968ed8
  411641:	ins    BYTE PTR es:[edi],dx
  411642:	push   ds
  411643:	rcr    DWORD PTR [edi+0x145cdc26],cl
  411649:	nop
  41164a:	inc    ebx
  41164b:	fisubr DWORD PTR [ecx]
  41164d:	mov    ebx,0xff83e10c
  411652:	lods   eax,DWORD PTR ds:[esi]
  411653:	leave  
  411654:	ins    DWORD PTR es:[edi],dx
  411655:	int3   
  411656:	sub    al,0x10
  411658:	rcr    bl,1
  41165a:	jge    0x41165a
  41165c:	mov    eax,ds:0x42df24c3
  411661:	pop    ebp
  411662:	aam    0x14
  411664:	cld    
  411665:	or     bh,al
  411667:	call   0xc3f0:0xdf933ff7
  41166e:	popa   
  41166f:	dec    edx
  411670:	dec    esp
  411671:	sub    eax,0xee80ee3c
  411676:	js     0x4115ff
  411678:	adc    dh,BYTE PTR ds:[ebx-0x3d]
  41167c:	xchg   edx,eax
  41167d:	adc    ah,dh
  41167f:	lods   al,BYTE PTR ds:[esi]
  411680:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411682:	mov    bh,0x55
  411684:	dec    esp
  411685:	jo     0x41165b
  411687:	jecxz  0x4116f6
  411689:	mov    cl,0xd5
  41168b:	leave  
  41168c:	xchg   DWORD PTR [edi-0x3d],edi
  41168f:	into   
  411690:	ds jb  0x41167c
  411693:	mov    eax,DWORD PTR [ebx+ebx*1-0x35f7209]
  41169a:	retf   0x19a2
  41169d:	icebp  
  41169e:	push   ebp
  41169f:	cmp    DWORD PTR [ebx+0x25491484],eax
  4116a5:	lock ficomp WORD PTR ds:0x666a6c6b
  4116ac:	leave  
  4116ad:	cmc    
  4116ae:	repnz fidivr DWORD PTR [eax-0x63988fa2]
  4116b5:	xor    ebp,DWORD PTR [ebp+0x14c5e2a4]
  4116bb:	daa    
  4116bc:	mov    bl,0xef
  4116be:	adc    ch,bl
  4116c0:	xchg   esp,eax
  4116c1:	pop    edi
  4116c2:	mov    DWORD PTR [eax],edi
  4116c4:	add    al,0x3a
  4116c6:	dec    edi
  4116c7:	stos   BYTE PTR es:[edi],al
  4116c8:	std    
  4116c9:	sbb    edx,DWORD PTR [esp+ebx*8-0x27]
  4116cd:	aas    
  4116ce:	push   es
  4116cf:	retf   
  4116d0:	cmp    edi,DWORD PTR [edx+edi*8+0x12441de6]
  4116d7:	dec    eax
  4116d8:	mov    eax,0xfbe8718c
  4116dd:	jmp    0xf27b9e41
  4116e2:	lods   eax,DWORD PTR ds:[esi]
  4116e3:	push   0xb45b95cd
  4116e8:	lods   eax,DWORD PTR ds:[esi]
  4116e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ea:	dec    esp
  4116eb:	mov    esi,0x8b9ce066
  4116f0:	imul   ebp
  4116f2:	imul   edx,DWORD PTR [esi],0x65
  4116f5:	and    bl,dl
  4116f7:	les    esi,FWORD PTR ds:0x5afe7ef2
  4116fd:	pop    ebp
  4116fe:	jns    0x4116ce
  411700:	(bad)  
  411701:	scas   al,BYTE PTR es:[edi]
  411702:	adc    esi,DWORD PTR [edx-0x196093dd]
  411708:	pop    edi
  411709:	std    
  41170a:	jbe    0x41177d
  41170c:	mov    bh,0x8c
  41170e:	xor    eax,0x5d0ca743
  411713:	(bad)  
  411714:	jmp    0xb931f557
  411719:	add    ebx,eax
  41171b:	ror    BYTE PTR [ebp-0x419e9da7],cl
  411721:	adc    al,0x38
  411723:	mov    bl,0x6e
  411725:	inc    esi
  411726:	aaa    
  411727:	inc    esi
  411728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411729:	imul   eax,ebx,0x41
  41172c:	adc    dl,BYTE PTR [ebx+ebx*8+0x2f53a810]
  411733:	push   ebp
  411734:	pop    es
  411735:	and    bl,BYTE PTR [eax+ecx*4]
  411738:	frstor [edx]
  41173a:	aaa    
  41173b:	mov    ds,WORD PTR [edi]
  41173d:	mov    eax,esi
  41173f:	lds    eax,FWORD PTR [ebx]
  411741:	arpl   WORD PTR [edi],dx
  411743:	jl     0x411776
  411745:	stos   BYTE PTR es:[edi],al
  411746:	pop    es
  411747:	cmp    eax,0x98154814
  41174c:	or     DWORD PTR [ebx],edx
  41174e:	and    BYTE PTR [esp+edi*4-0x1d66b2ef],dl
  411755:	lds    ebp,FWORD PTR ds:0x3d596ab8
  41175b:	push   0xffffffff
  41175d:	jp     0x41172b
  41175f:	or     BYTE PTR [ecx+0x502dc1ee],cl
  411765:	push   esp
  411766:	call   0xba2d:0xcf311112
  41176d:	rol    DWORD PTR [ebx],cl
  41176f:	shl    ch,1
  411771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411772:	push   0xfffffff0
  411774:	jbe    0x4117c9
  411776:	in     al,0xb9
  411778:	mov    WORD PTR [ecx-0x1d7d4d6a],cs
  41177e:	xchg   ebp,esi
  411780:	fwait
  411781:	nop
  411782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411783:	jno    0x41172a
  411785:	xor    edi,DWORD PTR [esi]
  411787:	mov    dl,0x4f
  411789:	or     al,0x9a
  41178b:	shl    BYTE PTR [esi+0x60f7e332],cl
  411791:	pop    edx
  411792:	jmp    0x411727
  411794:	sbb    bl,BYTE PTR [esi-0x244df72a]
  41179a:	xchg   esp,eax
  41179b:	mov    ch,0xa3
  41179d:	or     DWORD PTR [ebx+0x1b0e0646],ebp
  4117a3:	jmp    FWORD PTR [esi*8-0x14eb6cd1]
  4117aa:	push   edx
  4117ab:	sahf   
  4117ac:	in     al,0x50
  4117ae:	retf   0x4157
  4117b1:	mov    bl,0x86
  4117b3:	fadd   DWORD PTR [esi]
  4117b5:	push   esi
  4117b6:	cmp    eax,eax
  4117b8:	mov    eax,ds:0xc102df1e
  4117bd:	jmp    0x4117ff
  4117bf:	(bad)  
  4117c0:	cld    
  4117c1:	stos   DWORD PTR es:[edi],eax
  4117c2:	aad    0xe
  4117c4:	jne    0x4117e3
  4117c6:	inc    esp
  4117c7:	addr16 add al,0xf0
  4117ca:	mov    ebx,0xc3da3be2
  4117cf:	adc    al,0x5d
  4117d1:	mov    ebp,0xcaf0a68d
  4117d6:	(bad)  
  4117d8:	pushf  
  4117d9:	repz cli 
  4117db:	mov    bh,0x2b
  4117dd:	enter  0xc472,0x52
  4117e1:	ins    BYTE PTR es:[edi],dx
  4117e2:	outs   dx,BYTE PTR ds:[esi]
  4117e3:	adc    bh,BYTE PTR [ecx+0x45]
  4117e6:	and    al,0x59
  4117e8:	(bad)  
  4117e9:	mov    cl,0xa3
  4117eb:	mov    al,0xc4
  4117ed:	mov    bh,0x23
  4117ef:	pushf  
  4117f0:	aas    
  4117f1:	push   es
  4117f2:	jno    0x41181f
  4117f4:	jmp    0x411835
  4117f6:	xor    BYTE PTR [ecx],bh
  4117f8:	jmp    0x2d28cd1
  4117fd:	jns    0x41186e
  4117ff:	repz inc esi
  411801:	mov    BYTE PTR [esi+0x5],ch
  411804:	out    dx,al
  411805:	add    eax,0xae1f58fc
  41180a:	jae    0x4117fc
  41180c:	popa   
  41180d:	or     edi,DWORD PTR [edx+ebp*1]
  411810:	shl    DWORD PTR [ebp+0x38],1
  411813:	dec    edi
  411814:	cmp    BYTE PTR [ecx-0x6f],cl
  411817:	push   ebp
  411818:	fiadd  DWORD PTR [esi-0x4197e5e3]
  41181e:	push   ds
  41181f:	mul    BYTE PTR [edi+0x38083ff7]
  411825:	aam    0x2
  411827:	add    BYTE PTR [ebx+0x2179a1d1],ah
  41182d:	push   cs
  41182e:	les    ecx,FWORD PTR [ecx]
  411830:	dec    ecx
  411831:	sti    
  411832:	fst    QWORD PTR [esi]
  411834:	xchg   ecx,eax
  411835:	aas    
  411836:	jle    0x4117bb
  411838:	das    
  411839:	sbb    al,0x87
  41183b:	jae    0x411880
  41183d:	dec    edx
  41183e:	xchg   edi,eax
  41183f:	push   edx
  411840:	lea    ebx,[esi]
  411842:	or     DWORD PTR [ecx-0x786f209],eax
  411848:	cwde   
  411849:	xor    al,0xd2
  41184b:	aas    
  41184c:	push   es
  41184d:	test   eax,0x7e6ba99b
  411852:	cmp    cl,BYTE PTR [ecx-0x5e]
  411855:	mov    dl,0xd7
  411857:	in     al,0xcb
  411859:	add    al,0x67
  41185b:	pusha  
  41185c:	lea    eax,[ebp+0x47]
  41185f:	jno    0x411883
  411861:	mov    eax,ds:0xebf7bf71
  411866:	adc    DWORD PTR [esi+0x7c],esp
  411869:	dec    eax
  41186a:	mov    WORD PTR [edx],ss
  41186c:	add    eax,DWORD PTR [ebp+0x2d0ae7c1]
  411872:	push   esi
  411873:	fnstenv [esi]
  411875:	sbb    al,0x6c
  411877:	cli    
  411878:	inc    eax
  411879:	xor    DWORD PTR [ecx+0x5245534c],0x5aefb85f
  411883:	mov    ds:0x31111558,al
  411888:	stos   BYTE PTR es:[edi],al
  411889:	dec    edi
  41188a:	jno    0x411886
  41188c:	repnz xchg ebp,eax
  41188e:	push   ecx
  41188f:	retf   
  411890:	test   BYTE PTR [ebp-0x474a1ffc],0x3d
  411897:	(bad)  
  411899:	retf   0x789d
  41189c:	inc    ecx
  41189d:	inc    ebp
  41189e:	or     cl,al
  4118a0:	push   cs
  4118a1:	test   eax,0xd70ad1b5
  4118a6:	fs sbb al,0x2e
  4118a9:	mov    eax,ds:0xe80ca214
  4118ae:	and    DWORD PTR [eax],esi
  4118b0:	jp     0x41190a
  4118b2:	repz fisubr WORD PTR [ebx-0x5b]
  4118b6:	test   DWORD PTR [eax-0x14b1e6d8],esp
  4118bc:	out    dx,eax
  4118bd:	sub    DWORD PTR [eax+edx*1-0x4b],edi
  4118c1:	jns    0x4118e4
  4118c3:	arpl   sp,ax
  4118c5:	push   ss
  4118c6:	fcom   QWORD PTR [edx+ebp*8]
  4118c9:	jmp    0xcd8e:0x8a9ac07d
  4118d0:	iret   
  4118d1:	adc    ch,dh
  4118d3:	dec    edi
  4118d4:	cld    
  4118d5:	sub    DWORD PTR [ecx-0x16],0x56635072
  4118dc:	cmc    
  4118dd:	cmp    eax,0x397aae87
  4118e2:	ffree  st(2)
  4118e4:	or     bl,BYTE PTR [eax+0x7e2a6287]
  4118ea:	mov    edi,0xd9a7d39f
  4118ef:	xchg   esi,ebp
  4118f1:	pop    eax
  4118f2:	adc    DWORD PTR [esi],ebp
  4118f4:	das    
  4118f5:	pop    eax
  4118f6:	repz mov ds:0xd3214261,al
  4118fc:	aam    0x5
  4118fe:	in     eax,0x5d
  411900:	in     al,dx
  411901:	fimul  WORD PTR [ebx+0x1848a80e]
  411907:	lahf   
  411908:	xor    BYTE PTR [ecx],cl
  41190a:	add    DWORD PTR [edi+0x5b968d],ebx
  411910:	jno    0x411943
  411912:	mov    fs,ebx
  411914:	lods   eax,DWORD PTR ds:[esi]
  411915:	out    dx,al
  411916:	aam    0x38
  411918:	in     eax,dx
  411919:	sbb    eax,0xc679cded
  41191e:	xchg   esi,eax
  41191f:	add    cl,BYTE PTR [ebx-0x748adf46]
  411925:	add    ch,BYTE PTR ds:0x499bdb34
  41192b:	cmp    esi,DWORD PTR [esi+0x57e31070]
  411931:	out    0x74,al
  411933:	std    
  411934:	jecxz  0x4118f7
  411936:	push   0xffffff8b
  411938:	fcom   DWORD PTR [edx+esi*8+0x763fddb]
  41193f:	cmp    ecx,DWORD PTR [ebx+edx*8+0x54]
  411943:	imul   esi,DWORD PTR [edi],0x61
  411946:	mov    al,ds:0x506c9f
  41194b:	cmp    edi,DWORD PTR [esi]
  41194d:	hlt    
  41194e:	call   0x84523276
  411953:	push   ss
  411954:	aam    0x4
  411956:	int    0x3f
  411958:	(bad)  
  411959:	stos   DWORD PTR es:[edi],eax
  41195a:	sti    
  41195b:	test   al,0xea
  41195d:	(bad)  
  41195e:	test   eax,0x28ab58b4
  411963:	(bad)  
  411964:	gs sub cl,0x38
  411968:	sub    esp,ecx
  41196a:	or     eax,0x2bfaa53b
  41196f:	mov    esp,0x8d73c8b6
  411974:	into   
  411975:	mov    DWORD PTR [ecx+0x71e26705],edx
  41197b:	test   BYTE PTR [ebx+0x73fa844b],dl
  411981:	inc    eax
  411982:	sbb    ebp,eax
  411984:	mov    ch,0x21
  411986:	mov    edx,0xc85c3abf
  41198b:	sub    DWORD PTR [ebp+0x4f],esi
  41198e:	dec    eax
  41198f:	add    eax,0xe8b079a
  411994:	push   edx
  411995:	pusha  
  411996:	add    dl,BYTE PTR [ebp+0x17]
  411999:	fldenv [eax+0x254721af]
  41199f:	dec    ebx
  4119a0:	int3   
  4119a1:	xlat   BYTE PTR ds:[ebx]
  4119a2:	repnz mov eax,ds:0xa3b52119
  4119a8:	mov    esi,0x94716ddf
  4119ad:	rcr    dh,1
  4119af:	or     esp,DWORD PTR [esi+0x3a]
  4119b2:	inc    ebx
  4119b3:	das    
  4119b4:	fwait
  4119b5:	pop    ss
  4119b6:	xchg   ebp,eax
  4119b7:	pushf  
  4119b8:	mov    ecx,0xf7d3c126
  4119bd:	into   
  4119be:	push   esi
  4119bf:	cmp    DWORD PTR [ecx-0x5f471653],esp
  4119c5:	loope  0x411992
  4119c7:	repnz outs dx,DWORD PTR ds:[esi]
  4119c9:	lods   eax,DWORD PTR ds:[esi]
  4119ca:	mov    WORD PTR [ebp-0x71f1b4bd],fs
  4119d0:	dec    edx
  4119d1:	mov    dl,0x91
  4119d3:	adc    esp,DWORD PTR [edx+0x54]
  4119d6:	push   0x710368fc
  4119db:	mov    eax,0x33676659
  4119e0:	test   al,0xe
  4119e2:	jmp    0xd5964d20
  4119e7:	ja     0x4119fe
  4119e9:	retf   
  4119ea:	repz repz jno 0x411a54
  4119ee:	xor    esp,DWORD PTR [ebp+0x6f047f90]
  4119f4:	data16 jno 0x4119f6
  4119f7:	call   0xa29a:0x687ace65
  4119fe:	cmp    dh,BYTE PTR [ebx-0x1b]
  411a01:	jge    0x4119a6
  411a03:	xchg   BYTE PTR [ebp-0x23],ch
  411a06:	push   cs
  411a07:	sbb    al,0xd5
  411a09:	out    dx,eax
  411a0a:	aad    0x64
  411a0c:	mov    ch,0x9
  411a0e:	add    ch,dl
  411a10:	cdq    
  411a11:	fdiv   QWORD PTR [eax-0x4afb1017]
  411a17:	dec    ebp
  411a18:	jge    0x411a2f
  411a1a:	or     BYTE PTR [ebp+0x75],bh
  411a1d:	push   esp
  411a1e:	inc    eax
  411a1f:	fdivr  DWORD PTR [edi]
  411a21:	mov    ah,0x54
  411a23:	in     eax,0xf
  411a25:	push   edx
  411a26:	les    eax,FWORD PTR [eax+edx*2+0x4293e79c]
  411a2d:	dec    edi
  411a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a2f:	cmp    DWORD PTR ds:0xf115c47,ebx
  411a35:	outs   dx,DWORD PTR ds:[esi]
  411a36:	pop    edx
  411a37:	dec    edx
  411a38:	and    al,0x78
  411a3a:	mov    ?,edi
  411a3c:	adc    ch,ah
  411a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a3f:	or     BYTE PTR [edi+edx*1],al
  411a42:	push   ebp
  411a43:	mov    ds:0x242f6f9f,al
  411a48:	outs   dx,BYTE PTR ds:[esi]
  411a49:	jae    0x411a5d
  411a4b:	jg     0x411a04
  411a4d:	add    BYTE PTR [esi],bh
  411a4f:	test   al,0x62
  411a51:	xor    BYTE PTR [esi+0x5d7ddb03],bh
  411a57:	mov    ds:0x55b0d7a4,al
  411a5c:	mov    al,ds:0x52739a99
  411a61:	rcl    DWORD PTR [ebx],cl
  411a63:	adc    DWORD PTR [edi-0x7a82fcb4],esp
  411a69:	daa    
  411a6a:	hlt    
  411a6b:	mov    bl,0x5b
  411a6d:	jl     0x411ac6
  411a6f:	sub    dl,BYTE PTR [eax-0x65474aa5]
  411a75:	xchg   BYTE PTR [ecx+0x51],dl
  411a78:	sahf   
  411a79:	xor    eax,0x4610126f
  411a7e:	cmc    
  411a7f:	cld    
  411a80:	dec    edi
  411a81:	pop    es
  411a82:	dec    ebp
  411a83:	pushf  
  411a84:	iret   
  411a85:	les    ecx,FWORD PTR [eax-0x24]
  411a88:	xlat   BYTE PTR ds:[ebx]
  411a89:	test   eax,0x8ee41517
  411a8e:	jl     0x411abd
  411a90:	and    DWORD PTR [ebx+0x4e],0xb91dea70
  411a97:	fmul   DWORD PTR [eax+0x59b87d7d]
  411a9d:	cld    
  411a9e:	call   0xa245987
  411aa3:	stc    
  411aa4:	xor    DWORD PTR [ecx],esi
  411aa6:	inc    ebp
  411aa7:	push   0xffffffea
  411aa9:	scas   al,BYTE PTR es:[edi]
  411aaa:	mov    dh,0xfa
  411aac:	adc    eax,0x94ba58ed
  411ab1:	and    BYTE PTR [edi],ah
  411ab3:	pop    ebp
  411ab4:	imul   edx,DWORD PTR [eax-0x4b],0x167082b5
  411abb:	inc    esp
  411abc:	jg     0x411aec
  411abe:	es pusha 
  411ac0:	cs jmp 0xf7c6:0xfc8ecbd5
  411ac8:	add    eax,0xa3c6b5b0
  411acd:	or     BYTE PTR [edx-0x64193a21],dl
  411ad3:	adc    eax,0xc3c06f65
  411ad8:	mov    dl,0x40
  411ada:	pop    edi
  411adb:	push   esi
  411adc:	ror    DWORD PTR [eax-0x4526e5d4],cl
  411ae2:	adc    dh,cl
  411ae4:	jne    0x411b2b
  411ae6:	jo     0x411ad9
  411ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ae9:	sub    BYTE PTR [ebx+0x7e4f2800],0x37
  411af0:	rcr    DWORD PTR [edi],1
  411af2:	inc    ebx
  411af3:	retf   0xec43
  411af6:	inc    ebx
  411af7:	adc    bl,BYTE PTR [ebx+0x54]
  411afa:	stos   DWORD PTR es:[edi],eax
  411afb:	and    BYTE PTR [esi],bh
  411afd:	ds xchg esp,eax
  411aff:	in     al,dx
  411b00:	mov    eax,ds:0x2e7bf4b9
  411b05:	pop    ecx
  411b06:	xchg   ebp,eax
  411b07:	sar    edi,cl
  411b09:	retf   
  411b0a:	jle    0x411aae
  411b0c:	leave  
  411b0d:	cli    
  411b0e:	dec    eax
  411b0f:	push   eax
  411b10:	inc    edx
  411b11:	cli    
  411b12:	inc    esi
  411b13:	sub    dh,0xee
  411b16:	mov    bh,0x9b
  411b18:	sub    ah,bh
  411b1a:	bound  esi,QWORD PTR [ebx]
  411b1c:	add    esp,DWORD PTR [esi]
  411b1e:	sbb    al,0x9d
  411b20:	lds    esp,FWORD PTR [ebx]
  411b22:	adc    ebx,ecx
  411b24:	out    dx,al
  411b25:	aam    0x80
  411b27:	inc    ebx
  411b28:	in     al,dx
  411b29:	sbb    edx,esp
  411b2b:	repz repnz push edi
  411b2e:	out    dx,eax
  411b2f:	jge    0x411b86
  411b31:	out    0xe3,eax
  411b33:	(bad)
  411b36:	pop    ecx
  411b37:	shr    al,1
  411b39:	fild   DWORD PTR [ebx-0x55]
  411b3c:	(bad)  [esi+0x5d038b35]
  411b42:	add    eax,0x5ea767df
  411b47:	or     al,0x1d
  411b49:	jnp    0x411af1
  411b4b:	mov    ch,0x69
  411b4d:	add    eax,0x87da2260
  411b52:	inc    edx
  411b53:	(bad)  
  411b54:	cdq    
  411b55:	stc    
  411b56:	push   esi
  411b57:	lahf   
  411b58:	mov    dl,BYTE PTR [eax+0x20]
  411b5b:	cmp    cl,BYTE PTR [eax]
  411b5d:	xchg   ebx,eax
  411b5e:	or     ebx,DWORD PTR [edx+0x32]
  411b61:	push   eax
  411b62:	jecxz  0x411bbb
  411b64:	pop    edi
  411b65:	cmp    ecx,DWORD PTR [ebx-0xf]
  411b68:	test   al,0xda
  411b6a:	push   ds
  411b6b:	or     edi,DWORD PTR [ebp+0x78]
  411b6e:	scas   al,BYTE PTR es:[edi]
  411b6f:	retf   
  411b70:	fbstp  TBYTE PTR [ebx]
  411b72:	mov    cl,0x3e
  411b74:	imul   ebp,edi,0x4ae232c4
  411b7a:	dec    ebx
  411b7b:	inc    esi
  411b7c:	aam    0xc6
  411b7e:	mov    ds:0xcb0069d8,eax
  411b83:	(bad)  
  411b85:	pop    ebp
  411b86:	adc    eax,0xca1ced7f
  411b8b:	jmp    0x4baf:0x99c69b9f
  411b92:	add    eax,0xb1476559
  411b97:	dec    ebp
  411b98:	add    eax,0x261449fa
  411b9d:	xor    ch,BYTE PTR ds:0x45eb1eab
  411ba3:	mov    ds:0xbe03dcf4,eax
  411ba8:	mov    ds:0xe8b86c1d,eax
  411bad:	adc    dh,BYTE PTR [eax+0x4ecaf6f5]
  411bb3:	clc    
  411bb4:	in     eax,dx
  411bb5:	loop   0x411bbf
  411bb7:	fcomp  QWORD PTR [eax+0x3fbb2f]
  411bbd:	cdq    
  411bbe:	xchg   ebx,eax
  411bbf:	test   DWORD PTR [esi-0x33eb4f59],0xf33020f1
  411bc9:	out    0x14,al
  411bcb:	pop    esi
  411bcc:	inc    eax
  411bcd:	dec    eax
  411bce:	hlt    
  411bcf:	ror    ecx,1
  411bd1:	rcr    esi,1
  411bd3:	cmp    DWORD PTR [edi+eax*1],esi
  411bd6:	mov    esp,0x6b373082
  411bdb:	mov    ebp,0x1bd0bcf0
  411be0:	clc    
  411be1:	call   0x493e:0xee7de636
  411be8:	jl     0x411b9d
  411bea:	sub    dh,dl
  411bec:	push   esp
  411bed:	mov    ch,0xbc
  411bef:	dec    ebx
  411bf0:	cwde   
  411bf1:	(bad)  
  411bf2:	retf   
  411bf3:	mov    al,ds:0x9d907981
  411bf8:	mov    ah,0xc0
  411bfa:	ja     0x411bfb
  411bfc:	push   ecx
  411bfd:	arpl   WORD PTR [edi+0x1],bp
  411c00:	dec    esp
  411c01:	pop    ebp
  411c02:	jb     0x411c69
  411c04:	gs adc al,0x1b
  411c07:	jmp    0x7c03b4bc
  411c0c:	push   es
  411c0d:	and    DWORD PTR [ecx+0x75],esi
  411c10:	jmp    0xfd2d:0x99480b34
  411c17:	stos   DWORD PTR es:[edi],eax
  411c18:	out    0xa3,al
  411c1a:	out    0x85,eax
  411c1c:	ss pop ds
  411c1e:	dec    ebp
  411c1f:	call   ebp
  411c21:	popw   ss
  411c23:	jbe    0x411c9a
  411c25:	call   0x49d2:0xc29b921e
  411c2c:	cmp    al,0xe8
  411c2e:	xor    cl,BYTE PTR [ebx]
  411c30:	push   edi
  411c31:	aas    
  411c32:	loope  0x411c16
  411c34:	xor    al,0x45
  411c36:	jle    0x411c78
  411c38:	jae    0x411c31
  411c3a:	dec    edi
  411c3b:	add    al,0x79
  411c3d:	iret   
  411c3e:	or     DWORD PTR [edi+0x43011309],0x8e5740c6
  411c48:	cmc    
  411c49:	out    0x7a,eax
  411c4b:	pop    esi
  411c4c:	mov    edx,0xd0d76da9
  411c51:	enter  0x2d01,0x61
  411c55:	stc    
  411c56:	pop    esp
  411c57:	out    0xbf,eax
  411c59:	jle    0x411c48
  411c5b:	add    bl,0x81
  411c5e:	loope  0x411bf3
  411c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c61:	and    al,0x2b
  411c63:	sbb    edi,0xffffff8b
  411c66:	ds xchg edi,eax
  411c68:	mov    edi,0x2a026a22
  411c6d:	sub    DWORD PTR [ebx+0xc2fb5f1],ebp
  411c73:	sbb    al,0x7d
  411c75:	xchg   edx,eax
  411c76:	into   
  411c77:	test   DWORD PTR [edi-0x39a7b5f4],edi
  411c7d:	in     al,0x93
  411c7f:	and    eax,0xd945bec7
  411c84:	xchg   esp,eax
  411c85:	fwait
  411c86:	jge    0x411c82
  411c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c89:	test   eax,0xb9b4a8d
  411c8e:	fidiv  DWORD PTR [ecx-0x66b0c3ce]
  411c94:	mov    ah,BYTE PTR [edi-0x3027c75f]
  411c9a:	xchg   edi,eax
  411c9b:	test   DWORD PTR [edi+0x71],eax
  411c9e:	test   DWORD PTR [ebp-0x3434a2da],0xef420eff
  411ca8:	jns    0x411cf7
  411caa:	push   ebx
  411cab:	or     eax,0x9fedcf3b
  411cb0:	jecxz  0x411ca7
  411cb2:	mov    ds:0xe25e82c3,eax
  411cb7:	aaa    
  411cb8:	and    DWORD PTR [ebx+0x1b7042d5],esi
  411cbe:	jns    0x411ce1
  411cc0:	sub    bl,bl
  411cc2:	dec    edx
  411cc3:	inc    eax
  411cc4:	add    ebx,DWORD PTR [ebp+0x12424f06]
  411cca:	or     edi,esi
  411ccc:	cdq    
  411ccd:	pusha  
  411cce:	lock fldcw WORD PTR [esi]
  411cd1:	xor    esi,DWORD PTR [edx+0x2d5fc2f]
  411cd7:	dec    esi
  411cd8:	jne    0x411c68
  411cda:	sahf   
  411cdb:	pop    ss
  411cdc:	adc    cl,dh
  411cde:	push   esp
  411cdf:	push   0xffffff8c
  411ce1:	jae    0x411c7b
  411ce3:	rol    BYTE PTR ds:[esp+ecx*1],cl
  411ce7:	mov    ch,bh
  411ce9:	dec    BYTE PTR [ecx]
  411ceb:	push   ss
  411cec:	dec    ecx
  411ced:	sub    eax,0xb4b379ad
  411cf2:	addps  xmm7,XMMWORD PTR [ecx]
  411cf5:	adc    edi,DWORD PTR [edi]
  411cf7:	pop    esp
  411cf8:	push   ds
  411cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cfa:	xor    BYTE PTR [esi],bl
  411cfc:	jno    0x411d41
  411cfe:	call   0x43939eac
  411d03:	mov    cl,0x19
  411d05:	xchg   BYTE PTR [edi-0x32814a7f],ch
  411d0b:	inc    esp
  411d0c:	test   al,0x68
  411d0e:	shr    DWORD PTR [ecx+ecx*8+0x32473ab0],0x6e
  411d16:	inc    ecx
  411d17:	mov    bl,0xf7
  411d19:	push   0x9521aa26
  411d1e:	daa    
  411d1f:	out    0x6b,eax
  411d21:	mov    ecx,edx
  411d23:	nop
  411d24:	jp     0x411d42
  411d26:	fstp   QWORD PTR [edi+0x4954f75f]
  411d2c:	pop    eax
  411d2d:	rcr    DWORD PTR [ebx+0x3ad8f899],cl
  411d33:	popf   
  411d34:	dec    ecx
  411d35:	aam    0xcb
  411d37:	xor    ebp,DWORD PTR [edx]
  411d39:	ret    0x4f2f
  411d3c:	fstp   QWORD PTR [edx-0x35331dbd]
  411d42:	popf   
  411d43:	cmp    ecx,edx
  411d45:	sbb    bl,BYTE PTR [ecx-0x7a]
  411d48:	lods   al,BYTE PTR ds:[esi]
  411d49:	ret    
  411d4a:	retf   0x7d61
  411d4d:	jp     0x411cdc
  411d4f:	add    BYTE PTR ds:0xf6aaa65d,0x27
  411d56:	adc    ecx,edx
  411d58:	fs jne 0x411d65
  411d5b:	enter  0xba5b,0xfd
  411d5f:	ds addr16 nop
  411d62:	add    bh,dl
  411d64:	jo     0x411dc9
  411d66:	jmp    0xa20a:0x44222cec
  411d6d:	into   
  411d6e:	ins    BYTE PTR es:[edi],dx
  411d6f:	into   
  411d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d71:	cmp    al,0x25
  411d73:	ficomp WORD PTR ds:[edx+0x26]
  411d77:	adc    edx,DWORD PTR [eax+0x7678c301]
  411d7d:	add    edi,DWORD PTR [esp+eax*2-0x1b3fcd0c]
  411d84:	popf   
  411d85:	daa    
  411d86:	mov    ds:0x138b8177,eax
  411d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8c:	pop    ds
  411d8d:	mov    ch,0x4a
  411d8f:	or     DWORD PTR [edx+0x0],esp
  411d92:	xchg   DWORD PTR [esi-0x3c],esp
  411d95:	inc    ebp
  411d96:	inc    esp
  411d97:	mov    edi,0x30c4ec0c
  411d9c:	dec    ebx
  411d9d:	dec    ebp
  411d9e:	ins    DWORD PTR es:[edi],dx
  411d9f:	in     al,0xf1
  411da1:	mov    eax,ds:0xca0fc5bc
  411da6:	cdq    
  411da7:	mul    esp
  411da9:	inc    ebx
  411daa:	shl    eax,cl
  411dac:	mov    cl,BYTE PTR [ecx-0x55]
  411daf:	dec    ecx
  411db0:	paddd  mm2,QWORD PTR [esi]
  411db3:	inc    esp
  411db4:	sti    
  411db5:	sbb    al,0x7
  411db7:	lods   eax,DWORD PTR ds:[esi]
  411db8:	mov    edx,0x6c91a167
  411dbd:	add    dl,bl
  411dbf:	out    dx,eax
  411dc0:	add    edi,DWORD PTR [ecx+0x6f87207b]
  411dc6:	add    al,0x2e
  411dc8:	sub    bl,BYTE PTR [ebx]
  411dca:	cmp    cl,BYTE PTR [edi-0x4ae50cba]
  411dd0:	inc    ebp
  411dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dd2:	and    al,0x6d
  411dd4:	dec    ebp
  411dd5:	ret    
  411dd6:	xchg   ecx,eax
  411dd7:	jge    0x411d9a
  411dd9:	xchg   ecx,eax
  411dda:	sbb    DWORD PTR [eax+0x579fd8c5],ecx
  411de0:	pop    ds
  411de1:	stos   DWORD PTR es:[edi],eax
  411de2:	adc    ah,ah
  411de4:	dec    esp
  411de5:	ins    BYTE PTR es:[edi],dx
  411de6:	div    DWORD PTR ds:0x786244ca
  411dec:	pop    esp
  411ded:	int3   
  411dee:	mov    ecx,0xf886ceb5
  411df3:	mov    bl,0x44
  411df5:	adc    BYTE PTR [ecx],bl
  411df7:	mov    dh,0x77
  411df9:	pushf  
  411dfa:	aas    
  411dfb:	ja     0x411d83
  411dfd:	idiv   DWORD PTR [edx]
  411dff:	mov    ebx,0x6bd7bd21
  411e04:	xchg   esp,eax
  411e05:	add    DWORD PTR [edi+0x12],0xffffffaf
  411e09:	and    dl,0xac
  411e0c:	mov    ds:0x9afece14,eax
  411e11:	icebp  
  411e12:	fbstp  TBYTE PTR [ebx]
  411e14:	add    eax,0x76fdbfba
  411e19:	dec    ecx
  411e1a:	not    BYTE PTR [ecx-0x1]
  411e1d:	mov    ds:0xfe0dcc6a,al
  411e22:	push   edi
  411e23:	in     eax,0x13
  411e25:	xor    edx,0xffffff96
  411e28:	fwait
  411e29:	pop    esp
  411e2a:	pusha  
  411e2b:	sbb    DWORD PTR [esp+ebp*8],esi
  411e2e:	aam    0xa1
  411e30:	pop    ds
  411e31:	dec    ecx
  411e32:	pop    ss
  411e33:	(bad)  
  411e34:	mov    esp,DWORD PTR [ebx+0x7d244091]
  411e3a:	pop    esi
  411e3b:	xchg   BYTE PTR [eax-0x2c],bh
  411e3e:	gs push edi
  411e40:	fnstenv [ebx-0x7f641db7]
  411e46:	aas    
  411e47:	out    dx,eax
  411e48:	jae    0x411e80
  411e4a:	imul   eax,DWORD PTR [ebx+esi*1],0x57
  411e4e:	in     eax,0x27
  411e50:	fbld   TBYTE PTR [ebx]
  411e52:	pop    esi
  411e53:	(bad)  
  411e54:	sbb    al,0x1d
  411e56:	in     eax,dx
  411e57:	daa    
  411e58:	aaa    
  411e59:	ins    BYTE PTR es:[edi],dx
  411e5a:	icebp  
  411e5b:	out    0xb3,eax
  411e5d:	mov    ebp,0x3cb3270
  411e62:	ins    BYTE PTR es:[edi],dx
  411e63:	(bad)  
  411e64:	outs   dx,BYTE PTR ds:[esi]
  411e65:	dec    ebx
  411e66:	xchg   esp,eax
  411e67:	mov    bh,0x1b
  411e69:	lods   al,BYTE PTR ds:[esi]
  411e6a:	mov    BYTE PTR [ebx+edi*2-0x19],ch
  411e6e:	shl    BYTE PTR [ebx+0x35],cl
  411e71:	shl    BYTE PTR [ecx],0xe8
  411e74:	into   
  411e75:	pop    es
  411e76:	(bad)  
  411e77:	idiv   DWORD PTR [eax]
  411e79:	dec    ebx
  411e7a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411e7c:	xlat   BYTE PTR ds:[ebx]
  411e7d:	pop    ebx
  411e7e:	sbb    al,0x9c
  411e80:	xchg   ebp,eax
  411e81:	fdivr  DWORD PTR [eax+ebx*1+0x794f69f3]
  411e88:	imul   esp,DWORD PTR [edx-0x2d],0xffffffbd
  411e8c:	mov    ebp,0x38749ae1
  411e91:	cmp    eax,0x736e08c7
  411e96:	sub    al,0x8f
  411e98:	add    DWORD PTR [ebx+0x18c21e05],ebp
  411e9e:	lea    ecx,[edi]
  411ea0:	sub    DWORD PTR [eax-0x7afc2a9a],ebp
  411ea6:	lahf   
  411ea7:	repz or eax,0x62aacdaa
  411ead:	cmp    bl,BYTE PTR [edx]
  411eaf:	popf   
  411eb0:	(bad)  
  411eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb3:	jne    0x411e62
  411eb5:	mov    DWORD PTR [edx],esi
  411eb7:	inc    eax
  411eb8:	(bad)  
  411eb9:	stc    
  411eba:	call   0x3c84:0x24617bb1
  411ec1:	js     0x411e83
  411ec3:	push   ds
  411ec4:	ret    0x49ac
  411ec7:	imul   edx,DWORD PTR [eax-0x47],0x4d
  411ecb:	shl    esp,1
  411ecd:	enter  0x9a25,0xc9
  411ed1:	iret   
  411ed2:	out    0x8e,eax
  411ed4:	sub    eax,0x24361777
  411ed9:	imul   esi,DWORD PTR cs:[ebp+0x38],0x13
  411ede:	push   ebp
  411edf:	and    ecx,edi
  411ee1:	pop    esi
  411ee2:	test   eax,0xbb222ae8
  411ee7:	and    ebx,ebx
  411ee9:	jmp    0x1a1:0x2ce1407f
  411ef0:	(bad)  
  411ef1:	mov    ebp,0xa6381745
  411ef6:	inc    ebx
  411ef7:	jbe    0x411f77
  411ef9:	jns    0x411f33
  411efb:	mov    bl,0xcd
  411efd:	xor    edx,DWORD PTR [edi+ecx*1+0x46a6c1c4]
  411f04:	jl     0x411ea6
  411f06:	pushf  
  411f07:	mov    ecx,0xdb98f9a6
  411f0c:	mov    ebx,0xcf49b665
  411f11:	arpl   bp,di
  411f13:	int3   
  411f14:	imul   eax,DWORD PTR [ecx-0x43afd090],0xbe27054e
  411f1e:	int    0x7
  411f20:	push   0x5b
  411f22:	sub    edi,esp
  411f24:	adc    BYTE PTR [eax+0x427454c8],dl
  411f2a:	adc    ecx,DWORD PTR [esi-0x44f1ab66]
  411f30:	pop    eax
  411f31:	mov    bh,0x1b
  411f33:	sub    ch,BYTE PTR [ecx+0x57]
  411f36:	sub    eax,0xdf47eab3
  411f3b:	addr16 xchg edx,eax
  411f3d:	pop    esp
  411f3e:	pop    esi
  411f3f:	lea    esp,[esi+esi*4-0x63]
  411f43:	ror    DWORD PTR [ebx+0x55c0ca19],cl
  411f49:	sbb    ebp,ebx
  411f4b:	inc    ebx
  411f4c:	push   0xffffffe8
  411f4e:	loopne 0x411f11
  411f50:	popf   
  411f51:	push   eax
  411f52:	ja     0x411fae
  411f54:	loope  0x411f0c
  411f56:	jmp    0x411f1d
  411f58:	pop    edx
  411f59:	fistp  DWORD PTR [edx-0x38]
  411f5c:	fild   QWORD PTR [edx+0x60cb34a7]
  411f62:	dec    ebp
  411f63:	imul   edx,DWORD PTR [ebx+0x32],0xcec46a72
  411f6a:	mov    ebx,0xcd8fa7b4
  411f6f:	fstp   TBYTE PTR [ebx+edi*2]
  411f72:	cmp    al,0x7
  411f74:	xchg   ebp,eax
  411f75:	mov    al,ds:0x10cc6b84
  411f7a:	jp     0x411f47
  411f7c:	loopne 0x411f36
  411f7e:	or     BYTE PTR [edx+0xa40f245],ch
  411f84:	xor    al,0x4f
  411f86:	aaa    
  411f87:	js     0x411f4e
  411f89:	sub    al,0x93
  411f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f8c:	sbb    al,0xec
  411f8e:	sbb    bh,BYTE PTR [edi]
  411f90:	or     al,0x59
  411f92:	in     al,0x8d
  411f94:	sub    BYTE PTR [eax-0x1c],al
  411f97:	imul   esi,DWORD PTR [ecx],0x7a
  411f9a:	ins    BYTE PTR es:[edi],dx
  411f9b:	jno    0x411fa3
  411f9d:	ret    
  411f9e:	arpl   WORD PTR [eax],dx
  411fa0:	iret   
  411fa1:	repnz mov ds:0x581c62e4,al
  411fa7:	out    0x70,al
  411fa9:	pop    esi
  411faa:	popf   
  411fab:	inc    ecx
  411fac:	std    
  411fad:	push   ebx
  411fae:	test   BYTE PTR [esi+0x6a],dh
  411fb1:	loop   0x411f9f
  411fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb4:	xchg   ebx,eax
  411fb5:	jmp    0xf44ae02
  411fba:	push   es
  411fbb:	imul   ecx,DWORD PTR [edi-0xb],0xfd2a4a0
  411fc2:	jecxz  0x411fb2
  411fc4:	ror    dl,cl
  411fc6:	and    BYTE PTR [edx+0x482e5b0c],ch
  411fcc:	ja     0x411f5c
  411fce:	fisub  WORD PTR ds:0x9923e70f
  411fd4:	mov    dh,0x2a
  411fd6:	pop    ebx
  411fd7:	sub    ebx,ebp
  411fd9:	outs   dx,BYTE PTR ds:[esi]
  411fda:	add    DWORD PTR [eax+0x1],eax
  411fdd:	out    dx,al
  411fde:	jae    0x411fa0
  411fe0:	pushf  
  411fe1:	add    dl,bh
  411fe3:	mov    dl,0x26
  411fe5:	adc    BYTE PTR [ecx+0xcc186f6],dl
  411feb:	(bad)  
  411fec:	shl    BYTE PTR [edi-0x5a4c3670],1
  411ff2:	sub    DWORD PTR [edx],esp
  411ff4:	fwait
  411ff5:	mov    eax,ds:0x75f2316a
  411ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ffb:	mov    dh,0xfb
  411ffd:	and    ebx,0xffffffb2
  412000:	in     eax,dx
  412001:	enter  0x10b1,0xe0
  412005:	jns    0x411fe8
  412007:	mov    bl,BYTE PTR [eax]
  412009:	cmp    eax,0x5cbfa208
  41200e:	and    edx,DWORD PTR [ecx]
  412010:	in     al,dx
  412011:	cdq    
  412012:	jmp    0x287e:0x8b429208
  412019:	xor    al,0x3e
  41201b:	mov    esi,0xa57cf82c
  412020:	std    
  412021:	es mov esi,0xe0553710
  412027:	xchg   edx,eax
  412028:	mul    BYTE PTR [eax+edi*1-0x7b]
  41202c:	mov    ebp,0xaedf72b8
  412031:	arpl   WORD PTR [eax+0x64],bp
  412034:	bound  esp,QWORD PTR [ebp+0x5203fc24]
  41203a:	ds jne 0x412019
  41203d:	fs jecxz 0x4120a8
  412040:	add    BYTE PTR [esi+0x5a],ch
  412043:	iret   
  412044:	lods   al,BYTE PTR ds:[esi]
  412045:	dec    esp
  412046:	sub    dh,bh
  412048:	into   
  412049:	push   cs
  41204a:	mov    BYTE PTR [ebx],dh
  41204c:	jecxz  0x412059
  41204e:	in     eax,0xf8
  412050:	inc    edi
  412051:	xor    DWORD PTR [ebx],ebp
  412053:	outs   dx,BYTE PTR ds:[esi]
  412054:	sbb    eax,0xe5caf854
  412059:	test   DWORD PTR [ebx+0x20],edi
  41205c:	adc    ebp,DWORD PTR [eax]
  41205e:	stc    
  41205f:	cmp    esi,edx
  412061:	shl    dl,cl
  412063:	cmp    edi,DWORD PTR [edx-0x24]
  412066:	mov    BYTE PTR [edi],al
  412068:	push   ds
  412069:	stos   DWORD PTR es:[edi],eax
  41206a:	mov    ss,WORD PTR [ecx]
  41206c:	shr    esp,0xe1
  41206f:	imul   ebx,edi,0xad0fb2ba
  412075:	ds test ebp,esi
  412078:	fistp  QWORD PTR [edi+0x1c00ee05]
  41207e:	xor    eax,0x9ddf28cc
  412083:	xchg   esi,eax
  412084:	scas   eax,DWORD PTR es:[edi]
  412085:	loop   0x41202f
  412087:	and    BYTE PTR ss:[esi+eiz*2+0x5752c11f],al
  41208f:	imul   ebp,DWORD PTR ds:0x8fac21a1,0xbe0261f7
  412099:	jecxz  0x412087
  41209b:	dec    edi
  41209c:	test   eax,0x7c960ac6
  4120a1:	shr    DWORD PTR [ebp-0x1b],0x5
  4120a5:	and    BYTE PTR [eax+0x1c],0x9
  4120a9:	enter  0x812f,0x12
  4120ad:	test   BYTE PTR [eax+0x52],ah
  4120b0:	sub    BYTE PTR [ecx-0x76],bl
  4120b3:	pop    ebp
  4120b4:	ret    
  4120b5:	aad    0x2a
  4120b7:	lods   al,BYTE PTR ds:[esi]
  4120b8:	pop    esi
  4120b9:	mulps  xmm6,XMMWORD PTR [edx+0xc]
  4120bd:	xchg   esi,eax
  4120be:	pop    edi
  4120bf:	aam    0x7a
  4120c1:	stos   DWORD PTR es:[edi],eax
  4120c2:	mov    BYTE PTR [ebx+edi*4-0x1c],dl
  4120c6:	mov    al,0x2d
  4120c8:	sti    
  4120c9:	sub    ch,BYTE PTR [edi]
  4120cb:	and    BYTE PTR [esi],bl
  4120cd:	dec    eax
  4120ce:	add    bl,BYTE PTR [edi+eax*4]
  4120d1:	mov    ch,0x29
  4120d3:	or     edi,edx
  4120d5:	push   ds
  4120d6:	in     al,0x97
  4120d8:	or     BYTE PTR [ebx],bl
  4120da:	stos   DWORD PTR es:[edi],eax
  4120db:	mov    ch,0xfd
  4120dd:	inc    eax
  4120de:	hlt    
  4120df:	sbb    DWORD PTR [bp+di+0x1f],esp
  4120e3:	call   0x3503d1bd
  4120e8:	xchg   ebx,eax
  4120e9:	test   esi,ebx
  4120eb:	fldenv [ebp+eax*1-0x77b15bff]
  4120f2:	shl    BYTE PTR [ecx+eax*2],1
  4120f5:	leave  
  4120f6:	pop    ecx
  4120f7:	mov    al,es:0xea9d06d8
  4120fd:	jl     0x41210d
  4120ff:	inc    esp
  412100:	dec    edx
  412101:	fcom   DWORD PTR [ecx-0x12399a8e]
  412107:	mov    ds:0xf1074986,al
  41210c:	add    cl,bl
  41210e:	jecxz  0x41211d
  412110:	push   0xcee7bb47
  412115:	ret    
  412116:	or     eax,0x108bfaa1
  41211b:	add    DWORD PTR [ecx+0x794e0782],0xf78b54ec
  412125:	nop
  412126:	xchg   ebp,eax
  412127:	add    BYTE PTR [ebx],ah
  412129:	sub    DWORD PTR [edx-0x746a3b6f],0x676cc106
  412133:	ins    DWORD PTR es:[edi],dx
  412134:	out    0x19,al
  412136:	mov    ah,0x3b
  412138:	pop    DWORD PTR [ebx+0x39]
  41213b:	xchg   DWORD PTR [edx+0x63dafc22],esp
  412141:	sti    
  412142:	sub    esi,DWORD PTR [edx+0x6d]
  412145:	test   DWORD PTR [ecx+0xe],esi
  412148:	mov    DWORD PTR [ebp-0x50],edx
  41214b:	adc    ebx,ebx
  41214d:	mov    edx,DWORD PTR [ebp+0x8]
  412150:	and    DWORD PTR ds:0x428e8d,0x0
  41215a:	jmp    0x41216c
  41215f:	mov    ebx,DWORD PTR ds:0x428e8d
  412165:	inc    ebx
  412166:	mov    DWORD PTR ds:0x428e8d,ebx
  41216c:	cmp    DWORD PTR ds:0x428e8d,0x1c
  412173:	jae    0x4121a0
  412179:	cmp    DWORD PTR ds:0x428e8d,0x20
  412180:	ja     0x4121a0
  412186:	jmp    0x41219b
  41218b:	push   0x428039
  412190:	push   0x400000
  412195:	call   DWORD PTR ds:0x42ca24
  41219b:	jmp    0x41215f
  4121a0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4121a3:	inc    DWORD PTR ds:0x428e71
  4121a9:	add    edx,ecx
  4121ab:	sbb    DWORD PTR ds:0x428e8d,0x5a59
  4121b5:	or     edx,ebx
  4121b7:	mov    DWORD PTR ds:0x428e55,0x19
  4121c1:	cmp    DWORD PTR ds:0x428e55,0x0
  4121c8:	je     0x4121fb
  4121ce:	cmp    DWORD PTR ds:0x428e55,0x1e
  4121d5:	jle    0x4121fb
  4121db:	jmp    0x4121e9
  4121e0:	push   DWORD PTR [ebp-0x20]
  4121e3:	call   DWORD PTR ds:0x42ca28
  4121e9:	mov    ebx,DWORD PTR ds:0x428e55
  4121ef:	dec    ebx
  4121f0:	mov    DWORD PTR ds:0x428e55,ebx
  4121f6:	jmp    0x4121c1
  4121fb:	mov    DWORD PTR [ebp-0x4c],edx
  4121fe:	add    DWORD PTR ds:0x428eb1,ebx
  412204:	mov    edx,DWORD PTR [ebp+0x8]
  412207:	mov    DWORD PTR ds:0x428ec5,0x16
  412211:	cmp    DWORD PTR ds:0x428ec5,0x0
  412218:	je     0x412267
  41221e:	cmp    DWORD PTR ds:0x428ec5,0xc
  412225:	jl     0x412267
  41222b:	jmp    0x41223b
  412230:	push   0x1fc5
  412235:	call   DWORD PTR ds:0x42ca2c
  41223b:	cmp    DWORD PTR ds:0x428ec5,0xd
  412242:	jne    0x412255
  412248:	mov    ebx,DWORD PTR ds:0x428ec5
  41224e:	dec    ebx
  41224f:	mov    DWORD PTR ds:0x428ec5,ebx
  412255:	mov    ebx,DWORD PTR ds:0x428ec5
  41225b:	dec    ebx
  41225c:	mov    DWORD PTR ds:0x428ec5,ebx
  412262:	jmp    0x412211
  412267:	mov    ebx,0xfdbe0321
  41226c:	add    DWORD PTR ds:0x428eb9,0x428e39
  412276:	sub    ebx,edx
  412278:	add    ebx,DWORD PTR [ebp-0x48]
  41227b:	sbb    edx,DWORD PTR ds:0x428e75
  412281:	mov    DWORD PTR [ebp-0x48],ebx
  412284:	xor    DWORD PTR ds:0x428e9d,edi
  41228a:	mov    edx,DWORD PTR [ebp+0x8]
  41228d:	mov    ebx,DWORD PTR ds:0x428e35
  412293:	sub    DWORD PTR ds:0x428e4d,ebx
  412299:	mov    ebx,DWORD PTR [ebp-0x44]
  41229c:	add    edx,edi
  41229e:	xor    DWORD PTR ds:0x428e7d,0x7f21
  4122a8:	xor    edx,ebx
  4122aa:	mov    DWORD PTR [ebp-0x44],edx
  4122ad:	movzx  edx,BYTE PTR ds:0x428e9d
  4122b4:	adc    DWORD PTR ds:0x428e65,edx
  4122ba:	mov    edx,DWORD PTR [ebp+0x8]
  4122bd:	xor    DWORD PTR ds:0x428e55,0x428ead
  4122c7:	xor    edx,eax
  4122c9:	add    edx,esi
  4122cb:	mov    DWORD PTR ds:0x428e95,0x7e15
  4122d5:	jne    0x40fc55
  4122db:	jmp    0x412616
  4122e0:	mov    edx,DWORD PTR [ebp-0xc]
  4122e3:	inc    ebx
  4122e4:	sub    edx,esi
  4122e6:	movzx  ebx,BYTE PTR ds:0x428ebd
  4122ed:	xor    DWORD PTR ds:0x428ec5,ebx
  4122f3:	xor    edx,eax
  4122f5:	mov    DWORD PTR ds:0x428e31,0x17
  4122ff:	cmp    DWORD PTR ds:0x428e31,0x0
  412306:	je     0x412355
  41230c:	cmp    DWORD PTR ds:0x428e31,0xa
  412313:	jle    0x412355
  412319:	jmp    0x412329
  41231e:	push   0x428059
  412323:	call   DWORD PTR ds:0x42ca30
  412329:	cmp    DWORD PTR ds:0x428e31,0xb
  412330:	jne    0x412343
  412336:	mov    ebx,DWORD PTR ds:0x428e31
  41233c:	dec    ebx
  41233d:	mov    DWORD PTR ds:0x428e31,ebx
  412343:	mov    ebx,DWORD PTR ds:0x428e31
  412349:	dec    ebx
  41234a:	mov    DWORD PTR ds:0x428e31,ebx
  412350:	jmp    0x4122ff
  412355:	mov    DWORD PTR [ebp-0x5c],edx
  412358:	mov    edx,DWORD PTR [ebp-0x10]
  41235b:	mov    ebx,DWORD PTR [ebp-0x8]
  41235e:	xor    DWORD PTR ds:0x428e99,0xf1a
  412368:	xor    edx,eax
  41236a:	xor    ebx,eax
  41236c:	sub    DWORD PTR ds:0x428ebd,0x1998
  412376:	sub    edx,ebx
  412378:	sub    edx,esi
  41237a:	xor    edx,eax
  41237c:	mov    DWORD PTR [ebp-0x10],edx
  41237f:	mov    edx,DWORD PTR [ebp-0x14]
  412382:	mov    DWORD PTR [ebp+0x8],edx
  412385:	jmp    0x4123fa
  41238a:	mov    edx,DWORD PTR [ebp+0x8]
  41238d:	mov    ebx,DWORD PTR [ebp-0x8]
  412390:	xor    edx,eax
  412392:	xor    ebx,eax
  412394:	sub    edx,ebx
  412396:	sub    edx,esi
  412398:	xor    edx,eax
  41239a:	mov    DWORD PTR [ebp+0x8],edx
  41239d:	mov    edx,DWORD PTR [ebp+0x8]
  4123a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4123a3:	lea    edx,[ebx+edx*1+0x5708f8]
  4123aa:	mov    DWORD PTR [ebp-0x58],edx
  4123ad:	mov    edx,DWORD PTR [ebp+0x8]
  4123b0:	mov    ebx,DWORD PTR [ebp-0x54]
  4123b3:	add    edx,0x64f89a
  4123b9:	imul   edx,ebx
  4123bc:	mov    DWORD PTR [ebp-0x54],edx
  4123bf:	mov    edx,DWORD PTR [ebp+0x8]
  4123c2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123c5:	add    edx,0x242ebed
  4123cb:	and    edx,ebx
  4123cd:	mov    DWORD PTR [ebp-0x50],edx
  4123d0:	mov    edx,DWORD PTR [ebp+0x8]
  4123d3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4123d6:	add    edx,ecx
  4123d8:	or     edx,ebx
  4123da:	mov    DWORD PTR [ebp-0x4c],edx
  4123dd:	mov    edx,DWORD PTR [ebp+0x8]
  4123e0:	mov    ebx,0xfdbe0321
  4123e5:	sub    ebx,edx
  4123e7:	add    ebx,DWORD PTR [ebp-0x48]
  4123ea:	mov    DWORD PTR [ebp-0x48],ebx
  4123ed:	mov    edx,DWORD PTR [ebp+0x8]
  4123f0:	mov    ebx,DWORD PTR [ebp-0x44]
  4123f3:	add    edx,edi
  4123f5:	xor    edx,ebx
  4123f7:	mov    DWORD PTR [ebp-0x44],edx
  4123fa:	mov    edx,DWORD PTR [ebp+0x8]
  4123fd:	xor    edx,eax
  4123ff:	add    edx,esi
  412401:	jne    0x41238a
  412407:	mov    edx,DWORD PTR [ebp-0xc]
  41240a:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412411:	mov    bl,BYTE PTR [ebp-0x1]
  412414:	cmp    dl,bl
  412416:	je     0x4124f4
  41241c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41241f:	mov    edx,DWORD PTR [ebp-0xc]
  412422:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412429:	mov    ebx,DWORD PTR [ebp+0xc]
  41242c:	xor    ecx,eax
  41242e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f8]
  412435:	jne    0x412628
  41243b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41243e:	mov    edx,DWORD PTR [ebp+0xc]
  412441:	xor    ecx,eax
  412443:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f8]
  41244b:	mov    edx,DWORD PTR [ebp-0x18]
  41244e:	xor    edx,eax
  412450:	add    edx,esi
  412452:	cmp    ecx,edx
  412454:	mov    ecx,DWORD PTR [ebp-0x14]
  412457:	mov    DWORD PTR [ebp+0x8],ecx
  41245a:	mov    ecx,DWORD PTR [ebp+0x8]
  41245d:	je     0x414aa9
  412463:	xor    ecx,eax
  412465:	add    ecx,esi
  412467:	mov    ecx,0xf641bea
  41246c:	je     0x41257c
  412472:	mov    edx,DWORD PTR [ebp+0x8]
  412475:	mov    ebx,DWORD PTR [ebp-0x8]
  412478:	xor    edx,eax
  41247a:	xor    ebx,eax
  41247c:	sub    edx,ebx
  41247e:	sub    edx,esi
  412480:	xor    edx,eax
  412482:	mov    DWORD PTR [ebp+0x8],edx
  412485:	mov    edx,DWORD PTR [ebp+0x8]
  412488:	mov    ebx,DWORD PTR [ebp-0x58]
  41248b:	lea    edx,[ebx+edx*1+0x5708f8]
  412492:	mov    DWORD PTR [ebp-0x58],edx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	mov    ebx,DWORD PTR [ebp-0x54]
  41249b:	add    edx,0x64f89a
  4124a1:	imul   edx,ebx
  4124a4:	mov    DWORD PTR [ebp-0x54],edx
  4124a7:	mov    edx,DWORD PTR [ebp+0x8]
  4124aa:	mov    ebx,DWORD PTR [ebp-0x50]
  4124ad:	add    edx,0x242ebed
  4124b3:	and    edx,ebx
  4124b5:	mov    DWORD PTR [ebp-0x50],edx
  4124b8:	mov    edx,DWORD PTR [ebp+0x8]
  4124bb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124be:	add    edx,ecx
  4124c0:	or     edx,ebx
  4124c2:	mov    DWORD PTR [ebp-0x4c],edx
  4124c5:	mov    edx,DWORD PTR [ebp+0x8]
  4124c8:	mov    ebx,0xfdbe0321
  4124cd:	sub    ebx,edx
  4124cf:	add    ebx,DWORD PTR [ebp-0x48]
  4124d2:	mov    DWORD PTR [ebp-0x48],ebx
  4124d5:	mov    edx,DWORD PTR [ebp+0x8]
  4124d8:	mov    ebx,DWORD PTR [ebp-0x44]
  4124db:	add    edx,edi
  4124dd:	xor    edx,ebx
  4124df:	mov    DWORD PTR [ebp-0x44],edx
  4124e2:	mov    edx,DWORD PTR [ebp+0x8]
  4124e5:	xor    edx,eax
  4124e7:	add    edx,esi
  4124e9:	jne    0x412472
  4124ef:	jmp    0x41257c
  4124f4:	mov    edx,DWORD PTR [ebp-0x14]
  4124f7:	mov    DWORD PTR [ebp+0x8],edx
  4124fa:	jmp    0x41256f
  4124ff:	mov    edx,DWORD PTR [ebp+0x8]
  412502:	mov    ebx,DWORD PTR [ebp-0x8]
  412505:	xor    edx,eax
  412507:	xor    ebx,eax
  412509:	sub    edx,ebx
  41250b:	sub    edx,esi
  41250d:	xor    edx,eax
  41250f:	mov    DWORD PTR [ebp+0x8],edx
  412512:	mov    edx,DWORD PTR [ebp+0x8]
  412515:	mov    ebx,DWORD PTR [ebp-0x58]
  412518:	lea    edx,[ebx+edx*1+0x5708f8]
  41251f:	mov    DWORD PTR [ebp-0x58],edx
  412522:	mov    edx,DWORD PTR [ebp+0x8]
  412525:	mov    ebx,DWORD PTR [ebp-0x54]
  412528:	add    edx,0x64f89a
  41252e:	imul   edx,ebx
  412531:	mov    DWORD PTR [ebp-0x54],edx
  412534:	mov    edx,DWORD PTR [ebp+0x8]
  412537:	mov    ebx,DWORD PTR [ebp-0x50]
  41253a:	add    edx,0x242ebed
  412540:	and    edx,ebx
  412542:	mov    DWORD PTR [ebp-0x50],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,DWORD PTR [ebp-0x4c]
  41254b:	add    edx,ecx
  41254d:	or     edx,ebx
  41254f:	mov    DWORD PTR [ebp-0x4c],edx
  412552:	mov    edx,DWORD PTR [ebp+0x8]
  412555:	mov    ebx,0xfdbe0321
  41255a:	sub    ebx,edx
  41255c:	add    ebx,DWORD PTR [ebp-0x48]
  41255f:	mov    DWORD PTR [ebp-0x48],ebx
  412562:	mov    edx,DWORD PTR [ebp+0x8]
  412565:	mov    ebx,DWORD PTR [ebp-0x44]
  412568:	add    edx,edi
  41256a:	xor    edx,ebx
  41256c:	mov    DWORD PTR [ebp-0x44],edx
  41256f:	mov    edx,DWORD PTR [ebp+0x8]
  412572:	xor    edx,eax
  412574:	add    edx,esi
  412576:	jne    0x4124ff
  41257c:	mov    edx,DWORD PTR [ebp-0x14]
  41257f:	mov    DWORD PTR [ebp+0x8],edx
  412582:	jmp    0x4125f7
  412587:	mov    edx,DWORD PTR [ebp+0x8]
  41258a:	mov    ebx,DWORD PTR [ebp-0x8]
  41258d:	xor    edx,eax
  41258f:	xor    ebx,eax
  412591:	sub    edx,ebx
  412593:	sub    edx,esi
  412595:	xor    edx,eax
  412597:	mov    DWORD PTR [ebp+0x8],edx
  41259a:	mov    edx,DWORD PTR [ebp+0x8]
  41259d:	mov    ebx,DWORD PTR [ebp-0x58]
  4125a0:	lea    edx,[ebx+edx*1+0x5708f8]
  4125a7:	mov    DWORD PTR [ebp-0x58],edx
  4125aa:	mov    edx,DWORD PTR [ebp+0x8]
  4125ad:	mov    ebx,DWORD PTR [ebp-0x54]
  4125b0:	add    edx,0x64f89a
  4125b6:	imul   edx,ebx
  4125b9:	mov    DWORD PTR [ebp-0x54],edx
  4125bc:	mov    edx,DWORD PTR [ebp+0x8]
  4125bf:	mov    ebx,DWORD PTR [ebp-0x50]
  4125c2:	add    edx,0x242ebed
  4125c8:	and    edx,ebx
  4125ca:	mov    DWORD PTR [ebp-0x50],edx
  4125cd:	mov    edx,DWORD PTR [ebp+0x8]
  4125d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125d3:	add    edx,ecx
  4125d5:	or     edx,ebx
  4125d7:	mov    DWORD PTR [ebp-0x4c],edx
  4125da:	mov    edx,DWORD PTR [ebp+0x8]
  4125dd:	mov    ebx,0xfdbe0321
  4125e2:	sub    ebx,edx
  4125e4:	add    ebx,DWORD PTR [ebp-0x48]
  4125e7:	mov    DWORD PTR [ebp-0x48],ebx
  4125ea:	mov    edx,DWORD PTR [ebp+0x8]
  4125ed:	mov    ebx,DWORD PTR [ebp-0x44]
  4125f0:	add    edx,edi
  4125f2:	xor    edx,ebx
  4125f4:	mov    DWORD PTR [ebp-0x44],edx
  4125f7:	mov    edx,DWORD PTR [ebp+0x8]
  4125fa:	xor    edx,eax
  4125fc:	add    edx,esi
  4125fe:	jne    0x412587
  412604:	mov    edx,DWORD PTR [ebp-0x8]
  412607:	mov    ebx,DWORD PTR [ebp-0xc]
  41260a:	xor    edx,eax
  41260c:	lea    edx,[edx+ebx*1+0x3272f8]
  412613:	mov    DWORD PTR [ebp-0xc],edx
  412616:	mov    edx,DWORD PTR [ebp-0x10]
  412619:	xor    edx,eax
  41261b:	add    edx,esi
  41261d:	jne    0x4122e0
  412623:	jmp    0x414ab3
  412628:	mov    ecx,DWORD PTR [ebp-0x14]
  41262b:	mov    DWORD PTR [ebp+0x8],ecx
  41262e:	jmp    0x4126a7
  412633:	mov    ecx,DWORD PTR [ebp+0x8]
  412636:	mov    edx,DWORD PTR [ebp-0x8]
  412639:	xor    ecx,eax
  41263b:	xor    edx,eax
  41263d:	sub    ecx,edx
  41263f:	sub    ecx,esi
  412641:	xor    ecx,eax
  412643:	mov    DWORD PTR [ebp+0x8],ecx
  412646:	mov    ecx,DWORD PTR [ebp+0x8]
  412649:	mov    edx,DWORD PTR [ebp-0x58]
  41264c:	lea    ecx,[edx+ecx*1+0x5708f8]
  412653:	mov    DWORD PTR [ebp-0x58],ecx
  412656:	mov    ecx,DWORD PTR [ebp+0x8]
  412659:	mov    edx,DWORD PTR [ebp-0x54]
  41265c:	add    ecx,0x64f89a
  412662:	imul   ecx,edx
  412665:	mov    DWORD PTR [ebp-0x54],ecx
  412668:	mov    ecx,DWORD PTR [ebp+0x8]
  41266b:	mov    edx,DWORD PTR [ebp-0x50]
  41266e:	add    ecx,0x242ebed
  412674:	and    ecx,edx
  412676:	mov    DWORD PTR [ebp-0x50],ecx
  412679:	mov    ecx,DWORD PTR [ebp+0x8]
  41267c:	mov    edx,DWORD PTR [ebp-0x4c]
  41267f:	add    ecx,0xf641bea
  412685:	or     ecx,edx
  412687:	mov    DWORD PTR [ebp-0x4c],ecx
  41268a:	mov    ecx,DWORD PTR [ebp+0x8]
  41268d:	mov    edx,0xfdbe0321
  412692:	sub    edx,ecx
  412694:	add    edx,DWORD PTR [ebp-0x48]
  412697:	mov    DWORD PTR [ebp-0x48],edx
  41269a:	mov    ecx,DWORD PTR [ebp+0x8]
  41269d:	mov    edx,DWORD PTR [ebp-0x44]
  4126a0:	add    ecx,edi
  4126a2:	xor    ecx,edx
  4126a4:	mov    DWORD PTR [ebp-0x44],ecx
  4126a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4126aa:	xor    ecx,eax
  4126ac:	add    ecx,esi
  4126ae:	jne    0x412633
  4126b4:	jmp    0x414abf
  4126b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4126bc:	mov    edx,DWORD PTR [ebp-0x8]
  4126bf:	xor    ecx,eax
  4126c1:	xor    edx,eax
  4126c3:	sub    ecx,edx
  4126c5:	sub    ecx,esi
  4126c7:	xor    ecx,eax
  4126c9:	mov    DWORD PTR [ebp+0x8],ecx
  4126cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126cf:	mov    edx,DWORD PTR [ebp-0x58]
  4126d2:	lea    ecx,[edx+ecx*1+0x5708f8]
  4126d9:	mov    DWORD PTR [ebp-0x58],ecx
  4126dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126df:	mov    edx,DWORD PTR [ebp-0x54]
  4126e2:	add    ecx,0x64f89a
  4126e8:	imul   ecx,edx
  4126eb:	mov    DWORD PTR [ebp-0x54],ecx
  4126ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4126f1:	mov    edx,DWORD PTR [ebp-0x50]
  4126f4:	add    ecx,0x242ebed
  4126fa:	and    ecx,edx
  4126fc:	mov    DWORD PTR [ebp-0x50],ecx
  4126ff:	mov    ecx,DWORD PTR [ebp+0x8]
  412702:	mov    edx,DWORD PTR [ebp-0x4c]
  412705:	add    ecx,0xf641bea
  41270b:	or     ecx,edx
  41270d:	jmp    0x414a86
  412712:	enter  0xa3a8,0x29
  412716:	jecxz  0x412742
  412718:	dec    edx
  412719:	push   0xffffff84
  41271b:	add    al,0xed
  41271d:	xlat   BYTE PTR ds:[ebx]
  41271e:	ins    BYTE PTR es:[edi],dx
  41271f:	mov    al,0x84
  412721:	jmp    0x9ed7:0x7b7b720e
  412728:	jnp    0x4127a5
  41272a:	push   edi
  41272b:	or     BYTE PTR [eax-0x80],bl
  41272e:	adc    DWORD PTR [edx],ebx
  412730:	retf   0xf7e0
  412733:	jo     0x41278f
  412735:	adc    al,0x8b
  412737:	mov    ss,WORD PTR [ebx]
  412739:	repnz addr16 aam 0xd3
  41273d:	bound  ebp,QWORD PTR [eax]
  41273f:	or     ah,BYTE PTR [eax]
  412741:	add    esp,DWORD PTR [esi-0x42]
  412744:	lods   eax,DWORD PTR ds:[esi]
  412745:	dec    ecx
  412746:	sub    bl,bh
  412748:	and    al,0x12
  41274a:	jg     0x412731
  41274c:	xor    ebx,ebx
  41274e:	enter  0xe548,0xf1
  412752:	push   ecx
  412753:	aad    0x68
  412755:	(bad)
  412758:	cmp    BYTE PTR [ebx+eax*8+0x22b713c2],cl
  41275f:	sub    DWORD PTR [ecx+0x29],ebp
  412762:	lock dec ecx
  412764:	fdiv   QWORD PTR [esi]
  412766:	ret    
  412767:	sahf   
  412768:	jge    0x4127d8
  41276a:	test   eax,0xb07466ec
  41276f:	imul   edx,DWORD PTR [ecx],0x17
  412772:	jns    0x41270a
  412774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412775:	push   ds
  412776:	add    dl,BYTE PTR [ebx+ebp*8+0x766722f0]
  41277d:	out    dx,eax
  41277e:	mov    al,0xfb
  412780:	std    
  412781:	dec    eax
  412782:	and    al,0x4d
  412784:	mov    ah,0x7b
  412786:	lea    ecx,[ecx+0x5b]
  412789:	outs   dx,BYTE PTR ds:[esi]
  41278a:	cmp    al,0x90
  41278c:	push   es
  41278d:	jns    0x4127d8
  41278f:	scas   al,BYTE PTR es:[edi]
  412790:	(bad)  
  412791:	or     al,0xc6
  412793:	mov    bh,0xa9
  412795:	xchg   ebp,eax
  412796:	sahf   
  412797:	mov    edx,0xda57ecf0
  41279c:	retf   0x2ac6
  41279f:	inc    esp
  4127a0:	js     0x412732
  4127a2:	loopne 0x41275b
  4127a4:	pop    ss
  4127a5:	int3   
  4127a6:	xchg   ecx,ebp
  4127a8:	lock cmp DWORD PTR [edi+eax*1+0x3d],ecx
  4127ad:	mov    ah,0x6c
  4127af:	stc    
  4127b0:	mov    ss,WORD PTR [ebp+0x33]
  4127b3:	lock jmp 0xbe437ac0
  4127b9:	lods   eax,DWORD PTR ds:[esi]
  4127ba:	fld    QWORD PTR ds:0x7411ce79
  4127c0:	xchg   esp,eax
  4127c1:	iret   
  4127c2:	aaa    
  4127c3:	push   ebp
  4127c4:	inc    ebp
  4127c5:	pusha  
  4127c6:	outs   dx,DWORD PTR ds:[esi]
  4127c7:	and    eax,0x51e83cdb
  4127cc:	cli    
  4127cd:	push   edx
  4127ce:	imul   esi,DWORD PTR ss:[edi-0x1a6479aa],0x36f83ff4
  4127d9:	daa    
  4127da:	iret   
  4127db:	lods   eax,DWORD PTR ds:[esi]
  4127dc:	push   0xf856866e
  4127e1:	inc    eax
  4127e2:	or     BYTE PTR [ecx-0x56bb22f0],dl
  4127e8:	mov    bl,0xba
  4127ea:	cdq    
  4127eb:	jg     0x41278a
  4127ed:	inc    esi
  4127ee:	(bad)  
  4127f0:	xchg   edi,eax
  4127f1:	scas   al,BYTE PTR es:[edi]
  4127f2:	pop    esi
  4127f3:	scas   eax,DWORD PTR es:[edi]
  4127f4:	jbe    0x412869
  4127f6:	inc    ecx
  4127f7:	enter  0x8682,0xc9
  4127fb:	jne    0x41286f
  4127fd:	push   eax
  4127fe:	ins    DWORD PTR es:[edi],dx
  4127ff:	mov    ebp,0x5f79fbde
  412804:	inc    ecx
  412805:	int3   
  412806:	fs xchg ecx,eax
  412808:	mov    esi,0xc7016afa
  41280d:	push   edx
  41280e:	dec    edx
  41280f:	sub    ecx,esi
  412811:	sbb    ah,BYTE PTR [edx-0x6ade5cc5]
  412817:	mov    ah,BYTE PTR [ecx+0x470113d1]
  41281d:	xor    al,0xe0
  41281f:	or     cl,0xd3
  412822:	jg     0x4127fe
  412824:	ds je  0x4127ff
  412827:	ss xchg ecx,eax
  412829:	adc    eax,DWORD PTR [eax-0x13]
  41282c:	xchg   ebx,eax
  41282d:	xchg   ecx,eax
  41282e:	jnp    0x4127c8
  412830:	mul    eax
  412832:	sbb    DWORD PTR [eax],edx
  412834:	lods   eax,DWORD PTR ds:[esi]
  412835:	rcl    BYTE PTR [edx+0x67],1
  412838:	xor    eax,0x9925e69d
  41283d:	call   0x36495e8d
  412842:	stos   BYTE PTR es:[edi],al
  412843:	enter  0x751e,0x55
  412847:	js     0x412874
  412849:	mov    BYTE PTR [ebx+0x2c],al
  41284c:	aas    
  41284d:	jecxz  0x41288a
  41284f:	jle    0x41285e
  412851:	das    
  412852:	pop    esp
  412853:	in     al,0x66
  412855:	mov    esi,0x6b37d99
  41285a:	loopne 0x4128b7
  41285c:	ins    BYTE PTR es:[edi],dx
  41285d:	xchg   DWORD PTR es:[edx],ebx
  412860:	xchg   esi,eax
  412861:	mov    WORD PTR ds:0xb6c9eb1e,gs
  412867:	push   esi
  412868:	jg     0x4128ba
  41286a:	push   es
  41286b:	push   ss
  41286c:	inc    ebp
  41286d:	loop   0x41287f
  41286f:	sbb    esp,edx
  412871:	neg    BYTE PTR [esi-0x19]
  412874:	push   0xffffffb0
  412876:	out    0xbf,al
  412878:	outs   dx,DWORD PTR ds:[esi]
  412879:	sbb    eax,0x645bdcf1
  41287e:	inc    ecx
  41287f:	push   0x41
  412881:	hlt    
  412882:	fimul  WORD PTR [ecx]
  412884:	int3   
  412885:	sub    ah,bl
  412887:	lahf   
  412888:	and    al,0x8a
  41288a:	sbb    BYTE PTR [eax],0x6b
  41288d:	js     0x4128bc
  41288f:	sbb    al,0x2e
  412891:	push   es
  412892:	stc    
  412893:	(bad)  
  412894:	idiv   DWORD PTR [esi-0x40a9d7d4]
  41289a:	aam    0xb6
  41289c:	cdq    
  41289d:	daa    
  41289e:	fidiv  WORD PTR [eax+ecx*2-0x1c]
  4128a2:	cmp    eax,0x5363c4db
  4128a7:	sahf   
  4128a8:	dec    esi
  4128a9:	retf   
  4128aa:	push   0xffffffb7
  4128ac:	sbb    al,0x45
  4128ae:	or     esp,DWORD PTR [eax]
  4128b0:	jae    0x412894
  4128b2:	jg     0x41292a
  4128b4:	add    eax,0x1b798c3b
  4128b9:	mov    ah,0xc5
  4128bb:	xchg   edx,eax
  4128bc:	ret    
  4128bd:	iret   
  4128be:	sbb    DWORD PTR [edx-0xb3c180],edi
  4128c4:	jmp    0xaeac8989
  4128c9:	cmp    eax,0x629447fa
  4128ce:	loope  0x412870
  4128d0:	push   ecx
  4128d1:	xor    eax,0x6a861c9b
  4128d6:	or     BYTE PTR [esp+ecx*8],0x31
  4128da:	push   ss
  4128db:	sub    esp,DWORD PTR [ebx]
  4128dd:	call   0x4bc71ab3
  4128e2:	clc    
  4128e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e4:	mov    dl,BYTE PTR [edx+0x5a]
  4128e7:	test   BYTE PTR [ecx-0x30],bh
  4128ea:	xor    eax,0x57403869
  4128ef:	ins    BYTE PTR es:[di],dx
  4128f1:	sub    DWORD PTR [ebx],esp
  4128f3:	das    
  4128f4:	mov    BYTE PTR [esp-0x2b859f12],ch
  4128fb:	hlt    
  4128fc:	jae    0x412894
  4128fe:	mov    edx,0x2e00a018
  412903:	cli    
  412904:	imul   ebp,eax,0xb
  412907:	test   DWORD PTR [ecx-0x336565a4],edi
  41290d:	cdq    
  41290e:	sub    BYTE PTR [edx],bl
  412910:	ficomp WORD PTR [edx-0x9]
  412913:	add    al,0xa7
  412915:	jne    0x412909
  412917:	ror    ebx,0x36
  41291a:	jns    0x4128f1
  41291c:	or     BYTE PTR [eax+0x22],0xe5
  412920:	sahf   
  412921:	cmp    BYTE PTR [esi-0x41],0xb4
  412925:	aad    0xcf
  412927:	in     eax,dx
  412928:	test   dh,0x5
  41292b:	mov    esi,0xeb91a291
  412930:	rcl    dh,1
  412932:	pop    esp
  412933:	jp     0x412919
  412935:	fnsave [esi]
  412937:	test   DWORD PTR [edx],0x26c9df1e
  41293d:	shl    BYTE PTR [eax+0x58],cl
  412940:	cwde   
  412941:	and    ebx,ebx
  412943:	xchg   edx,eax
  412944:	cmp    DWORD PTR [esp],ebx
  412947:	loopne 0x412993
  412949:	adc    bh,BYTE PTR [esi+ecx*8]
  41294c:	push   ebp
  41294d:	icebp  
  41294e:	fisub  WORD PTR [edi]
  412950:	adc    DWORD PTR [edx+0xd74d1d5],eax
  412956:	mov    ds:0xcea5d136,al
  41295b:	jmp    0x41296e
  41295d:	xor    BYTE PTR [esi-0x1b],ah
  412960:	push   esi
  412961:	outs   dx,DWORD PTR ds:[esi]
  412962:	repnz mov ebx,0x232da679
  412968:	fistp  WORD PTR [edx-0x2af68abf]
  41296e:	call   0xe049:0x711d2b6e
  412975:	aam    0xb3
  412977:	xor    BYTE PTR ds:0x8525a3e6,dl
  41297d:	leave  
  41297e:	fadd   QWORD PTR [edx-0x3a2ba077]
  412984:	jmp    0x5482:0xdff73c08
  41298b:	sub    BYTE PTR [ecx+ebx*8-0x7d],dh
  41298f:	or     bl,BYTE PTR [esi+0x23]
  412992:	dec    edx
  412993:	jmp    0x267a:0xbb8e4688
  41299a:	lock xor BYTE PTR [eax],dh
  41299d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299e:	push   esi
  41299f:	mov    ch,0x28
  4129a1:	inc    ebx
  4129a2:	push   ebx
  4129a3:	ins    DWORD PTR es:[edi],dx
  4129a4:	cli    
  4129a5:	outs   dx,BYTE PTR ds:[esi]
  4129a6:	xor    ebp,esp
  4129a8:	sti    
  4129a9:	or     al,0x93
  4129ab:	scas   al,BYTE PTR es:[edi]
  4129ac:	fwait
  4129ad:	mov    BYTE PTR [ebp-0x23],dl
  4129b0:	xchg   DWORD PTR [ebp+0x39b87eda],edx
  4129b6:	mov    al,ds:0x444986f
  4129bb:	das    
  4129bc:	and    DWORD PTR [esi],ebx
  4129be:	mov    ecx,edi
  4129c0:	nop
  4129c1:	lods   al,BYTE PTR ds:[esi]
  4129c2:	fbld   TBYTE PTR [edi+0x4eecc97d]
  4129c8:	mov    esp,0xaba2d28c
  4129cd:	mov    esi,0xcb4181c3
  4129d2:	and    eax,0x767a1211
  4129d7:	div    dl
  4129d9:	add    ebp,DWORD PTR [ebp-0x2f81c0f1]
  4129df:	dec    cl
  4129e1:	jns    0x412a51
  4129e3:	sub    al,0x2d
  4129e5:	in     eax,0x86
  4129e7:	mov    ah,0x86
  4129e9:	cmp    al,0x98
  4129eb:	pop    edi
  4129ec:	inc    ecx
  4129ed:	jecxz  0x4129e1
  4129ef:	dec    ecx
  4129f0:	push   ss
  4129f1:	or     ebx,ebx
  4129f3:	stos   BYTE PTR es:[edi],al
  4129f4:	je     0x412a5c
  4129f6:	fisubr WORD PTR [ebp-0x485f3e91]
  4129fc:	cmp    eax,0x281efaf1
  412a01:	inc    ebp
  412a02:	stc    
  412a03:	inc    ch
  412a05:	retf   0xa897
  412a08:	sbb    edi,eax
  412a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a0b:	into   
  412a0c:	repz sub eax,DWORD PTR [edi+0x19784dd9]
  412a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a14:	dec    ebp
  412a15:	outs   dx,BYTE PTR ds:[esi]
  412a16:	sti    
  412a17:	pop    esi
  412a18:	icebp  
  412a19:	js     0x412a71
  412a1b:	(bad)  
  412a1c:	push   edi
  412a1d:	jo     0x412a84
  412a1f:	and    BYTE PTR [edx],0xa7
  412a22:	icebp  
  412a23:	cmp    DWORD PTR [edi-0x9],ebp
  412a26:	scas   eax,DWORD PTR es:[edi]
  412a27:	mov    al,0xeb
  412a29:	stos   BYTE PTR es:[edi],al
  412a2a:	scas   eax,DWORD PTR es:[edi]
  412a2b:	fcomip st,st(3)
  412a2d:	xlat   BYTE PTR ds:[ebx]
  412a2e:	pop    edi
  412a2f:	and    ch,dh
  412a31:	jle    0x4129b3
  412a33:	cwde   
  412a34:	bound  ebx,QWORD PTR [esi]
  412a36:	mov    ah,0xf0
  412a38:	icebp  
  412a39:	jg     0x4129d1
  412a3b:	jmp    FWORD PTR [ecx-0x6a]
  412a3e:	xchg   ebp,eax
  412a3f:	(bad)
  412a43:	mov    al,0x38
  412a45:	xor    al,0x13
  412a47:	(bad)  [ecx+0x68be7629]
  412a4d:	dec    edi
  412a4e:	mov    eax,0x3eafc107
  412a53:	jecxz  0x412a14
  412a55:	nop
  412a56:	pop    edx
  412a57:	jnp    0x412a86
  412a59:	in     al,0x6b
  412a5b:	mov    esi,0xae1ec9fd
  412a60:	mov    ds:0x2c3d851a,al
  412a65:	ss mov si,bp
  412a69:	dec    esi
  412a6a:	test   DWORD PTR [ebp-0x40b4533],edx
  412a70:	scas   eax,DWORD PTR es:[edi]
  412a71:	sub    al,BYTE PTR [ecx-0x27]
  412a74:	add    ah,BYTE PTR [edx]
  412a76:	and    edi,edx
  412a78:	js     0x412a85
  412a7a:	mov    ds:0x5f893101,al
  412a7f:	stos   DWORD PTR es:[edi],eax
  412a80:	xlat   BYTE PTR ds:[ebx]
  412a81:	add    dh,BYTE PTR [ebx]
  412a83:	mov    al,ds:0xee493d13
  412a88:	shl    BYTE PTR [eax+0x77],1
  412a8b:	inc    esi
  412a8c:	aas    
  412a8d:	int3   
  412a8e:	(bad)  
  412a8f:	scas   al,BYTE PTR es:[edi]
  412a90:	adc    ch,BYTE PTR [ebp+edx*1+0x32077d82]
  412a97:	push   0x19351f5f
  412a9c:	adc    ebp,ebp
  412a9e:	loope  0x412a37
  412aa0:	pop    eax
  412aa1:	push   eax
  412aa2:	inc    ebx
  412aa3:	inc    esp
  412aa4:	dec    ecx
  412aa5:	and    ebx,esi
  412aa7:	pop    es
  412aa8:	push   ebp
  412aa9:	(bad)  
  412aaa:	jp     0x412a4a
  412aac:	int3   
  412aad:	add    al,0xdb
  412aaf:	jns    0x412a94
  412ab1:	push   esi
  412ab2:	les    ebx,FWORD PTR [eax+0x71cd2373]
  412ab8:	xchg   esp,eax
  412ab9:	stos   DWORD PTR es:[edi],eax
  412aba:	scas   al,BYTE PTR es:[edi]
  412abb:	jae    0x412b16
  412abd:	push   ebx
  412abe:	mov    esp,0xdec8a68a
  412ac3:	fidivr DWORD PTR [edi]
  412ac5:	call   0x8aa7:0x724ad202
  412acc:	lods   eax,DWORD PTR ds:[esi]
  412acd:	cdq    
  412ace:	lds    edx,FWORD PTR [eax-0x3f45c02b]
  412ad4:	in     eax,0x41
  412ad6:	loop   0x412b41
  412ad8:	xchg   DWORD PTR [edx-0x2d],edx
  412adb:	or     eax,0x4183b1a8
  412ae0:	mov    al,ds:0x1e142d05
  412ae5:	and    cl,BYTE PTR [ecx]
  412ae7:	push   0x10
  412ae9:	mov    ch,0x55
  412aeb:	inc    esp
  412aec:	(bad)  
  412aed:	loopne 0x412b08
  412aef:	cli    
  412af0:	pusha  
  412af1:	add    eax,0x59513908
  412af6:	push   edi
  412af7:	mov    ds:0xfa26194b,eax
  412afc:	mov    edi,0x431b1714
  412b01:	rcl    DWORD PTR [edx*4+0x2338fc78],0xc4
  412b09:	pop    ds
  412b0a:	mov    ebx,0xdfa46dd9
  412b0f:	cmp    esp,0x8fb8bb05
  412b15:	push   ds
  412b16:	(bad)  
  412b17:	mov    bh,0x43
  412b19:	stos   DWORD PTR es:[edi],eax
  412b1a:	stos   DWORD PTR es:[edi],eax
  412b1b:	jbe    0x412aa5
  412b1d:	sub    ecx,DWORD PTR [edi-0x1a]
  412b20:	push   edi
  412b21:	push   ss
  412b22:	fwait
  412b23:	cmp    ecx,eax
  412b25:	push   0x20bff3e9
  412b2a:	mov    bh,0xc
  412b2c:	sbb    BYTE PTR [ebp-0x2e672408],al
  412b32:	or     BYTE PTR [edx+esi*4-0x7c],0x11
  412b37:	and    dl,BYTE PTR [esi-0x2b]
  412b3a:	pop    ebp
  412b3b:	ds (bad) 
  412b3d:	ss pop ds
  412b3f:	cmp    bh,BYTE PTR [edi+0xf]
  412b42:	stc    
  412b43:	inc    ecx
  412b44:	mov    ecx,0x7e039c40
  412b49:	mov    dl,0xa3
  412b4b:	inc    edi
  412b4c:	push   es
  412b4d:	inc    ebx
  412b4e:	dec    edx
  412b4f:	or     ebx,DWORD PTR [edi]
  412b51:	sbb    BYTE PTR [ecx+0x6ba36e38],bh
  412b57:	add    eax,0xc474e3b6
  412b5c:	call   0xa218:0xbba78dfe
  412b63:	icebp  
  412b64:	inc    esi
  412b65:	xchg   ebp,eax
  412b66:	dec    esp
  412b67:	pop    edi
  412b68:	lods   al,BYTE PTR ds:[esi]
  412b69:	jmp    0x49fb:0xdf378366
  412b70:	pop    ss
  412b71:	hlt    
  412b72:	imul   ebx,DWORD PTR [ecx+0x1],0xb01e71a
  412b79:	imul   edi,DWORD PTR [eax],0x154f4e68
  412b7f:	icebp  
  412b80:	scas   al,BYTE PTR es:[edi]
  412b81:	std    
  412b82:	ja     0x412bdf
  412b84:	(bad)  
  412b85:	test   DWORD PTR [esi-0x1135ff5b],ebp
  412b8b:	std    
  412b8c:	dec    ebp
  412b8d:	leave  
  412b8e:	ins    BYTE PTR es:[edi],dx
  412b8f:	or     al,BYTE PTR [esi]
  412b91:	sbb    bh,ah
  412b93:	enter  0xcf8d,0xb7
  412b97:	aas    
  412b98:	xchg   ebx,eax
  412b99:	mov    ch,0x6d
  412b9b:	xchg   esi,eax
  412b9c:	fwait
  412b9d:	nop    DWORD PTR [ecx-0x3c26377c]
  412ba4:	repnz out dx,al
  412ba6:	add    eax,0xec04d225
  412bab:	mov    esi,0x5f6cf3e5
  412bb0:	repnz mov al,0x89
  412bb3:	jmp    0x370899c2
  412bb8:	call   0x45df:0xd704a56
  412bbf:	aaa    
  412bc0:	jb     0x412b6e
  412bc2:	ja     0x412ba5
  412bc4:	icebp  
  412bc5:	jmp    0x412b59
  412bc7:	xor    eax,0x22f6a0ce
  412bcc:	adc    eax,0xf383f8e2
  412bd1:	or     al,0x61
  412bd3:	add    esi,ebp
  412bd5:	aad    0x61
  412bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd8:	fnsave [ebp+0x42]
  412bdb:	(bad)  
  412bdc:	sbb    al,0x14
  412bde:	loop   0x412be0
  412be0:	push   0x690635bf
  412be5:	and    eax,0xf95f4d82
  412bea:	jl     0x412ba5
  412bec:	jb     0x412bff
  412bee:	or     eax,0xbc48c223
  412bf3:	call   0x5f7fbef8
  412bf8:	push   eax
  412bf9:	cmp    DWORD PTR [edi-0x3d],ebp
  412bfc:	sub    eax,0xd6eebf46
  412c01:	jo     0x412c30
  412c03:	inc    esi
  412c04:	sub    BYTE PTR [ebx],dh
  412c06:	inc    ecx
  412c07:	push   ds
  412c08:	(bad)  
  412c09:	mov    ebp,0x967b4a4
  412c0e:	call   0xa38991dc
  412c13:	sbb    DWORD PTR [esi],ecx
  412c15:	dec    edi
  412c16:	mov    cl,0x83
  412c18:	sub    bh,bl
  412c1a:	sahf   
  412c1b:	sbb    eax,0xb7360594
  412c20:	jmp    0xbf41954e
  412c25:	xor    eax,0x99c57510
  412c2a:	adc    esi,DWORD PTR [ebx]
  412c2c:	popf   
  412c2d:	les    esi,FWORD PTR [eax+0x6c]
  412c30:	jnp    0x412bef
  412c32:	inc    ebp
  412c33:	dec    edi
  412c34:	lahf   
  412c35:	mov    edx,0x490871cf
  412c3a:	leave  
  412c3b:	add    DWORD PTR [eax+ecx*8+0x45],esi
  412c3f:	pop    es
  412c40:	xlat   BYTE PTR ds:[ebx]
  412c41:	and    al,0xac
  412c43:	ja     0x412c00
  412c45:	push   esp
  412c46:	mov    eax,0x3b6ee41c
  412c4b:	push   esi
  412c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4d:	sub    bl,BYTE PTR [ecx+edi*8-0x173ceb6f]
  412c54:	dec    ebp
  412c55:	hlt    
  412c56:	repnz push 0x7a
  412c59:	push   edi
  412c5a:	sub    eax,0x5aff4b87
  412c5f:	ret    
  412c60:	(bad)  
  412c61:	mov    ecx,0xa78bd511
  412c66:	int3   
  412c67:	jmp    0xc8d20b98
  412c6c:	lds    ebx,FWORD PTR [edx]
  412c6e:	out    dx,eax
  412c6f:	(bad)  
  412c70:	lds    ebx,FWORD PTR [ebx]
  412c72:	test   al,0x94
  412c74:	fiadd  DWORD PTR [edi+eax*2+0x295f55f7]
  412c7b:	sbb    al,0x46
  412c7d:	and    BYTE PTR [ecx+0x57],bh
  412c80:	stc    
  412c81:	ffreep st(1)
  412c83:	ja     0x412c1c
  412c85:	mov    edx,0xe132ad32
  412c8a:	data16 std 
  412c8c:	xor    dh,BYTE PTR [ebx]
  412c8e:	adc    BYTE PTR [edi+0x46],bl
  412c91:	xchg   ch,dl
  412c93:	lea    ebx,[edx]
  412c95:	mov    eax,ds:0x2870164f
  412c9a:	popf   
  412c9b:	sub    ch,BYTE PTR [ebx-0x5a]
  412c9e:	hlt    
  412c9f:	mov    esi,0x65d915e2
  412ca4:	pop    eax
  412ca5:	div    DWORD PTR [edx-0x71]
  412ca8:	shl    DWORD PTR [ecx-0x21],1
  412cab:	lds    eax,FWORD PTR [eax-0x668c16de]
  412cb1:	shl    BYTE PTR [edx+eax*4+0x49],cl
  412cb5:	(bad)
  412cb8:	pop    eax
  412cb9:	or     dl,ch
  412cbb:	inc    esp
  412cbc:	lea    edx,[ecx]
  412cbe:	pop    es
  412cbf:	add    eax,0xd676a357
  412cc4:	xchg   edi,eax
  412cc5:	mov    eax,0x7b01a3d7
  412cca:	adc    bh,BYTE PTR [eax]
  412ccc:	sbb    al,0x86
  412cce:	adc    BYTE PTR [edi-0x3df4a95a],dl
  412cd4:	mov    esi,0x791616c0
  412cd9:	sti    
  412cda:	inc    ecx
  412cdb:	frstor [edi+0x1c35e2cc]
  412ce2:	dec    BYTE PTR [eax+ebp*8-0x1a]
  412ce6:	mov    dl,0x2a
  412ce8:	xchg   ecx,eax
  412ce9:	in     eax,0x89
  412ceb:	(bad)  
  412cec:	fidivr DWORD PTR [edi+0x3b53344c]
  412cf2:	lods   al,BYTE PTR ds:[esi]
  412cf3:	imul   ebp,DWORD PTR [ecx],0x41
  412cf6:	xlat   BYTE PTR ds:[ebx]
  412cf7:	mov    bh,0x8e
  412cf9:	and    al,0x4f
  412cfb:	daa    
  412cfc:	jnp    0x412d21
  412cfe:	sub    DWORD PTR [eax-0xf69c9c8],ebx
  412d04:	cmp    esp,DWORD PTR [eax]
  412d06:	pop    ds
  412d07:	mov    dl,0xb6
  412d09:	call   0x47d6:0x88d299ba
  412d10:	jecxz  0x412d72
  412d12:	jp     0x412d0a
  412d14:	aam    0x47
  412d16:	pushf  
  412d17:	cmp    DWORD PTR es:[esi-0x43eefa79],ebx
  412d1e:	pop    ecx
  412d1f:	scas   eax,DWORD PTR es:[edi]
  412d20:	mov    edx,0xf66e2b32
  412d25:	sbb    eax,DWORD PTR [esi]
  412d27:	inc    edi
  412d28:	mov    cl,0x22
  412d2a:	shl    DWORD PTR [edx],1
  412d2c:	inc    ecx
  412d2d:	iret   
  412d2e:	pop    edx
  412d2f:	pop    edi
  412d30:	inc    eax
  412d31:	aaa    
  412d32:	sbb    bh,bh
  412d34:	jae    0x412cc3
  412d36:	mov    cl,0xe6
  412d38:	add    eax,0xf4e04be8
  412d3d:	inc    edi
  412d3e:	repnz icebp 
  412d40:	xchg   DWORD PTR [edx+0x1d23f61e],eax
  412d46:	sub    eax,0xb324dad4
  412d4b:	dec    esi
  412d4c:	pushf  
  412d4d:	mov    WORD PTR [esi+0x584ea397],ds
  412d53:	or     BYTE PTR [esi+0x7],bl
  412d56:	and    DWORD PTR [edx-0x4d],eax
  412d59:	sub    BYTE PTR [ebx-0x57df3097],al
  412d5f:	jle    0x412dd4
  412d61:	xchg   edx,eax
  412d62:	dec    esi
  412d63:	dec    edi
  412d64:	inc    esi
  412d65:	repz adc DWORD PTR [edx],esi
  412d68:	jmp    0x225:0x286477fe
  412d6f:	jns    0x412d9f
  412d71:	mov    ch,0xd1
  412d73:	xchg   esi,eax
  412d74:	fisub  WORD PTR [ebx]
  412d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d77:	scas   eax,DWORD PTR es:[edi]
  412d78:	ror    DWORD PTR [edx-0x4a],cl
  412d7b:	pop    ds
  412d7c:	outs   dx,DWORD PTR ds:[esi]
  412d7d:	cs in  al,0x33
  412d80:	test   al,0xd7
  412d82:	push   ds
  412d83:	sar    BYTE PTR [ecx-0x7d],1
  412d86:	sbb    ebp,DWORD PTR [eax+eiz*2+0x58]
  412d8a:	or     BYTE PTR [edi-0x757f0c67],0x88
  412d91:	cmp    esp,0x8bd85221
  412d97:	cld    
  412d98:	mov    bl,0x6b
  412d9a:	and    al,0x44
  412d9c:	cld    
  412d9d:	test   al,0xa6
  412d9f:	inc    eax
  412da0:	and    ecx,DWORD PTR [eax+0x2f]
  412da3:	in     eax,0x29
  412da5:	stc    
  412da6:	jbe    0x412e02
  412da8:	outs   dx,DWORD PTR ds:[esi]
  412da9:	je     0x412d7f
  412dab:	pop    edx
  412dac:	rcl    BYTE PTR [eax+eax*2],1
  412daf:	jp     0x412dea
  412db1:	xor    eax,0xd47d0880
  412db6:	jo     0x412dd9
  412db8:	pop    edx
  412db9:	push   ds
  412dba:	add    ah,dh
  412dbc:	push   ebx
  412dbd:	inc    edx
  412dbe:	arpl   di,bx
  412dc0:	mov    cl,0xf5
  412dc2:	mov    edi,0x53c0353
  412dc7:	mov    bl,0xbc
  412dc9:	mov    ebx,DWORD PTR [ebx]
  412dcb:	cmp    al,0xbb
  412dcd:	daa    
  412dce:	shl    BYTE PTR [eax+0x50],0x86
  412dd2:	mov    bl,dh
  412dd4:	fadd   QWORD PTR [ebx-0x7d]
  412dd7:	lods   al,BYTE PTR ds:[esi]
  412dd8:	cwde   
  412dd9:	mov    ah,0xe3
  412ddb:	dec    ecx
  412ddc:	mov    ch,0xec
  412dde:	mov    bl,0x4e
  412de0:	fist   WORD PTR [edi]
  412de2:	or     eax,0x46cf666d
  412de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412de8:	into   
  412de9:	idiv   dl
  412deb:	fwait
  412dec:	add    eax,0x90b7fa06
  412df1:	sahf   
  412df2:	repnz add esp,DWORD PTR [esi+0x6f6ebd7d]
  412df9:	cmp    esp,DWORD PTR [edi]
  412dfb:	jecxz  0x412e57
  412dfd:	pop    es
  412dfe:	xlat   BYTE PTR ds:[ebx]
  412dff:	jae    0x412d8e
  412e01:	mov    esi,0xc51546fe
  412e06:	inc    ecx
  412e07:	sub    eax,0x7958877e
  412e0c:	shl    DWORD PTR [ecx],cl
  412e0e:	and    al,0x29
  412e10:	(bad)  
  412e11:	or     esp,DWORD PTR [esi]
  412e13:	adc    edi,ecx
  412e15:	adc    ebp,DWORD PTR [edi-0x6]
  412e18:	xchg   ecx,eax
  412e19:	dec    esp
  412e1a:	mov    esi,0x34e3563d
  412e1f:	fsub   st(3),st
  412e21:	adc    bh,BYTE PTR [eax+0x3589e32d]
  412e27:	int    0x4
  412e29:	sub    esp,DWORD PTR [ebp+eiz*4+0x2]
  412e2d:	and    al,0x56
  412e2f:	sbb    DWORD PTR [ecx],0xc1e15f49
  412e35:	jae    0x412dc4
  412e37:	fdivr  QWORD PTR ds:0x5e5bf7c0
  412e3d:	mov    eax,ds:0xf9e7d569
  412e42:	push   ebp
  412e43:	jl     0x412e73
  412e45:	mov    ds:0x624b5d4,al
  412e4a:	adc    eax,0xbbbc2713
  412e4f:	mov    ds,WORD PTR ds:0x84c85cf9
  412e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e56:	jbe    0x412ec8
  412e58:	sub    BYTE PTR [edx-0xb],dh
  412e5b:	mov    dh,0xc0
  412e5d:	fs imul esp,ecx,0x5d
  412e61:	add    BYTE PTR [ebp+0x63],ah
  412e64:	shr    DWORD PTR [esi+esi*1-0x6e2264b6],cl
  412e6b:	mov    dl,0x7a
  412e6d:	pop    ds
  412e6e:	mov    ecx,0x6e5bdef
  412e73:	out    dx,al
  412e74:	sub    DWORD PTR [eax],ecx
  412e76:	cmp    al,0xa7
  412e78:	out    dx,al
  412e79:	stos   BYTE PTR es:[edi],al
  412e7a:	sti    
  412e7b:	mov    esi,0x1deebd6e
  412e80:	mov    al,0x43
  412e82:	hlt    
  412e83:	inc    edi
  412e84:	xor    edx,0x9cdf0261
  412e8a:	nop
  412e8b:	mov    bh,0xfc
  412e8d:	outs   dx,BYTE PTR ds:[esi]
  412e8e:	leave  
  412e8f:	cmp    al,0x27
  412e91:	pushw  0xb0f3
  412e95:	aam    0x69
  412e97:	shr    DWORD PTR [ebp-0x71],cl
  412e9a:	jno    0x412ec8
  412e9c:	pop    es
  412e9d:	out    0x65,al
  412e9f:	or     edi,DWORD PTR [ecx+0x6497c979]
  412ea5:	mov    WORD PTR ds:0xd08f239d,ss
  412eab:	mov    dh,0xe2
  412ead:	xor    dh,BYTE PTR ds:[esi-0x2d]
  412eb1:	cmp    BYTE PTR [edi+0x52],bl
  412eb4:	xchg   ebp,eax
  412eb5:	add    BYTE PTR [ebp-0xc841939],0x1f
  412ebc:	fs cs fmulp st(2),st
  412ec0:	imul   ecx,DWORD PTR [ebx+ecx*4],0xec1e2a1c
  412ec7:	dec    edi
  412ec8:	adc    dl,BYTE PTR [edx]
  412eca:	cs ret 0x555d
  412ece:	xor    al,0xeb
  412ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed1:	or     DWORD PTR [esi-0x646e1fd6],esp
  412ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ed8:	mov    esi,0xd72ae5be
  412edd:	cdq    
  412ede:	in     al,dx
  412edf:	repz rcl DWORD PTR ds:0x25005a07,1
  412ee6:	ret    
  412ee7:	sbb    DWORD PTR [ecx+0x3b5e858],0x7d816520
  412ef1:	add    esp,DWORD PTR [esi+0x63c3fa1d]
  412ef7:	pop    eax
  412ef8:	sbb    eax,0x78248f2a
  412efd:	add    DWORD PTR [eax],ebp
  412eff:	fiadd  DWORD PTR [ecx-0xe]
  412f02:	add    eax,edi
  412f04:	lahf   
  412f05:	imul   eax,DWORD PTR [edi+0x2c87c80],0xfffffffc
  412f0c:	fild   WORD PTR ds:0x5dec6d52
  412f12:	rol    DWORD PTR [edx-0x704df46f],0xc2
  412f19:	and    ebp,ecx
  412f1b:	jp     0x412eeb
  412f1d:	xchg   edx,eax
  412f1e:	xchg   esi,eax
  412f1f:	ret    
  412f20:	mov    BYTE PTR [esi],bh
  412f22:	push   ebp
  412f23:	les    edi,FWORD PTR ds:0xaad18a88
  412f29:	adc    ebx,DWORD PTR [esi+0x61dd7e9f]
  412f2f:	int3   
  412f30:	or     eax,0x932d3221
  412f35:	mov    dh,0x4b
  412f37:	pop    ebp
  412f38:	pushf  
  412f39:	pop    edx
  412f3a:	inc    edx
  412f3b:	out    dx,eax
  412f3c:	rol    BYTE PTR [ecx],1
  412f3e:	xor    DWORD PTR [ebx-0x5a4998c1],ecx
  412f44:	inc    ebp
  412f45:	xor    eax,DWORD PTR [ecx-0x29]
  412f48:	imul   DWORD PTR [ebp+0x40abced0]
  412f4e:	call   0xfb2e71f
  412f53:	xor    edx,edi
  412f55:	sbb    al,0x90
  412f57:	mov    ch,0x7
  412f59:	rcl    DWORD PTR ds:[ebx],0xa7
  412f5d:	loopne 0x412ef3
  412f5f:	rol    DWORD PTR [edi+esi*2+0x24],0xbf
  412f64:	xor    BYTE PTR [esi+0x8],0xb1
  412f68:	(bad)  
  412f69:	pop    ecx
  412f6a:	jo     0x412f19
  412f6c:	push   cs
  412f6d:	ins    BYTE PTR es:[edi],dx
  412f6e:	xchg   BYTE PTR ds:0xfed1a348,ah
  412f74:	imul   ebp,DWORD PTR [ecx],0x1f
  412f77:	sahf   
  412f78:	adc    bh,BYTE PTR [eax+0x250c8773]
  412f7e:	dec    ebx
  412f7f:	rol    bh,1
  412f81:	dec    ebx
  412f82:	and    eax,0xcfd4afec
  412f87:	lock into 
  412f89:	gs shr ah,1
  412f8c:	and    edx,eax
  412f8e:	or     bh,BYTE PTR [eax+0x786892d9]
  412f94:	jae    0x412fea
  412f96:	ficomp WORD PTR [eax]
  412f98:	xchg   esi,eax
  412f99:	std    
  412f9a:	xor    ah,BYTE PTR [eax]
  412f9c:	jbe    0x413011
  412f9e:	in     al,dx
  412f9f:	pop    esi
  412fa0:	fiadd  WORD PTR [di+0x1a2d]
  412fa5:	mov    edi,0x65ce1cc5
  412faa:	cmp    dl,al
  412fac:	(bad)  
  412fad:	mov    dh,0x31
  412faf:	dec    ebp
  412fb0:	add    BYTE PTR [ecx+ebx*1],ah
  412fb3:	ds clc 
  412fb5:	inc    edx
  412fb6:	jecxz  0x41302e
  412fb8:	push   0xffffffb5
  412fba:	inc    ecx
  412fbb:	jmp    0x7f89:0xca59a8e3
  412fc2:	adc    eax,DWORD PTR [ecx+0x54246cce]
  412fc8:	repz xchg esp,eax
  412fca:	stos   BYTE PTR es:[edi],al
  412fcb:	jo     0x413001
  412fcd:	jle    0x412f6b
  412fcf:	xchg   ebp,eax
  412fd0:	sbb    eax,0xe3ae68c5
  412fd5:	or     eax,0xccb6dd6c
  412fda:	loopne 0x413002
  412fdc:	in     eax,0x7d
  412fde:	xchg   ebp,eax
  412fdf:	push   cs
  412fe0:	dec    esp
  412fe1:	inc    ecx
  412fe2:	test   BYTE PTR [ecx+0x128aaac2],bh
  412fe8:	loopne 0x412fa5
  412fea:	jmp    0x412f9d
  412fec:	push   esi
  412fed:	xor    BYTE PTR [esi],0x1c
  412ff0:	(bad)  
  412ff1:	out    0xe3,al
  412ff3:	dec    esp
  412ff4:	cmp    ecx,DWORD PTR [edi]
  412ff6:	mov    ah,0x97
  412ff8:	loopne 0x412fba
  412ffa:	aaa    
  412ffb:	dec    edx
  412ffc:	lahf   
  412ffd:	and    DWORD PTR [esi+0x5c],edx
  413000:	and    BYTE PTR ds:0x563bae1b,ah
  413006:	add    al,0x78
  413008:	add    BYTE PTR [edi-0x2d105c9d],dh
  41300e:	lods   al,BYTE PTR ds:[esi]
  41300f:	mov    ah,BYTE PTR [ebx-0x4e]
  413012:	test   BYTE PTR [edx+ebp*8-0x4fa1d092],al
  413019:	xlat   BYTE PTR ds:[ebx]
  41301a:	ret    0x52d
  41301d:	mov    esi,0xb4c589b3
  413022:	repnz sti 
  413024:	dec    esi
  413025:	scas   al,BYTE PTR es:[edi]
  413026:	pop    edx
  413027:	pop    eax
  413028:	xor    DWORD PTR [ebp+ebp*4-0x2b],ebx
  41302c:	pop    edx
  41302d:	retf   0x9c65
  413030:	lods   eax,DWORD PTR ds:[esi]
  413031:	ins    BYTE PTR es:[edi],dx
  413032:	mov    dl,0x85
  413034:	inc    esi
  413035:	fsubr  QWORD PTR [esi]
  413037:	pop    ebp
  413038:	call   0x8f0a:0x7d4419b9
  41303f:	in     al,dx
  413040:	jl     0x412ff4
  413042:	or     BYTE PTR [edx-0x61c86bd],ah
  413048:	cmc    
  413049:	int3   
  41304a:	xchg   ecx,eax
  41304b:	fbld   TBYTE PTR [ecx]
  41304d:	es clc 
  41304f:	or     bl,ah
  413051:	in     al,dx
  413052:	and    cl,BYTE PTR [eax]
  413054:	sbb    eax,0x6189e12c
  413059:	sbb    BYTE PTR [ebx-0x16649bdb],dh
  41305f:	jge    0x413095
  413061:	fidiv  WORD PTR ss:0x5e7b4819
  413068:	xchg   ebx,eax
  413069:	xchg   BYTE PTR [ebp+0x6d],bl
  41306c:	and    ebp,DWORD PTR [ebx]
  41306e:	mov    ds:0xba77067d,eax
  413073:	dec    ecx
  413074:	neg    DWORD PTR [eax]
  413076:	lock jmp 0x413001
  413079:	add    ah,BYTE PTR [ecx+0x1c]
  41307c:	jb     0x4130da
  41307e:	ror    BYTE PTR [ebp+eax*2-0x4b827590],0xce
  413086:	pop    ds
  413087:	sar    DWORD PTR [eax+0x4d1bc16d],0xbd
  41308e:	push   ebx
  41308f:	cld    
  413090:	xchg   esp,eax
  413091:	dec    edi
  413092:	pop    ecx
  413093:	stos   DWORD PTR es:[edi],eax
  413094:	into   
  413095:	sub    cl,0xc1
  413098:	ins    DWORD PTR es:[edi],dx
  413099:	aas    
  41309a:	xchg   ebp,eax
  41309b:	setp   bh
  41309e:	xor    eax,0x67ea9caf
  4130a3:	jl     0x413113
  4130a5:	aaa    
  4130a6:	jo     0x413098
  4130a8:	jo     0x413035
  4130aa:	shl    DWORD PTR ds:0xece7170d,cl
  4130b0:	pop    eax
  4130b1:	or     DWORD PTR [edi-0x198b93a3],eax
  4130b7:	retf   
  4130b8:	(bad)  
  4130b9:	mov    dl,0xd8
  4130bb:	mov    ecx,0x7e92f256
  4130c0:	arpl   WORD PTR [edi-0x76],di
  4130c3:	sbb    al,0x52
  4130c5:	sub    eax,0x4a4a7c92
  4130ca:	xchg   ebp,eax
  4130cb:	das    
  4130cc:	js     0x413082
  4130ce:	fistp  QWORD PTR [ecx-0xafad228]
  4130d4:	repnz loopne 0x413144
  4130d7:	pop    ebp
  4130d8:	xor    bh,dh
  4130da:	mov    edi,0x8e2b286
  4130df:	push   edi
  4130e0:	jno    0x413118
  4130e2:	sub    DWORD PTR [ecx+0x34b57e4],ecx
  4130e8:	dec    edi
  4130e9:	mov    eax,ds:0x9acd2c0b
  4130ee:	xor    eax,0x5b819d78
  4130f3:	pop    edi
  4130f4:	mov    esp,0x61192524
  4130f9:	cmc    
  4130fa:	cmc    
  4130fb:	xchg   ebp,eax
  4130fc:	ss mov esp,0x96e52c34
  413102:	cmc    
  413103:	imul   esi,DWORD PTR [esi+0x79],0xffffffdf
  413107:	and    al,0x6b
  413109:	cmp    ecx,DWORD PTR [ebx+edi*1]
  41310c:	mov    edx,0x32e608ce
  413111:	jmp    0x4130d5
  413113:	repz pop edx
  413115:	xchg   esi,eax
  413116:	sbb    DWORD PTR [ebx+0x3b],edi
  413119:	pop    ss
  41311a:	iret   
  41311b:	mov    ch,BYTE PTR [ecx]
  41311d:	push   0xffffffdd
  41311f:	mov    cl,0x3b
  413121:	leave  
  413122:	pusha  
  413123:	iret   
  413124:	aas    
  413125:	xlat   BYTE PTR ds:[ebx]
  413126:	add    eax,0xf68aa148
  41312b:	loopne 0x4130c4
  41312d:	mov    edx,0x357ad3e1
  413132:	into   
  413133:	lds    ebp,FWORD PTR [ecx-0x49f9687d]
  413139:	in     al,dx
  41313a:	fistp  WORD PTR [edx+ecx*2]
  41313d:	iret   
  41313e:	test   BYTE PTR [edx+0x6f116d46],ch
  413144:	inc    ebx
  413145:	and    eax,0x494f6910
  41314a:	mov    ebp,DWORD PTR [ebp+0x692a35e2]
  413150:	mov    bl,0xcb
  413152:	sahf   
  413153:	not    BYTE PTR [ebx+0x31]
  413156:	sbb    ebx,ecx
  413158:	je     0x413189
  41315a:	mul    BYTE PTR [ebx+0x4d8c42a8]
  413160:	xchg   edx,eax
  413161:	pushf  
  413162:	aam    0x4b
  413164:	and    esp,DWORD PTR [edx]
  413166:	inc    bx
  413168:	pop    ecx
  413169:	pop    esi
  41316a:	lock jne 0x41318f
  41316d:	xchg   ebx,eax
  41316e:	inc    eax
  41316f:	adc    al,0x6a
  413171:	push   ecx
  413172:	pop    ebp
  413174:	xchg   esi,eax
  413175:	es xchg cl,bh
  413178:	xchg   edi,eax
  413179:	nop
  41317a:	sar    DWORD PTR [edi-0x45],cl
  41317d:	and    DWORD PTR [ecx+0x3d],ebx
  413180:	or     bl,bl
  413182:	adc    al,al
  413184:	xchg   esp,eax
  413185:	cld    
  413186:	inc    ebx
  413187:	sahf   
  413188:	sub    al,0xea
  41318a:	lods   eax,DWORD PTR ds:[esi]
  41318b:	sub    al,0xf4
  41318d:	into   
  41318e:	cmp    eax,0x5a680a62
  413193:	mov    edi,0xc1da7939
  413198:	ds inc ebp
  41319a:	jp     0x413206
  41319c:	icebp  
  41319d:	js     0x413140
  41319f:	in     eax,dx
  4131a0:	jle    0x4131e3
  4131a2:	popf   
  4131a3:	jge    0x4131dd
  4131a5:	jp     0x4131b6
  4131a7:	inc    edx
  4131a8:	in     eax,0x54
  4131aa:	dec    ebx
  4131ac:	mov    dl,0xa1
  4131ae:	mov    ebx,0x5531fdab
  4131b3:	test   eax,0xbfb9197d
  4131b8:	adc    eax,0x21954ad1
  4131bd:	push   0xe2313840
  4131c2:	cmp    al,0xd
  4131c4:	jle    0x4131e5
  4131c6:	aad    0xf7
  4131c8:	popf   
  4131c9:	pop    esp
  4131ca:	adc    BYTE PTR [esi],cl
  4131cc:	aas    
  4131cd:	adc    BYTE PTR [ecx+0x32],bl
  4131d0:	adc    DWORD PTR es:[edi-0x30],ebp
  4131d4:	inc    edx
  4131d5:	lahf   
  4131d6:	cmp    BYTE PTR [edi-0x4acac145],0x7e
  4131dd:	push   cs
  4131de:	out    0x38,eax
  4131e0:	scas   al,BYTE PTR es:[edi]
  4131e1:	jb     0x413240
  4131e3:	mov    ch,0x55
  4131e5:	mov    bl,0x13
  4131e7:	pop    edi
  4131e8:	jle    0x413229
  4131ea:	fcomi  st,st(1)
  4131ec:	push   ebx
  4131ed:	mov    WORD PTR ds:0xd714a9d0,cs
  4131f3:	lock mov WORD PTR [edx-0x42],es
  4131f7:	test   al,0xf6
  4131f9:	es call 0x90ee517f
  4131ff:	sbb    al,0x6b
  413201:	adc    ch,BYTE PTR [esi]
  413203:	test   BYTE PTR [ebx-0x16],ah
  413206:	jae    0x41327c
  413208:	cmp    BYTE PTR [edi-0x4a],cl
  41320b:	cmp    eax,0xcafd145a
  413210:	push   cs
  413211:	mov    ds:0xb83ee46d,al
  413216:	div    BYTE PTR [ebx-0x59db129f]
  41321c:	cmp    al,BYTE PTR [eax-0x3e587ccf]
  413222:	arpl   WORD PTR [esi-0x15],bx
  413225:	or     al,0x1d
  413227:	popf   
  413228:	call   0x82d0:0x9a1c70eb
  41322f:	imul   ebx,DWORD PTR [edi],0x37
  413232:	add    al,0xbc
  413234:	stos   BYTE PTR es:[edi],al
  413235:	retf   
  413236:	mov    bh,0xf0
  413238:	std    
  413239:	cmp    ah,dh
  41323b:	or     bh,BYTE PTR [edx+edx*4]
  41323e:	lods   eax,DWORD PTR ds:[esi]
  41323f:	in     eax,0x47
  413241:	js     0x4131c5
  413243:	inc    esp
  413244:	clc    
  413245:	xor    esp,esi
  413247:	bswap  ebx
  413249:	retf   0x42c0
  41324c:	imul   esp,ebx,0xffffffe8
  41324f:	jno    0x413226
  413251:	rcl    BYTE PTR [edx],cl
  413253:	add    BYTE PTR [edx+0x36d7218a],bh
  413259:	mov    ecx,0x15bca225
  41325e:	arpl   ax,dx
  413260:	sbb    BYTE PTR [edi-0x7159197c],0x91
  413267:	stos   DWORD PTR es:[edi],eax
  413268:	dec    BYTE PTR [ebp-0x1c]
  41326b:	retf   
  41326c:	dec    edi
  41326d:	sub    dh,BYTE PTR [edi+edx*1-0x5dfcae1d]
  413274:	cmp    dh,BYTE PTR [edx-0x2b]
  413277:	push   ecx
  413278:	jecxz  0x4132a0
  41327a:	daa    
  41327b:	lock arpl ax,di
  41327e:	push   ds
  41327f:	sub    al,0x4c
  413281:	aaa    
  413282:	fsubr  QWORD PTR [esi]
  413284:	lds    esp,FWORD PTR [esi+0x2]
  413287:	fwait
  413288:	into   
  413289:	stos   DWORD PTR es:[edi],eax
  41328a:	cmp    BYTE PTR [ecx-0x4010e741],al
  413290:	or     BYTE PTR [eax+edx*1-0x42],bl
  413294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413295:	cs scas al,BYTE PTR es:[edi]
  413297:	scas   al,BYTE PTR es:[edi]
  413298:	int3   
  413299:	sub    BYTE PTR [ecx-0xa2d8523],0xf4
  4132a0:	ja     0x41328c
  4132a2:	mov    ebx,0x1232ec17
  4132a7:	pop    esp
  4132a8:	inc    esi
  4132a9:	or     al,0x1a
  4132ab:	inc    edx
  4132ac:	lea    esp,[edi]
  4132ae:	popa   
  4132af:	sub    ch,BYTE PTR [ebx+ebx*8+0x1f05198e]
  4132b6:	adc    DWORD PTR [ebx+0x73],ebx
  4132b9:	rcl    BYTE PTR [ebx+0x6e2ba5d0],0x69
  4132c0:	xchg   DWORD PTR [edx+0x55eddc8c],ecx
  4132c6:	pop    edx
  4132c7:	push   esp
  4132c8:	out    dx,al
  4132c9:	or     BYTE PTR [ebx+0x5634ca7d],0xf8
  4132d0:	enter  0x443c,0xa5
  4132d4:	or     al,0xbd
  4132d6:	int    0x8d
  4132d8:	sbb    eax,0x6540c494
  4132dd:	adc    al,0x26
  4132df:	out    dx,al
  4132e0:	nop
  4132e1:	ds add eax,0x65013d5c
  4132e7:	mov    esp,0xa9b50fc1
  4132ec:	pop    ss
  4132ed:	mov    dh,0x89
  4132ef:	enter  0x6f9d,0x52
  4132f3:	mov    bh,0x65
  4132f5:	lea    ecx,[ecx+eax*8+0x18]
  4132f9:	(bad)  
  4132fb:	cmp    al,cl
  4132fd:	daa    
  4132fe:	lds    ecx,FWORD PTR [edx]
  413300:	js     0x4132b7
  413302:	mov    edi,0xf0402877
  413307:	xchg   edx,eax
  413308:	scas   eax,DWORD PTR es:[edi]
  413309:	call   FWORD PTR [edx+0x23ae441f]
  41330f:	lods   al,BYTE PTR ds:[esi]
  413310:	pop    ss
  413311:	push   cs
  413312:	call   0xb14f:0x7e98a398
  413319:	cli    
  41331a:	(bad)
  41331e:	pop    esp
  41331f:	psubusb mm2,QWORD PTR [eax-0x23]
  413323:	retf   0x7ec5
  413326:	out    dx,eax
  413327:	xchg   ebx,eax
  413328:	ja     0x413366
  41332a:	add    bl,dl
  41332c:	add    eax,0x7dfec226
  413331:	stos   DWORD PTR es:[edi],eax
  413332:	jge    0x41338c
  413334:	pop    eax
  413335:	cld    
  413336:	aas    
  413337:	outs   dx,BYTE PTR ds:[esi]
  413338:	xchg   ebp,eax
  413339:	push   ebp
  41333a:	ret    0xa8e2
  41333d:	dec    edi
  41333e:	and    esi,DWORD PTR ds:0x9d830165
  413344:	fdiv   QWORD PTR [ebx+0x5859eb68]
  41334a:	or     BYTE PTR [ebx],0xf1
  41334d:	xchg   edi,eax
  41334e:	inc    esp
  41334f:	aam    0x8e
  413351:	sbb    esp,DWORD PTR [esi+0x7a3b0b30]
  413357:	push   ds
  413358:	pop    es
  413359:	stc    
  41335a:	xchg   esi,eax
  41335b:	push   ds
  41335c:	or     eax,0xad5a7b0b
  413361:	test   eax,0x49608d39
  413366:	inc    edi
  413367:	jo     0x41334f
  413369:	sar    BYTE PTR ss:[eax-0x61],0xd9
  41336e:	dec    edx
  41336f:	jp     0x413309
  413371:	jp     0x41330f
  413373:	dec    ebp
  413374:	test   edx,ebp
  413376:	ss jne 0x4133f6
  413379:	in     eax,0xca
  41337b:	pop    ds
  41337c:	xor    cl,BYTE PTR [ebp+ebx*2+0x10]
  413380:	cmp    ebx,DWORD PTR [edi]
  413382:	adc    ah,BYTE PTR [edx]
  413384:	in     eax,0x34
  413386:	pushf  
  413387:	xchg   edi,eax
  413388:	out    0xa7,eax
  41338a:	pop    esi
  41338b:	data16 js 0x4133a6
  41338e:	dec    edi
  41338f:	jae    0x413316
  413391:	sub    eax,0xf5f010c6
  413396:	mov    ecx,0x9a558860
  41339b:	jne    0x41340c
  41339d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339e:	xchg   ebp,eax
  41339f:	xchg   esi,eax
  4133a0:	jge    0x4133f3
  4133a2:	scas   eax,DWORD PTR es:[edi]
  4133a3:	mov    ds:0x185258a0,eax
  4133a8:	jle    0x41340e
  4133aa:	mov    edi,0xcc27e21d
  4133af:	je     0x4133f9
  4133b1:	mov    eax,0x2dcea77c
  4133b6:	jb     0x4133a7
  4133b8:	jmp    0xfe05:0x1f84f993
  4133bf:	sar    DWORD PTR [eax],0x29
  4133c2:	xor    BYTE PTR ds:0xc418c0d,bl
  4133c8:	pop    ebp
  4133ca:	ret    
  4133cb:	(bad)  
  4133cc:	aaa    
  4133cd:	and    dh,dl
  4133cf:	(bad)  
  4133d0:	sbb    cl,dl
  4133d2:	push   esi
  4133d3:	adc    edx,ebx
  4133d5:	sbb    edi,ebx
  4133d7:	icebp  
  4133d8:	jbe    0x413446
  4133da:	push   0x965abda2
  4133df:	mov    ds:0x2311df12,eax
  4133e4:	mov    dl,0xc6
  4133e6:	pop    esp
  4133e7:	mov    edi,0x87bddf5a
  4133ec:	pop    ds
  4133ed:	cs inc eax
  4133ef:	lahf   
  4133f0:	xchg   BYTE PTR [ecx],ch
  4133f2:	ds aas 
  4133f4:	stos   DWORD PTR es:[edi],eax
  4133f5:	imul   edx,DWORD PTR [esi-0x394ac2bd],0xffffffd9
  4133fc:	jmp    0x4c80:0x7751c3e0
  413403:	loopne 0x4133c4
  413405:	mov    WORD PTR [esi-0x59],ds
  413408:	pop    eax
  413409:	jns    0x41346e
  41340b:	xor    DWORD PTR [esi],esp
  41340d:	adc    eax,esi
  41340f:	cs mov dh,0x4e
  413412:	cmp    al,BYTE PTR [esi]
  413414:	adc    ebx,DWORD PTR [eax+0x4e631b3d]
  41341a:	out    dx,eax
  41341b:	adc    bh,BYTE PTR [edi+0x40]
  41341e:	adc    DWORD PTR [ebx-0x50aa1056],0x854c6ec4
  413428:	(bad)  
  41342a:	lahf   
  41342b:	in     eax,dx
  41342c:	jmp    0xce9e2cf9
  413431:	arpl   WORD PTR [ecx-0x6b],bx
  413434:	dec    edi
  413435:	jmp    0xcf2b:0xaa47fc80
  41343c:	inc    ebx
  41343d:	sub    al,BYTE PTR [esi+0x3]
  413440:	fidiv  DWORD PTR ds:0x3f2fdcfe
  413446:	fisubr WORD PTR [edx]
  413448:	jne    0x413473
  41344a:	aas    
  41344b:	retf   0x55ef
  41344e:	pop    eax
  41344f:	fdecstp 
  413451:	sbb    al,0x4a
  413453:	sub    esi,edi
  413455:	push   0xffffffb8
  413457:	mov    eax,ds:0x1b957944
  41345c:	in     eax,0xee
  41345e:	mov    al,0x28
  413460:	stos   BYTE PTR es:[edi],al
  413461:	xchg   esp,eax
  413462:	loope  0x4134af
  413464:	adc    DWORD PTR [ebx],edx
  413466:	xchg   edx,eax
  413467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413468:	imul   edi,DWORD PTR [ecx+edx*1],0x2b
  41346c:	(bad)  
  41346d:	fstp   TBYTE PTR [ebx+0x54]
  413470:	mov    ebp,0x14fb39bc
  413475:	ret    
  413476:	ins    BYTE PTR es:[edi],dx
  413477:	jg     0x4134e3
  413479:	cli    
  41347a:	(bad)  [ecx-0xa]
  41347d:	fdiv   st,st(4)
  41347f:	and    eax,0x7b5e28c9
  413484:	jno    0x413475
  413486:	shl    bh,cl
  413488:	inc    edi
  413489:	enter  0xe318,0x34
  41348d:	int3   
  41348e:	dec    eax
  41348f:	cli    
  413490:	daa    
  413491:	push   0xffffffcd
  413493:	bound  esi,QWORD PTR [ecx]
  413495:	in     al,0x88
  413497:	repnz xor BYTE PTR [esi+0x72],dl
  41349b:	nop
  41349c:	push   edx
  41349d:	inc    esp
  41349e:	outs   dx,BYTE PTR ds:[esi]
  41349f:	pushf  
  4134a0:	mov    cl,0x2f
  4134a2:	push   edx
  4134a3:	jg     0x4134f1
  4134a5:	push   0xffffff9e
  4134a7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4134a9:	test   BYTE PTR [edi+0x6de773bf],bh
  4134af:	jle    0x4134dd
  4134b1:	loope  0x4134d2
  4134b3:	xlat   BYTE PTR ds:[ebx]
  4134b4:	aaa    
  4134b5:	in     al,dx
  4134b6:	lea    esp,[edx]
  4134b8:	mov    al,0x17
  4134ba:	xor    edi,DWORD PTR [edi+0x1b]
  4134bd:	rcl    esi,cl
  4134bf:	lods   al,BYTE PTR ds:[esi]
  4134c0:	int3   
  4134c1:	adc    bl,BYTE PTR [edi-0x1c108b2b]
  4134c7:	push   ds
  4134c8:	mov    bl,0x67
  4134ca:	push   ds
  4134cb:	rol    edx,0x20
  4134ce:	mov    esp,0x4a765e1c
  4134d3:	loopne 0x41354d
  4134d5:	lahf   
  4134d6:	cmc    
  4134d7:	mov    ebp,DWORD PTR [esi]
  4134d9:	and    bl,bh
  4134db:	mov    esp,0x6a6f4da1
  4134e0:	(bad)  
  4134e1:	jbe    0x4134c2
  4134e3:	inc    esp
  4134e4:	(bad)  [ebp-0x2039070d]
  4134ea:	lds    ecx,FWORD PTR [edi+ebx*2]
  4134ed:	or     DWORD PTR [edi-0x7],eax
  4134f0:	and    DWORD PTR [esi+0x52f7d0f0],0x58
  4134f7:	imul   ecx,DWORD PTR [eax+eiz*1-0x17],0x3e
  4134fc:	inc    eax
  4134fd:	push   edx
  4134fe:	mov    al,0xf2
  413500:	(bad)  
  413501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413502:	out    dx,eax
  413503:	test   al,0x67
  413505:	mov    ecx,0x35989bdd
  41350a:	jmp    0x41356a
  41350c:	btc    DWORD PTR [ebp+0x7245b5],edi
  413513:	hlt    
  413514:	das    
  413515:	aaa    
  413516:	xor    ebp,DWORD PTR [edi-0x7101577a]
  41351c:	pop    ds
  41351d:	xchg   ecx,eax
  41351e:	push   esp
  41351f:	out    dx,eax
  413520:	mov    al,ds:0xd740c6c2
  413525:	test   eax,0x418d61fb
  41352a:	rcl    edi,1
  41352c:	test   al,0x13
  41352e:	idiv   ebx
  413530:	add    ebp,DWORD PTR [eax-0x8]
  413533:	lods   eax,DWORD PTR ds:[esi]
  413534:	jns    0x413577
  413536:	(bad)  
  413537:	push   0xbefe8f8e
  41353c:	ret    0x5073
  41353f:	aas    
  413540:	and    al,0x95
  413542:	sub    al,BYTE PTR [ecx-0x4c]
  413545:	mov    eax,ds:0x63adfe0f
  41354a:	outs   dx,BYTE PTR ds:[esi]
  41354b:	addr16 inc ecx
  41354d:	xchg   BYTE PTR [edi],al
  41354f:	mov    al,ds:0x29f6ad6e
  413554:	les    edx,FWORD PTR [ebx-0x6d]
  413557:	pop    esi
  413558:	sub    cl,BYTE PTR [esi-0x17]
  41355b:	scas   eax,DWORD PTR es:[edi]
  41355c:	pop    eax
  41355d:	jmp    0x7f434729
  413562:	cmp    al,0xa8
  413564:	int    0x95
  413566:	and    eax,edx
  413568:	fisttp DWORD PTR ds:0xe3374b5b
  41356e:	or     ecx,DWORD PTR [ecx]
  413570:	mov    bl,0x3b
  413572:	(bad)
  413576:	sub    eax,0x76afbed5
  41357b:	jl     0x413547
  41357d:	mov    si,0xdd01
  413581:	iret   
  413582:	cli    
  413583:	mov    cl,0x30
  413585:	push   0x55dc7c20
  41358a:	icebp  
  41358b:	or     BYTE PTR [edi+ebx*4-0x560dbcd7],dl
  413592:	add    eax,0x7130af80
  413597:	(bad)  
  413599:	cmp    esi,0xffffffa5
  41359c:	cmp    bl,BYTE PTR [edi-0x203bd779]
  4135a2:	and    BYTE PTR [ecx+edi*1-0x6e],dl
  4135a6:	mov    DWORD PTR [edx-0x2d],0x1ecae2ac
  4135ad:	out    dx,eax
  4135ae:	(bad)  
  4135af:	and    ebp,DWORD PTR [esi-0x14]
  4135b2:	daa    
  4135b3:	mov    cl,0x15
  4135b5:	into   
  4135b6:	inc    esi
  4135b7:	jno    0x41362c
  4135b9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135bb:	and    al,0xc9
  4135bd:	daa    
  4135be:	dec    edi
  4135bf:	push   edx
  4135c0:	mov    dh,0xfd
  4135c2:	mov    dl,0x1c
  4135c4:	mov    dh,0x11
  4135c6:	cld    
  4135c7:	scas   al,BYTE PTR es:[edi]
  4135c8:	arpl   si,ax
  4135ca:	cs imul esp,edx,0x72
  4135ce:	gs mov esp,0xe4571edd
  4135d4:	les    esi,FWORD PTR [ecx+0x1f]
  4135d7:	sub    BYTE PTR [di],dl
  4135da:	mov    dh,0xbc
  4135dc:	and    ecx,DWORD PTR [ebp+0x40]
  4135df:	xor    DWORD PTR [edx],0x63
  4135e2:	push   esp
  4135e3:	mov    edx,0xd804afb6
  4135e8:	and    BYTE PTR [ecx+0x5e],ah
  4135eb:	ins    DWORD PTR es:[edi],dx
  4135ec:	or     ecx,ebp
  4135ee:	aaa    
  4135ef:	fadd   st,st(1)
  4135f1:	cld    
  4135f2:	pusha  
  4135f3:	loopne 0x413670
  4135f5:	dec    ecx
  4135f6:	xchg   edi,eax
  4135f7:	xor    esp,DWORD PTR [eax]
  4135f9:	fldcw  WORD PTR [edi]
  4135fb:	inc    ecx
  4135fc:	call   edx
  4135fe:	push   ebp
  4135ff:	enter  0x8087,0xcf
  413603:	mov    esp,0xc692f84e
  413608:	push   edi
  413609:	(bad)  
  41360b:	ret    0xb93b
  41360e:	push   ebx
  41360f:	pusha  
  413610:	clc    
  413611:	jnp    0x4135ed
  413613:	adc    edx,DWORD PTR [ebx]
  413615:	add    eax,0xf8d93bcc
  41361a:	out    0x68,al
  41361c:	mov    bh,0x5e
  41361e:	repnz in al,dx
  413620:	syscall 
  413622:	adc    DWORD PTR ds:0x249dd4,edi
  413628:	cli    
  413629:	jg     0x413664
  41362b:	xor    DWORD PTR [ebx],edi
  41362d:	test   al,0xc2
  41362f:	push   0xfffffff4
  413631:	sbb    bl,BYTE PTR [ecx-0x6d]
  413634:	icebp  
  413635:	push   0xffffffef
  413637:	fst    QWORD PTR [esi]
  413639:	pop    ebx
  41363a:	add    esp,0x54
  41363d:	adc    BYTE PTR [edi],0x59
  413640:	sub    eax,0x8d1f30fc
  413645:	jns    0x4136a8
  413647:	and    BYTE PTR ds:0xd3b22388,cl
  41364d:	mov    edi,ds
  41364f:	scas   eax,DWORD PTR es:[edi]
  413650:	es mov ebx,0x37c512d4
  413656:	xchg   esp,eax
  413657:	stos   BYTE PTR es:[edi],al
  413658:	cmc    
  413659:	pop    eax
  41365a:	inc    esp
  41365b:	jnp    0x41369f
  41365d:	add    DWORD PTR [eax-0x4f],ecx
  413660:	push   0x69
  413662:	fs enter 0xfaaa,0xf6
  413667:	sub    eax,0x83773a6b
  41366c:	dec    edi
  41366d:	sbb    eax,0x284b5062
  413672:	scas   eax,DWORD PTR es:[edi]
  413673:	jge    0x413685
  413675:	fisttp DWORD PTR [edx+0x25]
  413678:	popa   
  413679:	dec    esp
  41367a:	or     cl,dh
  41367c:	lods   eax,DWORD PTR ds:[esi]
  41367d:	test   BYTE PTR [eax+0x32],0x7
  413681:	pop    ecx
  413682:	fisub  WORD PTR [ecx+0x12]
  413685:	mov    ds:0x190ae923,al
  41368a:	pop    ss
  41368b:	js     0x4136f0
  41368d:	dec    edx
  41368e:	mov    dh,0x1a
  413690:	inc    ebp
  413691:	push   eax
  413692:	xchg   ebp,edi
  413694:	adc    BYTE PTR [ecx+0x46bab50f],dh
  41369a:	aaa    
  41369b:	xor    eax,0x5c789b7c
  4136a0:	cmp    bh,BYTE PTR [edi]
  4136a2:	pusha  
  4136a3:	ret    
  4136a4:	int3   
  4136a5:	ret    0x4da4
  4136a8:	push   es
  4136a9:	fwait
  4136aa:	dec    esp
  4136ab:	(bad)  
  4136ad:	(bad)  
  4136ae:	outs   dx,DWORD PTR ds:[esi]
  4136af:	adc    ecx,edi
  4136b1:	push   ds
  4136b2:	jle    0x413697
  4136b4:	psrlw  mm3,mm2
  4136b7:	in     eax,dx
  4136b8:	sar    edi,1
  4136ba:	or     esi,ecx
  4136bc:	mov    BYTE PTR [esi-0x7ce8d933],bl
  4136c2:	(bad)  
  4136c3:	in     eax,0x4d
  4136c5:	lahf   
  4136c6:	dec    edi
  4136c7:	sub    BYTE PTR [eax],bh
  4136c9:	xor    ch,0xb6
  4136cc:	and    esi,DWORD PTR [ecx-0x24]
  4136cf:	adc    al,0xfa
  4136d1:	cmp    al,BYTE PTR [edi-0x2c]
  4136d4:	out    0x8c,eax
  4136d6:	push   esp
  4136d7:	and    BYTE PTR [ebx],bl
  4136d9:	ins    DWORD PTR es:[edi],dx
  4136da:	cwde   
  4136db:	popa   
  4136dc:	enter  0x81eb,0x3e
  4136e0:	cwde   
  4136e1:	retf   
  4136e2:	nop
  4136e3:	sbb    al,BYTE PTR [eax]
  4136e5:	push   esp
  4136e6:	xchg   ecx,eax
  4136e7:	lahf   
  4136e8:	jns    0x4136ab
  4136ea:	xor    eax,0x809024cd
  4136ef:	pop    edi
  4136f0:	sahf   
  4136f1:	mov    ah,0xe9
  4136f3:	xchg   esi,eax
  4136f4:	test   BYTE PTR [ecx-0x7cdca810],ch
  4136fa:	fwait
  4136fb:	cs pop ecx
  4136fd:	sahf   
  4136fe:	sbb    BYTE PTR [ebx-0x4b00d73b],bh
  413704:	adc    eax,0x383439e8
  413709:	fidiv  WORD PTR [esi-0x1e]
  41370c:	lods   eax,DWORD PTR ds:[esi]
  41370d:	sub    esi,DWORD PTR [esi]
  41370f:	push   edi
  413710:	aad    0x4c
  413712:	pop    esp
  413713:	mov    ds:0xce396320,eax
  413718:	mov    ebx,0x95fae608
  41371d:	ds js  0x4136ec
  413720:	pop    esp
  413721:	nop
  413722:	xchg   DWORD PTR [ebp+0x3],esp
  413725:	hlt    
  413726:	ror    ah,cl
  413728:	push   es
  413729:	jp     0x4136e1
  41372b:	add    ch,0x3f
  41372e:	cs pop edi
  413730:	in     eax,dx
  413731:	xchg   edi,eax
  413732:	shl    DWORD PTR [esi+ebp*2+0x153d6780],1
  413739:	jmp    0x4137b5
  41373b:	(bad)  
  41373c:	loopne 0x413734
  41373e:	xlat   BYTE PTR ds:[ebx]
  41373f:	mov    bh,0xd7
  413741:	fnstcw WORD PTR [ebp+0x34d0076e]
  413747:	adc    ecx,esp
  413749:	scas   eax,DWORD PTR es:[edi]
  41374a:	mov    bl,0x8
  41374c:	stos   DWORD PTR es:[edi],eax
  41374d:	in     al,0x4d
  41374f:	cwde   
  413750:	pop    ss
  413751:	xchg   BYTE PTR [edx],dl
  413753:	jae    0x413711
  413755:	add    eax,0x81d88f4b
  41375a:	sub    al,0x95
  41375c:	mov    bh,0x83
  41375e:	dec    edi
  41375f:	jb     0x413754
  413761:	scas   al,BYTE PTR es:[edi]
  413762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413763:	mov    bh,0x17
  413765:	lahf   
  413766:	or     al,0x1b
  413768:	mov    esi,0xa5d43ee8
  41376d:	mov    esi,0x68818dd4
  413772:	retf   0x354e
  413775:	xchg   ebp,eax
  413776:	fld    TBYTE PTR [esi+ecx*8]
  413779:	ja     0x413732
  41377b:	(bad)  [ebx]
  41377d:	adc    DWORD PTR [ebp+0x56],ecx
  413780:	test   BYTE PTR [ebx+0xd],0xf9
  413784:	adc    al,0x85
  413786:	fsub   QWORD PTR [ebx+0x3bf09e2a]
  41378c:	mov    esi,0x3b379637
  413791:	mov    ds:0xb49f4f52,al
  413796:	pusha  
  413797:	mov    ebp,0x4e1fafc7
  41379c:	outs   dx,BYTE PTR ds:[esi]
  41379d:	fild   WORD PTR [ecx+0x401ecacb]
  4137a3:	ss in  eax,0x8c
  4137a6:	std    
  4137a7:	push   0x4d711433
  4137ac:	xor    dh,BYTE PTR [edx]
  4137ae:	sbb    bl,al
  4137b0:	ins    BYTE PTR es:[edi],dx
  4137b1:	stos   BYTE PTR es:[edi],al
  4137b2:	jne    0x4137ab
  4137b4:	std    
  4137b5:	sbb    al,0x72
  4137b7:	and    al,0xa5
  4137b9:	fdivr  QWORD PTR [edx-0x2]
  4137bc:	scas   eax,DWORD PTR es:[edi]
  4137bd:	in     eax,dx
  4137be:	call   0x4bb5:0x82a945a3
  4137c5:	mov    al,ds:0xc568da74
  4137ca:	xchg   ebx,eax
  4137cb:	outs   dx,DWORD PTR ds:[esi]
  4137cc:	xor    edx,DWORD PTR [eax]
  4137ce:	idiv   BYTE PTR [esi]
  4137d0:	sbb    BYTE PTR [ebx],bh
  4137d2:	(bad)  
  4137d3:	call   0x9c34:0xf14cb03e
  4137da:	mov    esp,0xd300047d
  4137df:	stc    
  4137e0:	pop    ss
  4137e1:	sbb    dl,bh
  4137e3:	mov    bh,BYTE PTR [edx+edx*1]
  4137e6:	in     al,dx
  4137e7:	cli    
  4137e8:	jnp    0x41380e
  4137ea:	je     0x4137f8
  4137ec:	jbe    0x4137a6
  4137ee:	(bad)  
  4137ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f0:	int3   
  4137f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f2:	mov    edx,DWORD PTR [ecx+0x5d]
  4137f5:	jmp    0x41378c
  4137f7:	lds    ebx,FWORD PTR [ebx]
  4137f9:	dec    edi
  4137fa:	dec    ecx
  4137fb:	inc    esp
  4137fc:	pop    ss
  4137fd:	adc    bh,0xcc
  413800:	mov    al,0xf3
  413802:	or     al,0x67
  413804:	jmp    0x8f777ada
  413809:	pop    ss
  41380a:	je     0x41387e
  41380c:	imul   ebp,DWORD PTR [ebp+0x22005b16],0xffffffb3
  413813:	inc    ebx
  413814:	xchg   esi,eax
  413815:	dec    eax
  413816:	je     0x413867
  413818:	ret    0x7c55
  41381b:	jb     0x413886
  41381d:	mov    edi,0x26ab4ac0
  413822:	adc    bh,dl
  413824:	out    dx,al
  413825:	or     eax,0x67f4f519
  41382a:	int    0xc1
  41382c:	pop    es
  41382d:	pop    ebx
  41382e:	xor    DWORD PTR [ebx],ecx
  413830:	mov    cl,0x4d
  413832:	ss push ebp
  413834:	jp     0x4138aa
  413836:	mov    esi,0x3070e207
  41383b:	scas   eax,DWORD PTR es:[edi]
  41383c:	lods   al,BYTE PTR ds:[esi]
  41383d:	sahf   
  41383e:	dec    edi
  41383f:	pop    eax
  413840:	lods   eax,DWORD PTR ds:[esi]
  413841:	sahf   
  413842:	xchg   edi,eax
  413843:	pop    edx
  413844:	pop    edi
  413845:	sbb    ecx,DWORD PTR [edx]
  413847:	sbb    DWORD PTR [edx+0x4ce303d2],edi
  41384d:	cmp    eax,0x87ba660a
  413852:	arpl   WORD PTR [esi-0x2a],ax
  413855:	cmp    edi,edx
  413857:	aad    0x45
  413859:	hlt    
  41385a:	jno    0x4137f8
  41385c:	adc    eax,ebp
  41385e:	jno    0x413889
  413860:	and    al,0x28
  413862:	dec    edx
  413863:	aas    
  413864:	push   es
  413865:	into   
  413866:	mov    ecx,0xe571440b
  41386b:	int3   
  41386c:	push   0x24
  41386e:	les    esp,FWORD PTR [esi-0x6555f8f2]
  413874:	addr16 dec edx
  413876:	data16 lods al,BYTE PTR ds:[esi]
  413878:	(bad)  
  413879:	fimul  WORD PTR [eax+0x5fe569e9]
  41387f:	add    DWORD PTR [ecx],esi
  413881:	cli    
  413882:	pop    ebp
  413883:	mov    ds:0xa43f1691,eax
  413888:	arpl   WORD PTR [edx+ebx*1],bp
  41388b:	cmp    cl,BYTE PTR [edx-0x412db63c]
  413891:	loopne 0x413902
  413893:	sbb    BYTE PTR [edi],ah
  413895:	adc    al,0x1d
  413897:	test   al,0x9d
  413899:	or     bh,BYTE PTR [ebx+0x616b9049]
  41389f:	push   esi
  4138a0:	inc    edx
  4138a1:	int    0xb9
  4138a3:	xchg   edx,eax
  4138a4:	push   ebx
  4138a5:	call   0xdb88:0xb797a84d
  4138ac:	jmp    0x57828b4c
  4138b1:	mov    eax,0x71ff5f00
  4138b6:	jmp    0x4138f5
  4138b8:	fwait
  4138b9:	(bad)  
  4138ba:	jb     0x4138a4
  4138bc:	inc    edi
  4138bd:	mov    edx,0xe6e0e8bb
  4138c2:	inc    esp
  4138c3:	cli    
  4138c4:	mov    edx,0x8ca664ab
  4138c9:	sub    ebx,DWORD PTR [edx+0x68f02b8b]
  4138cf:	jg     0x4138d4
  4138d1:	out    dx,eax
  4138d2:	or     edx,DWORD PTR [ebx-0x2f]
  4138d5:	dec    esp
  4138d6:	mov    ebx,0x40fa6b00
  4138db:	vhaddps xmm2,xmm4,XMMWORD PTR [ebx]
  4138df:	or     al,0x49
  4138e1:	mov    WORD PTR [edx],ds
  4138e3:	in     eax,dx
  4138e4:	sbb    eax,0x9c90e7e5
  4138e9:	sti    
  4138ea:	jne    0x4138cd
  4138ec:	pop    edi
  4138ed:	arpl   WORD PTR [esi],bx
  4138ef:	pop    ss
  4138f0:	test   BYTE PTR [ecx+0x25ee5d41],al
  4138f6:	fs (bad) 
  4138f8:	test   DWORD PTR [eax-0x66],edx
  4138fb:	jecxz  0x413914
  4138fd:	ds jp  0x413964
  413900:	jp     0x413978
  413902:	fwait
  413903:	test   eax,0x132bc6d3
  413908:	inc    ebp
  413909:	ror    DWORD PTR [ecx+edx*8],0x23
  41390d:	or     dl,BYTE PTR [ebx+ebp*4+0x36]
  413911:	mov    DWORD PTR [ebp-0x60],esi
  413914:	(bad)  
  413915:	xor    bl,bl
  413917:	sub    DWORD PTR [edx],eax
  413919:	shl    bh,1
  41391b:	mov    ebp,0x50b851b0
  413920:	cmp    DWORD PTR [eax+0x7bf9ee84],eax
  413926:	push   edx
  413927:	push   0x1a773a7d
  41392c:	sbb    DWORD PTR [ebp+0x67],eax
  41392f:	nop
  413930:	sub    DWORD PTR [ebx],edx
  413932:	dec    ebp
  413933:	daa    
  413934:	lahf   
  413935:	daa    
  413936:	pop    ecx
  413937:	scas   eax,DWORD PTR es:[edi]
  413938:	mov    cl,0x7c
  41393a:	and    al,0xc7
  41393c:	cmp    eax,0xb9448cad
  413941:	repnz (bad) 
  413943:	call   0xa5f46331
  413948:	mov    eax,0xafbec7fa
  41394d:	scas   al,BYTE PTR es:[edi]
  41394e:	pop    es
  41394f:	pop    edx
  413950:	mov    DWORD PTR [ecx],0x9083f2c6
  413956:	iret   
  413957:	lock adc eax,ebp
  41395a:	(bad)  
  41395b:	les    esi,FWORD PTR [eax+0x6e]
  41395e:	xor    ebp,DWORD PTR [ecx+0x2047cdb]
  413964:	pop    ds
  413965:	nop
  413966:	hlt    
  413967:	retf   0xa5a9
  41396a:	inc    ebp
  41396b:	in     al,dx
  41396c:	fsubp  st(3),st
  41396e:	leave  
  41396f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413970:	mov    dl,0xae
  413972:	call   0x4d7e3ce7
  413977:	inc    edx
  413978:	clc    
  413979:	test   BYTE PTR [eax+0x62404ff8],0xc7
  413980:	(bad)  
  413981:	mov    WORD PTR [edx-0x645d6f79],es
  413987:	outs   dx,DWORD PTR ds:[esi]
  413988:	mov    ebx,fs
  41398a:	sub    DWORD PTR [edi],0xffffffe9
  41398d:	popf   
  41398e:	das    
  41398f:	push   ds
  413990:	pop    eax
  413991:	ja     0x4139b0
  413993:	mov    ebx,0xbb33eeaf
  413998:	jp     0x4139b8
  41399a:	pusha  
  41399b:	in     al,dx
  41399c:	mov    eax,ds:0xa39fbb19
  4139a1:	out    dx,eax
  4139a2:	or     esi,ebx
  4139a4:	test   eax,esp
  4139a6:	call   0x15908da0
  4139ab:	shr    DWORD PTR ds:0xae9c4971,1
  4139b1:	cwde   
  4139b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b3:	or     BYTE PTR [edx+0x60],0x93
  4139b7:	mov    ds,WORD PTR [ebp-0x226b7724]
  4139bd:	sbb    BYTE PTR [edx],bl
  4139bf:	jmp    0x97059e73
  4139c4:	xchg   edx,eax
  4139c5:	daa    
  4139c6:	jb     0x4139bf
  4139c8:	adc    BYTE PTR [edi-0x5a],bl
  4139cb:	test   al,0xf
  4139cd:	sbb    eax,0x38ac4ef
  4139d2:	xlat   BYTE PTR ds:[ebx]
  4139d3:	stos   DWORD PTR es:[edi],eax
  4139d4:	jl     0x4139a4
  4139d6:	push   DWORD PTR [edi+0x7e]
  4139d9:	mov    eax,0x7f088002
  4139de:	jne    0x4139a1
  4139e0:	in     eax,0xb6
  4139e2:	clc    
  4139e3:	dec    eax
  4139e4:	idiv   al
  4139e6:	js     0x413a16
  4139e8:	adc    BYTE PTR [ecx],ch
  4139ea:	les    esp,FWORD PTR [edi]
  4139ec:	btr    DWORD PTR [ebp-0x1d66a1fb],ebx
  4139f3:	mov    ebx,0x16a2b33b
  4139f8:	(bad)  [eax-0x7a]
  4139fb:	inc    esp
  4139fc:	cmp    ecx,DWORD PTR [ebp+0x704b3b34]
  413a02:	inc    esp
  413a03:	js     0x4139fa
  413a05:	out    dx,eax
  413a06:	repnz mov edi,0x256991e0
  413a0c:	push   esp
  413a0d:	mov    cl,cl
  413a0f:	sub    DWORD PTR [ebx],esi
  413a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a12:	movzx  ecx,BYTE PTR [ecx-0x72]
  413a16:	cwde   
  413a17:	and    BYTE PTR [edi+0x36],bl
  413a1a:	sub    eax,0x65391584
  413a1f:	(bad)  
  413a21:	xchg   ebp,eax
  413a22:	dec    ebp
  413a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a24:	out    0x1a,al
  413a26:	popf   
  413a27:	mov    ebp,0x429a58e1
  413a2c:	stos   DWORD PTR es:[edi],eax
  413a2d:	out    0x70,al
  413a2f:	lods   al,BYTE PTR ds:[esi]
  413a30:	push   esi
  413a31:	push   DWORD PTR [edi-0x76900758]
  413a37:	fsub   QWORD PTR [edx-0xb6a8585]
  413a3d:	ins    BYTE PTR es:[edi],dx
  413a3e:	xor    BYTE PTR ds:[esi-0x7be66187],bl
  413a45:	mov    ch,0x91
  413a47:	mov    BYTE PTR [edi+0x56310700],0x52
  413a4e:	inc    ecx
  413a4f:	and    bh,BYTE PTR [ebx]
  413a51:	shrd   ecx,esi,0x97
  413a55:	les    ebx,FWORD PTR [edx+0x6]
  413a58:	rcl    BYTE PTR [edi+esi*4],0xd4
  413a5c:	addr16 (bad) 
  413a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a5f:	mov    ah,0x36
  413a61:	adc    ah,BYTE PTR [ecx+ebx*1]
  413a64:	ins    DWORD PTR es:[edi],dx
  413a65:	data16 fmulp st(0),st
  413a68:	xchg   ecx,eax
  413a69:	iret   
  413a6a:	and    edi,DWORD PTR [ecx]
  413a6c:	(bad)  
  413a6d:	xor    al,0x84
  413a6f:	comiss xmm5,DWORD PTR [ecx+0x4c]
  413a73:	in     eax,0x21
  413a75:	ss push edi
  413a77:	jecxz  0x413a1e
  413a79:	cmp    ah,0x77
  413a7c:	adc    ebp,DWORD PTR [edi+ecx*8+0x10ed4f37]
  413a83:	push   0x6377aa52
  413a88:	pop    es
  413a89:	jg     0x413a6e
  413a8b:	pop    ebx
  413a8c:	mov    ds:0xcd2d277e,eax
  413a91:	xor    DWORD PTR [eax+0x57],ebp
  413a94:	dec    bl
  413a96:	xor    eax,0x13a605a4
  413a9b:	jg     0x413ab5
  413a9d:	mov    ds:0xf464e19e,al
  413aa2:	aad    0x5e
  413aa4:	loope  0x413aa1
  413aa6:	ja     0x413add
  413aa8:	and    DWORD PTR [eax+0x27],esi
  413aab:	or     al,0xed
  413aad:	mov    cl,0xe9
  413aaf:	cwde   
  413ab0:	iret   
  413ab1:	xchg   esp,eax
  413ab2:	mov    ebp,0xf16a8137
  413ab7:	dec    ebx
  413ab8:	daa    
  413ab9:	sub    DWORD PTR [ecx-0x2738dcfa],edi
  413abf:	loope  0x413aad
  413ac1:	call   0xd8f5049b
  413ac6:	inc    esi
  413ac7:	sub    DWORD PTR [esp+ebp*2+0xe],edx
  413acb:	cli    
  413acc:	xlat   BYTE PTR ds:[ebx]
  413acd:	jle    0x413a8e
  413acf:	fisttp DWORD PTR [edx+0x436851e7]
  413ad5:	push   es
  413ad6:	and    bh,al
  413ad8:	stos   DWORD PTR es:[edi],eax
  413ad9:	add    ebp,DWORD PTR [esi-0x3768e1ad]
  413adf:	push   eax
  413ae0:	sbb    BYTE PTR [edi],al
  413ae2:	sub    al,ch
  413ae4:	rol    ah,0x27
  413ae7:	stos   DWORD PTR es:[edi],eax
  413ae8:	fnstcw WORD PTR [edi-0x6523d426]
  413aee:	jns    0x413a73
  413af0:	xchg   edi,eax
  413af1:	ss dec ecx
  413af3:	mov    dh,0xfc
  413af5:	cmp    BYTE PTR [ebp+0x6219a246],bh
  413afb:	fstp   QWORD PTR [eax]
  413afd:	add    BYTE PTR [edx+0x4b54ac4c],cl
  413b03:	sub    al,0x63
  413b05:	sub    eax,DWORD PTR [edi-0x7c]
  413b08:	retf   
  413b09:	rol    BYTE PTR [esi+edx*1],0xad
  413b0d:	ins    DWORD PTR es:[edi],dx
  413b0e:	inc    esp
  413b0f:	jmp    0x131e99bd
  413b14:	pop    edi
  413b15:	xchg   edx,eax
  413b16:	jl     0x413af6
  413b18:	hlt    
  413b19:	push   eax
  413b1a:	inc    edx
  413b1b:	cld    
  413b1c:	cli    
  413b1d:	fst    QWORD PTR [edx]
  413b1f:	iret   
  413b20:	pop    ebx
  413b21:	add    esi,DWORD PTR ds:0xf3b76069
  413b27:	push   edx
  413b28:	aam    0xea
  413b2a:	hlt    
  413b2b:	shl    ebp,0x26
  413b2e:	adc    al,0xc8
  413b30:	stos   DWORD PTR es:[edi],eax
  413b31:	std    
  413b32:	push   edx
  413b33:	jae    0x413b54
  413b35:	xor    esi,eax
  413b37:	or     dl,BYTE PTR [esi-0x6f]
  413b3a:	bound  edi,QWORD PTR [esi]
  413b3c:	sbb    eax,0xa1d05434
  413b41:	lods   al,BYTE PTR ds:[esi]
  413b42:	cmp    esp,esi
  413b44:	xor    BYTE PTR [edx+0x2c],bl
  413b47:	xchg   ebp,eax
  413b48:	mov    esi,0x7110229a
  413b4d:	adc    BYTE PTR [edx+0x7b],dl
  413b50:	xchg   esp,eax
  413b51:	dec    edi
  413b52:	shl    DWORD PTR ds:0x7275da06,0x52
  413b59:	sub    al,0x7f
  413b5b:	xchg   esi,eax
  413b5c:	imul   eax,DWORD PTR [esi],0x80f1ec00
  413b62:	mov    ch,0xea
  413b64:	mov    WORD PTR [edx+0x58aad546],es
  413b6a:	mov    esi,DWORD PTR [edi]
  413b6c:	stos   BYTE PTR es:[edi],al
  413b6d:	pop    edi
  413b6e:	adc    DWORD PTR [ebx+0x7e635138],ebp
  413b74:	mov    ah,0xa1
  413b76:	out    0xb0,eax
  413b78:	(bad)  
  413b79:	aas    
  413b7a:	lods   al,BYTE PTR ds:[esi]
  413b7b:	ror    BYTE PTR [esi-0x3f],cl
  413b7e:	in     al,dx
  413b7f:	lahf   
  413b80:	mov    ax,ds:0xb5e5b7fa
  413b86:	je     0x413be4
  413b88:	inc    DWORD PTR [edi]
  413b8a:	cdq    
  413b8b:	sub    BYTE PTR [edx+0x1f3bc09a],bh
  413b91:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413b93:	shl    DWORD PTR [edi],0x67
  413b96:	int3   
  413b97:	jne    0x413b7f
  413b99:	es into 
  413b9b:	mov    ds:0xba122576,eax
  413ba0:	retf   
  413ba1:	es push 0x74
  413ba4:	xchg   ecx,eax
  413ba5:	outs   dx,BYTE PTR ds:[esi]
  413ba6:	aas    
  413ba7:	dec    esi
  413ba8:	xchg   BYTE PTR [edx],al
  413baa:	mov    eax,0x3cdcb6a9
  413baf:	cwde   
  413bb0:	ret    0xc2b1
  413bb3:	adc    al,0x86
  413bb5:	mov    ebx,esi
  413bb7:	fld    st(0)
  413bb9:	in     eax,dx
  413bba:	cmp    eax,0xcad8ed31
  413bbf:	xor    edx,edx
  413bc1:	sub    BYTE PTR [ebx],bl
  413bc3:	mov    bl,0x44
  413bc5:	mov    ebp,0x6130b079
  413bca:	dec    eax
  413bcb:	add    DWORD PTR [esi+0x4bb0bff9],edi
  413bd1:	cmp    BYTE PTR [ebx+0x69],cl
  413bd4:	fcomp  st(5)
  413bd6:	pop    edi
  413bd7:	and    al,0x31
  413bd9:	mov    ah,0xaa
  413bdb:	adc    BYTE PTR [edi-0x27e53135],ah
  413be1:	fwait
  413be2:	pusha  
  413be3:	std    
  413be4:	xlat   BYTE PTR ds:[ebx]
  413be5:	mov    esi,0x78f0f4d6
  413bea:	add    edi,DWORD PTR [eax+0x59c91cd4]
  413bf0:	xchg   ebp,eax
  413bf1:	jg     0x413bfa
  413bf3:	test   al,0xbd
  413bf5:	(bad)  
  413bf8:	rdtsc  
  413bfa:	stc    
  413bfb:	xchg   esp,eax
  413bfc:	pop    eax
  413bfd:	(bad)  
  413bfe:	imul   ch
  413c00:	push   ebx
  413c01:	gs aaa 
  413c03:	nop
  413c04:	xchg   ebx,eax
  413c05:	addr16 repnz xchg ebp,eax
  413c08:	mov    esi,DWORD PTR [ecx]
  413c0a:	mov    ecx,0xacf44cfc
  413c0f:	and    al,0x60
  413c11:	mov    WORD PTR [edx+0x3d1902e5],?
  413c17:	push   esi
  413c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c19:	loop   0x413c68
  413c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c1c:	stos   DWORD PTR es:[edi],eax
  413c1d:	push   esi
  413c1e:	les    ecx,FWORD PTR [eax]
  413c20:	ror    al,cl
  413c22:	mov    ebx,0x47fc9986
  413c27:	inc    esi
  413c28:	sbb    edi,DWORD PTR [edx-0x5c]
  413c2b:	xchg   esi,eax
  413c2c:	push   esi
  413c2d:	mov    bh,BYTE PTR [ecx+0x3fc61873]
  413c33:	push   es
  413c34:	xchg   ecx,eax
  413c35:	sub    BYTE PTR [edx-0x7ba86015],dl
  413c3b:	jmp    0x413c06
  413c3d:	mov    dh,0xe
  413c3f:	sub    ecx,edx
  413c41:	mov    esi,0xb00af4a5
  413c46:	sar    BYTE PTR [ebx-0x7a],0xc6
  413c4a:	pop    eax
  413c4b:	pop    edi
  413c4c:	jne    0x413c88
  413c4e:	adc    eax,0x2a2f6583
  413c53:	cdq    
  413c54:	jnp    0x413c0e
  413c56:	daa    
  413c57:	imul   esi,DWORD PTR [edi],0x39
  413c5a:	(bad)  
  413c5b:	jecxz  0x413bfc
  413c5d:	ror    BYTE PTR [edx+0x37],1
  413c60:	add    ecx,eax
  413c62:	iret   
  413c63:	loopne 0x413cd7
  413c65:	int3   
  413c66:	int    0xd2
  413c68:	ins    BYTE PTR es:[edi],dx
  413c69:	sbb    dl,ah
  413c6b:	pop    ds
  413c6c:	adc    al,0x7f
  413c6e:	cmp    al,dl
  413c70:	cmc    
  413c71:	out    0xd9,eax
  413c73:	push   eax
  413c74:	add    al,0x8d
  413c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c77:	push   esi
  413c78:	pop    es
  413c79:	xchg   BYTE PTR [edi],ah
  413c7b:	das    
  413c7c:	cmp    al,0x9c
  413c7e:	pop    ecx
  413c7f:	dec    esi
  413c80:	test   BYTE PTR [edx],ch
  413c82:	(bad)  [edi]
  413c84:	sar    DWORD PTR [edi-0x80],1
  413c87:	cmc    
  413c88:	sub    al,0x3d
  413c8a:	loopne 0x413ccd
  413c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c8d:	push   edi
  413c8e:	repnz sbb BYTE PTR [ebx-0x80],bl
  413c92:	mov    ds:0xd9ca19b4,al
  413c97:	lock fst DWORD PTR [edx]
  413c9a:	mov    ebp,0xfa9f0a81
  413c9f:	fild   DWORD PTR [ecx-0x21]
  413ca2:	inc    esp
  413ca3:	shr    BYTE PTR [ecx],cl
  413ca5:	jo     0x413c73
  413ca7:	jmp    0x42f7:0xae48d852
  413cae:	aaa    
  413caf:	test   DWORD PTR [ebx+ecx*2],ecx
  413cb2:	cmp    eax,edx
  413cb4:	retf   
  413cb5:	ret    
  413cb6:	adc    al,0x4e
  413cb8:	fs pop ecx
  413cba:	in     eax,dx
  413cbb:	(bad)  
  413cbc:	frstor [eax-0x6322b951]
  413cc2:	sub    eax,0xd4801847
  413cc7:	mov    ebx,0x99ae556b
  413ccc:	loop   0x413ca6
  413cce:	dec    edi
  413ccf:	sahf   
  413cd0:	add    edx,DWORD PTR [ebx-0x58]
  413cd3:	clc    
  413cd4:	adc    BYTE PTR [eax+0x55],0xa8
  413cd8:	mov    cl,BYTE PTR [esp+edx*4-0x142db864]
  413cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ce0:	xchg   ecx,eax
  413ce1:	jle    0x413cec
  413ce3:	jo     0x413c9e
  413ce5:	(bad)  
  413ce6:	jg     0x413ce6
  413ce8:	mov    ebx,0x68844889
  413cee:	out    dx,al
  413cef:	shr    BYTE PTR [ecx-0x61f06c72],cl
  413cf5:	ins    BYTE PTR es:[edi],dx
  413cf6:	mov    bh,0xc
  413cf8:	rol    DWORD PTR [edi],1
  413cfa:	dec    ebp
  413cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cfc:	jle    0x413cb7
  413cfe:	mov    dh,0xe5
  413d00:	inc    edi
  413d01:	(bad)  
  413d02:	jmp    0x946807dd
  413d07:	mov    eax,0x2bb91bfd
  413d0c:	fistp  DWORD PTR [ecx-0x70]
  413d0f:	dec    ebp
  413d10:	mov    ebp,0x81537aa4
  413d15:	test   al,0x51
  413d17:	shl    BYTE PTR [edx],1
  413d19:	iret   
  413d1a:	call   0x79be:0xc824ea6
  413d21:	mov    edx,0x95a4acf6
  413d26:	and    BYTE PTR [ebx-0xe07017c],al
  413d2c:	arpl   WORD PTR [edi+0x19],di
  413d2f:	jmp    0x413cbd
  413d31:	xchg   esi,eax
  413d32:	leave  
  413d33:	sti    
  413d34:	and    esi,edi
  413d36:	jno    0x413d96
  413d38:	ds or  eax,0xb8324deb
  413d3e:	mov    eax,edi
  413d40:	cmc    
  413d41:	aaa    
  413d42:	push   ecx
  413d43:	jne    0x413d28
  413d45:	(bad)  
  413d46:	jne    0x413cfb
  413d48:	cmc    
  413d49:	adc    bl,BYTE PTR [ecx-0x3d]
  413d4c:	loop   0x413d6b
  413d4e:	ds cmp al,0x11
  413d51:	scas   al,BYTE PTR es:[edi]
  413d52:	and    esi,DWORD PTR [edx-0x4a]
  413d55:	or     al,0xa0
  413d57:	xor    cl,bl
  413d59:	push   ss
  413d5a:	js     0x413cf1
  413d5c:	adc    al,0xd7
  413d5e:	(bad)  
  413d5f:	(bad)  
  413d60:	icebp  
  413d61:	mov    al,ds:0xfce36702
  413d66:	lds    esp,FWORD PTR [eax+0x38]
  413d69:	jmp    0x413de3
  413d6b:	lds    edx,FWORD PTR [ebx+0x59072017]
  413d71:	push   esp
  413d72:	and    eax,0x1d9df40f
  413d77:	inc    ebp
  413d78:	int    0x9b
  413d7a:	cli    
  413d7b:	cmp    dl,ch
  413d7d:	shl    DWORD PTR [esi-0x66],cl
  413d80:	xor    ah,ah
  413d82:	push   ss
  413d83:	adc    BYTE PTR [ebp+0x3a],ch
  413d86:	lock mov ebx,0xb5e38514
  413d8c:	and    BYTE PTR [edx+0x17a3d596],dl
  413d92:	dec    esi
  413d93:	pop    ds
  413d94:	ins    DWORD PTR es:[edi],dx
  413d95:	cwde   
  413d96:	mov    bl,0x6d
  413d98:	outs   dx,BYTE PTR ds:[esi]
  413d99:	jl     0x413d33
  413d9b:	fadd   QWORD PTR ds:0x306a940e
  413da1:	pop    edi
  413da2:	or     BYTE PTR [ecx-0x7a],bl
  413da5:	or     DWORD PTR [edx],ebp
  413da7:	(bad)  
  413da8:	outs   dx,DWORD PTR ds:[esi]
  413da9:	dec    edi
  413daa:	sub    al,0xeb
  413dac:	lds    edi,FWORD PTR [edx]
  413dae:	jo     0x413d4b
  413db0:	fdivr  QWORD PTR [eax+0x6a4cf813]
  413db6:	inc    esp
  413db7:	repnz mov ch,0x2
  413dba:	add    eax,0xd0e9d2f2
  413dbf:	sub    al,0x5c
  413dc1:	test   al,0x78
  413dc3:	scas   eax,DWORD PTR es:[edi]
  413dc4:	aad    0x8c
  413dc6:	ret    
  413dc7:	and    ecx,DWORD PTR [esi-0x23]
  413dca:	jne    0xd318703d
  413dd0:	mov    eax,ds:0x39a45873
  413dd5:	xor    edi,DWORD PTR [eax-0xe6f9093]
  413ddb:	je     0x413d7c
  413ddd:	bound  esp,QWORD PTR [ecx-0x1405b151]
  413de3:	imul   ebp,ecx,0x228a0461
  413de9:	dec    esi
  413dea:	popf   
  413deb:	rcl    DWORD PTR ds:[ebx-0x1f02443b],1
  413df2:	jns    0xc775accf
  413df8:	loopne 0x413dbe
  413dfa:	xlat   BYTE PTR ds:[ebx]
  413dfb:	jbe    0x413d81
  413dfd:	mov    ebx,0xbdd39a53
  413e02:	xchg   ebx,eax
  413e03:	cdq    
  413e04:	jle    0x413e76
  413e06:	adc    eax,0xe8c05281
  413e0b:	xor    eax,esp
  413e0d:	push   edx
  413e0e:	mov    ecx,0x108e85cb
  413e13:	in     eax,dx
  413e14:	sar    ebp,cl
  413e16:	xchg   ebx,eax
  413e17:	pop    edx
  413e18:	xchg   ebx,eax
  413e19:	dec    ebp
  413e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e1b:	jle    0x413e3a
  413e1d:	mov    ecx,0x44c4f8b
  413e22:	int    0xd3
  413e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e25:	outs   dx,BYTE PTR ds:[esi]
  413e26:	dec    ecx
  413e27:	inc    esp
  413e28:	pop    esp
  413e29:	ds clc 
  413e2b:	call   0xf0f8ed14
  413e30:	xchg   ecx,eax
  413e31:	mov    ecx,0xd3ed1ace
  413e36:	imul   esp,edx,0xa805d330
  413e3c:	sbb    al,0xf3
  413e3e:	mov    ecx,0xbfc0990b
  413e43:	push   ecx
  413e44:	std    
  413e45:	xchg   esi,eax
  413e46:	jno    0x413e23
  413e48:	loop   0x413e5d
  413e4a:	rcl    BYTE PTR [ebx-0x1c570a03],1
  413e50:	aaa    
  413e51:	pop    ebx
  413e52:	sbb    DWORD PTR [ecx+eiz*8],0x2e
  413e56:	jne    0x413e11
  413e58:	popa   
  413e59:	call   0xad6012b9
  413e5e:	loope  0x413e38
  413e60:	shr    DWORD PTR [edx],1
  413e62:	rol    BYTE PTR [edx+0x1],cl
  413e65:	(bad)  
  413e66:	hlt    
  413e67:	int3   
  413e68:	xchg   esp,eax
  413e69:	mov    bh,0xe4
  413e6b:	mov    edi,0xc46b9d
  413e70:	xor    eax,0x788adbbf
  413e75:	add    dh,BYTE PTR [eax-0x4352310e]
  413e7b:	mov    al,ds:0xd640b3c4
  413e80:	test   DWORD PTR [ebx],ebx
  413e82:	inc    ebp
  413e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e84:	xchg   esp,eax
  413e85:	mov    ds:0x27cdc3e9,al
  413e8a:	xchg   edx,eax
  413e8b:	xor    BYTE PTR [ebx+0x51],al
  413e8e:	push   cs
  413e8f:	cmc    
  413e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e91:	mov    al,0x8b
  413e93:	xchg   DWORD PTR [ebx+esi*4+0x68590e5f],esp
  413e9a:	xchg   ebx,eax
  413e9b:	xor    eax,0x71d1a76
  413ea0:	shl    BYTE PTR [edi+eax*4+0x11587d73],1
  413ea7:	cmc    
  413ea8:	mov    al,0x3e
  413eaa:	iret   
  413eab:	sti    
  413eac:	push   DWORD PTR [edi+0x32fad712]
  413eb2:	xor    al,0xcf
  413eb4:	mov    ds:0xa8f0b79b,eax
  413eb9:	rol    DWORD PTR [ebp+0x6d947983],1
  413ebf:	aas    
  413ec0:	cwde   
  413ec1:	cwde   
  413ec2:	jbe    0x413ec3
  413ec4:	mov    ds:0x9400e44e,eax
  413ec9:	dec    DWORD PTR [edi-0x71732355]
  413ecf:	mov    ecx,0x25a40c27
  413ed4:	inc    esi
  413ed5:	jae    0x413ec5
  413ed7:	pop    edx
  413ed8:	(bad)  
  413ed9:	mov    edi,0x4a6abb75
  413ede:	inc    eax
  413edf:	mov    ds:0x886eca5d,al
  413ee4:	sar    DWORD PTR [esp+eax*2],0x5a
  413ee8:	pop    edx
  413ee9:	mov    ds:0x83626d7c,eax
  413eee:	lea    ebp,[esi+0x38acf3cc]
  413ef4:	sub    BYTE PTR [ecx],bh
  413ef6:	mov    edi,0xd7daba75
  413efb:	retf   
  413efc:	and    BYTE PTR [edx+0x65],ch
  413eff:	test   al,0x9d
  413f01:	push   edi
  413f02:	ins    DWORD PTR es:[edi],dx
  413f03:	idiv   DWORD PTR [esp+eax*2+0x37]
  413f07:	and    dh,BYTE PTR [esi+0x71c0be3f]
  413f0d:	sub    ebx,DWORD PTR [edi-0x11]
  413f10:	jle    0x413f48
  413f12:	pop    eax
  413f13:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413f15:	iret   
  413f16:	in     al,0xe4
  413f18:	daa    
  413f19:	jge    0x413ee2
  413f1b:	xchg   ebx,eax
  413f1c:	push   0x57
  413f1e:	fcom   QWORD PTR [edi+0x2d]
  413f21:	js     0x413eb9
  413f23:	ret    
  413f24:	or     al,0xd7
  413f26:	in     eax,0x69
  413f28:	xchg   edx,eax
  413f29:	sub    al,0xd
  413f2b:	outs   dx,DWORD PTR ds:[esi]
  413f2c:	pop    ds
  413f2d:	cmp    esi,eax
  413f2f:	xor    eax,0xb4e51cf7
  413f34:	cs sbb ecx,esp
  413f37:	xlat   BYTE PTR ds:[ebx]
  413f38:	add    al,0xc3
  413f3a:	push   edi
  413f3b:	xor    esp,eax
  413f3d:	push   0x22
  413f3f:	xor    eax,0xb4bc4da6
  413f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f45:	ror    BYTE PTR [edx],0xf2
  413f48:	repnz add eax,esp
  413f4b:	adc    DWORD PTR [ecx-0x6d],0x25
  413f4f:	fnstcw WORD PTR [ebx-0xf6ca899]
  413f55:	arpl   di,si
  413f57:	retf   
  413f58:	(bad)  
  413f59:	pop    edx
  413f5a:	inc    esp
  413f5b:	cmp    esi,eax
  413f5d:	xchg   esi,eax
  413f5e:	dec    esi
  413f5f:	mov    bl,BYTE PTR [esi+0x50]
  413f62:	sub    al,0xd9
  413f64:	call   DWORD PTR [eax-0x3b]
  413f67:	scas   eax,DWORD PTR es:[edi]
  413f68:	sahf   
  413f69:	cmp    DWORD PTR [eax],esp
  413f6b:	pop    ecx
  413f6c:	dec    DWORD PTR [edi-0x65]
  413f6f:	js     0x413f7b
  413f71:	cdq    
  413f72:	repnz int3 
  413f74:	leave  
  413f75:	cmc    
  413f76:	sub    eax,DWORD PTR [edx-0x4e9a15f9]
  413f7c:	jp     0x413feb
  413f7e:	push   ds
  413f7f:	mov    ebx,0xd66137e2
  413f84:	mov    bh,0xb2
  413f86:	(bad)  
  413f87:	cmp    al,0x81
  413f89:	ss and ah,bh
  413f8c:	loope  0x413f5c
  413f8e:	mov    al,ds:0xf3fef804
  413f93:	call   FWORD PTR [edx+0x23]
  413f96:	mov    ebp,0x42c09008
  413f9b:	into   
  413f9c:	fstp   DWORD PTR [esi+0x5a8d4b9e]
  413fa2:	nop
  413fa3:	popa   
  413fa4:	in     eax,0x93
  413fa6:	enter  0xa364,0xf7
  413faa:	in     eax,dx
  413fab:	cmc    
  413fac:	xor    dl,BYTE PTR [edx-0x33]
  413faf:	nop
  413fb0:	ss pop edx
  413fb2:	ror    esi,1
  413fb4:	retf   0x780f
  413fb7:	push   cs
  413fb8:	fwait
  413fb9:	mov    eax,ds:0x3f8fb436
  413fbe:	lds    eax,FWORD PTR [edi-0x58]
  413fc1:	nop
  413fc2:	ds jp  0x413fbb
  413fc5:	loopne 0x414014
  413fc7:	icebp  
  413fc8:	dec    edx
  413fc9:	aad    0x86
  413fcb:	ins    DWORD PTR es:[edi],dx
  413fcc:	call   0x1b8e96c8
  413fd1:	std    
  413fd2:	push   edi
  413fd3:	stos   DWORD PTR es:[edi],eax
  413fd4:	fistp  DWORD PTR [edx]
  413fd6:	mov    bh,0xbf
  413fd8:	add    bl,BYTE PTR [ecx+0x0]
  413fdb:	out    dx,al
  413fdc:	fistp  QWORD PTR [ebp+0x23664886]
  413fe2:	mov    gs,WORD PTR [eax-0xb06e786]
  413fe8:	inc    eax
  413fe9:	pushf  
  413fea:	mov    eax,ds:0x490c4f16
  413fef:	adc    eax,0x2b1c7dc2
  413ff4:	fcomp  QWORD PTR es:[ebx]
  413ff7:	jp     0x414022
  413ff9:	mov    al,0x6f
  413ffb:	mov    ebp,0xe8ec169b
  414000:	bound  edx,QWORD PTR [ecx]
  414002:	iret   
  414003:	fistp  WORD PTR [eax-0x5ee70c9b]
  414009:	pop    esi
  41400a:	test   DWORD PTR [ebx-0x5b5e283a],ebx
  414010:	pop    ds
  414011:	push   esp
  414012:	cmp    al,0xc6
  414014:	add    eax,0x244c9933
  414019:	pushf  
  41401a:	cmp    BYTE PTR gs:0xcdf06356,0x8
  414022:	(bad)  
  414023:	pop    ebp
  414024:	imul   ebx,ebp,0xffffffa5
  414027:	sub    esp,edx
  414029:	pushf  
  41402a:	or     ecx,DWORD PTR [esi]
  41402c:	dec    ebx
  41402d:	pusha  
  41402e:	cli    
  41402f:	test   eax,0xae48b8c9
  414034:	loopne 0x4140b0
  414036:	and    BYTE PTR [ebx+0x7fcb8d44],0xe9
  41403d:	sub    bh,BYTE PTR [ebx]
  41403f:	inc    ebp
  414040:	cmp    BYTE PTR [ebp+eiz*4+0x6dc192d],0x84
  414048:	mov    ebx,0x4acfbb25
  41404d:	sbb    DWORD PTR [edx],ebx
  41404f:	sahf   
  414050:	js     0x414053
  414052:	xlat   BYTE PTR ds:[ebx]
  414053:	fcom   DWORD PTR [edx-0xc]
  414056:	cli    
  414057:	fstp   QWORD PTR [ecx+0x1e]
  41405a:	pop    ebp
  41405b:	out    dx,eax
  41405c:	push   ds
  41405d:	jae    0x414053
  41405f:	inc    esp
  414060:	and    al,0xdf
  414062:	and    eax,0x6421ae2f
  414067:	fstp   DWORD PTR [ebp-0x6d7ec534]
  41406d:	sbb    DWORD PTR [ecx-0x6a],ebx
  414070:	xor    eax,DWORD PTR [ebx-0x7b60160b]
  414076:	jmp    0x53de:0xbdae3f4a
  41407d:	mov    esi,0x9922fdaf
  414082:	ret    0x1710
  414085:	sub    edi,edx
  414087:	and    ch,dh
  414089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41408a:	jae    0x4140b4
  41408c:	js     0x414036
  41408e:	inc    ebp
  41408f:	and    al,0xb4
  414091:	jp     0x414037
  414093:	and    eax,0xf8af769e
  414098:	push   ebp
  414099:	sti    
  41409a:	sbb    al,BYTE PTR [edi]
  41409c:	jne    0x414116
  41409e:	mov    dh,BYTE PTR [esi]
  4140a0:	sbb    eax,0xa5cc04fb
  4140a5:	sub    cl,bh
  4140a7:	xor    ebp,DWORD PTR [edi+0x38252593]
  4140ad:	or     esp,esi
  4140af:	push   cs
  4140b0:	mov    eax,ds:0xf358d6d1
  4140b5:	xor    al,bl
  4140b7:	sub    ebx,DWORD PTR [ecx-0x29b9527d]
  4140bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140be:	leave  
  4140bf:	cwde   
  4140c0:	stc    
  4140c1:	push   ecx
  4140c2:	sbb    DWORD PTR [edi-0x78ee0fd7],eax
  4140c8:	mov    eax,ds:0xa5525ba8
  4140cd:	icebp  
  4140ce:	pop    eax
  4140cf:	test   edx,ecx
  4140d1:	rol    DWORD PTR [esp+ecx*2],0x27
  4140d5:	in     al,0x98
  4140d7:	out    dx,al
  4140d8:	sti    
  4140d9:	mov    ch,0x92
  4140db:	mov    dh,bl
  4140dd:	pop    esp
  4140de:	jmp    0x41415e
  4140e0:	sub    al,0xcf
  4140e2:	add    BYTE PTR [edx+edi*8],al
  4140e5:	test   al,0xef
  4140e7:	ret    0x18e8
  4140ea:	jg     0x414151
  4140ec:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ee:	call   0x465e:0x9a45b54
  4140f5:	(bad)  
  4140f6:	das    
  4140f7:	leave  
  4140f8:	xchg   ebx,eax
  4140f9:	mov    al,ds:0xdf23eb13
  4140fe:	add    BYTE PTR [eax+0x5d1a6770],cl
  414104:	sub    al,0x6e
  414106:	pop    edi
  414107:	gs xchg ebp,eax
  414109:	sbb    eax,0x6e6d6bfb
  41410e:	out    0x9e,eax
  414110:	cmp    DWORD PTR [ecx-0x6ce0adf4],ebx
  414116:	pusha  
  414117:	loop   0x414102
  414119:	loope  0x414181
  41411b:	xor    al,BYTE PTR [esi]
  41411d:	test   al,0x8a
  41411f:	xor    ecx,DWORD PTR [esi+0x70]
  414122:	xor    cl,BYTE PTR [edx-0x286238fb]
  414128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414129:	js     0x4140ff
  41412b:	or     edi,DWORD PTR [edi+0x751cbdb7]
  414131:	jl     0x414161
  414133:	push   esi
  414134:	xor    edi,DWORD PTR [eax+0x5a61380b]
  41413a:	xchg   ecx,eax
  41413b:	(bad)  
  41413c:	adc    dl,ah
  41413e:	mov    dh,0x6e
  414140:	inc    ecx
  414141:	not    DWORD PTR [ecx-0x61f89f90]
  414147:	clc    
  414148:	and    BYTE PTR [ebp+0x1bee0952],0x72
  41414f:	inc    esi
  414150:	stc    
  414151:	xchg   ecx,eax
  414152:	inc    edx
  414153:	fsubr  QWORD PTR [ebx-0x6c]
  414156:	push   cs
  414157:	xchg   ebp,eax
  414158:	in     al,dx
  414159:	mov    esi,0xd281ce52
  41415e:	dec    eax
  41415f:	pop    ebx
  414160:	add    al,BYTE PTR [edx-0x1011d2e4]
  414166:	ficomp DWORD PTR [eax]
  414168:	or     BYTE PTR [ebx-0x10399030],0xb
  41416f:	inc    ebx
  414170:	icebp  
  414171:	(bad)  
  414172:	lds    ebp,FWORD PTR [edi]
  414174:	in     ax,0xd4
  414177:	fmul   QWORD PTR [ebx+0x24]
  41417a:	test   BYTE PTR [edi+0x7fe464b5],bl
  414180:	inc    ebp
  414181:	push   ebx
  414182:	sub    eax,0x624bcdbe
  414187:	into   
  414188:	push   0x203f55a8
  41418d:	xchg   DWORD PTR [ecx+0x4ed78dd2],ebp
  414193:	fwait
  414194:	outs   dx,DWORD PTR ds:[esi]
  414195:	xchg   edi,eax
  414196:	jns    0x4141c9
  414198:	cs push edx
  41419a:	jmp    0x91c29938
  41419f:	inc    ebp
  4141a0:	mov    al,0x91
  4141a2:	xchg   ecx,eax
  4141a3:	es or  eax,0x6a9432c5
  4141a9:	lea    edx,[eax+0x28]
  4141ac:	lods   eax,DWORD PTR ds:[esi]
  4141ad:	idiv   bl
  4141af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b0:	add    BYTE PTR [edi+0x7a37b0c7],cl
  4141b6:	(bad)  
  4141b7:	fwait
  4141b8:	lods   eax,DWORD PTR ds:[esi]
  4141b9:	sti    
  4141ba:	mov    ch,0xc
  4141bc:	jmp    0xbcc5:0x24ca8c71
  4141c3:	daa    
  4141c4:	stos   BYTE PTR es:[edi],al
  4141c5:	in     al,0xae
  4141c7:	retf   
  4141c8:	pop    ebx
  4141c9:	or     ebx,0x55254555
  4141cf:	lods   eax,DWORD PTR ds:[esi]
  4141d0:	rcl    BYTE PTR [esi],cl
  4141d2:	add    DWORD PTR [edx-0x224d2e9d],ecx
  4141d8:	sub    al,0x21
  4141da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141db:	jnp    0x41421e
  4141dd:	inc    ebx
  4141de:	neg    BYTE PTR [ebx+ebp*4-0x2bc4412f]
  4141e5:	mov    WORD PTR [edx+ebx*2+0xc],cs
  4141e9:	lods   eax,DWORD PTR ds:[esi]
  4141ea:	pop    edi
  4141eb:	ss scas eax,DWORD PTR es:[edi]
  4141ed:	sub    BYTE PTR [ebx+ebx*4-0x2937dde6],0x8a
  4141f5:	mov    bh,0xf3
  4141f7:	jne    0x4141a0
  4141f9:	mov    cl,0x3
  4141fb:	jg     0x414266
  4141fd:	push   esp
  4141fe:	out    dx,eax
  4141ff:	xchg   ebp,eax
  414200:	imul   esi,edx,0xffffffe1
  414203:	pinsrw mm5,WORD PTR [edi-0x5e],0x3
  414208:	inc    esp
  414209:	push   esp
  41420a:	in     al,0xe3
  41420c:	push   es
  41420d:	add    al,0xf5
  41420f:	pop    ecx
  414210:	sbb    ebp,esp
  414212:	out    dx,al
  414213:	jbe    0x41422b
  414215:	push   es
  414216:	gs sub al,0x66
  414219:	jecxz  0x414222
  41421b:	cld    
  41421c:	xchg   ebp,eax
  41421d:	es pop esp
  41421f:	fwait
  414220:	test   BYTE PTR [ebx+0x4a],al
  414223:	outs   dx,DWORD PTR ds:[esi]
  414224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414225:	or     al,0xb1
  414227:	loop   0x4141fa
  414229:	adc    edi,DWORD PTR [edx+edi*8-0x2a7b345d]
  414230:	lods   al,BYTE PTR ds:[esi]
  414231:	aaa    
  414232:	cmp    ebp,DWORD PTR [ecx+ecx*8-0x16b0c1c7]
  414239:	repz div DWORD PTR [edi]
  41423c:	mov    al,0x78
  41423e:	not    DWORD PTR [ebp-0xb0e4640]
  414244:	mov    ebx,0x4d0f1a04
  414249:	xor    al,bh
  41424b:	(bad)  
  41424c:	shr    BYTE PTR [ebx-0x3c],1
  41424f:	jp     0x41423c
  414251:	mov    esi,DWORD PTR [ecx-0x72]
  414254:	les    eax,FWORD PTR [esi]
  414256:	dec    esi
  414257:	fild   WORD PTR [edi]
  414259:	inc    edi
  41425a:	ja     0x41426f
  41425c:	shl    ah,cl
  41425e:	xor    DWORD PTR [esi-0x3f],0x3d
  414262:	ret    
  414263:	enter  0x17f2,0x66
  414267:	inc    edx
  414268:	xor    dh,BYTE PTR [eax]
  41426a:	retf   0x38d3
  41426d:	cmp    eax,0xff6e1d5f
  414272:	fcom   DWORD PTR [ebx+0x164544]
  414278:	scas   al,BYTE PTR es:[edi]
  414279:	mov    cl,0x2d
  41427b:	aam    0xd3
  41427d:	xor    eax,0x592328d9
  414282:	je     0x41420d
  414284:	push   0xa66bebf9
  414289:	aam    0xe9
  41428b:	jg     0x41421c
  41428d:	add    eax,0xce231dbe
  414292:	pushf  
  414293:	and    cl,bh
  414295:	outs   dx,DWORD PTR ds:[esi]
  414296:	imul   esp,eax,0x4c
  414299:	jbe    0x4142af
  41429b:	lods   eax,DWORD PTR ds:[esi]
  41429c:	cs pop edx
  41429e:	jmp    0xdcef:0x73b28429
  4142a5:	add    eax,0x992f998b
  4142aa:	out    dx,eax
  4142ab:	inc    ebx
  4142ac:	mov    al,ds:0xb688252a
  4142b1:	mov    ecx,0x2ef29cc3
  4142b6:	addr16 jb 0x41426b
  4142b9:	mov    esp,0x369665ba
  4142be:	enter  0x3412,0x94
  4142c2:	or     eax,0x1bc6c79e
  4142c7:	imul   eax,ecx,0xfb58341b
  4142cd:	pmullw mm3,QWORD PTR [eax-0x52]
  4142d1:	inc    ebx
  4142d2:	add    BYTE PTR [edx-0x1e],0xd5
  4142d6:	mov    ebp,DWORD PTR [edi+esi*1-0x514e91bd]
  4142dd:	popf   
  4142de:	aas    
  4142df:	jge    0x4142d5
  4142e1:	test   esp,edx
  4142e3:	rcr    BYTE PTR [ecx],cl
  4142e5:	mov    ds:0xbeede5b8,al
  4142ea:	js     0x414270
  4142ec:	pop    es
  4142ed:	mov    dl,0x62
  4142ef:	adc    al,0x7
  4142f1:	xor    ah,BYTE PTR [ecx-0x4]
  4142f4:	and    bh,BYTE PTR [esi+edx*2-0x7c3b6945]
  4142fb:	in     al,0x47
  4142fd:	out    dx,al
  4142fe:	ins    DWORD PTR es:[edi],dx
  4142ff:	scas   eax,DWORD PTR es:[edi]
  414300:	and    bh,cl
  414302:	sbb    al,0xe5
  414304:	sti    
  414305:	(bad)  
  414306:	jnp    0x414367
  414308:	fcomi  st,st(2)
  41430a:	mov    edi,0x298a06c8
  41430f:	mov    dl,0x66
  414311:	pop    eax
  414312:	xchg   DWORD PTR [edx+0x35],ebp
  414315:	dec    ebx
  414316:	dec    ecx
  414317:	sbb    BYTE PTR [edi+0x71],dh
  41431a:	scas   al,BYTE PTR es:[edi]
  41431b:	and    al,0x5b
  41431d:	addr16 jo 0x414374
  414320:	jno    0x4142f1
  414322:	into   
  414323:	push   ebp
  414324:	pushf  
  414325:	sahf   
  414326:	xlat   BYTE PTR ds:[ebx]
  414327:	cdq    
  414328:	fst    DWORD PTR [ebp+ebp*8-0x76fe8632]
  41432f:	adc    al,0x76
  414332:	jb     0x4142d2
  414334:	xchg   ebp,eax
  414335:	sub    DWORD PTR [edi+0x49],esi
  414338:	imul   edi,DWORD PTR [edi],0xfffffff0
  41433b:	test   DWORD PTR ds:0xde9f0dfa,ebx
  414341:	ins    DWORD PTR es:[edi],dx
  414342:	jmp    0x7243:0x25ea2e2c
  414349:	cld    
  41434a:	xchg   ebp,eax
  41434b:	rcr    bh,cl
  41434d:	jge    0x4142d6
  41434f:	cmp    al,0x5f
  414351:	loope  0x4143bd
  414353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414354:	adc    eax,0x2b01a881
  414359:	xchg   DWORD PTR ds:[edi],edi
  41435c:	ficomp WORD PTR [ebx+0x28]
  41435f:	add    al,0x38
  414361:	jmp    0x22b6:0x2891d698
  414368:	jmp    0x6cb4d210
  41436d:	out    0x91,ax
  414370:	fisttp WORD PTR [edi-0x312cd8ab]
  414376:	jge    0x41431a
  414378:	sbb    al,0xab
  41437a:	stos   DWORD PTR es:[edi],eax
  41437b:	repz jg 0x414317
  41437e:	mov    ch,0x32
  414380:	outs   dx,BYTE PTR ds:[esi]
  414381:	and    esi,DWORD PTR [eax+eiz*1]
  414384:	xor    eax,0x50925017
  414389:	repz cmp eax,0x3903893a
  41438f:	nop
  414390:	xchg   ebx,eax
  414391:	rol    DWORD PTR [eax-0x44690e5c],1
  414397:	inc    esp
  414398:	or     BYTE PTR [ebp+0x4e59cbc7],0x2
  41439f:	out    dx,eax
  4143a0:	jg     0x414330
  4143a2:	xchg   ebx,eax
  4143a3:	xor    ecx,DWORD PTR [edx]
  4143a5:	enter  0x1bcf,0xd4
  4143a9:	nop
  4143aa:	mov    ecx,0x27a071b0
  4143af:	mov    al,ds:0x6f4b979a
  4143b4:	mov    bl,0x8a
  4143b6:	pop    ebp
  4143b7:	retf   
  4143b8:	adc    BYTE PTR ds:0x964520b0,cl
  4143be:	leave  
  4143bf:	stc    
  4143c0:	popf   
  4143c1:	cs pop ecx
  4143c3:	js     0x414366
  4143c5:	cmp    edx,DWORD PTR [ebx+0x4f5ff980]
  4143cb:	push   0x78
  4143cd:	dec    ecx
  4143ce:	popa   
  4143cf:	pusha  
  4143d0:	adc    BYTE PTR [ecx],0x8f
  4143d3:	sbb    dh,BYTE PTR [esi+0x3c1d3f2c]
  4143d9:	sub    BYTE PTR [edi],0x2a
  4143dc:	outs   dx,BYTE PTR ds:[esi]
  4143dd:	aas    
  4143de:	cld    
  4143df:	outs   dx,DWORD PTR ds:[esi]
  4143e0:	jnp    0x414438
  4143e2:	rcr    DWORD PTR [ebx],1
  4143e4:	mov    bh,0x7
  4143e6:	or     dh,BYTE PTR [eax+edx*2-0x48d5bdcb]
  4143ed:	add    esi,DWORD PTR [eax+0x739217e7]
  4143f3:	fsubr  QWORD PTR [esi+0x1b9429a2]
  4143f9:	pop    edi
  4143fa:	cmc    
  4143fb:	and    al,al
  4143fd:	pusha  
  4143fe:	loope  0x4143c8
  414400:	cmp    ecx,esi
  414402:	addr16 push ss
  414404:	inc    ecx
  414405:	ja     0x4143fb
  414407:	std    
  414408:	push   ds
  414409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41440a:	pop    ebp
  41440b:	lods   al,BYTE PTR ds:[esi]
  41440c:	mov    dh,0x85
  41440e:	push   esp
  41440f:	rcr    BYTE PTR [esi+0x39],cl
  414412:	addr16 mov al,0x7
  414415:	mov    eax,ds:0xb2f9535c
  41441a:	xchg   BYTE PTR [edx-0x5b],cl
  41441d:	push   esp
  41441e:	mov    ebx,0xa609045d
  414423:	js     0x41448a
  414425:	push   ds
  414426:	xchg   ecx,eax
  414427:	std    
  414428:	add    ecx,DWORD PTR [ebp+0x1a]
  41442b:	jmp    0x4db:0x36bffffb
  414432:	cdq    
  414433:	test   eax,0x304ae8e2
  414438:	mov    edi,0x7bc94b9e
  41443d:	sub    eax,0x96866fd8
  414442:	dec    ebx
  414443:	jl     0x4143cb
  414445:	fistp  WORD PTR [ebp+0x36]
  414448:	xor    al,0xf8
  41444a:	adc    esp,ebp
  41444c:	in     al,0xc2
  41444e:	loope  0x4143d0
  414450:	test   DWORD PTR [ecx],eax
  414452:	add    dh,BYTE PTR [ecx]
  414454:	sub    BYTE PTR [eax-0x75ae6a98],al
  41445a:	and    ah,BYTE PTR [ebx-0x77]
  41445d:	pop    edi
  41445e:	inc    edx
  41445f:	test   al,0x77
  414461:	sub    ah,ah
  414463:	out    dx,eax
  414464:	cmc    
  414465:	xchg   esp,eax
  414466:	push   cs
  414467:	xor    BYTE PTR [edi+ebx*1-0x77dcfd2b],ch
  41446e:	mov    dl,BYTE PTR [ecx+0x7c]
  414471:	inc    ebx
  414472:	(bad)  
  414473:	not    BYTE PTR [eax+0x7c]
  414476:	psubw  mm3,QWORD PTR [eax]
  414479:	add    ebx,DWORD PTR [eax+0x72]
  41447c:	popa   
  41447d:	stos   DWORD PTR es:[edi],eax
  41447e:	and    ch,al
  414480:	push   ebx
  414481:	or     dh,BYTE PTR [ecx+0x25]
  414484:	cmp    DWORD PTR [esi],ebx
  414486:	sub    al,0x7
  414488:	pop    edi
  414489:	adc    DWORD PTR [ebx],ebp
  41448b:	sbb    cl,ah
  41448d:	ret    
  41448e:	daa    
  41448f:	sbb    DWORD PTR [edx],edi
  414491:	inc    ebx
  414492:	(bad)  
  414493:	xchg   esi,eax
  414494:	leave  
  414495:	ins    DWORD PTR es:[edi],dx
  414496:	and    eax,0xe3fe431e
  41449b:	dec    esp
  41449c:	sbb    eax,0x183283f
  4144a1:	lahf   
  4144a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144a3:	and    eax,0x3e17c31f
  4144a8:	out    dx,al
  4144a9:	std    
  4144aa:	push   eax
  4144ab:	jo     0x41443e
  4144ad:	push   esi
  4144ae:	pcmpgtw mm3,QWORD PTR [esp+esi*2-0x7b]
  4144b3:	and    eax,0x6d9569b8
  4144b8:	sar    edx,0x45
  4144bb:	repnz mov ebx,0x7b9d3121
  4144c1:	and    edi,DWORD PTR [eax+0x6915ba08]
  4144c7:	arpl   WORD PTR [esi*4-0x4bbc43dc],si
  4144ce:	daa    
  4144cf:	aas    
  4144d0:	out    0xc8,eax
  4144d2:	xchg   DWORD PTR [ebx-0x4d0ce34],edi
  4144d8:	(bad)  
  4144d9:	and    DWORD PTR [edx+0x6049d60e],ebp
  4144df:	jle    0x414485
  4144e1:	xlat   BYTE PTR ds:[ebx]
  4144e2:	cmc    
  4144e3:	std    
  4144e4:	or     al,0x35
  4144e6:	and    dh,dh
  4144e8:	loope  0x414543
  4144ea:	das    
  4144eb:	in     eax,dx
  4144ec:	loope  0x41453a
  4144ee:	and    eax,0xbd7be007
  4144f3:	retf   
  4144f4:	adc    edx,DWORD PTR ds:0x3f069ea0
  4144fa:	outs   dx,BYTE PTR ds:[esi]
  4144fb:	mov    ds:0x873c694d,eax
  414500:	sub    cl,BYTE PTR [ebx-0x4ab27977]
  414506:	cdq    
  414507:	int    0xdd
  414509:	enter  0x3ed6,0xae
  41450d:	push   ss
  41450e:	jecxz  0x414587
  414510:	inc    ecx
  414511:	mov    DWORD PTR [edx],esp
  414513:	ins    DWORD PTR es:[edi],dx
  414514:	ss (bad) 
  414516:	sbb    BYTE PTR ds:0xd9244560,0xff
  41451d:	neg    BYTE PTR ds:0x10d95b42
  414523:	mov    ?,WORD PTR [ebp-0x66]
  414526:	ror    esi,1
  414528:	push   es
  414529:	xor    eax,0xec25934
  41452e:	(bad)  
  41452f:	out    0xe5,al
  414531:	pop    ss
  414532:	sti    
  414533:	push   ebp
  414534:	adc    DWORD PTR [ebx-0x4fe4a0ba],ebx
  41453a:	xor    al,0xd4
  41453c:	sub    al,0x63
  41453e:	sub    edi,DWORD PTR fs:[ebp-0x69c8a370]
  414545:	pop    ss
  414546:	sbb    edi,DWORD PTR [edi-0x11]
  414549:	mov    ch,0xd8
  41454b:	test   al,0xfa
  41454d:	mov    esi,0x52c8d516
  414552:	arpl   WORD PTR [edi-0x68526203],bp
  414558:	cmp    ebp,DWORD PTR [edi-0x4]
  41455b:	popa   
  41455c:	pop    esp
  41455d:	mov    cl,0xf
  41455f:	out    0x3b,al
  414561:	add    BYTE PTR [eax+0x8],ch
  414564:	add    ecx,DWORD PTR ss:[edi]
  414567:	ins    DWORD PTR es:[edi],dx
  414568:	mov    ah,0x9a
  41456a:	inc    esi
  41456b:	int    0x88
  41456d:	std    
  41456e:	push   esp
  41456f:	test   DWORD PTR [esi-0x13],ecx
  414572:	call   0xe37b10f6
  414577:	pop    eax
  414578:	cmp    eax,0x2260ac28
  41457d:	les    esi,FWORD PTR [ebx-0x71]
  414580:	mov    dl,0xa4
  414582:	ins    BYTE PTR es:[edi],dx
  414583:	pop    esp
  414584:	mov    ebx,DWORD PTR [ebx-0x35fe6e5f]
  41458a:	adc    DWORD PTR [esi-0xf],eax
  41458d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41458e:	aad    0xd9
  414590:	imul   ebp,DWORD PTR cs:[esi-0x72b792e2],0xffffff84
  414598:	(bad)  
  414599:	gs popf 
  41459b:	out    dx,al
  41459c:	das    
  41459d:	xchg   BYTE PTR [ecx+edi*1-0x5b],al
  4145a1:	dec    edx
  4145a2:	out    0x34,eax
  4145a4:	pop    ss
  4145a5:	jns    0x41458d
  4145a7:	in     al,dx
  4145a8:	inc    esp
  4145a9:	add    DWORD PTR [ebp+edi*4-0x14e7191f],0x0
  4145b1:	aad    0xb6
  4145b3:	mov    ?,WORD PTR [esi]
  4145b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b6:	out    0xbd,al
  4145b8:	pop    ebp
  4145b9:	xchg   BYTE PTR [eax],bl
  4145bb:	cmp    ah,cl
  4145bd:	or     al,0x37
  4145bf:	out    dx,eax
  4145c0:	enter  0xb1c1,0x7e
  4145c4:	push   ebp
  4145c5:	mov    bh,0x4f
  4145c7:	push   ecx
  4145c8:	fdivr  st(6),st
  4145ca:	pop    ds
  4145cb:	sub    ebp,DWORD PTR [eax]
  4145cd:	sub    eax,0x1f3e2277
  4145d2:	in     al,0x81
  4145d4:	call   0x2c282c6c
  4145d9:	sub    ah,BYTE PTR cs:0x59a45ece
  4145e0:	xchg   esi,eax
  4145e1:	push   ebp
  4145e2:	xor    ebp,DWORD PTR [edx]
  4145e4:	dec    esp
  4145e5:	add    eax,0x217d295d
  4145ea:	or     BYTE PTR [edi-0x11],bh
  4145ed:	push   ds
  4145ee:	inc    eax
  4145ef:	cmp    dh,al
  4145f1:	ret    0x808
  4145f4:	jmp    0x33b173d5
  4145f9:	push   esp
  4145fa:	push   esi
  4145fb:	push   cs
  4145fc:	pop    esi
  4145fd:	xchg   ebx,eax
  4145fe:	leave  
  4145ff:	dec    esp
  414600:	mov    cl,0xe4
  414602:	fs test ebp,edi
  414605:	sub    ch,cl
  414607:	aaa    
  414608:	push   cs
  414609:	shl    DWORD PTR [eax+edi*4+0x187bcb07],1
  414610:	and    ebx,DWORD PTR [ecx-0x6109e00c]
  414616:	jnp    0x41462a
  414618:	(bad)  
  414619:	ror    BYTE PTR [edx+0x49],0x6c
  41461d:	call   0xe459:0x70d43702
  414624:	push   ebx
  414625:	jne    0x41461e
  414627:	popa   
  414628:	out    0x49,eax
  41462a:	int    0x2
  41462c:	mov    esp,0x3d02ac8c
  414631:	mov    al,ds:0x8ae18eeb
  414636:	xor    eax,0x45370d6b
  41463b:	jmp    0x1c06:0xcc332ea8
  414642:	dec    ebp
  414643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414644:	pop    es
  414645:	div    esp
  414647:	push   cs
  414648:	add    al,0x1a
  41464a:	add    al,0x3c
  41464c:	pop    edi
  41464d:	pop    ds
  41464e:	fstp   DWORD PTR [edi-0x34039679]
  414654:	pop    edi
  414655:	mov    eax,ss
  414657:	test   al,0x46
  414659:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41465b:	sub    al,0xb0
  41465d:	push   0xd9ffd14c
  414662:	into   
  414663:	lock retf 0xa59a
  414667:	xchg   ecx,eax
  414668:	andnps xmm7,xmm4
  41466b:	pop    esp
  41466c:	mov    ?,WORD PTR [edx+0x3f]
  41466f:	jp     0x414695
  414671:	leave  
  414672:	mov    bh,BYTE PTR [esi]
  414674:	leave  
  414675:	jp     0x4146d6
  414677:	mov    esi,0x31663b33
  41467c:	inc    eax
  41467d:	fneni(8087 only) 
  41467f:	lock ret 
  414681:	jmp    0x5eb803b0
  414686:	dec    ebp
  414687:	stos   BYTE PTR es:[edi],al
  414688:	sub    eax,0xb199aaf1
  41468d:	ret    0x7d41
  414690:	pop    ebp
  414691:	mov    BYTE PTR [eax-0x5a],0x59
  414695:	mov    dl,BYTE PTR [eax+0x5c]
  414698:	and    ebp,DWORD PTR [edx-0x12]
  41469b:	pop    esi
  41469c:	ret    0x2b0e
  41469f:	xchg   ebx,eax
  4146a0:	push   ebx
  4146a1:	mov    edi,0x5f71464a
  4146a6:	cmp    bh,BYTE PTR [esi+0x2d]
  4146a9:	xor    DWORD PTR [eax],0xa87c0edb
  4146af:	and    ecx,edi
  4146b1:	ins    BYTE PTR es:[edi],dx
  4146b2:	cwde   
  4146b3:	adc    eax,0xecdad1a6
  4146b8:	inc    eax
  4146b9:	and    bh,ah
  4146bb:	push   cs
  4146bc:	jbe    0x4146ea
  4146be:	in     eax,0xec
  4146c0:	push   0x74
  4146c2:	xchg   edx,eax
  4146c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c4:	or     DWORD PTR [ebx-0x584cea2],ecx
  4146ca:	aad    0x92
  4146cc:	out    0xef,al
  4146ce:	ret    0xbe7
  4146d1:	jo     0x41471e
  4146d3:	jmp    0x832f:0xed02922f
  4146da:	loope  0x414670
  4146dc:	push   es
  4146dd:	es or  eax,ebx
  4146e0:	push   edx
  4146e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e2:	mov    fs,WORD PTR [ebx-0x7]
  4146e5:	dec    esi
  4146e6:	btr    DWORD PTR [edi],esi
  4146e9:	loopne 0x414693
  4146eb:	ret    
  4146ec:	retf   
  4146ed:	mov    BYTE PTR [esp+edi*1],0x7a
  4146f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f2:	rcl    eax,cl
  4146f4:	repnz popa 
  4146f6:	ins    DWORD PTR es:[edi],dx
  4146f7:	jmp    0xf459506
  4146fc:	js     0x4146bd
  4146fe:	xor    DWORD PTR [edx-0x6a],ebp
  414701:	push   ss
  414702:	xchg   ecx,eax
  414703:	sub    esi,ecx
  414705:	pushf  
  414706:	cdq    
  414707:	cmp    al,0x1d
  414709:	mov    ebp,0x8144f022
  41470e:	out    dx,eax
  41470f:	adc    eax,0x27d5371a
  414714:	sbb    BYTE PTR [edi-0x2b2e183e],bl
  41471a:	stos   DWORD PTR es:[edi],eax
  41471b:	jne    0x4146cf
  41471d:	sub    al,0x69
  41471f:	retf   
  414720:	pop    ebp
  414721:	sbb    eax,0x63c85682
  414726:	dec    esi
  414727:	or     bl,BYTE PTR [ebp-0x18c79aa0]
  41472d:	dec    edi
  41472e:	add    esi,DWORD PTR [ebx+0x1676eb52]
  414734:	sub    BYTE PTR [ebx],ah
  414736:	ss scas eax,DWORD PTR es:[edi]
  414738:	icebp  
  414739:	cmp    DWORD PTR [ebp-0x34],eax
  41473c:	test   eax,0x9c9edbee
  414741:	shl    DWORD PTR [ebx+0x29],1
  414744:	iret   
  414745:	mov    ah,0x35
  414747:	loope  0x41473d
  414749:	int3   
  41474a:	stc    
  41474b:	in     eax,0x71
  41474d:	inc    esi
  41474e:	push   ebp
  41474f:	outs   dx,BYTE PTR ds:[esi]
  414750:	push   esi
  414751:	out    0xb6,al
  414753:	lds    edx,FWORD PTR [esi-0x29]
  414756:	jns    0x41473e
  414758:	push   edi
  414759:	mov    ds:0x269ad31d,eax
  41475e:	jbe    0x41474f
  414760:	inc    ecx
  414761:	lea    esp,[ebp-0x45d4de49]
  414767:	inc    edi
  414768:	cmp    ebx,edx
  41476a:	sbb    BYTE PTR [edx+ebx*1-0x179073b1],dh
  414771:	fistp  QWORD PTR [ebp+0x51]
  414774:	or     BYTE PTR [esi+0x4974fcf2],dl
  41477a:	scas   eax,DWORD PTR es:[edi]
  41477b:	push   0x58697ba3
  414780:	mov    esi,0x97c29c31
  414785:	jb     0x41474a
  414787:	xor    BYTE PTR [ecx],cl
  414789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41478a:	mov    BYTE PTR [ebx-0x22],bh
  41478d:	gs dec ebp
  41478f:	xor    bh,BYTE PTR [eax-0x1cd57a97]
  414795:	and    al,0x17
  414797:	sub    ebp,DWORD PTR [edx]
  414799:	mov    DWORD PTR [ebx+0x6e8d352b],0xb4fe2c1d
  4147a3:	cld    
  4147a4:	dec    eax
  4147a5:	ja     0x4147ff
  4147a7:	outs   dx,DWORD PTR ds:[esi]
  4147a8:	icebp  
  4147a9:	out    0x2c,al
  4147ab:	sub    eax,0x1cfcf4a5
  4147b0:	pop    ebx
  4147b1:	fnsave [ebp+0xad4cab9]
  4147b7:	and    edx,DWORD PTR [eax+ebx*8]
  4147ba:	push   esp
  4147bb:	xor    al,0x8c
  4147bd:	pushf  
  4147be:	or     DWORD PTR [ecx-0x1f],esi
  4147c1:	or     al,0xdc
  4147c3:	in     eax,dx
  4147c4:	adc    al,0xc9
  4147c6:	xchg   ebp,eax
  4147c7:	arpl   WORD PTR [edi],ax
  4147c9:	cmp    ebp,DWORD PTR [edx+0x2cdc63ac]
  4147cf:	fmul   DWORD PTR [edi+0x4f73e879]
  4147d5:	mov    eax,ds:0x2fc3b319
  4147da:	(bad)  
  4147db:	cmp    ebx,DWORD PTR [ecx+edi*4-0x80]
  4147df:	js     0x414809
  4147e1:	pop    edi
  4147e2:	sahf   
  4147e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e4:	xchg   ebp,eax
  4147e5:	mov    bh,0x18
  4147e7:	in     eax,dx
  4147e8:	enter  0xdae7,0xa3
  4147ec:	pop    esi
  4147ed:	sbb    ebx,DWORD PTR [ebx-0x5b]
  4147f0:	out    dx,al
  4147f1:	sbb    BYTE PTR ds:0x20dd7926,ah
  4147f7:	fldenv [ecx-0x5883e6a6]
  4147fd:	jns    0x4147a2
  4147ff:	jb     0x41486c
  414801:	retf   
  414802:	test   al,0x5b
  414804:	(bad)  [eax+0x565a5cab]
  41480a:	xchg   esp,eax
  41480b:	out    0x34,eax
  41480d:	ret    
  41480e:	lahf   
  41480f:	aaa    
  414810:	fstp   TBYTE PTR [ebx]
  414812:	sub    al,0xbb
  414814:	cmp    al,0x3e
  414816:	mov    cl,0x89
  414818:	dec    edi
  414819:	sbb    eax,DWORD PTR ds:0x1184acd0
  41481f:	inc    DWORD PTR [edi]
  414821:	cwde   
  414822:	mov    edi,0xd5eaa086
  414827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414829:	scas   eax,DWORD PTR es:[edi]
  41482a:	dec    ecx
  41482b:	fs fwait
  41482d:	outs   dx,BYTE PTR ds:[esi]
  41482e:	fmul   DWORD PTR [edx+0x7483613d]
  414834:	dec    edx
  414835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414836:	add    eax,0x5695c622
  41483b:	lods   eax,DWORD PTR ds:[esi]
  41483c:	cmp    al,ah
  41483e:	call   0xd2fbf608
  414843:	push   esi
  414844:	repnz mov ebx,0xc855aaa6
  41484a:	xchg   esi,eax
  41484b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484c:	jg     0x414861
  41484e:	push   ebx
  41484f:	xchg   ebx,eax
  414850:	fadd   st,st(4)
  414852:	push   esp
  414853:	xchg   edx,eax
  414854:	sti    
  414855:	rcl    DWORD PTR [ebx-0x7c],1
  414858:	jbe    0x414839
  41485a:	xor    ebp,DWORD PTR [ebp+ebp*1-0x4a]
  41485e:	sahf   
  41485f:	(bad)
  414862:	jo     0x4148ca
  414864:	fimul  DWORD PTR [ebp+0xc]
  414867:	aas    
  414868:	pop    esp
  414869:	cmp    esp,DWORD PTR [ecx]
  41486b:	aad    0xb8
  41486d:	xchg   edi,edi
  41486f:	mov    edi,0x7d1153fe
  414874:	jne    0x414866
  414876:	add    eax,0xdb254aba
  41487b:	int    0x40
  41487d:	movntq QWORD PTR [ebx],mm5
  414880:	xchg   edx,eax
  414881:	retf   
  414882:	mov    ah,0x6d
  414884:	push   esp
  414885:	retf   
  414886:	mov    BYTE PTR [edi],0xb0
  414889:	stos   BYTE PTR es:[edi],al
  41488a:	jmp    0x6d2d:0x9f47e0a1
  414891:	add    al,0x2f
  414893:	ret    
  414894:	mov    eax,ss:0x979cfafb
  41489a:	iret   
  41489b:	dec    esi
  41489c:	(bad)  
  41489d:	jns    0x414914
  41489f:	dec    edx
  4148a0:	js     0x41489d
  4148a2:	jl     0x4148c7
  4148a4:	lds    eax,FWORD PTR [ebp-0x37]
  4148a7:	out    0x3,eax
  4148a9:	rol    BYTE PTR [ecx-0x4f],0xc8
  4148ad:	xchg   esi,eax
  4148ae:	leave  
  4148af:	dec    ebp
  4148b0:	sub    DWORD PTR [eax-0xc],edi
  4148b3:	je     0x414860
  4148b5:	pop    ds
  4148b6:	arpl   ax,bp
  4148b8:	sbb    DWORD PTR [ecx],ecx
  4148ba:	sbb    BYTE PTR [esi+ebx*4-0x52a25f7d],0x8
  4148c2:	or     DWORD PTR [edi+0x7],edi
  4148c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148c6:	pop    ebp
  4148c7:	sbb    eax,0xf01297f3
  4148cc:	and    ebp,DWORD PTR [eax+eiz*2+0x12e3b623]
  4148d3:	or     DWORD PTR [esi+eiz*2],edi
  4148d6:	call   FWORD PTR [ecx-0x7e24bbe2]
  4148dc:	jb     0x41487d
  4148de:	and    BYTE PTR [ecx+0x1c53959c],cl
  4148e4:	scas   eax,DWORD PTR es:[edi]
  4148e5:	in     al,0x1a
  4148e7:	mov    esi,es
  4148e9:	rol    dh,1
  4148eb:	sahf   
  4148ec:	mov    dl,0x30
  4148ee:	xor    DWORD PTR [edx],eax
  4148f0:	ret    0xbf11
  4148f3:	cmp    eax,0x25ba96af
  4148f8:	xor    ebx,DWORD PTR ss:[ebx-0x7d]
  4148fc:	les    ebp,FWORD PTR [eax-0x4]
  4148ff:	mov    ds,ebp
  414901:	add    al,0x33
  414903:	pop    ds
  414904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414905:	push   edi
  414906:	push   ss
  414907:	mov    ds:0x23a96c8f,al
  41490c:	fwait
  41490d:	mov    bl,0x31
  41490f:	and    DWORD PTR [edi+0x1d],edi
  414912:	stos   BYTE PTR es:[edi],al
  414913:	mov    edx,0xadb9eebe
  414918:	fstp   TBYTE PTR [ebx]
  41491a:	call   DWORD PTR [ebp+eax*2+0x5a]
  41491e:	mov    dl,0xb
  414920:	jno    0x4148d9
  414922:	das    
  414923:	add    al,0x71
  414925:	jns    0x41490d
  414927:	cli    
  414928:	mov    ds:0x836beffa,eax
  41492d:	enter  0xd02d,0x28
  414931:	sar    DWORD PTR [edx+ebx*1+0x6830cfdc],1
  414938:	std    
  414939:	(bad)  
  41493a:	push   ss
  41493b:	mov    dh,0x35
  41493d:	test   BYTE PTR [esp+ebp*2+0x47],0xb4
  414942:	xor    dl,BYTE PTR ds:0x76d8ad9d
  414948:	add    bh,BYTE PTR [ecx-0x71]
  41494b:	or     bl,0x0
  41494e:	fs das 
  414950:	push   esp
  414951:	jmp    0x4b4f3635
  414956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414957:	fdiv   QWORD PTR [ecx-0x4550b45b]
  41495d:	in     al,0xe3
  41495f:	push   ss
  414960:	adc    BYTE PTR [edi+0x29],bl
  414963:	cli    
  414964:	add    BYTE PTR [ecx+0x39],dh
  414967:	rcl    DWORD PTR [edi-0x6db5c267],0xef
  41496e:	add    DWORD PTR [ebp+0x59],edx
  414971:	lds    eax,FWORD PTR [ebp-0x5af97c9a]
  414977:	fsubr  QWORD PTR [ebp+ebp*8+0x7a]
  41497b:	fiadd  DWORD PTR [edx+ecx*8-0x31]
  41497f:	aaa    
  414980:	out    0xe9,al
  414982:	js     0x4149f1
  414984:	dec    edx
  414985:	ins    DWORD PTR es:[edi],dx
  414986:	mov    ecx,0xb6998d15
  41498b:	xchg   esp,eax
  41498c:	js     0x414a0a
  41498e:	jb     0x414936
  414990:	inc    ecx
  414991:	mov    ch,0x22
  414993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414994:	fsub   QWORD PTR [ebx+edx*4-0x42]
  414999:	mov    al,0xc2
  41499b:	daa    
  41499c:	lahf   
  41499d:	aaa    
  41499e:	mov    ebx,0x6a9eba8c
  4149a3:	cmp    eax,0x13ae9b01
  4149a8:	mov    eax,ds:0x67e96bbc
  4149ad:	sbb    di,ax
  4149b0:	mov    ebx,0x40f9745f
  4149b5:	pop    ss
  4149b6:	popa   
  4149b7:	push   0xe12a601b
  4149bc:	push   edi
  4149bd:	adc    edi,ecx
  4149bf:	mov    esi,0xae3da249
  4149c4:	mov    cl,0x76
  4149c6:	xchg   DWORD PTR [ebx],edi
  4149c8:	or     eax,0xced2a5ac
  4149cd:	sbb    BYTE PTR [ecx+0x6d30c52b],cl
  4149d3:	push   ebx
  4149d4:	dec    ebp
  4149d5:	dec    esp
  4149d6:	fldpi  
  4149d8:	hlt    
  4149d9:	adc    cl,ah
  4149db:	dec    edi
  4149dc:	nop
  4149dd:	pop    edx
  4149de:	leave  
  4149df:	call   0x9f16f2b2
  4149e4:	adc    al,0x40
  4149e6:	imul   esi,DWORD PTR [eax-0x2a931126],0xffffff9b
  4149ed:	push   ss
  4149ee:	mov    esp,0xd5694da
  4149f3:	sub    BYTE PTR [ebp-0x6cf66918],bh
  4149f9:	xor    edi,DWORD PTR [esp+eiz*2+0x0]
  4149fd:	idiv   DWORD PTR [edx]
  4149ff:	push   ds
  414a00:	sbb    ecx,DWORD PTR [esi+0x23f7b979]
  414a06:	mov    edi,0xf53d30ab
  414a0b:	mov    ds:0xa874e2de,al
  414a10:	sub    ebp,ebp
  414a12:	pop    ss
  414a13:	sar    al,1
  414a15:	add    dl,BYTE PTR [ebx]
  414a17:	cdq    
  414a18:	rcl    eax,cl
  414a1a:	mov    al,0xff
  414a1c:	and    al,0x9a
  414a1e:	cmp    eax,0xac98bfe1
  414a23:	sbb    BYTE PTR [esi-0x7f3da290],ah
  414a29:	and    al,0x7a
  414a2b:	mov    DWORD PTR [eax-0x2964c9bb],ebx
  414a31:	or     DWORD PTR [eax-0x80],ecx
  414a34:	call   0x4334:0x41b679d5
  414a3b:	pop    esp
  414a3c:	pop    ss
  414a3d:	or     eax,0x5de3c950
  414a42:	adc    DWORD PTR [edx+0x3f],esp
  414a45:	leave  
  414a46:	push   es
  414a47:	jbe    0x414a77
  414a49:	cmp    DWORD PTR [edi-0x4545c6fd],eax
  414a4f:	sbb    BYTE PTR [edx-0x1d],bl
  414a52:	adc    edx,esi
  414a54:	adc    al,bl
  414a56:	jae    0x414a90
  414a58:	inc    ebp
  414a59:	lock jo 0x414a15
  414a5c:	and    ebp,ecx
  414a5e:	jge    0x4149e5
  414a60:	scas   eax,DWORD PTR es:[edi]
  414a61:	in     al,dx
  414a62:	in     al,dx
  414a63:	pop    edi
  414a64:	sbb    ebp,DWORD PTR [esi+0x56]
  414a67:	dec    eax
  414a68:	adc    edi,DWORD PTR [ebx]
  414a6a:	and    eax,0xe0a46b8b
  414a6f:	inc    esp
  414a70:	mov    eax,esi
  414a72:	das    
  414a73:	sar    DWORD PTR [edi-0x29124a34],cl
  414a79:	ja     0x414ac6
  414a7b:	mov    ebx,0x3e66079d
  414a80:	aaa    
  414a81:	push   cs
  414a82:	ffreep st(7)
  414a84:	sbb    BYTE PTR [eax-0x77],dl
  414a87:	dec    ebp
  414a88:	mov    ah,0x8b
  414a8a:	dec    ebp
  414a8b:	or     BYTE PTR [edx-0x241fcdf],bh
  414a91:	sub    edx,ecx
  414a93:	add    edx,DWORD PTR [ebp-0x48]
  414a96:	mov    DWORD PTR [ebp-0x48],edx
  414a99:	mov    ecx,DWORD PTR [ebp+0x8]
  414a9c:	mov    edx,DWORD PTR [ebp-0x44]
  414a9f:	add    ecx,edi
  414aa1:	xor    ecx,edx
  414aa3:	mov    DWORD PTR [ebp-0x44],ecx
  414aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  414aa9:	xor    ecx,eax
  414aab:	add    ecx,esi
  414aad:	jne    0x4126b9
  414ab3:	mov    ecx,DWORD PTR [ebp-0x8]
  414ab6:	xor    ecx,eax
  414ab8:	mov    eax,DWORD PTR [ebp+0x10]
  414abb:	add    ecx,esi
  414abd:	mov    DWORD PTR [eax],ecx
  414abf:	pop    edi
  414ac0:	pop    esi
  414ac1:	pop    ebx
  414ac2:	leave  
  414ac3:	ret    0xc
  414ac6:	push   ebp
  414ac7:	mov    ebp,esp
  414ac9:	sub    esp,0x78
  414acc:	mov    eax,ds:0x42a069
  414ad1:	xor    ecx,ecx
  414ad3:	xor    ecx,DWORD PTR ds:0x42a06d
  414ad9:	sub    eax,ecx
  414adb:	add    eax,DWORD PTR [eax+ecx*1]
  414ade:	push   esi
  414adf:	adc    DWORD PTR ds:0x428e29,ecx
  414ae5:	push   edi
  414ae6:	and    edi,0x4523
  414aec:	mov    eax,ds:0x428365
  414af1:	mov    DWORD PTR [ebp-0x24],eax
  414af4:	add    esi,DWORD PTR ds:0x428ed1
  414afa:	mov    eax,ds:0x428485
  414aff:	add    DWORD PTR ds:0x428e45,0x631e
  414b09:	mov    DWORD PTR [ebp-0x30],eax
  414b0c:	sub    esi,esi
  414b0e:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  414b15:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  414b1c:	xor    eax,ecx
  414b1e:	mov    eax,DWORD PTR [ebp-0x10]
  414b21:	or     DWORD PTR ds:0x428e35,0x297e
  414b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  414b2e:	sub    eax,ecx
  414b30:	mov    DWORD PTR ds:0x428ea1,0x15
  414b3a:	cmp    DWORD PTR ds:0x428ea1,0x0
  414b41:	je     0x414b99
  414b47:	cmp    DWORD PTR ds:0x428ea1,0x5
  414b4e:	jb     0x414b99
  414b54:	jmp    0x414b6b
  414b59:	push   0x4280ea
  414b5e:	push   0x1
  414b60:	push   0x6e8b
  414b65:	call   DWORD PTR ds:0x42ca60
  414b6b:	cmp    DWORD PTR ds:0x428ea1,0x6
  414b72:	jne    0x414b87
  414b78:	xor    edi,edi
  414b7a:	or     edi,DWORD PTR ds:0x428ea1
  414b80:	dec    edi
  414b81:	mov    DWORD PTR ds:0x428ea1,edi
  414b87:	mov    edi,DWORD PTR ds:0x428ea1
  414b8d:	dec    edi
  414b8e:	mov    DWORD PTR ds:0x428ea1,edi
  414b94:	jmp    0x414b3a
  414b99:	mov    DWORD PTR [ebp-0x10],eax
  414b9c:	sub    DWORD PTR ds:0x428e75,0x4181
  414ba6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  414bad:	mov    eax,DWORD PTR [ebp-0x18]
  414bb0:	neg    edi
  414bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  414bb5:	sub    eax,ecx
  414bb7:	mov    DWORD PTR [ebp-0x18],eax
  414bba:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  414bc1:	add    DWORD PTR ds:0x428e31,0x596
  414bcb:	mov    eax,DWORD PTR [ebp-0xc]
  414bce:	adc    DWORD PTR ds:0x428e25,ebx
  414bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  414bd7:	add    DWORD PTR ds:0x428e69,ecx
  414bdd:	sub    eax,ecx
  414bdf:	add    edi,0x58c9
  414be5:	mov    DWORD PTR [ebp-0xc],eax
  414be8:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  414bef:	adc    ecx,0x6a40
  414bf5:	mov    eax,DWORD PTR [ebp-0x1c]
  414bf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  414bfb:	adc    DWORD PTR ds:0x428ea5,ecx
  414c01:	sub    eax,ecx
  414c03:	xor    DWORD PTR ds:0x428e8d,edi
  414c09:	mov    DWORD PTR [ebp-0x1c],eax
  414c0c:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  414c13:	mov    eax,DWORD PTR [ebp-0x20]
  414c16:	neg    DWORD PTR ds:0x428ea9
  414c1c:	mov    ecx,DWORD PTR [ebp-0x20]
  414c1f:	sub    eax,ecx
  414c21:	xor    esi,esi
  414c23:	xor    esi,DWORD PTR ds:0x4292e5
  414c29:	xor    edi,edi
  414c2b:	xor    edi,DWORD PTR ds:0x429be5
  414c31:	sub    esi,edi
  414c33:	or     esi,DWORD PTR [esi+edi*1]
  414c36:	mov    DWORD PTR [ebp-0x20],eax
  414c39:	or     eax,edi
  414c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  414c3e:	and    DWORD PTR ds:0x428e25,0x0
  414c48:	jmp    0x414c5a
  414c4d:	mov    esi,DWORD PTR ds:0x428e25
  414c53:	inc    esi
  414c54:	mov    DWORD PTR ds:0x428e25,esi
  414c5a:	cmp    DWORD PTR ds:0x428e25,0x1e
  414c61:	jae    0x414c93
  414c67:	cmp    DWORD PTR ds:0x428e25,0x2c
  414c6e:	jb     0x414c93
  414c74:	jmp    0x414c8e
  414c79:	push   0x42819a
  414c7e:	push   0x0
  414c80:	push   DWORD PTR [ebp-0x14]
  414c83:	push   0x541c
  414c88:	call   DWORD PTR ds:0x42ca64
  414c8e:	jmp    0x414c4d
  414c93:	mov    ecx,DWORD PTR [ebp-0x20]
  414c96:	mov    esi,0x75108b1
  414c9b:	xor    eax,esi
  414c9d:	adc    DWORD PTR ds:0x428ec9,0x2d36
  414ca7:	mov    edi,0x3272f8
  414cac:	and    DWORD PTR ds:0x428e91,0x428e49
  414cb6:	add    eax,edi
  414cb8:	or     eax,ecx
  414cba:	or     DWORD PTR ds:0x428e2d,0x148
  414cc4:	mov    DWORD PTR [ebp-0x20],eax
  414cc7:	mov    DWORD PTR ds:0x428e99,0x13
  414cd1:	cmp    DWORD PTR ds:0x428e99,0x0
  414cd8:	je     0x414d27
  414cde:	cmp    DWORD PTR ds:0x428e99,0x8
  414ce5:	jle    0x414d27
  414ceb:	jmp    0x414cf9
  414cf0:	push   DWORD PTR [ebp-0x20]
  414cf3:	call   DWORD PTR ds:0x42ca38
  414cf9:	cmp    DWORD PTR ds:0x428e99,0x9
  414d00:	jne    0x414d15
  414d06:	xor    ecx,ecx
  414d08:	add    ecx,DWORD PTR ds:0x428e99
  414d0e:	dec    ecx
  414d0f:	mov    DWORD PTR ds:0x428e99,ecx
  414d15:	mov    ecx,DWORD PTR ds:0x428e99
  414d1b:	dec    ecx
  414d1c:	mov    DWORD PTR ds:0x428e99,ecx
  414d22:	jmp    0x414cd1
  414d27:	mov    eax,DWORD PTR [ebp-0x4]
  414d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  414d2d:	sub    eax,ecx
  414d2f:	mov    DWORD PTR [ebp-0x4],eax
  414d32:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  414d39:	mov    eax,DWORD PTR [ebp-0xc]
  414d3c:	xor    eax,esi
  414d3e:	add    eax,edi
  414d40:	push   eax
  414d41:	mov    eax,DWORD PTR [ebp-0x10]
  414d44:	xor    eax,esi
  414d46:	add    eax,edi
  414d48:	push   eax
  414d49:	mov    eax,DWORD PTR [ebp-0x4]
  414d4c:	xor    eax,esi
  414d4e:	add    eax,0x3272fc
  414d53:	push   eax
  414d54:	lea    eax,[ebp-0x78]
  414d57:	push   eax
  414d58:	push   DWORD PTR [ebp-0x2c]
  414d5b:	push   DWORD PTR [ebp-0x28]
  414d5e:	call   0x40f6a0
  414d63:	test   eax,eax
  414d65:	je     0x414d93
  414d6b:	lea    eax,[ebp-0x78]
  414d6e:	push   eax
  414d6f:	mov    eax,DWORD PTR [ebp-0x28]
  414d72:	xor    eax,esi
  414d74:	add    eax,edi
  414d76:	push   eax
  414d77:	mov    eax,DWORD PTR [ebp-0x24]
  414d7a:	add    eax,0xaa
  414d7f:	push   eax
  414d80:	mov    eax,DWORD PTR [ebp-0x24]
  414d83:	mov    eax,DWORD PTR [eax+0x198]
  414d89:	push   DWORD PTR [eax]
  414d8b:	call   0x40854d
  414d90:	mov    DWORD PTR [ebp-0x14],eax
  414d93:	mov    ecx,DWORD PTR ds:0x42845d
  414d99:	lea    eax,[ebp+0x4]
  414d9c:	mov    DWORD PTR [ecx*4+0x428455],eax
  414da3:	inc    DWORD PTR ds:0x42845d
  414da9:	mov    eax,DWORD PTR [ebp-0x14]
  414dac:	test   eax,eax
  414dae:	je     0x41717d
  414db4:	lea    eax,[ebp-0x8]
  414db7:	mov    DWORD PTR [ebp-0x34],eax
  414dba:	mov    eax,DWORD PTR [ebp-0x30]
  414dbd:	mov    DWORD PTR [ebp-0x8],eax
  414dc0:	mov    eax,DWORD PTR [ebp-0x8]
  414dc3:	mov    ecx,DWORD PTR [ebp-0x14]
  414dc6:	jmp    0x417123
  414dcb:	mov    cl,0x3d
  414dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dce:	aas    
  414dcf:	jns    0x414e38
  414dd1:	jns    0x414e40
  414dd3:	pop    edx
  414dd4:	popw   ds
  414dd6:	inc    ebp
  414dd7:	adc    DWORD PTR [ecx-0x16],ecx
  414dda:	mov    ebp,0x7b7c956a
  414ddf:	mov    ebx,0xd27b7b9e
  414de4:	push   ecx
  414de5:	mov    al,ds:0x8449a43
  414dea:	cld    
  414deb:	mov    esp,0x4855113b
  414df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df1:	jmp    0x414df4
  414df3:	mov    bl,0xc2
  414df5:	mov    eax,0xa7ab1de5
  414dfa:	or     esp,DWORD PTR [edx+eax*8]
  414dfd:	mov    eax,0x40926d8e
  414e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e03:	fist   DWORD PTR [ebx-0x51e735ab]
  414e09:	mov    ecx,0x5c2bba16
  414e0e:	dec    edx
  414e0f:	les    esp,FWORD PTR [ebp+0x56]
  414e12:	loope  0x414e32
  414e14:	dec    ecx
  414e15:	mov    eax,ds:0xafc3a8a2
  414e1a:	sub    eax,0xbdf2d9ed
  414e1f:	sbb    al,0x48
  414e21:	push   esi
  414e22:	or     eax,0x65d9cdfd
  414e27:	nop
  414e28:	sbb    eax,0x84f16cd8
  414e2d:	and    eax,0xbd09ba22
  414e33:	cli    
  414e34:	sub    BYTE PTR [ecx+esi*8+0x13314441],cl
  414e3b:	add    al,0x2c
  414e3d:	fcmovnbe st,st(5)
  414e3f:	or     ch,BYTE PTR [edx-0x5d]
  414e42:	pop    eax
  414e43:	popa   
  414e44:	shr    BYTE PTR [eax-0x29],0x92
  414e48:	sahf   
  414e49:	fsubr  DWORD PTR [esi]
  414e4b:	push   edi
  414e4c:	das    
  414e4d:	inc    ecx
  414e4e:	dec    edx
  414e4f:	inc    ebp
  414e50:	jmp    0x414e35
  414e52:	lods   al,BYTE PTR ds:[esi]
  414e53:	adc    eax,0xa0b00f71
  414e58:	pop    ebp
  414e59:	dec    ebp
  414e5a:	lahf   
  414e5b:	aam    0x46
  414e5d:	cwde   
  414e5e:	out    dx,eax
  414e5f:	loopne 0x414e8b
  414e61:	sub    DWORD PTR [ecx+0x7c],eax
  414e64:	shl    DWORD PTR [ebx-0x64],1
  414e67:	dec    ebx
  414e68:	gs or  cl,ch
  414e6b:	nop
  414e6c:	pop    edx
  414e6d:	xor    DWORD PTR [esi-0x1e03025],0xffffffe0
  414e74:	inc    ebp
  414e75:	(bad)  
  414e76:	fnstcw WORD PTR [ecx]
  414e78:	sahf   
  414e79:	mov    eax,ds
  414e7b:	mov    BYTE PTR [ebx],al
  414e7d:	jmp    0x696de191
  414e82:	or     BYTE PTR [eax-0x7b],cl
  414e85:	pushf  
  414e86:	hlt    
  414e87:	xchg   esi,eax
  414e88:	mov    edi,ebp
  414e8a:	push   ds
  414e8b:	pop    edx
  414e8c:	inc    edx
  414e8d:	stos   DWORD PTR es:[edi],eax
  414e8e:	adc    al,dl
  414e90:	ret    0x3f48
  414e93:	jmp    0x4347:0xd12ce81
  414e9a:	sbb    eax,0xccba5fb
  414e9f:	inc    esp
  414ea0:	pop    edi
  414ea1:	into   
  414ea2:	sub    esi,DWORD PTR [ebx]
  414ea4:	jecxz  0x414e2c
  414ea6:	jmp    0x414f09
  414ea8:	fistp  DWORD PTR [edx-0x6d]
  414eab:	es (bad) 
  414ead:	out    dx,al
  414eae:	les    ebx,FWORD PTR [eax]
  414eb0:	(bad)  
  414eb1:	mov    esp,0x4547b288
  414eb6:	(bad)  
  414eb7:	or     BYTE PTR [esi-0x46],dh
  414eba:	fsub   st,st(0)
  414ebc:	inc    edx
  414ebd:	pop    ebp
  414ebe:	jl     0x414e9f
  414ec0:	psubsb mm0,QWORD PTR [edx]
  414ec3:	das    
  414ec4:	jge    0x414eac
  414ec6:	sbb    ebx,edx
  414ec8:	enter  0x1578,0xe7
  414ecc:	fstp   QWORD PTR es:[edx+0x34]
  414ed0:	ins    DWORD PTR es:[edi],dx
  414ed1:	jb     0x414f20
  414ed3:	pop    es
  414ed4:	iret   
  414ed5:	xchg   esi,eax
  414ed6:	ret    0xf042
  414ed9:	xchg   edi,eax
  414eda:	leave  
  414edb:	cld    
  414edc:	mov    bh,0xfe
  414ede:	mov    dh,0xc4
  414ee0:	push   es
  414ee1:	dec    esi
  414ee2:	leave  
  414ee3:	adc    al,0xaf
  414ee5:	push   es
  414ee6:	xchg   ecx,eax
  414ee7:	stos   BYTE PTR es:[edi],al
  414ee8:	push   esp
  414ee9:	add    DWORD PTR [edi-0x6ac61b1a],ebp
  414eef:	jmp    0x1d51af9
  414ef4:	fmul   st(5),st
  414ef6:	pop    ebp
  414ef7:	int    0xd3
  414ef9:	or     bl,BYTE PTR [ebp-0x4dca7aea]
  414eff:	mov    ds:0x7b86c1cc,eax
  414f04:	fisub  WORD PTR [edx-0x1e34f7d3]
  414f0a:	call   0xc56acab3
  414f0f:	retf   
  414f10:	mov    edx,0x40e7b7ea
  414f15:	inc    edx
  414f16:	nop
  414f17:	sbb    dh,BYTE PTR [edx]
  414f19:	dec    ecx
  414f1a:	out    dx,al
  414f1b:	xchg   edx,eax
  414f1c:	jecxz  0x414f50
  414f1e:	cmp    al,0x22
  414f20:	and    ch,BYTE PTR [ebx+0x56555279]
  414f26:	mov    ds:0xc1f887d2,eax
  414f2b:	retf   
  414f2c:	mov    WORD PTR fs:[esi-0x59],ss
  414f30:	lock adc eax,0x3a93a079
  414f36:	sub    al,0xf4
  414f38:	sahf   
  414f39:	xchg   esi,eax
  414f3a:	add    eax,0x4be6f1a2
  414f3f:	xchg   esi,eax
  414f40:	daa    
  414f41:	shl    al,1
  414f43:	(bad)  
  414f44:	sti    
  414f45:	les    edx,FWORD PTR [ebx-0x743135b6]
  414f4b:	dec    ebx
  414f4c:	imul   edi,DWORD PTR [esi-0x6d2dd772],0xfd1d2d2b
  414f56:	pop    esi
  414f57:	push   ds
  414f58:	scas   eax,DWORD PTR es:[edi]
  414f59:	dec    esp
  414f5a:	and    ah,BYTE PTR [ebx+0x32]
  414f5d:	fwait
  414f5e:	pusha  
  414f5f:	fwait
  414f60:	out    0x51,eax
  414f62:	jae    0x414fbd
  414f64:	lea    eax,[esi]
  414f66:	jle    0x414f6d
  414f68:	sbb    al,BYTE PTR [ecx]
  414f6a:	cs scas eax,DWORD PTR es:[edi]
  414f6c:	cdq    
  414f6d:	xor    al,0xfb
  414f6f:	inc    eax
  414f70:	pop    ebx
  414f71:	and    BYTE PTR [eax+0x51],dl
  414f74:	stc    
  414f75:	int    0x3e
  414f77:	inc    ebx
  414f78:	popa   
  414f79:	mov    ch,0xab
  414f7b:	adc    bl,dl
  414f7d:	hlt    
  414f7e:	xor    DWORD PTR [edi],0x99965e73
  414f84:	retf   
  414f85:	add    ch,BYTE PTR [esi-0x6fc25807]
  414f8b:	mov    fs,WORD PTR [ebx-0x18]
  414f8e:	pop    eax
  414f8f:	and    cl,BYTE PTR [esi+0x7e]
  414f92:	ficomp WORD PTR [edx]
  414f94:	rol    DWORD PTR [ebp-0x4386419a],cl
  414f9a:	ins    BYTE PTR es:[edi],dx
  414f9b:	(bad)  
  414f9c:	adc    dh,BYTE PTR [edx+0x2a]
  414f9f:	pop    ebp
  414fa0:	dec    esi
  414fa1:	js     0x414f75
  414fa3:	mov    dh,0xac
  414fa5:	or     DWORD PTR [eax],esi
  414fa7:	int    0x9e
  414fa9:	rol    ah,1
  414fab:	mov    dh,0xc6
  414fad:	pushf  
  414fae:	stos   DWORD PTR es:[edi],eax
  414faf:	jne    0x414fb2
  414fb1:	lods   eax,DWORD PTR ds:[esi]
  414fb2:	test   DWORD PTR [esi],0x111c08c0
  414fb8:	inc    ebp
  414fb9:	or     ecx,edx
  414fbb:	add    BYTE PTR [ecx],0x87
  414fbe:	xchg   BYTE PTR es:[edi-0x4d8d8578],bl
  414fc5:	jg     0x414f49
  414fc7:	ror    BYTE PTR [edi+0x3e93f0f9],cl
  414fcd:	repnz mov dl,0xbd
  414fd0:	fcomi  st,st(0)
  414fd2:	iret   
  414fd3:	mov    ds:0xd0b3ecc,al
  414fd8:	jle    0x414faa
  414fda:	mov    esp,0xfc1d9265
  414fdf:	mov    bh,0x94
  414fe1:	pop    ebp
  414fe2:	fdivr  DWORD PTR [edx*4+0x71bc7fb5]
  414fe9:	or     DWORD PTR ds:0x2ec8388a,ecx
  414fef:	popf   
  414ff0:	addr16 dec esp
  414ff2:	mov    ebp,0xed181ff2
  414ff7:	outs   dx,BYTE PTR ds:[esi]
  414ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff9:	add    esi,DWORD PTR [edx+0x2f]
  414ffc:	pop    ss
  414ffd:	cli    
  414ffe:	add    ebx,DWORD PTR [ecx+0xc51caf3]
  415004:	push   ecx
  415005:	aaa    
  415006:	in     al,dx
  415007:	aaa    
  415008:	int3   
  415009:	idiv   BYTE PTR [ecx+0x32]
  41500c:	dec    edi
  41500d:	push   ebp
  41500e:	inc    ebp
  41500f:	adc    edx,DWORD PTR [ebx-0x3d884b9b]
  415015:	xchg   ecx,eax
  415016:	xchg   DWORD PTR [eax],edx
  415018:	inc    edx
  415019:	icebp  
  41501a:	repnz xchg ebx,eax
  41501c:	(bad)  
  41501d:	xchg   edx,eax
  41501e:	jae    0x415046
  415020:	dec    ebx
  415021:	jnp    0x415096
  415023:	cli    
  415024:	addr16 jae 0x4150a5
  415027:	mov    edx,edi
  415029:	out    dx,al
  41502a:	lahf   
  41502b:	xor    BYTE PTR [ecx+esi*8-0x33],ch
  41502f:	sbb    al,0xdb
  415031:	fucomp st(6)
  415033:	les    esi,FWORD PTR [eax-0xd5528c4]
  415039:	mov    edi,0xf28528f4
  41503e:	int    0xb8
  415040:	push   ebx
  415041:	ins    BYTE PTR es:[edi],dx
  415042:	scas   al,BYTE PTR es:[edi]
  415043:	stos   DWORD PTR es:[edi],eax
  415044:	mov    bl,BYTE PTR [edi]
  415046:	mov    cl,0x15
  415048:	xchg   ecx,eax
  415049:	adc    al,0x74
  41504b:	test   DWORD PTR [edx],0xeea40a46
  415051:	push   ecx
  415052:	mov    al,0xde
  415054:	dec    eax
  415055:	loop   0x414fe4
  415057:	xor    eax,0x2e52d590
  41505c:	push   ss
  41505d:	retf   
  41505e:	cmp    edi,DWORD PTR [esi-0x157bde0d]
  415064:	cmp    edx,DWORD PTR [esi]
  415066:	xchg   ecx,eax
  415067:	mov    al,ds:0x53f52ae0
  41506c:	mov    ?,WORD PTR [edi]
  41506e:	rcl    BYTE PTR [ebx-0x10e8a6ec],1
  415074:	jmp    0x414ffd
  415076:	ret    0xb486
  415079:	push   edi
  41507a:	js     0x4150bc
  41507c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41507d:	repz les ebp,FWORD PTR fs:[edi+0x28550b74]
  415085:	add    al,0x4e
  415087:	lods   eax,DWORD PTR ds:[esi]
  415088:	sub    al,0x63
  41508a:	inc    ebp
  41508b:	push   esp
  41508c:	aam    0xb1
  41508e:	frstor [eax-0x3827ff3a]
  415094:	stc    
  415095:	stos   BYTE PTR es:[edi],al
  415096:	loopne 0x4150f9
  415098:	xchg   BYTE PTR [ebp+0x64],dl
  41509b:	imul   BYTE PTR ds:0x9999a369
  4150a1:	(bad)  
  4150a2:	repnz lahf 
  4150a4:	jmp    0x41507e
  4150a6:	loopne 0x4150a7
  4150a8:	retf   0x5043
  4150ab:	dec    esi
  4150ac:	add    al,BYTE PTR [edx]
  4150ae:	push   es
  4150af:	in     al,dx
  4150b0:	ret    
  4150b1:	data16 or BYTE PTR [edi+ecx*2],bh
  4150b5:	mov    al,ds:0xf0e70f53
  4150ba:	sub    eax,0x56beb970
  4150bf:	(bad)  
  4150c0:	mov    dh,0x3
  4150c2:	cld    
  4150c3:	xchg   esi,eax
  4150c4:	mov    esi,ecx
  4150c6:	ss sbb dl,0xe4
  4150ca:	ins    DWORD PTR es:[edi],dx
  4150cb:	inc    edi
  4150cc:	xchg   esi,eax
  4150cd:	aas    
  4150ce:	call   0xd3e:0xe67f96d5
  4150d5:	push   cs
  4150d6:	dec    edi
  4150d7:	sar    BYTE PTR [edx],1
  4150d9:	mov    eax,ds:0xd9d25d20
  4150de:	lahf   
  4150df:	xchg   esi,eax
  4150e0:	int    0xeb
  4150e2:	xchg   edi,eax
  4150e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150e4:	xor    DWORD PTR [eax+0x623d44a3],ebp
  4150ea:	cmp    DWORD PTR [edi],esi
  4150ec:	lock pop ebx
  4150ee:	sub    DWORD PTR [ebx+esi*1],ebp
  4150f1:	cmp    DWORD PTR [ecx+0x8],esi
  4150f4:	lahf   
  4150f5:	mov    esp,0x6592dee3
  4150fa:	iret   
  4150fb:	stos   DWORD PTR es:[edi],eax
  4150fc:	sar    ecx,cl
  4150fe:	in     al,dx
  4150ff:	test   eax,0xcb548f6c
  415104:	ins    BYTE PTR es:[edi],dx
  415105:	sbb    DWORD PTR [edx+0x364cc6a2],edx
  41510b:	mov    gs,WORD PTR [eax-0x1f]
  41510e:	pop    es
  41510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415110:	mov    ebx,DWORD PTR [eax+0x4682347a]
  415116:	nop
  415117:	sub    eax,0xd7bf5708
  41511c:	cli    
  41511d:	fidivr WORD PTR [edi-0x85dabf8]
  415123:	jb     0x415181
  415125:	jbe    0x41510a
  415127:	push   es
  415128:	les    ecx,FWORD PTR [eax-0x7344c89e]
  41512e:	(bad)
  415131:	out    dx,al
  415132:	bound  esp,QWORD PTR [ebx]
  415134:	cmp    DWORD PTR [esp+eiz*4-0x42fd6b0],edi
  41513b:	xchg   ebp,eax
  41513c:	and    eax,0xe31d0d28
  415141:	or     esp,DWORD PTR [eax]
  415143:	dec    esp
  415144:	adc    BYTE PTR [ebx+edx*2-0x164696da],ch
  41514b:	ss in  eax,0xae
  41514e:	pop    ebx
  41514f:	sbb    ebp,ecx
  415151:	das    
  415152:	pop    esi
  415153:	push   eax
  415154:	das    
  415155:	cmove  eax,eax
  415158:	jne    0x4150df
  41515a:	xchg   esp,eax
  41515b:	xchg   DWORD PTR [ebx+ebx*8],esp
  41515e:	inc    edi
  41515f:	out    dx,al
  415160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415161:	inc    ecx
  415162:	stc    
  415163:	inc    eax
  415164:	shl    DWORD PTR [eax-0x38f48abf],cl
  41516a:	sti    
  41516b:	sbb    DWORD PTR [edi+0x5a],ebx
  41516e:	and    al,0x98
  415170:	shl    dh,cl
  415172:	lock out dx,al
  415174:	pop    edx
  415175:	adc    BYTE PTR [ebx+0x73a08cb],bh
  41517b:	jg     0x4151b5
  41517d:	pop    ebp
  41517e:	jmp    DWORD PTR [esp+edx*2-0x7b]
  415182:	mov    edx,0x6e3706e5
  415187:	aam    0x6b
  415189:	lods   al,BYTE PTR ds:[esi]
  41518a:	push   ebx
  41518b:	xchg   ecx,eax
  41518c:	and    ecx,DWORD PTR [edx]
  41518e:	sti    
  41518f:	xchg   ebp,eax
  415190:	adc    bh,BYTE PTR [edi]
  415192:	hlt    
  415193:	mov    al,0xe7
  415195:	mov    ecx,?
  415197:	(bad)  
  415198:	xchg   ecx,eax
  415199:	jb     0x41514c
  41519b:	aam    0x1e
  41519d:	int3   
  41519e:	inc    eax
  41519f:	les    eax,FWORD PTR [eax]
  4151a1:	inc    esi
  4151a2:	jbe    0x4151bd
  4151a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a5:	arpl   WORD PTR [edi],si
  4151a7:	sbb    DWORD PTR [esi-0x66],edx
  4151aa:	nop
  4151ab:	mov    ds:0xbb471ad8,al
  4151b0:	xor    eax,0xb7ea337b
  4151b5:	inc    edx
  4151b6:	outs   dx,DWORD PTR ds:[esi]
  4151b7:	and    ecx,DWORD PTR [edx+0x3a89da31]
  4151bd:	jbe    0x4151d4
  4151bf:	cmp    ebx,DWORD PTR cs:[eax+0x1]
  4151c3:	repz in al,dx
  4151c5:	ds dec esi
  4151c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151c8:	inc    edi
  4151c9:	jmp    0x35bcc7cd
  4151ce:	jecxz  0x415206
  4151d0:	xchg   DWORD PTR [eax-0x17],ecx
  4151d3:	or     esp,ebp
  4151d5:	add    eax,0x8d77a8b1
  4151da:	call   0x4ce70657
  4151df:	mov    bh,0x5
  4151e1:	bound  edi,QWORD PTR ds:0x788dac63
  4151e7:	mov    ds:0x616067aa,al
  4151ec:	test   BYTE PTR [ebp-0x7a],0x66
  4151f0:	xor    edx,DWORD PTR [eax+0x2a7a6a4f]
  4151f6:	mov    bl,0x3f
  4151f8:	and    BYTE PTR [ebx],0x58
  4151fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fc:	fsubr  DWORD PTR ss:0x3d23747d
  415203:	stc    
  415204:	dec    edx
  415205:	mov    ds:0x85a8b0f7,eax
  41520a:	mov    ebx,eax
  41520c:	leave  
  41520d:	dec    edx
  41520e:	aad    0x80
  415210:	int3   
  415211:	dec    eax
  415212:	inc    edi
  415213:	push   ebx
  415214:	mov    esi,0x8cb615fe
  415219:	xlat   BYTE PTR ds:[ebx]
  41521a:	jg     0x415229
  41521c:	cdq    
  41521d:	in     eax,0x10
  41521f:	fsubr  st(0),st
  415221:	mov    DWORD PTR [ebp+0x19ff1f62],esi
  415227:	cmp    edx,esi
  415229:	lds    ebp,FWORD PTR [esi-0xaa19d7]
  41522f:	retf   
  415230:	inc    ecx
  415231:	inc    esp
  415232:	cld    
  415233:	xor    esi,ebx
  415235:	dec    edx
  415236:	push   ebp
  415237:	and    DWORD PTR ds:0xc2680527,esi
  41523d:	jmp    0x3c7d:0xa9fc41f8
  415244:	sub    BYTE PTR [ecx],cl
  415246:	aaa    
  415247:	enter  0x5d80,0xbe
  41524b:	addr16 pop es
  41524d:	jl     0x4151df
  41524f:	push   es
  415250:	cld    
  415251:	jle    0x415230
  415253:	or     al,0xd
  415255:	push   ss
  415256:	jmp    0xbf11aa46
  41525b:	pusha  
  41525c:	test   eax,0x62bfa838
  415261:	fcom   QWORD PTR [esp+edx*2]
  415264:	das    
  415265:	jb     0x4152bc
  415267:	retf   0xbd6e
  41526a:	pop    ebp
  41526b:	aas    
  41526c:	inc    eax
  41526d:	dec    esi
  41526e:	push   ds
  41526f:	jge    0x41524b
  415271:	outs   dx,BYTE PTR ds:[esi]
  415272:	call   0xdb73073e
  415277:	stc    
  415278:	mov    eax,0xa0a5f05d
  41527d:	push   0xffffffde
  41527f:	sar    BYTE PTR [esi-0x72],0xb4
  415283:	cs or  esp,edx
  415286:	retf   0xfd64
  415289:	jmp    0x9ac5:0xaf6f09da
  415290:	jo     0x415278
  415292:	mov    ecx,0xe4b35334
  415297:	adc    DWORD PTR [esi-0x4a],esi
  41529a:	mov    dh,0x50
  41529c:	dec    ebp
  41529d:	sbb    BYTE PTR [ecx+0x75],bl
  4152a0:	inc    edi
  4152a1:	jmp    0x4bf:0xed2ad5fc
  4152a8:	frstor [eax+0x73]
  4152ab:	leave  
  4152ac:	popf   
  4152ad:	pushf  
  4152ae:	fimul  DWORD PTR [ecx+esi*4+0x19]
  4152b2:	lods   eax,DWORD PTR ds:[esi]
  4152b3:	aam    0x7f
  4152b5:	bound  edi,QWORD PTR [edx-0x72]
  4152b8:	xlat   BYTE PTR ds:[ebx]
  4152b9:	ror    edx,cl
  4152bb:	inc    ebx
  4152bc:	push   ss
  4152bd:	pop    eax
  4152be:	int3   
  4152bf:	jg     0x415281
  4152c1:	(bad)
  4152c4:	sub    eax,0x7d7cd4c1
  4152c9:	fsub   DWORD PTR [esp+eiz*8]
  4152cc:	ret    0x3409
  4152cf:	out    0xa,al
  4152d1:	xor    dh,BYTE PTR [ebp+0x28eaebea]
  4152d7:	push   cs
  4152d8:	dec    esi
  4152d9:	pop    ds
  4152da:	push   edi
  4152db:	pop    edx
  4152dc:	mov    ds:0xeeb554ca,eax
  4152e1:	mov    bh,0x1f
  4152e3:	(bad)  
  4152e4:	push   ebp
  4152e5:	ja     0x4152cf
  4152e7:	out    dx,eax
  4152e8:	add    eax,DWORD PTR [ecx+edi*1-0x64]
  4152ec:	in     al,0xec
  4152ee:	pop    esp
  4152ef:	fcmovnbe st,st(3)
  4152f1:	test   DWORD PTR [edi],ecx
  4152f3:	retf   0x45e
  4152f6:	mov    dh,0x4c
  4152f8:	pop    ebx
  4152f9:	outs   dx,DWORD PTR ds:[esi]
  4152fa:	cs dec esp
  4152fc:	sbb    BYTE PTR [esi],bl
  4152fe:	jle    0x41529a
  415300:	jbe    0x41530d
  415302:	dec    eax
  415303:	push   0x159b4c9c
  415308:	dec    edi
  415309:	xor    al,0x83
  41530b:	into   
  41530c:	je     0x4152bc
  41530e:	and    BYTE PTR [eax+0x19be718f],bh
  415314:	add    DWORD PTR [eax+0x29],edi
  415317:	sbb    eax,0x5ca4f33f
  41531c:	ret    
  41531d:	out    dx,eax
  41531e:	mov    DWORD PTR [ebx+0x5a287c3c],ecx
  415324:	scas   eax,DWORD PTR es:[edi]
  415325:	ret    
  415326:	adc    DWORD PTR [esi+0x53],0x80075e96
  41532d:	arpl   WORD PTR [eax],di
  41532f:	cmp    eax,0x418ff1db
  415334:	fwait
  415335:	inc    edx
  415336:	imul   bh
  415338:	inc    esi
  415339:	push   ebp
  41533a:	dec    edx
  41533b:	scas   eax,DWORD PTR es:[edi]
  41533c:	lods   eax,DWORD PTR ds:[esi]
  41533d:	sub    al,0x46
  41533f:	daa    
  415340:	and    dl,al
  415342:	add    ebp,DWORD PTR [esi]
  415344:	out    dx,eax
  415345:	mov    ebx,0xd5d52633
  41534a:	xchg   ebx,eax
  41534b:	popf   
  41534c:	pop    ecx
  41534d:	inc    eax
  41534e:	cdq    
  41534f:	sbb    eax,0xfa732483
  415354:	inc    ebp
  415355:	aam    0x6d
  415357:	mov    cl,0x40
  415359:	adc    eax,0xa3f33d43
  41535e:	ds pop eax
  415360:	ret    
  415361:	pop    ecx
  415362:	inc    edx
  415363:	shl    BYTE PTR [edi],0x81
  415366:	inc    ebp
  415367:	fild   DWORD PTR [ecx]
  415369:	inc    ebp
  41536a:	jp     0x415301
  41536c:	into   
  41536d:	pop    ebp
  41536e:	sbb    eax,0xc0a9ea05
  415373:	dec    edi
  415374:	lds    esp,FWORD PTR [edi+0x21]
  415377:	inc    ecx
  415378:	push   esp
  415379:	push   eax
  41537a:	jnp    0x41537e
  41537c:	js     0x415387
  41537e:	xchg   esp,eax
  41537f:	(bad)  
  415380:	scas   al,BYTE PTR es:[edi]
  415381:	pop    ebp
  415382:	(bad)  
  415383:	dec    eax
  415384:	or     eax,0xfc99130d
  415389:	outs   dx,BYTE PTR ds:[esi]
  41538a:	cli    
  41538b:	sbb    ch,BYTE PTR [edi+0x3d62b287]
  415391:	fsubr  st,st(1)
  415393:	add    DWORD PTR ds:0xcb25b01d,ebx
  415399:	add    DWORD PTR [ebx],esp
  41539b:	add    al,0x28
  41539d:	(bad)  
  41539e:	mov    ecx,0x74507ade
  4153a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153a4:	jmp    0x415353
  4153a6:	push   ebp
  4153a7:	cmp    BYTE PTR [ebp-0x40],al
  4153aa:	aaa    
  4153ab:	jo     0x4153bb
  4153ad:	pusha  
  4153ae:	and    DWORD PTR [esi+0x3af950e0],0x59
  4153b5:	inc    eax
  4153b6:	int    0x9d
  4153b8:	aad    0xd
  4153ba:	jne    0x41540c
  4153bc:	fnstenv [ecx+0x889f3e6]
  4153c2:	adc    eax,DWORD PTR [ebp-0x50]
  4153c5:	mov    ah,0x43
  4153c7:	in     eax,dx
  4153c8:	(bad)  
  4153c9:	jmp    0x3f724f1b
  4153ce:	add    DWORD PTR [edi+0x5c],0xb6940e15
  4153d5:	add    al,0x27
  4153d7:	leave  
  4153d8:	lds    esp,FWORD PTR [di]
  4153db:	out    dx,al
  4153dc:	xchg   ecx,eax
  4153dd:	cs (bad) 
  4153df:	cli    
  4153e0:	jl     0x415382
  4153e2:	std    
  4153e3:	retf   
  4153e4:	mov    eax,0xa75e66e2
  4153e9:	sbb    esp,DWORD PTR [ebx+0x76]
  4153ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ed:	lods   al,BYTE PTR ds:[esi]
  4153ee:	test   cl,ch
  4153f0:	(bad)  
  4153f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153f3:	xor    ebp,ebp
  4153f5:	jmp    0x7e0e0868
  4153fa:	xor    eax,0xf661d748
  4153ff:	or     al,BYTE PTR [ebx-0x32]
  415402:	ror    DWORD PTR [ebx],1
  415404:	popa   
  415405:	pop    ebp
  415406:	mov    dl,0xd
  415408:	mov    dl,BYTE PTR ds:0x385c2196
  41540e:	fsubr  DWORD PTR [esi-0x16]
  415411:	js     0x415430
  415413:	xchg   ecx,eax
  415414:	repnz mov ecx,0xc04b3c6d
  41541a:	popa   
  41541b:	jl     0x4153fe
  41541d:	int    0xfb
  41541f:	sub    bl,BYTE PTR [eax]
  415421:	xor    dl,BYTE PTR [edx-0x58]
  415424:	mov    edi,0x3de04d
  415429:	push   cs
  41542a:	neg    ah
  41542c:	dec    ecx
  41542d:	out    0xaa,al
  41542f:	sub    eax,0xe047d445
  415434:	loope  0x4153e9
  415436:	retf   
  415437:	mov    bh,0xf1
  415439:	and    dh,BYTE PTR [edi+edx*4]
  41543c:	imul   ebp,eax,0x4d9fa49c
  415442:	imul   edx,DWORD PTR [esi],0x4db1f91f
  415448:	adc    eax,0xd81d01f3
  41544d:	(bad)  
  41544e:	inc    edi
  41544f:	addr16 cdq 
  415451:	fld    TBYTE PTR [esi-0x6847c0fd]
  415457:	in     eax,0x32
  415459:	and    BYTE PTR [ecx+0x420d413f],bl
  41545f:	dec    edi
  415460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415461:	jo     0x415414
  415463:	or     DWORD PTR [edi],0x61
  415466:	rcr    DWORD PTR ds:0xb58f0e31,0xc8
  41546d:	adc    DWORD PTR [ecx+0x2a],esp
  415470:	test   BYTE PTR [ebp+0x2b],dh
  415473:	mov    ecx,0x67040b0f
  415478:	adc    dl,BYTE PTR [ebx-0x17]
  41547b:	xchg   ecx,eax
  41547c:	popa   
  41547d:	aas    
  41547e:	inc    esp
  41547f:	pushf  
  415480:	xor    eax,0x554c0f94
  415485:	sbb    BYTE PTR [ebx+eiz*1-0x1a],bl
  415489:	jne    0x41543b
  41548b:	shl    cl,1
  41548d:	dec    ebx
  41548e:	int3   
  41548f:	in     al,dx
  415490:	mov    ebp,0x6a0af79e
  415495:	inc    esp
  415496:	push   edx
  415497:	cmp    eax,0x6ae1b291
  41549c:	out    0x93,eax
  41549e:	sub    DWORD PTR ds:0x738e1700,0x72
  4154a5:	sbb    al,0x94
  4154a7:	add    BYTE PTR [edi-0x14],ch
  4154aa:	add    ecx,edi
  4154ac:	ja     0x4154e0
  4154ae:	mul    BYTE PTR [esi-0x5a760fdf]
  4154b4:	dec    esi
  4154b5:	rol    al,0x3f
  4154b8:	sub    BYTE PTR fs:[edi+0x676e45f1],ch
  4154bf:	pop    ebp
  4154c0:	and    eax,0x46e94f2
  4154c5:	xor    BYTE PTR ds:0x1871ac50,dl
  4154cb:	jle    0x415530
  4154cd:	and    al,bl
  4154cf:	mov    ch,0x42
  4154d1:	enter  0x94ef,0xb9
  4154d5:	pop    esp
  4154d6:	cdq    
  4154d7:	add    eax,0x569ae3fc
  4154dc:	sbb    esp,DWORD PTR [eax-0x65]
  4154df:	jb     0x415547
  4154e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e2:	or     eax,DWORD PTR [ecx]
  4154e4:	jmp    0xe8a5e4c8
  4154e9:	xor    cl,BYTE PTR [ebp+0x3f31b9c3]
  4154ef:	adc    al,0xbd
  4154f1:	dec    edi
  4154f2:	test   eax,0x566ae522
  4154f7:	mov    cs,WORD PTR [edx]
  4154f9:	xchg   esp,eax
  4154fa:	xchg   BYTE PTR [ebp+0x2760715f],ch
  415500:	jecxz  0x4154f0
  415502:	sar    DWORD PTR [edx+0x7e],1
  415505:	(bad)  
  415506:	iret   
  415507:	and    edi,DWORD PTR ds:0xe1734ecb
  41550d:	jbe    0x4154fe
  41550f:	stc    
  415510:	and    BYTE PTR [esi+0x57],al
  415513:	call   FWORD PTR [edx-0x73]
  415516:	std    
  415517:	pop    es
  415518:	sbb    BYTE PTR [edi],cl
  41551a:	fist   DWORD PTR [eax]
  41551c:	and    BYTE PTR [esi],ah
  41551e:	dec    edx
  41551f:	ficomp WORD PTR [edi]
  415521:	add    eax,DWORD PTR [edx+0x59]
  415524:	repz xlat BYTE PTR ds:[ebx]
  415526:	sub    dl,dl
  415528:	pushf  
  415529:	jno    0x41553c
  41552b:	sub    BYTE PTR [ebp-0x21ced2be],dh
  415531:	add    eax,0x818ab006
  415536:	push   ss
  415537:	mov    ah,0x8f
  415539:	bound  eax,QWORD PTR [ecx+0x3d6cd7d6]
  41553f:	xchg   edx,eax
  415540:	push   ebx
  415541:	imul   edi,DWORD PTR [ebx+esi*4+0x66],0x65
  415546:	(bad)  
  415547:	mov    edi,0x21f7120
  41554c:	xchg   esi,eax
  41554d:	xchg   esi,eax
  41554e:	dec    esp
  41554f:	popf   
  415550:	mov    ebx,0x91ffe866
  415555:	adc    DWORD PTR [ecx+ebp*1],0x1a0fda17
  41555c:	jl     0x41551a
  41555e:	std    
  41555f:	pop    ss
  415560:	add    DWORD PTR [eax],ebx
  415562:	retf   0x4596
  415565:	dec    esp
  415566:	inc    ecx
  415567:	les    ecx,FWORD PTR [ecx]
  415569:	(bad)  
  41556a:	xchg   ebp,eax
  41556b:	xor    ch,BYTE PTR [ecx+0x78]
  41556e:	dec    edx
  41556f:	test   eax,0xfd2174e8
  415574:	adc    dh,ch
  415576:	ds sti 
  415578:	xlat   BYTE PTR ds:[ebx]
  415579:	lahf   
  41557a:	or     bl,BYTE PTR [eax-0x2bacec5b]
  415580:	loope  0x41559b
  415582:	sub    al,bh
  415584:	aas    
  415585:	push   eax
  415586:	cmp    al,0x42
  415588:	(bad)  
  415589:	icebp  
  41558a:	(bad)  
  41558c:	ror    ebp,1
  41558e:	and    BYTE PTR [ebp+0xd],bl
  415591:	mov    dh,0x27
  415593:	ins    DWORD PTR es:[edi],dx
  415594:	and    bl,BYTE PTR [edi+0x2f62ed1e]
  41559a:	xor    esi,DWORD PTR [ebp-0x28]
  41559d:	jle    0x41558c
  41559f:	sbb    eax,0x2da8c5e1
  4155a4:	sub    ecx,eax
  4155a6:	and    BYTE PTR [esi-0x3946689a],0x85
  4155ad:	jle    0x415604
  4155af:	jno    0x415536
  4155b1:	mov    eax,0xbb31ba16
  4155b6:	lock mov esp,0x81c82fde
  4155bc:	dec    edx
  4155bd:	jmp    0x41556d
  4155bf:	or     BYTE PTR ds:0xca4ebfb5,0x38
  4155c6:	jle    0x415640
  4155c8:	mov    eax,0x912ea754
  4155cd:	cld    
  4155ce:	push   ds
  4155cf:	ja     0x4155ea
  4155d1:	cdq    
  4155d2:	pop    ds
  4155d3:	pushf  
  4155d4:	stc    
  4155d5:	cmp    bh,dh
  4155d7:	or     eax,0xf1e1158f
  4155dc:	and    BYTE PTR [eax],dl
  4155de:	into   
  4155df:	xor    al,BYTE PTR [esi]
  4155e1:	sbb    al,0x56
  4155e3:	xchg   DWORD PTR [eax+edx*2+0x1c],edx
  4155e7:	dec    ecx
  4155e8:	mov    ebp,DWORD PTR [esi+0xc]
  4155eb:	adc    edx,DWORD PTR [edx+0x58]
  4155ee:	pop    ebx
  4155ef:	xor    eax,0x650e406b
  4155f4:	out    0x82,eax
  4155f6:	sbb    dl,BYTE PTR [edx]
  4155f8:	mov    ebp,0xf41b2deb
  4155fd:	mov    eax,0x1375659c
  415602:	sbb    BYTE PTR ds:0x42847476,cl
  415608:	loope  0x4155c7
  41560a:	out    dx,eax
  41560b:	(bad)  
  41560c:	mov    eax,ds:0x78f54ec8
  415611:	push   ebx
  415612:	xor    esp,DWORD PTR [ebp+edx*4+0x6c0cbd05]
  415619:	scas   al,BYTE PTR es:[edi]
  41561a:	shl    eax,0x18
  41561d:	pop    ss
  41561e:	add    BYTE PTR [eax-0x40],dh
  415621:	(bad)  
  415624:	std    
  415625:	xchg   ebp,eax
  415626:	clc    
  415627:	ret    0x18e7
  41562a:	shl    DWORD PTR [eax],0x66
  41562d:	hlt    
  41562e:	push   edx
  41562f:	push   0x8d18fe52
  415634:	pop    ds
  415635:	cdq    
  415636:	rcr    DWORD PTR [edx],cl
  415638:	jp     0x41566e
  41563a:	pusha  
  41563b:	push   ss
  41563c:	jbe    0x41560f
  41563e:	loope  0x4155f5
  415640:	je     0x41566f
  415642:	fstp   QWORD PTR [ebx-0x1275efeb]
  415648:	pop    edx
  415649:	test   al,0x0
  41564b:	dec    eax
  41564c:	mov    ebp,0x9d150b6f
  415651:	fnstenv [edi]
  415653:	clc    
  415654:	mov    ecx,0x9f1f622f
  415659:	dec    ecx
  41565a:	out    dx,eax
  41565b:	mov    al,0x1b
  41565d:	fsub   QWORD PTR [edi-0xb]
  415660:	call   0x3eb9a0e2
  415665:	dec    esp
  415666:	sbb    ebp,DWORD PTR [ebp-0x60348b6b]
  41566c:	jg     0x41561a
  41566e:	jmp    0x4d52:0x420e8e9f
  415675:	jne    0x415618
  415677:	pop    ecx
  415678:	hlt    
  415679:	test   BYTE PTR [ebp-0x26341e31],ah
  41567f:	push   edi
  415680:	pop    esi
  415681:	xor    dh,dh
  415683:	mov    ds:0x19915852,al
  415688:	int3   
  415689:	push   esp
  41568a:	push   esp
  41568b:	jbe    0x4156bc
  41568d:	gs xchg ebp,eax
  41568f:	xchg   edx,eax
  415690:	mov    ch,0xdc
  415692:	mov    al,ds:0x921a783a
  415697:	rcl    BYTE PTR [ebx-0x15],0x4
  41569b:	aaa    
  41569c:	push   edx
  41569d:	mov    dh,0xb3
  41569f:	out    0xe0,al
  4156a1:	test   BYTE PTR [eax+0x69a193e1],cl
  4156a7:	sub    al,bh
  4156a9:	inc    esp
  4156aa:	js     0x415669
  4156ac:	lahf   
  4156ad:	imul   ebx,edx,0x3b575589
  4156b3:	mov    eax,0x78d40555
  4156b8:	push   esi
  4156b9:	xor    edx,DWORD PTR [ecx-0x55]
  4156bc:	sub    edi,DWORD PTR [esi+ecx*4]
  4156bf:	jo     0x415698
  4156c1:	push   ebp
  4156c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c3:	shr    DWORD PTR [edx],0x7b
  4156c6:	out    0x9,al
  4156c8:	sub    bh,BYTE PTR [edi+0x74]
  4156cb:	push   ss
  4156cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156cd:	cs or  ah,0x36
  4156d1:	pop    esp
  4156d2:	pop    ds
  4156d3:	sahf   
  4156d4:	xchg   DWORD PTR [edi+0x77d068e1],edx
  4156da:	pop    es
  4156db:	mov    BYTE PTR [edi-0x66dd8f8b],0x9e
  4156e2:	int    0x22
  4156e4:	or     eax,ebp
  4156e6:	dec    edi
  4156e7:	mov    ebp,0xb2a392eb
  4156ec:	aaa    
  4156ed:	push   ss
  4156ee:	jmp    0x21c752d7
  4156f3:	retf   0x94c2
  4156f6:	mov    dh,0xa1
  4156f8:	repnz imul ebp,DWORD PTR [ecx],0xffffffbe
  4156fc:	cmp    DWORD PTR cs:[edi],ebp
  4156ff:	mov    DWORD PTR [esi],edi
  415701:	call   0x9108f61d
  415706:	std    
  415707:	push   edx
  415708:	(bad)  
  415709:	pop    esp
  41570a:	inc    eax
  41570b:	dec    esi
  41570c:	scas   eax,DWORD PTR es:[edi]
  41570d:	push   ds
  41570e:	fistp  DWORD PTR [ebx+0xaba234d]
  415714:	xor    dh,dh
  415716:	sti    
  415717:	adc    bl,al
  415719:	xchg   esp,eax
  41571a:	add    DWORD PTR [edi+ebp*8+0x70c63cbc],esp
  415721:	mov    al,0x7a
  415723:	aaa    
  415724:	mov    eax,DWORD PTR ds:0x5e8f1e18
  41572a:	fnsave [esi]
  41572c:	mov    ah,0x16
  41572e:	add    BYTE PTR [ecx],0x23
  415731:	pop    edx
  415732:	sbb    cl,cl
  415734:	xor    BYTE PTR [edi-0x39],cl
  415737:	and    al,0xcc
  415739:	xor    al,0x7e
  41573b:	mov    edi,DWORD PTR [ecx+0x3c]
  41573e:	jae    0x4157a5
  415740:	mov    bh,ah
  415742:	ss mov edx,0x52277ea0
  415748:	shl    ch,1
  41574a:	xor    eax,edx
  41574c:	fisub  WORD PTR [eax+0x7e535187]
  415752:	add    esi,DWORD PTR [eax-0x56]
  415755:	push   esp
  415756:	adc    eax,0xf14d2521
  41575b:	inc    ebp
  41575c:	add    ecx,DWORD PTR [ecx-0xd]
  41575f:	pop    eax
  415760:	inc    edx
  415761:	sbb    DWORD PTR [eax-0x194b06a9],esp
  415767:	ins    BYTE PTR es:[edi],dx
  415768:	fdiv   QWORD PTR [eax-0x14b162f5]
  41576f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415770:	push   ecx
  415771:	add    BYTE PTR [ebx+0x62],ch
  415774:	rol    DWORD PTR [ebx+ebx*2],0x5b
  415778:	or     al,ah
  41577a:	mov    cl,0xd2
  41577c:	mov    edi,0xd682fa7
  415781:	mov    cl,0xa6
  415783:	fiadd  WORD PTR [ebx+0x182ca39c]
  415789:	sahf   
  41578a:	(bad)  
  41578c:	push   ebp
  41578d:	mov    ah,dh
  41578f:	mov    ecx,0x9a1d2f85
  415794:	or     al,0x65
  415796:	pop    eax
  415797:	mov    BYTE PTR [eax+0x1529aea2],0xa9
  41579e:	test   ebp,ebp
  4157a0:	push   esp
  4157a1:	xchg   ecx,eax
  4157a2:	inc    edi
  4157a3:	jbe    0x4157a1
  4157a5:	test   al,0x2d
  4157a7:	mov    dh,0x1a
  4157a9:	(bad)  
  4157aa:	cmp    DWORD PTR [ebx+0x191a775b],eax
  4157b0:	adc    edi,DWORD PTR [esi+esi*2]
  4157b3:	fwait
  4157b4:	lds    ebx,FWORD PTR [eax-0x12]
  4157b7:	bound  ecx,QWORD PTR [edi]
  4157b9:	pusha  
  4157ba:	loop   0x415798
  4157bc:	add    BYTE PTR [ebx+0x6d],dh
  4157bf:	fld    DWORD PTR [eax]
  4157c1:	jmp    0x1abf81c9
  4157c6:	out    0x54,al
  4157c8:	inc    eax
  4157c9:	fucomp st(3)
  4157cb:	sub    ebx,ecx
  4157cd:	ret    0xfc48
  4157d0:	popf   
  4157d1:	lds    ebp,FWORD PTR [edx-0x50ba5be2]
  4157d7:	mov    ds:0x9a040982,al
  4157dc:	imul   esi,DWORD PTR [esi+0x4af8ce5c],0xa722841e
  4157e6:	adc    ebp,ebp
  4157e8:	mov    ebp,0x2f13aa
  4157ed:	into   
  4157ee:	cwde   
  4157ef:	add    al,0x4b
  4157f1:	retf   0x25c4
  4157f4:	fcom   QWORD PTR [ecx]
  4157f6:	mov    ecx,0x22cfeabf
  4157fb:	xor    eax,0x1ca97dd7
  415800:	dec    ebp
  415801:	xor    esi,edx
  415803:	or     al,BYTE PTR [edi-0x60a3dcce]
  415809:	iret   
  41580a:	das    
  41580b:	jle    0x4157e8
  41580d:	sbb    eax,0xabd91fe2
  415812:	mov    bh,0xcf
  415814:	jno    0x41582c
  415816:	mov    eax,0xe1fe0b86
  41581b:	mov    edx,gs
  41581d:	xor    BYTE PTR [eax],bl
  41581f:	leave  
  415820:	lahf   
  415821:	mov    bl,0x64
  415823:	not    BYTE PTR [edi]
  415825:	and    ch,BYTE PTR [esp+edi*2+0xeeb516]
  41582c:	dec    eax
  41582d:	or     eax,0xf0fc19f1
  415832:	clc    
  415833:	push   edx
  415834:	cli    
  415835:	and    al,0x71
  415837:	xchg   edi,eax
  415838:	aad    0xc9
  41583a:	call   0x38fcd467
  41583f:	push   ecx
  415840:	loopne 0x415864
  415842:	mov    ds:0xccfada20,al
  415847:	inc    edx
  415848:	sbb    dl,al
  41584a:	int    0x60
  41584c:	fdivp  st(5),st
  41584e:	and    DWORD PTR [edx],esp
  415850:	call   0xc077:0x92f1ebad
  415857:	add    ah,bl
  415859:	sub    eax,0xc6cf661a
  41585e:	push   es
  41585f:	add    esp,DWORD PTR [edx]
  415861:	mov    ah,0x52
  415863:	fsubrp st(0),st
  415865:	push   edx
  415866:	dec    ecx
  415867:	ja     0x4158b1
  415869:	and    DWORD PTR [ecx+0x1a],edx
  41586c:	pop    eax
  41586d:	scas   al,BYTE PTR es:[edi]
  41586e:	inc    edi
  41586f:	jo     0x4158b0
  415871:	hlt    
  415872:	(bad)  
  415873:	xor    esp,DWORD PTR [eax+eax*4+0x776d3f4e]
  41587a:	push   ebp
  41587b:	sub    al,0x87
  41587d:	fwait
  41587e:	and    bh,BYTE PTR [edx+0x5e]
  415881:	mov    eax,0x6199a41d
  415886:	retf   0x4dff
  415889:	pop    es
  41588a:	dec    eax
  41588b:	stc    
  41588c:	in     al,dx
  41588d:	inc    esp
  41588e:	mov    al,0x11
  415890:	adc    BYTE PTR [eax],bl
  415892:	sub    BYTE PTR [ecx],dl
  415894:	mov    ecx,0xac2302d5
  415899:	retf   0x9a42
  41589c:	enter  0xba82,0xdb
  4158a0:	mov    ah,0x8b
  4158a2:	retf   
  4158a3:	xlat   BYTE PTR ds:[ebx]
  4158a4:	mov    BYTE PTR [ebp-0x6e],bl
  4158a7:	pushf  
  4158a8:	or     BYTE PTR [esi+0x2aaaeafc],ah
  4158ae:	icebp  
  4158af:	or     eax,0x663c2d40
  4158b4:	retf   
  4158b5:	pop    ebx
  4158b6:	in     al,0x5b
  4158b8:	call   0xf20a9f58
  4158bd:	(bad)  
  4158be:	sbb    DWORD PTR ds:[edi],0xffffffe8
  4158c2:	(bad)  
  4158c3:	or     DWORD PTR [ecx-0x1cf9ceee],0xaf9c21bf
  4158cd:	div    BYTE PTR [esi]
  4158cf:	cli    
  4158d0:	jle    0x415940
  4158d2:	js     0x415936
  4158d4:	rcl    BYTE PTR [edx+0x40d409f8],cl
  4158da:	daa    
  4158db:	jnp    0x4158b0
  4158dd:	dec    ebp
  4158de:	(bad)  
  4158df:	outs   dx,BYTE PTR es:[esi]
  4158e1:	jmp    0xd7ec:0x1830ce7b
  4158e8:	ds xchg ecx,eax
  4158ea:	cmp    ebx,DWORD PTR [ebx]
  4158ec:	push   ebx
  4158ed:	data16 fiadd DWORD PTR [ebx-0x1a]
  4158f1:	cmp    al,0x19
  4158f3:	add    DWORD PTR [ecx],esi
  4158f5:	adc    dh,BYTE PTR [edi]
  4158f7:	pushf  
  4158f8:	aaa    
  4158f9:	fwait
  4158fa:	mov    ds:0xee356c0b,al
  4158ff:	retf   0x415b
  415902:	out    0x24,al
  415904:	shr    dl,0x95
  415907:	les    esi,FWORD PTR [ebx-0x5291f772]
  41590d:	xchg   DWORD PTR [ebx-0x1685d602],edi
  415913:	mov    DWORD PTR [esi],edx
  415915:	sub    eax,0x67e850d3
  41591a:	or     DWORD PTR [esi],edx
  41591c:	mov    eax,cs
  41591e:	add    eax,0x437f2c92
  415923:	int    0x20
  415925:	retf   
  415926:	mov    WORD PTR [edi-0x2b32f067],fs
  41592c:	int    0x3c
  41592e:	jecxz  0x41597f
  415930:	mov    ebp,0xac7b1d42
  415935:	jmp    0x6886:0x524e193c
  41593c:	lods   al,BYTE PTR ds:[esi]
  41593d:	fmul   DWORD PTR [ecx+0x50]
  415940:	sbb    al,0x10
  415942:	ficomp DWORD PTR [eax-0x2d7591bb]
  415948:	loop   0x41592a
  41594a:	addr16 xchg esi,eax
  41594c:	jp     0x415991
  41594e:	popa   
  41594f:	mov    esp,0x258e7e2c
  415954:	inc    edi
  415955:	push   esp
  415956:	out    dx,eax
  415957:	ds xor eax,0x8d3dc4d1
  41595d:	je     0x41595e
  41595f:	in     eax,dx
  415960:	jecxz  0x415948
  415962:	out    0x58,al
  415964:	cmp    bl,BYTE PTR [ecx]
  415966:	xchg   ecx,ebx
  415968:	inc    edi
  415969:	les    eax,FWORD PTR [eax]
  41596b:	jb     0x4159ac
  41596d:	xchg   edi,eax
  41596e:	xlat   BYTE PTR ds:[ebx]
  41596f:	jmp    DWORD PTR [edi+ecx*4-0x2b]
  415973:	call   0xbe55:0x5547e563
  41597a:	mov    ebp,esi
  41597c:	mov    dh,0x4e
  41597e:	dec    edx
  41597f:	bound  esp,QWORD PTR [ebx+0x29]
  415982:	outs   dx,BYTE PTR ds:[esi]
  415983:	out    0x68,eax
  415985:	and    al,0xbd
  415987:	imul   ecx,DWORD PTR [eax],0xffffffa1
  41598a:	sbb    dl,BYTE PTR [esi+ebp*8+0x94693ce]
  415991:	data16 test al,0x7
  415994:	push   ss
  415995:	jp     0x4159fa
  415997:	imul   DWORD PTR [edi+edi*2]
  41599a:	adc    al,0xca
  41599c:	shl    BYTE PTR [edi-0x31],0x8a
  4159a0:	push   esi
  4159a1:	push   ss
  4159a2:	and    BYTE PTR [edi],dl
  4159a4:	stos   DWORD PTR es:[edi],eax
  4159a5:	mov    esp,0xb3901981
  4159aa:	add    eax,DWORD PTR [edx+0x15705976]
  4159b0:	je     0x415a09
  4159b2:	dec    esp
  4159b3:	cmp    eax,0xf0e39155
  4159b8:	lods   eax,DWORD PTR ds:[esi]
  4159b9:	test   BYTE PTR [esi],dh
  4159bb:	sti    
  4159bc:	push   esp
  4159bd:	fisubr WORD PTR [edi]
  4159bf:	xor    eax,0xe3d0b18e
  4159c4:	pop    ebp
  4159c5:	fs int 0x4
  4159c8:	lahf   
  4159c9:	sub    BYTE PTR [edi+ecx*8+0x4009ff2],ah
  4159d0:	push   ebp
  4159d1:	sbb    bl,ch
  4159d3:	xor    ebp,esp
  4159d5:	lock cli 
  4159d7:	and    DWORD PTR [edx-0x28],edx
  4159da:	pushf  
  4159db:	xchg   ebp,eax
  4159dc:	xor    ebp,DWORD PTR [eax+0x3dc2110c]
  4159e2:	push   ss
  4159e3:	(bad)  
  4159e4:	(bad)  
  4159e5:	cdq    
  4159e6:	(bad)  
  4159e7:	adc    al,0xf4
  4159e9:	out    0x19,al
  4159eb:	fcmovne st,st(2)
  4159ed:	xor    BYTE PTR [eax-0x30],bh
  4159f0:	repz fist DWORD PTR [ebp+0x55]
  4159f4:	mov    DWORD PTR [esi-0x9a3ef],edi
  4159fa:	cmp    bl,BYTE PTR [edx]
  4159fc:	pop    esp
  4159fd:	ror    eax,0xf6
  415a00:	scas   eax,DWORD PTR es:[edi]
  415a01:	sahf   
  415a02:	es ret 
  415a04:	xchg   esi,eax
  415a05:	fwait
  415a06:	test   al,0x51
  415a08:	clc    
  415a09:	inc    edi
  415a0a:	call   0x4818:0xb9a3d2a6
  415a11:	cmp    BYTE PTR [edx-0x79],0x71
  415a15:	mov    eax,0x6bbf6d27
  415a1a:	mov    ebx,0xe64ac9a2
  415a1f:	js     0x4159aa
  415a21:	addr16 push ss
  415a23:	sub    ebp,ebx
  415a25:	or     esp,DWORD PTR [ebp+ecx*8+0x20]
  415a29:	lods   eax,DWORD PTR ds:[esi]
  415a2a:	ror    DWORD PTR [edi+0xc24fc56],1
  415a30:	cmp    cl,BYTE PTR [edx+0x2]
  415a33:	dec    esi
  415a34:	or     BYTE PTR [ebx+0x46a12ff2],ah
  415a3a:	inc    edx
  415a3b:	inc    esi
  415a3c:	das    
  415a3d:	stos   DWORD PTR es:[edi],eax
  415a3e:	mov    edx,0xc4037c4f
  415a43:	push   ss
  415a44:	push   cs
  415a45:	mov    ebp,0xcdcf2a39
  415a4a:	add    esp,DWORD PTR [ecx+0x3e]
  415a4d:	xchg   esp,eax
  415a4e:	(bad)  
  415a4f:	jecxz  0x415a7f
  415a51:	cdq    
  415a52:	mov    edx,0x6e8ee1eb
  415a57:	push   eax
  415a58:	shl    DWORD PTR [edx-0x24],0xeb
  415a5c:	xchg   ebx,eax
  415a5d:	mov    al,ds:0x2ab70a48
  415a62:	mov    dh,0xf6
  415a64:	adc    al,0x60
  415a66:	in     eax,0xa7
  415a68:	push   ebx
  415a69:	dec    esp
  415a6a:	or     BYTE PTR [ebx-0x24],0x3e
  415a6e:	cdq    
  415a6f:	cmc    
  415a70:	cs jns 0x415a08
  415a73:	ret    
  415a74:	popf   
  415a75:	dec    ebp
  415a76:	xor    al,0x7f
  415a78:	ja     0x415aed
  415a7a:	add    DWORD PTR [esi],esp
  415a7c:	or     esp,DWORD PTR [bp+si-0x5d]
  415a80:	mov    eax,0xbac1014e
  415a85:	xchg   DWORD PTR [esi],ecx
  415a87:	sub    edi,DWORD PTR [eax]
  415a89:	call   ebx
  415a8b:	pop    eax
  415a8c:	mov    eax,0x400a3e6
  415a91:	push   ds
  415a92:	js     0x415a77
  415a94:	jb     0x415b0a
  415a96:	xor    DWORD PTR [eax+ecx*1-0x7a],0xebbdca88
  415a9e:	jmp    0xf36c:0xe2c5f340
  415aa5:	sbb    bh,BYTE PTR [edx+0x14a2adf]
  415aab:	daa    
  415aac:	xchg   edi,eax
  415aad:	xchg   ecx,eax
  415aae:	sub    al,0x30
  415ab0:	scas   al,BYTE PTR es:[edi]
  415ab1:	pop    ebp
  415ab2:	fld    DWORD PTR [ebp+0x7cc4dd11]
  415ab8:	vcvtsi2ss xmm7,xmm3,DWORD PTR [esp+edx*1]
  415abd:	jns    0x415a81
  415abf:	(bad)  
  415ac0:	(bad)  
  415ac2:	mov    bh,0x2b
  415ac4:	dec    edi
  415ac5:	test   ebp,0xf23e4533
  415acb:	adc    eax,0x5129af0
  415ad0:	inc    edi
  415ad1:	popf   
  415ad2:	mov    esp,0x9d276942
  415ad7:	pop    edi
  415ad8:	sub    ah,BYTE PTR [eax-0x10]
  415adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415adc:	in     al,0xb1
  415ade:	int3   
  415adf:	out    0x4d,al
  415ae1:	(bad)  
  415ae3:	mov    ebx,0x807cfe8a
  415ae8:	pop    ebx
  415ae9:	in     eax,dx
  415aea:	into   
  415aeb:	push   edx
  415aec:	loop   0x415a7a
  415aee:	pop    ds
  415aef:	(bad)  
  415af0:	lods   eax,DWORD PTR ds:[esi]
  415af1:	cmp    ch,BYTE PTR [ecx-0x2c5db728]
  415af7:	imul   edi,esp,0xe91db66
  415afd:	mov    cl,0x20
  415aff:	or     DWORD PTR ds:[ecx],ecx
  415b02:	adc    BYTE PTR [esi],0xc
  415b05:	mov    ebp,0xbcc67fc7
  415b0a:	pop    ebx
  415b0b:	mov    al,0xc9
  415b0d:	mov    ecx,DWORD PTR [ebp+eax*4-0x71f339bd]
  415b14:	add    edx,DWORD PTR [esi]
  415b16:	adc    DWORD PTR [ebx],esi
  415b18:	rol    BYTE PTR [esi+0x1b4f579],0xe8
  415b1f:	mov    bl,0x4b
  415b21:	or     eax,0xb8cde9cf
  415b26:	jno    0x415aff
  415b28:	and    al,BYTE PTR [edi]
  415b2a:	popf   
  415b2b:	cmp    al,0x5b
  415b2d:	sahf   
  415b2e:	mov    cl,0x59
  415b30:	test   BYTE PTR [eax],0x1
  415b33:	cli    
  415b34:	cmp    eax,DWORD PTR ds:0xb4457cab
  415b3a:	das    
  415b3b:	xchg   edi,eax
  415b3c:	sub    edi,DWORD PTR [edx+0x72dcee47]
  415b42:	xchg   edi,eax
  415b43:	int    0xfa
  415b45:	xchg   ecx,eax
  415b46:	fwait
  415b47:	cmp    al,0x68
  415b49:	jmp    0xf4500e2e
  415b4e:	ins    DWORD PTR es:[edi],dx
  415b4f:	jle    0x5b5cdb0
  415b55:	imul   eax,DWORD PTR ds:0x64ebfd20,0xc58bc22e
  415b5f:	jne    0x415b57
  415b61:	push   0x2
  415b63:	scas   eax,DWORD PTR es:[edi]
  415b64:	fdivr  QWORD PTR [ecx+0x3c]
  415b67:	fistp  WORD PTR [edi]
  415b69:	and    DWORD PTR [esi+0x48],edi
  415b6c:	stc    
  415b6d:	mov    ebp,0x89e7d764
  415b72:	mov    al,ds:0xaf859749
  415b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b78:	jo     0x415b72
  415b7a:	xor    edi,DWORD PTR [eax+eax*4-0x6a5508f3]
  415b81:	ins    BYTE PTR es:[edi],dx
  415b82:	pusha  
  415b83:	adc    DWORD PTR [edi],eax
  415b85:	push   ebx
  415b86:	cmp    ecx,DWORD PTR [edx]
  415b88:	mov    edi,0xfb683079
  415b8d:	arpl   di,cx
  415b8f:	lods   al,BYTE PTR ds:[esi]
  415b90:	sbb    al,0x1d
  415b92:	xor    eax,0x8bf6a9ff
  415b97:	lock jl 0x415c18
  415b9a:	pop    DWORD PTR [edx-0x59e02a57]
  415ba0:	xlat   BYTE PTR ds:[ebx]
  415ba1:	cwde   
  415ba2:	pop    ebx
  415ba3:	pop    esi
  415ba4:	lods   al,BYTE PTR ds:[esi]
  415ba5:	push   ebx
  415ba6:	mov    DWORD PTR [edi-0x68ea2fb],esi
  415bac:	out    dx,al
  415bad:	mov    ah,0xca
  415baf:	cmc    
  415bb0:	xchg   esp,eax
  415bb1:	sub    ah,BYTE PTR cs:[ebx+edx*4]
  415bb5:	aaa    
  415bb6:	jnp    0x415c01
  415bb8:	fidivr WORD PTR [eax-0x11cf281f]
  415bbe:	rcl    DWORD PTR [edx+0x1e3217f6],cl
  415bc4:	jo     0x415b8a
  415bc6:	or     ecx,DWORD PTR [eax-0x28]
  415bc9:	xchg   ebx,eax
  415bca:	shr    BYTE PTR [eax+0x53],0x48
  415bce:	sbb    edx,DWORD PTR [edx-0x1258b3ba]
  415bd4:	out    0x1a,eax
  415bd6:	mov    cl,0xf0
  415bd8:	or     BYTE PTR [ebx+0x263d6baa],al
  415bde:	push   eax
  415bdf:	xchg   ebp,eax
  415be0:	shr    DWORD PTR ds:0x18cb2802,1
  415be6:	lods   al,BYTE PTR ds:[esi]
  415be7:	test   eax,0xfc0ebd55
  415bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bed:	push   0x3d
  415bef:	sub    eax,0x3d9492ae
  415bf4:	jnp    0x415bbc
  415bf6:	jmp    0xba28:0xf16dcae3
  415bfd:	(bad)  
  415bfe:	into   
  415bff:	out    0x9f,eax
  415c01:	in     eax,dx
  415c02:	pop    ss
  415c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c04:	mov    esp,0xfadbd7de
  415c09:	mov    bh,0x0
  415c0b:	push   ebx
  415c0c:	nop
  415c0d:	stos   BYTE PTR es:[edi],al
  415c0e:	dec    edx
  415c0f:	dec    eax
  415c10:	outs   dx,DWORD PTR ds:[esi]
  415c11:	fadd   QWORD PTR [ecx-0x203e4b63]
  415c17:	fild   WORD PTR [ebp+0x45]
  415c1a:	xlat   BYTE PTR ds:[ebx]
  415c1b:	and    DWORD PTR [ebx-0x2],esi
  415c1e:	adc    dh,bl
  415c20:	jnp    0x415c82
  415c22:	inc    esp
  415c23:	push   edi
  415c24:	xor    al,0xf1
  415c26:	popf   
  415c27:	inc    edx
  415c28:	mov    esp,0xab3c7164
  415c2d:	pop    edi
  415c2e:	pop    ebx
  415c2f:	push   ebp
  415c30:	pop    ecx
  415c31:	scas   al,BYTE PTR es:[edi]
  415c32:	dec    edi
  415c33:	jp     0x415cad
  415c35:	push   es
  415c36:	bnd ret 0x83a6
  415c3a:	xchg   ecx,eax
  415c3b:	imul   eax,DWORD PTR [ebp-0x4a],0x6d
  415c3f:	dec    esp
  415c40:	test   al,0xa9
  415c42:	sub    dh,cl
  415c44:	inc    edx
  415c45:	push   esp
  415c46:	xor    BYTE PTR [edx+ecx*2],dl
  415c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4a:	jmp    DWORD PTR [edi+ecx*4]
  415c4d:	jg     0x415bf0
  415c4f:	and    eax,0xdf5d1275
  415c54:	jae    0x415c8a
  415c56:	dec    ebx
  415c57:	mov    ch,0x9
  415c59:	dec    ebx
  415c5a:	jg     0x415c18
  415c5c:	call   0x5d10:0xabcf37a1
  415c63:	fnsave [edx]
  415c65:	lods   eax,DWORD PTR ds:[esi]
  415c66:	lahf   
  415c67:	stc    
  415c68:	pop    ecx
  415c69:	add    ebp,eax
  415c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c6c:	rol    BYTE PTR [eax],1
  415c6e:	lods   al,BYTE PTR ds:[esi]
  415c6f:	jmp    0x415ce4
  415c71:	mov    ah,0x32
  415c73:	inc    edx
  415c74:	shr    dh,0x53
  415c77:	jle    0x415cbc
  415c79:	sbb    eax,0x3037857
  415c7e:	dec    edx
  415c7f:	xchg   cl,bl
  415c81:	fdiv   DWORD PTR [edi]
  415c83:	rcr    BYTE PTR [esi-0x14e43e06],1
  415c89:	mov    WORD PTR [esi],fs
  415c8b:	loope  0x415c88
  415c8d:	ret    
  415c8e:	sbb    al,0xe7
  415c90:	xchg   edx,eax
  415c91:	iret   
  415c92:	lods   eax,DWORD PTR ds:[esi]
  415c93:	jb     0x415ce8
  415c95:	cmp    dl,al
  415c97:	in     al,dx
  415c98:	pop    ebx
  415c99:	scas   al,BYTE PTR es:[edi]
  415c9a:	jl     0x415c5a
  415c9c:	sbb    BYTE PTR [esi+0x17c4b2f9],dh
  415ca2:	sbb    eax,0xe7affdc4
  415ca7:	cmp    ebx,eax
  415ca9:	imul   esp,DWORD PTR [edi],0xffffffd1
  415cac:	adc    al,0x1b
  415cae:	ficom  WORD PTR [ecx+eax*2]
  415cb1:	jne    0x415c61
  415cb3:	mov    BYTE PTR ds:0x805a0af5,ch
  415cb9:	pop    ecx
  415cba:	xchg   edx,eax
  415cbb:	call   0xde73:0x3a97b7cf
  415cc2:	inc    ebx
  415cc3:	daa    
  415cc4:	gs dec ecx
  415cc6:	xchg   ebp,eax
  415cc7:	xlat   BYTE PTR ds:[ebx]
  415cc8:	aad    0xe8
  415cca:	jno    0x415d0f
  415ccc:	push   eax
  415ccd:	jg     0x415cc5
  415ccf:	or     eax,DWORD PTR [ecx+0x4858f308]
  415cd5:	sub    edx,edi
  415cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd8:	and    BYTE PTR [eax+0x67a0c335],al
  415cde:	dec    ebx
  415cdf:	mov    dh,0xf5
  415ce1:	(bad)  
  415ce2:	stc    
  415ce3:	cmp    al,0x6a
  415ce5:	nop
  415ce6:	popf   
  415ce7:	nop
  415ce8:	jle    0x415c6c
  415cea:	mov    ds:0xe07fe921,al
  415cef:	jmp    0x415c84
  415cf1:	rcr    DWORD PTR [edi+0x4449989a],1
  415cf7:	in     al,0xa4
  415cf9:	xchg   ecx,eax
  415cfa:	aad    0xd9
  415cfc:	push   esp
  415cfd:	mov    al,ds:0x2a4268b3
  415d02:	int3   
  415d03:	mov    ah,BYTE PTR [ebx+ebp*2]
  415d06:	leave  
  415d07:	xchg   edi,eax
  415d08:	popa   
  415d09:	mov    esp,0x3c619bf3
  415d0e:	in     al,dx
  415d0f:	das    
  415d10:	pop    ebx
  415d11:	pop    esi
  415d12:	enter  0xbe77,0x66
  415d16:	mov    BYTE PTR [ebx+0x70628737],cl
  415d1c:	xor    al,0xd
  415d1e:	int3   
  415d1f:	sub    eax,0xc3f64a05
  415d24:	jae    0x415da0
  415d26:	mov    dh,0xcd
  415d28:	xchg   DWORD PTR [esp+ebx*2+0x60a3ae18],edx
  415d2f:	add    dh,ch
  415d31:	sbb    sp,cx
  415d34:	pushf  
  415d35:	inc    ebx
  415d36:	mov    eax,ds:0xa7df0dba
  415d3b:	and    bh,BYTE PTR [eax-0x28]
  415d3e:	aam    0xd9
  415d40:	repz lea ecx,[ebx]
  415d43:	mov    ds:0x602853c5,eax
  415d48:	ret    
  415d49:	add    ebp,DWORD PTR [ecx-0x7d348aea]
  415d4f:	ret    0x76de
  415d52:	aad    0x55
  415d54:	mov    DWORD PTR [ebx+0x3c],eax
  415d57:	or     al,0xc0
  415d59:	dec    eax
  415d5a:	pusha  
  415d5b:	adc    ebp,eax
  415d5d:	out    dx,eax
  415d5e:	popa   
  415d5f:	lahf   
  415d60:	pop    esi
  415d61:	push   edi
  415d62:	les    ebx,FWORD PTR [eax-0x1969c503]
  415d68:	mov    esi,0x1713525b
  415d6d:	bnd jp 0x415d8a
  415d70:	loop   0x415d86
  415d72:	xchg   edx,eax
  415d73:	mov    al,ds:0x45a0c5b6
  415d78:	xor    edx,DWORD PTR [ebx]
  415d7a:	leave  
  415d7b:	nop
  415d7c:	repz mov bl,0x25
  415d7f:	dec    edx
  415d80:	fwait
  415d81:	mov    ds:0xd1f2dc9f,eax
  415d86:	mov    edi,0xf09acec9
  415d8b:	outs   dx,BYTE PTR ds:[esi]
  415d8c:	cli    
  415d8d:	iret   
  415d8e:	xchg   BYTE PTR [esp+ebx*4-0x4d],ch
  415d92:	jae    0x415d33
  415d94:	jbe    0x415d2c
  415d96:	dec    esi
  415d97:	adc    eax,0xb6fffb64
  415d9c:	fucom  st(7)
  415d9e:	push   edx
  415d9f:	fcom   QWORD PTR [edx+0x668a535b]
  415da5:	and    DWORD PTR [ecx],ecx
  415da7:	aas    
  415da8:	stos   DWORD PTR es:[edi],eax
  415da9:	loopne 0x415e03
  415dab:	ss (bad) 
  415dad:	js     0x415dd7
  415daf:	cwde   
  415db0:	and    BYTE PTR [ebp-0x864ee81],dl
  415db6:	(bad)  
  415db7:	enter  0xf00,0x2b
  415dbb:	inc    esi
  415dbc:	aas    
  415dbd:	sbb    bh,BYTE PTR [esi+0x49ee9f9b]
  415dc3:	sub    eax,0xffab0d5c
  415dc8:	inc    esi
  415dc9:	pop    es
  415dca:	sbb    BYTE PTR [esi-0x42],dl
  415dcd:	enter  0xc5c3,0x2f
  415dd1:	jns    0x415d84
  415dd3:	xor    esi,DWORD PTR [ecx]
  415dd5:	mov    eax,ds:0x7aa0d4bb
  415dda:	jo     0x415d9b
  415ddc:	push   eax
  415ddd:	ss push edx
  415ddf:	in     eax,0x56
  415de1:	ret    
  415de2:	out    0x59,al
  415de4:	std    
  415de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de6:	imul   edi,edi,0x1c
  415de9:	std    
  415dea:	mov    esp,DWORD PTR [ecx-0x574770bb]
  415df0:	mov    dl,bh
  415df2:	lahf   
  415df3:	or     bl,BYTE PTR [esi]
  415df5:	sub    BYTE PTR ds:0x813c22a6,dl
  415dfb:	xor    al,0x87
  415dfd:	sub    al,0xc
  415dff:	cs sbb dh,dh
  415e02:	mov    es:0x3525ad59,eax
  415e08:	in     al,0x9b
  415e0a:	or     dh,bh
  415e0c:	jno    0x415de0
  415e0e:	push   ds
  415e0f:	std    
  415e10:	jne    0x415deb
  415e12:	retf   0x636d
  415e15:	cmp    DWORD PTR [edx-0x1b86dc75],ecx
  415e1b:	push   ebp
  415e1c:	dec    ebp
  415e1d:	fwait
  415e1e:	xor    al,0xd8
  415e20:	(bad)  
  415e21:	fcmovnbe st,st(1)
  415e23:	shl    BYTE PTR [esi-0x53],0xfb
  415e27:	jle    0x415dba
  415e29:	xor    ebx,DWORD PTR [ecx+edx*4+0x4f]
  415e2d:	cmc    
  415e2e:	jecxz  0x415e4d
  415e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e31:	push   es
  415e32:	adc    eax,0x70ee4b8c
  415e37:	jns    0x415e9b
  415e39:	pop    ecx
  415e3a:	add    ecx,ebp
  415e3c:	jmp    0x61883947
  415e41:	in     eax,dx
  415e42:	dec    edx
  415e43:	lahf   
  415e44:	les    ebp,FWORD PTR [ebp-0x34]
  415e47:	sar    dh,cl
  415e49:	test   al,0xb6
  415e4b:	icebp  
  415e4c:	or     al,0xe9
  415e4e:	pushf  
  415e4f:	ja     0x415eb8
  415e51:	xchg   esp,eax
  415e52:	mov    BYTE PTR [ebx+0x61],al
  415e55:	es dec ecx
  415e57:	ja     0x415ea3
  415e59:	dec    edi
  415e5a:	push   0x4309b610
  415e5f:	mov    al,0x9e
  415e61:	xchg   DWORD PTR [edi],eax
  415e63:	je     0x415ed6
  415e65:	jnp    0x415e1d
  415e67:	ins    BYTE PTR es:[edi],dx
  415e68:	test   dh,dl
  415e6a:	xchg   ebx,eax
  415e6b:	mov    esi,0x2ccbc436
  415e70:	push   ebp
  415e71:	mov    ecx,0x8a7b811d
  415e76:	mov    ecx,0xb88c929e
  415e7b:	cmp    al,0xc8
  415e7d:	in     eax,0x7a
  415e7f:	pusha  
  415e80:	mov    al,BYTE PTR [eax+0x16c554]
  415e86:	fwait
  415e87:	inc    edi
  415e88:	mov    ah,ah
  415e8a:	inc    ebx
  415e8b:	(bad)  
  415e8c:	jmp    ebx
  415e8e:	inc    edx
  415e8f:	mov    DWORD PTR [eax+0x59],edx
  415e92:	or     eax,0xcb92c5f1
  415e97:	call   0x8923c5aa
  415e9c:	dec    ecx
  415e9d:	call   0x575f:0x2c25058a
  415ea4:	mov    BYTE PTR [ecx-0x12bfbac1],al
  415eaa:	add    DWORD PTR [edx-0x74318bd],0xffffffe4
  415eb1:	xchg   edi,eax
  415eb2:	clc    
  415eb3:	test   DWORD PTR [ecx],ebp
  415eb5:	test   eax,0xfc4e0037
  415eba:	sub    eax,0x56787fe1
  415ebf:	in     al,0x3
  415ec1:	sti    
  415ec2:	ds cld 
  415ec4:	dec    eax
  415ec5:	or     al,0x7a
  415ec7:	pop    ds
  415ec8:	enter  0x7acd,0xc9
  415ecc:	push   esi
  415ecd:	mov    eax,0xfbc2fc08
  415ed2:	inc    ecx
  415ed3:	call   0x941c:0x9f7b0dd3
  415eda:	inc    esp
  415edb:	jnp    0x415f13
  415edd:	and    al,0xf
  415edf:	or     esp,DWORD PTR [edx]
  415ee1:	pop    ss
  415ee2:	push   edi
  415ee3:	call   0x8253:0xaa829fe1
  415eea:	xor    BYTE PTR [esi-0x3e],bl
  415eed:	pop    ss
  415eee:	push   esi
  415eef:	and    DWORD PTR [eax-0x51],ebp
  415ef2:	int    0x6d
  415ef4:	test   cl,ah
  415ef6:	xchg   esp,eax
  415ef7:	sub    bh,BYTE PTR [ebp-0x6e]
  415efa:	pusha  
  415efb:	and    DWORD PTR [ebx],esp
  415efd:	xlat   BYTE PTR ds:[ebx]
  415efe:	add    eax,0x12b05182
  415f03:	ja     0x415f03
  415f05:	xor    DWORD PTR [esi],esp
  415f07:	cs push edx
  415f09:	xchg   BYTE PTR [edi+0x29],ch
  415f0c:	xchg   ebx,eax
  415f0d:	push   eax
  415f0e:	call   0x132b60b0
  415f13:	lock (bad) 
  415f16:	cli    
  415f17:	or     DWORD PTR [ebx+0x5d0bfee7],ecx
  415f1d:	sbb    DWORD PTR [edi-0x4ab30d69],ebx
  415f23:	sbb    BYTE PTR [esi-0x4770f1a9],dh
  415f29:	stos   DWORD PTR es:[edi],eax
  415f2a:	mov    ebx,0x5d30243a
  415f2f:	cwde   
  415f30:	xchg   ebp,eax
  415f31:	cmp    BYTE PTR [ecx+0x5e],al
  415f34:	add    al,0xb7
  415f36:	out    dx,al
  415f37:	popf   
  415f38:	push   0x46cbe9d0
  415f3d:	xchg   ecx,eax
  415f3e:	pop    esp
  415f3f:	(bad)  
  415f40:	push   eax
  415f41:	sahf   
  415f42:	push   edx
  415f43:	in     al,0x45
  415f45:	in     eax,dx
  415f46:	in     eax,0x43
  415f48:	or     al,0xea
  415f4a:	hlt    
  415f4b:	sbb    eax,0x9f752cd2
  415f50:	jmp    FWORD PTR [ecx+eax*2]
  415f53:	test   dh,bl
  415f55:	repnz mov ?,WORD PTR [ebx+ebx*2+0x5d]
  415f5a:	fdivr  st(3),st
  415f5c:	fs xor al,0x99
  415f5f:	test   eax,0xebe3663d
  415f64:	out    0xdb,eax
  415f66:	cmp    ebp,ebx
  415f68:	jmp    0x415fb6
  415f6a:	shl    DWORD PTR [ecx+0x17e7c602],0xe9
  415f71:	push   eax
  415f72:	push   0xd831ca88
  415f77:	in     al,0xb4
  415f79:	int3   
  415f7a:	mov    eax,0xd506779a
  415f7f:	xchg   esp,eax
  415f80:	jbe    0x415fe7
  415f82:	cmp    bl,BYTE PTR [ecx+0x34]
  415f85:	stos   BYTE PTR es:[edi],al
  415f86:	sar    BYTE PTR [edx+eax*4],0x35
  415f8a:	mov    ds:0x34f79650,al
  415f8f:	(bad)  
  415f90:	dec    esi
  415f91:	je     0x415f84
  415f93:	adc    BYTE PTR [eax-0x1],dl
  415f96:	adc    BYTE PTR [esi+0x6],dl
  415f99:	retf   
  415f9a:	(bad)  
  415f9b:	or     ah,BYTE PTR [esi]
  415f9d:	jo     0x41601a
  415f9f:	sub    DWORD PTR [eax+0x2f],ebx
  415fa2:	fist   WORD PTR [edx]
  415fa4:	dec    esp
  415fa5:	mov    ds:0xf06d60e9,eax
  415faa:	test   BYTE PTR [ebx+0x73474743],al
  415fb0:	enter  0x445d,0x86
  415fb4:	outs   dx,BYTE PTR ds:[esi]
  415fb5:	ret    
  415fb6:	mov    ds:0xe0e92881,al
  415fbb:	mov    ds:0x737e956e,al
  415fc0:	push   0xb1053182
  415fc5:	sbb    DWORD PTR [edx-0x51],0x605bc498
  415fcc:	shl    DWORD PTR [edi+0x4a],0xa8
  415fd0:	xlat   BYTE PTR ds:[ebx]
  415fd1:	mov    esp,0xefdf79bb
  415fd6:	fimul  DWORD PTR [ebx+0x67]
  415fd9:	pop    es
  415fda:	mov    bl,0x8e
  415fdc:	aam    0x64
  415fde:	enter  0x9477,0x87
  415fe2:	test   BYTE PTR [ebp+0x5de3b3f],dl
  415fe8:	mov    al,0x1c
  415fea:	fwait
  415feb:	adc    eax,0xdf133caf
  415ff0:	nop
  415ff1:	hlt    
  415ff2:	push   ecx
  415ff3:	mov    edx,?
  415ff5:	mov    ebx,0x81b5f18e
  415ffa:	mov    eax,0x8700631
  415fff:	dec    ecx
  416000:	jmp    0x1249573f
  416005:	cmp    dh,BYTE PTR [edi+0x54]
  416008:	mov    ecx,0x6b795b08
  41600d:	fmul   DWORD PTR [eax]
  41600f:	and    bl,BYTE PTR [ebp-0x5e319a89]
  416015:	into   
  416016:	pop    ebp
  416017:	ficom  WORD PTR [ebx]
  416019:	xor    DWORD PTR [esi+0x278cc700],esp
  41601f:	inc    ebx
  416020:	ja     0x41608b
  416022:	pop    ebx
  416023:	jne    0x41609a
  416025:	adc    al,0x52
  416027:	lods   eax,DWORD PTR ds:[esi]
  416028:	sar    DWORD PTR [edx+0x5c],0xb3
  41602c:	push   ebp
  41602d:	shr    bh,1
  41602f:	in     eax,0xa8
  416031:	pusha  
  416032:	scas   eax,DWORD PTR es:[edi]
  416033:	fst    DWORD PTR [edi]
  416035:	push   ebx
  416036:	mov    WORD PTR [ebx],ds
  416038:	popa   
  416039:	inc    edx
  41603a:	push   esi
  41603b:	add    DWORD PTR [ebp+0x6d187826],eax
  416041:	jge    0x416013
  416043:	and    BYTE PTR [edx+ebx*4-0x21be8c9f],0x2b
  41604b:	nop
  41604c:	adc    al,0x3b
  41604e:	ds and eax,0x88d44e32
  416054:	and    BYTE PTR [ebp-0x1fc40ee5],0x6d
  41605b:	push   edi
  41605c:	or     ah,dh
  41605e:	(bad)  
  416060:	sbb    dl,dh
  416062:	cmp    al,0xdd
  416064:	add    eax,0xabf4c21c
  416069:	jle    0x415ffc
  41606b:	enter  0x1488,0x97
  41606f:	ss out 0xb5,al
  416072:	int3   
  416073:	adc    eax,0xb04dc790
  416078:	mov    gs,eax
  41607a:	outs   dx,DWORD PTR ds:[esi]
  41607b:	arpl   si,cx
  41607d:	adc    eax,0x23c57b11
  416082:	mov    eax,0x4393d7e3
  416087:	(bad)  
  416088:	push   ebx
  416089:	retf   
  41608a:	jmp    0x71bbef98
  41608f:	call   0x2a2add10
  416094:	jns    0x4160c8
  416096:	lods   al,BYTE PTR ds:[esi]
  416097:	test   eax,0x40d87a3
  41609c:	leave  
  41609d:	sbb    edi,edi
  41609f:	out    dx,al
  4160a0:	addr16 loopne 0x4160e2
  4160a3:	out    dx,al
  4160a4:	dec    edi
  4160a5:	loopne 0x4160f3
  4160a7:	mov    ecx,0x6c20130a
  4160ac:	cmc    
  4160ad:	test   DWORD PTR [esi],0x5e4b8aa6
  4160b3:	ret    
  4160b4:	into   
  4160b5:	shl    BYTE PTR [eax-0x79],1
  4160b8:	and    DWORD PTR [ebp+0x3f0f3518],0x300df82c
  4160c2:	and    eax,0x3ca28401
  4160c7:	jne    0x416137
  4160c9:	xchg   esi,eax
  4160ca:	repz sahf 
  4160cc:	out    dx,al
  4160cd:	push   cs
  4160ce:	aaa    
  4160cf:	dec    edi
  4160d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160d1:	retf   
  4160d2:	jl     0x4160a7
  4160d4:	in     eax,dx
  4160d5:	data16 cmp BYTE PTR [eax],al
  4160d8:	pop    esp
  4160d9:	movzx  esi,BYTE PTR [esp+ebx*8-0x67489b15]
  4160e1:	aaa    
  4160e2:	lahf   
  4160e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e4:	test   al,0x1
  4160e6:	xor    al,0x26
  4160e8:	push   ds
  4160e9:	xchg   BYTE PTR [ebx],al
  4160eb:	mov    al,ds:0xc2115dbc
  4160f0:	test   eax,0x7ecb1482
  4160f5:	mov    ds:0x3e9e9d6f,eax
  4160fa:	stc    
  4160fb:	push   ecx
  4160fc:	add    eax,0x5ce7bd38
  416101:	scas   eax,DWORD PTR es:[edi]
  416102:	push   es
  416103:	rcl    DWORD PTR [ebx+0x20361a40],0xdf
  41610a:	jge    0x4160b1
  41610c:	mov    ebp,0x9ba9d5a7
  416111:	push   0xffffff8c
  416113:	int    0xef
  416115:	stc    
  416116:	dec    BYTE PTR [edx+0x7912ddfd]
  41611c:	sub    BYTE PTR [edx-0x16],bl
  41611f:	mov    ebp,DWORD PTR [ebx-0x2]
  416122:	jo     0x416123
  416124:	aam    0xc6
  416126:	dec    esp
  416127:	push   edx
  416128:	in     eax,0x27
  41612a:	push   ecx
  41612b:	pop    edi
  41612c:	shr    BYTE PTR ds:0xc5a26c09,1
  416132:	sbb    BYTE PTR [edx+esi*8+0x6f],bh
  416136:	pop    DWORD PTR [edx+0x23]
  416139:	dec    edi
  41613a:	dec    edi
  41613b:	add    dh,BYTE PTR [ebp-0x18953a2f]
  416141:	addr16 mov ds:0x33c1,eax
  416145:	pop    ss
  416146:	pushw  ds
  416148:	aad    0x5f
  41614a:	sub    DWORD PTR [edx-0x79c1ee54],0x3ad2c34c
  416154:	mov    ds:0x1a9bdfd8,eax
  416159:	jb     0x4160ea
  41615b:	dec    edx
  41615c:	dec    ebx
  41615d:	fst    QWORD PTR [edi+0x13b5c20d]
  416163:	idiv   DWORD PTR [ebx-0x73]
  416166:	push   esp
  416167:	call   0x35e7:0x8b6a9cbb
  41616e:	imul   BYTE PTR ds:0x2223c862
  416174:	inc    edx
  416175:	data16 sti 
  416177:	push   eax
  416178:	fistp  QWORD PTR [ebx+0x508b6c51]
  41617e:	sub    eax,0xd8e3f8df
  416183:	std    
  416184:	stos   BYTE PTR es:[edi],al
  416185:	in     al,dx
  416186:	jg     0x41614d
  416188:	pop    ds
  416189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41618a:	stos   BYTE PTR es:[edi],al
  41618b:	out    0x96,eax
  41618d:	sar    BYTE PTR [ecx],0x60
  416190:	data16 and cl,bl
  416193:	add    ebx,DWORD PTR [esi]
  416195:	or     dl,BYTE PTR [ebx-0x13]
  416198:	ins    BYTE PTR es:[edi],dx
  416199:	icebp  
  41619a:	popf   
  41619b:	add    bl,dh
  41619d:	sti    
  41619e:	mov    WORD PTR [eax-0x1b],?
  4161a1:	sub    eax,0xc67c34bc
  4161a6:	outs   dx,BYTE PTR ds:[esi]
  4161a7:	daa    
  4161a8:	mov    DWORD PTR [eax+esi*1+0x7c963c1e],0x1c9206ab
  4161b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b4:	xchg   esi,eax
  4161b5:	xchg   edi,eax
  4161b6:	aaa    
  4161b7:	mov    edi,0xde8b4b26
  4161bc:	test   DWORD PTR [ebx-0x5bbd2675],ecx
  4161c2:	push   edx
  4161c3:	mov    bh,al
  4161c5:	mov    al,ds:0x768f2b38
  4161ca:	lahf   
  4161cb:	jns    0x416195
  4161cd:	add    edi,DWORD PTR [esi-0x74]
  4161d0:	xor    ch,bl
  4161d2:	mov    cl,0x64
  4161d4:	cmp    edi,DWORD PTR [edi-0x47e9dfb4]
  4161da:	scas   eax,DWORD PTR es:[edi]
  4161db:	fld    TBYTE PTR es:[edi]
  4161de:	cmc    
  4161df:	adc    esi,DWORD PTR [ebx+0x6c]
  4161e2:	adc    al,0x12
  4161e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161e5:	ins    DWORD PTR es:[edi],dx
  4161e6:	and    BYTE PTR [edx+0x7f365e6f],bl
  4161ec:	std    
  4161ed:	sub    BYTE PTR [edx+ebp*1-0x57],dl
  4161f1:	(bad)  
  4161f2:	frstor [ecx-0x7]
  4161f5:	lods   al,BYTE PTR ds:[esi]
  4161f6:	aad    0xc1
  4161f8:	jmp    0x41626c
  4161fa:	fdivr  st(7),st
  4161fc:	mov    eax,0x74205d4e
  416201:	mov    eax,0x536cfa50
  416206:	jae    0x416239
  416208:	mov    edx,0x37881ade
  41620d:	cli    
  41620e:	sbb    BYTE PTR [ecx+0x78d98272],ch
  416214:	and    ah,BYTE PTR [edi+0x30]
  416217:	mov    al,ds:0x49ec1488
  41621c:	iret   
  41621d:	(bad)  
  41621e:	das    
  41621f:	or     DWORD PTR [ecx+eax*2],0x440f2748
  416226:	sbb    ah,BYTE PTR [ecx+eiz*1]
  416229:	cmp    ah,cl
  41622b:	mov    bh,0x26
  41622d:	mov    ah,0x56
  41622f:	ret    0x4b7b
  416232:	jbe    0x416201
  416234:	add    eax,0xeba8cf0
  416239:	dec    ebp
  41623a:	mov    eax,0x32980db4
  41623f:	aas    
  416240:	adc    BYTE PTR [esi+0x4bc55670],ah
  416246:	js     0x41628f
  416248:	pop    ss
  416249:	add    ch,cl
  41624b:	dec    eax
  41624c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624d:	mov    esi,0xf32c3511
  416252:	jl     0x4162ad
  416254:	inc    esi
  416255:	out    0x9d,eax
  416257:	jb     0x41625f
  416259:	xchg   ecx,eax
  41625a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625b:	adc    eax,0xf7ab0e96
  416260:	jb     0x4162d1
  416262:	xor    DWORD PTR [esi],eax
  416264:	adc    BYTE PTR [esi*4-0xfd6c408],dl
  41626b:	in     al,dx
  41626c:	and    bl,al
  41626e:	jmp    0xd672a285
  416273:	push   0x0
  416275:	dec    edi
  416276:	cmp    eax,0x14d5065f
  41627b:	inc    ebp
  41627c:	xlat   BYTE PTR ds:[ebx]
  41627d:	les    ebp,FWORD PTR [eax+ebx*4-0x1052e7d5]
  416284:	inc    ecx
  416285:	jmp    0xc60a:0x1bd9176d
  41628c:	mov    ch,0x93
  41628e:	dec    ebp
  41628f:	jecxz  0x41621a
  416291:	ret    0x3602
  416294:	jns    0x4162eb
  416296:	(bad)  
  416297:	sub    al,0x6b
  416299:	dec    DWORD PTR [eax]
  41629b:	jb     0x416276
  41629d:	mov    ebx,0xc166920f
  4162a2:	dec    ecx
  4162a3:	mov    bh,BYTE PTR [ecx]
  4162a5:	xor    DWORD PTR [eiz*1-0x4d1e175],ebp
  4162ac:	mov    esi,DWORD PTR [esi]
  4162ae:	sti    
  4162af:	repz aas 
  4162b1:	push   esp
  4162b2:	iret   
  4162b3:	and    ebx,DWORD PTR [eax-0x213c9d48]
  4162b9:	or     edi,DWORD PTR [edx+0x3c]
  4162bc:	ret    
  4162bd:	dec    ebx
  4162be:	mov    edx,DWORD PTR [edi]
  4162c0:	fld    DWORD PTR [ebx]
  4162c2:	ret    
  4162c3:	imul   ecx,DWORD PTR [ebp-0x2183c84],0xffffffd5
  4162ca:	sbb    DWORD PTR [edi-0x4e],0x4be65135
  4162d1:	add    esi,DWORD PTR [ebp+0x4329da88]
  4162d7:	out    dx,eax
  4162d8:	dec    edi
  4162d9:	push   edi
  4162da:	(bad)  
  4162db:	ror    DWORD PTR [esi],1
  4162dd:	test   BYTE PTR [ebx-0x3f762fca],bl
  4162e3:	pop    ebp
  4162e4:	sub    BYTE PTR [edx-0x3ebf5e27],ah
  4162ea:	xor    DWORD PTR [ebx-0x26],eax
  4162ed:	and    DWORD PTR [eax+0x904818f],eax
  4162f3:	xchg   edi,eax
  4162f4:	les    ebp,FWORD PTR [ebx]
  4162f6:	and    esp,DWORD PTR [ecx]
  4162f8:	xchg   BYTE PTR [edi],al
  4162fa:	inc    edx
  4162fb:	mov    ds:0x30dcc768,al
  416300:	repnz or al,0x89
  416303:	(bad)  
  416304:	loopne 0x4162e2
  416306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416307:	mov    edx,0x98f6c595
  41630c:	push   eax
  41630d:	jno    0x416347
  41630f:	into   
  416310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416311:	sbb    al,0xb5
  416313:	cmp    BYTE PTR [esi+edx*2],ch
  416316:	xchg   edx,eax
  416317:	push   esp
  416318:	mov    BYTE PTR [edx+esi*8-0x2d],dh
  41631c:	popa   
  41631d:	mov    esp,0x174c9b5a
  416322:	cmp    DWORD PTR [edx],esi
  416324:	xor    al,0xa6
  416326:	add    ebp,ebp
  416328:	xor    dh,BYTE PTR es:[ecx]
  41632b:	(bad)  
  41632c:	xlat   BYTE PTR ds:[ebx]
  41632d:	xor    al,0x58
  41632f:	bound  ebx,QWORD PTR [ebx+0x1f]
  416332:	lahf   
  416333:	mov    dl,0xab
  416335:	in     al,0xf
  416337:	sbb    esp,DWORD PTR [ecx]
  416339:	cmc    
  41633a:	xor    al,0x21
  41633c:	push   ss
  41633d:	out    0x43,al
  41633f:	ins    BYTE PTR es:[edi],dx
  416340:	scas   eax,DWORD PTR es:[edi]
  416341:	ds and eax,0xd434f87d
  416347:	push   es
  416348:	popf   
  416349:	fisubr WORD PTR [ecx-0x11494fcd]
  41634f:	and    al,0x96
  416351:	ffreep st(2)
  416353:	scas   al,BYTE PTR es:[edi]
  416354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416355:	sar    ecx,cl
  416357:	jo     0x416359
  416359:	into   
  41635a:	push   0x3
  41635c:	sbb    eax,0xba6d841f
  416361:	aas    
  416362:	dec    ebp
  416363:	ret    0xbd59
  416366:	fbstp  TBYTE PTR [esi+eax*4-0x71]
  41636a:	cld    
  41636b:	mov    edx,0x1d31a9aa
  416370:	in     al,0xf2
  416372:	sbb    ch,BYTE PTR [esi]
  416374:	loop   0x416328
  416376:	imul   DWORD PTR [ebx+0xe6b6e0c]
  41637c:	js     0x41632e
  41637e:	cli    
  41637f:	aad    0x23
  416381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416382:	ja     0x41637a
  416384:	mov    edi,0x4f410244
  416389:	push   cs
  41638a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41638b:	aaa    
  41638c:	(bad)  
  41638e:	mov    al,0xa0
  416390:	pop    ss
  416391:	xchg   edx,eax
  416392:	mov    bl,BYTE PTR [ebp-0x7]
  416395:	outs   dx,DWORD PTR ds:[esi]
  416396:	call   0xa929:0x8c838304
  41639d:	fiadd  WORD PTR [esi+0x6f]
  4163a0:	fcomip st,st(2)
  4163a2:	mov    edi,0x571abf3e
  4163a7:	xchg   ebp,eax
  4163a8:	push   eax
  4163a9:	xchg   edi,eax
  4163aa:	(bad)  
  4163ab:	mov    eax,ds:0xfd9fc65b
  4163b0:	cmp    ah,ch
  4163b2:	and    BYTE PTR [ebp-0x75],dh
  4163b5:	cmp    esp,DWORD PTR [ebp+0x6d]
  4163b8:	push   es
  4163b9:	ror    BYTE PTR [edx+0x22e49b34],1
  4163bf:	es lahf 
  4163c1:	mov    ebx,0x2869bf21
  4163c6:	repnz out 0x8e,al
  4163c9:	js     0x416363
  4163cb:	rol    BYTE PTR [ecx+0x4a],0x6b
  4163cf:	pop    eax
  4163d0:	push   ebp
  4163d1:	mov    ds,WORD PTR [ecx+0x69259a0a]
  4163d7:	inc    esi
  4163d8:	mov    esp,0x563ff9f6
  4163dd:	mov    eax,gs:0x7097f65e
  4163e3:	sub    ebp,DWORD PTR [ebx]
  4163e5:	retf   0x3a99
  4163e8:	sub    edi,DWORD PTR ds:0x6ea3968d
  4163ee:	int    0x4a
  4163f0:	pop    ds
  4163f1:	inc    edx
  4163f2:	xor    DWORD PTR [edi],esp
  4163f4:	and    bl,BYTE PTR [edi-0x5a5ca28a]
  4163fa:	popa   
  4163fb:	out    0xa8,eax
  4163fd:	push   esi
  4163fe:	adc    BYTE PTR [ebp-0x1f],ch
  416401:	mov    eax,0x94e52811
  416406:	enter  0x380d,0x3e
  41640a:	xchg   esi,eax
  41640b:	mov    dh,0xd2
  41640d:	int3   
  41640e:	xchg   esi,eax
  41640f:	pop    esi
  416410:	pop    ebx
  416411:	in     eax,dx
  416412:	mov    eax,ds:0x855cbe1a
  416417:	push   ss
  416418:	xchg   BYTE PTR [esi-0x3177cbda],dl
  41641e:	stc    
  41641f:	bound  eax,QWORD PTR [edx+edx*4+0x31]
  416423:	sbb    DWORD PTR [esi+edx*1-0x5a],edi
  416427:	lods   al,BYTE PTR ds:[esi]
  416428:	call   0xe76e:0x6fc28206
  41642f:	popa   
  416430:	std    
  416431:	sbb    ecx,DWORD PTR [edx-0x8fbc7df]
  416437:	loope  0x41644c
  416439:	call   0xe8b2:0xb510ba24
  416440:	mov    eax,ds:0x1f4f9eef
  416445:	ins    DWORD PTR es:[edi],dx
  416446:	mov    ah,0xa2
  416448:	inc    eax
  416449:	mov    dl,BYTE PTR [ecx+0x36]
  41644c:	cmp    al,0x8e
  41644e:	pop    esi
  41644f:	sub    eax,0xd2c0c4ba
  416454:	out    dx,al
  416455:	bnd jns 0x4164bf
  416458:	(bad)  
  416459:	push   cs
  41645a:	imul   esi,DWORD PTR [ebp-0x5eb44f18],0x6a7b9c20
  416464:	dec    ecx
  416465:	add    eax,DWORD PTR [eax]
  416467:	icebp  
  416468:	add    BYTE PTR [ebp+0x4f31b8ff],dl
  41646e:	and    DWORD PTR [ebp-0x11998b95],ebp
  416474:	jbe    0x416405
  416476:	cwde   
  416477:	or     esp,DWORD PTR [ecx-0x6e30b042]
  41647d:	cmc    
  41647e:	lods   eax,DWORD PTR ds:[esi]
  41647f:	or     cl,bl
  416481:	xor    eax,0xb2c8d16f
  416486:	jecxz  0x416493
  416488:	xor    al,0xa0
  41648a:	push   ebp
  41648b:	add    ch,BYTE PTR [edx]
  41648d:	push   esi
  41648e:	jle    0x416470
  416490:	call   0x52fe693d
  416495:	loope  0x416443
  416497:	les    eax,FWORD PTR [ebx]
  416499:	stc    
  41649a:	or     al,0x16
  41649c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649d:	jmp    0xe3b7:0xc113f667
  4164a4:	dec    esi
  4164a5:	les    edx,FWORD PTR [edi]
  4164a7:	(bad)  
  4164a8:	fimul  WORD PTR [ebx+0x14]
  4164ab:	inc    ebp
  4164ac:	test   al,0x7e
  4164ae:	call   0xda6e:0x440e550d
  4164b5:	push   0x25
  4164b7:	pop    eax
  4164b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b9:	ja     0x41648c
  4164bb:	cmp    eax,0xa7772acc
  4164c0:	std    
  4164c1:	adc    dh,BYTE PTR [ebx-0x6d]
  4164c4:	mov    ah,0x9a
  4164c6:	test   BYTE PTR [esp+ecx*1-0x6775248c],al
  4164cd:	jle    0x416501
  4164cf:	jmp    0xea64:0xdaf86e4c
  4164d6:	cmp    BYTE PTR [ecx+0x277e2b10],dh
  4164dc:	push   ebp
  4164dd:	cmp    DWORD PTR [edi-0x182d5a33],esi
  4164e3:	fistp  QWORD PTR [ebp-0x69]
  4164e6:	cdq    
  4164e7:	jae    0x416500
  4164e9:	or     al,0x21
  4164eb:	pop    edi
  4164ec:	fdiv   QWORD PTR [ecx]
  4164ee:	mov    ebp,0xe78dc320
  4164f3:	push   cs
  4164f4:	ret    
  4164f5:	sbb    eax,0x1bc4ae5
  4164fa:	xchg   ecx,eax
  4164fb:	mov    eax,0x8693d534
  416500:	(bad)  [esi+0x27ce94a2]
  416506:	fwait
  416507:	pop    esi
  416508:	fidivr DWORD PTR [edi-0xb]
  41650b:	pop    esi
  41650c:	inc    ebp
  41650d:	push   esp
  41650e:	adc    eax,0xc7f4ee69
  416513:	or     DWORD PTR [edx],esi
  416515:	mov    ecx,0x251696f
  41651a:	push   0xffffff97
  41651c:	mov    esp,ebx
  41651e:	inc    esp
  41651f:	xchg   esp,eax
  416520:	cmp    DWORD PTR cs:0x748328fd,esi
  416527:	ret    
  416528:	scas   al,BYTE PTR es:[edi]
  416529:	mov    eax,0x91d2cc60
  41652e:	jbe    0x41652a
  416530:	nop
  416531:	sbb    eax,0x24774a34
  416536:	mov    al,0x47
  416538:	jne    0x4165a5
  41653a:	aad    0x9b
  41653c:	xchg   edi,eax
  41653d:	pop    edi
  41653e:	popa   
  41653f:	imul   ecx,DWORD PTR [ebp-0x274e3a5a],0xffffff8c
  416546:	and    al,0x63
  416548:	dec    esi
  416549:	push   ebp
  41654a:	(bad)  
  41654b:	in     eax,dx
  41654c:	ds mov al,0x2f
  41654f:	(bad)  
  416550:	pop    ecx
  416551:	inc    esi
  416552:	sahf   
  416553:	pop    es
  416554:	cld    
  416555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416556:	out    0x5d,al
  416558:	nop
  416559:	add    cl,dl
  41655b:	repnz nop
  41655d:	jmp    0x781387b6
  416562:	mov    dh,0x20
  416564:	xor    eax,0xa0408efa
  416569:	push   cs
  41656a:	out    0x84,eax
  41656c:	jmp    0xe9ca:0x7965674d
  416573:	or     ebp,DWORD PTR ds:0x97b722c4
  416579:	dec    ebx
  41657a:	(bad)  
  41657b:	aas    
  41657c:	test   al,0xe4
  41657e:	adc    BYTE PTR [edi-0x6756701f],dl
  416584:	fwait
  416585:	hlt    
  416586:	push   edi
  416587:	imul   ebp,DWORD PTR [esi],0xf9837f16
  41658d:	lods   al,BYTE PTR ds:[esi]
  41658e:	icebp  
  41658f:	mov    cl,0x31
  416591:	scas   al,BYTE PTR es:[edi]
  416592:	mov    bl,ch
  416594:	imul   esi,DWORD PTR [ebx],0x8852af4a
  41659a:	pushf  
  41659b:	adc    esi,DWORD PTR [ebp-0x1f]
  41659e:	imul   edx,DWORD PTR [ebx-0x73],0x24
  4165a2:	stc    
  4165a3:	mov    edi,0x8ce92eb6
  4165a8:	xchg   edx,eax
  4165a9:	xlat   BYTE PTR ds:[ebx]
  4165aa:	lods   eax,DWORD PTR ds:[esi]
  4165ab:	mov    dh,0x98
  4165ad:	test   edx,edx
  4165af:	mov    ebx,esi
  4165b1:	imul   esp,DWORD PTR [edi-0x472691ac],0x2de4ab39
  4165bb:	or     BYTE PTR [ecx+0x399a4ac5],0xc9
  4165c2:	inc    edi
  4165c3:	ja     0x4165cf
  4165c5:	jp     0x41658c
  4165c7:	test   eax,0x75505b5f
  4165cc:	pop    esi
  4165cd:	(bad)  
  4165ce:	jno    0x4165da
  4165d0:	mov    bh,bh
  4165d2:	add    eax,0xe8190b8d
  4165d7:	test   DWORD PTR [edx+0x346283c3],esp
  4165dd:	jae    0x4165e3
  4165df:	jbe    0x416634
  4165e1:	or     dl,dh
  4165e3:	sbb    al,0x7a
  4165e5:	pop    edx
  4165e6:	stc    
  4165e7:	adc    DWORD PTR [edx-0x5709173d],edi
  4165ed:	push   ebx
  4165ee:	es inc edx
  4165f0:	inc    ebx
  4165f1:	mov    BYTE PTR [eax-0x32593f0f],0x9a
  4165f8:	cmp    al,bh
  4165fa:	xor    al,0x23
  4165fc:	cmc    
  4165fd:	inc    esi
  4165fe:	adc    ch,BYTE PTR [ecx+0x68497c08]
  416604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416605:	adc    bh,bh
  416607:	outs   dx,DWORD PTR ds:[esi]
  416608:	sub    al,0xd3
  41660a:	fwait
  41660b:	cmp    DWORD PTR [edi+0x1f862035],0x7b
  416612:	sub    eax,0x245400f1
  416617:	pop    eax
  416618:	pop    ebx
  416619:	jbe    0x4165dc
  41661b:	jae    0x4165a1
  41661d:	xor    al,0x2a
  41661f:	ret    
  416620:	jl     0x416611
  416622:	mov    BYTE PTR [ebx+ecx*2],ah
  416625:	dec    esi
  416626:	ret    
  416627:	cs mov ch,0xd
  41662a:	xor    dl,BYTE PTR [ecx+0x40]
  41662d:	sbb    al,0x1c
  41662f:	cmp    BYTE PTR [edx],bl
  416631:	mov    ecx,gs
  416633:	mov    esi,eax
  416635:	(bad)  
  416636:	cmp    al,0x19
  416638:	xchg   esi,eax
  416639:	jl     0x416635
  41663b:	shl    BYTE PTR fs:[eax],1
  41663e:	bound  edx,QWORD PTR [ebx-0x74]
  416641:	js     0x416662
  416643:	or     eax,0xc10bfe1e
  416648:	and    DWORD PTR [edi+0x6469b966],ebp
  41664e:	lods   al,BYTE PTR ds:[esi]
  41664f:	pop    esi
  416650:	sub    BYTE PTR [esi+0x4],bh
  416653:	icebp  
  416654:	add    DWORD PTR [esi+edi*2-0x33b241f8],ebp
  41665b:	lahf   
  41665c:	rcl    BYTE PTR [edx+0x60],0x97
  416660:	retf   
  416661:	lods   eax,DWORD PTR ds:[esi]
  416662:	icebp  
  416663:	push   ecx
  416664:	pop    eax
  416665:	add    BYTE PTR [esi+ebx*2],bh
  416668:	bound  ebx,QWORD PTR [edi+0x7]
  41666b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41666c:	xlat   BYTE PTR ds:[ebx]
  41666d:	jb     0x416670
  41666f:	xor    eax,0x53fd25b4
  416674:	inc    esi
  416675:	cmp    BYTE PTR [edi+ecx*8],0xaf
  416679:	in     eax,dx
  41667a:	rcl    DWORD PTR [edi],0x8
  41667d:	clc    
  41667e:	fbstp  TBYTE PTR [edi-0x6b3beefd]
  416684:	aam    0xb9
  416686:	xchg   esi,eax
  416687:	js     0x4166fa
  416689:	mov    al,ds:0x76984a96
  41668e:	ror    BYTE PTR [eax+0x77],cl
  416691:	and    ebp,DWORD PTR [ecx+eiz*4+0x31]
  416695:	int    0x3f
  416697:	out    0xa,eax
  416699:	scas   al,BYTE PTR es:[edi]
  41669a:	enter  0xeb3d,0x23
  41669e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41669f:	ffreep st(0)
  4166a1:	push   ebx
  4166a2:	mov    ebx,0xfb787d08
  4166a7:	int3   
  4166a8:	pop    esi
  4166a9:	xor    BYTE PTR [edx-0x65],ch
  4166ac:	retf   
  4166ad:	lds    ecx,FWORD PTR [edi+esi*8]
  4166b0:	(bad)  
  4166b2:	retf   0xda97
  4166b5:	outs   dx,DWORD PTR ds:[esi]
  4166b6:	mov    dl,0x42
  4166b8:	xchg   esp,eax
  4166b9:	sub    ecx,eax
  4166bb:	adc    al,0x3a
  4166bd:	test   bh,0x93
  4166c0:	inc    edi
  4166c1:	push   0xffffffb2
  4166c3:	lea    esp,[edi-0xaaefe68]
  4166c9:	scas   al,BYTE PTR es:[edi]
  4166ca:	cdq    
  4166cb:	es or  al,0x98
  4166ce:	inc    esi
  4166cf:	gs pop ecx
  4166d1:	or     eax,0x8c99f0b1
  4166d6:	mov    DWORD PTR [ebp+0x487a8f04],edi
  4166dc:	push   0xffffff86
  4166de:	(bad)  
  4166df:	ds xchg ebp,eax
  4166e1:	es scas al,BYTE PTR es:[edi]
  4166e3:	inc    esp
  4166e4:	fdiv   st,st(4)
  4166e6:	mov    bh,0x52
  4166e8:	xchg   esi,eax
  4166e9:	or     DWORD PTR [ecx-0x19],ebx
  4166ec:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4166ee:	jo     0x4166e6
  4166f0:	jmp    0x71bb:0x8ab6f772
  4166f7:	out    0xd8,eax
  4166f9:	pusha  
  4166fa:	out    dx,al
  4166fb:	scas   eax,DWORD PTR es:[edi]
  4166fc:	loop   0x41669b
  4166fe:	jmp    0x4166da
  416700:	push   ds
  416701:	gs aaa 
  416703:	add    eax,0xe5758bd8
  416708:	in     al,dx
  416709:	inc    eax
  41670a:	fcomp  DWORD PTR [edx-0xfcf05df]
  416710:	mov    esi,0xa093c395
  416715:	push   esp
  416716:	xchg   ebp,eax
  416717:	in     al,0x9a
  416719:	mov    bl,bl
  41671b:	push   ds
  41671c:	stos   DWORD PTR es:[edi],eax
  41671d:	or     al,0xf4
  41671f:	enter  0x10aa,0x4a
  416723:	lock lods al,BYTE PTR ds:[esi]
  416725:	mov    al,0xc2
  416727:	dec    ecx
  416728:	mov    cl,0xf7
  41672a:	shl    DWORD PTR ds:0x906dbf83,cl
  416730:	xchg   DWORD PTR [ecx],ebx
  416732:	jmp    0xbe1054b0
  416737:	or     al,0x64
  416739:	pop    es
  41673a:	mov    dl,0x2f
  41673c:	pop    ecx
  41673d:	xor    eax,0x3137e9a
  416742:	retf   0xeccb
  416745:	push   0x96d9b19b
  41674a:	jae    0x416786
  41674c:	mov    ecx,0x9224f067
  416751:	retf   
  416752:	xchg   esp,eax
  416753:	es hlt 
  416755:	pop    ebx
  416756:	push   ecx
  416757:	mov    esp,0x5136c7d5
  41675c:	cmp    ebx,DWORD PTR [ecx-0x9]
  41675f:	outs   dx,DWORD PTR ds:[esi]
  416760:	inc    esi
  416761:	sub    eax,0x34e3dfb0
  416766:	fild   QWORD PTR [edi-0xeaced3c]
  41676c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41676d:	fadd   DWORD PTR [ebp+0x33]
  416770:	loope  0x4167ca
  416772:	aam    0x1a
  416774:	out    0x27,eax
  416776:	xchg   ebx,eax
  416777:	push   edi
  416778:	mov    ah,0x59
  41677a:	ret    0xe03d
  41677d:	rol    DWORD PTR ds:0xffbb71df,1
  416783:	iret   
  416784:	fisttp WORD PTR [ecx+edx*8]
  416787:	rcl    ecx,0xd0
  41678a:	jo     0x41677c
  41678c:	scas   eax,DWORD PTR es:[edi]
  41678d:	sub    BYTE PTR [bx+di],0xf8
  416791:	out    0x7a,eax
  416793:	pop    ds
  416794:	add    ebp,DWORD PTR [edx]
  416796:	call   FWORD PTR [ebx]
  416798:	mul    DWORD PTR [esp+eax*4+0x1cef90d4]
  41679f:	push   cs
  4167a0:	xor    BYTE PTR [eax-0x4a],dl
  4167a3:	mov    al,ds:0x3def9986
  4167a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a9:	into   
  4167aa:	adc    ah,bl
  4167ac:	push   0x83ecf482
  4167b1:	das    
  4167b2:	mov    dl,0xc9
  4167b4:	in     al,0x54
  4167b6:	int    0x46
  4167b8:	push   ss
  4167b9:	jne    0x416794
  4167bb:	sub    ch,BYTE PTR [edi]
  4167bd:	imul   esp,DWORD PTR [eax+0x56],0x5f
  4167c1:	and    al,0x32
  4167c3:	cmovl  edi,DWORD PTR [edi+0x6e]
  4167c7:	lahf   
  4167c8:	or     ebx,DWORD PTR [ebp+eiz*2-0x26d29145]
  4167cf:	mov    ebx,0xc7d9e124
  4167d4:	push   es
  4167d5:	mov    es,WORD PTR [eax-0x46]
  4167d8:	dec    edi
  4167d9:	push   0x3525e814
  4167de:	test   DWORD PTR ds:0xf61897f5,ebp
  4167e4:	fisub  WORD PTR [edi]
  4167e6:	enter  0xf2f9,0x8b
  4167ea:	int    0x21
  4167ec:	jp     0x4167f9
  4167ee:	cmc    
  4167ef:	xchg   edx,eax
  4167f0:	mov    bl,0x9c
  4167f2:	push   esp
  4167f3:	sbb    BYTE PTR [edi-0x72],ah
  4167f6:	shl    BYTE PTR [edi],0xae
  4167f9:	push   ds
  4167fa:	add    esi,DWORD PTR [esi]
  4167fc:	aas    
  4167fd:	and    ch,ch
  4167ff:	push   eax
  416800:	call   DWORD PTR [si-0x2b]
  416804:	or     eax,0x661128e7
  416809:	and    esi,DWORD PTR [esi+0x4c25fff6]
  41680f:	adc    DWORD PTR [ecx+0x3c688dbd],ebp
  416815:	dec    esi
  416816:	in     al,dx
  416817:	(bad)  
  416818:	retf   0x2073
  41681b:	sti    
  41681c:	popa   
  41681d:	xchg   esp,eax
  41681e:	aad    0xa6
  416820:	(bad)  
  416821:	fmul   DWORD PTR [ebx+0x3cf2e1d5]
  416827:	or     al,0x4b
  416829:	repnz out dx,eax
  41682b:	mov    cs,WORD PTR [edi+edi*4]
  41682e:	shl    BYTE PTR [ebx+0x20437a71],cl
  416834:	pop    es
  416835:	es shl esi,0xad
  416839:	inc    esp
  41683a:	jnp    0x416863
  41683c:	jo     0x4167ca
  41683e:	scas   al,BYTE PTR es:[edi]
  41683f:	pushf  
  416840:	push   ecx
  416841:	adc    eax,0xcb13c477
  416846:	loop   0x41680c
  416848:	inc    esp
  416849:	push   edx
  41684a:	sub    DWORD PTR ds:0x8bc40c4b,eax
  416850:	mov    ch,0xfe
  416852:	dec    ebx
  416853:	adc    al,0x8c
  416855:	inc    eax
  416856:	leave  
  416857:	xchg   esp,eax
  416858:	mov    ch,0xa1
  41685a:	mov    esi,0x5d296987
  41685f:	and    esi,DWORD PTR [edx+0x1cbd570f]
  416865:	jmp    0x416805
  416867:	fwait
  416868:	stos   BYTE PTR es:[edi],al
  416869:	mov    dh,BYTE PTR [esi+0x24]
  41686c:	inc    edi
  41686d:	call   0xdc99:0x3add40e1
  416874:	jo     0x4168a7
  416876:	fwait
  416877:	pop    ds
  416878:	lahf   
  416879:	int    0xdd
  41687b:	and    ebp,DWORD PTR [ebx-0x6e]
  41687e:	sbb    al,BYTE PTR [ebx+0x3f]
  416881:	cmp    ecx,DWORD PTR [edx-0x30447edd]
  416887:	dec    edx
  416888:	pop    esp
  416889:	mov    ch,0x70
  41688b:	inc    edi
  41688c:	aaa    
  41688d:	pop    esi
  41688e:	leave  
  41688f:	out    dx,al
  416890:	ja     0x416881
  416892:	(bad)  
  416893:	jge    0x416852
  416895:	outs   dx,BYTE PTR ds:[esi]
  416896:	inc    eax
  416897:	(bad)  
  416898:	mov    ecx,0x7ec2a42a
  41689d:	scas   al,BYTE PTR es:[edi]
  41689e:	enter  0x7b34,0xd9
  4168a2:	call   DWORD PTR [ebx-0x6de0c1cc]
  4168a8:	out    0xe4,eax
  4168aa:	outs   dx,BYTE PTR ds:[esi]
  4168ab:	or     ebp,ebx
  4168ad:	push   es
  4168ae:	xchg   ebp,eax
  4168af:	fwait
  4168b0:	les    edx,FWORD PTR [edi-0x3f]
  4168b3:	cmp    eax,0xe1328aca
  4168b8:	jle    0x41684f
  4168ba:	inc    esi
  4168bb:	cli    
  4168bc:	rcr    DWORD PTR [esi+0x16],0x3c
  4168c0:	inc    esi
  4168c1:	add    eax,eax
  4168c3:	stos   DWORD PTR es:[edi],eax
  4168c4:	mov    eax,0x81167835
  4168c9:	mov    eax,ds:0x73a58e99
  4168ce:	cmp    cl,BYTE PTR [esp+ebp*8]
  4168d1:	dec    ecx
  4168d2:	dec    edi
  4168d3:	dec    ebp
  4168d4:	data16 dec cl
  4168d7:	sub    dl,bl
  4168d9:	and    eax,0xa7249add
  4168de:	push   ebx
  4168df:	pop    esi
  4168e0:	enter  0x510d,0x19
  4168e4:	lock retf 
  4168e6:	sbb    DWORD PTR [edx+0x35],ebp
  4168e9:	cmc    
  4168ea:	jp     0x4168bf
  4168ec:	push   esp
  4168ed:	pop    edx
  4168ee:	les    ebp,FWORD PTR [ebp+0x4c]
  4168f1:	loop   0x416901
  4168f3:	adc    DWORD PTR [eax+ebp*8-0x2c],0x1e
  4168f8:	mov    eax,ds:0x3d43f169
  4168fd:	stos   DWORD PTR es:[edi],eax
  4168fe:	add    ebp,DWORD PTR [edx]
  416900:	pop    es
  416901:	dec    ebx
  416902:	ins    DWORD PTR es:[edi],dx
  416903:	add    dl,dl
  416905:	adc    ebp,eax
  416907:	mov    ds:0x207d9600,eax
  41690c:	aas    
  41690d:	pop    edi
  41690e:	es mov edx,0x65850e06
  416914:	adc    al,0xd8
  416916:	in     al,0xdc
  416918:	push   eax
  416919:	inc    ebx
  41691a:	pusha  
  41691b:	fcmovb st,st(5)
  41691d:	fwait
  41691e:	inc    edx
  41691f:	mov    esi,0x856fc079
  416924:	cs std 
  416926:	imul   edx,DWORD PTR [eax+0x57],0x5f
  41692a:	popa   
  41692b:	(bad)  
  41692c:	inc    BYTE PTR [esi+0x63]
  41692f:	jo     0x4169a6
  416931:	retf   
  416932:	and    eax,0xf40ce94a
  416937:	outs   dx,BYTE PTR ds:[esi]
  416938:	inc    ebx
  416939:	inc    edx
  41693a:	jno    0x416978
  41693c:	out    dx,eax
  41693d:	test   eax,0x884a5b8b
  416942:	popa   
  416943:	xchg   ecx,eax
  416944:	pop    ss
  416945:	daa    
  416946:	call   0xcc842576
  41694b:	mov    al,ss:0xe4109e66
  416951:	jo     0x416929
  416953:	cmp    al,0xa7
  416955:	or     DWORD PTR [edi],0x41969c97
  41695b:	pusha  
  41695c:	cmp    ebx,DWORD PTR [ebp+0x15]
  41695f:	lds    edi,FWORD PTR [ecx]
  416961:	xor    eax,0x87859fb0
  416966:	sbb    al,0x60
  416968:	mov    BYTE PTR ds:0x96e76f4c,cl
  41696e:	outs   dx,DWORD PTR ds:[esi]
  41696f:	and    bl,0xb3
  416972:	jns    0x4169cb
  416974:	out    0xb3,al
  416976:	or     eax,0xc200c52c
  41697b:	aaa    
  41697c:	xor    BYTE PTR [eax],0x5d
  41697f:	dec    eax
  416980:	jg     0x4169bb
  416982:	xchg   ebx,eax
  416983:	push   edx
  416984:	fcom   st(5)
  416986:	add    al,0xdd
  416988:	ja     0x416938
  41698a:	into   
  41698b:	bound  ebx,QWORD PTR [ebx+0x1c]
  41698e:	add    al,0x14
  416990:	push   ds
  416991:	retf   
  416992:	sti    
  416993:	add    BYTE PTR [eax+0x696f20bb],al
  416999:	fwait
  41699a:	sbb    al,0xe5
  41699c:	xor    dl,al
  41699e:	xor    cl,dl
  4169a0:	popa   
  4169a1:	rcr    ecx,cl
  4169a3:	icebp  
  4169a4:	dec    esi
  4169a5:	inc    ebp
  4169a6:	cwde   
  4169a7:	or     al,0xd3
  4169a9:	or     ah,BYTE PTR es:[edx-0x2]
  4169ad:	cdq    
  4169ae:	nop    esi
  4169b1:	inc    ebp
  4169b2:	jo     0x4169ed
  4169b4:	add    al,0x22
  4169b6:	aas    
  4169b7:	jg     0x416a07
  4169b9:	pop    esp
  4169ba:	test   eax,0x3cce8b05
  4169bf:	fidivr WORD PTR [edx]
  4169c1:	cld    
  4169c2:	int3   
  4169c3:	mov    esp,0x766a49a1
  4169c8:	std    
  4169c9:	jno    0x41697b
  4169cb:	sub    eax,0xf49699b8
  4169d0:	fisubr WORD PTR [ebx+esi*8]
  4169d3:	cwde   
  4169d4:	pop    esi
  4169d5:	mov    al,ds:0xea38b7b2
  4169da:	mov    esi,DWORD PTR [edx]
  4169dc:	push   ebp
  4169dd:	add    al,0x7e
  4169df:	mov    esp,0xbf409ca
  4169e4:	mov    ah,0x29
  4169e6:	mov    bl,BYTE PTR [esi+0x10]
  4169e9:	stos   BYTE PTR es:[edi],al
  4169ea:	into   
  4169eb:	push   edi
  4169ec:	mov    ss,WORD PTR [eax]
  4169ee:	imul   esp,DWORD PTR [edi-0x2bd1ee5b],0x45066ee0
  4169f8:	(bad)  
  4169f9:	adc    BYTE PTR [ecx+0x241d3673],dl
  4169ff:	leave  
  416a00:	pop    esi
  416a01:	in     al,dx
  416a02:	lock mov al,ds:0xd375c164
  416a08:	(bad)  
  416a09:	adc    eax,0x64869e1a
  416a0e:	add    al,0xf2
  416a10:	push   esi
  416a11:	mov    cl,0x26
  416a13:	sbb    eax,0x9109b3b6
  416a18:	popf   
  416a19:	or     al,0x59
  416a1b:	mov    edi,0xf936e02b
  416a20:	dec    esp
  416a21:	inc    ecx
  416a22:	rcr    BYTE PTR [edx-0x774614f5],1
  416a28:	leave  
  416a29:	fstp   DWORD PTR [esi+0x71]
  416a2c:	(bad)  
  416a2d:	aam    0xce
  416a2f:	xlat   BYTE PTR ds:[ebx]
  416a30:	pop    ds
  416a31:	not    BYTE PTR [esi]
  416a33:	lahf   
  416a34:	fdiv   QWORD PTR [eax-0x47]
  416a37:	xlat   BYTE PTR ds:[ebx]
  416a38:	and    DWORD PTR [edi],0x1c
  416a3b:	sub    ah,dl
  416a3d:	mov    eax,ds:0xdf41d1cc
  416a42:	sar    BYTE PTR [edi],0xb2
  416a45:	out    dx,eax
  416a46:	cmp    DWORD PTR [ecx+0x24],ebx
  416a49:	and    al,0x4e
  416a4b:	push   edx
  416a4c:	push   ebx
  416a4d:	sbb    esp,DWORD PTR [ebx]
  416a4f:	sbb    eax,0x6bd6c79e
  416a54:	or     ecx,DWORD PTR [ebx]
  416a56:	mov    dh,BYTE PTR ds:[esp+eax*1]
  416a5a:	mul    DWORD PTR [edx+esi*2]
  416a5d:	shr    BYTE PTR [edi],1
  416a5f:	push   ecx
  416a60:	fsub   st(4),st
  416a62:	out    0x97,al
  416a64:	je     0x416ab4
  416a66:	mov    DWORD PTR [esi],esp
  416a68:	cmp    ebx,DWORD PTR [esi-0x45ec1832]
  416a6e:	ss push cs
  416a70:	fbld   TBYTE PTR ds:0x982bf5b9
  416a76:	jle    0x416a21
  416a78:	ja     0x416a86
  416a7a:	popa   
  416a7b:	add    dl,BYTE PTR [ecx+0x13]
  416a7e:	sbb    cl,BYTE PTR [esp+ebx*1+0x51ee76ed]
  416a85:	sub    al,BYTE PTR [edi+0x31cae7dd]
  416a8b:	pusha  
  416a8c:	sbb    al,0xc5
  416a8e:	xchg   ebp,eax
  416a8f:	sub    eax,0xed6d926
  416a94:	add    BYTE PTR [esi],bh
  416a96:	push   edi
  416a97:	inc    ebp
  416a98:	jecxz  0x416a66
  416a9a:	in     al,0x1c
  416a9c:	mov    dl,bl
  416a9e:	rcl    esp,0x99
  416aa1:	les    esp,FWORD PTR [bp+di-0x1c]
  416aa5:	ins    BYTE PTR es:[edi],dx
  416aa6:	(bad)  
  416aa7:	cmp    dl,ah
  416aa9:	cmp    BYTE PTR [edx-0x3e],0x74
  416aad:	push   0xffffffc7
  416aaf:	in     eax,dx
  416ab0:	pop    ss
  416ab1:	std    
  416ab2:	pop    ss
  416ab3:	pop    esp
  416ab4:	pop    eax
  416ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab6:	adc    cl,BYTE PTR [eax+0x40]
  416ab9:	inc    esi
  416aba:	mov    dh,0x22
  416abc:	xor    esi,ecx
  416abe:	mov    ds:0x506ee7d0,eax
  416ac3:	add    esi,DWORD PTR [edi]
  416ac5:	or     bl,BYTE PTR [edi+ecx*4]
  416ac8:	adc    edi,DWORD PTR ds:0x89b5ef60
  416ace:	scas   eax,DWORD PTR es:[edi]
  416acf:	inc    ebp
  416ad0:	fimul  DWORD PTR [esi-0x6ddf91b]
  416ad6:	pop    ebp
  416ad7:	pop    edx
  416ad8:	push   esp
  416ad9:	pop    ebp
  416ada:	add    BYTE PTR [edx+0x1a],dl
  416add:	outs   dx,DWORD PTR ds:[esi]
  416ade:	inc    ebp
  416adf:	mov    bh,0x1b
  416ae1:	mov    ecx,0x2133ab23
  416ae6:	(bad)  
  416ae7:	(bad)  
  416ae9:	pop    DWORD PTR [eax-0x52272ca4]
  416aef:	retf   0x7afe
  416af2:	cdq    
  416af3:	mov    dl,0x24
  416af5:	ds nop
  416af7:	fwait
  416af8:	push   0x8f85935d
  416afd:	mov    edx,0x49619f4
  416b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b03:	je     0x416acf
  416b05:	add    BYTE PTR [eax],bh
  416b07:	sub    dl,0x40
  416b0a:	mov    ds:0x91611f6e,al
  416b0f:	pop    ss
  416b10:	xchg   DWORD PTR ds:0x73bbd2aa,edx
  416b16:	mov    bl,BYTE PTR ds:0x47875352
  416b1c:	mov    al,0x39
  416b1e:	inc    eax
  416b1f:	mov    dl,0x31
  416b21:	mov    dl,0xb9
  416b23:	sbb    ch,BYTE PTR [edx+0x52]
  416b26:	mov    bl,0xa
  416b28:	sbb    ebx,DWORD PTR [ecx]
  416b2a:	arpl   WORD PTR [ecx+0x125133f],sp
  416b30:	daa    
  416b31:	pop    ss
  416b32:	and    ebx,DWORD PTR [ebx+ebx*1+0x7]
  416b36:	(bad)  
  416b37:	xor    dl,BYTE PTR [edx-0x40]
  416b3a:	cmp    eax,0x16d518bf
  416b3f:	repnz and al,BYTE PTR [eax]
  416b42:	loope  0x416b5f
  416b44:	mov    BYTE PTR [ebp-0x4fd6407b],bl
  416b4a:	ror    bh,0xbf
  416b4d:	mov    bl,0x3f
  416b4f:	fs xor eax,0x85cc9303
  416b55:	dec    eax
  416b56:	dec    dl
  416b58:	pop    esp
  416b59:	or     DWORD PTR [esi],esi
  416b5b:	sti    
  416b5c:	jmp    0xb2212cf2
  416b61:	lods   al,BYTE PTR ds:[esi]
  416b62:	ins    BYTE PTR es:[edi],dx
  416b63:	fsubr  st(3),st
  416b65:	xchg   edx,eax
  416b66:	aaa    
  416b67:	test   DWORD PTR [esi+ebp*1-0x17],ebp
  416b6b:	loop   0x416bbc
  416b6d:	cmp    BYTE PTR [eax+0x74ffce6],bl
  416b73:	jl     0x416bc7
  416b75:	sbb    al,0xe5
  416b77:	inc    edx
  416b78:	fisub  DWORD PTR [eax+0x24]
  416b7b:	ins    DWORD PTR es:[edi],dx
  416b7c:	shr    DWORD PTR [esi+0x4e7e6dc0],1
  416b82:	mov    bh,0xea
  416b84:	jecxz  0x416b88
  416b86:	ins    BYTE PTR es:[edi],dx
  416b87:	aas    
  416b88:	rcl    ecx,cl
  416b8a:	sub    eax,0xc58dd1a0
  416b8f:	inc    edx
  416b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b91:	pop    edx
  416b92:	mov    edi,ecx
  416b94:	aam    0x97
  416b96:	mov    edi,0xc55f196a
  416b9b:	sbb    bh,BYTE PTR [esi+0x4bdaccc9]
  416ba1:	mov    dh,0x79
  416ba3:	jge    0x416b25
  416ba5:	and    DWORD PTR [edx],edx
  416ba7:	adc    WORD PTR [ecx-0x3e],di
  416bab:	xchg   ecx,eax
  416bac:	lahf   
  416bad:	mul    DWORD PTR [edx-0x19]
  416bb0:	fldcw  WORD PTR ds:0x3273da4e
  416bb6:	adc    al,0xb1
  416bb8:	int3   
  416bb9:	xor    al,0xb
  416bbb:	push   es
  416bbc:	shl    BYTE PTR [eax+esi*2+0x6c673e8a],cl
  416bc3:	in     al,0x9b
  416bc5:	cmp    edi,DWORD PTR [ebx]
  416bc7:	js     0x416bec
  416bc9:	aaa    
  416bca:	xor    ebp,edx
  416bcc:	add    ch,dh
  416bce:	jmp    0xcf8:0xfe8179
  416bd5:	ficomp WORD PTR [edi-0x2d28a789]
  416bdb:	jo     0x416be3
  416bdd:	ror    DWORD PTR [ebx+0x35],cl
  416be0:	or     ebx,ecx
  416be2:	daa    
  416be3:	pop    ss
  416be4:	mov    al,0x8
  416be6:	sub    edi,DWORD PTR [esi]
  416be8:	les    ebp,FWORD PTR [edx]
  416bea:	outs   dx,DWORD PTR ds:[esi]
  416beb:	imul   edi,DWORD PTR [eax+0x43],0xffffffce
  416bef:	popf   
  416bf0:	imul   esi,edi,0xffffff85
  416bf3:	jns    0x416bac
  416bf5:	aad    0xe9
  416bf7:	and    al,0xf5
  416bf9:	fistp  QWORD PTR ss:[edi+0x78]
  416bfd:	mov    ch,0x6b
  416bff:	popf   
  416c00:	call   0x5c787f81
  416c05:	xchg   ebx,eax
  416c06:	mov    al,ds:0xa1d9d28b
  416c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c0c:	(bad)  
  416c0d:	fs dec eax
  416c0f:	inc    edx
  416c10:	popf   
  416c11:	pop    edi
  416c12:	push   es
  416c13:	and    ecx,DWORD PTR [esi+0x7a]
  416c16:	xor    eax,0x81e2b665
  416c1b:	mov    esi,0xef6fdc7b
  416c20:	xchg   edi,eax
  416c21:	leave  
  416c22:	jecxz  0x416c7c
  416c24:	add    esp,0x19
  416c27:	out    0x55,al
  416c29:	sbb    dl,BYTE PTR [esi]
  416c2b:	and    DWORD PTR [edx+eiz*4-0x32],ebp
  416c2f:	mov    ds:0xf0a40bee,eax
  416c34:	push   esp
  416c35:	iret   
  416c36:	inc    esp
  416c37:	aaa    
  416c38:	lds    eax,FWORD PTR [ecx+ecx*4+0x24aa2ff8]
  416c3f:	add    BYTE PTR [edi-0x14],ah
  416c42:	jmp    0x416bf6
  416c44:	outs   dx,DWORD PTR ds:[esi]
  416c45:	mov    gs,WORD PTR [esi-0x423670c3]
  416c4b:	xor    edx,DWORD PTR [edi]
  416c4d:	out    dx,eax
  416c4e:	adc    DWORD PTR [edi+edx*8-0x6d],eax
  416c52:	inc    esi
  416c53:	mov    ch,0xea
  416c55:	sahf   
  416c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c57:	(bad)  
  416c58:	mov    bh,0xa6
  416c5a:	jl     0x416c3a
  416c5c:	int3   
  416c5d:	in     eax,dx
  416c5e:	push   edx
  416c5f:	ins    DWORD PTR es:[edi],dx
  416c60:	dec    eax
  416c61:	or     eax,0x15c5738c
  416c66:	ret    
  416c67:	retf   
  416c68:	call   0x232f:0xabbf6e90
  416c6f:	sbb    esi,DWORD PTR [ecx+0x7a]
  416c72:	jg     0x416c05
  416c74:	and    dl,0x32
  416c77:	or     al,0xc2
  416c79:	scas   al,BYTE PTR es:[edi]
  416c7a:	or     edx,DWORD PTR ds:0x9d42b09a
  416c80:	jbe    0x416c3c
  416c82:	test   eax,0x93078d94
  416c87:	je     0x416c4f
  416c89:	aam    0x11
  416c8b:	sbb    ebx,DWORD PTR [edi+0x7983c34a]
  416c91:	mov    bh,0x56
  416c93:	jb     0x416cb3
  416c95:	push   ax
  416c97:	imul   esp,DWORD PTR [edx+0x563e2dc2],0x4d800940
  416ca1:	out    dx,al
  416ca2:	jl     0x416c53
  416ca4:	adc    al,0xe7
  416ca6:	ret    
  416ca7:	das    
  416ca8:	push   ebp
  416ca9:	retf   
  416caa:	mov    ebp,0x38760490
  416caf:	mov    ch,0x0
  416cb1:	aas    
  416cb2:	push   esp
  416cb3:	shr    DWORD PTR [esi+0x6ee372f1],0xf4
  416cba:	inc    ebp
  416cbb:	pop    ds
  416cbc:	test   bh,0x69
  416cbf:	inc    ebp
  416cc0:	je     0x416cb7
  416cc2:	enter  0xd234,0xdc
  416cc6:	xor    bh,BYTE PTR [ebp-0x4b381510]
  416ccc:	dec    edi
  416ccd:	adc    BYTE PTR [ecx+0xf15d0a7],dh
  416cd3:	push   ecx
  416cd4:	jecxz  0x416d11
  416cd6:	fst    st(5)
  416cd8:	inc    edx
  416cd9:	fst    DWORD PTR [eax+0x61]
  416cdc:	cmp    DWORD PTR [ebp-0x76],esp
  416cdf:	(bad)  
  416ce0:	adc    DWORD PTR [esi+ebx*8],edi
  416ce3:	xchg   edi,eax
  416ce4:	jbe    0x416d2f
  416ce6:	pop    ebp
  416ce7:	inc    esp
  416ce8:	add    eax,0x2c168224
  416ced:	jnp    0x416cb5
  416cef:	dec    edx
  416cf0:	push   esp
  416cf1:	cmp    DWORD PTR [edi-0x26],ebp
  416cf4:	retf   0x959b
  416cf7:	leave  
  416cf8:	aaa    
  416cf9:	mov    BYTE PTR [edx-0x6a912227],dh
  416cff:	jns    0x416d58
  416d01:	push   es
  416d02:	mov    esi,0x6713c3c5
  416d07:	inc    esp
  416d08:	pushf  
  416d09:	sbb    al,0x60
  416d0c:	lods   eax,DWORD PTR ds:[esi]
  416d0d:	mov    DWORD PTR [esi-0x4d],0xc5833302
  416d14:	popf   
  416d15:	sub    DWORD PTR [edi*4+0xfe52951],esi
  416d1c:	sub    esi,DWORD PTR [esp+ecx*8+0x6a]
  416d20:	cs dec ebp
  416d22:	jbe    0x416d01
  416d24:	dec    ebx
  416d25:	sahf   
  416d26:	xchg   esi,eax
  416d27:	shr    DWORD PTR [eax+ebx*2+0x4e7b9ed2],cl
  416d2e:	cmp    DWORD PTR [ebp+0x18e9bfc4],ebp
  416d34:	ins    BYTE PTR es:[edi],dx
  416d35:	ror    DWORD PTR [ebp+0x62],1
  416d38:	pop    ebx
  416d39:	(bad)  
  416d3b:	ins    DWORD PTR es:[edi],dx
  416d3c:	sbb    DWORD PTR [edx-0x6f9d004a],ebx
  416d42:	mov    ds:0x610528df,al
  416d47:	cld    
  416d48:	mov    edi,0xf9115fce
  416d4d:	or     esi,edx
  416d4f:	mov    bh,0xdf
  416d51:	adc    cl,BYTE PTR [edi+esi*1-0x2d]
  416d55:	(bad)  
  416d57:	jp     0x416d94
  416d59:	inc    esp
  416d5a:	jecxz  0x416d7d
  416d5c:	push   edi
  416d5d:	push   ebx
  416d5e:	and    BYTE PTR [ecx-0x46e6f879],0x76
  416d65:	(bad)
  416d68:	cdq    
  416d69:	retf   0xb839
  416d6c:	dec    edi
  416d6d:	mov    cl,0xcd
  416d6f:	pop    ebx
  416d70:	pushf  
  416d71:	stos   BYTE PTR es:[edi],al
  416d72:	sti    
  416d73:	pop    es
  416d74:	xor    bl,ah
  416d76:	dec    ebx
  416d77:	rep stos DWORD PTR es:[edi],eax
  416d79:	neg    BYTE PTR [ebx+0x5f]
  416d7c:	int    0x7
  416d7e:	add    BYTE PTR [edx],ah
  416d80:	inc    eax
  416d81:	jecxz  0x416d79
  416d83:	pop    es
  416d84:	frstor [edi]
  416d86:	and    DWORD PTR [eax-0xffe63ac],edi
  416d8c:	mov    al,ds:0xe821faac
  416d91:	mov    ?,WORD PTR [ebp+0x3b9142be]
  416d97:	out    dx,al
  416d98:	fdivr  DWORD PTR [edi+0x73867888]
  416d9e:	mov    al,0x90
  416da0:	xchg   ebp,eax
  416da1:	jmp    0x416da2
  416da3:	cmp    DWORD PTR [edi+0x72],ebp
  416da6:	add    DWORD PTR ds:0x8d70215c,ebx
  416dac:	loope  0x416d4d
  416dae:	pop    ebx
  416daf:	adc    DWORD PTR [edx],edx
  416db1:	cld    
  416db2:	test   al,0xe6
  416db4:	les    edi,FWORD PTR [ecx-0x2a3281fc]
  416dba:	sbb    BYTE PTR [edx-0x3d],cl
  416dbd:	daa    
  416dbe:	inc    esi
  416dbf:	and    DWORD PTR [ecx+0x5529c4ed],ebx
  416dc5:	dec    ebx
  416dc6:	cmp    dh,bl
  416dc8:	out    0xd2,eax
  416dca:	(bad)  
  416dcb:	jmp    0xe1d0:0x75a2866a
  416dd2:	test   BYTE PTR [eax],dh
  416dd4:	data16 lods al,BYTE PTR ds:[esi]
  416dd6:	scas   al,BYTE PTR es:[edi]
  416dd7:	add    BYTE PTR [esi-0x1ce49fbe],bl
  416ddd:	ins    DWORD PTR es:[edi],dx
  416dde:	push   0x11
  416de0:	(bad)  
  416de1:	ror    ebx,cl
  416de3:	fisttp WORD PTR [ebx]
  416de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de6:	or     ecx,DWORD PTR [ebx-0x74cef45e]
  416dec:	mov    ebp,0xf776b31c
  416df1:	add    BYTE PTR [eax-0x62],dl
  416df4:	cwde   
  416df5:	out    dx,eax
  416df6:	adc    DWORD PTR [edx+0x55b58eac],ecx
  416dfc:	lock clc 
  416dfe:	cli    
  416dff:	push   ds
  416e00:	push   es
  416e01:	cmc    
  416e02:	pop    edx
  416e03:	xlat   BYTE PTR ds:[ebx]
  416e04:	and    eax,0x25c5cce5
  416e09:	pop    edx
  416e0a:	adc    BYTE PTR [ecx+ebx*2],0x96
  416e0e:	xchg   ebx,eax
  416e0f:	mov    ?,WORD PTR [ecx+0x65]
  416e12:	retf   
  416e13:	aam    0x56
  416e15:	out    0x4f,eax
  416e17:	lea    eax,[ecx]
  416e19:	(bad)  
  416e1a:	pop    eax
  416e1b:	xchg   edx,eax
  416e1c:	jb     0x416e81
  416e1e:	imul   edx,DWORD PTR [edx+edx*8-0x4ca94a14],0xfffffff3
  416e26:	mov    eax,ds:0x15cff93
  416e2b:	in     eax,dx
  416e2c:	push   edi
  416e2d:	mov    edi,0xa1719666
  416e32:	xchg   ebp,eax
  416e33:	xchg   esp,eax
  416e34:	or     al,0x25
  416e36:	aad    0x87
  416e38:	cmp    BYTE PTR [esi],cl
  416e3a:	mov    WORD PTR [edi+esi*8-0x5ea1dfb5],gs
  416e41:	xor    BYTE PTR [ebp+0x12e07cc2],ah
  416e47:	sub    BYTE PTR [ebx+0x3c],bl
  416e4a:	and    al,ch
  416e4c:	lods   al,BYTE PTR ds:[esi]
  416e4d:	mov    dl,0x53
  416e4f:	jmp    0xcb9a58f3
  416e54:	call   0x728473bf
  416e59:	jo     0x416e05
  416e5b:	mov    esi,0x7bb0c746
  416e60:	jbe    0x416e00
  416e62:	dec    ebx
  416e63:	xchg   di,ax
  416e65:	adc    dl,bl
  416e67:	lods   eax,DWORD PTR ds:[esi]
  416e68:	outs   dx,DWORD PTR ds:[esi]
  416e69:	pop    ebp
  416e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e6b:	or     eax,0x384ae5c7
  416e70:	jne    0x416e26
  416e72:	mov    edi,0xa9d3e9b4
  416e77:	fidivr DWORD PTR [edx+0x38]
  416e7a:	mov    cl,0x52
  416e7c:	outs   dx,DWORD PTR ds:[esi]
  416e7d:	cmp    BYTE PTR [esi+edi*8-0x1e],al
  416e81:	cmp    eax,0x6aedfb0c
  416e86:	xor    DWORD PTR [ecx+0x4bb2a730],edi
  416e8c:	scas   al,BYTE PTR es:[edi]
  416e8d:	adc    BYTE PTR [ecx],bl
  416e8f:	or     bl,ch
  416e91:	mov    al,ds:0x8c33f91c
  416e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e97:	mov    edx,0x40f8462
  416e9c:	shl    DWORD PTR [ecx-0x18],1
  416e9f:	addr16 dec ebp
  416ea1:	jno    0x416f19
  416ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ea4:	pop    ss
  416ea5:	loope  0x416ec0
  416ea7:	stos   BYTE PTR es:[edi],al
  416ea8:	aas    
  416ea9:	xor    dl,bl
  416eab:	or     ax,0x325e
  416eaf:	inc    esi
  416eb0:	fs icebp 
  416eb2:	xchg   esp,eax
  416eb3:	xor    DWORD PTR [ecx-0x78],eax
  416eb6:	push   ecx
  416eb7:	add    BYTE PTR ds:0xcf6d8967,dl
  416ebd:	sbb    ebx,ebp
  416ebf:	aam    0x7d
  416ec1:	cmp    DWORD PTR [ebp+0x55],ebx
  416ec4:	ss mov ch,0xae
  416ec7:	stos   BYTE PTR es:[edi],al
  416ec8:	out    dx,al
  416ec9:	adc    DWORD PTR [edi+0x728ae439],0x3e
  416ed0:	test   BYTE PTR [edi+0x2b2481c8],al
  416ed6:	mov    esi,0x29d19c1a
  416edb:	fldcw  WORD PTR [ecx]
  416edd:	or     al,0xa3
  416edf:	fs hlt 
  416ee1:	jge    0x416e71
  416ee3:	jmp    0x416e8f
  416ee5:	test   eax,0xb70ebbac
  416eea:	cmp    BYTE PTR [ecx],cl
  416eec:	pop    ecx
  416eed:	test   BYTE PTR [edi],0x23
  416ef0:	inc    eax
  416ef1:	mov    edx,0xc1eaca08
  416ef6:	jl     0x416e9b
  416ef8:	test   eax,0x43d48e39
  416efd:	je     0x416e84
  416eff:	nop
  416f00:	adc    al,0x4f
  416f02:	popf   
  416f03:	cli    
  416f04:	adc    eax,DWORD PTR [ebp-0x28]
  416f07:	fdiv   st,st(1)
  416f09:	(bad)  
  416f0a:	add    ebp,DWORD PTR [edx-0x77]
  416f0d:	jns    0x416f8b
  416f0f:	or     al,0x97
  416f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f12:	xor    DWORD PTR [edi+0x56c81c9a],edi
  416f18:	pop    ecx
  416f19:	xor    BYTE PTR [edi-0x3b],0xd9
  416f1d:	sbb    al,0x3b
  416f1f:	js     0x416f0f
  416f21:	xor    esp,DWORD PTR [eax+0x34]
  416f24:	in     eax,0x29
  416f26:	scas   eax,DWORD PTR es:[edi]
  416f27:	sbb    eax,0xa02c2eb
  416f2c:	arpl   WORD PTR [edx+0x72eb2937],bx
  416f32:	out    dx,eax
  416f33:	div    BYTE PTR [edi-0x2b]
  416f36:	and    DWORD PTR [edi],eax
  416f38:	out    dx,al
  416f39:	adc    bh,ah
  416f3b:	add    al,0x72
  416f3d:	xchg   ebp,eax
  416f3e:	setns  BYTE PTR [ecx+0x2b]
  416f42:	xor    ebp,DWORD PTR [edi]
  416f44:	sub    eax,0xc9af4073
  416f49:	out    0x49,al
  416f4b:	in     al,0x26
  416f4d:	xchg   DWORD PTR [eax],eax
  416f4f:	sub    BYTE PTR [edi+0x21b4c126],ch
  416f55:	or     BYTE PTR [ebx+0x2998d205],bh
  416f5b:	add    DWORD PTR [edx],eax
  416f5d:	daa    
  416f5e:	jecxz  0x416f77
  416f60:	(bad)  
  416f62:	mov    ecx,DWORD PTR [ebp+0x6fdaab4b]
  416f68:	push   esp
  416f69:	repz in eax,dx
  416f6b:	ror    DWORD PTR [esp+ecx*8],cl
  416f6e:	mov    ebp,0x7bd38648
  416f73:	rcr    BYTE PTR [ecx+edx*2+0x6b],1
  416f77:	in     al,dx
  416f78:	fcomp  QWORD PTR [esi+0x5e4d29a8]
  416f7e:	lahf   
  416f7f:	je     0x416fd4
  416f81:	sbb    BYTE PTR [ebx-0x7d],0xf6
  416f85:	popf   
  416f86:	sbb    al,0x60
  416f88:	and    bl,al
  416f8a:	shl    DWORD PTR [esi],0xbb
  416f8d:	adc    DWORD PTR [edi+0x17],ebx
  416f90:	(bad)  
  416f91:	jle    0x416f80
  416f93:	and    DWORD PTR ds:0x62fe1680,esi
  416f99:	mov    WORD PTR [esi],ds
  416f9b:	arpl   WORD PTR [edi-0x42],bp
  416f9e:	dec    esp
  416f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa0:	jge    0x416fc9
  416fa2:	enter  0x22c2,0x50
  416fa6:	pusha  
  416fa7:	es sub al,0x68
  416faa:	dec    BYTE PTR [ebp-0x37]
  416fad:	mov    dl,0xc9
  416faf:	les    esp,FWORD PTR [esp+eiz*2+0x6b]
  416fb3:	outs   dx,BYTE PTR ds:[esi]
  416fb4:	xor    bl,BYTE PTR [esi+0x4075a54a]
  416fba:	in     al,0xb3
  416fbc:	stc    
  416fbd:	outs   dx,BYTE PTR ds:[esi]
  416fbe:	ror    eax,1
  416fc0:	ret    
  416fc1:	mov    ds,WORD PTR [edx+0x6a]
  416fc4:	imul   eax,DWORD PTR [esp+eax*2-0x52],0xffffffca
  416fc9:	pop    ecx
  416fca:	adc    al,0x58
  416fcc:	int3   
  416fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fce:	or     ecx,DWORD PTR [edi+0x24]
  416fd1:	outs   dx,BYTE PTR ds:[esi]
  416fd2:	pusha  
  416fd3:	out    0xa5,al
  416fd5:	not    BYTE PTR [ecx+0x4ae95d35]
  416fdb:	push   ecx
  416fdc:	sub    BYTE PTR [edi+edx*1],cl
  416fdf:	pop    edi
  416fe0:	enter  0x4704,0xe0
  416fe4:	icebp  
  416fe5:	xchg   esi,eax
  416fe6:	xchg   edx,eax
  416fe7:	nop
  416fe8:	pop    ebp
  416fe9:	retf   0x7406
  416fec:	pop    ebx
  416fed:	xchg   ebp,eax
  416fee:	lock outs dx,DWORD PTR ds:[esi]
  416ff0:	xor    ecx,DWORD PTR [esi+edi*1-0x12]
  416ff4:	not    BYTE PTR [ebx+0x70]
  416ff7:	ss xchg edx,eax
  416ff9:	cdq    
  416ffa:	push   es
  416ffb:	add    ch,BYTE PTR ds:0x9019c4c3
  417001:	retf   0xae86
  417004:	scas   eax,DWORD PTR es:[edi]
  417005:	into   
  417006:	scas   al,BYTE PTR es:[edi]
  417007:	ja     0x417082
  417009:	jnp    0x41705a
  41700b:	(bad)  
  41700d:	pop    ebp
  41700e:	pushf  
  41700f:	psubq  mm7,mm7
  417012:	or     esi,DWORD PTR [ecx+0x31]
  417015:	aaa    
  417016:	xor    ecx,DWORD PTR [ebp+0x46]
  417019:	test   DWORD PTR ds:0xb6a07307,ecx
  41701f:	ficom  WORD PTR [ebx+0x2a]
  417022:	fsub   QWORD PTR [ecx+eiz*4]
  417025:	pop    esi
  417026:	mov    ebp,0xeca336e4
  41702b:	mov    esi,0x23bdb785
  417030:	retf   0x571
  417033:	scas   eax,DWORD PTR es:[edi]
  417034:	scas   eax,DWORD PTR es:[edi]
  417035:	sub    BYTE PTR [ecx-0x1a],dh
  417038:	push   cs
  417039:	(bad)  
  41703a:	jns    0x41700e
  41703c:	sub    esp,DWORD PTR [edx]
  41703e:	fist   WORD PTR [ecx+0x4b0990e1]
  417044:	mov    cl,0xb
  417046:	aad    0x35
  417048:	xor    al,0x37
  41704a:	arpl   WORD PTR [edx+0x51],bp
  41704d:	xor    al,0xce
  41704f:	jae    0x416ff6
  417051:	ss sbb bh,bh
  417054:	data16 ja 0x4170c0
  417057:	ret    0xbddc
  41705a:	call   0x4b82906c
  41705f:	icebp  
  417060:	push   cs
  417061:	mov    al,BYTE PTR [edx-0x1b]
  417064:	enter  0x7b46,0x4b
  417068:	or     BYTE PTR [esi],al
  41706a:	test   BYTE PTR [edx-0x63],dh
  41706d:	gs xor eax,0x66a471bb
  417073:	jcxz   0x4170d9
  417076:	dec    ebp
  417077:	pop    esp
  417078:	jmp    0x644d:0xbbc4ea3
  41707f:	xchg   esi,eax
  417080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417081:	scas   al,BYTE PTR es:[edi]
  417082:	inc    edi
  417083:	test   DWORD PTR [ecx+0x5f],edi
  417086:	inc    eax
  417087:	int3   
  417088:	mov    cl,0xdf
  41708a:	jnp    0x41706d
  41708c:	mov    ds:0xe305fbb2,al
  417091:	stc    
  417092:	dec    esp
  417093:	(bad)  
  417094:	fnstsw WORD PTR [ebp+0x28f7048a]
  41709a:	outs   dx,DWORD PTR ds:[esi]
  41709b:	mov    esi,0xda5c63e5
  4170a0:	jne    0x41707e
  4170a2:	adc    al,0x5e
  4170a4:	call   0x5b13cf10
  4170a9:	je     0x41706f
  4170ab:	and    DWORD PTR [ebx],esp
  4170ad:	jmp    0x789dc3c1
  4170b2:	jecxz  0x41709c
  4170b4:	cwde   
  4170b5:	and    cl,BYTE PTR [ecx]
  4170b7:	sbb    eax,ecx
  4170b9:	mov    dh,0xc7
  4170bb:	(bad)  
  4170bd:	mov    ds:0x691c165,eax
  4170c2:	xchg   ecx,eax
  4170c3:	mov    bh,0xa7
  4170c5:	push   ss
  4170c6:	inc    edx
  4170c7:	loop   0x417062
  4170c9:	test   DWORD PTR [ecx+0x69],edi
  4170cc:	xlat   BYTE PTR ds:[ebx]
  4170cd:	mov    al,BYTE PTR [eax]
  4170cf:	xor    eax,0xdb50e4c9
  4170d4:	call   0x977dec9e
  4170d9:	shl    DWORD PTR gs:[edx],1
  4170dc:	out    0x83,al
  4170de:	mov    dh,0x40
  4170e0:	lds    ecx,FWORD PTR [ebx]
  4170e2:	or     esi,ebx
  4170e4:	retf   
  4170e5:	adc    DWORD PTR [esi+ebx*1-0x27a3cfa1],0x3fb6d40c
  4170f0:	jl     0x4170db
  4170f2:	ret    0x5aed
  4170f5:	int    0xe1
  4170f7:	pushf  
  4170f8:	adc    bh,BYTE PTR [ecx-0x7d]
  4170fb:	hlt    
  4170fc:	ror    dh,0xde
  4170ff:	jg     0x41715e
  417101:	mov    al,0x84
  417103:	and    BYTE PTR [esi],ah
  417105:	imul   BYTE PTR [ebx-0x6af64860]
  41710b:	xlat   BYTE PTR ds:[ebx]
  41710c:	scas   eax,DWORD PTR es:[edi]
  41710d:	fimul  WORD PTR [edi]
  41710f:	in     al,0xf4
  417111:	push   ecx
  417112:	les    esp,FWORD PTR [ebx]
  417114:	rcr    edi,cl
  417116:	inc    ebp
  417117:	neg    DWORD PTR [ecx-0x57]
  41711a:	test   BYTE PTR [edi+0x26],dh
  41711d:	adc    bh,BYTE PTR [esi-0x26a3af5d]
  417123:	sub    eax,ecx
  417125:	mov    DWORD PTR [ebp-0x8],eax
  417128:	mov    ecx,DWORD PTR [ebp-0x4]
  41712b:	xor    ecx,esi
  41712d:	mov    eax,0xffcd8d08
  417132:	sub    eax,ecx
  417134:	add    DWORD PTR [ebp-0x8],eax
  417137:	mov    eax,DWORD PTR [ebp-0x14]
  41713a:	mov    DWORD PTR [eax],0x675565e9
  417140:	mov    DWORD PTR [eax+0x4],0x76576787
  417147:	mov    eax,DWORD PTR [ebp-0x8]
  41714a:	mov    ecx,DWORD PTR [ebp-0x14]
  41714d:	push   DWORD PTR [ebp-0x24]
  417150:	mov    DWORD PTR [ecx+0x1],eax
  417153:	mov    eax,ds:0x4281e1
  417158:	push   DWORD PTR [eax]
  41715a:	push   DWORD PTR ds:0x428445
  417160:	push   DWORD PTR ds:0x4281e9
  417166:	push   DWORD PTR ds:0x428425
  41716c:	push   DWORD PTR ds:0x428c15
  417172:	push   DWORD PTR [ebp-0x28]
  417175:	push   DWORD PTR [ebp-0x2c]
  417178:	mov    eax,DWORD PTR [ebp-0x14]
  41717b:	call   eax
  41717d:	pop    edi
  41717e:	pop    esi
  41717f:	leave  
  417180:	ret    
  417181:	push   ebp
  417182:	mov    ebp,esp
  417184:	sub    esp,0x34
  417187:	add    DWORD PTR ds:0x428e9d,ebx
  41718d:	push   ebx
  41718e:	push   esi
  41718f:	movzx  esi,WORD PTR ds:0x428e39
  417196:	or     DWORD PTR ds:0x428e31,esi
  41719c:	push   edi
  41719d:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  4171a4:	lea    eax,[ebp+0x14]
  4171a7:	mov    DWORD PTR [ebp-0x4],eax
  4171aa:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4171b1:	sub    ecx,DWORD PTR ds:0x428eb9
  4171b7:	lea    eax,[ebp-0xc]
  4171ba:	xor    edx,ecx
  4171bc:	mov    DWORD PTR [ebp-0x14],eax
  4171bf:	and    DWORD PTR ds:0x428e39,0x0
  4171c9:	jmp    0x4171db
  4171ce:	mov    ecx,DWORD PTR ds:0x428e39
  4171d4:	inc    ecx
  4171d5:	mov    DWORD PTR ds:0x428e39,ecx
  4171db:	cmp    DWORD PTR ds:0x428e39,0x18
  4171e2:	jae    0x417215
  4171e8:	cmp    DWORD PTR ds:0x428e39,0x1b
  4171ef:	jbe    0x417215
  4171f5:	jmp    0x417210
  4171fa:	push   0x39b5
  4171ff:	push   DWORD PTR [ebp-0x14]
  417202:	push   DWORD PTR [ebp-0x14]
  417205:	push   0x5237
  41720a:	call   DWORD PTR ds:0x42ca3c
  417210:	jmp    0x4171ce
  417215:	mov    eax,DWORD PTR [ebp-0xc]
  417218:	mov    edx,DWORD PTR [ebp-0x14]
  41721b:	or     DWORD PTR ds:0x428e85,edx
  417221:	mov    ecx,0x75108b1
  417226:	xor    eax,ecx
  417228:	dec    DWORD PTR ds:0x428e85
  41722e:	add    eax,0x3272f8
  417233:	and    DWORD PTR ds:0x428eb5,0x0
  41723d:	jmp    0x41724f
  417242:	mov    esi,DWORD PTR ds:0x428eb5
  417248:	inc    esi
  417249:	mov    DWORD PTR ds:0x428eb5,esi
  41724f:	cmp    DWORD PTR ds:0x428eb5,0x19
  417256:	jae    0x41729d
  41725c:	cmp    DWORD PTR ds:0x428eb5,0x9
  417263:	jl     0x41729d
  417269:	jmp    0x41727e
  41726e:	push   0x428019
  417273:	push   0x1
  417275:	push   DWORD PTR [ebp-0x24]
  417278:	call   DWORD PTR ds:0x42ca4c
  41727e:	cmp    DWORD PTR ds:0x428eb5,0x8
  417285:	jne    0x417298
  41728b:	mov    esi,DWORD PTR ds:0x428eb5
  417291:	inc    esi
  417292:	mov    DWORD PTR ds:0x428eb5,esi
  417298:	jmp    0x417242
  41729d:	mov    DWORD PTR [edx],eax
  41729f:	mov    eax,ds:0x4281dd
  4172a4:	mov    edx,DWORD PTR [ebp-0x4]
  4172a7:	mov    eax,DWORD PTR [eax]
  4172a9:	mov    DWORD PTR ds:0x428ecd,0x15
  4172b3:	cmp    DWORD PTR ds:0x428ecd,0x0
  4172ba:	je     0x417309
  4172c0:	cmp    DWORD PTR ds:0x428ecd,0x6
  4172c7:	jg     0x417309
  4172cd:	jmp    0x4172dd
  4172d2:	push   0x50d0
  4172d7:	call   DWORD PTR ds:0x42ca50
  4172dd:	cmp    DWORD PTR ds:0x428ecd,0x7
  4172e4:	jne    0x4172f7
  4172ea:	mov    esi,DWORD PTR ds:0x428ecd
  4172f0:	dec    esi
  4172f1:	mov    DWORD PTR ds:0x428ecd,esi
  4172f7:	mov    esi,DWORD PTR ds:0x428ecd
  4172fd:	dec    esi
  4172fe:	mov    DWORD PTR ds:0x428ecd,esi
  417304:	jmp    0x4172b3
  417309:	add    eax,DWORD PTR [edx]
  41730b:	mov    DWORD PTR [ebp-0x8],eax
  41730e:	mov    esi,DWORD PTR [ebp+0x8]
  417311:	sbb    DWORD PTR ds:0x428e71,ebx
  417317:	mov    eax,ds:0x428365
  41731c:	mov    DWORD PTR ds:0x428e8d,0x5de4
  417326:	mov    eax,DWORD PTR [eax+0x198]
  41732c:	and    DWORD PTR ds:0x428eb1,0x0
  417336:	jmp    0x417348
  41733b:	mov    edx,DWORD PTR ds:0x428eb1
  417341:	inc    edx
  417342:	mov    DWORD PTR ds:0x428eb1,edx
  417348:	cmp    DWORD PTR ds:0x428eb1,0x1b
  41734f:	jae    0x41737f
  417355:	cmp    DWORD PTR ds:0x428eb1,0x26
  41735c:	jle    0x41737f
  417362:	jmp    0x41737a
  417367:	push   DWORD PTR [ebp-0x14]
  41736a:	push   0x42819a
  41736f:	push   0x428e5d
  417374:	call   DWORD PTR ds:0x42ca54
  41737a:	jmp    0x41733b
  41737f:	xor    esi,ecx
  417381:	and    DWORD PTR ds:0x428ec1,0x0
  41738b:	jmp    0x41739d
  417390:	mov    edx,DWORD PTR ds:0x428ec1
  417396:	inc    edx
  417397:	mov    DWORD PTR ds:0x428ec1,edx
  41739d:	cmp    DWORD PTR ds:0x428ec1,0x1c
  4173a4:	jae    0x4173f1
  4173aa:	cmp    DWORD PTR ds:0x428ec1,0x8
  4173b1:	jb     0x4173f1
  4173b7:	jmp    0x4173d2
  4173bc:	push   DWORD PTR [ebp-0x24]
  4173bf:	push   0x14a9
  4173c4:	push   0x3838
  4173c9:	push   DWORD PTR [ebp-0x20]
  4173cc:	call   DWORD PTR ds:0x42ca58
  4173d2:	cmp    DWORD PTR ds:0x428ec1,0x7
  4173d9:	jne    0x4173ec
  4173df:	mov    edx,DWORD PTR ds:0x428ec1
  4173e5:	inc    edx
  4173e6:	mov    DWORD PTR ds:0x428ec1,edx
  4173ec:	jmp    0x417390
  4173f1:	mov    edx,0x3272f8
  4173f6:	or     DWORD PTR ds:0x428e59,0x2d0a
  417400:	add    esi,edx
  417402:	mov    DWORD PTR ds:0x428e4d,0x9a6
  41740c:	cmp    DWORD PTR [eax],esi
  41740e:	mov    DWORD PTR ds:0x428e65,0x2339
  417418:	je     0x41742f
  41741e:	mov    eax,DWORD PTR [eax]
  417420:	mov    DWORD PTR ds:0x428ebd,0x152e
  41742a:	jmp    0x41e3db
  41742f:	sbb    esi,eax
  417431:	mov    eax,DWORD PTR [ebp+0x18]
  417434:	mov    esi,DWORD PTR ds:0x428e2d
  41743a:	adc    DWORD PTR ds:0x428e61,esi
  417440:	mov    esi,DWORD PTR [ebp+0x1c]
  417443:	or     ebx,0xffffffff
  417446:	mov    DWORD PTR ds:0x428ed1,0x15d
  417450:	cmp    eax,0x70941f8a
  417455:	mov    DWORD PTR ds:0x428e8d,0x42c3
  41745f:	jne    0x4174aa
  417465:	mov    DWORD PTR ds:0x428e2d,0x1eb5
  41746f:	cmp    esi,ebx
  417471:	mov    DWORD PTR ds:0x428ead,0x35c3
  41747b:	jne    0x4174aa
  417481:	mov    DWORD PTR ds:0x428e65,0x33a3
  41748b:	push   ebx
  41748c:	mov    DWORD PTR ds:0x428e49,0x2fe2
  417496:	push   0x70941f94
  41749b:	mov    DWORD PTR ds:0x428e41,0x2336
  4174a5:	jmp    0x41e3ca
  4174aa:	mov    DWORD PTR ds:0x428ea5,ebx
  4174b0:	mov    eax,DWORD PTR [ebp+0x18]
  4174b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4174b6:	cmp    eax,0x70941f94
  4174bb:	mov    DWORD PTR ds:0x428e61,0x2bd8
  4174c5:	jne    0x4174f2
  4174cb:	cmp    esi,ebx
  4174cd:	mov    DWORD PTR ds:0x428e2d,0x15b3
  4174d7:	jne    0x4174f2
  4174dd:	push   ebx
  4174de:	mov    DWORD PTR ds:0x428e75,0x4e72
  4174e8:	push   0x70941f96
  4174ed:	jmp    0x41e3ca
  4174f2:	mov    eax,ds:0x428e59
  4174f7:	mov    eax,DWORD PTR [ebp+0x18]
  4174fa:	mov    esi,DWORD PTR [ebp+0x1c]
  4174fd:	cmp    eax,0x70941f96
  417502:	jne    0x417543
  417508:	mov    DWORD PTR ds:0x428e99,0x434f
  417512:	cmp    esi,ebx
  417514:	jne    0x417543
  41751a:	mov    DWORD PTR ds:0x428ec9,0x341e
  417524:	push   ebx
  417525:	mov    DWORD PTR ds:0x428e85,0x3720
  41752f:	push   0x70941f90
  417534:	mov    DWORD PTR ds:0x428eb1,0x674c
  41753e:	jmp    0x41e3ca
  417543:	mov    eax,DWORD PTR [ebp+0x18]
  417546:	mov    esi,DWORD PTR [ebp+0x1c]
  417549:	mov    DWORD PTR ds:0x428e69,0x6330
  417553:	cmp    eax,0x70941f90
  417558:	jne    0x417599
  41755e:	cmp    esi,ebx
  417560:	mov    DWORD PTR ds:0x428e45,0x5688
  41756a:	jne    0x417599
  417570:	mov    DWORD PTR ds:0x428e69,0x61b3
  41757a:	push   ebx
  41757b:	mov    DWORD PTR ds:0x428e4d,0x6bb8
  417585:	push   0x70941f92
  41758a:	mov    DWORD PTR ds:0x428e2d,0x777c
  417594:	jmp    0x41e3ca
  417599:	mov    eax,DWORD PTR [ebp+0x18]
  41759c:	mov    edi,DWORD PTR ds:0x428e89
  4175a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4175a5:	mov    edi,0x70941f9e
  4175aa:	mov    DWORD PTR ds:0x428ea1,0x2f43
  4175b4:	cmp    eax,edi
  4175b6:	mov    DWORD PTR ds:0x428eb1,0x498f
  4175c0:	jne    0x41e38b
  4175c6:	cmp    esi,ebx
  4175c8:	mov    DWORD PTR ds:0x428e71,0x5df9
  4175d2:	jne    0x41e38b
  4175d8:	sbb    eax,eax
  4175da:	mov    eax,DWORD PTR [ebp+0x10]
  4175dd:	and    DWORD PTR ds:0x428ea9,0x0
  4175e7:	jmp    0x4175fb
  4175ec:	xor    esi,esi
  4175ee:	xor    esi,DWORD PTR ds:0x428ea9
  4175f4:	inc    esi
  4175f5:	mov    DWORD PTR ds:0x428ea9,esi
  4175fb:	cmp    DWORD PTR ds:0x428ea9,0x1f
  417602:	jae    0x417655
  417608:	cmp    DWORD PTR ds:0x428ea9,0x5
  41760f:	jge    0x417655
  417615:	jmp    0x417636
  41761a:	push   DWORD PTR [ebp-0x10]
  41761d:	push   DWORD PTR [ebp-0x24]
  417620:	push   DWORD PTR [ebp-0x28]
  417623:	push   0x8725
  417628:	push   0x42814e
  41762d:	push   DWORD PTR [ebp-0x14]
  417630:	call   DWORD PTR ds:0x42ca10
  417636:	cmp    DWORD PTR ds:0x428ea9,0x4
  41763d:	jne    0x417650
  417643:	mov    esi,DWORD PTR ds:0x428ea9
  417649:	inc    esi
  41764a:	mov    DWORD PTR ds:0x428ea9,esi
  417650:	jmp    0x4175ec
  417655:	xor    eax,ecx
  417657:	add    eax,edx
  417659:	and    DWORD PTR ds:0x428e65,0x0
  417663:	jmp    0x417675
  417668:	mov    edi,DWORD PTR ds:0x428e65
  41766e:	inc    edi
  41766f:	mov    DWORD PTR ds:0x428e65,edi
  417675:	cmp    DWORD PTR ds:0x428e65,0x13
  41767c:	jae    0x4176b6
  417682:	cmp    DWORD PTR ds:0x428e65,0x15
  417689:	jbe    0x4176b6
  41768f:	jmp    0x4176b1
  417694:	push   DWORD PTR [ebp-0x20]
  417697:	push   0x1f3c
  41769c:	push   0x8271
  4176a1:	push   0x8e4d
  4176a6:	push   0x428ec5
  4176ab:	call   DWORD PTR ds:0x42ca14
  4176b1:	jmp    0x417668
  4176b6:	mov    DWORD PTR [ebp-0x20],eax
  4176b9:	mov    eax,DWORD PTR [ebp+0xc]
  4176bc:	mov    esi,DWORD PTR [ebp-0x8]
  4176bf:	xor    eax,ecx
  4176c1:	add    eax,edx
  4176c3:	imul   eax,DWORD PTR [esi]
  4176c6:	mov    esi,DWORD PTR [ebp+0x8]
  4176c9:	xor    esi,ecx
  4176cb:	add    esi,edx
  4176cd:	cmp    esi,eax
  4176cf:	mov    eax,DWORD PTR [ebp-0x4]
  4176d2:	mov    edi,0xffcd8d08
  4176d7:	je     0x4176f6
  4176dd:	mov    esi,DWORD PTR [ebp-0x20]
  4176e0:	add    DWORD PTR [eax],esi
  4176e2:	mov    eax,DWORD PTR [ebp-0x4]
  4176e5:	mov    esi,DWORD PTR [ebp+0xc]
  4176e8:	xor    esi,ecx
  4176ea:	add    esi,edx
  4176ec:	imul   esi,DWORD PTR [eax]
  4176ef:	mov    DWORD PTR [eax],esi
  4176f1:	jmp    0x4176fb
  4176f6:	mov    esi,DWORD PTR [ebp+0x14]
  4176f9:	xor    DWORD PTR [eax],esi
  4176fb:	mov    eax,DWORD PTR [ebp-0x4]
  4176fe:	mov    esi,DWORD PTR [ebp+0x10]
  417701:	xor    esi,ecx
  417703:	sub    edi,esi
  417705:	add    DWORD PTR [eax],edi
  417707:	mov    eax,DWORD PTR [ebp-0x4]
  41770a:	mov    esi,DWORD PTR [ebp-0x8]
  41770d:	add    esi,DWORD PTR [eax]
  41770f:	mov    DWORD PTR [ebp-0x8],esi
  417712:	mov    eax,DWORD PTR [ebp+0xc]
  417715:	mov    esi,DWORD PTR [ebp+0xc]
  417718:	xor    esi,ecx
  41771a:	xor    eax,ecx
  41771c:	lea    eax,[eax+esi*1+0x64e5f0]
  417723:	mov    esi,DWORD PTR [ebp+0xc]
  417726:	xor    esi,ecx
  417728:	add    esi,edx
  41772a:	imul   eax,esi
  41772d:	mov    esi,DWORD PTR [ebp+0xc]
  417730:	jmp    0x419aea
  417735:	sbb    DWORD PTR [edx+0x3a2c7d2b],ecx
  41773b:	cmp    DWORD PTR [edx],ebx
  41773d:	inc    edi
  41773e:	fst    st(5)
  417740:	inc    ecx
  417741:	(bad)  
  417742:	jo     0x41773c
  417744:	(bad)  
  417745:	stos   BYTE PTR es:[edi],al
  417746:	mov    ecx,0x9e187b7c
  41774b:	jnp    0x4177c8
  41774d:	push   0x71
  41774f:	mov    DWORD PTR [ebp-0x3e3ad29a],ecx
  417755:	in     al,0x80
  417757:	xor    ch,BYTE PTR [ecx-0x59]
  41775a:	hlt    
  41775b:	push   es
  41775c:	xchg   bh,ch
  41775e:	stos   DWORD PTR es:[edi],eax
  41775f:	lods   al,BYTE PTR ds:[esi]
  417760:	pop    eax
  417761:	popf   
  417762:	sub    eax,0x738a839
  417767:	aaa    
  417768:	adc    BYTE PTR [ebp-0x4],dh
  41776b:	pop    ecx
  41776c:	and    dh,BYTE PTR [ecx]
  41776e:	fimul  WORD PTR [ebp+0x52]
  417771:	cld    
  417772:	xor    al,0x23
  417774:	rcr    BYTE PTR [edx+esi*1-0x2c62f697],cl
  41777b:	mov    ds:0x3ef5e0f3,eax
  417780:	out    dx,eax
  417781:	ins    BYTE PTR es:[edi],dx
  417782:	mov    esi,0x17997ce1
  417787:	xchg   esp,eax
  417788:	nop
  417789:	adc    DWORD PTR [edi+0x2ee5e28e],edx
  41778f:	jae    0x4177e4
  417791:	jbe    0x41775c
  417793:	add    BYTE PTR [esi-0x1d],0x28
  417797:	mov    ds:0x47200936,al
  41779c:	div    BYTE PTR [edx+0x4f]
  41779f:	jmp    0x527:0x3418fed2
  4177a6:	xchg   ebp,eax
  4177a7:	sbb    al,0xe8
  4177a9:	rcr    DWORD PTR [esi+0x2c],1
  4177ac:	push   eax
  4177ad:	out    0x76,al
  4177af:	lds    ebx,FWORD PTR ds:0x6793cb90
  4177b5:	xchg   esp,eax
  4177b6:	and    cl,BYTE PTR [ebp-0x5eeee27f]
  4177bc:	(bad)  
  4177be:	cmp    DWORD PTR [ebx],edi
  4177c0:	dec    edx
  4177c1:	lods   eax,DWORD PTR ds:[esi]
  4177c2:	xchg   edi,eax
  4177c3:	lahf   
  4177c4:	sub    DWORD PTR [eax],ebp
  4177c6:	stc    
  4177c7:	jle    0x41781a
  4177c9:	mov    bh,0xd3
  4177cb:	test   eax,0x2b1af8c0
  4177d0:	scas   al,BYTE PTR es:[edi]
  4177d1:	ins    BYTE PTR es:[edi],dx
  4177d2:	xchg   esi,eax
  4177d3:	fwait
  4177d4:	xchg   esi,eax
  4177d5:	or     cl,BYTE PTR [eax-0x48505a95]
  4177db:	jno    0x4177f6
  4177dd:	sbb    al,0x87
  4177df:	push   cs
  4177e0:	retf   
  4177e1:	xchg   ecx,eax
  4177e2:	leave  
  4177e3:	cwde   
  4177e4:	dec    ebx
  4177e5:	sub    eax,0xf98b22de
  4177ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177eb:	mov    bh,0x44
  4177ed:	addr16 dec ecx
  4177ef:	mov    ds:0x305c92b1,eax
  4177f4:	js     0x4177ee
  4177f6:	sahf   
  4177f7:	popa   
  4177f8:	jg     0x4177ad
  4177fa:	dec    ebp
  4177fb:	adc    dl,ah
  4177fd:	mov    ah,0x96
  4177ff:	ret    
  417800:	aad    0xb7
  417802:	sub    eax,0xce1d5108
  417807:	jno    0x417865
  417809:	sbb    ch,BYTE PTR [esi]
  41780b:	sahf   
  41780c:	cwde   
  41780d:	sub    esi,esp
  41780f:	mov    dh,0xe6
  417811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417812:	mov    ah,0x2f
  417814:	stc    
  417815:	pop    edx
  417816:	outs   dx,DWORD PTR ds:[esi]
  417817:	loopne 0x4177d9
  417819:	inc    ebx
  41781a:	test   DWORD PTR [edx],ecx
  41781c:	adc    DWORD PTR [eax+0x588b8799],edi
  417822:	lea    edi,[ecx+0x773a6bff]
  417828:	cli    
  417829:	mov    ebp,0x7a5057aa
  41782e:	lahf   
  41782f:	sub    BYTE PTR [edx],ch
  417831:	xor    DWORD PTR [edx-0x68f2f19],0x4
  417838:	aam    0x12
  41783a:	add    eax,0xb3167858
  41783f:	lods   eax,DWORD PTR ds:[esi]
  417840:	inc    BYTE PTR [ecx]
  417842:	sti    
  417843:	(bad)  
  417845:	push   ecx
  417846:	aad    0xc1
  417848:	mov    bh,BYTE PTR [esi-0x26]
  41784b:	pop    ecx
  41784c:	cld    
  41784d:	pop    eax
  41784e:	test   eax,0x9c3bfa1d
  417853:	or     BYTE PTR [edx],bh
  417855:	cdq    
  417856:	ret    0x3959
  417859:	rcl    ah,0xa8
  41785c:	addr16 dec esp
  41785e:	xchg   esi,eax
  41785f:	adc    eax,0x914560e6
  417864:	add    BYTE PTR [eax+0x74],ch
  417867:	mov    bh,0xe2
  417869:	push   edi
  41786a:	pop    ebp
  41786b:	jns    0x4178e7
  41786d:	jns    0x417850
  41786f:	inc    eax
  417870:	cld    
  417871:	inc    ebx
  417872:	push   ebx
  417873:	lock mov edx,0x320e2260
  417879:	mov    dl,0x30
  41787b:	adc    esp,DWORD PTR [esp+edi*8+0x7137a27c]
  417882:	sub    BYTE PTR [ebx-0x64],bl
  417885:	mov    al,0x97
  417887:	mov    esp,0xa821607c
  41788c:	in     eax,dx
  41788d:	adc    DWORD PTR [eax],edi
  41788f:	mov    ecx,0x704d02af
  417894:	mov    BYTE PTR ds:0x2c5a8e40,dl
  41789a:	dec    ecx
  41789b:	sahf   
  41789c:	push   ds
  41789d:	xlat   BYTE PTR ds:[ebx]
  41789e:	ss add al,0x37
  4178a1:	push   ebp
  4178a2:	(bad)  
  4178a3:	jmp    0x2977f644
  4178a8:	mov    BYTE PTR [edi+0x18041f9d],al
  4178ae:	ss jle 0x4178c3
  4178b1:	ret    0xb023
  4178b4:	push   cs
  4178b5:	and    eax,0x2a73c2d3
  4178ba:	jg     0x417869
  4178bc:	popf   
  4178bd:	pop    esp
  4178be:	xor    eax,0xae96f684
  4178c3:	mov    ch,0xb4
  4178c5:	in     al,dx
  4178c6:	jbe    0x4178c9
  4178c8:	xor    DWORD PTR ds:0xb5846bdd,0x8ccc778b
  4178d2:	int3   
  4178d3:	push   es
  4178d4:	jg     0x417885
  4178d6:	dec    edx
  4178d7:	ret    
  4178d8:	inc    esp
  4178d9:	jnp    0x417941
  4178db:	test   al,0x2f
  4178dd:	jle    0x4178b6
  4178df:	hlt    
  4178e0:	sub    esp,ebp
  4178e2:	xlat   BYTE PTR ds:[ebx]
  4178e3:	pop    esp
  4178e4:	out    0x9d,al
  4178e6:	out    0xc9,al
  4178e8:	xor    al,dh
  4178ea:	inc    ebp
  4178eb:	mov    BYTE PTR [esp+ecx*8-0x73c82ce8],ah
  4178f2:	or     esi,DWORD PTR [ecx-0x294efbf9]
  4178f8:	aas    
  4178f9:	push   ecx
  4178fa:	stos   DWORD PTR es:[edi],eax
  4178fb:	sub    eax,0x81341e7
  417900:	cld    
  417901:	inc    eax
  417902:	(bad)  
  417903:	loop   0x4178ef
  417905:	jp     0x417962
  417907:	clc    
  417908:	aas    
  417909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41790a:	fsub   DWORD PTR [esi+edi*1+0x241bff74]
  417911:	aas    
  417912:	push   ebx
  417913:	pusha  
  417914:	iret   
  417915:	aad    0x4d
  417917:	mov    edi,0xdd5deb4f
  41791c:	in     eax,0xe1
  41791e:	mov    dl,0x13
  417920:	mov    bh,0xd2
  417922:	cmp    al,0x59
  417924:	xor    BYTE PTR [edx],al
  417926:	sbb    BYTE PTR [eax+edx*4],cl
  417929:	aaa    
  41792a:	mov    esp,0xde1cf2f2
  41792f:	and    DWORD PTR [ebx+0x5a1ef98d],ebx
  417935:	gs das 
  417937:	and    al,0x8d
  417939:	mul    DWORD PTR [edx*8+0x3d2d66d2]
  417940:	inc    DWORD PTR [eax+0x3c]
  417943:	xchg   edx,eax
  417944:	std    
  417945:	out    dx,al
  417946:	mov    bl,0x8c
  417948:	dec    esp
  417949:	jmp    0x417967
  41794b:	addr16 dec esp
  41794d:	push   ss
  41794e:	jae    0x417978
  417950:	dec    eax
  417951:	mov    edx,0xd205cf73
  417956:	cwde   
  417957:	jns    0x4178f9
  417959:	lahf   
  41795a:	jmp    0x417901
  41795c:	adc    DWORD PTR [ecx],0xc27223ab
  417962:	cmp    DWORD PTR [ebp-0x4041ee9],edi
  417968:	xchg   ecx,eax
  417969:	ins    DWORD PTR es:[edi],dx
  41796a:	das    
  41796b:	mov    dh,0xaf
  41796d:	js     0x417970
  41796f:	lahf   
  417970:	stos   BYTE PTR es:[edi],al
  417971:	cwde   
  417972:	ret    
  417973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417974:	jp     0x41790b
  417976:	vpternlogq ymm4{k5},ymm3,QWORD PTR [edx-0x374dd87]{1to4},0xba
  417981:	dec    edx
  417982:	push   0x978106e3
  417987:	pop    DWORD PTR [ecx]
  417989:	pop    edx
  41798a:	mov    ds:0xb7e51b2b,al
  41798f:	inc    esp
  417990:	test   BYTE PTR [ecx+0x2d],cl
  417993:	xor    esi,DWORD PTR [eax+0x41023e4]
  417999:	inc    esi
  41799a:	js     0x41795b
  41799c:	pop    esp
  41799d:	adc    eax,0xf8dfac1f
  4179a2:	test   eax,0x9ed7d185
  4179a7:	cmp    esp,DWORD PTR [eax+0x6c]
  4179aa:	xchg   esi,eax
  4179ab:	push   es
  4179ac:	sbb    BYTE PTR [ecx+0xd],0x91
  4179b0:	add    DWORD PTR [esi+0x3301548d],edi
  4179b6:	inc    ebp
  4179b7:	std    
  4179b8:	(bad)  
  4179b9:	mov    eax,ds:0xe12fa620
  4179be:	mov    edx,0xade39b7a
  4179c3:	jae    0x417a11
  4179c5:	mov    dh,0x51
  4179c7:	cmc    
  4179c8:	adc    BYTE PTR [ebx+0x2f],cl
  4179cb:	cmp    edi,eax
  4179cd:	fwait
  4179ce:	pop    edi
  4179cf:	push   es
  4179d0:	sub    esp,DWORD PTR [ebx]
  4179d2:	sub    ch,BYTE PTR [esi]
  4179d4:	mov    esp,cs
  4179d6:	popf   
  4179d7:	test   eax,0xcbefd588
  4179dc:	mov    eax,0x641a9ee0
  4179e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e2:	clc    
  4179e3:	pop    eax
  4179e4:	mov    dl,0xbf
  4179e6:	dec    esp
  4179e7:	call   0x4fe36f48
  4179ec:	mov    bl,0xd4
  4179ee:	adc    eax,0x1179a6e1
  4179f3:	aaa    
  4179f4:	ror    DWORD PTR [eax-0x89de49a],1
  4179fa:	fs in  eax,dx
  4179fc:	adc    BYTE PTR [eax+0x35],bl
  4179ff:	popf   
  417a00:	inc    ebp
  417a01:	call   FWORD PTR [ecx+ecx*1]
  417a04:	or     DWORD PTR [eax-0x4fa71ce6],edx
  417a0a:	popf   
  417a0b:	adc    eax,0xe3c4a1cf
  417a10:	xchg   ecx,eax
  417a11:	pop    esi
  417a12:	test   al,0xae
  417a14:	mov    dl,0xe6
  417a16:	ret    
  417a17:	das    
  417a18:	jge    0x417a5e
  417a1a:	ds inc ebp
  417a1c:	or     BYTE PTR [ebp-0x78],0x1c
  417a20:	dec    esi
  417a21:	pop    ebx
  417a22:	ds (bad) 
  417a24:	xor    BYTE PTR [ebx+0xaa50a9a],al
  417a2a:	(bad)  
  417a2b:	repz jne 0x417a7b
  417a2e:	jmp    0x4179bf
  417a30:	sbb    ebx,edx
  417a32:	xor    eax,0x6a19ecee
  417a37:	and    dl,bh
  417a39:	lds    edx,FWORD PTR [edx+0x78c49f0]
  417a3f:	scas   al,BYTE PTR es:[edi]
  417a40:	dec    eax
  417a41:	shl    BYTE PTR ds:0x9bf6f30e,0x1c
  417a48:	and    edx,edi
  417a4a:	daa    
  417a4b:	stos   DWORD PTR es:[edi],eax
  417a4c:	pushf  
  417a4d:	jns    0x4179e4
  417a4f:	in     al,dx
  417a50:	jl     0x417a0b
  417a52:	out    dx,al
  417a53:	and    al,0x78
  417a55:	push   ss
  417a56:	in     al,dx
  417a57:	jmp    0x4179f1
  417a59:	or     eax,0x2a6a03c0
  417a5e:	mov    esi,0xf67361da
  417a63:	(bad)  
  417a64:	dec    eax
  417a65:	pop    ebp
  417a66:	pop    esp
  417a67:	inc    edi
  417a68:	nop
  417a69:	neg    ebx
  417a6b:	push   esi
  417a6c:	pop    ebp
  417a6d:	leave  
  417a6e:	mov    eax,ds:0x9f6fffd2
  417a73:	pextrw esp,(bad),0xc5
  417a75:	and    eax,DWORD PTR [eax+0x25]
  417a78:	jmp    0x6e8:0xea43ec6b
  417a7f:	mov    eax,ds:0x26f441cc
  417a84:	mov    esi,DWORD PTR [edi+0x131b3d89]
  417a8a:	fmul   DWORD PTR [edi+0x4c]
  417a8d:	inc    BYTE PTR [edx+0x38]
  417a90:	or     ch,BYTE PTR [edx+0x76dff046]
  417a96:	mov    cl,0xc
  417a98:	lea    eax,[esi+ecx*1-0x514dfbcb]
  417a9f:	mov    DWORD PTR [ecx+0x16],eax
  417aa2:	ins    DWORD PTR es:[edi],dx
  417aa3:	dec    edx
  417aa4:	mov    ds:0x8cbdc214,al
  417aa9:	dec    eax
  417aaa:	jmp    0x417a91
  417aac:	pop    esp
  417aad:	in     eax,dx
  417aae:	fabs   
  417ab0:	xor    DWORD PTR [ebx+0x64ed77bf],esp
  417ab6:	xor    eax,0xa2bd0f7
  417abb:	cmp    BYTE PTR [ebx],0xa2
  417abe:	inc    ecx
  417abf:	jge    0x417a7c
  417ac1:	in     eax,0xf6
  417ac3:	cwde   
  417ac4:	push   ecx
  417ac5:	and    DWORD PTR [ebp+edx*4+0x6ce59a71],ecx
  417acc:	mov    esi,0x21c9e7bb
  417ad1:	das    
  417ad2:	jae    0x417b16
  417ad4:	test   DWORD PTR [edi+ecx*1+0x3c],esi
  417ad8:	jp     0x417aa4
  417ada:	lea    ecx,[eax-0x2d]
  417add:	mov    al,0x81
  417adf:	mov    eax,ds:0x658f385
  417ae4:	xchg   edx,eax
  417ae5:	aam    0xf0
  417ae7:	jg     0x417a7e
  417ae9:	cmp    DWORD PTR [ebp-0x1bb16dc5],edx
  417aef:	push   0xed6aa079
  417af4:	out    0x69,eax
  417af6:	and    DWORD PTR [ebp-0xbd4ce4c],0x16
  417afd:	imul   ecx,DWORD PTR [edi+0x62],0xffffffc7
  417b01:	mov    ah,0xd1
  417b03:	or     eax,DWORD PTR [eax-0x3f]
  417b06:	xlat   BYTE PTR ds:[ebx]
  417b07:	std    
  417b08:	sub    edi,DWORD PTR [ebx+0x5a4ec616]
  417b0e:	add    al,0xfe
  417b10:	adc    DWORD PTR [ebp+eax*2+0x8888944],esp
  417b17:	xchg   ebx,eax
  417b18:	jae    0x417ad8
  417b1a:	call   0x5d68eb5b
  417b1f:	inc    edx
  417b20:	aas    
  417b21:	and    esp,ebp
  417b23:	stc    
  417b24:	sbb    eax,0x813c4b54
  417b29:	pop    ecx
  417b2a:	mov    ds:0x6009a942,al
  417b2f:	sub    ebx,DWORD PTR [eax+esi*8]
  417b32:	scas   al,BYTE PTR es:[edi]
  417b33:	shl    DWORD PTR [edx],cl
  417b35:	aaa    
  417b36:	popa   
  417b37:	mov    al,ds:0x7309fb
  417b3c:	or     BYTE PTR [edx+0x7c],dl
  417b3f:	int3   
  417b40:	sub    BYTE PTR [eax+edx*2],cl
  417b43:	jp     0x417ac7
  417b45:	mov    ecx,0xd0f2bf5d
  417b4a:	es mov cl,0xfe
  417b4d:	xchg   DWORD PTR [eax+0x25],ebx
  417b50:	sar    DWORD PTR [ebx-0xb],0x28
  417b54:	das    
  417b55:	jae    0x417bad
  417b57:	xor    ah,cl
  417b59:	fmul   QWORD PTR [edx+0x39]
  417b5c:	icebp  
  417b5d:	sub    al,0xef
  417b5f:	push   es
  417b60:	or     ch,BYTE PTR [ebx-0x3ecada1b]
  417b66:	ins    BYTE PTR es:[edi],dx
  417b67:	adc    ebp,DWORD PTR [edi-0x440bae2b]
  417b6d:	mov    dh,0x5f
  417b6f:	push   esi
  417b70:	xor    bh,BYTE PTR [ecx-0x4e]
  417b73:	jg     0x417b2a
  417b75:	ins    DWORD PTR es:[edi],dx
  417b76:	in     al,0x49
  417b78:	mov    edi,0xdd3d6c91
  417b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b7e:	jp     0x417bdb
  417b80:	aas    
  417b81:	ds xor bh,dl
  417b84:	push   ss
  417b85:	sar    BYTE PTR [edx+0x2c],1
  417b88:	call   0x958d:0x745c4199
  417b8f:	in     al,dx
  417b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b91:	fadd   QWORD PTR [ecx+eax*4]
  417b94:	ja     0x417b5b
  417b96:	pop    eax
  417b97:	mov    ch,0x47
  417b99:	out    dx,eax
  417b9a:	inc    esp
  417b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b9c:	mov    al,0x26
  417b9e:	inc    esi
  417b9f:	test   BYTE PTR ds:0x346af85a,ch
  417ba5:	jno    0x417c13
  417ba7:	xor    al,0x23
  417ba9:	mov    WORD PTR [eax+ecx*2-0x53],cs
  417bad:	jl     0x417ba2
  417baf:	loope  0x417b78
  417bb1:	xor    dl,0xc8
  417bb4:	pop    ds
  417bb5:	sti    
  417bb6:	test   eax,0x2c109459
  417bbb:	(bad)  [edx*1-0xa234467]
  417bc2:	fnstcw WORD PTR [edx]
  417bc4:	rcr    DWORD PTR [esi+0x122ed16e],0xe8
  417bcb:	adc    eax,edi
  417bcd:	mov    bl,0xa4
  417bcf:	xacquire xchg BYTE PTR [ebx-0x4a],ah
  417bd3:	(bad)  
  417bd4:	push   cs
  417bd5:	sbb    ch,bh
  417bd7:	cwde   
  417bd8:	ins    BYTE PTR es:[edi],dx
  417bd9:	stos   DWORD PTR es:[edi],eax
  417bda:	push   ss
  417bdb:	popf   
  417bdc:	xchg   DWORD PTR [ebx],esp
  417bde:	mov    ebx,DWORD PTR [ecx+0x40]
  417be1:	fild   QWORD PTR [esi+edi*2-0xb]
  417be5:	mov    al,0x1f
  417be7:	jp     0x417c22
  417be9:	dec    ebp
  417bea:	add    al,0x79
  417bec:	(bad)  
  417bed:	aam    0x5a
  417bef:	or     dl,BYTE PTR [ebx]
  417bf1:	cmp    DWORD PTR ds:0x81abdf40,ebp
  417bf7:	add    BYTE PTR [edx+0x16c3df13],bh
  417bfd:	push   eax
  417bfe:	frstor [ecx-0x4c]
  417c01:	aad    0xec
  417c03:	mov    ?,WORD PTR [ebx]
  417c05:	mov    dh,0x84
  417c07:	rol    DWORD PTR [edi+0x23201685],0x3f
  417c0e:	pop    ss
  417c0f:	mov    dh,0xb5
  417c11:	cld    
  417c12:	or     al,0x5e
  417c14:	mov    ds,WORD PTR [edx-0x5f]
  417c17:	int3   
  417c18:	xor    BYTE PTR [esi-0x43],bl
  417c1b:	push   ss
  417c1c:	imul   esp,DWORD PTR [edi],0x76
  417c1f:	xchg   esi,eax
  417c20:	push   ebx
  417c21:	inc    eax
  417c22:	call   0xdc9644cf
  417c27:	mov    ebp,0xab245076
  417c2c:	add    esp,ebx
  417c2e:	sbb    edi,edi
  417c30:	or     eax,0x94ca19cf
  417c35:	repz and DWORD PTR [ebx-0x3b],edx
  417c39:	fsubr  QWORD PTR [edx-0x26]
  417c3c:	xor    esi,ecx
  417c3e:	push   0xffffffe0
  417c40:	pop    edx
  417c41:	xor    BYTE PTR [edx*2-0x1657d4bd],dh
  417c48:	mov    edx,0x2b584c03
  417c4d:	ja     0x417c03
  417c4f:	mov    BYTE PTR [ebp+0x71],ah
  417c52:	dec    ecx
  417c53:	sub    al,0xdf
  417c55:	sub    eax,0x606b5657
  417c5b:	out    0x3c,eax
  417c5d:	out    dx,al
  417c5e:	inc    esi
  417c5f:	add    bl,BYTE PTR cs:[ecx+0x3e244f6]
  417c66:	sbb    ecx,ecx
  417c68:	sub    BYTE PTR [ebx-0x4fa5d439],ch
  417c6e:	les    edi,FWORD PTR [ebx+eax*1+0x2]
  417c72:	mov    cl,0x46
  417c74:	inc    eax
  417c75:	outs   dx,DWORD PTR ds:[esi]
  417c76:	gs pop edx
  417c78:	std    
  417c79:	in     eax,dx
  417c7a:	in     al,dx
  417c7b:	cdq    
  417c7c:	mov    ebp,0x4a83d111
  417c81:	cmc    
  417c82:	jmp    0x5cb7989f
  417c87:	cld    
  417c88:	dec    edx
  417c89:	add    edi,eax
  417c8b:	xor    BYTE PTR [esi+0x51],al
  417c8e:	fstp   QWORD PTR [edi-0x88f75ce]
  417c94:	and    ch,BYTE PTR [ebp+0x42774b16]
  417c9a:	es leave 
  417c9c:	cli    
  417c9d:	loop   0x417ca0
  417c9f:	cs in  eax,dx
  417ca1:	and    BYTE PTR [ecx],al
  417ca3:	xor    eax,ecx
  417ca5:	sub    ah,0x77
  417ca8:	js     0x417c6e
  417caa:	cld    
  417cab:	mov    eax,ds:0x880c5e2
  417cb0:	pusha  
  417cb1:	push   eax
  417cb2:	lods   al,BYTE PTR ds:[esi]
  417cb3:	icebp  
  417cb4:	inc    edx
  417cb5:	xchg   DWORD PTR ds:0xee0bd9b6,ecx
  417cbb:	clc    
  417cbc:	mov    ebp,0xe7886278
  417cc1:	push   ecx
  417cc2:	popa   
  417cc3:	jmp    0x417d0a
  417cc5:	icebp  
  417cc6:	jge    0x417c71
  417cc8:	and    DWORD PTR [edx-0x4c],ebx
  417ccb:	out    0x42,al
  417ccd:	push   esp
  417cce:	mov    eax,0x7edfbb33
  417cd3:	and    ebx,edi
  417cd5:	jo     0x417ca6
  417cd7:	imul   esp,DWORD PTR [edi+0x26e631ac],0x9d0e1938
  417ce1:	jge    0x417cd0
  417ce3:	shl    BYTE PTR [ecx-0x61],cl
  417ce6:	dec    esi
  417ce7:	dec    ecx
  417ce8:	push   cs
  417ce9:	push   ebx
  417cea:	push   edi
  417ceb:	xor    bh,BYTE PTR [ecx+eax*4-0x4e8d8fcc]
  417cf2:	pop    ebp
  417cf3:	ins    BYTE PTR es:[edi],dx
  417cf4:	gs pop ds
  417cf6:	loopne 0x417c8b
  417cf8:	push   edi
  417cf9:	test   BYTE PTR ds:0x76359c48,0xdf
  417d00:	call   FWORD PTR [esi+ebx*1+0x4755a203]
  417d07:	jns    0x417ce2
  417d09:	ins    BYTE PTR es:[edi],dx
  417d0a:	and    DWORD PTR [ecx],ebp
  417d0c:	adc    eax,0x90a5977
  417d11:	and    edi,DWORD PTR [eax+ebp*4+0x3b]
  417d15:	(bad)  
  417d16:	mov    bh,0xbf
  417d18:	call   0x940c:0x27e7a42a
  417d1f:	call   0xe14b:0xf747d575
  417d26:	pop    edi
  417d27:	rcr    DWORD PTR [ebp-0xd],1
  417d2a:	loope  0x417d8d
  417d2c:	(bad)  
  417d2d:	in     eax,0x10
  417d2f:	jne    0x417d1a
  417d31:	cli    
  417d32:	mov    dh,0xfc
  417d34:	ins    BYTE PTR es:[edi],dx
  417d35:	jno    0x417cc1
  417d37:	nop
  417d38:	data16 fcmovnb st,st(4)
  417d3b:	mov    esi,0xd1ad5d0b
  417d40:	add    eax,0x86b334cf
  417d45:	fadd   st(2),st
  417d47:	dec    esi
  417d48:	rcl    BYTE PTR [ebx-0x3556f498],1
  417d4e:	or     BYTE PTR ds:[edi+edi*1-0x9c481e5],ch
  417d56:	add    ecx,0xd
  417d59:	(bad)  
  417d5a:	jnp    0x417d71
  417d5c:	pop    esi
  417d5d:	sbb    DWORD PTR [edi-0x26ecead5],edi
  417d63:	cwde   
  417d64:	xor    eax,0xf7d6a2
  417d69:	outs   dx,BYTE PTR ds:[esi]
  417d6a:	js     0x417d80
  417d6c:	add    DWORD PTR [ecx-0x47ea7b32],edx
  417d72:	mov    eax,ds:0xaeaf1d02
  417d77:	out    dx,eax
  417d78:	hlt    
  417d79:	and    ebp,DWORD PTR [ebp+0x67]
  417d7c:	adc    BYTE PTR [edx],bl
  417d7e:	inc    eax
  417d7f:	sbb    BYTE PTR [eax+edx*1+0x64c8a64f],cl
  417d86:	and    bh,BYTE PTR [edi]
  417d88:	aaa    
  417d89:	fmul   DWORD PTR [ebx-0x2b]
  417d8c:	sub    al,0xa8
  417d8e:	xor    ch,BYTE PTR [eax+edx*2-0xd]
  417d92:	jne    0x417dfe
  417d94:	xchg   edx,eax
  417d95:	pop    edi
  417d96:	mov    ebx,0x4bc29bc
  417d9b:	jnp    0x417e05
  417d9d:	pop    edi
  417d9e:	stos   DWORD PTR es:[edi],eax
  417d9f:	pushf  
  417da0:	xor    BYTE PTR [edx],dh
  417da2:	lods   eax,DWORD PTR ds:[si]
  417da4:	popf   
  417da5:	ss pop esi
  417da7:	lods   eax,DWORD PTR ds:[esi]
  417da8:	not    BYTE PTR [esp+esi*8-0x6]
  417dac:	xchg   edi,eax
  417dad:	sub    edi,DWORD PTR [edi]
  417daf:	mov    edi,DWORD PTR [eax+eax*2-0x24]
  417db3:	(bad)  
  417db4:	and    al,0xbc
  417db6:	cmp    ch,BYTE PTR [eax-0x51df75bd]
  417dbc:	xchg   esi,eax
  417dbd:	in     eax,0xe2
  417dbf:	push   esp
  417dc0:	call   0xa3fa:0x42e301c
  417dc7:	xchg   edx,eax
  417dc8:	int3   
  417dc9:	mov    ch,0x2f
  417dcb:	imul   ah
  417dcd:	pop    ebp
  417dce:	and    eax,0xde125175
  417dd3:	ins    DWORD PTR es:[edi],dx
  417dd4:	(bad)  
  417dd5:	ret    
  417dd6:	dec    ecx
  417dd7:	fiadd  WORD PTR [ebx+0x55]
  417dda:	fidiv  WORD PTR [eax-0x27]
  417ddd:	sbb    al,0xf
  417ddf:	arpl   dx,bx
  417de1:	bound  edi,QWORD PTR [edx+0x363b98f7]
  417de7:	or     DWORD PTR [ecx],ebx
  417de9:	sub    eax,0x3d1bc796
  417dee:	jmp    0x265a:0x969c521b
  417df5:	mov    al,ds:0xef08aaff
  417dfa:	aaa    
  417dfb:	stc    
  417dfc:	ret    0xaca5
  417dff:	push   esi
  417e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e01:	loope  0x417e16
  417e03:	(bad)  
  417e04:	xchg   edx,eax
  417e05:	test   eax,0x5a42c124
  417e0a:	mov    DWORD PTR [ebx],ebp
  417e0c:	mov    bh,0x2b
  417e0e:	cmp    DWORD PTR [ebx+0x3e],ebx
  417e11:	push   ebx
  417e12:	sbb    DWORD PTR [edi+0x4f43098b],0xffffffd8
  417e19:	xor    ecx,DWORD PTR [edi+0x3bcb0360]
  417e1f:	test   al,0xbd
  417e21:	xchg   edx,edi
  417e23:	mov    ebp,esp
  417e25:	shl    DWORD PTR [esp+ebp*1-0x15c34505],0x90
  417e2d:	stos   BYTE PTR es:[edi],al
  417e2e:	mov    eax,ds:0xc43c4d8
  417e33:	cmp    eax,0x76691b45
  417e38:	enter  0x1875,0xe7
  417e3c:	jb     0x417dc2
  417e3e:	das    
  417e3f:	fs popf 
  417e41:	mov    dl,0x5e
  417e43:	xchg   ebp,eax
  417e44:	jnp    0x417e56
  417e46:	(bad)  
  417e48:	mov    eax,ds:0x1558d390
  417e4d:	imul   esp,DWORD PTR [ebp-0x1f],0x5f
  417e51:	je     0x417e55
  417e53:	ret    0x2d33
  417e56:	enter  0xf694,0xdc
  417e5a:	test   al,0xc4
  417e5c:	(bad)  
  417e5d:	cmp    eax,0x3d493078
  417e62:	lock out dx,eax
  417e64:	popa   
  417e65:	push   ecx
  417e66:	jnp    0x417e0e
  417e68:	sti    
  417e69:	sub    bh,BYTE PTR [ebx-0xe]
  417e6c:	pop    edi
  417e6d:	lds    edi,FWORD PTR [eax-0x56]
  417e70:	das    
  417e71:	add    bl,BYTE PTR [esi]
  417e73:	leave  
  417e74:	scas   al,BYTE PTR es:[edi]
  417e75:	sbb    ebp,DWORD PTR ds:0x638daea7
  417e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e7c:	(bad)  
  417e7d:	div    BYTE PTR [edx]
  417e7f:	or     ah,al
  417e81:	(bad)  
  417e82:	(bad)  
  417e83:	nop
  417e84:	mov    ebx,0x5ddf34f4
  417e89:	clc    
  417e8a:	bound  ebp,QWORD PTR [ebx+0x799c1f91]
  417e90:	jmp    0x7a78f4b5
  417e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e96:	dec    esp
  417e97:	dec    edi
  417e98:	xchg   DWORD PTR [ebx],esi
  417e9a:	test   BYTE PTR [ebx-0x9],al
  417e9d:	pop    ebx
  417e9e:	retf   
  417e9f:	rol    BYTE PTR [edx+0x66188b91],1
  417ea5:	xor    eax,0x13b5dcb0
  417eaa:	fcmovb st,st(0)
  417eac:	push   ecx
  417ead:	(bad)  
  417eae:	jbe    0x417eab
  417eb0:	mov    esp,0xa69ae49c
  417eb5:	mov    esi,0x6ef96c68
  417eba:	mov    eax,0x61eb0474
  417ebf:	cmp    cl,BYTE PTR [edi-0x76]
  417ec2:	adc    bh,BYTE PTR [eax+ebp*1]
  417ec5:	jo     0x417ec5
  417ec7:	data16 add BYTE PTR [ecx-0x5ffdabaa],dh
  417ece:	pop    edi
  417ecf:	rcr    BYTE PTR [esi+0x33],0x88
  417ed3:	mov    ch,0x48
  417ed5:	inc    esp
  417ed6:	add    BYTE PTR [edi-0x13c96eaf],bh
  417edc:	adc    ebp,DWORD PTR [ebx-0x1d]
  417edf:	xor    ebx,ebx
  417ee1:	(bad)  
  417ee2:	cmp    esi,DWORD PTR [ebx+esi*4-0x3e164711]
  417ee9:	mov    ecx,0x435f2cd9
  417eee:	cwde   
  417eef:	nop
  417ef0:	or     BYTE PTR [esi+0x169c7789],0xb5
  417ef7:	or     esi,DWORD PTR [ebx+0xc20de67]
  417efd:	sbb    ecx,ebp
  417eff:	pop    ebp
  417f00:	je     0x417f7c
  417f02:	pop    ds
  417f03:	mov    al,0x27
  417f05:	out    0x7c,eax
  417f07:	sub    bh,al
  417f09:	sti    
  417f0a:	jbe    0x417f3a
  417f0c:	inc    edx
  417f0d:	addr16 adc edi,esp
  417f10:	test   DWORD PTR [ebp+0x1cc21b9e],esi
  417f16:	xchg   ecx,eax
  417f17:	mov    eax,0xde54ae51
  417f1c:	adc    BYTE PTR [ebx+0x2d591264],bl
  417f22:	pop    edi
  417f23:	adc    bl,BYTE PTR ds:[eax+0x37]
  417f27:	enter  0xf9c,0x1a
  417f2b:	push   0xffffffb9
  417f2d:	clc    
  417f2e:	rcr    DWORD PTR [ecx-0x7e6edb12],0x30
  417f35:	ins    BYTE PTR es:[edi],dx
  417f36:	sar    DWORD PTR [edx],1
  417f38:	aam    0xa
  417f3a:	adc    bh,BYTE PTR [ebx]
  417f3c:	or     edx,DWORD PTR [ecx*4+0x346936d4]
  417f43:	bnd jne 0x417eef
  417f46:	xchg   ebp,eax
  417f47:	mov    WORD PTR [edx],fs
  417f49:	(bad)  
  417f4a:	(bad)  
  417f4b:	icebp  
  417f4c:	or     DWORD PTR [ebx],esi
  417f4e:	cmp    ebp,edi
  417f50:	xor    al,0xdd
  417f52:	test   DWORD PTR [edi-0x6c],eax
  417f55:	ss and ebx,ebx
  417f58:	(bad)  
  417f59:	and    eax,0x220a1a50
  417f5e:	xor    BYTE PTR [edx-0x40eb444d],bl
  417f64:	inc    ecx
  417f65:	mov    BYTE PTR [edx+0x55],0x9
  417f69:	sbb    al,0x4e
  417f6b:	pop    eax
  417f6c:	lahf   
  417f6d:	xchg   edi,eax
  417f6e:	jns    0x417f66
  417f70:	mov    al,ds:0xf902d62e
  417f75:	packuswb mm4,QWORD PTR [ebp*1+0x50e82f3f]
  417f7d:	mov    dh,dh
  417f7f:	fstp   DWORD PTR [esp+edx*1-0x74]
  417f83:	jno    0x418003
  417f85:	int3   
  417f86:	lods   eax,DWORD PTR ds:[esi]
  417f87:	je     0x417ff2
  417f89:	enter  0x4fc3,0xa8
  417f8d:	das    
  417f8e:	repz dec esp
  417f90:	ror    DWORD PTR [esi],cl
  417f92:	fcomp  DWORD PTR ds:0xbca9e1e1
  417f98:	or     BYTE PTR [ecx+ecx*2+0x2144165c],dh
  417f9f:	(bad)  
  417fa0:	pop    ecx
  417fa1:	add    al,0xc3
  417fa3:	ret    0x9541
  417fa6:	fdiv   DWORD PTR [ecx]
  417fa8:	mov    ecx,0xb7b503b5
  417fad:	pushf  
  417fae:	inc    ebp
  417faf:	jno    0x417f58
  417fb1:	or     ebp,esi
  417fb3:	mov    eax,ds:0x2af8375f
  417fb8:	mov    edi,0xa2112f27
  417fbd:	fwait
  417fbe:	pop    ebx
  417fbf:	popa   
  417fc0:	cli    
  417fc1:	sbb    dl,BYTE PTR [ecx]
  417fc3:	rcl    BYTE PTR [ebp-0x5f],1
  417fc6:	push   cs
  417fc7:	aaa    
  417fc8:	mov    DWORD PTR [ebx-0x6a7628bd],eax
  417fce:	(bad)  
  417fcf:	push   ds
  417fd0:	aad    0x6e
  417fd2:	adc    dl,BYTE PTR [eax-0x1bd5a02]
  417fd8:	shl    BYTE PTR [eax-0x6d8776f5],1
  417fde:	adc    DWORD PTR ds:[eax+0x21],ebx
  417fe2:	sbb    ebx,DWORD PTR [esi]
  417fe4:	in     al,0xa4
  417fe6:	dec    edi
  417fe7:	sahf   
  417fe8:	es ins BYTE PTR es:[edi],dx
  417fea:	pop    ecx
  417feb:	jge    0x418030
  417fed:	jg     0x417f89
  417fef:	ficomp DWORD PTR [ecx]
  417ff1:	cmp    al,BYTE PTR [bp+si]
  417ff4:	lods   eax,DWORD PTR ds:[esi]
  417ff5:	mov    dl,0x50
  417ff7:	jno    0x417ff7
  417ff9:	arpl   WORD PTR [edx],sp
  417ffb:	jae    0x417ff1
  417ffd:	dec    ecx
  417ffe:	imul   eax,DWORD PTR [edi],0xec062a68
  418004:	call   0xd2c1494b
  418009:	xchg   ebp,eax
  41800a:	inc    ecx
  41800b:	mov    ebx,0x93845166
  418010:	add    al,0xb9
  418012:	rcl    BYTE PTR [esi+ebp*2-0xe],cl
  418016:	retf   
  418017:	imul   esp,DWORD PTR [ebx+0x73],0x33
  41801b:	and    eax,0x29124a9f
  418020:	mov    DWORD PTR [ecx-0x3a2d7f17],edi
  418026:	xchg   edi,eax
  418027:	dec    esi
  418028:	jmp    0x4b96:0xe719b540
  41802f:	dec    edx
  418030:	mov    ebx,0x3db7cba0
  418035:	xchg   edi,eax
  418036:	test   al,0x8e
  418038:	jo     0x418050
  41803a:	pop    es
  41803b:	cs jl  0x41804c
  41803e:	xchg   esp,eax
  41803f:	inc    ebp
  418040:	xor    eax,0x2b29c42b
  418045:	(bad)  
  418047:	adc    bl,dh
  418049:	xchg   edx,eax
  41804a:	and    al,0x92
  41804c:	add    edx,ecx
  41804e:	retf   
  41804f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418050:	cdq    
  418051:	std    
  418052:	add    ebp,DWORD PTR [eax+0x54d92c01]
  418058:	jecxz  0x418003
  41805a:	cdq    
  41805b:	cmp    dl,BYTE PTR [eax-0x43]
  41805e:	es adc al,0x7b
  418061:	ds out 0x10,eax
  418064:	gs ret 0x87c9
  418068:	pop    es
  418069:	push   ebp
  41806a:	push   0x8211e266
  41806f:	scas   eax,DWORD PTR es:[edi]
  418070:	xor    DWORD PTR [edi+0x4c],esi
  418073:	stc    
  418074:	cli    
  418075:	test   eax,0x6ecec270
  41807a:	inc    edi
  41807b:	jno    0x4180cd
  41807d:	xchg   ebp,eax
  41807e:	adc    al,0x19
  418080:	aam    0x7d
  418082:	das    
  418083:	enter  0x7e58,0x75
  418087:	mov    ss,WORD PTR ds:[edx+0x40]
  41808b:	inc    esp
  41808c:	mov    esi,0x6471fda3
  418091:	xchg   esp,eax
  418092:	mov    edi,0xc79835f0
  418097:	enter  0xddda,0x1a
  41809b:	repnz xlat BYTE PTR ds:[ebx]
  41809d:	pop    edx
  41809e:	jb     0x418024
  4180a0:	jne    0x418115
  4180a2:	sbb    BYTE PTR [edi+ebp*4+0x2ec187cb],bl
  4180a9:	jbe    0x418073
  4180ab:	jb     0x41812b
  4180ad:	cld    
  4180ae:	push   ebp
  4180af:	pop    esi
  4180b0:	sub    esp,ecx
  4180b2:	test   BYTE PTR [edi+0x7],ah
  4180b5:	mov    dl,0x84
  4180b7:	push   es
  4180b8:	out    0x55,al
  4180ba:	lea    esp,[ecx]
  4180bc:	push   esi
  4180bd:	std    
  4180be:	mov    esi,0xc0609ffa
  4180c3:	retf   
  4180c4:	mov    cl,0xcb
  4180c6:	cli    
  4180c7:	sub    al,0x5d
  4180c9:	sbb    ebp,DWORD PTR [ebp+0x4f]
  4180cc:	cs repnz jecxz 0x418109
  4180d0:	sbb    eax,0x82127161
  4180d5:	outs   dx,BYTE PTR ds:[esi]
  4180d6:	inc    esp
  4180d7:	mov    dl,dh
  4180d9:	mov    edx,0x431bb8af
  4180de:	cmp    eax,0x809a58c9
  4180e3:	in     al,0x39
  4180e5:	mov    eax,0x8ae7f588
  4180ea:	sbb    al,0xb3
  4180ec:	jne    0x4180ec
  4180ee:	xor    BYTE PTR [eax-0x4650c4],bh
  4180f4:	jp     0x4180a4
  4180f6:	ror    dl,1
  4180f8:	xchg   ebp,eax
  4180f9:	sub    ecx,DWORD PTR [bx+0x15c1]
  4180fe:	mov    al,ds:0x2ab6f3b3
  418103:	mov    DWORD PTR [esi+0x6a],edx
  418106:	adc    al,BYTE PTR [ebx+0x56]
  418109:	adc    eax,0xcf8cdcd1
  41810e:	sub    dl,BYTE PTR [ebx]
  418110:	fwait
  418111:	popf   
  418112:	ficomp DWORD PTR [edx-0x793dbbc2]
  418118:	mov    eax,ds:0x8319c3d8
  41811d:	outs   dx,BYTE PTR ds:[esi]
  41811e:	ss sahf 
  418120:	les    eax,FWORD PTR [eax-0x25eccd36]
  418126:	(bad)  
  418127:	dec    ebp
  418128:	shr    edx,0x9
  41812b:	in     al,0xb6
  41812d:	mov    es,WORD PTR [edi-0x3c58f765]
  418133:	xor    al,BYTE PTR [esi+0x37266e3d]
  418139:	stos   DWORD PTR es:[edi],eax
  41813a:	dec    eax
  41813b:	mov    eax,ds:0x2591a6e8
  418140:	dec    eax
  418141:	push   eax
  418142:	sbb    BYTE PTR [eax+esi*2],dh
  418145:	ficom  DWORD PTR [edi-0x3d]
  418148:	jge    0x418171
  41814a:	lahf   
  41814b:	mov    al,0x98
  41814d:	aas    
  41814e:	add    al,0x50
  418150:	pop    edi
  418151:	pop    esi
  418152:	aad    0x2e
  418154:	pop    eax
  418155:	shr    DWORD PTR [esi],0x96
  418158:	cmp    eax,0xc090105d
  41815d:	iret   
  41815e:	sti    
  41815f:	sbb    eax,0xa5061040
  418164:	jns    0x4180e7
  418166:	sti    
  418167:	mov    WORD PTR ds:0xa22976c6,?
  41816d:	cli    
  41816e:	or     eax,DWORD PTR [esi]
  418170:	pop    eax
  418171:	das    
  418172:	stos   DWORD PTR es:[edi],eax
  418173:	loope  0x41817b
  418175:	test   BYTE PTR [ebp-0x1aac301c],bl
  41817b:	mov    fs,esi
  41817d:	popf   
  41817e:	jp     0x4181a6
  418180:	enter  0x8031,0x48
  418184:	xchg   edi,eax
  418185:	int3   
  418186:	iret   
  418187:	dec    ebp
  418188:	imul   esp,DWORD PTR [eax-0x79349f87],0x58fe111c
  418192:	adc    DWORD PTR [edx],eax
  418194:	mov    ebx,DWORD PTR [edx+0x1b30669]
  41819a:	sub    DWORD PTR ds:[ecx-0x37],ebp
  41819e:	and    eax,0x67cc4198
  4181a3:	idiv   BYTE PTR [ebx+0x28]
  4181a6:	(bad)  
  4181a7:	nop
  4181a8:	or     DWORD PTR [edx],0x10a820b0
  4181ae:	dec    ebp
  4181af:	pop    esp
  4181b0:	push   edx
  4181b1:	leave  
  4181b2:	popa   
  4181b3:	in     al,0xce
  4181b5:	sbb    al,0xab
  4181b7:	xor    bh,bh
  4181b9:	cmp    ecx,DWORD PTR [esi+0x67d5dcf7]
  4181bf:	mov    ah,dh
  4181c1:	xchg   esi,eax
  4181c2:	out    0x81,al
  4181c4:	icebp  
  4181c5:	sti    
  4181c6:	dec    eax
  4181c7:	data16 into 
  4181c9:	sbb    al,0x72
  4181cb:	xor    eax,0x1b55ae2d
  4181d0:	je     0x4181ae
  4181d2:	or     eax,0xb0b2030
  4181d7:	xchg   edx,eax
  4181d8:	in     al,dx
  4181d9:	mov    bh,0x75
  4181db:	dec    ebx
  4181dc:	sbb    cl,BYTE PTR [edi]
  4181de:	dec    eax
  4181df:	mov    dh,0xbb
  4181e1:	int    0xd4
  4181e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181e4:	xchg   ebx,eax
  4181e5:	call   0x270ef1ef
  4181ea:	leave  
  4181eb:	pop    esp
  4181ec:	sar    BYTE PTR [edx+0x503e85fc],1
  4181f2:	rol    eax,0x41
  4181f5:	jg     0x418247
  4181f7:	jg     0x418203
  4181f9:	(bad)  
  4181fa:	jmp    DWORD PTR [ebp-0x6d]
  4181fd:	fwait
  4181fe:	xchg   esp,eax
  4181ff:	sub    eax,0x9aa09dc9
  418204:	inc    ebx
  418205:	xchg   ebx,eax
  418206:	xchg   DWORD PTR [ecx+0x44],ebx
  418209:	jmp    0x418269
  41820b:	cmc    
  41820c:	ret    0xa60b
  41820f:	or     ch,al
  418211:	and    DWORD PTR [edx-0x2c343814],0x58
  418218:	add    eax,0xf3277e9c
  41821d:	cld    
  41821e:	push   edx
  41821f:	repnz or al,0x4
  418222:	inc    ebp
  418223:	push   ecx
  418224:	(bad)  
  418226:	clc    
  418227:	dec    esp
  418228:	sub    DWORD PTR [esi+eax*4+0xb],0x66
  41822d:	push   ebp
  41822e:	scas   eax,DWORD PTR es:[edi]
  41822f:	lds    edi,FWORD PTR [ebx-0x39f68092]
  418235:	lods   eax,DWORD PTR ds:[esi]
  418236:	sbb    edx,esp
  418238:	mov    esi,0x3a6df571
  41823d:	ret    
  41823e:	xchg   ebp,eax
  41823f:	mov    ?,WORD PTR [ebx-0x47]
  418242:	adc    eax,DWORD PTR [edi+0x340ea1bb]
  418248:	stos   BYTE PTR es:[edi],al
  418249:	shl    DWORD PTR gs:[ebp+0x45],0x30
  41824e:	and    cl,bl
  418250:	test   eax,0xa1afef0c
  418255:	test   DWORD PTR [ebp+ecx*1-0xbe0b246],esi
  41825c:	rcl    BYTE PTR [esi+eax*8+0x79de2c91],cl
  418263:	or     DWORD PTR [esp+ebp*2],0x50
  418267:	pop    esp
  418268:	jmp    0x86de:0xf9f3cfd7
  41826f:	(bad)  
  418271:	cs js  0x41826b
  418274:	sbb    BYTE PTR [edx-0x74082399],ch
  41827a:	aaa    
  41827b:	sub    al,bl
  41827d:	mov    DWORD PTR [eax],ebp
  41827f:	cli    
  418280:	outs   dx,BYTE PTR ds:[esi]
  418281:	jl     0x418245
  418283:	push   esp
  418284:	scas   al,BYTE PTR es:[edi]
  418285:	and    eax,0xc331b13a
  41828a:	cmp    eax,0xbe50954e
  41828f:	sahf   
  418290:	pop    eax
  418291:	or     DWORD PTR [eax-0x77],esi
  418294:	push   ds
  418295:	clc    
  418296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418297:	inc    esi
  418298:	cs stos BYTE PTR es:[edi],al
  41829a:	stos   BYTE PTR es:[edi],al
  41829b:	popf   
  41829c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41829d:	out    0x76,eax
  41829f:	mov    ecx,gs
  4182a1:	test   al,0xd
  4182a3:	arpl   dx,di
  4182a5:	pop    edi
  4182a6:	in     al,0xe3
  4182a8:	push   ds
  4182a9:	ds cmp dl,bl
  4182ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ad:	inc    edi
  4182ae:	add    BYTE PTR [edx-0x34365050],dh
  4182b4:	push   ebp
  4182b5:	jmp    0x4182b3
  4182b7:	dec    esi
  4182b8:	jecxz  0x418269
  4182ba:	retf   0xe5a8
  4182bd:	clc    
  4182be:	popf   
  4182bf:	mov    al,0xa8
  4182c1:	dec    eax
  4182c2:	fs dec ecx
  4182c4:	sbb    eax,0x46518aa4
  4182c9:	and    al,0x71
  4182cb:	or     eax,0x660bb22d
  4182d0:	das    
  4182d1:	cli    
  4182d2:	clc    
  4182d3:	push   cs
  4182d4:	fst    QWORD PTR [esi+0xfeee279]
  4182da:	scas   al,BYTE PTR es:[edi]
  4182db:	(bad)  
  4182dc:	rol    DWORD PTR [edi],cl
  4182de:	add    BYTE PTR [esi-0x7a],dl
  4182e1:	jmp    0x4182da
  4182e3:	mov    al,0x6a
  4182e5:	add    DWORD PTR [eax+0x40],ecx
  4182e8:	loope  0x41828e
  4182ea:	je     0x418363
  4182ec:	dec    esp
  4182ed:	sti    
  4182ee:	test   al,0x94
  4182f0:	stc    
  4182f1:	les    esi,FWORD PTR ds:0x9f434dcc
  4182f7:	inc    esp
  4182f8:	call   0xed6c4261
  4182fd:	jl     0x418346
  4182ff:	es push esi
  418301:	repz (bad) 
  418303:	jl     0x41828e
  418305:	ins    BYTE PTR es:[edi],dx
  418306:	(bad)
  41830a:	jae    0x4182c1
  41830c:	into   
  41830d:	cs push esp
  41830f:	xchg   ecx,eax
  418310:	push   esi
  418311:	daa    
  418312:	push   eax
  418313:	es pop es
  418315:	scas   eax,DWORD PTR es:[edi]
  418316:	add    esp,DWORD PTR [esi+ebp*1]
  418319:	mov    edx,0xc914ddf3
  41831e:	mov    al,0x4
  418320:	fisubr WORD PTR [ebx+0x43]
  418323:	or     dh,BYTE PTR [esi-0x7]
  418326:	xor    cl,BYTE PTR [ecx-0x67cd56b3]
  41832c:	inc    edx
  41832d:	mov    ebx,0xd879fab6
  418332:	mov    dl,0x59
  418334:	es scas eax,DWORD PTR es:[edi]
  418336:	xchg   ecx,eax
  418337:	xchg   esp,eax
  418338:	jo     0x4182fb
  41833a:	cli    
  41833b:	fadd   DWORD PTR [eax]
  41833d:	or     DWORD PTR [edi+0x1327166f],eax
  418343:	repz fsub st,st(3)
  418346:	mov    ds:0xd873b6e9,eax
  41834b:	sub    esi,DWORD PTR [edx+0x3e2f8311]
  418351:	call   0x838ade3d
  418356:	add    ecx,DWORD PTR [edi]
  418358:	dec    eax
  418359:	mov    eax,0x91d599e6
  41835e:	adc    bh,BYTE PTR [edx-0x8090ff4]
  418364:	inc    ebp
  418365:	xor    BYTE PTR [eax-0x12a156a0],ah
  41836b:	and    BYTE PTR [eax+0x5f0bfe32],ah
  418371:	(bad)  
  418372:	jle    0x418378
  418374:	or     al,0x21
  418376:	xchg   ebp,eax
  418377:	das    
  418378:	pushf  
  418379:	jnp    0x4183fa
  41837b:	xchg   DWORD PTR [edi+ebp*4-0x613c74e8],ebp
  418382:	dec    bp
  418384:	mov    bh,BYTE PTR [eax+0x7]
  418387:	(bad)  
  418388:	lock cmp DWORD PTR [ebp+0x65],edi
  41838c:	mov    edx,edx
  41838e:	push   esp
  41838f:	js     0x4183cc
  418391:	lods   al,BYTE PTR ds:[esi]
  418392:	(bad)  
  418394:	je     0x4183cc
  418396:	mov    esi,0x64a994c7
  41839b:	xor    al,BYTE PTR [ebp-0x79]
  41839e:	(bad)
  4183a2:	mov    bl,0x4d
  4183a4:	inc    edx
  4183a5:	sub    al,0x11
  4183a7:	in     al,0x8f
  4183a9:	sbb    cl,BYTE PTR [esp+edx*4]
  4183ac:	push   ecx
  4183ad:	in     al,dx
  4183ae:	addr16 xor al,0x24
  4183b2:	popaw  
  4183b4:	inc    esp
  4183b5:	test   ebp,0x6436a4aa
  4183bb:	jl     0x4183d9
  4183bd:	shl    eax,1
  4183bf:	(bad)  
  4183c0:	xor    al,0xf0
  4183c2:	retf   
  4183c3:	or     esi,DWORD PTR [esi-0x37ec66]
  4183c9:	cmp    edx,eax
  4183cb:	dec    ebp
  4183cc:	xchg   dl,ah
  4183ce:	inc    esp
  4183cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d0:	mov    ds:0xddfa0f0,al
  4183d5:	fdivp  st(2),st
  4183d7:	dec    eax
  4183d8:	add    ebx,DWORD PTR [edx]
  4183da:	(bad)  
  4183dc:	cwde   
  4183dd:	sbb    eax,0xaa19c71e
  4183e2:	rcl    DWORD PTR [ebx],0x3f
  4183e5:	bound  esp,QWORD PTR [esi-0x433086b6]
  4183eb:	mov    bh,0x93
  4183ed:	(bad)  
  4183ee:	or     edi,DWORD PTR [eax+edx*4-0x55799a6b]
  4183f5:	jae    0x4183b9
  4183f7:	jg     0x41837e
  4183f9:	cs jne 0x41842b
  4183fc:	not    DWORD PTR [ecx-0x479468cd]
  418402:	dec    edx
  418403:	imul   DWORD PTR [eax+0x5dbf24c5]
  418409:	push   0x1a9a7fa8
  41840e:	xor    DWORD PTR [esi-0x611acd9],ebp
  418414:	int    0xf8
  418416:	dec    esi
  418417:	add    al,0x5f
  418419:	(bad)  
  41841a:	pshufw mm2,QWORD PTR [edi-0x9],0xd
  41841f:	and    eax,0xe5515b7
  418424:	test   al,0xc4
  418426:	pop    ecx
  418427:	xor    esp,DWORD PTR [ecx+0x68]
  41842a:	jl     0x41841a
  41842c:	and    bh,BYTE PTR ds:0x2c9d807e
  418432:	aaa    
  418433:	inc    ebx
  418434:	je     0x418496
  418436:	dec    eax
  418437:	push   0xeaf1b396
  41843c:	out    dx,eax
  41843d:	retf   
  41843e:	(bad)  
  41843f:	clc    
  418440:	or     BYTE PTR [edx+0x7c],ch
  418443:	jbe    0x4183f7
  418445:	inc    eax
  418447:	outs   dx,BYTE PTR ds:[esi]
  418448:	or     DWORD PTR [ebp+0x3c0124f0],eax
  41844e:	mov    esp,0x3403737c
  418453:	cmp    eax,0x8ba46ab9
  418458:	daa    
  418459:	aam    0x35
  41845b:	sahf   
  41845c:	mov    dh,0x52
  41845e:	imul   ebp,DWORD PTR [edx+0x2969d6da],0xffffffd5
  418465:	and    edi,DWORD PTR [ebp+edi*4+0x3543b8aa]
  41846c:	shl    cl,0xc0
  41846f:	icebp  
  418470:	adc    esi,ecx
  418472:	outs   dx,BYTE PTR ds:[esi]
  418473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418474:	(bad)  
  418475:	mov    ds:0x32e0d746,al
  41847a:	cmp    eax,0x6b524936
  41847f:	push   ebp
  418480:	call   0x5c4b36ee
  418485:	jp     0x4184a7
  418487:	shr    DWORD PTR [eax+0x49661bef],cl
  41848d:	add    ebp,DWORD PTR [ecx]
  41848f:	lock leave 
  418491:	sar    DWORD PTR [edi+0x56],1
  418494:	mov    al,ds:0x8d866db8
  418499:	push   ds
  41849a:	cmp    BYTE PTR [ebp+eax*8-0x1136c3ae],0x63
  4184a2:	mov    esp,0x6ee453ca
  4184a7:	mov    ss,ebx
  4184a9:	into   
  4184aa:	loop   0x4184ff
  4184ac:	adc    eax,0x4f3fda8d
  4184b1:	pushf  
  4184b2:	pop    es
  4184b3:	push   es
  4184b4:	push   ebp
  4184b5:	aas    
  4184b6:	fs xchg dh,dh
  4184b9:	sub    BYTE PTR [ebp-0x51],bl
  4184bc:	push   ds
  4184bd:	(bad)  
  4184be:	or     dh,dh
  4184c0:	lds    eax,FWORD PTR [esi+0x7]
  4184c3:	fld    DWORD PTR [ecx+edi*8]
  4184c6:	xchg   BYTE PTR [edx+0x79],bh
  4184c9:	jmp    0x11df6685
  4184ce:	imul   BYTE PTR [edi+0x26093fb3]
  4184d4:	add    eax,0x87836a27
  4184d9:	sub    BYTE PTR [ebp+0x19cfe3f4],ah
  4184df:	pop    eax
  4184e0:	call   0x3f3e5d09
  4184e5:	fcmovnbe st,st(1)
  4184e7:	repnz cdq 
  4184e9:	cld    
  4184ea:	jnp    0x418503
  4184ec:	jb     0x4184a4
  4184ee:	mov    BYTE PTR [ecx+0x575f73],dh
  4184f4:	mov    bh,0xf1
  4184f6:	dec    edi
  4184f7:	je     0x4184a7
  4184f9:	push   esi
  4184fa:	xor    esp,DWORD PTR ss:[eax]
  4184fd:	push   es
  4184fe:	add    eax,0x35dce9e2
  418503:	retf   
  418504:	arpl   ax,si
  418506:	adc    al,dl
  418508:	push   ds
  418509:	mov    bl,0xe6
  41850b:	mov    ebp,0xd008553b
  418510:	outs   dx,BYTE PTR ds:[esi]
  418511:	clc    
  418512:	hlt    
  418513:	imul   edx,DWORD PTR [edx+0x5],0xffffffae
  418517:	pushf  
  418518:	xlat   BYTE PTR ds:[ebx]
  418519:	jno    0x41851f
  41851b:	mov    ebx,0xfac1413c
  418520:	data16 adc ah,ah
  418523:	rcr    ecx,1
  418525:	xor    DWORD PTR [ebx-0x7922f275],esi
  41852b:	retf   0x33be
  41852e:	sub    al,dl
  418530:	or     eax,0x8f859a5c
  418535:	fldcw  WORD PTR [ebx+edx*2]
  418538:	icebp  
  418539:	mov    bh,0xbb
  41853b:	rol    DWORD PTR [edx-0x4ca074c6],0xfe
  418542:	and    ebp,DWORD PTR [edx+0x32eac69]
  418548:	loop   0x418535
  41854a:	hlt    
  41854b:	xchg   DWORD PTR [ebp-0x30],esp
  41854e:	jg     0x4185ab
  418550:	pop    esi
  418551:	lods   eax,DWORD PTR ds:[esi]
  418552:	aas    
  418553:	xor    ch,BYTE PTR [ecx+0x6670602a]
  418559:	cmp    edx,DWORD PTR ds:0xd7eb8618
  41855f:	mov    esi,0x827f4325
  418564:	jg     0x4185c1
  418566:	mov    edx,0x1e64871d
  41856b:	(bad)  [eax-0x4b092b3]
  418571:	and    eax,0xd722069e
  418576:	inc    ecx
  418577:	mov    esp,0xe631c14
  41857c:	lea    esp,[esp+ebp*2+0x6b894868]
  418583:	inc    ebp
  418584:	pop    ebx
  418585:	sbb    bl,BYTE PTR [edi*4-0x577d73c6]
  41858c:	(bad)  
  41858d:	(bad)  
  41858e:	cmp    BYTE PTR [edx],bl
  418590:	scas   al,BYTE PTR es:[edi]
  418591:	mov    cs,WORD PTR [edx-0x40]
  418594:	cmp    cl,dh
  418596:	mov    ah,0x9c
  418598:	mov    DWORD PTR [ecx-0x4241045f],ebp
  41859e:	inc    edi
  41859f:	sti    
  4185a0:	inc    ebp
  4185a1:	inc    eax
  4185a2:	push   ecx
  4185a3:	imul   eax,DWORD PTR [edx],0xffffffe3
  4185a6:	inc    ebx
  4185a7:	ja     0x41855c
  4185a9:	clc    
  4185aa:	xchg   BYTE PTR [esi],ah
  4185ac:	jmp    0x1bebe34a
  4185b1:	pushf  
  4185b2:	mov    ebp,0xcaf3df8c
  4185b7:	pop    ds
  4185b8:	inc    eax
  4185b9:	sub    ah,BYTE PTR [ebp-0x16]
  4185bc:	xor    ebp,DWORD PTR [ebx]
  4185be:	test   BYTE PTR [eax-0x439ee74b],ch
  4185c4:	inc    edi
  4185c5:	and    BYTE PTR [esi+0x29],cl
  4185c8:	ficom  DWORD PTR [eax+0x10]
  4185cb:	mov    edi,0xe1645f1b
  4185d0:	lahf   
  4185d1:	xchg   ecx,eax
  4185d2:	stc    
  4185d3:	pop    edx
  4185d4:	fwait
  4185d5:	pop    eax
  4185d6:	data16 out 0x36,al
  4185d9:	push   ecx
  4185da:	gs ret 
  4185dc:	xchg   esp,eax
  4185dd:	jl     0x4185ca
  4185df:	sbb    edx,edx
  4185e1:	and    BYTE PTR [edx-0x44],0xe2
  4185e5:	adc    dl,BYTE PTR [ebx]
  4185e7:	int3   
  4185e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185e9:	inc    ebx
  4185ea:	test   DWORD PTR [ebp+0x27328930],ebp
  4185f0:	retf   0x5a8b
  4185f3:	mov    ebp,0x3da63dae
  4185f8:	adc    BYTE PTR [edx-0x581fcd3e],bh
  4185fe:	xor    dl,BYTE PTR [edi]
  418600:	mov    esi,0xaedf2af1
  418605:	add    DWORD PTR [edi+0x4f],edx
  418608:	stc    
  418609:	dec    edx
  41860a:	inc    edi
  41860b:	loop   0x4185e2
  41860d:	fistp  WORD PTR [edi+0x4d]
  418610:	dec    edx
  418611:	or     ecx,DWORD PTR [edx+0x56]
  418614:	jmp    0x91bd91ae
  418619:	jns    0x41867a
  41861b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41861c:	rcr    BYTE PTR [edi+0x3b3a4541],0x57
  418623:	dec    ecx
  418624:	mov    ds:0x3a3e5172,al
  418629:	mov    WORD PTR [edx+0x1d],es
  41862c:	dec    edi
  41862d:	out    0xe,al
  41862f:	sub    DWORD PTR [eax],edx
  418631:	mov    dh,BYTE PTR [ecx-0x58]
  418634:	call   0x163c:0xbd896c64
  41863b:	hlt    
  41863c:	rcr    edi,cl
  41863e:	add    DWORD PTR [edx],edi
  418640:	iret   
  418641:	fisttp DWORD PTR [edx]
  418643:	test   BYTE PTR [eax-0x4e],bl
  418646:	xor    eax,0x8607c1ce
  41864b:	dec    ecx
  41864c:	aad    0x48
  41864e:	(bad)  
  41864f:	xchg   esp,eax
  418650:	sbb    al,0x17
  418652:	out    0x3,eax
  418654:	dec    ebp
  418655:	sbb    al,BYTE PTR ds:[ecx]
  418658:	pusha  
  418659:	pop    ecx
  41865a:	jg     0x4186b8
  41865c:	loope  0x418615
  41865e:	xor    al,0x6d
  418660:	int    0xd0
  418662:	sub    ah,dl
  418664:	cld    
  418665:	sbb    al,0xe5
  418667:	adc    eax,0x31e00b6d
  41866c:	push   ecx
  41866d:	jbe    0x41862b
  41866f:	data16 add al,0xd4
  418672:	scas   eax,DWORD PTR es:[edi]
  418673:	popa   
  418674:	sti    
  418675:	or     BYTE PTR [edi-0x35],0x90
  418679:	mov    esp,0x61179b4a
  41867e:	cli    
  41867f:	pop    edi
  418680:	(bad)  
  418681:	fs ret 
  418683:	mov    DWORD PTR [edx],edx
  418685:	pop    esi
  418686:	add    esp,DWORD PTR [ebx]
  418688:	xlat   BYTE PTR ds:[ebx]
  418689:	scas   al,BYTE PTR es:[edi]
  41868a:	gs mov dl,0x25
  41868d:	loopne 0x4186b3
  41868f:	lods   al,BYTE PTR ds:[esi]
  418690:	xchg   esp,eax
  418691:	mov    edi,0xae901bcf
  418696:	adc    al,0x71
  418698:	inc    esi
  418699:	and    eax,0xd0b8a15e
  41869e:	xor    ebx,DWORD PTR [edi]
  4186a0:	ja     0x41868a
  4186a2:	mov    ds:0x65f2e7ac,al
  4186a7:	xor    BYTE PTR [esi],dl
  4186a9:	gs jno 0x4186b5
  4186ac:	das    
  4186ad:	imul   esi,DWORD PTR [ebx],0xfffffff6
  4186b0:	push   ebx
  4186b1:	pop    es
  4186b2:	mov    gs,WORD PTR [esi]
  4186b4:	outs   dx,DWORD PTR ds:[esi]
  4186b5:	cdq    
  4186b6:	mov    ecx,0xf6d5877
  4186bb:	loopne 0x4186b2
  4186bd:	(bad)  
  4186be:	scas   al,BYTE PTR es:[edi]
  4186bf:	mov    dh,0x8
  4186c1:	jns    0x418681
  4186c3:	mov    ah,0x94
  4186c5:	cmp    al,cl
  4186c7:	stc    
  4186c8:	setne  BYTE PTR [ecx+0x42]
  4186cc:	ds inc ebp
  4186ce:	mov    cl,0x34
  4186d0:	sub    esi,0x5f
  4186d3:	push   ecx
  4186d4:	push   edx
  4186d5:	cli    
  4186d6:	sub    BYTE PTR [eax+0x22dd4c5c],dl
  4186dc:	ins    DWORD PTR es:[edi],dx
  4186dd:	gs nop
  4186df:	inc    eax
  4186e0:	fcmovnb st,st(1)
  4186e2:	mov    ecx,0x91db0dd3
  4186e7:	jmp    0xa11096b0
  4186ec:	ds inc ebx
  4186ee:	xchg   bh,ah
  4186f0:	icebp  
  4186f1:	inc    ebp
  4186f2:	adc    al,0xb5
  4186f4:	or     bh,BYTE PTR es:[edx-0x65c9b5c1]
  4186fb:	iret   
  4186fc:	(bad)  
  4186fd:	sbb    eax,0xb38317e8
  418702:	scas   al,BYTE PTR es:[edi]
  418703:	inc    edi
  418704:	nop
  418705:	add    BYTE PTR ds:0x547b5ede,cl
  41870b:	mov    dh,0xb6
  41870d:	add    BYTE PTR [ebx],ah
  41870f:	push   ebp
  418711:	je     0x4186c7
  418713:	sub    eax,0xd641ed03
  418718:	jle    0x57456cd5
  41871e:	jmp    0x27cf:0xf3176953
  418725:	push   eax
  418726:	mov    eax,0xf840f587
  41872b:	int    0xa3
  41872d:	or     eax,DWORD PTR [eax+eax*2+0xd71c6b0]
  418734:	mov    dh,0xe1
  418736:	xchg   BYTE PTR [ebp-0x3c],dh
  418739:	sbb    al,0xf0
  41873b:	xor    BYTE PTR [eax+0x21],ah
  41873e:	cmp    ebp,ebx
  418740:	or     esi,esi
  418742:	xchg   edx,eax
  418743:	int3   
  418744:	mov    ch,0xc7
  418747:	push   ebx
  418748:	mov    ds:0x2afb9781,eax
  41874d:	push   ds
  41874e:	in     eax,dx
  41874f:	sub    esp,DWORD PTR [eax]
  418751:	xor    cl,BYTE PTR [ebx+0x3e559d75]
  418757:	dec    ebx
  418758:	inc    eax
  418759:	in     eax,0x52
  41875b:	popf   
  41875c:	fisub  WORD PTR [esi+ebx*8]
  41875f:	jnp    0x418746
  418761:	dec    edi
  418762:	loopne 0x418701
  418764:	sub    BYTE PTR [eax-0x2f],cl
  418767:	stos   DWORD PTR es:[edi],eax
  418768:	add    DWORD PTR [edi+0x13],0xffffff8a
  41876c:	pusha  
  41876d:	rcr    DWORD PTR [eax-0x33],1
  418770:	inc    eax
  418771:	jnp    0x41873b
  418773:	cs jmp 0xe4d0bd11
  418779:	les    ebp,FWORD PTR [ebp+eax*8+0x76]
  41877d:	pop    eax
  41877e:	int3   
  41877f:	pop    ds
  418780:	mov    esp,esp
  418782:	call   0x82f6:0xbfbe4b7d
  418789:	in     eax,dx
  41878a:	call   0xcab4:0x494e7c06
  418791:	stos   DWORD PTR es:[edi],eax
  418792:	loope  0x41875b
  418794:	xchg   ebx,eax
  418795:	mov    bh,0x63
  418797:	mov    cl,0x8a
  418799:	push   esi
  41879a:	popa   
  41879b:	and    esp,DWORD PTR [ebx+eax*8-0x58]
  41879f:	out    0x4f,al
  4187a1:	mov    ah,dl
  4187a3:	cli    
  4187a4:	rcr    BYTE PTR [eax-0x28],cl
  4187a7:	pop    edi
  4187a8:	pop    esi
  4187a9:	jp     0x418829
  4187ab:	loopne 0x41872f
  4187ad:	jo     0x418733
  4187af:	xor    BYTE PTR [eax],dh
  4187b1:	gs test al,0x4
  4187b4:	mov    dh,0xd
  4187b6:	imul   eax,DWORD PTR [ebx+0x1b6ae890],0x38
  4187bd:	dec    ebx
  4187be:	loop   0x41883d
  4187c0:	clc    
  4187c1:	hlt    
  4187c2:	xor    ah,dh
  4187c4:	in     al,dx
  4187c5:	mov    al,BYTE PTR [ecx+eiz*4+0x66]
  4187c9:	imul   BYTE PTR [ebp-0x28]
  4187cc:	(bad)  
  4187cd:	cmp    esi,ebx
  4187cf:	inc    edx
  4187d0:	int3   
  4187d1:	cmp    dh,cl
  4187d3:	cmp    BYTE PTR [eax],ah
  4187d5:	add    BYTE PTR [eax+ecx*4],ch
  4187d8:	js     0x4187ba
  4187da:	cmp    ch,BYTE PTR [ecx]
  4187dc:	jmp    0x418851
  4187de:	dec    ebp
  4187df:	or     al,0x5d
  4187e1:	mov    ss,ebx
  4187e3:	cs fs pop ss
  4187e6:	xlat   BYTE PTR ds:[ebx]
  4187e7:	mov    edi,0xe902842c
  4187ec:	jecxz  0x418845
  4187ee:	test   al,0xa
  4187f0:	in     al,dx
  4187f1:	out    0xf,eax
  4187f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f4:	mov    al,BYTE PTR [ebp+ebx*2-0x15]
  4187f8:	stc    
  4187f9:	je     0x4187d2
  4187fb:	mov    ah,0x1b
  4187fd:	xchg   ebx,eax
  4187fe:	scas   al,BYTE PTR es:[edi]
  4187ff:	call   0xea7b:0x62d2edc4
  418806:	icebp  
  418807:	outs   dx,DWORD PTR ds:[esi]
  418808:	ins    DWORD PTR es:[edi],dx
  418809:	mov    al,ds:0xf43e53e1
  41880e:	call   0x388d:0x47e5c9ae
  418815:	sub    al,BYTE PTR [ecx]
  418817:	mov    dl,0xed
  418819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41881a:	iret   
  41881b:	aaa    
  41881c:	or     bh,BYTE PTR [edx-0x6a538230]
  418822:	cmp    al,cl
  418824:	add    dh,dl
  418826:	xchg   edi,eax
  418827:	leave  
  418828:	sti    
  418829:	cwde   
  41882a:	cwde   
  41882b:	or     al,0x42
  41882d:	mov    bl,BYTE PTR [ecx]
  41882f:	mov    esi,0x54a71a5d
  418834:	and    eax,0xdcb2284
  418839:	and    eax,0x997860ab
  41883e:	sub    DWORD PTR [edi-0x30],eax
  418841:	out    dx,eax
  418842:	dec    ecx
  418843:	xchg   esp,eax
  418844:	push   ebp
  418845:	xchg   BYTE PTR [ebx+esi*8+0x39],bh
  418849:	mov    DWORD PTR [edx],ecx
  41884b:	dec    esp
  41884c:	push   cs
  41884d:	fmul   QWORD PTR [ebp-0x39]
  418850:	push   edi
  418851:	sbb    BYTE PTR [edi-0x65970bef],dh
  418857:	push   esi
  418858:	push   eax
  418859:	test   DWORD PTR [ebp+0x15],0xe6e84330
  418860:	(bad)  
  418861:	dec    ecx
  418862:	mov    al,ds:0x58f3856a
  418867:	xchg   esi,eax
  418868:	and    BYTE PTR [edi+eax*1-0x6a10d0cb],cl
  41886f:	scas   al,BYTE PTR es:[edi]
  418870:	lds    ebx,FWORD PTR [ecx]
  418872:	inc    esi
  418873:	ins    BYTE PTR es:[edi],dx
  418874:	pop    es
  418875:	cdq    
  418876:	scas   eax,DWORD PTR es:[edi]
  418877:	mov    ch,0xa0
  418879:	cmc    
  41887a:	or     BYTE PTR [edi+0x3f],bh
  41887d:	push   esp
  41887e:	sbb    BYTE PTR [ecx+0x31],ah
  418881:	fsubr  DWORD PTR [edx]
  418883:	push   eax
  418884:	add    DWORD PTR [esp+esi*2],ebx
  418887:	sbb    al,0x2
  418889:	jne    0x41890a
  41888b:	jmp    0x4760:0x5b6c18d6
  418892:	xor    bh,BYTE PTR [edi]
  418894:	call   0xd928ee66
  418899:	scas   eax,DWORD PTR es:[edi]
  41889a:	shl    DWORD PTR ds:0x2e72f5bd,1
  4188a0:	push   eax
  4188a1:	out    dx,al
  4188a2:	xor    edi,ecx
  4188a4:	sub    al,0x42
  4188a6:	into   
  4188a7:	mov    ecx,0x7cdc8ea6
  4188ac:	fdivr  st(2),st
  4188ae:	call   0x3cec8c69
  4188b3:	sub    BYTE PTR [ebp-0x224b808f],al
  4188b9:	jo     0x4188e3
  4188bb:	sbb    bh,BYTE PTR [ecx+edx*4+0x20]
  4188bf:	test   al,0x64
  4188c1:	xor    DWORD PTR [ebp-0x7f3c8022],edx
  4188c7:	cmc    
  4188c8:	in     eax,0x8
  4188ca:	jl     0x41889e
  4188cc:	jno    0x41892d
  4188ce:	xor    dh,ah
  4188d0:	push   eax
  4188d1:	cmp    esi,esi
  4188d3:	xor    DWORD PTR [edi-0x2c54dd89],0x5b
  4188da:	icebp  
  4188db:	inc    esi
  4188dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188dd:	rcl    BYTE PTR [ecx],1
  4188df:	sbb    bh,bh
  4188e1:	gs jmp 0x4188fd
  4188e4:	xchg   ebx,eax
  4188e5:	fld    QWORD PTR [esp+esi*1-0x58]
  4188e9:	inc    ecx
  4188ea:	inc    esp
  4188eb:	jge    0x418969
  4188ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ee:	pop    edx
  4188ef:	fst    st(4)
  4188f1:	cwde   
  4188f2:	pop    ecx
  4188f3:	push   0xffffffd2
  4188f5:	cmp    BYTE PTR [eax],cl
  4188f7:	test   DWORD PTR [eax-0x6174ce5b],ebp
  4188fd:	dec    ebp
  4188fe:	icebp  
  4188ff:	jnp    0x418910
  418901:	hlt    
  418902:	cli    
  418903:	arpl   WORD PTR [eax],dx
  418905:	jmp    0xf6635d32
  41890a:	pop    edi
  41890b:	dec    eax
  41890c:	ret    
  41890d:	mov    bh,0xfb
  41890f:	(bad)  
  418910:	adc    eax,0x5d8b87a5
  418915:	jb     0x4188a0
  418917:	push   eax
  418918:	fld    TBYTE PTR [eax-0x75]
  41891b:	lods   eax,DWORD PTR ds:[esi]
  41891c:	mov    al,ds:0x41c5de18
  418921:	sar    BYTE PTR [edx-0x27],1
  418924:	cwde   
  418925:	push   esp
  418926:	mov    ?,ebp
  418928:	int    0x92
  41892a:	push   eax
  41892b:	add    DWORD PTR [esi-0x7088c443],ecx
  418931:	mov    BYTE PTR [esi+0x44],ah
  418934:	or     eax,0xe99807fe
  418939:	rcr    BYTE PTR [esi-0x34899a1c],0x67
  418940:	cwde   
  418941:	sub    ah,dh
  418943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418944:	fdivr  QWORD PTR [edi]
  418946:	pop    ss
  418947:	jecxz  0x418950
  418949:	out    0x87,al
  41894b:	into   
  41894c:	inc    edi
  41894d:	and    ah,BYTE PTR [ecx]
  41894f:	sar    DWORD PTR [ecx],1
  418951:	das    
  418952:	xor    al,0x17
  418954:	push   edx
  418955:	inc    edi
  418956:	nop
  418957:	retf   
  418958:	stc    
  418959:	(bad)  ds:0x2f4f22e5
  41895f:	inc    edi
  418960:	and    al,0xed
  418962:	out    0x78,eax
  418964:	xchg   ah,ah
  418966:	out    0xfe,eax
  418968:	dec    eax
  418969:	(bad)  
  41896a:	cli    
  41896b:	repz int 0xf2
  41896e:	(bad)  
  41896f:	push   edi
  418970:	sbb    BYTE PTR [ecx-0x63],bl
  418973:	push   ebp
  418974:	push   edi
  418975:	sti    
  418976:	and    al,0x62
  418978:	popa   
  418979:	js     0x4189cf
  41897b:	out    dx,al
  41897c:	fist   DWORD PTR [ebx]
  41897e:	outs   dx,DWORD PTR ds:[esi]
  41897f:	mov    BYTE PTR [edx],bh
  418981:	cmp    al,0xeb
  418983:	jnp    0x418958
  418985:	inc    edi
  418986:	cmp    DWORD PTR [edi-0x3089f700],esp
  41898c:	mov    ds:0x10e5c8e7,eax
  418991:	out    dx,eax
  418992:	scas   al,BYTE PTR es:[edi]
  418993:	jns    0x41891f
  418995:	les    edi,FWORD PTR [ebp-0xe21c8ef]
  41899b:	leave  
  41899c:	pushf  
  41899d:	in     eax,dx
  41899e:	xchg   edi,eax
  41899f:	sbb    BYTE PTR [edx-0x767c56d5],al
  4189a5:	loope  0x418999
  4189a7:	in     al,0x85
  4189a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189aa:	or     al,dh
  4189ac:	jp     0x41898d
  4189ae:	sahf   
  4189af:	outs   dx,BYTE PTR ds:[esi]
  4189b0:	aaa    
  4189b1:	das    
  4189b2:	test   eax,0x2cfa59dc
  4189b7:	cmp    edi,esp
  4189b9:	inc    esp
  4189ba:	int    0xc1
  4189bc:	xchg   ebx,eax
  4189bd:	push   esi
  4189be:	bound  edi,QWORD PTR [edi-0x77]
  4189c1:	test   BYTE PTR [esi-0x62],ah
  4189c4:	or     ebp,DWORD PTR [ebp+0x5fd553f3]
  4189ca:	out    dx,al
  4189cb:	inc    ecx
  4189cc:	out    dx,eax
  4189cd:	mov    ds:0x1f1b0e40,al
  4189d2:	add    al,0xd3
  4189d4:	xchg   ecx,eax
  4189d5:	fs stos DWORD PTR es:[edi],eax
  4189d7:	sahf   
  4189d8:	jg     0x418975
  4189da:	imul   edi,DWORD PTR [edi],0xffffffa7
  4189dd:	mov    esi,0xe0fc26b1
  4189e2:	xchg   edx,eax
  4189e3:	pop    ecx
  4189e4:	push   ebp
  4189e5:	ins    DWORD PTR es:[edi],dx
  4189e6:	xor    DWORD PTR [ecx+0x127ed467],eax
  4189ec:	rol    DWORD PTR [ebx-0x6ce0c1a1],cl
  4189f2:	es dec esi
  4189f4:	sti    
  4189f5:	pop    edi
  4189f6:	xor    DWORD PTR [esi-0x77],ebp
  4189f9:	shl    BYTE PTR [edi+0x22],1
  4189fc:	add    ch,0x5
  4189ff:	int3   
  418a00:	stc    
  418a01:	fs inc ebp
  418a03:	lods   al,BYTE PTR ds:[esi]
  418a04:	inc    eax
  418a05:	mov    al,ds:0x45d84304
  418a0a:	in     eax,0x68
  418a0c:	adc    BYTE PTR [edx-0x423ec02e],al
  418a12:	pop    ds
  418a13:	dec    esp
  418a14:	leave  
  418a15:	cmp    ch,al
  418a17:	xor    bh,BYTE PTR [edi-0x66]
  418a1a:	or     ebp,DWORD PTR [edi-0x1f0d210a]
  418a20:	pop    edx
  418a21:	pop    edi
  418a22:	pop    ss
  418a23:	pop    ss
  418a24:	push   edx
  418a25:	mov    ecx,0x956a91ff
  418a2a:	popf   
  418a2b:	cmovg  esp,DWORD PTR [ecx]
  418a2e:	outs   dx,DWORD PTR ds:[esi]
  418a2f:	std    
  418a30:	loop   0x418a87
  418a32:	xchg   edi,eax
  418a33:	bound  ebp,QWORD PTR [ebx]
  418a35:	or     bl,BYTE PTR [edi]
  418a37:	add    DWORD PTR [ecx+eax*1+0x5ef3502],edi
  418a3e:	lds    edi,FWORD PTR [esi+0x63200db4]
  418a44:	lods   al,BYTE PTR ds:[esi]
  418a45:	lahf   
  418a46:	addr16 je 0x4189f0
  418a49:	mov    cl,0xe6
  418a4b:	sbb    bh,BYTE PTR [ebx+0x4b179f20]
  418a51:	ret    
  418a52:	mov    ds:0x417479dc,eax
  418a57:	repz fmul QWORD PTR [eax-0x26]
  418a5b:	call   0x2557336a
  418a60:	fstp   DWORD PTR [ebx-0x4e]
  418a63:	lahf   
  418a64:	jne    0x418a55
  418a66:	xchg   esp,eax
  418a67:	mov    edi,0x29288dde
  418a6c:	and    edx,edx
  418a6e:	jg     0x418ab7
  418a70:	dec    ebp
  418a71:	rcl    esp,1
  418a73:	mov    bh,0x6c
  418a75:	(bad)  
  418a76:	out    dx,al
  418a77:	test   al,0x5
  418a79:	out    0xc9,eax
  418a7b:	aam    0x60
  418a7d:	push   ebp
  418a7e:	in     eax,0xfc
  418a80:	sar    al,1
  418a82:	xchg   edx,eax
  418a83:	int3   
  418a84:	cmp    ebp,eax
  418a86:	inc    eax
  418a87:	(bad)  
  418a88:	fbld   TBYTE PTR [esi]
  418a8a:	fadd   DWORD PTR [ebx]
  418a8c:	sbb    BYTE PTR ds:0xadcc4cf,bh
  418a92:	xor    eax,0x2830bbc9
  418a97:	pop    edi
  418a98:	sbb    eax,0x1f7fae37
  418a9d:	out    dx,al
  418a9e:	pop    ecx
  418a9f:	push   esp
  418aa0:	xor    eax,0x44657d1c
  418aa5:	push   edi
  418aa6:	jmp    0x7952:0x84e516fd
  418aad:	inc    ebp
  418aae:	mov    gs:0x4eac5b3e,eax
  418ab4:	fs int3 
  418ab6:	xchg   ebp,eax
  418ab7:	xrelease mov DWORD PTR [eax-0x54],esp
  418abb:	jno    0x418a80
  418abd:	stos   DWORD PTR es:[edi],eax
  418abe:	in     al,0xa2
  418ac0:	test   eax,0xafa3ec38
  418ac5:	ja     0x418b45
  418ac7:	sbb    al,0x48
  418ac9:	mov    al,0xc2
  418acb:	das    
  418acc:	dec    edi
  418acd:	pop    es
  418ace:	xchg   ecx,eax
  418acf:	push   ecx
  418ad0:	jle    0x418a58
  418ad2:	inc    edi
  418ad3:	xchg   ebp,eax
  418ad4:	ins    BYTE PTR es:[edi],dx
  418ad5:	xchg   esi,eax
  418ad6:	dec    edx
  418ad7:	repnz pusha 
  418ad9:	lods   al,BYTE PTR ds:[esi]
  418ada:	mov    edx,0xdf2b63e5
  418adf:	rcr    eax,0x65
  418ae2:	(bad)  
  418ae3:	outs   dx,DWORD PTR ds:[esi]
  418ae4:	sahf   
  418ae5:	aas    
  418ae6:	and    ebp,DWORD PTR [edx-0x1e5336f8]
  418aec:	inc    edi
  418aed:	mov    esp,0x200dcf6b
  418af2:	pop    edx
  418af3:	mov    eax,0x664b894d
  418af8:	shl    DWORD PTR [edx],1
  418afa:	mov    cr6,ebp
  418afd:	xor    BYTE PTR [edi-0x2d],ah
  418b00:	mov    edi,0x13a335c7
  418b05:	dec    ecx
  418b06:	sti    
  418b07:	les    ebp,FWORD PTR ds:0x647986a0
  418b0d:	repnz mov esi,0x60ea33db
  418b13:	jle    0x418b8a
  418b15:	jmp    0xb139:0xe7654b24
  418b1c:	in     eax,0xa2
  418b1e:	shl    al,cl
  418b20:	adc    dh,BYTE PTR [ebx-0x4a]
  418b23:	in     al,dx
  418b24:	lods   eax,DWORD PTR ds:[esi]
  418b25:	push   es
  418b26:	out    0xc1,al
  418b28:	clc    
  418b29:	push   DWORD PTR [ebx]
  418b2b:	mov    ebx,0x4fade63
  418b30:	dec    ecx
  418b31:	sbb    al,0x9
  418b33:	test   al,0x23
  418b35:	xor    eax,0x41f57710
  418b3a:	sti    
  418b3b:	ins    DWORD PTR es:[edi],dx
  418b3c:	dec    esp
  418b3d:	popa   
  418b3e:	imul   esi,DWORD PTR [ecx],0x74
  418b41:	(bad)  
  418b43:	test   eax,0x85989c5a
  418b48:	neg    cl
  418b4a:	jg     0x418b62
  418b4c:	mov    ecx,ebp
  418b4e:	inc    eax
  418b4f:	(bad)  
  418b50:	in     eax,0x7a
  418b52:	sub    DWORD PTR [ecx+0x397a6d7],esi
  418b58:	xchg   esi,eax
  418b59:	push   ds
  418b5a:	popf   
  418b5b:	xchg   DWORD PTR [edx+eax*4-0x64],edi
  418b5f:	lods   eax,DWORD PTR ds:[esi]
  418b60:	sti    
  418b61:	sub    esi,edx
  418b63:	jl     0x418b47
  418b65:	or     ah,al
  418b67:	jae    0x418b0c
  418b69:	push   ebp
  418b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b6b:	outs   dx,BYTE PTR ds:[esi]
  418b6c:	sub    eax,0xbc12263a
  418b71:	pop    esp
  418b72:	popa   
  418b73:	jbe    0x418b1d
  418b75:	inc    esi
  418b76:	push   esi
  418b77:	mov    edi,0x77d012fc
  418b7c:	dec    esp
  418b7d:	or     al,0x3c
  418b7f:	mov    DWORD PTR [esi],esi
  418b81:	gs jno 0x418b68
  418b84:	inc    esp
  418b85:	cmp    BYTE PTR [esi-0x55],0x3e
  418b89:	push   DWORD PTR [ebx-0x1d]
  418b8c:	mov    cl,BYTE PTR [ebx]
  418b8e:	dec    ebp
  418b8f:	xor    ebp,DWORD PTR [ecx+0x18]
  418b92:	mov    ah,0x22
  418b94:	xchg   esp,eax
  418b95:	push   0x821b0895
  418b9a:	aam    0x2a
  418b9c:	add    BYTE PTR [edi-0x65364df8],dh
  418ba2:	jg     0x418b55
  418ba4:	xor    DWORD PTR [eax],eax
  418ba6:	pop    esp
  418ba7:	fidivr DWORD PTR ds:0x491251fa
  418bad:	sbb    DWORD PTR [esi-0x57],esi
  418bb0:	dec    esi
  418bb1:	and    eax,0xa4b02706
  418bb6:	arpl   WORD PTR [edi],bp
  418bb8:	adc    BYTE PTR [ebp-0x4b],bh
  418bbb:	setg   BYTE PTR [edi-0x76]
  418bbf:	mov    ah,0x30
  418bc1:	push   cs
  418bc2:	shl    DWORD PTR [esi+0x4c],1
  418bc5:	div    al
  418bc7:	loopne 0x418b8e
  418bc9:	xchg   ecx,eax
  418bca:	retf   0xbfa2
  418bcd:	fwait
  418bce:	inc    eax
  418bcf:	loop   0x418c43
  418bd1:	sbb    edi,DWORD PTR [edi+eiz*2]
  418bd4:	sbb    DWORD PTR ds:0xe3c72e20,ebx
  418bda:	sub    ebp,esi
  418bdc:	lods   al,BYTE PTR ds:[esi]
  418bdd:	mov    bl,0xe7
  418bdf:	pushf  
  418be0:	and    BYTE PTR [edx-0x3f77f01c],ah
  418be6:	ja     0x418beb
  418be8:	inc    esp
  418be9:	repnz mov eax,0x2b90c8d2
  418bef:	(bad)  
  418bf0:	mov    DWORD PTR [eax+0x70],0x785cdfac
  418bf7:	pusha  
  418bf8:	add    ebp,eax
  418bfa:	cli    
  418bfb:	into   
  418bfc:	cmp    BYTE PTR [esi],0x0
  418bff:	pop    esp
  418c00:	cdq    
  418c01:	arpl   WORD PTR [esi-0x716ca527],si
  418c07:	jne    0x418be2
  418c09:	xor    DWORD PTR [ebp+0x54570279],0xb8489f7b
  418c13:	push   eax
  418c14:	aam    0xf4
  418c16:	in     eax,0x46
  418c18:	mov    edi,0x15d130e4
  418c1d:	xchg   DWORD PTR [eax+eax*8],ecx
  418c20:	je     0x418bcc
  418c22:	pop    esp
  418c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c24:	cmp    al,0xa6
  418c26:	adc    eax,0xf421c896
  418c2b:	add    al,0x6e
  418c2d:	xor    edi,DWORD PTR [ebp+0x74fcd981]
  418c33:	int    0xab
  418c35:	icebp  
  418c36:	cs out 0x92,al
  418c39:	jg     0x418c75
  418c3b:	ficom  WORD PTR [eax+0x7697e7f6]
  418c41:	aad    0x2d
  418c43:	xchg   esp,eax
  418c44:	mov    al,ds:0xf03a546b
  418c49:	sub    cl,BYTE PTR [eax]
  418c4b:	cs inc edx
  418c4d:	out    dx,eax
  418c4e:	or     al,0x4a
  418c50:	fldenv [ecx-0x3b7dcde6]
  418c56:	mov    al,ds:0x3ca6a856
  418c5b:	dec    ebp
  418c5c:	inc    esp
  418c5d:	nop    DWORD PTR ds:0x9cdf787c
  418c65:	jne    0x418c49
  418c67:	je     0x418cd2
  418c69:	leave  
  418c6a:	push   eax
  418c6b:	dec    ebx
  418c6c:	fisubr DWORD PTR ds:[esi+0x42]
  418c70:	loop   0x418c08
  418c72:	adc    ebx,DWORD PTR [ecx]
  418c74:	scas   al,BYTE PTR es:[edi]
  418c75:	loope  0x418c0e
  418c77:	imul   edx,DWORD PTR [edx],0xb35222f3
  418c7d:	test   al,0x2
  418c7f:	push   0xffffffde
  418c81:	pop    esp
  418c82:	and    ecx,ebp
  418c84:	mov    eax,ds:0x74d5640f
  418c89:	ja     0x418c7b
  418c8b:	xor    al,0x59
  418c8d:	popf   
  418c8e:	ret    0x75de
  418c91:	xchg   edi,eax
  418c92:	cmc    
  418c93:	inc    esp
  418c94:	cmp    ecx,ecx
  418c96:	imul   edx,ebp,0x929d5e18
  418c9c:	mov    esp,0x4e833b45
  418ca1:	fadd   DWORD PTR [ecx]
  418ca3:	xchg   edi,eax
  418ca4:	out    0x1,eax
  418ca6:	mov    esp,0x622780ad
  418cab:	pop    ecx
  418cac:	popf   
  418cad:	pop    ebp
  418cae:	test   eax,0x3e14e70b
  418cb3:	push   ebp
  418cb4:	and    esp,0xffffffbc
  418cb7:	pushaw 
  418cb9:	and    esi,esi
  418cbb:	pop    edi
  418cbc:	enter  0x6986,0x20
  418cc0:	jns    0x418cb2
  418cc2:	je     0x418ca2
  418cc4:	ret    0x74a0
  418cc7:	pushf  
  418cc8:	pop    esp
  418cc9:	xchg   ebp,eax
  418cca:	jp     0x418c7b
  418ccc:	lods   al,BYTE PTR ds:[esi]
  418ccd:	mov    ds:0x4d8ee1a0,eax
  418cd2:	jp     0x418c9f
  418cd4:	int3   
  418cd5:	xor    al,0x0
  418cd7:	fsubr  st(4),st
  418cd9:	cwde   
  418cda:	sbb    eax,DWORD PTR [ebx+0x77]
  418cdd:	(bad)  
  418cdf:	div    BYTE PTR [ebx-0x41]
  418ce2:	outs   dx,BYTE PTR ds:[esi]
  418ce3:	and    DWORD PTR [ecx-0x197c0835],edx
  418ce9:	adc    bl,BYTE PTR [ebx-0x61]
  418cec:	or     esp,DWORD PTR [edi+0x75]
  418cef:	lea    ecx,[edx-0x41a2b430]
  418cf5:	retf   0x22b6
  418cf8:	pop    ds
  418cf9:	loop   0x418d62
  418cfb:	xchg   esi,eax
  418cfc:	test   DWORD PTR [eax+0x74cfd27d],0x267700d
  418d06:	and    BYTE PTR [ebp+0x5],0x60
  418d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d0b:	push   es
  418d0c:	mov    al,0xb8
  418d0e:	test   al,0xd5
  418d10:	in     eax,0xcc
  418d12:	out    0x7a,eax
  418d14:	arpl   WORD PTR [ebx],si
  418d16:	rcr    BYTE PTR [eax-0x1],1
  418d19:	mov    dl,0x4
  418d1b:	push   eax
  418d1c:	jbe    0x418d52
  418d1e:	push   edx
  418d1f:	stos   BYTE PTR es:[edi],al
  418d20:	arpl   sp,bx
  418d22:	adc    bh,0x73
  418d25:	std    
  418d26:	ss cmc 
  418d28:	pop    es
  418d29:	aas    
  418d2a:	pop    esp
  418d2b:	lods   al,BYTE PTR ds:[esi]
  418d2c:	rcl    DWORD PTR [ebp+ebx*8-0x25e5d664],0xd5
  418d34:	repnz std 
  418d36:	mov    esp,0xf4b28bab
  418d3b:	(bad)  
  418d3c:	mov    ebp,0x881c207d
  418d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d42:	push   ds
  418d43:	cmc    
  418d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d45:	sbb    DWORD PTR [eax+0x3b12cd11],0xa2318246
  418d4f:	stc    
  418d50:	test   eax,0xb7d05b4c
  418d55:	loopne 0x418dcb
  418d57:	dec    esp
  418d58:	cld    
  418d59:	sub    eax,0x40aba2ed
  418d5e:	fild   QWORD PTR [edi-0x70722736]
  418d64:	mov    al,ds:0xc872b95c
  418d69:	mov    WORD PTR [esi+0x6e18b8e9],fs
  418d6f:	jl     0x418d1e
  418d71:	out    dx,eax
  418d72:	(bad)  
  418d73:	out    dx,al
  418d74:	add    eax,0x8c17e9b0
  418d79:	retf   
  418d7a:	(bad)  
  418d7b:	dec    ebp
  418d7c:	pop    esp
  418d7d:	cmp    esp,edx
  418d7f:	stos   DWORD PTR es:[edi],eax
  418d80:	mov    edi,0x515551e6
  418d85:	(bad)
  418d88:	fistp  QWORD PTR [edi-0x10428d8c]
  418d8e:	iret   
  418d8f:	push   edi
  418d90:	ins    DWORD PTR es:[edi],dx
  418d91:	and    ah,BYTE PTR [ebx-0x1382e109]
  418d97:	push   es
  418d98:	mov    ah,0xe6
  418d9a:	mov    DWORD PTR [edi],ebx
  418d9c:	mov    dh,BYTE PTR [ebx+0x407fe304]
  418da2:	sbb    BYTE PTR [ecx-0x7d],al
  418da5:	lock push es
  418da7:	das    
  418da8:	into   
  418da9:	sub    al,0x2e
  418dab:	loopne 0x418d35
  418dad:	jb     0x418da7
  418daf:	adc    eax,DWORD PTR [ebp+0xca7cf52]
  418db5:	(bad)  
  418db6:	cmp    al,0xa9
  418db8:	emms   
  418dba:	(bad)  
  418dbc:	fmul   st(3),st
  418dbe:	jmp    0x4211:0xafc030ee
  418dc5:	nop
  418dc6:	sub    eax,0x5ad69a68
  418dcb:	mov    bh,0x96
  418dcd:	bound  ebp,QWORD PTR [ebp-0x968aa44]
  418dd3:	dec    eax
  418dd4:	fld    TBYTE PTR [eax+0x6f]
  418dd7:	mov    ecx,0x7dd897f5
  418ddc:	sub    BYTE PTR [ebx],al
  418dde:	push   eax
  418ddf:	paddw  mm7,QWORD PTR [edi+edi*8-0xb]
  418de4:	(bad)  
  418de5:	rol    BYTE PTR [ebx+ebp*1-0x2c],cl
  418de9:	out    dx,al
  418dea:	jle    0x418e36
  418dec:	sbb    al,0xf9
  418dee:	cmc    
  418def:	inc    ecx
  418df0:	ror    BYTE PTR [eax],cl
  418df2:	scas   eax,DWORD PTR es:[edi]
  418df3:	nop
  418df4:	mov    edi,0xf6021774
  418df9:	out    dx,eax
  418dfa:	rol    BYTE PTR [eax-0x42c41ec6],0xa5
  418e01:	icebp  
  418e02:	ins    DWORD PTR es:[edi],dx
  418e03:	or     BYTE PTR [edi+0x7f],0xfa
  418e07:	adc    al,0xca
  418e09:	cmp    ecx,DWORD PTR [esi+0xebe7ed6]
  418e0f:	dec    edx
  418e10:	outs   dx,BYTE PTR ds:[esi]
  418e11:	mov    ds,WORD PTR [esi-0x56f94058]
  418e17:	lods   eax,DWORD PTR ds:[esi]
  418e18:	dec    ebp
  418e19:	mov    bl,0x96
  418e1b:	ret    0x99b7
  418e1e:	loop   0x418e59
  418e20:	add    BYTE PTR [edx],al
  418e22:	adc    edi,DWORD PTR [ecx+0x73]
  418e25:	je     0x418df3
  418e27:	jno    0x418dcc
  418e29:	or     al,0x54
  418e2b:	pop    ecx
  418e2c:	mov    al,dh
  418e2e:	ret    
  418e2f:	js     0x418e75
  418e31:	xor    cl,BYTE PTR [eax]
  418e33:	xchg   edi,eax
  418e34:	jmp    0xd96560b3
  418e39:	mov    ecx,0x399a3286
  418e3e:	push   edi
  418e3f:	test   BYTE PTR [ecx+0x26a16e9c],dh
  418e45:	(bad)  
  418e46:	mov    BYTE PTR [ebx+esi*1+0x49],dh
  418e4a:	cmp    esi,ecx
  418e4c:	loope  0x418df1
  418e4e:	in     eax,0x85
  418e50:	inc    esp
  418e51:	sbb    eax,0x27f58b28
  418e56:	adc    eax,0x751b0ede
  418e5b:	mul    BYTE PTR [edi]
  418e5d:	mov    cl,cl
  418e5f:	out    0x19,eax
  418e61:	inc    edi
  418e62:	div    cl
  418e64:	pop    ds
  418e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e66:	fidiv  WORD PTR [eax+0x24]
  418e69:	fdivr  st(5),st
  418e6b:	mov    ebx,0xf60c1c94
  418e70:	out    dx,eax
  418e71:	and    edi,DWORD PTR [esi]
  418e73:	test   eax,0xb7cc260b
  418e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e79:	into   
  418e7a:	sbb    BYTE PTR [ecx],0x99
  418e7d:	mov    ah,0xbf
  418e7f:	xchg   edx,eax
  418e80:	loope  0x418ed7
  418e82:	xor    ebx,0xd2642fc0
  418e88:	sub    al,al
  418e8a:	adc    edx,DWORD PTR [edx-0x67]
  418e8d:	cmp    al,0xe3
  418e8f:	(bad)  
  418e90:	mov    ebp,0x7159f318
  418e95:	pop    ebp
  418e96:	mov    esi,0xda080dd8
  418e9b:	push   eax
  418e9c:	xchg   BYTE PTR [ebx+ebx*8-0x14],bl
  418ea0:	into   
  418ea1:	adc    DWORD PTR [eax-0x25],edi
  418ea4:	push   ecx
  418ea5:	sbb    dl,dl
  418ea7:	in     eax,dx
  418ea8:	jno    0x418eb0
  418eaa:	outs   dx,DWORD PTR ds:[esi]
  418eab:	sbb    BYTE PTR [ebp-0x536f903c],bl
  418eb1:	sub    cl,ch
  418eb3:	fwait
  418eb4:	hlt    
  418eb5:	mov    ch,0xcf
  418eb7:	push   0xe56bb2f5
  418ebc:	fistp  DWORD PTR ds:0xd2a30380
  418ec2:	(bad)  
  418ec4:	loop   0x418ee0
  418ec6:	jns    0x418f15
  418ec8:	dec    eax
  418ec9:	retf   0x4ffe
  418ecc:	pop    es
  418ecd:	ss in  eax,dx
  418ecf:	test   DWORD PTR [esi],edi
  418ed1:	lds    esp,FWORD PTR [esi+0x77]
  418ed4:	test   al,0xbe
  418ed6:	bound  ebp,QWORD PTR [edx+0x6aad0922]
  418edc:	icebp  
  418edd:	iret   
  418ede:	pop    es
  418edf:	dec    esp
  418ee0:	cld    
  418ee1:	inc    ebp
  418ee2:	aaa    
  418ee3:	fadd   DWORD PTR [ecx+esi*4-0x1d8a951c]
  418eea:	add    al,0xcf
  418eec:	sbb    ch,bh
  418eee:	fsub   st(5),st
  418ef0:	pcmpgtb mm0,QWORD PTR [edx]
  418ef3:	dec    ebp
  418ef4:	fldcw  WORD PTR [esi+esi*4+0x40cf4b13]
  418efb:	leave  
  418efc:	int3   
  418efd:	mul    DWORD PTR [edx-0x53]
  418f00:	mov    eax,ds:0x6c1d717b
  418f05:	inc    eax
  418f06:	out    0xc4,eax
  418f08:	mov    ds:0x1e954b4e,al
  418f0d:	jne    0x418efc
  418f0f:	push   ecx
  418f10:	sti    
  418f11:	scas   eax,DWORD PTR es:[edi]
  418f12:	inc    edi
  418f13:	enter  0xb086,0x4
  418f17:	test   eax,0x552666c4
  418f1c:	jmp    0x418f80
  418f1e:	push   edi
  418f1f:	sahf   
  418f20:	nop
  418f21:	daa    
  418f22:	call   0x2f22:0xb127b941
  418f29:	mov    esp,DWORD PTR [ebp-0x1d2c860c]
  418f2f:	neg    dh
  418f31:	xchg   esi,eax
  418f32:	repnz in al,0xce
  418f35:	(bad)  
  418f36:	in     eax,0x52
  418f38:	pop    ds
  418f39:	fldcw  WORD PTR [edi+eax*4+0x4b]
  418f3d:	shl    DWORD PTR [edi-0x597be12],0x16
  418f44:	adc    al,0x1b
  418f46:	fcomp  QWORD PTR [edi-0x5875e7fb]
  418f4c:	pop    eax
  418f4d:	mov    ?,WORD PTR [ecx+0x2bff45d0]
  418f53:	stos   BYTE PTR es:[edi],al
  418f54:	fwait
  418f55:	push   eax
  418f56:	xchg   esi,eax
  418f57:	fcom   QWORD PTR [edx]
  418f59:	jb     0x418f17
  418f5b:	ret    0x5840
  418f5e:	sti    
  418f5f:	ret    0x132c
  418f62:	enter  0x629b,0x9a
  418f66:	(bad)  [ebx]
  418f68:	mov    esp,0xe830e59a
  418f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6e:	add    eax,0x408f9d6b
  418f73:	cmp    al,0x87
  418f75:	add    BYTE PTR [eax],ch
  418f77:	sub    edx,DWORD PTR [ecx]
  418f79:	fistp  DWORD PTR [ebx]
  418f7b:	mov    eax,ds:0x7b5eddf5
  418f80:	mov    dh,0x9f
  418f82:	push   ebp
  418f83:	es out dx,al
  418f85:	push   ebx
  418f86:	jle    0x418f3e
  418f88:	repz xor al,0x2f
  418f8b:	aaa    
  418f8c:	dec    eax
  418f8d:	push   esp
  418f8e:	dec    eax
  418f8f:	ins    DWORD PTR es:[edi],dx
  418f90:	push   esp
  418f91:	int    0x34
  418f93:	cld    
  418f94:	rol    DWORD PTR [eax+0x66427548],0xc6
  418f9b:	sbb    DWORD PTR [ebx-0x1ea9c233],0xffffffa1
  418fa2:	add    dh,BYTE PTR cs:[ebx]
  418fa5:	int    0xe0
  418fa7:	sub    al,BYTE PTR [ebx]
  418fa9:	je     0x418f7b
  418fab:	push   ss
  418fac:	push   cs
  418fad:	fmul   DWORD PTR [ecx-0x1b]
  418fb0:	mov    ds:0xd710f0e4,al
  418fb5:	pop    ecx
  418fb6:	ja     0x419000
  418fb8:	(bad)  
  418fb9:	ds aaa 
  418fbb:	dec    eax
  418fbc:	or     DWORD PTR [ebx],eax
  418fbe:	and    al,0xd3
  418fc0:	push   edx
  418fc1:	pop    ebp
  418fc2:	mov    cl,0x2d
  418fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fc5:	es jno 0x41903e
  418fc8:	add    al,0x97
  418fca:	add    bl,dl
  418fcc:	fidivr DWORD PTR [ebp-0x1fe7be0e]
  418fd2:	fbld   TBYTE PTR [eax-0x51d4a037]
  418fd8:	mov    al,ds:0x11966eb3
  418fdd:	ror    BYTE PTR [edi+0x32e9b014],cl
  418fe3:	dec    edx
  418fe4:	popa   
  418fe5:	outs   dx,DWORD PTR ds:[esi]
  418fe6:	adc    DWORD PTR [eax+0x4c],esi
  418fe9:	test   eax,0xc3aa3f4d
  418fee:	inc    ecx
  418fef:	popf   
  418ff0:	push   esp
  418ff1:	gs dec ebx
  418ff3:	mov    edx,0xb2fc424e
  418ff8:	int    0x45
  418ffa:	sbb    edi,DWORD PTR [ebp-0xa]
  418ffd:	jno    0x419004
  418fff:	out    0x2,eax
  419001:	stc    
  419002:	jno    0x419051
  419004:	push   ebx
  419005:	xor    DWORD PTR [edx+0x55684976],eax
  41900b:	dec    ebp
  41900c:	xor    ch,BYTE PTR [ecx+0x7e90be72]
  419012:	add    edx,eax
  419014:	lea    edx,[esi-0x68]
  419017:	xor    eax,0x68630d2
  41901c:	or     eax,0x6d7c3b97
  419021:	fcomi  st,st(5)
  419023:	fdiv   QWORD PTR [eax]
  419025:	or     eax,0x30cda051
  41902a:	aas    
  41902b:	adc    ebp,DWORD PTR [esi+0x60ea0e2f]
  419031:	call   FWORD PTR [ebx]
  419033:	in     eax,dx
  419034:	jnp    0x418fd9
  419036:	mov    bl,0x84
  419038:	jg     0x419041
  41903a:	(bad)  
  41903b:	cmp    al,0x6c
  41903d:	dec    ebx
  41903e:	inc    eax
  41903f:	xor    ecx,esp
  419041:	sub    al,BYTE PTR [edx]
  419043:	xor    al,0xc1
  419045:	sahf   
  419046:	mov    dh,dl
  419048:	mov    cl,dh
  41904a:	jmp    0x3fb25921
  41904f:	mov    ecx,0xc1dd519a
  419054:	loope  0x419007
  419056:	pop    eax
  419057:	inc    edi
  419058:	mov    ebp,DWORD PTR [esi]
  41905a:	test   eax,0x3cd883f8
  41905f:	mov    bh,0xaf
  419061:	add    ch,cl
  419063:	jmp    0x419099
  419065:	int    0x68
  419067:	in     eax,0x5b
  419069:	pop    ds
  41906a:	pop    edi
  41906b:	ss enter 0xeb00,0x1d
  419070:	ins    DWORD PTR es:[edi],dx
  419071:	cmp    al,0x90
  419073:	mov    esp,0x49159ed9
  419078:	lock push esi
  41907a:	loop   0x4190d0
  41907c:	push   cs
  41907d:	add    BYTE PTR [esi],bl
  41907f:	push   edx
  419080:	js     0x41909d
  419082:	(bad)  
  419083:	out    0x68,eax
  419085:	xchg   ebp,eax
  419086:	add    bl,BYTE PTR [ebx]
  419088:	mov    ch,0x7a
  41908a:	mov    ebx,ebp
  41908c:	cmp    ebp,DWORD PTR [ebx+0x7c]
  41908f:	inc    ebp
  419090:	xor    eax,ebx
  419092:	ficomp WORD PTR ds:0x2ba439c3
  419098:	pusha  
  419099:	mov    dh,0xb
  41909b:	push   ss
  41909c:	push   cs
  41909d:	repz mov al,ds:0x6d62d9a2
  4190a3:	push   esi
  4190a4:	mov    fs,WORD PTR [edx-0x47]
  4190a7:	jmp    0xf59978ac
  4190ac:	jne    0x419111
  4190ae:	icebp  
  4190af:	lock das 
  4190b1:	ret    0x1ae4
  4190b4:	icebp  
  4190b5:	jmp    0xc3970303
  4190ba:	(bad)  
  4190bb:	iret   
  4190bc:	iret   
  4190bd:	jne    0x419065
  4190bf:	push   ds
  4190c0:	cdq    
  4190c1:	enter  0x4eb2,0x4
  4190c5:	add    bh,BYTE PTR [ebx-0x8]
  4190c8:	jmp    0x94d1:0x6ae56db2
  4190cf:	stc    
  4190d0:	cwde   
  4190d1:	je     0x4190a0
  4190d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d4:	cmp    al,BYTE PTR [esi]
  4190d6:	leave  
  4190d7:	cli    
  4190d8:	inc    ebx
  4190d9:	(bad)  
  4190da:	jo     0x4190fb
  4190dc:	enter  0x7ebd,0x45
  4190e0:	lea    eax,ds:0x7eee6272
  4190e6:	ins    BYTE PTR es:[edi],dx
  4190e7:	test   eax,edx
  4190e9:	iret   
  4190ea:	adc    eax,0x49e341e0
  4190ef:	or     cl,BYTE PTR [ebx+0x35e49ff1]
  4190f5:	sub    bh,al
  4190f7:	and    eax,0x60adca99
  4190fc:	or     DWORD PTR [edx],ebp
  4190fe:	mov    ds:0x530f8036,al
  419103:	out    dx,al
  419104:	push   cs
  419105:	fcmovne st,st(0)
  419107:	ret    0xca6a
  41910a:	xlat   BYTE PTR ds:[ebx]
  41910b:	jb     0x419136
  41910d:	xor    DWORD PTR [eax+0x6997810],eax
  419113:	jae    0x419097
  419115:	dec    edx
  419116:	outs   dx,BYTE PTR ds:[esi]
  419117:	ds into 
  419119:	stos   BYTE PTR es:[edi],al
  41911a:	out    dx,eax
  41911b:	adc    ebp,DWORD PTR [ecx+0x78]
  41911e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41911f:	and    bh,cl
  419121:	nop
  419122:	ret    
  419123:	jno    0x4190d5
  419125:	leave  
  419126:	mov    ecx,0x2a1f63bf
  41912b:	jno    0x41916a
  41912d:	iret   
  41912e:	mov    ds:0xc3b3c32d,al
  419133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419134:	jle    0x4190bb
  419136:	pushf  
  419137:	into   
  419138:	adc    dl,cl
  41913a:	arpl   WORD PTR ds:0x1505f94,dx
  419140:	dec    ebx
  419141:	clc    
  419142:	mov    cl,0x7
  419144:	das    
  419145:	adc    esi,esp
  419147:	xchg   BYTE PTR [eax-0x71],bl
  41914a:	aam    0x39
  41914c:	test   BYTE PTR [eax],al
  41914e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41914f:	(bad)  
  419150:	stc    
  419151:	push   es
  419152:	dec    eax
  419153:	push   ss
  419154:	mov    cl,0x84
  419156:	into   
  419157:	mov    ebx,DWORD PTR [ebp+0xffdf072]
  41915d:	test   al,0x50
  41915f:	jnp    0x4191b9
  419161:	dec    ebp
  419162:	iret   
  419163:	icebp  
  419164:	cld    
  419165:	repnz cdq 
  419167:	and    al,BYTE PTR [esi]
  419169:	(bad)  
  41916a:	cmp    BYTE PTR [ebx-0x30442ce3],cl
  419170:	pop    ebx
  419171:	ins    DWORD PTR es:[edi],dx
  419172:	mov    al,ds:0x2fd0dd15
  419177:	jmp    0x4191af
  419179:	pop    ecx
  41917a:	add    ecx,DWORD PTR [esi]
  41917c:	push   cs
  41917d:	mov    cl,0x8f
  41917f:	xlat   BYTE PTR ds:[ebx]
  419180:	mov    ebp,0x6dbb3153
  419185:	jb     0x419153
  419187:	das    
  419188:	dec    esi
  419189:	das    
  41918a:	add    dh,BYTE PTR [edx]
  41918c:	popf   
  41918d:	sub    ch,BYTE PTR [edx+ebx*8]
  419190:	push   ecx
  419191:	jle    0x419160
  419193:	lea    ebp,[esi]
  419195:	push   0x66
  419197:	or     DWORD PTR [esi-0x3d],edx
  41919a:	cdq    
  41919b:	outs   dx,DWORD PTR ds:[esi]
  41919c:	dec    eax
  41919d:	jmp    0x3d87:0x65f2cb13
  4191a4:	(bad)  
  4191a5:	push   0xba6181fd
  4191aa:	mov    ah,ch
  4191ac:	xor    ch,dh
  4191ae:	out    dx,eax
  4191af:	shr    BYTE PTR [edi-0x5b950adb],cl
  4191b5:	and    dl,dl
  4191b7:	sbb    edi,DWORD PTR [ebp+0x1a]
  4191ba:	push   ebp
  4191bb:	scas   al,BYTE PTR es:[edi]
  4191bc:	cmp    eax,0x558188cd
  4191c1:	mov    WORD PTR [ebx+0x2c948069],ds
  4191c7:	mov    fs,WORD PTR [edx+eax*1-0x6d]
  4191cb:	and    DWORD PTR [ebx-0x78452cdf],edx
  4191d1:	dec    ebp
  4191d2:	cwde   
  4191d3:	jmp    0x4191a5
  4191d5:	mov    esi,0x514ccfcc
  4191da:	dec    esi
  4191db:	call   0xe632b21d
  4191e0:	mov    ebp,ecx
  4191e2:	ja     0x419226
  4191e4:	out    dx,eax
  4191e5:	popa   
  4191e6:	cmp    ah,ah
  4191e8:	lahf   
  4191e9:	jl     0x41925e
  4191eb:	je     0x4191cb
  4191ed:	cmc    
  4191ee:	pop    eax
  4191ef:	jmp    0x41925a
  4191f1:	dec    ebp
  4191f2:	repnz and eax,DWORD PTR [ebp+0x771e9ffc]
  4191f9:	stos   DWORD PTR es:[edi],eax
  4191fa:	and    ah,BYTE PTR [edi+edx*2+0x6b0518b2]
  419201:	repz mov eax,DWORD PTR [eax-0x6d928ce]
  419208:	pop    DWORD PTR [ecx]
  41920a:	push   edi
  41920b:	or     BYTE PTR ds:0x7ccb47ea,bl
  419211:	xchg   bl,ch
  419213:	sub    eax,0x80fbc730
  419218:	dec    edi
  419219:	outs   dx,BYTE PTR ds:[esi]
  41921a:	add    bh,BYTE PTR [esi+ecx*1]
  41921d:	mov    ch,0xda
  41921f:	pop    esp
  419220:	jmp    0x4ce4:0xa9c2c954
  419227:	fs stos BYTE PTR es:[edi],al
  419229:	inc    ebp
  41922b:	(bad)  
  41922d:	mov    ebp,0xa2597ca1
  419232:	fsubr  QWORD PTR [edx]
  419234:	and    BYTE PTR [esi],ah
  419236:	dec    ebx
  419237:	data16 out dx,al
  419239:	sbb    al,0xe4
  41923b:	repnz mov al,ds:0xb6c7ca12
  419241:	out    dx,al
  419242:	xchg   edi,ecx
  419244:	xor    DWORD PTR [esi+0xb],0xc92e366b
  41924b:	imul   DWORD PTR [edi]
  41924d:	jo     0x4191ef
  41924f:	push   ds
  419250:	outs   dx,DWORD PTR ds:[esi]
  419251:	(bad)  
  419252:	(bad)  
  419253:	in     eax,dx
  419254:	in     eax,dx
  419255:	and    ebp,DWORD PTR [esi+0x75]
  419258:	xor    edi,ebx
  41925a:	and    eax,0x393fa6bb
  41925f:	fadd   QWORD PTR [ebx]
  419261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419262:	inc    eax
  419263:	ret    
  419264:	xlat   BYTE PTR ds:[ebx]
  419265:	jns    0x4192b5
  419267:	in     al,dx
  419268:	cmp    bl,BYTE PTR [esi-0x67f56dca]
  41926e:	rol    BYTE PTR [ecx-0x4d77bd9e],0xa7
  419275:	xor    DWORD PTR [edi-0x1e],edx
  419278:	pop    ebp
  419279:	sub    ch,0x65
  41927c:	test   eax,0x3185a653
  419281:	test   DWORD PTR [edx],edx
  419283:	or     BYTE PTR [ebp+0x1e],cl
  419286:	call   DWORD PTR [ecx-0x6ce6bd19]
  41928c:	pushf  
  41928d:	mov    eax,ds:0x77f588b2
  419292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419293:	pop    ecx
  419294:	xchg   esp,eax
  419295:	sbb    eax,0xbbd44bb7
  41929a:	pop    ss
  41929b:	and    DWORD PTR ds:0xb5d54a72,ecx
  4192a1:	adc    ecx,DWORD PTR [esi+0x7068cebe]
  4192a7:	jl     0x419276
  4192a9:	imul   eax,DWORD PTR [ecx+edi*2-0x9b6135a],0x49
  4192b1:	pop    esp
  4192b2:	retf   
  4192b3:	mov    cl,0xfe
  4192b5:	or     BYTE PTR [ebx+0xf],dh
  4192b8:	ret    
  4192b9:	(bad)  
  4192bb:	xor    al,0x65
  4192bd:	adc    eax,0x141111c
  4192c2:	inc    esi
  4192c3:	div    DWORD PTR [eax]
  4192c5:	cmp    ch,ah
  4192c7:	xor    edx,DWORD PTR [ecx+0x24]
  4192ca:	daa    
  4192cb:	sahf   
  4192cc:	and    BYTE PTR [ecx+esi*8],0xb3
  4192d0:	pop    ss
  4192d1:	sti    
  4192d2:	addr16 inc edx
  4192d4:	add    ebx,DWORD PTR [edi+0xd]
  4192d7:	or     BYTE PTR es:[ebx-0x68c4498f],al
  4192de:	es sub eax,0x6600fd44
  4192e4:	dec    edi
  4192e5:	xor    BYTE PTR [ecx],0xb2
  4192e8:	(bad)  
  4192ea:	push   edi
  4192eb:	mov    al,ds:0x251e0eb2
  4192f0:	(bad)  
  4192f1:	cld    
  4192f2:	adc    DWORD PTR ds:0x37e1cf7f,esi
  4192f8:	cmp    BYTE PTR [ecx+0x6cd3191d],ah
  4192fe:	outs   dx,BYTE PTR ds:[esi]
  4192ff:	mov    edx,0xef8fc589
  419304:	dec    esi
  419305:	(bad)  [eax-0x7e]
  419308:	mov    ch,0x9
  41930a:	stos   BYTE PTR es:[edi],al
  41930b:	pop    esi
  41930c:	inc    ebp
  41930d:	rcr    BYTE PTR [esi+0x48],0x52
  419311:	ss jle 0x41929b
  419314:	gs aaa 
  419316:	fs jb  0x41936f
  419319:	push   ecx
  41931a:	pop    esi
  41931b:	sbb    dl,BYTE PTR [esi-0x58]
  41931e:	sbb    al,BYTE PTR [edi-0x6a33498a]
  419324:	sbb    eax,0x9743985b
  419329:	xor    eax,0x665c1fda
  41932e:	ret    0xa88f
  419331:	sub    ecx,0xc765192c
  419337:	sahf   
  419338:	push   esp
  419339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41933a:	adc    BYTE PTR [edx+eiz*4+0x6e],ch
  41933e:	aaa    
  41933f:	pop    esi
  419340:	dec    esi
  419341:	mov    ah,BYTE PTR [ebx-0x3485cf42]
  419347:	xchg   esi,eax
  419348:	xor    eax,0x6fbb5263
  41934d:	cmp    eax,DWORD PTR [ebx]
  41934f:	pop    ecx
  419350:	call   0xbec01c62
  419355:	into   
  419356:	or     BYTE PTR [eax+ebp*2],bl
  419359:	lds    edx,FWORD PTR [eax+0x754eb12c]
  41935f:	(bad)  
  419360:	cld    
  419361:	loop   0x41939b
  419363:	out    dx,al
  419364:	mov    edx,db0
  419367:	test   edi,edx
  419369:	inc    edx
  41936a:	lock and eax,0x1a6ebe8
  419370:	call   0x838ae0aa
  419375:	test   eax,0x5ec5f4ea
  41937a:	mov    eax,0x18d6ef51
  41937f:	shr    DWORD PTR [edi-0x39],cl
  419382:	pop    edx
  419383:	mov    bl,0xd
  419385:	or     dh,al
  419387:	mov    eax,0x11cdc264
  41938c:	adc    DWORD PTR [eax-0x39ee1e26],edi
  419392:	sub    ecx,esp
  419394:	add    ebx,DWORD PTR [edx]
  419396:	push   0xc39837ac
  41939b:	jp     0x4193a8
  41939d:	push   eax
  41939e:	in     al,0x27
  4193a0:	xchg   edi,eax
  4193a1:	pop    ebx
  4193a2:	mov    bl,0xa7
  4193a4:	mov    al,0x71
  4193a6:	and    edx,DWORD PTR [eax-0x1a3bcf8b]
  4193ac:	int    0x39
  4193ae:	push   0x46d97b7e
  4193b3:	scas   eax,DWORD PTR es:[edi]
  4193b4:	adc    al,0x4d
  4193b6:	es dec edx
  4193b8:	sbb    esi,esp
  4193ba:	mov    esi,0xa13e9046
  4193bf:	pop    edi
  4193c0:	stc    
  4193c1:	test   DWORD PTR [ebx+0x56b923c9],ebp
  4193c7:	aaa    
  4193c8:	loopne 0x41942f
  4193ca:	sbb    eax,DWORD PTR [esi-0x3af3fa85]
  4193d0:	or     DWORD PTR [edx-0x69f83b9d],edi
  4193d6:	cmp    esp,DWORD PTR [esi-0x7b496341]
  4193dc:	or     BYTE PTR [ebx+0x3aa8dec],dl
  4193e2:	sub    eax,0xf15d7bc2
  4193e7:	inc    edi
  4193e8:	push   esp
  4193e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ea:	dec    ecx
  4193eb:	iret   
  4193ec:	fld    QWORD PTR [ebx]
  4193ee:	or     esi,DWORD PTR [ecx]
  4193f0:	inc    ebx
  4193f1:	cmp    dh,dh
  4193f3:	jnp    0x41946b
  4193f5:	popa   
  4193f6:	arpl   WORD PTR [edx+0x2f868400],bp
  4193fc:	lds    ecx,FWORD PTR [ebx+0x38]
  4193ff:	or     al,0x7a
  419401:	sti    
  419402:	aad    0x0
  419404:	pop    esp
  419405:	popf   
  419406:	popa   
  419407:	sbb    DWORD PTR [ebx],ecx
  419409:	jmp    0x501b:0x4d6c7845
  419410:	jmp    0x66c5:0x286975db
  419417:	and    BYTE PTR [ebx+0x228aae56],bh
  41941d:	popf   
  41941e:	aam    0x41
  419420:	stos   DWORD PTR es:[edi],eax
  419421:	push   es
  419422:	mov    ebx,eax
  419424:	fsub   DWORD PTR ds:0x520a30b1
  41942a:	xor    eax,0xc607c188
  41942f:	sub    bl,dl
  419431:	and    bl,BYTE PTR [ebp-0x45]
  419434:	mov    edx,0x283e4eaf
  419439:	aad    0x33
  41943b:	jmp    0xe3c37f83
  419440:	push   DWORD PTR [ebp-0x15]
  419443:	lods   eax,DWORD PTR ds:[esi]
  419444:	dec    ebx
  419445:	paddsb mm1,QWORD PTR [ebp-0x4549b3fe]
  41944c:	lea    edx,[esi]
  41944e:	data16 xchg BYTE PTR [edx+ecx*1-0x44],dl
  419453:	pushf  
  419454:	(bad)  
  419455:	mov    ebp,0x5dcc5b6d
  41945a:	je     0x419442
  41945c:	(bad)
  419461:	sahf   
  419462:	test   al,0xdf
  419464:	pop    edx
  419465:	sub    dl,bl
  419467:	leave  
  419468:	fs (bad) 
  41946a:	push   ss
  41946b:	std    
  41946c:	and    dl,BYTE PTR [ebx+0x5840b466]
  419472:	jnp    0x41948b
  419474:	mov    ch,0x51
  419476:	xchg   edi,eax
  419477:	pop    edx
  419478:	sbb    eax,0x7b6da066
  41947d:	push   esp
  41947e:	fdivr  DWORD PTR [esi+0x23]
  419481:	lods   eax,DWORD PTR ds:[esi]
  419482:	xchg   DWORD PTR [esi+edx*1-0x6e711080],edx
  419489:	ja     0x4194b5
  41948b:	add    al,0xfb
  41948d:	inc    ecx
  41948e:	mov    ebp,0xffebce48
  419493:	mov    eax,0x556be239
  419498:	or     ecx,DWORD PTR [esi+0x7ca26203]
  41949e:	sbb    eax,0x9c217bcf
  4194a3:	ss retf 
  4194a5:	jl     0x41946c
  4194a7:	dec    edx
  4194a8:	retf   0x5776
  4194ab:	inc    eax
  4194ac:	icebp  
  4194ad:	mov    DWORD PTR ds:0xa72172ec,esp
  4194b3:	sbb    ecx,edx
  4194b5:	js     0x4194ce
  4194b7:	mov    ds:0x56e641eb,eax
  4194bc:	lods   al,BYTE PTR ds:[esi]
  4194bd:	and    dl,dh
  4194bf:	mov    ch,ah
  4194c1:	in     eax,0xf4
  4194c3:	aaa    
  4194c4:	or     eax,0x48e859f9
  4194c9:	inc    ecx
  4194ca:	push   eax
  4194cb:	cwde   
  4194cc:	pop    ds
  4194cd:	mov    ah,0xe9
  4194cf:	stos   BYTE PTR es:[edi],al
  4194d0:	popf   
  4194d1:	sbb    eax,0x58acbdef
  4194d6:	push   esp
  4194d7:	ja     0x4194ac
  4194d9:	data16 jle 0x419538
  4194dc:	(bad)  
  4194dd:	enter  0xe719,0x65
  4194e1:	aam    0x92
  4194e3:	push   edx
  4194e4:	push   eax
  4194e5:	loope  0x4194e0
  4194e7:	shl    DWORD PTR [ebp-0x49],1
  4194ea:	xor    bl,BYTE PTR [edx+0x2f]
  4194ed:	add    dh,BYTE PTR [ebx-0xf]
  4194f0:	push   ds
  4194f1:	mov    dl,0x5
  4194f3:	call   0x81bd35d9
  4194f8:	shl    edx,1
  4194fa:	stos   DWORD PTR es:[edi],eax
  4194fb:	jl     0x419541
  4194fd:	push   esi
  4194fe:	inc    ecx
  4194ff:	jo     0x4194fa
  419501:	jle    0x4194e8
  419503:	mov    eax,0x16fbee60
  419508:	and    eax,esp
  41950a:	jle    0x41955e
  41950c:	aad    0x6c
  41950e:	xlat   BYTE PTR ds:[ebx]
  41950f:	inc    ecx
  419510:	cmp    BYTE PTR [edx+0x6b],ah
  419513:	xor    BYTE PTR ds:0x7e3e5590,ch
  419519:	popa   
  41951a:	(bad)  
  41951c:	jo     0x41958c
  41951e:	test   eax,0x9b5927ee
  419523:	cmp    al,0x2f
  419525:	xchg   cx,ax
  419527:	adc    esi,DWORD PTR [ecx+edx*1+0x4a16f643]
  41952e:	outs   dx,BYTE PTR ds:[esi]
  41952f:	add    ah,0x73
  419532:	std    
  419533:	mov    esp,0xd5e946d2
  419538:	stos   DWORD PTR es:[edi],eax
  419539:	adc    al,0x6f
  41953b:	mov    edi,0xb919908a
  419540:	enter  0xad99,0x15
  419544:	dec    ebp
  419545:	jecxz  0x4195bc
  419547:	mov    esi,edx
  419549:	inc    esp
  41954a:	lods   eax,DWORD PTR ds:[esi]
  41954b:	and    edi,ebp
  41954d:	cmp    DWORD PTR [edx],0x7c032367
  419553:	xchg   esi,eax
  419554:	vcmpsd xmm0,xmm7,QWORD PTR ds:0x10d63554,0x5a
  41955d:	xor    eax,0x63726e53
  419562:	xchg   ebx,eax
  419563:	inc    edx
  419564:	cs ss out dx,al
  419567:	push   ds
  419568:	jo     0x41954b
  41956a:	sbb    ebp,esi
  41956c:	pusha  
  41956d:	lods   eax,DWORD PTR ds:[esi]
  41956e:	mov    dl,0xa4
  419570:	cmp    BYTE PTR [edi],0x57
  419573:	fwait
  419574:	or     esp,ecx
  419576:	push   eax
  419577:	cmp    BYTE PTR [ebx-0x5],al
  41957a:	add    DWORD PTR [ecx],ecx
  41957c:	in     al,dx
  41957d:	(bad)  [ebx+0x2b]
  419580:	dec    esi
  419581:	mov    ecx,0x983ffa5e
  419586:	jl     0x419591
  419588:	jbe    0x41955a
  41958a:	push   cs
  41958b:	popf   
  41958c:	jmp    0xf8f76b18
  419591:	fcomp  DWORD PTR [ecx+0x240a41a3]
  419597:	call   FWORD PTR [ebp-0x4a392920]
  41959d:	or     DWORD PTR gs:[ecx+0x3c84fbde],ecx
  4195a4:	ins    BYTE PTR es:[edi],dx
  4195a5:	xor    BYTE PTR [ecx-0x39],dh
  4195a8:	ins    DWORD PTR es:[edi],dx
  4195a9:	push   ss
  4195aa:	out    dx,eax
  4195ab:	in     eax,dx
  4195ac:	sbb    BYTE PTR [esi+0x92079fd],bl
  4195b2:	sub    cl,dh
  4195b4:	sbb    eax,0x82c1723b
  4195b9:	cmp    ah,dh
  4195bb:	enter  0x22a9,0xf8
  4195bf:	mov    al,ds:0x17733b66
  4195c4:	cwde   
  4195c5:	and    ebp,DWORD PTR [ecx-0x5ba86ad6]
  4195cb:	xchg   edi,eax
  4195cc:	arpl   WORD PTR [edx-0x7c44432c],cx
  4195d2:	inc    ebx
  4195d3:	cld    
  4195d4:	cmc    
  4195d5:	ds dec esp
  4195d7:	in     al,0x6b
  4195d9:	adc    DWORD PTR [ebx+0x291789ba],ebx
  4195df:	dec    eax
  4195e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195e1:	inc    ebp
  4195e2:	mov    al,ds:0x9505cd27
  4195e7:	jb     0x41963b
  4195e9:	sbb    eax,0x31ab367
  4195ee:	adc    ch,ah
  4195f0:	mov    WORD PTR [ebx],cs
  4195f2:	mov    BYTE PTR [eax-0x2a162c54],bl
  4195f8:	xor    ebx,DWORD PTR [edx+0x54]
  4195fb:	icebp  
  4195fc:	loope  0x41960f
  4195fe:	in     al,dx
  4195ff:	and    bl,BYTE PTR [esi]
  419601:	mov    ecx,0x6095d7ef
  419606:	dec    edx
  419607:	mov    dh,0x88
  419609:	mov    edi,0x707d0153
  41960e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41960f:	push   es
  419610:	push   cs
  419611:	mov    ah,0x26
  419613:	or     BYTE PTR [esp+eiz*2-0x21b0cc60],cl
  41961a:	hlt    
  41961b:	pop    ss
  41961c:	call   0xc26f9772
  419621:	in     eax,0xe3
  419623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419624:	(bad)  
  419625:	(bad)  
  419627:	stc    
  419628:	mov    esp,0xceead68
  41962d:	mov    esi,0xa6009abe
  419632:	push   ebp
  419633:	outs   dx,DWORD PTR ds:[esi]
  419634:	js     0x4196b2
  419636:	adc    al,0xc2
  419638:	mov    dh,0x37
  41963a:	jb     0x4195f8
  41963c:	sahf   
  41963d:	dec    esi
  41963e:	mov    dl,0x12
  419640:	push   ecx
  419641:	mov    ch,0xde
  419643:	test   esi,esi
  419645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419646:	mov    ch,0x4d
  419648:	retf   0x36cf
  41964b:	dec    eax
  41964c:	fisub  DWORD PTR [edx-0x29]
  41964f:	mov    al,ds:0xb0a473e6
  419654:	add    esi,esp
  419656:	imul   esi,eax,0xf43d9b2f
  41965c:	push   esi
  41965d:	cwde   
  41965e:	inc    ebp
  41965f:	bound  esp,QWORD PTR [eax-0x40]
  419662:	shl    bl,1
  419664:	adc    bh,BYTE PTR [ecx-0x4fed301]
  41966a:	mov    esi,0x299952ab
  41966f:	adc    dh,dh
  419671:	and    BYTE PTR [edi+0xef7585c],ch
  419677:	mov    al,0xdf
  419679:	xchg   edx,eax
  41967a:	frstor [edx-0x6611ba77]
  419680:	lahf   
  419681:	mov    edx,?
  419683:	xchg   BYTE PTR [eax+edi*2],bl
  419686:	mov    edi,0x97ea0bcd
  41968b:	push   0xffffff9e
  41968d:	stos   DWORD PTR es:[edi],eax
  41968e:	imul   esp,DWORD PTR [edi],0x39
  419691:	scas   eax,DWORD PTR es:[edi]
  419692:	shl    DWORD PTR [ebx-0x5c34f3e9],cl
  419698:	outs   dx,DWORD PTR ds:[esi]
  419699:	fst    DWORD PTR [edx]
  41969b:	ficomp DWORD PTR ds:0xd937818d
  4196a1:	sub    al,0x7f
  4196a3:	mov    dh,0x5
  4196a5:	push   ss
  4196a6:	jge    0x41963a
  4196a8:	pop    ebp
  4196a9:	sub    al,0x3
  4196ab:	mov    ds:0xd78e6292,al
  4196b0:	or     al,0xb2
  4196b2:	dec    edx
  4196b3:	sbb    al,0xcb
  4196b5:	aas    
  4196b6:	pop    edi
  4196b7:	pop    esp
  4196b8:	sub    dl,BYTE PTR [esi-0xfeb680e]
  4196be:	push   eax
  4196bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c0:	fabs   
  4196c2:	pusha  
  4196c3:	xchg   esp,eax
  4196c4:	je     0x4196d1
  4196c6:	xor    edx,DWORD PTR [eax+ebx*2+0x0]
  4196ca:	mov    WORD PTR [ecx+0x5b],ds
  4196cd:	fst    QWORD PTR [ebp+0x5a]
  4196d0:	imul   edi,DWORD PTR [ecx-0x44bb826],0x6b
  4196d7:	push   ss
  4196d8:	imul   ebx,DWORD PTR fs:[ebx],0xb03a67cc
  4196df:	push   0x8f88c82b
  4196e4:	mov    ch,0xf5
  4196e6:	(bad)  
  4196e8:	ins    DWORD PTR es:[edi],dx
  4196e9:	mov    eax,0xeb3d1f77
  4196ee:	sub    edi,DWORD PTR [ecx+0x2a1996ae]
  4196f4:	mul    BYTE PTR [ebp-0x54fbcf8]
  4196fa:	int    0x6a
  4196fc:	std    
  4196fd:	push   eax
  4196fe:	fdivr  DWORD PTR [ecx-0x30]
  419701:	push   edi
  419702:	lods   al,BYTE PTR ds:[esi]
  419703:	adc    al,0xc4
  419705:	fnstenv [ecx+0x8e7b217]
  41970b:	rcr    ch,0xb5
  41970e:	pop    edi
  41970f:	and    bl,dh
  419711:	pusha  
  419712:	outs   dx,BYTE PTR ds:[si]
  419714:	adc    cl,BYTE PTR [edx-0x6e]
  419717:	pop    ebx
  419718:	mov    dl,0xea
  41971a:	mov    ah,0x4
  41971c:	test   BYTE PTR [edx],cl
  41971e:	push   ds
  41971f:	mov    bl,0x3a
  419721:	pop    ecx
  419722:	clc    
  419723:	jne    0x41972c
  419725:	(bad)  
  419726:	dec    esi
  419727:	imul   ebp,DWORD PTR cs:[edi+eax*8],0x78c97124
  41972f:	dec    esi
  419730:	push   ss
  419731:	or     al,0x84
  419733:	arpl   WORD PTR [eax],dx
  419735:	xor    al,0xe5
  419737:	into   
  419738:	pop    ecx
  419739:	add    al,BYTE PTR [eax]
  41973b:	shl    BYTE PTR [edx],0xc9
  41973e:	sub    eax,edi
  419740:	xor    eax,0xcd97dbda
  419745:	sbb    BYTE PTR [ecx+0x2f2b4df2],0x21
  41974c:	dec    DWORD PTR [esi-0x21]
  41974f:	inc    eax
  419750:	enter  0xbc5e,0x56
  419754:	pop    ss
  419755:	and    ah,BYTE PTR es:[ebp-0x15dbb3f]
  41975c:	pop    ebp
  41975d:	jne    0x4197dc
  41975f:	jne    0x419709
  419761:	repnz mov ds,WORD PTR [edi]
  419764:	lahf   
  419765:	ror    BYTE PTR [edx+edx*4-0x540d8ed3],0x52
  41976d:	jo     0x4197ed
  41976f:	in     al,0xad
  419771:	out    0xf8,al
  419773:	lea    esi,[ecx+ebp*1]
  419776:	jne    0x4197f6
  419778:	(bad)  
  419779:	jp     0x41978d
  41977b:	jp     0x419735
  41977d:	rcl    al,cl
  41977f:	cdq    
  419780:	repz shr ebx,0x83
  419784:	add    al,BYTE PTR [ebx-0x4d81bf5e]
  41978a:	in     eax,dx
  41978b:	push   edi
  41978c:	xchg   ebp,eax
  41978d:	push   ecx
  41978e:	jno    0x4197ec
  419790:	jle    0x419771
  419792:	push   ebp
  419793:	push   ecx
  419794:	mov    bh,0x9a
  419796:	rol    BYTE PTR [ecx-0x73],1
  419799:	jb     0x41975c
  41979b:	(bad)  
  41979c:	outs   dx,DWORD PTR ds:[esi]
  41979d:	das    
  41979e:	ds push esp
  4197a0:	fiadd  WORD PTR [ebp+edx*8-0x30]
  4197a4:	and    ebp,ebx
  4197a6:	mov    ebx,DWORD PTR [edx]
  4197a8:	push   0x4c
  4197aa:	inc    edx
  4197ab:	fld    DWORD PTR [edx+0x67]
  4197ae:	data16 je 0x41976b
  4197b1:	mov    al,0x10
  4197b3:	imul   esi,DWORD PTR [edx+0x23],0xb6a5ec0c
  4197ba:	es push ss
  4197bc:	call   0xb0e9:0xd45949ce
  4197c3:	addr16 pop ds
  4197c5:	cmp    eax,0x79e9da89
  4197ca:	add    eax,ebx
  4197cc:	cmp    edx,DWORD PTR [eax]
  4197ce:	adc    eax,0xb284f8d8
  4197d3:	out    0x36,eax
  4197d5:	in     al,dx
  4197d6:	fwait
  4197d7:	cmp    BYTE PTR [edi],bh
  4197d9:	sub    al,0xe7
  4197db:	push   ecx
  4197dc:	out    0x1c,eax
  4197de:	scas   al,BYTE PTR es:[edi]
  4197df:	cmp    al,0x67
  4197e1:	(bad)  
  4197e2:	mov    al,BYTE PTR [ebp+0x580502ee]
  4197e8:	pop    ds
  4197e9:	jno    0x4197b2
  4197eb:	pop    ds
  4197ec:	mov    edx,0x79507f84
  4197f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197f2:	loopne 0x41979c
  4197f4:	ss pop ss
  4197f6:	jo     0x41979b
  4197f8:	jnp    0x4197e5
  4197fa:	and    al,0x66
  4197fc:	sar    DWORD PTR [edx-0x6237e457],1
  419802:	inc    esp
  419803:	popa   
  419804:	cli    
  419805:	scas   eax,DWORD PTR es:[edi]
  419806:	leave  
  419807:	scas   al,BYTE PTR es:[edi]
  419808:	xor    esp,ecx
  41980a:	lock xor BYTE PTR [eax+edx*4-0x6dde4491],0x85
  419813:	cmp    BYTE PTR [esi],0xe4
  419816:	dec    esp
  419817:	rcr    DWORD PTR [ecx+0x158d3fbb],cl
  41981d:	push   ds
  41981e:	hlt    
  41981f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419820:	sti    
  419821:	stos   DWORD PTR es:[edi],eax
  419822:	arpl   WORD PTR [ebx-0x33],bp
  419825:	cmp    bh,0x1e
  419828:	jo     0x41989d
  41982a:	xchg   ecx,eax
  41982b:	leave  
  41982c:	ror    BYTE PTR [edx],1
  41982e:	nop
  41982f:	adc    esp,edi
  419831:	jp     0x419842
  419833:	sub    eax,0xc0040b45
  419838:	popa   
  419839:	cdq    
  41983a:	arpl   bx,bx
  41983c:	jg     0x419867
  41983e:	sbb    eax,0xa6bcf8cc
  419843:	or     BYTE PTR [ebp-0x3e02182],dl
  419849:	into   
  41984a:	mov    gs,WORD PTR [ecx+0x51]
  41984d:	dec    eax
  41984e:	pop    ss
  41984f:	loopne 0x4197f5
  419851:	sub    eax,0xce98be98
  419856:	loop   0x4197e2
  419858:	cmp    DWORD PTR [ecx-0x4350af04],edi
  41985e:	sub    dh,BYTE PTR [eax]
  419860:	or     edx,DWORD PTR [edx]
  419862:	lods   al,BYTE PTR ds:[esi]
  419863:	loop   0x41986a
  419865:	push   ss
  419866:	push   edx
  419867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419868:	loope  0x4198bd
  41986a:	into   
  41986b:	or     al,BYTE PTR [ebx]
  41986d:	repnz fldenv [eax-0x58]
  419871:	sub    DWORD PTR [ebp+0x6dccf7f1],esp
  419877:	int3   
  419878:	icebp  
  419879:	neg    DWORD PTR [ebx-0x462c01bc]
  41987f:	rcr    DWORD PTR [edx+eiz*2+0x69916437],cl
  419886:	stc    
  419887:	data16 jle 0x4198e0
  41988a:	mov    BYTE PTR [ecx],al
  41988c:	repnz dec ebx
  41988e:	push   esi
  41988f:	mov    ah,al
  419891:	mov    eax,0xc5d96f1b
  419896:	add    DWORD PTR ds:0xad276cad,ebp
  41989c:	xchg   edi,eax
  41989d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41989e:	dec    edx
  41989f:	fwait
  4198a0:	add    al,0x50
  4198a2:	mov    ecx,0x599ab8b4
  4198a7:	ja     0x4198d0
  4198a9:	es xchg ecx,eax
  4198ab:	inc    eax
  4198ac:	cdq    
  4198ad:	jnp    0x4198f7
  4198af:	push   esp
  4198b0:	jmp    0x419890
  4198b2:	icebp  
  4198b3:	fnstcw WORD PTR [esi+edi*4-0x4e]
  4198b7:	xchg   BYTE PTR [ecx+0x2],bl
  4198ba:	mov    WORD PTR [edi-0x7e],?
  4198bd:	mov    edi,0xff80e12a
  4198c2:	jmp    0x1f32:0xb8c7f603
  4198c9:	frstor [esi+edi*8-0x12338d07]
  4198d0:	in     al,0xc8
  4198d2:	imul   ebp,DWORD PTR [ebp-0x6b],0xffffffc3
  4198d6:	popf   
  4198d7:	loope  0x4198c9
  4198d9:	sbb    eax,0xb5db0f33
  4198de:	in     eax,dx
  4198df:	adc    cl,BYTE PTR [eax-0x5fd6330f]
  4198e5:	repnz nop
  4198e7:	jecxz  0x419966
  4198e9:	adc    BYTE PTR gs:[ebx],0xd7
  4198ed:	sar    BYTE PTR [eax+0x6c],0xc4
  4198f1:	fisubr WORD PTR [esi-0x3b]
  4198f4:	ss mov esp,0xe8076e10
  4198fa:	aas    
  4198fb:	sub    DWORD PTR [eax],ecx
  4198fd:	jne    0x41992a
  4198ff:	shr    DWORD PTR [ebx+0x32c2d7c9],0x9c
  419906:	outs   dx,BYTE PTR ds:[esi]
  419907:	(bad)  
  419908:	cmp    BYTE PTR [edx-0x2d],dl
  41990b:	push   edx
  41990c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41990d:	mov    ebx,0xa4eede60
  419912:	add    BYTE PTR [edx],ch
  419914:	lods   eax,DWORD PTR ds:[esi]
  419915:	(bad)  
  419916:	push   eax
  419917:	mov    bl,0x82
  419919:	cmp    al,0xdc
  41991b:	fist   WORD PTR [ecx+0x7f]
  41991e:	cwde   
  41991f:	push   ecx
  419920:	sbb    DWORD PTR [eax+0x42135de5],ebx
  419926:	sbb    ch,dl
  419928:	loope  0x4198f4
  41992a:	inc    esp
  41992b:	mov    edi,es
  41992d:	sub    DWORD PTR [ecx],ecx
  41992f:	(bad)  
  419930:	xchg   ecx,eax
  419931:	inc    ecx
  419932:	push   ebp
  419933:	ins    DWORD PTR es:[edi],dx
  419934:	mov    ebx,tr3
  419937:	jecxz  0x4198eb
  419939:	sbb    ah,BYTE PTR [ecx-0x3c]
  41993c:	add    al,0xdc
  41993e:	jge    0x41991c
  419940:	xchg   edx,eax
  419941:	repnz mov eax,edi
  419944:	loope  0x41990b
  419946:	daa    
  419947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419948:	sub    eax,0xa0384210
  41994d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41994e:	sub    BYTE PTR [eax+0x1675aa21],ch
  419954:	mov    bh,0x8d
  419956:	fcmovb st,st(6)
  419958:	sahf   
  419959:	push   ecx
  41995a:	and    eax,0x608e8286
  41995f:	push   ebp
  419960:	cmp    ebp,DWORD PTR [edi-0x1cc0c05]
  419966:	ror    BYTE PTR [eax+0x141885bb],0x59
  41996d:	mov    ss,WORD PTR [edx-0x49c079e4]
  419973:	mov    esi,0x3879b56
  419978:	lock outs dx,BYTE PTR ds:[esi]
  41997a:	mov    ds:0x6b742882,al
  41997f:	stc    
  419980:	outs   dx,BYTE PTR ds:[esi]
  419981:	mov    eax,ds:0xabb80c70
  419986:	loopne 0x419967
  419988:	sbb    eax,0x8222804a
  41998d:	dec    ebp
  41998e:	out    dx,al
  41998f:	and    DWORD PTR [ecx],eax
  419991:	and    DWORD PTR [eax+eax*8],0x24
  419995:	push   es
  419996:	dec    edi
  419997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419998:	(bad)  
  419999:	push   0xffffff98
  41999b:	sub    BYTE PTR [esi+0x14b7777d],ah
  4199a1:	popa   
  4199a2:	in     al,0xf6
  4199a4:	dec    ecx
  4199a5:	js     0x4199d1
  4199a7:	push   ecx
  4199a8:	push   ds
  4199a9:	sti    
  4199aa:	arpl   WORD PTR [eax-0x4adfc0fb],si
  4199b0:	push   edx
  4199b1:	xor    BYTE PTR [ecx],dl
  4199b3:	mov    ds:0x58a3fa4,ax
  4199b9:	and    eax,0x1fdf6f47
  4199be:	xchg   esi,eax
  4199bf:	pop    ds
  4199c0:	push   es
  4199c1:	lock in eax,dx
  4199c3:	addr16 push 0x8151d51f
  4199c9:	icebp  
  4199ca:	xchg   edi,eax
  4199cb:	add    BYTE PTR [ebx+0x84dea3d],0x55
  4199d2:	js     0x4199fd
  4199d4:	add    BYTE PTR [ebp-0x50],dl
  4199d7:	mov    cl,0x85
  4199d9:	repnz mov al,0x38
  4199dc:	dec    BYTE PTR [ecx]
  4199de:	jnp    0x419a54
  4199e0:	addr16 inc edi
  4199e2:	(bad)  
  4199e3:	cs push ss
  4199e5:	sub    eax,0x1a80b9c2
  4199ea:	ins    BYTE PTR es:[edi],dx
  4199eb:	inc    ebp
  4199ec:	mov    DWORD PTR [ecx+0x273126a4],edi
  4199f2:	pop    esp
  4199f3:	fld    DWORD PTR [eax]
  4199f5:	xor    DWORD PTR [ebx],edx
  4199f7:	(bad)  
  4199f8:	fcmovb st,st(6)
  4199fa:	js     0x4199e5
  4199fc:	enter  0x2732,0x40
  419a00:	jnp    0x419a18
  419a02:	pop    edx
  419a03:	jp     0x419a2c
  419a05:	fsub   DWORD PTR [edx]
  419a07:	adc    eax,0xeb8305a9
  419a0c:	test   al,0x27
  419a0e:	out    0x6e,eax
  419a10:	inc    edx
  419a11:	in     al,0xb
  419a13:	cmp    BYTE PTR [ebp-0x2c],bl
  419a16:	push   0x6a
  419a18:	mov    BYTE PTR [eax+eiz*1+0x3b],bl
  419a1c:	dec    eax
  419a1d:	sar    BYTE PTR ds:0x1b65d961,cl
  419a23:	cmp    eax,0xa4f1505b
  419a28:	out    dx,al
  419a29:	mov    dl,0x90
  419a2b:	sbb    DWORD PTR [edi-0x7ac4a741],0x51
  419a32:	xor    eax,DWORD PTR [ebx+ebx*4-0x4b9b3ee3]
  419a39:	jmp    0x2131ba8c
  419a3e:	iret   
  419a3f:	inc    eax
  419a40:	pop    eax
  419a41:	and    edi,esi
  419a43:	mov    dl,cl
  419a45:	xor    edi,edi
  419a47:	stos   DWORD PTR es:[edi],eax
  419a48:	jno    0x419a99
  419a4a:	pusha  
  419a4b:	fld    TBYTE PTR [esi+0x18]
  419a4e:	pop    edi
  419a4f:	outs   dx,DWORD PTR ds:[esi]
  419a50:	xor    al,0x84
  419a52:	xchg   ecx,eax
  419a53:	sbb    BYTE PTR [ebp+0x53],0x3f
  419a57:	loop   0x419ac9
  419a59:	lahf   
  419a5a:	inc    ecx
  419a5b:	mov    edx,0x253f0238
  419a60:	xchg   BYTE PTR [eax+0x47],cl
  419a63:	sub    eax,0x184d40e2
  419a68:	xchg   ebp,eax
  419a69:	inc    ebp
  419a6a:	adc    al,0x67
  419a6c:	push   edi
  419a6d:	mov    al,ds:0x6effd113
  419a72:	cwde   
  419a73:	or     esi,DWORD PTR [ebx-0x1841779a]
  419a79:	fisub  WORD PTR [ecx+0x55]
  419a7c:	pop    ebp
  419a7d:	dec    ecx
  419a7e:	jle    0x419aa6
  419a80:	ins    BYTE PTR es:[edi],dx
  419a81:	mov    al,ds:0xa55d3472
  419a86:	aas    
  419a87:	pop    esi
  419a88:	dec    eax
  419a89:	lds    edx,FWORD PTR [ebx+ebp*4]
  419a8c:	adc    eax,0xa9410f96
  419a91:	inc    ebx
  419a92:	sbb    al,0xbb
  419a94:	pop    ss
  419a95:	xchg   edx,eax
  419a96:	mov    ecx,0xa603ecba
  419a9b:	(bad)
  419a9f:	xor    eax,0x1178fb54
  419aa4:	shl    DWORD PTR [eax-0x40],0xb3
  419aa8:	and    eax,0x6f306fc4
  419aad:	jne    0x419a9a
  419aaf:	out    dx,al
  419ab0:	and    BYTE PTR [edi],0xca
  419ab3:	ja     0x419ab5
  419ab5:	and    eax,0xa236606e
  419aba:	cdq    
  419abb:	shl    DWORD PTR [ebx],cl
  419abd:	sbb    DWORD PTR [edx+0x64765490],ebp
  419ac3:	aad    0x8d
  419ac5:	test   eax,0x3a0ffbb3
  419aca:	stos   BYTE PTR es:[edi],al
  419acb:	inc    ebx
  419acc:	call   0x7cf:0x4eab2c00
  419ad3:	(bad)  
  419ad4:	out    0x1d,eax
  419ad6:	jmp    0x419acd
  419ad8:	dec    esp
  419ad9:	mov    esi,0x22340c1e
  419ade:	mov    bh,0x4e
  419ae0:	sub    al,0x3e
  419ae2:	(bad)  
  419ae3:	mov    ds:0xab0e4f54,al
  419ae8:	sahf   
  419ae9:	sbb    eax,0xf02bf133
  419aee:	mov    eax,DWORD PTR [ebp-0x4]
  419af1:	add    esi,edx
  419af3:	cmp    DWORD PTR [eax],esi
  419af5:	mov    eax,DWORD PTR [ebp-0x4]
  419af8:	mov    esi,DWORD PTR [ebp+0x10]
  419afb:	jg     0x41becb
  419b01:	jmp    0x41bebb
  419b06:	push   ecx
  419b07:	bound  esp,QWORD PTR [ebp+0x516ab665]
  419b0d:	jp     0x419af1
  419b0f:	xchg   ebx,eax
  419b10:	js     0x419adb
  419b12:	stos   DWORD PTR es:[edi],eax
  419b13:	pusha  
  419b14:	push   edx
  419b15:	scas   eax,DWORD PTR es:[edi]
  419b16:	inc    edi
  419b17:	fdivr  QWORD PTR [ebx+edi*2+0x18]
  419b1b:	sahf   
  419b1c:	jnp    0x419b99
  419b1e:	xor    eax,DWORD PTR [ebp+0x614dfdae]
  419b24:	or     BYTE PTR [ebx],dh
  419b26:	sub    al,0xbf
  419b28:	call   0xcc1b:0xc9c5b53a
  419b2f:	mov    esi,0x47b406c
  419b34:	call   0x15cd:0x5ca062cd
  419b3b:	addr16 mov al,ds:0x7c08
  419b3f:	rcl    BYTE PTR [ebp+0x17c314ca],cl
  419b45:	jp     0x419af3
  419b47:	jne    0x419b3d
  419b49:	add    DWORD PTR [ecx+0x2628fc1a],ebx
  419b4f:	aad    0x43
  419b51:	sub    BYTE PTR [edi+eax*4-0xd],bh
  419b55:	and    cl,BYTE PTR [edx+0x60253111]
  419b5b:	mov    esi,0x56839567
  419b60:	push   edi
  419b61:	sar    DWORD PTR [edi+0x1c],1
  419b64:	push   ebx
  419b65:	pop    ds
  419b66:	retf   0x7f59
  419b69:	ss (bad) 
  419b6b:	jo     0x419b2d
  419b6d:	or     eax,0xd8648bf9
  419b72:	dec    esi
  419b73:	(bad)  
  419b74:	xor    al,BYTE PTR [edi]
  419b76:	push   edi
  419b77:	ret    
  419b78:	adc    al,0xd9
  419b7a:	mov    ds:0xb075a205,al
  419b7f:	clc    
  419b80:	enter  0x43bd,0xd0
  419b84:	mov    eax,0xff764a34
  419b89:	inc    esi
  419b8a:	jbe    0x419c09
  419b8c:	fwait
  419b8d:	or     al,0x1f
  419b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b90:	in     al,0xa9
  419b92:	in     al,dx
  419b93:	sbb    al,0xc9
  419b95:	std    
  419b96:	and    eax,0xe967539e
  419b9b:	and    BYTE PTR [esp+eax*8+0xeb29bf2],bh
  419ba2:	out    0xb4,al
  419ba4:	push   edx
  419ba5:	sbb    dl,BYTE PTR [ebp-0x69f8d100]
  419bab:	pop    eax
  419bac:	or     DWORD PTR [ecx+0x589fb419],esi
  419bb2:	ss ret 0xdce1
  419bb6:	push   ebp
  419bb7:	xor    BYTE PTR [edx],dh
  419bb9:	fidivr WORD PTR [eax+0x7]
  419bbc:	out    0x4a,al
  419bbe:	dec    esp
  419bbf:	mov    al,ds:0x1fc6044a
  419bc4:	dec    edx
  419bc5:	jg     0x419b9d
  419bc7:	inc    edi
  419bc8:	jne    0x419b95
  419bca:	sahf   
  419bcb:	inc    ecx
  419bcc:	inc    ebp
  419bcd:	push   ebx
  419bce:	jle    0x419c19
  419bd0:	add    ebx,esi
  419bd2:	daa    
  419bd3:	dec    ebx
  419bd4:	push   ebx
  419bd5:	push   cs
  419bd6:	int    0x84
  419bd8:	xchg   esi,eax
  419bd9:	arpl   WORD PTR [esp+ebx*4-0x34],di
  419bdd:	stos   BYTE PTR es:[edi],al
  419bde:	sub    edi,ebp
  419be0:	pop    edi
  419be1:	add    ebx,edi
  419be3:	adc    ebp,DWORD PTR [esi-0x18e02a33]
  419be9:	mov    edi,0x3347331
  419bee:	mov    ch,0x4c
  419bf0:	and    eax,0xf63b065a
  419bf5:	and    dh,BYTE PTR [eax-0x43]
  419bf8:	xchg   BYTE PTR [eax-0x6a0c7bdb],dl
  419bfe:	jle    0x419bdf
  419c00:	stc    
  419c01:	inc    ebx
  419c02:	mov    cs,WORD PTR [edx]
  419c04:	cmp    eax,0xfcf96509
  419c09:	nop
  419c0a:	sub    ch,BYTE PTR [ecx+edi*1+0x3548e04c]
  419c11:	test   DWORD PTR [edx+0x63ee2688],ecx
  419c17:	fidivr DWORD PTR [ebx+0x68]
  419c1a:	sbb    bl,BYTE PTR fs:[eax+ecx*4]
  419c1e:	xlat   BYTE PTR ds:[ebx]
  419c1f:	daa    
  419c20:	out    dx,eax
  419c21:	fmul   QWORD PTR ds:0x1e37bbd8
  419c27:	int3   
  419c28:	(bad)  
  419c29:	(bad)  
  419c2a:	imul   edx,ebp,0xc68ca7fa
  419c30:	push   0xfffffffd
  419c32:	cli    
  419c33:	sub    BYTE PTR [esi-0x4c],ah
  419c36:	mov    dh,BYTE PTR [esi-0x25]
  419c39:	inc    esp
  419c3a:	adc    DWORD PTR [ebx-0x29],eax
  419c3d:	jmp    0x419cb8
  419c3f:	loope  0x419bfb
  419c41:	push   cs
  419c42:	sub    bl,BYTE PTR [eax-0x6761bd66]
  419c48:	dec    edx
  419c49:	mov    esi,0x50d956a0
  419c4e:	je     0x419c10
  419c50:	out    0x1,al
  419c52:	inc    edi
  419c53:	int    0x15
  419c55:	or     BYTE PTR [ebx+ebx*4],0xd4
  419c59:	mov    ?,WORD PTR [eax]
  419c5b:	inc    edi
  419c5c:	mov    ebx,0xde4de6bc
  419c61:	loopne 0x419ca0
  419c63:	push   cs
  419c64:	ss pop ebx
  419c66:	sbb    edx,ebp
  419c68:	push   edi
  419c69:	(bad)  
  419c6a:	shr    DWORD PTR [ecx-0x57],cl
  419c6d:	and    ebx,DWORD PTR [ebx-0x79]
  419c70:	fsub   QWORD PTR [eax+0x140d791b]
  419c76:	sub    DWORD PTR [ebx+0xe0678a1],esi
  419c7c:	jmp    0x419cc2
  419c7e:	mov    esp,0xbd32ac81
  419c83:	not    DWORD PTR [edx+edx*8-0x31aaa2b6]
  419c8a:	les    ecx,FWORD PTR [esi]
  419c8c:	cdq    
  419c8d:	in     eax,dx
  419c8e:	mov    ds:0x7082e667,al
  419c93:	xchg   edx,eax
  419c94:	js     0x419c61
  419c96:	adc    al,0x75
  419c98:	fucomp st(0)
  419c9a:	cmp    ah,BYTE PTR [ecx+0x54]
  419c9d:	fidivr DWORD PTR [ebp+0xc2c9ff5]
  419ca3:	retf   
  419ca4:	push   edx
  419ca5:	mov    edx,0xc9a4ae25
  419caa:	jg     0x419ca8
  419cac:	xor    BYTE PTR [edi+edi*4-0x5f],al
  419cb0:	xchg   esp,eax
  419cb1:	or     DWORD PTR [ecx+0x24],ebp
  419cb4:	mov    ebx,0x1b776f7c
  419cb9:	nop
  419cba:	mov    cl,0x9d
  419cbc:	cs mov ah,0x4d
  419cbf:	pop    esp
  419cc0:	sbb    BYTE PTR [edi],0x4e
  419cc3:	jle    0x419ce8
  419cc5:	jmp    0x419cf3
  419cc7:	sbb    ch,BYTE PTR [eax-0x2256f9e3]
  419ccd:	xchg   eax,ebp
  419ccf:	dec    edi
  419cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cd1:	mov    ss,WORD PTR [esi-0x61f0f777]
  419cd7:	fisttp DWORD PTR [ebx]
  419cd9:	out    dx,al
  419cda:	in     al,dx
  419cdb:	fnstsw ax
  419cdd:	and    eax,0x174c0554
  419ce2:	in     al,dx
  419ce3:	test   al,0x3
  419ce5:	adc    eax,0x751e23ca
  419cea:	jmp    0x3742:0x88d57da0
  419cf1:	xchg   ebp,eax
  419cf2:	and    ah,BYTE PTR [esi-0x727494fd]
  419cf8:	adc    esi,esi
  419cfa:	cmp    bl,BYTE PTR [edi+eiz*8-0x1f]
  419cfe:	mov    bl,BYTE PTR [eax-0x6c]
  419d01:	and    DWORD PTR [esi+0x6d009a9b],edi
  419d07:	std    
  419d08:	mov    ecx,0xee5a6398
  419d0d:	jmp    0x419d26
  419d0f:	mov    al,ds:0xe2c390d
  419d14:	aad    0xf2
  419d16:	fsub   QWORD PTR [eax+ecx*1+0x6]
  419d1a:	sub    eax,0x4956143b
  419d1f:	popf   
  419d20:	or     esi,DWORD PTR [edx+0x13ea3e29]
  419d26:	(bad)  
  419d27:	idiv   BYTE PTR [ecx-0x33]
  419d2a:	sbb    BYTE PTR [ecx],cl
  419d2c:	xchg   esp,esi
  419d2e:	mov    dl,0x14
  419d30:	inc    ecx
  419d31:	outs   dx,DWORD PTR ds:[esi]
  419d32:	xor    eax,0xa3b7924c
  419d37:	mov    DWORD PTR cs:[esi],ecx
  419d3a:	arpl   WORD PTR [eax+0x4b],sp
  419d3d:	jnp    0x419ce8
  419d3f:	push   0xffffff90
  419d41:	in     al,dx
  419d42:	pushf  
  419d43:	fdivr  DWORD PTR [edi]
  419d45:	arpl   WORD PTR [ebp-0xe],dx
  419d48:	shr    DWORD PTR [ebp+0x56],cl
  419d4b:	jno    0x419cf4
  419d4d:	mov    edx,0xc7bbecae
  419d52:	xor    eax,0x73d86735
  419d57:	or     al,0x4c
  419d59:	mov    ch,dh
  419d5b:	add    DWORD PTR [eax+0x2236c7b3],ecx
  419d61:	std    
  419d62:	repz push esp
  419d64:	pop    ds
  419d65:	retf   0xd16d
  419d68:	shr    BYTE PTR [ebp-0x356ed8f],cl
  419d6e:	jmp    0xb05d6831
  419d73:	sub    al,0x5b
  419d75:	dec    ebx
  419d76:	in     eax,0x7f
  419d78:	inc    ebp
  419d79:	iret   
  419d7a:	pop    ecx
  419d7b:	repnz popf 
  419d7d:	aas    
  419d7e:	stc    
  419d7f:	pushf  
  419d80:	adc    bh,dl
  419d82:	inc    esi
  419d83:	mov    ?,WORD PTR [ebx+0x13fc262f]
  419d89:	fwait
  419d8a:	loopne 0x419db9
  419d8c:	dec    esi
  419d8d:	and    eax,0x78034767
  419d92:	je     0x419dcb
  419d94:	or     eax,0x82c2928
  419d99:	retf   0x68
  419d9c:	retf   0x4dd
  419d9f:	jg     0x419d31
  419da1:	cmp    cl,BYTE PTR [edi]
  419da3:	hlt    
  419da4:	(bad)  
  419da5:	xor    BYTE PTR [ecx+0x2f76ca22],cl
  419dab:	imul   esp,DWORD PTR [edi+0x1bfe8ef9],0x7b315c53
  419db5:	pop    esp
  419db6:	sub    dl,BYTE PTR [esi+0x61b35774]
  419dbc:	popf   
  419dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dbe:	fnstcw WORD PTR [edx-0x6093c5c3]
  419dc4:	jb     0x419d85
  419dc6:	and    al,0x99
  419dc8:	inc    ecx
  419dc9:	rcr    edi,0x8a
  419dcc:	scas   al,BYTE PTR es:[edi]
  419dcd:	mov    esi,0xb84c790a
  419dd2:	cmp    esi,DWORD PTR ds:[ecx+ebx*2-0x52]
  419dd7:	and    al,0x46
  419dd9:	test   BYTE PTR [ecx],bl
  419ddb:	test   BYTE PTR [ebx-0x64],bl
  419dde:	data16 mov dh,0xeb
  419de1:	cmp    BYTE PTR [esi-0x40fb3f47],0xaa
  419de8:	mov    edx,0x4c371d39
  419ded:	mov    eax,0x950e74a0
  419df2:	mov    edx,0xd455e75a
  419df7:	jmp    DWORD PTR [ebp-0x1c]
  419dfa:	ret    
  419dfb:	mov    al,0xef
  419dfd:	lds    edx,FWORD PTR [edx+esi*4-0x9]
  419e01:	adc    edi,0xffffffb3
  419e04:	stos   BYTE PTR es:[edi],al
  419e05:	push   ds
  419e06:	mov    al,ds:0xe23b5027
  419e0b:	test   BYTE PTR [ebx-0x5e],cl
  419e0e:	xor    edi,DWORD PTR [eax]
  419e10:	(bad)  
  419e11:	xor    al,0xd8
  419e13:	mov    bh,0x3f
  419e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e16:	jmp    DWORD PTR [ebp+0x27df7aa]
  419e1c:	mov    eax,DWORD PTR [ecx-0x23]
  419e1f:	mov    ds:0x2530aa52,eax
  419e24:	or     DWORD PTR [ebp-0x28],eax
  419e27:	out    dx,al
  419e28:	retf   0xe30e
  419e2b:	xchg   esp,eax
  419e2c:	jae    0x419deb
  419e2e:	cmc    
  419e2f:	(bad)  
  419e30:	(bad)  
  419e31:	(bad)  [ecx+ebx*4-0x77]
  419e35:	cmp    BYTE PTR [eax+0x785c31b5],0xf7
  419e3c:	das    
  419e3d:	pusha  
  419e3e:	loope  0x419e0a
  419e40:	add    BYTE PTR [ebx-0xfffa7e8],0xbd
  419e47:	in     eax,0xe7
  419e49:	push   es
  419e4a:	lahf   
  419e4b:	mov    ebx,0xb186eaf1
  419e50:	push   ebx
  419e51:	mov    ds:0xcac7d6b0,al
  419e56:	retf   
  419e57:	aad    0x7f
  419e59:	scas   al,BYTE PTR es:[edi]
  419e5a:	mov    ah,0xa7
  419e5c:	dec    ecx
  419e5d:	(bad)  
  419e5f:	enter  0xdec7,0x3d
  419e63:	and    cl,0x9c
  419e66:	and    DWORD PTR [edi+0x22],esp
  419e69:	push   0xffffffa7
  419e6b:	adc    dl,BYTE PTR [edi+ecx*2]
  419e6e:	pop    edi
  419e6f:	push   ss
  419e70:	out    dx,eax
  419e71:	scas   al,BYTE PTR es:[edi]
  419e72:	or     eax,0xfd4ae0e0
  419e77:	dec    esp
  419e78:	test   eax,0x842d40dd
  419e7d:	xor    bh,BYTE PTR fs:[eax-0x5c]
  419e81:	ins    DWORD PTR es:[edi],dx
  419e82:	sbb    BYTE PTR [esi+0x3b],bh
  419e85:	or     ah,ch
  419e87:	dec    eax
  419e88:	hlt    
  419e89:	jns    0x419e95
  419e8b:	out    dx,eax
  419e8c:	pop    esp
  419e8d:	aad    0x19
  419e8f:	aad    0x7
  419e91:	(bad)  
  419e92:	mov    ecx,0x93340d68
  419e97:	jns    0x419ede
  419e99:	pop    edx
  419e9a:	or     bl,BYTE PTR [ebx-0x5aebabaf]
  419ea0:	add    DWORD PTR [ebp+ecx*4-0x49],0x6b
  419ea5:	ins    DWORD PTR es:[edi],dx
  419ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea7:	and    al,0xfb
  419ea9:	pushf  
  419eaa:	jmp    0x69b4:0x7bc4ed51
  419eb1:	xchg   ebx,eax
  419eb2:	fcmovnu st,st(6)
  419eb4:	inc    ebp
  419eb5:	jb     0x419e64
  419eb7:	mov    ds:0xdbc94f38,al
  419ebc:	sbb    edi,DWORD PTR [eax+ebx*1-0x28e8fc2a]
  419ec3:	adc    ebp,DWORD PTR [edi-0x5]
  419ec6:	or     BYTE PTR [esi],0xe8
  419ec9:	jmp    0xefd3e6b
  419ece:	push   eax
  419ecf:	push   edi
  419ed0:	(bad)  [esi+eiz*1-0x27]
  419ed4:	or     bl,BYTE PTR [edi-0x4cff9e74]
  419eda:	pop    eax
  419edb:	pop    edi
  419edc:	or     ebx,DWORD PTR ds:0x265683d7
  419ee2:	and    cl,BYTE PTR [edx+ebp*8+0x70422513]
  419ee9:	aaa    
  419eea:	in     al,dx
  419eeb:	mov    eax,0x5cac5be0
  419ef0:	jl     0x419e90
  419ef2:	scas   eax,DWORD PTR es:[edi]
  419ef3:	xchg   esp,eax
  419ef4:	jne    0x419f04
  419ef6:	mov    ebp,0xe15824dc
  419efb:	sbb    cl,BYTE PTR [edx-0x53eee5b4]
  419f01:	addr16 test eax,0x72bea88
  419f07:	jo     0x419f85
  419f09:	aad    0x1c
  419f0b:	mov    BYTE PTR [edi+0x18],dl
  419f0e:	ficomp DWORD PTR [ebp-0x5]
  419f11:	cmovns esi,DWORD PTR [edx]
  419f14:	imul   edx,esi,0x5c
  419f17:	jne    0x419eb9
  419f19:	iret   
  419f1a:	push   edi
  419f1b:	jp     0x419ec0
  419f1d:	inc    ebp
  419f1e:	inc    esp
  419f1f:	outs   dx,DWORD PTR ds:[esi]
  419f20:	jmp    0x4571834d
  419f25:	xor    edi,DWORD PTR [edi]
  419f27:	mov    dl,0xe8
  419f29:	adc    eax,0xd5824056
  419f2e:	sti    
  419f2f:	pop    edi
  419f30:	cmp    cl,BYTE PTR [ecx+0x7e2c9a67]
  419f36:	mov    eax,ds:0x70f64538
  419f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f3c:	leave  
  419f3d:	adc    eax,0xcf261e69
  419f42:	scas   eax,DWORD PTR es:[edi]
  419f43:	mov    BYTE PTR [ecx-0x129552d6],dh
  419f49:	fcmove st,st(3)
  419f4b:	xchg   edx,eax
  419f4c:	xchg   ebp,eax
  419f4d:	push   0x3df0440
  419f52:	test   eax,0x25db1698
  419f57:	cmp    BYTE PTR [edx+eiz*1],dh
  419f5a:	pusha  
  419f5b:	pop    esi
  419f5c:	jo     0x419efb
  419f5e:	xchg   esp,eax
  419f5f:	lock retf 
  419f61:	xor    DWORD PTR [ebx-0x5d],ecx
  419f64:	loope  0x419f3e
  419f66:	lods   eax,DWORD PTR ds:[esi]
  419f67:	pusha  
  419f68:	pop    ds
  419f69:	stos   DWORD PTR es:[edi],eax
  419f6a:	xchg   ecx,eax
  419f6b:	addr16 and eax,0x5dc0e8e0
  419f71:	cld    
  419f72:	xor    al,0x78
  419f74:	jecxz  0x419ff1
  419f76:	jp     0x833f5620
  419f7c:	jmp    0xb817:0x8e2d45dd
  419f83:	add    eax,0x149c7da8
  419f88:	call   0x9fe8:0xe78060e2
  419f8f:	or     eax,0x93e4fdc1
  419f94:	lods   eax,DWORD PTR ds:[esi]
  419f95:	jl     0x419f1a
  419f97:	dec    ebx
  419f98:	sub    DWORD PTR [ebp-0x133a8b8f],esp
  419f9e:	int3   
  419f9f:	pop    esp
  419fa0:	cwde   
  419fa1:	not    DWORD PTR [ebx+0x53]
  419fa4:	mov    ah,0x90
  419fa6:	sbb    al,0x30
  419fa8:	fisttp DWORD PTR [ebp-0x43]
  419fab:	repz jmp 0xfd7c:0x45374ed5
  419fb3:	in     al,0x20
  419fb5:	or     BYTE PTR [ebx+esi*2],cl
  419fb8:	pop    ebx
  419fb9:	dec    ebx
  419fba:	jno    0x419f86
  419fbc:	daa    
  419fbd:	sbb    BYTE PTR [ebx],ch
  419fbf:	push   es
  419fc0:	dec    ecx
  419fc1:	fld    QWORD PTR [esi+0x6c]
  419fc4:	sbb    eax,0xeac1a6bb
  419fc9:	cdq    
  419fca:	jo     0x41a000
  419fcc:	mov    ch,0xe4
  419fce:	addr16 jmp 0xa51:0x7772419c
  419fd6:	xchg   esp,eax
  419fd7:	int3   
  419fd8:	sub    BYTE PTR [esi-0x169944bd],cl
  419fde:	mov    al,bl
  419fe0:	jle    0x419f78
  419fe2:	xchg   edi,eax
  419fe3:	retf   0x4ca6
  419fe6:	xchg   ebx,eax
  419fe7:	jnp    0x419fec
  419fe9:	xor    eax,0xa134c98c
  419fee:	and    eax,0xf29218bb
  419ff3:	and    dl,0xd3
  419ff6:	out    0x8b,al
  419ff8:	pusha  
  419ff9:	jecxz  0x41a06d
  419ffb:	mov    ds:0x2fff11ca,al
  41a000:	(bad)  
  41a001:	pop    edi
  41a002:	js     0x419fd0
  41a004:	jg     0x419f91
  41a006:	repnz inc eax
  41a008:	adc    DWORD PTR [ebp+0x56],0xd9cc6f5a
  41a00f:	and    eax,0x76be4fcf
  41a014:	fnstcw WORD PTR [edx*1+0x39e4d828]
  41a01b:	inc    ebp
  41a01c:	add    DWORD PTR [esi-0x6e],edx
  41a01f:	sar    ch,cl
  41a021:	mov    ds:0x5fb1f798,eax
  41a026:	mov    edx,0x2bcaa68c
  41a02b:	push   edx
  41a02c:	sti    
  41a02d:	and    ebx,ecx
  41a02f:	xor    DWORD PTR ds:0xee7fb777,ecx
  41a035:	inc    edi
  41a036:	jnp    0x41a0a9
  41a038:	call   DWORD PTR es:[edx]
  41a03b:	dec    ebp
  41a03c:	daa    
  41a03d:	push   esp
  41a03e:	or     al,0x4f
  41a040:	pop    eax
  41a041:	push   esp
  41a042:	or     BYTE PTR [edi-0x14],bh
  41a045:	xor    bh,BYTE PTR [ebx-0x20]
  41a048:	ds mov al,0xf4
  41a04b:	scas   al,BYTE PTR es:[edi]
  41a04c:	stc    
  41a04d:	dec    edi
  41a04e:	jp     0x41a09f
  41a050:	adc    eax,0x36c93433
  41a055:	fadd   st(1),st
  41a057:	mov    dl,0xcd
  41a059:	call   0x30c91de7
  41a05e:	xor    al,0x12
  41a060:	adc    BYTE PTR [esi-0x48458e70],dh
  41a066:	push   edi
  41a067:	stos   BYTE PTR es:[edi],al
  41a068:	arpl   WORD PTR [ebx+0x2a43bbab],di
  41a06e:	add    al,0x24
  41a070:	jmp    0x9f27c018
  41a075:	fsubp  st(5),st
  41a077:	shr    BYTE PTR ds:0x9ff5dd9f,0x18
  41a07e:	mov    bh,0x48
  41a080:	mov    ch,0x26
  41a082:	ss mov esi,0x10eaa6e0
  41a088:	sti    
  41a089:	addr16 cmp ecx,edi
  41a08c:	mov    ch,0xd2
  41a08e:	int3   
  41a08f:	cmp    eax,0x6bac0241
  41a094:	push   esp
  41a095:	jp     0x41a044
  41a097:	jb     0x41a03d
  41a099:	xchg   esi,eax
  41a09a:	push   0xfffffff1
  41a09c:	lods   eax,DWORD PTR ds:[esi]
  41a09d:	sbb    ebx,ebp
  41a09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a0:	mov    BYTE PTR [edi+0x3fdec64f],bh
  41a0a6:	push   ss
  41a0a7:	repnz retf 0xfe93
  41a0ab:	lds    ebx,FWORD PTR [edx-0x7d]
  41a0ae:	test   BYTE PTR [ebp-0x4c1761ff],0x2d
  41a0b5:	retf   
  41a0b6:	js     0x41a0c8
  41a0b8:	jg     0x41a0f6
  41a0ba:	push   es
  41a0bb:	cs aas 
  41a0bd:	or     eax,0x241c9332
  41a0c2:	sbb    al,0xb1
  41a0c4:	xchg   BYTE PTR [ebp+0xb61120],ah
  41a0ca:	dec    ebp
  41a0cb:	scas   eax,DWORD PTR es:[edi]
  41a0cc:	inc    ebp
  41a0cd:	xchg   ecx,eax
  41a0ce:	dec    edi
  41a0cf:	pop    ebp
  41a0d0:	sbb    DWORD PTR [edi+ebp*2+0x6],edx
  41a0d4:	xor    BYTE PTR [ecx+0x50],dh
  41a0d7:	mov    ecx,ds
  41a0d9:	int3   
  41a0da:	mov    esi,0x5f712aaa
  41a0df:	xchg   ecx,eax
  41a0e0:	push   ebp
  41a0e1:	fild   WORD PTR ds:0xf16862ce
  41a0e7:	js     0x41a13c
  41a0e9:	mov    BYTE PTR [edx-0x532bf173],al
  41a0ef:	sahf   
  41a0f0:	into   
  41a0f1:	jmp    0x16270f55
  41a0f6:	mov    eax,0xbf3dcf4c
  41a0fb:	xor    ch,BYTE PTR fs:[eax+0x24]
  41a0ff:	jl     0x41a12c
  41a101:	xchg   esi,eax
  41a102:	pop    edx
  41a103:	cld    
  41a104:	iret   
  41a105:	scas   eax,DWORD PTR es:[edi]
  41a106:	xchg   esi,eax
  41a107:	addr16 mov esp,0xa77c1e31
  41a10d:	dec    edi
  41a10e:	arpl   WORD PTR [edi],si
  41a110:	mov    edi,0xc4707de7
  41a115:	mov    DWORD PTR cs:[ecx],ebx
  41a118:	add    ah,al
  41a11a:	pushf  
  41a11b:	aaa    
  41a11c:	mov    ah,0xd3
  41a11e:	int3   
  41a11f:	and    al,0xde
  41a121:	out    0x11,al
  41a123:	cmp    BYTE PTR [ecx],ch
  41a125:	add    eax,0x5b2ad76b
  41a12a:	jle    0x41a0ac
  41a12c:	xor    bh,BYTE PTR [edx+0x6472e067]
  41a132:	(bad)  
  41a133:	fwait
  41a134:	(bad)  
  41a135:	scas   al,BYTE PTR es:[edi]
  41a136:	mov    dl,0x5a
  41a138:	icebp  
  41a139:	xchg   ebx,eax
  41a13a:	aad    0xaf
  41a13c:	push   cs
  41a13d:	aaa    
  41a13e:	push   0xffffff8f
  41a140:	mov    dl,0x27
  41a142:	test   DWORD PTR [eax],ebp
  41a144:	hlt    
  41a145:	dec    esp
  41a146:	(bad)  
  41a147:	out    dx,eax
  41a148:	aam    0x4e
  41a14a:	and    eax,0x9dbbaae0
  41a14f:	aad    0xaf
  41a151:	(bad)  
  41a152:	repnz mov al,ds:0x3d97b805
  41a158:	adc    DWORD PTR ds:0xd2f4f006,ebx
  41a15e:	pop    ds
  41a15f:	xor    BYTE PTR [ebx+0x64],bl
  41a162:	inc    edi
  41a163:	ficomp WORD PTR [eax]
  41a165:	mov    ah,0x32
  41a167:	sub    DWORD PTR [ebx],eax
  41a169:	rcr    DWORD PTR [esi-0x1a5dc8ed],1
  41a16f:	call   0x1e4c:0x1ade90a5
  41a176:	dec    esi
  41a177:	xor    cl,al
  41a179:	out    dx,eax
  41a17a:	jmp    FWORD PTR [ebx+0x6b]
  41a17d:	jne    0x41a118
  41a17f:	pop    ecx
  41a180:	pop    ebp
  41a181:	(bad)  
  41a182:	push   ecx
  41a183:	jno    0x41a1b1
  41a185:	mov    ecx,0xbe3b88fe
  41a18a:	inc    esp
  41a18b:	xor    DWORD PTR [edx+0x6dec87f7],0xcaf8d78f
  41a195:	or     BYTE PTR [ecx+ecx*2],cl
  41a198:	xor    DWORD PTR [ebx],ebx
  41a19a:	test   al,0xd4
  41a19c:	adc    edx,DWORD PTR [eax+eax*1]
  41a19f:	hlt    
  41a1a0:	sub    edi,DWORD PTR [edx+0x22248977]
  41a1a6:	push   ss
  41a1a7:	test   al,0xe2
  41a1a9:	adc    BYTE PTR [edx],al
  41a1ab:	js     0x41a16f
  41a1ad:	dec    ecx
  41a1ae:	adc    BYTE PTR [edi],ch
  41a1b0:	push   gs
  41a1b2:	jl     0x41a1e9
  41a1b4:	sub    ebx,DWORD PTR [ebx-0x5dffd0bb]
  41a1ba:	jnp    0x41a1c1
  41a1bc:	mov    dl,0xa3
  41a1be:	mov    eax,DWORD PTR [eax+0xa16e0c6]
  41a1c4:	push   ecx
  41a1c5:	in     al,dx
  41a1c6:	xor    DWORD PTR [edi+0x4d],ebx
  41a1c9:	adc    eax,0xf5aabf1
  41a1ce:	ins    DWORD PTR es:[edi],dx
  41a1cf:	sub    BYTE PTR [eax],ch
  41a1d1:	(bad)  
  41a1d2:	mov    cl,0x57
  41a1d4:	fwait
  41a1d5:	int3   
  41a1d6:	cdq    
  41a1d7:	scas   al,BYTE PTR es:[edi]
  41a1d8:	pop    es
  41a1d9:	in     al,0xa5
  41a1db:	js     0x41a1a1
  41a1dd:	add    edi,ecx
  41a1df:	inc    edx
  41a1e0:	pop    eax
  41a1e1:	leave  
  41a1e2:	add    ecx,ebp
  41a1e4:	aaa    
  41a1e5:	(bad)  
  41a1e6:	push   edx
  41a1e7:	xlat   BYTE PTR ds:[ebx]
  41a1e8:	push   ds
  41a1e9:	sbb    ebx,0x43
  41a1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ed:	pop    es
  41a1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ef:	cmp    ebp,edi
  41a1f1:	lods   eax,DWORD PTR ds:[esi]
  41a1f2:	xchg   BYTE PTR [ecx+0x4464adab],cl
  41a1f8:	add    DWORD PTR [ebx+0x73],edx
  41a1fb:	loopne 0x41a228
  41a1fd:	ret    0xd26f
  41a200:	out    0x1a,al
  41a202:	mov    esp,0xabebcaa8
  41a207:	ja     0x41a19e
  41a209:	cmp    eax,0xbf421cda
  41a20e:	jb     0x41a1a3
  41a210:	sub    al,0xd5
  41a212:	int3   
  41a213:	ins    BYTE PTR es:[edi],dx
  41a214:	inc    esp
  41a215:	in     al,0x8e
  41a217:	dec    edi
  41a218:	rcl    bl,1
  41a21a:	cmp    ch,dh
  41a21c:	fidivr DWORD PTR [edx]
  41a21e:	jnp    0x41a294
  41a220:	mov    bh,0x74
  41a222:	aas    
  41a223:	push   ss
  41a224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a225:	mov    WORD PTR [edi],ss
  41a227:	xor    DWORD PTR [esi+0x3b21c76f],esi
  41a22d:	jmp    0x41a1f8
  41a22f:	ja     0x41a25a
  41a231:	xor    BYTE PTR [ebx+esi*1-0x6],al
  41a235:	sti    
  41a236:	call   ebp
  41a238:	pop    eax
  41a239:	mov    dh,0x48
  41a23b:	aad    0xea
  41a23d:	adc    esi,DWORD PTR [ebx-0x3cb96763]
  41a243:	mov    ecx,0xd2ebb19c
  41a248:	jecxz  0x41a290
  41a24a:	mov    DWORD PTR [ecx-0x4f372658],esi
  41a250:	loope  0x41a292
  41a252:	mov    esi,0xa7473bf6
  41a257:	in     al,0x6f
  41a259:	mov    ebx,0x85eae781
  41a25e:	and    BYTE PTR [edi+0x6d],cl
  41a261:	test   DWORD PTR [esi+0x7f],ebp
  41a264:	in     al,0xb3
  41a266:	adc    BYTE PTR [edi],0x5d
  41a269:	outs   dx,BYTE PTR ds:[esi]
  41a26a:	mov    ds:0x553968a3,al
  41a26f:	cmc    
  41a270:	leave  
  41a271:	nop
  41a272:	ins    BYTE PTR es:[edi],dx
  41a273:	adc    DWORD PTR [ebp+0x1f987c3c],edx
  41a279:	xchg   edx,eax
  41a27a:	sub    cl,bh
  41a27c:	out    0x7f,eax
  41a27e:	push   ebx
  41a27f:	or     dl,BYTE PTR [ecx+0x661dbce8]
  41a285:	cmp    ebp,0xfffffffd
  41a288:	call   0xbebb:0x9f8481a0
  41a28f:	cmp    eax,0x613bb8e7
  41a294:	add    eax,0xbf32de67
  41a299:	mul    esp
  41a29b:	(bad)  
  41a29c:	scas   al,BYTE PTR es:[edi]
  41a29d:	shl    DWORD PTR [ecx-0x60],1
  41a2a0:	push   cs
  41a2a1:	lock dec BYTE PTR [ebp+0x50]
  41a2a5:	fiadd  DWORD PTR [ecx-0x7d]
  41a2a8:	cmp    esi,eax
  41a2aa:	mov    al,0x72
  41a2ac:	ret    0x6c02
  41a2af:	call   0x6272:0x8860517c
  41a2b6:	and    bh,BYTE PTR [eax+ebp*1+0x70]
  41a2ba:	pop    esi
  41a2bb:	adc    BYTE PTR [eax+eax*1],ah
  41a2be:	inc    edi
  41a2bf:	aad    0xef
  41a2c1:	jno    0x41a24a
  41a2c3:	aam    0x9b
  41a2c5:	push   edx
  41a2c6:	or     ah,BYTE PTR [ebp+0xb04f9ca]
  41a2cc:	or     al,0x27
  41a2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2cf:	add    bh,BYTE PTR [edi+0x59]
  41a2d2:	out    0xad,al
  41a2d4:	in     al,0xb3
  41a2d6:	mov    ?,WORD PTR [eax]
  41a2d8:	lahf   
  41a2d9:	inc    ebx
  41a2da:	test   BYTE PTR ds:0xd17b4a2e,ah
  41a2e0:	dec    ebp
  41a2e1:	sbb    eax,0x7685cb48
  41a2e6:	jp     0x41a2d9
  41a2e8:	cdq    
  41a2e9:	and    al,0x1d
  41a2eb:	xchg   esi,eax
  41a2ec:	out    0x12,al
  41a2ee:	(bad)  
  41a2ef:	or     al,0x15
  41a2f1:	les    ebp,FWORD PTR [ebp+0x2104d89b]
  41a2f7:	test   eax,0x73651d4e
  41a2fc:	in     al,0xa4
  41a2fe:	stos   DWORD PTR es:[edi],eax
  41a2ff:	add    eax,0x66238c5a
  41a304:	jmp    0x41a347
  41a306:	pop    esi
  41a307:	xchg   DWORD PTR [edi-0x4c],eax
  41a30a:	clc    
  41a30b:	in     eax,dx
  41a30c:	mov    ds:0x849038f4,eax
  41a311:	shr    DWORD PTR [ebx-0x4d],0x79
  41a315:	mov    BYTE PTR [esi+0x7e],ch
  41a318:	popf   
  41a319:	cmovge ebp,DWORD PTR [eax+0x70]
  41a31d:	xchg   BYTE PTR [edx+0x13cbd0d6],dh
  41a323:	xor    bh,bh
  41a325:	cmp    DWORD PTR [ebx+0x7],ebp
  41a328:	out    dx,al
  41a329:	sar    BYTE PTR [ebx+eax*8],0x39
  41a32d:	fisubr DWORD PTR [ebx-0x48cfa692]
  41a333:	mov    DWORD PTR [esi+0x607a34d8],ebp
  41a339:	cmp    eax,DWORD PTR [eax*2-0x491ac815]
  41a340:	es stc 
  41a342:	fistp  WORD PTR [ecx+0x35]
  41a345:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a347:	ins    BYTE PTR es:[edi],dx
  41a348:	hlt    
  41a349:	cmp    ebp,eax
  41a34b:	fucomip st,st(7)
  41a34d:	rcr    DWORD PTR [esi-0x61],cl
  41a350:	ret    
  41a351:	push   ecx
  41a352:	push   0x55
  41a354:	sbb    ch,bl
  41a356:	sbb    DWORD PTR [esi],0x4d
  41a359:	clc    
  41a35a:	cli    
  41a35b:	xchg   edi,eax
  41a35c:	adc    esp,DWORD PTR [eax-0x6a26bee6]
  41a362:	sahf   
  41a363:	add    ah,BYTE PTR [ebx+0x70]
  41a366:	sub    bh,BYTE PTR [edi+0x7]
  41a369:	scas   eax,DWORD PTR es:[edi]
  41a36a:	das    
  41a36b:	ins    BYTE PTR es:[edi],dx
  41a36c:	rcr    BYTE PTR [esi-0x4b],0x4a
  41a370:	mov    esi,0xd6a4bdf8
  41a375:	ins    BYTE PTR es:[edi],dx
  41a376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a377:	mov    WORD PTR [ecx],es
  41a379:	fcom   QWORD PTR [eax-0x70]
  41a37c:	xchg   ch,bh
  41a37e:	fiadd  WORD PTR [edx+0x5]
  41a381:	out    0xb2,al
  41a383:	jle    0x41a3fa
  41a385:	xchg   ecx,eax
  41a386:	lds    ebx,FWORD PTR [eax-0x2b]
  41a389:	test   eax,0xccd69624
  41a38e:	jle    0x41a336
  41a390:	push   ecx
  41a391:	jne    0x41a36a
  41a393:	test   al,0xbc
  41a395:	dec    ecx
  41a396:	leave  
  41a397:	repnz das 
  41a399:	push   eax
  41a39a:	mov    cl,0x37
  41a39c:	lds    esi,FWORD PTR [eax+0x1acc2434]
  41a3a2:	mov    eax,0xf54c9471
  41a3a7:	test   eax,0xb7dec1d6
  41a3ac:	add    al,0x44
  41a3ae:	(bad)  
  41a3af:	push   ds
  41a3b0:	dec    edx
  41a3b1:	int    0x71
  41a3b3:	xchg   BYTE PTR [ebx],bh
  41a3b5:	ret    0xd635
  41a3b8:	xor    dl,BYTE PTR [ecx+0x6fa8c367]
  41a3be:	es gs jnp 0x41a3f2
  41a3c2:	jnp    0x41a39f
  41a3c4:	shr    bl,0x19
  41a3c7:	push   cs
  41a3c8:	push   cs
  41a3c9:	popf   
  41a3ca:	cwde   
  41a3cb:	ins    BYTE PTR es:[edi],dx
  41a3cc:	push   ds
  41a3cd:	in     eax,dx
  41a3ce:	fcom   DWORD PTR [edi]
  41a3d0:	push   edi
  41a3d1:	jle    0x41a40e
  41a3d3:	push   ebp
  41a3d4:	lahf   
  41a3d5:	xchg   ebx,eax
  41a3d6:	imul   ebp,DWORD PTR gs:[ebx+0x5b1fc024],0x2d
  41a3de:	jmp    0x41a38e
  41a3e0:	out    0x43,eax
  41a3e2:	jge    0x41a457
  41a3e4:	shl    DWORD PTR ds:0x903c3ce7,0xa
  41a3eb:	mov    ecx,0xd1fc91c0
  41a3f0:	xchg   ebx,eax
  41a3f1:	ja     0x41a3dc
  41a3f3:	ret    0x5936
  41a3f6:	inc    ebp
  41a3f7:	push   ecx
  41a3f8:	out    0xc6,eax
  41a3fa:	popa   
  41a3fb:	jns    0x41a46b
  41a3fd:	aad    0xe0
  41a3ff:	arpl   WORD PTR [edx-0x415a9f15],cx
  41a405:	pop    edi
  41a406:	rcr    DWORD PTR [ecx+0x5eafaa49],0xc6
  41a40d:	adc    esi,ecx
  41a40f:	sbb    al,0xab
  41a411:	sub    eax,0xcfa1ffd1
  41a416:	push   ds
  41a417:	dec    eax
  41a418:	mov    ch,0x64
  41a41a:	sbb    ah,BYTE PTR [ebx-0x33227f34]
  41a420:	mov    BYTE PTR cs:[ecx],dh
  41a423:	jl     0x41a434
  41a425:	inc    edi
  41a426:	adc    DWORD PTR [edi],eax
  41a428:	push   es
  41a429:	xor    eax,0x187cbd8e
  41a42e:	jae    0x41a3c5
  41a430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a431:	loop   0x41a418
  41a433:	test   al,0xe6
  41a435:	add    al,0xe7
  41a437:	adc    edx,esi
  41a439:	lods   eax,DWORD PTR ds:[esi]
  41a43a:	push   ecx
  41a43b:	xchg   ebp,eax
  41a43c:	daa    
  41a43d:	and    eax,esi
  41a43f:	out    dx,al
  41a440:	pop    ss
  41a441:	iret   
  41a442:	cwde   
  41a443:	mov    cl,0xaa
  41a445:	cmp    DWORD PTR [ecx],0xffffffce
  41a448:	out    dx,al
  41a449:	outs   dx,BYTE PTR ds:[esi]
  41a44a:	dec    eax
  41a44b:	pop    esp
  41a44c:	xor    edi,DWORD PTR [ebp+0x34296f80]
  41a452:	dec    esi
  41a453:	pushf  
  41a454:	ja     0x41a46e
  41a456:	dec    BYTE PTR [ebp+0x28]
  41a459:	jb     0x41a45d
  41a45b:	push   edi
  41a45c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a45d:	mov    ah,0x23
  41a45f:	inc    eax
  41a460:	mov    ebp,0x9bafaf61
  41a465:	add    ecx,edx
  41a467:	jb     0x41a4d6
  41a469:	mov    dh,0x67
  41a46b:	(bad)  
  41a46c:	cmp    DWORD PTR [ecx+eiz*2],eax
  41a46f:	push   ebp
  41a470:	cmp    eax,0x239cd77a
  41a475:	cwde   
  41a476:	das    
  41a477:	hlt    
  41a478:	add    dl,cl
  41a47a:	int    0x3d
  41a47c:	push   eax
  41a47d:	mov    BYTE PTR [edi+0x3],al
  41a480:	push   ebp
  41a481:	jmp    0xdcc1:0x415263f5
  41a488:	(bad)  
  41a489:	not    DWORD PTR [ebp-0x6c4aa10a]
  41a48f:	lea    eax,[edx]
  41a491:	sti    
  41a492:	cmp    BYTE PTR [eax],0x19
  41a495:	call   FWORD PTR ds:0xfaf5023
  41a49b:	xor    DWORD PTR [ebx-0x43],0xffffffce
  41a49f:	movlhps xmm3,xmm5
  41a4a2:	add    ah,BYTE PTR [esi+0x78]
  41a4a5:	aas    
  41a4a6:	mov    eax,ds:0x52d35e49
  41a4ab:	or     ah,0xb0
  41a4ae:	sub    eax,0x2f180b02
  41a4b3:	dec    esp
  41a4b4:	mov    BYTE PTR [esi-0x26],bh
  41a4b7:	jmp    0xa7a5fc4f
  41a4bc:	inc    esi
  41a4bd:	push   0x10
  41a4bf:	ss mov edi,0xf6ee50ae
  41a4c5:	jmp    0x31cdc1bf
  41a4ca:	xchg   ebp,eax
  41a4cb:	test   BYTE PTR [ebx+0x3c],al
  41a4ce:	les    eax,FWORD PTR [ebp+0x3b]
  41a4d1:	pushf  
  41a4d2:	xor    DWORD PTR [eax+esi*4+0x75],ebx
  41a4d6:	aam    0xd6
  41a4d8:	ins    BYTE PTR es:[edi],dx
  41a4d9:	pop    eax
  41a4da:	mov    ebx,0x1feca61a
  41a4df:	in     eax,0x43
  41a4e1:	xchg   ebp,eax
  41a4e2:	cmove  esi,DWORD PTR [ecx+ebx*4-0x54be2e58]
  41a4ea:	xchg   BYTE PTR [edx-0x58],bl
  41a4ed:	enter  0x54bd,0x51
  41a4f1:	xor    al,0xfc
  41a4f3:	mov    eax,0xb4e67906
  41a4f8:	ror    BYTE PTR ds:0xd859c572,0x43
  41a4ff:	pop    ds
  41a500:	mov    ch,0x18
  41a502:	scas   eax,DWORD PTR es:[edi]
  41a503:	jmp    0x61f0:0xee178985
  41a50a:	xor    eax,0xf5c48ef1
  41a50f:	lods   eax,DWORD PTR ds:[esi]
  41a510:	out    dx,al
  41a511:	add    edx,DWORD PTR [ecx*4-0x2102533f]
  41a518:	mov    eax,ds:0xfff5c7b0
  41a51d:	loop   0x41a4ed
  41a51f:	sbb    BYTE PTR [esi+ebx*8+0x2],0x72
  41a524:	outs   dx,DWORD PTR ds:[esi]
  41a525:	popf   
  41a526:	mov    eax,0xbe4df37c
  41a52b:	(bad)  
  41a52c:	js     0x41a557
  41a52e:	lock xchg ecx,eax
  41a530:	repz xor eax,0x56948b90
  41a536:	outs   dx,DWORD PTR ds:[esi]
  41a537:	popf   
  41a538:	push   es
  41a539:	ret    0xc2f8
  41a53c:	or     ebx,edi
  41a53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53f:	test   DWORD PTR [ebx+0x4b],esp
  41a542:	icebp  
  41a543:	jle    0x41a58e
  41a545:	retf   0x6f88
  41a548:	push   eax
  41a549:	enter  0xf696,0xb5
  41a54d:	fnstsw WORD PTR [eax-0x5c947ea0]
  41a553:	pop    ss
  41a554:	cmp    eax,0xbb3701d0
  41a559:	push   ebx
  41a55a:	shr    DWORD PTR [ebx+0x45],0xe8
  41a55e:	xchg   ebp,eax
  41a55f:	ss in  al,0x3c
  41a562:	call   FWORD PTR [ebp-0x6d5b1554]
  41a568:	shr    BYTE PTR [edi],1
  41a56a:	ror    BYTE PTR [ebp-0x6e27a826],0xe8
  41a571:	or     ebp,esi
  41a573:	add    al,0x93
  41a575:	je     0x41a58e
  41a577:	cmp    ebx,ecx
  41a579:	data16 scas al,BYTE PTR es:[edi]
  41a57b:	mov    ch,0x8e
  41a57d:	fmul   QWORD PTR [eax]
  41a57f:	add    BYTE PTR [eax+ebp*2-0x320e275],dh
  41a586:	pop    ebx
  41a587:	out    0x38,eax
  41a589:	retf   0xcb67
  41a58c:	jnp    0x41a560
  41a58e:	add    cl,cl
  41a590:	pop    ebp
  41a591:	sub    ebp,DWORD PTR [eax]
  41a593:	lgs    ebx,FWORD PTR [esi-0x3546c4ba]
  41a59a:	das    
  41a59b:	cmc    
  41a59c:	into   
  41a59d:	stc    
  41a59e:	mov    ch,0x53
  41a5a0:	js     0x41a60f
  41a5a2:	cs push ss
  41a5a4:	or     esi,0xc
  41a5a7:	pop    ebx
  41a5a8:	inc    ebx
  41a5a9:	cld    
  41a5aa:	and    DWORD PTR [edx],esp
  41a5ac:	pop    esi
  41a5ad:	or     ah,BYTE PTR [ebx-0x61]
  41a5b0:	jae    0x41a5f4
  41a5b2:	xchg   ebp,eax
  41a5b3:	in     eax,0x67
  41a5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b6:	adc    esp,ebp
  41a5b8:	pop    es
  41a5b9:	pop    ebp
  41a5ba:	sti    
  41a5bb:	xor    eax,0x5bd1be1a
  41a5c0:	aaa    
  41a5c1:	mov    eax,eax
  41a5c3:	xchg   ebx,eax
  41a5c4:	add    edx,DWORD PTR [eax]
  41a5c6:	int    0xd8
  41a5c8:	fsub   DWORD PTR [ecx+0x31e73375]
  41a5ce:	fidivr DWORD PTR [ebx]
  41a5d0:	and    eax,0xdf6a3cee
  41a5d5:	dec    edx
  41a5d6:	add    bh,BYTE PTR [eax-0x7d]
  41a5d9:	mov    ah,0x64
  41a5db:	aas    
  41a5dc:	fmul   QWORD PTR [eax+ebp*8]
  41a5df:	arpl   WORD PTR [esi+0x43],cx
  41a5e2:	into   
  41a5e3:	mov    bh,0x93
  41a5e5:	and    esp,ebp
  41a5e7:	popa   
  41a5e8:	aas    
  41a5e9:	and    al,0x86
  41a5eb:	cmp    dl,BYTE PTR [ebp+0x2b]
  41a5ee:	mov    al,BYTE PTR [esi+0x6271dc05]
  41a5f4:	rcr    DWORD PTR [eax],0xb
  41a5f7:	adc    eax,0xb87d18cc
  41a5fc:	xchg   ebx,eax
  41a5fd:	mov    esp,0xf9aeaeaa
  41a602:	adc    al,BYTE PTR [esi+0x6f6d727d]
  41a608:	outs   dx,DWORD PTR ds:[esi]
  41a609:	jg     0x41a637
  41a60b:	stc    
  41a60c:	push   esi
  41a60d:	cmp    esp,0x44f548a0
  41a613:	in     al,0x98
  41a615:	out    dx,eax
  41a616:	dec    ebp
  41a617:	jns    0x41a59f
  41a619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a61a:	sbb    al,0x8a
  41a61c:	and    BYTE PTR [ecx-0x2df7c484],bl
  41a622:	jge    0x41a60a
  41a624:	sub    dl,BYTE PTR [esi+0x77452da]
  41a62a:	lds    edx,FWORD PTR [eax+0x76]
  41a62d:	ret    0x9ac8
  41a630:	popa   
  41a631:	adc    eax,0x291f0394
  41a636:	dec    edx
  41a637:	adc    ah,cl
  41a639:	add    esp,DWORD PTR [ecx+0x33]
  41a63c:	mov    ds:0xa9e4b7a3,al
  41a641:	inc    edx
  41a642:	adc    DWORD PTR [ebx+0x8e61c73],ebp
  41a648:	adc    BYTE PTR [edi],al
  41a64a:	sti    
  41a64b:	mov    esi,0x67551b8e
  41a650:	imul   eax,DWORD PTR [esi+0x1f5ac2dd],0x1f
  41a657:	into   
  41a658:	out    dx,al
  41a659:	icebp  
  41a65a:	and    cl,BYTE PTR [esi-0x2e4215ee]
  41a660:	cmp    ebp,esi
  41a662:	xlat   BYTE PTR ds:[ebx]
  41a663:	retf   0xe2d
  41a666:	out    dx,eax
  41a667:	pop    eax
  41a668:	out    0x74,al
  41a66a:	push   edx
  41a66b:	xchg   DWORD PTR [eax],edi
  41a66d:	sbb    esp,DWORD PTR [eax]
  41a66f:	sti    
  41a670:	js     0x41a6ed
  41a672:	dec    ebx
  41a673:	cwde   
  41a674:	ds jp  0x41a65e
  41a677:	xor    BYTE PTR [esi+0x6ac90da9],ch
  41a67d:	xlat   BYTE PTR ds:[ebx]
  41a67e:	pusha  
  41a67f:	xor    ebp,edi
  41a681:	xor    al,BYTE PTR [ecx]
  41a683:	mov    bl,0x44
  41a685:	xor    eax,0xd745e81a
  41a68a:	stos   DWORD PTR es:[edi],eax
  41a68b:	mov    bh,0xa
  41a68d:	sbb    eax,0x18c56400
  41a692:	push   edi
  41a693:	(bad)  
  41a694:	mov    ebx,0x9c3f8ce
  41a699:	cmp    eax,0x6c8ceb8d
  41a69e:	pminub mm3,QWORD PTR [edx]
  41a6a1:	loope  0x41a71c
  41a6a3:	je     0x41a682
  41a6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6a6:	out    0xef,eax
  41a6a8:	es lock mov al,0x2
  41a6ac:	inc    edi
  41a6ad:	add    DWORD PTR [ecx-0x4dd12395],0xffffffa2
  41a6b4:	cmp    eax,0x5528c5ea
  41a6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ba:	jmp    0xa5de:0x9203dc93
  41a6c1:	in     al,dx
  41a6c2:	push   ebp
  41a6c3:	push   ebp
  41a6c4:	pop    esp
  41a6c5:	int    0x48
  41a6c7:	aad    0xd4
  41a6c9:	inc    ecx
  41a6ca:	call   DWORD PTR [eax]
  41a6cc:	aam    0xf4
  41a6ce:	aad    0xf1
  41a6d0:	dec    ecx
  41a6d1:	mov    ebx,0x45f24024
  41a6d6:	(bad)  
  41a6d7:	mov    bh,ah
  41a6d9:	jg     0x41a745
  41a6db:	sbb    esi,DWORD PTR [esi-0x400c943]
  41a6e1:	addr16 or al,0x61
  41a6e4:	inc    eax
  41a6e5:	test   eax,0x32d919e5
  41a6ea:	mov    DWORD PTR [ebx],ecx
  41a6ec:	xchg   ecx,eax
  41a6ed:	xchg   ebx,eax
  41a6ee:	jb     0x41a6d7
  41a6f0:	sbb    al,0x26
  41a6f2:	cmp    ecx,DWORD PTR [ecx]
  41a6f4:	call   0x6cab:0xc8575e90
  41a6fb:	sbb    esi,eax
  41a6fd:	jnp    0x41a73a
  41a6ff:	cdq    
  41a700:	or     BYTE PTR [edi],ch
  41a702:	sti    
  41a703:	push   esi
  41a704:	jmp    0xdee0:0x5e13133f
  41a70b:	or     ebp,ebx
  41a70d:	mov    ss:0xfcb6b53c,al
  41a713:	mov    ch,0xad
  41a715:	push   ss
  41a716:	out    dx,eax
  41a717:	loop   0x41a74d
  41a719:	shl    BYTE PTR [edi],0x8c
  41a71c:	cmp    eax,DWORD PTR [edx+0x14]
  41a71f:	cmp    dl,ah
  41a721:	push   ds
  41a722:	jle    0x41a6d4
  41a724:	pop    esi
  41a725:	jae    0x41a734
  41a727:	jno    0x41a6bc
  41a729:	test   al,0x40
  41a72b:	popf   
  41a72c:	fst    st(6)
  41a72e:	inc    edx
  41a72f:	or     ch,ah
  41a731:	fisubr WORD PTR [edi+0x58]
  41a734:	xor    DWORD PTR [edx],esp
  41a736:	jnp    0x41a794
  41a738:	dec    edx
  41a739:	add    eax,0x36216778
  41a73e:	sbb    BYTE PTR [eax+edx*1],0xe4
  41a742:	data16 sahf 
  41a744:	loopne 0x41a75b
  41a746:	push   esi
  41a747:	mov    ch,0xfb
  41a749:	mov    esi,0x7b606462
  41a74e:	mov    ebp,0x4646d59d
  41a753:	pop    ss
  41a754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a755:	xor    dh,BYTE PTR [edi]
  41a757:	sbb    DWORD PTR [edi],esp
  41a759:	and    edi,esp
  41a75b:	mov    edx,DWORD PTR [esi]
  41a75d:	aam    0x37
  41a75f:	mov    WORD PTR [eax-0x5cca09e7],ss
  41a765:	cmp    eax,0xe43dd568
  41a76a:	cmp    al,0xd9
  41a76c:	or     ebx,ebp
  41a76e:	add    eax,0x9c902969
  41a773:	dec    ebp
  41a774:	push   0x408f9717
  41a779:	sahf   
  41a77a:	addr16 dec ecx
  41a77c:	mov    eax,0xf9af329d
  41a781:	fnstenv [ecx-0x64]
  41a784:	(bad)  
  41a785:	jo     0x41a733
  41a787:	(bad)  
  41a788:	cmp    BYTE PTR [esi+0x14],dl
  41a78b:	clc    
  41a78c:	clc    
  41a78d:	fild   DWORD PTR [eax-0x7622458a]
  41a793:	xor    al,0x40
  41a795:	adc    BYTE PTR [edx+0x974b0ad],dl
  41a79b:	leave  
  41a79c:	repz ja 0x41a727
  41a79f:	inc    esi
  41a7a0:	scas   al,BYTE PTR es:[edi]
  41a7a1:	cmp    eax,ecx
  41a7a3:	jae    0x41a768
  41a7a5:	jecxz  0x41a7b4
  41a7a7:	int    0x63
  41a7a9:	mov    ss,ecx
  41a7ab:	fwait
  41a7ac:	add    al,0x49
  41a7ae:	xchg   ebp,eax
  41a7af:	loopne 0x41a768
  41a7b1:	pusha  
  41a7b2:	shl    DWORD PTR [edx-0x3cdd8b7b],cl
  41a7b8:	ret    0xe87c
  41a7bb:	jge    0x41a75c
  41a7bd:	in     eax,dx
  41a7be:	clc    
  41a7bf:	aaa    
  41a7c0:	jne    0x41a7de
  41a7c2:	iret   
  41a7c3:	mov    ebp,0x226f22a8
  41a7c8:	pushf  
  41a7c9:	xchg   ecx,eax
  41a7ca:	int3   
  41a7cb:	xor    BYTE PTR [edi+0x21d83281],bl
  41a7d1:	rcl    BYTE PTR [edi+0x40],0xb2
  41a7d5:	xor    bl,0x7c
  41a7d8:	xchg   esi,eax
  41a7d9:	pop    ecx
  41a7da:	jns    0x41a781
  41a7dc:	jo     0x41a847
  41a7de:	mov    ch,0xae
  41a7e0:	pop    eax
  41a7e1:	mov    BYTE PTR [esi-0x5a2d58f4],ch
  41a7e7:	sahf   
  41a7e8:	scas   al,BYTE PTR es:[edi]
  41a7e9:	dec    ecx
  41a7ea:	add    al,al
  41a7ec:	dec    esp
  41a7ed:	ror    DWORD PTR ds:0x4a4e7b35,0xb7
  41a7f4:	inc    ebp
  41a7f5:	fdivr  DWORD PTR [eax]
  41a7f7:	out    0x26,eax
  41a7f9:	dec    ebx
  41a7fa:	lds    ebp,FWORD PTR [ebp-0x6]
  41a7fd:	jmp    0xe20b8aeb
  41a802:	adc    al,bl
  41a804:	sahf   
  41a805:	adc    al,0x9d
  41a807:	dec    edi
  41a808:	sub    eax,0x4ff5c4e2
  41a80d:	sbb    DWORD PTR [ecx-0x50],ebx
  41a810:	call   0xa0f9993a
  41a815:	call   0x6342:0xa8418c31
  41a81c:	call   0xc14c:0xb2e3bb5
  41a823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a824:	mov    ebx,0xbe1d7b9
  41a829:	data16 in al,dx
  41a82b:	add    eax,0x810036c
  41a830:	fldcw  WORD PTR [edx+eax*2-0x7f8d976f]
  41a837:	inc    eax
  41a838:	sar    BYTE PTR [esi+eax*1-0x2f],1
  41a83c:	add    al,0xa4
  41a83e:	push   eax
  41a83f:	inc    ebx
  41a840:	push   DWORD PTR [edx-0x37]
  41a843:	adc    ecx,ebp
  41a845:	fist   WORD PTR [esi-0x29f3ee81]
  41a84b:	inc    edx
  41a84c:	xchg   ebp,eax
  41a84d:	ret    0x54b3
  41a850:	out    0x53,eax
  41a852:	sti    
  41a853:	pop    es
  41a854:	(bad)  
  41a855:	cmp    DWORD PTR [eax-0x58],esp
  41a858:	(bad)  
  41a85a:	push   ecx
  41a85b:	adc    ah,BYTE PTR [eax]
  41a85d:	loopne 0x41a7e7
  41a85f:	jmp    0x41a872
  41a861:	les    edx,FWORD PTR [eax-0x2c]
  41a864:	(bad)  
  41a865:	xor    DWORD PTR [edx],esp
  41a867:	sub    bl,BYTE PTR [esi]
  41a869:	cli    
  41a86a:	add    bh,ch
  41a86c:	push   edi
  41a86d:	mov    ds,edi
  41a86f:	jo     0x41a81b
  41a871:	(bad)  
  41a872:	cmp    eax,0xdddca6b9
  41a877:	loopne 0x41a851
  41a879:	cld    
  41a87a:	lea    ebp,[eax-0xe]
  41a87d:	cmc    
  41a87e:	pop    edx
  41a87f:	mov    bh,0xa
  41a881:	cmp    BYTE PTR [eax+0x21],dh
  41a884:	mov    bh,0x6
  41a886:	arpl   WORD PTR [edx-0x55],di
  41a889:	sti    
  41a88a:	test   eax,0x4a3b449e
  41a88f:	int3   
  41a890:	stos   BYTE PTR es:[edi],al
  41a891:	inc    ebx
  41a892:	xchg   esp,eax
  41a893:	fimul  DWORD PTR cs:[ebx+eax*2]
  41a897:	shl    BYTE PTR [edi+0x48],1
  41a89a:	stos   BYTE PTR es:[edi],al
  41a89b:	sub    eax,0x97259a05
  41a8a0:	adc    eax,eax
  41a8a2:	bound  ebp,QWORD PTR [esi+0x300a2ac2]
  41a8a8:	xor    al,0x89
  41a8aa:	adc    eax,0xc5e758bd
  41a8af:	inc    ebx
  41a8b0:	xchg   ebx,eax
  41a8b1:	jb     0x41a893
  41a8b3:	adc    ebx,ebp
  41a8b5:	jae    0x41a85b
  41a8b7:	xchg   ebx,eax
  41a8b8:	mov    dl,0xd8
  41a8ba:	das    
  41a8bb:	repnz mov al,0xf7
  41a8be:	fsubr  DWORD PTR [edi+0x69]
  41a8c1:	gs dec ebp
  41a8c3:	push   cs
  41a8c4:	push   0xc1131cde
  41a8c9:	test   eax,0xabd8e84f
  41a8ce:	shl    DWORD PTR [eax+edi*2],0x27
  41a8d2:	sub    DWORD PTR [ecx],esi
  41a8d4:	pusha  
  41a8d5:	sub    eax,0xea13a76c
  41a8da:	sub    al,0x7c
  41a8dc:	test   al,0xff
  41a8de:	xchg   ecx,eax
  41a8df:	xor    eax,0xed0a518d
  41a8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e5:	push   cs
  41a8e6:	inc    esi
  41a8e7:	fnop   
  41a8e9:	cli    
  41a8ea:	loope  0x41a918
  41a8ec:	loopne 0x41a8c8
  41a8ee:	(bad)  
  41a8ef:	push   ebx
  41a8f0:	jp     0x41a957
  41a8f2:	test   BYTE PTR [ebx-0x463b7eb6],al
  41a8f8:	mov    ds:0xbcff55a1,al
  41a8fd:	jmp    0x1adb:0xb35e3957
  41a904:	pop    edx
  41a905:	push   0x45
  41a907:	xor    al,0xef
  41a909:	xor    eax,0xddbab82e
  41a90e:	arpl   bp,ax
  41a910:	add    eax,0xc05906fd
  41a915:	lea    edx,[ecx-0x33b208ed]
  41a91b:	push   edi
  41a91c:	pop    ecx
  41a91d:	push   ebp
  41a91e:	xor    edi,ecx
  41a920:	dec    edi
  41a921:	mov    eax,0x932f80f6
  41a926:	xor    ecx,DWORD PTR [eax+ecx*4]
  41a929:	(bad)  
  41a92a:	and    DWORD PTR [eax+0x71],ebp
  41a92d:	sbb    al,0xcc
  41a92f:	(bad)  
  41a930:	idiv   ebx
  41a932:	xchg   edi,eax
  41a933:	test   DWORD PTR [ebx],0x89c76207
  41a939:	dec    esi
  41a93a:	cld    
  41a93b:	int3   
  41a93c:	(bad)  
  41a93d:	or     edi,DWORD PTR [edi-0x50fe0e28]
  41a943:	inc    esp
  41a944:	cld    
  41a945:	or     BYTE PTR [eax+0x56],bh
  41a948:	and    al,0x2d
  41a94a:	in     al,dx
  41a94b:	loope  0x41a925
  41a94d:	neg    BYTE PTR [ebp+0x3b]
  41a950:	mov    fs,ebp
  41a952:	scas   eax,DWORD PTR es:[edi]
  41a953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a954:	mov    ch,0x85
  41a956:	clc    
  41a957:	rcl    BYTE PTR [edx],cl
  41a959:	dec    ecx
  41a95a:	test   edx,0x1186b189
  41a960:	mov    ah,BYTE PTR [edx-0x51]
  41a963:	pop    esp
  41a964:	or     bl,BYTE PTR [ebx-0x1256e106]
  41a96a:	shl    al,cl
  41a96c:	sub    eax,0x960a0682
  41a971:	mov    ds:0x4a36bda,eax
  41a976:	fisubr DWORD PTR [edi]
  41a978:	stos   DWORD PTR es:[edi],eax
  41a979:	mov    edx,0xaae65865
  41a97e:	loope  0x41a91e
  41a980:	or     edx,edx
  41a982:	sub    ah,BYTE PTR [ebp+0x7c]
  41a985:	add    eax,0xca40548e
  41a98a:	jge    0x41a963
  41a98c:	fst    QWORD PTR [eax+0x34dcd544]
  41a992:	cmp    al,al
  41a994:	mov    bl,dh
  41a996:	std    
  41a997:	mov    ah,0x44
  41a999:	ret    
  41a99a:	outs   dx,BYTE PTR ds:[esi]
  41a99b:	test   BYTE PTR [edi],ch
  41a99d:	push   esp
  41a99e:	mov    ds:0xdce7b84,al
  41a9a3:	int3   
  41a9a4:	mov    al,0x93
  41a9a6:	stc    
  41a9a7:	enter  0xe9e2,0x1b
  41a9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ac:	fdiv   st,st(6)
  41a9ae:	rcl    DWORD PTR [ebx-0x41b6d28a],0xc1
  41a9b5:	jle    0x41a9f1
  41a9b7:	out    0x37,al
  41a9b9:	mov    DWORD PTR [esi+0x18],esi
  41a9bc:	mov    ebp,0x5c4fde49
  41a9c1:	inc    ebp
  41a9c2:	mov    ecx,0x6bb1e1bd
  41a9c7:	in     al,0x8e
  41a9c9:	ret    
  41a9ca:	push   esi
  41a9cb:	cdq    
  41a9cc:	ficom  DWORD PTR [esi+ebp*1+0x6bb2bea6]
  41a9d3:	cmp    al,0x16
  41a9d5:	pop    es
  41a9d6:	cmp    eax,0x50ad53a7
  41a9db:	jo     0x41a962
  41a9dd:	call   DWORD PTR [ebp+0x48bb3148]
  41a9e3:	dec    ebp
  41a9e4:	xor    al,0xc0
  41a9e6:	ret    0x63f9
  41a9e9:	ret    
  41a9ea:	iret   
  41a9eb:	sbb    dh,BYTE PTR [edx]
  41a9ed:	test   BYTE PTR [ebx+0x76],ah
  41a9f0:	adc    al,BYTE PTR [ecx+ebp*1-0x6]
  41a9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9f5:	xor    BYTE PTR [edx+0x2c20330a],bh
  41a9fb:	sahf   
  41a9fc:	jae    0x41aa4d
  41a9fe:	scas   eax,DWORD PTR es:[edi]
  41a9ff:	inc    ecx
  41aa00:	add    al,0xc3
  41aa02:	(bad)  
  41aa04:	out    dx,al
  41aa05:	std    
  41aa06:	sub    esi,edi
  41aa08:	add    al,BYTE PTR [ecx]
  41aa0a:	mov    ds:0x90ecfe5a,eax
  41aa0f:	ja     0x41a9d8
  41aa11:	push   0xffffff89
  41aa13:	dec    esi
  41aa14:	aaa    
  41aa15:	adc    eax,0x3538949e
  41aa1a:	mov    esi,0xfdb78698
  41aa1f:	xor    dh,BYTE PTR [eax]
  41aa21:	lods   eax,DWORD PTR ds:[esi]
  41aa22:	lods   eax,DWORD PTR ds:[esi]
  41aa23:	sbb    bh,al
  41aa25:	ins    BYTE PTR es:[edi],dx
  41aa26:	inc    edx
  41aa27:	sbb    bl,BYTE PTR [ebx+0x6f]
  41aa2a:	jae    0x41a9e7
  41aa2c:	jbe    0x41aa94
  41aa2e:	mov    dl,0x86
  41aa30:	add    edi,DWORD PTR [edx+0x449da6bb]
  41aa36:	sub    DWORD PTR [esi+0x71aff681],ebp
  41aa3c:	imul   edi,DWORD PTR [ebp+0x5f],0xffffffd5
  41aa40:	mov    ebp,0xa62fcd0e
  41aa45:	sahf   
  41aa46:	mov    DWORD PTR [edx+0x1b22e154],ebp
  41aa4c:	or     DWORD PTR [edx],ebp
  41aa4e:	ja     0x41a9d2
  41aa50:	repz addr16 ss mov cl,0x86
  41aa55:	sbb    ecx,DWORD PTR [ecx-0x18]
  41aa58:	push   cs
  41aa59:	cwde   
  41aa5a:	xchg   ebx,eax
  41aa5b:	les    edx,FWORD PTR [eax-0x1f]
  41aa5e:	(bad)  
  41aa5f:	and    BYTE PTR [edi-0x2a],al
  41aa62:	shl    DWORD PTR [esi-0x2a4433f9],0x6b
  41aa69:	pop    edi
  41aa6a:	out    dx,eax
  41aa6b:	hlt    
  41aa6c:	jnp    0x41a9f0
  41aa6e:	mov    bh,BYTE PTR [ecx]
  41aa70:	push   ecx
  41aa71:	stc    
  41aa72:	inc    esp
  41aa73:	neg    DWORD PTR [ecx-0x74]
  41aa76:	shl    BYTE PTR [edx],1
  41aa78:	lahf   
  41aa79:	pop    ebx
  41aa7a:	inc    ebx
  41aa7b:	enter  0xc32b,0x92
  41aa7f:	mov    al,0x46
  41aa81:	xor    eax,0x9e136a0f
  41aa86:	addr16 push 0xf5cc13a3
  41aa8c:	and    eax,0x82aedd3c
  41aa91:	pop    edx
  41aa92:	cmp    DWORD PTR [esi],eax
  41aa94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa95:	mov    bh,0x6b
  41aa97:	daa    
  41aa98:	xchg   edi,eax
  41aa99:	push   edx
  41aa9a:	mov    ecx,0x9f24bd62
  41aa9f:	sbb    al,0xf3
  41aaa1:	in     eax,dx
  41aaa2:	cmp    eax,0xc43375be
  41aaa7:	(bad)  
  41aaa8:	(bad)  
  41aaa9:	fistp  WORD PTR [esi]
  41aaab:	cmp    DWORD PTR [ebx+edx*4-0x50a41f15],ebx
  41aab2:	push   0x31
  41aab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aab5:	xchg   DWORD PTR [ebx-0x2dd686cc],eax
  41aabb:	mov    ebx,0xa62b9dda
  41aac0:	lea    ebp,[ebx-0x66]
  41aac3:	mov    ds:0x3f5e4fbb,eax
  41aac8:	fucomp st(1)
  41aaca:	das    
  41aacb:	(bad)  
  41aacd:	jo     0x41aabb
  41aacf:	push   ebp
  41aad0:	call   0xfe63ce0c
  41aad5:	out    0x5c,al
  41aad7:	xor    DWORD PTR [ebx+0x476379de],ebx
  41aadd:	cmp    eax,0xbb6ca1ea
  41aae2:	mov    ecx,0xfed35bd1
  41aae7:	jmp    0xef4c:0xe8f933fc
  41aaee:	pop    edx
  41aaef:	fdivr  DWORD PTR [ecx-0x49]
  41aaf2:	outs   dx,DWORD PTR ds:[esi]
  41aaf3:	fwait
  41aaf4:	jo     0x41aad3
  41aaf6:	adc    DWORD PTR [ecx+0x2d],ebx
  41aaf9:	call   0x168e:0xd02cf8a6
  41ab00:	shl    BYTE PTR [edi],0x6c
  41ab03:	xchg   esp,eax
  41ab04:	repnz xor eax,0x398f4370
  41ab0a:	shr    BYTE PTR [edi],cl
  41ab0c:	cmp    eax,0x95a5f0b2
  41ab11:	adc    al,0x4e
  41ab13:	mov    ch,0x54
  41ab15:	cwde   
  41ab16:	xchg   ebx,eax
  41ab17:	push   edx
  41ab18:	in     al,dx
  41ab19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab1a:	and    BYTE PTR [edx+0x7a],dl
  41ab1d:	jle    0x41ab7d
  41ab1f:	leave  
  41ab20:	repnz stc 
  41ab22:	fst    DWORD PTR [edx-0x328fb534]
  41ab28:	or     bl,dh
  41ab2a:	ror    bh,cl
  41ab2c:	es ins BYTE PTR es:[edi],dx
  41ab2e:	xchg   DWORD PTR [edx],eax
  41ab30:	lahf   
  41ab31:	stos   BYTE PTR es:[edi],al
  41ab32:	leave  
  41ab33:	aaa    
  41ab34:	je     0x41ab93
  41ab36:	loope  0x41aada
  41ab38:	jno    0x41ab15
  41ab3a:	mov    al,0x93
  41ab3c:	lods   al,BYTE PTR ds:[esi]
  41ab3d:	push   esi
  41ab3e:	sub    BYTE PTR [edx+0x37],ch
  41ab41:	push   cs
  41ab42:	imul   ebx,DWORD PTR [esi+0x3],0x60
  41ab46:	(bad)  
  41ab47:	aaa    
  41ab48:	pop    eax
  41ab49:	sbb    ah,BYTE PTR [edi+0x24]
  41ab4c:	retf   
  41ab4d:	ds loope 0x41aba5
  41ab50:	and    bh,BYTE PTR [eax-0x1c]
  41ab53:	sub    al,0x75
  41ab55:	mov    esp,0xe3d50996
  41ab5a:	lock jne 0x41abb1
  41ab5d:	sahf   
  41ab5e:	xchg   esp,eax
  41ab5f:	fadd   QWORD PTR [edi-0x2a]
  41ab62:	inc    ebp
  41ab63:	fwait
  41ab64:	cmp    edx,ebp
  41ab66:	push   es
  41ab67:	adc    ch,dh
  41ab69:	sbb    DWORD PTR [eax+0x1500ed56],edi
  41ab6f:	dec    ecx
  41ab70:	xlat   BYTE PTR ds:[ebx]
  41ab71:	jle    0x41abb1
  41ab73:	test   eax,0x58de3fc4
  41ab78:	mov    ebx,0x362a24e5
  41ab7d:	fdivp  st(0),st
  41ab7f:	mov    bl,0xba
  41ab81:	sub    al,0xa0
  41ab83:	ret    
  41ab84:	in     eax,dx
  41ab85:	sub    BYTE PTR [eax-0x4f],0xab
  41ab89:	test   DWORD PTR [ebx],eax
  41ab8b:	fs xchg ecx,eax
  41ab8d:	pop    ebx
  41ab8e:	xor    BYTE PTR [ecx+0x7eae0735],ch
  41ab94:	aas    
  41ab95:	and    al,0x20
  41ab97:	sbb    al,0xdd
  41ab99:	sub    esp,DWORD PTR [ebp*2-0x21d25c42]
  41aba0:	outs   dx,DWORD PTR ds:[esi]
  41aba1:	stos   DWORD PTR es:[edi],eax
  41aba2:	sti    
  41aba3:	cmc    
  41aba4:	repnz outs dx,DWORD PTR ds:[esi]
  41aba6:	in     al,0x54
  41aba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aba9:	push   esp
  41abaa:	rol    DWORD PTR [ebx+0x42194569],1
  41abb0:	ja     0x41abd4
  41abb2:	imul   ebp,DWORD PTR [esi],0x62a6d52e
  41abb8:	pop    edx
  41abb9:	xchg   DWORD PTR [ebx+0x7e19f386],edx
  41abbf:	push   cs
  41abc0:	adc    al,0x5e
  41abc2:	sub    ebp,DWORD PTR [ebx+0x56]
  41abc5:	idiv   esp
  41abc7:	jb     0x41abb4
  41abc9:	icebp  
  41abca:	rcl    DWORD PTR [edi+edx*8+0x78],0x9c
  41abcf:	shl    DWORD PTR [ecx-0x40],cl
  41abd2:	or     bh,bh
  41abd4:	aas    
  41abd5:	nop
  41abd6:	scas   eax,DWORD PTR es:[edi]
  41abd7:	das    
  41abd8:	out    dx,al
  41abd9:	aas    
  41abda:	dec    ch
  41abdc:	or     BYTE PTR [ecx],0x5a
  41abdf:	jmp    0xec7b:0x7f71b881
  41abe6:	scas   al,BYTE PTR es:[edi]
  41abe7:	xlat   BYTE PTR ds:[ebx]
  41abe8:	stos   DWORD PTR es:[edi],eax
  41abe9:	loop   0x41abec
  41abeb:	lods   al,BYTE PTR ds:[esi]
  41abec:	mov    al,0x73
  41abee:	fcomp  DWORD PTR [edi]
  41abf0:	adc    eax,0xa3cd0b0e
  41abf5:	imul   ebx,DWORD PTR [esi+eax*4+0x6e64ae0b],0x2
  41abfd:	std    
  41abfe:	xchg   edi,eax
  41abff:	lods   al,BYTE PTR ds:[esi]
  41ac00:	test   eax,0xd13e645a
  41ac05:	xor    ah,BYTE PTR [ebx]
  41ac07:	jb     0x41ac5f
  41ac09:	inc    ebx
  41ac0a:	jne    0x41ac7b
  41ac0c:	push   ebx
  41ac0d:	xchg   edi,eax
  41ac0e:	imul   BYTE PTR [eax-0x369a5ed4]
  41ac14:	adc    dh,al
  41ac16:	(bad)  
  41ac17:	inc    al
  41ac19:	adc    al,0x82
  41ac1b:	jmp    0x64db:0xd93e4aec
  41ac22:	addr16 add eax,0xefd0bd3c
  41ac28:	nop
  41ac29:	out    dx,eax
  41ac2a:	fld    TBYTE PTR [edx+edx*8-0x31]
  41ac2e:	pop    eax
  41ac2f:	or     ch,0x30
  41ac32:	stos   BYTE PTR es:[edi],al
  41ac33:	or     al,0x2d
  41ac35:	inc    BYTE PTR [edx]
  41ac37:	or     bh,bh
  41ac39:	test   DWORD PTR [esi],esp
  41ac3b:	and    edx,DWORD PTR [ebx-0x37]
  41ac3e:	dec    esi
  41ac3f:	sub    dl,BYTE PTR [ebp-0x1f]
  41ac42:	mov    al,0x1b
  41ac44:	aaa    
  41ac45:	(bad)  
  41ac46:	xlat   BYTE PTR ds:[ebx]
  41ac47:	pushf  
  41ac48:	lods   al,BYTE PTR ds:[esi]
  41ac49:	test   DWORD PTR [edx-0x10],0xc22daed8
  41ac50:	push   es
  41ac51:	outs   dx,DWORD PTR ds:[esi]
  41ac52:	dec    ebx
  41ac53:	cmp    DWORD PTR [eax+0x413ff540],ebx
  41ac59:	add    BYTE PTR es:[ecx],bl
  41ac5c:	inc    esi
  41ac5d:	repnz or eax,0x53930d56
  41ac63:	inc    esp
  41ac64:	ja     0x41ac16
  41ac66:	sub    BYTE PTR [edi],0x9f
  41ac69:	push   ds
  41ac6a:	lock sbb eax,0xe9c07c79
  41ac70:	add    BYTE PTR [ebp-0x1e],dl
  41ac73:	fild   QWORD PTR fs:[eax-0x5be7606e]
  41ac7a:	aad    0xa4
  41ac7c:	stc    
  41ac7d:	and    eax,DWORD PTR [esi+0x5685fbdd]
  41ac83:	pop    esp
  41ac84:	jns    0x41ad03
  41ac86:	adc    ebx,DWORD PTR [ebp+0x4b2b4870]
  41ac8c:	leave  
  41ac8d:	lock add dh,BYTE PTR ds:0xae7797ee
  41ac94:	add    al,BYTE PTR [ecx-0x2e]
  41ac97:	inc    edi
  41ac98:	mov    ecx,0x539631b9
  41ac9d:	ret    0x7bf
  41aca0:	bnd js 0x41ac35
  41aca3:	out    dx,al
  41aca4:	jmp    0x41acae
  41aca6:	adc    BYTE PTR [ebx-0x643c8ca3],bh
  41acac:	or     ebp,DWORD PTR [ecx]
  41acae:	push   esi
  41acaf:	wbinvd 
  41acb1:	gs cs mov ch,0x5b
  41acb5:	sub    BYTE PTR [edi+0x6c1b5408],ch
  41acbb:	inc    ebx
  41acbc:	cwde   
  41acbd:	jb     0x41ac87
  41acbf:	scas   al,BYTE PTR es:[edi]
  41acc0:	xchg   ebx,esp
  41acc2:	mov    al,0xed
  41acc4:	push   0x9db2d05b
  41acc9:	dec    ebx
  41acca:	shr    esp,1
  41accc:	sub    al,0x3f
  41acce:	cld    
  41accf:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41acd1:	in     al,dx
  41acd2:	mov    cl,0x5d
  41acd4:	jmp    0x41ad24
  41acd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acd7:	cmp    eax,0x3dc8142e
  41acdc:	xchg   DWORD PTR [esi-0x1d],ecx
  41acdf:	or     DWORD PTR [ebx+0x2d5b7fc8],esi
  41ace5:	cmp    eax,0x73d0f64
  41acea:	imul   ebx,esp,0xf80085f3
  41acf0:	mov    cl,0xee
  41acf2:	or     bh,BYTE PTR [edx+0x69f21417]
  41acf8:	inc    esp
  41acf9:	dec    ebx
  41acfa:	or     dl,ch
  41acfc:	cwde   
  41acfd:	push   ecx
  41acfe:	push   esp
  41acff:	(bad)  
  41ad00:	fdiv   st(1),st
  41ad02:	push   ebx
  41ad03:	sub    al,0xc4
  41ad05:	jmp    0x96c42f1f
  41ad0a:	gs stos BYTE PTR es:[edi],al
  41ad0c:	jb     0x41ad26
  41ad0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad0f:	call   DWORD PTR [edx-0x1c7645ba]
  41ad15:	(bad)  
  41ad16:	out    0x5b,al
  41ad18:	xor    edi,DWORD PTR [ebx-0x1c280f1d]
  41ad1e:	xor    eax,0x7617271b
  41ad23:	js     0x41acf3
  41ad25:	and    bl,BYTE PTR [ebx+0x73]
  41ad28:	ins    BYTE PTR es:[edi],dx
  41ad29:	jg     0x41ad4f
  41ad2b:	das    
  41ad2c:	call   0xf9668ea7
  41ad31:	(bad)  
  41ad32:	dec    ecx
  41ad33:	or     BYTE PTR [ebx-0x5f],0xd0
  41ad37:	mov    bl,0xe4
  41ad39:	inc    ecx
  41ad3a:	imul   ebp,ecx,0xffffffe8
  41ad3d:	jno    0x41ad37
  41ad3f:	or     al,0xdc
  41ad41:	dec    esp
  41ad42:	add    DWORD PTR [esi-0x37],eax
  41ad45:	in     al,dx
  41ad46:	adc    DWORD PTR [ebx+0x75e99d26],eax
  41ad4c:	add    al,0x70
  41ad4e:	int3   
  41ad4f:	ret    
  41ad50:	loopne 0x41ad84
  41ad52:	sbb    bh,0x4a
  41ad55:	lods   al,BYTE PTR cs:[esi]
  41ad57:	add    BYTE PTR [edx+0x2b09f04a],bh
  41ad5d:	fistp  QWORD PTR [eax-0x7b]
  41ad60:	push   edi
  41ad61:	jl     0x41ad34
  41ad63:	outs   dx,DWORD PTR ds:[esi]
  41ad64:	into   
  41ad65:	cmp    al,dh
  41ad67:	fistp  QWORD PTR [eax+edi*2]
  41ad6a:	sbb    bl,BYTE PTR [ebp-0x19]
  41ad6d:	popf   
  41ad6e:	pop    edx
  41ad6f:	in     eax,dx
  41ad70:	out    dx,al
  41ad71:	dec    DWORD PTR [edx-0x7]
  41ad74:	adc    dl,BYTE PTR [ecx]
  41ad76:	adc    bh,cl
  41ad78:	mov    eax,ds:0x18a7b365
  41ad7d:	push   esp
  41ad7e:	pushf  
  41ad7f:	adc    eax,0xc47eee7b
  41ad84:	mov    bl,0x7d
  41ad86:	sbb    esp,DWORD PTR [ecx+0x2]
  41ad89:	adc    edi,ebx
  41ad8b:	out    dx,al
  41ad8c:	mov    dl,0x9c
  41ad8e:	or     eax,0x3aa31d63
  41ad93:	xchg   DWORD PTR [edx+0x3b],esi
  41ad96:	in     al,0x70
  41ad98:	adc    DWORD PTR [ebx+0x45],esi
  41ad9b:	push   ebp
  41ad9c:	xchg   DWORD PTR [edi+edi*4+0x66fe56b5],eax
  41ada3:	imul   ecx
  41ada5:	pop    ebx
  41ada6:	test   BYTE PTR [edx-0x3d1a2d17],al
  41adac:	mov    dh,0x65
  41adae:	fisub  DWORD PTR [ecx]
  41adb0:	jp     0x41ad4a
  41adb2:	xchg   DWORD PTR [eax+0x212f6923],ebx
  41adb8:	hlt    
  41adb9:	stos   DWORD PTR es:[edi],eax
  41adba:	sbb    eax,0x6f4cf02f
  41adbf:	mov    ebx,0xfd89a515
  41adc4:	or     ebp,DWORD PTR [ebx]
  41adc6:	imul   ebx,DWORD PTR [ebx-0x75],0xffffffc9
  41adca:	fsubr  DWORD PTR [ebp+ebx*8+0x79c99682]
  41add1:	xchg   edi,eax
  41add2:	adc    ecx,DWORD PTR [esp+eax*1-0x29]
  41add6:	fstp   DWORD PTR [ebx+ecx*8+0x28cb05a]
  41addd:	imul   ecx,DWORD PTR [edi+0x32],0x2e
  41ade1:	or     DWORD PTR [edx-0xb],ebx
  41ade4:	fistp  DWORD PTR [ebx+eax*2-0x47]
  41ade8:	das    
  41ade9:	cmc    
  41adea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adeb:	mov    edi,0xfdaef1b
  41adf0:	mov    edx,0x22a39850
  41adf5:	pop    eax
  41adf6:	push   ebp
  41adf7:	test   DWORD PTR [esi],ebx
  41adf9:	push   eax
  41adfa:	mov    esp,0xe1004031
  41adff:	mov    ah,0xe3
  41ae01:	jnp    0x41adba
  41ae03:	jae    0x41ae04
  41ae05:	outs   dx,BYTE PTR ds:[esi]
  41ae06:	adc    eax,ebp
  41ae08:	mov    al,0x9
  41ae0a:	lods   eax,DWORD PTR ds:[esi]
  41ae0b:	dec    eax
  41ae0c:	push   ebx
  41ae0d:	push   eax
  41ae0e:	and    edi,edx
  41ae10:	pop    esp
  41ae11:	mov    BYTE PTR [ebx],dh
  41ae13:	xor    ecx,DWORD PTR [ecx-0x15c75e09]
  41ae19:	and    eax,0x46b66e36
  41ae1e:	inc    ebp
  41ae1f:	fsubr  DWORD PTR ds:0xad31dab3
  41ae25:	push   edi
  41ae26:	pop    ebx
  41ae27:	popf   
  41ae28:	dec    ecx
  41ae29:	inc    ebp
  41ae2a:	pushf  
  41ae2b:	aam    0xd3
  41ae2d:	jno    0x41ae15
  41ae2f:	and    al,0x74
  41ae31:	jmp    0xc3870dd3
  41ae36:	mov    ah,0x4d
  41ae38:	mov    eax,0xb9e25efa
  41ae3d:	in     al,dx
  41ae3e:	inc    esp
  41ae3f:	sbb    bh,BYTE PTR [edx+0x5c]
  41ae42:	in     eax,0xef
  41ae44:	push   cs
  41ae45:	adc    BYTE PTR [eax+0x7011fb66],bh
  41ae4b:	mov    esp,DWORD PTR [esi+0x5a]
  41ae4e:	push   esi
  41ae4f:	mov    esp,0xb5b75d43
  41ae54:	addr16 iret 
  41ae56:	adc    al,0x8a
  41ae58:	aaa    
  41ae59:	(bad)  
  41ae5a:	aas    
  41ae5b:	repnz int3 
  41ae5d:	push   0xccf7280c
  41ae62:	pop    edi
  41ae63:	jb     0x41ae3d
  41ae65:	ja     0x41adee
  41ae67:	daa    
  41ae68:	jae    0x41ae4c
  41ae6a:	les    esp,FWORD PTR [ecx+0x5c]
  41ae6d:	mov    ah,0xe8
  41ae6f:	or     esi,esp
  41ae71:	adc    ebp,esi
  41ae73:	mov    gs,WORD PTR [ecx+0x4a564da5]
  41ae79:	and    BYTE PTR [ebx+0x2fb3a45f],al
  41ae7f:	push   ecx
  41ae80:	or     DWORD PTR [edi-0x5f418e2a],ebx
  41ae86:	mov    ds:0x96753016,eax
  41ae8b:	enter  0x9be9,0x9a
  41ae8f:	call   0xe31525a1
  41ae94:	push   ds
  41ae95:	cmp    BYTE PTR [ecx-0x34],cl
  41ae98:	xchg   ecx,eax
  41ae99:	into   
  41ae9a:	inc    ebp
  41ae9b:	pop    DWORD PTR [ebx+0x32]
  41ae9e:	xchg   edi,eax
  41ae9f:	push   ecx
  41aea0:	push   0xfffffff8
  41aea2:	rcl    BYTE PTR [eax-0x53],1
  41aea5:	sub    dh,dl
  41aea7:	call   0xb2642efb
  41aeac:	or     DWORD PTR [ecx+esi*8+0x2831d405],0xffffff92
  41aeb4:	enter  0xfcf8,0xbc
  41aeb8:	jmp    0x49eb:0xc5398867
  41aebf:	lock jnp 0x41aeb5
  41aec2:	adc    BYTE PTR [eax+edx*8-0x7168841d],al
  41aec9:	xlat   BYTE PTR ds:[ebx]
  41aeca:	dec    edi
  41aecb:	fsubr  QWORD PTR [edi-0x29]
  41aece:	adc    DWORD PTR [ebx+0x38],edx
  41aed1:	or     al,0x2f
  41aed3:	rcr    BYTE PTR [ebp+edx*2+0x9b3bf65],1
  41aeda:	sub    BYTE PTR [esi+0x427905d7],ch
  41aee0:	sbb    eax,ebx
  41aee2:	std    
  41aee3:	sahf   
  41aee4:	or     dh,BYTE PTR [ecx]
  41aee6:	xor    DWORD PTR [edx-0x2645bd46],ecx
  41aeec:	(bad)  
  41aeed:	mov    al,ds:0x117d1c9b
  41aef2:	fnstsw WORD PTR [edi-0x6edf01b3]
  41aef8:	adc    eax,0xc4b7422
  41aefd:	mov    dl,0xda
  41aeff:	xchg   edi,eax
  41af00:	lods   eax,DWORD PTR ds:[esi]
  41af01:	mov    al,ds:0x67292b5d
  41af06:	inc    edx
  41af07:	arpl   WORD PTR [ebx+edx*2],si
  41af0a:	in     al,dx
  41af0b:	pop    ebx
  41af0c:	clc    
  41af0d:	js     0x41aeae
  41af0f:	jmp    0x4aa84e2c
  41af14:	add    DWORD PTR fs:[edi+edx*1-0x26],eax
  41af19:	aad    0x3b
  41af1b:	ss adc eax,0x8ad1f546
  41af21:	xchg   esp,eax
  41af22:	mov    gs,esi
  41af24:	dec    ecx
  41af25:	movntps XMMWORD PTR [ebx+0x2c],xmm0
  41af29:	mov    ecx,0x6d14d1f6
  41af2e:	mov    BYTE PTR [edx-0x314bd005],ch
  41af34:	and    eax,0x9b437cc3
  41af39:	ret    
  41af3a:	or     eax,0x35d9ac87
  41af3f:	inc    ecx
  41af40:	push   esi
  41af41:	adc    al,0x7a
  41af43:	cmp    DWORD PTR [ecx+0x2071d51b],eax
  41af49:	mov    fs,WORD PTR [edx]
  41af4b:	out    0x12,eax
  41af4d:	dec    ecx
  41af4e:	int3   
  41af4f:	or     bh,BYTE PTR [edx]
  41af51:	or     al,0xc5
  41af53:	mov    esp,0xc493c167
  41af58:	call   0x259131b1
  41af5d:	packuswb mm6,mm7
  41af60:	inc    eax
  41af61:	jns    0x41af02
  41af63:	xor    DWORD PTR [ebp+0x19aaec95],ebx
  41af69:	adc    BYTE PTR ds:[ebp-0x61b1235f],ch
  41af70:	mov    al,ds:0x9c2f1a34
  41af75:	inc    edi
  41af76:	mov    gs,WORD PTR [ebp+0x47e57bab]
  41af7c:	aas    
  41af7d:	jae    0x41af85
  41af7f:	jns    0x41af08
  41af81:	xchg   ebx,eax
  41af82:	add    dl,BYTE PTR [esi]
  41af84:	dec    ebp
  41af85:	sti    
  41af86:	retf   
  41af87:	cwde   
  41af88:	mov    eax,ds:0x732f8c60
  41af8d:	cs fnsetpm(287 only) 
  41af90:	cmp    BYTE PTR [edx+0x15],cl
  41af93:	jge    0x41af64
  41af95:	add    eax,0x14f17013
  41af9a:	loope  0x41af5c
  41af9c:	fidiv  WORD PTR [edi+0x4a]
  41af9f:	pop    es
  41afa0:	into   
  41afa1:	pop    eax
  41afa2:	push   edx
  41afa3:	ror    BYTE PTR [eax],0x19
  41afa6:	dec    edx
  41afa7:	add    BYTE PTR [ecx],bl
  41afa9:	lds    ebp,FWORD PTR [esi+0x2e472cb3]
  41afaf:	add    dh,BYTE PTR [eax-0x33]
  41afb2:	xchg   esp,eax
  41afb3:	ds stos BYTE PTR es:[edi],al
  41afb5:	outs   dx,DWORD PTR ds:[esi]
  41afb6:	xchg   BYTE PTR [ebx],dh
  41afb8:	loop   0x41afeb
  41afba:	imul   esp,eax,0x7e
  41afbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afbe:	sub    DWORD PTR [ebx-0xae24b4c],ebx
  41afc4:	addr16 pushf 
  41afc6:	mov    cl,0x3
  41afc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afc9:	pop    ss
  41afca:	(bad)  
  41afcb:	sbb    DWORD PTR ds:0x97dc6484,ebx
  41afd1:	in     al,dx
  41afd2:	jmp    0xb493:0xc3a09b91
  41afd9:	pop    edx
  41afda:	call   0x901f:0x318e3410
  41afe1:	xchg   edx,eax
  41afe2:	inc    ebp
  41afe3:	imul   ebx,DWORD PTR [ebx+0x58],0x2aaea836
  41afea:	ds push ss
  41afec:	in     eax,0xb8
  41afee:	(bad)  
  41afef:	dec    ebp
  41aff0:	daa    
  41aff1:	lahf   
  41aff2:	hlt    
  41aff3:	test   eax,0xf9728e1b
  41aff8:	popa   
  41aff9:	ficomp WORD PTR [edx-0x6d1cb092]
  41afff:	jmp    0xf7bd482e
  41b004:	cmp    BYTE PTR [edi+0x5d95a605],0x4d
  41b00b:	(bad)  
  41b00c:	rcl    BYTE PTR [ebp+0x6],1
  41b00f:	push   ebp
  41b010:	sub    eax,0xbe49af43
  41b015:	xchg   ebp,eax
  41b017:	mov    ecx,0xb951cee1
  41b01c:	cmp    eax,0x91567354
  41b021:	dec    esp
  41b022:	es popf 
  41b024:	mov    ch,0xac
  41b026:	sub    BYTE PTR [esi-0x18bf5e66],0x11
  41b02d:	dec    ebp
  41b02e:	cld    
  41b02f:	pushf  
  41b030:	aam    0xe6
  41b032:	dec    ebx
  41b033:	mov    ecx,0xe9bf27d
  41b038:	mov    esi,0x6548f064
  41b03d:	pop    ecx
  41b03e:	mov    al,ds:0x7dfb22df
  41b043:	les    edi,FWORD PTR [eax-0x383271b6]
  41b049:	aam    0x2d
  41b04b:	fwait
  41b04c:	loop   0x41afcf
  41b04e:	ss inc edi
  41b050:	mov    eax,0x547c0e9e
  41b055:	jns    0x41b038
  41b057:	push   cs
  41b058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b059:	mov    eax,0xa97e6912
  41b05e:	push   0x7a5e18b7
  41b063:	jl     0x41b011
  41b065:	nop
  41b066:	ficomp WORD PTR [esi+0x6af46216]
  41b06c:	(bad)  
  41b06d:	rol    ecx,1
  41b06f:	push   eax
  41b070:	(bad)  
  41b071:	xor    esp,DWORD PTR [edx+0x1d6c9118]
  41b077:	or     BYTE PTR [edx-0x75],bh
  41b07a:	scas   eax,DWORD PTR es:[edi]
  41b07b:	push   esi
  41b07c:	xchg   edi,eax
  41b07d:	enter  0x3f3c,0x55
  41b081:	pop    ecx
  41b082:	rcr    BYTE PTR [ebx],cl
  41b084:	or     al,BYTE PTR [edi]
  41b086:	jge    0x41b089
  41b088:	out    dx,eax
  41b089:	fsubr  st,st(0)
  41b08b:	jp     0x41b039
  41b08d:	jmp    0x755a:0x9e2377f2
  41b094:	jp     0x41b073
  41b096:	and    DWORD PTR [esi],esp
  41b098:	aam    0xf2
  41b09a:	jmp    0xd64f:0xbea4f2c3
  41b0a1:	inc    esi
  41b0a2:	pop    es
  41b0a3:	std    
  41b0a4:	adc    DWORD PTR cs:[edx+0x4c],ebp
  41b0a8:	ret    0xc184
  41b0ab:	add    eax,0xb2cd6981
  41b0b0:	or     BYTE PTR [ebx-0x343bb3a5],ah
  41b0b6:	mov    eax,0x557e1b4c
  41b0bb:	push   esp
  41b0bc:	fs mov edx,0xdd5639b4
  41b0c2:	adc    DWORD PTR [eax-0x620d13fc],ecx
  41b0c8:	inc    eax
  41b0c9:	int    0xad
  41b0cb:	or     BYTE PTR [ecx+0x4c],dh
  41b0ce:	fsub   QWORD PTR [edx-0x66]
  41b0d1:	jp     0x41b133
  41b0d3:	and    BYTE PTR [eax-0x54],ch
  41b0d6:	addr16 mov cl,0x18
  41b0d9:	retfw  0x7386
  41b0dd:	fist   DWORD PTR [eax]
  41b0df:	xchg   DWORD PTR [esi],edx
  41b0e1:	sbb    cl,BYTE PTR [edi]
  41b0e3:	jmp    0x41b0b5
  41b0e5:	leave  
  41b0e6:	push   cs
  41b0e7:	cdq    
  41b0e8:	jge    0x41b0d1
  41b0ea:	and    BYTE PTR [esi-0x45c523e8],0xaf
  41b0f1:	mov    BYTE PTR [edx],cl
  41b0f3:	cmp    al,dh
  41b0f5:	in     al,dx
  41b0f6:	imul   ecx,eax,0xfffffff4
  41b0f9:	or     al,0xea
  41b0fb:	pop    edx
  41b0fc:	stc    
  41b0fd:	fnsave [edx+0x77]
  41b100:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41b102:	ins    DWORD PTR es:[edi],dx
  41b103:	add    DWORD PTR [ecx-0x7],ebx
  41b106:	mov    bh,0xe6
  41b108:	js     0x41b0f8
  41b10a:	pop    ecx
  41b10b:	and    BYTE PTR [eax+0x40],dh
  41b10e:	aad    0x6f
  41b110:	(bad)  
  41b111:	and    esp,DWORD PTR ds:[ebp-0x20c576b1]
  41b118:	fisubr DWORD PTR [eax]
  41b11a:	cdq    
  41b11b:	leave  
  41b11c:	es popf 
  41b11e:	xchg   edx,eax
  41b11f:	(bad)  
  41b120:	je     0x41b0d5
  41b122:	add    al,0xd3
  41b124:	dec    esp
  41b125:	or     al,0x59
  41b127:	fs fs out dx,eax
  41b12a:	call   0xb9e8:0x66b35c0
  41b131:	xchg   ecx,eax
  41b132:	ss cs pop esp
  41b135:	aas    
  41b136:	das    
  41b137:	mov    ds:0x1a71ca4a,al
  41b13c:	add    ah,0x28
  41b13f:	nop
  41b140:	pop    edi
  41b141:	mov    ah,0xa2
  41b143:	(bad)  
  41b145:	sbb    bl,dl
  41b147:	movntq QWORD PTR ds:0xdfef8442,mm1
  41b14e:	push   es
  41b14f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b150:	adc    edx,DWORD PTR [ecx-0x30100882]
  41b156:	jmp    0xd473:0x50ed5ac
  41b15d:	mov    eax,ds:0xb6130aef
  41b162:	mov    eax,0x4c7cc644
  41b167:	retf   
  41b168:	sahf   
  41b169:	jmp    0x41b171
  41b16b:	and    eax,0x80fdf40c
  41b170:	js     0x41b131
  41b172:	fs pop esi
  41b174:	cs out 0xf4,eax
  41b177:	fimul  WORD PTR ds:0x67a6b296
  41b17d:	push   ecx
  41b17e:	leave  
  41b17f:	(bad)  
  41b180:	pop    ecx
  41b181:	dec    eax
  41b182:	dec    esi
  41b183:	pop    ebp
  41b184:	mov    esi,0xca6bd18d
  41b189:	push   ds
  41b18a:	nop
  41b18b:	dec    esi
  41b18c:	sbb    eax,0x33473065
  41b191:	mov    esi,0x978ab3ef
  41b196:	mov    ds:0xc70d32c5,eax
  41b19b:	xlat   BYTE PTR ds:[ebx]
  41b19c:	mov    ds:0xf6badd3c,al
  41b1a1:	xor    DWORD PTR [edx-0x57],edx
  41b1a4:	ins    DWORD PTR es:[edi],dx
  41b1a5:	inc    eax
  41b1a6:	aaa    
  41b1a7:	pushf  
  41b1a8:	xchg   edx,esi
  41b1aa:	xchg   esp,eax
  41b1ab:	aad    0x82
  41b1ad:	adc    eax,0x4d082c21
  41b1b2:	xchg   esi,eax
  41b1b3:	jnp    0x41b1cb
  41b1b5:	mov    edx,0x90f7f322
  41b1ba:	inc    esi
  41b1bb:	mov    ds:0xeddba9fe,eax
  41b1c0:	call   0x88409d09
  41b1c5:	lock push ebx
  41b1c7:	out    0x88,al
  41b1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ca:	dec    esp
  41b1cb:	(bad)  
  41b1cc:	cmp    eax,DWORD PTR [ebx+0x6]
  41b1cf:	pop    esi
  41b1d0:	rcr    ebp,1
  41b1d2:	push   ds
  41b1d3:	jmp    0x41b243
  41b1d5:	pop    esp
  41b1d6:	fsub   QWORD PTR [ecx-0x53]
  41b1d9:	mov    bh,0x8e
  41b1db:	pop    ebp
  41b1dc:	adc    edx,esi
  41b1de:	xor    edi,ebx
  41b1e0:	mov    BYTE PTR [edi+0x60],dh
  41b1e3:	ret    
  41b1e4:	jo     0x41b229
  41b1e6:	out    0x44,al
  41b1e8:	sbb    ebx,DWORD PTR [ebp-0x67]
  41b1eb:	bound  ebx,QWORD PTR [edi-0x4b659dcf]
  41b1f1:	ficom  DWORD PTR [eax+0xe]
  41b1f4:	push   edx
  41b1f5:	ficom  DWORD PTR [edx-0x57f70242]
  41b1fb:	cmp    BYTE PTR [ebx],ah
  41b1fd:	jne    0x41b26f
  41b1ff:	jns    0x41b1e3
  41b201:	scas   eax,DWORD PTR es:[edi]
  41b202:	dec    ebp
  41b203:	mov    dl,0xe7
  41b205:	outs   dx,DWORD PTR ds:[esi]
  41b206:	xchg   edi,eax
  41b207:	mov    edx,0x61e4e5b3
  41b20c:	in     al,dx
  41b20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20e:	test   BYTE PTR [edx+0x5e],dl
  41b211:	sti    
  41b212:	push   ebx
  41b213:	push   eax
  41b214:	aaa    
  41b215:	adc    ah,BYTE PTR [eax-0x5c]
  41b218:	(bad)  
  41b219:	sbb    DWORD PTR [esi],ecx
  41b21b:	mov    ds:0xc3375c7e,eax
  41b220:	xlat   BYTE PTR ds:[ebx]
  41b221:	popf   
  41b222:	not    BYTE PTR [eax+0x4c]
  41b225:	ja     0x41b265
  41b227:	mov    bl,0xb4
  41b229:	cld    
  41b22a:	fcomp  QWORD PTR ds:0x50dd7363
  41b230:	push   esi
  41b231:	dec    edi
  41b232:	frstor [edi]
  41b234:	xor    ch,0xfc
  41b237:	and    al,BYTE PTR [ebp-0x62]
  41b23a:	pop    edx
  41b23b:	or     BYTE PTR [esi-0x6b33bc1b],bl
  41b241:	jb     0x41b217
  41b243:	xchg   edx,eax
  41b244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b245:	or     al,0x93
  41b247:	pop    eax
  41b248:	xor    al,0xa0
  41b24a:	xor    eax,0xf22e7253
  41b24f:	adc    al,0x59
  41b251:	repnz dec ecx
  41b253:	xchg   esp,eax
  41b254:	jmp    0x41b273
  41b256:	sub    al,0xc3
  41b258:	cmp    dh,dh
  41b25a:	lock add eax,0x7c3b9116
  41b260:	test   al,0x2f
  41b262:	aas    
  41b263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b264:	das    
  41b265:	mov    ebx,0xa3a0a8e4
  41b26a:	add    dh,BYTE PTR [edi]
  41b26c:	or     DWORD PTR [ecx+edi*4],ebp
  41b26f:	sbb    ah,dl
  41b271:	xchg   DWORD PTR [eax+ebx*4],edi
  41b274:	adc    eax,0xaf16d9eb
  41b279:	and    bl,ch
  41b27b:	imul   edi,DWORD PTR [esi+0x2182e8d8],0x462804b1
  41b285:	push   edi
  41b286:	xor    eax,DWORD PTR [edx-0x1d]
  41b289:	mov    bl,0x9f
  41b28b:	jnp    0x41b2a2
  41b28d:	inc    eax
  41b28e:	rcl    DWORD PTR [edx+edx*8+0x43],cl
  41b292:	cmp    eax,0x9941e76d
  41b297:	pop    ebp
  41b298:	inc    esp
  41b299:	leave  
  41b29a:	sbb    esi,DWORD PTR [ecx+0x68cb6301]
  41b2a0:	or     edx,DWORD PTR [edx+0x7ff54c0]
  41b2a6:	mov    bh,0x5d
  41b2a8:	pop    eax
  41b2a9:	mov    DWORD PTR [eax],ebp
  41b2ab:	data16 fistp QWORD PTR [ebp-0x827617d]
  41b2b2:	pop    es
  41b2b3:	(bad)  [ecx+0x537b658a]
  41b2b9:	jmp    0x41b2ba
  41b2bb:	aad    0xab
  41b2bd:	mov    ds:0x73177cca,eax
  41b2c2:	(bad)
  41b2c5:	repnz fcom DWORD PTR [ebx-0x669c1776]
  41b2cc:	inc    edx
  41b2cd:	loopne 0x41b28e
  41b2cf:	inc    ebp
  41b2d0:	pop    edx
  41b2d1:	xchg   DWORD PTR [esi],edx
  41b2d3:	ret    0xfa86
  41b2d6:	nop
  41b2d7:	dec    ecx
  41b2d8:	sub    ch,dl
  41b2da:	cmp    al,0x62
  41b2dc:	ret    0xef5a
  41b2df:	cwde   
  41b2e0:	dec    edx
  41b2e1:	enter  0x6826,0xa9
  41b2e5:	pop    edi
  41b2e6:	xchg   esp,eax
  41b2e7:	bswap  ebx
  41b2e9:	pop    es
  41b2ea:	dec    esp
  41b2eb:	fild   WORD PTR ds:0xf654968d
  41b2f1:	pop    eax
  41b2f2:	pop    ds
  41b2f3:	out    0xf4,al
  41b2f5:	jb     0x41b315
  41b2f7:	cmp    cl,bh
  41b2f9:	out    0x79,al
  41b2fb:	mov    ah,ch
  41b2fd:	jle    0x41b36d
  41b2ff:	mov    al,0x86
  41b301:	ins    DWORD PTR es:[edi],dx
  41b302:	adc    eax,0xb959725c
  41b307:	xor    DWORD PTR [ebp+ebp*1+0x44b06ec9],ecx
  41b30e:	cwde   
  41b30f:	jo     0x41b389
  41b311:	cmp    DWORD PTR [ecx+0x3a],edi
  41b314:	jg     0x41b302
  41b316:	pusha  
  41b317:	addr16 ss mov eax,0x79bb0563
  41b31e:	push   esp
  41b31f:	aaa    
  41b320:	pop    edx
  41b321:	aaa    
  41b322:	fisttp QWORD PTR [esi+ecx*8]
  41b325:	mov    DWORD PTR [edi],ebx
  41b327:	fnstsw WORD PTR [eax]
  41b329:	dec    edi
  41b32a:	or     eax,0xe906b877
  41b32f:	sub    al,0x49
  41b331:	mov    dh,0x72
  41b333:	jbe    0x41b2ce
  41b335:	inc    esi
  41b336:	(bad)  
  41b337:	lods   eax,DWORD PTR ds:[esi]
  41b338:	scas   al,BYTE PTR es:[edi]
  41b339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b33a:	push   eax
  41b33b:	add    dh,dh
  41b33d:	popf   
  41b33e:	xor    al,ah
  41b340:	pop    ss
  41b341:	or     edi,ebx
  41b343:	adc    DWORD PTR [edx-0x42],esp
  41b346:	jmp    DWORD PTR [ebp-0x1c]
  41b349:	call   0xfaa5:0x9f3196ca
  41b350:	xor    BYTE PTR [edi-0x48],dl
  41b353:	repnz cmp ch,BYTE PTR [eax-0x3fc2e5e6]
  41b35a:	mov    bl,0xaf
  41b35c:	call   0x40f8:0x48da83f5
  41b363:	pop    ss
  41b364:	fnsetpm(287 only) 
  41b366:	sbb    al,al
  41b368:	jbe    0x41b318
  41b36a:	fst    DWORD PTR [esp+edi*1+0x61]
  41b36e:	xor    DWORD PTR [edx],esi
  41b370:	push   ss
  41b371:	mov    dh,0xa3
  41b373:	out    dx,al
  41b374:	xchg   DWORD PTR [esp+ebx*8-0x300cd90e],edx
  41b37b:	pop    ss
  41b37c:	inc    esi
  41b37d:	jle    0x41b3e8
  41b37f:	popf   
  41b380:	or     DWORD PTR [esp+eiz*8-0x25],0xffffffa7
  41b385:	pop    ebx
  41b386:	cmp    DWORD PTR [edx],0xffffffa1
  41b389:	cld    
  41b38a:	stc    
  41b38b:	jle    0x41b318
  41b38d:	jmp    0x419e:0xa1262c79
  41b394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b395:	xor    BYTE PTR [edx],cl
  41b397:	nop
  41b398:	inc    eax
  41b399:	imul   edi,DWORD PTR [ebx-0x69a997e0],0xffffffff
  41b3a0:	leave  
  41b3a1:	call   0x87a4:0xb50c206c
  41b3a8:	and    dl,BYTE PTR [ecx+eiz*2]
  41b3ab:	imul   ecx,DWORD PTR [ebp*8+0x4b56da4d],0x357c08ca
  41b3b6:	and    ecx,DWORD PTR ds:0xb96d4644
  41b3bc:	jmp    0x41b353
  41b3be:	aad    0xca
  41b3c0:	stc    
  41b3c1:	cld    
  41b3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c3:	cld    
  41b3c4:	stos   BYTE PTR es:[edi],al
  41b3c5:	and    DWORD PTR [ebx-0x77918571],edx
  41b3cb:	push   sp
  41b3cd:	jbe    0x41b40a
  41b3cf:	and    eax,0xe3c39d04
  41b3d4:	adc    BYTE PTR [ebx-0x65],bl
  41b3d7:	sbb    ebp,DWORD PTR cs:[edx]
  41b3da:	push   ebx
  41b3db:	out    dx,al
  41b3dc:	or     dl,BYTE PTR [ecx]
  41b3de:	test   BYTE PTR [ecx+edi*1+0x11],0x7f
  41b3e3:	adc    dh,BYTE PTR [esi+0x64759b46]
  41b3e9:	jp     0x41b3cc
  41b3eb:	mov    ss:0xabcd43cf,al
  41b3f1:	dec    ecx
  41b3f2:	pop    es
  41b3f3:	lea    esi,[esi]
  41b3f5:	push   es
  41b3f6:	adc    bl,BYTE PTR [ebx]
  41b3f8:	jmp    0xef4a:0xa5588788
  41b3ff:	mov    eax,ds:0x1270a443
  41b404:	sti    
  41b405:	add    eax,ebp
  41b407:	aas    
  41b408:	inc    esi
  41b409:	mov    dl,BYTE PTR [edi+eax*8]
  41b40c:	sahf   
  41b40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b40e:	push   ds
  41b40f:	test   eax,0x2be5fe5c
  41b414:	ret    
  41b415:	das    
  41b416:	add    al,0x9b
  41b418:	out    0xad,al
  41b41a:	jecxz  0x41b481
  41b41c:	sub    DWORD PTR [edx-0x6a044596],edi
  41b422:	jl     0x41b3c6
  41b424:	ins    DWORD PTR es:[edi],dx
  41b425:	dec    esi
  41b426:	jbe    0x41b456
  41b428:	jno    0x41b3fa
  41b42a:	stc    
  41b42b:	mov    ebx,0xc4d6e54a
  41b430:	fdivr  QWORD PTR [ebx+ebp*8+0x9fd3601]
  41b437:	push   0xd6c0536b
  41b43c:	jno    0x41b48a
  41b43e:	es mov al,0xf7
  41b441:	int    0x4b
  41b443:	jo     0x41b49e
  41b445:	or     DWORD PTR [edi-0x1fb235cc],0x6f92537e
  41b44f:	aad    0xde
  41b451:	cmp    al,0x97
  41b453:	xchg   esi,eax
  41b454:	sbb    ah,0xd2
  41b457:	les    esi,FWORD PTR [ecx]
  41b459:	inc    ebx
  41b45a:	nop
  41b45b:	pop    esi
  41b45c:	mov    ah,0xa1
  41b45e:	sub    DWORD PTR [edi+0x3b40585f],edi
  41b464:	xchg   ebx,eax
  41b465:	xor    bl,BYTE PTR [edx-0x27758793]
  41b46b:	xchg   esi,eax
  41b46c:	xchg   DWORD PTR [esp+edi*1-0x61],ecx
  41b470:	pop    ss
  41b471:	popa   
  41b472:	xor    dl,bh
  41b474:	cwde   
  41b475:	sbb    DWORD PTR [ebp+0x67],ecx
  41b478:	(bad)  
  41b479:	cmp    al,BYTE PTR [ebx-0x629ced93]
  41b47f:	test   eax,0xaa1d3190
  41b484:	out    dx,eax
  41b485:	jg     0x41b4c6
  41b487:	test   BYTE PTR [esi+ebx*4+0x4e],0x79
  41b48c:	js     0x41b4e7
  41b48e:	outs   dx,BYTE PTR ds:[esi]
  41b48f:	scas   eax,DWORD PTR es:[edi]
  41b490:	inc    edi
  41b491:	cdq    
  41b492:	fdivp  st(7),st
  41b494:	sbb    DWORD PTR [eax+0x5287257c],esi
  41b49a:	mov    edi,0xb0fd0f6b
  41b49f:	inc    eax
  41b4a0:	lods   eax,DWORD PTR ds:[esi]
  41b4a1:	jp     0x41b43a
  41b4a3:	stos   DWORD PTR es:[edi],eax
  41b4a4:	or     al,0xf1
  41b4a6:	mov    eax,DWORD PTR [edi+0x2f]
  41b4a9:	popf   
  41b4aa:	ja     0x41b4df
  41b4ac:	adc    bh,BYTE PTR [esi]
  41b4ae:	mov    dh,0x9a
  41b4b0:	xchg   edx,eax
  41b4b1:	clc    
  41b4b2:	push   esp
  41b4b3:	jmp    0x8fa7:0xdfec3c60
  41b4ba:	adc    cl,BYTE PTR [edx-0x5d]
  41b4bd:	icebp  
  41b4be:	imul   ecx,DWORD PTR [ebp+0x51c6755c],0xffffffe5
  41b4c5:	sub    al,0x54
  41b4c7:	and    DWORD PTR ds:0xd54eaf1,ebp
  41b4cd:	or     cl,BYTE PTR ds:0x99368a14
  41b4d3:	dec    edi
  41b4d4:	int3   
  41b4d5:	nop
  41b4d6:	and    cl,BYTE PTR [esi-0xc]
  41b4d9:	mov    eax,0x13ac97c4
  41b4de:	sti    
  41b4df:	push   esp
  41b4e0:	loop   0x41b468
  41b4e2:	jle    0x41b50d
  41b4e4:	daa    
  41b4e5:	ret    
  41b4e6:	nop
  41b4e7:	ins    DWORD PTR es:[edi],dx
  41b4e8:	lods   al,BYTE PTR ds:[esi]
  41b4e9:	or     al,0x6f
  41b4eb:	pushf  
  41b4ec:	push   esi
  41b4ed:	lock mov ah,0xdc
  41b4f0:	xchg   BYTE PTR [ebx],dh
  41b4f2:	mov    esi,0xd1012801
  41b4f7:	je     0x41b578
  41b4f9:	lods   eax,DWORD PTR ds:[esi]
  41b4fa:	setae  BYTE PTR [ecx-0xf]
  41b4fe:	cs pushf 
  41b500:	xor    ch,0x4b
  41b503:	mov    esi,0x83f4bdab
  41b508:	ror    BYTE PTR [ebp-0x6e],0xdc
  41b50c:	mov    esi,0x62d08dd8
  41b511:	pop    edx
  41b512:	lea    edx,[edx+ecx*1-0x75a8ec26]
  41b519:	push   es
  41b51a:	dec    edi
  41b51b:	jae    0x41b57d
  41b51d:	pop    es
  41b51e:	mov    bl,0x4d
  41b520:	stos   BYTE PTR es:[edi],al
  41b521:	popf   
  41b522:	push   edi
  41b523:	push   edi
  41b524:	(bad)  
  41b525:	(bad)  
  41b526:	pop    ebx
  41b527:	gs jle 0x41b536
  41b52a:	sahf   
  41b52b:	retf   
  41b52c:	cmp    ah,BYTE PTR [ebx+0x44493793]
  41b532:	leave  
  41b533:	adc    eax,0x7c99a910
  41b538:	lock pop ss
  41b53a:	xlat   BYTE PTR ds:[ebx]
  41b53b:	bound  esp,QWORD PTR [edi]
  41b53d:	xor    BYTE PTR [edi+0x3],dl
  41b540:	in     al,0x4e
  41b542:	jle    0x41b4ca
  41b544:	sub    BYTE PTR [ecx-0x62b547cd],cl
  41b54a:	out    0x61,eax
  41b54c:	jmp    0x41b4e4
  41b54e:	out    0x2e,eax
  41b550:	inc    eax
  41b551:	mov    dh,0xb5
  41b553:	std    
  41b554:	pop    ebx
  41b555:	inc    edx
  41b556:	outs   dx,BYTE PTR ds:[esi]
  41b557:	ret    
  41b558:	inc    edx
  41b559:	cld    
  41b55a:	lahf   
  41b55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b55c:	jl     0x41b53e
  41b55e:	fild   DWORD PTR [ecx-0x2c]
  41b561:	cmp    eax,0x8d1e6bff
  41b566:	std    
  41b567:	pop    ds
  41b568:	push   cs
  41b569:	adc    dl,BYTE PTR [esi]
  41b56b:	aam    0xdc
  41b56d:	daa    
  41b56e:	add    edi,DWORD PTR [edx]
  41b570:	imul   ebx,edx,0xdc86a729
  41b576:	add    cl,bl
  41b578:	and    esp,DWORD PTR [ecx-0x6afa1390]
  41b57e:	nop
  41b57f:	outs   dx,BYTE PTR ds:[esi]
  41b580:	popf   
  41b581:	xchg   edi,eax
  41b582:	(bad)  
  41b583:	fwait
  41b584:	cld    
  41b585:	pushf  
  41b586:	in     al,0x20
  41b588:	ins    DWORD PTR es:[edi],dx
  41b589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b58a:	(bad)  
  41b58b:	jge    0x41b52c
  41b58d:	das    
  41b58e:	stos   BYTE PTR es:[edi],al
  41b58f:	jne    0x41b564
  41b591:	in     eax,0xe
  41b593:	inc    esp
  41b594:	sbb    eax,0xc5cd4795
  41b599:	pop    esi
  41b59a:	in     al,dx
  41b59b:	sbb    ch,BYTE PTR [edx+0x3]
  41b59e:	jmp    0x41b579
  41b5a0:	mov    bl,0x8
  41b5a2:	cli    
  41b5a3:	ja     0x41b561
  41b5a5:	fbld   TBYTE PTR ds:0x1987f06b
  41b5ab:	sbb    al,0x85
  41b5ad:	(bad)  
  41b5af:	or     eax,ecx
  41b5b1:	jne    0x41b598
  41b5b3:	mov    edx,0x7251d723
  41b5b8:	push   ds
  41b5b9:	cmp    eax,DWORD PTR [edi-0x36]
  41b5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5bd:	push   eax
  41b5be:	jmp    0x61a4:0x8ea86a75
  41b5c5:	addr16 push ebx
  41b5c7:	inc    edx
  41b5c8:	dec    edx
  41b5c9:	(bad)  
  41b5cb:	inc    ecx
  41b5cc:	in     eax,0x25
  41b5ce:	or     al,0x1d
  41b5d0:	dec    ecx
  41b5d1:	pop    edx
  41b5d2:	xlat   BYTE PTR ds:[ebx]
  41b5d3:	pop    esp
  41b5d4:	sbb    DWORD PTR [ebx],0x49e62aa1
  41b5da:	call   0x23c3:0x1149a8f6
  41b5e1:	enter  0xd1b8,0x4c
  41b5e5:	adc    DWORD PTR ds:[ecx+ebx*2],0xffffff85
  41b5ea:	mov    dh,0x85
  41b5ec:	mov    WORD PTR [ecx],ds
  41b5ee:	push   ss
  41b5ef:	test   al,0xb4
  41b5f1:	cmp    DWORD PTR [eax-0x67],0x789d095d
  41b5f8:	adc    al,BYTE PTR [edx-0x1d4e49be]
  41b5fe:	cmp    BYTE PTR [edi+eiz*1-0x52d7e0c7],dh
  41b605:	daa    
  41b606:	scas   al,BYTE PTR es:[edi]
  41b607:	xchg   ebp,eax
  41b608:	stc    
  41b609:	popa   
  41b60a:	inc    ebx
  41b60b:	sub    eax,0x4b17bdb3
  41b610:	or     DWORD PTR [edi-0x4e3af921],ecx
  41b616:	fdivr  DWORD PTR [eax+edi*2-0x5bd6c8cd]
  41b61d:	(bad)  
  41b61e:	cwde   
  41b61f:	out    0x9c,al
  41b621:	iret   
  41b622:	scas   eax,DWORD PTR es:[edi]
  41b623:	jnp    0x41b602
  41b625:	aam    0x62
  41b627:	mov    edi,ecx
  41b629:	int    0xa0
  41b62b:	fdivr  QWORD PTR [edx]
  41b62d:	push   es
  41b62e:	icebp  
  41b62f:	push   0xaf102dcc
  41b634:	ret    0x5840
  41b637:	adc    eax,0x5b7e507
  41b63c:	popa   
  41b63d:	cmp    DWORD PTR [ebp-0x7c],eax
  41b640:	ss dec edx
  41b642:	jne    0x41b5c7
  41b644:	pop    ecx
  41b645:	in     eax,0x2d
  41b647:	add    ch,0x43
  41b64a:	sub    ah,ah
  41b64c:	inc    ebp
  41b64d:	inc    edi
  41b64e:	mov    esp,0x19e8aa9e
  41b653:	hlt    
  41b654:	out    0xe7,al
  41b656:	add    dh,BYTE PTR [ebx]
  41b658:	or     BYTE PTR [edi],cl
  41b65a:	mov    esi,0xfda9b844
  41b65f:	es into 
  41b661:	fisub  WORD PTR [ebx]
  41b663:	cmp    BYTE PTR [edx+0x61],bh
  41b666:	sysexit 
  41b668:	push   0x8fd96432
  41b66d:	inc    edx
  41b66e:	xchg   ebx,eax
  41b66f:	xor    bh,dh
  41b671:	cmp    ecx,edi
  41b673:	gs cs jae 0x41b644
  41b677:	dec    esi
  41b678:	sub    ah,dh
  41b67a:	in     eax,dx
  41b67b:	push   ss
  41b67c:	call   0xbb1f831
  41b681:	xchg   DWORD PTR [eax+0x71263c76],edx
  41b687:	adc    eax,0x78675e93
  41b68c:	jge    0x41b69d
  41b68e:	push   ebx
  41b68f:	lds    edi,FWORD PTR [edx]
  41b691:	dec    esp
  41b692:	data16 jb 0x41b6a3
  41b695:	sub    eax,0x9847b860
  41b69a:	mov    ecx,0x95aae680
  41b69f:	cld    
  41b6a0:	jno    0x41b694
  41b6a2:	adc    esi,DWORD PTR [edx+0x46805913]
  41b6a8:	test   DWORD PTR [esi+0x64],edx
  41b6ab:	ja     0x41b661
  41b6ad:	cmp    eax,0xf3770500
  41b6b2:	jle    0x41b6cf
  41b6b4:	out    dx,eax
  41b6b5:	mov    dl,0x35
  41b6b7:	mov    edi,0xb047fa65
  41b6bc:	mov    ah,0x2e
  41b6be:	(bad)  
  41b6bf:	sbb    al,BYTE PTR [ecx+eiz*4-0x7c6bc7e8]
  41b6c6:	jle    0x41b6a1
  41b6c8:	sub    edi,DWORD PTR [edi-0x31b61ff0]
  41b6ce:	mov    bl,0x76
  41b6d0:	fnsave [ecx+0x18169f6]
  41b6d6:	cmp    BYTE PTR [ecx+0x66],dh
  41b6d9:	in     al,0x5a
  41b6db:	imul   ebp,DWORD PTR [esi-0x6ecf3cc7],0x7f
  41b6e2:	repz adc al,0x12
  41b6e5:	retf   
  41b6e6:	xchg   esi,eax
  41b6e7:	xor    eax,0x3f0c0f25
  41b6ec:	pop    ss
  41b6ed:	in     al,0x76
  41b6ef:	arpl   WORD PTR [esi+0x3c],bp
  41b6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6f3:	popa   
  41b6f4:	dec    ecx
  41b6f5:	mov    ecx,0x74c9e91b
  41b6fa:	outs   dx,DWORD PTR ds:[esi]
  41b6fb:	or     al,0x30
  41b6fd:	rol    BYTE PTR [ebx-0x4],cl
  41b700:	mov    edi,0x6ce210a6
  41b705:	idiv   BYTE PTR [edx]
  41b707:	pop    ds
  41b708:	fisttp WORD PTR [edx]
  41b70a:	inc    ebx
  41b70b:	mov    ebx,DWORD PTR [ecx]
  41b70d:	mov    es,WORD PTR ds:0x9574d133
  41b713:	inc    esi
  41b714:	ds dec edi
  41b716:	(bad)  
  41b717:	div    ebx
  41b719:	out    dx,al
  41b71a:	fnstsw WORD PTR [ecx-0x35]
  41b71d:	or     al,0xbc
  41b71f:	gs sub ecx,ebp
  41b722:	enter  0xff6a,0xd
  41b726:	aas    
  41b727:	mov    eax,0xe2512746
  41b72c:	retf   0x2ec4
  41b72f:	je     0x41b739
  41b731:	leave  
  41b732:	fmul   QWORD PTR [ecx+0x428607a4]
  41b738:	ficomp WORD PTR [esi+0x13]
  41b73b:	mov    bh,0x26
  41b73d:	mov    bh,0xa2
  41b73f:	and    BYTE PTR [ebx+0x24],bl
  41b742:	icebp  
  41b743:	call   0x7397:0x27211ec6
  41b74a:	test   DWORD PTR [ecx+ebp*4-0x5ce54c69],ecx
  41b751:	jecxz  0x41b75d
  41b753:	dec    eax
  41b754:	ror    DWORD PTR [eax],0x8d
  41b757:	pop    ss
  41b758:	lea    ebx,[edi]
  41b75a:	fisub  DWORD PTR [edi-0x6b53a5b6]
  41b760:	mov    edx,0x3227e680
  41b765:	jnp    0x41b756
  41b767:	push   ecx
  41b768:	cdq    
  41b769:	ja     0x41b7b8
  41b76b:	in     al,dx
  41b76c:	iret   
  41b76d:	mov    ?,WORD PTR [eax]
  41b76f:	xor    edx,edi
  41b771:	fsubr  QWORD PTR [edi+0x1de487a9]
  41b777:	fldenv ds:0xb844f77d
  41b77d:	addr16 das 
  41b77f:	out    dx,al
  41b780:	xor    DWORD PTR cs:[ebp-0x31],esp
  41b784:	mov    al,0xa9
  41b786:	xchg   edi,eax
  41b787:	in     eax,0x6b
  41b789:	sbb    ah,cl
  41b78b:	sbb    DWORD PTR [esi-0x608281cc],edx
  41b791:	mov    BYTE PTR [eax+0x77d9f007],dl
  41b797:	mov    esi,0x3e1c0ff7
  41b79c:	out    0x7d,al
  41b79e:	jmp    0x41b7b3
  41b7a0:	faddp  st(5),st
  41b7a2:	pop    ebx
  41b7a3:	adc    ebp,DWORD PTR [ecx-0x2ae110a1]
  41b7a9:	out    dx,al
  41b7aa:	(bad)  
  41b7ab:	or     eax,0x4174e302
  41b7b0:	test   ebp,eax
  41b7b2:	cmp    BYTE PTR ds:0x845bda84,ah
  41b7b8:	loope  0x41b7f9
  41b7ba:	jo     0x41b74f
  41b7bc:	imul   ecx,DWORD PTR ds:0x474eeca4,0x6bdded0c
  41b7c6:	mov    ds:0x6f660d38,eax
  41b7cb:	pop    edi
  41b7cc:	inc    esp
  41b7cd:	pop    edi
  41b7ce:	test   eax,0xdab755de
  41b7d3:	xor    BYTE PTR [eax-0x51e6e1d4],0xb7
  41b7da:	fcomp  DWORD PTR [eax]
  41b7dc:	xchg   ebp,edx
  41b7de:	pop    ss
  41b7df:	dec    edi
  41b7e0:	mov    esi,0x62b8306d
  41b7e5:	xor    ch,BYTE PTR [ecx+0x43997fdc]
  41b7eb:	xchg   ecx,eax
  41b7ec:	adc    eax,0xe452c753
  41b7f1:	jge    0x41b805
  41b7f3:	into   
  41b7f4:	xchg   DWORD PTR [ebx+esi*8+0x2],ecx
  41b7f8:	sub    ebp,esi
  41b7fa:	je     0x41b7e4
  41b7fc:	sub    eax,DWORD PTR [di+0x59]
  41b800:	xchg   DWORD PTR [esi*1-0x5b427f71],ecx
  41b807:	mov    ecx,DWORD PTR [esi]
  41b809:	push   ebp
  41b80a:	pop    eax
  41b80b:	mov    ebx,0xd79569f4
  41b810:	lods   al,BYTE PTR ds:[esi]
  41b811:	dec    ebp
  41b812:	int    0x69
  41b814:	inc    ebp
  41b815:	in     al,dx
  41b816:	inc    esp
  41b817:	push   ecx
  41b818:	mov    ds:0x3965b55b,al
  41b81d:	sub    al,0xb1
  41b81f:	mov    eax,ds:0x17b52c22
  41b824:	push   ds
  41b825:	ja     0x41b7fe
  41b827:	mov    bh,0x1a
  41b829:	jmp    0x41b804
  41b82b:	sti    
  41b82c:	jl     0x41b7af
  41b82e:	xchg   ecx,eax
  41b82f:	fcomp  QWORD PTR [esi+0x35c02263]
  41b835:	ss ret 
  41b837:	scas   al,BYTE PTR es:[edi]
  41b838:	push   ss
  41b839:	pop    edi
  41b83a:	mov    ah,al
  41b83c:	xchg   ecx,eax
  41b83d:	jmp    FWORD PTR [eax]
  41b83f:	jne    0x41b852
  41b841:	pop    ds
  41b842:	dec    edx
  41b843:	adc    DWORD PTR [edx],esp
  41b845:	ins    DWORD PTR es:[edi],dx
  41b846:	loop   0x41b841
  41b848:	inc    edx
  41b849:	mov    eax,ds:0x317a9d46
  41b84e:	idiv   BYTE PTR [ecx-0x2b]
  41b851:	push   esp
  41b852:	loop   0x41b8cd
  41b854:	div    BYTE PTR [ebx+0x57]
  41b857:	and    bh,BYTE PTR [ebp-0x4d]
  41b85a:	sub    bh,ch
  41b85c:	bound  esi,QWORD PTR [edx+0x559e5211]
  41b862:	mov    esi,edx
  41b864:	jmp    0xca52191f
  41b869:	lods   eax,DWORD PTR ds:[esi]
  41b86a:	cmp    edx,esp
  41b86c:	push   eax
  41b86d:	sub    esi,DWORD PTR [ebp-0x7277e374]
  41b873:	cmp    BYTE PTR [edi],bh
  41b875:	cmp    ecx,0xa444dedb
  41b87b:	push   ebx
  41b87c:	out    0xa6,eax
  41b87e:	loop   0x41b818
  41b880:	push   ebx
  41b881:	fsubr  DWORD PTR [edx]
  41b883:	mov    ebx,0x48a85ab8
  41b888:	jl     0x41b8e0
  41b88a:	jo     0x41b8ac
  41b88c:	jne    0x41b8ed
  41b88e:	jno    0x41b901
  41b890:	or     al,BYTE PTR [ebp+0x640fac30]
  41b896:	stc    
  41b897:	or     eax,0x78b87fcc
  41b89c:	shr    BYTE PTR [edi+0x14],1
  41b89f:	(bad)  
  41b8a0:	jb     0x41b8ef
  41b8a2:	fsub   QWORD PTR [ebp+0x75]
  41b8a5:	sub    eax,0x49b97584
  41b8aa:	shl    BYTE PTR [edx+0x33ee4c02],cl
  41b8b0:	xor    al,0x80
  41b8b2:	add    ebp,DWORD PTR [edx]
  41b8b4:	out    0x96,al
  41b8b6:	jmp    0x9879a198
  41b8bb:	pop    esp
  41b8bc:	or     al,0xfe
  41b8be:	jg     0x41b900
  41b8c0:	push   edx
  41b8c1:	fld    QWORD PTR [ecx-0x75]
  41b8c4:	sti    
  41b8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c6:	xchg   esi,eax
  41b8c7:	mov    gs,WORD PTR [eax+0x194ff8d7]
  41b8cd:	sti    
  41b8ce:	sub    al,0x99
  41b8d0:	cld    
  41b8d1:	ins    DWORD PTR es:[edi],dx
  41b8d2:	clc    
  41b8d3:	loop   0x41b944
  41b8d5:	sbb    BYTE PTR [ebx+0x3],dh
  41b8d8:	jbe    0x41b865
  41b8da:	call   0x7740:0x79abb48b
  41b8e1:	jb     0x41b91f
  41b8e3:	arpl   WORD PTR [ecx-0x32bcf70c],si
  41b8e9:	ret    0x2df9
  41b8ec:	retf   0xb13e
  41b8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8f0:	fs pop edx
  41b8f2:	mov    WORD PTR [ebx],ss
  41b8f4:	ins    DWORD PTR es:[edi],dx
  41b8f5:	popa   
  41b8f6:	push   0xffffff80
  41b8f8:	jl     0x41b88c
  41b8fa:	and    esp,DWORD PTR [esi]
  41b8fc:	bound  ecx,QWORD PTR [edx+0x6ccab427]
  41b902:	jmp    0xe426d61d
  41b907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b908:	mov    ds:0x2e6489cc,al
  41b90d:	or     al,0x8f
  41b90f:	in     eax,0x11
  41b911:	jae    0x41b973
  41b913:	aam    0x11
  41b915:	repz mov edx,0x7a644468
  41b91b:	xabort 0x89
  41b91e:	dec    eax
  41b91f:	arpl   WORD PTR [ebx],sp
  41b921:	mov    ecx,0x5b17e234
  41b926:	inc    eax
  41b927:	std    
  41b928:	shr    DWORD PTR [ebx],0x2
  41b92b:	retf   0xf431
  41b92e:	jge    0x41b8e8
  41b930:	dec    ecx
  41b931:	jb     0x41b954
  41b933:	xchg   ebx,eax
  41b934:	mov    ah,0x8f
  41b936:	into   
  41b937:	push   ecx
  41b938:	and    al,0x1a
  41b93a:	call   0xe7b1e5c6
  41b93f:	aaa    
  41b940:	mov    edx,0x6330c063
  41b945:	mov    bl,0xdc
  41b947:	push   ds
  41b948:	cdq    
  41b949:	jp     0x41b99f
  41b94b:	cmp    BYTE PTR [esi-0x27f1b9d],dl
  41b951:	dec    ecx
  41b952:	imul   BYTE PTR ds:0xc700d88e
  41b958:	imul   eax,DWORD PTR [edx-0x75f9a11],0xabbe6605
  41b962:	rcl    BYTE PTR [ecx],cl
  41b964:	stc    
  41b965:	ins    BYTE PTR es:[edi],dx
  41b966:	aam    0xfd
  41b968:	jbe    0x41b94a
  41b96a:	push   esi
  41b96b:	push   edi
  41b96c:	add    ebx,ebx
  41b96e:	jmp    0x41b9d3
  41b970:	sbb    edi,DWORD PTR [edi+0x12]
  41b973:	jge    0x41b93f
  41b975:	out    0x51,eax
  41b977:	ret    
  41b978:	loopne 0x41b937
  41b97a:	push   ss
  41b97b:	mov    bl,0xd3
  41b97d:	cwde   
  41b97e:	mov    cl,0xdc
  41b980:	mov    ah,0xf
  41b982:	xchg   esi,eax
  41b983:	sahf   
  41b984:	jl     0x41b928
  41b986:	es xchg edx,eax
  41b988:	js     0x41b912
  41b98a:	mov    cl,0xda
  41b98c:	fld    TBYTE PTR [edx-0x168806bc]
  41b992:	fwait
  41b993:	adc    ax,0x5d79
  41b997:	inc    eax
  41b998:	xchg   ecx,eax
  41b999:	ins    BYTE PTR es:[edi],dx
  41b99a:	jmp    0x4dbf:0x24d48ba2
  41b9a1:	add    dl,BYTE PTR [ebp*4+0x61c5d710]
  41b9a8:	aas    
  41b9a9:	jbe    0x41b9a0
  41b9ab:	js     0x41b99d
  41b9ad:	aad    0x5f
  41b9af:	mov    ds:0xd1180389,eax
  41b9b4:	ds ins BYTE PTR es:[edi],dx
  41b9b6:	rol    BYTE PTR [eax+0x4d],0x57
  41b9ba:	jo     0x41b9f5
  41b9bc:	sub    al,dh
  41b9be:	cmc    
  41b9bf:	inc    edi
  41b9c0:	mov    al,0x7e
  41b9c2:	pop    ebx
  41b9c3:	cmp    ch,bh
  41b9c5:	pop    ds
  41b9c6:	clc    
  41b9c7:	xor    eax,0xefe9b6a7
  41b9cc:	xor    eax,0xc7ab691d
  41b9d1:	sahf   
  41b9d2:	cmp    eax,0x570a34
  41b9d7:	cmp    BYTE PTR [eax],0xa3
  41b9da:	fsub   DWORD PTR [ebx-0x7f6661f7]
  41b9e0:	adc    eax,0xf0f2094d
  41b9e5:	adc    esi,DWORD PTR [ebx+0x22]
  41b9e8:	out    dx,eax
  41b9e9:	hlt    
  41b9ea:	lgs    ebx,FWORD PTR [ecx]
  41b9ed:	mov    esp,0xcf83ac06
  41b9f2:	orps   xmm2,xmm1
  41b9f5:	scas   eax,DWORD PTR es:[edi]
  41b9f6:	jmp    0x3dbff11e
  41b9fb:	and    BYTE PTR [edi-0xa],ah
  41b9fe:	mov    eax,0x927d2433
  41ba03:	adc    al,0xbf
  41ba05:	cmp    eax,0x936dea87
  41ba0a:	pop    es
  41ba0b:	mov    DWORD PTR [ecx-0x7c],edx
  41ba0e:	add    al,0xeb
  41ba10:	jl     0x41ba20
  41ba12:	mov    dl,0x5
  41ba14:	mov    esp,0x416ab396
  41ba19:	xchg   DWORD PTR [edi+edx*2+0x27],edi
  41ba1d:	inc    esi
  41ba1e:	cld    
  41ba1f:	and    BYTE PTR [esi],bl
  41ba21:	js     0x41ba34
  41ba23:	jns    0x41ba84
  41ba25:	ficom  DWORD PTR [eax]
  41ba27:	(bad)  
  41ba28:	shl    DWORD PTR [edx-0x8],cl
  41ba2b:	ds dec esp
  41ba2d:	imul   eax,DWORD PTR [ebx+0x6f00f8e3],0x71
  41ba34:	bnd jl 0x41ba42
  41ba37:	in     eax,dx
  41ba38:	mov    al,ds:0xc65110e5
  41ba3d:	in     eax,0xed
  41ba3f:	test   eax,0xd14f3699
  41ba44:	fidivr DWORD PTR [esi+0x6e]
  41ba47:	fcomi  st,st(3)
  41ba49:	(bad)  
  41ba4a:	out    0x68,eax
  41ba4c:	mov    ah,0x6d
  41ba4e:	add    al,0xc2
  41ba50:	sbb    bl,BYTE PTR [esi]
  41ba52:	sub    DWORD PTR [ecx+0x55],edx
  41ba55:	or     ecx,eax
  41ba57:	aas    
  41ba58:	dec    ebp
  41ba59:	inc    esp
  41ba5a:	pusha  
  41ba5b:	gs or  al,0xa4
  41ba5e:	cmp    BYTE PTR [ebx-0x17],dh
  41ba61:	cld    
  41ba62:	xor    DWORD PTR [edx+0x3f],edx
  41ba65:	jo     0x41ba49
  41ba67:	addr16 dec esi
  41ba69:	mov    ss,WORD PTR [edx-0x16]
  41ba6c:	fbld   TBYTE PTR [ecx]
  41ba6e:	xchg   ebp,eax
  41ba6f:	hlt    
  41ba70:	add    al,0x23
  41ba72:	imul   eax,esi,0x4f61fbb1
  41ba78:	into   
  41ba79:	dec    esp
  41ba7a:	cld    
  41ba7b:	stc    
  41ba7c:	addr16 xor eax,0x306980f1
  41ba82:	repz mov cl,0xd2
  41ba85:	fadd   QWORD PTR [eax*4+0x50919765]
  41ba8c:	cld    
  41ba8d:	stos   DWORD PTR es:[edi],eax
  41ba8e:	bnd jnp 0x41ba7d
  41ba91:	out    dx,eax
  41ba92:	adc    al,0x45
  41ba94:	imul   edi,esp,0xffffff89
  41ba97:	neg    DWORD PTR ds:0xc244ac44
  41ba9d:	std    
  41ba9e:	shl    BYTE PTR [ebx+0x1b],0x3a
  41baa2:	arpl   WORD PTR [eax],cx
  41baa4:	jns    0x41bac3
  41baa6:	dec    eax
  41baa7:	(bad)  
  41baa8:	mov    ds:0x713429c9,eax
  41baad:	dec    eax
  41baae:	dec    esi
  41baaf:	jecxz  0x41baf5
  41bab1:	and    dl,BYTE PTR [eax]
  41bab3:	pop    ebx
  41bab4:	jp     0x41bab3
  41bab6:	xchg   ebx,eax
  41bab7:	test   ebp,ebp
  41bab9:	enter  0x70c1,0x92
  41babd:	in     eax,0xe1
  41babf:	push   ebx
  41bac0:	in     al,0x60
  41bac2:	fadd   QWORD PTR [esi]
  41bac4:	add    bl,BYTE PTR [ebp+0x5d]
  41bac7:	inc    esi
  41bac8:	and    eax,0xe1ec6b13
  41bacd:	sbb    eax,0x46bbaf2f
  41bad2:	pop    es
  41bad3:	fstp   QWORD PTR [esi+0x267d7b0]
  41bad9:	call   DWORD PTR [ecx+eiz*8]
  41badc:	add    bh,BYTE PTR [ecx-0x17]
  41badf:	int3   
  41bae0:	xlat   BYTE PTR ds:[ebx]
  41bae1:	outs   dx,DWORD PTR ds:[esi]
  41bae2:	mov    BYTE PTR [ebp+0x5363d9ba],ah
  41bae8:	push   0xfffffffc
  41baea:	es rol esi,0xb4
  41baee:	call   0x478d126e
  41baf3:	lods   al,BYTE PTR ds:[esi]
  41baf4:	jnp    0x41bb46
  41baf6:	leave  
  41baf7:	add    WORD PTR [ebx+0x3076f68b],di
  41bafe:	test   al,0x66
  41bb00:	cmp    al,0xe6
  41bb02:	jno    0x41bb3e
  41bb04:	mov    ecx,0x8a85ae3
  41bb09:	inc    esp
  41bb0a:	shl    BYTE PTR [edi+0x3efa7897],cl
  41bb10:	retf   0xe815
  41bb13:	shl    BYTE PTR [ecx-0x3c],1
  41bb16:	aas    
  41bb17:	fbstp  TBYTE PTR [ebp+0x31]
  41bb1a:	xor    al,0xef
  41bb1c:	mov    bl,0xb
  41bb1e:	pop    ds
  41bb1f:	sbb    DWORD PTR [ecx],esi
  41bb21:	xor    DWORD PTR [edi-0x46],0x19
  41bb25:	sub    eax,0x2ee30ba5
  41bb2a:	repnz or BYTE PTR ds:0xa51024cf,cl
  41bb31:	xchg   BYTE PTR [esi-0x18],bh
  41bb34:	sbb    esi,esi
  41bb36:	test   eax,0xc5b4a35
  41bb3b:	push   esi
  41bb3c:	lahf   
  41bb3d:	jecxz  0x41bbab
  41bb3f:	add    BYTE PTR [esi],ah
  41bb41:	mov    esp,ebp
  41bb43:	xchg   ebp,eax
  41bb44:	mov    bh,0x7e
  41bb46:	push   edi
  41bb47:	sub    ebp,DWORD PTR [eax-0x5d]
  41bb4a:	jl     0x41bacc
  41bb4c:	dec    ecx
  41bb4d:	jae    0x41bb75
  41bb4f:	pop    ds
  41bb50:	inc    eax
  41bb51:	adc    edi,DWORD PTR [ebx-0x10]
  41bb54:	call   0x655:0xe84cda40
  41bb5b:	fidiv  WORD PTR [esi+0x7c]
  41bb5e:	xchg   edi,eax
  41bb5f:	(bad)  
  41bb60:	jmp    0x1132949e
  41bb65:	pop    ds
  41bb66:	sbb    al,0x40
  41bb68:	sub    BYTE PTR [edi-0x71],bl
  41bb6b:	dec    ebp
  41bb6c:	sbb    eax,0x556c1d84
  41bb71:	hlt    
  41bb72:	mov    ds:0xf77dfbee,al
  41bb77:	fwait
  41bb78:	or     al,0x88
  41bb7a:	dec    esi
  41bb7b:	adc    eax,0xf5532c84
  41bb80:	adc    ebp,ebx
  41bb82:	das    
  41bb83:	xor    eax,DWORD PTR [ecx-0x72]
  41bb86:	call   0xfa79e372
  41bb8b:	mov    ds,WORD PTR [ebx-0x27]
  41bb8e:	add    BYTE PTR [eax+0x7f012f10],bh
  41bb94:	lock ror DWORD PTR [eax],1
  41bb97:	mov    ebx,0x722bfc25
  41bb9c:	xchg   edi,eax
  41bb9d:	clc    
  41bb9e:	dec    edx
  41bb9f:	imul   edx,DWORD PTR [esi-0x7773ccab],0xffffffd6
  41bba6:	mov    ch,0xc2
  41bba8:	dec    ebx
  41bba9:	les    ebp,FWORD PTR [esi+0x28df3b93]
  41bbaf:	sub    dh,BYTE PTR [edi]
  41bbb1:	dec    ebx
  41bbb2:	adc    bl,BYTE PTR [ebx-0x570ba0f5]
  41bbb8:	pop    esp
  41bbb9:	jp     0x41bb94
  41bbbb:	or     cl,bh
  41bbbd:	push   esi
  41bbbe:	stc    
  41bbbf:	sub    ch,BYTE PTR [esi]
  41bbc1:	jnp    0x41bba9
  41bbc3:	jmp    0x41bb77
  41bbc5:	push   ebx
  41bbc6:	pop    ebp
  41bbc7:	dec    ebp
  41bbc8:	hlt    
  41bbc9:	mov    bh,0x47
  41bbcb:	cmp    dl,BYTE PTR [edi-0x63]
  41bbce:	loope  0x41bba9
  41bbd0:	retf   0x1289
  41bbd3:	stos   DWORD PTR es:[edi],eax
  41bbd4:	mov    dl,0x2b
  41bbd6:	ds retf 0x2594
  41bbda:	fadd   DWORD PTR [ecx+0x550c34d1]
  41bbe0:	shl    DWORD PTR [eax],1
  41bbe2:	dec    ebp
  41bbe3:	dec    BYTE PTR [edi+0x21c538d7]
  41bbe9:	mov    eax,0x8e98d830
  41bbee:	pop    esp
  41bbef:	add    ecx,DWORD PTR [ebx+0x3e]
  41bbf2:	mov    gs,esi
  41bbf4:	inc    ebp
  41bbf5:	mov    dl,BYTE PTR [esp+esi*1]
  41bbf8:	arpl   WORD PTR [ebp-0x370acb55],di
  41bbfe:	push   es
  41bbff:	cmc    
  41bc00:	xchg   edx,eax
  41bc01:	cmp    eax,0x5b920f4c
  41bc06:	jle    0x41bc7b
  41bc08:	jge    0x41bbfe
  41bc0a:	or     al,0xe0
  41bc0c:	lods   al,BYTE PTR ds:[esi]
  41bc0d:	push   edi
  41bc0e:	and    bl,0xb4
  41bc11:	scas   al,BYTE PTR es:[edi]
  41bc12:	shl    ecx,1
  41bc14:	pushf  
  41bc15:	in     al,dx
  41bc16:	gs mov ebx,0x6a2dd1ad
  41bc1c:	repz dec BYTE PTR [edi-0x63]
  41bc20:	popa   
  41bc21:	call   0x8b8f:0xeef8e740
  41bc28:	fistp  WORD PTR [edx]
  41bc2a:	leave  
  41bc2b:	ins    BYTE PTR es:[edi],dx
  41bc2c:	jg     0x41bc1c
  41bc2e:	jnp    0x41bc6a
  41bc30:	mov    ch,0x6d
  41bc32:	add    al,0xb9
  41bc34:	push   esp
  41bc35:	push   edx
  41bc36:	adc    al,0xef
  41bc38:	pop    eax
  41bc39:	mov    ch,BYTE PTR [bp+di-0x5]
  41bc3d:	jno    0x41bc35
  41bc3f:	jns    0x41bbc1
  41bc41:	fs jb  0x41bca2
  41bc44:	in     eax,0x62
  41bc46:	inc    ebx
  41bc47:	out    dx,eax
  41bc48:	jge    0x41bc1b
  41bc4a:	dec    edx
  41bc4b:	or     esi,ebp
  41bc4d:	adc    bh,ch
  41bc4f:	pop    ds
  41bc50:	(bad)  
  41bc51:	cmp    ebp,eax
  41bc53:	inc    ecx
  41bc54:	or     DWORD PTR [edx+edi*4+0x72],eax
  41bc58:	fisub  DWORD PTR [ebp-0x606dd77]
  41bc5e:	jmp    0x9125cb2f
  41bc63:	mov    ch,0xae
  41bc65:	loope  0x41bcb4
  41bc67:	add    eax,0x2c158141
  41bc6c:	aam    0x67
  41bc6e:	leave  
  41bc6f:	push   ss
  41bc70:	and    ecx,edi
  41bc72:	sub    al,0xd9
  41bc74:	dec    ebx
  41bc75:	xor    BYTE PTR [edx],ch
  41bc77:	mov    cl,BYTE PTR [eax+edx*8-0x29]
  41bc7b:	add    eax,0x888c3f89
  41bc80:	test   DWORD PTR [eax],ebx
  41bc82:	and    esp,DWORD PTR [esi+0x50]
  41bc85:	sbb    bh,al
  41bc87:	adc    al,0xff
  41bc89:	jno    0x41bc15
  41bc8b:	ins    BYTE PTR es:[edi],dx
  41bc8c:	mov    eax,ds:0x9a7d7d76
  41bc91:	adc    edx,0x852c438b
  41bc97:	les    ecx,FWORD PTR [esp+edx*8-0x69]
  41bc9b:	popa   
  41bc9c:	mov    ebp,DWORD PTR [esi-0x4089ce1e]
  41bca2:	mov    DWORD PTR [ebx+ebx*1+0x441dbb20],ecx
  41bca9:	in     eax,dx
  41bcaa:	dec    ebx
  41bcab:	push   0xffffff9c
  41bcad:	sbb    esp,eax
  41bcaf:	xor    esi,DWORD PTR [ebx-0x7a]
  41bcb2:	std    
  41bcb3:	sbb    DWORD PTR ds:0x39299a26,esp
  41bcb9:	ins    BYTE PTR es:[edi],dx
  41bcba:	add    al,0x63
  41bcbc:	test   ah,cl
  41bcbe:	in     eax,dx
  41bcbf:	push   ebx
  41bcc0:	pop    edx
  41bcc1:	daa    
  41bcc2:	arpl   WORD PTR [edx],sp
  41bcc4:	mov    bl,0x1e
  41bcc6:	xlat   BYTE PTR ds:[ebx]
  41bcc7:	xor    edi,DWORD PTR [edx+0x7ddf297b]
  41bccd:	rol    ebx,0x60
  41bcd0:	call   0xdd26:0x6c16baa
  41bcd7:	lods   al,BYTE PTR ds:[esi]
  41bcd8:	mov    eax,ds:0x651331ab
  41bcdd:	push   ebp
  41bcde:	fwait
  41bcdf:	cmp    al,0x3f
  41bce1:	into   
  41bce2:	jl     0x41bd5b
  41bce4:	mov    dh,BYTE PTR [ecx+0x26]
  41bce7:	sbb    esp,DWORD PTR [esi]
  41bce9:	ret    0xa0dc
  41bcec:	xor    cl,BYTE PTR [ecx]
  41bcee:	enter  0xbd4,0x53
  41bcf2:	sbb    ecx,edi
  41bcf4:	push   cs
  41bcf5:	add    eax,0x57a16f0c
  41bcfa:	dec    esp
  41bcfb:	xchg   DWORD PTR [ebx],ebx
  41bcfd:	sahf   
  41bcfe:	rol    BYTE PTR [edi+0x58],0xb5
  41bd02:	cmp    edx,DWORD PTR [esi]
  41bd04:	mov    ebp,0x5bdebb6
  41bd09:	dec    ecx
  41bd0a:	xchg   ebx,eax
  41bd0b:	jp     0x41bcc4
  41bd0d:	dec    esp
  41bd0e:	into   
  41bd0f:	and    bh,BYTE PTR [ebx]
  41bd11:	pop    gs
  41bd13:	inc    esp
  41bd14:	mov    WORD PTR [edx+0x27],es
  41bd17:	jbe    0x41bd31
  41bd19:	clc    
  41bd1a:	and    cl,dh
  41bd1c:	mov    ds:0x4f233084,eax
  41bd21:	sbb    al,BYTE PTR [esp+esi*4]
  41bd24:	xchg   edx,eax
  41bd25:	push   ss
  41bd26:	(bad)  
  41bd28:	jg     0x41bce4
  41bd2a:	adc    dh,al
  41bd2c:	hlt    
  41bd2d:	shl    DWORD PTR ds:0x4dd5819f,cl
  41bd33:	jecxz  0x41bcec
  41bd35:	sbb    edx,edi
  41bd37:	lods   al,BYTE PTR ds:[esi]
  41bd38:	pushf  
  41bd39:	sbb    BYTE PTR [ebp-0x5e0f9baa],bh
  41bd3f:	les    ebp,FWORD PTR [edx-0x32]
  41bd42:	push   ebp
  41bd43:	inc    ebp
  41bd44:	sub    edi,DWORD PTR ds:0xdce9f3c1
  41bd4a:	rsqrtps xmm7,XMMWORD PTR [ebx-0x3187356b]
  41bd51:	pushf  
  41bd52:	add    esi,DWORD PTR [ecx-0x343b3f79]
  41bd58:	test   eax,0x932ba122
  41bd5d:	stos   BYTE PTR es:[edi],al
  41bd5e:	out    dx,al
  41bd5f:	fs inc esi
  41bd61:	sub    ebx,DWORD PTR [ebx-0x534b5e35]
  41bd67:	arpl   WORD PTR [ebx],bp
  41bd69:	int    0x9e
  41bd6b:	aam    0xdf
  41bd6d:	or     BYTE PTR [ecx],al
  41bd6f:	inc    ecx
  41bd70:	push   eax
  41bd71:	pop    es
  41bd72:	(bad)  
  41bd73:	push   esi
  41bd74:	xchg   ebx,eax
  41bd75:	ja     0x41bdb0
  41bd77:	or     cx,WORD PTR [ecx-0x6]
  41bd7b:	mov    ds,WORD PTR [edx-0x7c2c4902]
  41bd81:	lods   eax,DWORD PTR ds:[esi]
  41bd82:	cs test ah,dl
  41bd85:	cmc    
  41bd86:	dec    ebp
  41bd87:	push   edx
  41bd88:	lock xchg ebp,eax
  41bd8a:	mov    dh,0xb9
  41bd8c:	mov    esp,edi
  41bd8e:	ret    0x6504
  41bd91:	sub    bl,bl
  41bd93:	cmp    al,BYTE PTR [esi]
  41bd95:	rol    DWORD PTR [edi],cl
  41bd97:	fdiv   st,st(6)
  41bd99:	add    BYTE PTR ds:0xd3e644f1,dl
  41bd9f:	ror    edi,0x27
  41bda2:	int    0x64
  41bda4:	not    DWORD PTR [eax]
  41bda6:	dec    esp
  41bda7:	or     al,0x70
  41bda9:	sub    edx,DWORD PTR [ebx+eax*1+0x4d]
  41bdad:	jne    0x41be2b
  41bdaf:	shr    DWORD PTR [edi],0xd3
  41bdb2:	push   esp
  41bdb3:	aaa    
  41bdb4:	sbb    al,0x25
  41bdb6:	pop    es
  41bdb7:	sbb    DWORD PTR [esi+ebx*4],0xc4939b15
  41bdbe:	xor    BYTE PTR [edi],cl
  41bdc0:	mul    BYTE PTR [edi+eax*1+0x55811dcb]
  41bdc7:	test   al,0x1d
  41bdc9:	mov    ch,0xed
  41bdcb:	mov    ds:0xf316d7ee,eax
  41bdd0:	pop    ds
  41bdd1:	inc    esp
  41bdd2:	out    dx,eax
  41bdd3:	jge    0x41bd97
  41bdd5:	mov    bl,0xe9
  41bdd7:	dec    edx
  41bdd8:	jecxz  0x41bdbd
  41bdda:	popa   
  41bddb:	fsubr  QWORD PTR [eax+0x32]
  41bdde:	mov    al,ds:0xe3077f07
  41bde3:	mov    edx,0x5cb670d5
  41bde8:	call   0xaf42:0x95c19a98
  41bdef:	imul   BYTE PTR [edx+eiz*2+0x481bbb7f]
  41bdf6:	jne    0x41bdbd
  41bdf8:	mov    esi,0x5f045666
  41bdfd:	cdq    
  41bdfe:	pmulhw mm6,QWORD PTR ds:0xaed80ab2
  41be05:	scas   eax,DWORD PTR es:[edi]
  41be06:	in     al,dx
  41be07:	cli    
  41be08:	stc    
  41be09:	add    eax,0xbcf4799c
  41be0e:	pusha  
  41be0f:	inc    ebp
  41be10:	lea    esi,[esi+0x78]
  41be13:	sub    edi,DWORD PTR [ebp-0x6a]
  41be16:	fnstcw WORD PTR [ebp+0x7502a3ff]
  41be1c:	ror    DWORD PTR [edx],cl
  41be1e:	in     al,dx
  41be1f:	push   0x2b222c9d
  41be24:	out    0xb5,al
  41be26:	inc    ebx
  41be27:	push   ebp
  41be28:	imul   BYTE PTR [ecx-0x49]
  41be2b:	stos   BYTE PTR es:[edi],al
  41be2c:	ds add al,0x10
  41be2f:	or     BYTE PTR [eax-0xa],0x0
  41be33:	iret   
  41be34:	dec    esi
  41be35:	out    dx,eax
  41be36:	sub    DWORD PTR [edx-0x64],0x63e24956
  41be3d:	hlt    
  41be3e:	xchg   edx,eax
  41be3f:	iret   
  41be40:	retf   
  41be41:	fdiv   DWORD PTR [ebx-0x58122555]
  41be47:	push   ebp
  41be48:	pop    esi
  41be49:	rol    BYTE PTR [esi-0x320879cf],0xd2
  41be50:	push   esp
  41be51:	push   esi
  41be52:	push   0xeba2b012
  41be57:	sbb    BYTE PTR [eax-0x41],ch
  41be5a:	int3   
  41be5b:	aas    
  41be5c:	in     eax,dx
  41be5d:	mov    ds:0x5f4397cc,al
  41be62:	je     0x41bec6
  41be64:	icebp  
  41be65:	rol    eax,1
  41be67:	lds    ecx,FWORD PTR [ebx+0x4deef1cb]
  41be6d:	dec    eax
  41be6e:	xchg   ebx,eax
  41be6f:	inc    edx
  41be70:	and    al,bl
  41be72:	sub    cl,ch
  41be74:	div    BYTE PTR [ecx]
  41be76:	test   BYTE PTR [edi+0x7c],dl
  41be79:	mov    bh,0x68
  41be7b:	sbb    DWORD PTR [ecx-0x78],esp
  41be7e:	inc    edi
  41be7f:	push   cs
  41be80:	push   ebp
  41be81:	mov    dl,0x6a
  41be83:	cmp    edi,DWORD PTR ds:0xabbf2eb5
  41be89:	out    dx,eax
  41be8a:	cld    
  41be8b:	inc    esp
  41be8c:	aaa    
  41be8d:	jle    0x41be73
  41be8f:	adc    BYTE PTR [esi],bl
  41be91:	push   ds
  41be92:	(bad)  
  41be93:	mov    cl,0xf0
  41be95:	push   edx
  41be96:	inc    esi
  41be97:	jmp    0x3091:0xd8883072
  41be9e:	scas   al,BYTE PTR es:[edi]
  41be9f:	sub    BYTE PTR [edi-0x1e],dl
  41bea2:	or     DWORD PTR [edi+0x3],ecx
  41bea5:	(bad)  
  41bea7:	dec    edx
  41bea8:	test   DWORD PTR ds:0xd4247623,0x9ed01c0
  41beb2:	xchg   edx,eax
  41beb3:	pop    esi
  41beb4:	mov    ds:0x5a96dc98,al
  41beb9:	iret   
  41beba:	cmp    eax,0x8bff133
  41bebf:	(bad)  
  41bec0:	int    0xff
  41bec2:	sub    edi,esi
  41bec4:	add    DWORD PTR [eax],edi
  41bec6:	jmp    0x41bed1
  41becb:	xor    esi,ecx
  41becd:	add    esi,edx
  41becf:	add    DWORD PTR [eax],esi
  41bed1:	mov    eax,DWORD PTR [ebp-0x8]
  41bed4:	mov    esi,DWORD PTR [ebp-0x10]
  41bed7:	mov    eax,DWORD PTR [eax]
  41bed9:	xor    esi,ecx
  41bedb:	add    esi,0x3272f7
  41bee1:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bee8:	mov    DWORD PTR [ebp-0x24],ebx
  41beeb:	not    esi
  41beed:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bef4:	mov    DWORD PTR [ebp-0x2c],ebx
  41bef7:	mov    ebx,DWORD PTR [ebp-0x28]
  41befa:	mov    edi,DWORD PTR [ebp-0x24]
  41befd:	and    eax,esi
  41beff:	mov    esi,0xa145
  41bf04:	xor    bx,si
  41bf07:	mov    esi,0x4131
  41bf0c:	add    bx,si
  41bf0f:	cmp    WORD PTR [eax],bx
  41bf12:	je     0x41bf5c
  41bf18:	mov    edi,DWORD PTR [ebp-0x10]
  41bf1b:	xor    edi,ecx
  41bf1d:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bf24:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41bf2b:	mov    ebx,0xffcd8d08
  41bf30:	sub    ebx,edi
  41bf32:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bf39:	add    eax,ebx
  41bf3b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41bf42:	mov    edi,DWORD PTR [ebp-0x28]
  41bf45:	mov    ebx,DWORD PTR [ebp-0x24]
  41bf48:	mov    ebx,0xa145
  41bf4d:	xor    di,bx
  41bf50:	add    di,si
  41bf53:	cmp    WORD PTR [eax],di
  41bf56:	jne    0x41bf18
  41bf5c:	mov    edi,DWORD PTR [ebp-0x14]
  41bf5f:	jmp    0x41e319
  41bf64:	retf   0xd5df
  41bf67:	pop    esi
  41bf68:	idiv   BYTE PTR [edx+0x7a]
  41bf6b:	addr16 cmp al,0xf6
  41bf6e:	push   ebx
  41bf6f:	into   
  41bf70:	cmp    al,dl
  41bf72:	in     al,0x4d
  41bf74:	in     al,0x0
  41bf76:	jl     0x41bff3
  41bf78:	sbb    BYTE PTR [esi+0x22b67b7b],bl
  41bf7e:	in     al,0xbd
  41bf80:	hlt    
  41bf81:	mov    ah,0xbd
  41bf83:	inc    esp
  41bf84:	sub    eax,0x69eac85b
  41bf89:	push   0xd47069bf
  41bf8e:	jl     0x41bfcf
  41bf90:	fwait
  41bf91:	arpl   WORD PTR [edi-0x11f9e863],sp
  41bf97:	pop    ecx
  41bf98:	lea    esi,[ecx]
  41bf9a:	adc    eax,0x450725a5
  41bf9f:	loope  0x41c020
  41bfa1:	repz int3 
  41bfa3:	das    
  41bfa4:	repz sbb al,0xbb
  41bfa7:	pop    edx
  41bfa8:	(bad)
  41bfab:	loope  0x41bfef
  41bfad:	xchg   ecx,eax
  41bfae:	js     0x41bfea
  41bfb0:	or     BYTE PTR [ebx+0x4d],cl
  41bfb3:	add    eax,0x8b6faa7
  41bfb8:	fist   WORD PTR [eax]
  41bfba:	(bad)  
  41bfbb:	stc    
  41bfbc:	or     eax,0x50018568
  41bfc1:	jne    0x41bf44
  41bfc3:	adc    ah,dh
  41bfc5:	outs   dx,DWORD PTR ds:[esi]
  41bfc6:	aad    0xb9
  41bfc8:	push   edi
  41bfc9:	rol    DWORD PTR [edx],cl
  41bfcb:	adc    dl,ah
  41bfcd:	js     0x41c047
  41bfcf:	xchg   esi,eax
  41bfd0:	lods   al,BYTE PTR ds:[esi]
  41bfd1:	clc    
  41bfd2:	test   DWORD PTR [ebx],edx
  41bfd4:	and    BYTE PTR [edx-0x35e248c4],bl
  41bfda:	adc    al,0x50
  41bfdc:	ins    DWORD PTR es:[edi],dx
  41bfdd:	xchg   esp,eax
  41bfde:	push   ebp
  41bfdf:	adc    DWORD PTR [esp+esi*8+0x9],esi
  41bfe3:	pop    ebx
  41bfe4:	lahf   
  41bfe5:	sub    cl,ah
  41bfe7:	inc    DWORD PTR [ecx-0x5bacc9fc]
  41bfed:	pop    ebp
  41bfee:	push   esi
  41bfef:	into   
  41bff0:	xor    BYTE PTR [ebx-0x27],ch
  41bff3:	push   0xe93b5ae8
  41bff8:	ja     0x41bfb5
  41bffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bffb:	xor    BYTE PTR [edx+0x760df4c1],0x1d
  41c002:	or     BYTE PTR [eax],0x9
  41c005:	fadd   DWORD PTR ds:0x636574ca
  41c00b:	mov    dl,0xc4
  41c00d:	jmp    0xc136:0x380caf3e
  41c014:	inc    ebx
  41c015:	sti    
  41c016:	mov    eax,ds:0x555ac21d
  41c01b:	arpl   WORD PTR [ecx],sp
  41c01d:	pushf  
  41c01e:	stos   DWORD PTR es:[edi],eax
  41c01f:	outs   dx,BYTE PTR ds:[esi]
  41c020:	mov    esi,0x12620bad
  41c025:	call   0xaf4b:0x8d172c3d
  41c02c:	sub    ah,BYTE PTR [ecx+0x16d8d16f]
  41c032:	inc    edi
  41c033:	dec    esi
  41c034:	inc    ebp
  41c035:	ret    
  41c036:	xchg   ebx,eax
  41c037:	pushf  
  41c038:	inc    ebp
  41c039:	add    eax,DWORD PTR [ecx]
  41c03b:	cdq    
  41c03c:	jae    0x41bfcd
  41c03e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c03f:	into   
  41c040:	push   es
  41c041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c042:	nop
  41c043:	xor    eax,0xebf8b54d
  41c048:	hlt    
  41c049:	ds mov esp,0x23fb1cdb
  41c04f:	stos   BYTE PTR es:[edi],al
  41c050:	dec    esi
  41c051:	cld    
  41c052:	into   
  41c053:	iret   
  41c054:	sbb    BYTE PTR [ebp-0x32],0xa
  41c058:	or     DWORD PTR [edx+0x78],ebx
  41c05b:	scas   al,BYTE PTR es:[edi]
  41c05c:	pop    ecx
  41c05d:	ffreep st(3)
  41c05f:	push   edx
  41c060:	pop    esi
  41c061:	xchg   ebp,eax
  41c062:	(bad)  
  41c064:	cs mov dh,0xa4
  41c067:	or     dh,BYTE PTR [eax]
  41c069:	lock sahf 
  41c06b:	(bad)  
  41c06c:	jnp    0x41c09c
  41c06e:	jge    0x41c07b
  41c070:	jnp    0x41c0f1
  41c072:	iret   
  41c073:	je     0x41c051
  41c075:	in     eax,dx
  41c076:	out    0x61,al
  41c078:	push   ss
  41c079:	pop    esp
  41c07a:	sub    DWORD PTR [ecx-0x2e5ee13b],0x64245f40
  41c084:	out    dx,al
  41c085:	xchg   ebx,eax
  41c086:	push   ds
  41c087:	(bad)  
  41c088:	jge    0x41c093
  41c08a:	pop    ebp
  41c08b:	xor    al,0x3
  41c08d:	xor    al,0xc2
  41c08f:	inc    esi
  41c090:	cmp    eax,DWORD PTR [ebx+ecx*8]
  41c093:	add    BYTE PTR [eax+eiz*4],ah
  41c096:	xchg   esi,eax
  41c097:	clc    
  41c098:	pop    esp
  41c099:	movsx  ebp,di
  41c09c:	dec    ebp
  41c09d:	jmp    0xc5023987
  41c0a2:	dec    ecx
  41c0a3:	outs   dx,DWORD PTR ds:[esi]
  41c0a4:	inc    ecx
  41c0a5:	push   ss
  41c0a6:	iret   
  41c0a7:	dec    esp
  41c0a8:	inc    edi
  41c0a9:	sbb    ax,0x5ac3
  41c0ad:	cli    
  41c0ae:	push   es
  41c0af:	in     al,0xa6
  41c0b1:	pop    ss
  41c0b2:	sbb    al,0xfc
  41c0b4:	sub    eax,0xb83f945c
  41c0b9:	push   ds
  41c0ba:	mov    ss,esi
  41c0bc:	(bad)  
  41c0bd:	cld    
  41c0be:	xor    ebx,ebx
  41c0c0:	lock jbe 0x41c057
  41c0c3:	(bad)
  41c0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c7:	jb     0x41c04d
  41c0c9:	jl     0x41c0e9
  41c0cb:	mov    esp,0x5775bd7c
  41c0d0:	pop    esi
  41c0d1:	or     DWORD PTR [eax],ebx
  41c0d3:	js     0x41c06c
  41c0d5:	adc    dl,BYTE PTR [ecx-0x18ca4a12]
  41c0db:	pushf  
  41c0dc:	mov    ds:0x60b7a51f,eax
  41c0e1:	jecxz  0x41c0a0
  41c0e3:	lods   al,BYTE PTR ds:[esi]
  41c0e4:	clc    
  41c0e5:	mov    ah,0xf
  41c0e7:	fcomp  QWORD PTR [esi+0x3a]
  41c0ea:	loope  0x41c0aa
  41c0ec:	fwait
  41c0ed:	xlat   BYTE PTR ds:[ebx]
  41c0ee:	jb     0x41c110
  41c0f0:	jge    0x41c109
  41c0f2:	cmp    ecx,DWORD PTR [edi+0x8a40ccf]
  41c0f8:	call   0x4da5:0x497ff27
  41c0ff:	cmp    eax,0x7b38347d
  41c104:	fcmovnb st,st(2)
  41c106:	xlat   BYTE PTR ds:[ebx]
  41c107:	jg     0x41c105
  41c109:	xor    al,0x30
  41c10b:	test   eax,0xe0bb6705
  41c110:	retf   0xffcd
  41c113:	mov    esp,0xbc9bb02a
  41c118:	fistp  DWORD PTR [esi]
  41c11a:	in     eax,dx
  41c11b:	jmp    0xa9d99bb9
  41c120:	adc    esp,esi
  41c122:	sbb    al,0xda
  41c124:	sbb    esi,DWORD PTR [ebx+0x79]
  41c127:	ret    0xdc59
  41c12a:	push   edx
  41c12b:	pop    ds
  41c12c:	jmp    0x6f96:0x836b5695
  41c133:	lock push es
  41c135:	mov    esp,DWORD PTR [edx]
  41c137:	into   
  41c138:	sub    eax,0xc612ab91
  41c13d:	hlt    
  41c13e:	lods   al,BYTE PTR ds:[esi]
  41c13f:	rol    DWORD PTR [ecx+0x3d050cce],0x9
  41c146:	xchg   ah,bh
  41c148:	jns    0x41c1bb
  41c14a:	and    BYTE PTR [edi-0x6],0x1b
  41c14e:	push   ds
  41c14f:	pop    ss
  41c150:	(bad)  
  41c152:	xchg   edi,eax
  41c153:	jge    0x41c1bc
  41c155:	lds    esi,FWORD PTR [eax]
  41c157:	aam    0xd6
  41c159:	cmp    BYTE PTR [edx],0x7f
  41c15c:	xor    eax,0x7d7f2191
  41c161:	out    dx,eax
  41c162:	sub    al,0xaf
  41c164:	mov    edi,DWORD PTR [ebp+0x16b8ea3e]
  41c16a:	mov    ch,0x6a
  41c16c:	idiv   BYTE PTR [edx-0x4e49e8dd]
  41c172:	int    0x14
  41c174:	jecxz  0x41c1d1
  41c176:	pop    ecx
  41c177:	scas   al,BYTE PTR es:[edi]
  41c178:	in     al,0xb5
  41c17a:	mov    ah,0x27
  41c17c:	mov    ds:0x253cf244,al
  41c181:	add    DWORD PTR [ebp-0x33],esi
  41c184:	ins    BYTE PTR es:[edi],dx
  41c185:	push   ebp
  41c186:	fucomi st,st(6)
  41c188:	cs in  al,0x52
  41c18b:	fidiv  DWORD PTR [ebp+0x48f62f1c]
  41c191:	cmp    dh,BYTE PTR ds:0x2e3161b5
  41c197:	push   ecx
  41c198:	or     BYTE PTR [eax+0x38],al
  41c19b:	mov    ecx,0xcff0f332
  41c1a0:	sar    DWORD PTR [ebp+0x54810818],1
  41c1a6:	fimul  DWORD PTR [edi+eiz*2+0x43]
  41c1aa:	pop    edi
  41c1ab:	aad    0xe0
  41c1ad:	and    al,cl
  41c1af:	and    al,0xed
  41c1b1:	sub    bh,BYTE PTR [ecx+ebp*8]
  41c1b4:	test   ecx,edi
  41c1b6:	pop    ebp
  41c1b7:	or     al,0x38
  41c1b9:	fld    QWORD PTR [ecx+0x6a7c8eff]
  41c1bf:	cs jnp 0x41c1a7
  41c1c2:	add    eax,0x96fd35e7
  41c1c7:	arpl   WORD PTR [ebx],bp
  41c1c9:	cmp    BYTE PTR [ebx],dh
  41c1cb:	cmp    al,0x3
  41c1cd:	dec    esi
  41c1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1cf:	adc    esi,edi
  41c1d1:	scas   eax,DWORD PTR es:[edi]
  41c1d2:	jns    0x41c1ff
  41c1d4:	or     BYTE PTR [ebp-0x6e787fa1],cl
  41c1da:	dec    edi
  41c1db:	mov    es,WORD PTR [edi+0x47c8b1cc]
  41c1e1:	sbb    eax,0xe0a41ab3
  41c1e6:	imul   ecx,DWORD PTR [ecx],0x57
  41c1e9:	mov    al,ds:0x595580d5
  41c1ee:	in     eax,dx
  41c1ef:	mov    edx,0xa460b6c8
  41c1f4:	pop    edi
  41c1f5:	xchg   DWORD PTR [ebx+eiz*4],esi
  41c1f8:	lea    edi,[ebx-0x37]
  41c1fb:	hlt    
  41c1fc:	pop    es
  41c1fd:	imul   ebp,DWORD PTR [eax],0xab8849ba
  41c203:	neg    BYTE PTR [ecx]
  41c205:	fist   DWORD PTR [esi]
  41c207:	or     dh,BYTE PTR [edi]
  41c209:	ror    BYTE PTR [edx+esi*4+0x34],cl
  41c20d:	fmul   QWORD PTR [ecx+0x77ed0346]
  41c213:	inc    edx
  41c214:	xchg   edi,eax
  41c215:	jmp    0x4e36:0xcaaec41c
  41c21c:	xchg   edx,eax
  41c21d:	push   es
  41c21e:	or     DWORD PTR [esi+0x73],0xffffffbb
  41c222:	pop    esp
  41c223:	data16 jb 0x41c1d0
  41c226:	popf   
  41c227:	jmp    0x41c1be
  41c229:	add    BYTE PTR cs:[ebp-0x6d],bh
  41c22d:	pop    ebx
  41c22e:	mov    bh,ah
  41c230:	ins    BYTE PTR es:[edi],dx
  41c231:	fimul  WORD PTR [ebx-0x49]
  41c234:	out    dx,al
  41c235:	jl     0x41c293
  41c237:	inc    DWORD PTR [esi]
  41c239:	xor    eax,0x9e313ee6
  41c23e:	cmp    al,0x24
  41c240:	cmp    al,0x9d
  41c242:	ror    BYTE PTR [eax-0x74],0x78
  41c246:	xchg   edx,eax
  41c247:	outs   dx,DWORD PTR ds:[esi]
  41c248:	cli    
  41c249:	aaa    
  41c24a:	xchg   ebx,eax
  41c24b:	add    bl,BYTE PTR [edx+ebx*8]
  41c24e:	rcr    BYTE PTR [eax],1
  41c250:	xor    al,0xc1
  41c252:	lahf   
  41c253:	out    0xaa,al
  41c255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c256:	pop    ebp
  41c257:	adc    ebp,esp
  41c259:	mov    ah,bh
  41c25b:	je     0x41c272
  41c25d:	xchg   ebp,eax
  41c25e:	dec    ebp
  41c25f:	xchg   ebp,eax
  41c260:	in     eax,dx
  41c261:	stos   BYTE PTR es:[edi],al
  41c262:	push   ss
  41c263:	pop    ss
  41c264:	daa    
  41c265:	jmp    0xacb8e61b
  41c26a:	arpl   WORD PTR [edx-0x5f469ee],cx
  41c270:	sbb    ecx,DWORD PTR [edx+0x2e]
  41c273:	add    eax,0xfefecfa8
  41c278:	ret    0x82d1
  41c27b:	inc    edx
  41c27c:	xchg   edx,eax
  41c27d:	fs jecxz 0x41c28b
  41c280:	mov    ebx,0x5af02fed
  41c285:	sbb    DWORD PTR [edi-0x4c],0x68b35725
  41c28c:	dec    esp
  41c28d:	xor    al,0x73
  41c28f:	lods   eax,DWORD PTR ds:[esi]
  41c290:	add    DWORD PTR [esp+ecx*4-0x33],edi
  41c294:	lods   al,BYTE PTR ds:[esi]
  41c295:	adc    BYTE PTR [esi-0x744d763],al
  41c29b:	or     edx,DWORD PTR [ecx+0x2d2ffb3]
  41c2a1:	and    bh,BYTE PTR [edx]
  41c2a3:	out    0x5a,al
  41c2a5:	pop    esi
  41c2a6:	and    BYTE PTR [ebx-0xac98a96],ch
  41c2ac:	in     eax,0x88
  41c2ae:	loope  0x41c313
  41c2b0:	std    
  41c2b1:	jmp    0x41c299
  41c2b3:	outs   dx,BYTE PTR ds:[esi]
  41c2b4:	idiv   BYTE PTR [edx-0x46]
  41c2b7:	loope  0x41c2d3
  41c2b9:	mov    ah,0x39
  41c2bb:	sub    eax,0x68fc2443
  41c2c0:	adc    DWORD PTR [ebp-0x55],edx
  41c2c3:	(bad)  
  41c2c5:	mov    al,0x3f
  41c2c7:	sti    
  41c2c8:	jg     0x41c250
  41c2ca:	mov    esi,0x5d9867d3
  41c2cf:	mov    DWORD PTR [ebx-0x4036e6d3],ecx
  41c2d5:	cmp    esp,edi
  41c2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d8:	aad    0x3e
  41c2da:	mov    cl,0xa4
  41c2dc:	cld    
  41c2dd:	mov    edx,0xe3630ed6
  41c2e2:	js     0x41c293
  41c2e4:	fisttp WORD PTR [eax+0x3]
  41c2e7:	sbb    DWORD PTR [eax],edx
  41c2e9:	fld    st(7)
  41c2eb:	inc    edi
  41c2ec:	lahf   
  41c2ed:	test   eax,0xa0adbad8
  41c2f2:	fmul   QWORD PTR [edi]
  41c2f4:	cmp    eax,0xca3af6fa
  41c2f9:	stos   DWORD PTR es:[edi],eax
  41c2fa:	pop    es
  41c2fb:	jge    0x41c299
  41c2fd:	xchg   eax,esp
  41c2ff:	jmp    0x41c334
  41c301:	gs in  al,0xf4
  41c304:	xchg   esi,eax
  41c305:	cwde   
  41c306:	scas   eax,DWORD PTR es:[edi]
  41c307:	dec    esp
  41c308:	mov    ds:0xc1e7fb2b,al
  41c30d:	dec    esi
  41c30e:	jne    0x41c30f
  41c310:	push   ecx
  41c311:	xchg   edi,eax
  41c312:	mov    al,ds:0xd4a05585
  41c317:	ins    BYTE PTR es:[edi],dx
  41c318:	in     ax,0xb9
  41c31b:	mov    edx,0xbd6166b7
  41c320:	pop    ebp
  41c321:	push   esi
  41c322:	xor    ecx,edx
  41c324:	sub    ah,BYTE PTR [edx+0x3e5c0aec]
  41c32a:	outs   dx,BYTE PTR ds:[esi]
  41c32b:	mov    ebx,0xfd5711a4
  41c330:	mov    edx,DWORD PTR [ebx-0x5a7d979c]
  41c336:	ss or  eax,0xf2a1b91f
  41c33c:	into   
  41c33d:	push   0xb1e50c1f
  41c342:	shl    BYTE PTR [esi+0x46c24183],1
  41c348:	jp     0x41c3b9
  41c34a:	jae    0x41c354
  41c34c:	mov    bh,0x70
  41c34e:	jno    0x41c39b
  41c350:	mov    ds:0x16f39bee,al
  41c355:	in     eax,0x52
  41c357:	aas    
  41c358:	pop    edi
  41c359:	xor    eax,0x79d3409a
  41c35e:	jo     0x41c313
  41c360:	mov    BYTE PTR [edx-0x2c],dh
  41c363:	call   0x53092542
  41c368:	in     al,0xd5
  41c36a:	stos   BYTE PTR es:[edi],al
  41c36b:	sub    cl,BYTE PTR [eax]
  41c36d:	xor    DWORD PTR [edx+esi*1-0x5a],esp
  41c371:	std    
  41c372:	icebp  
  41c373:	sbb    bh,dh
  41c375:	jecxz  0x41c36e
  41c377:	mov    ?,WORD PTR [ebx+0x63]
  41c37a:	xchg   ebx,edi
  41c37c:	pop    es
  41c37d:	fucomp st(7)
  41c37f:	cmp    eax,DWORD PTR [ebp+0x28]
  41c382:	sbb    edx,esi
  41c384:	adc    eax,0x84351a37
  41c389:	jle    0x41c3a2
  41c38b:	inc    ecx
  41c38c:	push   esi
  41c38d:	push   ecx
  41c38e:	xor    eax,0x2f09a047
  41c393:	shr    esp,1
  41c395:	test   al,0x4a
  41c397:	mov    ah,0x21
  41c399:	jge    0x41c31d
  41c39b:	and    ecx,DWORD PTR [edx+0x57327e26]
  41c3a1:	jo     0x41c368
  41c3a3:	inc    esi
  41c3a4:	mov    edx,0xddf2700e
  41c3a9:	jmp    0x41c3f7
  41c3ab:	pop    eax
  41c3ac:	in     eax,0x40
  41c3ae:	and    DWORD PTR [eax],ecx
  41c3b0:	xchg   edx,eax
  41c3b1:	cs mov bh,0xa4
  41c3b4:	sbb    al,0x2c
  41c3b6:	pop    ds
  41c3b7:	xchg   ecx,eax
  41c3b8:	push   esi
  41c3b9:	ret    
  41c3ba:	int    0xde
  41c3bc:	and    ch,BYTE PTR [ebp-0x798af698]
  41c3c2:	sub    BYTE PTR [eax-0x423f88c0],0x4c
  41c3c9:	lea    ebp,[esi+ecx*4-0x2e7dd871]
  41c3d0:	ja     0x41c433
  41c3d2:	or     al,0xc7
  41c3d4:	inc    eax
  41c3d5:	or     cl,BYTE PTR [ebp-0x41]
  41c3d8:	loop   0x41c3d9
  41c3da:	icebp  
  41c3db:	xor    ch,BYTE PTR [edx]
  41c3dd:	(bad)  
  41c3df:	outs   dx,BYTE PTR ds:[esi]
  41c3e0:	push   0x5fa4af0d
  41c3e5:	test   BYTE PTR [ecx-0x1f0937c2],0xec
  41c3ec:	mov    ds:0x37d30a4e,al
  41c3f1:	mov    ds:0x5d5b5694,eax
  41c3f6:	push   es
  41c3f7:	or     eax,0x82a64959
  41c3fc:	or     dl,BYTE PTR ds:0xdb1e6ac6
  41c402:	dec    esi
  41c403:	push   ebx
  41c404:	cli    
  41c405:	lods   al,BYTE PTR ds:[esi]
  41c406:	mov    WORD PTR [edi],ss
  41c408:	in     eax,0x0
  41c40a:	(bad)  
  41c40b:	sub    esi,DWORD PTR [ebp+0x206c2868]
  41c411:	nop
  41c412:	ret    0xe4e8
  41c415:	aas    
  41c416:	arpl   bp,bp
  41c418:	and    bl,BYTE PTR [ebp-0x53]
  41c41b:	push   eax
  41c41c:	clc    
  41c41d:	push   esp
  41c41e:	jge    0x41c46e
  41c420:	out    dx,al
  41c421:	aas    
  41c422:	inc    edx
  41c423:	bound  edi,QWORD PTR [esi-0x2c]
  41c426:	xchg   edx,eax
  41c427:	ins    BYTE PTR es:[edi],dx
  41c428:	pop    ebx
  41c429:	and    eax,0x8e648b9d
  41c42e:	sti    
  41c42f:	stos   DWORD PTR es:[edi],eax
  41c430:	out    0xfd,al
  41c432:	sbb    DWORD PTR [eax-0x9],esi
  41c435:	stos   BYTE PTR es:[edi],al
  41c436:	jle    0x41c41c
  41c438:	dec    ebx
  41c439:	lods   eax,DWORD PTR ds:[esi]
  41c43a:	sbb    al,0x7f
  41c43c:	push   eax
  41c43d:	mov    ch,0x2
  41c43f:	rol    BYTE PTR [edi-0x79051e6f],1
  41c445:	stos   DWORD PTR es:[edi],eax
  41c446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c447:	mov    al,0x87
  41c449:	dec    ecx
  41c44a:	adc    eax,0x3bc80699
  41c44f:	adc    ch,dh
  41c451:	jecxz  0x41c494
  41c453:	add    eax,0x28264df3
  41c458:	sub    BYTE PTR [ecx+0x1e18778c],bl
  41c45e:	pop    eax
  41c45f:	gs xor eax,0x65fa4577
  41c465:	jg     0x41c400
  41c467:	ds (bad) 
  41c469:	jg     0x41c4c3
  41c46b:	sub    DWORD PTR [ebx],ecx
  41c46d:	jbe    0x41c4e6
  41c46f:	fld    TBYTE PTR [eax+edx*2-0x78c29be5]
  41c476:	out    dx,eax
  41c477:	mov    ebx,DWORD PTR [eax+0x4c]
  41c47a:	xchg   edx,eax
  41c47b:	scas   al,BYTE PTR es:[edi]
  41c47c:	rol    DWORD PTR [ebp-0x348dad25],cl
  41c482:	cdq    
  41c483:	mov    ch,0xb6
  41c485:	mov    bl,0x81
  41c488:	mov    ?,WORD PTR [ebx+0x6bb2dab1]
  41c48e:	pop    ecx
  41c48f:	sub    ebx,esp
  41c491:	fwait
  41c492:	sub    eax,DWORD PTR [edi-0x28]
  41c495:	lods   eax,DWORD PTR ds:[esi]
  41c496:	jmp    0x46d4:0x133769c
  41c49d:	xchg   DWORD PTR [esi-0x43934d5f],ebp
  41c4a3:	push   es
  41c4a4:	int3   
  41c4a5:	xchg   edi,eax
  41c4a6:	retf   0x8e76
  41c4a9:	in     al,dx
  41c4aa:	lods   eax,DWORD PTR ds:[esi]
  41c4ab:	cli    
  41c4ac:	int3   
  41c4ad:	push   es
  41c4ae:	hlt    
  41c4af:	mov    eax,ds:0x73a34d82
  41c4b4:	stc    
  41c4b5:	add    esi,DWORD PTR ss:[edx]
  41c4b8:	call   0x13a4a07
  41c4bd:	jle    0x41c493
  41c4bf:	mov    ah,0xb
  41c4c1:	xchg   edi,eax
  41c4c2:	sahf   
  41c4c3:	(bad)  
  41c4c4:	push   ecx
  41c4c5:	fstp   TBYTE PTR [ebx-0x17a31b38]
  41c4cb:	sahf   
  41c4cc:	inc    edi
  41c4cd:	add    ebx,edx
  41c4cf:	or     eax,0x6aed4bf8
  41c4d4:	es pop ebx
  41c4d6:	test   BYTE PTR [ebx+0x338567f3],bh
  41c4dc:	xor    dh,bh
  41c4de:	mov    al,BYTE PTR [edi-0x44]
  41c4e1:	ret    
  41c4e2:	jo     0x41c48e
  41c4e4:	ror    DWORD PTR [edi+0x3d],1
  41c4e7:	xchg   di,ax
  41c4e9:	cli    
  41c4ea:	xchg   ebx,eax
  41c4eb:	dec    esi
  41c4ec:	ja     0x41c49e
  41c4ee:	psrlw  mm2,mm5
  41c4f1:	data16 xor al,BYTE PTR [edi]
  41c4f4:	mov    esp,0xf4973c45
  41c4f9:	ret    0x97fb
  41c4fc:	cmp    al,0x96
  41c4fe:	inc    ecx
  41c4ff:	enter  0x447b,0xbf
  41c503:	mov    bh,0xd
  41c505:	pop    edi
  41c506:	stos   DWORD PTR es:[edi],eax
  41c507:	cmp    al,0xf
  41c509:	mov    ch,0xdd
  41c50b:	ror    BYTE PTR [eax+0x6657ba4f],0x81
  41c512:	hlt    
  41c513:	fiadd  WORD PTR [eax]
  41c515:	and    DWORD PTR [edi],esi
  41c517:	xchg   edi,eax
  41c518:	icebp  
  41c519:	mov    eax,0xe8bb065b
  41c51e:	cld    
  41c51f:	lods   al,BYTE PTR ds:[esi]
  41c520:	cmp    eax,0xfd6edf45
  41c525:	scas   eax,DWORD PTR es:[edi]
  41c526:	adc    eax,0x153e0025
  41c52b:	xor    BYTE PTR [edi+0x13bc6315],al
  41c531:	jmp    0x6e429614
  41c536:	(bad)  
  41c537:	mov    bh,0xe5
  41c539:	xchg   esi,eax
  41c53a:	mov    BYTE PTR [edi],dh
  41c53c:	loope  0x41c52d
  41c53e:	rcl    DWORD PTR es:[esi+0x7092a626],1
  41c545:	dec    ebp
  41c546:	sti    
  41c547:	clc    
  41c548:	mov    cl,0xd4
  41c54a:	outs   dx,DWORD PTR ds:[esi]
  41c54b:	push   eax
  41c54c:	rcr    BYTE PTR [esi-0x2482b2e5],1
  41c552:	int3   
  41c553:	dec    ecx
  41c554:	arpl   cx,cx
  41c556:	sbb    BYTE PTR [edx-0x2a478a22],ah
  41c55c:	pop    eax
  41c55d:	adc    ecx,edi
  41c55f:	sbb    DWORD PTR [ebp+0x3d],ebp
  41c562:	xchg   ecx,eax
  41c563:	and    bh,BYTE PTR [ebx+esi*4+0x2f]
  41c567:	pop    ds
  41c568:	(bad)  
  41c569:	hlt    
  41c56a:	jle    0x41c510
  41c56c:	cdq    
  41c56d:	mov    WORD PTR es:[esi],?
  41c570:	call   DWORD PTR ds:0x4431eb61
  41c576:	fdiv   QWORD PTR [ebx]
  41c578:	pop    esi
  41c579:	push   esi
  41c57a:	out    dx,al
  41c57b:	lods   eax,DWORD PTR ds:[esi]
  41c57c:	pop    ds
  41c57d:	jne    0x41c5bc
  41c57f:	mov    ebp,0xe8273602
  41c584:	and    BYTE PTR [edx-0x4c],dh
  41c587:	inc    esp
  41c588:	jno    0x41c5e1
  41c58a:	ficom  WORD PTR [ebx]
  41c58c:	cmp    eax,DWORD PTR [edx+0x5449178a]
  41c592:	clc    
  41c593:	jo     0x41c543
  41c595:	lods   al,BYTE PTR ds:[esi]
  41c596:	out    dx,al
  41c597:	pusha  
  41c598:	and    BYTE PTR [eax+0x59],al
  41c59b:	dec    ebx
  41c59c:	sub    dl,bh
  41c59e:	rol    DWORD PTR [eax+ebx*2-0x4e8752bb],1
  41c5a5:	lea    ecx,[eax]
  41c5a7:	dec    edi
  41c5a8:	cmp    esp,DWORD PTR [ebx-0x70]
  41c5ab:	xchg   BYTE PTR [ecx],al
  41c5ad:	and    DWORD PTR [ebx],0x33d1a5eb
  41c5b3:	push   ds
  41c5b4:	cwde   
  41c5b5:	out    dx,al
  41c5b6:	sahf   
  41c5b7:	jp     0x41c5ff
  41c5b9:	leave  
  41c5ba:	mov    ecx,0x1545d103
  41c5bf:	sbb    al,0x5d
  41c5c1:	push   0xffffffee
  41c5c3:	xchg   DWORD PTR [ecx],edx
  41c5c5:	inc    ebp
  41c5c6:	ror    BYTE PTR [ecx-0xc0548a0],1
  41c5cc:	jnp    0x41c5f4
  41c5ce:	jle    0x41c551
  41c5d0:	pop    ds
  41c5d1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41c5d3:	sbb    BYTE PTR [ecx+0x2b4f1c80],al
  41c5d9:	mov    eax,0xc5ea94ec
  41c5de:	pop    es
  41c5df:	or     DWORD PTR [esi],ecx
  41c5e1:	repnz into 
  41c5e3:	ds in  eax,dx
  41c5e5:	dec    edx
  41c5e6:	fimul  WORD PTR [ebp-0x4d452441]
  41c5ec:	clc    
  41c5ed:	rol    DWORD PTR [esi-0x10a79463],1
  41c5f3:	xor    al,0xeb
  41c5f5:	fild   QWORD PTR [ebx-0x4f]
  41c5f8:	ficom  DWORD PTR [ecx+edx*8-0x1d]
  41c5fc:	push   0x76
  41c5fe:	arpl   WORD PTR [edx-0x58],bp
  41c601:	inc    ebp
  41c602:	iret   
  41c603:	inc    ebp
  41c604:	inc    esp
  41c605:	sbb    DWORD PTR [edx-0x5],esi
  41c608:	fistp  DWORD PTR [edi+edx*4-0x6e]
  41c60c:	ins    DWORD PTR es:[edi],dx
  41c60d:	arpl   WORD PTR [eax+0x5eb86260],dx
  41c613:	hlt    
  41c614:	cmc    
  41c615:	(bad)  
  41c616:	jbe    0x41c601
  41c618:	dec    ecx
  41c619:	lods   eax,DWORD PTR ds:[esi]
  41c61a:	jns    0x41c602
  41c61c:	inc    ebx
  41c61d:	cmp    edx,esi
  41c61f:	dec    ebx
  41c620:	or     al,ah
  41c622:	out    0x86,eax
  41c624:	jecxz  0x41c612
  41c626:	mov    esi,?
  41c628:	sbb    ebp,DWORD PTR [ebp+ebp*8-0x1dbad08b]
  41c62f:	sbb    eax,0xa5a47e57
  41c634:	lahf   
  41c635:	je     0x41c660
  41c637:	call   0xd68a:0x18e193ae
  41c63e:	repz pop edx
  41c640:	scas   al,BYTE PTR es:[edi]
  41c641:	dec    esp
  41c642:	sbb    eax,0x6240228f
  41c647:	mov    ds:0xc554f66b,eax
  41c64c:	cwde   
  41c64d:	shr    BYTE PTR [ebx+0xf],cl
  41c650:	cld    
  41c651:	adc    eax,0xb17bde4d
  41c656:	mov    ?,ecx
  41c658:	xchg   esp,esp
  41c65a:	mov    ecx,0x1dae931d
  41c65f:	test   al,0x68
  41c661:	scas   al,BYTE PTR es:[edi]
  41c662:	mov    BYTE PTR [edx],dl
  41c664:	(bad)  
  41c665:	cmp    esi,ebp
  41c667:	aad    0x71
  41c669:	push   ecx
  41c66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c66b:	jns    0x41c696
  41c66d:	inc    ebp
  41c66e:	adc    al,0x1e
  41c670:	ins    DWORD PTR es:[edi],dx
  41c671:	sub    eax,0xec5cf2d8
  41c676:	push   ebx
  41c677:	rcl    esp,1
  41c679:	sub    BYTE PTR [esi],ch
  41c67b:	push   ss
  41c67c:	jne    0x41c6ab
  41c67e:	daa    
  41c67f:	imul   ecx,ebx,0xc015afc0
  41c685:	jne    0x41c67b
  41c687:	jecxz  0x41c622
  41c689:	outs   dx,BYTE PTR ds:[esi]
  41c68a:	imul   eax,DWORD PTR [edx-0x1c],0x51
  41c68e:	sub    al,BYTE PTR [edi+0x7d65effc]
  41c694:	sahf   
  41c695:	mov    edx,DWORD PTR [ecx+0x123a846f]
  41c69b:	cdq    
  41c69c:	arpl   WORD PTR [ecx-0x1e],ax
  41c69f:	bound  ebx,QWORD PTR [ebx+0x2a5d9e24]
  41c6a5:	jl     0x41c67f
  41c6a7:	inc    esi
  41c6a8:	jp     0x41c6d5
  41c6aa:	dec    esi
  41c6ab:	(bad)  
  41c6ac:	or     BYTE PTR [ebx+0x4739e711],bh
  41c6b2:	aas    
  41c6b3:	mov    esp,0xa73c37c2
  41c6b8:	repz test DWORD PTR [ecx+0x16],eax
  41c6bc:	repnz out dx,eax
  41c6be:	cwde   
  41c6bf:	pop    ds
  41c6c0:	and    BYTE PTR [eax],al
  41c6c2:	mov    bl,0xf2
  41c6c4:	(bad)  
  41c6c5:	jae    0x41c731
  41c6c7:	call   0x42c02a1a
  41c6cc:	adc    eax,0x27b1e5b1
  41c6d1:	mov    esi,0x8bf3026
  41c6d6:	mov    bl,0x2c
  41c6d8:	and    DWORD PTR [esi+0x1dd2eeeb],edx
  41c6de:	xor    al,0x3f
  41c6e0:	pop    ecx
  41c6e1:	dec    esp
  41c6e2:	int    0x9
  41c6e4:	scas   al,BYTE PTR es:[edi]
  41c6e5:	shl    ecx,0xf3
  41c6e8:	sub    ebx,DWORD PTR [ecx]
  41c6ea:	fucom  st(1)
  41c6ec:	mov    ecx,esi
  41c6ee:	loopne 0x41c72f
  41c6f0:	sbb    ebp,DWORD PTR [eax+0x404f0554]
  41c6f6:	inc    ebp
  41c6f7:	fstp   st(0)
  41c6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6fa:	(bad)  
  41c6fb:	inc    eax
  41c6fc:	jne    0x41c6ac
  41c6fe:	push   esi
  41c6ff:	and    DWORD PTR [ebx-0x5c],0x1b
  41c703:	jno    0x41c69d
  41c705:	ins    BYTE PTR es:[edi],dx
  41c706:	je     0x41c696
  41c708:	dec    ebx
  41c709:	fcmovnbe st,st(0)
  41c70b:	iret   
  41c70c:	jns    0x41c6d0
  41c70e:	add    ecx,DWORD PTR [esi+0x688f0e74]
  41c714:	nop
  41c715:	jmp    0x2c64:0xf84bc932
  41c71c:	(bad)  
  41c71d:	shl    DWORD PTR [ebp+0x366697b5],1
  41c723:	sbb    al,0xc0
  41c725:	push   esp
  41c726:	jo     0x41c734
  41c728:	aas    
  41c729:	jae    0x41c730
  41c72b:	stos   BYTE PTR es:[edi],al
  41c72c:	fild   QWORD PTR [ebx]
  41c72e:	add    dl,BYTE PTR [esi]
  41c730:	mov    al,0x2
  41c732:	shl    BYTE PTR [esi+0x65ffa09e],0x6e
  41c739:	pop    ebx
  41c73a:	fistp  WORD PTR [edx+0x17]
  41c73d:	clc    
  41c73e:	xchg   ebx,eax
  41c73f:	cld    
  41c740:	xlat   BYTE PTR ds:[ebx]
  41c741:	push   edi
  41c742:	pop    ss
  41c743:	jns    0x41c79b
  41c745:	jmp    0xf4732129
  41c74a:	jo     0x41c72d
  41c74c:	arpl   dx,di
  41c74e:	mov    eax,ds:0x4aa8505e
  41c753:	push   ebx
  41c754:	add    eax,0x4bd1c9f5
  41c759:	aas    
  41c75a:	push   0xffffff89
  41c75c:	ds call 0xf80b:0x9031b939
  41c764:	test   DWORD PTR [edx+0x6d],ebx
  41c767:	sub    al,0x58
  41c769:	jg     0x41c7a2
  41c76b:	cmp    ebx,esp
  41c76d:	sti    
  41c76e:	dec    edi
  41c76f:	aaa    
  41c770:	sbb    dl,BYTE PTR [ebx]
  41c772:	cmp    eax,0x587031d4
  41c777:	imul   eax,DWORD PTR [eax-0x4b],0xfffffff7
  41c77b:	xchg   ebx,eax
  41c77c:	bound  esp,QWORD PTR [edx-0x6f]
  41c77f:	lds    esi,FWORD PTR [ebx]
  41c781:	retf   
  41c782:	(bad)  
  41c783:	xor    bh,dh
  41c785:	call   0x3c1ddd5e
  41c78a:	add    DWORD PTR [ecx+edx*2+0x1e57216c],0xffffff8a
  41c792:	jge    0x41c7bc
  41c794:	dec    ebx
  41c795:	jmp    0xf845:0x51acd151
  41c79c:	inc    edi
  41c79d:	int3   
  41c79e:	call   DWORD PTR [edx-0x43]
  41c7a1:	(bad)  
  41c7a2:	xchg   edi,eax
  41c7a3:	fmulp  st(4),st
  41c7a5:	mov    bh,0x5b
  41c7a7:	(bad)  
  41c7a8:	jmp    0x592cbce7
  41c7ad:	sub    ecx,DWORD PTR [ecx]
  41c7af:	ret    
  41c7b0:	pop    ebx
  41c7b1:	lods   al,BYTE PTR ds:[esi]
  41c7b2:	add    ebx,esi
  41c7b4:	pop    ebp
  41c7b5:	adc    ch,cl
  41c7b7:	int3   
  41c7b8:	ja     0x41c7f7
  41c7ba:	adc    bl,BYTE PTR [eax-0x357ec0bb]
  41c7c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c1:	rcr    DWORD PTR [ebx],cl
  41c7c3:	mov    esi,0x76121817
  41c7c8:	add    cl,ah
  41c7ca:	test   DWORD PTR [edi+0x47b760a8],ebp
  41c7d0:	int    0x19
  41c7d2:	jo     0x41c7b5
  41c7d4:	pop    edx
  41c7d5:	pop    ss
  41c7d6:	dec    edi
  41c7d7:	dec    ecx
  41c7d8:	test   DWORD PTR [esi-0x68],0x73fd47f3
  41c7df:	jnp    0x41c7c2
  41c7e1:	std    
  41c7e2:	or     eax,0x2daa1fd9
  41c7e7:	bound  esi,QWORD PTR [edx+0x77c62e22]
  41c7ed:	cdq    
  41c7ee:	xor    eax,0x3f041ee5
  41c7f3:	es je  0x41c874
  41c7f6:	popa   
  41c7f7:	jb     0x41c78c
  41c7f9:	pop    ebx
  41c7fa:	in     al,dx
  41c7fb:	mov    ds:0x67722ab5,eax
  41c800:	arpl   di,si
  41c802:	adc    al,0x1a
  41c804:	pop    ebx
  41c805:	int3   
  41c806:	ins    BYTE PTR es:[edi],dx
  41c807:	cmc    
  41c808:	mov    esi,0x39d1adb2
  41c80d:	adc    al,0xbc
  41c80f:	mov    dh,0x24
  41c811:	adc    BYTE PTR [edi-0x40],dh
  41c814:	jne    0x41c7b0
  41c816:	push   es
  41c817:	call   0xaaff96b0
  41c81c:	imul   eax,DWORD PTR [esi],0x9922b580
  41c822:	dec    ecx
  41c823:	arpl   WORD PTR ds:[ecx-0x5a],si
  41c827:	mov    cl,0xfb
  41c829:	xchg   edx,eax
  41c82a:	xlat   BYTE PTR ds:[ebx]
  41c82b:	dec    esi
  41c82c:	or     eax,0x1ea9b8ce
  41c831:	stc    
  41c832:	inc    ecx
  41c833:	jns    0x41c7e1
  41c835:	mov    DWORD PTR ds:0xd3a7e2e8,ecx
  41c83b:	enter  0x1e0c,0x89
  41c83f:	out    dx,al
  41c840:	popf   
  41c841:	add    DWORD PTR ds:0x396d5df2,0xfffffff6
  41c848:	xor    ebx,DWORD PTR ds:0x9eab85da
  41c84e:	mov    dh,BYTE PTR [esi+0x5062167c]
  41c854:	gs jae 0x41c7fd
  41c857:	and    dh,BYTE PTR [esi]
  41c859:	dec    ebp
  41c85a:	aaa    
  41c85b:	ret    0x7838
  41c85e:	lea    edi,[eax+0x48280467]
  41c864:	out    dx,al
  41c865:	fst    DWORD PTR [edi+0x30]
  41c868:	pop    esi
  41c869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c86a:	and    cl,bh
  41c86c:	push   edi
  41c86d:	loopne 0x41c878
  41c86f:	fst    DWORD PTR [esi+0x35]
  41c872:	sti    
  41c873:	push   0x38
  41c875:	jbe    0x41c809
  41c877:	repz pop eax
  41c879:	into   
  41c87a:	test   eax,0x645c372a
  41c87f:	das    
  41c880:	addr16 icebp 
  41c882:	pushf  
  41c883:	xchg   BYTE PTR [edx],dl
  41c885:	ret    0xa2bc
  41c888:	adc    eax,0xd179154
  41c88d:	out    0x3a,eax
  41c88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c891:	sub    eax,0x27d59d1e
  41c896:	add    cl,BYTE PTR [esi+ebx*2+0x4]
  41c89a:	data16 das 
  41c89c:	dec    edi
  41c89d:	pop    esi
  41c89e:	iret   
  41c89f:	shr    DWORD PTR [eax],0x14
  41c8a2:	cmp    al,0xf7
  41c8a4:	mov    ecx,0x28b8797b
  41c8a9:	sub    eax,0xd10ab20f
  41c8ae:	(bad)  
  41c8af:	pop    edi
  41c8b0:	jne    0x41c857
  41c8b2:	sbb    BYTE PTR [ecx+edx*1],cl
  41c8b5:	vpmuludq xmm0,xmm5,XMMWORD PTR [ebx+0x1e9a75e0]
  41c8bd:	sbb    al,0x7f
  41c8bf:	aad    0xe0
  41c8c1:	cmc    
  41c8c2:	(bad)  
  41c8c3:	div    dh
  41c8c5:	inc    ecx
  41c8c6:	inc    edi
  41c8c7:	(bad)  
  41c8c8:	xor    bh,al
  41c8ca:	jle    0x41c930
  41c8cc:	int    0xc2
  41c8ce:	and    al,0x61
  41c8d0:	out    0xa3,eax
  41c8d2:	and    BYTE PTR [eax*8-0x184f102d],dl
  41c8d9:	mov    ebp,0x4f6cdbbd
  41c8de:	ds js  0x41c890
  41c8e1:	daa    
  41c8e2:	inc    esi
  41c8e3:	and    al,0xf0
  41c8e5:	popa   
  41c8e6:	icebp  
  41c8e7:	ror    BYTE PTR [edx+0x55],0xd3
  41c8eb:	pop    esp
  41c8ec:	add    al,0x92
  41c8ee:	add    DWORD PTR [ecx+0x5fe262ae],edi
  41c8f4:	(bad)
  41c8f7:	xlat   BYTE PTR ds:[ebx]
  41c8f8:	xor    BYTE PTR [ebx],cl
  41c8fa:	inc    ebx
  41c8fb:	lds    esp,FWORD PTR [edx+ecx*4]
  41c8fe:	(bad)  
  41c8ff:	jp     0x41c968
  41c901:	dec    eax
  41c902:	cdq    
  41c903:	sahf   
  41c904:	sub    ecx,0xa30b3816
  41c90a:	sub    eax,DWORD PTR [edi]
  41c90c:	or     eax,0x8e997603
  41c911:	popa   
  41c912:	into   
  41c913:	xchg   ebp,eax
  41c914:	lods   al,BYTE PTR ds:[esi]
  41c915:	xor    DWORD PTR [eax+0x28743ad7],esp
  41c91b:	or     eax,0x6e210c72
  41c920:	jg     0x41c97e
  41c922:	or     eax,DWORD PTR [eax-0x3a40d11]
  41c928:	arpl   dx,dx
  41c92a:	mov    BYTE PTR ds:0xe5b44532,ah
  41c930:	lods   al,BYTE PTR ds:[esi]
  41c931:	add    BYTE PTR [ecx+eax*2],al
  41c934:	mov    ebx,0x6e72b1d
  41c939:	or     DWORD PTR [ebp+0x71],edx
  41c93c:	scas   al,BYTE PTR es:[edi]
  41c93d:	adc    DWORD PTR [eax],ebx
  41c93f:	xlat   BYTE PTR ds:[ebx]
  41c940:	imul   esi,esp,0xffffffbe
  41c943:	ror    DWORD PTR [eax],0x41
  41c946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c947:	or     dl,BYTE PTR [edi]
  41c949:	or     edx,eax
  41c94b:	popf   
  41c94c:	xchg   BYTE PTR [ecx+eax*4],bl
  41c94f:	loopne 0x41c94c
  41c951:	xor    al,0xc6
  41c953:	cmp    DWORD PTR [edx],ecx
  41c955:	test   al,0x3d
  41c957:	std    
  41c958:	lods   al,BYTE PTR ds:[esi]
  41c959:	adc    al,0x40
  41c95b:	hlt    
  41c95c:	mov    WORD PTR [ebx+0x364b411f],cs
  41c962:	stos   DWORD PTR es:[edi],eax
  41c963:	ds dec ecx
  41c965:	je     0x41c93d
  41c967:	xchg   edx,eax
  41c968:	mov    edx,0x49409e9a
  41c96d:	sti    
  41c96e:	xchg   cx,ax
  41c970:	aaa    
  41c971:	jnp    0x41c939
  41c973:	imul   esi,ecx,0xffffffa2
  41c976:	call   0x1585:0x65412211
  41c97d:	pop    edi
  41c97e:	xchg   ch,bh
  41c980:	and    dl,BYTE PTR [ecx+0x7f]
  41c983:	push   eax
  41c984:	mov    eax,ds:0xc80113ee
  41c989:	push   ecx
  41c98a:	repnz mov BYTE PTR [ecx],bl
  41c98d:	pop    esp
  41c98e:	sbb    esp,0x4b
  41c991:	ret    0x5bad
  41c994:	mov    esp,0xfa57a593
  41c999:	das    
  41c99a:	aad    0x8c
  41c99c:	int    0xb3
  41c99e:	(bad)  
  41c99f:	cld    
  41c9a0:	aam    0x32
  41c9a2:	or     cl,BYTE PTR [ecx+0xcdb074d]
  41c9a8:	ret    
  41c9a9:	add    DWORD PTR ds:0xc4845800,ebp
  41c9af:	in     al,dx
  41c9b0:	adc    eax,0xad9e91cf
  41c9b5:	mov    cl,0x21
  41c9b7:	and    eax,0xb527b2f4
  41c9bc:	inc    edi
  41c9bd:	fisttp QWORD PTR [edi+0x7ad078ac]
  41c9c3:	ja     0x41c9b8
  41c9c5:	in     eax,dx
  41c9c6:	int3   
  41c9c7:	in     eax,dx
  41c9c8:	or     eax,0x3f4fc9cd
  41c9cd:	sahf   
  41c9ce:	pushf  
  41c9cf:	jae    0x41ca03
  41c9d1:	sub    BYTE PTR [ebx-0x76],cl
  41c9d4:	and    al,0x3a
  41c9d6:	dec    ebx
  41c9d7:	jmp    DWORD PTR [edi]
  41c9d9:	gs scas al,BYTE PTR es:[edi]
  41c9db:	in     eax,dx
  41c9dc:	cli    
  41c9dd:	mov    BYTE PTR [edx+ebp*2-0x2a],ah
  41c9e1:	dec    edx
  41c9e2:	sbb    BYTE PTR [esi-0x3b],ch
  41c9e5:	cld    
  41c9e6:	pop    ecx
  41c9e7:	mov    WORD PTR [ebx+0x7b],?
  41c9ea:	mov    gs,WORD PTR [ecx]
  41c9ec:	mov    ecx,0x12971eed
  41c9f1:	jmp    0x7c5668af
  41c9f6:	iret   
  41c9f7:	loop   0x41c9c1
  41c9f9:	inc    ebx
  41c9fa:	inc    edx
  41c9fb:	push   edx
  41c9fc:	cmp    BYTE PTR [eax+0x75468919],dh
  41ca02:	mov    al,ds:0x1dd13e02
  41ca07:	rcl    edi,0x29
  41ca0a:	stc    
  41ca0b:	dec    ebx
  41ca0c:	push   eax
  41ca0d:	ret    
  41ca0e:	cmp    DWORD PTR [esi],edx
  41ca10:	stos   DWORD PTR es:[edi],eax
  41ca11:	ins    BYTE PTR es:[edi],dx
  41ca12:	push   eax
  41ca13:	call   0xe99f:0x55899464
  41ca1a:	sahf   
  41ca1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca1c:	out    0xd6,eax
  41ca1e:	mov    ah,0xc4
  41ca20:	pop    ds
  41ca21:	repz mov al,0xa5
  41ca24:	push   0xb4156d4e
  41ca29:	out    0x8,eax
  41ca2b:	push   esp
  41ca2c:	jnp    0x41ca6c
  41ca2e:	jne    0x41ca07
  41ca30:	mov    dh,0x3
  41ca32:	out    0x56,eax
  41ca34:	pusha  
  41ca35:	mov    ebx,0xd694701e
  41ca3a:	sbb    al,0xd7
  41ca3c:	xchg   DWORD PTR [edi],edi
  41ca3e:	stos   DWORD PTR es:[edi],eax
  41ca3f:	pop    esi
  41ca40:	pop    ecx
  41ca41:	mov    ch,0xe6
  41ca43:	fwait
  41ca44:	mov    cl,0xbb
  41ca46:	lock xchg esi,eax
  41ca48:	jle    0x41ca2c
  41ca4a:	xchg   edi,eax
  41ca4b:	ret    
  41ca4c:	mov    al,0x5c
  41ca4e:	push   ss
  41ca4f:	or     al,0x80
  41ca51:	(bad)  
  41ca52:	dec    esi
  41ca53:	push   edi
  41ca54:	test   BYTE PTR [eax],0x6
  41ca57:	jmp    0x37624444
  41ca5c:	ins    DWORD PTR es:[edi],dx
  41ca5d:	out    dx,eax
  41ca5e:	dec    esi
  41ca5f:	mov    edi,0xee7ded6c
  41ca64:	sar    ch,0x2b
  41ca67:	cmp    ch,BYTE PTR [esi+0x3e]
  41ca6a:	or     DWORD PTR [ebx],0x364add20
  41ca70:	mov    BYTE PTR ds:0xafa98fc9,ch
  41ca76:	add    DWORD PTR [edi-0xd7204b6],ebp
  41ca7c:	jns    0x41cac7
  41ca7e:	sbb    BYTE PTR [ebp+ebx*8+0x37ae25d7],dl
  41ca85:	push   ss
  41ca86:	cmp    DWORD PTR [edx+0x10],0x1102ac8a
  41ca8d:	pop    ebp
  41ca8e:	xor    al,0xfc
  41ca90:	call   0x7b51:0xa6b310e7
  41ca97:	inc    edi
  41ca98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca99:	or     eax,0xe139c1e8
  41ca9e:	mov    edx,0xde09f71e
  41caa3:	dec    ebp
  41caa4:	in     al,0xa3
  41caa6:	inc    ebx
  41caa7:	sbb    edi,DWORD PTR [eax]
  41caa9:	jns    0x41caa1
  41caab:	lds    eax,FWORD PTR [ecx-0x30b599aa]
  41cab1:	and    al,0x70
  41cab3:	jge    0x41cae2
  41cab5:	popf   
  41cab6:	mov    dh,0xfc
  41cab8:	xchg   ebx,eax
  41cab9:	xor    DWORD PTR [ebx+ebp*4-0x19],edi
  41cabd:	clc    
  41cabe:	mov    al,ds:0xeb31a804
  41cac3:	xor    ch,BYTE PTR ds:0xeb035b6a
  41cac9:	add    bl,0x37
  41cacc:	lods   eax,DWORD PTR ds:[esi]
  41cacd:	cmp    ah,BYTE PTR [ecx+eiz*1]
  41cad0:	clc    
  41cad1:	test   BYTE PTR [ebp-0x6a],bl
  41cad4:	shl    DWORD PTR [edi-0x1d7eccba],cl
  41cada:	sahf   
  41cadb:	(bad)  
  41cadc:	out    dx,al
  41cadd:	in     al,dx
  41cade:	push   ebx
  41cadf:	jg     0x41cb3b
  41cae1:	pop    edx
  41cae2:	adc    BYTE PTR [edx+0x1c38c7a3],ch
  41cae8:	pop    es
  41cae9:	sub    dl,BYTE PTR [edi+0x57]
  41caec:	lea    edi,cs:[ebx+0x3520fead]
  41caf3:	lea    edi,[si+0x2dcf]
  41caf8:	pop    edi
  41caf9:	dec    esi
  41cafa:	xor    DWORD PTR [edi],ecx
  41cafc:	push   es
  41cafd:	sqrtps xmm5,XMMWORD PTR [ebp+ecx*4-0x36]
  41cb02:	mov    ebx,0x49e3c9b7
  41cb07:	repz (bad) 
  41cb09:	mov    bl,0xf6
  41cb0b:	inc    ebx
  41cb0c:	out    dx,al
  41cb0d:	mov    edi,0x192e57cb
  41cb12:	jp     0x41cb2e
  41cb14:	or     dl,BYTE PTR ds:0x84e3603d
  41cb1a:	mov    ah,dh
  41cb1c:	imul   edi,DWORD PTR [edi+0x7e],0xffffffdc
  41cb20:	pusha  
  41cb21:	(bad)  
  41cb22:	jp     0x41caf6
  41cb24:	hlt    
  41cb25:	and    ebp,edi
  41cb27:	xchg   ecx,eax
  41cb28:	mov    ds:0x3fcd3d44,eax
  41cb2d:	jo     0x41cae1
  41cb2f:	das    
  41cb30:	sub    ecx,esi
  41cb32:	mov    ebp,0xf8547760
  41cb37:	xor    DWORD PTR [eax],esp
  41cb39:	sub    BYTE PTR [edx+0x5c],al
  41cb3c:	test   ah,bl
  41cb3e:	popf   
  41cb3f:	push   0xffffffc9
  41cb41:	xchg   edi,eax
  41cb42:	adc    BYTE PTR [esi+0x1d5d866],0x65
  41cb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb4a:	loope  0x41cbb7
  41cb4c:	in     eax,dx
  41cb4d:	mov    ecx,0x1fe43042
  41cb52:	push   cs
  41cb53:	lods   eax,DWORD PTR ds:[esi]
  41cb54:	jge    0x41cb08
  41cb56:	orps   xmm2,XMMWORD PTR [esi]
  41cb59:	mov    cl,0xd1
  41cb5b:	int    0x9e
  41cb5d:	popf   
  41cb5e:	test   eax,0x9e6b8e1f
  41cb63:	rol    ch,1
  41cb65:	cmp    al,0xd5
  41cb67:	jo     0x41cb56
  41cb69:	imul   DWORD PTR [edx]
  41cb6b:	add    esi,DWORD PTR [ebx-0x34]
  41cb6e:	xchg   ecx,eax
  41cb6f:	out    0xc2,eax
  41cb71:	mov    ss,WORD PTR [esi+0x60d31ebe]
  41cb77:	xor    DWORD PTR [ebx+0xc],ebp
  41cb7a:	mov    ebx,0x5722165e
  41cb7f:	ret    
  41cb80:	shl    DWORD PTR [edx],0xa0
  41cb83:	mov    al,0x6
  41cb85:	test   eax,0xd38c5ae7
  41cb8a:	add    al,BYTE PTR [edx+eax*4]
  41cb8d:	pop    edi
  41cb8e:	data16 jmp 0x41cc0b
  41cb91:	adc    ebx,DWORD PTR [ecx+ecx*2-0x2a]
  41cb95:	adc    BYTE PTR [edi+0x594849d9],dh
  41cb9b:	iret   
  41cb9c:	(bad)  
  41cb9d:	(bad)  
  41cb9e:	mov    dl,0xe4
  41cba0:	adc    DWORD PTR [ecx],eax
  41cba2:	cmp    BYTE PTR [esi+0x8af381b],bh
  41cba8:	add    esp,esi
  41cbaa:	dec    esp
  41cbab:	sub    eax,0x98a1688a
  41cbb0:	pop    ebp
  41cbb1:	sbb    ah,dh
  41cbb3:	bnd jg 0x41cb71
  41cbb6:	fsub   st(7),st
  41cbb8:	cmp    DWORD PTR ss:[eax-0x43],edx
  41cbbc:	inc    ebx
  41cbbd:	mov    ecx,0xb3cca7f5
  41cbc2:	repnz and al,0x1e
  41cbc5:	pop    edi
  41cbc6:	lea    esi,[ebp+ecx*8+0x6b]
  41cbca:	loopne 0x41cc47
  41cbcc:	test   BYTE PTR [edx],cl
  41cbce:	dec    di
  41cbd0:	retf   0xa3da
  41cbd3:	sub    BYTE PTR [ebp+0x6],dh
  41cbd6:	jo     0x41cbae
  41cbd8:	test   DWORD PTR [esi-0x5cba7f73],0x728ef21a
  41cbe2:	cmp    ecx,DWORD PTR [esi-0x155356ac]
  41cbe8:	pushf  
  41cbe9:	xchg   BYTE PTR [ecx-0x40],ch
  41cbec:	pop    ss
  41cbed:	mov    WORD PTR [edi-0x7],gs
  41cbf0:	nop
  41cbf1:	mov    dh,0x84
  41cbf3:	ficomp DWORD PTR [edi]
  41cbf5:	dec    edx
  41cbf6:	jmp    DWORD PTR [esp+ebx*2]
  41cbf9:	xor    eax,0x580d5467
  41cbfe:	pushf  
  41cbff:	cdq    
  41cc00:	loop   0x41cc4a
  41cc02:	pop    ecx
  41cc03:	and    DWORD PTR [edx+0x393e0747],esp
  41cc09:	imul   ebp,DWORD PTR [ebx-0x5cc85a64],0x5b
  41cc10:	ss jmp 0x4640039e
  41cc16:	sbb    cl,BYTE PTR [ecx+esi*1-0x58e9eae6]
  41cc1d:	and    eax,0xfdbc0c90
  41cc22:	xchg   edx,eax
  41cc23:	jbe    0x41cbb0
  41cc25:	ss loop 0x41cc53
  41cc28:	lods   al,BYTE PTR ds:[esi]
  41cc29:	cmc    
  41cc2a:	rcr    ebx,0xea
  41cc2d:	fdiv   DWORD PTR [edi+0x2b]
  41cc30:	out    0x3d,eax
  41cc32:	inc    edi
  41cc33:	inc    ebp
  41cc34:	cmp    eax,0x4bc8f16f
  41cc39:	aas    
  41cc3a:	popf   
  41cc3b:	jae    0x41cc43
  41cc3d:	jg     0x41cc84
  41cc3f:	jae    0x41cc74
  41cc41:	jne    0x41cc99
  41cc43:	jnp    0x41cc99
  41cc45:	xor    ecx,DWORD PTR [edi+0x67]
  41cc48:	xor    DWORD PTR [edx+0x11],edx
  41cc4b:	es in  eax,dx
  41cc4d:	jno    0x41cc4f
  41cc4f:	sub    DWORD PTR [ebx],ecx
  41cc51:	mov    al,ds:0xb63d062
  41cc56:	cmp    ch,dl
  41cc58:	iret   
  41cc59:	je     0x41ccd1
  41cc5b:	ds mov al,0xb4
  41cc5e:	push   cs
  41cc5f:	ins    DWORD PTR es:[edi],dx
  41cc60:	(bad)  
  41cc61:	mov    eax,0xdb7bb8f
  41cc66:	mov    bl,0x47
  41cc68:	push   es
  41cc69:	cmp    ebp,DWORD PTR [eax+0x52d86b05]
  41cc6f:	imul   edx,DWORD PTR [eax+0x7ea81ba],0x30
  41cc76:	push   cs
  41cc77:	add    al,0x5d
  41cc79:	ss adc al,0xb4
  41cc7c:	jmp    0x41cca6
  41cc7e:	mov    WORD PTR [esi+0x2d],ss
  41cc81:	adc    eax,DWORD PTR [ecx-0x12b6d9ca]
  41cc87:	push   ebx
  41cc88:	push   eax
  41cc89:	ds or  al,0x7a
  41cc8d:	jbe    0x41cc1f
  41cc8f:	cs jp  0x41ccdd
  41cc92:	data16 and BYTE PTR [edx],0xed
  41cc96:	div    ch
  41cc98:	push   ds
  41cc99:	xchg   BYTE PTR [ebp-0x26],bl
  41cc9c:	cmp    ebx,DWORD PTR [ebx]
  41cc9e:	sahf   
  41cc9f:	push   ss
  41cca0:	int    0xd9
  41cca2:	aaa    
  41cca3:	jns    0x41ccda
  41cca5:	xor    esi,DWORD PTR [esi-0x41]
  41cca8:	repnz loopne 0x41ccfe
  41ccab:	pop    es
  41ccac:	add    BYTE PTR [eax+ecx*8+0x2f9a6a89],0x1f
  41ccb4:	xor    ebx,ebp
  41ccb6:	mov    ecx,0xd9368bf4
  41ccbb:	pop    ds
  41ccbc:	imul   edx,edx,0xf940c3aa
  41ccc2:	xchg   DWORD PTR [ecx-0x47e49263],ecx
  41ccc8:	loop   0x41cd10
  41ccca:	fnsave [ebp-0x72]
  41cccd:	sbb    DWORD PTR [edx],edx
  41cccf:	cmp    eax,0xc07b6d00
  41ccd4:	mov    esi,?
  41ccd6:	stos   BYTE PTR es:[edi],al
  41ccd7:	or     bl,ch
  41ccd9:	push   ss
  41ccda:	xor    DWORD PTR [ebx-0x42],ebp
  41ccdd:	outs   dx,BYTE PTR ds:[esi]
  41ccde:	imul   ebx,DWORD PTR ds:0xe8698235,0xba5f77a3
  41cce8:	push   ds
  41cce9:	loope  0x41ccf2
  41cceb:	jnp    0x41cd03
  41cced:	sub    DWORD PTR [ebx],esp
  41ccef:	mov    BYTE PTR [eax+0x62],dl
  41ccf2:	sub    bp,WORD PTR [edx-0x694da2ce]
  41ccf9:	xchg   ebx,eax
  41ccfa:	mov    ch,0xb0
  41ccfc:	sub    BYTE PTR [edi],dl
  41ccfe:	push   ecx
  41ccff:	retf   0x4890
  41cd02:	(bad)  
  41cd03:	arpl   WORD PTR [edi],sp
  41cd05:	jge    0x41ccf8
  41cd07:	ja     0x41cd68
  41cd09:	xor    al,0xd3
  41cd0b:	adc    esi,DWORD PTR [edi+esi*8]
  41cd0e:	jg     0x41cd60
  41cd10:	jne    0x41cce1
  41cd12:	out    0x5c,al
  41cd14:	std    
  41cd15:	(bad)  
  41cd17:	sti    
  41cd18:	pop    esp
  41cd19:	cwde   
  41cd1a:	rcl    ebp,1
  41cd1c:	int3   
  41cd1d:	push   eax
  41cd1e:	xchg   edx,eax
  41cd1f:	cmp    cl,BYTE PTR [ecx]
  41cd21:	jg     0x41ccc7
  41cd23:	xchg   esp,eax
  41cd24:	in     al,dx
  41cd25:	in     al,0x95
  41cd27:	adc    edx,DWORD PTR [esi+0x55]
  41cd2a:	aaa    
  41cd2b:	jle    0x41cd17
  41cd2d:	stos   DWORD PTR es:[edi],eax
  41cd2e:	stc    
  41cd2f:	daa    
  41cd30:	sbb    eax,0x41666626
  41cd35:	inc    esp
  41cd36:	sbb    DWORD PTR [edx],esi
  41cd38:	xchg   ecx,eax
  41cd39:	fdivrp st(1),st
  41cd3b:	enter  0x1f26,0x7e
  41cd3f:	fbstp  TBYTE PTR [ebp+0x128bc0a]
  41cd45:	outs   dx,BYTE PTR ds:[esi]
  41cd46:	push   cs
  41cd47:	add    BYTE PTR es:[ebx-0x49],al
  41cd4b:	gs adc al,0x36
  41cd4e:	mov    ah,0xf9
  41cd50:	inc    eax
  41cd51:	test   al,0xfe
  41cd53:	push   ds
  41cd54:	arpl   WORD PTR [ebx-0x3e156be0],sp
  41cd5a:	mov    ?,ebp
  41cd5c:	push   cs
  41cd5d:	(bad)  
  41cd5e:	jmp    0xe008b41f
  41cd63:	push   0xffffffb2
  41cd65:	sti    
  41cd66:	xor    al,0x8d
  41cd68:	pop    edx
  41cd69:	popa   
  41cd6a:	mov    dh,0x47
  41cd6c:	cmp    BYTE PTR [ecx-0x50],ah
  41cd6f:	and    al,0x79
  41cd71:	and    BYTE PTR [edi-0x13e91bf3],dh
  41cd77:	ffree  st(6)
  41cd79:	mov    esp,0x45d7a708
  41cd7e:	out    dx,eax
  41cd7f:	adc    DWORD PTR [ebp-0xe5e3417],esi
  41cd85:	retf   0x4909
  41cd88:	inc    edi
  41cd89:	xor    BYTE PTR [ecx],bl
  41cd8b:	daa    
  41cd8c:	daa    
  41cd8d:	pop    ecx
  41cd8e:	lock dec edx
  41cd90:	and    edi,DWORD PTR [ecx]
  41cd92:	mov    cl,0xeb
  41cd94:	jno    0x41cd73
  41cd96:	loop   0x41cd56
  41cd98:	push   ss
  41cd99:	push   edi
  41cd9a:	enter  0x88bf,0x20
  41cd9e:	mov    ds:0xe9316c18,al
  41cda3:	lock inc ecx
  41cda5:	add    ecx,ecx
  41cda7:	and    cl,BYTE PTR [eax+0x1ebfd49d]
  41cdad:	mov    dh,BYTE PTR [ecx+0x7ee4dbf3]
  41cdb3:	adc    BYTE PTR [edi],dh
  41cdb5:	in     eax,0xff
  41cdb7:	pop    edi
  41cdb8:	nop
  41cdb9:	and    DWORD PTR [eax+0x1723694],ebx
  41cdbf:	jge    0x41cdd4
  41cdc1:	sub    dl,ah
  41cdc3:	mov    ch,BYTE PTR [esi]
  41cdc5:	sbb    eax,0xdb87d29a
  41cdca:	push   edx
  41cdcb:	call   0x3ed:0xfebb6d0b
  41cdd2:	add    BYTE PTR [ebx+0x2359261c],al
  41cdd8:	out    dx,eax
  41cdd9:	mov    cl,0x69
  41cddb:	xor    DWORD PTR [edi-0x5e93ae78],0xc471da1e
  41cde5:	pop    ds
  41cde6:	(bad)  
  41cde7:	(bad)  
  41cde9:	fisub  WORD PTR [edx*8-0x6517d1ff]
  41cdf0:	and    ah,cl
  41cdf2:	int3   
  41cdf3:	xor    eax,0x5dfd436
  41cdf8:	and    DWORD PTR [ebx+ebp*8+0x25],ebp
  41cdfc:	jns    0x41ce20
  41cdfe:	retf   
  41cdff:	pop    esi
  41ce00:	ins    BYTE PTR es:[edi],dx
  41ce01:	inc    edx
  41ce02:	imul   eax,DWORD PTR [esi+0x4f],0x96283db5
  41ce09:	mov    dh,0x5b
  41ce0b:	aad    0xc9
  41ce0d:	cmp    eax,0xd6cc8fcb
  41ce12:	xchg   esp,eax
  41ce13:	call   0x6b17ad51
  41ce18:	xor    eax,0x21838124
  41ce1d:	and    esp,DWORD PTR [ebp-0x35]
  41ce20:	test   eax,esp
  41ce22:	add    ah,bl
  41ce24:	mov    DWORD PTR [esi],ebx
  41ce26:	jns    0x41ce84
  41ce28:	test   al,0xcf
  41ce2a:	mov    ch,0x84
  41ce2c:	dec    ecx
  41ce2d:	shl    DWORD PTR [ecx+0x94f4c62],cl
  41ce33:	test   BYTE PTR [esi+0x5a35f77b],bl
  41ce39:	addr16 clc 
  41ce3b:	ss jmp 0x41cdf8
  41ce3e:	pop    edi
  41ce3f:	and    al,0x11
  41ce41:	xchg   ebx,eax
  41ce42:	mov    ebx,DWORD PTR [ebx+0x9]
  41ce45:	cs (bad) 
  41ce47:	outs   dx,BYTE PTR ds:[esi]
  41ce48:	dec    edx
  41ce49:	push   ds
  41ce4a:	lea    edi,[ecx-0x48]
  41ce4d:	and    al,BYTE PTR [ecx-0x4ea1d342]
  41ce53:	push   ebp
  41ce54:	or     eax,0x9b101bd5
  41ce59:	ins    BYTE PTR es:[edi],dx
  41ce5a:	and    al,0x6d
  41ce5c:	mov    BYTE PTR [eax+0x2b],al
  41ce5f:	shl    DWORD PTR [ebx+0x6325a630],0xce
  41ce66:	iret   
  41ce67:	adc    al,0xfc
  41ce69:	mov    dl,0xd1
  41ce6b:	js     0x41ce3f
  41ce6d:	inc    ebp
  41ce6e:	sub    WORD PTR [edx],si
  41ce71:	mov    cl,0xcc
  41ce73:	mov    ecx,0x84cf178b
  41ce78:	loopne 0x41ce4e
  41ce7a:	pop    edi
  41ce7b:	push   cs
  41ce7c:	stos   BYTE PTR es:[edi],al
  41ce7d:	pop    eax
  41ce7e:	sub    eax,0xbb9907ec
  41ce83:	(bad)  
  41ce84:	das    
  41ce85:	mov    ch,0x8c
  41ce87:	bound  esp,QWORD PTR [ebp-0xe]
  41ce8a:	xchg   edx,eax
  41ce8b:	std    
  41ce8c:	repnz in eax,dx
  41ce8e:	mov    esi,0x31ec1822
  41ce93:	adc    eax,DWORD PTR [eax]
  41ce95:	int3   
  41ce96:	pusha  
  41ce97:	jg     0x41cecc
  41ce99:	ror    DWORD PTR [esi+edx*4],1
  41ce9c:	mov    ecx,DWORD PTR [ebx+eiz*2+0x17]
  41cea0:	jmp    0xd25e:0x81b11e5e
  41cea7:	mov    dl,0xa9
  41cea9:	inc    ebx
  41ceaa:	jae    0x41ce7b
  41ceac:	sub    al,0x1e
  41ceae:	sbb    BYTE PTR [edx],bh
  41ceb0:	scas   eax,DWORD PTR es:[edi]
  41ceb1:	and    BYTE PTR [ebp+0x14],bh
  41ceb4:	cmp    eax,0xa6e304c0
  41ceb9:	inc    eax
  41ceba:	shl    BYTE PTR [esi-0x4c17687c],cl
  41cec0:	imul   esp,DWORD PTR [eax*1+0x1b68fce4],0x23ee5515
  41cecb:	xchg   edi,eax
  41cecc:	xor    esp,ebx
  41cece:	inc    esi
  41cecf:	out    0xb,eax
  41ced1:	fiadd  DWORD PTR [edx]
  41ced3:	outs   dx,DWORD PTR ds:[esi]
  41ced4:	lds    edx,FWORD PTR [edi-0x23]
  41ced7:	fadd   QWORD PTR [ebx]
  41ced9:	nop
  41ceda:	and    ebp,DWORD PTR [eax]
  41cedc:	imul   esi,DWORD PTR [edi],0xdee36327
  41cee2:	sbb    ebx,0xffffffe1
  41cee5:	mov    WORD PTR [esi+eiz*1],gs
  41cee8:	push   ecx
  41cee9:	std    
  41ceea:	adc    al,0x1
  41ceec:	pop    eax
  41ceed:	xor    eax,0xb0bfc53f
  41cef2:	outs   dx,BYTE PTR ds:[esi]
  41cef3:	dec    ebp
  41cef4:	ret    
  41cef5:	or     eax,0x83530969
  41cefa:	sbb    bl,ah
  41cefc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41cefe:	inc    esp
  41ceff:	xchg   edx,eax
  41cf00:	mov    eax,ds:0x834edd35
  41cf05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf06:	mov    esp,0x5f3fdf36
  41cf0b:	ja     0x41ce9a
  41cf0d:	fdiv   DWORD PTR [esi-0x71]
  41cf10:	cmp    BYTE PTR [edx],0x3
  41cf13:	stos   DWORD PTR es:[edi],eax
  41cf14:	arpl   WORD PTR [ecx+0xa],si
  41cf17:	mov    di,0xce5b
  41cf1b:	mov    bl,0x9e
  41cf1d:	or     al,0xd6
  41cf1f:	clc    
  41cf20:	cwde   
  41cf21:	pop    esi
  41cf22:	lahf   
  41cf23:	xchg   ecx,eax
  41cf24:	fwait
  41cf25:	stos   DWORD PTR es:[edi],eax
  41cf26:	push   eax
  41cf27:	icebp  
  41cf28:	loopne 0x41cf3a
  41cf2a:	add    eax,0xc746ecf8
  41cf2f:	imul   esp,DWORD PTR [edi+0x35],0xffffffdb
  41cf33:	pop    edi
  41cf34:	xchg   ebp,eax
  41cf35:	mov    ebp,0xafc972e1
  41cf3a:	ret    
  41cf3b:	shr    DWORD PTR [ecx],cl
  41cf3d:	jno    0x41cf9f
  41cf3f:	icebp  
  41cf40:	lock mov bh,0xd8
  41cf43:	js     0x41cf48
  41cf45:	or     bh,al
  41cf47:	in     eax,0xd1
  41cf49:	or     ch,0x8f
  41cf4c:	adc    bh,BYTE PTR [eax+ebp*2+0x17bba879]
  41cf53:	lahf   
  41cf54:	jae    0x41cf5a
  41cf56:	mov    WORD PTR [esi-0xf],cs
  41cf59:	into   
  41cf5a:	jg     0x41cfd4
  41cf5c:	ss aam 0x45
  41cf5f:	mov    al,ds:0x32b57bbb
  41cf64:	ja     0x41cf6b
  41cf66:	out    0x53,al
  41cf68:	loopne 0x41cf35
  41cf6a:	and    eax,0x8f952ba3
  41cf6f:	mov    edi,0xae1b4f27
  41cf74:	or     DWORD PTR [edx+ebx*8+0x6f],0xffffff86
  41cf79:	ror    eax,1
  41cf7b:	inc    ecx
  41cf7c:	pop    ds
  41cf7d:	mov    al,ds:0xdb4ad4bb
  41cf82:	in     al,0xd9
  41cf84:	scas   al,BYTE PTR es:[edi]
  41cf85:	repnz ds in al,0xb8
  41cf89:	or     al,ch
  41cf8b:	in     eax,0x32
  41cf8d:	bound  ebp,QWORD PTR [eax]
  41cf8f:	in     al,dx
  41cf90:	dec    esp
  41cf91:	jae    0x41cf41
  41cf93:	push   0xb6c0465
  41cf98:	push   edi
  41cf99:	push   es
  41cf9a:	lahf   
  41cf9b:	imul   ecx,ebp,0xa
  41cf9e:	xchg   esi,eax
  41cf9f:	jmp    0xe523e5a5
  41cfa4:	sar    BYTE PTR [eax+0x1c],0x4a
  41cfa8:	loop   0x41cfc2
  41cfaa:	inc    ebx
  41cfab:	bound  eax,QWORD PTR [edi+0x42067905]
  41cfb1:	div    DWORD PTR [ebx+edx*1-0x2a]
  41cfb5:	add    al,0xcd
  41cfb7:	inc    ecx
  41cfb8:	addr16 pop ecx
  41cfba:	std    
  41cfbb:	or     eax,0x735248c5
  41cfc0:	xchg   ebx,eax
  41cfc1:	shl    DWORD PTR [eax-0x7d],0xce
  41cfc5:	mov    al,ds:0x72a70742
  41cfca:	cld    
  41cfcb:	shl    BYTE PTR [ebp-0x10],cl
  41cfce:	fidiv  DWORD PTR [ebx]
  41cfd0:	jmp    0xbf0e05f2
  41cfd5:	scas   eax,DWORD PTR es:[edi]
  41cfd6:	loopne 0x41cf71
  41cfd8:	mov    ch,BYTE PTR [ebp+0xc]
  41cfdb:	dec    ebp
  41cfdc:	sbb    al,0xf0
  41cfde:	sar    BYTE PTR [esi],1
  41cfe0:	clc    
  41cfe1:	pop    edi
  41cfe2:	push   eax
  41cfe3:	icebp  
  41cfe4:	pop    eax
  41cfe5:	pop    esp
  41cfe6:	ins    BYTE PTR es:[edi],dx
  41cfe7:	lods   al,BYTE PTR ds:[esi]
  41cfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe9:	mov    al,ds:0x140aa067
  41cfee:	inc    ecx
  41cfef:	dec    esi
  41cff0:	ins    BYTE PTR es:[edi],dx
  41cff1:	add    ecx,DWORD PTR [ecx]
  41cff3:	sahf   
  41cff4:	push   0xdfa5c63f
  41cff9:	jns    0x41d079
  41cffb:	pop    edi
  41cffc:	add    al,0xc4
  41cffe:	mov    cl,0xfd
  41d000:	sub    DWORD PTR [ebp+0x54aaeffc],edx
  41d006:	lock jmp 0xa181edfe
  41d00c:	xchg   edx,eax
  41d00d:	add    edi,ecx
  41d00f:	(bad)  
  41d010:	shl    edx,1
  41d012:	sub    al,0x6f
  41d014:	cmc    
  41d015:	mov    edi,0x33e37f9
  41d01a:	push   edi
  41d01b:	sub    ch,BYTE PTR [ecx-0x8]
  41d01e:	daa    
  41d01f:	jg     0x41d059
  41d021:	and    ebp,edx
  41d023:	xlat   BYTE PTR ds:[ebx]
  41d024:	iret   
  41d025:	dec    edi
  41d026:	push   bx
  41d028:	idiv   BYTE PTR [ebx+0x1e]
  41d02b:	sbb    al,BYTE PTR [edx+edi*1]
  41d02e:	pop    esi
  41d02f:	mov    eax,ds:0x803e4ede
  41d034:	sub    al,0x3c
  41d036:	in     al,dx
  41d037:	xchg   ebp,eax
  41d038:	int3   
  41d039:	popf   
  41d03a:	jbe    0x41cff9
  41d03c:	daa    
  41d03d:	mov    al,0xc2
  41d03f:	out    0x0,eax
  41d041:	retf   
  41d042:	pop    ecx
  41d043:	fcomp  DWORD PTR [ebp-0x67]
  41d046:	push   cs
  41d047:	add    al,0x21
  41d049:	mov    al,ds:0xbabdbf33
  41d04e:	fcmovb st,st(5)
  41d050:	pop    edi
  41d051:	lods   al,BYTE PTR ds:[esi]
  41d052:	mov    ds,esi
  41d054:	mov    ah,0xde
  41d056:	pop    edx
  41d057:	or     eax,0xaa38da24
  41d05c:	sbb    eax,0xaa88f82d
  41d061:	or     al,0x6b
  41d063:	repnz test eax,0xa695dfec
  41d069:	sub    eax,DWORD PTR [ecx-0xe]
  41d06c:	in     al,0x6
  41d06e:	out    dx,al
  41d06f:	ins    DWORD PTR es:[edi],dx
  41d070:	cmp    al,0xc9
  41d072:	dec    esp
  41d073:	test   BYTE PTR [esi],0xc8
  41d076:	mov    eax,0xa79906c4
  41d07b:	addr16 push ds
  41d07d:	push   0xffffffa2
  41d07f:	xor    DWORD PTR fs:[bx+di-0x12],ebx
  41d084:	adc    bh,BYTE PTR [edi]
  41d086:	test   eax,0x2026ae03
  41d08b:	push   ebx
  41d08c:	popa   
  41d08d:	data16 mov dh,0x28
  41d090:	push   eax
  41d091:	xor    BYTE PTR [esi+eax*1-0x3de5bab7],0x0
  41d099:	push   ebp
  41d09a:	sub    eax,0x74ae7255
  41d09f:	daa    
  41d0a0:	test   eax,0x6dffe2ee
  41d0a5:	jl     0x41d0ec
  41d0a7:	in     al,0xb7
  41d0a9:	and    edx,DWORD PTR [esi-0x61]
  41d0ac:	sbb    DWORD PTR [ebp+0x691c7c3b],0xffffff95
  41d0b3:	add    eax,DWORD PTR [ebp-0x3fdd8fe7]
  41d0b9:	test   al,0x2c
  41d0bb:	call   0x252e:0xffb58323
  41d0c2:	popa   
  41d0c3:	cmp    BYTE PTR [edi+eax*1],al
  41d0c6:	cmp    eax,0xee4fafa
  41d0cb:	xlat   BYTE PTR es:[ebx]
  41d0cd:	push   esi
  41d0ce:	xchg   ecx,eax
  41d0cf:	push   ecx
  41d0d0:	fcmovne st,st(5)
  41d0d2:	ss mov edi,0xf698bc97
  41d0d8:	loop   0x41d14d
  41d0da:	xor    BYTE PTR [eax-0x5e64aaa9],cl
  41d0e0:	imul   BYTE PTR [ecx-0x369f2a3d]
  41d0e6:	cmp    BYTE PTR [esi-0x25],0xed
  41d0ea:	or     ch,bl
  41d0ec:	aaa    
  41d0ed:	(bad)  
  41d0ee:	jg     0x41d16d
  41d0f0:	aam    0x6
  41d0f2:	add    al,ch
  41d0f4:	push   esi
  41d0f5:	jae    0x41d092
  41d0f7:	loopne 0x41d07f
  41d0f9:	lahf   
  41d0fa:	push   esi
  41d0fb:	std    
  41d0fc:	and    edx,ecx
  41d0fe:	imul   eax,DWORD PTR [ecx-0x7ed97b51],0xffffff8b
  41d105:	xchg   DWORD PTR [edi-0x30],ebx
  41d108:	rcr    DWORD PTR [ecx+0x1680ef1b],cl
  41d10e:	repz mov ch,0x67
  41d111:	push   es
  41d112:	cli    
  41d113:	dec    edi
  41d114:	and    esi,DWORD PTR [eax]
  41d116:	mov    edi,0x86ddfcdf
  41d11b:	pop    eax
  41d11c:	inc    esp
  41d11d:	sub    al,0x56
  41d11f:	adc    BYTE PTR [ebp*1+0x4d831510],cl
  41d126:	and    eax,0xf30359e9
  41d12b:	ret    
  41d12c:	mov    ds:0x37f568c2,al
  41d131:	adc    cl,BYTE PTR [edi]
  41d133:	inc    edi
  41d134:	mov    WORD PTR [edx+ecx*1+0x57add09c],?
  41d13b:	outs   dx,DWORD PTR ds:[esi]
  41d13c:	mov    DWORD PTR [esi-0x33],eax
  41d13f:	mov    eax,DWORD PTR ds:0xbe9660e5
  41d145:	cmp    ch,bl
  41d147:	pop    edx
  41d148:	sub    dl,BYTE PTR [edx]
  41d14a:	jb     0x41d1b7
  41d14c:	ficom  WORD PTR [edi-0x11]
  41d14f:	mov    gs,WORD PTR fs:[esi-0xa]
  41d153:	sub    al,0x3e
  41d155:	xchg   esi,eax
  41d156:	popa   
  41d157:	out    0xed,eax
  41d159:	cmp    ah,BYTE PTR [esi-0x3a]
  41d15c:	inc    edx
  41d15d:	ss jbe 0x41d0fe
  41d160:	or     al,0x73
  41d162:	js     0x41d116
  41d164:	mov    ebp,0x1e2a4cf2
  41d169:	push   0x44
  41d16b:	mov    bh,0x62
  41d16d:	dec    edi
  41d16e:	push   ecx
  41d16f:	stos   DWORD PTR es:[edi],eax
  41d170:	cmp    BYTE PTR [ebp-0x19],cl
  41d173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d174:	xchg   ecx,eax
  41d175:	iret   
  41d176:	and    DWORD PTR ds:0x9d3a7ea8,eax
  41d17c:	inc    edi
  41d17d:	adc    ebx,0xfffffff2
  41d180:	jle    0x41d140
  41d182:	(bad)  
  41d183:	icebp  
  41d184:	enter  0x8e9,0xc9
  41d188:	retf   0x51a0
  41d18b:	popf   
  41d18c:	arpl   dx,cx
  41d18e:	mul    bl
  41d190:	push   esp
  41d191:	inc    esp
  41d192:	mov    ebp,0xba8d90d
  41d197:	adc    dl,BYTE PTR [ebx+0x2f]
  41d19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d19b:	icebp  
  41d19c:	jmp    0x41d123
  41d19e:	xchg   edx,eax
  41d19f:	gs add eax,0xf56e48ca
  41d1a5:	mov    cl,dh
  41d1a7:	push   0x5d00220e
  41d1ac:	inc    esi
  41d1ad:	adc    eax,0x7ce1f1ff
  41d1b2:	inc    esp
  41d1b3:	ret    0xb909
  41d1b6:	inc    esp
  41d1b7:	cs jmp 0x332feba
  41d1bd:	jne    0x41d1d4
  41d1bf:	or     esi,DWORD PTR [eax-0x3bbc1950]
  41d1c5:	xchg   ebp,eax
  41d1c6:	sub    DWORD PTR [ebp+0x7c5d7fb4],ecx
  41d1cc:	sar    BYTE PTR [esp+esi*8+0x2027fa9],0xda
  41d1d4:	sub    bl,cl
  41d1d6:	dec    esi
  41d1d7:	jg     0x41d221
  41d1d9:	stos   BYTE PTR es:[edi],al
  41d1da:	sub    eax,0xaf6c0b04
  41d1df:	sbb    ch,BYTE PTR [esi]
  41d1e1:	xchg   ecx,eax
  41d1e2:	loop   0x41d1f7
  41d1e4:	stos   BYTE PTR es:[edi],al
  41d1e5:	arpl   WORD PTR [ebx+0x25],bp
  41d1e8:	mov    al,ds:0x296a381b
  41d1ed:	clc    
  41d1ee:	ret    0x4c9e
  41d1f1:	mov    ah,0x11
  41d1f3:	lea    edx,[esi+eiz*4]
  41d1f6:	xor    BYTE PTR [edi+0x35],cl
  41d1f9:	adc    BYTE PTR [esp+esi*8],ch
  41d1fc:	sbb    ah,ah
  41d1fe:	mov    esp,0x3b4969ac
  41d203:	test   BYTE PTR [eax-0x338f778e],bh
  41d209:	inc    ecx
  41d20a:	ds push esp
  41d20c:	repnz ins DWORD PTR es:[edi],dx
  41d20e:	daa    
  41d20f:	fnstenvw [ebx+0x74ad9086]
  41d216:	cmp    eax,0xf92ab0bb
  41d21b:	jo     0x41d20d
  41d21d:	stc    
  41d21e:	and    al,0xfb
  41d220:	mov    eax,ds:0x2f115c9f
  41d225:	jno    0x41d1af
  41d227:	loopne 0x41d1fd
  41d229:	ret    0x5304
  41d22c:	stc    
  41d22d:	adc    DWORD PTR [edx-0x2b2fa06c],ebp
  41d233:	xchg   ebx,eax
  41d234:	pop    ss
  41d235:	pop    edx
  41d236:	mov    bl,0xe1
  41d238:	cli    
  41d239:	pop    ss
  41d23a:	sub    DWORD PTR [esi],edi
  41d23c:	gs mov esp,0x664faa8f
  41d242:	pop    ecx
  41d243:	mov    bl,0x51
  41d245:	daa    
  41d246:	sbb    al,0xfb
  41d248:	pop    edx
  41d249:	sub    edx,eax
  41d24b:	mov    eax,ds:0xb6676a5a
  41d250:	push   edi
  41d251:	int3   
  41d252:	xchg   ecx,eax
  41d253:	ror    DWORD PTR [ebp+0x3a],1
  41d256:	jbe    0x41d2c4
  41d258:	test   DWORD PTR [edx-0x46],ecx
  41d25b:	mov    al,ds:0x8560cce4
  41d260:	call   0x37ee6d94
  41d265:	inc    esi
  41d266:	lods   eax,DWORD PTR ds:[esi]
  41d267:	bound  edi,QWORD PTR [ebx+0xe]
  41d26a:	scas   al,BYTE PTR es:[edi]
  41d26b:	mov    dl,0xda
  41d26d:	xor    DWORD PTR [ebx-0x7a],ebp
  41d270:	pop    es
  41d271:	retf   0x14cf
  41d274:	pop    ebp
  41d275:	or     DWORD PTR [ebp-0x4e],esp
  41d278:	xchg   ebx,eax
  41d279:	loopne 0x41d261
  41d27b:	test   al,0x3e
  41d27d:	inc    eax
  41d27e:	das    
  41d27f:	outs   dx,DWORD PTR ds:[esi]
  41d280:	pop    es
  41d281:	jno    0x41d25e
  41d283:	addr16 cld 
  41d285:	mov    ebx,0xda67a74c
  41d28a:	mov    al,ds:0xb158cdc5
  41d28f:	mov    bl,0x60
  41d291:	(bad)  
  41d292:	pop    eax
  41d293:	pop    edi
  41d294:	stos   BYTE PTR es:[edi],al
  41d295:	inc    eax
  41d296:	sub    BYTE PTR [ebp+0x717cc0e7],bl
  41d29c:	lds    ecx,FWORD PTR [ecx+0x61]
  41d29f:	dec    eax
  41d2a0:	popf   
  41d2a1:	push   0xd3554f35
  41d2a6:	out    0xfc,eax
  41d2a8:	mov    al,0x61
  41d2aa:	pop    ss
  41d2ab:	sub    BYTE PTR [edi],dh
  41d2ad:	(bad)  
  41d2ae:	(bad)  
  41d2af:	mov    edx,0xdc1f4bf2
  41d2b4:	push   0x7244d2ad
  41d2b9:	xchg   ebp,eax
  41d2ba:	sub    esp,esp
  41d2bc:	mov    eax,0x422db20c
  41d2c1:	scas   al,BYTE PTR es:[edi]
  41d2c2:	xchg   edx,eax
  41d2c3:	jne    0x41d2e0
  41d2c5:	add    bh,bl
  41d2c7:	jmp    0x683e5234
  41d2cc:	xor    eax,0x7196c8ed
  41d2d1:	in     al,0xf3
  41d2d3:	xor    eax,0x14cac1cf
  41d2d8:	adc    eax,0xef334fff
  41d2dd:	leave  
  41d2de:	xchg   edx,eax
  41d2df:	arpl   WORD PTR ds:[esi-0x3b],cx
  41d2e3:	mov    esi,0x8d9f506a
  41d2e8:	and    DWORD PTR [esi+0x79],ebp
  41d2eb:	call   0xf0c8:0xcdfdb79
  41d2f2:	fadd   st,st(5)
  41d2f4:	sbb    ebx,esp
  41d2f6:	xlat   BYTE PTR ds:[ebx]
  41d2f7:	scas   eax,DWORD PTR es:[edi]
  41d2f8:	mov    esi,DWORD PTR [eax+0x24f9bf5]
  41d2fe:	(bad)  
  41d2ff:	stos   DWORD PTR es:[edi],eax
  41d300:	inc    esi
  41d301:	xor    al,0xc4
  41d303:	mov    al,0x66
  41d305:	out    0xab,al
  41d307:	and    al,0x13
  41d309:	mov    eax,ds:0x81e60ca0
  41d30e:	xor    al,0xc2
  41d310:	inc    ebp
  41d311:	in     al,0x3f
  41d313:	aaa    
  41d314:	jecxz  0x41d303
  41d316:	mov    ah,0x9
  41d318:	ds cmc 
  41d31a:	or     al,0x19
  41d31c:	shl    DWORD PTR [ebp+edi*8+0x28],cl
  41d320:	in     al,dx
  41d321:	ja     0x41d337
  41d323:	dec    eax
  41d324:	mov    edx,ebp
  41d326:	int    0x34
  41d328:	into   
  41d329:	push   0x9db651ef
  41d32e:	adc    BYTE PTR [bx+di-0x5a],ch
  41d332:	sub    BYTE PTR [ebx-0x48387280],0xed
  41d339:	or     esi,esi
  41d33b:	inc    esp
  41d33c:	fild   WORD PTR [esp+eiz*8-0x79fcc10f]
  41d343:	push   edx
  41d344:	push   0xffffffc0
  41d346:	mov    ah,BYTE PTR [ebp+0x45]
  41d349:	pop    es
  41d34a:	jge    0x41d367
  41d34c:	sub    cl,BYTE PTR [eax-0x7c]
  41d34f:	and    ch,BYTE PTR [edi]
  41d351:	std    
  41d352:	call   0x6c7eda5d
  41d357:	sub    ebx,DWORD PTR [esi]
  41d359:	and    ah,BYTE PTR [ebp-0x5b5508c]
  41d35f:	push   0x20
  41d361:	je     0x41d3cd
  41d363:	sub    cl,dh
  41d365:	push   cs
  41d366:	dec    edi
  41d367:	(bad)  
  41d368:	push   ebx
  41d369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d36a:	cld    
  41d36b:	bound  edx,QWORD PTR [ecx]
  41d36d:	mov    ds:0x257e9d0e,eax
  41d372:	ret    
  41d373:	mov    dh,0x94
  41d375:	inc    ebx
  41d376:	inc    ecx
  41d377:	(bad)  
  41d378:	mov    dl,BYTE PTR [eax]
  41d37a:	fcmovnu st,st(2)
  41d37c:	push   edi
  41d37d:	lods   al,BYTE PTR ds:[esi]
  41d37e:	xchg   ecx,eax
  41d37f:	clc    
  41d380:	repnz mov ah,0xab
  41d383:	and    bh,BYTE PTR [eax+0x2c]
  41d386:	shl    DWORD PTR [ecx+0x3a42bbc3],0x8f
  41d38d:	inc    esp
  41d38e:	test   DWORD PTR [esi],ebp
  41d390:	test   eax,0xf9807a63
  41d395:	sub    eax,0x4d18b0be
  41d39a:	and    bh,BYTE PTR [edx+0x7114c609]
  41d3a0:	dec    ebp
  41d3a1:	popa   
  41d3a2:	pop    esi
  41d3a3:	div    DWORD PTR [eax]
  41d3a5:	in     al,dx
  41d3a6:	sbb    edx,DWORD PTR [ecx]
  41d3a8:	in     al,dx
  41d3a9:	mov    bl,0x5
  41d3ab:	dec    eax
  41d3ac:	adc    DWORD PTR ds:0x4fd70820,ecx
  41d3b2:	mov    esi,0x10895652
  41d3b7:	push   edx
  41d3b8:	jbe    0x41d369
  41d3ba:	sub    cl,BYTE PTR [ecx-0x33d73cf5]
  41d3c0:	pusha  
  41d3c1:	push   es
  41d3c2:	pop    edx
  41d3c3:	out    0xa2,eax
  41d3c5:	fstp   TBYTE PTR [ebx+0x4066af0d]
  41d3cb:	retf   
  41d3cc:	xchg   esp,eax
  41d3cd:	adc    esi,DWORD PTR [ebp-0x7e]
  41d3d0:	fdiv   DWORD PTR [esi+0x37ae4723]
  41d3d6:	int    0x4b
  41d3d8:	pop    ss
  41d3d9:	cmp    esp,ebp
  41d3db:	xchg   ecx,eax
  41d3dc:	and    DWORD PTR [ebp+edi*8+0x2c3c41e7],ebx
  41d3e3:	popf   
  41d3e4:	mov    edi,0x5ce86321
  41d3e9:	fnstcw WORD PTR [esi-0x17f762c3]
  41d3ef:	int    0xf0
  41d3f1:	cdq    
  41d3f2:	es add eax,0xed77ebff
  41d3f8:	mov    eax,0xb258e7af
  41d3fd:	mul    DWORD PTR [eax+0x71]
  41d400:	inc    edx
  41d401:	or     DWORD PTR [eax-0x3147d627],esi
  41d407:	mov    eax,ds:0x2e308ef5
  41d40c:	jnp    0x41d3de
  41d40e:	dec    edi
  41d40f:	(bad)  
  41d410:	jmp    0x90648136
  41d415:	or     dl,BYTE PTR [ebp-0x741e7211]
  41d41b:	daa    
  41d41c:	loop   0x41d444
  41d41e:	es push 0x58f5338
  41d424:	xchg   ebp,eax
  41d425:	inc    DWORD PTR [ecx+ebp*4+0x39]
  41d429:	mov    eax,0xce39d495
  41d42e:	into   
  41d42f:	sbb    ebx,edi
  41d431:	pop    ds
  41d432:	outs   dx,DWORD PTR ds:[esi]
  41d433:	cmp    DWORD PTR [ebx-0x6b269d0b],edx
  41d439:	lods   eax,DWORD PTR ds:[esi]
  41d43a:	fwait
  41d43b:	push   ecx
  41d43c:	xchg   ebx,eax
  41d43d:	in     al,dx
  41d43e:	inc    ebp
  41d43f:	mov    dl,0x5a
  41d441:	xchg   ecx,eax
  41d442:	fyl2xp1 
  41d444:	mov    ds:0x1ac631d0,eax
  41d449:	outs   dx,BYTE PTR ds:[esi]
  41d44a:	pop    esi
  41d44b:	xchg   ecx,eax
  41d44c:	ins    BYTE PTR es:[edi],dx
  41d44d:	es mov ebx,0x9b2d8136
  41d453:	pop    ebx
  41d454:	dec    ecx
  41d456:	jne    0x41d468
  41d458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d459:	cmp    cl,BYTE PTR [esi-0x5e]
  41d45c:	enter  0x5c37,0xb4
  41d460:	sbb    esp,DWORD PTR [edx+ecx*2+0x73]
  41d464:	sub    al,0x1b
  41d466:	xchg   ebp,eax
  41d467:	icebp  
  41d468:	xchg   edi,eax
  41d469:	sbb    DWORD PTR ds:0x8e25d484,esi
  41d46f:	idiv   BYTE PTR [eax]
  41d471:	adc    al,0xde
  41d473:	cmp    DWORD PTR [ebp-0x729282e3],0xffffff8a
  41d47a:	call   DWORD PTR [esi]
  41d47c:	inc    eax
  41d47d:	sub    al,0xc
  41d47f:	dec    eax
  41d480:	or     eax,DWORD PTR [si+0x2335]
  41d485:	xchg   ecx,eax
  41d486:	pop    edx
  41d487:	cmp    BYTE PTR [eax-0x1f],cl
  41d48a:	mov    ebp,0xe93e3eff
  41d48f:	pop    edx
  41d490:	sub    eax,0xaeecca5c
  41d495:	mov    dh,0xf7
  41d497:	les    ebx,FWORD PTR [edx]
  41d499:	dec    ecx
  41d49a:	int3   
  41d49b:	push   ebp
  41d49c:	aad    0xdd
  41d49e:	mov    al,0x6f
  41d4a0:	jae    0x41d44f
  41d4a2:	add    ch,dl
  41d4a4:	inc    ebx
  41d4a5:	mov    al,0x89
  41d4a7:	xor    DWORD PTR [ecx-0x2d],eax
  41d4aa:	adc    BYTE PTR [ebx+0x22],ch
  41d4ad:	pop    ebp
  41d4ae:	cmp    eax,0x6cfdeca7
  41d4b3:	int    0x8d
  41d4b5:	jo     0x41d474
  41d4b7:	fild   DWORD PTR [ebp+0x4976d7e2]
  41d4bd:	mov    bl,0x7d
  41d4bf:	fs mov esi,0x773931be
  41d4c5:	pop    esp
  41d4c6:	sbb    DWORD PTR [ebx+0x21],esp
  41d4c9:	sbb    eax,0xb2502c14
  41d4ce:	jno    0x41d457
  41d4d0:	xor    eax,eax
  41d4d2:	loope  0x41d51d
  41d4d4:	mov    esp,0x11f0f5b2
  41d4d9:	in     al,dx
  41d4da:	mov    eax,0xb8e912b3
  41d4df:	or     eax,0x42cbf21e
  41d4e4:	not    ecx
  41d4e6:	fbld   TBYTE PTR [esi]
  41d4e8:	fs mov edi,cs
  41d4eb:	jge    0x41d48a
  41d4ed:	xchg   ebp,eax
  41d4ee:	popf   
  41d4ef:	test   eax,0x412a4b72
  41d4f4:	xlat   BYTE PTR ds:[ebx]
  41d4f5:	fst    QWORD PTR [edi-0x755e5e37]
  41d4fb:	dec    edx
  41d4fc:	rol    DWORD PTR [eax+0x75],1
  41d4ff:	test   bl,bh
  41d501:	sti    
  41d502:	scas   al,BYTE PTR es:[edi]
  41d503:	cwde   
  41d504:	push   ebx
  41d505:	pop    es
  41d506:	jge    0x41d51b
  41d508:	or     eax,0x4028ed20
  41d50d:	add    edx,DWORD PTR [edi+0x73d6a08c]
  41d513:	xchg   BYTE PTR [ebx],bl
  41d515:	dec    ebp
  41d516:	jb     0x41d4cf
  41d518:	mov    bh,0xdf
  41d51a:	(bad)  
  41d51b:	cwde   
  41d51c:	sub    DWORD PTR [eax+0x10],ebx
  41d51f:	popf   
  41d520:	xlat   BYTE PTR ds:[ebx]
  41d521:	or     ecx,0xffffffee
  41d524:	mov    edi,DWORD PTR [edx-0x2b]
  41d527:	test   ebp,0x7ce0875e
  41d52d:	(bad)  
  41d52e:	jp     0x41d4e3
  41d530:	std    
  41d531:	pop    ebp
  41d532:	rcl    DWORD PTR [edx-0x3467cc71],0x3b
  41d539:	arpl   si,di
  41d53b:	mov    eax,0x402047ba
  41d540:	add    ebp,DWORD PTR [edx+edx*4-0x6debf60]
  41d547:	inc    ecx
  41d548:	les    ebp,FWORD PTR [edx]
  41d54a:	loop   0x41d4d9
  41d54c:	add    al,0x86
  41d54e:	or     bh,BYTE PTR [edx]
  41d550:	ds aaa 
  41d552:	add    BYTE PTR [eax+0x242cf952],0xe9
  41d559:	or     eax,0xb021e766
  41d55e:	repz and BYTE PTR [ecx+0x75],dl
  41d562:	sti    
  41d563:	(bad)  
  41d564:	cmp    eax,DWORD PTR [ebp-0x3a78c096]
  41d56a:	out    0x9a,al
  41d56c:	fcmovbe st,st(7)
  41d56e:	jns    0x41d555
  41d570:	pop    ebx
  41d571:	mov    cl,0x9e
  41d573:	jmp    0x41d5d5
  41d575:	cli    
  41d576:	popf   
  41d577:	das    
  41d578:	bound  esi,QWORD PTR [ecx-0x19927c47]
  41d57e:	push   es
  41d57f:	jns    0x41d56f
  41d581:	retf   
  41d582:	jb     0x41d5e1
  41d584:	bound  edi,QWORD PTR [edx]
  41d586:	xchg   edx,eax
  41d587:	or     eax,0x7299d857
  41d58c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41d58e:	adc    eax,0x94a7bdbf
  41d593:	sub    eax,DWORD PTR [ecx]
  41d595:	cld    
  41d596:	cmp    eax,0xb643dc76
  41d59b:	mov    al,0xc2
  41d59d:	mov    edi,0x373012dc
  41d5a2:	xor    al,0x33
  41d5a4:	fistp  QWORD PTR [edi-0x6b]
  41d5a7:	and    eax,0x3cb6f02a
  41d5ac:	scas   eax,DWORD PTR es:[edi]
  41d5ad:	pop    esp
  41d5ae:	or     al,BYTE PTR [edi]
  41d5b0:	je     0x41d56f
  41d5b2:	lock pop ecx
  41d5b4:	push   ebp
  41d5b5:	mov    bh,0xed
  41d5b7:	inc    edi
  41d5b8:	jbe    0x41d5dd
  41d5ba:	push   esp
  41d5bb:	in     al,dx
  41d5bc:	imul   esi,DWORD PTR [edx],0xffffff82
  41d5bf:	push   eax
  41d5c0:	imul   ecx,DWORD PTR [edx-0x6e],0xf37d16f2
  41d5c7:	and    edx,DWORD PTR [esi+0x27]
  41d5ca:	lods   al,BYTE PTR ds:[esi]
  41d5cb:	push   edx
  41d5cc:	adc    cl,BYTE PTR [esi-0x13]
  41d5cf:	pushf  
  41d5d0:	sub    eax,0xbb7034df
  41d5d5:	inc    edx
  41d5d6:	mov    esi,0x22ec0e7f
  41d5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5dc:	or     eax,0x8007ff56
  41d5e1:	push   esi
  41d5e2:	int    0x63
  41d5e4:	jno    0x41d645
  41d5e6:	push   eax
  41d5e7:	leave  
  41d5e8:	retf   
  41d5e9:	push   ss
  41d5ea:	push   eax
  41d5eb:	fdivr  QWORD PTR [edi-0x40a60a1]
  41d5f1:	xor    ecx,ebx
  41d5f3:	or     DWORD PTR [ebp-0x58],esp
  41d5f6:	jg     0x41d64b
  41d5f8:	cwde   
  41d5f9:	and    BYTE PTR [esi],bh
  41d5fb:	scas   al,BYTE PTR es:[edi]
  41d5fc:	cmp    BYTE PTR [edi],dl
  41d5fe:	mov    WORD PTR [esi-0x3b],es
  41d601:	loope  0x41d5ae
  41d603:	sub    eax,0x27f11969
  41d608:	mov    dl,0x62
  41d60a:	xor    esi,DWORD PTR [edx+edi*1+0x75]
  41d60e:	xchg   DWORD PTR [esi-0x11],eax
  41d611:	xchg   esi,eax
  41d612:	mov    ebx,0xd260712b
  41d617:	mov    ebp,0x3285697e
  41d61c:	cmp    edi,0x8b11bc76
  41d622:	inc    edi
  41d623:	xchg   ecx,eax
  41d624:	push   es
  41d625:	or     al,0x8b
  41d627:	nop
  41d628:	fnsave ds:0x737d8ce8
  41d62e:	xchg   BYTE PTR [edx+0x6a5ad9c],al
  41d634:	mov    edx,0x4b001e27
  41d639:	add    esp,esp
  41d63b:	dec    eax
  41d63c:	inc    ebp
  41d63d:	(bad)  
  41d63e:	lods   eax,DWORD PTR ds:[esi]
  41d63f:	stc    
  41d640:	iret   
  41d641:	add    ah,cl
  41d643:	jp     0x41d633
  41d645:	inc    ebp
  41d646:	in     eax,0x19
  41d648:	sbb    dh,BYTE PTR [ebx-0x39]
  41d64b:	jmp    0xdbc0:0x3bd297c5
  41d652:	stos   BYTE PTR es:[edi],al
  41d653:	pop    esi
  41d654:	aas    
  41d655:	mov    cl,0xb2
  41d657:	push   esp
  41d658:	cmp    DWORD PTR [eax-0x61],eax
  41d65b:	cmp    BYTE PTR [esi+0x108d2b2b],dh
  41d661:	cmp    ch,dh
  41d663:	dec    edi
  41d664:	aaa    
  41d665:	push   0xfef30751
  41d66a:	cmp    DWORD PTR [ecx+ebp*8-0x6b],edi
  41d66e:	pushf  
  41d66f:	push   es
  41d670:	mov    edi,0x3b53c638
  41d675:	push   ebp
  41d676:	sub    eax,0x1e49e3b2
  41d67b:	push   eax
  41d67c:	ror    BYTE PTR [ecx+0x7],1
  41d67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d680:	call   0x9770:0xfe5eb641
  41d687:	or     DWORD PTR [esi-0x59],ecx
  41d68a:	test   al,0x13
  41d68c:	xor    DWORD PTR [edx-0x5b],0x806b798a
  41d693:	add    BYTE PTR [edx+0x210bc16],dh
  41d699:	mov    ecx,0x2620c09d
  41d69e:	pushf  
  41d69f:	clc    
  41d6a0:	fbstp  TBYTE PTR [esi]
  41d6a2:	sete   BYTE PTR [ecx+0x22f790a9]
  41d6a9:	or     eax,DWORD PTR [edx]
  41d6ab:	inc    edx
  41d6ac:	mov    ds:0x5300464,al
  41d6b1:	sar    DWORD PTR [eax-0x34],1
  41d6b4:	adc    dh,BYTE PTR [edi-0x23af7d0c]
  41d6ba:	fld    TBYTE PTR [eax+0x8]
  41d6bd:	(bad)  
  41d6be:	mov    esi,0x4a0164bf
  41d6c3:	sub    eax,0x64703a21
  41d6c8:	mov    eax,ds:0xda042b04
  41d6cd:	pop    ebx
  41d6ce:	sbb    DWORD PTR [edx-0x57],ecx
  41d6d1:	aad    0xa7
  41d6d3:	popf   
  41d6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d5:	jg     0x41d677
  41d6d7:	imul   edi,DWORD PTR [ecx+0x2ce8a971],0x60
  41d6de:	dec    edx
  41d6df:	or     ecx,DWORD PTR [ebx+eax*8-0x65]
  41d6e3:	in     al,dx
  41d6e4:	out    0xa0,eax
  41d6e6:	popa   
  41d6e7:	not    DWORD PTR [ebp+0x6a]
  41d6ea:	das    
  41d6eb:	pop    esi
  41d6ec:	or     bh,al
  41d6ee:	call   0x3ed6097e
  41d6f3:	xor    BYTE PTR [ebx],cl
  41d6f5:	jmp    0xb3569b3c
  41d6fa:	jne    0x41d711
  41d6fc:	fild   DWORD PTR [eax]
  41d6fe:	xor    DWORD PTR [edx],ebp
  41d700:	mov    ebp,0xcc187a6c
  41d705:	bound  eax,QWORD PTR [ebx-0x33399d7f]
  41d70b:	inc    edi
  41d70c:	out    dx,eax
  41d70d:	fisttp DWORD PTR [ebx+0x7b]
  41d710:	gs dec ecx
  41d712:	cld    
  41d713:	xchg   esi,eax
  41d714:	shr    BYTE PTR [esi-0x33],1
  41d717:	scas   al,BYTE PTR es:[edi]
  41d718:	dec    ebx
  41d719:	pop    esi
  41d71a:	lock and al,0xd4
  41d71d:	(bad)  
  41d71e:	cmc    
  41d71f:	pushf  
  41d720:	gs sahf 
  41d722:	xchg   ecx,eax
  41d723:	ret    0x37fa
  41d726:	fcomp  DWORD PTR [esp+ecx*2-0x7dba481e]
  41d72d:	loop   0x41d6cd
  41d72f:	icebp  
  41d730:	push   edx
  41d731:	popf   
  41d732:	xor    eax,ecx
  41d734:	xchg   esi,eax
  41d735:	hlt    
  41d736:	or     edx,ebp
  41d738:	sub    esp,DWORD PTR [esi]
  41d73a:	daa    
  41d73b:	mov    eax,0xdd9f114a
  41d740:	dec    ecx
  41d741:	out    dx,eax
  41d742:	adc    al,0x18
  41d744:	cmp    BYTE PTR [ebx],al
  41d746:	add    ah,BYTE PTR [ebp+0x45]
  41d749:	adc    DWORD PTR ds:0x4bf7261a,esi
  41d74f:	into   
  41d750:	pop    edx
  41d751:	mov    WORD PTR [edx+0x66],?
  41d754:	inc    eax
  41d755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d756:	sub    eax,0xbf683dc0
  41d75b:	xchg   esp,eax
  41d75c:	aas    
  41d75d:	mov    fs,edx
  41d75f:	lea    esi,[edi]
  41d761:	sub    DWORD PTR [ebx],0xcddef960
  41d767:	inc    ebp
  41d768:	aas    
  41d769:	les    edi,FWORD PTR [eax+0x656f215c]
  41d76f:	and    ch,BYTE PTR [edx-0x13]
  41d772:	cmp    DWORD PTR [ebx-0x4e],edx
  41d775:	fdivr  st,st(2)
  41d777:	xor    cl,BYTE PTR [eax]
  41d779:	adc    al,0x40
  41d77b:	iret   
  41d77c:	rcr    BYTE PTR [eax+edx*8],1
  41d77f:	dec    eax
  41d780:	inc    edi
  41d781:	outs   dx,DWORD PTR ds:[esi]
  41d782:	or     al,0x94
  41d784:	mov    eax,ebp
  41d786:	jmp    0xfaa54ded
  41d78b:	adc    edi,DWORD PTR [ebp-0x212b0b11]
  41d791:	cmc    
  41d792:	and    BYTE PTR [edx-0x72537293],dh
  41d798:	outs   dx,DWORD PTR ds:[esi]
  41d799:	popa   
  41d79a:	je     0x41d71f
  41d79c:	xor    al,0x54
  41d79e:	pop    ebp
  41d79f:	(bad)  
  41d7a0:	xor    ah,bh
  41d7a2:	(bad)  
  41d7a3:	cld    
  41d7a4:	jne    0x41d765
  41d7a6:	shr    BYTE PTR [eax+ebp*1-0x69],cl
  41d7aa:	hlt    
  41d7ab:	out    0x96,al
  41d7ad:	enter  0x5262,0x43
  41d7b1:	inc    eax
  41d7b2:	mov    al,ds:0x1dc61b7a
  41d7b7:	inc    eax
  41d7b8:	or     eax,eax
  41d7ba:	addr16 pusha 
  41d7bc:	jmp    0xee2a4877
  41d7c1:	xor    ecx,DWORD PTR [edi]
  41d7c3:	sbb    ecx,DWORD PTR [edi-0x5e4ee395]
  41d7c9:	cmc    
  41d7ca:	loopne 0x41d7d6
  41d7cc:	sar    BYTE PTR es:[ecx],1
  41d7cf:	xchg   edx,eax
  41d7d0:	pushf  
  41d7d1:	sub    al,0x5b
  41d7d3:	cdq    
  41d7d4:	cmp    al,0xe3
  41d7d6:	mov    ds:0xefc08a96,eax
  41d7db:	int    0xe
  41d7dd:	inc    ebx
  41d7de:	pop    ebp
  41d7df:	inc    ebx
  41d7e0:	dec    esi
  41d7e1:	cmp    al,BYTE PTR [eax+0x48b2a572]
  41d7e7:	in     al,dx
  41d7e8:	out    dx,eax
  41d7e9:	out    dx,eax
  41d7ea:	out    0x4c,eax
  41d7ec:	push   0x73
  41d7ee:	mov    al,ds:0xffda5804
  41d7f3:	or     ah,BYTE PTR [edx+edx*2-0x26bd57d]
  41d7fa:	dec    ebx
  41d7fb:	xchg   ecx,eax
  41d7fc:	mov    es,WORD PTR [eax+0x425161ad]
  41d802:	stos   BYTE PTR es:[edi],al
  41d803:	je     0x41d884
  41d805:	icebp  
  41d806:	push   0x3b
  41d808:	aaa    
  41d809:	js     0x41d78e
  41d80b:	out    dx,al
  41d80c:	push   edx
  41d80d:	push   cs
  41d80e:	xchg   DWORD PTR [eax],edx
  41d810:	push   cs
  41d811:	mov    ds:0x78b53ecb,eax
  41d816:	dec    esi
  41d817:	fild   QWORD PTR [eax]
  41d819:	lods   eax,DWORD PTR ds:[esi]
  41d81a:	adc    bl,BYTE PTR [ebx+0x0]
  41d81d:	pop    esi
  41d81e:	test   eax,0xaf9a2f44
  41d823:	cmp    eax,DWORD PTR [esi-0x1b]
  41d826:	or     ch,ah
  41d828:	shr    DWORD PTR [edi-0x76],cl
  41d82b:	fs ins DWORD PTR es:[edi],dx
  41d82d:	add    DWORD PTR [edi+edx*2+0x1dd5bf36],ebx
  41d834:	rcr    BYTE PTR ds:0x2d9398d9,1
  41d83a:	clc    
  41d83b:	push   eax
  41d83c:	pop    edi
  41d83d:	inc    ecx
  41d83e:	adc    bl,ah
  41d840:	ret    
  41d841:	daa    
  41d842:	scas   eax,DWORD PTR es:[edi]
  41d843:	jmp    ebx
  41d845:	test   DWORD PTR ds:0xdf093630,edx
  41d84b:	xor    al,0x8a
  41d84d:	repz fadd QWORD PTR [ebp+0x7d]
  41d851:	popa   
  41d852:	in     eax,dx
  41d853:	daa    
  41d854:	lods   eax,DWORD PTR ds:[esi]
  41d855:	sbb    eax,0x74c10dbc
  41d85a:	sbb    DWORD PTR [esi+0x1d],0x4d81bc7d
  41d861:	into   
  41d862:	and    BYTE PTR [edx],bh
  41d864:	xchg   ebp,edx
  41d866:	aam    0xd8
  41d868:	mov    BYTE PTR [ebp+0x2d],al
  41d86b:	and    DWORD PTR [edx+eax*8+0x3af5437e],0xffffffda
  41d873:	ror    DWORD PTR [eax-0x2c],cl
  41d876:	icebp  
  41d877:	pop    esi
  41d878:	adc    BYTE PTR [ebp+esi*1+0x62f91830],al
  41d87f:	loope  0x41d854
  41d881:	popf   
  41d882:	enter  0x899a,0x7
  41d886:	lods   eax,DWORD PTR ds:[esi]
  41d887:	mov    al,ds:0x98b5198e
  41d88c:	pop    eax
  41d88d:	pop    ebx
  41d88e:	std    
  41d88f:	stc    
  41d890:	call   0x7ad6:0x8cf02a05
  41d897:	cs pop esi
  41d899:	pop    ebp
  41d89a:	jns    0x41d860
  41d89c:	sub    al,0xfa
  41d89e:	fwait
  41d89f:	add    eax,0xfb9da395
  41d8a4:	fld    DWORD PTR [eax]
  41d8a6:	test   al,0xd6
  41d8a8:	gs std 
  41d8aa:	test   al,0x48
  41d8ac:	call   0x164ef48a
  41d8b1:	or     eax,0x2d1317bf
  41d8b6:	sub    eax,0xc8575cd0
  41d8bb:	mov    esi,0xaccf6b52
  41d8c0:	push   0xffffff9e
  41d8c2:	mov    al,0xdf
  41d8c4:	hlt    
  41d8c5:	adc    cl,bl
  41d8c7:	inc    eax
  41d8c8:	add    dh,BYTE PTR [edi]
  41d8ca:	mov    eax,ds:0xd2e5793c
  41d8cf:	mov    edx,0xb8f7a9c
  41d8d4:	fnsave [esi+0x12d374a5]
  41d8da:	xchg   ecx,eax
  41d8db:	loop   0x41d8eb
  41d8dd:	mov    bl,0x69
  41d8df:	pop    ecx
  41d8e0:	xor    esi,edx
  41d8e2:	xor    dh,al
  41d8e4:	stos   DWORD PTR es:[edi],eax
  41d8e5:	enter  0x87bc,0xcf
  41d8e9:	jmp    0x8be658d
  41d8ee:	iret   
  41d8ef:	xchg   ecx,eax
  41d8f0:	test   al,0xcf
  41d8f2:	dec    esi
  41d8f3:	test   BYTE PTR [ebp+0x2868a004],bl
  41d8f9:	inc    esi
  41d8fa:	out    dx,eax
  41d8fb:	and    cl,BYTE PTR [ebx+esi*8-0x15]
  41d8ff:	or     al,0x35
  41d901:	stos   BYTE PTR es:[edi],al
  41d902:	or     BYTE PTR [edi+0x6e90ceaa],cl
  41d908:	adc    bh,BYTE PTR [eax]
  41d90a:	mov    bh,0x9b
  41d90c:	mov    ds:0xa0bc3308,al
  41d911:	jnp    0x41d8de
  41d913:	cmp    BYTE PTR [ebp+0x7b],cl
  41d916:	in     al,dx
  41d917:	int3   
  41d918:	ja     0x41d96c
  41d91a:	repnz xor al,0x61
  41d91d:	xor    ebx,DWORD PTR [ecx-0xa]
  41d920:	sub    DWORD PTR [edx+0xfa21130],ebp
  41d926:	lds    eax,FWORD PTR [ebx]
  41d928:	cmp    dl,BYTE PTR [ebx]
  41d92a:	cwde   
  41d92b:	push   eax
  41d92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d92d:	ror    BYTE PTR [esi+0x29c086f],cl
  41d933:	je     0x41d8c8
  41d935:	xlat   BYTE PTR ds:[ebx]
  41d936:	mov    edi,0x2988f3d5
  41d93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d93c:	adc    eax,0xde0f6907
  41d941:	pop    ecx
  41d942:	xor    BYTE PTR [edi+0x6f0812ca],0xd1
  41d949:	fcom   DWORD PTR [edi+ebx*1]
  41d94c:	retf   
  41d94d:	retf   
  41d94e:	cmp    BYTE PTR [ebx+0x1bc8fe2],0x1d
  41d955:	fimul  DWORD PTR [edx-0x41]
  41d958:	scas   eax,DWORD PTR es:[edi]
  41d959:	fild   DWORD PTR [esi]
  41d95b:	xchg   esi,eax
  41d95c:	pop    ecx
  41d95d:	test   eax,0xeca1a0bc
  41d962:	xchg   ebp,eax
  41d963:	sahf   
  41d964:	pop    ebx
  41d965:	push   ebx
  41d966:	imul   esi,DWORD PTR [esi+0x3da7627],0x229359ad
  41d970:	pop    esi
  41d971:	push   cs
  41d972:	or     esi,DWORD PTR [esi-0x21]
  41d975:	fld    TBYTE PTR [ecx-0x3888fdcf]
  41d97b:	(bad)  
  41d97c:	xchg   cl,dh
  41d97e:	lock addr16 xor al,0x21
  41d982:	into   
  41d983:	dec    eax
  41d984:	inc    eax
  41d985:	fldcw  WORD PTR [edi]
  41d987:	push   esi
  41d988:	pop    ebx
  41d989:	adc    esi,DWORD PTR [ebx]
  41d98b:	leave  
  41d98c:	imul   BYTE PTR [ecx]
  41d98e:	rcl    DWORD PTR [edi+ecx*8],cl
  41d991:	popf   
  41d992:	cwde   
  41d993:	push   esp
  41d994:	sub    DWORD PTR [ecx],esi
  41d996:	es jno 0x41d929
  41d999:	stc    
  41d99a:	call   DWORD PTR [ebp-0x80]
  41d99d:	jne    0x41d9d8
  41d99f:	sahf   
  41d9a0:	sbb    esp,DWORD PTR [esi]
  41d9a2:	popf   
  41d9a3:	lods   al,BYTE PTR ds:[esi]
  41d9a4:	inc    edi
  41d9a5:	les    esp,FWORD PTR [edx+esi*8-0x1521e744]
  41d9ac:	dec    edi
  41d9ad:	dec    DWORD PTR [edi]
  41d9af:	rol    DWORD PTR [ebp+0x4c],1
  41d9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b4:	mov    ds:0xefe05525,al
  41d9b9:	jnp    0x41d94e
  41d9bb:	add    BYTE PTR [edx],dh
  41d9bd:	add    esp,esp
  41d9bf:	lahf   
  41d9c0:	mov    ebp,0xb6755fde
  41d9c5:	mov    eax,ds:0xb14cb688
  41d9ca:	pop    eax
  41d9cb:	sub    BYTE PTR [ebp+0x7a432b1],al
  41d9d1:	(bad)  
  41d9d3:	jno    0x41da05
  41d9d5:	adc    DWORD PTR ds:0x1d14dfc1,0xc3d544a5
  41d9df:	pop    eax
  41d9e0:	loop   0x41da2c
  41d9e2:	sbb    dh,al
  41d9e4:	jmp    0x41d994
  41d9e6:	adc    al,0xe8
  41d9e8:	ret    
  41d9e9:	leavew 
  41d9eb:	xchg   ecx,eax
  41d9ec:	xor    cl,BYTE PTR [eax+0x13a37366]
  41d9f2:	out    dx,eax
  41d9f3:	add    DWORD PTR [edx+0x65],ebx
  41d9f6:	mov    al,ds:0xa5a1f3f2
  41d9fb:	mov    eax,ds:0xaca951
  41da00:	jg     0x41da4d
  41da02:	ins    DWORD PTR es:[edi],dx
  41da03:	lods   al,BYTE PTR ds:[esi]
  41da04:	into   
  41da05:	jge    0x41d998
  41da07:	cmp    DWORD PTR [esi],ebx
  41da09:	push   ds
  41da0a:	mov    esi,0xf7dce4e5
  41da0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da10:	popa   
  41da11:	dec    DWORD PTR [esi-0x14d936ca]
  41da17:	int    0x14
  41da19:	add    DWORD PTR [edi-0x7883ce68],ecx
  41da1f:	imul   esp,DWORD PTR [edx-0x20740478],0x7f79b07a
  41da29:	(bad)  
  41da2a:	ins    DWORD PTR es:[edi],dx
  41da2b:	stc    
  41da2c:	mov    al,dl
  41da2e:	sar    BYTE PTR [edx+0x54358766],0x76
  41da35:	xchg   ebp,eax
  41da36:	jmp    0xb7f648c2
  41da3b:	adc    al,bl
  41da3d:	mov    DWORD PTR ds:0x44a48b74,edi
  41da43:	sbb    esi,esp
  41da45:	mov    eax,0xdbc99ba
  41da4a:	jno    0x41da18
  41da4c:	add    DWORD PTR [ecx],0xffffff9e
  41da4f:	and    DWORD PTR [eax+eax*4-0x55],edx
  41da53:	cmp    al,0xbb
  41da55:	sub    eax,0xb106f4ee
  41da5a:	add    dl,BYTE PTR [edi-0x3e]
  41da5d:	rol    BYTE PTR [ebx+0x730d19b7],cl
  41da63:	cmp    dh,al
  41da65:	mov    ebx,edx
  41da67:	dec    esp
  41da68:	and    eax,0xd0187339
  41da6d:	and    al,0xf6
  41da6f:	mov    ebp,0x50d22e12
  41da74:	dec    esp
  41da75:	dec    bh
  41da77:	fwait
  41da78:	arpl   WORD PTR [edi+0x73543c71],sp
  41da7e:	pop    eax
  41da7f:	rcl    DWORD PTR [ebx],1
  41da81:	bound  esi,QWORD PTR [edx-0x1]
  41da84:	sti    
  41da85:	sub    dl,BYTE PTR [esi+0x38]
  41da88:	jo     0x41da19
  41da8a:	xchg   ecx,eax
  41da8b:	pushf  
  41da8c:	push   ebp
  41da8d:	xor    bh,ch
  41da8f:	cmp    ch,BYTE PTR [edi-0xe]
  41da92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da93:	das    
  41da94:	and    bh,BYTE PTR [ebp-0x2fc7e16]
  41da9a:	ret    
  41da9b:	push   esi
  41da9c:	stos   DWORD PTR es:[edi],eax
  41da9d:	xchg   ebx,eax
  41da9e:	addr16 xchg edx,eax
  41daa0:	je     0x41da7e
  41daa2:	sbb    al,0x80
  41daa5:	and    eax,0x45836ce8
  41daaa:	xchg   edi,eax
  41daab:	sub    DWORD PTR ds:0x1153a656,ebx
  41dab1:	mov    ebp,cs
  41dab3:	dec    esp
  41dab4:	ret    
  41dab5:	jmp    0xb2e9:0x8827078d
  41dabc:	inc    ebp
  41dabd:	xchg   BYTE PTR [ebx-0x4e],al
  41dac0:	repnz mov esi,0xd4d9499c
  41dac6:	call   0x1b257de3
  41dacb:	dec    ebx
  41dacc:	ret    
  41dacd:	xchg   edx,eax
  41dace:	mov    bl,0xd7
  41dad0:	out    dx,eax
  41dad1:	add    DWORD PTR [ebp+0x21],esi
  41dad4:	push   edx
  41dad5:	in     eax,0xf
  41dad7:	lahf   
  41dad8:	cmc    
  41dad9:	neg    DWORD PTR [ecx]
  41dadb:	xchg   ebp,eax
  41dadc:	add    BYTE PTR [eax],0x72
  41dadf:	repz jnp 0x41dae9
  41dae2:	pusha  
  41dae3:	dec    esi
  41dae4:	or     eax,0x59e03eea
  41dae9:	push   ebp
  41daea:	xchg   esi,eax
  41daeb:	jmp    0x16fe3f57
  41daf0:	mov    cl,0x77
  41daf2:	les    eax,FWORD PTR [esi-0x5678a971]
  41daf8:	or     bl,BYTE PTR [ecx+0x25]
  41dafb:	push   0x7e2f7908
  41db00:	mov    ebp,0x29d47333
  41db05:	ret    
  41db06:	ret    0x14d6
  41db09:	stos   DWORD PTR es:[edi],eax
  41db0a:	add    BYTE PTR [edi],dl
  41db0c:	sti    
  41db0d:	pop    ss
  41db0e:	cld    
  41db0f:	xchg   ebx,eax
  41db10:	ds sbb al,0x4b
  41db13:	stos   BYTE PTR es:[edi],al
  41db14:	mov    al,ds:0x72e13260
  41db19:	fild   QWORD PTR [eax+0x1ec8ff77]
  41db1f:	xchg   DWORD PTR [edi+edx*4-0x21bdf897],edi
  41db26:	sti    
  41db27:	retf   
  41db28:	xchg   DWORD PTR [ecx+0x761ee12b],ecx
  41db2e:	push   ds
  41db2f:	mov    ecx,0x9c54297e
  41db34:	shl    DWORD PTR [ebp+0x2c],1
  41db37:	jge    0x41db82
  41db39:	mov    ch,0x3f
  41db3b:	imul   ebp,DWORD PTR [edx-0x100a4850],0xa3d75e02
  41db45:	inc    ecx
  41db46:	aaa    
  41db47:	xor    DWORD PTR [edi+0x73004a65],0x60cbba46
  41db51:	jae    0x41db22
  41db53:	fidivr DWORD PTR [edx+ebp*4+0x7]
  41db57:	jg     0x41db97
  41db59:	sub    eax,0x716a6214
  41db5e:	push   edx
  41db5f:	pop    ebx
  41db60:	jg     0x41dbcf
  41db62:	loopne 0x41db63
  41db64:	cwde   
  41db65:	mov    edi,0xf95c097a
  41db6a:	or     ch,BYTE PTR [ebp+0x32]
  41db6d:	cld    
  41db6e:	aam    0x81
  41db70:	js     0x41daf7
  41db72:	sub    al,0x33
  41db74:	mov    ds:0xee33a2b3,eax
  41db79:	lock xor BYTE PTR [ebx+edx*1-0x3ab3d059],al
  41db81:	push   0x3d6d3797
  41db86:	repz test al,0xaa
  41db89:	mov    edi,0xad58da8f
  41db8e:	nop
  41db8f:	bound  esp,QWORD PTR [ebp-0x49]
  41db92:	in     al,dx
  41db93:	pusha  
  41db94:	stos   DWORD PTR es:[edi],eax
  41db95:	(bad)  
  41db96:	ins    WORD PTR es:[edi],dx
  41db98:	into   
  41db99:	push   eax
  41db9a:	hlt    
  41db9b:	pop    ds
  41db9c:	fild   QWORD PTR [ecx-0x5f8a8bba]
  41dba2:	and    dh,BYTE PTR ss:[edi-0x27]
  41dba6:	ins    BYTE PTR es:[edi],dx
  41dba7:	imul   esp,DWORD PTR [ecx],0xe
  41dbaa:	add    ebx,DWORD PTR [eax+0x7b]
  41dbad:	mov    ?,ebp
  41dbaf:	sahf   
  41dbb0:	add    edx,DWORD PTR [ebx]
  41dbb2:	addr16 ja 0x41dc2b
  41dbb5:	fist   WORD PTR [ecx-0x6f23f378]
  41dbbb:	jnp    0x41dbee
  41dbbd:	scas   eax,DWORD PTR es:[edi]
  41dbbe:	mov    edx,0xaf83e669
  41dbc3:	add    eax,0xdecb018f
  41dbc8:	int    0xce
  41dbca:	call   0x5ba3:0xe4c4073d
  41dbd1:	cmp    DWORD PTR [esp+ebx*1-0x40],esi
  41dbd5:	xchg   ecx,eax
  41dbd6:	push   esi
  41dbd7:	repnz mul BYTE PTR [edx]
  41dbda:	enter  0xf089,0x2f
  41dbde:	stos   DWORD PTR es:[edi],eax
  41dbdf:	retf   0x334d
  41dbe2:	jl     0x41dbc7
  41dbe4:	fild   QWORD PTR [ebx+0x5960af7f]
  41dbea:	mov    ds:0xc50f4dc9,eax
  41dbef:	sub    al,0x4
  41dbf1:	mov    esp,0x22407233
  41dbf6:	scas   al,BYTE PTR es:[edi]
  41dbf7:	call   0x1520:0x716894ad
  41dbfe:	(bad)
  41dc03:	jns    0x41db95
  41dc05:	xchg   dl,dl
  41dc07:	inc    edx
  41dc08:	ja     0x41dba2
  41dc0a:	sbb    ebx,ebp
  41dc0c:	fidivr DWORD PTR [eax-0x73]
  41dc0f:	push   ds
  41dc10:	dec    esi
  41dc11:	rcr    DWORD PTR [edi-0x2d],0xf2
  41dc15:	call   0x828e:0x32a16cc0
  41dc1c:	and    DWORD PTR [eax-0x6bcbbe4c],ecx
  41dc22:	call   0x3808:0x48baf788
  41dc29:	lea    eax,[ecx-0x6f]
  41dc2c:	les    edi,FWORD PTR [ebx+0x6c21f648]
  41dc32:	dec    edi
  41dc33:	pop    gs
  41dc35:	(bad)  
  41dc36:	adc    BYTE PTR [esi+0x1844c710],dl
  41dc3c:	ins    BYTE PTR es:[edi],dx
  41dc3d:	pop    ss
  41dc3e:	adc    al,0x2f
  41dc40:	sub    cl,dl
  41dc42:	hlt    
  41dc43:	xchg   esi,eax
  41dc44:	push   ebx
  41dc45:	test   eax,0xd6e740d1
  41dc4b:	adc    eax,0xad0d9b62
  41dc50:	push   es
  41dc51:	call   0xde75:0x8e06c6c5
  41dc58:	mov    edx,0x40bfec84
  41dc5d:	xor    eax,0x59fbd8b3
  41dc62:	inc    esi
  41dc63:	mov    dl,BYTE PTR [edi+0x4e8d0064]
  41dc69:	imul   edi,DWORD PTR [ebx],0xf
  41dc6c:	ins    DWORD PTR es:[edi],dx
  41dc6d:	data16 fnstcw WORD PTR [ecx+0xc]
  41dc71:	sub    al,0x66
  41dc73:	mov    bh,0x97
  41dc75:	mov    al,0xc6
  41dc77:	mov    edi,0xb3874d66
  41dc7c:	inc    edx
  41dc7d:	pop    ecx
  41dc7e:	jb     0x41dcd1
  41dc80:	jbe    0x41dc13
  41dc82:	xor    al,0x2e
  41dc84:	jb     0x41dcfa
  41dc86:	add    bl,bh
  41dc88:	pavgw  mm6,QWORD PTR [ecx-0x71]
  41dc8c:	jbe    0x41dc52
  41dc8e:	(bad)  
  41dc8f:	cmp    al,0x9e
  41dc91:	mov    eax,fs:0x56139cf9
  41dc97:	rcr    dl,cl
  41dc99:	leave  
  41dc9a:	lock cmp DWORD PTR [eax+0x53],esp
  41dc9e:	adc    ecx,DWORD PTR [edi+0x29f4819d]
  41dca4:	adc    DWORD PTR [ebp+0xd],0x66e78fe7
  41dcab:	fisub  DWORD PTR [eax+edi*4-0x7c]
  41dcaf:	aam    0xa0
  41dcb1:	in     eax,0xcf
  41dcb3:	ret    
  41dcb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb5:	add    eax,0x304f41ae
  41dcba:	jnp    0x41dc9b
  41dcbc:	nop
  41dcbd:	cmp    al,0x46
  41dcbf:	daa    
  41dcc0:	inc    esi
  41dcc1:	sub    al,BYTE PTR [edx-0xf872c7e]
  41dcc7:	out    0xb4,eax
  41dcc9:	or     al,0x5e
  41dccb:	fwait
  41dccc:	iret   
  41dccd:	mov    ds,eax
  41dccf:	push   esi
  41dcd0:	dec    edi
  41dcd1:	lahf   
  41dcd2:	into   
  41dcd3:	mov    al,cl
  41dcd5:	in     eax,dx
  41dcd6:	push   0xffffff9b
  41dcd8:	dec    esp
  41dcd9:	xor    bl,bl
  41dcdb:	sub    DWORD PTR ds:0xdf55921,ecx
  41dce1:	mov    edi,0x12285336
  41dce6:	or     al,0x8d
  41dce8:	retf   0xc587
  41dceb:	xchg   esi,eax
  41dcec:	push   ebx
  41dced:	test   BYTE PTR [ecx-0x66],al
  41dcf0:	mov    ecx,0xed083f5c
  41dcf5:	adc    al,0x14
  41dcf7:	push   cs
  41dcf8:	test   dh,0xcf
  41dcfb:	pop    edi
  41dcfc:	sbb    al,0x16
  41dcfe:	push   ebp
  41dcff:	ins    DWORD PTR es:[edi],dx
  41dd00:	jae    0x41dca3
  41dd02:	adc    BYTE PTR [ebp+0x208fd3fb],dl
  41dd08:	(bad)  
  41dd09:	mov    ecx,0xda89c75b
  41dd0e:	imul   edx,DWORD PTR [ebx],0x40
  41dd11:	mov    ch,0x6e
  41dd13:	cmp    edx,DWORD PTR [esi+eiz*2-0x76]
  41dd17:	aaa    
  41dd18:	mov    ds:0xf4cb2070,al
  41dd1d:	sbb    DWORD PTR [esp+eax*2-0x469467a2],ebx
  41dd24:	fdivr  DWORD PTR [edi+0x64]
  41dd27:	jns    0x41dda3
  41dd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd2a:	cmp    eax,0x51da5890
  41dd2f:	jle    0x41dd3d
  41dd31:	loope  0x41dcde
  41dd33:	xlat   BYTE PTR ds:[ebx]
  41dd34:	sar    DWORD PTR [edx+0x505df646],cl
  41dd3a:	cdq    
  41dd3b:	inc    edi
  41dd3c:	xchg   BYTE PTR [esi+eax*8-0x31],cl
  41dd40:	sub    esi,DWORD PTR [eax-0x1e025550]
  41dd46:	les    ecx,FWORD PTR [edx-0x79f6db76]
  41dd4c:	jnp    0x41ddb6
  41dd4e:	cld    
  41dd4f:	out    0x27,al
  41dd51:	out    dx,eax
  41dd52:	jae    0x41dd40
  41dd54:	call   0xcfed07f2
  41dd59:	jnp    0x41dd83
  41dd5b:	or     esi,ebp
  41dd5d:	ret    
  41dd5e:	mov    eax,0x7c071b36
  41dd63:	fst    DWORD PTR [ebx+esi*8+0x3ae94a8b]
  41dd6a:	xchg   ebx,eax
  41dd6b:	mov    eax,esp
  41dd6d:	iret   
  41dd6e:	xor    ebx,DWORD PTR [esi-0x2a]
  41dd71:	push   0x67e8d2f
  41dd76:	xlat   BYTE PTR ds:[ebx]
  41dd77:	jo     0x41dd50
  41dd79:	mov    edi,?
  41dd7b:	adc    eax,0xc14cb68d
  41dd80:	retf   
  41dd81:	or     al,0xd5
  41dd83:	xchg   BYTE PTR ds:0xa5845d0f,al
  41dd89:	pop    edx
  41dd8a:	mov    edx,0x5a351c87
  41dd8f:	imul   esi,DWORD PTR [si+0x5f0c],0x0
  41dd95:	and    DWORD PTR [edx-0x2de718a9],ecx
  41dd9b:	jg     0x41dda6
  41dd9d:	ja     0x41dd51
  41dd9f:	xchg   ecx,eax
  41dda0:	out    dx,eax
  41dda1:	out    0xcf,eax
  41dda3:	or     al,0x11
  41dda5:	ret    0xf62e
  41dda8:	or     eax,0xe77c0312
  41ddad:	xchg   BYTE PTR [ecx],cl
  41ddaf:	nop
  41ddb0:	lock sbb eax,DWORD PTR [ecx]
  41ddb3:	inc    ebx
  41ddb4:	xchg   ebx,eax
  41ddb5:	cmp    DWORD PTR [ebx],0xf6ec1703
  41ddbb:	fcomip st,st(7)
  41ddbd:	sbb    bh,BYTE PTR [edx+0x51]
  41ddc0:	icebp  
  41ddc1:	retf   
  41ddc2:	pop    ss
  41ddc3:	rcl    BYTE PTR [ebx+ebx*2+0xb43cdd3],0x5c
  41ddcb:	mov    esi,0x54a91142
  41ddd0:	fisub  WORD PTR ss:[edx+edx*1+0x16]
  41ddd5:	mov    eax,0x55cefdcf
  41ddda:	lods   al,BYTE PTR ds:[esi]
  41dddb:	cmc    
  41dddc:	mov    eax,0xfe85dece
  41dde1:	adc    cl,BYTE PTR [esi-0x69]
  41dde4:	push   ebp
  41dde5:	mov    al,ds:0x9e4377be
  41ddea:	sub    al,0xeb
  41ddec:	sbb    cl,BYTE PTR [eiz*8-0x341c5f00]
  41ddf3:	loopne 0x41ddcc
  41ddf5:	pop    eax
  41ddf6:	push   esi
  41ddf7:	retf   0xb530
  41ddfa:	xchg   edi,eax
  41ddfb:	inc    ebx
  41ddfc:	inc    esp
  41ddfd:	mov    esp,0xfc314afd
  41de02:	jle    0x41dda7
  41de04:	dec    eax
  41de05:	jp     0x41de02
  41de07:	pop    esp
  41de08:	call   0x3831:0xd020535a
  41de0f:	adc    eax,0xba683bd8
  41de14:	jne    0x41dda3
  41de16:	scas   eax,DWORD PTR es:[edi]
  41de17:	push   ebp
  41de18:	mov    ds:0x53891157,eax
  41de1d:	data16 xor al,0x46
  41de20:	loop   0x41de5e
  41de22:	inc    edx
  41de23:	fwait
  41de24:	les    eax,FWORD PTR [ebp-0x6fdc23f8]
  41de2a:	or     edi,0xffffffb5
  41de2d:	dec    ecx
  41de2e:	(bad)  
  41de2f:	mov    dh,0x11
  41de31:	xchg   BYTE PTR [ebp+0x25],bh
  41de34:	xchg   esi,edx
  41de36:	dec    edi
  41de37:	nop
  41de38:	pop    esi
  41de39:	jp     0x41deba
  41de3b:	mov    ebp,0xaff866c2
  41de40:	icebp  
  41de41:	int    0xa2
  41de43:	dec    edx
  41de44:	retf   
  41de45:	xchg   ebp,eax
  41de46:	xor    eax,DWORD PTR [esi]
  41de48:	and    eax,0x8d52e486
  41de4d:	andnps xmm7,xmm7
  41de50:	push   ss
  41de51:	sahf   
  41de52:	data16 loop 0x41de3d
  41de55:	into   
  41de56:	div    ebx
  41de58:	shr    DWORD PTR [ecx+0x17],cl
  41de5b:	cs (bad) 
  41de5d:	cdq    
  41de5e:	ja     0x41dea8
  41de60:	or     ah,bh
  41de62:	pop    bx
  41de64:	fcomp  DWORD PTR [ecx]
  41de66:	xchg   DWORD PTR [ebp+0x75a755d1],esp
  41de6c:	cmp    DWORD PTR [edx-0x35f6e936],edi
  41de72:	fcmovu st,st(0)
  41de74:	jbe    0x41de00
  41de76:	pop    edx
  41de77:	mov    edi,0xc1de1d8b
  41de7c:	mov    al,ds:0xe0a11a73
  41de81:	lods   eax,DWORD PTR ds:[esi]
  41de82:	iret   
  41de83:	pop    ebp
  41de84:	dec    edx
  41de85:	bound  edx,QWORD PTR [esi-0x182cb03]
  41de8b:	stos   BYTE PTR es:[edi],al
  41de8c:	(bad)  
  41de8d:	push   0xfffffff8
  41de8f:	mov    WORD PTR [eax-0x7985bbdd],?
  41de95:	(bad)  
  41de96:	stos   BYTE PTR es:[edi],al
  41de97:	popf   
  41de98:	shl    DWORD PTR [ebx+0x76d50dea],1
  41de9e:	into   
  41de9f:	(bad)  
  41dea0:	dec    edi
  41dea1:	scas   al,BYTE PTR es:[edi]
  41dea2:	(bad)  
  41dea4:	jmp    DWORD PTR [esi-0x5f3ac346]
  41deaa:	aas    
  41deab:	jo     0x41deea
  41dead:	xchg   esi,eax
  41deae:	pop    eax
  41deaf:	aas    
  41deb0:	and    ah,BYTE PTR [edi-0xe]
  41deb3:	stos   DWORD PTR es:[edi],eax
  41deb4:	or     BYTE PTR [eax+0x5bc234c],bl
  41deba:	sbb    cl,BYTE PTR [esi-0x14]
  41debd:	and    DWORD PTR [eax+0x753bf83f],esi
  41dec3:	and    DWORD PTR [eax+edi*8+0x63],0x95460a5d
  41decb:	jne    0x41de9b
  41decd:	enter  0x6b2e,0xa1
  41ded1:	push   eax
  41ded2:	out    dx,eax
  41ded3:	jb     0x41deb0
  41ded5:	ds jmp 0x41ded6
  41ded8:	mov    eax,ds:0x99738802
  41dedd:	xor    ebp,esi
  41dedf:	lods   al,BYTE PTR ds:[esi]
  41dee0:	(bad)  
  41dee1:	rcl    edi,cl
  41dee3:	cs in  al,0x5a
  41dee6:	dec    ecx
  41dee7:	in     eax,dx
  41dee8:	xor    ebx,DWORD PTR [ecx+0x351456af]
  41deee:	pop    es
  41deef:	mov    cl,0x84
  41def1:	das    
  41def2:	mov    DWORD PTR ds:0x8b243d0,esp
  41def8:	in     eax,dx
  41def9:	jbe    0x41df5f
  41defb:	cmp    bl,BYTE PTR [eax]
  41defd:	dec    ebx
  41defe:	and    BYTE PTR [ecx+ebp*1-0x27],ch
  41df02:	dec    esp
  41df03:	call   0x56abb736
  41df08:	nop
  41df09:	test   DWORD PTR [edx+0x23],0x9efb6137
  41df10:	jns    0x41ded5
  41df12:	push   0xfffffff1
  41df14:	ss jp  0x41debe
  41df17:	fsubr  DWORD PTR es:[edx+0x59]
  41df1b:	or     esp,0x1b7e40ae
  41df21:	pop    esp
  41df22:	test   DWORD PTR [ecx+0x53],0xf4828a37
  41df29:	fstp   TBYTE PTR [edi+0x6]
  41df2c:	sub    al,0xc0
  41df2e:	scas   eax,DWORD PTR es:[edi]
  41df2f:	addr16 xchg ebp,eax
  41df31:	xor    BYTE PTR [ecx-0x728a4559],ch
  41df37:	xchg   esp,ebx
  41df39:	test   al,0x5c
  41df3b:	ror    bl,0x47
  41df3e:	inc    esi
  41df3f:	cmc    
  41df40:	loop   0x41df94
  41df42:	scas   eax,DWORD PTR es:[edi]
  41df43:	leave  
  41df44:	sub    eax,0x8e51e34e
  41df49:	jbe    0x41df3f
  41df4b:	xchg   DWORD PTR ds:0xd06dcf3d,ebx
  41df51:	sub    al,0x21
  41df54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df55:	mov    cl,0x34
  41df57:	repz add al,0xb3
  41df5a:	(bad)  
  41df5b:	xchg   ebp,eax
  41df5c:	dec    edi
  41df5d:	mov    esi,0xfcea37c4
  41df62:	out    dx,al
  41df63:	add    dl,BYTE PTR [esi+0x68]
  41df66:	and    BYTE PTR [ebx+0x33bee444],cl
  41df6c:	dec    edi
  41df6d:	ret    
  41df6e:	xchg   BYTE PTR [ecx],dl
  41df70:	jnp    0x41df77
  41df72:	jecxz  0x41df29
  41df74:	fdivr  DWORD PTR [edx-0x59]
  41df77:	cdq    
  41df78:	pop    ecx
  41df79:	cmc    
  41df7a:	pop    ebx
  41df7b:	pop    ds
  41df7c:	jne    0x41dfe8
  41df7e:	outs   dx,BYTE PTR ds:[esi]
  41df7f:	data16 int3 
  41df81:	arpl   WORD PTR [esi+ebp*4-0x505ca84],di
  41df88:	push   ebx
  41df89:	retf   
  41df8a:	xlat   BYTE PTR ds:[ebx]
  41df8b:	pusha  
  41df8c:	jae    0x41df5e
  41df8e:	jo     0x41df11
  41df90:	mov    ecx,ebp
  41df92:	dec    esp
  41df93:	sti    
  41df94:	test   eax,0xbdd83557
  41df99:	xor    DWORD PTR [edi+0xd240462],eax
  41df9f:	or     ecx,DWORD PTR [edx+eiz*8]
  41dfa2:	inc    ebx
  41dfa3:	xor    al,0x65
  41dfa5:	jle    0x41df93
  41dfa7:	sbb    al,0x55
  41dfa9:	jle    0x41e027
  41dfab:	pop    ebx
  41dfac:	or     cl,BYTE PTR [ecx+0x2ead984b]
  41dfb2:	pusha  
  41dfb3:	or     DWORD PTR [eax],ecx
  41dfb5:	aas    
  41dfb6:	mov    dl,BYTE PTR [edx+0x64]
  41dfb9:	cmp    BYTE PTR [edx],bl
  41dfbb:	es es inc ebp
  41dfbe:	aas    
  41dfbf:	sub    bl,dh
  41dfc1:	cmp    al,0xa9
  41dfc3:	fisubr WORD PTR [edx-0x73]
  41dfc6:	sub    DWORD PTR [esp+edx*2],edi
  41dfc9:	mov    ds:0xa7f44f15,eax
  41dfce:	fldenv ds:0xb860caad
  41dfd4:	test   DWORD PTR [eax+edi*8],eax
  41dfd7:	pop    ss
  41dfd8:	addr16 cwde 
  41dfda:	jbe    0x41e049
  41dfdc:	mov    cl,0xed
  41dfde:	cmp    eax,0x6cc52687
  41dfe3:	test   DWORD PTR [ecx],edx
  41dfe5:	sub    eax,0xd9603d29
  41dfea:	sbb    eax,0x461fd379
  41dfef:	fist   DWORD PTR [ebx-0x567506e9]
  41dff5:	loope  0x41e06e
  41dff7:	aas    
  41dff8:	mov    ah,0x7f
  41dffa:	inc    edi
  41dffb:	stos   BYTE PTR es:[edi],al
  41dffc:	(bad)  
  41dffd:	leave  
  41dffe:	outs   dx,BYTE PTR ds:[esi]
  41dfff:	pop    ss
  41e000:	in     eax,0x7a
  41e002:	aad    0xb3
  41e004:	pop    ds
  41e005:	mov    eax,ds:0x9c2bf560
  41e00a:	inc    ebp
  41e00b:	jns    0x41dfe8
  41e00d:	cmp    ecx,eax
  41e00f:	pop    ebx
  41e010:	cmp    eax,0xb7b39e20
  41e015:	test   al,bl
  41e017:	xchg   ebx,eax
  41e018:	test   edi,0xbead9a4b
  41e01e:	retf   
  41e01f:	mov    edi,0xa5ff80fb
  41e024:	test   al,0xf8
  41e026:	pop    esi
  41e027:	xchg   esp,eax
  41e028:	inc    ebp
  41e029:	fst    QWORD PTR [ebx+edi*2-0x58]
  41e02d:	sub    al,ch
  41e02f:	mov    DWORD PTR [ebx],eax
  41e031:	lods   eax,DWORD PTR ds:[esi]
  41e032:	and    esi,DWORD PTR [eax-0x3d]
  41e035:	dec    edx
  41e036:	lods   eax,DWORD PTR ds:[esi]
  41e037:	mov    esi,es
  41e039:	(bad)  
  41e03b:	inc    edi
  41e03c:	mov    dh,0x96
  41e03e:	es mov al,0x24
  41e041:	fs pusha 
  41e043:	xchg   esi,eax
  41e044:	mov    BYTE PTR [esi],bl
  41e046:	in     al,dx
  41e047:	cmp    ch,ah
  41e049:	cdq    
  41e04a:	pop    ebp
  41e04b:	add    eax,0xfc02353e
  41e050:	popa   
  41e051:	retf   
  41e052:	fidiv  DWORD PTR [edi-0x3f]
  41e055:	or     bh,ah
  41e057:	mov    WORD PTR [edx-0x1b],?
  41e05a:	jmp    0x3151c3f9
  41e05f:	mov    al,0x82
  41e061:	outs   dx,BYTE PTR ds:[esi]
  41e062:	imul   ebx,DWORD PTR [edx+0x1e],0x4b
  41e066:	cmc    
  41e067:	fdiv   st(1),st
  41e069:	sti    
  41e06a:	add    DWORD PTR [ebx+0x30],esi
  41e06d:	cld    
  41e06e:	sub    eax,edx
  41e070:	adc    edi,DWORD PTR [ecx]
  41e072:	or     DWORD PTR [edi+0x2b],0x19
  41e076:	(bad)  
  41e078:	sbb    BYTE PTR [esi-0x3a],al
  41e07b:	js     0x41e0ef
  41e07d:	dec    ecx
  41e07e:	retf   
  41e07f:	pop    es
  41e080:	cmp    BYTE PTR [esi],0x5
  41e083:	int    0x55
  41e085:	repnz cs mov esi,0x3822243b
  41e08c:	mov    ss,cx
  41e08f:	mov    WORD PTR [edx],?
  41e091:	(bad)  
  41e092:	cld    
  41e093:	mov    al,ds:0x141b98b2
  41e098:	shl    DWORD PTR [edi+edx*8+0x4e],1
  41e09c:	and    al,0x88
  41e09e:	bound  edx,QWORD PTR [eax]
  41e0a0:	xor    DWORD PTR [esi],ebp
  41e0a2:	imul   ecx,DWORD PTR [ecx+edi*2],0xffffffab
  41e0a6:	mov    esi,DWORD PTR [esi-0x32bb39fc]
  41e0ac:	dec    eax
  41e0ad:	test   al,0x9d
  41e0af:	pop    ebp
  41e0b0:	fidiv  WORD PTR [edi]
  41e0b2:	add    eax,0xd55c9576
  41e0b7:	pop    edx
  41e0b8:	out    0x8,al
  41e0ba:	adc    eax,0xb2d73103
  41e0bf:	rcl    DWORD PTR [ebx+0x69],0xdf
  41e0c3:	cmp    dl,BYTE PTR [eax]
  41e0c5:	sbb    DWORD PTR [eax+0x4a],edx
  41e0c8:	and    edx,DWORD PTR [esi+esi*4+0x33]
  41e0cc:	addr16 popa 
  41e0ce:	fsubr  DWORD PTR [ecx-0x58ee570e]
  41e0d4:	xchg   ebp,eax
  41e0d5:	jle    0x41e0f2
  41e0d7:	inc    edx
  41e0d8:	outs   dx,BYTE PTR ds:[esi]
  41e0d9:	std    
  41e0da:	push   ds
  41e0db:	mov    al,ch
  41e0dd:	cwde   
  41e0de:	aas    
  41e0df:	test   DWORD PTR [eax+eiz*2],edi
  41e0e2:	lods   al,BYTE PTR ds:[esi]
  41e0e3:	cmc    
  41e0e4:	ss lahf 
  41e0e6:	idiv   BYTE PTR [eax+0x39]
  41e0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0ea:	fdivr  DWORD PTR [ebp-0x399d3ff4]
  41e0f0:	xor    eax,ebp
  41e0f2:	mov    ebx,0x7b2565e4
  41e0f7:	push   ebp
  41e0f8:	sub    eax,0xcc19b113
  41e0fd:	mov    ds,esi
  41e0ff:	inc    edx
  41e100:	inc    ecx
  41e101:	retf   0xc2cb
  41e104:	scas   al,BYTE PTR es:[edi]
  41e105:	and    eax,0x2022f60d
  41e10a:	pop    eax
  41e10b:	mov    DWORD PTR [edi+ebx*8+0x77a9b524],ebx
  41e112:	push   esi
  41e113:	mov    ebp,0x8c7f3e2f
  41e118:	inc    ecx
  41e119:	inc    ebx
  41e11a:	cmp    BYTE PTR [esi],cl
  41e11c:	or     bh,dl
  41e11e:	scas   al,BYTE PTR es:[edi]
  41e11f:	fcomp  QWORD PTR [ecx+0x72]
  41e122:	shl    ebx,1
  41e124:	(bad)  
  41e125:	test   BYTE PTR [edi-0x24],0x96
  41e129:	mov    dh,0x86
  41e12b:	int    0xd9
  41e12d:	fsubr  DWORD PTR [ebp-0x67]
  41e130:	int3   
  41e131:	fs and al,0x66
  41e134:	mov    eax,0x62c9704a
  41e139:	push   esi
  41e13a:	js     0x41e1af
  41e13c:	data16 mov al,ds:0x60efe94f
  41e142:	mov    esi,0xa8caed6d
  41e147:	and    edx,DWORD PTR [esi+ebp*8-0x65fa1e18]
  41e14e:	add    eax,0x9adbe913
  41e153:	clc    
  41e154:	ret    0xb11b
  41e157:	jecxz  0x41e0dc
  41e159:	push   0xd6a52e3b
  41e15e:	pop    edi
  41e15f:	xor    BYTE PTR [esi],cl
  41e161:	aam    0xe9
  41e163:	(bad)
  41e167:	or     eax,0x82a68fdc
  41e16c:	iret   
  41e16d:	mov    ch,0xd9
  41e16f:	mov    DWORD PTR [ebx-0x57afe6ef],edx
  41e175:	push   ebp
  41e176:	xchg   esi,eax
  41e177:	mov    al,0xe5
  41e179:	retf   
  41e17a:	in     eax,dx
  41e17b:	inc    eax
  41e17c:	push   ds
  41e17d:	push   esi
  41e17e:	and    cl,BYTE PTR [edi]
  41e180:	mov    eax,ds:0xf6169b62
  41e185:	mov    ebp,ebp
  41e187:	sub    ebx,DWORD PTR fs:0xa38ac682
  41e18e:	xchg   edi,eax
  41e18f:	mov    ebx,0x9cf1904e
  41e194:	or     esi,DWORD PTR [ecx+0x739c9c5c]
  41e19a:	cmp    eax,DWORD PTR [edi+0x5e]
  41e19d:	sbb    BYTE PTR [esi-0x26],dl
  41e1a0:	std    
  41e1a1:	add    DWORD PTR [ecx],0x71
  41e1a4:	out    dx,ax
  41e1a6:	cli    
  41e1a7:	sub    esi,esi
  41e1a9:	push   0x29e0f14b
  41e1ae:	imul   eax,edx,0x2f
  41e1b1:	jae    0x41e147
  41e1b3:	add    ch,bl
  41e1b5:	imul   esp,DWORD PTR [edi+esi*4+0x57],0x5a
  41e1ba:	imul   edi,DWORD PTR [edx+0x44],0xffffff81
  41e1be:	jp     0x41e1e8
  41e1c0:	xor    DWORD PTR [ecx+0x5d],esi
  41e1c3:	fstp   QWORD PTR [ebx]
  41e1c5:	cmp    DWORD PTR [edi-0x78],edx
  41e1c8:	cli    
  41e1c9:	cmc    
  41e1ca:	xchg   ebp,eax
  41e1cb:	test   BYTE PTR ds:0xb3c12c6f,al
  41e1d1:	jp     0x41e15a
  41e1d3:	(bad)  
  41e1d4:	jle    0x41e1d3
  41e1d6:	ins    BYTE PTR es:[edi],dx
  41e1d7:	jecxz  0x41e1f1
  41e1d9:	xor    ebx,DWORD PTR [esi+ebp*2]
  41e1dc:	in     eax,dx
  41e1dd:	adc    eax,0xf226f081
  41e1e2:	add    cl,BYTE PTR [ebx]
  41e1e4:	aam    0x34
  41e1e6:	pop    ebp
  41e1e7:	inc    ebp
  41e1e8:	mov    esi,0xb4cdc3fa
  41e1ed:	or     DWORD PTR [ebx],ecx
  41e1ef:	stc    
  41e1f0:	bound  ebp,QWORD PTR [ebp+0x2]
  41e1f3:	adc    bl,BYTE PTR [eax+eiz*4+0x3b]
  41e1f7:	lahf   
  41e1f8:	frstor [edx]
  41e1fa:	cmp    dl,BYTE PTR [edx+0x50ce37ec]
  41e200:	cli    
  41e201:	aad    0x9e
  41e203:	stc    
  41e204:	dec    esp
  41e205:	stos   DWORD PTR es:[edi],eax
  41e206:	mov    edi,0xa10b1bd7
  41e20b:	and    al,dh
  41e20d:	cwde   
  41e20e:	call   0x807339cd
  41e213:	sub    dh,BYTE PTR [edi+0x3c05f38b]
  41e219:	pushf  
  41e21a:	stc    
  41e21b:	shl    ebx,1
  41e21d:	loop   0x41e219
  41e21f:	(bad)  
  41e220:	dec    esp
  41e221:	add    eax,0x62d1eecc
  41e226:	cld    
  41e227:	in     eax,dx
  41e228:	stos   BYTE PTR es:[edi],al
  41e229:	mov    esp,0x4d68706a
  41e22e:	inc    esi
  41e22f:	jmp    FWORD PTR [edx]
  41e231:	daa    
  41e232:	push   ds
  41e233:	je     0x41e1f0
  41e235:	(bad)  
  41e236:	xor    eax,0x3361e882
  41e23b:	pop    esi
  41e23c:	mov    dl,0x89
  41e23e:	mov    ds:0x29ce9c7e,eax
  41e243:	adc    BYTE PTR [ebx],dh
  41e245:	sbb    al,0xc2
  41e247:	pushf  
  41e248:	fdiv   st,st(1)
  41e24a:	outs   dx,BYTE PTR ds:[esi]
  41e24b:	fs pop ss
  41e24d:	shr    DWORD PTR [edx],1
  41e24f:	sbb    eax,0x313e3402
  41e254:	cmc    
  41e255:	sub    edi,DWORD PTR [edi+0x11]
  41e258:	sbb    al,0xb2
  41e25a:	ja     0x41e1ed
  41e25c:	sahf   
  41e25d:	push   edx
  41e25e:	push   0xf1b033f
  41e263:	ffreep st(4)
  41e265:	push   edi
  41e266:	mov    al,0xe7
  41e268:	dec    ebx
  41e269:	ret    
  41e26a:	mov    bl,0x80
  41e26c:	loope  0x41e1f9
  41e26e:	or     cl,BYTE PTR [edi]
  41e270:	jno    0x41e200
  41e272:	push   eax
  41e273:	sub    cl,BYTE PTR [edi+0x9e27558]
  41e279:	aaa    
  41e27a:	jecxz  0x41e211
  41e27c:	enter  0x7f1c,0x23
  41e280:	mov    ss,WORD PTR [edi-0x43358e1e]
  41e286:	stos   BYTE PTR es:[edi],al
  41e287:	call   0x1b4c9f74
  41e28c:	icebp  
  41e28d:	loope  0x41e305
  41e28f:	inc    edi
  41e290:	call   0x3abc:0x5797aca8
  41e297:	pop    es
  41e298:	daa    
  41e299:	xchg   DWORD PTR [ebx-0x78],esi
  41e29c:	sub    dl,BYTE PTR [eax]
  41e29e:	rol    DWORD PTR [ebx],0xf1
  41e2a1:	ds pop es
  41e2a3:	bswap  esp
  41e2a5:	scas   eax,DWORD PTR es:[edi]
  41e2a6:	adc    al,0xa2
  41e2a8:	mov    esi,0xeefde41d
  41e2ad:	(bad)  
  41e2ae:	xchg   edx,eax
  41e2af:	pop    esi
  41e2b0:	mul    al
  41e2b2:	je     0x41e2a6
  41e2b4:	mov    al,0x7e
  41e2b6:	sbb    BYTE PTR [ecx],dl
  41e2b8:	jnp    0x41e258
  41e2ba:	push   edx
  41e2bb:	sub    cl,ch
  41e2bd:	lea    esp,[edi]
  41e2bf:	dec    esp
  41e2c0:	cmp    edi,DWORD PTR [eax]
  41e2c2:	dec    ebx
  41e2c3:	add    edi,DWORD PTR [edi]
  41e2c5:	mov    ds:0x5c321bb3,al
  41e2ca:	in     al,0xdd
  41e2cc:	(bad)  
  41e2cd:	in     eax,0xe1
  41e2cf:	adc    al,0xe5
  41e2d1:	pop    ebx
  41e2d2:	into   
  41e2d3:	mov    bh,0xed
  41e2d5:	aad    0xc
  41e2d7:	sbb    BYTE PTR [ebp+ebx*2+0x613593f1],ch
  41e2de:	movq   QWORD PTR [edx+ebx*2],mm4
  41e2e2:	fcmovne st,st(7)
  41e2e4:	inc    DWORD PTR [ebx+0x5a34e771]
  41e2ea:	mov    fs,WORD PTR [edx-0x53]
  41e2ed:	leave  
  41e2ee:	mov    bh,0x6a
  41e2f0:	push   esp
  41e2f1:	(bad)  
  41e2f2:	aam    0xfa
  41e2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2f5:	xor    al,0xf3
  41e2f7:	imul   ebx,DWORD PTR [eax*1+0x48ddb826],0x1b
  41e2ff:	jne    0x41e311
  41e301:	jo     0x41e2b1
  41e303:	jmp    0x41e33c
  41e305:	dec    edx
  41e306:	aad    0x84
  41e308:	aam    0xa4
  41e30a:	rol    DWORD PTR [esi+0x1],0x75
  41e30e:	cwde   
  41e30f:	push   edx
  41e310:	xchg   ah,bh
  41e312:	cld    
  41e313:	loopne 0x41e2ac
  41e315:	enter  0xaf2e,0x47
  41e319:	mov    edi,DWORD PTR [edi]
  41e31b:	mov    ebx,DWORD PTR [eax+0x3c]
  41e31e:	lea    edi,[ebx+edi*8+0x78]
  41e322:	mov    edi,DWORD PTR [edi+eax*1]
  41e325:	mov    DWORD PTR [ebp-0x18],edi
  41e328:	mov    edi,DWORD PTR [ebp+0x8]
  41e32b:	xor    edi,ecx
  41e32d:	add    edi,edx
  41e32f:	mov    DWORD PTR [ebp-0x1c],edi
  41e332:	mov    edi,DWORD PTR [ebp+0x8]
  41e335:	xor    edi,ecx
  41e337:	mov    ecx,DWORD PTR [ebp-0x18]
  41e33a:	add    edi,edx
  41e33c:	cmp    ecx,edi
  41e33e:	je     0x41e380
  41e344:	mov    ecx,DWORD PTR [ebp-0x18]
  41e347:	add    ecx,eax
  41e349:	mov    DWORD PTR [ebp-0x1c],ecx
  41e34c:	mov    ecx,DWORD PTR [ebp-0x30]
  41e34f:	mov    edx,DWORD PTR [ebp-0x2c]
  41e352:	mov    edx,0xa145
  41e357:	xor    cx,dx
  41e35a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e35d:	mov    edx,DWORD PTR [edx+0xc]
  41e360:	add    cx,si
  41e363:	cmp    WORD PTR [eax+edx*1],cx
  41e367:	jne    0x41e380
  41e36d:	mov    ecx,DWORD PTR ds:0x428365
  41e373:	mov    ecx,DWORD PTR [ecx+0x198]
  41e379:	mov    DWORD PTR [ecx],eax
  41e37b:	jmp    0x41e3db
  41e380:	push   DWORD PTR [ebp+0x1c]
  41e383:	push   DWORD PTR [ebp+0x18]
  41e386:	jmp    0x41e3ca
  41e38b:	mov    eax,DWORD PTR [ebp+0x18]
  41e38e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e391:	cmp    eax,0x70941f92
  41e396:	jne    0x41e3af
  41e39c:	cmp    ecx,ebx
  41e39e:	jne    0x41e3af
  41e3a4:	push   ebx
  41e3a5:	push   0x70941f9c
  41e3aa:	jmp    0x41e3ca
  41e3af:	mov    eax,DWORD PTR [ebp+0x18]
  41e3b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e3b5:	cmp    eax,0x70941f9c
  41e3ba:	jne    0x41e3db
  41e3c0:	cmp    ecx,ebx
  41e3c2:	jne    0x41e3db
  41e3c8:	push   ebx
  41e3c9:	push   edi
  41e3ca:	push   DWORD PTR [ebp+0x14]
  41e3cd:	push   DWORD PTR [ebp+0x10]
  41e3d0:	push   DWORD PTR [ebp+0xc]
  41e3d3:	push   DWORD PTR [ebp+0x8]
  41e3d6:	call   0x417181
  41e3db:	pop    edi
  41e3dc:	pop    esi
  41e3dd:	pop    ebx
  41e3de:	leave  
  41e3df:	ret    0x18
  41e3e2:	push   ebp
  41e3e3:	mov    ebp,esp
  41e3e5:	and    esp,0xfffffff8
  41e3e8:	sub    esp,0xcc
  41e3ee:	mov    al,ds:0x42848a
  41e3f3:	push   ebx
  41e3f4:	mov    DWORD PTR ds:0x428e39,0x550e
  41e3fe:	push   esi
  41e3ff:	mov    DWORD PTR ds:0x428e29,0x154d
  41e409:	push   edi
  41e40a:	mov    DWORD PTR ds:0x428e49,0x193
  41e414:	mov    BYTE PTR [esp+0xd6],0x0
  41e41c:	cmp    al,BYTE PTR ds:0x428497
  41e422:	je     0x41e439
  41e428:	xor    eax,eax
  41e42a:	mov    DWORD PTR ds:0x428e81,0x6e70
  41e434:	jmp    0x41f510
  41e439:	mov    al,ds:0x4284a3
  41e43e:	mov    DWORD PTR ds:0x428ecd,0xf87
  41e448:	cmp    al,BYTE PTR ds:0x4284b4
  41e44e:	jne    0x41e428
  41e454:	mov    edi,DWORD PTR ds:0x42ca5c
  41e45a:	push   0x4284bd
  41e45f:	adc    DWORD PTR ds:0x428e35,0x428eb9
  41e469:	push   0x4284c9
  41e46e:	call   edi
  41e470:	sbb    DWORD PTR ds:0x428e45,0x428eb5
  41e47a:	test   eax,eax
  41e47c:	mov    DWORD PTR ds:0x428e85,0x5858
  41e486:	je     0x41e428
  41e48c:	push   0x1
  41e48e:	and    DWORD PTR ds:0x428e85,0x768a
  41e498:	push   0x9765765
  41e49d:	call   DWORD PTR ds:0x42ca34
  41e4a3:	and    DWORD PTR ds:0x428e49,0x546c
  41e4ad:	push   0x4284d9
  41e4b2:	sub    DWORD PTR ds:0x428e55,0x3ef4
  41e4bc:	lea    eax,[esp+0x5c]
  41e4c0:	adc    DWORD PTR ds:0x428ecd,0x2de
  41e4ca:	push   eax
  41e4cb:	xor    DWORD PTR ds:0x428e65,0x1e99
  41e4d5:	call   DWORD PTR ds:0x42ca44
  41e4db:	add    DWORD PTR ds:0x428e9d,edi
  41e4e1:	mov    DWORD PTR [esp+0x30],0x0
  41e4e9:	or     edx,esi
  41e4eb:	mov    ecx,0xf89c85b9
  41e4f0:	adc    edx,edx
  41e4f2:	mov    DWORD PTR [esp+0x28],ecx
  41e4f6:	mov    DWORD PTR [esp+0xc],0xf89c85b8
  41e4fe:	dec    esi
  41e4ff:	lea    eax,[esp+0x3c]
  41e503:	and    DWORD PTR ds:0x428ea9,0x0
  41e50d:	xor    edx,edx
  41e50f:	add    edx,DWORD PTR ds:0x428ea9
  41e515:	inc    edx
  41e516:	mov    DWORD PTR ds:0x428ea9,edx
  41e51c:	cmp    DWORD PTR ds:0x428ea9,0x21
  41e523:	jle    0x41e54e
  41e529:	jmp    0x41e541
  41e52e:	push   0x428124
  41e533:	push   DWORD PTR [ebp-0x14]
  41e536:	push   0x1e1e
  41e53b:	call   DWORD PTR ds:0x42ca60
  41e541:	cmp    DWORD PTR ds:0x428ea9,0x17
  41e548:	jb     0x41e50d
  41e54e:	mov    DWORD PTR [esp+0x30],eax
  41e552:	adc    esi,DWORD PTR ds:0x428ead
  41e558:	lea    eax,[esp+0x38]
  41e55c:	and    DWORD PTR ds:0x428e89,0x0
  41e566:	jmp    0x41e578
  41e56b:	mov    ebx,DWORD PTR ds:0x428e89
  41e571:	inc    ebx
  41e572:	mov    DWORD PTR ds:0x428e89,ebx
  41e578:	cmp    DWORD PTR ds:0x428e89,0x11
  41e57f:	jae    0x41e5ca
  41e585:	cmp    DWORD PTR ds:0x428e89,0x5
  41e58c:	jb     0x41e5ca
  41e592:	jmp    0x41e5ab
  41e597:	push   0x42814e
  41e59c:	push   DWORD PTR [ebp-0x24]
  41e59f:	push   DWORD PTR [ebp-0x10]
  41e5a2:	push   DWORD PTR [ebp-0x18]
  41e5a5:	call   DWORD PTR ds:0x42ca64
  41e5ab:	cmp    DWORD PTR ds:0x428e89,0x4
  41e5b2:	jne    0x41e5c5
  41e5b8:	mov    ebx,DWORD PTR ds:0x428e89
  41e5be:	inc    ebx
  41e5bf:	mov    DWORD PTR ds:0x428e89,ebx
  41e5c5:	jmp    0x41e56b
  41e5ca:	mov    DWORD PTR [esp+0x18],eax
  41e5ce:	xor    esi,esi
  41e5d0:	or     esi,DWORD PTR ds:0x428eb9
  41e5d6:	or     DWORD PTR ds:0x428e25,esi
  41e5dc:	mov    eax,ds:0x428365
  41e5e1:	mov    eax,DWORD PTR [eax+0x1c8]
  41e5e7:	mov    eax,DWORD PTR [eax]
  41e5e9:	mov    DWORD PTR ds:0x428e9d,0x1c
  41e5f3:	cmp    DWORD PTR ds:0x428e9d,0x0
  41e5fa:	je     0x41e64a
  41e600:	cmp    DWORD PTR ds:0x428e9d,0x3
  41e607:	jl     0x41e64a
  41e60d:	jmp    0x41e61e
  41e612:	push   DWORD PTR [ebp-0x24]
  41e615:	push   DWORD PTR [ebp-0x28]
  41e618:	call   DWORD PTR ds:0x42ca18
  41e61e:	cmp    DWORD PTR ds:0x428e9d,0x4
  41e625:	jne    0x41e638
  41e62b:	mov    ebx,DWORD PTR ds:0x428e9d
  41e631:	dec    ebx
  41e632:	mov    DWORD PTR ds:0x428e9d,ebx
  41e638:	mov    ebx,DWORD PTR ds:0x428e9d
  41e63e:	dec    ebx
  41e63f:	mov    DWORD PTR ds:0x428e9d,ebx
  41e645:	jmp    0x41e5f3
  41e64a:	mov    edx,DWORD PTR [esp+0x18]
  41e64e:	adc    DWORD PTR ds:0x428ec9,edi
  41e654:	mov    esi,0x75108b1
  41e659:	sub    ebx,0x34f9
  41e65f:	xor    eax,esi
  41e661:	add    DWORD PTR ds:0x428e39,0x7d93
  41e66b:	mov    ebx,0x3272f8
  41e670:	or     DWORD PTR ds:0x428e6d,0x428e29
  41e67a:	add    eax,ebx
  41e67c:	mov    DWORD PTR ds:0x428e35,0x4692
  41e686:	mov    DWORD PTR [edx],eax
  41e688:	not    eax
  41e68a:	mov    eax,ds:0x428ce5
  41e68f:	cmp    eax,0x455dedfa
  41e694:	jne    0x41e6fe
  41e69a:	neg    eax
  41e69c:	mov    eax,DWORD PTR [esp+0x28]
  41e6a0:	mov    edx,DWORD PTR ds:0x428365
  41e6a6:	xor    DWORD PTR ds:0x428e91,0x428ebd
  41e6b0:	mov    edx,DWORD PTR [edx+0x198]
  41e6b6:	xor    eax,esi
  41e6b8:	add    DWORD PTR ds:0x428e9d,0x1078
  41e6c2:	add    eax,ebx
  41e6c4:	add    DWORD PTR ds:0x428e89,0x4c2a
  41e6ce:	mov    DWORD PTR [edx],eax
  41e6d0:	mov    eax,DWORD PTR [esp+0x28]
  41e6d4:	xor    eax,esi
  41e6d6:	add    eax,ebx
  41e6d8:	mov    ds:0x428ce5,eax
  41e6dd:	mov    eax,DWORD PTR [esp+0x28]
  41e6e1:	sub    DWORD PTR ds:0x428e41,0x428ec9
  41e6eb:	xor    eax,esi
  41e6ed:	add    eax,ebx
  41e6ef:	or     DWORD PTR ds:0x428e45,0x428e35
  41e6f9:	mov    ds:0x42845d,eax
  41e6fe:	and    DWORD PTR ds:0x428e85,0x0
  41e708:	jmp    0x41e718
  41e70d:	mov    eax,ds:0x428e85
  41e712:	inc    eax
  41e713:	mov    ds:0x428e85,eax
  41e718:	cmp    DWORD PTR ds:0x428e85,0x15
  41e71f:	jae    0x41e74a
  41e725:	cmp    DWORD PTR ds:0x428e85,0x18
  41e72c:	jg     0x41e74a
  41e732:	jmp    0x41e745
  41e737:	push   0x467c
  41e73c:	push   DWORD PTR [ebp-0x14]
  41e73f:	call   DWORD PTR ds:0x42ca1c
  41e745:	jmp    0x41e70d
  41e74a:	mov    eax,ds:0x428365
  41e74f:	mov    eax,DWORD PTR [eax+0x18c]
  41e755:	mov    eax,DWORD PTR [eax]
  41e757:	sbb    DWORD PTR ds:0x428eb1,0x2dbb
  41e761:	mov    DWORD PTR [esp+0x40],eax
  41e765:	movzx  eax,WORD PTR ds:0x428ea5
  41e76c:	sub    DWORD PTR ds:0x428e6d,eax
  41e772:	mov    eax,0xf89c85bd
  41e777:	mov    DWORD PTR [esp+0x10],eax
  41e77b:	mov    DWORD PTR [esp+0x10],eax
  41e77f:	mov    DWORD PTR [esp+0x10],eax
  41e783:	add    DWORD PTR ds:0x428e65,0x428e6d
  41e78d:	mov    DWORD PTR [esp+0x10],ecx
  41e791:	sub    DWORD PTR ds:0x428e5d,0x428e6d
  41e79b:	mov    DWORD PTR [esp+0x18],eax
  41e79f:	mov    DWORD PTR [esp+0x18],0xf89c85a1
  41e7a7:	mov    eax,ds:0x428ec1
  41e7ac:	add    DWORD PTR ds:0x428e89,eax
  41e7b2:	mov    eax,DWORD PTR [esp+0x28]
  41e7b6:	xor    eax,esi
  41e7b8:	add    eax,ebx
  41e7ba:	jmp    0x41e98b
  41e7bf:	mov    al,ds:0x4284de
  41e7c4:	cmp    al,BYTE PTR ds:0x4284eb
  41e7ca:	jne    0x41e428
  41e7d0:	mov    al,ds:0x4284f7
  41e7d5:	cmp    al,BYTE PTR ds:0x428508
  41e7db:	mov    DWORD PTR ds:0x428ea1,0x1959
  41e7e5:	jne    0x41e428
  41e7eb:	push   0x428511
  41e7f0:	xor    DWORD PTR ds:0x428e5d,0x2e26
  41e7fa:	push   0x42851d
  41e7ff:	call   edi
  41e801:	or     DWORD PTR ds:0x428e59,0x428eb9
  41e80b:	test   eax,eax
  41e80d:	mov    DWORD PTR ds:0x428e99,0x6eaa
  41e817:	je     0x41e428
  41e81d:	mov    al,ds:0x42852e
  41e822:	cmp    al,BYTE PTR ds:0x42853b
  41e828:	mov    DWORD PTR ds:0x428e4d,0x38ed
  41e832:	jne    0x41e428
  41e838:	mov    DWORD PTR ds:0x428e65,0x1c9c
  41e842:	mov    al,ds:0x428547
  41e847:	mov    DWORD PTR ds:0x428ecd,0x75a8
  41e851:	cmp    al,BYTE PTR ds:0x428558
  41e857:	mov    DWORD PTR ds:0x428e71,0x3bcf
  41e861:	jne    0x41e428
  41e867:	adc    DWORD PTR ds:0x428ead,0x428ebd
  41e871:	push   0x428561
  41e876:	inc    DWORD PTR ds:0x428ec1
  41e87c:	push   0x42856d
  41e881:	call   edi
  41e883:	test   eax,eax
  41e885:	mov    DWORD PTR ds:0x428e31,0x5531
  41e88f:	je     0x41e428
  41e895:	sub    eax,0x55e1
  41e89a:	mov    eax,DWORD PTR [esp+0xc]
  41e89e:	sbb    DWORD PTR ds:0x428ea1,0x6f3f
  41e8a8:	mov    ecx,DWORD PTR [esp+0x18]
  41e8ac:	add    DWORD PTR ds:0x428e8d,0x428e31
  41e8b6:	xor    eax,esi
  41e8b8:	adc    DWORD PTR ds:0x428e79,0x1de7
  41e8c2:	lea    eax,[eax+ecx*1+0x3272f8]
  41e8c9:	push   eax
  41e8ca:	mov    eax,DWORD PTR [esp+0x14]
  41e8ce:	and    DWORD PTR ds:0x428e61,0x6940
  41e8d8:	xor    eax,esi
  41e8da:	xor    DWORD PTR ds:0x428e85,0x2762
  41e8e4:	lea    eax,[ebp+eax*1+0x327300]
  41e8eb:	push   eax
  41e8ec:	xor    eax,0x37bf
  41e8f1:	mov    eax,ds:0x428365
  41e8f6:	push   DWORD PTR [eax+0x1bc]
  41e8fc:	xor    DWORD PTR ds:0x428e49,0x22e4
  41e906:	call   0x41f519
  41e90b:	xor    edx,edx
  41e90d:	xor    edx,DWORD PTR ds:0x428eed
  41e913:	mov    ecx,DWORD PTR ds:0x428efd
  41e919:	sub    ecx,edx
  41e91b:	sub    edx,DWORD PTR [edx+ecx*1]
  41e91e:	mov    eax,DWORD PTR [esp+0xc]
  41e922:	and    DWORD PTR ds:0x428ebd,0x0
  41e92c:	jmp    0x41e940
  41e931:	xor    edx,edx
  41e933:	add    edx,DWORD PTR ds:0x428ebd
  41e939:	inc    edx
  41e93a:	mov    DWORD PTR ds:0x428ebd,edx
  41e940:	cmp    DWORD PTR ds:0x428ebd,0x12
  41e947:	jae    0x41e972
  41e94d:	cmp    DWORD PTR ds:0x428ebd,0x1a
  41e954:	jbe    0x41e972
  41e95a:	jmp    0x41e96d
  41e95f:	push   0x4280ab
  41e964:	push   DWORD PTR [ebp-0x24]
  41e967:	call   DWORD PTR ds:0x42ca20
  41e96d:	jmp    0x41e931
  41e972:	mov    ecx,DWORD PTR [esp+0x18]
  41e976:	add    DWORD PTR ds:0x428ebd,edi
  41e97c:	xor    eax,esi
  41e97e:	xor    edx,DWORD PTR ds:0x428eb1
  41e984:	lea    eax,[ecx+eax*1+0x3272f8]
  41e98b:	and    DWORD PTR ds:0x428e29,0x0
  41e995:	jmp    0x41e9a9
  41e99a:	xor    ecx,ecx
  41e99c:	add    ecx,DWORD PTR ds:0x428e29
  41e9a2:	inc    ecx
  41e9a3:	mov    DWORD PTR ds:0x428e29,ecx
  41e9a9:	cmp    DWORD PTR ds:0x428e29,0x1b
  41e9b0:	jae    0x41e9f5
  41e9b6:	cmp    DWORD PTR ds:0x428e29,0x4
  41e9bd:	jbe    0x41e9f5
  41e9c3:	jmp    0x41e9d6
  41e9c8:	push   0x428092
  41e9cd:	push   DWORD PTR [ebp-0x1c]
  41e9d0:	call   DWORD PTR ds:0x42ca24
  41e9d6:	cmp    DWORD PTR ds:0x428e29,0x3
  41e9dd:	jne    0x41e9f0
  41e9e3:	mov    ecx,DWORD PTR ds:0x428e29
  41e9e9:	inc    ecx
  41e9ea:	mov    DWORD PTR ds:0x428e29,ecx
  41e9f0:	jmp    0x41e99a
  41e9f5:	mov    ecx,DWORD PTR [esp+0xc]
  41e9f9:	mov    edx,DWORD PTR [esp+0xc]
  41e9fd:	and    DWORD PTR ds:0x428e81,0x27c9
  41ea07:	xor    edx,esi
  41ea09:	xor    ecx,esi
  41ea0b:	add    ecx,edx
  41ea0d:	and    DWORD PTR ds:0x428eb9,0x0
  41ea17:	mov    edx,DWORD PTR ds:0x428eb9
  41ea1d:	inc    edx
  41ea1e:	mov    DWORD PTR ds:0x428eb9,edx
  41ea24:	cmp    DWORD PTR ds:0x428eb9,0x23
  41ea2b:	jle    0x41ea4e
  41ea31:	jmp    0x41ea41
  41ea36:	push   0x3c70
  41ea3b:	call   DWORD PTR ds:0x42ca28
  41ea41:	cmp    DWORD PTR ds:0x428eb9,0x1b
  41ea48:	jb     0x41ea17
  41ea4e:	mov    edx,DWORD PTR [esp+0xc]
  41ea52:	adc    DWORD PTR ds:0x428ec9,0x428ecd
  41ea5c:	xor    edx,esi
  41ea5e:	mov    DWORD PTR ds:0x428e85,0x69c
  41ea68:	lea    ecx,[ecx+edx*1+0x9758e8]
  41ea6f:	mov    DWORD PTR ds:0x428ec1,0x5f48
  41ea79:	mov    DWORD PTR [esp+0x18],eax
  41ea7d:	mov    DWORD PTR ds:0x428e41,0x5aa0
  41ea87:	cmp    eax,ecx
  41ea89:	mov    DWORD PTR ds:0x428e69,0x3a73
  41ea93:	jbe    0x41e7bf
  41ea99:	and    ecx,DWORD PTR ds:0x428ed1
  41ea9f:	mov    eax,DWORD PTR [ebp+0xc]
  41eaa2:	mov    DWORD PTR ds:0x428e9d,0x14
  41eaac:	cmp    DWORD PTR ds:0x428e9d,0x0
  41eab3:	je     0x41eb02
  41eab9:	cmp    DWORD PTR ds:0x428e9d,0x3
  41eac0:	jb     0x41eb02
  41eac6:	jmp    0x41ead4
  41eacb:	push   DWORD PTR [ebp-0x18]
  41eace:	call   DWORD PTR ds:0x42ca2c
  41ead4:	cmp    DWORD PTR ds:0x428e9d,0x4
  41eadb:	jne    0x41eaee
  41eae1:	mov    ecx,DWORD PTR ds:0x428e9d
  41eae7:	dec    ecx
  41eae8:	mov    DWORD PTR ds:0x428e9d,ecx
  41eaee:	xor    ecx,ecx
  41eaf0:	add    ecx,DWORD PTR ds:0x428e9d
  41eaf6:	dec    ecx
  41eaf7:	mov    DWORD PTR ds:0x428e9d,ecx
  41eafd:	jmp    0x41eaac
  41eb02:	mov    ds:0x4281e9,eax
  41eb07:	sbb    eax,eax
  41eb09:	mov    eax,DWORD PTR [ebp+0x10]
  41eb0c:	mov    ds:0x428445,eax
  41eb11:	mov    eax,ds:0x4281e9
  41eb16:	mov    ecx,DWORD PTR [esp+0x30]
  41eb1a:	dec    DWORD PTR ds:0x428e99
  41eb20:	sub    eax,ebx
  41eb22:	xor    eax,esi
  41eb24:	mov    DWORD PTR ds:0x428e99,0x6c0e
  41eb2e:	mov    DWORD PTR [ecx],eax
  41eb30:	lea    eax,[esp+0x24]
  41eb34:	mov    DWORD PTR ds:0x428ea5,0x17d
  41eb3e:	mov    DWORD PTR [esp+0x44],eax
  41eb42:	lea    eax,[ebp+0x4]
  41eb45:	mov    DWORD PTR ds:0x428ec5,0x4441
  41eb4f:	mov    DWORD PTR [esp+0x24],eax
  41eb53:	mov    al,ds:0x42857e
  41eb58:	mov    DWORD PTR ds:0x428e49,0x46bb
  41eb62:	cmp    al,BYTE PTR ds:0x42858b
  41eb68:	jne    0x41e428
  41eb6e:	mov    al,ds:0x428597
  41eb73:	mov    DWORD PTR ds:0x428eb1,0x61de
  41eb7d:	cmp    al,BYTE PTR ds:0x4285a8
  41eb83:	mov    DWORD PTR ds:0x428e71,0x1a2b
  41eb8d:	jne    0x41e428
  41eb93:	push   0x4285b1
  41eb98:	sbb    DWORD PTR ds:0x428e8d,0x428e79
  41eba2:	push   0x4285bd
  41eba7:	sbb    DWORD PTR ds:0x428e75,0x428e6d
  41ebb1:	call   edi
  41ebb3:	or     DWORD PTR ds:0x428e9d,0x2f2b
  41ebbd:	test   eax,eax
  41ebbf:	je     0x41e428
  41ebc5:	mov    DWORD PTR ds:0x428ec5,0x7907
  41ebcf:	mov    al,ds:0x4285ce
  41ebd4:	cmp    al,BYTE PTR ds:0x4285db
  41ebda:	mov    DWORD PTR ds:0x428e5d,0x5f7d
  41ebe4:	jne    0x41e428
  41ebea:	mov    DWORD PTR ds:0x428e3d,0x1797
  41ebf4:	mov    al,ds:0x4285e7
  41ebf9:	cmp    al,BYTE PTR ds:0x4285f8
  41ebff:	jne    0x41e428
  41ec05:	add    DWORD PTR ds:0x428ec1,0x428ead
  41ec0f:	push   0x428601
  41ec14:	push   0x42860d
  41ec19:	call   edi
  41ec1b:	test   eax,eax
  41ec1d:	mov    DWORD PTR ds:0x428e69,0x333a
  41ec27:	je     0x41e428
  41ec2d:	mov    al,ds:0x42861e
  41ec32:	cmp    al,BYTE PTR ds:0x42862b
  41ec38:	mov    DWORD PTR ds:0x428e65,0x2ea7
  41ec42:	jne    0x41e428
  41ec48:	mov    DWORD PTR ds:0x428e85,0x19a
  41ec52:	mov    al,ds:0x428637
  41ec57:	mov    DWORD PTR ds:0x428ec5,0xb46
  41ec61:	cmp    al,BYTE PTR ds:0x428648
  41ec67:	mov    DWORD PTR ds:0x428e91,0x2cce
  41ec71:	jne    0x41e428
  41ec77:	push   0x428651
  41ec7c:	add    DWORD PTR ds:0x428eb1,0x428ea5
  41ec86:	push   0x42865d
  41ec8b:	call   edi
  41ec8d:	test   eax,eax
  41ec8f:	mov    DWORD PTR ds:0x428e7d,0x28e1
  41ec99:	je     0x41e428
  41ec9f:	mov    al,ds:0x42866e
  41eca4:	mov    DWORD PTR ds:0x428e35,0x7fda
  41ecae:	cmp    al,BYTE PTR ds:0x42867b
  41ecb4:	mov    DWORD PTR ds:0x428eb5,0x205
  41ecbe:	jne    0x41e428
  41ecc4:	mov    DWORD PTR ds:0x428ea9,0x1bc1
  41ecce:	mov    al,ds:0x428687
  41ecd3:	mov    DWORD PTR ds:0x428e31,0xcbc
  41ecdd:	cmp    al,BYTE PTR ds:0x428698
  41ece3:	jne    0x41e428
  41ece9:	xor    DWORD PTR ds:0x428e75,0x428e55
  41ecf3:	push   0x4286a1
  41ecf8:	push   0x4286ad
  41ecfd:	call   edi
  41ecff:	or     DWORD PTR ds:0x428eb9,0x1b73
  41ed09:	test   eax,eax
  41ed0b:	je     0x41e428
  41ed11:	mov    al,ds:0x4286be
  41ed16:	mov    DWORD PTR ds:0x428ebd,0x533
  41ed20:	cmp    al,BYTE PTR ds:0x4286cb
  41ed26:	mov    DWORD PTR ds:0x428eb1,0x6a19
  41ed30:	jne    0x41e428
  41ed36:	mov    DWORD PTR ds:0x428e79,0x3b4e
  41ed40:	mov    al,ds:0x4286d7
  41ed45:	mov    DWORD PTR ds:0x428e79,0x665f
  41ed4f:	cmp    al,BYTE PTR ds:0x4286e8
  41ed55:	jne    0x41e428
  41ed5b:	xor    DWORD PTR ds:0x428ead,0x43e0
  41ed65:	push   0x4286f1
  41ed6a:	push   0x4286fd
  41ed6f:	add    DWORD PTR ds:0x428eb1,0x428e79
  41ed79:	call   edi
  41ed7b:	and    DWORD PTR ds:0x428e7d,0x428e25
  41ed85:	test   eax,eax
  41ed87:	je     0x41e428
  41ed8d:	mov    al,ds:0x42870e
  41ed92:	mov    DWORD PTR ds:0x428e59,0x5b53
  41ed9c:	cmp    al,BYTE PTR ds:0x42871b
  41eda2:	jne    0x41e428
  41eda8:	mov    DWORD PTR ds:0x428e25,0x5848
  41edb2:	mov    al,ds:0x428727
  41edb7:	mov    DWORD PTR ds:0x428e75,0x6f79
  41edc1:	cmp    al,BYTE PTR ds:0x428738
  41edc7:	jne    0x41e428
  41edcd:	push   0x428741
  41edd2:	push   0x42874d
  41edd7:	call   edi
  41edd9:	sub    DWORD PTR ds:0x428e75,0x1f6e
  41ede3:	test   eax,eax
  41ede5:	je     0x41e428
  41edeb:	mov    al,ds:0x42875e
  41edf0:	mov    DWORD PTR ds:0x428ea9,0x6a75
  41edfa:	cmp    al,BYTE PTR ds:0x42876b
  41ee00:	mov    DWORD PTR ds:0x428e95,0x5296
  41ee0a:	jne    0x41e428
  41ee10:	mov    DWORD PTR ds:0x428e65,0x352f
  41ee1a:	mov    al,ds:0x428777
  41ee1f:	cmp    al,BYTE PTR ds:0x428788
  41ee25:	mov    DWORD PTR ds:0x428e39,0x65de
  41ee2f:	jne    0x41e428
  41ee35:	add    DWORD PTR ds:0x428ec5,0x39e0
  41ee3f:	push   0x428791
  41ee44:	sbb    DWORD PTR ds:0x428ec5,0x70eb
  41ee4e:	push   0x42879d
  41ee53:	add    DWORD PTR ds:0x428e75,0x6377
  41ee5d:	call   edi
  41ee5f:	test   eax,eax
  41ee61:	je     0x41e428
  41ee67:	mov    al,ds:0x4287ae
  41ee6c:	cmp    al,BYTE PTR ds:0x4287bb
  41ee72:	mov    DWORD PTR ds:0x428e75,0xc68
  41ee7c:	jne    0x41e428
  41ee82:	mov    DWORD PTR ds:0x428ea9,0x47d0
  41ee8c:	mov    al,ds:0x4287c7
  41ee91:	mov    DWORD PTR ds:0x428e35,0x2f08
  41ee9b:	cmp    al,BYTE PTR ds:0x4287d8
  41eea1:	mov    DWORD PTR ds:0x428e31,0x4709
  41eeab:	jne    0x41e428
  41eeb1:	sbb    DWORD PTR ds:0x428eb1,0x2bd9
  41eebb:	push   0x4287e1
  41eec0:	or     DWORD PTR ds:0x428e79,0x428ead
  41eeca:	push   0x4287ed
  41eecf:	adc    DWORD PTR ds:0x428ea1,0x22ee
  41eed9:	call   edi
  41eedb:	adc    DWORD PTR ds:0x428ecd,0x428ec5
  41eee5:	test   eax,eax
  41eee7:	mov    DWORD PTR ds:0x428e79,0x242c
  41eef1:	je     0x41e428
  41eef7:	mov    DWORD PTR ds:0x428e3d,0x326f
  41ef01:	mov    al,ds:0x4287fe
  41ef06:	mov    DWORD PTR ds:0x428eb9,0x8d5
  41ef10:	cmp    al,BYTE PTR ds:0x42880b
  41ef16:	mov    DWORD PTR ds:0x428e59,0x136
  41ef20:	jne    0x41e428
  41ef26:	mov    al,ds:0x428817
  41ef2b:	mov    DWORD PTR ds:0x428eb1,0x1632
  41ef35:	cmp    al,BYTE PTR ds:0x428828
  41ef3b:	mov    DWORD PTR ds:0x428e65,0x63ac
  41ef45:	jne    0x41e428
  41ef4b:	sub    DWORD PTR ds:0x428e59,0x428e31
  41ef55:	push   0x428831
  41ef5a:	push   0x42883d
  41ef5f:	mov    DWORD PTR ds:0x428e25,0x5d60
  41ef69:	call   edi
  41ef6b:	test   eax,eax
  41ef6d:	je     0x41e428
  41ef73:	mov    al,ds:0x42884e
  41ef78:	mov    DWORD PTR ds:0x428eb5,0x1dcb
  41ef82:	cmp    al,BYTE PTR ds:0x42885b
  41ef88:	mov    DWORD PTR ds:0x428eb5,0x40d0
  41ef92:	jne    0x41e428
  41ef98:	mov    al,ds:0x428867
  41ef9d:	mov    DWORD PTR ds:0x428ead,0x41e1
  41efa7:	cmp    al,BYTE PTR ds:0x428878
  41efad:	mov    DWORD PTR ds:0x428e31,0x6c07
  41efb7:	jne    0x41e428
  41efbd:	adc    DWORD PTR ds:0x428ea5,0x428ec9
  41efc7:	push   0x428881
  41efcc:	adc    DWORD PTR ds:0x428eb5,0x37c3
  41efd6:	push   0x42888d
  41efdb:	call   edi
  41efdd:	sub    DWORD PTR ds:0x428e31,0x47c0
  41efe7:	test   eax,eax
  41efe9:	mov    DWORD PTR ds:0x428e91,0x23ba
  41eff3:	je     0x41e428
  41eff9:	mov    DWORD PTR ds:0x428ea5,0x1cf7
  41f003:	mov    al,ds:0x42889e
  41f008:	mov    DWORD PTR ds:0x428e25,0x6ea3
  41f012:	cmp    al,BYTE PTR ds:0x4288ab
  41f018:	jne    0x41e428
  41f01e:	mov    DWORD PTR ds:0x428e95,0x9ed
  41f028:	mov    al,ds:0x4288b7
  41f02d:	mov    DWORD PTR ds:0x428e75,0x600
  41f037:	cmp    al,BYTE PTR ds:0x4288c8
  41f03d:	mov    DWORD PTR ds:0x428ead,0x4d3e
  41f047:	jne    0x41e428
  41f04d:	push   0x4288d1
  41f052:	push   0x4288dd
  41f057:	sbb    DWORD PTR ds:0x428ebd,0x717e
  41f061:	call   edi
  41f063:	sub    DWORD PTR ds:0x428e79,0x428e69
  41f06d:	test   eax,eax
  41f06f:	je     0x41e428
  41f075:	mov    al,ds:0x4288ee
  41f07a:	cmp    al,BYTE PTR ds:0x4288fb
  41f080:	jne    0x41e428
  41f086:	mov    al,ds:0x428907
  41f08b:	cmp    al,BYTE PTR ds:0x428918
  41f091:	jne    0x41e428
  41f097:	push   0x428921
  41f09c:	push   0x42892d
  41f0a1:	call   edi
  41f0a3:	test   eax,eax
  41f0a5:	je     0x41e428
  41f0ab:	mov    al,ds:0x42893e
  41f0b0:	cmp    al,BYTE PTR ds:0x42894b
  41f0b6:	jne    0x41e428
  41f0bc:	mov    al,ds:0x428957
  41f0c1:	cmp    al,BYTE PTR ds:0x428968
  41f0c7:	jne    0x41e428
  41f0cd:	push   0x428971
  41f0d2:	push   0x42897d
  41f0d7:	call   edi
  41f0d9:	test   eax,eax
  41f0db:	je     0x41e428
  41f0e1:	mov    al,ds:0x42898e
  41f0e6:	cmp    al,BYTE PTR ds:0x42899b
  41f0ec:	jne    0x41e428
  41f0f2:	mov    al,ds:0x4289a7
  41f0f7:	cmp    al,BYTE PTR ds:0x4289b8
  41f0fd:	jne    0x41e428
  41f103:	push   0x4289c1
  41f108:	push   0x4289cd
  41f10d:	call   edi
  41f10f:	test   eax,eax
  41f111:	je     0x41e428
  41f117:	mov    al,ds:0x4289de
  41f11c:	cmp    al,BYTE PTR ds:0x4289eb
  41f122:	jne    0x41e428
  41f128:	mov    al,ds:0x4289f7
  41f12d:	cmp    al,BYTE PTR ds:0x428a08
  41f133:	jne    0x41e428
  41f139:	push   0x428a11
  41f13e:	push   0x428a1d
  41f143:	call   edi
  41f145:	test   eax,eax
  41f147:	je     0x41e428
  41f14d:	mov    al,ds:0x428a2e
  41f152:	cmp    al,BYTE PTR ds:0x428a3b
  41f158:	jne    0x41e428
  41f15e:	mov    al,ds:0x428a47
  41f163:	cmp    al,BYTE PTR ds:0x428a58
  41f169:	jne    0x41e428
  41f16f:	push   0x428a61
  41f174:	push   0x428a6d
  41f179:	call   edi
  41f17b:	test   eax,eax
  41f17d:	je     0x41e428
  41f183:	mov    al,ds:0x428a7e
  41f188:	cmp    al,BYTE PTR ds:0x428a8b
  41f18e:	jne    0x41e428
  41f194:	mov    al,ds:0x428a97
  41f199:	cmp    al,BYTE PTR ds:0x428aa8
  41f19f:	jne    0x41e428
  41f1a5:	push   0x428ab1
  41f1aa:	push   0x428abd
  41f1af:	call   edi
  41f1b1:	test   eax,eax
  41f1b3:	je     0x41e428
  41f1b9:	mov    al,ds:0x428ace
  41f1be:	cmp    al,BYTE PTR ds:0x428adb
  41f1c4:	jne    0x41e428
  41f1ca:	mov    al,ds:0x428ae7
  41f1cf:	cmp    al,BYTE PTR ds:0x428af8
  41f1d5:	jne    0x41e428
  41f1db:	push   0x428b01
  41f1e0:	push   0x428b0d
  41f1e5:	call   edi
  41f1e7:	test   eax,eax
  41f1e9:	je     0x41e428
  41f1ef:	mov    al,ds:0x428b1e
  41f1f4:	cmp    al,BYTE PTR ds:0x428b2b
  41f1fa:	jne    0x41e428
  41f200:	mov    al,ds:0x428b37
  41f205:	cmp    al,BYTE PTR ds:0x428b48
  41f20b:	jne    0x41e428
  41f211:	push   0x428b51
  41f216:	push   0x428b5d
  41f21b:	call   edi
  41f21d:	test   eax,eax
  41f21f:	je     0x41e428
  41f225:	mov    al,ds:0x428b6e
  41f22a:	cmp    al,BYTE PTR ds:0x428b7b
  41f230:	jne    0x41e428
  41f236:	mov    al,ds:0x428b87
  41f23b:	cmp    al,BYTE PTR ds:0x428b98
  41f241:	jne    0x41e428
  41f247:	push   0x428ba1
  41f24c:	push   0x428bad
  41f251:	call   edi
  41f253:	test   eax,eax
  41f255:	je     0x41e428
  41f25b:	mov    al,ds:0x428bbe
  41f260:	cmp    al,BYTE PTR ds:0x428bcb
  41f266:	jne    0x41e428
  41f26c:	mov    al,ds:0x428bd7
  41f271:	cmp    al,BYTE PTR ds:0x428be8
  41f277:	jne    0x41e428
  41f27d:	push   0x428bf1
  41f282:	push   0x428bfd
  41f287:	call   edi
  41f289:	test   eax,eax
  41f28b:	je     0x41e428
  41f291:	mov    eax,DWORD PTR [esp+0x3c]
  41f295:	cmp    eax,0xf89c85b8
  41f29a:	je     0x41f2f9
  41f2a0:	mov    eax,DWORD PTR [esp+0x28]
  41f2a4:	mov    ecx,DWORD PTR [esp+0x38]
  41f2a8:	xor    eax,esi
  41f2aa:	add    eax,ebx
  41f2ac:	cmp    eax,ecx
  41f2ae:	je     0x41f2f9
  41f2b4:	mov    eax,ds:0x428365
  41f2b9:	mov    eax,DWORD PTR [eax+0x194]
  41f2bf:	mov    ecx,DWORD PTR [eax]
  41f2c1:	mov    eax,DWORD PTR [ecx+0x3c]
  41f2c4:	push   DWORD PTR ds:0x428445
  41f2ca:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f2ce:	push   DWORD PTR ds:0x4281e9
  41f2d4:	add    eax,ecx
  41f2d6:	mov    ecx,DWORD PTR ds:0x428365
  41f2dc:	mov    ecx,DWORD PTR [ecx+0x194]
  41f2e2:	push   DWORD PTR [ecx]
  41f2e4:	call   eax
  41f2e6:	mov    ecx,DWORD PTR ds:0x428365
  41f2ec:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f2f2:	mov    DWORD PTR [ecx],eax
  41f2f4:	jmp    0x41f4f3
  41f2f9:	mov    eax,DWORD PTR [esp+0x28]
  41f2fd:	mov    ecx,DWORD PTR [esp+0x40]
  41f301:	xor    eax,esi
  41f303:	add    eax,ebx
  41f305:	cmp    eax,ecx
  41f307:	jne    0x41f372
  41f30d:	mov    eax,DWORD PTR [esp+0x28]
  41f311:	mov    ecx,DWORD PTR ds:0x428365
  41f317:	mov    ecx,DWORD PTR [ecx+0x198]
  41f31d:	xor    eax,esi
  41f31f:	add    eax,ebx
  41f321:	cmp    eax,DWORD PTR [ecx]
  41f323:	jne    0x41f34b
  41f329:	mov    eax,DWORD PTR [esp+0x28]
  41f32d:	push   0xffffffff
  41f32f:	push   0x70941f8a
  41f334:	xor    eax,esi
  41f336:	add    eax,ebx
  41f338:	push   eax
  41f339:	push   0xf89c85bd
  41f33e:	push   DWORD PTR [esp+0x1c]
  41f342:	push   DWORD PTR [esp+0x3c]
  41f346:	call   0x417181
  41f34b:	push   DWORD PTR [esp+0xc]
  41f34f:	push   DWORD PTR [esp+0x2c]
  41f353:	call   0x401000
  41f358:	mov    eax,DWORD PTR [esp+0x28]
  41f35c:	xor    eax,esi
  41f35e:	add    eax,ebx
  41f360:	mov    ds:0x4283f1,eax
  41f365:	mov    eax,DWORD PTR [esp+0x28]
  41f369:	xor    eax,esi
  41f36b:	add    eax,ebx
  41f36d:	mov    ds:0x4283e9,eax
  41f372:	mov    eax,DWORD PTR [esp+0x24]
  41f376:	test   eax,eax
  41f378:	je     0x41f4f3
  41f37e:	mov    DWORD PTR [esp+0x4c],0xf152c20
  41f386:	mov    DWORD PTR [esp+0x54],0x712edcf
  41f38e:	mov    DWORD PTR [esp+0x48],0x373fc11
  41f396:	mov    DWORD PTR [esp+0x50],0x72670ac1
  41f39e:	call   0x414ac6
  41f3a3:	mov    eax,DWORD PTR [esp+0x34]
  41f3a7:	mov    eax,DWORD PTR [esp+0xc]
  41f3ab:	mov    DWORD PTR [esp+0x30],eax
  41f3af:	mov    eax,DWORD PTR [esp+0x28]
  41f3b3:	mov    DWORD PTR [esp+0xc],eax
  41f3b7:	mov    eax,eax
  41f3b9:	mov    eax,ds:0x428365
  41f3be:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f3c4:	mov    edx,DWORD PTR [ecx]
  41f3c6:	and    DWORD PTR [esp+0x14],0x0
  41f3cb:	mov    edi,0xfabdbecf
  41f3d0:	add    edx,edi
  41f3d2:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f3d7:	mov    ecx,0x8a29a145
  41f3dc:	xor    edx,ecx
  41f3de:	mov    DWORD PTR [esp+0x18],edx
  41f3e2:	mov    edx,DWORD PTR [esp+0x14]
  41f3e6:	xor    edx,0x0
  41f3e9:	cmp    DWORD PTR [esp+0x18],0x70941f95
  41f3f1:	mov    DWORD PTR [esp+0x1c],edx
  41f3f5:	jne    0x41f427
  41f3fb:	cmp    edx,0xffffffff
  41f3fe:	jne    0x41f427
  41f404:	mov    eax,ds:0x4283e9
  41f409:	mov    edx,DWORD PTR ds:0x4283f1
  41f40f:	xor    eax,edx
  41f411:	mov    ds:0x4283e9,eax
  41f416:	mov    edx,DWORD PTR ds:0x4283e9
  41f41c:	mov    eax,DWORD PTR [esp+0x24]
  41f420:	add    DWORD PTR [eax],edx
  41f422:	jmp    0x41f4b4
  41f427:	mov    eax,DWORD PTR [eax+0x1c8]
  41f42d:	mov    eax,DWORD PTR [eax]
  41f42f:	cdq    
  41f430:	add    eax,edi
  41f432:	adc    edx,0xffffffff
  41f435:	and    DWORD PTR [esp+0x14],0x0
  41f43a:	xor    edx,0x0
  41f43d:	mov    DWORD PTR [esp+0x2c],edx
  41f441:	mov    edx,DWORD PTR [esp+0xc]
  41f445:	mov    DWORD PTR [esp+0x10],edx
  41f449:	xor    eax,ecx
  41f44b:	add    DWORD PTR [esp+0x10],edi
  41f44f:	mov    edx,DWORD PTR [esp+0x10]
  41f453:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f458:	xor    edx,ecx
  41f45a:	mov    DWORD PTR [esp+0x18],edx
  41f45e:	mov    edx,DWORD PTR [esp+0x14]
  41f462:	xor    edx,0x0
  41f465:	mov    DWORD PTR [esp+0x1c],edx
  41f469:	cmp    DWORD PTR [esp+0x18],eax
  41f46d:	jne    0x41f47f
  41f473:	mov    eax,DWORD PTR [esp+0x2c]
  41f477:	cmp    edx,eax
  41f479:	je     0x41f490
  41f47f:	mov    eax,DWORD PTR [esp+0xc]
  41f483:	add    eax,DWORD PTR [esp+0x30]
  41f487:	mov    DWORD PTR [esp+0xc],eax
  41f48b:	jmp    0x41f4f3
  41f490:	mov    eax,ds:0x4283e9
  41f495:	mov    edx,DWORD PTR ds:0x4283f1
  41f49b:	xor    eax,edx
  41f49d:	mov    ds:0x4283e9,eax
  41f4a2:	mov    eax,DWORD PTR [esp+0x24]
  41f4a6:	mov    edx,DWORD PTR ds:0x4283e9
  41f4ac:	add    edx,DWORD PTR [eax]
  41f4ae:	mov    eax,DWORD PTR [esp+0x24]
  41f4b2:	mov    DWORD PTR [eax],edx
  41f4b4:	mov    edx,DWORD PTR [esp+0xc]
  41f4b8:	mov    eax,ds:0x4283e9
  41f4bd:	xor    edx,esi
  41f4bf:	add    edx,ebx
  41f4c1:	xor    ebx,ebx
  41f4c3:	add    edx,edi
  41f4c5:	adc    ebx,0xffffffff
  41f4c8:	xor    esi,esi
  41f4ca:	xor    edx,ecx
  41f4cc:	xor    ebx,0x0
  41f4cf:	add    eax,edi
  41f4d1:	adc    esi,0xffffffff
  41f4d4:	xor    eax,ecx
  41f4d6:	xor    esi,0x0
  41f4d9:	cmp    eax,edx
  41f4db:	jne    0x41f4f3
  41f4e1:	cmp    esi,ebx
  41f4e3:	jne    0x41f4f3
  41f4e9:	mov    eax,ds:0x4283e9
  41f4ee:	mov    ds:0x4283f1,eax
  41f4f3:	mov    eax,ds:0x428365
  41f4f8:	push   0x4
  41f4fa:	add    eax,0x1cc
  41f4ff:	push   eax
  41f500:	lea    eax,[esp+0x3c]
  41f504:	push   eax
  41f505:	call   0x41f519
  41f50a:	mov    eax,DWORD PTR [esp+0x34]
  41f50e:	mov    eax,DWORD PTR [eax]
  41f510:	pop    edi
  41f511:	pop    esi
  41f512:	pop    ebx
  41f513:	mov    esp,ebp
  41f515:	pop    ebp
  41f516:	ret    0xc
  41f519:	push   ebp
  41f51a:	mov    ebp,esp
  41f51c:	sub    esp,0x10
  41f51f:	mov    DWORD PTR ds:0x428e69,0x19
  41f529:	cmp    DWORD PTR ds:0x428e69,0x0
  41f530:	je     0x41f565
  41f536:	cmp    DWORD PTR ds:0x428e69,0x1f
  41f53d:	jge    0x41f565
  41f543:	jmp    0x41f553
  41f548:	push   0x4280ab
  41f54d:	call   DWORD PTR ds:0x42ca30
  41f553:	mov    edx,DWORD PTR ds:0x428e69
  41f559:	dec    edx
  41f55a:	mov    DWORD PTR ds:0x428e69,edx
  41f560:	jmp    0x41f529
  41f565:	mov    eax,0xf89c85b9
  41f56a:	mov    DWORD PTR [ebp-0x4],eax
  41f56d:	or     ecx,edx
  41f56f:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41f576:	sbb    DWORD PTR ds:0x428e35,ecx
  41f57c:	mov    ecx,DWORD PTR [ebp-0x4]
  41f57f:	sbb    DWORD PTR ds:0x428e95,edi
  41f585:	push   esi
  41f586:	mov    edx,0x75108b1
  41f58b:	inc    DWORD PTR ds:0x428e49
  41f591:	xor    ecx,edx
  41f593:	sub    DWORD PTR ds:0x428ed1,edx
  41f599:	mov    esi,0x3272f8
  41f59e:	adc    DWORD PTR ds:0x428e41,0x428e31
  41f5a8:	push   edi
  41f5a9:	mov    edi,DWORD PTR [ebp+0x10]
  41f5ac:	xor    DWORD PTR ds:0x428e7d,0x428e91
  41f5b6:	add    ecx,esi
  41f5b8:	mov    DWORD PTR ds:0x428e59,0x285e
  41f5c2:	cmp    ecx,edi
  41f5c4:	je     0x423f13
  41f5ca:	and    DWORD PTR ds:0x428ec9,0x0
  41f5d4:	xor    ecx,ecx
  41f5d6:	add    ecx,DWORD PTR ds:0x428ec9
  41f5dc:	inc    ecx
  41f5dd:	mov    DWORD PTR ds:0x428ec9,ecx
  41f5e3:	cmp    DWORD PTR ds:0x428ec9,0x4
  41f5ea:	ja     0x41f629
  41f5f0:	jmp    0x41f600
  41f5f5:	push   0x5d76
  41f5fa:	call   DWORD PTR ds:0x42ca38
  41f600:	cmp    DWORD PTR ds:0x428ec9,0x3
  41f607:	jne    0x41f61c
  41f60d:	xor    ecx,ecx
  41f60f:	or     ecx,DWORD PTR ds:0x428ec9
  41f615:	inc    ecx
  41f616:	mov    DWORD PTR ds:0x428ec9,ecx
  41f61c:	cmp    DWORD PTR ds:0x428ec9,0x1c
  41f623:	jb     0x41f5d4
  41f629:	mov    ecx,DWORD PTR [ebp-0x4]
  41f62c:	xor    edi,edi
  41f62e:	xor    edi,DWORD PTR ds:0x428e39
  41f634:	or     DWORD PTR ds:0x428e25,edi
  41f63a:	mov    edi,DWORD PTR [ebp+0x10]
  41f63d:	and    DWORD PTR ds:0x428e55,0x428e29
  41f647:	xor    eax,eax
  41f649:	add    DWORD PTR ds:0x428e91,0x4be1
  41f653:	xor    ecx,edx
  41f655:	adc    DWORD PTR ds:0x428e81,0x428e69
  41f65f:	add    ecx,esi
  41f661:	add    edi,0xfabdbecf
  41f667:	adc    eax,0xffffffff
  41f66a:	and    DWORD PTR ds:0x428e39,0x428ec1
  41f674:	xor    eax,0x0
  41f677:	xor    DWORD PTR ds:0x428e75,0x428e29
  41f681:	mov    DWORD PTR [ebp-0xc],eax
  41f684:	push   ebx
  41f685:	xor    ebx,ebx
  41f687:	and    DWORD PTR ds:0x428ea1,0x0
  41f691:	jmp    0x41f6a4
  41f696:	xor    eax,eax
  41f698:	xor    eax,DWORD PTR ds:0x428ea1
  41f69e:	inc    eax
  41f69f:	mov    ds:0x428ea1,eax
  41f6a4:	cmp    DWORD PTR ds:0x428ea1,0x14
  41f6ab:	jae    0x41f6f4
  41f6b1:	cmp    DWORD PTR ds:0x428ea1,0xa
  41f6b8:	jle    0x41f6f4
  41f6be:	jmp    0x41f6d7
  41f6c3:	push   DWORD PTR [ebp-0x14]
  41f6c6:	push   DWORD PTR [ebp-0xc]
  41f6c9:	push   0x22e9
  41f6ce:	push   DWORD PTR [ebp-0x18]
  41f6d1:	call   DWORD PTR ds:0x42ca3c
  41f6d7:	cmp    DWORD PTR ds:0x428ea1,0x9
  41f6de:	jne    0x41f6ef
  41f6e4:	mov    eax,ds:0x428ea1
  41f6e9:	inc    eax
  41f6ea:	mov    ds:0x428ea1,eax
  41f6ef:	jmp    0x41f696
  41f6f4:	xor    edi,0x8a29a145
  41f6fa:	mov    eax,ecx
  41f6fc:	add    eax,0xfabdbecf
  41f701:	adc    ebx,0xffffffff
  41f704:	xor    eax,0x8a29a145
  41f709:	xor    ebx,0x0
  41f70c:	cmp    eax,edi
  41f70e:	jmp    0x421acd
  41f713:	pop    ebx
  41f714:	popf   
  41f715:	cwde   
  41f716:	jo     0x41f772
  41f718:	jp     0x41f77d
  41f71a:	mov    dl,0xe1
  41f71c:	cmp    eax,0x59a40de9
  41f721:	imul   edi,DWORD PTR [ebx],0xffffff81
  41f724:	and    al,0x7c
  41f726:	jnp    0x41f745
  41f728:	sahf   
  41f729:	jnp    0x41f7a6
  41f72b:	or     DWORD PTR [edx+0x560ae458],0xfc3818ef
  41f735:	and    DWORD PTR [edx],ecx
  41f737:	inc    eax
  41f738:	cmp    DWORD PTR [eax],eax
  41f73a:	add    BYTE PTR [ecx-0x18],0x1c
  41f73e:	mov    ebx,0x46d9241b
  41f743:	mov    DWORD PTR [ebp+0x21],edi
  41f746:	or     cl,BYTE PTR [ebp+esi*4-0x64]
  41f74a:	fisttp DWORD PTR [ebx+0x4358b53a]
  41f750:	dec    edi
  41f751:	sub    esi,ecx
  41f753:	sbb    ch,dh
  41f755:	scas   eax,DWORD PTR es:[edi]
  41f756:	ds push cs
  41f758:	jmp    0x5862d4ee
  41f75d:	add    al,0xb9
  41f75f:	inc    edi
  41f760:	lahf   
  41f761:	push   eax
  41f762:	cmp    edx,DWORD PTR [ebp+0x2b]
  41f765:	fild   QWORD PTR [ebx]
  41f767:	xlat   BYTE PTR ds:[ebx]
  41f768:	lock inc esp
  41f76a:	lea    ebp,[ebp+0x27f5998a]
  41f770:	cmp    eax,0xc70fd9be
  41f775:	cli    
  41f776:	popf   
  41f777:	iret   
  41f778:	icebp  
  41f779:	mov    ds:0x95cee46d,eax
  41f77e:	cmp    bl,al
  41f780:	arpl   cx,bp
  41f782:	sbb    ebp,DWORD PTR [ecx-0x2739e328]
  41f788:	pop    ds
  41f789:	cld    
  41f78a:	jmp    0x79db:0x1ae9059c
  41f791:	arpl   WORD PTR [esi-0x6c],bx
  41f794:	jmp    0x41f802
  41f796:	sub    DWORD PTR [eax],0x5b
  41f799:	push   0xffffffd4
  41f79b:	xor    ebx,DWORD PTR [ecx]
  41f79d:	cdq    
  41f79e:	test   al,0x87
  41f7a0:	retf   
  41f7a1:	fisttp DWORD PTR [ebx-0x8d081cb]
  41f7a7:	loope  0x41f7e0
  41f7a9:	add    eax,0x6c154948
  41f7ae:	test   DWORD PTR [edi-0x50],eax
  41f7b1:	xchg   DWORD PTR [ebp-0x51],eax
  41f7b4:	pop    ebx
  41f7b5:	lea    edi,[ecx]
  41f7b7:	add    al,BYTE PTR [edx-0x1dcbe0b6]
  41f7bd:	or     eax,0x10fc08be
  41f7c2:	ret    0x1523
  41f7c5:	or     DWORD PTR [ebp+0x5],esi
  41f7c8:	int    0x35
  41f7ca:	pop    edx
  41f7cb:	call   0x74f9ab8
  41f7d0:	jbe    0x41f813
  41f7d2:	data16 sub BYTE PTR [ebx],bh
  41f7d5:	ficom  WORD PTR [eax+0x63317589]
  41f7db:	ja     0x41f7ff
  41f7dd:	jo     0x41f7ca
  41f7df:	loop   0x41f811
  41f7e1:	push   esi
  41f7e2:	or     al,0xf3
  41f7e4:	sahf   
  41f7e5:	retf   0x6675
  41f7e8:	cmp    DWORD PTR [esi-0x1e],edx
  41f7eb:	pop    ecx
  41f7ec:	push   cs
  41f7ed:	jmp    0x2950:0x208e55ad
  41f7f4:	pop    ebx
  41f7f5:	adc    BYTE PTR [esi+0x554465a4],ch
  41f7fb:	pop    eax
  41f7fc:	and    BYTE PTR [edx-0x77],ah
  41f7ff:	sbb    eax,0x5b301d14
  41f804:	out    0x81,al
  41f806:	imul   eax,DWORD PTR [ebx],0xc9aa7c99
  41f80c:	jl     0x41f7ca
  41f80e:	push   cs
  41f80f:	jmp    0x2e66cb3c
  41f814:	icebp  
  41f815:	xchg   ebp,eax
  41f816:	test   DWORD PTR [edx+0x6d],esi
  41f819:	mov    bh,ch
  41f81b:	sbb    dl,BYTE PTR [edi-0x54308a05]
  41f821:	(bad)  
  41f822:	fld    QWORD PTR [eax]
  41f824:	dec    edi
  41f825:	jmp    0x448d3f3d
  41f82a:	or     dl,BYTE PTR [ebp-0x3c]
  41f82d:	add    al,BYTE PTR [ebp+0x7a4ca801]
  41f833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f834:	mov    BYTE PTR [ecx],dl
  41f836:	inc    sp
  41f838:	mov    ss,WORD PTR [esi]
  41f83a:	sbb    BYTE PTR [edx+0x68],cl
  41f83d:	or     DWORD PTR [edx-0x239b8303],esi
  41f843:	test   DWORD PTR [eax+ebx*2+0x33],ebp
  41f847:	dec    edx
  41f848:	daa    
  41f849:	and    ch,BYTE PTR [ebx+0x6313fa9a]
  41f84f:	pop    edi
  41f850:	aaa    
  41f851:	aam    0x9e
  41f853:	int3   
  41f854:	jae    0x41f828
  41f856:	or     DWORD PTR [ecx-0x3a],edx
  41f859:	js     0x41f8ad
  41f85b:	stos   DWORD PTR es:[edi],eax
  41f85c:	or     al,0x59
  41f85e:	or     al,0x4d
  41f860:	dec    eax
  41f861:	mov    al,ds:0xfc8946f7
  41f866:	mov    al,ds:0x88f50b1b
  41f86b:	and    ebx,ebp
  41f86d:	test   eax,0x4275e948
  41f872:	xchg   BYTE PTR [edx],bh
  41f874:	cmp    ebp,DWORD PTR [edi+0x1a]
  41f877:	push   ss
  41f878:	cwde   
  41f879:	add    edx,0x1
  41f87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f87d:	int    0x54
  41f87f:	xchg   BYTE PTR [eax+ecx*8],dl
  41f882:	mov    ebp,0x8683af07
  41f887:	adc    edi,esi
  41f889:	sahf   
  41f88a:	in     al,dx
  41f88b:	jno    0x41f86b
  41f88d:	adc    DWORD PTR [ebx],0x3d
  41f890:	(bad)  
  41f891:	mov    ds:0xf8b812ec,al
  41f896:	hlt    
  41f897:	aam    0xbe
  41f899:	arpl   WORD PTR [ecx],cx
  41f89b:	repnz call 0xc2c6:0xb386c1ce
  41f8a3:	dec    eax
  41f8a4:	jmp    0x41f830
  41f8a6:	sbb    eax,DWORD PTR [edx+0x21f509c7]
  41f8ac:	or     al,0x72
  41f8ae:	cdq    
  41f8af:	sahf   
  41f8b0:	jno    0x41f836
  41f8b2:	fnstsw WORD PTR [eax]
  41f8b4:	gs sahf 
  41f8b6:	push   0xffffff8b
  41f8b8:	fnclex 
  41f8ba:	leave  
  41f8bb:	adc    BYTE PTR [edx],bh
  41f8bd:	icebp  
  41f8be:	jbe    0x41f907
  41f8c0:	popa   
  41f8c1:	xor    BYTE PTR [ebp-0xb],0x76
  41f8c5:	xchg   ecx,eax
  41f8c6:	pop    eax
  41f8c7:	(bad)  
  41f8c8:	push   esi
  41f8c9:	leave  
  41f8ca:	jno    0x41f868
  41f8cc:	ins    DWORD PTR es:[edi],dx
  41f8cd:	inc    ebp
  41f8ce:	(bad)  [eax+0x7b]
  41f8d1:	imul   ebp,ebx,0x1
  41f8d4:	jl     0x41f896
  41f8d6:	into   
  41f8d7:	leave  
  41f8d8:	aas    
  41f8d9:	mov    ebp,0xa91317bb
  41f8de:	in     eax,dx
  41f8df:	int3   
  41f8e0:	dec    edi
  41f8e1:	ret    0x65b7
  41f8e4:	js     0x41f942
  41f8e6:	adc    DWORD PTR [ebx+0x5151550f],esi
  41f8ec:	into   
  41f8ed:	jmp    0x41f95c
  41f8ef:	jno    0x41f8ae
  41f8f1:	jecxz  0x41f905
  41f8f3:	pop    es
  41f8f4:	aad    0x21
  41f8f6:	ja     0x41f8eb
  41f8f8:	sti    
  41f8f9:	test   DWORD PTR [esi-0x7a],esp
  41f8fc:	sub    al,0xce
  41f8fe:	push   esp
  41f8ff:	mov    dh,0xcf
  41f901:	sub    edx,DWORD PTR [esi+eiz*1-0x215e3ee5]
  41f908:	shl    DWORD PTR [ebp-0x5f],0xaf
  41f90c:	cmp    al,0x70
  41f90e:	xchg   edi,eax
  41f90f:	sbb    DWORD PTR [edx+0x4c84d6aa],esp
  41f915:	jge    0x41f91c
  41f917:	cmp    DWORD PTR [edi+0x29c069fb],eax
  41f91d:	mov    bl,0x85
  41f91f:	(bad)  
  41f920:	pop    ebp
  41f921:	sbb    ah,BYTE PTR [ebp+0x566e695a]
  41f927:	and    al,BYTE PTR [edx+0x6fb4c8ef]
  41f92d:	inc    esp
  41f92e:	pushf  
  41f92f:	dec    ebx
  41f930:	lods   al,BYTE PTR ds:[esi]
  41f931:	test   DWORD PTR es:[ecx-0x78a8603],ecx
  41f938:	xlat   BYTE PTR ds:[ebx]
  41f939:	xor    al,0xee
  41f93b:	rcl    DWORD PTR [edi+0x75],1
  41f93e:	jecxz  0x41f912
  41f940:	sub    al,al
  41f942:	add    al,0xbf
  41f944:	mov    dh,0x4c
  41f946:	ins    DWORD PTR es:[edi],dx
  41f947:	push   DWORD PTR [edx+eax*4]
  41f94a:	sbb    DWORD PTR [edx-0x5d],ebx
  41f94d:	sub    al,BYTE PTR [edi-0x75c3d1d9]
  41f953:	in     eax,0xeb
  41f955:	rcl    DWORD PTR [eax],0x5
  41f958:	push   ecx
  41f959:	mov    ecx,0x61a12b35
  41f95e:	sahf   
  41f95f:	dec    ecx
  41f960:	mov    WORD PTR [edx],?
  41f962:	lods   al,BYTE PTR ds:[esi]
  41f963:	mov    dl,0xa
  41f965:	inc    edx
  41f966:	mov    ds:0xf2fa3aa9,eax
  41f96b:	clc    
  41f96c:	mov    eax,0x827aa61d
  41f971:	push   0xa2f92745
  41f976:	ror    DWORD PTR [eax],cl
  41f978:	dec    edx
  41f979:	clc    
  41f97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f97b:	push   eax
  41f97c:	icebp  
  41f97d:	xchg   edi,eax
  41f97e:	jae    0x41f9d9
  41f980:	cmp    DWORD PTR [edi-0x25c11349],0xf0eb1234
  41f98a:	xchg   BYTE PTR [edi-0x372a3921],bl
  41f990:	xchg   ecx,eax
  41f991:	rep stos BYTE PTR es:[edi],al
  41f993:	icebp  
  41f994:	ret    0xaf64
  41f997:	inc    ebp
  41f998:	sahf   
  41f999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99a:	pop    esp
  41f99b:	jmp    0xcb0c3a33
  41f9a0:	push   ecx
  41f9a1:	lahf   
  41f9a2:	mov    al,ds:0x91dafb82
  41f9a7:	or     al,0xdb
  41f9a9:	fimul  DWORD PTR [ebx-0x2239bd26]
  41f9af:	ins    BYTE PTR es:[edi],dx
  41f9b0:	cs stos DWORD PTR es:[edi],eax
  41f9b2:	push   ecx
  41f9b3:	aam    0x97
  41f9b5:	sub    DWORD PTR [esi+0x1d],esp
  41f9b8:	push   ds
  41f9b9:	mul    BYTE PTR [eax-0x75]
  41f9bc:	mov    ch,0x7e
  41f9be:	and    eax,0xf9608a33
  41f9c3:	pop    ebx
  41f9c4:	(bad)
  41f9c7:	test   BYTE PTR [ecx-0x38],dl
  41f9ca:	out    0x9f,al
  41f9cc:	cmp    ch,BYTE PTR ds:0xf3abc0ac
  41f9d2:	hlt    
  41f9d3:	jge    0x41f9a7
  41f9d5:	cmc    
  41f9d6:	pop    esp
  41f9d7:	pop    ss
  41f9d8:	(bad)  
  41f9d9:	popa   
  41f9da:	xor    cl,BYTE PTR [edi]
  41f9dc:	xchg   edx,eax
  41f9dd:	call   0x9b0b1c10
  41f9e2:	or     ecx,DWORD PTR ds:0xff85f95c
  41f9e8:	retf   
  41f9e9:	dec    esp
  41f9ea:	ss fs dec ebx
  41f9ed:	les    esp,FWORD PTR [edi+0x33]
  41f9f0:	retf   0x2103
  41f9f3:	jmp    0xfeb34dab
  41f9f8:	call   0x731c:0x91428989
  41f9ff:	rcr    bl,0xed
  41fa02:	pushf  
  41fa03:	fwait
  41fa04:	lahf   
  41fa05:	retf   0xf589
  41fa08:	jp     0x41f994
  41fa0a:	popa   
  41fa0b:	lea    ebp,[edi+eiz*1]
  41fa0e:	adc    DWORD PTR [esp+esi*4],0xffffff86
  41fa12:	dec    edx
  41fa13:	xor    ecx,DWORD PTR [ebp+0x63eba054]
  41fa19:	das    
  41fa1a:	lods   eax,DWORD PTR ds:[esi]
  41fa1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa1c:	repnz test al,0x9e
  41fa20:	sbb    bl,BYTE PTR [ebp-0x71]
  41fa23:	mov    edx,0xf4f54746
  41fa28:	xor    esp,esi
  41fa2a:	and    ebx,DWORD PTR [eax-0x10]
  41fa2d:	bound  esp,QWORD PTR [eax+ebx*4]
  41fa30:	sbb    BYTE PTR [esi+0xbaa8712],0xde
  41fa37:	outs   dx,BYTE PTR ds:[esi]
  41fa38:	test   DWORD PTR [eax-0x3c65278a],0xa69f7080
  41fa42:	mov    cl,0xef
  41fa44:	sar    DWORD PTR [esi-0x1fa3271d],1
  41fa4a:	or     bh,BYTE PTR [ecx]
  41fa4c:	or     al,0x6c
  41fa4e:	pop    eax
  41fa4f:	mov    bh,0xe
  41fa51:	mov    esp,?
  41fa53:	cs cld 
  41fa55:	inc    esp
  41fa56:	xchg   edx,eax
  41fa57:	push   0x2545ced7
  41fa5c:	lods   eax,DWORD PTR ds:[esi]
  41fa5d:	push   eax
  41fa5e:	test   DWORD PTR [eax+0x8],ebp
  41fa61:	fwait
  41fa62:	dec    ebx
  41fa63:	wrmsr  
  41fa65:	push   cs
  41fa66:	jl     0x41faad
  41fa68:	shr    BYTE PTR [edx-0x5923bb1f],cl
  41fa6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa6f:	and    dh,dh
  41fa71:	idiv   bh
  41fa73:	loopne 0x41fa19
  41fa75:	mov    edi,0xca754479
  41fa7a:	pop    esi
  41fa7b:	inc    eax
  41fa7c:	jb     0x41fac1
  41fa7e:	adc    ah,BYTE PTR [eax+0x63]
  41fa81:	push   cs
  41fa82:	adc    al,0xa3
  41fa84:	adc    BYTE PTR [eax+0x8],cl
  41fa87:	imul   eax,DWORD PTR [eax+0x6539f1a3],0x23
  41fa8e:	jl     0x41faee
  41fa90:	data16 and dl,0x23
  41fa94:	ja     0x41fa69
  41fa96:	xchg   ebx,eax
  41fa97:	(bad)  
  41fa98:	lods   eax,DWORD PTR ds:[esi]
  41fa99:	pop    ss
  41fa9a:	cwde   
  41fa9b:	inc    edx
  41fa9c:	adc    DWORD PTR ds:0x30bcc745,edi
  41faa2:	sbb    eax,eax
  41faa4:	sti    
  41faa5:	sbb    al,0xfa
  41faa7:	adc    eax,edx
  41faa9:	outs   dx,BYTE PTR ds:[esi]
  41faaa:	add    dl,BYTE PTR [ecx-0x31]
  41faad:	test   eax,0x465cb3aa
  41fab2:	test   BYTE PTR ds:0x3e47de21,ch
  41fab8:	outs   dx,BYTE PTR ds:[esi]
  41fab9:	imul   ecx,DWORD PTR [edx-0x3f5a8aa1],0x41
  41fac0:	shl    BYTE PTR [ebp+0x7c],cl
  41fac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fac5:	sti    
  41fac6:	jg     0x41fae8
  41fac8:	inc    edx
  41fac9:	push   es
  41faca:	test   al,0xcc
  41facc:	out    dx,al
  41facd:	xchg   DWORD PTR [edx+eiz*4],edi
  41fad0:	lahf   
  41fad1:	pop    ss
  41fad2:	jne    0x41fa70
  41fad4:	pop    ss
  41fad5:	or     BYTE PTR [ecx-0x21737b6b],dh
  41fadb:	sub    ecx,edx
  41fadd:	(bad)
  41fae2:	dec    esp
  41fae3:	rcl    BYTE PTR [eax+esi*1-0x63],0x1
  41fae8:	sub    eax,0x5e37aeca
  41faed:	mov    cl,0x8e
  41faef:	pop    esp
  41faf0:	adc    BYTE PTR [ebp-0x3],al
  41faf3:	fdivr  st(7),st
  41faf5:	mov    al,ds:0xde1fd9ed
  41fafa:	cmp    eax,0x85fdb843
  41faff:	int    0x76
  41fb01:	mov    BYTE PTR [edx],bh
  41fb03:	repz pop di
  41fb06:	out    0xc6,al
  41fb08:	jmp    0x41faf2
  41fb0a:	sub    dh,bl
  41fb0c:	mov    edi,0x7640bd1f
  41fb11:	pushf  
  41fb12:	and    al,0x8f
  41fb14:	sahf   
  41fb15:	test   BYTE PTR [ebx+0x68],cl
  41fb18:	lea    ebp,[edx+0x3240cf58]
  41fb1e:	push   0x4730da74
  41fb23:	or     bh,BYTE PTR [edi]
  41fb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb26:	pop    ss
  41fb27:	push   edx
  41fb28:	addps  xmm1,XMMWORD PTR [ebp-0x16]
  41fb2c:	addps  xmm3,XMMWORD PTR [edx]
  41fb2f:	push   ds
  41fb30:	in     eax,0xe8
  41fb32:	dec    edx
  41fb33:	mov    bh,0x81
  41fb35:	jo     0x41fb07
  41fb37:	sub    bl,BYTE PTR [ebx]
  41fb39:	fcomi  st,st(6)
  41fb3b:	repnz add ah,bh
  41fb3e:	sbb    eax,0xc405b016
  41fb43:	mov    fs,esp
  41fb45:	pop    ebx
  41fb46:	test   BYTE PTR [edi+0x69169407],ah
  41fb4c:	enter  0xb5b8,0xfc
  41fb50:	lods   al,BYTE PTR ds:[esi]
  41fb51:	fsub   DWORD PTR [ebp+0x4e]
  41fb54:	sbb    bl,dl
  41fb56:	cmp    al,0xf0
  41fb58:	call   0x52a:0x59c7ca6b
  41fb5f:	xchg   edx,eax
  41fb60:	bound  ecx,QWORD PTR [ecx]
  41fb62:	pop    ebp
  41fb63:	ror    DWORD PTR [esi+esi*1],0x87
  41fb67:	dec    edi
  41fb68:	mov    ds:0x961db404,eax
  41fb6d:	sub    eax,0xa2792ca0
  41fb72:	test   eax,0x79b9421a
  41fb77:	push   ecx
  41fb78:	xor    eax,0x85d126e9
  41fb7d:	dec    ecx
  41fb7e:	loopne 0x41fb34
  41fb80:	jns    0x41fb58
  41fb82:	out    0x86,eax
  41fb84:	icebp  
  41fb85:	daa    
  41fb86:	lea    ebx,[ebx+0x7ce68c27]
  41fb8c:	(bad)  
  41fb8d:	pusha  
  41fb8e:	sbb    edx,0xb7850815
  41fb94:	pandn  mm7,QWORD PTR [edi+0x6f8589fd]
  41fb9b:	ins    BYTE PTR es:[edi],dx
  41fb9c:	xor    esp,DWORD PTR [edi-0xf6602ff]
  41fba2:	mov    esp,0x5a610919
  41fba7:	push   eax
  41fba8:	call   0xbea476f6
  41fbad:	xchg   BYTE PTR [esi-0x469d075],cl
  41fbb3:	inc    edx
  41fbb4:	lds    esi,FWORD PTR [esi-0x37985bdc]
  41fbba:	(bad)  
  41fbbb:	push   cs
  41fbbc:	adc    eax,edi
  41fbbe:	sbb    al,0x64
  41fbc0:	jne    0x41fbbd
  41fbc2:	(bad)  
  41fbc3:	std    
  41fbc4:	mov    ah,0x22
  41fbc6:	(bad)  
  41fbc7:	mov    bl,0x4d
  41fbc9:	cld    
  41fbca:	and    al,0x1d
  41fbcc:	retf   0xf9a4
  41fbcf:	and    eax,0x32dd242e
  41fbd4:	les    edi,FWORD PTR [eax]
  41fbd6:	push   es
  41fbd7:	aam    0x31
  41fbd9:	sbb    cl,bl
  41fbdb:	mov    ebx,0xe1f32fed
  41fbe0:	es repnz in eax,0x2f
  41fbe4:	mov    dl,0xc0
  41fbe6:	cmp    DWORD PTR [esi+ecx*1-0x1ec6268b],ecx
  41fbed:	pop    ebx
  41fbee:	ins    DWORD PTR es:[edi],dx
  41fbef:	mov    ds:0x5273300c,eax
  41fbf4:	push   eax
  41fbf5:	test   BYTE PTR ds:0x5ef658ef,0x93
  41fbfc:	sub    al,0x77
  41fbfe:	xlat   BYTE PTR ds:[ebx]
  41fbff:	xchg   dh,bl
  41fc01:	jns    0x41fbd8
  41fc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc04:	inc    esp
  41fc05:	xor    BYTE PTR [ebx+ebp*2-0x394d6d29],dl
  41fc0c:	sub    cl,dl
  41fc0e:	push   cs
  41fc0f:	sbb    edx,DWORD PTR [edx-0x34]
  41fc12:	mov    ch,0xeb
  41fc14:	sbb    al,0xd6
  41fc16:	xchg   ecx,eax
  41fc17:	inc    edx
  41fc18:	cmp    BYTE PTR [esp+edi*4-0x790a04f0],ah
  41fc1f:	test   DWORD PTR [ebp-0x6d],0xcd857ad3
  41fc26:	cmc    
  41fc27:	std    
  41fc28:	xor    edx,eax
  41fc2a:	scas   eax,DWORD PTR es:[edi]
  41fc2b:	jl     0x41fc36
  41fc2d:	std    
  41fc2e:	repz hlt 
  41fc30:	loope  0x41fc41
  41fc32:	test   DWORD PTR [eax],ebp
  41fc34:	fiadd  WORD PTR [eax]
  41fc36:	enter  0xf20d,0xd2
  41fc3a:	in     al,dx
  41fc3b:	cmp    eax,0x76b7888c
  41fc40:	mov    cl,0x7c
  41fc42:	nop
  41fc43:	pop    ds
  41fc44:	xor    bl,BYTE PTR [ebp-0x70c99274]
  41fc4a:	mov    dh,0x5d
  41fc4c:	(bad)  
  41fc4d:	data16 fcomp QWORD PTR [esi]
  41fc50:	cwde   
  41fc51:	xchg   DWORD PTR [esi+ecx*2-0x3b],edx
  41fc55:	hlt    
  41fc56:	mov    eax,0x8609eae2
  41fc5b:	inc    eax
  41fc5c:	mov    DWORD PTR [ecx+edi*2],0x389c98e5
  41fc63:	push   edx
  41fc64:	cmp    eax,0xe9acc306
  41fc69:	fsubr  st,st(2)
  41fc6b:	mov    bh,0xcb
  41fc6d:	mov    ds:0x6bbb1428,eax
  41fc72:	mov    ebx,0xc711c885
  41fc77:	jnp    0x41fc2c
  41fc79:	jno    0x41fc60
  41fc7b:	fwait
  41fc7c:	test   al,0xde
  41fc7e:	jg     0x41fcc1
  41fc80:	add    al,0xfc
  41fc82:	in     al,0xa5
  41fc84:	enter  0x40b1,0x80
  41fc88:	ja     0x41fc1f
  41fc8a:	jle    0x41fc48
  41fc8c:	aam    0x1c
  41fc8e:	int3   
  41fc8f:	rcl    BYTE PTR [ecx+0x35542cb2],1
  41fc95:	mov    ds:0xda33dbb6,al
  41fc9a:	fst    st(6)
  41fc9c:	pop    eax
  41fc9d:	xor    al,0xff
  41fc9f:	push   edi
  41fca0:	rcl    BYTE PTR [ecx+edx*2],1
  41fca3:	jge    0x41fc82
  41fca5:	popa   
  41fca6:	loope  0x41fd12
  41fca8:	call   0x12fa:0xf3b38be1
  41fcaf:	sbb    ah,ah
  41fcb1:	push   esi
  41fcb2:	jne    0x41fc5e
  41fcb4:	jle    0x41fcba
  41fcb6:	push   edx
  41fcb7:	xchg   esi,eax
  41fcb8:	push   ds
  41fcb9:	mov    eax,ds:0xb9d60fbf
  41fcbe:	stos   BYTE PTR es:[edi],al
  41fcbf:	mov    ecx,0x6aca5901
  41fcc4:	out    dx,eax
  41fcc5:	shr    BYTE PTR [edx],1
  41fcc7:	(bad)  
  41fcc8:	mov    ds:0xbe47dc09,eax
  41fccd:	aas    
  41fcce:	clc    
  41fccf:	jne    0x41fce6
  41fcd1:	jo     0x41fc8b
  41fcd3:	mov    ebp,0x1df048d5
  41fcd8:	cmp    edi,DWORD PTR [edi+edi*8+0x49]
  41fcdc:	sub    DWORD PTR fs:[ecx-0x6908080a],eax
  41fce3:	jnp    0x41fd00
  41fce5:	aam    0x4b
  41fce7:	cmc    
  41fce8:	and    BYTE PTR [ebx+0x7f],cl
  41fceb:	mov    ?,WORD PTR [edi-0x51]
  41fcee:	bound  edi,QWORD PTR [eax+ecx*8-0x71]
  41fcf2:	cld    
  41fcf3:	cmp    al,BYTE PTR [edx]
  41fcf5:	xchg   ebp,eax
  41fcf6:	ret    0x61fb
  41fcf9:	rcr    DWORD PTR [ebx+eax*1+0x523a63d3],0x22
  41fd01:	cmp    al,0x3f
  41fd03:	mov    ds:0x6b5c64fe,al
  41fd08:	retf   0x2aec
  41fd0b:	imul   ecx,ecx,0x63
  41fd0e:	jbe    0x41fcb8
  41fd10:	dec    ebx
  41fd11:	and    edi,DWORD PTR [ecx]
  41fd13:	pop    edx
  41fd14:	pushf  
  41fd15:	enter  0xddf3,0x36
  41fd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd1a:	cmp    eax,esp
  41fd1c:	mov    cl,0x12
  41fd1e:	xor    eax,eax
  41fd20:	fimul  WORD PTR [ebp+0x0]
  41fd23:	mov    ecx,0xb573ea9a
  41fd28:	repz push edi
  41fd2a:	lea    ebx,[ebx]
  41fd2c:	xor    eax,0xc551e5
  41fd31:	retf   0x43a2
  41fd34:	call   0x3f59:0x3fd01cd2
  41fd3b:	popf   
  41fd3c:	aaa    
  41fd3d:	pop    ds
  41fd3e:	mov    ch,0xa2
  41fd40:	mov    esp,0x1126505b
  41fd45:	dec    eax
  41fd46:	push   es
  41fd47:	dec    edi
  41fd48:	inc    esi
  41fd49:	fidiv  DWORD PTR [edx]
  41fd4b:	jmp    0x5918d57f
  41fd50:	(bad)  
  41fd51:	xor    dl,BYTE PTR [eax+0x557af8bd]
  41fd57:	idiv   BYTE PTR [edx]
  41fd59:	mov    ebp,0xa8557ec4
  41fd5e:	add    edi,DWORD PTR [eax+0x2dfefc85]
  41fd64:	inc    ecx
  41fd65:	shl    BYTE PTR [edx+0x3c02cde0],cl
  41fd6b:	push   ebp
  41fd6c:	add    esi,DWORD PTR [ecx]
  41fd6e:	ja     0x41fd0a
  41fd70:	leave  
  41fd71:	lfs    edx,FWORD PTR [ecx+0x3cc9bf48]
  41fd78:	mov    ebx,0x232668ec
  41fd7d:	sti    
  41fd7e:	mov    esi,0x97e449e1
  41fd83:	outs   dx,DWORD PTR ds:[esi]
  41fd84:	push   eax
  41fd85:	stos   BYTE PTR es:[edi],al
  41fd86:	scas   al,BYTE PTR es:[edi]
  41fd87:	mov    ebp,DWORD PTR [esi]
  41fd89:	inc    edx
  41fd8a:	xor    ebx,DWORD PTR [ebx]
  41fd8c:	outs   dx,BYTE PTR ds:[esi]
  41fd8d:	in     al,dx
  41fd8e:	(bad)  
  41fd8f:	into   
  41fd90:	xor    ah,dl
  41fd92:	cmp    eax,eax
  41fd94:	fs stc 
  41fd96:	mov    eax,0x5b69bf77
  41fd9b:	inc    eax
  41fd9c:	pop    esp
  41fd9d:	cli    
  41fd9e:	into   
  41fd9f:	mov    dl,0x7f
  41fda1:	mov    DWORD PTR [edi],edi
  41fda3:	mov    dh,cl
  41fda5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda6:	call   0xe851:0xd02c5a14
  41fdad:	xor    al,0x62
  41fdaf:	jmp    FWORD PTR [ecx]
  41fdb1:	test   eax,0x7aa19d65
  41fdb6:	sar    DWORD PTR [edi-0x1c77dfbb],cl
  41fdbc:	repz hlt 
  41fdbe:	scas   al,BYTE PTR es:[edi]
  41fdbf:	jae    0x41fdb3
  41fdc1:	iret   
  41fdc2:	inc    ebx
  41fdc3:	pop    ebp
  41fdc4:	mov    eax,ds:0xca859976
  41fdc9:	mov    al,ds:0xa19c53ef
  41fdce:	loop   0x41fdd3
  41fdd0:	fistp  DWORD PTR [ebx-0x750c36d1]
  41fdd6:	mov    esi,esp
  41fdd8:	and    al,0x8e
  41fdda:	cmp    ebp,edx
  41fddc:	mov    ebp,0xf701a5a7
  41fde1:	outs   dx,DWORD PTR ds:[esi]
  41fde2:	sub    BYTE PTR [esi],ah
  41fde4:	sbb    al,0xed
  41fde6:	pop    edx
  41fde7:	add    DWORD PTR [ecx-0x613f2c73],eax
  41fded:	loop   0x41fdac
  41fdef:	and    eax,esp
  41fdf1:	sub    ah,ch
  41fdf3:	addps  xmm1,XMMWORD PTR [edx+0x3245f24d]
  41fdfa:	ja     0x41fe05
  41fdfc:	xor    BYTE PTR [esi],cl
  41fdfe:	lods   eax,DWORD PTR ds:[esi]
  41fdff:	mov    ?,WORD PTR [esi*4+0x4cb8569a]
  41fe06:	cli    
  41fe07:	xor    DWORD PTR [edx],0x161f545
  41fe0d:	fstp   DWORD PTR [edx]
  41fe0f:	ins    BYTE PTR es:[edi],dx
  41fe10:	shl    ah,0xd6
  41fe13:	js     0x41fdd5
  41fe15:	jno    0x41fe6e
  41fe17:	ins    DWORD PTR es:[edi],dx
  41fe18:	in     eax,dx
  41fe19:	mov    ebx,0x7079b775
  41fe1e:	mov    WORD PTR ds:[edi-0x9],fs
  41fe22:	inc    edi
  41fe23:	push   edi
  41fe24:	pop    ecx
  41fe25:	popa   
  41fe26:	ret    0xb58
  41fe29:	mov    WORD PTR fs:[edi],ss
  41fe2c:	and    ch,ah
  41fe2e:	div    BYTE PTR [esi+edx*1-0x2a58e74c]
  41fe35:	sti    
  41fe36:	add    al,0xc9
  41fe38:	arpl   WORD PTR [edx+0x2f],dx
  41fe3b:	mov    ds:0x32509327,al
  41fe40:	outs   dx,BYTE PTR ds:[esi]
  41fe41:	test   eax,0xc5320344
  41fe46:	fdiv   st,st(0)
  41fe48:	in     al,0x4b
  41fe4a:	ret    
  41fe4b:	ror    bl,cl
  41fe4d:	cmp    eax,0x24eaf04a
  41fe52:	mov    ebx,0x6770e7a9
  41fe57:	je     0x41fe93
  41fe59:	fwait
  41fe5a:	mov    BYTE PTR [eax-0x37162683],dh
  41fe60:	call   0x2463c7c0
  41fe65:	add    BYTE PTR [ebx],dh
  41fe67:	xor    dl,ch
  41fe69:	sbb    ah,BYTE PTR [ebx]
  41fe6b:	repnz add al,0xf6
  41fe6e:	mov    BYTE PTR [ebp+0x58f03d4a],ah
  41fe74:	sbb    al,0x7
  41fe76:	inc    ecx
  41fe77:	adc    bl,bl
  41fe79:	ds mov esi,ss
  41fe7c:	cmp    eax,0x81fb7950
  41fe81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe82:	mov    dh,0x5a
  41fe84:	outs   dx,DWORD PTR ds:[esi]
  41fe85:	lods   al,BYTE PTR ds:[esi]
  41fe86:	mov    bh,0xb7
  41fe88:	aam    0x86
  41fe8a:	adc    dh,dh
  41fe8c:	cmp    DWORD PTR [esi-0x65],0x31
  41fe90:	arpl   WORD PTR [eax],ax
  41fe92:	sbb    eax,0x97a5c41c
  41fe97:	mov    WORD PTR [ebp-0x1e],ds
  41fe9a:	jl     0x41fef8
  41fe9c:	fistp  WORD PTR [ebp-0x4e1554ad]
  41fea2:	and    DWORD PTR [eax+0x52],ebx
  41fea5:	adc    cl,ah
  41fea7:	mov    eax,0xd08cb2db
  41feac:	mov    ds:0x9dd4fdf1,eax
  41feb1:	cmp    ebp,DWORD PTR [eax+0x5d]
  41feb4:	xchg   edi,eax
  41feb5:	mov    esp,eax
  41feb7:	test   eax,0x169afa1b
  41febc:	lods   eax,DWORD PTR ds:[esi]
  41febd:	push   ds
  41febe:	call   0x5e549889
  41fec3:	aam    0xc7
  41fec5:	aad    0x82
  41fec7:	xor    dl,dh
  41fec9:	fs icebp 
  41fecb:	add    dl,0x2e
  41fece:	jmp    0x5968:0xaf6594be
  41fed5:	(bad)  
  41fed6:	jo     0x41ff44
  41fed8:	loop   0x41fea6
  41feda:	popf   
  41fedb:	fs in  al,0xc1
  41fede:	cli    
  41fedf:	xlat   BYTE PTR ds:[ebx]
  41fee0:	mov    bh,dh
  41fee2:	into   
  41fee3:	mov    esp,0x7e642898
  41fee8:	popa   
  41fee9:	or     BYTE PTR ds:0x8dc938cb,dl
  41feef:	pop    ebp
  41fef0:	aas    
  41fef1:	mov    ebx,esi
  41fef3:	mov    BYTE PTR ds:0xff124878,dl
  41fef9:	push   cs
  41fefa:	retf   0xf3d
  41fefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fefe:	add    edi,DWORD PTR [ebp+0x43]
  41ff01:	push   esi
  41ff02:	mov    ebp,0x18e649eb
  41ff07:	inc    esi
  41ff08:	rcr    DWORD PTR [ecx],1
  41ff0a:	ret    0xfffd
  41ff0d:	xchg   esi,eax
  41ff0e:	adc    eax,0xafbc684f
  41ff13:	xchg   ecx,eax
  41ff14:	int    0x51
  41ff16:	sub    eax,0x9ed15f4b
  41ff1b:	in     al,dx
  41ff1c:	or     al,0xc0
  41ff1e:	sbb    eax,0x6669381a
  41ff23:	jle    0x41ff5c
  41ff25:	cwde   
  41ff26:	enter  0xaa75,0xee
  41ff2a:	cmp    BYTE PTR [ebx-0x38],ch
  41ff2d:	lds    ebp,FWORD PTR [ecx+esi*1]
  41ff30:	das    
  41ff31:	out    0xcc,eax
  41ff33:	dec    edi
  41ff34:	mov    dl,0xac
  41ff36:	rol    BYTE PTR [edx+eiz*8-0x40a5949b],0x9
  41ff3e:	bound  esp,QWORD PTR [ebx+0x7d]
  41ff41:	and    bl,al
  41ff43:	xor    eax,esi
  41ff45:	neg    DWORD PTR [ebx+0x24]
  41ff48:	dec    edx
  41ff49:	enter  0xd794,0x41
  41ff4d:	in     eax,dx
  41ff4e:	mov    ch,0x79
  41ff50:	outs   dx,BYTE PTR ds:[esi]
  41ff51:	lock mov esi,0xcb1c144c
  41ff57:	(bad)  
  41ff58:	sar    BYTE PTR [edi],cl
  41ff5a:	dec    esi
  41ff5b:	dec    ch
  41ff5d:	dec    esp
  41ff5e:	push   ebp
  41ff5f:	and    BYTE PTR [edi],0x4c
  41ff62:	cwde   
  41ff63:	cmp    eax,0x6a90fda9
  41ff68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff69:	push   ss
  41ff6a:	imul   esi,ebx,0xffffff89
  41ff6d:	les    ebx,FWORD PTR [esi]
  41ff6f:	cdq    
  41ff70:	lock loope 0x41ff27
  41ff73:	hlt    
  41ff74:	aam    0xa3
  41ff76:	inc    ebp
  41ff77:	mov    eax,ds:0x197c7d60
  41ff7c:	sub    dl,bl
  41ff7e:	mov    ebx,0x649ac7d5
  41ff83:	dec    edi
  41ff84:	jp     0x41ffc2
  41ff86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff87:	dec    esi
  41ff88:	xor    edi,DWORD PTR [ebp-0x4aa9a796]
  41ff8e:	xchg   ebx,eax
  41ff8f:	inc    ebp
  41ff90:	sbb    esi,DWORD PTR [ebx+0xd]
  41ff93:	loope  0x41fff6
  41ff95:	inc    esp
  41ff97:	stc    
  41ff98:	inc    esi
  41ff99:	or     DWORD PTR [eax-0x297fcaf3],0xffffffbc
  41ffa0:	daa    
  41ffa1:	lea    ebx,ds:0xd62f5868
  41ffa7:	fwait
  41ffa8:	jecxz  0x420014
  41ffaa:	jmp    0xe8b7:0xa1d7e0c8
  41ffb1:	mov    bl,0xda
  41ffb3:	xlat   BYTE PTR ds:[ebx]
  41ffb4:	aam    0x7e
  41ffb6:	(bad)  
  41ffb8:	pop    ebp
  41ffb9:	add    al,0x2f
  41ffbb:	mov    al,ds:0x5fcfa579
  41ffc0:	lock mov edi,DWORD PTR ds:0xf7bc1396
  41ffc7:	xor    ch,BYTE PTR [edi-0x59]
  41ffca:	xchg   esi,eax
  41ffcb:	push   eax
  41ffcc:	js     0x41ff6b
  41ffce:	and    edi,0x3767432a
  41ffd4:	mov    ecx,DWORD PTR [eax-0xe]
  41ffd7:	dec    ebx
  41ffd8:	mov    eax,ds:0x288f9740
  41ffdd:	dec    edx
  41ffde:	add    DWORD PTR ds:0xd267e586,esp
  41ffe4:	ins    DWORD PTR es:[edi],dx
  41ffe5:	(bad)  
  41ffe6:	pop    edx
  41ffe7:	mov    eax,ds:0x158f38f8
  41ffec:	mov    DWORD PTR [eax+0x7c],ebp
  41ffef:	or     edx,eax
  41fff1:	mov    ds:0xa471f243,eax
  41fff6:	stos   DWORD PTR es:[edi],eax
  41fff7:	cmp    bl,ah
  41fff9:	or     al,0x3b
  41fffb:	cmp    DWORD PTR [edi-0x5b],esp
  41fffe:	cli    
  41ffff:	push   ebp
  420000:	cs call 0xdf672e80
  420006:	sti    
  420007:	and    eax,0xa8475422
  42000c:	or     DWORD PTR [ebp+ebp*4-0x1643a4b7],ebp
  420013:	pushf  
  420014:	mov    esi,0xa634e06a
  420019:	dec    eax
  42001a:	lods   al,BYTE PTR ds:[esi]
  42001b:	mov    dh,BYTE PTR [edx-0x68]
  42001e:	sub    bh,BYTE PTR [eax-0x1f]
  420021:	in     al,dx
  420022:	push   ebx
  420023:	out    0x61,al
  420025:	pop    esi
  420026:	inc    esi
  420027:	js     0x420012
  420029:	arpl   WORD PTR [esi-0x72],bx
  42002c:	je     0x41ffeb
  42002e:	mov    ds:0x317ddfdb,eax
  420033:	aaa    
  420034:	call   0xba92:0x44f00b53
  42003b:	or     ebp,DWORD PTR [ecx]
  42003d:	mov    edx,0x91674c2d
  420042:	call   0xd4e9:0x6341461c
  420049:	dec    esp
  42004a:	or     BYTE PTR [edi-0x5c],ah
  42004d:	push   ss
  42004e:	add    DWORD PTR [edx+0x2de6f29d],ebp
  420054:	mov    bh,0xe8
  420056:	iret   
  420057:	jmp    0xd1d7:0xba1cd1bf
  42005e:	mov    ebx,0x67b857f0
  420063:	xchg   DWORD PTR [edi+0x59a83ef3],ebx
  420069:	sti    
  42006a:	xchg   esi,eax
  42006b:	in     eax,dx
  42006c:	mov    esi,0x3875a3fe
  420071:	lea    ecx,[ecx]
  420073:	pop    ecx
  420074:	dec    eax
  420076:	xor    BYTE PTR [ebp+0x7c],cl
  420079:	ret    0x809a
  42007c:	push   ecx
  42007d:	fwait
  42007e:	sahf   
  42007f:	dec    esp
  420080:	and    BYTE PTR [ebp+0x72],bh
  420083:	sbb    eax,0x7843e0f0
  420088:	shl    DWORD PTR [edi+esi*4],cl
  42008b:	pop    ecx
  42008c:	pop    ebp
  42008d:	jbe    0x4200ec
  42008f:	jns    0x420032
  420091:	add    eax,DWORD PTR [edx]
  420093:	mov    ds:0xa4568333,eax
  420098:	mov    DWORD PTR [ebx+edi*4-0x31a0da9],edx
  42009f:	pop    ebx
  4200a0:	fwait
  4200a1:	mov    ebp,0xcb020c31
  4200a6:	jle    0x42007a
  4200a8:	xor    esi,ebx
  4200aa:	stc    
  4200ab:	jg     0x420052
  4200ad:	push   0x5431d507
  4200b2:	mov    BYTE PTR [ebp+edx*1+0x1b00380a],dh
  4200b9:	adc    dh,bl
  4200bb:	mov    al,0x8e
  4200bd:	int3   
  4200be:	jbe    0x420111
  4200c0:	pop    ss
  4200c1:	sbb    BYTE PTR [edx-0x79],ah
  4200c4:	int3   
  4200c5:	int    0xc5
  4200c7:	or     eax,0xa444718a
  4200cc:	jne    0x42007a
  4200ce:	mov    ds:0x765e3aca,eax
  4200d3:	and    eax,0x2f7da091
  4200d8:	les    edi,FWORD PTR [esi-0x41944970]
  4200de:	sti    
  4200df:	daa    
  4200e0:	ret    
  4200e1:	jbe    0x4200d7
  4200e3:	ror    DWORD PTR [eax],1
  4200e5:	xchg   ecx,eax
  4200e6:	jne    0x420092
  4200e8:	test   BYTE PTR [esi],bh
  4200ea:	adc    edi,edx
  4200ec:	jecxz  0x420102
  4200ee:	or     edx,edi
  4200f0:	xchg   esi,eax
  4200f1:	(bad)  
  4200f2:	out    0xbb,eax
  4200f4:	xchg   BYTE PTR [eax+0x66],al
  4200f7:	loopne 0x420099
  4200f9:	add    eax,0x92821af1
  4200fe:	jmp    0xe094:0xdb355553
  420105:	call   0x1805721e
  42010a:	loop   0x42015a
  42010c:	mov    al,BYTE PTR [ecx+0x34dffbb6]
  420112:	pop    ebx
  420113:	(bad)  
  420115:	xor    DWORD PTR [eax+eax*1],0x31ddc68c
  42011c:	ss pop esp
  42011e:	mov    ah,bh
  420120:	fmul   DWORD PTR ds:0x5e12b71a
  420126:	cmp    BYTE PTR ds:0x26ed0531,cl
  42012c:	std    
  42012d:	jns    0x420171
  42012f:	dec    esi
  420130:	inc    esp
  420131:	sub    BYTE PTR [ecx+0x3],ah
  420134:	into   
  420135:	xchg   edx,eax
  420136:	dec    ebx
  420137:	enter  0x86f6,0xc6
  42013b:	xor    BYTE PTR [esi+0x23a7891c],dl
  420141:	sub    eax,0x9755dc62
  420146:	mov    cl,0x88
  420148:	fs (bad) 
  42014a:	das    
  42014b:	sbb    al,0x16
  42014d:	retf   0x2296
  420150:	xchg   edi,eax
  420151:	ror    DWORD PTR [edi-0x60],0xeb
  420155:	jmp    0x420159
  420157:	mov    ecx,0x69c6dae
  42015c:	jle    0x4200f0
  42015e:	(bad)  [ebx-0x5b]
  420161:	mov    eax,ds:0xa3096b7b
  420166:	xchg   ch,al
  420168:	lahf   
  420169:	sbb    al,0x9c
  42016b:	push   ebx
  42016c:	je     0x420123
  42016e:	mov    ecx,0xdc915ac2
  420173:	cmp    DWORD PTR [edx-0x2],ebp
  420176:	iret   
  420177:	iret   
  420178:	or     al,0x6f
  42017a:	inc    eax
  42017b:	call   0x7ce234c8
  420180:	inc    eax
  420181:	(bad)  
  420182:	push   esp
  420183:	push   ecx
  420184:	daa    
  420185:	push   esp
  420186:	addr16 pushf 
  420188:	xor    bl,BYTE PTR [ecx+ebx*2]
  42018b:	push   ebp
  42018c:	sub    al,0xf1
  42018e:	xor    cl,BYTE PTR [ecx+0x6c]
  420191:	or     BYTE PTR [edx+0x10],0x3d
  420195:	push   esi
  420196:	outs   dx,BYTE PTR ds:[esi]
  420197:	cmp    al,0xb2
  420199:	aaa    
  42019a:	ins    DWORD PTR es:[edi],dx
  42019b:	or     DWORD PTR [edx+eax*8+0xc80cf3c],ecx
  4201a2:	inc    ebp
  4201a3:	xor    eax,0xefb71e48
  4201a8:	inc    ebp
  4201a9:	arpl   bx,sp
  4201ab:	fdivr  st,st(2)
  4201ad:	mov    ecx,0x9753db69
  4201b2:	icebp  
  4201b3:	mov    dl,BYTE PTR [edi-0x282278b9]
  4201b9:	(bad)
  4201be:	mov    eax,ds:0x201fd07c
  4201c3:	test   DWORD PTR [edi],edx
  4201c5:	pop    ecx
  4201c6:	jmp    0xa3572537
  4201cb:	lds    ebx,FWORD PTR [edx+0x5ccb72df]
  4201d1:	pushf  
  4201d2:	inc    edi
  4201d3:	test   al,0x98
  4201d5:	fisttp WORD PTR [ecx-0x2f]
  4201d8:	fstp   QWORD PTR [esi+0x1e]
  4201db:	pop    ebp
  4201dc:	lahf   
  4201dd:	hlt    
  4201de:	lods   eax,DWORD PTR ds:[esi]
  4201df:	fistp  DWORD PTR [ecx-0x2a86fad1]
  4201e5:	(bad)  
  4201e7:	mov    WORD PTR [ecx],?
  4201e9:	es (bad) 
  4201eb:	mov    bh,0xf7
  4201ed:	sbb    DWORD PTR [edx],ebp
  4201ef:	mov    bl,0xbf
  4201f1:	and    eax,0x2f0c69aa
  4201f6:	outs   dx,DWORD PTR ds:[esi]
  4201f7:	out    0xe8,eax
  4201f9:	and    BYTE PTR [edi],cl
  4201fb:	and    eax,0xf8cb6938
  420200:	push   esi
  420201:	adc    eax,0x7d0c25f6
  420206:	mov    ecx,0x3b7d102
  42020b:	cmp    edi,ebp
  42020d:	lock jl 0x420265
  420210:	sar    DWORD PTR [esp+esi*4-0x6c],0xc6
  420215:	sub    cl,ch
  420217:	mov    esi,0x1a8188f3
  42021c:	nop
  42021d:	inc    edx
  42021e:	jae    0x4201a9
  420220:	sbb    al,0xca
  420222:	pop    es
  420223:	xlat   BYTE PTR ds:[ebx]
  420224:	inc    eax
  420225:	sbb    BYTE PTR cs:[edx+0x3],0x29
  42022a:	xchg   esp,eax
  42022b:	js     0x420282
  42022d:	xchg   edx,eax
  42022e:	ins    BYTE PTR es:[edi],dx
  42022f:	mov    edi,0x3c6bed28
  420234:	xchg   ebx,eax
  420235:	and    eax,0xe589c0b9
  42023a:	shl    DWORD PTR [eax],1
  42023c:	jle    0x420272
  42023e:	and    al,0x23
  420240:	ins    DWORD PTR es:[edi],dx
  420241:	or     DWORD PTR [esi-0x3f9d280a],ebx
  420247:	pusha  
  420248:	je     0x42027a
  42024a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42024b:	sti    
  42024c:	sti    
  42024d:	leave  
  42024e:	(bad)  
  42024f:	jmp    DWORD PTR [esi+0x7303285c]
  420255:	fcmovne st,st(2)
  420257:	sbb    DWORD PTR [ebx-0x24b4d87d],0x38
  42025e:	nop
  42025f:	addr16 mov al,0x46
  420262:	mov    eax,ds:0xc1ce4d1e
  420267:	aam    0xc7
  420269:	iret   
  42026a:	pop    ecx
  42026b:	jb     0x42025f
  42026d:	not    BYTE PTR [esi]
  42026f:	mov    dl,0xf7
  420271:	pop    esi
  420272:	sub    DWORD PTR ds:0x6298be99,ebx
  420278:	mov    dl,0x68
  42027a:	lahf   
  42027b:	ss push ds
  42027d:	mov    ecx,0x5c1e3a8a
  420282:	mov    BYTE PTR [edi-0x2c],dl
  420285:	and    bl,0x3d
  420288:	push   ecx
  420289:	mov    ecx,0x328cd3e2
  42028e:	pushf  
  42028f:	fcomi  st,st(4)
  420291:	pushf  
  420292:	sar    BYTE PTR [esi+0x6aa7f97f],0xd3
  420299:	inc    ecx
  42029a:	mov    WORD PTR [edi-0x2773d1c1],ds
  4202a0:	loope  0x42029e
  4202a2:	mul    DWORD PTR [ecx+0x15cd34b8]
  4202a8:	mov    ds:0x5976362e,eax
  4202ad:	sub    al,0xb
  4202af:	call   0x6446:0xf9d4cd27
  4202b6:	push   ds
  4202b7:	retf   
  4202b8:	aad    0x57
  4202ba:	jne    0x420258
  4202bc:	aad    0xf5
  4202be:	pushf  
  4202bf:	inc    edi
  4202c0:	sbb    DWORD PTR [edx],0x78f27fcf
  4202c6:	push   0xdc440dff
  4202cb:	mov    ebx,0xbcd33301
  4202d0:	pop    ds
  4202d1:	push   ebx
  4202d2:	pop    edi
  4202d3:	aam    0x83
  4202d5:	ja     0x42025d
  4202d7:	std    
  4202d8:	dec    esi
  4202d9:	stos   DWORD PTR es:[edi],eax
  4202da:	ins    BYTE PTR es:[edi],dx
  4202db:	test   ebx,edi
  4202dd:	test   al,0xbe
  4202df:	cli    
  4202e0:	xchg   edx,eax
  4202e1:	fs das 
  4202e3:	jnp    0x420269
  4202e5:	and    BYTE PTR [edi-0x2a130fb7],bl
  4202eb:	test   al,0x2
  4202ed:	xchg   esp,eax
  4202ee:	xor    DWORD PTR [esi-0x3ae9dda2],esp
  4202f4:	stc    
  4202f5:	in     eax,dx
  4202f6:	into   
  4202f7:	and    al,BYTE PTR [edi+0x58]
  4202fa:	adc    edi,0x91082228
  420300:	mov    dl,0xd2
  420302:	lea    ebp,[esi+esi*2]
  420305:	lods   al,BYTE PTR ds:[esi]
  420306:	hlt    
  420307:	pop    edx
  420308:	aad    0x37
  42030a:	add    DWORD PTR [ebx+0x7f],0xffffffb9
  42030e:	sub    BYTE PTR [ebp+0x45],ah
  420311:	adc    eax,0xf92dac89
  420316:	gs jecxz 0x420370
  420319:	shl    BYTE PTR [eax+0x65],cl
  42031c:	ins    DWORD PTR es:[edi],dx
  42031d:	lods   al,BYTE PTR ds:[esi]
  42031e:	and    eax,0xe3f0a499
  420323:	ret    0x14d9
  420326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420327:	(bad)  
  420328:	clc    
  420329:	mov    dh,0x73
  42032b:	jns    0x4202d7
  42032d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42032e:	loopne 0x420334
  420330:	call   0x5279b498
  420335:	and    DWORD PTR [esi],edx
  420337:	and    al,0x6d
  420339:	inc    ecx
  42033a:	mov    dh,0x4e
  42033c:	clc    
  42033d:	xchg   esi,eax
  42033e:	test   al,0x68
  420340:	mov    al,ds:0xcfbcb07e
  420345:	cmp    ebx,DWORD PTR [edx+edi*4+0xd7ee6ed]
  42034c:	xor    ebx,edi
  42034e:	jne    0x4203c3
  420350:	popf   
  420351:	sub    BYTE PTR [ebx-0x42],ah
  420354:	mov    WORD PTR [eax-0x80],es
  420357:	push   ecx
  420358:	and    DWORD PTR [eax+0x392c5254],edi
  42035e:	cmp    BYTE PTR [ecx],bl
  420360:	jne    0x420302
  420362:	loop   0x4203c6
  420364:	loope  0x42039a
  420366:	sub    BYTE PTR [ebx],al
  420368:	inc    edi
  420369:	pop    esp
  42036a:	sbb    al,0x1f
  42036c:	inc    ecx
  42036d:	cli    
  42036e:	retf   
  42036f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420370:	addr16 jb 0x4203dc
  420373:	adc    DWORD PTR [edi-0x60addeb9],edx
  420379:	mov    BYTE PTR [ecx],al
  42037b:	movnti DWORD PTR [edi],eax
  42037e:	cmp    BYTE PTR [ebx+0x6],0xc3
  420382:	jbe    0x420319
  420384:	cdq    
  420385:	jge    0x4203ea
  420387:	or     al,0xeb
  420389:	fisubr DWORD PTR [ebx+0x7f]
  42038c:	cmc    
  42038d:	adc    al,0xd7
  42038f:	inc    ebx
  420390:	enter  0x78e6,0xc4
  420394:	xchg   ebx,eax
  420395:	fwait
  420396:	test   bl,dl
  420398:	jg     0x42036e
  42039a:	add    eax,edi
  42039c:	push   DWORD PTR [ecx+0x1b1913f1]
  4203a2:	dec    ebx
  4203a3:	stc    
  4203a4:	cdq    
  4203a5:	and    DWORD PTR [ecx],esp
  4203a7:	xchg   edx,eax
  4203a8:	lds    ebx,FWORD PTR [edx+0x4387081d]
  4203ae:	outs   dx,DWORD PTR ds:[esi]
  4203af:	xlat   BYTE PTR ds:[ebx]
  4203b0:	ret    
  4203b1:	or     dh,BYTE PTR [eax+0x6cae2196]
  4203b7:	inc    ebp
  4203b8:	push   ebx
  4203b9:	sbb    eax,esi
  4203bb:	sub    al,0x9d
  4203bd:	push   0xffffffd0
  4203bf:	fisubr DWORD PTR [esi-0x1268116d]
  4203c5:	inc    ebx
  4203c6:	(bad)  
  4203c7:	mov    al,ds:0x56f1898b
  4203cc:	dec    ecx
  4203cd:	(bad)  
  4203ce:	aad    0xa6
  4203d0:	inc    ebx
  4203d1:	outs   dx,BYTE PTR ds:[esi]
  4203d2:	pop    ds
  4203d3:	div    BYTE PTR [ebp+0x574d007c]
  4203d9:	aad    0x14
  4203db:	inc    eax
  4203dc:	jb     0x4203fb
  4203de:	or     al,0x4e
  4203e0:	mov    edx,esp
  4203e2:	and    DWORD PTR [esp+ecx*1-0x68],esp
  4203e6:	sbb    BYTE PTR [esi+0x41],ch
  4203e9:	jle    0x420469
  4203eb:	pop    edi
  4203ec:	mov    bh,0x11
  4203ee:	ret    0xe13e
  4203f1:	and    DWORD PTR [esi-0x2691dcf],edi
  4203f7:	ins    DWORD PTR es:[edi],dx
  4203f8:	xchg   DWORD PTR [eax+0x68630033],ebx
  4203fe:	data16 lods al,BYTE PTR ds:[esi]
  420400:	(bad)  
  420401:	mov    ecx,0x99194b67
  420406:	cwde   
  420407:	inc    edi
  420408:	outs   dx,BYTE PTR ds:[esi]
  420409:	mul    BYTE PTR [ebx]
  42040b:	in     al,dx
  42040c:	(bad)  
  42040d:	jb     0x4203de
  42040f:	sub    ecx,DWORD PTR [edx-0x6345793a]
  420415:	pushf  
  420416:	iret   
  420417:	iret   
  420418:	jp     0x420451
  42041a:	enter  0x6908,0x3a
  42041e:	or     esi,ebp
  420420:	stc    
  420421:	shl    DWORD PTR [edi+0x2ebc60f0],0x26
  420428:	jl     0x42049c
  42042a:	(bad)  
  42042b:	sbb    BYTE PTR [ebp+0x68647de7],al
  420431:	int    0xe5
  420433:	scas   eax,DWORD PTR es:[edi]
  420434:	imul   ebp,DWORD PTR [ebx+0x44],0x2a
  420438:	rcl    ah,cl
  42043a:	cs pop edx
  42043c:	mov    edx,0x4533db4d
  420441:	inc    esi
  420442:	test   al,0xc8
  420444:	jecxz  0x420406
  420446:	iret   
  420447:	add    esi,0xec617671
  42044d:	and    dl,BYTE PTR [edi-0x46]
  420450:	or     eax,0x31c44c3a
  420455:	cmp    DWORD PTR ds:0xac409261,ebp
  42045b:	mov    bh,0x5b
  42045d:	test   al,0xad
  420460:	aaa    
  420461:	lods   al,BYTE PTR ds:[esi]
  420462:	sti    
  420463:	sub    DWORD PTR [ecx+0x3f],esi
  420466:	fist   DWORD PTR [esi-0x40]
  420469:	sahf   
  42046a:	sbb    eax,0xe728b182
  42046f:	xchg   edi,eax
  420470:	dec    eax
  420471:	sub    eax,0xdfcc6532
  420476:	(bad)  
  420477:	jmp    0x139d:0x740a2d68
  42047e:	(bad)  
  420480:	popf   
  420481:	inc    ebp
  420482:	add    BYTE PTR [esi+0x22],dh
  420485:	pushf  
  420486:	call   0xc574:0x33075b80
  42048d:	xchg   ebx,eax
  42048e:	sub    BYTE PTR [eax-0x235fb758],dl
  420494:	mov    WORD PTR [ebp-0x1a],ss
  420497:	lock loop 0x420423
  42049a:	inc    edx
  42049b:	sahf   
  42049c:	sub    BYTE PTR [ebx+0x2142865c],0x55
  4204a3:	es xchg esp,eax
  4204a5:	add    eax,0xf715935b
  4204aa:	mov    al,ds:0x1540f8bf
  4204af:	and    eax,0x3d87694b
  4204b4:	ficom  WORD PTR [ebp+0x77611712]
  4204ba:	mov    esp,0x688d24ef
  4204bf:	push   0xa07795cf
  4204c4:	or     esp,ebp
  4204c6:	(bad)  
  4204c7:	icebp  
  4204c8:	mov    edx,0x672664ce
  4204cd:	nop
  4204ce:	fnstenv [ebp+0x196e2e75]
  4204d4:	inc    edi
  4204d5:	xor    al,0xe4
  4204d7:	lds    ebx,FWORD PTR [esi]
  4204d9:	cli    
  4204da:	mov    al,0x39
  4204dc:	hlt    
  4204dd:	push   ecx
  4204de:	arpl   WORD PTR [eax+0x59],ax
  4204e1:	mov    al,0xf6
  4204e3:	xchg   edx,eax
  4204e4:	sbb    eax,DWORD PTR [eax]
  4204e6:	xlat   BYTE PTR ds:[ebx]
  4204e7:	in     al,dx
  4204e8:	mov    dl,0x1e
  4204ea:	(bad)  
  4204eb:	call   0xf8d6b212
  4204f0:	jmp    0x55c4410c
  4204f5:	dec    edi
  4204f6:	push   ds
  4204f7:	out    dx,al
  4204f8:	jl     0x420517
  4204fa:	enter  0x97e,0xbd
  4204fe:	leave  
  4204ff:	cli    
  420500:	sub    BYTE PTR [eax+0xb08ce26],bh
  420506:	je     0x420510
  420508:	out    0x3c,eax
  42050a:	dec    ebx
  42050b:	adc    eax,0x833a5189
  420510:	into   
  420511:	jmp    0x94d9f76
  420516:	xor    bh,BYTE PTR [ebp+0x1d]
  420519:	mov    bh,0x57
  42051b:	mov    ah,0x97
  42051d:	ins    DWORD PTR es:[edi],dx
  42051e:	aam    0x4e
  420520:	sar    BYTE PTR [edx+esi*4-0x70],1
  420524:	sub    dl,BYTE PTR [ebp-0x2f]
  420527:	cmp    cl,BYTE PTR [edx+0x21]
  42052a:	inc    BYTE PTR [ebx+0x49]
  42052d:	sub    al,0x7b
  42052f:	into   
  420530:	retf   0xdb0a
  420533:	xor    al,0xf4
  420535:	jmp    0x3646833f
  42053a:	push   edi
  42053b:	je     0x4204fb
  42053d:	push   ebx
  42053e:	js     0x420555
  420540:	into   
  420541:	mov    ch,0xc3
  420543:	call   0xd44b88c1
  420548:	out    0x85,al
  42054a:	ins    DWORD PTR es:[edi],dx
  42054b:	sbb    bl,BYTE PTR [esi-0x7836c47f]
  420551:	sub    DWORD PTR [edi],ebp
  420553:	jb     0x42051d
  420555:	cmc    
  420556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420557:	push   0x391b0978
  42055c:	sti    
  42055d:	aaa    
  42055e:	out    dx,al
  42055f:	cmp    ch,BYTE PTR [edx]
  420561:	xlat   BYTE PTR ds:[ebx]
  420562:	mov    ebp,0xbed547ff
  420567:	retf   0x3bc4
  42056a:	jmp    0xeaf7:0xb296bfd0
  420571:	or     eax,0x84f17993
  420576:	ret    
  420577:	mov    DWORD PTR [ebx],edi
  420579:	sahf   
  42057a:	pop    esi
  42057b:	sahf   
  42057c:	xor    bl,BYTE PTR [ebx+0x48]
  42057f:	pop    ebp
  420580:	popa   
  420581:	cmp    eax,DWORD PTR [esi]
  420583:	push   esi
  420584:	jb     0x420593
  420586:	sti    
  420587:	aas    
  420588:	add    BYTE PTR [eax],0xa5
  42058b:	lock test BYTE PTR [ecx-0x5d554ca3],ah
  420592:	or     ebp,ecx
  420594:	inc    ebx
  420595:	xor    eax,0x675c4929
  42059a:	sub    DWORD PTR [edi+0x6d],ebx
  42059d:	mov    dl,0xde
  42059f:	sbb    al,0xc3
  4205a1:	cdq    
  4205a2:	ret    0x9f4f
  4205a5:	arpl   WORD PTR ds:[ebx+0x14],bp
  4205a9:	adc    bh,BYTE PTR [esp+ebx*8-0x2be36c79]
  4205b0:	outs   dx,BYTE PTR ds:[esi]
  4205b1:	rcr    BYTE PTR [esi],1
  4205b3:	retf   0x10d9
  4205b6:	in     eax,dx
  4205b7:	rcl    DWORD PTR [esi+0x4a],1
  4205ba:	jne    0x420621
  4205bc:	clc    
  4205bd:	cmp    eax,0xb6f4d563
  4205c2:	adc    edx,DWORD PTR [ebx+0x13]
  4205c5:	adc    eax,0xa3ec1d07
  4205ca:	push   esp
  4205cb:	ja     0x4205e5
  4205cd:	pop    ecx
  4205ce:	sub    al,0x40
  4205d0:	mov    gs:0x27663d0b,eax
  4205d6:	xchg   ecx,eax
  4205d7:	or     al,0x15
  4205d9:	or     BYTE PTR [edx-0x3f],0x88
  4205dd:	sub    DWORD PTR ds:0xa968ab87,edi
  4205e3:	clc    
  4205e4:	sub    eax,ebx
  4205e6:	ss mov esp,0xf37e3601
  4205ec:	sbb    bh,BYTE PTR [esi-0xa0cc3ab]
  4205f2:	fld    st(1)
  4205f4:	test   DWORD PTR [esi+0x1b],esi
  4205f7:	sub    esi,DWORD PTR [edi+ebx*8]
  4205fa:	repnz pusha 
  4205fc:	xchg   ebx,eax
  4205fe:	ja     0x420602
  420600:	adc    eax,0x13a19142
  420605:	dec    esp
  420606:	test   DWORD PTR [edx],esi
  420608:	sbb    dl,ah
  42060a:	mov    gs,WORD PTR [ecx+0x720bb828]
  420610:	push   ebx
  420611:	sbb    BYTE PTR ds:0xb83b9e88,0x32
  420618:	bound  ebp,QWORD PTR [edi+0x52]
  42061b:	or     edi,DWORD PTR [eax-0x21]
  42061e:	inc    esi
  42061f:	sbb    eax,0x60daf6e8
  420624:	jecxz  0x4205de
  420626:	xchg   edi,eax
  420627:	out    dx,al
  420628:	xchg   edx,eax
  420629:	lahf   
  42062a:	add    ebx,DWORD PTR [edx+ebp*2-0x6f]
  42062e:	fild   WORD PTR [ebx]
  420630:	aaa    
  420631:	pushf  
  420632:	rol    dl,0x62
  420635:	sti    
  420636:	retf   
  420637:	mov    ds:0x8c29f1a4,eax
  42063c:	fcomp  QWORD PTR [edi+0x39e37a8a]
  420642:	mov    dh,0xa4
  420644:	js     0x420681
  420646:	ss xchg esi,eax
  420648:	fwait
  420649:	mov    ecx,0x1168d2d4
  42064e:	retf   
  42064f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420650:	sub    DWORD PTR [edx+0x5d088dd4],eax
  420656:	sti    
  420657:	fbld   TBYTE PTR ss:[edi+0x5099d66b]
  42065e:	(bad)  
  420660:	pop    eax
  420661:	cmp    bl,BYTE PTR [eax+0x11]
  420664:	push   ecx
  420665:	stos   BYTE PTR es:[edi],al
  420666:	inc    esi
  420667:	scas   eax,DWORD PTR es:[edi]
  420668:	loop   0x4206c9
  42066a:	out    0xe8,eax
  42066c:	iret   
  42066d:	adc    BYTE PTR [edi-0x76],dl
  420670:	fcmovnb st,st(6)
  420672:	add    DWORD PTR [ecx+0x39],eax
  420675:	jmp    0x42062a
  420677:	push   ecx
  420678:	in     al,0x76
  42067a:	inc    ecx
  42067b:	mov    BYTE PTR ds:0xcd4d6a40,dl
  420681:	scas   al,BYTE PTR es:[edi]
  420682:	mov    WORD PTR [edi],cs
  420684:	sbb    ecx,DWORD PTR [ecx]
  420686:	mov    ds:0x3eed2216,eax
  42068b:	mov    edi,?
  42068d:	ins    BYTE PTR es:[edi],dx
  42068e:	xor    al,0xc2
  420690:	add    eax,0x3079b2f5
  420695:	sub    dl,cl
  420697:	sub    eax,0xcc83952f
  42069c:	fwait
  42069d:	in     al,dx
  42069e:	jnp    0x4206a6
  4206a0:	fmul   QWORD PTR [edi*2+0x5613b9d5]
  4206a7:	push   eax
  4206a8:	fiadd  DWORD PTR [ebx+0x8]
  4206ab:	call   0xe995:0x13b23ebd
  4206b2:	xor    ebp,DWORD PTR [edx]
  4206b4:	jnp    0x4206c8
  4206b6:	(bad)  
  4206b7:	and    bh,ah
  4206b9:	jmp    0xc5f0234a
  4206be:	iret   
  4206bf:	stos   BYTE PTR es:[edi],al
  4206c0:	push   ebx
  4206c1:	adc    BYTE PTR ds:0xd70a4b3c,0x73
  4206c8:	sub    eax,0x262a00e7
  4206cd:	push   ebp
  4206ce:	bound  ebx,QWORD PTR [edi-0x29]
  4206d1:	xchg   esi,eax
  4206d2:	fdivr  st(4),st
  4206d4:	push   ebp
  4206d5:	inc    edx
  4206d6:	and    eax,0x2240ff9b
  4206db:	in     eax,dx
  4206dc:	in     al,0x8e
  4206de:	cli    
  4206df:	jge    0x4206d4
  4206e1:	lahf   
  4206e2:	and    BYTE PTR [edi-0x79],bl
  4206e5:	sbb    al,0x7b
  4206e7:	and    DWORD PTR [ecx-0x72],ebp
  4206ea:	fdivr  DWORD PTR [esi-0x314cb62]
  4206f0:	mov    bh,0x7d
  4206f2:	adc    bh,BYTE PTR [ebx-0x3af864ca]
  4206f8:	mov    ebx,0x859c466c
  4206fd:	push   ebx
  4206fe:	call   0x636902e1
  420703:	lahf   
  420704:	aam    0x28
  420706:	iret   
  420707:	fild   DWORD PTR [eax-0x166af741]
  42070d:	out    dx,eax
  42070e:	and    eax,0xe35048a6
  420713:	div    BYTE PTR [edx+esi*4]
  420716:	sub    DWORD PTR [eax+edi*4-0x4d17ee0b],ebp
  42071d:	pop    ebp
  42071e:	rol    edi,cl
  420720:	dec    ebp
  420721:	xor    BYTE PTR cs:[edx+0x599f4974],ah
  420728:	add    ch,BYTE PTR [eax+0x38]
  42072b:	scas   al,BYTE PTR es:[edi]
  42072c:	inc    esp
  42072d:	stos   BYTE PTR es:[edi],al
  42072e:	sbb    BYTE PTR [esi+0x55b06888],ch
  420734:	(bad)  
  420736:	pop    esi
  420737:	adc    ah,BYTE PTR [esi+0x605100a4]
  42073d:	sub    bl,0xfc
  420740:	fbstp  TBYTE PTR [ecx+0x6cab3e68]
  420746:	jg     0x4206d2
  420748:	nop
  420749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42074a:	pop    edi
  42074b:	in     eax,0x9a
  42074d:	sbb    BYTE PTR [ebp+0x762e7379],ah
  420753:	lahf   
  420754:	(bad)  
  420755:	je     0x4206e1
  420757:	xchg   ebx,eax
  420758:	leave  
  420759:	ds sbb bh,ah
  42075c:	(bad)  
  42075d:	leave  
  42075e:	scas   al,BYTE PTR es:[edi]
  42075f:	mov    ebx,ecx
  420761:	push   ebp
  420762:	loope  0x4206ee
  420764:	dec    ebp
  420765:	fwait
  420766:	daa    
  420767:	int    0x84
  420769:	sub    al,0xed
  42076b:	jp     0x4207db
  42076d:	xor    al,0xcf
  42076f:	push   ss
  420770:	mov    esi,edi
  420772:	pop    edx
  420773:	xor    ah,0xa4
  420776:	mov    bh,0x48
  420778:	pop    ds
  420779:	jge    0x42077b
  42077b:	(bad)  
  42077c:	jae    0x420797
  42077e:	mov    ebp,0xe91b3516
  420783:	(bad)  
  420784:	ror    BYTE PTR [edx-0x79c78491],1
  42078a:	iret   
  42078b:	jg     0x420741
  42078d:	jmp    0x76ccb3d2
  420792:	dec    ebx
  420793:	rol    DWORD PTR [edx],0x7a
  420796:	jle    0x42076c
  420798:	xor    ebp,ebp
  42079a:	pop    eax
  42079b:	mov    eax,ds:0x8371079d
  4207a0:	fldcw  WORD PTR [edx+ebx*2-0x586ba4ed]
  4207a7:	into   
  4207a8:	pop    es
  4207a9:	sbb    DWORD PTR [ebp+ebx*1+0x40],edx
  4207ad:	push   ds
  4207ae:	test   eax,0x380084cb
  4207b3:	repnz fsubr st,st(5)
  4207b6:	dec    esi
  4207b7:	les    esp,FWORD PTR [ecx]
  4207b9:	push   edx
  4207ba:	out    0x92,al
  4207bc:	mov    ds:0x6d412df4,al
  4207c1:	jb     0x4207f8
  4207c3:	(bad)  
  4207c5:	jmp    0xbc1afb9e
  4207ca:	xchg   edx,eax
  4207cb:	adc    al,0x66
  4207cd:	icebp  
  4207ce:	and    ah,BYTE PTR ds:0xf61720c7
  4207d4:	xchg   edx,esi
  4207d6:	and    al,0x3b
  4207d8:	mov    ecx,0x50f114c2
  4207dd:	sub    ebp,edi
  4207df:	cmp    DWORD PTR [esi],0xf1bdd9d5
  4207e5:	adc    al,0x20
  4207e7:	mov    dh,0xc
  4207e9:	mov    ecx,0xa3260f7d
  4207ee:	or     al,0xe5
  4207f0:	mov    esi,0xb3fc8ac2
  4207f5:	cmove  edx,DWORD PTR [ebp-0x5d]
  4207f9:	arpl   bp,si
  4207fb:	cmp    BYTE PTR [ebp-0x47c14873],al
  420801:	jg     0x42082b
  420803:	mov    eax,0x9e973719
  420808:	ret    
  420809:	rol    DWORD PTR [edx-0x54],cl
  42080c:	fs pop esp
  42080e:	jle    0x4207f1
  420810:	sbb    dh,cl
  420812:	sub    eax,0xc0b4de2c
  420817:	mov    ds:0x4ef0f4d8,al
  42081c:	loopne 0x4207c8
  42081e:	retf   
  42081f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420820:	fldenv [ecx]
  420822:	adc    eax,0x21027df7
  420827:	js     0x420887
  420829:	push   ecx
  42082a:	mov    ebp,0xf8997458
  42082f:	xor    al,0x71
  420831:	sub    eax,0xefec2c5a
  420836:	loop   0x4208b6
  420838:	out    dx,eax
  420839:	adc    al,0x68
  42083b:	inc    ebp
  42083c:	test   al,0xa3
  42083e:	pop    esp
  42083f:	or     al,0x8a
  420841:	mov    DWORD PTR [ecx],0x39b3851c
  420847:	adc    DWORD PTR [ecx-0x5b883079],0xffffffda
  42084e:	mov    dh,0x87
  420850:	sub    DWORD PTR [edi-0x76c5a3f3],ebp
  420856:	mov    ch,0xab
  420858:	mov    WORD PTR [ebx],ss
  42085a:	scas   eax,DWORD PTR es:[edi]
  42085b:	sbb    al,0xbb
  42085d:	mov    ds:0xe409eb3a,eax
  420862:	in     al,dx
  420863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420864:	mov    dl,0xe1
  420866:	mov    ah,0x70
  420868:	pop    esi
  420869:	jnp    0x4208b6
  42086b:	mov    esp,eax
  42086d:	pusha  
  42086e:	adc    al,0x98
  420870:	pop    eax
  420871:	xchg   esp,eax
  420872:	mov    ch,0x46
  420874:	pop    es
  420875:	fdivp  st(2),st
  420877:	sbb    dh,BYTE PTR [edx-0x2dff2aa6]
  42087d:	push   DWORD PTR [esi+esi*4]
  420880:	or     eax,0x76a8222
  420885:	cmp    DWORD PTR [edx+0x37],edx
  420888:	pop    ecx
  420889:	mov    esp,0xece5bf00
  42088e:	adc    DWORD PTR [edx-0x17],eax
  420891:	cmp    DWORD PTR [ebx],0x29
  420894:	pushf  
  420895:	or     cl,BYTE PTR ss:[edx+0x3f]
  420899:	fwait
  42089a:	mov    esp,0x5154ed07
  42089f:	or     edi,DWORD PTR [edi]
  4208a1:	leave  
  4208a2:	cwde   
  4208a3:	or     dh,BYTE PTR [ebx+0x6]
  4208a6:	fisubr DWORD PTR [ebp-0x466806e7]
  4208ac:	add    BYTE PTR [edi],dh
  4208ae:	mov    ch,0x70
  4208b0:	shr    BYTE PTR [edi-0x65],0xc9
  4208b4:	sbb    al,0xfd
  4208b6:	(bad)  
  4208b7:	jp     0x420906
  4208b9:	pushf  
  4208ba:	adc    DWORD PTR [edx+eiz*2+0x62],ebx
  4208be:	je     0x420858
  4208c0:	iret   
  4208c1:	lds    ebp,FWORD PTR [eax-0x69]
  4208c4:	shr    ebx,cl
  4208c6:	cmp    DWORD PTR [edi],eax
  4208c8:	(bad)  
  4208c9:	pop    eax
  4208ca:	rol    BYTE PTR [esi+0x22fb6f22],cl
  4208d0:	cmp    DWORD PTR [ebp-0x46],ebx
  4208d3:	test   BYTE PTR [ecx],0x19
  4208d6:	mov    BYTE PTR [edi-0x6a1f3680],0xc2
  4208dd:	mov    cl,0x19
  4208df:	pop    eax
  4208e0:	cld    
  4208e1:	inc    edi
  4208e2:	inc    esp
  4208e3:	mov    eax,ds:0x711fb0d9
  4208e8:	(bad)  
  4208e9:	data16 jecxz 0x420940
  4208ec:	enter  0xb18c,0xa5
  4208f0:	mov    ebp,0x151429eb
  4208f5:	inc    ebp
  4208f6:	arpl   ax,cx
  4208f8:	jno    0x4208cf
  4208fa:	test   BYTE PTR [eax],bl
  4208fc:	scas   eax,DWORD PTR es:[edi]
  4208fd:	es add eax,0x339bd6a5
  420903:	push   edx
  420904:	shl    DWORD PTR [edi-0x78c689ba],0x97
  42090b:	mov    ecx,0xd18591d6
  420910:	xchg   ebp,eax
  420911:	or     DWORD PTR [eax+edi*2],esp
  420914:	ret    
  420915:	js     0x420898
  420917:	cmc    
  420918:	scas   eax,DWORD PTR es:[edi]
  420919:	inc    ecx
  42091a:	ja     0x4208a5
  42091c:	shr    DWORD PTR [eax-0x4a6790f8],0xb0
  420923:	lea    edx,[eax+0x54ddeb80]
  420929:	in     al,dx
  42092a:	aad    0xa1
  42092c:	cmp    bl,BYTE PTR [esi+eiz*4+0x4d0a4767]
  420933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420934:	jmp    0x420924
  420936:	sub    BYTE PTR cs:[eax],bl
  420939:	or     eax,DWORD PTR [edx]
  42093b:	or     edx,eax
  42093d:	sbb    al,0xc2
  42093f:	test   dl,0x52
  420942:	xor    al,0x3c
  420944:	or     eax,esi
  420946:	lock add al,0x1b
  420949:	sar    BYTE PTR [esi-0xa],cl
  42094c:	loope  0x4208f5
  42094e:	outs   dx,BYTE PTR ds:[esi]
  42094f:	mov    esp,DWORD PTR ds:0x920e1db0
  420955:	or     al,0x65
  420957:	imul   ecx,DWORD PTR [ebx],0xffffff98
  42095a:	mov    ds:0x1a747f31,eax
  42095f:	dec    ebp
  420960:	inc    esp
  420961:	xor    edx,ebp
  420963:	imul   ebx,DWORD PTR [ebx-0x5f],0x85008479
  42096a:	xchg   BYTE PTR [edx-0xd51c707],bh
  420970:	xchg   esp,eax
  420971:	cmp    bh,dh
  420973:	and    ebx,DWORD PTR [ebp+0x2421df0e]
  420979:	jg     0x420966
  42097b:	push   ebp
  42097c:	sar    BYTE PTR [edi],cl
  42097e:	cmp    BYTE PTR [edx-0x1d649987],ch
  420984:	loopne 0x4209ad
  420986:	push   ebp
  420987:	push   esp
  420988:	inc    ecx
  420989:	cmp    eax,0x68ab82c0
  42098e:	inc    esp
  42098f:	imul   esp,DWORD PTR [ebx],0x2f
  420992:	retf   
  420993:	or     BYTE PTR [ebx-0xf],ch
  420996:	mov    bh,0x5
  420998:	add    eax,0xa2478282
  42099d:	jge    0x420a03
  42099f:	mov    ecx,0x44bf296a
  4209a4:	ja     0x4209ea
  4209a6:	dec    esi
  4209a7:	into   
  4209a8:	adc    ecx,DWORD PTR [ebx-0x12]
  4209ab:	call   0xa8eb851
  4209b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b1:	retf   
  4209b2:	enter  0xf03a,0x3d
  4209b6:	outs   dx,BYTE PTR ds:[esi]
  4209b7:	jge    0x42098b
  4209b9:	push   eax
  4209ba:	test   DWORD PTR [esi+0x61494c63],eax
  4209c0:	cmp    DWORD PTR [eax-0x56a0ca33],edx
  4209c6:	in     al,0x55
  4209c8:	and    cl,0x30
  4209cb:	or     bh,BYTE PTR [eax-0x71b60a41]
  4209d1:	test   al,0x7b
  4209d3:	cmp    eax,0xd344a669
  4209d8:	cmp    edx,edi
  4209da:	pushf  
  4209db:	add    BYTE PTR [edi-0x1a],0xe2
  4209df:	mov    WORD PTR [edi+0x75d5df24],gs
  4209e5:	psraw  mm4,QWORD PTR [ebx-0x231b068d]
  4209ec:	xchg   DWORD PTR [esi],esi
  4209ee:	dec    ecx
  4209ef:	sbb    DWORD PTR [edx],ebp
  4209f1:	(bad)
  4209f4:	out    dx,eax
  4209f5:	mov    DWORD PTR [edx+ebx*1+0x49],edx
  4209f9:	ins    BYTE PTR es:[edi],dx
  4209fa:	retf   
  4209fb:	daa    
  4209fc:	sbb    eax,DWORD PTR [eax]
  4209fe:	out    dx,al
  4209ff:	dec    edx
  420a00:	les    esi,FWORD PTR [ecx+eax*8-0x1253d15e]
  420a07:	xchg   BYTE PTR [ebp+0xe],bl
  420a0a:	dec    ebx
  420a0b:	ins    DWORD PTR es:[edi],dx
  420a0c:	pop    ds
  420a0d:	pop    ecx
  420a0e:	sti    
  420a0f:	pushf  
  420a10:	xchg   BYTE PTR [edi+0x19],cl
  420a13:	je     0x42099b
  420a15:	xor    dh,BYTE PTR [ebx+0x6022156d]
  420a1b:	ins    BYTE PTR es:[edi],dx
  420a1c:	and    DWORD PTR [ebp-0x35f92001],ebx
  420a22:	jmp    0x420a7e
  420a24:	jnp    0x420a23
  420a26:	retf   0xfd1a
  420a29:	daa    
  420a2a:	pop    ebp
  420a2b:	shr    BYTE PTR [esi-0x24],0x8f
  420a2f:	ja     0x420a10
  420a31:	sbb    bh,BYTE PTR [edx-0x28]
  420a34:	xor    DWORD PTR [ebx+0x1b],ebx
  420a37:	inc    edi
  420a38:	cmp    bl,cl
  420a3a:	mov    bh,ch
  420a3c:	xor    DWORD PTR [eax+0x7db3367],0x65f6b326
  420a46:	(bad)  
  420a47:	repnz dec esi
  420a49:	jp     0x420a9a
  420a4b:	in     al,dx
  420a4c:	test   cl,dh
  420a4e:	into   
  420a4f:	mov    edx,0x6545c8e6
  420a54:	lods   eax,DWORD PTR ds:[esi]
  420a55:	mov    bh,0x28
  420a57:	or     esi,DWORD PTR ss:[esi]
  420a5a:	cli    
  420a5b:	xor    dl,BYTE PTR [ebx-0x4e76ec2c]
  420a61:	xchg   esi,eax
  420a62:	fwait
  420a63:	fwait
  420a64:	rcl    DWORD PTR [esi],0x9f
  420a67:	jmp    0x74cc:0x7ae1d988
  420a6e:	mov    bh,BYTE PTR [eax-0x37]
  420a71:	mov    al,ds:0x84c4f5fa
  420a76:	and    ebp,edx
  420a78:	cld    
  420a79:	shr    BYTE PTR [esi-0x2f9e0541],0x99
  420a80:	mov    al,0x51
  420a82:	ds enter 0xbd1a,0xa1
  420a87:	push   cs
  420a88:	sbb    eax,0xb329419d
  420a8d:	sbb    DWORD PTR [edx],ebp
  420a8f:	adc    eax,0x9bc09b65
  420a94:	dec    eax
  420a95:	push   0x7a
  420a97:	pop    ebx
  420a98:	adc    dh,dl
  420a9a:	and    eax,0x37dc8827
  420a9f:	pop    eax
  420aa0:	pop    ecx
  420aa1:	retf   0x3082
  420aa4:	push   es
  420aa5:	cmp    DWORD PTR [ebx],ebx
  420aa7:	mov    eax,ds:0x859c507e
  420aac:	(bad)  
  420aad:	adc    al,0x86
  420aaf:	jbe    0x420a3e
  420ab1:	dec    ecx
  420ab2:	ja     0x420ae1
  420ab4:	fsubr  DWORD PTR [edx+eax*1+0x7708f000]
  420abb:	sub    edx,eax
  420abd:	ror    al,0xae
  420ac0:	shl    BYTE PTR [eax+0x4ffa98e8],cl
  420ac6:	ret    0xce5c
  420ac9:	cwde   
  420aca:	in     al,dx
  420acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420acc:	jl     0x420b26
  420ace:	mov    edx,0x70608dbc
  420ad3:	sub    eax,esi
  420ad5:	mov    dl,0x6d
  420ad7:	add    ecx,edx
  420ad9:	adc    ecx,DWORD PTR cs:[ecx-0x36]
  420add:	xor    al,0xc
  420adf:	jne    0x420b0a
  420ae1:	and    al,0x29
  420ae3:	mov    bl,0x4
  420ae5:	dec    ecx
  420ae6:	test   al,0x7c
  420ae8:	addr16 dec edx
  420aea:	push   esi
  420aeb:	add    DWORD PTR [ebx-0x3df1c7d3],ebp
  420af1:	or     BYTE PTR [edi],cl
  420af3:	add    ebp,DWORD PTR [ecx+0x5a]
  420af6:	cld    
  420af7:	xor    edi,DWORD PTR [ecx+0x760e24df]
  420afd:	mov    edx,ss
  420aff:	add    DWORD PTR [ebp+0x5b],ebx
  420b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b03:	and    esi,ebp
  420b05:	test   BYTE PTR [esp+edi*1],bl
  420b08:	(bad)  
  420b0a:	aam    0x20
  420b0c:	push   ebx
  420b0d:	adc    ebp,eax
  420b0f:	cmp    al,0x8e
  420b11:	nop
  420b12:	push   eax
  420b13:	in     al,dx
  420b14:	loopne 0x420af6
  420b16:	add    bl,BYTE PTR [eax-0x32b5190d]
  420b1c:	leave  
  420b1d:	mov    edi,0x84428291
  420b22:	das    
  420b23:	jmp    0x178bea37
  420b28:	int3   
  420b29:	xor    DWORD PTR [ebx],eax
  420b2b:	pushf  
  420b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b2d:	mov    edi,0xe6d22660
  420b32:	(bad)  
  420b33:	fistp  QWORD PTR [ecx]
  420b35:	push   ebx
  420b36:	sub    al,0xa8
  420b38:	mov    al,0x10
  420b3a:	sub    cl,BYTE PTR ds:[ecx]
  420b3d:	and    BYTE PTR [ebp-0x4d],cl
  420b40:	dec    ecx
  420b41:	data16 jg 0x420b59
  420b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b45:	sti    
  420b46:	dec    ebx
  420b47:	clc    
  420b48:	outs   dx,DWORD PTR ds:[esi]
  420b49:	pushf  
  420b4a:	push   es
  420b4b:	add    ebx,DWORD PTR [ebp+esi*8+0x7fb89820]
  420b52:	std    
  420b53:	inc    edx
  420b54:	push   ss
  420b55:	xor    eax,0x9f15495
  420b5a:	jns    0x420b66
  420b5c:	sar    cl,0xb1
  420b5f:	or     bh,0x80
  420b62:	gs pop es
  420b64:	xor    eax,0x6c039d9
  420b69:	pop    ds
  420b6a:	dec    ebx
  420b6b:	(bad)  
  420b6c:	and    al,0xfa
  420b6e:	jl     0x420b4f
  420b70:	lods   al,BYTE PTR ds:[esi]
  420b71:	sysexit 
  420b73:	stos   BYTE PTR es:[edi],al
  420b74:	in     al,0x83
  420b76:	or     ecx,DWORD PTR [eax-0x50]
  420b79:	cmp    DWORD PTR [edi+0x3212b09e],ecx
  420b7f:	into   
  420b80:	ja     0x420bf2
  420b82:	loope  0x420b3d
  420b84:	pusha  
  420b85:	jge    0x420bcc
  420b87:	aas    
  420b88:	dec    esi
  420b89:	fldcw  WORD PTR [ecx+0x21929fad]
  420b8f:	push   ss
  420b90:	sub    BYTE PTR [ecx+0x5],ch
  420b93:	sahf   
  420b94:	jmp    0x420b76
  420b96:	hlt    
  420b97:	push   es
  420b98:	jle    0x420c03
  420b9a:	add    al,0x8f
  420b9c:	sbb    eax,DWORD PTR [edi]
  420b9e:	adc    edi,DWORD PTR [ecx]
  420ba0:	in     al,dx
  420ba1:	cmp    al,0x95
  420ba3:	cmp    esp,DWORD PTR [eax]
  420ba5:	xor    al,0xdc
  420ba7:	mov    dl,0xbc
  420ba9:	cpuid  
  420bab:	imul   BYTE PTR [ecx]
  420bad:	rcl    BYTE PTR [edx],1
  420baf:	and    eax,0x50bb4891
  420bb4:	fwait
  420bb5:	mov    ch,BYTE PTR [edi+0x4]
  420bb8:	adc    esp,DWORD PTR [esp+esi*8-0x67]
  420bbc:	and    dh,BYTE PTR [eax-0x758325d3]
  420bc2:	std    
  420bc3:	pushf  
  420bc4:	test   al,0x9
  420bc6:	fstp   QWORD PTR [edx-0x1495f105]
  420bcc:	dec    ebx
  420bcd:	data16 adc al,0xd2
  420bd0:	cwde   
  420bd1:	mov    al,0x79
  420bd3:	sbb    al,0x87
  420bd5:	into   
  420bd6:	jns    0x420bef
  420bd8:	mov    ebx,DWORD PTR [eax+0x3a]
  420bdb:	test   eax,0x500b60c8
  420be0:	xchg   ebx,eax
  420be1:	xchg   BYTE PTR [edx],bh
  420be3:	mov    ecx,0x23bb5b0f
  420be8:	and    dl,BYTE PTR [ecx+ebx*8+0x2c26213e]
  420bef:	inc    esp
  420bf0:	jae    0x420ba5
  420bf2:	lods   eax,DWORD PTR ds:[esi]
  420bf3:	jl     0x420c05
  420bf5:	sbb    DWORD PTR [eax-0x6a],ebx
  420bf8:	cmp    eax,0x65bf4886
  420bfd:	sbb    al,0x14
  420bff:	push   ss
  420c00:	and    eax,edi
  420c02:	nop
  420c03:	cs pop edi
  420c05:	sub    esp,DWORD PTR [esi-0x2]
  420c08:	icebp  
  420c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c0a:	aas    
  420c0b:	push   esi
  420c0c:	add    cl,bl
  420c0e:	enter  0x1eec,0x72
  420c12:	sub    al,0x69
  420c14:	fistp  WORD PTR [ecx-0x3f]
  420c17:	ins    DWORD PTR es:[edi],dx
  420c18:	sahf   
  420c19:	push   ebp
  420c1a:	jmp    0x415b679a
  420c1f:	nop
  420c20:	lods   al,BYTE PTR ds:[esi]
  420c21:	into   
  420c22:	mov    ecx,0x879d6e41
  420c27:	bound  ebx,QWORD PTR [edx-0x1da2332f]
  420c2d:	xchg   bh,ch
  420c2f:	retf   0xdd49
  420c32:	dec    edi
  420c33:	jbe    0x420bff
  420c35:	xchg   ebp,eax
  420c36:	sbb    BYTE PTR [ebp-0x49],0x47
  420c3a:	mov    dh,0x61
  420c3c:	stc    
  420c3d:	call   0xe38e4098
  420c42:	cmp    dh,BYTE PTR [esp+ebp*8+0x5d4234bd]
  420c49:	inc    eax
  420c4a:	outs   dx,BYTE PTR ds:[esi]
  420c4b:	pop    ss
  420c4c:	xchg   edi,eax
  420c4d:	dec    edx
  420c4e:	inc    eax
  420c4f:	sub    BYTE PTR [ecx+0x42],cl
  420c52:	dec    edi
  420c53:	add    al,0x22
  420c55:	mov    BYTE PTR [esi+0x5e],al
  420c58:	push   esp
  420c59:	call   0xb1d5:0x9b575559
  420c60:	(bad)  
  420c61:	into   
  420c62:	mov    al,ds:0xa9b09ff6
  420c67:	ret    
  420c68:	jl     0x420c90
  420c6a:	ds loopne 0x420c1a
  420c6d:	imul   esi,ecx,0x12774395
  420c73:	fwait
  420c74:	imul   ebp,ebp,0xd659d7bf
  420c7a:	dec    esi
  420c7b:	dec    edi
  420c7c:	cdq    
  420c7d:	inc    eax
  420c7e:	cmp    eax,0xe103d5cb
  420c83:	les    ecx,FWORD PTR [edi-0x40f713a2]
  420c89:	dec    ebx
  420c8a:	jl     0x420c64
  420c8c:	lods   al,BYTE PTR ds:[esi]
  420c8d:	pop    esp
  420c8e:	mov    ebx,0x594c1044
  420c93:	fimul  DWORD PTR [ebp+eiz*1-0xb0c0ffe]
  420c9a:	xor    bl,BYTE PTR [ebx+0x23d2a78f]
  420ca0:	inc    ecx
  420ca1:	push   0x71867ec7
  420ca6:	push   edi
  420ca7:	mov    esp,0x421604a
  420cac:	iret   
  420cad:	fwait
  420cae:	mov    ah,0x53
  420cb0:	xor    eax,0x3137bc82
  420cb5:	fs push eax
  420cb7:	sub    BYTE PTR ds:0x318264,bh
  420cbd:	inc    ebp
  420cbe:	stc    
  420cbf:	(bad)  
  420cc1:	aas    
  420cc2:	jns    0x420c99
  420cc4:	add    esp,DWORD PTR [edi-0x36841e85]
  420cca:	arpl   WORD PTR [edx+edx*1-0x59e61070],di
  420cd1:	mov    ds:0x1682bbeb,eax
  420cd6:	adc    BYTE PTR [ecx-0x6d],dh
  420cd9:	push   es
  420cda:	hlt    
  420cdb:	or     edx,DWORD PTR [ecx-0xd]
  420cde:	mov    edx,0xe69c8e1d
  420ce3:	fbld   TBYTE PTR [edx-0x53578adf]
  420ce9:	xchg   edx,eax
  420cea:	mov    BYTE PTR [ebx+eax*4+0x6a22a504],bh
  420cf1:	outs   dx,DWORD PTR ds:[esi]
  420cf2:	js     0x420cbc
  420cf4:	mov    ecx,0xa4d0146f
  420cf9:	jno    0x420d66
  420cfb:	js     0x420c8a
  420cfd:	jb     0x420d73
  420cff:	ins    DWORD PTR es:[edi],dx
  420d00:	adc    eax,DWORD PTR [eax+0x61]
  420d03:	retf   
  420d04:	mov    ebx,ecx
  420d06:	lds    ecx,FWORD PTR [eax+0x8921e17]
  420d0c:	out    dx,al
  420d0d:	lea    ebp,[esi+0x382bcde]
  420d13:	fcom   DWORD PTR [edx]
  420d15:	ins    DWORD PTR es:[edi],dx
  420d16:	hlt    
  420d17:	retf   
  420d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d1a:	ja     0x420d18
  420d1c:	nop
  420d1d:	sub    al,0x9b
  420d1f:	push   es
  420d20:	in     al,0x7c
  420d22:	test   BYTE PTR [ebx],0xec
  420d25:	inc    esi
  420d26:	fild   DWORD PTR [ebx]
  420d28:	xor    DWORD PTR [edx-0x20],edi
  420d2b:	sub    DWORD PTR [ecx],ecx
  420d2d:	inc    esp
  420d2e:	cmp    al,0xe3
  420d30:	mov    ds:0xc37777ae,eax
  420d35:	sub    bh,BYTE PTR [ebx]
  420d37:	lahf   
  420d38:	jle    0x420d6d
  420d3a:	inc    ebx
  420d3b:	adc    eax,0x7244c99
  420d40:	ror    esp,1
  420d42:	inc    esp
  420d43:	bound  eax,QWORD PTR [eax-0x3a]
  420d46:	jns    0x420d52
  420d48:	repz cmp al,ah
  420d4b:	iret   
  420d4c:	ror    DWORD PTR [edx],1
  420d4e:	aam    0x7b
  420d50:	out    0x5a,eax
  420d52:	xchg   esp,eax
  420d53:	cmp    bl,bh
  420d55:	in     eax,0xe9
  420d57:	(bad)  
  420d58:	cli    
  420d59:	mov    bh,0x5
  420d5b:	rcr    ah,cl
  420d5d:	cdq    
  420d5e:	ja     0x420ce4
  420d60:	sub    eax,ecx
  420d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d63:	je     0x420da1
  420d65:	ins    BYTE PTR es:[edi],dx
  420d66:	lea    esp,[edx-0x410b015d]
  420d6c:	fdivr  DWORD PTR [esi-0x1909d116]
  420d72:	dec    esi
  420d73:	(bad)  
  420d74:	jmp    0x17a5b85
  420d79:	out    dx,al
  420d7a:	inc    edi
  420d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d7c:	in     eax,0xe2
  420d7e:	add    eax,0x8ad2a71
  420d83:	jo     0x420d6e
  420d85:	cld    
  420d86:	mov    eax,ds:0x86fbca1f
  420d8b:	sar    BYTE PTR [esi+0x3fead498],cl
  420d91:	sub    edi,DWORD PTR [ebp-0xad8ec20]
  420d97:	add    al,0xaa
  420d99:	xor    esp,ecx
  420d9b:	enter  0xaf26,0xfe
  420d9f:	pushf  
  420da0:	in     eax,dx
  420da1:	test   BYTE PTR [ebp-0x85140ee],0x80
  420da8:	dec    ecx
  420da9:	les    esi,FWORD PTR [esp+edx*4-0x69]
  420dad:	stc    
  420dae:	pushf  
  420daf:	xchg   ebx,eax
  420db0:	ficomp WORD PTR [esi+esi*2+0x7d]
  420db4:	retf   
  420db5:	leave  
  420db6:	and    BYTE PTR [esi-0x64b5dabb],dh
  420dbc:	leave  
  420dbd:	stc    
  420dbe:	mov    ds:0x13d4f454,eax
  420dc3:	sbb    eax,0xeea36246
  420dc8:	out    0x45,al
  420dca:	ins    DWORD PTR es:[edi],dx
  420dcb:	addr16 push edx
  420dcd:	mov    bh,0x9d
  420dcf:	and    edx,esp
  420dd1:	xchg   ebp,eax
  420dd2:	sub    bh,cl
  420dd4:	add    al,0x2a
  420dd6:	mov    dl,bl
  420dd8:	cmp    DWORD PTR [edi],ebp
  420dda:	or     dh,BYTE PTR [edi-0x2ace636f]
  420de0:	int    0xe6
  420de2:	sub    cl,al
  420de4:	scas   al,BYTE PTR es:[edi]
  420de5:	push   ebx
  420de6:	fs push ecx
  420de8:	fwait
  420de9:	cmp    eax,0xb55d1d94
  420dee:	xchg   edx,eax
  420def:	or     BYTE PTR [ecx-0x7c],bl
  420df2:	xchg   edi,eax
  420df3:	fisub  DWORD PTR [edx+ecx*1+0x20148245]
  420dfa:	inc    eax
  420dfb:	push   es
  420dfc:	leave  
  420dfd:	pop    ss
  420dfe:	cmp    eax,0x5a9cd160
  420e03:	push   0xffffff82
  420e05:	and    BYTE PTR [edx+0x1391986a],0x43
  420e0c:	aaa    
  420e0d:	jge    0x420e1b
  420e0f:	int    0x21
  420e11:	sahf   
  420e12:	adc    edx,0x4
  420e15:	arpl   si,sp
  420e17:	jns    0x420dae
  420e19:	daa    
  420e1a:	cmp    dl,al
  420e1c:	test   eax,0xba722f7b
  420e21:	pop    es
  420e22:	adc    bh,cl
  420e24:	(bad)  
  420e25:	inc    ebp
  420e26:	call   0x3b98:0xc5211d85
  420e2d:	adc    BYTE PTR [esi],cl
  420e2f:	xchg   ebp,eax
  420e30:	es iret 
  420e32:	call   0x55f49312
  420e37:	out    0x7d,al
  420e39:	push   ebx
  420e3a:	xchg   ebp,eax
  420e3b:	into   
  420e3c:	ret    0x1cbf
  420e3f:	iret   
  420e40:	xlat   BYTE PTR ds:[ebx]
  420e41:	js     0x420e5f
  420e43:	sar    DWORD PTR [ecx],1
  420e45:	daa    
  420e46:	call   0xf77c:0x90507bda
  420e4d:	add    ch,BYTE PTR [ecx]
  420e4f:	adc    ecx,DWORD PTR [esp+ecx*2+0x32]
  420e53:	pop    esi
  420e54:	and    dl,BYTE PTR [esi-0x52]
  420e57:	imul   BYTE PTR [edi-0x74]
  420e5a:	mov    ds:0x9c6cc765,eax
  420e5f:	jns    0x420e7c
  420e61:	ret    
  420e62:	mov    ch,0xcd
  420e64:	popa   
  420e65:	mov    ch,0x4f
  420e67:	sbb    eax,0x14e0d179
  420e6c:	stos   BYTE PTR es:[edi],al
  420e6d:	sahf   
  420e6e:	arpl   WORD PTR [eax+0x20],dx
  420e71:	rcl    dh,0x8f
  420e74:	jmp    0x695b2fa
  420e79:	imul   ebp,DWORD PTR [edx+ecx*1+0xc],0x20a772b
  420e81:	inc    esi
  420e82:	push   ebx
  420e83:	push   ebx
  420e84:	sahf   
  420e85:	push   ebp
  420e86:	mov    ah,bl
  420e88:	inc    edi
  420e89:	ffree  st(7)
  420e8b:	pop    es
  420e8c:	aaa    
  420e8d:	ins    DWORD PTR es:[edi],dx
  420e8e:	push   ebx
  420e8f:	pusha  
  420e90:	jle    0x420e67
  420e92:	lock das 
  420e94:	(bad)  
  420e95:	shr    DWORD PTR [edi-0x6fa7a6f3],cl
  420e9b:	cmp    al,0x78
  420e9d:	shl    DWORD PTR [ebp+0x454bc3bd],cl
  420ea3:	add    DWORD PTR [edi+0x41e08f6b],esi
  420ea9:	call   0x73124e06
  420eae:	add    al,0x26
  420eb0:	popf   
  420eb1:	jmp    0xc3c7f04a
  420eb6:	sti    
  420eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb8:	jmp    0x80e5b8fa
  420ebd:	xor    eax,0x55274569
  420ec2:	pop    ebp
  420ec3:	ror    BYTE PTR [edi+eiz*4-0x6],1
  420ec7:	jge    0x420e49
  420ec9:	inc    eax
  420eca:	inc    edi
  420ecb:	loope  0x420e4e
  420ecd:	(bad)  
  420ece:	xchg   esp,eax
  420ecf:	ret    
  420ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed1:	mov    WORD PTR [ebp-0x1a],es
  420ed4:	add    bl,BYTE PTR [ecx]
  420ed6:	jbe    0x420eb0
  420ed8:	mov    bl,0x39
  420eda:	repz xor esi,esp
  420edd:	cmp    BYTE PTR [edx-0x3c],ch
  420ee0:	retf   0x12a6
  420ee3:	pop    edi
  420ee4:	inc    ebp
  420ee5:	inc    eax
  420ee6:	mov    esp,0x6ed5878b
  420eeb:	or     bh,BYTE PTR [ebp-0x75]
  420eee:	jmp    0x420e93
  420ef0:	cli    
  420ef1:	or     al,0x52
  420ef3:	mov    cl,0x4e
  420ef5:	pop    eax
  420ef6:	mov    ch,0x5d
  420ef8:	dec    ecx
  420ef9:	rcr    ah,cl
  420efb:	(bad)  
  420efc:	out    0x8c,al
  420efe:	inc    edx
  420eff:	pop    esp
  420f00:	mov    DWORD PTR [eax-0x2ae9eb67],ebx
  420f06:	dec    edx
  420f07:	jmp    0x1936:0xa66ad669
  420f0e:	js     0x420f64
  420f10:	aas    
  420f11:	ror    DWORD PTR [edi],cl
  420f13:	sbb    BYTE PTR [eax],bh
  420f15:	(bad)  
  420f16:	stc    
  420f17:	sbb    dl,dl
  420f19:	inc    esp
  420f1a:	fist   WORD PTR [ebp+0x3c]
  420f1d:	call   0xc22b:0xf4b9a1bb
  420f24:	aam    0x46
  420f26:	pop    ebx
  420f27:	mov    esi,0x4a456e12
  420f2c:	fsub   QWORD PTR [esi+0x14]
  420f2f:	stos   DWORD PTR es:[edi],eax
  420f30:	dec    ebp
  420f31:	jmp    0xf1c862c
  420f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f37:	inc    edi
  420f38:	sbb    ebp,DWORD PTR [ebp+0x36920691]
  420f3e:	(bad)  
  420f3f:	cld    
  420f40:	jo     0x420f17
  420f42:	and    al,0xca
  420f44:	mov    ds:0x785f876c,al
  420f49:	ins    DWORD PTR es:[edi],dx
  420f4a:	ret    0x4eb6
  420f4d:	push   ebp
  420f4e:	sti    
  420f4f:	push   esi
  420f50:	sbb    eax,0x94387f1c
  420f55:	jbe    0x420f4d
  420f57:	fadd   st(1),st
  420f59:	mov    al,0x44
  420f5b:	xor    eax,0x4c03edd2
  420f60:	das    
  420f61:	dec    ebx
  420f62:	pusha  
  420f63:	stc    
  420f64:	add    DWORD PTR [edi-0x41415425],ebp
  420f6a:	mov    al,ds:0xde52e950
  420f6f:	retf   
  420f70:	xor    eax,DWORD PTR [edx-0x1dd711e]
  420f76:	xchg   DWORD PTR [ebx-0x66],ebx
  420f79:	xor    al,0x77
  420f7b:	js     0x420fa9
  420f7d:	add    cl,dh
  420f7f:	mov    cl,0x26
  420f81:	or     al,0x7
  420f83:	push   ebp
  420f84:	mov    ah,0xfc
  420f86:	pop    esp
  420f87:	or     al,0x7a
  420f89:	adc    ebx,esi
  420f8b:	mov    eax,ds:0x96929288
  420f90:	dec    esi
  420f91:	pop    ds
  420f92:	xchg   esp,eax
  420f93:	retf   0x952
  420f96:	jbe    0x42100f
  420f98:	mov    cl,0x58
  420f9a:	pop    DWORD PTR [edi+0x5c]
  420f9d:	push   ebx
  420f9e:	shl    BYTE PTR [ebx-0x26cddb17],1
  420fa4:	mov    dl,0x67
  420fa6:	into   
  420fa7:	dec    edi
  420fa8:	and    eax,DWORD PTR [edx+ebx*8]
  420fab:	aam    0x69
  420fad:	dec    edi
  420fae:	pop    edi
  420faf:	mov    al,0x30
  420fb1:	xor    BYTE PTR [edx-0x75],0x7d
  420fb5:	loopne 0x420fad
  420fb7:	fild   WORD PTR [ecx+0x2cb10b8f]
  420fbd:	xchg   BYTE PTR [ebx-0x3d],ah
  420fc0:	call   0x8297af5b
  420fc5:	inc    ebx
  420fc6:	loope  0x420fba
  420fc8:	jno    0x420fa8
  420fca:	in     eax,dx
  420fcb:	jns    0x420fec
  420fcd:	add    BYTE PTR fs:[ebp+0x2b],0x9d
  420fd2:	outs   dx,DWORD PTR ds:[esi]
  420fd3:	sti    
  420fd4:	cmp    BYTE PTR [ecx+0x5645cefe],cl
  420fda:	enter  0xb316,0x66
  420fde:	cmc    
  420fdf:	xchg   DWORD PTR [ecx-0x5390ce8c],eax
  420fe5:	outs   dx,DWORD PTR ds:[esi]
  420fe6:	pushf  
  420fe7:	fistp  WORD PTR [ecx-0x49]
  420fea:	or     cl,BYTE PTR [edi-0x709a129d]
  420ff0:	(bad)  [ebx+0x61]
  420ff3:	ss in  al,0x29
  420ff6:	rcr    DWORD PTR [ecx],cl
  420ff8:	imul   edx,DWORD PTR [edx+0x172c832e],0x18
  420fff:	fs call 0x2e6:0x5c5b75
  421007:	scas   al,BYTE PTR es:[edi]
  421008:	lahf   
  421009:	sub    ebp,DWORD PTR [edi-0x3b]
  42100c:	arpl   WORD PTR [edi+edi*8],bp
  42100f:	mov    ecx,0x5a5e506f
  421014:	cmc    
  421015:	stos   BYTE PTR es:[edi],al
  421016:	xor    al,0x95
  421018:	inc    ebx
  421019:	sti    
  42101a:	pop    eax
  42101b:	push   eax
  42101c:	and    DWORD PTR ss:[esi],ecx
  42101f:	pop    ss
  421020:	xor    ecx,ebx
  421022:	clc    
  421023:	cmp    BYTE PTR [ebx-0x49],dh
  421026:	xor    ebx,DWORD PTR [eax+0x71fa8ff5]
  42102c:	not    ah
  42102e:	fcmovu st,st(2)
  421030:	hlt    
  421031:	mov    eax,0x18c6f7a3
  421036:	test   al,0x76
  421038:	sub    ebp,esp
  42103a:	sbb    al,0xb4
  42103c:	dec    esp
  42103d:	sahf   
  42103e:	mov    ecx,0x554fe7e5
  421043:	cmp    DWORD PTR [esi],esp
  421045:	mov    ss,WORD PTR [ecx]
  421047:	adc    DWORD PTR [edx-0x36],ebp
  42104a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42104b:	addr16 cmp al,0xa6
  42104e:	out    dx,eax
  42104f:	scas   al,BYTE PTR es:[edi]
  421050:	mov    edx,ss
  421052:	add    al,0xa9
  421054:	mov    al,0x55
  421056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421057:	add    DWORD PTR [ecx+esi*8-0x360c6076],edi
  42105e:	(bad)  
  42105f:	in     eax,0x4c
  421061:	and    al,0xb0
  421063:	pop    ebp
  421064:	or     eax,0x53465863
  421069:	cmp    ecx,DWORD PTR [ebx+edi*1+0x2d3553da]
  421070:	and    BYTE PTR [edi-0x3d3d71d1],bh
  421076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421077:	add    bh,bl
  421079:	fwait
  42107a:	(bad)  
  42107b:	out    0xd3,eax
  42107d:	pop    ebp
  42107e:	stc    
  42107f:	xchg   ecx,eax
  421080:	xchg   DWORD PTR [ecx-0x14],eax
  421083:	or     DWORD PTR [esi+0x6b536621],eax
  421089:	jnp    0x4210ff
  42108b:	xchg   ecx,eax
  42108c:	lds    eax,FWORD PTR [edx+0x59a9245a]
  421092:	cwde   
  421093:	int3   
  421094:	ja     0x4210ef
  421096:	mov    eax,ds:0x34a088c0
  42109b:	mov    bh,0x48
  42109d:	retf   
  42109e:	(bad)  
  42109f:	mov    esp,0x3b872040
  4210a4:	mov    WORD PTR [edx],es
  4210a6:	je     0x4210d1
  4210a8:	xchg   esp,eax
  4210a9:	test   al,ah
  4210ab:	mov    dh,0xfc
  4210ad:	xchg   ebp,ebp
  4210af:	shl    DWORD PTR [ebx-0xa014a6f],1
  4210b5:	fs ins BYTE PTR es:[edi],dx
  4210b7:	sbb    DWORD PTR [esi-0x4f97bb],edi
  4210bd:	outs   dx,BYTE PTR ds:[esi]
  4210be:	mov    bh,0x5b
  4210c0:	jecxz  0x4210c8
  4210c2:	aad    0x73
  4210c4:	add    al,0x70
  4210c6:	push   esp
  4210c7:	fdivr  QWORD PTR es:[edx-0x7f]
  4210cb:	int3   
  4210cc:	aas    
  4210cd:	fmul   DWORD PTR ds:0xbf47fa48
  4210d3:	test   eax,0xf8ba7ebe
  4210d8:	push   esi
  4210d9:	add    esp,edi
  4210db:	xchg   esi,eax
  4210dc:	dec    ebx
  4210dd:	jge    0x42114a
  4210df:	sbb    bh,bl
  4210e1:	(bad)  
  4210e4:	xchg   ebx,eax
  4210e5:	jmp    DWORD PTR ds:0xc6d76394
  4210eb:	js     0x4210e4
  4210ed:	mov    es,WORD PTR [ebp+0x79]
  4210f0:	dec    esp
  4210f1:	sub    eax,0x7efd82f2
  4210f6:	das    
  4210f7:	pop    ss
  4210f8:	into   
  4210f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fa:	push   ebp
  4210fb:	sbb    DWORD PTR [ecx+0x54f97869],0x40
  421102:	add    eax,0x344f59ae
  421107:	jae    0x4210aa
  421109:	clc    
  42110a:	fisubr WORD PTR [ebx+0x710b0258]
  421110:	sbb    ecx,edx
  421112:	je     0x421125
  421114:	push   edx
  421115:	popf   
  421116:	loope  0x4210f1
  421118:	sub    DWORD PTR [edi-0x45],0xc2e834b0
  42111f:	in     al,dx
  421120:	add    al,0xf
  421122:	jg     0x4210d4
  421124:	imul   ebp,DWORD PTR [edi],0xa321b3ae
  42112a:	cmp    al,0x35
  42112c:	adc    esi,0x47
  42112f:	test   eax,0x97eb1fd7
  421134:	dec    ebx
  421135:	inc    ebp
  421136:	push   edx
  421137:	jle    0x4211a4
  421139:	repz push ebx
  42113b:	jl     0x421117
  42113d:	or     cl,0x40
  421140:	xchg   ecx,eax
  421141:	xor    al,bh
  421143:	xchg   edx,eax
  421144:	nop
  421145:	mov    ?,WORD PTR [ecx+0x6e60fd9d]
  42114b:	xchg   DWORD PTR [edi+edi*1],ebx
  42114e:	lahf   
  42114f:	retf   0x9d18
  421152:	cmp    al,0xfd
  421154:	sar    DWORD PTR [ebx],cl
  421156:	inc    ecx
  421157:	sbb    edi,DWORD PTR [eax+0x16]
  42115a:	es call 0xb9b6:0x21f692ef
  421162:	push   eax
  421163:	inc    edi
  421164:	mov    al,ds:0xca83c073
  421169:	mov    ds:0x9b178823,al
  42116e:	jmp    0x19a6:0x3d06abc0
  421175:	mov    dl,0x22
  421177:	stos   BYTE PTR es:[edi],al
  421178:	fs loop 0x42113d
  42117b:	push   edi
  42117c:	fadd   DWORD PTR [eax+0x5e]
  42117f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421180:	push   ds
  421181:	jbe    0x42117c
  421183:	out    0xc6,al
  421185:	push   ds
  421186:	sub    al,0xb3
  421188:	(bad)  [edi-0x3c06f1fb]
  42118e:	and    al,0xb6
  421190:	cdq    
  421191:	retf   0x23f7
  421194:	and    ebp,DWORD PTR [esp+eax*2]
  421197:	int    0x16
  421199:	sbb    eax,0x6efee38a
  42119e:	shl    DWORD PTR [esi],cl
  4211a0:	jae    0x421185
  4211a2:	jle    0x42118b
  4211a4:	imul   esi,DWORD PTR [edi],0xffffffc7
  4211a7:	mov    esi,0xf61f5b6e
  4211ac:	cmp    BYTE PTR [ecx],0x9
  4211af:	mov    ah,0xc2
  4211b1:	jo     0x4211ce
  4211b3:	sub    ebp,DWORD PTR [esi+0x1]
  4211b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211b7:	dec    eax
  4211b8:	mov    bl,BYTE PTR [ebx]
  4211ba:	mov    esi,0xfc00ca0b
  4211bf:	cs push 0xec7301db
  4211c5:	and    al,dl
  4211c7:	inc    ebp
  4211c8:	loopne 0x421197
  4211ca:	jmp    0x4211d5
  4211cc:	shr    BYTE PTR [eax-0x1be5dabb],1
  4211d2:	into   
  4211d3:	cld    
  4211d4:	daa    
  4211d5:	inc    ebp
  4211d6:	jle    0x42120b
  4211d8:	daa    
  4211d9:	int3   
  4211da:	jnp    0x42116c
  4211dc:	mov    DWORD PTR [ecx+0x12],edi
  4211df:	mov    bh,0x3f
  4211e1:	dec    esi
  4211e2:	push   ds
  4211e3:	push   0xf7257a0a
  4211e8:	cwde   
  4211e9:	push   esp
  4211ea:	sbb    DWORD PTR [edx-0x60],ecx
  4211ed:	mov    eax,0xf8d6f32c
  4211f2:	pushf  
  4211f3:	cmp    DWORD PTR [eax-0x74ec5170],eax
  4211f9:	add    bh,BYTE PTR [ebx-0x6885f8f5]
  4211ff:	int3   
  421200:	mov    esp,esi
  421202:	test   al,0xa9
  421204:	icebp  
  421205:	inc    ebx
  421206:	jo     0x421284
  421208:	pushf  
  421209:	adc    DWORD PTR [ecx-0x603ddf1f],0x2903f24b
  421213:	retf   0x6d51
  421216:	lock inc esi
  421218:	es push esi
  42121a:	jl     0x421227
  42121c:	cli    
  42121d:	retf   0x8b16
  421220:	or     ah,BYTE PTR [ebx+0x76]
  421223:	push   cs
  421224:	(bad)  
  421225:	mov    eax,0x6866f9cc
  42122a:	mov    cs,WORD PTR [ecx-0x51572680]
  421230:	and    ah,BYTE PTR [eax+0x65]
  421233:	pushf  
  421234:	cli    
  421235:	inc    esi
  421236:	sbb    al,0x97
  421238:	sti    
  421239:	imul   esi,DWORD PTR [eax+0x6b],0x4571832b
  421240:	add    eax,0x23d945e8
  421245:	cmp    al,0x1e
  421247:	and    edx,DWORD PTR [edi-0x65]
  42124a:	add    BYTE PTR [esi+esi*8+0x1fc197cc],cl
  421251:	pop    ecx
  421252:	shl    BYTE PTR [ebx-0x66],cl
  421255:	es pop esp
  421257:	(bad)  
  421258:	popf   
  421259:	adc    BYTE PTR [ecx+0x158384d3],ch
  42125f:	out    dx,al
  421260:	xchg   edx,eax
  421261:	jae    0x421225
  421263:	fcomp  QWORD PTR [eax+0x22]
  421266:	jbe    0x42123c
  421268:	inc    ebx
  421269:	(bad)  
  42126a:	int    0x5c
  42126c:	bound  eax,QWORD PTR [eax+0x32ec4604]
  421272:	pop    ss
  421273:	(bad)  
  421274:	fild   DWORD PTR [ecx]
  421276:	dec    eax
  421277:	dec    ebp
  421278:	call   0x6db7b5bf
  42127d:	dec    esi
  42127e:	add    al,0x8e
  421280:	jecxz  0x421222
  421282:	cmp    eax,0x53b62baa
  421287:	fimul  DWORD PTR [esi-0x1c16a03a]
  42128d:	jnp    0x421299
  42128f:	and    edx,DWORD PTR [ebx+0x29257553]
  421295:	jl     0x421302
  421297:	dec    ecx
  421298:	or     BYTE PTR [esi-0x1544aac6],dh
  42129e:	mov    ah,0xe1
  4212a0:	popa   
  4212a1:	xor    DWORD PTR [ebx+eax*4+0xb],0xffffff87
  4212a6:	xchg   ecx,eax
  4212a7:	in     al,dx
  4212a8:	sub    bh,bl
  4212aa:	jns    0x421325
  4212ac:	stc    
  4212ad:	mov    eax,ds:0x47b9beb6
  4212b2:	adc    DWORD PTR [edx],ecx
  4212b4:	push   ebp
  4212b5:	mov    ebp,0xff6790f3
  4212ba:	popf   
  4212bb:	popf   
  4212bc:	shl    BYTE PTR [ecx+0x14],1
  4212bf:	and    ecx,DWORD PTR [edx-0x25]
  4212c2:	sub    eax,DWORD PTR [edx]
  4212c4:	cli    
  4212c5:	or     BYTE PTR [edx+0x4c9f67f9],dh
  4212cb:	fwait
  4212cc:	test   al,0x44
  4212ce:	inc    edx
  4212cf:	push   ds
  4212d0:	add    al,0x98
  4212d2:	pop    ds
  4212d3:	pop    es
  4212d4:	add    eax,0x1ae02b9f
  4212d9:	ds jb  0x4212fa
  4212dc:	in     eax,dx
  4212dd:	cmp    eax,0xebe6b5ef
  4212e2:	out    dx,eax
  4212e3:	scas   al,BYTE PTR es:[edi]
  4212e4:	adc    DWORD PTR [edx],eax
  4212e6:	fwait
  4212e7:	lock ret 0x150e
  4212eb:	add    bl,al
  4212ed:	and    DWORD PTR [ecx-0x2644158],0x1dc9781b
  4212f7:	push   edx
  4212f8:	pop    ebp
  4212f9:	aas    
  4212fa:	into   
  4212fb:	xchg   esp,eax
  4212fc:	scas   eax,DWORD PTR es:[edi]
  4212fd:	lods   eax,DWORD PTR ds:[esi]
  4212fe:	int3   
  4212ff:	push   ds
  421300:	test   BYTE PTR [ecx],bl
  421302:	hlt    
  421303:	int3   
  421304:	fbld   TBYTE PTR [eax+0x67]
  421307:	jbe    0x42134d
  421309:	cmp    BYTE PTR [edi-0x2a8393d3],dl
  42130f:	out    0xa7,eax
  421311:	call   0x5ded:0x40fe07b0
  421318:	dec    esp
  421319:	int3   
  42131a:	mov    bl,0x2f
  42131c:	arpl   WORD PTR [ecx],dx
  42131e:	xlat   BYTE PTR ds:[ebx]
  42131f:	js     0x4212d1
  421321:	loope  0x421322
  421323:	mov    esi,0x8ed4ebb8
  421328:	enter  0x53ef,0xd0
  42132c:	lods   al,BYTE PTR ds:[esi]
  42132d:	dec    eax
  42132e:	push   eax
  42132f:	push   esp
  421330:	push   ebp
  421331:	mov    bh,0x75
  421333:	or     al,0x97
  421335:	in     al,0x92
  421337:	jg     0x421347
  421339:	mov    eax,ds:0xb34165d3
  42133e:	jecxz  0x4212dd
  421340:	sub    al,0x6
  421342:	pop    es
  421343:	jb     0x421370
  421345:	idiv   DWORD PTR [ebp+0x44]
  421348:	jno    0x421359
  42134a:	xchg   ecx,eax
  42134b:	jbe    0x421394
  42134d:	(bad)  
  42134e:	mov    ecx,0x48429bdf
  421353:	gs mov edi,0x5b7c36bd
  421359:	inc    esp
  42135a:	aad    0x30
  42135c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42135d:	xor    al,cl
  42135f:	test   BYTE PTR [ebx+edi*2],ah
  421362:	add    BYTE PTR [ecx],al
  421364:	jne    0x42132e
  421366:	stos   BYTE PTR es:[edi],al
  421367:	les    eax,FWORD PTR [ebx+0x53b1495d]
  42136d:	fidiv  DWORD PTR [eax+0x2671b564]
  421373:	fldenv [ecx]
  421375:	pop    ebp
  421376:	mov    al,ds:0xff1ca54c
  42137b:	mov    bh,0xa8
  42137d:	in     al,dx
  42137e:	icebp  
  42137f:	arpl   WORD PTR [edx+0x6e88eb68],cx
  421385:	or     BYTE PTR ds:0xb22df10e,0xb8
  42138c:	xor    eax,0xf5e8f5b7
  421391:	and    eax,0xab6c0dab
  421396:	mov    dl,0x5a
  421398:	aam    0xe3
  42139a:	cs inc edi
  42139c:	in     al,dx
  42139d:	gs ss pop edi
  4213a0:	ja     0x4213ed
  4213a2:	and    al,BYTE PTR [ebx-0x5e]
  4213a5:	lds    ecx,FWORD PTR [ebp+0x76d5891a]
  4213ab:	dec    ebx
  4213ac:	dec    edi
  4213ad:	loopne 0x421359
  4213af:	icebp  
  4213b0:	and    eax,0x6954b4d9
  4213b5:	cs xchg ch,ah
  4213b8:	dec    ecx
  4213b9:	cdq    
  4213ba:	imul   DWORD PTR [edi-0x14]
  4213bd:	mov    WORD PTR [esi+0x6],ds
  4213c0:	jo     0x421429
  4213c2:	fadd   DWORD PTR [ecx+0x6c]
  4213c5:	pushf  
  4213c6:	mov    al,ds:0xb03c6af3
  4213cb:	std    
  4213cc:	pop    esp
  4213cd:	scas   al,BYTE PTR es:[edi]
  4213ce:	mov    ebx,0xc6bc4585
  4213d3:	pop    ss
  4213d4:	sub    edx,ecx
  4213d6:	sti    
  4213d7:	push   edx
  4213d8:	out    dx,al
  4213d9:	pop    ss
  4213da:	gs out 0x51,eax
  4213dd:	pushf  
  4213de:	out    0xe0,al
  4213e0:	in     al,dx
  4213e1:	repnz push es
  4213e3:	dec    esp
  4213e4:	cmp    BYTE PTR [ecx],0x29
  4213e7:	sub    bl,ah
  4213e9:	daa    
  4213ea:	into   
  4213eb:	mov    bh,BYTE PTR [edi-0x75beb4bc]
  4213f1:	iret   
  4213f2:	inc    ecx
  4213f3:	dec    ebp
  4213f4:	pop    ds
  4213f5:	mov    al,ds:0xff99387f
  4213fa:	les    esp,FWORD PTR [ecx-0x4fb3f522]
  421400:	jmp    0xc976966c
  421405:	icebp  
  421406:	inc    ecx
  421407:	xor    ecx,DWORD PTR [ecx]
  421409:	push   ss
  42140a:	jge    0x4213c2
  42140c:	jno    0x4213b4
  42140e:	mov    cl,0xd1
  421410:	xor    BYTE PTR [ebx],bh
  421412:	cs mov ch,0x16
  421415:	out    dx,eax
  421416:	(bad)  
  421417:	loope  0x421497
  421419:	leave  
  42141a:	and    BYTE PTR [edx-0x5fbe7d03],al
  421420:	loopne 0x421445
  421422:	sbb    ch,BYTE PTR [edx+0x4b]
  421425:	mov    bh,0xbf
  421427:	(bad)  
  421428:	fstp   TBYTE PTR [esi+0x18]
  42142b:	(bad)  
  42142d:	cs mov ch,bl
  421430:	in     al,0x73
  421432:	inc    edx
  421433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421434:	mov    ch,0x3
  421436:	rcl    DWORD PTR [eax-0x53],cl
  421439:	sub    ch,BYTE PTR [ebx]
  42143b:	cmp    BYTE PTR [edi],0x89
  42143e:	ret    0xa96e
  421441:	inc    esi
  421442:	mov    ds:0x2462ba6,al
  421447:	dec    esp
  421448:	push   esp
  421449:	lea    eax,[ebx-0x7a]
  42144c:	dec    eax
  42144d:	mov    ebp,0x15449fed
  421452:	mov    esp,DWORD PTR [edx+0x17]
  421455:	adc    edi,DWORD PTR [edx+edx*4]
  421458:	sub    al,0x21
  42145a:	mov    bh,0xbc
  42145c:	and    BYTE PTR [edi+0x5f],dh
  42145f:	ss retf 
  421461:	jns    0x42142a
  421463:	fs push edi
  421465:	jb     0x421474
  421467:	push   ebx
  421468:	mov    eax,0xc9f9f5f2
  42146d:	gs mov esi,0xccfd90ee
  421473:	popf   
  421474:	mov    eax,ds:0xa198b2f1
  421479:	pop    esi
  42147a:	sbb    edx,esi
  42147c:	cmp    eax,0xa0e1fee3
  421481:	sbb    al,0x4d
  421483:	jno    0x4214a2
  421485:	(bad)  
  421486:	hlt    
  421487:	sub    dh,al
  421489:	cmp    al,0x6
  42148b:	xchg   DWORD PTR [esp+ebp*2+0x167d4f2f],ebx
  421492:	sar    ecx,cl
  421494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421495:	loope  0x4214cf
  421497:	lock dec edx
  421499:	aad    0xea
  42149b:	sti    
  42149c:	jno    0x42143c
  42149e:	in     eax,dx
  42149f:	mov    ds:0xa8bd6d5a,al
  4214a4:	ja     0x4214c8
  4214a6:	aad    0x86
  4214a8:	fisubr WORD PTR [ebx+0x4e77a8d0]
  4214ae:	fisttp QWORD PTR [ecx]
  4214b0:	mov    ds:0xebd88ca8,eax
  4214b5:	xor    dh,al
  4214b7:	fcmovbe st,st(6)
  4214b9:	add    eax,0xc27bc73c
  4214be:	call   0x3ecc:0x58ee6ce7
  4214c5:	in     al,dx
  4214c6:	mov    ebp,ebp
  4214c8:	jne    0x4214e5
  4214ca:	and    DWORD PTR [eax],ebp
  4214cc:	jmp    DWORD PTR [ebp+0x2ee033e7]
  4214d2:	or     ch,BYTE PTR [bp+di-0x376b]
  4214d7:	push   edx
  4214d8:	lods   al,BYTE PTR ds:[esi]
  4214d9:	mov    dh,0x8c
  4214db:	(bad)  [eax]
  4214dd:	dec    ebx
  4214de:	inc    edi
  4214df:	dec    ecx
  4214e0:	jo     0x42153e
  4214e2:	xor    BYTE PTR [ebp-0x11c9a0b7],cl
  4214e8:	sahf   
  4214e9:	cmp    dh,BYTE PTR [esp+eax*1-0x19]
  4214ed:	or     eax,0x71f09df3
  4214f2:	pop    ds
  4214f3:	mov    ebx,0x725f2e8
  4214f8:	jb     0x421482
  4214fa:	aas    
  4214fb:	ror    DWORD PTR cs:[ebp-0x47a8f4ff],cl
  421502:	popf   
  421503:	fwait
  421504:	outs   dx,BYTE PTR ds:[esi]
  421505:	fisttp QWORD PTR [ecx+0x49bd41f9]
  42150b:	mov    WORD PTR [ecx+ecx*8],cs
  42150e:	pop    edi
  42150f:	jae    0x421567
  421511:	cmp    ebx,0xffffffc0
  421514:	add    eax,DWORD PTR [ecx+0x12]
  421517:	es loopne 0x42156c
  42151a:	or     ch,BYTE PTR ds:0x92b1e782
  421520:	cmp    esp,DWORD PTR [ebx]
  421522:	and    cl,BYTE PTR [ebp-0x7a01b3e8]
  421528:	sar    DWORD PTR [ebp+0x6890c161],cl
  42152e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42152f:	clc    
  421530:	pop    edi
  421531:	jns    0x42159d
  421533:	sbb    eax,0xd23a49a5
  421538:	pop    edi
  421539:	sahf   
  42153a:	ret    
  42153b:	sub    eax,eax
  42153d:	sub    DWORD PTR [ecx+0x75b3d10e],ebx
  421543:	jecxz  0x42151e
  421545:	push   esp
  421546:	repz cmp DWORD PTR [esi-0x36],edi
  42154a:	sbb    BYTE PTR [edi],dl
  42154c:	mov    WORD PTR [ecx+0x39],gs
  42154f:	aad    0xe8
  421551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421552:	scas   al,BYTE PTR es:[edi]
  421553:	sub    BYTE PTR [esi+0x2e729071],ch
  421559:	iret   
  42155a:	jge    0x421589
  42155c:	shl    dl,0x49
  42155f:	jg     0x421559
  421561:	test   al,0xd2
  421563:	push   cs
  421564:	ret    
  421565:	push   esi
  421566:	test   BYTE PTR [ecx+0x5df50121],al
  42156c:	loopne 0x421530
  42156e:	add    eax,DWORD PTR [esi+0x6be0d0c1]
  421574:	test   BYTE PTR ds:0x4cbfbe71,dh
  42157a:	sub    cl,BYTE PTR [ebx+0x44]
  42157d:	sub    eax,0x846ae636
  421582:	fldenv [bp+di]
  421585:	mov    WORD PTR [edx],?
  421587:	in     eax,dx
  421588:	xchg   esp,eax
  421589:	or     ch,BYTE PTR [ebx+0x5a]
  42158c:	xor    al,0x50
  42158e:	mov    cl,0xd0
  421590:	in     al,dx
  421591:	std    
  421592:	loopne 0x421586
  421594:	es nop
  421596:	in     al,0x7a
  421598:	push   esi
  421599:	not    DWORD PTR [ebp+0x1c174f99]
  42159f:	and    BYTE PTR [esi-0x18148081],bl
  4215a5:	sti    
  4215a6:	fistp  WORD PTR [edi]
  4215a8:	mov    esp,0x393d0f90
  4215ad:	fistp  WORD PTR [esi]
  4215af:	lods   al,BYTE PTR ds:[esi]
  4215b0:	mov    ds:0x90d5721,al
  4215b5:	sub    eax,0x9ddc5df1
  4215ba:	push   ss
  4215bb:	and    eax,DWORD PTR [eax+ebp*2-0x1edd9e1e]
  4215c2:	xor    DWORD PTR [esi-0x50],edi
  4215c5:	mov    esp,0xb7858884
  4215ca:	in     al,dx
  4215cb:	sub    eax,0xa8685c93
  4215d0:	xchg   esp,eax
  4215d1:	call   0x1273:0x6be9fd37
  4215d8:	mov    ecx,0x78fd30bb
  4215dd:	call   0x2880:0x6be073df
  4215e4:	fcomp  DWORD PTR [ecx+0x3e075ab1]
  4215ea:	push   esp
  4215eb:	mov    ds:0xf8c7b39a,al
  4215f0:	mov    edx,0x290f5fb3
  4215f5:	rol    BYTE PTR [edi+ebp*4+0x24432e08],cl
  4215fc:	hlt    
  4215fd:	fistp  QWORD PTR [eax-0x7eef31ec]
  421603:	mov    bh,0x4e
  421605:	jecxz  0x421612
  421607:	(bad)  
  421608:	xchg   esi,eax
  421609:	ror    DWORD PTR [edx+0x9],1
  42160c:	mov    eax,0xd21894e3
  421611:	dec    ebp
  421612:	add    bl,BYTE PTR [ecx-0x80]
  421615:	jecxz  0x421691
  421617:	in     eax,dx
  421618:	mov    eax,ds:0xf8178869
  42161d:	ss ss and eax,0xa1d88788
  421624:	cmp    eax,0xcab5bcb6
  421629:	(bad)
  42162d:	(bad)  
  42162f:	xlat   BYTE PTR ds:[ebx]
  421630:	in     al,dx
  421631:	loope  0x42164a
  421633:	dec    esp
  421634:	fisttp WORD PTR [ecx]
  421636:	pop    ebx
  421637:	push   edx
  421638:	push   edx
  421639:	arpl   WORD PTR ds:[eax-0x7e],dx
  42163d:	add    esp,DWORD PTR gs:[eax]
  421640:	loopne 0x4215ee
  421642:	cmp    cl,BYTE PTR [eax+ecx*2+0x4e]
  421646:	dec    ebx
  421647:	adc    dh,BYTE PTR [edx+0x5b]
  42164a:	out    0xa5,eax
  42164c:	ffree  st(4)
  42164e:	mov    ah,0xd5
  421650:	(bad)  
  421652:	in     al,0x41
  421654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421655:	outs   dx,BYTE PTR ds:[esi]
  421656:	pop    ds
  421657:	xchg   ecx,eax
  421658:	sub    edi,DWORD PTR [ebp-0x5c]
  42165b:	btc    DWORD PTR [ecx+ebp*1+0x68],ebx
  421660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421661:	push   ds
  421662:	jae    0x421641
  421664:	in     eax,dx
  421665:	int    0x59
  421667:	sbb    al,0x8d
  421669:	dec    edi
  42166a:	pop    edx
  42166b:	jmp    0xa6b99060
  421670:	cmp    ebp,DWORD PTR [edi+eax*8-0x6816d8c4]
  421677:	inc    eax
  421678:	ins    BYTE PTR es:[edi],dx
  421679:	(bad)
  42167c:	or     ebx,DWORD PTR [ebx]
  42167e:	dec    eax
  42167f:	test   al,0x93
  421681:	add    DWORD PTR ds:0x774a1bb6,ebp
  421687:	leave  
  421688:	push   eax
  421689:	mov    esi,0xcd82a793
  42168e:	jle    0x421639
  421690:	mov    dh,0xa5
  421692:	dec    edi
  421693:	sub    al,0xd2
  421695:	repz fs push ss
  421698:	inc    ebp
  421699:	sti    
  42169a:	xchg   ecx,eax
  42169b:	aas    
  42169c:	or     al,0xa2
  42169e:	popf   
  42169f:	ins    BYTE PTR es:[edi],dx
  4216a0:	popa   
  4216a1:	pop    es
  4216a2:	cwde   
  4216a3:	push   edi
  4216a4:	and    eax,0xded9b374
  4216a9:	test   BYTE PTR [edi-0x3e],dl
  4216ac:	inc    edx
  4216ad:	jle    0x421684
  4216af:	jae    0x421685
  4216b1:	(bad)  
  4216b2:	aam    0x25
  4216b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216b5:	mov    al,ds:0x1dd4268b
  4216ba:	(bad)  
  4216bb:	aaa    
  4216bc:	xchg   cl,ah
  4216be:	sub    DWORD PTR [ebx],ecx
  4216c0:	xchg   edi,eax
  4216c1:	inc    ebx
  4216c2:	push   eax
  4216c3:	cdq    
  4216c4:	cmp    al,BYTE PTR [ecx+0x26ab6e2d]
  4216ca:	jbe    0x4216ec
  4216cc:	sbb    BYTE PTR [edx+esi*2+0x3b],bl
  4216d0:	test   eax,0xd81cea6d
  4216d5:	outs   dx,BYTE PTR ds:[esi]
  4216d6:	cmp    al,0x6c
  4216d8:	pop    ss
  4216d9:	jbe    0x421755
  4216db:	pop    ecx
  4216dc:	ja     0x4216f0
  4216de:	xchg   esp,eax
  4216df:	ins    DWORD PTR es:[edi],dx
  4216e0:	ret    0x66fd
  4216e3:	sbb    BYTE PTR [ecx+0x7b453d6d],cl
  4216e9:	mov    edi,0x7570e99d
  4216ee:	aad    0xea
  4216f0:	sub    al,al
  4216f2:	pop    ds
  4216f3:	or     al,0x56
  4216f5:	repz jp 0x4216f3
  4216f8:	push   ecx
  4216f9:	push   ds
  4216fa:	push   esi
  4216fb:	leave  
  4216fc:	or     DWORD PTR [ecx],esi
  4216fe:	jle    0x421778
  421700:	std    
  421701:	inc    ebp
  421702:	inc    esp
  421703:	out    0xd3,al
  421705:	sub    eax,0x17938951
  42170a:	mov    al,0xbf
  42170c:	xor    ebp,DWORD PTR [edx]
  42170e:	in     al,dx
  42170f:	sti    
  421710:	sub    BYTE PTR ds:0xd4289a6,bl
  421716:	sbb    bl,BYTE PTR [ebx]
  421718:	adc    eax,0xb2908c95
  42171d:	dec    eax
  42171e:	and    dl,BYTE PTR [edx]
  421720:	aam    0x25
  421722:	xor    ebx,esi
  421724:	jge    0x42179d
  421726:	sbb    al,0xb0
  421728:	dec    edi
  421729:	and    ah,0x4c
  42172c:	loop   0x421719
  42172e:	push   eax
  42172f:	xor    ecx,DWORD PTR [ebx+ebp*4+0x760a9496]
  421736:	call   0xcaf5:0x7504dcb8
  42173d:	test   eax,0x927f2489
  421742:	xchg   edx,eax
  421743:	jp     0x4217b6
  421745:	or     al,0xe4
  421747:	sbb    BYTE PTR [ecx+0x3c],al
  42174a:	adc    BYTE PTR [esi-0x19e3cafe],dh
  421750:	popa   
  421751:	jne    0x421775
  421753:	ja     0x4217a5
  421755:	gs sub eax,0x10d27502
  42175b:	push   DWORD PTR [edx]
  42175d:	gs test al,0xd3
  421760:	inc    edx
  421761:	test   eax,0xce8753ed
  421766:	xchg   edi,eax
  421767:	stc    
  421768:	retf   0x16a7
  42176b:	dec    ecx
  42176c:	and    al,0xcd
  42176e:	sub    eax,0x43ca9d0a
  421773:	or     edi,DWORD PTR [esi+0x9f9fa8f]
  421779:	adc    eax,0xa105e60f
  42177e:	xor    bl,bl
  421780:	dec    ecx
  421781:	jp     0x4217da
  421783:	mov    esi,0xb5a63583
  421788:	sahf   
  421789:	mov    ebp,0x6d637868
  42178e:	fwait
  42178f:	jne    0x42172c
  421791:	rol    DWORD PTR [ebp-0x20c01f9a],1
  421797:	imul   eax,ecx,0x568c8701
  42179d:	(bad)
  4217a0:	xor    eax,0xa00c78d3
  4217a5:	or     al,BYTE PTR [esi-0x3e45dfba]
  4217ab:	fcomp  QWORD PTR [esi+esi*2-0xf391dae]
  4217b2:	div    BYTE PTR [esi]
  4217b4:	pop    es
  4217b5:	xchg   DWORD PTR [ecx],edx
  4217b7:	xor    BYTE PTR [esi+0x49],al
  4217ba:	mov    edi,0xa3f4dc61
  4217bf:	dec    ebx
  4217c0:	jg     0x42179f
  4217c2:	out    dx,al
  4217c3:	fsubrp st(2),st
  4217c5:	push   0x794d1d97
  4217ca:	enter  0x140d,0x4c
  4217ce:	jo     0x421802
  4217d0:	pop    edi
  4217d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217d2:	mov    bx,0xeca9
  4217d6:	xor    ch,BYTE PTR [edi-0x15ef91dd]
  4217dc:	pop    ebp
  4217dd:	mov    al,ds:0x47c9ba3d
  4217e2:	imul   ebx,DWORD PTR [si+0x362b],0x5c
  4217e8:	in     eax,dx
  4217e9:	outs   dx,DWORD PTR ds:[esi]
  4217ea:	lods   al,BYTE PTR ds:[esi]
  4217eb:	lods   eax,DWORD PTR ds:[esi]
  4217ec:	sti    
  4217ed:	sub    eax,0x1af54d5
  4217f2:	fnstenv [eax+0x6062a972]
  4217f8:	into   
  4217f9:	mov    eax,ds:0xf88a4f42
  4217fe:	xchg   ebp,eax
  4217ff:	xchg   BYTE PTR [edx],dl
  421801:	adc    eax,0xa93087ac
  421806:	cdq    
  421807:	push   0xffffffd5
  421809:	mulps  xmm7,XMMWORD PTR [edx+0x5cdd63b6]
  421810:	add    BYTE PTR ds:0xa4de7285,bl
  421816:	pop    edi
  421817:	mov    cl,0xd0
  421819:	jp     0x42189a
  42181b:	sub    BYTE PTR [ebx-0x35],bh
  42181e:	push   ebp
  42181f:	retf   
  421820:	aaa    
  421821:	mov    ah,BYTE PTR [ebp+0x3b]
  421824:	popa   
  421825:	add    ebx,ebx
  421827:	push   ebp
  421828:	inc    edx
  421829:	and    al,BYTE PTR [esi-0x3a9f4c8e]
  42182f:	dec    esi
  421830:	dec    edi
  421831:	test   BYTE PTR [esi+ebp*1+0x3be730e2],bl
  421838:	push   edi
  421839:	repnz inc ebx
  42183b:	lds    ebx,FWORD PTR [edi]
  42183d:	callw  0xea13
  421841:	loope  0x421831
  421843:	mov    esp,0x96b3fad
  421848:	fild   DWORD PTR [ebp+0x416300df]
  42184e:	cmp    eax,0xeedb289b
  421853:	xchg   esi,eax
  421854:	pop    esp
  421855:	cmp    BYTE PTR [eax],0x15
  421858:	mov    WORD PTR [ebp-0x33],cs
  42185b:	dec    eax
  42185c:	(bad)  
  42185d:	xlat   BYTE PTR ds:[ebx]
  42185e:	enter  0x5eb1,0xea
  421862:	jmp    0x42187a
  421864:	jb     0x42186f
  421866:	not    DWORD PTR [edi+ebx*1-0x1b]
  42186a:	lods   al,BYTE PTR ds:[esi]
  42186b:	je     0x4218cc
  42186d:	popa   
  42186e:	addr16 mov db3,ebx
  421872:	jae    0x4218ae
  421874:	mov    esp,0xd2cc1aa4
  421879:	jmp    0x421802
  42187b:	ja     0x4218b9
  42187d:	out    dx,al
  42187e:	pop    es
  42187f:	or     ecx,DWORD PTR [eax+0x3c]
  421882:	sub    eax,0xdc579549
  421887:	xchg   ebx,eax
  421888:	sbb    al,0x4
  42188a:	(bad)  [ebx+ecx*1]
  42188d:	xchg   esi,eax
  42188e:	sbb    DWORD PTR [edi-0x3e],0xffffffb4
  421892:	inc    edx
  421893:	add    DWORD PTR [ebx+0x7c013615],edi
  421899:	mov    dl,0x2a
  42189b:	(bad)  
  42189c:	mov    esi,0xf9676843
  4218a1:	mov    ds:0x9094e720,eax
  4218a6:	call   0x54b1:0x8fc4f6a9
  4218ad:	mov    al,ds:0x2f3918ad
  4218b2:	inc    edi
  4218b3:	and    BYTE PTR [edi-0x214c2799],cl
  4218b9:	imul   edi,DWORD PTR [ecx+0x7c],0xffffffdc
  4218bd:	lods   al,BYTE PTR ds:[esi]
  4218be:	or     ch,dl
  4218c0:	cmp    eax,0x755e8fbb
  4218c5:	xchg   edi,eax
  4218c6:	dec    edx
  4218c7:	mov    DWORD PTR [esi],edx
  4218c9:	adc    ah,BYTE PTR [edx]
  4218cb:	sbb    esi,DWORD PTR [ebp+0x5cce557]
  4218d1:	cmp    eax,ebx
  4218d3:	imul   DWORD PTR [eax+0x1b580e41]
  4218d9:	pop    eax
  4218da:	mov    ch,0x8d
  4218dc:	adc    ebp,DWORD PTR [esi-0x20]
  4218df:	or     DWORD PTR ds:0x68345859,edi
  4218e5:	jmp    0x5427:0x57174070
  4218ec:	pop    ss
  4218ed:	hlt    
  4218ee:	push   esp
  4218ef:	and    bh,ah
  4218f1:	gs iret 
  4218f3:	aas    
  4218f4:	(bad)  
  4218f5:	out    dx,eax
  4218f6:	sbb    al,0x9e
  4218f8:	cmp    bl,ah
  4218fa:	and    eax,0x8f4b7f5e
  4218ff:	ins    BYTE PTR es:[edi],dx
  421900:	mov    ebp,0xea76d2d6
  421905:	or     edx,DWORD PTR [ebx*2-0x7a733579]
  42190c:	jnp    0x421904
  42190e:	xchg   DWORD PTR [eax+0xe3a08a6],ecx
  421914:	sbb    cl,bl
  421916:	stos   DWORD PTR es:[edi],eax
  421917:	dec    ebx
  421918:	test   eax,0x430de866
  42191d:	in     eax,dx
  42191e:	fsubr  QWORD PTR [edi+0x63a55a09]
  421924:	aas    
  421925:	fadd   DWORD PTR [edx-0x6fa53e7b]
  42192b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42192c:	add    eax,0x92268a36
  421931:	loopne 0x4218b6
  421933:	repnz mov esi,0x2091e423
  421939:	(bad)
  42193d:	fcom   DWORD PTR ds:0xbfdef866
  421943:	or     ebp,DWORD PTR [ecx-0x1c228351]
  421949:	sbb    edx,ecx
  42194b:	cli    
  42194c:	test   BYTE PTR [edx],al
  42194e:	adc    DWORD PTR [ebp-0x50428290],ebp
  421954:	xchg   ecx,eax
  421955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421956:	xchg   esp,eax
  421957:	aas    
  421958:	inc    ebx
  421959:	mov    ds:0x54b6ccb2,al
  42195e:	scas   al,BYTE PTR es:[edi]
  42195f:	xor    DWORD PTR [esi],ecx
  421961:	jmp    0xd6acb912
  421966:	xchg   ebp,eax
  421967:	ror    dh,cl
  421969:	dec    esp
  42196a:	sbb    DWORD PTR [edi-0x66f65b70],ebx
  421970:	pop    esp
  421971:	cmp    eax,DWORD PTR [esi]
  421973:	push   0x8194bc26
  421978:	outs   dx,BYTE PTR ds:[esi]
  421979:	xchg   edi,eax
  42197a:	test   eax,0x2b8ef847
  42197f:	popf   
  421980:	adc    edi,0x908ae185
  421986:	dec    edi
  421987:	loope  0x421936
  421989:	add    bl,BYTE PTR [esi]
  42198b:	sar    bl,0x6e
  42198e:	clc    
  42198f:	out    0x5f,eax
  421991:	inc    ebp
  421992:	xchg   edx,eax
  421993:	test   DWORD PTR [esi-0x573f6824],eax
  421999:	mov    dh,0x76
  42199b:	add    al,0x4a
  42199d:	jle    0x421926
  42199f:	call   0xb55e81c3
  4219a4:	xor    DWORD PTR [eax-0x75],eax
  4219a7:	sbb    bl,cl
  4219a9:	dec    ecx
  4219aa:	xchg   edx,eax
  4219ab:	in     eax,0xc2
  4219ad:	lea    eax,[esi+0x75]
  4219b0:	hlt    
  4219b1:	pop    es
  4219b2:	nop
  4219b3:	test   BYTE PTR [esi],ah
  4219b5:	xlat   BYTE PTR ds:[ebx]
  4219b6:	inc    esi
  4219b7:	dec    eax
  4219b8:	loope  0x4219de
  4219ba:	xchg   edi,eax
  4219bb:	div    BYTE PTR [edi-0x45]
  4219be:	jbe    0x4219c9
  4219c0:	and    dl,BYTE PTR [ebp+0x54905fe3]
  4219c6:	mov    ds:0xd5368ef8,eax
  4219cb:	jns    0x4219f3
  4219cd:	and    al,0x60
  4219cf:	and    eax,0xc34d035
  4219d4:	mov    al,0xed
  4219d6:	enter  0x699b,0xff
  4219da:	add    al,0x3a
  4219dc:	lods   al,BYTE PTR ds:[esi]
  4219dd:	(bad)  
  4219de:	je     0x4219c9
  4219e0:	mov    ds:0x2b35430b,eax
  4219e5:	shl    DWORD PTR [ecx],cl
  4219e7:	sub    dl,BYTE PTR [edx-0x71b76272]
  4219ed:	mov    edi,ebp
  4219ef:	dec    ecx
  4219f0:	and    al,0xb6
  4219f2:	out    0x7a,al
  4219f4:	add    bh,dh
  4219f6:	pop    eax
  4219f7:	push   esi
  4219f8:	bound  ecx,QWORD PTR [esi-0x68387cb3]
  4219fe:	xor    dl,ah
  421a00:	scas   al,BYTE PTR es:[edi]
  421a01:	cmp    BYTE PTR fs:[edi+0x40406426],0x13
  421a09:	shl    cl,1
  421a0b:	adc    BYTE PTR [edx+ebp*4],ch
  421a0e:	push   cs
  421a0f:	pop    ebp
  421a10:	scas   eax,DWORD PTR es:[edi]
  421a11:	and    eax,0x79c25cc
  421a16:	sbb    BYTE PTR [edi+0x61],bl
  421a19:	xchg   esi,eax
  421a1a:	sbb    BYTE PTR [eax+0x4f9a036e],0x1c
  421a21:	aaa    
  421a22:	push   es
  421a23:	mov    esp,0x47f8bd5f
  421a28:	aas    
  421a29:	inc    eax
  421a2a:	sahf   
  421a2b:	mov    eax,0x1ce95ac3
  421a30:	(bad)  
  421a31:	mov    ebx,0xe402a983
  421a36:	dec    eax
  421a37:	and    eax,0x63959510
  421a3c:	shl    edi,1
  421a3e:	repz aaa 
  421a40:	or     DWORD PTR [eax-0x6181f90d],esp
  421a46:	sti    
  421a47:	add    bh,al
  421a49:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a4b:	pop    es
  421a4c:	mov    esi,DWORD PTR [esi]
  421a4e:	frstor [ebp+eiz*2-0x1]
  421a52:	xchg   edi,eax
  421a53:	call   0xa0f9b2d1
  421a58:	cmp    ch,BYTE PTR [ebx+ebx*8-0x14]
  421a5c:	mov    gs,WORD PTR [edi+0x6ac7e6d8]
  421a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a63:	jle    0x4219f7
  421a65:	add    BYTE PTR [ecx+eiz*1-0x66074673],bl
  421a6c:	int    0xb
  421a6e:	dec    ebx
  421a6f:	fsub   st,st(1)
  421a71:	dec    ecx
  421a72:	imul   esp,DWORD PTR [ecx],0xcfdcf954
  421a78:	jbe    0x421a2f
  421a7a:	cli    
  421a7b:	mov    ah,0x56
  421a7d:	loope  0x421a17
  421a7f:	outs   dx,DWORD PTR ds:[esi]
  421a80:	inc    edi
  421a81:	jb     0x421a98
  421a83:	jne    0x421a71
  421a85:	clc    
  421a86:	xchg   esi,eax
  421a87:	cmp    al,0xd7
  421a89:	xchg   ebx,eax
  421a8a:	scas   eax,DWORD PTR es:[edi]
  421a8b:	mov    ebx,0xddd6feee
  421a90:	push   eax
  421a91:	retf   0xb958
  421a94:	xchg   ebx,eax
  421a95:	mov    ecx,0x6149c752
  421a9a:	add    ebp,eax
  421a9c:	fdivp  st(0),st
  421a9e:	or     cl,BYTE PTR [eax+eiz*8-0x6cd0a01a]
  421aa5:	and    esi,DWORD PTR [ecx]
  421aa7:	mov    bl,0x56
  421aa9:	jno    0x421a51
  421aab:	push   es
  421aac:	sub    ebx,eax
  421aae:	fiadd  DWORD PTR [eax+0x4d]
  421ab1:	fst    QWORD PTR [eax+0x42]
  421ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ab5:	mov    esi,0x95a4d516
  421aba:	xor    DWORD PTR ds:0xae42134d,edx
  421ac0:	cmp    eax,0x16b2cd7
  421ac5:	add    eax,esi
  421ac7:	cmp    eax,0x2c6147b1
  421acc:	enter  0x850f,0x13
  421ad0:	add    BYTE PTR [eax],al
  421ad2:	add    BYTE PTR [ebx],bh
  421ad4:	pop    ebp
  421ad5:	hlt    
  421ad6:	je     0x423f0d
  421adc:	jmp    0x421ae6
  421ae1:	mov    esi,0x3272f8
  421ae6:	mov    eax,DWORD PTR [ebp-0x4]
  421ae9:	mov    edi,DWORD PTR [ebp-0x8]
  421aec:	xor    edi,edx
  421aee:	add    edi,esi
  421af0:	mov    esi,DWORD PTR [ebp+0x8]
  421af3:	imul   edi,ecx
  421af6:	mov    ebx,DWORD PTR [ebp+0xc]
  421af9:	xor    eax,edx
  421afb:	add    eax,ecx
  421afd:	mov    al,BYTE PTR [ebx+eax*1+0x3272f8]
  421b04:	mov    BYTE PTR [edi+esi*1],al
  421b07:	mov    eax,DWORD PTR [ebp-0x8]
  421b0a:	mov    esi,DWORD PTR [ebp+0x10]
  421b0d:	xor    eax,edx
  421b0f:	xor    ebx,ebx
  421b11:	add    esi,0xfabdbecf
  421b17:	adc    ebx,0xffffffff
  421b1a:	lea    ecx,[ecx+eax*1+0x3272f8]
  421b21:	xor    edi,edi
  421b23:	xor    esi,0x8a29a145
  421b29:	jmp    0x423ee8
  421b2e:	int    0x95
  421b30:	stos   BYTE PTR es:[edi],al
  421b31:	jmp    0xff36:0x517a
  421b37:	dec    ebx
  421b38:	jnp    0x421b18
  421b3a:	nop
  421b3b:	mov    esi,DWORD PTR [eax]
  421b3d:	cmp    al,0x23
  421b3f:	inc    edi
  421b40:	jl     0x421bbd
  421b42:	sbb    eax,0xd77b7b9e
  421b47:	aad    0xcb
  421b49:	xlat   BYTE PTR ds:[ebx]
  421b4a:	cmp    BYTE PTR [edx+0x2aa7e720],bh
  421b50:	aaa    
  421b51:	inc    eax
  421b52:	xchg   ecx,eax
  421b53:	pop    ebp
  421b54:	cmp    al,0x53
  421b56:	(bad)  
  421b57:	cdq    
  421b58:	test   eax,0x3ba333a6
  421b5d:	pop    esi
  421b5e:	push   esp
  421b5f:	(bad)  
  421b60:	jmp    0x421b12
  421b62:	cmp    BYTE PTR [ebx],ch
  421b64:	fcmovb st,st(7)
  421b66:	pop    es
  421b67:	or     ebp,DWORD PTR [edx-0x737a86a8]
  421b6d:	(bad)  
  421b6e:	xlat   BYTE PTR ss:[ebx]
  421b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b71:	xlat   BYTE PTR ds:[ebx]
  421b72:	inc    ebx
  421b73:	inc    ebp
  421b74:	and    ebx,DWORD PTR [ebp-0x47]
  421b77:	inc    ebp
  421b78:	shl    bh,1
  421b7a:	xchg   ecx,eax
  421b7b:	or     DWORD PTR [edi-0x7f],esp
  421b7e:	or     eax,0x1f8ed737
  421b83:	or     DWORD PTR [esi+0x28],0xffffff9d
  421b87:	leave  
  421b88:	pop    esi
  421b89:	es cs and edx,esp
  421b8d:	bsf    ecx,DWORD PTR [ebp-0x34]
  421b91:	daa    
  421b92:	test   BYTE PTR [eax+ebx*2],cl
  421b95:	int3   
  421b96:	test   BYTE PTR [ecx],dh
  421b98:	push   0xbb0b8362
  421b9d:	and    eax,0x6a5e621c
  421ba2:	shl    BYTE PTR [esi-0x5c],0x4b
  421ba6:	rcl    ecx,1
  421ba8:	xchg   BYTE PTR [esi+0x6485eb0b],ah
  421bae:	loopne 0x421be5
  421bb0:	inc    esi
  421bb1:	retf   
  421bb2:	rcr    esi,cl
  421bb4:	repnz aaa 
  421bb6:	dec    ebp
  421bb7:	xor    al,0x8a
  421bb9:	repnz outs dx,DWORD PTR ds:[esi]
  421bbb:	dec    ebp
  421bbc:	push   edi
  421bbd:	arpl   WORD PTR [ecx],sp
  421bbf:	loopne 0x421baf
  421bc1:	sbb    BYTE PTR [ebx-0x2b],bh
  421bc4:	push   edi
  421bc5:	mov    al,ds:0x955827aa
  421bca:	jge    0x421bb4
  421bcc:	cmp    DWORD PTR [edx+0x7],edx
  421bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bd0:	or     DWORD PTR [eax+edx*1+0x6a660898],ebp
  421bd7:	sbb    al,0x8d
  421bd9:	jo     0x421bf9
  421bdb:	call   0x92f5:0x6633945e
  421be2:	push   ecx
  421be3:	push   0x7e
  421be5:	inc    eax
  421be6:	inc    edi
  421be7:	in     al,dx
  421be8:	cmp    esp,DWORD PTR [ebp-0x65938f20]
  421bee:	out    dx,eax
  421bef:	shr    ch,0xe4
  421bf2:	or     cl,bl
  421bf4:	fwait
  421bf5:	scas   al,BYTE PTR es:[edi]
  421bf6:	lods   al,BYTE PTR ds:[esi]
  421bf7:	xchg   esp,eax
  421bf8:	pop    ebx
  421bf9:	(bad)  
  421bfa:	cld    
  421bfb:	call   0xd7feef8b
  421c00:	mov    cl,0x82
  421c02:	push   ebp
  421c03:	sbb    dh,BYTE PTR [ebx]
  421c05:	std    
  421c06:	mov    dh,0xd8
  421c08:	(bad)  
  421c09:	in     eax,0x80
  421c0b:	in     al,dx
  421c0c:	mov    eax,0x8c7b7dd1
  421c11:	cmp    DWORD PTR [edi-0x457ae920],esp
  421c17:	stc    
  421c18:	sahf   
  421c19:	sub    bh,bl
  421c1b:	dec    ebx
  421c1c:	jmp    0x8a64:0x136477ee
  421c23:	dec    BYTE PTR [esi]
  421c25:	push   esi
  421c26:	mov    esp,0x9a18e86
  421c2b:	and    cl,bh
  421c2d:	mov    WORD PTR [esi],?
  421c2f:	pop    ebp
  421c30:	cmp    eax,0x10706154
  421c35:	pop    ebp
  421c36:	dec    edx
  421c37:	sti    
  421c38:	sub    dh,BYTE PTR [ecx]
  421c3a:	xor    DWORD PTR [edx+0x13],ecx
  421c3d:	rcl    DWORD PTR [ecx],cl
  421c3f:	ret    
  421c40:	jbe    0x421bc5
  421c42:	test   al,0x12
  421c44:	jnp    0x421c05
  421c46:	pushf  
  421c47:	mul    DWORD PTR [ebx]
  421c49:	popf   
  421c4a:	pop    edi
  421c4b:	iret   
  421c4c:	xchg   ecx,eax
  421c4d:	and    dh,dh
  421c4f:	stos   DWORD PTR es:[edi],eax
  421c50:	jle    0x421c4a
  421c52:	fwait
  421c53:	lods   al,BYTE PTR ds:[esi]
  421c54:	out    0xf9,al
  421c56:	shl    ah,cl
  421c58:	in     eax,dx
  421c59:	jb     0x421c9f
  421c5b:	call   0xfbb8834a
  421c60:	js     0x421c92
  421c62:	xor    eax,0x159e6efe
  421c67:	scas   eax,DWORD PTR es:[edi]
  421c68:	into   
  421c69:	adc    al,BYTE PTR [esi-0x78]
  421c6c:	ret    
  421c6d:	push   edx
  421c6e:	cs sahf 
  421c70:	aaa    
  421c71:	aaa    
  421c72:	pop    ecx
  421c73:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c75:	or     DWORD PTR [edi],ebx
  421c77:	mov    dh,BYTE PTR [eax+0x51319247]
  421c7d:	mov    bl,0xe0
  421c7f:	mov    al,ds:0xf1c8c900
  421c84:	ror    DWORD PTR [edx],cl
  421c86:	sub    BYTE PTR [edx],ch
  421c88:	mov    eax,0xd56cf932
  421c8d:	das    
  421c8e:	and    eax,0x47da8166
  421c93:	xchg   ebx,eax
  421c94:	mov    al,0x67
  421c96:	sti    
  421c97:	dec    ebx
  421c98:	mov    bh,0xab
  421c9a:	inc    edi
  421c9b:	and    ebp,DWORD PTR [edi]
  421c9d:	pop    eax
  421c9e:	mov    esi,DWORD PTR [eax-0x51]
  421ca1:	adc    eax,0xa291220a
  421ca6:	inc    ecx
  421ca7:	lods   eax,DWORD PTR ds:[esi]
  421ca8:	and    dl,ch
  421caa:	aam    0xd1
  421cac:	xchg   ecx,eax
  421cad:	fnsave [ebx+0x56e8d488]
  421cb3:	xchg   ecx,eax
  421cb4:	or     eax,0x9adeb2a1
  421cb9:	xor    edx,ecx
  421cbb:	jnp    0x421cad
  421cbd:	adc    eax,0x1387a5e3
  421cc2:	js     0x421c92
  421cc4:	shl    DWORD PTR [ecx+0x5a],1
  421cc7:	xchg   ebp,eax
  421cc8:	pop    esi
  421cc9:	retf   0xc937
  421ccc:	fnstenv [ecx+0x3d]
  421ccf:	push   cs
  421cd0:	shr    BYTE PTR [edi+0x56dd06ce],cl
  421cd6:	pop    ss
  421cd7:	mov    BYTE PTR [esi+0x56134475],al
  421cdd:	xchg   edi,eax
  421cde:	dec    ebx
  421cdf:	retf   
  421ce0:	(bad)  [ecx-0x5960317b]
  421ce6:	mov    esp,0xd447e4
  421ceb:	dec    esp
  421cec:	ja     0x421c9f
  421cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cef:	cmp    al,0x18
  421cf1:	xchg   esp,eax
  421cf2:	pop    edi
  421cf3:	mov    ch,0x59
  421cf5:	mov    DWORD PTR [edx-0x4d078eac],ebp
  421cfb:	dec    ebp
  421cfc:	aam    0x22
  421cfe:	rol    DWORD PTR [edx],cl
  421d00:	push   esi
  421d01:	popa   
  421d02:	pop    esp
  421d03:	push   edi
  421d04:	sbb    eax,0x993ff27b
  421d09:	loope  0x421d54
  421d0b:	test   eax,0x8f609b89
  421d10:	or     eax,0xd38ffb57
  421d15:	dec    ecx
  421d16:	adc    al,0x27
  421d18:	ret    0xa86e
  421d1b:	out    0x2a,al
  421d1d:	xor    ebx,DWORD PTR [eax]
  421d1f:	cs dec eax
  421d21:	dec    edi
  421d22:	dec    esp
  421d23:	jb     0x421d8d
  421d25:	pop    ds
  421d26:	iret   
  421d27:	popa   
  421d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d29:	lds    esp,FWORD PTR [eax+0x20f5bb25]
  421d2f:	aad    0x20
  421d31:	or     DWORD PTR [ebp+0x1f],esi
  421d34:	jns    0x421cc8
  421d36:	mov    ebp,ebx
  421d38:	xchg   BYTE PTR [eax+0x2d],bh
  421d3b:	xor    cl,BYTE PTR [ecx+0x693c0df4]
  421d41:	ds xor eax,0x99f6a242
  421d47:	iret   
  421d48:	adc    BYTE PTR [esi-0x4958a59b],bh
  421d4e:	adc    ecx,DWORD PTR [edi]
  421d50:	ret    
  421d51:	pushf  
  421d52:	jb     0x421d34
  421d54:	stc    
  421d55:	sub    al,0xdf
  421d57:	adc    eax,0x6d82aee2
  421d5c:	cwde   
  421d5d:	xchg   edi,eax
  421d5e:	adc    BYTE PTR [ebx],dl
  421d60:	jmp    0x772c:0x1c41dcbd
  421d67:	call   0x73cc0d7f
  421d6c:	imul   ecx,DWORD PTR es:[ebx+0x7c],0xb915151
  421d74:	push   esp
  421d75:	mov    dl,0xb5
  421d77:	push   ss
  421d78:	push   0x4f
  421d7a:	lahf   
  421d7b:	in     eax,dx
  421d7c:	mov    cl,0xbf
  421d7e:	dec    ecx
  421d7f:	imul   ebx,edi,0x64dc894
  421d85:	xor    al,0x9a
  421d87:	test   DWORD PTR [esi-0x7154cffb],ebp
  421d8d:	mov    cl,0x11
  421d8f:	aad    0x83
  421d91:	and    al,0xd5
  421d93:	mov    ecx,0xfe08590d
  421d98:	and    dh,bh
  421d9a:	cmc    
  421d9b:	xchg   edi,eax
  421d9c:	daa    
  421d9d:	inc    edi
  421d9e:	adc    DWORD PTR [edi-0x2df0d913],edi
  421da4:	jno    0x421dff
  421da6:	ds (bad) 
  421da8:	lds    ebp,FWORD PTR [eax+0x77fc1d91]
  421dae:	out    dx,al
  421daf:	(bad)  
  421db0:	fdivr  QWORD PTR [ebx-0x32]
  421db3:	gs push ss
  421db5:	pop    edi
  421db6:	popa   
  421db7:	xchg   DWORD PTR [ebp-0x77],eax
  421dba:	adc    edx,ecx
  421dbc:	cmp    BYTE PTR [edi],bl
  421dbe:	cmp    bh,BYTE PTR [ebp-0x3584cf26]
  421dc4:	cdq    
  421dc5:	outs   dx,DWORD PTR ds:[esi]
  421dc6:	pop    es
  421dc7:	xlat   BYTE PTR ds:[ebx]
  421dc8:	push   ds
  421dc9:	sub    DWORD PTR [esi+0x1f1348fe],eax
  421dcf:	sbb    ecx,DWORD PTR [ecx+0x2f]
  421dd2:	or     edi,DWORD PTR ds:0xa3926c79
  421dd8:	loopne 0x421dae
  421dda:	sub    BYTE PTR [ecx],ch
  421ddc:	pop    ebx
  421ddd:	stos   DWORD PTR es:[edi],eax
  421dde:	dec    edx
  421ddf:	inc    esi
  421de0:	pop    ss
  421de1:	ins    DWORD PTR es:[edi],dx
  421de2:	nop
  421de3:	and    ah,BYTE PTR [ebx+0x375359e8]
  421de9:	idiv   DWORD PTR [eax-0x70]
  421dec:	inc    ebx
  421ded:	mov    cl,0x15
  421def:	adc    eax,0x8e1a1eec
  421df4:	jle    0x421dbb
  421df6:	xor    edx,edi
  421df8:	sar    DWORD PTR [eax-0x55],cl
  421dfb:	or     eax,esp
  421dfd:	push   ecx
  421dfe:	cmp    eax,0x691deda1
  421e03:	iret   
  421e04:	les    eax,FWORD PTR [ecx-0x6c0efe9d]
  421e0a:	dec    edi
  421e0b:	adc    eax,0x26870230
  421e10:	push   es
  421e11:	icebp  
  421e12:	pop    ebx
  421e13:	and    al,0x17
  421e15:	int3   
  421e16:	xchg   DWORD PTR [ebp+0x4137561c],esi
  421e1c:	bound  esi,QWORD PTR [ecx]
  421e1e:	stc    
  421e1f:	jl     0x421dd2
  421e21:	add    DWORD PTR [eax],ebx
  421e23:	ins    BYTE PTR es:[edi],dx
  421e24:	jg     0x421e82
  421e26:	mov    dl,0xc6
  421e28:	cmp    ebx,DWORD PTR [edx+0x4]
  421e2b:	push   edi
  421e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e2d:	in     eax,dx
  421e2e:	pop    esi
  421e2f:	pop    esi
  421e30:	jg     0x421dfb
  421e32:	test   al,0x51
  421e34:	xchg   edx,eax
  421e35:	push   ebx
  421e36:	in     eax,0xb3
  421e38:	repnz int 0xc0
  421e3b:	frstor [ebx+0x32a6e6c6]
  421e41:	pop    edi
  421e42:	(bad)  
  421e43:	fdivr  QWORD PTR [edx+0x2a802c52]
  421e49:	fst    QWORD PTR [eax]
  421e4b:	ins    BYTE PTR es:[edi],dx
  421e4c:	cs dec esp
  421e4e:	test   al,0x2e
  421e50:	loopne 0x421ecc
  421e52:	fstp   TBYTE PTR [ecx]
  421e54:	lods   al,BYTE PTR ds:[esi]
  421e55:	mov    eax,0xe07c2a23
  421e5a:	out    0xa8,al
  421e5c:	mov    ch,0xaa
  421e5e:	mov    esi,0x9f65b6e
  421e63:	xor    esp,ebx
  421e65:	xor    esp,esp
  421e67:	pop    edx
  421e68:	sahf   
  421e69:	arpl   WORD PTR [edi],sp
  421e6b:	daa    
  421e6c:	dec    esi
  421e6d:	ret    0x27c7
  421e70:	or     al,0x34
  421e72:	or     BYTE PTR [ebx+edi*2-0x63],dl
  421e76:	rcr    BYTE PTR [eax+ecx*1],1
  421e79:	jb     0x421ef5
  421e7b:	imul   BYTE PTR [edi]
  421e7d:	pusha  
  421e7e:	push   ebp
  421e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e80:	add    edx,0xe99dae46
  421e86:	fs js  0x421ed6
  421e89:	sar    ch,0x85
  421e8c:	dec    edx
  421e8d:	pop    ebx
  421e8e:	mov    gs,esi
  421e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e91:	jmp    0x5f636b9b
  421e96:	bswap  ebp
  421e98:	jnp    0x421e26
  421e9a:	and    ebp,eax
  421e9c:	lock stc 
  421e9e:	mov    bl,0xa0
  421ea0:	nop
  421ea1:	mov    al,ds:0x72beff62
  421ea7:	in     al,0xc5
  421ea9:	jne    0x421ef0
  421eab:	outs   dx,BYTE PTR ds:[esi]
  421eac:	mov    dh,cl
  421eae:	imul   eax,DWORD PTR [ebp+0x1982f414],0x42
  421eb5:	cld    
  421eb6:	adc    BYTE PTR [eax-0x33ec58e2],dh
  421ebc:	shr    DWORD PTR [ecx],1
  421ebe:	rol    DWORD PTR [edi+0x76],0xb5
  421ec2:	cmp    eax,0x9c603a76
  421ec7:	call   0x8920:0x9448d477
  421ece:	mov    ds:0x62f5f490,al
  421ed3:	aaa    
  421ed4:	movlps QWORD PTR [edi+0x7522a887],xmm4
  421edb:	ror    DWORD PTR [eax],cl
  421edd:	mov    ebx,0x6a857566
  421ee2:	sbb    ebx,DWORD PTR [edi-0x7d7d3a42]
  421ee8:	xor    DWORD PTR [ecx-0x7d602333],esp
  421eee:	ins    DWORD PTR es:[edi],dx
  421eef:	push   ebp
  421ef0:	push   es
  421ef1:	leave  
  421ef2:	sub    esi,esp
  421ef4:	stos   BYTE PTR es:[edi],al
  421ef5:	xchg   DWORD PTR [edi],edx
  421ef7:	cmp    ebx,esi
  421ef9:	or     al,0xf5
  421efb:	nop
  421efc:	and    eax,DWORD PTR [ebp-0x1f]
  421eff:	dec    ecx
  421f00:	mov    ds:0x8293df7c,al
  421f05:	xlat   BYTE PTR ds:[ebx]
  421f06:	cmp    esi,esi
  421f08:	in     al,dx
  421f09:	mov    edi,esi
  421f0b:	mov    edx,0x68f0f240
  421f10:	push   cs
  421f11:	or     DWORD PTR [ecx],esi
  421f13:	push   ecx
  421f14:	jo     0x421f79
  421f16:	pop    es
  421f17:	mov    esp,DWORD PTR [ebp+0x186122a9]
  421f1d:	lea    eax,[ecx+eiz*8-0x7]
  421f21:	jp     0x421f0a
  421f23:	or     al,0xe9
  421f25:	outs   dx,BYTE PTR ds:[esi]
  421f26:	(bad)  
  421f27:	mov    bh,0x59
  421f29:	push   ebp
  421f2a:	stc    
  421f2b:	mov    ch,0x7d
  421f2d:	mov    dh,0xfb
  421f2f:	xchg   ebp,eax
  421f30:	cmp    ebx,0xffffffdf
  421f33:	shl    al,cl
  421f35:	mov    edi,0x39278488
  421f3a:	loop   0x421fb8
  421f3c:	dec    esi
  421f3d:	(bad)  
  421f3e:	mov    al,0xdd
  421f40:	xchg   edx,eax
  421f41:	lahf   
  421f42:	shr    ecx,1
  421f44:	arpl   di,ax
  421f46:	add    ecx,ecx
  421f48:	js     0x421f13
  421f4a:	and    al,0xb7
  421f4c:	stos   DWORD PTR es:[edi],eax
  421f4d:	push   esi
  421f4e:	test   al,0x4
  421f50:	daa    
  421f51:	mov    esi,0x1538fa00
  421f56:	push   ebp
  421f57:	push   ebp
  421f58:	imul   esi,DWORD PTR [ebp+0x38],0xbee83a95
  421f5f:	adc    eax,0x9697e38
  421f64:	call   0x34a7701c
  421f69:	sub    DWORD PTR [eax],0xfffffff4
  421f6c:	pop    DWORD PTR [edx-0x7259b58a]
  421f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f73:	inc    eax
  421f74:	push   esp
  421f75:	sub    ebp,DWORD PTR [esi+0x76a25d5c]
  421f7b:	xchg   esp,eax
  421f7c:	test   al,0x3e
  421f7e:	xor    DWORD PTR ds:0xd3a95800,0xc8bf89a
  421f88:	or     ch,BYTE PTR [esi-0x11830b28]
  421f8e:	test   BYTE PTR [esi+0xb],0x1b
  421f92:	pop    edi
  421f93:	jns    0x422006
  421f95:	imul   edi,DWORD PTR [eax-0x459e1757],0x2f
  421f9c:	fiadd  DWORD PTR [eax+0x0]
  421f9f:	adc    ecx,DWORD PTR [ebx+0x739e729d]
  421fa5:	pop    ds
  421fa6:	cld    
  421fa7:	addr16 mov cl,0x38
  421faa:	adc    eax,0x3c1e2750
  421faf:	add    ecx,0x4f
  421fb2:	xchg   esp,eax
  421fb3:	mov    esp,ecx
  421fb5:	xchg   ebp,eax
  421fb6:	into   
  421fb7:	enter  0x2612,0xbd
  421fbb:	xlat   BYTE PTR ds:[ebx]
  421fbc:	out    dx,al
  421fbd:	test   BYTE PTR [eax+esi*2],0x70
  421fc1:	adc    BYTE PTR [esi+ebp*1],bh
  421fc4:	idiv   BYTE PTR [esi+esi*2+0x77]
  421fc8:	daa    
  421fc9:	retf   
  421fca:	mov    ds:0x10bcc39b,al
  421fcf:	aam    0xac
  421fd1:	frndint 
  421fd3:	ins    BYTE PTR es:[edi],dx
  421fd4:	retf   0x7fca
  421fd7:	xor    esp,DWORD PTR [eax-0x12201223]
  421fdd:	add    BYTE PTR [edx-0x222dafed],dl
  421fe3:	test   eax,0xfa790f14
  421fe9:	sub    edx,DWORD PTR [eax+0x1aab72c5]
  421fef:	(bad)  
  421ff1:	push   ebp
  421ff2:	test   DWORD PTR [edi+0x19f968ed],eax
  421ff8:	pop    esp
  421ff9:	fistp  DWORD PTR [eax+0x1e]
  421ffc:	push   ecx
  421ffd:	ds leave 
  421fff:	cmp    BYTE PTR [ecx+0x57],cl
  422002:	jb     0x421fdf
  422004:	iret   
  422005:	cld    
  422006:	repnz xor BYTE PTR [eax-0xd7cccf],al
  42200d:	test   al,0xf
  42200f:	shl    esp,cl
  422011:	fwait
  422012:	mov    BYTE PTR [esi-0x58],bh
  422015:	mov    ds:0xf70466ac,al
  42201a:	nop
  42201b:	out    dx,al
  42201c:	or     al,0x0
  42201e:	pop    esp
  42201f:	mov    ch,0xc4
  422021:	(bad)  
  422022:	(bad)  
  422023:	pop    ss
  422024:	adc    eax,0xceecf61a
  422029:	das    
  42202a:	loop   0x421fc3
  42202c:	push   0xfffffff5
  42202e:	xchg   edx,eax
  42202f:	addr16 mov cl,0xb5
  422032:	ficom  WORD PTR [eax-0x6e]
  422035:	sti    
  422036:	jmp    0x8205c22d
  42203b:	cmp    eax,0x3f3c1c9d
  422040:	push   esp
  422041:	sub    ah,BYTE PTR [eax]
  422043:	out    dx,eax
  422044:	mov    ch,BYTE PTR [eax+0x47b169be]
  42204a:	ror    BYTE PTR [esi-0x3c9b6460],0x76
  422051:	mov    ebx,DWORD PTR [edx+edi*8-0x40ce6230]
  422058:	mov    ds:0x177a5619,eax
  42205d:	shl    BYTE PTR [edx+0xc],1
  422060:	and    al,0x9a
  422062:	(bad)  
  422063:	std    
  422064:	int    0x50
  422066:	adc    al,ah
  422068:	repz retf 0x1316
  42206c:	cmp    bh,bh
  42206e:	push   0x3c
  422070:	cld    
  422071:	push   eax
  422072:	data16 jne 0x422060
  422075:	rcr    dh,cl
  422077:	jl     0x4220a4
  422079:	jae    0x42206d
  42207b:	outs   dx,BYTE PTR ds:[esi]
  42207c:	sub    eax,0x6cc71cf5
  422081:	aas    
  422082:	xor    ebp,DWORD PTR [eax]
  422084:	loopne 0x422032
  422086:	arpl   WORD PTR [edx+0x5],ax
  422089:	xchg   ecx,eax
  42208a:	enter  0x1878,0xb9
  42208e:	retf   
  42208f:	sahf   
  422090:	push   ecx
  422091:	jbe    0x422037
  422093:	fst    DWORD PTR [ebp+0x441790ad]
  422099:	stc    
  42209a:	cmp    ah,ch
  42209c:	xchg   ecx,eax
  42209d:	lock sbb esi,DWORD PTR [ecx+0xc]
  4220a1:	mov    dl,0x11
  4220a3:	data16 (bad) 
  4220a5:	jl     0x422075
  4220a7:	mov    bh,0x82
  4220a9:	cmp    eax,0x4c3220c0
  4220ae:	shl    BYTE PTR [edi-0x7c],1
  4220b1:	mov    dh,0x3b
  4220b3:	inc    BYTE PTR [ebp+ebx*4-0x72986cfb]
  4220ba:	sub    cl,BYTE PTR [ebp+0x269bd7b4]
  4220c0:	stc    
  4220c1:	inc    DWORD PTR [eax]
  4220c3:	mov    ebp,0xd4050426
  4220c8:	mov    WORD PTR [ebx+0x38],es
  4220cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220cc:	xor    al,0xb7
  4220ce:	xor    edx,0xc4e0994f
  4220d4:	sar    BYTE PTR [ebp+0x3c],cl
  4220d7:	adc    BYTE PTR [eax-0x690073be],dh
  4220dd:	outs   dx,DWORD PTR ds:[esi]
  4220de:	cmp    eax,0x41d5c89e
  4220e3:	sti    
  4220e4:	popa   
  4220e5:	pop    ecx
  4220e6:	mov    eax,0x8ef0ac57
  4220eb:	rol    edx,1
  4220ed:	lock test al,0xdf
  4220f0:	inc    ecx
  4220f1:	push   ebp
  4220f2:	jl     0x42215f
  4220f4:	dec    ebp
  4220f5:	int    0xb4
  4220f7:	fwait
  4220f8:	pop    esi
  4220f9:	mov    eax,ds:0xee8bf407
  4220fe:	hlt    
  4220ff:	gs push esi
  422101:	pop    ebx
  422102:	fsubp  st(1),st
  422104:	loopne 0x422094
  422106:	data16 loopne 0x422139
  422109:	inc    eax
  42210a:	hlt    
  42210b:	iret   
  42210c:	xlat   BYTE PTR ds:[ebx]
  42210d:	aad    0xcc
  42210f:	and    ebx,DWORD PTR [ecx]
  422111:	jnp    0x4220b3
  422113:	add    al,0x9d
  422115:	xor    dl,bh
  422117:	ret    
  422118:	pop    edi
  422119:	js     0x422183
  42211b:	mov    al,ds:0x3c6a76f3
  422120:	mov    ebx,0xf584b516
  422125:	add    DWORD PTR [edi+ecx*8-0x42],esp
  422129:	push   ds
  42212a:	or     ah,0x22
  42212d:	inc    esp
  42212e:	test   eax,0x9b9bfc00
  422133:	lea    ebx,[esi-0x54]
  422136:	cld    
  422137:	mov    cl,0x66
  422139:	dec    eax
  42213a:	enter  0xf112,0x8d
  42213e:	cli    
  42213f:	or     BYTE PTR [esi],0x1c
  422142:	fwait
  422143:	sub    eax,0x5a7c2d33
  422148:	jo     0x422103
  42214a:	push   0x4e501403
  42214f:	and    edx,DWORD PTR [edx]
  422151:	fld    QWORD PTR [edx+0x4819cdcd]
  422157:	or     dh,BYTE PTR [esi+0x6910a6a4]
  42215d:	data16 fcom DWORD PTR ds:0xafdceb23
  422164:	aad    0xd4
  422166:	test   DWORD PTR [edi-0x5e0d3ce2],ebx
  42216c:	cli    
  42216d:	mov    al,0xe0
  42216f:	aam    0xa3
  422171:	outs   dx,BYTE PTR ds:[esi]
  422172:	add    al,0xce
  422174:	js     0x4221cd
  422176:	or     al,0xf
  422178:	xchg   esp,edi
  42217a:	dec    esi
  42217b:	mov    edx,0x9c9ae85e
  422180:	loopne 0x4221b3
  422182:	mov    dl,BYTE PTR [ebx+edx*2-0x2d006a39]
  422189:	inc    esp
  42218a:	inc    ebp
  42218b:	test   al,0x8
  42218d:	cmc    
  42218e:	mov    ebx,DWORD PTR [ebx-0x49]
  422191:	push   edx
  422192:	iret   
  422193:	dec    edx
  422194:	push   ecx
  422195:	push   ecx
  422196:	cmp    bh,BYTE PTR [edx]
  422198:	inc    ecx
  422199:	fwait
  42219a:	and    al,0xf
  42219c:	mov    BYTE PTR [edi],bh
  42219e:	inc    ebx
  42219f:	inc    esp
  4221a0:	cli    
  4221a1:	sbb    al,0xb4
  4221a3:	mov    ch,0xda
  4221a5:	leave  
  4221a6:	loopne 0x422164
  4221a8:	arpl   WORD PTR [edi],bp
  4221aa:	repnz push 0x22
  4221ad:	push   esi
  4221ae:	retf   0xdb80
  4221b1:	sar    BYTE PTR [edi],1
  4221b3:	mov    eax,ds:0x90641d53
  4221b8:	inc    esi
  4221b9:	mov    ch,0x77
  4221bb:	mov    bl,0x5b
  4221bd:	jne    0x422161
  4221bf:	or     eax,0xdb04f16
  4221c4:	test   eax,0x28104259
  4221c9:	leave  
  4221ca:	in     eax,dx
  4221cb:	test   eax,0xe986272d
  4221d0:	stos   DWORD PTR es:[edi],eax
  4221d1:	rcr    BYTE PTR [esi+0x29e9aa16],1
  4221d7:	mov    esp,0xd96b3bed
  4221dc:	or     esi,edx
  4221de:	inc    esp
  4221df:	sbb    ebx,DWORD PTR [esi-0x35]
  4221e2:	pop    edx
  4221e3:	sbb    eax,0x7d02e40c
  4221e8:	pop    ecx
  4221e9:	test   DWORD PTR [edi+0x44cf33b8],0xf92fa572
  4221f3:	ins    BYTE PTR es:[edi],dx
  4221f4:	xor    ch,BYTE PTR [edx-0x28569b6b]
  4221fa:	pop    ebx
  4221fb:	repnz push edx
  4221fd:	adc    BYTE PTR [ecx-0x2d5e4cb5],dh
  422203:	lods   eax,DWORD PTR ds:[esi]
  422204:	dec    ecx
  422205:	inc    ebp
  422206:	push   0xe4893d67
  42220b:	mov    al,0x79
  42220d:	mov    esi,0x353896fb
  422212:	mov    bl,0xfe
  422214:	ss cli 
  422216:	stos   BYTE PTR es:[edi],al
  422217:	add    cl,BYTE PTR [edi+0x25616155]
  42221d:	icebp  
  42221e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42221f:	push   esp
  422220:	cmp    DWORD PTR [edi+0xfa8c8da],0x23
  422227:	cmp    ebx,esi
  422229:	repz push esi
  42222b:	fadd   QWORD PTR [edx]
  42222d:	pop    ebp
  42222e:	jnp    0x4221e1
  422230:	jnp    0x4221b2
  422232:	dec    eax
  422233:	cwde   
  422234:	mov    ch,0x62
  422236:	push   0x711650ae
  42223b:	imul   esi,DWORD PTR [ecx+0x2c],0xffffffb3
  42223f:	mov    ebx,0xcd552311
  422244:	sub    eax,DWORD PTR [edx]
  422246:	ins    DWORD PTR es:[edi],dx
  422247:	and    BYTE PTR [ecx+0x4a],bl
  42224a:	retf   
  42224b:	add    esi,edi
  42224d:	mov    cl,0xb5
  42224f:	mov    dh,0xa2
  422251:	mov    eax,ds:0xee10aaa5
  422256:	cdq    
  422257:	xchg   edx,eax
  422258:	(bad)  
  422259:	je     0x422233
  42225b:	and    al,0xd5
  42225d:	repz scas eax,DWORD PTR es:[edi]
  42225f:	mov    esi,0x5809c1e5
  422264:	jae    0x422242
  422266:	sbb    ch,BYTE PTR [ecx]
  422268:	pop    ebp
  422269:	add    BYTE PTR es:[ecx-0x3d3442e7],ch
  422270:	push   cs
  422271:	dec    edi
  422272:	or     eax,0x9b5eb8ae
  422277:	push   0xffffffd0
  422279:	mov    ch,0x89
  42227b:	jno    0x4222d3
  42227d:	push   ebp
  42227e:	scas   eax,DWORD PTR es:[edi]
  42227f:	lea    eax,[ebx+0x72]
  422282:	jecxz  0x42221c
  422284:	inc    edi
  422285:	test   al,0xcc
  422287:	in     eax,dx
  422288:	lds    edi,FWORD PTR [eax-0x76e229aa]
  42228e:	retf   0x9b8a
  422291:	mov    cs,ecx
  422293:	addr16 push cs
  422295:	jb     0x4222a7
  422297:	pop    ds
  422298:	dec    edx
  422299:	pop    ds
  42229a:	and    al,0xce
  42229c:	aas    
  42229d:	and    ch,BYTE PTR ds:0x16a38199
  4222a3:	xor    eax,esi
  4222a5:	and    eax,0xd434bec9
  4222aa:	ror    DWORD PTR [eax-0x5149fbfc],cl
  4222b0:	test   eax,0xd6d0960b
  4222b5:	adc    BYTE PTR [edx+ebx*8+0x23],cl
  4222b9:	nop
  4222ba:	outs   dx,BYTE PTR ds:[esi]
  4222bb:	ret    
  4222bc:	ins    DWORD PTR es:[edi],dx
  4222bd:	mov    edi,0x5ff05cc9
  4222c2:	ins    DWORD PTR es:[edi],dx
  4222c3:	pop    ss
  4222c4:	or     ecx,DWORD PTR [ecx]
  4222c6:	mov    ecx,DWORD PTR es:[esi+0x78b1422e]
  4222cd:	retf   
  4222ce:	mov    ebx,0xd3bc33d8
  4222d3:	mov    ds:0x893a4b69,eax
  4222d8:	mov    dh,0x91
  4222da:	and    ebp,ebx
  4222dc:	int3   
  4222dd:	mov    esp,0x76e01223
  4222e2:	imul   eax,esi,0x24
  4222e5:	pandn  mm5,QWORD PTR [edi-0x60fe93af]
  4222ec:	mov    ss,WORD PTR [ecx-0x1f]
  4222ef:	inc    edi
  4222f0:	push   ecx
  4222f1:	jns    0x4222dc
  4222f3:	add    al,0x3a
  4222f5:	daa    
  4222f6:	sbb    DWORD PTR [esi+0x3b6263fc],esp
  4222fc:	jmp    0x422293
  4222fe:	(bad)  
  422301:	mov    dl,0xdc
  422303:	jge    0x4222ce
  422305:	dec    edx
  422306:	sbb    bl,BYTE PTR [ebp+0xd]
  422309:	outs   dx,BYTE PTR ds:[esi]
  42230a:	inc    eax
  42230b:	cmp    cl,ah
  42230d:	leave  
  42230e:	xchg   esp,eax
  42230f:	sub    edx,DWORD PTR [ebp+0x7acade36]
  422315:	jns    0x4222e1
  422317:	test   eax,0xed00397e
  42231c:	cdq    
  42231d:	fcmovnb st,st(5)
  42231f:	inc    ecx
  422320:	inc    esi
  422321:	xchg   esi,eax
  422322:	fisttp WORD PTR [edi-0x6d59238]
  422328:	xchg   ebx,eax
  422329:	iret   
  42232a:	inc    esi
  42232b:	jge    0x422342
  42232d:	sub    edi,ebp
  42232f:	sub    ch,dl
  422331:	mov    bl,0xa8
  422333:	dec    edi
  422334:	and    eax,0x414865e9
  422339:	adc    esp,ebp
  42233b:	dec    edx
  42233c:	hlt    
  42233d:	jecxz  0x422392
  42233f:	scas   eax,DWORD PTR es:[edi]
  422340:	jmp    0xd85c:0x49380dfe
  422347:	dec    esp
  422348:	push   ds
  422349:	imul   ebx,DWORD PTR [edx+0x4f],0x1e8f624d
  422350:	ins    DWORD PTR es:[edi],dx
  422351:	sbb    ecx,0x7c99e447
  422357:	and    edi,DWORD PTR [ecx+0x1287d8c0]
  42235d:	mov    WORD PTR [edx-0x45559d26],?
  422363:	sub    BYTE PTR [eax],dl
  422365:	imul   BYTE PTR ds:0xd972c8e0
  42236b:	enter  0xa457,0x2f
  42236f:	dec    edx
  422370:	popa   
  422371:	lods   eax,DWORD PTR ds:[esi]
  422372:	xor    DWORD PTR ds:0x62fd6db7,esp
  422378:	pop    ds
  422379:	imul   ebp,DWORD PTR [esi+0x3c],0xffffffd7
  42237d:	mov    BYTE PTR [ecx+0x1af48041],bl
  422383:	xor    al,0x7d
  422385:	xchg   ebx,eax
  422386:	call   0x11f7:0x9a902460
  42238d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42238e:	fcmovb st,st(6)
  422390:	mov    al,0x6d
  422392:	adc    bl,BYTE PTR [edx+0x3406e394]
  422398:	(bad)  
  422399:	das    
  42239a:	(bad)  [bp+di+0x74]
  42239e:	inc    esp
  42239f:	pop    ss
  4223a0:	and    al,0xee
  4223a2:	mov    esp,0xd1daab73
  4223a7:	bound  edi,QWORD PTR [ebp-0x8c7df6f]
  4223ad:	dec    edx
  4223ae:	pop    edi
  4223af:	hlt    
  4223b0:	pop    ds
  4223b1:	sub    eax,edi
  4223b3:	test   bl,dl
  4223b5:	ins    DWORD PTR es:[edi],dx
  4223b6:	std    
  4223b7:	imul   edx,esp,0xdd33e64d
  4223bd:	xor    BYTE PTR [ebx-0x7f],dh
  4223c0:	dec    edi
  4223c1:	mov    ds:0xf503a126,eax
  4223c6:	mov    eax,eax
  4223c8:	xor    al,0xaf
  4223ca:	outs   dx,BYTE PTR ds:[esi]
  4223cb:	idiv   BYTE PTR [ecx-0x3a]
  4223ce:	jecxz  0x4223b9
  4223d0:	dec    eax
  4223d1:	jl     0x42237d
  4223d3:	call   0x8f1cb254
  4223d8:	pop    bx
  4223da:	ins    BYTE PTR es:[edi],dx
  4223db:	fwait
  4223dc:	je     0x4223d7
  4223de:	popf   
  4223df:	in     al,dx
  4223e0:	stos   BYTE PTR es:[edi],al
  4223e1:	pop    esp
  4223e2:	fld    QWORD PTR [esi-0x41]
  4223e5:	mov    edx,0xe24498c4
  4223ea:	push   es
  4223eb:	jmp    0xf0002298
  4223f0:	out    dx,eax
  4223f1:	in     al,dx
  4223f2:	push   ebp
  4223f3:	sar    DWORD PTR [edx-0x218d6020],cl
  4223f9:	dec    ebp
  4223fa:	adc    eax,0xf2ab3aed
  4223ff:	leave  
  422400:	add    eax,0x57fa8e76
  422405:	push   edi
  422406:	mov    al,ds:0xdf833c2f
  42240b:	inc    esi
  42240c:	push   ss
  42240d:	xchg   dh,dh
  42240f:	sbb    ch,BYTE PTR [eax]
  422411:	icebp  
  422412:	fisub  DWORD PTR [edi-0xf]
  422415:	jo     0x42244d
  422417:	(bad)  ds:0xf3f11b50
  42241d:	aaa    
  42241e:	cmp    DWORD PTR [ebx-0xc0176c4],0xda3aead0
  422428:	pusha  
  422429:	imul   ebp,ecx,0x940999f1
  42242f:	mov    ebx,0xae94d14c
  422434:	ins    BYTE PTR es:[edi],dx
  422435:	push   cs
  422436:	inc    eax
  422437:	pop    ecx
  422438:	mov    eax,0x11668c9c
  42243d:	aam    0x8c
  42243f:	xor    ch,BYTE PTR [ebp+0xf2c368c]
  422445:	pop    es
  422446:	inc    edi
  422447:	push   es
  422448:	dec    edx
  422449:	fadd   QWORD PTR [ecx]
  42244b:	and    ecx,DWORD PTR [ecx+0x4f]
  42244e:	pminub mm1,mm7
  422451:	add    esi,edi
  422453:	call   0xe5e736e3
  422458:	dec    eax
  422459:	add    ch,BYTE PTR [ebp+0x71]
  42245c:	jo     0x422422
  42245e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42245f:	sti    
  422460:	xchg   esi,eax
  422461:	dec    ecx
  422462:	adc    DWORD PTR [edi-0x21],ebp
  422465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422466:	xchg   ecx,eax
  422467:	test   al,0x47
  422469:	lds    eax,FWORD PTR [edx-0x2c9f3623]
  42246f:	fisttp QWORD PTR cs:[esi+eax*2-0x50]
  422474:	jl     0x42244f
  422476:	scas   eax,DWORD PTR es:[edi]
  422477:	mov    edi,0x2ec171bd
  42247c:	sar    BYTE PTR [ecx],1
  42247e:	add    al,0xe3
  422480:	ror    BYTE PTR [eax-0x3e7f1524],1
  422486:	loope  0x4224f3
  422488:	push   cs
  422489:	add    ebp,ebx
  42248b:	or     BYTE PTR [esi+edx*8+0x62],dh
  42248f:	pop    esi
  422490:	aaa    
  422491:	(bad)  [ebp+ebx*2+0x396aaca2]
  422498:	cmp    eax,0x84e82451
  42249d:	repnz jecxz 0x4224a0
  4224a0:	dec    ebx
  4224a1:	ret    0x2db6
  4224a4:	pop    ecx
  4224a5:	loopne 0x422451
  4224a7:	imul   edx,DWORD PTR [edi],0xffffffc0
  4224aa:	in     eax,dx
  4224ab:	ret    0x9cf7
  4224ae:	jmp    0x4224e2
  4224b0:	push   esp
  4224b1:	inc    esi
  4224b2:	ds jecxz 0x422508
  4224b5:	loope  0x42246c
  4224b7:	dec    ecx
  4224b8:	shl    BYTE PTR [eax-0x144be1fc],0x9
  4224bf:	outs   dx,BYTE PTR ds:[esi]
  4224c0:	mov    ah,0xf0
  4224c2:	adc    al,0x54
  4224c4:	pop    ebx
  4224c5:	adc    DWORD PTR [edx],esi
  4224c7:	dec    esi
  4224c8:	xchg   BYTE PTR [eax+0x7c12b968],al
  4224ce:	les    ecx,FWORD PTR [eax-0x6]
  4224d1:	mov    edi,0xdd0fcf08
  4224d6:	add    dl,al
  4224d8:	jmp    0x7021:0xc096f8a7
  4224df:	loope  0x422498
  4224e1:	xor    BYTE PTR [eax-0x51a9f8dd],dl
  4224e7:	xor    bl,cl
  4224e9:	es (bad) 
  4224eb:	aaa    
  4224ec:	ret    
  4224ed:	xor    DWORD PTR [edi],esi
  4224ef:	push   esi
  4224f0:	call   0x8c16:0x6323c837
  4224f7:	mov    cl,0x4f
  4224f9:	sub    ebp,edx
  4224fb:	xor    eax,0x7cc3ed15
  422500:	fld    QWORD PTR [ecx+eax*2-0x1199e192]
  422507:	outs   dx,DWORD PTR ds:[esi]
  422508:	xor    bl,ch
  42250a:	stos   DWORD PTR es:[edi],eax
  42250b:	sub    bh,BYTE PTR [esi-0x23a61287]
  422511:	and    edi,DWORD PTR [edi]
  422513:	ins    BYTE PTR es:[edi],dx
  422514:	mov    ds:0xfd025cee,eax
  422519:	pusha  
  42251a:	test   BYTE PTR [esi+0x6d],ah
  42251d:	push   0x4b
  42251f:	nop
  422520:	dec    edi
  422521:	push   edx
  422522:	outs   dx,BYTE PTR ds:[esi]
  422523:	push   edi
  422524:	inc    esi
  422525:	iret   
  422526:	lods   al,BYTE PTR ds:[esi]
  422527:	pop    edx
  422528:	in     al,0x8e
  42252a:	sbb    eax,0x46155bad
  42252f:	mov    dh,0x1c
  422531:	add    esi,DWORD PTR [eiz*1-0x1ffd7965]
  422538:	xor    eax,0xe7a042cd
  42253d:	(bad)  
  42253e:	dec    ecx
  422540:	out    dx,eax
  422541:	adc    esp,DWORD PTR [esi-0x6b]
  422544:	mov    eax,0xe21e7c1d
  422549:	xchg   edx,eax
  42254a:	xchg   edi,eax
  42254b:	inc    esp
  42254c:	mov    esp,0xda379ce9
  422551:	dec    edx
  422552:	pop    esp
  422553:	pop    esp
  422554:	test   al,0xed
  422556:	push   eax
  422557:	cs push 0x14349523
  42255d:	mov    bx,0x9c39
  422561:	shl    DWORD PTR [esp+eax*8],1
  422564:	xchg   ebx,eax
  422565:	push   0x126ca919
  42256a:	sti    
  42256b:	pop    es
  42256c:	cli    
  42256d:	test   eax,0xfad760c0
  422572:	or     bl,dh
  422574:	lds    esi,FWORD PTR [eax-0x728d9285]
  42257a:	sub    esi,eax
  42257c:	inc    esi
  42257d:	ret    0x9a11
  422580:	repnz scas al,BYTE PTR es:[edi]
  422582:	mov    dl,0x35
  422584:	xor    bl,BYTE PTR [ecx-0x74]
  422587:	and    al,0xd2
  422589:	sub    DWORD PTR [eax-0x12f173a7],0x2d4d149e
  422593:	je     0x422546
  422595:	jb     0x4225bf
  422597:	pop    ecx
  422598:	xor    al,BYTE PTR [ecx+0x13d1cdb1]
  42259e:	push   edx
  42259f:	xchg   esp,eax
  4225a0:	mov    dh,0x4f
  4225a2:	rcr    DWORD PTR [ecx+0x15],0x24
  4225a6:	mov    ds:0xfef091e8,eax
  4225ab:	frstor [eax+0x7]
  4225ae:	daa    
  4225af:	sbb    DWORD PTR [eax-0x5d18a492],0x24894de6
  4225b9:	in     eax,0x94
  4225bb:	pushf  
  4225bc:	dec    ebp
  4225bd:	add    eax,0x6fb9413f
  4225c2:	cmp    esi,esi
  4225c4:	aas    
  4225c5:	or     BYTE PTR [edi+0x17],cl
  4225c8:	daa    
  4225c9:	popf   
  4225ca:	jle    0x422560
  4225cc:	xchg   ebx,eax
  4225cd:	scas   al,BYTE PTR es:[edi]
  4225ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225cf:	mov    esi,0xb68af99b
  4225d4:	jno    0x42258b
  4225d6:	xchg   edi,eax
  4225d7:	jbe    0x422617
  4225d9:	ror    DWORD PTR [edi],cl
  4225db:	int    0x59
  4225dd:	mov    ebp,0xba4b885b
  4225e2:	mov    edi,0x11551af8
  4225e7:	jmp    0x422588
  4225e9:	pop    esi
  4225ea:	fiadd  DWORD PTR [edi-0x1b]
  4225ed:	(bad)  
  4225ee:	pop    edx
  4225ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f0:	std    
  4225f1:	inc    ecx
  4225f2:	and    eax,0x2e311738
  4225f7:	stos   BYTE PTR es:[edi],al
  4225f8:	inc    ecx
  4225f9:	dec    edi
  4225fa:	xchg   BYTE PTR [edi+eax*4-0x3f],al
  4225fe:	jno    0x42267e
  422600:	in     eax,dx
  422601:	mov    eax,ds:0x94d45905
  422606:	mov    ds:0x85e56af8,al
  42260b:	push   edi
  42260c:	sub    BYTE PTR [esi],bl
  42260e:	dec    esi
  42260f:	popf   
  422610:	mov    ch,0x3a
  422612:	adc    al,0xa8
  422614:	mov    ss,WORD PTR [ecx+ebx*8-0x78ee5687]
  42261b:	push   es
  42261c:	idiv   edi
  42261e:	mov    dh,0xb
  422620:	sub    ch,BYTE PTR [ecx+0x27]
  422623:	loopne 0x4225e3
  422625:	fisubr WORD PTR [edi]
  422627:	pushf  
  422628:	pop    ss
  422629:	mov    bl,0xab
  42262b:	cld    
  42262c:	lods   al,BYTE PTR ds:[esi]
  42262d:	shl    DWORD PTR [esi+0x71d1143d],0x17
  422634:	add    eax,0x270857dd
  422639:	es das 
  42263b:	arpl   WORD PTR [esi+edi*2-0x47],cx
  42263f:	sbb    ebp,DWORD PTR [eax-0x34]
  422642:	out    0xd,eax
  422644:	sub    BYTE PTR [ebx+eiz*8+0x60],dh
  422648:	jl     0x422649
  42264a:	hlt    
  42264b:	pusha  
  42264c:	cld    
  42264d:	mov    bh,0x27
  42264f:	dec    ecx
  422650:	pop    ebx
  422651:	mov    ds:0x3d195ff7,al
  422656:	mov    edx,0xf1d2074
  42265b:	ss pushf 
  42265d:	arpl   WORD PTR [esp+esi*8-0xe],bp
  422661:	or     al,0xcb
  422663:	jno    0x422692
  422665:	scas   al,BYTE PTR es:[edi]
  422666:	or     BYTE PTR [edi-0x28dcffe0],ah
  42266c:	add    bl,BYTE PTR [edx]
  42266e:	inc    edi
  42266f:	jmp    0x42269c
  422671:	jae    0x4226ac
  422673:	dec    ecx
  422674:	(bad)  [ecx-0xe]
  422677:	add    esp,0x6a1317fe
  42267d:	(bad)  
  42267e:	pop    ss
  42267f:	icebp  
  422680:	push   cs
  422681:	dec    edx
  422682:	sbb    DWORD PTR [edx-0x1c],edx
  422685:	mov    WORD PTR [edx+0x3f],ds
  422688:	mov    dl,0xbb
  42268a:	into   
  42268b:	shl    BYTE PTR [edx-0x78],1
  42268e:	sbb    bh,BYTE PTR [ecx]
  422690:	sub    BYTE PTR [ebp-0x5e],0xd
  422694:	mov    ebp,0x23e61b9e
  422699:	cdq    
  42269a:	dec    ebx
  42269b:	or     eax,0xd0ed7f04
  4226a0:	and    BYTE PTR [esi*8+0x27b9dc0e],cl
  4226a7:	mov    bl,0x10
  4226a9:	div    DWORD PTR [esi+0x1c742490]
  4226af:	inc    edx
  4226b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b1:	jo     0x4226b0
  4226b3:	adc    DWORD PTR [eax+edi*8-0x44],ecx
  4226b7:	push   0x44
  4226b9:	jge    0x422681
  4226bb:	push   0x6c
  4226bd:	aaa    
  4226be:	push   ecx
  4226bf:	aam    0x90
  4226c1:	push   esi
  4226c2:	ss sti 
  4226c4:	jecxz  0x422687
  4226c6:	dec    edx
  4226c7:	scas   al,BYTE PTR es:[edi]
  4226c8:	mov    esi,eax
  4226ca:	sub    ebp,esi
  4226cc:	sbb    edi,DWORD PTR [ebx-0x21]
  4226cf:	mov    ebp,0xbbbeaea7
  4226d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d5:	or     ch,ch
  4226d7:	in     al,dx
  4226d8:	cli    
  4226d9:	push   es
  4226da:	jns    0x422750
  4226dc:	(bad)  
  4226dd:	nop
  4226de:	pop    eax
  4226df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e0:	pop    esp
  4226e1:	rcr    BYTE PTR [edx],1
  4226e3:	pop    es
  4226e4:	(bad)  
  4226e5:	retf   
  4226e6:	jmp    0x422734
  4226e8:	and    edi,ecx
  4226ea:	or     eax,0xa391546e
  4226ef:	call   0x88ae:0xdf027db6
  4226f6:	loope  0x422777
  4226f8:	dec    ebx
  4226f9:	or     esp,DWORD PTR [esp+ecx*2]
  4226fc:	mov    edx,0x66ccb4d
  422701:	je     0x422742
  422703:	aam    0xc9
  422705:	or     BYTE PTR [edi+0x5f6b9611],dh
  42270b:	test   DWORD PTR [ecx+0x534b375b],esp
  422711:	cdq    
  422712:	add    al,0x90
  422714:	mov    dl,0x82
  422716:	add    al,0xa1
  422718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422719:	imul   esp,DWORD PTR [eax-0x2a],0x3e
  42271d:	or     edi,0x59
  422720:	(bad)  
  422722:	mov    al,0x2c
  422724:	je     0x42272a
  422726:	aaa    
  422727:	inc    ecx
  422728:	add    al,0x58
  42272a:	cmp    edx,esi
  42272c:	adc    esi,esi
  42272e:	jo     0x42278b
  422730:	pusha  
  422731:	or     al,0x91
  422733:	mov    eax,0x4f797a32
  422738:	cmc    
  422739:	dec    eax
  42273a:	int3   
  42273b:	hlt    
  42273c:	push   cs
  42273d:	aaa    
  42273e:	pop    eax
  42273f:	xor    bl,cl
  422741:	inc    esp
  422742:	mov    bh,0xb3
  422744:	sar    al,cl
  422746:	dec    edx
  422747:	mov    ds:0x69503ae0,al
  42274c:	push   ebx
  42274d:	adc    al,0xde
  42274f:	or     ebp,DWORD PTR [edx-0x15f87893]
  422755:	(bad)  
  422757:	fwait
  422758:	iret   
  422759:	sub    edi,DWORD PTR [ecx-0x6ca7a304]
  42275f:	in     eax,dx
  422760:	and    cl,BYTE PTR ds:0x57e8e55
  422766:	jne    0x42277e
  422768:	xchg   ebx,ebp
  42276a:	nop
  42276b:	sub    eax,0x56b7370b
  422770:	mov    DWORD PTR [ecx+eiz*4],edx
  422773:	ret    0x413f
  422776:	add    esi,DWORD PTR [ecx-0x60e4d45a]
  42277c:	data16 fisttp DWORD PTR [esi-0x5ee493fa]
  422783:	xchg   edi,eax
  422784:	or     BYTE PTR [eax-0x69],bl
  422787:	and    eax,0x33
  42278a:	cld    
  42278b:	push   edx
  42278c:	in     eax,0xd
  42278e:	jnp    0x42277a
  422790:	retf   0x6a9c
  422793:	mov    edi,0xf2b43d53
  422798:	jge    0x4227e4
  42279a:	pusha  
  42279b:	loopne 0x4227bd
  42279d:	sub    al,0x45
  42279f:	out    0x7a,al
  4227a1:	(bad)  
  4227a3:	jge    0x42274a
  4227a5:	inc    edx
  4227a6:	xlat   BYTE PTR ds:[ebx]
  4227a7:	mov    edx,0x2c5b5670
  4227ac:	xor    DWORD PTR [eax],esi
  4227ae:	popa   
  4227af:	pushf  
  4227b0:	in     al,dx
  4227b1:	mov    ecx,0xa7396821
  4227b6:	jecxz  0x42282e
  4227b8:	cmc    
  4227b9:	add    DWORD PTR [ebx-0x3585c778],edi
  4227bf:	aas    
  4227c0:	cmp    ch,bl
  4227c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c3:	xchg   ebp,eax
  4227c4:	adc    eax,0xe8140e46
  4227c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ca:	cmp    WORD PTR [edi+0xcb3113],0x62f8
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	mov    bh,0x9e
  4227d6:	jmp    DWORD PTR [eax]
  4227d8:	fistp  QWORD PTR [edi-0x358f2923]
  4227de:	leave  
  4227df:	and    dh,ch
  4227e1:	and    eax,0xedc9dc8a
  4227e6:	jno    0x4227b8
  4227e8:	repnz or eax,DWORD PTR [ebx+edi*8]
  4227ec:	lods   al,BYTE PTR ds:[esi]
  4227ed:	adc    eax,0xb645f496
  4227f2:	jle    0x422864
  4227f4:	push   0x22
  4227f6:	adc    BYTE PTR [ebp-0x1a4ba734],ah
  4227fc:	stos   DWORD PTR es:[edi],eax
  4227fd:	lea    ebp,[edx]
  4227ff:	icebp  
  422800:	xchg   ecx,eax
  422801:	mov    esp,0xe479e4bf
  422806:	mov    WORD PTR [ebp+0x3c83221c],fs
  42280c:	sbb    DWORD PTR [ecx],ecx
  42280e:	mov    al,0x65
  422810:	rcl    BYTE PTR [ebx-0x7a],cl
  422813:	inc    edx
  422814:	outs   dx,BYTE PTR ds:[esi]
  422815:	cmp    al,0x44
  422817:	sbb    eax,0xc9c77ca7
  42281c:	sahf   
  42281d:	fistp  QWORD PTR [esi-0x27]
  422820:	pop    edx
  422821:	push   ebx
  422822:	(bad)  
  422823:	sub    DWORD PTR [esi-0x65c7eade],eax
  422829:	xchg   BYTE PTR [ebp+0x39],bl
  42282c:	and    dh,bl
  42282e:	(bad)  
  42282f:	(bad)  
  422831:	and    bh,ch
  422833:	cdq    
  422834:	push   ebx
  422835:	jl     0x4228ac
  422837:	test   DWORD PTR [bx],0x302ba311
  42283e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42283f:	jae    0x42288e
  422841:	adc    bl,BYTE PTR [esi]
  422843:	xor    al,0xb0
  422845:	mov    al,0xc7
  422847:	mov    edi,cs
  422849:	paddw  mm3,QWORD PTR [edi-0x60df8757]
  422850:	cmp    DWORD PTR [edx],0x99a7408b
  422856:	or     BYTE PTR [edx+0x28],al
  422859:	jbe    0x422845
  42285b:	adc    edx,DWORD PTR [edx-0x7be88936]
  422861:	fnstsw WORD PTR [ebp-0x56]
  422864:	ins    BYTE PTR es:[edi],dx
  422865:	push   edi
  422866:	and    ecx,eax
  422868:	pop    ss
  422869:	sub    esp,0xffffff9a
  42286c:	mov    ecx,0xf13422ae
  422871:	or     BYTE PTR [esi],dl
  422873:	rcr    DWORD PTR [ebx-0x5],0x6f
  422877:	jge    0x4228cd
  422879:	cmp    ecx,DWORD PTR [eax-0x6a]
  42287c:	mov    dh,BYTE PTR [ecx-0x3]
  42287f:	xchg   ebx,eax
  422880:	sub    eax,0x6b6c226d
  422885:	mov    BYTE PTR [ebx-0x503a767d],dl
  42288b:	pop    ds
  42288c:	adc    eax,0x7ffd67b3
  422891:	iret   
  422892:	stos   BYTE PTR es:[edi],al
  422893:	add    BYTE PTR [edi],0xe6
  422896:	jmp    0x422886
  422898:	sub    BYTE PTR [ecx],ch
  42289a:	jge    0x422820
  42289c:	loop   0x422896
  42289e:	fsubrp st(4),st
  4228a0:	test   DWORD PTR [edi],ebx
  4228a2:	and    esi,ebx
  4228a4:	in     eax,dx
  4228a5:	dec    esi
  4228a6:	into   
  4228a7:	cmp    ebp,DWORD PTR [ecx-0x48]
  4228aa:	in     al,0x11
  4228ac:	xor    eax,0xb252dfdf
  4228b1:	and    eax,0x6ca3bf7a
  4228b6:	fcmovne st,st(3)
  4228b8:	int    0x42
  4228ba:	mov    ah,0xf0
  4228bc:	fcomp  st(4)
  4228be:	stos   DWORD PTR es:[edi],eax
  4228bf:	fwait
  4228c0:	mov    al,0xaa
  4228c2:	fild   WORD PTR [edx-0x53]
  4228c5:	mov    ds:0xb66c4953,eax
  4228ca:	les    esi,FWORD PTR [edx]
  4228cc:	pause  
  4228ce:	xor    eax,0x2d36fd4b
  4228d3:	clc    
  4228d4:	out    dx,eax
  4228d5:	pop    ebp
  4228d6:	(bad)  [eax-0x8]
  4228d9:	mov    WORD PTR [ecx+eiz*1+0x5e],ss
  4228dd:	ins    DWORD PTR es:[edi],dx
  4228de:	pop    ds
  4228df:	pop    esp
  4228e0:	push   ecx
  4228e1:	js     0x4228c1
  4228e3:	sti    
  4228e4:	loop   0x42288d
  4228e6:	in     eax,0x53
  4228e8:	xchg   esp,eax
  4228e9:	push   eax
  4228ea:	or     ah,0x21
  4228ed:	mov    ebp,0x2c7053cf
  4228f2:	cmp    esp,esp
  4228f4:	push   0xffffff9e
  4228f6:	push   ebx
  4228f7:	add    eax,0xd665b707
  4228fc:	imul   DWORD PTR [edi+0x37]
  4228ff:	dec    esi
  422900:	mov    ah,0x37
  422902:	(bad)  
  422903:	(bad)  
  422904:	cwde   
  422905:	mov    dh,0xc
  422907:	call   0x12069927
  42290c:	sbb    al,0x22
  42290e:	arpl   WORD PTR [edx-0x7b02821c],ax
  422914:	arpl   WORD PTR [ebp-0x17cda5df],si
  42291a:	push   ebx
  42291b:	and    eax,0x2220de19
  422920:	lds    esp,FWORD PTR [esp+esi*1-0x5246be44]
  422927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422928:	out    0x42,al
  42292a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42292b:	enter  0xfbcb,0x46
  42292f:	adc    al,0xab
  422931:	xor    BYTE PTR [edx-0x62],ah
  422934:	mov    edx,0xb5d22734
  422939:	xchg   edi,eax
  42293a:	rcl    DWORD PTR fs:[ebx+0x66a5030],1
  422941:	mov    ah,0xeb
  422943:	xor    BYTE PTR [edx+0x69],bh
  422946:	test   BYTE PTR [ebx+0x5a],dl
  422949:	sahf   
  42294a:	or     eax,0x3de459df
  42294f:	ficom  DWORD PTR cs:0x41e537c2
  422956:	or     dl,dl
  422958:	(bad)  
  422959:	pop    edi
  42295a:	ror    cl,cl
  42295c:	call   0x8432:0x6b91e14f
  422963:	adc    ebp,esi
  422965:	ret    0xd0ca
  422968:	mov    DWORD PTR [edi],edi
  42296a:	scas   eax,DWORD PTR es:[edi]
  42296b:	or     eax,0xe64d0da1
  422970:	outs   dx,DWORD PTR ds:[esi]
  422971:	mov    ebp,0xd3b936a9
  422976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422977:	pop    edx
  422978:	scas   eax,DWORD PTR es:[edi]
  422979:	inc    eax
  42297a:	dec    edi
  42297b:	sbb    DWORD PTR [edx],ecx
  42297d:	jg     0x4229d7
  42297f:	test   eax,0x5364e4e9
  422985:	pop    ebp
  422986:	push   ebp
  422987:	cld    
  422988:	cli    
  422989:	cmp    bh,0x28
  42298c:	or     al,0x52
  42298e:	and    DWORD PTR [ecx+0x5e3c0635],edi
  422994:	ja     0x42293f
  422996:	xchg   edx,eax
  422997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422998:	mov    dh,BYTE PTR [edi-0x26a3e1]
  42299e:	cdq    
  42299f:	sub    esi,esp
  4229a1:	dec    esi
  4229a2:	push   esi
  4229a3:	aas    
  4229a4:	sub    eax,0xca2e2c3b
  4229a9:	mov    ebx,0x3d3ef652
  4229ae:	mov    eax,DWORD PTR [edi+edx*4-0x299214d9]
  4229b5:	les    eax,FWORD PTR [edi-0x15]
  4229b8:	in     eax,dx
  4229b9:	daa    
  4229ba:	or     BYTE PTR [esp+ecx*8],0xc7
  4229be:	cld    
  4229bf:	sbb    al,0x38
  4229c1:	hlt    
  4229c2:	popf   
  4229c3:	xchg   ebp,eax
  4229c4:	mov    dh,0xa5
  4229c6:	xchg   ebx,eax
  4229c7:	cmp    al,BYTE PTR [edx+edi*2]
  4229ca:	js     0x422a11
  4229cc:	(bad)  
  4229ce:	and    al,0xe2
  4229d0:	sbb    al,0x46
  4229d2:	ja     0x4229cf
  4229d4:	test   DWORD PTR [edi+0x45bb802d],esp
  4229da:	adc    BYTE PTR [edi],al
  4229dc:	js     0x4229d2
  4229de:	jecxz  0x422993
  4229e0:	and    DWORD PTR [ecx],ebx
  4229e2:	out    dx,eax
  4229e3:	pop    edi
  4229e4:	sti    
  4229e5:	push   cs
  4229e6:	xchg   esp,eax
  4229e7:	xchg   ebp,eax
  4229e8:	xor    DWORD PTR [ecx],esp
  4229ea:	fstp   QWORD PTR [esi-0x43a9f12f]
  4229f0:	xchg   ebx,eax
  4229f1:	pop    edx
  4229f2:	aad    0x53
  4229f4:	fidiv  WORD PTR [esi+0x29]
  4229f7:	in     eax,0x63
  4229f9:	fidivr DWORD PTR [esi+ebp*2+0x441bbee5]
  422a00:	iret   
  422a01:	inc    ebx
  422a02:	sar    BYTE PTR [edx],cl
  422a04:	jmp    0x96e0:0x84efa11e
  422a0b:	mov    ds:0xa683df11,al
  422a10:	fwait
  422a11:	ins    DWORD PTR es:[edi],dx
  422a12:	stos   DWORD PTR es:[edi],eax
  422a13:	sti    
  422a14:	jo     0x4229cc
  422a16:	xchg   esp,eax
  422a17:	jge    0x4229a5
  422a19:	dec    esi
  422a1a:	es ret 
  422a1c:	or     ebp,DWORD PTR [esi]
  422a1e:	pop    ebx
  422a1f:	xchg   ah,cl
  422a21:	dec    esp
  422a22:	or     esp,ebx
  422a24:	lods   eax,DWORD PTR ds:[esi]
  422a25:	call   0x356e:0xbe8aa033
  422a2c:	imul   edx,DWORD PTR ds:0x2edca376,0xffffff98
  422a33:	sahf   
  422a34:	mov    ds:0x4554074b,eax
  422a39:	lds    esp,FWORD PTR [ebx+0x6f]
  422a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a3e:	cmp    esp,DWORD PTR [eax+ebx*1+0x553bf2e1]
  422a45:	lahf   
  422a46:	mov    ds:0xe3f2199b,eax
  422a4b:	add    al,0xc7
  422a4d:	or     ebx,edx
  422a4f:	add    BYTE PTR [edi],0x5
  422a52:	(bad)  
  422a53:	mov    edx,0x6c41e606
  422a58:	fcomp  st(7)
  422a5a:	leave  
  422a5b:	fsubr  DWORD PTR [edx+0x2b]
  422a5e:	xchg   ebx,eax
  422a5f:	mov    al,0x81
  422a61:	and    DWORD PTR [edi],ebx
  422a63:	sub    edx,DWORD PTR [ebp+0x70]
  422a66:	arpl   si,cx
  422a68:	stos   BYTE PTR es:[edi],al
  422a69:	cmp    BYTE PTR [esi+eiz*2-0x1cf9b3be],ch
  422a70:	push   cs
  422a71:	(bad)  
  422a72:	mov    eax,0x756ef6e6
  422a77:	jo     0x422a02
  422a79:	shl    eax,cl
  422a7b:	mov    esi,0x867d3ffb
  422a80:	shr    BYTE PTR [eax+0x316ff243],1
  422a86:	(bad)  [ecx+edx*4-0x21a0f44b]
  422a8d:	clc    
  422a8e:	dec    ebp
  422a8f:	cwde   
  422a90:	lea    esp,[ebp-0x3c]
  422a93:	mov    eax,ds:0xdad090a4
  422a98:	out    dx,al
  422a99:	pop    ecx
  422a9a:	xor    bh,ah
  422a9c:	push   ebx
  422a9d:	out    0xd,al
  422a9f:	mov    ds,WORD PTR ds:0x4b732a42
  422aa5:	push   ss
  422aa6:	dec    esi
  422aa7:	daa    
  422aa8:	inc    edx
  422aa9:	jp     0x422a4e
  422aab:	cld    
  422aac:	push   es
  422aad:	rcr    DWORD PTR [ecx],cl
  422aaf:	adc    eax,0x67a70ea3
  422ab4:	xor    al,0xef
  422ab6:	inc    ecx
  422ab7:	xor    al,BYTE PTR [ecx+0x4b]
  422aba:	out    dx,al
  422abb:	pop    ss
  422abc:	loope  0x422af5
  422abe:	ror    BYTE PTR ds:0x27a7865,0x9
  422ac5:	inc    ecx
  422ac6:	fstp   DWORD PTR [ebx-0x4c3d9e9]
  422acc:	ret    
  422acd:	cwde   
  422ace:	out    dx,eax
  422acf:	and    al,0xc
  422ad1:	push   ds
  422ad2:	push   ecx
  422ad3:	sub    ebx,DWORD PTR [ebp+0x21]
  422ad6:	in     eax,dx
  422ad7:	push   ss
  422ad8:	shl    DWORD PTR ds:0x580d0189,cl
  422ade:	push   ecx
  422adf:	jb     0x422b52
  422ae1:	jb     0x422b0e
  422ae3:	(bad)  
  422ae4:	sbb    esp,ebp
  422ae6:	push   0x36
  422ae8:	jns    0x422aa7
  422aea:	pop    ss
  422aeb:	pop    esi
  422aec:	push   esp
  422aed:	mov    ebp,eax
  422aef:	xchg   esi,eax
  422af0:	xor    edi,ebp
  422af2:	es ja  0x422aa5
  422af5:	or     BYTE PTR [ecx-0xd577f8c],bh
  422afb:	mov    dh,0x39
  422afd:	out    0xef,al
  422aff:	and    eax,ebp
  422b01:	ret    
  422b02:	xor    dh,dl
  422b04:	loope  0x422b20
  422b06:	mov    ds:0x73d1b0a6,al
  422b0b:	push   ds
  422b0c:	outs   dx,DWORD PTR ds:[esi]
  422b0d:	jg     0x422b28
  422b0f:	push   0x14
  422b11:	iret   
  422b12:	test   DWORD PTR [ecx],ebx
  422b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b15:	push   edi
  422b16:	cli    
  422b17:	iret   
  422b18:	mov    bh,cl
  422b1a:	or     bl,BYTE PTR [ecx+edx*2-0x13]
  422b1e:	or     ch,BYTE PTR ds:0xffc3267f
  422b24:	cli    
  422b25:	cdq    
  422b26:	aaa    
  422b27:	adc    BYTE PTR [ebx-0x25],dl
  422b2a:	cmp    eax,0x18b10187
  422b2f:	les    ebx,FWORD PTR [esi]
  422b31:	adc    DWORD PTR [edx],edi
  422b33:	shrd   DWORD PTR [ecx],ecx,0xc5
  422b37:	inc    edi
  422b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b39:	sahf   
  422b3a:	ret    0xf319
  422b3d:	in     eax,dx
  422b3e:	ret    
  422b3f:	(bad)  
  422b41:	sti    
  422b42:	mov    dh,0x68
  422b44:	mov    DWORD PTR [edi-0x17],ebx
  422b47:	rcr    DWORD PTR ds:[ebp+0x3f4c1028],cl
  422b4e:	jg     0x422b80
  422b50:	sbb    eax,0x4f36c72
  422b55:	adc    BYTE PTR [ecx-0x3],dl
  422b58:	or     dl,BYTE PTR [edi]
  422b5a:	mov    cl,0x1d
  422b5c:	inc    ebx
  422b5d:	int3   
  422b5e:	jo     0x422b2f
  422b60:	jmp    0xe7379ce6
  422b65:	sub    dh,BYTE PTR [esi+0x22]
  422b68:	call   0x50a03b23
  422b6d:	adc    ebp,DWORD PTR [edi-0x1d101e68]
  422b73:	shl    cl,cl
  422b75:	push   0x39181ca4
  422b7a:	ror    BYTE PTR [esi],cl
  422b7c:	sbb    dh,BYTE PTR [edx+0x4d56ae8b]
  422b82:	xchg   ecx,eax
  422b83:	mov    esi,0x539af68b
  422b88:	test   BYTE PTR ds:0xb1a9c333,dl
  422b8e:	scas   eax,DWORD PTR es:[edi]
  422b8f:	sar    al,0x4f
  422b92:	fld    TBYTE PTR [edx+esi*2-0x3d2f6fea]
  422b99:	std    
  422b9a:	out    0xdb,eax
  422b9c:	test   al,0xd4
  422b9e:	dec    esp
  422b9f:	xor    ebx,DWORD PTR [edx]
  422ba1:	add    al,0x6c
  422ba3:	jno    0x422b73
  422ba5:	popa   
  422ba6:	ds inc edi
  422ba8:	addr16 push ebp
  422baa:	cmp    eax,0x84a3d0b1
  422baf:	mov    cx,0xa2c0
  422bb3:	jo     0x422b73
  422bb5:	popf   
  422bb6:	sub    edx,DWORD PTR [edx+0x15]
  422bb9:	push   edi
  422bba:	jmp    0x7d5c:0xc24f40be
  422bc1:	rol    BYTE PTR [edx-0x26a56de8],1
  422bc7:	or     BYTE PTR [edi],bh
  422bc9:	fwait
  422bca:	pop    edx
  422bcb:	xlat   BYTE PTR ds:[ebx]
  422bcc:	not    bh
  422bce:	cmp    BYTE PTR [ebx+edi*4],cl
  422bd1:	repz and eax,0x57f2d6df
  422bd7:	aas    
  422bd8:	into   
  422bd9:	icebp  
  422bda:	push   esp
  422bdb:	in     al,dx
  422bdc:	js     0x422c4b
  422bde:	mov    ebp,0xf7dc6e2f
  422be3:	pop    ebp
  422be4:	sbb    al,BYTE PTR [esi+0x67]
  422be7:	cli    
  422be8:	ins    DWORD PTR es:[edi],dx
  422be9:	pop    ds
  422bea:	lea    ebx,[edi-0x4c830576]
  422bf0:	adc    eax,0x22773368
  422bf5:	push   ebx
  422bf6:	jl     0x422c24
  422bf8:	push   0xc4d75f31
  422bfd:	adc    cl,0x96
  422c00:	sti    
  422c01:	pop    es
  422c02:	fdivr  DWORD PTR [edx+eax*2]
  422c05:	fnstenv gs:[ecx-0x749b81c5]
  422c0c:	sbb    cl,al
  422c0e:	cli    
  422c0f:	xlat   BYTE PTR ds:[ebx]
  422c10:	ror    esi,0xb
  422c13:	lds    esi,FWORD PTR [ebx-0x7bcf24f6]
  422c19:	repz jno 0x422c6e
  422c1c:	inc    edx
  422c1d:	push   ss
  422c1e:	and    ecx,0x5b42bcd8
  422c24:	test   esp,0x13bc426a
  422c2a:	mov    WORD PTR ds:[eax+0x2c],fs
  422c2e:	sbb    cl,BYTE PTR [eax+eax*2-0x40]
  422c32:	pop    eax
  422c33:	pop    edx
  422c34:	call   0x955cde3
  422c39:	test   al,0x4c
  422c3b:	inc    edi
  422c3c:	popa   
  422c3d:	mov    dl,0x8a
  422c3f:	outs   dx,BYTE PTR ds:[esi]
  422c40:	data16 jnp 0x422be6
  422c43:	mov    cs,WORD PTR [ecx+0x4a]
  422c46:	data16 jecxz 0x422c9b
  422c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4a:	out    0x32,al
  422c4c:	in     al,0xe9
  422c4e:	in     al,0x9c
  422c50:	inc    eax
  422c51:	jecxz  0x422c52
  422c53:	jecxz  0x422c9e
  422c55:	mov    bl,0x12
  422c57:	lock aad 0x46
  422c5a:	inc    DWORD PTR [ebp+0x3a]
  422c5d:	push   ss
  422c5e:	xor    esp,esi
  422c60:	pushf  
  422c61:	cmc    
  422c62:	lea    eax,ds:0xb0c2ad32
  422c68:	aaa    
  422c69:	call   0x54a9:0x8991cca9
  422c70:	(bad)  
  422c72:	xor    BYTE PTR [eax-0x18d2aa45],al
  422c78:	(bad)  
  422c79:	in     al,0x26
  422c7b:	aas    
  422c7c:	and    edx,DWORD PTR [eax-0x58]
  422c7f:	test   DWORD PTR [edi+ebp*4-0x63],ecx
  422c83:	sbb    DWORD PTR [ebx],ebp
  422c85:	dec    esi
  422c86:	push   edi
  422c87:	mov    ebx,0x3646daab
  422c8c:	rcl    BYTE PTR [ebp-0x1f],1
  422c8f:	mov    ds:0xd9634ea8,eax
  422c94:	pop    edx
  422c95:	push   edx
  422c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c97:	ja     0x422cef
  422c99:	scas   eax,DWORD PTR es:[edi]
  422c9a:	and    BYTE PTR [edi+0x61],dh
  422c9d:	add    BYTE PTR [ecx-0x2c520f4d],ah
  422ca3:	sub    al,0x4f
  422ca5:	jmp    0xf818:0x96c4046
  422cac:	jg     0x422ced
  422cae:	aad    0x58
  422cb0:	cs push ecx
  422cb2:	stc    
  422cb3:	xchg   BYTE PTR ss:[ebx-0x71],dl
  422cb7:	sub    DWORD PTR [ebx],0x8d21b374
  422cbd:	pushf  
  422cbe:	mov    DWORD PTR [ecx+eiz*2],esp
  422cc1:	into   
  422cc2:	jo     0x422d40
  422cc4:	ins    BYTE PTR es:[edi],dx
  422cc5:	xchg   ebx,eax
  422cc6:	mov    al,0xa5
  422cc8:	les    esi,FWORD PTR [edx+esi*4]
  422ccb:	inc    eax
  422ccc:	aad    0xe9
  422cce:	cmp    bl,BYTE PTR [edi-0x8]
  422cd1:	or     al,0x42
  422cd3:	dec    ecx
  422cd4:	jae    0x422c8b
  422cd6:	fwait
  422cd7:	mov    edx,0x5520eeb9
  422cdc:	dec    esp
  422cdd:	mov    ah,0x36
  422cdf:	jmp    edx
  422ce1:	xlat   BYTE PTR ds:[ebx]
  422ce2:	cwde   
  422ce3:	jno    0x422c77
  422ce5:	das    
  422ce6:	inc    esi
  422ce7:	sub    DWORD PTR [ebp-0x672fb2f9],ecx
  422ced:	cld    
  422cee:	fild   WORD PTR [eax+edi*4]
  422cf1:	xor    al,0xe0
  422cf3:	in     eax,0x89
  422cf5:	or     al,0x1
  422cf7:	in     al,dx
  422cf8:	or     bh,0xdb
  422cfb:	adc    esp,DWORD PTR [esi-0x2a204cab]
  422d01:	mov    bh,0x19
  422d03:	inc    ebx
  422d04:	inc    ebx
  422d05:	test   DWORD PTR [edi-0x2d],ebp
  422d08:	pop    esp
  422d09:	cs jns 0x422d08
  422d0c:	fnstsw ax
  422d0e:	mov    esp,DWORD PTR [eax+eiz*8+0x276324c9]
  422d15:	sbb    esi,esi
  422d17:	add    ch,BYTE PTR [esp+ebx*4+0x3e25cffb]
  422d1e:	cmp    eax,0x946e21b
  422d23:	sbb    BYTE PTR [ebp-0x5f],0xc9
  422d27:	sub    DWORD PTR [edx-0x1092bcc3],edx
  422d2d:	or     BYTE PTR [eax],dl
  422d2f:	xchg   ecx,eax
  422d30:	dec    ecx
  422d31:	outs   dx,DWORD PTR ds:[esi]
  422d32:	(bad)  
  422d34:	out    dx,al
  422d35:	retf   
  422d36:	inc    esp
  422d37:	inc    edx
  422d38:	pop    ecx
  422d39:	js     0x422ce2
  422d3b:	int3   
  422d3c:	call   0x91f74307
  422d41:	jp     0x422cc9
  422d43:	mov    ch,bh
  422d45:	out    0x2b,eax
  422d47:	or     BYTE PTR [eax-0x2c],ah
  422d4a:	or     eax,0x9953fea7
  422d4f:	je     0x422dc1
  422d51:	and    eax,0x920c5bfd
  422d56:	xor    ebx,esi
  422d58:	(bad)
  422d5c:	cmp    DWORD PTR [edi+0x3a],0xffffffd3
  422d60:	xor    ebp,DWORD PTR [ecx]
  422d62:	sbb    al,0xd6
  422d64:	lods   eax,DWORD PTR ds:[esi]
  422d65:	ss movzx ebp,dx
  422d69:	sbb    bl,ah
  422d6b:	fimul  DWORD PTR [edi+0x28]
  422d6e:	mov    dh,0x55
  422d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d71:	jmp    0x422d59
  422d73:	dec    eax
  422d74:	sbb    eax,0x2736ff2d
  422d79:	daa    
  422d7a:	in     al,dx
  422d7b:	sbb    DWORD PTR [eax+eiz*2+0x2b],ebx
  422d7f:	cdq    
  422d80:	imul   ebp,DWORD PTR [ebx+0x36efc5],0xfe74fc3c
  422d8a:	in     eax,0x44
  422d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d8d:	es retf 
  422d8f:	or     DWORD PTR [esi],edi
  422d91:	div    BYTE PTR [edi]
  422d93:	sbb    al,0xf7
  422d95:	pop    esp
  422d96:	repz lahf 
  422d98:	popf   
  422d99:	unpckhps xmm4,xmm0
  422d9c:	jecxz  0x422d5e
  422d9e:	in     al,dx
  422d9f:	mov    eax,?
  422da1:	rcr    DWORD PTR [ebx],0x56
  422da4:	dec    esp
  422da5:	call   0xe5e82412
  422daa:	(bad)  
  422dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dac:	xchg   dl,dl
  422dae:	or     ch,BYTE PTR [ebp+0x7d]
  422db1:	and    ecx,0xffffffd2
  422db4:	es ins BYTE PTR es:[edi],dx
  422db6:	sub    eax,0xaafe987a
  422dbb:	arpl   WORD PTR [ebx],dx
  422dbd:	lea    ecx,[esi+0x63]
  422dc0:	in     eax,dx
  422dc1:	pop    eax
  422dc2:	inc    esi
  422dc3:	inc    ebp
  422dc4:	cwde   
  422dc5:	pop    ebp
  422dc6:	xor    DWORD PTR [edx],eax
  422dc8:	mov    cl,0xe9
  422dca:	xchg   edx,eax
  422dcb:	repnz push edi
  422dcd:	push   esp
  422dce:	mov    esi,0x742d2c79
  422dd3:	mov    ds:0xa9684928,al
  422dd8:	push   ebp
  422dd9:	push   eax
  422dda:	dec    esi
  422ddb:	mov    ch,0x6e
  422ddd:	js     0x422e5e
  422ddf:	push   eax
  422de0:	push   ebx
  422de1:	cli    
  422de2:	scas   al,BYTE PTR es:[edi]
  422de3:	pop    esp
  422de4:	mov    cl,dl
  422de6:	sub    eax,0x4c434844
  422deb:	cs scas al,BYTE PTR es:[edi]
  422ded:	mov    esp,0xc31249ed
  422df2:	pop    es
  422df3:	daa    
  422df4:	ror    BYTE PTR [ebx-0x2e],cl
  422df7:	xor    eax,0xb2505e1d
  422dfc:	shl    BYTE PTR [edx],cl
  422dfe:	ret    0xa977
  422e01:	shl    bh,1
  422e03:	jecxz  0x422e07
  422e05:	push   cs
  422e06:	add    al,0x5f
  422e08:	fs int 0x4a
  422e0b:	fmul   QWORD PTR [ecx-0x56]
  422e0e:	adc    eax,0x92b276b6
  422e13:	sub    ch,ch
  422e15:	repz mov gs,WORD PTR [eax-0x38]
  422e19:	lahf   
  422e1a:	xor    eax,0x9544495f
  422e1f:	jge    0x422e8a
  422e21:	jg     0x422dd0
  422e23:	jne    0xc90f49d2
  422e29:	jno    0x422de9
  422e2b:	sub    al,0x9a
  422e2d:	shr    edi,0x28
  422e30:	xor    al,0x33
  422e32:	jne    0x422e70
  422e34:	js     0x422dec
  422e36:	dec    edi
  422e37:	mov    eax,0x24d50922
  422e3c:	jnp    0x422e0e
  422e3e:	lahf   
  422e3f:	inc    edi
  422e40:	out    0xe2,eax
  422e42:	(bad)  
  422e43:	jmp    0xfd1b2056
  422e48:	jnp    0x422e04
  422e4a:	jp     0x422e40
  422e4c:	mov    eax,ds:0x447e34fb
  422e51:	pop    ecx
  422e52:	pusha  
  422e53:	cli    
  422e54:	push   ds
  422e55:	or     BYTE PTR gs:[edx+0x10],dl
  422e59:	jg     0x422ea2
  422e5b:	dec    edx
  422e5c:	ins    DWORD PTR es:[edi],dx
  422e5d:	mov    esp,0xbfa7f7d
  422e62:	scas   al,BYTE PTR es:[edi]
  422e63:	cmp    al,0xde
  422e65:	and    eax,0xceaa839b
  422e6a:	cs ja  0x422ee0
  422e6d:	pop    ds
  422e6e:	mov    eax,0x640e5d01
  422e73:	cli    
  422e74:	(bad)  
  422e75:	xor    DWORD PTR [edi+eax*4-0x4f86b219],edi
  422e7c:	adc    bh,ah
  422e7e:	sub    al,0x99
  422e80:	mov    al,0x7e
  422e82:	stc    
  422e83:	dec    ebp
  422e84:	adc    al,0x77
  422e86:	sbb    eax,0x69997206
  422e8b:	(bad)  
  422e8d:	retf   0xb185
  422e90:	outs   dx,BYTE PTR ds:[esi]
  422e91:	inc    edi
  422e92:	mov    eax,0xb2935e2c
  422e97:	rol    DWORD PTR [edx+0x36],cl
  422e9a:	adc    al,0xe3
  422e9c:	mov    ecx,0x1bf8242f
  422ea1:	mov    al,0xb2
  422ea3:	shr    BYTE PTR [esi-0x35],cl
  422ea6:	or     ecx,eax
  422ea8:	and    al,0xb8
  422eaa:	bnd jp 0x422f03
  422ead:	test   dl,bh
  422eaf:	jne    0x422ece
  422eb1:	mov    dl,0x5b
  422eb3:	test   BYTE PTR [edi-0x3edecc30],ch
  422eb9:	inc    ecx
  422eba:	mov    ecx,0x309f6204
  422ebf:	push   cs
  422ec0:	in     eax,0x8b
  422ec2:	fild   DWORD PTR [eax+eax*8-0x76ca6add]
  422ec9:	inc    DWORD PTR [ebp+0x45]
  422ecc:	add    ecx,DWORD PTR [edx]
  422ece:	sbb    edx,edi
  422ed0:	ret    
  422ed1:	jnp    0x422f04
  422ed3:	adc    BYTE PTR [ecx-0x3759b024],ch
  422ed9:	inc    esp
  422eda:	jmp    0xc159:0x81d13c30
  422ee1:	push   ecx
  422ee2:	scas   eax,DWORD PTR es:[edi]
  422ee3:	jbe    0x422e7a
  422ee5:	enter  0x53a6,0x3
  422ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eea:	mov    edx,0xd64407ac
  422eef:	loope  0x422e72
  422ef1:	add    esi,edx
  422ef3:	push   0x1b721202
  422ef8:	mov    eax,ds:0xc93781a9
  422efd:	mov    bh,0xf9
  422eff:	lods   eax,DWORD PTR ds:[esi]
  422f00:	jns    0x422ec7
  422f02:	xor    esp,DWORD PTR [ebp-0x12]
  422f05:	and    DWORD PTR [ecx+0x2d272b33],eax
  422f0b:	jmp    0x422f1e
  422f0d:	inc    esp
  422f0e:	ret    0xceb1
  422f11:	mov    dh,0xd4
  422f13:	out    0x76,eax
  422f15:	and    DWORD PTR [edi+0x7f8dad3b],edx
  422f1b:	sbb    ah,BYTE PTR [edx]
  422f1d:	cmp    al,0x5c
  422f1f:	mov    cl,0x63
  422f21:	ret    0xad4e
  422f24:	out    0x5b,al
  422f26:	and    al,0xd6
  422f28:	and    al,0x21
  422f2a:	xchg   edx,eax
  422f2b:	stos   DWORD PTR es:[edi],eax
  422f2c:	pop    esp
  422f2d:	in     al,dx
  422f2e:	cmp    DWORD PTR [eax-0x37],esp
  422f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f32:	div    DWORD PTR [esi+0x5ea01045]
  422f38:	or     ecx,DWORD PTR [edx+0x6d]
  422f3b:	mov    bl,0xc5
  422f3d:	fldenv [eax-0x6c6df840]
  422f43:	gs cdq 
  422f45:	sub    esp,DWORD PTR [edi]
  422f47:	popf   
  422f48:	dec    ebp
  422f49:	jo     0x422ecc
  422f4b:	cmp    BYTE PTR [ecx-0x2f],bh
  422f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f4f:	cdq    
  422f50:	adc    al,0xb9
  422f52:	repnz (bad) 
  422f54:	sub    BYTE PTR [ebx-0xc],bh
  422f57:	rcr    al,0x9e
  422f5a:	(bad)  
  422f5b:	not    DWORD PTR [edx-0x18f1668b]
  422f61:	add    eax,0xacb33517
  422f66:	sub    ecx,DWORD PTR [edx-0x1c9433c6]
  422f6c:	and    BYTE PTR [ecx+0x699819da],bh
  422f72:	fst    QWORD PTR [ebp-0x4f]
  422f75:	mov    ds:0x7c9033d0,eax
  422f7a:	xor    edi,DWORD PTR [ebx]
  422f7c:	mov    DWORD PTR [edi+0x32cd4468],ebp
  422f82:	fs dec eax
  422f84:	mov    ah,0xc6
  422f86:	pop    edi
  422f87:	(bad)  
  422f88:	xor    BYTE PTR [ebp-0x1e3fdd93],bh
  422f8e:	nop
  422f8f:	lods   eax,DWORD PTR ds:[esi]
  422f90:	push   edx
  422f91:	add    bl,BYTE PTR [edi]
  422f93:	jmp    0x5f9e:0xd94d44e7
  422f9a:	aas    
  422f9b:	test   BYTE PTR [ecx+0xd],0xa
  422f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fa0:	lds    edx,FWORD PTR [esi]
  422fa2:	lea    ebx,[ebx-0x29]
  422fa5:	lods   al,BYTE PTR ds:[esi]
  422fa6:	mov    cl,0xac
  422fa8:	fild   DWORD PTR [edi]
  422faa:	adc    eax,DWORD PTR [ecx]
  422fac:	(bad)  
  422fad:	ror    BYTE PTR [eax],1
  422faf:	(bad)  
  422fb1:	out    dx,al
  422fb2:	(bad)  
  422fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fb4:	jne    0x422fe2
  422fb6:	pop    ebp
  422fb7:	lea    edx,[ebx]
  422fb9:	cld    
  422fba:	lods   al,BYTE PTR ds:[esi]
  422fbb:	fild   DWORD PTR [ebp+0x5acef750]
  422fc1:	out    0x36,al
  422fc3:	xchg   esi,eax
  422fc4:	cli    
  422fc5:	and    al,0xd8
  422fc7:	xchg   esp,eax
  422fc8:	pushf  
  422fc9:	xor    dl,cl
  422fcb:	js     0x422fe9
  422fcd:	repz aam 0x61
  422fd0:	inc    edx
  422fd1:	sub    cl,BYTE PTR [ecx+0x26141b2c]
  422fd7:	cli    
  422fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fd9:	lds    esi,FWORD PTR [edx-0x2f0d11c9]
  422fdf:	mov    eax,0x2a011e6
  422fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fe5:	adc    al,0xeb
  422fe7:	outs   dx,DWORD PTR fs:[esi]
  422fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fea:	mov    ecx,0x3dcaefbc
  422fef:	sysexit 
  422ff1:	dec    ebx
  422ff2:	sbb    eax,0xaf533db8
  422ff7:	retf   0xe913
  422ffa:	ins    DWORD PTR es:[edi],dx
  422ffb:	ret    
  422ffc:	mov    edx,0x376ece4d
  423001:	retf   0x8e50
  423004:	mov    bl,0x79
  423006:	stos   DWORD PTR es:[edi],eax
  423007:	fwait
  423008:	cli    
  423009:	retf   
  42300a:	das    
  42300b:	dec    eax
  42300c:	pop    esi
  42300d:	(bad)  
  42300f:	xor    ebx,DWORD PTR [edi+0x56110137]
  423015:	retf   
  423016:	mul    BYTE PTR [eax-0x16ec61c8]
  42301c:	mov    dl,0x93
  42301e:	mov    WORD PTR [edx+0x1b],?
  423021:	jmp    0xbed9:0xdb2d5a7c
  423028:	ret    0x4fca
  42302b:	fmul   DWORD PTR [edi-0x3427e8c]
  423031:	jb     0x42309c
  423033:	pop    ebp
  423034:	mov    ecx,0xee2af964
  423039:	cmp    al,0xc2
  42303b:	push   ebx
  42303c:	dec    ecx
  42303d:	test   BYTE PTR [eax-0x5a],bl
  423040:	adc    eax,0x34d1031e
  423045:	add    ah,BYTE PTR [ebx-0x2f]
  423048:	adc    eax,DWORD PTR [edx-0x7875c998]
  42304e:	pop    es
  42304f:	sbb    al,0x87
  423051:	mov    BYTE PTR [ebp+0x4f],ch
  423054:	aad    0xbb
  423056:	mov    ebx,0x5a89e6ae
  42305b:	sbb    DWORD PTR [edx+0x2c93f15b],edi
  423061:	dec    eax
  423062:	cdq    
  423063:	sbb    ch,0x44
  423066:	shl    BYTE PTR [edx],1
  423068:	out    dx,eax
  423069:	mul    DWORD PTR [eax-0x3e]
  42306c:	push   eax
  42306d:	xchg   ecx,eax
  42306e:	fild   DWORD PTR [edi-0x3739416e]
  423074:	popf   
  423075:	sti    
  423076:	sbb    BYTE PTR [edx],0x8a
  423079:	mov    cl,0xd3
  42307b:	imul   ebx,DWORD PTR [edi],0xffffffe1
  42307e:	out    dx,eax
  42307f:	dec    esp
  423080:	pop    esp
  423081:	ret    
  423082:	inc    esi
  423083:	and    bh,BYTE PTR [eax]
  423085:	push   ebx
  423086:	adc    eax,0x444c2ee3
  42308b:	inc    eax
  42308c:	jmp    0x4230bf
  42308e:	sbb    DWORD PTR [eax-0x7a61443e],ebp
  423094:	aas    
  423095:	mov    esp,0xa86ecc7e
  42309a:	or     BYTE PTR [ebx],bl
  42309c:	dec    edi
  42309d:	mov    ecx,0xf93d246b
  4230a2:	mov    eax,0x90286d6d
  4230a7:	sbb    DWORD PTR [esi-0x63],eax
  4230aa:	mov    ecx,0xb1d16250
  4230af:	cmc    
  4230b0:	add    ebx,ecx
  4230b2:	in     al,dx
  4230b3:	push   edi
  4230b4:	imul   edx,ecx,0xdaf1c057
  4230ba:	mov    al,ds:0x7cf060ae
  4230bf:	lods   eax,DWORD PTR ds:[esi]
  4230c0:	neg    DWORD PTR [esi+ecx*2-0x7e]
  4230c4:	cmp    ecx,DWORD PTR [edi]
  4230c6:	icebp  
  4230c7:	push   ecx
  4230c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230c9:	inc    edx
  4230ca:	int3   
  4230cb:	mov    dh,BYTE PTR [esi-0x28]
  4230ce:	sub    al,BYTE PTR [eax+edx*2+0x7b]
  4230d2:	call   0xf6b5:0x3c6635d4
  4230d9:	add    DWORD PTR [ebx-0x21a9e17],ecx
  4230df:	push   ds
  4230e0:	mov    ecx,0x65a94ab0
  4230e5:	and    dl,cl
  4230e7:	popa   
  4230e8:	xchg   edi,eax
  4230e9:	push   edi
  4230ea:	and    ebx,ebp
  4230ec:	lock bound esp,QWORD PTR [eax-0x9]
  4230f0:	adc    eax,0x3f7bdb12
  4230f5:	stos   BYTE PTR es:[edi],al
  4230f6:	sar    DWORD PTR [esi+eiz*2-0x4],cl
  4230fa:	pusha  
  4230fb:	and    al,0x98
  4230fd:	clc    
  4230fe:	push   ss
  4230ff:	xor    al,0xc8
  423101:	xor    dl,BYTE PTR [ecx]
  423103:	(bad)  
  423104:	xchg   edi,eax
  423105:	lods   eax,DWORD PTR ds:[esi]
  423106:	ja     0x4230a5
  423108:	mov    al,ds:0xcd1db152
  42310d:	out    dx,eax
  42310e:	ss inc esi
  423110:	int    0x6
  423112:	std    
  423113:	int3   
  423114:	push   edx
  423115:	(bad)  
  423116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423117:	push   esp
  423118:	dec    edi
  423119:	xor    BYTE PTR [ebp+edx*2+0x67],bh
  42311d:	xchg   esi,eax
  42311e:	out    dx,al
  42311f:	and    esi,DWORD PTR [eax+0x2319ffbb]
  423125:	xor    eax,0x1d840845
  42312a:	sub    al,0xf7
  42312c:	sahf   
  42312d:	out    0x53,al
  42312f:	test   edi,ebx
  423131:	test   esp,edi
  423133:	aaa    
  423134:	call   0x18d9:0x3066d3e0
  42313b:	sub    DWORD PTR [edi+eax*4],ecx
  42313e:	xor    ebp,esi
  423140:	lea    edi,[esi]
  423142:	out    0xe1,eax
  423144:	popa   
  423145:	jae    0x42310f
  423147:	aas    
  423148:	test   al,ah
  42314a:	xor    al,0xc2
  42314c:	imul   ecx,DWORD PTR [edx+eiz*8-0x46],0x85e013f3
  423154:	fwait
  423155:	retf   
  423156:	inc    edi
  423157:	test   eax,0xdc48ca62
  42315c:	in     eax,0x8d
  42315e:	stc    
  42315f:	test   DWORD PTR [eax],ebx
  423161:	(bad)  
  423162:	iret   
  423163:	xchg   ebp,eax
  423164:	or     cl,bh
  423166:	mov    ecx,0xcfc459e5
  42316b:	cmp    al,0x65
  42316d:	mov    ds:0x64e904f6,al
  423172:	push   0xffffffa0
  423174:	sub    eax,0xc2b5a394
  423179:	add    DWORD PTR [eax-0x54],esi
  42317c:	aaa    
  42317d:	push   ebp
  42317e:	out    dx,eax
  42317f:	das    
  423180:	xchg   BYTE PTR [esp+esi*8],bl
  423183:	stc    
  423184:	jno    0x42319f
  423186:	into   
  423187:	mov    esi,0x3302eb8e
  42318c:	mov    edi,0xf0fd59f3
  423191:	xchg   esp,eax
  423192:	xchg   ebp,eax
  423193:	ds loopne 0x42314a
  423196:	cmc    
  423197:	xchg   ecx,eax
  423198:	test   DWORD PTR [ecx],0xfc3f2ecf
  42319e:	fstp   QWORD PTR [ebp+0x2f23bf0c]
  4231a4:	in     eax,0x6
  4231a6:	push   esi
  4231a7:	jl     0x423163
  4231a9:	dec    DWORD PTR [eax]
  4231ab:	(bad)  
  4231ac:	sti    
  4231ad:	add    BYTE PTR [ebx],bl
  4231af:	pop    ebp
  4231b0:	inc    ecx
  4231b1:	(bad)  
  4231b2:	adc    DWORD PTR [ebx+0x242a4605],ebp
  4231b8:	stos   BYTE PTR es:[edi],al
  4231b9:	xlat   BYTE PTR ds:[ebx]
  4231ba:	loopne 0x423168
  4231bc:	cmp    DWORD PTR [edi+0x5312871c],0x933ec006
  4231c6:	push   es
  4231c7:	mov    ecx,ss
  4231c9:	aam    0x71
  4231cb:	dec    edi
  4231cc:	test   al,0x98
  4231ce:	data16 hlt 
  4231d0:	ss inc edi
  4231d2:	xor    DWORD PTR [edx+0x8bdb737],esp
  4231d8:	push   esp
  4231d9:	dec    edx
  4231da:	(bad)  
  4231db:	mov    edx,0x36632d4e
  4231e0:	das    
  4231e1:	adc    edx,ebp
  4231e3:	inc    ebx
  4231e4:	data16 out dx,al
  4231e6:	test   BYTE PTR [ecx-0x12ec34a0],bl
  4231ec:	xchg   DWORD PTR [esp+edi*1],esp
  4231ef:	cmp    eax,0xe10c613d
  4231f4:	sub    eax,0x9ae3ce3c
  4231f9:	daa    
  4231fa:	push   es
  4231fb:	and    ah,BYTE PTR [edx-0x2049320c]
  423201:	pop    esp
  423202:	ins    BYTE PTR es:[edi],dx
  423203:	jns    0x423189
  423205:	dec    ebp
  423206:	fmul   DWORD PTR [ecx+ecx*2]
  423209:	aaa    
  42320a:	nop
  42320b:	sub    al,BYTE PTR ds:0x4e127b97
  423211:	xor    BYTE PTR [ecx+eax*1],0x47
  423215:	sub    DWORD PTR [ecx],esp
  423217:	jno    0x42322b
  423219:	test   BYTE PTR [edx+0xc],bl
  42321c:	jp     0x42323d
  42321e:	adc    ah,al
  423220:	fcomi  st,st(4)
  423222:	cmc    
  423223:	inc    ebx
  423224:	push   ss
  423225:	mov    ecx,0x10813ceb
  42322a:	push   ebp
  42322b:	or     esp,DWORD PTR [ebp-0x9]
  42322e:	test   ebp,eax
  423230:	dec    eax
  423231:	xor    BYTE PTR [esi],ah
  423233:	inc    edx
  423234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423235:	and    edi,DWORD PTR [eax]
  423237:	xchg   esp,eax
  423238:	inc    esi
  423239:	es dec edi
  42323b:	mov    bl,0x35
  42323d:	adc    eax,0xd886c891
  423242:	pop    ebp
  423243:	mov    bl,0x86
  423245:	jae    0x4231ff
  423247:	in     eax,dx
  423248:	cmp    al,0x2e
  42324a:	pusha  
  42324b:	jbe    0x423288
  42324d:	bnd je 0x423284
  423250:	inc    ebx
  423251:	icebp  
  423252:	jbe    0x423273
  423254:	repnz mov edx,0xc97c6bd8
  42325a:	push   0x46
  42325c:	test   BYTE PTR [edi-0x59540b7d],ch
  423262:	test   BYTE PTR [eax+0x7a],bl
  423265:	jecxz  0x42324e
  423267:	add    bl,ch
  423269:	jl     0x4231fe
  42326b:	sahf   
  42326c:	mov    WORD PTR [ebx-0x12e7b5b2],ss
  423272:	clc    
  423273:	ins    BYTE PTR es:[edi],dx
  423274:	daa    
  423275:	mov    ds:0xea37d091,eax
  42327a:	xor    DWORD PTR [edi-0x62],ebx
  42327d:	sbb    BYTE PTR [ebp-0x18],ch
  423280:	mov    cl,0xdf
  423282:	test   eax,0x58bd2a76
  423287:	das    
  423288:	out    0x31,al
  42328a:	or     ecx,0x2b
  42328d:	std    
  42328e:	push   esp
  42328f:	fimul  DWORD PTR [edx]
  423291:	sub    ebx,ebp
  423293:	mov    ebx,0xa209c8e5
  423298:	push   0xe60112b6
  42329d:	mov    eax,ds:0xe5f7412f
  4232a2:	jnp    0x4232bb
  4232a4:	add    eax,0x86c8f511
  4232a9:	adc    bl,BYTE PTR [esi+0x49]
  4232ac:	lods   al,BYTE PTR ds:[esi]
  4232ad:	dec    ebp
  4232ae:	push   ebp
  4232af:	into   
  4232b0:	cmovbe ebp,DWORD PTR [edi+0x727ce89f]
  4232b7:	add    dh,bh
  4232b9:	test   dl,al
  4232bb:	ret    
  4232bc:	imul   ebp,DWORD PTR [esi+0x1d126c1d],0xffffffb2
  4232c3:	retf   0x55ea
  4232c6:	xchg   edx,eax
  4232c7:	xchg   BYTE PTR [eax-0x3c25cc33],bl
  4232cd:	fmul   st,st(1)
  4232cf:	pop    eax
  4232d0:	adc    BYTE PTR ds:0x7a82e0f6,bh
  4232d6:	and    BYTE PTR [ebx],ah
  4232d8:	outs   dx,DWORD PTR ds:[esi]
  4232d9:	pop    ds
  4232da:	sti    
  4232db:	addr16 test al,0x13
  4232de:	push   cs
  4232df:	or     esp,ebx
  4232e1:	jb     0x42330e
  4232e3:	(bad)  
  4232e4:	and    DWORD PTR [edi+0x77],edx
  4232e7:	xchg   al,dl
  4232e9:	(bad)  
  4232ea:	in     eax,dx
  4232eb:	(bad)  
  4232ec:	dec    ecx
  4232ed:	jmp    0x42334e
  4232ef:	jae    0x4232e7
  4232f1:	sub    bl,BYTE PTR [edi-0x6297699c]
  4232f7:	ins    DWORD PTR es:[edi],dx
  4232f8:	xchg   DWORD PTR [edx+0x50bb2390],ebp
  4232fe:	mov    edx,ebp
  423300:	add    BYTE PTR [eax+0x87cefc7],ch
  423306:	jge    0x4232b4
  423308:	dec    esp
  423309:	or     bl,bh
  42330b:	mov    ebp,0x39f7fa45
  423310:	int    0xef
  423312:	dec    esp
  423313:	in     eax,dx
  423314:	dec    edx
  423315:	(bad)  
  423316:	shr    DWORD PTR [esi+0xedfaf0f],cl
  42331c:	jp     0x423311
  42331e:	xor    BYTE PTR [eax],bl
  423320:	aaa    
  423321:	xor    ebp,esp
  423323:	(bad)  
  423324:	aam    0xe5
  423326:	mov    esi,DWORD PTR ds:[ebx-0x7ae626b0]
  42332d:	fdiv   DWORD PTR [edx]
  42332f:	(bad)  
  423330:	mov    bh,0x61
  423332:	push   edx
  423333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423334:	mov    edi,esi
  423336:	imul   ecx,DWORD PTR [esi-0x396d1844],0xff550faa
  423340:	push   esi
  423341:	popf   
  423342:	cli    
  423343:	daa    
  423344:	je     0x423385
  423346:	jb     0x423317
  423348:	aaa    
  423349:	jae    0x423388
  42334b:	inc    edi
  42334c:	and    dl,BYTE PTR [esi+0x33aa0c6d]
  423352:	test   BYTE PTR [esi+0x2f],bh
  423355:	aad    0xa7
  423357:	fsubr  QWORD PTR [edi-0x1ad431ad]
  42335d:	outs   dx,DWORD PTR ds:[esi]
  42335e:	in     eax,0x25
  423360:	xlat   BYTE PTR ds:[ebx]
  423361:	and    BYTE PTR [eax-0x16],dl
  423364:	sub    bl,BYTE PTR [esi+0x53591d1f]
  42336a:	push   ebx
  42336b:	xor    al,0x52
  42336d:	mov    BYTE PTR [ebx],dh
  42336f:	push   esi
  423370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423371:	jmp    0xb3b8:0xa92a81b9
  423378:	and    DWORD PTR [ecx-0x67],ebp
  42337b:	jns    0x4233b0
  42337d:	jle    0x4233b8
  42337f:	test   bp,sp
  423382:	sahf   
  423383:	ins    DWORD PTR es:[edi],dx
  423384:	retf   
  423385:	es scas al,BYTE PTR es:[edi]
  423387:	xchg   esp,eax
  423388:	mov    edi,DWORD PTR [esp+ebp*4-0x28]
  42338c:	xor    DWORD PTR [ebx-0xf],edi
  42338f:	ins    BYTE PTR es:[edi],dx
  423390:	in     al,dx
  423391:	push   0xe6812f64
  423396:	call   0xce:0xdce78b6b
  42339d:	(bad)  
  42339e:	and    eax,0x1df44ddb
  4233a3:	mov    ebx,0x18995daa
  4233a8:	mov    ch,0x57
  4233aa:	cwde   
  4233ab:	ret    0xc1f9
  4233ae:	jmp    0x4e9cab3b
  4233b3:	test   DWORD PTR [eax-0x7b],eax
  4233b6:	sbb    al,BYTE PTR [ecx+esi*4]
  4233b9:	adc    al,BYTE PTR [edi-0x2c]
  4233bc:	std    
  4233bd:	pop    edi
  4233be:	rcl    dh,1
  4233c0:	stc    
  4233c1:	ror    BYTE PTR [ebx-0x1e],cl
  4233c4:	aad    0xb2
  4233c6:	neg    BYTE PTR [ecx+0x1f1e3235]
  4233cc:	ret    0x4bda
  4233cf:	fcomp  QWORD PTR [ebp+eax*4+0xc9faf1c]
  4233d6:	scas   eax,DWORD PTR es:[edi]
  4233d7:	jns    0x423365
  4233d9:	call   0x4adabf8e
  4233de:	dec    edi
  4233df:	out    0x69,al
  4233e1:	jnp    0x4233df
  4233e3:	cmp    BYTE PTR [edx+ebx*2-0x5c87172f],cl
  4233ea:	jb     0x42338a
  4233ec:	sub    eax,0x5fb75fe6
  4233f1:	pop    ds
  4233f2:	jae    0x423429
  4233f4:	inc    ebx
  4233f5:	js     0x423468
  4233f7:	ja     0x4233c6
  4233f9:	pop    cx
  4233fb:	jnp    0x423441
  4233fd:	nop
  4233fe:	shr    BYTE PTR [edx+0x23924dbb],cl
  423404:	inc    edx
  423405:	mov    eax,0xf460380c
  42340a:	test   al,0xf5
  42340c:	cdq    
  42340d:	and    ecx,ebx
  42340f:	adc    eax,0xafdacc88
  423414:	fsubr  QWORD PTR [eax+0x34]
  423417:	data16 and BYTE PTR [eax+0x1ab87962],0xd6
  42341f:	or     BYTE PTR [esi],cl
  423421:	into   
  423422:	leave  
  423423:	dec    ebx
  423424:	add    al,0x85
  423426:	jno    0x423479
  423428:	mov    eax,ds
  42342a:	mov    WORD PTR [eax+ebx*1+0x28],gs
  42342e:	out    dx,al
  42342f:	or     edi,DWORD PTR [eax+ebx*1+0x75]
  423433:	ret    
  423434:	inc    ebx
  423435:	jne    0x423413
  423437:	lods   al,BYTE PTR ds:[esi]
  423438:	popf   
  423439:	enter  0x4d4c,0x11
  42343d:	add    ch,BYTE PTR [ebp+0xc664e8a]
  423443:	xor    eax,0x453f1179
  423448:	xchg   esi,eax
  423449:	out    0x94,eax
  42344b:	cmp    DWORD PTR [ebp+0x27f56980],eax
  423451:	lods   eax,DWORD PTR ds:[esi]
  423452:	xchg   edi,eax
  423453:	push   0xfffffff2
  423455:	imul   eax,DWORD PTR [ebx],0xffffffd3
  423458:	mov    ?,ebx
  42345a:	daa    
  42345b:	std    
  42345c:	jg     0x423424
  42345e:	(bad)  
  42345f:	ja     0x42347d
  423461:	jmp    0x6344:0xb002d373
  423468:	imul   esp,DWORD PTR [ebx],0x478ff259
  42346e:	dec    eax
  42346f:	and    esi,ecx
  423471:	ds pop esi
  423473:	mov    eax,0xb96c8541
  423478:	inc    esi
  423479:	mov    esi,ds
  42347b:	rcr    DWORD PTR [edx-0x8],cl
  42347e:	push   edx
  42347f:	inc    esi
  423480:	xchg   ebp,eax
  423481:	es (bad) 
  423483:	adc    eax,0x7ce5730d
  423488:	or     DWORD PTR [ecx],eax
  42348a:	lahf   
  42348b:	in     al,0x7
  42348d:	mov    dh,0x3f
  42348f:	std    
  423490:	daa    
  423491:	jns    0x4234fd
  423493:	outs   dx,BYTE PTR ds:[esi]
  423494:	shl    BYTE PTR [ebx-0x62],0x54
  423498:	dec    esp
  423499:	(bad)  
  42349a:	jmp    DWORD PTR [ebx]
  42349c:	mov    bl,0x30
  42349e:	cmp    DWORD PTR [eax-0x4d180e28],edx
  4234a4:	aam    0x1a
  4234a6:	out    dx,al
  4234a7:	test   edx,eax
  4234a9:	pop    eax
  4234aa:	sub    al,0x2b
  4234ac:	dec    eax
  4234ad:	cmp    DWORD PTR [edx],edx
  4234af:	(bad)  
  4234b0:	pop    edx
  4234b1:	adc    esi,0x57955012
  4234b7:	pop    ecx
  4234b8:	inc    edi
  4234b9:	or     DWORD PTR [edi-0x74],ebx
  4234bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234bd:	or     cl,BYTE PTR [edx+0x25bbbdf5]
  4234c3:	jae    0x4234f2
  4234c5:	(bad)  
  4234c7:	fmulp  st(6),st
  4234c9:	std    
  4234ca:	xor    ebx,ebx
  4234cc:	jae    0x4234aa
  4234ce:	sub    eax,ebp
  4234d0:	or     ch,dh
  4234d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234d3:	mov    es,ebx
  4234d5:	jge    0x423457
  4234d7:	jle    0x4234ec
  4234d9:	jns    0x4234ee
  4234db:	clc    
  4234dc:	push   ebx
  4234dd:	jp     0x423535
  4234df:	aaa    
  4234e0:	mov    esp,0x2656d9ad
  4234e5:	jmp    0xdcbe1bfe
  4234ea:	icebp  
  4234eb:	inc    edi
  4234ec:	fpatan 
  4234ee:	jmp    0xe553:0x4a2f0240
  4234f5:	and    ebx,DWORD PTR [edi]
  4234f7:	jnp    0x4234e6
  4234f9:	rcl    bh,0x99
  4234fc:	sbb    ebx,DWORD PTR [edx-0x3344e13]
  423502:	mov    ds:0xfcd2de61,al
  423507:	xor    DWORD PTR [esi-0xff35148],esi
  42350d:	nop
  42350e:	mov    bl,0x15
  423510:	xor    eax,0xe06a2fdd
  423515:	mov    ebp,0xd339797c
  42351a:	stos   DWORD PTR es:[edi],eax
  42351b:	jmp    0x5a8ccdcf
  423520:	neg    BYTE PTR [ebx+0x32]
  423523:	cmc    
  423524:	loop   0x423590
  423526:	and    ch,bl
  423528:	sbb    al,0x73
  42352a:	das    
  42352b:	(bad)  
  42352c:	lahf   
  42352d:	sbb    dl,BYTE PTR [edx+0x12da599e]
  423533:	mov    edx,0x9bbc10e8
  423538:	retf   0x63a2
  42353b:	aam    0xaf
  42353d:	sbb    ebx,DWORD PTR [ecx-0x5e]
  423540:	dec    ebp
  423541:	pop    esp
  423542:	jmp    0x380bd123
  423547:	fidivr WORD PTR [esi+0x43aa7a4b]
  42354d:	stos   BYTE PTR es:[edi],al
  42354e:	pop    ecx
  42354f:	jne    0x423560
  423551:	popa   
  423552:	in     eax,dx
  423553:	fmul   QWORD PTR ds:0xc12f8b71
  423559:	sub    ebx,ecx
  42355b:	jp     0x4235a8
  42355d:	dec    edx
  42355e:	inc    eax
  42355f:	imul   edx,DWORD PTR [edx],0x65
  423562:	and    edi,DWORD PTR [esi]
  423564:	or     eax,0xb2ba19a1
  423569:	push   es
  42356a:	sub    al,BYTE PTR [ecx]
  42356c:	sbb    dh,BYTE PTR [edi-0x66]
  42356f:	mov    BYTE PTR [ebx],cl
  423571:	add    bh,dh
  423573:	push   ebx
  423574:	pop    esi
  423575:	outs   dx,DWORD PTR ds:[esi]
  423576:	sub    eax,0xbfd94be
  42357b:	push   ds
  42357c:	dec    eax
  42357d:	sbb    BYTE PTR [eax-0x42],0xba
  423581:	sbb    BYTE PTR [ecx-0x72],bh
  423584:	mov    edx,0x68906466
  423589:	cli    
  42358a:	imul   edx,ebx,0x722e9719
  423590:	xor    al,0xe
  423592:	jbe    0x42358f
  423594:	mov    bh,0x96
  423596:	sbb    eax,0xa199512c
  42359b:	inc    ebp
  42359c:	adc    ebx,ebp
  42359e:	and    edi,DWORD PTR [edx-0x2]
  4235a1:	das    
  4235a2:	cdq    
  4235a3:	and    BYTE PTR [edx],0x97
  4235a6:	(bad)  
  4235a7:	ja     0x4235f0
  4235a9:	mov    cl,0xae
  4235ab:	jl     0x4235c4
  4235ad:	sbb    DWORD PTR [ebx-0x5],0x27
  4235b1:	ror    bl,0x85
  4235b4:	in     eax,dx
  4235b5:	sub    eax,0xe21d4bb2
  4235ba:	lods   al,BYTE PTR ds:[esi]
  4235bb:	mov    ds:0x57dc8ba4,eax
  4235c0:	(bad)  [eax+0x19c447ca]
  4235c6:	and    bh,cl
  4235c8:	xor    BYTE PTR [eax],ah
  4235ca:	dec    esp
  4235cb:	icebp  
  4235cc:	jnp    0x4235f7
  4235ce:	xlat   BYTE PTR ds:[ebx]
  4235cf:	inc    ebp
  4235d0:	or     al,0xbf
  4235d2:	out    0x8c,eax
  4235d4:	lds    esi,FWORD PTR [ebx+0x16a8c0f4]
  4235da:	(bad)  
  4235db:	je     0x4235c9
  4235dd:	outs   dx,DWORD PTR ds:[esi]
  4235de:	mov    ch,0x5e
  4235e0:	aaa    
  4235e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235e2:	mov    WORD PTR ds:0x3e669362,es
  4235e8:	mov    gs,ebx
  4235ea:	mov    ebp,0xcdaf72d
  4235ef:	pop    ecx
  4235f0:	iret   
  4235f1:	xor    eax,0x89873593
  4235f6:	shl    DWORD PTR [edx],0x77
  4235f9:	jp     0x42361a
  4235fb:	jge    0x423589
  4235fd:	mov    edi,0x51f80507
  423602:	scas   al,BYTE PTR es:[edi]
  423603:	(bad)  
  423604:	jno    0x4235d1
  423606:	cmp    al,0x61
  423608:	sbb    esi,edx
  42360a:	mov    ds:0xb2357e14,eax
  42360f:	lds    esi,FWORD PTR [edx+0x43]
  423612:	(bad)  
  423613:	inc    ecx
  423614:	jbe    0x423659
  423616:	lods   al,BYTE PTR ds:[esi]
  423617:	and    dh,BYTE PTR [edx+0x7b309f45]
  42361d:	mov    bl,0xfd
  42361f:	push   eax
  423620:	xchg   edi,eax
  423621:	inc    edx
  423622:	xlat   BYTE PTR ds:[ebx]
  423623:	mov    esi,esp
  423625:	rcl    BYTE PTR [edx+0x6871285b],1
  42362b:	inc    ebx
  42362c:	aas    
  42362d:	out    0xd6,al
  42362f:	popf   
  423630:	push   ecx
  423631:	das    
  423632:	fsubrp st(1),st
  423634:	add    ebx,0x38
  423637:	aas    
  423638:	and    eax,0xfa399a73
  42363d:	mov    esp,DWORD PTR [edx+eax*2]
  423640:	loopne 0x4236bd
  423642:	cmp    BYTE PTR [eax+0x2a],al
  423645:	sub    edi,edi
  423647:	cmp    eax,0xfe98aee8
  42364c:	jne    0x423617
  42364e:	mov    al,0x5b
  423650:	ins    BYTE PTR es:[edi],dx
  423651:	or     dh,bh
  423653:	dec    eax
  423654:	cmp    edx,eax
  423656:	je     0x423602
  423658:	aaa    
  423659:	pop    ebp
  42365a:	mov    ecx,DWORD PTR [eax]
  42365c:	repnz dec ebp
  42365e:	mov    eax,ds:0x7db25115
  423663:	lods   eax,DWORD PTR ds:[esi]
  423664:	sbb    BYTE PTR [edi],0xd3
  423667:	mov    dh,BYTE PTR [ebp+0x5132ae4f]
  42366d:	addr16 loopne 0x4236d7
  423670:	stc    
  423671:	jo     0x42368b
  423673:	mov    ds,WORD PTR [esi-0x32d60c3e]
  423679:	pop    ss
  42367a:	or     ebp,DWORD PTR ds:0x17ed63e0
  423680:	repz sbb BYTE PTR [eax+0x5a],al
  423684:	or     DWORD PTR [esi+0x255ec2b0],esp
  42368a:	and    cl,BYTE PTR [esi]
  42368c:	popa   
  42368d:	pop    es
  42368e:	push   ebp
  42368f:	imul   eax,DWORD PTR [esi-0x4],0xa79ef912
  423696:	aad    0xaa
  423698:	lds    esp,FWORD PTR [ecx]
  42369a:	data16 and al,0x6
  42369d:	cli    
  42369e:	in     al,dx
  42369f:	or     DWORD PTR [eax-0x306cc95b],ebx
  4236a5:	std    
  4236a6:	lods   eax,DWORD PTR ds:[esi]
  4236a7:	or     esp,DWORD PTR [esi+0x10]
  4236aa:	imul   eax,DWORD PTR [ebx+0x78],0xffffff83
  4236ae:	not    cl
  4236b0:	jecxz  0x423703
  4236b2:	mov    eax,es:0xc8967c80
  4236b8:	and    dl,cl
  4236ba:	push   ds
  4236bb:	bnd jae 0x423646
  4236be:	sub    cl,BYTE PTR [esi-0x3e]
  4236c1:	enter  0x1cd3,0xa5
  4236c5:	not    DWORD PTR [ecx+0x59]
  4236c8:	or     ebp,DWORD PTR [ebp-0x24285d2]
  4236ce:	push   ecx
  4236cf:	pop    ecx
  4236d0:	ins    DWORD PTR es:[edi],dx
  4236d1:	addr16 dec edx
  4236d3:	mov    bl,0x80
  4236d5:	jae    0x42370f
  4236d7:	inc    esi
  4236d8:	shl    BYTE PTR [edi+eax*8],1
  4236db:	das    
  4236dc:	mov    eax,ds:0x7059ea55
  4236e1:	push   edx
  4236e2:	mov    ch,BYTE PTR [ebx]
  4236e4:	push   es
  4236e5:	retf   
  4236e6:	mov    esi,0x1b2e97a6
  4236eb:	add    ebp,DWORD PTR [eax-0x6b]
  4236ee:	inc    esp
  4236ef:	pop    ss
  4236f0:	data16 fst QWORD PTR [edi-0x52]
  4236f4:	inc    eax
  4236f5:	call   0x314e34c9
  4236fa:	inc    eax
  4236fb:	(bad)  
  4236fc:	mov    BYTE PTR [edi+0x2176f7bc],ah
  423702:	mov    al,0x72
  423704:	adc    ecx,edi
  423706:	xor    dh,BYTE PTR [ebp-0x76]
  423709:	xchg   DWORD PTR gs:[ebp+0x77],edx
  42370d:	xchg   esi,eax
  42370e:	hlt    
  42370f:	inc    ecx
  423710:	call   0x3d0eb509
  423715:	popf   
  423716:	adc    DWORD PTR [ebx-0x14],ebp
  423719:	dec    ecx
  42371a:	push   eax
  42371b:	pusha  
  42371c:	ins    BYTE PTR es:[edi],dx
  42371d:	xor    al,0x4b
  42371f:	imul   esi,DWORD PTR [ebx-0x5943b4ed],0xffffffb0
  423726:	(bad)  
  423727:	sbb    al,0xac
  423729:	aas    
  42372a:	push   0xc60f155c
  42372f:	add    dh,ah
  423731:	icebp  
  423732:	mov    ds:0xabec0f94,eax
  423737:	sti    
  423738:	inc    esp
  423739:	or     edi,DWORD PTR [esi+0x64c60c86]
  42373f:	stc    
  423740:	nop
  423741:	mov    ebx,0x85c5a4da
  423746:	and    bh,BYTE PTR [edx-0x7fd79421]
  42374c:	and    ebx,DWORD PTR [ebx-0x1277e61d]
  423752:	cmc    
  423753:	ss sbb al,ah
  423756:	fwait
  423757:	das    
  423758:	dec    ebx
  423759:	push   ebp
  42375a:	pop    ebx
  42375b:	or     eax,0x61ec7583
  423760:	mov    al,0xa4
  423762:	jg     0x4237c9
  423764:	dec    ebp
  423765:	popa   
  423766:	mov    ah,dh
  423768:	pop    ecx
  423769:	mov    ah,0x5
  42376b:	mov    dl,0x4b
  42376d:	push   es
  42376e:	sub    ecx,DWORD PTR [ecx-0xf]
  423771:	ficomp WORD PTR [ecx]
  423773:	xchg   esi,eax
  423774:	sbb    BYTE PTR ds:0x789c76d0,0xd0
  42377b:	in     al,0x49
  42377d:	cmp    bh,cl
  42377f:	icebp  
  423780:	fadd   QWORD PTR [edi]
  423782:	xor    al,0xb3
  423784:	and    eax,DWORD PTR [ebx+0xa]
  423787:	lea    esp,[eax+0x3c3fe091]
  42378d:	and    ebx,DWORD PTR [esi]
  42378f:	fimul  DWORD PTR [eax+0x10]
  423792:	test   bl,bh
  423794:	inc    edi
  423795:	scas   al,BYTE PTR es:[edi]
  423796:	aam    0x27
  423798:	mov    ebx,0x9b8f130d
  42379d:	add    edi,DWORD PTR [ecx]
  42379f:	sbb    BYTE PTR [ebx+edi*4-0x527f6eeb],0x1a
  4237a7:	leave  
  4237a8:	pop    esi
  4237a9:	adc    al,BYTE PTR [edx]
  4237ab:	lea    edi,[eax-0x1]
  4237ae:	ja     0x423774
  4237b0:	xchg   ecx,eax
  4237b1:	inc    eax
  4237b2:	adc    ah,0x89
  4237b5:	pop    ds
  4237b6:	and    eax,0xb19c0080
  4237bb:	cld    
  4237bc:	and    al,BYTE PTR [edi+0x0]
  4237bf:	call   0xd883edb8
  4237c4:	and    DWORD PTR [edx],edx
  4237c6:	lds    ebx,FWORD PTR [esi]
  4237c8:	add    al,0x14
  4237ca:	jmp    0x7272:0xe3112968
  4237d1:	mov    eax,0x4c5044e6
  4237d6:	cmp    eax,0x14ff421a
  4237db:	(bad)  
  4237dc:	aad    0xf
  4237de:	mov    ss,WORD PTR [eax+eax*1-0x4f]
  4237e2:	jno    0x423797
  4237e4:	jb     0x42379b
  4237e6:	and    al,0x38
  4237e8:	out    dx,eax
  4237e9:	pop    ecx
  4237ea:	dec    edx
  4237eb:	xchg   edi,eax
  4237ec:	push   cs
  4237ed:	stos   DWORD PTR es:[edi],eax
  4237ee:	retf   0x307e
  4237f1:	mov    WORD PTR [edx-0x7b],ds
  4237f4:	in     al,0xee
  4237f6:	and    BYTE PTR [ebx+ebx*1+0x487f4f54],0x82
  4237fe:	xchg   ebp,eax
  4237ff:	sti    
  423800:	sub    eax,0x7f7ec6cd
  423805:	jmp    0x428fefc6
  42380a:	jp     0x423877
  42380c:	xor    edi,esp
  42380e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42380f:	push   ebx
  423810:	sbb    BYTE PTR [esi+0xf27b9e1],ch
  423816:	mov    DWORD PTR [eax-0x39],edi
  423819:	lds    eax,FWORD PTR [ebp+0x37b479ec]
  42381f:	or     eax,0xe68de57a
  423824:	xchg   BYTE PTR [ecx-0x2d],dh
  423827:	push   esi
  423828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423829:	shr    ecx,1
  42382b:	sub    DWORD PTR [ebx-0xfeff331],eax
  423831:	rcl    DWORD PTR [edx+0x69],0x8d
  423835:	pop    edi
  423836:	jge    0x4237f4
  423838:	(bad)  
  423839:	in     al,dx
  42383a:	loope  0x423820
  42383c:	mov    esp,0xd5009a78
  423841:	scas   al,BYTE PTR es:[edi]
  423842:	retf   0x9716
  423845:	mov    bh,0xc
  423847:	push   cs
  423848:	mov    dl,0x61
  42384a:	mov    bh,0x79
  42384c:	inc    ebx
  42384d:	push   ss
  42384e:	and    DWORD PTR [ecx+0x78871469],esp
  423854:	mov    ebp,edx
  423856:	xchg   ecx,eax
  423857:	cli    
  423858:	push   ebp
  423859:	sbb    DWORD PTR [edi+0x1e29c9ac],esp
  42385f:	repnz sbb al,BYTE PTR [eax-0x69]
  423863:	sbb    dh,BYTE PTR [edx]
  423865:	add    DWORD PTR [edi-0x65e371f],ecx
  42386b:	cs pop ebp
  42386d:	stc    
  42386e:	mov    edi,0xe101197f
  423873:	pop    ss
  423874:	test   BYTE PTR [esi],dl
  423876:	jl     0x4238ec
  423878:	jle    0x4238f8
  42387a:	mov    ds:0x17180a81,eax
  42387f:	popf   
  423880:	lods   eax,DWORD PTR ds:[esi]
  423881:	out    0xb6,al
  423883:	cmp    DWORD PTR [ebx+esi*2+0x2e],0xffffff96
  423888:	mul    esi
  42388a:	sti    
  42388b:	call   0x7dcd:0x3494ee8f
  423892:	and    bl,ch
  423894:	mov    esp,0x23ce06dc
  423899:	jecxz  0x4238af
  42389b:	cli    
  42389c:	xchg   BYTE PTR [ecx],ch
  42389e:	cmp    BYTE PTR [ecx+0x26],0x94
  4238a2:	push   ss
  4238a3:	pop    eax
  4238a4:	pop    ebp
  4238a5:	push   eax
  4238a6:	out    0x57,al
  4238a8:	mov    DWORD PTR [ebp+0x6a],ebp
  4238ab:	jmp    0x423830
  4238ad:	jmp    0xe8a:0x5542ebcc
  4238b4:	sub    BYTE PTR ds:0x57b33f12,0xa2
  4238bb:	outs   dx,BYTE PTR ds:[esi]
  4238bc:	xchg   edi,eax
  4238bd:	lea    edi,[ebx-0x5d]
  4238c0:	sti    
  4238c1:	push   ds
  4238c2:	mov    WORD PTR [edi],gs
  4238c4:	pop    ds
  4238c5:	jae    0x423924
  4238c7:	jge    0x423930
  4238c9:	jecxz  0x4238f2
  4238cb:	cmc    
  4238cc:	rcr    DWORD PTR fs:[ebp+0x43],cl
  4238d0:	mov    dh,0x34
  4238d2:	push   edi
  4238d3:	pop    ds
  4238d4:	xchg   BYTE PTR [ecx],bh
  4238d6:	dec    ecx
  4238d7:	mov    al,0xd
  4238d9:	fiadd  WORD PTR [eax-0x1fc9e4d7]
  4238df:	shl    DWORD PTR [edx-0x3e07571d],1
  4238e5:	sti    
  4238e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238e7:	outs   dx,BYTE PTR ds:[esi]
  4238e8:	dec    edx
  4238e9:	loopne 0x423926
  4238eb:	xchg   esi,eax
  4238ed:	in     eax,dx
  4238ee:	inc    ebp
  4238ef:	dec    esi
  4238f0:	add    eax,0x1982e64d
  4238f6:	(bad)  
  4238f7:	jecxz  0x423946
  4238f9:	pushf  
  4238fa:	scas   eax,DWORD PTR es:[edi]
  4238fb:	les    eax,FWORD PTR fs:[ebx+0x688df480]
  423902:	in     eax,0x9c
  423904:	inc    ebp
  423905:	mov    ah,0x97
  423907:	xchg   ebp,eax
  423908:	pusha  
  423909:	and    edi,esi
  42390b:	or     ah,dh
  42390d:	jle    0x423955
  42390f:	enter  0x8810,0xb5
  423913:	les    esi,FWORD PTR ds:0x74894a01
  423919:	stos   DWORD PTR es:[edi],eax
  42391a:	arpl   WORD PTR [edi],ax
  42391c:	(bad)  
  42391d:	jle    0x4238dc
  42391f:	jle    0x42397e
  423921:	pushf  
  423922:	push   ebp
  423923:	ins    BYTE PTR es:[edi],dx
  423924:	imul   edi,DWORD PTR [eax-0x6c],0x1dd8ee96
  42392b:	test   BYTE PTR [esp+edi*2],0x4b
  42392f:	mov    WORD PTR [ebx-0x17],ds
  423932:	push   ecx
  423933:	pop    ebp
  423934:	rcl    DWORD PTR [ecx+ebp*4-0x3d7570b],0x4d
  42393c:	push   ecx
  42393d:	mov    al,ds:0xd1b6d82b
  423942:	into   
  423943:	repz hlt 
  423945:	push   esi
  423946:	mov    edx,0x2c6031b3
  42394b:	(bad)  
  42394c:	mov    al,ds:0xe672d83a
  423951:	pop    edx
  423952:	popf   
  423953:	popf   
  423954:	ret    0x4579
  423957:	xchg   esi,eax
  423958:	enter  0xf66c,0xf0
  42395c:	mov    BYTE PTR [esi+ecx*4],bh
  42395f:	or     esi,eax
  423961:	call   0x6ecfb455
  423966:	shl    ecx,cl
  423968:	xchg   esi,eax
  423969:	dec    esi
  42396a:	(bad)  
  42396c:	iret   
  42396d:	lock jmp 0x423949
  423970:	push   0xc0aad49c
  423975:	dec    esi
  423976:	push   cs
  423977:	icebp  
  423978:	ret    0x177f
  42397b:	mov    eax,0x4d86011b
  423980:	fdiv   st(0),st
  423982:	ja     0x4239b8
  423984:	daa    
  423985:	cs out dx,al
  423987:	test   al,0x8d
  423989:	pop    eax
  42398a:	xchg   esp,eax
  42398b:	and    eax,0xae0d5699
  423990:	leave  
  423991:	xchg   ecx,eax
  423992:	inc    eax
  423993:	ins    BYTE PTR es:[edi],dx
  423994:	pushf  
  423995:	sahf   
  423996:	sub    ecx,DWORD PTR ds:0xac01a983
  42399c:	mov    ds:0xc83ded7c,al
  4239a1:	jge    0x42397b
  4239a3:	mov    DWORD PTR [esi],ecx
  4239a5:	xchg   edx,eax
  4239a6:	cld    
  4239a7:	adc    bl,ch
  4239a9:	cmp    dh,dh
  4239ab:	mov    ds:0x18e572d,eax
  4239b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239b1:	mov    ds:0x25ae7bc8,eax
  4239b6:	pop    ecx
  4239b7:	(bad)  
  4239b8:	xor    al,0xe7
  4239ba:	xchg   esi,eax
  4239bb:	imul   eax,DWORD PTR [esi],0xffffff96
  4239be:	push   0x5d
  4239c0:	aam    0xe6
  4239c2:	(bad)  [edi-0x51f4127]
  4239c8:	and    DWORD PTR [edx-0x63],eax
  4239cb:	sub    eax,0x14dd451a
  4239d0:	fstp   TBYTE PTR [esi+0x64]
  4239d3:	xor    al,0x77
  4239d5:	push   cs
  4239d6:	(bad)  
  4239d7:	xchg   edx,eax
  4239d8:	and    eax,0xb6d4361f
  4239dd:	je     0x423a02
  4239df:	dec    esi
  4239e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239e1:	aad    0xfe
  4239e3:	fldcw  WORD PTR [esi]
  4239e5:	sbb    bh,BYTE PTR [edx-0x6a]
  4239e8:	prefetch BYTE PTR [eax-0x140aef09]
  4239ef:	int    0x5c
  4239f1:	cmp    BYTE PTR [ebx+0x69],0xa1
  4239f5:	dec    esi
  4239f6:	xchg   ebx,eax
  4239f7:	lds    edi,FWORD PTR ds:0x5a0a6f2e
  4239fd:	cdq    
  4239fe:	push   ds
  4239ff:	retf   
  423a00:	in     al,dx
  423a01:	jge    0x423a70
  423a03:	lods   al,BYTE PTR ds:[esi]
  423a04:	arpl   si,ax
  423a06:	cmp    al,0x3b
  423a08:	in     eax,dx
  423a09:	ss jnp 0x4239f3
  423a0c:	push   ebp
  423a0d:	mov    eax,ds:0x75f6bfde
  423a12:	(bad)  
  423a13:	(bad)  
  423a14:	scas   eax,DWORD PTR es:[edi]
  423a15:	cmp    eax,0xcd2f2e7
  423a1a:	jmp    0x443a:0xad5e561
  423a21:	sahf   
  423a22:	test   eax,0x32d4c9a9
  423a27:	hlt    
  423a28:	ret    
  423a29:	inc    esp
  423a2a:	lahf   
  423a2b:	and    ebx,DWORD PTR [edx+0x2c]
  423a2e:	(bad)
  423a32:	pop    ebp
  423a33:	rcl    DWORD PTR [edi],1
  423a35:	out    dx,eax
  423a36:	daa    
  423a37:	pusha  
  423a38:	adc    al,0x98
  423a3a:	data16 cmc 
  423a3c:	and    al,0x62
  423a3e:	call   FWORD PTR ds:0x7150ff59
  423a44:	mov    dh,0x39
  423a46:	stos   BYTE PTR es:[edi],al
  423a47:	push   ebx
  423a48:	mov    esi,0x2d2f1c76
  423a4d:	pop    esi
  423a4e:	ds jb  0x423ac1
  423a51:	test   ebx,0xe7ba9fd6
  423a57:	dec    DWORD PTR [edx]
  423a59:	xchg   esi,eax
  423a5a:	push   eax
  423a5b:	fdiv   DWORD PTR [edi]
  423a5d:	addr16 sti 
  423a5f:	(bad)  
  423a60:	push   eax
  423a61:	jge    0x423a01
  423a63:	arpl   WORD PTR [eax+0x6],bx
  423a66:	call   0xe5a7:0x59184c47
  423a6d:	and    DWORD PTR [ecx-0x17ef640d],ebx
  423a73:	in     eax,0xd6
  423a75:	inc    esp
  423a76:	lock dec ebx
  423a78:	test   al,0xf8
  423a7a:	xor    al,0x0
  423a7c:	inc    eax
  423a7d:	add    al,0xe3
  423a7f:	sub    al,0x65
  423a81:	xor    edi,edi
  423a83:	idiv   ecx
  423a85:	std    
  423a86:	inc    edi
  423a87:	xor    ah,BYTE PTR [ebp-0x38]
  423a8a:	push   ds
  423a8b:	xchg   edx,eax
  423a8c:	pop    edx
  423a8d:	or     edx,DWORD PTR [ecx-0x55fdf745]
  423a93:	or     dl,BYTE PTR [ebp+0x85834f9]
  423a99:	repnz push esp
  423a9b:	mov    esi,0x4cf36e9b
  423aa0:	aam    0x33
  423aa2:	je     0x423b21
  423aa4:	add    BYTE PTR gs:[esi-0x7c],ah
  423aa8:	call   0x4efe:0xbd57d502
  423aaf:	lahf   
  423ab0:	mov    esp,0x94360163
  423ab5:	out    dx,al
  423ab6:	mov    dh,0x7a
  423ab8:	xor    DWORD PTR [edi+0x235ae625],edx
  423abe:	sbb    ebx,DWORD PTR [edx-0x67]
  423ac1:	mov    BYTE PTR [ebx],dh
  423ac3:	mov    al,ds:0x5efd0577
  423ac8:	push   ebx
  423ac9:	cwde   
  423aca:	gs out 0x9d,al
  423acd:	int    0xbd
  423acf:	sub    al,0xe3
  423ad1:	lock adc BYTE PTR [eax+0x197aab12],dh
  423ad8:	mov    bl,0x74
  423ada:	mov    BYTE PTR [eax+0x66],dh
  423add:	dec    edi
  423ade:	jge    0x423b3f
  423ae0:	xchg   edx,eax
  423ae1:	mov    ebp,0x41372230
  423ae6:	imul   eax,DWORD PTR [edx-0x653b31d0],0xceeb95e5
  423af0:	div    DWORD PTR [esi-0x3576a99f]
  423af6:	ins    BYTE PTR es:[edi],dx
  423af7:	lock pop edx
  423af9:	sbb    ebx,edx
  423afb:	fcom   st(6)
  423afd:	jmp    0x8fdb:0xf3ed8280
  423b04:	inc    esi
  423b05:	push   edi
  423b06:	aad    0x94
  423b08:	add    al,0xf3
  423b0a:	xchg   edx,eax
  423b0b:	bound  ebx,QWORD PTR [ecx]
  423b0d:	cwde   
  423b0e:	add    edx,DWORD PTR [edx+0x3c]
  423b11:	xor    DWORD PTR [esi+0x16],ebp
  423b14:	ds cld 
  423b16:	call   0x2525:0xc1d6763b
  423b1d:	mov    ebx,0x80f9a8b6
  423b22:	push   ss
  423b23:	xchg   esp,eax
  423b24:	pop    ebx
  423b25:	inc    eax
  423b26:	add    al,0x54
  423b28:	(bad)
  423b2b:	fs xchg ebp,eax
  423b2d:	cli    
  423b2e:	retf   0x481a
  423b31:	cmp    al,0xb1
  423b33:	test   BYTE PTR [edi],dh
  423b35:	ins    BYTE PTR es:[edi],dx
  423b36:	iret   
  423b37:	adc    BYTE PTR [esi+0x70d82e3],al
  423b3d:	dec    ebp
  423b3e:	mov    ebx,0x65c22272
  423b43:	jp     0x423b21
  423b45:	enter  0x21a1,0xa1
  423b49:	mov    dl,0xe
  423b4b:	mov    ebp,0x229e360a
  423b50:	push   eax
  423b51:	and    ch,BYTE PTR [ecx]
  423b53:	sub    eax,0xcdb6cf38
  423b58:	push   edi
  423b59:	pop    ecx
  423b5a:	push   ds
  423b5b:	pop    ecx
  423b5c:	sub    dh,BYTE PTR [edi]
  423b5e:	rcr    DWORD PTR [esi+ecx*4-0x4f],0x98
  423b63:	loopne 0x423ae9
  423b65:	jge    0x423b65
  423b67:	lea    esp,[edx]
  423b69:	pop    edi
  423b6a:	cmp    cl,BYTE PTR [edi-0x74]
  423b6d:	push   ecx
  423b6e:	xchg   ecx,eax
  423b6f:	pop    edi
  423b70:	mov    al,0xea
  423b72:	xchg   esi,eax
  423b73:	mov    cl,0xe0
  423b75:	or     edx,esi
  423b77:	cmc    
  423b78:	pop    ecx
  423b79:	cmp    al,BYTE PTR [edi-0x5b]
  423b7c:	sar    DWORD PTR [eax],0x30
  423b7f:	and    DWORD PTR [edx],esp
  423b81:	jle    0x423bef
  423b83:	aaa    
  423b84:	mov    DWORD PTR [edx-0x3ff25392],eax
  423b8a:	cwde   
  423b8b:	sub    ch,BYTE PTR [ebx]
  423b8d:	pop    edx
  423b8e:	mov    ecx,0xbe775044
  423b93:	xchg   ecx,eax
  423b94:	mov    edx,0x58802f5d
  423b99:	retf   0x5ef2
  423b9c:	pusha  
  423b9d:	jne    0x423bd5
  423b9f:	add    eax,0x83ff2b73
  423ba4:	dec    edi
  423ba5:	mov    edi,0x5b953ebc
  423baa:	cwde   
  423bab:	and    esi,eax
  423bad:	icebp  
  423bae:	gs dec eax
  423bb0:	xor    bh,cl
  423bb2:	ret    0x86f2
  423bb5:	lds    edx,FWORD PTR [esi+edx*2+0x36380ed7]
  423bbc:	test   eax,0xbc7dcf2d
  423bc1:	in     eax,0x5e
  423bc3:	dec    ecx
  423bc4:	mov    al,0x49
  423bc6:	jle    0x423b64
  423bc8:	jp     0x423c12
  423bca:	mov    eax,0x28e524e5
  423bcf:	mov    ds:0x42292b2f,al
  423bd4:	imul   ecx,DWORD PTR [esi],0x9be0e6c8
  423bda:	je     0x423c31
  423bdc:	inc    edi
  423bdd:	fidiv  WORD PTR ds:0x1af4bef3
  423be3:	lock and al,0xad
  423be6:	int3   
  423be7:	push   cs
  423be8:	lea    esp,[esi-0x7c]
  423beb:	cmp    BYTE PTR [edi+ebp*4+0x47348bdf],bl
  423bf2:	nop
  423bf3:	test   edx,edx
  423bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bf6:	adc    BYTE PTR [edx-0x14],al
  423bf9:	daa    
  423bfa:	push   eax
  423bfb:	dec    edx
  423bfc:	mov    ch,0x9a
  423bfe:	fs (bad) 
  423c00:	out    0xd2,al
  423c02:	jmp    0x5215af8d
  423c07:	jo     0x423ba4
  423c09:	xchg   ebp,eax
  423c0a:	loope  0x423bd1
  423c0c:	dec    ecx
  423c0d:	adc    esp,DWORD PTR [edx+ebp*4-0x1d61d2ce]
  423c14:	sub    BYTE PTR [ebp-0x4d2ba3f0],dh
  423c1a:	push   0xffffffd7
  423c1c:	scas   eax,DWORD PTR es:[edi]
  423c1d:	mov    ds:0x12cdd1c3,eax
  423c22:	add    BYTE PTR [edi+0x30],al
  423c25:	inc    esp
  423c26:	mov    WORD PTR [eax+ecx*4+0x2a],es
  423c2a:	dec    edx
  423c2b:	jo     0x423bfa
  423c2d:	sar    BYTE PTR [ecx],cl
  423c2f:	ret    0x2d39
  423c32:	jne    0x423bce
  423c34:	jecxz  0x423c8c
  423c36:	push   edi
  423c37:	sub    DWORD PTR [edi+ebx*2],eax
  423c3a:	push   edi
  423c3b:	mov    ch,0x6
  423c3d:	cli    
  423c3e:	call   0x76b5:0x83e3b1d8
  423c45:	mov    edx,0x9f6df3cd
  423c4a:	std    
  423c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c4c:	add    BYTE PTR [ecx],dl
  423c4e:	aad    0xc3
  423c50:	ins    BYTE PTR es:[edi],dx
  423c51:	mov    cl,0x11
  423c53:	dec    ebp
  423c54:	dec    esi
  423c55:	sub    eax,0x46871655
  423c5a:	pop    edi
  423c5b:	sbb    dh,0xc5
  423c5e:	jne    0x423c99
  423c60:	mov    BYTE PTR [ebx],dh
  423c62:	(bad)  
  423c63:	fbld   TBYTE PTR es:0xe49eebc0
  423c6a:	jl     0x423c86
  423c6c:	xor    esp,DWORD PTR [eax-0x45]
  423c6f:	adc    al,BYTE PTR [ebx+0x317edb65]
  423c75:	mov    esp,0x14995583
  423c7a:	mov    cl,0x4c
  423c7c:	pushf  
  423c7d:	int    0xeb
  423c7f:	cwde   
  423c80:	mov    eax,ds:0x8eefe2b2
  423c85:	mov    eax,0x300e3703
  423c8a:	lock adc eax,0x3832d3c5
  423c90:	jno    0x423cf1
  423c92:	pop    ds
  423c93:	jecxz  0x423c75
  423c95:	jl     0x423ca9
  423c97:	lods   eax,DWORD PTR ds:[esi]
  423c98:	and    bh,BYTE PTR [esp+edi*8+0x4f]
  423c9c:	mov    ecx,0x20bb580b
  423ca1:	addr16 out dx,eax
  423ca3:	pop    esp
  423ca4:	jmp    0x8c5f:0xf4f5
  423caa:	xchg   ebx,eax
  423cab:	jmp    0xd19a648a
  423cb0:	pop    ds
  423cb1:	es push ecx
  423cb3:	adc    BYTE PTR [eax-0x50],cl
  423cb6:	xchg   esi,eax
  423cb7:	jbe    0x423c56
  423cb9:	ds jp  0x423ca0
  423cbc:	je     0x423c5c
  423cbe:	lods   al,BYTE PTR cs:[esi]
  423cc0:	(bad)  
  423cc1:	std    
  423cc2:	lahf   
  423cc3:	adc    eax,eax
  423cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cc6:	sbb    ecx,DWORD PTR [edi+eax*2+0x4f]
  423cca:	loope  0x423d3d
  423ccc:	xchg   ecx,eax
  423ccd:	push   cs
  423cce:	enter  0x9699,0xa8
  423cd2:	ins    BYTE PTR es:[edi],dx
  423cd3:	or     eax,0x91f884bf
  423cd8:	loope  0x423d4a
  423cda:	mov    ss,ecx
  423cdc:	cwde   
  423cdd:	sub    eax,0xdced1217
  423ce2:	call   0x258c:0x8c1e67db
  423ce9:	sbb    ah,BYTE PTR ds:0xcd4e1d31
  423cef:	das    
  423cf0:	pop    edx
  423cf1:	cmp    BYTE PTR [edi+edx*1],dh
  423cf4:	jge    0x423cf9
  423cf6:	jae    0x423d3c
  423cf8:	addr16 out 0x2c,al
  423cfb:	mov    DWORD PTR [esi+0x38],esp
  423cfe:	mov    cl,0xbb
  423d00:	rol    esp,cl
  423d02:	adc    dl,ah
  423d04:	sub    edx,DWORD PTR [edi]
  423d06:	aaa    
  423d07:	(bad)  
  423d08:	ins    BYTE PTR es:[edi],dx
  423d09:	adc    al,0xe5
  423d0b:	shr    BYTE PTR gs:[eax+eax*2+0x64c131de],0x91
  423d14:	xchg   ecx,eax
  423d15:	cld    
  423d16:	(bad)  
  423d17:	fist   DWORD PTR ds:0x40cc475e
  423d1d:	sbb    DWORD PTR [edx+0x1eecfdcb],ecx
  423d23:	ja     0x423d95
  423d25:	xchg   edx,eax
  423d26:	mov    edx,0x92f2a0c4
  423d2b:	adc    BYTE PTR [esp+eax*8-0x53f52089],al
  423d32:	loope  0x423d68
  423d34:	mov    al,ds:0x33ec574a
  423d39:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  423d3b:	sbb    eax,0x5761711c
  423d40:	popf   
  423d41:	pop    ds
  423d42:	mov    ebp,0xd1a3d3c1
  423d47:	lahf   
  423d48:	inc    eax
  423d49:	and    dl,BYTE PTR [eax]
  423d4b:	mov    ecx,0xb45c7bb0
  423d50:	or     dh,al
  423d52:	inc    edi
  423d53:	(bad)  
  423d54:	in     al,dx
  423d55:	mov    edx,0xd39dcf3
  423d5a:	xor    BYTE PTR ds:0xa49b65f4,bh
  423d60:	add    ah,BYTE PTR gs:[ecx]
  423d63:	mov    eax,ds:0x2c45407
  423d68:	lahf   
  423d69:	jns    0x423d0e
  423d6b:	pop    ss
  423d6c:	and    esp,DWORD PTR [edx]
  423d6e:	xchg   edi,eax
  423d6f:	cs lock cs pushw 0xffc2
  423d75:	not    DWORD PTR [edi]
  423d77:	clc    
  423d78:	and    esi,DWORD PTR [edi+edi*2-0x53d52e59]
  423d7f:	sub    al,0x22
  423d81:	jbe    0x423dbf
  423d83:	loope  0x423d84
  423d85:	adc    BYTE PTR [edx+0x3206edf1],0x74
  423d8c:	jge    0x423d5c
  423d8e:	push   es
  423d8f:	(bad)  
  423d90:	sbb    al,0x73
  423d92:	ss jmp 0xee88770f
  423d98:	shl    BYTE PTR [edi+ebp*1+0x3ef6b255],1
  423d9f:	fistp  DWORD PTR [esi+0x3ab965d3]
  423da5:	sar    DWORD PTR [ebx+0x31],1
  423da8:	aad    0xb0
  423daa:	push   ecx
  423dab:	dec    edx
  423dac:	(bad)  
  423dad:	cmp    cl,BYTE PTR [eax]
  423daf:	into   
  423db0:	cmp    BYTE PTR [ebx+0x20],0x73
  423db4:	push   esi
  423db5:	out    0xa,al
  423db7:	jae    0x423dce
  423db9:	out    0x6b,eax
  423dbb:	pop    edi
  423dbc:	cmp    DWORD PTR [edx+0x33709557],esi
  423dc2:	mov    eax,ds:0x2b294b76
  423dc7:	mov    ecx,0x3b08656a
  423dcc:	add    ah,BYTE PTR ds:[eax-0x2fa0fb72]
  423dd3:	push   ebx
  423dd4:	cmp    dh,al
  423dd6:	cmp    al,0x3c
  423dd8:	jge    0x423e4b
  423dda:	retf   0x2387
  423ddd:	mov    ebx,0xca548ef0
  423de2:	lods   eax,DWORD PTR ds:[esi]
  423de3:	(bad)  
  423de4:	pop    ds
  423de5:	mov    ?,WORD PTR [esi-0x4ae19d8a]
  423deb:	adc    DWORD PTR [bx+di-0x6a],0x5dc03bf0
  423df3:	repz fs sti 
  423df6:	mov    DWORD PTR [edi+0x58bc4dc2],esi
  423dfc:	xchg   ebp,eax
  423dfd:	xchg   ecx,ebp
  423dff:	push   edx
  423e00:	pop    edx
  423e01:	ja     0x423de3
  423e03:	rol    DWORD PTR [ebx-0x61],1
  423e06:	arpl   WORD PTR [eax-0x2b99abf4],cx
  423e0c:	ror    DWORD PTR [ebp+0x609855cb],0x16
  423e13:	sti    
  423e14:	mov    WORD PTR [edi+0x52],fs
  423e17:	addr16 add esi,edi
  423e1a:	add    BYTE PTR fs:[eax-0x69],bl
  423e1e:	fnstcw WORD PTR [ebx-0x4b]
  423e21:	adc    BYTE PTR ds:0xab365445,bl
  423e27:	adc    edi,esp
  423e29:	sub    edi,ecx
  423e2b:	sbb    DWORD PTR ds:0x81f7bd24,esi
  423e31:	cdq    
  423e32:	xor    al,0x14
  423e34:	fdiv   QWORD PTR [edi]
  423e36:	icebp  
  423e37:	inc    ecx
  423e38:	addr16 mov dl,0x3
  423e3b:	or     al,0x9b
  423e3d:	mov    cl,0x9d
  423e3f:	cmp    eax,0x3b9ef9ed
  423e44:	(bad)  [bp+si+0x64]
  423e48:	(bad)  
  423e49:	cdq    
  423e4a:	outs   dx,BYTE PTR ds:[esi]
  423e4b:	cs js  0x423e01
  423e4e:	sub    DWORD PTR [ebx],0x8f45b94
  423e54:	jmp    0x5fdd91ec
  423e59:	jp     0x423e33
  423e5b:	xor    eax,0xd73edf8e
  423e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e61:	xchg   ebp,eax
  423e62:	inc    esp
  423e63:	jns    0x423e13
  423e65:	or     dh,dl
  423e67:	out    dx,al
  423e68:	loopne 0x423ea6
  423e6a:	stc    
  423e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e6c:	cld    
  423e6d:	mov    esp,0x5dbac48c
  423e72:	inc    edi
  423e73:	outs   dx,DWORD PTR fs:[esi]
  423e75:	leave  
  423e76:	pop    eax
  423e77:	pop    edx
  423e78:	sbb    bh,BYTE PTR [edx]
  423e7a:	adc    al,0xde
  423e7c:	lods   eax,DWORD PTR ds:[esi]
  423e7d:	sub    dh,dh
  423e7f:	mov    bh,0xbb
  423e81:	fimul  DWORD PTR [ecx-0x2a]
  423e84:	add    eax,0x7db4290d
  423e89:	xor    ecx,DWORD PTR [edx]
  423e8b:	dec    ebp
  423e8c:	dec    edi
  423e8d:	mov    edi,0x19a9bc8
  423e92:	jb     0x423edb
  423e94:	pop    edx
  423e95:	push   eax
  423e96:	xchg   DWORD PTR [ebx],ebx
  423e98:	add    al,0x4a
  423e9a:	dec    ebp
  423e9b:	adc    DWORD PTR [ecx-0x35e05b23],esp
  423ea1:	fcomp  st(7)
  423ea3:	out    0x9d,al
  423ea5:	addr16 hlt 
  423ea7:	add    BYTE PTR [edi-0x55d3c1ae],bl
  423ead:	popa   
  423eae:	mov    ecx,0xbbe3100d
  423eb3:	div    DWORD PTR [eax-0x3a]
  423eb6:	icebp  
  423eb7:	mov    bl,0x4f
  423eb9:	cmp    ecx,DWORD PTR ds:0xb4dcac35
  423ebf:	mov    edi,0x1ee1d422
  423ec4:	ret    0x48e2
  423ec7:	fist   DWORD PTR [ebx]
  423ec9:	ret    
  423eca:	or     BYTE PTR [ecx],dh
  423ecc:	cmp    DWORD PTR [edi],0x2ac8bdd4
  423ed2:	mov    WORD PTR [esi+0x2fd90618],?
  423ed8:	cs (bad) 
  423eda:	cmp    BYTE PTR [edi],al
  423edc:	aaa    
  423edd:	xor    ebp,DWORD PTR [edx+ebp*4-0x2]
  423ee1:	je     0x423f2b
  423ee3:	mov    ah,0xb3
  423ee5:	test   BYTE PTR [eax-0x21],bl
  423ee8:	xor    ebx,0x0
  423eeb:	mov    eax,ecx
  423eed:	add    eax,0xfabdbecf
  423ef2:	adc    edi,0xffffffff
  423ef5:	xor    eax,0x8a29a145
  423efa:	xor    edi,0x0
  423efd:	cmp    eax,esi
  423eff:	jne    0x421ae1
  423f05:	cmp    edi,ebx
  423f07:	jne    0x421ae1
  423f0d:	mov    eax,0xf89c85b8
  423f12:	pop    ebx
  423f13:	pop    edi
  423f14:	pop    esi
  423f15:	leave  
  423f16:	ret    0xc
  423f19:	push   ebp
  423f1a:	mov    ebp,esp
  423f1c:	push   ecx
  423f1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  423f24:	and    edx,ecx
  423f26:	mov    eax,DWORD PTR [ebp+0x8]
  423f29:	and    DWORD PTR ds:0x428e95,edi
  423f2f:	movsx  eax,BYTE PTR [eax]
  423f32:	sub    edx,ecx
  423f34:	mov    edx,0x3272f8
  423f39:	xor    ecx,ecx
  423f3b:	add    ecx,DWORD PTR ds:0x428e9d
  423f41:	and    DWORD PTR ds:0x428e71,ecx
  423f47:	sub    eax,edx
  423f49:	mov    ecx,0x75108b1
  423f4e:	sub    DWORD PTR ds:0x428e29,0x428e25
  423f58:	xor    eax,ecx
  423f5a:	cmp    eax,0xf89c85e4
  423f5f:	mov    DWORD PTR ds:0x428e9d,0x7b75
  423f69:	jne    0x423ff4
  423f6f:	and    DWORD PTR ds:0x428e25,0x0
  423f79:	mov    eax,ds:0x428e25
  423f7e:	inc    eax
  423f7f:	mov    ds:0x428e25,eax
  423f84:	cmp    DWORD PTR ds:0x428e25,0x6
  423f8b:	jbe    0x423fcb
  423f91:	jmp    0x423fa6
  423f96:	push   0x42804e
  423f9b:	push   DWORD PTR [ebp-0xc]
  423f9e:	push   0x0
  423fa0:	call   DWORD PTR ds:0x42ca4c
  423fa6:	cmp    DWORD PTR ds:0x428e25,0x5
  423fad:	jne    0x423fbe
  423fb3:	mov    eax,ds:0x428e25
  423fb8:	inc    eax
  423fb9:	mov    ds:0x428e25,eax
  423fbe:	cmp    DWORD PTR ds:0x428e25,0x1a
  423fc5:	jb     0x423f79
  423fcb:	mov    eax,DWORD PTR [ebp+0x8]
  423fce:	push   esi
  423fcf:	mov    esi,DWORD PTR [ebp+0x8]
  423fd2:	add    esi,DWORD PTR [eax+0x3c]
  423fd5:	mov    DWORD PTR [ebp+0x8],esi
  423fd8:	mov    eax,DWORD PTR [ebp-0x4]
  423fdb:	mov    esi,DWORD PTR [ebp+0x8]
  423fde:	xor    eax,ecx
  423fe0:	add    eax,edx
  423fe2:	cmp    DWORD PTR [esi+0x54],eax
  423fe5:	pop    esi
  423fe6:	je     0x423ff4
  423fec:	mov    eax,DWORD PTR [ebp+0x8]
  423fef:	jmp    0x423ffb
  423ff4:	mov    eax,DWORD PTR [ebp-0x4]
  423ff7:	xor    eax,ecx
  423ff9:	add    eax,edx
  423ffb:	leave  
  423ffc:	ret    0x4
  423fff:	push   ebp
  424000:	mov    ebp,esp
  424002:	sub    esp,0xc
  424005:	adc    DWORD PTR ds:0x428e71,ebx
  42400b:	push   esi
  42400c:	or     ecx,0x44ac
  424012:	mov    eax,0xf89c85b9
  424017:	mov    DWORD PTR ds:0x428eb5,0x14
  424021:	cmp    DWORD PTR ds:0x428eb5,0x0
  424028:	je     0x42405d
  42402e:	cmp    DWORD PTR ds:0x428eb5,0x1d
  424035:	jb     0x42405d
  42403b:	jmp    0x424049
  424040:	push   DWORD PTR [ebp-0x24]
  424043:	call   DWORD PTR ds:0x42ca50
  424049:	xor    edx,edx
  42404b:	add    edx,DWORD PTR ds:0x428eb5
  424051:	dec    edx
  424052:	mov    DWORD PTR ds:0x428eb5,edx
  424058:	jmp    0x424021
  42405d:	mov    DWORD PTR [ebp-0x8],eax
  424060:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  424067:	and    DWORD PTR ds:0x428e65,0x0
  424071:	jmp    0x424083
  424076:	mov    ecx,DWORD PTR ds:0x428e65
  42407c:	inc    ecx
  42407d:	mov    DWORD PTR ds:0x428e65,ecx
  424083:	cmp    DWORD PTR ds:0x428e65,0x19
  42408a:	jae    0x4240c5
  424090:	cmp    DWORD PTR ds:0x428e65,0x1b
  424097:	jle    0x4240c5
  42409d:	jmp    0x4240c0
  4240a2:	push   DWORD PTR [ebp-0xc]
  4240a5:	push   0x1fe6
  4240aa:	push   DWORD PTR [ebp-0x1c]
  4240ad:	push   DWORD PTR [ebp-0xc]
  4240b0:	push   0x428124
  4240b5:	push   0x1d19
  4240ba:	call   DWORD PTR ds:0x42ca10
  4240c0:	jmp    0x424076
  4240c5:	mov    esi,DWORD PTR [ebp-0x4]
  4240c8:	xor    DWORD PTR ds:0x428e35,0x687d
  4240d2:	push   edi
  4240d3:	mov    DWORD PTR ds:0x428e8d,0x1d
  4240dd:	cmp    DWORD PTR ds:0x428e8d,0x0
  4240e4:	je     0x42412b
  4240ea:	cmp    DWORD PTR ds:0x428e8d,0x26
  4240f1:	ja     0x42412b
  4240f7:	jmp    0x424119
  4240fc:	push   0x4877
  424101:	push   0x5dd2
  424106:	push   0x3bfb
  42410b:	push   DWORD PTR [ebp-0x24]
  42410e:	push   0x428e91
  424113:	call   DWORD PTR ds:0x42ca14
  424119:	mov    ecx,DWORD PTR ds:0x428e8d
  42411f:	dec    ecx
  424120:	mov    DWORD PTR ds:0x428e8d,ecx
  424126:	jmp    0x4240dd
  42412b:	mov    edi,DWORD PTR [ebp-0x8]
  42412e:	mov    ecx,0x75108b1
  424133:	xor    esi,ecx
  424135:	xor    edi,ecx
  424137:	mov    edx,0x3272f8
  42413c:	add    edi,edx
  42413e:	add    esi,edx
  424140:	imul   esi,edi
  424143:	mov    edi,DWORD PTR [ebp+0xc]
  424146:	cmp    edi,esi
  424148:	je     0x42419d
  42414e:	mov    DWORD PTR [ebp-0xc],eax
  424151:	mov    eax,DWORD PTR [ebp-0xc]
  424154:	mov    esi,DWORD PTR [ebp+0xc]
  424157:	xor    eax,ecx
  424159:	lea    eax,[eax*8+0x1939838]
  424160:	mov    eax,DWORD PTR [esi+eax*1]
  424163:	mov    DWORD PTR [ebp+0xc],eax
  424166:	mov    eax,DWORD PTR [ebp-0x4]
  424169:	mov    esi,DWORD PTR [ebp-0x8]
  42416c:	xor    eax,ecx
  42416e:	xor    esi,ecx
  424170:	add    esi,edx
  424172:	add    eax,edx
  424174:	imul   eax,esi
  424177:	mov    esi,DWORD PTR [ebp+0xc]
  42417a:	cmp    esi,eax
  42417c:	je     0x42419d
  424182:	mov    eax,DWORD PTR [ebp-0x4]
  424185:	xor    eax,ecx
  424187:	mov    ecx,DWORD PTR [ebp+0xc]
  42418a:	add    eax,edx
  42418c:	imul   eax,ecx
  42418f:	add    eax,DWORD PTR [ebp+0x8]
  424192:	mov    DWORD PTR [ebp+0xc],eax
  424195:	mov    eax,DWORD PTR [ebp+0xc]
  424198:	jmp    0x4241ae
  42419d:	mov    eax,DWORD PTR [ebp-0x4]
  4241a0:	mov    esi,DWORD PTR [ebp-0x8]
  4241a3:	xor    esi,ecx
  4241a5:	xor    eax,ecx
  4241a7:	add    esi,edx
  4241a9:	add    eax,edx
  4241ab:	imul   eax,esi
  4241ae:	pop    edi
  4241af:	pop    esi
  4241b0:	leave  
  4241b1:	ret    0x8
	...
  4241c4:	iret   
  4241c5:	lods   eax,DWORD PTR ds:[esi]
  4241c6:	mov    ecx,DWORD PTR [ebp+0x0]
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [edx],al
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	add    BYTE PTR [ecx+0x0],al
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	loopne 0x424217
  4241d6:	add    al,BYTE PTR [eax]
  4241d8:	loopne 0x42420f
  4241da:	add    al,BYTE PTR [eax]
  4241dc:	add    BYTE PTR [eax],al
  4241de:	add    BYTE PTR [eax],al
  4241e0:	push   edx
  4241e1:	push   ebx
  4241e2:	inc    esp
  4241e3:	push   ebx
  4241e4:	inc    esp
  4241e5:	sub    eax,0xee659fc5
  4241ea:	imul   eax,DWORD PTR [ecx-0x4e],0x5e
  4241ee:	inc    ebx
  4241ef:	aaa    
  4241f0:	shl    BYTE PTR [ebx],cl
  4241f2:	cmc    
  4241f3:	rol    DWORD PTR [ecx],1
  4241f5:	add    BYTE PTR [eax],al
  4241f7:	add    BYTE PTR [ebx+0x3a],al
  4241fa:	pop    esp
  4241fb:	inc    esi
  4241fc:	outs   dx,DWORD PTR ds:[esi]
  4241fd:	ins    BYTE PTR es:[edi],dx
  4241fe:	fs gs jb 0x424222
  424202:	outs   dx,DWORD PTR ds:[esi]
  424203:	data16 and BYTE PTR [edi+0x6f],dl
  424207:	jb     0x424274
  424209:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424210:	push   0x65
  424212:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424216:	jb     0x424287
  424218:	push   0x65
  42421a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42421e:	jae    0x424294
  424220:	add    BYTE PTR [ebx-0x137e13ab],cl
  424226:	or     BYTE PTR [ecx],al
  424228:	add    BYTE PTR [eax],al
  42422a:	push   ebx
  42422b:	mov    eax,ebx
  42422d:	xchg   ecx,eax
  42422e:	mov    eax,DWORD PTR [ebp+0x8]
  424231:	cmp    eax,0xf89c85b9
  424236:	jne    0x4246ce
  42423c:	mov    eax,DWORD PTR [ebp+0xc]
  42423f:	cmp    eax,0xf89c85b8
  424244:	jne    0x4246ce
  42424a:	mov    eax,DWORD PTR [ebp+0x24]
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	mov    eax,DWORD PTR [ebp-0x4]
  424253:	mov    eax,DWORD PTR [eax+0x1d8]
  424259:	mov    eax,DWORD PTR [eax]
  42425b:	mov    eax,DWORD PTR [eax]
  42425d:	mov    DWORD PTR [ebp-0x8],eax
  424260:	mov    BYTE PTR [ebp-0x18],0xe2
  424264:	mov    BYTE PTR [ebp-0x17],0xdf
  424268:	mov    BYTE PTR [ebp-0x16],0xe4
  42426c:	mov    BYTE PTR [ebp-0x15],0xae
  424270:	mov    BYTE PTR [ebp-0x14],0xad
  424274:	mov    BYTE PTR [ebp-0x13],0x7b
  424278:	mov    BYTE PTR [ebp-0x20],0xf0
  42427c:	mov    BYTE PTR [ebp-0x1f],0xee
  424280:	mov    BYTE PTR [ebp-0x1e],0xe0
  424284:	mov    BYTE PTR [ebp-0x1d],0xed
  424288:	mov    BYTE PTR [ebp-0x1c],0xae
  42428c:	mov    BYTE PTR [ebp-0x1b],0xad
  424290:	mov    BYTE PTR [ebp-0x1a],0x7b
  424294:	mov    BYTE PTR [ebp-0x28],0xee
  424298:	mov    BYTE PTR [ebp-0x27],0xe3
  42429c:	mov    BYTE PTR [ebp-0x26],0xe7
  4242a0:	mov    BYTE PTR [ebp-0x25],0xf2
  4242a4:	mov    BYTE PTR [ebp-0x24],0xdc
  4242a8:	mov    BYTE PTR [ebp-0x23],0xeb
  4242ac:	mov    BYTE PTR [ebp-0x22],0xe4
  4242b0:	mov    BYTE PTR [ebp-0x21],0x7b
  4242b4:	xor    ecx,ecx
  4242b6:	lea    eax,[ebp+ecx*1-0x18]
  4242ba:	movzx  edx,BYTE PTR [eax]
  4242bd:	xor    edx,0x80
  4242c3:	add    edx,0x5
  4242c6:	inc    ecx
  4242c7:	mov    BYTE PTR [eax],dl
  4242c9:	cmp    ecx,0x6
  4242cc:	jb     0x4242b6
  4242ce:	xor    ecx,ecx
  4242d0:	lea    eax,[ebp+ecx*1-0x20]
  4242d4:	movzx  edx,BYTE PTR [eax]
  4242d7:	xor    edx,0x80
  4242dd:	add    edx,0x5
  4242e0:	inc    ecx
  4242e1:	mov    BYTE PTR [eax],dl
  4242e3:	cmp    ecx,0x7
  4242e6:	jb     0x4242d0
  4242e8:	xor    ecx,ecx
  4242ea:	lea    eax,[ebp+ecx*1-0x28]
  4242ee:	movzx  edx,BYTE PTR [eax]
  4242f1:	xor    edx,0x80
  4242f7:	add    edx,0x5
  4242fa:	inc    ecx
  4242fb:	mov    BYTE PTR [eax],dl
  4242fd:	cmp    ecx,0x8
  424300:	jb     0x4242ea
  424302:	lea    eax,[ebp-0x2c]
  424305:	mov    DWORD PTR [ebp-0x8],eax
  424308:	mov    ecx,DWORD PTR [ebp-0x8]
  42430b:	mov    eax,0x7113fcef
  424310:	push   esi
  424311:	mov    DWORD PTR [ecx],eax
  424313:	mov    ecx,DWORD PTR [ebp-0x2c]
  424316:	mov    esi,0x4e3e
  42431b:	push   edi
  42431c:	lea    edi,[esi-0xa]
  42431f:	mov    ebx,0x3272f8
  424324:	cmp    ecx,eax
  424326:	jne    0x4243f7
  42432c:	lea    eax,[esi+0x39]
  42432f:	mov    WORD PTR [ebp-0x78],ax
  424333:	mov    eax,esi
  424335:	mov    WORD PTR [ebp-0x76],ax
  424339:	add    eax,0x3b
  42433c:	mov    WORD PTR [ebp-0x74],ax
  424340:	lea    eax,[esi-0x6]
  424343:	mov    WORD PTR [ebp-0x72],ax
  424347:	add    eax,0x47
  42434a:	mov    WORD PTR [ebp-0x70],ax
  42434e:	mov    eax,edi
  424350:	mov    WORD PTR [ebp-0x6e],ax
  424354:	mov    eax,0x4f92
  424359:	mov    WORD PTR [ebp-0x6c],ax
  42435d:	lea    eax,[esi-0x9]
  424360:	mov    WORD PTR [ebp-0x6a],ax
  424364:	add    eax,0x30
  424367:	mov    WORD PTR [ebp-0x68],ax
  42436b:	lea    eax,[esi-0xd]
  42436e:	mov    WORD PTR [ebp-0x66],ax
  424372:	mov    eax,esi
  424374:	mov    WORD PTR [ebp-0x64],ax
  424378:	add    eax,0xfffffff4
  42437b:	mov    WORD PTR [ebp-0x62],ax
  42437f:	mov    eax,0x44b
  424384:	mov    WORD PTR [ebp-0x60],ax
  424388:	mov    eax,0x5674
  42438d:	mov    WORD PTR [ebp-0x5e],ax
  424391:	mov    eax,0x6114
  424396:	mov    WORD PTR [ebp-0x5c],ax
  42439a:	mov    eax,0xf1e6
  42439f:	mov    WORD PTR [ebp-0x5a],ax
  4243a3:	mov    eax,edi
  4243a5:	mov    WORD PTR [ebp-0x58],ax
  4243a9:	lea    eax,[ebp-0xe0]
  4243af:	push   eax
  4243b0:	mov    eax,DWORD PTR [ebp+0xc]
  4243b3:	xor    eax,0x75108b1
  4243b8:	add    eax,ebx
  4243ba:	push   eax
  4243bb:	lea    eax,[ebp-0x78]
  4243be:	push   eax
  4243bf:	mov    eax,DWORD PTR [ebp-0x4]
  4243c2:	mov    eax,DWORD PTR [eax+0x198]
  4243c8:	mov    DWORD PTR [ebp-0xe0],0x1
  4243d2:	mov    DWORD PTR [ebp-0xdc],0xffff
  4243dc:	push   DWORD PTR [eax]
  4243de:	mov    eax,DWORD PTR [ebp+0x10]
  4243e1:	call   eax
  4243e3:	mov    DWORD PTR [ebp-0x8],eax
  4243e6:	mov    eax,DWORD PTR [ebp-0x8]
  4243e9:	test   eax,eax
  4243eb:	je     0x4243f7
  4243ed:	xor    DWORD PTR ds:0xe041cdd,0x9f170bcc
  4243f7:	mov    eax,DWORD PTR [ebp-0x4]
  4243fa:	mov    ecx,DWORD PTR [eax+0x18c]
  424400:	xor    eax,eax
  424402:	cmp    DWORD PTR [ecx],eax
  424404:	jne    0x42463e
  42440a:	mov    ecx,DWORD PTR [ebp-0x4]
  42440d:	mov    ecx,DWORD PTR [ecx+0x17c]
  424413:	mov    DWORD PTR [ecx],eax
  424415:	mov    ecx,DWORD PTR [ebp-0x4]
  424418:	mov    ecx,DWORD PTR [ecx+0x180]
  42441e:	mov    DWORD PTR [ecx],eax
  424420:	mov    eax,0x4e69
  424425:	mov    WORD PTR [ebp-0x9c],ax
  42442c:	mov    eax,esi
  42442e:	mov    WORD PTR [ebp-0x9a],ax
  424435:	mov    eax,0x4e79
  42443a:	mov    WORD PTR [ebp-0x98],ax
  424441:	add    eax,0xffffffc0
  424444:	mov    WORD PTR [ebp-0x96],ax
  42444b:	mov    eax,0x4f8e
  424450:	mov    WORD PTR [ebp-0x94],ax
  424457:	mov    eax,0x4e3a
  42445c:	mov    WORD PTR [ebp-0x92],ax
  424463:	mov    eax,esi
  424465:	mov    WORD PTR [ebp-0x8c],ax
  42446c:	mov    eax,0x4e35
  424471:	mov    WORD PTR [ebp-0x8a],ax
  424478:	mov    eax,0x99f9
  42447d:	mov    WORD PTR [ebp-0x88],ax
  424484:	mov    eax,0x8d6a
  424489:	mov    WORD PTR [ebp-0x86],ax
  424490:	mov    eax,0xd66f
  424495:	mov    WORD PTR [ebp-0x84],ax
  42449c:	mov    BYTE PTR [ebp-0x10],0xee
  4244a0:	mov    eax,0xd78b
  4244a5:	mov    WORD PTR [ebp-0x82],ax
  4244ac:	mov    BYTE PTR [ebp-0xf],0xe3
  4244b0:	mov    eax,0x2784
  4244b5:	mov    BYTE PTR [ebp-0xe],0xe7
  4244b9:	mov    WORD PTR [ebp-0x80],ax
  4244bd:	mov    BYTE PTR [ebp-0xd],0xf2
  4244c1:	mov    eax,0x4784
  4244c6:	mov    BYTE PTR [ebp-0xc],0xdc
  4244ca:	mov    WORD PTR [ebp-0x7e],ax
  4244ce:	mov    eax,0x4e3b
  4244d3:	mov    BYTE PTR [ebp-0xb],0xeb
  4244d7:	push   0x8
  4244d9:	mov    BYTE PTR [ebp-0xa],0xe4
  4244dd:	mov    WORD PTR [ebp-0x7c],ax
  4244e1:	mov    BYTE PTR [ebp-0x9],0x7b
  4244e5:	mov    DWORD PTR [ebp-0x90],0x4e344e65
  4244ef:	lea    eax,[ebp-0x10]
  4244f2:	pop    edi
  4244f3:	movzx  ecx,BYTE PTR [eax]
  4244f6:	xor    ecx,0x80
  4244fc:	add    ecx,0x5
  4244ff:	mov    BYTE PTR [eax],cl
  424501:	inc    eax
  424502:	dec    edi
  424503:	jne    0x4244f3
  424505:	mov    DWORD PTR [ebp-0xe0],0x1
  42450f:	lea    eax,[ebp-0x10]
  424512:	mov    DWORD PTR [ebp-0xdc],eax
  424518:	mov    ecx,0x4e66
  42451d:	mov    eax,ecx
  42451f:	mov    WORD PTR [ebp-0x40],ax
  424523:	add    eax,0xd
  424526:	mov    edx,eax
  424528:	mov    WORD PTR [ebp-0x3e],dx
  42452c:	mov    edx,0x4f9b
  424531:	mov    WORD PTR [ebp-0x3c],dx
  424535:	add    edx,0xfffffff8
  424538:	mov    WORD PTR [ebp-0x3a],dx
  42453c:	mov    edx,0x4f8d
  424541:	mov    WORD PTR [ebp-0x38],dx
  424545:	add    edx,0xfffffffb
  424548:	mov    WORD PTR [ebp-0x36],dx
  42454c:	mov    edx,0x4f87
  424551:	mov    WORD PTR [ebp-0x34],dx
  424555:	mov    WORD PTR [ebp-0x32],cx
  424559:	mov    ecx,esi
  42455b:	mov    WORD PTR [ebp-0x30],cx
  42455f:	lea    ecx,[edx-0x1]
  424562:	mov    edx,ecx
  424564:	mov    WORD PTR [ebp-0x54],dx
  424568:	mov    edx,eax
  42456a:	mov    WORD PTR [ebp-0x52],dx
  42456e:	mov    edx,0x4e7b
  424573:	mov    WORD PTR [ebp-0x50],dx
  424577:	mov    WORD PTR [ebp-0x4e],ax
  42457b:	lea    eax,[edx-0xe]
  42457e:	mov    WORD PTR [ebp-0x4c],ax
  424582:	add    eax,0xfffffffb
  424585:	mov    WORD PTR [ebp-0x4a],ax
  424589:	lea    eax,[edx-0x14]
  42458c:	mov    WORD PTR [ebp-0x48],ax
  424590:	mov    WORD PTR [ebp-0x46],cx
  424594:	mov    WORD PTR [ebp-0x44],si
  424598:	mov    ecx,DWORD PTR [ebp+0x8]
  42459b:	movzx  edx,WORD PTR [ebp-0x54]
  42459f:	mov    eax,0x75108b1
  4245a4:	xor    ecx,eax
  4245a6:	add    ecx,ebx
  4245a8:	xor    ecx,edx
  4245aa:	mov    WORD PTR [ebp-0x54],cx
  4245ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4245b1:	xor    ecx,eax
  4245b3:	movzx  eax,WORD PTR [ebp-0x40]
  4245b7:	add    ecx,ebx
  4245b9:	xor    ecx,eax
  4245bb:	xor    eax,eax
  4245bd:	mov    WORD PTR [ebp-0x40],cx
  4245c1:	mov    WORD PTR [ebp-0xf4],ax
  4245c8:	mov    WORD PTR [ebp-0x108],ax
  4245cf:	mov    edi,DWORD PTR [ebp+0x24]
  4245d2:	lea    eax,[ebp-0xf4]
  4245d8:	lea    edx,[ebp-0x54]
  4245db:	mov    DWORD PTR [ebp-0xe0],0x2
  4245e5:	mov    DWORD PTR [ebp-0xdc],eax
  4245eb:	call   0x42702b
  4245f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4245f3:	mov    DWORD PTR [ebp-0xd8],eax
  4245f9:	mov    eax,0x75108b1
  4245fe:	xor    ecx,eax
  424600:	add    ecx,ebx
  424602:	je     0x424621
  424604:	lea    ecx,[ebp-0xe0]
  42460a:	push   ecx
  42460b:	mov    ecx,DWORD PTR [ebp+0xc]
  42460e:	xor    ecx,eax
  424610:	add    ecx,ebx
  424612:	push   ecx
  424613:	lea    eax,[ebp-0x9c]
  424619:	push   eax
  42461a:	mov    eax,DWORD PTR [ebp+0x10]
  42461d:	push   0x0
  42461f:	call   eax
  424621:	mov    edi,DWORD PTR [ebp+0x24]
  424624:	lea    eax,[ebp-0x108]
  42462a:	lea    edx,[ebp-0x40]
  42462d:	mov    DWORD PTR [ebp-0xdc],eax
  424633:	call   0x42702b
  424638:	mov    DWORD PTR [ebp-0xd8],eax
  42463e:	mov    eax,DWORD PTR [ebp+0x14]
  424641:	push   DWORD PTR [ebp-0x4]
  424644:	push   DWORD PTR [ebp+0x20]
  424647:	push   DWORD PTR [ebp+0x1c]
  42464a:	push   DWORD PTR [ebp+0x18]
  42464d:	push   DWORD PTR [ebp+0x10]
  424650:	push   DWORD PTR [ebp+0x8]
  424653:	push   DWORD PTR [ebp+0xc]
  424656:	call   0x4258cc
  42465b:	test   eax,eax
  42465d:	je     0x4246a4
  42465f:	add    DWORD PTR [ebp-0x4],eax
  424662:	push   DWORD PTR [ebp-0x4]
  424665:	lea    esi,[ebp+0x4]
  424668:	call   0x424abc
  42466d:	mov    eax,DWORD PTR [ebp-0x4]
  424670:	mov    eax,DWORD PTR [eax+0x1c8]
  424676:	mov    eax,DWORD PTR [eax]
  424678:	xor    eax,0x75108b1
  42467d:	add    eax,ebx
  42467f:	mov    eax,DWORD PTR [ebp-0x4]
  424682:	jne    0x42469a
  424684:	mov    ecx,DWORD PTR [ebp-0x4]
  424687:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42468d:	push   DWORD PTR [ecx]
  42468f:	mov    eax,DWORD PTR [eax+0x1e0]
  424695:	call   DWORD PTR [eax+0x28]
  424698:	jmp    0x4246a4
  42469a:	mov    eax,DWORD PTR [eax+0x17c]
  4246a0:	mov    eax,DWORD PTR [eax]
  4246a2:	add    DWORD PTR [esi],eax
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	mov    eax,DWORD PTR [eax+0x1dc]
  4246ad:	dec    DWORD PTR [eax]
  4246af:	mov    ecx,DWORD PTR [ebp-0x4]
  4246b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4246b8:	mov    eax,DWORD PTR [eax]
  4246ba:	lea    eax,[ecx+eax*4]
  4246bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4246c0:	mov    ecx,DWORD PTR [ecx+0x17c]
  4246c6:	mov    eax,DWORD PTR [eax]
  4246c8:	mov    ecx,DWORD PTR [ecx]
  4246ca:	add    DWORD PTR [eax],ecx
  4246cc:	pop    edi
  4246cd:	pop    esi
  4246ce:	pop    ebx
  4246cf:	leave  
  4246d0:	ret    0x20
  4246d3:	push   edi
  4246d4:	push   esi
  4246d5:	push   ebx
  4246d6:	push   ebp
  4246d7:	mov    ebp,esp
  4246d9:	mov    eax,DWORD PTR [ebp+0x24]
  4246dc:	add    DWORD PTR [ebp+0x28],eax
  4246df:	push   eax
  4246e0:	cld    
  4246e1:	mov    esi,DWORD PTR [ebp+0x18]
  4246e4:	add    DWORD PTR [ebp+0x1c],esi
  4246e7:	push   esi
  4246e8:	mov    esi,DWORD PTR [ebp+0x14]
  4246eb:	lods   eax,DWORD PTR ds:[esi]
  4246ec:	xchg   edx,eax
  4246ed:	push   edx
  4246ee:	mov    cl,BYTE PTR [esi-0x2]
  4246f1:	or     eax,0xffffffff
  4246f4:	shl    eax,cl
  4246f6:	not    eax
  4246f8:	push   eax
  4246f9:	mov    cl,dh
  4246fb:	or     eax,0xffffffff
  4246fe:	shl    eax,cl
  424700:	not    eax
  424702:	push   eax
  424703:	add    cl,dl
  424705:	mov    edi,esi
  424707:	sub    esp,0xc
  42470a:	sub    eax,eax
  42470c:	inc    eax
  42470d:	push   eax
  42470e:	push   eax
  42470f:	push   eax
  424710:	push   eax
  424711:	push   eax
  424712:	push   edi
  424713:	sub    esi,esi
  424715:	push   esi
  424716:	or     ebx,0xffffffff
  424719:	mov    eax,0x300
  42471e:	shl    eax,cl
  424720:	lea    ecx,[eax+0x736]
  424726:	mov    eax,0x4000400
  42472b:	shr    ecx,1
  42472d:	rep stos DWORD PTR es:[edi],eax
  42472f:	push   0x5
  424731:	pop    ecx
  424732:	call   0x424a1d
  424737:	loop   0x424732
  424739:	lea    esi,[esi]
  42473b:	lea    edi,[edi]
  42473d:	mov    edi,DWORD PTR [ebp-0x4]
  424740:	mov    eax,DWORD PTR [ebp-0x10]
  424743:	sub    edi,DWORD PTR [ebp+0x24]
  424746:	and    eax,edi
  424748:	mov    DWORD PTR [ebp-0x18],eax
  42474b:	mov    al,0x0
  42474d:	call   0x424a35
  424752:	jne    0x4247ed
  424758:	mov    cl,BYTE PTR [ebp-0xc]
  42475b:	and    edi,DWORD PTR [ebp-0x14]
  42475e:	shl    edi,cl
  424760:	sub    cl,0x8
  424763:	neg    cl
  424765:	shr    esi,cl
  424767:	pop    eax
  424768:	add    edi,esi
  42476a:	pop    esi
  42476b:	lea    edi,[edi+edi*2]
  42476e:	shl    edi,0x8
  424771:	cmp    al,0x7
  424773:	pop    edx
  424774:	lea    ecx,[esi+edi*2+0xe6c]
  42477b:	push   ecx
  42477c:	push   esi
  42477d:	mov    esi,0x100
  424782:	push   eax
  424783:	mov    al,0x1
  424785:	jb     0x4247bb
  424787:	mov    edi,DWORD PTR [ebp-0x4]
  42478a:	sub    edi,DWORD PTR [ebp-0x24]
  42478d:	movzx  edi,BYTE PTR [edi]
  424790:	mov    ebp,DWORD PTR [ebp-0x34]
  424793:	shl    edi,1
  424795:	mov    ecx,esi
  424797:	and    esi,edi
  424799:	add    ecx,esi
  42479b:	lea    ebp,[ebp+ecx*2+0x0]
  42479f:	call   0x424a54
  4247a4:	mov    ecx,eax
  4247a6:	shr    esi,0x8
  4247a9:	and    ecx,0x1
  4247ac:	cmp    esi,ecx
  4247ae:	mov    esi,0x100
  4247b3:	jne    0x4247c3
  4247b5:	cmp    eax,esi
  4247b7:	jb     0x424790
  4247b9:	jmp    0x4247cf
  4247bb:	mov    ebp,DWORD PTR [ebp-0x34]
  4247be:	call   0x424a54
  4247c3:	inc    eax
  4247c4:	inc    esi
  4247c5:	sub    eax,0x1
  4247c8:	sub    esi,0x1
  4247cb:	cmp    eax,esi
  4247cd:	jb     0x4247bb
  4247cf:	pop    edx
  4247d0:	inc    edx
  4247d1:	cmp    edx,0x5
  4247d4:	dec    edx
  4247d5:	mov    ecx,edx
  4247d7:	jb     0x4247e8
  4247d9:	inc    edx
  4247da:	cmp    edx,0xb
  4247dd:	dec    edx
  4247de:	mov    cl,0x4
  4247e0:	dec    cl
  4247e2:	jb     0x4247e8
  4247e4:	mov    cl,0x7
  4247e6:	dec    cl
  4247e8:	sub    edx,ecx
  4247ea:	push   edx
  4247eb:	jmp    0x42483c
  4247ed:	mov    al,0xc1
  4247ef:	dec    al
  4247f1:	call   0x424a45
  4247f6:	jne    0x42480c
  4247f8:	pop    eax
  4247f9:	pop    edi
  4247fa:	pop    edx
  4247fb:	pop    ecx
  4247fc:	pop    edx
  4247fd:	pop    ecx
  4247fe:	push   DWORD PTR [esp]
  424801:	push   ecx
  424802:	push   edx
  424803:	mov    edx,0x664
  424808:	mov    cl,0x0
  42480a:	jmp    0x42487f
  42480c:	mov    al,0xcd
  42480e:	dec    al
  424810:	call   0x424a45
  424815:	jne    0x424845
  424817:	mov    al,0xf1
  424819:	dec    al
  42481b:	call   0x424a35
  424820:	jne    0x424875
  424822:	pop    eax
  424823:	cmp    al,0x7
  424825:	mov    al,0x9
  424827:	jb     0x42482b
  424829:	mov    al,0xb
  42482b:	push   eax
  42482c:	mov    esi,DWORD PTR [ebp-0x4]
  42482f:	sub    esi,DWORD PTR [ebp-0x24]
  424832:	cmp    esi,DWORD PTR [ebp+0x24]
  424835:	jb     0x424a0c
  42483b:	lods   al,BYTE PTR ds:[esi]
  42483c:	mov    edi,DWORD PTR [ebp-0x4]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	jmp    0x4249d3
  424845:	mov    al,0xd8
  424847:	call   0x424a45
  42484c:	mov    esi,DWORD PTR [ebp-0x28]
  42484f:	je     0x42486c
  424851:	mov    al,0xe4
  424853:	call   0x424a45
  424858:	mov    esi,DWORD PTR [ebp-0x2c]
  42485b:	je     0x424866
  42485d:	mov    esi,DWORD PTR [ebp-0x30]
  424860:	mov    ecx,DWORD PTR [ebp-0x2c]
  424863:	mov    DWORD PTR [ebp-0x30],ecx
  424866:	mov    ecx,DWORD PTR [ebp-0x28]
  424869:	mov    DWORD PTR [ebp-0x2c],ecx
  42486c:	mov    ecx,DWORD PTR [ebp-0x24]
  42486f:	mov    DWORD PTR [ebp-0x28],ecx
  424872:	mov    DWORD PTR [ebp-0x24],esi
  424875:	pop    eax
  424876:	pop    edi
  424877:	pop    ecx
  424878:	mov    edx,0xa68
  42487d:	mov    cl,0x8
  42487f:	add    edx,edi
  424881:	push   edx
  424882:	push   edi
  424883:	cmp    al,0x7
  424885:	mov    al,cl
  424887:	jb     0x42488b
  424889:	add    al,0x3
  42488b:	push   eax
  42488c:	mov    ebp,DWORD PTR [ebp-0x34]
  42488f:	call   0x424a52
  424894:	jne    0x4248aa
  424896:	mov    eax,DWORD PTR [ebp-0x18]
  424899:	mov    edi,DWORD PTR [ebp-0x34]
  42489c:	shl    eax,0x3
  42489f:	sub    ecx,ecx
  4248a1:	push   0x8
  4248a3:	pop    esi
  4248a4:	lea    edi,[edi+eax*2+0x4]
  4248a8:	jmp    0x4248df
  4248aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4248ad:	add    ebp,0x2
  4248b0:	call   0x424a52
  4248b5:	jne    0x4248cf
  4248b7:	mov    eax,DWORD PTR [ebp-0x18]
  4248ba:	mov    edi,DWORD PTR [ebp-0x34]
  4248bd:	shl    eax,0x3
  4248c0:	push   0x8
  4248c2:	pop    ecx
  4248c3:	push   0x8
  4248c5:	pop    esi
  4248c6:	lea    edi,[edi+eax*2+0x104]
  4248cd:	jmp    0x4248df
  4248cf:	mov    edi,0x204
  4248d4:	add    edi,DWORD PTR [ebp-0x34]
  4248d7:	push   0x10
  4248d9:	pop    ecx
  4248da:	mov    esi,0x100
  4248df:	mov    DWORD PTR [ebp-0x1c],ecx
  4248e2:	sub    eax,eax
  4248e4:	inc    eax
  4248e5:	mov    ebp,edi
  4248e7:	call   0x424a54
  4248ec:	mov    ecx,eax
  4248ee:	sub    ecx,esi
  4248f0:	jb     0x4248e5
  4248f2:	add    DWORD PTR [ebp-0x1c],ecx
  4248f5:	cmp    DWORD PTR [ebp-0x3c],0x4
  4248f9:	jae    0x4249af
  4248ff:	add    DWORD PTR [ebp-0x3c],0x7
  424903:	mov    ecx,DWORD PTR [ebp-0x1c]
  424906:	cmp    ecx,0x4
  424909:	jb     0x42490e
  42490b:	push   0x3
  42490d:	pop    ecx
  42490e:	mov    edi,DWORD PTR [ebp-0x38]
  424911:	shl    ecx,0x6
  424914:	sub    eax,eax
  424916:	inc    eax
  424917:	push   0x40
  424919:	pop    esi
  42491a:	lea    edi,[edi+ecx*2+0x360]
  424921:	mov    ebp,edi
  424923:	call   0x424a54
  424928:	mov    ecx,eax
  42492a:	sub    ecx,esi
  42492c:	jb     0x424921
  42492e:	mov    DWORD PTR [ebp-0x18],ecx
  424931:	mov    DWORD PTR [ebp-0x24],ecx
  424934:	cmp    ecx,0x4
  424937:	jb     0x4249ac
  424939:	mov    esi,ecx
  42493b:	and    DWORD PTR [ebp-0x24],0x1
  42493f:	shr    esi,1
  424941:	or     DWORD PTR [ebp-0x24],0x2
  424945:	dec    esi
  424946:	cmp    ecx,0xe
  424949:	jae    0x424964
  42494b:	mov    eax,0x2af
  424950:	sub    eax,ecx
  424952:	mov    ecx,esi
  424954:	shl    BYTE PTR [ebp-0x24],cl
  424957:	add    eax,DWORD PTR [ebp-0x24]
  42495a:	shl    eax,1
  42495c:	add    eax,DWORD PTR [ebp-0x38]
  42495f:	mov    DWORD PTR [ebp-0x34],eax
  424962:	jmp    0x424991
  424964:	sub    esi,0x4
  424967:	call   0x424a11
  42496c:	shr    ebx,1
  42496e:	shl    DWORD PTR [ebp-0x24],1
  424971:	cmp    DWORD PTR [ebp-0x20],ebx
  424974:	jb     0x42497c
  424976:	inc    DWORD PTR [ebp-0x24]
  424979:	sub    DWORD PTR [ebp-0x20],ebx
  42497c:	dec    esi
  42497d:	jne    0x424967
  42497f:	mov    eax,0x644
  424984:	add    eax,DWORD PTR [ebp-0x38]
  424987:	mov    DWORD PTR [ebp-0x34],eax
  42498a:	shl    DWORD PTR [ebp-0x24],0x4
  42498e:	push   0x4
  424990:	pop    esi
  424991:	sub    edi,edi
  424993:	inc    edi
  424994:	mov    eax,edi
  424996:	mov    ebp,DWORD PTR [ebp-0x34]
  424999:	call   0x424a54
  42499e:	test   al,0x1
  4249a0:	je     0x4249a5
  4249a2:	or     DWORD PTR [ebp-0x24],edi
  4249a5:	shl    edi,1
  4249a7:	dec    esi
  4249a8:	jne    0x424996
  4249aa:	jmp    0x4249ac
  4249ac:	inc    DWORD PTR [ebp-0x24]
  4249af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4249b2:	add    ecx,0x2
  4249b5:	mov    edi,DWORD PTR [ebp-0x4]
  4249b8:	mov    eax,edi
  4249ba:	sub    eax,DWORD PTR [ebp+0x24]
  4249bd:	cmp    DWORD PTR [ebp-0x24],eax
  4249c0:	ja     0x424a0c
  4249c2:	mov    esi,edi
  4249c4:	sub    esi,DWORD PTR [ebp-0x24]
  4249c7:	mov    edx,DWORD PTR [ebp+0x28]
  4249ca:	lods   al,BYTE PTR ds:[esi]
  4249cb:	stos   BYTE PTR es:[edi],al
  4249cc:	cmp    edi,edx
  4249ce:	jae    0x4249d3
  4249d0:	dec    ecx
  4249d1:	jne    0x4249ca
  4249d3:	mov    DWORD PTR [ebp-0x4],edi
  4249d6:	movzx  esi,al
  4249d9:	cmp    edi,DWORD PTR [ebp+0x28]
  4249dc:	jb     0x42473d
  4249e2:	call   0x424a11
  4249e7:	sub    eax,eax
  4249e9:	lea    ebp,[esp+0x3c]
  4249ed:	mov    edx,DWORD PTR [ebp+0x20]
  4249f0:	mov    esi,DWORD PTR [ebp-0x8]
  4249f3:	sub    esi,DWORD PTR [ebp+0x18]
  4249f6:	mov    DWORD PTR [edx],esi
  4249f8:	mov    edx,DWORD PTR [ebp+0x2c]
  4249fb:	mov    edi,DWORD PTR [ebp-0x4]
  4249fe:	sub    edi,DWORD PTR [ebp+0x24]
  424a01:	mov    DWORD PTR [edx],edi
  424a03:	leave  
  424a04:	pop    ebx
  424a05:	pop    esi
  424a06:	pop    edi
  424a07:	ret    0x1c
  424a0a:	pop    esi
  424a0b:	pop    eax
  424a0c:	sub    eax,eax
  424a0e:	inc    eax
  424a0f:	jmp    0x4249e9
  424a11:	cmp    ebx,0x1000000
  424a17:	jb     0x424a1a
  424a19:	ret    
  424a1a:	shl    ebx,0x8
  424a1d:	push   esi
  424a1e:	mov    esi,DWORD PTR [ebp-0x8]
  424a21:	jbe    0x424a82
  424a23:	cli    
  424a24:	push   edi
  424a25:	sbb    eax,0x910d9fb8
  424a2a:	or     eax,0x9fb03caa
  424a2f:	or     eax,0x36d5fb0
  424a34:	cdq    
  424a35:	mov    eax,0x64c69dbf
  424a3a:	lea    edx,[ecx-0x606965ef]
  424a40:	sub    eax,0xa2399196
  424a45:	(bad)  
  424a46:	lea    edx,fs:[esi+0x3fb89d9f]
  424a4d:	lods   eax,DWORD PTR ds:[esi]
  424a4e:	sar    BYTE PTR [ebx],0x9f
  424a51:	mov    dh,BYTE PTR [esi]
  424a53:	(bad)  
  424a54:	sar    BYTE PTR [ebx],0x9f
  424a57:	mov    dl,BYTE PTR [eax-0x75757587]
  424a5d:	mov    ss,WORD PTR [edi-0x6]
  424a60:	mov    eax,0x916a1abb
  424a65:	sbb    ebx,DWORD PTR [edx]
  424a67:	or     ch,BYTE PTR [edx-0x4e5448a]
  424a6d:	push   edi
  424a6e:	cld    
  424a6f:	mov    ah,0xce
  424a71:	mov    DWORD PTR [ebx+0x19916a1a],ebx
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	fistp  DWORD PTR [edx]
  424a7b:	or     bh,BYTE PTR [eax-0x20973947]
  424a81:	mov    dl,BYTE PTR [ecx+0x48c6b631]
  424a87:	mov    ch,0x6e
  424a89:	mov    ebx,0xe6570a1a
  424a8e:	mov    eax,0xaa8a70f1
  424a93:	mov    cl,BYTE PTR [edx+0x3191b536]
  424a99:	sahf   
  424a9a:	and    ecx,DWORD PTR [esi-0x72697541]
  424aa0:	shr    BYTE PTR [esp+0x40],0xc3
  424aa5:	shr    edx,0x5
  424aa8:	sub    DWORD PTR [esp+0x20],ecx
  424aac:	sub    ebx,ecx
  424aae:	sub    WORD PTR [ebp+0x0],dx
  424ab2:	add    eax,eax
  424ab4:	add    eax,0x1
  424ab7:	lea    ebp,[esp+0x40]
  424abb:	ret    
  424abc:	push   ebp
  424abd:	mov    ebp,esp
  424abf:	sub    esp,0x12c
  424ac5:	push   ebx
  424ac6:	push   esi
  424ac7:	push   edi
  424ac8:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  424acf:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  424ad6:	mov    eax,DWORD PTR [ebp+0x8]
  424ad9:	mov    DWORD PTR [ebp+0x8],eax
  424adc:	mov    ecx,DWORD PTR [ebp-0x10]
  424adf:	mov    ebx,0x75108b1
  424ae4:	xor    ecx,ebx
  424ae6:	mov    eax,0x3272f8
  424aeb:	add    ecx,eax
  424aed:	mov    DWORD PTR [ebp-0x24],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x10]
  424af3:	xor    ecx,ebx
  424af5:	add    ecx,eax
  424af7:	mov    DWORD PTR [ebp-0x40],ecx
  424afa:	mov    ecx,DWORD PTR [ebp-0x10]
  424afd:	xor    ecx,ebx
  424aff:	add    ecx,eax
  424b01:	mov    DWORD PTR [ebp-0x3c],ecx
  424b04:	mov    ecx,DWORD PTR [ebp-0x10]
  424b07:	xor    ecx,ebx
  424b09:	add    ecx,eax
  424b0b:	mov    DWORD PTR [ebp-0xd8],ecx
  424b11:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  424b18:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  424b1f:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424b26:	push   0x25
  424b28:	pop    ecx
  424b29:	mov    DWORD PTR [ebp-0x30],ecx
  424b2c:	mov    DWORD PTR [ebp-0x30],ecx
  424b2f:	push   0x65
  424b31:	pop    ecx
  424b32:	mov    DWORD PTR [ebp-0x30],ecx
  424b35:	mov    DWORD PTR [ebp-0x30],ecx
  424b38:	mov    DWORD PTR [ebp-0x30],0x4d
  424b3f:	mov    DWORD PTR [ebp-0x30],0x43
  424b46:	mov    ecx,DWORD PTR [ebp-0x10]
  424b49:	xor    ecx,ebx
  424b4b:	add    ecx,eax
  424b4d:	mov    DWORD PTR [ebp-0x30],ecx
  424b50:	mov    ecx,DWORD PTR [ebp-0x10]
  424b53:	xor    ecx,ebx
  424b55:	add    ecx,eax
  424b57:	mov    DWORD PTR [ebp-0x30],ecx
  424b5a:	mov    DWORD PTR [ebp-0x28],0x258
  424b61:	mov    DWORD PTR [ebp-0x34],0x36
  424b68:	mov    DWORD PTR [ebp-0x14],0x7a
  424b6f:	lea    edi,[ebp-0x10c]
  424b75:	lea    esi,[ebp-0x12c]
  424b7b:	call   0x42583b
  424b80:	dec    DWORD PTR [ebp-0x14]
  424b83:	jne    0x424b6f
  424b85:	dec    DWORD PTR [ebp-0x34]
  424b88:	jne    0x424b68
  424b8a:	dec    DWORD PTR [ebp-0x28]
  424b8d:	jne    0x424b61
  424b8f:	mov    DWORD PTR [ebp-0x28],0x400e
  424b96:	mov    eax,DWORD PTR [ebp-0x10]
  424b99:	xor    eax,ebx
  424b9b:	mov    esi,0x3272f8
  424ba0:	add    eax,esi
  424ba2:	mov    DWORD PTR [ebp-0x1c],eax
  424ba5:	mov    eax,DWORD PTR [ebp-0x10]
  424ba8:	and    DWORD PTR [ebp-0x94],0x0
  424baf:	xor    eax,ebx
  424bb1:	add    eax,esi
  424bb3:	mov    DWORD PTR [ebp-0x38],eax
  424bb6:	mov    eax,fs:0x18
  424bbc:	mov    DWORD PTR [ebp-0x94],eax
  424bc2:	mov    eax,DWORD PTR [eax+0x30]
  424bc5:	mov    DWORD PTR [ebp-0xcc],eax
  424bcb:	mov    eax,DWORD PTR [eax+0xc]
  424bce:	mov    DWORD PTR [ebp-0xc0],eax
  424bd4:	mov    eax,DWORD PTR [ebp+0x8]
  424bd7:	lea    ecx,[ebp-0x94]
  424bdd:	mov    DWORD PTR [eax+0x1a0],ecx
  424be3:	mov    eax,DWORD PTR [ebp+0x8]
  424be6:	lea    ecx,[ebp-0xcc]
  424bec:	mov    DWORD PTR [eax+0x1a4],ecx
  424bf2:	mov    eax,DWORD PTR [ebp+0x8]
  424bf5:	push   DWORD PTR [ebp+0x8]
  424bf8:	lea    ecx,[ebp-0xc0]
  424bfe:	mov    DWORD PTR [eax+0x1a8],ecx
  424c04:	call   0x426ffc
  424c09:	mov    ecx,DWORD PTR [ebp-0x10]
  424c0c:	xor    ecx,ebx
  424c0e:	add    ecx,esi
  424c10:	cmp    ecx,eax
  424c12:	je     0x424f95
  424c18:	mov    eax,DWORD PTR [ebp+0x8]
  424c1b:	mov    eax,DWORD PTR [eax+0x194]
  424c21:	mov    ecx,DWORD PTR [eax]
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	mov    eax,DWORD PTR [eax+0x194]
  424c2c:	mov    eax,DWORD PTR [eax]
  424c2e:	add    eax,DWORD PTR [ecx+0x3c]
  424c31:	mov    ecx,DWORD PTR [ebp+0x8]
  424c34:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424c3a:	lea    edx,[ebp-0xec]
  424c40:	push   edx
  424c41:	mov    edx,DWORD PTR [ebp+0x8]
  424c44:	mov    edx,DWORD PTR [edx+0x18c]
  424c4a:	mov    edx,DWORD PTR [edx]
  424c4c:	add    edx,DWORD PTR [eax+0x88]
  424c52:	push   0x4
  424c54:	push   DWORD PTR [eax+0x8c]
  424c5a:	push   edx
  424c5b:	call   DWORD PTR [ecx+0x1c]
  424c5e:	push   DWORD PTR [ebp+0x8]
  424c61:	xor    eax,eax
  424c63:	mov    DWORD PTR [ebp-0xa8],0xe3beeec4
  424c6d:	mov    DWORD PTR [ebp-0xa4],0xeac7eddc
  424c77:	mov    DWORD PTR [ebp-0xa0],0xbcede0f2
  424c81:	mov    BYTE PTR [ebp-0x9c],0x7b
  424c88:	lea    edi,[ebp-0x9b]
  424c8e:	stos   DWORD PTR es:[edi],eax
  424c8f:	stos   WORD PTR es:[edi],ax
  424c91:	stos   BYTE PTR es:[edi],al
  424c92:	xor    eax,eax
  424c94:	mov    DWORD PTR [ebp-0xbc],0xe3beeec4
  424c9e:	mov    DWORD PTR [ebp-0xb8],0xeac7eddc
  424ca8:	mov    DWORD PTR [ebp-0xb4],0xd2ede0f2
  424cb2:	mov    BYTE PTR [ebp-0xb0],0x7b
  424cb9:	lea    edi,[ebp-0xaf]
  424cbf:	stos   DWORD PTR es:[edi],eax
  424cc0:	stos   WORD PTR es:[edi],ax
  424cc2:	stos   BYTE PTR es:[edi],al
  424cc3:	mov    edi,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edx,DWORD PTR [eax+0x1b8]
  424ccf:	mov    DWORD PTR [ebp-0x68],0xedefeee7
  424cd6:	mov    DWORD PTR [ebp-0x64],0xe4ebe8de
  424cdd:	mov    WORD PTR [ebp-0x60],0x7bbc
  424ce3:	mov    DWORD PTR [ebp-0x90],0xe3beeec4
  424ced:	mov    DWORD PTR [ebp-0x8c],0xe7bceddc
  424cf7:	mov    DWORD PTR [ebp-0x88],0xc9dce3eb
  424d01:	mov    DWORD PTR [ebp-0x84],0xede0e8f0
  424d0b:	mov    DWORD PTR [ebp-0x80],0x7bbcdee4
  424d12:	mov    DWORD PTR [ebp-0x7c],0xe3beeec4
  424d19:	mov    DWORD PTR [ebp-0x78],0xe7bceddc
  424d20:	mov    DWORD PTR [ebp-0x74],0xc9dce3eb
  424d27:	mov    DWORD PTR [ebp-0x70],0xede0e8f0
  424d2e:	mov    DWORD PTR [ebp-0x6c],0x7bd2dee4
  424d35:	call   0x42702b
  424d3a:	push   eax
  424d3b:	mov    eax,DWORD PTR [ebp+0x8]
  424d3e:	mov    eax,DWORD PTR [eax+0x1a8]
  424d44:	push   DWORD PTR [eax]
  424d46:	call   0x426ccc
  424d4b:	test   eax,eax
  424d4d:	jne    0x424d9f
  424d4f:	mov    eax,DWORD PTR [ebp+0x8]
  424d52:	mov    eax,DWORD PTR [eax+0x1e0]
  424d58:	mov    edi,DWORD PTR [ebp+0x8]
  424d5b:	add    eax,0x4
  424d5e:	mov    DWORD PTR [ebp-0x20],eax
  424d61:	mov    eax,DWORD PTR [ebp+0x8]
  424d64:	mov    edx,DWORD PTR [eax+0x1b8]
  424d6a:	call   0x42702b
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x20]
  424d73:	call   DWORD PTR [eax]
  424d75:	test   eax,eax
  424d77:	jne    0x424d9f
  424d79:	mov    eax,DWORD PTR [ebp+0x8]
  424d7c:	mov    eax,DWORD PTR [eax+0x1e0]
  424d82:	mov    edi,DWORD PTR [ebp+0x8]
  424d85:	add    eax,0x10
  424d88:	mov    DWORD PTR [ebp-0x20],eax
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	mov    edx,DWORD PTR [eax+0x1b8]
  424d94:	call   0x42702b
  424d99:	push   eax
  424d9a:	mov    eax,DWORD PTR [ebp-0x20]
  424d9d:	call   DWORD PTR [eax]
  424d9f:	mov    eax,DWORD PTR [ebp-0x10]
  424da2:	mov    ecx,DWORD PTR [ebp-0x28]
  424da5:	xor    eax,ebx
  424da7:	add    eax,esi
  424da9:	cmp    eax,ecx
  424dab:	je     0x424f6e
  424db1:	mov    eax,DWORD PTR [ebp-0x18]
  424db4:	xor    eax,ebx
  424db6:	mov    ecx,0xffcd8d08
  424dbb:	sub    ecx,eax
  424dbd:	add    ecx,DWORD PTR [ebp-0x28]
  424dc0:	mov    eax,DWORD PTR [ebp-0x1c]
  424dc3:	cmp    eax,ecx
  424dc5:	ja     0x424f6e
  424dcb:	mov    DWORD PTR [ebp-0x34],0x0
  424dd2:	push   DWORD PTR [ebp+0x8]
  424dd5:	mov    edi,DWORD PTR [ebp+0x8]
  424dd8:	mov    eax,DWORD PTR [ebp+0x8]
  424ddb:	mov    edx,DWORD PTR [eax+0x1b4]
  424de1:	call   0x42702b
  424de6:	push   eax
  424de7:	mov    eax,DWORD PTR [ebp+0x8]
  424dea:	mov    eax,DWORD PTR [eax+0x1a8]
  424df0:	push   DWORD PTR [eax]
  424df2:	call   0x426ccc
  424df7:	mov    ecx,DWORD PTR [ebp+0x8]
  424dfa:	mov    ecx,DWORD PTR [ecx+0x19c]
  424e00:	mov    DWORD PTR [ecx],eax
  424e02:	mov    eax,DWORD PTR [ebp+0x8]
  424e05:	mov    edi,DWORD PTR [eax+0x1e0]
  424e0b:	mov    esi,DWORD PTR [ebp+0x8]
  424e0e:	xor    eax,eax
  424e10:	lea    edx,[ebp-0x7c]
  424e13:	call   0x427061
  424e18:	push   eax
  424e19:	mov    eax,DWORD PTR [ebp+0x8]
  424e1c:	mov    eax,DWORD PTR [eax+0x19c]
  424e22:	push   DWORD PTR [eax]
  424e24:	call   DWORD PTR [edi+0x8]
  424e27:	mov    DWORD PTR [ebp-0x20],eax
  424e2a:	mov    eax,DWORD PTR [ebp+0x8]
  424e2d:	mov    edi,DWORD PTR [eax+0x1e0]
  424e33:	mov    esi,DWORD PTR [ebp+0x8]
  424e36:	xor    eax,eax
  424e38:	lea    edx,[ebp-0x90]
  424e3e:	call   0x427061
  424e43:	push   eax
  424e44:	mov    eax,DWORD PTR [ebp+0x8]
  424e47:	mov    eax,DWORD PTR [eax+0x19c]
  424e4d:	push   DWORD PTR [eax]
  424e4f:	call   DWORD PTR [edi+0x8]
  424e52:	mov    eax,DWORD PTR [ebp+0x8]
  424e55:	mov    edi,DWORD PTR [eax+0x1e0]
  424e5b:	mov    esi,DWORD PTR [ebp+0x8]
  424e5e:	xor    eax,eax
  424e60:	lea    edx,[ebp-0xa8]
  424e66:	call   0x427061
  424e6b:	push   eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    eax,DWORD PTR [eax+0x19c]
  424e75:	push   DWORD PTR [eax]
  424e77:	call   DWORD PTR [edi+0x8]
  424e7a:	and    DWORD PTR [ebp-0x8],0x0
  424e7e:	mov    DWORD PTR [ebp-0x48],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x8]
  424e84:	and    eax,0x7
  424e87:	add    eax,0x31
  424e8a:	push   eax
  424e8b:	call   DWORD PTR [ebp-0x20]
  424e8e:	test   eax,eax
  424e90:	je     0x424ed4
  424e92:	mov    eax,DWORD PTR [ebp-0x8]
  424e95:	push   0x19
  424e97:	xor    edx,edx
  424e99:	pop    ecx
  424e9a:	div    ecx
  424e9c:	add    dl,0x41
  424e9f:	movzx  eax,dl
  424ea2:	push   eax
  424ea3:	call   DWORD PTR [ebp-0x48]
  424ea6:	test   eax,eax
  424ea8:	jne    0x424ed4
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    edi,DWORD PTR [eax+0x1e0]
  424eb3:	mov    esi,DWORD PTR [ebp+0x8]
  424eb6:	xor    eax,eax
  424eb8:	lea    edx,[ebp-0x68]
  424ebb:	call   0x427061
  424ec0:	push   eax
  424ec1:	mov    eax,DWORD PTR [ebp+0x8]
  424ec4:	mov    eax,DWORD PTR [eax+0x198]
  424eca:	push   DWORD PTR [eax]
  424ecc:	call   DWORD PTR [edi+0x8]
  424ecf:	mov    DWORD PTR [ebp-0x14],eax
  424ed2:	jmp    0x424ed8
  424ed4:	and    DWORD PTR [ebp-0x14],0x0
  424ed8:	inc    DWORD PTR [ebp-0x8]
  424edb:	cmp    DWORD PTR [ebp-0x8],0x10
  424edf:	jb     0x424e81
  424ee1:	mov    eax,DWORD PTR [ebp-0x18]
  424ee4:	mov    esi,DWORD PTR [ebp+0x8]
  424ee7:	xor    eax,ebx
  424ee9:	mov    edi,0x3272f8
  424eee:	add    eax,edi
  424ef0:	lea    edx,[ebp-0x10c]
  424ef6:	call   0x427061
  424efb:	push   eax
  424efc:	mov    eax,DWORD PTR [ebp-0x10]
  424eff:	mov    esi,DWORD PTR [ebp+0x8]
  424f02:	xor    eax,ebx
  424f04:	add    eax,edi
  424f06:	lea    edx,[ebp-0x12c]
  424f0c:	call   0x427061
  424f11:	push   eax
  424f12:	call   DWORD PTR [ebp-0x14]
  424f15:	mov    ecx,DWORD PTR [ebp-0x10]
  424f18:	xor    ecx,ebx
  424f1a:	add    ecx,edi
  424f1c:	cmp    ecx,eax
  424f1e:	jne    0x424f27
  424f20:	mov    DWORD PTR [ebp-0x34],0x1
  424f27:	mov    eax,DWORD PTR [ebp-0x18]
  424f2a:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f2d:	xor    eax,ebx
  424f2f:	lea    eax,[eax+ecx*1+0x3272f8]
  424f36:	mov    DWORD PTR [ebp-0x1c],eax
  424f39:	mov    eax,DWORD PTR [ebp-0x34]
  424f3c:	test   eax,eax
  424f3e:	je     0x424f52
  424f40:	mov    eax,DWORD PTR [ebp-0x18]
  424f43:	mov    ecx,DWORD PTR [ebp-0x38]
  424f46:	xor    eax,ebx
  424f48:	lea    eax,[eax+ecx*1+0x3272f8]
  424f4f:	mov    DWORD PTR [ebp-0x38],eax
  424f52:	mov    eax,DWORD PTR [ebp-0x18]
  424f55:	xor    eax,ebx
  424f57:	mov    ecx,0xffcd8d08
  424f5c:	sub    ecx,eax
  424f5e:	add    ecx,DWORD PTR [ebp-0x28]
  424f61:	mov    eax,DWORD PTR [ebp-0x1c]
  424f64:	cmp    eax,ecx
  424f66:	jbe    0x424dcb
  424f6c:	mov    esi,edi
  424f6e:	mov    eax,DWORD PTR [ebp-0x38]
  424f71:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f74:	cmp    ecx,eax
  424f76:	jne    0x424f89
  424f78:	push   DWORD PTR [ebp+0x8]
  424f7b:	lea    eax,[ebp-0x40]
  424f7e:	push   eax
  424f7f:	call   0x427ad0
  424f84:	mov    DWORD PTR [ebp-0x24],eax
  424f87:	jmp    0x424f95
  424f89:	mov    eax,DWORD PTR [ebp-0x24]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x18]
  424f8f:	xor    ecx,ebx
  424f91:	add    ecx,esi
  424f93:	xor    DWORD PTR [eax],ecx
  424f95:	mov    eax,DWORD PTR [ebp-0x10]
  424f98:	mov    ecx,DWORD PTR [ebp-0x24]
  424f9b:	xor    eax,ebx
  424f9d:	add    eax,esi
  424f9f:	cmp    eax,ecx
  424fa1:	je     0x425719
  424fa7:	mov    eax,DWORD PTR [ebp-0x10]
  424faa:	mov    ecx,DWORD PTR [ebp-0x40]
  424fad:	xor    eax,ebx
  424faf:	add    eax,esi
  424fb1:	cmp    eax,ecx
  424fb3:	je     0x425719
  424fb9:	mov    eax,DWORD PTR [ebp-0x10]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	jmp    0x424fde
  424fc2:	mov    edi,DWORD PTR [ebp-0x24]
  424fc5:	mov    cl,al
  424fc7:	and    cl,0x1f
  424fca:	or     dl,0xff
  424fcd:	sub    dl,cl
  424fcf:	add    BYTE PTR [edi+eax*1],dl
  424fd2:	mov    ecx,DWORD PTR [ebp-0x18]
  424fd5:	xor    ecx,ebx
  424fd7:	lea    eax,[eax+ecx*1+0x3272f8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x40]
  424fe1:	cmp    eax,ecx
  424fe3:	jb     0x424fc2
  424fe5:	mov    eax,DWORD PTR [ebp-0x40]
  424fe8:	mov    DWORD PTR [ebp-0x28],eax
  424feb:	mov    eax,DWORD PTR [ebp-0x24]
  424fee:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  424ff5:	mov    DWORD PTR [ebp-0xd4],eax
  424ffb:	mov    edi,0xf89c85b8
  425000:	mov    DWORD PTR [ebp-0x2c],edi
  425003:	mov    eax,DWORD PTR [ebp-0x38]
  425006:	xor    eax,ebx
  425008:	add    eax,esi
  42500a:	mov    DWORD PTR [ebp-0xc],eax
  42500d:	mov    eax,DWORD PTR [ebp-0x38]
  425010:	xor    eax,ebx
  425012:	add    eax,esi
  425014:	mov    DWORD PTR [ebp-0x8],eax
  425017:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  42501e:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  425025:	mov    eax,DWORD PTR [ebp-0x38]
  425028:	mov    ecx,DWORD PTR [ebp-0x28]
  42502b:	xor    eax,ebx
  42502d:	add    eax,esi
  42502f:	cmp    ecx,eax
  425031:	je     0x425230
  425037:	jmp    0x42520c
  42503c:	mov    ecx,DWORD PTR [ebp-0xc]
  42503f:	mov    eax,DWORD PTR [ebp-0x28]
  425042:	sub    eax,ecx
  425044:	mov    ecx,DWORD PTR [ebp-0x48]
  425047:	xor    ecx,ebx
  425049:	add    ecx,esi
  42504b:	xor    edx,edx
  42504d:	div    ecx
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    eax,DWORD PTR [ebp-0x4c]
  425055:	mov    ecx,DWORD PTR [ebp-0x8]
  425058:	xor    eax,ebx
  42505a:	add    eax,esi
  42505c:	cmp    ecx,eax
  42505e:	jbe    0x42506a
  425060:	mov    eax,DWORD PTR [ebp-0x4c]
  425063:	xor    eax,ebx
  425065:	add    eax,esi
  425067:	mov    DWORD PTR [ebp-0x8],eax
  42506a:	mov    eax,DWORD PTR [ebp-0x48]
  42506d:	mov    ecx,DWORD PTR [ebp-0x8]
  425070:	xor    eax,ebx
  425072:	add    eax,esi
  425074:	imul   eax,ecx
  425077:	mov    DWORD PTR [ebp-0x8],eax
  42507a:	mov    eax,DWORD PTR [ebp-0x38]
  42507d:	mov    ecx,DWORD PTR [ebp-0x8]
  425080:	xor    eax,ebx
  425082:	add    eax,esi
  425084:	cmp    ecx,eax
  425086:	je     0x4251fa
  42508c:	mov    eax,DWORD PTR [ebp-0x8]
  42508f:	mov    DWORD PTR [ebp-0x14],eax
  425092:	mov    eax,DWORD PTR [ebp-0xc]
  425095:	add    eax,DWORD PTR [ebp-0xd4]
  42509b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4250a2:	mov    DWORD PTR [ebp-0x34],edi
  4250a5:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4250af:	mov    DWORD PTR [ebp-0x8],eax
  4250b2:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4250b9:	mov    DWORD PTR [ebp-0x1c],edi
  4250bc:	mov    eax,DWORD PTR [ebp-0x20]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	jmp    0x4251b9
  4250c8:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  4250d2:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  4250dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4250df:	mov    ecx,DWORD PTR [ebp-0x44]
  4250e2:	xor    eax,ebx
  4250e4:	add    eax,esi
  4250e6:	imul   eax,ecx
  4250e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4250ec:	mov    al,BYTE PTR [eax+ecx*1]
  4250ef:	mov    BYTE PTR [ebp-0x2],al
  4250f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f8:	xor    eax,ebx
  4250fa:	add    eax,esi
  4250fc:	imul   eax,ecx
  4250ff:	mov    ecx,DWORD PTR [ebp-0xe8]
  425105:	xor    ecx,ebx
  425107:	add    eax,ecx
  425109:	mov    ecx,DWORD PTR [ebp-0x8]
  42510c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425114:	mov    ecx,DWORD PTR [ebp-0xe0]
  42511a:	xor    ecx,ebx
  42511c:	lea    eax,[ecx+eax*1+0x3272f8]
  425123:	movzx  ecx,BYTE PTR [ebp-0x2]
  425127:	xor    ecx,eax
  425129:	mov    BYTE PTR [ebp-0x2],cl
  42512c:	mov    al,BYTE PTR [ebp-0x2]
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	mov    edx,DWORD PTR [ebp-0x44]
  425135:	xor    ecx,ebx
  425137:	add    ecx,esi
  425139:	imul   ecx,edx
  42513c:	mov    edx,DWORD PTR [ebp-0x8]
  42513f:	mov    BYTE PTR [ecx+edx*1],al
  425142:	mov    eax,DWORD PTR [ebp-0x1c]
  425145:	mov    ecx,DWORD PTR [ebp-0x44]
  425148:	xor    eax,ebx
  42514a:	add    eax,esi
  42514c:	imul   eax,ecx
  42514f:	mov    ecx,DWORD PTR [ebp-0x8]
  425152:	mov    al,BYTE PTR [eax+ecx*1]
  425155:	mov    BYTE PTR [ebp-0x2],al
  425158:	mov    eax,DWORD PTR [ebp-0x1c]
  42515b:	mov    ecx,DWORD PTR [ebp-0x44]
  42515e:	xor    eax,ebx
  425160:	add    eax,esi
  425162:	imul   eax,ecx
  425165:	mov    ecx,DWORD PTR [ebp-0x34]
  425168:	xor    ecx,ebx
  42516a:	add    eax,ecx
  42516c:	mov    ecx,DWORD PTR [ebp-0x8]
  42516f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425177:	mov    ecx,DWORD PTR [ebp-0xc4]
  42517d:	xor    ecx,ebx
  42517f:	lea    eax,[ecx+eax*1+0x3272f8]
  425186:	movzx  ecx,BYTE PTR [ebp-0x2]
  42518a:	xor    ecx,eax
  42518c:	mov    BYTE PTR [ebp-0x2],cl
  42518f:	mov    al,BYTE PTR [ebp-0x2]
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    edx,DWORD PTR [ebp-0x44]
  425198:	xor    ecx,ebx
  42519a:	add    ecx,esi
  42519c:	imul   ecx,edx
  42519f:	mov    edx,DWORD PTR [ebp-0x8]
  4251a2:	mov    BYTE PTR [ecx+edx*1],al
  4251a5:	mov    eax,DWORD PTR [ebp-0x30]
  4251a8:	mov    ecx,DWORD PTR [ebp-0x34]
  4251ab:	xor    eax,ebx
  4251ad:	xor    ecx,ebx
  4251af:	add    eax,esi
  4251b1:	add    ecx,esi
  4251b3:	imul   eax,ecx
  4251b6:	add    eax,DWORD PTR [ebp-0x44]
  4251b9:	mov    DWORD PTR [ebp-0x44],eax
  4251bc:	mov    eax,DWORD PTR [ebp-0x44]
  4251bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4251c2:	cmp    ecx,eax
  4251c4:	jb     0x4250c8
  4251ca:	mov    eax,DWORD PTR [ebp-0x34]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d0:	xor    eax,ebx
  4251d2:	add    eax,esi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4251da:	xor    ecx,ebx
  4251dc:	add    ecx,esi
  4251de:	or     eax,ecx
  4251e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e3:	xor    ecx,ebx
  4251e5:	add    eax,ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251ea:	xor    ecx,ebx
  4251ec:	add    eax,ecx
  4251ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f1:	lea    eax,[eax+ecx*1+0x64e5f0]
  4251f8:	jmp    0x425209
  4251fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4251fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425200:	xor    eax,ebx
  425202:	lea    eax,[eax+ecx*1+0x3272f8]
  425209:	mov    DWORD PTR [ebp-0xc],eax
  42520c:	mov    eax,DWORD PTR [ebp-0x2c]
  42520f:	xor    eax,ebx
  425211:	mov    ecx,0xffcd8d08
  425216:	sub    ecx,eax
  425218:	add    ecx,DWORD PTR [ebp-0x28]
  42521b:	mov    eax,DWORD PTR [ebp-0x2c]
  42521e:	mov    edx,DWORD PTR [ebp-0xc]
  425221:	xor    eax,ebx
  425223:	add    eax,esi
  425225:	imul   eax,edx
  425228:	cmp    eax,ecx
  42522a:	jbe    0x42503c
  425230:	mov    eax,DWORD PTR [ebp-0x10]
  425233:	mov    ecx,DWORD PTR [ebp-0x40]
  425236:	mov    eax,DWORD PTR [ebp+0x8]
  425239:	mov    edx,DWORD PTR [ebp-0x54]
  42523c:	mov    eax,DWORD PTR [eax+0x1e0]
  425242:	xor    edx,ebx
  425244:	add    edx,esi
  425246:	push   edx
  425247:	mov    edx,DWORD PTR [ebp-0x3c]
  42524a:	xor    edx,ebx
  42524c:	add    edx,esi
  42524e:	push   edx
  42524f:	push   ecx
  425250:	mov    DWORD PTR [ebp-0x30],ecx
  425253:	mov    ecx,DWORD PTR [ebp-0x10]
  425256:	xor    ecx,ebx
  425258:	add    ecx,esi
  42525a:	push   ecx
  42525b:	call   DWORD PTR [eax+0x14]
  42525e:	mov    edi,eax
  425260:	mov    eax,DWORD PTR [ebp-0x10]
  425263:	xor    eax,ebx
  425265:	add    eax,esi
  425267:	cmp    eax,edi
  425269:	je     0x4252c4
  42526b:	mov    eax,DWORD PTR [ebp-0x10]
  42526e:	jmp    0x425291
  425270:	mov    ecx,DWORD PTR [ebp-0x24]
  425273:	xor    eax,ebx
  425275:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f8]
  42527c:	mov    BYTE PTR [eax+edi*1+0x3272f8],cl
  425283:	mov    ecx,DWORD PTR [ebp-0x18]
  425286:	xor    ecx,ebx
  425288:	lea    eax,[ecx+eax*1+0x3272f8]
  42528f:	xor    eax,ebx
  425291:	mov    ecx,DWORD PTR [ebp-0x40]
  425294:	sub    ecx,esi
  425296:	xor    ecx,ebx
  425298:	cmp    eax,ecx
  42529a:	jne    0x425270
  42529c:	mov    eax,DWORD PTR [ebp+0x8]
  42529f:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a2:	mov    eax,DWORD PTR [eax+0x1e0]
  4252a8:	xor    ecx,ebx
  4252aa:	add    ecx,esi
  4252ac:	push   ecx
  4252ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4252b0:	xor    ecx,ebx
  4252b2:	add    ecx,esi
  4252b4:	push   ecx
  4252b5:	push   DWORD PTR [ebp-0x24]
  4252b8:	call   DWORD PTR [eax+0x18]
  4252bb:	mov    eax,DWORD PTR [ebp-0x30]
  4252be:	mov    DWORD PTR [ebp-0x24],edi
  4252c1:	mov    DWORD PTR [ebp-0x40],eax
  4252c4:	mov    edi,DWORD PTR [ebp-0x24]
  4252c7:	mov    eax,DWORD PTR [ebp-0x18]
  4252ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4252cd:	xor    eax,ebx
  4252cf:	mov    DWORD PTR [ebp-0x30],edi
  4252d2:	add    eax,esi
  4252d4:	mov    DWORD PTR [ebp-0x5c],0xbcd3cbd3
  4252db:	mov    DWORD PTR [ebp-0x58],0xc6d3bed3
  4252e2:	jmp    0x425316
  4252e4:	xor    ecx,ebx
  4252e6:	mov    dl,BYTE PTR [ebp+ecx*1+0x32729c]
  4252ed:	xor    dl,0x80
  4252f0:	add    dl,0x5
  4252f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4252f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f8]
  4252fe:	movzx  edx,dl
  425301:	cmp    ecx,edx
  425303:	jne    0x425320
  425305:	mov    ecx,DWORD PTR [ebp-0x18]
  425308:	mov    edx,DWORD PTR [ebp-0x3c]
  42530b:	xor    ecx,ebx
  42530d:	lea    ecx,[ecx+edx*1+0x3272f8]
  425314:	xor    ecx,ebx
  425316:	cmp    ecx,0xf89c85a1
  42531c:	jne    0x4252e4
  42531e:	jmp    0x425327
  425320:	mov    eax,DWORD PTR [ebp-0x10]
  425323:	xor    eax,ebx
  425325:	add    eax,esi
  425327:	mov    ecx,DWORD PTR [ebp-0x10]
  42532a:	xor    ecx,ebx
  42532c:	add    ecx,esi
  42532e:	cmp    ecx,eax
  425330:	je     0x4254a3
  425336:	mov    eax,DWORD PTR [edi+0x8]
  425339:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425340:	mov    DWORD PTR [ebp-0x3c],0xf89cc3c6
  425347:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  42534e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425355:	mov    DWORD PTR [ebp-0x14],eax
  425358:	mov    eax,DWORD PTR [ebp+0x8]
  42535b:	mov    ecx,DWORD PTR [ebp-0x20]
  42535e:	xor    ecx,ebx
  425360:	add    ecx,esi
  425362:	push   ecx
  425363:	mov    ecx,DWORD PTR [ebp-0x48]
  425366:	mov    eax,DWORD PTR [eax+0x1e0]
  42536c:	xor    ecx,ebx
  42536e:	add    ecx,esi
  425370:	push   ecx
  425371:	mov    ecx,DWORD PTR [ebp-0x3c]
  425374:	xor    ecx,ebx
  425376:	add    ecx,esi
  425378:	push   ecx
  425379:	mov    ecx,DWORD PTR [ebp-0xc]
  42537c:	xor    ecx,ebx
  42537e:	add    ecx,esi
  425380:	push   ecx
  425381:	call   DWORD PTR [eax+0x14]
  425384:	mov    edi,eax
  425386:	mov    eax,DWORD PTR [ebp+0x8]
  425389:	mov    ecx,DWORD PTR [ebp-0x20]
  42538c:	mov    eax,DWORD PTR [eax+0x1e0]
  425392:	xor    ecx,ebx
  425394:	add    ecx,esi
  425396:	push   ecx
  425397:	mov    ecx,DWORD PTR [ebp-0x48]
  42539a:	xor    ecx,ebx
  42539c:	add    ecx,esi
  42539e:	push   ecx
  42539f:	mov    ecx,DWORD PTR [ebp-0xc]
  4253a2:	push   DWORD PTR [ebp-0x14]
  4253a5:	xor    ecx,ebx
  4253a7:	add    ecx,esi
  4253a9:	push   ecx
  4253aa:	call   DWORD PTR [eax+0x14]
  4253ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4253b0:	xor    ecx,ebx
  4253b2:	add    ecx,esi
  4253b4:	mov    DWORD PTR [ebp-0x20],eax
  4253b7:	cmp    ecx,edi
  4253b9:	je     0x425746
  4253bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4253c2:	xor    ecx,ebx
  4253c4:	add    ecx,esi
  4253c6:	cmp    ecx,eax
  4253c8:	je     0x425746
  4253ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  4253d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4253dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4253df:	xor    cl,0xb1
  4253e2:	sub    cl,0x8
  4253e5:	mov    BYTE PTR [edi],cl
  4253e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ea:	xor    cl,0xb1
  4253ed:	sub    cl,0x8
  4253f0:	mov    BYTE PTR [edi+0x1],cl
  4253f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4253f6:	xor    cl,0xb1
  4253f9:	sub    cl,0x8
  4253fc:	mov    BYTE PTR [edi+0x2],cl
  4253ff:	and    DWORD PTR [ebp-0xc8],0x0
  425406:	and    DWORD PTR [ebp-0xdc],0x0
  42540d:	lea    ecx,[ebp-0xdc]
  425413:	push   ecx
  425414:	push   DWORD PTR [ebp-0x14]
  425417:	push   eax
  425418:	lea    eax,[ebp-0xc8]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp-0x30]
  425422:	push   DWORD PTR [eax+0xc]
  425425:	mov    eax,DWORD PTR [ebp-0x24]
  425428:	add    eax,0x10
  42542b:	push   eax
  42542c:	push   edi
  42542d:	call   0x4246d3
  425432:	mov    DWORD PTR [ebp-0x3c],eax
  425435:	mov    eax,DWORD PTR [ebp+0x8]
  425438:	mov    ecx,DWORD PTR [ebp-0x50]
  42543b:	mov    eax,DWORD PTR [eax+0x1e0]
  425441:	xor    ecx,ebx
  425443:	add    ecx,esi
  425445:	push   ecx
  425446:	mov    ecx,DWORD PTR [ebp-0xc]
  425449:	xor    ecx,ebx
  42544b:	add    ecx,esi
  42544d:	push   ecx
  42544e:	push   edi
  42544f:	call   DWORD PTR [eax+0x18]
  425452:	mov    eax,DWORD PTR [ebp-0x3c]
  425455:	add    eax,0xffcd8d08
  42545a:	xor    eax,ebx
  42545c:	cmp    eax,0xf89c85b9
  425461:	mov    eax,DWORD PTR [ebp+0x8]
  425464:	mov    eax,DWORD PTR [eax+0x1e0]
  42546a:	mov    ecx,DWORD PTR [ebp-0x50]
  42546d:	jne    0x425490
  42546f:	xor    ecx,ebx
  425471:	add    ecx,esi
  425473:	push   ecx
  425474:	mov    ecx,DWORD PTR [ebp-0xc]
  425477:	xor    ecx,ebx
  425479:	add    ecx,esi
  42547b:	push   ecx
  42547c:	push   DWORD PTR [ebp-0x24]
  42547f:	call   DWORD PTR [eax+0x18]
  425482:	mov    eax,DWORD PTR [ebp-0x20]
  425485:	mov    DWORD PTR [ebp-0x24],eax
  425488:	mov    eax,DWORD PTR [ebp-0x14]
  42548b:	mov    DWORD PTR [ebp-0x40],eax
  42548e:	jmp    0x4254a3
  425490:	xor    ecx,ebx
  425492:	add    ecx,esi
  425494:	push   ecx
  425495:	mov    ecx,DWORD PTR [ebp-0xc]
  425498:	xor    ecx,ebx
  42549a:	add    ecx,esi
  42549c:	push   ecx
  42549d:	push   DWORD PTR [ebp-0x20]
  4254a0:	call   DWORD PTR [eax+0x18]
  4254a3:	mov    eax,DWORD PTR [ebp-0x40]
  4254a6:	mov    DWORD PTR [ebp-0x38],eax
  4254a9:	mov    eax,DWORD PTR [ebp-0x24]
  4254ac:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4254b3:	mov    DWORD PTR [ebp-0x3c],eax
  4254b6:	mov    edi,0xf89c85b8
  4254bb:	mov    DWORD PTR [ebp-0x2c],edi
  4254be:	mov    eax,DWORD PTR [ebp-0x28]
  4254c1:	xor    eax,ebx
  4254c3:	add    eax,esi
  4254c5:	mov    DWORD PTR [ebp-0xc],eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x28]
  4254cb:	xor    eax,ebx
  4254cd:	add    eax,esi
  4254cf:	mov    DWORD PTR [ebp-0x14],eax
  4254d2:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4254d9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  4254e0:	mov    eax,DWORD PTR [ebp-0x28]
  4254e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4254e6:	xor    eax,ebx
  4254e8:	add    eax,esi
  4254ea:	cmp    ecx,eax
  4254ec:	je     0x4256e2
  4254f2:	jmp    0x4256be
  4254f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4254fa:	mov    eax,DWORD PTR [ebp-0x38]
  4254fd:	sub    eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	xor    edx,edx
  425508:	div    ecx
  42550a:	mov    DWORD PTR [ebp-0x14],eax
  42550d:	mov    eax,DWORD PTR [ebp-0x20]
  425510:	mov    ecx,DWORD PTR [ebp-0x14]
  425513:	xor    eax,ebx
  425515:	add    eax,esi
  425517:	cmp    ecx,eax
  425519:	jbe    0x425525
  42551b:	mov    eax,DWORD PTR [ebp-0x20]
  42551e:	xor    eax,ebx
  425520:	add    eax,esi
  425522:	mov    DWORD PTR [ebp-0x14],eax
  425525:	mov    eax,DWORD PTR [ebp-0x48]
  425528:	mov    ecx,DWORD PTR [ebp-0x14]
  42552b:	xor    eax,ebx
  42552d:	add    eax,esi
  42552f:	imul   eax,ecx
  425532:	mov    DWORD PTR [ebp-0x14],eax
  425535:	mov    eax,DWORD PTR [ebp-0x28]
  425538:	mov    ecx,DWORD PTR [ebp-0x14]
  42553b:	xor    eax,ebx
  42553d:	add    eax,esi
  42553f:	cmp    ecx,eax
  425541:	je     0x4256ac
  425547:	mov    eax,DWORD PTR [ebp-0x14]
  42554a:	mov    DWORD PTR [ebp-0x34],eax
  42554d:	mov    eax,DWORD PTR [ebp-0xc]
  425550:	add    eax,DWORD PTR [ebp-0x3c]
  425553:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  42555a:	mov    DWORD PTR [ebp-0x14],edi
  42555d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  425564:	mov    DWORD PTR [ebp-0x1c],eax
  425567:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42556e:	mov    DWORD PTR [ebp-0x8],edi
  425571:	mov    eax,DWORD PTR [ebp-0x4c]
  425574:	xor    eax,ebx
  425576:	add    eax,esi
  425578:	jmp    0x42566b
  42557d:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  425587:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  425591:	mov    eax,DWORD PTR [ebp-0x8]
  425594:	mov    ecx,DWORD PTR [ebp-0x18]
  425597:	xor    eax,ebx
  425599:	add    eax,esi
  42559b:	imul   eax,ecx
  42559e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255a1:	mov    al,BYTE PTR [eax+ecx*1]
  4255a4:	mov    BYTE PTR [ebp-0x1],al
  4255a7:	mov    eax,DWORD PTR [ebp-0x8]
  4255aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4255ad:	xor    eax,ebx
  4255af:	add    eax,esi
  4255b1:	imul   eax,ecx
  4255b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4255b7:	xor    ecx,ebx
  4255b9:	add    eax,ecx
  4255bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  4255c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4255cc:	xor    ecx,ebx
  4255ce:	lea    eax,[ecx+eax*1+0x3272f8]
  4255d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4255d9:	xor    ecx,eax
  4255db:	mov    BYTE PTR [ebp-0x1],cl
  4255de:	mov    al,BYTE PTR [ebp-0x1]
  4255e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4255e4:	mov    edx,DWORD PTR [ebp-0x18]
  4255e7:	xor    ecx,ebx
  4255e9:	add    ecx,esi
  4255eb:	imul   ecx,edx
  4255ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4255f1:	mov    BYTE PTR [ecx+edx*1],al
  4255f4:	mov    eax,DWORD PTR [ebp-0x8]
  4255f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4255fa:	xor    eax,ebx
  4255fc:	add    eax,esi
  4255fe:	imul   eax,ecx
  425601:	mov    ecx,DWORD PTR [ebp-0x1c]
  425604:	mov    al,BYTE PTR [eax+ecx*1]
  425607:	mov    BYTE PTR [ebp-0x1],al
  42560a:	mov    eax,DWORD PTR [ebp-0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x18]
  425610:	xor    eax,ebx
  425612:	add    eax,esi
  425614:	imul   eax,ecx
  425617:	mov    ecx,DWORD PTR [ebp-0x14]
  42561a:	xor    ecx,ebx
  42561c:	add    eax,ecx
  42561e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425621:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425629:	mov    ecx,DWORD PTR [ebp-0xd0]
  42562f:	xor    ecx,ebx
  425631:	lea    eax,[ecx+eax*1+0x3272f8]
  425638:	movzx  ecx,BYTE PTR [ebp-0x1]
  42563c:	xor    ecx,eax
  42563e:	mov    BYTE PTR [ebp-0x1],cl
  425641:	mov    al,BYTE PTR [ebp-0x1]
  425644:	mov    ecx,DWORD PTR [ebp-0x8]
  425647:	mov    edx,DWORD PTR [ebp-0x18]
  42564a:	xor    ecx,ebx
  42564c:	add    ecx,esi
  42564e:	imul   ecx,edx
  425651:	mov    edx,DWORD PTR [ebp-0x1c]
  425654:	mov    BYTE PTR [ecx+edx*1],al
  425657:	mov    eax,DWORD PTR [ebp-0x30]
  42565a:	mov    ecx,DWORD PTR [ebp-0x14]
  42565d:	xor    eax,ebx
  42565f:	xor    ecx,ebx
  425661:	add    eax,esi
  425663:	add    ecx,esi
  425665:	imul   eax,ecx
  425668:	add    eax,DWORD PTR [ebp-0x18]
  42566b:	mov    DWORD PTR [ebp-0x18],eax
  42566e:	mov    eax,DWORD PTR [ebp-0x18]
  425671:	mov    ecx,DWORD PTR [ebp-0x34]
  425674:	cmp    ecx,eax
  425676:	jb     0x42557d
  42567c:	mov    eax,DWORD PTR [ebp-0x14]
  42567f:	mov    ecx,DWORD PTR [ebp-0x34]
  425682:	xor    eax,ebx
  425684:	add    eax,esi
  425686:	imul   eax,ecx
  425689:	mov    ecx,DWORD PTR [ebp-0x4c]
  42568c:	xor    ecx,ebx
  42568e:	add    ecx,esi
  425690:	or     eax,ecx
  425692:	mov    ecx,DWORD PTR [ebp-0x2c]
  425695:	xor    ecx,ebx
  425697:	add    eax,ecx
  425699:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569c:	xor    ecx,ebx
  42569e:	add    eax,ecx
  4256a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4256a3:	lea    eax,[eax+ecx*1+0x64e5f0]
  4256aa:	jmp    0x4256bb
  4256ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4256af:	mov    ecx,DWORD PTR [ebp-0xc]
  4256b2:	xor    eax,ebx
  4256b4:	lea    eax,[eax+ecx*1+0x3272f8]
  4256bb:	mov    DWORD PTR [ebp-0xc],eax
  4256be:	mov    eax,DWORD PTR [ebp-0x2c]
  4256c1:	xor    eax,ebx
  4256c3:	mov    ecx,0xffcd8d08
  4256c8:	sub    ecx,eax
  4256ca:	add    ecx,DWORD PTR [ebp-0x38]
  4256cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4256d0:	mov    edx,DWORD PTR [ebp-0xc]
  4256d3:	xor    eax,ebx
  4256d5:	add    eax,esi
  4256d7:	imul   eax,edx
  4256da:	cmp    eax,ecx
  4256dc:	jbe    0x4254f7
  4256e2:	push   DWORD PTR [ebp+0x8]
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	push   DWORD PTR [eax+0x1cc]
  4256ee:	lea    eax,[ebp-0xd8]
  4256f4:	push   eax
  4256f5:	mov    eax,DWORD PTR [ebp+0x8]
  4256f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4256fe:	push   DWORD PTR [eax]
  425700:	mov    eax,DWORD PTR [ebp+0x8]
  425703:	mov    eax,DWORD PTR [eax+0x1c0]
  425709:	push   DWORD PTR [eax]
  42570b:	push   DWORD PTR [ebp-0x40]
  42570e:	push   DWORD PTR [ebp-0x24]
  425711:	call   0x4261a8
  425716:	mov    DWORD PTR [ebp-0x3c],eax
  425719:	mov    eax,DWORD PTR [ebp-0x10]
  42571c:	mov    ecx,DWORD PTR [ebp-0x24]
  42571f:	xor    eax,ebx
  425721:	add    eax,esi
  425723:	cmp    eax,ecx
  425725:	je     0x425746
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	mov    ecx,DWORD PTR [ebp-0x50]
  42572d:	mov    eax,DWORD PTR [eax+0x1e0]
  425733:	xor    ecx,ebx
  425735:	add    ecx,esi
  425737:	push   ecx
  425738:	mov    ecx,DWORD PTR [ebp-0x10]
  42573b:	xor    ecx,ebx
  42573d:	add    ecx,esi
  42573f:	push   ecx
  425740:	push   DWORD PTR [ebp-0x24]
  425743:	call   DWORD PTR [eax+0x18]
  425746:	pop    edi
  425747:	pop    esi
  425748:	pop    ebx
  425749:	leave  
  42574a:	ret    0x4
  42574d:	push   ebp
  42574e:	mov    ebp,esp
  425750:	push   ecx
  425751:	push   ecx
  425752:	lea    eax,[ebp-0x8]
  425755:	mov    DWORD PTR [ebp-0x4],eax
  425758:	push   esi
  425759:	mov    esi,DWORD PTR [ebp-0x4]
  42575c:	mov    eax,0xf881bacf
  425761:	mov    DWORD PTR [esi],eax
  425763:	mov    esi,DWORD PTR [ebp-0x8]
  425766:	cmp    esi,eax
  425768:	pop    esi
  425769:	jne    0x425773
  42576b:	mov    BYTE PTR [ecx+0xa],0x7b
  42576f:	mov    BYTE PTR [edx+0x8],0xce
  425773:	mov    BYTE PTR [edx+0xa],0x7b
  425777:	mov    BYTE PTR [ecx+0x2],0xe9
  42577b:	leave  
  42577c:	ret    
  42577d:	push   ebp
  42577e:	mov    ebp,esp
  425780:	push   ecx
  425781:	push   ecx
  425782:	lea    eax,[ebp-0x8]
  425785:	mov    DWORD PTR [ebp-0x4],eax
  425788:	mov    edx,DWORD PTR [ebp-0x4]
  42578b:	mov    eax,0xf88b0bd3
  425790:	mov    DWORD PTR [edx],eax
  425792:	mov    edx,DWORD PTR [ebp-0x8]
  425795:	cmp    edx,eax
  425797:	jne    0x4257a8
  425799:	mov    eax,DWORD PTR [ebp+0x8]
  42579c:	mov    BYTE PTR [ecx+0x9],0xef
  4257a0:	mov    BYTE PTR [eax+0x7],0xa6
  4257a4:	mov    BYTE PTR [ecx+0x6],0xee
  4257a8:	mov    BYTE PTR [ecx+0x3],0xdf
  4257ac:	leave  
  4257ad:	ret    0x4
  4257b0:	push   ebp
  4257b1:	mov    ebp,esp
  4257b3:	push   ecx
  4257b4:	push   ecx
  4257b5:	lea    eax,[ebp-0x8]
  4257b8:	mov    DWORD PTR [ebp-0x4],eax
  4257bb:	mov    edx,DWORD PTR [ebp-0x4]
  4257be:	mov    eax,0x7e0dacf
  4257c3:	mov    DWORD PTR [edx],eax
  4257c5:	mov    edx,DWORD PTR [ebp-0x8]
  4257c8:	cmp    edx,eax
  4257ca:	jne    0x4257d0
  4257cc:	mov    BYTE PTR [ecx+0x7],0xa6
  4257d0:	mov    eax,DWORD PTR [ebp+0x8]
  4257d3:	mov    BYTE PTR [ecx+0x1],0xe4
  4257d7:	mov    BYTE PTR [eax+0x9],0xcf
  4257db:	leave  
  4257dc:	ret    0x4
  4257df:	push   ebp
  4257e0:	mov    ebp,esp
  4257e2:	push   ecx
  4257e3:	push   ecx
  4257e4:	lea    eax,[ebp-0x8]
  4257e7:	mov    DWORD PTR [ebp-0x4],eax
  4257ea:	push   esi
  4257eb:	mov    esi,DWORD PTR [ebp-0x4]
  4257ee:	mov    eax,0x7060e3e
  4257f3:	mov    DWORD PTR [esi],eax
  4257f5:	mov    esi,DWORD PTR [ebp-0x8]
  4257f8:	cmp    esi,eax
  4257fa:	pop    esi
  4257fb:	jne    0x425807
  4257fd:	mov    BYTE PTR [edx+0x4],0xea
  425801:	mov    WORD PTR [ecx+0x3],0xeadf
  425807:	mov    BYTE PTR [edx],0xbe
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	push   ecx
  425810:	push   ecx
  425811:	lea    eax,[ebp-0x8]
  425814:	mov    DWORD PTR [ebp-0x4],eax
  425817:	mov    edx,DWORD PTR [ebp-0x4]
  42581a:	mov    eax,0xf8870b3f
  42581f:	mov    DWORD PTR [edx],eax
  425821:	mov    edx,DWORD PTR [ebp-0x8]
  425824:	cmp    edx,eax
  425826:	jne    0x425833
  425828:	mov    eax,DWORD PTR [ebp+0x8]
  42582b:	mov    BYTE PTR [ecx+0x8],0xee
  42582f:	mov    BYTE PTR [eax+0x1],0xe4
  425833:	mov    BYTE PTR [ecx+0x5],0xf2
  425837:	leave  
  425838:	ret    0x4
  42583b:	push   esi
  42583c:	mov    ecx,edi
  42583e:	call   0x42580c
  425843:	mov    edx,edi
  425845:	mov    ecx,esi
  425847:	mov    BYTE PTR [esi],0xde
  42584a:	call   0x4257df
  42584f:	push   esi
  425850:	mov    ecx,edi
  425852:	mov    BYTE PTR [esi+0x5],0xf2
  425856:	call   0x4257b0
  42585b:	push   esi
  42585c:	mov    BYTE PTR [esi+0x6],0xee
  425860:	call   0x42577d
  425865:	mov    BYTE PTR [esi+0x2],0xe9
  425869:	mov    edx,esi
  42586b:	jmp    0x42574d
  425870:	push   ebp
  425871:	mov    ebp,esp
  425873:	push   ecx
  425874:	mov    ecx,DWORD PTR [edx+0x194]
  42587a:	push   esi
  42587b:	mov    esi,DWORD PTR [ebp+0x8]
  42587e:	mov    esi,DWORD PTR [esi]
  425880:	mov    DWORD PTR [ecx],esi
  425882:	mov    ecx,DWORD PTR [edx+0x194]
  425888:	mov    ecx,DWORD PTR [ecx]
  42588a:	mov    esi,DWORD PTR [edx+0x190]
  425890:	mov    DWORD PTR [esi],ecx
  425892:	mov    eax,DWORD PTR [edx+0x194]
  425898:	mov    ecx,DWORD PTR [eax]
  42589a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42589d:	add    ecx,DWORD PTR [eax]
  42589f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4258ad:	xor    eax,0x75108b1
  4258b2:	add    eax,0x3272f8
  4258b7:	pop    esi
  4258b8:	test   ecx,eax
  4258ba:	je     0x4258c8
  4258bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4258c2:	mov    DWORD PTR [eax],0xf89c85b8
  4258c8:	leave  
  4258c9:	ret    0x4
  4258cc:	push   ebp
  4258cd:	mov    ebp,esp
  4258cf:	sub    esp,0x70
  4258d2:	and    DWORD PTR [ebp-0x20],0x0
  4258d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4258dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4258e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4258eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4258f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4258f9:	mov    eax,DWORD PTR [ebp+0x20]
  4258fc:	mov    eax,DWORD PTR [eax+0x194]
  425902:	mov    DWORD PTR [ebp-0xc],eax
  425905:	mov    eax,DWORD PTR [ebp+0x20]
  425908:	push   ebx
  425909:	push   esi
  42590a:	mov    esi,DWORD PTR [eax+0x190]
  425910:	mov    eax,DWORD PTR [ebp+0x20]
  425913:	mov    eax,DWORD PTR [eax+0x18c]
  425919:	mov    DWORD PTR [ebp-0x8],eax
  42591c:	mov    eax,DWORD PTR [eax]
  42591e:	push   edi
  42591f:	mov    DWORD PTR [ebp-0x4],esi
  425922:	test   eax,eax
  425924:	jne    0x425931
  425926:	push   DWORD PTR [ebp+0x1c]
  425929:	mov    edx,DWORD PTR [ebp+0x20]
  42592c:	call   0x425870
  425931:	mov    eax,DWORD PTR [esi]
  425933:	mov    ebx,DWORD PTR [esi]
  425935:	add    ebx,DWORD PTR [eax+0x3c]
  425938:	mov    eax,DWORD PTR [ebp+0xc]
  42593b:	mov    ecx,DWORD PTR [ebp-0x8]
  42593e:	mov    ecx,DWORD PTR [ecx]
  425940:	mov    esi,0x75108b1
  425945:	xor    eax,esi
  425947:	mov    edi,0x3272f8
  42594c:	add    eax,edi
  42594e:	cmp    eax,ecx
  425950:	jne    0x425b88
  425956:	mov    eax,DWORD PTR [ebp-0xc]
  425959:	mov    eax,DWORD PTR [eax]
  42595b:	mov    DWORD PTR [ebp-0x10],eax
  42595e:	mov    eax,DWORD PTR [ebx+0x50]
  425961:	mov    DWORD PTR [ebp-0x68],eax
  425964:	mov    eax,DWORD PTR [ebp-0x18]
  425967:	xor    eax,esi
  425969:	add    eax,edi
  42596b:	mov    DWORD PTR [ebp-0x64],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x14]
  425971:	and    DWORD PTR [ebp-0x6c],0x0
  425975:	xor    eax,esi
  425977:	add    eax,edi
  425979:	mov    DWORD PTR [ebp-0x60],eax
  42597c:	lea    eax,[ebp-0x70]
  42597f:	push   eax
  425980:	mov    eax,DWORD PTR [ebp+0x8]
  425983:	xor    eax,esi
  425985:	add    eax,edi
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x20]
  42598b:	add    eax,0xaa
  425990:	push   eax
  425991:	mov    eax,DWORD PTR [ebp+0x20]
  425994:	mov    eax,DWORD PTR [eax+0x198]
  42599a:	mov    DWORD PTR [ebp-0x70],0x4
  4259a1:	push   DWORD PTR [eax]
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	call   eax
  4259a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4259ab:	mov    ecx,DWORD PTR [ecx]
  4259ad:	mov    edx,DWORD PTR [ebp-0x8]
  4259b0:	mov    DWORD PTR [ebp-0x6c],eax
  4259b3:	mov    DWORD PTR [ebp+0x1c],eax
  4259b6:	mov    DWORD PTR [edx],ecx
  4259b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4259bb:	mov    DWORD PTR [ecx],eax
  4259bd:	mov    eax,DWORD PTR [ebx+0x50]
  4259c0:	mov    DWORD PTR [ebp-0x68],eax
  4259c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	mov    DWORD PTR [ebp-0x64],eax
  4259cd:	lea    eax,[ebp-0x20]
  4259d0:	mov    DWORD PTR [ebp-0x60],eax
  4259d3:	lea    eax,[ebp-0x70]
  4259d6:	push   eax
  4259d7:	mov    eax,DWORD PTR [ebp+0x8]
  4259da:	xor    eax,esi
  4259dc:	add    eax,edi
  4259de:	push   eax
  4259df:	mov    eax,DWORD PTR [ebp+0x20]
  4259e2:	add    eax,0xee
  4259e7:	push   eax
  4259e8:	mov    eax,DWORD PTR [ebp+0x20]
  4259eb:	mov    eax,DWORD PTR [eax+0x198]
  4259f1:	mov    DWORD PTR [ebp-0x70],0x4
  4259f8:	push   DWORD PTR [eax]
  4259fa:	mov    eax,DWORD PTR [ebp+0x10]
  4259fd:	call   eax
  4259ff:	test   eax,eax
  425a01:	je     0x425a26
  425a03:	and    DWORD PTR [ebp+0xc],0x0
  425a07:	cmp    DWORD PTR [ebx+0x50],0x0
  425a0b:	jbe    0x425a26
  425a0d:	mov    eax,DWORD PTR [ebp+0x1c]
  425a10:	mov    ecx,DWORD PTR [ebp-0x10]
  425a13:	sub    ecx,eax
  425a15:	mov    dl,BYTE PTR [ecx+eax*1]
  425a18:	inc    DWORD PTR [ebp+0xc]
  425a1b:	mov    BYTE PTR [eax],dl
  425a1d:	mov    edx,DWORD PTR [ebp+0xc]
  425a20:	inc    eax
  425a21:	cmp    edx,DWORD PTR [ebx+0x50]
  425a24:	jb     0x425a15
  425a26:	mov    edx,DWORD PTR [ebp+0x1c]
  425a29:	mov    ecx,DWORD PTR [edx+0x3c]
  425a2c:	add    ecx,edx
  425a2e:	mov    eax,DWORD PTR [ecx+0xa0]
  425a34:	mov    ebx,DWORD PTR [ecx+0x28]
  425a37:	add    eax,edx
  425a39:	sub    edx,DWORD PTR [ebp-0x10]
  425a3c:	add    ebx,DWORD PTR [ebp+0x1c]
  425a3f:	mov    DWORD PTR [ebp+0xc],edx
  425a42:	mov    DWORD PTR [ebp-0x2c],ecx
  425a45:	mov    DWORD PTR [ebp-0x14],ebx
  425a48:	mov    DWORD PTR [ebp-0x8],0x0
  425a4f:	jmp    0x425acb
  425a51:	add    edx,0xfffffff8
  425a54:	shr    edx,1
  425a56:	mov    DWORD PTR [ebp-0x18],edx
  425a59:	je     0x425ab7
  425a5b:	lea    edx,[eax+0x8]
  425a5e:	mov    DWORD PTR [ebp-0x4],edx
  425a61:	mov    edx,DWORD PTR [ebp-0x18]
  425a64:	mov    DWORD PTR [ebp-0x18],edx
  425a67:	mov    edx,DWORD PTR [ebp-0x4]
  425a6a:	movzx  edx,WORD PTR [edx]
  425a6d:	mov    DWORD PTR [ebp-0x24],edx
  425a70:	and    edx,0xfff
  425a76:	mov    DWORD PTR [ebp-0x28],edx
  425a79:	mov    edx,DWORD PTR [ebp-0x24]
  425a7c:	shr    edx,0xc
  425a7f:	add    edx,0xffcd8d08
  425a85:	xor    edx,esi
  425a87:	cmp    edx,0xf89c85ba
  425a8d:	jne    0x425aae
  425a8f:	mov    edx,DWORD PTR [ebp-0x28]
  425a92:	add    edx,DWORD PTR [ebp+0x1c]
  425a95:	mov    ebx,DWORD PTR [eax]
  425a97:	cmp    DWORD PTR [ebx+edx*1],0x0
  425a9b:	je     0x425aab
  425a9d:	mov    ecx,DWORD PTR [ebp+0xc]
  425aa0:	add    ecx,DWORD PTR [ebx+edx*1]
  425aa3:	mov    ebx,DWORD PTR [eax]
  425aa5:	mov    DWORD PTR [edx+ebx*1],ecx
  425aa8:	mov    ecx,DWORD PTR [ebp-0x2c]
  425aab:	mov    ebx,DWORD PTR [ebp-0x14]
  425aae:	add    DWORD PTR [ebp-0x4],0x2
  425ab2:	dec    DWORD PTR [ebp-0x18]
  425ab5:	jne    0x425a67
  425ab7:	mov    edx,DWORD PTR [ebp-0xc]
  425aba:	add    DWORD PTR [ebp-0x8],edx
  425abd:	mov    edx,DWORD PTR [ebp-0x8]
  425ac0:	cmp    edx,DWORD PTR [ecx+0xa4]
  425ac6:	jae    0x425ad9
  425ac8:	add    eax,DWORD PTR [ebp-0xc]
  425acb:	mov    edx,DWORD PTR [eax+0x4]
  425ace:	mov    DWORD PTR [ebp-0xc],edx
  425ad1:	test   edx,edx
  425ad3:	jne    0x425a51
  425ad9:	mov    eax,DWORD PTR [ebp-0x10]
  425adc:	mov    DWORD PTR [ebp-0x6c],eax
  425adf:	mov    DWORD PTR [ebp-0x70],0x4
  425ae6:	mov    eax,DWORD PTR [ecx+0x50]
  425ae9:	mov    DWORD PTR [ebp-0x68],eax
  425aec:	mov    eax,DWORD PTR [ebp-0x1c]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	mov    DWORD PTR [ebp-0x64],eax
  425af6:	lea    eax,[ebp-0x20]
  425af9:	mov    DWORD PTR [ebp-0x60],eax
  425afc:	lea    eax,[ebp-0x70]
  425aff:	push   eax
  425b00:	mov    eax,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	push   eax
  425b08:	mov    eax,DWORD PTR [ebp+0x20]
  425b0b:	add    eax,0xee
  425b10:	push   eax
  425b11:	mov    eax,DWORD PTR [ebp+0x20]
  425b14:	mov    eax,DWORD PTR [eax+0x198]
  425b1a:	push   DWORD PTR [eax]
  425b1c:	mov    eax,DWORD PTR [ebp+0x10]
  425b1f:	call   eax
  425b21:	mov    eax,DWORD PTR [ebp+0x20]
  425b24:	mov    eax,DWORD PTR [eax+0x180]
  425b2a:	add    eax,DWORD PTR [ebp+0xc]
  425b2d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b30:	push   DWORD PTR [ebp+0x18]
  425b33:	mov    DWORD PTR [eax],ecx
  425b35:	push   DWORD PTR [ebp+0x14]
  425b38:	push   DWORD PTR [ebp+0x1c]
  425b3b:	call   ebx
  425b3d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b40:	add    ecx,DWORD PTR [ebp+0x20]
  425b43:	lea    eax,[ebp+0x4]
  425b46:	mov    DWORD PTR [ebp+0x20],ecx
  425b49:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4f:	mov    edx,DWORD PTR [ecx+0x190]
  425b55:	mov    ecx,DWORD PTR [ebp+0x20]
  425b58:	mov    ecx,DWORD PTR [ecx+0x18c]
  425b5e:	mov    esi,DWORD PTR [ecx]
  425b60:	cmp    DWORD PTR [eax],esi
  425b62:	jb     0x425b83
  425b64:	mov    esi,DWORD PTR [edx]
  425b66:	mov    edi,DWORD PTR [edx]
  425b68:	mov    esi,DWORD PTR [esi+0x3c]
  425b6b:	lea    esi,[edi+esi*1+0x50]
  425b6f:	mov    edi,DWORD PTR [ecx]
  425b71:	add    edi,DWORD PTR [esi]
  425b73:	cmp    DWORD PTR [eax],edi
  425b75:	jae    0x425b83
  425b77:	mov    esi,DWORD PTR [ecx]
  425b79:	mov    ecx,DWORD PTR [eax]
  425b7b:	mov    edx,DWORD PTR [edx]
  425b7d:	sub    ecx,esi
  425b7f:	add    edx,ecx
  425b81:	mov    DWORD PTR [eax],edx
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	jmp    0x425b8a
  425b88:	xor    eax,eax
  425b8a:	pop    edi
  425b8b:	pop    esi
  425b8c:	pop    ebx
  425b8d:	leave  
  425b8e:	ret    0x1c
  425b91:	push   ebp
  425b92:	mov    ebp,esp
  425b94:	sub    esp,0x1c
  425b97:	push   esi
  425b98:	mov    esi,eax
  425b9a:	mov    eax,DWORD PTR [ecx+0x190]
  425ba0:	cmp    DWORD PTR [eax],0x0
  425ba3:	je     0x425cb3
  425ba9:	test   edx,edx
  425bab:	je     0x425cb3
  425bb1:	test   esi,esi
  425bb3:	je     0x425cb3
  425bb9:	mov    eax,DWORD PTR [esi+0x88]
  425bbf:	test   eax,eax
  425bc1:	je     0x425cae
  425bc7:	cmp    DWORD PTR [esi+0x8c],0x10
  425bce:	je     0x425cae
  425bd4:	cmp    DWORD PTR [esi+0x34],edx
  425bd7:	je     0x425cae
  425bdd:	mov    esi,DWORD PTR [ecx+0x18c]
  425be3:	and    DWORD PTR [ebp-0x10],0x0
  425be7:	mov    ecx,edx
  425be9:	sub    ecx,DWORD PTR [esi]
  425beb:	add    eax,edx
  425bed:	movzx  edx,WORD PTR [eax+0xc]
  425bf1:	mov    DWORD PTR [ebp-0x1c],ecx
  425bf4:	movzx  ecx,WORD PTR [eax+0xe]
  425bf8:	add    ecx,edx
  425bfa:	je     0x425cae
  425c00:	lea    ecx,[eax+0x14]
  425c03:	push   ebx
  425c04:	mov    DWORD PTR [ebp-0x18],ecx
  425c07:	mov    esi,0x7fffffff
  425c0c:	push   edi
  425c0d:	test   DWORD PTR [ecx],esi
  425c0f:	je     0x425c90
  425c11:	mov    edx,DWORD PTR [ecx]
  425c13:	and    DWORD PTR [ebp-0xc],0x0
  425c17:	and    edx,esi
  425c19:	add    edx,eax
  425c1b:	movzx  edi,WORD PTR [edx+0xe]
  425c1f:	movzx  ebx,WORD PTR [edx+0xc]
  425c23:	add    edi,ebx
  425c25:	je     0x425c90
  425c27:	lea    ecx,[edx+0x14]
  425c2a:	mov    DWORD PTR [ebp-0x14],ecx
  425c2d:	test   DWORD PTR [ecx],esi
  425c2f:	je     0x425c72
  425c31:	mov    ecx,DWORD PTR [ecx]
  425c33:	and    DWORD PTR [ebp-0x8],0x0
  425c37:	and    ecx,esi
  425c39:	add    ecx,eax
  425c3b:	movzx  edi,WORD PTR [ecx+0xe]
  425c3f:	movzx  ebx,WORD PTR [ecx+0xc]
  425c43:	add    edi,ebx
  425c45:	je     0x425c72
  425c47:	lea    edi,[ecx+0x14]
  425c4a:	mov    DWORD PTR [ebp-0x4],edi
  425c4d:	mov    edi,DWORD PTR [ebp-0x4]
  425c50:	mov    edi,DWORD PTR [edi]
  425c52:	test   edi,edi
  425c54:	je     0x425c5c
  425c56:	mov    ebx,DWORD PTR [ebp-0x1c]
  425c59:	add    DWORD PTR [edi+eax*1],ebx
  425c5c:	movzx  edi,WORD PTR [ecx+0xe]
  425c60:	movzx  ebx,WORD PTR [ecx+0xc]
  425c64:	inc    DWORD PTR [ebp-0x8]
  425c67:	add    DWORD PTR [ebp-0x4],0x8
  425c6b:	add    edi,ebx
  425c6d:	cmp    DWORD PTR [ebp-0x8],edi
  425c70:	jb     0x425c4d
  425c72:	movzx  edi,WORD PTR [edx+0xe]
  425c76:	movzx  ebx,WORD PTR [edx+0xc]
  425c7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c7d:	inc    DWORD PTR [ebp-0xc]
  425c80:	add    ecx,0x8
  425c83:	add    edi,ebx
  425c85:	mov    DWORD PTR [ebp-0x14],ecx
  425c88:	cmp    DWORD PTR [ebp-0xc],edi
  425c8b:	jb     0x425c2d
  425c8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425c90:	movzx  edx,WORD PTR [eax+0xe]
  425c94:	movzx  edi,WORD PTR [eax+0xc]
  425c98:	inc    DWORD PTR [ebp-0x10]
  425c9b:	add    ecx,0x8
  425c9e:	add    edx,edi
  425ca0:	mov    DWORD PTR [ebp-0x18],ecx
  425ca3:	cmp    DWORD PTR [ebp-0x10],edx
  425ca6:	jb     0x425c0d
  425cac:	pop    edi
  425cad:	pop    ebx
  425cae:	xor    eax,eax
  425cb0:	inc    eax
  425cb1:	jmp    0x425cb5
  425cb3:	xor    eax,eax
  425cb5:	pop    esi
  425cb6:	leave  
  425cb7:	ret    
  425cb8:	push   ebp
  425cb9:	mov    ebp,esp
  425cbb:	mov    ecx,DWORD PTR [ecx+0x190]
  425cc1:	mov    eax,DWORD PTR [ebp+0xc]
  425cc4:	sub    esp,0x10
  425cc7:	push   ebx
  425cc8:	xor    ebx,ebx
  425cca:	push   esi
  425ccb:	push   edi
  425ccc:	cmp    DWORD PTR [ecx],ebx
  425cce:	je     0x425d56
  425cd4:	cmp    eax,ebx
  425cd6:	je     0x425d56
  425cd8:	cmp    DWORD PTR [eax+0x78],ebx
  425cdb:	jne    0x425ce2
  425cdd:	xor    eax,eax
  425cdf:	inc    eax
  425ce0:	jmp    0x425d58
  425ce2:	mov    eax,DWORD PTR [eax+0x78]
  425ce5:	add    eax,DWORD PTR [ebp+0x8]
  425ce8:	mov    ecx,DWORD PTR [eax+0x1c]
  425ceb:	mov    edx,DWORD PTR [eax+0x24]
  425cee:	mov    esi,DWORD PTR [eax+0x14]
  425cf1:	mov    edi,DWORD PTR [eax+0x18]
  425cf4:	add    ecx,DWORD PTR [ebp+0x8]
  425cf7:	add    edx,DWORD PTR [ebp+0x8]
  425cfa:	mov    DWORD PTR [ebp-0x4],esi
  425cfd:	cmp    esi,edi
  425cff:	ja     0x425d04
  425d01:	mov    DWORD PTR [ebp-0x4],edi
  425d04:	mov    DWORD PTR [ebp-0x8],ebx
  425d07:	cmp    DWORD PTR [ebp-0x4],ebx
  425d0a:	jbe    0x425cdd
  425d0c:	cmp    ebx,DWORD PTR [eax+0x14]
  425d0f:	jae    0x425d17
  425d11:	movzx  esi,WORD PTR [edx+ebx*2]
  425d15:	jmp    0x425d19
  425d17:	mov    esi,ebx
  425d19:	lea    esi,[ecx+esi*4]
  425d1c:	mov    edi,DWORD PTR [esi]
  425d1e:	test   edi,edi
  425d20:	je     0x425d4b
  425d22:	add    edi,DWORD PTR [ebp+0x8]
  425d25:	mov    DWORD PTR [ebp-0x10],edi
  425d28:	cmp    edi,eax
  425d2a:	jbe    0x425d3c
  425d2c:	mov    ebx,DWORD PTR [ebp+0xc]
  425d2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  425d32:	add    ebx,eax
  425d34:	cmp    edi,ebx
  425d36:	jae    0x425d3c
  425d38:	mov    esi,DWORD PTR [esi]
  425d3a:	jmp    0x425d44
  425d3c:	sub    edi,DWORD PTR [ebp+0x8]
  425d3f:	mov    DWORD PTR [esi],edi
  425d41:	mov    esi,DWORD PTR [ebp-0x10]
  425d44:	test   esi,esi
  425d46:	je     0x425d56
  425d48:	mov    ebx,DWORD PTR [ebp-0x8]
  425d4b:	inc    ebx
  425d4c:	mov    DWORD PTR [ebp-0x8],ebx
  425d4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425d52:	jb     0x425d0c
  425d54:	jmp    0x425cdd
  425d56:	xor    eax,eax
  425d58:	pop    edi
  425d59:	pop    esi
  425d5a:	pop    ebx
  425d5b:	leave  
  425d5c:	ret    0x8
  425d5f:	push   ebp
  425d60:	mov    ebp,esp
  425d62:	sub    esp,0x2c
  425d65:	mov    edx,0xf89c85b9
  425d6a:	mov    DWORD PTR [ebp-0x4],edx
  425d6d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  425d74:	mov    eax,DWORD PTR [ebp-0x4]
  425d77:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7a:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ebp-0x4]
  425d83:	mov    ecx,DWORD PTR [ebp-0x4]
  425d86:	push   ebx
  425d87:	mov    ebx,DWORD PTR [ebp+0x10]
  425d8a:	push   esi
  425d8b:	mov    esi,0x75108b1
  425d90:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  425d97:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9a:	mov    ebx,DWORD PTR [ebx+0x190]
  425da0:	push   edi
  425da1:	mov    edi,0x3272f8
  425da6:	xor    ecx,esi
  425da8:	xor    eax,esi
  425daa:	add    eax,edi
  425dac:	add    ecx,edi
  425dae:	mov    DWORD PTR [ebp-0x18],eax
  425db1:	cmp    ecx,DWORD PTR [ebx]
  425db3:	je     0x426034
  425db9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dbc:	mov    ecx,DWORD PTR [ebp+0xc]
  425dbf:	xor    ebx,esi
  425dc1:	add    ebx,edi
  425dc3:	cmp    ebx,ecx
  425dc5:	je     0x426034
  425dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x80]
  425dd4:	xor    ebx,esi
  425dd6:	add    ebx,edi
  425dd8:	cmp    ecx,ebx
  425dda:	je     0x42602f
  425de0:	add    ecx,DWORD PTR [ebp+0x8]
  425de3:	mov    DWORD PTR [ebp-0x2c],ecx
  425de6:	mov    ebx,edx
  425de8:	xor    ebx,esi
  425dea:	add    ebx,edi
  425dec:	mov    DWORD PTR [ebp-0x10],ebx
  425def:	mov    ebx,DWORD PTR [ebp-0x10]
  425df2:	cmp    ebx,edx
  425df4:	je     0x425e08
  425df6:	mov    edx,DWORD PTR [ebp-0x10]
  425df9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dfc:	imul   edx,edx,0x14
  425dff:	xor    ebx,esi
  425e01:	add    ebx,edi
  425e03:	cmp    DWORD PTR [edx+ecx*1],ebx
  425e06:	jne    0x425e1f
  425e08:	mov    edx,DWORD PTR [ebp-0x10]
  425e0b:	mov    ebx,DWORD PTR [ebp-0x4]
  425e0e:	imul   edx,edx,0x14
  425e11:	xor    ebx,esi
  425e13:	add    ebx,edi
  425e15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425e19:	je     0x426021
  425e1f:	mov    eax,DWORD PTR [ebp-0x4]
  425e22:	mov    ebx,DWORD PTR [ebp-0x4]
  425e25:	mov    eax,DWORD PTR [ebp-0x10]
  425e28:	imul   eax,eax,0x14
  425e2b:	add    eax,ecx
  425e2d:	mov    ecx,DWORD PTR [eax+0x10]
  425e30:	add    ecx,DWORD PTR [ebp+0x8]
  425e33:	xor    ebx,esi
  425e35:	mov    DWORD PTR [ebp-0x1c],ecx
  425e38:	mov    ecx,DWORD PTR [ebp-0x4]
  425e3b:	mov    edx,DWORD PTR [ebp-0x4]
  425e3e:	xor    ecx,esi
  425e40:	add    ecx,edi
  425e42:	xor    edx,esi
  425e44:	mov    DWORD PTR [ebp-0x24],ecx
  425e47:	mov    ecx,DWORD PTR [eax]
  425e49:	add    edx,edi
  425e4b:	add    ebx,edi
  425e4d:	cmp    ecx,edx
  425e4f:	je     0x425e57
  425e51:	add    ecx,DWORD PTR [ebp+0x8]
  425e54:	mov    DWORD PTR [ebp-0x24],ecx
  425e57:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5a:	xor    ecx,esi
  425e5c:	add    ecx,DWORD PTR [eax+0xc]
  425e5f:	mov    eax,DWORD PTR [ebp+0x8]
  425e62:	lea    eax,[ecx+eax*1+0x3272f8]
  425e69:	mov    DWORD PTR [ebp+0xc],eax
  425e6c:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  425e73:	mov    eax,DWORD PTR [ebp+0x10]
  425e76:	push   DWORD PTR [ebp+0xc]
  425e79:	mov    eax,DWORD PTR [eax+0x1e0]
  425e7f:	call   DWORD PTR [eax]
  425e81:	mov    ecx,DWORD PTR [ebp-0x4]
  425e84:	xor    ecx,esi
  425e86:	add    ecx,edi
  425e88:	mov    DWORD PTR [ebp-0xc],eax
  425e8b:	cmp    ecx,eax
  425e8d:	jne    0x425ea1
  425e8f:	mov    eax,DWORD PTR [ebp+0x10]
  425e92:	push   DWORD PTR [ebp+0xc]
  425e95:	mov    eax,DWORD PTR [eax+0x1e0]
  425e9b:	call   DWORD PTR [eax+0xc]
  425e9e:	mov    DWORD PTR [ebp-0xc],eax
  425ea1:	mov    DWORD PTR [ebp-0x20],0x7f661b30
  425ea8:	mov    DWORD PTR [ebp-0x20],0xf89c9840
  425eaf:	mov    eax,DWORD PTR [ebp-0x4]
  425eb2:	xor    eax,esi
  425eb4:	add    eax,edi
  425eb6:	cmp    eax,DWORD PTR [ebp-0xc]
  425eb9:	jne    0x425ede
  425ebb:	mov    eax,DWORD PTR [ebp-0x8]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x20]
  425ec1:	xor    eax,esi
  425ec3:	xor    ecx,esi
  425ec5:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ecc:	mov    eax,DWORD PTR [ebp+0x10]
  425ecf:	mov    eax,DWORD PTR [eax+0x1e0]
  425ed5:	add    ecx,edi
  425ed7:	imul   ecx,ebx
  425eda:	push   ecx
  425edb:	call   DWORD PTR [eax+0x24]
  425ede:	mov    eax,DWORD PTR [ebp-0x4]
  425ee1:	xor    eax,esi
  425ee3:	add    eax,edi
  425ee5:	cmp    eax,DWORD PTR [ebp-0xc]
  425ee8:	jne    0x425ef9
  425eea:	mov    eax,DWORD PTR [ebp-0x28]
  425eed:	xor    eax,esi
  425eef:	add    eax,edi
  425ef1:	cmp    ebx,eax
  425ef3:	jbe    0x425e73
  425ef9:	mov    eax,DWORD PTR [ebp-0x4]
  425efc:	xor    eax,esi
  425efe:	add    eax,edi
  425f00:	cmp    eax,DWORD PTR [ebp-0xc]
  425f03:	jne    0x425f1c
  425f05:	mov    eax,DWORD PTR [ebp-0x8]
  425f08:	mov    ecx,DWORD PTR [ebp-0x18]
  425f0b:	xor    eax,esi
  425f0d:	lea    eax,[ecx+eax*1+0x3272f8]
  425f14:	mov    DWORD PTR [ebp-0x18],eax
  425f17:	jmp    0x42600b
  425f1c:	mov    DWORD PTR [ebp-0x14],0x1121b31
  425f23:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  425f2a:	mov    ebx,DWORD PTR [ebp-0x4]
  425f2d:	xor    ebx,esi
  425f2f:	add    ebx,edi
  425f31:	jmp    0x425ff8
  425f36:	mov    eax,DWORD PTR [ebp-0x4]
  425f39:	xor    eax,esi
  425f3b:	add    eax,edi
  425f3d:	mov    DWORD PTR [ebp-0x14],eax
  425f40:	mov    eax,DWORD PTR [ebp-0x4]
  425f43:	xor    eax,esi
  425f45:	add    eax,edi
  425f47:	mov    DWORD PTR [ebp+0xc],eax
  425f4a:	mov    ecx,DWORD PTR [ebp-0x4]
  425f4d:	mov    eax,DWORD PTR [ebp-0x24]
  425f50:	xor    ecx,esi
  425f52:	add    ecx,edi
  425f54:	cmp    ecx,eax
  425f56:	je     0x425f5e
  425f58:	mov    eax,DWORD PTR [eax+ebx*4]
  425f5b:	mov    DWORD PTR [ebp-0x14],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  425f61:	mov    eax,DWORD PTR [eax+ebx*4]
  425f64:	mov    DWORD PTR [ebp+0xc],eax
  425f67:	mov    eax,DWORD PTR [ebp-0x4]
  425f6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425f6d:	xor    eax,esi
  425f6f:	add    eax,edi
  425f71:	cmp    eax,ecx
  425f73:	je     0x425f9e
  425f75:	mov    eax,DWORD PTR [ebp-0x4]
  425f78:	mov    ecx,DWORD PTR [ebp-0x14]
  425f7b:	xor    eax,esi
  425f7d:	add    eax,edi
  425f7f:	shr    ecx,0x1f
  425f82:	cmp    eax,ecx
  425f84:	je     0x425f9e
  425f86:	mov    ecx,DWORD PTR [ebp-0x14]
  425f89:	mov    eax,DWORD PTR [ebp+0x10]
  425f8c:	mov    eax,DWORD PTR [eax+0x1e0]
  425f92:	movzx  ecx,cx
  425f95:	push   ecx
  425f96:	push   DWORD PTR [ebp-0xc]
  425f99:	call   DWORD PTR [eax+0x8]
  425f9c:	jmp    0x425fb7
  425f9e:	mov    eax,DWORD PTR [ebp+0xc]
  425fa1:	add    eax,DWORD PTR [ebp+0x8]
  425fa4:	mov    ecx,DWORD PTR [ebp+0x10]
  425fa7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425fad:	add    eax,0x2
  425fb0:	push   eax
  425fb1:	push   DWORD PTR [ebp-0xc]
  425fb4:	call   DWORD PTR [ecx+0x8]
  425fb7:	mov    DWORD PTR [ebp+0xc],eax
  425fba:	mov    eax,DWORD PTR [ebp-0x4]
  425fbd:	mov    ecx,DWORD PTR [ebp+0xc]
  425fc0:	xor    eax,esi
  425fc2:	add    eax,edi
  425fc4:	cmp    eax,ecx
  425fc6:	mov    eax,DWORD PTR [ebp-0x8]
  425fc9:	jne    0x425fdc
  425fcb:	mov    ecx,DWORD PTR [ebp-0x18]
  425fce:	xor    eax,esi
  425fd0:	lea    eax,[ecx+eax*1+0x3272f8]
  425fd7:	mov    DWORD PTR [ebp-0x18],eax
  425fda:	jmp    0x425fec
  425fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  425fdf:	xor    eax,esi
  425fe1:	add    eax,edi
  425fe3:	imul   eax,ecx
  425fe6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe9:	mov    DWORD PTR [ecx+ebx*4],eax
  425fec:	mov    eax,DWORD PTR [ebp-0x8]
  425fef:	xor    eax,esi
  425ff1:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,esi
  426000:	add    eax,edi
  426002:	cmp    DWORD PTR [ecx+ebx*4],eax
  426005:	jne    0x425f36
  42600b:	mov    edx,DWORD PTR [ebp-0x10]
  42600e:	mov    eax,DWORD PTR [ebp-0x18]
  426011:	mov    ecx,DWORD PTR [ebp-0x2c]
  426014:	sub    edx,0x3272f7
  42601a:	xor    edx,esi
  42601c:	jmp    0x425de6
  426021:	mov    ecx,DWORD PTR [ebp-0x4]
  426024:	xor    ecx,esi
  426026:	add    ecx,edi
  426028:	cmp    eax,ecx
  42602a:	mov    eax,DWORD PTR [ebp-0x4]
  42602d:	jne    0x426037
  42602f:	mov    eax,DWORD PTR [ebp-0x8]
  426032:	jmp    0x426037
  426034:	mov    eax,DWORD PTR [ebp-0x4]
  426037:	xor    eax,esi
  426039:	add    eax,edi
  42603b:	pop    edi
  42603c:	pop    esi
  42603d:	pop    ebx
  42603e:	leave  
  42603f:	ret    0xc
  426042:	push   ebp
  426043:	mov    ebp,esp
  426045:	sub    esp,0x28
  426048:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42604f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426056:	mov    eax,DWORD PTR [ebp+0xc]
  426059:	mov    DWORD PTR [ebp+0xc],eax
  42605c:	push   esi
  42605d:	mov    eax,eax
  42605f:	mov    eax,DWORD PTR [ebp-0x4]
  426062:	mov    esi,DWORD PTR [ebp+0x8]
  426065:	mov    ecx,0x75108b1
  42606a:	xor    eax,ecx
  42606c:	mov    edx,0x3272f8
  426071:	add    eax,edx
  426073:	cmp    esi,eax
  426075:	je     0x42619c
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    esi,DWORD PTR [ebp+0x8]
  426081:	add    esi,DWORD PTR [eax+0x3c]
  426084:	push   edi
  426085:	mov    DWORD PTR [ebp+0xc],esi
  426088:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42608f:	mov    eax,DWORD PTR [ebp-0x1c]
  426092:	mov    esi,DWORD PTR [ebp-0x4]
  426095:	mov    edi,DWORD PTR [ebp+0xc]
  426098:	xor    esi,ecx
  42609a:	xor    eax,ecx
  42609c:	add    esi,edx
  42609e:	cmp    DWORD PTR [edi+eax*8+0x1939838],esi
  4260a5:	je     0x426196
  4260ab:	mov    esi,DWORD PTR [ebp+0xc]
  4260ae:	mov    eax,DWORD PTR [ebp+0x8]
  4260b1:	add    eax,DWORD PTR [esi+0xa0]
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	mov    edi,DWORD PTR [ebp+0xc]
  4260bd:	sub    esi,DWORD PTR [edi+0x34]
  4260c0:	mov    edi,DWORD PTR [ebp-0x4]
  4260c3:	xor    edi,ecx
  4260c5:	add    edi,edx
  4260c7:	mov    DWORD PTR [ebp-0x24],esi
  4260ca:	cmp    esi,edi
  4260cc:	je     0x426196
  4260d2:	mov    esi,DWORD PTR [ebp-0x4]
  4260d5:	xor    esi,ecx
  4260d7:	add    esi,edx
  4260d9:	mov    DWORD PTR [ebp-0x8],esi
  4260dc:	push   ebx
  4260dd:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4260e4:	jmp    0x426180
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	xor    esi,ecx
  4260ee:	lea    edi,[ebx-0x8]
  4260f1:	add    esi,edx
  4260f3:	shr    edi,1
  4260f5:	cmp    esi,edi
  4260f7:	jae    0x426166
  4260f9:	sub    edi,esi
  4260fb:	lea    ebx,[eax+esi*2+0x8]
  4260ff:	mov    DWORD PTR [ebp-0x18],edi
  426102:	movzx  esi,WORD PTR [ebx]
  426105:	and    esi,0xfff
  42610b:	mov    DWORD PTR [ebp-0x14],esi
  42610e:	mov    edi,DWORD PTR [ebp-0x14]
  426111:	mov    esi,DWORD PTR [eax]
  426113:	sub    esi,edx
  426115:	add    edi,esi
  426117:	movzx  esi,WORD PTR [ebx]
  42611a:	shr    esi,0xc
  42611d:	xor    edi,ecx
  42611f:	mov    DWORD PTR [ebp-0x20],edi
  426122:	mov    DWORD PTR [ebp-0x14],esi
  426125:	mov    esi,DWORD PTR [ebp-0x20]
  426128:	mov    edi,DWORD PTR [ebp+0x8]
  42612b:	xor    esi,ecx
  42612d:	lea    esi,[esi+edi*1+0x3272f8]
  426134:	mov    DWORD PTR [ebp-0x20],esi
  426137:	mov    esi,DWORD PTR [ebp-0x10]
  42613a:	mov    edi,DWORD PTR [ebp-0x14]
  42613d:	xor    esi,ecx
  42613f:	add    esi,edx
  426141:	cmp    edi,esi
  426143:	jne    0x42615b
  426145:	mov    esi,DWORD PTR [ebp-0x10]
  426148:	mov    edi,DWORD PTR [ebp-0x14]
  42614b:	xor    esi,ecx
  42614d:	add    esi,edx
  42614f:	cmp    edi,esi
  426151:	jne    0x42615b
  426153:	mov    esi,DWORD PTR [ebp-0x20]
  426156:	mov    edi,DWORD PTR [ebp-0x24]
  426159:	add    DWORD PTR [esi],edi
  42615b:	add    ebx,0x2
  42615e:	dec    DWORD PTR [ebp-0x18]
  426161:	jne    0x426102
  426163:	mov    ebx,DWORD PTR [ebp-0xc]
  426166:	add    DWORD PTR [ebp-0x8],ebx
  426169:	mov    esi,DWORD PTR [ebp-0x1c]
  42616c:	mov    edi,DWORD PTR [ebp-0x8]
  42616f:	mov    ebx,DWORD PTR [ebp+0xc]
  426172:	xor    esi,ecx
  426174:	cmp    edi,DWORD PTR [ebx+esi*8+0x193983c]
  42617b:	jae    0x426195
  42617d:	add    eax,DWORD PTR [ebp-0xc]
  426180:	mov    esi,DWORD PTR [ebp-0x4]
  426183:	mov    ebx,DWORD PTR [eax+0x4]
  426186:	xor    esi,ecx
  426188:	add    esi,edx
  42618a:	mov    DWORD PTR [ebp-0xc],ebx
  42618d:	cmp    ebx,esi
  42618f:	jne    0x4260e9
  426195:	pop    ebx
  426196:	mov    eax,DWORD PTR [ebp-0x28]
  426199:	pop    edi
  42619a:	jmp    0x42619f
  42619c:	mov    eax,DWORD PTR [ebp-0x4]
  42619f:	xor    eax,ecx
  4261a1:	add    eax,edx
  4261a3:	pop    esi
  4261a4:	leave  
  4261a5:	ret    0x8
  4261a8:	push   ebp
  4261a9:	mov    ebp,esp
  4261ab:	sub    esp,0xd8
  4261b1:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4261b8:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  4261bf:	mov    eax,DWORD PTR [ebp-0x4]
  4261c2:	push   ebx
  4261c3:	push   esi
  4261c4:	mov    esi,0x75108b1
  4261c9:	xor    eax,esi
  4261cb:	push   edi
  4261cc:	mov    edi,0x3272f8
  4261d1:	add    eax,edi
  4261d3:	mov    DWORD PTR [ebp-0x18],eax
  4261d6:	mov    eax,DWORD PTR [ebp-0x4]
  4261d9:	xor    eax,esi
  4261db:	add    eax,edi
  4261dd:	mov    DWORD PTR [ebp-0x8],eax
  4261e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261e9:	xor    eax,ecx
  4261eb:	mov    DWORD PTR [ebp-0x1c],eax
  4261ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4261f5:	mov    eax,DWORD PTR [ebp-0xc]
  4261f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4261fb:	xor    eax,ecx
  4261fd:	mov    DWORD PTR [ebp-0xc],eax
  426200:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426207:	mov    eax,DWORD PTR [ebp-0x10]
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	xor    eax,ecx
  42620f:	mov    DWORD PTR [ebp-0x10],eax
  426212:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426219:	mov    eax,DWORD PTR [ebp-0x28]
  42621c:	mov    ecx,DWORD PTR [ebp-0x28]
  42621f:	xor    eax,ecx
  426221:	mov    DWORD PTR [ebp-0x28],eax
  426224:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  42622b:	mov    DWORD PTR [ebp+0x20],0xf89cefe4
  426232:	mov    eax,DWORD PTR [ebp+0x8]
  426235:	test   eax,eax
  426237:	je     0x4266be
  42623d:	mov    eax,DWORD PTR [ebp+0xc]
  426240:	test   eax,eax
  426242:	je     0x4266be
  426248:	mov    eax,DWORD PTR [ebp+0x18]
  42624b:	test   eax,eax
  42624d:	je     0x4266be
  426253:	mov    eax,DWORD PTR [ebp+0x20]
  426256:	mov    ecx,DWORD PTR [ebp+0x8]
  426259:	xor    eax,0x8b1
  42625e:	add    eax,0x72f8
  426263:	cmp    WORD PTR [ecx],ax
  426266:	jne    0x4266be
  42626c:	mov    eax,DWORD PTR [ebp-0x4]
  42626f:	xor    eax,esi
  426271:	add    eax,edi
  426273:	mov    DWORD PTR [ebp-0x30],eax
  426276:	mov    eax,DWORD PTR [ebp-0x4]
  426279:	mov    ecx,DWORD PTR [ebp+0x8]
  42627c:	mov    eax,DWORD PTR [ebp+0x8]
  42627f:	add    eax,DWORD PTR [ecx+0x3c]
  426282:	mov    DWORD PTR [ebp+0xc],eax
  426285:	mov    eax,DWORD PTR [eax+0x50]
  426288:	test   eax,eax
  42628a:	je     0x4266be
  426290:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426297:	mov    eax,DWORD PTR [ebp-0x2c]
  42629a:	xor    eax,esi
  42629c:	add    eax,edi
  42629e:	mov    DWORD PTR [ebp-0x2c],eax
  4262a1:	mov    eax,DWORD PTR [ebp-0x4]
  4262a4:	mov    eax,DWORD PTR [ebx+0x190]
  4262aa:	mov    ecx,DWORD PTR [eax]
  4262ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4262af:	add    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp-0x4]
  4262b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4262ba:	mov    edx,DWORD PTR [eax]
  4262bc:	mov    DWORD PTR [ebp-0x20],ecx
  4262bf:	mov    DWORD PTR [ebp+0x20],edx
  4262c2:	cmp    edx,edx
  4262c4:	jne    0x4262f8
  4262c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4262cc:	lea    edx,[ebp-0x18]
  4262cf:	push   edx
  4262d0:	mov    edx,DWORD PTR [ebp-0xc]
  4262d3:	xor    edx,esi
  4262d5:	add    edx,edi
  4262d7:	push   edx
  4262d8:	push   DWORD PTR [ecx+0x50]
  4262db:	push   DWORD PTR [ebp+0x20]
  4262de:	call   DWORD PTR [eax+0x1c]
  4262e1:	mov    eax,DWORD PTR [ebp-0x20]
  4262e4:	mov    ecx,DWORD PTR [eax+0x54]
  4262e7:	mov    eax,DWORD PTR [eax+0x50]
  4262ea:	sub    eax,ecx
  4262ec:	add    ecx,DWORD PTR [ebp+0x20]
  4262ef:	push   ecx
  4262f0:	call   0x426c5b
  4262f5:	mov    edx,DWORD PTR [ebp+0x20]
  4262f8:	mov    eax,DWORD PTR [ebx+0x194]
  4262fe:	mov    DWORD PTR [eax],edx
  426300:	mov    eax,DWORD PTR [ebp+0xc]
  426303:	push   DWORD PTR [eax+0x54]
  426306:	push   DWORD PTR [ebp+0x8]
  426309:	push   edx
  42630a:	call   0x426b51
  42630f:	mov    ecx,DWORD PTR [ebp+0x20]
  426312:	mov    eax,DWORD PTR [ecx+0x3c]
  426315:	add    eax,ecx
  426317:	movzx  ecx,WORD PTR [eax+0x14]
  42631b:	lea    ecx,[ecx+eax*1+0x18]
  42631f:	mov    DWORD PTR [ebp+0x18],ecx
  426322:	mov    ecx,DWORD PTR [ebp-0x4]
  426325:	movzx  edx,WORD PTR [eax+0x6]
  426329:	xor    ecx,esi
  42632b:	add    ecx,edi
  42632d:	mov    DWORD PTR [ebp+0xc],eax
  426330:	cmp    edx,ecx
  426332:	je     0x4263df
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	xor    ecx,esi
  42633d:	add    ecx,edi
  42633f:	mov    DWORD PTR [ebp-0x8],ecx
  426342:	mov    ecx,DWORD PTR [ebp-0x24]
  426345:	movzx  edx,WORD PTR [eax+0x6]
  426349:	xor    ecx,esi
  42634b:	sub    edx,ecx
  42634d:	sub    edx,edi
  42634f:	cmp    DWORD PTR [ebp-0x8],edx
  426352:	ja     0x4263df
  426358:	mov    edx,DWORD PTR [ebp+0x18]
  42635b:	add    edx,0x8
  42635e:	mov    DWORD PTR [ebp+0x18],edx
  426361:	jmp    0x426366
  426363:	mov    edx,DWORD PTR [ebp+0x18]
  426366:	mov    eax,DWORD PTR [eax+0x38]
  426369:	lea    ecx,[eax-0x1]
  42636c:	mov    DWORD PTR [ebp-0x38],eax
  42636f:	mov    eax,DWORD PTR [edx]
  426371:	test   eax,ecx
  426373:	je     0x42637c
  426375:	not    ecx
  426377:	and    eax,ecx
  426379:	add    eax,DWORD PTR [ebp-0x38]
  42637c:	mov    ecx,DWORD PTR [edx+0x4]
  42637f:	add    ecx,DWORD PTR [ebp+0x20]
  426382:	push   ecx
  426383:	call   0x426c5b
  426388:	mov    edx,DWORD PTR [ebp-0x4]
  42638b:	mov    eax,DWORD PTR [ebp+0x18]
  42638e:	mov    ecx,DWORD PTR [eax+0x8]
  426391:	xor    edx,esi
  426393:	add    edx,edi
  426395:	cmp    ecx,edx
  426397:	je     0x4263b0
  426399:	push   ecx
  42639a:	mov    ecx,DWORD PTR [ebp+0x8]
  42639d:	add    ecx,DWORD PTR [eax+0xc]
  4263a0:	mov    eax,DWORD PTR [eax+0x4]
  4263a3:	add    eax,DWORD PTR [ebp+0x20]
  4263a6:	push   ecx
  4263a7:	push   eax
  4263a8:	call   0x426b51
  4263ad:	mov    eax,DWORD PTR [ebp+0x18]
  4263b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4263b3:	mov    edx,DWORD PTR [ebp-0x8]
  4263b6:	add    eax,0x28
  4263b9:	xor    ecx,esi
  4263bb:	lea    ecx,[edx+ecx*1+0x3272f8]
  4263c2:	mov    edx,DWORD PTR [ebp+0xc]
  4263c5:	mov    DWORD PTR [ebp+0x18],eax
  4263c8:	mov    eax,DWORD PTR [ebp-0x24]
  4263cb:	movzx  edx,WORD PTR [edx+0x6]
  4263cf:	xor    eax,esi
  4263d1:	sub    edx,eax
  4263d3:	mov    eax,DWORD PTR [ebp+0xc]
  4263d6:	sub    edx,edi
  4263d8:	mov    DWORD PTR [ebp-0x8],ecx
  4263db:	cmp    ecx,edx
  4263dd:	jbe    0x426363
  4263df:	mov    edx,DWORD PTR [ebx+0x18c]
  4263e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4263e8:	cmp    ecx,DWORD PTR [edx]
  4263ea:	jne    0x426413
  4263ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263f2:	lea    edx,[ebp-0x18]
  4263f5:	push   edx
  4263f6:	mov    edx,DWORD PTR [ebp-0x10]
  4263f9:	xor    edx,esi
  4263fb:	add    edx,edi
  4263fd:	push   edx
  4263fe:	mov    edx,DWORD PTR [ebp-0x20]
  426401:	push   DWORD PTR [edx+0x54]
  426404:	push   ecx
  426405:	call   DWORD PTR [eax+0x1c]
  426408:	test   eax,eax
  42640a:	je     0x4266af
  426410:	mov    eax,DWORD PTR [ebp+0xc]
  426413:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426419:	mov    ecx,DWORD PTR [ecx]
  42641b:	xor    ecx,esi
  42641d:	add    ecx,edi
  42641f:	je     0x4265da
  426425:	mov    eax,DWORD PTR [ebp-0x4]
  426428:	xor    eax,esi
  42642a:	add    eax,edi
  42642c:	and    DWORD PTR [ebp+0x8],0x0
  426430:	mov    DWORD PTR [ebp-0x14],eax
  426433:	mov    eax,0xf89c85dd
  426438:	lea    ecx,[eax-0x18]
  42643b:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  426442:	mov    DWORD PTR [ebp-0x54],0xf89c85cd
  426449:	mov    DWORD PTR [ebp-0x50],eax
  42644c:	mov    DWORD PTR [ebp-0x4c],ecx
  42644f:	mov    DWORD PTR [ebp-0x48],ecx
  426452:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  426459:	mov    edx,DWORD PTR [ebp+0x8]
  42645c:	mov    ecx,0x8b1
  426461:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426466:	mov    edx,0x72f8
  42646b:	add    cx,dx
  42646e:	mov    edx,DWORD PTR [ebp+0x8]
  426471:	inc    DWORD PTR [ebp+0x8]
  426474:	cmp    DWORD PTR [ebp+0x8],0x6
  426478:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426480:	jb     0x426459
  426482:	mov    ecx,0xf89c85cb
  426487:	mov    DWORD PTR [ebp-0xb0],eax
  42648d:	mov    DWORD PTR [ebp-0x9c],eax
  426493:	mov    DWORD PTR [ebp-0x74],eax
  426496:	mov    DWORD PTR [ebp-0x70],eax
  426499:	lea    eax,[ecx-0x1]
  42649c:	lea    edx,[ecx+0x34]
  42649f:	mov    DWORD PTR [ebp-0x64],eax
  4264a2:	mov    DWORD PTR [ebp-0x60],eax
  4264a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85e5
  4264af:	mov    DWORD PTR [ebp-0xac],ecx
  4264b5:	mov    DWORD PTR [ebp-0xa8],edx
  4264bb:	mov    DWORD PTR [ebp-0xa4],0xf89c85c0
  4264c5:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  4264cf:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  4264d9:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  4264e3:	mov    DWORD PTR [ebp-0x90],0xf89c85cd
  4264ed:	mov    DWORD PTR [ebp-0x8c],ecx
  4264f3:	mov    DWORD PTR [ebp-0x88],0xf89c8530
  4264fd:	mov    DWORD PTR [ebp-0x84],edx
  426503:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  42650a:	mov    DWORD PTR [ebp-0x7c],ecx
  42650d:	mov    DWORD PTR [ebp-0x78],0xf89c85f8
  426514:	mov    DWORD PTR [ebp-0x6c],ecx
  426517:	mov    DWORD PTR [ebp-0x68],0xf89c85dc
  42651e:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  426525:	xor    eax,eax
  426527:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42652e:	xor    cl,0xb1
  426531:	sub    cl,0x8
  426534:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42653b:	inc    eax
  42653c:	cmp    eax,0x17
  42653f:	jb     0x426527
  426541:	mov    eax,DWORD PTR [ebx+0x1e0]
  426547:	lea    ecx,[ebp-0xc0]
  42654d:	push   ecx
  42654e:	call   DWORD PTR [eax+0x4]
  426551:	mov    ecx,DWORD PTR [ebx+0x1e0]
  426557:	lea    edx,[ebp-0xd8]
  42655d:	push   edx
  42655e:	push   eax
  42655f:	call   DWORD PTR [ecx+0x8]
  426562:	mov    DWORD PTR [ebp-0x40],eax
  426565:	lea    eax,[ebp-0x14]
  426568:	push   eax
  426569:	mov    eax,DWORD PTR [ebx+0x18c]
  42656f:	push   DWORD PTR [eax]
  426571:	mov    eax,DWORD PTR [ebp-0x40]
  426574:	call   eax
  426576:	mov    eax,DWORD PTR [ebp-0x4]
  426579:	xor    eax,esi
  42657b:	add    eax,edi
  42657d:	mov    DWORD PTR [ebp-0x34],eax
  426580:	mov    ecx,DWORD PTR [ebp-0x4]
  426583:	mov    eax,DWORD PTR [ebp-0x14]
  426586:	xor    ecx,esi
  426588:	add    ecx,edi
  42658a:	cmp    eax,ecx
  42658c:	je     0x4265d7
  42658e:	mov    DWORD PTR [ebp-0x3c],eax
  426591:	jmp    0x4265a2
  426593:	mov    eax,DWORD PTR [eax]
  426595:	mov    ecx,DWORD PTR [ebp-0x3c]
  426598:	mov    DWORD PTR [ebp-0x14],eax
  42659b:	mov    eax,DWORD PTR [ebp-0x14]
  42659e:	cmp    eax,ecx
  4265a0:	je     0x4265af
  4265a2:	mov    edx,DWORD PTR [eax+0x18]
  4265a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265ab:	cmp    edx,DWORD PTR [ecx]
  4265ad:	jne    0x426593
  4265af:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265b5:	mov    edx,DWORD PTR [eax+0x18]
  4265b8:	cmp    edx,DWORD PTR [ecx]
  4265ba:	jne    0x4265d7
  4265bc:	mov    ecx,DWORD PTR [ebx+0x190]
  4265c2:	mov    edx,DWORD PTR [ebp-0x20]
  4265c5:	mov    edx,DWORD PTR [edx+0x28]
  4265c8:	add    edx,DWORD PTR [ecx]
  4265ca:	mov    DWORD PTR [eax+0x1c],edx
  4265cd:	mov    eax,DWORD PTR [ebp-0x24]
  4265d0:	xor    eax,esi
  4265d2:	add    eax,edi
  4265d4:	mov    DWORD PTR [ebp-0x34],eax
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	push   ebx
  4265db:	push   eax
  4265dc:	push   DWORD PTR [ebp+0x20]
  4265df:	call   0x425d5f
  4265e4:	test   eax,eax
  4265e6:	je     0x4266af
  4265ec:	push   DWORD PTR [ebp+0xc]
  4265ef:	mov    ecx,ebx
  4265f1:	push   DWORD PTR [ebp+0x20]
  4265f4:	call   0x425cb8
  4265f9:	test   eax,eax
  4265fb:	je     0x4266af
  426601:	mov    eax,DWORD PTR [ebp+0xc]
  426604:	mov    edx,DWORD PTR [ebp+0x20]
  426607:	mov    ecx,ebx
  426609:	call   0x425b91
  42660e:	test   eax,eax
  426610:	je     0x4266af
  426616:	push   ebx
  426617:	push   DWORD PTR [ebp+0x20]
  42661a:	call   0x426042
  42661f:	test   eax,eax
  426621:	je     0x4266af
  426627:	mov    eax,DWORD PTR [ebx+0x18c]
  42662d:	mov    edx,DWORD PTR [ebp+0x20]
  426630:	cmp    edx,DWORD PTR [eax]
  426632:	jne    0x42664e
  426634:	mov    eax,DWORD PTR [ebx+0x1e0]
  42663a:	lea    ecx,[ebp-0x18]
  42663d:	push   ecx
  42663e:	push   DWORD PTR [ebp-0x18]
  426641:	mov    ecx,DWORD PTR [ebp-0x20]
  426644:	push   DWORD PTR [ecx+0x54]
  426647:	push   edx
  426648:	call   DWORD PTR [eax+0x1c]
  42664b:	mov    edx,DWORD PTR [ebp+0x20]
  42664e:	mov    eax,DWORD PTR [ebx+0x1c8]
  426654:	mov    eax,DWORD PTR [eax]
  426656:	xor    eax,esi
  426658:	add    eax,edi
  42665a:	je     0x426693
  42665c:	mov    ecx,DWORD PTR [ebp+0xc]
  42665f:	mov    eax,DWORD PTR [ecx+0x28]
  426662:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426669:	mov    esi,DWORD PTR [ebp+0x8]
  42666c:	push   DWORD PTR [ebp+0x14]
  42666f:	xor    esi,0x8b1
  426675:	push   DWORD PTR [ebp+0x10]
  426678:	add    esi,0x72f8
  42667e:	or     WORD PTR [ecx+0x16],si
  426682:	add    eax,edx
  426684:	push   edx
  426685:	call   eax
  426687:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  426691:	jmp    0x42669d
  426693:	mov    eax,DWORD PTR [ebp+0xc]
  426696:	mov    eax,DWORD PTR [eax+0x28]
  426699:	add    eax,edx
  42669b:	call   eax
  42669d:	mov    DWORD PTR [ebp-0x8],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x8]
  4266a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4266a6:	mov    DWORD PTR [ecx],eax
  4266a8:	mov    DWORD PTR [ebp-0x30],0x1
  4266af:	cmp    DWORD PTR [ebp-0x30],0x0
  4266b3:	jne    0x4266b9
  4266b5:	and    DWORD PTR [ebp+0x20],0x0
  4266b9:	mov    eax,DWORD PTR [ebp+0x20]
  4266bc:	jmp    0x4266c0
  4266be:	xor    eax,eax
  4266c0:	pop    edi
  4266c1:	pop    esi
  4266c2:	pop    ebx
  4266c3:	leave  
  4266c4:	ret    0x1c
  4266c7:	push   ebp
  4266c8:	mov    ebp,esp
  4266ca:	movzx  edx,WORD PTR [ecx+0x6]
  4266ce:	movzx  eax,WORD PTR [ecx+0x14]
  4266d2:	push   ebx
  4266d3:	push   edi
  4266d4:	xor    edi,edi
  4266d6:	lea    eax,[eax+ecx*1+0x18]
  4266da:	test   edx,edx
  4266dc:	je     0x4266fd
  4266de:	mov    ecx,DWORD PTR [eax+0xc]
  4266e1:	lea    ebx,[ecx+esi*1]
  4266e4:	cmp    DWORD PTR [ebp+0x8],ebx
  4266e7:	jb     0x4266f5
  4266e9:	mov    ebx,DWORD PTR [eax+0x8]
  4266ec:	add    ebx,ecx
  4266ee:	add    ebx,esi
  4266f0:	cmp    DWORD PTR [ebp+0x8],ebx
  4266f3:	jb     0x4266ff
  4266f5:	add    eax,0x28
  4266f8:	inc    edi
  4266f9:	cmp    edi,edx
  4266fb:	jb     0x4266de
  4266fd:	xor    eax,eax
  4266ff:	pop    edi
  426700:	pop    ebx
  426701:	pop    ebp
  426702:	ret    0x4
  426705:	push   ebp
  426706:	mov    ebp,esp
  426708:	sub    esp,0x34
  42670b:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426712:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426719:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  426720:	mov    DWORD PTR [ebp-0x8],0xf89c85d8
  426727:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  42672e:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  426735:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  42673c:	mov    DWORD PTR [ebp-0x10],eax
  42673f:	mov    eax,DWORD PTR [ebp+0x8]
  426742:	mov    DWORD PTR [ebp-0x14],eax
  426745:	mov    eax,DWORD PTR [ebp-0xc]
  426748:	push   ebx
  426749:	mov    ecx,0x75108b1
  42674e:	xor    eax,ecx
  426750:	push   esi
  426751:	mov    esi,DWORD PTR [ebp-0x10]
  426754:	mov    edx,0x3272f8
  426759:	add    eax,edx
  42675b:	push   edi
  42675c:	cmp    esi,eax
  42675e:	je     0x42693d
  426764:	mov    eax,DWORD PTR [ebp-0xc]
  426767:	mov    esi,DWORD PTR [ebp-0x14]
  42676a:	xor    eax,ecx
  42676c:	add    eax,edx
  42676e:	cmp    esi,eax
  426770:	je     0x42693d
  426776:	mov    eax,DWORD PTR [ebp-0xc]
  426779:	xor    eax,ecx
  42677b:	add    eax,edx
  42677d:	mov    DWORD PTR [ebp-0x24],eax
  426780:	mov    eax,DWORD PTR [ebp-0xc]
  426783:	xor    eax,ecx
  426785:	add    eax,edx
  426787:	mov    DWORD PTR [ebp-0x28],eax
  42678a:	mov    edi,DWORD PTR [ebp-0x20]
  42678d:	mov    ebx,DWORD PTR [ebp-0x8]
  426790:	mov    esi,0x8b1
  426795:	xor    edi,esi
  426797:	mov    eax,0x72f8
  42679c:	xor    ebx,esi
  42679e:	add    edi,eax
  4267a0:	add    ebx,eax
  4267a2:	sub    ebx,edi
  4267a4:	mov    WORD PTR [ebp-0x8],bx
  4267a8:	jmp    0x42686d
  4267ad:	mov    edi,DWORD PTR [ebp-0xc]
  4267b0:	mov    bx,WORD PTR [ebp-0x4]
  4267b4:	xor    edi,esi
  4267b6:	add    edi,eax
  4267b8:	cmp    bx,di
  4267bb:	je     0x4268af
  4267c1:	mov    edi,DWORD PTR [ebp-0xc]
  4267c4:	mov    ebx,DWORD PTR [ebp+0xc]
  4267c7:	xor    edi,ecx
  4267c9:	add    edi,edx
  4267cb:	cmp    ebx,edi
  4267cd:	mov    di,WORD PTR [ebp-0x4]
  4267d1:	mov    bx,WORD PTR [ebp+0x8]
  4267d5:	je     0x426840
  4267d7:	cmp    bx,di
  4267da:	je     0x426849
  4267dc:	mov    edi,DWORD PTR [ebp-0x20]
  4267df:	mov    bx,WORD PTR [ebp+0x8]
  4267e3:	xor    edi,esi
  4267e5:	add    edi,eax
  4267e7:	cmp    bx,di
  4267ea:	jb     0x42680a
  4267ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4267ef:	mov    bx,WORD PTR [ebp+0x8]
  4267f3:	xor    edi,esi
  4267f5:	add    edi,eax
  4267f7:	cmp    bx,di
  4267fa:	ja     0x42680a
  4267fc:	movzx  edi,WORD PTR [ebp+0x8]
  426800:	movzx  ebx,WORD PTR [ebp-0x8]
  426804:	add    edi,ebx
  426806:	mov    WORD PTR [ebp+0x8],di
  42680a:	mov    edi,DWORD PTR [ebp-0x20]
  42680d:	mov    bx,WORD PTR [ebp-0x4]
  426811:	xor    edi,esi
  426813:	add    edi,eax
  426815:	cmp    bx,di
  426818:	jb     0x426838
  42681a:	mov    edi,DWORD PTR [ebp-0x2c]
  42681d:	mov    bx,WORD PTR [ebp-0x4]
  426821:	xor    edi,esi
  426823:	add    edi,eax
  426825:	cmp    bx,di
  426828:	ja     0x426838
  42682a:	movzx  edi,WORD PTR [ebp-0x4]
  42682e:	movzx  ebx,WORD PTR [ebp-0x8]
  426832:	add    edi,ebx
  426834:	mov    WORD PTR [ebp-0x4],di
  426838:	mov    di,WORD PTR [ebp-0x4]
  42683c:	mov    bx,WORD PTR [ebp+0x8]
  426840:	cmp    bx,di
  426843:	jne    0x42693d
  426849:	mov    edi,DWORD PTR [ebp-0x1c]
  42684c:	mov    ebx,DWORD PTR [ebp-0x10]
  42684f:	xor    edi,ecx
  426851:	lea    edi,[edi+ebx*1+0x3272f8]
  426858:	mov    DWORD PTR [ebp-0x10],edi
  42685b:	mov    edi,DWORD PTR [ebp-0x1c]
  42685e:	mov    ebx,DWORD PTR [ebp-0x14]
  426861:	xor    edi,ecx
  426863:	lea    edi,[edi+ebx*1+0x3272f8]
  42686a:	mov    DWORD PTR [ebp-0x14],edi
  42686d:	mov    edi,DWORD PTR [ebp-0x24]
  426870:	mov    ebx,DWORD PTR [ebp-0x10]
  426873:	mov    di,WORD PTR [ebx+edi*2]
  426877:	mov    WORD PTR [ebp+0x8],di
  42687b:	mov    edi,DWORD PTR [ebp-0x28]
  42687e:	mov    ebx,DWORD PTR [ebp-0x14]
  426881:	mov    di,WORD PTR [ebx+edi*2]
  426885:	mov    WORD PTR [ebp-0x4],di
  426889:	mov    edi,DWORD PTR [ebp-0xc]
  42688c:	mov    bx,WORD PTR [ebp+0x8]
  426890:	xor    edi,esi
  426892:	add    edi,eax
  426894:	cmp    bx,di
  426897:	jne    0x4267ad
  42689d:	mov    eax,DWORD PTR [ebp-0x18]
  4268a0:	mov    esi,DWORD PTR [ebp-0xc]
  4268a3:	xor    eax,ecx
  4268a5:	add    eax,edx
  4268a7:	imul   eax,esi
  4268aa:	mov    DWORD PTR [ebp-0xc],eax
  4268ad:	jmp    0x4268c1
  4268af:	mov    eax,DWORD PTR [ebp-0xc]
  4268b2:	mov    esi,DWORD PTR [ebp-0x18]
  4268b5:	xor    eax,ecx
  4268b7:	lea    eax,[eax+esi*1+0x3272f8]
  4268be:	mov    DWORD PTR [ebp-0x18],eax
  4268c1:	mov    eax,DWORD PTR [ebp-0x24]
  4268c4:	sub    eax,edx
  4268c6:	xor    eax,ecx
  4268c8:	mov    DWORD PTR [ebp-0x30],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x28]
  4268ce:	sub    eax,edx
  4268d0:	xor    eax,ecx
  4268d2:	mov    DWORD PTR [ebp-0x34],eax
  4268d5:	mov    eax,DWORD PTR [ebp-0x34]
  4268d8:	mov    esi,DWORD PTR [ebp-0x1c]
  4268db:	xor    esi,ecx
  4268dd:	add    esi,edx
  4268df:	xor    eax,ecx
  4268e1:	add    eax,0x3272f8
  4268e6:	imul   esi,eax
  4268e9:	mov    eax,DWORD PTR [ebp-0x14]
  4268ec:	movzx  eax,WORD PTR [esi+eax*1]
  4268f0:	mov    esi,DWORD PTR [ebp-0x30]
  4268f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4268f6:	xor    esi,ecx
  4268f8:	add    esi,edx
  4268fa:	xor    edi,ecx
  4268fc:	add    edi,edx
  4268fe:	imul   edi,esi
  426901:	mov    esi,DWORD PTR [ebp-0x10]
  426904:	movzx  esi,WORD PTR [edi+esi*1]
  426908:	sub    eax,edx
  42690a:	sub    esi,edx
  42690c:	xor    eax,ecx
  42690e:	xor    esi,ecx
  426910:	cmp    esi,eax
  426912:	jne    0x42693d
  426914:	mov    eax,DWORD PTR [ebp-0x30]
  426917:	mov    esi,DWORD PTR [ebp-0x1c]
  42691a:	xor    eax,ecx
  42691c:	add    eax,0x3272f8
  426921:	xor    esi,ecx
  426923:	add    esi,edx
  426925:	imul   esi,eax
  426928:	mov    eax,DWORD PTR [ebp-0x10]
  42692b:	movzx  eax,WORD PTR [esi+eax*1]
  42692f:	mov    esi,DWORD PTR [ebp-0xc]
  426932:	sub    eax,edx
  426934:	xor    eax,ecx
  426936:	cmp    eax,esi
  426938:	mov    eax,DWORD PTR [ebp-0xc]
  42693b:	je     0x426940
  42693d:	mov    eax,DWORD PTR [ebp-0x18]
  426940:	pop    edi
  426941:	xor    eax,ecx
  426943:	pop    esi
  426944:	add    eax,edx
  426946:	pop    ebx
  426947:	leave  
  426948:	ret    0x8
  42694b:	push   ebp
  42694c:	mov    ebp,esp
  42694e:	push   ecx
  42694f:	mov    cx,WORD PTR [eax]
  426952:	push   esi
  426953:	mov    esi,0x3b5e
  426958:	sub    cx,si
  42695b:	mov    esi,0x8a9c
  426960:	xor    cx,si
  426963:	mov    esi,0x4e3e
  426968:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42696f:	mov    edx,0xf89c85b9
  426974:	cmp    cx,si
  426977:	je     0x4269d6
  426979:	push   ebx
  42697a:	push   edi
  42697b:	movzx  ecx,cx
  42697e:	mov    edi,0xffcd8d08
  426983:	mov    esi,0x75108b1
  426988:	mov    ebx,0x4e62
  42698d:	cmp    cx,bx
  426990:	jne    0x426995
  426992:	mov    DWORD PTR [ebp-0x4],edx
  426995:	lea    edx,[edi+0x1]
  426998:	xor    edx,esi
  42699a:	mov    edi,edx
  42699c:	xor    edi,esi
  42699e:	mov    cx,WORD PTR [eax+edi*2+0x64e5f0]
  4269a6:	mov    ebx,0x3b5e
  4269ab:	sub    cx,bx
  4269ae:	mov    ebx,0x8a9c
  4269b3:	xor    cx,bx
  4269b6:	mov    ebx,0x4e3e
  4269bb:	cmp    cx,bx
  4269be:	jne    0x426988
  4269c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c3:	pop    edi
  4269c4:	pop    ebx
  4269c5:	cmp    ecx,0xf89c85b6
  4269cb:	je     0x4269d6
  4269cd:	xor    ecx,esi
  4269cf:	lea    eax,[eax+ecx*2+0x64e5f2]
  4269d6:	pop    esi
  4269d7:	leave  
  4269d8:	ret    
  4269d9:	push   ebp
  4269da:	mov    ebp,esp
  4269dc:	push   ecx
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4269e6:	mov    esi,0xf89c85b9
  4269eb:	call   0x42694b
  4269f0:	mov    edi,eax
  4269f2:	mov    al,BYTE PTR [edi]
  4269f4:	sub    al,0x5
  4269f6:	xor    al,0x80
  4269f8:	cmp    al,0x7b
  4269fa:	je     0x426a5d
  4269fc:	mov    eax,edi
  4269fe:	mov    edx,0xffcd8d08
  426a03:	mov    ecx,0x75108b1
  426a08:	push   ebx
  426a09:	mov    ax,WORD PTR [eax]
  426a0c:	mov    ebx,0x3b5e
  426a11:	sub    ax,bx
  426a14:	mov    ebx,0x8a9c
  426a19:	xor    ax,bx
  426a1c:	mov    ebx,0x4e4c
  426a21:	cmp    ax,bx
  426a24:	jne    0x426a29
  426a26:	mov    DWORD PTR [ebp-0x4],esi
  426a29:	lea    esi,[edx+0x1]
  426a2c:	xor    esi,ecx
  426a2e:	mov    edx,esi
  426a30:	xor    edx,ecx
  426a32:	lea    eax,[edi+edx*2+0x64e5f0]
  426a39:	mov    bl,BYTE PTR [eax]
  426a3b:	sub    bl,0x5
  426a3e:	xor    bl,0x80
  426a41:	cmp    bl,0x7b
  426a44:	jne    0x426a09
  426a46:	mov    eax,DWORD PTR [ebp-0x4]
  426a49:	pop    ebx
  426a4a:	cmp    eax,0xf89c85b6
  426a4f:	je     0x426a5d
  426a51:	xor    eax,ecx
  426a53:	xor    ecx,ecx
  426a55:	mov    WORD PTR [edi+eax*2+0x64e5f0],cx
  426a5d:	mov    eax,edi
  426a5f:	pop    edi
  426a60:	pop    esi
  426a61:	leave  
  426a62:	ret    
  426a63:	push   ebp
  426a64:	mov    ebp,esp
  426a66:	push   ecx
  426a67:	push   esi
  426a68:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  426a6f:	mov    esi,0xf89c85b9
  426a74:	call   0x42694b
  426a79:	mov    cx,WORD PTR [eax]
  426a7c:	mov    edx,0x3b5e
  426a81:	sub    cx,dx
  426a84:	mov    edx,0x8a9c
  426a89:	xor    cx,dx
  426a8c:	mov    edx,0x4e3e
  426a91:	cmp    cx,dx
  426a94:	je     0x426aed
  426a96:	push   ebx
  426a97:	push   edi
  426a98:	movzx  ecx,cx
  426a9b:	mov    edx,0xffcd8d08
  426aa0:	mov    edi,0x75108b1
  426aa5:	mov    ebx,0x4e4c
  426aaa:	cmp    cx,bx
  426aad:	jne    0x426ab2
  426aaf:	mov    DWORD PTR [ebp-0x4],esi
  426ab2:	lea    esi,[edx+0x1]
  426ab5:	xor    esi,edi
  426ab7:	mov    edx,esi
  426ab9:	xor    edx,edi
  426abb:	mov    cx,WORD PTR [eax+edx*2+0x64e5f0]
  426ac3:	mov    ebx,0x3b5e
  426ac8:	sub    cx,bx
  426acb:	mov    ebx,0x8a9c
  426ad0:	xor    cx,bx
  426ad3:	mov    ebx,0x4e3e
  426ad8:	cmp    cx,bx
  426adb:	jne    0x426aa5
  426add:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  426ae4:	pop    edi
  426ae5:	pop    ebx
  426ae6:	je     0x426aed
  426ae8:	xor    eax,eax
  426aea:	inc    eax
  426aeb:	jmp    0x426aef
  426aed:	xor    eax,eax
  426aef:	pop    esi
  426af0:	leave  
  426af1:	ret    
  426af2:	push   ebp
  426af3:	mov    ebp,esp
  426af5:	push   ecx
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	movzx  ecx,WORD PTR [eax]
  426afc:	push   esi
  426afd:	lea    eax,[ecx-0x3b5e]
  426b03:	mov    esi,0x8a9c
  426b08:	push   edi
  426b09:	xor    eax,esi
  426b0b:	mov    edi,0x4e3e
  426b10:	mov    DWORD PTR [ebp-0x4],edx
  426b13:	cmp    ax,di
  426b16:	je     0x426b43
  426b18:	mov    eax,DWORD PTR [ebp+0x8]
  426b1b:	sub    eax,edx
  426b1d:	mov    DWORD PTR [ebp+0x8],eax
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	mov    WORD PTR [edx],cx
  426b28:	add    edx,0x2
  426b2b:	movzx  edi,WORD PTR [eax+edx*1]
  426b2f:	mov    ecx,edi
  426b31:	add    edi,0xffffc4a2
  426b37:	xor    edi,esi
  426b39:	mov    eax,0x4e3e
  426b3e:	cmp    di,ax
  426b41:	jne    0x426b22
  426b43:	xor    eax,eax
  426b45:	pop    edi
  426b46:	mov    WORD PTR [edx],ax
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	pop    esi
  426b4d:	leave  
  426b4e:	ret    0x4
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x18
  426b57:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  426b5e:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426b65:	mov    ecx,DWORD PTR [ebp-0x8]
  426b68:	push   esi
  426b69:	mov    eax,0x75108b1
  426b6e:	xor    ecx,eax
  426b70:	mov    esi,0x3272f8
  426b75:	add    ecx,esi
  426b77:	mov    DWORD PTR [ebp-0x4],ecx
  426b7a:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426b81:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426b88:	push   edi
  426b89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426b90:	jmp    0x426c31
  426b95:	mov    ecx,DWORD PTR [ebp-0x4]
  426b98:	mov    edx,DWORD PTR [ebp+0x10]
  426b9b:	sub    edx,ecx
  426b9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba0:	xor    ecx,eax
  426ba2:	add    ecx,esi
  426ba4:	cmp    edx,ecx
  426ba6:	jbe    0x426bc3
  426ba8:	mov    edx,DWORD PTR [ebp-0x4]
  426bab:	add    edx,DWORD PTR [ebp+0x8]
  426bae:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb1:	add    ecx,DWORD PTR [ebp+0xc]
  426bb4:	mov    edi,DWORD PTR [ecx]
  426bb6:	mov    DWORD PTR [edx],edi
  426bb8:	mov    ecx,DWORD PTR [ecx+0x4]
  426bbb:	mov    DWORD PTR [edx+0x4],ecx
  426bbe:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc1:	jmp    0x426c10
  426bc3:	mov    ecx,DWORD PTR [ebp-0x4]
  426bc6:	mov    edx,DWORD PTR [ebp+0x10]
  426bc9:	sub    edx,ecx
  426bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  426bce:	xor    ecx,eax
  426bd0:	add    ecx,esi
  426bd2:	cmp    edx,ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd7:	jbe    0x426beb
  426bd9:	add    ecx,DWORD PTR [ebp+0x8]
  426bdc:	mov    edx,DWORD PTR [ebp-0x4]
  426bdf:	add    edx,DWORD PTR [ebp+0xc]
  426be2:	mov    edx,DWORD PTR [edx]
  426be4:	mov    DWORD PTR [ecx],edx
  426be6:	mov    ecx,DWORD PTR [ebp-0x10]
  426be9:	jmp    0x426c10
  426beb:	mov    edx,DWORD PTR [ebp+0x10]
  426bee:	sub    edx,ecx
  426bf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf3:	xor    ecx,eax
  426bf5:	add    ecx,esi
  426bf7:	cmp    edx,ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	jbe    0x426c21
  426bfe:	add    ecx,DWORD PTR [ebp+0x8]
  426c01:	mov    edx,DWORD PTR [ebp-0x4]
  426c04:	add    edx,DWORD PTR [ebp+0xc]
  426c07:	mov    dx,WORD PTR [edx]
  426c0a:	mov    WORD PTR [ecx],dx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x14]
  426c10:	mov    edx,DWORD PTR [ebp-0x4]
  426c13:	xor    ecx,eax
  426c15:	lea    ecx,[ecx+edx*1+0x3272f8]
  426c1c:	mov    DWORD PTR [ebp-0x4],ecx
  426c1f:	jmp    0x426c31
  426c21:	add    ecx,DWORD PTR [ebp+0x8]
  426c24:	mov    edx,DWORD PTR [ebp-0x4]
  426c27:	add    edx,DWORD PTR [ebp+0xc]
  426c2a:	mov    dl,BYTE PTR [edx]
  426c2c:	mov    BYTE PTR [ecx],dl
  426c2e:	inc    DWORD PTR [ebp-0x4]
  426c31:	mov    ecx,DWORD PTR [ebp-0x18]
  426c34:	mov    edx,DWORD PTR [ebp+0x10]
  426c37:	xor    ecx,eax
  426c39:	add    ecx,esi
  426c3b:	imul   ecx,edx
  426c3e:	mov    edx,DWORD PTR [ebp-0x8]
  426c41:	mov    edi,DWORD PTR [ebp-0x4]
  426c44:	xor    edx,eax
  426c46:	lea    edx,[edx+edi*1+0x3272f8]
  426c4d:	cmp    edx,ecx
  426c4f:	jb     0x426b95
  426c55:	pop    edi
  426c56:	pop    esi
  426c57:	leave  
  426c58:	ret    0xc
  426c5b:	push   ebp
  426c5c:	mov    ebp,esp
  426c5e:	sub    esp,0xc
  426c61:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c68:	push   esi
  426c69:	mov    esi,eax
  426c6b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426c72:	mov    edx,DWORD PTR [ebp-0x4]
  426c75:	mov    eax,0x75108b1
  426c7a:	xor    edx,eax
  426c7c:	mov    ecx,0x3272f8
  426c81:	add    edx,ecx
  426c83:	cmp    esi,edx
  426c85:	je     0x426cc7
  426c87:	push   ebx
  426c88:	push   edi
  426c89:	mov    edx,DWORD PTR [ebp-0x8]
  426c8c:	mov    ebx,DWORD PTR [ebp+0x8]
  426c8f:	xor    edx,eax
  426c91:	mov    edi,0xffcd8d08
  426c96:	sub    edi,edx
  426c98:	add    esi,edi
  426c9a:	lea    edx,[esi-0x3272f8]
  426ca0:	xor    edx,eax
  426ca2:	mov    DWORD PTR [ebp-0xc],edx
  426ca5:	mov    edx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edi,DWORD PTR [ebp-0xc]
  426cab:	xor    dl,0xb1
  426cae:	sub    dl,0x8
  426cb1:	xor    edi,eax
  426cb3:	mov    BYTE PTR [edi+ebx*1+0x3272f8],dl
  426cba:	mov    edx,DWORD PTR [ebp-0x4]
  426cbd:	xor    edx,eax
  426cbf:	add    edx,ecx
  426cc1:	cmp    esi,edx
  426cc3:	jne    0x426c89
  426cc5:	pop    edi
  426cc6:	pop    ebx
  426cc7:	pop    esi
  426cc8:	leave  
  426cc9:	ret    0x4
  426ccc:	push   ebp
  426ccd:	mov    ebp,esp
  426ccf:	sub    esp,0x21c
  426cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426cdc:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  426ce3:	mov    eax,DWORD PTR [ebp+0x10]
  426ce6:	mov    eax,DWORD PTR [ebp-0x4]
  426ce9:	mov    ecx,DWORD PTR [ebp+0x8]
  426cec:	push   esi
  426ced:	push   edi
  426cee:	mov    edi,0x75108b1
  426cf3:	xor    eax,edi
  426cf5:	mov    esi,0x3272f8
  426cfa:	add    eax,esi
  426cfc:	cmp    eax,ecx
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	jne    0x426d0c
  426d03:	xor    eax,edi
  426d05:	add    eax,esi
  426d07:	jmp    0x426db8
  426d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0f:	xor    eax,edi
  426d11:	add    eax,esi
  426d13:	cmp    eax,ecx
  426d15:	jne    0x426d1c
  426d17:	mov    eax,DWORD PTR [ebp-0x4]
  426d1a:	jmp    0x426d03
  426d1c:	lea    eax,[ebp-0x21c]
  426d22:	mov    DWORD PTR [ebp-0x8],eax
  426d25:	mov    eax,DWORD PTR [ebp+0xc]
  426d28:	mov    DWORD PTR [ebp-0x10],eax
  426d2b:	mov    eax,DWORD PTR [ebp-0x4]
  426d2e:	xor    eax,edi
  426d30:	add    eax,esi
  426d32:	mov    DWORD PTR [ebp+0x10],eax
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	push   ebx
  426d39:	call   0x426a63
  426d3e:	mov    ebx,eax
  426d40:	mov    eax,DWORD PTR [ebp+0x8]
  426d43:	mov    eax,DWORD PTR [eax+0x14]
  426d46:	jmp    0x426da0
  426d48:	mov    eax,DWORD PTR [ebp+0xc]
  426d4b:	sub    eax,0x8
  426d4e:	mov    DWORD PTR [ebp-0xc],eax
  426d51:	mov    eax,DWORD PTR [ebp-0xc]
  426d54:	mov    eax,DWORD PTR [eax+0x28]
  426d57:	call   0x42694b
  426d5c:	mov    DWORD PTR [ebp+0x10],eax
  426d5f:	push   DWORD PTR [ebp+0x10]
  426d62:	mov    edx,DWORD PTR [ebp-0x8]
  426d65:	call   0x426af2
  426d6a:	mov    eax,DWORD PTR [ebp-0x4]
  426d6d:	xor    eax,edi
  426d6f:	add    eax,esi
  426d71:	cmp    eax,ebx
  426d73:	jne    0x426d7d
  426d75:	mov    eax,DWORD PTR [ebp-0x8]
  426d78:	call   0x4269d9
  426d7d:	mov    eax,DWORD PTR [ebp-0x14]
  426d80:	xor    eax,edi
  426d82:	add    eax,esi
  426d84:	push   eax
  426d85:	push   DWORD PTR [ebp-0x10]
  426d88:	mov    eax,DWORD PTR [ebp-0x8]
  426d8b:	call   0x426705
  426d90:	mov    ecx,DWORD PTR [ebp-0x4]
  426d93:	xor    ecx,edi
  426d95:	add    ecx,esi
  426d97:	cmp    eax,ecx
  426d99:	je     0x426dbe
  426d9b:	mov    eax,DWORD PTR [ebp+0xc]
  426d9e:	mov    eax,DWORD PTR [eax]
  426da0:	mov    DWORD PTR [ebp+0xc],eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    ecx,DWORD PTR [ebp+0xc]
  426da9:	add    eax,0x14
  426dac:	cmp    ecx,eax
  426dae:	jne    0x426d48
  426db0:	mov    eax,DWORD PTR [ebp-0x4]
  426db3:	xor    eax,edi
  426db5:	add    eax,esi
  426db7:	pop    ebx
  426db8:	pop    edi
  426db9:	pop    esi
  426dba:	leave  
  426dbb:	ret    0xc
  426dbe:	mov    eax,DWORD PTR [ebp-0xc]
  426dc1:	mov    eax,DWORD PTR [eax+0x18]
  426dc4:	jmp    0x426db7
  426dc6:	push   ebp
  426dc7:	mov    ebp,esp
  426dc9:	mov    eax,DWORD PTR [ebp+0xc]
  426dcc:	sub    esp,0x10
  426dcf:	cmp    DWORD PTR [ebp+0x8],0x0
  426dd3:	push   ebx
  426dd4:	push   esi
  426dd5:	push   edi
  426dd6:	je     0x426e8b
  426ddc:	test   eax,eax
  426dde:	je     0x426e8b
  426de4:	movzx  eax,WORD PTR [eax+0x20]
  426de8:	mov    ecx,eax
  426dea:	mov    DWORD PTR [ebp-0x10],eax
  426ded:	xor    edx,edx
  426def:	and    DWORD PTR [ebp-0x8],edx
  426df2:	mov    eax,0x8a9c
  426df7:	xor    ecx,eax
  426df9:	add    ecx,0x3b5e
  426dff:	mov    DWORD PTR [ebp-0xc],ecx
  426e02:	and    DWORD PTR [ebp-0x4],0x0
  426e06:	xor    ecx,ecx
  426e08:	push   0x7d
  426e0a:	pop    edi
  426e0b:	cmp    cx,WORD PTR [ebp-0xc]
  426e0f:	jae    0x426e75
  426e11:	lea    esi,[edx-0x3b5e]
  426e17:	xor    esi,eax
  426e19:	movzx  ecx,WORD PTR [ebp-0x4]
  426e1d:	mov    ebx,DWORD PTR [ebp+0xc]
  426e20:	lea    ecx,[ebx+ecx*4]
  426e23:	cmp    WORD PTR [ecx+0x2],si
  426e27:	jne    0x426e60
  426e29:	movzx  ecx,WORD PTR [ecx]
  426e2c:	mov    edi,0x4e3e
  426e31:	cmp    cx,di
  426e34:	jne    0x426e42
  426e36:	mov    ebx,DWORD PTR [ebp+0x8]
  426e39:	movzx  edi,dx
  426e3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  426e40:	je     0x426e6f
  426e42:	mov    ebx,DWORD PTR [ebp+0x8]
  426e45:	movzx  edi,dx
  426e48:	movsx  di,BYTE PTR [edi+ebx*1]
  426e4d:	mov    ebx,0x3b5e
  426e52:	sub    di,bx
  426e55:	xor    di,ax
  426e58:	cmp    cx,di
  426e5b:	je     0x426e6f
  426e5d:	push   0x7b
  426e5f:	pop    edi
  426e60:	inc    DWORD PTR [ebp-0x4]
  426e63:	mov    cx,WORD PTR [ebp-0xc]
  426e67:	cmp    WORD PTR [ebp-0x4],cx
  426e6b:	jb     0x426e19
  426e6d:	jmp    0x426e75
  426e6f:	inc    DWORD PTR [ebp-0x8]
  426e72:	push   0x7c
  426e74:	pop    edi
  426e75:	mov    esi,DWORD PTR [ebp+0x8]
  426e78:	movzx  ecx,dx
  426e7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  426e7f:	je     0x426e94
  426e81:	inc    edx
  426e82:	cmp    edi,0x7b
  426e85:	jne    0x426e02
  426e8b:	xor    eax,eax
  426e8d:	pop    edi
  426e8e:	pop    esi
  426e8f:	pop    ebx
  426e90:	leave  
  426e91:	ret    0x8
  426e94:	mov    ecx,DWORD PTR [ebp-0x8]
  426e97:	add    ecx,0xffffc4a2
  426e9d:	xor    cx,ax
  426ea0:	xor    eax,eax
  426ea2:	cmp    cx,WORD PTR [ebp-0x10]
  426ea6:	sete   al
  426ea9:	jmp    0x426e8d
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	sub    esp,0x50
  426eb1:	push   edi
  426eb2:	mov    edi,eax
  426eb4:	mov    eax,DWORD PTR [edi+0x1a8]
  426eba:	cmp    DWORD PTR [eax],0x0
  426ebd:	jne    0x426ec6
  426ebf:	xor    eax,eax
  426ec1:	jmp    0x426ff7
  426ec6:	push   DWORD PTR [ebp+0x8]
  426ec9:	push   0x2c
  426ecb:	pop    eax
  426ecc:	call   0x426c5b
  426ed1:	mov    edx,DWORD PTR [edi+0x1ac]
  426ed7:	lea    eax,[edi+0x22]
  426eda:	mov    DWORD PTR [ebp-0x4c],eax
  426edd:	lea    eax,[edi+0x44]
  426ee0:	mov    DWORD PTR [ebp-0x48],eax
  426ee3:	lea    eax,[edi+0x66]
  426ee6:	mov    DWORD PTR [ebp-0x44],eax
  426ee9:	lea    eax,[edi+0x88]
  426eef:	mov    DWORD PTR [ebp-0x40],eax
  426ef2:	lea    eax,[edi+0xaa]
  426ef8:	mov    DWORD PTR [ebp-0x3c],eax
  426efb:	lea    eax,[edi+0xcc]
  426f01:	mov    DWORD PTR [ebp-0x38],eax
  426f04:	lea    eax,[edi+0xee]
  426f0a:	mov    DWORD PTR [ebp-0x34],eax
  426f0d:	lea    eax,[edi+0x110]
  426f13:	mov    DWORD PTR [ebp-0x30],eax
  426f16:	lea    eax,[edi+0x132]
  426f1c:	mov    DWORD PTR [ebp-0x2c],eax
  426f1f:	lea    eax,[edi+0x154]
  426f25:	push   edi
  426f26:	mov    DWORD PTR [ebp-0x50],edi
  426f29:	mov    DWORD PTR [ebp-0x28],eax
  426f2c:	call   0x42702b
  426f31:	push   eax
  426f32:	mov    eax,DWORD PTR [edi+0x1a8]
  426f38:	push   DWORD PTR [eax]
  426f3a:	call   0x426ccc
  426f3f:	mov    DWORD PTR [ebp-0x10],eax
  426f42:	test   eax,eax
  426f44:	je     0x426ff7
  426f4a:	mov    ecx,DWORD PTR [eax+0x3c]
  426f4d:	push   ebx
  426f4e:	push   esi
  426f4f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426f53:	add    esi,eax
  426f55:	mov    edi,DWORD PTR [esi+0x24]
  426f58:	mov    ecx,DWORD PTR [esi+0x1c]
  426f5b:	mov    edx,DWORD PTR [esi+0x20]
  426f5e:	mov    ebx,DWORD PTR [esi+0x18]
  426f61:	add    edi,eax
  426f63:	mov    DWORD PTR [ebp-0x20],edi
  426f66:	mov    edi,DWORD PTR [esi+0x14]
  426f69:	add    ecx,eax
  426f6b:	add    edx,eax
  426f6d:	mov    DWORD PTR [ebp-0xc],ecx
  426f70:	mov    DWORD PTR [ebp-0x1c],edx
  426f73:	mov    DWORD PTR [ebp-0x8],edi
  426f76:	cmp    edi,ebx
  426f78:	ja     0x426f7d
  426f7a:	mov    DWORD PTR [ebp-0x8],ebx
  426f7d:	xor    ebx,ebx
  426f7f:	mov    DWORD PTR [ebp-0x18],ebx
  426f82:	cmp    DWORD PTR [ebp-0x8],ebx
  426f85:	jbe    0x426ff5
  426f87:	jmp    0x426f8c
  426f89:	mov    edx,DWORD PTR [ebp-0x1c]
  426f8c:	mov    edi,DWORD PTR [ebp-0x20]
  426f8f:	movzx  edi,WORD PTR [edi+ebx*2]
  426f93:	cmp    ebx,DWORD PTR [esi+0x18]
  426f96:	jae    0x426ff5
  426f98:	cmp    edi,DWORD PTR [esi+0x14]
  426f9b:	jae    0x426ff5
  426f9d:	mov    ebx,DWORD PTR [edx+ebx*4]
  426fa0:	mov    edx,DWORD PTR [ebp+0x8]
  426fa3:	mov    edi,DWORD PTR [ecx+edi*4]
  426fa6:	mov    DWORD PTR [ebp-0x4],edx
  426fa9:	lea    edx,[ebp-0x50]
  426fac:	add    ebx,eax
  426fae:	add    edi,eax
  426fb0:	sub    edx,DWORD PTR [ebp+0x8]
  426fb3:	mov    DWORD PTR [ebp-0x14],0xb
  426fba:	mov    DWORD PTR [ebp-0x24],edx
  426fbd:	mov    edx,DWORD PTR [ebp-0x4]
  426fc0:	cmp    DWORD PTR [edx],0x0
  426fc3:	jne    0x426fe0
  426fc5:	mov    eax,DWORD PTR [ebp-0x24]
  426fc8:	push   DWORD PTR [eax+edx*1]
  426fcb:	push   ebx
  426fcc:	call   0x426dc6
  426fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd4:	test   eax,eax
  426fd6:	je     0x426fdd
  426fd8:	mov    eax,DWORD PTR [ebp-0x4]
  426fdb:	mov    DWORD PTR [eax],edi
  426fdd:	mov    eax,DWORD PTR [ebp-0x10]
  426fe0:	add    DWORD PTR [ebp-0x4],0x4
  426fe4:	dec    DWORD PTR [ebp-0x14]
  426fe7:	jne    0x426fbd
  426fe9:	mov    ebx,DWORD PTR [ebp-0x18]
  426fec:	inc    ebx
  426fed:	mov    DWORD PTR [ebp-0x18],ebx
  426ff0:	cmp    ebx,DWORD PTR [ebp-0x8]
  426ff3:	jb     0x426f89
  426ff5:	pop    esi
  426ff6:	pop    ebx
  426ff7:	pop    edi
  426ff8:	leave  
  426ff9:	ret    0x4
  426ffc:	push   ebp
  426ffd:	mov    ebp,esp
  426fff:	mov    eax,DWORD PTR [ebp+0x8]
  427002:	push   esi
  427003:	push   DWORD PTR [eax+0x1e0]
  427009:	lea    esi,[eax+0x198]
  42700f:	mov    eax,DWORD PTR [ebp+0x8]
  427012:	call   0x426eab
  427017:	mov    ecx,DWORD PTR [esi]
  427019:	mov    DWORD PTR [ecx],eax
  42701b:	mov    eax,DWORD PTR [esi]
  42701d:	xor    ecx,ecx
  42701f:	cmp    DWORD PTR [eax],ecx
  427021:	pop    esi
  427022:	setne  cl
  427025:	mov    eax,ecx
  427027:	pop    ebp
  427028:	ret    0x4
  42702b:	mov    ecx,DWORD PTR [edi+0x188]
  427031:	push   ebx
  427032:	jmp    0x427047
  427034:	xor    eax,0x8a9c
  427039:	add    eax,0x3b5e
  42703e:	mov    WORD PTR [ecx],ax
  427041:	add    ecx,0x2
  427044:	add    edx,0x2
  427047:	movzx  eax,WORD PTR [edx]
  42704a:	mov    ebx,0x4e3e
  42704f:	cmp    ax,bx
  427052:	jne    0x427034
  427054:	xor    eax,eax
  427056:	mov    WORD PTR [ecx],ax
  427059:	mov    eax,DWORD PTR [edi+0x188]
  42705f:	pop    ebx
  427060:	ret    
  427061:	push   edi
  427062:	mov    edi,eax
  427064:	mov    eax,DWORD PTR [esi+0x188]
  42706a:	shl    edi,0x6
  42706d:	add    eax,edi
  42706f:	jmp    0x42707b
  427071:	xor    cl,0x80
  427074:	add    cl,0x5
  427077:	mov    BYTE PTR [eax],cl
  427079:	inc    eax
  42707a:	inc    edx
  42707b:	mov    cl,BYTE PTR [edx]
  42707d:	cmp    cl,0x7b
  427080:	jne    0x427071
  427082:	mov    BYTE PTR [eax],0x0
  427085:	mov    eax,DWORD PTR [esi+0x188]
  42708b:	add    eax,edi
  42708d:	pop    edi
  42708e:	ret    
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x14
  427095:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42709c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4270a3:	mov    eax,DWORD PTR [ebx]
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4270af:	push   esi
  4270b0:	push   edi
  4270b1:	mov    DWORD PTR [ebp-0x14],0xead71899
  4270b8:	mov    edi,DWORD PTR [ebp-0x4]
  4270bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4270be:	mov    eax,0x75108b1
  4270c3:	xor    edi,eax
  4270c5:	mov    edx,0x3272f8
  4270ca:	xor    ecx,eax
  4270cc:	add    edi,edx
  4270ce:	add    ecx,edx
  4270d0:	imul   edi,ecx
  4270d3:	jmp    0x42711b
  4270d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4270d8:	mov    esi,DWORD PTR [ebp-0x4]
  4270db:	xor    ecx,eax
  4270dd:	xor    esi,eax
  4270df:	add    ecx,edx
  4270e1:	add    esi,edx
  4270e3:	test   esi,ecx
  4270e5:	mov    esi,DWORD PTR [ebp-0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4270eb:	je     0x427102
  4270ed:	xor    ecx,eax
  4270ef:	xor    esi,eax
  4270f1:	add    ecx,edx
  4270f3:	add    esi,edx
  4270f5:	shr    esi,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4270fa:	xor    ecx,eax
  4270fc:	add    ecx,edx
  4270fe:	xor    esi,ecx
  427100:	jmp    0x42710c
  427102:	xor    esi,eax
  427104:	xor    ecx,eax
  427106:	add    esi,edx
  427108:	add    ecx,edx
  42710a:	shr    esi,cl
  42710c:	mov    DWORD PTR [ebp-0x8],esi
  42710f:	mov    ecx,DWORD PTR [ebp-0x4]
  427112:	xor    ecx,eax
  427114:	lea    edi,[edi+ecx*1+0x3272f8]
  42711b:	mov    ecx,DWORD PTR [ebp-0xc]
  42711e:	mov    esi,DWORD PTR [ebp-0x4]
  427121:	xor    esi,eax
  427123:	xor    ecx,eax
  427125:	sub    ecx,esi
  427127:	cmp    edi,ecx
  427129:	jbe    0x4270d5
  42712b:	mov    eax,DWORD PTR [ebp-0x8]
  42712e:	pop    edi
  42712f:	mov    DWORD PTR [ebx],eax
  427131:	mov    eax,DWORD PTR [ebp-0x8]
  427134:	pop    esi
  427135:	leave  
  427136:	ret    
  427137:	push   ebp
  427138:	mov    ebp,esp
  42713a:	sub    esp,0x38
  42713d:	push   ebx
  42713e:	mov    ebx,0xf89c85b9
  427143:	mov    DWORD PTR [ebp-0x4],ebx
  427146:	lea    ecx,[ebx-0x1]
  427149:	mov    DWORD PTR [ebp-0x24],ecx
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	mov    edx,DWORD PTR [ebp+0x8]
  427152:	push   esi
  427153:	mov    esi,0x75108b1
  427158:	xor    eax,esi
  42715a:	push   edi
  42715b:	mov    edi,0x3272f8
  427160:	add    eax,edi
  427162:	cmp    edx,eax
  427164:	mov    eax,DWORD PTR [ebp-0x4]
  427167:	je     0x4272cc
  42716d:	mov    edx,DWORD PTR [ebp+0xc]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	cmp    edx,eax
  427176:	je     0x4272c9
  42717c:	mov    eax,DWORD PTR [ebp+0x10]
  42717f:	mov    edx,DWORD PTR [ebp+0xc]
  427182:	mov    DWORD PTR [ebp-0x14],eax
  427185:	mov    eax,DWORD PTR [ebp+0x8]
  427188:	mov    DWORD PTR [ebp-0x18],0xf89c8523
  42718f:	mov    DWORD PTR [ebp-0xc],eax
  427192:	lea    eax,[ebx+0x2]
  427195:	mov    DWORD PTR [ebp-0x1c],eax
  427198:	mov    DWORD PTR [ebp-0x10],ebx
  42719b:	mov    DWORD PTR [ebp+0xc],ecx
  42719e:	mov    DWORD PTR [ebp+0x10],eax
  4271a1:	mov    eax,DWORD PTR [ebp+0xc]
  4271a4:	xor    eax,esi
  4271a6:	mov    DWORD PTR [ebp-0x20],edx
  4271a9:	sub    edx,eax
  4271ab:	sub    edx,edi
  4271ad:	mov    DWORD PTR [ebp+0x8],edx
  4271b0:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4271b7:	jmp    0x4272b9
  4271bc:	mov    eax,DWORD PTR [ebp+0xc]
  4271bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c2:	xor    eax,esi
  4271c4:	xor    ecx,esi
  4271c6:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4271cd:	mov    eax,DWORD PTR [ebp+0x8]
  4271d0:	xor    edx,edx
  4271d2:	div    ecx
  4271d4:	mov    eax,DWORD PTR [ebp+0x10]
  4271d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4271da:	xor    eax,esi
  4271dc:	xor    ecx,esi
  4271de:	sub    eax,ecx
  4271e0:	cmp    edx,eax
  4271e2:	jne    0x427278
  4271e8:	mov    eax,DWORD PTR [ebp+0x8]
  4271eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ee:	mov    dl,BYTE PTR [eax+ecx*1]
  4271f1:	mov    eax,DWORD PTR [ebp-0x10]
  4271f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4271f7:	xor    eax,esi
  4271f9:	xor    ecx,esi
  4271fb:	add    eax,edi
  4271fd:	add    ecx,edi
  4271ff:	cmp    eax,ecx
  427201:	jae    0x427249
  427203:	lea    ecx,[eax-0x3272f8]
  427209:	mov    DWORD PTR [ebp-0x4],ecx
  42720c:	mov    ebx,DWORD PTR [ebp-0x4]
  42720f:	xor    ebx,esi
  427211:	add    ebx,0x7f55d8fb
  427217:	lea    ecx,[ebp+eax*4-0x38]
  42721b:	mov    DWORD PTR [ecx],ebx
  42721d:	mov    ebx,DWORD PTR [ecx]
  42721f:	cmp    ebx,0x244ecb9a
  427225:	jbe    0x42722f
  427227:	add    DWORD PTR [ecx],0x405fcdd
  42722d:	jmp    0x427235
  42722f:	add    DWORD PTR [ecx],0xfdaf4323
  427235:	mov    ecx,DWORD PTR [ebp-0x8]
  427238:	xor    ecx,esi
  42723a:	inc    eax
  42723b:	inc    DWORD PTR [ebp-0x4]
  42723e:	add    ecx,edi
  427240:	cmp    eax,ecx
  427242:	jb     0x42720c
  427244:	mov    ebx,0xf89c85b9
  427249:	cmp    DWORD PTR [ebp-0x14],0x0
  42724d:	jne    0x427257
  42724f:	xor    dl,0x80
  427252:	add    dl,0x5
  427255:	jmp    0x42726d
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	xor    al,0xb1
  42725c:	mov    cl,0x8
  42725e:	sub    cl,al
  427260:	add    dl,cl
  427262:	mov    ecx,DWORD PTR [ebp-0x1c]
  427265:	xor    cl,0xb1
  427268:	sub    cl,0x8
  42726b:	ror    dl,cl
  42726d:	xor    eax,eax
  42726f:	mov    eax,DWORD PTR [ebp+0x8]
  427272:	mov    ecx,DWORD PTR [ebp-0xc]
  427275:	mov    BYTE PTR [eax+ecx*1],dl
  427278:	mov    eax,DWORD PTR [ebp+0x8]
  42727b:	mov    ecx,DWORD PTR [ebp-0x10]
  42727e:	sub    eax,edi
  427280:	xor    eax,esi
  427282:	cmp    eax,ecx
  427284:	jne    0x4272a7
  427286:	mov    eax,DWORD PTR [ebp+0x10]
  427289:	mov    ecx,DWORD PTR [ebp+0xc]
  42728c:	xor    eax,esi
  42728e:	xor    ecx,esi
  427290:	sub    eax,ecx
  427292:	mov    ecx,DWORD PTR [ebp-0x20]
  427295:	sub    eax,edi
  427297:	xor    eax,esi
  427299:	mov    DWORD PTR [ebp+0x10],eax
  42729c:	mov    eax,DWORD PTR [ebp+0xc]
  42729f:	xor    eax,esi
  4272a1:	sub    ecx,eax
  4272a3:	sub    ecx,edi
  4272a5:	jmp    0x4272b6
  4272a7:	mov    eax,DWORD PTR [ebp+0xc]
  4272aa:	xor    eax,esi
  4272ac:	mov    ecx,0xffcd8d08
  4272b1:	sub    ecx,eax
  4272b3:	add    ecx,DWORD PTR [ebp+0x8]
  4272b6:	mov    DWORD PTR [ebp+0x8],ecx
  4272b9:	mov    eax,DWORD PTR [ebp+0x10]
  4272bc:	cmp    eax,ebx
  4272be:	jne    0x4271bc
  4272c4:	mov    eax,DWORD PTR [ebp-0x24]
  4272c7:	jmp    0x4272cc
  4272c9:	mov    eax,DWORD PTR [ebp-0x4]
  4272cc:	xor    eax,esi
  4272ce:	add    eax,edi
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	leave  
  4272d4:	ret    0xc
  4272d7:	push   ebp
  4272d8:	mov    ebp,esp
  4272da:	sub    esp,0x420
  4272e0:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4272e7:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4272ee:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4272f5:	push   ebx
  4272f6:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	push   esi
  427301:	mov    esi,0x75108b1
  427306:	push   edi
  427307:	xor    eax,esi
  427309:	mov    edi,0x3272f8
  42730e:	add    eax,edi
  427310:	mov    DWORD PTR [ebp-0x8],eax
  427313:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  42731a:	mov    DWORD PTR [ebp-0x4],0xead71899
  427321:	mov    DWORD PTR [ebp-0x10],0x8
  427328:	mov    ecx,ecx
  42732a:	mov    eax,DWORD PTR [ebp-0xc]
  42732d:	mov    ecx,DWORD PTR [ebp-0x14]
  427330:	xor    eax,esi
  427332:	xor    ecx,esi
  427334:	add    eax,edi
  427336:	add    ecx,edi
  427338:	imul   eax,ecx
  42733b:	jmp    0x42736e
  42733d:	mov    eax,DWORD PTR [ebp-0x4]
  427340:	sub    eax,edi
  427342:	xor    eax,esi
  427344:	mov    DWORD PTR [ebp-0x8],eax
  427347:	lea    ebx,[ebp-0x8]
  42734a:	call   0x42708f
  42734f:	mov    DWORD PTR [ebp-0x8],eax
  427352:	mov    eax,DWORD PTR [ebp-0x8]
  427355:	mov    ecx,DWORD PTR [ebp-0x4]
  427358:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42735f:	mov    eax,DWORD PTR [ebp-0xc]
  427362:	mov    ecx,DWORD PTR [ebp-0x4]
  427365:	xor    eax,esi
  427367:	lea    eax,[eax+ecx*1+0x3272f8]
  42736e:	mov    DWORD PTR [ebp-0x4],eax
  427371:	mov    eax,DWORD PTR [ebp-0x18]
  427374:	mov    ecx,DWORD PTR [ebp-0xc]
  427377:	xor    ecx,esi
  427379:	xor    eax,esi
  42737b:	sub    eax,ecx
  42737d:	mov    ecx,DWORD PTR [ebp-0x4]
  427380:	cmp    ecx,eax
  427382:	jbe    0x42733d
  427384:	mov    eax,DWORD PTR [ebp-0x1c]
  427387:	xor    eax,esi
  427389:	add    eax,edi
  42738b:	mov    DWORD PTR [ebp-0x8],eax
  42738e:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  427395:	mov    ebx,ebx
  427397:	jmp    0x4273fa
  427399:	mov    ecx,DWORD PTR [ebp-0x20]
  42739c:	mov    eax,DWORD PTR [ebp-0x8]
  42739f:	xor    ecx,esi
  4273a1:	add    ecx,edi
  4273a3:	shr    eax,cl
  4273a5:	mov    DWORD PTR [ebp-0x4],eax
  4273a8:	mov    eax,DWORD PTR [ebp+0x8]
  4273ab:	mov    cl,BYTE PTR [eax]
  4273ad:	mov    BYTE PTR [ebp+0xb],cl
  4273b0:	mov    cl,BYTE PTR [ebp+0xb]
  4273b3:	mov    edx,DWORD PTR [ebp-0x8]
  4273b6:	movzx  ecx,cl
  4273b9:	xor    ecx,edx
  4273bb:	mov    DWORD PTR [ebp+0x8],ecx
  4273be:	mov    ecx,DWORD PTR [ebp-0x18]
  4273c1:	mov    edx,DWORD PTR [ebp+0x8]
  4273c4:	xor    ecx,esi
  4273c6:	add    ecx,edi
  4273c8:	and    ecx,edx
  4273ca:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4273d1:	mov    edx,DWORD PTR [ebp-0x4]
  4273d4:	xor    ecx,edx
  4273d6:	mov    DWORD PTR [ebp-0x8],ecx
  4273d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4273dc:	xor    ecx,esi
  4273de:	lea    eax,[eax+ecx*1+0x3272f8]
  4273e5:	mov    DWORD PTR [ebp+0x8],eax
  4273e8:	mov    eax,DWORD PTR [ebp-0xc]
  4273eb:	xor    eax,esi
  4273ed:	mov    ecx,0xffcd8d08
  4273f2:	sub    ecx,eax
  4273f4:	add    ecx,DWORD PTR [ebp-0x10]
  4273f7:	mov    DWORD PTR [ebp-0x10],ecx
  4273fa:	mov    eax,DWORD PTR [ebp-0x14]
  4273fd:	mov    ecx,DWORD PTR [ebp-0x10]
  427400:	xor    eax,esi
  427402:	add    eax,edi
  427404:	cmp    ecx,eax
  427406:	jne    0x427399
  427408:	mov    eax,DWORD PTR [ebp-0x1c]
  42740b:	mov    ecx,DWORD PTR [ebp-0x8]
  42740e:	xor    eax,esi
  427410:	add    eax,edi
  427412:	pop    edi
  427413:	pop    esi
  427414:	xor    eax,ecx
  427416:	pop    ebx
  427417:	leave  
  427418:	ret    0x4
  42741b:	push   ebp
  42741c:	mov    ebp,esp
  42741e:	mov    eax,DWORD PTR [ebp+0x1c]
  427421:	mov    ecx,DWORD PTR [ebp+0x8]
  427424:	mov    edx,DWORD PTR [ebp+0x10]
  427427:	mov    eax,DWORD PTR [eax+0x190]
  42742d:	mov    eax,DWORD PTR [eax]
  42742f:	sub    esp,0x64
  427432:	push   ebx
  427433:	push   esi
  427434:	push   edi
  427435:	mov    edi,0x75108b1
  42743a:	xor    ecx,edi
  42743c:	mov    ebx,0x3272f8
  427441:	add    ecx,ebx
  427443:	cmp    ecx,edx
  427445:	jne    0x427456
  427447:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  427451:	jmp    0x427952
  427456:	mov    ecx,DWORD PTR [ebp+0x8]
  427459:	mov    esi,DWORD PTR [ebp+0x14]
  42745c:	mov    edx,DWORD PTR [esi]
  42745e:	xor    ecx,edi
  427460:	add    ecx,ebx
  427462:	cmp    edx,ecx
  427464:	je     0x42790d
  42746a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42746d:	mov    DWORD PTR [ebp-0x1c],eax
  427470:	mov    DWORD PTR [ebp+0x1c],ecx
  427473:	mov    ecx,DWORD PTR [ebp+0x18]
  427476:	mov    eax,DWORD PTR [esi]
  427478:	mov    DWORD PTR [ebp-0x20],eax
  42747b:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427482:	mov    edx,0xf89c85b8
  427487:	mov    DWORD PTR [ebp-0x8],edx
  42748a:	mov    eax,DWORD PTR [ebp+0x1c]
  42748d:	mov    DWORD PTR [ebp+0x1c],eax
  427490:	mov    eax,DWORD PTR [ebp+0x1c]
  427493:	mov    eax,DWORD PTR [eax+0x190]
  427499:	mov    eax,DWORD PTR [eax]
  42749b:	mov    DWORD PTR [ebp-0x24],ecx
  42749e:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274a1:	mov    ecx,DWORD PTR [ecx+0x190]
  4274a7:	mov    ecx,DWORD PTR [ecx]
  4274a9:	add    ecx,DWORD PTR [eax+0x3c]
  4274ac:	mov    DWORD PTR [ebp+0x10],ecx
  4274af:	mov    eax,DWORD PTR [ebp+0x8]
  4274b2:	xor    eax,edi
  4274b4:	add    eax,ebx
  4274b6:	mov    DWORD PTR [ebp-0x4],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	xor    eax,edi
  4274be:	add    eax,ebx
  4274c0:	mov    DWORD PTR [ebp+0x18],eax
  4274c3:	mov    eax,DWORD PTR [ebp+0x10]
  4274c6:	mov    eax,DWORD PTR [eax+0x50]
  4274c9:	sub    eax,0xc
  4274cc:	mov    DWORD PTR [ebp-0x28],eax
  4274cf:	mov    eax,DWORD PTR [ebp+0x10]
  4274d2:	mov    eax,DWORD PTR [eax+0x38]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x10]
  4274d8:	dec    eax
  4274d9:	test   DWORD PTR [ecx+0x54],eax
  4274dc:	mov    eax,DWORD PTR [ebp+0x10]
  4274df:	je     0x4274f9
  4274e1:	mov    eax,DWORD PTR [eax+0x38]
  4274e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4274e7:	mov    ecx,DWORD PTR [ecx+0x54]
  4274ea:	dec    eax
  4274eb:	not    eax
  4274ed:	and    ecx,eax
  4274ef:	mov    eax,DWORD PTR [ebp+0x10]
  4274f2:	mov    eax,DWORD PTR [eax+0x38]
  4274f5:	add    eax,ecx
  4274f7:	jmp    0x4274fc
  4274f9:	mov    eax,DWORD PTR [eax+0x54]
  4274fc:	mov    DWORD PTR [ebp+0x1c],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0x8]
  427502:	xor    eax,edi
  427504:	add    eax,ebx
  427506:	mov    DWORD PTR [ebp+0x18],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	xor    eax,edi
  42750e:	add    eax,ebx
  427510:	mov    DWORD PTR [ebp+0x18],eax
  427513:	mov    eax,DWORD PTR [ebp+0x8]
  427516:	mov    ecx,DWORD PTR [ebp-0x24]
  427519:	xor    eax,edi
  42751b:	add    eax,ebx
  42751d:	mov    DWORD PTR [ecx],eax
  42751f:	mov    DWORD PTR [ebp+0x18],edx
  427522:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427529:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427530:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427537:	mov    eax,DWORD PTR [ebp-0x8]
  42753a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42753d:	xor    eax,edi
  42753f:	add    eax,ebx
  427541:	imul   eax,ecx
  427544:	mov    ecx,DWORD PTR [ebp+0x8]
  427547:	mov    edx,DWORD PTR [ebp-0x28]
  42754a:	xor    ecx,edi
  42754c:	lea    ecx,[ecx+edx*1+0x3272f8]
  427553:	cmp    eax,ecx
  427555:	jae    0x427906
  42755b:	mov    eax,DWORD PTR [ebp+0x8]
  42755e:	xor    eax,edi
  427560:	add    eax,ebx
  427562:	mov    DWORD PTR [ebp+0x18],eax
  427565:	mov    eax,DWORD PTR [ebp+0x1c]
  427568:	add    eax,DWORD PTR [ebp-0x1c]
  42756b:	mov    DWORD PTR [ebp-0x4],eax
  42756e:	push   DWORD PTR [ebp-0x4]
  427571:	mov    esi,DWORD PTR [ebp-0x1c]
  427574:	mov    ecx,DWORD PTR [ebp+0x10]
  427577:	call   0x4266c7
  42757c:	mov    DWORD PTR [ebp+0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  427586:	mov    eax,DWORD PTR [ebp-0x18]
  427589:	xor    eax,edi
  42758b:	lea    ecx,[ebp-0x40]
  42758e:	add    eax,ebx
  427590:	push   ecx
  427591:	call   0x426c5b
  427596:	mov    eax,DWORD PTR [ebp+0xc]
  427599:	test   eax,eax
  42759b:	je     0x4275eb
  42759d:	mov    eax,DWORD PTR [ebp-0x18]
  4275a0:	xor    eax,edi
  4275a2:	add    eax,ebx
  4275a4:	push   eax
  4275a5:	push   DWORD PTR [ebp+0xc]
  4275a8:	lea    eax,[ebp-0x40]
  4275ab:	push   eax
  4275ac:	call   0x426b51
  4275b1:	mov    eax,DWORD PTR [ebp-0x4]
  4275b4:	mov    DWORD PTR [ebp-0x18],eax
  4275b7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4275bd:	sub    eax,ecx
  4275bf:	mov    DWORD PTR [ebp-0x18],eax
  4275c2:	mov    eax,DWORD PTR [ebp+0xc]
  4275c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4275c8:	mov    eax,DWORD PTR [eax+0x10]
  4275cb:	add    eax,DWORD PTR [ecx+0xc]
  4275ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d1:	cmp    ecx,eax
  4275d3:	jb     0x4275eb
  4275d5:	mov    eax,DWORD PTR [ebp+0xc]
  4275d8:	mov    eax,DWORD PTR [eax+0xc]
  4275db:	mov    ecx,DWORD PTR [ebp+0xc]
  4275de:	add    eax,DWORD PTR [ecx+0x8]
  4275e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e4:	sub    eax,ecx
  4275e6:	jmp    0x4278d9
  4275eb:	push   0xc
  4275ed:	push   DWORD PTR [ebp-0x4]
  4275f0:	lea    eax,[ebp-0x4c]
  4275f3:	push   eax
  4275f4:	call   0x426b51
  4275f9:	mov    eax,0xf89c85b9
  4275fe:	mov    DWORD PTR [ebp-0x2c],eax
  427601:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427608:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42760f:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427616:	lea    ecx,[ebp-0x2c]
  427619:	mov    DWORD PTR [ebp-0xc],ecx
  42761c:	lea    ecx,[ebp-0x30]
  42761f:	mov    DWORD PTR [ebp-0x10],ecx
  427622:	lea    ecx,[ebp-0x34]
  427625:	mov    DWORD PTR [ebp+0xc],ecx
  427628:	lea    ecx,[ebp-0x38]
  42762b:	mov    DWORD PTR [ebp-0x14],ecx
  42762e:	mov    ecx,DWORD PTR [ebp+0x8]
  427631:	xor    ecx,edi
  427633:	add    ecx,ebx
  427635:	mov    DWORD PTR [ebp-0x18],ecx
  427638:	jmp    0x427834
  42763d:	cmp    eax,0xf89c85bb
  427642:	je     0x427846
  427648:	mov    ecx,DWORD PTR [ebp-0x8]
  42764b:	xor    ecx,edi
  42764d:	mov    esi,eax
  42764f:	add    ecx,ebx
  427651:	mov    DWORD PTR [ebp+0x18],ecx
  427654:	mov    eax,DWORD PTR [ebp-0x18]
  427657:	xor    esi,edi
  427659:	lea    eax,[eax+esi*1+0x3272f8]
  427660:	mov    DWORD PTR [ebp-0x18],eax
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,edi
  42766b:	add    eax,ebx
  42766d:	cmp    ecx,eax
  42766f:	jne    0x427684
  427671:	mov    eax,DWORD PTR [ebp+0x8]
  427674:	xor    eax,edi
  427676:	add    eax,ebx
  427678:	push   eax
  427679:	push   0xc
  42767b:	lea    eax,[ebp-0x4c]
  42767e:	push   eax
  42767f:	call   0x427137
  427684:	mov    eax,DWORD PTR [ebp-0xc]
  427687:	mov    eax,DWORD PTR [eax]
  427689:	xor    eax,edi
  42768b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427692:	mov    ecx,DWORD PTR [ebp+0x8]
  427695:	xor    ecx,edi
  427697:	movzx  eax,al
  42769a:	add    ecx,ebx
  42769c:	cmp    eax,ecx
  42769e:	je     0x42781c
  4276a4:	mov    eax,DWORD PTR [ebp-0x10]
  4276a7:	mov    eax,DWORD PTR [eax]
  4276a9:	xor    eax,edi
  4276ab:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276b5:	xor    ecx,edi
  4276b7:	movzx  eax,al
  4276ba:	add    ecx,ebx
  4276bc:	cmp    eax,ecx
  4276be:	je     0x42781c
  4276c4:	mov    eax,DWORD PTR [ebp+0xc]
  4276c7:	mov    eax,DWORD PTR [eax]
  4276c9:	xor    eax,edi
  4276cb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276d5:	xor    ecx,edi
  4276d7:	movzx  eax,al
  4276da:	add    ecx,ebx
  4276dc:	cmp    eax,ecx
  4276de:	je     0x42781c
  4276e4:	mov    eax,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [eax]
  4276e9:	xor    eax,edi
  4276eb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276f5:	xor    ecx,edi
  4276f7:	movzx  eax,al
  4276fa:	add    ecx,ebx
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x42781c
  427704:	mov    eax,DWORD PTR [ebp-0x10]
  427707:	mov    eax,DWORD PTR [eax]
  427709:	xor    eax,edi
  42770b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427712:	mov    ecx,DWORD PTR [ebp-0xc]
  427715:	mov    ecx,DWORD PTR [ecx]
  427717:	xor    ecx,edi
  427719:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427720:	xor    al,cl
  427722:	mov    ecx,DWORD PTR [ebp+0xc]
  427725:	mov    ecx,DWORD PTR [ecx]
  427727:	xor    ecx,edi
  427729:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427730:	or     al,cl
  427732:	mov    ecx,DWORD PTR [ebp-0xc]
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	xor    ecx,edi
  427739:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427740:	cmp    cl,al
  427742:	jne    0x42781c
  427748:	mov    eax,DWORD PTR [ebp+0xc]
  42774b:	mov    eax,DWORD PTR [eax]
  42774d:	xor    eax,edi
  42774f:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427756:	mov    ecx,DWORD PTR [ebp-0x10]
  427759:	mov    ecx,DWORD PTR [ecx]
  42775b:	xor    ecx,edi
  42775d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427764:	xor    al,cl
  427766:	mov    ecx,DWORD PTR [ebp-0x14]
  427769:	mov    ecx,DWORD PTR [ecx]
  42776b:	xor    ecx,edi
  42776d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427774:	or     al,cl
  427776:	mov    ecx,DWORD PTR [ebp-0x10]
  427779:	mov    ecx,DWORD PTR [ecx]
  42777b:	xor    ecx,edi
  42777d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427784:	cmp    cl,al
  427786:	jne    0x42781c
  42778c:	mov    eax,DWORD PTR [ebp-0x14]
  42778f:	mov    eax,DWORD PTR [eax]
  427791:	xor    eax,edi
  427793:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  42779a:	mov    ecx,DWORD PTR [ebp+0xc]
  42779d:	mov    ecx,DWORD PTR [ecx]
  42779f:	xor    ecx,edi
  4277a1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277a8:	xor    al,cl
  4277aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ad:	mov    ecx,DWORD PTR [ecx]
  4277af:	xor    ecx,edi
  4277b1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277b8:	or     al,cl
  4277ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4277bd:	mov    ecx,DWORD PTR [ecx]
  4277bf:	xor    ecx,edi
  4277c1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  4277c8:	cmp    cl,al
  4277ca:	jne    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x14]
  4277cf:	mov    eax,DWORD PTR [eax]
  4277d1:	xor    eax,edi
  4277d3:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4277da:	mov    ecx,DWORD PTR [ebp-0xc]
  4277dd:	mov    ecx,DWORD PTR [ecx]
  4277df:	xor    ecx,edi
  4277e1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277e8:	xor    al,cl
  4277ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4277ed:	mov    ecx,DWORD PTR [ecx]
  4277ef:	xor    ecx,edi
  4277f1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277f8:	or     al,cl
  4277fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4277fd:	mov    ecx,DWORD PTR [ecx]
  4277ff:	xor    ecx,edi
  427801:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427808:	cmp    cl,al
  42780a:	jne    0x42781c
  42780c:	lea    eax,[ebp-0x4c]
  42780f:	push   eax
  427810:	call   0x4272d7
  427815:	mov    ecx,DWORD PTR [ebp-0x44]
  427818:	cmp    eax,ecx
  42781a:	je     0x427826
  42781c:	mov    eax,DWORD PTR [ebp+0x8]
  42781f:	xor    eax,edi
  427821:	add    eax,ebx
  427823:	mov    DWORD PTR [ebp+0x18],eax
  427826:	mov    eax,DWORD PTR [ebp-0x8]
  427829:	xor    eax,edi
  42782b:	lea    eax,[eax+esi*1+0x3272f8]
  427832:	xor    eax,edi
  427834:	mov    ecx,DWORD PTR [ebp+0x8]
  427837:	mov    edx,DWORD PTR [ebp+0x18]
  42783a:	xor    ecx,edi
  42783c:	add    ecx,ebx
  42783e:	cmp    edx,ecx
  427840:	je     0x42763d
  427846:	mov    eax,DWORD PTR [ebp+0x8]
  427849:	mov    ecx,DWORD PTR [ebp+0x18]
  42784c:	xor    eax,edi
  42784e:	add    eax,ebx
  427850:	cmp    ecx,eax
  427852:	jne    0x427865
  427854:	mov    eax,DWORD PTR [ebp-0x8]
  427857:	mov    ecx,DWORD PTR [ebp+0x1c]
  42785a:	xor    eax,edi
  42785c:	lea    eax,[eax+ecx*1+0x3272f8]
  427863:	jmp    0x4278dc
  427865:	push   0x18
  427867:	push   DWORD PTR [ebp-0x4]
  42786a:	lea    eax,[ebp-0x64]
  42786d:	push   eax
  42786e:	call   0x426b51
  427873:	mov    eax,DWORD PTR [ebp+0x8]
  427876:	mov    ecx,DWORD PTR [ebp-0x18]
  427879:	xor    eax,edi
  42787b:	add    eax,ebx
  42787d:	cmp    eax,ecx
  42787f:	je     0x427894
  427881:	mov    eax,DWORD PTR [ebp+0x8]
  427884:	xor    eax,edi
  427886:	add    eax,ebx
  427888:	push   eax
  427889:	push   0x18
  42788b:	lea    eax,[ebp-0x64]
  42788e:	push   eax
  42788f:	call   0x427137
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	add    eax,0x18
  42789a:	mov    DWORD PTR [ebp+0x18],eax
  42789d:	push   DWORD PTR [ebp-0x50]
  4278a0:	push   DWORD PTR [ebp+0x18]
  4278a3:	mov    eax,DWORD PTR [ebp-0x54]
  4278a6:	add    eax,DWORD PTR [ebp-0x20]
  4278a9:	push   eax
  4278aa:	call   0x426b51
  4278af:	mov    eax,DWORD PTR [ebp+0x8]
  4278b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4278b5:	xor    eax,edi
  4278b7:	add    eax,ebx
  4278b9:	cmp    eax,ecx
  4278bb:	je     0x4278ce
  4278bd:	push   0x0
  4278bf:	push   DWORD PTR [ebp-0x50]
  4278c2:	mov    eax,DWORD PTR [ebp-0x54]
  4278c5:	add    eax,DWORD PTR [ebp-0x20]
  4278c8:	push   eax
  4278c9:	call   0x427137
  4278ce:	mov    eax,DWORD PTR [ebp-0x24]
  4278d1:	mov    ecx,DWORD PTR [ebp-0x50]
  4278d4:	add    DWORD PTR [eax],ecx
  4278d6:	mov    eax,DWORD PTR [ebp-0x50]
  4278d9:	add    eax,DWORD PTR [ebp+0x1c]
  4278dc:	mov    DWORD PTR [ebp+0x1c],eax
  4278df:	mov    eax,DWORD PTR [ebp-0x8]
  4278e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4278e5:	xor    eax,edi
  4278e7:	add    eax,ebx
  4278e9:	imul   eax,ecx
  4278ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4278ef:	mov    edx,DWORD PTR [ebp-0x28]
  4278f2:	xor    ecx,edi
  4278f4:	lea    ecx,[ecx+edx*1+0x3272f8]
  4278fb:	cmp    eax,ecx
  4278fd:	jb     0x42755b
  427903:	mov    esi,DWORD PTR [ebp+0x14]
  427906:	mov    eax,DWORD PTR [ebp-0x20]
  427909:	mov    DWORD PTR [esi],eax
  42790b:	jmp    0x427952
  42790d:	mov    ecx,DWORD PTR [ebp+0x8]
  427910:	mov    edx,DWORD PTR [ebp+0xc]
  427913:	xor    ecx,edi
  427915:	xor    edx,edi
  427917:	add    ecx,ebx
  427919:	add    edx,ebx
  42791b:	cmp    ecx,edx
  42791d:	jne    0x427931
  42791f:	mov    eax,ds:0x7f642dde
  427924:	imul   eax,eax,0x9f15fcef
  42792a:	mov    ds:0x7f642dde,eax
  42792f:	jmp    0x427952
  427931:	mov    ecx,DWORD PTR [ebp+0x8]
  427934:	xor    ecx,edi
  427936:	add    ecx,ebx
  427938:	cmp    eax,ecx
  42793a:	je     0x427948
  42793c:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  427946:	jmp    0x427952
  427948:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  427952:	pop    edi
  427953:	pop    esi
  427954:	pop    ebx
  427955:	leave  
  427956:	ret    0x18
  427959:	push   ebp
  42795a:	mov    ebp,esp
  42795c:	and    esp,0xfffffff8
  42795f:	mov    eax,DWORD PTR [ebp+0x20]
  427962:	sub    esp,0x14
  427965:	push   ebx
  427966:	mov    ebx,DWORD PTR [ebp+0x14]
  427969:	push   esi
  42796a:	push   edi
  42796b:	cmp    eax,0xf89c85b9
  427970:	jne    0x42797c
  427972:	push   0xf89c85b8
  427977:	jmp    0x427aae
  42797c:	mov    eax,DWORD PTR [ebp+0x20]
  42797f:	cmp    eax,0xf89c85b8
  427984:	jne    0x427990
  427986:	push   0xf89c85bb
  42798b:	jmp    0x427aae
  427990:	mov    eax,DWORD PTR [ebp+0x20]
  427993:	cmp    eax,0xf89c85bb
  427998:	jne    0x4279a4
  42799a:	push   0xf89c85ba
  42799f:	jmp    0x427aae
  4279a4:	mov    eax,DWORD PTR [ebp+0x20]
  4279a7:	cmp    eax,0xf89c85ba
  4279ac:	jne    0x4279b8
  4279ae:	push   0xf89c85bd
  4279b3:	jmp    0x427aae
  4279b8:	mov    ecx,DWORD PTR [ebp+0x20]
  4279bb:	mov    eax,0xf89c85be
  4279c0:	cmp    ecx,eax
  4279c2:	jne    0x427a7e
  4279c8:	mov    eax,DWORD PTR [ebp+0x10]
  4279cb:	mov    DWORD PTR [esp+0xc],eax
  4279cf:	mov    eax,DWORD PTR [ebp+0x18]
  4279d2:	mov    DWORD PTR [esp+0x14],eax
  4279d6:	mov    eax,DWORD PTR [ebp+0xc]
  4279d9:	mov    DWORD PTR [esp+0x18],eax
  4279dd:	mov    eax,DWORD PTR [ebp+0x8]
  4279e0:	mov    DWORD PTR [esp+0x10],eax
  4279e4:	mov    eax,DWORD PTR [esp+0x10]
  4279e8:	mov    ecx,DWORD PTR [esp+0x14]
  4279ec:	mov    edi,0x75108b1
  4279f1:	xor    eax,edi
  4279f3:	mov    esi,0x3272f8
  4279f8:	add    eax,esi
  4279fa:	mov    DWORD PTR [ecx],eax
  4279fc:	mov    eax,DWORD PTR [esp+0xc]
  427a00:	mov    eax,DWORD PTR [eax+0x194]
  427a06:	mov    ecx,DWORD PTR [eax]
  427a08:	mov    eax,DWORD PTR [esp+0xc]
  427a0c:	mov    eax,DWORD PTR [eax+0x194]
  427a12:	mov    eax,DWORD PTR [eax]
  427a14:	add    eax,DWORD PTR [ecx+0x3c]
  427a17:	mov    ecx,DWORD PTR [esp+0xc]
  427a1b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427a21:	mov    ecx,DWORD PTR [ecx+0x14]
  427a24:	push   0x4
  427a26:	push   0x3000
  427a2b:	push   DWORD PTR [eax+0x50]
  427a2e:	push   0x0
  427a30:	call   ecx
  427a32:	mov    DWORD PTR [ebx],eax
  427a34:	mov    eax,DWORD PTR [esp+0x10]
  427a38:	push   DWORD PTR [esp+0xc]
  427a3c:	xor    eax,edi
  427a3e:	add    eax,esi
  427a40:	mov    DWORD PTR [esp+0x20],eax
  427a44:	lea    eax,[esp+0x20]
  427a48:	push   eax
  427a49:	push   ebx
  427a4a:	push   DWORD PTR [esp+0x20]
  427a4e:	push   DWORD PTR [esp+0x28]
  427a52:	push   DWORD PTR [esp+0x24]
  427a56:	call   0x42741b
  427a5b:	mov    eax,DWORD PTR [esp+0x10]
  427a5f:	mov    ecx,DWORD PTR [ebx]
  427a61:	xor    eax,edi
  427a63:	add    eax,esi
  427a65:	cmp    ecx,eax
  427a67:	je     0x427ac5
  427a69:	mov    eax,DWORD PTR [esp+0x18]
  427a6d:	mov    ecx,DWORD PTR [esp+0x14]
  427a71:	xor    eax,edi
  427a73:	add    eax,esi
  427a75:	imul   eax,DWORD PTR [esp+0x1c]
  427a7a:	mov    DWORD PTR [ecx],eax
  427a7c:	jmp    0x427ac5
  427a7e:	mov    ecx,DWORD PTR [ebp+0x20]
  427a81:	cmp    ecx,0xf89c85bd
  427a87:	jne    0x427a90
  427a89:	push   0xf89c85bc
  427a8e:	jmp    0x427aae
  427a90:	mov    ecx,DWORD PTR [ebp+0x20]
  427a93:	cmp    ecx,0xf89c85bc
  427a99:	jne    0x427aa2
  427a9b:	push   0xf89c85bf
  427aa0:	jmp    0x427aae
  427aa2:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa5:	cmp    ecx,0xf89c85bf
  427aab:	jne    0x427ac5
  427aad:	push   eax
  427aae:	push   DWORD PTR [ebp+0x1c]
  427ab1:	push   DWORD PTR [ebp+0x18]
  427ab4:	push   ebx
  427ab5:	push   DWORD PTR [ebp+0x10]
  427ab8:	push   DWORD PTR [ebp+0xc]
  427abb:	push   DWORD PTR [ebp+0x8]
  427abe:	call   0x427959
  427ac3:	mov    DWORD PTR [ebx],eax
  427ac5:	mov    eax,DWORD PTR [ebx]
  427ac7:	pop    edi
  427ac8:	pop    esi
  427ac9:	pop    ebx
  427aca:	mov    esp,ebp
  427acc:	pop    ebp
  427acd:	ret    0x1c
  427ad0:	push   ebp
  427ad1:	mov    ebp,esp
  427ad3:	sub    esp,0xc
  427ad6:	mov    eax,0xf89c85b9
  427adb:	mov    DWORD PTR [ebp-0x8],eax
  427ade:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427ae5:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae8:	xor    ecx,0x75108b1
  427aee:	add    ecx,0x3272f8
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ecx,DWORD PTR [ebp+0xc]
  427afa:	push   eax
  427afb:	mov    DWORD PTR [ebp+0xc],ecx
  427afe:	push   DWORD PTR [ebp+0xc]
  427b01:	lea    eax,[ebp-0x4]
  427b04:	push   DWORD PTR [ebp+0x8]
  427b07:	push   eax
  427b08:	push   DWORD PTR [ebp+0xc]
  427b0b:	push   DWORD PTR [ebp-0xc]
  427b0e:	push   DWORD PTR [ebp-0x8]
  427b11:	call   0x427959
  427b16:	mov    DWORD PTR [ebp-0x4],eax
  427b19:	mov    eax,DWORD PTR [ebp-0x4]
  427b1c:	leave  
  427b1d:	ret    0x8
