
2594d4971dfba567eaa9333d0ecbd00b2e6f9ed69050a88ae9dcdb92559b28d6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [esi+0x7c854ab9],eax
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x74],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    dl,bl
  402f43:	(bad)  
  402f44:	pusha  
  402f45:	leave  
  402f46:	daa    
  402f47:	scas   eax,DWORD PTR es:[edi]
  402f48:	xor    eax,0xfb0f9cc9
  402f4d:	in     eax,dx
  402f4e:	imul   BYTE PTR [esi]
  402f50:	inc    esp
  402f51:	aad    0xad
  402f53:	int    0x10
  402f55:	push   0xb9de12db
  402f5a:	xchg   eax,ecx
  402f5c:	sahf   
  402f5d:	iret   
  402f5e:	cmp    edi,edi
  402f60:	and    al,0xae
  402f63:	xor    DWORD PTR [eax-0xb],ecx
  402f66:	xlat   BYTE PTR ds:[ebx]
  402f67:	adc    BYTE PTR [eax],0x2a
  402f6a:	cld    
  402f6b:	and    eax,0xa607313a
  402f70:	lds    ecx,FWORD PTR [esi+0x48414748]
  402f76:	shl    BYTE PTR [esi-0x46d70d5c],cl
  402f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7d:	sub    cl,dl
  402f7f:	pop    ebp
  402f80:	pop    ds
  402f81:	mov    dh,0xd9
  402f83:	and    BYTE PTR [esi+ecx*4+0x1a4b564a],cl
  402f8a:	fist   DWORD PTR [eax-0x53]
  402f8d:	int    0x90
  402f8f:	in     eax,dx
  402f90:	push   ds
  402f91:	mov    esp,0x3110bf5a
  402f96:	xor    eax,0xfbb42b1d
  402f9b:	(bad)  
  402f9c:	lods   al,BYTE PTR ds:[esi]
  402f9d:	jne    0x402fa3
  402f9f:	ins    BYTE PTR es:[edi],dx
  402fa0:	dec    ebp
  402fa1:	push   cs
  402fa2:	iret   
  402fa3:	retf   0xc52f
  402fa6:	dec    BYTE PTR [edx+0x2882af4b]
  402fac:	dec    edx
  402fad:	push   edx
  402fae:	jns    0x402fd8
  402fb0:	neg    BYTE PTR [edx+0x5c]
  402fb3:	int3   
  402fb4:	loope  0x403018
  402fb6:	mov    al,ch
  402fb8:	or     ecx,DWORD PTR [edi-0x3a]
  402fbb:	sbb    BYTE PTR [ebp-0x59],dh
  402fbe:	gs xor ecx,ebx
  402fc1:	xor    eax,0xf85353d8
  402fc6:	mov    dl,0x3c
  402fc8:	in     eax,0x5a
  402fca:	loopne 0x402f90
  402fcc:	daa    
  402fcd:	repz push es
  402fcf:	or     al,0x2a
  402fd1:	inc    ebx
  402fd2:	sbb    BYTE PTR [esi],0xe1
  402fd5:	xchg   esi,eax
  402fd6:	cmp    al,0x57
  402fd8:	inc    esp
  402fd9:	out    dx,eax
  402fda:	push   ecx
  402fdb:	pop    ebp
  402fdc:	sub    DWORD PTR [ebx-0x95635a4],ecx
  402fe2:	adc    cl,cl
  402fe4:	pop    ds
  402fe5:	fidivr DWORD PTR [edi]
  402fe7:	mov    ecx,0xd1a9f9a7
  402fec:	pop    esp
  402fed:	mov    bh,0xed
  402fef:	pop    esi
  402ff0:	scas   eax,DWORD PTR es:[edi]
  402ff1:	ret    0x8011
  402ff4:	xor    eax,0x7736fc36
  402ff9:	out    dx,al
  402ffa:	sar    BYTE PTR [ebx+0x153ffe82],cl
  403000:	mov    ah,0x6f
  403002:	idiv   DWORD PTR [edi]
  403004:	pop    eax
  403005:	sbb    DWORD PTR [eax],edi
  403007:	mov    bh,0xb0
  403009:	imul   esi,DWORD PTR [esi],0xffffffff
  40300c:	push   eax
  40300d:	sbb    BYTE PTR [ebp+ebp*1+0x33],dl
  403011:	mov    ah,0x43
  403013:	sti    
  403014:	bound  ecx,QWORD PTR [eax+0x473bdf4b]
  40301a:	jmp    0x9c59:0xa52c2868
  403021:	mov    esi,0x3c3a5663
  403026:	pop    ebx
  403027:	das    
  403028:	pop    ebp
  403029:	jo     0x403044
  40302b:	addr16 (bad) 
  40302d:	lods   al,BYTE PTR ds:[esi]
  40302e:	pop    ecx
  403030:	nop
  403031:	or     ebp,DWORD PTR [esi*4-0x27441f08]
  403038:	fcomi  st,st(0)
  40303a:	adc    eax,0xe9d5e43e
  40303f:	lods   al,BYTE PTR ds:[esi]
  403040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403041:	or     ebx,0xffffffef
  403044:	adc    ebp,DWORD PTR ds:0x33ee57f3
  40304a:	pop    edx
  40304b:	xor    edx,DWORD PTR [esi]
  40304d:	cli    
  40304e:	sub    dh,dl
  403050:	push   ds
  403051:	mov    ebp,0xc410cbf2
  403056:	retf   0x7ba7
  403059:	ins    DWORD PTR es:[edi],dx
  40305a:	(bad)  
  40305b:	push   0x6c
  40305d:	and    eax,0x21e006d5
  403062:	(bad)  
  403063:	mov    BYTE PTR [eax-0x18],ch
  403066:	ds or  eax,DWORD PTR cs:[ebp+ebx*2-0x66ddadff]
  40306f:	adc    bl,al
  403071:	add    dl,BYTE PTR [ebx]
  403073:	jne    0x403017
  403075:	push   ax
  403077:	jg     0x40309c
  403079:	mov    ebp,0x655a218d
  40307e:	test   al,0x23
  403080:	push   ss
  403081:	or     al,0xfc
  403083:	and    DWORD PTR [ebp+0x5c],0xffffffda
  403087:	pop    ss
  403088:	call   0xfeadccd6
  40308d:	les    ebx,FWORD PTR [edx-0x3e]
  403090:	sbb    BYTE PTR [esi],al
  403092:	shr    DWORD PTR [edi-0x2f9affcb],1
  403098:	lea    esi,[edi-0x60]
  40309b:	(bad)  
  40309c:	jl     0x403091
  40309e:	pushf  
  40309f:	test   esi,eax
  4030a1:	push   es
  4030a2:	scas   al,BYTE PTR es:[edi]
  4030a3:	adc    bh,bl
  4030a5:	push   DWORD PTR [edi-0xc40593b]
  4030ab:	int3   
  4030ac:	inc    ecx
  4030ad:	int3   
  4030ae:	nop
  4030af:	mul    DWORD PTR [eax-0x56b2f2c1]
  4030b5:	add    DWORD PTR [edx+ecx*4],0xffffffae
  4030b9:	inc    esp
  4030ba:	push   esi
  4030bb:	std    
  4030bc:	sbb    ebx,DWORD PTR [edi-0x60b94a63]
  4030c2:	repz cmp eax,0x59cf3f3e
  4030c8:	sbb    al,0xad
  4030ca:	cmp    DWORD PTR [ebp+0x4c],ecx
  4030cd:	scas   eax,DWORD PTR es:[edi]
  4030ce:	mov    ah,0x64
  4030d0:	enter  0x1090,0xc0
  4030d4:	mov    ?,WORD PTR [edi+0x32]
  4030d7:	aad    0xcf
  4030d9:	sti    
  4030da:	cmp    ecx,ebp
  4030dc:	xchg   esi,eax
  4030dd:	or     ebx,ecx
  4030df:	xor    DWORD PTR [esi+0x3f],ecx
  4030e2:	sahf   
  4030e3:	sub    eax,0x33ae653a
  4030e8:	jmp    0x9ca9:0xabd35157
  4030ef:	sbb    DWORD PTR [eax-0x201b509d],eax
  4030f5:	mov    dh,BYTE PTR [edi]
  4030f7:	sbb    BYTE PTR [ebp+eiz*8-0x33],ah
  4030fb:	mov    ecx,gs
  4030fd:	stos   BYTE PTR es:[edi],al
  4030fe:	xor    al,0xc2
  403100:	(bad)  
  403101:	popa   
  403102:	stc    
  403103:	sti    
  403104:	or     ecx,DWORD PTR [ebx+0x32]
  403107:	push   edx
  403108:	jno    0x403122
  40310a:	(bad)  
  40310b:	adc    esp,DWORD PTR [esi-0x3a]
  40310e:	and    BYTE PTR [edi+ebp*2],ch
  403111:	xor    edx,DWORD PTR [ecx]
  403113:	mov    esi,0x192ee288
  403118:	sub    DWORD PTR [esi-0x2cb54295],0xffffffed
  40311f:	mov    ?,WORD PTR [ebx+0x24]
  403122:	repnz test eax,0xadaf13c1
  403128:	in     eax,0x3c
  40312a:	add    al,0x1e
  40312c:	push   esi
  40312d:	fwait
  40312e:	repz dec ebp
  403130:	adc    eax,esi
  403132:	test   al,0xde
  403134:	inc    esi
  403135:	mov    ss,WORD PTR [esi-0x63]
  403138:	push   ebx
  403139:	inc    esi
  40313a:	loopne 0x403109
  40313c:	mov    al,ds:0xa9dff8e3
  403141:	call   0x983a:0xd80144f8
  403148:	sbb    eax,0xad6aaba4
  40314d:	daa    
  40314e:	jmp    0x7879:0x50abd5b0
  403155:	outs   dx,BYTE PTR ds:[esi]
  403156:	in     al,dx
  403157:	cld    
  403158:	sahf   
  403159:	sbb    al,0x58
  40315b:	push   edx
  40315c:	jae    0x4030eb
  40315e:	xchg   ebp,eax
  40315f:	sahf   
  403160:	inc    bp
  403162:	loope  0x403166
  403164:	jns    0x4031b9
  403166:	fild   DWORD PTR [ebx+0x2c8133f3]
  40316c:	test   al,0x77
  40316e:	dec    ebp
  40316f:	sub    eax,0x5cba096b
  403174:	mov    dh,0x99
  403176:	popf   
  403177:	(bad)  
  403178:	jp     0x4030fc
  40317a:	or     BYTE PTR [edi-0x79],0x82
  40317e:	push   ecx
  40317f:	stc    
  403180:	clc    
  403181:	xchg   BYTE PTR [esi+0x56],bh
  403184:	pop    ds
  403185:	shl    ah,1
  403187:	cmp    al,0x80
  403189:	sbb    eax,0x27757f94
  40318e:	shl    DWORD PTR [edi+esi*1+0x78bd8b13],1
  403195:	cmc    
  403196:	add    eax,0x3854319e
  40319b:	mov    dh,0xf
  40319d:	cdq    
  40319e:	out    0x10,al
  4031a0:	popa   
  4031a1:	cmc    
  4031a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031a3:	mov    ch,0x2c
  4031a5:	jmp    0x4760c0dc
  4031aa:	inc    ebx
  4031ab:	pop    ss
  4031ac:	add    eax,DWORD PTR [edx+0x56012436]
  4031b2:	stc    
  4031b3:	or     ch,BYTE PTR [ebp+0x6]
  4031b6:	bound  esi,QWORD PTR [ecx]
  4031b8:	mov    ah,0xab
  4031ba:	aad    0xfc
  4031bc:	add    DWORD PTR [esi+0x9ca9d1b],0xffffffc7
  4031c3:	(bad)  
  4031c4:	jecxz  0x403194
  4031c6:	arpl   WORD PTR [eax-0x40],bx
  4031c9:	sar    DWORD PTR [eax],1
  4031cb:	cdq    
  4031cc:	mov    ds:0x57e001a7,eax
  4031d1:	dec    esi
  4031d2:	loope  0x4031dc
  4031d4:	ds (bad) 
  4031d6:	sbb    al,0x34
  4031d8:	inc    eax
  4031d9:	sbb    ah,BYTE PTR [ebx]
  4031db:	idiv   ecx
  4031dd:	and    DWORD PTR [edx+0x2d],edi
  4031e0:	rol    DWORD PTR [edx+0x55],0xa6
  4031e4:	push   edi
  4031e5:	push   0x6fa38830
  4031ea:	fs loope 0x403245
  4031ed:	ja     0x403206
  4031ef:	cmp    bl,BYTE PTR [esi+0x358b8c49]
  4031f5:	sbb    ah,bh
  4031f7:	iret   
  4031f8:	popa   
  4031f9:	inc    ecx
  4031fa:	lea    ecx,[edi]
  4031fc:	fwait
  4031fd:	cmp    eax,0x1003de11
  403202:	(bad)  
  403203:	int3   
  403204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403206:	mov    edi,0xb17f6628
  40320b:	pop    edi
  40320c:	pusha  
  40320d:	clc    
  40320e:	mov    al,ds:0xb34bdbc9
  403213:	lahf   
  403214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403215:	push   ebx
  403216:	xchg   BYTE PTR [ebp+0x50095647],bl
  40321c:	sub    al,0x71
  40321e:	mov    dl,dl
  403220:	xchg   ecx,eax
  403221:	pop    esp
  403222:	and    ah,BYTE PTR [edi]
  403224:	add    bl,ch
  403226:	out    0x7e,eax
  403228:	mov    DWORD PTR [ebp-0x17],esp
  40322b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40322c:	dec    edi
  40322d:	(bad)  
  40322e:	test   ebx,0xa7e2a1b1
  403234:	xchg   ebx,eax
  403235:	push   0xffffffba
  403237:	mov    edx,0x4dffef92
  40323c:	add    eax,0xab89896
  403241:	clc    
  403242:	or     ecx,ebx
  403244:	mov    ch,0x48
  403246:	inc    ecx
  403247:	add    dl,bl
  403249:	pop    eax
  40324a:	sub    al,dl
  40324c:	sub    cl,BYTE PTR [ecx*8-0x2a94197e]
  403253:	retf   
  403254:	fild   DWORD PTR [esi-0x5f]
  403257:	out    dx,al
  403258:	out    0xfa,eax
  40325a:	sub    DWORD PTR [edi+0x4d],0x1e
  40325e:	cmp    DWORD PTR [esi+0x7a319f9b],ecx
  403264:	fwait
  403265:	add    eax,0x1fbb870
  40326a:	hlt    
  40326b:	cwde   
  40326c:	loop   0x4032ba
  40326e:	xchg   esi,eax
  40326f:	fst    QWORD PTR [esi]
  403272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403273:	inc    eax
  403274:	mov    esp,0x8d95c4f7
  403279:	test   eax,0xb3974cd0
  40327e:	pop    eax
  40327f:	push   ss
  403280:	push   cs
  403281:	jae    0x403275
  403283:	hlt    
  403284:	mov    ch,0x5c
  403286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403287:	sub    BYTE PTR [edx-0x6b500d28],bh
  40328d:	push   ebp
  40328e:	ja     0x4032b6
  403290:	mov    edx,0x29812d2e
  403295:	xor    ebp,DWORD PTR [esi-0x21b5b638]
  40329b:	mov    edx,0x83dd0443
  4032a0:	aad    0x13
  4032a2:	(bad)  
  4032a3:	mov    ebp,0xba823176
  4032a8:	sub    BYTE PTR [ebx],bh
  4032aa:	mov    dl,0x64
  4032ac:	xor    dl,BYTE PTR [ecx-0x32]
  4032af:	jg     0x4032ca
  4032b1:	ja     0x40327f
  4032b3:	sub    al,0x90
  4032b5:	sbb    edi,DWORD PTR [ebx-0x47]
  4032b8:	call   0x2755:0xd5d90465
  4032bf:	cmp    al,BYTE PTR [ecx+eiz*4-0x40e4858a]
  4032c6:	push   ebx
  4032c7:	clc    
  4032c8:	mov    cl,BYTE PTR [ebp+0x35]
  4032cb:	push   ss
  4032cc:	popf   
  4032cd:	cdq    
  4032ce:	mov    ebx,0x9bc5ea0a
  4032d3:	mov    bh,0x8a
  4032d5:	aaa    
  4032d6:	fdivr  DWORD PTR [eax+0x29]
  4032d9:	sar    DWORD PTR [edi+eax*2],1
  4032dc:	(bad)  
  4032dd:	sbb    al,0x59
  4032df:	rcr    bl,cl
  4032e1:	ror    BYTE PTR [edx+0x60a3dc78],cl
  4032e7:	in     eax,0xbd
  4032e9:	mov    al,0x84
  4032eb:	inc    ebx
  4032ec:	repz mov al,ds:0xbefd0519
  4032f2:	pop    DWORD PTR [esi]
  4032f4:	out    dx,eax
  4032f5:	inc    eax
  4032f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032f7:	xchg   esi,eax
  4032f8:	(bad)  
  4032f9:	xchg   esp,eax
  4032fa:	enter  0xd4e2,0x16
  4032fe:	jecxz  0x403332
  403300:	sahf   
  403301:	mov    dl,0x52
  403303:	cmp    bh,BYTE PTR [ebp+0xa5a6f20]
  403309:	push   es
  40330a:	pop    edi
  40330b:	mov    al,ds:0x45588f7a
  403310:	dec    ecx
  403311:	loope  0x4032c3
  403313:	std    
  403314:	popa   
  403315:	scas   al,BYTE PTR es:[edi]
  403316:	js     0x403351
  403318:	fwait
  403319:	rcr    DWORD PTR [edx+0x1a],cl
  40331c:	pop    esp
  40331d:	nop
  40331e:	jno    0x403399
  403320:	cmp    al,0x9c
  403322:	or     al,0x3c
  403324:	lods   eax,DWORD PTR ds:[esi]
  403325:	jl     0x40335c
  403327:	xchg   ebx,eax
  403328:	push   eax
  403329:	inc    ecx
  40332a:	or     BYTE PTR [ebp+0x6e07dc6a],bh
  403330:	imul   ecx,eax,0x5d
  403333:	(bad)  
  403334:	shl    DWORD PTR [edi],0x65
  403337:	xchg   edi,eax
  403338:	shl    DWORD PTR [edi-0x2d5f66a7],1
  40333e:	dec    eax
  40333f:	xchg   edi,eax
  403340:	pop    ebx
  403341:	icebp  
  403342:	daa    
  403343:	fbstp  TBYTE PTR [ecx-0x4b8b14ab]
  403349:	imul   edi,esp,0xffffffdd
  40334c:	mov    al,fs:0x8dc05c71
  403352:	push   ebx
  403353:	push   cs
  403354:	adc    BYTE PTR [edx+0x247bd2d1],ch
  40335a:	mov    eax,0xfa777e1a
  40335f:	pusha  
  403360:	xchg   esp,eax
  403361:	xchg   edx,eax
  403362:	stc    
  403363:	lods   al,BYTE PTR ds:[esi]
  403364:	(bad)  
  403365:	xor    al,BYTE PTR ds:[ecx]
  403368:	lods   al,BYTE PTR ds:[esi]
  403369:	and    edi,DWORD PTR [ebp+0xe]
  40336c:	pop    ss
  40336d:	sbb    esp,DWORD PTR [edx-0x2fe531b4]
  403373:	and    DWORD PTR [ebx+0x1ae4264d],ebp
  403379:	scas   al,BYTE PTR es:[edi]
  40337a:	hlt    
  40337b:	sbb    al,0x9a
  40337d:	arpl   ax,si
  40337f:	repnz test al,0x72
  403382:	pop    es
  403383:	repz jo 0x403362
  403386:	(bad)  
  403388:	xchg   edx,eax
  403389:	cli    
  40338a:	mov    esi,0xcba6b03
  40338f:	pop    es
  403390:	outs   dx,BYTE PTR ds:[esi]
  403391:	fs loope 0x403356
  403394:	cmp    al,0xd8
  403396:	ret    
  403397:	dec    edx
  403398:	call   0x3cbf:0xe1c535c9
  40339f:	mov    dh,0xcf
  4033a1:	test   eax,0x9a2e09f9
  4033a6:	ret    0x5a3b
  4033a9:	call   0xc1936ee6
  4033ae:	adc    dh,al
  4033b0:	or     eax,0x9c00430
  4033b5:	add    BYTE PTR [esi+0x39ff7b3a],dl
  4033bb:	add    edx,DWORD PTR [ebx+0x10]
  4033be:	fsubr  DWORD PTR [ebx]
  4033c0:	(bad)  
  4033c1:	cmp    BYTE PTR [ebx-0x1d],al
  4033c4:	sub    eax,0x817621a
  4033c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ca:	xor    DWORD PTR [edi+0x44],esi
  4033cd:	add    ebp,DWORD PTR [ebx-0x2d]
  4033d0:	lea    edi,[ecx]
  4033d2:	outs   dx,BYTE PTR ds:[esi]
  4033d3:	jp     0x4033c9
  4033d5:	sub    DWORD PTR [ecx],esp
  4033d7:	fbstp  TBYTE PTR [ebp+0x1]
  4033da:	add    DWORD PTR [edi+0x3c],edi
  4033dd:	lds    edx,FWORD PTR [eax-0x62]
  4033e0:	out    dx,eax
  4033e1:	push   ebp
  4033e2:	xor    al,0x99
  4033e4:	jl     0x40337e
  4033e6:	inc    esi
  4033e7:	mov    bl,0x6c
  4033e9:	ins    BYTE PTR es:[edi],dx
  4033ea:	jmp    0x4033cf
  4033ec:	stos   BYTE PTR es:[edi],al
  4033ed:	push   es
  4033ee:	nop
  4033ef:	pop    esi
  4033f0:	xchg   ecx,eax
  4033f1:	not    BYTE PTR [ebx+ebx*4-0x1d]
  4033f5:	(bad)  
  4033f6:	retf   0x3704
  4033f9:	mov    esi,0xb5d576bd
  4033fe:	pop    es
  4033ff:	retf   
  403400:	adc    DWORD PTR [eax+eiz*2-0x6],ebp
  403404:	mov    dl,0x67
  403406:	sar    BYTE PTR [esi+0x6b],cl
  403409:	iret   
  40340a:	pop    edi
  40340b:	int    0xd0
  40340d:	adc    eax,0x2ca2081
  403412:	aad    0xba
  403414:	dec    ecx
  403415:	dec    eax
  403416:	mov    ds:0x22ebe3ba,eax
  40341b:	sbb    ebp,DWORD PTR [ebp-0x1529bb11]
  403421:	mov    edx,0x3471c25
  403426:	(bad)  
  403427:	arpl   WORD PTR [esi+0x16be76c4],bx
  40342d:	and    al,0xe0
  40342f:	push   0x33
  403431:	fnsave [esi]
  403433:	dec    esi
  403434:	or     ch,BYTE PTR ds:0xbe08b8aa
  40343a:	stos   DWORD PTR es:[edi],eax
  40343b:	fstp   DWORD PTR [esp+eiz*2-0x1b3c6d22]
  403442:	stos   DWORD PTR es:[edi],eax
  403443:	pop    ss
  403444:	sbb    al,0x14
  403446:	push   ebp
  403447:	lods   al,BYTE PTR ds:[esi]
  403448:	push   ds
  403449:	gs cli 
  40344b:	shr    al,0x12
  40344e:	lods   eax,DWORD PTR ds:[esi]
  40344f:	xor    DWORD PTR [eax+0x63],ebx
  403452:	mov    ds:0x6e223f32,eax
  403457:	push   edx
  403458:	mov    al,ds:0xb9804c7a
  40345d:	jbe    0x4033e6
  40345f:	std    
  403460:	sub    eax,0x196e2d50
  403465:	inc    ecx
  403466:	sbb    BYTE PTR ds:0xbd6677ca,0xa
  40346d:	adc    cl,dl
  40346f:	adc    dh,ah
  403471:	cmp    al,0xa7
  403473:	test   BYTE PTR [ebx-0x3a],ch
  403476:	loop   0x4034c7
  403478:	sbb    cl,BYTE PTR [edx-0x78]
  40347b:	jb     0x4034c7
  40347d:	cmc    
  40347e:	(bad)  
  40347f:	out    dx,al
  403480:	sub    eax,0x8a96d811
  403485:	sub    ecx,DWORD PTR [edx]
  403487:	retf   0x8de0
  40348a:	loope  0x4034ea
  40348c:	je     0x4034f6
  40348e:	jl     0x40347a
  403490:	inc    edi
  403491:	cmp    ecx,DWORD PTR [ebp+0x7eda05d3]
  403497:	data16 out dx,al
  403499:	xchg   ecx,eax
  40349a:	push   ebx
  40349b:	jns    0x40347c
  40349d:	pop    ecx
  40349e:	cmc    
  40349f:	(bad)  
  4034a0:	jb     0x40344e
  4034a2:	call   0xb0c7:0xd2826df
  4034a9:	jne    0x40346d
  4034ab:	jmp    0xf9a:0xdfcf42d3
  4034b2:	ror    BYTE PTR [eax+0x41df76df],0xd7
  4034b9:	fs nop
  4034bb:	fnsave [eax]
  4034bd:	jmp    0x4034b5
  4034bf:	jg     0x403493
  4034c1:	dec    ebx
  4034c2:	or     al,0x9a
  4034c4:	and    cl,dh
  4034c6:	fs inc esp
  4034c8:	sbb    al,bh
  4034ca:	aas    
  4034cb:	push   ecx
  4034cc:	push   edi
  4034cd:	pushf  
  4034ce:	addr16 je 0x40354e
  4034d1:	test   eax,0x5acbe83a
  4034d6:	hlt    
  4034d7:	mov    ds:0x3ed8987d,al
  4034dc:	mov    edx,0x1fc31ede
  4034e1:	and    al,0x96
  4034e3:	xor    BYTE PTR [esi+0x2e74ecf3],bl
  4034e9:	call   0x7d392f9a
  4034ee:	sub    eax,0x4df84db9
  4034f3:	mov    ds:0x37c116c0,eax
  4034f8:	jmp    0x70d1:0x90f0fcfa
  4034ff:	int    0x31
  403501:	not    cl
  403503:	pop    ebp
  403504:	idiv   DWORD PTR [ebp+0xc]
  403507:	sbb    DWORD PTR [ecx+0x5fd98bdf],ebx
  40350d:	enter  0xcab7,0x44
  403511:	push   edx
  403512:	ds dec edi
  403514:	retf   0x5c01
  403517:	adc    eax,0xe175b1d
  40351c:	cmp    BYTE PTR [ebx+ebx*4+0x59],dh
  403520:	xor    cl,bl
  403522:	adc    al,0xd5
  403524:	cwde   
  403525:	mov    ds:0xc44202b7,eax
  40352a:	or     BYTE PTR [ebx-0x196f4605],cl
  403530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403531:	loopne 0x403507
  403533:	inc    ebp
  403534:	lds    esi,FWORD PTR [edi]
  403536:	mov    dh,0x44
  403538:	enter  0xee34,0x83
  40353c:	sbb    ebp,DWORD PTR [edx+0x7484d3c8]
  403542:	push   esp
  403543:	repnz lahf 
  403545:	jno    0x4034c7
  403547:	jg     0x403521
  403549:	xor    BYTE PTR [edi],ah
  40354b:	and    BYTE PTR [ebx],bh
  40354d:	sbb    al,0x17
  40354f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403550:	dec    ebx
  403551:	imul   ecx,DWORD PTR [esi],0x6c
  403554:	or     eax,DWORD PTR [eax-0x37]
  403557:	mov    ss,WORD PTR [edx+0x29ea86c3]
  40355d:	shl    BYTE PTR [ecx],cl
  40355f:	into   
  403560:	rsqrtps xmm3,xmm4
  403563:	dec    edx
  403564:	aas    
  403565:	(bad)  [eax]
  403567:	ret    0xa55a
  40356a:	sub    BYTE PTR [esp+edx*1],dl
  40356d:	pmuludq mm0,QWORD PTR [ebp-0x2b]
  403571:	mov    bh,0x7
  403573:	sbb    DWORD PTR [esi+0x29],edi
  403576:	adc    edx,DWORD PTR [esi-0x31896311]
  40357c:	lea    ebp,[ebx]
  40357e:	mov    al,ds:0x8e6332bb
  403583:	or     eax,DWORD PTR [esi+0x21]
  403586:	or     esp,DWORD PTR [ebp+0x7b]
  403589:	push   esi
  40358a:	stos   BYTE PTR es:[edi],al
  40358b:	xor    ebp,edi
  40358d:	loope  0x4035f2
  40358f:	ins    BYTE PTR es:[edi],dx
  403590:	jb     0x403582
  403592:	jns    0x4035d3
  403594:	hlt    
  403595:	push   ebp
  403596:	call   0x284628fe
  40359b:	sbb    DWORD PTR [edx],0x76
  40359e:	and    al,0xc7
  4035a0:	inc    esp
  4035a1:	xchg   esp,eax
  4035a2:	adc    al,0x49
  4035a4:	xchg   esp,eax
  4035a5:	pop    ecx
  4035a6:	pop    ss
  4035a7:	sar    DWORD PTR [esi+0x401c24b1],cl
  4035ad:	mov    BYTE PTR [edi],bl
  4035af:	mov    ds:0x8ac5a320,eax
  4035b4:	fild   QWORD PTR [edx-0x5e]
  4035b7:	pop    es
  4035b8:	push   eax
  4035b9:	lods   eax,DWORD PTR ds:[esi]
  4035ba:	repnz call 0xba27:0x4172c936
  4035c2:	mov    ah,0x1b
  4035c4:	pushaw 
  4035c6:	and    bh,al
  4035c8:	fidiv  WORD PTR [edi+edi*1-0x42]
  4035cc:	aas    
  4035cd:	mov    dl,0x58
  4035cf:	int    0x79
  4035d1:	enter  0xcdaa,0xf7
  4035d5:	pushf  
  4035d6:	jg     0x4035c9
  4035d8:	add    dh,ah
  4035da:	outs   dx,BYTE PTR ds:[esi]
  4035db:	clc    
  4035dc:	push   cs
  4035dd:	and    BYTE PTR [ebx+0x69],bh
  4035e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e1:	cwde   
  4035e2:	or     al,0xd6
  4035e4:	lahf   
  4035e5:	jno    0x4035f5
  4035e7:	dec    esi
  4035e8:	(bad)  
  4035ea:	ror    BYTE PTR [edx-0x40e9afd6],0x5d
  4035f1:	and    eax,0xdb50bf1b
  4035f6:	out    dx,al
  4035f7:	icebp  
  4035f8:	or     BYTE PTR [ebx+0x67a4de26],0x11
  4035ff:	scas   al,BYTE PTR es:[edi]
  403600:	mov    ecx,0x10e68fda
  403605:	and    DWORD PTR [eax-0x7c],ebp
  403608:	std    
  403609:	jns    0x4035b2
  40360b:	jno    0x4035c8
  40360d:	or     edi,DWORD PTR [edi+0x7727157]
  403613:	pop    ebp
  403614:	xor    esi,DWORD PTR ds:0x3f29110a
  40361a:	inc    edx
  40361b:	inc    ebp
  40361c:	hlt    
  40361d:	mov    esi,0x16ba2fd0
  403622:	loopne 0x403605
  403624:	test   al,0xaa
  403626:	jl     0x4035bb
  403628:	jle    0x403645
  40362a:	mov    fs,WORD PTR [ebx]
  40362c:	imul   edx,DWORD PTR ds:0x8ae46770,0x8b9e041f
  403636:	pop    ds
  403637:	jo     0x40361e
  403639:	popa   
  40363a:	mov    ebp,DWORD PTR [esi]
  40363c:	mov    ah,BYTE PTR [eax]
  40363e:	adc    BYTE PTR [edi+0xb],al
  403641:	lock cmp bl,BYTE PTR [edi]
  403644:	jnp    0x403699
  403646:	add    al,0x71
  403648:	daa    
  403649:	fldcw  WORD PTR [eax+0x22]
  40364c:	cdq    
  40364d:	or     ecx,DWORD PTR ss:[eax+0x14]
  403651:	adc    DWORD PTR [ebp+0x405a22ab],eax
  403657:	mov    esi,0xef0617cb
  40365c:	mov    edx,0x51976719
  403661:	stc    
  403662:	test   eax,0x95a11591
  403667:	dec    edx
  403668:	jp     0x40364c
  40366a:	(bad)  
  40366b:	mov    dl,0x0
  40366d:	dec    ecx
  40366e:	aad    0xc6
  403670:	cld    
  403671:	add    eax,0xce53f8a0
  403676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403677:	xor    al,0x72
  403679:	fmul   DWORD PTR [edi+0x5]
  40367c:	rcl    ebp,cl
  40367e:	test   ecx,ebp
  403680:	xor    eax,0x107f2973
  403685:	clc    
  403686:	adc    al,0x94
  403688:	in     eax,dx
  403689:	stos   BYTE PTR es:[edi],al
  40368a:	sbb    dl,BYTE PTR [esi-0x12]
  40368d:	test   al,0x2c
  40368f:	mov    ah,0x20
  403691:	rcl    ch,cl
  403693:	nop
  403694:	cld    
  403695:	fimul  WORD PTR [edi-0xe3e800e]
  40369b:	mov    ch,0xed
  40369d:	push   ebx
  40369e:	pop    edi
  40369f:	add    al,al
  4036a1:	test   eax,0x6ad928f7
  4036a6:	div    BYTE PTR [ebx+0x3b]
  4036a9:	push   edi
  4036aa:	sbb    eax,0xcbca813e
  4036af:	mov    ch,BYTE PTR [ecx+edi*1-0x419a0fab]
  4036b6:	mov    ch,0xa8
  4036b8:	test   BYTE PTR [ecx+0x3c184b4],ch
  4036be:	stc    
  4036bf:	bound  eax,QWORD PTR [esp+eax*8-0x63ed3be8]
  4036c6:	bnd ret 
  4036c8:	or     BYTE PTR [edx-0x70],bl
  4036cb:	xor    al,0x35
  4036cd:	push   ss
  4036ce:	ins    BYTE PTR es:[edi],dx
  4036cf:	retf   0x5123
  4036d2:	loop   0x403689
  4036d4:	test   DWORD PTR [eax],ebx
  4036d6:	dec    eax
  4036d7:	ins    DWORD PTR es:[edi],dx
  4036d8:	add    eax,0x5b137afc
  4036dd:	popa   
  4036de:	cmp    al,0xbf
  4036e0:	sub    esi,0xffffff82
  4036e3:	jmp    0x196d:0xa751aa88
  4036ea:	and    eax,0x3985a697
  4036ef:	inc    ecx
  4036f0:	mov    edx,0xc566bfaf
  4036f5:	jmp    0x7c6018f1
  4036fa:	enter  0x88e2,0xbe
  4036fe:	fwait
  4036ff:	jbe    0x4036d0
  403701:	test   DWORD PTR [esi-0x639345de],ebx
  403707:	sub    dh,BYTE PTR [ebp+eiz*8-0x280fe202]
  40370e:	jge    0x403767
  403710:	js     0x403748
  403712:	int3   
  403713:	jns    0x403726
  403715:	or     eax,0xd40b4832
  40371a:	cmp    ecx,DWORD PTR [esi-0x41afb641]
  403720:	jo     0x403730
  403722:	and    edi,ecx
  403724:	push   es
  403725:	mov    ds:0x5a7d38c1,eax
  40372a:	(bad)  
  40372c:	and    eax,ebx
  40372e:	hlt    
  40372f:	scas   eax,DWORD PTR es:[edi]
  403730:	es inc esp
  403732:	cmc    
  403733:	(bad)  
  403735:	pop    es
  403736:	das    
  403737:	and    bl,al
  403739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40373a:	cli    
  40373b:	and    ebx,DWORD PTR [esi+edi*8+0x7738a971]
  403742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403743:	dec    esi
  403744:	stc    
  403745:	cmp    eax,0x66c5b15f
  40374a:	lea    ebx,[ecx+0x7726b6fd]
  403750:	outs   dx,BYTE PTR ds:[esi]
  403751:	out    dx,eax
  403752:	rcl    BYTE PTR [edi],1
  403754:	jp     0x40379a
  403756:	inc    ebx
  403757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403758:	ficom  DWORD PTR [ebx]
  40375a:	ds cmp bh,cl
  40375d:	cwde   
  40375e:	mov    al,ds:0x1f15c3ea
  403763:	outs   dx,DWORD PTR ds:[esi]
  403764:	sub    eax,0x4dd8d1a1
  403769:	jmp    0x4037c4
  40376b:	inc    ecx
  40376c:	test   BYTE PTR [ecx+0x49],bl
  40376f:	inc    ebp
  403770:	call   0xb5de:0x2b6cfab9
  403777:	adc    eax,0x8004adbf
  40377c:	xchg   edi,eax
  40377d:	xchg   ecx,eax
  40377e:	xor    eax,0xce227f4e
  403783:	xchg   ecx,eax
  403784:	mov    BYTE PTR [ebp-0x29],dl
  403787:	dec    esp
  403788:	mov    bh,0xd4
  40378a:	xchg   edi,eax
  40378b:	cmp    al,0x8e
  40378d:	(bad)  
  40378e:	jp     0x403799
  403790:	fwait
  403791:	lahf   
  403792:	or     al,0xc1
  403794:	cmp    edi,esp
  403796:	popa   
  403797:	xchg   esp,eax
  403798:	fidivr DWORD PTR [edx-0x63c8f1db]
  40379e:	mov    al,0x3c
  4037a0:	and    edx,edx
  4037a2:	stos   BYTE PTR es:[edi],al
  4037a3:	int3   
  4037a4:	icebp  
  4037a5:	cwde   
  4037a6:	retf   
  4037a7:	jae    0x40381a
  4037a9:	dec    eax
  4037aa:	bound  ebx,QWORD PTR [esi+0x736a332b]
  4037b0:	xchg   BYTE PTR [eax+0x3143925],ah
  4037b6:	sahf   
  4037b7:	mov    ecx,0xbb954f37
  4037bc:	sbb    DWORD PTR [edx],0xffffff92
  4037bf:	cmp    dl,BYTE PTR [esi+eiz*8+0x3ef8bf62]
  4037c6:	sub    al,0x31
  4037c8:	cmp    ah,BYTE PTR [ebp+0x122d3cf8]
  4037ce:	push   ds
  4037cf:	inc    ebx
  4037d0:	mov    ebp,0x48198c70
  4037d5:	mov    eax,ds:0x97818320
  4037da:	int    0xb4
  4037dc:	xchg   DWORD PTR [ecx],ebp
  4037de:	xchg   esp,eax
  4037df:	cmp    BYTE PTR [edi-0x5ebce61b],bl
  4037e5:	enter  0x3b02,0xf1
  4037e9:	imul   eax,DWORD PTR [edx-0x378fdb2d],0x6b
  4037f0:	xchg   DWORD PTR [ebx+eax*2-0xe2559af],ebx
  4037f7:	mov    cl,BYTE PTR [bx]
  4037fa:	push   esp
  4037fb:	sub    al,0x8b
  4037fd:	mov    al,ds:0x18acfd26
  403802:	retf   0x3f82
  403805:	push   0xdcf19727
  40380a:	jmp    0xa73b03f7
  40380f:	clc    
  403810:	adc    ebp,DWORD PTR [ebx-0x2a]
  403813:	fbstp  TBYTE PTR [edi]
  403815:	leave  
  403816:	pushf  
  403817:	jp     0x403825
  403819:	cmp    bh,BYTE PTR [edi]
  40381b:	icebp  
  40381c:	call   0xe262:0xa3fa4277
  403823:	xchg   esi,eax
  403824:	jo     0x40386c
  403826:	and    al,0x41
  403828:	push   ecx
  403829:	push   ebx
  40382a:	popa   
  40382b:	mov    eax,fs:0xca1f569f
  403831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403832:	and    BYTE PTR [esi-0x26260943],ah
  403838:	sub    BYTE PTR [edx],cl
  40383a:	sub    al,0x32
  40383c:	sbb    DWORD PTR [eax-0x2433e7ba],esp
  403842:	and    DWORD PTR [ecx+0x4717a30b],esp
  403848:	and    DWORD PTR [esi+0x1c0167ea],0x2e
  40384f:	data16 jg 0x403806
  403852:	jl     0x40384d
  403854:	fwait
  403855:	inc    edx
  403856:	inc    esp
  403857:	es data16 loop 0x403813
  40385b:	add    DWORD PTR [ebx-0x3093645b],eax
  403861:	lods   eax,DWORD PTR ds:[esi]
  403862:	iret   
  403863:	cwde   
  403864:	dec    BYTE PTR [eax+edx*4+0x79]
  403868:	leave  
  403869:	imul   ecx,DWORD PTR ds:0x1dcf6fb3,0xffffffef
  403870:	sbb    edx,DWORD PTR [ebx+0x1010515b]
  403876:	push   edi
  403877:	dec    ebp
  403878:	int3   
  403879:	sbb    eax,0x49c408f7
  40387e:	sahf   
  40387f:	loop   0x40387e
  403881:	sbb    ch,BYTE PTR [edx]
  403883:	stos   DWORD PTR es:[edi],eax
  403884:	mov    cl,0x5a
  403886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403887:	push   ebx
  403888:	repnz or dl,BYTE PTR [edi-0x5b]
  40388c:	stc    
  40388d:	add    eax,0xb5c2abfb
  403892:	add    DWORD PTR ds:0x7a6dc47b,esp
  403898:	pushf  
  403899:	(bad)  
  40389a:	lods   eax,DWORD PTR ds:[esi]
  40389b:	sub    cl,dh
  40389d:	pop    eax
  40389e:	sub    ecx,DWORD PTR [ecx]
  4038a0:	and    BYTE PTR [ecx],bh
  4038a2:	neg    DWORD PTR [eax+0x189521fe]
  4038a8:	idiv   BYTE PTR [edx-0x75]
  4038ab:	pushf  
  4038ac:	pop    esp
  4038ad:	add    eax,DWORD PTR [edi-0x66ab6cce]
  4038b3:	xchg   edi,eax
  4038b4:	jg     0x403917
  4038b6:	jo     0x403899
  4038b8:	xchg   BYTE PTR [esi-0x80],dh
  4038bb:	inc    esi
  4038bc:	cmc    
  4038bd:	popa   
  4038be:	jno    0x403871
  4038c0:	mov    ecx,0x2648ecd9
  4038c5:	(bad)  
  4038c6:	gs cmp eax,0x73aae3ac
  4038cc:	mov    ah,BYTE PTR [ebx-0x5719e169]
  4038d2:	push   esp
  4038d3:	push   cs
  4038d4:	iret   
  4038d5:	sbb    dh,dh
  4038d7:	lea    esi,[esi+0x52bd660a]
  4038dd:	inc    esp
  4038de:	adc    BYTE PTR [edi-0x62b6c7f3],dl
  4038e4:	or     bh,bh
  4038e6:	fisttp QWORD PTR [ecx+0x5b]
  4038e9:	imul   edx,DWORD PTR [eax],0xeb31e49d
  4038ef:	stos   BYTE PTR es:[edi],al
  4038f0:	icebp  
  4038f1:	xor    al,0x69
  4038f3:	mov    cl,0xa7
  4038f5:	mov    ebx,0xf12af814
  4038fa:	sub    al,0x6d
  4038fc:	les    esp,FWORD PTR [edi-0x69b91fe7]
  403902:	mov    bh,0xf0
  403904:	xchg   ebp,eax
  403905:	sahf   
  403906:	jns    0x4038b9
  403908:	pop    ds
  403909:	dec    eax
  40390a:	or     eax,0xe1920dfc
  40390f:	add    eax,0xa9d315ad
  403914:	imul   ecx,DWORD PTR [eax],0x619d4849
  40391a:	scas   eax,DWORD PTR es:[edi]
  40391b:	shr    DWORD PTR [ecx],0xaa
  40391e:	xchg   ebp,eax
  40391f:	push   edx
  403921:	xchg   esp,eax
  403922:	les    edi,FWORD PTR ds:0xe673960
  403928:	loope  0x40399c
  40392a:	aam    0xd4
  40392c:	mov    ds:0x9b6edaf,eax
  403931:	(bad)  
  403932:	imul   ecx,esi,0x5c583ebb
  403938:	adc    DWORD PTR [esi-0x2ec5da9],ebx
  40393e:	jo     0x403913
  403940:	cs push 0xa
  403943:	xor    ah,BYTE PTR [eax+0x5a7bb45b]
  403949:	or     al,0x4f
  40394b:	(bad)  
  40394c:	and    al,0x70
  40394e:	scas   eax,DWORD PTR es:[edi]
  40394f:	addr16 jae 0x40398f
  403952:	xor    BYTE PTR [ebp+0x1b],ah
  403955:	in     eax,dx
  403956:	jle    0x403946
  403958:	or     BYTE PTR [ecx-0x117f5799],ch
  40395e:	lods   eax,DWORD PTR ds:[esi]
  40395f:	retf   0xd4ac
  403962:	fimul  WORD PTR [edx]
  403964:	push   ebx
  403965:	add    dh,BYTE PTR [edx+0x37a9f8f]
  40396b:	jbe    0x40398e
  40396d:	push   0x5d092d64
  403972:	fwait
  403973:	mov    dh,0xbf
  403975:	scas   eax,DWORD PTR es:[edi]
  403976:	lock je 0x403904
  403979:	add    eax,0xd9c90965
  40397e:	mov    ch,BYTE PTR [edx+0x3b]
  403981:	and    cl,BYTE PTR [ebx+0x1a]
  403984:	frstor [edx+0x3d]
  403987:	and    DWORD PTR [eax+0x3e],edx
  40398a:	ror    BYTE PTR [esp+ebx*4],0x76
  40398e:	dec    eax
  40398f:	sbb    eax,0x1cace6ca
  403994:	sbb    ebp,DWORD PTR [edi+0x6c548d5f]
  40399a:	xor    dl,bl
  40399c:	jne    0x403989
  40399e:	jno    0x403978
  4039a0:	dec    esp
  4039a1:	sahf   
  4039a2:	bound  ebx,QWORD PTR [ebx]
  4039a4:	dec    edx
  4039a5:	bound  edx,QWORD PTR [eax+0x7481f2b4]
  4039ab:	popa   
  4039ac:	sub    eax,0xd542c1f5
  4039b1:	mov    bl,0x86
  4039b3:	push   ebx
  4039b4:	jle    0x4039d1
  4039b6:	out    dx,eax
  4039b7:	fdiv   QWORD PTR [edi]
  4039b9:	test   BYTE PTR [eax+0x164cfe1b],cl
  4039bf:	mov    edx,0x4298793b
  4039c4:	(bad)  [ebp+eiz*1+0x6b]
  4039c8:	(bad)  
  4039c9:	xchg   ecx,eax
  4039ca:	pop    eax
  4039cb:	loope  0x403a3e
  4039cd:	xor    eax,0x53b9c1aa
  4039d2:	mov    eax,0xac915413
  4039d7:	and    al,0x27
  4039d9:	and    ecx,DWORD PTR [ebx]
  4039db:	adc    al,0x98
  4039dd:	adc    eax,0xbd708f4
  4039e2:	mov    eax,ds:0x8fe094df
  4039e7:	popf   
  4039e8:	xchg   ecx,eax
  4039e9:	push   edx
  4039ea:	sbb    bl,cl
  4039ec:	mov    edx,0x7ee9405e
  4039f1:	push   esi
  4039f2:	mov    dh,0xfd
  4039f4:	mov    eax,ds:0x9b83193e
  4039f9:	scas   eax,DWORD PTR es:[edi]
  4039fa:	ret    0x5309
  4039fd:	fbstp  TBYTE PTR [esp+esi*4+0x529dd148]
  403a04:	imul   ecx,DWORD PTR [edi-0x4ee776d1],0x6c
  403a0b:	jmp    0x403a05
  403a0d:	pop    esi
  403a0e:	sbb    DWORD PTR [ebx-0x63b9d7b8],esp
  403a14:	mov    ah,0x57
  403a16:	mov    ebp,0xe866d39f
  403a1b:	add    ebx,ecx
  403a1d:	dec    edx
  403a1e:	xor    BYTE PTR [eax+ecx*2-0x62a4498f],bl
  403a25:	sbb    DWORD PTR [edi],0x147f0690
  403a2b:	aaa    
  403a2c:	sub    esp,ecx
  403a2e:	stos   DWORD PTR es:[edi],eax
  403a2f:	pop    ss
  403a30:	out    0xf0,eax
  403a32:	std    
  403a33:	jns    0x4039f5
  403a35:	inc    eax
  403a36:	in     eax,dx
  403a37:	xchg   edi,eax
  403a38:	sbb    al,0x9d
  403a3a:	sub    BYTE PTR [ebp+0x77],0xfb
  403a3e:	dec    eax
  403a3f:	add    bh,dh
  403a41:	push   esi
  403a42:	fbstp  TBYTE PTR [ecx+0x7b]
  403a45:	xor    ch,BYTE PTR [ebp+eiz*2-0x4e]
  403a49:	mov    BYTE PTR [esi],bh
  403a4b:	mov    al,BYTE PTR [eax-0xe6a8707]
  403a51:	nop
  403a52:	int    0x5e
  403a54:	push   ds
  403a55:	icebp  
  403a56:	pusha  
  403a57:	add    DWORD PTR [ebx-0x39],0x9c0923a4
  403a5e:	push   es
  403a5f:	cmp    ebx,DWORD PTR [esp+eiz*8+0x68]
  403a63:	or     ah,ah
  403a65:	jns    0x403a51
  403a67:	ds loope 0x403a04
  403a6a:	pop    esi
  403a6b:	push   0xfffffff1
  403a6d:	adc    al,0x66
  403a6f:	push   eax
  403a70:	aad    0xe
  403a72:	jmp    0xebfff78
  403a77:	pop    ebx
  403a78:	aad    0x2b
  403a7a:	ret    
  403a7b:	(bad)  
  403a7c:	jmp    0xf620:0x710b82d5
  403a83:	pop    esi
  403a84:	push   eax
  403a85:	(bad)  
  403a86:	loop   0x403a49
  403a88:	(bad)  
  403a89:	mov    ecx,ecx
  403a8b:	nop
  403a8c:	xchg   esp,eax
  403a8d:	int    0xd8
  403a8f:	in     eax,0xd8
  403a91:	mov    ds:0xef1256e6,eax
  403a96:	pop    ebp
  403a97:	cmp    DWORD PTR [esi],0x7909b05
  403a9d:	stc    
  403a9e:	daa    
  403a9f:	test   ecx,ebx
  403aa1:	popa   
  403aa2:	push   ecx
  403aa3:	jbe    0x403a40
  403aa5:	stos   DWORD PTR es:[edi],eax
  403aa6:	enter  0x1131,0xc8
  403aaa:	adc    ebx,DWORD PTR [esi]
  403aac:	in     eax,dx
  403aad:	mov    dh,0x61
  403aaf:	dec    esp
  403ab0:	into   
  403ab1:	in     eax,0x63
  403ab3:	clc    
  403ab4:	push   edx
  403ab5:	pop    edx
  403ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab7:	fdivr  QWORD PTR [esi+0x50aa8e94]
  403abd:	cs test ch,dh
  403ac0:	sub    cl,BYTE PTR [edx]
  403ac2:	fisubr DWORD PTR [esi+0x21943a33]
  403ac8:	xchg   esp,eax
  403ac9:	mov    ebx,0xf42fb5cb
  403ace:	mov    BYTE PTR [esi+0x63],cl
  403ad1:	mov    DWORD PTR [ecx+0x73],ecx
  403ad4:	cmp    BYTE PTR [esi],dl
  403ad6:	mov    ds:0x7e8c409c,al
  403adb:	dec    eax
  403adc:	add    bh,bh
  403ade:	jp     0x403b10
  403ae0:	in     eax,0x7d
  403ae2:	cwde   
  403ae3:	jo     0x403b60
  403ae5:	pusha  
  403ae6:	sbb    ebx,DWORD PTR [eax]
  403ae8:	mov    al,ds:0xa903fd99
  403aed:	bound  eax,QWORD PTR [edi-0xbb58cd2]
  403af3:	or     DWORD PTR ds:0xa7e71b0c,0xffffffef
  403afa:	push   edx
  403afb:	das    
  403afc:	push   ss
  403afd:	mov    WORD PTR [edx+esi*4],?
  403b00:	push   eax
  403b01:	inc    esi
  403b02:	push   ecx
  403b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b04:	add    al,0x37
  403b06:	adc    cl,bl
  403b08:	and    al,BYTE PTR [esp+edx*2-0x5bc566b8]
  403b0f:	jnp    0x403ab4
  403b11:	xchg   ebx,eax
  403b12:	mov    ah,0x40
  403b14:	mov    ds:0x1147e2d1,eax
  403b19:	sbb    DWORD PTR [edx],ebx
  403b1b:	out    dx,al
  403b1c:	or     al,0xcf
  403b1e:	je     0x403aff
  403b20:	mov    edi,0xcf98ea94
  403b25:	out    0x1b,al
  403b27:	jle    0x403aaf
  403b29:	retf   0x6707
  403b2c:	jmp    0x4f7b:0x8b62d50d
  403b33:	es mov ch,0x24
  403b36:	mov    bl,0xb6
  403b38:	pop    ebp
  403b39:	xchg   edx,eax
  403b3a:	push   0x461e283a
  403b3f:	and    bl,BYTE PTR [eax]
  403b41:	cmp    al,0xfe
  403b43:	aas    
  403b44:	xchg   ebx,eax
  403b45:	jbe    0x403b1b
  403b47:	in     al,0xd8
  403b49:	mov    eax,0x8291cc2e
  403b4e:	mov    ?,ebx
  403b50:	mov    edi,0x360b7028
  403b55:	shl    DWORD PTR [ebp+edx*2+0x5],0xd0
  403b5a:	cwde   
  403b5b:	dec    edi
  403b5c:	fisubr DWORD PTR [eax+0x64]
  403b5f:	aad    0xe3
  403b61:	fsub   QWORD PTR [ebx]
  403b63:	dec    ecx
  403b64:	xchg   esp,eax
  403b65:	pop    eax
  403b66:	jp     0x403b54
  403b68:	test   BYTE PTR [bx+di-0x5352],dl
  403b6d:	inc    eax
  403b6e:	test   BYTE PTR [eax+edi*8],dh
  403b71:	sbb    eax,0x65ebc170
  403b76:	int    0x82
  403b78:	pop    ecx
  403b79:	mov    dl,0x98
  403b7b:	loop   0x403b0f
  403b7d:	shr    DWORD PTR [ecx+edx*2+0x50],0xd3
  403b82:	cmp    eax,0x6624d3cc
  403b87:	push   es
  403b88:	mov    DWORD PTR [edi],edi
  403b8a:	inc    ebx
  403b8b:	push   ecx
  403b8c:	das    
  403b8d:	inc    esi
  403b8e:	ror    DWORD PTR [eax-0x4fe8043c],1
  403b94:	sbb    eax,0x747cbee3
  403b99:	jbe    0x403b50
  403b9b:	jmp    0x67c7:0x42cbde99
  403ba2:	xor    eax,0x6f63ae52
  403ba7:	add    edx,edx
  403ba9:	sub    eax,0x591440a3
  403bae:	test   edx,edx
  403bb0:	icebp  
  403bb1:	test   bl,ch
  403bb3:	sahf   
  403bb4:	outs   dx,BYTE PTR ds:[esi]
  403bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb6:	xchg   esp,eax
  403bb7:	mov    cl,0x56
  403bb9:	addr16 mov ebx,0x1a1605d8
  403bbf:	sbb    al,0x7c
  403bc1:	adc    al,BYTE PTR ss:[ecx-0x29b8f27b]
  403bc8:	sbb    DWORD PTR ds:0xa7c6d328,ecx
  403bce:	aas    
  403bcf:	push   esi
  403bd0:	addr16 sbb eax,0x9b6bf430
  403bd6:	and    ecx,DWORD PTR [eax]
  403bd8:	pop    esp
  403bd9:	cmp    DWORD PTR [esi+0x163ee19c],ecx
  403bdf:	cmp    al,0x6
  403be1:	hlt    
  403be2:	rcr    BYTE PTR [ecx],cl
  403be4:	fstp   TBYTE PTR [ebp+0x74]
  403be7:	push   0xa
  403be9:	mov    edi,0xdd8ff4d6
  403bee:	das    
  403bef:	pop    esi
  403bf0:	inc    ebx
  403bf1:	shl    DWORD PTR [edi+0x14],1
  403bf4:	mov    al,BYTE PTR [edx]
  403bf6:	jge    0x403c20
  403bf8:	mov    eax,ds:0xa51cc7bc
  403bfd:	sub    al,0x76
  403bff:	neg    BYTE PTR [ebx-0x7b]
  403c02:	jecxz  0x403c1d
  403c04:	repnz rol BYTE PTR [ebx+0x39f7398a],cl
  403c0b:	jmp    0x741349c
  403c10:	int3   
  403c11:	ret    
  403c12:	xchg   al,ch
  403c14:	into   
  403c15:	ds ret 0x23ab
  403c19:	adc    eax,0xad3e5281
  403c1e:	inc    edx
  403c1f:	cmc    
  403c20:	pop    ebx
  403c21:	inc    edi
  403c22:	xchg   edi,eax
  403c23:	call   0x4cd99dbe
  403c28:	xchg   esi,eax
  403c29:	xlat   BYTE PTR ds:[ebx]
  403c2a:	mov    esi,0xc75cd4b9
  403c2f:	inc    ebp
  403c30:	dec    esp
  403c31:	pop    edx
  403c32:	add    al,0xe9
  403c34:	xor    dh,dh
  403c36:	jne    0x403c72
  403c38:	stos   BYTE PTR es:[edi],al
  403c39:	shl    BYTE PTR ds:0x9cf4b286,cl
  403c3f:	rcr    ebp,cl
  403c41:	inc    edi
  403c42:	(bad)  
  403c43:	ds mov ch,0x4e
  403c46:	jne    0x403c27
  403c48:	icebp  
  403c49:	add    al,0xd2
  403c4b:	ror    BYTE PTR ds:0x875f2d8c,1
  403c51:	push   0xffffffb5
  403c53:	push   ecx
  403c54:	or     eax,0xc80d30ac
  403c59:	fld    TBYTE PTR [edx]
  403c5b:	test   al,0x21
  403c5d:	sub    DWORD PTR [esi+0x7a6c3235],edx
  403c63:	cmp    eax,0xf82e313
  403c68:	or     eax,eax
  403c6a:	mov    eax,ecx
  403c6c:	out    0xcf,al
  403c6e:	ins    BYTE PTR es:[edi],dx
  403c6f:	outs   dx,DWORD PTR ds:[esi]
  403c70:	scas   eax,DWORD PTR es:[edi]
  403c71:	jb     0x403c3e
  403c73:	mov    eax,0xf712712d
  403c78:	fimul  WORD PTR [edx-0x2b]
  403c7b:	lods   al,BYTE PTR ds:[esi]
  403c7c:	movups xmm0,XMMWORD PTR [ebp+0x1a]
  403c80:	pop    ebp
  403c81:	fs sub ax,0xecff
  403c86:	pop    ss
  403c87:	push   ecx
  403c88:	daa    
  403c89:	sbb    DWORD PTR [esi-0xc],ebp
  403c8c:	sbb    eax,0x58ab0030
  403c91:	mov    ds:0x5f4a22c8,al
  403c96:	shr    BYTE PTR [ebx+0x1d],cl
  403c99:	mov    bh,0x71
  403c9b:	ins    DWORD PTR es:[edi],dx
  403c9c:	dec    esp
  403c9d:	jnp    0x403ca6
  403c9f:	add    BYTE PTR [ecx+0x30aa7611],bh
  403ca5:	add    ebp,DWORD PTR [ebx+0x32]
  403ca8:	fdivp  st(1),st
  403caa:	ror    bl,cl
  403cac:	jb     0x403c54
  403cae:	hlt    
  403caf:	pop    ebp
  403cb0:	push   0x3b
  403cb2:	mov    ch,0x18
  403cb4:	mov    cl,0xb8
  403cb6:	mov    esi,0xf68fc74c
  403cbb:	ins    DWORD PTR es:[edi],dx
  403cbc:	fimul  WORD PTR ds:[eax]
  403cbf:	xchg   ebp,eax
  403cc0:	and    edx,edi
  403cc2:	jbe    0x403c71
  403cc4:	test   ebp,ecx
  403cc6:	test   DWORD PTR [esi-0x1c],esi
  403cc9:	push   es
  403cca:	mov    al,ds:0x7447bc79
  403ccf:	call   0x3f08:0xc8364e4e
  403cd6:	push   ecx
  403cd7:	mov    esp,DWORD PTR [eax+esi*2]
  403cda:	stos   BYTE PTR es:[edi],al
  403cdb:	jp     0x403cba
  403cdd:	in     al,0x47
  403cdf:	and    al,0x3b
  403ce1:	outs   dx,DWORD PTR ds:[esi]
  403ce2:	pop    ecx
  403ce3:	add    al,0x30
  403ce5:	xor    DWORD PTR [esi+0x0],ebp
  403ce8:	(bad)  
  403ce9:	aad    0x54
  403ceb:	push   esi
  403cec:	outs   dx,BYTE PTR ds:[esi]
  403ced:	scas   al,BYTE PTR es:[edi]
  403cee:	xor    edx,esp
  403cf0:	out    0xe1,eax
  403cf2:	mov    ds:0x69a982ba,eax
  403cf7:	loop   0x403c9a
  403cf9:	(bad)  
  403cfa:	in     eax,dx
  403cfb:	icebp  
  403cfc:	cmp    DWORD PTR [esi],edi
  403cfe:	sub    DWORD PTR [edx+0x9f77030],esi
  403d04:	jl     0x403cef
  403d06:	sbb    eax,0xdd9b025d
  403d0b:	lods   al,BYTE PTR ds:[esi]
  403d0c:	pop    edi
  403d0d:	cmp    ebp,edx
  403d0f:	mov    fs,WORD PTR [edi-0x6b]
  403d12:	cmc    
  403d13:	sub    ah,BYTE PTR [edx+0x45]
  403d16:	mov    BYTE PTR ss:0xfdec2feb,ch
  403d1d:	test   DWORD PTR ds:0x8fe87cf1,eax
  403d23:	inc    eax
  403d24:	add    DWORD PTR [ebp+0x49],eax
  403d27:	pop    ebp
  403d28:	jl     0x403d6e
  403d2a:	xchg   esp,eax
  403d2b:	mov    bh,0xdc
  403d2d:	dec    esi
  403d2e:	mov    ecx,0x9c25904f
  403d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d34:	pop    ebp
  403d35:	lea    esi,[edx+eiz*4]
  403d38:	xor    esp,DWORD PTR [ebx]
  403d3a:	xor    BYTE PTR [esi],bh
  403d3c:	stos   BYTE PTR es:[edi],al
  403d3d:	fdivr  st,st(2)
  403d3f:	mov    cl,0x1
  403d41:	adc    BYTE PTR fs:[ebx-0x530ee027],bh
  403d48:	stc    
  403d49:	stos   BYTE PTR es:[edi],al
  403d4a:	inc    edx
  403d4b:	and    ecx,DWORD PTR [edi-0x588900df]
  403d51:	push   cs
  403d52:	push   ds
  403d53:	dec    esp
  403d54:	jmp    0x403d4d
  403d56:	pushf  
  403d57:	ins    DWORD PTR es:[edi],dx
  403d58:	je     0x403cef
  403d5a:	jnp    0x403dbf
  403d5c:	aaa    
  403d5d:	jbe    0x403cfa
  403d5f:	aam    0x7a
  403d61:	push   ds
  403d62:	sbb    DWORD PTR [edi],edi
  403d64:	out    dx,al
  403d65:	ins    DWORD PTR es:[edi],dx
  403d66:	jl     0x403d7a
  403d68:	sbb    bl,dl
  403d6a:	fs pusha 
  403d6c:	jnp    0x403d9c
  403d6e:	mov    ch,0x9c
  403d70:	mov    ecx,0xb26857ab
  403d75:	push   es
  403d76:	or     eax,0xa9077285
  403d7b:	mov    ds:0xc1ec7475,al
  403d80:	std    
  403d81:	push   0x56
  403d83:	add    ebx,esi
  403d85:	dec    eax
  403d86:	push   ds
  403d87:	and    edx,ecx
  403d89:	jle    0x403d70
  403d8b:	add    BYTE PTR [edx+0x3],0x81
  403d8f:	neg    BYTE PTR ds:0xbf3b53be
  403d95:	popf   
  403d96:	add    dh,BYTE PTR ds:0x5234d222
  403d9c:	(bad)  
  403d9d:	cli    
  403d9e:	dec    edx
  403d9f:	and    eax,ebx
  403da1:	dec    edx
  403da2:	or     eax,0x2c0e24c6
  403da7:	mov    cl,0xd5
  403da9:	mov    eax,ds:0x71f51e4e
  403dae:	and    eax,0x329c0004
  403db3:	inc    edx
  403db4:	imul   ebx,DWORD PTR [ebp-0x4a7fc1ff],0x70
  403dbb:	push   0x7eb52fea
  403dc0:	in     al,dx
  403dc1:	jmp    0x403d53
  403dc3:	sbb    esp,DWORD PTR [edx]
  403dc5:	jb     0x403e27
  403dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc8:	outs   dx,DWORD PTR ds:[esi]
  403dc9:	mov    edx,0x462ff185
  403dce:	rcr    BYTE PTR [eax-0x16a4e40b],cl
  403dd4:	pop    edx
  403dd5:	push   ebx
  403dd6:	cmp    BYTE PTR [ebx],ah
  403dd8:	push   eax
  403dd9:	or     dh,BYTE PTR [eax]
  403ddb:	inc    ebp
  403ddc:	inc    esp
  403ddd:	into   
  403dde:	mov    eax,fs
  403de0:	pop    ebx
  403de1:	mov    cs,WORD PTR [edx]
  403de3:	mov    dh,0x6e
  403de5:	(bad)  
  403de6:	sub    DWORD PTR [ebx+ebx*4-0x70a7fdff],ebp
  403ded:	mov    ds:0x2c77944b,eax
  403df2:	pop    ebx
  403df3:	cmc    
  403df4:	pop    esp
  403df5:	cli    
  403df6:	stos   DWORD PTR es:[edi],eax
  403df7:	pop    ebx
  403df8:	xor    eax,0x9510c239
  403dfd:	cmp    al,0xc5
  403dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e00:	jno    0x403e33
  403e02:	test   al,0x78
  403e04:	and    ebp,DWORD PTR [ecx-0x5e]
  403e07:	fdiv   QWORD PTR [eax]
  403e09:	mov    ch,0x21
  403e0b:	cmc    
  403e0c:	hlt    
  403e0d:	pop    edi
  403e0e:	out    0x35,al
  403e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e11:	lea    ebp,[esi+edi*8]
  403e14:	(bad)  
  403e15:	mov    al,0x86
  403e17:	aam    0xf
  403e19:	jmp    0xb038:0x8e7d46d1
  403e20:	div    BYTE PTR [eax-0x7911c5fd]
  403e26:	push   0x217aa8fc
  403e2b:	xor    BYTE PTR [esi+eiz*2+0x7579a96d],bh
  403e32:	lods   eax,DWORD PTR ds:[esi]
  403e33:	xchg   ebp,eax
  403e34:	or     dl,BYTE PTR [edi]
  403e36:	ins    DWORD PTR es:[edi],dx
  403e37:	cwde   
  403e38:	ret    0x1b46
  403e3b:	mov    ch,0x2e
  403e3d:	xor    DWORD PTR [edi+esi*4],esp
  403e40:	mov    ebx,ebx
  403e42:	nop
  403e43:	ins    DWORD PTR es:[edi],dx
  403e44:	das    
  403e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e46:	add    DWORD PTR [eax+edx*2-0x408b4b69],0x7b
  403e4e:	xchg   edx,eax
  403e4f:	jp     0x403e51
  403e51:	mov    cl,0x8e
  403e53:	pop    es
  403e54:	jp     0x403e41
  403e56:	loop   0x403ea6
  403e58:	add    ebx,ecx
  403e5a:	mov    DWORD PTR [ebp+0x5081e35e],eax
  403e60:	(bad)  
  403e61:	ror    esp,0x4c
  403e64:	mov    di,0xb09a
  403e68:	pop    ds
  403e69:	mov    esp,0xd2c8957e
  403e6e:	lea    ecx,[ecx+0xe]
  403e71:	xchg   edx,eax
  403e72:	push   ds
  403e73:	pop    ss
  403e74:	pushf  
  403e75:	ins    BYTE PTR es:[edi],dx
  403e76:	ror    DWORD PTR [ebx-0x793cb0a9],cl
  403e7c:	iret   
  403e7d:	jnp    0x403e83
  403e7f:	or     esi,ebp
  403e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e82:	out    0x26,al
  403e84:	push   es
  403e85:	jmp    0x225a:0x4e59602b
  403e8c:	fadd   QWORD PTR [esi+0xa]
  403e8f:	add    ebp,DWORD PTR [edi-0x3c]
  403e92:	lahf   
  403e93:	and    ebx,DWORD PTR [ebp-0x25cdabad]
  403e99:	or     ecx,0xc1c39f15
  403e9f:	mov    cl,0xf
  403ea1:	mov    edx,0x67271c4c
  403ea6:	dec    ecx
  403ea7:	shl    DWORD PTR ds:0x6f78d265,1
  403ead:	pop    ebp
  403eae:	call   0xfafc:0x42a33f0c
  403eb5:	jecxz  0x403f20
  403eb7:	adc    ch,BYTE PTR [eax-0x25]
  403eba:	inc    ebx
  403ebb:	cmp    eax,0x3c5cce16
  403ec0:	or     DWORD PTR [ecx],0x50
  403ec3:	lods   eax,DWORD PTR ds:[esi]
  403ec4:	aaa    
  403ec5:	mov    esi,0xe9b6be7c
  403eca:	pusha  
  403ecb:	std    
  403ecc:	or     al,0xd
  403ece:	mov    cl,0x1a
  403ed0:	lock mov ds:0x9d1a81ea,al
  403ed6:	lahf   
  403ed7:	hlt    
  403ed8:	dec    edx
  403ed9:	mov    bh,0xe
  403edb:	into   
  403edc:	pusha  
  403edd:	mov    esp,0xbe274d01
  403ee2:	iret   
  403ee3:	cmp    al,0xbe
  403ee5:	dec    esp
  403ee6:	int    0xe9
  403ee8:	mov    edx,es
  403eea:	cmp    esi,DWORD PTR ds:0x700ec754
  403ef0:	cli    
  403ef1:	jl     0x403f01
  403ef3:	iret   
  403ef4:	je     0x403e9b
  403ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef7:	mov    DWORD PTR [ebx+0x42],ebx
  403efa:	adc    bh,BYTE PTR [esi+0x58ea12fc]
  403f00:	push   ds
  403f01:	mov    ah,BYTE PTR [ebx]
  403f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f04:	add    al,0xba
  403f06:	add    eax,DWORD PTR [eax]
  403f08:	retf   0x9eb7
  403f0b:	ins    BYTE PTR es:[edi],dx
  403f0c:	inc    edx
  403f0d:	mov    ds:0xc450e7a3,al
  403f12:	cmp    DWORD PTR [ecx],edx
  403f14:	repz aaa 
  403f16:	dec    edx
  403f17:	pop    es
  403f18:	jle    0x403f44
  403f1a:	jno    0x403f1a
  403f1c:	data16 sbb cl,bh
  403f1f:	xor    al,0x10
  403f21:	xchg   ebp,eax
  403f22:	pop    ebp
  403f23:	mov    bh,0xf2
  403f25:	out    dx,al
  403f26:	(bad)  
  403f28:	shl    DWORD PTR [ebp+0x1ea89c23],1
  403f2e:	inc    ecx
  403f2f:	lods   eax,DWORD PTR ds:[esi]
  403f30:	stos   BYTE PTR es:[edi],al
  403f31:	and    edi,DWORD PTR [ebp+0x26]
  403f34:	and    ebx,DWORD PTR [ebx+0x41]
  403f37:	add    BYTE PTR [esi],ch
  403f39:	sysenter 
  403f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f3c:	jb     0x403fb5
  403f3e:	sbb    al,0x8e
  403f40:	stos   BYTE PTR es:[edi],al
  403f41:	add    BYTE PTR [edx],ch
  403f43:	or     ah,cl
  403f45:	xor    dh,bl
  403f47:	adc    al,0x3
  403f49:	ror    BYTE PTR [ecx+0x76c50767],cl
  403f4f:	mov    WORD PTR [ebx-0x5e71fe32],?
  403f55:	dec    eax
  403f56:	mov    ebp,0xf7eaba10
  403f5b:	ret    
  403f5c:	(bad)  
  403f5d:	mov    dh,0x86
  403f5f:	mov    ds:0x85ac5b94,al
  403f64:	inc    esi
  403f65:	and    BYTE PTR [ebx-0x605bf010],0xa5
  403f6c:	and    BYTE PTR [ecx+eax*4+0xa],bh
  403f70:	dec    esi
  403f71:	push   ecx
  403f72:	adc    eax,0xd0e5a8d
  403f77:	(bad)  
  403f78:	xchg   edx,eax
  403f79:	jge    0x403fc8
  403f7b:	sar    BYTE PTR ss:[edi+0x5e],1
  403f7f:	or     dh,al
  403f81:	cmp    eax,0x269f510e
  403f86:	rcr    ebp,cl
  403f88:	pop    eax
  403f89:	call   0xf3b2:0xfd34548b
  403f90:	lahf   
  403f91:	and    al,0x3d
  403f93:	cmp    al,BYTE PTR [ebx+0x1b]
  403f96:	mov    eax,DWORD PTR [ecx]
  403f98:	mov    al,ds:0x5c9f5796
  403f9d:	(bad)  
  403f9e:	dec    eax
  403f9f:	pop    esi
  403fa0:	gs fsubrp st(4),st
  403fa3:	dec    ebx
  403fa4:	icebp  
  403fa5:	and    bx,WORD PTR [ecx-0x77560ecf]
  403fac:	pop    ds
  403fad:	retf   
  403fae:	cwde   
  403faf:	jne    0x403fc6
  403fb1:	scas   eax,DWORD PTR es:[edi]
  403fb2:	je     0x403f7a
  403fb4:	and    esp,DWORD PTR [esi-0xb]
  403fb7:	dec    edi
  403fb8:	(bad)  
  403fb9:	std    
  403fba:	adc    DWORD PTR [ebx+eax*8-0x7],eax
  403fbe:	jge    0x403fe8
  403fc0:	lock adc eax,0x9ce059f3
  403fc6:	jl     0x404002
  403fc8:	fild   DWORD PTR [esi+edi*2+0xd]
  403fcc:	popf   
  403fcd:	in     al,0x1a
  403fcf:	inc    dh
  403fd1:	sub    bh,BYTE PTR [ebp-0x5e]
  403fd4:	mov    eax,0x2473e771
  403fd9:	and    eax,0x70bf639c
  403fde:	pushf  
  403fdf:	das    
  403fe0:	xor    BYTE PTR [ebx+0x4ffa3985],0xa1
  403fe7:	or     DWORD PTR [ecx+eiz*1+0x7f93f8be],esp
  403fee:	ja     0x403f98
  403ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ff1:	cwde   
  403ff2:	int    0xbb
  403ff4:	pop    ecx
  403ff5:	sbb    eax,0x77f7d011
  403ffa:	inc    edx
  403ffb:	outs   dx,BYTE PTR ds:[esi]
  403ffc:	ret    0x9e56
  403fff:	test   BYTE PTR [eax-0x19],ah
  404002:	mov    dl,0xaa
  404004:	loopne 0x403fef
  404006:	inc    edi
  404007:	sub    DWORD PTR [eax],ecx
  404009:	xchg   DWORD PTR [esi+0x16],ebp
  40400c:	jl     0x404031
  40400e:	jmp    0xa142:0x75c5e356
  404015:	nop
  404016:	outs   dx,BYTE PTR ds:[esi]
  404017:	lahf   
  404018:	cmp    ecx,esi
  40401a:	xchg   ebp,eax
  40401b:	add    ebp,DWORD PTR [eax-0x1a4a3aae]
  404021:	lods   al,BYTE PTR ds:[esi]
  404022:	lea    edi,[edx+0x401b3757]
  404028:	test   eax,0x65f4d845
  40402d:	scas   eax,DWORD PTR es:[edi]
  40402e:	pop    ss
  40402f:	imul   ebx,DWORD PTR [esi],0x49bdf09a
  404035:	sbb    eax,0xf8b5a22c
  40403a:	add    ah,BYTE PTR [esi*2-0x57d3b691]
  404041:	out    0x34,eax
  404043:	jo     0x404099
  404045:	arpl   WORD PTR [ecx+eiz*1+0x57],sp
  404049:	popa   
  40404a:	add    WORD PTR [ebp-0xa63a2ad],si
  404051:	shr    esi,0x7b
  404054:	fnstenv [edi+0x77]
  404057:	mov    edx,0xb8128e4d
  40405c:	arpl   WORD PTR [ecx+0x1a4bfa7e],bx
  404062:	jo     0x404098
  404064:	js     0x404086
  404066:	push   es
  404067:	stos   DWORD PTR es:[edi],eax
  404068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404069:	jno    0x403ffb
  40406b:	cmc    
  40406c:	jge    0x4040c7
  40406e:	sbb    eax,0x9661d6b5
  404073:	std    
  404074:	mov    ebp,0x33f8634d
  404079:	add    esp,DWORD PTR [ecx-0x3f]
  40407c:	cmp    al,0xd3
  40407e:	inc    edi
  40407f:	stos   BYTE PTR es:[edi],al
  404080:	dec    edi
  404081:	aad    0x4
  404083:	mov    ebx,0xe059dab3
  404088:	push   cs
  404089:	or     dh,ah
  40408b:	adc    dl,BYTE PTR [esi-0x25e030f6]
  404091:	packsswb mm0,QWORD PTR [esi-0x6e5e1def]
  404098:	push   esi
  404099:	sbb    bh,ch
  40409b:	aas    
  40409c:	ficom  DWORD PTR [eax+0x753599dc]
  4040a2:	into   
  4040a3:	pop    ebp
  4040a4:	push   0x889d45d1
  4040a9:	jb     0x40408e
  4040ab:	add    al,0x48
  4040ad:	in     eax,0x8d
  4040af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b0:	dec    esp
  4040b1:	dec    ecx
  4040b2:	sub    edx,DWORD PTR [ebp+0x61d7811c]
  4040b8:	ss ja  0x4040ea
  4040bb:	ja     0x40412d
  4040bd:	fst    QWORD PTR [eax]
  4040bf:	adc    edx,edx
  4040c1:	or     ch,BYTE PTR [edx+0xd9690eb]
  4040c7:	scas   al,BYTE PTR es:[edi]
  4040c8:	call   0x854d:0x71a0f618
  4040cf:	js     0x404108
  4040d1:	mov    bh,0x8f
  4040d3:	pop    edi
  4040d4:	vaddps xmm4,xmm2,XMMWORD PTR [edi-0xb5988f0]
  4040dc:	dec    ecx
  4040dd:	lods   eax,DWORD PTR ds:[esi]
  4040de:	xor    eax,0x9686b601
  4040e3:	jle    0x40408e
  4040e5:	adc    esi,edi
  4040e7:	pop    edx
  4040e8:	adc    al,0x56
  4040ea:	das    
  4040eb:	icebp  
  4040ec:	inc    edi
  4040ed:	add    eax,DWORD PTR [eax+0x3dc3b779]
  4040f3:	mov    cl,0xce
  4040f5:	mov    dh,0x1f
  4040f7:	cmp    eax,0x30c76123
  4040fc:	inc    ebp
  4040fd:	and    BYTE PTR cs:[ebx],dl
  404100:	push   0xfffffff6
  404102:	or     bl,BYTE PTR [ecx+0x3b]
  404105:	stc    
  404106:	adc    al,0x13
  404108:	and    BYTE PTR [esi+0x260dffca],0x4e
  40410f:	pushf  
  404110:	xchg   ebp,eax
  404111:	jp     0x40418e
  404113:	push   edi
  404114:	imul   esi,DWORD PTR [esi],0x2c07a663
  40411a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40411b:	icebp  
  40411c:	mov    ds:0xaa7d3491,eax
  404121:	(bad)  
  404125:	push   edi
  404126:	pop    edi
  404127:	std    
  404128:	loopne 0x4041a3
  40412a:	lods   eax,DWORD PTR ds:[esi]
  40412b:	inc    ebp
  40412c:	out    0xca,al
  40412e:	cmp    DWORD PTR [eax-0x21],ebx
  404131:	hlt    
  404132:	pusha  
  404133:	sti    
  404134:	pop    edx
  404135:	je     0x4040bb
  404137:	dec    edi
  404138:	xor    ecx,0x570edfe0
  40413e:	or     esi,ebx
  404140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404141:	sbb    BYTE PTR [esi-0x16],cl
  404144:	cmp    dh,dl
  404146:	jns    0x404156
  404148:	xchg   BYTE PTR [edi+0x60],ch
  40414b:	ins    BYTE PTR es:[edi],dx
  40414c:	mov    edx,0x67b4cfb7
  404151:	(bad)  
  404152:	dec    ecx
  404153:	pop    ebp
  404154:	jmp    0x5711f9a0
  404159:	mov    al,0xb5
  40415b:	in     al,dx
  40415c:	fld    st(3)
  40415e:	pop    ds
  40415f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404160:	sbb    BYTE PTR [eax],0xf7
  404163:	and    dl,bh
  404165:	fcom   QWORD PTR [ebx]
  404167:	jl     0x404182
  404169:	je     0x404192
  40416b:	ins    DWORD PTR es:[edi],dx
  40416c:	add    DWORD PTR [esi+0x201a5cd9],eax
  404172:	(bad)  
  404173:	jle    0x404182
  404175:	test   al,0xde
  404177:	nop
  404178:	ret    
  404179:	rcl    DWORD PTR [edi-0x49ed71cb],0x6
  404180:	loopne 0x4041bc
  404182:	call   FWORD PTR [edx]
  404184:	add    edx,DWORD PTR [ebp-0x46]
  404187:	mov    ebx,DWORD PTR [ebx*2-0x6d7fb93d]
  40418e:	add    esp,ecx
  404190:	call   0xca96:0x7f0cdd43
  404197:	jnp    0x4041bb
  404199:	inc    eax
  40419a:	adc    BYTE PTR [ecx+ebp*8],0x72
  40419e:	mov    ds:0x8cf0a51d,al
  4041a3:	jo     0x40419b
  4041a5:	fnstenv [eax+0x57b16756]
  4041ab:	fimul  DWORD PTR [edx-0x2b1414cc]
  4041b1:	push   ss
  4041b2:	inc    edi
  4041b3:	stos   DWORD PTR es:[edi],eax
  4041b4:	cs popa 
  4041b6:	fcom   QWORD PTR [ecx-0x1bb6f9a6]
  4041bc:	push   edi
  4041bd:	in     eax,0xf5
  4041bf:	jae    0x40422b
  4041c1:	outs   dx,DWORD PTR ds:[esi]
  4041c2:	popf   
  4041c3:	and    al,0x64
  4041c5:	test   BYTE PTR [eax],ch
  4041c7:	mov    eax,0x6f189d6
  4041cc:	fistp  DWORD PTR [ecx+0x63]
  4041cf:	xchg   edi,eax
  4041d0:	mov    dl,0xd0
  4041d2:	loop   0x404204
  4041d4:	xchg   edx,eax
  4041d5:	jae    0x4041a0
  4041d7:	sub    eax,0xa6e0d494
  4041dc:	ds int3 
  4041de:	xor    DWORD PTR [edi],ebp
  4041e0:	mov    WORD PTR [edi-0x10],ss
  4041e3:	sub    BYTE PTR [ebp+0x4f],al
  4041e6:	lea    eax,[ebx-0xe]
  4041e9:	test   BYTE PTR [edx+0xf0fda8d],0x8f
  4041f0:	iret   
  4041f1:	push   ecx
  4041f2:	mov    esi,0xfe0e4aa1
  4041f7:	ins    BYTE PTR es:[edi],dx
  4041f8:	push   0xffffffb0
  4041fa:	jb     0x4041f1
  4041fc:	in     eax,dx
  4041fd:	iret   
  4041fe:	leave  
  4041ff:	jae    0x4041f3
  404201:	retf   
  404202:	push   es
  404203:	das    
  404204:	cmp    ecx,DWORD PTR [ebx]
  404206:	inc    ebp
  404207:	xor    eax,DWORD PTR [edx-0x1737eb97]
  40420d:	dec    edx
  40420e:	push   ebx
  40420f:	mov    ds:0xa3a0b10a,eax
  404214:	lods   eax,DWORD PTR ds:[esi]
  404215:	cli    
  404216:	mov    bh,0xd9
  404218:	mov    al,ds:0x61fb298c
  40421d:	xchg   ebx,eax
  40421e:	sti    
  40421f:	icebp  
  404220:	push   es
  404221:	scas   al,BYTE PTR es:[edi]
  404222:	mov    ds:0x253a2040,al
  404227:	stc    
  404228:	fadd   QWORD PTR [edi+eiz*2]
  40422b:	push   es
  40422c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422d:	in     al,0x9
  40422f:	call   0x78d38ca5
  404234:	xlat   BYTE PTR ds:[ebx]
  404235:	call   0xe6fc:0xd9e42320
  40423c:	int    0xa8
  40423e:	fst    DWORD PTR [ecx-0x5d500ec3]
  404244:	sbb    al,0xff
  404246:	jo     0x404204
  404248:	xchg   esi,eax
  404249:	je     0x404266
  40424b:	jle    0x404251
  40424d:	scas   al,BYTE PTR es:[edi]
  40424e:	xchg   ecx,eax
  40424f:	mov    ah,0x3e
  404251:	mov    ds:0xa18206fb,al
  404256:	shr    BYTE PTR [edx],cl
  404258:	inc    edx
  404259:	sub    BYTE PTR [edi+0x2c5b173f],cl
  40425f:	or     al,0xf9
  404261:	sbb    eax,DWORD PTR [edx-0x33]
  404264:	outs   dx,BYTE PTR ds:[esi]
  404265:	(bad)  
  404266:	fmul   QWORD PTR [ecx]
  404268:	les    ebx,FWORD PTR [edi]
  40426a:	imul   edx,DWORD PTR [ebp+ebx*4-0x45eb662a],0xb3493ef2
  404275:	aaa    
  404276:	aam    0x4
  404278:	out    dx,eax
  404279:	cdq    
  40427a:	loopne 0x4042d1
  40427c:	inc    ecx
  40427d:	jmp    0x50d7802a
  404282:	xor    dl,cl
  404284:	add    al,0xdb
  404286:	cs dec ecx
  404288:	test   al,0xc
  40428a:	div    bl
  40428c:	jae    0x4042c9
  40428e:	ret    0x60ec
  404291:	cld    
  404292:	fist   WORD PTR [ecx]
  404294:	mov    bh,0x1f
  404296:	(bad)  ds:0x3884f8a8
  40429c:	cdq    
  40429d:	or     eax,0x627e1d0
  4042a2:	int3   
  4042a3:	ret    
  4042a4:	sti    
  4042a5:	in     eax,0x89
  4042a7:	gs pop ss
  4042a9:	and    BYTE PTR [ecx-0x6d],ch
  4042ac:	ror    ebx,1
  4042ae:	mov    WORD PTR [ebx],ds
  4042b0:	adc    al,0xbb
  4042b2:	ja     0x404264
  4042b4:	(bad)  
  4042b6:	addr16 int 0xaf
  4042b9:	cmp    ebp,DWORD PTR [edi+0x26edef8d]
  4042bf:	jb     0x404247
  4042c1:	in     eax,dx
  4042c2:	inc    ebp
  4042c3:	xor    eax,0xe1c941b8
  4042c8:	fnstcw WORD PTR [edx-0x76effe4a]
  4042ce:	sub    esp,edi
  4042d0:	add    eax,0x3a4984fe
  4042d5:	cdq    
  4042d6:	cld    
  4042d7:	cs xchg edx,eax
  4042d9:	add    ebx,edx
  4042db:	int3   
  4042dc:	scas   eax,DWORD PTR es:[edi]
  4042dd:	dec    ecx
  4042de:	ret    
  4042df:	mov    ebx,0xea185689
  4042e4:	mov    bl,0x20
  4042e6:	push   edi
  4042e7:	test   al,0x18
  4042e9:	push   esi
  4042ea:	aad    0xa1
  4042ec:	sub    al,0xc9
  4042ee:	inc    eax
  4042ef:	cld    
  4042f0:	jecxz  0x4042e9
  4042f2:	js     0x404290
  4042f4:	imul   esp,edi,0xffffff8e
  4042f7:	mov    ds:0xd24bd103,eax
  4042fc:	xchg   edi,eax
  4042fd:	je     0x40434b
  4042ff:	push   esp
  404300:	and    dl,BYTE PTR [esi]
  404302:	scas   eax,DWORD PTR es:[edi]
  404303:	inc    esi
  404304:	mov    edx,0xf0f81930
  404309:	fndisi(8087 only) 
  40430b:	cmc    
  40430c:	push   0xd61d3fd0
  404311:	cmc    
  404312:	sub    al,0x4f
  404314:	pop    esp
  404315:	cmp    edi,0x2a
  404318:	(bad)  
  404319:	push   edx
  40431a:	(bad)  
  40431c:	xchg   eax,ecx
  40431e:	ins    BYTE PTR es:[edi],dx
  40431f:	mov    ds:0xfbb1b70c,al
  404324:	call   0x46ed:0x25370a9f
  40432b:	popa   
  40432c:	sti    
  40432d:	cmp    eax,0x58cb9f5d
  404332:	test   eax,0x76639634
  404337:	cmp    eax,0xa2ff182d
  40433c:	sub    eax,0x4dace942
  404341:	aas    
  404342:	out    dx,eax
  404343:	push   edx
  404344:	jmp    0x51d0f905
  404349:	neg    ah
  40434b:	sub    bh,BYTE PTR [esi-0x5e]
  40434e:	jno    0x404388
  404350:	and    BYTE PTR [ecx-0x6c3063b5],0xa0
  404357:	xrelease mov BYTE PTR [ecx+0x2a],dl
  40435b:	xor    dl,dh
  40435d:	push   cs
  40435e:	sbb    BYTE PTR [edx-0x65d82c6e],dh
  404364:	lea    eax,[edi]
  404366:	jo     0x40430e
  404368:	ret    0xa994
  40436b:	(bad)  
  40436c:	push   ebp
  40436d:	and    BYTE PTR [ebp+0x54],0x9
  404371:	fld    QWORD PTR [eax]
  404373:	mov    ebp,0x1c7bda46
  404378:	adc    al,0x41
  40437a:	(bad)  
  40437b:	mul    DWORD PTR [ebp-0x80]
  40437e:	out    dx,eax
  40437f:	xor    al,al
  404381:	(bad)  
  404382:	not    al
  404384:	shl    BYTE PTR [ebx],0xa5
  404387:	ret    0xf33d
  40438a:	add    dh,dl
  40438c:	mov    ds:0xc51a4b9c,eax
  404391:	add    DWORD PTR [esi-0x146e9add],0xffffffd9
  404398:	mov    edi,0x8e362cb
  40439d:	push   ss
  40439e:	jo     0x404384
  4043a0:	lahf   
  4043a1:	lds    esi,FWORD PTR [ebx+0x72]
  4043a4:	(bad)  
  4043a5:	or     DWORD PTR [edx-0x56],ecx
  4043a8:	or     eax,0x7ae9d4d0
  4043ad:	dec    ebx
  4043ae:	push   cs
  4043af:	out    dx,eax
  4043b0:	je     0x40433f
  4043b2:	ins    BYTE PTR es:[edi],dx
  4043b3:	sbb    eax,eax
  4043b5:	push   ss
  4043b6:	je     0x40439c
  4043b8:	lahf   
  4043b9:	shl    DWORD PTR [edx-0x48],0x35
  4043bd:	mov    BYTE PTR [ebp-0x350288ce],bh
  4043c3:	cmp    DWORD PTR [esi+0x125225aa],ebx
  4043c9:	cmp    DWORD PTR [eax+0x77],ebx
  4043cc:	int    0xb3
  4043ce:	punpckhbw mm2,QWORD PTR [eax]
  4043d1:	inc    ebp
  4043d2:	(bad)  [ebp+esi*2+0x3c]
  4043d6:	fldenv [ebx]
  4043d8:	jle    0x4043fd
  4043da:	out    0x51,eax
  4043dc:	ret    
  4043dd:	push   0x3b
  4043df:	pop    edx
  4043e0:	xchg   edi,eax
  4043e1:	cmp    BYTE PTR [edx+eiz*2],bl
  4043e4:	sub    al,0x21
  4043e6:	mov    BYTE PTR [edx-0x4a8995bc],ch
  4043ec:	loop   0x404411
  4043ee:	add    cl,0xd4
  4043f1:	out    dx,eax
  4043f2:	adc    bl,dh
  4043f4:	mov    bl,0xd4
  4043f6:	lock lods eax,DWORD PTR ds:[esi]
  4043f8:	test   BYTE PTR gs:[edx+0x7f],bl
  4043fc:	ficomp WORD PTR [ebx]
  4043fe:	cwde   
  4043ff:	in     eax,dx
  404400:	(bad)
  404403:	xchg   BYTE PTR [esi-0x54],al
  404406:	mov    edi,0x1df7e8d4
  40440b:	xchg   ebx,eax
  40440c:	lea    ecx,[eax]
  40440e:	cmp    ah,BYTE PTR [ebp-0x45790075]
  404414:	push   esp
  404415:	mov    esi,0x49a840bd
  40441a:	push   esi
  40441b:	lea    esp,[ebp-0x33]
  40441e:	repz jge 0x4043f6
  404421:	cmp    BYTE PTR [esi+0x23cc2621],bh
  404427:	addr16 in al,0x9
  40442a:	push   esp
  40442b:	mov    al,dl
  40442d:	nop
  40442e:	pop    esi
  40442f:	mov    ds:0xa58b856d,eax
  404434:	sbb    BYTE PTR [ecx-0x46],al
  404437:	sbb    BYTE PTR [ebp-0xd],0xc
  40443b:	jge    0x40444e
  40443d:	mov    ecx,0x9dd3286f
  404442:	sbb    al,0xa
  404444:	push   ebp
  404445:	sub    ebx,eax
  404447:	sub    BYTE PTR [edi],bl
  404449:	fdiv   QWORD PTR [ebp-0x7d]
  40444c:	test   eax,0x47c41612
  404451:	jne    0x404405
  404453:	addr16 js 0x40445a
  404456:	sbb    BYTE PTR [ecx+0x227e4fb7],ch
  40445c:	test   eax,0xbf51c444
  404461:	push   cs
  404462:	in     al,dx
  404463:	cmp    eax,0x9bf2ebee
  404468:	push   eax
  404469:	test   dl,bh
  40446b:	das    
  40446c:	ds pop es
  40446e:	ds jns 0x40440c
  404471:	jns    0x404474
  404473:	scas   al,BYTE PTR es:[edi]
  404474:	mov    DWORD PTR [edi+0x44f71800],esp
  40447a:	cmp    edx,DWORD PTR [esi]
  40447c:	ror    DWORD PTR [ecx+0x36],cl
  40447f:	dec    edi
  404480:	gs cwde 
  404482:	imul   ecx,edx,0x51260275
  404488:	stc    
  404489:	ret    0xfa48
  40448c:	scas   al,BYTE PTR es:[edi]
  40448d:	cmc    
  40448e:	loop   0x404488
  404490:	sbb    dh,BYTE PTR ds:0x80e174cf
  404496:	in     al,dx
  404497:	add    eax,DWORD PTR [ebp+0x1ed03e52]
  40449d:	sbb    BYTE PTR [ecx-0x64],dh
  4044a0:	or     al,0x2a
  4044a2:	fadd   QWORD PTR [edi+0x7036b28b]
  4044a8:	scas   al,BYTE PTR es:[edi]
  4044a9:	in     eax,dx
  4044aa:	mov    WORD PTR [edx+edi*2+0x7],es
  4044ae:	int    0x92
  4044b0:	cmc    
  4044b1:	xchg   edx,eax
  4044b2:	call   0xa6877174
  4044b7:	push   eax
  4044b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b9:	cmp    BYTE PTR ds:0x399c9c95,dl
  4044bf:	jno    0x4044c4
  4044c1:	jno    0x4044af
  4044c3:	push   edi
  4044c4:	mov    eax,0x9497c30e
  4044c9:	dec    ebx
  4044ca:	xchg   DWORD PTR [ebx+0x4b],ecx
  4044cd:	les    edx,FWORD PTR [esi+ebp*1-0x73ef2577]
  4044d4:	cmp    BYTE PTR [ebp-0x68d57947],dh
  4044da:	xchg   edx,eax
  4044db:	inc    edi
  4044dc:	or     DWORD PTR [eax+eiz*4],0x3
  4044e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e1:	ja     0x4044d4
  4044e3:	rol    DWORD PTR [ebx],0x52
  4044e6:	iret   
  4044e7:	jmp    0xa1368d3c
  4044ec:	and    al,0x10
  4044ee:	sti    
  4044ef:	dec    esp
  4044f0:	jle    0x404519
  4044f2:	inc    eax
  4044f3:	inc    ebp
  4044f4:	sub    DWORD PTR [edi+0x272ad30e],ecx
  4044fa:	add    BYTE PTR [esi-0x543e023e],bl
  404500:	push   eax
  404501:	test   eax,0xd42912a9
  404506:	xchg   ebx,eax
  404507:	arpl   WORD PTR [ecx+0x6b],bx
  40450a:	fild   QWORD PTR [ebx+0x35629c15]
  404510:	pushf  
  404511:	retf   
  404512:	add    eax,0x53c2a564
  404517:	mov    ah,0x68
  404519:	or     al,0x1c
  40451b:	(bad)  
  40451d:	jge    0x4044e5
  40451f:	jnp    0x4044d1
  404521:	lock rol DWORD PTR ds:[ecx-0x420b64ca],0xae
  40452a:	push   ebp
  40452b:	inc    ebx
  40452c:	push   esp
  40452d:	shr    DWORD PTR [ecx+0x4d],1
  404530:	leave  
  404531:	and    BYTE PTR [eax-0x6dffc2f0],bh
  404537:	jg     0x40450b
  404539:	das    
  40453a:	pusha  
  40453b:	xchg   DWORD PTR [ecx+ecx*4],ebp
  40453e:	(bad)  
  40453f:	pusha  
  404540:	lods   al,BYTE PTR ds:[esi]
  404541:	mov    WORD PTR cs:[edx],fs
  404544:	sub    eax,0xc3628e6e
  404549:	mov    esp,0x4550d351
  40454e:	sub    al,0xfc
  404550:	push   ecx
  404551:	leave  
  404552:	pushf  
  404553:	ins    BYTE PTR es:[edi],dx
  404554:	xor    BYTE PTR [ecx+0x481433fb],0x4b
  40455b:	jl     0x404578
  40455d:	rol    BYTE PTR [esi-0x65],0x9e
  404561:	(bad)  
  404563:	pusha  
  404564:	jo     0x404554
  404566:	and    DWORD PTR [eax],ebx
  404568:	dec    ebp
  404569:	arpl   cx,di
  40456b:	out    dx,al
  40456c:	fsub   st,st(0)
  40456e:	push   ds
  40456f:	sti    
  404570:	mov    bh,0x45
  404572:	shr    ebx,1
  404574:	sub    edi,DWORD PTR [edx+0x71]
  404577:	les    edx,FWORD PTR [eax-0xf0d292f]
  40457d:	jl     0x4045e8
  40457f:	fwait
  404580:	cmp    eax,0xf8998591
  404585:	mov    edi,0xc1a925aa
  40458a:	test   al,0xb1
  40458c:	int    0xbc
  40458e:	push   ecx
  40458f:	stos   BYTE PTR es:[edi],al
  404590:	loop   0x40458d
  404592:	mov    ch,0x44
  404594:	repnz add BYTE PTR [ebp+0x39],ch
  404598:	outs   dx,DWORD PTR ds:[esi]
  404599:	jl     0x404584
  40459b:	or     BYTE PTR [esi+0x2439d7ed],cl
  4045a1:	pop    eax
  4045a2:	dec    ebx
  4045a3:	ss xor eax,0x70f12ac0
  4045a9:	cmp    eax,0x2edfa988
  4045ae:	ret    0xb8ad
  4045b1:	(bad)  
  4045b2:	lahf   
  4045b3:	cmp    al,0x36
  4045b5:	push   cs
  4045b6:	pop    ss
  4045b7:	and    dh,dl
  4045b9:	pop    esp
  4045ba:	pusha  
  4045bb:	mov    esp,0x1e4e6a34
  4045c0:	(bad)
  4045c4:	jae    0x4045eb
  4045c6:	jbe    0x404617
  4045c8:	adc    cl,BYTE PTR [edi]
  4045ca:	or     eax,0x3d8fd6
  4045cf:	inc    esi
  4045d0:	xor    BYTE PTR [edi-0x4ce7fa37],dl
  4045d6:	mov    bh,0x49
  4045d8:	jp     0x404609
  4045da:	jno    0x40460c
  4045dc:	sbb    ebp,DWORD PTR ds:0xf145fbd8
  4045e2:	outs   dx,DWORD PTR ds:[esi]
  4045e3:	xchg   ecx,eax
  4045e4:	mov    eax,0xc8ef18ed
  4045e9:	push   0xffffffac
  4045eb:	and    ch,BYTE PTR [ebx-0x27ad46d4]
  4045f1:	pop    ebp
  4045f2:	icebp  
  4045f3:	js     0x4045ae
  4045f5:	outs   dx,BYTE PTR ds:[esi]
  4045f6:	lds    eax,FWORD PTR [edi+0x29]
  4045f9:	sbb    eax,0xf63e4bb
  4045fe:	mov    edx,0x3abf8642
  404603:	ret    0xc4b
  404606:	repnz or ebp,ecx
  404609:	out    dx,al
  40460a:	rol    BYTE PTR [ebp+0x1a],1
  40460d:	inc    edx
  40460e:	out    dx,al
  40460f:	and    cl,BYTE PTR [edx+edi*1]
  404612:	ficom  WORD PTR [edi-0x71]
  404615:	(bad)  
  404616:	loopne 0x404680
  404618:	push   ss
  404619:	and    DWORD PTR [esp+edx*2-0x6e4b7e91],eax
  404620:	sbb    DWORD PTR [ebp+0x4b35f52c],0xac171a94
  40462a:	rcr    ecx,0xc1
  40462d:	ret    0xb198
  404630:	imul   esi,DWORD PTR [ebp+0x12a83b3a],0xffffffc4
  404637:	lds    ecx,FWORD PTR [ebx-0x3113f580]
  40463d:	loope  0x4046bb
  40463f:	enter  0x2d14,0x49
  404643:	not    BYTE PTR [ebx+0x4b]
  404646:	mov    ch,0x83
  404648:	push   ebx
  404649:	mov    eax,ds:0x66680f3f
  40464e:	xchg   ebx,eax
  40464f:	pop    ebp
  404650:	cmp    ch,ch
  404652:	cmovae ebx,DWORD PTR [eax-0x30]
  404656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404657:	or     bl,BYTE PTR [edi-0xb4099dd]
  40465d:	fdiv   DWORD PTR [edi-0xed68dfd]
  404663:	xor    dh,BYTE PTR [edi]
  404665:	cmp    DWORD PTR [ebp-0x4c],esi
  404668:	movlps QWORD PTR [ecx-0x4],xmm6
  40466c:	fbld   TBYTE PTR [esi]
  40466e:	ret    
  40466f:	pusha  
  404670:	sub    edx,edx
  404672:	psubw  mm0,QWORD PTR [ecx+ecx*4+0x5673882d]
  40467a:	xor    ecx,DWORD PTR [edx+edi*4+0x434650f1]
  404681:	sub    al,BYTE PTR [edx-0x68d31459]
  404687:	or     DWORD PTR [edi],0x51
  40468a:	or     BYTE PTR [edx],dl
  40468c:	outs   dx,BYTE PTR ds:[esi]
  40468d:	fist   DWORD PTR [edi+eax*2]
  404690:	mov    edi,0xec6b13c8
  404695:	xor    DWORD PTR ds:0x18eb2116,edi
  40469b:	lock rcl dl,cl
  40469e:	hlt    
  40469f:	addr16 xor al,0xa4
  4046a2:	fstp   TBYTE PTR [esi]
  4046a4:	sar    DWORD PTR [ebp-0x7935045b],cl
  4046aa:	cmp    al,0xe8
  4046ac:	and    DWORD PTR [eax+0x529d72bf],edi
  4046b2:	test   DWORD PTR [edx],ebp
  4046b4:	push   0x3d
  4046b6:	popa   
  4046b7:	cmp    cx,bx
  4046ba:	xlat   BYTE PTR ds:[ebx]
  4046bb:	leave  
  4046bc:	ror    DWORD PTR [eax],0x55
  4046bf:	dec    eax
  4046c0:	mov    eax,ds:0x7d294387
  4046c5:	in     eax,0xcb
  4046c7:	(bad)  
  4046c8:	sub    WORD PTR [eax+0x5f69c8e8],0x7e91
  4046d1:	(bad)  
  4046d2:	mov    DWORD PTR [ebx],esp
  4046d4:	mov    dl,0xbf
  4046d6:	js     0x4046ac
  4046d8:	xlat   BYTE PTR ds:[ebx]
  4046d9:	mov    cl,0x72
  4046db:	adc    DWORD PTR [edi*2+0x61aebb0d],esi
  4046e2:	xchg   ecx,eax
  4046e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e4:	(bad)  
  4046e5:	daa    
  4046e6:	bound  ebx,QWORD PTR [eax+0x27]
  4046e9:	sub    DWORD PTR [esi+ebx*1-0x3343b91d],esp
  4046f0:	xor    BYTE PTR [edi+edi*8-0x48c6a588],cl
  4046f7:	pop    ebp
  4046f8:	push   ebp
  4046f9:	mov    ecx,0xbdb48c58
  4046fe:	popf   
  4046ff:	das    
  404700:	adc    edi,DWORD PTR [ebp-0xb251326]
  404706:	bound  eax,QWORD PTR [ecx-0x57bd6119]
  40470c:	sbb    DWORD PTR [ebx-0x37],ebp
  40470f:	cdq    
  404710:	ja     0x40469a
  404712:	push   0xffffff9f
  404714:	fdiv   DWORD PTR [edx+0x7472a422]
  40471a:	mov    al,dh
  40471c:	sub    DWORD PTR [ebp-0x2f],edx
  40471f:	out    0x2c,eax
  404721:	ins    DWORD PTR es:[edi],dx
  404722:	sbb    al,0x85
  404724:	push   esp
  404725:	imul   esp,DWORD PTR [ecx+0x1b],0xffffffab
  404729:	xchg   esi,eax
  40472b:	call   0xa9eb:0x91cc0883
  404732:	dec    esp
  404733:	retf   
  404734:	push   cs
  404735:	cmc    
  404736:	inc    esi
  404737:	daa    
  404738:	xchg   ecx,eax
  404739:	(bad)  
  40473a:	rol    esi,1
  40473c:	mov    cl,0x8c
  40473e:	retf   
  40473f:	dec    eax
  404740:	sbb    esi,DWORD PTR [eax+0x52a8394d]
  404746:	loop   0x404777
  404748:	dec    edi
  404749:	(bad)  
  40474a:	mov    bh,0xb4
  40474c:	mov    cl,dl
  40474e:	pop    ds
  40474f:	(bad)  
  404750:	sbb    ebp,DWORD PTR [ebx]
  404752:	loopne 0x40474c
  404754:	and    edx,ebx
  404756:	int    0x5b
  404758:	mov    bh,0x29
  40475a:	outs   dx,BYTE PTR es:[esi]
  40475c:	rol    BYTE PTR [edx],cl
  40475e:	enter  0x74ee,0x7a
  404762:	mov    ecx,0xb2b5633e
  404767:	cdq    
  404768:	pop    ss
  404769:	mov    ds:0xd4095e82,eax
  40476e:	sub    DWORD PTR [ebx],ebx
  404770:	mov    cl,0xbd
  404772:	in     eax,0xc6
  404774:	jge    0x4047b9
  404776:	pop    edi
  404777:	inc    ebp
  404778:	cld    
  404779:	xchg   DWORD PTR ds:[edi-0x77a55116],esi
  404780:	pop    esp
  404781:	xchg   ebp,eax
  404782:	fimul  DWORD PTR [edi+0x40063c66]
  404788:	inc    ebp
  404789:	repnz pop ebx
  40478b:	adc    dh,BYTE PTR [edi+0x3b]
  40478e:	retf   0x75a3
  404791:	sbb    eax,0x539ae222
  404796:	addr16 inc esi
  404798:	sub    DWORD PTR [eax+ecx*1-0x31],0x87472f5a
  4047a0:	rcl    BYTE PTR [ebx+0x40],0x7f
  4047a4:	dec    ebp
  4047a5:	add    eax,0x66f9c744
  4047aa:	aas    
  4047ab:	dec    esi
  4047ac:	sbb    BYTE PTR [ebx+0x5437d1da],0x38
  4047b3:	out    0xcb,al
  4047b5:	adc    edi,DWORD PTR [ebp+0x5e]
  4047b8:	mov    ebx,0x89c671af
  4047bd:	dec    esi
  4047be:	loop   0x404834
  4047c0:	adc    dh,al
  4047c2:	xor    al,0xde
  4047c4:	pop    esi
  4047c5:	in     eax,0x47
  4047c7:	sub    ebx,ecx
  4047c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ca:	data16 outs dx,BYTE PTR ds:[esi]
  4047cc:	out    dx,al
  4047cd:	cld    
  4047ce:	iret   
  4047cf:	fistp  DWORD PTR [edi+0x12]
  4047d2:	mov    ah,0x3a
  4047d4:	shl    ch,0x9d
  4047d7:	xchg   edx,eax
  4047d8:	leave  
  4047d9:	dec    ecx
  4047da:	into   
  4047db:	fisttp DWORD PTR [ecx]
  4047dd:	cmp    al,0x80
  4047df:	xor    eax,0x3627a904
  4047e4:	mov    ds:0x68497da,eax
  4047e9:	mov    ch,0xf
  4047eb:	pusha  
  4047ec:	pop    ecx
  4047ed:	xchg   esi,eax
  4047ee:	add    edx,ebp
  4047f0:	cmp    eax,0x12
  4047f3:	dec    esi
  4047f4:	gs (bad) 
  4047f6:	ffreep st(5)
  4047f8:	mov    ebx,0x732f3503
  4047fd:	aas    
  4047fe:	xchg   ebp,eax
  4047ff:	xchg   ecx,eax
  404800:	jge    0x40484c
  404802:	cmp    eax,0xc2d312ff
  404807:	cmc    
  404808:	(bad)  
  404809:	imul   ebp,DWORD PTR [edi+0x1e],0x8227d729
  404810:	adc    BYTE PTR ds:0x253aca8b,ch
  404816:	cmp    al,0x3a
  404818:	vpandn xmm7,xmm3,XMMWORD PTR [edi]
  40481c:	and    al,0xb4
  40481e:	sti    
  40481f:	fs push es
  404821:	test   eax,0x24dc4d14
  404826:	bound  esi,QWORD PTR [edi+0x62]
  404829:	mul    dl
  40482b:	jmp    0x40633be5
  404830:	lock div ah
  404833:	push   esi
  404834:	sbb    al,0x4b
  404836:	xchg   ecx,eax
  404837:	ins    BYTE PTR es:[edi],dx
  404838:	bound  ebx,QWORD PTR [ebx+0x41]
  40483b:	sub    BYTE PTR [edi+eiz*1],dl
  40483e:	stc    
  40483f:	inc    edi
  404840:	mov    eax,ds:0x6a86b89a
  404845:	pop    ds
  404846:	jecxz  0x404850
  404848:	adc    ebp,DWORD PTR [esi]
  40484a:	cmp    esp,ebx
  40484c:	nop
  40484d:	add    bh,BYTE PTR [ebx+0x4a]
  404850:	out    dx,al
  404851:	fist   DWORD PTR [ebx+0x37]
  404854:	inc    edi
  404855:	push   cs
  404856:	pop    es
  404857:	retf   
  404858:	std    
  404859:	dec    edx
  40485a:	inc    edx
  40485b:	cmp    al,0x17
  40485d:	xchg   esi,eax
  40485e:	xor    eax,0x9608d4bb
  404863:	cmp    al,0xa7
  404865:	js     0x4047ec
  404867:	add    al,0x26
  404869:	sbb    BYTE PTR [ebx+0x41ffc475],al
  40486f:	pop    ebp
  404870:	mov    al,ds:0x3d5f2a8a
  404875:	adc    DWORD PTR [edi+ebp*8-0x63],esp
  404879:	ss in  al,0x86
  40487c:	(bad)  
  40487d:	pop    es
  40487e:	push   0x33
  404880:	jne    0x404881
  404882:	(bad)  
  404883:	das    
  404884:	mov    ecx,0x9c84d58e
  404889:	pushf  
  40488a:	ret    
  40488b:	aad    0xff
  40488d:	outs   dx,DWORD PTR ds:[esi]
  40488e:	mov    cl,0xa9
  404890:	shl    BYTE PTR [ebx-0x4f],cl
  404893:	sub    dl,dh
  404895:	sbb    al,0xf4
  404897:	add    al,0x5e
  404899:	xor    al,0xbf
  40489b:	rol    al,0x13
  40489e:	sub    al,0xa2
  4048a0:	or     eax,0x1474fe32
  4048a5:	les    ecx,FWORD PTR [edi+0xf]
  4048a8:	pop    ds
  4048a9:	sbb    ebx,DWORD PTR [ebx-0x1f]
  4048ac:	mov    ah,0xc6
  4048ae:	stos   DWORD PTR es:[edi],eax
  4048af:	(bad)
  4048b3:	sar    DWORD PTR [edi+0x28748a3c],cl
  4048b9:	inc    esi
  4048ba:	cdq    
  4048bb:	pop    ss
  4048bc:	mov    esp,0x1c8a8663
  4048c1:	mov    ds:0x7999d77,al
  4048c6:	push   ss
  4048c7:	es ret 0x137
  4048cb:	(bad)  
  4048cc:	neg    al
  4048ce:	adc    edi,DWORD PTR [ecx+0x143ebd7d]
  4048d4:	jmp    0x40485f
  4048d6:	call   0xd6ac98ff
  4048db:	test   eax,0x24f4dc21
  4048e0:	test   DWORD PTR [edi],eax
  4048e2:	inc    edx
  4048e3:	inc    esp
  4048e4:	xor    al,0x18
  4048e6:	test   DWORD PTR [edx+0x7c],ecx
  4048e9:	or     eax,0x768aabe0
  4048ee:	(bad)  [eax+0x68]
  4048f1:	imul   eax,ebp,0x7
  4048f4:	sub    BYTE PTR [eax+ebx*1],cl
  4048f7:	mov    edx,0x85e6820c
  4048fc:	ror    esp,cl
  4048fe:	fdivr  QWORD PTR [eax+0x2]
  404901:	mov    dh,0x11
  404903:	imul   ebp,eax,0xffffffd2
  404906:	or     ch,BYTE PTR [eax-0x49]
  404909:	jb     0x40494c
  40490b:	pusha  
  40490c:	add    al,0xb1
  40490e:	stc    
  40490f:	dec    eax
  404910:	dec    ebp
  404911:	xor    esp,eax
  404913:	es mov ebp,0x456ad77e
  404919:	repz arpl WORD PTR [eax],bp
  40491c:	enter  0xf917,0x29
  404920:	push   ecx
  404921:	jo     0x4048c0
  404923:	sub    bl,BYTE PTR [ecx]
  404925:	sbb    al,0xe8
  404927:	and    dl,BYTE PTR [edi-0x52]
  40492a:	out    dx,eax
  40492b:	pop    esi
  40492c:	in     al,dx
  40492d:	fwait
  40492e:	and    BYTE PTR [ebx+0x7d],dl
  404931:	stos   DWORD PTR es:[edi],eax
  404932:	add    edi,eax
  404934:	data16 out 0xae,al
  404937:	sbb    eax,0xb13dd9bd
  40493c:	lahf   
  40493d:	mov    esi,0x9c3c44e3
  404942:	stos   BYTE PTR es:[edi],al
  404943:	mov    edi,0xf7a513d5
  404948:	ds and eax,0x8a31c71f
  40494e:	scas   al,BYTE PTR es:[edi]
  40494f:	dec    eax
  404950:	adc    bh,ah
  404952:	jmp    0xbbc1:0xe2bce14d
  404959:	or     bl,BYTE PTR [esp+edi*8+0x71]
  40495d:	or     BYTE PTR [ecx],bh
  40495f:	jmp    0x40491a
  404961:	adc    al,0x84
  404963:	dec    ebp
  404964:	xchg   esp,eax
  404965:	or     dl,bh
  404967:	mov    al,0xc5
  404969:	scas   eax,DWORD PTR es:[edi]
  40496a:	adc    al,0xfe
  40496c:	mov    BYTE PTR [eax],0xb1
  40496f:	ds inc esi
  404971:	jp     0x404973
  404973:	mov    ebx,DWORD PTR [ebp-0x6513d752]
  404979:	inc    ebp
  40497a:	sbb    bh,cl
  40497c:	sub    al,0x4a
  40497e:	int3   
  40497f:	or     ebp,DWORD PTR [ecx]
  404981:	mov    edx,esi
  404983:	out    0x89,eax
  404985:	ret    
  404986:	dec    ebp
  404987:	call   0x81f8:0xf77f65c9
  40498e:	or     al,0xb5
  404990:	jecxz  0x404950
  404992:	iret   
  404993:	hlt    
  404994:	(bad)  
  404995:	push   edi
  404996:	jmp    0x3039:0xb3d08f51
  40499d:	mov    dl,0x36
  40499f:	inc    ebx
  4049a0:	cmp    ebx,DWORD PTR [ecx-0x1da5e6d5]
  4049a6:	(bad)  
  4049a7:	adc    eax,esi
  4049a9:	push   ecx
  4049aa:	or     ch,0x41
  4049ad:	xchg   esi,eax
  4049ae:	dec    esp
  4049af:	jae    0x40493e
  4049b1:	test   DWORD PTR [ebp+0x49],ebp
  4049b4:	loopne 0x404a12
  4049b6:	xchg   esp,eax
  4049b7:	pushf  
  4049b8:	adc    al,0x2b
  4049ba:	mov    DWORD PTR [ebx+ecx*2],0x7018f8e6
  4049c1:	fcomp  DWORD PTR [esi+0x3d]
  4049c4:	imul   ebx,DWORD PTR [ebx],0x45790f97
  4049ca:	jae    0x404a11
  4049cc:	pop    esi
  4049cd:	ins    BYTE PTR es:[edi],dx
  4049ce:	cmp    dh,BYTE PTR [ebp-0x528589e2]
  4049d4:	cdq    
  4049d5:	fiadd  WORD PTR [esi+edi*4]
  4049d8:	ds pusha 
  4049da:	cmc    
  4049db:	add    BYTE PTR [eax],bl
  4049dd:	and    eax,0xcda4823f
  4049e2:	dec    ecx
  4049e3:	jge    0x404a37
  4049e5:	pop    ds
  4049e6:	add    ebx,DWORD PTR ds:0xf8932359
  4049ec:	dec    eax
  4049ed:	push   esi
  4049ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ef:	retf   
  4049f0:	call   0xea5c6305
  4049f5:	pop    ebx
  4049f6:	pop    ds
  4049f7:	cmp    bl,BYTE PTR [esi]
  4049f9:	loope  0x404981
  4049fb:	cmp    ecx,DWORD PTR [esi-0x46]
  4049fe:	lahf   
  4049ff:	inc    esp
  404a00:	sti    
  404a01:	xchg   ecx,eax
  404a02:	(bad)  
  404a03:	jmp    0x404a19
  404a05:	int    0x11
  404a07:	lds    ecx,FWORD PTR [edx-0x2007ef8e]
  404a0d:	dec    esp
  404a0e:	call   DWORD PTR [eax+esi*8+0x57]
  404a12:	mov    DWORD PTR [ecx+esi*4+0x49],ecx
  404a16:	push   ss
  404a17:	nop
  404a18:	lahf   
  404a19:	sub    edx,DWORD PTR [edi+0x2]
  404a1c:	(bad)  
  404a1d:	xchg   edx,eax
  404a1e:	xlat   BYTE PTR ds:[ebx]
  404a1f:	pop    es
  404a20:	pop    ds
  404a21:	xchg   ebp,eax
  404a22:	imul   ebx
  404a24:	jb     0x4049e3
  404a26:	xor    eax,DWORD PTR [esi-0x6b0a931f]
  404a2c:	push   ss
  404a2d:	(bad)  
  404a2f:	cmp    al,0x84
  404a31:	or     al,0xfe
  404a33:	mov    al,ds:0xafcc5517
  404a38:	dec    ecx
  404a39:	ret    0x79d3
  404a3c:	pop    ds
  404a3d:	imul   edx,eax,0xc
  404a40:	lea    ebp,[ebp-0x13da1ef3]
  404a46:	mov    dl,0xba
  404a48:	pusha  
  404a49:	(bad)
  404a4c:	push   ebp
  404a4d:	sub    al,0x2f
  404a4f:	imul   ebx,DWORD PTR [edx],0x7159f03a
  404a55:	cmp    DWORD PTR [ecx+0x48f103e4],edx
  404a5b:	out    dx,al
  404a5c:	cmp    dl,BYTE PTR [edi+0x70f96486]
  404a62:	in     eax,dx
  404a63:	fcomi  st,st(2)
  404a65:	xchg   ebp,eax
  404a66:	jl     0x404a0d
  404a68:	sbb    al,0x81
  404a6a:	and    BYTE PTR [ecx-0x36da875c],bh
  404a70:	mov    eax,ds:0x6584b34e
  404a75:	push   esp
  404a76:	arpl   di,si
  404a78:	mov    DWORD PTR [eax-0x2beb2a32],ebp
  404a7e:	cmc    
  404a7f:	pop    esi
  404a80:	mov    eax,0x35c003f3
  404a85:	push   cs
  404a86:	ss adc eax,0x852bdd10
  404a8c:	pop    ebp
  404a8d:	sbb    al,0x17
  404a8f:	fwait
  404a90:	push   ecx
  404a91:	push   ebx
  404a92:	push   cs
  404a93:	outs   dx,BYTE PTR ds:[esi]
  404a94:	call   0x3f4134b0
  404a99:	and    edi,DWORD PTR [edx]
  404a9b:	shr    BYTE PTR [edi],cl
  404a9d:	outs   dx,BYTE PTR ds:[esi]
  404a9e:	push   cs
  404a9f:	and    ch,BYTE PTR [edi+0x52453ec2]
  404aa5:	add    ch,BYTE PTR [ebx-0x6e]
  404aa8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aaa:	sub    DWORD PTR [ecx-0x7ac0e48d],edx
  404ab0:	xchg   BYTE PTR [edi],bh
  404ab2:	inc    eax
  404ab3:	push   ebp
  404ab4:	out    dx,al
  404ab5:	or     ebp,DWORD PTR [ecx+0x59]
  404ab8:	(bad)  
  404ab9:	cmp    esi,DWORD PTR [esi-0x22]
  404abc:	ret    0x2e33
  404abf:	pop    ds
  404ac0:	imul   esi,DWORD PTR [edi+0x69],0x4b
  404ac4:	cmovnp ebp,DWORD PTR [ebx-0x77]
  404ac8:	push   es
  404ac9:	inc    edx
  404aca:	shl    DWORD PTR [eax-0x3b],0x83
  404ace:	loope  0x404af9
  404ad0:	fisttp QWORD PTR [edx]
  404ad2:	sub    esi,DWORD PTR [edi+0x1f]
  404ad5:	rcr    DWORD PTR [eax],0xa8
  404ad8:	bound  eax,QWORD PTR [edx+0x3cebe14b]
  404ade:	mov    ds:0x7eed8a17,eax
  404ae3:	aad    0xc0
  404ae5:	jnp    0x404acf
  404ae7:	dec    esp
  404ae8:	fadd   DWORD PTR [ecx-0x288b784b]
  404aee:	lods   al,BYTE PTR ds:[esi]
  404aef:	pop    ebx
  404af0:	dec    esp
  404af1:	jmp    0x404aa0
  404af3:	test   eax,ecx
  404af5:	xchg   esp,eax
  404af6:	mov    gs,esi
  404af8:	or     DWORD PTR ds:0xa1aee053,ecx
  404afe:	jmp    0xb96f:0x11db23ff
  404b05:	shr    DWORD PTR [edx-0x51],cl
  404b08:	inc    edx
  404b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b0a:	in     al,0x51
  404b0c:	mov    cl,0xe2
  404b0e:	neg    edi
  404b10:	(bad)  
  404b11:	mov    bh,0xab
  404b13:	lds    ebp,FWORD PTR [edx+ecx*2]
  404b16:	les    esi,FWORD PTR [ebp-0xc]
  404b19:	mov    WORD PTR [eax-0x4c0e55d5],gs
  404b1f:	mov    bh,0xf5
  404b21:	sbb    al,BYTE PTR [esp+eax*8]
  404b24:	add    BYTE PTR [ebp+0x39a7e4bf],ah
  404b2a:	in     eax,dx
  404b2b:	add    al,0xb3
  404b2d:	out    0x39,al
  404b2f:	xchg   ecx,eax
  404b30:	mov    esi,0xc7084bdd
  404b35:	jle    0x404b51
  404b37:	cmp    eax,0xd69e1e52
  404b3c:	cli    
  404b3d:	data16 adc ah,dh
  404b40:	jmp    0x404ba8
  404b42:	lods   al,BYTE PTR ds:[esi]
  404b43:	dec    ebx
  404b44:	mov    edi,DWORD PTR [edi+0x1c]
  404b47:	aam    0x5c
  404b49:	dec    ebx
  404b4a:	jo     0x404bbe
  404b4c:	mov    dl,0xd8
  404b4e:	inc    ebp
  404b4f:	aad    0xca
  404b51:	sahf   
  404b52:	and    eax,0x44e42536
  404b57:	cmp    esp,DWORD PTR ds:0x78b516d1
  404b5d:	add    DWORD PTR [edi+ebp*4-0x12],edx
  404b61:	popf   
  404b62:	outs   dx,DWORD PTR ds:[esi]
  404b63:	lods   al,BYTE PTR ds:[esi]
  404b64:	push   eax
  404b65:	cmp    ebp,ebx
  404b67:	mov    edx,0xea48a73b
  404b6c:	jbe    0x404be2
  404b6e:	loop   0x404b60
  404b70:	or     BYTE PTR [eax+eiz*4-0xe],ch
  404b74:	out    0x9e,eax
  404b76:	push   ds
  404b77:	std    
  404b78:	lock mov al,BYTE PTR [edi+0x6e8df081]
  404b7f:	jo     0x404bbe
  404b81:	lea    esp,[ebx-0x2a]
  404b84:	fcom   DWORD PTR [ecx-0x4e]
  404b87:	jecxz  0x404b8e
  404b89:	mov    dl,0x66
  404b8b:	adc    al,0x48
  404b8d:	adc    eax,0xeadb466c
  404b92:	push   cs
  404b93:	fs adc eax,0x9c116cc9
  404b99:	sub    al,0xc6
  404b9b:	scas   eax,DWORD PTR es:[edi]
  404b9c:	mov    al,BYTE PTR [ebx]
  404b9e:	lods   al,BYTE PTR ds:[esi]
  404b9f:	ins    DWORD PTR es:[edi],dx
  404ba0:	aad    0x96
  404ba2:	cwd    
  404ba4:	sub    edi,DWORD PTR [ebx+0x14921712]
  404baa:	jns    0x4b1889a0
  404bb0:	mov    cl,ah
  404bb2:	or     BYTE PTR [ecx],bl
  404bb4:	enter  0x27bd,0x2c
  404bb8:	retf   0x689f
  404bbb:	push   es
  404bbc:	fwait
  404bbd:	sub    ebx,ebp
  404bbf:	jbe    0x404b47
  404bc1:	scas   eax,DWORD PTR es:[edi]
  404bc2:	push   ds
  404bc3:	leave  
  404bc4:	push   ds
  404bc5:	push   es
  404bc6:	jns    0x404ba2
  404bc8:	sub    BYTE PTR [ebx],0x4e
  404bcb:	dec    eax
  404bcc:	mov    edx,0xf485cda3
  404bd1:	pop    esi
  404bd2:	sub    dh,BYTE PTR [eax]
  404bd4:	(bad)  [edi]
  404bd6:	fisttp QWORD PTR [ecx-0x2e]
  404bd9:	cmovns edi,ebp
  404bdc:	jmp    0xedfcfce5
  404be1:	rcr    DWORD PTR [ebp+0x628e4d82],1
  404be7:	aam    0x33
  404be9:	cmp    eax,0x58ce04e6
  404bee:	stos   DWORD PTR es:[edi],eax
  404bef:	pop    ecx
  404bf0:	loope  0x404c5e
  404bf2:	pop    esp
  404bf3:	sbb    DWORD PTR cs:[ecx+0x24],ecx
  404bf7:	cld    
  404bf8:	jg     0x404bec
  404bfa:	or     cl,BYTE PTR ds:[esi]
  404bfd:	sub    eax,0x3300f516
  404c02:	inc    ecx
  404c03:	add    al,0x32
  404c05:	ficomp DWORD PTR [edx]
  404c07:	rcl    BYTE PTR [edi+0x105141ef],cl
  404c0d:	movaps xmm2,xmm0
  404c10:	xchg   esp,eax
  404c11:	cmp    edi,DWORD PTR [edx]
  404c13:	(bad)  
  404c14:	fisttp WORD PTR ds:0x8024db44
  404c1a:	lea    ebp,[esi+0x3525c07a]
  404c20:	leave  
  404c21:	cmp    al,0x71
  404c23:	jl     0x404be2
  404c25:	fdivr  st(6),st
  404c27:	jmp    DWORD PTR [ebp+0x217b280d]
  404c2d:	out    dx,al
  404c2e:	xor    edi,DWORD PTR [eax-0x5c374717]
  404c34:	jb     0x404c7c
  404c36:	add    al,0x5e
  404c38:	sbb    DWORD PTR [esi],edi
  404c3a:	dec    ebp
  404c3b:	lods   eax,DWORD PTR ds:[esi]
  404c3c:	mov    WORD PTR [eax],es
  404c3e:	xchg   cx,ax
  404c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c41:	(bad)  [edi+0x308d22d5]
  404c47:	cmc    
  404c48:	adc    ecx,edi
  404c4a:	cdq    
  404c4b:	fistp  QWORD PTR [esi]
  404c4d:	jb     0x404c7d
  404c4f:	sub    BYTE PTR ds:0x27888587,0x57
  404c56:	sub    al,0x26
  404c58:	fisub  WORD PTR [ecx]
  404c5a:	xor    al,0x86
  404c5c:	dec    eax
  404c5d:	int    0xc7
  404c5f:	push   ss
  404c60:	outs   dx,DWORD PTR ds:[esi]
  404c61:	pop    esp
  404c62:	add    eax,0x885ee814
  404c67:	popa   
  404c68:	pushf  
  404c69:	sbb    BYTE PTR [edi+eax*2+0x1ddaf0f7],dh
  404c70:	sub    edx,DWORD PTR [ecx-0x7d]
  404c73:	call   DWORD PTR [ecx-0xda1f0b6]
  404c79:	ds inc esi
  404c7b:	adc    eax,0x9829f1ef
  404c80:	fisttp DWORD PTR [edi+ebp*1]
  404c83:	out    0xae,al
  404c85:	and    ah,BYTE PTR cs:[esi-0x2b]
  404c89:	dec    esp
  404c8a:	add    bh,BYTE PTR ds:0x48168090
  404c90:	in     eax,dx
  404c91:	je     0x404c94
  404c93:	inc    esi
  404c94:	add    BYTE PTR [ebx-0xe],0x46
  404c98:	(bad)  
  404c99:	and    BYTE PTR [eax],dl
  404c9b:	jmp    0x404c40
  404c9d:	pop    ebx
  404c9e:	sub    al,0x7
  404ca0:	mov    ecx,0xaf6ebe60
  404ca5:	jp     0x404c2b
  404ca7:	out    0xf1,al
  404ca9:	xchg   esp,eax
  404caa:	pushf  
  404cab:	mov    ebp,DWORD PTR [ebp-0x2fd9613f]
  404cb1:	test   BYTE PTR [ebp-0x12d07441],dl
  404cb7:	adc    ah,bl
  404cb9:	ins    BYTE PTR es:[edi],dx
  404cba:	xchg   edi,eax
  404cbb:	push   0x19505cb9
  404cc0:	in     al,dx
  404cc1:	pop    edi
  404cc2:	cdq    
  404cc3:	cli    
  404cc4:	into   
  404cc5:	shr    BYTE PTR [edi-0x590b59d6],0x70
  404ccc:	xchg   BYTE PTR [ecx],cl
  404cce:	mov    ds:0xfc37f825,eax
  404cd3:	or     al,0x70
  404cd5:	xchg   edx,eax
  404cd6:	jl     0x404c84
  404cd8:	pop    ds
  404cd9:	lea    ebx,[eax]
  404cdb:	xor    eax,0xe22df754
  404ce0:	bound  esp,QWORD PTR ds:0x7053f5a2
  404ce6:	lds    edx,FWORD PTR [ebp-0x39de082d]
  404cec:	(bad)  
  404ced:	pusha  
  404cee:	mov    bl,0xcc
  404cf0:	int    0xfd
  404cf2:	(bad)  
  404cf3:	sub    dh,BYTE PTR [edi-0x60]
  404cf6:	sar    DWORD PTR [ecx],0x2a
  404cf9:	std    
  404cfa:	fdivr  st,st(0)
  404cfc:	mov    eax,0xdc9909ca
  404d01:	add    dl,ch
  404d03:	pop    edx
  404d04:	bndstx [edx],bnd2
  404d07:	out    dx,al
  404d08:	lahf   
  404d09:	push   edi
  404d0a:	sub    ax,0x6267
  404d0e:	mov    DWORD PTR [eax+0x45],0x600cdce4
  404d15:	pop    ax
  404d17:	test   BYTE PTR [edi+0x741d4e92],bh
  404d1d:	ds mov cl,0x6a
  404d20:	out    0x5e,eax
  404d22:	push   edi
  404d23:	mul    eax
  404d25:	xor    eax,0xad799b7c
  404d2a:	cmp    eax,0x6189c612
  404d2f:	es adc bh,al
  404d32:	fild   QWORD PTR [eax-0x4a]
  404d35:	(bad)  
  404d36:	idiv   BYTE PTR [eax+0x67]
  404d39:	lds    eax,FWORD PTR [edi+0x1799476c]
  404d3f:	in     eax,0xee
  404d41:	xchg   ebp,eax
  404d42:	loopne 0x404cf8
  404d44:	and    BYTE PTR [eax+ecx*2],0x3a
  404d48:	sub    ah,BYTE PTR [ebx+0x1c]
  404d4b:	(bad)  
  404d4c:	loop   0x404d1c
  404d4e:	aam    0xb9
  404d50:	test   BYTE PTR [ebx+ebp*8],bh
  404d53:	aas    
  404d54:	push   ebp
  404d55:	fistp  QWORD PTR [ebx-0x746e65b5]
  404d5b:	mov    ss:0xdf3391a5,al
  404d61:	pop    ebp
  404d62:	sub    BYTE PTR [edx],bl
  404d64:	cmp    al,0xe4
  404d66:	mul    DWORD PTR [ecx]
  404d68:	into   
  404d69:	mov    bl,0x5
  404d6b:	pop    ds
  404d6c:	fcmovb st,st(4)
  404d6e:	rol    DWORD PTR [edi-0x24d73919],1
  404d74:	xchg   edi,eax
  404d75:	inc    edi
  404d76:	mov    ah,0x54
  404d78:	iret   
  404d79:	mov    ebp,0xad8a1b25
  404d7e:	adc    eax,0xb6e7a73a
  404d83:	xor    dl,cl
  404d85:	sbb    al,0x4
  404d87:	adc    ebx,ecx
  404d89:	mov    ds:0xa3989e35,eax
  404d8e:	mov    al,0x1
  404d90:	dec    esi
  404d91:	aas    
  404d92:	test   eax,0xfde05609
  404d97:	xor    al,0x20
  404d99:	cmp    eax,0xb03d2d0b
  404d9e:	lods   al,BYTE PTR ds:[esi]
  404d9f:	mov    ds:0xea140748,eax
  404da4:	(bad)  
  404da5:	out    0xc4,al
  404da7:	lods   al,BYTE PTR ds:[esi]
  404da8:	aam    0xf2
  404daa:	test   BYTE PTR [ebx-0x7d],ch
  404dad:	ins    DWORD PTR es:[edi],dx
  404dae:	lds    ebp,FWORD PTR ds:0x27c41f4e
  404db4:	repnz ss or edx,ecx
  404db8:	inc    ebp
  404db9:	mov    ah,0xff
  404dbb:	pushf  
  404dbc:	xor    bl,BYTE PTR [ebx-0x75b45a17]
  404dc2:	mov    ds:0x626a1997,al
  404dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc8:	cs into 
  404dca:	add    DWORD PTR [esi],0xfffffff3
  404dcd:	test   al,0x98
  404dcf:	mov    edi,0xe5696461
  404dd4:	push   edx
  404dd5:	out    dx,eax
  404dd6:	test   edx,ecx
  404dd8:	shr    BYTE PTR [esi],0xb
  404ddb:	mov    es,edx
  404ddd:	mov    ds:0xd5d91cef,al
  404de2:	adc    al,BYTE PTR [edx-0x5]
  404de5:	call   0xc0cb:0x920487c6
  404dec:	mov    ebx,ds
  404dee:	outs   dx,BYTE PTR ds:[esi]
  404def:	scas   al,BYTE PTR es:[edi]
  404df0:	inc    esp
  404df1:	(bad)  
  404df2:	scas   al,BYTE PTR es:[edi]
  404df3:	push   ebx
  404df4:	out    0x1f,eax
  404df6:	xor    al,0x7f
  404df8:	retfw  
  404dfa:	std    
  404dfb:	ret    
  404dfc:	in     al,dx
  404dfd:	mov    edi,0x83dd33e4
  404e02:	inc    ebp
  404e03:	fwait
  404e04:	in     eax,dx
  404e05:	dec    edi
  404e06:	dec    esp
  404e07:	cmp    eax,0xe604d64e
  404e0c:	pop    eax
  404e0d:	stos   BYTE PTR es:[edi],al
  404e0e:	bnd jg 0x404e21
  404e11:	test   eax,0xdc8deca5
  404e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e17:	cdq    
  404e18:	out    0x2d,al
  404e1a:	inc    esi
  404e1b:	sub    DWORD PTR [edi-0x4d],esp
  404e1e:	iret   
  404e1f:	sahf   
  404e20:	(bad)  [esi]
  404e22:	sbb    edi,DWORD PTR [esi+0x73]
  404e25:	adc    eax,0x943af10e
  404e2a:	jno    0x404e84
  404e2c:	call   0xf5c3ee99
  404e31:	jae    0x404de8
  404e33:	mov    ch,0x8
  404e35:	mov    edx,0xf216774
  404e3a:	inc    esi
  404e3b:	mov    dh,0xf8
  404e3d:	push   cs
  404e3e:	arpl   ax,si
  404e40:	jle    0x404ea5
  404e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e43:	aaa    
  404e44:	lahf   
  404e45:	pop    edi
  404e46:	sbb    eax,0x56b82501
  404e4b:	out    0xad,al
  404e4d:	les    ebp,FWORD PTR [edx]
  404e4f:	cmp    DWORD PTR [eax],ebp
  404e51:	xchg   BYTE PTR [ecx],ch
  404e53:	or     BYTE PTR [eax-0x5d],ah
  404e56:	mov    bl,BYTE PTR ds:0x6054343d
  404e5c:	mov    dl,0xe8
  404e5e:	pushf  
  404e5f:	cmp    ebx,DWORD PTR [ebp+0x5762cfb8]
  404e65:	(bad)  
  404e66:	xor    edi,edi
  404e68:	inc    esp
  404e69:	cmc    
  404e6a:	test   ebp,0xc9970ca1
  404e70:	mov    al,0x37
  404e72:	xchg   ecx,eax
  404e73:	lahf   
  404e74:	dec    ebx
  404e75:	outs   dx,BYTE PTR ds:[esi]
  404e76:	xchg   DWORD PTR [edi+0x4],edi
  404e79:	dec    esp
  404e7a:	dec    edx
  404e7b:	dec    ebp
  404e7c:	ins    BYTE PTR es:[edi],dx
  404e7d:	loope  0x404e85
  404e7f:	pop    es
  404e80:	push   ebx
  404e81:	fxch   st(3)
  404e83:	sbb    al,0x5e
  404e85:	into   
  404e86:	std    
  404e87:	push   edi
  404e88:	test   eax,0x4d2900e3
  404e8d:	jo     0x404ece
  404e8f:	jp     0x404ebb
  404e91:	sub    DWORD PTR [ebx+0x71375b64],ebx
  404e97:	pop    esi
  404e98:	add    DWORD PTR [ebp+0x2b],edi
  404e9b:	call   0x96aa9ff7
  404ea0:	sbb    ebx,DWORD PTR [esi-0x47]
  404ea3:	dec    esi
  404ea4:	jg     0x404e83
  404ea6:	push   edx
  404ea7:	sbb    al,0x30
  404ea9:	test   eax,0x882e0a50
  404eae:	(bad)  
  404eaf:	push   es
  404eb0:	jnp    0x404e49
  404eb2:	ret    
  404eb3:	mov    ds:0xea66906d,al
  404eb8:	jmp    0x404f0e
  404eba:	ins    DWORD PTR es:[edi],dx
  404ebb:	dec    edx
  404ebc:	daa    
  404ebd:	outs   dx,DWORD PTR ds:[esi]
  404ebe:	xor    ecx,eax
  404ec0:	out    0xe3,eax
  404ec2:	ror    BYTE PTR [ecx-0x481508d6],1
  404ec8:	jae    0x404e67
  404eca:	jp     0x404e62
  404ecc:	dec    esi
  404ecd:	push   esi
  404ece:	ja     0x404e56
  404ed0:	cld    
  404ed1:	lods   al,BYTE PTR ds:[esi]
  404ed2:	jl     0x404ee8
  404ed4:	cmp    ah,BYTE PTR [edi+eax*8]
  404ed7:	mov    dl,0xdd
  404ed9:	inc    edx
  404eda:	lea    ebx,[eax+0x72]
  404edd:	ins    BYTE PTR es:[edi],dx
  404ede:	dec    esp
  404edf:	xchg   BYTE PTR [esi+ebp*2-0x70894107],ah
  404ee6:	xchg   esi,eax
  404ee7:	pop    edx
  404ee8:	jmp    0x404f0e
  404eea:	add    DWORD PTR [ecx+0x6a],esp
  404eed:	jp     0x404ec2
  404eef:	loopne 0x404f57
  404ef1:	push   ss
  404ef2:	lods   al,BYTE PTR ds:[esi]
  404ef3:	push   0x39714deb
  404ef8:	inc    ebp
  404ef9:	ins    BYTE PTR es:[edi],dx
  404efa:	jae    0x404f68
  404efc:	outs   dx,BYTE PTR ds:[esi]
  404efd:	ins    DWORD PTR es:[edi],dx
  404efe:	xchg   ebx,eax
  404eff:	rcr    BYTE PTR [edx],cl
  404f01:	shr    DWORD PTR [ebp-0x54],cl
  404f04:	pop    ebp
  404f05:	add    BYTE PTR [ecx+0x5e72e85d],0xba
  404f0c:	push   esi
  404f0d:	sub    esi,DWORD PTR ds:0xce1c29af
  404f13:	out    0xa8,al
  404f15:	lock addr16 pop es
  404f18:	inc    ecx
  404f19:	mov    dh,dh
  404f1b:	inc    ebp
  404f1c:	or     edx,0x5d91a570
  404f22:	cs sbb al,0x57
  404f25:	outs   dx,DWORD PTR ds:[esi]
  404f26:	hlt    
  404f27:	cs pop edx
  404f29:	loopne 0x404ec6
  404f2b:	dec    ebp
  404f2c:	fst    QWORD PTR [ecx]
  404f2e:	outs   dx,BYTE PTR ds:[esi]
  404f2f:	das    
  404f30:	cdq    
  404f31:	test   esi,esp
  404f33:	cmp    eax,DWORD PTR [eax+0x34]
  404f36:	lahf   
  404f37:	mov    ebx,0x6085ff99
  404f3c:	adc    esp,DWORD PTR ds:0x164891d5
  404f42:	or     ecx,DWORD PTR [ecx]
  404f44:	jo     0x404f2b
  404f46:	das    
  404f47:	cmp    BYTE PTR [ebp+0x1a],dh
  404f4a:	les    esi,FWORD PTR [edi-0x28]
  404f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f4e:	mov    bh,0xc6
  404f50:	fsub   QWORD PTR [edi]
  404f52:	cs rcl ecx,cl
  404f55:	arpl   cx,dx
  404f57:	inc    ebp
  404f58:	lds    eax,FWORD PTR [ebx-0x70]
  404f5b:	je     0x404f1d
  404f5d:	cmp    eax,DWORD PTR [edx+ebx*2]
  404f60:	loope  0x404faf
  404f62:	ret    
  404f63:	int3   
  404f64:	call   DWORD PTR [ecx+0x3c2e2ea8]
  404f6a:	add    dh,ah
  404f6c:	ret    
  404f6d:	das    
  404f6e:	adc    eax,0xbc4e3866
  404f73:	dec    esp
  404f74:	push   0x9c5715bf
  404f79:	call   0x2c10229
  404f7e:	imul   ecx,DWORD PTR ds:0x15bcf0b6,0x51
  404f85:	out    dx,eax
  404f86:	cmp    ebx,DWORD PTR [edx]
  404f88:	or     DWORD PTR [eax-0x4],esp
  404f8b:	hlt    
  404f8c:	push   ds
  404f8d:	xchg   edx,eax
  404f8e:	xlat   BYTE PTR ds:[ebx]
  404f8f:	push   edx
  404f90:	or     al,0x16
  404f92:	cmc    
  404f93:	ins    BYTE PTR es:[edi],dx
  404f94:	mov    ds:0xeb4b5d5a,eax
  404f99:	inc    esp
  404f9a:	sbb    eax,0x4d2e1289
  404f9f:	out    dx,eax
  404fa0:	ror    DWORD PTR [ecx],cl
  404fa2:	jg     0x405000
  404fa4:	out    0xa2,al
  404fa6:	or     DWORD PTR [ecx-0x41],0xfbb0495f
  404fad:	hlt    
  404fae:	mov    bl,0xf3
  404fb0:	sbb    ebx,edi
  404fb2:	push   DWORD PTR [edx]
  404fb4:	mov    ds:0xea244b77,eax
  404fb9:	inc    esp
  404fba:	cwde   
  404fbb:	neg    edi
  404fbd:	sahf   
  404fbe:	aaa    
  404fbf:	push   eax
  404fc0:	ins    BYTE PTR es:[edi],dx
  404fc1:	dec    edi
  404fc2:	dec    esp
  404fc3:	pusha  
  404fc4:	xchg   ecx,eax
  404fc5:	ss xchg esp,eax
  404fc7:	mov    WORD PTR [ecx+0x6a93260c],ss
  404fcd:	cs fsubr st,st(4)
  404fd0:	pop    esi
  404fd1:	xchg   edi,eax
  404fd2:	stos   DWORD PTR es:[edi],eax
  404fd3:	js     0x404feb
  404fd5:	mov    ?,WORD PTR ds:0x3d28d38d
  404fdb:	test   cl,bl
  404fdd:	add    al,0x4
  404fdf:	shl    ecx,0x85
  404fe2:	scas   al,BYTE PTR es:[edi]
  404fe3:	lods   al,BYTE PTR ds:[esi]
  404fe4:	add    dl,BYTE PTR [eax+ebx*4+0x5d489106]
  404feb:	pop    edi
  404fec:	enter  0x7e8f,0x22
  404ff0:	test   eax,0x202d1d71
  404ff5:	(bad)  
  404ff6:	sbb    DWORD PTR [eax-0x2],ebx
  404ff9:	push   esp
  404ffa:	jno    0x405052
  404ffc:	jns    0x405051
  404ffe:	or     eax,0x66df16d4
  405003:	test   DWORD PTR [eax+0x4f72ed60],eax
  405009:	ret    0x6885
  40500c:	jmp    0x160bea67
  405011:	cmp    BYTE PTR [eax-0x35],dl
  405014:	pop    esp
  405015:	mov    ah,0x67
  405017:	mov    al,0x23
  405019:	sbb    al,0x95
  40501b:	test   DWORD PTR [eax],eax
  40501d:	adc    al,0x35
  40501f:	lods   al,BYTE PTR ds:[esi]
  405020:	pop    ebx
  405021:	outs   dx,DWORD PTR ds:[esi]
  405022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405023:	jge    0x405032
  405025:	push   0x48430d64
  40502a:	loopne 0x4050a3
  40502c:	mov    dh,0x90
  40502e:	jl     0x404fb4
  405030:	out    0xf,eax
  405032:	cwde   
  405033:	add    esp,eax
  405035:	jmp    0xbc01a1d5
  40503a:	call   0x13d70
  40503f:	mov    eax,0x20f78a0
  405044:	add    DWORD PTR ss:[eax],0xffffffa8
  405048:	jmp    0xe84ba19d
  40504d:	not    esi
  40504f:	lods   al,BYTE PTR ds:[esi]
  405050:	leave  
  405051:	sbb    al,0xd4
  405053:	xchg   ebp,eax
  405054:	add    DWORD PTR [eax-0x17],ecx
  405057:	bound  ebx,QWORD PTR [edx]
  405059:	inc    eax
  40505a:	and    ch,BYTE PTR es:[ebx]
  40505d:	add    BYTE PTR [esi],dh
  40505f:	mov    ah,0x50
  405061:	xor    DWORD PTR [ebx-0xa435298],eax
  405067:	sub    DWORD PTR [esi+0x40],0x45b35f7e
  40506e:	mov    cl,0x79
  405070:	inc    esp
  405071:	(bad)  
  405072:	sbb    esp,ebx
  405074:	mov    bl,0x42
  405076:	adc    DWORD PTR ds:0x3d5bf3c7,ebx
  40507c:	test   DWORD PTR [esi+0x8b8310d],ecx
  405082:	push   eax
  405083:	shr    cl,0x77
  405086:	ins    BYTE PTR es:[edi],dx
  405087:	mov    cl,0x74
  405089:	dec    edi
  40508a:	ins    BYTE PTR es:[edi],dx
  40508b:	jmp    0x405026
  40508d:	pushf  
  40508e:	lods   eax,DWORD PTR ds:[esi]
  40508f:	push   edi
  405090:	jmp    0x34ff:0xba33dfe8
  405097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405098:	push   ds
  405099:	stos   BYTE PTR es:[edi],al
  40509a:	pop    esi
  40509b:	ret    0x8f97
  40509e:	push   edi
  40509f:	into   
  4050a0:	fist   WORD PTR [edx]
  4050a2:	enter  0x796e,0xa4
  4050a6:	ja     0x40510b
  4050a8:	lahf   
  4050a9:	aaa    
  4050aa:	cmp    BYTE PTR [esi],cl
  4050ac:	shr    BYTE PTR [ebx],1
  4050ae:	sub    al,0xcd
  4050b0:	sbb    eax,0xc67cf813
  4050b5:	retf   
  4050b6:	sar    BYTE PTR [ecx],1
  4050b8:	stos   DWORD PTR es:[edi],eax
  4050b9:	shl    DWORD PTR [esi+0x21],0xd0
  4050bd:	fwait
  4050be:	push   edi
  4050bf:	and    BYTE PTR [edi-0x5f547839],dl
  4050c5:	push   edi
  4050c6:	sbb    ah,BYTE PTR [edi-0x3e]
  4050c9:	sbb    al,0xda
  4050cb:	and    al,ch
  4050cd:	or     eax,0x3d1ebecb
  4050d2:	pop    ecx
  4050d3:	or     BYTE PTR [ebx-0x7ba618a8],al
  4050d9:	out    0xc,eax
  4050db:	enter  0x468c,0x32
  4050df:	outs   dx,DWORD PTR ds:[esi]
  4050e0:	(bad)  
  4050e1:	hlt    
  4050e2:	out    0x54,al
  4050e4:	call   0xf3a7a17d
  4050e9:	mov    eax,0xe4b737ee
  4050ee:	sub    eax,0x4524328e
  4050f3:	fdiv   DWORD PTR [edx]
  4050f5:	ret    0xa965
  4050f8:	test   al,0xe1
  4050fa:	imul   edi,ebp,0x9b9e2b4c
  405100:	fld    DWORD PTR [ecx+eiz*1]
  405103:	xor    cl,BYTE PTR [ebx-0x6e34e94]
  405109:	mov    BYTE PTR [edx+0x60b0b26a],ah
  40510f:	xor    esp,edi
  405111:	repnz rcl ebp,0xba
  405115:	lahf   
  405116:	aad    0xad
  405118:	sbb    eax,0x6fc6253a
  40511d:	dec    edi
  40511e:	pop    DWORD PTR [ecx]
  405120:	hlt    
  405121:	add    bh,BYTE PTR es:[esi]
  405124:	pusha  
  405125:	hlt    
  405126:	sti    
  405127:	int3   
  405128:	stc    
  405129:	pop    ebp
  40512a:	xchg   esi,eax
  40512b:	push   edx
  40512c:	mov    ds:0x54d630cc,eax
  405131:	pop    edi
  405132:	dec    ebx
  405133:	stos   DWORD PTR es:[edi],eax
  405134:	pop    ebp
  405135:	fimul  DWORD PTR [eax+0x55]
  405138:	fidiv  WORD PTR [esi-0x5e04c120]
  40513e:	mov    ch,0xd0
  405140:	retf   0xca35
  405143:	xchg   BYTE PTR es:[edi+0x17],ah
  405147:	sbb    BYTE PTR [edi-0x4c306544],0x17
  40514e:	jmp    0xdfe:0x5a237970
  405155:	pushf  
  405156:	aad    0x1f
  405158:	push   0x9d7c5b1b
  40515d:	aas    
  40515e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40515f:	push   edi
  405160:	xchg   ebp,eax
  405161:	cmp    DWORD PTR [edx],0xfffffff8
  405164:	fiadd  DWORD PTR [esi+0x68716c2c]
  40516a:	sbb    eax,0x3d68f455
  40516f:	jne    0x4051af
  405171:	mov    ch,0xc1
  405173:	adc    DWORD PTR [esp+ebx*2-0x1d],0x2e22472f
  40517b:	in     eax,0x21
  40517d:	loopne 0x405113
  40517f:	pop    ebp
  405180:	hlt    
  405181:	dec    edx
  405182:	lea    esi,[eax-0x3]
  405185:	fcomp  QWORD PTR [esi-0x6a0386a4]
  40518b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40518c:	mov    WORD PTR [eax],ds
  40518e:	adc    eax,DWORD PTR [ecx+0x278bea79]
  405194:	out    dx,al
  405195:	ss out dx,eax
  405197:	std    
  405198:	adc    eax,esp
  40519a:	xchg   ebp,eax
  40519b:	aam    0x94
  40519d:	inc    eax
  40519e:	cmp    BYTE PTR [edx+esi*4],0x49
  4051a2:	or     esp,edx
  4051a4:	dec    ebp
  4051a5:	iret   
  4051a6:	out    dx,al
  4051a7:	xor    al,0x9d
  4051a9:	xor    BYTE PTR [ebx-0x37],dl
  4051ac:	outs   dx,BYTE PTR ds:[esi]
  4051ad:	scas   al,BYTE PTR es:[edi]
  4051ae:	mov    ds:0x2fc7b65d,al
  4051b3:	fdiv   DWORD PTR [ebx]
  4051b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b6:	popa   
  4051b7:	fwait
  4051b8:	(bad)  
  4051b9:	xor    DWORD PTR [ebx+0x71],ebx
  4051bc:	imul   edi,DWORD PTR [ebx],0x3d
  4051bf:	mov    edi,0xb6711e91
  4051c4:	mov    eax,0xb6a85cd4
  4051c9:	iret   
  4051ca:	pop    esp
  4051cb:	push   0x73e84fcd
  4051d0:	jl     0x40516d
  4051d2:	sbb    eax,0x2eb95221
  4051d7:	xor    ch,ah
  4051d9:	sub    DWORD PTR [edx-0x4c],0xefe853d1
  4051e0:	cwde   
  4051e1:	les    ecx,FWORD PTR [ecx-0x28081fd2]
  4051e7:	inc    ebx
  4051e8:	mov    dh,0xd3
  4051ea:	add    ecx,esi
  4051ec:	bnd jl 0x4051ce
  4051ef:	fbstp  TBYTE PTR [edx+0x5f5d2a66]
  4051f5:	mov    ebp,0x857abedc
  4051fa:	rcl    esp,1
  4051fc:	push   esi
  4051fd:	sahf   
  4051fe:	cld    
  4051ff:	stos   BYTE PTR es:[edi],al
  405200:	xlat   BYTE PTR ds:[ebx]
  405201:	sbb    eax,0xfbd24c13
  405206:	in     al,dx
  405207:	adc    ebx,DWORD PTR [edx+0x6]
  40520a:	push   0xffffffe3
  40520c:	jne    0x405236
  40520e:	cmp    esp,DWORD PTR [esi]
  405210:	daa    
  405211:	cdq    
  405212:	int    0xdb
  405214:	push   cs
  405215:	or     BYTE PTR [ebp+0x1d],ch
  405218:	adc    ah,BYTE PTR [eax-0x1fd60d1c]
  40521e:	jge    0x4051de
  405220:	scas   al,BYTE PTR es:[edi]
  405221:	call   0xdc461559
  405226:	jb     0x40525a
  405228:	add    cl,ch
  40522a:	add    DWORD PTR fs:[eax],eax
  40522d:	add    BYTE PTR [ebx+0x4d03c84d],cl
  405233:	or     BYTE PTR [ecx+0x4d8bf04d],cl
  405239:	in     al,0x85
  40523b:	leave  
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x9f4994ee
  405804:	pop    edi
  405805:	push   eax
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	ds dec esp
  405810:	pop    eax
  405811:	ins    BYTE PTR es:[edi],dx
  405812:	arpl   WORD PTR [ebx-0x61],si
  405815:	and    ebx,edx
  405817:	xor    DWORD PTR [ebp-0x4d],0x20
  40581b:	xchg   esp,eax
  40581c:	loope  0x405876
  40581e:	mov    dh,0x63
  405820:	or     DWORD PTR ds:0x1b96d4d,edi
  405826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405827:	dec    eax
  405828:	jnp    0x4058a1
  40582a:	inc    ebp
  40582b:	adc    DWORD PTR cs:[edx+0x17],0xfffffff2
  405830:	setns  BYTE PTR [ebx+0x5aa6de8]
  405837:	cmp    esp,DWORD PTR [esi+0x71d5cc21]
  40583d:	scas   al,BYTE PTR es:[edi]
  40583e:	in     eax,dx
  40583f:	jnp    0x4058b8
  405841:	js     0x405815
  405843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405844:	adc    DWORD PTR [ebx],ebp
  405846:	stc    
  405847:	sub    eax,DWORD PTR [ecx+0x4f65f256]
  40584d:	xchg   esi,eax
  40584e:	or     DWORD PTR [ecx],ebx
  405850:	sbb    al,0xe1
  405852:	inc    edx
  405853:	jle    0x405850
  405855:	test   al,0xdf
  405857:	xchg   ebx,eax
  405858:	adc    BYTE PTR [eax-0x4a],ah
  40585b:	pusha  
  40585c:	dec    ecx
  40585d:	cmp    DWORD PTR [edx-0x68],esp
  405860:	xor    al,0x8
  405862:	mov    edx,DWORD PTR [esi+0x21]
  405865:	cmc    
  405866:	repnz lahf 
  405868:	jo     0x40583f
  40586a:	dec    edx
  40586b:	sub    DWORD PTR [ebx],0xa87bd185
  405871:	sub    eax,0x6f
  405874:	jp     0x4058da
  405876:	xor    eax,0x22726bf1
  40587b:	or     DWORD PTR [edi+0x1ef460e5],esp
  405881:	cli    
  405882:	xchg   esp,eax
  405883:	sar    DWORD PTR [ebx+ebp*4+0x2892d6d3],0x21
  40588b:	and    esi,ecx
  40588d:	add    eax,0x50b5648e
  405892:	lods   al,BYTE PTR ds:[esi]
  405893:	rol    BYTE PTR [edi],1
  405895:	mov    WORD PTR [edx],gs
  405897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405898:	test   DWORD PTR [ebx-0x39],esi
  40589b:	adc    eax,DWORD PTR [edi+0x306c87bf]
  4058a1:	fmul   st,st(0)
  4058a3:	dec    edi
  4058a4:	pop    ebx
  4058a5:	(bad)  
  4058a6:	or     ah,BYTE PTR [ecx+0xf7b9117]
  4058ac:	call   0x6bca:0x1a60027e
  4058b3:	imul   esp,DWORD PTR [edx],0x1a
  4058b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b7:	jl     0x405932
  4058b9:	hlt    
  4058ba:	inc    edx
  4058bb:	fs jecxz 0x4058b0
  4058be:	add    edx,DWORD PTR [ebx+0x3861e151]
  4058c4:	xor    BYTE PTR [ecx+0x78],ch
  4058c7:	mov    dh,0xe0
  4058c9:	xor    dh,BYTE PTR [ebx+0x66a6073]
  4058cf:	dec    esp
  4058d0:	mov    DWORD PTR [ecx],esi
  4058d2:	push   ds
  4058d3:	jns    0x405906
  4058d5:	shl    BYTE PTR [esi+ebp*4],cl
  4058d8:	enter  0xc46e,0xd0
  4058dc:	mov    bh,0x2
  4058de:	dec    esp
  4058df:	sub    al,BYTE PTR ds:0xe8b9ac39
  4058e5:	xor    DWORD PTR [eax-0x21],ecx
  4058e8:	leave  
  4058e9:	ror    DWORD PTR es:[edi+0x37edd492],0xd4
  4058f1:	xchg   edx,eax
  4058f2:	or     eax,0xbc7ef1d5
  4058f7:	jo     0x4058d6
  4058f9:	jmp    0xa7a0b1b9
  4058fe:	lds    edi,FWORD PTR [ebp+0x23]
  405901:	mov    edi,0xbbeee5ce
  405906:	fs addr16 jo 0x405934
  40590a:	out    0x5d,al
  40590c:	(bad)  
  40590e:	fdivr  QWORD PTR [ecx+0x251bec40]
  405914:	push   ss
  405915:	loop   0x40598e
  405917:	sahf   
  405918:	push   ebp
  405919:	xchg   edi,eax
  40591a:	sbb    ebx,DWORD PTR [edx]
  40591c:	out    0xbf,al
  40591e:	sbb    eax,0x56686a4b
  405923:	icebp  
  405924:	sub    ebx,DWORD PTR [ebx+0x4d]
  405927:	jmp    0x4895:0x7f41738c
  40592e:	xlat   BYTE PTR ds:[ebx]
  40592f:	push   edi
  405930:	jle    0x40594d
  405932:	sti    
  405933:	jbe    0x405965
  405935:	push   ss
  405936:	enter  0x188d,0xa4
  40593a:	sbb    eax,0x11b18b7e
  40593f:	repz and BYTE PTR [esi+0x7],dl
  405943:	mov    ebp,0x267f0666
  405948:	or     ecx,DWORD PTR [esi+0x6b]
  40594b:	repz cmp al,0x59
  40594e:	sbb    BYTE PTR [eax+0x53025fd2],ah
  405954:	ins    DWORD PTR es:[edi],dx
  405955:	inc    eax
  405956:	sahf   
  405957:	cdq    
  405958:	xchg   BYTE PTR [esi-0x6e],ah
  40595b:	xor    DWORD PTR [ebx+0x3d],esi
  40595e:	push   ecx
  40595f:	xchg   ecx,eax
  405960:	mov    WORD PTR [ebx],ds
  405962:	cmp    ebp,edx
  405964:	sahf   
  405965:	aad    0xe1
  405967:	dec    esi
  405968:	xlat   BYTE PTR ds:[ebx]
  405969:	js     0x4059e7
  40596b:	(bad)  
  40596c:	cmp    ecx,edx
  40596e:	fistp  WORD PTR [edx-0x4d]
  405971:	and    ebp,ecx
  405973:	pop    ecx
  405974:	mul    cl
  405976:	sub    DWORD PTR [eax],edi
  405978:	shl    DWORD PTR [esi-0x57aee673],0x62
  40597f:	mov    eax,0xbd95c02
  405984:	scas   eax,DWORD PTR es:[edi]
  405985:	retf   
  405986:	in     al,0xb9
  405988:	(bad)  
  405989:	mov    dh,0xab
  40598b:	aas    
  40598c:	cld    
  40598d:	imul   ebx,DWORD PTR [eax+0x1a0bbb8c],0x2
  405994:	xchg   esi,eax
  405995:	cmc    
  405996:	in     eax,0x80
  405998:	loop   0x4059d5
  40599a:	ins    BYTE PTR es:[edi],dx
  40599b:	aad    0x5f
  40599d:	(bad)  
  40599e:	pop    ecx
  40599f:	add    BYTE PTR [ebx+0x1ea8ed73],0x81
  4059a6:	xchg   esi,eax
  4059a7:	lods   al,BYTE PTR ds:[esi]
  4059a8:	pop    edx
  4059a9:	imul   edx,eax,0x5f
  4059ac:	loope  0x4059d7
  4059ae:	inc    eax
  4059af:	fst    st(1)
  4059b1:	std    
  4059b2:	shr    edi,0x1f
  4059b5:	pop    esi
  4059b6:	das    
  4059b7:	jno    0x40594d
  4059b9:	ja     0x4059fe
  4059bb:	push   es
  4059bc:	jl     0x4059cb
  4059be:	mov    ch,0x7f
  4059c0:	in     al,dx
  4059c1:	repz and ecx,DWORD PTR [ecx+ebp*8-0x16]
  4059c6:	mov    esp,0x11752e78
  4059cb:	cmp    dh,BYTE PTR [ebx+0x1d16483e]
  4059d1:	or     DWORD PTR [edi+0x53],ecx
  4059d4:	and    dl,BYTE PTR [edx]
  4059d6:	(bad)  
  4059d7:	out    dx,al
  4059d8:	hlt    
  4059d9:	cdq    
  4059da:	in     eax,dx
  4059db:	jge    0x4059b3
  4059dd:	sbb    BYTE PTR [ebx],dl
  4059df:	dec    eax
  4059e0:	call   0xdbf24c07
  4059e5:	ins    BYTE PTR es:[edi],dx
  4059e6:	mov    al,ds:0x221a21f5
  4059eb:	(bad)  
  4059ec:	lods   eax,DWORD PTR ds:[esi]
  4059ed:	retf   
  4059ee:	mov    ebp,0xda98b7e0
  4059f3:	mov    bl,ch
  4059f5:	(bad)  
  4059f6:	mov    ecx,0xbe11d46
  4059fb:	loopne 0x405a1a
  4059fd:	out    dx,al
  4059fe:	sub    eax,0x57b16686
  405a03:	dec    esp
  405a04:	xchg   ebx,eax
  405a05:	inc    esi
  405a06:	dec    ebp
  405a07:	cld    
  405a08:	arpl   WORD PTR [edi],dx
  405a0a:	sub    eax,0xe74caf7a
  405a0f:	sbb    al,0x5f
  405a11:	ret    0xf305
  405a14:	xchg   cl,bh
  405a16:	lods   al,BYTE PTR ds:[esi]
  405a17:	cmp    eax,0x472f60b7
  405a1c:	mov    bl,0x92
  405a1e:	bound  ebx,QWORD PTR gs:[edx+0x48f56de8]
  405a25:	test   al,0x39
  405a27:	mov    edi,0x66bda9c
  405a2c:	stos   DWORD PTR es:[edi],eax
  405a2d:	adc    DWORD PTR [ebx],ebp
  405a2f:	aaa    
  405a30:	out    0xf8,al
  405a32:	inc    esp
  405a33:	fwait
  405a34:	outs   dx,DWORD PTR ds:[esi]
  405a35:	adc    cl,BYTE PTR [ebx-0x1dc975dc]
  405a3b:	pop    edx
  405a3c:	scas   al,BYTE PTR es:[edi]
  405a3d:	jae    0x405a36
  405a3f:	jae    0x4059c8
  405a41:	push   0x65f8ae01
  405a46:	je     0x405a9f
  405a48:	push   ss
  405a49:	dec    ebx
  405a4a:	mov    ds:0xf5730a07,eax
  405a4f:	(bad)  
  405a50:	sub    BYTE PTR [esp],bh
  405a53:	(bad)  
  405a54:	mov    bh,0x2d
  405a56:	cmc    
  405a57:	mov    cl,0xe8
  405a59:	jnp    0x405a77
  405a5b:	hlt    
  405a5c:	rol    DWORD PTR [ecx],cl
  405a5e:	ins    DWORD PTR es:[edi],dx
  405a5f:	sbb    BYTE PTR [ebp-0x5fcc1f0e],0x85
  405a66:	xor    al,0xe7
  405a68:	jecxz  0x405a95
  405a6a:	arpl   WORD PTR [ebx],cx
  405a6c:	mov    ecx,0xd65082e5
  405a71:	sbb    edi,DWORD PTR [ebp-0xc2823d0]
  405a77:	aas    
  405a78:	mov    ds:0xac0587f,al
  405a7d:	cmp    bh,al
  405a7f:	gs mov ah,0x9b
  405a82:	int    0x7e
  405a84:	mov    esi,0x6099f426
  405a89:	mov    bl,0xe0
  405a8b:	mov    cl,0x2
  405a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a8e:	jmp    0x405afa
  405a90:	sub    cl,BYTE PTR [ebx]
  405a92:	ins    DWORD PTR es:[edi],dx
  405a93:	retf   0x7332
  405a96:	dec    ebp
  405a97:	inc    ebp
  405a98:	jnp    0x405a4a
  405a9a:	gs sti 
  405a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a9d:	loope  0x405a9c
  405a9f:	aas    
  405aa0:	cmp    BYTE PTR [edi-0x79],ah
  405aa3:	mov    DWORD PTR [ebp+0x67d54170],edi
  405aa9:	mov    ah,0x7
  405aab:	pop    ds
  405aac:	loopne 0x405b2a
  405aae:	mov    ecx,0xaffe97c3
  405ab3:	fcomip st,st(2)
  405ab5:	mov    edi,DWORD PTR [ebx]
  405ab7:	sub    BYTE PTR [edi],ah
  405ab9:	ret    
  405aba:	add    ch,cl
  405abc:	popf   
  405abd:	fcomp  DWORD PTR [ecx+0x7741b650]
  405ac3:	xlat   BYTE PTR ds:[ebx]
  405ac4:	into   
  405ac5:	cmp    ch,BYTE PTR [esi+0x1b0fb01]
  405acb:	pop    es
  405acc:	neg    esp
  405ace:	(bad)  
  405acf:	cwde   
  405ad0:	sub    ch,BYTE PTR [ecx]
  405ad2:	(bad)  
  405ad3:	sbb    al,0xb8
  405ad5:	adc    BYTE PTR [edi-0x620743fa],bl
  405adb:	lock mov bl,0xaa
  405ade:	cmp    BYTE PTR [eax],al
  405ae0:	nop
  405ae1:	in     al,0xea
  405ae3:	fs pop edi
  405ae5:	add    eax,0xdf41b19b
  405aea:	sbb    esi,esi
  405aec:	sbb    DWORD PTR [esi+0x7f],0x53b02dcc
  405af3:	pop    esp
  405af4:	sub    bl,BYTE PTR [ebx+ebx*8]
  405af7:	fwait
  405af8:	jo     0x405a89
  405afa:	pusha  
  405afb:	push   edx
  405afc:	dec    edi
  405afd:	fwait
  405afe:	iret   
  405aff:	repnz outs dx,BYTE PTR ds:[esi]
  405b01:	mov    edx,0x29a1fddb
  405b06:	sub    DWORD PTR [esi+esi*2-0x34],0xffffff9c
  405b0b:	lahf   
  405b0c:	adc    eax,0x7e29c1fb
  405b11:	inc    ebp
  405b12:	shl    DWORD PTR [di+0x22],cl
  405b16:	test   DWORD PTR [esi-0x6a38f885],edx
  405b1c:	push   ebx
  405b1d:	out    dx,al
  405b1e:	stc    
  405b1f:	add    DWORD PTR [edx+0x4a821ebf],ecx
  405b25:	dec    ebx
  405b26:	test   al,0x91
  405b28:	scas   al,BYTE PTR es:[edi]
  405b29:	je     0x405b55
  405b2b:	pop    DWORD PTR gs:[ebx+0x3]
  405b2f:	stos   DWORD PTR es:[edi],eax
  405b30:	aas    
  405b31:	mov    ch,0x80
  405b33:	pop    ebx
  405b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b35:	cmp    ecx,DWORD PTR [edx+0x71]
  405b38:	xchg   ebp,eax
  405b39:	lea    ebx,[esi]
  405b3b:	push   esp
  405b3c:	repnz inc edi
  405b3e:	test   DWORD PTR [ebx-0x3a],ebx
  405b41:	sti    
  405b42:	fwait
  405b43:	lds    ebp,FWORD PTR [ebp+0x176aeb]
  405b49:	fdiv   st,st(5)
  405b4b:	mov    dl,0xd9
  405b4d:	inc    edi
  405b4e:	sub    bh,ch
  405b50:	xchg   ecx,eax
  405b51:	or     edx,DWORD PTR [eax]
  405b53:	out    0x76,al
  405b55:	test   eax,0xa49a35ec
  405b5a:	add    esp,esp
  405b5c:	jmp    0x638c:0x32cf8154
  405b63:	jge    0x405b77
  405b65:	and    al,BYTE PTR [esi+0x5cea676a]
  405b6b:	mov    cl,BYTE PTR [esi-0x252e915e]
  405b71:	sbb    al,0xa1
  405b73:	cli    
  405b74:	xor    bl,bh
  405b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b77:	pusha  
  405b78:	and    BYTE PTR [edx-0x2204b08d],ah
  405b7e:	pop    edx
  405b7f:	cmp    DWORD PTR [ebp-0x2f],eax
  405b82:	rcl    DWORD PTR [edx+eax*1],cl
  405b85:	idiv   DWORD PTR [ebx+0x6e8180b8]
  405b8b:	xor    ch,BYTE PTR [ecx-0x11]
  405b8e:	pop    ecx
  405b8f:	and    edx,edx
  405b91:	mov    al,ds:0x68655350
  405b96:	pop    es
  405b97:	popa   
  405b98:	xor    eax,0x343785ee
  405b9d:	cwde   
  405b9e:	imul   ebx,DWORD PTR [edi-0x1d056b14],0x64
  405ba5:	scas   eax,DWORD PTR es:[edi]
  405ba6:	sbb    al,0x51
  405ba8:	imul   edi,DWORD PTR [ebp+0x27e344db],0x48757d9c
  405bb2:	inc    ebx
  405bb3:	push   0xf2459dfd
  405bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb9:	call   0x129d:0xe48fef30
  405bc0:	pop    eax
  405bc1:	jo     0x405bfb
  405bc3:	jbe    0x405bb6
  405bc5:	dec    esi
  405bc6:	mov    WORD PTR [ebx-0x4a98168d],?
  405bcc:	stos   BYTE PTR es:[edi],al
  405bcd:	or     cl,BYTE PTR [ebx]
  405bcf:	retf   
  405bd0:	lods   eax,DWORD PTR ds:[esi]
  405bd1:	push   ss
  405bd2:	push   ebx
  405bd3:	push   0xd19625fa
  405bd8:	ds hlt 
  405bda:	test   DWORD PTR [edi+0x7bbb5e42],esi
  405be0:	jecxz  0x405bf5
  405be2:	jecxz  0x405c46
  405be4:	inc    esp
  405be5:	outs   dx,BYTE PTR ds:[esi]
  405be6:	cmp    dl,BYTE PTR [esi+0x6d]
  405be9:	fnstsw WORD PTR es:[eax]
  405bec:	push   edx
  405bed:	loop   0x405bb2
  405bef:	ret    0x71b3
  405bf2:	jmp    0x405b95
  405bf4:	fsub   DWORD PTR [edi+0x57442d2e]
  405bfa:	aam    0xd6
  405bfc:	test   BYTE PTR [edx-0x2f89f978],bh
  405c02:	js     0x405c0f
  405c04:	pop    ecx
  405c05:	ss adc esi,ecx
  405c08:	pop    edi
  405c09:	push   edx
  405c0a:	test   al,0x12
  405c0c:	call   0x9180:0xa0ab5f8a
  405c13:	dec    ebp
  405c14:	sbb    ebx,DWORD PTR [eax]
  405c16:	lods   eax,DWORD PTR ds:[esi]
  405c17:	leave  
  405c18:	pop    ebx
  405c19:	adc    DWORD PTR [esi],0x30061f6e
  405c1f:	or     eax,0xf6bdc843
  405c24:	popf   
  405c25:	int3   
  405c26:	rol    DWORD PTR [edi+0x46638462],0x91
  405c2d:	add    ch,bl
  405c2f:	cli    
  405c30:	dec    edi
  405c31:	arpl   WORD PTR [ecx+esi*1+0x73],si
  405c35:	fimul  DWORD PTR [ecx+0x69d4968f]
  405c3b:	xchg   DWORD PTR [esi+0x2d],edx
  405c3e:	iret   
  405c3f:	in     eax,0x1d
  405c41:	stos   DWORD PTR es:[edi],eax
  405c42:	lock sbb eax,0xd71d768b
  405c48:	and    bl,cl
  405c4a:	imul   edi,DWORD PTR [ebx],0xcb0338bc
  405c50:	(bad)  
  405c51:	mov    ecx,0x5314a1dd
  405c56:	cdq    
  405c57:	ret    0x7dc0
  405c5a:	xor    esi,DWORD PTR [ebx-0x1a78a826]
  405c60:	jno    0x405c86
  405c62:	add    eax,0xed272615
  405c67:	add    al,0x8
  405c69:	dec    edi
  405c6a:	jmp    0xc8b7:0x92f75e3c
  405c71:	cld    
  405c72:	jp     0x405cb0
  405c74:	adc    ebx,eax
  405c76:	stc    
  405c77:	add    BYTE PTR [esi+0x60164772],cl
  405c7d:	mov    edx,0x2eb751e0
  405c82:	push   eax
  405c83:	int    0x69
  405c85:	pop    ebp
  405c86:	pop    edi
  405c87:	out    dx,eax
  405c88:	ja     0x405ca1
  405c8a:	or     DWORD PTR [eax+0x5bc12948],esi
  405c90:	lds    edi,FWORD PTR [edx-0x54]
  405c93:	mov    edx,0x2de2f956
  405c98:	addr16 mov ds:0x3cda,eax
  405c9c:	imul   esi,ebx,0xf1d2dbd8
  405ca2:	push   ss
  405ca3:	lds    ecx,FWORD PTR [ebx+0x32]
  405ca6:	hlt    
  405ca7:	bound  eax,QWORD PTR [esi+edi*8-0x75]
  405cab:	fcom   DWORD PTR cs:[eax+0x3ad53b5a]
  405cb2:	xchg   BYTE PTR [ebp+0x6c],ah
  405cb5:	lds    ebp,FWORD PTR [ebx-0x5e]
  405cb8:	push   esp
  405cb9:	stos   BYTE PTR es:[edi],al
  405cba:	fist   WORD PTR [edi-0xc]
  405cbd:	mov    esi,0x777116c3
  405cc2:	ret    0x718
  405cc5:	ds adc eax,0x2d9723c3
  405ccb:	inc    edx
  405ccc:	(bad)  
  405ccd:	lahf   
  405cce:	add    ecx,0x904a9c6b
  405cd4:	xor    bh,BYTE PTR [eax+esi*1]
  405cd7:	pop    edi
  405cd8:	xchg   edx,eax
  405cd9:	adc    al,dl
  405cdb:	popa   
  405cdc:	push   0x4
  405cde:	(bad)  
  405cdf:	sbb    bl,BYTE PTR [eax-0x39]
  405ce2:	cli    
  405ce3:	fsub   QWORD PTR [ebp+0x55]
  405ce6:	repnz loope 0x405cb9
  405ce9:	sbb    al,0x8e
  405ceb:	fs call 0x2f1fd0e1
  405cf1:	xchg   ecx,eax
  405cf2:	adc    BYTE PTR [esi+edx*8+0x1adccecc],0xe2
  405cfa:	cdq    
  405cfb:	dec    esi
  405cfc:	ss xchg ebp,eax
  405cfe:	into   
  405cff:	inc    edi
  405d00:	stos   DWORD PTR es:[edi],eax
  405d01:	imul   ebp,DWORD PTR [edx],0xffffffd8
  405d04:	mov    dh,ah
  405d06:	test   ch,al
  405d08:	test   DWORD PTR [ebx],esp
  405d0a:	xchg   edx,eax
  405d0b:	icebp  
  405d0c:	outs   dx,DWORD PTR ds:[esi]
  405d0d:	inc    edx
  405d0e:	ficomp WORD PTR [ebx+0x409a4b9b]
  405d14:	cmp    BYTE PTR [edx+0x2e],0x71
  405d18:	in     al,dx
  405d19:	fstp   TBYTE PTR [ebx+0x61]
  405d1c:	aaa    
  405d1d:	mov    ch,0xc
  405d1f:	leave  
  405d20:	or     ch,0xfe
  405d23:	add    al,0x41
  405d25:	push   esp
  405d26:	add    eax,0x978f5d99
  405d2b:	and    esi,DWORD PTR [esi]
  405d2d:	stc    
  405d2e:	les    ebx,FWORD PTR [ebx+esi*8-0x6ba0683]
  405d35:	scas   al,BYTE PTR es:[edi]
  405d36:	pop    ebx
  405d37:	push   ecx
  405d38:	addr16 cs or edi,edi
  405d3c:	cmp    BYTE PTR [ebx+0x3ee556c7],0x18
  405d43:	jnp    0x405d3e
  405d45:	icebp  
  405d46:	clc    
  405d47:	shr    BYTE PTR [ecx-0x19c0c1f4],0x72
  405d4e:	pop    ecx
  405d4f:	popf   
  405d50:	jle    0x405d1d
  405d52:	pop    ebp
  405d53:	xchg   DWORD PTR [ebp-0x133ae96f],edx
  405d59:	aas    
  405d5a:	jno    0x405d8c
  405d5c:	or     DWORD PTR [ebp-0x7e],edi
  405d5f:	cdq    
  405d60:	bound  edi,QWORD PTR [esi-0x5b]
  405d63:	mov    cl,0xca
  405d65:	jne    0x405d0b
  405d67:	cld    
  405d68:	clc    
  405d69:	and    eax,0x17ab8d72
  405d6e:	push   ds
  405d6f:	pop    ds
  405d70:	in     eax,dx
  405d71:	sbb    DWORD PTR ds:0x6d0170f2,eax
  405d77:	mov    ds:0xaa026903,al
  405d7c:	mov    ecx,0xed603b20
  405d81:	icebp  
  405d82:	pop    es
  405d83:	sub    DWORD PTR [eax-0x55],edi
  405d86:	lock mov ah,dl
  405d89:	xor    ecx,esi
  405d8b:	gs push cs
  405d8d:	jns    0x405d37
  405d8f:	mov    DWORD PTR [edx],esp
  405d91:	ret    0xee0d
  405d94:	jo     0x405dc7
  405d96:	fisub  DWORD PTR [edi+0x21]
  405d99:	jns    0x405d8c
  405d9b:	lods   al,BYTE PTR ds:[esi]
  405d9c:	push   eax
  405d9d:	lds    edx,FWORD PTR [ebp-0x6c3a9b85]
  405da3:	(bad)  
  405da4:	or     al,0x97
  405da6:	fwait
  405da7:	xor    eax,0x9e7865f9
  405dac:	daa    
  405dad:	sub    ch,cl
  405daf:	pop    eax
  405db0:	or     dl,0x35
  405db3:	jnp    0x405dff
  405db5:	(bad)  
  405db6:	jle    0x405d7e
  405db8:	inc    ebx
  405db9:	cmp    al,0xa3
  405dbb:	pop    esp
  405dbc:	pop    ebp
  405dbd:	mov    eax,esi
  405dbf:	mov    ebp,0x87be8b96
  405dc4:	mov    edi,0x7bad4703
  405dc9:	aas    
  405dca:	mov    WORD PTR [ebx+edx*1],?
  405dcd:	push   ebx
  405dce:	mov    es,ebx
  405dd0:	jae    0x405e4c
  405dd2:	push   esp
  405dd3:	ret    
  405dd4:	xchg   ecx,eax
  405dd5:	dec    esi
  405dd6:	out    dx,al
  405dd7:	xchg   edx,eax
  405dd8:	sahf   
  405dd9:	inc    ebx
  405dda:	or     edi,edi
  405ddc:	adc    al,0xdc
  405dde:	push   esi
  405ddf:	mov    dl,0xd1
  405de1:	inc    eax
  405de2:	cmp    BYTE PTR [edx+0x32bd77f8],ah
  405de8:	mov    BYTE PTR [esi-0x49],dh
  405deb:	adc    eax,0x50bafcbe
  405df0:	in     eax,0xe8
  405df2:	rcl    bl,1
  405df4:	jne    0x405e0b
  405df6:	(bad)  
  405df8:	mov    esp,DWORD PTR [edi+0x3]
  405dfb:	hlt    
  405dfc:	mov    ch,0x1c
  405dfe:	pop    ds
  405dff:	pop    ebp
  405e00:	jmp    ebx
  405e02:	ins    DWORD PTR es:[edi],dx
  405e03:	inc    ebp
  405e04:	je     0x405e52
  405e06:	stos   DWORD PTR es:[edi],eax
  405e07:	shr    al,1
  405e09:	out    0x26,eax
  405e0b:	into   
  405e0c:	jle    0x405e1a
  405e0e:	(bad)  
  405e10:	add    eax,0xb8f901b3
  405e15:	jno    0x405da1
  405e17:	dec    ebp
  405e18:	in     al,0xf
  405e1a:	aas    
  405e1b:	and    al,0xe2
  405e1d:	jg     0x405e8c
  405e1f:	inc    ecx
  405e20:	addr16 nop
  405e22:	fidivr DWORD PTR [edi]
  405e24:	popf   
  405e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e26:	xchg   edi,eax
  405e27:	or     BYTE PTR [eax-0xbb96958],cl
  405e2d:	mov    eax,0x2c5fdef6
  405e32:	pop    esi
  405e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e34:	shl    BYTE PTR [ecx],1
  405e36:	push   esi
  405e37:	inc    eax
  405e38:	fimul  WORD PTR [eax+edx*4+0x2da0d28b]
  405e3f:	pop    eax
  405e40:	dec    ebx
  405e41:	int3   
  405e42:	mov    ds:0xfd7e2a1b,eax
  405e47:	int    0xb4
  405e49:	pushf  
  405e4a:	nop
  405e4b:	ja     0x405ea2
  405e4d:	cli    
  405e4e:	xchg   esp,eax
  405e4f:	ins    DWORD PTR es:[edi],dx
  405e50:	mov    eax,DWORD PTR [ebp-0x55]
  405e53:	xchg   esp,eax
  405e54:	aam    0x63
  405e56:	cmp    ch,BYTE PTR [ecx+0x1e0c8314]
  405e5c:	stos   DWORD PTR es:[edi],eax
  405e5d:	int    0xb8
  405e5f:	addr16 aad 0x18
  405e62:	push   edx
  405e63:	pop    esi
  405e64:	out    dx,eax
  405e65:	push   edx
  405e66:	jg     0x405e4a
  405e68:	cmp    esi,DWORD PTR gs:[ebx+ecx*2]
  405e6c:	xor    al,0x2b
  405e6e:	xor    al,0x3b
  405e70:	gs enter 0xe4e7,0xeb
  405e75:	pop    esi
  405e76:	bound  eax,QWORD PTR [edx+0x1e]
  405e79:	pop    edx
  405e7a:	leave  
  405e7b:	(bad)  
  405e7c:	lea    eax,[edx-0x6523d9bb]
  405e82:	jg     0x405e33
  405e84:	dec    esp
  405e85:	add    esp,edx
  405e87:	hlt    
  405e88:	xor    edi,DWORD PTR [esi+0x65]
  405e8b:	cli    
  405e8c:	xchg   edi,eax
  405e8d:	dec    edi
  405e8e:	loop   0x405ecb
  405e90:	sbb    esi,DWORD PTR [edi-0x10]
  405e93:	sbb    DWORD PTR [ebx],ebx
  405e95:	cmc    
  405e96:	add    DWORD PTR [eax-0x77516da6],ebp
  405e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e9d:	pop    ss
  405e9e:	test   DWORD PTR [edx],0x6dbc8912
  405ea4:	xor    eax,0x79e95f34
  405ea9:	lock xchg DWORD PTR [ecx],ebx
  405eac:	adc    bh,cl
  405eae:	xchg   edi,eax
  405eaf:	push   ds
  405eb0:	jl     0x405ef2
  405eb2:	push   ecx
  405eb3:	scas   al,BYTE PTR es:[edi]
  405eb4:	xchg   esi,eax
  405eb5:	div    DWORD PTR [esi+0x36cf0026]
  405ebb:	maskmovq mm0,mm2
  405ebe:	xlat   BYTE PTR ds:[ebx]
  405ebf:	das    
  405ec0:	jp     0x405f10
  405ec2:	mov    bl,0xbb
  405ec4:	jmp    0xcbe8041e
  405ec9:	fist   WORD PTR [ebx]
  405ecb:	mov    ds:0xa33f2d73,al
  405ed0:	iret   
  405ed1:	pop    ss
  405ed2:	test   eax,0x3bd09dd0
  405ed7:	adc    eax,ebx
  405ed9:	stos   DWORD PTR es:[edi],eax
  405eda:	fdiv   QWORD PTR [ebx]
  405edc:	mov    ds:0x30f5f72,al
  405ee1:	cmc    
  405ee2:	in     al,0xa9
  405ee4:	cmp    al,0x3e
  405ee6:	dec    ebx
  405ee7:	clc    
  405ee8:	in     eax,dx
  405ee9:	lahf   
  405eea:	out    dx,al
  405eeb:	cmp    ecx,ebx
  405eed:	mov    BYTE PTR [esp+edx*8+0x20ba254c],ah
  405ef4:	mov    DWORD PTR [ecx+0x1c8a0079],ebp
  405efa:	test   al,0x7d
  405efc:	(bad)  
  405efd:	mov    esi,0x1da1f63f
  405f02:	mov    edx,0xce9eeec0
  405f07:	lods   al,BYTE PTR ds:[esi]
  405f08:	(bad)  
  405f09:	ja     0x405ec9
  405f0b:	outs   dx,DWORD PTR ds:[esi]
  405f0c:	int3   
  405f0d:	mov    eax,0xa655f1d8
  405f12:	jne    0x405ee6
  405f14:	repz ss dec ebp
  405f17:	sbb    esi,DWORD PTR [esi+0x43]
  405f1a:	pop    eax
  405f1b:	pushf  
  405f1c:	push   cs
  405f1d:	lgs    eax,FWORD PTR [edi-0xabce96d]
  405f24:	push   cs
  405f25:	fcomp  DWORD PTR [ebp+0x58]
  405f28:	mov    ds:0xa41bac39,al
  405f2d:	adc    cl,BYTE PTR [ecx-0x4ab4fef7]
  405f33:	lahf   
  405f34:	cwde   
  405f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f36:	pushf  
  405f37:	jmp    0xaab6:0xb7d7956c
  405f3e:	std    
  405f3f:	sub    BYTE PTR [ecx+0x52885c94],dh
  405f45:	mov    edx,0x53fb9432
  405f4a:	sbb    BYTE PTR [eax],al
  405f4c:	outs   dx,BYTE PTR ds:[esi]
  405f4d:	cld    
  405f4e:	xor    edx,DWORD PTR [ecx]
  405f50:	inc    ebx
  405f51:	fsubrp st(5),st
  405f53:	aas    
  405f54:	and    BYTE PTR [esi-0x7155e121],dl
  405f5a:	add    esi,0xf1959d9f
  405f60:	pop    ebx
  405f61:	pop    esi
  405f62:	pop    ebx
  405f63:	adc    edi,esi
  405f65:	jl     0x405f1e
  405f67:	repnz push 0xc9401091
  405f6d:	(bad)  
  405f6e:	adc    cl,BYTE PTR [ebx]
  405f70:	outs   dx,BYTE PTR ds:[esi]
  405f71:	in     eax,dx
  405f72:	jg     0x405f7d
  405f74:	shl    DWORD PTR [eax-0x369028ad],1
  405f7a:	inc    ebp
  405f7b:	mov    cl,0xb2
  405f7d:	jae    0x405fa6
  405f7f:	in     al,dx
  405f80:	sub    al,0x3e
  405f82:	ret    0x2480
  405f85:	imul   BYTE PTR [ebp+0x78c66f7c]
  405f8b:	fsub   DWORD PTR [esi]
  405f8d:	push   edx
  405f8e:	les    esi,FWORD PTR [esi+0x6ec7175e]
  405f94:	retf   0x5d9c
  405f97:	frstor [esi-0x4c]
  405f9a:	mov    ecx,0xb00fecdc
  405f9f:	add    edx,edi
  405fa1:	jg     0x40600c
  405fa3:	loop   0x405fcc
  405fa5:	out    0xb3,al
  405fa7:	aaa    
  405fa8:	ins    BYTE PTR es:[edi],dx
  405fa9:	(bad)  
  405faa:	(bad)  
  405fac:	(bad)  
  405fad:	mov    al,0xbd
  405faf:	hlt    
  405fb0:	out    dx,al
  405fb1:	int3   
  405fb2:	adc    esp,edx
  405fb4:	mov    eax,ds:0xe4327e4e
  405fb9:	pop    ss
  405fba:	clc    
  405fbb:	shl    ebp,cl
  405fbd:	push   ss
  405fbe:	xlat   BYTE PTR ds:[ebx]
  405fbf:	jmp    0x2395:0x7820ac1d
  405fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc7:	dec    edx
  405fc8:	sub    cl,ah
  405fca:	cmp    eax,0x71ff3260
  405fcf:	inc    ecx
  405fd0:	ins    BYTE PTR es:[edi],dx
  405fd1:	pop    ecx
  405fd2:	sub    al,0xa9
  405fd4:	push   cs
  405fd5:	mov    dl,0x4d
  405fd7:	imul   DWORD PTR [eax-0xe]
  405fda:	jmp    0xf354e84
  405fdf:	cmc    
  405fe0:	rcr    DWORD PTR [edx+0x4a],0x98
  405fe4:	add    BYTE PTR [edi],al
  405fe6:	mov    al,0x72
  405fe8:	inc    esp
  405fe9:	pop    es
  405fea:	jp     0x406020
  405fec:	dec    ebx
  405fed:	and    eax,0xc1fb0eb6
  405ff2:	test   DWORD PTR [ebp+0x73],ebx
  405ff5:	jae    0x405fa4
  405ff7:	fsub   DWORD PTR [bx-0x1760]
  405ffc:	mov    al,0xd5
  405ffe:	aad    0x46
  406000:	sbb    ch,ah
  406002:	retf   
  406003:	out    dx,al
  406004:	push   0x11
  406006:	xor    BYTE PTR [ebx-0x4e2973ba],ch
  40600c:	cs scas eax,DWORD PTR es:[edi]
  40600e:	dec    esp
  40600f:	pop    ebx
  406010:	and    BYTE PTR [esi+0x62872708],ch
  406016:	arpl   WORD PTR [edi-0x5c5e550c],ax
  40601c:	or     eax,0xfc00de29
  406021:	ja     0x40607a
  406023:	pop    ss
  406024:	mov    eax,ds:0xd780e17a
  406029:	jbe    0x406095
  40602b:	loopne 0x406072
  40602d:	retf   0x320f
  406030:	enter  0x13d9,0x44
  406034:	not    DWORD PTR [ebx]
  406036:	cld    
  406037:	adc    bl,bl
  406039:	mov    edx,0x913bf020
  40603e:	add    ebx,DWORD PTR [esi+eiz*2-0x15]
  406042:	dec    eax
  406043:	cmc    
  406044:	jo     0x40602b
  406046:	leave  
  406047:	inc    DWORD PTR [edi]
  406049:	ret    0x90cb
  40604c:	sahf   
  40604d:	sbb    DWORD PTR [ecx-0x7e255640],ecx
  406053:	sbb    BYTE PTR [ecx-0x169439c2],al
  406059:	push   esp
  40605a:	ret    0xdadc
  40605d:	mov    esp,0x935cc338
  406062:	inc    ecx
  406064:	pop    ecx
  406065:	lds    edx,FWORD PTR [ecx+0x50]
  406068:	aas    
  406069:	js     0x40607e
  40606b:	xlat   BYTE PTR fs:[ebx]
  40606d:	dec    ebx
  40606e:	xchg   esi,eax
  40606f:	inc    edi
  406070:	add    cl,dl
  406072:	call   0x7697:0x1b6ae0a3
  406079:	mov    bl,bh
  40607b:	pop    edi
  40607c:	iret   
  40607d:	jmp    0xc12e8240
  406082:	leave  
  406083:	lock add DWORD PTR [edi],ebp
  406086:	and    DWORD PTR [eax+0x2a94ca3a],0xfffffff9
  40608d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40608e:	inc    esp
  40608f:	cwde   
  406090:	dec    ebp
  406091:	mov    ds:0x4b01b7a1,al
  406096:	repnz add ch,BYTE PTR [ebx-0x58]
  40609a:	push   eax
  40609b:	push   esi
  40609c:	pusha  
  40609d:	inc    esp
  40609e:	cwde   
  40609f:	sahf   
  4060a0:	or     DWORD PTR [esi+eiz*2],ebp
  4060a3:	jge    0x40607f
  4060a5:	icebp  
  4060a6:	jl     0x4060f3
  4060a8:	out    0xf8,eax
  4060aa:	cdq    
  4060ab:	fld    QWORD PTR [edi-0x3]
  4060ae:	je     0x406058
  4060b0:	adc    eax,0xb216070d
  4060b5:	jne    0x4060a5
  4060b7:	loope  0x406133
  4060b9:	leave  
  4060ba:	pop    esi
  4060bb:	xchg   esp,eax
  4060bc:	adc    bl,BYTE PTR [ecx-0x7a]
  4060bf:	xchg   ecx,eax
  4060c0:	push   0x13
  4060c2:	inc    eax
  4060c3:	xor    esi,DWORD PTR [ecx+0x28]
  4060c6:	add    esp,DWORD PTR [edx+0x24]
  4060c9:	lahf   
  4060ca:	imul   edi,DWORD PTR [ebp+0x5e],0x73ac48e4
  4060d1:	lea    ecx,[edx+ebp*4]
  4060d4:	out    0xd1,al
  4060d6:	clc    
  4060d7:	or     BYTE PTR [ecx-0x568af127],dl
  4060dd:	outs   dx,DWORD PTR ds:[esi]
  4060de:	das    
  4060df:	arpl   WORD PTR [ebp-0x4ef645f6],cx
  4060e5:	cmp    DWORD PTR [eax+0x524ec24],edi
  4060eb:	add    DWORD PTR [esi-0x18],0x74
  4060ef:	xchg   edx,ebx
  4060f1:	mov    ebp,eax
  4060f3:	out    dx,eax
  4060f4:	pop    es
  4060f5:	loopne 0x4060de
  4060f7:	fistp  QWORD PTR [ebx+0x22405d35]
  4060fd:	inc    esi
  4060fe:	pop    ss
  4060ff:	add    DWORD PTR [esi],ecx
  406101:	aam    0x15
  406103:	adc    al,0xdb
  406105:	icebp  
  406106:	pushf  
  406107:	ret    
  406108:	cmc    
  406109:	jecxz  0x406098
  40610b:	push   ebx
  40610c:	pop    ds
  40610d:	out    0xbc,eax
  40610f:	dec    esi
  406110:	call   0x43ad7a01
  406115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406116:	in     al,dx
  406117:	stos   BYTE PTR es:[edi],al
  406118:	je     0x406182
  40611a:	arpl   WORD PTR [ecx-0x66b6151d],si
  406120:	test   al,0x92
  406122:	aam    0x4f
  406124:	cdq    
  406125:	adc    esi,DWORD PTR [ebp-0x3c]
  406128:	dec    esp
  406129:	dec    ecx
  40612a:	js     0x4060c9
  40612c:	adc    dl,BYTE PTR [edi]
  40612e:	fsubp  st(6),st
  406130:	or     DWORD PTR [edi-0x7d],esp
  406133:	pop    es
  406134:	xchg   BYTE PTR [edi],ah
  406136:	lock add al,0x62
  406139:	xchg   ecx,eax
  40613a:	stos   BYTE PTR es:[edi],al
  40613b:	hlt    
  40613c:	into   
  40613d:	mov    al,0xc2
  40613f:	ret    
  406140:	mov    ds:0x432761f8,al
  406145:	mov    dl,0xf9
  406147:	push   es
  406148:	and    bl,BYTE PTR [ebx-0x34696a8b]
  40614e:	das    
  40614f:	int    0xcb
  406151:	push   esp
  406152:	mov    WORD PTR ds:0x71303d90,gs
  406158:	shr    BYTE PTR [edi],1
  40615a:	push   cs
  40615b:	loop   0x4061af
  40615d:	js     0x406106
  40615f:	ins    DWORD PTR es:[edi],dx
  406160:	lds    eax,FWORD PTR [ecx+0x412edfc7]
  406166:	loope  0x406124
  406168:	cdq    
  406169:	dec    eax
  40616a:	test   BYTE PTR [ecx-0x63],bh
  40616d:	hlt    
  40616e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40616f:	push   eax
  406170:	cmpxchg BYTE PTR [edi+0xb],bh
  406174:	scas   al,BYTE PTR es:[edi]
  406175:	and    DWORD PTR [eax],ebx
  406177:	jo     0x40612d
  406179:	fnstcw WORD PTR [ebx+edx*2+0x3]
  40617d:	dec    eax
  40617e:	cli    
  40617f:	and    al,0x54
  406181:	push   esp
  406182:	cs mov esp,0x2dd22f54
  406188:	mov    dh,BYTE PTR [eax-0x6c7f00dd]
  40618e:	or     al,0xc2
  406190:	xor    al,BYTE PTR ds:0xff18277d
  406196:	icebp  
  406197:	mov    ecx,0x923d2ad1
  40619c:	int    0xf6
  40619e:	dec    ecx
  40619f:	test   DWORD PTR [ebp-0x56],edi
  4061a2:	push   0xb6b2c0ae
  4061a7:	jmp    0x3358f87f
  4061ac:	jbe    0x4061d3
  4061ae:	aas    
  4061af:	jg     0x40621a
  4061b1:	dec    ebp
  4061b2:	xchg   ebx,eax
  4061b3:	imul   eax,DWORD PTR [ebx+0x252f7ad1],0x43146755
  4061bd:	mov    edi,fs
  4061bf:	jecxz  0x40618d
  4061c1:	mov    al,ds:0xe7984eec
  4061c6:	in     eax,dx
  4061c7:	dec    edi
  4061c8:	mov    esi,0xd6807d77
  4061cd:	pop    eax
  4061ce:	lods   eax,DWORD PTR ds:[esi]
  4061cf:	mov    cl,0x56
  4061d1:	add    ecx,ecx
  4061d3:	data16 and cl,BYTE PTR [edx-0xa]
  4061d7:	inc    ebp
  4061d8:	gs mov esi,0xa51c8184
  4061de:	sub    DWORD PTR [edi+0x3efcb099],0x666fda77
  4061e8:	dec    esp
  4061e9:	arpl   WORD PTR [eax+0x16baa510],cx
  4061ef:	shl    BYTE PTR [eax+0x7],0xa4
  4061f3:	mov    ds:0x2139bd2d,al
  4061f8:	xchg   edi,eax
  4061f9:	adc    eax,0x6bfa6322
  4061fe:	aas    
  4061ff:	test   al,0x48
  406201:	push   ecx
  406202:	mov    ebx,0xb0af1645
  406207:	xor    eax,0xa0070d0f
  40620c:	sbb    bl,BYTE PTR [ebx-0xabb649e]
  406212:	sbb    edi,DWORD PTR [edi]
  406214:	mov    dl,0xcf
  406216:	jno    0x4061fc
  406218:	mov    ds:0xd778cc71,al
  40621d:	mov    BYTE PTR [edx+0x5e],cl
  406220:	mov    eax,DWORD PTR [edx+0x3]
  406223:	sbb    BYTE PTR [edi-0x788ef080],cl
  406229:	jmp    0x65ce7a59
  40622e:	mov    edi,0xb1039c15
  406233:	xor    cl,bh
  406235:	pop    esp
  406236:	mov    ds:0xbdc74564,eax
  40623b:	lock mov cl,0x8c
  40623e:	dec    ebp
  40623f:	cmc    
  406240:	stos   BYTE PTR es:[edi],al
  406241:	cmp    esp,ebx
  406243:	jge    0x40628a
  406245:	xchg   ebp,eax
  406246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406247:	sub    DWORD PTR [ebx+0x9],0x4911135e
  40624e:	ret    
  40624f:	pop    edx
  406250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406251:	jp     0x406283
  406253:	xchg   esp,eax
  406254:	mov    DWORD PTR [edx-0x583ff4e5],esp
  40625a:	jle    0x406268
  40625c:	nop
  40625d:	stos   BYTE PTR es:[edi],al
  40625e:	push   0xf932565f
  406263:	mov    esi,0x7b75f9ac
  406268:	lods   al,BYTE PTR ds:[esi]
  406269:	sbb    BYTE PTR [esp+edx*2-0x23],bl
  40626d:	dec    esi
  40626e:	mul    BYTE PTR [edi+0x6d]
  406271:	lods   al,BYTE PTR ds:[esi]
  406272:	fld    st(7)
  406274:	(bad)  
  406275:	out    0xe6,al
  406277:	fcmovnb st,st(5)
  406279:	adc    ecx,DWORD PTR [ebx-0x644499fa]
  40627f:	adc    eax,0xae19a8e8
  406284:	test   DWORD PTR [ebx],esi
  406286:	mov    eax,0x3f2b5320
  40628b:	ret    0x355d
  40628e:	mov    al,ds:0x5e340a09
  406293:	jb     0x406266
  406295:	jns    0x406302
  406297:	rcl    BYTE PTR [ebx+0x44],cl
  40629a:	enter  0x1e18,0xd4
  40629e:	mov    bh,0x85
  4062a0:	sbb    eax,0xe24505c
  4062a6:	aas    
  4062a7:	test   BYTE PTR [ecx-0x644f88c1],cl
  4062ad:	adc    BYTE PTR [esi+ecx*1-0x37],cl
  4062b1:	or     al,0xc8
  4062b3:	sbb    ebp,esi
  4062b5:	xchg   ebp,eax
  4062b6:	jbe    0x406300
  4062b8:	push   esp
  4062b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062ba:	bound  edx,QWORD PTR [edi+0x74]
  4062bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062be:	test   al,0x8c
  4062c0:	in     al,0x4f
  4062c2:	mov    bl,BYTE PTR [ebp+0x65]
  4062c5:	mov    ecx,0x96496ce8
  4062ca:	lahf   
  4062cb:	mov    DWORD PTR [edi+0x43ffb062],edi
  4062d1:	xor    al,0xca
  4062d3:	pop    ebp
  4062d4:	cmp    al,0x1b
  4062d6:	pop    edx
  4062d7:	aas    
  4062d8:	mov    ds:0x8c3b1315,al
  4062dd:	xchg   ebp,eax
  4062de:	mov    esp,0x89f5bcb9
  4062e3:	inc    ebp
  4062e4:	dec    esp
  4062e5:	fcom   st(1)
  4062e7:	or     ebp,DWORD PTR [ecx+edx*1+0x27]
  4062eb:	aaa    
  4062ec:	xchg   DWORD PTR ds:0x29a0e6cb,ebx
  4062f2:	out    dx,eax
  4062f3:	js     0x406351
  4062f5:	pop    ecx
  4062f6:	(bad)  
  4062f7:	and    DWORD PTR [ebp-0x3f],esi
  4062fa:	arpl   dx,si
  4062fc:	shl    bl,0x72
  4062ff:	inc    ecx
  406300:	sub    al,0x72
  406302:	sbb    ebp,0x14dfc63
  406308:	arpl   WORD PTR [ebx+0x43],sp
  40630b:	jbe    0x406358
  40630d:	addr16 aas 
  40630f:	cmp    BYTE PTR [ebp+0x7a2f34e8],al
  406315:	mov    cl,dl
  406317:	test   BYTE PTR gs:[ebx+0x34],dh
  40631b:	xor    BYTE PTR [ebp-0x49],ah
  40631e:	fnstsw WORD PTR [edi]
  406320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406321:	fld    DWORD PTR [ecx]
  406323:	test   dh,ah
  406325:	(bad)  
  406326:	stc    
  406327:	mov    bh,0x93
  406329:	jp     0x4062c7
  40632b:	dec    ebp
  40632c:	adc    eax,0x916e5730
  406331:	pop    edx
  406332:	pushf  
  406333:	jmp    0x40638f
  406335:	and    BYTE PTR [edi+0x631c5125],ch
  40633b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40633c:	mov    bl,0x89
  40633e:	jbe    0x4062f3
  406340:	cmp    DWORD PTR [ebx+0x74],edx
  406343:	aas    
  406344:	retf   
  406345:	pop    ds
  406346:	iret   
  406347:	cli    
  406348:	fcmove st,st(3)
  40634a:	mov    dl,0xf4
  40634c:	dec    esi
  40634d:	in     al,dx
  40634e:	dec    esi
  40634f:	adc    esp,DWORD PTR ds:0x8f204344
  406355:	imul   esp,DWORD PTR [ecx],0xf9e8b825
  40635b:	xor    edx,DWORD PTR [ebx+edx*8]
  40635e:	mov    ecx,0xdf182bda
  406363:	pop    ebp
  406364:	inc    esp
  406365:	scas   eax,DWORD PTR es:[edi]
  406366:	ret    
  406367:	popf   
  406368:	jmp    0x72531c3f
  40636d:	pushf  
  40636e:	xchg   edi,eax
  40636f:	fisttp QWORD PTR [ebx+0x1f]
  406372:	sbb    esi,ebx
  406374:	les    ebp,FWORD PTR [ebp+0x30cbc831]
  40637a:	xchg   ebx,eax
  40637b:	jle    0x4063f8
  40637d:	push   ds
  40637e:	clc    
  40637f:	fs push edx
  406381:	cmp    BYTE PTR [ebx+0x6a],dl
  406384:	mov    dh,0x1e
  406386:	jmp    0x69:0x546b268e
  40638d:	retf   
  40638e:	pop    ss
  40638f:	cmp    DWORD PTR [ecx-0x3a],0x8ee254db
  406396:	rcl    BYTE PTR [ecx],0xfa
  406399:	hlt    
  40639a:	test   BYTE PTR [edi-0x55],dh
  40639d:	frstor ss:[ebx]
  4063a0:	dec    ebx
  4063a1:	test   al,0x3c
  4063a3:	lds    eax,FWORD PTR [edx]
  4063a5:	pushf  
  4063a6:	(bad)  
  4063a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a8:	ret    
  4063a9:	xchg   edx,eax
  4063aa:	mov    esi,0x52659c3b
  4063af:	cmc    
  4063b0:	cmp    eax,DWORD PTR [esi]
  4063b2:	arpl   WORD PTR [edx-0x6d],ax
  4063b5:	push   ebp
  4063b6:	popa   
  4063b7:	xchg   esp,eax
  4063b8:	pop    ebp
  4063b9:	jmp    0xe746:0x26cf9107
  4063c0:	inc    ebx
  4063c1:	add    BYTE PTR [esi],0xb9
  4063c4:	mov    bl,0x6b
  4063c6:	aad    0xaa
  4063c8:	jnp    0x406403
  4063ca:	sbb    al,0xe3
  4063cc:	fistp  WORD PTR [ebp+0x4a7a912b]
  4063d2:	nop
  4063d3:	mov    bh,0x40
  4063d5:	adc    cl,BYTE PTR [edi+0x4e]
  4063d8:	(bad)  
  4063d9:	adc    ch,BYTE PTR cs:[ebx+0xe5b72fe]
  4063e0:	fadd   st(2),st
  4063e2:	and    eax,0x380628c8
  4063e7:	fs enter 0x108,0x5f
  4063ec:	inc    ebp
  4063ed:	imul   eax,DWORD PTR [esi+0x101580e7],0x26
  4063f4:	push   ds
  4063f5:	fdiv   st,st(5)
  4063f7:	or     cl,BYTE PTR [edi+0x7f4244d7]
  4063fd:	jns    0x406427
  4063ff:	and    ah,BYTE PTR [ecx-0x44]
  406402:	cdq    
  406403:	mov    ebp,DWORD PTR [esi-0x1f630b8a]
  406409:	push   ebx
  40640a:	fld    TBYTE PTR [eax]
  40640c:	(bad)  
  40640d:	daa    
  40640e:	(bad)  
  406410:	jl     0x406415
  406412:	int3   
  406413:	dec    esp
  406414:	jmp    0x983f:0x76c7afb3
  40641b:	dec    ecx
  40641c:	push   ss
  40641d:	retf   
  40641e:	ret    0xfc3a
  406421:	test   BYTE PTR [ebx-0x34],cl
  406424:	pop    ecx
  406425:	int    0xb6
  406427:	push   ebx
  406428:	mov    bl,0x45
  40642a:	sahf   
  40642b:	imul   eax
  40642d:	fwait
  40642e:	and    BYTE PTR [esi+0x623dd20f],bl
  406434:	in     al,dx
  406435:	xlat   BYTE PTR ds:[ebx]
  406436:	sub    dl,BYTE PTR [edx+0x519ad4d5]
  40643c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40643d:	scas   eax,DWORD PTR es:[edi]
  40643e:	push   eax
  40643f:	mov    ds:0x91d9a2c1,al
  406444:	fistp  WORD PTR [eax-0x20610e56]
  40644a:	dec    ecx
  40644b:	outs   dx,BYTE PTR ds:[esi]
  40644c:	mov    edx,edi
  40644e:	inc    ecx
  40644f:	bound  ebx,QWORD PTR [edi-0x35]
  406452:	mov    edx,0x4a2dde97
  406457:	stos   BYTE PTR es:[edi],al
  406458:	ins    DWORD PTR es:[edi],dx
  406459:	cmc    
  40645a:	inc    esp
  40645b:	pop    ebp
  40645c:	mov    dl,0x8e
  40645e:	test   BYTE PTR [ecx-0x30],0x6b
  406462:	dec    edi
  406463:	xchg   ebp,eax
  406464:	sub    al,0x79
  406466:	stos   DWORD PTR es:[edi],eax
  406467:	int    0x4f
  406469:	inc    ebx
  40646a:	ret    
  40646b:	sbb    dh,ah
  40646d:	add    DWORD PTR [ecx+0x4f],esi
  406470:	cmp    BYTE PTR [esi],bl
  406472:	mov    bl,0xd5
  406474:	fwait
  406475:	jne    0x406467
  406477:	sbb    ah,BYTE PTR [ecx+0x5f]
  40647a:	ins    BYTE PTR es:[edi],dx
  40647b:	jno    0x40646d
  40647d:	push   esp
  40647e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40647f:	mov    ebx,esp
  406481:	or     DWORD PTR [ebx+0x31778b7c],0x400f7a5
  40648b:	push   esp
  40648c:	sub    BYTE PTR [esi+0x2c860876],ch
  406492:	inc    edx
  406493:	mov    bl,cl
  406495:	ds int3 
  406497:	or     cl,BYTE PTR [ebp+0x31]
  40649a:	inc    ebp
  40649b:	mov    edx,DWORD PTR [eax]
  40649d:	add    ah,0x16
  4064a0:	lock mov ss,WORD PTR [ecx+0x364a8e01]
  4064a7:	mov    cl,0x29
  4064a9:	dec    edx
  4064aa:	mov    eax,ds:0x53c6b0a7
  4064af:	or     DWORD PTR [ebx+0x32],0xc
  4064b3:	ss cmp al,0x96
  4064b6:	fcomp  QWORD PTR [eax+0x40]
  4064b9:	test   eax,0xb21a5351
  4064be:	adc    al,0x71
  4064c0:	test   eax,0xb122d62
  4064c5:	lahf   
  4064c6:	scas   al,BYTE PTR es:[edi]
  4064c7:	push   edi
  4064c8:	inc    edx
  4064c9:	mov    es,WORD PTR [ebx+0x1212ab23]
  4064cf:	inc    edx
  4064d0:	mov    ds:0xda93c0d2,al
  4064d5:	out    dx,eax
  4064d6:	rol    BYTE PTR [ecx],1
  4064d8:	xchg   ebx,eax
  4064d9:	sbb    bh,BYTE PTR [ebp-0x5a]
  4064dc:	ret    0xe73f
  4064df:	pushf  
  4064e0:	mov    ch,0x5c
  4064e2:	retf   0xa335
  4064e5:	fstp   TBYTE PTR ds:0xa3f1a4a2
  4064eb:	adc    DWORD PTR [edx+0x1fd59db5],ebx
  4064f1:	xchg   esi,edx
  4064f3:	cmp    eax,0x731ad1ff
  4064f8:	mov    ebp,0x3da2d2d3
  4064fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064fe:	out    dx,al
  4064ff:	test   eax,0x1e036785
  406504:	fwait
  406505:	push   ss
  406506:	xchg   BYTE PTR [edi+0x3a],cl
  406509:	sar    DWORD PTR [edx+0x3035453f],1
  40650f:	lea    eax,[eax-0x64a5e7ab]
  406515:	or     eax,0xdf50b544
  40651a:	fs inc esi
  40651c:	push   ds
  40651d:	inc    ebp
  40651e:	ret    0xbea9
  406521:	test   eax,0xa5908259
  406526:	xchg   BYTE PTR [ebp+0x549a93f5],dl
  40652c:	mov    bl,0x92
  40652e:	xchg   ebx,eax
  40652f:	enter  0x3d9d,0x63
  406533:	test   eax,0x1fa461a
  406538:	icebp  
  406539:	sub    al,al
  40653b:	jns    0x406516
  40653d:	(bad)  
  40653e:	outs   dx,DWORD PTR ds:[esi]
  40653f:	adc    ebx,edx
  406541:	mov    al,ds:0xe21fe7ec
  406546:	fcom   QWORD PTR [esi+0x7a]
  406549:	cmc    
  40654a:	cli    
  40654b:	jl     0x4064d4
  40654d:	mov    al,0x38
  40654f:	arpl   WORD PTR [edi-0x1d],cx
  406552:	mov    WORD PTR [esi],?
  406554:	ror    BYTE PTR [edi],1
  406556:	sbb    al,0x78
  406558:	dec    esp
  406559:	jmp    0x96bf:0xc793cb3b
  406560:	xor    BYTE PTR [edi],bh
  406562:	sbb    edi,edx
  406564:	popf   
  406565:	(bad)  [edi+ebp*4+0x743fdb3c]
  40656c:	mov    bl,0x43
  40656e:	push   ss
  40656f:	call   0xfb09ff9a
  406574:	fs mov eax,0xead8eef7
  40657a:	push   cs
  40657b:	pop    ebx
  40657c:	(bad)  
  40657e:	fistp  WORD PTR [ecx+0x21]
  406581:	aas    
  406582:	lods   eax,DWORD PTR ds:[esi]
  406583:	jmp    0x4065f8
  406585:	xchg   ebp,eax
  406586:	sbb    BYTE PTR [ebx],dh
  406588:	mov    edx,0x59af5240
  40658d:	adc    eax,0x8c2bae8b
  406592:	mov    ds:0x1ae05ef,al
  406597:	mov    dl,0x70
  406599:	pushf  
  40659a:	mov    esi,0x7b22481c
  40659f:	lahf   
  4065a0:	daa    
  4065a1:	inc    ebx
  4065a2:	jl     0x406530
  4065a4:	fld    DWORD PTR [edi+0x4]
  4065a7:	xchg   BYTE PTR [ebx*2-0x16f9d2ff],dh
  4065ae:	and    al,0xc8
  4065b0:	sub    BYTE PTR [esi-0x6],cl
  4065b3:	sub    BYTE PTR [esi-0x28],0x74
  4065b7:	gs (bad) 
  4065b9:	shr    DWORD PTR [eax-0x60ae0436],1
  4065bf:	inc    edx
  4065c0:	retf   0x2b7a
  4065c3:	cli    
  4065c4:	(bad)  
  4065c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065c6:	push   ebp
  4065c7:	and    BYTE PTR [eax],ch
  4065c9:	das    
  4065ca:	sbb    eax,0xbcd8d282
  4065cf:	jmp    0x40659f
  4065d1:	mov    bh,0xf0
  4065d3:	aam    0xf4
  4065d5:	ins    BYTE PTR es:[edi],dx
  4065d6:	ficomp WORD PTR [edx+0x75]
  4065d9:	mul    DWORD PTR [ebp*1-0x48ffcd12]
  4065e0:	(bad)  [ebp+eiz*4-0x4877e58c]
  4065e7:	loope  0x406656
  4065e9:	jecxz  0x406654
  4065eb:	jl     0x40660b
  4065ed:	pop    es
  4065ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065ef:	mov    dh,0x21
  4065f1:	jnp    0x406587
  4065f3:	aaa    
  4065f4:	xchg   ebx,eax
  4065f5:	push   0xffffffcd
  4065f7:	mov    BYTE PTR [ebp+0x2b],al
  4065fa:	xchg   esp,eax
  4065fb:	mov    bl,0xa9
  4065fd:	push   esp
  4065fe:	inc    ebx
  4065ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406600:	cdq    
  406601:	fisubr WORD PTR [edx+0x416e24dc]
  406607:	or     al,0xd2
  406609:	sub    esp,ebx
  40660b:	cmp    BYTE PTR [ecx+0x37],dh
  40660e:	and    eax,0xfa8dfcbd
  406613:	shl    BYTE PTR [eax+0x6e5a6aab],0x41
  40661a:	(bad)  
  40661c:	and    DWORD PTR [eax-0x5b],esp
  40661f:	in     eax,0x88
  406621:	mov    edx,0x7927f54
  406626:	xor    eax,0x7dd8efde
  40662b:	mov    ebp,0x512a7ff4
  406630:	push   ebp
  406631:	sahf   
  406632:	outs   dx,BYTE PTR ds:[esi]
  406633:	inc    ebp
  406634:	call   0x73fe:0xc897484b
  40663b:	icebp  
  40663c:	fucompp 
  40663e:	(bad)  
  40663f:	cmp    eax,0x8e2dfa10
  406644:	jmp    0x75e9eb38
  406649:	push   ds
  40664a:	ret    
  40664b:	sub    edi,edx
  40664d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40664e:	shr    BYTE PTR [esi+ebx*4+0x18],0xe0
  406653:	mov    esi,0x1ae82fd5
  406658:	jb     0x40661b
  40665a:	aaa    
  40665b:	cli    
  40665c:	enter  0x7015,0xdf
  406660:	daa    
  406661:	sbb    ebx,DWORD PTR [ebx-0x506f1e54]
  406667:	lock dec eax
  406669:	les    ebx,FWORD PTR [edx-0x9]
  40666c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40666d:	dec    esp
  40666e:	cmp    BYTE PTR [edx-0x78d8a5e7],dl
  406674:	les    eax,FWORD PTR [eax+0x1b]
  406677:	add    ah,BYTE PTR [edx+0x46]
  40667a:	mov    ds:0xc0489688,al
  40667f:	rcl    BYTE PTR [ebp+0x3316efed],0x36
  406686:	or     al,0xad
  406688:	xor    eax,0x1ebab6e7
  40668d:	and    al,0xe2
  40668f:	and    al,0x36
  406691:	cmp    ah,BYTE PTR fs:[ebx-0x7d]
  406695:	pop    ds
  406696:	leave  
  406697:	xchg   ebx,eax
  406698:	loope  0x406659
  40669a:	mov    esi,0x9c6a104d
  40669f:	pop    esp
  4066a0:	mov    dh,0x57
  4066a2:	cmp    BYTE PTR [edx-0x2b0f03],ah
  4066a8:	or     BYTE PTR [ebp-0x18],dh
  4066ab:	mov    bh,0xd3
  4066ad:	sti    
  4066ae:	repz repz cwde 
  4066b1:	mov    ds:0x731e6214,eax
  4066b6:	mov    edx,0xdcd2b65b
  4066bb:	adc    eax,0x1aa08d3
  4066c0:	push   es
  4066c1:	shr    DWORD PTR ds:0xb96fabac,0xe9
  4066c8:	mov    esp,0xa2565590
  4066cd:	mov    al,0x8d
  4066cf:	and    eax,0xd8f498cc
  4066d4:	mov    al,0x36
  4066d6:	imul   ebp,DWORD PTR [eax-0x6],0x73b1eae0
  4066dd:	jb     0x406699
  4066df:	and    al,BYTE PTR [edx]
  4066e1:	sbb    ah,BYTE PTR [eax-0x4d]
  4066e4:	dec    esp
  4066e5:	loopne 0x4066ea
  4066e7:	dec    esi
  4066e8:	push   ss
  4066e9:	(bad)  
  4066ea:	jns    0x40671f
  4066ec:	or     ebx,ebp
  4066ee:	jae    0x406688
  4066f0:	pop    ds
  4066f1:	cmp    al,0x24
  4066f3:	dec    esi
  4066f4:	out    dx,eax
  4066f5:	pop    es
  4066f6:	fcom   DWORD PTR [eax+eiz*8+0x72]
  4066fa:	das    
  4066fb:	cmp    eax,0x93e57c69
  406700:	fisubr DWORD PTR [edx-0x71]
  406703:	add    edx,eax
  406705:	clc    
  406706:	sbb    eax,0x4d8429ae
  40670b:	inc    edx
  40670c:	bound  esi,QWORD PTR [edi+0x75]
  40670f:	nop
  406710:	add    ch,BYTE PTR [esi]
  406712:	xor    eax,0xdfb7a498
  406717:	retf   0xae17
  40671a:	cld    
  40671b:	adc    eax,0x8d95271f
  406720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406721:	dec    BYTE PTR [edi+0x640eb327]
  406727:	xchg   esi,eax
  406728:	cmp    edi,DWORD PTR [edi-0x21]
  40672b:	shl    BYTE PTR [ecx-0x15],cl
  40672e:	imul   ecx,DWORD PTR [edi+0xd59115f],0x1eb103d5
  406738:	inc    ebx
  406739:	or     al,0xa9
  40673b:	add    eax,DWORD PTR [esi]
  40673d:	push   es
  40673e:	lods   eax,DWORD PTR ds:[esi]
  40673f:	sbb    edx,DWORD PTR [ebx]
  406741:	cld    
  406742:	xor    eax,0x72a90acc
  406747:	jns    0x4067c2
  406749:	dec    esi
  40674a:	mov    ch,0xe2
  40674c:	addr16 cli 
  40674e:	jmp    0x89cffe5
  406753:	dec    edx
  406754:	sub    DWORD PTR [ecx-0x4ba3c315],edx
  40675a:	xchg   ecx,eax
  40675b:	cmp    DWORD PTR [esi],esi
  40675d:	adc    ebp,DWORD PTR [ecx+0x7a]
  406760:	xchg   edi,eax
  406761:	fisttp DWORD PTR [edx+0x57d61553]
  406767:	fst    DWORD PTR [esp+esi*1+0x3f7fe41]
  40676e:	ja     0x4067bc
  406770:	adc    ah,BYTE PTR [eax+0x5f8b4add]
  406776:	add    ch,0xbc
  406779:	iret   
  40677a:	shr    DWORD PTR [ebp-0x4907b9e2],1
  406780:	fucomp st(2)
  406782:	retf   
  406783:	adc    BYTE PTR [ebp*4-0x6960c579],ch
  40678a:	xlat   BYTE PTR ds:[ebx]
  40678b:	xchg   ebp,eax
  40678c:	(bad)  [esi-0x6af02666]
  406792:	dec    ebx
  406793:	push   cs
  406794:	mov    ds:0x4dcb8fb0,eax
  406799:	mov    ds:0x9a2d069d,al
  40679e:	dec    eax
  40679f:	out    0x9b,al
  4067a1:	aam    0x4e
  4067a3:	adc    BYTE PTR [ebx+esi*4],dl
  4067a6:	jmp    0x4f5d:0x29224ded
  4067ad:	shl    DWORD PTR [ebx],0x76
  4067b0:	inc    ecx
  4067b1:	cdq    
  4067b2:	cmp    edi,DWORD PTR [edx+0xc187641]
  4067b8:	adc    BYTE PTR [edx-0xe33294a],ah
  4067be:	jl     0x4067ab
  4067c0:	add    BYTE PTR [edi-0x63],0x15
  4067c4:	ss fwait
  4067c6:	push   0xffffffbb
  4067c8:	cs out 0x21,eax
  4067cb:	pop    edi
  4067cc:	shl    ebp,1
  4067ce:	sub    al,0x9e
  4067d0:	cmp    ebp,0x7206aa52
  4067d6:	cmp    al,0xfd
  4067d8:	pushf  
  4067d9:	mov    esi,0xd3bf062d
  4067de:	loopne 0x4067e8
  4067e0:	push   eax
  4067e1:	jbe    0x406858
  4067e3:	fdiv   DWORD PTR [eax+0x66]
  4067e6:	sbb    eax,0x3993a185
  4067eb:	das    
  4067ec:	idiv   DWORD PTR [ebx]
  4067ee:	bound  ebx,QWORD PTR [ecx+0x56666bbc]
  4067f4:	and    al,0xb8
  4067f6:	xchg   esp,eax
  4067f7:	aam    0xfe
  4067f9:	sub    BYTE PTR [ebp+0x11],0x8f
  4067fd:	pusha  
  4067fe:	hlt    
  4067ff:	ret    
  406800:	push   0xffffff96
  406802:	mov    al,ds:0xbac30274
  406807:	push   eax
  406808:	inc    edi
  406809:	sbb    eax,0xfd8a4fb7
  40680e:	or     DWORD PTR [esi-0x5eb6bcba],edx
  406814:	fcom   QWORD PTR [ebp-0x9]
  406817:	es int3 
  406819:	xchg   bl,bl
  40681b:	cwde   
  40681c:	rcr    BYTE PTR [ecx],0xee
  40681f:	shr    ah,cl
  406821:	and    eax,0xe56e598d
  406826:	bound  eax,QWORD PTR [ebx-0x6af87f2e]
  40682c:	pop    eax
  40682d:	sub    bl,BYTE PTR [esi-0x65]
  406830:	sbb    BYTE PTR [esi+0x5a],dl
  406833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406834:	push   ss
  406835:	sbb    BYTE PTR [ebx],dl
  406837:	fstp   QWORD PTR [ebp-0x57]
  40683a:	lea    edi,[eax+0x3e5f801f]
  406840:	fcmovne st,st(3)
  406842:	and    BYTE PTR [esi],bh
  406844:	mov    eax,0x77455f18
  406849:	repnz sub al,0xc0
  40684c:	push   esi
  40684d:	xchg   esi,eax
  40684e:	xor    al,0xcb
  406850:	or     ch,0x46
  406853:	inc    BYTE PTR [ebx+edx*8-0x7b]
  406857:	dec    ebp
  406858:	pop    eax
  406859:	sbb    eax,0xca5523d
  40685e:	stos   BYTE PTR es:[edi],al
  40685f:	addr16 loopne 0x4068be
  406862:	xchg   edi,eax
  406863:	lock aaa 
  406865:	jae    0x406879
  406867:	add    DWORD PTR [edx],ecx
  406869:	xor    eax,0x37b21a2c
  40686e:	shr    edi,cl
  406870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406871:	mov    ds:0xfc1d4617,al
  406876:	into   
  406877:	repz cmp DWORD PTR [eax-0x58554f5],esp
  40687e:	js     0x4068f1
  406880:	xor    DWORD PTR [edx+edx*4-0x4ef41225],esp
  406887:	call   0xebea54a5
  40688c:	and    BYTE PTR [ebx-0x173f0a85],bh
  406892:	ret    
  406893:	aam    0x89
  406895:	in     eax,0x27
  406897:	mov    esi,0x9cc647f6
  40689c:	pusha  
  40689d:	xor    esp,ebx
  40689f:	dec    esi
  4068a0:	std    
  4068a1:	aam    0x4b
  4068a3:	jp     0x406910
  4068a5:	(bad)  
  4068a6:	mov    dl,0x62
  4068a8:	jmp    0x440d81f1
  4068ad:	into   
  4068ae:	mov    al,ds:0xefdf3a86
  4068b3:	rol    DWORD PTR [ecx],cl
  4068b5:	mov    bh,0x6f
  4068b7:	mov    ah,0x1a
  4068b9:	ja     0x40687f
  4068bb:	add    al,0x7a
  4068bd:	cs stos DWORD PTR es:[edi],eax
  4068bf:	or     edx,ebp
  4068c1:	repz push edx
  4068c3:	jecxz  0x406901
  4068c5:	push   ds
  4068c6:	call   0x731b936f
  4068cb:	loope  0x406892
  4068cd:	sub    esi,DWORD PTR [ecx+0x31]
  4068d0:	ficomp DWORD PTR [edi]
  4068d2:	or     esi,DWORD PTR [ebx+0x13]
  4068d5:	aad    0x9c
  4068d7:	ret    0x4046
  4068da:	call   0xb0a6:0xdf5142af
  4068e1:	aam    0x15
  4068e3:	ret    
  4068e4:	sbb    BYTE PTR [ecx+0x3b],bl
  4068e7:	div    BYTE PTR [edi]
  4068e9:	cmp    esi,DWORD PTR [ebp-0x16561f0b]
  4068ef:	mov    bh,0xe7
  4068f1:	aad    0xc8
  4068f3:	leave  
  4068f4:	push   ss
  4068f5:	xor    eax,ecx
  4068f7:	jbe    0x406892
  4068f9:	xchg   edi,eax
  4068fa:	adc    eax,0xfca5c82b
  4068ff:	call   DWORD PTR [edi+0x491ed1c4]
  406905:	vdivss xmm6,xmm5,DWORD PTR [ebp+ebx*1-0x53e8d047]
  40690e:	push   cs
  40690f:	mov    edx,0x603577e7
  406914:	mov    esi,0xc5fee84b
  406919:	outs   dx,DWORD PTR ds:[esi]
  40691a:	add    dl,bl
  40691c:	inc    ecx
  40691d:	or     al,ch
  40691f:	ret    
  406920:	adc    eax,0xf618d053
  406925:	out    dx,al
  406926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406927:	fsubr  DWORD PTR [edi-0x80]
  40692a:	mov    DWORD PTR [ecx+0x25fc5976],esp
  406930:	leave  
  406931:	mov    ecx,0x48e2f465
  406936:	jge    0x406942
  406938:	cmp    BYTE PTR [edi-0x26504e3f],dh
  40693e:	sub    BYTE PTR [eax-0x2da820c8],0x2f
  406945:	pop    eax
  406946:	dec    edi
  406947:	inc    esi
  406948:	pop    ebx
  406949:	jp     0x406976
  40694b:	nop
  40694c:	pusha  
  40694d:	or     edi,ecx
  40694f:	hlt    
  406950:	fadd   DWORD PTR [ebx]
  406952:	adc    al,0xbe
  406954:	xor    ecx,DWORD PTR [ecx-0x44]
  406957:	loop   0x4068f8
  406959:	xor    ah,BYTE PTR [edx+eiz*2]
  40695c:	jae    0x40695d
  40695e:	push   es
  40695f:	mov    edi,0xe611a374
  406964:	aam    0xe1
  406966:	push   ecx
  406967:	cld    
  406968:	fwait
  406969:	aas    
  40696a:	sti    
  40696b:	cmp    BYTE PTR [ebx-0xc4bcae5],0xe8
  406972:	jmp    FWORD PTR [ebp+0x5128a0f5]
  406978:	mov    esi,0xf942e20e
  40697d:	mov    eax,DWORD PTR [ecx]
  40697f:	clc    
  406980:	or     ch,BYTE PTR [edi-0x9]
  406983:	mov    bl,BYTE PTR [esi]
  406985:	sub    BYTE PTR ds:0x63c0334e,cl
  40698b:	pop    edi
  40698c:	outs   dx,BYTE PTR ds:[esi]
  40698d:	outs   dx,DWORD PTR ds:[esi]
  40698e:	inc    edi
  40698f:	cmp    ebp,eax
  406991:	or     dh,BYTE PTR [edx-0x7d60cd6]
  406997:	inc    ecx
  406998:	xchg   ebx,eax
  406999:	(bad)  
  40699a:	in     al,0x80
  40699c:	jbe    0x4069b5
  40699e:	outs   dx,BYTE PTR ds:[esi]
  40699f:	or     al,BYTE PTR [edx]
  4069a1:	out    0xd,al
  4069a3:	xchg   edi,eax
  4069a4:	bound  edi,QWORD PTR [esi]
  4069a6:	popa   
  4069a7:	mov    ah,0xc9
  4069a9:	sub    bh,ah
  4069ab:	mov    edi,0xdd4f2f50
  4069b0:	sub    DWORD PTR [ebx+0x4c],edi
  4069b3:	pop    eax
  4069b4:	cdq    
  4069b5:	js     0x406939
  4069b7:	dec    eax
  4069b8:	add    ebp,DWORD PTR [edx+0x1c]
  4069bb:	or     eax,0x3d0c5d0f
  4069c0:	rol    DWORD PTR [eax-0x1fec4029],0xfc
  4069c7:	inc    edi
  4069c8:	adc    DWORD PTR [esi],esp
  4069ca:	jle    0x406a0d
  4069cc:	and    bl,bl
  4069ce:	mov    ds:0xf3d2fd99,eax
  4069d3:	ret    
  4069d4:	mov    ecx,0xea07b19e
  4069d9:	fwait
  4069da:	xchg   ecx,eax
  4069db:	stos   DWORD PTR es:[edi],eax
  4069dc:	mov    dh,0x7d
  4069de:	cdq    
  4069df:	(bad)  
  4069e0:	push   ebx
  4069e1:	and    al,0x78
  4069e3:	imul   ebp,DWORD PTR [esi-0x71],0xffffffda
  4069e7:	loopne 0x406a4a
  4069e9:	jo     0x406a5a
  4069eb:	push   eax
  4069ec:	push   ebx
  4069ed:	cwde   
  4069ee:	xchg   edx,eax
  4069ef:	jo     0x406a28
  4069f1:	mov    bl,0x3f
  4069f3:	ds in  al,0x5a
  4069f6:	sub    DWORD PTR [eax-0x7d],ebx
  4069f9:	inc    edx
  4069fa:	pop    ebp
  4069fb:	pop    ds
  4069fc:	iret   
  4069fd:	push   ds
  4069fe:	fdivr  st,st(5)
  406a00:	lahf   
  406a01:	popa   
  406a02:	out    0x6f,al
  406a04:	das    
  406a05:	in     eax,dx
  406a06:	fstp   TBYTE PTR [esi+0x5adba5fc]
  406a0c:	push   cs
  406a0d:	mov    ds:0xfb8192e5,al
  406a12:	adc    bl,BYTE PTR [ecx]
  406a14:	adc    eax,0xb54e7ac5
  406a19:	or     al,0x4d
  406a1b:	les    ebp,FWORD PTR [eax]
  406a1d:	or     DWORD PTR [esi],ecx
  406a1f:	dec    ecx
  406a20:	adc    dl,BYTE PTR [edi-0x2e]
  406a23:	dec    esi
  406a24:	cli    
  406a25:	inc    edx
  406a26:	int3   
  406a27:	add    eax,0xe503d3bd
  406a2c:	add    eax,0xac9b682
  406a31:	pop    ebx
  406a32:	test   DWORD PTR [edx],0xd6e11b1
  406a38:	add    edx,DWORD PTR [eax]
  406a3a:	ja     0x406a3e
  406a3c:	xor    cl,BYTE PTR [esi+ebp*2]
  406a3f:	xchg   ebp,eax
  406a40:	ins    DWORD PTR es:[edi],dx
  406a41:	inc    ecx
  406a42:	retf   0xbca
  406a45:	loope  0x406a4c
  406a47:	imul   ebp,DWORD PTR [ecx-0x33d11250],0x62406faf
  406a51:	adc    bl,BYTE PTR [eax+edx*8-0x90fd0e2]
  406a58:	cmp    esp,DWORD PTR [ebx+ebx*4-0x64]
  406a5c:	pop    ecx
  406a5d:	sbb    esi,edx
  406a5f:	cwde   
  406a60:	inc    eax
  406a61:	pop    ecx
  406a62:	add    al,0x75
  406a64:	mov    eax,0xe1367588
  406a69:	in     eax,dx
  406a6a:	mov    ds:0x9f15e2cc,al
  406a6f:	mov    ebx,0xd89f78b
  406a74:	jo     0x406a08
  406a76:	outs   dx,DWORD PTR ds:[esi]
  406a77:	mov    esp,0xe51da7ae
  406a7c:	pop    edx
  406a7d:	push   esi
  406a7e:	jmp    DWORD PTR [esi+eax*4+0x2ade5a85]
  406a85:	push   ebp
  406a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a87:	dec    edi
  406a88:	add    eax,0x19cf3a
  406a8d:	add    eax,0x6475b8a0
  406a92:	add    al,0xe1
  406a94:	jl     0x406a46
  406a96:	fwait
  406a97:	lahf   
  406a98:	push   0xa2201550
  406a9d:	pop    edi
  406a9e:	lods   al,BYTE PTR ds:[esi]
  406a9f:	in     eax,dx
  406aa0:	add    eax,0x24d54119
  406aa5:	aas    
  406aa6:	jns    0x406a9c
  406aa8:	adc    al,0x4c
  406aaa:	(bad)  [ebp+0xf6b42d]
  406ab0:	dec    ebp
  406ab1:	bound  edx,QWORD PTR [edi-0x1]
  406ab4:	xchg   esi,eax
  406ab5:	bound  ebp,QWORD PTR ds:0x69586685
  406abb:	xchg   edi,eax
  406abc:	jl     0x406b20
  406abe:	loop   0x406a44
  406ac0:	outs   dx,BYTE PTR ds:[esi]
  406ac1:	int    0xb2
  406ac3:	cs jno 0x406a6c
  406ac6:	sub    BYTE PTR [esi],bl
  406ac8:	xchg   edi,eax
  406ac9:	dec    esi
  406aca:	inc    edx
  406acb:	int    0x1b
  406acd:	stos   BYTE PTR es:[edi],al
  406ace:	popa   
  406acf:	add    al,0x67
  406ad1:	mov    bl,0x9e
  406ad3:	cld    
  406ad4:	(bad)  
  406ad5:	and    bl,bl
  406ad7:	xor    bl,ah
  406ad9:	lods   al,BYTE PTR ds:[esi]
  406ada:	cs jno 0x406aeb
  406add:	jmp    0xb75:0xb9ae9044
  406ae4:	push   esi
  406ae5:	jno    0x406a92
  406ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae9:	enter  0x73ed,0x8a
  406aed:	jg     0x406a79
  406aef:	das    
  406af0:	inc    esp
  406af1:	pop    edi
  406af2:	ins    DWORD PTR es:[edi],dx
  406af3:	add    al,0xbb
  406af5:	into   
  406af6:	stos   DWORD PTR es:[edi],eax
  406af7:	mov    esp,0xfdc7a7e9
  406afc:	jnp    0x406aa7
  406afe:	scas   al,BYTE PTR es:[edi]
  406aff:	rcr    BYTE PTR [eax],cl
  406b01:	xchg   edi,esi
  406b03:	arpl   WORD PTR [edx+0x58],di
  406b06:	cmp    eax,0xae840b1c
  406b0b:	fsubp  st(0),st
  406b0d:	test   DWORD PTR [edx],0x5a7d920b
  406b13:	push   edx
  406b14:	jb     0x406b4d
  406b16:	push   edi
  406b17:	push   esp
  406b18:	and    eax,0xe6c6f41b
  406b1d:	xor    ah,bl
  406b1f:	fs dec edx
  406b21:	cmp    BYTE PTR [edi],bl
  406b23:	or     eax,0xc1846baf
  406b28:	loop   0x406b7f
  406b2a:	inc    ecx
  406b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b2c:	es scas eax,DWORD PTR es:[edi]
  406b2e:	adc    al,0xd
  406b30:	inc    DWORD PTR [eax+0x162544f9]
  406b36:	mov    dl,0x4c
  406b38:	xchg   ebp,eax
  406b39:	sub    eax,0x84ca247c
  406b3e:	xor    DWORD PTR [edx-0x24],edx
  406b41:	lods   eax,DWORD PTR ds:[esi]
  406b42:	int    0xfb
  406b44:	jmp    0x3ffbe320
  406b49:	ins    BYTE PTR es:[edi],dx
  406b4a:	mov    eax,0xb887190c
  406b4f:	inc    edx
  406b50:	sub    ch,BYTE PTR [edx+0x385edc68]
  406b56:	add    DWORD PTR [edi+0x5c],ebp
  406b59:	pop    ds
  406b5a:	xor    eax,0x209e6809
  406b5f:	and    al,0xc3
  406b61:	pushf  
  406b62:	iret   
  406b63:	loope  0x406b0b
  406b65:	jg     0x406b0c
  406b67:	and    bl,bh
  406b69:	aas    
  406b6a:	imul   eax,DWORD PTR [esi+0x5a],0x22
  406b6e:	ja     0x406b3f
  406b70:	in     eax,dx
  406b71:	ret    0x90f9
  406b74:	dec    eax
  406b75:	jge    0x406b49
  406b77:	add    eax,0xddd19126
  406b7c:	shl    DWORD PTR [edx-0x18],1
  406b7f:	adc    cl,BYTE PTR [eax]
  406b81:	hlt    
  406b82:	test   BYTE PTR [ebp+0x292de1d8],dl
  406b88:	mov    eax,0x9a4931d3
  406b8d:	xor    DWORD PTR [ecx-0xac51db2],ebx
  406b93:	pop    ss
  406b94:	inc    edx
  406b96:	ja     0x406b34
  406b98:	imul   esi,DWORD PTR [ecx+0x6de31284],0x7f
  406b9f:	call   0x51a2debd
  406ba4:	stc    
  406ba5:	jmp    0x9801d417
  406baa:	mov    bl,0x6f
  406bac:	xor    al,0xc5
  406bae:	cmp    BYTE PTR [ecx+0x3b],0xfc
  406bb2:	(bad)  
  406bb3:	dec    esp
  406bb4:	jmp    0x24b2:0x739b8009
  406bbb:	jmp    0x406b82
  406bbd:	mov    WORD PTR [ecx-0x2],ss
  406bc0:	mul    DWORD PTR [ecx+eax*8-0x43]
  406bc4:	in     eax,dx
  406bc5:	or     al,0x33
  406bc7:	aaa    
  406bc8:	dec    edx
  406bc9:	fild   WORD PTR [edx-0x2488c40d]
  406bcf:	mov    eax,ebp
  406bd1:	hlt    
  406bd2:	sbb    esi,eax
  406bd4:	call   0x65c49dba
  406bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bda:	adc    cl,BYTE PTR [edi+0x28441175]
  406be0:	pop    edx
  406be1:	imul   ebp,edx,0xffffffc3
  406be4:	jbe    0x406c37
  406be6:	jge    0x406c4e
  406be8:	xchg   DWORD PTR [edi-0x3a],edi
  406beb:	mov    ds:0x7dc66965,al
  406bf0:	adc    al,0xd3
  406bf2:	sub    al,0x5b
  406bf4:	test   al,0x6e
  406bf6:	inc    esp
  406bf7:	loop   0x406bb0
  406bf9:	xchg   DWORD PTR [ebx+0x28],esp
  406bfc:	add    al,0x13
  406bfe:	cs push edx
  406c00:	adc    al,BYTE PTR [ecx]
  406c02:	loop   0x406c69
  406c04:	stos   BYTE PTR es:[edi],al
  406c05:	mov    ds:0xa29ae56e,al
  406c0a:	std    
  406c0b:	or     dh,ah
  406c0d:	sahf   
  406c0e:	inc    edi
  406c0f:	out    0x47,eax
  406c11:	adc    dh,cl
  406c13:	sbb    eax,DWORD PTR [esi]
  406c15:	mov    WORD PTR [edi+0x2a],fs
  406c18:	in     eax,dx
  406c19:	cwde   
  406c1a:	adc    al,0x1
  406c1c:	mov    esi,0x8b9ed54b
  406c21:	imul   eax,DWORD PTR [edi],0x38
  406c24:	add    bh,BYTE PTR [eax-0x2b]
  406c27:	mov    edi,0xa888ead7
  406c2c:	cmp    eax,0xb0a5a682
  406c31:	test   dh,dh
  406c33:	xchg   edx,eax
  406c34:	xor    al,0x52
  406c36:	call   0x430cabc9
  406c3b:	ins    BYTE PTR es:[edi],dx
  406c3c:	sub    eax,0x12334a7c
  406c41:	sub    dh,BYTE PTR [ebx+0x3b]
  406c44:	mov    ecx,0x466b0949
  406c49:	(bad)  
  406c4a:	fscale 
  406c4c:	push   0xc4cace3b
  406c51:	sbb    BYTE PTR [ecx],dl
  406c53:	mov    ah,0x3b
  406c55:	not    BYTE PTR [edx]
  406c57:	push   ds
  406c58:	gs adc al,0xb9
  406c5b:	cld    
  406c5c:	gs jl  0x406c0d
  406c5f:	or     DWORD PTR [ebx-0x28a1349e],ebp
  406c65:	xor    al,0xd8
  406c67:	pop    esi
  406c68:	js     0x406cd9
  406c6a:	xor    DWORD PTR [edx+0x42afcc60],ebx
  406c70:	push   ss
  406c71:	xchg   ebp,eax
  406c72:	hlt    
  406c73:	jmp    0x2e07f807
  406c78:	mov    ds:0x95f26848,al
  406c7d:	loop   0x406c32
  406c7f:	fs add bl,ah
  406c82:	ret    0x4336
  406c85:	xor    BYTE PTR [ecx-0x5e],0xa2
  406c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c8a:	mov    edx,0x11243b99
  406c8f:	(bad)  
  406c90:	xor    eax,0x398b9f8d
  406c95:	mov    eax,ds:0x905fe2a
  406c9a:	adc    BYTE PTR [edi+0x32],ah
  406c9d:	mov    ebp,0xcbc7ecf9
  406ca2:	mov    eax,0x11f33848
  406ca7:	andps  xmm0,XMMWORD PTR [edi+eax*2+0x9]
  406cac:	dec    edi
  406cad:	xchg   ebp,eax
  406cae:	adc    eax,0xb0a4c263
  406cb3:	cmp    eax,0x3d839ccb
  406cb8:	pop    ss
  406cb9:	jno    0x406c7f
  406cbb:	mov    dh,0x44
  406cbd:	repz in al,dx
  406cbf:	lea    edi,[edx+0x2532b270]
  406cc5:	sub    eax,DWORD PTR [ebp-0x37]
  406cc8:	(bad)  
  406cc9:	mov    ch,0x7b
  406ccb:	jp     0x406ccb
  406ccd:	mov    BYTE PTR [ecx+0x51c13519],cl
  406cd3:	dec    di
  406cd5:	push   ss
  406cd6:	xchg   esp,eax
  406cd7:	sar    BYTE PTR [esi-0x38],cl
  406cda:	xchg   edi,eax
  406cdb:	mov    cs,WORD PTR [eax]
  406cdd:	sahf   
  406cde:	add    DWORD PTR [esp+ebp*8+0x1b],edi
  406ce2:	nop
  406ce3:	out    0x34,al
  406ce5:	fwait
  406ce6:	xor    edi,DWORD PTR [ebp-0x21]
  406ce9:	cld    
  406cea:	jbe    0x406cb9
  406cec:	sbb    DWORD PTR [eax+0x7506ef63],eax
  406cf2:	(bad)  
  406cf3:	xor    bh,dl
  406cf5:	xchg   ecx,eax
  406cf6:	mov    edi,DWORD PTR ds:0x23d822c
  406cfc:	jle    0x406d41
  406cfe:	int    0xbd
  406d00:	fwait
  406d01:	cmp    BYTE PTR ds:[edi-0x53],al
  406d05:	push   esp
  406d06:	clc    
  406d07:	push   DWORD PTR [eax]
  406d09:	jbe    0x406cdb
  406d0b:	in     al,0x6d
  406d0d:	adc    al,0x81
  406d0f:	fldenv [esi+0x533923f0]
  406d15:	xchg   ebp,eax
  406d16:	mov    ah,0xe6
  406d18:	je     0x406d49
  406d1a:	fstp   DWORD PTR [ebp-0x69]
  406d1d:	pushf  
  406d1e:	pusha  
  406d1f:	mov    ds:0xac928e3a,al
  406d24:	pop    ecx
  406d25:	jns    0x406cf2
  406d27:	imul   edx,DWORD PTR [ebx],0x5c37f52a
  406d2d:	mov    eax,ds:0x6a33322b
  406d32:	and    eax,0x2c161b7d
  406d37:	stc    
  406d38:	(bad)  
  406d39:	sbb    ch,BYTE PTR [ecx+0x32233dd6]
  406d3f:	inc    esi
  406d40:	pushf  
  406d41:	xor    BYTE PTR [ecx-0xb1e3687],al
  406d47:	sub    esi,DWORD PTR [esi-0x108a0421]
  406d4d:	pop    edx
  406d4e:	dec    edi
  406d4f:	pop    ebx
  406d50:	es enter 0xc9b3,0x4d
  406d55:	pop    ds
  406d56:	imul   edi,DWORD PTR [eax-0x38],0xd72e62a1
  406d5d:	pop    ecx
  406d5e:	xchg   dl,dh
  406d60:	sbb    edx,DWORD PTR [edx]
  406d62:	(bad)  
  406d63:	sub    al,0xd5
  406d65:	int3   
  406d66:	adc    dh,0x98
  406d69:	inc    ebp
  406d6a:	xor    eax,0xc2883957
  406d6f:	cs daa 
  406d71:	inc    esp
  406d72:	mov    ds:0xd5adfa21,eax
  406d77:	imul   cl
  406d79:	push   eax
  406d7a:	and    eax,0x88696875
  406d7f:	fdivr  st(5),st
  406d81:	cwde   
  406d82:	outs   dx,BYTE PTR ds:[esi]
  406d83:	xor    BYTE PTR [ebp+esi*8-0x476d62bb],cl
  406d8a:	add    BYTE PTR [ebx+0x1be374e2],0x75
  406d91:	mov    al,0x3b
  406d93:	lock xchg ecx,eax
  406d95:	mov    ebp,0xc561ffc8
  406d9a:	adc    bh,dl
  406d9c:	sbb    bh,ch
  406d9e:	outs   dx,BYTE PTR ds:[esi]
  406d9f:	and    DWORD PTR [ecx],esi
  406da1:	(bad)  
  406da2:	cmp    al,0x17
  406da4:	or     al,0xe6
  406da6:	addr16 jge 0x406dcd
  406da9:	and    BYTE PTR [ebp-0x64],0x26
  406dad:	pop    ecx
  406dae:	js     0x406de2
  406db0:	les    ecx,FWORD PTR [edx]
  406db2:	(bad)  
  406db3:	pop    esp
  406db4:	aad    0x5a
  406db6:	cmp    ch,BYTE PTR [eax-0x6c]
  406db9:	int    0xd0
  406dbb:	test   cl,0x1
  406dbe:	mov    esi,DWORD PTR [ebx-0x62c29451]
  406dc4:	pop    esi
  406dc5:	sub    al,0xc5
  406dc7:	jmp    0x406dd3
  406dc9:	dec    esi
  406dca:	or     BYTE PTR [ebp-0x18026288],dh
  406dd0:	xchg   esp,eax
  406dd1:	pop    ebx
  406dd2:	test   DWORD PTR [eax+0x46],esp
  406dd5:	call   DWORD PTR [ebx+eiz*2]
  406dd8:	jmp    0x406da0
  406dda:	scas   eax,DWORD PTR es:[edi]
  406ddb:	add    cl,cl
  406ddd:	sub    eax,0x190af7b0
  406de2:	stos   BYTE PTR es:[edi],al
  406de3:	aam    0xb0
  406de5:	mov    dl,0x27
  406de7:	fwait
  406de8:	outs   dx,BYTE PTR ds:[esi]
  406de9:	retf   0x91f1
  406dec:	pusha  
  406ded:	push   ebx
  406def:	(bad)  
  406df0:	lds    esi,FWORD PTR [ebx+0x57fee74]
  406df6:	in     al,dx
  406df7:	mov    ds:0x94fef09a,al
  406dfc:	mov    ds:0xcdf57b11,al
  406e01:	mov    esi,0xe1b92ae6
  406e06:	push   edi
  406e07:	sub    BYTE PTR [eax+ebp*2],0xb0
  406e0b:	add    BYTE PTR ds:0x1708ffb,bh
  406e11:	push   ecx
  406e12:	mov    cl,0x20
  406e14:	mul    dh
  406e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e17:	mov    edx,0x3dfe90b3
  406e1c:	jmp    0x67bc:0x396ddd7f
  406e23:	jmp    0x6768:0x9f4a2e22
  406e2a:	and    ch,BYTE PTR [ecx+0x13]
  406e2d:	ins    DWORD PTR es:[edi],dx
  406e2e:	std    
  406e2f:	fist   DWORD PTR [edx-0xf]
  406e32:	aas    
  406e33:	pop    ds
  406e34:	mov    esi,0x8725f56f
  406e39:	mov    dl,0x79
  406e3b:	dec    esi
  406e3c:	and    ecx,edx
  406e3e:	repnz nop
  406e40:	ret    0xc5d5
  406e43:	xor    ch,BYTE PTR [ecx+0x4381762e]
  406e49:	fdivr  DWORD PTR [ebx+0x13cdc3d5]
  406e4f:	mov    al,ds:0x5bce86d2
  406e54:	pop    eax
  406e55:	sbb    al,0x4b
  406e57:	imul   ecx,DWORD PTR [edx+edx*1+0x6e],0xffffff97
  406e5c:	push   esi
  406e5d:	fnstcw WORD PTR [ebp+edx*2-0x42]
  406e61:	sub    cl,BYTE PTR [ecx-0x21387de9]
  406e67:	sbb    al,bl
  406e69:	sahf   
  406e6a:	xchg   ecx,eax
  406e6b:	mov    DWORD PTR [esi+0x79e42f20],ebx
  406e71:	mov    ah,0x2
  406e73:	(bad)  
  406e74:	mov    eax,ds:0x6ef8d836
  406e79:	add    eax,0x4ad29a44
  406e7e:	sub    esi,DWORD PTR [esi+0x707f195d]
  406e84:	inc    esi
  406e85:	lods   al,BYTE PTR ds:[esi]
  406e86:	jmp    0x7cc7b475
  406e8b:	out    dx,al
  406e8c:	xlat   BYTE PTR ds:[ebx]
  406e8d:	inc    esi
  406e8e:	rcr    DWORD PTR [edx],0x43
  406e91:	fist   DWORD PTR [ecx]
  406e93:	and    ecx,DWORD PTR [ebp-0x7a]
  406e96:	lock out 0x7b,eax
  406e99:	(bad)  
  406e9a:	sub    BYTE PTR [eax],al
  406e9c:	xchg   edi,eax
  406e9d:	nop
  406e9e:	pop    ss
  406e9f:	mov    eax,0xfa793abf
  406ea4:	jp     0x406e7b
  406ea6:	test   eax,0xa49c9ad
  406eab:	retf   0x5851
  406eae:	push   ss
  406eaf:	pop    ebp
  406eb0:	pop    eax
  406eb1:	add    esi,DWORD PTR [edx+0x7e]
  406eb4:	imul   ebp,esp,0x1e
  406eb7:	or     esp,DWORD PTR [ebx+0x1e]
  406eba:	inc    esi
  406ebb:	ds sbb eax,0xbc07f6c4
  406ec1:	fld    DWORD PTR [ebp+0x14]
  406ec4:	test   DWORD PTR [ecx+eax*1-0x54],ebx
  406ec8:	enter  0x9462,0x1b
  406ecc:	xor    edi,DWORD PTR [edi+0x1e]
  406ecf:	xchg   ebx,eax
  406ed0:	sahf   
  406ed1:	sub    ah,BYTE PTR es:[esi]
  406ed4:	jns    0x406ee4
  406ed6:	out    dx,al
  406ed7:	dec    edx
  406ed8:	fwait
  406ed9:	mov    ebp,0xb4c4e859
  406ede:	mov    dl,0x60
  406ee0:	xchg   ebp,eax
  406ee1:	in     eax,0xe6
  406ee3:	xor    bl,BYTE PTR [esi+edi*1-0x4b85e198]
  406eea:	push   ebp
  406eeb:	call   0xc19a36d4
  406ef0:	cwde   
  406ef1:	sub    al,0x71
  406ef3:	inc    edx
  406ef4:	ficom  WORD PTR [eax-0x70]
  406ef7:	fisttp WORD PTR ds:0x2711b521
  406efd:	neg    DWORD PTR [eax]
  406eff:	mov    ecx,0xd4161738
  406f04:	xor    eax,DWORD PTR [edx]
  406f06:	sbb    eax,0xcedc011e
  406f0b:	cs (bad) 
  406f0d:	mov    esp,0xd5ee927d
  406f12:	sub    DWORD PTR [edi+0x40],ecx
  406f15:	fnstcw WORD PTR [edi+ecx*2]
  406f18:	sbb    ch,bh
  406f1a:	xchg   edi,eax
  406f1b:	dec    esp
  406f1c:	loope  0x406ee2
  406f1e:	fdivr  DWORD PTR [edi]
  406f20:	imul   eax,DWORD PTR [ebx-0x60],0x17
  406f24:	sbb    eax,0xc0a2ffa1
  406f29:	jnp    0x406f10
  406f2b:	lods   al,BYTE PTR ds:[esi]
  406f2c:	push   esi
  406f2d:	mov    ah,0xbc
  406f2f:	sub    DWORD PTR [eax+ecx*8+0x30],0xab1d7c29
  406f37:	cmp    eax,0x53f2f13e
  406f3c:	into   
  406f3d:	mov    bh,0xdf
  406f3f:	sbb    ebx,DWORD PTR [ebx+0x41f8ec5d]
  406f45:	fadd   QWORD PTR [edx]
  406f47:	inc    esp
  406f48:	and    eax,0x4b89bcda
  406f4d:	jle    0x406f65
  406f4f:	cmovle ecx,DWORD PTR [eax+eax*2]
  406f53:	addr16 (bad) 
  406f55:	jg     0x406f76
  406f57:	loope  0x406f42
  406f59:	xchg   DWORD PTR [edi+eax*4-0x509b3843],ebx
  406f60:	arpl   WORD PTR [edx-0x29],di
  406f63:	fisub  DWORD PTR [edi-0x4b78a4b]
  406f69:	sub    eax,DWORD PTR [edi+0x2]
  406f6c:	mov    ch,0x37
  406f6e:	rcr    DWORD PTR [edi],0x2
  406f71:	es jge 0x4049cadf
  406f78:	cs pop ecx
  406f7a:	xchg   ebp,eax
  406f7b:	push   ss
  406f7c:	test   al,0x43
  406f7e:	icebp  
  406f7f:	and    eax,0xc0adb32b
  406f84:	(bad)
  406f8a:	data16 clc 
  406f8c:	js     0x406f49
  406f8e:	aam    0xcf
  406f90:	add    ebp,eax
  406f92:	xor    eax,0x31a24fcf
  406f97:	push   0xfe45f4fb
  406f9c:	neg    DWORD PTR ds:0x6e2acfd0
  406fa2:	test   eax,0x28856067
  406fa7:	mov    bh,0xc1
  406fa9:	jle    0x406ff8
  406fab:	les    eax,FWORD PTR [edi+0x3]
  406fae:	cmp    al,0xf3
  406fb0:	aad    0x76
  406fb2:	fisttp WORD PTR [edi+0x4fe471f7]
  406fb8:	sbb    BYTE PTR [ebx-0x3d],bl
  406fbb:	shl    BYTE PTR [ebp-0x65],0xe9
  406fbf:	je     0x406f90
  406fc1:	mov    ebp,0xfa47456e
  406fc6:	dec    ebp
  406fc7:	inc    ecx
  406fc8:	pop    es
  406fc9:	loope  0x406fcd
  406fcb:	jmp    0x464f5eef
  406fd0:	ds xchg esp,eax
  406fd2:	aam    0x51
  406fd4:	xchg   esp,eax
  406fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd6:	add    al,0x1
  406fd8:	or     DWORD PTR [edx],ecx
  406fda:	adc    al,0x84
  406fdc:	cmp    BYTE PTR [ebp+0x35630b0a],ah
  406fe2:	ja     0x406ff3
  406fe4:	jns    0x40700d
  406fe6:	ins    BYTE PTR es:[edi],dx
  406fe7:	jbe    0x407057
  406fe9:	mov    cl,0x13
  406feb:	dec    ecx
  406fec:	into   
  406fed:	out    0x3b,al
  406fef:	mov    ?,WORD PTR [esi-0x38828504]
  406ff5:	mov    edx,DWORD PTR [edx+0x107ed4d5]
  406ffb:	lahf   
  406ffc:	xchg   esi,eax
  406ffd:	or     BYTE PTR [edx+edx*4],dl
  407000:	add    al,BYTE PTR [ebx-0x1e01c01d]
  407006:	adc    ebp,ebx
  407008:	leave  
  407009:	std    
  40700a:	push   es
  40700b:	(bad)  
  40700c:	cmp    DWORD PTR [edi],esi
  40700e:	jne    0x406fc3
  407010:	es jmp 0xf103d438
  407016:	outs   dx,DWORD PTR ds:[esi]
  407017:	sahf   
  407018:	inc    eax
  407019:	jbe    0x406fab
  40701b:	adc    ebp,DWORD PTR [ecx]
  40701d:	dec    edx
  40701e:	pop    ecx
  40701f:	or     eax,0x2adbad4d
  407024:	add    bl,BYTE PTR ds:0xbefcbd80
  40702a:	jp     0x407048
  40702c:	mov    bh,0xb
  40702e:	fidiv  DWORD PTR [eax+0x6acb88d9]
  407034:	sbb    dl,0xcd
  407037:	jno    0x40700e
  407039:	mov    esp,0xb37391b9
  40703e:	mov    ebp,0x8a71de88
  407043:	iret   
  407044:	(bad)  
  407045:	das    
  407046:	icebp  
  407047:	inc    esi
  407048:	dec    ecx
  407049:	aaa    
  40704a:	push   cs
  40704b:	jns    0x40709b
  40704d:	aas    
  40704e:	aad    0xc4
  407050:	dec    ebp
  407051:	add    eax,0x53d887b0
  407056:	sbb    cl,BYTE PTR gs:[esi+edi*8]
  40705a:	outs   dx,BYTE PTR ds:[esi]
  40705b:	mov    WORD PTR [eax],fs
  40705d:	add    DWORD PTR [ecx-0x5f],eax
  407060:	sbb    esi,ebx
  407062:	mov    eax,0x18631bb0
  407067:	inc    ebx
  407068:	cmp    dl,BYTE PTR [ebp+0x1b]
  40706b:	cld    
  40706c:	mov    WORD PTR [esi],cs
  40706e:	push   ebx
  40706f:	push   ebx
  407070:	je     0x4070cb
  407072:	sbb    al,0x1b
  407074:	jne    0x4070e4
  407076:	sbb    ah,cl
  407078:	repz adc ecx,DWORD PTR [edx]
  40707b:	and    DWORD PTR [ebp+0x69c849b3],ebx
  407081:	or     eax,0xb430a870
  407086:	push   edx
  407087:	out    dx,al
  407088:	aas    
  407089:	sub    DWORD PTR [ecx-0x113e457b],ecx
  40708f:	jno    0x40710b
  407091:	and    al,0xad
  407093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407094:	and    dh,cl
  407096:	cli    
  407097:	cmp    ecx,edx
  407099:	add    al,0xcc
  40709b:	in     al,dx
  40709c:	outs   dx,DWORD PTR ds:[esi]
  40709d:	stos   DWORD PTR es:[edi],eax
  40709e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40709f:	pop    es
  4070a0:	cmp    ebp,DWORD PTR [eax+eiz*8]
  4070a3:	(bad)  
  4070a5:	(bad)  
  4070a6:	jno    0x40702a
  4070a8:	pop    ss
  4070a9:	ret    
  4070aa:	push   ss
  4070ab:	mov    ds:0x2387836e,al
  4070b0:	daa    
  4070b1:	iret   
  4070b2:	ins    DWORD PTR es:[edi],dx
  4070b3:	jbe    0x407087
  4070b5:	xor    DWORD PTR [eax+0x8],edx
  4070b8:	adc    eax,0x7ba85b81
  4070bd:	push   es
  4070be:	fstp   DWORD PTR [ebx-0x4ab6c52f]
  4070c4:	jl     0x40706b
  4070c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070c7:	dec    ecx
  4070c8:	dec    esi
  4070c9:	loopne 0x4070fd
  4070cb:	ins    BYTE PTR es:[edi],dx
  4070cc:	repnz cli 
  4070ce:	icebp  
  4070cf:	dec    ebx
  4070d0:	test   eax,0x32f2e67e
  4070d6:	push   0x3d
  4070d8:	jbe    0x40714f
  4070da:	rol    BYTE PTR [ecx],1
  4070dc:	out    0x39,eax
  4070de:	adc    BYTE PTR [ecx+0x3a2a70ac],dh
  4070e4:	mov    esi,0xa13c339
  4070e9:	es xor al,0x22
  4070ec:	clc    
  4070ed:	pop    esp
  4070ee:	scas   al,BYTE PTR es:[edi]
  4070ef:	fwait
  4070f0:	rcr    DWORD PTR [edi+0x6bcface8],1
  4070f6:	sbb    al,0x9b
  4070f8:	in     al,dx
  4070f9:	scas   al,BYTE PTR es:[edi]
  4070fa:	adc    DWORD PTR [ebp+0x2d],edx
  4070fd:	fcomp  st(3)
  4070ff:	or     eax,0x67f4ad7d
  407104:	cli    
  407105:	pop    ebx
  407106:	and    DWORD PTR [ebp-0x2c],ebp
  407109:	(bad)  
  40710a:	(bad)  
  40710b:	icebp  
  40710c:	mov    edi,0x3581574
  407111:	lahf   
  407112:	mov    edi,0xe9018e38
  407117:	push   ebp
  407118:	in     eax,dx
  407119:	mov    al,ds:0xa7058bc9
  40711e:	push   ds
  40711f:	xchg   ebx,eax
  407120:	adc    ch,BYTE PTR [eax-0x107fe4e8]
  407126:	ins    BYTE PTR es:[edi],dx
  407127:	mov    bl,0xf3
  407129:	and    eax,0x9bd85fd7
  40712e:	loope  0x40718d
  407130:	out    0x7f,al
  407132:	pop    ecx
  407133:	outs   dx,DWORD PTR ds:[esi]
  407134:	pushf  
  407135:	xlat   BYTE PTR ds:[ebx]
  407136:	add    DWORD PTR [edi],ecx
  407138:	dec    edx
  407139:	sbb    dh,al
  40713b:	fild   QWORD PTR [eax-0x132cc7d4]
  407141:	xor    eax,0xbaa9ea50
  407146:	push   0x949459d6
  40714b:	leave  
  40714c:	stos   BYTE PTR es:[edi],al
  40714d:	mov    edi,0xd77958af
  407152:	mov    al,bl
  407154:	daa    
  407155:	push   ecx
  407156:	mov    ebp,0xea0f46e9
  40715b:	scas   al,BYTE PTR es:[edi]
  40715c:	and    al,0x62
  40715e:	cli    
  40715f:	add    bh,bl
  407161:	push   0xffffffbd
  407163:	inc    esi
  407164:	cwde   
  407165:	fwait
  407166:	pop    edx
  407167:	outs   dx,DWORD PTR ds:[esi]
  407168:	sahf   
  407169:	cmp    DWORD PTR [ebx-0x19],ecx
  40716c:	test   al,0x6b
  40716e:	fwait
  40716f:	jae    0x407174
  407171:	mov    DWORD PTR [edi],ebx
  407173:	enter  0xddf4,0x5c
  407177:	sti    
  407178:	xchg   DWORD PTR [ecx+0x179ca128],esi
  40717e:	sbb    eax,0x66e21c34
  407183:	adc    eax,0x52a75df1
  407188:	lahf   
  407189:	jae    0x4071c8
  40718b:	repz sub eax,0x29a73c0f
  407191:	inc    edx
  407192:	inc    esi
  407193:	mov    esi,0xac8de428
  407198:	iret   
  407199:	int    0x8a
  40719b:	ja     0x40715b
  40719d:	mov    ecx,0x5f877e8c
  4071a2:	mov    ah,BYTE PTR [edi-0x73a857ad]
  4071a8:	(bad)  
  4071a9:	xlat   BYTE PTR ds:[ebx]
  4071aa:	mov    bl,0xd9
  4071ac:	xchg   DWORD PTR [eax],ecx
  4071ae:	push   edx
  4071af:	sub    BYTE PTR [ebx+0x53590371],ch
  4071b5:	pushf  
  4071b6:	pop    es
  4071b7:	dec    ebp
  4071b8:	out    dx,al
  4071b9:	aaa    
  4071ba:	lock in eax,dx
  4071bc:	add    DWORD PTR [edi-0x4ed636db],ebx
  4071c2:	cmc    
  4071c3:	mov    bh,0x65
  4071c5:	(bad)  
  4071c6:	xchg   ecx,eax
  4071c7:	mov    es,WORD PTR [ebx]
  4071c9:	or     BYTE PTR [eax+ebp*4-0x19],bh
  4071cd:	cs pop esi
  4071cf:	aad    0x36
  4071d1:	inc    ebx
  4071d2:	loopne 0x40715d
  4071d4:	es jmp 0xfb21:0x7c7ab12
  4071dc:	outs   dx,DWORD PTR ds:[esi]
  4071dd:	shl    BYTE PTR [esp+edi*2],1
  4071e0:	push   ss
  4071e1:	pop    ds
  4071e2:	cmc    
  4071e3:	sti    
  4071e4:	add    DWORD PTR [edi],0xc1b6ba4d
  4071ea:	pop    ss
  4071eb:	mov    dh,0x81
  4071ed:	out    dx,eax
  4071ee:	ror    BYTE PTR [edi],0xd8
  4071f1:	mov    ecx,0xd0e7f6f3
  4071f6:	or     al,0xa8
  4071f8:	and    dl,BYTE PTR [edx]
  4071fa:	ja     0x4071ed
  4071fc:	xchg   ebx,eax
  4071fd:	or     al,0x36
  4071ff:	jbe    0x407249
  407201:	int    0xae
  407203:	xor    eax,0xc179ba63
  407208:	in     al,0xeb
  40720a:	inc    esi
  40720b:	repnz popa 
  40720d:	adc    eax,0xf2d96f10
  407212:	jle    0x4071d6
  407214:	or     al,BYTE PTR [esi-0x28]
  407217:	jmp    0x7f978023
  40721c:	xchg   ecx,eax
  40721d:	sti    
  40721e:	fldenv [edi+0x3d7cb965]
  407224:	pop    ebx
  407225:	cli    
  407226:	aaa    
  407227:	je     0x4071e4
  407229:	aas    
  40722a:	addr16 mov esp,0x4851e874
  407230:	imul   eax,DWORD PTR [ecx+0x5d],0x42bfa88d
  407237:	xchg   esp,eax
  407238:	(bad)  
  407239:	mov    bh,0x92
  40723b:	xlat   BYTE PTR ds:[ebx]
  40723c:	fmul   DWORD PTR ds:0xd9aaeb32
  407242:	pop    ss
  407243:	mov    esi,ds
  407245:	lods   eax,DWORD PTR ds:[esi]
  407246:	sub    BYTE PTR [ecx+ebp*4],dh
  407249:	mov    ch,0xf9
  40724b:	stos   DWORD PTR es:[edi],eax
  40724c:	outs   dx,BYTE PTR ds:[esi]
  40724d:	push   edi
  40724e:	scas   eax,DWORD PTR es:[edi]
  40724f:	fisubr DWORD PTR [edi+0x760ce0f9]
  407255:	lds    edi,FWORD PTR [esi-0x4]
  407258:	inc    esi
  407259:	das    
  40725a:	fsubr  st,st(1)
  40725c:	push   esi
  40725d:	std    
  40725e:	(bad)  
  40725f:	xor    eax,0xf6fc0103
  407264:	cmp    bl,BYTE PTR [ebp-0x53]
  407267:	jo     0x4072a4
  407269:	arpl   WORD PTR [edi],bx
  40726b:	pop    ds
  40726c:	enter  0xa3dd,0x96
  407270:	or     eax,0x5df360a8
  407275:	shr    BYTE PTR [ebp+edi*1+0x3a],0x41
  40727a:	pop    ebx
  40727b:	adc    BYTE PTR [eax],ah
  40727d:	jbe    0x4072f4
  40727f:	jecxz  0x4072b3
  407281:	pop    ebx
  407282:	es out dx,al
  407284:	jg     0x4072c6
  407286:	(bad)  
  407287:	fwait
  407288:	rol    BYTE PTR [ebx+0xe3aacee],0x4f
  40728f:	stc    
  407290:	sub    esp,0xffffffab
  407293:	outs   dx,DWORD PTR ds:[esi]
  407294:	pushf  
  407295:	fchs   
  407297:	push   ds
  407298:	sti    
  407299:	in     eax,0x3b
  40729b:	cmp    eax,0xd79f34b8
  4072a0:	xchg   BYTE PTR [ecx-0x10],cl
  4072a3:	out    0x1,al
  4072a5:	int    0x11
  4072a7:	mov    esp,0xae9cb3b2
  4072ac:	fstp   DWORD PTR ds:0x6f1ab9dd
  4072b2:	test   eax,0x8182e6a3
  4072b7:	xor    esp,ecx
  4072b9:	(bad)  
  4072ba:	xlat   BYTE PTR ds:[ebx]
  4072bb:	out    0xd1,al
  4072bd:	xor    ecx,DWORD PTR [eax-0x28]
  4072c0:	rcl    BYTE PTR [esi-0x1a],0x89
  4072c4:	mov    bl,0xd1
  4072c6:	mov    cl,0x30
  4072c8:	inc    esp
  4072c9:	add    BYTE PTR [si+0x10c9],bh
  4072ce:	inc    eax
  4072cf:	jb     0x40726f
  4072d1:	mov    edi,0x3e1e3e8f
  4072d6:	jl     0x407261
  4072d8:	jne    0x40725f
  4072da:	lea    esp,[ebx-0x7f]
  4072dd:	jg     0x40734b
  4072df:	(bad)  
  4072e1:	dec    ebp
  4072e2:	and    ecx,DWORD PTR [edx+0x4a]
  4072e5:	clc    
  4072e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072e7:	or     al,BYTE PTR [ecx+0x55c5d488]
  4072ed:	fimul  WORD PTR ds:0xb14d316e
  4072f3:	jmp    0x557479a6
  4072f8:	jg     0x40728d
  4072fa:	daa    
  4072fb:	or     al,0xeb
  4072fd:	jmp    0xccb310a3
  407302:	imul   edi,DWORD PTR [edi+0x59],0x5690a484
  407309:	inc    ebp
  40730a:	ds inc eax
  40730c:	in     al,0x60
  40730e:	das    
  40730f:	arpl   WORD PTR [ebx-0xe73d8d7],bx
  407315:	fsub   st,st(4)
  407317:	xchg   DWORD PTR [edx],ebx
  407319:	std    
  40731a:	or     eax,0x696eec6c
  40731f:	(bad)  
  407320:	fnstcw WORD PTR [ebp-0x797a5c3]
  407326:	ja     0x407367
  407328:	xor    dh,bh
  40732a:	int3   
  40732b:	mov    eax,ds:0xc4219e02
  407330:	into   
  407331:	and    eax,0x8bb3b61c
  407336:	div    BYTE PTR [ebp+0x1f9d08f9]
  40733c:	adc    ebx,DWORD PTR [ebx+ebp*2-0x39]
  407340:	fwait
  407341:	int    0x23
  407343:	mov    edi,DWORD PTR [edx]
  407345:	inc    edx
  407346:	adc    DWORD PTR [ecx-0x528270bd],0xffffffaf
  40734d:	clc    
  40734e:	ins    BYTE PTR es:[edi],dx
  40734f:	dec    eax
  407350:	xor    DWORD PTR [ebx+0x64e55d84],eax
  407356:	bound  esp,QWORD PTR [ebp-0x5bb71aa9]
  40735c:	fcom   DWORD PTR [edi-0x4d]
  40735f:	or     BYTE PTR [edx-0x3f5b9d39],ah
  407365:	loopne 0x407399
  407367:	stos   BYTE PTR es:[edi],al
  407368:	retf   0x6785
  40736b:	push   ebp
  40736c:	cmp    ebp,esp
  40736e:	add    DWORD PTR [esi+0x2d85b3b3],0x2d
  407375:	xchg   edx,eax
  407376:	and    BYTE PTR [ebp-0x1a],0x8d
  40737a:	add    BYTE PTR [edx],0xaf
  40737d:	in     eax,0x1e
  40737f:	lods   al,BYTE PTR ds:[esi]
  407380:	push   ss
  407381:	push   cs
  407382:	and    bh,dl
  407384:	mov    cl,0xf5
  407386:	std    
  407387:	xchg   ebx,eax
  407388:	iret   
  407389:	loop   0x407324
  40738b:	cmp    ebp,DWORD PTR [ebx]
  40738d:	xchg   DWORD PTR [edi+0x53],ecx
  407390:	and    eax,0x2253d10c
  407395:	add    DWORD PTR [ebp-0x45],edi
  407398:	int    0x16
  40739a:	adc    al,BYTE PTR [edi-0x518876db]
  4073a0:	pop    ebx
  4073a1:	aas    
  4073a2:	das    
  4073a3:	lea    esp,[eax]
  4073a5:	mov    eax,ds:0x3c8b7d9a
  4073aa:	dec    ebp
  4073ab:	xchg   ebp,eax
  4073ac:	pop    es
  4073ad:	pop    esi
  4073ae:	or     edx,DWORD PTR [ecx]
  4073b0:	mov    DWORD PTR [ecx],esi
  4073b2:	adc    al,0xb5
  4073b4:	xchg   ebx,eax
  4073b5:	jle    0x40736b
  4073b7:	sar    edx,1
  4073b9:	ret    0xde14
  4073bc:	pop    ecx
  4073bd:	(bad)  
  4073be:	rol    DWORD PTR [ecx],cl
  4073c0:	pop    ecx
  4073c1:	adc    eax,0x96c8130c
  4073c6:	mov    edx,DWORD PTR ds:0x10446c09
  4073cc:	jb     0x407447
  4073ce:	popa   
  4073cf:	mov    ds:0x6cee0187,al
  4073d4:	add    edi,DWORD PTR [eax-0x481b295b]
  4073da:	add    eax,0xf661ee33
  4073df:	test   al,0xc2
  4073e1:	sbb    dl,bh
  4073e3:	adc    bl,BYTE PTR [edx-0x74]
  4073e6:	mov    edi,edx
  4073e8:	or     dh,BYTE PTR [edx+0x4b351e6d]
  4073ee:	cwde   
  4073ef:	add    DWORD PTR [edi+0x1e24fbd],ebp
  4073f5:	xchg   edi,eax
  4073f6:	imul   DWORD PTR [edi]
  4073f8:	mov    edi,0xedcaba85
  4073fd:	pop    esi
  4073fe:	cwde   
  4073ff:	xor    eax,0xe8db9b44
  407404:	jo     0x4073e3
  407406:	sti    
  407407:	jmp    0x88a42760
  40740c:	add    ebp,ebp
  40740e:	shr    BYTE PTR [edi+edi*8],1
  407411:	punpckhbw mm5,mm0
  407414:	mov    esi,0x3492d892
  407419:	cwde   
  40741a:	adc    al,0x52
  40741c:	push   cs
  40741d:	add    al,0x9
  40741f:	out    dx,eax
  407420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407421:	mov    esp,0xd43a813a
  407426:	repz and DWORD PTR [edx+0x12167b87],esp
  40742d:	ficomp DWORD PTR [esi-0x134dac57]
  407433:	aaa    
  407434:	dec    edx
  407435:	sahf   
  407436:	pop    ebx
  407437:	inc    ecx
  407438:	lea    eax,[ebp+eax*4-0x78]
  40743c:	shl    DWORD PTR ds:0xb5c6bb5,cl
  407442:	xchg   esi,eax
  407443:	mov    eax,ds
  407445:	jl     0x4073ef
  407447:	dec    esi
  407448:	dec    ebp
  407449:	cmovns esp,DWORD PTR [ebx+0x32]
  40744d:	ret    
  40744e:	and    edi,edi
  407450:	shl    DWORD PTR [eax+0x7d9acbc1],1
  407456:	into   
  407457:	inc    ebp
  407458:	sbb    DWORD PTR [ecx],esp
  40745a:	cmc    
  40745b:	mov    dh,0x9e
  40745d:	push   ecx
  40745e:	pop    edx
  40745f:	adc    eax,0x1163b2ee
  407464:	test   al,0x49
  407466:	jo     0x4074b9
  407468:	jbe    0x4074c8
  40746a:	add    ebp,ecx
  40746c:	push   eax
  40746d:	mov    eax,ds:0xdef5e852
  407472:	into   
  407473:	lods   eax,DWORD PTR ds:[esi]
  407474:	out    0xc7,al
  407476:	fsub   QWORD PTR [ecx+0xd1c0ec3]
  40747c:	mov    WORD PTR [ecx-0x5e],es
  40747f:	outs   dx,BYTE PTR ds:[esi]
  407480:	std    
  407481:	(bad)  
  407482:	cmp    DWORD PTR [esi-0x3e],ebp
  407485:	inc    edi
  407486:	inc    esi
  407487:	add    al,dh
  407489:	ss pushf 
  40748b:	sbb    al,0xa1
  40748d:	sbb    DWORD PTR [ebx-0x53c3863],ecx
  407493:	fdiv   st,st(6)
  407495:	mov    WORD PTR ds:0x3aec1020,ss
  40749b:	xchg   ebp,eax
  40749c:	imul   dh
  40749e:	scas   al,BYTE PTR es:[edi]
  40749f:	fprem  
  4074a1:	mov    ebx,0xbb375209
  4074a6:	sbb    edx,DWORD PTR [esi]
  4074a8:	mul    DWORD PTR [eax+0x12ed9483]
  4074ae:	and    DWORD PTR [esi+edx*8+0x306ea27b],0xffffffe6
  4074b6:	div    BYTE PTR [edx+0x76]
  4074b9:	aas    
  4074ba:	cmp    bh,BYTE PTR [edi+0x4fd6b89a]
  4074c0:	fdivrp st(1),st
  4074c2:	sbb    BYTE PTR [ebp+0x78],bl
  4074c5:	pop    es
  4074c6:	sbb    edx,DWORD PTR [ebx+ebx*8+0x407ed985]
  4074cd:	and    al,0xc
  4074cf:	std    
  4074d0:	js     0x407455
  4074d2:	xchg   ebx,eax
  4074d3:	mov    ds:0x22558668,eax
  4074d8:	adc    al,0xab
  4074da:	ret    0xb7b0
  4074dd:	pop    edi
  4074de:	sbb    DWORD PTR [ecx],esi
  4074e0:	call   0x8a610618
  4074e5:	xchg   BYTE PTR [eax+0x6a],ah
  4074e8:	mov    ds:0x6189743e,eax
  4074ed:	scas   al,BYTE PTR es:[edi]
  4074ee:	das    
  4074ef:	add    ecx,DWORD PTR [eax+0x3cefc661]
  4074f5:	pop    esp
  4074f6:	cmp    esi,0xeee41c72
  4074fc:	arpl   WORD PTR [ebp+0x1c],ax
  4074ff:	mov    DWORD PTR [edi+ebx*4],esp
  407502:	push   0x1cc8d5f
  407507:	cmp    al,0x34
  407509:	xchg   ebx,eax
  40750a:	jge    0x4074bd
  40750c:	push   ebp
  40750d:	pop    ebp
  40750e:	push   edx
  40750f:	cmp    eax,0x919abc55
  407514:	imul   edi,edx,0x28
  407517:	mov    ecx,0xecb53945
  40751c:	push   esi
  40751d:	je     0x407593
  40751f:	xlat   BYTE PTR ds:[ebx]
  407520:	scas   eax,DWORD PTR es:[edi]
  407521:	hlt    
  407522:	mov    cl,0xf1
  407524:	push   0x98397467
  407529:	pop    ecx
  40752a:	sub    BYTE PTR [ebp+0x3477977d],al
  407530:	fucomip st,st(4)
  407532:	mov    ds:0x25568ba0,eax
  407537:	sub    ebp,DWORD PTR [ecx]
  407539:	push   edi
  40753a:	jno    0x407522
  40753c:	sub    bl,BYTE PTR [edx+0xe]
  40753f:	mov    esi,0x3399bc18
  407544:	sbb    dl,al
  407546:	gs jo  0x4074da
  407549:	sbb    eax,0x2e4c2b3b
  40754e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40754f:	push   cs
  407550:	add    DWORD PTR [ecx+0x16],ecx
  407553:	aam    0x2c
  407555:	scas   eax,DWORD PTR es:[edi]
  407556:	or     ecx,esi
  407558:	pop    esp
  407559:	xlat   BYTE PTR ds:[ebx]
  40755a:	adc    dh,bl
  40755c:	sub    dl,dl
  40755e:	sbb    BYTE PTR [esi+ebx*8],bl
  407561:	add    eax,0x29c5ea7d
  407566:	idiv   BYTE PTR [esi-0x4e]
  407569:	or     ecx,DWORD PTR [ecx-0x66]
  40756c:	sbb    ch,BYTE PTR [edi+0x78590a3b]
  407572:	imul   ebx,edi,0x2fa4b593
  407578:	xor    eax,0x6066c5b2
  40757e:	mov    ah,0x6a
  407580:	icebp  
  407581:	xor    edi,DWORD PTR [esi]
  407583:	ja     0x4075d1
  407585:	mov    esi,0xdb7fdc88
  40758a:	stc    
  40758b:	test   DWORD PTR [eax-0x71cc4bd5],0x6b572ab
  407595:	cmp    ah,dl
  407597:	pop    esi
  407598:	pusha  
  407599:	or     al,0xdf
  40759b:	out    0xb,eax
  40759d:	cs (bad) 
  4075a0:	cmp    BYTE PTR [esi-0x10c1f014],dh
  4075a6:	aad    0xe8
  4075a8:	inc    edi
  4075a9:	in     al,dx
  4075aa:	mov    esi,0x835ddcda
  4075af:	cwde   
  4075b0:	sbb    ch,al
  4075b2:	jb     0x4075c4
  4075b4:	pop    ds
  4075b5:	and    dl,BYTE PTR [eax+0x46]
  4075b8:	pusha  
  4075b9:	push   0x139c54fc
  4075be:	or     eax,0x29d58f09
  4075c3:	int3   
  4075c4:	int    0xa1
  4075c6:	jg     0x407548
  4075c8:	cmp    al,BYTE PTR [esi+0x4f210742]
  4075ce:	jle    0x40760e
  4075d0:	call   DWORD PTR ds:0xdac65d2b
  4075d6:	int    0xfe
  4075d8:	fisttp WORD PTR [edx+0x3d32fda7]
  4075de:	mov    esi,0xd1d24ac7
  4075e3:	jge    0x4075ea
  4075e5:	rcr    esi,cl
  4075e7:	add    ebp,esi
  4075e9:	pop    ss
  4075ea:	lods   eax,DWORD PTR ds:[esi]
  4075eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ec:	xchg   esp,eax
  4075ed:	sub    al,0xeb
  4075ef:	ficom  DWORD PTR [ebp+0x6d]
  4075f2:	adc    DWORD PTR [edi+0x51],esp
  4075f5:	hlt    
  4075f6:	push   ds
  4075f7:	mov    ds,WORD PTR [ecx]
  4075f9:	mov    dh,0x25
  4075fb:	dec    esi
  4075fc:	retf   0x2e37
  4075ff:	xchg   esp,eax
  407600:	mul    al
  407602:	and    al,0x7b
  407604:	clc    
  407605:	(bad)  
  407606:	push   ecx
  407607:	jnp    0x407616
  407609:	gs sbb al,0xb2
  40760c:	push   ebp
  40760d:	xchg   BYTE PTR [ecx],dh
  40760f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407610:	bound  edx,QWORD PTR [eax-0x6f31b062]
  407616:	inc    ecx
  407617:	xor    DWORD PTR [esi],edx
  407619:	imul   edi,DWORD PTR [edi-0x43],0x5
  40761d:	popf   
  40761e:	iret   
  40761f:	test   eax,0x59ea6470
  407624:	xor    BYTE PTR [esi],ch
  407626:	icebp  
  407627:	and    eax,0x37cb3315
  40762c:	or     bl,ch
  40762e:	sbb    DWORD PTR [edi+0xac8684e],ebx
  407634:	mov    dh,0x50
  407636:	js     0x407674
  407638:	outs   dx,DWORD PTR ds:[esi]
  407639:	cmp    ebx,esp
  40763b:	call   0xbf584559
  407640:	int3   
  407641:	push   ecx
  407642:	pop    ds
  407643:	jmp    0x60ba:0xf573ade3
  40764a:	into   
  40764b:	mov    ?,WORD PTR [ebx-0x78]
  40764e:	sti    
  40764f:	rol    edx,1
  407651:	xlat   BYTE PTR ds:[ebx]
  407652:	jmp    0x6ebe:0x4c9a902f
  407659:	sub    BYTE PTR [ebp-0x7ed16262],al
  40765f:	adc    DWORD PTR [ebx],ebx
  407661:	cmp    eax,0x52c0ee66
  407666:	sar    DWORD PTR ds:0xa0f17bf8,0x85
  40766d:	ss icebp 
  40766f:	data16 int3 
  407671:	push   eax
  407672:	jl     0x407608
  407674:	outs   dx,DWORD PTR ds:[esi]
  407675:	ins    DWORD PTR es:[edi],dx
  407676:	jbe    0x407601
  407678:	in     al,dx
  407679:	mov    esi,0x7f955f4b
  40767e:	ds jg  0x407617
  407681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407682:	cwde   
  407683:	cmp    eax,0xb52aa7d
  407688:	mov    ecx,0xeec06e40
  40768d:	sbb    eax,0x138685b5
  407692:	and    BYTE PTR [edx-0x39],dh
  407695:	jmp    0xbb93:0xb351147d
  40769c:	stc    
  40769d:	and    DWORD PTR [ebx],0x81fe223
  4076a3:	cmp    eax,0x5189693e
  4076a8:	loopne 0x407632
  4076aa:	mov    ebp,0x294ef0d1
  4076af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b0:	push   edi
  4076b1:	xchg   ebx,eax
  4076b2:	sbb    BYTE PTR [ebx],0x91
  4076b5:	sub    ecx,DWORD PTR [edx-0x6d5a8756]
  4076bb:	xchg   BYTE PTR [ecx-0x2d],al
  4076be:	addr16 data16 mov al,0xd0
  4076c2:	push   ebx
  4076c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c4:	icebp  
  4076c5:	sti    
  4076c6:	leave  
  4076c7:	adc    DWORD PTR ds:0x28253538,edx
  4076cd:	jb     0x407729
  4076cf:	mov    ecx,DWORD PTR [edx+edx*8+0x6e]
  4076d3:	mov    ebx,0xe705ce8e
  4076d8:	pop    ecx
  4076d9:	lds    ecx,FWORD PTR [ecx]
  4076db:	dec    esp
  4076dc:	lahf   
  4076dd:	ret    
  4076de:	popf   
  4076df:	jge    0x4076dd
  4076e1:	(bad)  
  4076e3:	push   eax
  4076e4:	dec    ecx
  4076e5:	pop    ss
  4076e6:	add    DWORD PTR [edx+0x2726c972],edi
  4076ec:	and    ecx,DWORD PTR [edx+0x34]
  4076ef:	push   ebx
  4076f0:	lds    eax,FWORD PTR [edx-0x6]
  4076f3:	scas   al,BYTE PTR es:[edi]
  4076f4:	lods   al,BYTE PTR ds:[esi]
  4076f5:	jecxz  0x4076f0
  4076f7:	mov    ds:0xef81a149,al
  4076fc:	adc    eax,0x7e6868a7
  407701:	or     DWORD PTR [edx+0x257cc090],ebx
  407707:	pop    ss
  407708:	jno    0x4076ee
  40770a:	pushf  
  40770b:	lock int3 
  40770d:	loopne 0x4076ec
  40770f:	call   edx
  407711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407712:	ins    BYTE PTR es:[edi],dx
  407713:	and    al,0xa0
  407715:	repz loopne 0x4076e5
  407718:	(bad)  
  407719:	fld    QWORD PTR [esi]
  40771b:	scas   al,BYTE PTR es:[edi]
  40771c:	rol    BYTE PTR [eax+0x19],cl
  40771f:	or     DWORD PTR [ebx+0x2d],ecx
  407722:	jbe    0x407758
  407724:	push   edi
  407725:	and    al,0x13
  407727:	popa   
  407728:	pop    ss
  407729:	jp     0x407717
  40772b:	jg     0x407767
  40772d:	call   edi
  40772f:	out    0x56,eax
  407731:	call   FWORD PTR [edx+0x490434f0]
  407737:	pop    esi
  407738:	sbb    DWORD PTR [edi+0x3e],0xa85a1e49
  40773f:	mov    al,ds:0x84674d6
  407744:	mov    ebp,DWORD PTR [ebx+ebx*2-0x1054ed1f]
  40774b:	and    esi,DWORD PTR [edx+edi*4-0x35]
  40774f:	aas    
  407750:	mov    WORD PTR [esi+0x56],gs
  407753:	adc    bl,BYTE PTR [eax-0x2d]
  407756:	adc    eax,0xf6a2187a
  40775b:	inc    ebx
  40775c:	nop
  40775d:	mov    eax,DWORD PTR [esi+0x6402e330]
  407763:	les    esi,FWORD PTR [eax]
  407765:	sub    BYTE PTR [edx+esi*8],ch
  407768:	pop    ebp
  407769:	lahf   
  40776a:	sbb    DWORD PTR [eax],esp
  40776c:	jge    0x4077d6
  40776e:	sub    ch,dh
  407770:	push   edx
  407771:	mul    DWORD PTR [ecx]
  407773:	xlat   BYTE PTR ds:[ebx]
  407774:	ficomp WORD PTR [ecx+0x30faef]
  40777a:	add    eax,0x71b90b53
  40777f:	sbb    bl,cl
  407781:	adc    BYTE PTR [ebx-0x2c],0x23
  407785:	aam    0xa1
  407787:	les    esi,FWORD PTR [ebx]
  407789:	or     esi,ecx
  40778b:	rol    DWORD PTR [ebp+0x3eb45a60],1
  407791:	test   al,0x42
  407793:	xor    BYTE PTR [edi+0x2e],0xc2
  407797:	aaa    
  407798:	fiadd  WORD PTR [eax+0x3aa54e5d]
  40779e:	lahf   
  40779f:	inc    ebp
  4077a0:	mov    DWORD PTR [eax-0x455c7c93],ecx
  4077a6:	ins    BYTE PTR es:[edi],dx
  4077a7:	xchg   BYTE PTR [ecx+0x37],al
  4077aa:	sub    bl,BYTE PTR [ebp-0x7]
  4077ad:	in     al,dx
  4077ae:	or     BYTE PTR [ebx],ah
  4077b0:	aam    0x8
  4077b2:	inc    edi
  4077b3:	aaa    
  4077b4:	ss in  eax,0x2a
  4077b7:	stos   DWORD PTR es:[edi],eax
  4077b8:	in     eax,dx
  4077b9:	inc    ebx
  4077ba:	sub    eax,0xd612d4a
  4077bf:	xor    BYTE PTR [esi+0x780e1358],dl
  4077c5:	arpl   WORD PTR ds:0x6fa8ab20,bp
  4077cb:	dec    edi
  4077cc:	loop   0x40779a
  4077ce:	mov    ebp,0x78d19e56
  4077d3:	mov    al,0xa5
  4077d5:	pop    eax
  4077d6:	inc    ebp
  4077d7:	test   eax,0xde199ef9
  4077dc:	retf   0xd3c9
  4077df:	and    ecx,DWORD PTR ds:0xfcc422e0
  4077e5:	sub    dl,BYTE PTR [ecx-0x7e]
  4077e8:	pop    ebp
  4077e9:	sahf   
  4077ea:	pop    ebp
  4077eb:	xor    eax,0x594c2d91
  4077f0:	mov    dh,al
  4077f2:	adc    eax,DWORD PTR [ebx]
  4077f4:	ficom  WORD PTR [ebx+eiz*8]
  4077f7:	in     al,dx
  4077f8:	pop    ebx
  4077f9:	mov    dl,0x98
  4077fb:	(bad)  
  4077fc:	mov    eax,0xa31d15a9
  407801:	mov    dl,0xbb
  407803:	js     0x4077d2
  407805:	neg    BYTE PTR [ecx+0x6a]
  407808:	add    esp,DWORD PTR [esi+esi*4]
  40780b:	je     0x407813
  40780d:	push   esp
  40780e:	(bad)  
  40780f:	loope  0x4077cb
  407811:	repz aaa 
  407813:	mov    DWORD PTR [ecx+0x23c7078a],ebx
  407819:	bound  esi,QWORD PTR [esi+0xdf7d0db]
  40781f:	cmp    al,0xc7
  407821:	popa   
  407822:	inc    esp
  407823:	shr    BYTE PTR [ebx-0x1fe6d93e],1
  407829:	mov    DWORD PTR [ebx+0x72a6ebcb],0x7add5fdc
  407833:	imul   ecx,DWORD PTR [eax],0xffffff82
  407836:	jno    0x40782d
  407838:	add    eax,0x12e67a2c
  40783d:	stc    
  40783e:	out    dx,al
  40783f:	xchg   BYTE PTR [edx],bl
  407841:	ja     0x4077f7
  407843:	call   0x128c:0xf0c7ae17
  40784a:	inc    edi
  40784b:	idiv   BYTE PTR [edx]
  40784d:	xchg   BYTE PTR [edi],dl
  40784f:	stos   BYTE PTR es:[edi],al
  407850:	cs std 
  407852:	inc    ebp
  407853:	push   0x65
  407855:	mov    edi,0x1b5913c2
  40785a:	mov    bh,0x75
  40785c:	loop   0x407881
  40785e:	out    dx,al
  40785f:	sbb    DWORD PTR [ecx],esp
  407861:	gs inc esi
  407863:	push   edx
  407864:	dec    ebp
  407865:	pop    edi
  407866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407867:	jbe    0x4078dd
  407869:	lods   eax,DWORD PTR ds:[esi]
  40786a:	xchg   ebx,eax
  40786b:	jmp    0x242e:0x6931049f
  407872:	ins    BYTE PTR es:[edi],dx
  407873:	mov    edi,0x5bd174bd
  407878:	adc    ch,BYTE PTR [edi-0x1da3dcd3]
  40787e:	xchg   ecx,eax
  40787f:	cli    
  407880:	dec    esi
  407881:	sbb    al,0x44
  407883:	xchg   DWORD PTR [ecx],ebp
  407885:	enter  0x1843,0xfc
  407889:	(bad)  
  40788a:	pop    edi
  40788b:	out    0xcf,eax
  40788d:	ins    BYTE PTR es:[edi],dx
  40788e:	retf   
  40788f:	cmc    
  407890:	push   ebp
  407891:	adc    eax,0x201238b2
  407896:	mov    ?,WORD PTR [eax+0xe]
  407899:	into   
  40789a:	imul   BYTE PTR [esi+edi*4]
  40789d:	imul   eax,esp,0xdd1c929e
  4078a3:	cmp    ch,0x38
  4078a6:	and    cl,al
  4078a8:	jp     0x4078d4
  4078aa:	mov    ds:0xfda5efd9,eax
  4078af:	or     ah,BYTE PTR [ecx+0x2d]
  4078b2:	mov    dh,0x47
  4078b4:	pop    ebx
  4078b5:	lock mov ch,0xd2
  4078b8:	das    
  4078b9:	xchg   edx,eax
  4078ba:	imul   esi,DWORD PTR ds:0xbe75a903,0x20
  4078c1:	jnp    0x4078aa
  4078c3:	lods   eax,DWORD PTR ds:[esi]
  4078c4:	cmp    BYTE PTR [edx+0x4cb0f887],bl
  4078ca:	(bad)  
  4078cb:	loope  0x40791b
  4078cd:	add    BYTE PTR ds:0x255dcaf3,dh
  4078d3:	sub    ch,0x12
  4078d6:	in     eax,0x3a
  4078d8:	add    BYTE PTR [ebx+0xb],0x89
  4078dc:	jge    0x4078a6
  4078de:	(bad)  
  4078df:	cli    
  4078e0:	pop    ecx
  4078e1:	push   eax
  4078e2:	arpl   WORD PTR [ebx],cx
  4078e4:	mov    edi,0xcb680fc0
  4078e9:	push   ds
  4078ea:	xchg   esi,eax
  4078eb:	int3   
  4078ec:	pusha  
  4078ed:	xchg   esi,eax
  4078ee:	inc    ebx
  4078ef:	jno    0x407952
  4078f1:	mov    ecx,fs
  4078f3:	lods   al,BYTE PTR ds:[esi]
  4078f4:	test   al,0x54
  4078f6:	out    0xa0,al
  4078f8:	or     dh,BYTE PTR [esi+0x4d556fc0]
  4078fe:	hlt    
  4078ff:	push   edi
  407900:	lods   al,BYTE PTR ds:[esi]
  407901:	pop    ebp
  407902:	(bad)  
  407904:	mov    dl,0xc5
  407906:	imul   edi,DWORD PTR [edx+ebp*8],0xffffffd5
  40790a:	mov    al,ds:0x4a07ba20
  40790f:	fnstsw WORD PTR [edx+0x1d598b7d]
  407915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407916:	fwait
  407917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407918:	or     dh,BYTE PTR [edx]
  40791a:	ins    BYTE PTR es:[edi],dx
  40791b:	cdq    
  40791c:	add    DWORD PTR [edi-0x49],ecx
  40791f:	sub    dh,BYTE PTR [eax+0x673c3be9]
  407925:	cmc    
  407926:	pusha  
  407927:	lea    edi,[eax]
  407929:	xchg   ebp,ebx
  40792b:	das    
  40792c:	mov    dl,0x7d
  40792e:	clc    
  40792f:	jb     0x4079b0
  407931:	(bad)  
  407932:	and    ebx,DWORD PTR [esi]
  407934:	ret    0x4e7d
  407937:	cli    
  407938:	arpl   WORD PTR ds:0x77d066c7,si
  40793e:	test   al,0xbc
  407940:	add    eax,0x504fa0b1
  407945:	add    eax,0x7405e360
  40794a:	sub    esp,DWORD PTR [edi+0x32]
  40794d:	cwde   
  40794e:	add    eax,0xc4587a68
  407953:	cli    
  407954:	fcomp  QWORD PTR [eax]
  407956:	gs js  0x40799b
  407959:	push   eax
  40795a:	in     eax,dx
  40795b:	sbb    esp,edx
  40795d:	scas   al,BYTE PTR es:[edi]
  40795e:	loopne 0x407909
  407960:	jle    0x4079d3
  407962:	sahf   
  407963:	shl    BYTE PTR [ebx+edi*2],1
  407966:	sub    eax,0xfb3c81e
  40796b:	mov    ss,WORD PTR [edi-0x3d98d6e5]
  407971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407972:	arpl   WORD PTR [edx+0x8],bp
  407975:	and    eax,0xcfc7948e
  40797a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40797c:	mov    eax,ds:0xac8a83d2
  407981:	push   ebp
  407982:	(bad)  
  407983:	hlt    
  407984:	stos   DWORD PTR es:[edi],eax
  407985:	pop    edi
  407986:	sti    
  407987:	xor    eax,0xcffe35c1
  40798c:	sti    
  40798d:	out    0x48,eax
  40798f:	mov    esp,0x63969f12
  407994:	pushf  
  407995:	outs   dx,DWORD PTR ds:[esi]
  407996:	stc    
  407997:	sub    eax,DWORD PTR [esi+ebx*8+0x6a]
  40799b:	jns    0x4079fe
  40799d:	js     0x40795b
  40799f:	outs   dx,BYTE PTR gs:[esi]
  4079a1:	lea    edi,[esi-0x35]
  4079a4:	enter  0xecf2,0x7f
  4079a8:	ret    
  4079a9:	adc    esp,esi
  4079ab:	jbe    0x40795c
  4079ad:	aaa    
  4079ae:	mov    DWORD PTR [edi],esi
  4079b0:	inc    esi
  4079b1:	fiadd  WORD PTR ds:0x8e64ce8d
  4079b7:	sbb    ch,cl
  4079b9:	jmp    0x4ea37246
  4079be:	or     ah,BYTE PTR [edx-0x29]
  4079c1:	jbe    0x407994
  4079c3:	loope  0x4079e1
  4079c5:	imul   ecx,DWORD PTR [eax-0x547ef320],0xf72779f2
  4079cf:	ficom  DWORD PTR [ecx-0x65]
  4079d2:	leave  
  4079d3:	mov    bh,0x1e
  4079d5:	pop    ecx
  4079d6:	dec    ebx
  4079d7:	cmp    BYTE PTR [edx+0x70],0xc1
  4079db:	sub    ch,BYTE PTR [edi+edx*2+0x21c0580b]
  4079e2:	jns    0x407a07
  4079e4:	push   ebp
  4079e5:	retf   0xfda8
  4079e8:	xor    al,ah
  4079ea:	test   eax,0xf8413175
  4079ef:	das    
  4079f0:	fdivr  st,st(5)
  4079f2:	jecxz  0x4079a8
  4079f4:	rcr    esp,cl
  4079f6:	(bad)  
  4079f7:	mov    cl,0xf1
  4079f9:	outs   dx,DWORD PTR ds:[esi]
  4079fa:	push   eax
  4079fb:	ret    
  4079fc:	test   ebx,esp
  4079fe:	in     al,0xcc
  407a00:	sub    ecx,edx
  407a02:	and    edi,DWORD PTR [edx+0x7a]
  407a05:	or     ch,BYTE PTR ds:0xcd3b0350
  407a0b:	lock inc ecx
  407a0d:	mov    al,ds:0x8cf3413d
  407a12:	js     0x4079ad
  407a14:	retf   0x5a21
  407a17:	and    esp,DWORD PTR [eax]
  407a19:	aas    
  407a1a:	adc    bl,BYTE PTR [edi-0x417f846f]
  407a20:	iret   
  407a21:	sub    eax,0x5bc5b893
  407a26:	enter  0x9603,0x5c
  407a2a:	fnstcw WORD PTR [edx+ebx*4+0x44]
  407a2e:	xchg   ebp,eax
  407a2f:	call   0xae71bac8
  407a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a35:	shr    ebp,cl
  407a37:	mov    eax,0xa48d051c
  407a3c:	out    0x5c,al
  407a3e:	jecxz  0x4079e6
  407a40:	retf   
  407a41:	xor    esp,eax
  407a43:	inc    esp
  407a44:	mov    cl,0x52
  407a46:	mov    esp,0xc90d6420
  407a4b:	add    BYTE PTR [esi-0x75202bd8],0xcf
  407a52:	ss hlt 
  407a54:	fwait
  407a55:	(bad)  
  407a56:	aam    0x64
  407a58:	push   esp
  407a59:	daa    
  407a5a:	dec    esp
  407a5b:	das    
  407a5c:	dec    edx
  407a5d:	cmc    
  407a5e:	push   ecx
  407a5f:	add    ecx,ebx
  407a61:	push   edx
  407a62:	loopne 0x407a22
  407a64:	and    ebx,esi
  407a66:	sub    ch,bh
  407a68:	add    al,0xe7
  407a6a:	sbb    DWORD PTR [eax-0x2d],ecx
  407a6d:	mov    WORD PTR [ecx+0x7e],sp
  407a71:	pushf  
  407a72:	in     al,dx
  407a73:	std    
  407a74:	mov    ah,0x7e
  407a76:	arpl   WORD PTR [eax+0x427efa9a],cx
  407a7c:	aad    0xe4
  407a7e:	out    dx,eax
  407a7f:	adc    edi,DWORD PTR [ebx-0x18]
  407a82:	inc    ebx
  407a83:	and    al,0x85
  407a85:	mov    ecx,0x1928834c
  407a8a:	rcr    BYTE PTR ss:[ecx+0x4d],1
  407a8e:	retf   0xee6e
  407a91:	or     ecx,eax
  407a93:	cli    
  407a94:	mov    ebx,0x1b1a3ed7
  407a99:	mov    ebx,0x883bd0f3
  407a9e:	lahf   
  407a9f:	clc    
  407aa0:	out    dx,al
  407aa1:	pop    ebp
  407aa3:	push   ss
  407aa4:	mov    WORD PTR [ecx],ss
  407aa6:	pop    ebp
  407aa7:	xchg   esp,eax
  407aa8:	and    edi,edx
  407aaa:	sahf   
  407aab:	mov    bh,al
  407aad:	add    al,0x2d
  407aaf:	and    BYTE PTR [esi+0x21],ah
  407ab2:	jg     0x407aa5
  407ab4:	xor    bl,BYTE PTR [edx+0x28068a86]
  407aba:	test   eax,0x35b31d29
  407abf:	test   DWORD PTR [ebx+0x1e],edi
  407ac2:	or     edx,esp
  407ac4:	xchg   ebx,eax
  407ac5:	mov    edi,0x1a1ad2db
  407aca:	rcr    DWORD PTR [ecx-0x3bc0d79a],cl
  407ad0:	fsub   st,st(0)
  407ad2:	pop    esi
  407ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad4:	aas    
  407ad5:	jle    0x407b25
  407ad7:	es mov ah,0x3
  407ada:	mov    esp,0x8a7dccd8
  407adf:	cdq    
  407ae0:	jb     0x407abc
  407ae2:	cli    
  407ae3:	pop    eax
  407ae4:	sub    BYTE PTR [ecx],ah
  407ae6:	(bad)  
  407ae7:	test   bl,0xa5
  407aea:	or     eax,0x3a526e26
  407aef:	xor    edx,edx
  407af1:	adc    al,0xd3
  407af3:	sub    eax,0x6518aab0
  407af8:	add    ebp,DWORD PTR [edi+0x5d44af72]
  407afe:	sub    cl,BYTE PTR [edi-0x5b]
  407b01:	sub    al,0x20
  407b03:	out    dx,al
  407b04:	lock sub BYTE PTR [edx],bl
  407b07:	lods   al,BYTE PTR ds:[esi]
  407b08:	clc    
  407b09:	sbb    ebx,ebx
  407b0b:	clc    
  407b0c:	pushf  
  407b0d:	loop   0x407a9f
  407b0f:	xchg   ebp,eax
  407b10:	shl    DWORD PTR [ebx-0x5741bfc9],0x65
  407b17:	pop    ds
  407b18:	jb     0x407b02
  407b1a:	xor    eax,0x3e54d807
  407b1f:	adc    al,0x20
  407b21:	in     eax,0xbe
  407b23:	ds pop edi
  407b25:	inc    esi
  407b26:	into   
  407b27:	mov    esp,0x16f2aa20
  407b2c:	stos   BYTE PTR es:[edi],al
  407b2d:	sbb    dh,0xcc
  407b30:	xchg   esi,eax
  407b31:	and    eax,0xc5b5d30e
  407b36:	sbb    eax,0x2f8b3c5d
  407b3b:	dec    ebp
  407b3c:	pusha  
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xf2ed70e0
  407e5b:	xchg   esp,eax
  407e5c:	sbb    eax,0x7c7c22cf
  407e61:	aam    0x5f
  407e63:	jl     0x407ee1
  407e65:	lods   eax,DWORD PTR ds:[esi]
  407e66:	(bad)  
  407e67:	arpl   WORD PTR [ecx],di
  407e69:	(bad)  
  407e6a:	jno    0x407e91
  407e6c:	sbb    BYTE PTR [ecx],ah
  407e6e:	push   es
  407e6f:	clc    
  407e70:	add    al,0xae
  407e72:	pop    eax
  407e73:	dec    esi
  407e74:	not    DWORD PTR [edi-0x480a27e5]
  407e7a:	xchg   DWORD PTR [ebp+0x33],ebp
  407e7d:	or     esi,DWORD PTR [esi]
  407e7f:	xchg   eax,esi
  407e81:	sbb    BYTE PTR [eax-0x299d7e93],dl
  407e87:	jle    0x407e51
  407e89:	stos   DWORD PTR es:[edi],eax
  407e8a:	pushf  
  407e8b:	mov    cs,WORD PTR [edi+0x39]
  407e8e:	mov    esi,ecx
  407e90:	inc    edx
  407e91:	xchg   BYTE PTR [esi-0x4403de20],dh
  407e97:	popf   
  407e98:	js     0x407e59
  407e9a:	rcr    DWORD PTR [eax-0x6418e0cd],cl
  407ea0:	and    BYTE PTR [esi+0x75],0x6c
  407ea4:	xchg   ebx,esi
  407ea6:	rcl    BYTE PTR [ebx+0x691a3425],cl
  407eac:	scas   al,BYTE PTR es:[edi]
  407ead:	les    ecx,FWORD PTR [eax+0x7a]
  407eb0:	xor    al,0xeb
  407eb2:	cmp    al,BYTE PTR [edx]
  407eb4:	pusha  
  407eb5:	jmp    0x2342:0xcc1dbe0c
  407ebc:	push   0xffffff94
  407ebe:	test   DWORD PTR [ebp+0x2b81ed9b],edx
  407ec4:	mov    eax,0xc3560036
  407ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eca:	cli    
  407ecb:	cmp    esp,DWORD PTR [eax-0x2c]
  407ece:	add    DWORD PTR [ebx+0x3f],esp
  407ed1:	jmp    0x407e72
  407ed3:	jg     0x407ec6
  407ed5:	fisttp QWORD PTR [ecx+0xe]
  407ed8:	inc    ebp
  407ed9:	pop    ss
  407eda:	xchg   ebp,eax
  407edb:	in     eax,0xd2
  407edd:	jno    0x407f35
  407edf:	(bad)  
  407ee0:	push   edi
  407ee1:	mov    cl,0x0
  407ee3:	fistp  WORD PTR [ecx]
  407ee5:	jmp    0x5605c936
  407eea:	or     eax,0xf755b399
  407eef:	or     ebx,DWORD PTR [ecx]
  407ef1:	inc    esi
  407ef2:	jmp    DWORD PTR [eax+0x49]
  407ef5:	and    BYTE PTR [ecx],ch
  407ef7:	gs imul ebx,edi,0x9481ae13
  407efe:	or     dl,BYTE PTR [edi]
  407f00:	loope  0x407f47
  407f02:	shrd   DWORD PTR [ebx],esp,cl
  407f05:	test   al,0xf1
  407f07:	or     ebx,edi
  407f09:	xchg   edi,eax
  407f0a:	xor    edx,DWORD PTR [ebp-0x59b9890d]
  407f10:	sub    bl,0x9c
  407f13:	push   ss
  407f14:	jno    0x407ef8
  407f16:	sar    BYTE PTR ds:0x5681ab48,cl
  407f1d:	push   esi
  407f1e:	sbb    al,al
  407f20:	add    dl,BYTE PTR [esi-0x3e]
  407f23:	dec    esp
  407f24:	mov    bl,al
  407f26:	sahf   
  407f27:	test   BYTE PTR [ebx],bl
  407f29:	xchg   esp,eax
  407f2a:	and    al,bl
  407f2c:	out    dx,al
  407f2d:	mov    bl,0xd7
  407f2f:	dec    ebx
  407f30:	adc    dl,BYTE PTR [ecx-0x76]
  407f33:	int3   
  407f34:	dec    esp
  407f35:	xor    BYTE PTR [ecx],al
  407f37:	mov    BYTE PTR [edx-0x44],dl
  407f3a:	jle    0x407f31
  407f3c:	jo     0x407f9a
  407f3e:	aas    
  407f3f:	or     bl,BYTE PTR [ebp+0x39]
  407f42:	daa    
  407f43:	mov    ah,0xd4
  407f45:	pop    ecx
  407f46:	cmp    al,cl
  407f48:	fdiv   QWORD PTR [edi+eiz*1-0x7f779e4b]
  407f4f:	push   eax
  407f50:	sti    
  407f51:	lea    edi,[eax]
  407f53:	cmp    al,0xf6
  407f55:	iret   
  407f56:	xchg   ecx,eax
  407f57:	scas   al,BYTE PTR es:[edi]
  407f58:	cmp    bl,BYTE PTR [edx+0x5]
  407f5b:	jo     0x407fa9
  407f5d:	inc    esi
  407f5e:	xchg   ecx,eax
  407f5f:	fsubr  QWORD PTR [eax-0x3c]
  407f62:	scas   al,BYTE PTR es:[edi]
  407f63:	sub    edx,DWORD PTR [ebp+0x13]
  407f66:	jae    0x407f4d
  407f68:	hlt    
  407f69:	pop    ebx
  407f6a:	out    dx,eax
  407f6b:	xlat   BYTE PTR ds:[ebx]
  407f6c:	xchg   ecx,eax
  407f6d:	adc    si,bx
  407f70:	jns    0x407f39
  407f72:	clc    
  407f73:	pop    edx
  407f74:	mov    al,0x29
  407f76:	lock lahf 
  407f78:	int3   
  407f79:	arpl   ax,si
  407f7b:	pusha  
  407f7c:	jnp    0x407fae
  407f7e:	jg     0x407fb9
  407f80:	mov    dh,0xc8
  407f82:	mov    DWORD PTR [eax+0x42],0xa1a776b6
  407f89:	into   
  407f8a:	jae    0x407fcb
  407f8c:	stos   DWORD PTR es:[edi],eax
  407f8d:	sti    
  407f8e:	(bad)  
  407f90:	cmp    BYTE PTR [ecx],al
  407f92:	ficomp DWORD PTR [edi+0x1ed38818]
  407f98:	sub    BYTE PTR [ebx+0x74],al
  407f9b:	dec    ebp
  407f9c:	out    dx,al
  407f9d:	adc    BYTE PTR [ecx+0x2b64c4a4],0xf7
  407fa4:	in     eax,dx
  407fa5:	daa    
  407fa6:	xor    al,0xe4
  407fa8:	xchg   BYTE PTR [esi-0x4a],cl
  407fab:	popf   
  407fac:	int3   
  407fad:	retf   
  407fae:	xchg   ecx,eax
  407faf:	cmp    dh,BYTE PTR [ecx]
  407fb1:	aam    0x2e
  407fb3:	pop    edi
  407fb4:	pushf  
  407fb5:	push   0x5e55881a
  407fba:	cmp    bh,BYTE PTR [edi]
  407fbc:	les    ebp,FWORD PTR [edi]
  407fbe:	push   edi
  407fbf:	push   ecx
  407fc0:	xchg   DWORD PTR [edx-0x43],edi
  407fc3:	pushf  
  407fc4:	mov    bl,0x62
  407fc6:	push   ss
  407fc7:	mov    ds,WORD PTR [edi-0x63]
  407fca:	dec    ecx
  407fcb:	imul   DWORD PTR [ebp+0x66]
  407fce:	mov    ecx,0x7f6b5de9
  407fd3:	jbe    0x407f6b
  407fd5:	pop    es
  407fd6:	icebp  
  407fd7:	cmp    dl,BYTE PTR [edx+ecx*4-0x8]
  407fdb:	jns    0x408004
  407fdd:	pop    edi
  407fde:	int    0x42
  407fe0:	hlt    
  407fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fe2:	mov    ebp,DWORD PTR [ecx+0x73]
  407fe5:	cmp    DWORD PTR ds:0xf10a3ff5,ebp
  407feb:	inc    ebx
  407fec:	mov    bl,0x40
  407fee:	ins    BYTE PTR es:[edi],dx
  407fef:	or     edx,DWORD PTR [eax-0x7]
  407ff2:	es in  eax,0xc7
  407ff5:	xor    esp,DWORD PTR [edx+0x451a2978]
  407ffb:	and    BYTE PTR [ebx-0x3d70341e],bl
  408001:	shl    BYTE PTR [eax-0xe],1
  408004:	or     DWORD PTR [ebx+0x1be4a9c0],ebx
  40800a:	mov    esp,DWORD PTR [ebx]
  40800c:	in     eax,dx
  40800d:	mov    cl,0xea
  40800f:	push   esp
  408010:	popa   
  408011:	into   
  408012:	jge    0x407fc2
  408014:	mov    ah,ch
  408016:	bnd jl 0x407fa5
  408019:	(bad)  
  40801a:	lods   al,BYTE PTR ds:[esi]
  40801b:	imul   ebx,DWORD PTR [ecx-0x42],0xc612e05e
  408022:	add    edx,DWORD PTR ds:0x11006761
  408028:	and    ecx,eax
  40802a:	mov    cl,0xda
  40802c:	push   0x15
  40802e:	xchg   edx,ebp
  408030:	lock inc eax
  408032:	fadd   QWORD PTR ds:0x16099833
  408038:	lds    eax,FWORD PTR [eax]
  40803a:	push   ebp
  40803b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40803c:	(bad)  
  40803d:	in     al,dx
  40803e:	out    0x95,al
  408040:	push   eax
  408041:	sbb    DWORD PTR [edi-0x54755e01],0x4accd21d
  40804b:	lock xchg edx,eax
  40804d:	xchg   esp,eax
  40804e:	div    DWORD PTR [edi-0x7d718a07]
  408054:	scas   al,BYTE PTR es:[edi]
  408055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408056:	mov    dl,0x7c
  408058:	lds    esi,FWORD PTR [edx+0x5]
  40805b:	leave  
  40805c:	or     eax,0x3e855c6d
  408061:	jae    0x408085
  408063:	add    al,0x7b
  408066:	loop   0x4080bc
  408068:	outs   dx,DWORD PTR ds:[esi]
  408069:	retf   0x8c91
  40806c:	frndint 
  40806e:	(bad)  
  40806f:	and    ecx,DWORD PTR [ecx+0x3b096634]
  408075:	loop   0x40804d
  408077:	stc    
  408078:	call   0x9ca9:0x906ad454
  40807f:	or     eax,0xe07b94f6
  408084:	lods   al,BYTE PTR ds:[esi]
  408085:	test   eax,0x8e512c72
  40808a:	jecxz  0x4080d3
  40808c:	std    
  40808d:	aam    0x51
  40808f:	leave  
  408090:	pop    edi
  408091:	into   
  408092:	jg     0x40804d
  408094:	xchg   ecx,eax
  408095:	add    edi,ecx
  408097:	lods   eax,DWORD PTR ds:[esi]
  408098:	jo     0x4080bc
  40809a:	mov    bh,0xd
  40809c:	mov    edi,0xf07b712c
  4080a1:	das    
  4080a2:	in     al,dx
  4080a3:	cmc    
  4080a4:	sar    BYTE PTR [ebx],0xda
  4080a7:	jns    0x408120
  4080a9:	lds    ebp,FWORD PTR [edx-0x27]
  4080ac:	mov    WORD PTR [esi+0x45],gs
  4080af:	mov    dl,al
  4080b1:	(bad)  
  4080b2:	xlat   BYTE PTR ds:[ebx]
  4080b3:	cmp    DWORD PTR [edi],eax
  4080b5:	xchg   edx,eax
  4080b6:	or     BYTE PTR [ecx],bl
  4080b8:	aas    
  4080b9:	xor    BYTE PTR [esi],ah
  4080bb:	std    
  4080bc:	and    eax,DWORD PTR [eax]
  4080be:	sub    BYTE PTR [ebx],al
  4080c0:	or     BYTE PTR cs:[edx+0x7f9e8fc6],dh
  4080c7:	call   0x4c2569e5
  4080cc:	and    DWORD PTR [ebx+0x6d],edi
  4080cf:	ins    DWORD PTR es:[edi],dx
  4080d0:	(bad)  
  4080d1:	int3   
  4080d2:	je     0x4080fc
  4080d4:	ficomp WORD PTR [edx]
  4080d6:	mov    bl,BYTE PTR [esi-0x549905a1]
  4080dc:	or     edi,DWORD PTR [ecx-0x6cb89809]
  4080e2:	jo     0x4080b3
  4080e4:	imul   eax,ebp,0xb46c1be2
  4080ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080eb:	push   ds
  4080ec:	es outs dx,DWORD PTR ds:[esi]
  4080ef:	(bad)  
  4080f0:	imul   DWORD PTR [edi]
  4080f2:	in     al,dx
  4080f3:	xchg   ebx,eax
  4080f4:	rol    BYTE PTR [ebx+eax*1],0x91
  4080f8:	push   ecx
  4080f9:	mov    edx,0x68e943a8
  4080fe:	ret    0x66b0
  408101:	mov    dl,0x94
  408103:	inc    edi
  408104:	cmp    ebp,eax
  408106:	(bad)  
  408108:	inc    ebx
  408109:	scas   al,BYTE PTR es:[edi]
  40810a:	mov    cl,0x6f
  40810c:	aad    0xd1
  40810e:	mov    edx,0x39e62c8e
  408113:	adc    ecx,DWORD PTR [esi]
  408115:	cmp    DWORD PTR [ebx],edi
  408117:	lahf   
  408118:	outs   dx,DWORD PTR ds:[esi]
  408119:	aam    0x77
  40811b:	push   esp
  40811c:	jae    0x4080d5
  40811e:	mov    esp,0x44c0adba
  408123:	push   ebp
  408124:	push   esp
  408125:	(bad)  [edi+0x56]
  408128:	lods   eax,DWORD PTR ds:[esi]
  408129:	sbb    BYTE PTR [edx+edx*8-0xf141e64],cl
  408130:	add    bl,ah
  408132:	sbb    al,0xa
  408134:	lods   eax,DWORD PTR ds:[esi]
  408135:	jmp    0xe875b5d8
  40813a:	call   0x4c37196b
  40813f:	shl    DWORD PTR [eax],cl
  408141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408142:	dec    edi
  408143:	je     0x408185
  408145:	in     al,0x9c
  408147:	fsub   QWORD PTR [ebx]
  408149:	pop    ds
  40814a:	arpl   WORD PTR [eax+0x34df8a44],sp
  408150:	mov    al,ds:0x479ecfb8
  408155:	fsub   st(4),st
  408157:	das    
  408158:	jl     0x40818b
  40815a:	cmc    
  40815b:	sahf   
  40815c:	loop   0x40811d
  40815e:	(bad)
  408161:	mov    ebx,0x3e161404
  408166:	push   cs
  408167:	cmp    ebx,DWORD PTR [esp+ebx*4-0x2a]
  40816b:	adc    bl,bh
  40816d:	add    al,0xf0
  40816f:	cld    
  408170:	jns    0x408107
  408172:	(bad)  [esi]
  408174:	jnp    0x4081a0
  408176:	outs   dx,BYTE PTR ds:[esi]
  408177:	mov    al,ds:0xf28a7aa8
  40817c:	or     al,0x46
  40817e:	fwait
  40817f:	pop    ebp
  408180:	test   eax,0x71cb7b70
  408185:	add    bh,al
  408187:	and    dl,BYTE PTR [ebx-0x39]
  40818a:	adc    dl,ah
  40818c:	mov    ds,eax
  40818e:	les    ebx,FWORD PTR gs:[ebx]
  408191:	mov    ebx,0x262bc964
  408196:	pop    ds
  408197:	js     0x408168
  408199:	and    dh,BYTE PTR [ebp+0x4a00076a]
  40819f:	cmp    BYTE PTR [eax],al
  4081a1:	loop   0x40820f
  4081a3:	xor    BYTE PTR [edx],cl
  4081a5:	mov    edx,es
  4081a7:	pushf  
  4081a8:	mov    dl,BYTE PTR [edi+0x2dbb8404]
  4081ae:	mov    al,ds:0xddc01059
  4081b3:	adc    edx,DWORD PTR [edi+0x7]
  4081b6:	xor    eax,0xcafb06c8
  4081bb:	mov    ah,0x1c
  4081bd:	(bad)  
  4081be:	dec    ebx
  4081bf:	addr16 je 0x4081cc
  4081c2:	mov    eax,ds:0x2181c27b
  4081c7:	jp     0x408170
  4081c9:	sub    BYTE PTR [esi+ecx*4+0x6],0x2f
  4081ce:	sub    eax,0x4c25e939
  4081d3:	dec    esi
  4081d4:	fcmovnbe st,st(4)
  4081d6:	mov    ebx,0xc087da96
  4081db:	repz das 
  4081dd:	hlt    
  4081de:	mov    ah,0x67
  4081e0:	sbb    ch,bl
  4081e2:	out    0x22,eax
  4081e4:	pop    edx
  4081e5:	adc    BYTE PTR [ebx+0xe4de006],0x99
  4081ec:	mov    esi,0xb2ba75db
  4081f1:	int3   
  4081f2:	bound  ebx,QWORD PTR [ebx-0xf26e79c]
  4081f8:	imul   edi
  4081fa:	mov    ecx,0x86e4e96b
  4081ff:	jbe    0x4081b0
  408201:	cmp    ebx,edx
  408203:	jmp    0x87561088
  408208:	pop    ebx
  408209:	jl     0x4081f4
  40820b:	jecxz  0x40825d
  40820d:	das    
  40820e:	sbb    BYTE PTR [edi],ah
  408210:	repz (bad) 
  408212:	push   esp
  408213:	ror    eax,cl
  408215:	dec    esi
  408216:	lods   al,BYTE PTR ds:[esi]
  408217:	inc    ebp
  408218:	call   0x78d108dc
  40821d:	jmp    0x5b092b2e
  408222:	enter  0x64b2,0x32
  408226:	jle    0x408267
  408228:	scas   al,BYTE PTR es:[edi]
  408229:	mov    al,ds:0xe41cf03c
  40822e:	fldenv [ebx-0x2c2cdd2e]
  408234:	daa    
  408235:	jbe    0x4081c3
  408237:	push   ecx
  408238:	out    dx,al
  408239:	cmp    al,0x78
  40823b:	jb     0x408233
  40823d:	sub    eax,ecx
  40823f:	jnp    0x40822e
  408241:	inc    eax
  408242:	retf   0xc600
  408245:	ss ds in eax,0x6f
  408249:	mov    eax,0x60753e99
  40824e:	push   esp
  40824f:	fnsave [edx+ebp*8+0x5bda2480]
  408256:	popf   
  408257:	loop   0x40822d
  408259:	xchg   edx,eax
  40825a:	cmp    BYTE PTR [esi+0x41edd3da],ch
  408260:	add    BYTE PTR [edx+0x4c025a94],cl
  408266:	dec    ebx
  408267:	xor    BYTE PTR [eax-0x32f187e0],0x6d
  40826e:	xchg   ecx,eax
  40826f:	mov    dh,0x5f
  408271:	or     eax,ecx
  408273:	sub    DWORD PTR [ebp-0x79040411],0x3647925c
  40827d:	test   BYTE PTR [ebx+0x54],dh
  408280:	pop    es
  408281:	xor    eax,0x7be10277
  408286:	pop    ebx
  408287:	cmp    DWORD PTR [edi+0x3f28a248],eax
  40828d:	ret    0x84d4
  408290:	sub    edx,edi
  408292:	jae    0x4082a3
  408294:	and    eax,DWORD PTR [ebx]
  408296:	inc    edx
  408297:	push   es
  408298:	sbb    ecx,DWORD PTR fs:[esp+ecx*1]
  40829c:	push   esp
  40829d:	adc    bh,bl
  40829f:	mov    bh,0x8
  4082a1:	out    0x9a,al
  4082a3:	fisttp QWORD PTR gs:[esi]
  4082a6:	xchg   esp,eax
  4082a7:	mov    esp,0xf122348b
  4082ac:	jnp    0x40823f
  4082ae:	fadd   st,st(0)
  4082b0:	loop   0x4082b0
  4082b2:	int3   
  4082b3:	pop    ss
  4082b4:	mov    edx,0x5a2f43c5
  4082b9:	mov    edi,0xfd5a57f6
  4082be:	adc    esp,DWORD PTR [ecx-0x7761dc46]
  4082c4:	and    eax,0x87d77036
  4082c9:	loope  0x408326
  4082cb:	sbb    eax,0xe50ba637
  4082d0:	sbb    BYTE PTR [ecx+0x12],dh
  4082d3:	jecxz  0x408285
  4082d5:	dec    ecx
  4082d6:	or     DWORD PTR [edx+0x62],ecx
  4082d9:	push   esp
  4082da:	mov    esp,0x6a20b25b
  4082df:	daa    
  4082e0:	add    ah,BYTE PTR [ebx]
  4082e2:	sbb    esp,ebp
  4082e4:	mov    ebx,0x16d33774
  4082e9:	xor    BYTE PTR [esi+0x6e],dl
  4082ec:	pop    es
  4082ed:	pop    esi
  4082ee:	lods   eax,DWORD PTR ds:[esi]
  4082ef:	adc    al,0x14
  4082f1:	inc    esi
  4082f2:	in     al,dx
  4082f3:	add    ecx,DWORD PTR [edi-0x1814a09f]
  4082f9:	inc    edi
  4082fa:	pusha  
  4082fb:	cmp    dh,BYTE PTR ds:0x288baf60
  408301:	ror    dh,0xd9
  408304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408305:	and    edi,DWORD PTR [ebx+0x37e91929]
  40830b:	and    al,BYTE PTR [ebx+0x33777c1d]
  408311:	push   edi
  408312:	out    dx,eax
  408313:	inc    eax
  408314:	push   0x9847a513
  408319:	inc    edx
  40831a:	dec    edx
  40831b:	sti    
  40831c:	fsub   st(6),st
  40831e:	stc    
  40831f:	mov    bl,0x49
  408321:	and    BYTE PTR [edx],al
  408323:	mov    al,ds:0xfc32dcb3
  408328:	call   0xe675:0x2412632f
  40832f:	bound  edx,QWORD PTR [ebp-0x3c]
  408332:	jnp    0x4082d1
  408334:	lods   eax,DWORD PTR ds:[esi]
  408335:	js     0x40838f
  408337:	mov    cl,0x50
  408339:	dec    esp
  40833a:	mov    bh,BYTE PTR [ecx]
  40833c:	inc    dl
  40833e:	jmp    0xfe75ca8e
  408343:	lods   eax,DWORD PTR ds:[esi]
  408344:	es push edi
  408346:	add    al,0xb6
  408348:	xchg   esi,eax
  408349:	bound  edi,QWORD PTR [ecx]
  40834b:	pop    esi
  40834c:	xchg   DWORD PTR [edx+edi*2],esi
  40834f:	les    edi,FWORD PTR [ebx-0x7c]
  408352:	mov    eax,0x360ae50
  408357:	push   ebp
  408358:	fsub   st,st(0)
  40835a:	(bad)  
  40835b:	mov    al,0x76
  40835d:	test   BYTE PTR [edi-0x4],ah
  408360:	pop    esp
  408361:	mov    bh,0xe3
  408363:	mov    ah,0x9f
  408365:	mov    ebp,DWORD PTR [esp+eax*8]
  408368:	adc    ebp,ebp
  40836a:	mov    ebx,0xc7e42514
  40836f:	cdq    
  408370:	mov    ebp,0x1831f627
  408375:	pop    ds
  408376:	aaa    
  408377:	ins    BYTE PTR es:[edi],dx
  408378:	sbb    eax,0x50728b88
  40837d:	(bad)  
  40837e:	arpl   WORD PTR [esi],ax
  408380:	dec    eax
  408381:	mov    ebx,0xd07f7d35
  408386:	inc    ecx
  408387:	pop    edx
  408388:	mov    bl,0x9
  40838a:	or     BYTE PTR [esi-0x18],cl
  40838d:	ins    DWORD PTR es:[edi],dx
  40838e:	push   0xffffffc8
  408390:	call   0xa36f726e
  408395:	dec    ecx
  408396:	adc    BYTE PTR [eax],bl
  408398:	mov    esp,edx
  40839a:	inc    edx
  40839b:	pop    ds
  40839c:	popf   
  40839d:	neg    BYTE PTR [edx+0x46]
  4083a0:	and    esi,DWORD PTR [ecx-0x1d]
  4083a3:	test   eax,0x5f9ea42c
  4083a8:	lock xor ebx,edx
  4083ab:	or     DWORD PTR [esi+0x29d8859d],0xfffffff4
  4083b2:	mov    ah,0x99
  4083b4:	call   0x6464:0xc7134ab4
  4083bb:	dec    edx
  4083bc:	loope  0x4083e5
  4083be:	xchg   ebp,eax
  4083bf:	call   0x9a01:0x857081d
  4083c6:	inc    edi
  4083c7:	push   0x3b
  4083c9:	int    0x18
  4083cb:	sar    BYTE PTR [eax],1
  4083cd:	lds    ebp,FWORD PTR [ebx]
  4083cf:	sahf   
  4083d0:	push   edi
  4083d1:	dec    esp
  4083d2:	jp     0x4083da
  4083d4:	ret    
  4083d5:	pslld  mm7,QWORD PTR [ecx]
  4083d8:	xabort 0xf
  4083db:	dec    edx
  4083dc:	(bad)  
  4083dd:	imul   ecx,DWORD PTR ds:0xc5cb982d,0x86f9fdda
  4083e7:	mov    ecx,0xd5aca9d9
  4083ec:	cld    
  4083ed:	add    ch,BYTE PTR [ebx+0x54]
  4083f0:	mov    ds,edx
  4083f2:	sub    esi,ebx
  4083f4:	or     edx,esi
  4083f6:	xor    eax,0xc4792e5d
  4083fb:	cdq    
  4083fc:	push   esp
  4083fd:	pop    esi
  4083fe:	jbe    0x4083de
  408400:	mov    ds:0x7e67bcf0,eax
  408405:	jb     0x408422
  408407:	inc    edi
  408408:	xchg   edi,eax
  408409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840a:	in     al,0x24
  40840c:	and    al,0x10
  40840e:	shr    DWORD PTR [edx+ebp*4+0x4d],0x39
  408413:	push   esp
  408414:	sub    BYTE PTR [ebp+0x38dc7c5],cl
  40841a:	sub    BYTE PTR [edi+0x7ec1416c],al
  408420:	and    eax,0xa39661e7
  408425:	test   BYTE PTR [esi],0xbc
  408428:	jo     0x408420
  40842a:	out    0xc6,al
  40842c:	mov    dh,0xa9
  40842e:	jg     0x408464
  408430:	clc    
  408431:	je     0x408466
  408433:	add    ah,BYTE PTR [edi-0x72]
  408436:	adc    bh,BYTE PTR [esi+0x64]
  408439:	stos   BYTE PTR es:[edi],al
  40843a:	push   es
  40843b:	in     eax,dx
  40843c:	inc    edx
  40843d:	test   eax,0x7b499029
  408442:	and    eax,0xe69d5f39
  408447:	add    ch,BYTE PTR ds:0xfac75fa2
  40844d:	xor    edi,DWORD PTR [eax]
  40844f:	and    BYTE PTR [edi],0xa1
  408452:	ja     0x4084ad
  408454:	cmp    edx,ebx
  408456:	dec    edx
  408457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408458:	arpl   sp,di
  40845a:	adc    eax,0xbcbf255b
  40845f:	clc    
  408460:	push   ds
  408461:	shl    DWORD PTR [ecx+0x4e0bae2],cl
  408467:	mov    eax,ds:0x4d22d101
  40846c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846d:	xor    DWORD PTR [esi-0x4d5e6128],edi
  408473:	xchg   ecx,eax
  408474:	push   0xc46cedf3
  408479:	mov    eax,ds:0x28999b33
  40847e:	retf   
  40847f:	add    al,0x50
  408481:	sub    DWORD PTR [ecx+0x5b],0xffffffb4
  408485:	aad    0xc
  408487:	mov    esp,0x301c17b5
  40848c:	mov    si,0xcc90
  408490:	ror    bl,cl
  408492:	cdq    
  408493:	mov    al,0x16
  408495:	repz inc edi
  408497:	lahf   
  408498:	and    cl,ch
  40849a:	adc    BYTE PTR [ebp+0x601dd7ff],dl
  4084a0:	ss shl ebp,cl
  4084a3:	hlt    
  4084a4:	sub    al,0x3a
  4084a6:	mov    eax,ds:0xc5de9d07
  4084ab:	push   edx
  4084ac:	jge    0x408444
  4084ae:	lds    edi,FWORD PTR [edx-0x3e]
  4084b1:	jns    0x408451
  4084b3:	les    edx,FWORD PTR [ebx+0x5ffa69bf]
  4084b9:	mov    ecx,0x3e89e804
  4084be:	cmp    al,BYTE PTR [ebx-0xf6b5cd]
  4084c4:	out    0xbc,al
  4084c6:	jo     0x408516
  4084c8:	add    BYTE PTR [edx-0xd],0x33
  4084cc:	fbstp  TBYTE PTR [ecx+0xaccfd02]
  4084d2:	or     DWORD PTR ds:[ebx-0x10],esp
  4084d6:	fbld   TBYTE PTR [ecx+0x3cc6298f]
  4084dc:	ficom  DWORD PTR [ebp+0x5c615d2c]
  4084e2:	fcomi  st,st(0)
  4084e4:	iret   
  4084e5:	fcom   QWORD PTR [ecx]
  4084e7:	test   BYTE PTR [edi+ebp*1-0x44d655a1],dh
  4084ee:	and    cl,BYTE PTR [ebx]
  4084f0:	xlat   BYTE PTR ds:[ebx]
  4084f1:	stc    
  4084f2:	dec    edx
  4084f3:	aam    0x2c
  4084f5:	pushf  
  4084f6:	rcl    BYTE PTR [edx-0x55d3e4ae],0x92
  4084fd:	xchg   ecx,eax
  4084fe:	xor    DWORD PTR [ecx-0x379980b0],esp
  408504:	sbb    ch,BYTE PTR [esp+esi*1]
  408507:	pop    ds
  408508:	fstp   QWORD PTR [eax+0x2b]
  40850b:	clc    
  40850c:	test   al,0xd4
  40850e:	test   DWORD PTR [edi],esp
  408510:	push   ecx
  408511:	or     eax,0xaea1b48a
  408516:	jg     0x4084d6
  408518:	cs inc ebx
  40851a:	loop   0x4084a8
  40851c:	mov    al,0x2b
  40851e:	pop    esi
  40851f:	popf   
  408520:	xchg   esi,eax
  408521:	daa    
  408522:	test   DWORD PTR [ecx],esi
  408524:	xchg   edi,eax
  408525:	push   ds
  408526:	lahf   
  408527:	sub    eax,DWORD PTR es:[esi-0x7d]
  40852b:	ds pop ds
  40852d:	aam    0xea
  40852f:	iret   
  408530:	add    al,0x21
  408532:	pusha  
  408533:	mov    ebx,esp
  408535:	dec    BYTE PTR [ecx-0x20237a55]
  40853b:	pop    esi
  40853c:	mov    al,BYTE PTR [eax-0x1d8ddb6c]
  408542:	bound  esi,QWORD PTR [edx]
  408544:	dec    BYTE PTR [ecx+ecx*8+0x4c]
  408548:	punpcklbw mm6,mm1
  40854b:	inc    ebx
  40854c:	mov    ch,0xb5
  40854e:	test   DWORD PTR [edx+eiz*2+0x36],ebp
  408552:	ret    0x37b2
  408555:	scas   eax,DWORD PTR es:[edi]
  408556:	xchg   ebp,eax
  408557:	add    al,0xd3
  408559:	cmp    ecx,esp
  40855b:	mov    dl,0xd
  40855d:	test   al,0x39
  40855f:	xchg   DWORD PTR [edx],esp
  408561:	sbb    eax,0xfb1aa974
  408566:	rol    BYTE PTR [eax],cl
  408568:	repnz cmp al,0xc8
  40856b:	jnp    0x40852a
  40856d:	cmp    eax,0xf93a1977
  408572:	sahf   
  408573:	retf   
  408574:	iret   
  408575:	cdq    
  408576:	mov    ds:0x16ad5eb5,al
  40857b:	js     0x408592
  40857d:	imul   edi,DWORD PTR [esi],0xffffff98
  408580:	jne    0x408507
  408582:	jp     0x4085b5
  408584:	adc    esi,DWORD PTR [edx-0x30e9cb5]
  40858a:	push   esi
  40858b:	pop    esi
  40858c:	xchg   ebx,eax
  40858d:	fidivr DWORD PTR [eax+0x2323f8c4]
  408593:	adc    ecx,DWORD PTR [ebx-0x33b36907]
  408599:	ins    BYTE PTR es:[edi],dx
  40859a:	or     dl,BYTE PTR [ecx+edi*8]
  40859d:	lods   eax,DWORD PTR ds:[esi]
  40859e:	loop   0x408525
  4085a0:	sbb    dl,BYTE PTR [edx-0x13]
  4085a3:	xchg   DWORD PTR [ebp+0x4e],ecx
  4085a6:	xor    al,BYTE PTR [edi]
  4085a8:	pop    ebp
  4085a9:	xchg   ecx,eax
  4085aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ab:	dec    edi
  4085ac:	xchg   esp,eax
  4085ad:	or     al,0xcc
  4085af:	jg     0x408597
  4085b1:	pop    edi
  4085b2:	xchg   DWORD PTR [ebx-0x250556e2],esp
  4085b8:	sub    bh,0x76
  4085bb:	out    dx,eax
  4085bc:	outs   dx,DWORD PTR ds:[esi]
  4085bd:	xchg   edi,eax
  4085be:	inc    ecx
  4085bf:	add    edx,0x79beab15
  4085c5:	jae    0x4085b5
  4085c7:	cmp    al,0xbb
  4085c9:	xlat   BYTE PTR ds:[ebx]
  4085ca:	je     0x408560
  4085cc:	inc    ebx
  4085cd:	in     eax,0x1
  4085cf:	mov    cl,0x5f
  4085d1:	jo     0xba1620b8
  4085d7:	push   ebp
  4085d8:	dec    eax
  4085d9:	(bad)  
  4085da:	xchg   edx,eax
  4085db:	push   edi
  4085dc:	imul   ecx,DWORD PTR [ecx],0x4e5a1fd4
  4085e2:	push   ecx
  4085e3:	pop    ebx
  4085e4:	adc    al,0x99
  4085e6:	push   esp
  4085e7:	pop    esi
  4085e8:	sti    
  4085e9:	push   esi
  4085ea:	and    DWORD PTR [ebx],eax
  4085ec:	fiadd  WORD PTR [eax+ebx*4+0xf0fa787]
  4085f3:	popf   
  4085f4:	jp     0x408590
  4085f6:	cmp    eax,0xce3a81ee
  4085fb:	ss daa 
  4085fd:	addr16 das 
  4085ff:	cmc    
  408600:	push   DWORD PTR [esi]
  408602:	and    al,0xf6
  408604:	mov    eax,0x82b41781
  408609:	jge    0x40862d
  40860b:	test   DWORD PTR [ebx+0x50],esi
  40860e:	setg   BYTE PTR [ebp-0x1b452922]
  408615:	sbb    ecx,ebp
  408617:	icebp  
  408618:	adc    al,0x6
  40861a:	(bad)  
  40861b:	push   ds
  40861c:	(bad)  
  40861d:	adc    ecx,ebp
  40861f:	xchg   edi,esi
  408621:	shl    DWORD PTR ds:0x93293009,0x5c
  408628:	retf   
  408629:	imul   eax,DWORD PTR [ecx],0xb713d2c5
  40862f:	jmp    0x40864d
  408631:	into   
  408632:	pop    edx
  408633:	mov    ah,0x1
  408635:	jb     0x408688
  408637:	push   0xfffffffe
  408639:	adc    ebp,esi
  40863b:	xlat   BYTE PTR ds:[ebx]
  40863c:	shr    BYTE PTR [ebx-0x6c466567],1
  408642:	arpl   WORD PTR [edx-0x7f],bp
  408645:	retf   
  408646:	push   ds
  408647:	sub    dl,BYTE PTR [esi]
  408649:	mov    cl,0xb2
  40864b:	lea    ebx,[esi+eax*4-0x2d]
  40864f:	sahf   
  408650:	cdq    
  408651:	and    cl,BYTE PTR [eax+0x2f]
  408654:	das    
  408655:	xor    edx,DWORD PTR [esi]
  408657:	jbe    0x4085da
  408659:	pop    eax
  40865a:	in     al,0x9c
  40865c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865d:	(bad)  
  40865e:	mov    WORD PTR [esi],fs
  408660:	into   
  408661:	xchg   edx,eax
  408662:	pop    eax
  408663:	push   ebp
  408664:	rol    DWORD PTR [ebx+edi*4-0x398a45e1],cl
  40866b:	ja     0x40865b
  40866d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40866e:	retf   0xf34f
  408671:	sahf   
  408672:	loope  0x4086dc
  408674:	or     ah,al
  408676:	ds hlt 
  408678:	mov    bh,0xfd
  40867a:	adc    esi,DWORD PTR ds:[ecx]
  40867d:	dec    ebp
  40867e:	and    DWORD PTR [esi-0x28],esp
  408681:	add    dl,BYTE PTR [esi]
  408683:	ror    BYTE PTR [ebx+0x7e],1
  408686:	fs sahf 
  408688:	mov    ds:0xba3bb240,al
  40868d:	scas   eax,DWORD PTR es:[edi]
  40868e:	sub    al,0xd9
  408690:	fnstcw WORD PTR [edx]
  408692:	sar    DWORD PTR [ebx],cl
  408694:	fistp  QWORD PTR [esi]
  408696:	call   0xbb15:0x4058bfa3
  40869d:	(bad)  
  40869f:	mov    WORD PTR [esi-0x11],es
  4086a2:	xchg   DWORD PTR [ecx+eax*1+0x2c6319e6],ebx
  4086a9:	aas    
  4086aa:	xor    al,0x97
  4086ac:	inc    esi
  4086ad:	xor    ebp,esp
  4086af:	mov    ebp,DWORD PTR [ebp+0x4925ce46]
  4086b5:	sub    al,0x7d
  4086b7:	js     0x40872d
  4086b9:	pop    ecx
  4086ba:	xor    ecx,edi
  4086bc:	arpl   WORD PTR [edi],ax
  4086be:	stc    
  4086bf:	fstp   DWORD PTR ds:0x5c9ec537
  4086c5:	fbstp  TBYTE PTR [edx-0x157978c8]
  4086cb:	xor    esp,DWORD PTR [ebp+0x44edf4c2]
  4086d1:	arpl   sp,sp
  4086d3:	mov    dh,0xb
  4086d5:	test   esi,ebx
  4086d7:	ss xchg ebp,eax
  4086d9:	xchg   ebp,eax
  4086da:	ins    BYTE PTR es:[edi],dx
  4086db:	scas   al,BYTE PTR es:[edi]
  4086dc:	push   0xffffff9d
  4086de:	push   cs
  4086df:	mov    BYTE PTR [esi-0x70],bh
  4086e2:	(bad)  
  4086e3:	cmp    cl,ah
  4086e5:	jb     0x4086e3
  4086e7:	rcr    DWORD PTR [edx-0x42af0da9],1
  4086ed:	rol    BYTE PTR ds:0x7955377a,0xde
  4086f4:	jmp    0x40869a
  4086f6:	mov    ebx,0xe9897692
  4086fb:	xor    eax,0xefc20612
  408701:	mov    esp,0xaff7d5b8
  408706:	ficomp DWORD PTR [eax]
  408708:	loop   0x408749
  40870a:	jns    0x40868f
  40870c:	iret   
  40870d:	aas    
  40870e:	and    eax,ebx
  408710:	ins    BYTE PTR es:[edi],dx
  408711:	fwait
  408712:	mov    cl,0xf7
  408714:	xchg   esp,eax
  408715:	rcr    DWORD PTR [edi-0xb],cl
  408718:	jb     0x40871f
  40871a:	jb     0x408765
  40871c:	mov    al,BYTE PTR [ecx]
  40871e:	test   al,0x8a
  408720:	lds    edx,FWORD PTR [edi+0x77]
  408723:	fstp   DWORD PTR [esi+0x9]
  408726:	pop    ebx
  408727:	mov    ebx,DWORD PTR ds:0x1878aea1
  40872d:	jl     0x408790
  40872f:	(bad)  
  408730:	pusha  
  408731:	or     DWORD PTR [edi],esi
  408733:	mov    dh,0x95
  408735:	push   DWORD PTR [edx+0x68ca108f]
  40873b:	hlt    
  40873c:	pushf  
  40873d:	pop    ss
  40873e:	shl    DWORD PTR [edi-0x475940f7],1
  408744:	jno    0x4086d1
  408746:	imul   edx,DWORD PTR ds:0x3f8f0b3,0x472a5375
  408750:	add    al,0xe8
  408752:	add    eax,0x9de8e79f
  408757:	jno    0x408718
  408759:	dec    ecx
  40875a:	call   0x1794:0xf0a96c94
  408761:	scas   al,BYTE PTR es:[edi]
  408762:	aaa    
  408763:	aad    0x28
  408765:	aad    0x61
  408767:	cmp    BYTE PTR [ebp-0x73ad8276],0x29
  40876e:	popf   
  40876f:	(bad)  
  408770:	mov    esp,0x7644d503
  408775:	push   ebp
  408776:	scas   al,BYTE PTR es:[edi]
  408777:	pop    edx
  408778:	xchg   ebp,eax
  408779:	fxch   st(2)
  40877b:	sub    bl,BYTE PTR [esp+edi*4+0x29d1a4b5]
  408782:	popf   
  408783:	popa   
  408784:	(bad)  
  408785:	out    0x96,eax
  408787:	push   cs
  408788:	xor    esp,DWORD PTR [si-0x49]
  40878c:	ret    0x5d39
  40878f:	sub    al,0x46
  408791:	dec    ebp
  408792:	and    bl,dh
  408794:	(bad)  
  408795:	lea    edx,[eax+0x6c4d9612]
  40879b:	in     eax,0x8e
  40879d:	sub    DWORD PTR [edx+0x10b3114a],esp
  4087a3:	cmp    ebp,DWORD PTR [esi-0x64]
  4087a6:	imul   ebp,DWORD PTR [esi],0xffffffa3
  4087a9:	data16 xor al,0x3c
  4087ac:	stos   DWORD PTR es:[edi],eax
  4087ad:	gs dec ebx
  4087af:	xor    eax,0x7b3c2d4b
  4087b4:	cmp    BYTE PTR [ebx-0x58804f3e],0x6e
  4087bb:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4087bd:	cdq    
  4087be:	sbb    esp,DWORD PTR [ecx+0x54]
  4087c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c2:	mov    ebx,0x7f26cf6
  4087c7:	sub    dh,BYTE PTR [ebx-0x12]
  4087ca:	lock lods eax,DWORD PTR ds:[esi]
  4087cc:	in     al,0x9e
  4087ce:	retf   0x21a0
  4087d1:	icebp  
  4087d2:	adc    DWORD PTR [ecx],esi
  4087d4:	lds    edi,FWORD PTR [edx+eax*1+0x4166a9af]
  4087db:	loopne 0x4087a7
  4087dd:	push   eax
  4087de:	jno    0x4087c4
  4087e0:	(bad)  [ebp+0xb]
  4087e3:	cmp    edx,esp
  4087e5:	pop    edx
  4087e6:	loopne 0x4087b1
  4087e8:	pushf  
  4087e9:	jmp    0x4b90:0x3f1212ca
  4087f0:	xchg   BYTE PTR [ebx-0x62],bh
  4087f3:	jge    0x40880d
  4087f5:	inc    esi
  4087f6:	stos   DWORD PTR es:[edi],eax
  4087f7:	outs   dx,DWORD PTR ds:[esi]
  4087f8:	jg     0x4087ef
  4087fa:	push   ebp
  4087fb:	pop    ebx
  4087fc:	mov    esi,fs
  4087fe:	inc    ecx
  4087ff:	mov    eax,ds:0xb45b6168
  408804:	rcr    BYTE PTR [edx],cl
  408806:	sbb    DWORD PTR [ecx],esp
  408808:	push   es
  408809:	and    eax,0x27ed5d0
  40880e:	xor    BYTE PTR [ecx-0x7],bh
  408811:	pop    ds
  408812:	addr16 mov ecx,0xc6484a64
  408818:	or     eax,ebp
  40881a:	aam    0xb
  40881c:	rcl    DWORD PTR [edx-0x36d6cea6],cl
  408822:	(bad)  
  408823:	dec    ebp
  408824:	rep stos BYTE PTR es:[edi],al
  408826:	push   0x47
  408828:	out    0x36,eax
  40882a:	sub    bl,ah
  40882c:	sti    
  40882d:	add    edi,DWORD PTR ds:0xef699504
  408833:	popf   
  408834:	shl    DWORD PTR [ebp-0x31],1
  408837:	lods   al,BYTE PTR ds:[esi]
  408838:	push   eax
  408839:	fs in  eax,0xb5
  40883c:	test   DWORD PTR [ebx+0x56],esp
  40883f:	faddp  st(0),st
  408841:	xor    edx,DWORD PTR [ebx+0x25]
  408844:	jb     0x408894
  408846:	stos   DWORD PTR es:[edi],eax
  408847:	clc    
  408848:	rep movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  40884b:	scas   eax,DWORD PTR es:[edi]
  40884c:	adc    al,al
  40884e:	add    BYTE PTR [edi+0x1f1fb5d7],bl
  408854:	cmp    BYTE PTR [eax+ebx*2+0x16],0x56
  408859:	mov    bh,0xbf
  40885b:	dec    ebp
  40885c:	ret    
  40885d:	xor    ecx,0x30
  408860:	xchg   BYTE PTR [esi+0x3d],bh
  408863:	das    
  408864:	push   eax
  408865:	inc    ebx
  408866:	sub    eax,0xfff8f594
  40886b:	clc    
  40886c:	push   edi
  40886d:	test   eax,0xbb8c8873
  408872:	jge    0x4088c9
  408874:	ins    BYTE PTR es:[edi],dx
  408875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408876:	enter  0xcd23,0xe7
  40887a:	repz sbb edi,DWORD PTR [edx+0x3a]
  40887e:	out    0xce,al
  408880:	stc    
  408881:	add    BYTE PTR [ecx+ebp*4+0x75],ah
  408885:	loope  0x408862
  408887:	mov    edi,0xa8ef929a
  40888c:	frstor [eax+0x3e]
  40888f:	xchg   ecx,eax
  408890:	and    DWORD PTR [esi],0xbc11be21
  408896:	xchg   esi,eax
  408897:	sbb    BYTE PTR [ebx-0x12c15b82],0xcf
  40889e:	or     ch,BYTE PTR [ecx-0x5dcb07fe]
  4088a4:	jge    0x40887d
  4088a6:	mov    ch,0x50
  4088a8:	dec    ebp
  4088a9:	scas   al,BYTE PTR es:[edi]
  4088aa:	pop    ecx
  4088ab:	ror    BYTE PTR [edx+edx*4],cl
  4088ae:	cwde   
  4088af:	add    esp,eax
  4088b1:	mov    dl,0xc
  4088b3:	ins    BYTE PTR es:[edi],dx
  4088b4:	scas   eax,DWORD PTR es:[edi]
  4088b5:	jne    0x40890d
  4088b7:	jbe    0x408865
  4088b9:	outs   dx,DWORD PTR ds:[esi]
  4088ba:	aad    0x16
  4088bc:	test   esp,0xfa0faed4
  4088c2:	mov    edx,0x1ebd0a78
  4088c7:	and    al,0x1b
  4088c9:	jae    0x408871
  4088cb:	daa    
  4088cc:	xor    ah,BYTE PTR ds:0x1fabf2e7
  4088d2:	mov    esp,0x4a329742
  4088d7:	rol    edi,1
  4088d9:	add    esp,ecx
  4088db:	ins    DWORD PTR es:[edi],dx
  4088dc:	retf   0xb314
  4088df:	call   0x27b10931
  4088e4:	cmp    esp,ecx
  4088e6:	mov    ds:0x11988c0f,eax
  4088eb:	push   esi
  4088ec:	(bad)  
  4088ed:	out    0x51,al
  4088ef:	pop    eax
  4088f0:	mov    ds:0x84c1be8a,eax
  4088f5:	in     eax,dx
  4088f6:	jl     0x408930
  4088f8:	cmp    DWORD PTR [edx+ebx*8-0x36],ebp
  4088fc:	push   eax
  4088fd:	push   cs
  4088fe:	jo     0x40895f
  408900:	push   edi
  408901:	pop    ecx
  408902:	mov    ebp,0x85126916
  408907:	add    ebx,ecx
  408909:	mov    ds:0xe3a081ab,al
  40890e:	inc    ebx
  40890f:	mov    ecx,0x2f11349d
  408914:	aas    
  408915:	sbb    dh,BYTE PTR [ebp-0x3d]
  408918:	xchg   edx,eax
  408919:	push   ss
  40891a:	repz mov ch,0x54
  40891d:	xchg   edi,eax
  40891e:	add    BYTE PTR [esi-0x7d],bh
  408921:	and    BYTE PTR [eax],ch
  408923:	mov    edi,0x449472a1
  408928:	or     DWORD PTR [esi+0x1f08095f],edx
  40892e:	xchg   edi,ecx
  408930:	les    ebp,FWORD PTR [esi+0x646a59c7]
  408936:	cld    
  408937:	rcl    DWORD PTR [eax],0x6c
  40893a:	div    WORD PTR [ebp-0x4b66d0e5]
  408941:	push   ecx
  408942:	clc    
  408943:	ja     0x4088e6
  408945:	cmp    al,0x6f
  408947:	sub    al,0x19
  408949:	mov    ch,0x11
  40894b:	and    esp,edi
  40894d:	call   0x9e3a:0x37ca8612
  408954:	add    BYTE PTR [ebp+0x420d6738],bh
  40895a:	fs dec edi
  40895c:	aad    0x3c
  40895e:	test   ah,0xe0
  408961:	ins    DWORD PTR es:[edi],dx
  408962:	mov    edi,0x59603673
  408967:	scas   al,BYTE PTR es:[edi]
  408968:	or     bl,BYTE PTR [ebx+0x1a2cbc22]
  40896e:	add    al,0xa4
  408970:	mov    dh,BYTE PTR [edx+ebp*1]
  408973:	inc    esi
  408974:	clc    
  408975:	stos   BYTE PTR es:[edi],al
  408976:	mov    ds:0x31dda603,al
  40897b:	cwde   
  40897c:	retf   
  40897d:	mov    bl,0x94
  40897f:	(bad)  
  408980:	rol    BYTE PTR [ecx],0x2d
  408983:	jl     0x408a00
  408985:	cld    
  408986:	lods   al,BYTE PTR ds:[esi]
  408988:	and    BYTE PTR [esi+0x60521b9e],bh
  40898e:	xchg   BYTE PTR [ebp+0x19885cc9],ch
  408994:	xchg   esi,eax
  408995:	loope  0x4089b9
  408997:	jge    0x408948
  408999:	sbb    edx,DWORD PTR [ecx+0x23c3a038]
  40899f:	cmp    eax,0xc49dded2
  4089a4:	cld    
  4089a5:	inc    ebp
  4089a6:	xlat   BYTE PTR ds:[ebx]
  4089a7:	mov    ebp,0x376755e0
  4089ac:	hlt    
  4089ad:	popf   
  4089ae:	jae    0x4089ae
  4089b0:	popa   
  4089b1:	xor    BYTE PTR [edx],dl
  4089b3:	jle    0x408959
  4089b5:	out    0xa1,al
  4089b7:	test   al,0x16
  4089b9:	adc    eax,ebx
  4089bb:	jno    0x408a37
  4089bd:	mov    al,ds:0xe6462902
  4089c2:	push   ds
  4089c3:	test   al,0x2e
  4089c5:	lods   al,BYTE PTR ds:[esi]
  4089c6:	popa   
  4089c7:	add    ebp,DWORD PTR [ecx+eax*1]
  4089ca:	mov    ch,BYTE PTR [edx+0x161eb520]
  4089d0:	rol    DWORD PTR [eax+0x69],cl
  4089d3:	div    BYTE PTR [ebp+eiz*4-0x25885fda]
  4089da:	push   eax
  4089db:	mov    edx,0x153429c8
  4089e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089e1:	stos   BYTE PTR es:[edi],al
  4089e2:	neg    DWORD PTR [eax+0x46332cc9]
  4089e8:	ret    0x6833
  4089eb:	std    
  4089ec:	push   0xbae461b4
  4089f1:	mov    DWORD PTR [edi+0x7c60891e],ecx
  4089f7:	call   0x26804404
  4089fc:	or     al,0x25
  4089fe:	jno    0x408a63
  408a00:	jle    0x4089b7
  408a02:	mov    es,WORD PTR [esi]
  408a04:	into   
  408a05:	adc    al,0x56
  408a07:	inc    esp
  408a08:	gs out dx,eax
  408a0a:	xchg   esi,eax
  408a0b:	and    BYTE PTR [ecx+0x2e],cl
  408a0e:	mov    ah,0x5f
  408a10:	cmp    eax,0x90e71b36
  408a15:	and    edi,DWORD PTR [esi-0x1fa106e]
  408a1b:	jae    0x408a8b
  408a1d:	mov    dl,0xb6
  408a1f:	add    al,0x66
  408a21:	ins    DWORD PTR es:[edi],dx
  408a22:	cli    
  408a23:	xchg   ebx,eax
  408a24:	fst    QWORD PTR [esp+ecx*2]
  408a27:	mov    edx,0x183f9fa8
  408a2c:	loopne 0x408a9e
  408a2e:	adc    al,0x85
  408a31:	xchg   ebx,eax
  408a32:	add    eax,0xc6c4436a
  408a37:	inc    eax
  408a38:	pop    edx
  408a39:	mov    bl,0x91
  408a3b:	cmp    al,BYTE PTR [eax+0x353a03cb]
  408a41:	mov    fs,esp
  408a43:	cmp    ebp,edi
  408a45:	mov    ah,0x4c
  408a47:	push   ebp
  408a48:	iret   
  408a49:	test   BYTE PTR [edi],0xe5
  408a4c:	ror    DWORD PTR [esi],1
  408a4e:	fwait
  408a4f:	and    dl,BYTE PTR [esi+0x58af4c86]
  408a55:	stc    
  408a56:	out    0x42,eax
  408a58:	mov    ebp,0xc6cbefb7
  408a5d:	xlat   BYTE PTR ds:[ebx]
  408a5e:	fcomp  DWORD PTR [edi-0xd]
  408a61:	int3   
  408a62:	dec    ebp
  408a63:	or     DWORD PTR [ebp-0x6f],0x7e1a652
  408a6a:	xor    eax,0xd04373c9
  408a6f:	mov    bl,BYTE PTR [ecx+0x3837283]
  408a75:	sub    ebp,DWORD PTR [edi+ebp*1]
  408a78:	in     eax,0xcd
  408a7a:	xchg   edi,eax
  408a7b:	scas   al,BYTE PTR es:[edi]
  408a7c:	shr    BYTE PTR [esi+0x5c3a15a6],0x61
  408a83:	retf   0xa7f
  408a86:	jmp    0xc6fdfc52
  408a8b:	sbb    esi,DWORD PTR [eax-0x40]
  408a8e:	push   ss
  408a8f:	imul   esi,DWORD PTR [ecx+edi*2-0x585f8d7f],0x3c4e3934
  408a9a:	sti    
  408a9b:	xchg   ecx,eax
  408a9c:	call   0x102ce8d8
  408aa1:	outs   dx,DWORD PTR ds:[esi]
  408aa2:	mov    ch,0x5
  408aa4:	inc    eax
  408aa5:	add    BYTE PTR [edx],0xd7
  408aa8:	xchg   edx,eax
  408aa9:	inc    ebp
  408aaa:	mul    DWORD PTR [esp+edx*4+0x115dd16f]
  408ab1:	dec    edi
  408ab2:	xchg   edi,eax
  408ab3:	sar    DWORD PTR [ebx+0x6d380d45],0x73
  408aba:	iret   
  408abb:	cld    
  408abc:	pop    esi
  408abd:	bound  ecx,QWORD PTR [edi+0x5784ef63]
  408ac3:	and    ch,BYTE PTR [esi+0x4]
  408ac6:	xor    BYTE PTR [ebx-0x3a],0x78
  408aca:	dec    eax
  408acb:	fs pop esp
  408acd:	push   ebx
  408ace:	pop    ebx
  408acf:	test   eax,0xbe7060e7
  408ad4:	xlat   BYTE PTR ds:[ebx]
  408ad5:	pop    eax
  408ad6:	data16 xchg BYTE PTR [edi+0x19],al
  408ada:	mov    al,ds:0x4869d900
  408adf:	aaa    
  408ae0:	push   ebp
  408ae1:	js     0x408aeb
  408ae3:	xchg   ebx,eax
  408ae4:	ja     0x408ad0
  408ae6:	adc    DWORD PTR [edi-0x26],ebp
  408ae9:	inc    ebp
  408aea:	push   ss
  408aeb:	mov    bh,0x9f
  408aed:	div    BYTE PTR [eax+esi*4+0x54]
  408af1:	cmp    ah,BYTE PTR [eax+ecx*8]
  408af4:	dec    eax
  408af5:	cmp    eax,0xed7df40c
  408afa:	or     BYTE PTR [esi+ebx*8],bl
  408afd:	iret   
  408afe:	sub    al,0x92
  408b00:	inc    edx
  408b01:	fcom   DWORD PTR [esi+0x24ecd2a2]
  408b07:	mov    edi,0x5f2535ad
  408b0c:	sti    
  408b0d:	ds jge 0x408aa6
  408b10:	push   ebp
  408b11:	sti    
  408b12:	fisub  DWORD PTR [edi+0x70]
  408b15:	rol    BYTE PTR [eax],0x3c
  408b18:	jmp    0x6fab:0x702be07d
  408b1f:	ins    DWORD PTR es:[edi],dx
  408b20:	xlat   BYTE PTR ds:[ebx]
  408b21:	jle    0x408b54
  408b23:	or     BYTE PTR ds:0x9a9408be,dl
  408b29:	popa   
  408b2a:	sti    
  408b2b:	jg     0x408b37
  408b2d:	pop    ss
  408b2e:	push   esp
  408b2f:	inc    ecx
  408b30:	pop    edx
  408b31:	xchg   ecx,eax
  408b32:	sub    esi,edi
  408b34:	jne    0x408b54
  408b36:	xchg   DWORD PTR [edi-0x42],ecx
  408b39:	jmp    0xac880e8e
  408b3e:	push   esp
  408b3f:	jb     0x408b80
  408b41:	adc    eax,0xa0d2427
  408b46:	test   eax,0xca469a4a
  408b4b:	(bad)  
  408b4c:	and    al,0x56
  408b4e:	je     0x408bb4
  408b50:	jecxz  0x408af2
  408b52:	fimul  WORD PTR [esi]
  408b54:	enter  0x4e68,0x56
  408b58:	es stc 
  408b5a:	xchg   edi,eax
  408b5b:	sub    edi,esi
  408b5d:	sbb    bl,bh
  408b5f:	fbld   TBYTE PTR [ebx-0x4c]
  408b62:	mov    al,ds:0xd6199859
  408b67:	pusha  
  408b68:	arpl   WORD PTR [esi],cx
  408b6a:	dec    ebp
  408b6b:	enter  0xc8b7,0x2c
  408b6f:	mov    ds:0xbdb44919,eax
  408b74:	or     eax,esp
  408b76:	out    dx,al
  408b77:	pop    edx
  408b78:	inc    eax
  408b79:	xor    al,0xbc
  408b7b:	out    dx,al
  408b7c:	mov    ds:0xcbc313a5,al
  408b81:	rol    DWORD PTR [ebp-0x68c7d521],1
  408b87:	in     al,dx
  408b88:	sbb    ebp,ebx
  408b8a:	pop    esp
  408b8b:	clc    
  408b8c:	jg     0x408b87
  408b8e:	lds    ecx,FWORD PTR [ecx]
  408b90:	ss pop ebp
  408b92:	cmp    BYTE PTR es:[ebx-0x34b20cea],bl
  408b99:	pop    ebp
  408b9a:	lock fdivr DWORD PTR [esi-0x51]
  408b9e:	xchg   DWORD PTR [edx],ecx
  408ba0:	mov    ds:0x28905cf2,eax
  408ba5:	inc    DWORD PTR [esi]
  408ba7:	jne    0x408b96
  408ba9:	iret   
  408baa:	call   0x72e8:0x92cd32fd
  408bb1:	mov    BYTE PTR [esi],ah
  408bb3:	jae    0x408c31
  408bb5:	jns    0x408b56
  408bb7:	mov    cl,0xed
  408bb9:	pop    ebx
  408bba:	mov    esi,0xcd77fa97
  408bbf:	js     0x408b76
  408bc1:	cmp    al,0x4e
  408bc3:	imul   ecx,DWORD PTR [esi+0x1bc100a1],0x5e
  408bca:	test   al,0x8e
  408bcc:	bound  esp,QWORD PTR [ecx-0x57]
  408bcf:	cmp    edi,eax
  408bd1:	std    
  408bd2:	pop    eax
  408bd3:	add    al,BYTE PTR [edi-0xc]
  408bd6:	adc    edx,DWORD PTR [ebx]
  408bd8:	je     0x408bcc
  408bda:	and    ch,0xf6
  408bdd:	pusha  
  408bde:	(bad)  
  408bdf:	(bad)  [edi+0x3f]
  408be2:	fs xchg edi,eax
  408be4:	xor    dh,BYTE PTR [esi]
  408be6:	and    cl,BYTE PTR [edx-0x16]
  408be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bea:	mov    edx,0x7315b03e
  408bef:	repnz ror BYTE PTR [esp+ecx*2],cl
  408bf3:	xchg   ebx,eax
  408bf4:	adc    BYTE PTR [edx+0x40b4bd3e],0x73
  408bfb:	add    bl,BYTE PTR [eax+0x20]
  408bfe:	mov    al,ds:0x88b1d046
  408c03:	ins    DWORD PTR es:[edi],dx
  408c04:	xor    eax,0xd48b944c
  408c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c0a:	push   cs
  408c0b:	outs   dx,BYTE PTR ds:[esi]
  408c0c:	or     eax,0xf91f1943
  408c11:	iret   
  408c12:	add    al,0x47
  408c14:	ins    DWORD PTR es:[di],dx
  408c16:	pop    edx
  408c17:	neg    DWORD PTR [esi]
  408c19:	pop    ecx
  408c1a:	cmp    ecx,DWORD PTR [ecx-0x63c17e29]
  408c20:	dec    esi
  408c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c22:	sbb    eax,0x1807c3d6
  408c27:	jle    0x408c15
  408c29:	jg     0x408bb2
  408c2b:	add    DWORD PTR [ebp-0x679872b1],ebp
  408c31:	jbe    0x408c64
  408c33:	inc    edi
  408c34:	(bad)  
  408c36:	add    ah,bl
  408c38:	out    dx,al
  408c39:	jo     0x408c53
  408c3b:	inc    ecx
  408c3c:	mov    bl,0xbc
  408c3e:	mov    ebx,DWORD PTR [esi+0x34e47e6c]
  408c44:	mov    edi,0x75c530ce
  408c49:	repz jg 0x408cca
  408c4c:	test   al,0xbf
  408c4e:	dec    ecx
  408c4f:	mov    ds:0x943c7c20,al
  408c54:	mov    DWORD PTR [ebp-0xd367cd3],ebp
  408c5a:	mov    dl,0xb5
  408c5c:	ja     0x408ca3
  408c5e:	add    al,BYTE PTR [ecx-0x7fc30da7]
  408c64:	(bad)  
  408c65:	jle    0x408ce6
  408c67:	cdq    
  408c68:	pop    eax
  408c69:	cmp    eax,0x383dfb09
  408c6e:	leave  
  408c6f:	xor    al,0x43
  408c71:	mov    ebx,0xfa815cb2
  408c76:	sub    BYTE PTR [esi+0x46abb9a2],bl
  408c7c:	add    DWORD PTR [ebx-0x50],0x6d
  408c80:	into   
  408c81:	in     al,dx
  408c82:	fwait
  408c83:	sbb    BYTE PTR ds:0x319d97b9,0x47
  408c8a:	sbb    al,0xee
  408c8c:	loope  0x408c31
  408c8e:	test   BYTE PTR [edi+esi*8-0x74eaa30e],ah
  408c95:	fisubr DWORD PTR [ecx+0x1dea5fcb]
  408c9b:	test   dh,0xf1
  408c9e:	mov    edi,0x5718eb6f
  408ca3:	test   BYTE PTR [ebp-0x4ed9fe49],al
  408ca9:	pcmpeqb mm5,mm4
  408cac:	adc    dh,BYTE PTR [edx+0x33]
  408caf:	adc    ecx,esp
  408cb1:	not    BYTE PTR [ecx+0x4d]
  408cb4:	jne    0x408c8a
  408cb6:	int3   
  408cb7:	and    al,cl
  408cb9:	xchg   esi,eax
  408cba:	sti    
  408cbb:	pop    ss
  408cbc:	and    cl,BYTE PTR [ebx]
  408cbe:	retf   
  408cbf:	adc    eax,0x1c003815
  408cc4:	push   ds
  408cc5:	aad    0x89
  408cc7:	sub    eax,0x3c933171
  408ccc:	(bad)  
  408ccd:	xchg   edi,eax
  408cce:	push   esi
  408ccf:	xor    eax,0xf252ed6e
  408cd4:	std    
  408cd5:	mov    eax,0xfa3112a6
  408cda:	ins    DWORD PTR es:[edi],dx
  408cdb:	jmp    0x6a19117c
  408ce0:	leave  
  408ce1:	push   0x5a102206
  408ce6:	sbb    DWORD PTR [edi-0x7d3feab4],0xd
  408ced:	imul   eax,DWORD PTR [ebx+eiz*4+0x62],0xffffffb7
  408cf2:	adc    eax,0x2aa7811b
  408cf7:	xchg   ebx,eax
  408cf8:	and    dh,ch
  408cfa:	pushf  
  408cfb:	clc    
  408cfc:	ins    BYTE PTR es:[edi],dx
  408cfd:	adc    ebp,DWORD PTR [esp+ecx*2-0x29]
  408d01:	into   
  408d02:	and    al,0xd2
  408d04:	(bad)  
  408d06:	pop    es
  408d07:	icebp  
  408d08:	sub    ebx,DWORD PTR [edi]
  408d0a:	bt     DWORD PTR [esi-0x669c3fa3],0x7f
  408d12:	push   ebx
  408d13:	pop    ebx
  408d14:	test   eax,0x463f087f
  408d19:	xor    BYTE PTR [edi],dh
  408d1b:	push   esp
  408d1c:	aaa    
  408d1d:	jo     0x408cb1
  408d1f:	mov    esi,DWORD PTR [ebx+0x1c]
  408d22:	mov    edi,0xbf696efe
  408d27:	push   esi
  408d28:	stos   DWORD PTR es:[edi],eax
  408d29:	sbb    DWORD PTR [edi-0x19],ebp
  408d2c:	jle    0x408d47
  408d2e:	mov    ebp,0x8756bcc3
  408d33:	jg     0x408d2a
  408d35:	je     0x408d5d
  408d37:	jge    0x408d6f
  408d39:	mov    esp,0x89298513
  408d3e:	not    BYTE PTR [esi-0x400f5ec4]
  408d44:	xor    esp,eax
  408d46:	xchg   ebx,eax
  408d47:	mov    dl,0x78
  408d49:	mov    esi,0x56944d87
  408d4e:	inc    esp
  408d4f:	mov    bh,0x68
  408d51:	mov    ecx,0xd0a9a157
  408d56:	xchg   esi,eax
  408d57:	xchg   edi,ebp
  408d59:	adc    ch,BYTE PTR [edi-0x4]
  408d5c:	ror    DWORD PTR [edi+0x6a],1
  408d5f:	out    0x9a,eax
  408d61:	stc    
  408d62:	mov    edx,es
  408d64:	pop    ebp
  408d65:	jmp    0x7835bb13
  408d6a:	fstp   QWORD PTR [esi-0x80]
  408d6d:	mov    ah,0x5f
  408d6f:	fsub   DWORD PTR [ebx+0x50]
  408d72:	fstp   DWORD PTR [esi+ebx*2-0x51]
  408d76:	(bad)  
  408d77:	push   esi
  408d78:	in     eax,0xf4
  408d7a:	js     0x408d12
  408d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d7d:	mov    ss,edx
  408d7f:	push   ss
  408d80:	jne    0x408d38
  408d82:	mov    bl,0xeb
  408d84:	mov    ch,0x67
  408d86:	sub    eax,eax
  408d88:	frstor ds:0x658637cd
  408d8e:	push   0x7058ad82
  408d93:	mov    es,WORD PTR [edx+0x2bc5eb78]
  408d99:	mov    ch,0xba
  408d9b:	pop    ebp
  408d9c:	xchg   esi,eax
  408d9d:	push   ds
  408d9e:	(bad)  
  408da0:	sub    BYTE PTR [ebp-0x5b5f10cb],bl
  408da6:	nop
  408da7:	jbe    0x408d4f
  408da9:	cmp    eax,0xaf52a103
  408dae:	enter  0x6103,0x4e
  408db2:	aaa    
  408db3:	dec    esp
  408db4:	ins    DWORD PTR es:[edi],dx
  408db5:	jecxz  0x408e07
  408db7:	push   ebx
  408db8:	cmp    bh,0x87
  408dbb:	scas   eax,DWORD PTR es:[edi]
  408dbc:	mov    ecx,0xd4a8a53f
  408dc1:	js     0x408e1d
  408dc3:	stc    
  408dc4:	cmc    
  408dc5:	push   0x54
  408dc7:	out    0x2e,eax
  408dc9:	mov    WORD PTR [edx+0x7f],fs
  408dcc:	sub    DWORD PTR [esi-0x4],0x2252d5bd
  408dd3:	push   0x40
  408dd5:	in     al,dx
  408dd6:	add    DWORD PTR [edx+ebp*1],ebp
  408dd9:	lea    edx,[ecx+0x3a3db679]
  408ddf:	mov    ch,0xfe
  408de1:	retf   
  408de2:	xor    BYTE PTR [ebx],ch
  408de4:	ret    
  408de5:	shr    DWORD PTR [ebx+0x21c7de29],0xda
  408dec:	rol    DWORD PTR [esi],0x5f
  408def:	clc    
  408df0:	inc    ebp
  408df1:	mov    ebx,0x408874b7
  408df6:	out    0xdf,eax
  408df8:	jmp    0x4f4e:0x45e58975
  408dff:	sbb    ebx,0xffffff92
  408e02:	shr    al,1
  408e04:	cmp    eax,0x603889dd
  408e09:	jno    0x408dce
  408e0b:	ja     0x408da7
  408e0d:	cmp    al,0x91
  408e0f:	in     eax,dx
  408e10:	je     0x408dca
  408e12:	test   al,0x8b
  408e14:	mov    BYTE PTR [edx+ecx*2-0x55ef756d],cl
  408e1b:	repnz aam 0x8d
  408e1e:	or     edi,DWORD PTR [edx-0x6c]
  408e21:	ret    0x1fd5
  408e24:	push   ecx
  408e25:	jmp    FWORD PTR [edx+ecx*8]
  408e28:	shl    BYTE PTR ds:[ebp+0x46a71790],0x6c
  408e30:	inc    ebx
  408e31:	inc    ebp
  408e32:	(bad)  
  408e33:	xchg   edx,eax
  408e34:	popf   
  408e35:	outs   dx,BYTE PTR ds:[esi]
  408e36:	mov    esi,0xfbf201
  408e3b:	js     0x408e1d
  408e3d:	sti    
  408e3e:	loope  0x408eb5
  408e40:	imul   esp,edx,0xffffff8f
  408e43:	lea    edx,[ebx+ecx*2-0x65]
  408e47:	sbb    BYTE PTR [ebp-0x30],dh
  408e4a:	adc    al,0x94
  408e4c:	add    edx,ebp
  408e4e:	sub    BYTE PTR ds:0xaa32db73,dh
  408e54:	mov    ss,WORD PTR [edx]
  408e56:	sub    dh,ah
  408e58:	(bad)  
  408e59:	inc    eax
  408e5b:	sbb    DWORD PTR [edi+0x1c],esp
  408e5e:	jle    0x408e9d
  408e60:	jb     0x408e4d
  408e62:	pop    ebx
  408e63:	lock div eax
  408e66:	jmp    0x4136:0x8484fdb6
  408e6d:	inc    eax
  408e6e:	mov    eax,ds:0xcbba7daf
  408e73:	lods   eax,DWORD PTR ds:[esi]
  408e74:	mov    al,BYTE PTR [edi-0x45]
  408e77:	mov    ch,0x96
  408e79:	mov    edx,DWORD PTR [edx+0x13982cff]
  408e7f:	mov    ecx,0xcbb1ab4c
  408e84:	sub    ch,BYTE PTR [ecx]
  408e86:	nop
  408e87:	lods   al,BYTE PTR ds:[esi]
  408e88:	sbb    DWORD PTR [ebp-0x7ff5f0ab],esi
  408e8e:	mov    bh,0x5f
  408e90:	retf   
  408e91:	jg     0x408e22
  408e93:	pop    eax
  408e94:	mov    dl,0xb9
  408e96:	in     eax,dx
  408e97:	out    dx,eax
  408e98:	stc    
  408e99:	and    esp,DWORD PTR [esi]
  408e9b:	mov    dh,0xe8
  408e9d:	adc    ch,BYTE PTR [eax-0x5a]
  408ea0:	sbb    BYTE PTR [edi],bl
  408ea2:	test   BYTE PTR [ebx-0xf3ef1d],0x72
  408ea9:	fiadd  WORD PTR [eax-0x54d7938a]
  408eaf:	cwde   
  408eb0:	icebp  
  408eb1:	cld    
  408eb2:	out    dx,eax
  408eb3:	xchg   edx,ebp
  408eb5:	dec    ebx
  408eb6:	jmp    0x9e07:0xc291b212
  408ebd:	mov    ebx,0xe5503f6b
  408ec2:	sbb    esi,DWORD PTR [esi+0x5c]
  408ec5:	jne    0x408f1c
  408ec7:	inc    ebx
  408ec8:	imul   eax,DWORD PTR [edi-0x31],0x54
  408ecc:	lods   eax,DWORD PTR ds:[esi]
  408ecd:	sub    bl,BYTE PTR [ebx-0x1fb97fb0]
  408ed3:	push   ss
  408ed4:	outs   dx,BYTE PTR ds:[esi]
  408ed5:	std    
  408ed6:	dec    ebx
  408ed7:	cdq    
  408ed8:	push   eax
  408ed9:	dec    ebp
  408eda:	xchg   ebx,eax
  408edb:	cmp    ch,0x31
  408ede:	jb     0x408f0d
  408ee0:	or     dl,bl
  408ee2:	push   ecx
  408ee3:	and    bh,bl
  408ee5:	or     esi,DWORD PTR [esi]
  408ee7:	jns    0x408f13
  408ee9:	icebp  
  408eea:	ins    DWORD PTR es:[edi],dx
  408eeb:	pusha  
  408eec:	popf   
  408eed:	mov    ch,0x7e
  408eef:	add    ch,bh
  408ef1:	in     eax,0x2a
  408ef3:	xchg   ebp,eax
  408ef4:	xchg   ecx,eax
  408ef5:	sub    al,0x29
  408ef7:	shr    BYTE PTR [edx],0x7c
  408efa:	fisub  WORD PTR [edx]
  408efc:	xor    ebp,ebp
  408efe:	pusha  
  408eff:	frstor ds:[eax]
  408f02:	mov    esp,DWORD PTR [eax+0x69]
  408f05:	fwait
  408f06:	or     eax,0x7c8dacaf
  408f0b:	(bad)  
  408f0c:	xchg   edi,eax
  408f0d:	daa    
  408f0e:	test   al,0x62
  408f10:	add    DWORD PTR [ebp+0x874adcd],ebx
  408f16:	ror    BYTE PTR [ebx+ecx*1-0x74],1
  408f1a:	dec    eax
  408f1b:	jl     0x408f3e
  408f1d:	hlt    
  408f1e:	pop    ebp
  408f1f:	pop    eax
  408f20:	ins    DWORD PTR es:[edi],dx
  408f21:	sbb    al,0x8b
  408f23:	pop    edi
  408f24:	add    eax,ecx
  408f26:	fimul  DWORD PTR [ebp+ebp*8-0x175c099d]
  408f2d:	xchg   ecx,eax
  408f2e:	movlhps xmm6,xmm5
  408f31:	lock fnsave [eax]
  408f34:	in     eax,dx
  408f35:	and    al,0xde
  408f37:	or     al,0x5c
  408f39:	adc    BYTE PTR [ecx+ebx*8],ch
  408f3c:	jns    0x408fa0
  408f3e:	adc    BYTE PTR [ebx+ebp*1-0x7c1c4f4],dh
  408f45:	setle  bl
  408f48:	fsub   QWORD PTR [edi+0x34]
  408f4b:	adc    al,0x6d
  408f4d:	dec    ebp
  408f4e:	je     0x408fb3
  408f50:	mov    al,0xc9
  408f52:	inc    esi
  408f53:	aas    
  408f54:	sub    al,0x33
  408f56:	out    0x3a,eax
  408f58:	and    al,0x78
  408f5a:	pop    eax
  408f5b:	sahf   
  408f5c:	rcl    cl,cl
  408f5e:	mov    al,0x8c
  408f60:	jmp    0x22fef994
  408f65:	popa   
  408f66:	pop    ecx
  408f67:	test   eax,0xb1c06f36
  408f6c:	jp     0x408f16
  408f6e:	or     esp,esp
  408f70:	inc    edi
  408f71:	xchg   esi,eax
  408f72:	inc    esp
  408f73:	das    
  408f74:	push   edi
  408f75:	mov    al,0xaf
  408f77:	or     al,0x31
  408f79:	mov    dh,bh
  408f7b:	sub    al,0x99
  408f7d:	or     eax,0xec477089
  408f82:	leave  
  408f83:	sub    ecx,DWORD PTR [edx]
  408f85:	xlat   BYTE PTR ds:[ebx]
  408f86:	push   edi
  408f87:	addr16 sti 
  408f89:	and    bh,BYTE PTR [edi+0x6]
  408f8c:	mov    dl,0xe1
  408f8e:	mov    bh,0x73
  408f90:	pop    eax
  408f91:	aam    0x34
  408f93:	stc    
  408f94:	hlt    
  408f95:	push   es
  408f96:	sbb    esp,eax
  408f98:	div    ah
  408f9a:	out    0xdf,eax
  408f9c:	cmp    edx,ebp
  408f9e:	arpl   WORD PTR [eax+0x2da0a8ec],si
  408fa4:	in     al,dx
  408fa5:	xchg   edx,eax
  408fa6:	fcom   st(3)
  408fa8:	mov    al,ds:0x354812e
  408fad:	cmp    dh,BYTE PTR ds:0x6f2fa3e1
  408fb3:	(bad)  
  408fb4:	arpl   WORD PTR [esi+0x65],sp
  408fb7:	add    eax,0x3e9278fb
  408fbc:	xor    dh,BYTE PTR [ecx]
  408fbe:	cmp    ebp,DWORD PTR [eax-0x3a]
  408fc1:	mov    dl,0x3
  408fc3:	pusha  
  408fc4:	out    0xed,al
  408fc6:	inc    ebx
  408fc7:	ret    
  408fc8:	cmp    BYTE PTR [esi],ah
  408fca:	inc    ebp
  408fcb:	inc    eax
  408fcc:	stos   DWORD PTR es:[edi],eax
  408fcd:	sar    DWORD PTR [edx+0x64],1
  408fd0:	xor    ah,BYTE PTR [edi]
  408fd2:	stos   BYTE PTR es:[edi],al
  408fd3:	mov    BYTE PTR [ecx],cl
  408fd5:	pushf  
  408fd6:	cli    
  408fd7:	loop   0x408fe6
  408fd9:	ds jp  0x408fc1
  408fdc:	or     eax,0xb741b41f
  408fe1:	jecxz  0x408fdc
  408fe3:	fsub   DWORD PTR [eax-0x23]
  408fe6:	mov    esp,0x69257876
  408feb:	out    dx,al
  408fec:	scas   al,BYTE PTR es:[edi]
  408fed:	adc    al,0x2d
  408fef:	loope  0x409002
  408ff1:	sahf   
  408ff2:	jle    0x408ff3
  408ff4:	or     dl,0x88
  408ff7:	ss xchg ebp,eax
  408ff9:	dec    edx
  408ffa:	repnz pop esp
  408ffc:	adc    eax,DWORD PTR [ebx]
  408ffe:	dec    ecx
  408fff:	dec    ebx
  409000:	adc    eax,0xe448fcfa
  409005:	or     al,0x8a
  409007:	(bad)  [eax+0x46]
  40900a:	xor    ebp,esi
  40900c:	xor    al,0x24
  40900e:	or     DWORD PTR [edx+ebx*4+0x7f],esp
  409012:	fld    QWORD PTR [ebp+0x34]
  409015:	push   ebp
  409016:	inc    edi
  409017:	push   0x16
  409019:	jp     0x40906e
  40901b:	and    dl,BYTE PTR ds:0xd69f0765
  409021:	pop    es
  409022:	in     eax,dx
  409023:	inc    esp
  409024:	cli    
  409025:	pop    esi
  409026:	inc    BYTE PTR [edi]
  409028:	push   ecx
  409029:	(bad)  
  40902a:	sbb    al,0x5f
  40902c:	push   esp
  40902d:	cmp    al,0x31
  40902f:	xchg   dx,ax
  409031:	and    al,0x1b
  409033:	out    dx,eax
  409034:	dec    ecx
  409035:	xor    eax,0x90b6db50
  40903a:	push   ebx
  40903b:	(bad)  
  40903c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40903e:	daa    
  40903f:	imul   DWORD PTR [esi]
  409041:	cmp    BYTE PTR [esi+0x6688a321],0xd8
  409048:	adc    esi,DWORD PTR [ebp+0x38]
  40904b:	stc    
  40904c:	xchg   ebp,eax
  40904d:	pop    edi
  40904e:	or     esp,DWORD PTR [edi+ebp*8-0x4be5cc5a]
  409055:	out    dx,eax
  409056:	rcl    BYTE PTR [edi],0x78
  409059:	stos   DWORD PTR es:[edi],eax
  40905a:	xchg   esi,eax
  40905b:	sahf   
  40905c:	js     0x409059
  40905e:	jbe    0x408fff
  409060:	bound  edx,QWORD PTR [edx]
  409062:	lahf   
  409063:	and    eax,0x8cdcb937
  409068:	adc    ecx,esp
  40906a:	add    DWORD PTR [ebp+0x3fd9c079],0x9
  409071:	imul   ebp,DWORD PTR [edx-0x16],0xb8f3ff8b
  409078:	mov    al,0xb6
  40907a:	xor    esi,DWORD PTR [ebx-0x1d]
  40907d:	mov    WORD PTR [edx+edx*4],fs
  409080:	or     al,BYTE PTR [ebx-0x74]
  409083:	pop    ss
  409084:	dec    BYTE PTR [esi-0x6d]
  409087:	sti    
  409088:	jb     0x4090b8
  40908a:	cli    
  40908b:	sbb    eax,0x68f1bbfc
  409090:	or     DWORD PTR [ebp+0x46],esi
  409093:	xlat   BYTE PTR ds:[ebx]
  409094:	mov    ds:0x76ce5de2,al
  409099:	adc    esi,edi
  40909b:	stos   DWORD PTR es:[edi],eax
  40909c:	scas   al,BYTE PTR es:[edi]
  40909d:	ret    
  40909e:	inc    ebp
  40909f:	mov    al,ds:0xe274f0fc
  4090a4:	cdq    
  4090a5:	xlat   BYTE PTR ds:[ebx]
  4090a6:	je     0x4090ad
  4090a8:	scas   eax,DWORD PTR es:[edi]
  4090a9:	test   al,0xf6
  4090ab:	fisubr WORD PTR [ebp-0x60355de2]
  4090b1:	xchg   ebx,eax
  4090b2:	sbb    eax,0x4155f023
  4090b7:	push   0x7b
  4090b9:	inc    ebp
  4090ba:	into   
  4090bb:	aaa    
  4090bc:	jb     0x4090b8
  4090be:	outs   dx,BYTE PTR ds:[esi]
  4090bf:	and    eax,esi
  4090c1:	jecxz  0x409082
  4090c3:	sbb    bl,bl
  4090c5:	push   ss
  4090c6:	and    BYTE PTR [ebx-0x73e6138b],al
  4090cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090cd:	dec    edi
  4090ce:	dec    esp
  4090cf:	scas   al,BYTE PTR es:[edi]
  4090d0:	cmp    ebp,ebp
  4090d2:	mov    ch,0x31
  4090d4:	(bad)  
  4090d5:	jl     0x4090e1
  4090d7:	sub    bh,BYTE PTR [edi+ebp*2-0x434cba9e]
  4090de:	jp     0x409150
  4090e0:	stos   DWORD PTR es:[edi],eax
  4090e1:	fmul   QWORD PTR [ecx+0x655fdeb1]
  4090e7:	add    bh,BYTE PTR [edx-0x3c]
  4090ea:	dec    ebx
  4090eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ec:	js     0x4090f2
  4090ee:	cmp    DWORD PTR [ebp-0x6f],ebp
  4090f1:	aas    
  4090f2:	xlat   BYTE PTR ds:[ebx]
  4090f3:	jecxz  0x409085
  4090f5:	neg    BYTE PTR [ecx+edx*8]
  4090f8:	and    eax,0xf84e534d
  4090fd:	popf   
  4090fe:	or     esi,edi
  409100:	push   eax
  409101:	test   BYTE PTR [esi+0x1c],ah
  409104:	cdq    
  409105:	push   esp
  409106:	ss out dx,al
  409108:	xchg   ebx,eax
  409109:	inc    ebp
  40910a:	add    BYTE PTR [ebp+0x10],cl
  40910d:	pop    ss
  40910e:	add    BYTE PTR [ebx],cl
  409110:	sar    BYTE PTR [edx+ecx*4],0x2a
  409114:	lock pop ecx
  409116:	les    edx,FWORD PTR [edx+0x60127aeb]
  40911c:	add    eax,0xebea4acd
  409121:	add    DWORD PTR [ebx+0x45],edx
  409124:	and    al,0xd7
  409126:	(bad)  
  409127:	xchg   esi,eax
  409128:	retf   
  409129:	(bad)  
  40912a:	push   cs
  40912b:	mov    esp,0xcf6d31a0
  409130:	pop    edi
  409131:	fcmovnb st,st(3)
  409133:	mov    ds:0x1fe9e73f,eax
  409138:	cs mov ecx,0x7fc62dbb
  40913e:	outs   dx,BYTE PTR ds:[esi]
  40913f:	xchg   BYTE PTR [eax-0x3c],ah
  409142:	(bad)  
  409143:	stos   BYTE PTR es:[edi],al
  409144:	sbb    edx,DWORD PTR [edi+0x3b]
  409147:	scas   al,BYTE PTR es:[edi]
  409148:	es js  0x409194
  40914b:	dec    ecx
  40914c:	scas   eax,DWORD PTR es:[edi]
  40914d:	jb     0x4091af
  40914f:	xchg   edi,eax
  409150:	add    DWORD PTR [ebx+eiz*1-0x21],0x89d5ca56
  409158:	xchg   ebp,eax
  409159:	fwait
  40915a:	sbb    dl,cl
  40915c:	retf   
  40915d:	jns    0x40913d
  40915f:	int3   
  409160:	pusha  
  409161:	cld    
  409162:	jle    0x4090e7
  409164:	imul   ebp,DWORD PTR [ebp-0x2c],0xc646709a
  40916b:	inc    eax
  40916c:	fnop   
  40916e:	mov    ch,0xa7
  409170:	jp     0x40915a
  409172:	mov    ch,0xc6
  409174:	push   cs
  409175:	icebp  
  409176:	cs out 0xfe,al
  409179:	pop    edi
  40917a:	adc    DWORD PTR [ebp-0x76],ebp
  40917d:	xor    eax,0x80d61199
  409182:	and    eax,0xefe414af
  409187:	xor    eax,DWORD PTR [edx+0x21c75054]
  40918d:	ss adc eax,0x1c6b2e57
  409193:	push   ss
  409194:	loope  0x40918b
  409196:	mov    ecx,0x9eb8ed41
  40919b:	call   DWORD PTR [ebp+0x22]
  40919e:	fucomip st,st(5)
  4091a0:	test   BYTE PTR [ebp+0x32],0x58
  4091a4:	push   ds
  4091a5:	in     al,0x48
  4091a7:	xor    eax,0x23a4a76c
  4091ac:	jle    0x40915e
  4091ae:	inc    ebp
  4091af:	mov    ebx,0x3a50f71
  4091b4:	mov    ah,0x19
  4091b6:	sbb    ah,BYTE PTR [ebx+0x37b441e]
  4091bc:	mov    eax,ds:0x95017158
  4091c1:	or     BYTE PTR ds:0x96950882,bl
  4091c7:	fiadd  DWORD PTR [ecx+0x165bf26a]
  4091cd:	cmp    ah,bh
  4091cf:	xchg   ebx,eax
  4091d0:	and    edi,DWORD PTR ds:0xc56034a3
  4091d6:	call   0x14f:0xbde26c99
  4091dd:	pop    ecx
  4091de:	in     al,dx
  4091df:	mov    DWORD PTR [esi],esp
  4091e1:	dec    ebx
  4091e2:	outs   dx,DWORD PTR ds:[esi]
  4091e3:	inc    edx
  4091e4:	cmc    
  4091e5:	adc    eax,0x17b1fecb
  4091ea:	fsub   st,st(7)
  4091ec:	aas    
  4091ed:	or     ch,BYTE PTR [edi+0x32e2bb88]
  4091f3:	pop    ss
  4091f4:	test   al,0x25
  4091f6:	or     eax,0xbc8b7d3
  4091fb:	(bad)  [ebx-0x5eddd09a]
  409201:	jbe    0x4091cc
  409203:	push   es
  409204:	pop    esi
  409205:	and    dh,BYTE PTR [edi+0x5f]
  409208:	pop    ebx
  409209:	mov    ch,0x7d
  40920b:	je     0x4091a3
  40920d:	inc    esi
  40920e:	cs stc 
  409210:	push   esi
  409211:	pop    ebp
  409212:	and    edx,DWORD PTR [ebp-0x51]
  409215:	out    0x65,al
  409217:	adc    esp,DWORD PTR [edx+ebp*4]
  40921a:	mov    ebx,0xf8c3d7b2
  40921f:	lock lahf 
  409221:	push   edi
  409222:	aas    
  409223:	jle    0x409208
  409225:	xchg   BYTE PTR [ecx-0xb],bh
  409228:	adc    edx,esi
  40922a:	fistp  QWORD PTR [ebp-0x2a7defa1]
  409230:	out    0x91,eax
  409232:	or     al,0x68
  409234:	xchg   edx,eax
  409235:	xor    al,bh
  409237:	call   0xeef0:0xf0ba
  40923d:	push   eax
  40923e:	add    ch,BYTE PTR [ebp-0x2f]
  409241:	sti    
  409242:	mov    dl,0xeb
  409244:	sub    al,0x21
  409247:	mov    edx,0x10d8d6a3
  40924c:	jnp    0x4091f2
  40924e:	push   esi
  40924f:	inc    edi
  409250:	and    esi,DWORD PTR [ebp+0x3b]
  409253:	fisttp WORD PTR [edi-0x1d32cae8]
  409259:	push   edx
  40925a:	cwde   
  40925b:	adc    dh,BYTE PTR [esi]
  40925d:	iret   
  40925e:	push   0xff4d6ab0
  409263:	and    DWORD PTR [ebp-0x78],0xa950db75
  40926a:	push   ecx
  40926b:	in     eax,0x5a
  40926d:	sbb    bl,ch
  40926f:	(bad)  
  409270:	in     eax,dx
  409271:	into   
  409272:	rol    BYTE PTR [ecx],1
  409274:	mov    ebp,0x3f0cfa60
  409279:	dec    ebx
  40927a:	xor    dl,BYTE PTR [edi-0x292a5e4f]
  409280:	lock pusha 
  409282:	xchg   esi,eax
  409283:	mov    edi,0xdae37e8a
  409288:	sub    al,0x7b
  40928a:	lea    eax,[edx]
  40928c:	mov    edi,0x429bac47
  409291:	repnz mov dl,0x59
  409294:	out    0xa2,al
  409296:	dec    eax
  409297:	xor    esi,DWORD PTR [edx+edx*2-0x47cc50ea]
  40929e:	and    bh,dh
  4092a0:	jbe    0x409291
  4092a2:	adc    eax,0x4232890e
  4092a7:	loopne 0x409296
  4092a9:	shl    BYTE PTR [eax+edx*4],1
  4092ac:	ret    0xfca
  4092af:	ror    BYTE PTR [eax],0xa4
  4092b2:	loop   0x4092b8
  4092b4:	mov    bl,0xd
  4092b6:	mov    dl,0x5
  4092b8:	repz pop edx
  4092ba:	lods   al,BYTE PTR ds:[esi]
  4092bb:	sbb    cl,BYTE PTR [edx-0x6d]
  4092be:	fwait
  4092bf:	stos   DWORD PTR es:[edi],eax
  4092c0:	xchg   edx,eax
  4092c1:	ret    0x8eb5
  4092c4:	stc    
  4092c5:	out    dx,al
  4092c6:	jmp    0x40930a
  4092c8:	jmp    0xb8b7:0xeebba977
  4092cf:	addr16 mov bh,0x1c
  4092d2:	dec    edi
  4092d3:	mov    bl,0x4a
  4092d5:	add    eax,0x8c30e36d
  4092da:	not    BYTE PTR [edi+0x3]
  4092dd:	xchg   esi,eax
  4092de:	add    bl,BYTE PTR [esi]
  4092e0:	and    ch,ah
  4092e2:	ins    DWORD PTR es:[edi],dx
  4092e3:	push   edi
  4092e4:	shr    DWORD PTR [edi],1
  4092e6:	fidiv  DWORD PTR [esi+ebx*4-0x6]
  4092ea:	ret    0xfb9b
  4092ed:	addr16 push ebx
  4092ef:	repnz cmp ecx,ebx
  4092f2:	push   0x50
  4092f4:	xor    DWORD PTR ds:[eax-0x6590ab18],esp
  4092fb:	nop
  4092fc:	mov    ss,WORD PTR [esi]
  4092fe:	mov    BYTE PTR [ecx+0x2721285a],dh
  409304:	shl    BYTE PTR [edx+0x79],cl
  409307:	outs   dx,DWORD PTR ds:[esi]
  409308:	clc    
  409309:	idiv   DWORD PTR [eax+0x61a1a1c1]
  40930f:	or     eax,0x884b6435
  409314:	push   edi
  409315:	lahf   
  409316:	mov    eax,0xf3ba1cad
  40931b:	sub    al,BYTE PTR [ebx+eiz*8]
  40931e:	retf   
  40931f:	adc    al,0x58
  409321:	inc    edi
  409322:	es jg  0x4092ea
  409325:	popa   
  409326:	iret   
  409327:	nop
  409328:	stc    
  409329:	aas    
  40932a:	xor    ebx,ebx
  40932c:	aad    0xf3
  40932e:	jmp    0x4092ec
  409330:	mov    ds:0xe1ee1402,al
  409335:	fyl2x  
  409337:	dec    edi
  409338:	fisttp DWORD PTR [edi]
  40933a:	ss std 
  40933c:	test   eax,0xea86bee2
  409341:	and    al,0xa4
  409343:	bound  ecx,QWORD PTR [edx+0x559def6]
  409349:	push   esi
  40934a:	stos   BYTE PTR es:[edi],al
  40934b:	jle    0x409343
  40934d:	jp     0x4093b8
  40934f:	ret    
  409350:	jmp    0xe99d2759
  409355:	jge    0x40931d
  409357:	sbb    al,BYTE PTR [esi]
  409359:	fmul   DWORD PTR [edi-0x613918a1]
  40935f:	mov    bl,BYTE PTR [ecx]
  409361:	xchg   ecx,eax
  409362:	dec    ebp
  409363:	jl     0x409330
  409365:	test   eax,0xa2d82988
  40936a:	(bad)  
  40936b:	fisttp QWORD PTR [ebx+0x614251aa]
  409371:	sahf   
  409372:	mov    eax,ds:0x6345b303
  409377:	add    BYTE PTR [ebp+0x522dd7ba],0x9f
  40937e:	pop    ss
  40937f:	retf   
  409380:	lock ss xchg bh,ch
  409384:	push   eax
  409385:	jg     0x409331
  409387:	std    
  409388:	pop    esp
  409389:	push   eax
  40938a:	mov    bh,0xcc
  40938c:	ror    DWORD PTR [ecx-0x9],0x4f
  409390:	sbb    esp,DWORD PTR [edx]
  409392:	sbb    al,0x35
  409394:	(bad)  
  409396:	xchg   DWORD PTR [edx+eiz*8-0x543a5f88],esi
  40939d:	(bad)  
  40939e:	sbb    ah,dl
  4093a0:	push   ss
  4093a1:	ds imul eax,edi,0x77
  4093a5:	jmp    0x9249:0x275c0cd4
  4093ac:	pop    edx
  4093ad:	push   ss
  4093ae:	lea    edi,[ecx-0x2f]
  4093b1:	mov    esp,0xb0430318
  4093b6:	retf   
  4093b7:	cmp    ah,al
  4093b9:	iret   
  4093ba:	pop    ds
  4093bb:	lds    ecx,FWORD PTR [eax+eax*1-0x6c62eb5c]
  4093c2:	icebp  
  4093c3:	loop   0x409426
  4093c5:	test   al,0x4c
  4093c7:	mov    WORD PTR [edx-0x2e],gs
  4093ca:	xor    ebp,DWORD PTR [ebx]
  4093cc:	pushf  
  4093cd:	pop    ecx
  4093ce:	mov    gs,esi
  4093d0:	xchg   BYTE PTR [ecx],bl
  4093d2:	lea    edx,[ecx-0x47ac323b]
  4093d8:	fcomp  QWORD PTR [edi-0x20bda4c9]
  4093de:	loop   0x409401
  4093e0:	jae    0x409386
  4093e2:	ins    DWORD PTR es:[edi],dx
  4093e3:	or     esi,DWORD PTR [esp+eax*2]
  4093e6:	sbb    ecx,DWORD PTR [edx+0x3a]
  4093e9:	mov    fs,WORD PTR [edi]
  4093eb:	add    BYTE PTR [eax-0x70],ch
  4093ee:	out    dx,al
  4093ef:	out    0x1f,eax
  4093f1:	imul   edx,DWORD PTR [ebx-0x548b2474],0xfffffffd
  4093f8:	push   edx
  4093f9:	jmp    0xf5ad:0xde45552d
  409400:	fdivr  st(1),st
  409402:	or     eax,DWORD PTR [ecx+0x32a88ae0]
  409408:	pushf  
  409409:	pop    ds
  40940a:	daa    
  40940b:	push   ebp
  40940c:	stc    
  40940d:	and    eax,0x35dd922c
  409412:	jp     0x4093f4
  409414:	call   0xf804d77f
  409419:	cli    
  40941a:	or     BYTE PTR [edi+0x4b76ad75],0x80
  409421:	jge    0x40946b
  409423:	xor    BYTE PTR [ecx-0x2d],bl
  409426:	push   0x8
  409428:	and    esp,esp
  40942a:	fiadd  WORD PTR ds:[eax+0x28202548]
  409431:	mul    eax
  409433:	aas    
  409434:	sub    al,0x12
  409436:	mov    cl,0xce
  409438:	pop    fs
  40943a:	repnz icebp 
  40943c:	jg     0x4093c0
  40943e:	push   ebp
  40943f:	retf   
  409440:	into   
  409441:	adc    al,0x8f
  409443:	lea    esp,[edx+0x559e3f4a]
  409449:	mov    esi,0x6a66c300
  40944e:	jno    0x4094ba
  409450:	mov    ds:0x7046fb3,al
  409455:	xor    edx,DWORD PTR [esi-0x23]
  409458:	sbb    ah,bl
  40945a:	push   ebp
  40945b:	dec    ecx
  40945c:	repnz push cs
  40945e:	sbb    ebx,ebx
  409460:	aas    
  409461:	mov    DWORD PTR [ebx+eiz*8],edx
  409464:	sbb    BYTE PTR [ebp+0x76],bl
  409467:	jae    0x4094b4
  409469:	sbb    BYTE PTR [edx+0x61b5cbfd],cl
  40946f:	mov    al,ds:0x5b7738b8
  409474:	jmp    0x8c69:0xf9a61a57
  40947b:	ins    DWORD PTR es:[edi],dx
  40947c:	loop   0x4094fc
  40947e:	ss into 
  409480:	xchg   edx,eax
  409481:	jge    0x409432
  409483:	sub    bh,BYTE PTR [ecx]
  409485:	sub    BYTE PTR [eax],cl
  409487:	push   esp
  409488:	rcr    DWORD PTR [eax],1
  40948a:	out    0x99,al
  40948c:	shl    DWORD PTR [ecx-0xd],0x1a
  409490:	ret    0xf618
  409493:	jns    0x4094a4
  409495:	sub    ebp,edx
  409497:	outs   dx,BYTE PTR ds:[esi]
  409498:	dec    ebp
  409499:	sbb    cl,cl
  40949b:	je     0x40943c
  40949d:	or     al,0x1b
  40949f:	xchg   edi,eax
  4094a0:	int    0x42
  4094a2:	xorps  xmm0,XMMWORD PTR [edx]
  4094a5:	pop    eax
  4094a6:	mov    cl,0xc5
  4094a8:	fs dec ecx
  4094aa:	mov    edx,0xc79b756
  4094af:	dec    esp
  4094b0:	imul   ebp,ecx,0x16
  4094b3:	leave  
  4094b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094b5:	in     al,0xb
  4094b7:	inc    ebx
  4094b8:	add    DWORD PTR [ecx+edi*2],0xa389f69b
  4094bf:	call   0x3a9a829b
  4094c4:	push   DWORD PTR [ebp-0x5b369599]
  4094ca:	arpl   bx,si
  4094cc:	sti    
  4094cd:	sub    BYTE PTR [eax],ch
  4094cf:	sbb    DWORD PTR [ecx-0x52],edx
  4094d2:	pushf  
  4094d3:	sbb    eax,0xff633e67
  4094d8:	sub    eax,0xd0944580
  4094dd:	icebp  
  4094de:	push   ebx
  4094df:	cmp    DWORD PTR [esi-0x3dc1a6ea],0xffffffc0
  4094e6:	push   ebx
  4094e7:	or     bh,dl
  4094e9:	or     ebp,edi
  4094eb:	das    
  4094ec:	push   esi
  4094ed:	push   ecx
  4094ee:	in     eax,0xd9
  4094f0:	or     dh,BYTE PTR [ebx]
  4094f2:	inc    ecx
  4094f3:	and    eax,0x418f794d
  4094f8:	and    al,0xbe
  4094fa:	xchg   ch,ch
  4094fc:	xor    DWORD PTR [eax+ebp*1+0x1b],ecx
  409500:	retf   0x98e2
  409503:	jecxz  0x4094ad
  409505:	ds jae 0x409577
  409508:	ins    DWORD PTR es:[edi],dx
  409509:	out    0x37,al
  40950b:	not    DWORD PTR [esp+ebp*2+0x11e8e9f4]
  409512:	sub    eax,0x28f74268
  409517:	rcr    BYTE PTR [eax],cl
  409519:	clc    
  40951a:	mov    ah,0x4e
  40951c:	and    eax,0x1a34dfc3
  409521:	and    DWORD PTR [ebx+0x35],eax
  409524:	fwait
  409525:	(bad)  
  409526:	jb     0x409569
  409528:	sbb    al,BYTE PTR [ecx+0x7b05dda0]
  40952e:	xor    al,0x2d
  409530:	inc    esp
  409531:	aas    
  409532:	pop    ebp
  409533:	cmp    DWORD PTR [ebx+0x29],edx
  409536:	dec    ecx
  409537:	adc    esp,DWORD PTR fs:[edi]
  40953a:	sub    al,0x26
  40953c:	ficom  DWORD PTR [edi]
  40953e:	xor    esi,edi
  409540:	and    DWORD PTR [edx],0x497cbd9e
  409546:	fnstcw WORD PTR [eax+0x3e28529e]
  40954c:	and    al,0x54
  40954e:	xchg   ebp,eax
  40954f:	and    ch,al
  409551:	pop    esi
  409552:	adc    BYTE PTR ds:0x8fc19ab7,0xf1
  409559:	sahf   
  40955a:	mov    bh,0xb6
  40955c:	call   0xdc09245b
  409561:	nop
  409562:	test   eax,0xb6cf0d18
  409567:	sub    ecx,esi
  409569:	add    ch,BYTE PTR [ebp+0x76]
  40956c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40956d:	test   al,0xfb
  40956f:	xchg   ecx,eax
  409570:	lea    esp,[edi]
  409572:	dec    ebx
  409573:	and    eax,0x85c7a17e
  409578:	or     ah,ah
  40957a:	outs   dx,DWORD PTR ds:[esi]
  40957b:	(bad)  
  40957c:	mov    edx,0x5f906e7b
  409581:	mov    bl,0xe8
  409583:	(bad)  
  409585:	xor    al,0xda
  409587:	pop    ds
  409588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409589:	ret    
  40958a:	mov    ?,WORD PTR [ecx+eax*8-0x3d]
  40958e:	mov    cs,WORD PTR [esi]
  409590:	mov    WORD PTR ds:0x3a65a6e9,ss
  409596:	sbb    eax,0xf7367b68
  40959b:	popf   
  40959c:	rol    BYTE PTR [ecx-0x606294d9],1
  4095a2:	xor    eax,0x18cd6b81
  4095a7:	inc    ecx
  4095a8:	es out 0x6c,eax
  4095ab:	pop    es
  4095ac:	sub    BYTE PTR [esi],0x2f
  4095af:	sub    BYTE PTR [edi+0x27],bh
  4095b2:	adc    dl,ch
  4095b4:	gs addr16 adc al,0x77
  4095b9:	adc    cl,al
  4095bb:	adc    BYTE PTR fs:[eax],ah
  4095be:	and    eax,0x953047f9
  4095c3:	dec    eax
  4095c4:	imul   ebx,DWORD PTR [esi-0x36ac8c1],0x368de32b
  4095ce:	jns    0x4095ec
  4095d0:	idiv   DWORD PTR [edx+0x45385e17]
  4095d6:	xchg   edx,eax
  4095d7:	in     al,0x27
  4095d9:	inc    eax
  4095da:	sub    eax,0x3abd33b1
  4095df:	pushf  
  4095e0:	ins    BYTE PTR es:[edi],dx
  4095e1:	out    0xea,eax
  4095e3:	adc    dl,bh
  4095e5:	out    0x8c,al
  4095e7:	imul   edx,DWORD PTR [ebx+0x324a6d1c],0x4f7ac173
  4095f1:	xor    DWORD PTR [ebp-0xb],ebx
  4095f4:	jmp    0x481c:0xe6b525a3
  4095fb:	inc    ebx
  4095fc:	clc    
  4095fd:	inc    edi
  4095fe:	cmp    esi,DWORD PTR [edi+0xf]
  409601:	popa   
  409602:	ja     0x4095a2
  409604:	mov    ah,0x43
  409606:	jle    0x409604
  409608:	mov    ah,0x56
  40960a:	jo     0x409649
  40960c:	fist   WORD PTR [ebx-0x441a839f]
  409612:	fimul  WORD PTR [ebx-0x1f07b471]
  409618:	push   ecx
  409619:	fstp   QWORD PTR [ecx+edi*2-0x4b1dd689]
  409620:	jnp    0x409655
  409622:	jo     0x4095d9
  409624:	rcl    DWORD PTR [eax],cl
  409626:	add    ah,bl
  409628:	push   edx
  409629:	std    
  40962a:	mov    edi,0x842263cf
  40962f:	mov    ebp,0x5fd9916c
  409634:	daa    
  409635:	(bad)  [ecx+eax*8-0x14837462]
  40963c:	or     eax,0xc231c4e
  409641:	loop   0x4095e0
  409643:	rol    ebx,cl
  409645:	fstp   TBYTE PTR [esi+0x6]
  409648:	(bad)  
  409649:	fiadd  WORD PTR [ebp+0x655e87f9]
  40964f:	cmp    edi,DWORD PTR ss:[edx-0xb]
  409653:	or     dh,BYTE PTR [esi+0x17d4ac24]
  409659:	sbb    al,bl
  40965b:	rcl    DWORD PTR [ebp+0x1bc3d858],1
  409661:	xchg   edi,eax
  409662:	mov    edx,0x96226652
  409667:	xchg   esp,eax
  409668:	inc    ebx
  409669:	imul   ebp,DWORD PTR [eax+0x125a69b],0x635426a4
  409673:	lea    esi,ds:0x741913c0
  409679:	ds popf 
  40967b:	push   cs
  40967c:	inc    edx
  40967d:	sbb    al,0x5b
  40967f:	mov    fs,WORD PTR [ecx-0x6d]
  409682:	mov    ah,0xb9
  409684:	dec    esi
  409685:	jmp    0x32d2:0xe7efbbec
  40968c:	test   DWORD PTR [edi-0x5],edi
  40968f:	repnz xor eax,0xb8743adf
  409695:	cmp    al,0xab
  409697:	pop    edx
  409698:	dec    esi
  409699:	cmp    DWORD PTR [ebx+0x39],esi
  40969c:	jmp    0xa105:0xc383ec5b
  4096a3:	cmp    al,0x46
  4096a5:	push   ds
  4096a6:	adc    bl,BYTE PTR [edx+0x3518fcab]
  4096ac:	call   0x64287ab4
  4096b1:	test   BYTE PTR [ebx],ch
  4096b3:	pop    ecx
  4096b4:	ret    0xd13b
  4096b7:	loopne 0x4096c7
  4096b9:	sub    bh,BYTE PTR [ecx+0x73]
  4096bc:	sbb    esp,ebp
  4096be:	loop   0x40966a
  4096c0:	mov    DWORD PTR [eax+0x48],eax
  4096c3:	js     0x4096a4
  4096c5:	sbb    al,0xc7
  4096c7:	lock les esi,FWORD PTR ds:0x60ff38ca
  4096ce:	bound  eax,QWORD PTR [esi]
  4096d0:	rcr    DWORD PTR [eax+0x39],0xc8
  4096d4:	mov    al,ds:0xd3dc5211
  4096d9:	out    dx,eax
  4096da:	lahf   
  4096db:	stos   BYTE PTR es:[edi],al
  4096dc:	mov    cl,0x2b
  4096de:	sbb    bl,BYTE PTR [ecx+0x74]
  4096e1:	inc    edx
  4096e2:	sbb    eax,DWORD PTR [edx-0x7cf38500]
  4096e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e9:	mov    esi,0x6b3a4c97
  4096ee:	repz addr16 jle 0x409684
  4096f2:	repz adc eax,0x4b30ca6a
  4096f8:	iret   
  4096f9:	mov    bh,0x4d
  4096fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096fc:	mov    ebp,DWORD PTR [esi]
  4096fe:	lea    ebx,[esi+0x6712a16]
  409704:	sub    BYTE PTR [edx+0x725c45da],bl
  40970a:	xadd   ebx,ebx
  40970d:	cwde   
  40970e:	leave  
  40970f:	inc    eax
  409710:	sbb    edx,DWORD PTR [ecx-0x3d636ad9]
  409716:	leave  
  409717:	(bad)  
  409718:	aad    0x64
  40971a:	repz push ecx
  40971c:	cld    
  40971d:	jmp    0x88c2c32c
  409722:	sbb    esi,DWORD PTR [ebp+0x76ef8123]
  409728:	bound  ecx,QWORD PTR [edi+0x55]
  40972b:	dec    edi
  40972c:	push   cs
  40972d:	mov    edx,0x65581339
  409732:	jno    0x4096e9
  409734:	ret    0xe563
  409737:	jmp    0xe074:0x2935790
  40973e:	cmp    al,0xa5
  409740:	and    al,0xd6
  409742:	adc    BYTE PTR ds:0x949e55a6,dl
  409748:	sub    BYTE PTR [ecx],bl
  40974a:	mov    edx,0xe9c1068
  40974f:	mov    edi,0xd864b661
  409754:	sub    DWORD PTR [ecx-0x76],ebx
  409757:	leave  
  409758:	jnp    0x409754
  40975a:	xchg   esi,eax
  40975b:	mov    al,0xf2
  40975d:	cli    
  40975e:	adc    BYTE PTR [ebp-0x1ed4f406],dh
  409764:	ret    0xe46b
  409767:	cs scas eax,DWORD PTR es:[edi]
  409769:	sub    al,0x96
  40976b:	fwait
  40976c:	in     al,0xe5
  40976e:	and    BYTE PTR [ebx],al
  409770:	ret    
  409771:	inc    ebx
  409772:	js     0x4096fc
  409774:	cs popf 
  409776:	cmp    ch,dl
  409778:	out    0x24,eax
  40977a:	call   0x3860d7cd
  40977f:	dec    ecx
  409780:	add    dl,dl
  409782:	(bad)  
  409784:	cmp    DWORD PTR [ebx-0x70f3d9da],ebx
  40978a:	pop    ebp
  40978b:	mov    WORD PTR [ecx-0x2b785782],cs
  409791:	xchg   edi,eax
  409792:	adc    bl,dh
  409794:	mov    eax,ebp
  409796:	jo     0x409721
  409798:	cmp    BYTE PTR [ebp-0xb35fab],dl
  40979e:	cmp    al,0x49
  4097a0:	outs   dx,BYTE PTR ds:[esi]
  4097a1:	cmp    edx,ecx
  4097a3:	and    ecx,edi
  4097a5:	and    ah,BYTE PTR [esi+0x793ee37e]
  4097ab:	mov    ebp,0xa1222814
  4097b0:	je     0x40976a
  4097b2:	ja     0x4097df
  4097b4:	out    dx,eax
  4097b5:	dec    edx
  4097b6:	xchg   ebp,eax
  4097b7:	das    
  4097b8:	jl     0x409792
  4097ba:	xchg   esi,eax
  4097bb:	jo     0x409834
  4097bd:	xlat   BYTE PTR ds:[ebx]
  4097be:	push   ecx
  4097bf:	loop   0x4097a3
  4097c1:	or     al,0xcc
  4097c3:	js     0x409815
  4097c5:	popf   
  4097c6:	push   ebp
  4097c7:	test   DWORD PTR [ecx],0xb92a549a
  4097cd:	fbld   TBYTE PTR [edx+0x30]
  4097d0:	xchg   esi,eax
  4097d1:	out    0xb5,eax
  4097d3:	test   BYTE PTR [esi+0x56],bh
  4097d6:	outs   dx,BYTE PTR ds:[esi]
  4097d7:	mov    edx,0xc23c226f
  4097dc:	push   ss
  4097dd:	lock jae 0x409792
  4097e0:	push   0x727c337
  4097e5:	lock jg 0x409833
  4097e8:	into   
  4097e9:	rcl    BYTE PTR [eax-0x20],1
  4097ec:	dec    esp
  4097ed:	push   esi
  4097ee:	or     BYTE PTR [esi+edi*4-0x7cd4ebf4],al
  4097f5:	stos   BYTE PTR es:[edi],al
  4097f6:	neg    BYTE PTR [eax]
  4097f8:	aam    0xdd
  4097fa:	(bad)  
  4097fb:	dec    ebp
  4097fc:	sbb    al,0x3
  4097fe:	adc    bl,ch
  409800:	and    eax,0x65fb542a
  409805:	push   eax
  409806:	xchg   ebp,eax
  409807:	cmp    ebx,DWORD PTR [ebx-0xd]
  40980a:	inc    esp
  40980b:	stos   BYTE PTR es:[edi],al
  40980c:	mov    dh,0x47
  40980e:	dec    edi
  40980f:	and    DWORD PTR [ebx+0x69],edx
  409812:	cmp    al,al
  409814:	test   eax,0x8cb8fede
  409819:	sbb    BYTE PTR [edx],al
  40981b:	jbe    0x4097d3
  40981d:	lods   al,BYTE PTR ds:[esi]
  40981e:	xor    ah,BYTE PTR [edx+eax*4+0x12]
  409822:	fstp   QWORD PTR [esi+esi*2+0xd]
  409826:	pushf  
  409827:	js     0x4097b5
  409829:	fiadd  DWORD PTR [edx+0xbec257d]
  40982f:	xchg   DWORD PTR [eax+ebx*4+0x69],esi
  409833:	data16 jge 0x40987c
  409836:	outs   dx,BYTE PTR ds:[esi]
  409837:	dec    ebp
  409838:	neg    DWORD PTR [eax]
  40983a:	lods   al,BYTE PTR ds:[esi]
  40983b:	push   esp
  40983c:	jne    0x40987d
  40983e:	(bad)  
  40983f:	mov    ebp,0xaafe93e4
  409844:	mov    ebx,0x43ff9bc7
  409849:	jge    0x4098ab
  40984b:	pop    edx
  40984c:	pop    edx
  40984d:	jecxz  0x40985c
  40984f:	cmp    BYTE PTR [ebx+ecx*4],dl
  409852:	dec    ebx
  409853:	out    0xaf,eax
  409855:	aas    
  409856:	test   DWORD PTR [esi+0x12818323],esp
  40985c:	inc    esi
  40985d:	xor    ecx,edi
  40985f:	ss int3 
  409861:	sbb    dh,BYTE PTR [eax-0x46]
  409864:	(bad)  
  409865:	mov    cl,0x11
  409867:	mov    dh,0x21
  409869:	adc    eax,0x31832c82
  40986e:	inc    esi
  40986f:	(bad)  
  409870:	dec    ecx
  409871:	les    esp,FWORD PTR [edx-0x3c]
  409874:	dec    ch
  409876:	adc    eax,0x3c9fdd6b
  40987b:	xchg   ecx,eax
  40987c:	clc    
  40987d:	out    dx,eax
  40987e:	inc    ecx
  40987f:	jbe    0x409811
  409881:	icebp  
  409882:	(bad)  
  409883:	out    dx,eax
  409884:	jmp    0xfa0e:0xc51b06ab
  40988b:	idiv   DWORD PTR [edi]
  40988d:	not    DWORD PTR [edi-0x27bd5f7c]
  409893:	dec    eax
  409894:	mov    dl,0x90
  409896:	cmp    ah,dl
  409898:	inc    ecx
  409899:	addr16 inc edi
  40989b:	nop
  40989c:	xchg   ecx,eax
  40989d:	mov    WORD PTR [eax],ds
  40989f:	je     0x40987c
  4098a1:	xlat   BYTE PTR ds:[ebx]
  4098a2:	(bad)  
  4098a3:	sbb    DWORD PTR [ecx],esp
  4098a5:	(bad)  
  4098a6:	xchg   edx,eax
  4098a7:	and    al,bl
  4098a9:	dec    edi
  4098aa:	sub    bh,BYTE PTR [edx]
  4098ac:	test   DWORD PTR [ecx-0x70],edi
  4098af:	adc    edi,DWORD PTR [ebp-0x11]
  4098b2:	dec    ebx
  4098b3:	and    eax,0x1b16a3fb
  4098b8:	xchg   ebp,eax
  4098b9:	xor    BYTE PTR [edi-0x41c526cd],ch
  4098bf:	pusha  
  4098c0:	out    0xd,al
  4098c2:	(bad)  
  4098c3:	call   0x249c:0x5b952031
  4098ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098cb:	cli    
  4098cc:	dec    eax
  4098cd:	imul   edi,ebp,0xb5c5c816
  4098d3:	aas    
  4098d4:	lea    esi,[eax+eax*1-0x55f47a83]
  4098db:	adc    ch,BYTE PTR [edi+edx*2]
  4098de:	outs   dx,DWORD PTR ds:[esi]
  4098df:	sar    BYTE PTR [ebx+edi*4],cl
  4098e2:	imul   edx,DWORD PTR [ebp+0x46],0xffffffeb
  4098e6:	push   ebp
  4098e7:	add    BYTE PTR [ebx-0x75da8d48],0xe5
  4098ee:	pop    edx
  4098ef:	mov    esi,0x403330ea
  4098f4:	leave  
  4098f5:	mov    al,ds:0xed6f7855
  4098fa:	adc    DWORD PTR [edi-0x51],0xc35c1ba3
  409901:	enter  0x4464,0xed
  409905:	sub    BYTE PTR [ebx],0x8c
  409908:	mov    ebx,DWORD PTR [edx+0x2d]
  40990b:	and    dh,BYTE PTR [ebp-0x46]
  40990e:	xchg   edi,eax
  40990f:	xor    esi,0x616b5db7
  409915:	outs   dx,DWORD PTR ds:[esi]
  409916:	ins    BYTE PTR es:[edi],dx
  409917:	add    BYTE PTR [ebx-0x12],cl
  40991a:	dec    esi
  40991b:	pop    ss
  40991c:	(bad)  
  40991d:	push   eax
  40991e:	in     eax,0xa
  409920:	ins    DWORD PTR es:[edi],dx
  409921:	pop    ebp
  409922:	and    al,0xf8
  409924:	pusha  
  409925:	and    DWORD PTR [esi-0x7ce2a6c6],esp
  40992b:	or     eax,DWORD PTR [esi+edx*8+0x196a4223]
  409932:	and    edx,DWORD PTR [ebx+0x7209a77e]
  409938:	jno    0x40992a
  40993a:	fstp   QWORD PTR [eax+esi*4]
  40993d:	push   esp
  40993e:	outs   dx,BYTE PTR ds:[esi]
  40993f:	push   edi
  409940:	out    dx,eax
  409941:	sub    cl,BYTE PTR [ebx+esi*4+0x3]
  409945:	sti    
  409946:	outs   dx,BYTE PTR ds:[esi]
  409947:	jae    0x40998b
  409949:	xchg   ecx,eax
  40994a:	fadd   DWORD PTR [ecx+0x6be8b01c]
  409950:	jmp    0x40998c
  409952:	cmp    edx,ecx
  409954:	xor    al,0x87
  409956:	sahf   
  409957:	sub    BYTE PTR [esi-0x2b972892],al
  40995d:	add    eax,0x56ed9c19
  409962:	scas   al,BYTE PTR es:[edi]
  409963:	fisubr DWORD PTR [ecx]
  409965:	retf   0xf248
  409968:	ret    
  409969:	pop    ebx
  40996a:	jno    0x409996
  40996c:	(bad)  [edi-0x1f]
  40996f:	addr16 push ss
  409971:	add    eax,0x64a83757
  409976:	push   eax
  409977:	int3   
  409978:	fs test eax,0xf43446ed
  40997e:	inc    esp
  40997f:	or     ah,al
  409981:	mov    esp,0x1564ccef
  409986:	sbb    eax,0x834a7299
  40998b:	mov    ah,0xde
  40998d:	pop    ebp
  40998e:	xor    ebp,eax
  409990:	adc    al,0xff
  409992:	jo     0x40994e
  409994:	and    ebx,DWORD PTR [ebp-0x762531f9]
  40999a:	sub    DWORD PTR [edx+0xa],esp
  40999d:	fcomip st,st(7)
  40999f:	ror    DWORD PTR [ebx-0x3f],0xe4
  4099a3:	mov    ch,0x1c
  4099a5:	add    bl,BYTE PTR [edx+0xb]
  4099a8:	into   
  4099a9:	adc    al,ah
  4099ab:	push   es
  4099ac:	mov    bl,0x79
  4099ae:	inc    edx
  4099af:	fmul   DWORD PTR [eax-0x27c754f5]
  4099b5:	mov    bh,0x98
  4099b7:	test   DWORD PTR [ecx+0x2],ecx
  4099ba:	sbb    DWORD PTR [edx-0x7ca2416a],0xc9fbc181
  4099c4:	int    0x3
  4099c6:	ins    DWORD PTR es:[edi],dx
  4099c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099c8:	xor    al,0x99
  4099ca:	sub    dh,ch
  4099cc:	aad    0x1
  4099ce:	add    eax,0x154878ce
  4099d3:	addr16 xor eax,0x1fc74e2
  4099d9:	loopne 0x4099ae
  4099db:	mov    gs,WORD PTR [edi+0x5337617c]
  4099e1:	sbb    esi,DWORD PTR [edi-0x9da424c]
  4099e7:	pusha  
  4099e8:	test   eax,0xacb4c530
  4099ed:	fstp   st(7)
  4099ef:	rcr    BYTE PTR [eax-0x4d94be4],1
  4099f5:	mov    ecx,0xbb180b19
  4099fa:	add    ah,BYTE PTR [eax-0x5f7a491b]
  409a00:	(bad)  
  409a01:	pop    edx
  409a02:	cdq    
  409a03:	in     eax,dx
  409a04:	mov    ch,BYTE PTR [edx]
  409a06:	imul   edi,edx,0x8871c20f
  409a0c:	loope  0x409a4b
  409a0e:	sbb    BYTE PTR [edx+0x51bea990],dl
  409a14:	test   eax,0x16f85a7d
  409a19:	inc    ch
  409a1b:	xchg   edi,eax
  409a1c:	inc    ebp
  409a1d:	mov    esi,0xe9cf83d1
  409a22:	retf   
  409a23:	cmp    eax,0x71ce84a1
  409a28:	pusha  
  409a29:	jb     0x409a16
  409a2b:	cmp    eax,0x7e0e9d1e
  409a30:	dec    esi
  409a31:	bound  eax,QWORD PTR [ebx]
  409a33:	test   eax,ebp
  409a35:	fld    TBYTE PTR [ebp-0x7d]
  409a38:	add    eax,DWORD PTR [ecx]
  409a3a:	daa    
  409a3b:	mov    esi,0x280c2f8c
  409a40:	add    ah,bh
  409a42:	ja     0x409a49
  409a44:	jp     0x409aaf
  409a46:	cmp    cl,dh
  409a48:	retf   0x5806
  409a4b:	jnp    0x409a8a
  409a4d:	call   0x35e80482
  409a52:	div    DWORD PTR [edx+0x23]
  409a55:	or     dl,BYTE PTR [esi]
  409a57:	xor    al,0x14
  409a59:	repnz cwde 
  409a5b:	xor    DWORD PTR [edx+0x45],ecx
  409a5e:	xchg   esp,eax
  409a5f:	int3   
  409a60:	jne    0x4099e8
  409a62:	popa   
  409a63:	cmp    BYTE PTR [ebx-0x1e],0xd
  409a67:	outs   dx,BYTE PTR ds:[esi]
  409a68:	js     0x409ace
  409a6a:	jns    0x409a8f
  409a6c:	cmp    esi,DWORD PTR [ecx+0x15d8083b]
  409a72:	jmp    DWORD PTR [ebx-0x60]
  409a75:	jmp    0x409a5f
  409a77:	xor    BYTE PTR [edx],dl
  409a79:	xchg   dh,cl
  409a7b:	scas   eax,DWORD PTR es:[edi]
  409a7c:	imul   ebp,edi,0xa7bb753b
  409a82:	scas   al,BYTE PTR es:[edi]
  409a83:	xchg   DWORD PTR [esi],ebx
  409a85:	sub    DWORD PTR [ecx+esi*2-0x97cb0c7],0x2a49752b
  409a90:	xor    eax,0x6afae286
  409a95:	mov    bh,0x3d
  409a97:	xor    ecx,ecx
  409a99:	xchg   ebx,eax
  409a9a:	xor    al,0xfe
  409a9c:	push   ebp
  409a9d:	imul   eax,DWORD PTR [edi-0x32854a0e],0x650f3c4f
  409aa7:	mov    al,ds:0x5d2b9466
  409aac:	imul   esp,ecx,0xdd0b5b35
  409ab2:	ins    DWORD PTR es:[edi],dx
  409ab3:	mov    ch,0x11
  409ab5:	cld    
  409ab6:	outs   dx,BYTE PTR ds:[esi]
  409ab7:	mov    al,ds:0xa14aa388
  409abc:	push   es
  409abd:	or     bh,ah
  409abf:	rcr    DWORD PTR [eax+eiz*2-0x46],cl
  409ac3:	and    ch,BYTE PTR [ebx-0x67]
  409ac6:	xchg   edx,eax
  409ac7:	rol    DWORD PTR [edi-0x8],0xed
  409acb:	les    edx,FWORD PTR [esi+0x6f8e66f3]
  409ad1:	or     DWORD PTR ds:0xf8f154fe,eax
  409ad7:	xchg   ebx,eax
  409ad8:	xchg   ebp,eax
  409ad9:	adc    DWORD PTR [edx],edi
  409adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409adc:	cmp    al,BYTE PTR [esp+ebp*2+0x3c]
  409ae0:	mov    ebp,0xfe181f6
  409ae5:	ja     0x409a8c
  409ae7:	cld    
  409ae8:	add    ah,BYTE PTR [esi+0x2]
  409aeb:	std    
  409aec:	mul    BYTE PTR [ecx]
  409aee:	push   esi
  409aef:	in     al,dx
  409af0:	adc    BYTE PTR [eax],cl
  409af2:	lods   eax,DWORD PTR ds:[esi]
  409af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af4:	daa    
  409af5:	loop   0x409ae2
  409af7:	pop    eax
  409af8:	sub    ah,BYTE PTR [esp+ebp*1-0x57721e73]
  409aff:	ror    DWORD PTR [esi+0x357e360c],cl
  409b05:	fnstsw ax
  409b07:	xchg   esi,eax
  409b08:	repz cmp esp,esi
  409b0b:	jb     0x409aa1
  409b0d:	cs push ss
  409b0f:	nop
  409b10:	inc    ebx
  409b11:	or     ebp,ecx
  409b13:	and    DWORD PTR [edi-0x2b79ce78],edi
  409b19:	loope  0x409af2
  409b1b:	out    dx,al
  409b1c:	rcl    edx,0xeb
  409b1f:	mov    ebx,0xc396440e
  409b24:	scas   al,BYTE PTR es:[edi]
  409b25:	aas    
  409b26:	push   edi
  409b27:	xor    DWORD PTR [edx],edx
  409b29:	add    esp,ebx
  409b2b:	adc    ecx,DWORD PTR [ecx-0x7b]
  409b2e:	imul   edx,DWORD PTR [ebp+0x21],0x20
  409b32:	hlt    
  409b33:	pop    ecx
  409b34:	adc    DWORD PTR [edx+0x4a174ea0],0xe90dcc5c
  409b3e:	sbb    BYTE PTR [esi],al
  409b40:	lods   eax,DWORD PTR ds:[esi]
  409b41:	push   edx
  409b42:	inc    edx
  409b43:	xchg   ecx,eax
  409b44:	mov    ds:0xf8160f4a,al
  409b49:	cmp    al,0x96
  409b4b:	shr    DWORD PTR [ebp-0x430a8620],0xbc
  409b52:	pushf  
  409b53:	retf   0x6f03
  409b56:	xor    eax,0x96742640
  409b5b:	xor    al,0xb9
  409b5d:	iret   
  409b5e:	mov    esi,0xcd852e1b
  409b63:	mov    esp,esi
  409b65:	mov    bl,0x78
  409b67:	inc    ecx
  409b68:	xor    ah,BYTE PTR [esp+ebx*4]
  409b6b:	sub    dl,BYTE PTR [esi+eiz*1-0x4]
  409b6f:	xor    eax,0x3147be6f
  409b74:	retf   
  409b75:	cld    
  409b76:	jno    0x409b08
  409b78:	inc    esi
  409b79:	mov    al,ds:0x5d17a4eb
  409b7e:	mov    ch,0x18
  409b80:	sbb    BYTE PTR [esi-0x4eaafeef],bh
  409b86:	lahf   
  409b87:	mov    bl,ah
  409b89:	jmp    0xa02ba52e
  409b8e:	icebp  
  409b8f:	sub    al,BYTE PTR [edx]
  409b91:	test   al,0x9c
  409b93:	sbb    esp,edi
  409b95:	mov    esi,0x5a2dcf8
  409b9a:	cdq    
  409b9b:	adc    al,0x86
  409b9d:	mov    WORD PTR [esi+0x3],cs
  409ba0:	xchg   edi,eax
  409ba1:	push   0x7efa9aa5
  409ba6:	pop    esi
  409ba7:	push   edx
  409ba8:	push   eax
  409ba9:	mov    cl,0x96
  409bab:	in     al,dx
  409bac:	mov    esp,0x41e9b4f4
  409bb1:	retf   0xe3fb
  409bb4:	xor    DWORD PTR [edx+ebx*2],edi
  409bb7:	or     al,0xc6
  409bb9:	mov    al,ds:0x853427ac
  409bbe:	shl    DWORD PTR [edi+0x449a4bb3],0x52
  409bc5:	mov    ds,ebx
  409bc7:	dec    ebp
  409bc8:	mov    eax,0x517fc192
  409bcd:	jecxz  0x409c2f
  409bcf:	mov    ebx,ds
  409bd1:	dec    esi
  409bd2:	inc    edx
  409bd3:	outs   dx,DWORD PTR ds:[esi]
  409bd4:	ins    BYTE PTR es:[edi],dx
  409bd5:	push   ecx
  409bd6:	adc    ecx,ebx
  409bd8:	hlt    
  409bd9:	lahf   
  409bda:	fs aam 0x7e
  409bdd:	int    0x1b
  409bdf:	in     eax,0x75
  409be1:	mov    al,ds:0x295d2cd6
  409be6:	fisub  WORD PTR [ecx-0x9f5a844]
  409bec:	mov    bh,0xb5
  409bee:	outs   dx,DWORD PTR ds:[esi]
  409bef:	loop   0x409b77
  409bf1:	call   0x240c0c92
  409bf6:	pop    edx
  409bf7:	inc    edx
  409bf8:	inc    esp
  409bf9:	mov    ds:0xb2c492eb,al
  409bfe:	test   DWORD PTR [eax],0x4c6f8422
  409c04:	jbe    0x409bd7
  409c06:	int3   
  409c07:	mov    esi,0x2b093591
  409c0c:	mov    ch,0xb4
  409c0e:	hlt    
  409c0f:	sub    al,0xdb
  409c11:	data16 mov dl,0x22
  409c14:	or     al,0x72
  409c16:	icebp  
  409c17:	es pop edx
  409c19:	or     esp,DWORD PTR [ebp+0x18303db1]
  409c1f:	aas    
  409c20:	les    edi,FWORD PTR [edi+0x72]
  409c23:	add    BYTE PTR [edi+ebp*8+0x2c],dl
  409c27:	ror    BYTE PTR [eax],0xeb
  409c2a:	(bad)  
  409c2b:	and    dl,ch
  409c2d:	daa    
  409c2e:	xor    edi,DWORD PTR [edx]
  409c30:	xor    DWORD PTR [eax-0x58],edx
  409c33:	cld    
  409c34:	mov    eax,ds:0x9dfa737f
  409c39:	pushf  
  409c3a:	dec    eax
  409c3b:	stos   DWORD PTR es:[edi],eax
  409c3c:	sti    
  409c3d:	jbe    0x409c5e
  409c3f:	push   0x73
  409c41:	stc    
  409c42:	inc    edx
  409c43:	(bad)  
  409c44:	sub    al,0xb1
  409c46:	shr    BYTE PTR [edx+eax*4],0x95
  409c4a:	inc    ebp
  409c4b:	jb     0x409c01
  409c4d:	fcmove st,st(1)
  409c4f:	xchg   edx,eax
  409c50:	inc    esi
  409c51:	push   esi
  409c52:	lahf   
  409c53:	fcom   DWORD PTR ds:[eax-0x2c]
  409c57:	shl    DWORD PTR [edx],0xc9
  409c5a:	xacquire xchg BYTE PTR [ebx+edx*4],ch
  409c5e:	sbb    ecx,DWORD PTR [ebx+0x7e]
  409c61:	in     al,dx
  409c62:	xchg   ebx,eax
  409c63:	gs test eax,0xb163901d
  409c69:	fcomi  st,st(7)
  409c6b:	add    esi,DWORD PTR [edx+0x686faf66]
  409c71:	test   DWORD PTR [edi-0x34d1a87e],esi
  409c77:	test   bh,dh
  409c79:	loope  0x409c67
  409c7b:	out    0x9,eax
  409c7d:	push   edx
  409c7e:	lea    edx,[ebp-0x55]
  409c81:	mov    cl,0x56
  409c83:	popa   
  409c84:	aaa    
  409c85:	jnp    0x409c91
  409c87:	adc    al,0x87
  409c89:	add    eax,0xf3df2c7a
  409c8e:	rcr    DWORD PTR [edi-0x7792ddb9],0x1c
  409c95:	icebp  
  409c96:	xchg   ebx,eax
  409c97:	cmp    eax,0x7b5f9465
  409c9c:	fs fwait
  409c9e:	mov    dl,0x5e
  409ca0:	dec    ecx
  409ca1:	retf   0xcd7f
  409ca4:	xchg   ebp,eax
  409ca5:	push   0x80d306aa
  409caa:	mov    al,0x54
  409cac:	sub    BYTE PTR [eax-0x25],al
  409caf:	and    dl,bl
  409cb1:	mov    edx,0x325bce5
  409cb6:	pop    edx
  409cb7:	les    ebp,FWORD PTR [esi-0x4a]
  409cba:	mov    ch,0x5a
  409cbc:	add    cl,ah
  409cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cbf:	mov    cl,0x14
  409cc1:	pushf  
  409cc2:	ror    BYTE PTR [esi+0x4c2bfce6],cl
  409cc8:	nop
  409cc9:	ins    BYTE PTR es:[edi],dx
  409cca:	sbb    dh,BYTE PTR [edx+0x4274590a]
  409cd0:	mov    ebp,cs
  409cd2:	push   ss
  409cd3:	mov    esp,0xcc5c072c
  409cd8:	sbb    al,0xe3
  409cda:	and    eax,0x3c85295c
  409cdf:	xor    cl,BYTE PTR [eax-0x54]
  409ce2:	sbb    BYTE PTR [edi-0xda97e34],dl
  409ce8:	adc    cl,al
  409cea:	out    dx,al
  409ceb:	ins    DWORD PTR es:[edi],dx
  409cec:	sub    ah,BYTE PTR [ebx+0x32]
  409cef:	out    dx,eax
  409cf0:	mov    ah,0x3c
  409cf2:	repz dec esp
  409cf4:	pop    ebp
  409cf5:	push   ebp
  409cf6:	jmp    0x74766f34
  409cfb:	mov    ah,0x25
  409cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cfe:	hlt    
  409cff:	fcmovne st,st(7)
  409d01:	ins    DWORD PTR es:[edi],dx
  409d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d03:	xchg   BYTE PTR [edx],dh
  409d05:	icebp  
  409d06:	push   es
  409d07:	push   ecx
  409d08:	add    ch,BYTE PTR [ecx]
  409d0a:	mov    ebp,DWORD PTR [edx+0x56]
  409d0d:	rol    esp,0xc4
  409d10:	mov    ch,0xce
  409d12:	pop    edx
  409d13:	or     BYTE PTR [esi-0x38394018],0x52
  409d1a:	add    ah,BYTE PTR [ecx+0x6c870567]
  409d20:	outs   dx,BYTE PTR ds:[esi]
  409d21:	test   BYTE PTR fs:[eax+ebp*8+0x74],al
  409d26:	inc    ecx
  409d27:	test   al,0x9c
  409d29:	leave  
  409d2a:	fbstp  TBYTE PTR [ebx+0x4631c4a9]
  409d30:	(bad)  
  409d31:	push   edi
  409d32:	jmp    0x5e3ac048
  409d37:	nop
  409d38:	mov    al,ds:0x3f0f897c
  409d3d:	lea    ebp,[edi+0x72]
  409d40:	lds    edx,FWORD PTR [edi-0x6bd38439]
  409d46:	adc    cl,BYTE PTR [edx]
  409d48:	iret   
  409d49:	je     0x409d45
  409d4b:	ja     0x409cdb
  409d4d:	or     cl,BYTE PTR [eax]
  409d4f:	ds jmp 0x6a54:0xf001028e
  409d57:	das    
  409d58:	shl    BYTE PTR [eax],1
  409d5a:	push   ecx
  409d5b:	(bad)  
  409d5c:	fdivr  DWORD PTR [ecx-0x550ee8ee]
  409d62:	gs (bad) 
  409d64:	in     eax,0x93
  409d66:	sar    DWORD PTR [eax],cl
  409d68:	stos   DWORD PTR es:[edi],eax
  409d69:	add    BYTE PTR [edi],ch
  409d6b:	mov    eax,0x347981e9
  409d70:	fsubr  DWORD PTR [esp+ebp*2]
  409d73:	test   eax,0x8c33a932
  409d78:	ja     0x409d88
  409d7a:	into   
  409d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7c:	xchg   ebp,eax
  409d7d:	jp     0x409dce
  409d7f:	mov    bl,0x90
  409d81:	aad    0xc1
  409d83:	pop    edx
  409d84:	in     al,0xbb
  409d86:	jecxz  0x409d0f
  409d88:	out    0x74,al
  409d8a:	stos   DWORD PTR es:[edi],eax
  409d8b:	push   es
  409d8c:	addr16 out 0x24,eax
  409d8f:	jns    0x409dc3
  409d91:	dec    ecx
  409d92:	push   0x3b99a836
  409d97:	ffreep st(2)
  409d99:	cmp    dh,ch
  409d9b:	cwde   
  409d9c:	push   0x3d
  409d9e:	inc    edi
  409d9f:	test   BYTE PTR [ebp+0x51],bh
  409da2:	loop   0x409d45
  409da4:	inc    edx
  409da5:	inc    ebx
  409da6:	in     eax,0x5e
  409da8:	cmp    edi,DWORD PTR [ecx-0x22]
  409dab:	push   esi
  409dac:	icebp  
  409dad:	pop    edx
  409dae:	call   0x6432:0x598a8c34
  409db5:	daa    
  409db6:	push   esi
  409db7:	pop    ds
  409db8:	adc    edi,edi
  409dba:	push   esi
  409dbb:	test   eax,0x3d157714
  409dc0:	pop    esp
  409dc1:	lock nop
  409dc3:	adc    al,BYTE PTR [ebx+0xf]
  409dc6:	in     eax,dx
  409dc7:	fdivr  DWORD PTR [edx+0x72211761]
  409dcd:	ret    0x51a0
  409dd0:	inc    edi
  409dd1:	test   DWORD PTR ds:0x4c4796b8,esi
  409dd7:	inc    ebp
  409dd8:	push   0xffffff9e
  409dda:	cmp    eax,0x2ea5f956
  409ddf:	push   ebx
  409de0:	(bad)  
  409de1:	ins    DWORD PTR es:[edi],dx
  409de2:	cli    
  409de3:	test   BYTE PTR [ecx+eax*2+0x23],cl
  409de7:	dec    ecx
  409de8:	sub    al,0x66
  409dea:	in     al,0x2f
  409dec:	cld    
  409ded:	aad    0x54
  409def:	pop    esp
  409df0:	lods   eax,DWORD PTR ds:[esi]
  409df1:	std    
  409df2:	jae    0x409e15
  409df4:	out    dx,al
  409df5:	scas   al,BYTE PTR es:[edi]
  409df6:	daa    
  409df7:	fsubr  DWORD PTR [ebx+0x2]
  409dfa:	in     al,0x6d
  409dfc:	inc    edi
  409dfd:	int3   
  409dfe:	lock ins DWORD PTR es:[edi],dx
  409e00:	mov    ah,0xff
  409e02:	ror    DWORD PTR [ebx+edi*4],cl
  409e05:	div    BYTE PTR [edi]
  409e07:	cdq    
  409e08:	lods   al,BYTE PTR ds:[esi]
  409e09:	mov    ds:0x988085f0,eax
  409e0e:	stos   BYTE PTR es:[edi],al
  409e0f:	sub    BYTE PTR ss:[esi],0xce
  409e13:	test   DWORD PTR [esi+0x7cc63878],edx
  409e19:	adc    bh,BYTE PTR [ebx-0x1]
  409e1c:	test   al,0x2
  409e1e:	enter  0x9b1a,0x52
  409e22:	xlat   BYTE PTR ds:[ebx]
  409e23:	jbe    0x409e04
  409e25:	mov    ebp,0xeae5c80e
  409e2a:	ret    0x93d4
  409e2d:	add    ah,0xbb
  409e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e31:	hlt    
  409e32:	fcmove st,st(3)
  409e34:	xor    BYTE PTR [esi+0x538891e6],0x5e
  409e3b:	clc    
  409e3c:	or     DWORD PTR [ecx+ebp*4+0xf],ecx
  409e40:	and    DWORD PTR [esi+ebx*4],0x52ca5c27
  409e47:	iret   
  409e48:	mov    al,0x7e
  409e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e4b:	stos   BYTE PTR es:[edi],al
  409e4c:	and    ah,BYTE PTR [eax+0x25]
  409e4f:	inc    esi
  409e50:	test   BYTE PTR [edx+eax*1],dh
  409e53:	div    BYTE PTR [edi]
  409e55:	fdivr  DWORD PTR [esi]
  409e57:	pop    esi
  409e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e59:	and    DWORD PTR [esi+esi*1],0x57663ce
  409e60:	cmc    
  409e61:	add    cl,BYTE PTR [ebp-0x49]
  409e64:	mov    al,0xfc
  409e66:	imul   eax,DWORD PTR [edi+ecx*2-0x56ac2094],0x48
  409e6e:	aam    0x89
  409e70:	ror    BYTE PTR [esi],0xa0
  409e73:	lods   al,BYTE PTR cs:[esi]
  409e75:	inc    ebx
  409e76:	sti    
  409e77:	ins    DWORD PTR es:[edi],dx
  409e78:	mov    es,eax
  409e7a:	xor    bl,bl
  409e7c:	std    
  409e7d:	enter  0xc374,0xa4
  409e81:	sub    eax,0xeec00fd6
  409e86:	icebp  
  409e87:	outs   dx,DWORD PTR ds:[esi]
  409e88:	into   
  409e89:	imul   eax,DWORD PTR [eax+0x76d33dc4],0x408a59f0
  409e93:	daa    
  409e94:	xchg   ebp,eax
  409e95:	addr16 inc edi
  409e97:	inc    esi
  409e98:	fdiv   QWORD PTR [ecx-0x2e178410]
  409e9e:	pop    ebx
  409e9f:	ss or  dl,dl
  409ea2:	jle    0x409e52
  409ea4:	cmc    
  409ea5:	loop   0x409e5c
  409ea7:	adc    DWORD PTR [esi],esi
  409ea9:	sar    ah,cl
  409eab:	mov    ebx,DWORD PTR [ebx+eax*4]
  409eae:	jae    0x409eb3
  409eb0:	in     eax,dx
  409eb1:	mov    edx,0x69037c8c
  409eb6:	in     al,0x1b
  409eb8:	pusha  
  409eb9:	dec    edi
  409eba:	sahf   
  409ebb:	mov    ebx,DWORD PTR [ecx]
  409ebd:	call   0x834a:0xc2122ac6
  409ec4:	push   edi
  409ec5:	and    al,0xd4
  409ec7:	mov    esp,0x5f877eb9
  409ecc:	mov    ch,0x86
  409ece:	pop    ebp
  409ecf:	and    al,0x1b
  409ed1:	es retf 
  409ed3:	cmp    edx,DWORD PTR [esi+ebp*2]
  409ed6:	(bad)  
  409ed7:	rol    BYTE PTR [ebx+0x2a],1
  409eda:	sar    esp,1
  409edc:	cld    
  409edd:	xchg   edx,eax
  409ede:	inc    ebx
  409edf:	in     eax,0xd
  409ee1:	or     eax,0x1a1925de
  409ee6:	ds inc esp
  409ee8:	pop    ds
  409ee9:	(bad)  
  409eea:	pop    edi
  409eeb:	inc    ebx
  409eec:	mov    WORD PTR [eax],?
  409eee:	mov    ebp,0x2c3d566d
  409ef3:	jns    0x409ecf
  409ef5:	jns    0x409ebc
  409ef7:	shl    BYTE PTR [ebp+ebp*2+0x7a44042a],0x3a
  409eff:	out    dx,eax
  409f00:	ror    BYTE PTR [ebp+0x42],1
  409f03:	mov    dl,0x0
  409f05:	jbe    0x409f82
  409f07:	mov    ch,0xaa
  409f09:	lds    ebp,FWORD PTR [edx+0x69837108]
  409f0f:	mov    DWORD PTR [ecx-0x3c224e5c],ecx
  409f15:	mov    ds:0x5741ec14,al
  409f1a:	jno    0x409f24
  409f1c:	and    ecx,0x12
  409f1f:	dec    eax
  409f20:	cwde   
  409f21:	imul   ebp,ebp,0xfffffff4
  409f24:	inc    ebx
  409f25:	cld    
  409f26:	and    eax,0xead68185
  409f2b:	push   ss
  409f2c:	mov    bh,0xa4
  409f2e:	cmp    BYTE PTR [ebp+0x6dfd3344],bh
  409f34:	jmp    0x409f5b
  409f36:	stos   BYTE PTR es:[edi],al
  409f37:	mov    edx,ss
  409f39:	push   ecx
  409f3a:	mov    cl,bl
  409f3c:	bound  edi,QWORD PTR ds:0xec8ae15b
  409f42:	cdq    
  409f43:	pop    edi
  409f44:	mov    ?,WORD PTR [esi+eax*1-0xb]
  409f48:	mov    dh,0x12
  409f4a:	xor    BYTE PTR [ecx],bl
  409f4c:	or     BYTE PTR [esi],0x80
  409f4f:	mov    edi,0x885926b5
  409f54:	lods   al,BYTE PTR ds:[esi]
  409f55:	cmp    bl,bh
  409f57:	hlt    
  409f58:	es aas 
  409f5a:	push   ds
  409f5b:	lods   eax,DWORD PTR ds:[esi]
  409f5c:	dec    edx
  409f5d:	mov    bl,0xab
  409f5f:	jne    0x409fab
  409f61:	adc    eax,DWORD PTR [edi+0xfc713d1]
  409f67:	adc    al,BYTE PTR [edi+0x7c74b955]
  409f6d:	imul   esp,ecx,0x45289cd4
  409f73:	cmp    edi,DWORD PTR [eax+0x48f63fdc]
  409f79:	rcr    BYTE PTR [edi+0x7e2d451d],0x3b
  409f80:	call   0xc044:0x46d32063
  409f87:	popf   
  409f88:	sub    DWORD PTR [edx],0x4c
  409f8b:	mov    BYTE PTR [ebx+edx*2],dh
  409f8e:	aam    0x5
  409f90:	in     eax,0x39
  409f92:	fsubr  QWORD PTR [ebx+0x26]
  409f95:	jecxz  0x409fae
  409f97:	hlt    
  409f98:	cmp    bh,BYTE PTR [esi]
  409f9a:	ror    bh,1
  409f9c:	sub    dh,al
  409f9e:	sub    al,0x39
  409fa0:	sbb    ebp,DWORD PTR ss:[ebx-0x6526f145]
  409fa7:	je     0x409ffd
  409fa9:	into   
  409faa:	sub    bh,BYTE PTR [ebp-0x65]
  409fad:	push   0x3611138a
  409fb2:	(bad)  
  409fb3:	test   eax,0x5ddb7f06
  409fb8:	clc    
  409fb9:	ins    DWORD PTR es:[edi],dx
  409fba:	mov    bh,0xc4
  409fbc:	lahf   
  409fbd:	inc    ebx
  409fbe:	mov    ebp,0x6ef520d5
  409fc3:	push   ebx
  409fc4:	xchg   edx,eax
  409fc5:	sahf   
  409fc6:	jecxz  0x409ffc
  409fc8:	outs   dx,BYTE PTR ds:[esi]
  409fc9:	inc    esp
  409fca:	xchg   edx,eax
  409fcb:	div    BYTE PTR [ebx+0x2a]
  409fce:	test   BYTE PTR [ebp+0x5],bl
  409fd1:	outs   dx,BYTE PTR ds:[esi]
  409fd2:	mov    cl,0x49
  409fd4:	dec    esp
  409fd5:	dec    edx
  409fd6:	aas    
  409fd7:	xchg   ecx,eax
  409fd8:	stc    
  409fd9:	out    0x2c,eax
  409fdb:	mov    dh,0xe5
  409fdd:	aaa    
  409fde:	es jge 0x409fda
  409fe1:	push   ebx
  409fe2:	inc    esp
  409fe3:	and    esp,esi
  409fe5:	call   0x7ed1:0x91aed7a
  409fec:	xor    eax,0x19e8cecb
  409ff1:	icebp  
  409ff2:	inc    eax
  409ff3:	out    0xc2,al
  409ff5:	add    DWORD PTR [esi],edx
  409ff7:	loopne 0x40a03a
  409ff9:	test   al,0x98
  409ffb:	je     0x40a007
  409ffd:	add    al,0xeb
  409fff:	stos   BYTE PTR es:[edi],al
  40a000:	xchg   esp,eax
  40a001:	gs clc 
  40a003:	and    al,0x4b
  40a005:	jle    0x40a07e
  40a007:	icebp  
  40a008:	aas    
  40a009:	dec    edx
  40a00a:	pushf  
  40a00b:	das    
  40a00c:	xchg   edx,eax
  40a00d:	xlat   BYTE PTR ds:[ebx]
  40a00e:	cli    
  40a00f:	sbb    eax,0xae4fae04
  40a014:	cdq    
  40a015:	add    edx,ecx
  40a017:	inc    ebp
  40a018:	popf   
  40a019:	sub    DWORD PTR [edx+0x56],ebx
  40a01c:	pusha  
  40a01d:	ins    DWORD PTR es:[edi],dx
  40a01e:	imul   esp,esp,0xfffffff5
  40a021:	ins    DWORD PTR es:[edi],dx
  40a022:	scas   al,BYTE PTR es:[edi]
  40a023:	jmp    0x8ac0:0xea3fd4a6
  40a02a:	pop    es
  40a02b:	adc    bh,BYTE PTR [esp+ebx*1-0x7da99dbc]
  40a032:	or     BYTE PTR [eax],cl
  40a034:	ins    BYTE PTR es:[edi],dx
  40a035:	inc    eax
  40a036:	fnstenv [esi]
  40a038:	sbb    eax,0x87e4d3e9
  40a03d:	cdq    
  40a03e:	ret    0xb581
  40a041:	xor    edi,ebx
  40a043:	and    BYTE PTR [edi-0x3d8831ae],ch
  40a049:	pop    edi
  40a04a:	cmp    eax,0x6b8f1cdf
  40a04f:	std    
  40a050:	shl    BYTE PTR [ebx+0x5e4c1eeb],1
  40a056:	outs   dx,DWORD PTR ds:[esi]
  40a057:	jb     0x40a092
  40a059:	add    al,0xaa
  40a05b:	lock or bl,BYTE PTR [edi]
  40a05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a05f:	retf   
  40a060:	mov    eax,DWORD PTR [ecx-0x3c]
  40a063:	fisub  DWORD PTR [eax+0x4459ffe1]
  40a069:	mov    ds:0x431c9ffd,al
  40a06e:	jnp    0x40a042
  40a070:	jnp    0x40a0a6
  40a072:	sub    dh,BYTE PTR ds:0x6339c06e
  40a078:	(bad)
  40a07b:	dec    edx
  40a07c:	mov    ah,0xcc
  40a07e:	jmp    0x4348:0x8baa805d
  40a085:	jg     0x40a0e1
  40a087:	inc    esi
  40a088:	dec    ebx
  40a089:	sar    esp,cl
  40a08b:	push   edi
  40a08c:	add    al,0x2c
  40a08e:	dec    edi
  40a08f:	sub    BYTE PTR [eax],dl
  40a091:	xor    al,0x66
  40a093:	pop    ebx
  40a094:	jp     0x40a063
  40a096:	loopne 0x40a03b
  40a098:	add    BYTE PTR [edx],ah
  40a09a:	ffree  st(3)
  40a09c:	sti    
  40a09d:	lds    ebx,FWORD PTR [ebp+ebx*4-0x3d]
  40a0a1:	mov    eax,0x3a9efdc5
  40a0a6:	jae    0x40a04f
  40a0a8:	int3   
  40a0a9:	cmp    DWORD PTR [edx],ebx
  40a0ab:	(bad)  
  40a0ac:	fistp  QWORD PTR [eax-0x5f]
  40a0af:	cmp    DWORD PTR [eax-0x405c2732],0x1d
  40a0b6:	stos   DWORD PTR es:[edi],eax
  40a0b7:	out    dx,eax
  40a0b8:	lock and dh,al
  40a0bb:	pushf  
  40a0bc:	add    eax,0x662aa0ed
  40a0c1:	jns    0x40a0d1
  40a0c3:	and    edx,DWORD PTR [edx-0x22b67632]
  40a0c9:	push   edi
  40a0ca:	(bad)  
  40a0cb:	scas   eax,DWORD PTR es:[edi]
  40a0cc:	pop    edx
  40a0cd:	(bad)  
  40a0ce:	das    
  40a0cf:	cmc    
  40a0d0:	retf   0x4ade
  40a0d3:	adc    edi,DWORD PTR [edx]
  40a0d5:	lods   eax,DWORD PTR ds:[esi]
  40a0d6:	stos   BYTE PTR es:[edi],al
  40a0d7:	mov    ebp,0x70b5c90c
  40a0dc:	xor    dh,ah
  40a0de:	adc    eax,0x7deb043a
  40a0e3:	sub    eax,0x94b97e
  40a0e8:	jmp    0xc5273c24
  40a0ed:	or     BYTE PTR [eax+0x12dfa812],dl
  40a0f3:	and    BYTE PTR [ebp+0x66],bl
  40a0f6:	ins    BYTE PTR es:[edi],dx
  40a0f7:	xchg   ebx,eax
  40a0f8:	(bad)  
  40a0f9:	iret   
  40a0fa:	fstp   TBYTE PTR [ebp+0x48]
  40a0fd:	sbb    edx,DWORD PTR [eax]
  40a0ff:	xchg   edx,eax
  40a100:	stc    
  40a101:	not    DWORD PTR [ecx-0x47a80793]
  40a107:	push   esi
  40a108:	pop    edi
  40a109:	xchg   edi,eax
  40a10a:	ficomp DWORD PTR ds:0xc21230a8
  40a110:	fdivr  st,st(7)
  40a112:	sub    edx,DWORD PTR [esi]
  40a114:	sub    ah,BYTE PTR ds:0x9102b1ee
  40a11a:	scas   eax,DWORD PTR es:[edi]
  40a11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a11c:	ret    0xcd95
  40a11f:	in     eax,dx
  40a120:	sbb    ebx,DWORD PTR [edx+eiz*1+0x3c]
  40a124:	pop    ebp
  40a125:	add    eax,0xe44e957c
  40a12a:	sbb    esp,ebx
  40a12c:	retf   
  40a12d:	mov    DWORD PTR [edi-0x36],ebp
  40a130:	xor    al,0xc
  40a132:	arpl   si,bx
  40a134:	push   esi
  40a135:	repz or DWORD PTR ss:[ebp-0x497c4fa0],esi
  40a13d:	mov    al,ds:0xe38fdff5
  40a142:	mov    edi,0x89f28a4f
  40a147:	pop    ds
  40a148:	sub    eax,DWORD PTR [ecx-0x940c73d]
  40a14e:	cmp    al,BYTE PTR [edi]
  40a150:	in     al,0x9c
  40a152:	sub    DWORD PTR [edi],esp
  40a154:	je     0x40a0e9
  40a156:	lods   al,BYTE PTR ds:[esi]
  40a157:	mov    al,ds:0xf60029b5
  40a15c:	xor    edi,eax
  40a15e:	xor    BYTE PTR [ebp-0x7da8f891],ch
  40a164:	add    eax,0x2c56d565
  40a169:	push   0x42d4832d
  40a16e:	cs loop 0x40a1c3
  40a171:	imul   edi,DWORD PTR [esi],0x5c6dc564
  40a177:	dec    edx
  40a178:	enter  0xbc27,0x82
  40a17c:	jg     0x40a1ad
  40a17e:	xchg   edi,eax
  40a17f:	out    0x71,eax
  40a181:	xchg   DWORD PTR ds:0xd4f23f71,esi
  40a187:	add    al,0xd0
  40a189:	cs mov ch,0x49
  40a18c:	xchg   ebp,eax
  40a18d:	test   edi,ecx
  40a18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a191:	mov    al,0x8c
  40a193:	test   BYTE PTR [ecx+0x20],ch
  40a196:	scas   eax,DWORD PTR es:[edi]
  40a197:	cmc    
  40a198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a199:	sub    eax,0x4cb9ca7a
  40a19e:	inc    ebp
  40a19f:	cmc    
  40a1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a1:	pushf  
  40a1a2:	out    0x29,eax
  40a1a4:	ret    0x8453
  40a1a7:	adc    ah,BYTE PTR [eax-0x7affb608]
  40a1ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ae:	sub    esp,DWORD PTR [esi+0x3db86680]
  40a1b4:	arpl   si,cx
  40a1b6:	jns    0x40a1f6
  40a1b8:	test   BYTE PTR [ebx+0x3e103fae],bl
  40a1be:	scas   eax,DWORD PTR es:[edi]
  40a1bf:	jbe    0x40a1fe
  40a1c1:	scas   eax,DWORD PTR es:[edi]
  40a1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1c3:	cmp    dl,BYTE PTR [edi-0x56]
  40a1c6:	sbb    ebx,DWORD PTR [esi+0x5bed25ab]
  40a1cc:	push   edi
  40a1cd:	push   esi
  40a1ce:	fidivr WORD PTR [ebx-0x11]
  40a1d1:	cmp    eax,0xe869b067
  40a1d6:	call   0x9981:0x218c0da8
  40a1dd:	inc    ecx
  40a1de:	test   al,0x89
  40a1e0:	pop    esi
  40a1e1:	stc    
  40a1e2:	mov    edx,0x829d8dc9
  40a1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e8:	mov    esp,0x82ca8f70
  40a1ed:	sbb    edx,DWORD PTR [edi-0x4890e192]
  40a1f3:	popf   
  40a1f4:	dec    ecx
  40a1f5:	push   ss
  40a1f6:	dec    edx
  40a1f7:	shl    BYTE PTR [ebp-0x7f],1
  40a1fa:	pushf  
  40a1fb:	fdiv   st,st(3)
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	mov    ch,0xd9
  40a5ea:	inc    edi
  40a5eb:	mov    esi,0x7c7c0627
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	imul   edx,DWORD PTR [edi-0x5cb74595],0xffffff8d
  40a5fb:	sbb    dl,BYTE PTR [edx]
  40a5fd:	xchg   esp,eax
  40a5fe:	lahf   
  40a5ff:	test   eax,0xcee42b10
  40a604:	into   
  40a605:	pop    ss
  40a606:	rol    ebp,cl
  40a608:	inc    ebx
  40a609:	mov    ch,0xb1
  40a60b:	push   ds
  40a60c:	lods   eax,DWORD PTR ds:[esi]
  40a60d:	not    BYTE PTR [eax]
  40a60f:	loope  0x40a67f
  40a611:	dec    eax
  40a612:	call   0x9bb95d88
  40a617:	mov    ss,ecx
  40a619:	call   0xbfb51e7d
  40a61e:	leave  
  40a61f:	push   es
  40a620:	mov    edi,edx
  40a622:	push   ebp
  40a623:	shr    esi,cl
  40a625:	push   ebp
  40a626:	mov    cl,0x9a
  40a628:	xor    eax,0x5d03ab92
  40a62d:	jmp    0x40a5c6
  40a62f:	in     eax,dx
  40a630:	and    bl,ch
  40a632:	(bad)  
  40a633:	cmc    
  40a634:	pop    ecx
  40a635:	add    dl,BYTE PTR [eax-0x43cbfeb8]
  40a63b:	in     eax,dx
  40a63c:	jo     0x40a631
  40a63e:	inc    esp
  40a63f:	sub    ah,bh
  40a641:	(bad)  
  40a642:	popf   
  40a643:	inc    edi
  40a644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a646:	ds leave 
  40a648:	mov    al,BYTE PTR [ebx-0x403db63b]
  40a64e:	xchg   ebp,eax
  40a64f:	xor    DWORD PTR [ebx],esi
  40a651:	xchg   ebp,eax
  40a652:	xor    edi,DWORD PTR [edi+0x7d]
  40a655:	or     DWORD PTR [ebx],ebp
  40a657:	push   0x74
  40a659:	je     0x40a6bf
  40a65b:	pop    eax
  40a65c:	or     ebx,edx
  40a65e:	rol    DWORD PTR [edx+0x6347028b],cl
  40a664:	mov    dh,0x42
  40a666:	jb     0x40a5eb
  40a668:	mov    ah,0x11
  40a66a:	cwde   
  40a66b:	jmp    0xde3:0x4d3a8fce
  40a672:	aas    
  40a673:	mov    WORD PTR [eax],gs
  40a675:	imul   edx,DWORD PTR [edi-0xfe0b255],0x0
  40a67c:	test   BYTE PTR [esi],bh
  40a67e:	jb     0x40a685
  40a680:	sbb    bh,0x5e
  40a683:	or     al,0x77
  40a685:	push   esi
  40a686:	lds    eax,FWORD PTR [ebx]
  40a688:	jecxz  0x40a65d
  40a68a:	or     al,BYTE PTR [ebp-0x503e3a89]
  40a690:	jecxz  0x40a61c
  40a692:	dec    ebp
  40a693:	pushf  
  40a694:	pop    esi
  40a695:	rcr    al,cl
  40a697:	dec    edi
  40a698:	nop
  40a699:	pop    ebp
  40a69a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a69b:	mov    bl,0xce
  40a69d:	out    0x4d,al
  40a69f:	jmp    0x8102:0x712899ba
  40a6a6:	and    al,0x52
  40a6a8:	jg     0x40a69c
  40a6aa:	cmp    dh,dl
  40a6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ad:	add    al,BYTE PTR [esi]
  40a6af:	cmp    al,0x4c
  40a6b1:	mov    ebp,0xfb357ec4
  40a6b6:	hlt    
  40a6b7:	cli    
  40a6b8:	out    0xb8,eax
  40a6ba:	and    eax,0x1b11b982
  40a6bf:	enter  0xc073,0x5a
  40a6c3:	loop   0x40a6f6
  40a6c5:	cli    
  40a6c6:	cmp    dh,cl
  40a6c8:	xor    BYTE PTR [ecx+0x25],0x7d
  40a6cc:	jl     0x40a680
  40a6ce:	mov    ?,WORD PTR [esi]
  40a6d0:	pop    esi
  40a6d1:	add    DWORD PTR [esi],esi
  40a6d3:	sbb    eax,0x7cc2e7a0
  40a6d8:	adc    ch,BYTE PTR [edi+ebx*4-0x3b7726ba]
  40a6df:	dec    edx
  40a6e0:	jae    0x40a6ff
  40a6e2:	mov    dh,0x5b
  40a6e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6e5:	call   0x90d2:0x5967fc39
  40a6ec:	fst    DWORD PTR [eax+0x71]
  40a6ef:	ds push edx
  40a6f1:	in     al,dx
  40a6f2:	dec    esi
  40a6f3:	inc    edx
  40a6f4:	pusha  
  40a6f5:	add    edi,DWORD PTR [ebp+0x41]
  40a6f8:	jne    0x40a695
  40a6fa:	inc    ebx
  40a6fb:	and    eax,0x88fcf22e
  40a700:	jp     0x40a6a8
  40a702:	fs xchg edi,eax
  40a704:	out    dx,eax
  40a705:	sbb    eax,0x873c02b6
  40a70a:	push   ecx
  40a70b:	add    DWORD PTR [esp+edx*8+0x5d],eax
  40a70f:	out    dx,al
  40a710:	ret    
  40a711:	std    
  40a712:	rol    BYTE PTR [eax],0x4c
  40a715:	(bad)  
  40a717:	out    dx,eax
  40a718:	rol    bl,0x53
  40a71b:	mov    ds:0xae1b5633,al
  40a720:	repz or al,BYTE PTR ds:0x107bf043
  40a727:	dec    edx
  40a728:	inc    ebp
  40a729:	fwait
  40a72a:	push   es
  40a72b:	repz cwde 
  40a72d:	sub    al,0xb1
  40a72f:	imul   ecx,DWORD PTR [ebx+0x34a15361],0xffffff89
  40a736:	nop
  40a737:	adc    BYTE PTR [eax],bh
  40a739:	pop    esp
  40a73a:	scas   al,BYTE PTR es:[edi]
  40a73b:	dec    ecx
  40a73c:	retf   
  40a73d:	and    BYTE PTR [ebx+0x63],dh
  40a740:	dec    eax
  40a741:	push   edi
  40a742:	test   eax,0x2c130a18
  40a747:	or     BYTE PTR [ebp-0x5409aa26],ch
  40a74d:	mov    eax,ds:0xa1cdafa0
  40a752:	lds    eax,FWORD PTR [esi-0x7b]
  40a755:	push   es
  40a756:	cld    
  40a757:	inc    edi
  40a758:	inc    edx
  40a759:	and    BYTE PTR [edx],ch
  40a75b:	and    ebp,DWORD PTR [ebx+0x2]
  40a75e:	ret    
  40a75f:	mov    edx,0x7575a4fa
  40a764:	into   
  40a765:	retf   
  40a766:	adc    BYTE PTR [ebx+0x5a],0xcf
  40a76a:	stos   BYTE PTR es:[edi],al
  40a76b:	imul   edx,DWORD PTR [ecx],0xffffff98
  40a76e:	xor    BYTE PTR [edx-0x127cab86],ah
  40a774:	stos   BYTE PTR es:[edi],al
  40a775:	mov    dh,0x45
  40a777:	mov    esi,0xd8420d90
  40a77c:	mov    cl,0xd4
  40a77e:	jae    0x40a78d
  40a780:	pushf  
  40a781:	test   eax,0xdd266798
  40a786:	or     eax,0x5bf27a59
  40a78b:	push   esp
  40a78c:	stc    
  40a78d:	enter  0x34b1,0xd4
  40a791:	pop    ebx
  40a792:	xchg   ebp,eax
  40a793:	mov    es,WORD PTR [eax]
  40a795:	mov    es,WORD PTR [edi-0x4f79cbcb]
  40a79b:	or     al,BYTE PTR [eax+0x3f]
  40a79e:	rol    DWORD PTR [eax-0x3d],0x2f
  40a7a2:	out    0x90,eax
  40a7a4:	fild   QWORD PTR [esi]
  40a7a6:	add    esi,DWORD PTR [eax+0x71]
  40a7a9:	mov    ah,0x16
  40a7ab:	daa    
  40a7ac:	(bad)  
  40a7ae:	repnz push esp
  40a7b0:	dec    ebp
  40a7b1:	shl    ch,cl
  40a7b3:	je     0x40a758
  40a7b5:	retf   
  40a7b6:	lods   al,BYTE PTR ds:[esi]
  40a7b7:	(bad)  
  40a7b8:	xor    eax,edi
  40a7ba:	inc    esp
  40a7bb:	sub    BYTE PTR [ebx+edi*4+0x7e00f52a],bl
  40a7c2:	xchg   ebp,eax
  40a7c3:	jo     0x40a7e6
  40a7c5:	add    al,0x3
  40a7c7:	jb     0x40a7c5
  40a7c9:	sbb    BYTE PTR [ebx],bl
  40a7cb:	jae    0x40a794
  40a7cd:	adc    DWORD PTR [esi+0x5f5d9b61],ebp
  40a7d3:	pop    esi
  40a7d4:	fs loop 0x40a75d
  40a7d7:	bound  edi,QWORD PTR [edi+0x57b1e72b]
  40a7dd:	adc    eax,0x37380664
  40a7e2:	loop   0x40a7e8
  40a7e4:	xchg   ebp,eax
  40a7e5:	sub    esp,esp
  40a7e7:	shl    BYTE PTR [ebx+eiz*4],1
  40a7ea:	sub    ebx,DWORD PTR ds:0xa02a2542
  40a7f0:	aad    0x81
  40a7f2:	pop    edx
  40a7f3:	push   ds
  40a7f4:	dec    ebx
  40a7f5:	mov    dl,0x7a
  40a7f7:	xchg   ecx,eax
  40a7f8:	popf   
  40a7f9:	dec    esi
  40a7fa:	into   
  40a7fb:	sbb    BYTE PTR [eax],dl
  40a7fd:	and    edi,DWORD PTR [esi+0x746aace4]
  40a803:	mov    al,BYTE PTR [edi+0x79b5731b]
  40a809:	add    al,0x60
  40a80b:	dec    edi
  40a80c:	push   esp
  40a80d:	inc    esp
  40a80e:	sub    dl,bh
  40a810:	cmc    
  40a811:	ret    0x9750
  40a814:	or     DWORD PTR [esi-0x2c19803a],0xffffffa9
  40a81b:	push   ss
  40a81c:	xchg   ecx,eax
  40a81d:	mov    eax,ds:0x2f858c4e
  40a822:	push   0x5
  40a824:	pushf  
  40a825:	push   ebp
  40a826:	aas    
  40a827:	or     ecx,ebp
  40a829:	sbb    DWORD PTR cs:[esi+0x2495e123],esp
  40a830:	jne    0x40a874
  40a832:	mov    esi,0x7a5df4e4
  40a837:	inc    ebp
  40a838:	xor    BYTE PTR [ecx+0x60],al
  40a83b:	fs pop esi
  40a83d:	push   ds
  40a83e:	loope  0x40a8a4
  40a840:	ficomp WORD PTR [esi-0x2b]
  40a843:	sub    bh,dh
  40a845:	mov    ebx,0x2758c5fd
  40a84a:	iret   
  40a84b:	fwait
  40a84c:	sbb    BYTE PTR [ecx+0x57],ch
  40a84f:	mov    eax,edi
  40a851:	neg    DWORD PTR [edx-0xf2dfff7]
  40a857:	jecxz  0x40a873
  40a859:	lea    esp,[eax+0x6ab6732]
  40a85f:	dec    esi
  40a860:	pop    ebp
  40a861:	push   ss
  40a862:	int    0x2
  40a864:	pop    edx
  40a865:	xor    al,0x45
  40a867:	or     al,0xd6
  40a869:	dec    esi
  40a86a:	jp     0xd9c4c429
  40a870:	jno    0x40a88c
  40a872:	cmc    
  40a873:	imul   esp,eax,0x39bea2cb
  40a879:	ror    DWORD PTR [esi],cl
  40a87b:	cmp    al,0x86
  40a87d:	(bad)  
  40a87e:	clc    
  40a87f:	xor    al,0x5
  40a881:	outs   dx,BYTE PTR ds:[esi]
  40a882:	dec    edx
  40a883:	(bad)  
  40a884:	jge    0x40a8f5
  40a886:	les    esi,FWORD PTR [esi+0x7c]
  40a889:	popf   
  40a88a:	xchg   edi,eax
  40a88b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88c:	inc    edx
  40a88d:	sub    bl,BYTE PTR [ebx]
  40a88f:	or     cl,bh
  40a891:	stc    
  40a892:	inc    ebx
  40a893:	inc    ebx
  40a894:	xlat   BYTE PTR ds:[ebx]
  40a895:	sti    
  40a896:	pop    esi
  40a897:	push   ebx
  40a898:	out    0x5f,eax
  40a89a:	mov    BYTE PTR [edi+0x71],dl
  40a89d:	or     cl,BYTE PTR [edi+eax*1]
  40a8a0:	adc    BYTE PTR [ecx],ch
  40a8a2:	sub    DWORD PTR [edi],0x27
  40a8a5:	mov    ebp,0x5389097d
  40a8aa:	xchg   ecx,eax
  40a8ab:	(bad)  
  40a8ac:	fwait
  40a8ad:	mov    BYTE PTR [ebx+0x6f11a819],bh
  40a8b3:	or     ah,BYTE PTR [ecx+0x67]
  40a8b6:	(bad)  
  40a8b7:	sub    dh,BYTE PTR [esi]
  40a8b9:	push   edi
  40a8ba:	xor    eax,0x8122c9b4
  40a8bf:	test   al,0xea
  40a8c1:	test   DWORD PTR [ecx],ebx
  40a8c3:	xor    bh,BYTE PTR [esp+ebp*2-0x6d8d2f73]
  40a8ca:	sub    eax,0x439fd451
  40a8cf:	xor    DWORD PTR [edx+0x73],eax
  40a8d2:	sub    BYTE PTR [ecx-0x6f],al
  40a8d5:	aam    0x63
  40a8d7:	adc    DWORD PTR [edi+0x45],ebx
  40a8da:	mov    edx,0x57344d28
  40a8df:	ja     0x40a86a
  40a8e1:	add    al,0x2
  40a8e3:	adc    edx,edx
  40a8e5:	dec    ebp
  40a8e6:	jl     0x40a89f
  40a8e8:	retf   
  40a8e9:	stc    
  40a8ea:	arpl   WORD PTR [eiz*2+0x1634c535],si
  40a8f1:	out    0x4a,eax
  40a8f3:	fadd   DWORD PTR [edx+eax*8-0x187d7bc7]
  40a8fa:	pop    esp
  40a8fb:	adc    cl,cl
  40a8fd:	dec    DWORD PTR [eax+0x260451e2]
  40a903:	lods   al,BYTE PTR ds:[esi]
  40a904:	aam    0x7f
  40a906:	int3   
  40a907:	push   edx
  40a908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a909:	dec    esp
  40a90a:	jae    0x40a929
  40a90c:	fistp  DWORD PTR [edx+0x2a]
  40a90f:	mov    edi,ebp
  40a911:	pop    esp
  40a912:	mov    esp,0x6a10536e
  40a917:	jne    0x40a90f
  40a919:	in     eax,dx
  40a91a:	sbb    DWORD PTR [edx],esi
  40a91c:	pushf  
  40a91d:	push   esi
  40a91e:	sub    al,0xb8
  40a920:	push   es
  40a921:	xchg   BYTE PTR [ecx+0x51a3d001],bl
  40a927:	fwait
  40a928:	mov    bl,0x63
  40a92a:	into   
  40a92b:	repz cmc 
  40a92d:	(bad)  
  40a92f:	sbb    al,0x1f
  40a931:	mov    esi,0xa3bde4d9
  40a936:	mov    eax,ds:0xdec95a55
  40a93b:	mov    ax,0xd827
  40a93f:	outs   dx,BYTE PTR ds:[esi]
  40a940:	ror    dl,cl
  40a942:	push   eax
  40a943:	jae    0x40a8ed
  40a945:	rcr    DWORD PTR [eax],1
  40a947:	imul   BYTE PTR [esi-0x1f]
  40a94a:	pop    ebp
  40a94b:	and    edi,edx
  40a94d:	(bad)  
  40a94e:	adc    al,0x3f
  40a950:	adc    eax,DWORD PTR [ebp-0x29]
  40a953:	jns    0x40a95d
  40a955:	les    edx,FWORD PTR [ebx]
  40a957:	ds dec ecx
  40a959:	imul   BYTE PTR [edx]
  40a95b:	add    bh,dh
  40a95d:	lods   eax,DWORD PTR ds:[esi]
  40a95e:	xchg   ebx,eax
  40a95f:	pop    edi
  40a960:	cmp    edx,DWORD PTR [esi]
  40a962:	or     esi,DWORD PTR [ecx-0x60ffa7d2]
  40a968:	adc    esp,esi
  40a96a:	adc    ebx,DWORD PTR [ecx]
  40a96c:	jg     0x40a911
  40a96e:	fsub   st(2),st
  40a970:	loope  0x40a928
  40a972:	iret   
  40a973:	jnp    0x40a96f
  40a975:	call   0x536e42
  40a97a:	into   
  40a97b:	and    edi,eax
  40a97d:	push   ebp
  40a97e:	pop    esp
  40a97f:	lods   eax,DWORD PTR ds:[esi]
  40a980:	sub    DWORD PTR [edi],ebp
  40a982:	not    BYTE PTR [esi+0x7]
  40a985:	pop    es
  40a986:	(bad)  
  40a987:	sbb    edi,esi
  40a989:	and    BYTE PTR ss:[ebx-0x1c961301],0xbf
  40a991:	fsub   QWORD PTR [edx]
  40a993:	dec    ecx
  40a994:	sahf   
  40a995:	xor    DWORD PTR [edx],eax
  40a997:	mov    edi,0x3e0656b3
  40a99c:	or     eax,0x21a653a9
  40a9a1:	mov    bl,0xfb
  40a9a3:	lds    ebp,FWORD PTR [ebx]
  40a9a5:	mov    dl,bh
  40a9a7:	fsub   QWORD PTR [ebx+edi*1+0x65]
  40a9ab:	lock mov eax,DWORD PTR [eax+0x3b]
  40a9af:	lods   eax,DWORD PTR ds:[esi]
  40a9b0:	imul   edi,DWORD PTR [edi+0x3565e644],0x5a
  40a9b7:	sbb    bl,ah
  40a9b9:	cwde   
  40a9ba:	push   0xffffffe6
  40a9bc:	ja     0x40a941
  40a9be:	outs   dx,DWORD PTR ds:[esi]
  40a9bf:	fst    DWORD PTR [ecx-0x2b]
  40a9c2:	sub    ch,BYTE PTR [eax-0x3a618a7e]
  40a9c8:	sahf   
  40a9c9:	pxor   mm1,mm5
  40a9cc:	inc    eax
  40a9cd:	daa    
  40a9ce:	xchg   ebp,eax
  40a9cf:	push   ecx
  40a9d0:	cli    
  40a9d1:	mov    ah,0xcb
  40a9d3:	xor    eax,0x4f6b7893
  40a9d8:	ret    0xf954
  40a9db:	add    cl,ch
  40a9dd:	cwde   
  40a9de:	fisubr WORD PTR [edi]
  40a9e0:	outs   dx,DWORD PTR ds:[esi]
  40a9e1:	iret   
  40a9e2:	sti    
  40a9e3:	(bad)  
  40a9e4:	jb     0x40aa59
  40a9e6:	sahf   
  40a9e7:	mov    ah,0xe9
  40a9e9:	mov    edi,esp
  40a9eb:	mov    al,0x3a
  40a9ed:	fadd   DWORD PTR [ebx+edx*1-0x7520993]
  40a9f4:	(bad)  
  40a9f5:	jp     0x40aa75
  40a9f7:	mov    DWORD PTR [ecx+0x29],ebp
  40a9fa:	dec    ecx
  40a9fb:	mov    ds:0xf943fced,eax
  40aa00:	xchg   ebp,eax
  40aa01:	(bad)  [eax]
  40aa03:	jmp    FWORD PTR [ebx-0x18]
  40aa06:	mov    dh,0x8f
  40aa08:	cmp    al,0xc7
  40aa0a:	add    cx,si
  40aa0d:	into   
  40aa0e:	sahf   
  40aa0f:	addr16 test eax,0xe4c39283
  40aa15:	cs clc 
  40aa17:	add    BYTE PTR [edi-0x78920465],ah
  40aa1d:	(bad)  
  40aa1e:	rol    BYTE PTR [edi],1
  40aa20:	loop   0x40aa23
  40aa22:	popf   
  40aa23:	aad    0xbe
  40aa25:	sti    
  40aa26:	or     DWORD PTR [eax],edi
  40aa28:	cmp    cl,BYTE PTR [ebp+0x3e]
  40aa2b:	lds    edi,FWORD PTR [edx+0x1c80298]
  40aa31:	mov    DWORD PTR [ebx+0x7fe12085],ebp
  40aa37:	scas   eax,DWORD PTR es:[edi]
  40aa38:	adc    BYTE PTR [ecx],0xf8
  40aa3b:	cmp    ebx,esp
  40aa3d:	jl     0x40aa1e
  40aa3f:	iret   
  40aa40:	xchg   ecx,eax
  40aa41:	sbb    DWORD PTR [ebp-0x11],0x993b218f
  40aa48:	(bad)  
  40aa49:	fnsave [edx+0x32]
  40aa4c:	adc    BYTE PTR [ebp+0x33],dl
  40aa4f:	dec    esi
  40aa50:	ins    DWORD PTR es:[edi],dx
  40aa51:	mov    dh,0xc3
  40aa53:	sbb    eax,0x6bd83c03
  40aa58:	fst    QWORD PTR [eax+0x64]
  40aa5b:	xor    dl,ah
  40aa5d:	or     esp,DWORD PTR [edi]
  40aa5f:	ins    BYTE PTR es:[edi],dx
  40aa60:	(bad)  
  40aa61:	push   0xc
  40aa63:	addr16 push esp
  40aa65:	xor    al,0x25
  40aa67:	test   bl,al
  40aa69:	cmp    DWORD PTR [ecx+0xa],ecx
  40aa6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa6d:	je     0x40aa28
  40aa6f:	es cmp eax,0xe6d5ebb9
  40aa75:	int3   
  40aa76:	push   ds
  40aa77:	sbb    dl,BYTE PTR [eax-0x3]
  40aa7a:	sub    al,dl
  40aa7c:	fidivr DWORD PTR ds:0x89c96f40
  40aa82:	and    ebx,edi
  40aa84:	and    dh,bl
  40aa86:	xor    BYTE PTR [ebp+0x53],0x21
  40aa8a:	in     al,0xfe
  40aa8c:	cld    
  40aa8d:	retf   
  40aa8e:	aas    
  40aa8f:	out    dx,eax
  40aa90:	cwde   
  40aa91:	fmulp  st(0),st
  40aa93:	or     ecx,edx
  40aa95:	and    al,0xb8
  40aa97:	fcomp  QWORD PTR ds:0x9db9e398
  40aa9d:	ret    0x352b
  40aaa0:	push   esi
  40aaa1:	test   DWORD PTR [esi+0x15aa94cf],ecx
  40aaa7:	pop    ds
  40aaa8:	int3   
  40aaa9:	pop    ds
  40aaaa:	adc    BYTE PTR [ecx+0x4f2a31b5],cl
  40aab0:	je     0x40aab0
  40aab2:	jecxz  0x40aaa5
  40aab4:	in     al,0x6a
  40aab6:	xchg   edi,eax
  40aab7:	xchg   esi,eax
  40aab8:	ja     0x40aacc
  40aaba:	sbb    eax,ebp
  40aabc:	aam    0x1d
  40aabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabf:	mov    esi,0x8d3b7ca
  40aac4:	xchg   ebp,eax
  40aac5:	jne    0x40ab44
  40aac7:	ja     0x40ab08
  40aac9:	pop    eax
  40aaca:	mov    edi,0x10ff9fc3
  40aacf:	aas    
  40aad0:	pop    edx
  40aad1:	or     edx,DWORD PTR [ebx-0x7361d44c]
  40aad7:	neg    DWORD PTR [esi-0x53]
  40aada:	inc    edi
  40aadb:	adc    bh,BYTE PTR [ebx]
  40aadd:	or     eax,0xd0d15b25
  40aae2:	add    eax,esi
  40aae4:	aam    0x84
  40aae6:	push   esp
  40aae7:	cmp    bh,BYTE PTR [edi-0x4]
  40aaea:	es jno 0x40aaf4
  40aaed:	out    dx,eax
  40aaee:	or     ebx,esp
  40aaf0:	adc    bh,BYTE PTR [edx-0x4d]
  40aaf3:	data16 mov WORD PTR ds:0xb36222ad,cs
  40aafa:	and    al,0x0
  40aafc:	mov    dl,0xab
  40aafe:	mov    cl,bh
  40ab00:	cwde   
  40ab01:	or     BYTE PTR [esi+0x30],bh
  40ab04:	push   edi
  40ab05:	dec    edi
  40ab06:	sbb    DWORD PTR [ebp-0x5b],ecx
  40ab09:	lods   al,BYTE PTR ds:[esi]
  40ab0a:	neg    DWORD PTR [edx]
  40ab0c:	dec    ebx
  40ab0d:	inc    edi
  40ab0e:	add    eax,0x21ff8308
  40ab13:	call   0xdbaafabb
  40ab18:	and    ebp,DWORD PTR fs:[eax+0xb]
  40ab1c:	adc    BYTE PTR [ecx-0x60411256],ch
  40ab22:	pop    ss
  40ab23:	out    dx,eax
  40ab24:	enter  0x48f9,0x4
  40ab28:	aas    
  40ab29:	into   
  40ab2a:	cli    
  40ab2b:	ins    DWORD PTR es:[edi],dx
  40ab2c:	mov    ebp,0x6c1a4795
  40ab31:	sbb    BYTE PTR [esi-0x63],dl
  40ab34:	out    0xea,al
  40ab36:	jo     0x40ab6e
  40ab38:	dec    esp
  40ab39:	or     eax,0x72b940fb
  40ab3e:	xor    bl,BYTE PTR [esi-0x5ef467b5]
  40ab44:	add    ebx,0xb0847391
  40ab4a:	sub    ebx,DWORD PTR [eax]
  40ab4c:	outs   dx,DWORD PTR ds:[esi]
  40ab4d:	imul   esp,DWORD PTR [ebx],0x592d5d4f
  40ab53:	push   esi
  40ab54:	(bad)  
  40ab55:	in     eax,0xf9
  40ab57:	mov    ?,WORD PTR [ebx+0x70]
  40ab5a:	scas   eax,DWORD PTR es:[edi]
  40ab5b:	jp     0x40ab7a
  40ab5d:	mov    WORD PTR [ecx],ss
  40ab5f:	cdq    
  40ab60:	jno    0x40ab62
  40ab62:	std    
  40ab63:	and    DWORD PTR [edi+0x46],esi
  40ab66:	pop    ecx
  40ab67:	shr    DWORD PTR [esi-0x5b],0x31
  40ab6b:	dec    ebx
  40ab6c:	lahf   
  40ab6d:	push   esi
  40ab6e:	mov    BYTE PTR [eax],cl
  40ab70:	inc    eax
  40ab71:	sub    DWORD PTR [ecx],esp
  40ab73:	cmp    eax,0x5dfe9fbe
  40ab78:	jb     0x40abe9
  40ab7a:	call   0xe617:0x532ad8cc
  40ab81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab82:	or     esp,ecx
  40ab84:	lods   al,BYTE PTR ds:[esi]
  40ab85:	jl     0x40abbe
  40ab87:	inc    edi
  40ab88:	sbb    esp,ebp
  40ab8a:	mov    esi,0x59082356
  40ab8f:	cmc    
  40ab90:	pop    eax
  40ab91:	push   0x69
  40ab93:	xor    BYTE PTR [eax+0x4b7085b4],ah
  40ab99:	mov    al,ds:0xa796e080
  40ab9e:	inc    ecx
  40ab9f:	and    ecx,DWORD PTR [ecx-0x1634ab05]
  40aba5:	mov    ah,ah
  40aba7:	mov    bl,0xfd
  40aba9:	aaa    
  40abaa:	mov    esp,0x67b69d58
  40abaf:	dec    esp
  40abb0:	fsubr  DWORD PTR [ebx-0x311ff482]
  40abb6:	and    DWORD PTR [esi],eax
  40abb8:	push   edi
  40abb9:	test   DWORD PTR ds:[edi+ebx*1+0x24bde81d],ecx
  40abc1:	pop    es
  40abc2:	sub    al,0xd3
  40abc4:	xor    dl,al
  40abc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abc7:	or     cl,bh
  40abc9:	xor    eax,0x452cb48f
  40abce:	call   edx
  40abd0:	ins    DWORD PTR es:[edi],dx
  40abd1:	out    dx,al
  40abd2:	push   ss
  40abd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd4:	cmp    dh,BYTE PTR [ebx-0x10f49373]
  40abda:	xlat   BYTE PTR ds:[ebx]
  40abdb:	ins    BYTE PTR es:[edi],dx
  40abdc:	cmp    BYTE PTR [edi],dh
  40abde:	add    BYTE PTR [esi-0xa35b91d],bl
  40abe4:	jl     0x40ab78
  40abe6:	lahf   
  40abe7:	mov    al,0x22
  40abe9:	push   ebx
  40abea:	daa    
  40abeb:	xlat   BYTE PTR ds:[ebx]
  40abec:	lea    ecx,[ebx]
  40abee:	imul   ecx,DWORD PTR [edi+edi*2-0x5c],0x38d8ae72
  40abf6:	push   ds
  40abf7:	rol    ch,1
  40abf9:	rep ins BYTE PTR es:[edi],dx
  40abfb:	mov    eax,0xe65b72cb
  40ac00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac01:	mov    al,ds:0x88018156
  40ac06:	repnz or dl,BYTE PTR [eax]
  40ac09:	(bad)  
  40ac0a:	and    bl,dl
  40ac0c:	xor    BYTE PTR [edx+0x38],bh
  40ac0f:	ds sub cl,0x98
  40ac13:	pop    edx
  40ac14:	fsubr  st(5),st
  40ac16:	adc    eax,0xb36cebc7
  40ac1c:	lock stc 
  40ac1e:	cmp    al,0x65
  40ac20:	dec    esi
  40ac21:	cwde   
  40ac22:	loope  0x40ac36
  40ac24:	sub    eax,0xb64f82a0
  40ac29:	xor    DWORD PTR [esi+0x16],esi
  40ac2c:	and    al,0xce
  40ac2e:	sar    BYTE PTR [edx-0x7f],1
  40ac31:	jle    0x40abbb
  40ac33:	ja     0x40ac7d
  40ac35:	sar    DWORD PTR [edi+ecx*1-0x6e121feb],cl
  40ac3c:	imul   ebp,DWORD PTR ds:0x25c0879b,0x1ce94742
  40ac46:	xchg   BYTE PTR [edi],dh
  40ac48:	dec    edx
  40ac49:	cmp    eax,0xa9512814
  40ac4e:	fild   DWORD PTR [ecx]
  40ac50:	(bad)  
  40ac51:	cli    
  40ac52:	outs   dx,BYTE PTR ds:[esi]
  40ac53:	shr    esi,1
  40ac55:	fiadd  DWORD PTR [ecx]
  40ac57:	leave  
  40ac58:	outs   dx,BYTE PTR ds:[esi]
  40ac59:	and    esi,eax
  40ac5b:	adc    cl,BYTE PTR [edx+0x7a65738b]
  40ac61:	pop    ecx
  40ac62:	shl    BYTE PTR [edi],1
  40ac64:	inc    ebx
  40ac65:	dec    ecx
  40ac66:	cmp    eax,0xab283026
  40ac6b:	cmc    
  40ac6c:	mov    edi,0x789c7c44
  40ac71:	mov    DWORD PTR [ebp+0x0],esi
  40ac74:	ret    
  40ac75:	cdq    
  40ac76:	xchg   ebp,eax
  40ac77:	jae    0x40aca5
  40ac79:	int3   
  40ac7a:	loopne 0x40acd3
  40ac7c:	ret    0xaeb3
  40ac7f:	rol    DWORD PTR [ecx-0x10],0xe5
  40ac83:	jl     0x40aceb
  40ac85:	push   es
  40ac86:	xchg   ebx,eax
  40ac87:	enter  0x681e,0x49
  40ac8b:	fstp   TBYTE PTR [eax-0x4d3f0da5]
  40ac91:	dec    edx
  40ac92:	mov    al,0x7d
  40ac94:	lock mov ebp,0xa3105e4b
  40ac9a:	jo     0x40ad15
  40ac9c:	ds push esp
  40ac9e:	or     al,0xb7
  40aca0:	pop    ebx
  40aca1:	mov    dl,0xac
  40aca3:	push   edx
  40aca4:	fmul   DWORD PTR [bx+di]
  40aca7:	out    dx,al
  40aca8:	fs sti 
  40acaa:	pop    ecx
  40acab:	jl     0x40ad11
  40acad:	test   BYTE PTR [eax+0x6a],bl
  40acb0:	push   esp
  40acb1:	add    dl,BYTE PTR [ecx+0x6772e704]
  40acb7:	stos   BYTE PTR es:[edi],al
  40acb8:	aas    
  40acb9:	cmp    al,0xd6
  40acbb:	loope  0x40ad2c
  40acbd:	mov    DWORD PTR [eax],edx
  40acbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc0:	js     0x40aca7
  40acc2:	ret    
  40acc3:	packuswb xmm0,xmm0
  40acc7:	xor    al,0xc9
  40acc9:	mov    bh,0xa1
  40accb:	test   BYTE PTR [edx+0x7b6df597],bh
  40acd1:	push   es
  40acd2:	xor    BYTE PTR [edx],dl
  40acd4:	sub    eax,0x13ae1e67
  40acd9:	imul   edi,eax,0x307bdf49
  40acdf:	fdiv   QWORD PTR [ecx]
  40ace1:	and    BYTE PTR [ecx+0x67],0x54
  40ace5:	mov    bl,0x75
  40ace7:	test   al,0xd9
  40ace9:	push   cs
  40acea:	mov    ds:0x54c89465,al
  40acef:	sbb    ecx,DWORD PTR [ebp-0x5355db89]
  40acf5:	push   ebx
  40acf6:	xor    bl,BYTE PTR [esi]
  40acf8:	and    al,0x1b
  40acfa:	sbb    bl,BYTE PTR [ebx-0x58]
  40acfd:	out    dx,eax
  40acfe:	ror    DWORD PTR [edi],0xf2
  40ad01:	scas   al,BYTE PTR es:[edi]
  40ad02:	mov    ss,WORD PTR [eax-0x24]
  40ad05:	fiadd  WORD PTR [esp+eax*2-0x7545e6bf]
  40ad0c:	jmp    0x40ac8f
  40ad0e:	imul   esi,esi,0x99f05665
  40ad14:	mov    BYTE PTR [ecx*4+0x24a7cdd0],bh
  40ad1b:	jne    0x40ad03
  40ad1d:	in     eax,0xef
  40ad1f:	stos   BYTE PTR es:[edi],al
  40ad20:	push   esi
  40ad21:	xor    esp,DWORD PTR [esi]
  40ad23:	pop    ebx
  40ad24:	adc    edi,DWORD PTR [esi]
  40ad26:	sbb    al,ah
  40ad28:	(bad)  
  40ad29:	std    
  40ad2a:	(bad)  
  40ad2b:	repz jb 0x40ad98
  40ad2e:	pop    ebx
  40ad2f:	cmp    DWORD PTR [eax+0x54],edx
  40ad32:	fstp   DWORD PTR [edx-0x2b]
  40ad35:	fucomip st,st(3)
  40ad37:	test   eax,0xd751e8df
  40ad3c:	add    edi,eax
  40ad3e:	(bad)  
  40ad40:	dec    ebp
  40ad41:	int    0xab
  40ad43:	sbb    edi,edx
  40ad45:	rol    BYTE PTR [ecx],1
  40ad47:	outs   dx,DWORD PTR ds:[esi]
  40ad48:	outs   dx,BYTE PTR ds:[esi]
  40ad49:	and    dl,dl
  40ad4b:	push   es
  40ad4c:	dec    ecx
  40ad4d:	nop
  40ad4e:	int3   
  40ad4f:	jno    0x40ad4e
  40ad51:	jmp    0x40ad78
  40ad53:	fstp   st(7)
  40ad55:	(bad)  
  40ad56:	jge    0x40ad54
  40ad58:	mov    cl,0x30
  40ad5a:	ret    0xaeb9
  40ad5d:	sbb    esi,eax
  40ad5f:	mov    ah,0xdc
  40ad61:	mov    BYTE PTR [eax+0x4d],bh
  40ad64:	(bad)  
  40ad65:	xchg   edi,eax
  40ad66:	or     eax,0x1d8c1fc8
  40ad6b:	(bad)  
  40ad6c:	cmp    dh,ah
  40ad6e:	loopne 0x40add8
  40ad70:	test   BYTE PTR [ecx-0x3ad3e308],0x18
  40ad77:	push   esi
  40ad78:	push   0x1f1ea022
  40ad7d:	mov    edx,0x974c9078
  40ad82:	outs   dx,BYTE PTR ds:[esi]
  40ad83:	or     dl,BYTE PTR [edi-0x634dda35]
  40ad89:	jno    0x40ad13
  40ad8b:	and    eax,0x9cc75a6f
  40ad90:	jge    0x40adcf
  40ad92:	(bad)  
  40ad93:	and    esp,DWORD PTR [eax]
  40ad95:	inc    esi
  40ad96:	mov    dl,0x76
  40ad98:	add    BYTE PTR [esi-0x7d],ah
  40ad9b:	rcr    BYTE PTR [ebp-0x15],0xf8
  40ad9f:	adc    eax,0xdaf70438
  40ada4:	pop    edx
  40ada5:	jg     0x40ae02
  40ada7:	ret    
  40ada8:	inc    ecx
  40ada9:	(bad)  
  40adaa:	js     0x40ad50
  40adac:	sub    BYTE PTR [ebp-0x1595c172],cl
  40adb2:	(bad)  
  40adb3:	jmp    0xd1f73525
  40adb8:	jnp    0x40ade0
  40adba:	adc    al,0xfe
  40adbc:	mov    eax,ds:0xe82ea416
  40adc1:	fsub   st(2),st
  40adc3:	mov    ecx,0x733b2683
  40adc8:	in     eax,0x76
  40adca:	adc    BYTE PTR [edi+edx*8-0x3c],0x2
  40adcf:	jg     0x40ad62
  40add1:	adc    BYTE PTR [esi+0x557ea97e],0x7
  40add8:	pop    ss
  40add9:	push   ss
  40adda:	dec    eax
  40addb:	jnp    0x40ae5a
  40addd:	iret   
  40adde:	xchg   ebp,eax
  40addf:	aas    
  40ade0:	loope  0x40adfd
  40ade2:	cvtdq2ps xmm5,XMMWORD PTR [ebp+0x249f58b0]
  40ade9:	pop    esi
  40adea:	xchg   edi,edx
  40adec:	push   ss
  40aded:	adc    DWORD PTR [edi+esi*2+0x2a],0x5bee1010
  40adf5:	sub    cl,BYTE PTR [edx-0x1d]
  40adf8:	push   esp
  40adf9:	push   esi
  40adfa:	cdq    
  40adfb:	add    ebp,DWORD PTR ds:0xf7409ff8
  40ae01:	std    
  40ae02:	nop
  40ae03:	mov    ecx,0xb047e6fe
  40ae08:	mov    esi,DWORD PTR [ebx+0x4a]
  40ae0b:	inc    edi
  40ae0c:	test   BYTE PTR [edi+0x46],0x9b
  40ae10:	cmp    DWORD PTR [eax+0x32dbf490],ebx
  40ae16:	daa    
  40ae17:	pop    edx
  40ae18:	push   ecx
  40ae19:	mov    al,0xd6
  40ae1b:	mov    edx,0xa22d6a98
  40ae20:	rcr    DWORD PTR [ebp+0x4b28033a],1
  40ae26:	jb     0x40ae55
  40ae28:	jnp    0x40ae40
  40ae2a:	clc    
  40ae2b:	push   edi
  40ae2c:	aaa    
  40ae2d:	cmp    cl,BYTE PTR [ebx+0x14]
  40ae30:	jp     0x40ae38
  40ae32:	(bad)  
  40ae33:	jno    0x40addc
  40ae35:	ja     0x40ae06
  40ae37:	mov    bh,0x21
  40ae39:	stc    
  40ae3a:	inc    ebx
  40ae3b:	pop    ds
  40ae3c:	adc    bl,bh
  40ae3e:	aam    0x79
  40ae40:	aam    0x8
  40ae42:	sub    dh,dh
  40ae44:	int    0x26
  40ae46:	xor    BYTE PTR [edx+ebx*4+0x409938f3],ch
  40ae4d:	xor    BYTE PTR [eax+0x4bd9c711],ch
  40ae53:	popa   
  40ae54:	aaa    
  40ae55:	in     al,0x3a
  40ae57:	and    eax,0x5691914a
  40ae5c:	js     0x40ae4d
  40ae5e:	(bad)  
  40ae5f:	sti    
  40ae60:	lock add ebp,DWORD PTR [esi-0x11]
  40ae64:	push   eax
  40ae65:	dec    DWORD PTR [eax-0x53b39fb4]
  40ae6b:	nop
  40ae6c:	push   edi
  40ae6d:	(bad)  
  40ae6e:	loop   0x40ae35
  40ae70:	xchg   edx,eax
  40ae71:	ficomp WORD PTR [ebp+0x3f]
  40ae74:	je     0x40aead
  40ae76:	cmp    dl,BYTE PTR [edi-0x60ac8f96]
  40ae7c:	iret   
  40ae7d:	ret    
  40ae7e:	ret    0xcc94
  40ae81:	ror    DWORD PTR [esi+0x7b7c20bc],cl
  40ae87:	cmp    eax,ebx
  40ae89:	jl     0x40aec0
  40ae8b:	pop    ds
  40ae8c:	outs   dx,DWORD PTR ds:[esi]
  40ae8d:	jmp    0x40ae25
  40ae8f:	sbb    al,BYTE PTR [edx-0x7be5101c]
  40ae95:	in     al,dx
  40ae96:	inc    ecx
  40ae97:	adc    ah,al
  40ae99:	addr16 ret 
  40ae9b:	mov    ebp,eax
  40ae9d:	and    al,0x84
  40ae9f:	ss test al,0x72
  40aea2:	loope  0x40ae81
  40aea4:	sbb    al,0x15
  40aea6:	and    bl,BYTE PTR [edi]
  40aea8:	fimul  DWORD PTR [ebp+0x39]
  40aeab:	or     cl,0x3b
  40aeae:	mov    edi,0xb19676d2
  40aeb3:	pop    esi
  40aeb4:	sbb    al,0xe2
  40aeb6:	(bad)  
  40aeb7:	popf   
  40aeb8:	stos   DWORD PTR es:[edi],eax
  40aeb9:	loope  0x40ae9d
  40aebb:	test   DWORD PTR [eax-0x4d],ebx
  40aebe:	jmp    0x58232e80
  40aec3:	add    BYTE PTR [ecx-0x162adccb],al
  40aec9:	push   esp
  40aeca:	or     BYTE PTR [esi-0x77],dl
  40aecd:	pop    esp
  40aece:	jnp    0x40af3a
  40aed0:	mov    cl,0x56
  40aed2:	push   ds
  40aed3:	call   0xa128e02f
  40aed8:	and    ebx,DWORD PTR [ecx+ecx*2]
  40aedb:	test   al,0xb0
  40aedd:	cmp    BYTE PTR [edx+0x23],al
  40aee0:	(bad)  
  40aee1:	lahf   
  40aee2:	mov    esp,0xfb73bff1
  40aee7:	push   0x10822d77
  40aeec:	add    BYTE PTR [ecx],dh
  40aeee:	jb     0x40aeb6
  40aef0:	es sub bl,cl
  40aef3:	cmc    
  40aef4:	or     ah,BYTE PTR [ebx-0x490694db]
  40aefa:	and    al,0x4d
  40aefc:	test   eax,esi
  40aefe:	sbb    eax,0x1d5d6ae7
  40af03:	ja     0x40af03
  40af05:	mov    dl,0xf0
  40af07:	dec    ebx
  40af08:	test   eax,0x768add94
  40af0d:	push   ebp
  40af0e:	cdq    
  40af0f:	call   0x61b7:0x71ffacfe
  40af16:	jae    0x40af39
  40af18:	inc    ebp
  40af19:	lahf   
  40af1a:	imul   esp,DWORD PTR [edx],0x5329f04b
  40af20:	push   0x20
  40af22:	es inc eax
  40af24:	jg     0x40af12
  40af26:	adc    DWORD PTR [ebx+0x2dea406c],0xffffffd6
  40af2d:	dec    esi
  40af2e:	pop    esi
  40af2f:	jmp    0x18dc27a
  40af34:	lds    eax,FWORD PTR [edi+0x76183cc1]
  40af3a:	pop    ds
  40af3b:	addr16 xchg edi,eax
  40af3d:	cmp    BYTE PTR [edx+esi*1+0x39],ch
  40af41:	retf   0x44d
  40af44:	push   0x5276949b
  40af49:	dec    esp
  40af4a:	pop    ss
  40af4b:	adc    edi,DWORD PTR [ebx+ecx*8]
  40af4e:	sbb    bl,bh
  40af50:	(bad)  
  40af51:	push   edi
  40af52:	leave  
  40af53:	rcr    DWORD PTR [ebx],cl
  40af55:	aaa    
  40af56:	sub    ch,ah
  40af58:	push   0xc51d2e6d
  40af5d:	push   esp
  40af5e:	data16 in al,0x10
  40af61:	pop    ds
  40af62:	cmp    eax,edi
  40af64:	jne    0x40af8b
  40af66:	adc    edi,ecx
  40af68:	sub    ah,bh
  40af6a:	push   edi
  40af6b:	adc    BYTE PTR [ecx+0x169cce00],ah
  40af71:	mov    eax,0x43c599ad
  40af76:	loope  0x40af48
  40af78:	mov    esi,0x1c5fd47c
  40af7d:	xchg   esp,eax
  40af7e:	lahf   
  40af7f:	sub    eax,0x4c56f00
  40af84:	rol    esp,1
  40af86:	pop    ecx
  40af87:	jp     0x40afa6
  40af89:	mov    ecx,ecx
  40af8b:	pop    ss
  40af8c:	xlat   BYTE PTR ds:[ebx]
  40af8d:	and    edi,ebx
  40af8f:	icebp  
  40af90:	pop    es
  40af91:	clc    
  40af92:	and    eax,0x7557039a
  40af97:	cld    
  40af98:	inc    ebp
  40af99:	(bad)  
  40af9a:	jns    0x40afa5
  40af9c:	(bad)  
  40af9d:	cmp    BYTE PTR [ecx],ah
  40af9f:	aas    
  40afa0:	popf   
  40afa1:	(bad)  
  40afa2:	lahf   
  40afa3:	cmp    eax,0xb9bca570
  40afa8:	sbb    BYTE PTR [ebx],cl
  40afaa:	icebp  
  40afab:	and    bl,BYTE PTR [ebp-0x38f83e18]
  40afb1:	(bad)  
  40afb3:	test   al,ch
  40afb5:	pop    ebp
  40afb6:	test   DWORD PTR [ebx-0x58],esi
  40afb9:	and    al,BYTE PTR es:[edi-0x40]
  40afbd:	mov    ecx,0xfb95e723
  40afc2:	stc    
  40afc3:	cmp    edx,esi
  40afc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afc6:	in     al,0xe4
  40afc8:	inc    ebx
  40afc9:	mov    ebx,edi
  40afcb:	jge    0xe4d659c9
  40afd1:	sub    ah,BYTE PTR [esi-0x3f]
  40afd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afd5:	je     0x40b051
  40afd7:	xor    al,0x5c
  40afd9:	das    
  40afda:	or     BYTE PTR [eax+0x5c8d4c4a],al
  40afe0:	mov    bl,0x2a
  40afe2:	scas   eax,DWORD PTR es:[edi]
  40afe3:	out    dx,al
  40afe4:	popf   
  40afe5:	or     esi,DWORD PTR [ebp-0x6c2c5594]
  40afeb:	test   DWORD PTR [edi-0x28],edx
  40afee:	and    bl,dl
  40aff0:	inc    eax
  40aff1:	inc    esp
  40aff2:	shr    BYTE PTR [ebp-0x7f],cl
  40aff5:	inc    eax
  40aff6:	mov    esi,0x7d3a220a
  40affb:	jae    0x40afb9
  40affd:	dec    esp
  40affe:	or     eax,DWORD PTR [ecx]
  40b000:	and    eax,0xfddf18ff
  40b005:	fwait
  40b006:	(bad)  
  40b007:	dec    ebx
  40b008:	cld    
  40b009:	inc    eax
  40b00a:	sub    al,0x16
  40b00c:	arpl   bx,bx
  40b00e:	xor    eax,0x2076946b
  40b013:	sbb    al,0x1d
  40b015:	aad    0xd5
  40b017:	cmp    edx,DWORD PTR [edx-0x336c8fe5]
  40b01d:	cwde   
  40b01e:	mul    BYTE PTR ds:0xde36389f
  40b024:	jmp    0x40b055
  40b026:	test   al,0xc1
  40b028:	and    eax,0x2e9ab518
  40b02d:	repnz nop
  40b02f:	mov    bh,0x55
  40b031:	mov    bl,0x5c
  40b033:	loop   0x40b07b
  40b035:	cmp    ebp,esp
  40b037:	ret    0x4e0
  40b03a:	dec    ecx
  40b03b:	inc    esi
  40b03c:	imul   esp,DWORD PTR [edi-0x4f],0x673b2dc8
  40b043:	push   ss
  40b044:	aam    0x6
  40b046:	into   
  40b047:	repz stc 
  40b049:	jl     0x40afd7
  40b04b:	frstor [eax]
  40b04d:	mov    esp,0x738523f6
  40b052:	pop    edi
  40b053:	push   ecx
  40b054:	mov    ah,0xb
  40b056:	push   esp
  40b057:	or     BYTE PTR [ebx+esi*4-0x6ce9dc70],al
  40b05e:	adc    al,0x9d
  40b060:	sub    al,0x5b
  40b062:	mov    al,ds:0x534fb4d7
  40b067:	cwde   
  40b068:	and    al,0xd8
  40b06a:	(bad)  
  40b06c:	test   esi,ebx
  40b06e:	aad    0xfa
  40b070:	cmp    dl,cl
  40b072:	cmp    bh,BYTE PTR [ecx-0x7c820a70]
  40b078:	div    DWORD PTR [edi+0x75b819e4]
  40b07e:	addr16 pop esp
  40b080:	shr    BYTE PTR [esi+0x46],0x34
  40b084:	add    al,0x63
  40b086:	and    DWORD PTR [ecx-0xe],edx
  40b089:	cmp    eax,0xff818154
  40b08e:	mov    cl,0x61
  40b090:	in     eax,0x44
  40b092:	pop    ss
  40b093:	fnsave [esi]
  40b095:	add    DWORD PTR [ebp+0x45],edx
  40b098:	mov    dl,0x7f
  40b09a:	cmp    esp,DWORD PTR [ecx-0x8]
  40b09d:	xor    ebx,DWORD PTR [eax-0x5c]
  40b0a0:	in     eax,0xe8
  40b0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a3:	out    0x68,eax
  40b0a5:	mov    al,0x9f
  40b0a7:	outs   dx,BYTE PTR ds:[esi]
  40b0a8:	add    al,0x25
  40b0aa:	adc    DWORD PTR [edx+eiz*8-0x2c7b8f22],0x84e6d499
  40b0b5:	jecxz  0x40b0d2
  40b0b7:	jne    0x40b0bc
  40b0b9:	cmp    edi,eax
  40b0bb:	fnstenv [esi-0x5a]
  40b0be:	adc    al,bl
  40b0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c1:	sbb    bl,dl
  40b0c3:	pusha  
  40b0c4:	(bad)  
  40b0c5:	jo     0x40b0bd
  40b0c7:	and    DWORD PTR [edi+eax*4+0x6e],eax
  40b0cb:	cmp    eax,0x2d217fe2
  40b0d0:	add    eax,0x449cf20d
  40b0d5:	test   DWORD PTR [esp+edx*2+0x2e],esi
  40b0d9:	out    dx,al
  40b0da:	pop    eax
  40b0db:	neg    BYTE PTR ds:0x8adf6916
  40b0e1:	cmc    
  40b0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e3:	push   ebp
  40b0e4:	jmp    0x74f0:0x84298e0f
  40b0eb:	je     0x40b15c
  40b0ed:	sub    BYTE PTR [ebp+0x4],bl
  40b0f0:	jg     0x40b10f
  40b0f2:	sbb    al,0x2
  40b0f4:	sbb    ebp,DWORD PTR [edx+edx*1+0x1397288d]
  40b0fb:	out    dx,eax
  40b0fc:	fidiv  DWORD PTR [esi+0x53]
  40b0ff:	inc    esp
  40b100:	retf   
  40b101:	mov    eax,ds:0xd07c80f4
  40b106:	hlt    
  40b107:	pop    ss
  40b108:	push   ebp
  40b109:	adc    BYTE PTR [esp+ebp*4-0x1e],ah
  40b10d:	mov    gs,WORD PTR [eax+esi*4+0x5274b4e3]
  40b114:	out    dx,al
  40b115:	add    DWORD PTR [ebx-0x17e6ecd2],eax
  40b11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11c:	dec    edi
  40b11d:	sti    
  40b11e:	push   esi
  40b11f:	shl    WORD PTR [eax+0x5849710f],0xa2
  40b127:	test   eax,0x952d7366
  40b12d:	xlat   BYTE PTR ds:[ebx]
  40b12e:	sar    DWORD PTR [ecx+0x300707bc],cl
  40b134:	fsub   DWORD PTR [edi-0x6c6902f2]
  40b13a:	neg    DWORD PTR [ecx+edx*2-0x13190af1]
  40b141:	xor    BYTE PTR [ebx+0x5a],ah
  40b144:	stc    
  40b145:	add    eax,0xc35296d1
  40b14a:	cwde   
  40b14b:	mov    al,0x97
  40b14d:	add    edi,0xffffff9d
  40b150:	std    
  40b151:	add    al,0x20
  40b153:	(bad)  
  40b154:	mov    esi,0x93960d8d
  40b159:	adc    BYTE PTR [esi],0x40
  40b15c:	call   DWORD PTR [edx+0x2d]
  40b15f:	cmp    edx,0x3c
  40b162:	lock sbb al,0x80
  40b165:	retf   0x14fd
  40b168:	repz in al,0xd3
  40b16b:	dec    ebx
  40b16c:	mov    BYTE PTR [edx+0x7e],ah
  40b16f:	push   es
  40b170:	lahf   
  40b171:	inc    esp
  40b172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b173:	pop    esi
  40b174:	mov    edi,0xf9b77db0
  40b179:	(bad)  
  40b17a:	not    BYTE PTR [edx-0x1daf8bf9]
  40b180:	xor    esp,DWORD PTR [edi+0x71]
  40b183:	add    DWORD PTR [ecx+0x18],0x10
  40b187:	aaa    
  40b188:	ret    0x23da
  40b18b:	inc    ecx
  40b18c:	mov    WORD PTR [edx-0x558cb6ec],?
  40b192:	cmp    BYTE PTR [eax+0x64],0x12
  40b196:	or     eax,0x27779f43
  40b19b:	lea    ebp,[ecx-0x1e]
  40b19e:	mov    ecx,0x4401013d
  40b1a3:	cmp    al,BYTE PTR [esi-0x54]
  40b1a6:	fwait
  40b1a7:	pop    esi
  40b1a8:	fst    st(0)
  40b1aa:	out    dx,al
  40b1ab:	jmp    0x40b1d4
  40b1ad:	push   esi
  40b1ae:	stos   DWORD PTR es:[edi],eax
  40b1af:	jnp    0x40b1df
  40b1b1:	cmp    DWORD PTR [ebp+0x58],eax
  40b1b4:	xchg   esp,eax
  40b1b5:	mov    al,0xcb
  40b1b7:	mov    eax,0x3166595e
  40b1bc:	js     0x40b224
  40b1be:	push   edx
  40b1bf:	mov    ebx,0x84d3258d
  40b1c4:	sbb    ebx,DWORD PTR [ebx]
  40b1c6:	mov    esi,0x3a95948f
  40b1cb:	dec    eax
  40b1cc:	jnp    0x40b195
  40b1ce:	test   BYTE PTR [eax+ecx*2],dh
  40b1d1:	lea    eax,[esi-0x1e0c5368]
  40b1d7:	xor    ch,BYTE PTR [ebp-0x23502805]
  40b1dd:	dec    ecx
  40b1de:	xor    bl,BYTE PTR fs:[esi]
  40b1e1:	je     0x40b1b5
  40b1e3:	loop   0x40b20f
  40b1e5:	jecxz  0x40b24b
  40b1e7:	jnp    0x40b20b
  40b1e9:	mov    ebp,0x47f949b7
  40b1ee:	das    
  40b1ef:	pop    ebx
  40b1f0:	cmp    eax,0x9f4ca049
  40b1f5:	aam    0xd2
  40b1f7:	sbb    dl,BYTE PTR [esi+eiz*1+0x58d0ecb]
  40b1fe:	hlt    
  40b1ff:	inc    esi
  40b200:	mov    ds:0x6c081a61,eax
  40b205:	repnz inc ecx
  40b207:	push   ds
  40b208:	daa    
  40b209:	cmp    BYTE PTR [edx+0x10],cl
  40b20c:	mov    eax,esi
  40b20e:	and    DWORD PTR [ebx+0x4e],0xffffffb0
  40b212:	ss pop ss
  40b214:	in     eax,0x14
  40b216:	mov    dh,0x7e
  40b218:	sahf   
  40b219:	and    eax,0x1b6ead63
  40b21e:	add    DWORD PTR [ebx-0x77],edi
  40b221:	fidiv  WORD PTR [ebx+edi*1-0x65]
  40b225:	rcl    ecx,0x7d
  40b228:	mov    al,ds:0x66c7d2c9
  40b22d:	hlt    
  40b22e:	adc    esp,0xffffff9a
  40b231:	in     eax,0x2b
  40b233:	jle    0x40b1e3
  40b235:	sbb    esp,DWORD PTR [ecx]
  40b237:	out    dx,eax
  40b238:	(bad)  
  40b239:	(bad)  
  40b23a:	rcl    DWORD PTR [esi],cl
  40b23c:	sub    esi,DWORD PTR [ebp+0x5465de40]
  40b242:	loopne 0x40b21c
  40b244:	sbb    eax,0x8c657441
  40b249:	and    cl,0xd
  40b24c:	add    eax,0x83be8fca
  40b251:	cmp    ebp,DWORD PTR [edx-0x43203198]
  40b257:	leave  
  40b258:	imul   al
  40b25a:	push   ebp
  40b25b:	mov    bh,BYTE PTR [edx]
  40b25d:	in     al,0xbd
  40b25f:	adc    ecx,edx
  40b261:	push   ss
  40b262:	mov    eax,ds:0x2ff6a9ed
  40b267:	aaa    
  40b268:	in     al,dx
  40b269:	fucom  st(2)
  40b26b:	push   0x1e
  40b26d:	scas   eax,DWORD PTR es:[edi]
  40b26e:	push   edx
  40b26f:	push   0x23
  40b271:	mov    WORD PTR [ecx-0x7ce99fd3],fs
  40b277:	mov    dl,0x52
  40b279:	shr    DWORD PTR [ebp+0x49147c9c],0xc0
  40b280:	mov    dl,bl
  40b282:	aam    0xd3
  40b284:	mov    DWORD PTR [edx-0x26],edi
  40b287:	int    0xae
  40b289:	push   esp
  40b28a:	sahf   
  40b28b:	ret    
  40b28c:	xlat   BYTE PTR ds:[ebx]
  40b28d:	lock mov bh,0x94
  40b290:	adc    edi,edi
  40b292:	cmp    ebp,ecx
  40b294:	leave  
  40b295:	ins    BYTE PTR es:[edi],dx
  40b296:	or     ch,bh
  40b298:	retf   
  40b299:	jne    0x40b296
  40b29b:	std    
  40b29c:	js     0x40b22f
  40b29e:	les    edx,FWORD PTR [ebx+0x7d]
  40b2a1:	retf   
  40b2a2:	or     eax,0x48aaaebb
  40b2a7:	outs   dx,BYTE PTR ds:[esi]
  40b2a8:	jns    0x40b2f1
  40b2aa:	pop    ecx
  40b2ab:	retw   0xfc01
  40b2af:	adc    eax,DWORD PTR [ebx+0x408aebb3]
  40b2b5:	jnp    0x40b2c4
  40b2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2b8:	push   edx
  40b2b9:	sbb    DWORD PTR [ecx],0xc2e7ecd0
  40b2bf:	mov    BYTE PTR [ebp-0x6d4d5f57],dl
  40b2c5:	iret   
  40b2c6:	xchg   ebx,eax
  40b2c7:	push   0x83e86e5f
  40b2cc:	fsubr  DWORD PTR [eax]
  40b2ce:	xchg   bh,ah
  40b2d0:	or     ebp,edi
  40b2d2:	scas   al,BYTE PTR es:[edi]
  40b2d3:	xchg   esp,eax
  40b2d4:	xor    ch,BYTE PTR [ecx+0x302f5ca4]
  40b2da:	gs das 
  40b2dc:	retf   
  40b2dd:	adc    eax,0x745ab39d
  40b2e2:	mov    bh,ch
  40b2e4:	or     bl,dh
  40b2e6:	lds    ebp,FWORD PTR ds:0x17828643
  40b2ec:	outs   dx,BYTE PTR ds:[esi]
  40b2ed:	mov    WORD PTR [ecx],ds
  40b2ef:	loope  0x40b313
  40b2f1:	call   0xabf:0x3f825a07
  40b2f8:	dec    edx
  40b2f9:	jnp    0x40b34a
  40b2fb:	inc    ebp
  40b2fc:	imul   edi,DWORD PTR [esi],0xffffffbe
  40b2ff:	aaa    
  40b300:	push   0xdd21323f
  40b305:	loope  0x40b30a
  40b307:	arpl   WORD PTR ds:0x6d7408f,si
  40b30d:	adc    eax,ebx
  40b30f:	fcomp  QWORD PTR [ecx-0x5bd7aa66]
  40b315:	loope  0x40b380
  40b317:	or     al,BYTE PTR [ebx+0x2097964b]
  40b31d:	scas   eax,DWORD PTR es:[edi]
  40b31e:	add    eax,0x719e395e
  40b323:	or     DWORD PTR [edx+0x4c],0x13a29aeb
  40b32a:	in     al,dx
  40b32b:	fldcw  WORD PTR [ebx+0x48bf5350]
  40b331:	loop   0x40b300
  40b333:	(bad)  
  40b335:	mov    bh,0x6c
  40b337:	cmp    cl,BYTE PTR [eax-0x553e2a37]
  40b33d:	push   edx
  40b33e:	hlt    
  40b33f:	mov    edx,0xa5201955
  40b344:	in     eax,0x1a
  40b346:	enter  0x7e16,0x6b
  40b34a:	and    al,0x35
  40b34c:	mov    esi,DWORD PTR [ecx]
  40b34e:	push   0xb8ac5558
  40b353:	int    0x9b
  40b355:	mov    esi,DWORD PTR [ebx-0x49]
  40b358:	or     BYTE PTR [esp+eiz*2+0x3b059d86],al
  40b35f:	and    ah,cl
  40b361:	fstp   TBYTE PTR [edi+eax*4]
  40b364:	dec    edi
  40b365:	pop    edi
  40b366:	stos   DWORD PTR es:[edi],eax
  40b367:	pop    ds
  40b368:	clc    
  40b369:	das    
  40b36a:	test   BYTE PTR [esi-0x5c],ah
  40b36d:	arpl   WORD PTR [edx-0xa0c63c1],di
  40b373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b374:	or     al,0xd2
  40b376:	test   eax,0x4351f1e0
  40b37b:	inc    ebx
  40b37c:	inc    ebp
  40b37d:	rol    DWORD PTR [edx],1
  40b37f:	retf   
  40b380:	jmp    FWORD PTR [ecx+0x3a]
  40b383:	inc    edx
  40b384:	push   esi
  40b385:	ins    BYTE PTR es:[edi],dx
  40b386:	icebp  
  40b387:	sbb    al,0x21
  40b389:	inc    eax
  40b38a:	dec    ebx
  40b38b:	push   esp
  40b38c:	into   
  40b38d:	or     edx,DWORD PTR [edi-0x2b2b8fac]
  40b393:	lods   eax,DWORD PTR ds:[esi]
  40b394:	out    dx,al
  40b395:	xchg   esi,eax
  40b396:	icebp  
  40b397:	mov    ah,0x57
  40b399:	std    
  40b39a:	fs mov edi,0xe1dc94b
  40b3a0:	shl    ebx,0x41
  40b3a3:	stc    
  40b3a4:	jno    0x40b35b
  40b3a6:	std    
  40b3a7:	dec    ebp
  40b3a8:	pop    edi
  40b3a9:	xchg   esi,eax
  40b3aa:	sub    cl,ah
  40b3ac:	sbb    BYTE PTR [edi+0x13],0x46
  40b3b0:	fisubr DWORD PTR [eax-0x2bb92aea]
  40b3b6:	enter  0x1fb0,0x5
  40b3ba:	push   ebp
  40b3bb:	jae    0x40b347
  40b3bd:	and    eax,0xb4549850
  40b3c2:	pop    esi
  40b3c3:	dec    edx
  40b3c4:	jmp    0x55fe:0x425131b2
  40b3cb:	aam    0xd2
  40b3cd:	aam    0x73
  40b3cf:	add    eax,0xeb8e816b
  40b3d4:	mov    BYTE PTR [ebp+ecx*2+0x7b],al
  40b3d8:	adc    ebx,DWORD PTR [ecx]
  40b3da:	je     0x40b438
  40b3dc:	pop    ebp
  40b3dd:	mov    ah,0x15
  40b3df:	adc    dl,BYTE PTR [edx-0x3e]
  40b3e2:	xor    cl,BYTE PTR [ebp+0xa]
  40b3e5:	dec    esi
  40b3e6:	jge    0x40b463
  40b3e8:	cdq    
  40b3e9:	cmp    ah,bl
  40b3eb:	xor    eax,0x71b2e9f8
  40b3f0:	fmul   st,st(3)
  40b3f2:	fcom   DWORD PTR [ecx+0x64]
  40b3f5:	adc    ebp,DWORD PTR [eax+0x53]
  40b3f8:	dec    esp
  40b3f9:	adc    al,0x83
  40b3fb:	(bad)  
  40b3fc:	sar    DWORD PTR [edi-0x7c898298],1
  40b402:	ret    0x8bcb
  40b405:	mov    cl,0xad
  40b407:	xchg   esi,eax
  40b408:	mov    al,0xdf
  40b40a:	push   esi
  40b40b:	rcr    DWORD PTR [edx],0x74
  40b40e:	jge    0x40b3e5
  40b410:	leave  
  40b411:	rol    DWORD PTR [edi-0x65],0x90
  40b415:	cmp    DWORD PTR [edi+eiz*8-0x43],edx
  40b419:	ss inc esp
  40b41b:	pushf  
  40b41c:	test   BYTE PTR [eax+0x19],0x47
  40b420:	xchg   ch,dh
  40b422:	add    BYTE PTR [edi],bh
  40b424:	xor    dl,BYTE PTR [ecx+0xe]
  40b427:	inc    edi
  40b428:	dec    edi
  40b429:	jg     0x40b49b
  40b42b:	jne    0x40b418
  40b42d:	mov    bh,0x9d
  40b42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b430:	clc    
  40b431:	rol    ebp,cl
  40b433:	mov    ss,WORD PTR [esi+ecx*2-0x7b]
  40b437:	sti    
  40b438:	(bad)  
  40b439:	push   ebx
  40b43a:	outs   dx,BYTE PTR ds:[esi]
  40b43b:	cli    
  40b43c:	arpl   WORD PTR [ebx+0x47],bp
  40b43f:	in     eax,0xd9
  40b441:	aas    
  40b442:	push   es
  40b443:	arpl   WORD PTR [ebp+0xd07def6],di
  40b449:	jb     0x40b439
  40b44b:	and    bh,cl
  40b44d:	mov    edx,0xa876971
  40b452:	jae    0x40b4cc
  40b454:	aad    0xab
  40b456:	lods   al,BYTE PTR ds:[esi]
  40b457:	sub    BYTE PTR [eax],0x40
  40b45a:	dec    ebp
  40b45b:	aam    0xe
  40b45d:	push   esi
  40b45e:	push   ecx
  40b45f:	jp     0x40b42e
  40b461:	sar    DWORD PTR [ebp-0x7a2d39ee],cl
  40b467:	icebp  
  40b468:	in     al,0x4f
  40b46a:	(bad)  
  40b46b:	jbe    0x40b496
  40b46d:	cwde   
  40b46e:	push   edx
  40b46f:	sub    ebp,DWORD PTR [esi-0x33d64e26]
  40b475:	dec    ebp
  40b476:	dec    esp
  40b477:	retf   0xd32
  40b47a:	ror    bl,0xaf
  40b47d:	in     eax,0x11
  40b47f:	lahf   
  40b480:	add    eax,0x167b7499
  40b485:	and    eax,0xce608a04
  40b48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48b:	sti    
  40b48c:	imul   ebx,ebx,0x61951029
  40b492:	mov    ebp,0x804df239
  40b497:	jecxz  0x40b491
  40b499:	aam    0x16
  40b49b:	pop    ebx
  40b49c:	arpl   WORD PTR [edi],dx
  40b49e:	rcl    BYTE PTR [eax],cl
  40b4a0:	(bad)  
  40b4a1:	mov    ?,WORD PTR [eax+0x7f1a4387]
  40b4a7:	mov    al,0x85
  40b4a9:	pop    esp
  40b4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ab:	rcr    BYTE PTR [ebp-0x4efba9a3],1
  40b4b1:	(bad)  
  40b4b2:	sbb    eax,0x4cfdb56b
  40b4b7:	push   ebp
  40b4b8:	pop    esp
  40b4b9:	sar    DWORD PTR [ecx+0x52],0x6e
  40b4bd:	mov    DWORD PTR [eax-0x436df74a],eax
  40b4c3:	cmp    ch,BYTE PTR [ebp-0x7e]
  40b4c6:	or     eax,DWORD PTR ds:0xcabb2cb5
  40b4cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4cd:	jnp    0x40b503
  40b4cf:	mov    cl,0x8b
  40b4d1:	push   es
  40b4d2:	jae    0x40b498
  40b4d4:	ret    
  40b4d5:	jne    0x40b4b8
  40b4d7:	push   ds
  40b4d8:	daa    
  40b4d9:	push   esp
  40b4da:	lods   eax,DWORD PTR ds:[esi]
  40b4db:	and    al,0xc5
  40b4dd:	fwait
  40b4de:	adc    esp,ecx
  40b4e0:	adc    ebp,esp
  40b4e2:	test   al,0xcc
  40b4e4:	sbb    ebx,ecx
  40b4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e7:	fiadd  DWORD PTR [edx]
  40b4e9:	lods   eax,DWORD PTR ds:[esi]
  40b4ea:	rol    BYTE PTR ds:0x71c4756f,cl
  40b4f0:	jle    0x40b4a0
  40b4f2:	mov    ecx,0xac4588ad
  40b4f7:	inc    ebx
  40b4f8:	gs iret 
  40b4fa:	jnp    0x40b497
  40b4fc:	jmp    0x3c49:0xfaa289f8
  40b503:	fld    TBYTE PTR [ecx+0x38]
  40b506:	repnz loopne 0x40b564
  40b509:	std    
  40b50a:	sbb    BYTE PTR [esi-0x633b1a3c],dh
  40b510:	dec    esp
  40b511:	xchg   ebp,eax
  40b512:	or     eax,0x8509881e
  40b517:	test   BYTE PTR [edi+0x9],0x50
  40b51b:	mov    al,0x7c
  40b51d:	div    BYTE PTR [esi+ebp*2]
  40b520:	add    DWORD PTR [edx],ecx
  40b522:	int3   
  40b523:	xlat   BYTE PTR ds:[ebx]
  40b524:	sbb    BYTE PTR [edx+0x7f290b7e],cl
  40b52a:	inc    edx
  40b52b:	mov    ecx,0x946bfd39
  40b531:	stos   BYTE PTR es:[edi],al
  40b532:	aam    0xb5
  40b534:	jns    0x40b590
  40b536:	mov    esp,0x56f61908
  40b53b:	ins    BYTE PTR es:[edi],dx
  40b53c:	push   cs
  40b53d:	add    eax,0xb4b6e17c
  40b542:	cdq    
  40b543:	jmp    0x40b595
  40b545:	lods   eax,DWORD PTR ds:[esi]
  40b546:	push   cs
  40b547:	or     eax,0x72a48702
  40b54c:	in     al,dx
  40b54d:	retf   0x3152
  40b550:	lock ja 0x40b509
  40b553:	fisttp QWORD PTR [edx-0xe]
  40b556:	fbstp  TBYTE PTR [edx-0x8103a93]
  40b55c:	mov    ecx,0xea65195
  40b561:	loope  0x40b5db
  40b563:	cld    
  40b564:	jp     0x40b5ce
  40b566:	mov    dl,0x8d
  40b568:	repnz ss das 
  40b56b:	loop   0x40b59c
  40b56d:	stos   DWORD PTR es:[edi],eax
  40b56e:	push   edx
  40b56f:	jnp    0x40b5b5
  40b571:	xor    eax,0xe6a8e01b
  40b576:	mov    ds:0x7ed9ded5,al
  40b57b:	push   0x55
  40b57d:	(bad)  
  40b57f:	and    esp,esi
  40b581:	retf   0x7ede
  40b584:	sub    BYTE PTR [esi],al
  40b586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b587:	mov    esp,0x919d7f5d
  40b58c:	pop    ebx
  40b58d:	test   eax,0x90efbe54
  40b592:	mov    edx,0x4c18cfef
  40b597:	cmp    dh,bl
  40b599:	out    0x78,al
  40b59b:	or     eax,0xa25a8a8f
  40b5a0:	(bad)  
  40b5a2:	jae    0x40b583
  40b5a4:	mov    al,ds:0x231d674c
  40b5a9:	outs   dx,DWORD PTR ds:[esi]
  40b5aa:	inc    esp
  40b5ab:	fisub  DWORD PTR [ecx-0x4]
  40b5ae:	cmp    DWORD PTR [ebx+0x10],eax
  40b5b1:	inc    edi
  40b5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b3:	xor    DWORD PTR [esi],edi
  40b5b5:	cli    
  40b5b6:	sub    ecx,DWORD PTR [ecx]
  40b5b8:	mov    cl,0x7f
  40b5ba:	push   edx
  40b5bb:	add    BYTE PTR [edi-0x3184fcd5],ch
  40b5c1:	pusha  
  40b5c2:	mov    BYTE PTR gs:[edi-0x7d668836],0x4d
  40b5ca:	rcl    BYTE PTR [edi+0x6b],1
  40b5cd:	xchg   ebx,eax
  40b5ce:	(bad)  
  40b5d0:	sub    DWORD PTR [eax],esi
  40b5d2:	mov    dh,0xc9
  40b5d4:	test   eax,0x9ac66f0c
  40b5d9:	imul   esi,DWORD PTR [ecx+0x29e6fd21],0xffffffc7
  40b5e0:	(bad)  
  40b5e1:	xor    al,bh
  40b5e3:	xchg   edi,eax
  40b5e4:	inc    ecx
  40b5e5:	xor    eax,DWORD PTR [ebx+0x515917d3]
  40b5eb:	or     al,BYTE PTR [ebx]
  40b5ed:	pop    esi
  40b5ee:	sbb    edx,DWORD PTR [ebx-0x37]
  40b5f1:	add    al,0x80
  40b5f3:	xor    ch,BYTE PTR [edx-0x412547c2]
  40b5f9:	int    0x65
  40b5fb:	lods   eax,DWORD PTR ds:[esi]
  40b5fc:	loope  0x40b5df
  40b5fe:	dec    ebx
  40b5ff:	lahf   
  40b600:	pop    esi
  40b601:	mul    BYTE PTR [edx-0x3e]
  40b604:	mov    bl,ah
  40b606:	sub    eax,0xb6c5e060
  40b60b:	pop    es
  40b60c:	jb     0x40b62e
  40b60e:	xor    al,0x6c
  40b610:	loopne 0x40b650
  40b612:	mov    edi,0xa29b8b40
  40b617:	or     al,0x10
  40b619:	inc    ebx
  40b61a:	bound  edx,QWORD PTR [edx+0x27]
  40b61d:	and    esi,edi
  40b61f:	daa    
  40b620:	sub    al,0xbc
  40b622:	retf   0xdad4
  40b625:	repnz fst DWORD PTR [eax+0x3]
  40b629:	sbb    BYTE PTR ds:0xad1b4f68,ch
  40b62f:	ficom  WORD PTR [edx+edx*1]
  40b632:	add    cl,bl
  40b634:	(bad)  
  40b635:	cmp    ebx,DWORD PTR [ebx]
  40b637:	sbb    esp,DWORD PTR [ecx+0x486ca1e5]
  40b63d:	dec    eax
  40b63e:	dec    edx
  40b63f:	jmp    FWORD PTR [ebx]
  40b641:	mov    ah,0xe3
  40b643:	and    BYTE PTR [ebx-0x6a962a9d],dl
  40b649:	pusha  
  40b64a:	mov    ds:0xf589891f,al
  40b64f:	lock cmp esi,DWORD PTR [eax]
  40b652:	or     eax,0xb3a4f71c
  40b657:	or     eax,DWORD PTR [ebx]
  40b659:	jmp    edi
  40b65b:	pop    esi
  40b65c:	scas   eax,DWORD PTR es:[edi]
  40b65d:	cmp    edx,eax
  40b65f:	xchg   esp,eax
  40b660:	or     dl,0x5f
  40b663:	imul   al
  40b665:	push   es
  40b666:	leave  
  40b667:	js     0x40b654
  40b669:	jmp    FWORD PTR [ebp-0x320f1196]
  40b66f:	push   es
  40b670:	mov    ebx,0x32993539
  40b675:	pop    eax
  40b676:	test   DWORD PTR [ecx-0x6e028938],ebp
  40b67c:	add    esp,ebx
  40b67e:	loope  0x40b618
  40b680:	ss mov edx,0x22c9820
  40b686:	leave  
  40b687:	fsub   QWORD PTR [edx+0x407a0794]
  40b68d:	es xchg esp,eax
  40b68f:	push   ss
  40b690:	cmp    edx,DWORD PTR [edx-0x12f0eb81]
  40b696:	cmp    edx,esp
  40b698:	pushf  
  40b699:	sahf   
  40b69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b69b:	mov    eax,0xa4134deb
  40b6a0:	fs ss and ch,dh
  40b6a4:	push   esi
  40b6a5:	fwait
  40b6a6:	xor    edi,esi
  40b6a8:	pop    esi
  40b6a9:	pop    edi
  40b6aa:	push   0x7fe9fb21
  40b6af:	mov    ebp,0x3186c8c3
  40b6b4:	jmp    0x5a89:0x32a0335d
  40b6bb:	idiv   BYTE PTR [eax-0x1fe47875]
  40b6c1:	or     BYTE PTR [eax+0x47009547],ch
  40b6c7:	pusha  
  40b6c8:	pop    ecx
  40b6c9:	out    0xd2,eax
  40b6cb:	mov    ebp,0x2009ed63
  40b6d0:	mov    ebp,0x2c41feca
  40b6d5:	cli    
  40b6d6:	pusha  
  40b6d7:	test   BYTE PTR [esi+eiz*2],0x61
  40b6db:	(bad)  
  40b6dc:	fimul  DWORD PTR ds:0xa2278be
  40b6e2:	daa    
  40b6e3:	lahf   
  40b6e4:	and    al,0x20
  40b6e6:	sbb    BYTE PTR [ecx-0x76],dh
  40b6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ea:	inc    edx
  40b6eb:	xlat   BYTE PTR ds:[ebx]
  40b6ec:	out    dx,eax
  40b6ed:	mov    ebp,0xcae5669a
  40b6f2:	mov    ecx,0xe79d06c6
  40b6f7:	iret   
  40b6f8:	push   cs
  40b6f9:	adc    al,0x60
  40b6fb:	xor    ecx,esp
  40b6fd:	rol    cl,0xf5
  40b700:	xchg   ebp,eax
  40b701:	pop    ebp
  40b702:	daa    
  40b703:	mov    dh,0xae
  40b705:	les    ecx,FWORD PTR [edx]
  40b707:	cmc    
  40b708:	int3   
  40b709:	push   0x1a
  40b70b:	xchg   ecx,eax
  40b70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b70d:	mov    cs,WORD PTR [esi]
  40b70f:	(bad)  
  40b710:	int3   
  40b711:	(bad)  
  40b712:	xchg   edi,eax
  40b713:	cmp    BYTE PTR [ecx+0x8d82b7c],dl
  40b719:	fstp   QWORD PTR [ebx+0x7c]
  40b71c:	sbb    BYTE PTR [edx],0xa4
  40b71f:	or     al,al
  40b721:	cwde   
  40b722:	outs   dx,DWORD PTR ds:[esi]
  40b723:	jns    0x40b715
  40b725:	mov    ss,WORD PTR [eax+ecx*8-0x2a]
  40b729:	cmp    DWORD PTR [edi+0x6af194b],esi
  40b72f:	arpl   bp,si
  40b731:	xor    eax,0x46839c27
  40b736:	rcl    DWORD PTR [esi-0xd],0xe0
  40b73a:	xchg   esi,eax
  40b73b:	push   cs
  40b73c:	mov    ebx,0x8c20792d
  40b741:	inc    edi
  40b742:	ja     0x40b7b2
  40b744:	jns    0x40b6f0
  40b746:	lock cmp al,0x5e
  40b749:	dec    edx
  40b74a:	mov    ds:0xf86bf861,al
  40b74f:	push   edi
  40b750:	scas   al,BYTE PTR es:[edi]
  40b751:	or     BYTE PTR [eax],0x1e
  40b754:	cmp    al,0x10
  40b756:	inc    edi
  40b757:	sbb    al,0x91
  40b759:	and    eax,eax
  40b75b:	dec    ecx
  40b75c:	(bad)  
  40b75d:	stos   BYTE PTR es:[edi],al
  40b75e:	mov    ebp,DWORD PTR [esi]
  40b760:	and    al,0x13
  40b762:	in     eax,0xc9
  40b764:	push   ebp
  40b765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b766:	imul   esi,esi,0xc6fbffbd
  40b76c:	(bad)  
  40b76d:	sbb    BYTE PTR [esi-0x5f649591],al
  40b773:	mov    edi,0xa362a68c
  40b778:	pushf  
  40b779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b77a:	call   0x3e4f11ef
  40b77f:	aaa    
  40b780:	mov    al,0x3a
  40b782:	lods   al,BYTE PTR ds:[esi]
  40b783:	fwait
  40b784:	cmc    
  40b785:	inc    esi
  40b786:	js     0x40b777
  40b788:	inc    ecx
  40b789:	jp     0x40b74b
  40b78b:	lds    edi,FWORD PTR [edx-0x70393158]
  40b791:	adc    edx,ecx
  40b793:	test   al,dh
  40b795:	push   ecx
  40b796:	sub    eax,0xb2f878ee
  40b79b:	pop    esi
  40b79c:	mov    dl,0x7e
  40b79e:	mov    ?,WORD PTR [ebx+0x133b3978]
  40b7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a5:	mov    edi,0xbab7a91e
  40b7aa:	in     al,0x3c
  40b7ac:	dec    edx
  40b7ad:	mov    gs,WORD PTR [ebx+eax*1-0x51f08682]
  40b7b4:	dec    ebx
  40b7b5:	and    al,0xa2
  40b7b7:	xchg   BYTE PTR [esi+0x5],bl
  40b7ba:	(bad)  [eax+0x2]
  40b7bd:	(bad)  
  40b7be:	mov    dh,0xb
  40b7c0:	sub    DWORD PTR [ebp+0x1f],esi
  40b7c3:	mov    ecx,0x7388aa76
  40b7c8:	lods   al,BYTE PTR ds:[esi]
  40b7c9:	cmp    eax,0xd8267403
  40b7ce:	enter  0x1097,0x42
  40b7d2:	pop    eax
  40b7d3:	jmp    0xff0a:0x6631d0cb
  40b7da:	mov    ds:0x4550d295,eax
  40b7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e0:	test   DWORD PTR [eax-0x4833fdb1],edx
  40b7e6:	iret   
  40b7e7:	cmp    ebp,esi
  40b7e9:	loope  0x40b779
  40b7eb:	popf   
  40b7ec:	cs cld 
  40b7ee:	mov    ebx,0x8440d509
  40b7f3:	mov    ebp,0x216747b1
  40b7f8:	inc    ecx
  40b7f9:	inc    ecx
  40b7fa:	dec    ebx
  40b7fb:	clc    
  40b7fc:	pop    ebx
  40b7fd:	(bad)  
  40b7fe:	test   eax,0x5993ed18
  40b803:	push   ebp
  40b804:	ins    BYTE PTR es:[edi],dx
  40b805:	in     eax,0xd2
  40b807:	add    al,0x35
  40b809:	mov    ?,WORD PTR [ebp+0x12]
  40b80c:	cmp    DWORD PTR [edi+0x68fb4d5c],ebp
  40b812:	mov    dl,0x26
  40b814:	aas    
  40b815:	push   ebx
  40b816:	retf   0x9073
  40b819:	popf   
  40b81a:	out    0xb6,eax
  40b81c:	xor    eax,0x3b3769c6
  40b821:	in     eax,0xd2
  40b823:	loope  0x40b7f2
  40b825:	add    eax,ebx
  40b827:	pop    eax
  40b828:	mov    edx,0x6da3d69f
  40b82d:	(bad)  
  40b82e:	ins    BYTE PTR es:[edi],dx
  40b82f:	push   ebp
  40b830:	mov    fs:0x8927f304,eax
  40b836:	pop    edx
  40b837:	sub    DWORD PTR [esi],edx
  40b839:	loope  0x40b7d4
  40b83b:	out    0x65,eax
  40b83d:	cmp    BYTE PTR ds:0x4f65e169,ch
  40b843:	adc    bl,BYTE PTR [eax+0x13ee3abd]
  40b849:	clc    
  40b84a:	cdq    
  40b84b:	inc    ecx
  40b84c:	push   es
  40b84d:	ds (bad) 
  40b84f:	aaa    
  40b850:	sahf   
  40b851:	push   esp
  40b852:	pop    ds
  40b853:	shr    BYTE PTR [edi+0x3d],1
  40b856:	loopne 0x40b8d0
  40b858:	inc    esi
  40b859:	pop    ss
  40b85a:	jnp    0x40b883
  40b85c:	lea    esi,[edx]
  40b85e:	std    
  40b85f:	popf   
  40b860:	push   esp
  40b861:	mov    dh,0x63
  40b863:	sbb    al,0x60
  40b865:	popa   
  40b866:	(bad)  
  40b867:	into   
  40b868:	out    0x98,al
  40b86a:	retf   
  40b86b:	stos   DWORD PTR es:[edi],eax
  40b86c:	cmp    al,0x3e
  40b86e:	mov    esp,0x8f70eff8
  40b873:	neg    ebx
  40b875:	stos   BYTE PTR es:[edi],al
  40b876:	test   DWORD PTR [ebp+eax*4-0x1afe3957],ebp
  40b87d:	adc    eax,0xe739ced5
  40b882:	arpl   WORD PTR [ecx-0x7abaf268],sp
  40b888:	bound  ecx,QWORD PTR [ebp+0x3]
  40b88b:	ficom  DWORD PTR [ebp-0x3662c973]
  40b891:	dec    esp
  40b892:	mov    ds:0x68dcaa54,eax
  40b897:	stos   DWORD PTR es:[edi],eax
  40b898:	inc    esp
  40b899:	jmp    0x30eb:0xdd2aa854
  40b8a0:	rcr    ch,cl
  40b8a2:	mov    al,0x6c
  40b8a4:	or     al,0xfd
  40b8a6:	in     eax,dx
  40b8a7:	dec    ebp
  40b8a8:	sahf   
  40b8a9:	adc    al,0xb5
  40b8ab:	dec    ecx
  40b8ac:	mov    edx,0xedc9a8b
  40b8b1:	mov    ebp,0x77c1275f
  40b8b6:	push   edx
  40b8b7:	cli    
  40b8b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b9:	call   0xc0edc493
  40b8be:	out    dx,eax
  40b8bf:	xchg   esi,eax
  40b8c0:	add    eax,0x5bdf0b99
  40b8c5:	out    dx,al
  40b8c6:	test   BYTE PTR [ebx],bl
  40b8c8:	xchg   esp,eax
  40b8c9:	out    0x59,eax
  40b8cb:	out    0x27,al
  40b8cd:	test   al,0x10
  40b8cf:	xor    BYTE PTR [ecx-0x54],cl
  40b8d2:	or     ebp,DWORD PTR [eax]
  40b8d4:	adc    BYTE PTR [edx],0x85
  40b8d7:	xchg   ebx,eax
  40b8d8:	push   edi
  40b8d9:	mov    ds,WORD PTR [edi+0x6e]
  40b8dc:	inc    edi
  40b8dd:	jp     0x40b896
  40b8df:	shr    BYTE PTR [eax+0x60],0xad
  40b8e3:	adc    BYTE PTR [ebx+edi*2+0x3118daf5],dl
  40b8ea:	and    ebx,DWORD PTR [ebx]
  40b8ec:	lock stos DWORD PTR es:[edi],eax
  40b8ee:	xor    eax,0x1a38370b
  40b8f3:	jmp    0xde05:0x70e61a16
  40b8fa:	or     eax,0x8a498212
  40b8ff:	lea    ebp,[ebx-0x40dc86e1]
  40b905:	or     al,0x9a
  40b907:	stos   DWORD PTR es:[edi],eax
  40b908:	int3   
  40b909:	mov    BYTE PTR [esi+0x57],bl
  40b90c:	(bad)  
  40b90d:	int3   
  40b90e:	dec    ecx
  40b90f:	inc    edi
  40b910:	sub    dh,BYTE PTR [esi-0x14]
  40b913:	adc    eax,0x81f95349
  40b918:	scas   eax,DWORD PTR es:[edi]
  40b919:	dec    ebp
  40b91a:	and    cl,BYTE PTR [ebx+0xe4127e7]
  40b920:	push   ecx
  40b921:	loopne 0x40b967
  40b923:	adc    al,0xfd
  40b925:	mov    ebx,0x68863503
  40b92a:	mov    ebx,0xea4bab14
  40b92f:	sbb    DWORD PTR [edi],ebx
  40b931:	cmp    DWORD PTR [ebx-0x5e],ecx
  40b934:	inc    esp
  40b935:	dec    eax
  40b936:	inc    eax
  40b937:	cmp    eax,0x713a6847
  40b93c:	push   es
  40b93d:	add    BYTE PTR [edi+0x41389903],0x57
  40b944:	adc    eax,0xcfc7a572
  40b949:	jge    0x40b951
  40b94b:	cli    
  40b94c:	pop    ecx
  40b94d:	add    ebp,DWORD PTR [ebp+0x10]
  40b950:	jecxz  0x40b93b
  40b952:	xchg   esi,eax
  40b953:	mov    cl,0xe4
  40b955:	or     ah,BYTE PTR [ecx-0xc2e8af7]
  40b95b:	fild   DWORD PTR [edi]
  40b95d:	js     0x40b98e
  40b95f:	push   ebp
  40b960:	inc    eax
  40b961:	bound  ecx,QWORD PTR [eax]
  40b963:	aas    
  40b964:	mov    dl,0x16
  40b966:	(bad)  
  40b967:	in     al,dx
  40b968:	or     al,0x37
  40b96a:	mov    cl,0x96
  40b96c:	or     BYTE PTR [ebx-0x48947669],dh
  40b972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b973:	push   ds
  40b974:	sbb    DWORD PTR [edi-0x20188435],esp
  40b97a:	and    bl,dl
  40b97c:	mov    dl,0x7a
  40b97e:	cmp    DWORD PTR [edx],ebx
  40b980:	push   edx
  40b981:	aad    0x2a
  40b983:	aam    0x48
  40b985:	sbb    DWORD PTR [edx+0x7a],edi
  40b988:	add    al,0x40
  40b98a:	fld    QWORD PTR [ecx]
  40b98c:	leave  
  40b98d:	mov    WORD PTR [ecx],ds
  40b98f:	jbe    0x40b9f0
  40b991:	out    0xac,al
  40b993:	pop    ds
  40b994:	xor    eax,0xefe0cb3d
  40b999:	xor    BYTE PTR [ecx+0x5ee5644e],dh
  40b99f:	dec    esi
  40b9a0:	popf   
  40b9a1:	ret    
  40b9a2:	enter  0x44f2,0xda
  40b9a6:	pop    esp
  40b9a7:	and    BYTE PTR [ecx+ecx*8+0x3],0xd5
  40b9ac:	stos   DWORD PTR es:[edi],eax
  40b9ad:	mov    bl,BYTE PTR [ebx-0x16]
  40b9b0:	stos   DWORD PTR es:[edi],eax
  40b9b1:	mov    fs,WORD PTR [esi]
  40b9b3:	cs jns 0x40b950
  40b9b6:	jbe    0x40ba1f
  40b9b8:	mov    ecx,0xd317e548
  40b9bd:	push   cs
  40b9be:	cwde   
  40b9bf:	inc    ebx
  40b9c0:	jnp    0x40b9bf
  40b9c2:	lock mov ds:0x4b826cf5,eax
  40b9c8:	mov    ch,0xb0
  40b9ca:	out    dx,eax
  40b9cb:	sub    BYTE PTR [ebp+0x37],dl
  40b9ce:	jne    0x40b9f0
  40b9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d1:	add    eax,0xfb494e9
  40b9d6:	mov    bh,0x94
  40b9d8:	ror    ecx,cl
  40b9da:	in     al,dx
  40b9db:	xchg   esi,eax
  40b9dc:	jecxz  0x40b9c6
  40b9de:	fwait
  40b9df:	inc    ebp
  40b9e0:	test   BYTE PTR [esi],0x10
  40b9e3:	xchg   edx,eax
  40b9e4:	mov    ah,0x1f
  40b9e6:	push   eax
  40b9e7:	int3   
  40b9e8:	in     eax,dx
  40b9e9:	loop   0x40ba05
  40b9eb:	in     al,0x9c
  40b9ed:	shl    BYTE PTR [esi-0x6eea091],1
  40b9f3:	mov    esi,0x7b806eed
  40b9f8:	xchg   ebp,eax
  40b9f9:	leave  
  40b9fa:	lea    esp,[eax-0x45]
  40b9fd:	dec    ebp
  40b9fe:	add    dl,BYTE PTR [eax+ecx*4]
  40ba01:	cld    
  40ba02:	jbe    0x40b9c1
  40ba04:	xchg   ebx,eax
  40ba05:	dec    eax
  40ba06:	sub    bl,BYTE PTR [edx+0x53]
  40ba09:	xchg   ebp,eax
  40ba0a:	icebp  
  40ba0b:	mov    ebx,0xd62896cb
  40ba10:	rcr    BYTE PTR [ebx+0x79754192],0xf9
  40ba17:	and    edx,0x7fb1d46a
  40ba1d:	ret    
  40ba1e:	jbe    0x40ba23
  40ba20:	adc    ebp,DWORD PTR [edi]
  40ba22:	mov    WORD PTR [eax],?
  40ba24:	mov    cs,WORD PTR [ebp+0x53fa6058]
  40ba2a:	adc    BYTE PTR [esi+0x4c],al
  40ba2d:	mov    al,0xfe
  40ba2f:	mov    ecx,0x8a3ac32e
  40ba34:	fwait
  40ba35:	jb     0x40ba56
  40ba37:	jns    0x40ba37
  40ba39:	out    dx,eax
  40ba3a:	outs   dx,DWORD PTR ds:[esi]
  40ba3b:	rol    BYTE PTR [ebx-0x29],cl
  40ba3e:	add    al,0x3
  40ba40:	sar    DWORD PTR [edi+edx*1-0x1bdb0520],cl
  40ba47:	lods   eax,DWORD PTR ds:[esi]
  40ba48:	mov    WORD PTR [ecx],ss
  40ba4a:	aas    
  40ba4b:	lea    edx,[edi-0x74b44a14]
  40ba51:	(bad)  [edi]
  40ba53:	(bad)  
  40ba55:	lea    esp,[esi]
  40ba57:	sbb    DWORD PTR [edi+0x71712a97],ebp
  40ba5d:	mov    dh,0x77
  40ba5f:	sbb    al,0xfa
  40ba61:	popf   
  40ba62:	adc    DWORD PTR [ebx],ecx
  40ba64:	dec    ecx
  40ba65:	or     edx,0x8dbcc20c
  40ba6b:	ins    BYTE PTR es:[edi],dx
  40ba6c:	ins    BYTE PTR es:[edi],dx
  40ba6d:	dec    edx
  40ba6e:	inc    ebp
  40ba6f:	push   eax
  40ba70:	data16 addr16 fwait
  40ba73:	arpl   WORD PTR [edx],si
  40ba75:	mov    ebp,0x1f24c632
  40ba7a:	xchg   ecx,eax
  40ba7b:	cs pusha 
  40ba7d:	and    al,0xee
  40ba7f:	xchg   edi,eax
  40ba80:	mov    esp,0x66cae31b
  40ba85:	or     eax,0x7588d8e3
  40ba8a:	loopne 0x40ba68
  40ba8c:	(bad)  
  40ba8d:	retf   0xf7c3
  40ba90:	dec    ecx
  40ba91:	dec    eax
  40ba92:	adc    BYTE PTR [edi],0x0
  40ba95:	sbb    al,0xf3
  40ba97:	and    eax,0x86b7c91a
  40ba9c:	mov    dl,0x21
  40ba9e:	mov    dl,0x5d
  40baa0:	xchg   esp,eax
  40baa1:	mov    eax,ebp
  40baa3:	and    al,0x54
  40baa5:	and    eax,0xaeb4b467
  40baaa:	pusha  
  40baab:	mov    bl,0x8b
  40baad:	dec    edx
  40baae:	sahf   
  40baaf:	inc    esp
  40bab0:	out    0xef,al
  40bab2:	mov    bl,0xa1
  40bab4:	rol    BYTE PTR [eax],0xd1
  40bab7:	mov    esp,cs
  40bab9:	imul   ebp,DWORD PTR [edi-0x23],0xffffffce
  40babd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40babe:	or     al,0x2
  40bac0:	aas    
  40bac1:	jns    0x40ba8a
  40bac3:	mov    DWORD PTR [edi-0x3196ad62],ebp
  40bac9:	mov    eax,ds:0x6a41de61
  40bace:	mov    cl,BYTE PTR [edx-0x4f]
  40bad1:	xor    BYTE PTR [ebx+0x78fe42d4],bh
  40bad7:	cmp    DWORD PTR [ebx+0x15],ebx
  40bada:	sbb    eax,DWORD PTR [edx-0x7f4b5bf3]
  40bae0:	or     ch,BYTE PTR [ebx-0x61]
  40bae3:	jmp    0xb4d1:0x3e442230
  40baea:	les    esi,FWORD PTR [ebp+0x58640140]
  40baf0:	rcl    DWORD PTR [ebx+0x62],0x9b
  40baf4:	pop    esp
  40baf5:	sub    DWORD PTR [ecx-0x19bc680b],ebx
  40bafb:	popa   
  40bafc:	xchg   esp,eax
  40bafd:	dec    BYTE PTR ds:0xeb09ae85
  40bb03:	(bad)  
  40bb04:	in     eax,0xdc
  40bb06:	shr    BYTE PTR [ebx-0x50],cl
  40bb09:	hlt    
  40bb0a:	je     0x40bafe
  40bb0c:	(bad)  
  40bb0d:	jae    0x40bae1
  40bb0f:	cwde   
  40bb10:	and    esp,DWORD PTR [ebx-0x377f0f8d]
  40bb16:	inc    eax
  40bb17:	mov    bh,0x7e
  40bb19:	xor    al,0x50
  40bb1b:	scas   eax,DWORD PTR es:[edi]
  40bb1c:	push   ebx
  40bb1d:	add    dh,BYTE PTR [edx+esi*1-0x19609f9]
  40bb24:	fmul   st(6),st
  40bb26:	rcr    BYTE PTR [ecx],0xd3
  40bb29:	and    edx,DWORD PTR [ebx]
  40bb2b:	add    edi,edx
  40bb2d:	test   edi,ebp
  40bb2f:	hlt    
  40bb30:	sbb    ebx,DWORD PTR [ecx-0xc]
  40bb33:	cmp    al,0xfb
  40bb35:	outs   dx,BYTE PTR ds:[esi]
  40bb36:	add    DWORD PTR [ecx],ebp
  40bb38:	fs push ecx
  40bb3a:	dec    esp
  40bb3b:	jns    0x40bb69
  40bb3d:	jmp    0x40bacb
  40bb3f:	nop
  40bb40:	push   ds
  40bb41:	dec    eax
  40bb42:	or     DWORD PTR [ebx-0x6104934d],esi
  40bb48:	in     eax,dx
  40bb49:	fwait
  40bb4a:	lds    eax,FWORD PTR [bx-0x56]
  40bb4e:	jne    0x40bb29
  40bb50:	imul   esp,DWORD PTR [edi+edx*8],0xff0e80f5
  40bb57:	xchg   DWORD PTR [ebp+0x24],edi
  40bb5a:	xor    dh,BYTE PTR [edi+0x77d24fdc]
  40bb60:	call   0xa2298d92
  40bb65:	and    cl,BYTE PTR [bp+di+0x42]
  40bb69:	out    0xc2,al
  40bb6b:	out    0xb5,al
  40bb6d:	mov    bl,0x63
  40bb6f:	xor    al,0xec
  40bb71:	fsub   QWORD PTR [ebx]
  40bb73:	sbb    edi,ecx
  40bb75:	rol    DWORD PTR [eax+0x78],0xaa
  40bb79:	and    eax,0x35a52f3c
  40bb7e:	stos   DWORD PTR es:[edi],eax
  40bb7f:	stc    
  40bb80:	cmp    ecx,DWORD PTR [eax]
  40bb82:	outs   dx,BYTE PTR ds:[esi]
  40bb83:	sbb    esi,DWORD PTR [ebp+0x11]
  40bb86:	arpl   WORD PTR [ecx+0x36bfec67],si
  40bb8c:	and    edx,ecx
  40bb8e:	ss cmc 
  40bb90:	add    al,0x84
  40bb92:	xchg   esi,eax
  40bb93:	xlat   BYTE PTR ds:[ebx]
  40bb94:	fmul   QWORD PTR [ebx+0x603ec6c0]
  40bb9a:	adc    al,BYTE PTR [edi+0x76]
  40bb9d:	push   edx
  40bb9e:	aaa    
  40bb9f:	test   BYTE PTR [ebx+0x53],cl
  40bba2:	fsubr  st,st(7)
  40bba4:	add    eax,0x5a44a6a
  40bba9:	in     al,0x4f
  40bbab:	sub    esi,DWORD PTR [ebp-0x3758faa0]
  40bbb1:	retf   0x1e89
  40bbb4:	je     0x40bbf8
  40bbb6:	dec    esp
  40bbb7:	(bad)  
  40bbb8:	retf   
  40bbb9:	mov    cl,0x8e
  40bbbb:	out    dx,eax
  40bbbc:	xchg   eax,ebp
  40bbbe:	inc    edx
  40bbbf:	mov    al,0x19
  40bbc1:	sbb    ah,BYTE PTR [ecx]
  40bbc3:	mov    cl,0x68
  40bbc5:	scas   eax,DWORD PTR es:[edi]
  40bbc6:	inc    ebx
  40bbc7:	inc    ebp
  40bbc8:	ins    DWORD PTR es:[edi],dx
  40bbc9:	cmp    cl,BYTE PTR ds:0xcc0f566b
  40bbcf:	retf   0xd3d3
  40bbd2:	push   0xffffffdf
  40bbd4:	leave  
  40bbd5:	push   cs
  40bbd6:	fcomp  DWORD PTR [esi]
  40bbd8:	clc    
  40bbd9:	inc    esp
  40bbda:	pop    ss
  40bbdb:	push   ecx
  40bbdc:	fadd   QWORD PTR [ebp+0x74]
  40bbdf:	loop   0x40bbfd
  40bbe1:	jb     0x40bb9b
  40bbe3:	jmp    0x9643:0x9e599778
  40bbea:	jecxz  0x40bb91
  40bbec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbed:	add    DWORD PTR [ebx],edi
  40bbef:	sub    dl,BYTE PTR [eax-0x53d48314]
  40bbf5:	pop    esp
  40bbf6:	pushf  
  40bbf7:	jp     0x40bc5b
  40bbf9:	jmp    0x40bc29
  40bbfb:	add    BYTE PTR [edx+0x4b6f9c7f],bh
  40bc01:	mov    BYTE PTR [edi-0x607fc9ef],dh
  40bc07:	and    DWORD PTR [edx+ecx*4-0x21e6530d],edx
  40bc0e:	shl    BYTE PTR [eax],1
  40bc10:	pop    di
  40bc12:	cmp    BYTE PTR [edi+0x59],bh
  40bc15:	pop    edx
  40bc16:	inc    esi
  40bc17:	mov    ah,0x28
  40bc19:	pop    edx
  40bc1a:	xchg   edx,eax
  40bc1b:	adc    al,0xbb
  40bc1d:	repz dec esp
  40bc1f:	mov    ebp,0x332be5ae
  40bc24:	loopne 0x40bc7f
  40bc26:	push   0xfffffff6
  40bc28:	ins    BYTE PTR es:[edi],dx
  40bc29:	lahf   
  40bc2a:	or     ebp,esi
  40bc2c:	shr    BYTE PTR ds:[edx+0x54],cl
  40bc30:	out    0x6,al
  40bc32:	xor    esi,esi
  40bc34:	mov    ebp,0x99ba90c4
  40bc39:	mov    BYTE PTR [ebx-0xba087f5],al
  40bc3f:	inc    ebp
  40bc40:	test   DWORD PTR [edi],ebp
  40bc42:	xchg   edi,eax
  40bc43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc44:	mov    esi,0xc10cfcdd
  40bc49:	call   FWORD PTR [eax+ebx*8]
  40bc4c:	pop    esp
  40bc4d:	xchg   ecx,eax
  40bc4e:	pop    esi
  40bc4f:	ror    DWORD PTR [edx-0x61f889c6],0x52
  40bc56:	(bad)  
  40bc57:	je     0x40bcbb
  40bc59:	out    0xbe,eax
  40bc5b:	mov    DWORD PTR [ecx+ecx*1-0x54fefe80],eax
  40bc62:	sub    cl,BYTE PTR [eax-0x59]
  40bc65:	or     BYTE PTR [ebx+0x112bd360],ch
  40bc6b:	shl    BYTE PTR [eax+0x3f6d955],0x4d
  40bc72:	push   ebx
  40bc73:	out    dx,al
  40bc74:	sbb    ah,BYTE PTR [ecx+0x78]
  40bc77:	sahf   
  40bc78:	lock repnz hlt 
  40bc7b:	sbb    al,0xcd
  40bc7d:	test   BYTE PTR [edi+0x6d],ch
  40bc80:	loope  0x40bc09
  40bc82:	mul    DWORD PTR [edx-0x151a8d9e]
  40bc88:	loopne 0x40bc6c
  40bc8a:	shr    DWORD PTR [ecx+0x4547f904],1
  40bc90:	mul    BYTE PTR [ecx+0x76]
  40bc93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc94:	daa    
  40bc95:	xchg   edx,eax
  40bc96:	test   al,0xbc
  40bc98:	fs out 0x5e,eax
  40bc9b:	scas   eax,DWORD PTR es:[edi]
  40bc9c:	hlt    
  40bc9d:	adc    al,BYTE PTR [ecx]
  40bc9f:	stc    
  40bca0:	fdivr  st(0),st
  40bca2:	das    
  40bca3:	adc    al,BYTE PTR [edx]
  40bca5:	inc    edi
  40bca6:	adc    eax,0xb34f57b8
  40bcab:	test   BYTE PTR cs:0xe130ec1d,ch
  40bcb2:	fimul  DWORD PTR [ecx]
  40bcb4:	test   al,0x64
  40bcb6:	xor    dl,BYTE PTR [ebx]
  40bcb8:	mov    DWORD PTR [ecx-0x79],esi
  40bcbb:	(bad)  
  40bcbc:	xlat   BYTE PTR ds:[ebx]
  40bcbd:	mov    ebp,0x6e3776c7
  40bcc2:	and    eax,0xc44620ba
  40bcc7:	shl    al,0x45
  40bcca:	pop    ebp
  40bccb:	mov    eax,0x2d220170
  40bcd0:	xchg   edi,eax
  40bcd1:	mov    esp,0x255fff80
  40bcd6:	and    DWORD PTR [ebp+0x26498532],eax
  40bcdc:	mov    ebx,0x997e45ef
  40bce1:	mov    dh,0x20
  40bce3:	mov    BYTE PTR ds:0xaea5e6b5,ah
  40bce9:	mov    dh,0xa9
  40bceb:	mov    bh,0x29
  40bced:	fwait
  40bcee:	xor    eax,0x9ad071f2
  40bcf3:	and    BYTE PTR [ecx-0x584c07cc],bh
  40bcf9:	stos   BYTE PTR es:[edi],al
  40bcfa:	pop    eax
  40bcfb:	xor    eax,0x7772be34
  40bd00:	fisubr DWORD PTR [di]
  40bd03:	ins    DWORD PTR es:[edi],dx
  40bd04:	mov    bh,0x4e
  40bd06:	adc    dh,BYTE PTR [edi+0x3c]
  40bd09:	pop    edx
  40bd0a:	test   eax,0x48d08aa4
  40bd0f:	mov    bh,0x61
  40bd11:	add    DWORD PTR [ebx+0x0],edx
  40bd14:	dec    ecx
  40bd15:	lods   al,BYTE PTR ds:[esi]
  40bd16:	jns    0x40bd7d
  40bd18:	cmc    
  40bd19:	mov    ?,WORD PTR [ebp-0x67c3a2f8]
  40bd1f:	(bad)  
  40bd20:	repnz outs dx,BYTE PTR ds:[esi]
  40bd22:	ins    DWORD PTR es:[edi],dx
  40bd23:	dec    ecx
  40bd24:	mov    cl,0xe9
  40bd26:	fs ja  0x40bd2a
  40bd29:	pop    ds
  40bd2a:	jmp    0x640e63da
  40bd2f:	jbe    0x40bd12
  40bd31:	push   ds
  40bd32:	or     BYTE PTR [edi-0x69],bl
  40bd35:	popf   
  40bd36:	ins    BYTE PTR es:[edi],dx
  40bd37:	mov    edx,0x6e5a1893
  40bd3c:	and    ch,ah
  40bd3e:	int    0x26
  40bd40:	data16 mov al,0x27
  40bd43:	add    al,0xf0
  40bd45:	xchg   ecx,eax
  40bd46:	icebp  
  40bd47:	push   0xc6fb9bf4
  40bd4c:	outs   dx,DWORD PTR ds:[esi]
  40bd4d:	(bad)  
  40bd4e:	bound  eax,QWORD PTR [esi-0x47]
  40bd51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd52:	xchg   esp,eax
  40bd53:	dec    ebp
  40bd54:	lock add BYTE PTR [edi+0x686debb5],ch
  40bd5b:	mov    ebp,0x1277f5f0
  40bd60:	jmp    0xd448:0x94c55f9b
  40bd67:	enter  0x24d8,0x6a
  40bd6b:	(bad)  
  40bd6c:	jp     0x40bd70
  40bd6e:	mov    ch,0xc7
  40bd70:	cmp    al,0xe9
  40bd72:	adc    eax,0xb9a117a3
  40bd77:	out    dx,eax
  40bd78:	fnstsw WORD PTR [edi]
  40bd7a:	dec    edi
  40bd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd7c:	and    esp,DWORD PTR [esi]
  40bd7e:	aad    0x4c
  40bd80:	xchg   esp,eax
  40bd81:	test   eax,0xd193272e
  40bd86:	fdivr  DWORD PTR [edx+0x2a0521c7]
  40bd8c:	mov    BYTE PTR [ebx-0x5f06eaff],ah
  40bd92:	jmp    0x40bd94
  40bd94:	das    
  40bd95:	arpl   WORD PTR [esi],si
  40bd97:	sbb    ch,bh
  40bd99:	add    eax,0x6d91a3ff
  40bd9e:	loope  0x40bd43
  40bda0:	loope  0x40bde0
  40bda2:	call   0xae70:0x10383182
  40bda9:	dec    edi
  40bdaa:	in     eax,0x42
  40bdac:	xor    al,0xa4
  40bdae:	push   esp
  40bdaf:	out    0x49,eax
  40bdb1:	pop    ebp
  40bdb2:	or     ah,dh
  40bdb4:	mov    dh,0x7a
  40bdb6:	es in  al,0xae
  40bdb9:	cmp    dl,bh
  40bdbb:	inc    edx
  40bdbc:	imul   ecx,DWORD PTR [edi],0x7114d529
  40bdc2:	aaa    
  40bdc3:	dec    esp
  40bdc4:	push   ecx
  40bdc5:	es out dx,al
  40bdc7:	cmp    ch,0xad
  40bdca:	repz div dh
  40bdcd:	cmc    
  40bdce:	(bad)  
  40bdcf:	and    BYTE PTR [ebx+esi*2+0x7f6ff35e],cl
  40bdd6:	shl    BYTE PTR ds:0xa8e931ce,0xc1
  40bddd:	jnp    0x40bd8b
  40bddf:	cmp    edi,0xffffffe9
  40bde2:	pop    ecx
  40bde3:	iret   
  40bde4:	test   BYTE PTR [ecx-0x3ac32bec],ch
  40bdea:	mov    ah,0x3c
  40bdec:	test   eax,0x79e87f90
  40bdf1:	jo     0x40bdeb
  40bdf3:	push   0xe78d4951
  40bdf8:	adc    eax,0x9f646d39
  40bdfd:	jecxz  0x40be3f
  40bdff:	mov    eax,ds:0x2f9cb7a0
  40be04:	mov    ebx,0xd1d4a35d
  40be09:	jp     0x40bdd6
  40be0b:	cld    
  40be0c:	mov    edx,0xfd25149b
  40be11:	or     DWORD PTR [esp+ecx*1-0x242764bc],ebx
  40be18:	cdq    
  40be19:	stc    
  40be1a:	or     DWORD PTR [eax-0x2b4852aa],edx
  40be20:	clc    
  40be21:	jmp    0xe208:0x3690130a
  40be28:	push   edi
  40be29:	fisub  DWORD PTR [ecx+ecx*1+0x75]
  40be2d:	sub    DWORD PTR [edx-0xf263957],ebx
  40be33:	dec    ecx
  40be34:	pusha  
  40be35:	nop
  40be36:	mov    eax,0xc90c4c3f
  40be3b:	jecxz  0x40be12
  40be3d:	jbe    0x40bea0
  40be3f:	add    al,BYTE PTR [eax]
  40be41:	test   DWORD PTR [eax-0x6d],0x1315a65d
  40be48:	jp     0x40bdce
  40be4a:	jmp    0x40beca
  40be4c:	shl    ecx,cl
  40be4e:	xlat   BYTE PTR ds:[ebx]
  40be4f:	cmp    esi,DWORD PTR [ebx-0x62]
  40be52:	xchg   esi,eax
  40be53:	mov    al,ds:0x1c5642b6
  40be58:	out    0x99,al
  40be5a:	scas   al,BYTE PTR es:[edi]
  40be5b:	dec    eax
  40be5c:	dec    edx
  40be5d:	sub    al,0xab
  40be5f:	mov    esi,0x5d1f9b75
  40be64:	lds    esi,FWORD PTR [ecx-0x4c1a759]
  40be6a:	inc    ebx
  40be6b:	cmc    
  40be6c:	fnstenv ds:0xc6d411d1
  40be72:	and    ecx,DWORD PTR [edx+esi*8-0x5034bb3e]
  40be79:	cmp    ecx,DWORD PTR [esp+ebp*2-0x5e]
  40be7d:	or     BYTE PTR [ebp+0x292f42ff],dl
  40be83:	sar    DWORD PTR [eax+0x4e],1
  40be86:	retf   0xfa8b
  40be89:	jmp    0xb99d4261
  40be8e:	xchg   ebx,eax
  40be8f:	xchg   esp,eax
  40be90:	dec    ecx
  40be91:	adc    eax,0xb9d9c448
  40be96:	mov    edi,0x2c8aa4a0
  40be9b:	xor    edx,DWORD PTR gs:[ebx-0x51]
  40be9f:	out    dx,al
  40bea0:	retf   0x3975
  40bea3:	shr    BYTE PTR [ecx+0x72],1
  40bea6:	adc    DWORD PTR [edx+eiz*4],esi
  40bea9:	sar    DWORD PTR gs:0xaa7ad25d,0x6f
  40beb1:	aaa    
  40beb2:	test   al,0xcb
  40beb4:	jb     0x40be9a
  40beb6:	loop   0x40bf17
  40beb8:	je     0x40bea3
  40beba:	pop    esi
  40bebb:	lods   eax,DWORD PTR ds:[esi]
  40bebc:	loop   0x40bf00
  40bebe:	daa    
  40bebf:	cld    
  40bec0:	sub    BYTE PTR [edi],ah
  40bec2:	fucom  st(0)
  40bec4:	inc    esp
  40bec5:	dec    ecx
  40bec6:	not    DWORD PTR [ebp-0x6bd328c3]
  40becc:	test   al,0x17
  40bece:	and    al,0x32
  40bed0:	sahf   
  40bed1:	dec    DWORD PTR [eax+edi*2-0x29]
  40bed5:	cmp    eax,0xf959ccb8
  40beda:	dec    ebp
  40bedb:	adc    DWORD PTR [edx-0x25],ecx
  40bede:	lods   al,BYTE PTR ds:[esi]
  40bedf:	(bad)  [esi]
  40bee1:	hlt    
  40bee2:	(bad)  
  40bee3:	jge    0x40bef6
  40bee5:	rcr    BYTE PTR ds:0x883294df,cl
  40beeb:	push   eax
  40beec:	mov    ch,al
  40beee:	int    0xd2
  40bef0:	lds    esp,FWORD PTR [edi-0x24]
  40bef3:	push   ecx
  40bef4:	adc    eax,0x79fa8932
  40bef9:	jp     0x40beda
  40befb:	aam    0xac
  40befd:	dec    esp
  40befe:	call   0x7914:0x6c1306e1
  40bf05:	in     eax,dx
  40bf06:	dec    ecx
  40bf07:	scas   eax,DWORD PTR es:[edi]
  40bf08:	dec    edx
  40bf09:	clc    
  40bf0a:	push   cs
  40bf0b:	xchg   esi,eax
  40bf0c:	cmp    cl,BYTE PTR [ebx]
  40bf0e:	out    0x98,eax
  40bf10:	add    ch,dh
  40bf12:	cdq    
  40bf13:	mov    dl,0xb2
  40bf15:	sbb    bl,al
  40bf17:	mov    eax,ds:0x6ca6c72b
  40bf1c:	mov    ds:0x288b9a56,al
  40bf21:	fsub   DWORD PTR [eax+0x74]
  40bf24:	mov    ecx,0x8b0e472b
  40bf29:	push   edi
  40bf2a:	mov    esp,0x7d568c80
  40bf2f:	aad    0x73
  40bf31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf32:	xor    al,0x4f
  40bf34:	mov    edx,0x3a81f4ff
  40bf39:	add    DWORD PTR [esi-0x62fa936f],ecx
  40bf3f:	icebp  
  40bf40:	test   al,0x45
  40bf42:	es out 0x4e,eax
  40bf45:	dec    esp
  40bf46:	mov    dl,0x85
  40bf48:	sar    BYTE PTR [edx+0x39],cl
  40bf4b:	lock stc 
  40bf4d:	xchg   ecx,eax
  40bf4e:	xchg   edx,eax
  40bf4f:	mov    BYTE PTR [edi],ah
  40bf51:	bound  esi,QWORD PTR [ecx]
  40bf53:	iret   
  40bf54:	dec    ecx
  40bf55:	xchg   esi,eax
  40bf56:	push   ebp
  40bf57:	mov    edi,0xc05f9575
  40bf5c:	(bad)  [edi]
  40bf5e:	test   DWORD PTR [eax],0xeabc9926
  40bf64:	out    0x5f,al
  40bf66:	sub    DWORD PTR [esi-0x1c],ecx
  40bf69:	push   ebp
  40bf6a:	jg     0x40bfd2
  40bf6c:	mov    eax,0xfb70e002
  40bf71:	sub    sp,WORD PTR [esi]
  40bf74:	int    0x4
  40bf76:	mov    edi,0xb754ce9c
  40bf7b:	das    
  40bf7c:	jns    0x40bf01
  40bf7e:	pop    ebp
  40bf7f:	addr16 out dx,eax
  40bf81:	fisubr WORD PTR [ecx+0x14]
  40bf84:	pop    edi
  40bf85:	adc    al,0xd8
  40bf87:	adc    al,0x5d
  40bf89:	sbb    bl,BYTE PTR [ebx]
  40bf8b:	iret   
  40bf8c:	pop    edx
  40bf8d:	xor    al,0x33
  40bf8f:	sub    bl,al
  40bf91:	jb     0x40bf35
  40bf93:	pop    ss
  40bf94:	data16 sub al,0x43
  40bf97:	loope  0x40bfc7
  40bf99:	(bad)
  40bf9c:	test   DWORD PTR [ecx+0x12],eax
  40bf9f:	mov    dh,0xd7
  40bfa1:	xchg   BYTE PTR [ecx],bh
  40bfa3:	adc    ebx,DWORD PTR [edi]
  40bfa5:	gs mov cl,0xca
  40bfa8:	out    dx,al
  40bfa9:	lods   al,BYTE PTR ds:[esi]
  40bfaa:	push   0xf
  40bfac:	jecxz  0x40bf80
  40bfae:	xchg   ebx,eax
  40bfaf:	pop    ds
  40bfb0:	(bad)  
  40bfb1:	arpl   WORD PTR [eax],dx
  40bfb3:	xor    ah,BYTE PTR [ebp+0x6d]
  40bfb6:	test   al,0x3c
  40bfb8:	xchg   edi,eax
  40bfb9:	loopne 0x40bfc4
  40bfbb:	add    edx,DWORD PTR [edi+0x7d]
  40bfbe:	sub    al,0x60
  40bfc0:	add    dl,BYTE PTR [ecx-0x4]
  40bfc3:	lods   al,BYTE PTR ds:[esi]
  40bfc4:	pop    es
  40bfc5:	test   al,0x6b
  40bfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfc9:	js     0x40c011
  40bfcb:	cmp    BYTE PTR [ebx],bh
  40bfcd:	out    0xf4,al
  40bfcf:	xchg   ebp,eax
  40bfd0:	sbb    dl,bl
  40bfd2:	dec    ebp
  40bfd3:	mov    edx,0x8104640
  40bfd8:	push   ss
  40bfd9:	scas   eax,DWORD PTR es:[edi]
  40bfda:	jae    0x40bfc2
  40bfdc:	mov    esi,0xc362e97b
  40bfe1:	sub    al,0x7
  40bfe3:	imul   edi,edi,0x70
  40bfe6:	sbb    BYTE PTR [edi-0x1a],bl
  40bfe9:	imul   esi,DWORD PTR [edx+0x5e7dcac],0x75
  40bff0:	mov    al,ds:0x61adf5f5
  40bff5:	mov    ds:0xfe6b3a52,al
  40bffa:	rcr    DWORD PTR [edi],0x23
  40bffd:	into   
  40bffe:	loop   0x40bf81
  40c000:	adc    DWORD PTR [esi+0x2744e041],esp
  40c006:	push   edx
  40c007:	pop    eax
  40c008:	sub    ebx,eax
  40c00a:	add    dl,dh
  40c00c:	push   ss
  40c00d:	scas   al,BYTE PTR es:[edi]
  40c00e:	push   0x7f
  40c010:	(bad)  
  40c011:	repz cmp ch,BYTE PTR [ebx+0x1d]
  40c015:	jecxz  0x40c00b
  40c017:	lds    eax,FWORD PTR [ebx+ebx*2+0x7d1af5f9]
  40c01e:	nop
  40c01f:	xchg   ebx,eax
  40c020:	and    al,0x5c
  40c022:	inc    ebx
  40c023:	push   cs
  40c024:	dec    esp
  40c025:	and    esi,0xffffffa8
  40c028:	dec    edi
  40c029:	dec    esi
  40c02a:	push   cs
  40c02b:	mov    gs,WORD PTR [esi]
  40c02d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c02e:	pop    ss
  40c02f:	cmp    al,0xf6
  40c031:	fwait
  40c032:	bound  ecx,QWORD PTR [edi-0x17ad9b2a]
  40c038:	mov    ds:0xb063ab2,al
  40c03d:	adc    esi,esp
  40c03f:	mov    esp,0xee628567
  40c044:	add    dh,bh
  40c046:	mov    ah,0xe1
  40c048:	(bad)  
  40c049:	mov    al,ds:0x45099fb6
  40c04e:	mov    esp,0x3eaeec21
  40c053:	lock pop ecx
  40c055:	or     al,0x3a
  40c057:	or     DWORD PTR [edi],esi
  40c059:	popa   
  40c05a:	sub    eax,0x49129f60
  40c05f:	jae    0x40c0a5
  40c061:	mov    dl,0x1a
  40c063:	in     eax,0x21
  40c065:	mov    eax,0x9f107d61
  40c06a:	lahf   
  40c06b:	add    esp,0x5ed611f7
  40c071:	mov    al,0x2b
  40c073:	pop    es
  40c074:	ret    
  40c075:	jae    0x40c03b
  40c077:	jmp    0x9aaa:0x94d6e281
  40c07e:	sub    al,cl
  40c080:	mov    DWORD PTR [esi],ecx
  40c082:	(bad)  
  40c083:	dec    edi
  40c084:	push   eax
  40c085:	popa   
  40c086:	faddp  st(3),st
  40c088:	sbb    ecx,0xba8023eb
  40c08e:	sbb    BYTE PTR [eax-0x68],0xa2
  40c092:	adc    al,0xcc
  40c094:	jle    0x40c047
  40c096:	push   esp
  40c097:	jmp    FWORD PTR [edi+esi*8]
  40c09a:	fisub  DWORD PTR [edi+0xb]
  40c09d:	test   eax,0xb2e13bc6
  40c0a2:	leave  
  40c0a3:	daa    
  40c0a4:	ret    
  40c0a5:	loopne 0x40c0fc
  40c0a7:	inc    ebx
  40c0a8:	into   
  40c0a9:	fnstenv [ecx]
  40c0ab:	aas    
  40c0ac:	out    0x40,eax
  40c0ae:	es mov bh,0xa2
  40c0b1:	or     al,BYTE PTR [edx]
  40c0b3:	mov    esp,DWORD PTR [ecx+ecx*4-0xbba064]
  40c0ba:	pop    edx
  40c0bb:	pop    eax
  40c0bc:	add    dh,BYTE PTR [ebx-0x42ca7d70]
  40c0c2:	shr    DWORD PTR [edi+0x1],cl
  40c0c5:	data16 into 
  40c0c7:	jge    0x40c07c
  40c0c9:	bound  edx,QWORD PTR [ebp-0x19]
  40c0cc:	outs   dx,BYTE PTR ds:[esi]
  40c0cd:	inc    esp
  40c0ce:	addr16 hlt 
  40c0d0:	push   0x4e0f5c63
  40c0d5:	adc    edx,DWORD PTR [esi]
  40c0d7:	nop
  40c0d8:	push   ebp
  40c0d9:	stos   DWORD PTR es:[edi],eax
  40c0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0db:	xor    esi,DWORD PTR [ebx]
  40c0dd:	mov    edx,0xdd2ce08c
  40c0e2:	cmc    
  40c0e3:	das    
  40c0e4:	ficom  DWORD PTR [edx+edi*4-0x4c7c77b5]
  40c0eb:	jno    0x40c095
  40c0ed:	imul   ecx,DWORD PTR [ebx],0x7a2c75ad
  40c0f3:	or     al,0xb9
  40c0f5:	imul   edx,esi,0xffffffc9
  40c0f8:	ror    DWORD PTR [ecx],cl
  40c0fa:	ror    BYTE PTR [edx-0x54],cl
  40c0fd:	and    bh,BYTE PTR [esi]
  40c0ff:	sbb    eax,DWORD PTR [ebx+0x2b861032]
  40c105:	iret   
  40c106:	(bad)  
  40c107:	cli    
  40c108:	dec    edx
  40c109:	cld    
  40c10a:	sbb    al,0x39
  40c10c:	enter  0x3f84,0x0
  40c110:	and    eax,0x39850796
  40c115:	lahf   
  40c116:	xor    al,0xca
  40c118:	sti    
  40c119:	cs into 
  40c11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c11c:	leave  
  40c11d:	mov    ds,edx
  40c11f:	in     eax,dx
  40c120:	rcl    BYTE PTR [eax],cl
  40c122:	push   cs
  40c123:	or     eax,0x1dae233f
  40c128:	jnp    0x40c0d9
  40c12a:	xchg   edi,eax
  40c12b:	ror    DWORD PTR [edi+0x7bad6ed0],cl
  40c131:	cmc    
  40c132:	push   eax
  40c133:	mov    si,0xaa57
  40c137:	jmp    0x6c:0x533371b3
  40c13e:	push   edi
  40c13f:	xchg   ebx,eax
  40c140:	int    0xec
  40c142:	pop    edi
  40c143:	repz mov eax,0xc7af95d5
  40c149:	push   ecx
  40c14a:	adc    DWORD PTR [ecx],edi
  40c14c:	xor    bh,BYTE PTR [eax-0xd287a40]
  40c152:	es dec esp
  40c154:	xchg   esi,eax
  40c155:	enter  0xcbb6,0xb8
  40c159:	sbb    DWORD PTR [eax+0x68],0x980dcaa3
  40c160:	lods   al,BYTE PTR es:[esi]
  40c162:	loopne 0x40c1b5
  40c164:	ret    0x563a
  40c167:	jno    0x40c1c8
  40c169:	sbb    eax,0xd4901a84
  40c16e:	sahf   
  40c16f:	retf   0x356a
  40c172:	mov    dl,0xd1
  40c174:	dec    edi
  40c176:	test   eax,0xc1907cb7
  40c17b:	mov    bh,0xbf
  40c17d:	ins    DWORD PTR es:[edi],dx
  40c17e:	imul   DWORD PTR [ecx-0x537c34fc]
  40c184:	hlt    
  40c185:	or     eax,0x4f0487ba
  40c18a:	mov    edx,0xa8be7e8f
  40c18f:	repz in eax,dx
  40c191:	mov    DWORD PTR [eax+0x53],ebx
  40c194:	mov    bh,0x13
  40c196:	pop    es
  40c197:	jo     0x40c208
  40c199:	sub    eax,0x35060571
  40c19e:	push   edi
  40c19f:	cld    
  40c1a0:	pop    edx
  40c1a1:	ds jg  0x40c137
  40c1a4:	rcl    BYTE PTR [ecx],0x82
  40c1a7:	rcr    ch,cl
  40c1a9:	in     al,dx
  40c1aa:	pusha  
  40c1ab:	int    0x51
  40c1ad:	test   eax,0x8f624e12
  40c1b2:	call   0x8281d231
  40c1b7:	cmc    
  40c1b8:	inc    esi
  40c1b9:	test   edx,esi
  40c1bb:	test   BYTE PTR [edx+ebx*2-0x46],dh
  40c1bf:	popa   
  40c1c0:	(bad)  
  40c1c1:	(bad)  
  40c1c2:	rcr    DWORD PTR [ecx-0x74],0x7e
  40c1c6:	sub    eax,0x3fb18e71
  40c1cb:	jne    0x40c1be
  40c1cd:	imul   ebx,DWORD PTR [eax-0xfd8baeb],0xd6919acf
  40c1d7:	test   DWORD PTR [ebp+0x76],ecx
  40c1da:	push   edx
  40c1db:	mov    eax,es
  40c1dd:	loopne 0x40c182
  40c1df:	(bad)  
  40c1e1:	lea    eax,[ebx-0xa]
  40c1e4:	inc    edx
  40c1e5:	icebp  
  40c1e6:	(bad)  
  40c1e7:	stc    
  40c1e8:	rcr    DWORD PTR [ebx],0x60
  40c1eb:	xor    ecx,DWORD PTR [ecx]
  40c1ed:	mov    ch,0x42
  40c1ef:	pop    ecx
  40c1f0:	sub    dh,BYTE PTR [ebp-0x3f]
  40c1f3:	pop    es
  40c1f4:	aas    
  40c1f5:	imul   eax,DWORD PTR [ebx],0xf1377ca1
  40c1fb:	add    esi,DWORD PTR [esi+eax*4]
  40c1fe:	(bad)  
  40c1ff:	aaa    
  40c200:	pop    ss
  40c201:	sar    bl,1
  40c203:	add    eax,0x42b92aa4
  40c208:	xchg   ebp,eax
  40c209:	sbb    edx,DWORD PTR [ecx-0x3d97fe65]
  40c20f:	imul   esi,DWORD PTR [esi],0x3
  40c212:	mov    bl,0xbb
  40c214:	adc    al,0x15
  40c216:	mov    esi,0x90908c5
  40c21b:	add    eax,0x8124c935
  40c220:	and    eax,0xce44c69d
  40c225:	jne    0x40c1d8
  40c227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c228:	pop    eax
  40c229:	add    al,0x98
  40c22b:	scas   al,BYTE PTR es:[edi]
  40c22c:	xchg   esp,eax
  40c22d:	ss stc 
  40c22f:	push   esp
  40c230:	and    BYTE PTR [ecx-0x1ff5f9f5],ch
  40c236:	sub    al,0x97
  40c238:	push   edx
  40c239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23a:	les    edx,FWORD PTR [ecx]
  40c23c:	inc    edi
  40c23d:	push   esp
  40c23e:	sbb    bl,0xb4
  40c241:	mov    ah,0xb3
  40c243:	push   esp
  40c244:	xor    dh,BYTE PTR [ecx-0x516c1e4e]
  40c24a:	or     edi,DWORD PTR [esi-0x6db15c76]
  40c250:	mov    cl,0x27
  40c252:	nop
  40c253:	fisttp DWORD PTR [ecx+0x41]
  40c256:	push   esp
  40c257:	fadd   QWORD PTR [edi-0x70089d73]
  40c25d:	lahf   
  40c25e:	retf   0x64dd
  40c261:	or     eax,0x44e99c08
  40c266:	out    0x1c,al
  40c268:	shr    DWORD PTR [esi],cl
  40c26a:	sub    bl,cl
  40c26c:	cld    
  40c26d:	dec    ebp
  40c26e:	sahf   
  40c26f:	call   0x315d:0xba2bb5e4
  40c276:	dec    edx
  40c277:	jl     0x40c266
  40c279:	in     al,dx
  40c27a:	cli    
  40c27b:	stos   DWORD PTR es:[edi],eax
  40c27c:	test   eax,0xeb4ae45c
  40c281:	repnz pushf 
  40c283:	jnp    0x40c207
  40c285:	aam    0xc3
  40c287:	aaa    
  40c288:	xchg   edx,eax
  40c289:	ror    BYTE PTR [eax-0x72],cl
  40c28c:	push   ebp
  40c28d:	mov    esi,0x1c6ad12b
  40c292:	pop    edi
  40c293:	aam    0x43
  40c295:	bound  ecx,QWORD PTR [esi]
  40c297:	div    DWORD PTR [edx+0x2209aa0]
  40c29d:	out    dx,eax
  40c29e:	gs jl  0x40c299
  40c2a1:	ins    BYTE PTR es:[edi],dx
  40c2a2:	jmp    0x21fa:0xec51f71f
  40c2a9:	mov    eax,0x4d6fe50d
  40c2ae:	xchg   DWORD PTR [esi-0x55089fd8],eax
  40c2b4:	adc    DWORD PTR [esi-0x53a47881],ebx
  40c2ba:	xor    edx,DWORD PTR [esi-0x7d72af21]
  40c2c0:	shl    BYTE PTR [ecx-0x1c],1
  40c2c3:	push   0x5e
  40c2c5:	iret   
  40c2c6:	jle    0x40c284
  40c2c8:	call   0x18ea4333
  40c2cd:	jbe    0x40c347
  40c2cf:	add    BYTE PTR [ebp-0x157478b7],ch
  40c2d5:	mov    bl,0x10
  40c2d7:	push   ebx
  40c2d8:	stos   BYTE PTR es:[edi],al
  40c2d9:	ins    DWORD PTR es:[edi],dx
  40c2da:	pop    ss
  40c2db:	jmp    0xd038:0xe9d0314c
  40c2e2:	add    al,0x88
  40c2e4:	jecxz  0x40c271
  40c2e6:	mov    eax,ds:0xdf77647b
  40c2eb:	mov    ch,dl
  40c2ed:	cmp    eax,0xd35bcfdc
  40c2f2:	push   0x5c58697b
  40c2f7:	pop    ebx
  40c2f8:	xor    ebp,DWORD PTR [esi+0x474dcd8b]
  40c2fe:	clc    
  40c2ff:	es ret 
  40c301:	mov    dh,0xe7
  40c303:	(bad)  
  40c304:	pop    edx
  40c305:	(bad)  [esi-0x1d]
  40c308:	pop    ecx
  40c309:	mov    ds,WORD PTR [ebx]
  40c30b:	mov    ecx,0x38256539
  40c310:	sbb    al,0xa0
  40c312:	lods   eax,DWORD PTR ds:[esi]
  40c313:	jnp    0x40c387
  40c315:	cmp    BYTE PTR [ebp+0x4b],dl
  40c318:	rcr    BYTE PTR [edi],1
  40c31a:	in     eax,dx
  40c31b:	jge    0x40c326
  40c31d:	mov    dh,0x6c
  40c31f:	jnp    0x40c2ae
  40c321:	int    0xa5
  40c323:	and    DWORD PTR [edi-0x12],ecx
  40c326:	(bad)  [esi]
  40c328:	lock (bad) [edx-0x18]
  40c32c:	ins    BYTE PTR es:[edi],dx
  40c32d:	lods   eax,DWORD PTR ds:[esi]
  40c32e:	out    dx,al
  40c32f:	push   cs
  40c330:	cmp    al,BYTE PTR ss:[edx-0x44]
  40c334:	pop    ebx
  40c335:	pushf  
  40c336:	pop    edx
  40c337:	loope  0x40c2c6
  40c339:	cmovb  ebp,eax
  40c33c:	(bad)  
  40c33d:	sub    eax,0x9cd297c8
  40c342:	std    
  40c343:	test   BYTE PTR [ebx+eax*4],al
  40c346:	add    DWORD PTR [ebx-0x76],0xffffff93
  40c34a:	xchg   edi,eax
  40c34b:	popa   
  40c34c:	xor    DWORD PTR [ebx],ebp
  40c34e:	mov    BYTE PTR [eax],0xdd
  40c351:	test   BYTE PTR [ecx-0x5991cf3c],ah
  40c357:	int3   
  40c358:	sub    al,0xaf
  40c35a:	adc    al,0x29
  40c35c:	stos   BYTE PTR es:[edi],al
  40c35d:	or     BYTE PTR [ecx],0xc1
  40c360:	out    dx,eax
  40c361:	xor    ebx,DWORD PTR [edx+0x129bdcf4]
  40c367:	cmp    ebx,DWORD PTR [esp+ebx*1]
  40c36a:	inc    ebp
  40c36b:	popa   
  40c36c:	popa   
  40c36d:	pop    edx
  40c36e:	cmp    BYTE PTR [edi],bh
  40c370:	sub    DWORD PTR [edx+esi*1-0x3d55b442],ebp
  40c377:	adc    eax,0x731141f4
  40c37c:	shl    bl,1
  40c37e:	mov    edi,0xaacfff5f
  40c383:	fnstenv [eax]
  40c385:	lds    eax,FWORD PTR ss:[ebp-0x77ac759e]
  40c38c:	hlt    
  40c38d:	jo     0x40c3ef
  40c38f:	pop    esi
  40c390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c391:	pushf  
  40c392:	dec    eax
  40c393:	jg     0x40c396
  40c395:	or     DWORD PTR [edi+eiz*8],0xffffffb3
  40c399:	xchg   esp,eax
  40c39a:	je     0x40c38c
  40c39c:	imul   eax,DWORD PTR [ecx],0x6b
  40c39f:	ret    0x87b3
  40c3a2:	dec    esp
  40c3a3:	(bad)  
  40c3a4:	push   ecx
  40c3a5:	push   ss
  40c3a6:	ret    0x44f3
  40c3a9:	mov    ds:0x693c1cfd,al
  40c3ae:	mov    al,ds:0xe47263d3
  40c3b3:	cdq    
  40c3b4:	jmp    0xe73f:0xde12d529
  40c3bb:	mov    dl,BYTE PTR [ecx+edi*2+0x53]
  40c3bf:	call   0xb6ea:0x62f0258c
  40c3c6:	outs   dx,DWORD PTR ds:[esi]
  40c3c7:	pop    esp
  40c3c8:	cli    
  40c3c9:	in     eax,0x76
  40c3cb:	lahf   
  40c3cc:	dec    edi
  40c3cd:	jb     0x40c41d
  40c3cf:	xchg   ebp,eax
  40c3d0:	shl    BYTE PTR [edi],1
  40c3d2:	jns    0x40c397
  40c3d4:	mov    ecx,0x41d0b54e
  40c3d9:	cli    
  40c3da:	fidivr DWORD PTR [edi+0x10]
  40c3dd:	call   0xfb9:0xc5c020c7
  40c3e4:	imul   ebp,DWORD PTR [edx],0x9874b086
  40c3ea:	sahf   
  40c3eb:	pop    es
  40c3ec:	pusha  
  40c3ed:	test   DWORD PTR [edi-0xc263538],ecx
  40c3f3:	jg     0x40c44a
  40c3f5:	(bad)  
  40c3f6:	pop    ebp
  40c3f7:	jbe    0x40c44d
  40c3f9:	mov    WORD PTR [ebp+0x68],fs
  40c3fc:	nop
  40c3fd:	in     eax,0x95
  40c3ff:	jge    0x40c3b9
  40c401:	mov    bh,0x8
  40c403:	stc    
  40c404:	rcl    bl,1
  40c406:	out    dx,al
  40c407:	js     0x40c3b3
  40c409:	jno    0x40c3fd
  40c40b:	or     ecx,DWORD PTR [edx-0x7e341c74]
  40c411:	xchg   ebx,eax
  40c412:	add    BYTE PTR [edi+0x562b791d],al
  40c418:	mov    ds:0x9d1c9f97,eax
  40c41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c41e:	out    0xe6,al
  40c420:	sub    eax,ebx
  40c422:	mov    bl,0x1e
  40c424:	hlt    
  40c425:	leave  
  40c426:	retf   
  40c427:	sahf   
  40c428:	mov    dl,0x70
  40c42a:	push   es
  40c42b:	sti    
  40c42c:	pop    ecx
  40c42d:	and    bh,bl
  40c42f:	fwait
  40c430:	inc    ecx
  40c431:	ins    DWORD PTR es:[edi],dx
  40c432:	sbb    al,0x49
  40c434:	nop
  40c435:	xor    DWORD PTR [eax+0x5b],ebp
  40c438:	and    bh,bl
  40c43a:	adc    eax,0x4e85e459
  40c43f:	pushf  
  40c440:	mov    dh,BYTE PTR [eax]
  40c442:	outs   dx,DWORD PTR ds:[esi]
  40c443:	pop    eax
  40c444:	jg     0x40c421
  40c446:	addr16 sbb eax,0x21e9f53b
  40c44c:	repnz jecxz 0x40c45f
  40c44f:	jg     0x40c3fb
  40c451:	and    al,0x83
  40c453:	data16 clc 
  40c455:	pop    ebp
  40c456:	dec    ebx
  40c457:	xor    DWORD PTR [edi-0x2b],esp
  40c45a:	xor    cl,BYTE PTR [eax-0x61]
  40c45d:	je     0x40c446
  40c45f:	and    ebp,DWORD PTR [ecx]
  40c461:	sub    edi,DWORD PTR [ebx-0x7859d5e7]
  40c467:	and    DWORD PTR [ebx+0xeb37112],esp
  40c46d:	pop    ds
  40c46e:	scas   al,BYTE PTR es:[edi]
  40c46f:	sub    esi,DWORD PTR [edi+0x45]
  40c472:	test   DWORD PTR [ebp+0xcabbec9],edi
  40c478:	jecxz  0x40c3fc
  40c47a:	xchg   edi,eax
  40c47b:	mov    BYTE PTR [ebx+edx*1-0x49826888],dl
  40c482:	cmp    bh,ah
  40c484:	jmp    0x2c5f6995
  40c489:	sbb    eax,0xda5a85db
  40c48e:	mov    al,ds:0xa959ff67
  40c493:	int    0x92
  40c495:	pop    edi
  40c496:	xor    edx,DWORD PTR [ebx-0x3c74720c]
  40c49c:	jnp    0x40c4e5
  40c49e:	cmp    BYTE PTR [eax],0x23
  40c4a1:	test   cl,bh
  40c4a3:	and    DWORD PTR [esp+edi*8+0x44],eax
  40c4a7:	sbb    al,0xc8
  40c4a9:	add    ecx,DWORD PTR [ecx-0x51]
  40c4ac:	std    
  40c4ad:	push   ds
  40c4ae:	fs pop es
  40c4b0:	jo     0x40c49e
  40c4b2:	and    eax,ecx
  40c4b4:	push   edx
  40c4b5:	repz push esp
  40c4b7:	jge    0x40c4f2
  40c4b9:	or     ecx,ebx
  40c4bb:	jns    0x40c4ac
  40c4bd:	xchg   ebp,eax
  40c4be:	adc    al,0x2
  40c4c0:	fwait
  40c4c1:	aaa    
  40c4c2:	adc    eax,0xe8739ba0
  40c4c7:	push   cs
  40c4c8:	xchg   edx,eax
  40c4c9:	lods   al,BYTE PTR ds:[esi]
  40c4ca:	ds jae 0x40c4f6
  40c4cd:	mov    ch,dl
  40c4cf:	fincstp 
  40c4d1:	sub    bl,bh
  40c4d3:	int    0xb2
  40c4d5:	add    BYTE PTR [ecx+ecx*4+0x2279ee22],al
  40c4dc:	js     0x40c531
  40c4de:	mov    WORD PTR [edi],?
  40c4e0:	mov    ch,0x79
  40c4e2:	cli    
  40c4e3:	inc    edi
  40c4e4:	xor    eax,0x7414eba7
  40c4e9:	es fdiv st,st(1)
  40c4ec:	pop    ecx
  40c4ed:	in     eax,dx
  40c4ee:	dec    ebx
  40c4ef:	or     al,0x0
  40c4f1:	cmp    BYTE PTR [edx],ah
  40c4f3:	mov    ebp,esi
  40c4f5:	mov    ch,0xe0
  40c4f7:	dec    esi
  40c4f8:	mov    ebx,0x4669c437
  40c4fd:	pop    edx
  40c4fe:	sbb    eax,0x1c7756bc
  40c503:	aaa    
  40c504:	mov    cl,0x33
  40c506:	sbb    DWORD PTR [esi-0x67ebb927],ecx
  40c50c:	mov    esi,0x7a4ff3ec
  40c511:	sbb    DWORD PTR [edi],esi
  40c513:	and    dh,BYTE PTR [esi-0x9]
  40c516:	in     eax,dx
  40c517:	ficomp WORD PTR [eax-0x6c4ff550]
  40c51d:	push   ds
  40c51e:	adc    BYTE PTR [edx-0x1a364112],bl
  40c524:	dec    eax
  40c525:	js     0x40c5a1
  40c527:	sti    
  40c528:	add    al,0xd4
  40c52a:	add    DWORD PTR [ecx+eiz*2-0x7],edx
  40c52e:	jne    0x40c56e
  40c530:	push   ebp
  40c531:	mov    ebp,0xc469a517
  40c536:	jmp    0xd70a:0xf51b4ab3
  40c53d:	cmp    al,0x99
  40c53f:	lods   eax,DWORD PTR ds:[esi]
  40c540:	cdq    
  40c541:	adc    eax,0x47eab9a0
  40c546:	or     al,0x95
  40c548:	jmp    0x9286ff95
  40c54d:	and    ch,BYTE PTR [eax-0x3af5beae]
  40c553:	loopne 0x40c595
  40c555:	lods   eax,DWORD PTR ds:[esi]
  40c556:	leave  
  40c557:	(bad)  
  40c558:	retf   0x5318
  40c55b:	jns    0x40c4e2
  40c55d:	sub    BYTE PTR [ecx],al
  40c55f:	(bad)  
  40c560:	cmp    esi,ebx
  40c562:	jo     0x40c58b
  40c564:	test   BYTE PTR [esi-0x14240300],bh
  40c56a:	xor    bl,BYTE PTR [ecx]
  40c56c:	mov    al,0x27
  40c56e:	add    ch,BYTE PTR [esi+ebx*1+0x2470d56b]
  40c575:	pop    ecx
  40c576:	jmp    DWORD PTR [ebx+eiz*2-0x77]
  40c57a:	jbe    0x40c552
  40c57c:	fs pushf 
  40c57e:	out    0x91,eax
  40c580:	pop    esp
  40c581:	(bad)  [eax+esi*4]
  40c584:	(bad)
  40c587:	jp     0x40c5f5
  40c589:	adc    ah,ah
  40c58b:	jecxz  0x40c522
  40c58d:	(bad)
  40c591:	push   ecx
  40c592:	mov    ebp,0x966da32a
  40c597:	imul   eax
  40c599:	mov    bh,0xc7
  40c59b:	mov    ds,WORD PTR [ebx-0x1c787ad]
  40c5a1:	jge    0x40c575
  40c5a3:	add    eax,0xc78a593e
  40c5a8:	pop    esi
  40c5a9:	xchg   edi,eax
  40c5aa:	pop    ebx
  40c5ab:	aas    
  40c5ac:	imul   ebx,DWORD PTR [ebx],0x955cbb73
  40c5b2:	aad    0x53
  40c5b4:	ins    DWORD PTR es:[edi],dx
  40c5b5:	stos   BYTE PTR es:[edi],al
  40c5b6:	ins    DWORD PTR es:[edi],dx
  40c5b7:	mov    eax,0xc0a8ec4e
  40c5bc:	ficomp WORD PTR [edi-0x27]
  40c5bf:	push   0x52f766d1
  40c5c4:	jns    0x40c5e5
  40c5c6:	mov    bh,0x3c
  40c5c8:	aas    
  40c5c9:	inc    ecx
  40c5cb:	jns    0x40c628
  40c5cd:	clc    
  40c5ce:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d0:	add    dh,BYTE PTR [edx]
  40c5d2:	js     0x40c5ea
  40c5d4:	inc    ebp
  40c5d5:	jg     0x40c5b2
  40c5d7:	sar    DWORD PTR [edx+0x61],0x92
  40c5db:	mov    ebp,eax
  40c5dd:	jl     0x40c655
  40c5df:	sub    eax,0x220edbd4
  40c5e4:	xor    bl,BYTE PTR [ebx-0x3e]
  40c5e7:	mov    eax,ds:0x26999f9d
  40c5ec:	or     BYTE PTR [edx],0x85
  40c5ef:	daa    
  40c5f0:	jle    0x40c639
  40c5f2:	cmp    ah,dl
  40c5f4:	jb     0x40c63c
  40c5f6:	add    BYTE PTR ss:[eax+0x1d],dh
  40c5fa:	imul   edx,DWORD PTR [edx+0x19],0xfffffffb
  40c5fe:	dec    ebp
  40c5ff:	(bad)  
  40c600:	pop    edi
  40c601:	xor    BYTE PTR [ecx],0x6
  40c604:	mov    edx,DWORD PTR [ebx]
  40c606:	xor    DWORD PTR [edx-0x45],edx
  40c609:	mov    ?,WORD PTR [esi-0x4dd235b0]
  40c60f:	fs inc edi
  40c611:	cld    
  40c612:	aaa    
  40c613:	xchg   ebp,eax
  40c614:	xor    BYTE PTR [edi],ch
  40c616:	mov    BYTE PTR [eax+ecx*1-0x57],bh
  40c61a:	jl     0x40c5f4
  40c61c:	sub    ch,BYTE PTR [ebx-0x4382d18c]
  40c622:	sahf   
  40c623:	pop    edx
  40c624:	sub    al,0x55
  40c626:	mov    ah,BYTE PTR [edx]
  40c628:	aas    
  40c629:	bound  esp,QWORD PTR [edi+0x78129fa2]
  40c62f:	and    ah,ah
  40c631:	mov    edx,0x1b53cecf
  40c636:	cdq    
  40c637:	lds    eax,FWORD PTR [ebx+0x5f]
  40c63a:	enter  0x751f,0xeb
  40c63e:	sti    
  40c63f:	sub    ah,BYTE PTR [eax-0x21c70d26]
  40c645:	mov    edx,0x191d44ee
  40c64a:	or     ebp,DWORD PTR [edx]
  40c64c:	push   esi
  40c64d:	scas   eax,DWORD PTR es:[edi]
  40c64e:	adc    DWORD PTR [esi+eax*4],esp
  40c651:	sbb    al,0xcd
  40c653:	inc    ecx
  40c654:	sbb    al,0x19
  40c656:	clc    
  40c657:	popa   
  40c658:	sbb    ch,BYTE PTR [ebx]
  40c65a:	inc    esp
  40c65b:	jmp    0x63a0:0xf58403d1
  40c662:	lea    ebx,[ebp-0xa3abc6d]
  40c668:	out    0x68,eax
  40c66a:	mov    ebp,cs
  40c66c:	add    ecx,ecx
  40c66e:	mov    ebp,0x6b2928e5
  40c673:	test   BYTE PTR [esi+0x7fe210ef],dh
  40c679:	ja     0x40c6f7
  40c67b:	mov    WORD PTR [eax-0x2b02e66d],?
  40c681:	push   edx
  40c682:	pushf  
  40c683:	xchg   edx,eax
  40c684:	jl     0x40c634
  40c686:	add    ebx,ecx
  40c688:	gs add eax,0x3eedaffa
  40c68e:	mov    ds:0x8ee17e58,eax
  40c693:	pop    ss
  40c694:	mov    dl,0xf5
  40c696:	stos   DWORD PTR es:[edi],eax
  40c697:	(bad)  
  40c698:	repnz ror DWORD PTR [edx],0x51
  40c69c:	loopne 0x40c673
  40c69e:	shl    DWORD PTR [ebx],0xbf
  40c6a1:	adc    al,dh
  40c6a3:	sbb    eax,0xb51cb124
  40c6a8:	inc    ecx
  40c6a9:	addr16 cmp eax,0x6e424edb
  40c6af:	dec    esi
  40c6b0:	sbb    DWORD PTR [ebx],ebx
  40c6b2:	jns    0x40c688
  40c6b4:	lds    esp,FWORD PTR [esi+esi*4+0x59]
  40c6b8:	add    eax,0x31eae619
  40c6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6be:	adc    edx,DWORD PTR [ebx+0x6f46e56c]
  40c6c4:	(bad)  
  40c6c5:	xlat   BYTE PTR ds:[ebx]
  40c6c6:	in     al,0x5f
  40c6c8:	push   es
  40c6c9:	jnp    0x40c692
  40c6cb:	push   ebx
  40c6cc:	mov    edx,0xc90e0f26
  40c6d1:	aam    0x71
  40c6d3:	cmp    BYTE PTR [ebx+0x2ad04ed1],ch
  40c6d9:	inc    edx
  40c6da:	gs into 
  40c6dc:	in     al,0xc8
  40c6de:	in     al,dx
  40c6df:	or     dl,BYTE PTR [edi+0x3b88a55f]
  40c6e5:	and    eax,esp
  40c6e7:	arpl   WORD PTR [ebp-0x45],ax
  40c6ea:	cmp    al,0xf3
  40c6ec:	jmp    0x40c6a2
  40c6ee:	cs popf 
  40c6f0:	stos   BYTE PTR es:[edi],al
  40c6f1:	out    dx,eax
  40c6f2:	xor    DWORD PTR ds:0xb660e057,ebx
  40c6f8:	push   0xb1928d1e
  40c6fd:	cmc    
  40c6fe:	sbb    edx,DWORD PTR fs:[edx+0x4140acdf]
  40c705:	and    ah,al
  40c707:	add    al,0x14
  40c709:	mov    eax,ecx
  40c70b:	sbb    DWORD PTR [eax-0x42d2acc9],eax
  40c711:	loope  0x40c71d
  40c713:	jns    0x40c767
  40c715:	ja     0x40c6f8
  40c717:	jno    0x40c798
  40c719:	pop    esp
  40c71a:	not    BYTE PTR [ecx+0x120b4d2c]
  40c720:	sbb    BYTE PTR [edi*8+0x42fa4b9e],cl
  40c727:	mov    esp,0x6cdf607c
  40c72c:	sti    
  40c72d:	ret    0x17f5
  40c730:	mov    al,ds:0x69bf8cb7
  40c735:	mov    eax,ds:0xb02097ef
  40c73a:	mov    bl,0x62
  40c73c:	(bad)
  40c73f:	mov    dh,0x0
  40c741:	retf   
  40c742:	es jge 0x40c79e
  40c745:	imul   edx,esp,0xf7e4aae3
  40c74b:	fisub  WORD PTR [ecx+esi*4+0x3b]
  40c74f:	mov    ds:0x67641889,al
  40c754:	pop    eax
  40c755:	sbb    al,0x7e
  40c757:	xor    eax,0x63a30bef
  40c75c:	xchg   esi,eax
  40c75d:	cs push ebx
  40c75f:	jge    0x993342b2
  40c765:	mov    BYTE PTR [edi+0x79],bh
  40c768:	mov    ebx,0x437d74c7
  40c76d:	cmp    esi,DWORD PTR [ebx+0x45237eb7]
  40c773:	xor    DWORD PTR [ebp+0x61759b1f],ecx
  40c779:	sub    al,0xfa
  40c77b:	xor    DWORD PTR [ecx],edi
  40c77d:	mov    ch,0xb5
  40c77f:	push   esi
  40c780:	loopne 0x40c744
  40c782:	dec    edi
  40c783:	jnp    0x40c745
  40c785:	(bad)  
  40c787:	cs jmp 0x40c7cc
  40c78a:	and    DWORD PTR [edi+edi*1+0x144e72e9],ecx
  40c791:	sub    al,0xda
  40c793:	popf   
  40c794:	jbe    0x40c770
  40c796:	cmp    al,0x75
  40c798:	int    0xaa
  40c79a:	xor    BYTE PTR [ebx-0x38],ch
  40c79d:	sub    BYTE PTR [edi],dh
  40c79f:	(bad)  
  40c7a0:	jbe    0x40c7cd
  40c7a2:	xor    BYTE PTR [ebx-0x38],dl
  40c7a5:	jecxz  0x40c760
  40c7a7:	fcom   QWORD PTR [edx+eiz*8-0x2f]
  40c7ab:	(bad)  
  40c7ac:	mov    ds:0x9cad3b49,al
  40c7b1:	pusha  
  40c7b2:	pushf  
  40c7b3:	int3   
  40c7b4:	sbb    BYTE PTR [ebp+0x51],dl
  40c7b7:	mov    bl,0x1c
  40c7b9:	xchg   esp,eax
  40c7ba:	outs   dx,BYTE PTR ds:[esi]
  40c7bb:	or     DWORD PTR [ecx],0xb
  40c7be:	adc    eax,0xaf3576c8
  40c7c3:	shl    BYTE PTR [edx-0x41],1
  40c7c6:	in     al,dx
  40c7c7:	es xor al,0x5d
  40c7ca:	lods   al,BYTE PTR ds:[esi]
  40c7cb:	mov    bh,0xda
  40c7cd:	xchg   DWORD PTR [ebx+eax*4+0x270c5d4b],esi
  40c7d4:	loop   0x40c7d1
  40c7d6:	(bad)  
  40c7d7:	aam    0x3f
  40c7d9:	push   ds
  40c7da:	lods   eax,DWORD PTR ds:[esi]
  40c7db:	arpl   WORD PTR [ebx+0x4e1bf776],dx
  40c7e1:	inc    ecx
  40c7e2:	enter  0xe268,0xce
  40c7e6:	jp     0x40c7e3
  40c7e8:	in     eax,dx
  40c7e9:	or     esp,edi
  40c7eb:	dec    eax
  40c7ec:	popa   
  40c7ed:	mov    dl,0x42
  40c7ef:	push   edx
  40c7f0:	outs   dx,BYTE PTR ds:[esi]
  40c7f1:	push   esp
  40c7f2:	adc    ch,dl
  40c7f4:	pop    edi
  40c7f5:	imul   ebx,DWORD PTR [edi],0x8d24e8cc
  40c7fb:	push   edx
  40c7fc:	sti    
  40c7fd:	mov    dl,0xa9
  40c7ff:	cmp    DWORD PTR ds:0x3ce2d2ac,0x3acfb441
  40c809:	mov    eax,ds:0xa824c3f
  40c80e:	into   
  40c80f:	push   edx
  40c810:	enter  0x1bc0,0x5f
  40c814:	sub    DWORD PTR [eax-0x180ebdcc],ecx
  40c81a:	push   ss
  40c81b:	(bad)  
  40c81c:	scas   al,BYTE PTR es:[edi]
  40c81d:	es push ss
  40c81f:	cs (bad) 
  40c821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c822:	add    al,ah
  40c824:	sub    eax,0x12cb4375
  40c829:	xor    ecx,DWORD PTR fs:[ebx]
  40c82c:	jns    0x40c80f
  40c82e:	xchg   esi,eax
  40c82f:	cdq    
  40c830:	push   es
  40c831:	jp     0x40c81a
  40c833:	cmp    esi,DWORD PTR [eax-0x2ba392b9]
  40c839:	ja     0x40c8a8
  40c83b:	(bad)  
  40c83c:	in     eax,0xca
  40c83e:	adc    ebx,DWORD PTR [ecx+esi*8-0x2a]
  40c842:	retf   0xb050
  40c845:	cmp    BYTE PTR [eax-0x6c],dh
  40c848:	push   ebp
  40c849:	lods   al,BYTE PTR ds:[esi]
  40c84a:	fwait
  40c84b:	(bad)  
  40c84c:	push   eax
  40c84d:	imul   BYTE PTR [edi]
  40c84f:	leave  
  40c850:	and    BYTE PTR [ebp+edx*2+0x607f8063],0x66
  40c858:	sub    DWORD PTR [esi+0x5610f0df],edx
  40c85e:	test   al,0xf9
  40c860:	inc    esp
  40c861:	jbe    0x40c8be
  40c863:	inc    ebp
  40c864:	cmp    bh,BYTE PTR [ebp-0x19]
  40c867:	clc    
  40c868:	lods   eax,DWORD PTR ds:[esi]
  40c869:	rol    DWORD PTR [ebp+ebp*8-0x77],1
  40c86d:	dec    ebx
  40c86e:	or     ah,dh
  40c870:	mov    ds:0x6c3dd764,eax
  40c875:	sbb    ecx,esp
  40c877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c878:	and    eax,0x77634a08
  40c87d:	div    BYTE PTR [edx]
  40c87f:	inc    ebx
  40c880:	or     DWORD PTR [esi-0x254c774a],ebp
  40c886:	lods   al,BYTE PTR ds:[esi]
  40c887:	inc    ebp
  40c888:	out    0xb0,eax
  40c88a:	hlt    
  40c88b:	jmp    0x40c8ea
  40c88d:	out    0xac,al
  40c88f:	in     eax,dx
  40c890:	pop    eax
  40c891:	(bad)  
  40c893:	lea    esi,[eax]
  40c895:	nop
  40c896:	jp     0x40c877
  40c898:	sbb    DWORD PTR ds:0x27002925,0x6e28b4e8
  40c8a2:	cmp    eax,esi
  40c8a4:	adc    al,0xd2
  40c8a6:	mov    ds:0x5c3059ca,al
  40c8ab:	ficom  WORD PTR [edx]
  40c8ad:	cmp    edi,DWORD PTR [edx+0x734c6b52]
  40c8b3:	rol    DWORD PTR [eax],0xa0
  40c8b6:	inc    ecx
  40c8b7:	out    dx,eax
  40c8b8:	adc    ebx,edi
  40c8ba:	inc    ebp
  40c8bb:	push   es
  40c8bc:	xchg   edi,eax
  40c8bd:	dec    ecx
  40c8be:	dec    esp
  40c8bf:	add    eax,0xcd6af40b
  40c8c4:	shl    DWORD PTR [ebx-0x3c894eea],0x9e
  40c8cb:	test   BYTE PTR [esi+edi*2+0x49],ch
  40c8cf:	sub    DWORD PTR [ebp*2+0x79257397],eax
  40c8d6:	mov    esi,0xc02ceb40
  40c8db:	cs inc ebx
  40c8dd:	inc    esp
  40c8de:	inc    edi
  40c8df:	mov    al,ds:0xaeb087b1
  40c8e4:	and    DWORD PTR [eax-0x64faf238],esi
  40c8ea:	xchg   esp,eax
  40c8eb:	dec    ecx
  40c8ec:	sub    esi,ebx
  40c8ee:	aaa    
  40c8ef:	or     al,0x79
  40c8f1:	add    BYTE PTR [eax+0xb793305],dl
  40c8f7:	push   esp
  40c8f8:	ss jmp 0xdd9e:0x9edcec69
  40c900:	add    al,0xe3
  40c902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c903:	call   0x924ea70b
  40c908:	test   DWORD PTR [edi],0xf1db9200
  40c90e:	enter  0xb528,0xe4
  40c912:	jo     0x40c92e
  40c914:	jno    0x40c938
  40c916:	mov    eax,ds:0xee014a0d
  40c91b:	or     eax,0xec88968
  40c920:	and    dl,BYTE PTR [eax+0x25]
  40c923:	and    edx,DWORD PTR [eax-0x60]
  40c926:	cmp    eax,0xe153a1ee
  40c92b:	jmp    0x5e3:0xb9e7
  40c931:	or     ebx,ebx
  40c933:	addr16 push ss
  40c935:	push   ebx
  40c936:	mov    dh,0x7d
  40c938:	sahf   
  40c939:	push   edx
  40c93a:	gs dec esp
  40c93c:	sti    
  40c93d:	or     BYTE PTR [eax+0x6eabe8bb],ah
  40c943:	mov    ah,0xaa
  40c945:	lods   al,BYTE PTR ds:[esi]
  40c946:	int3   
  40c947:	push   ds
  40c948:	int    0xe5
  40c94a:	pop    esi
  40c94b:	pop    eax
  40c94c:	inc    ecx
  40c94d:	add    eax,0xdba30ed4
  40c952:	aas    
  40c953:	test   al,0xa0
  40c955:	push   0x51
  40c957:	popa   
  40c958:	dec    ebp
  40c959:	lahf   
  40c95a:	iret   
  40c95b:	mov    bl,0xde
  40c95d:	cmp    al,0x56
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x36d3e9a3]
  40d00c:	xchg   BYTE PTR [edx+0x77c7ce9],dh
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	in     al,dx
  40d016:	fadd   DWORD PTR [edi]
  40d018:	or     DWORD PTR [esi-0x63],ecx
  40d01b:	push   ds
  40d01c:	mov    edi,0x9d6b2c72
  40d021:	dec    esp
  40d022:	sbb    DWORD PTR [esi],0x44
  40d025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d026:	outs   dx,DWORD PTR ds:[esi]
  40d027:	mov    esi,edi
  40d029:	dec    esi
  40d02a:	xchg   BYTE PTR [ecx+0xe4eeb7f],ah
  40d030:	cmp    al,0xce
  40d032:	outs   dx,DWORD PTR ds:[esi]
  40d033:	(bad)  
  40d034:	fdivr  st(1),st
  40d036:	cmp    ax,0x4602
  40d03a:	test   BYTE PTR [ebp-0x90b9c45],bh
  40d040:	js     0x40d02b
  40d042:	ror    BYTE PTR ds:[edx-0x39],1
  40d046:	int3   
  40d047:	sub    cl,BYTE PTR cs:[ebx+0x74]
  40d04b:	sub    dh,bl
  40d04d:	sub    esi,ebp
  40d04f:	pop    ebp
  40d050:	mov    ss,WORD PTR [esi+eax*8]
  40d053:	popa   
  40d054:	(bad)  
  40d055:	xlat   BYTE PTR ds:[ebx]
  40d056:	aaa    
  40d057:	mov    cl,0x81
  40d059:	idiv   DWORD PTR [eax-0x12]
  40d05c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d05d:	sbb    eax,0x12ff395d
  40d062:	test   eax,0xb3f850a9
  40d067:	inc    esi
  40d068:	scas   al,BYTE PTR es:[edi]
  40d069:	(bad)  
  40d06a:	addr16 ret 0x9e3b
  40d06e:	xchg   ebx,eax
  40d06f:	xchg   esp,eax
  40d070:	int3   
  40d071:	in     al,0xa7
  40d073:	mov    bl,bl
  40d075:	sahf   
  40d076:	fs dec ecx
  40d078:	sub    dh,dh
  40d07a:	dec    ebp
  40d07b:	nop
  40d07c:	pop    esp
  40d07d:	fsubr  DWORD PTR [ecx-0x5d]
  40d080:	dec    esi
  40d081:	push   esi
  40d082:	lds    ebx,FWORD PTR [esi]
  40d084:	sub    ah,BYTE PTR [edx]
  40d086:	xchg   DWORD PTR [esi+edi*1],edx
  40d089:	pop    ecx
  40d08a:	jecxz  0x40d093
  40d08c:	and    al,ch
  40d08e:	jne    0x40d0db
  40d090:	loop   0x40d086
  40d092:	xchg   esp,eax
  40d093:	fnstenv ds:0x6df59b1e
  40d099:	call   0xf7ec8fe1
  40d09e:	stc    
  40d09f:	lahf   
  40d0a0:	or     DWORD PTR [ebp+0x38],edx
  40d0a3:	cmp    edx,DWORD PTR [esi-0x2]
  40d0a6:	dec    ecx
  40d0a7:	dec    esi
  40d0a8:	push   esp
  40d0a9:	shr    DWORD PTR [eax-0x68],0x44
  40d0ad:	mov    dl,BYTE PTR ds:0x767e8106
  40d0b3:	push   eax
  40d0b4:	mov    esp,0x97b55ef0
  40d0b9:	retf   0x44e6
  40d0bc:	imul   ebx,DWORD PTR [ebx-0x406ea97b],0x185fc741
  40d0c6:	sub    DWORD PTR [esi+edi*4],esp
  40d0c9:	fcmovnu st,st(3)
  40d0cb:	in     eax,dx
  40d0cc:	lods   eax,DWORD PTR ds:[esi]
  40d0cd:	add    edi,0x34
  40d0d0:	push   0x2a563063
  40d0d5:	imul   esi,DWORD PTR [edi],0xb65ac203
  40d0db:	and    ch,BYTE PTR [eax-0x79126904]
  40d0e1:	(bad)  
  40d0e2:	xor    ch,BYTE PTR [eax]
  40d0e4:	inc    edi
  40d0e5:	idiv   DWORD PTR [edx-0x75]
  40d0e8:	lods   eax,DWORD PTR ds:[esi]
  40d0e9:	mov    al,ds:0xfab272d7
  40d0ee:	mov    BYTE PTR [ecx+0x497ed509],ah
  40d0f4:	sub    ebx,DWORD PTR [ebp+eiz*4+0x41]
  40d0f8:	mov    BYTE PTR [ebx],ah
  40d0fa:	jmp    0xcda7:0x2cee6d4a
  40d101:	mov    BYTE PTR [edx],cl
  40d103:	pop    ss
  40d104:	stos   DWORD PTR es:[edi],eax
  40d105:	shl    DWORD PTR [edi-0x18e6836a],0x40
  40d10c:	xchg   edi,eax
  40d10d:	xchg   ecx,eax
  40d10e:	stos   DWORD PTR es:[edi],eax
  40d10f:	push   edi
  40d110:	in     eax,0x34
  40d112:	fadd   st(6),st
  40d114:	cs mov bh,0xcf
  40d117:	mov    ecx,0x26d0d860
  40d11c:	out    0xa3,eax
  40d11e:	xor    DWORD PTR [edi-0x7e190d1],edi
  40d124:	inc    edx
  40d125:	cmp    BYTE PTR [ebx-0x22],dl
  40d128:	adc    ecx,DWORD PTR [edx-0x4a]
  40d12b:	icebp  
  40d12c:	jmp    0xee440543
  40d131:	xchg   ecx,eax
  40d132:	clc    
  40d133:	or     ch,BYTE PTR [esi-0x5da00fe]
  40d139:	xor    eax,0xc5dc7ac0
  40d13e:	retf   0x96af
  40d141:	fnstcw WORD PTR [esi]
  40d143:	(bad)  
  40d144:	pop    ecx
  40d145:	push   edi
  40d146:	pop    eax
  40d147:	xlat   BYTE PTR ds:[ebx]
  40d148:	jns    0x40d1ac
  40d14a:	sbb    bh,0xb
  40d14d:	stos   DWORD PTR es:[edi],eax
  40d14e:	das    
  40d14f:	pop    ecx
  40d150:	in     al,dx
  40d151:	inc    ecx
  40d152:	xchg   edx,eax
  40d153:	pop    esp
  40d154:	dec    edx
  40d155:	push   edx
  40d156:	test   eax,0xc64e00b9
  40d15b:	ffreep st(3)
  40d15d:	push   ebp
  40d15e:	jecxz  0x40d1dd
  40d160:	retf   0x4a5f
  40d163:	sbb    ch,al
  40d165:	es icebp 
  40d167:	or     BYTE PTR [eax+0x2],al
  40d16a:	adc    al,0x8b
  40d16c:	cmp    ebx,DWORD PTR [ecx+0x2fb1c11f]
  40d172:	mov    bl,0x1f
  40d174:	cli    
  40d175:	data16 sbb BYTE PTR [eax],0x84
  40d179:	iret   
  40d17a:	add    BYTE PTR [ebx+edi*4+0x3c],0xef
  40d17f:	cdq    
  40d180:	fimul  DWORD PTR [esi]
  40d182:	adc    DWORD PTR [ecx+0xe6e5a86],ebx
  40d188:	push   ss
  40d189:	push   esi
  40d18a:	sub    al,0x0
  40d18c:	(bad)  
  40d18d:	fbstp  TBYTE PTR [edi]
  40d18f:	push   edi
  40d190:	xor    al,0x39
  40d192:	xor    al,0xb2
  40d194:	sti    
  40d195:	(bad)  
  40d197:	push   0xffffffb9
  40d199:	ret    0xf1be
  40d19c:	test   eax,0xedf2495a
  40d1a1:	add    edx,ebp
  40d1a3:	inc    ecx
  40d1a4:	mov    cl,0xda
  40d1a6:	push   edi
  40d1a7:	mov    dh,0x76
  40d1a9:	xor    ebx,DWORD PTR [eax+0x11]
  40d1ac:	icebp  
  40d1ad:	inc    esp
  40d1ae:	inc    ebx
  40d1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b0:	aam    0x34
  40d1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b3:	or     dl,0x31
  40d1b6:	jnp    0x40d151
  40d1b8:	dec    esi
  40d1b9:	jge    0x1faf1c94
  40d1bf:	pop    ss
  40d1c0:	(bad)  
  40d1c1:	out    dx,al
  40d1c2:	cmp    al,0x55
  40d1c4:	pop    ds
  40d1c5:	fldcw  WORD PTR [ecx-0x164afea6]
  40d1cb:	into   
  40d1cc:	pop    es
  40d1cd:	mov    ah,cl
  40d1cf:	fcomp  QWORD PTR [ebx]
  40d1d1:	stc    
  40d1d2:	ret    0x4137
  40d1d5:	scas   eax,DWORD PTR es:[edi]
  40d1d6:	pop    ebp
  40d1d7:	mov    edx,0x59d6db97
  40d1dc:	in     al,0x8e
  40d1de:	outs   dx,DWORD PTR ds:[esi]
  40d1df:	sbb    eax,0x5c4b0285
  40d1e4:	fcmovnbe st,st(7)
  40d1e6:	mov    ebp,0x891a2ccc
  40d1eb:	xchg   ebp,eax
  40d1ec:	test   al,0xea
  40d1ee:	lods   eax,DWORD PTR ds:[esi]
  40d1ef:	repz (bad) 
  40d1f1:	xor    al,0xf4
  40d1f3:	jecxz  0x40d21c
  40d1f5:	mov    al,0x9e
  40d1f7:	icebp  
  40d1f8:	jns    0x40d1be
  40d1fa:	xor    BYTE PTR ds:0xc8e045c2,bh
  40d200:	fs mov eax,ds
  40d203:	pop    esp
  40d204:	hlt    
  40d205:	sub    dl,bl
  40d207:	ror    DWORD PTR [ebp+0x6768ec70],0x4e
  40d20e:	mov    eax,0x9e351c5e
  40d213:	sub    ah,BYTE PTR [esi+0x4b]
  40d216:	mov    ebx,0xffbe3d62
  40d21b:	out    0xa8,al
  40d21d:	cmp    eax,0xf76c2357
  40d222:	call   0xf74d:0x73e878fd
  40d229:	arpl   di,di
  40d22b:	bound  edi,QWORD PTR [ebx+eiz*2-0x427e9529]
  40d232:	sub    ah,bh
  40d234:	mov    es,WORD PTR [edx]
  40d236:	gs sub edx,edx
  40d239:	add    al,0xac
  40d23b:	push   es
  40d23c:	mov    WORD PTR [eax+edi*1+0x71],fs
  40d240:	scas   eax,DWORD PTR es:[edi]
  40d241:	scas   al,BYTE PTR es:[edi]
  40d242:	das    
  40d243:	jns    0x40d25e
  40d245:	dec    eax
  40d246:	sub    ah,ch
  40d248:	mov    edi,0xd7e035d1
  40d24d:	pop    es
  40d24e:	inc    eax
  40d24f:	or     ebp,ebx
  40d251:	jle    0x40d20b
  40d253:	inc    edi
  40d254:	xchg   DWORD PTR [ecx+eax*8],edx
  40d257:	shl    BYTE PTR [ecx-0x386ab321],1
  40d25d:	sub    edx,DWORD PTR [eax]
  40d25f:	xchg   edi,eax
  40d260:	xlat   BYTE PTR ds:[ebx]
  40d261:	add    DWORD PTR [edx+0x42],ebp
  40d264:	imul   edx,DWORD PTR [ecx+eiz*8],0x55
  40d268:	pop    edx
  40d269:	popa   
  40d26a:	mov    esp,0x3691f898
  40d26f:	push   edi
  40d270:	sti    
  40d271:	push   cs
  40d272:	push   ss
  40d273:	in     eax,dx
  40d274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d275:	push   ss
  40d276:	in     eax,dx
  40d277:	pop    es
  40d278:	adc    dl,BYTE PTR [edx]
  40d27a:	out    0x13,eax
  40d27c:	adc    al,cl
  40d27e:	ret    0xf561
  40d281:	lock enter 0x8621,0xe4
  40d286:	cwde   
  40d287:	jl     0x40d2e9
  40d289:	in     eax,0x7e
  40d28b:	pusha  
  40d28c:	mov    ecx,0x89e251d1
  40d291:	aas    
  40d292:	add    ecx,edx
  40d294:	xor    ebp,ebx
  40d296:	(bad)  
  40d297:	jb     0x40d2c1
  40d299:	js     0x40d23c
  40d29b:	jl     0x40d2e6
  40d29d:	dec    esi
  40d29e:	push   ebx
  40d29f:	jnp    0x40d2bd
  40d2a1:	or     DWORD PTR [eax+ecx*8-0x712ca4c1],ebx
  40d2a8:	xor    DWORD PTR [edx+0x7ddf572e],0x3d
  40d2af:	xchg   ebx,eax
  40d2b0:	inc    ecx
  40d2b1:	neg    bl
  40d2b3:	xor    BYTE PTR [esi-0x18531f12],bh
  40d2b9:	push   ebx
  40d2ba:	add    bh,BYTE PTR [eax]
  40d2bc:	lds    esp,FWORD PTR [ecx]
  40d2be:	add    eax,0x32c8d4a8
  40d2c3:	mov    ecx,0xf019a100
  40d2c8:	call   0x8f071887
  40d2cd:	icebp  
  40d2ce:	outs   dx,DWORD PTR ds:[esi]
  40d2cf:	push   edx
  40d2d0:	xchg   ecx,eax
  40d2d1:	in     al,0x85
  40d2d3:	sub    ebx,DWORD PTR [ebp-0x21c28fab]
  40d2d9:	dec    edi
  40d2da:	out    0xe3,eax
  40d2dc:	pop    ebp
  40d2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2de:	adc    BYTE PTR [ebp-0x4e246bd4],dl
  40d2e4:	pushf  
  40d2e5:	push   ecx
  40d2e6:	(bad)  
  40d2e7:	es cli 
  40d2e9:	jne    0x40d359
  40d2eb:	pop    es
  40d2ec:	lahf   
  40d2ed:	add    al,0xc6
  40d2ef:	imul   ebx
  40d2f1:	retf   
  40d2f2:	je     0x40d31d
  40d2f4:	out    0xc3,eax
  40d2f6:	mov    ecx,0x60bded93
  40d2fb:	(bad)  
  40d2fc:	adc    eax,0x9632a9e6
  40d301:	addr16 icebp 
  40d303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d304:	lea    eax,[ecx+0x2002879]
  40d30a:	cmp    BYTE PTR [ecx],ch
  40d30c:	pop    esp
  40d30d:	dec    esp
  40d30e:	retf   0x8980
  40d311:	cmp    BYTE PTR [edi-0x7ec2a011],cl
  40d317:	les    ecx,FWORD PTR [edx-0x69]
  40d31a:	add    BYTE PTR [ecx+edx*4],dh
  40d31d:	xlat   BYTE PTR ds:[ebx]
  40d31e:	and    DWORD PTR [esp+edx*4-0x45],ebp
  40d322:	mov    DWORD PTR [esi+eax*4-0x3f9a920f],ecx
  40d329:	retf   0x3f6
  40d32c:	int3   
  40d32d:	jp     0x40d2dc
  40d32f:	leave  
  40d330:	push   esp
  40d331:	push   ss
  40d332:	cmp    eax,0x75eed75a
  40d337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d338:	cwde   
  40d339:	int3   
  40d33a:	sar    BYTE PTR [edx-0x482d739a],1
  40d340:	nop
  40d341:	lea    ebp,[edx+esi*2-0x2f2919eb]
  40d348:	popa   
  40d349:	rcl    BYTE PTR [eax+0x68aeb7da],0xb8
  40d350:	add    eax,0x3fc58fdf
  40d355:	push   edi
  40d356:	mov    bl,0xc2
  40d358:	mov    ebp,0x4192856d
  40d35d:	mul    cl
  40d35f:	push   0xffffff8c
  40d361:	push   esp
  40d362:	aam    0x8f
  40d364:	and    eax,0xfbf0c52c
  40d369:	or     BYTE PTR [ecx+0x5beffc1a],cl
  40d36f:	bound  ebp,QWORD PTR [esi]
  40d371:	in     al,dx
  40d372:	dec    esi
  40d373:	je     0x40d3ea
  40d375:	cli    
  40d376:	fistp  DWORD PTR [ecx]
  40d378:	stos   BYTE PTR es:[edi],al
  40d379:	xchg   BYTE PTR [esi-0x2e],bl
  40d37c:	nop
  40d37d:	call   0x4a70:0x3c2bbc92
  40d384:	pop    es
  40d385:	xor    DWORD PTR [edi],eax
  40d387:	xlat   BYTE PTR ds:[ebx]
  40d388:	push   ecx
  40d389:	fwait
  40d38a:	mov    ebx,0x23aaf1f6
  40d38f:	mov    ebp,DWORD PTR [ebp-0x57]
  40d392:	adc    dh,BYTE PTR [eax+0x7e987378]
  40d398:	stos   DWORD PTR es:[edi],eax
  40d399:	ror    DWORD PTR [eax-0x12],0x89
  40d39d:	xor    dl,BYTE PTR [esi-0x54c8f50d]
  40d3a3:	and    BYTE PTR [eax+0x5c61b264],al
  40d3a9:	push   esp
  40d3aa:	mov    WORD PTR [ecx+0x43eba3a2],?
  40d3b0:	pop    ecx
  40d3b1:	pushf  
  40d3b2:	mov    esi,0x50ea4dae
  40d3b7:	inc    esi
  40d3b8:	add    al,0x82
  40d3ba:	ds inc ebp
  40d3bc:	adc    DWORD PTR [edx+eiz*2],esp
  40d3bf:	into   
  40d3c0:	packuswb mm6,QWORD PTR [eax-0x28552ca2]
  40d3c7:	(bad)  
  40d3c8:	aaa    
  40d3c9:	out    dx,al
  40d3ca:	(bad)  
  40d3cb:	nop
  40d3cc:	adc    al,0x6e
  40d3ce:	and    eax,0x5ee47788
  40d3d3:	fsub   DWORD PTR [ebx-0x7e708489]
  40d3d9:	aam    0xa9
  40d3db:	sbb    ah,BYTE PTR [ebx]
  40d3dd:	shr    DWORD PTR [edi-0x581a50f2],1
  40d3e3:	mov    eax,ds:0x51326d98
  40d3e8:	shl    BYTE PTR [ebp+edx*8+0x61644202],1
  40d3ef:	sbb    esi,edi
  40d3f1:	adc    DWORD PTR [edx-0x3e],0x7e
  40d3f5:	cmp    BYTE PTR [ebx+esi*8],0x17
  40d3f9:	(bad)  
  40d3fa:	out    dx,eax
  40d3fb:	fnstcw WORD PTR [ecx]
  40d3fd:	sahf   
  40d3fe:	dec    ebp
  40d3ff:	push   DWORD PTR [ecx]
  40d401:	mov    al,ds:0x4ef59c6f
  40d406:	mov    esi,0x85759e2e
  40d40b:	in     eax,0x4c
  40d40d:	and    ch,BYTE PTR [eax+0x65edb8cf]
  40d413:	inc    esp
  40d414:	lahf   
  40d415:	out    0x4c,al
  40d417:	push   0x5ca59518
  40d41c:	add    ah,BYTE PTR [edx]
  40d41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41f:	or     al,0x26
  40d421:	add    eax,0x540d7e3f
  40d426:	div    BYTE PTR [ebp+0x66c2932d]
  40d42c:	and    BYTE PTR [ecx-0x4d],bh
  40d42f:	int    0xd1
  40d431:	fisubr WORD PTR [ecx+0x3]
  40d434:	int    0x52
  40d436:	adc    al,bh
  40d438:	xchg   edx,eax
  40d439:	xchg   BYTE PTR [esi-0x21],dl
  40d43c:	pop    ss
  40d43d:	(bad)  
  40d43e:	fldl2e 
  40d440:	add    ch,0x65
  40d443:	jmp    0x796994aa
  40d448:	and    eax,0xaeffc4ab
  40d44d:	cli    
  40d44e:	jmp    0x40d42a
  40d450:	push   0x9a7aae9b
  40d455:	mov    ebp,0x2459b539
  40d45a:	iret   
  40d45b:	and    ecx,DWORD PTR [esi+0x68b802fa]
  40d461:	mov    bh,0x5e
  40d463:	cld    
  40d464:	jo     0x40d471
  40d466:	aaa    
  40d467:	and    DWORD PTR [edx+0x2a6beb75],eax
  40d46d:	dec    ebp
  40d46e:	cmp    ebx,DWORD PTR [ebx+eax*4]
  40d471:	or     cl,bl
  40d473:	ret    0x63fc
  40d476:	popa   
  40d477:	sar    BYTE PTR [ecx-0x5a8c7714],0x8
  40d47e:	add    eax,0x29027981
  40d483:	add    esi,DWORD PTR [ebx]
  40d485:	cmp    al,0xc7
  40d487:	aaa    
  40d488:	clc    
  40d489:	(bad)  
  40d48a:	std    
  40d48b:	les    ecx,FWORD PTR [edx-0x451bcbba]
  40d491:	dec    esi
  40d492:	push   ds
  40d493:	push   eax
  40d494:	arpl   WORD PTR [eax-0x39],sp
  40d497:	add    ch,BYTE PTR [edx+0x50]
  40d49a:	inc    ebp
  40d49b:	ret    0xacf0
  40d49e:	shl    BYTE PTR [ebp+0xd1890d4],1
  40d4a4:	add    eax,DWORD PTR [esp+edx*4-0x7f]
  40d4a8:	fnstenv [ebx+0x74]
  40d4ab:	push   ds
  40d4ac:	xor    BYTE PTR [esi+0x446c5a04],ch
  40d4b2:	aaa    
  40d4b3:	stos   BYTE PTR es:[edi],al
  40d4b4:	jne    0x40d4c0
  40d4b6:	pop    ds
  40d4b7:	adc    al,0x89
  40d4b9:	sub    eax,0x39ec36ed
  40d4be:	inc    esi
  40d4bf:	outs   dx,BYTE PTR ds:[esi]
  40d4c0:	adc    eax,0x8ab7877a
  40d4c5:	adc    al,0x29
  40d4c7:	(bad)  
  40d4c8:	mov    bl,0xbb
  40d4ca:	bound  esi,QWORD PTR [edi]
  40d4cc:	xchg   edi,eax
  40d4cd:	(bad)  
  40d4ce:	(bad)  
  40d4cf:	out    0x2,eax
  40d4d1:	fs push ecx
  40d4d3:	adc    eax,0x7919338b
  40d4d8:	mov    ebp,0xdd563d1c
  40d4dd:	std    
  40d4de:	jg     0x40d4f0
  40d4e0:	sar    BYTE PTR [ebx],1
  40d4e2:	xchg   edx,eax
  40d4e3:	mov    ebx,0x84ffa661
  40d4e8:	loopne 0x40d4bf
  40d4ea:	daa    
  40d4eb:	sete   BYTE PTR [edx+0x427bbea]
  40d4f2:	shl    DWORD PTR [ebx+0x1ab9a35],cl
  40d4f8:	dec    ecx
  40d4f9:	and    eax,0xe74c5f28
  40d4fe:	test   al,dh
  40d500:	adc    ch,ah
  40d502:	sbb    al,BYTE PTR [edx]
  40d504:	jb     0x40d493
  40d506:	imul   ebp,DWORD PTR [edx],0x7d
  40d509:	adc    esi,ecx
  40d50b:	jl     0x40d50c
  40d50d:	repnz and ch,al
  40d510:	and    BYTE PTR [edi-0x10],dl
  40d513:	sbb    ebx,0x9da49399
  40d519:	adc    BYTE PTR [eax-0x4e],dl
  40d51c:	xchg   DWORD PTR [ecx-0x80],eax
  40d51f:	dec    esi
  40d520:	xchg   ebp,eax
  40d521:	jns    0x40d4b6
  40d523:	call   0x2c74:0x20952b2d
  40d52a:	cwde   
  40d52b:	ror    BYTE PTR [eax],1
  40d52d:	and    al,0x50
  40d52f:	add    ebx,0x2a
  40d532:	cs mov ebp,0xaa44dca0
  40d538:	stos   DWORD PTR es:[edi],eax
  40d539:	imul   ecx,DWORD PTR [edx],0x9fe79555
  40d53f:	mov    dl,0x6
  40d541:	retf   
  40d542:	and    eax,0xbbbff93a
  40d547:	out    0xcc,al
  40d549:	or     al,0xe2
  40d54b:	lahf   
  40d54c:	sub    al,0x26
  40d54e:	out    dx,al
  40d54f:	pop    edx
  40d550:	ja     0x40d599
  40d552:	sub    BYTE PTR [edi-0x2497048a],0xad
  40d559:	loope  0x40d5ae
  40d55b:	out    0x9c,al
  40d55d:	jbe    0x40d512
  40d55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d560:	mov    ebp,0xfd8ab819
  40d565:	mov    ebx,0xd6928678
  40d56a:	sbb    eax,DWORD PTR [edi-0x686b9675]
  40d570:	fbld   TBYTE PTR [ebp-0x7d108106]
  40d576:	outs   dx,BYTE PTR ds:[esi]
  40d577:	cmc    
  40d578:	or     al,0x5c
  40d57a:	in     eax,dx
  40d57b:	cmp    DWORD PTR [edi+esi*2-0x2f],ecx
  40d57f:	xor    BYTE PTR [ebx-0x7f],cl
  40d582:	jecxz  0x40d529
  40d584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d585:	xlat   BYTE PTR ds:[ebx]
  40d586:	into   
  40d587:	push   0xc5baa817
  40d58c:	enter  0x2f7a,0x9f
  40d590:	daa    
  40d591:	int    0x25
  40d593:	daa    
  40d594:	popa   
  40d595:	bound  esi,QWORD PTR [ebx+ebx*1+0x76]
  40d599:	pop    ds
  40d59a:	jo     0x40d5b8
  40d59c:	jle    0x40d5a0
  40d59e:	pop    ss
  40d59f:	fs (bad) 
  40d5a1:	aaa    
  40d5a2:	(bad)  
  40d5a3:	clc    
  40d5a4:	popa   
  40d5a5:	and    edx,DWORD PTR [esp+edi*2+0x6f]
  40d5a9:	inc    DWORD PTR [esi+0x4f]
  40d5ac:	xchg   esp,eax
  40d5ad:	ret    0xf0b5
  40d5b0:	aaa    
  40d5b1:	xchg   ebp,eax
  40d5b2:	fldln2 
  40d5b4:	and    al,0xa2
  40d5b6:	dec    edi
  40d5b7:	dec    edx
  40d5b8:	js     0x40d5d5
  40d5ba:	mov    edx,0xc9daa433
  40d5bf:	cmp    DWORD PTR [ebx-0x2d2018fa],0x31058060
  40d5c9:	fidiv  WORD PTR [ebp-0x4a]
  40d5cc:	retf   0xc16c
  40d5cf:	call   0x74fd:0x7c439d58
  40d5d6:	out    dx,eax
  40d5d7:	cmp    bh,BYTE PTR [ecx-0x61]
  40d5da:	aaa    
  40d5db:	int    0xd9
  40d5dd:	xor    esp,DWORD PTR [eax+ecx*1-0x6a]
  40d5e1:	loop   0x40d578
  40d5e3:	retf   
  40d5e4:	pop    edx
  40d5e5:	add    DWORD PTR [ebx-0x79e7e630],0x58a0c6a8
  40d5ef:	sbb    ebx,ebp
  40d5f1:	mov    bl,cl
  40d5f3:	shl    BYTE PTR ds:0x1e4cc7ef,1
  40d5f9:	dec    ecx
  40d5fa:	clc    
  40d5fb:	shl    BYTE PTR [ebp-0x55],cl
  40d5fe:	jns    0x40d597
  40d600:	call   0x78ce8495
  40d605:	outs   dx,BYTE PTR ds:[esi]
  40d606:	xchg   ebx,eax
  40d607:	lods   eax,DWORD PTR ds:[esi]
  40d608:	push   ds
  40d609:	mov    dl,BYTE PTR [edi]
  40d60b:	sub    ah,BYTE PTR [ebx]
  40d60d:	sti    
  40d60e:	jle    0x40d637
  40d610:	cmp    eax,0x6634fc9c
  40d615:	sub    cl,0x9c
  40d618:	aaa    
  40d619:	popf   
  40d61a:	sahf   
  40d61b:	dec    esp
  40d61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d61d:	fisub  DWORD PTR [ebx-0x52]
  40d620:	cmc    
  40d621:	push   edx
  40d622:	mov    dl,cl
  40d624:	shl    DWORD PTR [esi+0x7],cl
  40d627:	xor    al,0x98
  40d629:	repz push eax
  40d62b:	push   edx
  40d62c:	(bad)  [ecx+0x27544c84]
  40d632:	arpl   WORD PTR [edx+0x3a],dx
  40d635:	sbb    bl,bl
  40d637:	sbb    ah,ah
  40d639:	fld    st(6)
  40d63b:	das    
  40d63c:	mov    edi,0x932c5ae1
  40d641:	or     eax,0x5bfdfacf
  40d646:	push   ebp
  40d647:	stos   DWORD PTR es:[edi],eax
  40d648:	jge    0x40d5e7
  40d64a:	retw   
  40d64c:	cs push eax
  40d64e:	neg    esp
  40d650:	fwait
  40d651:	stos   BYTE PTR es:[edi],al
  40d652:	call   0x903a:0x82c55fda
  40d659:	adc    cl,BYTE PTR [ebp-0x5a]
  40d65c:	xor    al,BYTE PTR [ecx-0xb]
  40d65f:	aas    
  40d660:	fwait
  40d661:	xchg   ebp,eax
  40d662:	push   ebx
  40d663:	xor    ch,0x25
  40d666:	mov    dh,BYTE PTR [edi+edx*2]
  40d669:	mov    ebp,DWORD PTR [ebx]
  40d66b:	pop    ecx
  40d66c:	xchg   BYTE PTR [ecx],ah
  40d66e:	repz and DWORD PTR [ebp-0x74],eax
  40d672:	xor    cl,0x8d
  40d675:	xchg   ecx,eax
  40d676:	fs push esi
  40d678:	jmp    0x6f28:0x19a122cb
  40d67f:	ins    BYTE PTR es:[edi],dx
  40d680:	gs push 0x2f
  40d683:	mov    eax,ds:0xd3ee3f82
  40d688:	icebp  
  40d689:	adc    esi,DWORD PTR [esi+0x17159649]
  40d68f:	and    ch,BYTE PTR [ecx-0x2b]
  40d692:	(bad)
  40d695:	movd   DWORD PTR [edx],mm1
  40d698:	dec    esp
  40d699:	cld    
  40d69a:	sub    DWORD PTR [ecx],0x12
  40d69d:	icebp  
  40d69e:	fmul   QWORD PTR [ebx+0x16]
  40d6a1:	add    esi,DWORD PTR [edx+0x32e83826]
  40d6a7:	xor    eax,0x747b2733
  40d6ac:	mov    al,ds:0x1b0019d1
  40d6b1:	pop    esi
  40d6b2:	xchg   DWORD PTR [esi+0x41],esp
  40d6b5:	lods   eax,DWORD PTR ds:[esi]
  40d6b6:	push   0x67
  40d6b8:	push   ecx
  40d6b9:	test   ch,al
  40d6bb:	fnstsw WORD PTR [edi-0x1c]
  40d6be:	test   eax,0x8c25c59d
  40d6c3:	out    dx,al
  40d6c4:	jecxz  0x40d717
  40d6c6:	cmp    ebp,DWORD PTR [esi+0x6b]
  40d6c9:	jp     0x40d64e
  40d6cb:	int    0xbd
  40d6cd:	cld    
  40d6ce:	inc    ebx
  40d6cf:	addr16 jle 0x40d656
  40d6d2:	popf   
  40d6d3:	cwde   
  40d6d4:	cld    
  40d6d5:	(bad)  
  40d6d6:	iret   
  40d6d7:	mov    dl,0xdf
  40d6d9:	out    dx,al
  40d6da:	test   bl,ch
  40d6dc:	jae    0x40d6a4
  40d6de:	div    esp
  40d6e0:	retf   0x6199
  40d6e3:	xchg   edx,eax
  40d6e4:	js     0x40d69b
  40d6e6:	adc    bl,BYTE PTR [ecx+0x45]
  40d6e9:	out    0xb8,al
  40d6eb:	out    dx,al
  40d6ec:	mov    bl,0xd5
  40d6ee:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40d6f0:	pop    DWORD PTR [ebx+eiz*4-0x68]
  40d6f4:	mov    al,0xb3
  40d6f6:	das    
  40d6f7:	adc    al,0xa0
  40d6f9:	imul   ebp,DWORD PTR [edi+0x2e],0x35e9e7f9
  40d700:	stos   DWORD PTR es:[edi],eax
  40d701:	sub    DWORD PTR [ebp+0xc],0xffffff95
  40d705:	jecxz  0x40d6db
  40d707:	sbb    BYTE PTR [esp+edx*4],bh
  40d70a:	xchg   BYTE PTR [ecx],bh
  40d70c:	inc    eax
  40d70d:	inc    edx
  40d70e:	aad    0xba
  40d710:	loop   0x40d712
  40d712:	xor    bh,BYTE PTR [eax+edi*2-0x9c4db67]
  40d719:	test   al,0x79
  40d71b:	pop    ebx
  40d71c:	ins    DWORD PTR es:[edi],dx
  40d71d:	push   edx
  40d71e:	mov    ecx,0x149a6635
  40d723:	popa   
  40d724:	sub    bl,BYTE PTR [esi]
  40d726:	mov    edx,0x605bdf98
  40d72b:	push   esp
  40d72c:	rep movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40d72f:	fisttp DWORD PTR [ecx+0x4ae35207]
  40d735:	lds    eax,FWORD PTR [edi-0x7a]
  40d738:	sub    eax,edx
  40d73a:	test   eax,0x76b9c0f0
  40d73f:	mov    ds,edx
  40d741:	add    ecx,DWORD PTR ds:0xc959d9fc
  40d747:	stos   DWORD PTR es:[edi],eax
  40d748:	add    DWORD PTR [ebp+ebx*8+0x35b2c30c],eax
  40d74f:	sahf   
  40d750:	mov    di,0x9ad1
  40d754:	fld    QWORD PTR [eax+0x2825e607]
  40d75a:	jne    0x40d742
  40d75c:	cmp    al,ch
  40d75e:	icebp  
  40d75f:	inc    esp
  40d760:	xor    ebx,DWORD PTR [ebp+0x5d]
  40d763:	iret   
  40d764:	out    0x48,al
  40d766:	out    0x3d,eax
  40d768:	xchg   ecx,ebp
  40d76a:	and    ebp,DWORD PTR [ebp-0xd]
  40d76d:	dec    edi
  40d76e:	jge    0x40d7e5
  40d770:	fidiv  DWORD PTR ds:0xcf4f68b8
  40d776:	jne    0x40d746
  40d778:	sbb    edi,esp
  40d77a:	or     BYTE PTR [ebx],ah
  40d77c:	test   BYTE PTR [esi-0x46],dh
  40d77f:	fwait
  40d780:	sti    
  40d781:	std    
  40d782:	cmp    al,0xe1
  40d784:	popa   
  40d785:	mov    edi,0x3079b736
  40d78a:	rcl    BYTE PTR [ebp-0x4],0x94
  40d78e:	es (bad) 
  40d790:	xor    al,0x26
  40d792:	push   esp
  40d793:	and    DWORD PTR [ebx+0x0],esp
  40d796:	data16 jbe 0x40d764
  40d799:	aaa    
  40d79a:	je     0x40d757
  40d79c:	push   0xffffff88
  40d79e:	sub    al,dh
  40d7a0:	popf   
  40d7a1:	cmp    eax,0xbf239aed
  40d7a6:	stos   BYTE PTR es:[edi],al
  40d7a7:	adc    eax,0xfb2dea85
  40d7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ad:	out    dx,eax
  40d7ae:	mov    dh,0xd9
  40d7b0:	imul   ebx,DWORD PTR [edi],0x2d
  40d7b3:	xchg   DWORD PTR [eax],ecx
  40d7b5:	pop    edx
  40d7b6:	into   
  40d7b7:	or     BYTE PTR [edx+0x75],dl
  40d7ba:	push   cs
  40d7bb:	add    al,0xde
  40d7bd:	or     esp,DWORD PTR [ecx+ecx*4]
  40d7c0:	mov    dl,0x2
  40d7c2:	ret    
  40d7c3:	fcmovnu st,st(6)
  40d7c5:	in     eax,0x10
  40d7c7:	xor    BYTE PTR [eax+ebx*2-0x59],dh
  40d7cb:	out    0xa7,eax
  40d7cd:	loop   0x40d84a
  40d7cf:	bound  eax,QWORD PTR [ecx-0xb80f915]
  40d7d5:	sbb    BYTE PTR [edx-0x16],al
  40d7d8:	add    al,BYTE PTR [esi+0x504af70e]
  40d7de:	adc    ecx,DWORD PTR ds:[edx+eiz*2+0x51f4ae42]
  40d7e6:	xchg   esi,eax
  40d7e7:	sbb    bl,BYTE PTR [edx+0x11]
  40d7ea:	leave  
  40d7eb:	xor    bl,0x28
  40d7ee:	icebp  
  40d7ef:	sahf   
  40d7f0:	add    al,0xbc
  40d7f2:	mul    bl
  40d7f4:	call   0x6d8e0f8a
  40d7f9:	dec    edi
  40d7fa:	mov    eax,0x1c476575
  40d7ff:	xor    al,BYTE PTR ds:0xd6314310
  40d805:	mov    eax,ds:0x9fd75e43
  40d80a:	jne    0x40d85f
  40d80c:	ret    
  40d80d:	stos   DWORD PTR es:[edi],eax
  40d80e:	jp     0x40d794
  40d810:	jnp    0x40d7f4
  40d812:	cli    
  40d813:	sub    ecx,0xd6be2ba0
  40d819:	cmc    
  40d81a:	pop    ds
  40d81b:	imul   dh
  40d81d:	dec    edx
  40d81e:	adc    eax,0x17d161f8
  40d823:	(bad)  
  40d824:	into   
  40d825:	call   0x339102c0
  40d82a:	or     al,0x26
  40d82c:	popf   
  40d82d:	xchg   edx,eax
  40d82e:	cmc    
  40d82f:	sub    BYTE PTR [edx+0x6015b830],bl
  40d835:	push   ebp
  40d836:	mov    bh,BYTE PTR [esi]
  40d838:	fs ins DWORD PTR es:[edi],dx
  40d83a:	cwde   
  40d83b:	je     0x40d8ae
  40d83d:	adc    eax,0xb6a1cd45
  40d842:	cld    
  40d843:	addr16 mov dh,0x50
  40d846:	push   ebx
  40d847:	outs   dx,BYTE PTR ds:[esi]
  40d848:	stos   DWORD PTR es:[edi],eax
  40d849:	aaa    
  40d84a:	push   cs
  40d84b:	push   edi
  40d84c:	pop    es
  40d84d:	xchg   ebx,eax
  40d84e:	push   ds
  40d84f:	xchg   ecx,eax
  40d850:	adc    edi,edi
  40d852:	sbb    DWORD PTR [ebp-0x7c],esp
  40d855:	mov    es,WORD PTR [edx+0x0]
  40d858:	sbb    al,0xc0
  40d85a:	das    
  40d85b:	call   0x1cc5:0x3b8bf85d
  40d862:	xchg   ebp,eax
  40d863:	loope  0x40d83d
  40d865:	call   0x581096dc
  40d86a:	ficomp WORD PTR [eax]
  40d86c:	in     eax,0x62
  40d86e:	cli    
  40d86f:	adc    BYTE PTR ds:0x2019b6c7,ah
  40d875:	js     0x40d8d1
  40d877:	and    cl,cl
  40d879:	pop    ebp
  40d87a:	inc    esi
  40d87b:	mov    al,ds:0xd5c8e2a1
  40d880:	pop    ebp
  40d881:	jp     0x40d901
  40d883:	push   cs
  40d884:	hlt    
  40d885:	aad    0x99
  40d887:	adc    eax,0xf97b8c2c
  40d88c:	in     eax,dx
  40d88d:	mov    ah,0x50
  40d88f:	clc    
  40d890:	xor    bh,BYTE PTR [edx+0x51]
  40d893:	mov    esp,0xe44fd425
  40d898:	push   ds
  40d899:	sbb    BYTE PTR [edx+0x2c],al
  40d89c:	ja     0x40d85d
  40d89e:	ret    0x6295
  40d8a1:	add    DWORD PTR [ebx-0x494bb41b],eax
  40d8a7:	cmc    
  40d8a8:	inc    edi
  40d8a9:	clc    
  40d8aa:	xor    al,0xde
  40d8ac:	cwde   
  40d8ad:	leave  
  40d8ae:	aam    0x88
  40d8b0:	loopne 0x40d897
  40d8b2:	xchg   DWORD PTR [esi],eax
  40d8b4:	leave  
  40d8b5:	fcom   DWORD PTR [ebp-0x48b8e786]
  40d8bb:	addr16 cdq 
  40d8bd:	sahf   
  40d8be:	outs   dx,BYTE PTR ds:[esi]
  40d8bf:	repz mov ds:0xfaa228d8,al
  40d8c5:	dec    esi
  40d8c6:	les    edi,FWORD PTR [esi]
  40d8c8:	(bad)  
  40d8c9:	fiadd  DWORD PTR [esi]
  40d8cb:	sub    bl,ch
  40d8cd:	dec    ebp
  40d8ce:	test   BYTE PTR [eax-0x206580ff],ch
  40d8d4:	mov    WORD PTR [edx-0x177d24c7],?
  40d8da:	fnstcw WORD PTR [edi-0x2c1e3997]
  40d8e0:	repz cs je 0x40d89d
  40d8e4:	cli    
  40d8e5:	(bad)  
  40d8e6:	clc    
  40d8e7:	das    
  40d8e8:	push   ds
  40d8e9:	push   ebx
  40d8ea:	stc    
  40d8eb:	imul   eax,edi,0x22
  40d8ee:	repnz cmc 
  40d8f0:	aas    
  40d8f1:	sub    eax,0xe1ff8a78
  40d8f6:	xchg   ebx,eax
  40d8f7:	mov    esi,DWORD PTR [eax+edi*1-0x1ab27116]
  40d8fe:	cld    
  40d8ff:	pop    ebp
  40d900:	pop    ss
  40d901:	dec    DWORD PTR [ecx-0x6d]
  40d904:	fadd   st,st(4)
  40d906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d907:	or     eax,0x9e7d48fa
  40d90c:	sbb    ch,BYTE PTR [edx-0x372082cb]
  40d912:	mov    eax,0x681819d2
  40d917:	fs sbb cl,ah
  40d91a:	in     al,0x6
  40d91c:	pop    ebx
  40d91d:	icebp  
  40d91e:	add    eax,0xff1a9f50
  40d923:	retf   
  40d924:	or     edx,DWORD PTR [ebx+0x26]
  40d927:	mov    ebx,0xb0d33d2e
  40d92c:	mov    dh,0x99
  40d92e:	push   ebp
  40d92f:	mov    bh,0x60
  40d931:	xor    eax,esi
  40d933:	fcmovnu st,st(4)
  40d935:	jl     0x40d987
  40d937:	add    DWORD PTR [esi-0x2786dc38],0x23
  40d93e:	cmp    al,ch
  40d940:	push   ebp
  40d941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d942:	sub    esp,esi
  40d944:	jb     0x40d987
  40d946:	xchg   BYTE PTR [ebx+0x4],bl
  40d949:	pop    eax
  40d94a:	fisub  DWORD PTR [ebp+0x6e]
  40d94d:	dec    ebp
  40d94e:	stos   BYTE PTR es:[edi],al
  40d94f:	inc    ecx
  40d950:	add    ebp,0xffffffa7
  40d953:	mov    ah,BYTE PTR [eax-0x42]
  40d956:	lds    esi,FWORD PTR [ebx-0xa]
  40d959:	addr16 push es
  40d95b:	sub    ch,dl
  40d95d:	nop
  40d95e:	fsubr  QWORD PTR [ecx+eiz*8]
  40d961:	sub    al,0x4d
  40d963:	xor    al,BYTE PTR [ebp-0xc9d5fc1]
  40d969:	cwde   
  40d96a:	push   ss
  40d96b:	push   es
  40d96c:	dec    ebp
  40d96d:	std    
  40d96e:	clc    
  40d96f:	sbb    eax,0x775eaa81
  40d974:	add    DWORD PTR [ebx-0x61],eax
  40d977:	iret   
  40d978:	or     BYTE PTR [ebx],bh
  40d97a:	enter  0xf0de,0x36
  40d97e:	jo     0x40d989
  40d980:	xor    DWORD PTR [edi-0x11],0xd724fb57
  40d987:	das    
  40d988:	daa    
  40d989:	adc    ebx,DWORD PTR [eax-0x4]
  40d98c:	imul   ebp,DWORD PTR [esi+edi*8+0x6ab0a62e],0x6c
  40d994:	inc    ebx
  40d995:	inc    ebp
  40d996:	sti    
  40d997:	clc    
  40d998:	imul   ebx,DWORD PTR [ebx+ecx*2],0x24
  40d99c:	sbb    BYTE PTR [ecx+0x45],cl
  40d99f:	in     eax,0x19
  40d9a1:	push   edi
  40d9a2:	jecxz  0x40d9fa
  40d9a4:	adc    esp,DWORD PTR [ebx]
  40d9a6:	jle    0x40d939
  40d9a8:	ret    0xb413
  40d9ab:	jmp    0x2de4:0x1bc70947
  40d9b2:	sbb    eax,0x2c0d67a9
  40d9b7:	(bad)  
  40d9b8:	sbb    ah,dh
  40d9ba:	enter  0xfef5,0xee
  40d9be:	fadd   QWORD PTR [ebp-0x75]
  40d9c1:	xchg   esi,eax
  40d9c2:	xchg   DWORD PTR [edi-0x65a68a4d],edi
  40d9c8:	in     al,dx
  40d9c9:	ror    DWORD PTR [ecx+esi*2],0x9e
  40d9cd:	(bad)  
  40d9cf:	xchg   edi,eax
  40d9d0:	addr16 sti 
  40d9d2:	int    0xff
  40d9d4:	(bad)  
  40d9d5:	xor    DWORD PTR [edx],esi
  40d9d7:	mov    esi,0xcceaa7b1
  40d9dc:	sub    eax,0xbe3f2d53
  40d9e1:	rcr    BYTE PTR [ebx-0x17e57023],cl
  40d9e7:	test   al,dh
  40d9e9:	fs push ds
  40d9eb:	mov    bl,BYTE PTR [ebp+0x3c]
  40d9ee:	sbb    ch,BYTE PTR [ebx]
  40d9f0:	mov    bp,0xa05e
  40d9f4:	(bad)  
  40d9f5:	jl     0x40da3c
  40d9f7:	push   ds
  40d9f8:	cmp    dl,BYTE PTR [ebx+ebx*8+0x19256bd2]
  40d9ff:	xor    cl,BYTE PTR [eax+0x5e628cfe]
  40da05:	cdq    
  40da06:	out    dx,eax
  40da07:	inc    eax
  40da08:	jbe    0x40d98d
  40da0a:	imul   ecx,DWORD PTR [esi+0x36405773],0x8dad5b8
  40da14:	sub    BYTE PTR [ebp-0x10af7e2c],cl
  40da1a:	das    
  40da1b:	into   
  40da1c:	cmp    al,0x59
  40da1e:	mov    esp,0x9ce2e857
  40da23:	aas    
  40da24:	popa   
  40da25:	xor    eax,0xe3a0fdbd
  40da2a:	repnz push DWORD PTR [esi]
  40da2d:	sbb    eax,0x2079b43b
  40da32:	and    BYTE PTR [esp+edi*8-0x69],dl
  40da36:	callw  0x731a
  40da3a:	test   DWORD PTR [esi],eax
  40da3c:	ror    BYTE PTR [edi-0x4840269c],cl
  40da42:	ja     0x40da43
  40da44:	pop    eax
  40da45:	rcr    BYTE PTR [ebx],1
  40da47:	jae    0x40da21
  40da49:	dec    edi
  40da4a:	add    esi,DWORD PTR [eax+0xb3a298c]
  40da50:	adc    eax,0x2c8323f6
  40da55:	cmp    al,0xe6
  40da57:	jecxz  0x40da99
  40da59:	stc    
  40da5a:	xor    ebx,esi
  40da5c:	imul   esp,DWORD PTR [ecx-0x518a2687],0x821d79e1
  40da66:	sbb    ah,ch
  40da68:	dec    eax
  40da69:	fdiv   st,st(4)
  40da6b:	mov    esi,0x4f1cea1
  40da70:	lds    ebx,FWORD PTR [ebp+0x4]
  40da73:	xchg   ecx,eax
  40da74:	jne    0x40da53
  40da76:	out    0x5,eax
  40da78:	jge    0x40daaf
  40da7a:	leave  
  40da7b:	test   DWORD PTR [esi],ebp
  40da7d:	or     BYTE PTR [ebp-0x3a643da],al
  40da83:	int3   
  40da84:	fcmovb st,st(6)
  40da86:	nop
  40da87:	sbb    DWORD PTR [eax-0x5c],ebp
  40da8a:	aad    0x1b
  40da8c:	aam    0x1c
  40da8e:	inc    edi
  40da8f:	in     eax,dx
  40da90:	jne    0x40da39
  40da92:	loop   0x40dae3
  40da94:	maskmovq mm4,mm3
  40da97:	inc    ecx
  40da98:	push   ecx
  40da99:	in     eax,dx
  40da9a:	inc    ebx
  40da9b:	int    0x39
  40da9d:	inc    eax
  40da9e:	push   esi
  40da9f:	int    0x8e
  40daa1:	mov    esp,0x3da11adc
  40daa6:	out    0xc3,eax
  40daa8:	push   esi
  40daa9:	pusha  
  40daaa:	ror    BYTE PTR [esi+0x37],1
  40daad:	mov    bh,0xe9
  40daaf:	dec    ecx
  40dab0:	das    
  40dab1:	dec    eax
  40dab2:	mov    esi,0x500db58e
  40dab7:	mov    al,ds:0xa7d0f06d
  40dabc:	xchg   edx,eax
  40dabd:	stos   BYTE PTR es:[edi],al
  40dabe:	icebp  
  40dabf:	add    DWORD PTR [ebx-0x66],esi
  40dac2:	push   esp
  40dac3:	sbb    eax,0x29b3a153
  40dac8:	out    0x16,eax
  40daca:	lods   al,BYTE PTR ds:[esi]
  40dacb:	sar    dl,1
  40dacd:	mov    bl,0xff
  40dacf:	push   0x5835cefa
  40dad4:	pop    esi
  40dad5:	mov    edx,0x4440f3f3
  40dadb:	jecxz  0x40dac8
  40dadd:	loop   0x40da9e
  40dadf:	mov    bl,BYTE PTR [eax-0x5cf41bf]
  40dae5:	clc    
  40dae6:	enter  0x2c2,0x2a
  40daea:	jle    0x40dac8
  40daec:	mov    ebp,0xaaeddc9d
  40daf1:	ja     0x40da9f
  40daf3:	fnsave [ecx-0x2539107]
  40daf9:	dec    esi
  40dafa:	pushf  
  40dafb:	inc    eax
  40dafc:	in     eax,dx
  40dafd:	inc    ecx
  40dafe:	xor    al,0x1c
  40db00:	out    dx,eax
  40db01:	mov    ds:0x161a7b02,al
  40db06:	sbb    DWORD PTR [eax],ebx
  40db08:	and    BYTE PTR [ecx-0x4e],bh
  40db0b:	sbb    BYTE PTR [ebx+0x1c],ch
  40db0e:	sbb    DWORD PTR [ecx+0x6a],edx
  40db11:	push   edx
  40db12:	lahf   
  40db13:	xor    eax,0x8ca7f053
  40db18:	ret    
  40db19:	push   edx
  40db1a:	ins    BYTE PTR es:[edi],dx
  40db1b:	sub    eax,0x350f14fc
  40db20:	rcl    BYTE PTR [edi-0x59],0x57
  40db24:	push   esi
  40db25:	arpl   WORD PTR [esi],si
  40db27:	cmp    eax,0x9a92312
  40db2c:	jge    0x40db65
  40db2e:	dec    esp
  40db2f:	xor    eax,0x4170e107
  40db34:	sub    ch,cl
  40db36:	in     eax,dx
  40db37:	in     eax,0xa1
  40db39:	fsubr  DWORD PTR ds:[edx-0x43]
  40db3d:	test   BYTE PTR [edi+esi*2+0x71],ah
  40db41:	or     esp,DWORD PTR [eax-0x6afbd4bc]
  40db47:	or     eax,0xd6561e95
  40db4c:	cmp    DWORD PTR [edi],edi
  40db4e:	popf   
  40db4f:	fcom   DWORD PTR [eax+0x2b]
  40db52:	rcr    dh,cl
  40db54:	iret   
  40db55:	lahf   
  40db56:	js     0x40db11
  40db58:	outs   dx,DWORD PTR ds:[esi]
  40db59:	mov    bl,0xb6
  40db5b:	jns    0x40db17
  40db5d:	inc    ebx
  40db5e:	mov    edx,0x8ebb2d7a
  40db63:	add    edx,DWORD PTR [ecx+eiz*2+0x2]
  40db67:	or     DWORD PTR [ecx-0x60],edx
  40db6a:	imul   esi,ecx,0x7e
  40db6d:	add    al,0x25
  40db6f:	aas    
  40db70:	xchg   esp,eax
  40db71:	repnz pop es
  40db73:	mov    al,0x7b
  40db75:	lds    esi,FWORD PTR [eax-0x776defb2]
  40db7b:	icebp  
  40db7c:	pop    esp
  40db7d:	and    al,0x88
  40db7f:	or     dl,BYTE PTR [ecx-0x4e2bcac8]
  40db85:	pop    ecx
  40db86:	mov    ds:0x663c20a6,eax
  40db8b:	retf   0xfce4
  40db8e:	xchg   ecx,eax
  40db8f:	sbb    DWORD PTR [ebp-0x24e3bcae],0xffffff91
  40db96:	jecxz  0x40dbad
  40db98:	int    0xfb
  40db9a:	pop    edi
  40db9b:	push   ebp
  40db9c:	jbe    0x40dbcf
  40db9e:	add    eax,0x9c4ace6
  40dba3:	or     DWORD PTR [esi],esi
  40dba5:	xchg   ecx,eax
  40dba6:	mov    ecx,0xa7ef34c5
  40dbab:	pop    ebp
  40dbac:	jecxz  0x40db67
  40dbae:	mov    ch,0x2b
  40dbb0:	stc    
  40dbb1:	pop    esi
  40dbb2:	outs   dx,DWORD PTR ds:[esi]
  40dbb3:	mov    esp,0x33d0bf2c
  40dbb8:	cwde   
  40dbb9:	out    dx,eax
  40dbba:	inc    ebx
  40dbbb:	pop    ecx
  40dbbc:	scas   eax,DWORD PTR es:[edi]
  40dbbd:	pop    ds
  40dbbe:	repnz sahf 
  40dbc0:	les    ebx,FWORD PTR [edx+eiz*2]
  40dbc3:	icebp  
  40dbc4:	sub    BYTE PTR es:[esi],0x46
  40dbc8:	out    0x77,eax
  40dbca:	jns    0x40dbc5
  40dbcc:	push   ebp
  40dbcd:	dec    esi
  40dbce:	fst    DWORD PTR [edi]
  40dbd0:	out    dx,al
  40dbd1:	xor    DWORD PTR [eax],ebx
  40dbd3:	xor    al,BYTE PTR [eax]
  40dbd5:	ficom  WORD PTR [edi]
  40dbd7:	sahf   
  40dbd8:	daa    
  40dbd9:	cmp    edx,ecx
  40dbdb:	inc    esp
  40dbdc:	imul   edi,DWORD PTR [ecx+0x47],0x4e
  40dbe0:	ins    BYTE PTR es:[edi],dx
  40dbe1:	sub    bl,BYTE PTR [edi-0xb917f5e]
  40dbe7:	je     0x40db7a
  40dbe9:	(bad)  
  40dbea:	mul    bl
  40dbec:	call   0x5582:0xde30d60e
  40dbf3:	inc    ecx
  40dbf4:	hlt    
  40dbf5:	add    al,bh
  40dbf7:	cmp    esi,edx
  40dbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbfa:	jg     0x40dc48
  40dbfc:	dec    ecx
  40dbfd:	pop    edi
  40dbfe:	fsincos 
  40dc00:	bound  edx,QWORD PTR [eax-0x44169c51]
  40dc06:	pop    ecx
  40dc07:	xchg   DWORD PTR [edi],eax
  40dc09:	jo     0x40db90
  40dc0b:	dec    bh
  40dc0d:	inc    ebx
  40dc0e:	and    al,0x78
  40dc10:	not    al
  40dc12:	retf   0x6fba
  40dc15:	enter  0xcb71,0xa1
  40dc19:	out    0xc5,eax
  40dc1b:	xlat   BYTE PTR ds:[ebx]
  40dc1c:	inc    eax
  40dc1d:	push   ecx
  40dc1e:	ins    DWORD PTR es:[edi],dx
  40dc1f:	jo     0x40dbc6
  40dc21:	(bad)  
  40dc23:	push   0x4a
  40dc25:	sub    dh,bh
  40dc27:	in     al,dx
  40dc28:	mov    fs,WORD PTR [edx+edi*4]
  40dc2b:	pop    eax
  40dc2c:	shl    ah,1
  40dc2e:	test   dl,al
  40dc30:	jb     0x40dc65
  40dc32:	jbe    0x40dc74
  40dc34:	(bad)  
  40dc35:	(bad)  
  40dc36:	out    0xf3,eax
  40dc38:	ffreep st(3)
  40dc3a:	imul   edx,DWORD PTR [ecx-0x5eac1aa0],0xffffffe8
  40dc41:	sub    al,0xd5
  40dc43:	in     eax,0x35
  40dc45:	fwait
  40dc46:	lock and bl,BYTE PTR [ebp+0x57f405cc]
  40dc4d:	pop    edx
  40dc4e:	fmul   DWORD PTR [edx-0x901adc]
  40dc54:	aad    0xe6
  40dc56:	sub    ch,BYTE PTR [esi+0x3]
  40dc59:	fidivr WORD PTR [edx-0x4a850b77]
  40dc5f:	outs   dx,BYTE PTR ds:[esi]
  40dc60:	enter  0xa75b,0xef
  40dc64:	rcr    BYTE PTR [ebp+esi*8+0x38],cl
  40dc68:	lock imul eax,eax,0x73
  40dc6c:	fdivr  QWORD PTR [edi-0x4e7f71e5]
  40dc72:	mov    ebx,0xa6023c9
  40dc77:	sar    BYTE PTR [ebx-0x54b56256],1
  40dc7d:	mov    edx,0x1fc7e1de
  40dc82:	stos   DWORD PTR es:[edi],eax
  40dc83:	dec    edi
  40dc84:	in     eax,dx
  40dc85:	aam    0xa3
  40dc87:	push   ebp
  40dc88:	mov    ds:0x4062a820,al
  40dc8d:	xchg   esp,eax
  40dc8e:	neg    DWORD PTR [ecx]
  40dc90:	cld    
  40dc91:	mov    ebp,0x8c723bd2
  40dc96:	stc    
  40dc97:	cmp    BYTE PTR [ebp-0x41dcef6c],0x2c
  40dc9e:	dec    ebx
  40dc9f:	mov    WORD PTR [edx],ss
  40dca1:	cwde   
  40dca2:	dec    edi
  40dca3:	mov    BYTE PTR [ecx-0x4c91b6d3],ch
  40dca9:	sbb    eax,DWORD PTR [ecx]
  40dcab:	retw   0x16be
  40dcaf:	test   al,0x77
  40dcb1:	jle    0x40dc4b
  40dcb3:	clc    
  40dcb4:	cmp    al,0xc7
  40dcb6:	jmp    0x40dc9a
  40dcb8:	inc    eax
  40dcb9:	out    0x34,eax
  40dcbb:	or     DWORD PTR ds:0xa8a2c210,edx
  40dcc1:	in     eax,0x5d
  40dcc3:	or     ebp,ecx
  40dcc5:	sti    
  40dcc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc7:	call   0xb90c:0x4018beb5
  40dcce:	cdq    
  40dccf:	push   edi
  40dcd0:	stos   BYTE PTR es:[edi],al
  40dcd1:	xor    ebx,eax
  40dcd3:	mov    esi,0xe790fe22
  40dcd8:	leave  
  40dcd9:	repz (bad) 
  40dcdc:	bound  ebp,QWORD PTR [edx-0x48d57778]
  40dce2:	idiv   ah
  40dce4:	gs scas eax,DWORD PTR es:[edi]
  40dce6:	jbe    0x40dd63
  40dce8:	out    0x48,al
  40dcea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dceb:	idiv   BYTE PTR [ebx-0xc]
  40dcee:	dec    esp
  40dcef:	push   edx
  40dcf0:	imul   ebp,DWORD PTR [edx-0x67382f8c],0x71db582c
  40dcfa:	dec    ebx
  40dcfb:	sbb    DWORD PTR [edi],0x5
  40dcfe:	adc    eax,0x8f520357
  40dd03:	jmp    0x40dd6a
  40dd05:	loope  0x40dca9
  40dd07:	mov    bh,0xc5
  40dd09:	out    0xa0,al
  40dd0b:	push   ds
  40dd0c:	pop    ebx
  40dd0d:	(bad)  
  40dd0e:	jmp    0x8ffd889d
  40dd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd14:	sahf   
  40dd15:	cmp    al,0xb
  40dd17:	xor    eax,0x3fe76ed4
  40dd1c:	mov    ds:0x1db91ab6,eax
  40dd21:	outs   dx,BYTE PTR ds:[esi]
  40dd22:	sti    
  40dd23:	xchg   ebp,eax
  40dd24:	test   DWORD PTR [edx+0x28],0x6a7026d5
  40dd2b:	mov    bl,0x39
  40dd2d:	adc    BYTE PTR [eax-0x1],dh
  40dd30:	xor    DWORD PTR [ebx+0x1f],0xacfe03fe
  40dd37:	cdq    
  40dd38:	cs in  eax,0xfe
  40dd3b:	rcl    BYTE PTR [ebx+ebx*8+0x38],1
  40dd3f:	sti    
  40dd40:	retf   
  40dd41:	retf   0xb5d1
  40dd44:	sub    bh,cl
  40dd46:	enter  0x9c60,0x4c
  40dd4a:	or     al,0x59
  40dd4c:	mov    dh,0x79
  40dd4e:	out    dx,al
  40dd4f:	lahf   
  40dd50:	pop    ss
  40dd51:	es into 
  40dd53:	pop    es
  40dd54:	jge    0x40dd4e
  40dd56:	fld    DWORD PTR [ebp-0x4]
  40dd59:	dec    ecx
  40dd5a:	jae    0x40dd65
  40dd5c:	sbb    edi,edi
  40dd5e:	inc    edi
  40dd5f:	je     0x40dd2f
  40dd61:	adc    DWORD PTR [edx-0x1235054],ecx
  40dd67:	and    bl,BYTE PTR [ebx+0x773aba5f]
  40dd6d:	test   al,0x55
  40dd6f:	gs fcomip st,st(5)
  40dd72:	dec    eax
  40dd73:	push   ebp
  40dd74:	adc    eax,0x55d46b4e
  40dd79:	in     eax,dx
  40dd7a:	nop
  40dd7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7c:	rol    BYTE PTR [edx],0xa6
  40dd7f:	loopne 0x40ddfe
  40dd81:	xchg   esp,eax
  40dd82:	fs mov ecx,ds
  40dd85:	adc    al,0x20
  40dd87:	jp     0x40dd7f
  40dd89:	sahf   
  40dd8a:	add    DWORD PTR [edi+0x62a667d9],edi
  40dd90:	adc    edi,DWORD PTR cs:[ecx]
  40dd93:	mov    ds:0xe185edff,eax
  40dd98:	mov    eax,ds:0xefcd9be4
  40dd9d:	cmp    dl,dh
  40dd9f:	loopne 0x40de0b
  40dda1:	mov    DWORD PTR [ebp-0x70a82454],edx
  40dda7:	dec    ebp
  40dda8:	and    BYTE PTR [esi],ah
  40ddaa:	mov    DWORD PTR [ebx+0x19a8961],esi
  40ddb0:	pop    ecx
  40ddb1:	pop    edx
  40ddb2:	retf   
  40ddb3:	out    dx,eax
  40ddb4:	jmp    0x5ca2:0x761f1071
  40ddbb:	jne    0x40dded
  40ddbd:	xchg   ebp,eax
  40ddbe:	iret   
  40ddbf:	nop
  40ddc0:	fmul   DWORD PTR [ebp+eiz*8+0x23]
  40ddc4:	pop    ebx
  40ddc5:	mov    eax,0x9d192158
  40ddca:	cvtpi2ps xmm4,QWORD PTR [eax+0xf]
  40ddce:	adc    BYTE PTR [esp+eiz*2-0x3bf65a49],dl
  40ddd5:	jne    0x40dd8e
  40ddd7:	(bad)  
  40ddd8:	push   ebp
  40ddd9:	xor    eax,0xc8f41601
  40ddde:	rcr    DWORD PTR [ebp+0x76],0xf4
  40dde2:	adc    eax,0x384a9b02
  40dde7:	jno    0x40de35
  40dde9:	fisttp QWORD PTR [ebx]
  40ddeb:	or     al,0x7c
  40dded:	cmp    eax,0xb932cacb
  40ddf2:	retf   
  40ddf3:	das    
  40ddf4:	push   eax
  40ddf5:	xlat   BYTE PTR ds:[ebx]
  40ddf6:	cmp    edx,DWORD PTR [ecx-0xadd0094]
  40ddfc:	jno    0x40ddec
  40ddfe:	std    
  40ddff:	sbb    al,0xf
  40de01:	cwde   
  40de02:	pop    ds
  40de03:	ror    cl,0x8b
  40de06:	add    ch,ah
  40de08:	ds sbb eax,0x89a047c3
  40de0e:	jns    0x40ddd7
  40de10:	cmp    eax,0x554f8cac
  40de15:	sbb    al,0x97
  40de17:	cmp    al,0xf5
  40de19:	call   0x6316:0x7640fb16
  40de20:	shl    DWORD PTR [edx+edi*1-0x74b6d54e],cl
  40de27:	daa    
  40de28:	sahf   
  40de29:	test   eax,0x6303ad0d
  40de2e:	jno    0x40de8f
  40de30:	jmp    0x3cf59a1e
  40de35:	imul   esi,DWORD PTR [esp+edi*2-0x6a],0xe5ff0c2
  40de3d:	scas   eax,DWORD PTR es:[edi]
  40de3e:	mov    ds:0x76f8f60,al
  40de43:	xor    eax,DWORD PTR [esp+ebp*8-0xef81712]
  40de4a:	xor    BYTE PTR [edx],al
  40de4c:	test   eax,0x40bb196a
  40de51:	retf   0x2e13
  40de54:	(bad)  
  40de55:	enter  0x653f,0xd8
  40de59:	sub    al,0x0
  40de5b:	dec    ebp
  40de5c:	jne    0x40de54
  40de5e:	jno    0x40dec9
  40de60:	mov    gs,WORD PTR [ecx]
  40de62:	in     eax,dx
  40de63:	xchg   dh,al
  40de65:	adc    ecx,DWORD PTR [ebp-0x60cd5eea]
  40de6b:	mov    ecx,DWORD PTR [ecx]
  40de6d:	std    
  40de6e:	es jo  0x40de85
  40de71:	sub    al,0x81
  40de73:	mov    dl,0x82
  40de75:	fcmovu st,st(2)
  40de77:	ret    0xd8ae
  40de7a:	outs   dx,DWORD PTR ds:[esi]
  40de7b:	ins    BYTE PTR es:[edi],dx
  40de7c:	pop    es
  40de7d:	pop    edx
  40de7e:	into   
  40de7f:	xchg   edi,eax
  40de80:	aam    0x3d
  40de82:	jnp    0x40de82
  40de84:	mov    ch,0x2d
  40de86:	stos   DWORD PTR es:[edi],eax
  40de87:	ror    DWORD PTR [ecx],0x9c
  40de8a:	push   esp
  40de8b:	xor    BYTE PTR [ebp+0x6e],bh
  40de8e:	outs   dx,BYTE PTR ds:[esi]
  40de8f:	xchg   esi,eax
  40de90:	ja     0x40dec1
  40de92:	mov    bl,0x9f
  40de94:	lods   eax,DWORD PTR ds:[esi]
  40de95:	(bad)  
  40de96:	adc    dl,bl
  40de98:	out    dx,al
  40de99:	mov    esi,0x266427bf
  40de9e:	adc    cl,0x5e
  40dea1:	cmp    BYTE PTR [esi+esi*2+0x99161b9],cl
  40dea8:	push   ebp
  40dea9:	mov    esi,DWORD PTR [ebx+0x6f]
  40deac:	std    
  40dead:	cmp    al,0xd6
  40deaf:	retf   
  40deb0:	mov    dl,0x69
  40deb2:	scas   al,BYTE PTR es:[edi]
  40deb3:	push   ebx
  40deb4:	adc    DWORD PTR [esi-0x7f],ebp
  40deb7:	mov    al,0xd2
  40deb9:	mov    ch,0x29
  40debb:	data16 in al,dx
  40debd:	jp     0x40de60
  40debf:	int    0x9a
  40dec1:	int    0xd
  40dec3:	retf   0x79be
  40dec6:	mov    al,ds:0xa7a6257
  40decb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40decc:	fs push ecx
  40dece:	dec    ecx
  40decf:	xor    esp,DWORD PTR [esi-0x3bd231c7]
  40ded5:	dec    esi
  40ded6:	outs   dx,BYTE PTR ds:[esi]
  40ded7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded8:	adc    BYTE PTR [edi],dl
  40deda:	aad    0x8e
  40dedc:	jbe    0x40dee5
  40dede:	cmp    DWORD PTR gs:[edx+ebx*4+0x5c9bd46e],esp
  40dee6:	imul   esp,esi,0x7175cf9b
  40deec:	xchg   edx,eax
  40deed:	xor    eax,0xec4389a1
  40def2:	repz push ebp
  40def4:	ins    BYTE PTR es:[edi],dx
  40def5:	pop    esi
  40def6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def7:	ss (bad) 
  40def9:	adc    bh,dl
  40defb:	cs test al,0x28
  40defe:	inc    ebx
  40deff:	cli    
  40df00:	xor    edx,DWORD PTR [ebx+0x7a]
  40df03:	inc    ebp
  40df04:	and    dl,BYTE PTR [ebp+edi*4-0x5f]
  40df08:	pusha  
  40df09:	test   ch,dl
  40df0b:	fsubr  QWORD PTR [edi]
  40df0d:	pusha  
  40df0e:	jo     0x40dea6
  40df10:	clc    
  40df11:	dec    ebp
  40df12:	pop    esi
  40df13:	xchg   esp,eax
  40df14:	out    0xe3,al
  40df16:	(bad)  
  40df17:	sub    eax,0x6e295440
  40df1c:	retf   
  40df1d:	mov    dh,0xcb
  40df1f:	(bad)  [ecx]
  40df21:	sar    DWORD PTR [ecx],cl
  40df23:	in     eax,0xa6
  40df25:	sbb    ebx,DWORD PTR [edi]
  40df27:	arpl   WORD PTR [eax+0x7a7111b5],cx
  40df2d:	and    eax,0x34a337d3
  40df32:	outs   dx,DWORD PTR ds:[esi]
  40df33:	sub    DWORD PTR [eax+edx*8+0x315980f0],ebp
  40df3a:	pop    edx
  40df3b:	out    0x98,al
  40df3d:	cs inc esp
  40df3f:	mov    al,0xf5
  40df41:	outs   dx,BYTE PTR ds:[esi]
  40df42:	sub    DWORD PTR [ebp-0x51],ecx
  40df45:	add    eax,0xca7f9e76
  40df4a:	fldcw  WORD PTR [ecx]
  40df4c:	call   0x84aae327
  40df51:	(bad)  
  40df52:	cwde   
  40df53:	sbb    BYTE PTR [edx],ah
  40df55:	test   DWORD PTR [esi+0x21],ebx
  40df58:	ror    DWORD PTR [eax-0x10],cl
  40df5b:	xchg   esi,eax
  40df5c:	sbb    DWORD PTR [ecx+eax*8-0x80],ecx
  40df60:	jno    0x40dfa4
  40df62:	int3   
  40df63:	shr    BYTE PTR [ecx+0x24],cl
  40df66:	push   ebp
  40df67:	xchg   esp,eax
  40df68:	out    dx,al
  40df69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df6a:	cmp    dl,0x95
  40df6d:	jns    0x40df74
  40df6f:	test   DWORD PTR [ebx],esp
  40df71:	fdiv   QWORD PTR [edx+0x7b]
  40df74:	aam    0x53
  40df76:	neg    bh
  40df78:	add    esi,DWORD PTR [ecx-0x68c2cd82]
  40df7e:	pop    esp
  40df7f:	mov    ebx,0x8c4e7c58
  40df84:	inc    esp
  40df85:	xchg   ecx,eax
  40df86:	xlat   BYTE PTR ds:[ebx]
  40df87:	sub    eax,0x6699735a
  40df8c:	adc    esi,DWORD PTR [ecx+0x46]
  40df8f:	shr    DWORD PTR [edx-0x18210fd6],cl
  40df95:	fistp  WORD PTR [ecx+0x6bd5d5ea]
  40df9b:	iret   
  40df9c:	cmp    ch,ah
  40df9e:	jno    0x40dfdb
  40dfa0:	fdivrp st(0),st
  40dfa2:	sub    bh,ch
  40dfa4:	mov    bl,al
  40dfa6:	add    bh,BYTE PTR [esi-0x57]
  40dfa9:	arpl   bp,di
  40dfab:	ret    
  40dfac:	aas    
  40dfad:	fdiv   st(3),st
  40dfaf:	push   edx
  40dfb0:	into   
  40dfb1:	mov    ds:0x5f8f0e37,eax
  40dfb6:	and    al,0x67
  40dfb8:	inc    ebp
  40dfb9:	sbb    eax,0xc4c172be
  40dfbe:	mov    eax,ds:0x61a421ef
  40dfc3:	fild   WORD PTR [ecx]
  40dfc5:	pop    ebp
  40dfc6:	cmp    ah,BYTE PTR [ebx+0x5f]
  40dfc9:	push   edi
  40dfca:	sub    BYTE PTR [esp+eiz*4-0x30],ah
  40dfce:	xchg   edi,eax
  40dfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfd0:	jo     0x40dfc8
  40dfd2:	pusha  
  40dfd3:	mov    ds:0x1e3c51b,eax
  40dfd8:	mov    bl,0x75
  40dfda:	mov    bl,0xdf
  40dfdc:	popf   
  40dfdd:	mov    ebx,0x56582de3
  40dfe2:	xchg   BYTE PTR [edx+0x446b55c8],bl
  40dfe8:	mov    ch,0xa1
  40dfea:	mov    ah,0xaa
  40dfec:	idiv   BYTE PTR [ebx-0x17be17e7]
  40dff2:	pop    ss
  40dff3:	xchg   esp,eax
  40dff4:	mov    bl,0x89
  40dff6:	in     al,dx
  40dff7:	or     DWORD PTR [eax+0x702e6461],edx
  40dffd:	cli    
  40dffe:	lock push 0xffffffe9
  40e001:	call   0xaa72:0x9196db7f
  40e008:	push   ss
  40e009:	or     DWORD PTR ds:0x4f849483,ebx
  40e00f:	and    al,0xa1
  40e011:	dec    ecx
  40e012:	and    eax,0x1620bd79
  40e017:	rcr    DWORD PTR [esi+edx*8-0x3b],cl
  40e01b:	push   edi
  40e01c:	gs out 0xd8,eax
  40e01f:	sbb    BYTE PTR [eax-0x2],dl
  40e022:	xchg   esp,eax
  40e023:	mov    DWORD PTR [ecx-0x2e],esi
  40e026:	scas   eax,DWORD PTR es:[edi]
  40e027:	fimul  WORD PTR [eax]
  40e029:	lock bound edx,QWORD PTR [edx+esi*2-0x5]
  40e02e:	inc    ebx
  40e02f:	aaa    
  40e030:	add    ah,al
  40e032:	or     al,0xc
  40e034:	adc    eax,0xee6ec5b1
  40e039:	jecxz  0x40e08f
  40e03b:	and    ah,bl
  40e03d:	dec    esp
  40e03e:	pop    es
  40e03f:	fcmovnbe st,st(1)
  40e041:	addr16 ret 0x5836
  40e045:	aad    0x30
  40e047:	lea    esi,[eax-0x5b4e3145]
  40e04d:	dec    esp
  40e04e:	push   cs
  40e04f:	bound  ecx,QWORD PTR [eax+0x2fd1d459]
  40e055:	pushf  
  40e056:	call   0x9906:0x6837ade2
  40e05d:	ins    DWORD PTR es:[edi],dx
  40e05e:	jo     0x40e036
  40e060:	mov    es:0x48d02463,eax
  40e066:	jmp    0xd93f:0xf3f68c78
  40e06d:	mov    ah,0xb2
  40e06f:	xchg   edi,eax
  40e070:	cmp    eax,0xeae7fe37
  40e075:	dec    eax
  40e076:	loop   0x40dffd
  40e078:	jb     0x40e0db
  40e07a:	mov    fs,WORD PTR [ebx+0x17f7e897]
  40e080:	mov    ebx,0x3bb03635
  40e085:	push   ebx
  40e086:	sub    edx,DWORD PTR ds:0xea4686c3
  40e08c:	xor    eax,0xf52caa29
  40e091:	xlat   BYTE PTR ds:[ebx]
  40e092:	adc    BYTE PTR [ebp-0x6a],0x2f
  40e096:	mov    eax,ds:0xbe033310
  40e09b:	aad    0xdf
  40e09d:	mov    dh,0x1
  40e09f:	lea    esp,[edi]
  40e0a1:	outs   dx,DWORD PTR ds:[esi]
  40e0a2:	aaa    
  40e0a3:	mov    edx,0x76e13844
  40e0a8:	cmp    BYTE PTR [esi-0x7a],bl
  40e0ab:	xchg   esi,eax
  40e0ac:	mov    edi,DWORD PTR [edx+0xe682afb]
  40e0b2:	cmovne ecx,DWORD PTR [edx]
  40e0b5:	inc    edx
  40e0b6:	stos   BYTE PTR es:[edi],al
  40e0b7:	cmp    ch,BYTE PTR [ebp-0x7bc78e5c]
  40e0bd:	mov    WORD PTR [edx-0x4c],cs
  40e0c0:	ins    DWORD PTR es:[edi],dx
  40e0c1:	jmp    0xbca5:0x4f5aedd9
  40e0c8:	or     BYTE PTR es:[eax+0x18b6d162],bl
  40e0cf:	mov    esp,0x7835f295
  40e0d4:	xor    DWORD PTR [ebp+0x3f],0xffffffda
  40e0d8:	fs lods eax,DWORD PTR ds:[esi]
  40e0db:	es add al,0xd6
  40e0de:	push   ebx
  40e0df:	aas    
  40e0e0:	xchg   ebp,eax
  40e0e1:	cs in  eax,dx
  40e0e3:	or     al,0x72
  40e0e5:	mov    DWORD PTR [edx-0x20],ebp
  40e0e8:	into   
  40e0e9:	cld    
  40e0ea:	scas   al,BYTE PTR es:[edi]
  40e0eb:	dec    eax
  40e0ec:	aaa    
  40e0ed:	shr    DWORD PTR [edi-0x3c],0x25
  40e0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f2:	gs pop ss
  40e0f4:	int    0x93
  40e0f6:	call   DWORD PTR ds:0x64ec1bd5
  40e0fc:	mov    esp,0xd0d7991d
  40e101:	jbe    0x40e0c7
  40e103:	push   ebp
  40e104:	(bad)  
  40e105:	lds    ebx,FWORD PTR [eax+0x6e]
  40e108:	xchg   esp,eax
  40e109:	pop    edx
  40e10a:	call   0xff495fff
  40e10f:	jl     0x40e129
  40e111:	jnp    0x40e0b3
  40e113:	in     al,dx
  40e114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e115:	std    
  40e116:	add    ebp,0xffffffe5
  40e119:	jno    0x40e171
  40e11b:	cmp    DWORD PTR ds:0x22ef65db,0xb3ec3031
  40e125:	aas    
  40e126:	mul    BYTE PTR [esi+ecx*8]
  40e129:	shl    DWORD PTR [ebx-0x32f74118],cl
  40e12f:	nop
  40e130:	inc    esi
  40e131:	icebp  
  40e132:	iret   
  40e133:	lods   al,BYTE PTR ds:[esi]
  40e134:	xor    DWORD PTR [eax-0x4036422],ebx
  40e13a:	fidivr DWORD PTR [ebx+eax*8+0x262862e0]
  40e141:	cmp    DWORD PTR [eax],esi
  40e143:	outs   dx,DWORD PTR ds:[esi]
  40e144:	mov    bh,0xdb
  40e146:	pop    edi
  40e147:	cs in  eax,dx
  40e149:	outs   dx,DWORD PTR ds:[esi]
  40e14a:	xchg   ebx,eax
  40e14b:	cmc    
  40e14c:	inc    ebx
  40e14d:	inc    esp
  40e14e:	or     al,0xfd
  40e150:	out    0x61,eax
  40e152:	push   cs
  40e153:	dec    edi
  40e154:	xchg   DWORD PTR [eax],ebp
  40e156:	pop    es
  40e157:	ror    DWORD PTR ds:0xd070017,0x1f
  40e15e:	add    DWORD PTR [ebx-0x26],esi
  40e161:	(bad)  
  40e162:	cmp    DWORD PTR [ecx+0x67697747],ebp
  40e168:	mov    bh,0xb1
  40e16a:	jae    0x40e1b9
  40e16c:	or     eax,0xd9c16c26
  40e171:	or     cl,bh
  40e173:	pushf  
  40e174:	jl     0x40e113
  40e176:	out    0xc3,al
  40e178:	cwde   
  40e179:	and    bl,BYTE PTR [edi-0x60]
  40e17c:	shl    DWORD PTR [ebp+0x47327978],0x2f
  40e183:	cmp    edx,edx
  40e185:	push   edi
  40e186:	xchg   ah,dh
  40e188:	mov    dl,0x25
  40e18a:	stc    
  40e18b:	(bad)  
  40e18c:	dec    edi
  40e18d:	mov    ebx,0x6ab4d9f9
  40e192:	dec    ebx
  40e193:	xchg   ebx,eax
  40e194:	jle    0x40e212
  40e196:	xchg   ecx,eax
  40e197:	xchg   edi,eax
  40e198:	fwait
  40e199:	(bad)  
  40e19a:	cs push esi
  40e19c:	jge    0x40e124
  40e19e:	and    ecx,ecx
  40e1a0:	pop    ebp
  40e1a1:	xor    DWORD PTR [ebx],esp
  40e1a3:	stc    
  40e1a4:	jno    0x40e1f9
  40e1a6:	clc    
  40e1a7:	jne    0x40e213
  40e1a9:	xor    eax,0x83940ffa
  40e1ae:	jp     0x40e209
  40e1b0:	mov    edi,0x82fb6d03
  40e1b5:	clc    
  40e1b6:	or     BYTE PTR ds:0xe1e7c0a8,dh
  40e1bc:	call   0xbec85921
  40e1c1:	clc    
  40e1c2:	popf   
  40e1c3:	push   edx
  40e1c4:	test   DWORD PTR [edi-0x1955ec2d],esp
  40e1ca:	sub    DWORD PTR [ebx-0x7bb0f246],edx
  40e1d0:	pop    eax
  40e1d1:	cmp    DWORD PTR [eax+0x4d3a9040],0x5ada300b
  40e1db:	mov    DWORD PTR [eax-0x2c],esi
  40e1de:	sbb    DWORD PTR [edx+eax*1-0x40],esi
  40e1e2:	adc    DWORD PTR [edi],ebx
  40e1e4:	in     eax,dx
  40e1e5:	in     al,0xab
  40e1e7:	inc    eax
  40e1e8:	test   al,ch
  40e1ea:	cld    
  40e1eb:	sub    al,0x5f
  40e1ed:	or     al,cl
  40e1ef:	pop    edx
  40e1f0:	test   DWORD PTR [edi],esi
  40e1f2:	out    dx,al
  40e1f3:	fs sub edi,esp
  40e1f6:	aas    
  40e1f7:	(bad)  
  40e1f8:	xchg   ebx,eax
  40e1f9:	push   ecx
  40e1fa:	fcmovnb st,st(1)
  40e1fc:	outs   dx,DWORD PTR ds:[esi]
  40e1fd:	es jp  0x40e222
  40e200:	or     eax,DWORD PTR [esi]
  40e202:	jmp    0xc7ac:0xb7c9e2b9
  40e209:	and    BYTE PTR [esi+eax*1],0xa7
  40e20d:	adc    dh,BYTE PTR [esi-0x49]
  40e210:	test   DWORD PTR [edi+0x4f],ecx
  40e213:	pop    es
  40e214:	xchg   esi,eax
  40e215:	ror    BYTE PTR [edx+0x1a],0xbc
  40e219:	scas   al,BYTE PTR es:[edi]
  40e21a:	xchg   esp,eax
  40e21b:	cmc    
  40e21c:	sub    eax,0xa95a9e54
  40e221:	loopne 0x40e234
  40e223:	xchg   ecx,eax
  40e224:	mov    edx,0xdd07170c
  40e229:	inc    edx
  40e22a:	and    DWORD PTR [ebx-0x4cdfbe90],edi
  40e230:	add    DWORD PTR [esi],esi
  40e232:	sub    DWORD PTR [edi+0xc],ebp
  40e235:	cmp    ah,BYTE PTR [edi]
  40e237:	ds add ecx,0xd563cc60
  40e23e:	lds    eax,FWORD PTR [ebp-0xe]
  40e241:	mov    dl,0x4a
  40e243:	enter  0xed83,0x30
  40e247:	sbb    al,0xa8
  40e249:	add    ecx,DWORD PTR [edi+0x43]
  40e24c:	and    DWORD PTR [ecx+0x7153493f],edi
  40e252:	shl    eax,1
  40e254:	int    0xae
  40e256:	jmp    0x40e297
  40e258:	popf   
  40e259:	pusha  
  40e25a:	call   0x423f9c1d
  40e25f:	out    dx,al
  40e260:	mov    ah,0xaa
  40e262:	js     0x40e29c
  40e264:	out    0xbf,eax
  40e266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e267:	push   edi
  40e268:	test   al,0xb4
  40e26a:	dec    edx
  40e26b:	rcr    DWORD PTR [eax-0x6d9f3cf3],0x1f
  40e272:	sub    DWORD PTR [ebp-0x11],0xffffffc0
  40e276:	loope  0x40e2a4
  40e278:	clc    
  40e279:	and    DWORD PTR [eax-0x36],ebp
  40e27c:	jbe    0x40e2fc
  40e27e:	and    BYTE PTR ds:0xa4b8e57e,dh
  40e284:	call   0xed987403
  40e289:	(bad)  
  40e28a:	pop    ecx
  40e28b:	(bad)  
  40e28c:	mov    ds:0x81a6e8f8,al
  40e291:	fld    QWORD PTR ds:0xfefef9ca
  40e297:	dec    esi
  40e298:	mov    edi,0xcb641ed7
  40e29d:	cmp    eax,ebx
  40e29f:	test   BYTE PTR [esi],cl
  40e2a1:	push   ss
  40e2a2:	or     al,0x2d
  40e2a4:	ss push es
  40e2a6:	and    eax,0x6e738425
  40e2ab:	hlt    
  40e2ac:	or     al,0x5e
  40e2ae:	rol    DWORD PTR [edx-0x7f92ec29],1
  40e2b4:	push   edi
  40e2b5:	repz scas eax,DWORD PTR es:[edi]
  40e2b7:	sti    
  40e2b8:	loop   0x40e333
  40e2ba:	packssdw mm4,QWORD PTR [edi-0x7d]
  40e2be:	repz sub edi,esp
  40e2c1:	clc    
  40e2c2:	jns    0x40e28c
  40e2c4:	in     al,dx
  40e2c5:	and    DWORD PTR [edx+0x2fe1dc4a],esi
  40e2cb:	outs   dx,DWORD PTR cs:[esi]
  40e2cd:	dec    eax
  40e2ce:	pop    ss
  40e2cf:	inc    BYTE PTR [ebp+edi*1+0x19a7f8ed]
  40e2d6:	sbb    BYTE PTR [ebx],ch
  40e2d8:	push   esi
  40e2d9:	xchg   DWORD PTR [edx+0x1b],ebp
  40e2dc:	int    0xef
  40e2de:	push   es
  40e2df:	xor    al,0x29
  40e2e1:	xor    eax,0xd1132006
  40e2e6:	leave  
  40e2e7:	std    
  40e2e8:	test   DWORD PTR [ebp+0xa1a5115],0x87f31c62
  40e2f2:	in     eax,0x36
  40e2f4:	fwait
  40e2f5:	into   
  40e2f6:	call   FWORD PTR [ebp+0x57]
  40e2f9:	cmc    
  40e2fa:	add    esi,DWORD PTR [esi+0x78ed5ca]
  40e300:	(bad)  [edi-0x67]
  40e303:	jo     0x40e297
  40e305:	fstp   QWORD PTR [esp]
  40e308:	nop
  40e309:	mov    edx,0x4824e97
  40e30e:	mov    bl,0x9
  40e310:	scas   eax,DWORD PTR es:[edi]
  40e311:	and    edx,DWORD PTR [edx-0x563d580a]
  40e317:	dec    ebx
  40e318:	stc    
  40e319:	jns    0x40e2fe
  40e31b:	enter  0x209a,0x36
  40e31f:	jmp    0x53ca:0xdce7285e
  40e326:	xchg   esi,eax
  40e327:	call   0x5ad58096
  40e32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e32d:	(bad)  
  40e32f:	push   0xc8085d87
  40e334:	aad    0x7a
  40e336:	add    al,0x0
  40e338:	mov    eax,0x65cc4e7c
  40e33d:	jns    0x40e396
  40e33f:	and    eax,0xa03b7157
  40e344:	inc    edi
  40e345:	(bad)  
  40e346:	fcom   DWORD PTR [esi-0x2]
  40e349:	jl     0x40e32b
  40e34b:	adc    edx,DWORD PTR [bx+di]
  40e34e:	loope  0x40e2e5
  40e350:	bnd ss jmp 0x40e2fc
  40e354:	fs stos BYTE PTR es:[edi],al
  40e356:	stos   BYTE PTR es:[edi],al
  40e357:	js     0x40e3a2
  40e359:	sbb    dh,BYTE PTR [edi*8-0x5ffeb5c3]
  40e360:	inc    ebp
  40e361:	jmp    0x39fccae9
  40e366:	test   DWORD PTR [edx+ebx*4+0xa],ebx
  40e36a:	ins    BYTE PTR es:[edi],dx
  40e36b:	mov    eax,ds:0x1cfbf044
  40e370:	mov    ebp,0x31c9c615
  40e375:	xor    eax,0x1ae074dc
  40e37a:	test   eax,0x877903a4
  40e37f:	adc    eax,0x50f0f513
  40e384:	jle    0x40e376
  40e386:	in     eax,dx
  40e387:	out    dx,al
  40e388:	fwait
  40e389:	loop   0x40e32c
  40e38b:	scas   al,BYTE PTR es:[edi]
  40e38c:	and    eax,0xb4244844
  40e391:	pushf  
  40e392:	aaa    
  40e393:	cld    
  40e394:	sub    eax,0x50169815
  40e399:	dec    ecx
  40e39a:	pop    esp
  40e39b:	mov    dh,0x6d
  40e39d:	add    eax,0xf6712690
  40e3a2:	cmc    
  40e3a3:	sub    eax,0xe29a4b33
  40e3a8:	cmp    ah,bl
  40e3aa:	push   ecx
  40e3ab:	push   0x5c
  40e3ad:	mov    edi,0x2910e8d5
  40e3b2:	pop    ebx
  40e3b3:	and    eax,0x7cb17c22
  40e3b8:	jl     0x40e3fb
  40e3ba:	dec    edx
  40e3bb:	aas    
  40e3bc:	dec    ebp
  40e3bd:	xchg   ecx,eax
  40e3be:	je     0x40e37a
  40e3c0:	inc    eax
  40e3c1:	iret   
  40e3c2:	pop    ecx
  40e3c3:	loope  0x40e350
  40e3c5:	rcr    esp,0xad
  40e3c8:	jno    0x40e36e
  40e3ca:	jecxz  0x40e354
  40e3cc:	sbb    al,0x3b
  40e3ce:	mov    edx,0xbd32d117
  40e3d3:	nop
  40e3d4:	sbb    eax,0x93115b3a
  40e3d9:	mov    BYTE PTR [esi+0x6b341cc],bl
  40e3df:	aas    
  40e3e0:	dec    ecx
  40e3e1:	loopne 0x40e3fc
  40e3e3:	xchg   ebp,eax
  40e3e4:	add    ebp,ecx
  40e3e6:	lds    ebx,FWORD PTR [ebx+0x30c9ec84]
  40e3ec:	adc    DWORD PTR ds:0xb7c90e64,0xdd23759c
  40e3f6:	aad    0x97
  40e3f8:	sbb    cl,BYTE PTR [ecx-0x5445c0ab]
  40e3fe:	sbb    ecx,ebp
  40e400:	(bad)
  40e404:	or     DWORD PTR [edi],ebp
  40e406:	mov    cl,0x7b
  40e408:	fcomp  QWORD PTR [ebx+0x69f0a36b]
  40e40e:	mov    ds:0x57807337,eax
  40e413:	fs sti 
  40e415:	push   0x97d7b86c
  40e41a:	sbb    eax,0x6fb6e972
  40e41f:	mov    cl,0xe0
  40e421:	sbb    DWORD PTR [ebx-0x77],ecx
  40e424:	call   0xad8b89
  40e429:	ficom  WORD PTR [esi+0x22682443]
  40e42f:	push   edx
  40e430:	mov    ch,0xe1
  40e432:	adc    al,0x90
  40e434:	push   edi
  40e435:	imul   edi,DWORD PTR [esi+0x38d74f0],0x27efe490
  40e43f:	inc    edi
  40e440:	dec    eax
  40e441:	mov    ah,0x21
  40e443:	(bad)
  40e447:	std    
  40e448:	mov    es,WORD PTR ds:0x4ad0762a
  40e44e:	mov    dh,0x62
  40e450:	test   eax,0x1eb0e781
  40e455:	sbb    DWORD PTR [esi+0x68c86aab],esi
  40e45b:	push   DWORD PTR [ecx]
  40e45d:	in     eax,dx
  40e45e:	push   0x1a
  40e460:	stos   BYTE PTR es:[edi],al
  40e461:	or     bl,bh
  40e463:	inc    ecx
  40e464:	daa    
  40e465:	iret   
  40e466:	rol    DWORD PTR [edx+0x3f2f7179],1
  40e46c:	sahf   
  40e46d:	xchg   ecx,eax
  40e46e:	mov    edx,0xa6e05d94
  40e473:	cmc    
  40e474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e475:	(bad)
  40e47a:	push   edx
  40e47b:	jmp    FWORD PTR [edi-0x12]
  40e47e:	outs   dx,DWORD PTR ds:[esi]
  40e47f:	pop    edi
  40e480:	xor    bh,BYTE PTR [ecx-0x4efa2008]
  40e486:	sub    cl,0x47
  40e489:	add    edi,ebp
  40e48b:	dec    edi
  40e48c:	jge    0x40e4ea
  40e48e:	xor    eax,0xda8d816f
  40e493:	push   ebx
  40e494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e495:	pop    esi
  40e496:	les    edi,FWORD PTR [edx-0x65cc5a1]
  40e49c:	mov    bl,al
  40e49e:	sbb    bl,ch
  40e4a0:	(bad)  
  40e4a1:	outs   dx,DWORD PTR ds:[esi]
  40e4a2:	jnp    0x40e49d
  40e4a4:	test   eax,0x2916bf19
  40e4a9:	repz adc eax,0x7ae6241b
  40e4af:	xchg   edi,eax
  40e4b0:	(bad)  
  40e4b1:	(bad)  [edi-0x6]
  40e4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b5:	inc    ebp
  40e4b6:	or     al,0x40
  40e4b8:	add    al,0xe5
  40e4ba:	pop    edx
  40e4bb:	dec    eax
  40e4bc:	loop   0x40e535
  40e4be:	cmp    al,0x69
  40e4c0:	xchg   ecx,eax
  40e4c1:	call   FWORD PTR [ebp-0x4]
  40e4c4:	sti    
  40e4c5:	fstp   QWORD PTR [esp+edi*2]
  40e4c8:	dec    ebx
  40e4c9:	push   ebx
  40e4ca:	inc    edi
  40e4cb:	mov    eax,0x68f7f804
  40e4d0:	adc    al,0x57
  40e4d2:	pusha  
  40e4d3:	push   ebp
  40e4d4:	mov    cl,0x19
  40e4d6:	mov    esi,0x7d6752eb
  40e4db:	dec    ebx
  40e4dc:	push   cs
  40e4dd:	add    ch,cl
  40e4df:	or     esp,DWORD PTR [eax]
  40e4e1:	mov    dh,0x10
  40e4e3:	xchg   BYTE PTR [edi+0x59b052b2],bh
  40e4e9:	xchg   esp,eax
  40e4ea:	iret   
  40e4eb:	call   0x30000587
  40e4f0:	sub    dl,BYTE PTR ds:0x337f95d4
  40e4f6:	cmp    BYTE PTR [esi+0x79e6e878],ah
  40e4fc:	sti    
  40e4fd:	sbb    esp,esi
  40e4ff:	sub    ebx,ebx
  40e501:	inc    ebx
  40e502:	call   FWORD PTR [eax]
  40e504:	test   DWORD PTR [edi],eax
  40e506:	(bad)  
  40e507:	outs   dx,DWORD PTR ds:[esi]
  40e508:	inc    edi
  40e509:	mov    edx,0x9b0198e1
  40e50e:	lea    edx,[ebx*8-0x5f2d8053]
  40e515:	lods   eax,DWORD PTR ds:[esi]
  40e516:	gs loopne 0x40e4be
  40e519:	ficomp DWORD PTR [ebp+0x26de6d25]
  40e51f:	adc    DWORD PTR [ebp-0x6f5ba76],0x10
  40e526:	ja     0x40e4b6
  40e528:	lods   eax,DWORD PTR ds:[esi]
  40e529:	test   eax,0xb97cdf1e
  40e52e:	scas   al,BYTE PTR es:[edi]
  40e52f:	adc    eax,0xc915ef86
  40e534:	push   ebp
  40e535:	mov    esp,0xb9f0f13
  40e53a:	mov    edx,0xe5e7be8b
  40e53f:	or     eax,0x8f9475e9
  40e544:	(bad)
  40e548:	push   ss
  40e549:	jb     0x40e55a
  40e54b:	and    DWORD PTR [ebx+0x5c],eax
  40e54e:	adc    edx,DWORD PTR [esp+eiz*2]
  40e551:	jmp    0x57c4:0xd548561
  40e558:	fcomip st,st(5)
  40e55a:	mov    edx,0x9ec01f1a
  40e55f:	dec    ecx
  40e560:	mov    eax,ds:0x9e9d652e
  40e565:	out    0xd,al
  40e567:	push   esp
  40e568:	imul   DWORD PTR [edi-0x717bb3f6]
  40e56e:	stos   BYTE PTR es:[edi],al
  40e56f:	xor    al,0x10
  40e571:	mov    eax,0x217073f8
  40e576:	pop    edi
  40e577:	jmp    DWORD PTR [esi-0xab1e56a]
  40e57d:	aaa    
  40e57e:	xchg   ebx,eax
  40e57f:	mov    bl,BYTE PTR [ebp+0x38]
  40e582:	mov    cs,WORD PTR [edi]
  40e584:	push   esp
  40e585:	ror    DWORD PTR [edx],0xee
  40e588:	es dec eax
  40e58a:	push   DWORD PTR ds:0x3ef75659
  40e590:	dec    edx
  40e591:	pop    edx
  40e592:	cmp    DWORD PTR [esi+0x77],esp
  40e595:	ins    BYTE PTR es:[edi],dx
  40e596:	xor    esi,esi
  40e598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e599:	adc    eax,0x310c063c
  40e59e:	push   ds
  40e59f:	push   eax
  40e5a0:	xor    DWORD PTR ds:0x9d65a04b,0x2632210f
  40e5aa:	out    dx,eax
  40e5ab:	aaa    
  40e5ac:	lods   eax,DWORD PTR ds:[esi]
  40e5ad:	sub    ebp,DWORD PTR [ebp-0x1a822b6]
  40e5b3:	lods   al,BYTE PTR ds:[esi]
  40e5b4:	inc    edx
  40e5b5:	jno    0x40e608
  40e5b7:	cs push ds
  40e5b9:	xor    dl,BYTE PTR [ebp-0x65e0fc81]
  40e5bf:	xchg   edx,eax
  40e5c0:	mov    esi,0xf5d00c97
  40e5c5:	mov    bh,0x3d
  40e5c7:	xor    ecx,DWORD PTR ds:0x6a19b231
  40e5cd:	or     eax,edx
  40e5cf:	ss jbe 0x40e591
  40e5d2:	mov    bl,0xb7
  40e5d4:	jge    0x40e5a0
  40e5d6:	ins    DWORD PTR es:[edi],dx
  40e5d7:	dec    eax
  40e5d8:	hlt    
  40e5d9:	jnp    0x40e5d0
  40e5db:	xor    ebp,edi
  40e5dd:	aas    
  40e5de:	je     0x40e5dc
  40e5e0:	jae    0x40e5af
  40e5e2:	ss mov dl,0x30
  40e5e5:	jns    0x40e57c
  40e5e7:	inc    ecx
  40e5e8:	sti    
  40e5e9:	cs sbb esi,eax
  40e5ec:	shl    DWORD PTR [edi+ecx*1+0x4a],0x62
  40e5f1:	push   es
  40e5f2:	or     ch,BYTE PTR [ecx]
  40e5f4:	mov    eax,0x37a18e6c
  40e5f9:	ror    esp,cl
  40e5fb:	lods   al,BYTE PTR ds:[esi]
  40e5fc:	pop    ebp
  40e5fd:	sti    
  40e5fe:	xchg   ebx,eax
  40e5ff:	push   cs
  40e600:	arpl   WORD PTR [edi],cx
  40e602:	xchg   DWORD PTR [esi],ecx
  40e604:	ror    BYTE PTR [eax-0x6b294613],cl
  40e60a:	and    ebx,eax
  40e60c:	inc    ebx
  40e60d:	xchg   edi,eax
  40e60e:	clc    
  40e60f:	mov    dl,0xf1
  40e611:	or     BYTE PTR [edi],0x48
  40e614:	es jbe 0x40e614
  40e617:	pop    esp
  40e618:	stos   BYTE PTR es:[edi],al
  40e619:	add    BYTE PTR [edx],dh
  40e61b:	ret    0xf3b1
  40e61e:	mov    ds:0x3702f718,al
  40e623:	mov    esi,0xc884c55d
  40e628:	or     al,0xc2
  40e62a:	mov    dh,0xfd
  40e62c:	push   esp
  40e62d:	xchg   ebp,eax
  40e62e:	add    al,0xea
  40e630:	data16 xlat BYTE PTR ds:[ebx]
  40e632:	addr16 jbe 0x40e5cd
  40e635:	aad    0x52
  40e637:	aad    0xb7
  40e639:	lahf   
  40e63a:	int3   
  40e63b:	adc    al,0xc3
  40e63d:	pop    edi
  40e63e:	or     BYTE PTR [eax],dl
  40e640:	outs   dx,DWORD PTR ds:[esi]
  40e641:	in     eax,0xbb
  40e643:	mov    ch,0x22
  40e645:	dec    esi
  40e646:	iret   
  40e647:	fld    TBYTE PTR [ecx]
  40e649:	ins    BYTE PTR es:[edi],dx
  40e64a:	xlat   BYTE PTR ds:[ebx]
  40e64b:	fnsave [ebx-0x69]
  40e64e:	fwait
  40e64f:	xor    DWORD PTR [edx],ebp
  40e651:	jbe    0x40e6d1
  40e653:	mov    esp,0x338050e
  40e658:	push   es
  40e659:	ror    DWORD PTR [eax-0x66f17af5],0x5b
  40e660:	adc    ch,cl
  40e662:	fist   DWORD PTR [edx]
  40e664:	shl    DWORD PTR [ebp-0x2f],1
  40e667:	push   edx
  40e668:	inc    eax
  40e669:	pop    es
  40e66a:	push   esp
  40e66b:	retf   0x4a68
  40e66e:	inc    edx
  40e66f:	adc    al,0x5e
  40e671:	mov    cl,0xa3
  40e673:	xor    eax,DWORD PTR [edi+0x53]
  40e676:	lahf   
  40e677:	fdivr  DWORD PTR [edx-0x72]
  40e67a:	mov    dl,0x37
  40e67c:	ins    BYTE PTR es:[edi],dx
  40e67d:	add    al,0x72
  40e67f:	xor    ecx,DWORD PTR [ebp+0x78da5d6e]
  40e685:	pusha  
  40e686:	(bad)  
  40e687:	(bad)  
  40e688:	adc    dh,cl
  40e68a:	xor    bl,BYTE PTR [edx+0x6c]
  40e68d:	bnd jnp 0x40e70a
  40e690:	push   ebp
  40e691:	jg     0x40e6fb
  40e693:	adc    ecx,DWORD PTR [ebp-0x2e]
  40e696:	neg    cl
  40e698:	mov    ds:0xe998177e,al
  40e69d:	dec    esp
  40e69e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e69f:	inc    ecx
  40e6a0:	sahf   
  40e6a1:	jnp    0x40e6d9
  40e6a3:	pop    esi
  40e6a4:	mov    dl,0x13
  40e6a6:	push   eax
  40e6a7:	mov    bh,0x6c
  40e6a9:	test   DWORD PTR [ecx*8-0x538e942f],ebp
  40e6b0:	mov    ah,0x26
  40e6b2:	sub    ch,bl
  40e6b4:	imul   edi,DWORD PTR [edi-0x78],0xe345e46d
  40e6bb:	mov    edi,0xcff83720
  40e6c0:	xor    BYTE PTR [edi-0x386f002],al
  40e6c6:	(bad)  
  40e6c7:	pop    esp
  40e6c9:	jns    0x40e708
  40e6cb:	and    dh,BYTE PTR [edx+0x47]
  40e6ce:	loope  0x40e6b5
  40e6d0:	repz sbb esp,DWORD PTR [ecx+0x58]
  40e6d4:	mov    eax,ecx
  40e6d6:	or     DWORD PTR [ebx],ebx
  40e6d8:	cwde   
  40e6d9:	repnz in al,dx
  40e6db:	mov    bh,BYTE PTR [esi+eiz*4+0x574f0cad]
  40e6e2:	ror    DWORD PTR [ebx-0x4a446432],cl
  40e6e8:	inc    esp
  40e6e9:	cmp    DWORD PTR [edi-0x27a57ab5],0x4aca36ae
  40e6f3:	addr16 in al,0x87
  40e6f6:	push   es
  40e6f7:	add    ch,al
  40e6f9:	test   al,0x27
  40e6fb:	pushf  
  40e6fc:	int3   
  40e6fd:	jle    0x40e6e4
  40e6ff:	mov    ch,0xa0
  40e701:	shl    DWORD PTR [eax-0x80],1
  40e704:	xor    eax,0x20f5dc01
  40e709:	sbb    cl,BYTE PTR [esi+0x57f54d9d]
  40e70f:	outs   dx,BYTE PTR ds:[esi]
  40e710:	sub    bh,BYTE PTR [eax+0x771d3d2e]
  40e716:	(bad)  
  40e717:	lahf   
  40e718:	jmp    FWORD PTR [edx]
  40e71a:	sub    WORD PTR ss:[edx+0x5b],dx
  40e71f:	sub    ebp,DWORD PTR [edx+ebp*2+0xf274767]
  40e726:	jp     0x40e6d8
  40e728:	pop    es
  40e729:	fldenv [edi]
  40e72b:	(bad)  
  40e72c:	sti    
  40e72d:	sub    bl,BYTE PTR [eax-0x4fd1d451]
  40e733:	mov    esi,0xd2487331
  40e738:	cmp    eax,edx
  40e73a:	adc    DWORD PTR [ecx+ebp*4-0x466f5358],0x1dbc05fd
  40e745:	test   al,0xd7
  40e747:	mov    al,0x2e
  40e749:	enter  0x5a4a,0x7b
  40e74d:	adc    cl,dl
  40e74f:	scas   al,BYTE PTR es:[edi]
  40e750:	push   0xffffffc2
  40e752:	add    dh,BYTE PTR [esi-0x7f]
  40e755:	mov    ah,0x84
  40e757:	xor    DWORD PTR es:[ecx-0x75da7872],0xc4fb137e
  40e762:	mov    BYTE PTR [esp+ecx*1-0x64747810],dl
  40e769:	pop    ds
  40e76a:	pop    edx
  40e76b:	xchg   BYTE PTR [esi+0x7c194a26],dl
  40e771:	lahf   
  40e772:	mov    ebp,0x18224d04
  40e777:	aaa    
  40e778:	jno    0x40e7b8
  40e77a:	cmp    BYTE PTR [edx-0x54],dh
  40e77d:	jb     0x40e786
  40e77f:	dec    ebx
  40e780:	rol    DWORD PTR [edi-0x60],cl
  40e783:	loop   0x40e7ca
  40e785:	lock dec ebp
  40e787:	es aas 
  40e789:	iret   
  40e78a:	cmp    eax,0x8822a6c4
  40e78f:	fldcw  WORD PTR ds:0xda123cd4
  40e795:	xchg   DWORD PTR [ebx-0x4],ecx
  40e798:	cs icebp 
  40e79a:	mov    ebp,0x756fc3e6
  40e79f:	mov    esi,0x428b993e
  40e7a4:	leave  
  40e7a5:	retf   0xb1ab
  40e7a8:	fwait
  40e7a9:	pop    edi
  40e7aa:	dec    edi
  40e7ab:	ins    DWORD PTR es:[edi],dx
  40e7ac:	pusha  
  40e7ad:	clc    
  40e7ae:	dec    eax
  40e7af:	or     dh,BYTE PTR [edx+0x6eab1c65]
  40e7b5:	je     0x40e7f2
  40e7b7:	es push ebx
  40e7b9:	push   ecx
  40e7ba:	retf   0xdd90
  40e7bd:	add    BYTE PTR [ebp+0x2],cl
  40e7c0:	lods   eax,DWORD PTR ds:[esi]
  40e7c1:	or     bh,BYTE PTR [esi-0x52f5694d]
  40e7c7:	jmp    0x40e80c
  40e7c9:	popa   
  40e7ca:	leave  
  40e7cb:	lds    ebx,FWORD PTR [esp+ebp*2]
  40e7ce:	std    
  40e7cf:	dec    ebp
  40e7d0:	inc    ebp
  40e7d1:	(bad)  
  40e7d2:	loopne 0x40e776
  40e7d4:	pop    ds
  40e7d5:	xor    eax,0xc7a3214f
  40e7da:	xor    BYTE PTR [ebx+0x482cf58b],cl
  40e7e0:	call   0x972c:0x451c8f09
  40e7e7:	lahf   
  40e7e8:	xor    ch,cl
  40e7ea:	dec    ebx
  40e7eb:	test   BYTE PTR [edx],ah
  40e7ed:	int3   
  40e7ee:	jmp    DWORD PTR [edi]
  40e7f0:	in     al,dx
  40e7f1:	fadd   st,st(0)
  40e7f4:	cmp    al,0x4a
  40e7f6:	in     al,0x4c
  40e7f8:	lods   eax,DWORD PTR ds:[esi]
  40e7f9:	cmp    bh,BYTE PTR [ecx+0x1024cabf]
  40e7ff:	mov    ch,0x5d
  40e801:	pop    ebx
  40e802:	push   esp
  40e803:	inc    esi
  40e804:	pop    esp
  40e805:	jno    0x40e84b
  40e807:	loop   0x40e7a6
  40e809:	adc    DWORD PTR [edx-0x7f],ebx
  40e80c:	xor    esp,DWORD PTR [eax+0x49]
  40e80f:	jecxz  0x40e843
  40e811:	test   BYTE PTR [esi+0x53a643c8],bh
  40e817:	test   al,0xdc
  40e819:	pop    ss
  40e81a:	addr16 in al,dx
  40e81c:	push   esp
  40e81d:	jno    0x40e896
  40e81f:	loop   0x40e812
  40e821:	adc    eax,0x179adb86
  40e826:	mov    eax,0x8ec01f59
  40e82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e82c:	loop   0x40e86e
  40e82e:	jg     0x40e807
  40e830:	jae    0x40e80f
  40e832:	iret   
  40e833:	mov    BYTE PTR [bx+si+0x4d],ch
  40e837:	ss and al,0x48
  40e83a:	jmp    0x23a4:0xcbbb6e3e
  40e841:	xchg   ebp,eax
  40e842:	les    edx,FWORD PTR [eax+0x758031ed]
  40e848:	jle    0x40e7e7
  40e84a:	or     al,0x5e
  40e84c:	sub    cl,BYTE PTR [ebx-0x18]
  40e84f:	test   BYTE PTR fs:[edi+0x70],ch
  40e853:	cwde   
  40e854:	retf   0x3c5a
  40e857:	xlat   BYTE PTR ds:[ebx]
  40e858:	pop    ss
  40e859:	inc    esi
  40e85a:	dec    esp
  40e85b:	aam    0x11
  40e85d:	jl     0x40e7f1
  40e85f:	(bad)  
  40e860:	cwde   
  40e861:	out    0x85,al
  40e863:	and    al,0x5b
  40e865:	xchg   ebx,eax
  40e866:	dec    esi
  40e867:	mov    DWORD PTR [eax+0x4a63401a],edi
  40e86d:	test   BYTE PTR [esi],dl
  40e86f:	repz jp 0x40e88a
  40e872:	fild   WORD PTR [ecx-0x70b9b85f]
  40e878:	pop    edx
  40e879:	mov    cl,0x5d
  40e87b:	push   ss
  40e87c:	push   ds
  40e87d:	push   edi
  40e87e:	jge    0x40e855
  40e880:	xchg   ecx,eax
  40e881:	xchg   DWORD PTR [ecx],eax
  40e883:	div    DWORD PTR ds:[edx+0xd]
  40e887:	pusha  
  40e888:	sbb    edx,DWORD PTR [edx]
  40e88a:	dec    edx
  40e88b:	push   0xffffffa0
  40e88d:	dec    esi
  40e88e:	ins    DWORD PTR es:[edi],dx
  40e88f:	out    0xed,eax
  40e891:	pop    edi
  40e892:	pusha  
  40e893:	pop    edx
  40e894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e895:	in     eax,dx
  40e896:	and    eax,0xcf04bc74
  40e89b:	xchg   edx,eax
  40e89c:	shl    cl,1
  40e89e:	sub    eax,0x1d9e856
  40e8a3:	mov    esi,DWORD PTR [ebx-0x2e601d52]
  40e8a9:	jmp    0x40e833
  40e8ab:	loope  0x40e927
  40e8ad:	ror    DWORD PTR [ecx],1
  40e8af:	sub    eax,0xaa62ef47
  40e8b4:	pop    esp
  40e8b5:	xchg   DWORD PTR [edx+0x3],ebx
  40e8b8:	mov    esp,0xcd68a100
  40e8bd:	scas   eax,DWORD PTR es:[edi]
  40e8be:	(bad)  
  40e8bf:	fmul   DWORD PTR [edx+0x78e5889d]
  40e8c5:	and    bh,BYTE PTR [eax+0x67fe017d]
  40e8cb:	mov    dh,0x1a
  40e8cd:	push   edx
  40e8ce:	adc    eax,0x99c4054b
  40e8d3:	cmp    DWORD PTR [edx+ebp*1],ebx
  40e8d6:	cmp    eax,0x10ca130c
  40e8db:	inc    esp
  40e8dc:	or     BYTE PTR [edi+ebp*2+0x2f],bl
  40e8e0:	inc    esi
  40e8e1:	mov    edx,0x3a1c588e
  40e8e6:	leave  
  40e8e7:	push   eax
  40e8e8:	adc    BYTE PTR [ebx+0x20],bh
  40e8eb:	jg     0x40e879
  40e8ed:	jg     0x40e91b
  40e8ef:	jecxz  0x40e88a
  40e8f1:	and    eax,0x8448b88e
  40e8f6:	mov    al,ds:0x843c735e
  40e8fb:	pop    ds
  40e8fc:	sbb    al,0x63
  40e8fe:	pusha  
  40e8ff:	mul    DWORD PTR [ecx+0x31]
  40e902:	add    al,BYTE PTR [esp+ecx*2-0x59a7d79c]
  40e909:	mov    eax,ds:0x4b261397
  40e90e:	sub    BYTE PTR [edx],al
  40e910:	sti    
  40e911:	mov    edi,0x42a97e2d
  40e916:	pop    esp
  40e917:	mov    dh,0xf9
  40e919:	jbe    0x40e8c1
  40e91b:	js     0x40e925
  40e91d:	xor    eax,0xf5f68772
  40e922:	mov    eax,DWORD PTR [esi+esi*1-0x517464b9]
  40e929:	rcl    DWORD PTR [eax],1
  40e92b:	and    DWORD PTR [ebp+0x22],0xffffffd4
  40e92f:	int3   
  40e930:	push   0xd3e2c024
  40e935:	pop    ebp
  40e936:	fs cmp al,0xcd
  40e939:	call   0xe998:0xaa582213
  40e940:	aas    
  40e941:	sbb    cl,dh
  40e943:	pop    ebx
  40e944:	(bad)  
  40e947:	outs   dx,BYTE PTR ds:[esi]
  40e948:	and    eax,0xa8b9160b
  40e94d:	sbb    eax,0x9895c641
  40e952:	adc    esp,eax
  40e954:	in     eax,dx
  40e955:	icebp  
  40e956:	adc    ah,dh
  40e958:	enter  0x25a3,0x2b
  40e95c:	dec    edi
  40e95d:	dec    eax
  40e95e:	push   0x92e97705
  40e963:	loope  0x40e910
  40e965:	xchg   ebp,eax
  40e966:	mov    WORD PTR [eax],fs
  40e968:	sbb    ah,BYTE PTR [ecx+0x0]
  40e96b:	arpl   WORD PTR [ecx-0x1e],di
  40e96e:	push   ecx
  40e96f:	mov    DWORD PTR [edx],ebx
  40e971:	call   0x181:0xa2384bc9
  40e978:	das    
  40e979:	(bad)  
  40e97b:	stos   BYTE PTR es:[edi],al
  40e97c:	jae    0x40e9c1
  40e97e:	test   BYTE PTR [ecx],0x4a
  40e981:	push   cs
  40e982:	mov    ch,0x2c
  40e984:	mov    eax,ds:0x2b083e49
  40e989:	push   es
  40e98a:	and    al,0x36
  40e98c:	ja     0x40e956
  40e98e:	rcr    dh,1
  40e990:	cmp    DWORD PTR [edx-0x2e],esi
  40e993:	(bad)  
  40e994:	mov    eax,DWORD PTR [edx+0x50]
  40e997:	xor    esp,DWORD PTR [ebp-0x4b]
  40e99a:	xor    eax,0x9b2318b9
  40e99f:	mov    DWORD PTR [edx+ecx*2],eax
  40e9a2:	cld    
  40e9a3:	loope  0x40e99a
  40e9a5:	inc    esi
  40e9a6:	(bad)  
  40e9a7:	or     al,0x53
  40e9a9:	push   0xe1f1685f
  40e9ae:	dec    eax
  40e9af:	int    0x9d
  40e9b1:	ficomp DWORD PTR [eax-0x711b580c]
  40e9b7:	(bad)  
  40e9b8:	or     ecx,DWORD PTR [edx-0x57e751b2]
  40e9be:	jge    0x40ea32
  40e9c0:	bound  ebx,QWORD PTR [edx+ebx*4]
  40e9c3:	mov    bh,0x65
  40e9c5:	icebp  
  40e9c6:	cs dec ebp
  40e9c8:	and    DWORD PTR [esp+edi*1-0x16572f9c],esp
  40e9cf:	shr    BYTE PTR [edx-0x1f],cl
  40e9d2:	je     0x40e988
  40e9d4:	pop    edx
  40e9d5:	fild   WORD PTR [ebp-0x65b1269a]
  40e9db:	xlat   BYTE PTR ds:[ebx]
  40e9dc:	mov    edx,DWORD PTR [esi*2+0x3f4f8263]
  40e9e3:	or     eax,edx
  40e9e5:	inc    edx
  40e9e6:	test   al,0x89
  40e9e8:	dec    ebp
  40e9e9:	loope  0x40e9ea
  40e9eb:	sub    WORD PTR [ecx+0x41],bp
  40e9ef:	(bad)  
  40e9f0:	sbb    DWORD PTR [eax+0x79],esi
  40e9f3:	loopne 0x40ea31
  40e9f5:	shl    DWORD PTR [eax],0x35
  40e9f8:	(bad)  
  40e9f9:	retf   0x53c4
  40e9fc:	mov    bh,0xac
  40e9fe:	jbe    0x40e989
  40ea00:	pop    edx
  40ea01:	add    DWORD PTR [eax],ebp
  40ea03:	inc    edi
  40ea04:	pop    esi
  40ea05:	push   ds
  40ea06:	pop    ebx
  40ea07:	idiv   BYTE PTR [ebx-0x1e]
  40ea0a:	(bad)  
  40ea0b:	cmp    al,0xd5
  40ea0d:	and    BYTE PTR [ebx-0x3b3647a6],dh
  40ea13:	jo     0x40e9d4
  40ea15:	enter  0x95a5,0x7b
  40ea19:	sbb    DWORD PTR [ebx],eax
  40ea1b:	ficomp WORD PTR [edi-0x80]
  40ea1e:	inc    eax
  40ea1f:	ins    BYTE PTR es:[edi],dx
  40ea20:	jbe    0x40e9fc
  40ea22:	fld    DWORD PTR [edx]
  40ea24:	dec    ebx
  40ea25:	push   eax
  40ea26:	out    dx,eax
  40ea27:	test   DWORD PTR [edx-0x162367a1],0xebc59cd9
  40ea31:	es mov esp,0x52159b35
  40ea37:	add    dh,dl
  40ea39:	adc    eax,DWORD PTR [edx-0x10309ab9]
  40ea3f:	retf   0xa585
  40ea42:	enter  0xa044,0x97
  40ea46:	bound  edi,QWORD PTR [esi-0x1ba52853]
  40ea4c:	dec    edx
  40ea4d:	popf   
  40ea4e:	pop    ebx
  40ea4f:	sub    BYTE PTR [edx],ah
  40ea51:	push   eax
  40ea52:	push   ecx
  40ea53:	or     edi,ecx
  40ea55:	inc    eax
  40ea56:	scas   eax,DWORD PTR es:[edi]
  40ea57:	(bad)  
  40ea58:	fcmovnbe st,st(5)
  40ea5a:	pop    ss
  40ea5b:	(bad)  
  40ea5c:	fwait
  40ea5d:	or     DWORD PTR [ecx],esp
  40ea5f:	push   ss
  40ea60:	jecxz  0x40eaa8
  40ea62:	int    0x36
  40ea64:	sar    DWORD PTR [eax],1
  40ea66:	jp     0x40ea67
  40ea68:	jmp    0xef1b:0x839b62f5
  40ea6f:	jno    0x40ea2b
  40ea71:	mov    edx,0x62981648
  40ea76:	jnp    0x40eaf1
  40ea78:	jle    0x40ea41
  40ea7a:	sbb    eax,0x1a43317c
  40ea7f:	adc    DWORD PTR [ebx+0x51541bd3],edx
  40ea85:	lds    ecx,FWORD PTR [edi+edx*4]
  40ea88:	xor    DWORD PTR [edx+0x3f],edi
  40ea8b:	fs jne 0x40ea85
  40ea8e:	inc    esp
  40ea8f:	push   eax
  40ea90:	outs   dx,DWORD PTR ds:[esi]
  40ea91:	or     bh,bl
  40ea93:	sbb    dl,dl
  40ea95:	shr    DWORD PTR [edx+edi*4+0x67],cl
  40ea99:	add    al,0xce
  40ea9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea9c:	cmp    DWORD PTR ss:0x45971b9d,eax
  40eaa3:	jae    0x40ea9c
  40eaa5:	ins    BYTE PTR es:[edi],dx
  40eaa6:	mov    eax,0x500fb229
  40eaab:	push   ss
  40eaac:	adc    eax,0x5a3b2504
  40eab1:	add    cl,BYTE PTR [edi+0x16d4b653]
  40eab7:	mov    dh,0x70
  40eab9:	push   eax
  40eaba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eabb:	mov    db3,ecx
  40eabe:	retf   
  40eabf:	(bad)  
  40eac1:	adc    ecx,DWORD PTR [eax-0x7e]
  40eac4:	xchg   edi,eax
  40eac5:	sbb    cl,BYTE PTR [esi-0x2a459c69]
  40eacb:	xchg   ebp,eax
  40eacc:	xchg   ecx,eax
  40eacd:	xor    edi,ecx
  40eacf:	mov    bh,0x3a
  40ead1:	push   edi
  40ead2:	sub    BYTE PTR [edi],al
  40ead4:	in     al,0xe4
  40ead6:	int3   
  40ead7:	test   eax,edi
  40ead9:	call   0x3eb89ea4
  40eade:	or     bl,BYTE PTR ds:0x5ed146a8
  40eae4:	jle    0x40eae0
  40eae6:	mov    ebp,0xd2ca0da4
  40eaeb:	scas   eax,DWORD PTR es:[edi]
  40eaec:	pop    ds
  40eaed:	mov    eax,0xef1ca765
  40eaf2:	push   edx
  40eaf3:	fild   QWORD PTR [ecx-0x2ac1e93]
  40eaf9:	(bad)  
  40eafa:	cmp    eax,0xfae038c4
  40eaff:	xor    BYTE PTR [ecx+0x140295c9],bh
  40eb05:	sar    DWORD PTR [eax],1
  40eb07:	mov    ch,0xec
  40eb09:	aaa    
  40eb0a:	ret    0xb58b
  40eb0d:	sbb    al,BYTE PTR [ebx]
  40eb0f:	in     eax,dx
  40eb10:	les    edi,FWORD PTR [ebx]
  40eb12:	or     al,0x1e
  40eb14:	test   dh,bl
  40eb16:	pop    ebp
  40eb17:	cld    
  40eb18:	push   esi
  40eb19:	adc    ebx,DWORD PTR [ebx-0x7a]
  40eb1c:	aam    0x38
  40eb1e:	sbb    DWORD PTR [ebp+0x70],esi
  40eb21:	ret    
  40eb22:	pop    edx
  40eb23:	mov    edx,0xc8bab583
  40eb28:	retf   
  40eb29:	pop    ebx
  40eb2a:	jmp    0x40eb47
  40eb2c:	and    cl,BYTE PTR [ebx-0x7b60e094]
  40eb32:	and    DWORD PTR [ebx-0x2a],esp
  40eb35:	ja     0x40eb40
  40eb37:	nop
  40eb38:	data16 lods al,BYTE PTR ds:[esi]
  40eb3a:	ss std 
  40eb3c:	fsincos 
  40eb3e:	fbld   TBYTE PTR [edi+edi*2+0x3]
  40eb42:	nop
  40eb43:	or     eax,0x2be86ca1
  40eb48:	fnsave [ebx]
  40eb4a:	pop    eax
  40eb4b:	mov    eax,ds:0xceb69f20
  40eb50:	mov    eax,ds:0xef3ae2fd
  40eb55:	xlat   BYTE PTR ds:[ebx]
  40eb56:	pusha  
  40eb57:	push   edx
  40eb58:	repnz push ss
  40eb5a:	int    0xd1
  40eb5c:	ffreep st(2)
  40eb5e:	dec    eax
  40eb5f:	or     eax,0xd583d9a4
  40eb64:	xlat   BYTE PTR ds:[ebx]
  40eb65:	dec    ecx
  40eb66:	sahf   
  40eb67:	ret    0xa11f
  40eb6a:	out    dx,al
  40eb6b:	loopne 0x40eb99
  40eb6d:	and    dh,cl
  40eb6f:	pop    ebx
  40eb70:	aad    0x6b
  40eb72:	push   ss
  40eb73:	outs   dx,DWORD PTR ds:[esi]
  40eb74:	mov    ah,0x29
  40eb76:	cmp    al,0x1e
  40eb78:	adc    DWORD PTR [edi+eax*1-0x5ce010aa],esi
  40eb7f:	call   0x3382:0xb4e21914
  40eb86:	clc    
  40eb87:	daa    
  40eb88:	sub    ebx,DWORD PTR [edx+0x17]
  40eb8b:	fist   WORD PTR [ecx-0x51]
  40eb8e:	repz test BYTE PTR [edx-0x52],dl
  40eb92:	or     DWORD PTR [esi-0xea408fb],0x15
  40eb99:	inc    eax
  40eb9a:	and    ebp,DWORD PTR [eax+0x7d]
  40eb9d:	add    bh,BYTE PTR [esi+0x68]
  40eba0:	add    ebx,ecx
  40eba2:	lahf   
  40eba3:	cld    
  40eba4:	jno    0x40ebab
  40eba6:	fdiv   st,st(3)
  40eba8:	push   ds
  40eba9:	dec    esp
  40ebaa:	jle    0x40eb3f
  40ebac:	movlps xmm1,QWORD PTR [ebp-0x1d]
  40ebb0:	int    0xe2
  40ebb2:	sub    bh,BYTE PTR [edi-0x62d2c6ec]
  40ebb8:	rcl    DWORD PTR [eax-0x16],1
  40ebbb:	pop    DWORD PTR [ecx+0x806d083]
  40ebc1:	hlt    
  40ebc2:	adc    al,0xee
  40ebc4:	js     0x40ebbd
  40ebc6:	js     0x40eb4a
  40ebc8:	jae    0x40ec03
  40ebca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebcb:	mov    ebx,fs
  40ebcd:	or     eax,0xb0ae2a04
  40ebd2:	jp     0x40eb54
  40ebd4:	or     eax,0x23b026f9
  40ebd9:	enter  0x82d2,0x23
  40ebdd:	out    dx,eax
  40ebde:	(bad)  [eax]
  40ebe0:	gs popa 
  40ebe2:	sbb    esi,ebx
  40ebe4:	pop    esp
  40ebe5:	and    DWORD PTR [esi+0x4e],edi
  40ebe8:	ds pusha 
  40ebea:	retf   0x7537
  40ebed:	ficomp DWORD PTR ds:0x406f0173
  40ebf3:	retf   
  40ebf4:	(bad)  
  40ebf5:	enter  0x7b76,0x54
  40ebf9:	push   eax
  40ebfa:	dec    eax
  40ebfb:	or     eax,0xaa81f601
  40ec00:	mov    ecx,0x7633a3d5
  40ec05:	and    al,0x6e
  40ec07:	movaps xmm4,xmm7
  40ec0a:	mov    cl,0xbe
  40ec0c:	fdiv   st(6),st
  40ec0e:	jae    0x40ebea
  40ec10:	and    bh,BYTE PTR [ebx+0x4c]
  40ec13:	cmp    eax,0xf713ac5a
  40ec18:	les    edx,FWORD PTR ds:0xe1594ac1
  40ec1e:	cmp    al,0x12
  40ec21:	scas   al,BYTE PTR es:[edi]
  40ec22:	cmc    
  40ec23:	xor    dh,bl
  40ec25:	pop    esp
  40ec26:	out    dx,eax
  40ec27:	and    esp,DWORD PTR [eax+0x11]
  40ec2a:	pop    ds
  40ec2b:	sbb    DWORD PTR [ecx+0x6de570b0],esp
  40ec31:	adc    ch,BYTE PTR [edi]
  40ec33:	mov    ebp,0xd210e2e1
  40ec38:	lods   al,BYTE PTR ds:[esi]
  40ec39:	rol    DWORD PTR [eax+edx*1+0x3aa11a24],1
  40ec40:	pop    ecx
  40ec41:	loope  0x40ec5f
  40ec43:	mov    eax,ds:0x9471ce26
  40ec48:	push   edi
  40ec49:	xchg   ebx,eax
  40ec4a:	fisttp DWORD PTR [edx+0x1c]
  40ec4d:	es mov bh,0xd8
  40ec50:	repnz push ebx
  40ec52:	test   ebp,eax
  40ec54:	fldcw  WORD PTR [edi+ecx*4]
  40ec57:	pop    ss
  40ec58:	adc    al,0x9f
  40ec5a:	fidivr WORD PTR ds:0x35bbb0aa
  40ec60:	rcl    DWORD PTR [edx],cl
  40ec62:	lods   al,BYTE PTR ds:[esi]
  40ec63:	je     0x40ecd3
  40ec65:	dec    esi
  40ec66:	adc    DWORD PTR [edx],esi
  40ec68:	sub    BYTE PTR [ebp-0x24],dh
  40ec6b:	lock fstp DWORD PTR [esi-0x4a3fad7c]
  40ec72:	inc    ebp
  40ec73:	xchg   ebp,eax
  40ec74:	mov    ebp,0xd4710ff3
  40ec79:	repz cmp ebx,DWORD PTR [eax-0x62]
  40ec7d:	std    
  40ec7e:	or     eax,0x72b0caf4
  40ec83:	inc    ebx
  40ec84:	sti    
  40ec85:	xor    al,0xf7
  40ec87:	in     eax,0xa
  40ec89:	xor    edi,0x54
  40ec8c:	inc    edx
  40ec8d:	fstp   QWORD PTR ds:0xb30bebeb
  40ec93:	scas   al,BYTE PTR es:[edi]
  40ec94:	cwde   
  40ec95:	bound  edx,QWORD PTR [ebp-0xe]
  40ec98:	in     eax,dx
  40ec99:	cmp    ebp,edx
  40ec9b:	inc    edi
  40ec9c:	push   0xffffffbd
  40ec9e:	das    
  40ec9f:	inc    edx
  40eca0:	retf   0x412
  40eca3:	adc    BYTE PTR [esi+ecx*8],dl
  40eca6:	add    edx,DWORD PTR [ecx+ecx*2+0x3b19ddcc]
  40ecad:	retf   0x5036
  40ecb0:	adc    ecx,DWORD PTR ds:0x54079b7e
  40ecb6:	pusha  
  40ecb7:	push   ebp
  40ecb8:	dec    ebx
  40ecb9:	imul   edx,esi,0x12
  40ecbc:	pop    ebx
  40ecbe:	mov    cl,0xb6
  40ecc0:	(bad)  
  40ecc1:	xor    eax,0x30333fba
  40ecc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecc7:	mov    eax,ds:0x5e3a886a
  40eccc:	cs pop ss
  40ecce:	pop    edx
  40eccf:	inc    ecx
  40ecd0:	adc    al,BYTE PTR [ebp-0x50]
  40ecd3:	ds sub al,0xee
  40ecd6:	imul   edi,DWORD PTR [ecx-0x74e5d6f9],0x363b690b
  40ece0:	sub    al,0x67
  40ece2:	call   0xe8cf:0x6c40152e
  40ece9:	fst    QWORD PTR [esi+0x1d]
  40ecec:	jg     0x40ed38
  40ecee:	stos   DWORD PTR es:[edi],eax
  40ecef:	xchg   ebx,eax
  40ecf0:	addr16 mov edi,0x4b05b3c2
  40ecf6:	cs push edx
  40ecf8:	pop    edx
  40ecf9:	aaa    
  40ecfa:	sbb    dl,BYTE PTR [edi+0x1af162b0]
  40ed00:	cs push ss
  40ed02:	and    edx,DWORD PTR [ebx]
  40ed04:	std    
  40ed05:	pop    ss
  40ed06:	inc    esi
  40ed07:	not    BYTE PTR [esi+0x5cfffe3]
  40ed0d:	les    edi,FWORD PTR [esi+0x48]
  40ed10:	jnp    0x40ed74
  40ed12:	aam    0x20
  40ed14:	fist   WORD PTR [esi+0x67]
  40ed17:	fiadd  DWORD PTR [esi]
  40ed19:	mov    bh,BYTE PTR [eax+0x60]
  40ed1c:	iret   
  40ed1d:	adc    eax,0xae898249
  40ed22:	retf   
  40ed23:	repnz mov dl,0xd3
  40ed26:	sti    
  40ed27:	xchg   ebx,eax
  40ed28:	inc    ebp
  40ed29:	dec    edx
  40ed2a:	faddp  st(5),st
  40ed2c:	stos   DWORD PTR es:[edi],eax
  40ed2d:	xchg   DWORD PTR [ecx-0x45f19b06],ecx
  40ed33:	inc    BYTE PTR [esi]
  40ed35:	xchg   ecx,eax
  40ed36:	pop    ebx
  40ed37:	dec    edx
  40ed38:	pop    ebp
  40ed39:	xchg   esi,eax
  40ed3a:	aaa    
  40ed3b:	int    0x83
  40ed3d:	xor    eax,0xfdd7dc1a
  40ed42:	sub    al,0x59
  40ed44:	or     dl,BYTE PTR [eax+0x66]
  40ed47:	cmc    
  40ed48:	xchg   esp,eax
  40ed49:	or     eax,ecx
  40ed4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed4c:	mov    esi,0x285f96ad
  40ed51:	std    
  40ed52:	xor    DWORD PTR [edx-0x55],esp
  40ed55:	xor    ah,BYTE PTR [ebp+0x71]
  40ed58:	enter  0xc733,0x34
  40ed5c:	jno    0x40ed0b
  40ed5e:	mov    cl,0xbd
  40ed60:	loope  0x40ed0e
  40ed62:	mov    WORD PTR [ebx],dx
  40ed65:	and    al,0x58
  40ed67:	sub    dh,0x76
  40ed6a:	int3   
  40ed6b:	push   0xfffffff2
  40ed6d:	cmp    DWORD PTR [ebx-0x77],ebx
  40ed70:	es jb  0x40ed9e
  40ed73:	pop    esp
  40ed74:	jo     0x40ed78
  40ed76:	pop    ss
  40ed77:	shl    DWORD PTR [ebx-0x7b7af82c],0x45
  40ed7e:	ins    BYTE PTR es:[edi],dx
  40ed7f:	fbld   TBYTE PTR ss:[edi-0x57]
  40ed83:	xchg   esp,eax
  40ed84:	inc    ecx
  40ed85:	div    DWORD PTR [edi+eiz*1]
  40ed88:	pushf  
  40ed89:	(bad)  
  40ed8a:	inc    al
  40ed8c:	lahf   
  40ed8d:	lea    edi,[ebx-0x5c714455]
  40ed93:	jno    0x40ed81
  40ed95:	and    al,0x15
  40ed97:	jecxz  0x40ed66
  40ed99:	pop    eax
  40ed9a:	hlt    
  40ed9b:	or     eax,0x459c58ee
  40eda0:	mov    bl,0x77
  40eda2:	jle    0x40edc2
  40eda4:	ss pop edx
  40eda6:	xor    BYTE PTR [edi+edx*4],ch
  40eda9:	mov    ah,0x6b
  40edab:	les    eax,FWORD PTR [eax-0x182cc90d]
  40edb1:	pop    ds
  40edb2:	pop    ebx
  40edb3:	in     al,dx
  40edb4:	jmp    0xc23:0xb1539b19
  40edbb:	cmp    al,0xfa
  40edbd:	mov    ch,0x7
  40edbf:	xchg   ah,dh
  40edc1:	or     al,0x31
  40edc3:	fldenv [ebp+0x71]
  40edc6:	fcom   QWORD PTR [ebx+0x5d903a4d]
  40edcc:	mov    esp,0xc66f4b7b
  40edd1:	xchg   edi,eax
  40edd2:	mov    ah,BYTE PTR [eax-0x4253db4e]
  40edd8:	add    DWORD PTR [ecx+0x92ded85],0x8a66fbcc
  40ede2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ede3:	mov    al,0xca
  40ede5:	xchg   edx,eax
  40ede6:	imul   esp,DWORD PTR [edi-0x360f2c6],0x2a141865
  40edf0:	out    dx,eax
  40edf1:	or     ebx,esi
  40edf3:	leave  
  40edf4:	inc    edi
  40edf5:	outs   dx,DWORD PTR ds:[esi]
  40edf6:	pop    esp
  40edf7:	mov    al,0xd9
  40edf9:	cld    
  40edfa:	push   ds
  40edfb:	scas   al,BYTE PTR es:[edi]
  40edfc:	mov    ecx,0xb1b01c20
  40ee01:	in     al,dx
  40ee02:	mov    esi,DWORD PTR [edi+0x4d]
  40ee05:	(bad)  
  40ee06:	mov    ds,edi
  40ee08:	cld    
  40ee09:	jo     0x40ee89
  40ee0b:	jmp    0x40ee5a
  40ee0d:	push   0x7d
  40ee0f:	push   edi
  40ee10:	out    0x12,eax
  40ee12:	ret    0xf4ea
  40ee15:	jo     0x40ee36
  40ee17:	ss pop eax
  40ee19:	adc    DWORD PTR [edi],0x1bb1fc6b
  40ee1f:	push   edi
  40ee20:	jle    0x40ee01
  40ee22:	fiadd  WORD PTR [esp+esi*8]
  40ee25:	xor    BYTE PTR [edx-0x2],ch
  40ee28:	aas    
  40ee29:	hlt    
  40ee2a:	jecxz  0x40edda
  40ee2c:	dec    esp
  40ee2d:	add    BYTE PTR [ecx+eax*4],0x17
  40ee31:	rcr    DWORD PTR [edx+0x38c1e596],cl
  40ee37:	jmp    0x40ee09
  40ee39:	xchg   esi,eax
  40ee3a:	sar    cl,0x17
  40ee3d:	xor    al,0x21
  40ee3f:	xchg   ebp,eax
  40ee40:	xchg   ebx,eax
  40ee41:	push   esp
  40ee42:	inc    ecx
  40ee43:	into   
  40ee44:	(bad)  
  40ee45:	gs nop
  40ee47:	imul   edx,DWORD PTR [esi+0x27cc82a8],0xc2112efc
  40ee51:	push   0x8c29d352
  40ee56:	sbb    eax,0xbda201d9
  40ee5b:	cmp    cl,BYTE PTR [ecx-0x4244fc68]
  40ee61:	xchg   DWORD PTR [esi],edi
  40ee63:	dec    ebx
  40ee64:	mov    bl,dl
  40ee66:	icebp  
  40ee67:	test   DWORD PTR [ebp+0x3118154f],esp
  40ee6d:	mov    edi,0x303f975d
  40ee72:	sbb    DWORD PTR ds:0xd66c2a37,eax
  40ee78:	popf   
  40ee79:	sub    DWORD PTR [ecx+0x6],edx
  40ee7c:	gs loopne 0x40eec8
  40ee7f:	stos   DWORD PTR es:[edi],eax
  40ee80:	fs (bad) 
  40ee83:	pop    ss
  40ee84:	adc    BYTE PTR [eax+eiz*1],ch
  40ee87:	jecxz  0x40eef4
  40ee89:	ds and eax,0x20ca5176
  40ee8f:	popf   
  40ee90:	mov    esp,DWORD PTR [esp+eiz*2-0x2e]
  40ee94:	les    esp,FWORD PTR [eax-0x59]
  40ee97:	js     0x40eed8
  40ee99:	lock xlat BYTE PTR ds:[ebx]
  40ee9b:	pop    es
  40ee9c:	mov    bl,0x21
  40ee9e:	aam    0x71
  40eea0:	and    BYTE PTR [ecx-0x5e],ch
  40eea3:	popa   
  40eea4:	mov    al,0x80
  40eea6:	inc    ebx
  40eea7:	mov    ds:0x31c016b9,eax
  40eeac:	daa    
  40eead:	sub    edx,DWORD PTR [ebp+0x67]
  40eeb0:	sti    
  40eeb1:	lds    eax,FWORD PTR [esp+ecx*8]
  40eeb4:	mov    eax,ds:0x7c93210c
  40eeb9:	pop    ebx
  40eeba:	mov    bh,0x7e
  40eebc:	mov    ebx,0xa3a0643d
  40eec1:	test   eax,0x4c5e9cba
  40eec6:	add    al,0x31
  40eec8:	sub    al,0x98
  40eeca:	xchg   edi,eax
  40eecb:	inc    BYTE PTR es:[eax]
  40eece:	sub    DWORD PTR [ebp+0x76],esi
  40eed1:	bnd es call 0x9bda2d14
  40eed8:	or     eax,0xf0532177
  40eedd:	or     al,0x49
  40eedf:	outs   dx,DWORD PTR ds:[esi]
  40eee0:	(bad)  
  40eee1:	jge    0x40eed6
  40eee3:	icebp  
  40eee4:	shl    DWORD PTR ds:0xc6b5ddcb,cl
  40eeea:	pop    esi
  40eeeb:	add    al,0x75
  40eeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeee:	mov    ch,0x4f
  40eef0:	or     bl,dl
  40eef2:	add    eax,0x97e0387a
  40eef7:	sar    BYTE PTR [ebx],cl
  40eef9:	or     eax,0xffffffdc
  40eefc:	rcl    dl,1
  40eefe:	(bad)  
  40eeff:	push   0x4a641d13
  40ef04:	repz leave 
  40ef06:	push   ds
  40ef07:	(bad)  
  40ef09:	hlt    
  40ef0a:	xchg   edx,eax
  40ef0b:	(bad)  
  40ef0c:	lds    edi,FWORD PTR [ecx+0x38981379]
  40ef12:	and    DWORD PTR [ebx+0x3f],ebp
  40ef15:	add    esi,DWORD PTR [edi+0x68e9b1]
  40ef1b:	sti    
  40ef1c:	jmp    0xd1c1:0x9f6a6a86
  40ef23:	test   DWORD PTR [ebp-0x63d6cd7b],eax
  40ef29:	test   BYTE PTR [eax],ch
  40ef2b:	stc    
  40ef2c:	ror    BYTE PTR [ecx+ecx*1-0x7d],cl
  40ef30:	ror    ch,cl
  40ef32:	cmp    DWORD PTR [ebx-0x263a6bab],ecx
  40ef38:	push   edx
  40ef39:	and    al,0x20
  40ef3b:	jp     0x40efbc
  40ef3d:	dec    esi
  40ef3e:	lea    esi,[ecx+ebx*4-0x44e6c4e6]
  40ef45:	push   0xd6e0aab8
  40ef4a:	(bad)  
  40ef4b:	fist   DWORD PTR [esp+ebp*4]
  40ef4e:	inc    edx
  40ef4f:	cmp    ah,dh
  40ef51:	push   ebx
  40ef52:	or     ch,ah
  40ef54:	sti    
  40ef55:	sbb    eax,0x6915107
  40ef5a:	icebp  
  40ef5b:	aam    0xc5
  40ef5d:	sbb    al,0x44
  40ef5f:	jg     0x40eef9
  40ef61:	xchg   ecx,eax
  40ef62:	jmp    0xa4af:0xb8bd566a
  40ef69:	adc    al,0xfc
  40ef6b:	add    DWORD PTR [edi+0xe],esi
  40ef6e:	test   DWORD PTR [edx-0x68],0x5009821a
  40ef75:	jb     0x40efe7
  40ef77:	jg     0x40ef23
  40ef79:	pop    esi
  40ef7a:	adc    DWORD PTR [edx],eax
  40ef7c:	push   es
  40ef7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef7e:	cmp    dh,BYTE PTR [ebp+0xcf1991e]
  40ef84:	mov    ebx,DWORD PTR [ebx+0x4]
  40ef87:	(bad)  [ebx+0x4e]
  40ef8a:	cmp    BYTE PTR [esi],0x55
  40ef8d:	dec    sp
  40ef8f:	inc    esp
  40ef90:	cmp    esi,ebp
  40ef92:	push   eax
  40ef93:	and    edx,DWORD PTR [edx-0x5b059805]
  40ef99:	mov    ds:0xea0ee0a0,eax
  40ef9e:	push   edx
  40ef9f:	into   
  40efa0:	pop    ebx
  40efa1:	ja     0x40f006
  40efa3:	mov    edx,0x29a023f9
  40efa8:	out    0xf8,al
  40efaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efab:	dec    eax
  40efac:	add    BYTE PTR [ebp+0x6b],0x92
  40efb0:	lahf   
  40efb1:	out    dx,eax
  40efb2:	xchg   ebx,eax
  40efb3:	enter  0x1369,0x4
  40efb7:	push   esp
  40efb8:	push   esi
  40efb9:	inc    ebp
  40efba:	inc    edi
  40efbb:	lods   al,BYTE PTR ds:[esi]
  40efbc:	pop    eax
  40efbd:	test   DWORD PTR [ebp+ebx*4+0x5e],ebx
  40efc1:	popf   
  40efc2:	jbe    0x40f005
  40efc4:	inc    edi
  40efc5:	push   cs
  40efc6:	pop    ss
  40efc7:	cld    
  40efc8:	inc    esp
  40efc9:	pop    ecx
  40efca:	and    DWORD PTR [ebp-0x6dc55bb7],ebx
  40efd0:	or     al,0x13
  40efd2:	daa    
  40efd3:	jecxz  0x40f013
  40efd5:	xchg   DWORD PTR [esi-0x79634418],ebx
  40efdb:	fisttp DWORD PTR [edx+0x67]
  40efde:	or     dh,ah
  40efe0:	inc    eax
  40efe1:	push   ebp
  40efe2:	push   ds
  40efe3:	fdivr  QWORD PTR [ebp+0x16]
  40efe6:	loopne 0x40ef68
  40efe8:	jbe    0x40efaf
  40efea:	push   esi
  40efeb:	add    al,0x62
  40efed:	push   ebx
  40efee:	into   
  40efef:	xlat   BYTE PTR ds:[ebx]
  40eff0:	xor    eax,0x164c3a18
  40eff5:	loopne 0x40efa8
  40eff7:	xchg   ebp,eax
  40eff8:	retf   
  40eff9:	cmp    DWORD PTR [eax+0x5652da7b],eax
  40efff:	stos   DWORD PTR es:[edi],eax
  40f000:	retf   
  40f001:	icebp  
  40f002:	arpl   WORD PTR [ebp+0x59],bx
  40f005:	pop    ebx
  40f006:	enter  0xd80c,0x39
  40f00a:	(bad)  
  40f00b:	outs   dx,DWORD PTR ds:[esi]
  40f00c:	adc    al,0xe4
  40f00e:	cwde   
  40f00f:	leave  
  40f010:	in     al,dx
  40f011:	lods   al,BYTE PTR ds:[esi]
  40f012:	add    ch,ch
  40f014:	cmp    eax,0x245f71f9
  40f019:	icebp  
  40f01a:	fistp  QWORD PTR [ecx-0x649393ba]
  40f020:	bound  edi,QWORD PTR [ebx]
  40f022:	iret   
  40f023:	cli    
  40f024:	dec    ebx
  40f025:	dec    esp
  40f026:	mov    al,ds:0x5572e2b7
  40f02b:	xlat   BYTE PTR ds:[ebx]
  40f02c:	jl     0x40efde
  40f02e:	mov    dl,0x94
  40f030:	and    ch,BYTE PTR [edi]
  40f032:	arpl   WORD PTR [ebp+eiz*2+0x43],dx
  40f036:	inc    ebx
  40f037:	pusha  
  40f038:	pop    ss
  40f039:	fdiv   st(6),st
  40f03b:	push   esi
  40f03c:	ins    DWORD PTR es:[edi],dx
  40f03d:	inc    edx
  40f03e:	or     DWORD PTR [edx],esi
  40f040:	jne    0x40f07c
  40f042:	or     al,BYTE PTR [esi-0x6e6c1185]
  40f048:	out    dx,al
  40f049:	ins    BYTE PTR es:[edi],dx
  40f04a:	xchg   edi,eax
  40f04b:	mov    ebp,0x9325854c
  40f050:	inc    esp
  40f051:	aaa    
  40f052:	push   ds
  40f053:	pop    esi
  40f054:	stos   DWORD PTR es:[edi],eax
  40f055:	jo     0x40f007
  40f057:	adc    eax,0x915f0442
  40f05c:	jbe    0x40f091
  40f05e:	pop    edx
  40f05f:	shufps xmm7,XMMWORD PTR [edi],0xce
  40f063:	aam    0x43
  40f065:	ret    0x248a
  40f068:	sbb    eax,0xf6e9dcaa
  40f06d:	and    eax,0xc64e13a8
  40f072:	fisttp WORD PTR [ebx]
  40f074:	xchg   DWORD PTR [ecx+0x1e],ebp
  40f077:	mov    edi,0x34305635
  40f07c:	pop    ebp
  40f07d:	jmp    0x3bbe:0xd28d3a52
  40f084:	retf   
  40f085:	mov    dh,0x77
  40f087:	fucomp st(0)
  40f089:	push   DWORD PTR [esi-0x73]
  40f08c:	pop    edx
  40f08d:	lock xor DWORD PTR [edx],ecx
  40f090:	push   ebp
  40f091:	pop    es
  40f092:	stos   DWORD PTR es:[edi],eax
  40f093:	mov    ebp,0x845aad2c
  40f098:	or     al,0x17
  40f09a:	push   ecx
  40f09b:	out    dx,al
  40f09c:	xor    DWORD PTR [edi-0x12],ebx
  40f09f:	imul   esi,DWORD PTR [edi-0x6394fb87],0xa9f0b4dd
  40f0a9:	pop    edx
  40f0aa:	inc    esp
  40f0ab:	(bad)  
  40f0ac:	aas    
  40f0ad:	sbb    dh,0xfd
  40f0b0:	mov    DWORD PTR [edx+0x57c7f399],0x44cb5d7e
  40f0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0bb:	ficom  WORD PTR [edi-0x4a]
  40f0be:	dec    edx
  40f0bf:	mov    ebx,0x274889c1
  40f0c4:	outs   dx,DWORD PTR ds:[esi]
  40f0c5:	xor    dh,BYTE PTR [ebp-0x294ee2a1]
  40f0cb:	inc    ebx
  40f0cc:	dec    ebx
  40f0cd:	mov    al,0x9c
  40f0cf:	jg     0x40f11b
  40f0d1:	push   0xffffff93
  40f0d3:	sbb    eax,0x884af14f
  40f0d8:	repz fcom QWORD PTR [ebx]
  40f0db:	loope  0x40f087
  40f0dd:	jecxz  0x40f08a
  40f0df:	retf   
  40f0e0:	sbb    al,0x8e
  40f0e2:	in     al,0x47
  40f0e4:	fsubr  QWORD PTR [edi+0x12]
  40f0e7:	or     bl,BYTE PTR [ebx-0x4a433f00]
  40f0ed:	push   ecx
  40f0ee:	sub    ebx,DWORD PTR [edi+eax*4+0x7eaefc93]
  40f0f5:	enter  0xb9c7,0x73
  40f0f9:	xchg   edx,eax
  40f0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0fb:	or     BYTE PTR [edx+0x5a],bl
  40f0fe:	in     al,0x70
  40f100:	dec    esp
  40f101:	into   
  40f102:	adc    cl,0x8a
  40f105:	dec    esp
  40f106:	mov    ah,0xd9
  40f108:	mov    edi,0xd62f6dcc
  40f10d:	sub    dl,0x11
  40f110:	ins    BYTE PTR es:[edi],dx
  40f111:	sbb    BYTE PTR [ecx],dl
  40f113:	call   0x3052677
  40f118:	jge    0x40f0d4
  40f11a:	xor    al,0xf9
  40f11c:	pop    ecx
  40f11d:	ins    DWORD PTR es:[edi],dx
  40f11e:	adc    eax,0x63a44ea1
  40f123:	pop    esi
  40f124:	mov    BYTE PTR [edi],bl
  40f126:	sbb    BYTE PTR [esp-0x77],bl
  40f12a:	ret    0x676f
  40f12d:	fnsave [esp+ecx*2-0x77]
  40f131:	jle    0x40f168
  40f133:	sbb    BYTE PTR [edx-0x17],ch
  40f136:	(bad)  
  40f137:	xchg   ecx,eax
  40f138:	mov    ds:0x14094bfd,eax
  40f13d:	in     eax,0xb1
  40f13f:	pop    ebx
  40f140:	popf   
  40f141:	adc    dh,BYTE PTR [ebx-0x6]
  40f144:	fs push ebx
  40f146:	add    al,0xc8
  40f148:	into   
  40f149:	loope  0x40f16b
  40f14b:	xchg   ebp,eax
  40f14c:	imul   BYTE PTR [edx]
  40f14e:	nop
  40f14f:	mov    al,ds:0xc2252aff
  40f154:	lds    ebp,FWORD PTR [eax+ecx*4+0x77]
  40f158:	mov    esi,0x1c3985cf
  40f15d:	dec    eax
  40f15e:	push   ss
  40f15f:	mov    ecx,0xfa3a275a
  40f164:	adc    ebx,0x6c
  40f167:	jl     0x40f167
  40f169:	lds    edx,FWORD PTR [ebx-0x5b]
  40f16c:	adc    edi,ebx
  40f16e:	sub    BYTE PTR [esi],0x8b
  40f171:	test   DWORD PTR [eax-0x5b98302d],ebx
  40f177:	addr16 mov ebp,0xd289ba4
  40f17d:	mov    ah,0xc4
  40f17f:	imul   edx,DWORD PTR [ecx-0x2f49f95d],0x51
  40f186:	mul    cl
  40f188:	in     al,dx
  40f189:	jmp    0xa69d:0xb1bfa6b0
  40f190:	into   
  40f191:	pop    eax
  40f192:	fisubr DWORD PTR [esi+0x38]
  40f195:	pop    ebp
  40f196:	repz adc eax,0x80af6e75
  40f19c:	fstp   DWORD PTR [ebp+0x5299912d]
  40f1a2:	or     DWORD PTR [edi+eiz*1+0xe2a281a],edx
  40f1a9:	lods   al,BYTE PTR ds:[esi]
  40f1aa:	push   esp
  40f1ab:	mov    edi,DWORD PTR [edx+0x45ec8c1d]
  40f1b1:	push   ebx
  40f1b2:	aaa    
  40f1b3:	out    dx,al
  40f1b4:	jmp    0xcb29:0xbbb26729
  40f1bb:	dec    edx
  40f1bc:	mov    ecx,0x21a94c4a
  40f1c1:	push   ss
  40f1c2:	push   esi
  40f1c3:	dec    ebp
  40f1c4:	ins    BYTE PTR es:[edi],dx
  40f1c5:	pusha  
  40f1c6:	pop    es
  40f1c7:	jg     0x40f23b
  40f1c9:	call   FWORD PTR [esi]
  40f1cb:	mov    esp,0x71588ac8
  40f1d0:	push   ebp
  40f1d1:	dec    eax
  40f1d2:	scas   eax,DWORD PTR es:[edi]
  40f1d3:	ror    DWORD PTR [ebx],0xc6
  40f1d6:	mov    DWORD PTR [edi+0x295573d8],edx
  40f1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1dd:	mov    dl,0x5c
  40f1df:	cmp    edi,ebp
  40f1e1:	js     0x40f242
  40f1e3:	outs   dx,DWORD PTR ds:[esi]
  40f1e4:	adc    BYTE PTR [ebx+0x45806b4e],cl
  40f1ea:	or     BYTE PTR [ecx+0x7eda71d1],cl
  40f1f0:	cmc    
  40f1f1:	(bad)  
  40f1f2:	ins    DWORD PTR es:[edi],dx
  40f1f3:	aam    0x7c
  40f1f5:	xor    BYTE PTR [ebp-0x7becb134],0xf5
  40f1fc:	and    eax,0xbcf06c6d
  40f201:	popf   
  40f202:	push   eax
  40f203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f204:	rol    BYTE PTR [eax+ebx*1-0x13075937],cl
  40f20b:	scas   eax,DWORD PTR es:[edi]
  40f20c:	push   esi
  40f20d:	pop    ebx
  40f20e:	pushf  
  40f20f:	gs retf 
  40f211:	xlat   BYTE PTR ds:[ebx]
  40f212:	inc    esi
  40f213:	dec    esp
  40f214:	cmc    
  40f215:	add    al,0xa7
  40f217:	or     al,0x66
  40f219:	push   0xf6494286
  40f21e:	push   edx
  40f21f:	ins    BYTE PTR es:[edi],dx
  40f220:	mov    cl,0x42
  40f222:	inc    ebp
  40f223:	dec    ebp
  40f224:	imul   eax,DWORD PTR [edi-0x46],0xe983b9c2
  40f22b:	sub    al,0x74
  40f22d:	push   ebp
  40f22e:	gs push ecx
  40f230:	dec    edx
  40f231:	add    ebx,esp
  40f233:	into   
  40f234:	dec    esp
  40f235:	pop    DWORD PTR [ecx-0x3f]
  40f238:	adc    al,al
  40f23a:	out    0xa8,al
  40f23c:	shl    DWORD PTR [ebp+0x1a93455c],0x1d
  40f243:	xchg   DWORD PTR [edx],esi
  40f245:	xchg   edx,eax
  40f246:	push   eax
  40f247:	and    al,0x24
  40f249:	icebp  
  40f24a:	ret    
  40f24b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f24d:	push   ebp
  40f24e:	dec    ebx
  40f24f:	cmc    
  40f250:	sub    esp,DWORD PTR [ebp-0x62]
  40f253:	mov    ?,eax
  40f255:	pop    ss
  40f256:	sbb    bh,ch
  40f258:	leave  
  40f259:	aaa    
  40f25a:	xchg   ecx,eax
  40f25b:	ja     0x40f200
  40f25d:	pop    edi
  40f25e:	in     al,0x3e
  40f260:	sub    ch,ch
  40f262:	mov    esi,edi
  40f264:	fiadd  WORD PTR [esi]
  40f266:	add    ch,BYTE PTR [edi]
  40f268:	push   ebx
  40f269:	adc    esp,ebx
  40f26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f26c:	dec    esp
  40f26d:	outs   dx,DWORD PTR ds:[esi]
  40f26e:	or     eax,ebp
  40f270:	leave  
  40f271:	mov    edx,0x3da2f773
  40f276:	xchg   esp,eax
  40f277:	inc    eax
  40f278:	jmp    0x1cc5:0xccc31eae
  40f27f:	mov    esi,0x2b69df7f
  40f284:	mov    esi,0xda20dcd5
  40f289:	dec    esp
  40f28a:	mov    ebp,0xb01a4fe2
  40f28f:	test   eax,0xdb4f7ad0
  40f294:	ss gs dec eax
  40f297:	into   
  40f298:	loopne 0x40f25e
  40f29a:	stos   BYTE PTR es:[edi],al
  40f29b:	je     0x40f28e
  40f29d:	sub    cl,0x98
  40f2a0:	pop    ebp
  40f2a1:	xor    al,0xfb
  40f2a3:	sub    DWORD PTR [ebp-0x7e9162d4],eax
  40f2a9:	sbb    DWORD PTR es:[edi],ebp
  40f2ac:	xchg   edx,eax
  40f2ad:	loope  0x40f2f4
  40f2af:	ja     0x40f289
  40f2b1:	sbb    al,0x3c
  40f2b3:	imul   esi,DWORD PTR [ebx+0x5],0xbf7e0ab
  40f2ba:	shl    BYTE PTR ds:0x97d33449,1
  40f2c0:	in     al,0x1a
  40f2c2:	ins    BYTE PTR es:[edi],dx
  40f2c3:	jne    0x40f33d
  40f2c5:	xor    BYTE PTR [eax],0xd9
  40f2c8:	fnstsw WORD PTR [edx+ecx*8]
  40f2cb:	and    DWORD PTR [ecx-0x27],eax
  40f2ce:	push   esi
  40f2cf:	jo     0x40f261
  40f2d1:	inc    ebx
  40f2d2:	fsubr  QWORD PTR [edx]
  40f2d4:	retf   0x6bed
  40f2d7:	xor    eax,0xba52a6a7
  40f2dc:	push   ss
  40f2dd:	mov    bl,BYTE PTR [edi+0x1efa02e1]
  40f2e3:	or     DWORD PTR [edx-0x917fd8e],ecx
  40f2e9:	mov    ?,WORD PTR [edi-0x39a28aa7]
  40f2ef:	je     0x40f329
  40f2f1:	dec    esp
  40f2f2:	xchg   ecx,eax
  40f2f3:	ins    BYTE PTR es:[edi],dx
  40f2f4:	(bad)  
  40f2f5:	iret   
  40f2f6:	jne    0x40f28e
  40f2f8:	cmp    dh,BYTE PTR [ebp+0x5b]
  40f2fb:	retf   
  40f2fc:	in     eax,0x6c
  40f2fe:	xchg   esi,esi
  40f300:	mov    ah,0x6d
  40f302:	inc    esp
  40f303:	out    dx,eax
  40f304:	aaa    
  40f305:	push   0x62bd4552
  40f30a:	nop
  40f30b:	mov    bh,0xd7
  40f30d:	pop    edx
  40f30e:	inc    esi
  40f30f:	adc    BYTE PTR ds:0x6afbfe7e,bl
  40f315:	pop    esp
  40f316:	inc    edi
  40f317:	xor    dl,dl
  40f319:	(bad)
  40f31c:	test   DWORD PTR [edx],ebx
  40f31e:	js     0x40f311
  40f320:	js     0x40f363
  40f322:	cld    
  40f323:	retf   0x748
  40f326:	and    DWORD PTR [ebx+0x6e],esi
  40f329:	test   BYTE PTR [edx+0x7],0x5b
  40f32d:	adc    DWORD PTR [ebx+eiz*1+0x3aa7e615],0x40
  40f335:	push   ebp
  40f336:	adc    al,0x36
  40f338:	repz dec eax
  40f33a:	fsubr  QWORD PTR [edi]
  40f33c:	cdq    
  40f33d:	addr16 jp 0x40f320
  40f340:	pop    edi
  40f341:	adc    bh,cl
  40f343:	jbe    0x40f33a
  40f345:	pop    ebx
  40f346:	stos   DWORD PTR es:[edi],eax
  40f347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f348:	leave  
  40f349:	cmp    eax,0x75cdb1fc
  40f34e:	pop    ds
  40f34f:	pusha  
  40f350:	xchg   esp,eax
  40f351:	daa    
  40f352:	stos   BYTE PTR es:[edi],al
  40f353:	cmp    DWORD PTR [eax],ebp
  40f355:	adc    bl,BYTE PTR [bx+si]
  40f358:	add    DWORD PTR [edx-0x2a],0xcec9bb73
  40f35f:	sti    
  40f360:	xchg   ebp,eax
  40f361:	add    DWORD PTR [ebp+0x76],esi
  40f364:	sub    ebx,DWORD PTR [ebp+0xb]
  40f367:	push   es
  40f368:	test   eax,0xf794ca6a
  40f36d:	jp     0x40f39d
  40f36f:	inc    ebx
  40f370:	jns    0x40f3c5
  40f372:	push   ds
  40f373:	adc    DWORD PTR [eax+ecx*8],esp
  40f376:	jae    0x40f335
  40f378:	addr16 jb 0x40f3b8
  40f37b:	mov    ah,0x6
  40f37d:	pop    es
  40f37e:	xchg   ebx,eax
  40f37f:	push   0xffffff8b
  40f381:	sbb    dh,BYTE PTR [ebx]
  40f383:	sti    
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x3a8ef51a,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	pop    ecx
  40f484:	rcr    DWORD PTR [esi],0xc9
  40f487:	and    eax,0x21c8f7de
  40f48c:	jno    0x40f4c6
  40f48e:	fmul   st,st(0)
  40f490:	add    eax,0x6976f4b0
  40f495:	adc    ch,dh
  40f497:	scas   al,BYTE PTR es:[edi]
  40f498:	sti    
  40f499:	mov    ebp,DWORD PTR [ecx+eiz*1]
  40f49c:	dec    edx
  40f49d:	pop    esi
  40f49e:	stos   BYTE PTR es:[edi],al
  40f49f:	sub    DWORD PTR [ecx-0x63],0x3
  40f4a3:	inc    eax
  40f4a4:	or     BYTE PTR [eax-0x65],dh
  40f4a7:	xor    bl,BYTE PTR [ebx-0x6b]
  40f4aa:	inc    edx
  40f4ab:	sub    DWORD PTR [ebx+0x1fe196e4],ebp
  40f4b1:	jae    0x40f51c
  40f4b3:	(bad)  
  40f4b4:	in     eax,dx
  40f4b5:	xchg   dl,ch
  40f4b7:	es pop ss
  40f4b9:	retf   
  40f4ba:	(bad)  
  40f4bb:	scas   eax,DWORD PTR es:[edi]
  40f4bc:	mov    esp,DWORD PTR [ecx+ecx*4]
  40f4bf:	inc    eax
  40f4c0:	mov    ebx,0x2762ffb3
  40f4c5:	adc    ch,BYTE PTR [ecx+0x4b]
  40f4c8:	test   DWORD PTR [eax+0x76],ebp
  40f4cb:	add    eax,0x406f0f57
  40f4d0:	out    dx,al
  40f4d1:	call   0x4f7226e
  40f4d6:	in     al,dx
  40f4d7:	or     ebx,DWORD PTR [edi-0x34]
  40f4da:	das    
  40f4db:	daa    
  40f4dc:	dec    edi
  40f4dd:	nop
  40f4de:	mov    ds:0x2666acec,eax
  40f4e3:	fld    TBYTE PTR [esi-0xe]
  40f4e6:	es popf 
  40f4e8:	pop    ss
  40f4e9:	mov    edi,0x978d244f
  40f4ee:	or     eax,DWORD PTR [ebx+0x4e]
  40f4f1:	not    BYTE PTR [ebx+0x50]
  40f4f4:	mov    esp,0xaaf4b9bd
  40f4f9:	(bad)  
  40f4fb:	pop    esp
  40f4fc:	jne    0x40f491
  40f4fe:	call   0x7c22:0xbda7b15a
  40f505:	sub    esp,DWORD PTR [ebx+eax*4-0x6f32ec55]
  40f50c:	mov    esi,0x8e526f63
  40f511:	test   al,0x7
  40f513:	pop    ecx
  40f514:	or     BYTE PTR [ebp+0x3b],0x23
  40f518:	push   ds
  40f519:	jp     0x40f4b4
  40f51b:	cs int3 
  40f51d:	jle    0x40f513
  40f51f:	stos   DWORD PTR es:[edi],eax
  40f520:	das    
  40f521:	retf   
  40f522:	lds    esi,FWORD PTR [edx-0x56499f13]
  40f528:	sbb    eax,0xf8bc08c4
  40f52d:	inc    ecx
  40f52e:	mov    ch,0x94
  40f530:	ret    0xa71e
  40f533:	ss (bad) 
  40f536:	repz jbe 0x40f566
  40f539:	or     eax,0xd4658c6c
  40f53e:	pusha  
  40f53f:	jge    0x40f5a2
  40f541:	loop   0x40f4fa
  40f543:	pop    edx
  40f544:	mov    ecx,0x3282720f
  40f549:	xor    dl,cl
  40f54b:	(bad)  
  40f54c:	jp     0x40f5b6
  40f54e:	mov    bh,0x77
  40f550:	int    0x48
  40f552:	xchg   ebx,eax
  40f553:	and    bh,bl
  40f555:	mov    dl,0xb3
  40f557:	iret   
  40f558:	sub    BYTE PTR [ecx+ebx*4],ch
  40f55b:	push   edx
  40f55c:	in     eax,0xc5
  40f55e:	mov    BYTE PTR [edi],bl
  40f560:	ror    BYTE PTR [eax],cl
  40f562:	lea    edx,[esi+0x2f5c45aa]
  40f568:	and    edx,DWORD PTR [ebx]
  40f56a:	mov    edx,0x2046d4e8
  40f56f:	fwait
  40f570:	dec    esi
  40f571:	cmc    
  40f572:	push   0xffffffac
  40f574:	stc    
  40f575:	scas   eax,DWORD PTR es:[edi]
  40f576:	not    BYTE PTR [esp]
  40f579:	pop    ds
  40f57a:	das    
  40f57b:	cmp    eax,0x2aca79aa
  40f580:	leave  
  40f581:	aam    0x9c
  40f583:	push   ss
  40f584:	mov    bl,0x73
  40f586:	int3   
  40f587:	mov    dh,0x38
  40f589:	test   DWORD PTR [esi-0x66],ebx
  40f58c:	sbb    al,cl
  40f58e:	jb     0x40f5bf
  40f590:	sbb    DWORD PTR [eax+ebx*8+0x45],esp
  40f594:	(bad)  
  40f595:	jg     0x40f60e
  40f597:	cmp    ah,BYTE PTR [edi-0x75]
  40f59a:	mov    ebp,0xdc413a78
  40f59f:	div    BYTE PTR ds:0x9912e36d
  40f5a5:	cmp    al,0xb8
  40f5a7:	inc    ecx
  40f5a8:	xchg   esi,eax
  40f5a9:	mov    al,ds:0xbf972b49
  40f5ae:	jnp    0x40f617
  40f5b0:	adc    esp,ebx
  40f5b2:	aas    
  40f5b3:	sub    eax,0x9d1a23ee
  40f5b8:	xor    edx,ebx
  40f5ba:	pop    eax
  40f5bb:	push   edx
  40f5bd:	pop    ds
  40f5be:	mov    eax,0xa84d541a
  40f5c3:	(bad)  
  40f5c5:	(bad)  
  40f5c6:	fs (bad) 
  40f5c8:	shl    BYTE PTR [ecx+0x7dc9781],cl
  40f5ce:	mov    edi,0x8ba3b6d2
  40f5d3:	cmp    BYTE PTR [edx+0x21],bl
  40f5d6:	ret    0x60cc
  40f5d9:	pop    ebp
  40f5da:	cmp    al,bh
  40f5dc:	pushf  
  40f5dd:	jb     0x40f5ab
  40f5df:	mov    dl,0xaf
  40f5e1:	popf   
  40f5e2:	sbb    ch,BYTE PTR [ecx-0x4a]
  40f5e5:	and    eax,0xf654a158
  40f5ea:	dec    ebp
  40f5eb:	or     DWORD PTR [ebx+0x1a],esp
  40f5ee:	arpl   bx,bx
  40f5f0:	mov    ecx,0xb3cd783c
  40f5f5:	out    dx,eax
  40f5f6:	jge    0x40f5a0
  40f5f8:	dec    ecx
  40f5f9:	sbb    BYTE PTR [ecx+0x13],bl
  40f5fc:	fst    st(7)
  40f5fe:	push   ebp
  40f5ff:	arpl   WORD PTR [ecx+ecx*8],dx
  40f602:	int    0xd6
  40f604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f605:	mov    BYTE PTR [esi-0x31],bh
  40f608:	aas    
  40f609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f60a:	ss ret 
  40f60c:	imul   edi,DWORD PTR [esi+0x5472a8de],0xffffff90
  40f613:	sub    eax,0xe9621c54
  40f618:	gs retf 
  40f61a:	jbe    0x40f64a
  40f61c:	test   eax,0x6c07541b
  40f621:	sub    DWORD PTR [ecx],esi
  40f623:	pop    ebx
  40f624:	mov    esp,0x62586d92
  40f629:	inc    esi
  40f62a:	aad    0x55
  40f62c:	mov    ah,0x78
  40f62e:	ja     0x40f65c
  40f630:	mov    bl,0x39
  40f632:	sub    eax,0xa0971a1d
  40f637:	lahf   
  40f638:	leave  
  40f639:	cs and edx,edx
  40f63c:	push   eax
  40f63d:	retf   0x9ffc
  40f640:	jnp    0x40f696
  40f642:	cmp    al,0x28
  40f644:	ins    BYTE PTR es:[edi],dx
  40f645:	mov    edi,0xe0c71d1
  40f64a:	(bad)
  40f64d:	repz jne 0x40f692
  40f650:	mov    al,0x43
  40f652:	push   ss
  40f653:	adc    ah,BYTE PTR [ebx]
  40f655:	loope  0x40f5d8
  40f657:	or     esi,edx
  40f659:	mov    ah,0x34
  40f65b:	test   al,0x93
  40f65d:	outs   dx,DWORD PTR fs:[esi]
  40f65f:	push   eax
  40f660:	dec    esi
  40f661:	pop    edi
  40f662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f663:	xchg   edx,eax
  40f664:	rcl    DWORD PTR es:[edi],0x59
  40f668:	(bad)  
  40f669:	xor    DWORD PTR [edi],esp
  40f66b:	test   al,0xb1
  40f66d:	popa   
  40f66e:	nop
  40f66f:	inc    esp
  40f670:	dec    esi
  40f671:	ret    0xf8c2
  40f674:	enter  0x40c,0xb1
  40f678:	mov    ebx,0xe6fe01f
  40f67d:	ficom  WORD PTR [ebp+ebx*4+0x442f2499]
  40f684:	mov    ecx,0x7707fa6f
  40f689:	pop    ss
  40f68a:	mov    ebp,0x8c12b4e5
  40f68f:	aaa    
  40f690:	mov    bh,0x83
  40f692:	mov    ecx,0x2b9031f1
  40f697:	pusha  
  40f698:	cld    
  40f699:	ss sbb al,0xf0
  40f69c:	int    0x5d
  40f69e:	push   edx
  40f69f:	pop    es
  40f6a0:	inc    eax
  40f6a1:	cmp    edi,DWORD PTR [ebx-0x6d]
  40f6a4:	cmp    bl,al
  40f6a6:	cmp    edx,ebx
  40f6a8:	mov    esi,0x6f5ba603
  40f6ad:	push   edx
  40f6ae:	into   
  40f6af:	in     eax,dx
  40f6b0:	cld    
  40f6b1:	retf   
  40f6b2:	add    BYTE PTR [edi-0x6e7ecd4c],0x98
  40f6b9:	scas   al,BYTE PTR es:[di]
  40f6bb:	dec    eax
  40f6bc:	xchg   esi,eax
  40f6bd:	xlat   BYTE PTR ds:[ebx]
  40f6be:	jmp    0xe2fbff60
  40f6c3:	push   edx
  40f6c4:	lahf   
  40f6c5:	mov    al,ds:0x649a16b6
  40f6ca:	mov    al,ds:0x64cfc0ea
  40f6cf:	ja     0x40f66e
  40f6d1:	daa    
  40f6d2:	xor    edi,ebx
  40f6d4:	mov    dl,0x56
  40f6d6:	mov    ebp,0xb2fc60fd
  40f6db:	ss sub al,0x99
  40f6de:	sub    BYTE PTR [ecx-0x80],al
  40f6e1:	sub    al,BYTE PTR [esi-0x4c4cd2d8]
  40f6e7:	inc    ecx
  40f6e8:	inc    DWORD PTR [edi]
  40f6ea:	loope  0x40f706
  40f6ec:	mov    al,ds:0xd3749a9c
  40f6f1:	pushf  
  40f6f2:	fbld   TBYTE PTR [edx+0x3a]
  40f6f5:	add    edx,DWORD PTR [ecx]
  40f6f7:	jecxz  0x40f747
  40f6f9:	adc    bl,BYTE PTR [ebp+0x5]
  40f6fc:	ins    BYTE PTR es:[edi],dx
  40f6fd:	push   ss
  40f6fe:	push   edx
  40f6ff:	inc    ecx
  40f700:	push   DWORD PTR [ecx-0x24633e8c]
  40f706:	repnz sbb DWORD PTR [ebx+0x69b2f681],0xf896508f
  40f711:	repz std 
  40f713:	sbb    al,0xe0
  40f715:	jo     0x40f751
  40f717:	fwait
  40f718:	sbb    BYTE PTR [ebp+0x57718ae0],0xdd
  40f71f:	xchg   edi,eax
  40f720:	lock dec BYTE PTR [esi+0x60]
  40f724:	push   es
  40f725:	push   cs
  40f726:	mov    dh,0x4b
  40f728:	pop    edi
  40f729:	cs cwde 
  40f72b:	(bad)  
  40f72c:	pop    ebp
  40f72d:	fdiv   st(7),st
  40f72f:	push   0xffffffa1
  40f731:	in     al,dx
  40f732:	(bad)  
  40f733:	in     al,dx
  40f734:	cwde   
  40f735:	jmp    0x40f7a6
  40f737:	popa   
  40f738:	mov    ecx,0x9796b9d1
  40f73d:	retf   0x12d
  40f740:	fcmovne st,st(4)
  40f742:	hlt    
  40f743:	add    BYTE PTR [ecx],dh
  40f745:	test   ebp,0x52ccae71
  40f74b:	pop    ebx
  40f74c:	out    0xc8,eax
  40f74e:	call   0x2a09:0xa3c59e86
  40f755:	jnp    0x40f708
  40f757:	mov    ecx,0xc2ef51c3
  40f75c:	jb     0x40f6ef
  40f75e:	mov    DWORD PTR [ebp+0x4bf9960],ecx
  40f764:	push   ebp
  40f765:	out    dx,eax
  40f766:	xor    dh,BYTE PTR [edx-0x5606a633]
  40f76c:	inc    ebp
  40f76d:	add    eax,0xd1dd1799
  40f772:	aad    0xdc
  40f774:	sahf   
  40f775:	and    al,0xeb
  40f777:	in     eax,dx
  40f778:	retf   0x1ad5
  40f77b:	push   ss
  40f77c:	xchg   esi,eax
  40f77d:	jmp    0xc17ef1d6
  40f782:	xor    cl,cl
  40f784:	inc    edi
  40f785:	xchg   ebp,eax
  40f786:	push   0x3e
  40f788:	cmp    ebx,DWORD PTR [ecx]
  40f78a:	pusha  
  40f78b:	xor    DWORD PTR [edx-0xf59805e],edx
  40f791:	add    DWORD PTR [ecx],ecx
  40f793:	and    ebp,DWORD PTR [esi-0x660697d9]
  40f799:	repnz and BYTE PTR [ecx+0x3b],dh
  40f79d:	sbb    eax,0x37e3fa20
  40f7a2:	fstp   TBYTE PTR [edi-0x443a9093]
  40f7a8:	pushfw 
  40f7aa:	cmp    DWORD PTR [ebx],esp
  40f7ac:	push   es
  40f7ad:	js     0x40f775
  40f7af:	xchg   ecx,eax
  40f7b0:	add    DWORD PTR [ecx+0x12],edi
  40f7b3:	and    ebx,eax
  40f7b5:	mov    ah,0x85
  40f7b7:	inc    edx
  40f7b8:	(bad)  
  40f7b9:	xlat   BYTE PTR ds:[ebx]
  40f7ba:	dec    ebp
  40f7bb:	mov    esp,edx
  40f7bd:	cmp    al,0x1
  40f7bf:	pop    es
  40f7c0:	movups xmm4,XMMWORD PTR [ecx+0x3e]
  40f7c4:	cmp    DWORD PTR [ecx-0x419a799e],esi
  40f7ca:	mov    bl,0xcc
  40f7cc:	stos   BYTE PTR es:[edi],al
  40f7cd:	add    bh,BYTE PTR [ebp+0x5e]
  40f7d0:	in     al,dx
  40f7d1:	ins    DWORD PTR es:[edi],dx
  40f7d2:	les    esi,FWORD PTR [ecx+0x11]
  40f7d5:	jb     0x40f797
  40f7d7:	into   
  40f7d8:	stos   DWORD PTR es:[edi],eax
  40f7d9:	add    cl,BYTE PTR [edx+0x786c524a]
  40f7df:	mov    dl,BYTE PTR [edx]
  40f7e1:	sbb    eax,0x7b04a4b0
  40f7e6:	imul   ecx,DWORD PTR [edi],0xa3d35493
  40f7ec:	into   
  40f7ed:	ror    DWORD PTR [edx-0x7214992b],cl
  40f7f3:	or     BYTE PTR [esi+0x8],al
  40f7f6:	div    BYTE PTR [ecx]
  40f7f8:	fwait
  40f7f9:	mov    fs,eax
  40f7fb:	cli    
  40f7fc:	fiadd  DWORD PTR [esp+edi*8-0x1d]
  40f800:	dec    esi
  40f801:	fwait
  40f802:	ins    DWORD PTR es:[edi],dx
  40f803:	xor    al,0x8b
  40f805:	fwait
  40f806:	and    eax,0x6f0b86a8
  40f80b:	xor    al,0x53
  40f80d:	mov    DWORD PTR [ecx-0x59bdf3e7],edx
  40f813:	js     0x40f88a
  40f815:	pop    es
  40f816:	ret    
  40f817:	test   eax,0x5fc10764
  40f81c:	js     0x40f7f2
  40f81e:	sbb    al,0xfc
  40f820:	fidivr DWORD PTR [edi+0x5dd02a]
  40f826:	inc    edx
  40f827:	sahf   
  40f828:	daa    
  40f829:	cwde   
  40f82a:	(bad)  
  40f82b:	sbb    ecx,DWORD PTR [ecx+0x259761fa]
  40f831:	dec    DWORD PTR [ebx-0x52]
  40f834:	jl     0x40f7e4
  40f836:	or     BYTE PTR [esi+eiz*8+0x16],ch
  40f83a:	cld    
  40f83b:	sbb    bl,BYTE PTR [edi-0x57]
  40f83e:	in     eax,0xc6
  40f840:	xchg   BYTE PTR [esi+0xb987328],ch
  40f846:	cli    
  40f847:	mov    edx,0xded52dbd
  40f84c:	loopne 0x40f859
  40f84e:	xchg   BYTE PTR [edx+0x6bc7cae7],bh
  40f854:	ss into 
  40f856:	cli    
  40f857:	int3   
  40f858:	cmp    dl,BYTE PTR ds:0x82260769
  40f85e:	cmp    bl,BYTE PTR [edx+0x5]
  40f861:	add    al,BYTE PTR [edi+0x2e80e6cb]
  40f867:	inc    esi
  40f868:	pop    ss
  40f869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f86a:	mov    ch,0xb5
  40f86c:	push   ss
  40f86d:	mov    al,0x94
  40f86f:	out    dx,eax
  40f870:	jo     0x40f7fc
  40f872:	(bad)  [edi+0x2766e54f]
  40f878:	mov    bl,bl
  40f87a:	iret   
  40f87b:	add    dl,BYTE PTR [edi+0xf261595]
  40f881:	jecxz  0x40f822
  40f883:	imul   eax,DWORD PTR [edx+0x75],0x4f
  40f887:	mov    esi,0x92fe7a06
  40f88c:	das    
  40f88d:	or     BYTE PTR [ebp+ebp*2-0x452fc01c],ah
  40f894:	bound  ecx,QWORD PTR [di+0x2]
  40f898:	std    
  40f899:	mov    edx,0xa7b88feb
  40f89e:	jbe    0x40f83e
  40f8a0:	inc    ecx
  40f8a1:	loope  0x40f89f
  40f8a3:	test   BYTE PTR ds:0x18d7f46,0x9a
  40f8aa:	daa    
  40f8ab:	jno    0x40f833
  40f8ad:	jne    0x40f8d1
  40f8af:	sti    
  40f8b0:	mov    esi,0xe4a6e748
  40f8b5:	aaa    
  40f8b6:	or     eax,0x36fcd174
  40f8bb:	lahf   
  40f8bc:	mov    al,0xb7
  40f8be:	mov    al,ds:0x93863609
  40f8c3:	pop    edi
  40f8c4:	js     0x40f84f
  40f8c6:	dec    esi
  40f8c7:	stos   DWORD PTR es:[edi],eax
  40f8c8:	lahf   
  40f8c9:	mov    dh,0xae
  40f8cb:	dec    edi
  40f8cc:	xor    edx,DWORD PTR [eax+0x77231569]
  40f8d2:	mov    ds:0x2437abb9,eax
  40f8d7:	adc    ecx,ebx
  40f8d9:	bound  edx,QWORD PTR [edx+0x58]
  40f8dc:	lods   al,BYTE PTR ds:[esi]
  40f8dd:	xor    al,0xde
  40f8df:	and    BYTE PTR [edx+edx*1+0x58],bl
  40f8e3:	inc    esi
  40f8e4:	push   cs
  40f8e5:	aas    
  40f8e6:	cmp    BYTE PTR [edx],0xbf
  40f8e9:	fist   DWORD PTR ds:0x1a6c517e
  40f8ef:	inc    eax
  40f8f0:	push   ecx
  40f8f1:	stc    
  40f8f2:	mov    DWORD PTR [edx-0x6e],edi
  40f8f5:	dec    edi
  40f8f6:	pop    ebx
  40f8f7:	retf   0xdc50
  40f8fa:	push   0x16
  40f8fc:	mov    cl,0x0
  40f8fe:	sub    cl,BYTE PTR [eax+0xa]
  40f901:	es loopne 0x40f928
  40f904:	adc    BYTE PTR [edx+0x23],al
  40f907:	inc    esp
  40f908:	push   ebx
  40f909:	bound  eax,QWORD PTR [eax-0x727b344b]
  40f90f:	ja     0x40f8e6
  40f911:	inc    esp
  40f912:	call   FWORD PTR [esi+0x4b214ae5]
  40f918:	loop   0x40f8e1
  40f91a:	inc    esp
  40f91b:	sbb    edi,DWORD PTR cs:[edx]
  40f91e:	jo     0x40f95b
  40f920:	and    esp,DWORD PTR [edi+eiz*4]
  40f923:	xchg   edi,eax
  40f924:	into   
  40f925:	adc    eax,0xae5e80e4
  40f92a:	and    ebx,DWORD PTR [ecx+ebx*4+0x6d]
  40f92e:	jbe    0x40f932
  40f930:	call   0x2449:0xcc335d14
  40f937:	xor    ah,ah
  40f939:	sub    eax,0xfa6013ab
  40f93e:	stos   BYTE PTR es:[edi],al
  40f93f:	or     al,0xf3
  40f941:	call   0xd93600a3
  40f946:	shl    al,1
  40f948:	(bad)  
  40f949:	adc    bl,ah
  40f94b:	push   0x53
  40f94d:	sar    dh,0x75
  40f950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f951:	sub    eax,DWORD PTR [eax+0x5a]
  40f954:	(bad)  
  40f955:	into   
  40f956:	cmp    bh,al
  40f958:	pusha  
  40f959:	push   ebp
  40f95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95b:	jge    0x40f99f
  40f95d:	ss scas eax,DWORD PTR es:[edi]
  40f95f:	mov    ds:0x638277cd,eax
  40f964:	dec    ebx
  40f965:	pushf  
  40f966:	je     0x40f907
  40f968:	cmp    DWORD PTR [eax+edi*1],edi
  40f96b:	push   ecx
  40f96c:	cld    
  40f96d:	test   BYTE PTR [esp+eiz*8+0x18],0xe2
  40f972:	push   0x4f
  40f974:	push   esp
  40f975:	sbb    DWORD PTR [edi],eax
  40f977:	out    dx,eax
  40f978:	mov    al,ds:0x32a535f2
  40f97d:	fldenv [esi+0xdc268c]
  40f983:	aaa    
  40f984:	aaa    
  40f985:	lods   eax,DWORD PTR ds:[esi]
  40f986:	not    BYTE PTR [esi-0x5c206c37]
  40f98c:	das    
  40f98d:	test   eax,0xdf9ec38b
  40f992:	sub    BYTE PTR [edx+eax*4],ch
  40f995:	mov    WORD PTR [edi-0x5b],es
  40f998:	push   ebx
  40f999:	je     0x40fa10
  40f99b:	stos   BYTE PTR es:[edi],al
  40f99c:	cld    
  40f99d:	mov    WORD PTR [edi],ds
  40f99f:	xchg   esp,eax
  40f9a0:	inc    edx
  40f9a1:	cmp    al,0x91
  40f9a3:	mov    ds:0x7912e9c0,al
  40f9a8:	(bad)  
  40f9a9:	sub    eax,0xcfe585d6
  40f9ae:	inc    ecx
  40f9af:	adc    BYTE PTR [edi],bh
  40f9b1:	in     eax,dx
  40f9b2:	mov    dh,BYTE PTR [ebp-0x4798ea79]
  40f9b8:	push   es
  40f9b9:	sbb    bl,BYTE PTR [ebx-0x76f86ea6]
  40f9bf:	mov    ecx,0x9959196d
  40f9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c5:	xor    al,0xc2
  40f9c7:	jg     0x40f9ec
  40f9c9:	call   0x7f46:0x41fc9f00
  40f9d0:	mov    ebp,DWORD PTR [ecx]
  40f9d2:	jecxz  0x40f956
  40f9d4:	(bad)  
  40f9d6:	ret    
  40f9d7:	in     eax,dx
  40f9d8:	mov    ebp,0x7b4577a5
  40f9dd:	int3   
  40f9de:	sbb    al,0x10
  40f9e0:	retf   
  40f9e1:	xchg   ebp,eax
  40f9e2:	je     0x40fa31
  40f9e4:	jb     0x40f9ff
  40f9e6:	xor    al,0xa9
  40f9e8:	xor    BYTE PTR gs:0x97171329,cl
  40f9ef:	mov    bl,0x90
  40f9f1:	mov    eax,ds:0x2ac3517
  40f9f6:	ins    DWORD PTR es:[edi],dx
  40f9f7:	pop    ss
  40f9f8:	xchg   ecx,eax
  40f9f9:	inc    ecx
  40f9fa:	and    ah,BYTE PTR [ecx]
  40f9fc:	fiadd  WORD PTR [ebp+esi*2+0x229bfaee]
  40fa03:	and    eax,DWORD PTR [ebx-0x6]
  40fa06:	aam    0xf8
  40fa08:	fcmovbe st,st(2)
  40fa0a:	sub    esp,DWORD PTR [eax+ebp*2-0xe]
  40fa0e:	xchg   edi,eax
  40fa0f:	loopne 0x40fa76
  40fa11:	xlat   BYTE PTR ds:[ebx]
  40fa13:	inc    esp
  40fa14:	repz ds loope 0x40fa4a
  40fa18:	test   DWORD PTR [ebp+0x2f1a5920],0xe670f24c
  40fa22:	outs   dx,DWORD PTR ds:[esi]
  40fa23:	mov    eax,ds:0x2df76ad5
  40fa28:	and    BYTE PTR [edi],dl
  40fa2a:	out    dx,al
  40fa2b:	call   0xf11afa86
  40fa30:	cmc    
  40fa31:	lea    esp,[esi-0x17]
  40fa34:	shr    BYTE PTR [edx+eiz*1],1
  40fa37:	aaa    
  40fa38:	ss popw es
  40fa3b:	ja     0x40fa9c
  40fa3d:	cmp    DWORD PTR [ecx+0x187d5f74],0xe44aa424
  40fa47:	or     DWORD PTR [eax+0x4ea3e226],esi
  40fa4d:	fld    DWORD PTR [ebx-0x66d6b1bf]
  40fa53:	fist   WORD PTR [ebx-0x3ca4b7f9]
  40fa59:	(bad)  
  40fa5a:	xor    DWORD PTR [ebp-0x1950ad],ecx
  40fa60:	inc    ecx
  40fa61:	push   ecx
  40fa62:	neg    BYTE PTR [edx+0x79]
  40fa65:	scas   eax,DWORD PTR es:[edi]
  40fa66:	adc    ebp,DWORD PTR [ebx+0x7bc2b61b]
  40fa6c:	sub    ebp,DWORD PTR [ebx]
  40fa6e:	push   ss
  40fa6f:	scas   al,BYTE PTR es:[edi]
  40fa70:	vpaddd xmm2,xmm6,XMMWORD PTR [ebx+0x646f67d7]
  40fa78:	and    eax,0xe938fad8
  40fa7d:	jmp    0x40fad9
  40fa7f:	add    BYTE PTR [ecx+eax*1-0x75b96bdf],al
  40fa86:	add    al,0x19
  40fa88:	or     ecx,DWORD PTR [ecx+0x4d]
  40fa8b:	adc    eax,0x9393fe10
  40fa90:	push   ecx
  40fa91:	push   cs
  40fa92:	xchg   ebx,eax
  40fa93:	out    0x39,eax
  40fa95:	fdivr  st,st(1)
  40fa97:	adc    eax,0xab4fc315
  40fa9c:	fnsave [ebp+0x110db752]
  40faa2:	and    dh,cl
  40faa4:	mov    al,0xe9
  40faa6:	push   esp
  40faa7:	imul   eax
  40faa9:	test   esi,0x4e0057b9
  40faaf:	adc    bh,BYTE PTR [edi]
  40fab1:	nop
  40fab2:	ins    DWORD PTR es:[edi],dx
  40fab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fab4:	out    0xc2,eax
  40fab6:	or     ecx,DWORD PTR [ebp+0x1c]
  40fab9:	xchg   ecx,eax
  40faba:	lds    ecx,FWORD PTR [edi+eiz*1-0x425c2951]
  40fac1:	jmp    0x4ea1:0x18599850
  40fac8:	(bad)  
  40fac9:	shl    BYTE PTR [edx+0x75926a98],1
  40facf:	xor    DWORD PTR [ebp-0x2b],0x70
  40fad3:	sub    dl,BYTE PTR [ecx+0x63]
  40fad6:	int3   
  40fad7:	pop    esi
  40fad8:	(bad)  
  40fad9:	dec    esi
  40fada:	stos   BYTE PTR es:[edi],al
  40fadb:	nop
  40fadc:	test   eax,0x6b2a434c
  40fae1:	loopne 0x40fb31
  40fae3:	fstp   DWORD PTR [esi]
  40fae5:	jecxz  0x40faed
  40fae7:	mov    edi,0x39bc4270
  40faec:	xchg   edx,eax
  40faed:	outs   dx,DWORD PTR ds:[esi]
  40faee:	outs   dx,DWORD PTR ds:[esi]
  40faef:	jb     0x40fab2
  40faf1:	sahf   
  40faf2:	jp     0x40fb71
  40faf4:	imul   edi,DWORD PTR [ecx-0x31],0x79
  40faf8:	pop    ebx
  40faf9:	mov    ebp,DWORD PTR [eax]
  40fafb:	dec    ebp
  40fafc:	lock fcomi st,st(2)
  40faff:	adc    ebx,DWORD PTR [edi-0x467dc450]
  40fb05:	cmp    BYTE PTR [ebp+0x158600a2],bl
  40fb0b:	cdq    
  40fb0c:	lods   eax,DWORD PTR ds:[esi]
  40fb0d:	inc    ebp
  40fb0e:	mov    bl,0x88
  40fb10:	add    al,0x20
  40fb12:	inc    eax
  40fb13:	and    al,BYTE PTR [eax+0x2e059d0a]
  40fb19:	cs loope 0x40fade
  40fb1c:	aam    0xe9
  40fb1e:	sub    ecx,DWORD PTR [ebx-0xcff6def]
  40fb24:	adc    BYTE PTR [eax+eiz*1+0x3ba9a3dd],ah
  40fb2b:	sub    ebx,DWORD PTR [ebp+0x41]
  40fb2e:	ins    BYTE PTR es:[edi],dx
  40fb2f:	js     0x40fb1c
  40fb31:	and    eax,0x79ebf14b
  40fb36:	sbb    edi,DWORD PTR ds:0xff6cd563
  40fb3c:	(bad)  
  40fb3d:	out    dx,eax
  40fb3e:	add    dl,bh
  40fb40:	mov    edi,0xe7fd5f67
  40fb45:	dec    esi
  40fb46:	js     0x40fb0d
  40fb48:	add    DWORD PTR [edi],esp
  40fb4a:	(bad)
  40fb4e:	mov    ch,0x92
  40fb50:	inc    ebx
  40fb51:	imul   ebp,DWORD PTR ds:0x2c3bd7dd,0x73
  40fb58:	or     DWORD PTR [eax+0x7b],esi
  40fb5b:	out    0x21,eax
  40fb5d:	dec    ecx
  40fb5e:	cs (bad) 
  40fb61:	ins    BYTE PTR es:[edi],dx
  40fb62:	test   al,0x69
  40fb64:	div    BYTE PTR [esi+0x24]
  40fb67:	xchg   edx,eax
  40fb68:	lods   eax,DWORD PTR ds:[esi]
  40fb69:	dec    ecx
  40fb6a:	mov    ebp,0xefcf99b6
  40fb6f:	lea    eax,[bx+di+0x73]
  40fb73:	or     edi,DWORD PTR [ebp+0x5cc32068]
  40fb79:	sub    al,BYTE PTR [edx-0x3e]
  40fb7c:	push   edi
  40fb7d:	xor    DWORD PTR [eax],0x41ae0de4
  40fb83:	adc    edi,ebx
  40fb85:	clc    
  40fb86:	adc    ax,0x61cb
  40fb8a:	fyl2xp1 
  40fb8c:	xchg   ebx,eax
  40fb8d:	inc    edx
  40fb8e:	sbb    ecx,DWORD PTR [esi+ebx*4-0x4]
  40fb92:	repnz in eax,dx
  40fb94:	stc    
  40fb95:	pushf  
  40fb96:	test   eax,0x3b86b995
  40fb9b:	jle    0x40fb25
  40fb9d:	xor    eax,0xda42b988
  40fba2:	pop    es
  40fba3:	xor    eax,0x7a178c4d
  40fba8:	imul   edi,DWORD PTR [ebx-0x7697518d],0xffffffff
  40fbaf:	jae    0x40fc24
  40fbb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbb2:	sbb    DWORD PTR [eax],ebx
  40fbb4:	rcr    ebx,cl
  40fbb6:	aad    0x49
  40fbb8:	call   0x2e96:0x896e5a30
  40fbbf:	gs mov ecx,0xe573c8fd
  40fbc5:	or     esp,DWORD PTR [esi]
  40fbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc8:	fild   QWORD PTR [edx+0x56]
  40fbcb:	mov    edi,?
  40fbcd:	inc    esp
  40fbce:	cwde   
  40fbcf:	xor    BYTE PTR [ebx+0xc],0x9
  40fbd3:	shl    BYTE PTR ds:0x9283784d,cl
  40fbd9:	push   ebp
  40fbda:	retf   0xe4e5
  40fbdd:	(bad)  
  40fbde:	aas    
  40fbdf:	push   cs
  40fbe0:	dec    ecx
  40fbe1:	retf   
  40fbe2:	data16 (bad) 
  40fbe4:	frstor [ecx]
  40fbe6:	inc    ebx
  40fbe7:	and    al,0x9f
  40fbe9:	dec    edx
  40fbea:	dec    ebp
  40fbeb:	push   esi
  40fbed:	scas   al,BYTE PTR es:[edi]
  40fbee:	sbb    DWORD PTR [esi-0x5b],ecx
  40fbf1:	loopne 0x40fc2e
  40fbf3:	jmp    0xb33d:0x887ff2fe
  40fbfa:	cmp    dh,BYTE PTR [ebx+0x10]
  40fbfd:	or     eax,0x29effaa2
  40fc02:	(bad)  
  40fc03:	call   0x5705:0x58f6a08
  40fc0a:	punpckhwd mm3,mm4
  40fc0d:	cmp    ecx,DWORD PTR [ecx+0x623428f]
  40fc13:	out    dx,eax
  40fc14:	iret   
  40fc15:	popa   
  40fc16:	mov    BYTE PTR [edx+0x4f],0x32
  40fc1a:	into   
  40fc1b:	sub    cl,BYTE PTR [eax]
  40fc1d:	push   edi
  40fc1e:	and    al,0x80
  40fc20:	imul   esp,ebp,0x6d1ffa4b
  40fc26:	prefetch (bad)
  40fc27:	or     eax,0x67e2f9de
  40fc2c:	mov    edx,0xe68dcce9
  40fc31:	jns    0x40fc30
  40fc33:	sbb    al,0x70
  40fc35:	pop    edx
  40fc36:	pop    ecx
  40fc37:	jl     0x40fc86
  40fc39:	xchg   esp,eax
  40fc3a:	or     esp,DWORD PTR [edi-0x2fd2fe9c]
  40fc40:	jo     0x40fc2d
  40fc42:	test   DWORD PTR [ebx+0x7],ecx
  40fc45:	or     DWORD PTR [esi+0x2f327e96],edi
  40fc4b:	out    0xdf,al
  40fc4d:	sbb    ah,BYTE PTR [bp+di+0x7060]
  40fc52:	or     eax,DWORD PTR [ebp+0x22adce33]
  40fc58:	js     0x40fcb3
  40fc5a:	push   esi
  40fc5b:	pop    ebp
  40fc5c:	stos   DWORD PTR es:[edi],eax
  40fc5d:	shr    DWORD PTR [ecx+0x6be0f69f],cl
  40fc63:	outs   dx,DWORD PTR ds:[esi]
  40fc64:	or     ebp,ebp
  40fc66:	pop    es
  40fc67:	cmp    BYTE PTR [ecx],ch
  40fc69:	xor    DWORD PTR [eax-0x50b5c1b8],0xffffffc0
  40fc70:	mov    dh,0xa7
  40fc72:	adc    al,0xed
  40fc74:	adc    al,0xc
  40fc76:	das    
  40fc77:	xor    eax,esi
  40fc79:	fs pop ss
  40fc7b:	push   cs
  40fc7c:	(bad)  
  40fc7d:	out    0x3c,al
  40fc7f:	pop    edx
  40fc81:	xchg   edi,eax
  40fc82:	sahf   
  40fc83:	mov    ds:0x1a6caa6e,eax
  40fc88:	mov    dl,0x70
  40fc8a:	push   edi
  40fc8b:	pop    ebp
  40fc8c:	icebp  
  40fc8d:	fbld   TBYTE PTR [esi]
  40fc8f:	push   esi
  40fc90:	push   ss
  40fc91:	jge    0x40fc26
  40fc93:	(bad)  
  40fc94:	add    ecx,edi
  40fc96:	scas   eax,DWORD PTR es:[edi]
  40fc97:	or     eax,0x11042454
  40fc9c:	xchg   ebx,eax
  40fc9d:	mov    esp,0x6550f0fa
  40fca2:	(bad)  
  40fca3:	popf   
  40fca4:	xor    BYTE PTR [ebx],0x90
  40fca7:	scas   al,BYTE PTR es:[edi]
  40fca8:	call   0x25432a49
  40fcad:	xor    BYTE PTR [edi+0x68],bl
  40fcb0:	sub    al,0x5b
  40fcb2:	inc    esi
  40fcb4:	adc    DWORD PTR [ebx+0x6f3f8100],esp
  40fcba:	fstp   TBYTE PTR [ebp+0x73546f7c]
  40fcc0:	sub    eax,0xe8174239
  40fcc5:	sbb    eax,0x64954f8f
  40fcca:	imul   BYTE PTR [ebx]
  40fccc:	or     eax,0x1de6b315
  40fcd1:	ins    BYTE PTR es:[edi],dx
  40fcd2:	mov    ah,0x5a
  40fcd4:	and    edi,DWORD PTR ds:0x1089d079
  40fcda:	sbb    al,0x1b
  40fcdc:	nop
  40fcdd:	mov    ds:0x1b44b3fc,eax
  40fce2:	icebp  
  40fce3:	fs xor al,cl
  40fce6:	(bad)  
  40fce7:	out    0x8,eax
  40fce9:	fbstp  TBYTE PTR [ebx]
  40fceb:	mov    ch,0xb6
  40fced:	pop    DWORD PTR [ebx]
  40fcef:	test   bl,0xdd
  40fcf2:	xor    al,0x56
  40fcf4:	pop    edi
  40fcf5:	sub    eax,0x2575cf74
  40fcfa:	pop    ss
  40fcfb:	cmp    eax,DWORD PTR [edi]
  40fcfd:	xchg   esi,eax
  40fcfe:	into   
  40fcff:	enter  0x607f,0x10
  40fd03:	lods   ax,WORD PTR ds:[esi]
  40fd05:	aaa    
  40fd06:	add    al,BYTE PTR [esp+eiz*2+0x14226812]
  40fd0d:	mov    ebp,0xf600df22
  40fd12:	pop    ds
  40fd13:	loop   0x40fd24
  40fd15:	das    
  40fd16:	icebp  
  40fd17:	ror    bh,1
  40fd19:	sub    dh,BYTE PTR [eax+edx*1+0x3e]
  40fd1d:	add    eax,0xbad861cd
  40fd22:	stos   BYTE PTR es:[edi],al
  40fd23:	mov    esi,0x66e9eaf4
  40fd28:	jae    0x40fd2f
  40fd2a:	jp     0x40fda0
  40fd2c:	pop    ebp
  40fd2d:	sti    
  40fd2e:	jmp    0x40fd37
  40fd30:	retf   
  40fd31:	nop
  40fd32:	fisttp WORD PTR [esi+0x78]
  40fd35:	mov    eax,ds:0xf97f2c54
  40fd3a:	dec    edx
  40fd3b:	retf   
  40fd3c:	cwde   
  40fd3d:	pushf  
  40fd3e:	mov    dh,0x54
  40fd40:	mov    ds:0xfa17a06e,eax
  40fd45:	jg     0x40fce0
  40fd47:	jmp    0xf974:0xcae3a346
  40fd4e:	clc    
  40fd4f:	inc    ebx
  40fd50:	shl    DWORD PTR [edx-0x23194bed],1
  40fd56:	in     eax,dx
  40fd57:	mov    dh,0x5c
  40fd59:	mov    ebp,0x829ba34a
  40fd5e:	jg     0x40fdd6
  40fd60:	mov    dl,0x41
  40fd62:	mov    dl,0xfb
  40fd64:	mov    esi,0x17eacc26
  40fd69:	repz and BYTE PTR [ebx],bh
  40fd6c:	dec    esp
  40fd6d:	cmp    al,0xa5
  40fd6f:	push   ss
  40fd70:	xchg   edx,eax
  40fd71:	inc    eax
  40fd72:	cmp    ebp,DWORD PTR ds:0x7fdb4c09
  40fd78:	fwait
  40fd79:	in     al,dx
  40fd7a:	xchg   esp,eax
  40fd7b:	adc    al,0x57
  40fd7d:	das    
  40fd7e:	retf   
  40fd7f:	push   ss
  40fd80:	pop    ds
  40fd81:	jnp    0x40fd24
  40fd83:	pop    edx
  40fd84:	out    0x46,eax
  40fd86:	sub    al,0x6
  40fd88:	loope  0x40fd6f
  40fd8a:	repz mov edi,0xb4dc0de5
  40fd90:	cmp    eax,0xbfdbe2c9
  40fd95:	call   0xf31a4d0
  40fd9a:	mov    ds:0x217a1312,eax
  40fd9f:	adc    DWORD PTR ds:0xd637e0a3,eax
  40fda5:	pusha  
  40fda6:	js     0x40fd72
  40fda8:	push   eax
  40fda9:	les    ebp,FWORD PTR [esi]
  40fdab:	pop    eax
  40fdac:	add    bh,BYTE PTR [ebx]
  40fdae:	ds add al,bh
  40fdb1:	adc    eax,0x836f8af0
  40fdb6:	fld    DWORD PTR [esp+edi*8-0x6c62380d]
  40fdbd:	xchg   edi,eax
  40fdbe:	cmp    BYTE PTR [ebp-0x25],ch
  40fdc1:	pop    ss
  40fdc2:	add    al,0x5a
  40fdc4:	mov    ah,0x79
  40fdc6:	ins    DWORD PTR es:[edi],dx
  40fdc7:	add    ch,0xdf
  40fdca:	cld    
  40fdcb:	out    0xcb,eax
  40fdcd:	(bad)  
  40fdce:	xchg   esi,eax
  40fdcf:	adc    al,BYTE PTR [ebx]
  40fdd1:	pop    edi
  40fdd2:	jmp    DWORD PTR ds:0x2b57be4d
  40fdd8:	push   cs
  40fdd9:	xchg   ebx,eax
  40fdda:	push   es
  40fddb:	lods   eax,DWORD PTR ds:[esi]
  40fddc:	(bad)  [edi]
  40fdde:	lock cmp ecx,DWORD PTR [edx-0x13]
  40fde2:	scas   al,BYTE PTR es:[edi]
  40fde3:	ins    DWORD PTR es:[edi],dx
  40fde4:	inc    ebp
  40fde5:	repnz mov cl,0xa0
  40fde8:	loop   0x40fda1
  40fdea:	int    0x49
  40fdec:	mov    dl,0xae
  40fdee:	rcr    BYTE PTR [ebp-0x772fca07],cl
  40fdf4:	mov    esp,0x55169e4c
  40fdf9:	mov    ah,0x7a
  40fdfb:	imul   ebp,ebp,0xefe7f284
  40fe01:	inc    edx
  40fe02:	push   esp
  40fe03:	mov    esi,0x697c97ff
  40fe08:	or     DWORD PTR [esi-0x1111018a],0xffffffa3
  40fe0f:	aam    0x23
  40fe11:	dec    ebp
  40fe12:	pop    ebx
  40fe13:	sahf   
  40fe14:	jl     0x40fe3e
  40fe16:	dec    esp
  40fe17:	mov    ebx,0x177b0922
  40fe1c:	and    BYTE PTR [edi-0x107aa216],bl
  40fe22:	clc    
  40fe23:	ss dec ecx
  40fe25:	push   edi
  40fe26:	popa   
  40fe27:	jmp    0x943221b9
  40fe2c:	adc    ebx,DWORD PTR [ebp-0xbf9b1f2]
  40fe32:	cmp    edx,DWORD PTR [edi]
  40fe34:	mov    al,0x64
  40fe36:	xor    eax,0x98255d35
  40fe3b:	jge    0x40fdd9
  40fe3d:	jns    0x40feb0
  40fe3f:	sbb    al,0x27
  40fe41:	lock mov edi,0x9efd2537
  40fe47:	or     cl,dh
  40fe49:	sbb    al,0x8f
  40fe4b:	(bad)  
  40fe4c:	jnp    0x40feb7
  40fe4e:	push   0xffffffc8
  40fe50:	ins    DWORD PTR es:[edi],dx
  40fe51:	pop    esp
  40fe52:	lds    ebp,FWORD PTR [esi+0x527a010d]
  40fe58:	add    BYTE PTR fs:[ecx],dl
  40fe5b:	rcl    DWORD PTR [esi+0x10],1
  40fe5e:	addr16 hlt 
  40fe60:	push   ebx
  40fe61:	test   al,0x84
  40fe63:	sbb    al,0x5
  40fe65:	mov    ds:0xd6db0afa,al
  40fe6a:	(bad)  
  40fe6b:	pop    ebx
  40fe6c:	ja     0x40fee0
  40fe6e:	test   BYTE PTR [eax-0x1d],dl
  40fe71:	aas    
  40fe72:	xor    DWORD PTR [ebp-0x5f],0xa7922d93
  40fe79:	mov    ch,0x53
  40fe7b:	sub    DWORD PTR [esi],ebp
  40fe7d:	dec    ecx
  40fe7e:	sub    BYTE PTR [esi+0x9],cl
  40fe81:	mov    esi,ebx
  40fe83:	xor    BYTE PTR [ecx],cl
  40fe85:	adc    ch,BYTE PTR [ebx+0x62]
  40fe88:	test   BYTE PTR [esi-0x4a],bh
  40fe8b:	cmc    
  40fe8c:	retf   
  40fe8d:	arpl   si,bx
  40fe8f:	push   cs
  40fe90:	and    al,0xa6
  40fe93:	sub    al,0x29
  40fe95:	aaa    
  40fe96:	push   ss
  40fe97:	test   al,0x7c
  40fe99:	sub    eax,0x53f8d373
  40fe9e:	pop    esi
  40fe9f:	cmp    eax,0x4840d461
  40fea4:	icebp  
  40fea5:	aad    0x11
  40fea7:	push   ss
  40fea8:	xchg   edx,eax
  40fea9:	dec    esp
  40feaa:	lods   eax,DWORD PTR ds:[esi]
  40feab:	add    ecx,ebp
  40fead:	imul   DWORD PTR [edi-0x3f]
  40feb0:	mov    al,0x3e
  40feb2:	cmp    edx,DWORD PTR [eax+0x31]
  40feb5:	fmul   st,st(5)
  40feb7:	in     eax,0xa4
  40feb9:	out    dx,eax
  40feba:	mov    bl,0x3b
  40febc:	cwde   
  40febd:	cwde   
  40febe:	in     al,dx
  40febf:	dec    eax
  40fec0:	xor    edx,edx
  40fec2:	shl    DWORD PTR [esi],0x6b
  40fec5:	movsx  ecx,WORD PTR [ebx]
  40fec8:	jne    0x40ff29
  40feca:	pop    esi
  40fecb:	jp     0x40fed0
  40fecd:	sbb    DWORD PTR [edi],ebp
  40fecf:	sub    al,dl
  40fed1:	hlt    
  40fed2:	sar    BYTE PTR [eax],cl
  40fed4:	gs push edi
  40fed6:	(bad)  
  40fed7:	jae    0x40fe8a
  40fed9:	jecxz  0x40fe8a
  40fedb:	mov    edi,0x29825852
  40fee0:	test   BYTE PTR [ebx],al
  40fee2:	aam    0xea
  40fee4:	mov    BYTE PTR [ebx+0x7c],dl
  40fee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fee8:	mov    ebp,0xf026821b
  40feed:	shl    BYTE PTR [eax-0x52],1
  40fef0:	test   al,0x10
  40fef2:	scas   al,BYTE PTR es:[edi]
  40fef3:	sti    
  40fef4:	mov    edi,0x63de39be
  40fef9:	retf   
  40fefa:	jb     0x40fec8
  40fefc:	inc    edi
  40fefd:	mov    dh,ah
  40feff:	push   eax
  40ff00:	sti    
  40ff01:	adc    edx,DWORD PTR [edi]
  40ff03:	ss lahf 
  40ff05:	xor    BYTE PTR [ebp+0x79624305],bl
  40ff0b:	je     0x40ff0e
  40ff0d:	mov    dl,0xac
  40ff0f:	test   BYTE PTR [ebx-0x690422a],cl
  40ff15:	jmp    0x40ff05
  40ff17:	test   DWORD PTR [edi],esp
  40ff19:	pop    esi
  40ff1a:	adc    eax,DWORD PTR [eax-0x2661e552]
  40ff20:	out    0x8e,eax
  40ff22:	push   ebx
  40ff23:	fisttp DWORD PTR [esi+ebx*8]
  40ff26:	dec    eax
  40ff27:	bound  edx,QWORD PTR [esi-0x10ea39b8]
  40ff2d:	cdq    
  40ff2e:	fadd   QWORD PTR [esi-0x40]
  40ff31:	retf   0x9b82
  40ff34:	mov    ch,0xbc
  40ff36:	out    0x70,eax
  40ff38:	(bad)  
  40ff39:	pusha  
  40ff3a:	das    
  40ff3b:	pop    ss
  40ff3c:	aad    0x90
  40ff3e:	mov    bl,0xdc
  40ff40:	push   0x76cf0c8b
  40ff45:	addr16 inc edx
  40ff47:	ja     0x40ff35
  40ff49:	sbb    eax,0x5a406837
  40ff4e:	cwde   
  40ff4f:	mov    cl,0xfe
  40ff51:	jb     0x40ff63
  40ff53:	mov    bl,0x3d
  40ff55:	mov    al,0x1e
  40ff57:	(bad)  
  40ff58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff59:	mov    ebx,0xf45df13e
  40ff5e:	clc    
  40ff5f:	aaa    
  40ff60:	stos   BYTE PTR es:[edi],al
  40ff61:	jle    0x40ffb2
  40ff63:	out    dx,al
  40ff64:	sbb    BYTE PTR ds:0x59705b07,cl
  40ff6a:	lds    edx,FWORD PTR [ebx-0x13134782]
  40ff70:	mov    eax,0x54f7a063
  40ff75:	jbe    0x40ff1c
  40ff77:	js     0x40ff9d
  40ff79:	fsubr  DWORD PTR [ecx]
  40ff7b:	adc    ecx,DWORD PTR [esi+0x42]
  40ff7e:	fsubr  QWORD PTR ds:0x2eefbccf
  40ff84:	outs   dx,DWORD PTR ds:[esi]
  40ff85:	xchg   esi,eax
  40ff86:	dec    ebp
  40ff87:	xor    bh,dh
  40ff89:	jb     0x40ff5a
  40ff8b:	enter  0x68f6,0x5a
  40ff8f:	bound  eax,QWORD PTR ds:0x863365c3
  40ff95:	fld    TBYTE PTR [edx]
  40ff97:	add    bh,BYTE PTR [ebp-0x3ffd9261]
  40ff9d:	loope  0x40ffe8
  40ff9f:	xor    cl,BYTE PTR [ebx-0x3d]
  40ffa2:	jle    0x40ffc1
  40ffa4:	push   ecx
  40ffa5:	and    al,0xd
  40ffa7:	adc    DWORD PTR [ebp+0x1c],ebx
  40ffaa:	jl     0x40ff59
  40ffac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffad:	jle    0x410003
  40ffaf:	add    ebp,DWORD PTR [edx-0x2a6a1670]
  40ffb5:	sub    bl,BYTE PTR [ebx+0x64]
  40ffb8:	repnz mov ebx,edx
  40ffbb:	lds    ecx,FWORD PTR [edx+0x71]
  40ffbe:	(bad)  
  40ffbf:	hlt    
  40ffc0:	mov    ds,WORD PTR [ebx-0x6ced8deb]
  40ffc6:	test   DWORD PTR [edx+0x2f],eax
  40ffc9:	cdq    
  40ffca:	pop    edx
  40ffcb:	js     0x40ff9f
  40ffcd:	icebp  
  40ffce:	xchg   edx,eax
  40ffcf:	in     eax,0x35
  40ffd1:	inc    esp
  40ffd2:	push   cs
  40ffd3:	pop    edi
  40ffd4:	sub    esp,DWORD PTR ds:0x8444e844
  40ffda:	xor    al,0x12
  40ffdc:	or     eax,0x5a1b80d5
  40ffe1:	push   0x8ba6616
  40ffe6:	xor    al,BYTE PTR [ebx-0x76]
  40ffe9:	das    
  40ffea:	test   eax,0x1bddfda5
  40ffef:	jg     0x40ff77
  40fff1:	jge    0x40ffcb
  40fff3:	sub    al,0x54
  40fff5:	jbe    0x41002d
  40fff7:	xchg   esp,eax
  40fff8:	shl    bh,1
  40fffa:	test   al,0xd7
  40fffc:	test   DWORD PTR ds:0x158291c6,esp
  410002:	pusha  
  410003:	dec    ebx
  410004:	jl     0x410046
  410006:	shr    BYTE PTR [edx-0x3b6d334],0xb7
  41000d:	inc    ebp
  41000e:	out    0x19,eax
  410010:	idiv   BYTE PTR [edi-0x3]
  410013:	icebp  
  410014:	adc    BYTE PTR [edi],dh
  410016:	push   edx
  410017:	adc    BYTE PTR [esi-0x743d1f98],dh
  41001d:	push   ebp
  41001e:	icebp  
  41001f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410020:	mov    DWORD PTR [eax-0x57d125e0],edx
  410026:	or     al,0x26
  410028:	test   DWORD PTR [ecx+0x18],ebp
  41002b:	add    eax,0x16a90f6b
  410030:	pop    esp
  410031:	shl    dl,1
  410033:	cdq    
  410034:	jb     0x4100a4
  410036:	jp     0x4100ad
  410038:	fs mov bl,0xaf
  41003b:	xchg   ebx,eax
  41003c:	bound  edx,QWORD PTR [ecx-0x28171977]
  410042:	int3   
  410043:	xchg   BYTE PTR [ecx-0x5a],ch
  410046:	in     al,dx
  410047:	stc    
  410048:	sbb    edi,DWORD PTR [ebx-0xd]
  41004b:	out    0xf8,al
  41004d:	or     al,0x39
  41004f:	mov    edx,0xeb9a3dd5
  410054:	xchg   ecx,eax
  410055:	mov    edi,0x83cfa995
  41005a:	and    ebx,DWORD PTR [edx+0x6f]
  41005d:	jo     0x41003f
  41005f:	dec    ebp
  410060:	imul   DWORD PTR [ebp-0xa]
  410063:	pop    ds
  410064:	leave  
  410065:	test   DWORD PTR [edi-0x1ab44ee6],0x68e312cf
  41006f:	push   es
  410070:	mov    bl,0x45
  410072:	pop    ds
  410073:	sahf   
  410074:	fmul   st,st(2)
  410076:	dec    ecx
  410077:	and    eax,0x83d9d676
  41007c:	repz or DWORD PTR [edx+0x1b83d0b0],edi
  410083:	push   ebx
  410084:	pop    ebx
  410085:	cmc    
  410086:	adc    eax,0x535b8376
  41008b:	mov    bh,BYTE PTR [ecx-0x5a]
  41008e:	or     DWORD PTR [esi+0x7d],0x550630c6
  410095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410096:	sub    dl,BYTE PTR [ebx+0x66]
  410099:	pop    ebx
  41009a:	int    0xcc
  41009c:	(bad)  
  41009d:	lods   eax,DWORD PTR ds:[esi]
  41009e:	mov    eax,ecx
  4100a0:	jnp    0x41007c
  4100a2:	sbb    BYTE PTR [edi-0x3a],dl
  4100a5:	ss pop bp
  4100a8:	out    dx,al
  4100a9:	lods   al,BYTE PTR ds:[esi]
  4100aa:	aam    0xa1
  4100ac:	call   0xff24d92c
  4100b1:	adc    DWORD PTR [edi],0x2e187dfe
  4100b7:	and    BYTE PTR [ecx+0x29],ch
  4100ba:	popf   
  4100bb:	cld    
  4100bc:	dec    eax
  4100bd:	xor    al,0xeb
  4100bf:	imul   ebx,DWORD PTR [ebx-0x43],0x7e
  4100c3:	add    cl,cl
  4100c5:	rcr    DWORD PTR [ebp+0x139abc02],1
  4100cb:	mov    eax,ds:0xc2928698
  4100d0:	inc    ebx
  4100d1:	stc    
  4100d2:	or     BYTE PTR [ecx],ah
  4100d4:	or     eax,0xcc9eadbd
  4100d9:	addr16 mov eax,ds:0x3e0f
  4100dd:	jno    0x410138
  4100df:	jg     0x4100bc
  4100e1:	pop    edx
  4100e2:	and    BYTE PTR [eax-0xa464418],cl
  4100e8:	pop    esi
  4100e9:	xlat   BYTE PTR ds:[ebx]
  4100ea:	rcl    cl,1
  4100ec:	or     DWORD PTR [esi-0x209e959c],edx
  4100f2:	int3   
  4100f3:	arpl   WORD PTR [esi-0x77],di
  4100f6:	dec    esi
  4100f7:	clc    
  4100f8:	jns    0x410125
  4100fa:	neg    bh
  4100fc:	or     ch,BYTE PTR [eax+esi*4+0x6fd981ff]
  410103:	inc    ecx
  410104:	fldenv [ebp-0x1f]
  410107:	outs   dx,DWORD PTR ds:[esi]
  410108:	retf   0xbe7b
  41010b:	aad    0x20
  41010d:	pop    ss
  41010e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41010f:	mov    ax,WORD PTR [ecx+0x6f0883a6]
  410116:	xor    al,0x8a
  410118:	repnz mov bl,0xb5
  41011b:	retf   
  41011c:	rcl    BYTE PTR [edx+0x29],0xfc
  410120:	jae    0x410129
  410122:	xor    al,0x83
  410124:	lds    ecx,FWORD PTR [edi]
  410126:	aas    
  410127:	xor    esp,DWORD PTR [edx+0x56]
  41012a:	push   ebp
  41012b:	outs   dx,DWORD PTR ds:[esi]
  41012c:	popf   
  41012d:	xchg   dl,dh
  41012f:	sbb    dl,BYTE PTR [esi+0x2601a2a5]
  410135:	sbb    ebp,DWORD PTR [ecx-0x22]
  410138:	or     al,0xf3
  41013a:	pop    esi
  41013b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	inc    edi
  41013e:	jo     0x4100f4
  410140:	mov    DWORD PTR [edx-0x6fef60ce],ebx
  410146:	push   0x388d2c98
  41014b:	mov    BYTE PTR [ecx+esi*2+0x649119d2],bl
  410152:	(bad)  
  410153:	dec    eax
  410154:	cs and eax,0x97b30516
  41015a:	push   esi
  41015b:	cs xchg ebx,eax
  41015d:	daa    
  41015e:	sbb    ch,BYTE PTR [edi]
  410160:	lods   eax,DWORD PTR ds:[esi]
  410161:	lea    ebp,[eax+eiz*1-0x24ecfe45]
  410168:	jmp    0x5abc3117
  41016d:	popf   
  41016e:	out    dx,eax
  41016f:	mov    cl,0xb
  410171:	and    al,0x58
  410173:	adc    al,0xe4
  410175:	sbb    dh,dh
  410177:	mov    dh,0x2
  410179:	jmp    0xf7b6d145
  41017e:	rcl    DWORD PTR [edi],1
  410180:	out    0xfe,al
  410182:	call   0xdaed1e84
  410187:	sbb    edi,ecx
  410189:	(bad)  
  41018a:	mov    eax,0x761bdbfd
  41018f:	inc    edx
  410190:	jns    0x41016f
  410192:	ret    
  410193:	push   ebp
  410194:	pop    ebp
  410195:	ds addr16 and al,0x21
  410199:	jle    0x410133
  41019b:	mov    edx,0xf1664526
  4101a0:	mov    bl,0xc3
  4101a2:	mov    dl,0x16
  4101a4:	cdq    
  4101a5:	mov    al,0xc1
  4101a7:	adc    ah,BYTE PTR [bx+di]
  4101aa:	mov    eax,0x33f842a5
  4101af:	jbe    0x41015b
  4101b1:	xchg   esi,eax
  4101b2:	lds    ecx,FWORD PTR [ebx-0x562942ac]
  4101b8:	mov    ?,WORD PTR [ebx-0x2a8318c]
  4101be:	sbb    al,0xf9
  4101c0:	js     0x410177
  4101c2:	vmaxsd xmm2,xmm6,QWORD PTR [ecx-0x77f63d6]
  4101ca:	test   al,0xf3
  4101cc:	stos   DWORD PTR es:[edi],eax
  4101cd:	xor    ecx,ecx
  4101cf:	test   eax,0xb8d5126f
  4101d4:	icebp  
  4101d5:	jecxz  0x410171
  4101d7:	sub    edx,edx
  4101d9:	inc    ecx
  4101da:	sbb    eax,0x66c44663
  4101df:	pop    ds
  4101e0:	pop    esp
  4101e1:	jns    0x410182
  4101e3:	and    BYTE PTR [edi-0x5bdc2d06],0xb2
  4101ea:	xor    bl,BYTE PTR [ecx-0x77]
  4101ed:	mov    BYTE PTR [esi-0x4b],al
  4101f0:	fisttp WORD PTR [edi]
  4101f2:	xchg   BYTE PTR [esi-0x17dcd26],bl
  4101f8:	loop   0x410252
  4101fa:	sahf   
  4101fb:	test   BYTE PTR [eax],ah
  4101fd:	lds    ecx,FWORD PTR [eax]
  4101ff:	aam    0x1d
  410201:	fdivr  QWORD PTR [eax+0x438036b3]
  410207:	xchg   ecx,eax
  410208:	mov    ch,0x70
  41020a:	sub    BYTE PTR ds:[edx],dh
  41020d:	dec    ecx
  41020e:	pop    ebx
  41020f:	rcl    DWORD PTR [ebx+0x2b],0x2c
  410213:	cmp    dh,BYTE PTR [esp+ebx*8-0x74def5d4]
  41021a:	lds    ebp,FWORD PTR [edi+0x3a]
  41021d:	sbb    ebx,ebp
  41021f:	fbld   TBYTE PTR [esi-0x19f43d0c]
  410225:	in     al,0xb3
  410227:	retf   0xad89
  41022a:	ds fs in al,0xa0
  41022e:	push   ecx
  41022f:	js     0x4101b4
  410231:	sub    eax,0x89f5ba7e
  410236:	enter  0x192d,0x21
  41023a:	add    ecx,DWORD PTR [edi-0x44]
  41023d:	jmp    0x410246
  41023f:	(bad)  
  410240:	iret   
  410241:	pop    edx
  410242:	cmp    DWORD PTR [edx-0x7ef48a48],ebp
  410248:	push   cs
  410249:	sub    al,0xeb
  41024b:	outs   dx,BYTE PTR ds:[esi]
  41024c:	dec    edx
  41024d:	inc    esi
  41024e:	mov    dl,0xea
  410250:	pushf  
  410251:	inc    ebp
  410252:	push   ecx
  410253:	outs   dx,DWORD PTR ds:[esi]
  410254:	or     ebp,DWORD PTR [esi+0x43]
  410257:	or     ecx,DWORD PTR [edx+esi*1-0x13]
  41025b:	jno    0x4102ad
  41025d:	sub    al,0xe0
  41025f:	mov    edx,0xdd587f7d
  410264:	mov    al,ds:0x981be7ce
  410269:	dec    ebx
  41026a:	xlat   BYTE PTR ds:[ebx]
  41026b:	lods   eax,DWORD PTR ds:[esi]
  41026c:	fild   DWORD PTR [edi]
  41026e:	out    dx,al
  41026f:	lds    esi,FWORD PTR [ebx]
  410271:	cmp    DWORD PTR [edx+0xb673b91],0xfffffff6
  410278:	sbb    DWORD PTR [esi-0x6a4f7286],0x7b
  41027f:	fwait
  410280:	shr    DWORD PTR [eax+0x4a],1
  410283:	adc    DWORD PTR ds:0xa892c1ae,eax
  410289:	int    0xe8
  41028b:	repz adc al,0x19
  41028e:	xor    DWORD PTR ds:0x4c56a432,edi
  410294:	mov    eax,ds:0x1a01ee4a
  410299:	xor    eax,0xec712062
  41029e:	scas   al,BYTE PTR es:[edi]
  41029f:	in     al,0x9
  4102a1:	xor    BYTE PTR [edi-0x1d],0x8
  4102a5:	mov    esp,?
  4102a7:	jmp    0x6427b730
  4102ac:	sub    DWORD PTR [ebx+ebp*1],edx
  4102af:	cwde   
  4102b0:	outs   dx,DWORD PTR ds:[esi]
  4102b1:	add    al,0x6e
  4102b3:	lods   al,BYTE PTR ds:[esi]
  4102b4:	push   ebx
  4102b5:	into   
  4102b6:	add    eax,0xd2a73bc0
  4102bb:	sbb    ah,bl
  4102bd:	(bad)  
  4102be:	in     al,0x79
  4102c0:	scas   al,BYTE PTR es:[edi]
  4102c1:	pusha  
  4102c2:	dec    ebp
  4102c3:	(bad)  
  4102c5:	scas   eax,DWORD PTR es:[edi]
  4102c6:	out    dx,al
  4102c7:	daa    
  4102c8:	mov    cl,0x52
  4102ca:	xor    eax,0x13b2394f
  4102cf:	nop
  4102d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102d1:	enter  0x231a,0x38
  4102d5:	jns    0x41031f
  4102d7:	sub    ah,dl
  4102d9:	push   DWORD PTR [edx+0x40]
  4102dc:	ins    BYTE PTR es:[edi],dx
  4102dd:	pop    edi
  4102de:	and    BYTE PTR [ecx-0x2d],cl
  4102e1:	outs   dx,DWORD PTR ds:[esi]
  4102e2:	dec    ecx
  4102e3:	jmp    DWORD PTR [eax+esi*8]
  4102e6:	xlat   BYTE PTR ds:[ebx]
  4102e7:	shr    ecx,0xdd
  4102ea:	jg     0x410301
  4102ec:	mov    ecx,0x3708f575
  4102f1:	jecxz  0x4102c6
  4102f3:	pop    esi
  4102f4:	xchg   esi,eax
  4102f5:	and    al,0xfb
  4102f7:	push   edx
  4102f8:	aas    
  4102f9:	jno    0x410288
  4102fb:	cmp    dl,BYTE PTR [edx]
  4102fd:	fld    DWORD PTR [esi+eax*2+0x35c36eee]
  410304:	(bad)  
  410305:	cmp    eax,0x45b614b0
  41030a:	retfw  0x627f
  41030e:	nop
  41030f:	pop    esp
  410310:	adc    DWORD PTR [esi],ebp
  410312:	or     eax,0xf145f7eb
  410317:	gs mov edx,0xbf222e80
  41031d:	jecxz  0x410388
  41031f:	int3   
  410320:	das    
  410321:	mov    dh,0x76
  410323:	loope  0x410345
  410325:	(bad)  
  410326:	sub    ch,BYTE PTR [ebx+0x1495cffa]
  41032c:	mov    ebx,DWORD PTR [esi+0x4ef5fa5f]
  410332:	aaa    
  410333:	into   
  410334:	sbb    eax,0xbe2837ab
  410339:	mov    fs:0xca246876,al
  41033f:	(bad)  
  410340:	out    0x15,eax
  410342:	aas    
  410343:	fstp   TBYTE PTR [esi-0x34]
  410346:	cmp    DWORD PTR ds:0x36ca5b85,ebx
  41034c:	dec    edi
  41034d:	add    al,0xfc
  41034f:	inc    esi
  410350:	pop    ecx
  410351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410352:	xor    ecx,DWORD PTR [eax-0x5cbee7e1]
  410358:	outs   dx,DWORD PTR ds:[esi]
  410359:	scas   eax,DWORD PTR es:[edi]
  41035a:	loopne 0x410387
  41035c:	add    DWORD PTR [ecx+0x20a0982d],ebp
  410362:	dec    ebp
  410363:	or     DWORD PTR [edx+0x6eece101],ebp
  410369:	fldcw  WORD PTR [esi+esi*4+0x1c]
  41036d:	push   edi
  41036e:	out    0x52,eax
  410370:	inc    esi
  410371:	sbb    al,bl
  410373:	mov    WORD PTR [ebx+edx*2],?
  410376:	pop    eax
  410377:	dec    ecx
  410378:	clc    
  410379:	(bad)
  41037c:	mov    ?,WORD PTR [esi+0x34b624a8]
  410382:	dec    ecx
  410383:	jg     0x410337
  410385:	outs   dx,DWORD PTR ds:[esi]
  410386:	ficomp WORD PTR [ebp-0x68]
  410389:	retf   
  41038a:	mov    dh,0x29
  41038c:	mov    edi,0x4201dff
  410391:	mov    ds:0x3f4b85a1,al
  410396:	retf   0x9497
  410399:	test   DWORD PTR [eax+0x19a5aaea],0xcd51416b
  4103a3:	stos   DWORD PTR es:[edi],eax
  4103a4:	mov    ecx,0xfe5d0ae9
  4103a9:	neg    BYTE PTR [esi-0x4e7fda1d]
  4103af:	cwde   
  4103b0:	xchg   esp,eax
  4103b1:	cmc    
  4103b2:	int    0x10
  4103b4:	ror    BYTE PTR [edi+0x747338ae],0xe0
  4103bb:	jae    0x410399
  4103bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103be:	pop    es
  4103bf:	xchg   esp,eax
  4103c0:	lods   eax,DWORD PTR ds:[esi]
  4103c1:	mov    ebx,0xfc6aa500
  4103c7:	rcl    BYTE PTR [ecx+0x69870de8],1
  4103cd:	leave  
  4103ce:	push   esp
  4103cf:	adc    al,0xf
  4103d1:	mov    ds:0x7c7a7836,eax
  4103d6:	dec    ecx
  4103d7:	dec    esi
  4103d8:	jg     0x410405
  4103da:	pusha  
  4103db:	int3   
  4103dc:	sbb    esp,DWORD PTR [ecx+0x75b815a7]
  4103e2:	in     eax,0x91
  4103e4:	and    al,0xb1
  4103e6:	jb     0x410452
  4103e8:	sub    BYTE PTR [ebp-0x3c7d24c5],0xd1
  4103ef:	sub    eax,0x901e7969
  4103f4:	xchg   edi,eax
  4103f5:	inc    esp
  4103f6:	xor    ecx,DWORD PTR [esi+0x2d]
  4103f9:	sbb    ch,BYTE PTR [ebx]
  4103fb:	pushf  
  4103fc:	test   eax,0x8aa88e36
  410401:	inc    edi
  410402:	int3   
  410403:	pop    eax
  410404:	(bad)  
  410405:	ror    DWORD PTR [ecx],cl
  410407:	xchg   edx,eax
  410408:	adc    ebx,DWORD PTR [esi+0x7e754b87]
  41040e:	daa    
  41040f:	inc    ebx
  410410:	enter  0x3afa,0x54
  410414:	mov    al,0x6f
  410416:	mov    ah,0x5b
  410418:	adc    dh,BYTE PTR [ecx+edx*1]
  41041b:	ror    DWORD PTR [ebx+0x40],cl
  41041e:	adc    eax,0xbac61cb2
  410423:	adc    BYTE PTR [eax-0x1a],dl
  410426:	pop    esp
  410427:	lahf   
  410428:	xchg   ebp,eax
  410429:	inc    esi
  41042a:	dec    edx
  41042b:	aaa    
  41042c:	sar    DWORD PTR [ebp+0x48],1
  41042f:	dec    eax
  410430:	arpl   sp,dx
  410432:	mov    edx,0xc36985a0
  410437:	jmp    0x8f67:0x7398f4a7
  41043e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043f:	sbb    eax,0xb7b203e
  410444:	inc    edx
  410445:	mov    eax,ds:0xe082e698
  41044a:	(bad)  
  41044c:	mov    ecx,es
  41044e:	mov    ds:0x8c1620ed,eax
  410453:	sbb    DWORD PTR [ecx+0x59],ebx
  410456:	div    cl
  410458:	jg     0x410413
  41045a:	and    eax,0x8be88169
  41045f:	nop
  410460:	imul   esi,DWORD PTR [eax-0x3a248b17],0xea3411a1
  41046a:	adc    DWORD PTR [edi+0x3d],eax
  41046d:	icebp  
  41046e:	repnz mov ebp,0xe261ef31
  410474:	sub    bl,BYTE PTR [esi]
  410476:	enter  0x134a,0x32
  41047a:	sbb    eax,0xf9ba99cb
  41047f:	scas   eax,DWORD PTR es:[edi]
  410480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410481:	push   ebp
  410482:	dec    ebx
  410483:	(bad)  
  410484:	mov    ds:0xa4fabac1,eax
  410489:	lds    eax,FWORD PTR [edx+0x17d28674]
  41048f:	dec    esp
  410490:	int3   
  410491:	pop    ss
  410492:	lods   eax,DWORD PTR ds:[esi]
  410493:	sub    eax,0x49acfb06
  410498:	(bad)  
  41049a:	mov    ?,WORD PTR [ebx+0x36]
  41049d:	and    esi,DWORD PTR [ecx]
  41049f:	(bad)
  4104a3:	jno    0x4104c1
  4104a5:	test   eax,0x9f11b6be
  4104aa:	jp     0x410509
  4104ac:	jb     0x4104ea
  4104ae:	mov    ecx,fs
  4104b0:	mov    bh,0xec
  4104b2:	xor    al,0x21
  4104b4:	sub    eax,0xf59518f1
  4104b9:	sar    BYTE PTR [esi],cl
  4104bb:	cmc    
  4104bc:	sar    DWORD PTR [eax-0x7df728b0],1
  4104c2:	outs   dx,BYTE PTR ds:[esi]
  4104c3:	stos   DWORD PTR es:[edi],eax
  4104c4:	mov    ds:0xc93043ea,eax
  4104c9:	addr16 out dx,eax
  4104cb:	fimul  WORD PTR [eax+0x1d3477a3]
  4104d1:	adc    DWORD PTR [ebp-0x74e4f378],esp
  4104d7:	add    ebp,eax
  4104d9:	in     eax,0x34
  4104db:	adc    BYTE PTR [edi],ch
  4104dd:	dec    edi
  4104de:	or     ax,0x84ed
  4104e2:	mov    edi,0xe8622673
  4104e7:	pop    ds
  4104e8:	inc    edx
  4104e9:	and    ch,BYTE PTR [edi]
  4104eb:	pop    ebx
  4104ec:	(bad)  
  4104ed:	scas   al,BYTE PTR es:[edi]
  4104ee:	adc    BYTE PTR [ebx],ah
  4104f0:	mov    ecx,0x802179f9
  4104f5:	lea    eax,[ebx+0x30]
  4104f8:	stos   DWORD PTR es:[edi],eax
  4104f9:	iret   
  4104fa:	jne    0x410509
  4104fc:	dec    esp
  4104fd:	scas   al,BYTE PTR es:[edi]
  4104fe:	sub    edx,DWORD PTR [ecx-0x61]
  410501:	lods   al,BYTE PTR ds:[esi]
  410502:	rcr    dl,0xa1
  410505:	inc    esp
  410506:	lahf   
  410507:	pop    ebp
  410508:	fldpi  
  41050a:	or     eax,0xf0376659
  41050f:	mov    edx,0x54f4d4fe
  410514:	ror    DWORD PTR [ebp+edi*2-0x51],0x12
  410519:	or     BYTE PTR [ecx+0x5c],ah
  41051c:	aam    0x4b
  41051e:	sbb    eax,0x9cca30cf
  410523:	inc    ebp
  410524:	push   0x2dca51c6
  410529:	lds    edx,FWORD PTR ds:0xf3ce05bb
  41052f:	sub    BYTE PTR [ecx],al
  410531:	cmp    ebp,DWORD PTR ds:0xbb11c4d8
  410537:	sbb    BYTE PTR [edi+0x74],bh
  41053a:	fs je  0x41055e
  41053d:	ror    DWORD PTR [edx-0x73],cl
  410540:	fs sbb al,0xda
  410543:	les    ecx,FWORD PTR ds:0x7eea31d7
  410549:	add    BYTE PTR [ecx+0x34380494],cl
  41054f:	push   0x913ae6af
  410554:	aam    0xa9
  410556:	ds xor al,0x61
  410559:	or     al,BYTE PTR [edx+ebp*8]
  41055c:	pop    ebx
  41055d:	(bad)  
  41055e:	loop   0x410521
  410560:	cdq    
  410561:	jb     0x410576
  410563:	neg    BYTE PTR [edi+ecx*8]
  410566:	add    DWORD PTR [ebx+ebx*8],esi
  410569:	arpl   sp,di
  41056b:	scas   eax,DWORD PTR es:[edi]
  41056c:	nop
  41056d:	cmp    BYTE PTR [ebx],ch
  41056f:	aad    0x51
  410571:	push   es
  410572:	pop    ds
  410573:	mov    ch,BYTE PTR [ebp-0x1bee619e]
  410579:	dec    esi
  41057a:	ins    DWORD PTR es:[edi],dx
  41057b:	mov    al,0x94
  41057d:	xor    eax,0x32dae878
  410582:	adc    eax,0xf1c97eaf
  410587:	push   eax
  410588:	inc    ebx
  410589:	pop    edi
  41058a:	add    ah,BYTE PTR [ecx+ebx*2+0x2f]
  41058e:	fistp  QWORD PTR [edi]
  410590:	ja     0x4105a9
  410592:	add    eax,0xe52b63aa
  410597:	loope  0x410594
  410599:	xchg   ebp,eax
  41059a:	fsubr  st(2),st
  41059c:	xor    DWORD PTR [ebp+ecx*2-0x4e180a55],edi
  4105a3:	sbb    DWORD PTR [esp+ebp*1-0x7c0fc6f2],esp
  4105aa:	jle    0x41055d
  4105ac:	shr    edi,cl
  4105ae:	push   eax
  4105af:	push   ecx
  4105b0:	in     al,0xf1
  4105b2:	mov    esp,DWORD PTR [eax]
  4105b4:	sub    eax,0x1082b7ae
  4105b9:	mov    dh,0x65
  4105bb:	cmp    BYTE PTR [eax-0x2e96ed9d],bh
  4105c1:	inc    edx
  4105c2:	inc    ebp
  4105c3:	mov    ch,0xcd
  4105c5:	dec    edi
  4105c6:	mov    edx,?
  4105c8:	hlt    
  4105c9:	mov    bl,0x6d
  4105cb:	push   ebp
  4105cc:	mov    cs,eax
  4105ce:	out    0xbe,al
  4105d0:	xor    eax,0x15a3b84f
  4105d5:	inc    esp
  4105d6:	test   al,0xee
  4105d8:	(bad)  
  4105d9:	sub    BYTE PTR [esp+ebx*4-0x2b9ec0fd],bl
  4105e0:	push   0xffffff98
  4105e2:	leave  
  4105e3:	cmc    
  4105e4:	xor    al,0x3
  4105e6:	and    DWORD PTR [ebx],0x1841dfba
  4105ec:	add    al,0xe7
  4105ee:	add    al,0x96
  4105f0:	add    eax,0xe10952e2
  4105f5:	popf   
  4105f6:	test   DWORD PTR [edi-0x26157ac5],eax
  4105fc:	out    dx,eax
  4105fd:	repnz rcl DWORD PTR [eax+0x5b335d5c],1
  410604:	pop    edx
  410605:	and    eax,edx
  410607:	ss xchg edi,ecx
  41060a:	int3   
  41060b:	cwde   
  41060c:	add    al,0xd1
  41060e:	pop    edx
  41060f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410610:	xchg   ebp,eax
  410611:	jle    0x410625
  410613:	cdq    
  410614:	pushf  
  410615:	scas   al,BYTE PTR es:[edi]
  410616:	inc    ebp
  410617:	dec    ebx
  410618:	xchg   edi,eax
  410619:	push   eax
  41061a:	sub    al,0x94
  41061c:	push   eax
  41061d:	pop    eax
  41061e:	adc    BYTE PTR [esi+0x3f],bl
  410621:	ja     0x410667
  410623:	xchg   ecx,eax
  410624:	dec    ecx
  410625:	dec    edi
  410626:	(bad)  
  410627:	cld    
  410628:	and    DWORD PTR [edi+ecx*4+0x2986fee2],ecx
  41062f:	or     BYTE PTR [esi-0x567d83d0],ah
  410635:	push   ecx
  410636:	dec    ecx
  410637:	cmp    BYTE PTR [esi],dh
  410639:	and    ch,BYTE PTR [eax-0x49]
  41063c:	repz loopne 0x4105c7
  41063f:	ret    0xefa3
  410642:	add    cl,BYTE PTR fs:[esi+0x509dbc7b]
  410649:	pushf  
  41064a:	in     eax,0x5f
  41064c:	or     ah,cl
  41064e:	sub    bh,bl
  410650:	stos   BYTE PTR es:[edi],al
  410651:	lods   eax,DWORD PTR ds:[esi]
  410652:	push   edx
  410653:	sbb    BYTE PTR [eax+0x2d221865],al
  410659:	push   ecx
  41065a:	fistp  WORD PTR [edx]
  41065c:	jg     0x4106a2
  41065e:	in     eax,dx
  41065f:	jp     0x410604
  410661:	xor    BYTE PTR [ebp-0x59],dl
  410664:	(bad)  
  410665:	dec    ebx
  410666:	mov    ds:0x96dbca68,al
  41066b:	ins    BYTE PTR es:[edi],dx
  41066c:	mov    al,0xd5
  41066e:	dec    esp
  41066f:	mov    ecx,0xf18e48f9
  410674:	mov    edx,ebx
  410676:	(bad)  
  410677:	iret   
  410678:	mov    ch,0xb7
  41067a:	arpl   WORD PTR [esi],sp
  41067c:	cmp    BYTE PTR [esi-0x346106e5],al
  410682:	fwait
  410683:	or     BYTE PTR [edi],al
  410685:	dec    ebx
  410686:	rcl    BYTE PTR [ebx+0x536dcf14],cl
  41068c:	mov    ebp,0xfaf3931c
  410691:	push   ebp
  410692:	pop    ecx
  410693:	pop    ecx
  410694:	inc    ecx
  410695:	sbb    eax,0xc38c2e43
  41069a:	jecxz  0x41064d
  41069c:	sbb    BYTE PTR [edx+0x590f35b7],cl
  4106a2:	call   0xa8f9f8f6
  4106a7:	repz dec ebp
  4106a9:	imul   ebp,DWORD PTR [edi+eiz*8+0x2a],0x49
  4106ae:	lods   al,BYTE PTR ds:[esi]
  4106af:	js     0x41068a
  4106b1:	popf   
  4106b2:	dec    esi
  4106b3:	sbb    dh,cl
  4106b5:	(bad)  
  4106b6:	xor    eax,0x485ca73e
  4106bb:	lds    edi,FWORD PTR [edx+0x28e01f76]
  4106c1:	sub    ah,BYTE PTR [edx+0x49]
  4106c4:	sbb    BYTE PTR [esi-0x47d66c3f],0xdc
  4106cb:	mov    ch,0x91
  4106cd:	fidiv  DWORD PTR [edi]
  4106cf:	into   
  4106d0:	xchg   edi,eax
  4106d1:	jmp    0xc30b:0xac4b8cd5
  4106d8:	sub    al,0x8d
  4106da:	mov    ch,0xb4
  4106dc:	lahf   
  4106dd:	xchg   edx,eax
  4106de:	(bad)  
  4106df:	retf   
  4106e0:	xor    DWORD PTR ds:0xf0371f6,edx
  4106e6:	add    bh,BYTE PTR [ebx+0x75]
  4106e9:	push   0xffffff9d
  4106eb:	cmp    DWORD PTR [esi],0x6cd9eff3
  4106f1:	lock mov al,ds:0x6b86aa65
  4106f7:	ins    DWORD PTR es:[edi],dx
  4106f8:	sub    dl,ch
  4106fa:	out    0x26,al
  4106fc:	add    al,0x20
  4106fe:	arpl   WORD PTR [ebp-0x7cda3783],di
  410704:	adc    DWORD PTR [ecx],esi
  410706:	jne    0x410695
  410708:	pop    eax
  410709:	jl     0x4106de
  41070b:	ss jae 0x41068e
  41070e:	dec    esi
  41070f:	fchs   
  410711:	(bad)  
  410713:	dec    eax
  410714:	(bad)  
  410715:	cmp    edx,DWORD PTR ds:0xe6a7903b
  41071b:	ret    0x4c78
  41071e:	xchg   edx,eax
  41071f:	mov    ebp,0xa59bbd07
  410724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410725:	std    
  410726:	dec    edx
  410727:	mov    cl,0x57
  410729:	and    al,0x67
  41072b:	adc    al,0x9
  41072d:	and    BYTE PTR [edx],dl
  41072f:	mov    al,0xaa
  410731:	out    dx,eax
  410732:	(bad)  
  410734:	sahf   
  410735:	ret    0x2cb5
  410738:	inc    esp
  410739:	test   BYTE PTR [ecx+0x2689b33f],ch
  41073f:	or     edi,DWORD PTR [edx]
  410741:	sub    edx,esi
  410743:	cmp    eax,0x256e5520
  410748:	jmp    0x4106d2
  41074a:	sbb    cl,bl
  41074c:	inc    ecx
  41074d:	jmp    0x410722
  41074f:	icebp  
  410750:	loope  0x4107b0
  410752:	push   edx
  410753:	mov    edi,0x86c35077
  410758:	shr    BYTE PTR [ecx],cl
  41075a:	aad    0x6c
  41075c:	mov    bh,0x8e
  41075e:	(bad)  
  41075f:	hlt    
  410760:	gs xchg ebx,eax
  410762:	sub    dl,BYTE PTR [ebx+0x4871d2a8]
  410768:	pop    ecx
  410769:	mov    eax,ds:0x36ed03ca
  41076e:	inc    eax
  41076f:	pop    ss
  410770:	and    eax,0x6a0e564c
  410775:	jno    0x41071b
  410777:	jnp    0x41074d
  410779:	mov    ebx,0x9fcfd4c4
  41077e:	jmp    0xdbb0:0x12111d96
  410785:	xor    bh,bh
  410787:	sbb    dh,cl
  410789:	inc    edx
  41078a:	or     ebx,DWORD PTR [ebx+0x7d528]
  410790:	add    ebp,edx
  410792:	sub    BYTE PTR [ebp-0x22],bh
  410795:	xlat   BYTE PTR ds:[ebx]
  410796:	rcl    DWORD PTR [ebp+0x64],cl
  410799:	inc    edx
  41079a:	sbb    cl,BYTE PTR [edi-0x3f]
  41079d:	jg     0x410772
  41079f:	dec    eax
  4107a0:	and    al,0xfa
  4107a2:	fprem1 
  4107a4:	jbe    0x4107f1
  4107a6:	gs or  eax,0x4581499d
  4107ac:	and    cl,bh
  4107ae:	repnz push edi
  4107b0:	ret    0x6227
  4107b3:	ret    0x2447
  4107b6:	rcl    ch,cl
  4107b8:	adc    eax,0xfad7c349
  4107bd:	jg     0x4107cb
  4107bf:	fs mov al,al
  4107c2:	fbstp  TBYTE PTR [esi+0x26c4f3bf]
  4107c8:	js     0x4107cf
  4107ca:	scas   eax,DWORD PTR es:[edi]
  4107cb:	je     0x41076c
  4107cd:	adc    DWORD PTR [ebx+ebp*8+0x642e46c3],edi
  4107d4:	sub    ah,BYTE PTR ds:0x1bfd099b
  4107da:	and    ch,BYTE PTR [ebp-0x1fcb86b7]
  4107e0:	fisttp QWORD PTR [edi-0x54]
  4107e3:	rcl    DWORD PTR [edi+0x18],0x6a
  4107e7:	and    ebx,esi
  4107e9:	jnp    0x410815
  4107eb:	in     eax,0xf4
  4107ed:	out    dx,al
  4107ee:	(bad)  
  4107ef:	popf   
  4107f0:	inc    ebp
  4107f1:	je     0x410842
  4107f3:	xor    al,ch
  4107f5:	ins    DWORD PTR es:[edi],dx
  4107f6:	xchg   ch,ah
  4107f8:	cld    
  4107f9:	jns    0x41084a
  4107fb:	fmul   st(7),st
  4107fd:	lea    ebp,[eax]
  4107ff:	sbb    ebp,DWORD PTR [esi+edx*1-0x2af62cc9]
  410806:	jle    0x410869
  410808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410809:	or     ebx,DWORD PTR [edx]
  41080b:	sbb    BYTE PTR [ebp-0x6c2e3805],dh
  410811:	cmp    BYTE PTR [edx+0x45],dl
  410814:	cmp    eax,0x89cf77b8
  410819:	fimul  WORD PTR [edi+0x2b]
  41081c:	shr    dl,cl
  41081e:	je     0x410857
  410820:	stc    
  410821:	test   BYTE PTR [ebp+0x5562e9bf],al
  410827:	scas   al,BYTE PTR es:[edi]
  410828:	inc    ebp
  410829:	jno    0x4107e9
  41082b:	aas    
  41082c:	mov    ebp,0xcf5deb0
  410831:	push   cs
  410832:	push   ebp
  410833:	lds    esi,FWORD PTR [esp+esi*8]
  410836:	aaa    
  410837:	ds call 0x6d4e199e
  41083d:	cwde   
  41083e:	or     bl,BYTE PTR [eax+0x6668f233]
  410844:	js     0x4107c7
  410846:	add    eax,DWORD PTR [ecx-0x228a78e9]
  41084c:	cdq    
  41084d:	jmp    0x970:0x47db0b8e
  410854:	mov    dh,0x37
  410856:	jg     0x41083d
  410858:	push   0xffffffb2
  41085a:	aad    0x7f
  41085c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41085d:	mov    edx,0x77f205dc
  410862:	ficomp DWORD PTR [eax-0x173303b3]
  410868:	cli    
  410869:	sub    al,0xc6
  41086b:	repz cmp edi,DWORD PTR [edx-0x493a4db2]
  410872:	(bad)  
  410873:	dec    esi
  410874:	xchg   BYTE PTR [edi],bl
  410876:	sbb    DWORD PTR [edi+0x32],eax
  410879:	ja     0x41087d
  41087b:	cld    
  41087c:	add    cl,BYTE PTR [ecx-0x69d554c9]
  410882:	cmp    dl,BYTE PTR [ebx-0x3c]
  410885:	xchg   ebx,eax
  410886:	aam    0xd4
  410888:	pop    ebx
  410889:	mov    ch,0x6e
  41088b:	rep lods eax,DWORD PTR ds:[esi]
  41088d:	nop
  41088e:	lea    ebp,[esp+ecx*8]
  410891:	stos   BYTE PTR es:[edi],al
  410892:	fsub   QWORD PTR [ecx+0x5]
  410895:	enter  0x1184,0x3f
  410899:	inc    ebx
  41089a:	pop    es
  41089b:	adc    al,0xbc
  41089d:	cmp    DWORD PTR cs:[ecx-0x1],ebx
  4108a1:	sub    eax,0xa22681a4
  4108a6:	inc    edi
  4108a7:	inc    edi
  4108a8:	push   ebx
  4108a9:	aam    0xfe
  4108ab:	(bad)  
  4108ac:	mov    edx,0x3e900250
  4108b1:	inc    edi
  4108b2:	mov    ebp,0xbcf3a40a
  4108b7:	push   edi
  4108b8:	stos   BYTE PTR es:[edi],al
  4108b9:	xchg   ecx,ebp
  4108bb:	cld    
  4108bc:	push   eax
  4108bd:	dec    eax
  4108be:	iret   
  4108bf:	or     ebp,eax
  4108c1:	sub    dh,bh
  4108c3:	ficomp WORD PTR [edi+0x588ee63f]
  4108c9:	push   ecx
  4108ca:	and    BYTE PTR [edi-0x42a57222],al
  4108d0:	cmc    
  4108d1:	push   eax
  4108d2:	add    eax,0x1b9a5bf5
  4108d7:	stos   BYTE PTR es:[edi],al
  4108d8:	out    0x9e,eax
  4108da:	mov    dl,0x13
  4108dc:	or     bl,cl
  4108de:	cmp    edx,edi
  4108e0:	out    0xfa,eax
  4108e2:	pushf  
  4108e3:	cmp    al,0x9c
  4108e5:	test   eax,0x104ec794
  4108ea:	jbe    0x410907
  4108ec:	sub    ecx,0x3e
  4108ef:	cmc    
  4108f0:	adc    BYTE PTR [ebp-0x7f],0xe1
  4108f4:	cmp    ebp,edx
  4108f6:	mov    DWORD PTR [edi+0x75d892f7],eax
  4108fc:	je     0x410978
  4108fe:	enter  0x1875,0x2f
  410902:	aaa    
  410903:	sahf   
  410904:	ds sub eax,0xe24fb82b
  41090a:	xor    DWORD PTR [edx-0x2b],ecx
  41090d:	jo     0x410969
  41090f:	inc    edx
  410910:	add    BYTE PTR ds:0x4fbda220,dl
  410916:	xor    eax,0xd18a0836
  41091b:	xchg   ecx,eax
  41091c:	aaa    
  41091d:	xchg   edi,eax
  41091e:	xor    ebx,DWORD PTR [ebx-0x36a1d6b]
  410924:	add    eax,0xc64e0106
  410929:	repnz and edx,ebx
  41092c:	xchg   edi,eax
  41092d:	mov    ebx,0xf197a074
  410932:	jnp    0x410983
  410934:	scas   al,BYTE PTR es:[edi]
  410935:	cmp    ebx,DWORD PTR [edx]
  410937:	(bad)
  41093a:	xlat   BYTE PTR ds:[ebx]
  41093b:	pop    es
  41093c:	fmul   st,st(3)
  41093e:	call   0x91d8:0x38332f14
  410945:	ret    
  410946:	loope  0x410950
  410948:	pop    ds
  410949:	xchg   dl,cl
  41094b:	lods   eax,DWORD PTR ds:[esi]
  41094c:	jb     0x41096d
  41094e:	xor    al,0x3a
  410950:	in     al,dx
  410951:	pop    ebx
  410952:	jbe    0x4109aa
  410954:	xlat   BYTE PTR ds:[ebx]
  410955:	inc    BYTE PTR [eax-0x5d2c6a0b]
  41095b:	mov    ebp,0x494f2063
  410960:	mov    ds:0xce001b3d,al
  410965:	and    al,0xf4
  410967:	mov    esp,0xc59250a5
  41096c:	sub    DWORD PTR [edx-0x77],ebp
  41096f:	retf   
  410970:	jb     0x4109a1
  410972:	cdq    
  410973:	jb     0x4109ac
  410975:	mov    ?,WORD PTR [ebx]
  410977:	in     al,0xa0
  410979:	out    dx,al
  41097a:	test   eax,0x4ceaa323
  41097f:	test   BYTE PTR [edi+0x49852867],dh
  410985:	jns    0x4109df
  410987:	jp     0x410933
  410989:	mov    ds:0x11f4c3b,eax
  41098e:	(bad)  
  410990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410991:	jmp    0x410991
  410993:	mov    bl,0xf2
  410995:	(bad)  
  410996:	test   DWORD PTR [eax],ebx
  410998:	push   ebp
  410999:	mov    eax,DWORD PTR [edx+0x45d9c3b8]
  41099f:	arpl   bp,bp
  4109a1:	in     eax,0x44
  4109a3:	dec    eax
  4109a4:	lahf   
  4109a5:	ret    
  4109a6:	icebp  
  4109a7:	dec    edx
  4109a8:	lock mov bl,0x33
  4109ab:	test   al,0xef
  4109ad:	clc    
  4109ae:	cwde   
  4109af:	dec    ebx
  4109b0:	mov    ds:0xf947d4f8,eax
  4109b5:	mov    ?,edx
  4109b7:	fidiv  DWORD PTR [eax+0x5]
  4109ba:	mov    edi,0x78822f87
  4109bf:	es int3 
  4109c1:	mov    cl,0x31
  4109c3:	and    ecx,DWORD PTR [ebp-0x10]
  4109c6:	xchg   DWORD PTR [edi-0x1a5783ef],edx
  4109cc:	mov    dl,0x27
  4109ce:	mov    dh,0x87
  4109d0:	aas    
  4109d1:	sub    eax,0x87a660c6
  4109d6:	ins    DWORD PTR es:[edi],dx
  4109d7:	in     eax,0x7c
  4109d9:	inc    ebp
  4109da:	pop    edx
  4109db:	jmp    0xb662817b
  4109e0:	mov    al,ds:0x7bac1d50
  4109e5:	clc    
  4109e6:	lea    esi,[ecx-0x638a0061]
  4109ec:	stc    
  4109ed:	test   DWORD PTR [ecx+0x3ef23d96],0xa01e2fa3
  4109f7:	inc    eax
  4109f8:	xor    dh,BYTE PTR [ebx]
  4109fa:	imul   ecx,edx,0xc204d124
  410a00:	int3   
  410a01:	out    dx,eax
  410a02:	jne    0x41099f
  410a04:	leave  
  410a05:	shl    ah,cl
  410a07:	mov    bh,0xfd
  410a09:	sub    al,0xa7
  410a0b:	pop    eax
  410a0c:	cmp    DWORD PTR [ebp+esi*8-0x685294f9],esi
  410a13:	in     eax,dx
  410a14:	mov    bl,BYTE PTR [ecx]
  410a16:	mov    ds:0x326044ab,eax
  410a1b:	and    BYTE PTR [ebp+0x7b],al
  410a1e:	push   cs
  410a1f:	fisttp WORD PTR [ebx+ebp*4-0x435ed7a7]
  410a26:	es dec ebx
  410a28:	in     al,dx
  410a29:	add    eax,0xf04d4988
  410a2e:	cmp    eax,0xaf494a1e
  410a33:	and    al,0xe4
  410a35:	test   eax,0x983f03ea
  410a3a:	dec    eax
  410a3b:	mov    al,ds:0xe60fa8d6
  410a40:	out    0xd4,al
  410a42:	inc    ecx
  410a43:	dec    edi
  410a44:	inc    ebp
  410a45:	(bad)  
  410a46:	(bad)  
  410a47:	fwait
  410a48:	and    BYTE PTR [ebx],dh
  410a4a:	cmp    BYTE PTR [ecx],cl
  410a4c:	inc    edi
  410a4d:	mov    ds:0x5a32cbf6,eax
  410a52:	ds inc esp
  410a54:	ret    
  410a55:	cli    
  410a56:	icebp  
  410a57:	pop    es
  410a58:	ins    DWORD PTR es:[edi],dx
  410a59:	mov    bl,0x20
  410a5b:	pop    edi
  410a5c:	or     esp,ebx
  410a5e:	sbb    BYTE PTR [edx],bh
  410a60:	call   0x58c5:0x5a154619
  410a67:	aad    0xac
  410a69:	nop
  410a6a:	inc    ecx
  410a6b:	pusha  
  410a6c:	stc    
  410a6d:	mov    dh,0x4b
  410a6f:	pop    ss
  410a70:	adc    DWORD PTR [ecx],0x457c741
  410a76:	xlat   BYTE PTR ds:[ebx]
  410a77:	adc    al,0xd8
  410a79:	gs ret 
  410a7b:	leave  
  410a7c:	test   al,0xb1
  410a7e:	inc    esp
  410a7f:	add    eax,0xceea07fd
  410a84:	inc    ecx
  410a85:	mov    WORD PTR [esi+0x10495b81],fs
  410a8b:	mov    WORD PTR [ebp-0x3e],gs
  410a8e:	sahf   
  410a8f:	pop    es
  410a90:	dec    ebx
  410a91:	pop    ss
  410a92:	and    DWORD PTR [edx+0x1b],esp
  410a95:	mov    esi,0xf87162f
  410a9a:	jae    0x410a4b
  410a9c:	mov    ds:0xac37e5d7,al
  410aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa2:	test   al,0x37
  410aa4:	pop    esp
  410aa5:	and    al,0x80
  410aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa8:	push   esp
  410aa9:	pop    ebx
  410aaa:	iret   
  410aab:	and    eax,0xedb8ce21
  410ab0:	lock sub BYTE PTR [ebx],dh
  410ab3:	cmp    dl,BYTE PTR [ecx]
  410ab5:	addr16 jns 0xa79262e1
  410abc:	mov    ds,ebx
  410abe:	push   0xf28dd732
  410ac3:	xchg   ebp,eax
  410ac4:	mov    ebx,0x65035a9d
  410ac9:	test   ah,dh
  410acb:	(bad)  
  410acc:	arpl   WORD PTR [ebp-0x628601c0],sp
  410ad2:	test   DWORD PTR [edi+ebp*4+0x1e1851c2],esp
  410ad9:	sub    DWORD PTR [esi+0x2a],ebx
  410adc:	mov    bl,dh
  410ade:	imul   esi,edx,0x962256f6
  410ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae5:	adc    eax,0x28c439fe
  410aea:	pop    es
  410aeb:	test   al,0x80
  410aed:	adc    al,0xf9
  410aef:	mov    ch,0x84
  410af1:	jne    0x410b50
  410af3:	push   DWORD PTR [edx]
  410af5:	add    edx,esi
  410af7:	int3   
  410af8:	repz jns 0x410b15
  410afb:	or     BYTE PTR [eax-0xb],ah
  410afe:	(bad)  
  410aff:	stos   BYTE PTR es:[edi],al
  410b00:	jno    0x410b4f
  410b02:	cmp    ebp,eax
  410b04:	les    ebx,FWORD PTR [edx-0x3c]
  410b07:	mov    WORD PTR [esi-0x4c],gs
  410b0a:	add    ebp,ebp
  410b0c:	sar    BYTE PTR [esi-0x4fe1595c],0xad
  410b13:	call   0xa22a:0xe12fd1cf
  410b1a:	sbb    ah,dl
  410b1c:	sahf   
  410b1d:	jb     0x410b8a
  410b1f:	mov    eax,0xff72a415
  410b24:	mov    cl,0x7d
  410b26:	ret    
  410b27:	xlat   BYTE PTR ds:[ebx]
  410b28:	xchg   esi,eax
  410b29:	xor    eax,0x7fcbaa51
  410b2e:	xor    ecx,ebx
  410b30:	int3   
  410b31:	les    ebp,FWORD PTR [edx-0x2e]
  410b34:	inc    ebx
  410b35:	xor    eax,0x39bb7da2
  410b3a:	fidivr WORD PTR [esi+ebp*2+0x23]
  410b3e:	(bad)  
  410b3f:	bnd jno 0x410b37
  410b42:	aas    
  410b43:	jmp    0x76f6:0x60b8d189
  410b4a:	ficomp WORD PTR [esi+0x599740db]
  410b50:	ja     0x410b78
  410b52:	jl     0x410bd1
  410b54:	pop    eax
  410b55:	and    al,0x35
  410b57:	jno    0x410ae9
  410b59:	fdiv   st,st(2)
  410b5b:	jae    0x410b05
  410b5d:	mov    esp,0xa92de4c
  410b62:	inc    edi
  410b63:	fs (bad) 
  410b65:	lock mov WORD PTR [edi+0x1083f4e8],es
  410b6c:	xchg   esi,eax
  410b6d:	xchg   edi,eax
  410b6e:	lea    edi,[esi-0x3b91bf6e]
  410b74:	jnp    0x410b6c
  410b76:	add    DWORD PTR [ebp-0x99c68ae],eax
  410b7c:	call   0x11c7:0xebdfc3cd
  410b83:	xlat   BYTE PTR ds:[ebx]
  410b84:	enter  0xae32,0xeb
  410b88:	xor    DWORD PTR [esi+ebp*1-0x5b214511],ebp
  410b8f:	xor    eax,0xf9b293fd
  410b94:	push   es
  410b95:	rcr    DWORD PTR [ebx+0x62],1
  410b98:	dec    ecx
  410b99:	dec    DWORD PTR [ebx-0x13c11695]
  410b9f:	push   es
  410ba0:	sti    
  410ba1:	jns    0x410bce
  410ba3:	dec    eax
  410ba4:	pop    DWORD PTR [edx-0x135876c9]
  410baa:	arpl   WORD PTR [esp+edi*8],bx
  410bad:	sbb    DWORD PTR [ecx+edx*8+0x4],esp
  410bb1:	dec    ecx
  410bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb3:	sbb    eax,0x4b667448
  410bb8:	mov    DWORD PTR [edx+0x35],esi
  410bbb:	int    0x9f
  410bbd:	fwait
  410bbe:	add    bh,dh
  410bc0:	sbb    cl,cl
  410bc2:	fwait
  410bc3:	mov    eax,ds:0xaca5f521
  410bc8:	stc    
  410bc9:	lods   al,BYTE PTR ds:[esi]
  410bca:	sbb    esp,eax
  410bcc:	retf   
  410bcd:	jecxz  0x410c0e
  410bcf:	mov    ebx,0x2501bfbb
  410bd4:	ds (bad) 
  410bd6:	add    BYTE PTR [esp+eiz*2-0x7bdb93f1],0xe2
  410bde:	out    dx,al
  410bdf:	enter  0x515,0x90
  410be3:	jp     0x410c0a
  410be5:	xor    al,0x27
  410be7:	jg     0x410ba9
  410be9:	dec    edi
  410bea:	sub    al,ah
  410bec:	mov    ?,WORD PTR [esi-0xf]
  410bef:	rol    BYTE PTR [eax],0x5b
  410bf2:	pusha  
  410bf3:	adc    edx,esp
  410bf5:	jl     0x410bc3
  410bf7:	outs   dx,BYTE PTR ds:[esi]
  410bf8:	loop   0x410bd6
  410bfa:	test   eax,0xa4b388e3
  410bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c00:	pop    ecx
  410c01:	outs   dx,DWORD PTR ds:[esi]
  410c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c03:	sar    BYTE PTR [ecx],0x1a
  410c06:	or     ah,al
  410c08:	arpl   ax,dx
  410c0a:	out    dx,al
  410c0b:	call   0x4e96:0xf52c6c4b
  410c12:	sbb    BYTE PTR [ebx],cl
  410c14:	dec    esp
  410c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c16:	sub    BYTE PTR [ebx-0x5b],bh
  410c19:	inc    esp
  410c1a:	js     0x410c69
  410c1c:	stc    
  410c1d:	imul   eax,DWORD PTR [edx-0x7aa99a11],0x543ace3c
  410c27:	ja     0x410bb6
  410c29:	test   DWORD PTR [esi+0x6c],0xe595efd4
  410c30:	sbb    BYTE PTR [ebx+esi*2],bl
  410c33:	(bad)  
  410c35:	ret    0x9c6b
  410c38:	cmp    eax,0xc460c4f9
  410c3d:	ins    DWORD PTR es:[edi],dx
  410c3e:	out    0x11,eax
  410c40:	neg    BYTE PTR [ecx+0x10ea9100]
  410c46:	in     al,0x41
  410c48:	xchg   edi,eax
  410c49:	push   edi
  410c4a:	shl    BYTE PTR [ecx+0x6145dac0],1
  410c50:	mov    esp,DWORD PTR [ebp-0x53]
  410c53:	sbb    al,0x62
  410c55:	jle    0x410c89
  410c57:	frstor [esi]
  410c59:	cmp    ecx,eax
  410c5b:	or     al,0x3c
  410c5d:	xchg   ebx,eax
  410c5e:	sbb    edi,DWORD PTR [ecx-0x12db926f]
  410c64:	mov    dh,0x86
  410c66:	retf   0xfaae
  410c69:	pop    edx
  410c6a:	or     edi,DWORD PTR es:[esi-0x1ae2a24c]
  410c71:	pop    edi
  410c72:	sbb    al,ah
  410c74:	add    DWORD PTR [eax],esi
  410c76:	leave  
  410c77:	mov    ch,0xf
  410c79:	lods   eax,DWORD PTR ds:[esi]
  410c7a:	fbstp  TBYTE PTR [ecx+esi*2+0x4e]
  410c7e:	add    al,0x22
  410c80:	jge    0x410c5f
  410c82:	mov    esi,0xe178edd6
  410c87:	mov    bh,0x2e
  410c89:	pop    ss
  410c8a:	xor    dl,dh
  410c8c:	sar    ebp,0x77
  410c8f:	jo     0x410cb0
  410c91:	xchg   ebx,eax
  410c92:	daa    
  410c93:	push   edx
  410c94:	adc    al,0x7b
  410c96:	icebp  
  410c97:	push   0x665cddaa
  410c9c:	push   edx
  410c9d:	mov    ecx,0xcc6d1835
  410ca2:	add    al,0xcc
  410ca4:	mov    ds:0x7e55a4a6,eax
  410ca9:	(bad)  
  410caa:	and    al,ah
  410cac:	mov    ah,0x59
  410cae:	test   DWORD PTR [edi],0x9de32362
  410cb4:	and    al,0x5b
  410cb6:	ja     0x410d01
  410cb8:	jmp    0x88b6:0x4ffbfbc1
  410cbf:	and    DWORD PTR [ecx],0x1cbaf38e
  410cc5:	dec    ebp
  410cc6:	mov    esi,0x6ce230e6
  410ccb:	and    ebp,DWORD PTR ds:0x5f83db3d
  410cd1:	fs or  eax,ecx
  410cd4:	mov    al,0x66
  410cd6:	sbb    DWORD PTR [ebp+0x5e],esi
  410cd9:	mov    ebp,0xb6a0b2e0
  410cde:	popf   
  410cdf:	ins    DWORD PTR es:[edi],dx
  410ce0:	hlt    
  410ce1:	sbb    BYTE PTR [ebx-0x7],0x22
  410ce5:	jbe    0x410c7a
  410ce7:	enter  0xbb12,0x46
  410ceb:	sar    esp,1
  410ced:	xchg   esi,eax
  410cee:	out    0x58,eax
  410cf0:	data16 cmp cl,dh
  410cf3:	std    
  410cf4:	and    BYTE PTR [eax+0x5c114fc8],bl
  410cfa:	pusha  
  410cfb:	fs dec edx
  410cfd:	xchg   esi,eax
  410cfe:	mov    ebx,gs
  410d00:	or     DWORD PTR [ebp+0x5c9feb2],edx
  410d06:	or     dl,bl
  410d08:	popw   ss
  410d0a:	sub    al,0xa8
  410d0c:	mov    eax,0x87888f4b
  410d11:	ds jle 0x410d8e
  410d14:	fs mov al,0xfa
  410d17:	(bad)  
  410d18:	dec    esi
  410d19:	daa    
  410d1a:	int    0x64
  410d1c:	mov    DWORD PTR [esi+edi*1-0x470620fd],ecx
  410d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d24:	sbb    ch,BYTE PTR [eax+0xd]
  410d27:	pop    esi
  410d28:	adc    edi,eax
  410d2a:	out    0x7a,al
  410d2c:	inc    esp
  410d2d:	test   DWORD PTR [esi-0x7248bc0d],0x3c50049e
  410d37:	and    dl,BYTE PTR [edi-0xefb3d12]
  410d3d:	div    DWORD PTR [eax]
  410d3f:	jae    0x410d2a
  410d41:	je     0x410d12
  410d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d44:	xor    al,BYTE PTR [edx-0x179d861b]
  410d4a:	dec    esp
  410d4b:	jnp    0x410d02
  410d4d:	jle    0x410d4d
  410d4f:	out    dx,eax
  410d50:	and    edx,0xffffffee
  410d53:	dec    ebp
  410d54:	out    0xf3,al
  410d56:	push   ebx
  410d57:	and    BYTE PTR [ecx-0x64732989],al
  410d5d:	dec    ebp
  410d5e:	jns    0x410d79
  410d60:	mov    ds:0x45492d79,al
  410d65:	jne    0x410d6b
  410d67:	test   DWORD PTR [eax+0x154465a5],ebp
  410d6d:	(bad)  
  410d6e:	fldpi  
  410d70:	mov    dl,BYTE PTR [ebp+0x73cf473f]
  410d76:	mov    esp,0xabc75d06
  410d7b:	test   eax,0x9f68a464
  410d80:	sbb    DWORD PTR [edi],eax
  410d82:	push   esi
  410d83:	push   edi
  410d84:	jb     0x410d42
  410d86:	cmp    ebp,DWORD PTR ss:[eax]
  410d89:	adc    eax,DWORD PTR [edi]
  410d8b:	out    0x3b,eax
  410d8d:	popa   
  410d8e:	push   ecx
  410d8f:	add    WORD PTR [edi],bx
  410d92:	push   ebx
  410d93:	sbb    al,0x75
  410d95:	mov    al,0xbf
  410d97:	pslld  mm6,mm6
  410d9a:	and    BYTE PTR [ebx],dl
  410d9c:	(bad)  
  410d9d:	call   0x71d5:0x2991b702
  410da4:	sub    eax,0xffffff80
  410da7:	push   es
  410da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da9:	cmc    
  410daa:	mov    bh,BYTE PTR [ecx-0x144cbe69]
  410db0:	push   eax
  410db1:	loope  0x410d49
  410db3:	mov    esi,0xc69e5db3
  410db8:	pop    ss
  410db9:	xor    dh,BYTE PTR [ecx+esi*1-0x6265adee]
  410dc0:	push   ds
  410dc1:	clc    
  410dc2:	clc    
  410dc3:	imul   ebp,DWORD PTR [ebx],0x6741ab0b
  410dc9:	jnp    0x410d8a
  410dcb:	inc    edi
  410dcc:	ds xchg edx,eax
  410dce:	lea    edx,[edx-0x1bec2ec5]
  410dd4:	inc    edx
  410dd5:	(bad)  
  410dd6:	ss out dx,al
  410dd8:	clc    
  410dd9:	out    0x6,al
  410ddb:	inc    edi
  410ddc:	push   edx
  410ddd:	ss call 0x7ae0:0xb27ecf56
  410de5:	pushf  
  410de6:	aam    0x3a
  410de8:	rcr    edx,1
  410dea:	cmp    al,0xe
  410dec:	es retf 0x55d9
  410df0:	mov    edi,0x37a340d0
  410df5:	rol    BYTE PTR [ecx],cl
  410df7:	mov    ah,0x5a
  410df9:	pop    esp
  410dfa:	jl     0x410da8
  410dfc:	sbb    esi,DWORD PTR [eax+0x62c2a42]
  410e02:	and    DWORD PTR [ecx+eiz*2+0x3c0dd4c2],ebx
  410e09:	adc    edi,DWORD PTR [edi]
  410e0b:	xchg   esp,eax
  410e0c:	inc    eax
  410e0d:	lea    esp,[ebx-0x4d243524]
  410e13:	sbb    ch,BYTE PTR [esi+0x25]
  410e16:	(bad)  
  410e17:	retf   
  410e18:	push   es
  410e19:	(bad)  
  410e1a:	jmp    0xb4240c69
  410e1f:	test   BYTE PTR [ebx],ah
  410e21:	iret   
  410e22:	cmc    
  410e23:	cmp    esi,ebx
  410e25:	mov    bl,0xa1
  410e27:	dec    eax
  410e28:	pop    es
  410e29:	mov    esp,0x84bdbc3e
  410e2e:	dec    edi
  410e2f:	dec    ecx
  410e30:	jbe    0x410ddf
  410e32:	ret    0xc9e1
  410e35:	(bad)  
  410e36:	sbb    eax,0xf53a190f
  410e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e3c:	arpl   bp,si
  410e3e:	jbe    0x410e75
  410e40:	das    
  410e41:	mov    dl,0xe2
  410e43:	xor    BYTE PTR [edi*4+0x4dd0a9a],dl
  410e4a:	js     0x410df3
  410e4c:	pop    esp
  410e4d:	sub    DWORD PTR [ebx-0x3d5f182c],edx
  410e53:	test   al,0x8d
  410e55:	adc    al,0x73
  410e57:	push   ebx
  410e58:	fmul   DWORD PTR [eax]
  410e5a:	jo     0x410e29
  410e5c:	aad    0xd7
  410e5e:	das    
  410e5f:	enter  0x6037,0x90
  410e63:	sub    bl,al
  410e65:	inc    ebx
  410e66:	and    dl,bh
  410e68:	aam    0x4a
  410e6a:	mov    ebp,0xc296a501
  410e6f:	xor    cl,BYTE PTR [ecx-0x650e77a1]
  410e75:	shl    BYTE PTR [ecx-0x1dc241ca],cl
  410e7b:	ds das 
  410e7d:	and    bl,BYTE PTR [ebx+0xcd8a829]
  410e83:	xchg   edx,eax
  410e84:	ss cdq 
  410e86:	sti    
  410e87:	les    eax,FWORD PTR [esi+0x2bb66246]
  410e8d:	mov    eax,0x674cc0bb
  410e92:	(bad)  
  410e93:	jne    0x410e99
  410e95:	test   dl,bh
  410e97:	xchg   ebx,eax
  410e98:	mov    ds:0xfbd44ec4,eax
  410e9d:	nop
  410e9e:	mov    dh,BYTE PTR [ecx]
  410ea0:	or     BYTE PTR [ecx-0x163ce674],dh
  410ea6:	pusha  
  410ea7:	mov    ds:0x81b05199,al
  410eac:	into   
  410ead:	(bad)  
  410eae:	std    
  410eaf:	add    BYTE PTR [edi-0x5d],dl
  410eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eb3:	cdq    
  410eb4:	push   edi
  410eb5:	(bad)  
  410eb6:	shl    DWORD PTR [esi-0x54],1
  410eb9:	xadd   edx,edi
  410ebc:	add    edi,0xffffffc1
  410ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec0:	push   esi
  410ec1:	push   edx
  410ec2:	sbb    eax,0x225c9466
  410ec7:	xchg   edi,eax
  410ec8:	xchg   edi,eax
  410ec9:	mov    dl,0xa2
  410ecb:	sti    
  410ecc:	iret   
  410ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ece:	iret   
  410ecf:	or     ebp,0x54
  410ed2:	fwait
  410ed3:	add    bl,BYTE PTR [eax-0x75784367]
  410ed9:	jo     0x410f06
  410edb:	mov    al,ds:0x5e02b201
  410ee0:	imul   DWORD PTR [edx-0x48]
  410ee3:	mov    ds:0xa2a8784f,eax
  410ee8:	fsubr  QWORD PTR [eax]
  410eea:	fpatan 
  410eec:	cmp    al,0x75
  410eee:	jns    0x410eb2
  410ef0:	ret    0x3cdf
  410ef3:	xor    ch,dh
  410ef5:	xchg   esp,eax
  410ef6:	cdq    
  410ef7:	push   ebp
  410ef8:	pusha  
  410ef9:	xor    al,0x42
  410efb:	icebp  
  410efc:	data16 test al,0x28
  410eff:	lods   al,BYTE PTR ds:[esi]
  410f00:	jne    0x410eab
  410f02:	pop    ebp
  410f03:	out    0xda,al
  410f05:	and    DWORD PTR [ebp-0x2f38d4b7],edx
  410f0b:	mov    eax,ds:0xf5089faf
  410f10:	rcl    BYTE PTR [ecx+0x7319e4cb],0x64
  410f17:	inc    esp
  410f18:	adc    edi,DWORD PTR [eax]
  410f1a:	and    ah,BYTE PTR [ebx]
  410f1c:	jmp    0x410edb
  410f1e:	stc    
  410f1f:	inc    ecx
  410f20:	aam    0x40
  410f22:	fldenv [bx+di+0xc]
  410f26:	pop    ds
  410f27:	aas    
  410f28:	cs inc eax
  410f2a:	xor    DWORD PTR [ecx],edx
  410f2c:	xor    dh,BYTE PTR [eax]
  410f2e:	add    DWORD PTR [edi+edx*1-0x12deb3c6],0xffffffa3
  410f36:	stos   DWORD PTR es:[edi],eax
  410f37:	sub    DWORD PTR [edi-0x6c],edx
  410f3a:	and    DWORD PTR [eax+0x613c747],eax
  410f40:	data16 cmp BYTE PTR [edx-0x4b],dl
  410f44:	ins    DWORD PTR es:[edi],dx
  410f45:	and    DWORD PTR [eax+0x21],ebp
  410f48:	fcmove st,st(3)
  410f4a:	xor    al,0xe2
  410f4c:	and    DWORD PTR [ecx+0x4b4e5d4e],0xffffff9d
  410f53:	inc    esp
  410f54:	cmc    
  410f55:	btr    ecx,esi
  410f58:	stos   DWORD PTR es:[edi],eax
  410f59:	push   esi
  410f5a:	hlt    
  410f5b:	pop    edi
  410f5c:	jg     0x410f99
  410f5e:	jmp    0x9cc6:0xe9c84302
  410f65:	jno    0x410f57
  410f67:	ds xchg esi,eax
  410f69:	adc    DWORD PTR [ecx-0x6a0bca10],edx
  410f6f:	xchg   esp,eax
  410f70:	sbb    DWORD PTR fs:[edi-0x72a8372],ecx
  410f77:	xor    al,BYTE PTR [edx-0x47c65f9]
  410f7d:	ja     0x410fb9
  410f7f:	bound  ecx,QWORD PTR [esi]
  410f81:	mov    cl,BYTE PTR [esp+eiz*8+0x17eefb15]
  410f88:	aaa    
  410f89:	or     eax,0xd8072fce
  410f8e:	pushf  
  410f8f:	fiadd  DWORD PTR [edx+esi*8]
  410f92:	pop    ebx
  410f93:	lods   eax,DWORD PTR ds:[esi]
  410f94:	addr16 xor eax,0x5b4a738a
  410f9a:	mov    ecx,0x9253cd6c
  410f9f:	push   ebp
  410fa0:	std    
  410fa1:	mov    ebx,0x44bda83a
  410fa6:	jmp    0x5b848a82
  410fab:	stc    
  410fac:	mov    eax,ds:0xaccdbccf
  410fb1:	lock dec eax
  410fb3:	mov    ch,0xb6
  410fb5:	adc    ecx,eax
  410fb7:	retf   
  410fb8:	inc    ebx
  410fb9:	xchg   DWORD PTR [edi],esi
  410fbb:	test   DWORD PTR [edx-0x1d],0x13279cbe
  410fc2:	xor    bl,BYTE PTR [ecx]
  410fc4:	push   es
  410fc5:	and    DWORD PTR [esp+edi*8+0x1f],0x5ba997cf
  410fcd:	xor    ebp,eax
  410fcf:	push   ebp
  410fd0:	inc    ebx
  410fd1:	adc    dl,bh
  410fd3:	jb     0x410fbd
  410fd5:	nop
  410fd6:	cli    
  410fd7:	retf   
  410fd8:	sub    edx,esp
  410fda:	xchg   ecx,eax
  410fdb:	or     ecx,esp
  410fdd:	mov    edi,0x8298b06e
  410fe2:	in     eax,0x5a
  410fe4:	push   0xfffffff1
  410fe6:	inc    ebp
  410fe7:	imul   ebx,DWORD PTR [edx-0x6a31c934],0x6
  410fee:	pushf  
  410fef:	gs jecxz 0x410f82
  410ff2:	idiv   ah
  410ff4:	gs pop ds
  410ff6:	jge    0x410fa3
  410ff8:	ds xor ebp,ebp
  410ffb:	shl    BYTE PTR [ebp+eax*2-0x80],cl
  410fff:	int    0xb5
  411001:	push   ecx
  411002:	and    al,0xfb
  411004:	int3   
  411005:	and    DWORD PTR [esi-0x4a],ebx
  411008:	in     al,dx
  411009:	xchg   ecx,eax
  41100a:	cli    
  41100b:	push   edi
  41100c:	mov    dl,0xd9
  41100e:	ror    BYTE PTR [esi],cl
  411010:	iret   
  411011:	test   eax,0x4a9babf9
  411016:	nop
  411017:	in     eax,dx
  411018:	mov    ds,WORD PTR [eax-0x5fad4bad]
  41101e:	mov    DWORD PTR [esi-0x15],edi
  411021:	outs   dx,DWORD PTR ds:[esi]
  411022:	iret   
  411023:	rol    ch,0x4e
  411026:	(bad)  
  411027:	lods   eax,DWORD PTR ds:[esi]
  411028:	pop    esp
  411029:	mov    dl,0xca
  41102b:	cmp    eax,0xfec2eeca
  411030:	scas   al,BYTE PTR es:[edi]
  411031:	xor    al,ch
  411033:	(bad)  
  411034:	fistp  DWORD PTR [edi-0x1c]
  411037:	dec    esp
  411038:	xchg   ebx,eax
  411039:	dec    ebp
  41103a:	push   es
  41103b:	cmp    eax,0x6212efd
  411040:	pop    ecx
  411041:	inc    ecx
  411042:	xlat   BYTE PTR ds:[ebx]
  411043:	scas   eax,DWORD PTR es:[edi]
  411044:	outs   dx,DWORD PTR ds:[esi]
  411045:	cmp    dh,al
  411047:	retf   0xbfec
  41104a:	or     edx,edx
  41104c:	imul   edi,DWORD PTR [ecx-0xf131817],0x25
  411053:	pop    ecx
  411054:	add    cl,cl
  411056:	ins    DWORD PTR es:[edi],dx
  411057:	(bad)  
  411058:	scas   al,BYTE PTR es:[edi]
  411059:	and    eax,0x7947dbdc
  41105e:	xor    esp,DWORD PTR [esi-0x7adc4d9f]
  411064:	inc    ebx
  411065:	stos   DWORD PTR es:[edi],eax
  411066:	cdq    
  411067:	jle    0x4110c4
  411069:	xchg   edi,eax
  41106a:	lock cmp esp,DWORD PTR [ecx]
  41106d:	sbb    ecx,DWORD PTR [esp+0x25]
  411071:	cmp    al,dl
  411073:	ins    DWORD PTR es:[edi],dx
  411074:	shr    BYTE PTR [ebp-0x729445bc],0xec
  41107b:	add    eax,0x370fb88d
  411080:	xchg   DWORD PTR [edx-0xbbc3657],esp
  411086:	xor    DWORD PTR [edx-0x79],eax
  411089:	js     0x411050
  41108b:	fs pop esi
  41108d:	sub    DWORD PTR [edx+edi*1-0x39],edx
  411091:	xchg   ebx,eax
  411092:	out    dx,eax
  411093:	xor    eax,0x4f5c7d4d
  411098:	rcl    DWORD PTR [edi-0x32],0xba
  41109c:	xchg   esp,eax
  41109d:	xor    eax,0xd154a533
  4110a2:	xchg   ebx,eax
  4110a3:	pop    esp
  4110a4:	(bad)  
  4110a5:	push   ds
  4110a6:	xchg   ah,dl
  4110a8:	repz repnz sbb DWORD PTR [ebx-0x63ee5245],ebx
  4110b0:	xor    BYTE PTR [ebx],0x92
  4110b3:	xor    eax,0x6c17a3b4
  4110b8:	retf   
  4110b9:	pop    ds
  4110ba:	jnp    0x411110
  4110bc:	sahf   
  4110bd:	jmp    0x4110c9
  4110bf:	inc    esi
  4110c0:	dec    ebp
  4110c1:	fs sbb ah,ah
  4110c4:	or     BYTE PTR [ecx+esi*1+0xa],bh
  4110c8:	arpl   WORD PTR [eax],cx
  4110ca:	(bad)  
  4110cb:	sub    eax,0x15a0b98d
  4110d0:	cmp    BYTE PTR [edi+0x65],ah
  4110d3:	and    BYTE PTR [edi+esi*1],al
  4110d6:	and    eax,0xdb295942
  4110db:	sbb    BYTE PTR [esi+0x7a923b24],ch
  4110e1:	push   esp
  4110e2:	inc    edi
  4110e3:	pop    esp
  4110e4:	jo     0x411081
  4110e6:	jae    0x4110b3
  4110e8:	pop    esp
  4110e9:	test   eax,0x141a9f1f
  4110ee:	mov    ecx,?
  4110f0:	fisub  WORD PTR [edi+ecx*1]
  4110f3:	xor    al,0x69
  4110f5:	cs cmp ch,ch
  4110f8:	sbb    al,ch
  4110fa:	xchg   ebp,eax
  4110fb:	xor    DWORD PTR [ecx-0x1d90f8b0],eax
  411101:	repz loop 0x4110cb
  411104:	cmp    DWORD PTR [esi+0x5d],edi
  411107:	adc    bl,bh
  411109:	pushf  
  41110a:	adc    DWORD PTR [esi-0x392eeeae],esp
  411110:	fcom   DWORD PTR [esi-0x58e8dbb6]
  411116:	xchg   BYTE PTR [esi-0x6c],ch
  411119:	adc    bl,dl
  41111b:	sar    edi,0x71
  41111e:	in     al,0xde
  411120:	mov    ecx,0xd655cc46
  411125:	mov    edx,0x371961d0
  41112a:	into   
  41112b:	cdq    
  41112c:	adc    al,ah
  41112e:	dec    esi
  41112f:	xchg   ebx,eax
  411130:	xchg   di,ax
  411132:	inc    ecx
  411133:	add    esi,DWORD PTR [ebp+0x23692491]
  411139:	mov    WORD PTR [edi+0x15216b6d],?
  41113f:	fnstsw WORD PTR [ebx]
  411141:	sub    eax,0xbfc4dcd7
  411146:	jg     0x41112a
  411148:	xchg   ecx,eax
  411149:	mov    esi,0x32fe6a40
  41114e:	icebp  
  41114f:	lock jb 0x411101
  411152:	ins    DWORD PTR es:[edi],dx
  411153:	imul   BYTE PTR [edi-0x6a6e0002]
  411159:	and    ecx,edi
  41115b:	jmp    0x35f0fc41
  411160:	test   eax,0x9700089e
  411165:	sbb    eax,0x2f5c6b19
  41116a:	mov    ebx,0xebb52ed9
  41116f:	xlat   BYTE PTR ds:[ebx]
  411170:	push   esi
  411171:	mov    ds:0x8b15157b,eax
  411176:	pop    ebx
  411177:	mov    esi,0xf61e09f
  41117c:	int3   
  41117d:	bound  ebp,QWORD PTR [ebx+0x289ea98c]
  411183:	icebp  
  411184:	inc    esp
  411185:	and    al,0x50
  411187:	jne    0x41112c
  411189:	xchg   esp,eax
  41118a:	xor    eax,0x6018e7c2
  41118f:	xor    al,0x64
  411191:	add    eax,0xbfb6599c
  411196:	push   0xb77138a4
  41119b:	pop    edx
  41119c:	pop    esi
  41119d:	and    DWORD PTR [eax+0x7a],0xffffffbc
  4111a1:	fucomi st,st(6)
  4111a3:	mov    al,al
  4111a5:	int3   
  4111a6:	mov    ebp,0x41bb3005
  4111ab:	pop    ds
  4111ac:	jae    0x411138
  4111ae:	dec    esp
  4111af:	pop    ds
  4111b0:	mov    fs,WORD PTR [edx+0x316fead9]
  4111b6:	inc    ebx
  4111b7:	jne    0x4111ae
  4111b9:	leave  
  4111ba:	mov    esp,0x293a66cb
  4111bf:	addr16 push es
  4111c1:	pop    eax
  4111c2:	sahf   
  4111c3:	sbb    eax,0x9790dcae
  4111c8:	out    0x18,al
  4111ca:	stc    
  4111cb:	aad    0xe8
  4111cd:	stos   BYTE PTR es:[edi],al
  4111ce:	test   eax,0xe7e473ab
  4111d3:	fsubr  QWORD PTR [edi-0x17]
  4111d6:	je     0x4111a8
  4111d8:	lods   eax,DWORD PTR ds:[esi]
  4111d9:	jmp    0xd2e7:0xf6c7ff9
  4111e0:	fadd   DWORD PTR [ebx]
  4111e2:	inc    edi
  4111e3:	mov    eax,ds:0xa1ea234a
  4111e8:	(bad)  
  4111ea:	in     eax,0xb5
  4111ec:	ffree  st(2)
  4111ee:	shl    DWORD PTR [ebx+0x38],cl
  4111f1:	dec    ebx
  4111f2:	cmp    al,0x5f
  4111f4:	imul   ecx,DWORD PTR [ebx-0x3e],0x54350f28
  4111fb:	xchg   edx,eax
  4111fc:	hlt    
  4111fd:	pop    es
  4111fe:	jp     0x4111b8
  411200:	add    BYTE PTR [esi+0x61264e8c],al
  411206:	or     al,0x94
  411208:	jg     0x4111af
  41120a:	hlt    
  41120b:	stc    
  41120c:	push   cs
  41120d:	dec    ecx
  41120e:	push   edx
  41120f:	fstp   DWORD PTR [edx+0x72]
  411212:	cmc    
  411213:	cld    
  411214:	lods   eax,DWORD PTR ds:[esi]
  411215:	rcl    BYTE PTR [edi+0x7a],1
  411218:	cmp    DWORD PTR [edi-0x3c],0xf9fa70d3
  41121f:	jnp    0x4111c4
  411221:	mov    esp,0xd44f2cc3
  411226:	add    BYTE PTR [eax],ch
  411228:	inc    ebx
  411229:	mov    eax,0x16f7c419
  41122e:	mov    eax,0x967f6bd
  411233:	push   ebp
  411234:	cdq    
  411235:	xchg   ebp,eax
  411236:	sub    DWORD PTR ds:0x370e2d00,ebp
  41123c:	stos   DWORD PTR es:[edi],eax
  41123d:	jp     0x4111de
  41123f:	retf   0xaeaf
  411242:	mov    esi,0x8f2ab154
  411247:	jge    0x411200
  411249:	or     bl,ch
  41124b:	mov    ds:0xb3fcaa8f,al
  411250:	(bad)  
  411252:	arpl   bx,dx
  411254:	hlt    
  411255:	into   
  411256:	aam    0x8
  411258:	cmp    dh,BYTE PTR [ebx+0x40]
  41125b:	stc    
  41125c:	repnz and eax,0xabf21635
  411262:	add    DWORD PTR [esi+0x5d],0x13
  411266:	lods   al,BYTE PTR ds:[esi]
  411267:	frstor [edi-0x2f6dca6]
  41126d:	jmp    0x41124d
  41126f:	out    dx,eax
  411270:	inc    edi
  411271:	cwde   
  411272:	jbe    0x411211
  411274:	cmp    edx,DWORD PTR [ecx]
  411276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411277:	les    esp,FWORD PTR [esp+edx*1-0x75]
  41127b:	xor    DWORD PTR [esi-0x4d0de0be],0x6a47e071
  411285:	mov    esi,0xfaf7598e
  41128a:	adc    eax,0x5af43a8f
  41128f:	inc    BYTE PTR [ebx+0x35]
  411292:	sub    DWORD PTR [ecx-0x7e1a07ed],0x1e
  411299:	and    BYTE PTR [eax+0x41],ah
  41129c:	test   BYTE PTR [esi],dl
  41129e:	fwait
  41129f:	sub    bl,BYTE PTR [esi]
  4112a1:	and    eax,0xf9ee4c85
  4112a6:	(bad)  
  4112a7:	sub    cl,bl
  4112a9:	mov    ebx,0xc1dfa5f6
  4112ae:	xchg   edx,eax
  4112b0:	push   cs
  4112b1:	ds ins DWORD PTR es:[edi],dx
  4112b3:	sbb    DWORD PTR [eax+0x61d1f711],esi
  4112b9:	popf   
  4112ba:	or     BYTE PTR [ebp+0x49f187e8],cl
  4112c0:	jae    0x411313
  4112c2:	and    esp,DWORD PTR [eax+0x78]
  4112c5:	ins    BYTE PTR es:[edi],dx
  4112c6:	pop    ebp
  4112c7:	not    BYTE PTR [esi]
  4112c9:	jne    0x411278
  4112cb:	dec    esi
  4112cc:	(bad)
  4112cf:	jnp    0x4112bb
  4112d1:	xor    esp,DWORD PTR [edi-0x5d]
  4112d4:	push   es
  4112d5:	cwde   
  4112d6:	sti    
  4112d7:	jo     0x411269
  4112d9:	jae    0x4112de
  4112db:	or     al,0x1c
  4112dd:	and    esp,DWORD PTR [esi]
  4112df:	pop    eax
  4112e0:	repnz mov bl,0x43
  4112e3:	rol    ebx,cl
  4112e5:	push   ebx
  4112e6:	dec    eax
  4112e7:	cmp    ebx,DWORD PTR [edi+0x6f]
  4112ea:	jns    0x411297
  4112ec:	jecxz  0x411331
  4112ee:	dec    edi
  4112ef:	test   al,0xcd
  4112f1:	cmc    
  4112f2:	dec    edx
  4112f3:	rcr    ah,1
  4112f5:	add    eax,0xdc46e6a6
  4112fa:	mov    al,ds:0x14dbbf80
  4112ff:	ins    DWORD PTR es:[edi],dx
  411300:	adc    al,0x73
  411302:	mov    cl,0x1d
  411304:	xchg   edx,eax
  411305:	dec    eax
  411306:	mov    bh,0x33
  411308:	jle    0x41133e
  41130a:	jnp    0x411372
  41130c:	in     al,dx
  41130d:	inc    edx
  41130e:	jnp    0x4112cc
  411310:	fidiv  WORD PTR [esi-0xc174f6f]
  411316:	imul   ecx,DWORD PTR [ebx+0x640418da],0xffffffb6
  41131d:	sar    BYTE PTR [ebp-0x5280788f],cl
  411323:	add    al,BYTE PTR [edi+0x4]
  411326:	pop    eax
  411327:	xchg   esp,eax
  411328:	int3   
  411329:	xchg   BYTE PTR [edx+0x30],al
  41132c:	repnz mov BYTE PTR [ecx+0x26],dh
  411330:	addps  xmm6,xmm4
  411333:	xchg   esi,eax
  411334:	lods   al,BYTE PTR ds:[esi]
  411335:	adc    ecx,DWORD PTR [ecx]
  411337:	ret    0x53dd
  41133a:	inc    DWORD PTR [edx]
  41133c:	mov    bh,0xc5
  41133e:	mov    eax,ds:0xd42eb0db
  411343:	ds xor al,0xe3
  411346:	and    al,BYTE PTR [edx-0x5a]
  411349:	je     0x411359
  41134b:	xchg   ecx,eax
  41134c:	dec    esp
  41134d:	xchg   DWORD PTR [ecx+edx*8-0x17],ebp
  411351:	dec    ebp
  411352:	sub    al,0x37
  411354:	mov    ds:0x6730ac91,eax
  411359:	xor    DWORD PTR [ebx+0x5a33f3a1],esi
  41135f:	out    dx,eax
  411360:	inc    ecx
  411361:	xchg   esi,eax
  411362:	mov    ah,0x2d
  411364:	mov    edx,es
  411366:	inc    edx
  411367:	dec    esp
  411368:	xor    BYTE PTR ds:0xdad659d0,0x64
  41136f:	les    ecx,FWORD PTR [edi+0x7f]
  411372:	call   0x3aa1697
  411377:	mov    bl,0x11
  411379:	std    
  41137a:	shl    BYTE PTR [ecx+0x6667785],cl
  411380:	adc    ecx,DWORD PTR [ebx]
  411382:	push   eax
  411383:	shr    BYTE PTR [eax+ebx*2+0x3be5c08b],cl
  41138a:	imul   eax,DWORD PTR [ebp+0x7],0xe7d3f17b
  411391:	aam    0xb5
  411393:	xchg   edx,eax
  411394:	pusha  
  411395:	jg     0x4113d8
  411397:	xchg   esp,eax
  411398:	push   ss
  411399:	xchg   esp,eax
  41139a:	dec    ebp
  41139b:	dec    esi
  41139c:	mov    bh,0x4e
  41139e:	or     BYTE PTR [edi],bh
  4113a0:	scas   eax,DWORD PTR es:[edi]
  4113a1:	popa   
  4113a2:	data16 in al,0xc5
  4113a5:	ret    0xa0a8
  4113a8:	retf   0xb02b
  4113ab:	fist   WORD PTR [ecx]
  4113ad:	pop    esi
  4113ae:	xchg   DWORD PTR [ecx-0x3],eax
  4113b1:	cmp    edi,esp
  4113b3:	adc    eax,0xeaabcb01
  4113b8:	shr    DWORD PTR [esi],0xeb
  4113bb:	loope  0x41136e
  4113bd:	aaa    
  4113be:	nop
  4113bf:	and    eax,0xdaf3e998
  4113c4:	pop    edx
  4113c5:	mov    eax,ds:0xae4f2bee
  4113ca:	es dec edx
  4113cc:	or     al,0x65
  4113ce:	lea    eax,[eax-0x5c]
  4113d1:	inc    ecx
  4113d2:	mov    al,ds:0x8418f1ef
  4113d7:	dec    esi
  4113d8:	cs pop es
  4113da:	jg     0x41142a
  4113dc:	mov    ebp,0x21fbae8f
  4113e1:	retf   0x5a31
  4113e4:	(bad)  
  4113e5:	daa    
  4113e6:	adc    al,0x83
  4113e8:	mov    edx,esp
  4113ea:	xlat   BYTE PTR gs:[ebx]
  4113ec:	out    dx,eax
  4113ed:	mov    dh,0x72
  4113ef:	or     ch,BYTE PTR [ebp-0x57]
  4113f2:	cmp    ecx,DWORD PTR [eax]
  4113f4:	(bad)  
  4113f5:	jle    0x411380
  4113f7:	mov    ebp,0x8a0dbc19
  4113fc:	arpl   di,bx
  4113fe:	aas    
  4113ff:	xchg   edx,eax
  411400:	push   ds
  411401:	xor    esi,DWORD PTR [ebp-0x3f]
  411404:	imul   esi,DWORD PTR [eax-0x1fddbe27],0x6c308faa
  41140e:	out    dx,eax
  41140f:	out    0xea,eax
  411411:	(bad)  
  411413:	adc    ebx,DWORD PTR [ebx]
  411415:	das    
  411416:	inc    eax
  411417:	fwait
  411418:	push   0xfffffff4
  41141a:	test   al,0xbb
  41141c:	fsubrp st(7),st
  41141e:	rol    BYTE PTR [eax-0x1d53613d],cl
  411424:	or     DWORD PTR [ebx+0x45f52ae5],ebx
  41142a:	add    BYTE PTR [ebx-0x4b],cl
  41142d:	popf   
  41142e:	mov    edi,0xa6ffdcda
  411433:	xchg   edx,eax
  411434:	jnp    0x411432
  411436:	mov    edx,0xc3a905fc
  41143b:	sub    dh,dl
  41143d:	(bad)  
  41143e:	pusha  
  41143f:	cwde   
  411440:	imul   ebx,esp,0xd4cdfe78
  411446:	sahf   
  411447:	push   0x7446e3ea
  41144c:	adc    al,ch
  41144e:	(bad)  
  41144f:	mov    eax,ds:0xcdfb79bc
  411454:	mov    al,ds:0x35a08c8
  411459:	in     eax,0xe4
  41145b:	test   BYTE PTR [ecx-0x19b9bb68],dh
  411461:	fdivr  DWORD PTR [ecx]
  411463:	pop    esp
  411464:	shl    dl,cl
  411466:	adc    eax,0x5b55c95c
  41146b:	mov    dh,0xc
  41146d:	imul   esi,edi,0xffffffec
  411470:	ja     0x41147a
  411472:	popa   
  411473:	and    al,0x7c
  411475:	lods   al,BYTE PTR ds:[esi]
  411476:	rol    BYTE PTR [ecx],cl
  411478:	xor    al,0x44
  41147a:	into   
  41147b:	loope  0x411441
  41147d:	mov    BYTE PTR [esi+esi*2],ch
  411480:	in     al,0x9e
  411482:	mov    ds:0x6fe9f6c4,eax
  411487:	and    cl,0xec
  41148a:	daa    
  41148b:	push   0xd
  41148d:	dec    eax
  41148e:	push   ebp
  41148f:	mov    ecx,0xa7b3ef0e
  411494:	mov    ch,0xab
  411496:	sub    DWORD PTR [edx-0x5f8ad21a],ecx
  41149c:	scas   eax,DWORD PTR es:[edi]
  41149d:	jmp    0x41151d
  41149f:	add    ebp,DWORD PTR [edx-0x19]
  4114a2:	inc    esi
  4114a3:	(bad)  
  4114a4:	int3   
  4114a5:	dec    esi
  4114a6:	add    dh,BYTE PTR [eax]
  4114a8:	or     eax,0xd06040a8
  4114ad:	xchg   ebp,eax
  4114ae:	inc    ecx
  4114af:	sti    
  4114b0:	repnz xchg edx,eax
  4114b2:	mov    al,0x32
  4114b4:	push   es
  4114b5:	pop    ebx
  4114b6:	add    al,0x9d
  4114b8:	mov    esi,0x73acf93
  4114bd:	dec    edx
  4114be:	pop    ss
  4114bf:	lds    ebx,FWORD PTR [edi-0x451dc67d]
  4114c5:	shr    DWORD PTR [ecx+0x4cb68c90],0x63
  4114cc:	jns    0x4114ce
  4114ce:	jae    0x411467
  4114d0:	mov    esp,0x3817a5e8
  4114d5:	je     0x4114a1
  4114d7:	sbb    al,0x97
  4114d9:	push   ecx
  4114da:	jno    0x411469
  4114dc:	mov    BYTE PTR [ecx-0x5f79b2a2],bl
  4114e2:	test   eax,0x6e5f1c73
  4114e7:	test   al,0xaf
  4114e9:	(bad)  
  4114ea:	in     eax,dx
  4114eb:	sub    ch,BYTE PTR [edi+0x6409a578]
  4114f1:	aas    
  4114f2:	xor    DWORD PTR [edi+ecx*2+0x6ee824ed],ecx
  4114f9:	fld    TBYTE PTR [ebx+esi*4]
  4114fc:	mov    esi,0x82a2a2f7
  411501:	and    DWORD PTR [edi+eiz*2-0x15],ecx
  411505:	xchg   ebx,eax
  411506:	div    BYTE PTR ds:0x35c14d59
  41150c:	stc    
  41150d:	xchg   edi,eax
  41150e:	aam    0x8
  411510:	ins    BYTE PTR es:[edi],dx
  411511:	xor    bl,dh
  411513:	inc    esp
  411514:	mov    ds:0x2a51adfe,al
  411519:	mov    al,BYTE PTR [ebx]
  41151b:	jae    0x4114ec
  41151d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41151f:	or     BYTE PTR [edi-0x2],0x58
  411523:	rcl    eax,1
  411525:	mov    bh,0xa8
  411527:	stc    
  411528:	lea    ebx,[ecx+0x40dbec9a]
  41152e:	imul   ebp,eax,0x36
  411531:	jns    0x4114b5
  411533:	nop
  411534:	std    
  411535:	jecxz  0x4115b6
  411537:	or     cl,BYTE PTR [edx]
  411539:	pop    ecx
  41153a:	mov    dh,0x3b
  41153c:	jl     0x4114cd
  41153e:	imul   ecx,eax,0x4163e10a
  411544:	jno    0x411538
  411546:	pop    edx
  411547:	xchg   ebp,eax
  411548:	mov    ds:0xaa825be5,eax
  41154d:	rcl    bh,0xff
  411550:	out    0xf4,al
  411552:	std    
  411553:	sub    ebp,DWORD PTR [edx+0x76]
  411556:	in     al,dx
  411557:	lahf   
  411558:	sub    ebx,DWORD PTR ds:0x3b56dc6e
  41155e:	mov    BYTE PTR [eax+eiz*4+0x74304241],dl
  411565:	push   es
  411566:	leave  
  411567:	and    BYTE PTR [ebp-0x48b00487],0x1e
  41156e:	cmp    ch,cl
  411570:	sub    al,0x72
  411572:	pop    esp
  411573:	sbb    eax,0x17322ea3
  411578:	push   ecx
  411579:	in     al,dx
  41157a:	(bad)  
  41157b:	test   DWORD PTR [esi-0x2a28d3e2],ebx
  411581:	loop   0x411552
  411583:	outs   dx,DWORD PTR ds:[esi]
  411584:	int    0xe
  411586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411587:	stos   BYTE PTR es:[edi],al
  411588:	imul   eax,DWORD PTR [esi-0x1fb46fe7],0xffffffc5
  41158f:	test   edi,0xb9d3dee1
  411595:	mov    al,0x6c
  411597:	pop    edi
  411598:	jmp    0x7560dd30
  41159d:	ror    DWORD PTR [edi],0x2c
  4115a0:	inc    edi
  4115a1:	mov    bh,0x2f
  4115a3:	cdq    
  4115a4:	ret    0xa52e
  4115a7:	lods   eax,DWORD PTR ds:[esi]
  4115a8:	push   ds
  4115a9:	push   es
  4115aa:	es into 
  4115ac:	sbb    DWORD PTR [edx+0x155a206d],ebp
  4115b2:	pop    eax
  4115b3:	stc    
  4115b4:	adc    ebx,DWORD PTR [edi]
  4115b6:	neg    DWORD PTR [ebp-0x53c28a63]
  4115bc:	jne    0x411564
  4115be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115bf:	rol    DWORD PTR [esi],0xe0
  4115c2:	jmp    0xb36736d
  4115c7:	push   cs
  4115c8:	(bad)  
  4115c9:	aam    0xd1
  4115cb:	push   eax
  4115cc:	loop   0x41161a
  4115ce:	stos   BYTE PTR es:[edi],al
  4115cf:	test   DWORD PTR [esi+0x54a1465e],ebx
  4115d5:	add    esp,DWORD PTR [ebx]
  4115d7:	mov    bh,0x79
  4115d9:	push   0xd
  4115db:	jg     0xcb4801c1
  4115e1:	imul   esp,DWORD PTR [eax-0x5406920f],0x4b0b43d0
  4115eb:	in     al,0x5d
  4115ed:	add    ch,0x13
  4115f0:	int3   
  4115f1:	in     eax,0x41
  4115f3:	xchg   ecx,eax
  4115f4:	jb     0x4115de
  4115f6:	jp     0x4115a9
  4115f8:	bound  eax,QWORD PTR [eax+0x7a]
  4115fb:	sub    BYTE PTR [edi],0xf8
  4115fe:	(bad)  
  4115ff:	mov    eax,0xb388eb79
  411604:	test   DWORD PTR [ebx],edi
  411606:	outs   dx,DWORD PTR ds:[esi]
  411607:	mov    ds:0x8147e166,eax
  41160c:	mov    eax,0xd7f6d0c3
  411611:	push   edx
  411612:	cmp    dl,BYTE PTR [edi+0x19]
  411615:	pop    edi
  411616:	adc    eax,0x77536edd
  41161b:	or     al,0x52
  41161d:	leave  
  41161e:	xor    ecx,esi
  411620:	iret   
  411621:	mov    cl,0x1d
  411623:	mov    DWORD PTR [esi-0x27],edi
  411626:	jb     0x411624
  411628:	ja     0x4115d2
  41162a:	shl    DWORD PTR [ebp+0x6b489930],0x18
  411631:	add    ecx,eax
  411633:	jl     0x411692
  411635:	xor    al,0x25
  411637:	es jno 0x4116b8
  41163a:	lods   eax,DWORD PTR ds:[esi]
  41163b:	mov    ebp,0x8f310688
  411640:	xchg   ecx,eax
  411641:	push   edx
  411642:	ficom  DWORD PTR [edi-0x4522ced5]
  411648:	mov    bh,0xbb
  41164a:	jae    0x411633
  41164c:	and    DWORD PTR [esi-0x8],ebx
  41164f:	nop
  411650:	imul   edi,DWORD PTR [esi+ecx*8+0x51],0x27
  411655:	idiv   BYTE PTR [esi+0x6a5ebbec]
  41165b:	call   FWORD PTR [ecx-0x19]
  41165e:	pop    ebp
  41165f:	arpl   WORD PTR [esi+0x20],bp
  411662:	ds jb  0x411663
  411665:	adc    edx,DWORD PTR [ebp-0x24119f5b]
  41166b:	mul    DWORD PTR [esi-0x53156a7]
  411671:	jnp    0x4116ab
  411673:	pop    edx
  411674:	cmp    ebx,DWORD PTR [ebp-0x74]
  411677:	or     eax,0x32375f4f
  41167c:	icebp  
  41167d:	cmp    BYTE PTR [eax],dl
  41167f:	ffree  st(7)
  411681:	popf   
  411682:	ret    
  411683:	push   ds
  411684:	int3   
  411685:	jmp    0xafd1ff8a
  41168a:	push   cs
  41168b:	sbb    al,0x6f
  41168d:	and    ebp,DWORD PTR [edi+esi*1-0x37]
  411691:	mov    dh,0x6b
  411693:	data16 cmc 
  411695:	push   ds
  411696:	icebp  
  411697:	push   edx
  411698:	xor    al,0xc8
  41169a:	push   eax
  41169b:	mov    ds:0x249b8827,eax
  4116a0:	fldenv [edx+0x13]
  4116a3:	(bad)  
  4116a4:	mov    esi,0x95da35cb
  4116a9:	jae    0x41169f
  4116ab:	xchg   edi,eax
  4116ac:	sub    BYTE PTR [ecx-0x13],dl
  4116af:	fwait
  4116b0:	or     BYTE PTR [eax+0x672f979b],0xf9
  4116b7:	mov    eax,ds:0x8bd2b918
  4116bc:	jo     0x4116a8
  4116be:	jmp    0x411709
  4116c0:	in     al,dx
  4116c1:	loopne 0x411655
  4116c3:	repnz adc BYTE PTR [ebp-0x4e2fbd11],bl
  4116ca:	mov    dl,0xb7
  4116cc:	(bad)  
  4116ce:	pop    edx
  4116cf:	sbb    al,0x20
  4116d1:	cmp    edi,esi
  4116d3:	pop    ss
  4116d4:	or     eax,0xc9af48d4
  4116d9:	cld    
  4116da:	xchg   edi,eax
  4116db:	push   ebp
  4116dc:	out    0x68,eax
  4116de:	push   0x1540a6ac
  4116e3:	add    dh,BYTE PTR [edx]
  4116e5:	aas    
  4116e6:	fdivr  st,st(5)
  4116e8:	retf   
  4116e9:	ins    DWORD PTR es:[edi],dx
  4116ea:	push   edi
  4116eb:	and    BYTE PTR ds:0x3f13fcaa,bh
  4116f1:	push   esi
  4116f2:	push   ebp
  4116f3:	in     eax,0xb5
  4116f5:	loopne 0x41170b
  4116f7:	cmc    
  4116f8:	mov    eax,ds:0x68594179
  4116fd:	push   ecx
  4116fe:	jecxz  0x411702
  411700:	push   eax
  411701:	sbb    ebx,DWORD PTR [eax+0x29ef6d68]
  411707:	jecxz  0x4116e7
  411709:	call   0x2382f983
  41170e:	cmp    bl,BYTE PTR [ebx]
  411710:	push   esp
  411711:	xor    dl,dl
  411713:	push   DWORD PTR [esi-0x48]
  411716:	xchg   BYTE PTR [ebx+ecx*2],cl
  411719:	popa   
  41171a:	add    BYTE PTR [ebp+0x7f],bl
  41171d:	imul   ecx,ebx,0x54
  411720:	and    DWORD PTR [eax-0x7e],edi
  411723:	adc    DWORD PTR [edi-0x25],edi
  411726:	mov    al,ds:0x9cfe23e1
  41172b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41172d:	dec    edi
  41172e:	imul   ebx,ebp,0x813677ed
  411734:	aad    0x1c
  411736:	inc    BYTE PTR [bp+di]
  411739:	loopne 0x411729
  41173b:	cli    
  41173c:	and    BYTE PTR [esi-0x568c3cbe],0x28
  411743:	scas   al,BYTE PTR es:[edi]
  411744:	pushf  
  411745:	sub    al,0x91
  411747:	imul   esi,DWORD PTR [edi+0x6360b303],0x18f440ba
  411751:	lods   al,BYTE PTR ds:[esi]
  411752:	(bad)  
  411753:	icebp  
  411754:	xor    eax,0x5382e710
  411759:	or     ebx,DWORD PTR [ecx-0x4a]
  41175c:	adc    al,0xa4
  41175e:	xchg   ebx,eax
  41175f:	xchg   ebx,eax
  411760:	(bad)  
  411761:	int3   
  411762:	sub    ebx,DWORD PTR [esi-0x1f]
  411765:	xchg   esi,eax
  411766:	in     al,dx
  411767:	cli    
  411768:	jmp    0xf368392e
  41176d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176e:	cdq    
  41176f:	ret    
  411770:	jo     0x41173f
  411772:	div    DWORD PTR [edi+0x1a4c588d]
  411778:	adc    BYTE PTR [ecx+0x5e7bec5f],0x86
  41177f:	sbb    edi,DWORD PTR [esi]
  411781:	aaa    
  411782:	ror    BYTE PTR [eax],0xa6
  411785:	js     0x411799
  411787:	xor    al,BYTE PTR [ebx+0x632673bc]
  41178d:	retf   
  41178e:	je     0x411746
  411790:	and    ebp,DWORD PTR [edi]
  411792:	mov    ds:0x6bafbb09,eax
  411797:	repz neg ah
  41179a:	xor    ch,ah
  41179c:	or     BYTE PTR [ebx-0x4],al
  41179f:	mov    dl,0x6b
  4117a1:	ret    
  4117a2:	mov    ch,0x50
  4117a4:	call   eax
  4117a6:	dec    esp
  4117a7:	lea    edi,[eax-0x11]
  4117aa:	sbb    bl,al
  4117ac:	fdivr  st,st(2)
  4117ae:	pushf  
  4117af:	jge    0x4117da
  4117b1:	xchg   esp,eax
  4117b2:	cmp    al,0x77
  4117b4:	sbb    eax,ebp
  4117b6:	pop    ebp
  4117b7:	out    dx,al
  4117b8:	and    al,0x13
  4117ba:	fnstenv [eax+edx*2]
  4117bd:	popf   
  4117be:	cmp    edx,DWORD PTR [edx]
  4117c0:	pop    ebx
  4117c1:	inc    ebx
  4117c2:	lea    edx,[edx+ecx*1]
  4117c5:	mov    dh,0x51
  4117c7:	dec    ebp
  4117c8:	add    eax,0xa1c623c1
  4117cd:	addr16 mov ch,0x1d
  4117d0:	dec    esi
  4117d1:	sti    
  4117d2:	mov    eax,0xbe2e6c0b
  4117d7:	pop    ebx
  4117d8:	sahf   
  4117d9:	and    DWORD PTR [eax-0x2f67ece],eax
  4117df:	out    0x95,al
  4117e1:	aam    0xa3
  4117e3:	lahf   
  4117e4:	jnp    0x41179a
  4117e6:	cld    
  4117e7:	jnp    0x41185f
  4117e9:	in     eax,dx
  4117ea:	(bad)  
  4117eb:	jns    0x4117e8
  4117ed:	xor    ebp,DWORD PTR [ebx]
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	ds stos BYTE PTR es:[edi],al
  41186e:	loopne 0x411889
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	mov    ds:0x62f99067,eax
  41187d:	(bad)  
  41187e:	or     edi,DWORD PTR [eax]
  411880:	sbb    eax,0x7645d9c8
  411885:	jle    0x411847
  411887:	pop    edx
  411888:	imul   esp,DWORD PTR [edi-0x2a1c965c],0xfa12ec48
  411892:	in     al,dx
  411893:	dec    ebp
  411894:	adc    DWORD PTR [ebp+0x38d14e89],ecx
  41189a:	test   BYTE PTR [ecx-0x3c34aacf],ch
  4118a0:	mov    eax,0x36d8dbed
  4118a5:	jle    0x411905
  4118a7:	mov    cs,WORD PTR [edi+0x25]
  4118aa:	inc    esi
  4118ab:	scas   eax,DWORD PTR es:[edi]
  4118ac:	jmp    0x4118a9
  4118ae:	scas   al,BYTE PTR es:[edi]
  4118af:	adc    al,0x23
  4118b1:	je     0x411883
  4118b3:	lea    ecx,[eax-0x65736c09]
  4118b9:	sub    ecx,DWORD PTR [ebx]
  4118bb:	push   ebx
  4118bc:	mov    es,WORD PTR [edi-0x53]
  4118bf:	das    
  4118c0:	mov    ebx,0xad781b80
  4118c5:	loopne 0x4118db
  4118c7:	rcl    DWORD PTR [eax+edx*1-0x4c],1
  4118cb:	jmp    0x411889
  4118cd:	mov    ebx,0x65a10aa4
  4118d2:	cmp    eax,0x2e36b8af
  4118d7:	hlt    
  4118d8:	arpl   WORD PTR [eax],di
  4118da:	stos   DWORD PTR es:[edi],eax
  4118db:	loop   0x4118ca
  4118dd:	fst    st(0)
  4118df:	(bad)  
  4118e0:	mov    edi,edx
  4118e2:	mov    edi,0x514ef248
  4118e7:	aam    0x73
  4118e9:	pop    edi
  4118ea:	adc    DWORD PTR [eax-0x7bd23771],ecx
  4118f0:	mov    edi,edx
  4118f2:	jecxz  0x41196a
  4118f4:	mov    ds:0xa499175e,eax
  4118f9:	mov    cl,BYTE PTR [ebx+0x533cf7d1]
  4118ff:	mov    eax,0x1c9072fd
  411905:	int3   
  411906:	cmp    eax,0x893a8790
  41190b:	or     al,0x64
  41190d:	daa    
  41190e:	int    0x74
  411910:	mov    bh,BYTE PTR [ebp+0x7cecf46f]
  411916:	repnz inc esi
  411918:	jnp    0x41189d
  41191a:	addr16 pop eax
  41191c:	pop    esp
  41191d:	fcomp  DWORD PTR [edx+0x1de91aaf]
  411923:	mov    dl,ch
  411925:	mov    bl,dh
  411927:	icebp  
  411928:	pusha  
  411929:	outs   dx,DWORD PTR ds:[esi]
  41192a:	mov    dh,0x69
  41192c:	mov    BYTE PTR [eax+esi*2],cl
  41192f:	clc    
  411930:	adc    ecx,DWORD PTR [edx]
  411932:	jmp    0x123effc1
  411937:	stos   DWORD PTR es:[edi],eax
  411938:	push   eax
  411939:	lahf   
  41193a:	ja     0x4118ff
  41193c:	mov    ebp,0x5b82a819
  411941:	xor    edi,DWORD PTR [edi-0x18c60e27]
  411947:	cmp    DWORD PTR [ebx-0x26],ebp
  41194a:	mov    al,ds:0xe10e0d3b
  411950:	js     0xc3e8cd54
  411956:	add    al,0x82
  411958:	gs cli 
  41195a:	sub    eax,0xcea32e03
  41195f:	push   edi
  411960:	cwde   
  411961:	mov    al,ds:0x62e5b943
  411966:	xor    esi,0xd38b77d9
  41196c:	push   edx
  41196d:	out    dx,eax
  41196e:	aam    0x6c
  411970:	pop    eax
  411971:	mov    eax,ds:0x7abef655
  411976:	fsub   QWORD PTR [ecx-0x9]
  411979:	pop    edi
  41197a:	dec    ecx
  41197b:	mov    ds:0xc44ddfb9,eax
  411980:	inc    ebx
  411981:	scas   eax,DWORD PTR es:[edi]
  411982:	mov    ebx,0x2073127a
  411987:	jbe    0x4119c6
  411989:	cmp    BYTE PTR [esi-0x73af61b4],cl
  41198f:	popf   
  411990:	push   edx
  411991:	push   eax
  411992:	cmp    ebp,DWORD PTR [esi]
  411994:	dec    BYTE PTR [esi-0x21]
  411997:	xor    BYTE PTR [ecx+0x4e531013],bh
  41199d:	shl    esi,0xf9
  4119a0:	mov    dh,0x3b
  4119a2:	sub    BYTE PTR [eax+ebp*1-0x65091ae7],bh
  4119a9:	imul   esi,DWORD PTR [eax+0xf3daf74],0xffffff96
  4119b0:	lea    eax,[ebx+0x64]
  4119b3:	cmp    WORD PTR [eax+0x78d9e93c],0x9dc7
  4119bc:	dec    ebx
  4119bd:	add    ah,BYTE PTR [ecx-0x606f7817]
  4119c3:	test   eax,0x610c00b1
  4119c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c9:	test   DWORD PTR [edx-0x665a267c],esp
  4119cf:	ds cs repnz xchg esi,eax
  4119d3:	mov    ds:0x18f27cfc,eax
  4119d8:	clc    
  4119d9:	js     0x411985
  4119db:	mov    esi,DWORD PTR [esi+0x55]
  4119de:	in     eax,0x1b
  4119e0:	or     DWORD PTR [edx+0x2f],eax
  4119e3:	repnz xchg edi,eax
  4119e5:	mov    ds:0x4cd9788,al
  4119ea:	mov    DWORD PTR [ebx],eax
  4119ec:	popf   
  4119ed:	pop    ebx
  4119ee:	jp     0x411971
  4119f0:	sahf   
  4119f1:	imul   edx,ebp,0x8da04e05
  4119f7:	jbe    0x4119a8
  4119f9:	xchg   ebp,eax
  4119fa:	outs   dx,DWORD PTR ds:[esi]
  4119fb:	outs   dx,DWORD PTR ds:[esi]
  4119fc:	sbb    ebx,DWORD PTR [edx-0x8b655b4]
  411a02:	inc    edi
  411a03:	mov    bl,0x5d
  411a05:	test   al,0x99
  411a07:	and    DWORD PTR ds:0x7746f5f,0x587ff7d6
  411a11:	jns    0x411a67
  411a13:	sub    eax,0xec684e7f
  411a18:	repnz ins BYTE PTR es:[edi],dx
  411a1a:	and    al,0x37
  411a1c:	or     BYTE PTR [ecx-0x12],0xff
  411a20:	mov    dh,0x32
  411a22:	inc    esp
  411a23:	jne    0x4119d1
  411a25:	jne    0x4119c1
  411a27:	scas   al,BYTE PTR es:[edi]
  411a28:	add    al,0x2a
  411a2a:	inc    esp
  411a2b:	add    eax,0x44c9f940
  411a30:	or     ebx,DWORD PTR [edi-0x20695ead]
  411a36:	and    BYTE PTR [edi-0x4b948867],bh
  411a3c:	cmp    ecx,ebx
  411a3e:	cmp    eax,DWORD PTR [edx+0x513965b8]
  411a44:	push   edx
  411a45:	loop   0x411a74
  411a47:	gs mov ebp,0xcf53a34c
  411a4d:	int    0x50
  411a4f:	stos   DWORD PTR es:[edi],eax
  411a50:	fnsave [ecx-0x80]
  411a53:	or     BYTE PTR [ecx],dl
  411a55:	lahf   
  411a56:	in     eax,0x50
  411a58:	rcl    BYTE PTR [ecx],0xf9
  411a5b:	lods   al,BYTE PTR ds:[esi]
  411a5c:	push   es
  411a5d:	jae    0x411a6d
  411a5f:	push   ebp
  411a60:	pop    edx
  411a61:	xor    dh,ah
  411a63:	push   ds
  411a64:	cs adc eax,DWORD PTR ss:[ebx]
  411a68:	call   0x34781c7
  411a6d:	push   esp
  411a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a6f:	xchg   edx,eax
  411a70:	pop    esi
  411a71:	cmp    edx,ebp
  411a73:	or     al,0x32
  411a75:	test   eax,0x98f6900b
  411a7a:	add    eax,0xe2f8ab0d
  411a7f:	pop    ecx
  411a80:	dec    esi
  411a81:	push   0x69
  411a83:	jecxz  0x411a44
  411a85:	nop    DWORD PTR [eax+0x4584a185]
  411a8c:	in     al,0x99
  411a8e:	pop    eax
  411a8f:	les    edx,FWORD PTR [edx+0x5d]
  411a92:	push   0x943e2487
  411a97:	pop    es
  411a98:	mov    edi,0x6a4554c5
  411a9d:	gs lock lock xchg esi,eax
  411aa1:	add    al,BYTE PTR [esi+0x34edf40f]
  411aa7:	sahf   
  411aa8:	xchg   esi,eax
  411aa9:	div    BYTE PTR [ecx-0x4404f946]
  411aaf:	add    DWORD PTR [ecx+eax*8+0x12128ae7],0xb739a4e8
  411aba:	pop    ebx
  411abb:	sahf   
  411abc:	xchg   ecx,eax
  411abd:	inc    esi
  411abe:	push   edi
  411abf:	adc    esp,DWORD PTR [edx*8-0x674e1c4f]
  411ac6:	pop    es
  411ac7:	xor    BYTE PTR [edi-0x7c],0xb1
  411acb:	fidivr WORD PTR [edi-0x39c59776]
  411ad1:	pusha  
  411ad2:	loop   0x411a7e
  411ad4:	dec    esi
  411ad5:	out    0x20,al
  411ad7:	mov    ebp,0x3aba66e5
  411adc:	fwait
  411add:	add    BYTE PTR [ebp+0x3b],0x51
  411ae1:	push   0x471d6219
  411ae6:	(bad)  
  411ae7:	sti    
  411ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae9:	cmp    eax,0x91fadb9a
  411aee:	cmp    eax,DWORD PTR es:[ebx+0x7eb6f859]
  411af5:	out    0x1c,eax
  411af7:	mov    eax,0xf79c227e
  411afc:	scas   eax,DWORD PTR es:[edi]
  411afd:	mov    cl,0x82
  411aff:	dec    esp
  411b00:	push   eax
  411b01:	mov    ch,0x3b
  411b03:	xlat   BYTE PTR ds:[ebx]
  411b04:	clc    
  411b05:	dec    edi
  411b06:	mov    edx,0xadd7b4b5
  411b0b:	rcl    BYTE PTR [eax-0x7e22b2b],0x8d
  411b12:	add    ecx,DWORD PTR [eax+0x51]
  411b15:	pop    esp
  411b16:	xor    edi,edx
  411b18:	sbb    ch,ch
  411b1a:	idiv   DWORD PTR [ebp+0x1f]
  411b1d:	cmc    
  411b1e:	and    DWORD PTR [eax],esp
  411b20:	add    edx,edi
  411b22:	stos   DWORD PTR es:[edi],eax
  411b23:	dec    esp
  411b24:	retf   
  411b25:	loopne 0x411b8d
  411b27:	lock (bad) 
  411b29:	sbb    bl,dh
  411b2b:	mov    ch,0x46
  411b2d:	ret    0x166
  411b30:	mov    WORD PTR [esi],gs
  411b32:	ret    0x10a4
  411b35:	push   edi
  411b36:	sbb    dh,BYTE PTR [ecx-0x75]
  411b39:	push   ebp
  411b3a:	adc    BYTE PTR [ecx+ecx*4-0x31],ah
  411b3e:	mov    ds:0xea84f44b,al
  411b43:	imul   esi,DWORD PTR [ebx],0x47e74a01
  411b49:	test   DWORD PTR [esi+esi*8+0x50],ecx
  411b4d:	inc    ecx
  411b4e:	jle    0x411b29
  411b50:	mov    eax,ds:0x12d94323
  411b55:	mov    ecx,0xae519e08
  411b5a:	pop    ebx
  411b5b:	loop   0x411b86
  411b5d:	xchg   ebx,eax
  411b5e:	and    eax,0x7e6bf479
  411b63:	retf   
  411b64:	enter  0x1d77,0x79
  411b68:	cdq    
  411b69:	lods   al,BYTE PTR ds:[esi]
  411b6a:	adc    dh,bl
  411b6c:	sub    BYTE PTR [eax+0x2eb477fa],0xf9
  411b73:	fnstsw WORD PTR [esi+0x34]
  411b76:	or     bh,BYTE PTR [edi+0x558b470d]
  411b7c:	cwde   
  411b7d:	popa   
  411b7e:	pop    ebx
  411b7f:	add    DWORD PTR [eax-0x7a9d1d0a],0x1d
  411b86:	push   esp
  411b87:	mov    ds:0x2a1c0c4,eax
  411b8c:	add    cl,BYTE PTR [ebx]
  411b8e:	mov    eax,ds:0x3724e316
  411b93:	mov    eax,0xb08b8082
  411b98:	add    ebp,DWORD PTR [eax-0x4e31e9d4]
  411b9e:	lods   eax,DWORD PTR ds:[esi]
  411b9f:	sub    al,0xbd
  411ba1:	das    
  411ba2:	loope  0x411b4a
  411ba4:	mov    ah,BYTE PTR [esi+0x2a2135fe]
  411baa:	into   
  411bab:	sub    cl,ch
  411bad:	les    esi,FWORD PTR [ebx+0x22]
  411bb0:	dec    ebx
  411bb1:	jmp    0x8786fc67
  411bb6:	jecxz  0x411b62
  411bb8:	pop    eax
  411bb9:	stos   BYTE PTR es:[edi],al
  411bba:	mov    cl,BYTE PTR [ebx+ecx*4-0x1]
  411bbe:	popa   
  411bbf:	push   eax
  411bc0:	rol    DWORD PTR [ebx-0x3d6cc02d],cl
  411bc6:	or     DWORD PTR ds:0xd835e623,esi
  411bcc:	adc    eax,0xd3aa586e
  411bd1:	scas   al,BYTE PTR es:[edi]
  411bd2:	fucomp st(7)
  411bd4:	fadd   DWORD PTR [ecx+0x46b607c0]
  411bda:	add    eax,0x1694795
  411bdf:	mov    esp,0x45c72ecc
  411be4:	std    
  411be5:	xchg   edi,eax
  411be6:	mov    bh,bh
  411be8:	shl    BYTE PTR [ebp+0x5b2db382],1
  411bee:	into   
  411bef:	shr    DWORD PTR [eax],cl
  411bf1:	in     eax,dx
  411bf2:	data16 ficom DWORD PTR [edi+0x6]
  411bf6:	repz or DWORD PTR ds:0x54c5a3e0,esp
  411bfd:	cmp    DWORD PTR [ebp-0x74],eax
  411c00:	pushf  
  411c01:	test   DWORD PTR [edx-0x45],esi
  411c04:	lea    edx,[ebp-0x35f00ca2]
  411c0a:	jle    0x411bb3
  411c0c:	ss nop
  411c0e:	mov    esi,DWORD PTR [eax+edx*1-0x46]
  411c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c13:	in     al,0x62
  411c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c16:	xchg   BYTE PTR [ebx],ah
  411c18:	leave  
  411c19:	sub    BYTE PTR [ebp+0x21ee1132],0xfa
  411c20:	out    0x98,al
  411c22:	mov    bl,0xe0
  411c24:	add    DWORD PTR [ecx-0x41],edi
  411c27:	or     dl,BYTE PTR [edi+0x7fc7bedc]
  411c2d:	loop   0x411bc4
  411c2f:	sbb    al,0xb8
  411c31:	cld    
  411c32:	push   edi
  411c33:	jge    0x411c17
  411c35:	push   ecx
  411c36:	dec    ebp
  411c37:	jno    0x411c9c
  411c39:	retf   
  411c3a:	in     eax,0x1c
  411c3c:	mov    esi,0x181ad83d
  411c41:	jbe    0x411c5a
  411c43:	mov    esi,DWORD PTR [edi]
  411c45:	cs pop ecx
  411c47:	in     eax,0xfc
  411c49:	dec    eax
  411c4a:	mov    esp,0x3d8bf569
  411c4f:	stos   DWORD PTR es:[edi],eax
  411c50:	xchg   edi,eax
  411c51:	mov    ebx,0xccf87575
  411c56:	aad    0xc0
  411c58:	jl     0x411c75
  411c5a:	jp     0x411c95
  411c5c:	or     al,0xe4
  411c5e:	retf   0x387b
  411c61:	or     esi,edx
  411c63:	sbb    bl,BYTE PTR [ebp+0x79e96b07]
  411c69:	out    0xeb,eax
  411c6b:	ins    DWORD PTR es:[edi],dx
  411c6c:	fcmovne st,st(3)
  411c6e:	popa   
  411c6f:	and    eax,0x4eb7b2c9
  411c74:	out    dx,eax
  411c75:	push   edx
  411c76:	adc    ebx,ebp
  411c78:	or     al,0x99
  411c7a:	xchg   esi,eax
  411c7b:	add    DWORD PTR [ebx-0x6cfdb897],esp
  411c81:	repnz retf 0xaa72
  411c85:	ret    0x3c93
  411c88:	xor    ebx,DWORD PTR [edi]
  411c8a:	dec    edx
  411c8b:	lds    esp,FWORD PTR [eax]
  411c8d:	xchg   ecx,eax
  411c8e:	mul    DWORD PTR [ebx]
  411c90:	push   0x2753a9f6
  411c95:	loop   0x411d11
  411c97:	dec    ecx
  411c98:	cmp    ebp,DWORD PTR [edx+0x55]
  411c9b:	test   al,0xaf
  411c9d:	adc    bl,BYTE PTR [esi-0x5cc91b6c]
  411ca3:	jb     0x411c6d
  411ca5:	add    dh,BYTE PTR [ecx+0x6fdc1e68]
  411cab:	inc    esp
  411cac:	xchg   esi,eax
  411cad:	shl    DWORD PTR [ecx],1
  411caf:	xor    BYTE PTR [ebp+0x68],cl
  411cb2:	cmp    ah,dl
  411cb4:	or     BYTE PTR [edx+0x4],0xc1
  411cb8:	adc    ecx,ecx
  411cba:	js     0x411cd5
  411cbc:	in     al,0x21
  411cbe:	and    esi,DWORD PTR [esi-0x6c5f0047]
  411cc4:	mov    al,ds:0x341563ec
  411cc9:	out    dx,eax
  411cca:	hlt    
  411ccb:	cs fcomi st,st(1)
  411cce:	loope  0x411c8e
  411cd0:	inc    eax
  411cd1:	mov    esp,DWORD PTR [ebp-0x2c]
  411cd4:	cdq    
  411cd5:	pop    eax
  411cd6:	add    eax,0xc7d9e611
  411cdb:	mov    ebx,0x23810041
  411ce0:	xchg   ecx,eax
  411ce1:	rcl    BYTE PTR [si-0x6afc],1
  411ce6:	inc    ebp
  411ce7:	and    dh,BYTE PTR [edx]
  411ce9:	inc    ebp
  411cea:	mov    dl,0xdb
  411cec:	fsub   QWORD PTR [ecx-0x4c4c9fd7]
  411cf2:	fwait
  411cf3:	pop    ebp
  411cf4:	sbb    DWORD PTR [ebx-0x10],edx
  411cf7:	push   ds
  411cf8:	push   ecx
  411cf9:	push   ds
  411cfa:	mov    ds:0xda9c9c1a,eax
  411cff:	or     al,0x7f
  411d01:	inc    esi
  411d02:	mov    ebx,DWORD PTR [ecx-0x5]
  411d05:	mov    ah,0x9e
  411d07:	out    0x74,al
  411d09:	ins    BYTE PTR es:[edi],dx
  411d0a:	or     eax,0x2b1bf8ef
  411d0f:	mov    ebp,0x83dc4ee0
  411d14:	add    BYTE PTR [edx+0x59d1284f],bh
  411d1a:	addr16 pop ebx
  411d1c:	cld    
  411d1d:	mov    esi,0x5f1df8c4
  411d22:	mov    ah,0x2e
  411d24:	std    
  411d25:	pushf  
  411d26:	jle    0x411cf8
  411d28:	dec    ebp
  411d29:	sbb    edi,DWORD PTR [eax-0x7f]
  411d2c:	jae    0x411cc1
  411d2e:	add    bl,ch
  411d30:	(bad)  
  411d31:	adc    ebp,DWORD PTR [eax-0x49]
  411d34:	mov    cl,0x48
  411d36:	scas   al,BYTE PTR es:[edi]
  411d37:	into   
  411d38:	push   ss
  411d39:	imul   esi,DWORD PTR [eax+0x4d],0x4e
  411d3d:	adc    DWORD PTR [edx-0x129ce26c],ecx
  411d43:	arpl   WORD PTR [eax-0x3e],bx
  411d46:	mov    DWORD PTR ds:[edi],edi
  411d49:	fist   DWORD PTR [ebp+0x3f]
  411d4c:	inc    ecx
  411d4d:	imul   ebx,DWORD PTR [ecx+0x31d5ce22],0x6f8c9105
  411d57:	mov    bl,0x77
  411d59:	pop    ecx
  411d5a:	aaa    
  411d5b:	cmp    al,0x1d
  411d5d:	sbb    al,0xda
  411d5f:	inc    edi
  411d60:	stc    
  411d61:	jo     0x411d6d
  411d63:	mov    dh,0x4f
  411d65:	cmp    ch,BYTE PTR [esi+0x61]
  411d68:	add    ebp,DWORD PTR [ecx+0x16]
  411d6b:	stc    
  411d6c:	xor    edx,ebx
  411d6e:	test   BYTE PTR [ebx+esi*1+0x71],0x22
  411d73:	inc    edi
  411d74:	cld    
  411d75:	int    0x23
  411d77:	(bad)  
  411d78:	dec    esi
  411d79:	push   cs
  411d7a:	(bad)  
  411d7b:	or     al,0xaf
  411d7d:	pop    eax
  411d7e:	dec    ecx
  411d7f:	sbb    ah,bl
  411d81:	push   es
  411d82:	push   0xffffff82
  411d84:	pop    edi
  411d85:	sbb    ebp,DWORD PTR [edx+0xd3ea301]
  411d8b:	in     eax,dx
  411d8c:	inc    ecx
  411d8d:	test   BYTE PTR [eax+ecx*2+0x4e],bh
  411d91:	mov    dh,0xe7
  411d93:	inc    eax
  411d94:	mov    gs,WORD PTR [edx-0x3c]
  411d97:	loope  0x411dd6
  411d99:	mov    eax,ds:0x911b268d
  411d9e:	(bad)  
  411d9f:	pop    ss
  411da0:	add    ah,BYTE PTR [eax]
  411da2:	or     BYTE PTR [edi+0xb],0x7d
  411da6:	es push ebp
  411da8:	shl    DWORD PTR [edi+0x42f9ab9d],1
  411dae:	pop    ebp
  411daf:	pop    ebx
  411db0:	dec    ebx
  411db1:	fadd   st,st(2)
  411db3:	ret    0x3d41
  411db6:	outs   dx,BYTE PTR ds:[esi]
  411db7:	xor    al,0x3c
  411db9:	mov    ch,0xb4
  411dbb:	mov    ch,0x27
  411dbd:	mov    ch,0x5b
  411dbf:	xchg   ebp,eax
  411dc0:	push   cs
  411dc1:	je     0x411dd8
  411dc3:	xlat   BYTE PTR ds:[ebx]
  411dc4:	mov    ds:0xb03c5bb4,al
  411dc9:	(bad)  
  411dca:	fadd   DWORD PTR [eax-0x69]
  411dcd:	sbb    DWORD PTR [esi],ecx
  411dcf:	or     DWORD PTR [edx-0x176fe31e],0xf216d99f
  411dd9:	repz neg DWORD PTR [ecx+0x65]
  411ddd:	mov    edi,edi
  411ddf:	pop    edi
  411de0:	adc    BYTE PTR [edi+edx*1+0x54749ded],bl
  411de7:	push   edx
  411de8:	xchg   BYTE PTR [edx],ah
  411dea:	out    0x5b,eax
  411dec:	dec    ecx
  411ded:	imul   ecx,DWORD PTR [ebx-0x343ee747],0x1
  411df4:	jo     0x411e1b
  411df6:	add    bl,dh
  411df8:	dec    esp
  411df9:	loopne 0x411db0
  411dfb:	hlt    
  411dfc:	and    BYTE PTR [esi+0x1b],0x3b
  411e00:	inc    ebp
  411e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e02:	bound  edi,QWORD PTR [eax+0xda5a0e0]
  411e08:	xlat   BYTE PTR ds:[ebx]
  411e09:	dec    ecx
  411e0a:	pop    ecx
  411e0b:	jl     0x411e80
  411e0d:	cmp    ebp,DWORD PTR [esi+0x2657f28c]
  411e13:	lods   al,BYTE PTR ds:[esi]
  411e14:	iret   
  411e15:	int    0xa2
  411e17:	mov    ebx,0x8a2b8b5c
  411e1c:	add    cl,BYTE PTR [ebx+0x71]
  411e1f:	inc    edx
  411e20:	loope  0x411e19
  411e22:	push   ds
  411e23:	jl     0x411dfc
  411e25:	shr    edx,cl
  411e27:	mov    ah,0xcc
  411e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e2a:	push   ebx
  411e2b:	fsubrp st(3),st
  411e2d:	xchg   DWORD PTR [ebx-0x21],ecx
  411e30:	test   al,0x68
  411e32:	ins    BYTE PTR es:[edi],dx
  411e33:	xchg   ebx,eax
  411e34:	adc    ch,BYTE PTR [ecx+0xe]
  411e37:	repz jecxz 0x411df3
  411e3a:	fistp  DWORD PTR [ecx-0x67]
  411e3d:	or     BYTE PTR [esp+eax*1+0x55],cl
  411e41:	dec    esp
  411e42:	mov    dl,bh
  411e44:	xchg   ebp,eax
  411e45:	mov    edi,0xfc0c1acc
  411e4a:	push   ss
  411e4b:	mov    WORD PTR [edx],cs
  411e4d:	int3   
  411e4e:	push   edx
  411e4f:	das    
  411e50:	int    0x24
  411e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e53:	cli    
  411e54:	add    ah,BYTE PTR [esi+ebx*4]
  411e57:	out    dx,al
  411e58:	nop
  411e59:	jge    0x411e56
  411e5b:	cmc    
  411e5c:	mov    ds:0x7fe2dc84,eax
  411e61:	jmp    0x411eb3
  411e63:	and    esi,DWORD PTR [ebx-0x73]
  411e66:	adc    al,0x21
  411e68:	les    esp,FWORD PTR [ebx]
  411e6a:	jns    0x411e66
  411e6c:	rcl    DWORD PTR [edx+ebx*8],cl
  411e6f:	inc    edx
  411e70:	dec    edi
  411e71:	xchg   esi,eax
  411e72:	jns    0x411eeb
  411e74:	or     bl,0x9b
  411e77:	cmp    DWORD PTR [edx+0x3701af34],edx
  411e7d:	call   0x33320d89
  411e82:	call   0x47cbdbb2
  411e87:	mov    eax,ds:0x9704a140
  411e8c:	iret   
  411e8d:	call   0xac4d:0x70584527
  411e94:	stc    
  411e95:	inc    ebx
  411e96:	cmp    DWORD PTR [edx],eax
  411e98:	push   ds
  411e99:	sbb    bl,BYTE PTR fs:[esp+ecx*4]
  411e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e9e:	mov    al,ds:0xb035448c
  411ea3:	mov    WORD PTR [ebp-0x6fa6f76f],cs
  411ea9:	repz xlat BYTE PTR es:[ebx]
  411eac:	sub    eax,0x2bca715
  411eb1:	sub    ebp,DWORD PTR [esi]
  411eb3:	arpl   WORD PTR [edx-0x36],cx
  411eb6:	sahf   
  411eb7:	mov    ebp,0x782689b1
  411ebc:	and    al,0x20
  411ebe:	push   esi
  411ebf:	repnz and al,0x68
  411ec2:	loope  0x411ede
  411ec4:	shl    BYTE PTR [esp+ebx*4+0x63],cl
  411ec8:	jecxz  0x411ea7
  411eca:	push   ebx
  411ecb:	shl    DWORD PTR [ebx-0x29],cl
  411ece:	out    0x6c,eax
  411ed0:	ret    
  411ed1:	jb     0x411e5e
  411ed3:	mov    cl,0xf0
  411ed5:	mov    esi,DWORD PTR [eax+0x6e]
  411ed8:	mov    DWORD PTR [esi+0x2af4c3e],edx
  411ede:	and    bl,bl
  411ee0:	push   esi
  411ee1:	pop    ebp
  411ee2:	or     BYTE PTR [bx+si+0xa],0x99
  411ee7:	loopne 0x411f48
  411ee9:	aad    0x6c
  411eeb:	and    eax,0xf1aab65d
  411ef0:	add    al,0xcc
  411ef2:	or     DWORD PTR [ecx+0x57fdcae7],edx
  411ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ef9:	in     al,dx
  411efa:	jo     0x411f79
  411efc:	and    DWORD PTR [esp+esi*1],ebp
  411eff:	mov    WORD PTR [edi-0x27],es
  411f02:	lods   eax,DWORD PTR ds:[esi]
  411f03:	mov    ecx,?
  411f05:	add    al,BYTE PTR [edx-0x7d]
  411f08:	push   edi
  411f09:	dec    edx
  411f0a:	mov    bh,BYTE PTR [esi]
  411f0c:	xchg   ebp,eax
  411f0d:	sahf   
  411f0e:	enterw 0xf8c2,0xb
  411f13:	ror    bh,0x6
  411f16:	in     al,dx
  411f17:	pop    edi
  411f18:	shl    DWORD PTR [ecx-0x74651e3d],1
  411f1e:	sbb    edx,DWORD PTR [eax+0x639cb825]
  411f24:	rcl    DWORD PTR [esi+0x3b232aff],1
  411f2a:	mov    ebp,0x4c2cecb4
  411f2f:	cmc    
  411f30:	ins    DWORD PTR es:[edi],dx
  411f31:	(bad)  
  411f32:	inc    ebx
  411f33:	jle    0x411f7f
  411f35:	pop    eax
  411f36:	push   edi
  411f37:	mov    ah,0xe1
  411f39:	inc    ecx
  411f3a:	mov    edi,0x28f830a6
  411f3f:	scas   al,BYTE PTR es:[edi]
  411f40:	jno    0x411f19
  411f42:	aam    0xd4
  411f44:	lock out dx,al
  411f46:	xchg   ebp,eax
  411f47:	arpl   bp,di
  411f49:	and    DWORD PTR [edi],esi
  411f4b:	jl     0x411eed
  411f4d:	ror    BYTE PTR [ecx-0x52525d93],0xac
  411f54:	jmp    0x411f0d
  411f56:	mov    cl,0xef
  411f58:	fwait
  411f59:	inc    eax
  411f5a:	(bad)  
  411f5b:	cli    
  411f5c:	push   0xffffffa9
  411f5e:	push   ebx
  411f5f:	retf   0x1568
  411f62:	mov    dl,ah
  411f64:	daa    
  411f65:	xor    BYTE PTR [eax-0x41c49f54],al
  411f6b:	test   BYTE PTR [ecx-0x3c6020c1],ah
  411f71:	jb     0x411fe4
  411f73:	xor    eax,0x973c3889
  411f78:	jle    0x411f4b
  411f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f7b:	ins    BYTE PTR es:[edi],dx
  411f7c:	inc    esi
  411f7d:	push   0xffffff94
  411f7f:	(bad)  
  411f80:	push   ecx
  411f81:	dec    ebp
  411f82:	out    dx,al
  411f83:	nop
  411f84:	lock and dh,ch
  411f87:	and    BYTE PTR [edi-0x649fbd35],al
  411f8d:	sbb    bl,BYTE PTR [esi]
  411f8f:	stc    
  411f90:	inc    esp
  411f91:	out    0xcd,al
  411f93:	mov    eax,ds:0xe0c1e2a
  411f98:	pop    ss
  411f99:	and    BYTE PTR [ebp-0x26],cl
  411f9c:	cld    
  411f9d:	cmp    edx,ebx
  411f9f:	sub    eax,0xa3d8498c
  411fa4:	jbe    0x411f49
  411fa6:	popa   
  411fa7:	pop    ebx
  411fa8:	nop
  411fa9:	(bad)  
  411faa:	std    
  411fab:	dec    eax
  411fac:	cmp    ebp,DWORD PTR [edx+0x7f2c3b13]
  411fb2:	mov    ch,0x94
  411fb4:	pop    esp
  411fb5:	ins    DWORD PTR es:[edi],dx
  411fb6:	dec    eax
  411fb7:	xchg   edi,eax
  411fb8:	or     esi,DWORD PTR [ebp+0x7a]
  411fbb:	aad    0x6e
  411fbd:	loopne 0x411fcf
  411fbf:	(bad)  
  411fc0:	lahf   
  411fc1:	push   ss
  411fc2:	das    
  411fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc4:	pushf  
  411fc5:	dec    esp
  411fc6:	xor    al,0xff
  411fc8:	pop    edi
  411fc9:	daa    
  411fca:	jns    0x411fbd
  411fcc:	or     DWORD PTR [eax-0x35],ebp
  411fcf:	cli    
  411fd0:	cmp    edx,DWORD PTR [edi-0x3a]
  411fd3:	adc    cl,BYTE PTR [edx]
  411fd5:	mov    ds:0x99707a36,eax
  411fda:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fdc:	pop    ebp
  411fdd:	rcr    DWORD PTR ds:0xab76412b,1
  411fe3:	or     edx,DWORD PTR [ecx]
  411fe5:	sub    al,0x73
  411fe7:	bound  ecx,QWORD PTR [eax]
  411fe9:	lock aam 0x69
  411fec:	pop    edi
  411fed:	mov    al,0x2a
  411fef:	mov    dl,0xff
  411ff1:	push   cs
  411ff2:	adc    esp,DWORD PTR [ebx+0x1c]
  411ff5:	or     bh,bh
  411ff7:	mov    edi,0x98805777
  411ffc:	cdq    
  411ffd:	sbb    DWORD PTR [edx+0x13],0x25e5c1
  412004:	xchg   esi,eax
  412005:	inc    edx
  412006:	ret    0xb016
  412009:	out    0x5f,eax
  41200b:	xchg   ebx,eax
  41200c:	bound  esi,QWORD PTR [ebx-0x19]
  41200f:	fnstenv [eax+0x1aa411d3]
  412015:	adc    eax,0xd34fb3b3
  41201a:	int3   
  41201b:	leave  
  41201c:	jne    0x412076
  41201e:	outs   dx,BYTE PTR ds:[esi]
  41201f:	adc    esp,DWORD PTR [edx]
  412021:	data16 sub al,0xd
  412024:	call   0x50251b82
  412029:	mov    dl,0x6e
  41202b:	push   esi
  41202c:	shl    BYTE PTR [edi],cl
  41202e:	push   ebp
  41202f:	jl     0x411fc5
  412031:	xor    ebx,DWORD PTR [ebx+esi*2-0x4821cef]
  412038:	xor    BYTE PTR [edi+0x5f],bl
  41203b:	popf   
  41203c:	inc    eax
  41203d:	jl     0x411fe7
  41203f:	enter  0x63e5,0xfb
  412043:	(bad)  
  412044:	jl     0x412075
  412046:	lods   eax,DWORD PTR ds:[esi]
  412047:	js     0x411fe2
  412049:	iret   
  41204a:	call   0xf8ea9dfc
  41204f:	push   ds
  412050:	mov    ds:0x1e2100c5,al
  412055:	sbb    al,0x33
  412057:	lea    edx,[esi+0x74ef2557]
  41205d:	mov    ebp,DWORD PTR [bx-0x24aa]
  412062:	sub    DWORD PTR [edi],0xffffffdd
  412065:	xchg   ebx,eax
  412066:	cmp    DWORD PTR [edi+ecx*1-0x24],0x12921f76
  41206e:	ins    DWORD PTR es:[edi],dx
  41206f:	or     edx,DWORD PTR [eax]
  412071:	cmp    BYTE PTR [ebx],0x8
  412074:	test   BYTE PTR [edi-0x76ff51f7],bh
  41207a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207b:	stos   BYTE PTR es:[edi],al
  41207c:	jno    0x4120ef
  41207e:	call   FWORD PTR [ebx-0x3d3ad71f]
  412084:	pop    edx
  412085:	fist   WORD PTR [ebx-0x23]
  412088:	aam    0x5a
  41208a:	hlt    
  41208b:	pop    eax
  41208c:	(bad)  
  41208d:	pop    ds
  41208e:	addr16 fs popf 
  412091:	aad    0x4a
  412093:	je     0x4120a3
  412095:	or     esp,DWORD PTR [edx+0x2c]
  412098:	nop
  412099:	retf   
  41209a:	mov    dl,0x93
  41209c:	cmp    DWORD PTR [esi+0x4],0xffffffa2
  4120a0:	sbb    ch,BYTE PTR [edx-0x49]
  4120a3:	ret    0xca32
  4120a6:	pop    esp
  4120a7:	xor    ecx,DWORD PTR [ebx+ebp*2-0x56c7bdfe]
  4120ae:	xor    dl,BYTE PTR [esi+0x41]
  4120b1:	pop    eax
  4120b2:	(bad)  
  4120b3:	js     0x41204f
  4120b5:	mov    ds,WORD PTR [edx]
  4120b7:	in     eax,0xf8
  4120b9:	test   DWORD PTR [edi],ebx
  4120bb:	cmp    cl,cl
  4120bd:	call   0x67a39417
  4120c2:	daa    
  4120c3:	adc    ecx,ecx
  4120c5:	xchg   ebp,eax
  4120c6:	fistp  DWORD PTR [edx-0x2f444370]
  4120cc:	and    ecx,ecx
  4120ce:	mov    ebx,0x18f53db
  4120d3:	xor    ebp,DWORD PTR [edx]
  4120d5:	jb     0x4120ec
  4120d7:	sub    BYTE PTR [edx],dl
  4120d9:	test   al,0xbe
  4120db:	shr    DWORD PTR ds:[esi-0x77],cl
  4120df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120e0:	jne    0x4120a0
  4120e2:	sub    al,0x5
  4120e4:	les    eax,FWORD PTR fs:[ebx+edi*4-0x6e5fc674]
  4120ec:	out    dx,eax
  4120ed:	inc    edx
  4120ee:	inc    edx
  4120ef:	rcl    DWORD PTR [ebx+0x29],cl
  4120f2:	cmp    ebx,DWORD PTR [edx+edi*4-0x309a3c61]
  4120f9:	int    0xa7
  4120fb:	sbb    al,0xc6
  4120fd:	fstp   st(4)
  4120ff:	jle    0x4120bc
  412101:	cwde   
  412102:	sti    
  412103:	jl     0x412141
  412105:	sbb    ebp,esi
  412107:	sbb    BYTE PTR [ecx],0xd6
  41210a:	sub    al,0x50
  41210c:	xchg   esp,esp
  41210e:	scas   al,BYTE PTR es:[edi]
  41210f:	mov    WORD PTR [ecx+0x1d],ds
  412112:	mov    ds:0x1b956f6c,eax
  412117:	sub    BYTE PTR [edi],cl
  412119:	pop    es
  41211a:	mov    ds:0x18e2b685,eax
  41211f:	dec    eax
  412120:	mov    dh,0x6
  412122:	into   
  412123:	xchg   DWORD PTR [ebx-0x7c],ecx
  412126:	aad    0x58
  412128:	test   DWORD PTR [edx],edi
  41212a:	je     0x4121aa
  41212c:	sbb    ecx,ebx
  41212e:	cmp    al,0x6
  412130:	ds xchg esi,eax
  412132:	inc    ebx
  412133:	(bad)  
  412134:	or     al,0xcc
  412136:	pop    ds
  412137:	xor    BYTE PTR [ebx-0x6ba777ee],0xce
  41213e:	mov    edx,0x7bbae823
  412143:	xor    dh,bh
  412145:	push   esi
  412146:	shl    esi,0x23
  412149:	xor    al,0x53
  41214b:	(bad)  
  41214c:	div    dl
  41214e:	sub    eax,0xffbfefbd
  412153:	in     eax,dx
  412154:	repz sub ebx,DWORD PTR [eax+0x4a]
  412158:	dec    ebp
  412159:	jle    0x412153
  41215b:	dec    ebp
  41215c:	inc    eax
  41215d:	sbb    cl,BYTE PTR [edi+0x41]
  412160:	jne    0x412183
  412162:	mov    esi,0xad6f5cc0
  412167:	jns    0x412100
  412169:	or     al,0x68
  41216b:	pop    ds
  41216c:	sub    eax,DWORD PTR [ebx+0x68e0e967]
  412172:	cmp    al,0xe8
  412174:	ja     0x4120f9
  412176:	aaa    
  412177:	mov    ah,0x91
  412179:	mov    cl,0x41
  41217b:	mov    edx,0x3b7caf3a
  412180:	lea    ebx,[eax]
  412182:	bound  esp,QWORD PTR [edx-0x37]
  412185:	jae    0x41215e
  412187:	xchg   ebx,eax
  412188:	mul    BYTE PTR [ebx-0x57b3236]
  41218e:	xlat   BYTE PTR ds:[ebx]
  41218f:	fdivr  QWORD PTR [eax-0xee9f6fd]
  412195:	push   cs
  412196:	add    eax,0x46ea4304
  41219b:	cld    
  41219c:	bsr    ecx,DWORD PTR [eax-0x4b]
  4121a0:	and    DWORD PTR ds:0x925fe992,esp
  4121a6:	add    DWORD PTR [ecx-0x89e391b],ebp
  4121ac:	sbb    eax,0x27720f61
  4121b1:	rcr    BYTE PTR [eax-0x3f],1
  4121b4:	lock mov dh,0x20
  4121b7:	lods   al,BYTE PTR ds:[esi]
  4121b8:	jmp    0x1dc2:0xc5ed7f66
  4121bf:	pop    edx
  4121c0:	xchg   dh,al
  4121c2:	jg     0x412243
  4121c4:	inc    esi
  4121c5:	xor    edx,DWORD PTR [eax+0x21452f5e]
  4121cb:	arpl   WORD PTR [ebx+0x3d3a7a86],bx
  4121d1:	sbb    edx,DWORD PTR [edx+0x1354af3c]
  4121d7:	lods   al,BYTE PTR ds:[esi]
  4121d8:	add    bl,al
  4121da:	mov    ch,0xe7
  4121dc:	jmp    0x81d21957
  4121e1:	cmc    
  4121e2:	rcl    BYTE PTR [esp+edi*2-0x78],0x1c
  4121e7:	mov    esp,0xbf6b986b
  4121ec:	mov    bl,0xb7
  4121ee:	push   0x5f39e916
  4121f3:	inc    ebp
  4121f4:	fwait
  4121f5:	jecxz  0x412235
  4121f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121f8:	push   eax
  4121f9:	bound  ebp,QWORD PTR [edx+0x63]
  4121fc:	test   DWORD PTR [eax-0x5dda4897],ebp
  412202:	jno    0x4121d4
  412204:	std    
  412205:	dec    ebx
  412206:	fwait
  412207:	inc    ebx
  412208:	stc    
  412209:	fs test al,0xa9
  41220c:	fstp   QWORD PTR [eax+ebx*1]
  41220f:	xchg   ebp,eax
  412210:	xchg   edi,eax
  412211:	mov    al,0x7a
  412213:	mov    ah,0x9a
  412215:	cmp    eax,esp
  412217:	je     0x412236
  412219:	enter  0xf673,0x25
  41221d:	int    0x6f
  41221f:	fidivr WORD PTR [edi-0x6e]
  412222:	pop    edx
  412223:	dec    ecx
  412224:	xor    BYTE PTR [edx+0x21],bl
  412227:	mov    ah,0xec
  412229:	inc    esp
  41222a:	adc    esp,DWORD PTR [edx+0x64]
  41222d:	popa   
  41222e:	pop    ebp
  41222f:	and    al,0xd2
  412231:	aad    0x3d
  412233:	push   ss
  412234:	mov    ebx,0xf280bcf1
  412239:	into   
  41223a:	sbb    DWORD PTR [edi],edi
  41223c:	jle    0x41225b
  41223e:	cs mov ebp,0x1826e131
  412244:	sub    esi,DWORD PTR [eax]
  412246:	mov    ds:0xb06df5b2,eax
  41224b:	and    ebx,DWORD PTR [edx+0x69ec46ef]
  412251:	or     BYTE PTR [edi+0x7349dba7],dh
  412257:	stos   BYTE PTR es:[edi],al
  412258:	xlat   BYTE PTR ds:[ebx]
  412259:	inc    edx
  41225a:	out    dx,al
  41225b:	mov    bh,0x95
  41225d:	pop    ds
  41225e:	add    al,0xf1
  412260:	dec    esi
  412261:	fucom  st(3)
  412263:	sbb    eax,DWORD PTR [ebx*4+0x65b8d9bd]
  41226a:	popf   
  41226b:	jp     0x41220c
  41226d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41226e:	xor    eax,0xb82c0d3f
  412273:	mov    DWORD PTR [ebx-0x5b],ebp
  412276:	gs mov ?,edx
  412279:	inc    ecx
  41227a:	lds    ebp,FWORD PTR [edi+0x5a680104]
  412280:	clc    
  412281:	sbb    esi,esp
  412283:	push   esp
  412284:	mov    DWORD PTR [eax+0x56e0ba68],edi
  41228a:	dec    ebp
  41228b:	aaa    
  41228c:	jo     0x412252
  41228e:	stos   DWORD PTR es:[edi],eax
  41228f:	sub    al,bl
  412291:	jl     0x4122ec
  412293:	jns    0x41222c
  412295:	cli    
  412296:	cs or  al,0x1
  412299:	lds    esp,FWORD PTR [eax+0x6e606c1d]
  41229f:	or     dh,BYTE PTR [esi+0x35]
  4122a2:	int    0xe9
  4122a4:	push   ecx
  4122a5:	cwde   
  4122a6:	push   eax
  4122a7:	adc    BYTE PTR ds:0x869b3e4f,dh
  4122ad:	cmp    dh,BYTE PTR [edx+0x5]
  4122b0:	das    
  4122b1:	ror    BYTE PTR [ebx+0x3bbfc455],cl
  4122b7:	fsub   QWORD PTR [ebx-0x14]
  4122ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bb:	cld    
  4122bc:	into   
  4122bd:	je     0x41231c
  4122bf:	dec    edi
  4122c0:	jle    0x412329
  4122c2:	xchg   esp,eax
  4122c3:	sub    edx,DWORD PTR [ebp-0x2f]
  4122c6:	sub    al,0x98
  4122c8:	mov    edx,0x9708b372
  4122cd:	mov    al,ds:0x885d84a1
  4122d2:	mov    ebp,DWORD PTR [edx+ebp*8]
  4122d5:	cdq    
  4122d6:	retf   
  4122d7:	bound  ebp,QWORD PTR [ebx-0x23896b6a]
  4122dd:	popa   
  4122de:	out    0x68,al
  4122e0:	mov    dl,0xb1
  4122e2:	dec    eax
  4122e3:	and    DWORD PTR [ebx+0x3125f5b4],edx
  4122e9:	out    dx,eax
  4122ea:	mov    esp,0xf21df2c1
  4122ef:	sub    al,0x7b
  4122f1:	int    0xfb
  4122f3:	dec    DWORD PTR [ecx+0x468a7488]
  4122f9:	mov    ebx,0x6827f73e
  4122fe:	or     cl,BYTE PTR [ecx]
  412300:	loope  0x4122cd
  412302:	mov    bl,0xe9
  412304:	mov    ch,0xb9
  412306:	adc    edx,ecx
  412308:	xchg   ecx,eax
  412309:	imul   eax,eax,0x3c8c4e64
  41230f:	loop   0x4122c1
  412311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412312:	enter  0xe00b,0x5f
  412316:	in     al,dx
  412317:	cmp    BYTE PTR [ecx],cl
  412319:	in     eax,0x89
  41231b:	retf   0x5f88
  41231e:	nop
  41231f:	add    eax,0x8ca21faf
  412324:	pop    ss
  412325:	ins    BYTE PTR es:[edi],dx
  412326:	out    dx,al
  412327:	scas   al,BYTE PTR es:[edi]
  412328:	and    esi,DWORD PTR [ecx-0x30]
  41232b:	jae    0x412313
  41232d:	out    0x53,al
  41232f:	ja     0x412378
  412331:	div    ecx
  412333:	mov    esp,DWORD PTR [eax-0x3a]
  412336:	call   0x414e:0x35f65a9c
  41233d:	gs mov bl,0xaf
  412340:	jecxz  0x41232c
  412342:	out    dx,eax
  412343:	enter  0xafc4,0xc3
  412347:	fs mov esi,0xb1848c85
  41234d:	add    dl,BYTE PTR [ebp-0x1c533489]
  412353:	add    DWORD PTR [ecx],esp
  412355:	dec    eax
  412356:	and    ebp,eax
  412358:	add    ecx,DWORD PTR [edi+eax*8-0x7]
  41235c:	jge    0x412337
  41235e:	dec    esi
  41235f:	dec    esi
  412360:	(bad)  
  412361:	stc    
  412362:	mov    ah,0xb7
  412364:	test   edi,0x1914004a
  41236a:	int3   
  41236b:	daa    
  41236c:	jecxz  0x412326
  41236e:	setno  BYTE PTR [eax-0x51]
  412372:	mov    dh,0x25
  412374:	inc    edx
  412375:	retf   
  412376:	xchg   BYTE PTR [esi-0xd9a31f8],ah
  41237c:	mov    eax,ds:0xb7d2a6b0
  412381:	cli    
  412382:	mov    dl,0x27
  412384:	fcom   QWORD PTR [ebp-0x60b8dcb]
  41238a:	test   BYTE PTR [eax+0x344575b8],dl
  412390:	rsqrtps xmm5,xmm1
  412393:	xor    al,BYTE PTR [ecx-0x40]
  412396:	jg     0x4123dd
  412398:	and    ebp,ebx
  41239a:	fstp   QWORD PTR [edi-0x4d6bbab6]
  4123a0:	jle    0x41232f
  4123a2:	shl    DWORD PTR [eax+0x68],cl
  4123a5:	je     0x4123fa
  4123a7:	dec    esi
  4123a8:	add    dh,BYTE PTR [eax]
  4123aa:	hlt    
  4123ab:	out    dx,eax
  4123ac:	jns    0x41233a
  4123ae:	fstp   QWORD PTR [eax]
  4123b0:	mov    ah,0xaa
  4123b2:	loopne 0x412426
  4123b4:	push   edx
  4123b5:	xchg   esp,eax
  4123b6:	leave  
  4123b7:	adc    BYTE PTR [di-0x15],dl
  4123bb:	sti    
  4123bc:	sbb    cl,BYTE PTR [esi+0xc]
  4123bf:	lea    ebp,[ebp+0x70]
  4123c2:	mov    DWORD PTR [ebx-0x63],ebp
  4123c5:	test   dl,0x1f
  4123c8:	pushf  
  4123c9:	(bad)  
  4123cb:	jb     0x412371
  4123cd:	loope  0x412394
  4123cf:	mov    eax,ds:0x8b8f7b8
  4123d4:	mov    al,0x6c
  4123d6:	leave  
  4123d7:	sbb    ecx,DWORD PTR ds:[eax-0x33ab7982]
  4123de:	push   edx
  4123df:	popa   
  4123e0:	xchg   esi,eax
  4123e1:	cmp    DWORD PTR [ecx-0x7c],ecx
  4123e4:	fs add al,0x3
  4123e7:	xor    DWORD PTR [ebx-0x41],eax
  4123ea:	sbb    DWORD PTR [edi-0x47d38058],ebp
  4123f0:	je     0x4123af
  4123f2:	ins    BYTE PTR es:[edi],dx
  4123f3:	xchg   edx,eax
  4123f4:	lods   al,BYTE PTR ds:[esi]
  4123f5:	(bad)  
  4123f6:	jne    0x4123f1
  4123f8:	inc    ebp
  4123f9:	xchg   BYTE PTR [ebp+0x2f],bh
  4123fc:	pop    esi
  4123fd:	push   ds
  4123fe:	lock add ecx,ebx
  412401:	mov    ecx,0xe2f748a8
  412406:	repnz push ds
  412408:	xor    al,BYTE PTR [esi+0x6a]
  41240b:	mov    esp,0x42fbdd0b
  412410:	xchg   DWORD PTR [edx+edi*2-0x3],eax
  412414:	into   
  412415:	adc    cl,ah
  412417:	sub    eax,0x96cb06fd
  41241c:	xchg   esp,edx
  41241e:	ret    0x7a8a
  412421:	leave  
  412422:	mov    ch,0x8d
  412424:	std    
  412425:	ret    0xfb12
  412428:	retf   
  412429:	loope  0x4123b4
  41242b:	cld    
  41242c:	push   ebp
  41242e:	xchg   ebx,eax
  41242f:	(bad)  
  412430:	loopne 0x4123cc
  412432:	les    ebp,FWORD PTR [ecx]
  412434:	push   esp
  412435:	jg     0x412417
  412437:	fdiv   st,st(0)
  412439:	sub    al,0x82
  41243b:	scas   eax,DWORD PTR es:[edi]
  41243c:	arpl   WORD PTR [esi],cx
  41243e:	(bad)  
  41243f:	pop    ds
  412440:	and    BYTE PTR [edi+0x12],ah
  412443:	ror    BYTE PTR [ebx],cl
  412445:	sbb    ch,bl
  412447:	push   ds
  412448:	mov    ebp,0xc98e29e8
  41244d:	or     al,0x1e
  41244f:	mov    dh,0x7a
  412451:	and    BYTE PTR [edi+0x73aaa37a],dl
  412457:	xchg   ebp,eax
  412458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412459:	sbb    dl,BYTE PTR [eiz*2+0x3d0bdcdf]
  412460:	pop    edx
  412461:	add    BYTE PTR [eax+0x2a],cl
  412464:	jecxz  0x412414
  412466:	fisubr DWORD PTR [edx+eax*1]
  412469:	jnp    0x412473
  41246b:	adc    edi,DWORD PTR [edx+0x435fbee0]
  412471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412472:	inc    ebp
  412473:	mov    BYTE PTR [edx+0x3a],bl
  412476:	mov    cl,0x73
  412478:	jl     0x41247f
  41247a:	jnp    0x412493
  41247c:	ds pop ebx
  41247e:	mov    edx,0xa88132d
  412483:	dec    ecx
  412484:	out    dx,eax
  412485:	outs   dx,BYTE PTR ds:[esi]
  412486:	xchg   edi,eax
  412487:	jo     0x412436
  412489:	(bad)  
  41248a:	out    0x85,eax
  41248c:	mov    cs,WORD PTR [ecx+0x35]
  41248f:	mov    ss,WORD PTR [eax-0x6d3b91c6]
  412495:	(bad)
  412498:	out    0x69,eax
  41249a:	in     al,dx
  41249b:	sbb    DWORD PTR [edi-0x63],edi
  41249e:	sar    BYTE PTR [esi+0x32],0xa9
  4124a2:	and    al,0x2e
  4124a4:	jl     0x4124af
  4124a6:	arpl   ax,cx
  4124a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a9:	push   ebx
  4124aa:	shl    BYTE PTR [ecx-0x56c80a0f],1
  4124b0:	push   0x6ee079b9
  4124b5:	mov    ch,BYTE PTR [edi-0x56]
  4124b8:	imul   eax,DWORD PTR [edi-0x3d2e5d7e],0xa249f505
  4124c2:	shl    BYTE PTR [esi-0x215e4d55],0x89
  4124c9:	cld    
  4124ca:	or     ebp,DWORD PTR [esi+esi*1-0x50]
  4124ce:	fmul   st,st(7)
  4124d0:	aas    
  4124d1:	mov    esp,DWORD PTR [edx]
  4124d3:	call   0x3bb69a70
  4124d8:	jb     0x412466
  4124da:	xchg   esi,edi
  4124dc:	dec    eax
  4124dd:	fs push esp
  4124df:	cmc    
  4124e0:	out    dx,al
  4124e1:	outs   dx,BYTE PTR ds:[esi]
  4124e2:	in     eax,dx
  4124e3:	or     ch,BYTE PTR [eax]
  4124e5:	(bad)  
  4124e6:	pop    ss
  4124e7:	mov    bh,0xbb
  4124e9:	js     0x412474
  4124eb:	test   al,0xfa
  4124ed:	adc    bl,BYTE PTR [ebx-0x17446269]
  4124f3:	ret    0x1a26
  4124f6:	int3   
  4124f7:	xchg   BYTE PTR [edx-0x4b18a1c5],ch
  4124fd:	pop    es
  4124fe:	pop    ds
  4124ff:	jnp    0x4124a7
  412501:	push   es
  412502:	adc    ebx,DWORD PTR [esi]
  412504:	and    ecx,DWORD PTR [ebp-0x2ae526d5]
  41250a:	rol    DWORD PTR [ecx],1
  41250c:	inc    edx
  41250d:	data16 add al,BYTE PTR [eax+0x49269eaa]
  412514:	(bad)  
  412515:	xchg   esi,eax
  412516:	or     ah,BYTE PTR [esi]
  412518:	iret   
  412519:	cmp    DWORD PTR [esp+ebp*1+0x51],edx
  41251d:	jno    0x412593
  41251f:	(bad)  
  412520:	nop
  412521:	ins    BYTE PTR es:[edi],dx
  412522:	iret   
  412523:	push   cs
  412524:	inc    ecx
  412525:	jnp    0x4125a2
  412527:	inc    ebp
  412528:	inc    esp
  412529:	sbb    dh,dl
  41252b:	out    dx,al
  41252c:	mov    edi,0xba21e443
  412531:	call   DWORD PTR [ebp-0x6]
  412534:	clc    
  412535:	test   eax,0x28274f1
  41253a:	in     al,0xfb
  41253c:	jg     0x412571
  41253e:	clc    
  41253f:	xor    BYTE PTR [edi],bh
  412541:	jno    0x4124d4
  412543:	pop    esp
  412544:	dec    edi
  412545:	imul   ebp,DWORD PTR [esi],0xffffffc5
  412548:	pop    ss
  412549:	cmp    eax,0xe81ba620
  41254e:	add    ch,dl
  412550:	mov    ch,0x35
  412552:	into   
  412553:	adc    edi,DWORD PTR ds:0x76a2f94c
  412559:	ja     0x4124e4
  41255b:	jo     0x412544
  41255d:	cmc    
  41255e:	fwait
  41255f:	mov    edi,0x4d2bc67f
  412564:	cmc    
  412565:	bound  esp,QWORD PTR [ebx-0x7a4532ba]
  41256b:	or     ebx,DWORD PTR [eax-0x7]
  41256e:	xchg   ebp,eax
  41256f:	data16 or al,0x4f
  412572:	sub    ecx,ebx
  412574:	inc    edi
  412575:	neg    DWORD PTR [ebp+0x31]
  412578:	ficomp DWORD PTR [edx+edx*8+0x18]
  41257c:	rol    DWORD PTR [ecx],0x8b
  41257f:	sub    eax,DWORD PTR [ebx]
  412581:	adc    BYTE PTR [ebx+0x1fd70c08],al
  412587:	popa   
  412588:	lahf   
  412589:	fbld   TBYTE PTR [ecx+0x78]
  41258c:	xchg   esp,eax
  41258d:	(bad)  
  41258e:	pop    ecx
  41258f:	push   es
  412590:	lods   eax,DWORD PTR ds:[esi]
  412591:	xor    al,0x7f
  412593:	mov    ebp,0x22a3ceac
  412598:	push   ss
  412599:	cwde   
  41259a:	mov    al,ds:0x95397359
  41259f:	loop   0x41260b
  4125a1:	(bad)  
  4125a2:	stc    
  4125a3:	cwde   
  4125a4:	in     al,0x6a
  4125a6:	imul   ebx,DWORD PTR [ebp+0x11],0x7869454d
  4125ad:	sbb    eax,0xab9f05d7
  4125b2:	dec    esp
  4125b3:	dec    edi
  4125b4:	mov    ebp,0xe9481b91
  4125b9:	adc    BYTE PTR [ecx],0x66
  4125bc:	inc    ebp
  4125bd:	enter  0xdeef,0xe3
  4125c1:	arpl   si,bx
  4125c3:	adc    DWORD PTR [edx-0x18490054],ecx
  4125c9:	out    dx,al
  4125ca:	mov    ds:0xc6ef5d72,eax
  4125cf:	ja     0x412646
  4125d1:	jecxz  0x4125be
  4125d3:	xor    edx,eax
  4125d5:	adc    al,0x29
  4125d7:	cli    
  4125d8:	gs popf 
  4125da:	push   edx
  4125db:	js     0x412575
  4125dd:	push   0xffffffa6
  4125df:	int3   
  4125e0:	add    al,0x74
  4125e2:	cmp    DWORD PTR [eax],ecx
  4125e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125e5:	mov    ax,0x1c5
  4125e9:	sbb    eax,0x1e26d2b2
  4125ee:	popf   
  4125ef:	sar    DWORD PTR ds:0xf4c79acf,0x88
  4125f6:	js     0x412598
  4125f8:	retf   
  4125f9:	cmp    DWORD PTR [edi+0x13],edx
  4125fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125fd:	mov    ds:0xdbc690d6,al
  412602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412603:	out    dx,eax
  412604:	push   edx
  412605:	lods   al,BYTE PTR ds:[esi]
  412606:	push   esp
  412607:	scas   al,BYTE PTR es:[edi]
  412608:	in     eax,0x8
  41260a:	out    0xad,al
  41260c:	lahf   
  41260d:	out    0xa5,eax
  41260f:	clc    
  412610:	stc    
  412611:	stos   DWORD PTR es:[edi],eax
  412612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412613:	add    esi,DWORD PTR [edx]
  412615:	mov    ds:0xf768178f,eax
  41261a:	loope  0x412611
  41261c:	and    eax,0x652aa257
  412621:	(bad)  
  412622:	aaa    
  412623:	jmp    0xff67:0xf078fed
  41262a:	xchg   edi,eax
  41262b:	cmp    eax,DWORD PTR [ecx+0x2a98f93d]
  412631:	jns    0x412617
  412633:	sar    DWORD PTR [edx-0x52],cl
  412636:	sbb    DWORD PTR [edx+ebp*8+0x6f],esi
  41263a:	imul   BYTE PTR [edi]
  41263c:	ret    0xb72e
  41263f:	adc    al,0x99
  412641:	push   eax
  412642:	push   edx
  412643:	mov    BYTE PTR [ebx+eax*8+0x9],ch
  412647:	ret    0x847b
  41264a:	jmp    0xebd5:0x53cf2cbd
  412651:	shl    BYTE PTR [ecx+edi*1-0x28e8d44e],1
  412658:	ins    DWORD PTR es:[edi],dx
  412659:	(bad)  
  41265a:	data16 cmc 
  41265c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41265d:	jne    0x41262a
  41265f:	std    
  412660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412661:	imul   esp,DWORD PTR [ebx+0x43f98804],0xd585b2f3
  41266b:	adc    edx,esi
  41266d:	cld    
  41266e:	xchg   ebp,eax
  41266f:	xchg   BYTE PTR [ebx-0x3e],dl
  412672:	in     al,0xac
  412674:	sti    
  412675:	mov    dh,0xc1
  412677:	sub    edi,DWORD PTR [edi-0x40]
  41267a:	push   ecx
  41267b:	push   esp
  41267c:	int    0xe3
  41267e:	data16 arpl WORD PTR [edi-0x7f1200cf],si
  412685:	je     0x412676
  412687:	rol    esp,cl
  412689:	mov    bh,0x93
  41268b:	call   DWORD PTR [ecx+0x4b00d11f]
  412691:	cli    
  412692:	ret    
  412693:	jo     0x412684
  412695:	ror    edi,1
  412697:	mov    bl,0x38
  412699:	push   edx
  41269a:	imul   BYTE PTR [esi]
  41269c:	shr    ebx,0xef
  41269f:	sub    DWORD PTR [esi-0x29],ecx
  4126a2:	dec    ebp
  4126a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a4:	mov    esi,0x4a786fe8
  4126a9:	cmp    al,0xd5
  4126ab:	std    
  4126ac:	push   ebp
  4126ad:	cs ret 
  4126af:	cdq    
  4126b0:	inc    ebp
  4126b1:	(bad)  
  4126b2:	out    dx,al
  4126b3:	fwait
  4126b4:	xchg   ecx,eax
  4126b5:	dec    ebp
  4126b6:	sub    ah,BYTE PTR [ebp-0x602f8633]
  4126bc:	push   es
  4126bd:	mov    dl,BYTE PTR [ecx]
  4126bf:	fnstcw WORD PTR [ebx+0x3f]
  4126c2:	push   esp
  4126c3:	mov    dl,0xc7
  4126c5:	add    DWORD PTR [ebx+eiz*8+0x55],0x50
  4126ca:	sub    eax,0x6da75bd5
  4126cf:	and    DWORD PTR [ecx+0x4],eax
  4126d2:	jl     0x4126ce
  4126d4:	bound  esi,QWORD PTR ds:0xdc3b6a9f
  4126da:	(bad)  
  4126db:	or     DWORD PTR [edi+0x78ebd816],ecx
  4126e1:	es mov dh,0x70
  4126e4:	pop    eax
  4126e5:	cdq    
  4126e6:	or     ebp,DWORD PTR [eax+0x67d9ea6c]
  4126ec:	sar    BYTE PTR [ecx-0x6e3f2e0e],cl
  4126f2:	fsubrp st(6),st
  4126f4:	xor    DWORD PTR [edi],esi
  4126f6:	mov    ss,WORD PTR [ebx+0x5a]
  4126f9:	cdq    
  4126fa:	adc    edi,edi
  4126fc:	or     DWORD PTR [esi-0x17],esp
  4126ff:	jns    0x412758
  412701:	inc    edi
  412702:	sub    eax,0xe7193015
  412707:	xchg   esi,eax
  412708:	pop    ebx
  412709:	fs mov ch,bh
  41270c:	sahf   
  41270d:	pop    edi
  41270e:	int3   
  41270f:	aam    0xf8
  412711:	cs loope 0x4126b1
  412714:	xlat   BYTE PTR ds:[ebx]
  412715:	call   0x4532:0x1831c34f
  41271c:	pop    ss
  41271d:	pop    ds
  41271e:	jb     0x412757
  412720:	mov    ds:0x385f2e5a,eax
  412725:	add    ah,BYTE PTR [esi-0x4c]
  412728:	adc    bh,BYTE PTR [ebx+0xdf60bbc]
  41272e:	xchg   ecx,eax
  41272f:	jp     0x412733
  412731:	bound  ebx,QWORD PTR [edx-0x77]
  412734:	jnp    0x412759
  412736:	cmp    eax,0xe697963f
  41273b:	out    0x2f,al
  41273d:	mov    ah,0x8f
  41273f:	mov    ds:0x3126e5e0,al
  412744:	jp     0x4126f4
  412746:	xchg   ebx,eax
  412747:	mov    bh,0x62
  412749:	out    0x92,al
  41274b:	xor    esp,DWORD PTR [ecx-0x675b1bc6]
  412751:	pop    edi
  412752:	xchg   ebp,eax
  412753:	push   cs
  412754:	out    0x5a,ax
  412757:	or     esi,DWORD PTR [ebx+0x50a762b6]
  41275d:	leave  
  41275e:	sti    
  41275f:	data16 (bad) 
  412761:	retf   
  412762:	or     al,0x9d
  412764:	and    ah,BYTE PTR [edi+eiz*1-0x70]
  412768:	loope  0x41273f
  41276a:	(bad)  
  41276b:	push   esp
  41276c:	aad    0xf4
  41276e:	inc    ecx
  41276f:	jno    0x4127a8
  412771:	mov    esi,0x60620caa
  412776:	mov    bh,0x91
  412778:	xchg   BYTE PTR [edi],ah
  41277a:	cmp    DWORD PTR [edi],0x7fb168a3
  412780:	pop    es
  412781:	xchg   esi,eax
  412782:	stc    
  412783:	(bad)  
  412784:	push   ss
  412785:	repz jl 0x412715
  412788:	mov    ecx,ebx
  41278a:	data16 in al,0x22
  41278d:	inc    ebx
  41278e:	push   eax
  41278f:	mov    edx,0x3d46d248
  412794:	(bad)  
  412796:	repz mov cl,0xdb
  412799:	dec    ebp
  41279a:	int    0xbf
  41279c:	or     BYTE PTR [ecx],0x52
  41279f:	fwait
  4127a0:	add    DWORD PTR [ecx-0x7a577d99],eax
  4127a6:	xchg   edx,eax
  4127a7:	inc    edx
  4127a8:	test   ah,al
  4127aa:	sar    BYTE PTR [ebp+0x71],cl
  4127ad:	mov    ecx,0xa0c6e41d
  4127b2:	ss mov bl,0x1a
  4127b5:	push   esp
  4127b6:	outs   dx,BYTE PTR ds:[esi]
  4127b7:	lock jecxz 0x412771
  4127ba:	cmc    
  4127bb:	adc    DWORD PTR [ecx+ebx*8-0x5a],ebx
  4127bf:	dec    edi
  4127c0:	ret    0xa201
  4127c3:	out    dx,eax
  4127c4:	test   ecx,0xadc97b7c
  4127ca:	cwde   
  4127cb:	mov    ch,0x56
  4127cd:	jmp    DWORD PTR [esi-0x22]
  4127d0:	and    dh,BYTE PTR [eax+0x25dc95b7]
  4127d6:	aas    
  4127d7:	fucomip st,st(7)
  4127d9:	in     al,dx
  4127da:	ret    
  4127db:	test   al,0xde
  4127dd:	dec    eax
  4127de:	jmp    0x412824
  4127e0:	push   esp
  4127e1:	retf   
  4127e2:	or     DWORD PTR [ebx-0x6ab6cc79],ebp
  4127e8:	sub    al,0xc0
  4127ea:	pop    ecx
  4127eb:	pop    edi
  4127ec:	adc    al,0x8d
  4127ee:	jo     0x412789
  4127f0:	and    DWORD PTR [esi+0x2dd54e51],esp
  4127f6:	imul   ecx,DWORD PTR [esp+eiz*4+0x2a],0xf02628d0
  4127fe:	xor    eax,0x3899cdb4
  412803:	sub    eax,0x28aab5c6
  412808:	aad    0x34
  41280a:	test   BYTE PTR [eax+0x4cf7b2b4],bl
  412810:	nop
  412811:	test   eax,0x339de501
  412816:	jbe    0x41287a
  412818:	aas    
  412819:	cmp    DWORD PTR [ebp-0x1dd5ef7a],edi
  41281f:	mov    ecx,0x2dc8a9e8
  412824:	outs   dx,DWORD PTR ds:[esi]
  412825:	scas   al,BYTE PTR es:[di]
  412827:	(bad)  
  412828:	push   esi
  412829:	retf   
  41282a:	cdq    
  41282b:	push   0x37
  41282d:	mov    ah,0x7d
  41282f:	mov    edi,ebx
  412831:	ja     0x412883
  412833:	sbb    DWORD PTR [esi+0x6ae7b90e],0x780606e5
  41283d:	call   0x92b3fe59
  412842:	call   0x4fb:0xa5698503
  412849:	rcl    DWORD PTR [ecx-0x2393bb5b],0x4d
  412850:	cli    
  412851:	mov    ch,0x70
  412853:	nop
  412854:	push   DWORD PTR gs:[ecx+0x68]
  412858:	push   es
  412859:	mov    ds:0x19e3b730,eax
  41285e:	ins    DWORD PTR es:[edi],dx
  41285f:	push   0x12a886a6
  412864:	jmp    0x19ac:0x1d08e817
  41286b:	mov    ebx,0x608206f3
  412870:	sub    DWORD PTR ds:0xb6450a26,0xc4d58546
  41287a:	mov    ds:0xbe114da2,al
  41287f:	pop    edi
  412880:	add    DWORD PTR [edi+0x6c290e78],0x3d
  412887:	jg     0x41284d
  412889:	ins    BYTE PTR es:[edi],dx
  41288a:	mov    esp,?
  41288c:	repz push edi
  41288e:	popa   
  41288f:	push   eax
  412890:	fnstsw WORD PTR [eax+0x7f]
  412893:	adc    ch,BYTE PTR [edi-0x5fe967f1]
  412899:	mov    cl,0x99
  41289b:	loop   0x4128c6
  41289d:	lds    eax,FWORD PTR [edx-0x54]
  4128a0:	scas   eax,DWORD PTR es:[edi]
  4128a1:	jb     0x4128ab
  4128a3:	daa    
  4128a4:	icebp  
  4128a5:	dec    esi
  4128a6:	test   DWORD PTR [ecx-0xb8463f4],ebp
  4128ac:	and    DWORD PTR [edx],esi
  4128ae:	sub    esp,DWORD PTR cs:0x17948c3a
  4128b5:	cdq    
  4128b6:	sub    BYTE PTR [ecx+ebx*2],0xe1
  4128ba:	stos   BYTE PTR es:[edi],al
  4128bb:	test   bh,bl
  4128bd:	or     cl,BYTE PTR [ebp+0x80f44d0]
  4128c3:	sub    DWORD PTR [ebp-0x37],ecx
  4128c6:	and    eax,0x13d5b1e7
  4128cb:	mov    eax,0xfb2f2ef6
  4128d0:	add    eax,0x62345b7
  4128d5:	mov    ch,0xed
  4128d7:	push   edx
  4128d8:	jae    0x4128a9
  4128da:	and    DWORD PTR [esp+esi*1+0xd],eax
  4128de:	jno    0x4128e3
  4128e0:	jmp    0x1cb2:0x9d5ebc27
  4128e7:	cmp    esi,ebp
  4128e9:	adc    esi,DWORD PTR [ebp+0x39]
  4128ec:	push   cs
  4128ed:	outs   dx,DWORD PTR ds:[esi]
  4128ee:	and    al,0x96
  4128f0:	jnp    0x4128be
  4128f2:	inc    ebx
  4128f3:	xchg   esp,eax
  4128f4:	test   al,0x70
  4128f6:	jmp    0x6a47f13b
  4128fb:	pop    ebp
  4128fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fd:	dec    ecx
  4128fe:	(bad)  
  4128ff:	out    dx,eax
  412900:	sbb    eax,0xe5fe7970
  412905:	push   0x3
  412907:	dec    edi
  412908:	mov    eax,ds:0x6ae1216b
  41290d:	or     eax,0x4b130c60
  412912:	cwde   
  412913:	scas   eax,DWORD PTR es:[edi]
  412914:	cs or  al,bl
  412917:	popf   
  412918:	dec    eax
  412919:	rol    BYTE PTR [ecx],1
  41291b:	xlat   BYTE PTR ds:[ebx]
  41291c:	in     eax,0x6e
  41291e:	leave  
  41291f:	jl     0x412938
  412921:	xor    BYTE PTR [esi+edx*1],cl
  412924:	mul    BYTE PTR ds:0x50112c7e
  41292a:	mov    ds:0xfc6fe128,eax
  41292f:	push   cs
  412930:	cwde   
  412931:	add    eax,0x544148f4
  412936:	ret    
  412937:	mov    ah,0x3e
  412939:	fstp   QWORD PTR [ebp+0x507b48fd]
  41293f:	addr16 mov ebp,0x8bb29238
  412945:	arpl   WORD PTR [ebx*4+0x19dff7f2],bp
  41294c:	sahf   
  41294d:	gs push 0x2c62192f
  412953:	(bad)  
  412954:	mov    edi,0x7517d099
  412959:	int3   
  41295a:	fisubr DWORD PTR [edx+0x253198f2]
  412960:	ja     0x412908
  412962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412963:	mov    eax,0x7b946813
  412968:	(bad)  
  41296a:	and    DWORD PTR [ecx-0xc3ff442],esp
  412970:	daa    
  412971:	stc    
  412972:	repz or BYTE PTR [eax-0x78],dl
  412976:	xchg   BYTE PTR [edx-0x2d],ch
  412979:	shrd   DWORD PTR [ecx],ebx,0x65
  41297d:	das    
  41297e:	sbb    al,0x6e
  412980:	popf   
  412981:	ficomp DWORD PTR [ecx]
  412983:	xor    ah,dh
  412985:	data16 aam 0xb0
  412988:	mov    esp,DWORD PTR [ebp-0x42320756]
  41298e:	out    dx,al
  41298f:	lods   eax,DWORD PTR ds:[esi]
  412990:	sbb    DWORD PTR [eax+0x2e9c8e59],eax
  412996:	sbb    al,BYTE PTR [esi]
  412998:	cmp    BYTE PTR [esi],0xeb
  41299b:	cmc    
  41299c:	fs pop eax
  41299e:	imul   esp,DWORD PTR [edi-0x2fa751c8],0x390d58fd
  4129a8:	ins    DWORD PTR es:[edi],dx
  4129a9:	jb     0x41295c
  4129ab:	pushf  
  4129ac:	dec    ebx
  4129ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ae:	je     0x4129eb
  4129b0:	mov    ss,WORD PTR [edx-0x69]
  4129b3:	inc    edx
  4129b4:	imul   edi,DWORD PTR [edi],0x73
  4129b7:	adc    bh,BYTE PTR [edi]
  4129b9:	mov    ch,0x49
  4129bb:	pop    esp
  4129bc:	repz pop edi
  4129be:	out    dx,al
  4129bf:	cmp    DWORD PTR [ecx],0x6d
  4129c2:	and    edi,ecx
  4129c4:	fisub  WORD PTR [esi-0x6cf1f0ba]
  4129ca:	jo     0x41295d
  4129cc:	dec    edx
  4129cd:	jg     0x412958
  4129cf:	xor    al,0x9a
  4129d1:	dec    edx
  4129d2:	jp     0x41298f
  4129d4:	or     BYTE PTR [ecx-0x27c871b7],ch
  4129da:	xchg   al,dl
  4129dc:	inc    edx
  4129dd:	sbb    BYTE PTR [ecx-0x1b7712f2],0x63
  4129e4:	pop    ds
  4129e5:	loope  0x412983
  4129e7:	lds    ecx,FWORD PTR [edx+0x3e]
  4129ea:	sbb    ecx,edi
  4129ec:	sbb    DWORD PTR [eiz*8-0x3b146a93],0x7
  4129f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129f5:	add    eax,0x25630f99
  4129fa:	cmp    ebx,edx
  4129fc:	pop    edi
  4129fd:	dec    esi
  4129fe:	fnstcw WORD PTR [ecx+0x8]
  412a01:	and    esi,ebx
  412a03:	or     DWORD PTR [ebp+0x32fc247b],ebp
  412a09:	cmc    
  412a0a:	jmp    0x412a34
  412a0c:	call   0xe74846fe
  412a11:	or     DWORD PTR [edx],ebx
  412a13:	pop    ds
  412a14:	in     eax,dx
  412a15:	dec    ebp
  412a16:	and    DWORD PTR [esi-0x66],0xadcdcf25
  412a1d:	push   esp
  412a1e:	fs loop 0x412a1d
  412a21:	retf   0xb226
  412a24:	add    dh,BYTE PTR [esi-0x178e21a0]
  412a2a:	fidiv  DWORD PTR [ebx+0x5abf56ab]
  412a30:	mov    eax,ds:0x8e08ff0d
  412a35:	sub    BYTE PTR [ecx+eax*2-0x1a],ch
  412a39:	mov    esi,0xa3ff2134
  412a3e:	dec    esi
  412a3f:	mov    al,ds:0x95a8894c
  412a44:	mov    eax,ds:0xcc7a75b6
  412a49:	adc    eax,0x9f219b0
  412a4e:	loop   0x412a67
  412a50:	xor    al,0xba
  412a52:	ror    edi,1
  412a54:	in     eax,0x84
  412a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a57:	hlt    
  412a58:	xor    dh,bh
  412a5a:	inc    edx
  412a5b:	test   BYTE PTR [ebx],dh
  412a5d:	lods   eax,DWORD PTR ds:[esi]
  412a5e:	cdq    
  412a5f:	mov    BYTE PTR [eax-0x3e77cd59],bl
  412a65:	(bad)  
  412a66:	xchg   ebp,eax
  412a67:	add    dl,0x39
  412a6a:	xor    eax,0x38afefe3
  412a6f:	or     ebx,esp
  412a71:	jmp    0x101bb1a
  412a76:	adc    BYTE PTR [bp+si+0x21],dl
  412a7a:	jnp    0x412a76
  412a7c:	add    bh,BYTE PTR [eax+0x7cf28a1b]
  412a82:	std    
  412a83:	js     0x412a4c
  412a85:	dec    esp
  412a86:	cmp    edi,DWORD PTR cs:[ebp+ecx*8+0x779bb39a]
  412a8e:	ds jb  0x412aa3
  412a91:	stos   BYTE PTR es:[edi],al
  412a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a93:	cli    
  412a94:	imul   ebp,ebx,0x68d5bc28
  412a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9b:	and    BYTE PTR [ecx+0x3da53fa6],ah
  412aa1:	xor    eax,0x7db245d9
  412aa6:	fidiv  DWORD PTR [ecx+0x45c8d63a]
  412aac:	sbb    BYTE PTR [ebp+edx*8+0x28d73f88],dl
  412ab3:	hlt    
  412ab4:	adc    al,BYTE PTR [edi]
  412ab6:	sub    eax,0xb83e8a3d
  412abb:	add    ebx,eax
  412abd:	and    eax,0x4e7aad7a
  412ac2:	sub    eax,DWORD PTR [ebx+0x49f426fd]
  412ac8:	das    
  412ac9:	out    dx,al
  412aca:	leave  
  412acb:	jbe    0x412adf
  412acd:	push   eax
  412ace:	stos   BYTE PTR es:[edi],al
  412acf:	adc    ebx,ebp
  412ad1:	out    dx,eax
  412ad2:	adc    ecx,DWORD PTR [ecx-0x72]
  412ad5:	jo     0x412b04
  412ad7:	inc    ecx
  412ad8:	mov    ecx,0x6ef24f36
  412add:	std    
  412ade:	and    bh,dl
  412ae0:	xchg   BYTE PTR [ecx-0x31],ah
  412ae3:	rcr    DWORD PTR [esi-0x36b87a1f],0x40
  412aea:	xor    DWORD PTR [ecx+0x76],edi
  412aed:	dec    esi
  412aee:	fs scas al,BYTE PTR es:[edi]
  412af0:	inc    ebx
  412af1:	pop    ebx
  412af2:	std    
  412af3:	out    dx,eax
  412af4:	pop    ss
  412af5:	imul   ebp,esi,0xacb776a8
  412afb:	or     DWORD PTR [ebx-0x51],esp
  412afe:	loopne 0x412abc
  412b00:	fistp  DWORD PTR [edx]
  412b02:	sub    al,cl
  412b04:	pop    edi
  412b05:	dec    edi
  412b06:	das    
  412b07:	sti    
  412b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b09:	aam    0x61
  412b0b:	sbb    esp,DWORD PTR [ebp-0x38]
  412b0e:	out    dx,al
  412b0f:	sar    DWORD PTR [edi+0x4b],0xa7
  412b13:	cmp    BYTE PTR [edx],ch
  412b15:	dec    DWORD PTR [edi+0x591bc5f6]
  412b1b:	pop    edx
  412b1c:	aaa    
  412b1d:	xor    eax,DWORD PTR [esi+0x77]
  412b20:	stc    
  412b21:	aam    0x9c
  412b23:	add    DWORD PTR [ebx],ebx
  412b25:	loope  0x412ad0
  412b27:	call   0xe208384d
  412b2c:	mov    ah,0x40
  412b2e:	push   ebx
  412b2f:	sub    edi,DWORD PTR [edi-0x52c47a4d]
  412b35:	xchg   esi,eax
  412b36:	fstp   QWORD PTR [ebp+0x5625e25b]
  412b3c:	les    ebx,FWORD PTR [ebx+0x675f895e]
  412b42:	ins    BYTE PTR es:[edi],dx
  412b43:	test   eax,0x62fe7e53
  412b48:	cmp    eax,0xd6a9a9b6
  412b4d:	rcl    BYTE PTR [ebp-0x26],0x7f
  412b51:	push   0x3b
  412b53:	ja     0x412af7
  412b55:	fidivr DWORD PTR [esi]
  412b57:	sti    
  412b58:	hlt    
  412b59:	jmp    0x425b:0x613d0d78
  412b60:	rol    DWORD PTR [ebp+0x47373ec],cl
  412b66:	jno    0x412b58
  412b68:	mov    dh,0xc3
  412b6a:	loopne 0x412b69
  412b6c:	lea    eax,[eax+0x2d]
  412b6f:	xchg   esp,eax
  412b70:	es ins DWORD PTR es:[edi],dx
  412b72:	cdq    
  412b73:	dec    ebp
  412b74:	call   0x79c5c405
  412b79:	jo     0x412afe
  412b7b:	cmc    
  412b7c:	jnp    0x412be3
  412b7e:	xchg   esp,eax
  412b7f:	jmp    0xd2df84bb
  412b84:	xor    eax,0xe0ee3e43
  412b89:	repnz idiv DWORD PTR [esp+ebp*8-0x36]
  412b8e:	outs   dx,BYTE PTR ds:[esi]
  412b8f:	push   DWORD PTR [esi+esi*8-0x9]
  412b93:	jecxz  0x412c04
  412b95:	into   
  412b96:	jb     0x412bbb
  412b98:	adc    edi,DWORD PTR [edi]
  412b9a:	add    DWORD PTR [eax],eax
  412b9c:	cdq    
  412b9d:	adc    edi,0xf
  412ba0:	dec    ecx
  412ba1:	fisubr DWORD PTR [ecx]
  412ba3:	jle    0x412ba9
  412ba5:	das    
  412ba6:	lods   eax,DWORD PTR ds:[esi]
  412ba7:	jmp    0x412b95
  412ba9:	psrld  xmm1,XMMWORD PTR [esi+0x2aec68fd]
  412bb1:	lea    esi,[esi+0x1dc289e5]
  412bb7:	lea    edi,[esi]
  412bb9:	xchg   ch,dh
  412bbb:	and    eax,DWORD PTR [ecx]
  412bbd:	mov    eax,ds:0x4fd417da
  412bc2:	xor    ebx,DWORD PTR [edi-0x623974f6]
  412bc8:	mov    edi,0x5e06babe
  412bcd:	(bad)  
  412bce:	mul    ah
  412bd0:	call   0xc668e769
  412bd5:	scas   al,BYTE PTR es:[edi]
  412bd6:	std    
  412bd7:	clc    
  412bd8:	add    eax,0xb3cd2c9d
  412bdd:	cmp    esi,DWORD PTR [ebp+eax*8-0x1d992c73]
  412be4:	mov    ebx,DWORD PTR [eax+esi*2-0x3f]
  412be8:	push   eax
  412be9:	mov    bl,0xde
  412beb:	sahf   
  412bec:	test   al,0xd4
  412bee:	add    dh,BYTE PTR [esp+eiz*8-0x21]
  412bf2:	and    al,0x20
  412bf4:	in     eax,0x30
  412bf6:	push   0xffffffc7
  412bf8:	sub    dl,BYTE PTR [eax-0x60991966]
  412bfe:	fisub  DWORD PTR [edx-0x2ff25d72]
  412c04:	sahf   
  412c05:	xchg   ecx,eax
  412c06:	sbb    al,0x83
  412c08:	cmp    BYTE PTR [ecx+0x1557e6ae],cl
  412c0e:	mov    ebx,DWORD PTR [esi-0x79750ff9]
  412c14:	xor    DWORD PTR [ebp-0x2c7c3f7d],ecx
  412c1a:	jne    0x412c65
  412c1c:	adc    eax,0x96d8859a
  412c21:	cdq    
  412c22:	and    al,0x76
  412c24:	inc    esp
  412c25:	addr16 cli 
  412c27:	das    
  412c28:	call   0x7127:0x91d92398
  412c2f:	sbb    dl,ch
  412c31:	xchg   esi,eax
  412c32:	in     eax,0xa8
  412c34:	sub    bh,BYTE PTR [edx]
  412c36:	xchg   ecx,eax
  412c37:	adc    al,0xdc
  412c39:	popf   
  412c3a:	sub    eax,0xe50732df
  412c3f:	ins    BYTE PTR es:[edi],dx
  412c40:	pop    edi
  412c41:	loop   0x412bd2
  412c43:	or     cl,bl
  412c45:	lahf   
  412c46:	push   edx
  412c47:	shl    BYTE PTR [eax],cl
  412c49:	xchg   DWORD PTR [esi+0x4a],ebx
  412c4c:	stos   BYTE PTR es:[edi],al
  412c4d:	repnz add BYTE PTR [ecx],dh
  412c50:	mov    cl,0xdb
  412c52:	les    esi,FWORD PTR [edi-0xd]
  412c55:	jge    0x412bd9
  412c57:	xchg   esi,ebp
  412c59:	scas   eax,DWORD PTR es:[edi]
  412c5a:	xchg   edx,eax
  412c5b:	inc    ecx
  412c5c:	mov    ebx,DWORD PTR [ebx+ebp*1]
  412c5f:	jnp    0x412c20
  412c61:	lock addr16 mov edi,?
  412c65:	mov    cs,ecx
  412c67:	retf   
  412c68:	dec    ebx
  412c69:	adc    ch,bl
  412c6b:	lods   ax,WORD PTR ds:[esi]
  412c6d:	sbb    DWORD PTR [ebx+ebp*1],eax
  412c70:	ds cmp al,0x52
  412c73:	adc    eax,0x4d69d8ad
  412c78:	test   eax,0x9298ecc
  412c7d:	lahf   
  412c7e:	mov    bh,0xd4
  412c80:	scas   al,BYTE PTR es:[edi]
  412c81:	test   DWORD PTR [eax-0x23],0x11ce9b4a
  412c88:	mov    edi,0x6e092de6
  412c8d:	mov    DWORD PTR [edi+0x3acb50c2],ebx
  412c93:	mov    ebp,0x30a677cd
  412c98:	call   0xb1ae:0x1be5e254
  412c9f:	stc    
  412ca0:	data16 xor al,0x92
  412ca3:	imul   esp,edx,0xffffffe1
  412ca6:	jg     0x412ca4
  412ca8:	jmp    0x412cb3
  412caa:	xor    esi,DWORD PTR [edx]
  412cac:	in     eax,0x4f
  412cae:	ret    
  412caf:	dec    eax
  412cb0:	pop    DWORD PTR ds:0x28b8691c
  412cb6:	jl     0x412cf2
  412cb8:	lods   eax,DWORD PTR ds:[esi]
  412cb9:	clc    
  412cba:	call   DWORD PTR [edx-0x53]
  412cbd:	test   DWORD PTR [esi],edi
  412cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc0:	ret    
  412cc1:	mov    esi,0x14c4a705
  412cc6:	pop    eax
  412cc7:	hlt    
  412cc8:	jge    0x412cec
  412cca:	jg     0x412c75
  412ccc:	jp     0x412c80
  412cce:	inc    ecx
  412ccf:	rcr    DWORD PTR [ecx-0x32e9a662],cl
  412cd5:	pop    ebx
  412cd6:	sbb    eax,0xa1f36857
  412cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cdc:	sbb    eax,0xcb952a43
  412ce1:	cmp    BYTE PTR [ecx*2+0xa7d8d69],0xd4
  412ce9:	cmp    DWORD PTR [eax+0x71],ecx
  412cec:	cmp    DWORD PTR [edx-0x7f],ecx
  412cef:	push   ss
  412cf0:	mov    ebx,0xf7a74fa7
  412cf5:	mov    edx,0xd2238a34
  412cfa:	fadd   st(6),st
  412cfc:	mov    dl,0xda
  412cfe:	lahf   
  412cff:	mov    ah,0x1f
  412d01:	mov    bl,0xc3
  412d03:	dec    eax
  412d04:	pop    ebp
  412d05:	nop
  412d06:	pop    esp
  412d07:	ja     0x412ccf
  412d09:	rol    DWORD PTR [ebx+0x4a207dd6],0x5
  412d10:	jmp    0x412d58
  412d12:	jbe    0x412cc8
  412d14:	inc    edx
  412d15:	adc    DWORD PTR [edx+ebx*1-0x1df3ca58],0xffffffb1
  412d1d:	(bad)  
  412d1e:	pushf  
  412d1f:	cmp    eax,0x8423ca93
  412d24:	(bad)  [esi+0x6d3922af]
  412d2a:	xchg   ecx,eax
  412d2b:	stos   BYTE PTR es:[edi],al
  412d2c:	xchg   edi,eax
  412d2d:	cmp    DWORD PTR [edi-0x35],ebp
  412d30:	(bad)  
  412d31:	arpl   WORD PTR [eax],si
  412d33:	repz pop ebx
  412d35:	enter  0x37f9,0xd5
  412d39:	xchg   DWORD PTR [esi+0x79],ecx
  412d3c:	lds    eax,FWORD PTR [ebx-0x78]
  412d3f:	ins    BYTE PTR es:[edi],dx
  412d40:	add    BYTE PTR [esi],cl
  412d42:	cmp    DWORD PTR [edx+0x5b],0x2b
  412d46:	sub    al,BYTE PTR [edx+edx*1]
  412d49:	sub    eax,0xd21ccfda
  412d4e:	cdq    
  412d4f:	shr    edi,0xdf
  412d52:	mov    bh,0xc9
  412d54:	xchg   esi,eax
  412d55:	aam    0xba
  412d57:	xchg   esp,eax
  412d58:	mov    ch,0x40
  412d5a:	mov    ebx,0x2abf8683
  412d5f:	jns    0x412d20
  412d61:	pusha  
  412d62:	lods   eax,DWORD PTR ds:[esi]
  412d63:	jae    0x412d83
  412d65:	gs out dx,al
  412d67:	std    
  412d68:	and    DWORD PTR [ecx],ebx
  412d6a:	xchg   esi,eax
  412d6b:	mov    esp,DWORD PTR [esi]
  412d6d:	mov    ds:0xd28d8a36,al
  412d72:	icebp  
  412d73:	fistp  DWORD PTR [ecx+0x4]
  412d76:	sub    esp,DWORD PTR [eax]
  412d78:	leave  
  412d79:	(bad)  
  412d7a:	rcl    DWORD PTR [esi+eiz*2+0x78],1
  412d7e:	xchg   ebp,eax
  412d7f:	adc    BYTE PTR [ebp-0x7],al
  412d82:	adc    al,0xb7
  412d84:	mov    BYTE PTR [ebp+edi*4+0x16afb632],0x5f
  412d8c:	jno    0x412e06
  412d8e:	mov    al,0x5a
  412d90:	sbb    edx,DWORD PTR [ecx+0x454e63b]
  412d96:	dec    ecx
  412d97:	dec    edx
  412d98:	call   0x9f06:0x28d9c41
  412d9f:	js     0x412d65
  412da1:	add    BYTE PTR [edx+0x16afd0ba],bl
  412da7:	xor    eax,0xc46d422f
  412dac:	mov    al,0xe2
  412dae:	cwde   
  412daf:	sbb    DWORD PTR [esi-0x101951f],ebx
  412db5:	push   es
  412db6:	pop    ebp
  412db7:	xchg   DWORD PTR [esi-0x80],ebp
  412dba:	aaa    
  412dbb:	fcmovnb st,st(0)
  412dbd:	xor    DWORD PTR [edi+edi*2],ebx
  412dc0:	adc    esi,DWORD PTR [eax-0x48]
  412dc3:	loop   0x412e09
  412dc5:	xor    esi,DWORD PTR [ecx]
  412dc7:	sbb    BYTE PTR ds:0x19e6b7e4,0x4d
  412dce:	fst    DWORD PTR [ebp-0x650aa75a]
  412dd4:	out    dx,eax
  412dd5:	xchg   ebp,eax
  412dd6:	ret    0xcd5
  412dd9:	les    ecx,FWORD PTR [esi-0x4f]
  412ddc:	call   0xe09b:0x7d4a9d88
  412de3:	js     0x412de4
  412de5:	and    eax,0x7c75bf67
  412dea:	std    
  412deb:	int    0x11
  412ded:	mov    ds:0xf54894d6,eax
  412df2:	add    al,0xb5
  412df4:	aad    0xff
  412df6:	push   ecx
  412df7:	sahf   
  412df8:	jecxz  0x412e0e
  412dfa:	pop    ebx
  412dfb:	in     al,dx
  412dfc:	add    al,0x55
  412dfe:	dec    ebx
  412dff:	xchg   ecx,eax
  412e00:	jge    0x412deb
  412e02:	fstp   TBYTE PTR [ebp-0x51ca8539]
  412e08:	pop    eax
  412e09:	jae    0x412dd3
  412e0b:	stos   DWORD PTR es:[edi],eax
  412e0c:	cmc    
  412e0d:	jbe    0x412dd7
  412e0f:	dec    esi
  412e10:	push   cs
  412e11:	out    dx,al
  412e12:	xor    al,0x53
  412e14:	arpl   WORD PTR [edx],cx
  412e16:	mov    edi,0x77769eda
  412e1b:	and    esi,ebx
  412e1d:	xchg   esp,eax
  412e1e:	lahf   
  412e1f:	lods   eax,DWORD PTR ds:[esi]
  412e20:	bound  edx,QWORD PTR [esi-0x4e]
  412e23:	stc    
  412e24:	inc    esp
  412e25:	sahf   
  412e26:	and    bh,ah
  412e28:	add    DWORD PTR [eax+ecx*2+0x36],0x4953399c
  412e30:	mov    dl,0x87
  412e32:	adc    DWORD PTR [edi],0xa5695778
  412e38:	loop   0x412e93
  412e3a:	xchg   edx,eax
  412e3b:	add    DWORD PTR [ebx],eax
  412e3d:	jge    0x412e6e
  412e3f:	inc    esi
  412e40:	sub    DWORD PTR [ebp+0x57],ebp
  412e43:	ins    BYTE PTR es:[edi],dx
  412e44:	les    eax,FWORD PTR [ebx]
  412e46:	fwait
  412e47:	test   DWORD PTR [edx-0x57],edi
  412e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e4b:	and    ebp,0x2e47c263
  412e51:	push   bx
  412e53:	xchg   ecx,eax
  412e54:	xchg   edx,eax
  412e55:	cmp    DWORD PTR [esi-0x5002cfc9],eax
  412e5b:	lock cli 
  412e5d:	inc    esi
  412e5e:	pusha  
  412e5f:	(bad)  
  412e60:	mov    al,ds:0xef12ca78
  412e65:	push   0x52803587
  412e6a:	out    dx,eax
  412e6b:	(bad)  
  412e6c:	and    eax,0x50e4dd56
  412e71:	out    dx,eax
  412e72:	ins    DWORD PTR es:[edi],dx
  412e73:	dec    eax
  412e74:	stos   DWORD PTR es:[edi],eax
  412e75:	mov    dl,0x3b
  412e77:	xchg   ebx,eax
  412e78:	pushf  
  412e79:	inc    eax
  412e7a:	jno    0x412dff
  412e7c:	or     ebp,DWORD PTR [esi+0x45]
  412e7f:	jbe    0x412e58
  412e81:	gs int3 
  412e83:	mov    eax,0x20d1ec34
  412e88:	cld    
  412e89:	adc    eax,0x320c52b0
  412e8e:	push   es
  412e8f:	jmp    0x412ee2
  412e91:	sbb    esi,edi
  412e93:	fadd   st,st(6)
  412e95:	mov    al,ds:0x964e91c
  412e9a:	dec    edx
  412e9b:	mov    ds:0x50b87ac7,al
  412ea0:	imul   ebx,DWORD PTR [edi+esi*8-0xcbc3a4a],0xffffff92
  412ea8:	aad    0xb2
  412eaa:	call   DWORD PTR [esi]
  412eac:	aaa    
  412ead:	pop    esi
  412eae:	sub    al,0x58
  412eb0:	jecxz  0x412f12
  412eb2:	(bad)  
  412eb3:	mov    ebx,0xc9127c87
  412eb8:	neg    BYTE PTR [edi+0x16]
  412ebb:	and    al,0x9b
  412ebd:	pop    ebx
  412ebe:	xor    edi,DWORD PTR ds:0x6fcd8e85
  412ec4:	repnz add al,0xbb
  412ec7:	mov    cl,0xd3
  412ec9:	sub    DWORD PTR [ebx-0x24],0xa436980c
  412ed0:	int3   
  412ed1:	test   DWORD PTR [edx-0x3d4fbdf6],esi
  412ed7:	fsub   DWORD PTR ds:0xb8456493
  412edd:	enter  0x2418,0x1c
  412ee1:	inc    ebx
  412ee2:	inc    esi
  412ee3:	and    eax,DWORD PTR [ecx-0x5edea91c]
  412ee9:	add    dl,dl
  412eeb:	and    DWORD PTR [ebx-0xf5e3b6f],0x6f4cdd11
  412ef5:	call   DWORD PTR [ebx+0x39]
  412ef8:	sahf   
  412ef9:	dec    ebx
  412efa:	pop    edx
  412efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412efc:	jae    0x412f42
  412efe:	pop    esp
  412eff:	jb     0x412f36
  412f01:	pop    eax
  412f02:	sar    DWORD PTR [ebp+0xb58f76],0x33
  412f09:	or     DWORD PTR [esi+0x45d01d40],ebx
  412f0f:	cdq    
  412f10:	sbb    eax,0x11411379
  412f15:	addr16 jl 0x412f86
  412f18:	mov    al,ds:0xeb0fa948
  412f1d:	sub    BYTE PTR [edx+eax*1+0x2b],0x46
  412f22:	pop    esi
  412f23:	xchg   esp,eax
  412f24:	push   eax
  412f25:	pop    es
  412f26:	adc    BYTE PTR [ecx],0x9
  412f29:	xor    DWORD PTR [eax+ebx*2],ebp
  412f2c:	ins    DWORD PTR es:[edi],dx
  412f2d:	sub    ebp,edi
  412f2f:	xchg   DWORD PTR [esi-0x30],edx
  412f32:	mov    BYTE PTR [ecx-0x1d],bh
  412f35:	and    al,0x74
  412f37:	pop    esi
  412f38:	and    eax,0xb9b33189
  412f3d:	rcl    bh,cl
  412f3f:	bnd jle 0x412f03
  412f42:	outs   dx,DWORD PTR ds:[esi]
  412f43:	test   dl,al
  412f45:	cmp    dl,BYTE PTR ds:[ebx+0x6e]
  412f49:	aad    0x80
  412f4b:	mov    edx,0x99458bc
  412f50:	vmwrite ebx,DWORD PTR [ecx+ecx*1]
  412f54:	mov    dl,0xb1
  412f56:	inc    esi
  412f57:	out    0xcd,eax
  412f59:	push   esi
  412f5a:	mov    dh,BYTE PTR [ecx-0x3f]
  412f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f5e:	mov    edi,0x5fed4364
  412f63:	imul   ebx
  412f65:	pop    ebx
  412f66:	adc    ah,BYTE PTR [edx+0x1a3e5c16]
  412f6c:	outs   dx,BYTE PTR ds:[esi]
  412f6d:	sub    eax,0xde675b2
  412f72:	pop    esp
  412f73:	int    0xe8
  412f75:	cmp    al,0xcd
  412f77:	xor    DWORD PTR [eax],esi
  412f79:	jle    0x412fec
  412f7b:	icebp  
  412f7c:	pop    esi
  412f7d:	in     al,dx
  412f7e:	mov    cl,0x57
  412f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f81:	fmul   DWORD PTR [ebp+esi*1-0x4f]
  412f85:	dec    eax
  412f86:	nop
  412f87:	sbb    DWORD PTR [ecx-0x2b],edi
  412f8a:	fldenv [esi+0x44]
  412f8d:	test   al,0xb6
  412f8f:	retf   0xe270
  412f92:	dec    eax
  412f93:	sbb    eax,0x33443b43
  412f98:	fild   QWORD PTR [edi+0x7bd37071]
  412f9e:	aad    0x3f
  412fa0:	jne    0x41300a
  412fa2:	sub    eax,DWORD PTR [ecx]
  412fa4:	fcom   st(3)
  412fa6:	dec    esi
  412fa7:	es into 
  412fa9:	rcr    DWORD PTR [ebx],cl
  412fab:	test   DWORD PTR [ebp+edi*8-0x70b15c49],edx
  412fb2:	popf   
  412fb3:	scas   al,BYTE PTR es:[edi]
  412fb4:	jmp    0xf162:0x4b13a361
  412fbb:	push   0xfc9e6039
  412fc0:	in     eax,0x45
  412fc2:	inc    edi
  412fc3:	add    BYTE PTR [ebp-0x2d],dl
  412fc6:	icebp  
  412fc7:	or     al,0xd4
  412fc9:	jne    0x412f4d
  412fcb:	mov    bh,0xac
  412fcd:	add    ah,0x95
  412fd0:	std    
  412fd1:	in     al,0x1e
  412fd3:	mov    eax,ds:0x9a621d7f
  412fd8:	mov    ebp,DWORD PTR [ebx+0xf18279e]
  412fde:	inc    ecx
  412fdf:	or     DWORD PTR [eax-0x56532726],ecx
  412fe5:	add    eax,DWORD PTR [ebp+0x27]
  412fe8:	pop    edx
  412fe9:	push   ebp
  412fea:	jnp    0x412ff1
  412fec:	push   es
  412fed:	mov    edi,0x652fd01b
  412ff2:	inc    eax
  412ff3:	(bad)  
  412ff4:	dec    edi
  412ff5:	popa   
  412ff6:	jle    0x41301b
  412ff8:	outs   dx,BYTE PTR ds:[esi]
  412ff9:	nop
  412ffa:	daa    
  412ffb:	jae    0x413043
  412ffd:	dec    edx
  412ffe:	in     eax,0x17
  413000:	sub    ah,BYTE PTR [edi]
  413002:	push   ss
  413003:	cmp    al,0x65
  413005:	jmp    0xf536:0xc430056e
  41300c:	imul   eax,DWORD PTR [eax+0x14d53269],0xb328fbc6
  413016:	mov    esp,0xd8d92fee
  41301b:	mov    BYTE PTR [edx+0x1aa6c2f5],al
  413021:	jne    0x412ff8
  413023:	mov    edx,0xa0574723
  413028:	and    ch,BYTE PTR [edx+0x4f]
  41302b:	adc    BYTE PTR [esp+ebp*4],ah
  41302e:	mov    ax,0xf41d
  413032:	xchg   edx,eax
  413033:	sub    BYTE PTR [edx],al
  413035:	mov    bh,0x39
  413037:	jns    0x412ff5
  413039:	in     eax,dx
  41303a:	and    ecx,0x9e4dbbd2
  413040:	(bad)  
  413041:	fadd   DWORD PTR [eax+edx*1+0x690244c3]
  413048:	inc    esi
  413049:	bound  edi,QWORD PTR [ebx-0x6f]
  41304c:	jnp    0x41302b
  41304e:	and    esp,DWORD PTR [ebx]
  413050:	sbb    DWORD PTR [esi+0x5beff1a4],edx
  413056:	sti    
  413057:	adc    bl,BYTE PTR [edx+eax*8]
  41305a:	inc    esi
  41305b:	in     eax,dx
  41305c:	mov    dl,BYTE PTR [ecx+ebx*8]
  41305f:	test   esp,0x290cf9c
  413065:	push   edi
  413066:	cdq    
  413067:	ret    0xf35a
  41306a:	mov    bh,0xfa
  41306c:	scas   al,BYTE PTR es:[edi]
  41306d:	dec    edx
  41306e:	jbe    0x60d2cf5d
  413074:	or     ebp,DWORD PTR [esi]
  413076:	mov    ch,0x5b
  413078:	sub    eax,0x391354bc
  41307d:	je     0x413048
  41307f:	add    esi,esi
  413081:	cli    
  413082:	and    eax,DWORD PTR [ebx-0x755df262]
  413088:	imul   edx,edi,0xffffffa5
  41308b:	in     eax,dx
  41308c:	pop    ecx
  41308d:	enter  0x7e0f,0x7a
  413091:	cmc    
  413092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413093:	xor    BYTE PTR [eax],dl
  413095:	mov    al,ds:0x74a61935
  41309a:	ja     0x413081
  41309c:	fs add eax,0xb3c6a44e
  4130a2:	(bad)  
  4130a3:	xor    DWORD PTR [esi-0x28],esi
  4130a6:	shl    ecx,0x37
  4130a9:	xchg   DWORD PTR ds:0x4cbbc437,ecx
  4130af:	push   edi
  4130b0:	pop    ebx
  4130b1:	scas   eax,DWORD PTR es:[edi]
  4130b2:	adc    ebp,DWORD PTR [edx]
  4130b4:	adc    ebp,DWORD PTR ds:0x19509e2b
  4130ba:	push   ds
  4130bb:	inc    edi
  4130bc:	(bad)  
  4130be:	and    bh,bh
  4130c0:	inc    edx
  4130c1:	fwait
  4130c2:	or     eax,0x81712f07
  4130c7:	test   DWORD PTR [ebx],ecx
  4130c9:	dec    ecx
  4130ca:	ficom  DWORD PTR [edi]
  4130cc:	push   edx
  4130cd:	mov    esi,DWORD PTR [ebp+ecx*8+0x29535c57]
  4130d4:	(bad)  
  4130d5:	aad    0xf9
  4130d7:	xchg   DWORD PTR [eax],esp
  4130d9:	jmp    0x4130de
  4130db:	setle  BYTE PTR [esi]
  4130de:	xchg   ebp,eax
  4130df:	scas   eax,DWORD PTR es:[edi]
  4130e0:	psubd  mm5,QWORD PTR [esi-0x6d]
  4130e4:	imul   DWORD PTR [edi]
  4130e6:	dec    edx
  4130e7:	lods   eax,DWORD PTR ds:[esi]
  4130e8:	jno    0x41311d
  4130ea:	jg     0x4130e2
  4130ec:	jno    0x4130ae
  4130ee:	cmp    al,0xae
  4130f0:	push   0x8
  4130f2:	inc    edx
  4130f3:	xchg   ecx,eax
  4130f4:	loopne 0x4130cd
  4130f6:	push   cs
  4130f7:	jl     0x413155
  4130f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130fa:	cld    
  4130fb:	mov    ds:0x95cf74ef,al
  413100:	inc    ebp
  413101:	jge    0x4130b7
  413103:	jle    0x413139
  413105:	mov    eax,0xbe97af0a
  41310a:	ins    BYTE PTR es:[edi],dx
  41310b:	cs mov ebx,0x9002100d
  413111:	jp     0x4130e6
  413113:	inc    eax
  413114:	jo     0x41317d
  413116:	pushf  
  413117:	jno    0x413170
  413119:	xlat   BYTE PTR ds:[ebx]
  41311a:	pop    edi
  41311b:	lock shr BYTE PTR [edx-0x2d],1
  41311f:	add    al,0x2c
  413121:	imul   edi,DWORD PTR [ebp-0xd],0xffffffc4
  413125:	lods   al,BYTE PTR ds:[esi]
  413126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413127:	cmp    eax,0xf539d66a
  41312c:	pop    ebx
  41312d:	xor    DWORD PTR [edi-0x38],esi
  413130:	repnz push es
  413132:	mov    ch,0x19
  413134:	fnstenv [ecx-0x69e792e6]
  41313a:	jns    0x413142
  41313c:	mov    bl,0x51
  41313e:	adc    BYTE PTR ds:0xfb26cae0,dh
  413144:	mov    cl,0xba
  413146:	mov    ebx,0x1fcd8aa2
  41314b:	sub    eax,0xfdf12027
  413150:	jle    0x41311a
  413152:	add    al,0x6a
  413154:	cmp    al,0x45
  413156:	in     al,0x7
  413158:	sbb    eax,0x33c14871
  41315d:	push   es
  41315e:	adc    ch,BYTE PTR [eax-0x7b504c86]
  413164:	mov    esi,0x5f9b4b77
  413169:	inc    esp
  41316a:	dec    ebx
  41316b:	inc    esi
  41316c:	repz or al,0x25
  41316f:	inc    ebp
  413170:	lea    edi,[edi+0x35]
  413173:	push   0xf0002228
  413178:	loopne 0x413112
  41317a:	int    0x2
  41317c:	jmp    0xc080f8ce
  413181:	sti    
  413182:	rcr    DWORD PTR [ebp+0x68],cl
  413185:	jne    0x413122
  413187:	jp     0x4131a8
  413189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41318a:	sbb    DWORD PTR [esi+0x43],0xb0e34997
  413191:	sub    al,0x12
  413193:	sub    edi,DWORD PTR [eax+0x72]
  413196:	out    0x3f,al
  413198:	adc    al,0x94
  41319a:	retf   0xdc40
  41319d:	(bad)  
  41319e:	xchg   ebp,eax
  41319f:	stc    
  4131a0:	push   ds
  4131a1:	or     eax,0xbf1e7d92
  4131a6:	imul   edx,esi,0xffffff8e
  4131a9:	jnp    0x413154
  4131ab:	add    cl,bh
  4131ad:	jns    0x4131b6
  4131af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b0:	daa    
  4131b1:	ins    BYTE PTR es:[edi],dx
  4131b2:	sbb    esp,DWORD PTR es:[ebx+0x75]
  4131b6:	data16 mov ch,0xdd
  4131b9:	push   ss
  4131ba:	adc    al,0xa5
  4131bc:	push   es
  4131bd:	pop    esp
  4131be:	out    dx,eax
  4131bf:	js     0x4131dd
  4131c1:	inc    ebp
  4131c2:	aas    
  4131c3:	push   ds
  4131c4:	sbb    DWORD PTR [edi],ecx
  4131c6:	sub    BYTE PTR [ecx-0x27],dl
  4131c9:	test   al,0x1d
  4131cb:	fstp   QWORD PTR [edi-0x3b]
  4131ce:	dec    ebx
  4131cf:	dec    edi
  4131d0:	pop    edx
  4131d1:	mov    ds:0xded5e7d9,al
  4131d6:	sbb    BYTE PTR [edi-0x2fc98a71],dh
  4131dc:	stos   DWORD PTR es:[edi],eax
  4131dd:	and    ebp,DWORD PTR [edx*8-0x3decd985]
  4131e4:	outs   dx,BYTE PTR ds:[esi]
  4131e5:	adc    esi,0xdc8db7c5
  4131eb:	loope  0x413254
  4131ed:	push   ebx
  4131ee:	sbb    al,0x8f
  4131f0:	es inc ebx
  4131f2:	fcmove st,st(3)
  4131f4:	pushf  
  4131f5:	test   ch,ah
  4131f7:	dec    esp
  4131f8:	xlat   BYTE PTR ds:[ebx]
  4131f9:	cmp    cl,BYTE PTR [ebp-0x7a]
  4131fc:	(bad)  
  4131fe:	jbe    0x41320a
  413200:	fwait
  413201:	jp     0x413212
  413203:	bound  esi,QWORD PTR [ecx-0x1]
  413206:	or     ebx,DWORD PTR [esi+0xc]
  413209:	inc    edi
  41320a:	repz and BYTE PTR [esi],bh
  41320d:	xor    dl,BYTE PTR [esi]
  41320f:	aad    0x22
  413211:	cmp    DWORD PTR [esi],esp
  413213:	xor    al,0x6c
  413215:	pop    esp
  413216:	jb     0x4131f7
  413218:	inc    edi
  413219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41321a:	aam    0x90
  41321c:	(bad)  
  41321d:	mov    edi,0xf3c3217d
  413222:	mov    ebp,0x6c3b2eaf
  413227:	pop    es
  413228:	pop    eax
  413229:	aaa    
  41322a:	xlat   BYTE PTR ds:[ebx]
  41322b:	popf   
  41322c:	or     al,0x77
  41322e:	and    ebx,eax
  413230:	cmp    eax,0x815f1979
  413235:	dec    ebx
  413236:	inc    esi
  413237:	jnp    0x413211
  413239:	loopne 0x41324d
  41323b:	xchg   ebx,eax
  41323c:	sub    eax,0x6e0fb37
  413241:	or     al,0xe7
  413243:	adc    al,0x16
  413245:	dec    edi
  413246:	dec    esp
  413247:	xlat   BYTE PTR ds:[ebx]
  413248:	fisub  WORD PTR [esi+0x11]
  41324b:	adc    eax,0xffffffd7
  41324e:	and    bh,BYTE PTR [edi+0x7b]
  413251:	test   DWORD PTR [ebx+0x5b27a9a1],0x54636a7b
  41325b:	mov    ch,0xe6
  41325d:	imul   eax,DWORD PTR [edi+ebp*2],0x14
  413261:	and    al,al
  413263:	mov    eax,ds:0x1f7e4c9a
  413268:	sub    DWORD PTR [edi-0x20b8aca9],esp
  41326e:	sub    BYTE PTR [ebx],dl
  413270:	cmp    ebx,DWORD PTR [ecx+0x6743d4f2]
  413276:	mov    edx,gs
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	push   DWORD PTR [ebp-0x5a6e483a]
  41327f:	mov    al,ds:0x94df3d78
  413284:	repz push ecx
  413286:	sub    BYTE PTR [eax-0x67],0x36
  41328a:	sub    bh,bl
  41328c:	cld    
  41328d:	call   0x3b32a34f
  413292:	mov    ?,WORD PTR ds:0xc09f1120
  413298:	lock mov esp,0x882608b2
  41329e:	stos   DWORD PTR es:[edi],eax
  41329f:	jmp    0x4a2bd48b
  4132a4:	sbb    al,BYTE PTR [ecx-0x6d13230c]
  4132aa:	cmc    
  4132ab:	inc    ecx
  4132ac:	xor    DWORD PTR [esi+0x7aa41a5a],ebp
  4132b2:	mov    ebx,0xb4961308
  4132b7:	mov    ebp,0x51cb09ad
  4132bc:	xlat   BYTE PTR ds:[ebx]
  4132bd:	repnz jecxz 0x4132d8
  4132c0:	xchg   ebp,eax
  4132c1:	in     al,0xef
  4132c3:	mov    BYTE PTR [edx+esi*2+0x315fef64],ch
  4132ca:	cmp    al,0xe3
  4132cc:	call   0xb533bb8b
  4132d1:	data16 daa 
  4132d3:	repnz cdq 
  4132d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132d6:	xor    al,0xd5
  4132d8:	adc    al,0xe9
  4132da:	jo     0x4132f2
  4132dc:	dec    esp
  4132dd:	push   cs
  4132de:	cld    
  4132df:	ja     0x4132a4
  4132e1:	mov    ds:0x4e61ff2b,al
  4132e6:	xor    BYTE PTR [esi+0x0],0x33
  4132ea:	jmp    ebp
  4132ec:	test   eax,0x4528dc4f
  4132f1:	mov    esp,0xe11600dd
  4132f6:	lods   al,BYTE PTR ds:[esi]
  4132f7:	push   ss
  4132f8:	add    DWORD PTR [esi],edi
  4132fa:	pop    ebp
  4132fb:	xchg   edi,eax
  4132fc:	pop    ds
  4132fd:	mov    ch,0xe4
  4132ff:	dec    ebp
  413300:	push   esp
  413301:	js     0x4132c7
  413303:	sub    esi,esi
  413305:	je     0x4132d4
  413307:	fldz   
  413309:	pop    edx
  41330a:	retf   0x19fa
  41330d:	dec    esi
  41330e:	test   eax,0xcd3b80e8
  413313:	pop    esi
  413314:	ds jmp 0x55d9aa8e
  41331a:	push   edx
  41331b:	mov    bl,0x88
  41331d:	sbb    eax,DWORD PTR [ecx-0x3d5f7c85]
  413323:	sub    eax,0x2367e03d
  413328:	inc    esi
  413329:	inc    ebx
  41332a:	punpckhbw mm3,mm1
  41332d:	mov    ds:0x4952a2a1,eax
  413332:	jmp    0x7a7:0x4bd40126
  413339:	jmp    0xd7e8:0x937fc482
  413340:	mov    eax,DWORD PTR [esi+0x1471aec9]
  413346:	mov    ds:0xa5fd66dc,eax
  41334b:	mov    edi,0xc428446
  413350:	dec    edi
  413351:	mov    al,0x7f
  413353:	shl    BYTE PTR [edi-0xcc09039],0xf5
  41335a:	retf   
  41335b:	inc    ecx
  41335c:	test   eax,0x34165f3c
  413361:	mov    ds:0x630cf1c5,eax
  413366:	pop    edi
  413367:	jle    0x413356
  413369:	xchg   BYTE PTR [ecx],ch
  41336b:	fsub   DWORD PTR [esi]
  41336d:	clc    
  41336e:	(bad)  
  41336f:	and    cl,BYTE PTR [ecx]
  413371:	dec    esi
  413372:	dec    ebp
  413373:	std    
  413374:	inc    ecx
  413375:	mov    ecx,0x12887890
  41337a:	data16 jg 0x413326
  41337d:	pop    es
  41337e:	pop    esp
  41337f:	sbb    DWORD PTR [esi],ecx
  413381:	jno    0x413386
  413383:	loopne 0x413387
  413385:	fistp  DWORD PTR ds:0x2b3f6855
  41338b:	gs icebp 
  41338d:	add    ecx,esp
  41338f:	mov    cl,0x91
  413391:	inc    ebp
  413392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413393:	rcr    dl,cl
  413395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413396:	mov    eax,0xd97fd3a9
  41339b:	add    esi,esp
  41339d:	fdivr  QWORD PTR [ebx-0x6e3ea50b]
  4133a3:	mov    WORD PTR [ecx],ss
  4133a5:	outs   dx,BYTE PTR ds:[esi]
  4133a6:	push   ss
  4133a7:	adc    bh,BYTE PTR [ecx-0xc]
  4133aa:	dec    eax
  4133ab:	add    BYTE PTR [ebp+0x76],dl
  4133ae:	jecxz  0x4133c7
  4133b0:	aad    0xb8
  4133b2:	sub    eax,0x960a3f06
  4133b7:	stos   DWORD PTR es:[edi],eax
  4133b8:	xchg   ebp,eax
  4133b9:	sbb    BYTE PTR [ebp-0x1d],ch
  4133bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133bd:	mov    cl,0xc7
  4133bf:	push   0x1b
  4133c1:	(bad)  
  4133c2:	xor    al,cl
  4133c4:	repz ret 0xeabf
  4133c8:	stos   DWORD PTR es:[edi],eax
  4133c9:	loopne 0x413442
  4133cb:	sub    eax,0xda61406b
  4133d0:	dec    ebx
  4133d1:	pop    edi
  4133d2:	sbb    DWORD PTR [edi+0x411e8e5d],esp
  4133d8:	or     eax,0x9af3b042
  4133dd:	sub    ebp,ecx
  4133df:	cmp    ah,ch
  4133e1:	test   BYTE PTR [edi],0x4
  4133e4:	es or  al,0x82
  4133e7:	ror    DWORD PTR [esi],cl
  4133e9:	div    BYTE PTR [eax-0x79]
  4133ec:	jne    0x41337d
  4133ee:	push   ds
  4133ef:	jbe    0x41340d
  4133f1:	push   ebx
  4133f2:	jge    0x4133a6
  4133f4:	mov    dh,0xbb
  4133f6:	pop    ebx
  4133f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f8:	(bad)  
  4133f9:	in     eax,0x99
  4133fb:	xchg   edi,eax
  4133fc:	jae    0x413477
  4133fe:	push   eax
  4133ff:	in     al,dx
  413400:	jp     0x413434
  413402:	(bad)  
  413403:	jmp    0xf9ee814a
  413408:	scas   eax,DWORD PTR es:[edi]
  413409:	xchg   esp,eax
  41340a:	cmp    esi,esp
  41340c:	or     esp,DWORD PTR [ecx+eiz*4-0x6960732d]
  413413:	scas   al,BYTE PTR es:[edi]
  413414:	nop
  413415:	clc    
  413416:	jb     0x4133af
  413418:	ins    BYTE PTR es:[edi],dx
  413419:	ins    DWORD PTR es:[edi],dx
  41341a:	jo     0x413467
  41341c:	jne    0x4133f0
  41341e:	in     al,dx
  41341f:	pop    ebx
  413420:	inc    esp
  413421:	lea    eax,[esi]
  413423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413424:	sahf   
  413425:	cmp    DWORD PTR [ebx],esi
  413427:	cdq    
  413428:	pop    ss
  413429:	jo     0x41346d
  41342b:	sub    dl,dl
  41342d:	test   BYTE PTR [esi+0x56],dh
  413430:	lods   eax,DWORD PTR ds:[esi]
  413431:	mov    dl,0xe8
  413433:	rcr    DWORD PTR [esi-0x296bf950],0xee
  41343a:	add    al,0x64
  41343c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41343d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343e:	bound  ebp,QWORD PTR [edi]
  413440:	pop    ebx
  413441:	sti    
  413442:	cdq    
  413443:	aas    
  413444:	fmul   QWORD PTR [esp+edx*1]
  413447:	inc    edx
  413448:	xchg   DWORD PTR [edi+0x2d],ebp
  41344b:	add    BYTE PTR [ebp+0x5a3c8d34],dl
  413451:	lods   eax,DWORD PTR ds:[esi]
  413452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413453:	outs   dx,BYTE PTR ds:[esi]
  413454:	out    0x6d,eax
  413456:	dec    edi
  413457:	bound  ecx,QWORD PTR [edx-0x45]
  41345a:	mov    ebx,0xa68f6077
  41345f:	rol    bh,1
  413461:	mov    esp,0xb51403a0
  413466:	mov    DWORD PTR [edx],esp
  413468:	test   cl,al
  41346a:	pop    esp
  41346b:	xor    BYTE PTR ds:0xfd663143,bh
  413471:	mov    al,BYTE PTR [edx]
  413473:	into   
  413474:	iret   
  413475:	xchg   BYTE PTR [ecx],cl
  413477:	loop   0x4134a9
  413479:	mov    ?,ebp
  41347b:	enter  0x8f65,0x6
  41347f:	sti    
  413480:	mov    esi,0x2bb8de09
  413485:	mov    edi,0x301c15e7
  41348a:	and    ecx,DWORD PTR [eax+0x31076b0b]
  413490:	inc    edx
  413491:	push   0x7
  413493:	into   
  413494:	and    DWORD PTR [eax],ecx
  413496:	(bad)  
  413497:	sar    BYTE PTR [ecx-0x4fe794fe],0x52
  41349e:	dec    edx
  41349f:	(bad)  
  4134a1:	mov    cl,0xf
  4134a3:	jp     0x413454
  4134a5:	or     eax,0x87c3a7ac
  4134aa:	dec    eax
  4134ab:	jnp    0x413441
  4134ad:	dec    esi
  4134ae:	sbb    bh,BYTE PTR [edx+0x3]
  4134b1:	inc    ebx
  4134b2:	ret    0xeeb9
  4134b5:	cli    
  4134b6:	adc    ebx,DWORD PTR [ebx+0xa]
  4134b9:	xchg   ebp,eax
  4134ba:	sub    DWORD PTR [ecx+0x70115c04],ebx
  4134c0:	test   eax,0xc5c87d18
  4134c5:	repz xlat BYTE PTR ds:[ebx]
  4134c7:	pop    edx
  4134c8:	fdivr  DWORD PTR [ebx]
  4134cb:	out    dx,eax
  4134cc:	adc    ah,BYTE PTR [ebx+0x32]
  4134cf:	add    BYTE PTR [ecx+0x6],dh
  4134d2:	inc    eax
  4134d3:	test   BYTE PTR [eax+0x3f],dl
  4134d6:	popa   
  4134d7:	add    ebp,DWORD PTR [ebx-0x42]
  4134da:	push   esi
  4134db:	lea    ecx,[eax-0x40]
  4134de:	push   0x67
  4134e0:	fisttp QWORD PTR [ecx-0x54]
  4134e3:	ret    0x2a3e
  4134e6:	test   al,0x8b
  4134e8:	cmp    al,bh
  4134ea:	repz pop ebp
  4134ec:	sbb    DWORD PTR [ebx],edx
  4134ee:	cmp    ecx,DWORD PTR [eax+0x55]
  4134f1:	add    al,cl
  4134f3:	pop    edx
  4134f4:	rcr    BYTE PTR [esi+0x58],1
  4134f7:	inc    esi
  4134f8:	inc    edx
  4134f9:	js     0x413543
  4134fb:	and    bh,cl
  4134fd:	dec    ebx
  4134fe:	xlat   BYTE PTR ds:[ebx]
  4134ff:	cmp    DWORD PTR [esi-0x68],ecx
  413502:	in     al,0x7c
  413504:	sbb    eax,0x79683619
  413509:	lds    esp,FWORD PTR [ebp-0x787144a0]
  41350f:	cmp    BYTE PTR [ecx+0x14cd51d8],al
  413515:	sahf   
  413516:	(bad)  
  413517:	jmp    0x413569
  413519:	pop    ss
  41351a:	loopne 0x4134fe
  41351c:	loopne 0x41355a
  41351e:	sbb    cl,BYTE PTR [edi-0x67]
  413521:	dec    esp
  413522:	cmp    al,BYTE PTR [ecx]
  413524:	mov    esp,0xd2065b3e
  413529:	and    eax,0xcca0a9ec
  41352e:	call   0x52a5cb1
  413533:	inc    edx
  413534:	push   edi
  413535:	imul   ebx,DWORD PTR [edx],0x25ba6bdf
  41353b:	fidiv  DWORD PTR [edi+0x32]
  41353e:	cwde   
  41353f:	mov    ebp,0x5da0420f
  413544:	stos   BYTE PTR es:[edi],al
  413545:	jo     0x4134f8
  413547:	push   ss
  413548:	pop    esi
  413549:	nop
  41354a:	mov    cl,0xcc
  41354c:	pop    esp
  41354d:	popa   
  41354e:	or     DWORD PTR [eax-0x6d],0xffffffe2
  413552:	push   ebx
  413553:	push   esp
  413554:	inc    ebx
  413555:	arpl   WORD PTR [edi-0x4c],si
  413558:	pop    ebx
  413559:	mov    al,ds:0x2da1f40a
  41355e:	adc    ebp,DWORD PTR [edi]
  413560:	or     ecx,0x6f884f13
  413566:	into   
  413567:	test   al,0x7f
  413569:	call   0x6f6b:0x83eeeac
  413570:	in     al,dx
  413571:	mov    edi,0x1c1af550
  413576:	or     cl,dh
  413578:	sub    BYTE PTR [edx+0x10],bl
  41357b:	xchg   DWORD PTR [edi-0x3cb20a29],esi
  413581:	mov    ebx,0xd14dc31e
  413586:	mov    ebp,0xe472d73b
  41358b:	std    
  41358c:	push   0x2bb9a4f6
  413591:	mov    BYTE PTR [ecx],dl
  413593:	fmul   QWORD PTR [esi]
  413595:	sbb    ah,BYTE PTR [esi+0x36]
  413598:	lsl    eax,WORD PTR [edi+esi*8-0x20]
  41359d:	jb     0x4135a9
  41359f:	lods   eax,DWORD PTR ds:[esi]
  4135a0:	test   BYTE PTR [eax-0x140c7582],bh
  4135a6:	retf   
  4135a7:	in     eax,0x14
  4135a9:	push   edx
  4135aa:	cdq    
  4135ab:	aam    0x53
  4135ad:	or     edi,DWORD PTR [esi-0x2ca43588]
  4135b3:	push   es
  4135b4:	jne    0x41362e
  4135b6:	cmp    al,0x1e
  4135b8:	pop    ds
  4135b9:	or     al,0xa3
  4135bb:	retf   0xc146
  4135be:	pop    ebp
  4135bf:	xchg   esp,eax
  4135c0:	loope  0x41355f
  4135c2:	shr    edx,cl
  4135c4:	retf   
  4135c5:	xor    BYTE PTR [ebp-0x3e],cl
  4135c8:	and    al,0xd5
  4135ca:	idiv   ecx
  4135cc:	cld    
  4135cd:	add    BYTE PTR ds:0x82704d31,dh
  4135d3:	aaa    
  4135d4:	push   esi
  4135d5:	dec    esi
  4135d6:	jns    0x4135b2
  4135d8:	imul   edx,eax,0xffffffa5
  4135db:	into   
  4135dc:	lods   al,BYTE PTR ds:[esi]
  4135dd:	popf   
  4135de:	test   DWORD PTR [esp+edi*2-0x6a664cb],edx
  4135e5:	(bad)  
  4135e6:	pop    edi
  4135e7:	pop    ss
  4135e8:	aas    
  4135e9:	cmp    BYTE PTR [edx],0xac
  4135ec:	outs   dx,DWORD PTR ds:[esi]
  4135ed:	push   0xffffff9b
  4135ef:	shl    DWORD PTR [edx+ecx*4],1
  4135f2:	dec    esp
  4135f3:	or     ebx,0x17218ca2
  4135f9:	push   ecx
  4135fa:	dec    esi
  4135fb:	pop    ss
  4135fc:	ins    DWORD PTR es:[edi],dx
  4135fd:	fwait
  4135fe:	lahf   
  4135ff:	cs cwde 
  413601:	pushf  
  413602:	push   esp
  413603:	dec    edx
  413604:	in     al,0xbb
  413606:	sub    BYTE PTR [ecx-0x54],0x3a
  41360a:	gs aas 
  41360c:	push   ds
  41360d:	jne    0x413612
  41360f:	mov    esi,0x8a801979
  413614:	mov    dh,0x77
  413616:	rol    DWORD PTR [ebp+0x1c],1
  413619:	push   ebx
  41361a:	(bad)  
  41361b:	jmp    0x6928:0x89923490
  413622:	loope  0x41366e
  413624:	out    dx,al
  413625:	dec    edx
  413626:	out    0x95,eax
  413628:	push   ss
  413629:	(bad)  
  41362a:	mov    al,ds:0x1f838371
  41362f:	jle    0x4136aa
  413631:	inc    ebx
  413632:	int    0xaa
  413634:	loop   0x41368e
  413636:	icebp  
  413637:	js     0x4136a6
  413639:	je     0x4136b3
  41363b:	test   DWORD PTR [ecx+0x3d],ecx
  41363e:	stos   BYTE PTR es:[edi],al
  41363f:	sbb    al,BYTE PTR [edi-0x4c]
  413642:	mov    eax,0x9dc2a6d3
  413647:	sbb    al,0xe6
  413649:	mov    ebp,0x11ba1707
  41364e:	leave  
  41364f:	pop    ecx
  413650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413651:	aaa    
  413652:	inc    esp
  413653:	sbb    BYTE PTR [eax-0x2bb70aef],0xd5
  41365a:	xchg   BYTE PTR [edi+0x24e8ebb2],ah
  413660:	sbb    ebx,edi
  413662:	xor    eax,0x511f759f
  413667:	dec    edi
  413668:	and    BYTE PTR [ebx],al
  41366a:	dec    esi
  41366b:	inc    esi
  41366c:	mov    dh,0x6e
  41366e:	cmp    eax,0xd89785e9
  413673:	int    0x4c
  413675:	pop    eax
  413676:	jge    0x4136f2
  413678:	test   eax,0x563f4e9e
  41367d:	repnz loope 0x41369e
  413680:	(bad)  
  413681:	sbb    eax,0xddcc346a
  413686:	aaa    
  413687:	jne    0x413661
  413689:	fistp  WORD PTR [edi-0x1d0b2c5d]
  41368f:	repnz aad 0x8b
  413692:	js     0x413627
  413694:	add    bh,dl
  413696:	out    0xe,eax
  413698:	pushf  
  413699:	stc    
  41369a:	inc    ebx
  41369b:	mov    al,ds:0x7db94cd4
  4136a0:	and    ebx,eax
  4136a2:	sbb    DWORD PTR [ebx+0x47],esi
  4136a5:	adc    eax,0x19d677f8
  4136aa:	mov    ds:0xe6ba798b,eax
  4136af:	pop    eax
  4136b0:	int3   
  4136b1:	loope  0x4136d4
  4136b3:	cmp    DWORD PTR ds:0xabd51d7c,edi
  4136b9:	adc    al,0x21
  4136bb:	ds mov bh,0x16
  4136be:	in     eax,0x4d
  4136c0:	test   al,0x40
  4136c2:	mov    eax,ds:0xe226c93d
  4136c7:	shl    edx,cl
  4136c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ca:	cs mov al,0x76
  4136cd:	inc    esp
  4136ce:	je     0x413746
  4136d0:	cdq    
  4136d1:	mov    bh,0x8b
  4136d3:	rcl    DWORD PTR [eax-0x15b87d79],cl
  4136d9:	xchg   edi,eax
  4136da:	add    cl,cl
  4136dc:	scas   eax,DWORD PTR es:[edi]
  4136dd:	into   
  4136de:	mov    bl,0x53
  4136e0:	cmc    
  4136e1:	dec    eax
  4136e2:	xchg   DWORD PTR [ecx+0x5cfc43f3],esp
  4136e8:	into   
  4136e9:	pop    es
  4136ea:	xchg   BYTE PTR [edi+eiz*2-0x46bccfe1],dl
  4136f1:	stc    
  4136f2:	shl    BYTE PTR cs:[ebp+0x19],1
  4136f6:	ins    DWORD PTR es:[edi],dx
  4136f7:	int    0x92
  4136f9:	es mov ch,0xbd
  4136fc:	sbb    edx,DWORD PTR [ecx-0x4a]
  4136ff:	jg     0x41376a
  413701:	mov    cl,0x90
  413703:	cmp    eax,0x85486b35
  413708:	scas   eax,DWORD PTR es:[edi]
  413709:	(bad)  
  41370a:	adc    ch,dl
  41370c:	(bad)  
  41370d:	jns    0x413748
  41370f:	adc    BYTE PTR [ebx],bl
  413711:	sti    
  413712:	shl    DWORD PTR [ebx+0x1139de94],1
  413718:	loopne 0x413718
  41371a:	push   ds
  41371b:	jb     0x41373a
  41371d:	mov    ds:0x8dc79b55,eax
  413722:	inc    edx
  413723:	and    eax,0x37e37dc8
  413728:	pop    eax
  413729:	adc    dh,BYTE PTR [ebx-0x17]
  41372c:	iret   
  41372d:	aam    0xc7
  41372f:	cmp    BYTE PTR [edx+ebp*2-0x63],dl
  413733:	scas   eax,DWORD PTR es:[edi]
  413734:	pushf  
  413735:	lods   al,BYTE PTR ds:[esi]
  413736:	fcomp  QWORD PTR [ebx]
  413738:	enter  0xc042,0x6
  41373c:	das    
  41373d:	adc    al,0xd1
  41373f:	ja     0x413740
  413741:	aaa    
  413742:	(bad)  
  413743:	scas   al,BYTE PTR es:[edi]
  413744:	(bad)  [ecx+0x8]
  413747:	xor    eax,0xb705e223
  41374c:	out    dx,eax
  41374d:	cwde   
  41374e:	sbb    DWORD PTR [ebx-0x63665b7],ebx
  413754:	mov    ah,0x7a
  413756:	std    
  413757:	jno    0x4137a3
  413759:	sbb    eax,0xd453d74b
  41375e:	pop    eax
  41375f:	jg     0x4137bf
  413761:	fdivr  QWORD PTR [ebp-0x7076007d]
  413767:	out    dx,al
  413768:	jbe    0x413779
  41376a:	(bad)  [edi+ebp*8+0x19]
  41376e:	pop    ebx
  41376f:	(bad)  
  413770:	fldcw  WORD PTR [ebx]
  413772:	xor    edi,ebx
  413774:	mov    al,0xa9
  413776:	aad    0x93
  413778:	and    dl,al
  41377a:	outs   dx,DWORD PTR ds:[esi]
  41377b:	sub    al,0x2f
  41377d:	mov    esi,0x272d2c99
  413782:	adc    eax,edx
  413784:	xor    DWORD PTR [edx+0x33],edi
  413787:	pusha  
  413788:	(bad)  
  413789:	(bad)  
  41378a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378b:	fistp  DWORD PTR [esi]
  41378d:	mov    esi,0xf4dd70cc
  413792:	das    
  413793:	fldenv [edx+0x5c27793]
  413799:	popa   
  41379a:	test   BYTE PTR [ecx+0x60],dl
  41379d:	inc    ebx
  41379e:	call   DWORD PTR [esi+edi*4]
  4137a1:	out    0xf6,al
  4137a3:	(bad)  
  4137a4:	ficomp DWORD PTR [ecx+0x48]
  4137a7:	in     al,0xa9
  4137a9:	retf   0x58c7
  4137ac:	or     ch,bh
  4137ae:	fisub  WORD PTR [ecx-0x2a08d75e]
  4137b4:	sbb    ch,BYTE PTR [ebx]
  4137b6:	sbb    DWORD PTR [edi],ebx
  4137b8:	inc    ebx
  4137b9:	nop
  4137ba:	icebp  
  4137bb:	jmp    0x413831
  4137bd:	jle    0x413757
  4137bf:	or     edx,0xafe65279
  4137c5:	and    DWORD PTR [ebp-0x460a1a54],edi
  4137cb:	dec    BYTE PTR [esi+eax*1-0x75]
  4137cf:	mov    dl,0xae
  4137d1:	push   ss
  4137d2:	(bad)  [ebx+0x4]
  4137d5:	jne    0x41384b
  4137d7:	sub    al,BYTE PTR [eax]
  4137d9:	jb     0x41381c
  4137db:	or     DWORD PTR [esi],eax
  4137dd:	inc    ebp
  4137de:	mov    dh,0x27
  4137e0:	ficomp DWORD PTR [edi]
  4137e2:	icebp  
  4137e3:	cmp    dh,BYTE PTR ds:0xad0440b4
  4137e9:	mov    eax,0xb9d7b857
  4137ee:	cmp    BYTE PTR [edi],ch
  4137f0:	adc    eax,0x214c03ff
  4137f5:	or     eax,DWORD PTR [edx]
  4137f7:	jg     0x413828
  4137f9:	fistp  DWORD PTR [edx]
  4137fb:	std    
  4137fc:	sub    al,0x9c
  4137fe:	inc    ebp
  4137ff:	mov    BYTE PTR [edx-0x5a],ah
  413802:	mov    eax,ds:0x13885909
  413807:	into   
  413808:	adc    DWORD PTR [ebx],eax
  41380a:	pusha  
  41380b:	sbb    BYTE PTR [edi+0x2dfe5c95],bh
  413811:	xchg   edi,eax
  413812:	fsub   st,st(7)
  413814:	pop    edx
  413815:	enter  0x96db,0xc8
  413819:	cli    
  41381a:	sbb    DWORD PTR [edi],edi
  41381c:	test   DWORD PTR [edi+edi*2+0x5b],edi
  413820:	jmp    0x41381f
  413822:	sub    ebx,DWORD PTR [eax-0x2031583b]
  413828:	sub    dh,BYTE PTR [ecx-0x558c3efe]
  41382e:	fwait
  41382f:	mov    dl,BYTE PTR [ebx+0x73]
  413832:	jge    0x41381c
  413834:	mov    ah,0x79
  413836:	mov    edx,0x947d08be
  41383b:	scas   al,BYTE PTR es:[edi]
  41383c:	idiv   esi
  41383e:	cmp    DWORD PTR [ebp-0x2a9bfb3e],esp
  413844:	retf   
  413845:	jge    0x4138b3
  413847:	add    DWORD PTR [esi],ecx
  413849:	arpl   WORD PTR [edi],bx
  41384b:	push   ebx
  41384c:	push   ecx
  41384d:	inc    esp
  41384e:	push   esp
  41384f:	xchg   BYTE PTR [edi+eiz*1-0x66012093],ah
  413856:	fld    TBYTE PTR [edx+ebx*8+0xa]
  41385a:	jnp    0x413875
  41385c:	xchg   ebp,eax
  41385d:	and    cl,BYTE PTR [ecx-0x3d]
  413860:	add    esp,DWORD PTR [ebp-0x417c0472]
  413866:	int    0x30
  413868:	mov    ebp,0x2e4b89d8
  41386d:	xor    BYTE PTR [edi-0x4fad6952],dl
  413873:	call   0xfb7bef24
  413878:	icebp  
  413879:	ret    
  41387a:	repz fisub WORD PTR cs:[edx]
  41387e:	repnz sbb DWORD PTR [edx-0x1a],eax
  413882:	push   es
  413883:	call   0x8cb0:0x6a92af49
  41388a:	sar    DWORD PTR [edi],0xa2
  41388d:	sub    al,0x8
  41388f:	std    
  413890:	inc    edi
  413891:	pop    es
  413892:	and    DWORD PTR [ecx+eiz*4],eax
  413895:	stc    
  413896:	enter  0xb007,0xff
  41389a:	fiadd  WORD PTR [eax+0xfec18f5]
  4138a0:	inc    edx
  4138a1:	test   al,0xcd
  4138a3:	(bad)  
  4138a4:	stc    
  4138a5:	mov    bh,0xea
  4138a7:	pop    ecx
  4138a8:	add    al,0xb7
  4138aa:	sub    ebp,ebx
  4138ac:	je     0x413851
  4138ae:	out    0xfe,eax
  4138b0:	xor    ah,ch
  4138b2:	mov    ds:0xe91977b9,al
  4138b7:	sub    dh,BYTE PTR [esi-0x2a]
  4138ba:	das    
  4138bb:	nop
  4138bc:	mov    dh,0x2b
  4138be:	cmp    BYTE PTR [edx+eax*1+0x2c],dl
  4138c2:	std    
  4138c3:	pop    ebx
  4138c4:	sub    ebp,DWORD PTR [ecx]
  4138c6:	idiv   BYTE PTR [esi+0x1c]
  4138c9:	fstp   QWORD PTR [ecx+0x28]
  4138cc:	mov    ds:0xf1de1a2b,eax
  4138d1:	lods   al,BYTE PTR ds:[esi]
  4138d2:	adc    bl,BYTE PTR [edx]
  4138d4:	in     eax,dx
  4138d5:	(bad)  
  4138d6:	es call 0xd089:0xfce45a6b
  4138de:	push   0x96a51d7b
  4138e3:	and    BYTE PTR [eax-0x12],bh
  4138e6:	pop    eax
  4138e7:	ja     0x4138f4
  4138e9:	das    
  4138ea:	test   al,0x2c
  4138ec:	adc    al,0x70
  4138ee:	mov    bh,0x2d
  4138f0:	bound  edi,QWORD PTR [ecx]
  4138f2:	fs push ds
  4138f4:	jne    0x413914
  4138f6:	fidivr WORD PTR [ecx+0x322011f8]
  4138fc:	clc    
  4138fd:	adc    DWORD PTR [edx],edx
  4138ff:	cmc    
  413900:	test   al,0x70
  413902:	cmp    ch,BYTE PTR [esi]
  413904:	sub    dl,BYTE PTR [ecx+0x5e]
  413907:	test   esp,edi
  413909:	xor    DWORD PTR [edi-0x5bd505da],edi
  41390f:	in     al,0x72
  413911:	push   eax
  413912:	sbb    eax,0xd60b5beb
  413917:	pop    ebp
  413918:	sub    al,BYTE PTR [eax-0x33261be9]
  41391e:	in     eax,dx
  41391f:	inc    esi
  413920:	retf   
  413921:	das    
  413922:	sbb    al,0x57
  413924:	call   0xbc81:0xdb338ffb
  41392b:	js     0x413940
  41392d:	fistp  WORD PTR [edi]
  41392f:	dec    esp
  413930:	retf   0x3d34
  413933:	ins    BYTE PTR es:[edi],dx
  413934:	or     DWORD PTR [ecx],ecx
  413936:	test   DWORD PTR [ecx-0x3a],ecx
  413939:	mov    ds:0x413489e4,al
  41393e:	add    ch,BYTE PTR [ecx+eax*4-0x62]
  413942:	push   ecx
  413943:	adc    eax,0xa02aa2f3
  413948:	jbe    0x413970
  41394a:	or     bh,BYTE PTR ds:0x79839fe2
  413950:	push   0xffffffa2
  413952:	jle    0x4138ff
  413954:	sar    BYTE PTR [edx-0x62275172],1
  41395a:	xor    eax,0x65939ea
  41395f:	jne    0x4138ec
  413961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413962:	lods   eax,DWORD PTR ds:[esi]
  413963:	ds js  0x4139a1
  413966:	xor    esi,edi
  413968:	ss aaa 
  41396a:	(bad)  
  41396b:	sbb    al,0x7
  41396d:	loope  0x413926
  41396f:	mov    esi,0xca49a101
  413974:	cli    
  413975:	call   esi
  413977:	shl    BYTE PTR [eax-0x72],0x5c
  41397b:	sbb    al,0x8b
  41397d:	adc    ah,BYTE PTR [esi+esi*2+0x7f06896c]
  413984:	std    
  413985:	adc    ecx,DWORD PTR [edi+0xcd3471]
  41398b:	and    DWORD PTR [ebp+0x73190096],esp
  413991:	sub    DWORD PTR [edi-0x1e],ecx
  413994:	mov    WORD PTR [ebp-0x79ecde3f],es
  41399a:	mov    cl,0xdb
  41399c:	xor    al,0x35
  41399e:	push   ss
  41399f:	jns    0x413949
  4139a1:	jle    0x4139f6
  4139a3:	nop    ebx
  4139a6:	push   0xffffffe9
  4139a8:	and    DWORD PTR [edx-0x5c],esp
  4139ab:	xchg   ecx,eax
  4139ac:	out    dx,al
  4139ad:	mov    al,0x6
  4139af:	pushf  
  4139b0:	in     eax,0xfa
  4139b2:	cmp    ebx,ebx
  4139b4:	scas   eax,DWORD PTR es:[edi]
  4139b5:	sub    BYTE PTR [edi],ch
  4139b7:	fstp   st(5)
  4139b9:	mov    esp,?
  4139bb:	fld    st(6)
  4139bd:	pop    ebx
  4139be:	(bad)  
  4139bf:	sub    bh,BYTE PTR [edi+0x2d]
  4139c2:	sub    DWORD PTR [eax+0x58],0x7fa26672
  4139c9:	sub    al,0x27
  4139cb:	in     al,dx
  4139cc:	jl     0x41394e
  4139ce:	ins    BYTE PTR es:[edi],dx
  4139cf:	in     al,0xeb
  4139d1:	adc    eax,0x21e0dce4
  4139d6:	aas    
  4139d7:	ror    ah,cl
  4139d9:	test   BYTE PTR [edx-0x3e8a1106],ch
  4139df:	cs sub al,0xd1
  4139e2:	loop   0x413a20
  4139e4:	stos   DWORD PTR es:[edi],eax
  4139e5:	sub    BYTE PTR [ebx-0x76],dh
  4139e8:	loope  0x413a10
  4139ea:	push   ebx
  4139eb:	mov    ah,0x4c
  4139ed:	(bad)  
  4139ef:	sub    DWORD PTR [esi-0x4a4a1c75],ebx
  4139f5:	sub    al,0x1f
  4139f7:	mov    esp,0x197265d0
  4139fc:	and    DWORD PTR ds:0x1cf546a3,esp
  413a02:	mov    DWORD PTR [edi-0x75],0xc9441fee
  413a09:	jb     0x413a1e
  413a0b:	test   al,0xa1
  413a0d:	dec    esi
  413a0e:	pop    edi
  413a0f:	sub    BYTE PTR [ecx],dl
  413a11:	adc    dh,dl
  413a13:	jle    0x4139fa
  413a15:	ins    BYTE PTR es:[edi],dx
  413a16:	jecxz  0x413a41
  413a18:	mov    bh,0x3d
  413a1a:	push   cs
  413a1b:	ret    0x9be3
  413a1e:	jbe    0x4139c8
  413a20:	mov    ecx,0xe413a4c1
  413a25:	cmc    
  413a26:	sbb    BYTE PTR ds:0xfd27a5dc,bh
  413a2c:	(bad)  
  413a2d:	mov    bh,0xcc
  413a2f:	pushf  
  413a30:	jo     0x4139f7
  413a32:	cmp    BYTE PTR [ebx],dl
  413a34:	fistp  QWORD PTR [edx]
  413a36:	push   cs
  413a37:	aad    0x45
  413a39:	imul   ecx,edi,0x74b058f4
  413a3f:	lahf   
  413a40:	fdiv   QWORD PTR ds:[ebp-0x6c]
  413a44:	not    DWORD PTR [eax+eiz*4+0xc]
  413a48:	xor    al,BYTE PTR [eax+0x5a]
  413a4b:	dec    edx
  413a4c:	push   ds
  413a4d:	popa   
  413a4e:	aad    0x4c
  413a50:	xor    ah,BYTE PTR [esi+0x3d95c71b]
  413a56:	pop    esp
  413a57:	(bad)  
  413a58:	xor    DWORD PTR [ebp-0x525e663d],edi
  413a5e:	mov    dl,0x41
  413a60:	push   edi
  413a61:	jns    0x413a16
  413a63:	pop    edi
  413a64:	sub    BYTE PTR [ebp+0x5a],ch
  413a67:	jle    0x413ac6
  413a69:	dec    ecx
  413a6a:	lods   al,BYTE PTR ds:[esi]
  413a6b:	arpl   WORD PTR [ebp-0xf],bx
  413a6e:	mov    eax,ds:0xe73c1e0e
  413a73:	call   0x4b134c10
  413a78:	and    bh,BYTE PTR [ebx+0x5b]
  413a7b:	and    eax,0x65714b38
  413a80:	mov    dh,BYTE PTR [ebx+0x6a10e890]
  413a86:	push   esi
  413a87:	adc    BYTE PTR [edx],0x7c
  413a8a:	add    al,0x1d
  413a8c:	arpl   WORD PTR [edx-0x4e],bp
  413a8f:	out    dx,al
  413a90:	in     al,dx
  413a91:	xor    BYTE PTR [ecx+0x34],bl
  413a94:	sahf   
  413a95:	out    dx,eax
  413a96:	mov    al,ds:0xca34e69f
  413a9b:	jne    0x413a33
  413a9d:	sub    edi,DWORD PTR [ebx]
  413a9f:	sbb    cl,BYTE PTR [ecx]
  413aa1:	fist   WORD PTR fs:0xda53e851
  413aa8:	xchg   esp,eax
  413aa9:	repz retf 0xf81f
  413aad:	mov    ah,0x62
  413aaf:	sbb    edi,DWORD PTR [esi]
  413ab1:	iret   
  413ab2:	xchg   BYTE PTR [esi+0x786526c1],cl
  413ab8:	pop    esp
  413ab9:	dec    ecx
  413aba:	daa    
  413abb:	dec    ebx
  413abc:	inc    eax
  413abd:	iret   
  413abe:	adc    bl,dh
  413ac0:	fisub  DWORD PTR [ebp-0x5d]
  413ac3:	call   0xcafb7096
  413ac8:	inc    eax
  413ac9:	mov    ebx,0xfd3042fa
  413ace:	lods   al,BYTE PTR ds:[esi]
  413acf:	xchg   ebx,eax
  413ad0:	retf   
  413ad1:	clc    
  413ad2:	loop   0x413a5d
  413ad4:	xor    eax,0x5dabb65
  413ad9:	xchg   esp,eax
  413ada:	ss out dx,eax
  413adc:	imul   ecx,DWORD PTR [edx-0x780fa6f2],0xd887460a
  413ae6:	pop    ss
  413ae7:	pushf  
  413ae8:	add    BYTE PTR [ebp+edi*2+0x12],dl
  413aec:	push   si
  413aee:	mov    edi,ds
  413af0:	add    eax,0xec9744b7
  413af5:	mov    WORD PTR [ebp+eiz*8-0x32],gs
  413af9:	ins    DWORD PTR es:[edi],dx
  413afa:	scas   eax,DWORD PTR es:[edi]
  413afb:	xchg   edx,eax
  413afc:	and    ch,dh
  413afe:	icebp  
  413aff:	sub    DWORD PTR [edx+0x12fb139e],edx
  413b05:	jg     0x413abe
  413b07:	sbb    edi,DWORD PTR [ebp+0x72e898bb]
  413b0d:	fcomip st,st(3)
  413b0f:	mov    ebp,0x4f06ae42
  413b14:	pop    esp
  413b15:	inc    edx
  413b16:	out    dx,eax
  413b17:	(bad)  
  413b18:	das    
  413b19:	les    eax,FWORD PTR [edi]
  413b1b:	or     dl,BYTE PTR ds:0x38a11b01
  413b21:	das    
  413b22:	pop    edi
  413b23:	mov    ebp,0x2dc8a1ed
  413b28:	xchg   ecx,eax
  413b29:	adc    eax,0xbe791013
  413b2e:	dec    eax
  413b2f:	ret    0xb3fa
  413b32:	lods   al,BYTE PTR ds:[esi]
  413b33:	xlat   BYTE PTR ds:[ebx]
  413b34:	in     eax,0x89
  413b36:	data16 lahf 
  413b38:	mov    BYTE PTR [ecx-0x8],ch
  413b3b:	ja     0x413ba9
  413b3d:	sub    esp,DWORD PTR [esi-0x79]
  413b40:	das    
  413b41:	push   eax
  413b42:	popa   
  413b43:	mov    esp,eax
  413b45:	xor    bl,dh
  413b47:	(bad)  
  413b48:	xchg   DWORD PTR [ecx],edi
  413b4a:	jle    0x413b90
  413b4c:	bound  ecx,QWORD PTR [eax-0x4cbe410c]
  413b52:	mov    DWORD PTR [ebp+0x2bef77fe],esp
  413b58:	jecxz  0x413b7a
  413b5a:	push   esi
  413b5b:	shl    DWORD PTR [esi-0x519e363d],cl
  413b61:	xor    DWORD PTR [eax-0x6c],esp
  413b64:	or     DWORD PTR [eax],eax
  413b66:	(bad)  
  413b68:	cmp    DWORD PTR [eax],ecx
  413b6a:	popa   
  413b6b:	scas   al,BYTE PTR es:[edi]
  413b6c:	pop    ds
  413b6d:	daa    
  413b6e:	lods   al,BYTE PTR ds:[esi]
  413b6f:	pop    ds
  413b70:	pop    ebx
  413b71:	add    ecx,DWORD PTR [edx+ebp*4+0x6d]
  413b75:	sbb    eax,DWORD PTR [ecx]
  413b77:	jmp    0x413bb6
  413b79:	inc    ebp
  413b7a:	mov    ds:0xa4c6494e,al
  413b7f:	cmp    dh,BYTE PTR [edi+0x65]
  413b82:	hlt    
  413b83:	imul   ebp,DWORD PTR [ecx+esi*4-0x10a0dc96],0x7f
  413b8b:	sti    
  413b8c:	test   BYTE PTR [edx*1+0x4f8153c7],dh
  413b93:	(bad)  
  413b94:	inc    eax
  413b95:	push   esi
  413b96:	lea    esp,[ebx+eiz*8+0x5f]
  413b9a:	sbb    bh,ah
  413b9c:	jle    0x413bac
  413b9e:	lods   eax,DWORD PTR ds:[esi]
  413b9f:	push   ecx
  413ba0:	fdivrp st(3),st
  413ba2:	adc    al,0x77
  413ba4:	out    0xfc,al
  413ba6:	push   cs
  413ba7:	cwde   
  413ba8:	xchg   ebx,eax
  413ba9:	sbb    ecx,DWORD PTR [eax-0x311291e5]
  413baf:	xor    esi,ebp
  413bb1:	lahf   
  413bb2:	test   al,0xd5
  413bb4:	cmc    
  413bb5:	imul   esp,DWORD PTR [ebp+0x3c1e5733],0x2b
  413bbc:	loop   0x413c26
  413bbe:	dec    eax
  413bbf:	jae    0x413b48
  413bc1:	jb     0x413bcc
  413bc3:	jmp    0x35c7:0x713ebc7c
  413bca:	or     eax,0x4a9a91dc
  413bcf:	iret   
  413bd0:	adc    BYTE PTR [eax+0x4c6a661d],al
  413bd6:	adc    BYTE PTR [edx],dl
  413bd8:	daa    
  413bd9:	dec    ecx
  413bda:	add    esi,DWORD PTR [ebx]
  413bdc:	cli    
  413bdd:	iret   
  413bde:	sbb    eax,0x5a0804c9
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	sub    bl,0x7e
  413d47:	pop    edi
  413d48:	inc    eax
  413d49:	sub    dh,cl
  413d4b:	inc    eax
  413d4c:	mov    ds:0xb9020191,eax
  413d51:	jg     0x413db9
  413d53:	out    dx,eax
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
