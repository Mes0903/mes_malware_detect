
e95033b294a1e9d2004e8f5414076ca170a28e4fce16dc3478972b07f8ad9492.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1b7c6
   10800:	mov    DWORD PTR [ebp-0x10],0x1b7bc
   10807:	mov    DWORD PTR [ebp-0xc],0x1b7b4
   1080e:	mov    DWORD PTR [ebp-0x8],0x1b7aa
   10815:	mov    DWORD PTR [ebp-0x4],0x1b7a0
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x724bc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1b79e
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    edi,edi
   10984:	push   ebp
   10985:	mov    ebp,esp
   10987:	push   esi
   10988:	xor    esi,esi
   1098a:	xor    edx,edx
   1098c:	cmp    DWORD PTR [ebp+0xc],esi
   1098f:	je     0x109ac
   10991:	mov    eax,DWORD PTR [ebp+0x8]
   10994:	mov    ecx,DWORD PTR [ebp+0x10]
   10997:	mov    cl,BYTE PTR [edx+ecx*1]
   1099a:	add    eax,esi
   1099c:	xor    BYTE PTR [eax],cl
   1099e:	lea    eax,[edx+0x1]
   109a1:	xor    edx,edx
   109a3:	div    DWORD PTR [ebp+0x14]
   109a6:	inc    esi
   109a7:	cmp    esi,DWORD PTR [ebp+0xc]
   109aa:	jne    0x10991
   109ac:	pop    esi
   109ad:	pop    ebp
   109ae:	ret    0x10
   109b1:	int3   
   109b2:	int3   
   109b3:	int3   
   109b4:	int3   
   109b5:	int3   
   109b6:	mov    edi,edi
   109b8:	push   ebp
   109b9:	mov    ebp,esp
   109bb:	mov    ecx,DWORD PTR [ebp+0x8]
   109be:	mov    eax,ecx
   109c0:	lea    edx,[eax+0x2]
   109c3:	push   esi
   109c4:	mov    si,WORD PTR [eax]
   109c7:	inc    eax
   109c8:	inc    eax
   109c9:	test   si,si
   109cc:	jne    0x109c4
   109ce:	sub    eax,edx
   109d0:	sar    eax,1
   109d2:	cmp    eax,0xc
   109d5:	jae    0x109de
   109d7:	xor    al,al
   109d9:	jmp    0x10aac
   109de:	lea    eax,[ecx+eax*2-0x18]
   109e2:	movzx  ecx,WORD PTR [eax]
   109e5:	cmp    cx,0x69
   109e9:	je     0x109f1
   109eb:	cmp    cx,0x49
   109ef:	jne    0x109d7
   109f1:	movzx  ecx,WORD PTR [eax+0x2]
   109f5:	push   0x45
   109f7:	pop    esi
   109f8:	push   0x65
   109fa:	pop    edx
   109fb:	cmp    cx,dx
   109fe:	je     0x10a05
   10a00:	cmp    cx,si
   10a03:	jne    0x109d7
   10a05:	movzx  ecx,WORD PTR [eax+0x4]
   10a09:	cmp    cx,0x78
   10a0d:	je     0x10a15
   10a0f:	cmp    cx,0x58
   10a13:	jne    0x109d7
   10a15:	movzx  ecx,WORD PTR [eax+0x6]
   10a19:	cmp    cx,0x70
   10a1d:	je     0x10a25
   10a1f:	cmp    cx,0x50
   10a23:	jne    0x109d7
   10a25:	movzx  ecx,WORD PTR [eax+0x8]
   10a29:	cmp    cx,0x6c
   10a2d:	je     0x10a35
   10a2f:	cmp    cx,0x4c
   10a33:	jne    0x109d7
   10a35:	movzx  ecx,WORD PTR [eax+0xa]
   10a39:	cmp    cx,0x6f
   10a3d:	je     0x10a45
   10a3f:	cmp    cx,0x4f
   10a43:	jne    0x109d7
   10a45:	movzx  ecx,WORD PTR [eax+0xc]
   10a49:	cmp    cx,0x72
   10a4d:	je     0x10a55
   10a4f:	cmp    cx,0x52
   10a53:	jne    0x109d7
   10a55:	movzx  ecx,WORD PTR [eax+0xe]
   10a59:	cmp    cx,dx
   10a5c:	je     0x10a67
   10a5e:	cmp    cx,si
   10a61:	jne    0x109d7
   10a67:	cmp    WORD PTR [eax+0x10],0x2e
   10a6c:	jne    0x109d7
   10a72:	movzx  ecx,WORD PTR [eax+0x12]
   10a76:	cmp    cx,dx
   10a79:	je     0x10a84
   10a7b:	cmp    cx,si
   10a7e:	jne    0x109d7
   10a84:	movzx  ecx,WORD PTR [eax+0x14]
   10a88:	cmp    cx,0x78
   10a8c:	je     0x10a98
   10a8e:	cmp    cx,0x58
   10a92:	jne    0x109d7
   10a98:	movzx  eax,WORD PTR [eax+0x16]
   10a9c:	cmp    ax,dx
   10a9f:	je     0x10aaa
   10aa1:	cmp    ax,si
   10aa4:	jne    0x109d7
   10aaa:	mov    al,0x1
   10aac:	pop    esi
   10aad:	pop    ebp
   10aae:	ret    0x4
   10ab1:	int3   
   10ab2:	int3   
   10ab3:	int3   
   10ab4:	int3   
   10ab5:	int3   
   10ab6:	mov    edi,edi
   10ab8:	push   ebp
   10ab9:	mov    ebp,esp
   10abb:	mov    ecx,DWORD PTR [ebp+0x8]
   10abe:	mov    eax,ecx
   10ac0:	lea    edx,[eax+0x2]
   10ac3:	push   esi
   10ac4:	mov    si,WORD PTR [eax]
   10ac7:	inc    eax
   10ac8:	inc    eax
   10ac9:	test   si,si
   10acc:	jne    0x10ac4
   10ace:	sub    eax,edx
   10ad0:	sar    eax,1
   10ad2:	pop    esi
   10ad3:	cmp    eax,0xb
   10ad6:	jae    0x10adf
   10ad8:	xor    al,al
   10ada:	jmp    0x10b9b
   10adf:	lea    eax,[ecx+eax*2-0x16]
   10ae3:	movzx  ecx,WORD PTR [eax]
   10ae6:	cmp    cx,0x66
   10aea:	je     0x10af2
   10aec:	cmp    cx,0x46
   10af0:	jne    0x10ad8
   10af2:	movzx  ecx,WORD PTR [eax+0x2]
   10af6:	cmp    cx,0x69
   10afa:	je     0x10b02
   10afc:	cmp    cx,0x49
   10b00:	jne    0x10ad8
   10b02:	movzx  ecx,WORD PTR [eax+0x4]
   10b06:	cmp    cx,0x72
   10b0a:	je     0x10b12
   10b0c:	cmp    cx,0x52
   10b10:	jne    0x10ad8
   10b12:	movzx  ecx,WORD PTR [eax+0x6]
   10b16:	cmp    cx,0x65
   10b1a:	je     0x10b22
   10b1c:	cmp    cx,0x45
   10b20:	jne    0x10ad8
   10b22:	movzx  ecx,WORD PTR [eax+0x8]
   10b26:	cmp    cx,0x66
   10b2a:	je     0x10b32
   10b2c:	cmp    cx,0x46
   10b30:	jne    0x10ad8
   10b32:	movzx  ecx,WORD PTR [eax+0xa]
   10b36:	cmp    cx,0x6f
   10b3a:	je     0x10b42
   10b3c:	cmp    cx,0x4f
   10b40:	jne    0x10ad8
   10b42:	movzx  ecx,WORD PTR [eax+0xc]
   10b46:	cmp    cx,0x78
   10b4a:	je     0x10b52
   10b4c:	cmp    cx,0x58
   10b50:	jne    0x10ad8
   10b52:	cmp    WORD PTR [eax+0xe],0x2e
   10b57:	jne    0x10ad8
   10b5d:	movzx  ecx,WORD PTR [eax+0x10]
   10b61:	cmp    cx,0x65
   10b65:	je     0x10b71
   10b67:	cmp    cx,0x45
   10b6b:	jne    0x10ad8
   10b71:	movzx  ecx,WORD PTR [eax+0x12]
   10b75:	cmp    cx,0x78
   10b79:	je     0x10b85
   10b7b:	cmp    cx,0x58
   10b7f:	jne    0x10ad8
   10b85:	movzx  eax,WORD PTR [eax+0x14]
   10b89:	cmp    ax,0x65
   10b8d:	je     0x10b99
   10b8f:	cmp    ax,0x45
   10b93:	jne    0x10ad8
   10b99:	mov    al,0x1
   10b9b:	pop    ebp
   10b9c:	ret    0x4
   10b9f:	int3   
   10ba0:	int3   
   10ba1:	int3   
   10ba2:	int3   
   10ba3:	int3   
   10ba4:	mov    edi,edi
   10ba6:	push   ebp
   10ba7:	mov    ebp,esp
   10ba9:	mov    ecx,DWORD PTR [ebp+0x8]
   10bac:	mov    eax,ecx
   10bae:	lea    edx,[eax+0x2]
   10bb1:	push   esi
   10bb2:	mov    si,WORD PTR [eax]
   10bb5:	inc    eax
   10bb6:	inc    eax
   10bb7:	test   si,si
   10bba:	jne    0x10bb2
   10bbc:	sub    eax,edx
   10bbe:	sar    eax,1
   10bc0:	pop    esi
   10bc1:	cmp    eax,0xa
   10bc4:	jae    0x10bcd
   10bc6:	xor    al,al
   10bc8:	jmp    0x10c75
   10bcd:	lea    eax,[ecx+eax*2-0x14]
   10bd1:	movzx  ecx,WORD PTR [eax]
   10bd4:	cmp    cx,0x63
   10bd8:	je     0x10be0
   10bda:	cmp    cx,0x43
   10bde:	jne    0x10bc6
   10be0:	movzx  ecx,WORD PTR [eax+0x2]
   10be4:	cmp    cx,0x68
   10be8:	je     0x10bf0
   10bea:	cmp    cx,0x48
   10bee:	jne    0x10bc6
   10bf0:	movzx  ecx,WORD PTR [eax+0x4]
   10bf4:	cmp    cx,0x72
   10bf8:	je     0x10c00
   10bfa:	cmp    cx,0x52
   10bfe:	jne    0x10bc6
   10c00:	movzx  ecx,WORD PTR [eax+0x6]
   10c04:	cmp    cx,0x6f
   10c08:	je     0x10c10
   10c0a:	cmp    cx,0x4f
   10c0e:	jne    0x10bc6
   10c10:	movzx  ecx,WORD PTR [eax+0x8]
   10c14:	cmp    cx,0x6d
   10c18:	je     0x10c20
   10c1a:	cmp    cx,0x4d
   10c1e:	jne    0x10bc6
   10c20:	movzx  ecx,WORD PTR [eax+0xa]
   10c24:	cmp    cx,0x65
   10c28:	je     0x10c30
   10c2a:	cmp    cx,0x45
   10c2e:	jne    0x10bc6
   10c30:	cmp    WORD PTR [eax+0xc],0x2e
   10c35:	jne    0x10bc6
   10c37:	movzx  ecx,WORD PTR [eax+0xe]
   10c3b:	cmp    cx,0x65
   10c3f:	je     0x10c4b
   10c41:	cmp    cx,0x45
   10c45:	jne    0x10bc6
   10c4b:	movzx  ecx,WORD PTR [eax+0x10]
   10c4f:	cmp    cx,0x78
   10c53:	je     0x10c5f
   10c55:	cmp    cx,0x58
   10c59:	jne    0x10bc6
   10c5f:	movzx  eax,WORD PTR [eax+0x12]
   10c63:	cmp    ax,0x65
   10c67:	je     0x10c73
   10c69:	cmp    ax,0x45
   10c6d:	jne    0x10bc6
   10c73:	mov    al,0x1
   10c75:	pop    ebp
   10c76:	ret    0x4
   10c79:	int3   
   10c7a:	int3   
   10c7b:	int3   
   10c7c:	int3   
   10c7d:	int3   
   10c7e:	mov    edi,edi
   10c80:	push   ebp
   10c81:	mov    ebp,esp
   10c83:	mov    ecx,DWORD PTR [ebp+0x8]
   10c86:	mov    eax,ecx
   10c88:	lea    edx,[eax+0x2]
   10c8b:	push   esi
   10c8c:	mov    si,WORD PTR [eax]
   10c8f:	inc    eax
   10c90:	inc    eax
   10c91:	test   si,si
   10c94:	jne    0x10c8c
   10c96:	sub    eax,edx
   10c98:	sar    eax,1
   10c9a:	pop    esi
   10c9b:	cmp    eax,0x9
   10c9e:	jae    0x10ca7
   10ca0:	xor    al,al
   10ca2:	jmp    0x10d3b
   10ca7:	lea    eax,[ecx+eax*2-0x12]
   10cab:	movzx  ecx,WORD PTR [eax]
   10cae:	cmp    cx,0x6d
   10cb2:	je     0x10cba
   10cb4:	cmp    cx,0x4d
   10cb8:	jne    0x10ca0
   10cba:	movzx  ecx,WORD PTR [eax+0x2]
   10cbe:	cmp    cx,0x73
   10cc2:	je     0x10cca
   10cc4:	cmp    cx,0x53
   10cc8:	jne    0x10ca0
   10cca:	movzx  ecx,WORD PTR [eax+0x4]
   10cce:	cmp    cx,0x68
   10cd2:	je     0x10cda
   10cd4:	cmp    cx,0x48
   10cd8:	jne    0x10ca0
   10cda:	movzx  ecx,WORD PTR [eax+0x6]
   10cde:	cmp    cx,0x74
   10ce2:	je     0x10cea
   10ce4:	cmp    cx,0x54
   10ce8:	jne    0x10ca0
   10cea:	movzx  ecx,WORD PTR [eax+0x8]
   10cee:	cmp    cx,0x61
   10cf2:	je     0x10cfa
   10cf4:	cmp    cx,0x41
   10cf8:	jne    0x10ca0
   10cfa:	cmp    WORD PTR [eax+0xa],0x2e
   10cff:	jne    0x10ca0
   10d01:	movzx  ecx,WORD PTR [eax+0xc]
   10d05:	cmp    cx,0x65
   10d09:	je     0x10d11
   10d0b:	cmp    cx,0x45
   10d0f:	jne    0x10ca0
   10d11:	movzx  ecx,WORD PTR [eax+0xe]
   10d15:	cmp    cx,0x78
   10d19:	je     0x10d25
   10d1b:	cmp    cx,0x58
   10d1f:	jne    0x10ca0
   10d25:	movzx  eax,WORD PTR [eax+0x10]
   10d29:	cmp    ax,0x65
   10d2d:	je     0x10d39
   10d2f:	cmp    ax,0x45
   10d33:	jne    0x10ca0
   10d39:	mov    al,0x1
   10d3b:	pop    ebp
   10d3c:	ret    0x4
   10d3f:	int3   
   10d40:	int3   
   10d41:	int3   
   10d42:	int3   
   10d43:	int3   
   10d44:	mov    edi,edi
   10d46:	push   ebp
   10d47:	mov    ebp,esp
   10d49:	push   esi
   10d4a:	mov    esi,DWORD PTR [ebp+0x8]
   10d4d:	push   esi
   10d4e:	call   0x109b6
   10d53:	test   al,al
   10d55:	je     0x10d5c
   10d57:	xor    eax,eax
   10d59:	inc    eax
   10d5a:	jmp    0x10d89
   10d5c:	push   esi
   10d5d:	call   0x10ab6
   10d62:	test   al,al
   10d64:	je     0x10d6b
   10d66:	push   0x2
   10d68:	pop    eax
   10d69:	jmp    0x10d89
   10d6b:	push   esi
   10d6c:	call   0x10ba4
   10d71:	test   al,al
   10d73:	je     0x10d79
   10d75:	push   0x3
   10d77:	jmp    0x10d68
   10d79:	push   esi
   10d7a:	call   0x10c7e
   10d7f:	movzx  eax,al
   10d82:	neg    eax
   10d84:	sbb    eax,eax
   10d86:	and    eax,0x4
   10d89:	pop    esi
   10d8a:	pop    ebp
   10d8b:	ret    0x4
   10d8e:	int3   
   10d8f:	int3   
   10d90:	int3   
   10d91:	int3   
   10d92:	int3   
   10d93:	int3   
   10d94:	mov    edi,edi
   10d96:	push   ebp
   10d97:	mov    ebp,esp
   10d99:	mov    eax,DWORD PTR [ebp+0x8]
   10d9c:	mov    edx,DWORD PTR [ebp+0xc]
   10d9f:	push   esi
   10da0:	xor    esi,esi
   10da2:	jmp    0x10dc7
   10da4:	mov    ecx,eax
   10da6:	and    ecx,0x1
   10da9:	or     ecx,esi
   10dab:	push   esi
   10dac:	jne    0x10db9
   10dae:	push   0x2
   10db0:	push   edx
   10db1:	push   eax
   10db2:	call   0x1b3dc
   10db7:	jmp    0x10dc7
   10db9:	push   0x3
   10dbb:	push   edx
   10dbc:	push   eax
   10dbd:	call   0x1b3d0
   10dc2:	add    eax,0x1
   10dc5:	adc    edx,esi
   10dc7:	cmp    eax,0x4
   10dca:	jne    0x10da4
   10dcc:	cmp    edx,esi
   10dce:	jne    0x10da4
   10dd0:	pop    esi
   10dd1:	pop    ebp
   10dd2:	ret    0x8
   10dd5:	int3   
   10dd6:	int3   
   10dd7:	int3   
   10dd8:	int3   
   10dd9:	int3   
   10dda:	mov    edi,edi
   10ddc:	push   ebp
   10ddd:	mov    ebp,esp
   10ddf:	mov    eax,DWORD PTR [ebp+0x8]
   10de2:	mov    edx,DWORD PTR ds:0x730a0
   10de8:	jmp    0x10dec
   10dea:	mov    eax,ecx
   10dec:	mov    ecx,DWORD PTR [eax+0x8]
   10def:	cmp    ecx,edx
   10df1:	jne    0x10dea
   10df3:	pop    ebp
   10df4:	ret    0x4
   10df7:	int3   
   10df8:	int3   
   10df9:	int3   
   10dfa:	int3   
   10dfb:	int3   
   10dfc:	mov    edi,edi
   10dfe:	push   ebp
   10dff:	mov    ebp,esp
   10e01:	mov    eax,DWORD PTR [ebp+0x8]
   10e04:	mov    edx,DWORD PTR ds:0x730a0
   10e0a:	jmp    0x10e0e
   10e0c:	mov    eax,ecx
   10e0e:	mov    ecx,DWORD PTR [eax]
   10e10:	cmp    ecx,edx
   10e12:	jne    0x10e0c
   10e14:	pop    ebp
   10e15:	ret    0x4
   10e18:	int3   
   10e19:	int3   
   10e1a:	int3   
   10e1b:	int3   
   10e1c:	int3   
   10e1d:	int3   
   10e1e:	mov    edi,edi
   10e20:	push   esi
   10e21:	mov    esi,ecx
   10e23:	mov    ecx,DWORD PTR [esi]
   10e25:	cmp    DWORD PTR [ecx+0x14],0x0
   10e29:	jne    0x10e38
   10e2b:	mov    eax,DWORD PTR [ecx+0x4]
   10e2e:	cmp    DWORD PTR [eax+0x4],ecx
   10e31:	jne    0x10e38
   10e33:	mov    eax,DWORD PTR [ecx+0x8]
   10e36:	jmp    0x10e55
   10e38:	mov    eax,DWORD PTR [ecx]
   10e3a:	cmp    eax,DWORD PTR ds:0x730a0
   10e40:	je     0x10e4e
   10e42:	push   eax
   10e43:	call   0x10dda
   10e48:	jmp    0x10e55
   10e4a:	mov    DWORD PTR [esi],eax
   10e4c:	mov    ecx,eax
   10e4e:	mov    eax,DWORD PTR [ecx+0x4]
   10e51:	cmp    ecx,DWORD PTR [eax]
   10e53:	je     0x10e4a
   10e55:	mov    DWORD PTR [esi],eax
   10e57:	pop    esi
   10e58:	ret    
   10e59:	int3   
   10e5a:	int3   
   10e5b:	int3   
   10e5c:	int3   
   10e5d:	int3   
   10e5e:	mov    edi,edi
   10e60:	push   esi
   10e61:	mov    esi,ecx
   10e63:	mov    ecx,DWORD PTR [esi]
   10e65:	mov    eax,DWORD PTR [ecx+0x8]
   10e68:	cmp    eax,DWORD PTR ds:0x730a0
   10e6e:	je     0x10e7c
   10e70:	push   eax
   10e71:	call   0x10dfc
   10e76:	jmp    0x10e8b
   10e78:	mov    DWORD PTR [esi],eax
   10e7a:	mov    ecx,eax
   10e7c:	mov    eax,DWORD PTR [ecx+0x4]
   10e7f:	cmp    ecx,DWORD PTR [eax+0x8]
   10e82:	je     0x10e78
   10e84:	mov    ecx,DWORD PTR [esi]
   10e86:	cmp    DWORD PTR [ecx+0x8],eax
   10e89:	je     0x10e8d
   10e8b:	mov    DWORD PTR [esi],eax
   10e8d:	pop    esi
   10e8e:	ret    
   10e8f:	int3   
   10e90:	int3   
   10e91:	int3   
   10e92:	int3   
   10e93:	int3   
   10e94:	mov    edi,edi
   10e96:	push   ebp
   10e97:	mov    ebp,esp
   10e99:	mov    edx,DWORD PTR [ebp+0x8]
   10e9c:	mov    eax,DWORD PTR [edx+0x8]
   10e9f:	push   esi
   10ea0:	mov    esi,DWORD PTR [eax]
   10ea2:	mov    DWORD PTR [edx+0x8],esi
   10ea5:	mov    esi,DWORD PTR [eax]
   10ea7:	cmp    esi,DWORD PTR ds:0x730a8
   10ead:	je     0x10eb2
   10eaf:	mov    DWORD PTR [esi+0x4],edx
   10eb2:	mov    esi,DWORD PTR [edx+0x4]
   10eb5:	mov    DWORD PTR [eax+0x4],esi
   10eb8:	mov    ecx,DWORD PTR [ecx+0x4]
   10ebb:	pop    esi
   10ebc:	cmp    edx,DWORD PTR [ecx+0x4]
   10ebf:	jne    0x10ec6
   10ec1:	mov    DWORD PTR [ecx+0x4],eax
   10ec4:	jmp    0x10ed4
   10ec6:	mov    ecx,DWORD PTR [edx+0x4]
   10ec9:	cmp    edx,DWORD PTR [ecx]
   10ecb:	jne    0x10ed1
   10ecd:	mov    DWORD PTR [ecx],eax
   10ecf:	jmp    0x10ed4
   10ed1:	mov    DWORD PTR [ecx+0x8],eax
   10ed4:	mov    DWORD PTR [eax],edx
   10ed6:	mov    DWORD PTR [edx+0x4],eax
   10ed9:	pop    ebp
   10eda:	ret    0x4
   10edd:	int3   
   10ede:	int3   
   10edf:	int3   
   10ee0:	int3   
   10ee1:	int3   
   10ee2:	mov    edi,edi
   10ee4:	push   ebp
   10ee5:	mov    ebp,esp
   10ee7:	mov    eax,DWORD PTR [ebp+0x8]
   10eea:	mov    edx,DWORD PTR ds:0x730a8
   10ef0:	jmp    0x10ef4
   10ef2:	mov    eax,ecx
   10ef4:	mov    ecx,DWORD PTR [eax+0x8]
   10ef7:	cmp    ecx,edx
   10ef9:	jne    0x10ef2
   10efb:	pop    ebp
   10efc:	ret    0x4
   10eff:	int3   
   10f00:	int3   
   10f01:	int3   
   10f02:	int3   
   10f03:	int3   
   10f04:	mov    edi,edi
   10f06:	push   ebp
   10f07:	mov    ebp,esp
   10f09:	mov    edx,DWORD PTR [ebp+0x8]
   10f0c:	mov    eax,DWORD PTR [edx]
   10f0e:	push   esi
   10f0f:	mov    esi,DWORD PTR [eax+0x8]
   10f12:	mov    DWORD PTR [edx],esi
   10f14:	mov    esi,DWORD PTR [eax+0x8]
   10f17:	cmp    esi,DWORD PTR ds:0x730a8
   10f1d:	je     0x10f22
   10f1f:	mov    DWORD PTR [esi+0x4],edx
   10f22:	mov    esi,DWORD PTR [edx+0x4]
   10f25:	mov    DWORD PTR [eax+0x4],esi
   10f28:	mov    ecx,DWORD PTR [ecx+0x4]
   10f2b:	pop    esi
   10f2c:	cmp    edx,DWORD PTR [ecx+0x4]
   10f2f:	jne    0x10f36
   10f31:	mov    DWORD PTR [ecx+0x4],eax
   10f34:	jmp    0x10f45
   10f36:	mov    ecx,DWORD PTR [edx+0x4]
   10f39:	cmp    edx,DWORD PTR [ecx+0x8]
   10f3c:	jne    0x10f43
   10f3e:	mov    DWORD PTR [ecx+0x8],eax
   10f41:	jmp    0x10f45
   10f43:	mov    DWORD PTR [ecx],eax
   10f45:	mov    DWORD PTR [eax+0x8],edx
   10f48:	mov    DWORD PTR [edx+0x4],eax
   10f4b:	pop    ebp
   10f4c:	ret    0x4
   10f4f:	int3   
   10f50:	int3   
   10f51:	int3   
   10f52:	int3   
   10f53:	int3   
   10f54:	mov    edi,edi
   10f56:	push   esi
   10f57:	mov    esi,ecx
   10f59:	mov    ecx,DWORD PTR [esi]
   10f5b:	cmp    DWORD PTR [ecx+0x50],0x0
   10f5f:	jne    0x10f6e
   10f61:	mov    eax,DWORD PTR [ecx+0x4]
   10f64:	cmp    DWORD PTR [eax+0x4],ecx
   10f67:	jne    0x10f6e
   10f69:	mov    eax,DWORD PTR [ecx+0x8]
   10f6c:	jmp    0x10f8b
   10f6e:	mov    eax,DWORD PTR [ecx]
   10f70:	cmp    eax,DWORD PTR ds:0x730a8
   10f76:	je     0x10f84
   10f78:	push   eax
   10f79:	call   0x10ee2
   10f7e:	jmp    0x10f8b
   10f80:	mov    DWORD PTR [esi],eax
   10f82:	mov    ecx,eax
   10f84:	mov    eax,DWORD PTR [ecx+0x4]
   10f87:	cmp    ecx,DWORD PTR [eax]
   10f89:	je     0x10f80
   10f8b:	mov    DWORD PTR [esi],eax
   10f8d:	pop    esi
   10f8e:	ret    
   10f8f:	int3   
   10f90:	int3   
   10f91:	int3   
   10f92:	int3   
   10f93:	int3   
   10f94:	mov    edi,edi
   10f96:	push   ebp
   10f97:	mov    ebp,esp
   10f99:	mov    eax,DWORD PTR [ebp+0x8]
   10f9c:	mov    edx,DWORD PTR ds:0x730ac
   10fa2:	jmp    0x10fa6
   10fa4:	mov    eax,ecx
   10fa6:	mov    ecx,DWORD PTR [eax+0x8]
   10fa9:	cmp    ecx,edx
   10fab:	jne    0x10fa4
   10fad:	pop    ebp
   10fae:	ret    0x4
   10fb1:	int3   
   10fb2:	int3   
   10fb3:	int3   
   10fb4:	int3   
   10fb5:	int3   
   10fb6:	mov    edi,edi
   10fb8:	push   ebp
   10fb9:	mov    ebp,esp
   10fbb:	mov    eax,DWORD PTR [ebp+0x8]
   10fbe:	mov    edx,DWORD PTR ds:0x730ac
   10fc4:	jmp    0x10fc8
   10fc6:	mov    eax,ecx
   10fc8:	mov    ecx,DWORD PTR [eax]
   10fca:	cmp    ecx,edx
   10fcc:	jne    0x10fc6
   10fce:	pop    ebp
   10fcf:	ret    0x4
   10fd2:	int3   
   10fd3:	int3   
   10fd4:	int3   
   10fd5:	int3   
   10fd6:	int3   
   10fd7:	int3   
   10fd8:	mov    edi,edi
   10fda:	push   esi
   10fdb:	mov    esi,ecx
   10fdd:	mov    ecx,DWORD PTR [esi]
   10fdf:	cmp    DWORD PTR [ecx+0x1c],0x0
   10fe3:	jne    0x10ff2
   10fe5:	mov    eax,DWORD PTR [ecx+0x4]
   10fe8:	cmp    DWORD PTR [eax+0x4],ecx
   10feb:	jne    0x10ff2
   10fed:	mov    eax,DWORD PTR [ecx+0x8]
   10ff0:	jmp    0x1100f
   10ff2:	mov    eax,DWORD PTR [ecx]
   10ff4:	cmp    eax,DWORD PTR ds:0x730ac
   10ffa:	je     0x11008
   10ffc:	push   eax
   10ffd:	call   0x10f94
   11002:	jmp    0x1100f
   11004:	mov    DWORD PTR [esi],eax
   11006:	mov    ecx,eax
   11008:	mov    eax,DWORD PTR [ecx+0x4]
   1100b:	cmp    ecx,DWORD PTR [eax]
   1100d:	je     0x11004
   1100f:	mov    DWORD PTR [esi],eax
   11011:	pop    esi
   11012:	ret    
   11013:	int3   
   11014:	int3   
   11015:	int3   
   11016:	int3   
   11017:	int3   
   11018:	mov    edi,edi
   1101a:	push   ebp
   1101b:	mov    ebp,esp
   1101d:	mov    eax,DWORD PTR [ebp+0x8]
   11020:	mov    edx,DWORD PTR ds:0x730b0
   11026:	jmp    0x1102a
   11028:	mov    eax,ecx
   1102a:	mov    ecx,DWORD PTR [eax+0x8]
   1102d:	cmp    ecx,edx
   1102f:	jne    0x11028
   11031:	pop    ebp
   11032:	ret    0x4
   11035:	int3   
   11036:	int3   
   11037:	int3   
   11038:	int3   
   11039:	int3   
   1103a:	mov    edi,edi
   1103c:	push   ebp
   1103d:	mov    ebp,esp
   1103f:	mov    eax,DWORD PTR [ebp+0x8]
   11042:	mov    edx,DWORD PTR ds:0x730b0
   11048:	jmp    0x1104c
   1104a:	mov    eax,ecx
   1104c:	mov    ecx,DWORD PTR [eax]
   1104e:	cmp    ecx,edx
   11050:	jne    0x1104a
   11052:	pop    ebp
   11053:	ret    0x4
   11056:	int3   
   11057:	int3   
   11058:	int3   
   11059:	int3   
   1105a:	int3   
   1105b:	int3   
   1105c:	mov    edi,edi
   1105e:	push   esi
   1105f:	mov    esi,ecx
   11061:	mov    ecx,DWORD PTR [esi]
   11063:	cmp    DWORD PTR [ecx+0x14],0x0
   11067:	jne    0x11076
   11069:	mov    eax,DWORD PTR [ecx+0x4]
   1106c:	cmp    DWORD PTR [eax+0x4],ecx
   1106f:	jne    0x11076
   11071:	mov    eax,DWORD PTR [ecx+0x8]
   11074:	jmp    0x11093
   11076:	mov    eax,DWORD PTR [ecx]
   11078:	cmp    eax,DWORD PTR ds:0x730b0
   1107e:	je     0x1108c
   11080:	push   eax
   11081:	call   0x11018
   11086:	jmp    0x11093
   11088:	mov    DWORD PTR [esi],eax
   1108a:	mov    ecx,eax
   1108c:	mov    eax,DWORD PTR [ecx+0x4]
   1108f:	cmp    ecx,DWORD PTR [eax]
   11091:	je     0x11088
   11093:	mov    DWORD PTR [esi],eax
   11095:	pop    esi
   11096:	ret    
   11097:	int3   
   11098:	int3   
   11099:	int3   
   1109a:	int3   
   1109b:	int3   
   1109c:	mov    edi,edi
   1109e:	push   esi
   1109f:	mov    esi,ecx
   110a1:	mov    ecx,DWORD PTR [esi]
   110a3:	mov    eax,DWORD PTR [ecx+0x8]
   110a6:	cmp    eax,DWORD PTR ds:0x730ac
   110ac:	je     0x110ba
   110ae:	push   eax
   110af:	call   0x10fb6
   110b4:	jmp    0x110c9
   110b6:	mov    DWORD PTR [esi],eax
   110b8:	mov    ecx,eax
   110ba:	mov    eax,DWORD PTR [ecx+0x4]
   110bd:	cmp    ecx,DWORD PTR [eax+0x8]
   110c0:	je     0x110b6
   110c2:	mov    ecx,DWORD PTR [esi]
   110c4:	cmp    DWORD PTR [ecx+0x8],eax
   110c7:	je     0x110cb
   110c9:	mov    DWORD PTR [esi],eax
   110cb:	pop    esi
   110cc:	ret    
   110cd:	int3   
   110ce:	int3   
   110cf:	int3   
   110d0:	int3   
   110d1:	int3   
   110d2:	mov    edi,edi
   110d4:	push   esi
   110d5:	mov    esi,ecx
   110d7:	mov    ecx,DWORD PTR [esi]
   110d9:	mov    eax,DWORD PTR [ecx+0x8]
   110dc:	cmp    eax,DWORD PTR ds:0x730b0
   110e2:	je     0x110f0
   110e4:	push   eax
   110e5:	call   0x1103a
   110ea:	jmp    0x110ff
   110ec:	mov    DWORD PTR [esi],eax
   110ee:	mov    ecx,eax
   110f0:	mov    eax,DWORD PTR [ecx+0x4]
   110f3:	cmp    ecx,DWORD PTR [eax+0x8]
   110f6:	je     0x110ec
   110f8:	mov    ecx,DWORD PTR [esi]
   110fa:	cmp    DWORD PTR [ecx+0x8],eax
   110fd:	je     0x11101
   110ff:	mov    DWORD PTR [esi],eax
   11101:	pop    esi
   11102:	ret    
   11103:	int3   
   11104:	int3   
   11105:	int3   
   11106:	int3   
   11107:	int3   
   11108:	mov    edi,edi
   1110a:	push   ebp
   1110b:	mov    ebp,esp
   1110d:	mov    eax,DWORD PTR [ebp+0x8]
   11110:	mov    edx,DWORD PTR ds:0x730b8
   11116:	jmp    0x1111a
   11118:	mov    eax,ecx
   1111a:	mov    ecx,DWORD PTR [eax+0x8]
   1111d:	cmp    ecx,edx
   1111f:	jne    0x11118
   11121:	pop    ebp
   11122:	ret    0x4
   11125:	int3   
   11126:	int3   
   11127:	int3   
   11128:	int3   
   11129:	int3   
   1112a:	mov    edi,edi
   1112c:	push   ebp
   1112d:	mov    ebp,esp
   1112f:	push   ecx
   11130:	push   ecx
   11131:	mov    eax,DWORD PTR [ebp+0x8]
   11134:	mov    DWORD PTR [ebp-0x4],eax
   11137:	lea    ecx,[eax+0x2]
   1113a:	mov    dx,WORD PTR [eax]
   1113d:	inc    eax
   1113e:	inc    eax
   1113f:	test   dx,dx
   11142:	jne    0x1113a
   11144:	sub    eax,ecx
   11146:	sar    eax,1
   11148:	add    eax,eax
   1114a:	mov    WORD PTR [ebp-0x8],ax
   1114e:	mov    WORD PTR [ebp-0x6],ax
   11152:	lea    eax,[ebp-0x8]
   11155:	push   eax
   11156:	call   DWORD PTR ds:0x1ca14
   1115c:	leave  
   1115d:	ret    0x4
   11160:	int3   
   11161:	int3   
   11162:	int3   
   11163:	int3   
   11164:	int3   
   11165:	int3   
   11166:	mov    edi,edi
   11168:	push   ebp
   11169:	mov    ebp,esp
   1116b:	mov    eax,DWORD PTR [ebp+0x8]
   1116e:	test   eax,eax
   11170:	je     0x1117f
   11172:	mov    ecx,DWORD PTR [ebp+0xc]
   11175:	mov    edx,DWORD PTR [ecx]
   11177:	mov    DWORD PTR [eax],edx
   11179:	mov    ecx,DWORD PTR [ecx+0x4]
   1117c:	mov    DWORD PTR [eax+0x4],ecx
   1117f:	pop    ebp
   11180:	ret    0x8
   11183:	int3   
   11184:	int3   
   11185:	int3   
   11186:	int3   
   11187:	int3   
   11188:	test   BYTE PTR ds:0x730c0,0x1
   1118f:	jne    0x111a7
   11191:	or     DWORD PTR ds:0x730c0,0x1
   11198:	push   0x1b86c
   1119d:	call   0x1112a
   111a2:	mov    ds:0x730bc,eax
   111a7:	mov    eax,ds:0x730bc
   111ac:	ret    
   111ad:	int3   
   111ae:	int3   
   111af:	int3   
   111b0:	int3   
   111b1:	int3   
   111b2:	test   BYTE PTR ds:0x730c8,0x1
   111b9:	jne    0x111d1
   111bb:	or     DWORD PTR ds:0x730c8,0x1
   111c2:	push   0x1b888
   111c7:	call   0x1112a
   111cc:	mov    ds:0x730c4,eax
   111d1:	mov    eax,ds:0x730c4
   111d6:	ret    
   111d7:	int3   
   111d8:	int3   
   111d9:	int3   
   111da:	int3   
   111db:	int3   
   111dc:	test   BYTE PTR ds:0x730d0,0x1
   111e3:	jne    0x111fb
   111e5:	or     DWORD PTR ds:0x730d0,0x1
   111ec:	push   0x1b8b8
   111f1:	call   0x1112a
   111f6:	mov    ds:0x730cc,eax
   111fb:	mov    eax,ds:0x730cc
   11200:	ret    
   11201:	int3   
   11202:	int3   
   11203:	int3   
   11204:	int3   
   11205:	int3   
   11206:	test   BYTE PTR ds:0x730d8,0x1
   1120d:	jne    0x11225
   1120f:	or     DWORD PTR ds:0x730d8,0x1
   11216:	push   0x1b8ee
   1121b:	call   0x1112a
   11220:	mov    ds:0x730d4,eax
   11225:	mov    eax,ds:0x730d4
   1122a:	ret    
   1122b:	int3   
   1122c:	int3   
   1122d:	int3   
   1122e:	int3   
   1122f:	int3   
   11230:	test   BYTE PTR ds:0x730e0,0x1
   11237:	jne    0x1124f
   11239:	or     DWORD PTR ds:0x730e0,0x1
   11240:	push   0x1b926
   11245:	call   0x1112a
   1124a:	mov    ds:0x730dc,eax
   1124f:	mov    eax,ds:0x730dc
   11254:	ret    
   11255:	int3   
   11256:	int3   
   11257:	int3   
   11258:	int3   
   11259:	int3   
   1125a:	test   BYTE PTR ds:0x730e8,0x1
   11261:	jne    0x11279
   11263:	or     DWORD PTR ds:0x730e8,0x1
   1126a:	push   0x1b948
   1126f:	call   0x1112a
   11274:	mov    ds:0x730e4,eax
   11279:	mov    eax,ds:0x730e4
   1127e:	ret    
   1127f:	int3   
   11280:	int3   
   11281:	int3   
   11282:	int3   
   11283:	int3   
   11284:	test   BYTE PTR ds:0x730f0,0x1
   1128b:	jne    0x112a3
   1128d:	or     DWORD PTR ds:0x730f0,0x1
   11294:	push   0x1b988
   11299:	call   0x1112a
   1129e:	mov    ds:0x730ec,eax
   112a3:	mov    eax,ds:0x730ec
   112a8:	ret    
   112a9:	int3   
   112aa:	int3   
   112ab:	int3   
   112ac:	int3   
   112ad:	int3   
   112ae:	test   BYTE PTR ds:0x730f8,0x1
   112b5:	jne    0x112cd
   112b7:	or     DWORD PTR ds:0x730f8,0x1
   112be:	push   0x1b99e
   112c3:	call   0x1112a
   112c8:	mov    ds:0x730f4,eax
   112cd:	mov    eax,ds:0x730f4
   112d2:	ret    
   112d3:	int3   
   112d4:	int3   
   112d5:	int3   
   112d6:	int3   
   112d7:	int3   
   112d8:	test   BYTE PTR ds:0x73100,0x1
   112df:	jne    0x112f7
   112e1:	or     DWORD PTR ds:0x73100,0x1
   112e8:	push   0x1b9d2
   112ed:	call   0x1112a
   112f2:	mov    ds:0x730fc,eax
   112f7:	mov    eax,ds:0x730fc
   112fc:	ret    
   112fd:	int3   
   112fe:	int3   
   112ff:	int3   
   11300:	int3   
   11301:	int3   
   11302:	test   BYTE PTR ds:0x73108,0x1
   11309:	jne    0x11321
   1130b:	or     DWORD PTR ds:0x73108,0x1
   11312:	push   0x1ba04
   11317:	call   0x1112a
   1131c:	mov    ds:0x73104,eax
   11321:	mov    eax,ds:0x73104
   11326:	ret    
   11327:	int3   
   11328:	int3   
   11329:	int3   
   1132a:	int3   
   1132b:	int3   
   1132c:	test   BYTE PTR ds:0x73110,0x1
   11333:	jne    0x1134b
   11335:	or     DWORD PTR ds:0x73110,0x1
   1133c:	push   0x1ba18
   11341:	call   0x1112a
   11346:	mov    ds:0x7310c,eax
   1134b:	mov    eax,ds:0x7310c
   11350:	ret    
   11351:	int3   
   11352:	int3   
   11353:	int3   
   11354:	int3   
   11355:	int3   
   11356:	test   BYTE PTR ds:0x73118,0x1
   1135d:	jne    0x11375
   1135f:	or     DWORD PTR ds:0x73118,0x1
   11366:	push   0x1ba30
   1136b:	call   0x1112a
   11370:	mov    ds:0x73114,eax
   11375:	mov    eax,ds:0x73114
   1137a:	ret    
   1137b:	int3   
   1137c:	int3   
   1137d:	int3   
   1137e:	int3   
   1137f:	int3   
   11380:	test   BYTE PTR ds:0x73120,0x1
   11387:	jne    0x1139f
   11389:	or     DWORD PTR ds:0x73120,0x1
   11390:	push   0x1ba4c
   11395:	call   0x1112a
   1139a:	mov    ds:0x7311c,eax
   1139f:	mov    eax,ds:0x7311c
   113a4:	ret    
   113a5:	int3   
   113a6:	int3   
   113a7:	int3   
   113a8:	int3   
   113a9:	int3   
   113aa:	test   BYTE PTR ds:0x73128,0x1
   113b1:	jne    0x113c9
   113b3:	or     DWORD PTR ds:0x73128,0x1
   113ba:	push   0x1ba86
   113bf:	call   0x1112a
   113c4:	mov    ds:0x73124,eax
   113c9:	mov    eax,ds:0x73124
   113ce:	ret    
   113cf:	int3   
   113d0:	int3   
   113d1:	int3   
   113d2:	int3   
   113d3:	int3   
   113d4:	test   BYTE PTR ds:0x73130,0x1
   113db:	jne    0x113f3
   113dd:	or     DWORD PTR ds:0x73130,0x1
   113e4:	push   0x1baa0
   113e9:	call   0x1112a
   113ee:	mov    ds:0x7312c,eax
   113f3:	mov    eax,ds:0x7312c
   113f8:	ret    
   113f9:	int3   
   113fa:	int3   
   113fb:	int3   
   113fc:	int3   
   113fd:	int3   
   113fe:	test   BYTE PTR ds:0x73138,0x1
   11405:	jne    0x1141d
   11407:	or     DWORD PTR ds:0x73138,0x1
   1140e:	push   0x1bac2
   11413:	call   0x1112a
   11418:	mov    ds:0x73134,eax
   1141d:	mov    eax,ds:0x73134
   11422:	ret    
   11423:	int3   
   11424:	int3   
   11425:	int3   
   11426:	int3   
   11427:	int3   
   11428:	test   BYTE PTR ds:0x73140,0x1
   1142f:	jne    0x11447
   11431:	or     DWORD PTR ds:0x73140,0x1
   11438:	push   0x1bafc
   1143d:	call   0x1112a
   11442:	mov    ds:0x7313c,eax
   11447:	mov    eax,ds:0x7313c
   1144c:	ret    
   1144d:	int3   
   1144e:	int3   
   1144f:	int3   
   11450:	int3   
   11451:	int3   
   11452:	test   BYTE PTR ds:0x73148,0x1
   11459:	jne    0x11471
   1145b:	or     DWORD PTR ds:0x73148,0x1
   11462:	push   0x1bb22
   11467:	call   0x1112a
   1146c:	mov    ds:0x73144,eax
   11471:	mov    eax,ds:0x73144
   11476:	ret    
   11477:	int3   
   11478:	int3   
   11479:	int3   
   1147a:	int3   
   1147b:	int3   
   1147c:	test   BYTE PTR ds:0x73150,0x1
   11483:	jne    0x1149b
   11485:	or     DWORD PTR ds:0x73150,0x1
   1148c:	push   0x1bb52
   11491:	call   0x1112a
   11496:	mov    ds:0x7314c,eax
   1149b:	mov    eax,ds:0x7314c
   114a0:	ret    
   114a1:	int3   
   114a2:	int3   
   114a3:	int3   
   114a4:	int3   
   114a5:	int3   
   114a6:	test   BYTE PTR ds:0x73158,0x1
   114ad:	jne    0x114c5
   114af:	or     DWORD PTR ds:0x73158,0x1
   114b6:	push   0x1bb84
   114bb:	call   0x1112a
   114c0:	mov    ds:0x73154,eax
   114c5:	mov    eax,ds:0x73154
   114ca:	ret    
   114cb:	int3   
   114cc:	int3   
   114cd:	int3   
   114ce:	int3   
   114cf:	int3   
   114d0:	test   BYTE PTR ds:0x73160,0x1
   114d7:	jne    0x114ef
   114d9:	or     DWORD PTR ds:0x73160,0x1
   114e0:	push   0x1bb94
   114e5:	call   0x1112a
   114ea:	mov    ds:0x7315c,eax
   114ef:	mov    eax,ds:0x7315c
   114f4:	ret    
   114f5:	int3   
   114f6:	int3   
   114f7:	int3   
   114f8:	int3   
   114f9:	int3   
   114fa:	test   BYTE PTR ds:0x73168,0x1
   11501:	jne    0x11519
   11503:	or     DWORD PTR ds:0x73168,0x1
   1150a:	push   0x1bbbe
   1150f:	call   0x1112a
   11514:	mov    ds:0x73164,eax
   11519:	mov    eax,ds:0x73164
   1151e:	ret    
   1151f:	int3   
   11520:	int3   
   11521:	int3   
   11522:	int3   
   11523:	int3   
   11524:	test   BYTE PTR ds:0x73170,0x1
   1152b:	jne    0x11543
   1152d:	or     DWORD PTR ds:0x73170,0x1
   11534:	push   0x1bbda
   11539:	call   0x1112a
   1153e:	mov    ds:0x7316c,eax
   11543:	mov    eax,ds:0x7316c
   11548:	ret    
   11549:	int3   
   1154a:	int3   
   1154b:	int3   
   1154c:	int3   
   1154d:	int3   
   1154e:	test   BYTE PTR ds:0x73178,0x1
   11555:	jne    0x1156d
   11557:	or     DWORD PTR ds:0x73178,0x1
   1155e:	push   0x1bc16
   11563:	call   0x1112a
   11568:	mov    ds:0x73174,eax
   1156d:	mov    eax,ds:0x73174
   11572:	ret    
   11573:	int3   
   11574:	int3   
   11575:	int3   
   11576:	int3   
   11577:	int3   
   11578:	test   BYTE PTR ds:0x73180,0x1
   1157f:	jne    0x11597
   11581:	or     DWORD PTR ds:0x73180,0x1
   11588:	push   0x1bc3a
   1158d:	call   0x1112a
   11592:	mov    ds:0x7317c,eax
   11597:	mov    eax,ds:0x7317c
   1159c:	ret    
   1159d:	int3   
   1159e:	int3   
   1159f:	int3   
   115a0:	int3   
   115a1:	int3   
   115a2:	test   BYTE PTR ds:0x73188,0x1
   115a9:	jne    0x115c1
   115ab:	or     DWORD PTR ds:0x73188,0x1
   115b2:	push   0x1bc64
   115b7:	call   0x1112a
   115bc:	mov    ds:0x73184,eax
   115c1:	mov    eax,ds:0x73184
   115c6:	ret    
   115c7:	int3   
   115c8:	int3   
   115c9:	int3   
   115ca:	int3   
   115cb:	int3   
   115cc:	test   BYTE PTR ds:0x73190,0x1
   115d3:	jne    0x115eb
   115d5:	or     DWORD PTR ds:0x73190,0x1
   115dc:	push   0x1bc90
   115e1:	call   0x1112a
   115e6:	mov    ds:0x7318c,eax
   115eb:	mov    eax,ds:0x7318c
   115f0:	ret    
   115f1:	int3   
   115f2:	int3   
   115f3:	int3   
   115f4:	int3   
   115f5:	int3   
   115f6:	test   BYTE PTR ds:0x73198,0x1
   115fd:	jne    0x11615
   115ff:	or     DWORD PTR ds:0x73198,0x1
   11606:	push   0x1bca4
   1160b:	call   0x1112a
   11610:	mov    ds:0x73194,eax
   11615:	mov    eax,ds:0x73194
   1161a:	ret    
   1161b:	int3   
   1161c:	int3   
   1161d:	int3   
   1161e:	int3   
   1161f:	int3   
   11620:	test   BYTE PTR ds:0x731a0,0x1
   11627:	jne    0x1163f
   11629:	or     DWORD PTR ds:0x731a0,0x1
   11630:	push   0x1bcd4
   11635:	call   0x1112a
   1163a:	mov    ds:0x7319c,eax
   1163f:	mov    eax,ds:0x7319c
   11644:	ret    
   11645:	int3   
   11646:	int3   
   11647:	int3   
   11648:	int3   
   11649:	int3   
   1164a:	test   BYTE PTR ds:0x731a8,0x1
   11651:	jne    0x11669
   11653:	or     DWORD PTR ds:0x731a8,0x1
   1165a:	push   0x1bcf2
   1165f:	call   0x1112a
   11664:	mov    ds:0x731a4,eax
   11669:	mov    eax,ds:0x731a4
   1166e:	ret    
   1166f:	int3   
   11670:	int3   
   11671:	int3   
   11672:	int3   
   11673:	int3   
   11674:	test   BYTE PTR ds:0x731b0,0x1
   1167b:	jne    0x11693
   1167d:	or     DWORD PTR ds:0x731b0,0x1
   11684:	push   0x1bd0c
   11689:	call   0x1112a
   1168e:	mov    ds:0x731ac,eax
   11693:	mov    eax,ds:0x731ac
   11698:	ret    
   11699:	int3   
   1169a:	int3   
   1169b:	int3   
   1169c:	int3   
   1169d:	int3   
   1169e:	test   BYTE PTR ds:0x731b8,0x1
   116a5:	jne    0x116bd
   116a7:	or     DWORD PTR ds:0x731b8,0x1
   116ae:	push   0x1bd24
   116b3:	call   0x1112a
   116b8:	mov    ds:0x731b4,eax
   116bd:	mov    eax,ds:0x731b4
   116c2:	ret    
   116c3:	int3   
   116c4:	int3   
   116c5:	int3   
   116c6:	int3   
   116c7:	int3   
   116c8:	test   BYTE PTR ds:0x731c0,0x1
   116cf:	jne    0x116e7
   116d1:	or     DWORD PTR ds:0x731c0,0x1
   116d8:	push   0x1bd42
   116dd:	call   0x1112a
   116e2:	mov    ds:0x731bc,eax
   116e7:	mov    eax,ds:0x731bc
   116ec:	ret    
   116ed:	int3   
   116ee:	int3   
   116ef:	int3   
   116f0:	int3   
   116f1:	int3   
   116f2:	test   BYTE PTR ds:0x731c8,0x1
   116f9:	jne    0x11711
   116fb:	or     DWORD PTR ds:0x731c8,0x1
   11702:	push   0x1bd62
   11707:	call   0x1112a
   1170c:	mov    ds:0x731c4,eax
   11711:	mov    eax,ds:0x731c4
   11716:	ret    
   11717:	int3   
   11718:	int3   
   11719:	int3   
   1171a:	int3   
   1171b:	int3   
   1171c:	test   BYTE PTR ds:0x731d0,0x1
   11723:	jne    0x1173b
   11725:	or     DWORD PTR ds:0x731d0,0x1
   1172c:	push   0x1bd82
   11731:	call   0x1112a
   11736:	mov    ds:0x731cc,eax
   1173b:	mov    eax,ds:0x731cc
   11740:	ret    
   11741:	int3   
   11742:	int3   
   11743:	int3   
   11744:	int3   
   11745:	int3   
   11746:	test   BYTE PTR ds:0x731d8,0x1
   1174d:	jne    0x11765
   1174f:	or     DWORD PTR ds:0x731d8,0x1
   11756:	push   0x1bda2
   1175b:	call   0x1112a
   11760:	mov    ds:0x731d4,eax
   11765:	mov    eax,ds:0x731d4
   1176a:	ret    
   1176b:	int3   
   1176c:	int3   
   1176d:	int3   
   1176e:	int3   
   1176f:	int3   
   11770:	test   BYTE PTR ds:0x731e0,0x1
   11777:	jne    0x1178f
   11779:	or     DWORD PTR ds:0x731e0,0x1
   11780:	push   0x1bdb8
   11785:	call   0x1112a
   1178a:	mov    ds:0x731dc,eax
   1178f:	mov    eax,ds:0x731dc
   11794:	ret    
   11795:	int3   
   11796:	int3   
   11797:	int3   
   11798:	int3   
   11799:	int3   
   1179a:	test   BYTE PTR ds:0x731e8,0x1
   117a1:	jne    0x117b9
   117a3:	or     DWORD PTR ds:0x731e8,0x1
   117aa:	push   0x1bde2
   117af:	call   0x1112a
   117b4:	mov    ds:0x731e4,eax
   117b9:	mov    eax,ds:0x731e4
   117be:	ret    
   117bf:	int3   
   117c0:	int3   
   117c1:	int3   
   117c2:	int3   
   117c3:	int3   
   117c4:	test   BYTE PTR ds:0x731f0,0x1
   117cb:	jne    0x117e3
   117cd:	or     DWORD PTR ds:0x731f0,0x1
   117d4:	push   0x1bdfa
   117d9:	call   0x1112a
   117de:	mov    ds:0x731ec,eax
   117e3:	mov    eax,ds:0x731ec
   117e8:	ret    
   117e9:	int3   
   117ea:	int3   
   117eb:	int3   
   117ec:	int3   
   117ed:	int3   
   117ee:	test   BYTE PTR ds:0x731f8,0x1
   117f5:	jne    0x1180d
   117f7:	or     DWORD PTR ds:0x731f8,0x1
   117fe:	push   0x1be28
   11803:	call   0x1112a
   11808:	mov    ds:0x731f4,eax
   1180d:	mov    eax,ds:0x731f4
   11812:	ret    
   11813:	int3   
   11814:	int3   
   11815:	int3   
   11816:	int3   
   11817:	int3   
   11818:	test   BYTE PTR ds:0x73200,0x1
   1181f:	jne    0x11837
   11821:	or     DWORD PTR ds:0x73200,0x1
   11828:	push   0x1be52
   1182d:	call   0x1112a
   11832:	mov    ds:0x731fc,eax
   11837:	mov    eax,ds:0x731fc
   1183c:	ret    
   1183d:	int3   
   1183e:	int3   
   1183f:	int3   
   11840:	int3   
   11841:	int3   
   11842:	test   BYTE PTR ds:0x73208,0x1
   11849:	jne    0x11861
   1184b:	or     DWORD PTR ds:0x73208,0x1
   11852:	push   0x1be70
   11857:	call   0x1112a
   1185c:	mov    ds:0x73204,eax
   11861:	mov    eax,ds:0x73204
   11866:	ret    
   11867:	int3   
   11868:	int3   
   11869:	int3   
   1186a:	int3   
   1186b:	int3   
   1186c:	test   BYTE PTR ds:0x73210,0x1
   11873:	jne    0x1188b
   11875:	or     DWORD PTR ds:0x73210,0x1
   1187c:	push   0x1be9e
   11881:	call   0x1112a
   11886:	mov    ds:0x7320c,eax
   1188b:	mov    eax,ds:0x7320c
   11890:	ret    
   11891:	int3   
   11892:	int3   
   11893:	int3   
   11894:	int3   
   11895:	int3   
   11896:	test   BYTE PTR ds:0x73218,0x1
   1189d:	jne    0x118b5
   1189f:	or     DWORD PTR ds:0x73218,0x1
   118a6:	push   0x1bec4
   118ab:	call   0x1112a
   118b0:	mov    ds:0x73214,eax
   118b5:	mov    eax,ds:0x73214
   118ba:	ret    
   118bb:	int3   
   118bc:	int3   
   118bd:	int3   
   118be:	int3   
   118bf:	int3   
   118c0:	test   BYTE PTR ds:0x73220,0x1
   118c7:	jne    0x118df
   118c9:	or     DWORD PTR ds:0x73220,0x1
   118d0:	push   0x1bee8
   118d5:	call   0x1112a
   118da:	mov    ds:0x7321c,eax
   118df:	mov    eax,ds:0x7321c
   118e4:	ret    
   118e5:	int3   
   118e6:	int3   
   118e7:	int3   
   118e8:	int3   
   118e9:	int3   
   118ea:	test   BYTE PTR ds:0x73228,0x1
   118f1:	jne    0x11909
   118f3:	or     DWORD PTR ds:0x73228,0x1
   118fa:	push   0x1bf0e
   118ff:	call   0x1112a
   11904:	mov    ds:0x73224,eax
   11909:	mov    eax,ds:0x73224
   1190e:	ret    
   1190f:	int3   
   11910:	int3   
   11911:	int3   
   11912:	int3   
   11913:	int3   
   11914:	test   BYTE PTR ds:0x73230,0x1
   1191b:	jne    0x11933
   1191d:	or     DWORD PTR ds:0x73230,0x1
   11924:	push   0x1bf2e
   11929:	call   0x1112a
   1192e:	mov    ds:0x7322c,eax
   11933:	mov    eax,ds:0x7322c
   11938:	ret    
   11939:	int3   
   1193a:	int3   
   1193b:	int3   
   1193c:	int3   
   1193d:	int3   
   1193e:	test   BYTE PTR ds:0x73238,0x1
   11945:	jne    0x1195d
   11947:	or     DWORD PTR ds:0x73238,0x1
   1194e:	push   0x1bf58
   11953:	call   0x1112a
   11958:	mov    ds:0x73234,eax
   1195d:	mov    eax,ds:0x73234
   11962:	ret    
   11963:	int3   
   11964:	int3   
   11965:	int3   
   11966:	int3   
   11967:	int3   
   11968:	test   BYTE PTR ds:0x73240,0x1
   1196f:	jne    0x11987
   11971:	or     DWORD PTR ds:0x73240,0x1
   11978:	push   0x1bf7c
   1197d:	call   0x1112a
   11982:	mov    ds:0x7323c,eax
   11987:	mov    eax,ds:0x7323c
   1198c:	ret    
   1198d:	int3   
   1198e:	int3   
   1198f:	int3   
   11990:	int3   
   11991:	int3   
   11992:	test   BYTE PTR ds:0x73248,0x1
   11999:	jne    0x119b1
   1199b:	or     DWORD PTR ds:0x73248,0x1
   119a2:	push   0x1bfa8
   119a7:	call   0x1112a
   119ac:	mov    ds:0x73244,eax
   119b1:	mov    eax,ds:0x73244
   119b6:	ret    
   119b7:	int3   
   119b8:	int3   
   119b9:	int3   
   119ba:	int3   
   119bb:	int3   
   119bc:	call   0x11188
   119c1:	test   eax,eax
   119c3:	jne    0x119c8
   119c5:	xor    eax,eax
   119c7:	ret    
   119c8:	call   0x111b2
   119cd:	test   eax,eax
   119cf:	je     0x119c5
   119d1:	call   0x111dc
   119d6:	test   eax,eax
   119d8:	je     0x119c5
   119da:	call   0x11206
   119df:	test   eax,eax
   119e1:	je     0x119c5
   119e3:	call   0x11230
   119e8:	test   eax,eax
   119ea:	je     0x119c5
   119ec:	call   0x1125a
   119f1:	test   eax,eax
   119f3:	je     0x119c5
   119f5:	call   0x11284
   119fa:	test   eax,eax
   119fc:	je     0x119c5
   119fe:	call   0x112ae
   11a03:	test   eax,eax
   11a05:	je     0x119c5
   11a07:	call   0x112d8
   11a0c:	test   eax,eax
   11a0e:	je     0x119c5
   11a10:	call   0x11302
   11a15:	test   eax,eax
   11a17:	je     0x119c5
   11a19:	call   0x1132c
   11a1e:	test   eax,eax
   11a20:	je     0x119c5
   11a22:	call   0x11356
   11a27:	test   eax,eax
   11a29:	je     0x119c5
   11a2b:	call   0x11380
   11a30:	test   eax,eax
   11a32:	je     0x119c5
   11a34:	call   0x113aa
   11a39:	test   eax,eax
   11a3b:	je     0x119c5
   11a3d:	call   0x113d4
   11a42:	test   eax,eax
   11a44:	je     0x119c5
   11a4a:	call   0x113fe
   11a4f:	test   eax,eax
   11a51:	je     0x119c5
   11a57:	call   0x11428
   11a5c:	test   eax,eax
   11a5e:	je     0x119c5
   11a64:	call   0x11452
   11a69:	test   eax,eax
   11a6b:	je     0x119c5
   11a71:	call   0x1147c
   11a76:	test   eax,eax
   11a78:	je     0x119c5
   11a7e:	call   0x114a6
   11a83:	test   eax,eax
   11a85:	je     0x119c5
   11a8b:	call   0x114d0
   11a90:	test   eax,eax
   11a92:	je     0x119c5
   11a98:	call   0x114fa
   11a9d:	test   eax,eax
   11a9f:	je     0x119c5
   11aa5:	call   0x11524
   11aaa:	test   eax,eax
   11aac:	je     0x119c5
   11ab2:	call   0x1154e
   11ab7:	test   eax,eax
   11ab9:	je     0x119c5
   11abf:	call   0x11578
   11ac4:	test   eax,eax
   11ac6:	je     0x119c5
   11acc:	call   0x115a2
   11ad1:	test   eax,eax
   11ad3:	je     0x119c5
   11ad9:	call   0x115cc
   11ade:	test   eax,eax
   11ae0:	je     0x119c5
   11ae6:	call   0x115f6
   11aeb:	test   eax,eax
   11aed:	je     0x119c5
   11af3:	call   0x11620
   11af8:	test   eax,eax
   11afa:	je     0x119c5
   11b00:	call   0x1164a
   11b05:	test   eax,eax
   11b07:	je     0x119c5
   11b0d:	call   0x11674
   11b12:	test   eax,eax
   11b14:	je     0x119c5
   11b1a:	call   0x1169e
   11b1f:	test   eax,eax
   11b21:	je     0x119c5
   11b27:	call   0x116c8
   11b2c:	test   eax,eax
   11b2e:	je     0x119c5
   11b34:	call   0x116f2
   11b39:	test   eax,eax
   11b3b:	je     0x119c5
   11b41:	call   0x1171c
   11b46:	test   eax,eax
   11b48:	je     0x119c5
   11b4e:	call   0x11746
   11b53:	test   eax,eax
   11b55:	je     0x119c5
   11b5b:	call   0x11770
   11b60:	test   eax,eax
   11b62:	je     0x119c5
   11b68:	call   0x1179a
   11b6d:	test   eax,eax
   11b6f:	je     0x119c5
   11b75:	call   0x117c4
   11b7a:	test   eax,eax
   11b7c:	je     0x119c5
   11b82:	call   0x117ee
   11b87:	test   eax,eax
   11b89:	je     0x119c5
   11b8f:	call   0x11818
   11b94:	test   eax,eax
   11b96:	je     0x119c5
   11b9c:	call   0x11842
   11ba1:	test   eax,eax
   11ba3:	je     0x119c5
   11ba9:	call   0x1186c
   11bae:	test   eax,eax
   11bb0:	je     0x119c5
   11bb6:	call   0x11896
   11bbb:	test   eax,eax
   11bbd:	je     0x119c5
   11bc3:	call   0x118c0
   11bc8:	test   eax,eax
   11bca:	je     0x119c5
   11bd0:	call   0x118ea
   11bd5:	test   eax,eax
   11bd7:	je     0x119c5
   11bdd:	call   0x11914
   11be2:	test   eax,eax
   11be4:	je     0x119c5
   11bea:	call   0x1193e
   11bef:	test   eax,eax
   11bf1:	je     0x119c5
   11bf7:	call   0x11968
   11bfc:	test   eax,eax
   11bfe:	je     0x119c5
   11c04:	call   0x11992
   11c09:	neg    eax
   11c0b:	sbb    eax,eax
   11c0d:	neg    eax
   11c0f:	ret    
   11c10:	int3   
   11c11:	int3   
   11c12:	int3   
   11c13:	int3   
   11c14:	int3   
   11c15:	int3   
   11c16:	mov    edi,edi
   11c18:	push   ebp
   11c19:	mov    ebp,esp
   11c1b:	push   esi
   11c1c:	push   0x20
   11c1e:	push   0x61737973
   11c23:	push   DWORD PTR [ebp+0x8]
   11c26:	push   0x1
   11c28:	call   0x11524
   11c2d:	call   eax
   11c2f:	mov    esi,eax
   11c31:	test   esi,esi
   11c33:	jne    0x11c41
   11c35:	push   0xc000009a
   11c3a:	call   0x114fa
   11c3f:	call   eax
   11c41:	mov    eax,esi
   11c43:	pop    esi
   11c44:	pop    ebp
   11c45:	ret    
   11c46:	int3   
   11c47:	int3   
   11c48:	int3   
   11c49:	int3   
   11c4a:	int3   
   11c4b:	int3   
   11c4c:	mov    edi,edi
   11c4e:	push   ebp
   11c4f:	mov    ebp,esp
   11c51:	cmp    DWORD PTR [ebp+0x8],0x0
   11c55:	je     0x11c63
   11c57:	push   0x0
   11c59:	push   DWORD PTR [ebp+0x8]
   11c5c:	call   0x1154e
   11c61:	call   eax
   11c63:	pop    ebp
   11c64:	ret    
   11c65:	int3   
   11c66:	int3   
   11c67:	int3   
   11c68:	int3   
   11c69:	int3   
   11c6a:	mov    edi,edi
   11c6c:	push   ebp
   11c6d:	mov    ebp,esp
   11c6f:	mov    eax,ecx
   11c71:	mov    ecx,DWORD PTR [ebp+0x8]
   11c74:	mov    edx,DWORD PTR [ecx]
   11c76:	test   edx,edx
   11c78:	je     0x11c81
   11c7a:	mov    DWORD PTR [eax],edx
   11c7c:	inc    DWORD PTR [edx+0x4]
   11c7f:	jmp    0x11c84
   11c81:	and    DWORD PTR [eax],0x0
   11c84:	pop    ebp
   11c85:	ret    0x4
   11c88:	int3   
   11c89:	int3   
   11c8a:	int3   
   11c8b:	int3   
   11c8c:	int3   
   11c8d:	int3   
   11c8e:	mov    edi,edi
   11c90:	push   esi
   11c91:	mov    esi,ecx
   11c93:	dec    DWORD PTR [esi+0x4]
   11c96:	jne    0x11ca7
   11c98:	push   DWORD PTR [esi]
   11c9a:	call   0x11c4c
   11c9f:	push   esi
   11ca0:	call   0x11c4c
   11ca5:	pop    ecx
   11ca6:	pop    ecx
   11ca7:	pop    esi
   11ca8:	ret    
   11ca9:	int3   
   11caa:	int3   
   11cab:	int3   
   11cac:	int3   
   11cad:	int3   
   11cae:	mov    edi,edi
   11cb0:	push   ebp
   11cb1:	mov    ebp,esp
   11cb3:	push   ecx
   11cb4:	push   edi
   11cb5:	lea    eax,[ebp-0x4]
   11cb8:	push   eax
   11cb9:	xor    edi,edi
   11cbb:	push   edi
   11cbc:	push   edi
   11cbd:	push   0x1b
   11cbf:	push   DWORD PTR [ebp+0x8]
   11cc2:	call   0x112ae
   11cc7:	call   eax
   11cc9:	cmp    eax,0xc0000004
   11cce:	jne    0x11d39
   11cd0:	mov    ecx,DWORD PTR [ebp-0x4]
   11cd3:	push   ebx
   11cd4:	mov    ebx,DWORD PTR [ebp+0xc]
   11cd7:	movzx  edx,WORD PTR [ebx+0x2]
   11cdb:	lea    eax,[ecx-0x8]
   11cde:	cmp    edx,eax
   11ce0:	jae    0x11cec
   11ce2:	mov    WORD PTR [ebx],ax
   11ce5:	mov    eax,0x80000005
   11cea:	jmp    0x11d38
   11cec:	push   esi
   11ced:	push   0x20736649
   11cf2:	push   ecx
   11cf3:	push   edi
   11cf4:	call   0x115a2
   11cf9:	call   eax
   11cfb:	mov    esi,eax
   11cfd:	cmp    esi,edi
   11cff:	jne    0x11d08
   11d01:	mov    eax,0xc000009a
   11d06:	jmp    0x11d37
   11d08:	lea    eax,[ebp-0x4]
   11d0b:	push   eax
   11d0c:	push   DWORD PTR [ebp-0x4]
   11d0f:	push   esi
   11d10:	push   0x1b
   11d12:	push   DWORD PTR [ebp+0x8]
   11d15:	call   0x112ae
   11d1a:	call   eax
   11d1c:	mov    edi,eax
   11d1e:	test   edi,edi
   11d20:	jl     0x11d2b
   11d22:	push   esi
   11d23:	push   ebx
   11d24:	call   0x11578
   11d29:	call   eax
   11d2b:	push   0x0
   11d2d:	push   esi
   11d2e:	call   0x1154e
   11d33:	call   eax
   11d35:	mov    eax,edi
   11d37:	pop    esi
   11d38:	pop    ebx
   11d39:	pop    edi
   11d3a:	leave  
   11d3b:	ret    0x8
   11d3e:	int3   
   11d3f:	int3   
   11d40:	int3   
   11d41:	int3   
   11d42:	int3   
   11d43:	int3   
   11d44:	mov    edi,edi
   11d46:	push   ebp
   11d47:	mov    ebp,esp
   11d49:	sub    esp,0x18
   11d4c:	push   0x0
   11d4e:	push   0x18
   11d50:	lea    eax,[ebp-0x18]
   11d53:	push   eax
   11d54:	push   0x0
   11d56:	push   DWORD PTR [ebp+0x8]
   11d59:	call   0x112ae
   11d5e:	call   eax
   11d60:	test   eax,eax
   11d62:	jl     0x11d69
   11d64:	mov    eax,DWORD PTR [ebp-0x8]
   11d67:	jmp    0x11d6b
   11d69:	xor    eax,eax
   11d6b:	leave  
   11d6c:	ret    0x4
   11d6f:	int3   
   11d70:	int3   
   11d71:	int3   
   11d72:	int3   
   11d73:	int3   
   11d74:	mov    edi,edi
   11d76:	push   ebp
   11d77:	mov    ebp,esp
   11d79:	sub    esp,0x10
   11d7c:	push   esi
   11d7d:	push   edi
   11d7e:	xor    eax,eax
   11d80:	mov    WORD PTR [ebp-0x8],ax
   11d84:	lea    edi,[ebp-0x6]
   11d87:	stos   DWORD PTR es:[edi],eax
   11d88:	stos   WORD PTR es:[edi],ax
   11d8a:	mov    eax,DWORD PTR [ebp+0xc]
   11d8d:	mov    DWORD PTR [ebp-0x4],eax
   11d90:	lea    ecx,[eax+0x2]
   11d93:	mov    dx,WORD PTR [eax]
   11d96:	inc    eax
   11d97:	inc    eax
   11d98:	test   dx,dx
   11d9b:	jne    0x11d93
   11d9d:	mov    esi,DWORD PTR [ebp+0x8]
   11da0:	movzx  edx,WORD PTR [esi]
   11da3:	sub    eax,ecx
   11da5:	sar    eax,1
   11da7:	lea    ecx,[eax+eax*1]
   11daa:	mov    WORD PTR [ebp-0x8],cx
   11dae:	mov    WORD PTR [ebp-0x6],cx
   11db2:	cmp    dx,cx
   11db5:	jb     0x11df5
   11db7:	xor    eax,eax
   11db9:	lea    edi,[ebp-0xe]
   11dbc:	stos   DWORD PTR es:[edi],eax
   11dbd:	stos   WORD PTR es:[edi],ax
   11dbf:	mov    WORD PTR [ebp-0x10],cx
   11dc3:	mov    WORD PTR [ebp-0xe],cx
   11dc7:	movzx  eax,dx
   11dca:	movzx  ecx,cx
   11dcd:	sub    eax,ecx
   11dcf:	mov    ecx,DWORD PTR [esi+0x4]
   11dd2:	cdq    
   11dd3:	sub    eax,edx
   11dd5:	sar    eax,1
   11dd7:	lea    eax,[ecx+eax*2]
   11dda:	mov    DWORD PTR [ebp-0xc],eax
   11ddd:	push   0x1
   11ddf:	lea    eax,[ebp-0x8]
   11de2:	push   eax
   11de3:	lea    eax,[ebp-0x10]
   11de6:	push   eax
   11de7:	call   0x115f6
   11dec:	call   eax
   11dee:	neg    eax
   11df0:	sbb    eax,eax
   11df2:	inc    eax
   11df3:	jmp    0x11df7
   11df5:	xor    al,al
   11df7:	pop    edi
   11df8:	pop    esi
   11df9:	leave  
   11dfa:	ret    0x8
   11dfd:	int3   
   11dfe:	int3   
   11dff:	int3   
   11e00:	int3   
   11e01:	int3   
   11e02:	mov    edi,edi
   11e04:	push   ebp
   11e05:	mov    ebp,esp
   11e07:	push   ebx
   11e08:	xor    eax,eax
   11e0a:	push   eax
   11e0b:	push   eax
   11e0c:	push   eax
   11e0d:	push   eax
   11e0e:	mov    ebx,0x72524
   11e13:	push   ebx
   11e14:	call   0x11968
   11e19:	call   eax
   11e1b:	test   eax,eax
   11e1d:	jge    0x11e23
   11e1f:	xor    al,al
   11e21:	jmp    0x11e47
   11e23:	push   esi
   11e24:	mov    esi,DWORD PTR [ebp+0x8]
   11e27:	push   edi
   11e28:	imul   esi,esi,0x14
   11e2b:	mov    edi,DWORD PTR [ebp+0xc]
   11e2e:	push   0x5
   11e30:	pop    ecx
   11e31:	push   0x0
   11e33:	add    esi,0x72f6c
   11e39:	push   ebx
   11e3a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11e3c:	call   0x11992
   11e41:	call   eax
   11e43:	pop    edi
   11e44:	mov    al,0x1
   11e46:	pop    esi
   11e47:	pop    ebx
   11e48:	pop    ebp
   11e49:	ret    0x8
   11e4c:	int3   
   11e4d:	int3   
   11e4e:	int3   
   11e4f:	int3   
   11e50:	int3   
   11e51:	int3   
   11e52:	mov    edi,edi
   11e54:	push   ebp
   11e55:	mov    ebp,esp
   11e57:	push   ebx
   11e58:	xor    eax,eax
   11e5a:	push   eax
   11e5b:	push   eax
   11e5c:	push   eax
   11e5d:	push   eax
   11e5e:	mov    ebx,0x72524
   11e63:	push   ebx
   11e64:	call   0x11968
   11e69:	call   eax
   11e6b:	test   eax,eax
   11e6d:	jl     0x11e91
   11e6f:	push   esi
   11e70:	mov    esi,DWORD PTR [ebp+0xc]
   11e73:	push   edi
   11e74:	mov    edi,DWORD PTR [ebp+0x8]
   11e77:	imul   edi,edi,0x14
   11e7a:	push   0x5
   11e7c:	pop    ecx
   11e7d:	push   0x0
   11e7f:	add    edi,0x72f6c
   11e85:	push   ebx
   11e86:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11e88:	call   0x11992
   11e8d:	call   eax
   11e8f:	pop    edi
   11e90:	pop    esi
   11e91:	pop    ebx
   11e92:	pop    ebp
   11e93:	ret    0x8
   11e96:	int3   
   11e97:	int3   
   11e98:	int3   
   11e99:	int3   
   11e9a:	int3   
   11e9b:	int3   
   11e9c:	mov    edi,edi
   11e9e:	push   ebp
   11e9f:	mov    ebp,esp
   11ea1:	sub    esp,0x14
   11ea4:	and    DWORD PTR [ebp-0x14],0x0
   11ea8:	push   edi
   11ea9:	xor    eax,eax
   11eab:	lea    edi,[ebp-0x10]
   11eae:	stos   DWORD PTR es:[edi],eax
   11eaf:	stos   DWORD PTR es:[edi],eax
   11eb0:	stos   DWORD PTR es:[edi],eax
   11eb1:	stos   DWORD PTR es:[edi],eax
   11eb2:	lea    eax,[ebp-0x14]
   11eb5:	push   eax
   11eb6:	push   DWORD PTR [ebp+0x8]
   11eb9:	call   0x11e52
   11ebe:	pop    edi
   11ebf:	leave  
   11ec0:	ret    0x4
   11ec3:	int3   
   11ec4:	int3   
   11ec5:	int3   
   11ec6:	int3   
   11ec7:	int3   
   11ec8:	mov    edi,edi
   11eca:	push   ebp
   11ecb:	mov    ebp,esp
   11ecd:	mov    ecx,DWORD PTR ds:0x72f94
   11ed3:	sub    esp,0x38
   11ed6:	push   esi
   11ed7:	xor    esi,esi
   11ed9:	cmp    ecx,esi
   11edb:	jne    0x11ee5
   11edd:	or     eax,0xffffffff
   11ee0:	jmp    0x11fcc
   11ee5:	push   edi
   11ee6:	xor    eax,eax
   11ee8:	mov    DWORD PTR [ebp-0x20],esi
   11eeb:	lea    edi,[ebp-0x1c]
   11eee:	stos   DWORD PTR es:[edi],eax
   11eef:	lea    eax,[ebp-0x18]
   11ef2:	push   eax
   11ef3:	lea    eax,[ebp-0x38]
   11ef6:	push   eax
   11ef7:	push   0x400
   11efc:	lea    eax,[ebp-0x10]
   11eff:	push   eax
   11f00:	mov    DWORD PTR [ebp-0x4],esi
   11f03:	mov    DWORD PTR [ebp-0x38],0x18
   11f0a:	mov    DWORD PTR [ebp-0x34],esi
   11f0d:	mov    DWORD PTR [ebp-0x2c],esi
   11f10:	mov    DWORD PTR [ebp-0x30],esi
   11f13:	mov    DWORD PTR [ebp-0x28],esi
   11f16:	mov    DWORD PTR [ebp-0x24],esi
   11f19:	mov    DWORD PTR [ebp-0x18],ecx
   11f1c:	mov    DWORD PTR [ebp-0x14],esi
   11f1f:	call   0x11188
   11f24:	call   eax
   11f26:	mov    edi,eax
   11f28:	cmp    edi,esi
   11f2a:	jl     0x11fc9
   11f30:	lea    eax,[ebp-0xc]
   11f33:	push   eax
   11f34:	push   0x8
   11f36:	push   DWORD PTR [ebp-0x10]
   11f39:	call   0x11428
   11f3e:	call   eax
   11f40:	mov    edi,eax
   11f42:	cmp    edi,esi
   11f44:	jl     0x11fbf
   11f46:	lea    eax,[ebp-0x4]
   11f49:	push   eax
   11f4a:	push   0x1
   11f4c:	push   esi
   11f4d:	push   esi
   11f4e:	push   0x1
   11f50:	push   DWORD PTR [ebp-0xc]
   11f53:	call   0x11230
   11f58:	call   eax
   11f5a:	mov    edi,eax
   11f5c:	cmp    edi,esi
   11f5e:	jl     0x11fb5
   11f60:	mov    eax,DWORD PTR [ebp+0x8]
   11f63:	mov    DWORD PTR [ebp-0x18],eax
   11f66:	lea    eax,[ebp-0x18]
   11f69:	push   eax
   11f6a:	lea    eax,[ebp-0x38]
   11f6d:	push   eax
   11f6e:	push   0x200
   11f73:	lea    eax,[ebp-0x8]
   11f76:	push   eax
   11f77:	call   0x11188
   11f7c:	call   eax
   11f7e:	mov    edi,eax
   11f80:	cmp    edi,esi
   11f82:	jl     0x11fab
   11f84:	mov    eax,DWORD PTR [ebp-0x4]
   11f87:	push   0x8
   11f89:	mov    DWORD PTR [ebp-0x20],eax
   11f8c:	lea    eax,[ebp-0x20]
   11f8f:	push   eax
   11f90:	push   0x9
   11f92:	push   DWORD PTR [ebp-0x8]
   11f95:	mov    DWORD PTR [ebp-0x1c],esi
   11f98:	call   0x11452
   11f9d:	call   eax
   11f9f:	push   DWORD PTR [ebp-0x8]
   11fa2:	mov    edi,eax
   11fa4:	call   0x114a6
   11fa9:	call   eax
   11fab:	push   DWORD PTR [ebp-0x4]
   11fae:	call   0x114a6
   11fb3:	call   eax
   11fb5:	push   DWORD PTR [ebp-0xc]
   11fb8:	call   0x114a6
   11fbd:	call   eax
   11fbf:	push   DWORD PTR [ebp-0x10]
   11fc2:	call   0x114a6
   11fc7:	call   eax
   11fc9:	mov    eax,edi
   11fcb:	pop    edi
   11fcc:	pop    esi
   11fcd:	leave  
   11fce:	ret    0x4
   11fd1:	int3   
   11fd2:	int3   
   11fd3:	int3   
   11fd4:	int3   
   11fd5:	int3   
   11fd6:	mov    edi,edi
   11fd8:	push   ebp
   11fd9:	mov    ebp,esp
   11fdb:	push   ebx
   11fdc:	xor    eax,eax
   11fde:	push   eax
   11fdf:	push   eax
   11fe0:	push   eax
   11fe1:	push   eax
   11fe2:	mov    ebx,0x72eb0
   11fe7:	push   ebx
   11fe8:	call   0x11968
   11fed:	call   eax
   11fef:	test   eax,eax
   11ff1:	jl     0x1200e
   11ff3:	push   esi
   11ff4:	mov    esi,DWORD PTR [ebp+0x8]
   11ff7:	push   edi
   11ff8:	push   0x40
   11ffa:	pop    ecx
   11ffb:	push   0x0
   11ffd:	mov    edi,0x72f98
   12002:	push   ebx
   12003:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12005:	call   0x11992
   1200a:	call   eax
   1200c:	pop    edi
   1200d:	pop    esi
   1200e:	pop    ebx
   1200f:	pop    ebp
   12010:	ret    0x4
   12013:	int3   
   12014:	int3   
   12015:	int3   
   12016:	int3   
   12017:	int3   
   12018:	mov    edi,edi
   1201a:	push   ebp
   1201b:	mov    ebp,esp
   1201d:	push   ebx
   1201e:	xor    eax,eax
   12020:	push   eax
   12021:	push   eax
   12022:	push   eax
   12023:	push   eax
   12024:	mov    ebx,0x72eb0
   12029:	push   ebx
   1202a:	call   0x11968
   1202f:	call   eax
   12031:	test   eax,eax
   12033:	jge    0x12039
   12035:	xor    al,al
   12037:	jmp    0x12060
   12039:	push   esi
   1203a:	push   edi
   1203b:	mov    edi,DWORD PTR [ebp+0x8]
   1203e:	push   0x40
   12040:	pop    ecx
   12041:	push   0x0
   12043:	mov    esi,0x72f98
   12048:	push   ebx
   12049:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1204b:	call   0x11992
   12050:	call   eax
   12052:	xor    eax,eax
   12054:	cmp    WORD PTR ds:0x72f98,ax
   1205b:	pop    edi
   1205c:	setne  al
   1205f:	pop    esi
   12060:	pop    ebx
   12061:	pop    ebp
   12062:	ret    0x4
   12065:	int3   
   12066:	int3   
   12067:	int3   
   12068:	int3   
   12069:	int3   
   1206a:	mov    edi,edi
   1206c:	push   ebp
   1206d:	mov    ebp,esp
   1206f:	sub    esp,0x43c
   12075:	mov    eax,ds:0x72518
   1207a:	xor    eax,ebp
   1207c:	mov    DWORD PTR [ebp-0x4],eax
   1207f:	mov    eax,DWORD PTR [ebp+0xc]
   12082:	push   ebx
   12083:	push   esi
   12084:	mov    esi,DWORD PTR [ebp+0x8]
   12087:	push   edi
   12088:	xor    ebx,ebx
   1208a:	push   0x3ff
   1208f:	mov    DWORD PTR [ebp-0x418],eax
   12095:	lea    eax,[ebp-0x403]
   1209b:	push   ebx
   1209c:	push   eax
   1209d:	mov    DWORD PTR [ebp-0x424],esi
   120a3:	mov    BYTE PTR [ebp-0x404],bl
   120a9:	call   0x1b3e8
   120ae:	add    esp,0xc
   120b1:	lea    eax,[ebp-0x410]
   120b7:	push   eax
   120b8:	push   0x400
   120bd:	lea    eax,[ebp-0x404]
   120c3:	push   eax
   120c4:	push   ebx
   120c5:	push   ebx
   120c6:	push   esi
   120c7:	jmp    0x12276
   120cc:	cmp    eax,ebx
   120ce:	jl     0x12298
   120d4:	mov    eax,DWORD PTR [ebp-0x418]
   120da:	lea    edx,[eax+0x2]
   120dd:	mov    cx,WORD PTR [eax]
   120e0:	inc    eax
   120e1:	inc    eax
   120e2:	cmp    cx,bx
   120e5:	jne    0x120dd
   120e7:	mov    ecx,DWORD PTR [ebp-0x3f8]
   120ed:	sub    eax,edx
   120ef:	shr    ecx,1
   120f1:	sar    eax,1
   120f3:	lea    esi,[ecx+eax*1+0x2]
   120f7:	xor    ecx,ecx
   120f9:	push   0x2
   120fb:	pop    edx
   120fc:	mov    eax,esi
   120fe:	mul    edx
   12100:	seto   cl
   12103:	neg    ecx
   12105:	or     ecx,eax
   12107:	push   ecx
   12108:	call   0x11c16
   1210d:	mov    edi,eax
   1210f:	lea    eax,[esi+esi*1]
   12112:	push   eax
   12113:	push   ebx
   12114:	push   edi
   12115:	mov    DWORD PTR [ebp-0x40c],edi
   1211b:	call   0x1b3e8
   12120:	mov    eax,DWORD PTR [ebp-0x418]
   12126:	add    esp,0x10
   12129:	mov    ecx,eax
   1212b:	mov    dx,WORD PTR [eax]
   1212e:	inc    eax
   1212f:	inc    eax
   12130:	cmp    dx,bx
   12133:	jne    0x1212b
   12135:	sub    eax,ecx
   12137:	dec    edi
   12138:	mov    esi,ecx
   1213a:	dec    edi
   1213b:	mov    cx,WORD PTR [edi+0x2]
   1213f:	inc    edi
   12140:	inc    edi
   12141:	cmp    cx,bx
   12144:	jne    0x1213b
   12146:	mov    ecx,eax
   12148:	shr    ecx,0x2
   1214b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1214d:	mov    ecx,eax
   1214f:	and    ecx,0x3
   12152:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   12154:	mov    edi,DWORD PTR [ebp-0x40c]
   1215a:	dec    edi
   1215b:	dec    edi
   1215c:	mov    ax,WORD PTR [edi+0x2]
   12160:	inc    edi
   12161:	inc    edi
   12162:	cmp    ax,bx
   12165:	jne    0x1215c
   12167:	mov    esi,0x1b79a
   1216c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1216d:	mov    eax,DWORD PTR [ebp-0x3f8]
   12173:	shr    eax,1
   12175:	push   eax
   12176:	lea    eax,[ebp-0x3f4]
   1217c:	push   eax
   1217d:	push   DWORD PTR [ebp-0x40c]
   12183:	call   0x1b3f4
   12188:	mov    esi,DWORD PTR [ebp-0x40c]
   1218e:	mov    eax,esi
   12190:	add    esp,0xc
   12193:	mov    DWORD PTR [ebp-0x41c],esi
   12199:	lea    edx,[eax+0x2]
   1219c:	mov    cx,WORD PTR [eax]
   1219f:	inc    eax
   121a0:	inc    eax
   121a1:	cmp    cx,bx
   121a4:	jne    0x1219c
   121a6:	sub    eax,edx
   121a8:	sar    eax,1
   121aa:	add    eax,eax
   121ac:	mov    WORD PTR [ebp-0x41e],ax
   121b3:	mov    WORD PTR [ebp-0x420],ax
   121ba:	lea    eax,[ebp-0x420]
   121c0:	mov    DWORD PTR [ebp-0x434],eax
   121c6:	lea    eax,[ebp-0x43c]
   121cc:	push   eax
   121cd:	push   0xf003f
   121d2:	lea    eax,[ebp-0x414]
   121d8:	push   eax
   121d9:	mov    DWORD PTR [ebp-0x43c],0x18
   121e3:	mov    DWORD PTR [ebp-0x438],ebx
   121e9:	mov    DWORD PTR [ebp-0x430],0x40
   121f3:	mov    DWORD PTR [ebp-0x42c],ebx
   121f9:	mov    DWORD PTR [ebp-0x428],ebx
   121ff:	call   0x11302
   12204:	call   eax
   12206:	push   esi
   12207:	test   eax,eax
   12209:	jl     0x12292
   1220f:	push   DWORD PTR [ebp-0x414]
   12215:	call   0x1206a
   1221a:	push   esi
   1221b:	mov    BYTE PTR [ebp-0x405],al
   12221:	call   0x11c4c
   12226:	pop    ecx
   12227:	push   DWORD PTR [ebp-0x414]
   1222d:	call   0x1132c
   12232:	call   eax
   12234:	test   eax,eax
   12236:	jl     0x12298
   12238:	cmp    BYTE PTR [ebp-0x405],bl
   1223e:	je     0x12298
   12240:	push   0x3ff
   12245:	lea    eax,[ebp-0x403]
   1224b:	push   ebx
   1224c:	push   eax
   1224d:	mov    BYTE PTR [ebp-0x404],bl
   12253:	call   0x1b3e8
   12258:	add    esp,0xc
   1225b:	lea    eax,[ebp-0x410]
   12261:	push   eax
   12262:	push   0x400
   12267:	lea    eax,[ebp-0x404]
   1226d:	push   eax
   1226e:	push   ebx
   1226f:	push   ebx
   12270:	push   DWORD PTR [ebp-0x424]
   12276:	mov    DWORD PTR [ebp-0x410],ebx
   1227c:	call   0x11620
   12281:	call   eax
   12283:	cmp    eax,0x8000001a
   12288:	jne    0x120cc
   1228e:	mov    al,0x1
   12290:	jmp    0x1229a
   12292:	call   0x11c4c
   12297:	pop    ecx
   12298:	xor    al,al
   1229a:	mov    ecx,DWORD PTR [ebp-0x4]
   1229d:	pop    edi
   1229e:	pop    esi
   1229f:	xor    ecx,ebp
   122a1:	pop    ebx
   122a2:	call   0x1b38f
   122a7:	leave  
   122a8:	ret    0x8
   122ab:	int3   
   122ac:	int3   
   122ad:	int3   
   122ae:	int3   
   122af:	int3   
   122b0:	mov    eax,ds:0x72f18
   122b5:	test   eax,eax
   122b7:	je     0x122c8
   122b9:	push   eax
   122ba:	call   0x1169e
   122bf:	call   eax
   122c1:	and    DWORD PTR ds:0x72f18,0x0
   122c8:	ret    
   122c9:	int3   
   122ca:	int3   
   122cb:	int3   
   122cc:	int3   
   122cd:	int3   
   122ce:	push   0x28
   122d0:	push   0x720a8
   122d5:	call   0x1b424
   122da:	xor    eax,eax
   122dc:	mov    DWORD PTR [ebp-0x28],eax
   122df:	mov    DWORD PTR [ebp-0x2c],eax
   122e2:	mov    ebx,DWORD PTR [ebp+0x8]
   122e5:	cmp    ebx,eax
   122e7:	jne    0x122f0
   122e9:	xor    eax,eax
   122eb:	jmp    0x123cd
   122f0:	mov    DWORD PTR [ebp-0x4],eax
   122f3:	lea    ecx,[ebp-0x2c]
   122f6:	push   ecx
   122f7:	push   eax
   122f8:	push   0x1
   122fa:	push   ebx
   122fb:	call   0x113fe
   12300:	call   eax
   12302:	mov    edx,eax
   12304:	sub    edx,ebx
   12306:	mov    DWORD PTR [ebp-0x38],edx
   12309:	mov    esi,DWORD PTR [eax+0x1c]
   1230c:	add    esi,ebx
   1230e:	mov    edi,DWORD PTR [eax+0x24]
   12311:	add    edi,ebx
   12313:	mov    ecx,DWORD PTR [eax+0x20]
   12316:	add    ecx,ebx
   12318:	and    DWORD PTR [ebp-0x20],0x0
   1231c:	mov    ebx,DWORD PTR [ebp-0x20]
   1231f:	cmp    ebx,DWORD PTR [eax+0x18]
   12322:	jae    0x123b5
   12328:	movsx  ebx,WORD PTR [edi+ebx*2]
   1232c:	cmp    ebx,DWORD PTR [eax+0x14]
   1232f:	jae    0x123a9
   12331:	lea    ebx,[esi+ebx*4]
   12334:	mov    DWORD PTR [ebp-0x34],ebx
   12337:	cmp    DWORD PTR [ebx],edx
   12339:	jb     0x12347
   1233b:	mov    ebx,DWORD PTR [ebp-0x2c]
   1233e:	add    edx,ebx
   12340:	mov    ebx,DWORD PTR [ebp-0x34]
   12343:	cmp    DWORD PTR [ebx],edx
   12345:	jb     0x1239e
   12347:	mov    edx,DWORD PTR [ebp+0xc]
   1234a:	mov    DWORD PTR [ebp-0x30],edx
   1234d:	mov    edx,DWORD PTR [ebp-0x20]
   12350:	mov    edx,DWORD PTR [ecx+edx*4]
   12353:	add    edx,DWORD PTR [ebp+0x8]
   12356:	mov    DWORD PTR [ebp-0x24],edx
   12359:	mov    dl,BYTE PTR [edx]
   1235b:	mov    ebx,DWORD PTR [ebp-0x30]
   1235e:	cmp    dl,BYTE PTR [ebx]
   12360:	jne    0x1238b
   12362:	test   dl,dl
   12364:	je     0x12387
   12366:	mov    edx,DWORD PTR [ebp-0x24]
   12369:	mov    dl,BYTE PTR [edx+0x1]
   1236c:	mov    BYTE PTR [ebp-0x19],dl
   1236f:	cmp    dl,BYTE PTR [ebx+0x1]
   12372:	jne    0x1238b
   12374:	mov    edx,DWORD PTR [ebp-0x24]
   12377:	inc    edx
   12378:	inc    edx
   12379:	mov    DWORD PTR [ebp-0x24],edx
   1237c:	inc    ebx
   1237d:	inc    ebx
   1237e:	mov    DWORD PTR [ebp-0x30],ebx
   12381:	cmp    BYTE PTR [ebp-0x19],0x0
   12385:	jne    0x12359
   12387:	xor    edx,edx
   12389:	jmp    0x12390
   1238b:	sbb    edx,edx
   1238d:	sbb    edx,0xffffffff
   12390:	test   edx,edx
   12392:	jne    0x1239e
   12394:	mov    eax,DWORD PTR [ebp-0x34]
   12397:	mov    eax,DWORD PTR [eax]
   12399:	add    eax,DWORD PTR [ebp+0x8]
   1239c:	jmp    0x123c3
   1239e:	inc    DWORD PTR [ebp-0x20]
   123a1:	mov    edx,DWORD PTR [ebp-0x38]
   123a4:	jmp    0x1231c
   123a9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   123b0:	jmp    0x122e9
   123b5:	mov    eax,DWORD PTR [ebp-0x28]
   123b8:	jmp    0x123c6
   123ba:	xor    eax,eax
   123bc:	inc    eax
   123bd:	ret    
   123be:	mov    esp,DWORD PTR [ebp-0x18]
   123c1:	xor    eax,eax
   123c3:	mov    DWORD PTR [ebp-0x28],eax
   123c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   123cd:	call   0x1b469
   123d2:	ret    0x8
   123d5:	int3   
   123d6:	int3   
   123d7:	int3   
   123d8:	int3   
   123d9:	int3   
   123da:	mov    edi,edi
   123dc:	push   ebp
   123dd:	mov    ebp,esp
   123df:	sub    esp,0x48
   123e2:	mov    eax,DWORD PTR [ebp+0xc]
   123e5:	mov    eax,DWORD PTR [eax]
   123e7:	push   edi
   123e8:	mov    DWORD PTR [ebp-0x30],eax
   123eb:	lea    eax,[ebp-0x30]
   123ee:	push   eax
   123ef:	lea    eax,[ebp-0x48]
   123f2:	push   eax
   123f3:	xor    edi,edi
   123f5:	push   0x1f0fff
   123fa:	lea    eax,[ebp-0x10]
   123fd:	push   eax
   123fe:	mov    DWORD PTR [ebp-0x48],0x18
   12405:	mov    DWORD PTR [ebp-0x44],edi
   12408:	mov    DWORD PTR [ebp-0x3c],0x200
   1240f:	mov    DWORD PTR [ebp-0x40],edi
   12412:	mov    DWORD PTR [ebp-0x38],edi
   12415:	mov    DWORD PTR [ebp-0x34],edi
   12418:	mov    DWORD PTR [ebp-0x2c],edi
   1241b:	mov    DWORD PTR [ebp-0x10],edi
   1241e:	call   0x11188
   12423:	call   eax
   12425:	test   eax,eax
   12427:	jl     0x1277c
   1242d:	push   ebx
   1242e:	push   esi
   1242f:	push   0x40
   12431:	mov    esi,0x1000
   12436:	push   esi
   12437:	lea    eax,[ebp-0x14]
   1243a:	push   eax
   1243b:	push   edi
   1243c:	lea    eax,[ebp-0xc]
   1243f:	push   eax
   12440:	push   DWORD PTR [ebp-0x10]
   12443:	mov    ebx,0x400
   12448:	mov    DWORD PTR [ebp-0xc],edi
   1244b:	mov    DWORD PTR [ebp-0x14],ebx
   1244e:	call   0x111b2
   12453:	call   eax
   12455:	test   eax,eax
   12457:	jl     0x12462
   12459:	mov    eax,DWORD PTR [ebp-0xc]
   1245c:	mov    ecx,DWORD PTR [ebp+0xc]
   1245f:	mov    DWORD PTR [ecx+0x8],eax
   12462:	push   0x4
   12464:	push   esi
   12465:	lea    eax,[ebp-0x14]
   12468:	push   eax
   12469:	push   edi
   1246a:	lea    eax,[ebp-0x18]
   1246d:	push   eax
   1246e:	push   DWORD PTR [ebp-0x10]
   12471:	mov    DWORD PTR [ebp-0x18],edi
   12474:	mov    DWORD PTR [ebp-0x14],ebx
   12477:	call   0x111b2
   1247c:	call   eax
   1247e:	test   eax,eax
   12480:	jl     0x1248b
   12482:	mov    eax,DWORD PTR [ebp-0x18]
   12485:	mov    ecx,DWORD PTR [ebp+0xc]
   12488:	mov    DWORD PTR [ecx+0xc],eax
   1248b:	lea    eax,[ebp-0x24]
   1248e:	push   eax
   1248f:	push   DWORD PTR [ebp-0x30]
   12492:	call   0x111dc
   12497:	call   eax
   12499:	test   eax,eax
   1249b:	jl     0x1277a
   124a1:	push   DWORD PTR [ebp-0x24]
   124a4:	call   0x116f2
   124a9:	call   eax
   124ab:	mov    eax,DWORD PTR [ebp-0xc]
   124ae:	mov    DWORD PTR [ebp-0x20],edi
   124b1:	cmp    eax,edi
   124b3:	je     0x12760
   124b9:	mov    esi,DWORD PTR [ebp-0x18]
   124bc:	cmp    esi,edi
   124be:	je     0x126cd
   124c4:	push   0x214
   124c9:	push   edi
   124ca:	push   esi
   124cb:	mov    DWORD PTR [ebp-0x4],eax
   124ce:	call   0x1b3e8
   124d3:	mov    eax,DWORD PTR [ebp-0x4]
   124d6:	add    esp,0xc
   124d9:	push   0x60
   124db:	lea    ebx,[esi+0xc]
   124de:	push   eax
   124df:	mov    DWORD PTR [ebx],edi
   124e1:	mov    DWORD PTR [esi],edi
   124e3:	mov    DWORD PTR [ebp-0x20],eax
   124e6:	call   0x18780
   124eb:	push   0x68
   124ed:	push   eax
   124ee:	call   0x18780
   124f3:	push   ebx
   124f4:	push   eax
   124f5:	call   0x18798
   124fa:	push   0x6a
   124fc:	pop    ebx
   124fd:	push   ebx
   124fe:	push   eax
   124ff:	call   0x18780
   12504:	push   edi
   12505:	push   eax
   12506:	call   0x18780
   1250b:	push   ebx
   1250c:	push   eax
   1250d:	call   0x18780
   12512:	push   edi
   12513:	push   eax
   12514:	call   0x18780
   12519:	push   0x68
   1251b:	push   eax
   1251c:	call   0x18780
   12521:	push   edi
   12522:	push   eax
   12523:	mov    DWORD PTR [ebp-0x28],eax
   12526:	call   0x18798
   1252b:	push   ebx
   1252c:	push   eax
   1252d:	call   0x18780
   12532:	push   edi
   12533:	push   eax
   12534:	call   0x18780
   12539:	push   ebx
   1253a:	push   eax
   1253b:	call   0x18780
   12540:	push   edi
   12541:	push   eax
   12542:	call   0x18780
   12547:	push   0xb8
   1254c:	push   eax
   1254d:	call   0x18780
   12552:	push   DWORD PTR ds:0x72f60
   12558:	push   eax
   12559:	call   0x18798
   1255e:	mov    ebx,0xc00b
   12563:	push   ebx
   12564:	push   eax
   12565:	call   0x187b2
   1256a:	push   0x74
   1256c:	push   eax
   1256d:	call   0x18780
   12572:	push   0x9
   12574:	push   eax
   12575:	call   0x18780
   1257a:	mov    edi,0xd0ff
   1257f:	push   edi
   12580:	push   eax
   12581:	call   0x187b2
   12586:	push   0xb9
   1258b:	push   eax
   1258c:	call   0x18780
   12591:	lea    ecx,[esi+0x10]
   12594:	push   ecx
   12595:	push   eax
   12596:	call   0x18798
   1259b:	push   0x189
   125a0:	push   eax
   125a1:	call   0x187b2
   125a6:	push   0x61
   125a8:	push   eax
   125a9:	call   0x18780
   125ae:	and    DWORD PTR [ebp-0x8],0x0
   125b2:	mov    DWORD PTR [ebp-0x4],eax
   125b5:	mov    eax,DWORD PTR [ebp+0x8]
   125b8:	mov    DWORD PTR [ebp-0x1c],eax
   125bb:	push   0x0
   125bd:	push   DWORD PTR [ebp-0x1c]
   125c0:	push   DWORD PTR [ebp-0x4]
   125c3:	call   0x18f34
   125c8:	mov    ecx,eax
   125ca:	sub    ecx,DWORD PTR [ebp-0x1c]
   125cd:	mov    DWORD PTR [ebp-0x1c],eax
   125d0:	add    DWORD PTR [ebp-0x8],ecx
   125d3:	add    DWORD PTR [ebp-0x4],ecx
   125d6:	cmp    DWORD PTR [ebp-0x8],0x5
   125da:	jb     0x125bb
   125dc:	mov    ecx,DWORD PTR [ebp+0x8]
   125df:	push   DWORD PTR [ebp-0x4]
   125e2:	mov    eax,DWORD PTR [ebp-0x8]
   125e5:	add    eax,ecx
   125e7:	push   eax
   125e8:	call   0x187f6
   125ed:	push   eax
   125ee:	push   DWORD PTR [ebp-0x28]
   125f1:	mov    DWORD PTR [ebp-0x4],eax
   125f4:	call   0x18798
   125f9:	mov    eax,DWORD PTR [ebp-0x4]
   125fc:	push   0xeb
   12601:	push   eax
   12602:	mov    DWORD PTR [esi],eax
   12604:	call   0x18780
   12609:	push   0x0
   1260b:	push   eax
   1260c:	mov    DWORD PTR [esi+0x4],eax
   1260f:	call   0x18780
   12614:	push   0x68
   12616:	push   eax
   12617:	call   0x18780
   1261c:	push   0x3e8
   12621:	push   eax
   12622:	call   0x18798
   12627:	push   0xb8
   1262c:	push   eax
   1262d:	call   0x18780
   12632:	push   DWORD PTR ds:0x72f64
   12638:	push   eax
   12639:	call   0x18798
   1263e:	push   ebx
   1263f:	push   eax
   12640:	call   0x187b2
   12645:	push   0x74
   12647:	push   eax
   12648:	call   0x18780
   1264d:	push   0x2
   1264f:	push   eax
   12650:	call   0x18780
   12655:	push   edi
   12656:	push   eax
   12657:	call   0x187b2
   1265c:	push   eax
   1265d:	push   DWORD PTR [esi]
   1265f:	call   0x187f6
   12664:	mov    cl,al
   12666:	sub    cl,BYTE PTR [esi+0x4]
   12669:	push   0x68
   1266b:	dec    cl
   1266d:	push   eax
   1266e:	mov    BYTE PTR [esi+0x8],cl
   12671:	call   0x18780
   12676:	add    esi,0x14
   12679:	push   esi
   1267a:	push   eax
   1267b:	call   0x18798
   12680:	push   0xb8
   12685:	push   eax
   12686:	call   0x18780
   1268b:	push   DWORD PTR ds:0x72f58
   12691:	push   eax
   12692:	call   0x18798
   12697:	push   ebx
   12698:	push   eax
   12699:	call   0x187b2
   1269e:	push   0x74
   126a0:	push   eax
   126a1:	call   0x18780
   126a6:	push   0x2
   126a8:	push   eax
   126a9:	call   0x18780
   126ae:	push   edi
   126af:	push   eax
   126b0:	call   0x187b2
   126b5:	push   0xc2
   126ba:	push   eax
   126bb:	call   0x18780
   126c0:	push   0x4
   126c2:	push   eax
   126c3:	call   0x187b2
   126c8:	mov    eax,DWORD PTR [ebp-0xc]
   126cb:	xor    edi,edi
   126cd:	cmp    eax,edi
   126cf:	je     0x12760
   126d5:	add    eax,0x400
   126da:	lea    esi,[eax-0xc]
   126dd:	lea    ecx,[eax-0x8]
   126e0:	push   esi
   126e1:	lea    ebx,[eax-0x4]
   126e4:	lea    edx,[eax-0x10]
   126e7:	push   0x40
   126e9:	add    eax,0xffffffe8
   126ec:	push   ecx
   126ed:	mov    DWORD PTR [ebp-0x1c],eax
   126f0:	mov    eax,DWORD PTR [ebp+0x8]
   126f3:	mov    DWORD PTR [ebx],eax
   126f5:	push   ebx
   126f6:	mov    DWORD PTR [ecx],0x5
   126fc:	push   0xffffffff
   126fe:	mov    DWORD PTR [ebp-0x8],ecx
   12701:	mov    DWORD PTR [ebp-0x28],edx
   12704:	mov    DWORD PTR [esi],edi
   12706:	call   DWORD PTR ds:0x72edc
   1270c:	test   eax,eax
   1270e:	jl     0x12760
   12710:	mov    eax,DWORD PTR [ebp-0x20]
   12713:	sub    eax,DWORD PTR [ebp+0x8]
   12716:	sub    eax,0x5
   12719:	push   eax
   1271a:	mov    eax,DWORD PTR [ebp-0x1c]
   1271d:	inc    eax
   1271e:	push   eax
   1271f:	call   0x18798
   12724:	push   0xe9
   12729:	push   DWORD PTR [ebp-0x1c]
   1272c:	call   0x18780
   12731:	mov    eax,DWORD PTR [ebp-0x28]
   12734:	push   eax
   12735:	push   0x5
   12737:	push   DWORD PTR [ebp-0x1c]
   1273a:	mov    DWORD PTR [eax],edi
   1273c:	push   DWORD PTR [ebp+0x8]
   1273f:	push   0xffffffff
   12741:	call   DWORD PTR ds:0x72ed0
   12747:	mov    eax,DWORD PTR [ebp+0xc]
   1274a:	mov    BYTE PTR [eax+0x10],0x1
   1274e:	lea    eax,[ebp-0x20]
   12751:	push   eax
   12752:	push   DWORD PTR [esi]
   12754:	push   DWORD PTR [ebp-0x8]
   12757:	push   ebx
   12758:	push   0xffffffff
   1275a:	call   DWORD PTR ds:0x72edc
   12760:	call   0x116c8
   12765:	call   eax
   12767:	mov    ecx,DWORD PTR [ebp-0x24]
   1276a:	call   DWORD PTR ds:0x1ca50
   12770:	push   DWORD PTR [ebp-0x10]
   12773:	call   0x114a6
   12778:	call   eax
   1277a:	pop    esi
   1277b:	pop    ebx
   1277c:	pop    edi
   1277d:	leave  
   1277e:	ret    0x8
   12781:	int3   
   12782:	int3   
   12783:	int3   
   12784:	int3   
   12785:	int3   
   12786:	mov    edi,edi
   12788:	push   ebp
   12789:	mov    ebp,esp
   1278b:	sub    esp,0x18
   1278e:	and    DWORD PTR [ebp-0x18],0x0
   12792:	push   edi
   12793:	xor    eax,eax
   12795:	lea    edi,[ebp-0x14]
   12798:	stos   DWORD PTR es:[edi],eax
   12799:	stos   DWORD PTR es:[edi],eax
   1279a:	stos   DWORD PTR es:[edi],eax
   1279b:	stos   DWORD PTR es:[edi],eax
   1279c:	lea    eax,[ebp-0x18]
   1279f:	push   eax
   127a0:	push   0x1
   127a2:	call   0x11e02
   127a7:	pop    edi
   127a8:	test   al,al
   127aa:	je     0x12801
   127ac:	cmp    DWORD PTR [ebp-0x18],0x0
   127b0:	je     0x12801
   127b2:	lea    eax,[ebp-0x4]
   127b5:	push   eax
   127b6:	push   DWORD PTR [ebp-0x18]
   127b9:	call   0x111dc
   127be:	call   eax
   127c0:	test   eax,eax
   127c2:	jl     0x12801
   127c4:	push   esi
   127c5:	push   DWORD PTR [ebp-0x4]
   127c8:	call   0x116f2
   127cd:	call   eax
   127cf:	mov    esi,DWORD PTR [ebp-0xc]
   127d2:	mov    eax,DWORD PTR [ebp+0x8]
   127d5:	lea    edx,[esi+0x14]
   127d8:	sub    edx,eax
   127da:	movzx  ecx,WORD PTR [eax]
   127dd:	mov    WORD PTR [edx+eax*1],cx
   127e1:	inc    eax
   127e2:	inc    eax
   127e3:	test   cx,cx
   127e6:	jne    0x127da
   127e8:	mov    eax,DWORD PTR [esi+0x4]
   127eb:	mov    cl,BYTE PTR [esi+0x8]
   127ee:	mov    BYTE PTR [eax],cl
   127f0:	call   0x116c8
   127f5:	call   eax
   127f7:	mov    ecx,DWORD PTR [ebp-0x4]
   127fa:	call   DWORD PTR ds:0x1ca50
   12800:	pop    esi
   12801:	leave  
   12802:	ret    0x4
   12805:	int3   
   12806:	int3   
   12807:	int3   
   12808:	int3   
   12809:	int3   
   1280a:	mov    edi,edi
   1280c:	push   ebp
   1280d:	mov    ebp,esp
   1280f:	push   ecx
   12810:	and    DWORD PTR [ebp-0x4],0x0
   12814:	push   ebx
   12815:	push   esi
   12816:	push   edi
   12817:	mov    esi,0x1000
   1281c:	push   0x20736649
   12821:	push   esi
   12822:	push   0x0
   12824:	call   0x115a2
   12829:	call   eax
   1282b:	mov    edi,eax
   1282d:	test   edi,edi
   1282f:	je     0x12864
   12831:	lea    eax,[ebp-0x4]
   12834:	push   eax
   12835:	push   esi
   12836:	push   edi
   12837:	push   DWORD PTR [ebp+0x8]
   1283a:	call   0x112d8
   1283f:	call   eax
   12841:	mov    ebx,eax
   12843:	cmp    ebx,0xc0000004
   12849:	jne    0x12857
   1284b:	push   0x0
   1284d:	push   edi
   1284e:	call   0x1154e
   12853:	call   eax
   12855:	add    esi,esi
   12857:	test   ebx,ebx
   12859:	jne    0x1281c
   1285b:	mov    eax,edi
   1285d:	pop    edi
   1285e:	pop    esi
   1285f:	pop    ebx
   12860:	leave  
   12861:	ret    0x4
   12864:	xor    eax,eax
   12866:	jmp    0x1285d
   12868:	int3   
   12869:	int3   
   1286a:	int3   
   1286b:	int3   
   1286c:	int3   
   1286d:	int3   
   1286e:	push   0x0
   12870:	push   0x72ee8
   12875:	call   0x1193e
   1287a:	call   eax
   1287c:	push   0x100
   12881:	push   0x0
   12883:	push   0x725b0
   12888:	call   0x1b3e8
   1288d:	add    esp,0xc
   12890:	ret    
   12891:	int3   
   12892:	int3   
   12893:	int3   
   12894:	int3   
   12895:	int3   
   12896:	mov    edi,edi
   12898:	push   ebp
   12899:	mov    ebp,esp
   1289b:	push   ebx
   1289c:	mov    ebx,DWORD PTR [ebp+0x8]
   1289f:	cmp    ebx,0x40
   128a2:	ja     0x128d1
   128a4:	push   esi
   128a5:	push   edi
   128a6:	xor    edi,edi
   128a8:	push   edi
   128a9:	push   edi
   128aa:	push   edi
   128ab:	push   edi
   128ac:	mov    esi,0x72ee8
   128b1:	push   esi
   128b2:	call   0x11968
   128b7:	call   eax
   128b9:	test   eax,eax
   128bb:	jl     0x128cf
   128bd:	push   edi
   128be:	lea    eax,[ebx*4+0x725b0]
   128c5:	inc    DWORD PTR [eax]
   128c7:	push   esi
   128c8:	call   0x11992
   128cd:	call   eax
   128cf:	pop    edi
   128d0:	pop    esi
   128d1:	pop    ebx
   128d2:	pop    ebp
   128d3:	ret    0x4
   128d6:	int3   
   128d7:	int3   
   128d8:	int3   
   128d9:	int3   
   128da:	int3   
   128db:	int3   
   128dc:	mov    edi,edi
   128de:	push   ebp
   128df:	mov    ebp,esp
   128e1:	push   ebx
   128e2:	push   esi
   128e3:	push   edi
   128e4:	mov    edi,DWORD PTR [ebp+0x8]
   128e7:	cmp    edi,0x40
   128ea:	ja     0x12917
   128ec:	xor    ebx,ebx
   128ee:	push   ebx
   128ef:	push   ebx
   128f0:	push   ebx
   128f1:	push   ebx
   128f2:	mov    esi,0x72ee8
   128f7:	push   esi
   128f8:	call   0x11968
   128fd:	call   eax
   128ff:	test   eax,eax
   12901:	jl     0x12917
   12903:	mov    edi,DWORD PTR [edi*4+0x725b0]
   1290a:	push   ebx
   1290b:	push   esi
   1290c:	call   0x11992
   12911:	call   eax
   12913:	mov    eax,edi
   12915:	jmp    0x12919
   12917:	xor    eax,eax
   12919:	pop    edi
   1291a:	pop    esi
   1291b:	pop    ebx
   1291c:	pop    ebp
   1291d:	ret    0x4
   12920:	int3   
   12921:	int3   
   12922:	int3   
   12923:	int3   
   12924:	int3   
   12925:	int3   
   12926:	mov    edi,edi
   12928:	push   ebp
   12929:	mov    ebp,esp
   1292b:	push   ebx
   1292c:	push   esi
   1292d:	push   edi
   1292e:	mov    edi,DWORD PTR [ebp+0x8]
   12931:	mov    eax,DWORD PTR [edi+0x4]
   12934:	mov    esi,ecx
   12936:	mov    ebx,DWORD PTR [esi]
   12938:	mov    DWORD PTR [esi+0x4],eax
   1293b:	inc    eax
   1293c:	push   eax
   1293d:	call   0x11c16
   12942:	push   DWORD PTR [esi+0x4]
   12945:	mov    DWORD PTR [esi],eax
   12947:	push   DWORD PTR [edi]
   12949:	push   eax
   1294a:	call   0x1b400
   1294f:	mov    eax,DWORD PTR [esi+0x4]
   12952:	mov    ecx,DWORD PTR [esi]
   12954:	push   ebx
   12955:	mov    BYTE PTR [eax+ecx*1],0x0
   12959:	call   0x11c4c
   1295e:	add    esp,0x14
   12961:	pop    edi
   12962:	mov    eax,esi
   12964:	pop    esi
   12965:	pop    ebx
   12966:	pop    ebp
   12967:	ret    0x4
   1296a:	int3   
   1296b:	int3   
   1296c:	int3   
   1296d:	int3   
   1296e:	int3   
   1296f:	int3   
   12970:	mov    edi,edi
   12972:	push   ebp
   12973:	mov    ebp,esp
   12975:	push   esi
   12976:	mov    esi,DWORD PTR [ebp+0x8]
   12979:	push   edi
   1297a:	mov    edi,ecx
   1297c:	cmp    edi,esi
   1297e:	je     0x129ab
   12980:	mov    eax,DWORD PTR [edi+0x4]
   12983:	cmp    eax,DWORD PTR [esi+0x4]
   12986:	je     0x1299a
   12988:	cmp    BYTE PTR [edi],0x0
   1298b:	je     0x12994
   1298d:	push   eax
   1298e:	call   0x11c4c
   12993:	pop    ecx
   12994:	mov    al,BYTE PTR [esi]
   12996:	mov    BYTE PTR [edi],al
   12998:	jmp    0x129a2
   1299a:	cmp    BYTE PTR [esi],0x0
   1299d:	je     0x129a2
   1299f:	mov    BYTE PTR [edi],0x1
   129a2:	mov    eax,DWORD PTR [esi+0x4]
   129a5:	mov    BYTE PTR [esi],0x0
   129a8:	mov    DWORD PTR [edi+0x4],eax
   129ab:	mov    eax,edi
   129ad:	pop    edi
   129ae:	pop    esi
   129af:	pop    ebp
   129b0:	ret    0x4
   129b3:	int3   
   129b4:	int3   
   129b5:	int3   
   129b6:	int3   
   129b7:	int3   
   129b8:	mov    edi,edi
   129ba:	push   esi
   129bb:	push   edi
   129bc:	push   0x20736649
   129c1:	push   0x20
   129c3:	push   0x0
   129c5:	mov    esi,ecx
   129c7:	call   0x115a2
   129cc:	call   eax
   129ce:	push   0x0
   129d0:	mov    edi,eax
   129d2:	push   0x1
   129d4:	mov    ecx,esi
   129d6:	mov    DWORD PTR [esi],edi
   129d8:	call   0x10d94
   129dd:	mov    DWORD PTR [esi+0x8],eax
   129e0:	mov    DWORD PTR [esi+0xc],edx
   129e3:	test   edi,edi
   129e5:	jne    0x129f3
   129e7:	push   0xc000009a
   129ec:	call   0x114fa
   129f1:	call   eax
   129f3:	pop    edi
   129f4:	mov    eax,esi
   129f6:	pop    esi
   129f7:	ret    
   129f8:	int3   
   129f9:	int3   
   129fa:	int3   
   129fb:	int3   
   129fc:	int3   
   129fd:	int3   
   129fe:	mov    edi,edi
   12a00:	push   esi
   12a01:	mov    esi,ecx
   12a03:	push   DWORD PTR [esi+0x18]
   12a06:	call   0x11c4c
   12a0b:	push   DWORD PTR [esi+0x10]
   12a0e:	call   0x11c4c
   12a13:	push   DWORD PTR [esi+0x8]
   12a16:	call   0x11c4c
   12a1b:	push   DWORD PTR [esi]
   12a1d:	call   0x11c4c
   12a22:	add    esp,0x10
   12a25:	pop    esi
   12a26:	ret    
   12a27:	int3   
   12a28:	int3   
   12a29:	int3   
   12a2a:	int3   
   12a2b:	int3   
   12a2c:	mov    edi,edi
   12a2e:	push   esi
   12a2f:	mov    esi,ecx
   12a31:	lea    ecx,[esi+0x8]
   12a34:	call   0x129fe
   12a39:	push   DWORD PTR [esi]
   12a3b:	call   0x11c4c
   12a40:	pop    ecx
   12a41:	pop    esi
   12a42:	ret    
   12a43:	int3   
   12a44:	int3   
   12a45:	int3   
   12a46:	int3   
   12a47:	int3   
   12a48:	mov    edi,edi
   12a4a:	push   ebp
   12a4b:	mov    ebp,esp
   12a4d:	push   esi
   12a4e:	mov    esi,DWORD PTR [ebp+0xc]
   12a51:	push   edi
   12a52:	mov    edi,ecx
   12a54:	cmp    esi,0xffffffff
   12a57:	jne    0x12a68
   12a59:	mov    esi,DWORD PTR [ebp+0x8]
   12a5c:	lea    ecx,[esi+0x1]
   12a5f:	mov    al,BYTE PTR [esi]
   12a61:	inc    esi
   12a62:	test   al,al
   12a64:	jne    0x12a5f
   12a66:	sub    esi,ecx
   12a68:	lea    eax,[esi+0x1]
   12a6b:	push   eax
   12a6c:	call   0x11c16
   12a71:	pop    ecx
   12a72:	mov    DWORD PTR [edi],eax
   12a74:	test   eax,eax
   12a76:	jne    0x12a83
   12a78:	push   0xc000009a
   12a7d:	call   DWORD PTR ds:0x1ca20
   12a83:	mov    eax,DWORD PTR [edi]
   12a85:	push   esi
   12a86:	push   DWORD PTR [ebp+0x8]
   12a89:	mov    BYTE PTR [esi+eax*1],0x0
   12a8d:	push   DWORD PTR [edi]
   12a8f:	call   0x1b400
   12a94:	add    esp,0xc
   12a97:	mov    DWORD PTR [edi+0x4],esi
   12a9a:	pop    edi
   12a9b:	pop    esi
   12a9c:	pop    ebp
   12a9d:	ret    0x8
   12aa0:	int3   
   12aa1:	int3   
   12aa2:	int3   
   12aa3:	int3   
   12aa4:	int3   
   12aa5:	int3   
   12aa6:	mov    edi,edi
   12aa8:	push   ebp
   12aa9:	mov    ebp,esp
   12aab:	push   ebx
   12aac:	push   esi
   12aad:	push   edi
   12aae:	mov    edi,DWORD PTR [ebp+0x8]
   12ab1:	mov    eax,DWORD PTR [edi+0x4]
   12ab4:	mov    esi,ecx
   12ab6:	mov    ebx,DWORD PTR [esi]
   12ab8:	mov    DWORD PTR [esi+0x4],eax
   12abb:	xor    ecx,ecx
   12abd:	push   0x2
   12abf:	inc    eax
   12ac0:	pop    edx
   12ac1:	mul    edx
   12ac3:	seto   cl
   12ac6:	neg    ecx
   12ac8:	or     ecx,eax
   12aca:	push   ecx
   12acb:	call   0x11c16
   12ad0:	mov    ecx,DWORD PTR [esi+0x4]
   12ad3:	add    ecx,ecx
   12ad5:	push   ecx
   12ad6:	mov    DWORD PTR [esi],eax
   12ad8:	push   DWORD PTR [edi]
   12ada:	push   eax
   12adb:	call   0x1b400
   12ae0:	mov    eax,DWORD PTR [esi+0x4]
   12ae3:	mov    ecx,DWORD PTR [esi]
   12ae5:	xor    edx,edx
   12ae7:	push   ebx
   12ae8:	mov    WORD PTR [ecx+eax*2],dx
   12aec:	call   0x11c4c
   12af1:	add    esp,0x14
   12af4:	pop    edi
   12af5:	mov    eax,esi
   12af7:	pop    esi
   12af8:	pop    ebx
   12af9:	pop    ebp
   12afa:	ret    0x4
   12afd:	int3   
   12afe:	int3   
   12aff:	int3   
   12b00:	int3   
   12b01:	int3   
   12b02:	mov    edi,edi
   12b04:	push   esi
   12b05:	mov    esi,ecx
   12b07:	push   DWORD PTR [esi+0x8]
   12b0a:	call   0x11c4c
   12b0f:	push   DWORD PTR [esi]
   12b11:	call   0x11c4c
   12b16:	pop    ecx
   12b17:	pop    ecx
   12b18:	pop    esi
   12b19:	ret    
   12b1a:	int3   
   12b1b:	int3   
   12b1c:	int3   
   12b1d:	int3   
   12b1e:	int3   
   12b1f:	int3   
   12b20:	mov    edi,edi
   12b22:	push   ebp
   12b23:	mov    ebp,esp
   12b25:	mov    eax,DWORD PTR [ebp+0x8]
   12b28:	mov    edx,DWORD PTR ds:0x730a8
   12b2e:	jmp    0x12b32
   12b30:	mov    eax,ecx
   12b32:	mov    ecx,DWORD PTR [eax]
   12b34:	cmp    ecx,edx
   12b36:	jne    0x12b30
   12b38:	pop    ebp
   12b39:	ret    0x4
   12b3c:	int3   
   12b3d:	int3   
   12b3e:	int3   
   12b3f:	int3   
   12b40:	int3   
   12b41:	int3   
   12b42:	mov    edi,edi
   12b44:	push   ebp
   12b45:	mov    ebp,esp
   12b47:	push   esi
   12b48:	push   edi
   12b49:	mov    edi,DWORD PTR [ebp+0xc]
   12b4c:	mov    esi,ecx
   12b4e:	cmp    edi,0xffffffff
   12b51:	jne    0x12b5d
   12b53:	push   DWORD PTR [ebp+0x8]
   12b56:	call   0x10960
   12b5b:	mov    edi,eax
   12b5d:	xor    ecx,ecx
   12b5f:	push   0x2
   12b61:	pop    edx
   12b62:	lea    eax,[edi+0x1]
   12b65:	mul    edx
   12b67:	seto   cl
   12b6a:	neg    ecx
   12b6c:	or     ecx,eax
   12b6e:	push   ecx
   12b6f:	call   0x11c16
   12b74:	pop    ecx
   12b75:	mov    DWORD PTR [esi],eax
   12b77:	test   eax,eax
   12b79:	jne    0x12b86
   12b7b:	push   0xc000009a
   12b80:	call   DWORD PTR ds:0x1ca20
   12b86:	mov    ecx,DWORD PTR [esi]
   12b88:	lea    eax,[edi+edi*1]
   12b8b:	push   eax
   12b8c:	push   DWORD PTR [ebp+0x8]
   12b8f:	xor    edx,edx
   12b91:	mov    WORD PTR [eax+ecx*1],dx
   12b95:	push   DWORD PTR [esi]
   12b97:	call   0x1b400
   12b9c:	add    esp,0xc
   12b9f:	mov    DWORD PTR [esi+0x4],edi
   12ba2:	pop    edi
   12ba3:	pop    esi
   12ba4:	pop    ebp
   12ba5:	ret    0x8
   12ba8:	int3   
   12ba9:	int3   
   12baa:	int3   
   12bab:	int3   
   12bac:	int3   
   12bad:	int3   
   12bae:	mov    edi,edi
   12bb0:	push   ebp
   12bb1:	mov    ebp,esp
   12bb3:	mov    eax,DWORD PTR [ecx+0x4]
   12bb6:	mov    ecx,DWORD PTR [eax+0x4]
   12bb9:	mov    edx,DWORD PTR ds:0x730a0
   12bbf:	cmp    ecx,edx
   12bc1:	je     0x12bdc
   12bc3:	push   esi
   12bc4:	mov    esi,DWORD PTR [ebp+0x8]
   12bc7:	mov    esi,DWORD PTR [esi]
   12bc9:	cmp    DWORD PTR [ecx+0xc],esi
   12bcc:	jae    0x12bd3
   12bce:	mov    ecx,DWORD PTR [ecx+0x8]
   12bd1:	jmp    0x12bd7
   12bd3:	mov    eax,ecx
   12bd5:	mov    ecx,DWORD PTR [ecx]
   12bd7:	cmp    ecx,edx
   12bd9:	jne    0x12bc9
   12bdb:	pop    esi
   12bdc:	pop    ebp
   12bdd:	ret    0x4
   12be0:	int3   
   12be1:	int3   
   12be2:	int3   
   12be3:	int3   
   12be4:	int3   
   12be5:	int3   
   12be6:	mov    edi,edi
   12be8:	push   ebp
   12be9:	mov    ebp,esp
   12beb:	mov    edx,DWORD PTR [ebp+0x8]
   12bee:	mov    eax,DWORD PTR [edx+0x8]
   12bf1:	push   esi
   12bf2:	mov    esi,DWORD PTR [eax]
   12bf4:	mov    DWORD PTR [edx+0x8],esi
   12bf7:	mov    esi,DWORD PTR [eax]
   12bf9:	cmp    esi,DWORD PTR ds:0x730a0
   12bff:	je     0x12c04
   12c01:	mov    DWORD PTR [esi+0x4],edx
   12c04:	mov    esi,DWORD PTR [edx+0x4]
   12c07:	mov    DWORD PTR [eax+0x4],esi
   12c0a:	mov    ecx,DWORD PTR [ecx+0x4]
   12c0d:	pop    esi
   12c0e:	cmp    edx,DWORD PTR [ecx+0x4]
   12c11:	jne    0x12c18
   12c13:	mov    DWORD PTR [ecx+0x4],eax
   12c16:	jmp    0x12c26
   12c18:	mov    ecx,DWORD PTR [edx+0x4]
   12c1b:	cmp    edx,DWORD PTR [ecx]
   12c1d:	jne    0x12c23
   12c1f:	mov    DWORD PTR [ecx],eax
   12c21:	jmp    0x12c26
   12c23:	mov    DWORD PTR [ecx+0x8],eax
   12c26:	mov    DWORD PTR [eax],edx
   12c28:	mov    DWORD PTR [edx+0x4],eax
   12c2b:	pop    ebp
   12c2c:	ret    0x4
   12c2f:	int3   
   12c30:	int3   
   12c31:	int3   
   12c32:	int3   
   12c33:	int3   
   12c34:	mov    edi,edi
   12c36:	push   ebp
   12c37:	mov    ebp,esp
   12c39:	mov    edx,DWORD PTR [ebp+0x8]
   12c3c:	mov    eax,DWORD PTR [edx]
   12c3e:	push   esi
   12c3f:	mov    esi,DWORD PTR [eax+0x8]
   12c42:	mov    DWORD PTR [edx],esi
   12c44:	mov    esi,DWORD PTR [eax+0x8]
   12c47:	cmp    esi,DWORD PTR ds:0x730a0
   12c4d:	je     0x12c52
   12c4f:	mov    DWORD PTR [esi+0x4],edx
   12c52:	mov    esi,DWORD PTR [edx+0x4]
   12c55:	mov    DWORD PTR [eax+0x4],esi
   12c58:	mov    ecx,DWORD PTR [ecx+0x4]
   12c5b:	pop    esi
   12c5c:	cmp    edx,DWORD PTR [ecx+0x4]
   12c5f:	jne    0x12c66
   12c61:	mov    DWORD PTR [ecx+0x4],eax
   12c64:	jmp    0x12c75
   12c66:	mov    ecx,DWORD PTR [edx+0x4]
   12c69:	cmp    edx,DWORD PTR [ecx+0x8]
   12c6c:	jne    0x12c73
   12c6e:	mov    DWORD PTR [ecx+0x8],eax
   12c71:	jmp    0x12c75
   12c73:	mov    DWORD PTR [ecx],eax
   12c75:	mov    DWORD PTR [eax+0x8],edx
   12c78:	mov    DWORD PTR [edx+0x4],eax
   12c7b:	pop    ebp
   12c7c:	ret    0x4
   12c7f:	int3   
   12c80:	int3   
   12c81:	int3   
   12c82:	int3   
   12c83:	int3   
   12c84:	mov    edi,edi
   12c86:	push   ebp
   12c87:	mov    ebp,esp
   12c89:	mov    eax,DWORD PTR [ecx+0x4]
   12c8c:	push   esi
   12c8d:	mov    esi,DWORD PTR [eax+0x4]
   12c90:	push   edi
   12c91:	mov    edi,eax
   12c93:	jmp    0x12cae
   12c95:	push   DWORD PTR [ebp+0x8]
   12c98:	lea    eax,[esi+0x10]
   12c9b:	push   eax
   12c9c:	call   0x18740
   12ca1:	test   al,al
   12ca3:	je     0x12caa
   12ca5:	mov    esi,DWORD PTR [esi+0x8]
   12ca8:	jmp    0x12cae
   12caa:	mov    edi,esi
   12cac:	mov    esi,DWORD PTR [esi]
   12cae:	cmp    esi,DWORD PTR ds:0x730a8
   12cb4:	jne    0x12c95
   12cb6:	mov    eax,edi
   12cb8:	pop    edi
   12cb9:	pop    esi
   12cba:	pop    ebp
   12cbb:	ret    0x4
   12cbe:	int3   
   12cbf:	int3   
   12cc0:	int3   
   12cc1:	int3   
   12cc2:	int3   
   12cc3:	int3   
   12cc4:	mov    edi,edi
   12cc6:	push   ebp
   12cc7:	mov    ebp,esp
   12cc9:	mov    eax,DWORD PTR [ecx+0x4]
   12ccc:	push   esi
   12ccd:	mov    esi,DWORD PTR [eax+0x4]
   12cd0:	push   edi
   12cd1:	mov    edi,eax
   12cd3:	jmp    0x12cee
   12cd5:	push   DWORD PTR [ebp+0x8]
   12cd8:	lea    eax,[esi+0xc]
   12cdb:	push   eax
   12cdc:	call   0x18740
   12ce1:	test   al,al
   12ce3:	je     0x12cea
   12ce5:	mov    esi,DWORD PTR [esi+0x8]
   12ce8:	jmp    0x12cee
   12cea:	mov    edi,esi
   12cec:	mov    esi,DWORD PTR [esi]
   12cee:	cmp    esi,DWORD PTR ds:0x730ac
   12cf4:	jne    0x12cd5
   12cf6:	mov    eax,edi
   12cf8:	pop    edi
   12cf9:	pop    esi
   12cfa:	pop    ebp
   12cfb:	ret    0x4
   12cfe:	int3   
   12cff:	int3   
   12d00:	int3   
   12d01:	int3   
   12d02:	int3   
   12d03:	int3   
   12d04:	mov    edi,edi
   12d06:	push   ebp
   12d07:	mov    ebp,esp
   12d09:	mov    eax,DWORD PTR [ecx+0x4]
   12d0c:	mov    ecx,DWORD PTR [eax+0x4]
   12d0f:	mov    edx,DWORD PTR ds:0x730b0
   12d15:	cmp    ecx,edx
   12d17:	je     0x12d32
   12d19:	push   esi
   12d1a:	mov    esi,DWORD PTR [ebp+0x8]
   12d1d:	mov    esi,DWORD PTR [esi]
   12d1f:	cmp    DWORD PTR [ecx+0xc],esi
   12d22:	jge    0x12d29
   12d24:	mov    ecx,DWORD PTR [ecx+0x8]
   12d27:	jmp    0x12d2d
   12d29:	mov    eax,ecx
   12d2b:	mov    ecx,DWORD PTR [ecx]
   12d2d:	cmp    ecx,edx
   12d2f:	jne    0x12d1f
   12d31:	pop    esi
   12d32:	pop    ebp
   12d33:	ret    0x4
   12d36:	int3   
   12d37:	int3   
   12d38:	int3   
   12d39:	int3   
   12d3a:	int3   
   12d3b:	int3   
   12d3c:	mov    edi,edi
   12d3e:	push   ebp
   12d3f:	mov    ebp,esp
   12d41:	mov    eax,DWORD PTR [ecx+0x4]
   12d44:	mov    ecx,DWORD PTR [eax+0x4]
   12d47:	mov    edx,DWORD PTR ds:0x730a0
   12d4d:	cmp    ecx,edx
   12d4f:	je     0x12d6a
   12d51:	push   esi
   12d52:	mov    esi,DWORD PTR [ebp+0x8]
   12d55:	mov    esi,DWORD PTR [esi]
   12d57:	cmp    esi,DWORD PTR [ecx+0xc]
   12d5a:	jae    0x12d62
   12d5c:	mov    eax,ecx
   12d5e:	mov    ecx,DWORD PTR [ecx]
   12d60:	jmp    0x12d65
   12d62:	mov    ecx,DWORD PTR [ecx+0x8]
   12d65:	cmp    ecx,edx
   12d67:	jne    0x12d57
   12d69:	pop    esi
   12d6a:	pop    ebp
   12d6b:	ret    0x4
   12d6e:	int3   
   12d6f:	int3   
   12d70:	int3   
   12d71:	int3   
   12d72:	int3   
   12d73:	int3   
   12d74:	mov    edi,edi
   12d76:	push   ebp
   12d77:	mov    ebp,esp
   12d79:	mov    eax,DWORD PTR [ecx+0x4]
   12d7c:	push   esi
   12d7d:	mov    esi,DWORD PTR [eax+0x4]
   12d80:	push   edi
   12d81:	mov    edi,eax
   12d83:	jmp    0x12d9e
   12d85:	lea    eax,[esi+0x10]
   12d88:	push   eax
   12d89:	push   DWORD PTR [ebp+0x8]
   12d8c:	call   0x18740
   12d91:	test   al,al
   12d93:	je     0x12d9b
   12d95:	mov    edi,esi
   12d97:	mov    esi,DWORD PTR [esi]
   12d99:	jmp    0x12d9e
   12d9b:	mov    esi,DWORD PTR [esi+0x8]
   12d9e:	cmp    esi,DWORD PTR ds:0x730a8
   12da4:	jne    0x12d85
   12da6:	mov    eax,edi
   12da8:	pop    edi
   12da9:	pop    esi
   12daa:	pop    ebp
   12dab:	ret    0x4
   12dae:	int3   
   12daf:	int3   
   12db0:	int3   
   12db1:	int3   
   12db2:	int3   
   12db3:	int3   
   12db4:	mov    edi,edi
   12db6:	push   ebp
   12db7:	mov    ebp,esp
   12db9:	mov    edx,DWORD PTR [ebp+0x8]
   12dbc:	mov    eax,DWORD PTR [edx+0x8]
   12dbf:	push   esi
   12dc0:	mov    esi,DWORD PTR [eax]
   12dc2:	mov    DWORD PTR [edx+0x8],esi
   12dc5:	mov    esi,DWORD PTR [eax]
   12dc7:	cmp    esi,DWORD PTR ds:0x730ac
   12dcd:	je     0x12dd2
   12dcf:	mov    DWORD PTR [esi+0x4],edx
   12dd2:	mov    esi,DWORD PTR [edx+0x4]
   12dd5:	mov    DWORD PTR [eax+0x4],esi
   12dd8:	mov    ecx,DWORD PTR [ecx+0x4]
   12ddb:	pop    esi
   12ddc:	cmp    edx,DWORD PTR [ecx+0x4]
   12ddf:	jne    0x12de6
   12de1:	mov    DWORD PTR [ecx+0x4],eax
   12de4:	jmp    0x12df4
   12de6:	mov    ecx,DWORD PTR [edx+0x4]
   12de9:	cmp    edx,DWORD PTR [ecx]
   12deb:	jne    0x12df1
   12ded:	mov    DWORD PTR [ecx],eax
   12def:	jmp    0x12df4
   12df1:	mov    DWORD PTR [ecx+0x8],eax
   12df4:	mov    DWORD PTR [eax],edx
   12df6:	mov    DWORD PTR [edx+0x4],eax
   12df9:	pop    ebp
   12dfa:	ret    0x4
   12dfd:	int3   
   12dfe:	int3   
   12dff:	int3   
   12e00:	int3   
   12e01:	int3   
   12e02:	mov    edi,edi
   12e04:	push   ebp
   12e05:	mov    ebp,esp
   12e07:	mov    edx,DWORD PTR [ebp+0x8]
   12e0a:	mov    eax,DWORD PTR [edx]
   12e0c:	push   esi
   12e0d:	mov    esi,DWORD PTR [eax+0x8]
   12e10:	mov    DWORD PTR [edx],esi
   12e12:	mov    esi,DWORD PTR [eax+0x8]
   12e15:	cmp    esi,DWORD PTR ds:0x730ac
   12e1b:	je     0x12e20
   12e1d:	mov    DWORD PTR [esi+0x4],edx
   12e20:	mov    esi,DWORD PTR [edx+0x4]
   12e23:	mov    DWORD PTR [eax+0x4],esi
   12e26:	mov    ecx,DWORD PTR [ecx+0x4]
   12e29:	pop    esi
   12e2a:	cmp    edx,DWORD PTR [ecx+0x4]
   12e2d:	jne    0x12e34
   12e2f:	mov    DWORD PTR [ecx+0x4],eax
   12e32:	jmp    0x12e43
   12e34:	mov    ecx,DWORD PTR [edx+0x4]
   12e37:	cmp    edx,DWORD PTR [ecx+0x8]
   12e3a:	jne    0x12e41
   12e3c:	mov    DWORD PTR [ecx+0x8],eax
   12e3f:	jmp    0x12e43
   12e41:	mov    DWORD PTR [ecx],eax
   12e43:	mov    DWORD PTR [eax+0x8],edx
   12e46:	mov    DWORD PTR [edx+0x4],eax
   12e49:	pop    ebp
   12e4a:	ret    0x4
   12e4d:	int3   
   12e4e:	int3   
   12e4f:	int3   
   12e50:	int3   
   12e51:	int3   
   12e52:	mov    edi,edi
   12e54:	push   ebp
   12e55:	mov    ebp,esp
   12e57:	mov    eax,DWORD PTR [ecx+0x4]
   12e5a:	push   esi
   12e5b:	mov    esi,DWORD PTR [eax+0x4]
   12e5e:	push   edi
   12e5f:	mov    edi,eax
   12e61:	jmp    0x12e7c
   12e63:	lea    eax,[esi+0xc]
   12e66:	push   eax
   12e67:	push   DWORD PTR [ebp+0x8]
   12e6a:	call   0x18740
   12e6f:	test   al,al
   12e71:	je     0x12e79
   12e73:	mov    edi,esi
   12e75:	mov    esi,DWORD PTR [esi]
   12e77:	jmp    0x12e7c
   12e79:	mov    esi,DWORD PTR [esi+0x8]
   12e7c:	cmp    esi,DWORD PTR ds:0x730ac
   12e82:	jne    0x12e63
   12e84:	mov    eax,edi
   12e86:	pop    edi
   12e87:	pop    esi
   12e88:	pop    ebp
   12e89:	ret    0x4
   12e8c:	int3   
   12e8d:	int3   
   12e8e:	int3   
   12e8f:	int3   
   12e90:	int3   
   12e91:	int3   
   12e92:	mov    edi,edi
   12e94:	push   ebp
   12e95:	mov    ebp,esp
   12e97:	mov    edx,DWORD PTR [ebp+0x8]
   12e9a:	mov    eax,DWORD PTR [edx+0x8]
   12e9d:	push   esi
   12e9e:	mov    esi,DWORD PTR [eax]
   12ea0:	mov    DWORD PTR [edx+0x8],esi
   12ea3:	mov    esi,DWORD PTR [eax]
   12ea5:	cmp    esi,DWORD PTR ds:0x730b0
   12eab:	je     0x12eb0
   12ead:	mov    DWORD PTR [esi+0x4],edx
   12eb0:	mov    esi,DWORD PTR [edx+0x4]
   12eb3:	mov    DWORD PTR [eax+0x4],esi
   12eb6:	mov    ecx,DWORD PTR [ecx+0x4]
   12eb9:	pop    esi
   12eba:	cmp    edx,DWORD PTR [ecx+0x4]
   12ebd:	jne    0x12ec4
   12ebf:	mov    DWORD PTR [ecx+0x4],eax
   12ec2:	jmp    0x12ed2
   12ec4:	mov    ecx,DWORD PTR [edx+0x4]
   12ec7:	cmp    edx,DWORD PTR [ecx]
   12ec9:	jne    0x12ecf
   12ecb:	mov    DWORD PTR [ecx],eax
   12ecd:	jmp    0x12ed2
   12ecf:	mov    DWORD PTR [ecx+0x8],eax
   12ed2:	mov    DWORD PTR [eax],edx
   12ed4:	mov    DWORD PTR [edx+0x4],eax
   12ed7:	pop    ebp
   12ed8:	ret    0x4
   12edb:	int3   
   12edc:	int3   
   12edd:	int3   
   12ede:	int3   
   12edf:	int3   
   12ee0:	mov    edi,edi
   12ee2:	push   ebp
   12ee3:	mov    ebp,esp
   12ee5:	mov    edx,DWORD PTR [ebp+0x8]
   12ee8:	mov    eax,DWORD PTR [edx]
   12eea:	push   esi
   12eeb:	mov    esi,DWORD PTR [eax+0x8]
   12eee:	mov    DWORD PTR [edx],esi
   12ef0:	mov    esi,DWORD PTR [eax+0x8]
   12ef3:	cmp    esi,DWORD PTR ds:0x730b0
   12ef9:	je     0x12efe
   12efb:	mov    DWORD PTR [esi+0x4],edx
   12efe:	mov    esi,DWORD PTR [edx+0x4]
   12f01:	mov    DWORD PTR [eax+0x4],esi
   12f04:	mov    ecx,DWORD PTR [ecx+0x4]
   12f07:	pop    esi
   12f08:	cmp    edx,DWORD PTR [ecx+0x4]
   12f0b:	jne    0x12f12
   12f0d:	mov    DWORD PTR [ecx+0x4],eax
   12f10:	jmp    0x12f21
   12f12:	mov    ecx,DWORD PTR [edx+0x4]
   12f15:	cmp    edx,DWORD PTR [ecx+0x8]
   12f18:	jne    0x12f1f
   12f1a:	mov    DWORD PTR [ecx+0x8],eax
   12f1d:	jmp    0x12f21
   12f1f:	mov    DWORD PTR [ecx],eax
   12f21:	mov    DWORD PTR [eax+0x8],edx
   12f24:	mov    DWORD PTR [edx+0x4],eax
   12f27:	pop    ebp
   12f28:	ret    0x4
   12f2b:	int3   
   12f2c:	int3   
   12f2d:	int3   
   12f2e:	int3   
   12f2f:	int3   
   12f30:	mov    edi,edi
   12f32:	push   ebp
   12f33:	mov    ebp,esp
   12f35:	mov    eax,DWORD PTR [ecx+0x4]
   12f38:	mov    ecx,DWORD PTR [eax+0x4]
   12f3b:	mov    edx,DWORD PTR ds:0x730b0
   12f41:	cmp    ecx,edx
   12f43:	je     0x12f5e
   12f45:	push   esi
   12f46:	mov    esi,DWORD PTR [ebp+0x8]
   12f49:	mov    esi,DWORD PTR [esi]
   12f4b:	cmp    esi,DWORD PTR [ecx+0xc]
   12f4e:	jge    0x12f56
   12f50:	mov    eax,ecx
   12f52:	mov    ecx,DWORD PTR [ecx]
   12f54:	jmp    0x12f59
   12f56:	mov    ecx,DWORD PTR [ecx+0x8]
   12f59:	cmp    ecx,edx
   12f5b:	jne    0x12f4b
   12f5d:	pop    esi
   12f5e:	pop    ebp
   12f5f:	ret    0x4
   12f62:	int3   
   12f63:	int3   
   12f64:	int3   
   12f65:	int3   
   12f66:	int3   
   12f67:	int3   
   12f68:	mov    edi,edi
   12f6a:	push   ebp
   12f6b:	mov    ebp,esp
   12f6d:	mov    eax,DWORD PTR [ecx+0x4]
   12f70:	push   esi
   12f71:	mov    esi,DWORD PTR [eax+0x4]
   12f74:	push   edi
   12f75:	mov    edi,eax
   12f77:	jmp    0x12f92
   12f79:	push   DWORD PTR [ebp+0x8]
   12f7c:	lea    eax,[esi+0xc]
   12f7f:	push   eax
   12f80:	call   0x18770
   12f85:	test   al,al
   12f87:	je     0x12f8e
   12f89:	mov    esi,DWORD PTR [esi+0x8]
   12f8c:	jmp    0x12f92
   12f8e:	mov    edi,esi
   12f90:	mov    esi,DWORD PTR [esi]
   12f92:	cmp    esi,DWORD PTR ds:0x730b8
   12f98:	jne    0x12f79
   12f9a:	mov    eax,edi
   12f9c:	pop    edi
   12f9d:	pop    esi
   12f9e:	pop    ebp
   12f9f:	ret    0x4
   12fa2:	int3   
   12fa3:	int3   
   12fa4:	int3   
   12fa5:	int3   
   12fa6:	int3   
   12fa7:	int3   
   12fa8:	mov    edi,edi
   12faa:	push   ebp
   12fab:	mov    ebp,esp
   12fad:	mov    edx,DWORD PTR [ebp+0x8]
   12fb0:	mov    eax,DWORD PTR [edx+0x8]
   12fb3:	push   esi
   12fb4:	mov    esi,DWORD PTR [eax]
   12fb6:	mov    DWORD PTR [edx+0x8],esi
   12fb9:	mov    esi,DWORD PTR [eax]
   12fbb:	cmp    esi,DWORD PTR ds:0x730b8
   12fc1:	je     0x12fc6
   12fc3:	mov    DWORD PTR [esi+0x4],edx
   12fc6:	mov    esi,DWORD PTR [edx+0x4]
   12fc9:	mov    DWORD PTR [eax+0x4],esi
   12fcc:	mov    ecx,DWORD PTR [ecx+0x4]
   12fcf:	pop    esi
   12fd0:	cmp    edx,DWORD PTR [ecx+0x4]
   12fd3:	jne    0x12fda
   12fd5:	mov    DWORD PTR [ecx+0x4],eax
   12fd8:	jmp    0x12fe8
   12fda:	mov    ecx,DWORD PTR [edx+0x4]
   12fdd:	cmp    edx,DWORD PTR [ecx]
   12fdf:	jne    0x12fe5
   12fe1:	mov    DWORD PTR [ecx],eax
   12fe3:	jmp    0x12fe8
   12fe5:	mov    DWORD PTR [ecx+0x8],eax
   12fe8:	mov    DWORD PTR [eax],edx
   12fea:	mov    DWORD PTR [edx+0x4],eax
   12fed:	pop    ebp
   12fee:	ret    0x4
   12ff1:	int3   
   12ff2:	int3   
   12ff3:	int3   
   12ff4:	int3   
   12ff5:	int3   
   12ff6:	mov    edi,edi
   12ff8:	push   ebp
   12ff9:	mov    ebp,esp
   12ffb:	mov    edx,DWORD PTR [ebp+0x8]
   12ffe:	mov    eax,DWORD PTR [edx]
   13000:	push   esi
   13001:	mov    esi,DWORD PTR [eax+0x8]
   13004:	mov    DWORD PTR [edx],esi
   13006:	mov    esi,DWORD PTR [eax+0x8]
   13009:	cmp    esi,DWORD PTR ds:0x730b8
   1300f:	je     0x13014
   13011:	mov    DWORD PTR [esi+0x4],edx
   13014:	mov    esi,DWORD PTR [edx+0x4]
   13017:	mov    DWORD PTR [eax+0x4],esi
   1301a:	mov    ecx,DWORD PTR [ecx+0x4]
   1301d:	pop    esi
   1301e:	cmp    edx,DWORD PTR [ecx+0x4]
   13021:	jne    0x13028
   13023:	mov    DWORD PTR [ecx+0x4],eax
   13026:	jmp    0x13037
   13028:	mov    ecx,DWORD PTR [edx+0x4]
   1302b:	cmp    edx,DWORD PTR [ecx+0x8]
   1302e:	jne    0x13035
   13030:	mov    DWORD PTR [ecx+0x8],eax
   13033:	jmp    0x13037
   13035:	mov    DWORD PTR [ecx],eax
   13037:	mov    DWORD PTR [eax+0x8],edx
   1303a:	mov    DWORD PTR [edx+0x4],eax
   1303d:	pop    ebp
   1303e:	ret    0x4
   13041:	int3   
   13042:	int3   
   13043:	int3   
   13044:	int3   
   13045:	int3   
   13046:	mov    edi,edi
   13048:	push   esi
   13049:	mov    esi,ecx
   1304b:	mov    ecx,DWORD PTR [esi]
   1304d:	cmp    DWORD PTR [ecx+0x1c],0x0
   13051:	jne    0x13060
   13053:	mov    eax,DWORD PTR [ecx+0x4]
   13056:	cmp    DWORD PTR [eax+0x4],ecx
   13059:	jne    0x13060
   1305b:	mov    eax,DWORD PTR [ecx+0x8]
   1305e:	jmp    0x1307d
   13060:	mov    eax,DWORD PTR [ecx]
   13062:	cmp    eax,DWORD PTR ds:0x730b8
   13068:	je     0x13076
   1306a:	push   eax
   1306b:	call   0x11108
   13070:	jmp    0x1307d
   13072:	mov    DWORD PTR [esi],eax
   13074:	mov    ecx,eax
   13076:	mov    eax,DWORD PTR [ecx+0x4]
   13079:	cmp    ecx,DWORD PTR [eax]
   1307b:	je     0x13072
   1307d:	mov    DWORD PTR [esi],eax
   1307f:	pop    esi
   13080:	ret    
   13081:	int3   
   13082:	int3   
   13083:	int3   
   13084:	int3   
   13085:	int3   
   13086:	mov    edi,edi
   13088:	push   ebp
   13089:	mov    ebp,esp
   1308b:	cmp    DWORD PTR [ebp+0x8],0x0
   1308f:	jge    0x13095
   13091:	and    DWORD PTR [ebp+0x8],0x0
   13095:	push   DWORD PTR [ebp+0x8]
   13098:	call   0x11c16
   1309d:	pop    ecx
   1309e:	pop    ebp
   1309f:	ret    0x8
   130a2:	int3   
   130a3:	int3   
   130a4:	int3   
   130a5:	int3   
   130a6:	int3   
   130a7:	int3   
   130a8:	mov    edi,edi
   130aa:	push   ebp
   130ab:	mov    ebp,esp
   130ad:	push   esi
   130ae:	mov    esi,ecx
   130b0:	call   0x12a2c
   130b5:	test   BYTE PTR [ebp+0x8],0x1
   130b9:	je     0x130c2
   130bb:	push   esi
   130bc:	call   0x11c4c
   130c1:	pop    ecx
   130c2:	mov    eax,esi
   130c4:	pop    esi
   130c5:	pop    ebp
   130c6:	ret    0x4
   130c9:	int3   
   130ca:	int3   
   130cb:	int3   
   130cc:	int3   
   130cd:	int3   
   130ce:	mov    edi,edi
   130d0:	push   ebp
   130d1:	mov    ebp,esp
   130d3:	push   esi
   130d4:	mov    esi,ecx
   130d6:	call   0x12b02
   130db:	test   BYTE PTR [ebp+0x8],0x1
   130df:	je     0x130e8
   130e1:	push   esi
   130e2:	call   0x11c4c
   130e7:	pop    ecx
   130e8:	mov    eax,esi
   130ea:	pop    esi
   130eb:	pop    ebp
   130ec:	ret    0x4
   130ef:	int3   
   130f0:	int3   
   130f1:	int3   
   130f2:	int3   
   130f3:	int3   
   130f4:	mov    edi,edi
   130f6:	push   ebp
   130f7:	mov    ebp,esp
   130f9:	push   edi
   130fa:	mov    edi,DWORD PTR [ebp+0xc]
   130fd:	cmp    DWORD PTR [ebp+0x8],edi
   13100:	je     0x13116
   13102:	push   esi
   13103:	mov    esi,DWORD PTR [ebp+0x10]
   13106:	inc    DWORD PTR [esi]
   13108:	lea    ecx,[ebp+0x8]
   1310b:	call   0x10e5e
   13110:	cmp    DWORD PTR [ebp+0x8],edi
   13113:	jne    0x13106
   13115:	pop    esi
   13116:	pop    edi
   13117:	pop    ebp
   13118:	ret    
   13119:	int3   
   1311a:	int3   
   1311b:	int3   
   1311c:	int3   
   1311d:	int3   
   1311e:	mov    edi,edi
   13120:	push   ebp
   13121:	mov    ebp,esp
   13123:	push   edi
   13124:	mov    edi,DWORD PTR [ebp+0xc]
   13127:	cmp    DWORD PTR [ebp+0x8],edi
   1312a:	je     0x13140
   1312c:	push   esi
   1312d:	mov    esi,DWORD PTR [ebp+0x10]
   13130:	inc    DWORD PTR [esi]
   13132:	lea    ecx,[ebp+0x8]
   13135:	call   0x1109c
   1313a:	cmp    DWORD PTR [ebp+0x8],edi
   1313d:	jne    0x13130
   1313f:	pop    esi
   13140:	pop    edi
   13141:	pop    ebp
   13142:	ret    
   13143:	int3   
   13144:	int3   
   13145:	int3   
   13146:	int3   
   13147:	int3   
   13148:	mov    edi,edi
   1314a:	push   ebp
   1314b:	mov    ebp,esp
   1314d:	push   edi
   1314e:	mov    edi,DWORD PTR [ebp+0xc]
   13151:	cmp    DWORD PTR [ebp+0x8],edi
   13154:	je     0x1316a
   13156:	push   esi
   13157:	mov    esi,DWORD PTR [ebp+0x10]
   1315a:	inc    DWORD PTR [esi]
   1315c:	lea    ecx,[ebp+0x8]
   1315f:	call   0x110d2
   13164:	cmp    DWORD PTR [ebp+0x8],edi
   13167:	jne    0x1315a
   13169:	pop    esi
   1316a:	pop    edi
   1316b:	pop    ebp
   1316c:	ret    
   1316d:	int3   
   1316e:	int3   
   1316f:	int3   
   13170:	int3   
   13171:	int3   
   13172:	mov    edi,edi
   13174:	push   ebp
   13175:	mov    ebp,esp
   13177:	push   esi
   13178:	mov    esi,ecx
   1317a:	mov    ecx,DWORD PTR [esi]
   1317c:	test   ecx,ecx
   1317e:	je     0x13185
   13180:	call   0x11c8e
   13185:	mov    eax,DWORD PTR [ebp+0x8]
   13188:	mov    eax,DWORD PTR [eax]
   1318a:	mov    DWORD PTR [esi],eax
   1318c:	inc    DWORD PTR [eax+0x4]
   1318f:	mov    eax,esi
   13191:	pop    esi
   13192:	pop    ebp
   13193:	ret    0x4
   13196:	int3   
   13197:	int3   
   13198:	int3   
   13199:	int3   
   1319a:	int3   
   1319b:	int3   
   1319c:	mov    edi,edi
   1319e:	push   ebp
   1319f:	mov    ebp,esp
   131a1:	push   ebx
   131a2:	push   esi
   131a3:	push   edi
   131a4:	mov    edi,DWORD PTR [ebp+0xc]
   131a7:	mov    esi,ecx
   131a9:	and    DWORD PTR [esi+0x4],0x0
   131ad:	lea    eax,[edi+0x1]
   131b0:	push   eax
   131b1:	mov    DWORD PTR [esi+0x8],edi
   131b4:	call   0x11c16
   131b9:	push   edi
   131ba:	push   DWORD PTR [ebp+0x8]
   131bd:	mov    ebx,eax
   131bf:	push   ebx
   131c0:	call   0x1b400
   131c5:	add    esp,0x10
   131c8:	inc    DWORD PTR [esi+0x4]
   131cb:	pop    edi
   131cc:	mov    DWORD PTR [esi],ebx
   131ce:	mov    eax,esi
   131d0:	pop    esi
   131d1:	pop    ebx
   131d2:	pop    ebp
   131d3:	ret    0x8
   131d6:	int3   
   131d7:	int3   
   131d8:	int3   
   131d9:	int3   
   131da:	int3   
   131db:	int3   
   131dc:	mov    edi,edi
   131de:	push   ebp
   131df:	mov    ebp,esp
   131e1:	sub    esp,0x18
   131e4:	lea    eax,[ebp-0x18]
   131e7:	push   eax
   131e8:	push   DWORD PTR [ebp+0x8]
   131eb:	call   0x11e02
   131f0:	test   al,al
   131f2:	je     0x13261
   131f4:	lea    eax,[ebp-0x4]
   131f7:	push   eax
   131f8:	push   DWORD PTR [ebp+0xc]
   131fb:	call   0x111dc
   13200:	call   eax
   13202:	test   eax,eax
   13204:	jl     0x13261
   13206:	push   esi
   13207:	push   0x5
   13209:	call   0x1280a
   1320e:	mov    esi,eax
   13210:	test   esi,esi
   13212:	je     0x13260
   13214:	mov    edx,DWORD PTR [ebp+0x10]
   13217:	cmp    DWORD PTR [esi+0x44],edx
   1321a:	je     0x13229
   1321c:	mov    ecx,DWORD PTR [eax]
   1321e:	test   ecx,ecx
   13220:	je     0x1324d
   13222:	add    eax,ecx
   13224:	cmp    DWORD PTR [eax+0x44],edx
   13227:	jne    0x1321c
   13229:	cmp    DWORD PTR [eax+0x4],0x0
   1322d:	je     0x1324d
   1322f:	mov    ecx,DWORD PTR [eax+0xd8]
   13235:	mov    eax,DWORD PTR [eax+0xdc]
   1323b:	mov    DWORD PTR [ebp-0x14],eax
   1323e:	lea    eax,[ebp-0x18]
   13241:	push   eax
   13242:	push   DWORD PTR [ebp+0x8]
   13245:	mov    DWORD PTR [ebp-0x18],ecx
   13248:	call   0x11e52
   1324d:	mov    ecx,DWORD PTR [ebp-0x4]
   13250:	call   DWORD PTR ds:0x1ca50
   13256:	push   0x0
   13258:	push   esi
   13259:	call   0x1154e
   1325e:	call   eax
   13260:	pop    esi
   13261:	leave  
   13262:	ret    0x10
   13265:	int3   
   13266:	int3   
   13267:	int3   
   13268:	int3   
   13269:	int3   
   1326a:	mov    edi,edi
   1326c:	push   ebp
   1326d:	mov    ebp,esp
   1326f:	push   esi
   13270:	push   DWORD PTR [ebp+0xc]
   13273:	mov    esi,ecx
   13275:	push   DWORD PTR [ebp+0x8]
   13278:	call   0x12a48
   1327d:	mov    eax,esi
   1327f:	pop    esi
   13280:	pop    ebp
   13281:	ret    0x8
   13284:	int3   
   13285:	int3   
   13286:	int3   
   13287:	int3   
   13288:	int3   
   13289:	int3   
   1328a:	mov    edi,edi
   1328c:	push   ebp
   1328d:	mov    ebp,esp
   1328f:	mov    eax,DWORD PTR [ebp+0x8]
   13292:	push   esi
   13293:	push   DWORD PTR [eax+0x4]
   13296:	mov    esi,ecx
   13298:	push   DWORD PTR [eax]
   1329a:	call   0x12a48
   1329f:	mov    eax,esi
   132a1:	pop    esi
   132a2:	pop    ebp
   132a3:	ret    0x4
   132a6:	int3   
   132a7:	int3   
   132a8:	int3   
   132a9:	int3   
   132aa:	int3   
   132ab:	int3   
   132ac:	mov    edi,edi
   132ae:	push   ebp
   132af:	mov    ebp,esp
   132b1:	push   esi
   132b2:	mov    esi,DWORD PTR [ebp+0x8]
   132b5:	lea    eax,[ebp+0xc]
   132b8:	push   eax
   132b9:	mov    ecx,esi
   132bb:	call   0x1328a
   132c0:	xor    ecx,ecx
   132c2:	inc    ecx
   132c3:	cmp    DWORD PTR [esi+0x4],ecx
   132c6:	jbe    0x132d7
   132c8:	mov    eax,DWORD PTR [esi]
   132ca:	add    eax,ecx
   132cc:	mov    dl,BYTE PTR [eax-0x1]
   132cf:	xor    BYTE PTR [eax],dl
   132d1:	inc    ecx
   132d2:	cmp    ecx,DWORD PTR [esi+0x4]
   132d5:	jb     0x132c8
   132d7:	push   DWORD PTR [ebp+0xc]
   132da:	call   0x11c4c
   132df:	pop    ecx
   132e0:	mov    eax,esi
   132e2:	pop    esi
   132e3:	pop    ebp
   132e4:	ret    0xc
   132e7:	int3   
   132e8:	int3   
   132e9:	int3   
   132ea:	int3   
   132eb:	int3   
   132ec:	mov    edi,edi
   132ee:	push   esi
   132ef:	mov    esi,ecx
   132f1:	mov    ecx,DWORD PTR [esi]
   132f3:	mov    eax,DWORD PTR [ecx+0x8]
   132f6:	cmp    eax,DWORD PTR ds:0x730a8
   132fc:	je     0x1330a
   132fe:	push   eax
   132ff:	call   0x12b20
   13304:	jmp    0x13319
   13306:	mov    DWORD PTR [esi],eax
   13308:	mov    ecx,eax
   1330a:	mov    eax,DWORD PTR [ecx+0x4]
   1330d:	cmp    ecx,DWORD PTR [eax+0x8]
   13310:	je     0x13306
   13312:	mov    ecx,DWORD PTR [esi]
   13314:	cmp    DWORD PTR [ecx+0x8],eax
   13317:	je     0x1331b
   13319:	mov    DWORD PTR [esi],eax
   1331b:	pop    esi
   1331c:	ret    
   1331d:	int3   
   1331e:	int3   
   1331f:	int3   
   13320:	int3   
   13321:	int3   
   13322:	mov    edi,edi
   13324:	push   ebp
   13325:	mov    ebp,esp
   13327:	push   esi
   13328:	push   DWORD PTR [ebp+0xc]
   1332b:	mov    esi,ecx
   1332d:	push   DWORD PTR [ebp+0x8]
   13330:	call   0x12b42
   13335:	mov    eax,esi
   13337:	pop    esi
   13338:	pop    ebp
   13339:	ret    0x8
   1333c:	int3   
   1333d:	int3   
   1333e:	int3   
   1333f:	int3   
   13340:	int3   
   13341:	int3   
   13342:	mov    edi,edi
   13344:	push   ebp
   13345:	mov    ebp,esp
   13347:	mov    eax,DWORD PTR [ebp+0x8]
   1334a:	push   esi
   1334b:	push   DWORD PTR [eax+0x4]
   1334e:	mov    esi,ecx
   13350:	push   DWORD PTR [eax]
   13352:	call   0x12b42
   13357:	mov    eax,esi
   13359:	pop    esi
   1335a:	pop    ebp
   1335b:	ret    0x4
   1335e:	int3   
   1335f:	int3   
   13360:	int3   
   13361:	int3   
   13362:	int3   
   13363:	int3   
   13364:	mov    edi,edi
   13366:	push   ebp
   13367:	mov    ebp,esp
   13369:	push   esi
   1336a:	push   DWORD PTR [ebp+0x8]
   1336d:	mov    esi,ecx
   1336f:	call   0x1328a
   13374:	push   DWORD PTR [ebp+0xc]
   13377:	lea    ecx,[esi+0x8]
   1337a:	call   0x1328a
   1337f:	mov    eax,esi
   13381:	pop    esi
   13382:	pop    ebp
   13383:	ret    0x8
   13386:	int3   
   13387:	int3   
   13388:	int3   
   13389:	int3   
   1338a:	int3   
   1338b:	int3   
   1338c:	mov    edi,edi
   1338e:	push   ebp
   1338f:	mov    ebp,esp
   13391:	mov    eax,DWORD PTR [ebp+0x8]
   13394:	mov    eax,DWORD PTR [eax]
   13396:	push   esi
   13397:	push   DWORD PTR [ebp+0xc]
   1339a:	mov    esi,ecx
   1339c:	lea    ecx,[esi+0x4]
   1339f:	mov    DWORD PTR [esi],eax
   133a1:	call   0x11c6a
   133a6:	mov    eax,esi
   133a8:	pop    esi
   133a9:	pop    ebp
   133aa:	ret    0x8
   133ad:	int3   
   133ae:	int3   
   133af:	int3   
   133b0:	int3   
   133b1:	int3   
   133b2:	mov    edi,edi
   133b4:	push   ebp
   133b5:	mov    ebp,esp
   133b7:	push   esi
   133b8:	push   edi
   133b9:	mov    edi,DWORD PTR [ebp+0x8]
   133bc:	push   edi
   133bd:	mov    esi,ecx
   133bf:	call   0x1328a
   133c4:	lea    eax,[edi+0x8]
   133c7:	push   eax
   133c8:	lea    ecx,[esi+0x8]
   133cb:	call   0x1328a
   133d0:	lea    eax,[edi+0x10]
   133d3:	push   eax
   133d4:	lea    ecx,[esi+0x10]
   133d7:	call   0x1328a
   133dc:	lea    eax,[edi+0x18]
   133df:	push   eax
   133e0:	lea    ecx,[esi+0x18]
   133e3:	call   0x1328a
   133e8:	mov    eax,DWORD PTR [edi+0x20]
   133eb:	mov    DWORD PTR [esi+0x20],eax
   133ee:	mov    eax,DWORD PTR [edi+0x28]
   133f1:	mov    DWORD PTR [esi+0x28],eax
   133f4:	mov    eax,DWORD PTR [edi+0x2c]
   133f7:	mov    DWORD PTR [esi+0x2c],eax
   133fa:	mov    eax,DWORD PTR [edi+0x30]
   133fd:	mov    DWORD PTR [esi+0x30],eax
   13400:	mov    eax,DWORD PTR [edi+0x34]
   13403:	mov    DWORD PTR [esi+0x34],eax
   13406:	pop    edi
   13407:	mov    eax,esi
   13409:	pop    esi
   1340a:	pop    ebp
   1340b:	ret    0x4
   1340e:	int3   
   1340f:	int3   
   13410:	int3   
   13411:	int3   
   13412:	int3   
   13413:	int3   
   13414:	mov    edi,edi
   13416:	push   ebp
   13417:	mov    ebp,esp
   13419:	push   ebx
   1341a:	push   esi
   1341b:	push   edi
   1341c:	mov    edi,DWORD PTR [ebp+0x8]
   1341f:	mov    ebx,ecx
   13421:	mov    esi,edi
   13423:	cmp    edi,DWORD PTR ds:0x730a0
   13429:	je     0x13448
   1342b:	push   DWORD PTR [esi+0x8]
   1342e:	mov    ecx,ebx
   13430:	call   0x13414
   13435:	mov    esi,DWORD PTR [esi]
   13437:	push   edi
   13438:	call   0x11c4c
   1343d:	pop    ecx
   1343e:	mov    edi,esi
   13440:	cmp    esi,DWORD PTR ds:0x730a0
   13446:	jne    0x1342b
   13448:	pop    edi
   13449:	pop    esi
   1344a:	pop    ebx
   1344b:	pop    ebp
   1344c:	ret    0x4
   1344f:	int3   
   13450:	int3   
   13451:	int3   
   13452:	int3   
   13453:	int3   
   13454:	mov    edi,edi
   13456:	push   ebp
   13457:	mov    ebp,esp
   13459:	push   esi
   1345a:	push   DWORD PTR [ebp+0x8]
   1345d:	mov    esi,ecx
   1345f:	call   0x13342
   13464:	push   DWORD PTR [ebp+0xc]
   13467:	lea    ecx,[esi+0x8]
   1346a:	call   0x13342
   1346f:	mov    eax,esi
   13471:	pop    esi
   13472:	pop    ebp
   13473:	ret    0x8
   13476:	int3   
   13477:	int3   
   13478:	int3   
   13479:	int3   
   1347a:	int3   
   1347b:	int3   
   1347c:	mov    edi,edi
   1347e:	push   ebp
   1347f:	mov    ebp,esp
   13481:	push   ecx
   13482:	push   DWORD PTR [ebp-0x4]
   13485:	push   DWORD PTR [ebp+0x10]
   13488:	push   DWORD PTR [ebp+0xc]
   1348b:	push   DWORD PTR [ebp+0x8]
   1348e:	call   0x130f4
   13493:	add    esp,0x10
   13496:	leave  
   13497:	ret    
   13498:	int3   
   13499:	int3   
   1349a:	int3   
   1349b:	int3   
   1349c:	int3   
   1349d:	int3   
   1349e:	mov    edi,edi
   134a0:	push   ebp
   134a1:	mov    ebp,esp
   134a3:	push   ecx
   134a4:	push   DWORD PTR [ebp-0x4]
   134a7:	push   DWORD PTR [ebp+0x10]
   134aa:	push   DWORD PTR [ebp+0xc]
   134ad:	push   DWORD PTR [ebp+0x8]
   134b0:	call   0x1311e
   134b5:	add    esp,0x10
   134b8:	leave  
   134b9:	ret    
   134ba:	int3   
   134bb:	int3   
   134bc:	int3   
   134bd:	int3   
   134be:	int3   
   134bf:	int3   
   134c0:	mov    edi,edi
   134c2:	push   ebp
   134c3:	mov    ebp,esp
   134c5:	push   ecx
   134c6:	push   DWORD PTR [ebp-0x4]
   134c9:	push   DWORD PTR [ebp+0x10]
   134cc:	push   DWORD PTR [ebp+0xc]
   134cf:	push   DWORD PTR [ebp+0x8]
   134d2:	call   0x13148
   134d7:	add    esp,0x10
   134da:	leave  
   134db:	ret    
   134dc:	int3   
   134dd:	int3   
   134de:	int3   
   134df:	int3   
   134e0:	int3   
   134e1:	int3   
   134e2:	mov    edi,edi
   134e4:	push   ebp
   134e5:	mov    ebp,esp
   134e7:	mov    ecx,DWORD PTR [ebp+0x8]
   134ea:	push   0x0
   134ec:	call   0x130a8
   134f1:	pop    ebp
   134f2:	ret    0x4
   134f5:	int3   
   134f6:	int3   
   134f7:	int3   
   134f8:	int3   
   134f9:	int3   
   134fa:	mov    edi,edi
   134fc:	push   ebp
   134fd:	mov    ebp,esp
   134ff:	mov    ecx,DWORD PTR [ebp+0x8]
   13502:	push   0x0
   13504:	call   0x130ce
   13509:	pop    ebp
   1350a:	ret    0x4
   1350d:	int3   
   1350e:	int3   
   1350f:	int3   
   13510:	int3   
   13511:	int3   
   13512:	mov    edi,edi
   13514:	push   ebp
   13515:	mov    ebp,esp
   13517:	push   esi
   13518:	push   edi
   13519:	mov    edi,DWORD PTR [ebp+0x8]
   1351c:	push   edi
   1351d:	mov    esi,ecx
   1351f:	call   0x1328a
   13524:	add    edi,0x8
   13527:	push   edi
   13528:	lea    ecx,[esi+0x8]
   1352b:	call   0x133b2
   13530:	pop    edi
   13531:	mov    eax,esi
   13533:	pop    esi
   13534:	pop    ebp
   13535:	ret    0x4
   13538:	int3   
   13539:	int3   
   1353a:	int3   
   1353b:	int3   
   1353c:	int3   
   1353d:	int3   
   1353e:	mov    edi,edi
   13540:	push   ebp
   13541:	mov    ebp,esp
   13543:	push   esi
   13544:	push   edi
   13545:	mov    edi,DWORD PTR [ebp+0x8]
   13548:	push   edi
   13549:	mov    esi,ecx
   1354b:	call   0x1328a
   13550:	add    edi,0x8
   13553:	push   edi
   13554:	lea    ecx,[esi+0x8]
   13557:	call   0x1328a
   1355c:	pop    edi
   1355d:	mov    eax,esi
   1355f:	pop    esi
   13560:	pop    ebp
   13561:	ret    0x4
   13564:	int3   
   13565:	int3   
   13566:	int3   
   13567:	int3   
   13568:	int3   
   13569:	int3   
   1356a:	mov    edi,edi
   1356c:	push   ebp
   1356d:	mov    ebp,esp
   1356f:	mov    eax,DWORD PTR [ebp+0x8]
   13572:	push   esi
   13573:	mov    esi,ecx
   13575:	mov    ecx,DWORD PTR [eax]
   13577:	add    eax,0x4
   1357a:	mov    DWORD PTR [esi],ecx
   1357c:	push   eax
   1357d:	lea    ecx,[esi+0x4]
   13580:	call   0x11c6a
   13585:	mov    eax,esi
   13587:	pop    esi
   13588:	pop    ebp
   13589:	ret    0x4
   1358c:	int3   
   1358d:	int3   
   1358e:	int3   
   1358f:	int3   
   13590:	int3   
   13591:	int3   
   13592:	mov    edi,edi
   13594:	push   ebp
   13595:	mov    ebp,esp
   13597:	push   esi
   13598:	mov    esi,ecx
   1359a:	mov    ecx,DWORD PTR [esi+0x4]
   1359d:	test   ecx,ecx
   1359f:	je     0x135a6
   135a1:	call   0x11c8e
   135a6:	test   BYTE PTR [ebp+0x8],0x1
   135aa:	je     0x135b3
   135ac:	push   esi
   135ad:	call   0x11c4c
   135b2:	pop    ecx
   135b3:	mov    eax,esi
   135b5:	pop    esi
   135b6:	pop    ebp
   135b7:	ret    0x4
   135ba:	int3   
   135bb:	int3   
   135bc:	int3   
   135bd:	int3   
   135be:	int3   
   135bf:	int3   
   135c0:	mov    edi,edi
   135c2:	push   ebp
   135c3:	mov    ebp,esp
   135c5:	push   esi
   135c6:	push   edi
   135c7:	mov    edi,DWORD PTR [ebp+0x8]
   135ca:	push   edi
   135cb:	mov    esi,ecx
   135cd:	call   0x13342
   135d2:	add    edi,0x8
   135d5:	push   edi
   135d6:	lea    ecx,[esi+0x8]
   135d9:	call   0x13342
   135de:	pop    edi
   135df:	mov    eax,esi
   135e1:	pop    esi
   135e2:	pop    ebp
   135e3:	ret    0x4
   135e6:	int3   
   135e7:	int3   
   135e8:	int3   
   135e9:	int3   
   135ea:	int3   
   135eb:	int3   
   135ec:	mov    edi,edi
   135ee:	push   esi
   135ef:	push   edi
   135f0:	push   0xffffffff
   135f2:	mov    edi,0x1b838
   135f7:	push   edi
   135f8:	mov    esi,ecx
   135fa:	call   0x12a48
   135ff:	push   0xffffffff
   13601:	push   edi
   13602:	lea    ecx,[esi+0x8]
   13605:	call   0x12a48
   1360a:	push   0xffffffff
   1360c:	push   edi
   1360d:	lea    ecx,[esi+0x10]
   13610:	call   0x12a48
   13615:	push   0xffffffff
   13617:	push   edi
   13618:	lea    ecx,[esi+0x18]
   1361b:	call   0x12a48
   13620:	xor    eax,eax
   13622:	mov    DWORD PTR [esi+0x20],eax
   13625:	mov    DWORD PTR [esi+0x30],eax
   13628:	mov    DWORD PTR [esi+0x34],eax
   1362b:	pop    edi
   1362c:	mov    eax,esi
   1362e:	pop    esi
   1362f:	ret    
   13630:	int3   
   13631:	int3   
   13632:	int3   
   13633:	int3   
   13634:	int3   
   13635:	int3   
   13636:	mov    edi,edi
   13638:	push   ebp
   13639:	mov    ebp,esp
   1363b:	push   esi
   1363c:	push   0xc
   1363e:	mov    esi,ecx
   13640:	call   0x11c16
   13645:	pop    ecx
   13646:	test   eax,eax
   13648:	je     0x13659
   1364a:	push   DWORD PTR [ebp+0xc]
   1364d:	mov    ecx,eax
   1364f:	push   DWORD PTR [ebp+0x8]
   13652:	call   0x1319c
   13657:	jmp    0x1365b
   13659:	xor    eax,eax
   1365b:	mov    DWORD PTR [esi],eax
   1365d:	mov    eax,esi
   1365f:	pop    esi
   13660:	pop    ebp
   13661:	ret    0x8
   13664:	int3   
   13665:	int3   
   13666:	int3   
   13667:	int3   
   13668:	int3   
   13669:	int3   
   1366a:	mov    edi,edi
   1366c:	push   ebp
   1366d:	mov    ebp,esp
   1366f:	push   ecx
   13670:	push   esi
   13671:	push   edi
   13672:	mov    edi,DWORD PTR [ebp+0xc]
   13675:	push   edi
   13676:	mov    esi,ecx
   13678:	call   0x12bae
   1367d:	mov    esi,DWORD PTR [esi+0x4]
   13680:	mov    DWORD PTR [ebp+0xc],eax
   13683:	cmp    eax,esi
   13685:	je     0x13693
   13687:	mov    ecx,DWORD PTR [edi]
   13689:	cmp    ecx,DWORD PTR [eax+0xc]
   1368c:	jb     0x13693
   1368e:	lea    eax,[ebp+0xc]
   13691:	jmp    0x13699
   13693:	mov    DWORD PTR [ebp-0x4],esi
   13696:	lea    eax,[ebp-0x4]
   13699:	mov    ecx,DWORD PTR [eax]
   1369b:	mov    eax,DWORD PTR [ebp+0x8]
   1369e:	pop    edi
   1369f:	mov    DWORD PTR [eax],ecx
   136a1:	pop    esi
   136a2:	leave  
   136a3:	ret    0x8
   136a6:	int3   
   136a7:	int3   
   136a8:	int3   
   136a9:	int3   
   136aa:	int3   
   136ab:	int3   
   136ac:	mov    edi,edi
   136ae:	push   ebp
   136af:	mov    ebp,esp
   136b1:	push   esi
   136b2:	mov    esi,DWORD PTR [ebp+0x8]
   136b5:	lea    eax,[ebp+0xc]
   136b8:	push   eax
   136b9:	mov    ecx,esi
   136bb:	call   0x13342
   136c0:	xor    ecx,ecx
   136c2:	inc    ecx
   136c3:	cmp    DWORD PTR [esi+0x4],ecx
   136c6:	jbe    0x136da
   136c8:	mov    eax,DWORD PTR [esi]
   136ca:	lea    eax,[eax+ecx*2]
   136cd:	mov    dx,WORD PTR [eax-0x2]
   136d1:	xor    WORD PTR [eax],dx
   136d4:	inc    ecx
   136d5:	cmp    ecx,DWORD PTR [esi+0x4]
   136d8:	jb     0x136c8
   136da:	push   DWORD PTR [ebp+0xc]
   136dd:	call   0x11c4c
   136e2:	pop    ecx
   136e3:	mov    eax,esi
   136e5:	pop    esi
   136e6:	pop    ebp
   136e7:	ret    0xc
   136ea:	int3   
   136eb:	int3   
   136ec:	int3   
   136ed:	int3   
   136ee:	int3   
   136ef:	int3   
   136f0:	mov    edi,edi
   136f2:	push   ebp
   136f3:	mov    ebp,esp
   136f5:	push   ecx
   136f6:	push   esi
   136f7:	push   DWORD PTR [ebp+0xc]
   136fa:	mov    esi,ecx
   136fc:	call   0x12c84
   13701:	mov    DWORD PTR [ebp-0x4],eax
   13704:	cmp    eax,DWORD PTR [esi+0x4]
   13707:	je     0x1371e
   13709:	add    eax,0x10
   1370c:	push   eax
   1370d:	push   DWORD PTR [ebp+0xc]
   13710:	call   0x18740
   13715:	test   al,al
   13717:	jne    0x1371e
   13719:	lea    eax,[ebp-0x4]
   1371c:	jmp    0x13727
   1371e:	mov    eax,DWORD PTR [esi+0x4]
   13721:	mov    DWORD PTR [ebp+0xc],eax
   13724:	lea    eax,[ebp+0xc]
   13727:	mov    ecx,DWORD PTR [eax]
   13729:	mov    eax,DWORD PTR [ebp+0x8]
   1372c:	mov    DWORD PTR [eax],ecx
   1372e:	pop    esi
   1372f:	leave  
   13730:	ret    0x8
   13733:	int3   
   13734:	int3   
   13735:	int3   
   13736:	int3   
   13737:	int3   
   13738:	mov    edi,edi
   1373a:	push   ebp
   1373b:	mov    ebp,esp
   1373d:	push   esi
   1373e:	push   DWORD PTR [ebp+0x8]
   13741:	mov    esi,ecx
   13743:	call   0x1328a
   13748:	push   DWORD PTR [ebp+0xc]
   1374b:	lea    ecx,[esi+0x8]
   1374e:	call   0x133b2
   13753:	mov    eax,esi
   13755:	pop    esi
   13756:	pop    ebp
   13757:	ret    0x8
   1375a:	int3   
   1375b:	int3   
   1375c:	int3   
   1375d:	int3   
   1375e:	int3   
   1375f:	int3   
   13760:	mov    edi,edi
   13762:	push   ebp
   13763:	mov    ebp,esp
   13765:	push   ecx
   13766:	push   esi
   13767:	push   DWORD PTR [ebp+0xc]
   1376a:	mov    esi,ecx
   1376c:	call   0x12cc4
   13771:	mov    DWORD PTR [ebp-0x4],eax
   13774:	cmp    eax,DWORD PTR [esi+0x4]
   13777:	je     0x1378e
   13779:	add    eax,0xc
   1377c:	push   eax
   1377d:	push   DWORD PTR [ebp+0xc]
   13780:	call   0x18740
   13785:	test   al,al
   13787:	jne    0x1378e
   13789:	lea    eax,[ebp-0x4]
   1378c:	jmp    0x13797
   1378e:	mov    eax,DWORD PTR [esi+0x4]
   13791:	mov    DWORD PTR [ebp+0xc],eax
   13794:	lea    eax,[ebp+0xc]
   13797:	mov    ecx,DWORD PTR [eax]
   13799:	mov    eax,DWORD PTR [ebp+0x8]
   1379c:	mov    DWORD PTR [eax],ecx
   1379e:	pop    esi
   1379f:	leave  
   137a0:	ret    0x8
   137a3:	int3   
   137a4:	int3   
   137a5:	int3   
   137a6:	int3   
   137a7:	int3   
   137a8:	mov    edi,edi
   137aa:	push   ebp
   137ab:	mov    ebp,esp
   137ad:	push   ecx
   137ae:	push   esi
   137af:	push   edi
   137b0:	mov    edi,DWORD PTR [ebp+0xc]
   137b3:	push   edi
   137b4:	mov    esi,ecx
   137b6:	call   0x12d04
   137bb:	mov    esi,DWORD PTR [esi+0x4]
   137be:	mov    DWORD PTR [ebp+0xc],eax
   137c1:	cmp    eax,esi
   137c3:	je     0x137d1
   137c5:	mov    ecx,DWORD PTR [edi]
   137c7:	cmp    ecx,DWORD PTR [eax+0xc]
   137ca:	jl     0x137d1
   137cc:	lea    eax,[ebp+0xc]
   137cf:	jmp    0x137d7
   137d1:	mov    DWORD PTR [ebp-0x4],esi
   137d4:	lea    eax,[ebp-0x4]
   137d7:	mov    ecx,DWORD PTR [eax]
   137d9:	mov    eax,DWORD PTR [ebp+0x8]
   137dc:	pop    edi
   137dd:	mov    DWORD PTR [eax],ecx
   137df:	pop    esi
   137e0:	leave  
   137e1:	ret    0x8
   137e4:	int3   
   137e5:	int3   
   137e6:	int3   
   137e7:	int3   
   137e8:	int3   
   137e9:	int3   
   137ea:	mov    edi,edi
   137ec:	push   ebp
   137ed:	mov    ebp,esp
   137ef:	push   ecx
   137f0:	push   ecx
   137f1:	push   ebx
   137f2:	push   esi
   137f3:	mov    DWORD PTR [ebp-0x4],ecx
   137f6:	push   edi
   137f7:	mov    edi,DWORD PTR [ebp+0xc]
   137fa:	lea    ecx,[ebp+0xc]
   137fd:	call   0x10e5e
   13802:	mov    esi,DWORD PTR [edi]
   13804:	mov    eax,ds:0x730a0
   13809:	mov    ebx,edi
   1380b:	mov    DWORD PTR [ebp-0x8],esi
   1380e:	cmp    esi,eax
   13810:	jne    0x1382e
   13812:	mov    esi,DWORD PTR [edi+0x8]
   13815:	mov    eax,DWORD PTR [ebx+0x4]
   13818:	mov    ecx,DWORD PTR [ebp-0x4]
   1381b:	mov    DWORD PTR [esi+0x4],eax
   1381e:	mov    eax,DWORD PTR [ecx+0x4]
   13821:	cmp    DWORD PTR [eax+0x4],edi
   13824:	jne    0x138a3
   13826:	mov    DWORD PTR [eax+0x4],esi
   13829:	jmp    0x138b1
   1382e:	mov    ecx,DWORD PTR [edi+0x8]
   13831:	cmp    ecx,eax
   13833:	je     0x13815
   13835:	push   ecx
   13836:	call   0x10dfc
   1383b:	mov    ebx,eax
   1383d:	mov    esi,DWORD PTR [ebx+0x8]
   13840:	cmp    ebx,edi
   13842:	je     0x13815
   13844:	mov    eax,DWORD PTR [ebp-0x8]
   13847:	mov    DWORD PTR [eax+0x4],ebx
   1384a:	mov    eax,DWORD PTR [edi]
   1384c:	mov    DWORD PTR [ebx],eax
   1384e:	cmp    ebx,DWORD PTR [edi+0x8]
   13851:	jne    0x13858
   13853:	mov    DWORD PTR [esi+0x4],ebx
   13856:	jmp    0x1386f
   13858:	mov    eax,DWORD PTR [ebx+0x4]
   1385b:	mov    DWORD PTR [esi+0x4],eax
   1385e:	mov    eax,DWORD PTR [ebx+0x4]
   13861:	mov    DWORD PTR [eax],esi
   13863:	mov    eax,DWORD PTR [edi+0x8]
   13866:	mov    DWORD PTR [ebx+0x8],eax
   13869:	mov    eax,DWORD PTR [edi+0x8]
   1386c:	mov    DWORD PTR [eax+0x4],ebx
   1386f:	mov    eax,DWORD PTR [ebp-0x4]
   13872:	mov    eax,DWORD PTR [eax+0x4]
   13875:	cmp    DWORD PTR [eax+0x4],edi
   13878:	jne    0x1387f
   1387a:	mov    DWORD PTR [eax+0x4],ebx
   1387d:	jmp    0x1388d
   1387f:	mov    eax,DWORD PTR [edi+0x4]
   13882:	cmp    DWORD PTR [eax],edi
   13884:	jne    0x1388a
   13886:	mov    DWORD PTR [eax],ebx
   13888:	jmp    0x1388d
   1388a:	mov    DWORD PTR [eax+0x8],ebx
   1388d:	mov    eax,DWORD PTR [edi+0x4]
   13890:	mov    DWORD PTR [ebx+0x4],eax
   13893:	mov    eax,DWORD PTR [ebx+0x14]
   13896:	mov    ecx,DWORD PTR [edi+0x14]
   13899:	mov    DWORD PTR [ebx+0x14],ecx
   1389c:	mov    DWORD PTR [edi+0x14],eax
   1389f:	mov    ebx,edi
   138a1:	jmp    0x13904
   138a3:	mov    eax,DWORD PTR [edi+0x4]
   138a6:	cmp    DWORD PTR [eax],edi
   138a8:	jne    0x138ae
   138aa:	mov    DWORD PTR [eax],esi
   138ac:	jmp    0x138b1
   138ae:	mov    DWORD PTR [eax+0x8],esi
   138b1:	mov    eax,DWORD PTR [ecx+0x4]
   138b4:	mov    DWORD PTR [ebp-0x8],eax
   138b7:	cmp    DWORD PTR [eax],edi
   138b9:	jne    0x138db
   138bb:	mov    edx,DWORD PTR [edi+0x8]
   138be:	cmp    edx,DWORD PTR ds:0x730a0
   138c4:	jne    0x138cd
   138c6:	mov    edx,DWORD PTR [edi+0x4]
   138c9:	mov    DWORD PTR [eax],edx
   138cb:	jmp    0x138db
   138cd:	push   esi
   138ce:	call   0x10dfc
   138d3:	mov    ecx,DWORD PTR [ebp-0x8]
   138d6:	mov    DWORD PTR [ecx],eax
   138d8:	mov    ecx,DWORD PTR [ebp-0x4]
   138db:	mov    eax,DWORD PTR [ecx+0x4]
   138de:	mov    DWORD PTR [ebp-0x8],eax
   138e1:	cmp    DWORD PTR [eax+0x8],edi
   138e4:	jne    0x13904
   138e6:	mov    ecx,DWORD PTR [edi]
   138e8:	cmp    ecx,DWORD PTR ds:0x730a0
   138ee:	jne    0x138f8
   138f0:	mov    ecx,DWORD PTR [edi+0x4]
   138f3:	mov    DWORD PTR [eax+0x8],ecx
   138f6:	jmp    0x13904
   138f8:	push   esi
   138f9:	call   0x10dda
   138fe:	mov    ecx,DWORD PTR [ebp-0x8]
   13901:	mov    DWORD PTR [ecx+0x8],eax
   13904:	xor    edi,edi
   13906:	inc    edi
   13907:	cmp    DWORD PTR [ebx+0x14],edi
   1390a:	jne    0x13a21
   13910:	jmp    0x139cf
   13915:	cmp    DWORD PTR [esi+0x14],edi
   13918:	jne    0x13a1e
   1391e:	mov    eax,DWORD PTR [esi+0x4]
   13921:	cmp    esi,DWORD PTR [eax]
   13923:	jne    0x1399a
   13925:	mov    eax,DWORD PTR [eax+0x8]
   13928:	cmp    DWORD PTR [eax+0x14],0x0
   1392c:	jne    0x13946
   1392e:	mov    DWORD PTR [eax+0x14],edi
   13931:	mov    eax,DWORD PTR [esi+0x4]
   13934:	and    DWORD PTR [eax+0x14],0x0
   13938:	push   DWORD PTR [esi+0x4]
   1393b:	call   0x12be6
   13940:	mov    eax,DWORD PTR [esi+0x4]
   13943:	mov    eax,DWORD PTR [eax+0x8]
   13946:	mov    ecx,DWORD PTR [eax]
   13948:	cmp    DWORD PTR [ecx+0x14],edi
   1394b:	jne    0x13955
   1394d:	mov    ecx,DWORD PTR [eax+0x8]
   13950:	cmp    DWORD PTR [ecx+0x14],edi
   13953:	je     0x139c8
   13955:	mov    ecx,DWORD PTR [eax+0x8]
   13958:	cmp    DWORD PTR [ecx+0x14],edi
   1395b:	jne    0x13975
   1395d:	mov    ecx,DWORD PTR [eax]
   1395f:	mov    DWORD PTR [ecx+0x14],edi
   13962:	mov    ecx,DWORD PTR [ebp-0x4]
   13965:	and    DWORD PTR [eax+0x14],0x0
   13969:	push   eax
   1396a:	call   0x12c34
   1396f:	mov    eax,DWORD PTR [esi+0x4]
   13972:	mov    eax,DWORD PTR [eax+0x8]
   13975:	mov    ecx,DWORD PTR [esi+0x4]
   13978:	mov    ecx,DWORD PTR [ecx+0x14]
   1397b:	mov    DWORD PTR [eax+0x14],ecx
   1397e:	mov    ecx,DWORD PTR [esi+0x4]
   13981:	mov    DWORD PTR [ecx+0x14],edi
   13984:	mov    eax,DWORD PTR [eax+0x8]
   13987:	mov    ecx,DWORD PTR [ebp-0x4]
   1398a:	mov    DWORD PTR [eax+0x14],edi
   1398d:	push   DWORD PTR [esi+0x4]
   13990:	call   0x12be6
   13995:	jmp    0x13a1e
   1399a:	mov    eax,DWORD PTR [eax]
   1399c:	cmp    DWORD PTR [eax+0x14],0x0
   139a0:	jne    0x139b9
   139a2:	mov    DWORD PTR [eax+0x14],edi
   139a5:	mov    eax,DWORD PTR [esi+0x4]
   139a8:	and    DWORD PTR [eax+0x14],0x0
   139ac:	push   DWORD PTR [esi+0x4]
   139af:	call   0x12c34
   139b4:	mov    eax,DWORD PTR [esi+0x4]
   139b7:	mov    eax,DWORD PTR [eax]
   139b9:	mov    ecx,DWORD PTR [eax+0x8]
   139bc:	cmp    DWORD PTR [ecx+0x14],edi
   139bf:	jne    0x139e0
   139c1:	mov    ecx,DWORD PTR [eax]
   139c3:	cmp    DWORD PTR [ecx+0x14],edi
   139c6:	jne    0x139e0
   139c8:	and    DWORD PTR [eax+0x14],0x0
   139cc:	mov    esi,DWORD PTR [esi+0x4]
   139cf:	mov    ecx,DWORD PTR [ebp-0x4]
   139d2:	mov    eax,DWORD PTR [ecx+0x4]
   139d5:	cmp    esi,DWORD PTR [eax+0x4]
   139d8:	jne    0x13915
   139de:	jmp    0x13a1e
   139e0:	mov    ecx,DWORD PTR [eax]
   139e2:	cmp    DWORD PTR [ecx+0x14],edi
   139e5:	jne    0x139ff
   139e7:	mov    ecx,DWORD PTR [eax+0x8]
   139ea:	mov    DWORD PTR [ecx+0x14],edi
   139ed:	mov    ecx,DWORD PTR [ebp-0x4]
   139f0:	and    DWORD PTR [eax+0x14],0x0
   139f4:	push   eax
   139f5:	call   0x12be6
   139fa:	mov    eax,DWORD PTR [esi+0x4]
   139fd:	mov    eax,DWORD PTR [eax]
   139ff:	mov    ecx,DWORD PTR [esi+0x4]
   13a02:	mov    ecx,DWORD PTR [ecx+0x14]
   13a05:	mov    DWORD PTR [eax+0x14],ecx
   13a08:	mov    ecx,DWORD PTR [esi+0x4]
   13a0b:	mov    DWORD PTR [ecx+0x14],edi
   13a0e:	mov    eax,DWORD PTR [eax]
   13a10:	mov    ecx,DWORD PTR [ebp-0x4]
   13a13:	mov    DWORD PTR [eax+0x14],edi
   13a16:	push   DWORD PTR [esi+0x4]
   13a19:	call   0x12c34
   13a1e:	mov    DWORD PTR [esi+0x14],edi
   13a21:	push   ebx
   13a22:	call   0x11c4c
   13a27:	mov    eax,DWORD PTR [ebp-0x4]
   13a2a:	dec    DWORD PTR [eax+0xc]
   13a2d:	mov    eax,DWORD PTR [ebp+0x8]
   13a30:	pop    ecx
   13a31:	mov    ecx,DWORD PTR [ebp+0xc]
   13a34:	pop    edi
   13a35:	pop    esi
   13a36:	mov    DWORD PTR [eax],ecx
   13a38:	pop    ebx
   13a39:	leave  
   13a3a:	ret    0x8
   13a3d:	int3   
   13a3e:	int3   
   13a3f:	int3   
   13a40:	int3   
   13a41:	int3   
   13a42:	mov    edi,edi
   13a44:	push   ebp
   13a45:	mov    ebp,esp
   13a47:	push   esi
   13a48:	push   edi
   13a49:	push   DWORD PTR [ebp+0xc]
   13a4c:	mov    edi,ecx
   13a4e:	call   0x12d3c
   13a53:	push   DWORD PTR [ebp+0xc]
   13a56:	mov    ecx,edi
   13a58:	mov    esi,eax
   13a5a:	call   0x12bae
   13a5f:	mov    ecx,DWORD PTR [ebp+0x8]
   13a62:	pop    edi
   13a63:	mov    DWORD PTR [ecx],eax
   13a65:	mov    DWORD PTR [ecx+0x4],esi
   13a68:	mov    eax,ecx
   13a6a:	pop    esi
   13a6b:	pop    ebp
   13a6c:	ret    0x8
   13a6f:	int3   
   13a70:	int3   
   13a71:	int3   
   13a72:	int3   
   13a73:	int3   
   13a74:	mov    edi,edi
   13a76:	push   ebp
   13a77:	mov    ebp,esp
   13a79:	push   esi
   13a7a:	push   edi
   13a7b:	push   DWORD PTR [ebp+0xc]
   13a7e:	mov    edi,ecx
   13a80:	call   0x12d74
   13a85:	push   DWORD PTR [ebp+0xc]
   13a88:	mov    ecx,edi
   13a8a:	mov    esi,eax
   13a8c:	call   0x12c84
   13a91:	mov    ecx,DWORD PTR [ebp+0x8]
   13a94:	pop    edi
   13a95:	mov    DWORD PTR [ecx],eax
   13a97:	mov    DWORD PTR [ecx+0x4],esi
   13a9a:	mov    eax,ecx
   13a9c:	pop    esi
   13a9d:	pop    ebp
   13a9e:	ret    0x8
   13aa1:	int3   
   13aa2:	int3   
   13aa3:	int3   
   13aa4:	int3   
   13aa5:	int3   
   13aa6:	mov    edi,edi
   13aa8:	push   ebp
   13aa9:	mov    ebp,esp
   13aab:	push   esi
   13aac:	push   edi
   13aad:	push   DWORD PTR [ebp+0xc]
   13ab0:	mov    edi,ecx
   13ab2:	call   0x12e52
   13ab7:	push   DWORD PTR [ebp+0xc]
   13aba:	mov    ecx,edi
   13abc:	mov    esi,eax
   13abe:	call   0x12cc4
   13ac3:	mov    ecx,DWORD PTR [ebp+0x8]
   13ac6:	pop    edi
   13ac7:	mov    DWORD PTR [ecx],eax
   13ac9:	mov    DWORD PTR [ecx+0x4],esi
   13acc:	mov    eax,ecx
   13ace:	pop    esi
   13acf:	pop    ebp
   13ad0:	ret    0x8
   13ad3:	int3   
   13ad4:	int3   
   13ad5:	int3   
   13ad6:	int3   
   13ad7:	int3   
   13ad8:	mov    edi,edi
   13ada:	push   ebp
   13adb:	mov    ebp,esp
   13add:	push   esi
   13ade:	push   edi
   13adf:	push   DWORD PTR [ebp+0xc]
   13ae2:	mov    edi,ecx
   13ae4:	call   0x12f30
   13ae9:	push   DWORD PTR [ebp+0xc]
   13aec:	mov    ecx,edi
   13aee:	mov    esi,eax
   13af0:	call   0x12d04
   13af5:	mov    ecx,DWORD PTR [ebp+0x8]
   13af8:	pop    edi
   13af9:	mov    DWORD PTR [ecx],eax
   13afb:	mov    DWORD PTR [ecx+0x4],esi
   13afe:	mov    eax,ecx
   13b00:	pop    esi
   13b01:	pop    ebp
   13b02:	ret    0x8
   13b05:	int3   
   13b06:	int3   
   13b07:	int3   
   13b08:	int3   
   13b09:	int3   
   13b0a:	mov    edi,edi
   13b0c:	push   ebp
   13b0d:	mov    ebp,esp
   13b0f:	push   ecx
   13b10:	push   esi
   13b11:	push   DWORD PTR [ebp+0xc]
   13b14:	mov    esi,ecx
   13b16:	call   0x12f68
   13b1b:	mov    DWORD PTR [ebp-0x4],eax
   13b1e:	cmp    eax,DWORD PTR [esi+0x4]
   13b21:	je     0x13b38
   13b23:	add    eax,0xc
   13b26:	push   eax
   13b27:	push   DWORD PTR [ebp+0xc]
   13b2a:	call   0x18770
   13b2f:	test   al,al
   13b31:	jne    0x13b38
   13b33:	lea    eax,[ebp-0x4]
   13b36:	jmp    0x13b41
   13b38:	mov    eax,DWORD PTR [esi+0x4]
   13b3b:	mov    DWORD PTR [ebp+0xc],eax
   13b3e:	lea    eax,[ebp+0xc]
   13b41:	mov    ecx,DWORD PTR [eax]
   13b43:	mov    eax,DWORD PTR [ebp+0x8]
   13b46:	mov    DWORD PTR [eax],ecx
   13b48:	pop    esi
   13b49:	leave  
   13b4a:	ret    0x8
   13b4d:	int3   
   13b4e:	int3   
   13b4f:	int3   
   13b50:	int3   
   13b51:	int3   
   13b52:	mov    edi,edi
   13b54:	push   ebp
   13b55:	mov    ebp,esp
   13b57:	push   0x0
   13b59:	push   0x18
   13b5b:	call   0x13086
   13b60:	mov    ecx,DWORD PTR [ebp+0x8]
   13b63:	mov    DWORD PTR [eax+0x4],ecx
   13b66:	mov    ecx,DWORD PTR [ebp+0xc]
   13b69:	mov    DWORD PTR [eax+0x14],ecx
   13b6c:	pop    ebp
   13b6d:	ret    0x8
   13b70:	int3   
   13b71:	int3   
   13b72:	int3   
   13b73:	int3   
   13b74:	int3   
   13b75:	int3   
   13b76:	mov    edi,edi
   13b78:	push   ebp
   13b79:	mov    ebp,esp
   13b7b:	push   0x0
   13b7d:	push   0x58
   13b7f:	call   0x13086
   13b84:	mov    ecx,DWORD PTR [ebp+0x8]
   13b87:	mov    DWORD PTR [eax+0x4],ecx
   13b8a:	mov    ecx,DWORD PTR [ebp+0xc]
   13b8d:	mov    DWORD PTR [eax+0x50],ecx
   13b90:	pop    ebp
   13b91:	ret    0x8
   13b94:	int3   
   13b95:	int3   
   13b96:	int3   
   13b97:	int3   
   13b98:	int3   
   13b99:	int3   
   13b9a:	mov    edi,edi
   13b9c:	push   ebp
   13b9d:	mov    ebp,esp
   13b9f:	push   0x0
   13ba1:	push   0x20
   13ba3:	call   0x13086
   13ba8:	mov    ecx,DWORD PTR [ebp+0x8]
   13bab:	mov    DWORD PTR [eax+0x4],ecx
   13bae:	mov    ecx,DWORD PTR [ebp+0xc]
   13bb1:	mov    DWORD PTR [eax+0x1c],ecx
   13bb4:	pop    ebp
   13bb5:	ret    0x8
   13bb8:	int3   
   13bb9:	int3   
   13bba:	int3   
   13bbb:	int3   
   13bbc:	int3   
   13bbd:	int3   
   13bbe:	mov    edi,edi
   13bc0:	push   ebp
   13bc1:	mov    ebp,esp
   13bc3:	push   0x0
   13bc5:	push   0x14
   13bc7:	call   0x13086
   13bcc:	mov    ecx,DWORD PTR [ebp+0x8]
   13bcf:	mov    DWORD PTR [eax+0x4],ecx
   13bd2:	mov    ecx,DWORD PTR [ebp+0xc]
   13bd5:	mov    DWORD PTR [eax+0x10],ecx
   13bd8:	pop    ebp
   13bd9:	ret    0x8
   13bdc:	int3   
   13bdd:	int3   
   13bde:	int3   
   13bdf:	int3   
   13be0:	int3   
   13be1:	int3   
   13be2:	mov    edi,edi
   13be4:	push   ebp
   13be5:	mov    ebp,esp
   13be7:	push   0x0
   13be9:	push   0x60
   13beb:	call   0x13086
   13bf0:	mov    ecx,DWORD PTR [ebp+0x8]
   13bf3:	mov    DWORD PTR [eax+0x4],ecx
   13bf6:	mov    ecx,DWORD PTR [ebp+0xc]
   13bf9:	mov    DWORD PTR [eax+0x58],ecx
   13bfc:	pop    ebp
   13bfd:	ret    0x8
   13c00:	int3   
   13c01:	int3   
   13c02:	int3   
   13c03:	int3   
   13c04:	int3   
   13c05:	int3   
   13c06:	mov    edi,edi
   13c08:	push   ebp
   13c09:	mov    ebp,esp
   13c0b:	mov    ecx,DWORD PTR [ebp+0x8]
   13c0e:	test   ecx,ecx
   13c10:	je     0x13c1a
   13c12:	push   DWORD PTR [ebp+0xc]
   13c15:	call   0x13512
   13c1a:	pop    ebp
   13c1b:	ret    0x8
   13c1e:	int3   
   13c1f:	int3   
   13c20:	int3   
   13c21:	int3   
   13c22:	int3   
   13c23:	int3   
   13c24:	mov    edi,edi
   13c26:	push   ebp
   13c27:	mov    ebp,esp
   13c29:	mov    ecx,DWORD PTR [ebp+0x8]
   13c2c:	test   ecx,ecx
   13c2e:	je     0x13c38
   13c30:	push   DWORD PTR [ebp+0xc]
   13c33:	call   0x1353e
   13c38:	pop    ebp
   13c39:	ret    0x8
   13c3c:	int3   
   13c3d:	int3   
   13c3e:	int3   
   13c3f:	int3   
   13c40:	int3   
   13c41:	int3   
   13c42:	mov    edi,edi
   13c44:	push   ebp
   13c45:	mov    ebp,esp
   13c47:	mov    ecx,DWORD PTR [ebp+0x8]
   13c4a:	test   ecx,ecx
   13c4c:	je     0x13c56
   13c4e:	push   DWORD PTR [ebp+0xc]
   13c51:	call   0x1356a
   13c56:	pop    ebp
   13c57:	ret    0x8
   13c5a:	int3   
   13c5b:	int3   
   13c5c:	int3   
   13c5d:	int3   
   13c5e:	int3   
   13c5f:	int3   
   13c60:	mov    edi,edi
   13c62:	push   ebp
   13c63:	mov    ebp,esp
   13c65:	mov    ecx,DWORD PTR [ebp+0x8]
   13c68:	push   0x0
   13c6a:	call   0x13592
   13c6f:	pop    ebp
   13c70:	ret    0x4
   13c73:	int3   
   13c74:	int3   
   13c75:	int3   
   13c76:	int3   
   13c77:	int3   
   13c78:	mov    edi,edi
   13c7a:	push   ebp
   13c7b:	mov    ebp,esp
   13c7d:	mov    ecx,DWORD PTR [ebp+0x8]
   13c80:	test   ecx,ecx
   13c82:	je     0x13c8c
   13c84:	push   DWORD PTR [ebp+0xc]
   13c87:	call   0x135c0
   13c8c:	pop    ebp
   13c8d:	ret    0x8
   13c90:	int3   
   13c91:	int3   
   13c92:	int3   
   13c93:	int3   
   13c94:	int3   
   13c95:	int3   
   13c96:	mov    edi,edi
   13c98:	push   ebp
   13c99:	mov    ebp,esp
   13c9b:	push   edi
   13c9c:	mov    edi,DWORD PTR [ebp+0xc]
   13c9f:	cmp    DWORD PTR [ebp+0x8],edi
   13ca2:	je     0x13cb8
   13ca4:	push   esi
   13ca5:	mov    esi,DWORD PTR [ebp+0x10]
   13ca8:	inc    DWORD PTR [esi]
   13caa:	lea    ecx,[ebp+0x8]
   13cad:	call   0x132ec
   13cb2:	cmp    DWORD PTR [ebp+0x8],edi
   13cb5:	jne    0x13ca8
   13cb7:	pop    esi
   13cb8:	pop    edi
   13cb9:	pop    ebp
   13cba:	ret    
   13cbb:	int3   
   13cbc:	int3   
   13cbd:	int3   
   13cbe:	int3   
   13cbf:	int3   
   13cc0:	mov    edi,edi
   13cc2:	push   ebp
   13cc3:	mov    ebp,esp
   13cc5:	push   DWORD PTR [ebp+0xc]
   13cc8:	push   DWORD PTR [ebp+0x8]
   13ccb:	call   0x13760
   13cd0:	mov    eax,DWORD PTR [ebp+0x8]
   13cd3:	pop    ebp
   13cd4:	ret    0x8
   13cd7:	int3   
   13cd8:	int3   
   13cd9:	int3   
   13cda:	int3   
   13cdb:	int3   
   13cdc:	mov    edi,edi
   13cde:	push   ebp
   13cdf:	mov    ebp,esp
   13ce1:	push   ecx
   13ce2:	push   esi
   13ce3:	mov    esi,ecx
   13ce5:	cmp    DWORD PTR [esi+0xc],0x0
   13ce9:	mov    ecx,DWORD PTR [ebp+0xc]
   13cec:	je     0x13d26
   13cee:	mov    eax,DWORD PTR [esi+0x4]
   13cf1:	cmp    ecx,DWORD PTR [eax]
   13cf3:	jne    0x13d26
   13cf5:	cmp    DWORD PTR [ebp+0x10],eax
   13cf8:	jne    0x13d26
   13cfa:	push   DWORD PTR [eax+0x4]
   13cfd:	mov    ecx,esi
   13cff:	call   0x13414
   13d04:	mov    ecx,DWORD PTR ds:0x730a0
   13d0a:	mov    eax,DWORD PTR [esi+0x4]
   13d0d:	mov    DWORD PTR [eax+0x4],ecx
   13d10:	mov    eax,DWORD PTR [esi+0x4]
   13d13:	and    DWORD PTR [esi+0xc],0x0
   13d17:	mov    DWORD PTR [eax],eax
   13d19:	mov    eax,DWORD PTR [esi+0x4]
   13d1c:	mov    DWORD PTR [eax+0x8],eax
   13d1f:	mov    eax,DWORD PTR [esi+0x4]
   13d22:	mov    ecx,DWORD PTR [eax]
   13d24:	jmp    0x13d4b
   13d26:	cmp    ecx,DWORD PTR [ebp+0x10]
   13d29:	je     0x13d4b
   13d2b:	push   edi
   13d2c:	mov    edi,ecx
   13d2e:	lea    ecx,[ebp+0xc]
   13d31:	call   0x10e5e
   13d36:	push   edi
   13d37:	lea    eax,[ebp-0x4]
   13d3a:	push   eax
   13d3b:	mov    ecx,esi
   13d3d:	call   0x137ea
   13d42:	mov    ecx,DWORD PTR [ebp+0xc]
   13d45:	cmp    ecx,DWORD PTR [ebp+0x10]
   13d48:	jne    0x13d2c
   13d4a:	pop    edi
   13d4b:	mov    eax,DWORD PTR [ebp+0x8]
   13d4e:	mov    DWORD PTR [eax],ecx
   13d50:	pop    esi
   13d51:	leave  
   13d52:	ret    0xc
   13d55:	int3   
   13d56:	int3   
   13d57:	int3   
   13d58:	int3   
   13d59:	int3   
   13d5a:	mov    edi,edi
   13d5c:	push   ebp
   13d5d:	mov    ebp,esp
   13d5f:	push   ecx
   13d60:	push   ecx
   13d61:	push   esi
   13d62:	push   DWORD PTR [ebp+0x8]
   13d65:	lea    eax,[ebp-0x8]
   13d68:	push   eax
   13d69:	mov    esi,ecx
   13d6b:	call   0x13a42
   13d70:	and    DWORD PTR [ebp+0x8],0x0
   13d74:	lea    eax,[ebp+0x8]
   13d77:	push   eax
   13d78:	push   DWORD PTR [ebp-0x4]
   13d7b:	push   DWORD PTR [ebp-0x8]
   13d7e:	call   0x1347c
   13d83:	add    esp,0xc
   13d86:	push   DWORD PTR [ebp-0x4]
   13d89:	lea    eax,[ebp-0x4]
   13d8c:	push   DWORD PTR [ebp-0x8]
   13d8f:	mov    ecx,esi
   13d91:	push   eax
   13d92:	call   0x13cdc
   13d97:	mov    eax,DWORD PTR [ebp+0x8]
   13d9a:	pop    esi
   13d9b:	leave  
   13d9c:	ret    0x4
   13d9f:	int3   
   13da0:	int3   
   13da1:	int3   
   13da2:	int3   
   13da3:	int3   
   13da4:	mov    edi,edi
   13da6:	push   esi
   13da7:	push   edi
   13da8:	push   0x1
   13daa:	xor    edi,edi
   13dac:	push   edi
   13dad:	mov    esi,ecx
   13daf:	call   0x13b52
   13db4:	cmp    DWORD PTR ds:0x730a0,edi
   13dba:	jne    0x13dd1
   13dbc:	mov    ecx,eax
   13dbe:	mov    DWORD PTR ds:0x730a0,ecx
   13dc4:	mov    DWORD PTR [ecx],edi
   13dc6:	mov    ecx,DWORD PTR ds:0x730a0
   13dcc:	xor    eax,eax
   13dce:	mov    DWORD PTR [ecx+0x8],edi
   13dd1:	inc    DWORD PTR ds:0x7324c
   13dd7:	cmp    eax,edi
   13dd9:	je     0x13de2
   13ddb:	push   eax
   13ddc:	call   0x11c4c
   13de1:	pop    ecx
   13de2:	push   edi
   13de3:	push   DWORD PTR ds:0x730a0
   13de9:	mov    ecx,esi
   13deb:	call   0x13b52
   13df0:	mov    DWORD PTR [esi+0xc],edi
   13df3:	mov    DWORD PTR [esi+0x4],eax
   13df6:	mov    DWORD PTR [eax],eax
   13df8:	mov    esi,DWORD PTR [esi+0x4]
   13dfb:	pop    edi
   13dfc:	mov    DWORD PTR [esi+0x8],esi
   13dff:	pop    esi
   13e00:	ret    
   13e01:	int3   
   13e02:	int3   
   13e03:	int3   
   13e04:	int3   
   13e05:	int3   
   13e06:	mov    edi,edi
   13e08:	push   esi
   13e09:	push   edi
   13e0a:	push   0x1
   13e0c:	xor    edi,edi
   13e0e:	push   edi
   13e0f:	mov    esi,ecx
   13e11:	call   0x13b76
   13e16:	cmp    DWORD PTR ds:0x730a8,edi
   13e1c:	jne    0x13e33
   13e1e:	mov    ecx,eax
   13e20:	mov    DWORD PTR ds:0x730a8,ecx
   13e26:	mov    DWORD PTR [ecx],edi
   13e28:	mov    ecx,DWORD PTR ds:0x730a8
   13e2e:	xor    eax,eax
   13e30:	mov    DWORD PTR [ecx+0x8],edi
   13e33:	inc    DWORD PTR ds:0x73250
   13e39:	cmp    eax,edi
   13e3b:	je     0x13e44
   13e3d:	push   eax
   13e3e:	call   0x11c4c
   13e43:	pop    ecx
   13e44:	push   edi
   13e45:	push   DWORD PTR ds:0x730a8
   13e4b:	mov    ecx,esi
   13e4d:	call   0x13b76
   13e52:	mov    DWORD PTR [esi+0xc],edi
   13e55:	mov    DWORD PTR [esi+0x4],eax
   13e58:	mov    DWORD PTR [eax],eax
   13e5a:	mov    esi,DWORD PTR [esi+0x4]
   13e5d:	pop    edi
   13e5e:	mov    DWORD PTR [esi+0x8],esi
   13e61:	pop    esi
   13e62:	ret    
   13e63:	int3   
   13e64:	int3   
   13e65:	int3   
   13e66:	int3   
   13e67:	int3   
   13e68:	mov    edi,edi
   13e6a:	push   esi
   13e6b:	push   edi
   13e6c:	push   0x1
   13e6e:	xor    edi,edi
   13e70:	push   edi
   13e71:	mov    esi,ecx
   13e73:	call   0x13b9a
   13e78:	cmp    DWORD PTR ds:0x730ac,edi
   13e7e:	jne    0x13e95
   13e80:	mov    ecx,eax
   13e82:	mov    DWORD PTR ds:0x730ac,ecx
   13e88:	mov    DWORD PTR [ecx],edi
   13e8a:	mov    ecx,DWORD PTR ds:0x730ac
   13e90:	xor    eax,eax
   13e92:	mov    DWORD PTR [ecx+0x8],edi
   13e95:	inc    DWORD PTR ds:0x73254
   13e9b:	cmp    eax,edi
   13e9d:	je     0x13ea6
   13e9f:	push   eax
   13ea0:	call   0x11c4c
   13ea5:	pop    ecx
   13ea6:	push   edi
   13ea7:	push   DWORD PTR ds:0x730ac
   13ead:	mov    ecx,esi
   13eaf:	call   0x13b9a
   13eb4:	mov    DWORD PTR [esi+0xc],edi
   13eb7:	mov    DWORD PTR [esi+0x4],eax
   13eba:	mov    DWORD PTR [eax],eax
   13ebc:	mov    esi,DWORD PTR [esi+0x4]
   13ebf:	pop    edi
   13ec0:	mov    DWORD PTR [esi+0x8],esi
   13ec3:	pop    esi
   13ec4:	ret    
   13ec5:	int3   
   13ec6:	int3   
   13ec7:	int3   
   13ec8:	int3   
   13ec9:	int3   
   13eca:	mov    edi,edi
   13ecc:	push   esi
   13ecd:	push   edi
   13ece:	push   0x1
   13ed0:	xor    edi,edi
   13ed2:	push   edi
   13ed3:	mov    esi,ecx
   13ed5:	call   0x13b52
   13eda:	cmp    DWORD PTR ds:0x730b0,edi
   13ee0:	jne    0x13ef7
   13ee2:	mov    ecx,eax
   13ee4:	mov    DWORD PTR ds:0x730b0,ecx
   13eea:	mov    DWORD PTR [ecx],edi
   13eec:	mov    ecx,DWORD PTR ds:0x730b0
   13ef2:	xor    eax,eax
   13ef4:	mov    DWORD PTR [ecx+0x8],edi
   13ef7:	inc    DWORD PTR ds:0x73258
   13efd:	cmp    eax,edi
   13eff:	je     0x13f08
   13f01:	push   eax
   13f02:	call   0x11c4c
   13f07:	pop    ecx
   13f08:	push   edi
   13f09:	push   DWORD PTR ds:0x730b0
   13f0f:	mov    ecx,esi
   13f11:	call   0x13b52
   13f16:	mov    DWORD PTR [esi+0xc],edi
   13f19:	mov    DWORD PTR [esi+0x4],eax
   13f1c:	mov    DWORD PTR [eax],eax
   13f1e:	mov    esi,DWORD PTR [esi+0x4]
   13f21:	pop    edi
   13f22:	mov    DWORD PTR [esi+0x8],esi
   13f25:	pop    esi
   13f26:	ret    
   13f27:	int3   
   13f28:	int3   
   13f29:	int3   
   13f2a:	int3   
   13f2b:	int3   
   13f2c:	mov    edi,edi
   13f2e:	push   esi
   13f2f:	push   edi
   13f30:	push   0x1
   13f32:	xor    edi,edi
   13f34:	push   edi
   13f35:	mov    esi,ecx
   13f37:	call   0x13bbe
   13f3c:	cmp    DWORD PTR ds:0x730a4,edi
   13f42:	jne    0x13f59
   13f44:	mov    ecx,eax
   13f46:	mov    DWORD PTR ds:0x730a4,ecx
   13f4c:	mov    DWORD PTR [ecx],edi
   13f4e:	mov    ecx,DWORD PTR ds:0x730a4
   13f54:	xor    eax,eax
   13f56:	mov    DWORD PTR [ecx+0x8],edi
   13f59:	inc    DWORD PTR ds:0x7325c
   13f5f:	cmp    eax,edi
   13f61:	je     0x13f6a
   13f63:	push   eax
   13f64:	call   0x11c4c
   13f69:	pop    ecx
   13f6a:	push   edi
   13f6b:	push   DWORD PTR ds:0x730a4
   13f71:	mov    ecx,esi
   13f73:	call   0x13bbe
   13f78:	mov    DWORD PTR [esi+0xc],edi
   13f7b:	mov    DWORD PTR [esi+0x4],eax
   13f7e:	mov    DWORD PTR [eax],eax
   13f80:	mov    esi,DWORD PTR [esi+0x4]
   13f83:	pop    edi
   13f84:	mov    DWORD PTR [esi+0x8],esi
   13f87:	pop    esi
   13f88:	ret    
   13f89:	int3   
   13f8a:	int3   
   13f8b:	int3   
   13f8c:	int3   
   13f8d:	int3   
   13f8e:	mov    edi,edi
   13f90:	push   ebp
   13f91:	mov    ebp,esp
   13f93:	push   ebx
   13f94:	push   esi
   13f95:	mov    esi,DWORD PTR [ebp+0x10]
   13f98:	push   edi
   13f99:	push   0x0
   13f9b:	push   esi
   13f9c:	mov    edi,ecx
   13f9e:	call   0x13b52
   13fa3:	push   DWORD PTR [ebp+0x14]
   13fa6:	mov    ebx,eax
   13fa8:	mov    eax,ds:0x730a0
   13fad:	mov    DWORD PTR [ebx],eax
   13faf:	mov    eax,ds:0x730a0
   13fb4:	mov    DWORD PTR [ebx+0x8],eax
   13fb7:	lea    eax,[ebx+0xc]
   13fba:	push   eax
   13fbb:	call   0x11166
   13fc0:	inc    DWORD PTR [edi+0xc]
   13fc3:	cmp    esi,DWORD PTR [edi+0x4]
   13fc6:	je     0x13fea
   13fc8:	mov    eax,DWORD PTR [ebp+0xc]
   13fcb:	cmp    eax,DWORD PTR ds:0x730a0
   13fd1:	jne    0x13fea
   13fd3:	mov    eax,DWORD PTR [ebp+0x14]
   13fd6:	mov    eax,DWORD PTR [eax]
   13fd8:	cmp    eax,DWORD PTR [esi+0xc]
   13fdb:	jb     0x13fea
   13fdd:	mov    DWORD PTR [esi+0x8],ebx
   13fe0:	mov    eax,DWORD PTR [edi+0x4]
   13fe3:	cmp    esi,DWORD PTR [eax+0x8]
   13fe6:	jne    0x14004
   13fe8:	jmp    0x13ff9
   13fea:	mov    DWORD PTR [esi],ebx
   13fec:	mov    eax,DWORD PTR [edi+0x4]
   13fef:	cmp    esi,eax
   13ff1:	jne    0x13ffe
   13ff3:	mov    DWORD PTR [eax+0x4],ebx
   13ff6:	mov    eax,DWORD PTR [edi+0x4]
   13ff9:	mov    DWORD PTR [eax+0x8],ebx
   13ffc:	jmp    0x14004
   13ffe:	cmp    esi,DWORD PTR [eax]
   14000:	jne    0x14004
   14002:	mov    DWORD PTR [eax],ebx
   14004:	mov    eax,DWORD PTR [edi+0x4]
   14007:	mov    esi,ebx
   14009:	cmp    ebx,DWORD PTR [eax+0x4]
   1400c:	je     0x140c0
   14012:	mov    eax,DWORD PTR [esi+0x4]
   14015:	xor    edx,edx
   14017:	cmp    DWORD PTR [eax+0x14],edx
   1401a:	jne    0x140c0
   14020:	mov    ecx,DWORD PTR [eax+0x4]
   14023:	cmp    eax,DWORD PTR [ecx]
   14025:	jne    0x14061
   14027:	mov    ecx,DWORD PTR [ecx+0x8]
   1402a:	cmp    DWORD PTR [ecx+0x14],edx
   1402d:	je     0x14068
   1402f:	cmp    esi,DWORD PTR [eax+0x8]
   14032:	jne    0x1403e
   14034:	mov    esi,eax
   14036:	push   esi
   14037:	mov    ecx,edi
   14039:	call   0x12be6
   1403e:	mov    eax,DWORD PTR [esi+0x4]
   14041:	mov    DWORD PTR [eax+0x14],0x1
   14048:	mov    eax,DWORD PTR [esi+0x4]
   1404b:	mov    eax,DWORD PTR [eax+0x4]
   1404e:	and    DWORD PTR [eax+0x14],0x0
   14052:	mov    eax,DWORD PTR [esi+0x4]
   14055:	push   DWORD PTR [eax+0x4]
   14058:	mov    ecx,edi
   1405a:	call   0x12c34
   1405f:	jmp    0x140b4
   14061:	mov    ecx,DWORD PTR [ecx]
   14063:	cmp    DWORD PTR [ecx+0x14],edx
   14066:	jne    0x14085
   14068:	mov    edx,eax
   1406a:	xor    eax,eax
   1406c:	inc    eax
   1406d:	mov    DWORD PTR [edx+0x14],eax
   14070:	mov    DWORD PTR [ecx+0x14],eax
   14073:	mov    eax,DWORD PTR [esi+0x4]
   14076:	mov    eax,DWORD PTR [eax+0x4]
   14079:	and    DWORD PTR [eax+0x14],0x0
   1407d:	mov    eax,DWORD PTR [esi+0x4]
   14080:	mov    esi,DWORD PTR [eax+0x4]
   14083:	jmp    0x140b4
   14085:	cmp    esi,DWORD PTR [eax]
   14087:	jne    0x14093
   14089:	mov    esi,eax
   1408b:	push   esi
   1408c:	mov    ecx,edi
   1408e:	call   0x12c34
   14093:	mov    eax,DWORD PTR [esi+0x4]
   14096:	mov    DWORD PTR [eax+0x14],0x1
   1409d:	mov    eax,DWORD PTR [esi+0x4]
   140a0:	mov    eax,DWORD PTR [eax+0x4]
   140a3:	and    DWORD PTR [eax+0x14],0x0
   140a7:	mov    eax,DWORD PTR [esi+0x4]
   140aa:	push   DWORD PTR [eax+0x4]
   140ad:	mov    ecx,edi
   140af:	call   0x12be6
   140b4:	mov    eax,DWORD PTR [edi+0x4]
   140b7:	cmp    esi,DWORD PTR [eax+0x4]
   140ba:	jne    0x14012
   140c0:	mov    eax,DWORD PTR [edi+0x4]
   140c3:	mov    eax,DWORD PTR [eax+0x4]
   140c6:	pop    edi
   140c7:	mov    DWORD PTR [eax+0x14],0x1
   140ce:	mov    eax,DWORD PTR [ebp+0x8]
   140d1:	pop    esi
   140d2:	mov    DWORD PTR [eax],ebx
   140d4:	pop    ebx
   140d5:	pop    ebp
   140d6:	ret    0x10
   140d9:	int3   
   140da:	int3   
   140db:	int3   
   140dc:	int3   
   140dd:	int3   
   140de:	mov    edi,edi
   140e0:	push   ebp
   140e1:	mov    ebp,esp
   140e3:	push   ecx
   140e4:	push   ecx
   140e5:	push   ebx
   140e6:	push   esi
   140e7:	mov    DWORD PTR [ebp-0x4],ecx
   140ea:	push   edi
   140eb:	mov    edi,DWORD PTR [ebp+0xc]
   140ee:	lea    ecx,[ebp+0xc]
   140f1:	call   0x132ec
   140f6:	mov    esi,DWORD PTR [edi]
   140f8:	mov    eax,ds:0x730a8
   140fd:	mov    ebx,edi
   140ff:	mov    DWORD PTR [ebp-0x8],esi
   14102:	cmp    esi,eax
   14104:	jne    0x14122
   14106:	mov    esi,DWORD PTR [edi+0x8]
   14109:	mov    eax,DWORD PTR [ebx+0x4]
   1410c:	mov    ecx,DWORD PTR [ebp-0x4]
   1410f:	mov    DWORD PTR [esi+0x4],eax
   14112:	mov    eax,DWORD PTR [ecx+0x4]
   14115:	cmp    DWORD PTR [eax+0x4],edi
   14118:	jne    0x14197
   1411a:	mov    DWORD PTR [eax+0x4],esi
   1411d:	jmp    0x141a5
   14122:	mov    ecx,DWORD PTR [edi+0x8]
   14125:	cmp    ecx,eax
   14127:	je     0x14109
   14129:	push   ecx
   1412a:	call   0x12b20
   1412f:	mov    ebx,eax
   14131:	mov    esi,DWORD PTR [ebx+0x8]
   14134:	cmp    ebx,edi
   14136:	je     0x14109
   14138:	mov    eax,DWORD PTR [ebp-0x8]
   1413b:	mov    DWORD PTR [eax+0x4],ebx
   1413e:	mov    eax,DWORD PTR [edi]
   14140:	mov    DWORD PTR [ebx],eax
   14142:	cmp    ebx,DWORD PTR [edi+0x8]
   14145:	jne    0x1414c
   14147:	mov    DWORD PTR [esi+0x4],ebx
   1414a:	jmp    0x14163
   1414c:	mov    eax,DWORD PTR [ebx+0x4]
   1414f:	mov    DWORD PTR [esi+0x4],eax
   14152:	mov    eax,DWORD PTR [ebx+0x4]
   14155:	mov    DWORD PTR [eax],esi
   14157:	mov    eax,DWORD PTR [edi+0x8]
   1415a:	mov    DWORD PTR [ebx+0x8],eax
   1415d:	mov    eax,DWORD PTR [edi+0x8]
   14160:	mov    DWORD PTR [eax+0x4],ebx
   14163:	mov    eax,DWORD PTR [ebp-0x4]
   14166:	mov    eax,DWORD PTR [eax+0x4]
   14169:	cmp    DWORD PTR [eax+0x4],edi
   1416c:	jne    0x14173
   1416e:	mov    DWORD PTR [eax+0x4],ebx
   14171:	jmp    0x14181
   14173:	mov    eax,DWORD PTR [edi+0x4]
   14176:	cmp    DWORD PTR [eax],edi
   14178:	jne    0x1417e
   1417a:	mov    DWORD PTR [eax],ebx
   1417c:	jmp    0x14181
   1417e:	mov    DWORD PTR [eax+0x8],ebx
   14181:	mov    eax,DWORD PTR [edi+0x4]
   14184:	mov    DWORD PTR [ebx+0x4],eax
   14187:	mov    eax,DWORD PTR [ebx+0x50]
   1418a:	mov    ecx,DWORD PTR [edi+0x50]
   1418d:	mov    DWORD PTR [ebx+0x50],ecx
   14190:	mov    DWORD PTR [edi+0x50],eax
   14193:	mov    ebx,edi
   14195:	jmp    0x141f8
   14197:	mov    eax,DWORD PTR [edi+0x4]
   1419a:	cmp    DWORD PTR [eax],edi
   1419c:	jne    0x141a2
   1419e:	mov    DWORD PTR [eax],esi
   141a0:	jmp    0x141a5
   141a2:	mov    DWORD PTR [eax+0x8],esi
   141a5:	mov    eax,DWORD PTR [ecx+0x4]
   141a8:	mov    DWORD PTR [ebp-0x8],eax
   141ab:	cmp    DWORD PTR [eax],edi
   141ad:	jne    0x141cf
   141af:	mov    edx,DWORD PTR [edi+0x8]
   141b2:	cmp    edx,DWORD PTR ds:0x730a8
   141b8:	jne    0x141c1
   141ba:	mov    edx,DWORD PTR [edi+0x4]
   141bd:	mov    DWORD PTR [eax],edx
   141bf:	jmp    0x141cf
   141c1:	push   esi
   141c2:	call   0x12b20
   141c7:	mov    ecx,DWORD PTR [ebp-0x8]
   141ca:	mov    DWORD PTR [ecx],eax
   141cc:	mov    ecx,DWORD PTR [ebp-0x4]
   141cf:	mov    eax,DWORD PTR [ecx+0x4]
   141d2:	mov    DWORD PTR [ebp-0x8],eax
   141d5:	cmp    DWORD PTR [eax+0x8],edi
   141d8:	jne    0x141f8
   141da:	mov    ecx,DWORD PTR [edi]
   141dc:	cmp    ecx,DWORD PTR ds:0x730a8
   141e2:	jne    0x141ec
   141e4:	mov    ecx,DWORD PTR [edi+0x4]
   141e7:	mov    DWORD PTR [eax+0x8],ecx
   141ea:	jmp    0x141f8
   141ec:	push   esi
   141ed:	call   0x10ee2
   141f2:	mov    ecx,DWORD PTR [ebp-0x8]
   141f5:	mov    DWORD PTR [ecx+0x8],eax
   141f8:	xor    edi,edi
   141fa:	inc    edi
   141fb:	cmp    DWORD PTR [ebx+0x50],edi
   141fe:	jne    0x14315
   14204:	jmp    0x142c3
   14209:	cmp    DWORD PTR [esi+0x50],edi
   1420c:	jne    0x14312
   14212:	mov    eax,DWORD PTR [esi+0x4]
   14215:	cmp    esi,DWORD PTR [eax]
   14217:	jne    0x1428e
   14219:	mov    eax,DWORD PTR [eax+0x8]
   1421c:	cmp    DWORD PTR [eax+0x50],0x0
   14220:	jne    0x1423a
   14222:	mov    DWORD PTR [eax+0x50],edi
   14225:	mov    eax,DWORD PTR [esi+0x4]
   14228:	and    DWORD PTR [eax+0x50],0x0
   1422c:	push   DWORD PTR [esi+0x4]
   1422f:	call   0x10e94
   14234:	mov    eax,DWORD PTR [esi+0x4]
   14237:	mov    eax,DWORD PTR [eax+0x8]
   1423a:	mov    ecx,DWORD PTR [eax]
   1423c:	cmp    DWORD PTR [ecx+0x50],edi
   1423f:	jne    0x14249
   14241:	mov    ecx,DWORD PTR [eax+0x8]
   14244:	cmp    DWORD PTR [ecx+0x50],edi
   14247:	je     0x142bc
   14249:	mov    ecx,DWORD PTR [eax+0x8]
   1424c:	cmp    DWORD PTR [ecx+0x50],edi
   1424f:	jne    0x14269
   14251:	mov    ecx,DWORD PTR [eax]
   14253:	mov    DWORD PTR [ecx+0x50],edi
   14256:	mov    ecx,DWORD PTR [ebp-0x4]
   14259:	and    DWORD PTR [eax+0x50],0x0
   1425d:	push   eax
   1425e:	call   0x10f04
   14263:	mov    eax,DWORD PTR [esi+0x4]
   14266:	mov    eax,DWORD PTR [eax+0x8]
   14269:	mov    ecx,DWORD PTR [esi+0x4]
   1426c:	mov    ecx,DWORD PTR [ecx+0x50]
   1426f:	mov    DWORD PTR [eax+0x50],ecx
   14272:	mov    ecx,DWORD PTR [esi+0x4]
   14275:	mov    DWORD PTR [ecx+0x50],edi
   14278:	mov    eax,DWORD PTR [eax+0x8]
   1427b:	mov    ecx,DWORD PTR [ebp-0x4]
   1427e:	mov    DWORD PTR [eax+0x50],edi
   14281:	push   DWORD PTR [esi+0x4]
   14284:	call   0x10e94
   14289:	jmp    0x14312
   1428e:	mov    eax,DWORD PTR [eax]
   14290:	cmp    DWORD PTR [eax+0x50],0x0
   14294:	jne    0x142ad
   14296:	mov    DWORD PTR [eax+0x50],edi
   14299:	mov    eax,DWORD PTR [esi+0x4]
   1429c:	and    DWORD PTR [eax+0x50],0x0
   142a0:	push   DWORD PTR [esi+0x4]
   142a3:	call   0x10f04
   142a8:	mov    eax,DWORD PTR [esi+0x4]
   142ab:	mov    eax,DWORD PTR [eax]
   142ad:	mov    ecx,DWORD PTR [eax+0x8]
   142b0:	cmp    DWORD PTR [ecx+0x50],edi
   142b3:	jne    0x142d4
   142b5:	mov    ecx,DWORD PTR [eax]
   142b7:	cmp    DWORD PTR [ecx+0x50],edi
   142ba:	jne    0x142d4
   142bc:	and    DWORD PTR [eax+0x50],0x0
   142c0:	mov    esi,DWORD PTR [esi+0x4]
   142c3:	mov    ecx,DWORD PTR [ebp-0x4]
   142c6:	mov    eax,DWORD PTR [ecx+0x4]
   142c9:	cmp    esi,DWORD PTR [eax+0x4]
   142cc:	jne    0x14209
   142d2:	jmp    0x14312
   142d4:	mov    ecx,DWORD PTR [eax]
   142d6:	cmp    DWORD PTR [ecx+0x50],edi
   142d9:	jne    0x142f3
   142db:	mov    ecx,DWORD PTR [eax+0x8]
   142de:	mov    DWORD PTR [ecx+0x50],edi
   142e1:	mov    ecx,DWORD PTR [ebp-0x4]
   142e4:	and    DWORD PTR [eax+0x50],0x0
   142e8:	push   eax
   142e9:	call   0x10e94
   142ee:	mov    eax,DWORD PTR [esi+0x4]
   142f1:	mov    eax,DWORD PTR [eax]
   142f3:	mov    ecx,DWORD PTR [esi+0x4]
   142f6:	mov    ecx,DWORD PTR [ecx+0x50]
   142f9:	mov    DWORD PTR [eax+0x50],ecx
   142fc:	mov    ecx,DWORD PTR [esi+0x4]
   142ff:	mov    DWORD PTR [ecx+0x50],edi
   14302:	mov    eax,DWORD PTR [eax]
   14304:	mov    ecx,DWORD PTR [ebp-0x4]
   14307:	mov    DWORD PTR [eax+0x50],edi
   1430a:	push   DWORD PTR [esi+0x4]
   1430d:	call   0x10f04
   14312:	mov    DWORD PTR [esi+0x50],edi
   14315:	lea    eax,[ebx+0x10]
   14318:	push   eax
   14319:	call   0x134e2
   1431e:	push   ebx
   1431f:	call   0x11c4c
   14324:	mov    eax,DWORD PTR [ebp-0x4]
   14327:	dec    DWORD PTR [eax+0xc]
   1432a:	mov    eax,DWORD PTR [ebp+0x8]
   1432d:	pop    ecx
   1432e:	mov    ecx,DWORD PTR [ebp+0xc]
   14331:	pop    edi
   14332:	pop    esi
   14333:	mov    DWORD PTR [eax],ecx
   14335:	pop    ebx
   14336:	leave  
   14337:	ret    0x8
   1433a:	int3   
   1433b:	int3   
   1433c:	int3   
   1433d:	int3   
   1433e:	int3   
   1433f:	int3   
   14340:	mov    edi,edi
   14342:	push   ebp
   14343:	mov    ebp,esp
   14345:	push   ebx
   14346:	push   esi
   14347:	push   edi
   14348:	mov    edi,DWORD PTR [ebp+0x8]
   1434b:	mov    ebx,ecx
   1434d:	mov    esi,edi
   1434f:	cmp    edi,DWORD PTR ds:0x730a8
   14355:	je     0x1437d
   14357:	push   DWORD PTR [esi+0x8]
   1435a:	mov    ecx,ebx
   1435c:	call   0x14340
   14361:	mov    esi,DWORD PTR [esi]
   14363:	lea    eax,[edi+0x10]
   14366:	push   eax
   14367:	call   0x134e2
   1436c:	push   edi
   1436d:	call   0x11c4c
   14372:	pop    ecx
   14373:	mov    edi,esi
   14375:	cmp    esi,DWORD PTR ds:0x730a8
   1437b:	jne    0x14357
   1437d:	pop    edi
   1437e:	pop    esi
   1437f:	pop    ebx
   14380:	pop    ebp
   14381:	ret    0x4
   14384:	int3   
   14385:	int3   
   14386:	int3   
   14387:	int3   
   14388:	int3   
   14389:	int3   
   1438a:	mov    edi,edi
   1438c:	push   ebp
   1438d:	mov    ebp,esp
   1438f:	push   ecx
   14390:	push   ecx
   14391:	push   ebx
   14392:	push   esi
   14393:	mov    DWORD PTR [ebp-0x4],ecx
   14396:	push   edi
   14397:	mov    edi,DWORD PTR [ebp+0xc]
   1439a:	lea    ecx,[ebp+0xc]
   1439d:	call   0x1109c
   143a2:	mov    esi,DWORD PTR [edi]
   143a4:	mov    eax,ds:0x730ac
   143a9:	mov    ebx,edi
   143ab:	mov    DWORD PTR [ebp-0x8],esi
   143ae:	cmp    esi,eax
   143b0:	jne    0x143ce
   143b2:	mov    esi,DWORD PTR [edi+0x8]
   143b5:	mov    eax,DWORD PTR [ebx+0x4]
   143b8:	mov    ecx,DWORD PTR [ebp-0x4]
   143bb:	mov    DWORD PTR [esi+0x4],eax
   143be:	mov    eax,DWORD PTR [ecx+0x4]
   143c1:	cmp    DWORD PTR [eax+0x4],edi
   143c4:	jne    0x14443
   143c6:	mov    DWORD PTR [eax+0x4],esi
   143c9:	jmp    0x14451
   143ce:	mov    ecx,DWORD PTR [edi+0x8]
   143d1:	cmp    ecx,eax
   143d3:	je     0x143b5
   143d5:	push   ecx
   143d6:	call   0x10fb6
   143db:	mov    ebx,eax
   143dd:	mov    esi,DWORD PTR [ebx+0x8]
   143e0:	cmp    ebx,edi
   143e2:	je     0x143b5
   143e4:	mov    eax,DWORD PTR [ebp-0x8]
   143e7:	mov    DWORD PTR [eax+0x4],ebx
   143ea:	mov    eax,DWORD PTR [edi]
   143ec:	mov    DWORD PTR [ebx],eax
   143ee:	cmp    ebx,DWORD PTR [edi+0x8]
   143f1:	jne    0x143f8
   143f3:	mov    DWORD PTR [esi+0x4],ebx
   143f6:	jmp    0x1440f
   143f8:	mov    eax,DWORD PTR [ebx+0x4]
   143fb:	mov    DWORD PTR [esi+0x4],eax
   143fe:	mov    eax,DWORD PTR [ebx+0x4]
   14401:	mov    DWORD PTR [eax],esi
   14403:	mov    eax,DWORD PTR [edi+0x8]
   14406:	mov    DWORD PTR [ebx+0x8],eax
   14409:	mov    eax,DWORD PTR [edi+0x8]
   1440c:	mov    DWORD PTR [eax+0x4],ebx
   1440f:	mov    eax,DWORD PTR [ebp-0x4]
   14412:	mov    eax,DWORD PTR [eax+0x4]
   14415:	cmp    DWORD PTR [eax+0x4],edi
   14418:	jne    0x1441f
   1441a:	mov    DWORD PTR [eax+0x4],ebx
   1441d:	jmp    0x1442d
   1441f:	mov    eax,DWORD PTR [edi+0x4]
   14422:	cmp    DWORD PTR [eax],edi
   14424:	jne    0x1442a
   14426:	mov    DWORD PTR [eax],ebx
   14428:	jmp    0x1442d
   1442a:	mov    DWORD PTR [eax+0x8],ebx
   1442d:	mov    eax,DWORD PTR [edi+0x4]
   14430:	mov    DWORD PTR [ebx+0x4],eax
   14433:	mov    eax,DWORD PTR [ebx+0x1c]
   14436:	mov    ecx,DWORD PTR [edi+0x1c]
   14439:	mov    DWORD PTR [ebx+0x1c],ecx
   1443c:	mov    DWORD PTR [edi+0x1c],eax
   1443f:	mov    ebx,edi
   14441:	jmp    0x144a4
   14443:	mov    eax,DWORD PTR [edi+0x4]
   14446:	cmp    DWORD PTR [eax],edi
   14448:	jne    0x1444e
   1444a:	mov    DWORD PTR [eax],esi
   1444c:	jmp    0x14451
   1444e:	mov    DWORD PTR [eax+0x8],esi
   14451:	mov    eax,DWORD PTR [ecx+0x4]
   14454:	mov    DWORD PTR [ebp-0x8],eax
   14457:	cmp    DWORD PTR [eax],edi
   14459:	jne    0x1447b
   1445b:	mov    edx,DWORD PTR [edi+0x8]
   1445e:	cmp    edx,DWORD PTR ds:0x730ac
   14464:	jne    0x1446d
   14466:	mov    edx,DWORD PTR [edi+0x4]
   14469:	mov    DWORD PTR [eax],edx
   1446b:	jmp    0x1447b
   1446d:	push   esi
   1446e:	call   0x10fb6
   14473:	mov    ecx,DWORD PTR [ebp-0x8]
   14476:	mov    DWORD PTR [ecx],eax
   14478:	mov    ecx,DWORD PTR [ebp-0x4]
   1447b:	mov    eax,DWORD PTR [ecx+0x4]
   1447e:	mov    DWORD PTR [ebp-0x8],eax
   14481:	cmp    DWORD PTR [eax+0x8],edi
   14484:	jne    0x144a4
   14486:	mov    ecx,DWORD PTR [edi]
   14488:	cmp    ecx,DWORD PTR ds:0x730ac
   1448e:	jne    0x14498
   14490:	mov    ecx,DWORD PTR [edi+0x4]
   14493:	mov    DWORD PTR [eax+0x8],ecx
   14496:	jmp    0x144a4
   14498:	push   esi
   14499:	call   0x10f94
   1449e:	mov    ecx,DWORD PTR [ebp-0x8]
   144a1:	mov    DWORD PTR [ecx+0x8],eax
   144a4:	xor    edi,edi
   144a6:	inc    edi
   144a7:	cmp    DWORD PTR [ebx+0x1c],edi
   144aa:	jne    0x145c1
   144b0:	jmp    0x1456f
   144b5:	cmp    DWORD PTR [esi+0x1c],edi
   144b8:	jne    0x145be
   144be:	mov    eax,DWORD PTR [esi+0x4]
   144c1:	cmp    esi,DWORD PTR [eax]
   144c3:	jne    0x1453a
   144c5:	mov    eax,DWORD PTR [eax+0x8]
   144c8:	cmp    DWORD PTR [eax+0x1c],0x0
   144cc:	jne    0x144e6
   144ce:	mov    DWORD PTR [eax+0x1c],edi
   144d1:	mov    eax,DWORD PTR [esi+0x4]
   144d4:	and    DWORD PTR [eax+0x1c],0x0
   144d8:	push   DWORD PTR [esi+0x4]
   144db:	call   0x12db4
   144e0:	mov    eax,DWORD PTR [esi+0x4]
   144e3:	mov    eax,DWORD PTR [eax+0x8]
   144e6:	mov    ecx,DWORD PTR [eax]
   144e8:	cmp    DWORD PTR [ecx+0x1c],edi
   144eb:	jne    0x144f5
   144ed:	mov    ecx,DWORD PTR [eax+0x8]
   144f0:	cmp    DWORD PTR [ecx+0x1c],edi
   144f3:	je     0x14568
   144f5:	mov    ecx,DWORD PTR [eax+0x8]
   144f8:	cmp    DWORD PTR [ecx+0x1c],edi
   144fb:	jne    0x14515
   144fd:	mov    ecx,DWORD PTR [eax]
   144ff:	mov    DWORD PTR [ecx+0x1c],edi
   14502:	mov    ecx,DWORD PTR [ebp-0x4]
   14505:	and    DWORD PTR [eax+0x1c],0x0
   14509:	push   eax
   1450a:	call   0x12e02
   1450f:	mov    eax,DWORD PTR [esi+0x4]
   14512:	mov    eax,DWORD PTR [eax+0x8]
   14515:	mov    ecx,DWORD PTR [esi+0x4]
   14518:	mov    ecx,DWORD PTR [ecx+0x1c]
   1451b:	mov    DWORD PTR [eax+0x1c],ecx
   1451e:	mov    ecx,DWORD PTR [esi+0x4]
   14521:	mov    DWORD PTR [ecx+0x1c],edi
   14524:	mov    eax,DWORD PTR [eax+0x8]
   14527:	mov    ecx,DWORD PTR [ebp-0x4]
   1452a:	mov    DWORD PTR [eax+0x1c],edi
   1452d:	push   DWORD PTR [esi+0x4]
   14530:	call   0x12db4
   14535:	jmp    0x145be
   1453a:	mov    eax,DWORD PTR [eax]
   1453c:	cmp    DWORD PTR [eax+0x1c],0x0
   14540:	jne    0x14559
   14542:	mov    DWORD PTR [eax+0x1c],edi
   14545:	mov    eax,DWORD PTR [esi+0x4]
   14548:	and    DWORD PTR [eax+0x1c],0x0
   1454c:	push   DWORD PTR [esi+0x4]
   1454f:	call   0x12e02
   14554:	mov    eax,DWORD PTR [esi+0x4]
   14557:	mov    eax,DWORD PTR [eax]
   14559:	mov    ecx,DWORD PTR [eax+0x8]
   1455c:	cmp    DWORD PTR [ecx+0x1c],edi
   1455f:	jne    0x14580
   14561:	mov    ecx,DWORD PTR [eax]
   14563:	cmp    DWORD PTR [ecx+0x1c],edi
   14566:	jne    0x14580
   14568:	and    DWORD PTR [eax+0x1c],0x0
   1456c:	mov    esi,DWORD PTR [esi+0x4]
   1456f:	mov    ecx,DWORD PTR [ebp-0x4]
   14572:	mov    eax,DWORD PTR [ecx+0x4]
   14575:	cmp    esi,DWORD PTR [eax+0x4]
   14578:	jne    0x144b5
   1457e:	jmp    0x145be
   14580:	mov    ecx,DWORD PTR [eax]
   14582:	cmp    DWORD PTR [ecx+0x1c],edi
   14585:	jne    0x1459f
   14587:	mov    ecx,DWORD PTR [eax+0x8]
   1458a:	mov    DWORD PTR [ecx+0x1c],edi
   1458d:	mov    ecx,DWORD PTR [ebp-0x4]
   14590:	and    DWORD PTR [eax+0x1c],0x0
   14594:	push   eax
   14595:	call   0x12db4
   1459a:	mov    eax,DWORD PTR [esi+0x4]
   1459d:	mov    eax,DWORD PTR [eax]
   1459f:	mov    ecx,DWORD PTR [esi+0x4]
   145a2:	mov    ecx,DWORD PTR [ecx+0x1c]
   145a5:	mov    DWORD PTR [eax+0x1c],ecx
   145a8:	mov    ecx,DWORD PTR [esi+0x4]
   145ab:	mov    DWORD PTR [ecx+0x1c],edi
   145ae:	mov    eax,DWORD PTR [eax]
   145b0:	mov    ecx,DWORD PTR [ebp-0x4]
   145b3:	mov    DWORD PTR [eax+0x1c],edi
   145b6:	push   DWORD PTR [esi+0x4]
   145b9:	call   0x12e02
   145be:	mov    DWORD PTR [esi+0x1c],edi
   145c1:	lea    eax,[ebx+0xc]
   145c4:	push   eax
   145c5:	call   0x134fa
   145ca:	push   ebx
   145cb:	call   0x11c4c
   145d0:	mov    eax,DWORD PTR [ebp-0x4]
   145d3:	dec    DWORD PTR [eax+0xc]
   145d6:	mov    eax,DWORD PTR [ebp+0x8]
   145d9:	pop    ecx
   145da:	mov    ecx,DWORD PTR [ebp+0xc]
   145dd:	pop    edi
   145de:	pop    esi
   145df:	mov    DWORD PTR [eax],ecx
   145e1:	pop    ebx
   145e2:	leave  
   145e3:	ret    0x8
   145e6:	int3   
   145e7:	int3   
   145e8:	int3   
   145e9:	int3   
   145ea:	int3   
   145eb:	int3   
   145ec:	mov    edi,edi
   145ee:	push   ebp
   145ef:	mov    ebp,esp
   145f1:	push   ebx
   145f2:	push   esi
   145f3:	push   edi
   145f4:	mov    edi,DWORD PTR [ebp+0x8]
   145f7:	mov    ebx,ecx
   145f9:	mov    esi,edi
   145fb:	cmp    edi,DWORD PTR ds:0x730ac
   14601:	je     0x14629
   14603:	push   DWORD PTR [esi+0x8]
   14606:	mov    ecx,ebx
   14608:	call   0x145ec
   1460d:	mov    esi,DWORD PTR [esi]
   1460f:	lea    eax,[edi+0xc]
   14612:	push   eax
   14613:	call   0x134fa
   14618:	push   edi
   14619:	call   0x11c4c
   1461e:	pop    ecx
   1461f:	mov    edi,esi
   14621:	cmp    esi,DWORD PTR ds:0x730ac
   14627:	jne    0x14603
   14629:	pop    edi
   1462a:	pop    esi
   1462b:	pop    ebx
   1462c:	pop    ebp
   1462d:	ret    0x4
   14630:	int3   
   14631:	int3   
   14632:	int3   
   14633:	int3   
   14634:	int3   
   14635:	int3   
   14636:	mov    edi,edi
   14638:	push   esi
   14639:	push   edi
   1463a:	push   0x1
   1463c:	xor    edi,edi
   1463e:	push   edi
   1463f:	mov    esi,ecx
   14641:	call   0x13be2
   14646:	cmp    DWORD PTR ds:0x730b4,edi
   1464c:	jne    0x14663
   1464e:	mov    ecx,eax
   14650:	mov    DWORD PTR ds:0x730b4,ecx
   14656:	mov    DWORD PTR [ecx],edi
   14658:	mov    ecx,DWORD PTR ds:0x730b4
   1465e:	xor    eax,eax
   14660:	mov    DWORD PTR [ecx+0x8],edi
   14663:	inc    DWORD PTR ds:0x73260
   14669:	cmp    eax,edi
   1466b:	je     0x14674
   1466d:	push   eax
   1466e:	call   0x11c4c
   14673:	pop    ecx
   14674:	push   edi
   14675:	push   DWORD PTR ds:0x730b4
   1467b:	mov    ecx,esi
   1467d:	call   0x13be2
   14682:	mov    DWORD PTR [esi+0xc],edi
   14685:	mov    DWORD PTR [esi+0x4],eax
   14688:	mov    DWORD PTR [eax],eax
   1468a:	mov    esi,DWORD PTR [esi+0x4]
   1468d:	pop    edi
   1468e:	mov    DWORD PTR [esi+0x8],esi
   14691:	pop    esi
   14692:	ret    
   14693:	int3   
   14694:	int3   
   14695:	int3   
   14696:	int3   
   14697:	int3   
   14698:	mov    edi,edi
   1469a:	push   ebp
   1469b:	mov    ebp,esp
   1469d:	push   ecx
   1469e:	push   DWORD PTR [ebp-0x4]
   146a1:	push   DWORD PTR [ebp+0x10]
   146a4:	push   DWORD PTR [ebp+0xc]
   146a7:	push   DWORD PTR [ebp+0x8]
   146aa:	call   0x13c96
   146af:	add    esp,0x10
   146b2:	leave  
   146b3:	ret    
   146b4:	int3   
   146b5:	int3   
   146b6:	int3   
   146b7:	int3   
   146b8:	int3   
   146b9:	int3   
   146ba:	mov    edi,edi
   146bc:	push   ebp
   146bd:	mov    ebp,esp
   146bf:	push   ecx
   146c0:	push   ebx
   146c1:	push   esi
   146c2:	push   edi
   146c3:	xor    edi,edi
   146c5:	push   edi
   146c6:	push   edi
   146c7:	push   edi
   146c8:	mov    esi,ecx
   146ca:	mov    eax,DWORD PTR [esi+0x10]
   146cd:	push   edi
   146ce:	push   eax
   146cf:	xor    ebx,ebx
   146d1:	call   0x11968
   146d6:	call   eax
   146d8:	test   eax,eax
   146da:	jge    0x146e0
   146dc:	xor    eax,eax
   146de:	jmp    0x14708
   146e0:	lea    eax,[ebp+0x8]
   146e3:	push   eax
   146e4:	lea    eax,[ebp-0x4]
   146e7:	push   eax
   146e8:	mov    ecx,esi
   146ea:	call   0x1366a
   146ef:	mov    eax,DWORD PTR [ebp-0x4]
   146f2:	cmp    eax,DWORD PTR [esi+0x4]
   146f5:	je     0x146fa
   146f7:	mov    ebx,DWORD PTR [eax+0x10]
   146fa:	mov    esi,DWORD PTR [esi+0x10]
   146fd:	push   edi
   146fe:	push   esi
   146ff:	call   0x11992
   14704:	call   eax
   14706:	mov    eax,ebx
   14708:	pop    edi
   14709:	pop    esi
   1470a:	pop    ebx
   1470b:	leave  
   1470c:	ret    0x4
   1470f:	int3   
   14710:	int3   
   14711:	int3   
   14712:	int3   
   14713:	int3   
   14714:	mov    edi,edi
   14716:	push   ebp
   14717:	mov    ebp,esp
   14719:	mov    ecx,DWORD PTR ds:0x72ed8
   1471f:	push   esi
   14720:	push   DWORD PTR [ebp+0x8]
   14723:	lea    eax,[ebp+0x8]
   14726:	push   eax
   14727:	call   0x136f0
   1472c:	mov    esi,DWORD PTR [ebp+0x8]
   1472f:	mov    eax,ds:0x72ed8
   14734:	cmp    esi,DWORD PTR [eax+0x4]
   14737:	jne    0x1473d
   14739:	xor    al,al
   1473b:	jmp    0x14787
   1473d:	mov    ecx,DWORD PTR [ebp+0xc]
   14740:	lea    eax,[esi+0x20]
   14743:	push   eax
   14744:	call   0x12926
   14749:	mov    ecx,DWORD PTR [ebp+0x10]
   1474c:	lea    eax,[esi+0x28]
   1474f:	push   eax
   14750:	call   0x12926
   14755:	mov    ecx,DWORD PTR [ebp+0x14]
   14758:	lea    eax,[esi+0x30]
   1475b:	push   eax
   1475c:	call   0x12926
   14761:	mov    eax,DWORD PTR [esi+0x38]
   14764:	mov    ecx,DWORD PTR [ebp+0x18]
   14767:	mov    DWORD PTR [ecx],eax
   14769:	mov    ecx,DWORD PTR [esi+0x40]
   1476c:	mov    eax,DWORD PTR [ebp+0x1c]
   1476f:	mov    DWORD PTR [eax],ecx
   14771:	mov    ecx,DWORD PTR [esi+0x44]
   14774:	mov    DWORD PTR [eax+0x4],ecx
   14777:	mov    ecx,DWORD PTR [esi+0x48]
   1477a:	mov    eax,DWORD PTR [ebp+0x20]
   1477d:	mov    DWORD PTR [eax],ecx
   1477f:	mov    ecx,DWORD PTR [esi+0x4c]
   14782:	mov    DWORD PTR [eax+0x4],ecx
   14785:	mov    al,0x1
   14787:	pop    esi
   14788:	pop    ebp
   14789:	ret    0x1c
   1478c:	int3   
   1478d:	int3   
   1478e:	int3   
   1478f:	int3   
   14790:	int3   
   14791:	int3   
   14792:	push   0x30
   14794:	push   0x720c8
   14799:	call   0x1b424
   1479e:	xor    esi,esi
   147a0:	push   esi
   147a1:	push   esi
   147a2:	push   esi
   147a3:	push   esi
   147a4:	push   0x72550
   147a9:	call   0x11968
   147ae:	call   eax
   147b0:	cmp    eax,esi
   147b2:	jl     0x148f6
   147b8:	mov    DWORD PTR [ebp-0x4],esi
   147bb:	push   0xffffffff
   147bd:	mov    esi,0x1b838
   147c2:	push   esi
   147c3:	lea    ecx,[ebp-0x38]
   147c6:	call   0x12a48
   147cb:	push   0xffffffff
   147cd:	push   esi
   147ce:	lea    ecx,[ebp-0x30]
   147d1:	call   0x12a48
   147d6:	push   0xffffffff
   147d8:	push   esi
   147d9:	lea    ecx,[ebp-0x28]
   147dc:	call   0x12a48
   147e1:	lea    eax,[ebp-0x40]
   147e4:	push   eax
   147e5:	lea    eax,[ebp-0x20]
   147e8:	push   eax
   147e9:	lea    eax,[ebp+0x8]
   147ec:	push   eax
   147ed:	lea    eax,[ebp-0x28]
   147f0:	push   eax
   147f1:	lea    eax,[ebp-0x30]
   147f4:	push   eax
   147f5:	lea    eax,[ebp-0x38]
   147f8:	push   eax
   147f9:	mov    edi,DWORD PTR [ebp+0x8]
   147fc:	push   edi
   147fd:	call   0x14714
   14802:	test   al,al
   14804:	jne    0x14815
   14806:	mov    eax,DWORD PTR [ebp+0xc]
   14809:	mov    DWORD PTR [eax+0x8],0x1
   14810:	jmp    0x148b3
   14815:	mov    edx,DWORD PTR [edi+0x4]
   14818:	mov    eax,DWORD PTR [ebp-0x34]
   1481b:	lea    esi,[eax+edx*1+0x2]
   1481f:	mov    eax,DWORD PTR [ebp-0x2c]
   14822:	lea    ebx,[eax+esi*1+0x1]
   14826:	mov    eax,DWORD PTR [ebp-0x24]
   14829:	lea    ecx,[eax+ebx*1+0x1]
   1482d:	mov    eax,DWORD PTR [ebp+0xc]
   14830:	cmp    ecx,DWORD PTR [eax]
   14832:	jbe    0x1483f
   14834:	mov    DWORD PTR [eax],ecx
   14836:	mov    DWORD PTR [eax+0x8],0x2
   1483d:	jmp    0x148b3
   1483f:	and    DWORD PTR [eax+0x8],0x0
   14843:	mov    ecx,DWORD PTR [ebp+0x8]
   14846:	mov    DWORD PTR [eax+0xc],ecx
   14849:	mov    ecx,DWORD PTR [ebp-0x20]
   1484c:	mov    DWORD PTR [eax+0x10],ecx
   1484f:	mov    ecx,DWORD PTR [ebp-0x1c]
   14852:	mov    DWORD PTR [eax+0x14],ecx
   14855:	mov    ecx,DWORD PTR [ebp-0x40]
   14858:	mov    DWORD PTR [eax+0x18],ecx
   1485b:	mov    ecx,DWORD PTR [ebp-0x3c]
   1485e:	mov    DWORD PTR [eax+0x1c],ecx
   14861:	mov    ecx,DWORD PTR [edi]
   14863:	mov    DWORD PTR [ebp+0x8],ecx
   14866:	lea    ecx,[eax+0x20]
   14869:	mov    DWORD PTR [ebp-0x1c],ecx
   1486c:	mov    ecx,DWORD PTR [ebp+0x8]
   1486f:	mov    cl,BYTE PTR [ecx]
   14871:	mov    edi,DWORD PTR [ebp-0x1c]
   14874:	mov    BYTE PTR [edi],cl
   14876:	inc    DWORD PTR [ebp+0x8]
   14879:	inc    DWORD PTR [ebp-0x1c]
   1487c:	test   cl,cl
   1487e:	jne    0x1486c
   14880:	mov    ecx,DWORD PTR [ebp-0x38]
   14883:	lea    edi,[edx+eax*1+0x21]
   14887:	mov    dl,BYTE PTR [ecx]
   14889:	mov    BYTE PTR [edi],dl
   1488b:	inc    ecx
   1488c:	inc    edi
   1488d:	test   dl,dl
   1488f:	jne    0x14887
   14891:	mov    edx,DWORD PTR [ebp-0x30]
   14894:	lea    esi,[esi+eax*1+0x20]
   14898:	mov    cl,BYTE PTR [edx]
   1489a:	mov    BYTE PTR [esi],cl
   1489c:	inc    edx
   1489d:	inc    esi
   1489e:	test   cl,cl
   148a0:	jne    0x14898
   148a2:	mov    edx,DWORD PTR [ebp-0x28]
   148a5:	lea    eax,[ebx+eax*1+0x20]
   148a9:	mov    cl,BYTE PTR [edx]
   148ab:	mov    BYTE PTR [eax],cl
   148ad:	inc    edx
   148ae:	inc    eax
   148af:	test   cl,cl
   148b1:	jne    0x148a9
   148b3:	push   DWORD PTR [ebp-0x28]
   148b6:	call   0x11c4c
   148bb:	push   DWORD PTR [ebp-0x30]
   148be:	call   0x11c4c
   148c3:	push   DWORD PTR [ebp-0x38]
   148c6:	call   0x11c4c
   148cb:	add    esp,0xc
   148ce:	jmp    0x148e1
   148d0:	xor    eax,eax
   148d2:	inc    eax
   148d3:	ret    
   148d4:	mov    esp,DWORD PTR [ebp-0x18]
   148d7:	mov    eax,DWORD PTR [ebp+0xc]
   148da:	mov    DWORD PTR [eax+0x8],0x4
   148e1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   148e8:	push   0x0
   148ea:	push   0x72550
   148ef:	call   0x11992
   148f4:	call   eax
   148f6:	call   0x1b469
   148fb:	ret    0x8
   148fe:	int3   
   148ff:	int3   
   14900:	int3   
   14901:	int3   
   14902:	int3   
   14903:	int3   
   14904:	push   0x10
   14906:	push   0x720e8
   1490b:	call   0x1b424
   14910:	xor    ebx,ebx
   14912:	push   ebx
   14913:	push   ebx
   14914:	push   ebx
   14915:	push   ebx
   14916:	push   0x72550
   1491b:	call   0x11968
   14920:	call   eax
   14922:	cmp    eax,ebx
   14924:	jl     0x149e2
   1492a:	mov    DWORD PTR [ebp-0x4],ebx
   1492d:	push   0xffffffff
   1492f:	push   0x1b838
   14934:	lea    ecx,[ebp-0x20]
   14937:	call   0x12a48
   1493c:	mov    esi,DWORD PTR [ebp+0x8]
   1493f:	push   esi
   14940:	lea    eax,[ebp+0x8]
   14943:	push   eax
   14944:	mov    ecx,DWORD PTR ds:0x72520
   1494a:	call   0x13cc0
   1494f:	mov    eax,ds:0x72520
   14954:	mov    eax,DWORD PTR [eax+0x4]
   14957:	mov    ecx,DWORD PTR [ebp+0x8]
   1495a:	cmp    ecx,eax
   1495c:	je     0x1496a
   1495e:	add    ecx,0x14
   14961:	push   ecx
   14962:	lea    ecx,[ebp-0x20]
   14965:	call   0x12926
   1496a:	mov    edx,DWORD PTR [esi+0x4]
   1496d:	mov    eax,DWORD PTR [ebp-0x1c]
   14970:	lea    ecx,[eax+edx*1+0x2]
   14974:	mov    eax,DWORD PTR [ebp+0xc]
   14977:	cmp    ecx,DWORD PTR [eax]
   14979:	jbe    0x14986
   1497b:	mov    DWORD PTR [eax],ecx
   1497d:	mov    DWORD PTR [eax+0x8],0x2
   14984:	jmp    0x149a9
   14986:	mov    DWORD PTR [eax+0x8],ebx
   14989:	mov    esi,DWORD PTR [esi]
   1498b:	lea    edi,[eax+0xc]
   1498e:	mov    cl,BYTE PTR [esi]
   14990:	mov    BYTE PTR [edi],cl
   14992:	inc    esi
   14993:	inc    edi
   14994:	cmp    cl,bl
   14996:	jne    0x1498e
   14998:	mov    esi,DWORD PTR [ebp-0x20]
   1499b:	lea    eax,[edx+eax*1+0xd]
   1499f:	mov    cl,BYTE PTR [esi]
   149a1:	mov    BYTE PTR [eax],cl
   149a3:	inc    esi
   149a4:	inc    eax
   149a5:	cmp    cl,bl
   149a7:	jne    0x1499f
   149a9:	push   DWORD PTR [ebp-0x20]
   149ac:	call   0x11c4c
   149b1:	pop    ecx
   149b2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   149b9:	jmp    0x149d5
   149bb:	xor    eax,eax
   149bd:	inc    eax
   149be:	ret    
   149bf:	mov    esp,DWORD PTR [ebp-0x18]
   149c2:	mov    eax,DWORD PTR [ebp+0xc]
   149c5:	mov    DWORD PTR [eax+0x8],0x4
   149cc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   149d3:	xor    ebx,ebx
   149d5:	push   ebx
   149d6:	push   0x72550
   149db:	call   0x11992
   149e0:	call   eax
   149e2:	call   0x1b469
   149e7:	ret    0x8
   149ea:	int3   
   149eb:	int3   
   149ec:	int3   
   149ed:	int3   
   149ee:	int3   
   149ef:	int3   
   149f0:	push   0xc
   149f2:	push   0x72108
   149f7:	call   0x1b424
   149fc:	xor    edi,edi
   149fe:	push   edi
   149ff:	push   edi
   14a00:	push   edi
   14a01:	push   edi
   14a02:	push   0x72550
   14a07:	call   0x11968
   14a0c:	call   eax
   14a0e:	cmp    eax,edi
   14a10:	jl     0x14ac0
   14a16:	mov    DWORD PTR [ebp-0x4],edi
   14a19:	lea    eax,[ebp+0x8]
   14a1c:	push   eax
   14a1d:	lea    eax,[ebp-0x1c]
   14a20:	push   eax
   14a21:	mov    esi,DWORD PTR ds:0x725ac
   14a27:	mov    ecx,esi
   14a29:	call   0x137a8
   14a2e:	mov    esi,DWORD PTR [esi+0x4]
   14a31:	mov    ecx,DWORD PTR [ebp-0x1c]
   14a34:	cmp    ecx,esi
   14a36:	jne    0x14a44
   14a38:	mov    eax,DWORD PTR [ebp+0xc]
   14a3b:	mov    DWORD PTR [eax+0x8],0x1
   14a42:	jmp    0x14a90
   14a44:	mov    eax,DWORD PTR [ecx+0x10]
   14a47:	cmp    eax,edi
   14a49:	jne    0x14a4f
   14a4b:	xor    edx,edx
   14a4d:	jmp    0x14a52
   14a4f:	mov    edx,DWORD PTR [eax+0x8]
   14a52:	mov    eax,DWORD PTR [ebp+0xc]
   14a55:	cmp    edx,DWORD PTR [eax]
   14a57:	jbe    0x14a64
   14a59:	mov    DWORD PTR [eax],edx
   14a5b:	mov    DWORD PTR [eax+0x8],0x2
   14a62:	jmp    0x14a90
   14a64:	mov    DWORD PTR [eax+0x8],edi
   14a67:	mov    edx,DWORD PTR [ecx+0x10]
   14a6a:	cmp    edx,edi
   14a6c:	jne    0x14a72
   14a6e:	xor    edx,edx
   14a70:	jmp    0x14a75
   14a72:	mov    edx,DWORD PTR [edx+0x8]
   14a75:	mov    ecx,DWORD PTR [ecx+0x10]
   14a78:	cmp    ecx,edi
   14a7a:	jne    0x14a80
   14a7c:	xor    ecx,ecx
   14a7e:	jmp    0x14a82
   14a80:	mov    ecx,DWORD PTR [ecx]
   14a82:	push   edx
   14a83:	push   ecx
   14a84:	add    eax,0xc
   14a87:	push   eax
   14a88:	call   0x1b400
   14a8d:	add    esp,0xc
   14a90:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14a97:	jmp    0x14ab3
   14a99:	xor    eax,eax
   14a9b:	inc    eax
   14a9c:	ret    
   14a9d:	mov    esp,DWORD PTR [ebp-0x18]
   14aa0:	mov    eax,DWORD PTR [ebp+0xc]
   14aa3:	mov    DWORD PTR [eax+0x8],0x4
   14aaa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14ab1:	xor    edi,edi
   14ab3:	push   edi
   14ab4:	push   0x72550
   14ab9:	call   0x11992
   14abe:	call   eax
   14ac0:	call   0x1b469
   14ac5:	ret    0x8
   14ac8:	int3   
   14ac9:	int3   
   14aca:	int3   
   14acb:	int3   
   14acc:	int3   
   14acd:	int3   
   14ace:	mov    edi,edi
   14ad0:	push   ebp
   14ad1:	mov    ebp,esp
   14ad3:	push   ecx
   14ad4:	push   ecx
   14ad5:	push   DWORD PTR [ebp+0x8]
   14ad8:	lea    eax,[ebp-0x8]
   14adb:	push   eax
   14adc:	call   0x13a74
   14ae1:	and    DWORD PTR [ebp+0x8],0x0
   14ae5:	lea    eax,[ebp+0x8]
   14ae8:	push   eax
   14ae9:	push   DWORD PTR [ebp-0x4]
   14aec:	push   DWORD PTR [ebp-0x8]
   14aef:	call   0x14698
   14af4:	mov    eax,DWORD PTR [ebp+0x8]
   14af7:	add    esp,0xc
   14afa:	leave  
   14afb:	ret    0x4
   14afe:	int3   
   14aff:	int3   
   14b00:	int3   
   14b01:	int3   
   14b02:	int3   
   14b03:	int3   
   14b04:	mov    edi,edi
   14b06:	push   ebp
   14b07:	mov    ebp,esp
   14b09:	push   ecx
   14b0a:	push   ebx
   14b0b:	push   esi
   14b0c:	push   edi
   14b0d:	mov    edi,ecx
   14b0f:	mov    eax,DWORD PTR [edi+0x4]
   14b12:	mov    esi,DWORD PTR [eax+0x4]
   14b15:	mov    ebx,eax
   14b17:	mov    eax,ds:0x730a0
   14b1c:	mov    dl,0x1
   14b1e:	cmp    esi,eax
   14b20:	je     0x14b3e
   14b22:	mov    ecx,DWORD PTR [ebp+0xc]
   14b25:	mov    ecx,DWORD PTR [ecx]
   14b27:	cmp    ecx,DWORD PTR [esi+0xc]
   14b2a:	mov    ebx,esi
   14b2c:	setb   dl
   14b2f:	test   dl,dl
   14b31:	je     0x14b37
   14b33:	mov    esi,DWORD PTR [esi]
   14b35:	jmp    0x14b3a
   14b37:	mov    esi,DWORD PTR [esi+0x8]
   14b3a:	cmp    esi,eax
   14b3c:	jne    0x14b27
   14b3e:	cmp    BYTE PTR [edi+0x8],0x0
   14b42:	je     0x14b5f
   14b44:	push   DWORD PTR [ebp+0xc]
   14b47:	push   ebx
   14b48:	push   esi
   14b49:	lea    eax,[ebp+0xc]
   14b4c:	push   eax
   14b4d:	mov    ecx,edi
   14b4f:	call   0x13f8e
   14b54:	mov    ecx,DWORD PTR [eax]
   14b56:	mov    eax,DWORD PTR [ebp+0x8]
   14b59:	mov    BYTE PTR [eax+0x4],0x1
   14b5d:	jmp    0x14b8e
   14b5f:	mov    ecx,ebx
   14b61:	mov    DWORD PTR [ebp-0x4],ecx
   14b64:	test   dl,dl
   14b66:	je     0x14b7a
   14b68:	mov    eax,DWORD PTR [edi+0x4]
   14b6b:	cmp    ebx,DWORD PTR [eax]
   14b6d:	je     0x14b44
   14b6f:	lea    ecx,[ebp-0x4]
   14b72:	call   0x10e1e
   14b77:	mov    ecx,DWORD PTR [ebp-0x4]
   14b7a:	mov    edx,DWORD PTR [ecx+0xc]
   14b7d:	mov    eax,DWORD PTR [ebp+0xc]
   14b80:	cmp    edx,DWORD PTR [eax]
   14b82:	jae    0x14b87
   14b84:	push   eax
   14b85:	jmp    0x14b47
   14b87:	mov    eax,DWORD PTR [ebp+0x8]
   14b8a:	mov    BYTE PTR [eax+0x4],0x0
   14b8e:	pop    edi
   14b8f:	pop    esi
   14b90:	mov    DWORD PTR [eax],ecx
   14b92:	pop    ebx
   14b93:	leave  
   14b94:	ret    0x8
   14b97:	int3   
   14b98:	int3   
   14b99:	int3   
   14b9a:	int3   
   14b9b:	int3   
   14b9c:	mov    edi,edi
   14b9e:	push   ebp
   14b9f:	mov    ebp,esp
   14ba1:	push   ecx
   14ba2:	push   esi
   14ba3:	mov    esi,ecx
   14ba5:	cmp    DWORD PTR [esi+0xc],0x0
   14ba9:	mov    ecx,DWORD PTR [ebp+0xc]
   14bac:	je     0x14be6
   14bae:	mov    eax,DWORD PTR [esi+0x4]
   14bb1:	cmp    ecx,DWORD PTR [eax]
   14bb3:	jne    0x14be6
   14bb5:	cmp    DWORD PTR [ebp+0x10],eax
   14bb8:	jne    0x14be6
   14bba:	push   DWORD PTR [eax+0x4]
   14bbd:	mov    ecx,esi
   14bbf:	call   0x14340
   14bc4:	mov    ecx,DWORD PTR ds:0x730a8
   14bca:	mov    eax,DWORD PTR [esi+0x4]
   14bcd:	mov    DWORD PTR [eax+0x4],ecx
   14bd0:	mov    eax,DWORD PTR [esi+0x4]
   14bd3:	and    DWORD PTR [esi+0xc],0x0
   14bd7:	mov    DWORD PTR [eax],eax
   14bd9:	mov    eax,DWORD PTR [esi+0x4]
   14bdc:	mov    DWORD PTR [eax+0x8],eax
   14bdf:	mov    eax,DWORD PTR [esi+0x4]
   14be2:	mov    ecx,DWORD PTR [eax]
   14be4:	jmp    0x14c0b
   14be6:	cmp    ecx,DWORD PTR [ebp+0x10]
   14be9:	je     0x14c0b
   14beb:	push   edi
   14bec:	mov    edi,ecx
   14bee:	lea    ecx,[ebp+0xc]
   14bf1:	call   0x132ec
   14bf6:	push   edi
   14bf7:	lea    eax,[ebp-0x4]
   14bfa:	push   eax
   14bfb:	mov    ecx,esi
   14bfd:	call   0x140de
   14c02:	mov    ecx,DWORD PTR [ebp+0xc]
   14c05:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c08:	jne    0x14bec
   14c0a:	pop    edi
   14c0b:	mov    eax,DWORD PTR [ebp+0x8]
   14c0e:	mov    DWORD PTR [eax],ecx
   14c10:	pop    esi
   14c11:	leave  
   14c12:	ret    0xc
   14c15:	int3   
   14c16:	int3   
   14c17:	int3   
   14c18:	int3   
   14c19:	int3   
   14c1a:	mov    edi,edi
   14c1c:	push   ebp
   14c1d:	mov    ebp,esp
   14c1f:	push   ecx
   14c20:	push   esi
   14c21:	mov    esi,ecx
   14c23:	cmp    DWORD PTR [esi+0xc],0x0
   14c27:	mov    ecx,DWORD PTR [ebp+0xc]
   14c2a:	je     0x14c64
   14c2c:	mov    eax,DWORD PTR [esi+0x4]
   14c2f:	cmp    ecx,DWORD PTR [eax]
   14c31:	jne    0x14c64
   14c33:	cmp    DWORD PTR [ebp+0x10],eax
   14c36:	jne    0x14c64
   14c38:	push   DWORD PTR [eax+0x4]
   14c3b:	mov    ecx,esi
   14c3d:	call   0x145ec
   14c42:	mov    ecx,DWORD PTR ds:0x730ac
   14c48:	mov    eax,DWORD PTR [esi+0x4]
   14c4b:	mov    DWORD PTR [eax+0x4],ecx
   14c4e:	mov    eax,DWORD PTR [esi+0x4]
   14c51:	and    DWORD PTR [esi+0xc],0x0
   14c55:	mov    DWORD PTR [eax],eax
   14c57:	mov    eax,DWORD PTR [esi+0x4]
   14c5a:	mov    DWORD PTR [eax+0x8],eax
   14c5d:	mov    eax,DWORD PTR [esi+0x4]
   14c60:	mov    ecx,DWORD PTR [eax]
   14c62:	jmp    0x14c89
   14c64:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c67:	je     0x14c89
   14c69:	push   edi
   14c6a:	mov    edi,ecx
   14c6c:	lea    ecx,[ebp+0xc]
   14c6f:	call   0x1109c
   14c74:	push   edi
   14c75:	lea    eax,[ebp-0x4]
   14c78:	push   eax
   14c79:	mov    ecx,esi
   14c7b:	call   0x1438a
   14c80:	mov    ecx,DWORD PTR [ebp+0xc]
   14c83:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c86:	jne    0x14c6a
   14c88:	pop    edi
   14c89:	mov    eax,DWORD PTR [ebp+0x8]
   14c8c:	mov    DWORD PTR [eax],ecx
   14c8e:	pop    esi
   14c8f:	leave  
   14c90:	ret    0xc
   14c93:	int3   
   14c94:	int3   
   14c95:	int3   
   14c96:	int3   
   14c97:	int3   
   14c98:	mov    edi,edi
   14c9a:	push   ebp
   14c9b:	mov    ebp,esp
   14c9d:	push   ebx
   14c9e:	push   esi
   14c9f:	mov    esi,DWORD PTR [ebp+0x10]
   14ca2:	push   edi
   14ca3:	push   0x0
   14ca5:	push   esi
   14ca6:	mov    edi,ecx
   14ca8:	call   0x13b76
   14cad:	push   DWORD PTR [ebp+0x14]
   14cb0:	mov    ebx,eax
   14cb2:	mov    eax,ds:0x730a8
   14cb7:	mov    DWORD PTR [ebx],eax
   14cb9:	mov    eax,ds:0x730a8
   14cbe:	mov    DWORD PTR [ebx+0x8],eax
   14cc1:	lea    eax,[ebx+0x10]
   14cc4:	push   eax
   14cc5:	call   0x13c06
   14cca:	inc    DWORD PTR [edi+0xc]
   14ccd:	cmp    esi,DWORD PTR [edi+0x4]
   14cd0:	je     0x14cfa
   14cd2:	mov    eax,DWORD PTR [ebp+0xc]
   14cd5:	cmp    eax,DWORD PTR ds:0x730a8
   14cdb:	jne    0x14cfa
   14cdd:	lea    eax,[esi+0x10]
   14ce0:	push   eax
   14ce1:	push   DWORD PTR [ebp+0x14]
   14ce4:	call   0x18740
   14ce9:	test   al,al
   14ceb:	jne    0x14cfa
   14ced:	mov    DWORD PTR [esi+0x8],ebx
   14cf0:	mov    eax,DWORD PTR [edi+0x4]
   14cf3:	cmp    esi,DWORD PTR [eax+0x8]
   14cf6:	jne    0x14d14
   14cf8:	jmp    0x14d09
   14cfa:	mov    DWORD PTR [esi],ebx
   14cfc:	mov    eax,DWORD PTR [edi+0x4]
   14cff:	cmp    esi,eax
   14d01:	jne    0x14d0e
   14d03:	mov    DWORD PTR [eax+0x4],ebx
   14d06:	mov    eax,DWORD PTR [edi+0x4]
   14d09:	mov    DWORD PTR [eax+0x8],ebx
   14d0c:	jmp    0x14d14
   14d0e:	cmp    esi,DWORD PTR [eax]
   14d10:	jne    0x14d14
   14d12:	mov    DWORD PTR [eax],ebx
   14d14:	mov    eax,DWORD PTR [edi+0x4]
   14d17:	mov    esi,ebx
   14d19:	cmp    ebx,DWORD PTR [eax+0x4]
   14d1c:	je     0x14dd0
   14d22:	mov    eax,DWORD PTR [esi+0x4]
   14d25:	xor    edx,edx
   14d27:	cmp    DWORD PTR [eax+0x50],edx
   14d2a:	jne    0x14dd0
   14d30:	mov    ecx,DWORD PTR [eax+0x4]
   14d33:	cmp    eax,DWORD PTR [ecx]
   14d35:	jne    0x14d71
   14d37:	mov    ecx,DWORD PTR [ecx+0x8]
   14d3a:	cmp    DWORD PTR [ecx+0x50],edx
   14d3d:	je     0x14d78
   14d3f:	cmp    esi,DWORD PTR [eax+0x8]
   14d42:	jne    0x14d4e
   14d44:	mov    esi,eax
   14d46:	push   esi
   14d47:	mov    ecx,edi
   14d49:	call   0x10e94
   14d4e:	mov    eax,DWORD PTR [esi+0x4]
   14d51:	mov    DWORD PTR [eax+0x50],0x1
   14d58:	mov    eax,DWORD PTR [esi+0x4]
   14d5b:	mov    eax,DWORD PTR [eax+0x4]
   14d5e:	and    DWORD PTR [eax+0x50],0x0
   14d62:	mov    eax,DWORD PTR [esi+0x4]
   14d65:	push   DWORD PTR [eax+0x4]
   14d68:	mov    ecx,edi
   14d6a:	call   0x10f04
   14d6f:	jmp    0x14dc4
   14d71:	mov    ecx,DWORD PTR [ecx]
   14d73:	cmp    DWORD PTR [ecx+0x50],edx
   14d76:	jne    0x14d95
   14d78:	mov    edx,eax
   14d7a:	xor    eax,eax
   14d7c:	inc    eax
   14d7d:	mov    DWORD PTR [edx+0x50],eax
   14d80:	mov    DWORD PTR [ecx+0x50],eax
   14d83:	mov    eax,DWORD PTR [esi+0x4]
   14d86:	mov    eax,DWORD PTR [eax+0x4]
   14d89:	and    DWORD PTR [eax+0x50],0x0
   14d8d:	mov    eax,DWORD PTR [esi+0x4]
   14d90:	mov    esi,DWORD PTR [eax+0x4]
   14d93:	jmp    0x14dc4
   14d95:	cmp    esi,DWORD PTR [eax]
   14d97:	jne    0x14da3
   14d99:	mov    esi,eax
   14d9b:	push   esi
   14d9c:	mov    ecx,edi
   14d9e:	call   0x10f04
   14da3:	mov    eax,DWORD PTR [esi+0x4]
   14da6:	mov    DWORD PTR [eax+0x50],0x1
   14dad:	mov    eax,DWORD PTR [esi+0x4]
   14db0:	mov    eax,DWORD PTR [eax+0x4]
   14db3:	and    DWORD PTR [eax+0x50],0x0
   14db7:	mov    eax,DWORD PTR [esi+0x4]
   14dba:	push   DWORD PTR [eax+0x4]
   14dbd:	mov    ecx,edi
   14dbf:	call   0x10e94
   14dc4:	mov    eax,DWORD PTR [edi+0x4]
   14dc7:	cmp    esi,DWORD PTR [eax+0x4]
   14dca:	jne    0x14d22
   14dd0:	mov    eax,DWORD PTR [edi+0x4]
   14dd3:	mov    eax,DWORD PTR [eax+0x4]
   14dd6:	pop    edi
   14dd7:	mov    DWORD PTR [eax+0x50],0x1
   14dde:	mov    eax,DWORD PTR [ebp+0x8]
   14de1:	pop    esi
   14de2:	mov    DWORD PTR [eax],ebx
   14de4:	pop    ebx
   14de5:	pop    ebp
   14de6:	ret    0x10
   14de9:	int3   
   14dea:	int3   
   14deb:	int3   
   14dec:	int3   
   14ded:	int3   
   14dee:	mov    edi,edi
   14df0:	push   ebp
   14df1:	mov    ebp,esp
   14df3:	push   ebx
   14df4:	push   esi
   14df5:	mov    esi,DWORD PTR [ebp+0x10]
   14df8:	push   edi
   14df9:	push   0x0
   14dfb:	push   esi
   14dfc:	mov    edi,ecx
   14dfe:	call   0x13b9a
   14e03:	push   DWORD PTR [ebp+0x14]
   14e06:	mov    ebx,eax
   14e08:	mov    eax,ds:0x730ac
   14e0d:	mov    DWORD PTR [ebx],eax
   14e0f:	mov    eax,ds:0x730ac
   14e14:	mov    DWORD PTR [ebx+0x8],eax
   14e17:	lea    eax,[ebx+0xc]
   14e1a:	push   eax
   14e1b:	call   0x13c24
   14e20:	inc    DWORD PTR [edi+0xc]
   14e23:	cmp    esi,DWORD PTR [edi+0x4]
   14e26:	je     0x14e50
   14e28:	mov    eax,DWORD PTR [ebp+0xc]
   14e2b:	cmp    eax,DWORD PTR ds:0x730ac
   14e31:	jne    0x14e50
   14e33:	lea    eax,[esi+0xc]
   14e36:	push   eax
   14e37:	push   DWORD PTR [ebp+0x14]
   14e3a:	call   0x18740
   14e3f:	test   al,al
   14e41:	jne    0x14e50
   14e43:	mov    DWORD PTR [esi+0x8],ebx
   14e46:	mov    eax,DWORD PTR [edi+0x4]
   14e49:	cmp    esi,DWORD PTR [eax+0x8]
   14e4c:	jne    0x14e6a
   14e4e:	jmp    0x14e5f
   14e50:	mov    DWORD PTR [esi],ebx
   14e52:	mov    eax,DWORD PTR [edi+0x4]
   14e55:	cmp    esi,eax
   14e57:	jne    0x14e64
   14e59:	mov    DWORD PTR [eax+0x4],ebx
   14e5c:	mov    eax,DWORD PTR [edi+0x4]
   14e5f:	mov    DWORD PTR [eax+0x8],ebx
   14e62:	jmp    0x14e6a
   14e64:	cmp    esi,DWORD PTR [eax]
   14e66:	jne    0x14e6a
   14e68:	mov    DWORD PTR [eax],ebx
   14e6a:	mov    eax,DWORD PTR [edi+0x4]
   14e6d:	mov    esi,ebx
   14e6f:	cmp    ebx,DWORD PTR [eax+0x4]
   14e72:	je     0x14f26
   14e78:	mov    eax,DWORD PTR [esi+0x4]
   14e7b:	xor    edx,edx
   14e7d:	cmp    DWORD PTR [eax+0x1c],edx
   14e80:	jne    0x14f26
   14e86:	mov    ecx,DWORD PTR [eax+0x4]
   14e89:	cmp    eax,DWORD PTR [ecx]
   14e8b:	jne    0x14ec7
   14e8d:	mov    ecx,DWORD PTR [ecx+0x8]
   14e90:	cmp    DWORD PTR [ecx+0x1c],edx
   14e93:	je     0x14ece
   14e95:	cmp    esi,DWORD PTR [eax+0x8]
   14e98:	jne    0x14ea4
   14e9a:	mov    esi,eax
   14e9c:	push   esi
   14e9d:	mov    ecx,edi
   14e9f:	call   0x12db4
   14ea4:	mov    eax,DWORD PTR [esi+0x4]
   14ea7:	mov    DWORD PTR [eax+0x1c],0x1
   14eae:	mov    eax,DWORD PTR [esi+0x4]
   14eb1:	mov    eax,DWORD PTR [eax+0x4]
   14eb4:	and    DWORD PTR [eax+0x1c],0x0
   14eb8:	mov    eax,DWORD PTR [esi+0x4]
   14ebb:	push   DWORD PTR [eax+0x4]
   14ebe:	mov    ecx,edi
   14ec0:	call   0x12e02
   14ec5:	jmp    0x14f1a
   14ec7:	mov    ecx,DWORD PTR [ecx]
   14ec9:	cmp    DWORD PTR [ecx+0x1c],edx
   14ecc:	jne    0x14eeb
   14ece:	mov    edx,eax
   14ed0:	xor    eax,eax
   14ed2:	inc    eax
   14ed3:	mov    DWORD PTR [edx+0x1c],eax
   14ed6:	mov    DWORD PTR [ecx+0x1c],eax
   14ed9:	mov    eax,DWORD PTR [esi+0x4]
   14edc:	mov    eax,DWORD PTR [eax+0x4]
   14edf:	and    DWORD PTR [eax+0x1c],0x0
   14ee3:	mov    eax,DWORD PTR [esi+0x4]
   14ee6:	mov    esi,DWORD PTR [eax+0x4]
   14ee9:	jmp    0x14f1a
   14eeb:	cmp    esi,DWORD PTR [eax]
   14eed:	jne    0x14ef9
   14eef:	mov    esi,eax
   14ef1:	push   esi
   14ef2:	mov    ecx,edi
   14ef4:	call   0x12e02
   14ef9:	mov    eax,DWORD PTR [esi+0x4]
   14efc:	mov    DWORD PTR [eax+0x1c],0x1
   14f03:	mov    eax,DWORD PTR [esi+0x4]
   14f06:	mov    eax,DWORD PTR [eax+0x4]
   14f09:	and    DWORD PTR [eax+0x1c],0x0
   14f0d:	mov    eax,DWORD PTR [esi+0x4]
   14f10:	push   DWORD PTR [eax+0x4]
   14f13:	mov    ecx,edi
   14f15:	call   0x12db4
   14f1a:	mov    eax,DWORD PTR [edi+0x4]
   14f1d:	cmp    esi,DWORD PTR [eax+0x4]
   14f20:	jne    0x14e78
   14f26:	mov    eax,DWORD PTR [edi+0x4]
   14f29:	mov    eax,DWORD PTR [eax+0x4]
   14f2c:	pop    edi
   14f2d:	mov    DWORD PTR [eax+0x1c],0x1
   14f34:	mov    eax,DWORD PTR [ebp+0x8]
   14f37:	pop    esi
   14f38:	mov    DWORD PTR [eax],ebx
   14f3a:	pop    ebx
   14f3b:	pop    ebp
   14f3c:	ret    0x10
   14f3f:	int3   
   14f40:	int3   
   14f41:	int3   
   14f42:	int3   
   14f43:	int3   
   14f44:	mov    edi,edi
   14f46:	push   ebp
   14f47:	mov    ebp,esp
   14f49:	push   ecx
   14f4a:	push   ecx
   14f4b:	push   ebx
   14f4c:	push   esi
   14f4d:	mov    DWORD PTR [ebp-0x4],ecx
   14f50:	push   edi
   14f51:	mov    edi,DWORD PTR [ebp+0xc]
   14f54:	lea    ecx,[ebp+0xc]
   14f57:	call   0x110d2
   14f5c:	mov    esi,DWORD PTR [edi]
   14f5e:	mov    eax,ds:0x730b0
   14f63:	mov    ebx,edi
   14f65:	mov    DWORD PTR [ebp-0x8],esi
   14f68:	cmp    esi,eax
   14f6a:	jne    0x14f88
   14f6c:	mov    esi,DWORD PTR [edi+0x8]
   14f6f:	mov    eax,DWORD PTR [ebx+0x4]
   14f72:	mov    ecx,DWORD PTR [ebp-0x4]
   14f75:	mov    DWORD PTR [esi+0x4],eax
   14f78:	mov    eax,DWORD PTR [ecx+0x4]
   14f7b:	cmp    DWORD PTR [eax+0x4],edi
   14f7e:	jne    0x14ffd
   14f80:	mov    DWORD PTR [eax+0x4],esi
   14f83:	jmp    0x1500b
   14f88:	mov    ecx,DWORD PTR [edi+0x8]
   14f8b:	cmp    ecx,eax
   14f8d:	je     0x14f6f
   14f8f:	push   ecx
   14f90:	call   0x1103a
   14f95:	mov    ebx,eax
   14f97:	mov    esi,DWORD PTR [ebx+0x8]
   14f9a:	cmp    ebx,edi
   14f9c:	je     0x14f6f
   14f9e:	mov    eax,DWORD PTR [ebp-0x8]
   14fa1:	mov    DWORD PTR [eax+0x4],ebx
   14fa4:	mov    eax,DWORD PTR [edi]
   14fa6:	mov    DWORD PTR [ebx],eax
   14fa8:	cmp    ebx,DWORD PTR [edi+0x8]
   14fab:	jne    0x14fb2
   14fad:	mov    DWORD PTR [esi+0x4],ebx
   14fb0:	jmp    0x14fc9
   14fb2:	mov    eax,DWORD PTR [ebx+0x4]
   14fb5:	mov    DWORD PTR [esi+0x4],eax
   14fb8:	mov    eax,DWORD PTR [ebx+0x4]
   14fbb:	mov    DWORD PTR [eax],esi
   14fbd:	mov    eax,DWORD PTR [edi+0x8]
   14fc0:	mov    DWORD PTR [ebx+0x8],eax
   14fc3:	mov    eax,DWORD PTR [edi+0x8]
   14fc6:	mov    DWORD PTR [eax+0x4],ebx
   14fc9:	mov    eax,DWORD PTR [ebp-0x4]
   14fcc:	mov    eax,DWORD PTR [eax+0x4]
   14fcf:	cmp    DWORD PTR [eax+0x4],edi
   14fd2:	jne    0x14fd9
   14fd4:	mov    DWORD PTR [eax+0x4],ebx
   14fd7:	jmp    0x14fe7
   14fd9:	mov    eax,DWORD PTR [edi+0x4]
   14fdc:	cmp    DWORD PTR [eax],edi
   14fde:	jne    0x14fe4
   14fe0:	mov    DWORD PTR [eax],ebx
   14fe2:	jmp    0x14fe7
   14fe4:	mov    DWORD PTR [eax+0x8],ebx
   14fe7:	mov    eax,DWORD PTR [edi+0x4]
   14fea:	mov    DWORD PTR [ebx+0x4],eax
   14fed:	mov    eax,DWORD PTR [ebx+0x14]
   14ff0:	mov    ecx,DWORD PTR [edi+0x14]
   14ff3:	mov    DWORD PTR [ebx+0x14],ecx
   14ff6:	mov    DWORD PTR [edi+0x14],eax
   14ff9:	mov    ebx,edi
   14ffb:	jmp    0x1505e
   14ffd:	mov    eax,DWORD PTR [edi+0x4]
   15000:	cmp    DWORD PTR [eax],edi
   15002:	jne    0x15008
   15004:	mov    DWORD PTR [eax],esi
   15006:	jmp    0x1500b
   15008:	mov    DWORD PTR [eax+0x8],esi
   1500b:	mov    eax,DWORD PTR [ecx+0x4]
   1500e:	mov    DWORD PTR [ebp-0x8],eax
   15011:	cmp    DWORD PTR [eax],edi
   15013:	jne    0x15035
   15015:	mov    edx,DWORD PTR [edi+0x8]
   15018:	cmp    edx,DWORD PTR ds:0x730b0
   1501e:	jne    0x15027
   15020:	mov    edx,DWORD PTR [edi+0x4]
   15023:	mov    DWORD PTR [eax],edx
   15025:	jmp    0x15035
   15027:	push   esi
   15028:	call   0x1103a
   1502d:	mov    ecx,DWORD PTR [ebp-0x8]
   15030:	mov    DWORD PTR [ecx],eax
   15032:	mov    ecx,DWORD PTR [ebp-0x4]
   15035:	mov    eax,DWORD PTR [ecx+0x4]
   15038:	mov    DWORD PTR [ebp-0x8],eax
   1503b:	cmp    DWORD PTR [eax+0x8],edi
   1503e:	jne    0x1505e
   15040:	mov    ecx,DWORD PTR [edi]
   15042:	cmp    ecx,DWORD PTR ds:0x730b0
   15048:	jne    0x15052
   1504a:	mov    ecx,DWORD PTR [edi+0x4]
   1504d:	mov    DWORD PTR [eax+0x8],ecx
   15050:	jmp    0x1505e
   15052:	push   esi
   15053:	call   0x11018
   15058:	mov    ecx,DWORD PTR [ebp-0x8]
   1505b:	mov    DWORD PTR [ecx+0x8],eax
   1505e:	xor    edi,edi
   15060:	inc    edi
   15061:	cmp    DWORD PTR [ebx+0x14],edi
   15064:	jne    0x1517b
   1506a:	jmp    0x15129
   1506f:	cmp    DWORD PTR [esi+0x14],edi
   15072:	jne    0x15178
   15078:	mov    eax,DWORD PTR [esi+0x4]
   1507b:	cmp    esi,DWORD PTR [eax]
   1507d:	jne    0x150f4
   1507f:	mov    eax,DWORD PTR [eax+0x8]
   15082:	cmp    DWORD PTR [eax+0x14],0x0
   15086:	jne    0x150a0
   15088:	mov    DWORD PTR [eax+0x14],edi
   1508b:	mov    eax,DWORD PTR [esi+0x4]
   1508e:	and    DWORD PTR [eax+0x14],0x0
   15092:	push   DWORD PTR [esi+0x4]
   15095:	call   0x12e92
   1509a:	mov    eax,DWORD PTR [esi+0x4]
   1509d:	mov    eax,DWORD PTR [eax+0x8]
   150a0:	mov    ecx,DWORD PTR [eax]
   150a2:	cmp    DWORD PTR [ecx+0x14],edi
   150a5:	jne    0x150af
   150a7:	mov    ecx,DWORD PTR [eax+0x8]
   150aa:	cmp    DWORD PTR [ecx+0x14],edi
   150ad:	je     0x15122
   150af:	mov    ecx,DWORD PTR [eax+0x8]
   150b2:	cmp    DWORD PTR [ecx+0x14],edi
   150b5:	jne    0x150cf
   150b7:	mov    ecx,DWORD PTR [eax]
   150b9:	mov    DWORD PTR [ecx+0x14],edi
   150bc:	mov    ecx,DWORD PTR [ebp-0x4]
   150bf:	and    DWORD PTR [eax+0x14],0x0
   150c3:	push   eax
   150c4:	call   0x12ee0
   150c9:	mov    eax,DWORD PTR [esi+0x4]
   150cc:	mov    eax,DWORD PTR [eax+0x8]
   150cf:	mov    ecx,DWORD PTR [esi+0x4]
   150d2:	mov    ecx,DWORD PTR [ecx+0x14]
   150d5:	mov    DWORD PTR [eax+0x14],ecx
   150d8:	mov    ecx,DWORD PTR [esi+0x4]
   150db:	mov    DWORD PTR [ecx+0x14],edi
   150de:	mov    eax,DWORD PTR [eax+0x8]
   150e1:	mov    ecx,DWORD PTR [ebp-0x4]
   150e4:	mov    DWORD PTR [eax+0x14],edi
   150e7:	push   DWORD PTR [esi+0x4]
   150ea:	call   0x12e92
   150ef:	jmp    0x15178
   150f4:	mov    eax,DWORD PTR [eax]
   150f6:	cmp    DWORD PTR [eax+0x14],0x0
   150fa:	jne    0x15113
   150fc:	mov    DWORD PTR [eax+0x14],edi
   150ff:	mov    eax,DWORD PTR [esi+0x4]
   15102:	and    DWORD PTR [eax+0x14],0x0
   15106:	push   DWORD PTR [esi+0x4]
   15109:	call   0x12ee0
   1510e:	mov    eax,DWORD PTR [esi+0x4]
   15111:	mov    eax,DWORD PTR [eax]
   15113:	mov    ecx,DWORD PTR [eax+0x8]
   15116:	cmp    DWORD PTR [ecx+0x14],edi
   15119:	jne    0x1513a
   1511b:	mov    ecx,DWORD PTR [eax]
   1511d:	cmp    DWORD PTR [ecx+0x14],edi
   15120:	jne    0x1513a
   15122:	and    DWORD PTR [eax+0x14],0x0
   15126:	mov    esi,DWORD PTR [esi+0x4]
   15129:	mov    ecx,DWORD PTR [ebp-0x4]
   1512c:	mov    eax,DWORD PTR [ecx+0x4]
   1512f:	cmp    esi,DWORD PTR [eax+0x4]
   15132:	jne    0x1506f
   15138:	jmp    0x15178
   1513a:	mov    ecx,DWORD PTR [eax]
   1513c:	cmp    DWORD PTR [ecx+0x14],edi
   1513f:	jne    0x15159
   15141:	mov    ecx,DWORD PTR [eax+0x8]
   15144:	mov    DWORD PTR [ecx+0x14],edi
   15147:	mov    ecx,DWORD PTR [ebp-0x4]
   1514a:	and    DWORD PTR [eax+0x14],0x0
   1514e:	push   eax
   1514f:	call   0x12e92
   15154:	mov    eax,DWORD PTR [esi+0x4]
   15157:	mov    eax,DWORD PTR [eax]
   15159:	mov    ecx,DWORD PTR [esi+0x4]
   1515c:	mov    ecx,DWORD PTR [ecx+0x14]
   1515f:	mov    DWORD PTR [eax+0x14],ecx
   15162:	mov    ecx,DWORD PTR [esi+0x4]
   15165:	mov    DWORD PTR [ecx+0x14],edi
   15168:	mov    eax,DWORD PTR [eax]
   1516a:	mov    ecx,DWORD PTR [ebp-0x4]
   1516d:	mov    DWORD PTR [eax+0x14],edi
   15170:	push   DWORD PTR [esi+0x4]
   15173:	call   0x12ee0
   15178:	mov    DWORD PTR [esi+0x14],edi
   1517b:	lea    eax,[ebx+0xc]
   1517e:	push   eax
   1517f:	call   0x13c60
   15184:	push   ebx
   15185:	call   0x11c4c
   1518a:	mov    eax,DWORD PTR [ebp-0x4]
   1518d:	dec    DWORD PTR [eax+0xc]
   15190:	mov    eax,DWORD PTR [ebp+0x8]
   15193:	pop    ecx
   15194:	mov    ecx,DWORD PTR [ebp+0xc]
   15197:	pop    edi
   15198:	pop    esi
   15199:	mov    DWORD PTR [eax],ecx
   1519b:	pop    ebx
   1519c:	leave  
   1519d:	ret    0x8
   151a0:	int3   
   151a1:	int3   
   151a2:	int3   
   151a3:	int3   
   151a4:	int3   
   151a5:	int3   
   151a6:	mov    edi,edi
   151a8:	push   ebp
   151a9:	mov    ebp,esp
   151ab:	push   ebx
   151ac:	push   esi
   151ad:	push   edi
   151ae:	mov    edi,DWORD PTR [ebp+0x8]
   151b1:	mov    ebx,ecx
   151b3:	mov    esi,edi
   151b5:	cmp    edi,DWORD PTR ds:0x730b0
   151bb:	je     0x151e3
   151bd:	push   DWORD PTR [esi+0x8]
   151c0:	mov    ecx,ebx
   151c2:	call   0x151a6
   151c7:	mov    esi,DWORD PTR [esi]
   151c9:	lea    eax,[edi+0xc]
   151cc:	push   eax
   151cd:	call   0x13c60
   151d2:	push   edi
   151d3:	call   0x11c4c
   151d8:	pop    ecx
   151d9:	mov    edi,esi
   151db:	cmp    esi,DWORD PTR ds:0x730b0
   151e1:	jne    0x151bd
   151e3:	pop    edi
   151e4:	pop    esi
   151e5:	pop    ebx
   151e6:	pop    ebp
   151e7:	ret    0x4
   151ea:	int3   
   151eb:	int3   
   151ec:	int3   
   151ed:	int3   
   151ee:	int3   
   151ef:	int3   
   151f0:	mov    edi,edi
   151f2:	push   ebp
   151f3:	mov    ebp,esp
   151f5:	push   ebx
   151f6:	push   esi
   151f7:	mov    esi,DWORD PTR [ebp+0x10]
   151fa:	push   edi
   151fb:	push   0x0
   151fd:	push   esi
   151fe:	mov    edi,ecx
   15200:	call   0x13b52
   15205:	push   DWORD PTR [ebp+0x14]
   15208:	mov    ebx,eax
   1520a:	mov    eax,ds:0x730b0
   1520f:	mov    DWORD PTR [ebx],eax
   15211:	mov    eax,ds:0x730b0
   15216:	mov    DWORD PTR [ebx+0x8],eax
   15219:	lea    eax,[ebx+0xc]
   1521c:	push   eax
   1521d:	call   0x13c42
   15222:	inc    DWORD PTR [edi+0xc]
   15225:	cmp    esi,DWORD PTR [edi+0x4]
   15228:	je     0x1524c
   1522a:	mov    eax,DWORD PTR [ebp+0xc]
   1522d:	cmp    eax,DWORD PTR ds:0x730b0
   15233:	jne    0x1524c
   15235:	mov    eax,DWORD PTR [ebp+0x14]
   15238:	mov    eax,DWORD PTR [eax]
   1523a:	cmp    eax,DWORD PTR [esi+0xc]
   1523d:	jl     0x1524c
   1523f:	mov    DWORD PTR [esi+0x8],ebx
   15242:	mov    eax,DWORD PTR [edi+0x4]
   15245:	cmp    esi,DWORD PTR [eax+0x8]
   15248:	jne    0x15266
   1524a:	jmp    0x1525b
   1524c:	mov    DWORD PTR [esi],ebx
   1524e:	mov    eax,DWORD PTR [edi+0x4]
   15251:	cmp    esi,eax
   15253:	jne    0x15260
   15255:	mov    DWORD PTR [eax+0x4],ebx
   15258:	mov    eax,DWORD PTR [edi+0x4]
   1525b:	mov    DWORD PTR [eax+0x8],ebx
   1525e:	jmp    0x15266
   15260:	cmp    esi,DWORD PTR [eax]
   15262:	jne    0x15266
   15264:	mov    DWORD PTR [eax],ebx
   15266:	mov    eax,DWORD PTR [edi+0x4]
   15269:	mov    esi,ebx
   1526b:	cmp    ebx,DWORD PTR [eax+0x4]
   1526e:	je     0x15322
   15274:	mov    eax,DWORD PTR [esi+0x4]
   15277:	xor    edx,edx
   15279:	cmp    DWORD PTR [eax+0x14],edx
   1527c:	jne    0x15322
   15282:	mov    ecx,DWORD PTR [eax+0x4]
   15285:	cmp    eax,DWORD PTR [ecx]
   15287:	jne    0x152c3
   15289:	mov    ecx,DWORD PTR [ecx+0x8]
   1528c:	cmp    DWORD PTR [ecx+0x14],edx
   1528f:	je     0x152ca
   15291:	cmp    esi,DWORD PTR [eax+0x8]
   15294:	jne    0x152a0
   15296:	mov    esi,eax
   15298:	push   esi
   15299:	mov    ecx,edi
   1529b:	call   0x12e92
   152a0:	mov    eax,DWORD PTR [esi+0x4]
   152a3:	mov    DWORD PTR [eax+0x14],0x1
   152aa:	mov    eax,DWORD PTR [esi+0x4]
   152ad:	mov    eax,DWORD PTR [eax+0x4]
   152b0:	and    DWORD PTR [eax+0x14],0x0
   152b4:	mov    eax,DWORD PTR [esi+0x4]
   152b7:	push   DWORD PTR [eax+0x4]
   152ba:	mov    ecx,edi
   152bc:	call   0x12ee0
   152c1:	jmp    0x15316
   152c3:	mov    ecx,DWORD PTR [ecx]
   152c5:	cmp    DWORD PTR [ecx+0x14],edx
   152c8:	jne    0x152e7
   152ca:	mov    edx,eax
   152cc:	xor    eax,eax
   152ce:	inc    eax
   152cf:	mov    DWORD PTR [edx+0x14],eax
   152d2:	mov    DWORD PTR [ecx+0x14],eax
   152d5:	mov    eax,DWORD PTR [esi+0x4]
   152d8:	mov    eax,DWORD PTR [eax+0x4]
   152db:	and    DWORD PTR [eax+0x14],0x0
   152df:	mov    eax,DWORD PTR [esi+0x4]
   152e2:	mov    esi,DWORD PTR [eax+0x4]
   152e5:	jmp    0x15316
   152e7:	cmp    esi,DWORD PTR [eax]
   152e9:	jne    0x152f5
   152eb:	mov    esi,eax
   152ed:	push   esi
   152ee:	mov    ecx,edi
   152f0:	call   0x12ee0
   152f5:	mov    eax,DWORD PTR [esi+0x4]
   152f8:	mov    DWORD PTR [eax+0x14],0x1
   152ff:	mov    eax,DWORD PTR [esi+0x4]
   15302:	mov    eax,DWORD PTR [eax+0x4]
   15305:	and    DWORD PTR [eax+0x14],0x0
   15309:	mov    eax,DWORD PTR [esi+0x4]
   1530c:	push   DWORD PTR [eax+0x4]
   1530f:	mov    ecx,edi
   15311:	call   0x12e92
   15316:	mov    eax,DWORD PTR [edi+0x4]
   15319:	cmp    esi,DWORD PTR [eax+0x4]
   1531c:	jne    0x15274
   15322:	mov    eax,DWORD PTR [edi+0x4]
   15325:	mov    eax,DWORD PTR [eax+0x4]
   15328:	pop    edi
   15329:	mov    DWORD PTR [eax+0x14],0x1
   15330:	mov    eax,DWORD PTR [ebp+0x8]
   15333:	pop    esi
   15334:	mov    DWORD PTR [eax],ebx
   15336:	pop    ebx
   15337:	pop    ebp
   15338:	ret    0x10
   1533b:	int3   
   1533c:	int3   
   1533d:	int3   
   1533e:	int3   
   1533f:	int3   
   15340:	mov    edi,edi
   15342:	push   ebp
   15343:	mov    ebp,esp
   15345:	push   ebx
   15346:	push   esi
   15347:	mov    esi,DWORD PTR [ebp+0x10]
   1534a:	push   edi
   1534b:	push   0x0
   1534d:	push   esi
   1534e:	mov    edi,ecx
   15350:	call   0x13b9a
   15355:	push   DWORD PTR [ebp+0x14]
   15358:	mov    ebx,eax
   1535a:	mov    eax,ds:0x730b8
   1535f:	mov    DWORD PTR [ebx],eax
   15361:	mov    eax,ds:0x730b8
   15366:	mov    DWORD PTR [ebx+0x8],eax
   15369:	lea    eax,[ebx+0xc]
   1536c:	push   eax
   1536d:	call   0x13c78
   15372:	inc    DWORD PTR [edi+0xc]
   15375:	cmp    esi,DWORD PTR [edi+0x4]
   15378:	je     0x153a2
   1537a:	mov    eax,DWORD PTR [ebp+0xc]
   1537d:	cmp    eax,DWORD PTR ds:0x730b8
   15383:	jne    0x153a2
   15385:	lea    eax,[esi+0xc]
   15388:	push   eax
   15389:	push   DWORD PTR [ebp+0x14]
   1538c:	call   0x18770
   15391:	test   al,al
   15393:	jne    0x153a2
   15395:	mov    DWORD PTR [esi+0x8],ebx
   15398:	mov    eax,DWORD PTR [edi+0x4]
   1539b:	cmp    esi,DWORD PTR [eax+0x8]
   1539e:	jne    0x153bc
   153a0:	jmp    0x153b1
   153a2:	mov    DWORD PTR [esi],ebx
   153a4:	mov    eax,DWORD PTR [edi+0x4]
   153a7:	cmp    esi,eax
   153a9:	jne    0x153b6
   153ab:	mov    DWORD PTR [eax+0x4],ebx
   153ae:	mov    eax,DWORD PTR [edi+0x4]
   153b1:	mov    DWORD PTR [eax+0x8],ebx
   153b4:	jmp    0x153bc
   153b6:	cmp    esi,DWORD PTR [eax]
   153b8:	jne    0x153bc
   153ba:	mov    DWORD PTR [eax],ebx
   153bc:	mov    eax,DWORD PTR [edi+0x4]
   153bf:	mov    esi,ebx
   153c1:	cmp    ebx,DWORD PTR [eax+0x4]
   153c4:	je     0x15478
   153ca:	mov    eax,DWORD PTR [esi+0x4]
   153cd:	xor    edx,edx
   153cf:	cmp    DWORD PTR [eax+0x1c],edx
   153d2:	jne    0x15478
   153d8:	mov    ecx,DWORD PTR [eax+0x4]
   153db:	cmp    eax,DWORD PTR [ecx]
   153dd:	jne    0x15419
   153df:	mov    ecx,DWORD PTR [ecx+0x8]
   153e2:	cmp    DWORD PTR [ecx+0x1c],edx
   153e5:	je     0x15420
   153e7:	cmp    esi,DWORD PTR [eax+0x8]
   153ea:	jne    0x153f6
   153ec:	mov    esi,eax
   153ee:	push   esi
   153ef:	mov    ecx,edi
   153f1:	call   0x12fa8
   153f6:	mov    eax,DWORD PTR [esi+0x4]
   153f9:	mov    DWORD PTR [eax+0x1c],0x1
   15400:	mov    eax,DWORD PTR [esi+0x4]
   15403:	mov    eax,DWORD PTR [eax+0x4]
   15406:	and    DWORD PTR [eax+0x1c],0x0
   1540a:	mov    eax,DWORD PTR [esi+0x4]
   1540d:	push   DWORD PTR [eax+0x4]
   15410:	mov    ecx,edi
   15412:	call   0x12ff6
   15417:	jmp    0x1546c
   15419:	mov    ecx,DWORD PTR [ecx]
   1541b:	cmp    DWORD PTR [ecx+0x1c],edx
   1541e:	jne    0x1543d
   15420:	mov    edx,eax
   15422:	xor    eax,eax
   15424:	inc    eax
   15425:	mov    DWORD PTR [edx+0x1c],eax
   15428:	mov    DWORD PTR [ecx+0x1c],eax
   1542b:	mov    eax,DWORD PTR [esi+0x4]
   1542e:	mov    eax,DWORD PTR [eax+0x4]
   15431:	and    DWORD PTR [eax+0x1c],0x0
   15435:	mov    eax,DWORD PTR [esi+0x4]
   15438:	mov    esi,DWORD PTR [eax+0x4]
   1543b:	jmp    0x1546c
   1543d:	cmp    esi,DWORD PTR [eax]
   1543f:	jne    0x1544b
   15441:	mov    esi,eax
   15443:	push   esi
   15444:	mov    ecx,edi
   15446:	call   0x12ff6
   1544b:	mov    eax,DWORD PTR [esi+0x4]
   1544e:	mov    DWORD PTR [eax+0x1c],0x1
   15455:	mov    eax,DWORD PTR [esi+0x4]
   15458:	mov    eax,DWORD PTR [eax+0x4]
   1545b:	and    DWORD PTR [eax+0x1c],0x0
   1545f:	mov    eax,DWORD PTR [esi+0x4]
   15462:	push   DWORD PTR [eax+0x4]
   15465:	mov    ecx,edi
   15467:	call   0x12fa8
   1546c:	mov    eax,DWORD PTR [edi+0x4]
   1546f:	cmp    esi,DWORD PTR [eax+0x4]
   15472:	jne    0x153ca
   15478:	mov    eax,DWORD PTR [edi+0x4]
   1547b:	mov    eax,DWORD PTR [eax+0x4]
   1547e:	pop    edi
   1547f:	mov    DWORD PTR [eax+0x1c],0x1
   15486:	mov    eax,DWORD PTR [ebp+0x8]
   15489:	pop    esi
   1548a:	mov    DWORD PTR [eax],ebx
   1548c:	pop    ebx
   1548d:	pop    ebp
   1548e:	ret    0x10
   15491:	int3   
   15492:	int3   
   15493:	int3   
   15494:	int3   
   15495:	int3   
   15496:	mov    edi,edi
   15498:	push   ebp
   15499:	mov    ebp,esp
   1549b:	push   esi
   1549c:	push   edi
   1549d:	xor    edi,edi
   1549f:	push   edi
   154a0:	push   edi
   154a1:	push   edi
   154a2:	mov    esi,ecx
   154a4:	mov    eax,DWORD PTR [esi+0x10]
   154a7:	push   edi
   154a8:	push   eax
   154a9:	call   0x11968
   154ae:	call   eax
   154b0:	test   eax,eax
   154b2:	jl     0x154cb
   154b4:	lea    eax,[ebp+0x8]
   154b7:	push   eax
   154b8:	mov    ecx,esi
   154ba:	call   0x13d5a
   154bf:	mov    esi,DWORD PTR [esi+0x10]
   154c2:	push   edi
   154c3:	push   esi
   154c4:	call   0x11992
   154c9:	call   eax
   154cb:	pop    edi
   154cc:	pop    esi
   154cd:	pop    ebp
   154ce:	ret    0x4
   154d1:	int3   
   154d2:	int3   
   154d3:	int3   
   154d4:	int3   
   154d5:	int3   
   154d6:	mov    edi,edi
   154d8:	push   ebp
   154d9:	mov    ebp,esp
   154db:	push   ecx
   154dc:	push   ecx
   154dd:	push   DWORD PTR [ebp+0xc]
   154e0:	lea    eax,[ebp-0x8]
   154e3:	push   eax
   154e4:	call   0x14b04
   154e9:	mov    eax,DWORD PTR [ebp+0x8]
   154ec:	mov    ecx,DWORD PTR [ebp-0x8]
   154ef:	mov    DWORD PTR [eax],ecx
   154f1:	mov    cl,BYTE PTR [ebp-0x4]
   154f4:	mov    BYTE PTR [eax+0x4],cl
   154f7:	leave  
   154f8:	ret    0x8
   154fb:	int3   
   154fc:	int3   
   154fd:	int3   
   154fe:	int3   
   154ff:	int3   
   15500:	mov    edi,edi
   15502:	push   ebp
   15503:	mov    ebp,esp
   15505:	push   ecx
   15506:	mov    eax,DWORD PTR [ecx+0x4]
   15509:	mov    edx,DWORD PTR [eax]
   1550b:	push   eax
   1550c:	push   edx
   1550d:	lea    eax,[ebp-0x4]
   15510:	push   eax
   15511:	call   0x14b9c
   15516:	leave  
   15517:	ret    
   15518:	int3   
   15519:	int3   
   1551a:	int3   
   1551b:	int3   
   1551c:	int3   
   1551d:	int3   
   1551e:	mov    edi,edi
   15520:	push   ebp
   15521:	mov    ebp,esp
   15523:	push   ecx
   15524:	push   ecx
   15525:	push   esi
   15526:	push   DWORD PTR [ebp+0x8]
   15529:	lea    eax,[ebp-0x8]
   1552c:	push   eax
   1552d:	mov    esi,ecx
   1552f:	call   0x13aa6
   15534:	and    DWORD PTR [ebp+0x8],0x0
   15538:	lea    eax,[ebp+0x8]
   1553b:	push   eax
   1553c:	push   DWORD PTR [ebp-0x4]
   1553f:	push   DWORD PTR [ebp-0x8]
   15542:	call   0x1349e
   15547:	add    esp,0xc
   1554a:	push   DWORD PTR [ebp-0x4]
   1554d:	lea    eax,[ebp-0x4]
   15550:	push   DWORD PTR [ebp-0x8]
   15553:	mov    ecx,esi
   15555:	push   eax
   15556:	call   0x14c1a
   1555b:	mov    eax,DWORD PTR [ebp+0x8]
   1555e:	pop    esi
   1555f:	leave  
   15560:	ret    0x4
   15563:	int3   
   15564:	int3   
   15565:	int3   
   15566:	int3   
   15567:	int3   
   15568:	mov    edi,edi
   1556a:	push   ebp
   1556b:	mov    ebp,esp
   1556d:	push   ecx
   1556e:	push   ebx
   1556f:	push   esi
   15570:	push   edi
   15571:	mov    edi,ecx
   15573:	mov    eax,DWORD PTR [edi+0x4]
   15576:	mov    esi,DWORD PTR [eax+0x4]
   15579:	mov    ebx,eax
   1557b:	mov    al,0x1
   1557d:	jmp    0x15598
   1557f:	lea    eax,[esi+0x10]
   15582:	push   eax
   15583:	push   DWORD PTR [ebp+0xc]
   15586:	mov    ebx,esi
   15588:	call   0x18740
   1558d:	test   al,al
   1558f:	je     0x15595
   15591:	mov    esi,DWORD PTR [esi]
   15593:	jmp    0x15598
   15595:	mov    esi,DWORD PTR [esi+0x8]
   15598:	cmp    esi,DWORD PTR ds:0x730a8
   1559e:	jne    0x1557f
   155a0:	cmp    BYTE PTR [edi+0x8],0x0
   155a4:	je     0x155c1
   155a6:	push   DWORD PTR [ebp+0xc]
   155a9:	lea    eax,[ebp+0xc]
   155ac:	push   ebx
   155ad:	push   esi
   155ae:	push   eax
   155af:	mov    ecx,edi
   155b1:	call   0x14c98
   155b6:	mov    ecx,DWORD PTR [eax]
   155b8:	mov    eax,DWORD PTR [ebp+0x8]
   155bb:	mov    BYTE PTR [eax+0x4],0x1
   155bf:	jmp    0x155f4
   155c1:	mov    DWORD PTR [ebp-0x4],ebx
   155c4:	test   al,al
   155c6:	je     0x155d7
   155c8:	mov    eax,DWORD PTR [edi+0x4]
   155cb:	cmp    ebx,DWORD PTR [eax]
   155cd:	je     0x155a6
   155cf:	lea    ecx,[ebp-0x4]
   155d2:	call   0x10f54
   155d7:	push   DWORD PTR [ebp+0xc]
   155da:	mov    eax,DWORD PTR [ebp-0x4]
   155dd:	add    eax,0x10
   155e0:	push   eax
   155e1:	call   0x18740
   155e6:	test   al,al
   155e8:	jne    0x155a6
   155ea:	mov    eax,DWORD PTR [ebp+0x8]
   155ed:	mov    ecx,DWORD PTR [ebp-0x4]
   155f0:	mov    BYTE PTR [eax+0x4],0x0
   155f4:	pop    edi
   155f5:	pop    esi
   155f6:	mov    DWORD PTR [eax],ecx
   155f8:	pop    ebx
   155f9:	leave  
   155fa:	ret    0x8
   155fd:	int3   
   155fe:	int3   
   155ff:	int3   
   15600:	int3   
   15601:	int3   
   15602:	mov    edi,edi
   15604:	push   ebp
   15605:	mov    ebp,esp
   15607:	push   ecx
   15608:	push   ebx
   15609:	push   esi
   1560a:	push   edi
   1560b:	mov    edi,ecx
   1560d:	mov    eax,DWORD PTR [edi+0x4]
   15610:	mov    esi,DWORD PTR [eax+0x4]
   15613:	mov    ebx,eax
   15615:	mov    al,0x1
   15617:	jmp    0x15632
   15619:	lea    eax,[esi+0xc]
   1561c:	push   eax
   1561d:	push   DWORD PTR [ebp+0xc]
   15620:	mov    ebx,esi
   15622:	call   0x18740
   15627:	test   al,al
   15629:	je     0x1562f
   1562b:	mov    esi,DWORD PTR [esi]
   1562d:	jmp    0x15632
   1562f:	mov    esi,DWORD PTR [esi+0x8]
   15632:	cmp    esi,DWORD PTR ds:0x730ac
   15638:	jne    0x15619
   1563a:	cmp    BYTE PTR [edi+0x8],0x0
   1563e:	je     0x1565b
   15640:	push   DWORD PTR [ebp+0xc]
   15643:	lea    eax,[ebp+0xc]
   15646:	push   ebx
   15647:	push   esi
   15648:	push   eax
   15649:	mov    ecx,edi
   1564b:	call   0x14dee
   15650:	mov    ecx,DWORD PTR [eax]
   15652:	mov    eax,DWORD PTR [ebp+0x8]
   15655:	mov    BYTE PTR [eax+0x4],0x1
   15659:	jmp    0x1568e
   1565b:	mov    DWORD PTR [ebp-0x4],ebx
   1565e:	test   al,al
   15660:	je     0x15671
   15662:	mov    eax,DWORD PTR [edi+0x4]
   15665:	cmp    ebx,DWORD PTR [eax]
   15667:	je     0x15640
   15669:	lea    ecx,[ebp-0x4]
   1566c:	call   0x10fd8
   15671:	push   DWORD PTR [ebp+0xc]
   15674:	mov    eax,DWORD PTR [ebp-0x4]
   15677:	add    eax,0xc
   1567a:	push   eax
   1567b:	call   0x18740
   15680:	test   al,al
   15682:	jne    0x15640
   15684:	mov    eax,DWORD PTR [ebp+0x8]
   15687:	mov    ecx,DWORD PTR [ebp-0x4]
   1568a:	mov    BYTE PTR [eax+0x4],0x0
   1568e:	pop    edi
   1568f:	pop    esi
   15690:	mov    DWORD PTR [eax],ecx
   15692:	pop    ebx
   15693:	leave  
   15694:	ret    0x8
   15697:	int3   
   15698:	int3   
   15699:	int3   
   1569a:	int3   
   1569b:	int3   
   1569c:	mov    edi,edi
   1569e:	push   ebp
   1569f:	mov    ebp,esp
   156a1:	push   ecx
   156a2:	push   ebx
   156a3:	push   esi
   156a4:	push   edi
   156a5:	mov    edi,ecx
   156a7:	mov    eax,DWORD PTR [edi+0x4]
   156aa:	mov    esi,DWORD PTR [eax+0x4]
   156ad:	mov    ebx,eax
   156af:	mov    eax,ds:0x730b0
   156b4:	mov    dl,0x1
   156b6:	cmp    esi,eax
   156b8:	je     0x156d6
   156ba:	mov    ecx,DWORD PTR [ebp+0xc]
   156bd:	mov    ecx,DWORD PTR [ecx]
   156bf:	cmp    ecx,DWORD PTR [esi+0xc]
   156c2:	mov    ebx,esi
   156c4:	setl   dl
   156c7:	test   dl,dl
   156c9:	je     0x156cf
   156cb:	mov    esi,DWORD PTR [esi]
   156cd:	jmp    0x156d2
   156cf:	mov    esi,DWORD PTR [esi+0x8]
   156d2:	cmp    esi,eax
   156d4:	jne    0x156bf
   156d6:	cmp    BYTE PTR [edi+0x8],0x0
   156da:	je     0x156f7
   156dc:	push   DWORD PTR [ebp+0xc]
   156df:	push   ebx
   156e0:	push   esi
   156e1:	lea    eax,[ebp+0xc]
   156e4:	push   eax
   156e5:	mov    ecx,edi
   156e7:	call   0x151f0
   156ec:	mov    ecx,DWORD PTR [eax]
   156ee:	mov    eax,DWORD PTR [ebp+0x8]
   156f1:	mov    BYTE PTR [eax+0x4],0x1
   156f5:	jmp    0x15726
   156f7:	mov    ecx,ebx
   156f9:	mov    DWORD PTR [ebp-0x4],ecx
   156fc:	test   dl,dl
   156fe:	je     0x15712
   15700:	mov    eax,DWORD PTR [edi+0x4]
   15703:	cmp    ebx,DWORD PTR [eax]
   15705:	je     0x156dc
   15707:	lea    ecx,[ebp-0x4]
   1570a:	call   0x1105c
   1570f:	mov    ecx,DWORD PTR [ebp-0x4]
   15712:	mov    edx,DWORD PTR [ecx+0xc]
   15715:	mov    eax,DWORD PTR [ebp+0xc]
   15718:	cmp    edx,DWORD PTR [eax]
   1571a:	jge    0x1571f
   1571c:	push   eax
   1571d:	jmp    0x156df
   1571f:	mov    eax,DWORD PTR [ebp+0x8]
   15722:	mov    BYTE PTR [eax+0x4],0x0
   15726:	pop    edi
   15727:	pop    esi
   15728:	mov    DWORD PTR [eax],ecx
   1572a:	pop    ebx
   1572b:	leave  
   1572c:	ret    0x8
   1572f:	int3   
   15730:	int3   
   15731:	int3   
   15732:	int3   
   15733:	int3   
   15734:	mov    edi,edi
   15736:	push   ebp
   15737:	mov    ebp,esp
   15739:	push   ecx
   1573a:	push   esi
   1573b:	mov    esi,ecx
   1573d:	cmp    DWORD PTR [esi+0xc],0x0
   15741:	mov    ecx,DWORD PTR [ebp+0xc]
   15744:	je     0x1577e
   15746:	mov    eax,DWORD PTR [esi+0x4]
   15749:	cmp    ecx,DWORD PTR [eax]
   1574b:	jne    0x1577e
   1574d:	cmp    DWORD PTR [ebp+0x10],eax
   15750:	jne    0x1577e
   15752:	push   DWORD PTR [eax+0x4]
   15755:	mov    ecx,esi
   15757:	call   0x151a6
   1575c:	mov    ecx,DWORD PTR ds:0x730b0
   15762:	mov    eax,DWORD PTR [esi+0x4]
   15765:	mov    DWORD PTR [eax+0x4],ecx
   15768:	mov    eax,DWORD PTR [esi+0x4]
   1576b:	and    DWORD PTR [esi+0xc],0x0
   1576f:	mov    DWORD PTR [eax],eax
   15771:	mov    eax,DWORD PTR [esi+0x4]
   15774:	mov    DWORD PTR [eax+0x8],eax
   15777:	mov    eax,DWORD PTR [esi+0x4]
   1577a:	mov    ecx,DWORD PTR [eax]
   1577c:	jmp    0x157a3
   1577e:	cmp    ecx,DWORD PTR [ebp+0x10]
   15781:	je     0x157a3
   15783:	push   edi
   15784:	mov    edi,ecx
   15786:	lea    ecx,[ebp+0xc]
   15789:	call   0x110d2
   1578e:	push   edi
   1578f:	lea    eax,[ebp-0x4]
   15792:	push   eax
   15793:	mov    ecx,esi
   15795:	call   0x14f44
   1579a:	mov    ecx,DWORD PTR [ebp+0xc]
   1579d:	cmp    ecx,DWORD PTR [ebp+0x10]
   157a0:	jne    0x15784
   157a2:	pop    edi
   157a3:	mov    eax,DWORD PTR [ebp+0x8]
   157a6:	mov    DWORD PTR [eax],ecx
   157a8:	pop    esi
   157a9:	leave  
   157aa:	ret    0xc
   157ad:	int3   
   157ae:	int3   
   157af:	int3   
   157b0:	int3   
   157b1:	int3   
   157b2:	mov    edi,edi
   157b4:	push   ebp
   157b5:	mov    ebp,esp
   157b7:	push   ecx
   157b8:	push   ebx
   157b9:	push   esi
   157ba:	push   edi
   157bb:	mov    edi,ecx
   157bd:	mov    eax,DWORD PTR [edi+0x4]
   157c0:	mov    esi,DWORD PTR [eax+0x4]
   157c3:	mov    ebx,eax
   157c5:	mov    al,0x1
   157c7:	jmp    0x157e2
   157c9:	lea    eax,[esi+0xc]
   157cc:	push   eax
   157cd:	push   DWORD PTR [ebp+0xc]
   157d0:	mov    ebx,esi
   157d2:	call   0x18770
   157d7:	test   al,al
   157d9:	je     0x157df
   157db:	mov    esi,DWORD PTR [esi]
   157dd:	jmp    0x157e2
   157df:	mov    esi,DWORD PTR [esi+0x8]
   157e2:	cmp    esi,DWORD PTR ds:0x730b8
   157e8:	jne    0x157c9
   157ea:	cmp    BYTE PTR [edi+0x8],0x0
   157ee:	je     0x1580b
   157f0:	push   DWORD PTR [ebp+0xc]
   157f3:	lea    eax,[ebp+0xc]
   157f6:	push   ebx
   157f7:	push   esi
   157f8:	push   eax
   157f9:	mov    ecx,edi
   157fb:	call   0x15340
   15800:	mov    ecx,DWORD PTR [eax]
   15802:	mov    eax,DWORD PTR [ebp+0x8]
   15805:	mov    BYTE PTR [eax+0x4],0x1
   15809:	jmp    0x1583e
   1580b:	mov    DWORD PTR [ebp-0x4],ebx
   1580e:	test   al,al
   15810:	je     0x15821
   15812:	mov    eax,DWORD PTR [edi+0x4]
   15815:	cmp    ebx,DWORD PTR [eax]
   15817:	je     0x157f0
   15819:	lea    ecx,[ebp-0x4]
   1581c:	call   0x13046
   15821:	push   DWORD PTR [ebp+0xc]
   15824:	mov    eax,DWORD PTR [ebp-0x4]
   15827:	add    eax,0xc
   1582a:	push   eax
   1582b:	call   0x18770
   15830:	test   al,al
   15832:	jne    0x157f0
   15834:	mov    eax,DWORD PTR [ebp+0x8]
   15837:	mov    ecx,DWORD PTR [ebp-0x4]
   1583a:	mov    BYTE PTR [eax+0x4],0x0
   1583e:	pop    edi
   1583f:	pop    esi
   15840:	mov    DWORD PTR [eax],ecx
   15842:	pop    ebx
   15843:	leave  
   15844:	ret    0x8
   15847:	int3   
   15848:	int3   
   15849:	int3   
   1584a:	int3   
   1584b:	int3   
   1584c:	mov    edi,edi
   1584e:	push   esi
   1584f:	mov    esi,ecx
   15851:	push   edi
   15852:	mov    BYTE PTR [esi+0x8],0x0
   15856:	call   0x13da4
   1585b:	lea    edi,[esi+0x10]
   1585e:	mov    ecx,edi
   15860:	call   0x129b8
   15865:	mov    edi,DWORD PTR [edi]
   15867:	push   0x0
   15869:	push   edi
   1586a:	call   0x1193e
   1586f:	call   eax
   15871:	pop    edi
   15872:	mov    eax,esi
   15874:	pop    esi
   15875:	ret    
   15876:	int3   
   15877:	int3   
   15878:	int3   
   15879:	int3   
   1587a:	int3   
   1587b:	int3   
   1587c:	mov    edi,edi
   1587e:	push   ebp
   1587f:	mov    ebp,esp
   15881:	sub    esp,0x10
   15884:	mov    eax,DWORD PTR [ebp+0x8]
   15887:	mov    eax,DWORD PTR [eax]
   15889:	and    DWORD PTR [ebp-0x4],0x0
   1588d:	mov    DWORD PTR [ebp-0x8],eax
   15890:	lea    eax,[ebp-0x8]
   15893:	push   eax
   15894:	lea    eax,[ebp-0x10]
   15897:	push   eax
   15898:	call   0x154d6
   1589d:	mov    eax,DWORD PTR [eax]
   1589f:	add    eax,0x10
   158a2:	leave  
   158a3:	ret    0x4
   158a6:	int3   
   158a7:	int3   
   158a8:	int3   
   158a9:	int3   
   158aa:	int3   
   158ab:	int3   
   158ac:	mov    edi,edi
   158ae:	push   esi
   158af:	mov    esi,ecx
   158b1:	mov    BYTE PTR [esi+0x8],0x0
   158b5:	call   0x13e06
   158ba:	mov    eax,esi
   158bc:	pop    esi
   158bd:	ret    0x8
   158c0:	int3   
   158c1:	int3   
   158c2:	int3   
   158c3:	int3   
   158c4:	int3   
   158c5:	int3   
   158c6:	mov    edi,edi
   158c8:	push   esi
   158c9:	mov    esi,ecx
   158cb:	mov    BYTE PTR [esi+0x8],0x0
   158cf:	call   0x13e68
   158d4:	mov    eax,esi
   158d6:	pop    esi
   158d7:	ret    0x8
   158da:	int3   
   158db:	int3   
   158dc:	int3   
   158dd:	int3   
   158de:	int3   
   158df:	int3   
   158e0:	mov    edi,edi
   158e2:	push   ebp
   158e3:	mov    ebp,esp
   158e5:	push   ecx
   158e6:	push   ecx
   158e7:	push   DWORD PTR [ebp+0xc]
   158ea:	lea    eax,[ebp-0x8]
   158ed:	push   eax
   158ee:	call   0x15568
   158f3:	mov    eax,DWORD PTR [ebp+0x8]
   158f6:	mov    ecx,DWORD PTR [ebp-0x8]
   158f9:	mov    DWORD PTR [eax],ecx
   158fb:	mov    cl,BYTE PTR [ebp-0x4]
   158fe:	mov    BYTE PTR [eax+0x4],cl
   15901:	leave  
   15902:	ret    0x8
   15905:	int3   
   15906:	int3   
   15907:	int3   
   15908:	int3   
   15909:	int3   
   1590a:	mov    edi,edi
   1590c:	push   ebp
   1590d:	mov    ebp,esp
   1590f:	push   ecx
   15910:	push   ecx
   15911:	push   DWORD PTR [ebp+0xc]
   15914:	lea    eax,[ebp-0x8]
   15917:	push   eax
   15918:	call   0x15602
   1591d:	mov    eax,DWORD PTR [ebp+0x8]
   15920:	mov    ecx,DWORD PTR [ebp-0x8]
   15923:	mov    DWORD PTR [eax],ecx
   15925:	mov    cl,BYTE PTR [ebp-0x4]
   15928:	mov    BYTE PTR [eax+0x4],cl
   1592b:	leave  
   1592c:	ret    0x8
   1592f:	int3   
   15930:	int3   
   15931:	int3   
   15932:	int3   
   15933:	int3   
   15934:	mov    edi,edi
   15936:	push   ebp
   15937:	mov    ebp,esp
   15939:	push   ecx
   1593a:	push   ecx
   1593b:	push   DWORD PTR [ebp+0xc]
   1593e:	lea    eax,[ebp-0x8]
   15941:	push   eax
   15942:	call   0x1569c
   15947:	mov    eax,DWORD PTR [ebp+0x8]
   1594a:	mov    ecx,DWORD PTR [ebp-0x8]
   1594d:	mov    DWORD PTR [eax],ecx
   1594f:	mov    cl,BYTE PTR [ebp-0x4]
   15952:	mov    BYTE PTR [eax+0x4],cl
   15955:	leave  
   15956:	ret    0x8
   15959:	int3   
   1595a:	int3   
   1595b:	int3   
   1595c:	int3   
   1595d:	int3   
   1595e:	mov    edi,edi
   15960:	push   ebp
   15961:	mov    ebp,esp
   15963:	push   ecx
   15964:	push   ecx
   15965:	push   esi
   15966:	push   DWORD PTR [ebp+0x8]
   15969:	lea    eax,[ebp-0x8]
   1596c:	push   eax
   1596d:	mov    esi,ecx
   1596f:	call   0x13ad8
   15974:	and    DWORD PTR [ebp+0x8],0x0
   15978:	lea    eax,[ebp+0x8]
   1597b:	push   eax
   1597c:	push   DWORD PTR [ebp-0x4]
   1597f:	push   DWORD PTR [ebp-0x8]
   15982:	call   0x134c0
   15987:	add    esp,0xc
   1598a:	push   DWORD PTR [ebp-0x4]
   1598d:	lea    eax,[ebp-0x4]
   15990:	push   DWORD PTR [ebp-0x8]
   15993:	mov    ecx,esi
   15995:	push   eax
   15996:	call   0x15734
   1599b:	mov    eax,DWORD PTR [ebp+0x8]
   1599e:	pop    esi
   1599f:	leave  
   159a0:	ret    0x4
   159a3:	int3   
   159a4:	int3   
   159a5:	int3   
   159a6:	int3   
   159a7:	int3   
   159a8:	mov    edi,edi
   159aa:	push   ebp
   159ab:	mov    ebp,esp
   159ad:	push   ecx
   159ae:	mov    eax,DWORD PTR [ecx+0x4]
   159b1:	mov    edx,DWORD PTR [eax]
   159b3:	push   eax
   159b4:	push   edx
   159b5:	lea    eax,[ebp-0x4]
   159b8:	push   eax
   159b9:	call   0x15734
   159be:	leave  
   159bf:	ret    
   159c0:	int3   
   159c1:	int3   
   159c2:	int3   
   159c3:	int3   
   159c4:	int3   
   159c5:	int3   
   159c6:	mov    edi,edi
   159c8:	push   ebp
   159c9:	mov    ebp,esp
   159cb:	push   ecx
   159cc:	push   ecx
   159cd:	push   DWORD PTR [ebp+0xc]
   159d0:	lea    eax,[ebp-0x8]
   159d3:	push   eax
   159d4:	call   0x157b2
   159d9:	mov    eax,DWORD PTR [ebp+0x8]
   159dc:	mov    ecx,DWORD PTR [ebp-0x8]
   159df:	mov    DWORD PTR [eax],ecx
   159e1:	mov    cl,BYTE PTR [ebp-0x4]
   159e4:	mov    BYTE PTR [eax+0x4],cl
   159e7:	leave  
   159e8:	ret    0x8
   159eb:	int3   
   159ec:	int3   
   159ed:	int3   
   159ee:	int3   
   159ef:	int3   
   159f0:	mov    edi,edi
   159f2:	push   ebp
   159f3:	mov    ebp,esp
   159f5:	push   esi
   159f6:	push   edi
   159f7:	xor    edi,edi
   159f9:	push   edi
   159fa:	push   edi
   159fb:	push   edi
   159fc:	mov    esi,ecx
   159fe:	mov    eax,DWORD PTR [esi+0x10]
   15a01:	push   edi
   15a02:	push   eax
   15a03:	call   0x11968
   15a08:	call   eax
   15a0a:	test   eax,eax
   15a0c:	jl     0x15a2a
   15a0e:	lea    eax,[ebp+0x8]
   15a11:	push   eax
   15a12:	mov    ecx,esi
   15a14:	call   0x1587c
   15a19:	mov    ecx,DWORD PTR [ebp+0xc]
   15a1c:	mov    DWORD PTR [eax],ecx
   15a1e:	mov    esi,DWORD PTR [esi+0x10]
   15a21:	push   edi
   15a22:	push   esi
   15a23:	call   0x11992
   15a28:	call   eax
   15a2a:	pop    edi
   15a2b:	pop    esi
   15a2c:	pop    ebp
   15a2d:	ret    0x8
   15a30:	int3   
   15a31:	int3   
   15a32:	int3   
   15a33:	int3   
   15a34:	int3   
   15a35:	int3   
   15a36:	mov    edi,edi
   15a38:	push   ebp
   15a39:	mov    ebp,esp
   15a3b:	sub    esp,0x80
   15a41:	push   esi
   15a42:	mov    esi,ecx
   15a44:	lea    ecx,[ebp-0x40]
   15a47:	call   0x135ec
   15a4c:	push   eax
   15a4d:	push   DWORD PTR [ebp+0x8]
   15a50:	lea    ecx,[ebp-0x80]
   15a53:	call   0x13738
   15a58:	push   eax
   15a59:	lea    eax,[ebp-0x8]
   15a5c:	push   eax
   15a5d:	mov    ecx,esi
   15a5f:	call   0x158e0
   15a64:	mov    esi,DWORD PTR [eax]
   15a66:	lea    ecx,[ebp-0x80]
   15a69:	call   0x12a2c
   15a6e:	lea    ecx,[ebp-0x40]
   15a71:	call   0x129fe
   15a76:	lea    eax,[esi+0x18]
   15a79:	pop    esi
   15a7a:	leave  
   15a7b:	ret    0x4
   15a7e:	int3   
   15a7f:	int3   
   15a80:	int3   
   15a81:	int3   
   15a82:	int3   
   15a83:	int3   
   15a84:	mov    edi,edi
   15a86:	push   ebp
   15a87:	mov    ebp,esp
   15a89:	sub    esp,0x20
   15a8c:	push   esi
   15a8d:	push   0xffffffff
   15a8f:	mov    esi,ecx
   15a91:	push   0x1b838
   15a96:	lea    ecx,[ebp-0x8]
   15a99:	call   0x12a48
   15a9e:	lea    eax,[ebp-0x8]
   15aa1:	push   eax
   15aa2:	push   DWORD PTR [ebp+0x8]
   15aa5:	lea    ecx,[ebp-0x20]
   15aa8:	call   0x13364
   15aad:	push   eax
   15aae:	lea    eax,[ebp-0x10]
   15ab1:	push   eax
   15ab2:	mov    ecx,esi
   15ab4:	call   0x1590a
   15ab9:	mov    esi,DWORD PTR [eax]
   15abb:	lea    ecx,[ebp-0x20]
   15abe:	call   0x12b02
   15ac3:	push   DWORD PTR [ebp-0x8]
   15ac6:	call   0x11c4c
   15acb:	pop    ecx
   15acc:	lea    eax,[esi+0x14]
   15acf:	pop    esi
   15ad0:	leave  
   15ad1:	ret    0x4
   15ad4:	int3   
   15ad5:	int3   
   15ad6:	int3   
   15ad7:	int3   
   15ad8:	int3   
   15ad9:	int3   
   15ada:	mov    edi,edi
   15adc:	push   esi
   15add:	mov    esi,ecx
   15adf:	mov    BYTE PTR [esi+0x8],0x0
   15ae3:	call   0x13eca
   15ae8:	mov    eax,esi
   15aea:	pop    esi
   15aeb:	ret    0x8
   15aee:	int3   
   15aef:	int3   
   15af0:	int3   
   15af1:	int3   
   15af2:	int3   
   15af3:	int3   
   15af4:	mov    edi,edi
   15af6:	push   ebp
   15af7:	mov    ebp,esp
   15af9:	sub    esp,0x14
   15afc:	and    DWORD PTR [ebp-0x4],0x0
   15b00:	push   esi
   15b01:	lea    eax,[ebp-0x4]
   15b04:	push   eax
   15b05:	push   DWORD PTR [ebp+0x8]
   15b08:	mov    esi,ecx
   15b0a:	lea    ecx,[ebp-0xc]
   15b0d:	call   0x1338c
   15b12:	push   eax
   15b13:	lea    eax,[ebp-0x14]
   15b16:	push   eax
   15b17:	mov    ecx,esi
   15b19:	call   0x15934
   15b1e:	mov    ecx,DWORD PTR [ebp-0x8]
   15b21:	mov    esi,DWORD PTR [eax]
   15b23:	test   ecx,ecx
   15b25:	je     0x15b2c
   15b27:	call   0x11c8e
   15b2c:	lea    eax,[esi+0x10]
   15b2f:	pop    esi
   15b30:	leave  
   15b31:	ret    0x4
   15b34:	int3   
   15b35:	int3   
   15b36:	int3   
   15b37:	int3   
   15b38:	int3   
   15b39:	int3   
   15b3a:	mov    edi,edi
   15b3c:	push   ebp
   15b3d:	mov    ebp,esp
   15b3f:	sub    esp,0x20
   15b42:	push   esi
   15b43:	push   0xffffffff
   15b45:	mov    esi,ecx
   15b47:	push   0x1b79e
   15b4c:	lea    ecx,[ebp-0x8]
   15b4f:	call   0x12b42
   15b54:	lea    eax,[ebp-0x8]
   15b57:	push   eax
   15b58:	push   DWORD PTR [ebp+0x8]
   15b5b:	lea    ecx,[ebp-0x20]
   15b5e:	call   0x13454
   15b63:	push   eax
   15b64:	lea    eax,[ebp-0x10]
   15b67:	push   eax
   15b68:	mov    ecx,esi
   15b6a:	call   0x159c6
   15b6f:	mov    esi,DWORD PTR [eax]
   15b71:	lea    ecx,[ebp-0x20]
   15b74:	call   0x12b02
   15b79:	push   DWORD PTR [ebp-0x8]
   15b7c:	call   0x11c4c
   15b81:	pop    ecx
   15b82:	lea    eax,[esi+0x14]
   15b85:	pop    esi
   15b86:	leave  
   15b87:	ret    0x4
   15b8a:	int3   
   15b8b:	int3   
   15b8c:	int3   
   15b8d:	int3   
   15b8e:	int3   
   15b8f:	int3   
   15b90:	mov    edi,edi
   15b92:	push   ebp
   15b93:	mov    ebp,esp
   15b95:	mov    ecx,DWORD PTR ds:0x72ed8
   15b9b:	push   ebx
   15b9c:	push   DWORD PTR [ebp+0xc]
   15b9f:	call   0x14ace
   15ba4:	mov    ebx,DWORD PTR [ebp+0x8]
   15ba7:	test   eax,eax
   15ba9:	jne    0x15bb7
   15bab:	test   bl,0x1
   15bae:	jne    0x15bb7
   15bb0:	xor    al,al
   15bb2:	jmp    0x15ccb
   15bb7:	mov    ecx,DWORD PTR ds:0x72ed8
   15bbd:	push   esi
   15bbe:	push   DWORD PTR [ebp+0xc]
   15bc1:	call   0x15a36
   15bc6:	mov    esi,eax
   15bc8:	test   bl,0x1
   15bcb:	je     0x15bfe
   15bcd:	mov    eax,DWORD PTR [ebp+0x1c]
   15bd0:	push   DWORD PTR [ebp+0xc]
   15bd3:	mov    ecx,esi
   15bd5:	mov    DWORD PTR [esi+0x20],eax
   15bd8:	call   0x12926
   15bdd:	push   DWORD PTR [ebp+0x10]
   15be0:	lea    ecx,[esi+0x8]
   15be3:	call   0x12926
   15be8:	push   DWORD PTR [ebp+0x14]
   15beb:	lea    ecx,[esi+0x10]
   15bee:	call   0x12926
   15bf3:	push   DWORD PTR [ebp+0x18]
   15bf6:	lea    ecx,[esi+0x18]
   15bf9:	call   0x12926
   15bfe:	mov    DWORD PTR [ebp+0x8],ebx
   15c01:	and    DWORD PTR [ebp+0x8],0x2
   15c05:	je     0x15c15
   15c07:	mov    eax,DWORD PTR [ebp+0x20]
   15c0a:	mov    ecx,DWORD PTR [eax]
   15c0c:	mov    DWORD PTR [esi+0x28],ecx
   15c0f:	mov    eax,DWORD PTR [eax+0x4]
   15c12:	mov    DWORD PTR [esi+0x2c],eax
   15c15:	mov    DWORD PTR [ebp+0x1c],ebx
   15c18:	and    DWORD PTR [ebp+0x1c],0x4
   15c1c:	je     0x15c2c
   15c1e:	mov    eax,DWORD PTR [ebp+0x24]
   15c21:	mov    ecx,DWORD PTR [eax]
   15c23:	mov    DWORD PTR [esi+0x30],ecx
   15c26:	mov    eax,DWORD PTR [eax+0x4]
   15c29:	mov    DWORD PTR [esi+0x34],eax
   15c2c:	test   bl,0x10
   15c2f:	je     0x15cc8
   15c35:	cmp    DWORD PTR [esi+0xc],0x0
   15c39:	jbe    0x15cc8
   15c3f:	mov    eax,ds:0x72ed8
   15c44:	mov    eax,DWORD PTR [eax+0x4]
   15c47:	push   edi
   15c48:	mov    edi,DWORD PTR [eax]
   15c4a:	mov    DWORD PTR [ebp+0x10],edi
   15c4d:	cmp    edi,eax
   15c4f:	je     0x15cc7
   15c51:	push   DWORD PTR [ebp+0xc]
   15c54:	lea    ebx,[edi+0x10]
   15c57:	push   ebx
   15c58:	call   0x18760
   15c5d:	test   al,al
   15c5f:	je     0x15cb2
   15c61:	lea    eax,[esi+0x8]
   15c64:	push   eax
   15c65:	add    edi,0x20
   15c68:	push   edi
   15c69:	call   0x18750
   15c6e:	test   al,al
   15c70:	je     0x15cb2
   15c72:	cmp    DWORD PTR [ebp+0x8],0x0
   15c76:	je     0x15c92
   15c78:	mov    ecx,DWORD PTR ds:0x72ed8
   15c7e:	push   ebx
   15c7f:	call   0x15a36
   15c84:	mov    ecx,DWORD PTR [ebp+0x20]
   15c87:	mov    edx,DWORD PTR [ecx]
   15c89:	mov    DWORD PTR [eax+0x28],edx
   15c8c:	mov    ecx,DWORD PTR [ecx+0x4]
   15c8f:	mov    DWORD PTR [eax+0x2c],ecx
   15c92:	cmp    DWORD PTR [ebp+0x1c],0x0
   15c96:	je     0x15cb2
   15c98:	mov    ecx,DWORD PTR ds:0x72ed8
   15c9e:	push   ebx
   15c9f:	call   0x15a36
   15ca4:	mov    ecx,DWORD PTR [ebp+0x24]
   15ca7:	mov    edx,DWORD PTR [ecx]
   15ca9:	mov    DWORD PTR [eax+0x30],edx
   15cac:	mov    ecx,DWORD PTR [ecx+0x4]
   15caf:	mov    DWORD PTR [eax+0x34],ecx
   15cb2:	lea    ecx,[ebp+0x10]
   15cb5:	call   0x132ec
   15cba:	mov    edi,DWORD PTR [ebp+0x10]
   15cbd:	mov    eax,ds:0x72ed8
   15cc2:	cmp    edi,DWORD PTR [eax+0x4]
   15cc5:	jne    0x15c51
   15cc7:	pop    edi
   15cc8:	mov    al,0x1
   15cca:	pop    esi
   15ccb:	pop    ebx
   15ccc:	pop    ebp
   15ccd:	ret    0x20
   15cd0:	int3   
   15cd1:	int3   
   15cd2:	int3   
   15cd3:	int3   
   15cd4:	int3   
   15cd5:	int3   
   15cd6:	push   0x38
   15cd8:	push   0x72128
   15cdd:	call   0x1b424
   15ce2:	xor    esi,esi
   15ce4:	push   esi
   15ce5:	push   esi
   15ce6:	push   esi
   15ce7:	push   esi
   15ce8:	push   0x72550
   15ced:	call   0x11968
   15cf2:	call   eax
   15cf4:	cmp    eax,esi
   15cf6:	jge    0x15d07
   15cf8:	mov    eax,DWORD PTR [ebp+0x8]
   15cfb:	mov    DWORD PTR [eax+0x8],0x4
   15d02:	jmp    0x15dea
   15d07:	mov    DWORD PTR [ebp-0x4],esi
   15d0a:	or     ebx,0xffffffff
   15d0d:	push   ebx
   15d0e:	mov    esi,DWORD PTR [ebp+0x8]
   15d11:	lea    eax,[esi+0x20]
   15d14:	push   eax
   15d15:	lea    ecx,[ebp-0x30]
   15d18:	call   0x1326a
   15d1d:	mov    edi,DWORD PTR [ebp-0x2c]
   15d20:	inc    edi
   15d21:	push   ebx
   15d22:	lea    eax,[edi+esi*1+0x20]
   15d26:	push   eax
   15d27:	lea    ecx,[ebp-0x28]
   15d2a:	call   0x1326a
   15d2f:	mov    eax,DWORD PTR [ebp-0x24]
   15d32:	lea    edi,[edi+eax*1+0x1]
   15d36:	push   ebx
   15d37:	lea    eax,[edi+esi*1+0x20]
   15d3b:	push   eax
   15d3c:	lea    ecx,[ebp-0x20]
   15d3f:	call   0x1326a
   15d44:	mov    eax,DWORD PTR [ebp-0x1c]
   15d47:	lea    eax,[edi+eax*1+0x1]
   15d4b:	push   ebx
   15d4c:	lea    eax,[eax+esi*1+0x20]
   15d50:	push   eax
   15d51:	lea    ecx,[ebp-0x48]
   15d54:	call   0x1326a
   15d59:	mov    eax,DWORD PTR [esi+0xc]
   15d5c:	mov    ecx,DWORD PTR [esi+0x10]
   15d5f:	mov    DWORD PTR [ebp-0x40],ecx
   15d62:	mov    ecx,DWORD PTR [esi+0x14]
   15d65:	mov    DWORD PTR [ebp-0x3c],ecx
   15d68:	mov    ecx,DWORD PTR [esi+0x18]
   15d6b:	mov    DWORD PTR [ebp-0x38],ecx
   15d6e:	mov    ecx,DWORD PTR [esi+0x1c]
   15d71:	mov    DWORD PTR [ebp-0x34],ecx
   15d74:	lea    ecx,[ebp-0x38]
   15d77:	push   ecx
   15d78:	lea    ecx,[ebp-0x40]
   15d7b:	push   ecx
   15d7c:	push   eax
   15d7d:	lea    eax,[ebp-0x48]
   15d80:	push   eax
   15d81:	lea    eax,[ebp-0x20]
   15d84:	push   eax
   15d85:	lea    eax,[ebp-0x28]
   15d88:	push   eax
   15d89:	lea    eax,[ebp-0x30]
   15d8c:	push   eax
   15d8d:	push   DWORD PTR [esi+0x4]
   15d90:	call   0x15b90
   15d95:	xor    ecx,ecx
   15d97:	test   al,al
   15d99:	sete   cl
   15d9c:	mov    DWORD PTR [esi+0x8],ecx
   15d9f:	push   DWORD PTR [ebp-0x48]
   15da2:	call   0x11c4c
   15da7:	push   DWORD PTR [ebp-0x20]
   15daa:	call   0x11c4c
   15daf:	push   DWORD PTR [ebp-0x28]
   15db2:	call   0x11c4c
   15db7:	push   DWORD PTR [ebp-0x30]
   15dba:	call   0x11c4c
   15dbf:	add    esp,0x10
   15dc2:	jmp    0x15dd5
   15dc4:	xor    eax,eax
   15dc6:	inc    eax
   15dc7:	ret    
   15dc8:	mov    esp,DWORD PTR [ebp-0x18]
   15dcb:	mov    eax,DWORD PTR [ebp+0x8]
   15dce:	mov    DWORD PTR [eax+0x8],0x4
   15dd5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15ddc:	push   0x0
   15dde:	push   0x72550
   15de3:	call   0x11992
   15de8:	call   eax
   15dea:	call   0x1b469
   15def:	ret    0x4
   15df2:	int3   
   15df3:	int3   
   15df4:	int3   
   15df5:	int3   
   15df6:	int3   
   15df7:	int3   
   15df8:	push   0x24
   15dfa:	push   0x72148
   15dff:	call   0x1b424
   15e04:	xor    ebx,ebx
   15e06:	push   ebx
   15e07:	push   ebx
   15e08:	push   ebx
   15e09:	push   ebx
   15e0a:	push   0x72550
   15e0f:	call   0x11968
   15e14:	call   eax
   15e16:	cmp    eax,ebx
   15e18:	jge    0x15e29
   15e1a:	mov    eax,DWORD PTR [ebp+0x8]
   15e1d:	mov    DWORD PTR [eax+0x8],0x4
   15e24:	jmp    0x15ee2
   15e29:	mov    DWORD PTR [ebp-0x4],ebx
   15e2c:	push   0xffffffff
   15e2e:	mov    esi,DWORD PTR [ebp+0x8]
   15e31:	lea    eax,[esi+0xc]
   15e34:	push   eax
   15e35:	lea    ecx,[ebp-0x24]
   15e38:	call   0x1326a
   15e3d:	push   0xffffffff
   15e3f:	mov    eax,DWORD PTR [ebp-0x20]
   15e42:	lea    eax,[eax+esi*1+0xd]
   15e46:	push   eax
   15e47:	lea    ecx,[ebp-0x2c]
   15e4a:	call   0x1326a
   15e4f:	push   0xffffffff
   15e51:	push   0x1b838
   15e56:	lea    ecx,[ebp-0x34]
   15e59:	call   0x12a48
   15e5e:	lea    eax,[ebp-0x34]
   15e61:	push   eax
   15e62:	lea    eax,[ebp-0x2c]
   15e65:	push   eax
   15e66:	call   0x18750
   15e6b:	mov    BYTE PTR [ebp-0x19],al
   15e6e:	push   DWORD PTR [ebp-0x34]
   15e71:	call   0x11c4c
   15e76:	pop    ecx
   15e77:	lea    eax,[ebp-0x24]
   15e7a:	mov    ecx,DWORD PTR ds:0x72520
   15e80:	push   eax
   15e81:	cmp    BYTE PTR [ebp-0x19],bl
   15e84:	je     0x15e8d
   15e86:	call   0x1551e
   15e8b:	jmp    0x15e9d
   15e8d:	call   0x15a84
   15e92:	lea    ecx,[ebp-0x2c]
   15e95:	push   ecx
   15e96:	mov    ecx,eax
   15e98:	call   0x12926
   15e9d:	mov    DWORD PTR [esi+0x8],ebx
   15ea0:	push   DWORD PTR [ebp-0x2c]
   15ea3:	call   0x11c4c
   15ea8:	push   DWORD PTR [ebp-0x24]
   15eab:	call   0x11c4c
   15eb0:	pop    ecx
   15eb1:	pop    ecx
   15eb2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15eb9:	jmp    0x15ed5
   15ebb:	xor    eax,eax
   15ebd:	inc    eax
   15ebe:	ret    
   15ebf:	mov    esp,DWORD PTR [ebp-0x18]
   15ec2:	mov    eax,DWORD PTR [ebp+0x8]
   15ec5:	mov    DWORD PTR [eax+0x8],0x4
   15ecc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15ed3:	xor    ebx,ebx
   15ed5:	push   ebx
   15ed6:	push   0x72550
   15edb:	call   0x11992
   15ee0:	call   eax
   15ee2:	call   0x1b469
   15ee7:	ret    0x4
   15eea:	int3   
   15eeb:	int3   
   15eec:	int3   
   15eed:	int3   
   15eee:	int3   
   15eef:	int3   
   15ef0:	push   0xc
   15ef2:	push   0x72168
   15ef7:	call   0x1b424
   15efc:	xor    edi,edi
   15efe:	push   edi
   15eff:	push   edi
   15f00:	push   edi
   15f01:	push   edi
   15f02:	push   0x72550
   15f07:	call   0x11968
   15f0c:	call   eax
   15f0e:	cmp    eax,edi
   15f10:	jge    0x15f1e
   15f12:	mov    eax,DWORD PTR [ebp+0x8]
   15f15:	mov    DWORD PTR [eax+0x8],0x4
   15f1c:	jmp    0x15f95
   15f1e:	mov    DWORD PTR [ebp-0x4],edi
   15f21:	mov    esi,DWORD PTR [ebp+0x8]
   15f24:	lea    eax,[esi+0x4]
   15f27:	mov    ecx,DWORD PTR ds:0x725ac
   15f2d:	push   eax
   15f2e:	cmp    DWORD PTR [esi],edi
   15f30:	jbe    0x15f5d
   15f32:	call   0x15af4
   15f37:	mov    ebx,eax
   15f39:	push   DWORD PTR [esi]
   15f3b:	lea    eax,[esi+0xc]
   15f3e:	push   eax
   15f3f:	lea    ecx,[ebp-0x1c]
   15f42:	call   0x13636
   15f47:	push   eax
   15f48:	mov    ecx,ebx
   15f4a:	call   0x13172
   15f4f:	mov    ecx,DWORD PTR [ebp-0x1c]
   15f52:	cmp    ecx,edi
   15f54:	je     0x15f62
   15f56:	call   0x11c8e
   15f5b:	jmp    0x15f62
   15f5d:	call   0x1595e
   15f62:	mov    DWORD PTR [esi+0x8],edi
   15f65:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f6c:	jmp    0x15f88
   15f6e:	xor    eax,eax
   15f70:	inc    eax
   15f71:	ret    
   15f72:	mov    esp,DWORD PTR [ebp-0x18]
   15f75:	mov    eax,DWORD PTR [ebp+0x8]
   15f78:	mov    DWORD PTR [eax+0x8],0x4
   15f7f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f86:	xor    edi,edi
   15f88:	push   edi
   15f89:	push   0x72550
   15f8e:	call   0x11992
   15f93:	call   eax
   15f95:	call   0x1b469
   15f9a:	ret    0x4
   15f9d:	int3   
   15f9e:	int3   
   15f9f:	int3   
   15fa0:	int3   
   15fa1:	int3   
   15fa2:	mov    edi,edi
   15fa4:	push   ebp
   15fa5:	mov    ebp,esp
   15fa7:	sub    esp,0x10
   15faa:	and    DWORD PTR [ebp-0xc],0x0
   15fae:	xor    ecx,ecx
   15fb0:	mov    DWORD PTR [ebp-0x10],0x1
   15fb7:	xor    eax,eax
   15fb9:	mov    dl,BYTE PTR [eax+0x6e4b8]
   15fbf:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   15fc3:	inc    ecx
   15fc4:	inc    eax
   15fc5:	and    eax,0xf
   15fc8:	cmp    ecx,0x8
   15fcb:	jne    0x15fb9
   15fcd:	push   ecx
   15fce:	lea    eax,[ebp-0x10]
   15fd1:	push   eax
   15fd2:	lea    ecx,[ebp-0x8]
   15fd5:	mov    DWORD PTR [ebp-0x4],0x2
   15fdc:	call   0x13636
   15fe1:	mov    ecx,DWORD PTR ds:0x725ac
   15fe7:	push   eax
   15fe8:	lea    eax,[ebp-0x4]
   15feb:	push   eax
   15fec:	call   0x15af4
   15ff1:	mov    ecx,eax
   15ff3:	call   0x13172
   15ff8:	mov    ecx,DWORD PTR [ebp-0x8]
   15ffb:	test   ecx,ecx
   15ffd:	je     0x16004
   15fff:	call   0x11c8e
   16004:	leave  
   16005:	ret    
   16006:	int3   
   16007:	int3   
   16008:	int3   
   16009:	int3   
   1600a:	int3   
   1600b:	int3   
   1600c:	push   0x868
   16011:	push   0x72188
   16016:	call   0x1b730
   1601b:	xor    ebx,ebx
   1601d:	mov    DWORD PTR [ebp-0x838],ebx
   16023:	mov    DWORD PTR [ebp-0x4],ebx
   16026:	mov    DWORD PTR [ebp-0x878],ebx
   1602c:	xor    eax,eax
   1602e:	lea    edi,[ebp-0x874]
   16034:	stos   DWORD PTR es:[edi],eax
   16035:	stos   DWORD PTR es:[edi],eax
   16036:	stos   DWORD PTR es:[edi],eax
   16037:	stos   DWORD PTR es:[edi],eax
   16038:	stos   DWORD PTR es:[edi],eax
   16039:	mov    BYTE PTR [ebp-0x840],bl
   1603f:	mov    DWORD PTR [ebp-0x83c],ebx
   16045:	xor    eax,eax
   16047:	mov    WORD PTR [ebp-0x81c],ax
   1604e:	push   0x7fe
   16053:	push   ebx
   16054:	lea    eax,[ebp-0x81a]
   1605a:	push   eax
   1605b:	call   0x1b3e8
   16060:	add    esp,0xc
   16063:	mov    eax,0x726b0
   16068:	mov    edx,eax
   1606a:	mov    cx,WORD PTR [eax]
   1606d:	inc    eax
   1606e:	inc    eax
   1606f:	cmp    cx,bx
   16072:	jne    0x1606a
   16074:	sub    eax,edx
   16076:	lea    edi,[ebp-0x81c]
   1607c:	dec    edi
   1607d:	dec    edi
   1607e:	mov    cx,WORD PTR [edi+0x2]
   16082:	inc    edi
   16083:	inc    edi
   16084:	cmp    cx,bx
   16087:	jne    0x1607e
   16089:	mov    ecx,eax
   1608b:	mov    esi,edx
   1608d:	shr    ecx,0x2
   16090:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16092:	mov    ecx,eax
   16094:	and    ecx,0x3
   16097:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16099:	mov    eax,0x72448
   1609e:	mov    edx,eax
   160a0:	mov    cx,WORD PTR [eax]
   160a3:	inc    eax
   160a4:	inc    eax
   160a5:	cmp    cx,bx
   160a8:	jne    0x160a0
   160aa:	sub    eax,edx
   160ac:	lea    edi,[ebp-0x81c]
   160b2:	dec    edi
   160b3:	dec    edi
   160b4:	mov    cx,WORD PTR [edi+0x2]
   160b8:	inc    edi
   160b9:	inc    edi
   160ba:	cmp    cx,bx
   160bd:	jne    0x160b4
   160bf:	mov    ecx,eax
   160c1:	mov    esi,edx
   160c3:	shr    ecx,0x2
   160c6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   160c8:	mov    ecx,eax
   160ca:	and    ecx,0x3
   160cd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   160cf:	lea    eax,[ebp-0x81c]
   160d5:	mov    DWORD PTR [ebp-0x85c],eax
   160db:	lea    ecx,[eax+0x2]
   160de:	mov    dx,WORD PTR [eax]
   160e1:	inc    eax
   160e2:	inc    eax
   160e3:	cmp    dx,bx
   160e6:	jne    0x160de
   160e8:	sub    eax,ecx
   160ea:	sar    eax,1
   160ec:	add    eax,eax
   160ee:	mov    WORD PTR [ebp-0x85e],ax
   160f5:	mov    WORD PTR [ebp-0x860],ax
   160fc:	push   0x18
   160fe:	pop    esi
   160ff:	mov    DWORD PTR [ebp-0x878],esi
   16105:	mov    DWORD PTR [ebp-0x874],ebx
   1610b:	mov    DWORD PTR [ebp-0x86c],0x40
   16115:	lea    eax,[ebp-0x860]
   1611b:	mov    DWORD PTR [ebp-0x870],eax
   16121:	mov    DWORD PTR [ebp-0x868],ebx
   16127:	mov    DWORD PTR [ebp-0x864],ebx
   1612d:	lea    eax,[ebp-0x878]
   16133:	push   eax
   16134:	push   0x1
   16136:	lea    eax,[ebp-0x838]
   1613c:	push   eax
   1613d:	call   0x11302
   16142:	call   eax
   16144:	cmp    eax,ebx
   16146:	je     0x16152
   16148:	call   0x15fa2
   1614d:	jmp    0x16244
   16152:	mov    eax,0x1b79e
   16157:	mov    DWORD PTR [ebp-0x854],eax
   1615d:	lea    edx,[eax+0x2]
   16160:	mov    cx,WORD PTR [eax]
   16163:	inc    eax
   16164:	inc    eax
   16165:	cmp    cx,bx
   16168:	jne    0x16160
   1616a:	sub    eax,edx
   1616c:	sar    eax,1
   1616e:	mov    WORD PTR [ebp-0x856],ax
   16175:	mov    WORD PTR [ebp-0x858],ax
   1617c:	mov    DWORD PTR [ebp-0x844],ebx
   16182:	lea    eax,[ebp-0x844]
   16188:	push   eax
   16189:	push   esi
   1618a:	lea    eax,[ebp-0x834]
   16190:	push   eax
   16191:	push   0x1
   16193:	lea    eax,[ebp-0x858]
   16199:	push   eax
   1619a:	push   DWORD PTR [ebp-0x838]
   161a0:	call   0x1171c
   161a5:	call   eax
   161a7:	cmp    eax,0x80000005
   161ac:	je     0x161b5
   161ae:	cmp    eax,0xc0000023
   161b3:	jne    0x16226
   161b5:	push   DWORD PTR [ebp-0x844]
   161bb:	call   0x11c16
   161c0:	pop    ecx
   161c1:	xor    ecx,ecx
   161c3:	cmp    eax,ebx
   161c5:	setne  cl
   161c8:	mov    BYTE PTR [ebp-0x850],cl
   161ce:	mov    DWORD PTR [ebp-0x84c],eax
   161d4:	lea    eax,[ebp-0x850]
   161da:	push   eax
   161db:	lea    ecx,[ebp-0x840]
   161e1:	call   0x12970
   161e6:	cmp    BYTE PTR [ebp-0x850],bl
   161ec:	je     0x161fa
   161ee:	push   DWORD PTR [ebp-0x84c]
   161f4:	call   0x11c4c
   161f9:	pop    ecx
   161fa:	lea    eax,[ebp-0x844]
   16200:	push   eax
   16201:	push   DWORD PTR [ebp-0x844]
   16207:	mov    edi,DWORD PTR [ebp-0x83c]
   1620d:	push   edi
   1620e:	push   0x1
   16210:	lea    eax,[ebp-0x858]
   16216:	push   eax
   16217:	push   DWORD PTR [ebp-0x838]
   1621d:	call   0x1171c
   16222:	call   eax
   16224:	jmp    0x1622c
   16226:	mov    edi,DWORD PTR [ebp-0x83c]
   1622c:	cmp    eax,ebx
   1622e:	je     0x16256
   16230:	call   0x15fa2
   16235:	cmp    BYTE PTR [ebp-0x840],bl
   1623b:	je     0x16244
   1623d:	push   edi
   1623e:	call   0x11c4c
   16243:	pop    ecx
   16244:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1624b:	call   0x162c8
   16250:	call   0x1b778
   16255:	ret    
   16256:	cmp    DWORD PTR [edi+0x4],0x3
   1625a:	jne    0x16230
   1625c:	mov    esi,DWORD PTR [edi+0xc]
   1625f:	cmp    esi,ebx
   16261:	je     0x16235
   16263:	cmp    esi,0xf4240
   16269:	ja     0x16235
   1626b:	mov    DWORD PTR [ebp-0x848],0x2
   16275:	lea    eax,[ebp-0x848]
   1627b:	push   eax
   1627c:	mov    ecx,DWORD PTR ds:0x725ac
   16282:	call   0x15af4
   16287:	mov    edi,eax
   16289:	push   esi
   1628a:	mov    esi,DWORD PTR [ebp-0x83c]
   16290:	mov    eax,DWORD PTR [esi+0x8]
   16293:	add    eax,esi
   16295:	push   eax
   16296:	lea    ecx,[ebp-0x848]
   1629c:	call   0x13636
   162a1:	push   eax
   162a2:	mov    ecx,edi
   162a4:	call   0x13172
   162a9:	mov    ecx,DWORD PTR [ebp-0x848]
   162af:	cmp    ecx,ebx
   162b1:	je     0x162b8
   162b3:	call   0x11c8e
   162b8:	cmp    BYTE PTR [ebp-0x840],bl
   162be:	je     0x16244
   162c0:	push   esi
   162c1:	jmp    0x1623e
   162c6:	xor    ebx,ebx
   162c8:	cmp    DWORD PTR [ebp-0x838],ebx
   162ce:	je     0x162dd
   162d0:	push   DWORD PTR [ebp-0x838]
   162d6:	call   0x114a6
   162db:	call   eax
   162dd:	ret    
   162de:	int3   
   162df:	int3   
   162e0:	int3   
   162e1:	int3   
   162e2:	int3   
   162e3:	int3   
   162e4:	push   0x844
   162e9:	push   0x721a8
   162ee:	call   0x1b730
   162f3:	xor    esi,esi
   162f5:	mov    DWORD PTR [ebp-0x820],esi
   162fb:	mov    DWORD PTR [ebp-0x4],esi
   162fe:	mov    DWORD PTR [ebp-0x84c],esi
   16304:	xor    eax,eax
   16306:	lea    edi,[ebp-0x848]
   1630c:	stos   DWORD PTR es:[edi],eax
   1630d:	stos   DWORD PTR es:[edi],eax
   1630e:	stos   DWORD PTR es:[edi],eax
   1630f:	stos   DWORD PTR es:[edi],eax
   16310:	stos   DWORD PTR es:[edi],eax
   16311:	mov    BYTE PTR [ebp-0x854],0x0
   16318:	mov    DWORD PTR [ebp-0x850],esi
   1631e:	xor    eax,eax
   16320:	mov    WORD PTR [ebp-0x81c],ax
   16327:	push   0x7fe
   1632c:	push   esi
   1632d:	lea    eax,[ebp-0x81a]
   16333:	push   eax
   16334:	call   0x1b3e8
   16339:	add    esp,0xc
   1633c:	mov    eax,0x726b0
   16341:	mov    edx,eax
   16343:	push   0x2
   16345:	pop    ebx
   16346:	mov    cx,WORD PTR [eax]
   16349:	add    eax,ebx
   1634b:	cmp    cx,si
   1634e:	jne    0x16346
   16350:	sub    eax,edx
   16352:	lea    edi,[ebp-0x81c]
   16358:	dec    edi
   16359:	dec    edi
   1635a:	mov    cx,WORD PTR [edi+0x2]
   1635e:	add    edi,ebx
   16360:	cmp    cx,si
   16363:	jne    0x1635a
   16365:	mov    ecx,eax
   16367:	mov    esi,edx
   16369:	shr    ecx,0x2
   1636c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1636e:	mov    ecx,eax
   16370:	and    ecx,0x3
   16373:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16375:	mov    eax,0x72448
   1637a:	mov    edx,eax
   1637c:	mov    cx,WORD PTR [eax]
   1637f:	add    eax,ebx
   16381:	test   cx,cx
   16384:	jne    0x1637c
   16386:	sub    eax,edx
   16388:	lea    edi,[ebp-0x81c]
   1638e:	dec    edi
   1638f:	dec    edi
   16390:	mov    cx,WORD PTR [edi+0x2]
   16394:	add    edi,ebx
   16396:	test   cx,cx
   16399:	jne    0x16390
   1639b:	mov    ecx,eax
   1639d:	mov    esi,edx
   1639f:	shr    ecx,0x2
   163a2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   163a4:	mov    ecx,eax
   163a6:	and    ecx,0x3
   163a9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   163ab:	lea    eax,[ebp-0x81c]
   163b1:	mov    DWORD PTR [ebp-0x830],eax
   163b7:	lea    ecx,[eax+0x2]
   163ba:	mov    dx,WORD PTR [eax]
   163bd:	add    eax,ebx
   163bf:	test   dx,dx
   163c2:	jne    0x163ba
   163c4:	sub    eax,ecx
   163c6:	sar    eax,1
   163c8:	add    eax,eax
   163ca:	mov    WORD PTR [ebp-0x832],ax
   163d1:	mov    WORD PTR [ebp-0x834],ax
   163d8:	mov    DWORD PTR [ebp-0x84c],0x18
   163e2:	xor    esi,esi
   163e4:	mov    DWORD PTR [ebp-0x848],esi
   163ea:	mov    DWORD PTR [ebp-0x840],0x40
   163f4:	lea    eax,[ebp-0x834]
   163fa:	mov    DWORD PTR [ebp-0x844],eax
   16400:	mov    DWORD PTR [ebp-0x83c],esi
   16406:	mov    DWORD PTR [ebp-0x838],esi
   1640c:	lea    eax,[ebp-0x84c]
   16412:	push   eax
   16413:	push   0x3
   16415:	lea    eax,[ebp-0x820]
   1641b:	push   eax
   1641c:	call   0x11302
   16421:	call   eax
   16423:	cmp    eax,esi
   16425:	je     0x16440
   16427:	push   0xfffffffe
   16429:	lea    eax,[ebp-0x10]
   1642c:	push   eax
   1642d:	push   0x72518
   16432:	call   0x1b5ec
   16437:	add    esp,0xc
   1643a:	call   0x1b778
   1643f:	ret    
   16440:	mov    eax,0x1b79e
   16445:	mov    DWORD PTR [ebp-0x824],eax
   1644b:	lea    edx,[eax+0x2]
   1644e:	mov    cx,WORD PTR [eax]
   16451:	add    eax,ebx
   16453:	cmp    cx,si
   16456:	jne    0x1644e
   16458:	sub    eax,edx
   1645a:	sar    eax,1
   1645c:	mov    WORD PTR [ebp-0x826],ax
   16463:	mov    WORD PTR [ebp-0x828],ax
   1646a:	mov    DWORD PTR [ebp-0x82c],ebx
   16470:	lea    eax,[ebp-0x82c]
   16476:	push   eax
   16477:	mov    ecx,DWORD PTR ds:0x725ac
   1647d:	call   0x15af4
   16482:	mov    eax,DWORD PTR [eax]
   16484:	cmp    eax,esi
   16486:	jne    0x1648c
   16488:	xor    ecx,ecx
   1648a:	jmp    0x1648f
   1648c:	mov    ecx,DWORD PTR [eax+0x8]
   1648f:	cmp    eax,esi
   16491:	jne    0x16497
   16493:	xor    eax,eax
   16495:	jmp    0x16499
   16497:	mov    eax,DWORD PTR [eax]
   16499:	push   ecx
   1649a:	push   eax
   1649b:	push   0x3
   1649d:	push   esi
   1649e:	lea    eax,[ebp-0x828]
   164a4:	push   eax
   164a5:	push   DWORD PTR [ebp-0x820]
   164ab:	call   0x11356
   164b0:	call   eax
   164b2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   164b9:	call   0x164c5
   164be:	jmp    0x1643a
   164c3:	xor    esi,esi
   164c5:	cmp    DWORD PTR [ebp-0x820],esi
   164cb:	je     0x164da
   164cd:	push   DWORD PTR [ebp-0x820]
   164d3:	call   0x114a6
   164d8:	call   eax
   164da:	ret    
   164db:	int3   
   164dc:	int3   
   164dd:	int3   
   164de:	int3   
   164df:	int3   
   164e0:	mov    edi,edi
   164e2:	push   ebp
   164e3:	mov    ebp,esp
   164e5:	sub    esp,0x10
   164e8:	call   0x19106
   164ed:	test   al,al
   164ef:	jne    0x164f9
   164f1:	mov    eax,DWORD PTR [ebp+0x8]
   164f4:	jmp    0x1658d
   164f9:	push   esi
   164fa:	mov    esi,DWORD PTR [ebp+0x8]
   164fd:	push   0xffffffff
   164ff:	push   esi
   16500:	lea    ecx,[ebp-0x8]
   16503:	call   0x12b42
   16508:	mov    ecx,DWORD PTR ds:0x73288
   1650e:	lea    eax,[ebp-0x8]
   16511:	push   eax
   16512:	lea    eax,[ebp+0x8]
   16515:	push   eax
   16516:	call   0x13b0a
   1651b:	mov    eax,DWORD PTR [ebp+0x8]
   1651e:	mov    ecx,DWORD PTR ds:0x73288
   16524:	cmp    eax,DWORD PTR [ecx+0x4]
   16527:	jne    0x16558
   16529:	lea    eax,[ebp-0x8]
   1652c:	push   eax
   1652d:	lea    ecx,[ebp-0x10]
   16530:	call   0x13342
   16535:	mov    ecx,DWORD PTR ds:0x73288
   1653b:	lea    eax,[ebp-0x10]
   1653e:	push   eax
   1653f:	lea    eax,[ebp-0x8]
   16542:	push   eax
   16543:	call   0x15b3a
   16548:	mov    ecx,eax
   1654a:	call   0x12aa6
   1654f:	push   DWORD PTR [ebp-0x10]
   16552:	call   0x11c4c
   16557:	pop    ecx
   16558:	mov    ecx,DWORD PTR ds:0x73288
   1655e:	lea    eax,[ebp-0x8]
   16561:	push   eax
   16562:	lea    eax,[ebp+0x8]
   16565:	push   eax
   16566:	call   0x13b0a
   1656b:	mov    eax,DWORD PTR [ebp+0x8]
   1656e:	mov    ecx,DWORD PTR ds:0x73288
   16574:	cmp    eax,DWORD PTR [ecx+0x4]
   16577:	je     0x1657c
   16579:	mov    esi,DWORD PTR [eax+0x14]
   1657c:	call   0x19122
   16581:	push   DWORD PTR [ebp-0x8]
   16584:	call   0x11c4c
   16589:	pop    ecx
   1658a:	mov    eax,esi
   1658c:	pop    esi
   1658d:	leave  
   1658e:	ret    0x4
   16591:	int3   
   16592:	int3   
   16593:	int3   
   16594:	int3   
   16595:	int3   
   16596:	mov    edi,edi
   16598:	push   ebp
   16599:	mov    ebp,esp
   1659b:	sub    esp,0x10
   1659e:	push   esi
   1659f:	call   0x19106
   165a4:	test   al,al
   165a6:	jne    0x165b0
   165a8:	mov    eax,DWORD PTR [ebp+0x8]
   165ab:	jmp    0x1665c
   165b0:	push   DWORD PTR [ebp+0xc]
   165b3:	lea    ecx,[ebp-0x8]
   165b6:	push   DWORD PTR [ebp+0x8]
   165b9:	call   0x13322
   165be:	mov    ecx,DWORD PTR ds:0x73288
   165c4:	lea    eax,[ebp-0x8]
   165c7:	push   eax
   165c8:	lea    eax,[ebp+0xc]
   165cb:	push   eax
   165cc:	call   0x13b0a
   165d1:	mov    esi,DWORD PTR [ebp+0xc]
   165d4:	mov    eax,ds:0x73288
   165d9:	cmp    esi,DWORD PTR [eax+0x4]
   165dc:	jne    0x16617
   165de:	push   ecx
   165df:	push   ecx
   165e0:	lea    eax,[ebp-0x8]
   165e3:	mov    ecx,esp
   165e5:	push   eax
   165e6:	call   0x13342
   165eb:	lea    eax,[ebp-0x10]
   165ee:	push   eax
   165ef:	call   0x136ac
   165f4:	mov    ecx,DWORD PTR ds:0x73288
   165fa:	lea    eax,[ebp-0x10]
   165fd:	push   eax
   165fe:	lea    eax,[ebp-0x8]
   16601:	push   eax
   16602:	call   0x15b3a
   16607:	mov    ecx,eax
   16609:	call   0x12aa6
   1660e:	push   DWORD PTR [ebp-0x10]
   16611:	call   0x11c4c
   16616:	pop    ecx
   16617:	mov    eax,DWORD PTR [ebp+0x10]
   1661a:	movzx  eax,BYTE PTR [eax]
   1661d:	cmp    eax,0x100
   16622:	jge    0x1663a
   16624:	mov    ecx,DWORD PTR ds:0x73288
   1662a:	lea    eax,[ebp-0x8]
   1662d:	push   eax
   1662e:	lea    eax,[ebp+0xc]
   16631:	push   eax
   16632:	call   0x13b0a
   16637:	mov    esi,DWORD PTR [ebp+0xc]
   1663a:	mov    eax,ds:0x73288
   1663f:	cmp    esi,DWORD PTR [eax+0x4]
   16642:	je     0x16649
   16644:	mov    esi,DWORD PTR [esi+0x14]
   16647:	jmp    0x1664c
   16649:	mov    esi,DWORD PTR [ebp+0x8]
   1664c:	call   0x19122
   16651:	push   DWORD PTR [ebp-0x8]
   16654:	call   0x11c4c
   16659:	pop    ecx
   1665a:	mov    eax,esi
   1665c:	pop    esi
   1665d:	leave  
   1665e:	ret    0xc
   16661:	int3   
   16662:	int3   
   16663:	int3   
   16664:	int3   
   16665:	int3   
   16666:	mov    edi,edi
   16668:	push   ebp
   16669:	mov    ebp,esp
   1666b:	sub    esp,0x10
   1666e:	push   esi
   1666f:	call   0x19106
   16674:	test   al,al
   16676:	jne    0x16680
   16678:	mov    eax,DWORD PTR [ebp+0x8]
   1667b:	jmp    0x1672c
   16680:	push   DWORD PTR [ebp+0xc]
   16683:	lea    ecx,[ebp-0x8]
   16686:	push   DWORD PTR [ebp+0x8]
   16689:	call   0x1326a
   1668e:	mov    ecx,DWORD PTR ds:0x7328c
   16694:	lea    eax,[ebp-0x8]
   16697:	push   eax
   16698:	lea    eax,[ebp+0xc]
   1669b:	push   eax
   1669c:	call   0x13760
   166a1:	mov    esi,DWORD PTR [ebp+0xc]
   166a4:	mov    eax,ds:0x7328c
   166a9:	cmp    esi,DWORD PTR [eax+0x4]
   166ac:	jne    0x166e7
   166ae:	push   ecx
   166af:	push   ecx
   166b0:	lea    eax,[ebp-0x8]
   166b3:	mov    ecx,esp
   166b5:	push   eax
   166b6:	call   0x1328a
   166bb:	lea    eax,[ebp-0x10]
   166be:	push   eax
   166bf:	call   0x132ac
   166c4:	mov    ecx,DWORD PTR ds:0x7328c
   166ca:	lea    eax,[ebp-0x10]
   166cd:	push   eax
   166ce:	lea    eax,[ebp-0x8]
   166d1:	push   eax
   166d2:	call   0x15a84
   166d7:	mov    ecx,eax
   166d9:	call   0x12926
   166de:	push   DWORD PTR [ebp-0x10]
   166e1:	call   0x11c4c
   166e6:	pop    ecx
   166e7:	mov    eax,DWORD PTR [ebp+0x10]
   166ea:	movzx  eax,BYTE PTR [eax]
   166ed:	cmp    eax,0x100
   166f2:	jge    0x1670a
   166f4:	mov    ecx,DWORD PTR ds:0x7328c
   166fa:	lea    eax,[ebp-0x8]
   166fd:	push   eax
   166fe:	lea    eax,[ebp+0xc]
   16701:	push   eax
   16702:	call   0x13760
   16707:	mov    esi,DWORD PTR [ebp+0xc]
   1670a:	mov    eax,ds:0x7328c
   1670f:	cmp    esi,DWORD PTR [eax+0x4]
   16712:	je     0x16719
   16714:	mov    esi,DWORD PTR [esi+0x14]
   16717:	jmp    0x1671c
   16719:	mov    esi,DWORD PTR [ebp+0x8]
   1671c:	call   0x19122
   16721:	push   DWORD PTR [ebp-0x8]
   16724:	call   0x11c4c
   16729:	pop    ecx
   1672a:	mov    eax,esi
   1672c:	pop    esi
   1672d:	leave  
   1672e:	ret    0xc
   16731:	int3   
   16732:	int3   
   16733:	int3   
   16734:	int3   
   16735:	int3   
   16736:	mov    edi,edi
   16738:	push   ebp
   16739:	mov    ebp,esp
   1673b:	sub    esp,0x838
   16741:	mov    eax,ds:0x72518
   16746:	xor    eax,ebp
   16748:	mov    DWORD PTR [ebp-0x4],eax
   1674b:	mov    eax,DWORD PTR [ebp+0x8]
   1674e:	push   ebx
   1674f:	push   esi
   16750:	push   edi
   16751:	mov    DWORD PTR [ebp-0x808],eax
   16757:	xor    eax,eax
   16759:	push   0x7fe
   1675e:	mov    WORD PTR [ebp-0x804],ax
   16765:	xor    ebx,ebx
   16767:	lea    eax,[ebp-0x802]
   1676d:	push   ebx
   1676e:	push   eax
   1676f:	call   0x1b3e8
   16774:	mov    eax,0x726b0
   16779:	add    esp,0xc
   1677c:	mov    edx,eax
   1677e:	mov    cx,WORD PTR [eax]
   16781:	inc    eax
   16782:	inc    eax
   16783:	cmp    cx,bx
   16786:	jne    0x1677e
   16788:	sub    eax,edx
   1678a:	lea    edi,[ebp-0x804]
   16790:	dec    edi
   16791:	dec    edi
   16792:	mov    cx,WORD PTR [edi+0x2]
   16796:	inc    edi
   16797:	inc    edi
   16798:	cmp    cx,bx
   1679b:	jne    0x16792
   1679d:	mov    ecx,eax
   1679f:	shr    ecx,0x2
   167a2:	mov    esi,edx
   167a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   167a6:	mov    ecx,eax
   167a8:	mov    eax,DWORD PTR [ebp-0x808]
   167ae:	and    ecx,0x3
   167b1:	add    eax,0x400
   167b6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   167b8:	mov    edx,eax
   167ba:	mov    cx,WORD PTR [eax]
   167bd:	inc    eax
   167be:	inc    eax
   167bf:	cmp    cx,bx
   167c2:	jne    0x167ba
   167c4:	sub    eax,edx
   167c6:	lea    edi,[ebp-0x804]
   167cc:	dec    edi
   167cd:	dec    edi
   167ce:	mov    cx,WORD PTR [edi+0x2]
   167d2:	inc    edi
   167d3:	inc    edi
   167d4:	cmp    cx,bx
   167d7:	jne    0x167ce
   167d9:	mov    ecx,eax
   167db:	shr    ecx,0x2
   167de:	mov    esi,edx
   167e0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   167e2:	mov    ecx,eax
   167e4:	and    ecx,0x3
   167e7:	lea    eax,[ebp-0x804]
   167ed:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   167ef:	mov    DWORD PTR [ebp-0x818],eax
   167f5:	lea    ecx,[eax+0x2]
   167f8:	mov    dx,WORD PTR [eax]
   167fb:	inc    eax
   167fc:	inc    eax
   167fd:	cmp    dx,bx
   16800:	jne    0x167f8
   16802:	sub    eax,ecx
   16804:	sar    eax,1
   16806:	add    eax,eax
   16808:	mov    WORD PTR [ebp-0x81a],ax
   1680f:	mov    WORD PTR [ebp-0x81c],ax
   16816:	lea    eax,[ebp-0x81c]
   1681c:	mov    DWORD PTR [ebp-0x82c],eax
   16822:	lea    eax,[ebp-0x838]
   16828:	push   eax
   16829:	xor    edi,edi
   1682b:	inc    edi
   1682c:	push   edi
   1682d:	push   ebx
   1682e:	push   ebx
   1682f:	lea    eax,[ebp-0x834]
   16835:	push   eax
   16836:	push   0xf003f
   1683b:	lea    eax,[ebp-0x80c]
   16841:	push   eax
   16842:	mov    DWORD PTR [ebp-0x834],0x18
   1684c:	mov    DWORD PTR [ebp-0x830],ebx
   16852:	mov    DWORD PTR [ebp-0x828],0x40
   1685c:	mov    DWORD PTR [ebp-0x824],ebx
   16862:	mov    DWORD PTR [ebp-0x820],ebx
   16868:	call   0x11674
   1686d:	call   eax
   1686f:	test   eax,eax
   16871:	jl     0x16a01
   16877:	push   0x1c050
   1687c:	push   0x9
   1687e:	push   0x1c03c
   16883:	call   0x16596
   16888:	mov    DWORD PTR [ebp-0x810],eax
   1688e:	lea    edx,[eax+0x2]
   16891:	mov    cx,WORD PTR [eax]
   16894:	inc    eax
   16895:	inc    eax
   16896:	cmp    cx,bx
   16899:	jne    0x16891
   1689b:	sub    eax,edx
   1689d:	sar    eax,1
   1689f:	add    eax,eax
   168a1:	mov    WORD PTR [ebp-0x812],ax
   168a8:	mov    WORD PTR [ebp-0x814],ax
   168af:	mov    eax,DWORD PTR [ebp-0x808]
   168b5:	lea    ecx,[eax+0x2]
   168b8:	mov    dx,WORD PTR [eax]
   168bb:	inc    eax
   168bc:	inc    eax
   168bd:	cmp    dx,bx
   168c0:	jne    0x168b8
   168c2:	sub    eax,ecx
   168c4:	sar    eax,1
   168c6:	inc    eax
   168c7:	movzx  eax,ax
   168ca:	add    eax,eax
   168cc:	push   eax
   168cd:	push   DWORD PTR [ebp-0x808]
   168d3:	lea    eax,[ebp-0x814]
   168d9:	push   edi
   168da:	push   ebx
   168db:	push   eax
   168dc:	push   DWORD PTR [ebp-0x80c]
   168e2:	call   0x11356
   168e7:	call   eax
   168e9:	test   eax,eax
   168eb:	jl     0x16a01
   168f1:	push   0x1c01a
   168f6:	push   0x5
   168f8:	push   0x1c00e
   168fd:	mov    DWORD PTR [ebp-0x808],0x3
   16907:	call   0x16596
   1690c:	mov    DWORD PTR [ebp-0x810],eax
   16912:	lea    edx,[eax+0x2]
   16915:	mov    cx,WORD PTR [eax]
   16918:	inc    eax
   16919:	inc    eax
   1691a:	cmp    cx,bx
   1691d:	jne    0x16915
   1691f:	sub    eax,edx
   16921:	push   0x4
   16923:	sar    eax,1
   16925:	pop    esi
   16926:	add    eax,eax
   16928:	push   esi
   16929:	mov    WORD PTR [ebp-0x812],ax
   16930:	mov    WORD PTR [ebp-0x814],ax
   16937:	lea    eax,[ebp-0x808]
   1693d:	push   eax
   1693e:	push   esi
   1693f:	push   ebx
   16940:	lea    eax,[ebp-0x814]
   16946:	push   eax
   16947:	push   DWORD PTR [ebp-0x80c]
   1694d:	call   0x11356
   16952:	call   eax
   16954:	test   eax,eax
   16956:	jl     0x16a01
   1695c:	push   0x1bfd0
   16961:	push   esi
   16962:	push   0x1bfc6
   16967:	mov    DWORD PTR [ebp-0x808],edi
   1696d:	call   0x16596
   16972:	mov    DWORD PTR [ebp-0x810],eax
   16978:	lea    ecx,[eax+0x2]
   1697b:	mov    dx,WORD PTR [eax]
   1697e:	inc    eax
   1697f:	inc    eax
   16980:	cmp    dx,bx
   16983:	jne    0x1697b
   16985:	sub    eax,ecx
   16987:	sar    eax,1
   16989:	add    eax,eax
   1698b:	push   esi
   1698c:	mov    WORD PTR [ebp-0x812],ax
   16993:	mov    WORD PTR [ebp-0x814],ax
   1699a:	lea    eax,[ebp-0x808]
   169a0:	push   eax
   169a1:	push   esi
   169a2:	push   ebx
   169a3:	lea    eax,[ebp-0x814]
   169a9:	push   eax
   169aa:	push   DWORD PTR [ebp-0x80c]
   169b0:	call   0x11356
   169b5:	call   eax
   169b7:	test   eax,eax
   169b9:	jl     0x16a01
   169bb:	lea    eax,[ebp-0x81c]
   169c1:	push   eax
   169c2:	call   0x1164a
   169c7:	call   eax
   169c9:	test   eax,eax
   169cb:	jl     0x16a01
   169cd:	lea    eax,[ebp-0x804]
   169d3:	push   eax
   169d4:	push   DWORD PTR [ebp-0x80c]
   169da:	call   0x1206a
   169df:	test   al,al
   169e1:	je     0x169f4
   169e3:	push   DWORD PTR [ebp-0x80c]
   169e9:	call   0x1132c
   169ee:	call   eax
   169f0:	test   eax,eax
   169f2:	jl     0x16a01
   169f4:	push   DWORD PTR [ebp-0x80c]
   169fa:	call   0x114a6
   169ff:	call   eax
   16a01:	mov    ecx,DWORD PTR [ebp-0x4]
   16a04:	pop    edi
   16a05:	pop    esi
   16a06:	xor    ecx,ebp
   16a08:	pop    ebx
   16a09:	call   0x1b38f
   16a0e:	leave  
   16a0f:	ret    0x4
   16a12:	int3   
   16a13:	int3   
   16a14:	int3   
   16a15:	int3   
   16a16:	int3   
   16a17:	int3   
   16a18:	mov    edi,edi
   16a1a:	push   ebp
   16a1b:	mov    ebp,esp
   16a1d:	sub    esp,0x44
   16a20:	mov    eax,DWORD PTR [ebp+0xc]
   16a23:	mov    eax,DWORD PTR [eax]
   16a25:	push   esi
   16a26:	mov    DWORD PTR [ebp-0x2c],eax
   16a29:	lea    eax,[ebp-0x2c]
   16a2c:	push   eax
   16a2d:	lea    eax,[ebp-0x44]
   16a30:	push   eax
   16a31:	xor    esi,esi
   16a33:	push   0x1f0fff
   16a38:	lea    eax,[ebp-0x10]
   16a3b:	push   eax
   16a3c:	mov    DWORD PTR [ebp-0x44],0x18
   16a43:	mov    DWORD PTR [ebp-0x40],esi
   16a46:	mov    DWORD PTR [ebp-0x38],0x200
   16a4d:	mov    DWORD PTR [ebp-0x3c],esi
   16a50:	mov    DWORD PTR [ebp-0x34],esi
   16a53:	mov    DWORD PTR [ebp-0x30],esi
   16a56:	mov    DWORD PTR [ebp-0x28],esi
   16a59:	mov    DWORD PTR [ebp-0x10],esi
   16a5c:	call   0x11188
   16a61:	call   eax
   16a63:	test   eax,eax
   16a65:	jl     0x16cd9
   16a6b:	push   ebx
   16a6c:	push   edi
   16a6d:	push   0x40
   16a6f:	mov    edi,0x1000
   16a74:	push   edi
   16a75:	lea    eax,[ebp-0x14]
   16a78:	push   eax
   16a79:	push   esi
   16a7a:	lea    eax,[ebp-0x8]
   16a7d:	push   eax
   16a7e:	push   DWORD PTR [ebp-0x10]
   16a81:	mov    ebx,0x400
   16a86:	mov    DWORD PTR [ebp-0x8],esi
   16a89:	mov    DWORD PTR [ebp-0x14],ebx
   16a8c:	call   0x111b2
   16a91:	call   eax
   16a93:	test   eax,eax
   16a95:	jl     0x16aa0
   16a97:	mov    eax,DWORD PTR [ebp-0x8]
   16a9a:	mov    ecx,DWORD PTR [ebp+0xc]
   16a9d:	mov    DWORD PTR [ecx+0x8],eax
   16aa0:	push   0x4
   16aa2:	push   edi
   16aa3:	lea    eax,[ebp-0x14]
   16aa6:	push   eax
   16aa7:	push   esi
   16aa8:	lea    eax,[ebp-0x18]
   16aab:	push   eax
   16aac:	push   DWORD PTR [ebp-0x10]
   16aaf:	mov    DWORD PTR [ebp-0x18],esi
   16ab2:	mov    DWORD PTR [ebp-0x14],ebx
   16ab5:	call   0x111b2
   16aba:	call   eax
   16abc:	test   eax,eax
   16abe:	jl     0x16ac9
   16ac0:	mov    eax,DWORD PTR [ebp-0x18]
   16ac3:	mov    ecx,DWORD PTR [ebp+0xc]
   16ac6:	mov    DWORD PTR [ecx+0xc],eax
   16ac9:	lea    eax,[ebp-0x1c]
   16acc:	push   eax
   16acd:	push   DWORD PTR [ebp-0x2c]
   16ad0:	call   0x111dc
   16ad5:	call   eax
   16ad7:	test   eax,eax
   16ad9:	jl     0x16cd7
   16adf:	push   DWORD PTR [ebp-0x1c]
   16ae2:	call   0x116f2
   16ae7:	call   eax
   16ae9:	mov    ebx,DWORD PTR [ebp-0x8]
   16aec:	mov    DWORD PTR [ebp-0x4],esi
   16aef:	cmp    ebx,esi
   16af1:	je     0x16cbd
   16af7:	mov    edi,DWORD PTR [ebp-0x18]
   16afa:	push   0x40
   16afc:	push   0x72408
   16b01:	push   edi
   16b02:	mov    DWORD PTR [ebp-0xc],edi
   16b05:	call   0x187ce
   16b0a:	push   0x1c07e
   16b0f:	push   0x4
   16b11:	push   0x1c074
   16b16:	call   0x16596
   16b1b:	mov    edx,eax
   16b1d:	mov    cx,WORD PTR [eax]
   16b20:	inc    eax
   16b21:	inc    eax
   16b22:	cmp    cx,si
   16b25:	jne    0x16b1d
   16b27:	sub    eax,edx
   16b29:	dec    edi
   16b2a:	dec    edi
   16b2b:	mov    cx,WORD PTR [edi+0x2]
   16b2f:	inc    edi
   16b30:	inc    edi
   16b31:	cmp    cx,si
   16b34:	jne    0x16b2b
   16b36:	mov    ecx,eax
   16b38:	shr    ecx,0x2
   16b3b:	mov    esi,edx
   16b3d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16b3f:	mov    ecx,eax
   16b41:	push   0x60
   16b43:	and    ecx,0x3
   16b46:	push   ebx
   16b47:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16b49:	mov    DWORD PTR [ebp-0x20],ebx
   16b4c:	call   0x18780
   16b51:	push   0x68
   16b53:	push   eax
   16b54:	call   0x18780
   16b59:	push   DWORD PTR [ebp-0xc]
   16b5c:	push   eax
   16b5d:	call   0x18798
   16b62:	push   0xb8
   16b67:	push   eax
   16b68:	call   0x18780
   16b6d:	push   DWORD PTR ds:0x72f58
   16b73:	push   eax
   16b74:	call   0x18798
   16b79:	push   0xc00b
   16b7e:	push   eax
   16b7f:	call   0x187b2
   16b84:	push   0x74
   16b86:	push   eax
   16b87:	call   0x18780
   16b8c:	push   0x2
   16b8e:	push   eax
   16b8f:	call   0x18780
   16b94:	push   0xd0ff
   16b99:	push   eax
   16b9a:	call   0x187b2
   16b9f:	push   0x61
   16ba1:	push   eax
   16ba2:	call   0x18780
   16ba7:	mov    ebx,DWORD PTR [ebp+0x8]
   16baa:	mov    edi,eax
   16bac:	mov    esi,ebx
   16bae:	push   0x0
   16bb0:	push   esi
   16bb1:	push   edi
   16bb2:	call   0x18f34
   16bb7:	mov    ecx,eax
   16bb9:	sub    ecx,esi
   16bbb:	add    DWORD PTR [ebp-0x4],ecx
   16bbe:	add    edi,ecx
   16bc0:	cmp    DWORD PTR [ebp-0x4],0x5
   16bc4:	mov    esi,eax
   16bc6:	jb     0x16bae
   16bc8:	mov    eax,DWORD PTR [ebp-0x4]
   16bcb:	push   edi
   16bcc:	add    eax,ebx
   16bce:	push   eax
   16bcf:	call   0x187f6
   16bd4:	mov    eax,DWORD PTR [ebp-0x8]
   16bd7:	test   eax,eax
   16bd9:	je     0x16cbd
   16bdf:	add    eax,0x400
   16be4:	lea    ecx,[eax-0x10]
   16be7:	mov    DWORD PTR [ebp-0x24],ecx
   16bea:	mov    ecx,DWORD PTR [ebp-0x4]
   16bed:	lea    esi,[eax-0xc]
   16bf0:	push   esi
   16bf1:	lea    edi,[eax-0x4]
   16bf4:	lea    ebx,[eax-0x8]
   16bf7:	shr    ecx,0x2
   16bfa:	lea    ecx,[ecx*4+0x14]
   16c01:	push   0x40
   16c03:	sub    eax,ecx
   16c05:	push   ebx
   16c06:	mov    DWORD PTR [ebp-0xc],eax
   16c09:	mov    eax,DWORD PTR [ebp+0x8]
   16c0c:	mov    DWORD PTR [edi],eax
   16c0e:	push   edi
   16c0f:	mov    DWORD PTR [ebx],0x5
   16c15:	and    DWORD PTR [esi],0x0
   16c18:	push   0xffffffff
   16c1a:	call   DWORD PTR ds:0x72edc
   16c20:	test   eax,eax
   16c22:	jl     0x16c87
   16c24:	push   DWORD PTR [ebp-0x4]
   16c27:	push   0x90
   16c2c:	push   DWORD PTR [ebp-0xc]
   16c2f:	call   0x1b3e8
   16c34:	mov    eax,DWORD PTR [ebp-0x20]
   16c37:	sub    eax,DWORD PTR [ebp+0x8]
   16c3a:	add    esp,0xc
   16c3d:	sub    eax,0x5
   16c40:	push   eax
   16c41:	mov    eax,DWORD PTR [ebp-0xc]
   16c44:	inc    eax
   16c45:	push   eax
   16c46:	call   0x18798
   16c4b:	push   0xe9
   16c50:	push   DWORD PTR [ebp-0xc]
   16c53:	call   0x18780
   16c58:	mov    eax,DWORD PTR [ebp-0x24]
   16c5b:	and    DWORD PTR [eax],0x0
   16c5e:	push   eax
   16c5f:	push   DWORD PTR [ebp-0x4]
   16c62:	push   DWORD PTR [ebp-0xc]
   16c65:	push   DWORD PTR [ebp+0x8]
   16c68:	push   0xffffffff
   16c6a:	call   DWORD PTR ds:0x72ed0
   16c70:	mov    eax,DWORD PTR [ebp+0xc]
   16c73:	mov    BYTE PTR [eax+0x10],0x1
   16c77:	lea    eax,[ebp-0x20]
   16c7a:	push   eax
   16c7b:	push   DWORD PTR [esi]
   16c7d:	push   ebx
   16c7e:	push   edi
   16c7f:	push   0xffffffff
   16c81:	call   DWORD PTR ds:0x72edc
   16c87:	mov    esi,DWORD PTR [ebp-0x8]
   16c8a:	test   esi,esi
   16c8c:	je     0x16cbd
   16c8e:	lea    eax,[esi+0x400]
   16c94:	lea    ecx,[eax-0x4]
   16c97:	lea    edx,[eax-0x8]
   16c9a:	add    eax,0xfffffff4
   16c9d:	push   eax
   16c9e:	push   0x20
   16ca0:	push   edx
   16ca1:	mov    DWORD PTR [ecx],esi
   16ca3:	push   ecx
   16ca4:	mov    DWORD PTR [edx],0x400
   16caa:	and    DWORD PTR [eax],0x0
   16cad:	push   0xffffffff
   16caf:	call   DWORD PTR ds:0x72edc
   16cb5:	test   eax,eax
   16cb7:	jge    0x16cbd
   16cb9:	and    DWORD PTR [ebp-0x8],0x0
   16cbd:	call   0x116c8
   16cc2:	call   eax
   16cc4:	mov    ecx,DWORD PTR [ebp-0x1c]
   16cc7:	call   DWORD PTR ds:0x1ca50
   16ccd:	push   DWORD PTR [ebp-0x10]
   16cd0:	call   0x114a6
   16cd5:	call   eax
   16cd7:	pop    edi
   16cd8:	pop    ebx
   16cd9:	pop    esi
   16cda:	leave  
   16cdb:	ret    0x8
   16cde:	int3   
   16cdf:	int3   
   16ce0:	int3   
   16ce1:	int3   
   16ce2:	int3   
   16ce3:	int3   
   16ce4:	mov    edi,edi
   16ce6:	push   ebp
   16ce7:	mov    ebp,esp
   16ce9:	cmp    DWORD PTR ds:0x72f58,0x0
   16cf0:	push   esi
   16cf1:	mov    esi,DWORD PTR [ebp+0x10]
   16cf4:	jne    0x16dbf
   16cfa:	push   0x1c22c
   16cff:	push   0xc
   16d01:	push   0x1c212
   16d06:	call   0x16596
   16d0b:	push   eax
   16d0c:	push   DWORD PTR [ebp+0x8]
   16d0f:	call   0x11d74
   16d14:	test   al,al
   16d16:	je     0x16dbf
   16d1c:	mov    eax,DWORD PTR [esi+0x4]
   16d1f:	push   0x1c1f0
   16d24:	push   0xc
   16d26:	push   0x1c1e2
   16d2b:	mov    ds:0x72f50,eax
   16d30:	call   0x16666
   16d35:	push   eax
   16d36:	push   DWORD PTR [esi+0x4]
   16d39:	call   0x122ce
   16d3e:	push   0x1c1a8
   16d43:	push   0xc
   16d45:	push   0x1c19a
   16d4a:	mov    ds:0x72f58,eax
   16d4f:	call   0x16666
   16d54:	push   eax
   16d55:	push   DWORD PTR [esi+0x4]
   16d58:	call   0x122ce
   16d5d:	push   0x1c15e
   16d62:	push   0xc
   16d64:	push   0x1c150
   16d69:	mov    ds:0x72f5c,eax
   16d6e:	call   0x16666
   16d73:	push   eax
   16d74:	push   DWORD PTR [esi+0x4]
   16d77:	call   0x122ce
   16d7c:	push   0x1c114
   16d81:	push   0x5
   16d83:	push   0x1c10e
   16d88:	mov    ds:0x72f60,eax
   16d8d:	call   0x16666
   16d92:	push   eax
   16d93:	push   DWORD PTR [esi+0x4]
   16d96:	call   0x122ce
   16d9b:	push   0x1c0ec
   16da0:	push   0x4
   16da2:	push   0x1c0e6
   16da7:	mov    ds:0x72f64,eax
   16dac:	call   0x16666
   16db1:	push   eax
   16db2:	push   DWORD PTR [esi+0x4]
   16db5:	call   0x122ce
   16dba:	mov    ds:0x72f68,eax
   16dbf:	cmp    DWORD PTR ds:0x72f54,0x0
   16dc6:	jne    0x16dee
   16dc8:	push   0x1c0b4
   16dcd:	push   0x9
   16dcf:	push   0x1c0a0
   16dd4:	call   0x16596
   16dd9:	push   eax
   16dda:	push   DWORD PTR [ebp+0x8]
   16ddd:	call   0x11d74
   16de2:	test   al,al
   16de4:	je     0x16dee
   16de6:	mov    eax,DWORD PTR [esi+0x4]
   16de9:	mov    ds:0x72f54,eax
   16dee:	pop    esi
   16def:	pop    ebp
   16df0:	ret    0xc
   16df3:	int3   
   16df4:	int3   
   16df5:	int3   
   16df6:	int3   
   16df7:	int3   
   16df8:	mov    edi,edi
   16dfa:	push   ebp
   16dfb:	mov    ebp,esp
   16dfd:	sub    esp,0x4c
   16e00:	push   ebx
   16e01:	push   esi
   16e02:	push   edi
   16e03:	push   DWORD PTR [ebp+0xc]
   16e06:	push   DWORD PTR [ebp+0x8]
   16e09:	call   DWORD PTR ds:0x72ee4
   16e0f:	mov    DWORD PTR [ebp-0x8],eax
   16e12:	xor    eax,eax
   16e14:	xor    ebx,ebx
   16e16:	mov    DWORD PTR [ebp-0x30],ebx
   16e19:	lea    edi,[ebp-0x2c]
   16e1c:	stos   DWORD PTR es:[edi],eax
   16e1d:	stos   DWORD PTR es:[edi],eax
   16e1e:	stos   DWORD PTR es:[edi],eax
   16e1f:	stos   DWORD PTR es:[edi],eax
   16e20:	xor    eax,eax
   16e22:	mov    DWORD PTR [ebp-0x1c],ebx
   16e25:	lea    edi,[ebp-0x18]
   16e28:	stos   DWORD PTR es:[edi],eax
   16e29:	stos   DWORD PTR es:[edi],eax
   16e2a:	stos   DWORD PTR es:[edi],eax
   16e2b:	stos   DWORD PTR es:[edi],eax
   16e2c:	lea    eax,[ebp-0x30]
   16e2f:	push   eax
   16e30:	push   ebx
   16e31:	call   0x11e02
   16e36:	mov    BYTE PTR [ebp+0xf],al
   16e39:	lea    eax,[ebp-0x1c]
   16e3c:	push   eax
   16e3d:	push   0x1
   16e3f:	call   0x11e02
   16e44:	mov    BYTE PTR [ebp-0x1],al
   16e47:	cmp    BYTE PTR [ebp+0xf],bl
   16e4a:	je     0x16eab
   16e4c:	mov    esi,DWORD PTR [ebp-0x30]
   16e4f:	cmp    esi,ebx
   16e51:	je     0x16eab
   16e53:	push   0x6
   16e55:	pop    ecx
   16e56:	push   ebx
   16e57:	xor    eax,eax
   16e59:	mov    DWORD PTR [ebp-0x4c],ebx
   16e5c:	lea    edi,[ebp-0x48]
   16e5f:	push   0x1c
   16e61:	rep stos DWORD PTR es:[edi],eax
   16e63:	lea    eax,[ebp-0x4c]
   16e66:	push   eax
   16e67:	push   ebx
   16e68:	push   DWORD PTR [ebp+0x8]
   16e6b:	call   0x1147c
   16e70:	call   eax
   16e72:	cmp    DWORD PTR [ebp-0x44],esi
   16e75:	jne    0x16eab
   16e77:	push   ebx
   16e78:	push   0x4
   16e7a:	lea    eax,[ebp+0xc]
   16e7d:	push   eax
   16e7e:	push   0x9
   16e80:	push   DWORD PTR [ebp+0x8]
   16e83:	mov    DWORD PTR [ebp+0xc],ebx
   16e86:	call   0x1147c
   16e8b:	call   eax
   16e8d:	test   eax,eax
   16e8f:	jge    0x16e94
   16e91:	mov    DWORD PTR [ebp+0xc],ebx
   16e94:	cmp    DWORD PTR [ebp+0xc],ebx
   16e97:	je     0x16eab
   16e99:	lea    eax,[ebp-0x30]
   16e9c:	push   eax
   16e9d:	push   DWORD PTR [ebp+0xc]
   16ea0:	call   0x16a18
   16ea5:	push   ebx
   16ea6:	call   0x11e9c
   16eab:	cmp    BYTE PTR [ebp-0x1],bl
   16eae:	je     0x16f19
   16eb0:	mov    esi,DWORD PTR [ebp-0x1c]
   16eb3:	cmp    esi,ebx
   16eb5:	je     0x16f19
   16eb7:	cmp    BYTE PTR [ebp-0xc],bl
   16eba:	jne    0x16f19
   16ebc:	push   0x6
   16ebe:	pop    ecx
   16ebf:	push   ebx
   16ec0:	xor    eax,eax
   16ec2:	mov    DWORD PTR [ebp-0x4c],ebx
   16ec5:	lea    edi,[ebp-0x48]
   16ec8:	push   0x1c
   16eca:	rep stos DWORD PTR es:[edi],eax
   16ecc:	lea    eax,[ebp-0x4c]
   16ecf:	push   eax
   16ed0:	push   ebx
   16ed1:	push   DWORD PTR [ebp+0x8]
   16ed4:	call   0x1147c
   16ed9:	call   eax
   16edb:	cmp    DWORD PTR [ebp-0x44],esi
   16ede:	jne    0x16f19
   16ee0:	push   ebx
   16ee1:	push   0x4
   16ee3:	lea    eax,[ebp+0xc]
   16ee6:	push   eax
   16ee7:	push   0x9
   16ee9:	push   DWORD PTR [ebp+0x8]
   16eec:	mov    DWORD PTR [ebp+0xc],ebx
   16eef:	call   0x1147c
   16ef4:	call   eax
   16ef6:	test   eax,eax
   16ef8:	jge    0x16efd
   16efa:	mov    DWORD PTR [ebp+0xc],ebx
   16efd:	cmp    DWORD PTR [ebp+0xc],ebx
   16f00:	je     0x16f19
   16f02:	lea    eax,[ebp-0x1c]
   16f05:	push   eax
   16f06:	push   DWORD PTR [ebp+0xc]
   16f09:	call   0x123da
   16f0e:	lea    eax,[ebp-0x1c]
   16f11:	push   eax
   16f12:	push   0x1
   16f14:	call   0x11e52
   16f19:	mov    eax,DWORD PTR [ebp-0x8]
   16f1c:	pop    edi
   16f1d:	pop    esi
   16f1e:	pop    ebx
   16f1f:	leave  
   16f20:	ret    0x8
   16f23:	int3   
   16f24:	int3   
   16f25:	int3   
   16f26:	int3   
   16f27:	int3   
   16f28:	push   0x2c
   16f2a:	push   0x721c8
   16f2f:	call   0x1b424
   16f34:	xor    edi,edi
   16f36:	mov    DWORD PTR [ebp-0x24],edi
   16f39:	mov    ebx,DWORD PTR [ebp+0xc]
   16f3c:	mov    DWORD PTR [ebx+0x18],edi
   16f3f:	mov    DWORD PTR [ebx+0x1c],edi
   16f42:	mov    eax,DWORD PTR [ebx+0x60]
   16f45:	cmp    BYTE PTR [eax],0xe
   16f48:	jne    0x17378
   16f4e:	mov    eax,DWORD PTR [eax+0xc]
   16f51:	mov    DWORD PTR [ebx+0x1c],0x84c
   16f58:	mov    ecx,0x22c05c
   16f5d:	cmp    eax,ecx
   16f5f:	ja     0x17268
   16f65:	je     0x17250
   16f6b:	add    ecx,0xffffffd8
   16f6e:	cmp    eax,ecx
   16f70:	ja     0x17080
   16f76:	je     0x17063
   16f7c:	sub    eax,0x22c020
   16f81:	je     0x1702d
   16f87:	push   0x4
   16f89:	pop    esi
   16f8a:	sub    eax,esi
   16f8c:	je     0x16ff7
   16f8e:	sub    eax,esi
   16f90:	je     0x16fdc
   16f92:	sub    eax,esi
   16f94:	je     0x16fcf
   16f96:	sub    eax,esi
   16f98:	jne    0x1730c
   16f9e:	mov    esi,DWORD PTR [ebx+0xc]
   16fa1:	mov    eax,DWORD PTR [esi]
   16fa3:	add    eax,0x20
   16fa6:	mov    DWORD PTR [ebx+0x1c],eax
   16fa9:	push   0xffffffff
   16fab:	lea    eax,[esi+0x20]
   16fae:	push   eax
   16faf:	lea    ecx,[ebp-0x34]
   16fb2:	call   0x12a48
   16fb7:	push   esi
   16fb8:	lea    eax,[ebp-0x34]
   16fbb:	push   eax
   16fbc:	call   0x14792
   16fc1:	push   DWORD PTR [ebp-0x34]
   16fc4:	call   0x11c4c
   16fc9:	pop    ecx
   16fca:	jmp    0x17378
   16fcf:	push   DWORD PTR [ebx+0xc]
   16fd2:	call   0x15cd6
   16fd7:	jmp    0x17375
   16fdc:	mov    ecx,DWORD PTR ds:0x72ed8
   16fe2:	call   0x15500
   16fe7:	mov    ecx,DWORD PTR ds:0x725ac
   16fed:	call   0x159a8
   16ff2:	jmp    0x17378
   16ff7:	mov    eax,DWORD PTR [ebx+0xc]
   16ffa:	mov    DWORD PTR [ebx+0x1c],0x10
   17001:	mov    ecx,DWORD PTR [eax]
   17003:	cmp    ecx,edi
   17005:	jl     0x17378
   1700b:	cmp    ecx,0x6
   1700e:	jge    0x17378
   17014:	mov    edx,DWORD PTR [eax+0x8]
   17017:	mov    DWORD PTR [ecx*8+0x72f20],edx
   1701e:	mov    eax,DWORD PTR [eax+0xc]
   17021:	mov    DWORD PTR [ecx*8+0x72f24],eax
   17028:	jmp    0x17378
   1702d:	mov    eax,DWORD PTR [ebx+0xc]
   17030:	mov    DWORD PTR [ebx+0x1c],0x10
   17037:	mov    ecx,DWORD PTR [eax]
   17039:	cmp    ecx,edi
   1703b:	jl     0x17378
   17041:	cmp    ecx,0x6
   17044:	jge    0x17378
   1704a:	mov    edx,DWORD PTR [ecx*8+0x72f20]
   17051:	mov    DWORD PTR [eax+0x8],edx
   17054:	mov    ecx,DWORD PTR [ecx*8+0x72f24]
   1705b:	mov    DWORD PTR [eax+0xc],ecx
   1705e:	jmp    0x17378
   17063:	mov    esi,DWORD PTR [ebx+0xc]
   17066:	push   esi
   17067:	call   0x15ef0
   1706c:	cmp    DWORD PTR [esi+0x4],0x2
   17070:	jne    0x17375
   17076:	call   0x162e4
   1707b:	jmp    0x17375
   17080:	sub    eax,0x22c038
   17085:	je     0x17237
   1708b:	push   0x4
   1708d:	pop    esi
   1708e:	sub    eax,esi
   17090:	je     0x171b3
   17096:	sub    eax,0x10
   17099:	je     0x171a9
   1709f:	sub    eax,esi
   170a1:	jne    0x1730c
   170a7:	mov    DWORD PTR [ebx+0x1c],edi
   170aa:	mov    esi,DWORD PTR [ebx+0xc]
   170ad:	mov    DWORD PTR [ebp-0x20],esi
   170b0:	push   0xffffffff
   170b2:	push   0x1b838
   170b7:	lea    ecx,[ebp-0x2c]
   170ba:	call   0x12a48
   170bf:	xor    edi,edi
   170c1:	inc    edi
   170c2:	mov    DWORD PTR [esi+0x8],edi
   170c5:	xor    eax,eax
   170c7:	push   eax
   170c8:	push   eax
   170c9:	push   eax
   170ca:	push   eax
   170cb:	push   0x72550
   170d0:	call   0x11968
   170d5:	call   eax
   170d7:	test   eax,eax
   170d9:	jge    0x170e3
   170db:	push   DWORD PTR [ebp-0x2c]
   170de:	jmp    0x16fc4
   170e3:	and    DWORD PTR [ebp-0x4],0x0
   170e7:	mov    DWORD PTR [ebp-0x4],edi
   170ea:	mov    eax,DWORD PTR [esi]
   170ec:	add    eax,0x20
   170ef:	mov    DWORD PTR [ebx+0x1c],eax
   170f2:	mov    eax,ds:0x72ed8
   170f7:	mov    ebx,DWORD PTR [eax+0x4]
   170fa:	mov    eax,DWORD PTR [ebx]
   170fc:	mov    DWORD PTR [ebp+0xc],eax
   170ff:	and    DWORD PTR [ebp-0x1c],0x0
   17103:	mov    edi,DWORD PTR [esi+0x20]
   17106:	cmp    DWORD PTR [ebp-0x1c],edi
   17109:	jge    0x1711d
   1710b:	cmp    DWORD PTR [ebp+0xc],ebx
   1710e:	je     0x1711d
   17110:	lea    ecx,[ebp+0xc]
   17113:	call   0x132ec
   17118:	inc    DWORD PTR [ebp-0x1c]
   1711b:	jmp    0x17106
   1711d:	mov    eax,DWORD PTR [ebp+0xc]
   17120:	cmp    eax,ebx
   17122:	je     0x17136
   17124:	and    DWORD PTR [esi+0x8],0x0
   17128:	add    eax,0x10
   1712b:	push   eax
   1712c:	lea    ecx,[ebp-0x2c]
   1712f:	call   0x12926
   17134:	jmp    0x1713d
   17136:	mov    DWORD PTR [esi+0x8],0x1
   1713d:	and    DWORD PTR [esi+0x4],0x0
   17141:	and    DWORD PTR [ebp-0x4],0x0
   17145:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1714c:	call   0x1719a
   17151:	cmp    DWORD PTR [esi+0x8],0x0
   17155:	jne    0x170db
   17157:	push   esi
   17158:	lea    eax,[ebp-0x2c]
   1715b:	push   eax
   1715c:	call   0x14792
   17161:	jmp    0x170db
   17166:	xor    eax,eax
   17168:	inc    eax
   17169:	ret    
   1716a:	mov    esp,DWORD PTR [ebp-0x18]
   1716d:	mov    eax,DWORD PTR [ebp-0x20]
   17170:	mov    DWORD PTR [eax+0x8],0x4
   17177:	push   DWORD PTR [ebp-0x2c]
   1717a:	call   0x11c4c
   1717f:	push   0xfffffffe
   17181:	lea    eax,[ebp-0x10]
   17184:	push   eax
   17185:	push   0x72518
   1718a:	call   0x1b5ec
   1718f:	add    esp,0x10
   17192:	jmp    0x17378
   17197:	mov    esi,DWORD PTR [ebp-0x20]
   1719a:	push   0x0
   1719c:	push   0x72550
   171a1:	call   0x11992
   171a6:	call   eax
   171a8:	ret    
   171a9:	call   0x122b0
   171ae:	jmp    0x17378
   171b3:	mov    eax,DWORD PTR [ebx+0xc]
   171b6:	mov    ecx,DWORD PTR ds:0x72404
   171bc:	mov    esi,eax
   171be:	sub    esi,ecx
   171c0:	push   0x2
   171c2:	pop    edi
   171c3:	movzx  edx,WORD PTR [ecx]
   171c6:	mov    WORD PTR [esi+ecx*1],dx
   171ca:	add    ecx,edi
   171cc:	test   dx,dx
   171cf:	jne    0x171c3
   171d1:	mov    ecx,0x72448
   171d6:	lea    esi,[eax+0x50]
   171d9:	sub    esi,ecx
   171db:	movzx  edx,WORD PTR [ecx]
   171de:	mov    WORD PTR [esi+ecx*1],dx
   171e2:	add    ecx,edi
   171e4:	test   dx,dx
   171e7:	jne    0x171db
   171e9:	mov    ecx,0x72408
   171ee:	lea    esi,[eax+0x90]
   171f4:	sub    esi,ecx
   171f6:	movzx  edx,WORD PTR [ecx]
   171f9:	mov    WORD PTR [esi+ecx*1],dx
   171fd:	add    ecx,edi
   171ff:	test   dx,dx
   17202:	jne    0x171f6
   17204:	mov    ecx,0x72488
   17209:	lea    esi,[eax+0xd0]
   1720f:	sub    esi,ecx
   17211:	movzx  edx,WORD PTR [ecx]
   17214:	mov    WORD PTR [esi+ecx*1],dx
   17218:	add    ecx,edi
   1721a:	test   dx,dx
   1721d:	jne    0x17211
   1721f:	lea    edi,[eax+0x40]
   17222:	mov    esi,0x6e4b8
   17227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1722a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1722b:	mov    DWORD PTR [ebx+0x1c],0x110
   17232:	jmp    0x17378
   17237:	mov    eax,DWORD PTR [ebx+0xc]
   1723a:	mov    ecx,DWORD PTR [eax]
   1723c:	add    ecx,0xc
   1723f:	mov    DWORD PTR [ebx+0x1c],ecx
   17242:	push   eax
   17243:	push   DWORD PTR [eax+0x4]
   17246:	call   0x149f0
   1724b:	jmp    0x17378
   17250:	mov    eax,DWORD PTR [ebx+0xc]
   17253:	mov    ecx,DWORD PTR [eax]
   17255:	mov    DWORD PTR ds:0x72f08,ecx
   1725b:	mov    eax,DWORD PTR [eax+0x4]
   1725e:	mov    ds:0x72f0c,eax
   17263:	jmp    0x17375
   17268:	mov    ecx,0x22c078
   1726d:	cmp    eax,ecx
   1726f:	ja     0x172f6
   17275:	je     0x172ec
   17277:	sub    eax,0x22c060
   1727c:	je     0x172ce
   1727e:	push   0x4
   17280:	pop    esi
   17281:	sub    eax,esi
   17283:	je     0x172c1
   17285:	sub    eax,esi
   17287:	je     0x172b2
   17289:	sub    eax,esi
   1728b:	je     0x1729e
   1728d:	sub    eax,esi
   1728f:	jne    0x1730c
   17291:	push   DWORD PTR [ebx+0xc]
   17294:	call   0x11fd6
   17299:	jmp    0x17375
   1729e:	mov    edi,DWORD PTR [ebx+0xc]
   172a1:	push   DWORD PTR [edi]
   172a3:	call   0x128dc
   172a8:	mov    DWORD PTR [edi],eax
   172aa:	mov    DWORD PTR [ebx+0x1c],esi
   172ad:	jmp    0x17378
   172b2:	mov    eax,DWORD PTR [ebx+0xc]
   172b5:	push   DWORD PTR [eax]
   172b7:	call   0x12896
   172bc:	jmp    0x17375
   172c1:	push   DWORD PTR [ebx+0xc]
   172c4:	call   0x12786
   172c9:	jmp    0x17375
   172ce:	mov    DWORD PTR [ebx+0x1c],0x8
   172d5:	mov    ebx,DWORD PTR [ebx+0xc]
   172d8:	mov    eax,ds:0x72f08
   172dd:	mov    DWORD PTR [ebx],eax
   172df:	mov    eax,ds:0x72f0c
   172e4:	mov    DWORD PTR [ebx+0x4],eax
   172e7:	jmp    0x17378
   172ec:	push   DWORD PTR [ebx+0xc]
   172ef:	call   0x16736
   172f4:	jmp    0x17375
   172f6:	sub    eax,0x22c07c
   172fb:	je     0x17362
   172fd:	push   0x4
   172ff:	pop    esi
   17300:	sub    eax,esi
   17302:	je     0x1734a
   17304:	sub    eax,esi
   17306:	je     0x17340
   17308:	sub    eax,esi
   1730a:	je     0x17315
   1730c:	mov    DWORD PTR [ebp-0x24],0xc0000010
   17313:	jmp    0x17375
   17315:	mov    esi,DWORD PTR [ebx+0xc]
   17318:	mov    eax,DWORD PTR [esi]
   1731a:	add    eax,0xc
   1731d:	mov    DWORD PTR [ebx+0x1c],eax
   17320:	push   0xffffffff
   17322:	lea    eax,[esi+0xc]
   17325:	push   eax
   17326:	lea    ecx,[ebp-0x3c]
   17329:	call   0x12a48
   1732e:	push   esi
   1732f:	lea    eax,[ebp-0x3c]
   17332:	push   eax
   17333:	call   0x14904
   17338:	push   DWORD PTR [ebp-0x3c]
   1733b:	jmp    0x16fc4
   17340:	push   DWORD PTR [ebx+0xc]
   17343:	call   0x15df8
   17348:	jmp    0x17375
   1734a:	mov    DWORD PTR [ebx+0x1c],0x8
   17351:	mov    ebx,DWORD PTR [ebx+0xc]
   17354:	mov    eax,ds:0x72f10
   17359:	mov    DWORD PTR [ebx],eax
   1735b:	mov    eax,ds:0x72f14
   17360:	jmp    0x172e4
   17362:	mov    eax,DWORD PTR [ebx+0xc]
   17365:	mov    ecx,DWORD PTR [eax]
   17367:	mov    DWORD PTR ds:0x72f10,ecx
   1736d:	mov    eax,DWORD PTR [eax+0x4]
   17370:	mov    ds:0x72f14,eax
   17375:	mov    DWORD PTR [ebx+0x1c],edi
   17378:	mov    eax,DWORD PTR [ebp-0x24]
   1737b:	call   0x1b469
   17380:	ret    0x8
   17383:	int3   
   17384:	int3   
   17385:	int3   
   17386:	int3   
   17387:	int3   
   17388:	push   0x848
   1738d:	push   0x721f0
   17392:	call   0x1b730
   17397:	xor    ebx,ebx
   17399:	mov    BYTE PTR [ebp-0x81d],bl
   1739f:	xor    eax,eax
   173a1:	mov    WORD PTR [ebp-0x81c],ax
   173a8:	push   0x7fe
   173ad:	push   ebx
   173ae:	lea    eax,[ebp-0x81a]
   173b4:	push   eax
   173b5:	call   0x1b3e8
   173ba:	add    esp,0xc
   173bd:	push   0x1c2da
   173c2:	push   0x15
   173c4:	push   0x1c2ae
   173c9:	call   0x16596
   173ce:	mov    edx,eax
   173d0:	mov    cx,WORD PTR [eax]
   173d3:	inc    eax
   173d4:	inc    eax
   173d5:	cmp    cx,bx
   173d8:	jne    0x173d0
   173da:	sub    eax,edx
   173dc:	lea    edi,[ebp-0x81c]
   173e2:	dec    edi
   173e3:	dec    edi
   173e4:	mov    cx,WORD PTR [edi+0x2]
   173e8:	inc    edi
   173e9:	inc    edi
   173ea:	cmp    cx,bx
   173ed:	jne    0x173e4
   173ef:	mov    ecx,eax
   173f1:	mov    esi,edx
   173f3:	shr    ecx,0x2
   173f6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   173f8:	mov    ecx,eax
   173fa:	and    ecx,0x3
   173fd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   173ff:	mov    eax,0x72408
   17404:	mov    edx,eax
   17406:	mov    cx,WORD PTR [eax]
   17409:	inc    eax
   1740a:	inc    eax
   1740b:	cmp    cx,bx
   1740e:	jne    0x17406
   17410:	sub    eax,edx
   17412:	lea    edi,[ebp-0x81c]
   17418:	dec    edi
   17419:	dec    edi
   1741a:	mov    cx,WORD PTR [edi+0x2]
   1741e:	inc    edi
   1741f:	inc    edi
   17420:	cmp    cx,bx
   17423:	jne    0x1741a
   17425:	mov    ecx,eax
   17427:	mov    esi,edx
   17429:	shr    ecx,0x2
   1742c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1742e:	mov    ecx,eax
   17430:	and    ecx,0x3
   17433:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17435:	push   0x1c26e
   1743a:	push   0x4
   1743c:	push   0x1c074
   17441:	call   0x16596
   17446:	mov    edx,eax
   17448:	mov    cx,WORD PTR [eax]
   1744b:	inc    eax
   1744c:	inc    eax
   1744d:	cmp    cx,bx
   17450:	jne    0x17448
   17452:	sub    eax,edx
   17454:	lea    edi,[ebp-0x81c]
   1745a:	dec    edi
   1745b:	dec    edi
   1745c:	mov    cx,WORD PTR [edi+0x2]
   17460:	inc    edi
   17461:	inc    edi
   17462:	cmp    cx,bx
   17465:	jne    0x1745c
   17467:	mov    ecx,eax
   17469:	mov    esi,edx
   1746b:	shr    ecx,0x2
   1746e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17470:	mov    ecx,eax
   17472:	and    ecx,0x3
   17475:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17477:	lea    eax,[ebp-0x81c]
   1747d:	push   eax
   1747e:	lea    eax,[ebp-0x858]
   17484:	push   eax
   17485:	call   0x114d0
   1748a:	call   eax
   1748c:	mov    DWORD PTR [ebp-0x824],ebx
   17492:	xor    eax,eax
   17494:	lea    edi,[ebp-0x84c]
   1749a:	stos   DWORD PTR es:[edi],eax
   1749b:	stos   DWORD PTR es:[edi],eax
   1749c:	stos   DWORD PTR es:[edi],eax
   1749d:	stos   DWORD PTR es:[edi],eax
   1749e:	stos   DWORD PTR es:[edi],eax
   1749f:	mov    DWORD PTR [ebp-0x830],ebx
   174a5:	xor    eax,eax
   174a7:	lea    edi,[ebp-0x82c]
   174ad:	stos   DWORD PTR es:[edi],eax
   174ae:	mov    DWORD PTR [ebp-0x850],0x18
   174b8:	mov    DWORD PTR [ebp-0x84c],ebx
   174be:	mov    DWORD PTR [ebp-0x844],0x240
   174c8:	lea    eax,[ebp-0x858]
   174ce:	mov    DWORD PTR [ebp-0x848],eax
   174d4:	mov    DWORD PTR [ebp-0x840],ebx
   174da:	mov    DWORD PTR [ebp-0x83c],ebx
   174e0:	push   ebx
   174e1:	push   ebx
   174e2:	push   0x60
   174e4:	push   0x1
   174e6:	push   ebx
   174e7:	push   0x80
   174ec:	push   ebx
   174ed:	lea    eax,[ebp-0x830]
   174f3:	push   eax
   174f4:	lea    eax,[ebp-0x850]
   174fa:	push   eax
   174fb:	push   0x100001
   17500:	lea    eax,[ebp-0x824]
   17506:	push   eax
   17507:	call   0x113aa
   1750c:	call   eax
   1750e:	cmp    eax,ebx
   17510:	jge    0x17519
   17512:	xor    al,al
   17514:	jmp    0x175af
   17519:	mov    DWORD PTR [ebp-0x4],ebx
   1751c:	mov    esi,DWORD PTR [ebp+0xc]
   1751f:	mov    eax,0x10000
   17524:	cmp    esi,eax
   17526:	jbe    0x1752a
   17528:	mov    esi,eax
   1752a:	push   esi
   1752b:	call   0x11c16
   17530:	pop    ecx
   17531:	mov    DWORD PTR [ebp-0x828],eax
   17537:	mov    DWORD PTR [ebp-0x838],ebx
   1753d:	xor    eax,eax
   1753f:	lea    edi,[ebp-0x834]
   17545:	stos   DWORD PTR es:[edi],eax
   17546:	push   ebx
   17547:	lea    eax,[ebp-0x838]
   1754d:	push   eax
   1754e:	push   esi
   1754f:	push   DWORD PTR [ebp-0x828]
   17555:	lea    eax,[ebp-0x830]
   1755b:	push   eax
   1755c:	push   ebx
   1755d:	push   ebx
   1755e:	push   ebx
   1755f:	push   DWORD PTR [ebp-0x824]
   17565:	call   0x11746
   1756a:	call   eax
   1756c:	cmp    eax,ebx
   1756e:	jl     0x17595
   17570:	mov    ecx,DWORD PTR [ebp-0x82c]
   17576:	mov    edi,DWORD PTR [ebp+0x8]
   17579:	mov    esi,DWORD PTR [ebp-0x828]
   1757f:	xor    eax,eax
   17581:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17583:	sete   al
   17586:	mov    BYTE PTR [ebp-0x81d],al
   1758c:	jmp    0x17595
   1758e:	xor    eax,eax
   17590:	inc    eax
   17591:	ret    
   17592:	mov    esp,DWORD PTR [ebp-0x18]
   17595:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1759c:	push   DWORD PTR [ebp-0x824]
   175a2:	call   0x114a6
   175a7:	call   eax
   175a9:	mov    al,BYTE PTR [ebp-0x81d]
   175af:	call   0x1b778
   175b4:	ret    0x8
   175b7:	int3   
   175b8:	int3   
   175b9:	int3   
   175ba:	int3   
   175bb:	int3   
   175bc:	push   0x874
   175c1:	push   0x72210
   175c6:	call   0x1b730
   175cb:	mov    eax,DWORD PTR [ebp+0x8]
   175ce:	mov    DWORD PTR [ebp-0x830],eax
   175d4:	xor    ebx,ebx
   175d6:	mov    BYTE PTR [ebp-0x81d],bl
   175dc:	xor    eax,eax
   175de:	mov    WORD PTR [ebp-0x81c],ax
   175e5:	push   0x7fe
   175ea:	push   ebx
   175eb:	lea    eax,[ebp-0x81a]
   175f1:	push   eax
   175f2:	call   0x1b3e8
   175f7:	add    esp,0xc
   175fa:	push   0x1c34e
   175ff:	push   0x15
   17601:	push   0x1c2ae
   17606:	call   0x16596
   1760b:	mov    edx,eax
   1760d:	mov    cx,WORD PTR [eax]
   17610:	inc    eax
   17611:	inc    eax
   17612:	cmp    cx,bx
   17615:	jne    0x1760d
   17617:	sub    eax,edx
   17619:	lea    edi,[ebp-0x81c]
   1761f:	dec    edi
   17620:	dec    edi
   17621:	mov    cx,WORD PTR [edi+0x2]
   17625:	inc    edi
   17626:	inc    edi
   17627:	cmp    cx,bx
   1762a:	jne    0x17621
   1762c:	mov    ecx,eax
   1762e:	mov    esi,edx
   17630:	shr    ecx,0x2
   17633:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17635:	mov    ecx,eax
   17637:	and    ecx,0x3
   1763a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1763c:	mov    eax,0x72408
   17641:	mov    edx,eax
   17643:	mov    cx,WORD PTR [eax]
   17646:	inc    eax
   17647:	inc    eax
   17648:	cmp    cx,bx
   1764b:	jne    0x17643
   1764d:	sub    eax,edx
   1764f:	lea    edi,[ebp-0x81c]
   17655:	dec    edi
   17656:	dec    edi
   17657:	mov    cx,WORD PTR [edi+0x2]
   1765b:	inc    edi
   1765c:	inc    edi
   1765d:	cmp    cx,bx
   17660:	jne    0x17657
   17662:	mov    ecx,eax
   17664:	mov    esi,edx
   17666:	shr    ecx,0x2
   17669:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1766b:	mov    ecx,eax
   1766d:	and    ecx,0x3
   17670:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17672:	push   0x1c31a
   17677:	push   0x4
   17679:	push   0x1c074
   1767e:	call   0x16596
   17683:	mov    edx,eax
   17685:	mov    cx,WORD PTR [eax]
   17688:	inc    eax
   17689:	inc    eax
   1768a:	cmp    cx,bx
   1768d:	jne    0x17685
   1768f:	sub    eax,edx
   17691:	lea    edi,[ebp-0x81c]
   17697:	dec    edi
   17698:	dec    edi
   17699:	mov    cx,WORD PTR [edi+0x2]
   1769d:	inc    edi
   1769e:	inc    edi
   1769f:	cmp    cx,bx
   176a2:	jne    0x17699
   176a4:	mov    ecx,eax
   176a6:	mov    esi,edx
   176a8:	shr    ecx,0x2
   176ab:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   176ad:	mov    ecx,eax
   176af:	and    ecx,0x3
   176b2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   176b4:	lea    eax,[ebp-0x81c]
   176ba:	push   eax
   176bb:	lea    eax,[ebp-0x884]
   176c1:	push   eax
   176c2:	call   0x114d0
   176c7:	call   eax
   176c9:	mov    DWORD PTR [ebp-0x824],ebx
   176cf:	xor    eax,eax
   176d1:	lea    edi,[ebp-0x850]
   176d7:	stos   DWORD PTR es:[edi],eax
   176d8:	stos   DWORD PTR es:[edi],eax
   176d9:	stos   DWORD PTR es:[edi],eax
   176da:	stos   DWORD PTR es:[edi],eax
   176db:	stos   DWORD PTR es:[edi],eax
   176dc:	mov    DWORD PTR [ebp-0x82c],ebx
   176e2:	xor    eax,eax
   176e4:	lea    edi,[ebp-0x828]
   176ea:	stos   DWORD PTR es:[edi],eax
   176eb:	mov    DWORD PTR [ebp-0x854],0x18
   176f5:	mov    DWORD PTR [ebp-0x850],ebx
   176fb:	mov    DWORD PTR [ebp-0x848],0x240
   17705:	lea    eax,[ebp-0x884]
   1770b:	mov    DWORD PTR [ebp-0x84c],eax
   17711:	mov    DWORD PTR [ebp-0x844],ebx
   17717:	mov    DWORD PTR [ebp-0x840],ebx
   1771d:	push   ebx
   1771e:	push   ebx
   1771f:	push   0x60
   17721:	push   ebx
   17722:	push   ebx
   17723:	push   0x80
   17728:	push   ebx
   17729:	lea    eax,[ebp-0x82c]
   1772f:	push   eax
   17730:	lea    eax,[ebp-0x854]
   17736:	push   eax
   17737:	push   0x100002
   1773c:	lea    eax,[ebp-0x824]
   17742:	push   eax
   17743:	call   0x113aa
   17748:	call   eax
   1774a:	cmp    eax,ebx
   1774c:	jge    0x17755
   1774e:	xor    al,al
   17750:	jmp    0x1785b
   17755:	mov    DWORD PTR [ebp-0x4],ebx
   17758:	xor    eax,eax
   1775a:	lea    edi,[ebp-0x82c]
   17760:	stos   DWORD PTR es:[edi],eax
   17761:	stos   DWORD PTR es:[edi],eax
   17762:	xor    edi,edi
   17764:	mov    esi,0x10000
   17769:	mov    DWORD PTR [ebp-0x834],edi
   1776f:	mov    eax,DWORD PTR [ebp+0xc]
   17772:	cmp    edi,eax
   17774:	jae    0x177bf
   17776:	mov    DWORD PTR [ebp-0x83c],ebx
   1777c:	mov    DWORD PTR [ebp-0x83c],edi
   17782:	mov    DWORD PTR [ebp-0x838],ebx
   17788:	sub    eax,edi
   1778a:	cmp    eax,esi
   1778c:	jb     0x17790
   1778e:	mov    eax,esi
   17790:	push   ebx
   17791:	push   ebx
   17792:	push   eax
   17793:	mov    eax,DWORD PTR [ebp-0x830]
   17799:	add    eax,edi
   1779b:	push   eax
   1779c:	lea    eax,[ebp-0x82c]
   177a2:	push   eax
   177a3:	push   ebx
   177a4:	push   ebx
   177a5:	push   ebx
   177a6:	push   DWORD PTR [ebp-0x824]
   177ac:	call   0x1179a
   177b1:	call   eax
   177b3:	cmp    eax,ebx
   177b5:	jl     0x17841
   177bb:	add    edi,esi
   177bd:	jmp    0x17769
   177bf:	mov    BYTE PTR [ebp-0x81d],0x1
   177c6:	mov    DWORD PTR [ebp-0x87c],ebx
   177cc:	push   0x9
   177ce:	pop    ecx
   177cf:	xor    eax,eax
   177d1:	lea    edi,[ebp-0x878]
   177d7:	rep stos DWORD PTR es:[edi],eax
   177d9:	mov    eax,DWORD PTR [ebp+0x10]
   177dc:	mov    DWORD PTR [ebp-0x86c],eax
   177e2:	mov    ecx,DWORD PTR [ebp+0x14]
   177e5:	mov    DWORD PTR [ebp-0x868],ecx
   177eb:	mov    DWORD PTR [ebp-0x874],eax
   177f1:	mov    DWORD PTR [ebp-0x870],ecx
   177f7:	mov    DWORD PTR [ebp-0x864],eax
   177fd:	mov    DWORD PTR [ebp-0x860],ecx
   17803:	mov    DWORD PTR [ebp-0x87c],eax
   17809:	mov    DWORD PTR [ebp-0x878],ecx
   1780f:	mov    DWORD PTR [ebp-0x85c],0x80
   17819:	push   0x4
   1781b:	push   0x28
   1781d:	lea    eax,[ebp-0x87c]
   17823:	push   eax
   17824:	lea    eax,[ebp-0x82c]
   1782a:	push   eax
   1782b:	push   DWORD PTR [ebp-0x824]
   17831:	call   0x11770
   17836:	call   eax
   17838:	jmp    0x17841
   1783a:	xor    eax,eax
   1783c:	inc    eax
   1783d:	ret    
   1783e:	mov    esp,DWORD PTR [ebp-0x18]
   17841:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17848:	push   DWORD PTR [ebp-0x824]
   1784e:	call   0x114a6
   17853:	call   eax
   17855:	mov    al,BYTE PTR [ebp-0x81d]
   1785b:	call   0x1b778
   17860:	ret    0x10
   17863:	int3   
   17864:	int3   
   17865:	int3   
   17866:	int3   
   17867:	int3   
   17868:	push   0x874
   1786d:	push   0x72230
   17872:	call   0x1b730
   17877:	xor    ebx,ebx
   17879:	mov    BYTE PTR [ebp-0x81d],bl
   1787f:	mov    BYTE PTR [ebp-0x81e],bl
   17885:	mov    DWORD PTR [ebp-0x828],ebx
   1788b:	mov    DWORD PTR [ebp-0x824],ebx
   17891:	xor    eax,eax
   17893:	mov    WORD PTR [ebp-0x81c],ax
   1789a:	push   0x7fe
   1789f:	push   ebx
   178a0:	lea    eax,[ebp-0x81a]
   178a6:	push   eax
   178a7:	call   0x1b3e8
   178ac:	add    esp,0xc
   178af:	push   0x1c412
   178b4:	push   0x1d
   178b6:	push   0x1c3d6
   178bb:	call   0x16596
   178c0:	mov    edx,eax
   178c2:	mov    cx,WORD PTR [eax]
   178c5:	inc    eax
   178c6:	inc    eax
   178c7:	cmp    cx,bx
   178ca:	jne    0x178c2
   178cc:	sub    eax,edx
   178ce:	lea    edi,[ebp-0x81c]
   178d4:	dec    edi
   178d5:	dec    edi
   178d6:	mov    cx,WORD PTR [edi+0x2]
   178da:	inc    edi
   178db:	inc    edi
   178dc:	cmp    cx,bx
   178df:	jne    0x178d6
   178e1:	mov    ecx,eax
   178e3:	mov    esi,edx
   178e5:	shr    ecx,0x2
   178e8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   178ea:	mov    ecx,eax
   178ec:	and    ecx,0x3
   178ef:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   178f1:	mov    eax,0x72448
   178f6:	mov    edx,eax
   178f8:	mov    cx,WORD PTR [eax]
   178fb:	inc    eax
   178fc:	inc    eax
   178fd:	cmp    cx,bx
   17900:	jne    0x178f8
   17902:	sub    eax,edx
   17904:	lea    edi,[ebp-0x81c]
   1790a:	dec    edi
   1790b:	dec    edi
   1790c:	mov    cx,WORD PTR [edi+0x2]
   17910:	inc    edi
   17911:	inc    edi
   17912:	cmp    cx,bx
   17915:	jne    0x1790c
   17917:	mov    ecx,eax
   17919:	mov    esi,edx
   1791b:	shr    ecx,0x2
   1791e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17920:	mov    ecx,eax
   17922:	and    ecx,0x3
   17925:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17927:	push   0x1c396
   1792c:	push   0x4
   1792e:	push   0x1c38c
   17933:	call   0x16596
   17938:	mov    edx,eax
   1793a:	mov    cx,WORD PTR [eax]
   1793d:	inc    eax
   1793e:	inc    eax
   1793f:	cmp    cx,bx
   17942:	jne    0x1793a
   17944:	sub    eax,edx
   17946:	lea    edi,[ebp-0x81c]
   1794c:	dec    edi
   1794d:	dec    edi
   1794e:	mov    cx,WORD PTR [edi+0x2]
   17952:	inc    edi
   17953:	inc    edi
   17954:	cmp    cx,bx
   17957:	jne    0x1794e
   17959:	mov    ecx,eax
   1795b:	mov    esi,edx
   1795d:	shr    ecx,0x2
   17960:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17962:	mov    ecx,eax
   17964:	and    ecx,0x3
   17967:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17969:	lea    eax,[ebp-0x81c]
   1796f:	push   eax
   17970:	lea    eax,[ebp-0x85c]
   17976:	push   eax
   17977:	call   0x114d0
   1797c:	call   eax
   1797e:	xor    eax,eax
   17980:	lea    edi,[ebp-0x850]
   17986:	stos   DWORD PTR es:[edi],eax
   17987:	stos   DWORD PTR es:[edi],eax
   17988:	stos   DWORD PTR es:[edi],eax
   17989:	stos   DWORD PTR es:[edi],eax
   1798a:	stos   DWORD PTR es:[edi],eax
   1798b:	mov    DWORD PTR [ebp-0x834],ebx
   17991:	xor    eax,eax
   17993:	lea    edi,[ebp-0x830]
   17999:	stos   DWORD PTR es:[edi],eax
   1799a:	mov    DWORD PTR [ebp-0x82c],ebx
   179a0:	mov    DWORD PTR [ebp-0x854],0x18
   179aa:	mov    DWORD PTR [ebp-0x850],ebx
   179b0:	mov    DWORD PTR [ebp-0x848],0x240
   179ba:	lea    eax,[ebp-0x85c]
   179c0:	mov    DWORD PTR [ebp-0x84c],eax
   179c6:	mov    DWORD PTR [ebp-0x844],ebx
   179cc:	mov    DWORD PTR [ebp-0x840],ebx
   179d2:	push   ebx
   179d3:	push   ebx
   179d4:	push   ebx
   179d5:	push   0x1
   179d7:	push   0x7
   179d9:	push   ebx
   179da:	push   ebx
   179db:	lea    eax,[ebp-0x834]
   179e1:	push   eax
   179e2:	lea    eax,[ebp-0x854]
   179e8:	push   eax
   179e9:	push   0x89
   179ee:	lea    eax,[ebp-0x82c]
   179f4:	push   eax
   179f5:	call   0x113aa
   179fa:	call   eax
   179fc:	cmp    eax,ebx
   179fe:	jge    0x17a07
   17a00:	xor    al,al
   17a02:	jmp    0x17b27
   17a07:	mov    DWORD PTR [ebp-0x884],ebx
   17a0d:	push   0x9
   17a0f:	pop    ecx
   17a10:	xor    eax,eax
   17a12:	lea    edi,[ebp-0x880]
   17a18:	rep stos DWORD PTR es:[edi],eax
   17a1a:	mov    DWORD PTR [ebp-0x4],ebx
   17a1d:	push   0x4
   17a1f:	push   0x28
   17a21:	lea    eax,[ebp-0x884]
   17a27:	push   eax
   17a28:	lea    eax,[ebp-0x834]
   17a2e:	push   eax
   17a2f:	push   DWORD PTR [ebp-0x82c]
   17a35:	call   0x117c4
   17a3a:	call   eax
   17a3c:	cmp    eax,ebx
   17a3e:	jl     0x17abc
   17a40:	mov    esi,0x51a06
   17a45:	push   esi
   17a46:	call   0x11c16
   17a4b:	mov    edi,eax
   17a4d:	push   esi
   17a4e:	push   0x1ca88
   17a53:	push   edi
   17a54:	call   0x1b400
   17a59:	add    esp,0x10
   17a5c:	push   0x25
   17a5e:	push   0x6e490
   17a63:	push   esi
   17a64:	push   edi
   17a65:	call   0x10982
   17a6a:	lea    eax,[ebp-0x828]
   17a70:	push   eax
   17a71:	push   esi
   17a72:	push   edi
   17a73:	lea    eax,[ebp-0x83c]
   17a79:	push   eax
   17a7a:	call   0x18f7c
   17a7f:	mov    BYTE PTR [ebp-0x83c],bl
   17a85:	mov    eax,DWORD PTR [ebp-0x838]
   17a8b:	mov    DWORD PTR [ebp-0x824],eax
   17a91:	cmp    eax,ebx
   17a93:	je     0x17aae
   17a95:	push   DWORD PTR [ebp-0x828]
   17a9b:	push   eax
   17a9c:	call   0x17388
   17aa1:	test   al,al
   17aa3:	je     0x17aae
   17aa5:	mov    BYTE PTR [ebp-0x81d],0x1
   17aac:	jmp    0x17abc
   17aae:	mov    BYTE PTR [ebp-0x81d],0x1
   17ab5:	mov    BYTE PTR [ebp-0x81e],0x1
   17abc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17ac3:	jmp    0x17ad5
   17ac5:	xor    eax,eax
   17ac7:	inc    eax
   17ac8:	ret    
   17ac9:	mov    esp,DWORD PTR [ebp-0x18]
   17acc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17ad3:	xor    ebx,ebx
   17ad5:	push   DWORD PTR [ebp-0x82c]
   17adb:	call   0x114a6
   17ae0:	call   eax
   17ae2:	cmp    BYTE PTR [ebp-0x81e],bl
   17ae8:	je     0x17b0d
   17aea:	push   DWORD PTR [ebp-0x880]
   17af0:	push   DWORD PTR [ebp-0x884]
   17af6:	push   DWORD PTR [ebp-0x828]
   17afc:	push   DWORD PTR [ebp-0x824]
   17b02:	call   0x175bc
   17b07:	mov    BYTE PTR [ebp-0x81d],al
   17b0d:	cmp    DWORD PTR [ebp-0x824],ebx
   17b13:	je     0x17b21
   17b15:	push   DWORD PTR [ebp-0x824]
   17b1b:	call   0x11c4c
   17b20:	pop    ecx
   17b21:	mov    al,BYTE PTR [ebp-0x81d]
   17b27:	call   0x1b778
   17b2c:	ret    
   17b2d:	int3   
   17b2e:	int3   
   17b2f:	int3   
   17b30:	int3   
   17b31:	int3   
   17b32:	mov    edi,edi
   17b34:	push   ebp
   17b35:	mov    ebp,esp
   17b37:	sub    esp,0xbc
   17b3d:	mov    eax,ds:0x72518
   17b42:	xor    eax,ebp
   17b44:	mov    DWORD PTR [ebp-0x4],eax
   17b47:	push   ebx
   17b48:	push   edi
   17b49:	push   0x1c452
   17b4e:	push   0xb
   17b50:	push   0x1c43a
   17b55:	call   0x16596
   17b5a:	push   eax
   17b5b:	lea    eax,[ebp-0xbc]
   17b61:	push   eax
   17b62:	call   0x114d0
   17b67:	call   eax
   17b69:	xor    eax,eax
   17b6b:	lea    edi,[ebp-0xb0]
   17b71:	stos   DWORD PTR es:[edi],eax
   17b72:	stos   DWORD PTR es:[edi],eax
   17b73:	stos   DWORD PTR es:[edi],eax
   17b74:	stos   DWORD PTR es:[edi],eax
   17b75:	xor    ebx,ebx
   17b77:	push   ebx
   17b78:	stos   DWORD PTR es:[edi],eax
   17b79:	push   ebx
   17b7a:	push   ebx
   17b7b:	push   0x1
   17b7d:	xor    eax,eax
   17b7f:	push   0x7
   17b81:	push   ebx
   17b82:	mov    DWORD PTR [ebp-0x94],ebx
   17b88:	lea    edi,[ebp-0x90]
   17b8e:	stos   DWORD PTR es:[edi],eax
   17b8f:	lea    eax,[ebp-0xbc]
   17b95:	mov    DWORD PTR [ebp-0xac],eax
   17b9b:	push   ebx
   17b9c:	lea    eax,[ebp-0x94]
   17ba2:	push   eax
   17ba3:	lea    eax,[ebp-0xb4]
   17ba9:	push   eax
   17baa:	push   0x89
   17baf:	lea    eax,[ebp-0x8c]
   17bb5:	push   eax
   17bb6:	mov    DWORD PTR [ebp-0x8c],ebx
   17bbc:	mov    DWORD PTR [ebp-0xb4],0x18
   17bc6:	mov    DWORD PTR [ebp-0xb0],ebx
   17bcc:	mov    DWORD PTR [ebp-0xa8],0x240
   17bd6:	mov    DWORD PTR [ebp-0xa4],ebx
   17bdc:	mov    DWORD PTR [ebp-0xa0],ebx
   17be2:	call   0x113aa
   17be7:	call   eax
   17be9:	test   eax,eax
   17beb:	jge    0x17bf4
   17bed:	xor    al,al
   17bef:	jmp    0x17cb0
   17bf4:	push   esi
   17bf5:	mov    esi,0x20c
   17bfa:	push   esi
   17bfb:	call   0x11c16
   17c00:	pop    ecx
   17c01:	push   0x1
   17c03:	mov    edi,eax
   17c05:	push   esi
   17c06:	push   edi
   17c07:	lea    eax,[ebp-0x94]
   17c0d:	push   eax
   17c0e:	push   DWORD PTR [ebp-0x8c]
   17c14:	cmp    edi,ebx
   17c16:	setne  BYTE PTR [ebp-0x9c]
   17c1d:	call   0x11380
   17c22:	call   eax
   17c24:	push   DWORD PTR [ebp-0x8c]
   17c2a:	mov    esi,eax
   17c2c:	call   0x114a6
   17c31:	call   eax
   17c33:	cmp    esi,ebx
   17c35:	pop    esi
   17c36:	jge    0x17c49
   17c38:	cmp    BYTE PTR [ebp-0x9c],bl
   17c3e:	je     0x17bed
   17c40:	push   edi
   17c41:	call   0x11c4c
   17c46:	pop    ecx
   17c47:	jmp    0x17bed
   17c49:	push   0x6
   17c4b:	push   0x1
   17c4d:	lea    eax,[ebp-0x84]
   17c53:	push   eax
   17c54:	push   DWORD PTR [edi+0x8]
   17c57:	call   0x107b2
   17c5c:	mov    ecx,0x72408
   17c61:	lea    eax,[ebp-0x84]
   17c67:	mov    dx,WORD PTR [eax]
   17c6a:	cmp    dx,WORD PTR [ecx]
   17c6d:	jne    0x17c8d
   17c6f:	cmp    dx,bx
   17c72:	je     0x17c89
   17c74:	mov    dx,WORD PTR [eax+0x2]
   17c78:	cmp    dx,WORD PTR [ecx+0x2]
   17c7c:	jne    0x17c8d
   17c7e:	add    eax,0x4
   17c81:	add    ecx,0x4
   17c84:	cmp    dx,bx
   17c87:	jne    0x17c67
   17c89:	xor    eax,eax
   17c8b:	jmp    0x17c92
   17c8d:	sbb    eax,eax
   17c8f:	sbb    eax,0xffffffff
   17c92:	cmp    eax,ebx
   17c94:	sete   BYTE PTR [ebp-0x85]
   17c9b:	cmp    BYTE PTR [ebp-0x9c],bl
   17ca1:	je     0x17caa
   17ca3:	push   edi
   17ca4:	call   0x11c4c
   17ca9:	pop    ecx
   17caa:	mov    al,BYTE PTR [ebp-0x85]
   17cb0:	mov    ecx,DWORD PTR [ebp-0x4]
   17cb3:	pop    edi
   17cb4:	xor    ecx,ebp
   17cb6:	pop    ebx
   17cb7:	call   0x1b38f
   17cbc:	leave  
   17cbd:	ret    
   17cbe:	int3   
   17cbf:	int3   
   17cc0:	int3   
   17cc1:	int3   
   17cc2:	int3   
   17cc3:	int3   
   17cc4:	call   0x19198
   17cc9:	push   0x1c4e0
   17cce:	push   0x34
   17cd0:	push   0x1c476
   17cd5:	call   0x16596
   17cda:	mov    edx,0x726b0
   17cdf:	movzx  ecx,WORD PTR [eax]
   17ce2:	inc    eax
   17ce3:	mov    WORD PTR [edx],cx
   17ce6:	inc    eax
   17ce7:	inc    edx
   17ce8:	inc    edx
   17ce9:	test   cx,cx
   17cec:	jne    0x17cdf
   17cee:	ret    
   17cef:	int3   
   17cf0:	int3   
   17cf1:	int3   
   17cf2:	int3   
   17cf3:	int3   
   17cf4:	mov    edi,edi
   17cf6:	push   ebp
   17cf7:	mov    ebp,esp
   17cf9:	push   esi
   17cfa:	mov    esi,ecx
   17cfc:	mov    BYTE PTR [esi+0x8],0x0
   17d00:	call   0x14636
   17d05:	lea    ecx,[esi+0x10]
   17d08:	mov    BYTE PTR [ecx+0x8],0x0
   17d0c:	call   0x13f2c
   17d11:	mov    eax,DWORD PTR [ebp+0x8]
   17d14:	mov    DWORD PTR [esi+0x20],eax
   17d17:	mov    eax,DWORD PTR [ebp+0xc]
   17d1a:	mov    DWORD PTR [esi+0x24],eax
   17d1d:	mov    eax,esi
   17d1f:	pop    esi
   17d20:	pop    ebp
   17d21:	ret    0x8
   17d24:	int3   
   17d25:	int3   
   17d26:	int3   
   17d27:	int3   
   17d28:	int3   
   17d29:	int3   
   17d2a:	push   0x33c
   17d2f:	push   0x72250
   17d34:	call   0x1b730
   17d39:	mov    esi,DWORD PTR [ebp+0xc]
   17d3c:	mov    DWORD PTR [ebp-0x32c],esi
   17d42:	call   DWORD PTR ds:0x1ca00
   17d48:	xor    ebx,ebx
   17d4a:	cmp    BYTE PTR [ebp+0x10],bl
   17d4d:	jne    0x17d8b
   17d4f:	push   esi
   17d50:	mov    ecx,DWORD PTR ds:0x72548
   17d56:	call   0x146ba
   17d5b:	mov    edi,eax
   17d5d:	push   esi
   17d5e:	mov    ecx,DWORD PTR ds:0x72548
   17d64:	call   0x15496
   17d69:	mov    eax,edi
   17d6b:	dec    eax
   17d6c:	je     0x17d80
   17d6e:	dec    eax
   17d6f:	je     0x17d7c
   17d71:	dec    eax
   17d72:	jne    0x17f66
   17d78:	push   0xa
   17d7a:	jmp    0x17d81
   17d7c:	push   0x2
   17d7e:	jmp    0x17d81
   17d80:	push   ebx
   17d81:	call   0x12896
   17d86:	jmp    0x17f66
   17d8b:	mov    DWORD PTR [ebp-0x320],ebx
   17d91:	xor    eax,eax
   17d93:	lea    edi,[ebp-0x326]
   17d99:	stos   DWORD PTR es:[edi],eax
   17d9a:	stos   WORD PTR es:[edi],ax
   17d9c:	xor    eax,eax
   17d9e:	mov    WORD PTR [ebp-0x21c],ax
   17da5:	push   0x1fc
   17daa:	push   ebx
   17dab:	lea    eax,[ebp-0x21a]
   17db1:	push   eax
   17db2:	call   0x1b3e8
   17db7:	add    esp,0xc
   17dba:	lea    eax,[ebp-0x21c]
   17dc0:	mov    DWORD PTR [ebp-0x324],eax
   17dc6:	xor    eax,eax
   17dc8:	mov    WORD PTR [ebp-0x328],ax
   17dcf:	mov    eax,0x1fe
   17dd4:	mov    WORD PTR [ebp-0x326],ax
   17ddb:	mov    DWORD PTR [ebp-0x34c],0x18
   17de5:	mov    DWORD PTR [ebp-0x348],ebx
   17deb:	mov    DWORD PTR [ebp-0x340],0x200
   17df5:	mov    DWORD PTR [ebp-0x344],ebx
   17dfb:	mov    DWORD PTR [ebp-0x33c],ebx
   17e01:	mov    DWORD PTR [ebp-0x338],ebx
   17e07:	mov    DWORD PTR [ebp-0x334],esi
   17e0d:	mov    DWORD PTR [ebp-0x330],ebx
   17e13:	lea    eax,[ebp-0x334]
   17e19:	push   eax
   17e1a:	lea    eax,[ebp-0x34c]
   17e20:	push   eax
   17e21:	push   0x1f0fff
   17e26:	lea    eax,[ebp-0x320]
   17e2c:	push   eax
   17e2d:	call   0x11188
   17e32:	call   eax
   17e34:	test   eax,eax
   17e36:	jl     0x17f66
   17e3c:	lea    eax,[ebp-0x328]
   17e42:	push   eax
   17e43:	push   DWORD PTR [ebp-0x320]
   17e49:	call   0x11cae
   17e4e:	cmp    eax,ebx
   17e50:	jl     0x17f59
   17e56:	movzx  eax,WORD PTR [ebp-0x328]
   17e5d:	shr    eax,1
   17e5f:	xor    ecx,ecx
   17e61:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   17e69:	push   DWORD PTR [ebp-0x320]
   17e6f:	call   0x11d44
   17e74:	lea    eax,[ebp-0x21c]
   17e7a:	push   eax
   17e7b:	call   0x10d44
   17e80:	cmp    eax,ebx
   17e82:	je     0x17ea7
   17e84:	push   eax
   17e85:	push   esi
   17e86:	mov    ecx,DWORD PTR ds:0x72548
   17e8c:	call   0x159f0
   17e91:	push   DWORD PTR [ebp-0x320]
   17e97:	push   DWORD PTR [ebp-0x320]
   17e9d:	call   0x11d44
   17ea2:	push   eax
   17ea3:	push   esi
   17ea4:	push   ebx
   17ea5:	jmp    0x17f25
   17ea7:	push   0x1c51e
   17eac:	push   0x9
   17eae:	push   0x1c50a
   17eb3:	call   0x16596
   17eb8:	push   eax
   17eb9:	lea    eax,[ebp-0x328]
   17ebf:	push   eax
   17ec0:	call   0x11d74
   17ec5:	test   al,al
   17ec7:	je     0x17f2c
   17ec9:	cmp    DWORD PTR ds:0x73264,ebx
   17ecf:	jne    0x17f02
   17ed1:	mov    DWORD PTR ds:0x73264,0x1
   17edb:	mov    DWORD PTR [ebp-0x4],ebx
   17ede:	call   0x17868
   17ee3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17eea:	jmp    0x17f02
   17eec:	xor    eax,eax
   17eee:	inc    eax
   17eef:	ret    
   17ef0:	mov    esp,DWORD PTR [ebp-0x18]
   17ef3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17efa:	xor    ebx,ebx
   17efc:	mov    esi,DWORD PTR [ebp-0x32c]
   17f02:	cmp    DWORD PTR ds:0x72f94,ebx
   17f08:	jne    0x17f10
   17f0a:	mov    DWORD PTR ds:0x72f94,esi
   17f10:	push   DWORD PTR [ebp-0x320]
   17f16:	push   DWORD PTR [ebp-0x320]
   17f1c:	call   0x11d44
   17f21:	push   eax
   17f22:	push   esi
   17f23:	push   0x1
   17f25:	call   0x131dc
   17f2a:	jmp    0x17f59
   17f2c:	lea    eax,[ebp-0x31c]
   17f32:	push   eax
   17f33:	call   0x12018
   17f38:	test   al,al
   17f3a:	je     0x17f59
   17f3c:	lea    eax,[ebp-0x31c]
   17f42:	push   eax
   17f43:	lea    eax,[ebp-0x328]
   17f49:	push   eax
   17f4a:	call   0x11d74
   17f4f:	test   al,al
   17f51:	je     0x17f59
   17f53:	push   esi
   17f54:	call   0x11ec8
   17f59:	push   DWORD PTR [ebp-0x320]
   17f5f:	call   0x114a6
   17f64:	call   eax
   17f66:	call   0x1b778
   17f6b:	ret    0xc
   17f6e:	int3   
   17f6f:	int3   
   17f70:	int3   
   17f71:	int3   
   17f72:	int3   
   17f73:	int3   
   17f74:	mov    edi,edi
   17f76:	push   ebp
   17f77:	mov    ebp,esp
   17f79:	push   ecx
   17f7a:	cli    
   17f7b:	mov    eax,cr0
   17f7e:	mov    DWORD PTR [ebp-0x4],eax
   17f81:	and    eax,0xfffeffff
   17f86:	mov    cr0,eax
   17f89:	push   0x16df8
   17f8e:	push   DWORD PTR ds:0x72ee0
   17f94:	call   0x18818
   17f99:	push   0x0
   17f9b:	push   0x17d2a
   17fa0:	mov    ds:0x72ee4,eax
   17fa5:	call   0x1125a
   17faa:	call   eax
   17fac:	push   0x16ce4
   17fb1:	call   0x11206
   17fb6:	call   eax
   17fb8:	mov    eax,DWORD PTR [ebp-0x4]
   17fbb:	mov    cr0,eax
   17fbe:	sti    
   17fbf:	leave  
   17fc0:	ret    
   17fc1:	int3   
   17fc2:	int3   
   17fc3:	int3   
   17fc4:	int3   
   17fc5:	int3   
   17fc6:	push   0xc
   17fc8:	push   0x72270
   17fcd:	call   0x1b424
   17fd2:	and    DWORD PTR [ebp-0x4],0x0
   17fd6:	push   DWORD PTR [ebp+0xc]
   17fd9:	push   DWORD PTR [ebp+0x8]
   17fdc:	call   0x16f28
   17fe1:	mov    esi,eax
   17fe3:	jmp    0x17ff8
   17fe5:	xor    eax,eax
   17fe7:	inc    eax
   17fe8:	ret    
   17fe9:	mov    esp,DWORD PTR [ebp-0x18]
   17fec:	push   0xd
   17fee:	call   0x12896
   17ff3:	mov    esi,0xc0000001
   17ff8:	mov    DWORD PTR [ebp-0x1c],esi
   17ffb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18002:	cmp    esi,0x103
   18008:	je     0x18018
   1800a:	mov    ecx,DWORD PTR [ebp+0xc]
   1800d:	mov    DWORD PTR [ecx+0x18],esi
   18010:	xor    dl,dl
   18012:	call   DWORD PTR ds:0x1ca24
   18018:	mov    eax,esi
   1801a:	call   0x1b469
   1801f:	ret    0x8
   18022:	int3   
   18023:	int3   
   18024:	int3   
   18025:	int3   
   18026:	int3   
   18027:	int3   
   18028:	push   0x854
   1802d:	push   0x72290
   18032:	call   0x1b730
   18037:	mov    esi,DWORD PTR [ebp+0x8]
   1803a:	mov    DWORD PTR [ebp-0x830],esi
   18040:	mov    edi,DWORD PTR [ebp+0xc]
   18043:	call   0x17cc4
   18048:	call   0x119bc
   1804d:	test   eax,eax
   1804f:	je     0x18626
   18055:	xor    ebx,ebx
   18057:	mov    DWORD PTR [ebp-0x834],ebx
   1805d:	call   0x17b32
   18062:	cmp    al,bl
   18064:	jne    0x18285
   1806a:	mov    DWORD PTR [ebp-0x4],ebx
   1806d:	push   ebx
   1806e:	push   0x72eb0
   18073:	call   0x1193e
   18078:	call   eax
   1807a:	push   0x10
   1807c:	call   0x11c16
   18081:	pop    ecx
   18082:	cmp    eax,ebx
   18084:	je     0x1809d
   18086:	lea    ecx,[ebp-0x81d]
   1808c:	push   ecx
   1808d:	lea    ecx,[ebp-0x81d]
   18093:	push   ecx
   18094:	mov    ecx,eax
   18096:	call   0x158ac
   1809b:	jmp    0x1809f
   1809d:	xor    eax,eax
   1809f:	mov    ecx,eax
   180a1:	mov    DWORD PTR ds:0x72ed8,ecx
   180a7:	call   0x15500
   180ac:	push   edi
   180ad:	push   0x1c7b8
   180b2:	lea    eax,[ebp-0x41c]
   180b8:	push   eax
   180b9:	call   0x1b418
   180be:	add    esp,0xc
   180c1:	push   0xffffffff
   180c3:	lea    eax,[ebp-0x41c]
   180c9:	push   eax
   180ca:	lea    ecx,[ebp-0x828]
   180d0:	call   0x12a48
   180d5:	lea    eax,[ebp-0x828]
   180db:	push   eax
   180dc:	mov    ecx,DWORD PTR ds:0x72ed8
   180e2:	call   0x15a36
   180e7:	mov    edi,eax
   180e9:	push   DWORD PTR [ebp-0x828]
   180ef:	call   0x11c4c
   180f4:	pop    ecx
   180f5:	lea    eax,[ebp-0x83c]
   180fb:	push   eax
   180fc:	call   0x11896
   18101:	call   eax
   18103:	push   ebx
   18104:	push   0x989680
   18109:	push   DWORD PTR [ebp-0x838]
   1810f:	push   DWORD PTR [ebp-0x83c]
   18115:	call   0x1b3dc
   1811a:	inc    eax
   1811b:	mov    DWORD PTR [edi+0x20],eax
   1811e:	cmp    eax,ebx
   18120:	jge    0x18129
   18122:	mov    DWORD PTR [edi+0x20],0x1
   18129:	push   0xffffffff
   1812b:	push   0x1c77e
   18130:	push   0x4
   18132:	push   0x1c778
   18137:	call   0x16666
   1813c:	push   eax
   1813d:	lea    ecx,[ebp-0x828]
   18143:	call   0x1326a
   18148:	lea    eax,[ebp-0x828]
   1814e:	push   eax
   1814f:	mov    ecx,edi
   18151:	call   0x12926
   18156:	push   DWORD PTR [ebp-0x828]
   1815c:	call   0x11c4c
   18161:	mov    DWORD PTR [esp],0x1c756
   18168:	push   0x4
   1816a:	push   0x1c74c
   1816f:	call   0x16596
   18174:	mov    DWORD PTR [ebp-0x824],eax
   1817a:	lea    ecx,[eax+0x2]
   1817d:	mov    dx,WORD PTR [eax]
   18180:	inc    eax
   18181:	inc    eax
   18182:	cmp    dx,bx
   18185:	jne    0x1817d
   18187:	sub    eax,ecx
   18189:	sar    eax,1
   1818b:	add    eax,eax
   1818d:	mov    WORD PTR [ebp-0x826],ax
   18194:	mov    WORD PTR [ebp-0x828],ax
   1819b:	mov    DWORD PTR [ebp-0x854],0x18
   181a5:	mov    DWORD PTR [ebp-0x850],ebx
   181ab:	mov    DWORD PTR [ebp-0x848],0x40
   181b5:	lea    eax,[ebp-0x828]
   181bb:	mov    DWORD PTR [ebp-0x84c],eax
   181c1:	mov    DWORD PTR [ebp-0x844],ebx
   181c7:	mov    DWORD PTR [ebp-0x840],ebx
   181cd:	mov    eax,DWORD PTR [ebp-0x824]
   181d3:	lea    ecx,[eax+0x2]
   181d6:	mov    dx,WORD PTR [eax]
   181d9:	inc    eax
   181da:	inc    eax
   181db:	cmp    dx,bx
   181de:	jne    0x181d6
   181e0:	sub    eax,ecx
   181e2:	sar    eax,1
   181e4:	mov    DWORD PTR [ebp-0x834],eax
   181ea:	push   0xffffffff
   181ec:	push   0x1c724
   181f1:	push   0x8
   181f3:	push   0x1c71a
   181f8:	call   0x16666
   181fd:	push   eax
   181fe:	lea    ecx,[ebp-0x828]
   18204:	call   0x1326a
   18209:	lea    ecx,[edi+0x8]
   1820c:	lea    eax,[ebp-0x828]
   18212:	push   eax
   18213:	call   0x12926
   18218:	push   DWORD PTR [ebp-0x828]
   1821e:	call   0x11c4c
   18223:	pop    ecx
   18224:	push   0xffffffff
   18226:	push   0x1b838
   1822b:	lea    ecx,[ebp-0x828]
   18231:	call   0x12a48
   18236:	lea    eax,[ebp-0x828]
   1823c:	push   eax
   1823d:	lea    ecx,[edi+0x10]
   18240:	call   0x12926
   18245:	push   DWORD PTR [ebp-0x828]
   1824b:	call   0x11c4c
   18250:	pop    ecx
   18251:	lea    eax,[edi+0x8]
   18254:	push   eax
   18255:	lea    ecx,[edi+0x18]
   18258:	call   0x12926
   1825d:	mov    eax,DWORD PTR [edi+0x20]
   18260:	or     DWORD PTR [ebp-0x834],eax
   18266:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1826d:	jmp    0x18285
   1826f:	xor    eax,eax
   18271:	inc    eax
   18272:	ret    
   18273:	mov    esp,DWORD PTR [ebp-0x18]
   18276:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1827d:	xor    ebx,ebx
   1827f:	mov    esi,DWORD PTR [ebp-0x830]
   18285:	cmp    DWORD PTR [ebp-0x834],ebx
   1828b:	jne    0x18626
   18291:	xor    eax,eax
   18293:	lea    edi,[ebp-0x844]
   18299:	stos   DWORD PTR es:[edi],eax
   1829a:	stos   DWORD PTR es:[edi],eax
   1829b:	mov    DWORD PTR [ebp-0x848],0xc
   182a5:	mov    DWORD PTR [ebp-0x844],0x2
   182af:	mov    BYTE PTR [ebp-0x840],bl
   182b5:	mov    BYTE PTR [ebp-0x83f],bl
   182bb:	push   0x72570
   182c0:	push   ebx
   182c1:	lea    eax,[ebp-0x848]
   182c7:	push   eax
   182c8:	call   0x1186c
   182cd:	call   eax
   182cf:	push   eax
   182d0:	call   0x11842
   182d5:	call   eax
   182d7:	push   0x10
   182d9:	call   0x11c16
   182de:	pop    ecx
   182df:	cmp    eax,ebx
   182e1:	je     0x182ff
   182e3:	lea    ecx,[ebp-0x81d]
   182e9:	push   ecx
   182ea:	lea    ecx,[ebp-0x81d]
   182f0:	push   ecx
   182f1:	mov    ecx,eax
   182f3:	call   0x158ac
   182f8:	mov    ds:0x72ed8,eax
   182fd:	jmp    0x18305
   182ff:	mov    DWORD PTR ds:0x72ed8,ebx
   18305:	push   0x10
   18307:	call   0x11c16
   1830c:	pop    ecx
   1830d:	cmp    eax,ebx
   1830f:	je     0x1832d
   18311:	lea    ecx,[ebp-0x81d]
   18317:	push   ecx
   18318:	lea    ecx,[ebp-0x81d]
   1831e:	push   ecx
   1831f:	mov    ecx,eax
   18321:	call   0x158c6
   18326:	mov    ds:0x72520,eax
   1832b:	jmp    0x18333
   1832d:	mov    DWORD PTR ds:0x72520,ebx
   18333:	push   0x10
   18335:	call   0x11c16
   1833a:	pop    ecx
   1833b:	cmp    eax,ebx
   1833d:	je     0x1835b
   1833f:	lea    ecx,[ebp-0x81d]
   18345:	push   ecx
   18346:	lea    ecx,[ebp-0x81d]
   1834c:	push   ecx
   1834d:	mov    ecx,eax
   1834f:	call   0x15ada
   18354:	mov    ds:0x725ac,eax
   18359:	jmp    0x18361
   1835b:	mov    DWORD PTR ds:0x725ac,ebx
   18361:	push   0x28
   18363:	call   0x11c16
   18368:	pop    ecx
   18369:	cmp    eax,ebx
   1836b:	je     0x1837f
   1836d:	push   0x64
   1836f:	push   0x14
   18371:	mov    ecx,eax
   18373:	call   0x17cf4
   18378:	mov    ds:0x7254c,eax
   1837d:	jmp    0x18385
   1837f:	mov    DWORD PTR ds:0x7254c,ebx
   18385:	push   0x20
   18387:	call   0x11c16
   1838c:	pop    ecx
   1838d:	cmp    eax,ebx
   1838f:	je     0x1839f
   18391:	mov    ecx,eax
   18393:	call   0x1584c
   18398:	mov    ds:0x72548,eax
   1839d:	jmp    0x183a5
   1839f:	mov    DWORD PTR ds:0x72548,ebx
   183a5:	call   0x1286e
   183aa:	call   0x1600c
   183af:	mov    edi,0x1c70a
   183b4:	push   edi
   183b5:	call   0x164e0
   183ba:	push   eax
   183bb:	push   0x1c6d6
   183c0:	push   0xa
   183c2:	push   0x1c6c0
   183c7:	call   0x16596
   183cc:	push   eax
   183cd:	lea    eax,[ebp-0x41c]
   183d3:	push   eax
   183d4:	call   0x1b40c
   183d9:	add    esp,0xc
   183dc:	lea    eax,[ebp-0x41c]
   183e2:	push   eax
   183e3:	lea    eax,[ebp-0x85c]
   183e9:	push   eax
   183ea:	call   0x114d0
   183ef:	call   eax
   183f1:	push   edi
   183f2:	call   0x164e0
   183f7:	push   eax
   183f8:	push   0x1c68a
   183fd:	push   0xe
   183ff:	push   0x1c66c
   18404:	call   0x16596
   18409:	push   eax
   1840a:	lea    eax,[ebp-0x81c]
   18410:	push   eax
   18411:	call   0x1b40c
   18416:	add    esp,0xc
   18419:	lea    eax,[ebp-0x81c]
   1841f:	push   eax
   18420:	lea    eax,[ebp-0x864]
   18426:	push   eax
   18427:	call   0x114d0
   1842c:	call   eax
   1842e:	push   0x72f18
   18433:	push   ebx
   18434:	push   0x100
   18439:	push   0x22
   1843b:	lea    eax,[ebp-0x85c]
   18441:	push   eax
   18442:	push   ebx
   18443:	push   esi
   18444:	call   0x11818
   18449:	call   eax
   1844b:	cmp    eax,ebx
   1844d:	jl     0x18628
   18453:	mov    eax,0x17fc6
   18458:	mov    DWORD PTR [esi+0x94],eax
   1845e:	mov    DWORD PTR [esi+0x90],eax
   18464:	mov    DWORD PTR [esi+0xa4],eax
   1846a:	mov    DWORD PTR [esi+0x70],eax
   1846d:	mov    DWORD PTR [esi+0x48],eax
   18470:	mov    DWORD PTR [esi+0x44],eax
   18473:	mov    DWORD PTR [esi+0x40],eax
   18476:	mov    DWORD PTR [esi+0x38],eax
   18479:	mov    eax,ds:0x72f18
   1847e:	or     DWORD PTR [eax+0x1c],0x4
   18482:	lea    eax,[ebp-0x85c]
   18488:	push   eax
   18489:	lea    eax,[ebp-0x864]
   1848f:	push   eax
   18490:	call   0x117ee
   18495:	call   eax
   18497:	mov    DWORD PTR [ebp-0x830],eax
   1849d:	cmp    eax,ebx
   1849f:	jge    0x184b6
   184a1:	push   DWORD PTR [esi+0x4]
   184a4:	call   0x1169e
   184a9:	call   eax
   184ab:	mov    eax,DWORD PTR [ebp-0x830]
   184b1:	jmp    0x18628
   184b6:	push   ebx
   184b7:	push   0x72eb0
   184bc:	call   0x1193e
   184c1:	call   eax
   184c3:	push   ebx
   184c4:	push   0x72550
   184c9:	call   0x1193e
   184ce:	call   eax
   184d0:	push   ebx
   184d1:	push   0x72524
   184d6:	call   0x1193e
   184db:	call   eax
   184dd:	push   0x8000000
   184e2:	push   0x1c630
   184e7:	push   0x9
   184e9:	push   0x1c264
   184ee:	call   0x16666
   184f3:	push   eax
   184f4:	lea    eax,[ebp-0x82c]
   184fa:	push   eax
   184fb:	call   0x18a62
   18500:	push   DWORD PTR [ebp-0x82c]
   18506:	call   0x113d4
   1850b:	call   eax
   1850d:	mov    DWORD PTR [ebp-0x838],eax
   18513:	push   ebx
   18514:	push   0x1c604
   18519:	push   0x16
   1851b:	push   0x1c5ec
   18520:	call   0x16666
   18525:	push   eax
   18526:	push   DWORD PTR [ebp-0x82c]
   1852c:	call   0x18948
   18531:	push   eax
   18532:	push   DWORD PTR [ebp-0x838]
   18538:	call   0x188ee
   1853d:	mov    edi,eax
   1853f:	add    edi,DWORD PTR [ebp-0x82c]
   18545:	mov    esi,0x1b83a
   1854a:	push   esi
   1854b:	call   0x1112a
   18550:	mov    DWORD PTR [ebp-0x824],eax
   18556:	push   edi
   18557:	call   0x18896
   1855c:	mov    ecx,DWORD PTR [ebp-0x824]
   18562:	mov    ecx,DWORD PTR [ecx]
   18564:	mov    eax,DWORD PTR [ecx+eax*4]
   18567:	mov    ds:0x72edc,eax
   1856c:	push   ebx
   1856d:	push   0x1c5b2
   18572:	push   0x14
   18574:	push   0x1c59c
   18579:	call   0x16666
   1857e:	push   eax
   1857f:	push   DWORD PTR [ebp-0x82c]
   18585:	call   0x18948
   1858a:	push   eax
   1858b:	push   DWORD PTR [ebp-0x838]
   18591:	call   0x188ee
   18596:	mov    edi,eax
   18598:	add    edi,DWORD PTR [ebp-0x82c]
   1859e:	push   esi
   1859f:	call   0x1112a
   185a4:	mov    DWORD PTR [ebp-0x824],eax
   185aa:	push   edi
   185ab:	call   0x18896
   185b0:	mov    ecx,DWORD PTR [ebp-0x824]
   185b6:	mov    ecx,DWORD PTR [ecx]
   185b8:	mov    eax,DWORD PTR [ecx+eax*4]
   185bb:	mov    ds:0x72ed0,eax
   185c0:	push   ebx
   185c1:	push   0x1c564
   185c6:	push   0xe
   185c8:	push   0x1c554
   185cd:	call   0x16666
   185d2:	push   eax
   185d3:	push   DWORD PTR [ebp-0x82c]
   185d9:	call   0x18948
   185de:	push   eax
   185df:	push   DWORD PTR [ebp-0x838]
   185e5:	call   0x188ee
   185ea:	mov    edi,eax
   185ec:	add    edi,DWORD PTR [ebp-0x82c]
   185f2:	push   esi
   185f3:	call   0x1112a
   185f8:	mov    esi,eax
   185fa:	push   edi
   185fb:	call   0x18896
   18600:	mov    ecx,DWORD PTR [esi]
   18602:	mov    eax,DWORD PTR [ecx+eax*4]
   18605:	mov    ds:0x72ee0,eax
   1860a:	push   DWORD PTR [ebp-0x82c]
   18610:	call   0x18bb2
   18615:	call   0x17f74
   1861a:	mov    BYTE PTR ds:0x72f1c,0x1
   18621:	jmp    0x184ab
   18626:	xor    eax,eax
   18628:	call   0x1b778
   1862d:	ret    0x8
   18630:	int3   
   18631:	int3   
   18632:	int3   
   18633:	int3   
   18634:	int3   
   18635:	int3   
   18636:	mov    edi,edi
   18638:	push   ebp
   18639:	mov    ebp,esp
   1863b:	push   ecx
   1863c:	mov    ecx,DWORD PTR [ebp+0x8]
   1863f:	mov    eax,DWORD PTR [ecx+0x4]
   18642:	mov    edx,DWORD PTR [ebp+0xc]
   18645:	push   ebx
   18646:	mov    ebx,DWORD PTR [edx+0x4]
   18649:	push   esi
   1864a:	push   edi
   1864b:	mov    DWORD PTR [ebp-0x4],eax
   1864e:	mov    DWORD PTR [ebp+0x8],eax
   18651:	cmp    eax,ebx
   18653:	jbe    0x18658
   18655:	mov    DWORD PTR [ebp+0x8],ebx
   18658:	xor    eax,eax
   1865a:	cmp    DWORD PTR [ebp+0x8],eax
   1865d:	jbe    0x18675
   1865f:	mov    esi,DWORD PTR [ecx]
   18661:	mov    edi,DWORD PTR [edx]
   18663:	mov    cl,BYTE PTR [esi+eax*1]
   18666:	mov    dl,BYTE PTR [edi+eax*1]
   18669:	cmp    cl,dl
   1866b:	jl     0x18682
   1866d:	jg     0x18686
   1866f:	inc    eax
   18670:	cmp    eax,DWORD PTR [ebp+0x8]
   18673:	jb     0x18663
   18675:	cmp    DWORD PTR [ebp-0x4],ebx
   18678:	setb   al
   1867b:	pop    edi
   1867c:	pop    esi
   1867d:	pop    ebx
   1867e:	leave  
   1867f:	ret    0x8
   18682:	mov    al,0x1
   18684:	jmp    0x1867b
   18686:	xor    al,al
   18688:	jmp    0x1867b
   1868a:	int3   
   1868b:	int3   
   1868c:	int3   
   1868d:	int3   
   1868e:	int3   
   1868f:	int3   
   18690:	mov    edi,edi
   18692:	push   ebp
   18693:	mov    ebp,esp
   18695:	mov    eax,DWORD PTR [ebp+0x8]
   18698:	mov    ecx,DWORD PTR [eax+0x4]
   1869b:	mov    edx,DWORD PTR [ebp+0xc]
   1869e:	cmp    ecx,DWORD PTR [edx+0x4]
   186a1:	je     0x186a7
   186a3:	xor    al,al
   186a5:	jmp    0x186b6
   186a7:	push   esi
   186a8:	mov    esi,DWORD PTR [eax]
   186aa:	push   edi
   186ab:	mov    edi,DWORD PTR [edx]
   186ad:	xor    eax,eax
   186af:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   186b1:	pop    edi
   186b2:	sete   al
   186b5:	pop    esi
   186b6:	pop    ebp
   186b7:	ret    0x8
   186ba:	int3   
   186bb:	int3   
   186bc:	int3   
   186bd:	int3   
   186be:	int3   
   186bf:	int3   
   186c0:	mov    edi,edi
   186c2:	push   ebp
   186c3:	mov    ebp,esp
   186c5:	push   DWORD PTR [ebp+0xc]
   186c8:	push   DWORD PTR [ebp+0x8]
   186cb:	call   0x18690
   186d0:	xor    ecx,ecx
   186d2:	test   al,al
   186d4:	sete   cl
   186d7:	mov    al,cl
   186d9:	pop    ebp
   186da:	ret    0x8
   186dd:	int3   
   186de:	int3   
   186df:	int3   
   186e0:	int3   
   186e1:	int3   
   186e2:	mov    edi,edi
   186e4:	push   ebp
   186e5:	mov    ebp,esp
   186e7:	push   ecx
   186e8:	mov    ecx,DWORD PTR [ebp+0x8]
   186eb:	mov    eax,DWORD PTR [ebp+0xc]
   186ee:	push   ebx
   186ef:	mov    ebx,DWORD PTR [eax+0x4]
   186f2:	push   esi
   186f3:	push   edi
   186f4:	mov    edi,DWORD PTR [ecx+0x4]
   186f7:	mov    DWORD PTR [ebp-0x4],edi
   186fa:	cmp    edi,ebx
   186fc:	jbe    0x18700
   186fe:	mov    edi,ebx
   18700:	and    DWORD PTR [ebp+0x8],0x0
   18704:	test   edi,edi
   18706:	jbe    0x18726
   18708:	mov    eax,DWORD PTR [eax]
   1870a:	mov    ecx,DWORD PTR [ecx]
   1870c:	sub    ecx,eax
   1870e:	movzx  edx,WORD PTR [ecx+eax*1]
   18712:	movzx  esi,WORD PTR [eax]
   18715:	cmp    dx,si
   18718:	jb     0x18733
   1871a:	ja     0x18737
   1871c:	inc    DWORD PTR [ebp+0x8]
   1871f:	inc    eax
   18720:	inc    eax
   18721:	cmp    DWORD PTR [ebp+0x8],edi
   18724:	jb     0x1870e
   18726:	cmp    DWORD PTR [ebp-0x4],ebx
   18729:	setb   al
   1872c:	pop    edi
   1872d:	pop    esi
   1872e:	pop    ebx
   1872f:	leave  
   18730:	ret    0x8
   18733:	mov    al,0x1
   18735:	jmp    0x1872c
   18737:	xor    al,al
   18739:	jmp    0x1872c
   1873b:	int3   
   1873c:	int3   
   1873d:	int3   
   1873e:	int3   
   1873f:	int3   
   18740:	mov    edi,edi
   18742:	push   ebp
   18743:	mov    ebp,esp
   18745:	pop    ebp
   18746:	jmp    0x18636
   1874b:	int3   
   1874c:	int3   
   1874d:	int3   
   1874e:	int3   
   1874f:	int3   
   18750:	mov    edi,edi
   18752:	push   ebp
   18753:	mov    ebp,esp
   18755:	pop    ebp
   18756:	jmp    0x18690
   1875b:	int3   
   1875c:	int3   
   1875d:	int3   
   1875e:	int3   
   1875f:	int3   
   18760:	mov    edi,edi
   18762:	push   ebp
   18763:	mov    ebp,esp
   18765:	pop    ebp
   18766:	jmp    0x186c0
   1876b:	int3   
   1876c:	int3   
   1876d:	int3   
   1876e:	int3   
   1876f:	int3   
   18770:	mov    edi,edi
   18772:	push   ebp
   18773:	mov    ebp,esp
   18775:	pop    ebp
   18776:	jmp    0x186e2
   1877b:	int3   
   1877c:	int3   
   1877d:	int3   
   1877e:	int3   
   1877f:	int3   
   18780:	mov    edi,edi
   18782:	push   ebp
   18783:	mov    ebp,esp
   18785:	mov    eax,DWORD PTR [ebp+0x8]
   18788:	mov    cl,BYTE PTR [ebp+0xc]
   1878b:	mov    BYTE PTR [eax],cl
   1878d:	inc    eax
   1878e:	pop    ebp
   1878f:	ret    0x8
   18792:	int3   
   18793:	int3   
   18794:	int3   
   18795:	int3   
   18796:	int3   
   18797:	int3   
   18798:	mov    edi,edi
   1879a:	push   ebp
   1879b:	mov    ebp,esp
   1879d:	mov    eax,DWORD PTR [ebp+0x8]
   187a0:	mov    ecx,DWORD PTR [ebp+0xc]
   187a3:	mov    DWORD PTR [eax],ecx
   187a5:	add    eax,0x4
   187a8:	pop    ebp
   187a9:	ret    0x8
   187ac:	int3   
   187ad:	int3   
   187ae:	int3   
   187af:	int3   
   187b0:	int3   
   187b1:	int3   
   187b2:	mov    edi,edi
   187b4:	push   ebp
   187b5:	mov    ebp,esp
   187b7:	mov    eax,DWORD PTR [ebp+0x8]
   187ba:	mov    cx,WORD PTR [ebp+0xc]
   187be:	mov    WORD PTR [eax],cx
   187c1:	add    eax,0x2
   187c4:	pop    ebp
   187c5:	ret    0x8
   187c8:	int3   
   187c9:	int3   
   187ca:	int3   
   187cb:	int3   
   187cc:	int3   
   187cd:	int3   
   187ce:	mov    edi,edi
   187d0:	push   ebp
   187d1:	mov    ebp,esp
   187d3:	push   esi
   187d4:	mov    esi,DWORD PTR [ebp+0x10]
   187d7:	push   edi
   187d8:	mov    edi,DWORD PTR [ebp+0x8]
   187db:	push   esi
   187dc:	push   DWORD PTR [ebp+0xc]
   187df:	push   edi
   187e0:	call   0x1b400
   187e5:	add    esp,0xc
   187e8:	lea    eax,[edi+esi*1]
   187eb:	pop    edi
   187ec:	pop    esi
   187ed:	pop    ebp
   187ee:	ret    0xc
   187f1:	int3   
   187f2:	int3   
   187f3:	int3   
   187f4:	int3   
   187f5:	int3   
   187f6:	mov    edi,edi
   187f8:	push   ebp
   187f9:	mov    ebp,esp
   187fb:	mov    eax,DWORD PTR [ebp+0xc]
   187fe:	mov    ecx,DWORD PTR [ebp+0x8]
   18801:	sub    ecx,eax
   18803:	sub    ecx,0x5
   18806:	mov    DWORD PTR [eax+0x1],ecx
   18809:	mov    BYTE PTR [eax],0xe9
   1880c:	add    eax,0x5
   1880f:	pop    ebp
   18810:	ret    0x8
   18813:	int3   
   18814:	int3   
   18815:	int3   
   18816:	int3   
   18817:	int3   
   18818:	mov    edi,edi
   1881a:	push   ebp
   1881b:	mov    ebp,esp
   1881d:	push   ecx
   1881e:	push   ebx
   1881f:	mov    ebx,DWORD PTR [ebp+0x8]
   18822:	and    DWORD PTR [ebp+0x8],0x0
   18826:	push   edi
   18827:	mov    edi,ebx
   18829:	test   ebx,ebx
   1882b:	jne    0x18831
   1882d:	xor    eax,eax
   1882f:	jmp    0x1888b
   18831:	push   esi
   18832:	push   0x20736649
   18837:	push   0x80
   1883c:	push   0x0
   1883e:	call   DWORD PTR ds:0x1ca30
   18844:	mov    esi,eax
   18846:	mov    DWORD PTR [ebp-0x4],esi
   18849:	push   0x0
   1884b:	push   edi
   1884c:	push   esi
   1884d:	call   0x18f34
   18852:	mov    ecx,eax
   18854:	sub    ecx,edi
   18856:	add    DWORD PTR [ebp+0x8],ecx
   18859:	add    esi,ecx
   1885b:	cmp    DWORD PTR [ebp+0x8],0x5
   1885f:	mov    edi,eax
   18861:	jb     0x18849
   18863:	push   DWORD PTR [ebp+0x8]
   18866:	push   0x90
   1886b:	push   ebx
   1886c:	call   0x1b3e8
   18871:	add    esp,0xc
   18874:	push   esi
   18875:	lea    eax,[ebx+0x5]
   18878:	push   eax
   18879:	call   0x187f6
   1887e:	push   ebx
   1887f:	push   DWORD PTR [ebp+0xc]
   18882:	call   0x187f6
   18887:	mov    eax,DWORD PTR [ebp-0x4]
   1888a:	pop    esi
   1888b:	pop    edi
   1888c:	pop    ebx
   1888d:	leave  
   1888e:	ret    0x8
   18891:	int3   
   18892:	int3   
   18893:	int3   
   18894:	int3   
   18895:	int3   
   18896:	mov    edi,edi
   18898:	push   ebp
   18899:	mov    ebp,esp
   1889b:	mov    eax,DWORD PTR [ebp+0x8]
   1889e:	mov    eax,DWORD PTR [eax+0x1]
   188a1:	pop    ebp
   188a2:	ret    0x4
   188a5:	int3   
   188a6:	int3   
   188a7:	int3   
   188a8:	int3   
   188a9:	int3   
   188aa:	mov    edi,edi
   188ac:	push   ebp
   188ad:	mov    ebp,esp
   188af:	mov    ecx,DWORD PTR [ebp+0x8]
   188b2:	movzx  eax,WORD PTR [ecx+0x14]
   188b6:	lea    eax,[eax+ecx*1+0x18]
   188ba:	movzx  ecx,WORD PTR [ecx+0x6]
   188be:	push   esi
   188bf:	xor    esi,esi
   188c1:	push   edi
   188c2:	test   ecx,ecx
   188c4:	jbe    0x188e0
   188c6:	mov    edx,DWORD PTR [eax+0xc]
   188c9:	cmp    DWORD PTR [ebp+0xc],edx
   188cc:	jb     0x188d8
   188ce:	mov    edi,DWORD PTR [eax+0x8]
   188d1:	add    edi,edx
   188d3:	cmp    DWORD PTR [ebp+0xc],edi
   188d6:	jb     0x188e2
   188d8:	add    eax,0x28
   188db:	inc    esi
   188dc:	cmp    esi,ecx
   188de:	jb     0x188c6
   188e0:	xor    eax,eax
   188e2:	pop    edi
   188e3:	pop    esi
   188e4:	pop    ebp
   188e5:	ret    0x8
   188e8:	int3   
   188e9:	int3   
   188ea:	int3   
   188eb:	int3   
   188ec:	int3   
   188ed:	int3   
   188ee:	mov    edi,edi
   188f0:	push   ebp
   188f1:	mov    ebp,esp
   188f3:	push   esi
   188f4:	push   DWORD PTR [ebp+0xc]
   188f7:	mov    esi,DWORD PTR [ebp+0x8]
   188fa:	push   esi
   188fb:	call   0x188aa
   18900:	mov    ecx,eax
   18902:	test   ecx,ecx
   18904:	je     0x18917
   18906:	mov    eax,DWORD PTR [esi+0x3c]
   18909:	dec    eax
   1890a:	not    eax
   1890c:	and    eax,DWORD PTR [ecx+0x14]
   1890f:	sub    eax,DWORD PTR [ecx+0xc]
   18912:	add    eax,DWORD PTR [ebp+0xc]
   18915:	jmp    0x1891a
   18917:	mov    eax,DWORD PTR [ebp+0xc]
   1891a:	pop    esi
   1891b:	pop    ebp
   1891c:	ret    0x8
   1891f:	int3   
   18920:	int3   
   18921:	int3   
   18922:	int3   
   18923:	int3   
   18924:	mov    edi,edi
   18926:	push   ebp
   18927:	mov    ebp,esp
   18929:	cmp    DWORD PTR [ebp+0x10],0x0
   1892d:	je     0x18934
   1892f:	mov    eax,DWORD PTR [ebp+0xc]
   18932:	jmp    0x1893f
   18934:	push   DWORD PTR [ebp+0xc]
   18937:	push   DWORD PTR [ebp+0x8]
   1893a:	call   0x188ee
   1893f:	pop    ebp
   18940:	ret    0xc
   18943:	int3   
   18944:	int3   
   18945:	int3   
   18946:	int3   
   18947:	int3   
   18948:	mov    edi,edi
   1894a:	push   ebp
   1894b:	mov    ebp,esp
   1894d:	sub    esp,0x1c
   18950:	push   ebx
   18951:	push   esi
   18952:	mov    esi,DWORD PTR [ebp+0x8]
   18955:	push   edi
   18956:	push   esi
   18957:	call   0x113d4
   1895c:	call   eax
   1895e:	mov    ebx,eax
   18960:	lea    eax,[ebp-0x14]
   18963:	push   eax
   18964:	push   0x0
   18966:	push   0x0
   18968:	push   esi
   18969:	mov    DWORD PTR [ebp-0x4],ebx
   1896c:	call   0x113fe
   18971:	call   eax
   18973:	mov    edi,eax
   18975:	mov    eax,DWORD PTR [ebx+0x50]
   18978:	mov    ecx,edi
   1897a:	sub    ecx,esi
   1897c:	cmp    eax,ecx
   1897e:	jb     0x189cf
   18980:	mov    ecx,DWORD PTR [ebp-0x14]
   18983:	sub    ecx,esi
   18985:	add    ecx,edi
   18987:	cmp    eax,ecx
   18989:	jb     0x189cf
   1898b:	push   DWORD PTR [ebp+0x10]
   1898e:	push   DWORD PTR [edi+0x20]
   18991:	push   ebx
   18992:	call   0x18924
   18997:	push   DWORD PTR [ebp+0x10]
   1899a:	mov    ebx,eax
   1899c:	push   DWORD PTR [edi+0x1c]
   1899f:	add    ebx,esi
   189a1:	push   DWORD PTR [ebp-0x4]
   189a4:	call   0x18924
   189a9:	push   DWORD PTR [ebp+0x10]
   189ac:	add    eax,esi
   189ae:	push   DWORD PTR [edi+0x24]
   189b1:	mov    DWORD PTR [ebp-0x1c],eax
   189b4:	push   DWORD PTR [ebp-0x4]
   189b7:	call   0x18924
   189bc:	and    DWORD PTR [ebp-0xc],0x0
   189c0:	add    eax,esi
   189c2:	mov    esi,DWORD PTR [edi+0x18]
   189c5:	mov    DWORD PTR [ebp-0x18],eax
   189c8:	mov    DWORD PTR [ebp-0x8],esi
   189cb:	test   esi,esi
   189cd:	jg     0x189db
   189cf:	xor    eax,eax
   189d1:	pop    edi
   189d2:	pop    esi
   189d3:	pop    ebx
   189d4:	leave  
   189d5:	ret    0xc
   189d8:	mov    esi,DWORD PTR [ebp-0x8]
   189db:	mov    eax,DWORD PTR [ebp-0xc]
   189de:	push   DWORD PTR [ebp+0x10]
   189e1:	add    esi,eax
   189e3:	mov    eax,DWORD PTR [ebp+0xc]
   189e6:	sar    esi,1
   189e8:	push   DWORD PTR [ebx+esi*4]
   189eb:	mov    DWORD PTR [ebp-0x10],eax
   189ee:	push   DWORD PTR [ebp-0x4]
   189f1:	call   0x18924
   189f6:	add    eax,DWORD PTR [ebp+0x8]
   189f9:	mov    cl,BYTE PTR [eax]
   189fb:	mov    edx,DWORD PTR [ebp-0x10]
   189fe:	cmp    cl,BYTE PTR [edx]
   18a00:	jne    0x18a1d
   18a02:	test   cl,cl
   18a04:	je     0x18a19
   18a06:	mov    cl,BYTE PTR [eax+0x1]
   18a09:	cmp    cl,BYTE PTR [edx+0x1]
   18a0c:	jne    0x18a1d
   18a0e:	inc    eax
   18a0f:	inc    eax
   18a10:	inc    edx
   18a11:	inc    edx
   18a12:	mov    DWORD PTR [ebp-0x10],edx
   18a15:	test   cl,cl
   18a17:	jne    0x189f9
   18a19:	xor    eax,eax
   18a1b:	jmp    0x18a22
   18a1d:	sbb    eax,eax
   18a1f:	sbb    eax,0xffffffff
   18a22:	test   eax,eax
   18a24:	je     0x18a3b
   18a26:	jge    0x18a2e
   18a28:	inc    esi
   18a29:	mov    DWORD PTR [ebp-0xc],esi
   18a2c:	jmp    0x18a31
   18a2e:	mov    DWORD PTR [ebp-0x8],esi
   18a31:	mov    eax,DWORD PTR [ebp-0x8]
   18a34:	cmp    DWORD PTR [ebp-0xc],eax
   18a37:	jl     0x189d8
   18a39:	jmp    0x189cf
   18a3b:	mov    eax,DWORD PTR [ebp-0x18]
   18a3e:	movzx  eax,WORD PTR [eax+esi*2]
   18a42:	mov    ecx,DWORD PTR [ebp-0x1c]
   18a45:	mov    ecx,DWORD PTR [ecx+eax*4]
   18a48:	mov    eax,ecx
   18a4a:	sub    eax,edi
   18a4c:	add    eax,DWORD PTR [ebp+0x8]
   18a4f:	cmp    eax,DWORD PTR [ebp-0x14]
   18a52:	sbb    eax,eax
   18a54:	not    eax
   18a56:	and    eax,ecx
   18a58:	jmp    0x189d1
   18a5d:	int3   
   18a5e:	int3   
   18a5f:	int3   
   18a60:	int3   
   18a61:	int3   
   18a62:	mov    edi,edi
   18a64:	push   ebp
   18a65:	mov    ebp,esp
   18a67:	sub    esp,0x814
   18a6d:	mov    eax,ds:0x72518
   18a72:	xor    eax,ebp
   18a74:	mov    DWORD PTR [ebp-0x4],eax
   18a77:	mov    ecx,DWORD PTR [ebp+0xc]
   18a7a:	push   ebx
   18a7b:	mov    ebx,DWORD PTR [ebp+0x8]
   18a7e:	push   esi
   18a7f:	push   edi
   18a80:	xor    esi,esi
   18a82:	xor    eax,eax
   18a84:	push   ecx
   18a85:	mov    DWORD PTR [ebp-0x7ec],esi
   18a8b:	lea    edi,[ebp-0x7e8]
   18a91:	stos   DWORD PTR es:[edi],eax
   18a92:	lea    eax,[ebp-0x7d4]
   18a98:	push   0x1c7bc
   18a9d:	push   eax
   18a9e:	mov    DWORD PTR [ebp-0x7d8],esi
   18aa4:	mov    DWORD PTR [ebp-0x7e4],esi
   18aaa:	call   DWORD PTR ds:0x1ca28
   18ab0:	add    esp,0xc
   18ab3:	lea    eax,[ebp-0x7d4]
   18ab9:	push   eax
   18aba:	lea    eax,[ebp-0x80c]
   18ac0:	push   eax
   18ac1:	call   0x114d0
   18ac6:	call   eax
   18ac8:	push   0x10
   18aca:	lea    eax,[ebp-0x80c]
   18ad0:	mov    DWORD PTR [ebp-0x7fc],eax
   18ad6:	push   0x1
   18ad8:	lea    eax,[ebp-0x814]
   18ade:	push   eax
   18adf:	lea    eax,[ebp-0x804]
   18ae5:	push   eax
   18ae6:	push   0x80100000
   18aeb:	lea    eax,[ebp-0x7dc]
   18af1:	push   eax
   18af2:	mov    DWORD PTR [ebp-0x804],0x18
   18afc:	mov    DWORD PTR [ebp-0x800],esi
   18b02:	mov    DWORD PTR [ebp-0x7f8],esi
   18b08:	mov    DWORD PTR [ebp-0x7f4],esi
   18b0e:	mov    DWORD PTR [ebp-0x7f0],esi
   18b14:	call   0x11284
   18b19:	call   eax
   18b1b:	cmp    eax,esi
   18b1d:	jl     0x18b9b
   18b1f:	push   DWORD PTR [ebp-0x7dc]
   18b25:	lea    eax,[ebp-0x7ec]
   18b2b:	push   DWORD PTR [ebp+0x10]
   18b2e:	push   0x2
   18b30:	push   eax
   18b31:	push   esi
   18b32:	push   0x4
   18b34:	lea    eax,[ebp-0x7e0]
   18b3a:	push   eax
   18b3b:	call   0x118ea
   18b40:	call   eax
   18b42:	push   DWORD PTR [ebp-0x7dc]
   18b48:	mov    edi,eax
   18b4a:	call   0x114a6
   18b4f:	call   eax
   18b51:	cmp    edi,esi
   18b53:	jge    0x18b59
   18b55:	mov    eax,edi
   18b57:	jmp    0x18b9b
   18b59:	push   0x2
   18b5b:	push   esi
   18b5c:	push   0x2
   18b5e:	lea    eax,[ebp-0x7e4]
   18b64:	push   eax
   18b65:	push   esi
   18b66:	push   esi
   18b67:	push   esi
   18b68:	lea    eax,[ebp-0x7d8]
   18b6e:	push   eax
   18b6f:	push   0xffffffff
   18b71:	push   DWORD PTR [ebp-0x7e0]
   18b77:	call   0x118c0
   18b7c:	call   eax
   18b7e:	push   DWORD PTR [ebp-0x7e0]
   18b84:	mov    edi,eax
   18b86:	call   0x114a6
   18b8b:	call   eax
   18b8d:	cmp    edi,esi
   18b8f:	jl     0x18b55
   18b91:	mov    eax,DWORD PTR [ebp-0x7d8]
   18b97:	mov    DWORD PTR [ebx],eax
   18b99:	xor    eax,eax
   18b9b:	mov    ecx,DWORD PTR [ebp-0x4]
   18b9e:	pop    edi
   18b9f:	pop    esi
   18ba0:	xor    ecx,ebp
   18ba2:	pop    ebx
   18ba3:	call   0x1b38f
   18ba8:	leave  
   18ba9:	ret    0xc
   18bac:	int3   
   18bad:	int3   
   18bae:	int3   
   18baf:	int3   
   18bb0:	int3   
   18bb1:	int3   
   18bb2:	mov    edi,edi
   18bb4:	push   ebp
   18bb5:	mov    ebp,esp
   18bb7:	push   DWORD PTR [ebp+0x8]
   18bba:	push   0xffffffff
   18bbc:	call   0x11914
   18bc1:	call   eax
   18bc3:	pop    ebp
   18bc4:	ret    0x4
   18bc7:	int3   
   18bc8:	int3   
   18bc9:	int3   
   18bca:	int3   
   18bcb:	int3   
   18bcc:	mov    edi,edi
   18bce:	push   ebp
   18bcf:	mov    ebp,esp
   18bd1:	push   esi
   18bd2:	mov    esi,DWORD PTR [ebp+0x8]
   18bd5:	test   esi,esi
   18bd7:	jne    0x18bdc
   18bd9:	lea    esi,[ecx+0x18]
   18bdc:	mov    edx,DWORD PTR [ebp+0xc]
   18bdf:	test   edx,edx
   18be1:	jne    0x18be7
   18be3:	xor    eax,eax
   18be5:	jmp    0x18bf7
   18be7:	movzx  eax,BYTE PTR [edx]
   18bea:	push   edx
   18beb:	lea    eax,[eax*8+0x6e5c8]
   18bf2:	push   esi
   18bf3:	push   eax
   18bf4:	call   DWORD PTR [eax+0x4]
   18bf7:	pop    esi
   18bf8:	pop    ebp
   18bf9:	ret    0x8
   18bfc:	int3   
   18bfd:	int3   
   18bfe:	int3   
   18bff:	int3   
   18c00:	int3   
   18c01:	int3   
   18c02:	mov    edi,edi
   18c04:	push   ebp
   18c05:	mov    ebp,esp
   18c07:	mov    eax,DWORD PTR [ebp+0x14]
   18c0a:	push   ebx
   18c0b:	mov    ebx,DWORD PTR [ebp+0x8]
   18c0e:	push   esi
   18c0f:	mov    esi,DWORD PTR [ebp+0x10]
   18c12:	sub    esi,eax
   18c14:	push   edi
   18c15:	lea    edi,[ebx+eax*1]
   18c18:	mov    eax,esi
   18c1a:	xor    edx,edx
   18c1c:	dec    eax
   18c1d:	je     0x18c3e
   18c1f:	dec    eax
   18c20:	je     0x18c30
   18c22:	dec    eax
   18c23:	dec    eax
   18c24:	jne    0x18c4a
   18c26:	mov    eax,DWORD PTR [ecx+0xc]
   18c29:	mov    edx,DWORD PTR [edi]
   18c2b:	and    DWORD PTR [eax],0x0
   18c2e:	jmp    0x18c4a
   18c30:	mov    eax,DWORD PTR [ecx+0xc]
   18c33:	movsx  edx,WORD PTR [edi]
   18c36:	mov    DWORD PTR [eax],0x2
   18c3c:	jmp    0x18c4a
   18c3e:	mov    eax,DWORD PTR [ecx+0xc]
   18c41:	movsx  edx,BYTE PTR [edi]
   18c44:	mov    DWORD PTR [eax],0x3
   18c4a:	mov    ecx,DWORD PTR [ebp+0xc]
   18c4d:	lea    eax,[edx+ecx*1]
   18c50:	add    eax,DWORD PTR [ebp+0x10]
   18c53:	sub    edx,ebx
   18c55:	add    edx,ecx
   18c57:	dec    esi
   18c58:	je     0x18c6a
   18c5a:	dec    esi
   18c5b:	je     0x18c65
   18c5d:	dec    esi
   18c5e:	dec    esi
   18c5f:	jne    0x18c6c
   18c61:	mov    DWORD PTR [edi],edx
   18c63:	jmp    0x18c6c
   18c65:	mov    WORD PTR [edi],dx
   18c68:	jmp    0x18c6c
   18c6a:	mov    BYTE PTR [edi],dl
   18c6c:	pop    edi
   18c6d:	pop    esi
   18c6e:	pop    ebx
   18c6f:	pop    ebp
   18c70:	ret    0x10
   18c73:	int3   
   18c74:	int3   
   18c75:	int3   
   18c76:	int3   
   18c77:	int3   
   18c78:	mov    edi,edi
   18c7a:	push   ebp
   18c7b:	mov    ebp,esp
   18c7d:	mov    eax,DWORD PTR [ebp+0x10]
   18c80:	inc    eax
   18c81:	pop    ebp
   18c82:	ret    0xc
   18c85:	int3   
   18c86:	int3   
   18c87:	int3   
   18c88:	int3   
   18c89:	int3   
   18c8a:	mov    edi,edi
   18c8c:	push   ebp
   18c8d:	mov    ebp,esp
   18c8f:	mov    eax,ecx
   18c91:	mov    ecx,DWORD PTR [ebp+0x8]
   18c94:	and    DWORD PTR [eax],0x0
   18c97:	and    DWORD PTR [eax+0x4],0x0
   18c9b:	test   ecx,ecx
   18c9d:	jne    0x18ca2
   18c9f:	lea    ecx,[eax+0x14]
   18ca2:	mov    edx,DWORD PTR [ebp+0xc]
   18ca5:	mov    DWORD PTR [eax+0x8],ecx
   18ca8:	test   edx,edx
   18caa:	jne    0x18caf
   18cac:	lea    edx,[eax+0x10]
   18caf:	mov    DWORD PTR [eax+0xc],edx
   18cb2:	and    DWORD PTR [ecx],0x0
   18cb5:	mov    ecx,DWORD PTR [eax+0xc]
   18cb8:	and    DWORD PTR [ecx],0x0
   18cbb:	pop    ebp
   18cbc:	ret    0x8
   18cbf:	int3   
   18cc0:	int3   
   18cc1:	int3   
   18cc2:	int3   
   18cc3:	int3   
   18cc4:	mov    edi,edi
   18cc6:	push   ebp
   18cc7:	mov    ebp,esp
   18cc9:	push   ecx
   18cca:	mov    eax,DWORD PTR [ebp+0x8]
   18ccd:	mov    eax,DWORD PTR [eax]
   18ccf:	push   ebx
   18cd0:	push   esi
   18cd1:	push   edi
   18cd2:	mov    DWORD PTR [ebp-0x4],ecx
   18cd5:	mov    esi,eax
   18cd7:	test   eax,0x200000
   18cdc:	je     0x18ce9
   18cde:	cmp    DWORD PTR [ecx+0x4],0x0
   18ce2:	je     0x18cee
   18ce4:	shr    esi,0xb
   18ce7:	jmp    0x18cf1
   18ce9:	cmp    DWORD PTR [ecx],0x0
   18cec:	jmp    0x18ce2
   18cee:	shr    esi,0x8
   18cf1:	mov    ebx,DWORD PTR [ebp+0x10]
   18cf4:	and    esi,0x7
   18cf7:	shr    eax,0xe
   18cfa:	and    eax,0x7
   18cfd:	mov    edi,esi
   18cff:	jbe    0x18d3b
   18d01:	add    eax,ebx
   18d03:	mov    cl,BYTE PTR [eax]
   18d05:	movzx  edx,cl
   18d08:	mov    dl,BYTE PTR [edx+0x6e4c8]
   18d0e:	test   dl,0x10
   18d11:	je     0x18d33
   18d13:	mov    al,BYTE PTR [eax+0x1]
   18d16:	and    al,0x7
   18d18:	cmp    al,0x5
   18d1a:	jne    0x18d33
   18d1c:	and    cl,0xc0
   18d1f:	je     0x18d30
   18d21:	cmp    cl,0x40
   18d24:	jne    0x18d2b
   18d26:	lea    edi,[esi+0x1]
   18d29:	jmp    0x18d33
   18d2b:	cmp    cl,0x80
   18d2e:	jne    0x18d33
   18d30:	lea    edi,[esi+0x4]
   18d33:	movzx  eax,dl
   18d36:	and    eax,0xf
   18d39:	add    edi,eax
   18d3b:	push   edi
   18d3c:	push   ebx
   18d3d:	push   DWORD PTR [ebp+0xc]
   18d40:	call   0x1b400
   18d45:	mov    ecx,DWORD PTR [ebp+0x8]
   18d48:	mov    eax,DWORD PTR [ecx]
   18d4a:	shl    eax,0xc
   18d4d:	sar    eax,0x1d
   18d50:	add    esp,0xc
   18d53:	test   eax,eax
   18d55:	je     0x18d71
   18d57:	push   eax
   18d58:	push   esi
   18d59:	mov    esi,DWORD PTR [ebp-0x4]
   18d5c:	push   ebx
   18d5d:	push   DWORD PTR [ebp+0xc]
   18d60:	mov    ecx,esi
   18d62:	call   0x18c02
   18d67:	mov    ecx,DWORD PTR [esi+0x8]
   18d6a:	mov    DWORD PTR [ecx],eax
   18d6c:	mov    ecx,DWORD PTR [ebp+0x8]
   18d6f:	jmp    0x18d74
   18d71:	mov    esi,DWORD PTR [ebp-0x4]
   18d74:	test   DWORD PTR [ecx],0x400000
   18d7a:	je     0x18d81
   18d7c:	mov    eax,DWORD PTR [esi+0xc]
   18d7f:	neg    DWORD PTR [eax]
   18d81:	test   DWORD PTR [ecx],0x100000
   18d87:	je     0x18d8f
   18d89:	mov    eax,DWORD PTR [esi+0x8]
   18d8c:	or     DWORD PTR [eax],0xffffffff
   18d8f:	lea    eax,[edi+ebx*1]
   18d92:	pop    edi
   18d93:	pop    esi
   18d94:	pop    ebx
   18d95:	leave  
   18d96:	ret    0xc
   18d99:	int3   
   18d9a:	int3   
   18d9b:	int3   
   18d9c:	int3   
   18d9d:	int3   
   18d9e:	mov    edi,edi
   18da0:	push   ebp
   18da1:	mov    ebp,esp
   18da3:	push   ebx
   18da4:	push   esi
   18da5:	mov    esi,DWORD PTR [ebp+0x10]
   18da8:	push   edi
   18da9:	mov    edi,DWORD PTR [ebp+0xc]
   18dac:	push   esi
   18dad:	push   edi
   18dae:	push   DWORD PTR [ebp+0x8]
   18db1:	mov    ebx,ecx
   18db3:	call   0x18cc4
   18db8:	lea    eax,[esi+0x1]
   18dbb:	movzx  edx,BYTE PTR [eax]
   18dbe:	push   eax
   18dbf:	inc    edi
   18dc0:	lea    edx,[edx*8+0x6e5c8]
   18dc7:	push   edi
   18dc8:	push   edx
   18dc9:	mov    ecx,ebx
   18dcb:	call   DWORD PTR [edx+0x4]
   18dce:	pop    edi
   18dcf:	pop    esi
   18dd0:	pop    ebx
   18dd1:	pop    ebp
   18dd2:	ret    0xc
   18dd5:	int3   
   18dd6:	int3   
   18dd7:	int3   
   18dd8:	int3   
   18dd9:	int3   
   18dda:	mov    edi,edi
   18ddc:	push   ebp
   18ddd:	mov    ebp,esp
   18ddf:	push   ebx
   18de0:	push   esi
   18de1:	mov    esi,DWORD PTR [ebp+0x10]
   18de4:	push   edi
   18de5:	mov    edi,DWORD PTR [ebp+0xc]
   18de8:	push   esi
   18de9:	push   edi
   18dea:	push   DWORD PTR [ebp+0x8]
   18ded:	mov    ebx,ecx
   18def:	call   0x18cc4
   18df4:	lea    eax,[esi+0x1]
   18df7:	movzx  edx,BYTE PTR [eax]
   18dfa:	push   eax
   18dfb:	inc    edi
   18dfc:	lea    edx,[edx*8+0x6edd0]
   18e03:	push   edi
   18e04:	push   edx
   18e05:	mov    ecx,ebx
   18e07:	call   DWORD PTR [edx+0x4]
   18e0a:	pop    edi
   18e0b:	pop    esi
   18e0c:	pop    ebx
   18e0d:	pop    ebp
   18e0e:	ret    0xc
   18e11:	int3   
   18e12:	int3   
   18e13:	int3   
   18e14:	int3   
   18e15:	int3   
   18e16:	mov    edi,edi
   18e18:	push   ebp
   18e19:	mov    ebp,esp
   18e1b:	mov    DWORD PTR [ecx],0x1
   18e21:	pop    ebp
   18e22:	jmp    0x18d9e
   18e27:	int3   
   18e28:	int3   
   18e29:	int3   
   18e2a:	int3   
   18e2b:	int3   
   18e2c:	mov    edi,edi
   18e2e:	push   ebp
   18e2f:	mov    ebp,esp
   18e31:	mov    DWORD PTR [ecx+0x4],0x1
   18e38:	pop    ebp
   18e39:	jmp    0x18d9e
   18e3e:	int3   
   18e3f:	int3   
   18e40:	int3   
   18e41:	int3   
   18e42:	int3   
   18e43:	int3   
   18e44:	mov    edi,edi
   18e46:	push   ebp
   18e47:	mov    ebp,esp
   18e49:	mov    eax,DWORD PTR [ebp+0x10]
   18e4c:	sub    esp,0x10
   18e4f:	test   BYTE PTR [eax+0x1],0x38
   18e53:	push   eax
   18e54:	push   DWORD PTR [ebp+0xc]
   18e57:	jne    0x18e6c
   18e59:	mov    DWORD PTR [ebp-0x8],0x5bf6
   18e60:	mov    DWORD PTR [ebp-0x4],0x18cc4
   18e67:	lea    eax,[ebp-0x8]
   18e6a:	jmp    0x18e7d
   18e6c:	mov    DWORD PTR [ebp-0x10],0x52f6
   18e73:	mov    DWORD PTR [ebp-0xc],0x18cc4
   18e7a:	lea    eax,[ebp-0x10]
   18e7d:	push   eax
   18e7e:	call   0x18cc4
   18e83:	leave  
   18e84:	ret    0xc
   18e87:	int3   
   18e88:	int3   
   18e89:	int3   
   18e8a:	int3   
   18e8b:	int3   
   18e8c:	mov    edi,edi
   18e8e:	push   ebp
   18e8f:	mov    ebp,esp
   18e91:	mov    eax,DWORD PTR [ebp+0x10]
   18e94:	sub    esp,0x10
   18e97:	test   BYTE PTR [eax+0x1],0x38
   18e9b:	push   eax
   18e9c:	push   DWORD PTR [ebp+0xc]
   18e9f:	jne    0x18eb4
   18ea1:	mov    DWORD PTR [ebp-0x8],0x66f7
   18ea8:	mov    DWORD PTR [ebp-0x4],0x18cc4
   18eaf:	lea    eax,[ebp-0x8]
   18eb2:	jmp    0x18ec5
   18eb4:	mov    DWORD PTR [ebp-0x10],0x52f7
   18ebb:	mov    DWORD PTR [ebp-0xc],0x18cc4
   18ec2:	lea    eax,[ebp-0x10]
   18ec5:	push   eax
   18ec6:	call   0x18cc4
   18ecb:	leave  
   18ecc:	ret    0xc
   18ecf:	int3   
   18ed0:	int3   
   18ed1:	int3   
   18ed2:	int3   
   18ed3:	int3   
   18ed4:	mov    edi,edi
   18ed6:	push   ebp
   18ed7:	mov    ebp,esp
   18ed9:	push   ecx
   18eda:	push   ecx
   18edb:	mov    edx,DWORD PTR [ebp+0x10]
   18ede:	mov    al,BYTE PTR [edx+0x1]
   18ee1:	cmp    al,0x15
   18ee3:	je     0x18f03
   18ee5:	cmp    al,0x25
   18ee7:	je     0x18f03
   18ee9:	and    al,0x38
   18eeb:	cmp    al,0x10
   18eed:	je     0x18efb
   18eef:	cmp    al,0x18
   18ef1:	je     0x18efb
   18ef3:	cmp    al,0x20
   18ef5:	je     0x18efb
   18ef7:	cmp    al,0x28
   18ef9:	jne    0x18f0f
   18efb:	mov    eax,DWORD PTR [ecx+0x8]
   18efe:	or     DWORD PTR [eax],0xffffffff
   18f01:	jmp    0x18f0f
   18f03:	mov    eax,DWORD PTR [edx+0x2]
   18f06:	mov    eax,DWORD PTR [eax]
   18f08:	push   esi
   18f09:	mov    esi,DWORD PTR [ecx+0x8]
   18f0c:	mov    DWORD PTR [esi],eax
   18f0e:	pop    esi
   18f0f:	push   edx
   18f10:	push   DWORD PTR [ebp+0xc]
   18f13:	lea    eax,[ebp-0x8]
   18f16:	push   eax
   18f17:	mov    DWORD PTR [ebp-0x8],0x52ff
   18f1e:	mov    DWORD PTR [ebp-0x4],0x18cc4
   18f25:	call   0x18cc4
   18f2a:	leave  
   18f2b:	ret    0xc
   18f2e:	int3   
   18f2f:	int3   
   18f30:	int3   
   18f31:	int3   
   18f32:	int3   
   18f33:	int3   
   18f34:	mov    edi,edi
   18f36:	push   ebp
   18f37:	mov    ebp,esp
   18f39:	sub    esp,0x5c
   18f3c:	mov    eax,ds:0x72518
   18f41:	xor    eax,ebp
   18f43:	mov    DWORD PTR [ebp-0x4],eax
   18f46:	mov    eax,DWORD PTR [ebp+0x10]
   18f49:	push   esi
   18f4a:	mov    esi,DWORD PTR [ebp+0x8]
   18f4d:	push   edi
   18f4e:	mov    edi,DWORD PTR [ebp+0xc]
   18f51:	push   0x0
   18f53:	push   eax
   18f54:	lea    ecx,[ebp-0x5c]
   18f57:	call   0x18c8a
   18f5c:	push   edi
   18f5d:	push   esi
   18f5e:	lea    ecx,[ebp-0x5c]
   18f61:	call   0x18bcc
   18f66:	mov    ecx,DWORD PTR [ebp-0x4]
   18f69:	pop    edi
   18f6a:	xor    ecx,ebp
   18f6c:	pop    esi
   18f6d:	call   0x1b38f
   18f72:	leave  
   18f73:	ret    0xc
   18f76:	int3   
   18f77:	int3   
   18f78:	int3   
   18f79:	int3   
   18f7a:	int3   
   18f7b:	int3   
   18f7c:	mov    edi,edi
   18f7e:	push   ebp
   18f7f:	mov    ebp,esp
   18f81:	sub    esp,0x50
   18f84:	push   ebx
   18f85:	push   esi
   18f86:	push   edi
   18f87:	mov    edi,0x4000
   18f8c:	push   edi
   18f8d:	call   0x11c16
   18f92:	pop    ecx
   18f93:	xor    ebx,ebx
   18f95:	push   0x38
   18f97:	push   0x1c7ec
   18f9c:	cmp    eax,ebx
   18f9e:	mov    DWORD PTR [ebp-0x4],eax
   18fa1:	mov    DWORD PTR [ebp-0xc],eax
   18fa4:	push   0x2f
   18fa6:	lea    eax,[ebp-0x50]
   18fa9:	setne  BYTE PTR [ebp-0x10]
   18fad:	push   eax
   18fae:	xor    esi,esi
   18fb0:	mov    DWORD PTR [ebp-0x30],ebx
   18fb3:	mov    DWORD PTR [ebp-0x2c],ebx
   18fb6:	mov    DWORD PTR [ebp-0x28],ebx
   18fb9:	mov    DWORD PTR [ebp-0x4c],ebx
   18fbc:	mov    DWORD PTR [ebp-0x50],ebx
   18fbf:	call   0x19266
   18fc4:	test   eax,eax
   18fc6:	je     0x18fe5
   18fc8:	mov    esi,DWORD PTR [ebp+0x8]
   18fcb:	mov    BYTE PTR [esi],bl
   18fcd:	mov    DWORD PTR [esi+0x4],ebx
   18fd0:	cmp    BYTE PTR [ebp-0x10],bl
   18fd3:	je     0x18fde
   18fd5:	push   DWORD PTR [ebp-0x4]
   18fd8:	call   0x11c4c
   18fdd:	pop    ecx
   18fde:	mov    eax,esi
   18fe0:	jmp    0x190fa
   18fe5:	mov    eax,DWORD PTR [ebp+0x10]
   18fe8:	mov    DWORD PTR [ebp-0x4c],eax
   18feb:	mov    eax,DWORD PTR [ebp+0xc]
   18fee:	mov    DWORD PTR [ebp-0x50],eax
   18ff1:	mov    eax,DWORD PTR [ebp-0xc]
   18ff4:	add    eax,esi
   18ff6:	mov    DWORD PTR [ebp-0x44],eax
   18ff9:	push   0x4
   18ffb:	lea    eax,[ebp-0x50]
   18ffe:	push   eax
   18fff:	mov    DWORD PTR [ebp-0x40],edi
   19002:	call   0x193fa
   19007:	cmp    eax,0xfffffffc
   1900a:	mov    DWORD PTR [ebp+0x10],eax
   1900d:	jl     0x19021
   1900f:	cmp    eax,0xfffffffd
   19012:	jle    0x190aa
   19018:	cmp    eax,0x2
   1901b:	je     0x190aa
   19021:	mov    eax,edi
   19023:	sub    eax,DWORD PTR [ebp-0x40]
   19026:	add    esi,eax
   19028:	cmp    DWORD PTR [ebp-0x40],ebx
   1902b:	jne    0x19094
   1902d:	mov    al,BYTE PTR [ebp-0x10]
   19030:	mov    BYTE PTR [ebp-0x18],al
   19033:	mov    eax,DWORD PTR [ebp-0xc]
   19036:	mov    DWORD PTR [ebp-0x14],eax
   19039:	lea    eax,[esi+0x4000]
   1903f:	push   eax
   19040:	mov    BYTE PTR [ebp-0x10],bl
   19043:	call   0x11c16
   19048:	pop    ecx
   19049:	cmp    eax,ebx
   1904b:	setne  cl
   1904e:	mov    DWORD PTR [ebp-0x4],eax
   19051:	lea    eax,[ebp-0x8]
   19054:	mov    BYTE PTR [ebp-0x8],cl
   19057:	push   eax
   19058:	lea    ecx,[ebp-0x10]
   1905b:	call   0x12970
   19060:	cmp    BYTE PTR [ebp-0x8],bl
   19063:	je     0x1906e
   19065:	push   DWORD PTR [ebp-0x4]
   19068:	call   0x11c4c
   1906d:	pop    ecx
   1906e:	push   esi
   1906f:	push   DWORD PTR [ebp-0x14]
   19072:	push   DWORD PTR [ebp-0xc]
   19075:	call   0x1b400
   1907a:	add    esp,0xc
   1907d:	cmp    BYTE PTR [ebp-0x18],bl
   19080:	je     0x1908b
   19082:	push   DWORD PTR [ebp-0x14]
   19085:	call   0x11c4c
   1908a:	pop    ecx
   1908b:	cmp    DWORD PTR [ebp-0x40],ebx
   1908e:	je     0x18ff1
   19094:	lea    eax,[ebp-0x50]
   19097:	push   eax
   19098:	call   0x1a618
   1909d:	cmp    DWORD PTR [ebp+0x10],0x1
   190a1:	jne    0x190cc
   190a3:	mov    eax,DWORD PTR [ebp+0x14]
   190a6:	mov    DWORD PTR [eax],esi
   190a8:	jmp    0x190ec
   190aa:	lea    eax,[ebp-0x50]
   190ad:	push   eax
   190ae:	call   0x1a618
   190b3:	mov    esi,DWORD PTR [ebp+0x8]
   190b6:	mov    BYTE PTR [esi],bl
   190b8:	mov    DWORD PTR [esi+0x4],ebx
   190bb:	cmp    BYTE PTR [ebp-0x10],bl
   190be:	je     0x18fde
   190c4:	push   DWORD PTR [ebp-0xc]
   190c7:	jmp    0x18fd8
   190cc:	lea    eax,[ebp-0x18]
   190cf:	push   eax
   190d0:	lea    ecx,[ebp-0x10]
   190d3:	mov    BYTE PTR [ebp-0x18],bl
   190d6:	mov    DWORD PTR [ebp-0x14],ebx
   190d9:	call   0x12970
   190de:	cmp    BYTE PTR [ebp-0x18],bl
   190e1:	je     0x190ec
   190e3:	push   DWORD PTR [ebp-0x14]
   190e6:	call   0x11c4c
   190eb:	pop    ecx
   190ec:	mov    eax,DWORD PTR [ebp+0x8]
   190ef:	mov    cl,BYTE PTR [ebp-0x10]
   190f2:	mov    BYTE PTR [eax],cl
   190f4:	mov    ecx,DWORD PTR [ebp-0xc]
   190f7:	mov    DWORD PTR [eax+0x4],ecx
   190fa:	pop    edi
   190fb:	pop    esi
   190fc:	pop    ebx
   190fd:	leave  
   190fe:	ret    0x10
   19101:	int3   
   19102:	int3   
   19103:	int3   
   19104:	int3   
   19105:	int3   
   19106:	xor    eax,eax
   19108:	push   eax
   19109:	push   eax
   1910a:	push   eax
   1910b:	push   eax
   1910c:	push   0x73268
   19111:	call   DWORD PTR ds:0x1ca34
   19117:	test   eax,eax
   19119:	setge  al
   1911c:	ret    
   1911d:	int3   
   1911e:	int3   
   1911f:	int3   
   19120:	int3   
   19121:	int3   
   19122:	push   0x0
   19124:	push   0x73268
   19129:	call   DWORD PTR ds:0x1ca38
   1912f:	ret    
   19130:	int3   
   19131:	int3   
   19132:	int3   
   19133:	int3   
   19134:	int3   
   19135:	int3   
   19136:	mov    edi,edi
   19138:	push   esi
   19139:	push   edi
   1913a:	push   0x1
   1913c:	xor    edi,edi
   1913e:	push   edi
   1913f:	mov    esi,ecx
   19141:	call   0x13b9a
   19146:	cmp    DWORD PTR ds:0x730b8,edi
   1914c:	jne    0x19163
   1914e:	mov    ecx,eax
   19150:	mov    DWORD PTR ds:0x730b8,ecx
   19156:	mov    DWORD PTR [ecx],edi
   19158:	mov    ecx,DWORD PTR ds:0x730b8
   1915e:	xor    eax,eax
   19160:	mov    DWORD PTR [ecx+0x8],edi
   19163:	inc    DWORD PTR ds:0x73290
   19169:	cmp    eax,edi
   1916b:	je     0x19174
   1916d:	push   eax
   1916e:	call   0x11c4c
   19173:	pop    ecx
   19174:	push   edi
   19175:	push   DWORD PTR ds:0x730b8
   1917b:	mov    ecx,esi
   1917d:	call   0x13b9a
   19182:	mov    DWORD PTR [esi+0xc],edi
   19185:	mov    DWORD PTR [esi+0x4],eax
   19188:	mov    DWORD PTR [eax],eax
   1918a:	mov    esi,DWORD PTR [esi+0x4]
   1918d:	pop    edi
   1918e:	mov    DWORD PTR [esi+0x8],esi
   19191:	pop    esi
   19192:	ret    
   19193:	int3   
   19194:	int3   
   19195:	int3   
   19196:	int3   
   19197:	int3   
   19198:	mov    edi,edi
   1919a:	push   ebx
   1919b:	push   esi
   1919c:	xor    ebx,ebx
   1919e:	push   ebx
   1919f:	push   0x73268
   191a4:	call   DWORD PTR ds:0x1ca3c
   191aa:	push   0x10
   191ac:	call   0x11c16
   191b1:	mov    esi,eax
   191b3:	pop    ecx
   191b4:	cmp    esi,ebx
   191b6:	je     0x191ca
   191b8:	mov    ecx,esi
   191ba:	mov    BYTE PTR [esi+0x8],bl
   191bd:	call   0x19136
   191c2:	mov    DWORD PTR ds:0x73288,esi
   191c8:	jmp    0x191d0
   191ca:	mov    DWORD PTR ds:0x73288,ebx
   191d0:	push   0x10
   191d2:	call   0x11c16
   191d7:	mov    esi,eax
   191d9:	pop    ecx
   191da:	cmp    esi,ebx
   191dc:	je     0x191f0
   191de:	mov    ecx,esi
   191e0:	mov    BYTE PTR [esi+0x8],bl
   191e3:	call   0x13e68
   191e8:	mov    DWORD PTR ds:0x7328c,esi
   191ee:	jmp    0x191f6
   191f0:	mov    DWORD PTR ds:0x7328c,ebx
   191f6:	pop    esi
   191f7:	pop    ebx
   191f8:	ret    
   191f9:	int3   
   191fa:	int3   
   191fb:	int3   
   191fc:	int3   
   191fd:	int3   
   191fe:	mov    edi,edi
   19200:	push   ebp
   19201:	mov    ebp,esp
   19203:	mov    ecx,DWORD PTR [ebp+0x8]
   19206:	xor    edx,edx
   19208:	cmp    ecx,edx
   1920a:	je     0x1925a
   1920c:	mov    eax,DWORD PTR [ecx+0x1c]
   1920f:	cmp    eax,edx
   19211:	je     0x1925a
   19213:	mov    DWORD PTR [eax+0x1c],edx
   19216:	mov    DWORD PTR [ecx+0x14],edx
   19219:	mov    DWORD PTR [ecx+0x8],edx
   1921c:	mov    DWORD PTR [ecx+0x18],edx
   1921f:	mov    DWORD PTR [ecx+0x30],0x1
   19226:	lea    ecx,[eax+0x530]
   1922c:	mov    DWORD PTR [eax],edx
   1922e:	mov    DWORD PTR [eax+0x4],edx
   19231:	mov    DWORD PTR [eax+0xc],edx
   19234:	mov    DWORD PTR [eax+0x14],0x8000
   1923b:	mov    DWORD PTR [eax+0x20],edx
   1923e:	mov    DWORD PTR [eax+0x28],edx
   19241:	mov    DWORD PTR [eax+0x2c],edx
   19244:	mov    DWORD PTR [eax+0x30],edx
   19247:	mov    DWORD PTR [eax+0x38],edx
   1924a:	mov    DWORD PTR [eax+0x3c],edx
   1924d:	mov    DWORD PTR [eax+0x6c],ecx
   19250:	mov    DWORD PTR [eax+0x50],ecx
   19253:	mov    DWORD PTR [eax+0x4c],ecx
   19256:	xor    eax,eax
   19258:	jmp    0x1925d
   1925a:	push   0xfffffffe
   1925c:	pop    eax
   1925d:	pop    ebp
   1925e:	ret    0x4
   19261:	int3   
   19262:	int3   
   19263:	int3   
   19264:	int3   
   19265:	int3   
   19266:	mov    edi,edi
   19268:	push   ebp
   19269:	mov    ebp,esp
   1926b:	mov    eax,DWORD PTR [ebp+0x10]
   1926e:	push   esi
   1926f:	push   edi
   19270:	xor    edi,edi
   19272:	cmp    eax,edi
   19274:	je     0x1930f
   1927a:	cmp    BYTE PTR [eax],0x31
   1927d:	jne    0x1930f
   19283:	cmp    DWORD PTR [ebp+0x14],0x38
   19287:	jne    0x1930f
   1928d:	mov    esi,DWORD PTR [ebp+0x8]
   19290:	cmp    esi,edi
   19292:	jne    0x19298
   19294:	push   0xfffffffe
   19296:	jmp    0x19311
   19298:	mov    DWORD PTR [esi+0x18],edi
   1929b:	cmp    DWORD PTR [esi+0x20],edi
   1929e:	jne    0x192aa
   192a0:	mov    DWORD PTR [esi+0x20],0x1a65e
   192a7:	mov    DWORD PTR [esi+0x28],edi
   192aa:	cmp    DWORD PTR [esi+0x24],edi
   192ad:	jne    0x192b6
   192af:	mov    DWORD PTR [esi+0x24],0x1a67a
   192b6:	push   0x2530
   192bb:	push   0x1
   192bd:	push   DWORD PTR [esi+0x28]
   192c0:	call   DWORD PTR [esi+0x20]
   192c3:	cmp    eax,edi
   192c5:	jne    0x192cb
   192c7:	push   0xfffffffc
   192c9:	jmp    0x19311
   192cb:	mov    ecx,DWORD PTR [ebp+0xc]
   192ce:	cmp    ecx,edi
   192d0:	mov    DWORD PTR [esi+0x1c],eax
   192d3:	jge    0x192dc
   192d5:	mov    DWORD PTR [eax+0x8],edi
   192d8:	neg    ecx
   192da:	jmp    0x192ed
   192dc:	mov    edx,ecx
   192de:	sar    edx,0x4
   192e1:	inc    edx
   192e2:	cmp    ecx,0x30
   192e5:	mov    DWORD PTR [eax+0x8],edx
   192e8:	jge    0x192ed
   192ea:	and    ecx,0xf
   192ed:	lea    edx,[ecx-0x8]
   192f0:	cmp    edx,0x7
   192f3:	ja     0x19303
   192f5:	push   esi
   192f6:	mov    DWORD PTR [eax+0x24],ecx
   192f9:	mov    DWORD PTR [eax+0x34],edi
   192fc:	call   0x191fe
   19301:	jmp    0x19312
   19303:	push   eax
   19304:	push   DWORD PTR [esi+0x28]
   19307:	call   DWORD PTR [esi+0x24]
   1930a:	mov    DWORD PTR [esi+0x1c],edi
   1930d:	jmp    0x19294
   1930f:	push   0xfffffffa
   19311:	pop    eax
   19312:	pop    edi
   19313:	pop    esi
   19314:	pop    ebp
   19315:	ret    0x10
   19318:	int3   
   19319:	int3   
   1931a:	int3   
   1931b:	int3   
   1931c:	int3   
   1931d:	int3   
   1931e:	mov    edi,edi
   19320:	push   ebp
   19321:	mov    ebp,esp
   19323:	push   ecx
   19324:	push   ebx
   19325:	push   esi
   19326:	mov    esi,DWORD PTR [edi+0x1c]
   19329:	cmp    DWORD PTR [esi+0x34],0x0
   1932d:	mov    ebx,eax
   1932f:	jne    0x1934f
   19331:	mov    ecx,DWORD PTR [esi+0x24]
   19334:	xor    eax,eax
   19336:	inc    eax
   19337:	shl    eax,cl
   19339:	push   0x1
   1933b:	push   eax
   1933c:	push   DWORD PTR [edi+0x28]
   1933f:	call   DWORD PTR [edi+0x20]
   19342:	mov    DWORD PTR [esi+0x34],eax
   19345:	test   eax,eax
   19347:	jne    0x1934f
   19349:	inc    eax
   1934a:	jmp    0x193f1
   1934f:	xor    eax,eax
   19351:	cmp    DWORD PTR [esi+0x28],eax
   19354:	jne    0x19367
   19356:	mov    ecx,DWORD PTR [esi+0x24]
   19359:	xor    edx,edx
   1935b:	inc    edx
   1935c:	shl    edx,cl
   1935e:	mov    DWORD PTR [esi+0x30],eax
   19361:	mov    DWORD PTR [esi+0x2c],eax
   19364:	mov    DWORD PTR [esi+0x28],edx
   19367:	sub    ebx,DWORD PTR [edi+0x10]
   1936a:	mov    eax,DWORD PTR [esi+0x28]
   1936d:	cmp    ebx,eax
   1936f:	jb     0x19389
   19371:	mov    ecx,DWORD PTR [edi+0xc]
   19374:	push   eax
   19375:	sub    ecx,eax
   19377:	push   ecx
   19378:	push   DWORD PTR [esi+0x34]
   1937b:	call   0x1b400
   19380:	add    esp,0xc
   19383:	and    DWORD PTR [esi+0x30],0x0
   19387:	jmp    0x193ca
   19389:	sub    eax,DWORD PTR [esi+0x30]
   1938c:	mov    DWORD PTR [ebp-0x4],eax
   1938f:	cmp    eax,ebx
   19391:	jbe    0x19396
   19393:	mov    DWORD PTR [ebp-0x4],ebx
   19396:	mov    eax,DWORD PTR [edi+0xc]
   19399:	push   DWORD PTR [ebp-0x4]
   1939c:	sub    eax,ebx
   1939e:	push   eax
   1939f:	mov    eax,DWORD PTR [esi+0x34]
   193a2:	add    eax,DWORD PTR [esi+0x30]
   193a5:	push   eax
   193a6:	call   0x1b400
   193ab:	mov    eax,DWORD PTR [ebp-0x4]
   193ae:	add    esp,0xc
   193b1:	sub    ebx,eax
   193b3:	je     0x193d2
   193b5:	mov    eax,DWORD PTR [edi+0xc]
   193b8:	push   ebx
   193b9:	sub    eax,ebx
   193bb:	push   eax
   193bc:	push   DWORD PTR [esi+0x34]
   193bf:	call   0x1b400
   193c4:	add    esp,0xc
   193c7:	mov    DWORD PTR [esi+0x30],ebx
   193ca:	mov    eax,DWORD PTR [esi+0x28]
   193cd:	mov    DWORD PTR [esi+0x2c],eax
   193d0:	jmp    0x193ef
   193d2:	add    DWORD PTR [esi+0x30],eax
   193d5:	mov    ecx,DWORD PTR [esi+0x30]
   193d8:	mov    edx,DWORD PTR [esi+0x28]
   193db:	cmp    ecx,edx
   193dd:	jne    0x193e3
   193df:	and    DWORD PTR [esi+0x30],0x0
   193e3:	mov    ecx,DWORD PTR [esi+0x2c]
   193e6:	cmp    ecx,edx
   193e8:	jae    0x193ef
   193ea:	add    ecx,eax
   193ec:	mov    DWORD PTR [esi+0x2c],ecx
   193ef:	xor    eax,eax
   193f1:	pop    esi
   193f2:	pop    ebx
   193f3:	leave  
   193f4:	ret    
   193f5:	int3   
   193f6:	int3   
   193f7:	int3   
   193f8:	int3   
   193f9:	int3   
   193fa:	mov    edi,edi
   193fc:	push   ebp
   193fd:	mov    ebp,esp
   193ff:	mov    edx,DWORD PTR [ebp+0x8]
   19402:	sub    esp,0x2c
   19405:	push   ebx
   19406:	xor    eax,eax
   19408:	push   esi
   19409:	push   edi
   1940a:	cmp    edx,eax
   1940c:	je     0x1945c
   1940e:	mov    esi,DWORD PTR [edx+0x1c]
   19411:	cmp    esi,eax
   19413:	je     0x1945c
   19415:	cmp    DWORD PTR [edx+0xc],eax
   19418:	je     0x1945c
   1941a:	cmp    DWORD PTR [edx],eax
   1941c:	jne    0x19423
   1941e:	cmp    DWORD PTR [edx+0x4],eax
   19421:	jne    0x1945c
   19423:	cmp    DWORD PTR [esi],0xb
   19426:	jne    0x1942e
   19428:	mov    DWORD PTR [esi],0xc
   1942e:	mov    eax,DWORD PTR [edx+0xc]
   19431:	mov    ecx,DWORD PTR [edx+0x10]
   19434:	and    DWORD PTR [ebp-0x24],0x0
   19438:	mov    ebx,DWORD PTR [esi+0x38]
   1943b:	mov    edi,DWORD PTR [esi+0x3c]
   1943e:	mov    DWORD PTR [ebp-0x18],eax
   19441:	mov    eax,DWORD PTR [edx]
   19443:	mov    DWORD PTR [ebp-0x4],eax
   19446:	mov    eax,DWORD PTR [edx+0x4]
   19449:	mov    DWORD PTR [ebp-0x8],eax
   1944c:	mov    DWORD PTR [ebp-0x2c],eax
   1944f:	mov    eax,DWORD PTR [esi]
   19451:	mov    DWORD PTR [ebp-0x10],ecx
   19454:	mov    DWORD PTR [ebp-0x1c],ecx
   19457:	cmp    eax,0x1c
   1945a:	jbe    0x19469
   1945c:	push   0xfffffffe
   1945e:	pop    eax
   1945f:	pop    edi
   19460:	pop    esi
   19461:	pop    ebx
   19462:	leave  
   19463:	ret    0x8
   19466:	mov    edx,DWORD PTR [ebp+0x8]
   19469:	jmp    DWORD PTR [eax*4+0x1a59e]
   19470:	mov    eax,DWORD PTR [esi+0x8]
   19473:	test   eax,eax
   19475:	jne    0x194a1
   19477:	mov    DWORD PTR [esi],0xc
   1947d:	jmp    0x1a46f
   19482:	cmp    DWORD PTR [ebp-0x8],0x0
   19486:	je     0x1a4bd
   1948c:	mov    ecx,DWORD PTR [ebp-0x4]
   1948f:	movzx  edx,BYTE PTR [ecx]
   19492:	dec    DWORD PTR [ebp-0x8]
   19495:	mov    ecx,edi
   19497:	shl    edx,cl
   19499:	add    ebx,edx
   1949b:	inc    DWORD PTR [ebp-0x4]
   1949e:	add    edi,0x8
   194a1:	cmp    edi,0x10
   194a4:	jb     0x19482
   194a6:	test   al,0x2
   194a8:	je     0x194e5
   194aa:	cmp    ebx,0x8b1f
   194b0:	jne    0x194e5
   194b2:	xor    edi,edi
   194b4:	push   edi
   194b5:	push   edi
   194b6:	push   edi
   194b7:	call   0x1b320
   194bc:	mov    DWORD PTR [esi+0x18],eax
   194bf:	push   0x2
   194c1:	lea    eax,[ebp-0x14]
   194c4:	push   eax
   194c5:	mov    BYTE PTR [ebp-0x14],0x1f
   194c9:	mov    BYTE PTR [ebp-0x13],0x8b
   194cd:	push   DWORD PTR [esi+0x18]
   194d0:	call   0x1b320
   194d5:	mov    DWORD PTR [esi+0x18],eax
   194d8:	xor    ebx,ebx
   194da:	mov    DWORD PTR [esi],0x1
   194e0:	jmp    0x1a46f
   194e5:	mov    eax,DWORD PTR [esi+0x20]
   194e8:	and    DWORD PTR [esi+0x10],0x0
   194ec:	test   eax,eax
   194ee:	je     0x194f4
   194f0:	or     DWORD PTR [eax+0x30],0xffffffff
   194f4:	test   BYTE PTR [esi+0x8],0x1
   194f8:	je     0x1957e
   194fe:	movzx  eax,bl
   19501:	shl    eax,0x8
   19504:	mov    ecx,ebx
   19506:	shr    ecx,0x8
   19509:	add    eax,ecx
   1950b:	push   0x1f
   1950d:	xor    edx,edx
   1950f:	pop    ecx
   19510:	div    ecx
   19512:	test   edx,edx
   19514:	jne    0x1957e
   19516:	mov    eax,ebx
   19518:	and    al,0xf
   1951a:	cmp    al,0x8
   1951c:	je     0x1952d
   1951e:	mov    eax,DWORD PTR [ebp+0x8]
   19521:	mov    DWORD PTR [eax+0x18],0x1c986
   19528:	jmp    0x1a469
   1952d:	shr    ebx,0x4
   19530:	mov    ecx,ebx
   19532:	and    ecx,0xf
   19535:	add    ecx,0x8
   19538:	sub    edi,0x4
   1953b:	cmp    ecx,DWORD PTR [esi+0x24]
   1953e:	jbe    0x1954f
   19540:	mov    eax,DWORD PTR [ebp+0x8]
   19543:	mov    DWORD PTR [eax+0x18],0x1c972
   1954a:	jmp    0x1a469
   1954f:	xor    eax,eax
   19551:	xor    edi,edi
   19553:	inc    eax
   19554:	push   edi
   19555:	shl    eax,cl
   19557:	push   edi
   19558:	push   edi
   19559:	mov    DWORD PTR [esi+0x14],eax
   1955c:	call   0x1ae7e
   19561:	mov    ecx,DWORD PTR [ebp+0x8]
   19564:	shr    ebx,0x8
   19567:	not    ebx
   19569:	and    ebx,0x2
   1956c:	or     ebx,0x9
   1956f:	mov    DWORD PTR [esi+0x18],eax
   19572:	mov    DWORD PTR [ecx+0x30],eax
   19575:	mov    DWORD PTR [esi],ebx
   19577:	xor    ebx,ebx
   19579:	jmp    0x1a46f
   1957e:	mov    eax,DWORD PTR [ebp+0x8]
   19581:	mov    DWORD PTR [eax+0x18],0x1c95a
   19588:	jmp    0x1a469
   1958d:	cmp    edi,0x10
   19590:	jae    0x195b9
   19592:	cmp    DWORD PTR [ebp-0x8],0x0
   19596:	je     0x1a4bd
   1959c:	mov    eax,DWORD PTR [ebp-0x4]
   1959f:	movzx  eax,BYTE PTR [eax]
   195a2:	dec    DWORD PTR [ebp-0x8]
   195a5:	mov    ecx,edi
   195a7:	shl    eax,cl
   195a9:	add    edi,0x8
   195ac:	add    ebx,eax
   195ae:	inc    DWORD PTR [ebp-0x4]
   195b1:	cmp    edi,0x10
   195b4:	jb     0x19592
   195b6:	mov    edx,DWORD PTR [ebp+0x8]
   195b9:	mov    DWORD PTR [esi+0x10],ebx
   195bc:	cmp    bl,0x8
   195bf:	je     0x195cd
   195c1:	mov    DWORD PTR [edx+0x18],0x1c986
   195c8:	jmp    0x1a469
   195cd:	test   ebx,0xe000
   195d3:	je     0x195e1
   195d5:	mov    DWORD PTR [edx+0x18],0x1c940
   195dc:	jmp    0x1a469
   195e1:	mov    eax,DWORD PTR [esi+0x20]
   195e4:	test   eax,eax
   195e6:	je     0x195f2
   195e8:	mov    ecx,ebx
   195ea:	shr    ecx,0x8
   195ed:	and    ecx,0x1
   195f0:	mov    DWORD PTR [eax],ecx
   195f2:	test   DWORD PTR [esi+0x10],0x200
   195f9:	je     0x19618
   195fb:	mov    BYTE PTR [ebp-0x14],bl
   195fe:	push   0x2
   19600:	lea    eax,[ebp-0x14]
   19603:	shr    ebx,0x8
   19606:	push   eax
   19607:	mov    BYTE PTR [ebp-0x13],bl
   1960a:	push   DWORD PTR [esi+0x18]
   1960d:	call   0x1b320
   19612:	mov    edx,DWORD PTR [ebp+0x8]
   19615:	mov    DWORD PTR [esi+0x18],eax
   19618:	xor    ebx,ebx
   1961a:	xor    edi,edi
   1961c:	mov    DWORD PTR [esi],0x2
   19622:	cmp    edi,0x20
   19625:	jae    0x1964e
   19627:	cmp    DWORD PTR [ebp-0x8],0x0
   1962b:	je     0x1a4bd
   19631:	mov    eax,DWORD PTR [ebp-0x4]
   19634:	movzx  eax,BYTE PTR [eax]
   19637:	dec    DWORD PTR [ebp-0x8]
   1963a:	mov    ecx,edi
   1963c:	shl    eax,cl
   1963e:	add    edi,0x8
   19641:	add    ebx,eax
   19643:	inc    DWORD PTR [ebp-0x4]
   19646:	cmp    edi,0x20
   19649:	jb     0x19627
   1964b:	mov    edx,DWORD PTR [ebp+0x8]
   1964e:	mov    eax,DWORD PTR [esi+0x20]
   19651:	test   eax,eax
   19653:	je     0x19658
   19655:	mov    DWORD PTR [eax+0x4],ebx
   19658:	test   DWORD PTR [esi+0x10],0x200
   1965f:	je     0x1968e
   19661:	mov    eax,ebx
   19663:	shr    eax,0x8
   19666:	mov    BYTE PTR [ebp-0x13],al
   19669:	mov    eax,ebx
   1966b:	shr    eax,0x10
   1966e:	mov    BYTE PTR [ebp-0x12],al
   19671:	mov    BYTE PTR [ebp-0x14],bl
   19674:	push   0x4
   19676:	lea    eax,[ebp-0x14]
   19679:	shr    ebx,0x18
   1967c:	push   eax
   1967d:	mov    BYTE PTR [ebp-0x11],bl
   19680:	push   DWORD PTR [esi+0x18]
   19683:	call   0x1b320
   19688:	mov    edx,DWORD PTR [ebp+0x8]
   1968b:	mov    DWORD PTR [esi+0x18],eax
   1968e:	xor    ebx,ebx
   19690:	xor    edi,edi
   19692:	mov    DWORD PTR [esi],0x3
   19698:	cmp    edi,0x10
   1969b:	jae    0x196c4
   1969d:	cmp    DWORD PTR [ebp-0x8],0x0
   196a1:	je     0x1a4bd
   196a7:	mov    eax,DWORD PTR [ebp-0x4]
   196aa:	movzx  eax,BYTE PTR [eax]
   196ad:	dec    DWORD PTR [ebp-0x8]
   196b0:	mov    ecx,edi
   196b2:	shl    eax,cl
   196b4:	add    edi,0x8
   196b7:	add    ebx,eax
   196b9:	inc    DWORD PTR [ebp-0x4]
   196bc:	cmp    edi,0x10
   196bf:	jb     0x1969d
   196c1:	mov    edx,DWORD PTR [ebp+0x8]
   196c4:	mov    eax,DWORD PTR [esi+0x20]
   196c7:	test   eax,eax
   196c9:	je     0x196e1
   196cb:	mov    ecx,ebx
   196cd:	and    ecx,0xff
   196d3:	mov    DWORD PTR [eax+0x8],ecx
   196d6:	mov    ecx,DWORD PTR [esi+0x20]
   196d9:	mov    eax,ebx
   196db:	shr    eax,0x8
   196de:	mov    DWORD PTR [ecx+0xc],eax
   196e1:	test   DWORD PTR [esi+0x10],0x200
   196e8:	je     0x19707
   196ea:	mov    BYTE PTR [ebp-0x14],bl
   196ed:	push   0x2
   196ef:	lea    eax,[ebp-0x14]
   196f2:	shr    ebx,0x8
   196f5:	push   eax
   196f6:	mov    BYTE PTR [ebp-0x13],bl
   196f9:	push   DWORD PTR [esi+0x18]
   196fc:	call   0x1b320
   19701:	mov    edx,DWORD PTR [ebp+0x8]
   19704:	mov    DWORD PTR [esi+0x18],eax
   19707:	xor    ebx,ebx
   19709:	xor    edi,edi
   1970b:	mov    DWORD PTR [esi],0x4
   19711:	test   DWORD PTR [esi+0x10],0x400
   19718:	je     0x1977f
   1971a:	cmp    edi,0x10
   1971d:	jae    0x19746
   1971f:	cmp    DWORD PTR [ebp-0x8],0x0
   19723:	je     0x1a4bd
   19729:	mov    eax,DWORD PTR [ebp-0x4]
   1972c:	movzx  eax,BYTE PTR [eax]
   1972f:	dec    DWORD PTR [ebp-0x8]
   19732:	mov    ecx,edi
   19734:	shl    eax,cl
   19736:	add    edi,0x8
   19739:	add    ebx,eax
   1973b:	inc    DWORD PTR [ebp-0x4]
   1973e:	cmp    edi,0x10
   19741:	jb     0x1971f
   19743:	mov    edx,DWORD PTR [ebp+0x8]
   19746:	mov    eax,DWORD PTR [esi+0x20]
   19749:	mov    DWORD PTR [esi+0x40],ebx
   1974c:	test   eax,eax
   1974e:	je     0x19753
   19750:	mov    DWORD PTR [eax+0x14],ebx
   19753:	test   DWORD PTR [esi+0x10],0x200
   1975a:	je     0x19779
   1975c:	mov    BYTE PTR [ebp-0x14],bl
   1975f:	push   0x2
   19761:	lea    eax,[ebp-0x14]
   19764:	shr    ebx,0x8
   19767:	push   eax
   19768:	mov    BYTE PTR [ebp-0x13],bl
   1976b:	push   DWORD PTR [esi+0x18]
   1976e:	call   0x1b320
   19773:	mov    edx,DWORD PTR [ebp+0x8]
   19776:	mov    DWORD PTR [esi+0x18],eax
   19779:	xor    ebx,ebx
   1977b:	xor    edi,edi
   1977d:	jmp    0x1978a
   1977f:	mov    eax,DWORD PTR [esi+0x20]
   19782:	test   eax,eax
   19784:	je     0x1978a
   19786:	and    DWORD PTR [eax+0x10],0x0
   1978a:	mov    DWORD PTR [esi],0x5
   19790:	test   DWORD PTR [esi+0x10],0x400
   19797:	je     0x19821
   1979d:	mov    edx,DWORD PTR [esi+0x40]
   197a0:	mov    eax,DWORD PTR [ebp-0x8]
   197a3:	mov    DWORD PTR [ebp-0xc],edx
   197a6:	cmp    edx,eax
   197a8:	jbe    0x197ad
   197aa:	mov    DWORD PTR [ebp-0xc],eax
   197ad:	cmp    DWORD PTR [ebp-0xc],0x0
   197b1:	je     0x19814
   197b3:	mov    ecx,DWORD PTR [esi+0x20]
   197b6:	test   ecx,ecx
   197b8:	je     0x197ee
   197ba:	mov    eax,DWORD PTR [ecx+0x10]
   197bd:	mov    DWORD PTR [ebp-0x28],eax
   197c0:	test   eax,eax
   197c2:	je     0x197ee
   197c4:	mov    eax,DWORD PTR [ecx+0x14]
   197c7:	mov    ecx,DWORD PTR [ecx+0x18]
   197ca:	sub    eax,edx
   197cc:	mov    edx,DWORD PTR [ebp-0xc]
   197cf:	add    edx,eax
   197d1:	cmp    edx,ecx
   197d3:	jbe    0x197d9
   197d5:	sub    ecx,eax
   197d7:	jmp    0x197dc
   197d9:	mov    ecx,DWORD PTR [ebp-0xc]
   197dc:	push   ecx
   197dd:	mov    ecx,DWORD PTR [ebp-0x28]
   197e0:	push   DWORD PTR [ebp-0x4]
   197e3:	add    ecx,eax
   197e5:	push   ecx
   197e6:	call   0x1b400
   197eb:	add    esp,0xc
   197ee:	test   DWORD PTR [esi+0x10],0x200
   197f5:	je     0x19808
   197f7:	push   DWORD PTR [ebp-0xc]
   197fa:	push   DWORD PTR [ebp-0x4]
   197fd:	push   DWORD PTR [esi+0x18]
   19800:	call   0x1b320
   19805:	mov    DWORD PTR [esi+0x18],eax
   19808:	mov    eax,DWORD PTR [ebp-0xc]
   1980b:	sub    DWORD PTR [ebp-0x8],eax
   1980e:	add    DWORD PTR [ebp-0x4],eax
   19811:	sub    DWORD PTR [esi+0x40],eax
   19814:	cmp    DWORD PTR [esi+0x40],0x0
   19818:	jne    0x1a4bd
   1981e:	mov    edx,DWORD PTR [ebp+0x8]
   19821:	and    DWORD PTR [esi+0x40],0x0
   19825:	mov    DWORD PTR [esi],0x6
   1982b:	test   DWORD PTR [esi+0x10],0x800
   19832:	je     0x198af
   19834:	cmp    DWORD PTR [ebp-0x8],0x0
   19838:	je     0x1a4bd
   1983e:	xor    ecx,ecx
   19840:	mov    eax,DWORD PTR [ebp-0x4]
   19843:	movzx  eax,BYTE PTR [ecx+eax*1]
   19847:	inc    ecx
   19848:	mov    DWORD PTR [ebp-0xc],ecx
   1984b:	mov    ecx,DWORD PTR [esi+0x20]
   1984e:	mov    DWORD PTR [ebp-0x20],eax
   19851:	test   ecx,ecx
   19853:	je     0x19870
   19855:	mov    edx,DWORD PTR [ecx+0x1c]
   19858:	mov    DWORD PTR [ebp-0x28],edx
   1985b:	test   edx,edx
   1985d:	je     0x19870
   1985f:	mov    edx,DWORD PTR [esi+0x40]
   19862:	cmp    edx,DWORD PTR [ecx+0x20]
   19865:	jae    0x19870
   19867:	mov    ecx,DWORD PTR [ebp-0x28]
   1986a:	mov    BYTE PTR [ecx+edx*1],al
   1986d:	inc    DWORD PTR [esi+0x40]
   19870:	test   eax,eax
   19872:	je     0x1987c
   19874:	mov    ecx,DWORD PTR [ebp-0xc]
   19877:	cmp    ecx,DWORD PTR [ebp-0x8]
   1987a:	jb     0x19840
   1987c:	test   DWORD PTR [esi+0x10],0x200
   19883:	je     0x19899
   19885:	push   DWORD PTR [ebp-0xc]
   19888:	push   DWORD PTR [ebp-0x4]
   1988b:	push   DWORD PTR [esi+0x18]
   1988e:	call   0x1b320
   19893:	mov    DWORD PTR [esi+0x18],eax
   19896:	mov    eax,DWORD PTR [ebp-0x20]
   19899:	mov    ecx,DWORD PTR [ebp-0xc]
   1989c:	sub    DWORD PTR [ebp-0x8],ecx
   1989f:	add    DWORD PTR [ebp-0x4],ecx
   198a2:	test   eax,eax
   198a4:	jne    0x1a4bd
   198aa:	mov    edx,DWORD PTR [ebp+0x8]
   198ad:	jmp    0x198ba
   198af:	mov    eax,DWORD PTR [esi+0x20]
   198b2:	test   eax,eax
   198b4:	je     0x198ba
   198b6:	and    DWORD PTR [eax+0x1c],0x0
   198ba:	and    DWORD PTR [esi+0x40],0x0
   198be:	mov    DWORD PTR [esi],0x7
   198c4:	test   DWORD PTR [esi+0x10],0x1000
   198cb:	je     0x19948
   198cd:	cmp    DWORD PTR [ebp-0x8],0x0
   198d1:	je     0x1a4bd
   198d7:	xor    ecx,ecx
   198d9:	mov    eax,DWORD PTR [ebp-0x4]
   198dc:	movzx  eax,BYTE PTR [ecx+eax*1]
   198e0:	inc    ecx
   198e1:	mov    DWORD PTR [ebp-0xc],ecx
   198e4:	mov    ecx,DWORD PTR [esi+0x20]
   198e7:	mov    DWORD PTR [ebp-0x20],eax
   198ea:	test   ecx,ecx
   198ec:	je     0x19909
   198ee:	mov    edx,DWORD PTR [ecx+0x24]
   198f1:	mov    DWORD PTR [ebp-0x28],edx
   198f4:	test   edx,edx
   198f6:	je     0x19909
   198f8:	mov    edx,DWORD PTR [esi+0x40]
   198fb:	cmp    edx,DWORD PTR [ecx+0x28]
   198fe:	jae    0x19909
   19900:	mov    ecx,DWORD PTR [ebp-0x28]
   19903:	mov    BYTE PTR [ecx+edx*1],al
   19906:	inc    DWORD PTR [esi+0x40]
   19909:	test   eax,eax
   1990b:	je     0x19915
   1990d:	mov    ecx,DWORD PTR [ebp-0xc]
   19910:	cmp    ecx,DWORD PTR [ebp-0x8]
   19913:	jb     0x198d9
   19915:	test   DWORD PTR [esi+0x10],0x200
   1991c:	je     0x19932
   1991e:	push   DWORD PTR [ebp-0xc]
   19921:	push   DWORD PTR [ebp-0x4]
   19924:	push   DWORD PTR [esi+0x18]
   19927:	call   0x1b320
   1992c:	mov    DWORD PTR [esi+0x18],eax
   1992f:	mov    eax,DWORD PTR [ebp-0x20]
   19932:	mov    ecx,DWORD PTR [ebp-0xc]
   19935:	sub    DWORD PTR [ebp-0x8],ecx
   19938:	add    DWORD PTR [ebp-0x4],ecx
   1993b:	test   eax,eax
   1993d:	jne    0x1a4bd
   19943:	mov    edx,DWORD PTR [ebp+0x8]
   19946:	jmp    0x19953
   19948:	mov    eax,DWORD PTR [esi+0x20]
   1994b:	test   eax,eax
   1994d:	je     0x19953
   1994f:	and    DWORD PTR [eax+0x24],0x0
   19953:	mov    DWORD PTR [esi],0x8
   19959:	test   DWORD PTR [esi+0x10],0x200
   19960:	je     0x199a6
   19962:	cmp    edi,0x10
   19965:	jae    0x1998e
   19967:	cmp    DWORD PTR [ebp-0x8],0x0
   1996b:	je     0x1a4bd
   19971:	mov    eax,DWORD PTR [ebp-0x4]
   19974:	movzx  eax,BYTE PTR [eax]
   19977:	dec    DWORD PTR [ebp-0x8]
   1997a:	mov    ecx,edi
   1997c:	shl    eax,cl
   1997e:	add    edi,0x8
   19981:	add    ebx,eax
   19983:	inc    DWORD PTR [ebp-0x4]
   19986:	cmp    edi,0x10
   19989:	jb     0x19967
   1998b:	mov    edx,DWORD PTR [ebp+0x8]
   1998e:	movzx  eax,WORD PTR [esi+0x18]
   19992:	cmp    ebx,eax
   19994:	je     0x199a2
   19996:	mov    DWORD PTR [edx+0x18],0x1c92c
   1999d:	jmp    0x1a469
   199a2:	xor    ebx,ebx
   199a4:	xor    edi,edi
   199a6:	mov    eax,DWORD PTR [esi+0x20]
   199a9:	test   eax,eax
   199ab:	je     0x199c1
   199ad:	mov    edx,DWORD PTR [esi+0x10]
   199b0:	xor    ecx,ecx
   199b2:	inc    ecx
   199b3:	sar    edx,0x9
   199b6:	and    edx,ecx
   199b8:	mov    DWORD PTR [eax+0x2c],edx
   199bb:	mov    eax,DWORD PTR [esi+0x20]
   199be:	mov    DWORD PTR [eax+0x30],ecx
   199c1:	xor    eax,eax
   199c3:	push   eax
   199c4:	push   eax
   199c5:	push   eax
   199c6:	call   0x1b320
   199cb:	mov    ecx,DWORD PTR [ebp+0x8]
   199ce:	mov    DWORD PTR [esi+0x18],eax
   199d1:	mov    DWORD PTR [ecx+0x30],eax
   199d4:	jmp    0x1a0d2
   199d9:	cmp    edi,0x20
   199dc:	jae    0x19a05
   199de:	cmp    DWORD PTR [ebp-0x8],0x0
   199e2:	je     0x1a4bd
   199e8:	mov    eax,DWORD PTR [ebp-0x4]
   199eb:	movzx  eax,BYTE PTR [eax]
   199ee:	dec    DWORD PTR [ebp-0x8]
   199f1:	mov    ecx,edi
   199f3:	shl    eax,cl
   199f5:	add    edi,0x8
   199f8:	add    ebx,eax
   199fa:	inc    DWORD PTR [ebp-0x4]
   199fd:	cmp    edi,0x20
   19a00:	jb     0x199de
   19a02:	mov    edx,DWORD PTR [ebp+0x8]
   19a05:	mov    ecx,ebx
   19a07:	mov    eax,0xff00
   19a0c:	and    ecx,eax
   19a0e:	mov    edi,ebx
   19a10:	shl    edi,0x10
   19a13:	add    ecx,edi
   19a15:	mov    edi,ebx
   19a17:	shr    edi,0x8
   19a1a:	and    edi,eax
   19a1c:	shl    ecx,0x8
   19a1f:	shr    ebx,0x18
   19a22:	add    ecx,edi
   19a24:	lea    eax,[ecx+ebx*1]
   19a27:	mov    DWORD PTR [esi+0x18],eax
   19a2a:	mov    DWORD PTR [edx+0x30],eax
   19a2d:	xor    ebx,ebx
   19a2f:	xor    edi,edi
   19a31:	mov    DWORD PTR [esi],0xa
   19a37:	cmp    DWORD PTR [esi+0xc],0x0
   19a3b:	je     0x1a47f
   19a41:	xor    eax,eax
   19a43:	push   eax
   19a44:	push   eax
   19a45:	push   eax
   19a46:	call   0x1ae7e
   19a4b:	mov    ecx,DWORD PTR [ebp+0x8]
   19a4e:	mov    DWORD PTR [esi+0x18],eax
   19a51:	mov    DWORD PTR [ecx+0x30],eax
   19a54:	mov    DWORD PTR [esi],0xb
   19a5a:	cmp    DWORD PTR [ebp+0xc],0x5
   19a5e:	je     0x1a4bd
   19a64:	mov    edx,DWORD PTR [ebp+0x8]
   19a67:	cmp    DWORD PTR [esi+0x4],0x0
   19a6b:	je     0x19a81
   19a6d:	mov    ecx,edi
   19a6f:	and    ecx,0x7
   19a72:	shr    ebx,cl
   19a74:	sub    edi,ecx
   19a76:	mov    DWORD PTR [esi],0x18
   19a7c:	jmp    0x1a46f
   19a81:	cmp    edi,0x3
   19a84:	jae    0x19aad
   19a86:	cmp    DWORD PTR [ebp-0x8],0x0
   19a8a:	je     0x1a4bd
   19a90:	mov    eax,DWORD PTR [ebp-0x4]
   19a93:	movzx  eax,BYTE PTR [eax]
   19a96:	dec    DWORD PTR [ebp-0x8]
   19a99:	mov    ecx,edi
   19a9b:	shl    eax,cl
   19a9d:	add    edi,0x8
   19aa0:	add    ebx,eax
   19aa2:	inc    DWORD PTR [ebp-0x4]
   19aa5:	cmp    edi,0x3
   19aa8:	jb     0x19a86
   19aaa:	mov    edx,DWORD PTR [ebp+0x8]
   19aad:	mov    eax,ebx
   19aaf:	and    eax,0x1
   19ab2:	shr    ebx,1
   19ab4:	mov    DWORD PTR [esi+0x4],eax
   19ab7:	mov    eax,ebx
   19ab9:	and    eax,0x3
   19abc:	dec    edi
   19abd:	sub    eax,0x0
   19ac0:	je     0x19b06
   19ac2:	dec    eax
   19ac3:	je     0x19ae2
   19ac5:	dec    eax
   19ac6:	je     0x19ada
   19ac8:	dec    eax
   19ac9:	jne    0x19b0c
   19acb:	mov    DWORD PTR [edx+0x18],0x1c918
   19ad2:	mov    DWORD PTR [esi],0x1b
   19ad8:	jmp    0x19b0c
   19ada:	mov    DWORD PTR [esi],0xf
   19ae0:	jmp    0x19b0c
   19ae2:	mov    DWORD PTR [esi+0x4c],0x6f5d8
   19ae9:	mov    DWORD PTR [esi+0x54],0x9
   19af0:	mov    DWORD PTR [esi+0x50],0x6fdd8
   19af7:	mov    DWORD PTR [esi+0x58],0x5
   19afe:	mov    DWORD PTR [esi],0x12
   19b04:	jmp    0x19b0c
   19b06:	mov    DWORD PTR [esi],0xd
   19b0c:	shr    ebx,0x2
   19b0f:	dec    edi
   19b10:	dec    edi
   19b11:	jmp    0x1a46f
   19b16:	mov    ecx,edi
   19b18:	and    ecx,0x7
   19b1b:	sub    edi,ecx
   19b1d:	shr    ebx,cl
   19b1f:	cmp    edi,0x20
   19b22:	jae    0x19b4b
   19b24:	cmp    DWORD PTR [ebp-0x8],0x0
   19b28:	je     0x1a4bd
   19b2e:	mov    eax,DWORD PTR [ebp-0x4]
   19b31:	movzx  eax,BYTE PTR [eax]
   19b34:	dec    DWORD PTR [ebp-0x8]
   19b37:	mov    ecx,edi
   19b39:	shl    eax,cl
   19b3b:	add    edi,0x8
   19b3e:	add    ebx,eax
   19b40:	inc    DWORD PTR [ebp-0x4]
   19b43:	cmp    edi,0x20
   19b46:	jb     0x19b24
   19b48:	mov    edx,DWORD PTR [ebp+0x8]
   19b4b:	mov    ecx,ebx
   19b4d:	mov    eax,ebx
   19b4f:	not    ecx
   19b51:	and    eax,0xffff
   19b56:	shr    ecx,0x10
   19b59:	cmp    eax,ecx
   19b5b:	je     0x19b69
   19b5d:	mov    DWORD PTR [edx+0x18],0x1c8fa
   19b64:	jmp    0x1a469
   19b69:	xor    ebx,ebx
   19b6b:	mov    DWORD PTR [esi+0x40],eax
   19b6e:	xor    edi,edi
   19b70:	mov    DWORD PTR [esi],0xe
   19b76:	mov    eax,DWORD PTR [esi+0x40]
   19b79:	mov    DWORD PTR [ebp-0xc],eax
   19b7c:	test   eax,eax
   19b7e:	je     0x1a0d2
   19b84:	mov    eax,DWORD PTR [ebp-0x8]
   19b87:	cmp    DWORD PTR [ebp-0xc],eax
   19b8a:	jbe    0x19b8f
   19b8c:	mov    DWORD PTR [ebp-0xc],eax
   19b8f:	mov    eax,DWORD PTR [ebp-0x10]
   19b92:	cmp    DWORD PTR [ebp-0xc],eax
   19b95:	jbe    0x19b9a
   19b97:	mov    DWORD PTR [ebp-0xc],eax
   19b9a:	cmp    DWORD PTR [ebp-0xc],0x0
   19b9e:	je     0x1a4bd
   19ba4:	push   DWORD PTR [ebp-0xc]
   19ba7:	push   DWORD PTR [ebp-0x4]
   19baa:	push   DWORD PTR [ebp-0x18]
   19bad:	call   0x1b400
   19bb2:	mov    eax,DWORD PTR [ebp-0xc]
   19bb5:	sub    DWORD PTR [ebp-0x8],eax
   19bb8:	add    DWORD PTR [ebp-0x4],eax
   19bbb:	sub    DWORD PTR [ebp-0x10],eax
   19bbe:	add    DWORD PTR [ebp-0x18],eax
   19bc1:	add    esp,0xc
   19bc4:	sub    DWORD PTR [esi+0x40],eax
   19bc7:	jmp    0x1a46f
   19bcc:	cmp    edi,0xe
   19bcf:	jae    0x19bf8
   19bd1:	cmp    DWORD PTR [ebp-0x8],0x0
   19bd5:	je     0x1a4bd
   19bdb:	mov    eax,DWORD PTR [ebp-0x4]
   19bde:	movzx  eax,BYTE PTR [eax]
   19be1:	dec    DWORD PTR [ebp-0x8]
   19be4:	mov    ecx,edi
   19be6:	shl    eax,cl
   19be8:	add    edi,0x8
   19beb:	add    ebx,eax
   19bed:	inc    DWORD PTR [ebp-0x4]
   19bf0:	cmp    edi,0xe
   19bf3:	jb     0x19bd1
   19bf5:	mov    edx,DWORD PTR [ebp+0x8]
   19bf8:	mov    eax,ebx
   19bfa:	and    eax,0x1f
   19bfd:	add    eax,0x101
   19c02:	mov    DWORD PTR [esi+0x60],eax
   19c05:	shr    ebx,0x5
   19c08:	mov    eax,ebx
   19c0a:	and    eax,0x1f
   19c0d:	inc    eax
   19c0e:	shr    ebx,0x5
   19c11:	mov    DWORD PTR [esi+0x64],eax
   19c14:	mov    eax,ebx
   19c16:	and    eax,0xf
   19c19:	add    eax,0x4
   19c1c:	shr    ebx,0x4
   19c1f:	sub    edi,0xe
   19c22:	cmp    DWORD PTR [esi+0x60],0x11e
   19c29:	mov    DWORD PTR [esi+0x5c],eax
   19c2c:	ja     0x19c40
   19c2e:	cmp    DWORD PTR [esi+0x64],0x1e
   19c32:	ja     0x19c40
   19c34:	and    DWORD PTR [esi+0x68],0x0
   19c38:	mov    DWORD PTR [esi],0x10
   19c3e:	jmp    0x19c8e
   19c40:	mov    DWORD PTR [edx+0x18],0x1c8d6
   19c47:	jmp    0x1a469
   19c4c:	cmp    DWORD PTR [ebp-0x8],0x0
   19c50:	je     0x1a4bd
   19c56:	mov    eax,DWORD PTR [ebp-0x4]
   19c59:	movzx  eax,BYTE PTR [eax]
   19c5c:	dec    DWORD PTR [ebp-0x8]
   19c5f:	mov    ecx,edi
   19c61:	shl    eax,cl
   19c63:	add    ebx,eax
   19c65:	inc    DWORD PTR [ebp-0x4]
   19c68:	add    edi,0x8
   19c6b:	cmp    edi,0x3
   19c6e:	jb     0x19c4c
   19c70:	mov    ecx,DWORD PTR [esi+0x68]
   19c73:	movzx  ecx,WORD PTR [ecx*2+0x6fe58]
   19c7b:	mov    eax,ebx
   19c7d:	and    eax,0x7
   19c80:	mov    WORD PTR [esi+ecx*2+0x70],ax
   19c85:	inc    DWORD PTR [esi+0x68]
   19c88:	shr    ebx,0x3
   19c8b:	sub    edi,0x3
   19c8e:	mov    eax,DWORD PTR [esi+0x68]
   19c91:	cmp    eax,DWORD PTR [esi+0x5c]
   19c94:	jb     0x19c6b
   19c96:	jmp    0x19cad
   19c98:	mov    eax,DWORD PTR [esi+0x68]
   19c9b:	movzx  eax,WORD PTR [eax*2+0x6fe58]
   19ca3:	xor    ecx,ecx
   19ca5:	mov    WORD PTR [esi+eax*2+0x70],cx
   19caa:	inc    DWORD PTR [esi+0x68]
   19cad:	cmp    DWORD PTR [esi+0x68],0x13
   19cb1:	jb     0x19c98
   19cb3:	lea    eax,[esi+0x530]
   19cb9:	lea    ecx,[esi+0x6c]
   19cbc:	mov    DWORD PTR [ecx],eax
   19cbe:	mov    DWORD PTR [esi+0x4c],eax
   19cc1:	lea    edx,[esi+0x2f0]
   19cc7:	push   edx
   19cc8:	lea    eax,[esi+0x54]
   19ccb:	push   eax
   19ccc:	push   ecx
   19ccd:	mov    DWORD PTR [eax],0x7
   19cd3:	push   0x13
   19cd5:	lea    eax,[esi+0x70]
   19cd8:	push   eax
   19cd9:	push   0x0
   19cdb:	call   0x1aa78
   19ce0:	mov    DWORD PTR [ebp-0x24],eax
   19ce3:	test   eax,eax
   19ce5:	je     0x19cf6
   19ce7:	mov    eax,DWORD PTR [ebp+0x8]
   19cea:	mov    DWORD PTR [eax+0x18],0x1c8bc
   19cf1:	jmp    0x1a469
   19cf6:	and    DWORD PTR [esi+0x68],0x0
   19cfa:	mov    DWORD PTR [esi],0x11
   19d00:	jmp    0x19efc
   19d05:	cmp    DWORD PTR [ebp-0x8],0x0
   19d09:	je     0x1a4bd
   19d0f:	mov    eax,DWORD PTR [ebp-0x4]
   19d12:	movzx  eax,BYTE PTR [eax]
   19d15:	dec    DWORD PTR [ebp-0x8]
   19d18:	mov    ecx,edi
   19d1a:	shl    eax,cl
   19d1c:	add    ebx,eax
   19d1e:	inc    DWORD PTR [ebp-0x4]
   19d21:	add    edi,0x8
   19d24:	mov    ecx,DWORD PTR [esi+0x54]
   19d27:	xor    eax,eax
   19d29:	inc    eax
   19d2a:	shl    eax,cl
   19d2c:	mov    ecx,DWORD PTR [esi+0x4c]
   19d2f:	dec    eax
   19d30:	and    eax,ebx
   19d32:	mov    eax,DWORD PTR [ecx+eax*4]
   19d35:	mov    ecx,eax
   19d37:	shr    ecx,0x8
   19d3a:	movzx  ecx,cl
   19d3d:	mov    DWORD PTR [ebp-0x20],eax
   19d40:	cmp    ecx,edi
   19d42:	ja     0x19d05
   19d44:	mov    ecx,eax
   19d46:	shr    ecx,0x10
   19d49:	cmp    cx,0x10
   19d4d:	jae    0x19d9a
   19d4f:	mov    ecx,eax
   19d51:	shr    ecx,0x8
   19d54:	movzx  ecx,cl
   19d57:	jmp    0x19d7b
   19d59:	cmp    DWORD PTR [ebp-0x8],0x0
   19d5d:	je     0x1a4bd
   19d63:	mov    ecx,DWORD PTR [ebp-0x4]
   19d66:	movzx  edx,BYTE PTR [ecx]
   19d69:	dec    DWORD PTR [ebp-0x8]
   19d6c:	mov    ecx,edi
   19d6e:	shl    edx,cl
   19d70:	movzx  ecx,ah
   19d73:	add    ebx,edx
   19d75:	inc    DWORD PTR [ebp-0x4]
   19d78:	add    edi,0x8
   19d7b:	cmp    edi,ecx
   19d7d:	jb     0x19d59
   19d7f:	movzx  ecx,ah
   19d82:	mov    eax,DWORD PTR [esi+0x68]
   19d85:	shr    ebx,cl
   19d87:	sub    edi,ecx
   19d89:	mov    cx,WORD PTR [ebp-0x1e]
   19d8d:	mov    WORD PTR [esi+eax*2+0x70],cx
   19d92:	inc    DWORD PTR [esi+0x68]
   19d95:	jmp    0x19efc
   19d9a:	cmp    WORD PTR [ebp-0x1e],0x10
   19d9f:	jne    0x19df7
   19da1:	movzx  eax,ah
   19da4:	jmp    0x19dc5
   19da6:	cmp    DWORD PTR [ebp-0x8],0x0
   19daa:	je     0x1a4bd
   19db0:	mov    ecx,DWORD PTR [ebp-0x4]
   19db3:	movzx  edx,BYTE PTR [ecx]
   19db6:	dec    DWORD PTR [ebp-0x8]
   19db9:	mov    ecx,edi
   19dbb:	shl    edx,cl
   19dbd:	add    ebx,edx
   19dbf:	inc    DWORD PTR [ebp-0x4]
   19dc2:	add    edi,0x8
   19dc5:	lea    ecx,[eax+0x2]
   19dc8:	cmp    edi,ecx
   19dca:	jb     0x19da6
   19dcc:	mov    ecx,eax
   19dce:	sub    edi,eax
   19dd0:	mov    eax,DWORD PTR [esi+0x68]
   19dd3:	shr    ebx,cl
   19dd5:	test   eax,eax
   19dd7:	je     0x19f0d
   19ddd:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   19de2:	mov    DWORD PTR [ebp-0x20],eax
   19de5:	mov    eax,ebx
   19de7:	and    eax,0x3
   19dea:	add    eax,0x3
   19ded:	shr    ebx,0x2
   19df0:	dec    edi
   19df1:	dec    edi
   19df2:	jmp    0x19e7c
   19df7:	cmp    WORD PTR [ebp-0x1e],0x11
   19dfc:	movzx  edx,ah
   19dff:	jne    0x19e5b
   19e01:	jmp    0x19e22
   19e03:	cmp    DWORD PTR [ebp-0x8],0x0
   19e07:	je     0x1a4bd
   19e0d:	mov    eax,DWORD PTR [ebp-0x4]
   19e10:	movzx  eax,BYTE PTR [eax]
   19e13:	dec    DWORD PTR [ebp-0x8]
   19e16:	mov    ecx,edi
   19e18:	shl    eax,cl
   19e1a:	add    ebx,eax
   19e1c:	inc    DWORD PTR [ebp-0x4]
   19e1f:	add    edi,0x8
   19e22:	lea    eax,[edx+0x3]
   19e25:	cmp    edi,eax
   19e27:	jb     0x19e03
   19e29:	mov    ecx,edx
   19e2b:	shr    ebx,cl
   19e2d:	push   0xfffffffd
   19e2f:	mov    eax,ebx
   19e31:	and    eax,0x7
   19e34:	add    eax,0x3
   19e37:	shr    ebx,0x3
   19e3a:	jmp    0x19e73
   19e3c:	cmp    DWORD PTR [ebp-0x8],0x0
   19e40:	je     0x1a4bd
   19e46:	mov    eax,DWORD PTR [ebp-0x4]
   19e49:	movzx  eax,BYTE PTR [eax]
   19e4c:	dec    DWORD PTR [ebp-0x8]
   19e4f:	mov    ecx,edi
   19e51:	shl    eax,cl
   19e53:	add    ebx,eax
   19e55:	inc    DWORD PTR [ebp-0x4]
   19e58:	add    edi,0x8
   19e5b:	lea    eax,[edx+0x7]
   19e5e:	cmp    edi,eax
   19e60:	jb     0x19e3c
   19e62:	mov    ecx,edx
   19e64:	shr    ebx,cl
   19e66:	push   0xfffffff9
   19e68:	mov    eax,ebx
   19e6a:	and    eax,0x7f
   19e6d:	add    eax,0xb
   19e70:	shr    ebx,0x7
   19e73:	and    DWORD PTR [ebp-0x20],0x0
   19e77:	pop    ecx
   19e78:	sub    ecx,edx
   19e7a:	add    edi,ecx
   19e7c:	mov    ecx,DWORD PTR [esi+0x64]
   19e7f:	mov    edx,DWORD PTR [esi+0x68]
   19e82:	add    ecx,DWORD PTR [esi+0x60]
   19e85:	add    edx,eax
   19e87:	cmp    edx,ecx
   19e89:	jbe    0x19ef8
   19e8b:	mov    eax,DWORD PTR [ebp+0x8]
   19e8e:	mov    DWORD PTR [eax+0x18],0x1c8a2
   19e95:	mov    DWORD PTR [esi],0x1b
   19e9b:	cmp    DWORD PTR [esi],0x1b
   19e9e:	je     0x1a46f
   19ea4:	lea    eax,[esi+0x530]
   19eaa:	lea    ecx,[esi+0x6c]
   19ead:	mov    DWORD PTR [ecx],eax
   19eaf:	mov    DWORD PTR [esi+0x4c],eax
   19eb2:	lea    edx,[esi+0x2f0]
   19eb8:	push   edx
   19eb9:	lea    eax,[esi+0x54]
   19ebc:	push   eax
   19ebd:	push   ecx
   19ebe:	push   DWORD PTR [esi+0x60]
   19ec1:	mov    DWORD PTR [eax],0x9
   19ec7:	lea    eax,[esi+0x70]
   19eca:	push   eax
   19ecb:	push   0x1
   19ecd:	call   0x1aa78
   19ed2:	mov    DWORD PTR [ebp-0x24],eax
   19ed5:	test   eax,eax
   19ed7:	je     0x19f1c
   19ed9:	mov    eax,DWORD PTR [ebp+0x8]
   19edc:	mov    DWORD PTR [eax+0x18],0x1c886
   19ee3:	jmp    0x1a469
   19ee8:	mov    ecx,DWORD PTR [esi+0x68]
   19eeb:	mov    dx,WORD PTR [ebp-0x20]
   19eef:	dec    eax
   19ef0:	mov    WORD PTR [esi+ecx*2+0x70],dx
   19ef5:	inc    DWORD PTR [esi+0x68]
   19ef8:	test   eax,eax
   19efa:	jne    0x19ee8
   19efc:	mov    eax,DWORD PTR [esi+0x64]
   19eff:	add    eax,DWORD PTR [esi+0x60]
   19f02:	cmp    DWORD PTR [esi+0x68],eax
   19f05:	jb     0x19d24
   19f0b:	jmp    0x19e9b
   19f0d:	mov    eax,DWORD PTR [ebp+0x8]
   19f10:	mov    DWORD PTR [eax+0x18],0x1c8a2
   19f17:	jmp    0x1a469
   19f1c:	lea    ecx,[esi+0x6c]
   19f1f:	mov    eax,DWORD PTR [ecx]
   19f21:	mov    DWORD PTR [esi+0x50],eax
   19f24:	lea    edx,[esi+0x2f0]
   19f2a:	push   edx
   19f2b:	lea    eax,[esi+0x58]
   19f2e:	push   eax
   19f2f:	push   ecx
   19f30:	push   DWORD PTR [esi+0x64]
   19f33:	mov    DWORD PTR [eax],0x6
   19f39:	mov    eax,DWORD PTR [esi+0x60]
   19f3c:	lea    eax,[esi+eax*2+0x70]
   19f40:	push   eax
   19f41:	push   0x2
   19f43:	call   0x1aa78
   19f48:	mov    DWORD PTR [ebp-0x24],eax
   19f4b:	test   eax,eax
   19f4d:	je     0x19f5e
   19f4f:	mov    eax,DWORD PTR [ebp+0x8]
   19f52:	mov    DWORD PTR [eax+0x18],0x1c870
   19f59:	jmp    0x1a469
   19f5e:	mov    DWORD PTR [esi],0x12
   19f64:	cmp    DWORD PTR [ebp-0x8],0x6
   19f68:	jb     0x19fc1
   19f6a:	cmp    DWORD PTR [ebp-0x10],0x102
   19f71:	jb     0x19fc1
   19f73:	mov    eax,DWORD PTR [ebp+0x8]
   19f76:	mov    ecx,DWORD PTR [ebp-0x18]
   19f79:	push   DWORD PTR [ebp-0x1c]
   19f7c:	mov    DWORD PTR [eax+0xc],ecx
   19f7f:	mov    ecx,DWORD PTR [ebp-0x10]
   19f82:	mov    DWORD PTR [eax+0x10],ecx
   19f85:	mov    ecx,DWORD PTR [ebp-0x4]
   19f88:	mov    DWORD PTR [eax],ecx
   19f8a:	mov    ecx,DWORD PTR [ebp-0x8]
   19f8d:	mov    DWORD PTR [eax+0x4],ecx
   19f90:	push   eax
   19f91:	mov    DWORD PTR [esi+0x38],ebx
   19f94:	mov    DWORD PTR [esi+0x3c],edi
   19f97:	call   0x1a692
   19f9c:	mov    eax,DWORD PTR [ebp+0x8]
   19f9f:	mov    ecx,DWORD PTR [eax+0xc]
   19fa2:	mov    ebx,DWORD PTR [esi+0x38]
   19fa5:	mov    edi,DWORD PTR [esi+0x3c]
   19fa8:	mov    DWORD PTR [ebp-0x18],ecx
   19fab:	mov    ecx,DWORD PTR [eax+0x10]
   19fae:	mov    DWORD PTR [ebp-0x10],ecx
   19fb1:	mov    ecx,DWORD PTR [eax]
   19fb3:	mov    eax,DWORD PTR [eax+0x4]
   19fb6:	mov    DWORD PTR [ebp-0x4],ecx
   19fb9:	mov    DWORD PTR [ebp-0x8],eax
   19fbc:	jmp    0x1a46f
   19fc1:	mov    ecx,DWORD PTR [esi+0x54]
   19fc4:	mov    eax,DWORD PTR [esi+0x4c]
   19fc7:	xor    edx,edx
   19fc9:	inc    edx
   19fca:	shl    edx,cl
   19fcc:	dec    edx
   19fcd:	and    edx,ebx
   19fcf:	mov    eax,DWORD PTR [eax+edx*4]
   19fd2:	jmp    0x1a004
   19fd4:	cmp    DWORD PTR [ebp-0x8],0x0
   19fd8:	je     0x1a4bd
   19fde:	mov    eax,DWORD PTR [ebp-0x4]
   19fe1:	movzx  eax,BYTE PTR [eax]
   19fe4:	dec    DWORD PTR [ebp-0x8]
   19fe7:	mov    ecx,edi
   19fe9:	shl    eax,cl
   19feb:	mov    ecx,DWORD PTR [esi+0x54]
   19fee:	add    edi,0x8
   19ff1:	add    ebx,eax
   19ff3:	inc    DWORD PTR [ebp-0x4]
   19ff6:	xor    eax,eax
   19ff8:	inc    eax
   19ff9:	shl    eax,cl
   19ffb:	mov    ecx,DWORD PTR [esi+0x4c]
   19ffe:	dec    eax
   19fff:	and    eax,ebx
   1a001:	mov    eax,DWORD PTR [ecx+eax*4]
   1a004:	mov    ecx,eax
   1a006:	shr    ecx,0x8
   1a009:	movzx  ecx,cl
   1a00c:	cmp    ecx,edi
   1a00e:	ja     0x19fd4
   1a010:	test   al,al
   1a012:	je     0x1a0ab
   1a018:	test   al,0xf0
   1a01a:	jne    0x1a0ab
   1a020:	mov    DWORD PTR [ebp-0xc],eax
   1a023:	shr    DWORD PTR [ebp-0xc],0x8
   1a027:	movzx  edx,BYTE PTR [ebp-0xc]
   1a02b:	mov    DWORD PTR [ebp-0x28],edx
   1a02e:	movzx  ecx,al
   1a031:	add    ecx,edx
   1a033:	xor    edx,edx
   1a035:	inc    edx
   1a036:	shl    edx,cl
   1a038:	mov    ecx,DWORD PTR [ebp-0x28]
   1a03b:	mov    DWORD PTR [ebp-0x20],eax
   1a03e:	shr    eax,0x10
   1a041:	dec    edx
   1a042:	and    edx,ebx
   1a044:	shr    edx,cl
   1a046:	add    edx,eax
   1a048:	mov    eax,DWORD PTR [esi+0x4c]
   1a04b:	mov    eax,DWORD PTR [eax+edx*4]
   1a04e:	movzx  edx,BYTE PTR [ebp-0xc]
   1a052:	jmp    0x1a095
   1a054:	cmp    DWORD PTR [ebp-0x8],0x0
   1a058:	je     0x1a4bd
   1a05e:	mov    eax,DWORD PTR [ebp-0x4]
   1a061:	movzx  eax,BYTE PTR [eax]
   1a064:	movzx  edx,BYTE PTR [ebp-0x1f]
   1a068:	dec    DWORD PTR [ebp-0x8]
   1a06b:	mov    ecx,edi
   1a06d:	shl    eax,cl
   1a06f:	movzx  ecx,BYTE PTR [ebp-0x20]
   1a073:	add    ebx,eax
   1a075:	inc    DWORD PTR [ebp-0x4]
   1a078:	xor    eax,eax
   1a07a:	add    ecx,edx
   1a07c:	inc    eax
   1a07d:	shl    eax,cl
   1a07f:	add    edi,0x8
   1a082:	mov    ecx,edx
   1a084:	dec    eax
   1a085:	and    eax,ebx
   1a087:	shr    eax,cl
   1a089:	movzx  ecx,WORD PTR [ebp-0x1e]
   1a08d:	add    eax,ecx
   1a08f:	mov    ecx,DWORD PTR [esi+0x4c]
   1a092:	mov    eax,DWORD PTR [ecx+eax*4]
   1a095:	mov    ecx,eax
   1a097:	shr    ecx,0x8
   1a09a:	movzx  ecx,cl
   1a09d:	add    ecx,edx
   1a09f:	cmp    ecx,edi
   1a0a1:	ja     0x1a054
   1a0a3:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1a0a7:	shr    ebx,cl
   1a0a9:	sub    edi,ecx
   1a0ab:	mov    ecx,eax
   1a0ad:	shr    ecx,0x8
   1a0b0:	movzx  ecx,cl
   1a0b3:	shr    ebx,cl
   1a0b5:	sub    edi,ecx
   1a0b7:	mov    ecx,eax
   1a0b9:	shr    ecx,0x10
   1a0bc:	mov    DWORD PTR [esi+0x40],ecx
   1a0bf:	test   al,al
   1a0c1:	jne    0x1a0ce
   1a0c3:	mov    DWORD PTR [esi],0x17
   1a0c9:	jmp    0x1a46f
   1a0ce:	test   al,0x20
   1a0d0:	je     0x1a0dd
   1a0d2:	mov    DWORD PTR [esi],0xb
   1a0d8:	jmp    0x1a46f
   1a0dd:	test   al,0x40
   1a0df:	je     0x1a0f0
   1a0e1:	mov    eax,DWORD PTR [ebp+0x8]
   1a0e4:	mov    DWORD PTR [eax+0x18],0x1c854
   1a0eb:	jmp    0x1a469
   1a0f0:	movzx  eax,al
   1a0f3:	and    eax,0xf
   1a0f6:	mov    DWORD PTR [esi+0x48],eax
   1a0f9:	mov    DWORD PTR [esi],0x13
   1a0ff:	mov    eax,DWORD PTR [esi+0x48]
   1a102:	test   eax,eax
   1a104:	je     0x1a13f
   1a106:	cmp    edi,eax
   1a108:	jae    0x1a12e
   1a10a:	cmp    DWORD PTR [ebp-0x8],0x0
   1a10e:	je     0x1a4bd
   1a114:	mov    ecx,DWORD PTR [ebp-0x4]
   1a117:	movzx  edx,BYTE PTR [ecx]
   1a11a:	dec    DWORD PTR [ebp-0x8]
   1a11d:	mov    ecx,edi
   1a11f:	shl    edx,cl
   1a121:	add    edi,0x8
   1a124:	add    ebx,edx
   1a126:	inc    DWORD PTR [ebp-0x4]
   1a129:	cmp    edi,DWORD PTR [esi+0x48]
   1a12c:	jb     0x1a10a
   1a12e:	xor    edx,edx
   1a130:	inc    edx
   1a131:	mov    ecx,eax
   1a133:	shl    edx,cl
   1a135:	dec    edx
   1a136:	and    edx,ebx
   1a138:	add    DWORD PTR [esi+0x40],edx
   1a13b:	shr    ebx,cl
   1a13d:	sub    edi,eax
   1a13f:	mov    DWORD PTR [esi],0x14
   1a145:	mov    ecx,DWORD PTR [esi+0x58]
   1a148:	mov    eax,DWORD PTR [esi+0x50]
   1a14b:	xor    edx,edx
   1a14d:	inc    edx
   1a14e:	shl    edx,cl
   1a150:	dec    edx
   1a151:	and    edx,ebx
   1a153:	mov    eax,DWORD PTR [eax+edx*4]
   1a156:	jmp    0x1a188
   1a158:	cmp    DWORD PTR [ebp-0x8],0x0
   1a15c:	je     0x1a4bd
   1a162:	mov    eax,DWORD PTR [ebp-0x4]
   1a165:	movzx  eax,BYTE PTR [eax]
   1a168:	dec    DWORD PTR [ebp-0x8]
   1a16b:	mov    ecx,edi
   1a16d:	shl    eax,cl
   1a16f:	mov    ecx,DWORD PTR [esi+0x58]
   1a172:	add    edi,0x8
   1a175:	add    ebx,eax
   1a177:	inc    DWORD PTR [ebp-0x4]
   1a17a:	xor    eax,eax
   1a17c:	inc    eax
   1a17d:	shl    eax,cl
   1a17f:	mov    ecx,DWORD PTR [esi+0x50]
   1a182:	dec    eax
   1a183:	and    eax,ebx
   1a185:	mov    eax,DWORD PTR [ecx+eax*4]
   1a188:	mov    ecx,eax
   1a18a:	shr    ecx,0x8
   1a18d:	movzx  ecx,cl
   1a190:	cmp    ecx,edi
   1a192:	ja     0x1a158
   1a194:	test   al,0xf0
   1a196:	jne    0x1a227
   1a19c:	mov    DWORD PTR [ebp-0xc],eax
   1a19f:	shr    DWORD PTR [ebp-0xc],0x8
   1a1a3:	movzx  edx,BYTE PTR [ebp-0xc]
   1a1a7:	mov    DWORD PTR [ebp-0x28],edx
   1a1aa:	movzx  ecx,al
   1a1ad:	add    ecx,edx
   1a1af:	xor    edx,edx
   1a1b1:	inc    edx
   1a1b2:	shl    edx,cl
   1a1b4:	mov    ecx,DWORD PTR [ebp-0x28]
   1a1b7:	mov    DWORD PTR [ebp-0x20],eax
   1a1ba:	shr    eax,0x10
   1a1bd:	dec    edx
   1a1be:	and    edx,ebx
   1a1c0:	shr    edx,cl
   1a1c2:	add    edx,eax
   1a1c4:	mov    eax,DWORD PTR [esi+0x50]
   1a1c7:	mov    eax,DWORD PTR [eax+edx*4]
   1a1ca:	movzx  edx,BYTE PTR [ebp-0xc]
   1a1ce:	jmp    0x1a211
   1a1d0:	cmp    DWORD PTR [ebp-0x8],0x0
   1a1d4:	je     0x1a4bd
   1a1da:	mov    eax,DWORD PTR [ebp-0x4]
   1a1dd:	movzx  eax,BYTE PTR [eax]
   1a1e0:	movzx  edx,BYTE PTR [ebp-0x1f]
   1a1e4:	dec    DWORD PTR [ebp-0x8]
   1a1e7:	mov    ecx,edi
   1a1e9:	shl    eax,cl
   1a1eb:	movzx  ecx,BYTE PTR [ebp-0x20]
   1a1ef:	add    ebx,eax
   1a1f1:	inc    DWORD PTR [ebp-0x4]
   1a1f4:	xor    eax,eax
   1a1f6:	add    ecx,edx
   1a1f8:	inc    eax
   1a1f9:	shl    eax,cl
   1a1fb:	add    edi,0x8
   1a1fe:	mov    ecx,edx
   1a200:	dec    eax
   1a201:	and    eax,ebx
   1a203:	shr    eax,cl
   1a205:	movzx  ecx,WORD PTR [ebp-0x1e]
   1a209:	add    eax,ecx
   1a20b:	mov    ecx,DWORD PTR [esi+0x50]
   1a20e:	mov    eax,DWORD PTR [ecx+eax*4]
   1a211:	mov    ecx,eax
   1a213:	shr    ecx,0x8
   1a216:	movzx  ecx,cl
   1a219:	add    ecx,edx
   1a21b:	cmp    ecx,edi
   1a21d:	ja     0x1a1d0
   1a21f:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1a223:	shr    ebx,cl
   1a225:	sub    edi,ecx
   1a227:	mov    ecx,eax
   1a229:	shr    ecx,0x8
   1a22c:	movzx  ecx,cl
   1a22f:	shr    ebx,cl
   1a231:	sub    edi,ecx
   1a233:	test   al,0x40
   1a235:	je     0x1a246
   1a237:	mov    eax,DWORD PTR [ebp+0x8]
   1a23a:	mov    DWORD PTR [eax+0x18],0x1c83e
   1a241:	jmp    0x1a469
   1a246:	mov    edx,DWORD PTR [ebp+0x8]
   1a249:	mov    ecx,eax
   1a24b:	movzx  eax,al
   1a24e:	shr    ecx,0x10
   1a251:	and    eax,0xf
   1a254:	mov    DWORD PTR [esi+0x44],ecx
   1a257:	mov    DWORD PTR [esi+0x48],eax
   1a25a:	mov    DWORD PTR [esi],0x15
   1a260:	mov    eax,DWORD PTR [esi+0x48]
   1a263:	test   eax,eax
   1a265:	je     0x1a2a4
   1a267:	cmp    edi,eax
   1a269:	jae    0x1a292
   1a26b:	cmp    DWORD PTR [ebp-0x8],0x0
   1a26f:	je     0x1a4bd
   1a275:	mov    eax,DWORD PTR [ebp-0x4]
   1a278:	movzx  eax,BYTE PTR [eax]
   1a27b:	dec    DWORD PTR [ebp-0x8]
   1a27e:	mov    ecx,edi
   1a280:	shl    eax,cl
   1a282:	add    edi,0x8
   1a285:	add    ebx,eax
   1a287:	inc    DWORD PTR [ebp-0x4]
   1a28a:	cmp    edi,DWORD PTR [esi+0x48]
   1a28d:	jb     0x1a26b
   1a28f:	mov    edx,DWORD PTR [ebp+0x8]
   1a292:	mov    ecx,DWORD PTR [esi+0x48]
   1a295:	xor    eax,eax
   1a297:	inc    eax
   1a298:	shl    eax,cl
   1a29a:	dec    eax
   1a29b:	and    eax,ebx
   1a29d:	add    DWORD PTR [esi+0x44],eax
   1a2a0:	shr    ebx,cl
   1a2a2:	sub    edi,ecx
   1a2a4:	mov    eax,DWORD PTR [esi+0x2c]
   1a2a7:	sub    eax,DWORD PTR [ebp-0x10]
   1a2aa:	add    eax,DWORD PTR [ebp-0x1c]
   1a2ad:	cmp    DWORD PTR [esi+0x44],eax
   1a2b0:	jbe    0x1a2be
   1a2b2:	mov    DWORD PTR [edx+0x18],0x1c820
   1a2b9:	jmp    0x1a469
   1a2be:	mov    DWORD PTR [esi],0x16
   1a2c4:	cmp    DWORD PTR [ebp-0x10],0x0
   1a2c8:	je     0x1a4bd
   1a2ce:	mov    eax,DWORD PTR [ebp-0x1c]
   1a2d1:	sub    eax,DWORD PTR [ebp-0x10]
   1a2d4:	mov    ecx,DWORD PTR [esi+0x44]
   1a2d7:	cmp    ecx,eax
   1a2d9:	jbe    0x1a308
   1a2db:	sub    ecx,eax
   1a2dd:	mov    eax,DWORD PTR [esi+0x34]
   1a2e0:	mov    DWORD PTR [ebp-0xc],ecx
   1a2e3:	mov    ecx,DWORD PTR [esi+0x30]
   1a2e6:	cmp    DWORD PTR [ebp-0xc],ecx
   1a2e9:	jbe    0x1a2f6
   1a2eb:	add    eax,DWORD PTR [esi+0x28]
   1a2ee:	sub    DWORD PTR [ebp-0xc],ecx
   1a2f1:	sub    eax,DWORD PTR [ebp-0xc]
   1a2f4:	jmp    0x1a2fb
   1a2f6:	sub    eax,DWORD PTR [ebp-0xc]
   1a2f9:	add    eax,ecx
   1a2fb:	mov    ecx,DWORD PTR [esi+0x40]
   1a2fe:	mov    DWORD PTR [ebp-0x28],ecx
   1a301:	cmp    DWORD PTR [ebp-0xc],ecx
   1a304:	jbe    0x1a316
   1a306:	jmp    0x1a313
   1a308:	mov    eax,DWORD PTR [ebp-0x18]
   1a30b:	sub    eax,ecx
   1a30d:	mov    ecx,DWORD PTR [esi+0x40]
   1a310:	mov    DWORD PTR [ebp-0x28],ecx
   1a313:	mov    DWORD PTR [ebp-0xc],ecx
   1a316:	mov    ecx,DWORD PTR [ebp-0x10]
   1a319:	cmp    DWORD PTR [ebp-0xc],ecx
   1a31c:	jbe    0x1a321
   1a31e:	mov    DWORD PTR [ebp-0xc],ecx
   1a321:	sub    ecx,DWORD PTR [ebp-0xc]
   1a324:	mov    DWORD PTR [ebp-0x10],ecx
   1a327:	mov    ecx,DWORD PTR [ebp-0x28]
   1a32a:	sub    ecx,DWORD PTR [ebp-0xc]
   1a32d:	mov    DWORD PTR [esi+0x40],ecx
   1a330:	mov    edx,DWORD PTR [ebp-0x18]
   1a333:	mov    cl,BYTE PTR [eax]
   1a335:	inc    DWORD PTR [ebp-0x18]
   1a338:	inc    eax
   1a339:	dec    DWORD PTR [ebp-0xc]
   1a33c:	mov    BYTE PTR [edx],cl
   1a33e:	jne    0x1a330
   1a340:	cmp    DWORD PTR [esi+0x40],0x0
   1a344:	jne    0x1a46f
   1a34a:	jmp    0x1a364
   1a34c:	cmp    DWORD PTR [ebp-0x10],0x0
   1a350:	je     0x1a4bd
   1a356:	mov    ecx,DWORD PTR [ebp-0x18]
   1a359:	mov    al,BYTE PTR [esi+0x40]
   1a35c:	inc    DWORD PTR [ebp-0x18]
   1a35f:	dec    DWORD PTR [ebp-0x10]
   1a362:	mov    BYTE PTR [ecx],al
   1a364:	mov    DWORD PTR [esi],0x12
   1a36a:	jmp    0x1a46f
   1a36f:	cmp    DWORD PTR [esi+0x8],0x0
   1a373:	je     0x1a423
   1a379:	cmp    edi,0x20
   1a37c:	jae    0x1a3a5
   1a37e:	cmp    DWORD PTR [ebp-0x8],0x0
   1a382:	je     0x1a4bd
   1a388:	mov    eax,DWORD PTR [ebp-0x4]
   1a38b:	movzx  eax,BYTE PTR [eax]
   1a38e:	dec    DWORD PTR [ebp-0x8]
   1a391:	mov    ecx,edi
   1a393:	shl    eax,cl
   1a395:	add    edi,0x8
   1a398:	add    ebx,eax
   1a39a:	inc    DWORD PTR [ebp-0x4]
   1a39d:	cmp    edi,0x20
   1a3a0:	jb     0x1a37e
   1a3a2:	mov    edx,DWORD PTR [ebp+0x8]
   1a3a5:	mov    eax,DWORD PTR [ebp-0x1c]
   1a3a8:	sub    eax,DWORD PTR [ebp-0x10]
   1a3ab:	add    DWORD PTR [edx+0x14],eax
   1a3ae:	add    DWORD PTR [esi+0x1c],eax
   1a3b1:	mov    DWORD PTR [ebp-0x1c],eax
   1a3b4:	test   eax,eax
   1a3b6:	je     0x1a3e0
   1a3b8:	push   eax
   1a3b9:	mov    eax,DWORD PTR [ebp-0x18]
   1a3bc:	sub    eax,DWORD PTR [ebp-0x1c]
   1a3bf:	cmp    DWORD PTR [esi+0x10],0x0
   1a3c3:	push   eax
   1a3c4:	push   DWORD PTR [esi+0x18]
   1a3c7:	je     0x1a3d0
   1a3c9:	call   0x1b320
   1a3ce:	jmp    0x1a3d5
   1a3d0:	call   0x1ae7e
   1a3d5:	mov    ecx,DWORD PTR [ebp+0x8]
   1a3d8:	mov    DWORD PTR [esi+0x18],eax
   1a3db:	mov    DWORD PTR [ecx+0x30],eax
   1a3de:	mov    edx,ecx
   1a3e0:	cmp    DWORD PTR [esi+0x10],0x0
   1a3e4:	mov    eax,DWORD PTR [ebp-0x10]
   1a3e7:	mov    DWORD PTR [ebp-0x1c],eax
   1a3ea:	mov    eax,ebx
   1a3ec:	jne    0x1a411
   1a3ee:	and    eax,0xff00
   1a3f3:	mov    ecx,ebx
   1a3f5:	shl    ecx,0x10
   1a3f8:	add    eax,ecx
   1a3fa:	mov    ecx,ebx
   1a3fc:	shr    ecx,0x8
   1a3ff:	and    ecx,0xff00
   1a405:	shl    eax,0x8
   1a408:	add    eax,ecx
   1a40a:	mov    ecx,ebx
   1a40c:	shr    ecx,0x18
   1a40f:	add    eax,ecx
   1a411:	cmp    eax,DWORD PTR [esi+0x18]
   1a414:	je     0x1a41f
   1a416:	mov    DWORD PTR [edx+0x18],0x1c80a
   1a41d:	jmp    0x1a469
   1a41f:	xor    ebx,ebx
   1a421:	xor    edi,edi
   1a423:	mov    DWORD PTR [esi],0x19
   1a429:	cmp    DWORD PTR [esi+0x8],0x0
   1a42d:	je     0x1a4a7
   1a42f:	cmp    DWORD PTR [esi+0x10],0x0
   1a433:	je     0x1a4a7
   1a435:	cmp    edi,0x20
   1a438:	jae    0x1a45d
   1a43a:	cmp    DWORD PTR [ebp-0x8],0x0
   1a43e:	je     0x1a4bd
   1a440:	mov    eax,DWORD PTR [ebp-0x4]
   1a443:	movzx  eax,BYTE PTR [eax]
   1a446:	dec    DWORD PTR [ebp-0x8]
   1a449:	mov    ecx,edi
   1a44b:	shl    eax,cl
   1a44d:	add    edi,0x8
   1a450:	add    ebx,eax
   1a452:	inc    DWORD PTR [ebp-0x4]
   1a455:	cmp    edi,0x20
   1a458:	jb     0x1a43a
   1a45a:	mov    edx,DWORD PTR [ebp+0x8]
   1a45d:	cmp    ebx,DWORD PTR [esi+0x1c]
   1a460:	je     0x1a4a3
   1a462:	mov    DWORD PTR [edx+0x18],0x1c7f2
   1a469:	mov    DWORD PTR [esi],0x1b
   1a46f:	mov    eax,DWORD PTR [esi]
   1a471:	cmp    eax,0x1c
   1a474:	jbe    0x19466
   1a47a:	jmp    0x1945c
   1a47f:	mov    eax,DWORD PTR [ebp-0x18]
   1a482:	mov    DWORD PTR [edx+0xc],eax
   1a485:	mov    eax,DWORD PTR [ebp-0x10]
   1a488:	mov    DWORD PTR [edx+0x10],eax
   1a48b:	mov    eax,DWORD PTR [ebp-0x4]
   1a48e:	mov    DWORD PTR [edx],eax
   1a490:	mov    eax,DWORD PTR [ebp-0x8]
   1a493:	mov    DWORD PTR [edx+0x4],eax
   1a496:	mov    DWORD PTR [esi+0x38],ebx
   1a499:	mov    DWORD PTR [esi+0x3c],edi
   1a49c:	push   0x2
   1a49e:	jmp    0x1945e
   1a4a3:	xor    ebx,ebx
   1a4a5:	xor    edi,edi
   1a4a7:	mov    DWORD PTR [esi],0x1a
   1a4ad:	mov    DWORD PTR [ebp-0x24],0x1
   1a4b4:	jmp    0x1a4bd
   1a4b6:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1a4bd:	mov    eax,DWORD PTR [ebp+0x8]
   1a4c0:	mov    ecx,DWORD PTR [ebp-0x18]
   1a4c3:	mov    DWORD PTR [eax+0xc],ecx
   1a4c6:	mov    ecx,DWORD PTR [ebp-0x10]
   1a4c9:	mov    DWORD PTR [eax+0x10],ecx
   1a4cc:	mov    ecx,DWORD PTR [ebp-0x4]
   1a4cf:	mov    DWORD PTR [eax],ecx
   1a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
   1a4d4:	mov    DWORD PTR [eax+0x4],ecx
   1a4d7:	cmp    DWORD PTR [esi+0x28],0x0
   1a4db:	mov    DWORD PTR [esi+0x38],ebx
   1a4de:	mov    DWORD PTR [esi+0x3c],edi
   1a4e1:	jne    0x1a4f3
   1a4e3:	cmp    DWORD PTR [esi],0x18
   1a4e6:	jge    0x1a50f
   1a4e8:	mov    eax,DWORD PTR [ebp-0x1c]
   1a4eb:	mov    ecx,DWORD PTR [ebp+0x8]
   1a4ee:	cmp    eax,DWORD PTR [ecx+0x10]
   1a4f1:	je     0x1a50f
   1a4f3:	mov    eax,DWORD PTR [ebp-0x1c]
   1a4f6:	mov    edi,DWORD PTR [ebp+0x8]
   1a4f9:	call   0x1931e
   1a4fe:	test   eax,eax
   1a500:	je     0x1a50f
   1a502:	mov    DWORD PTR [esi],0x1c
   1a508:	push   0xfffffffc
   1a50a:	jmp    0x1945e
   1a50f:	mov    edi,DWORD PTR [ebp+0x8]
   1a512:	mov    eax,DWORD PTR [ebp-0x2c]
   1a515:	sub    eax,DWORD PTR [edi+0x4]
   1a518:	mov    ebx,DWORD PTR [ebp-0x1c]
   1a51b:	sub    ebx,DWORD PTR [edi+0x10]
   1a51e:	add    DWORD PTR [edi+0x8],eax
   1a521:	add    DWORD PTR [edi+0x14],ebx
   1a524:	add    DWORD PTR [esi+0x1c],ebx
   1a527:	cmp    DWORD PTR [esi+0x8],0x0
   1a52b:	mov    DWORD PTR [ebp-0x2c],eax
   1a52e:	je     0x1a559
   1a530:	test   ebx,ebx
   1a532:	je     0x1a559
   1a534:	mov    eax,DWORD PTR [edi+0xc]
   1a537:	push   ebx
   1a538:	sub    eax,ebx
   1a53a:	cmp    DWORD PTR [esi+0x10],0x0
   1a53e:	push   eax
   1a53f:	push   DWORD PTR [esi+0x18]
   1a542:	je     0x1a54b
   1a544:	call   0x1b320
   1a549:	jmp    0x1a550
   1a54b:	call   0x1ae7e
   1a550:	mov    DWORD PTR [esi+0x18],eax
   1a553:	mov    DWORD PTR [edi+0x30],eax
   1a556:	mov    eax,DWORD PTR [ebp-0x2c]
   1a559:	cmp    DWORD PTR [esi],0xb
   1a55c:	jne    0x1a565
   1a55e:	mov    ecx,0x80
   1a563:	jmp    0x1a567
   1a565:	xor    ecx,ecx
   1a567:	mov    edx,DWORD PTR [esi+0x4]
   1a56a:	neg    edx
   1a56c:	sbb    edx,edx
   1a56e:	and    edx,0x40
   1a571:	add    edx,ecx
   1a573:	add    edx,DWORD PTR [esi+0x3c]
   1a576:	mov    DWORD PTR [edi+0x2c],edx
   1a579:	test   eax,eax
   1a57b:	jne    0x1a581
   1a57d:	test   ebx,ebx
   1a57f:	je     0x1a587
   1a581:	cmp    DWORD PTR [ebp+0xc],0x4
   1a585:	jne    0x1a594
   1a587:	cmp    DWORD PTR [ebp-0x24],0x0
   1a58b:	jne    0x1a594
   1a58d:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1a594:	mov    eax,DWORD PTR [ebp-0x24]
   1a597:	jmp    0x1945f
   1a59c:	mov    edi,edi
   1a59e:	jo     0x1a534
   1a5a0:	add    DWORD PTR [eax],eax
   1a5a2:	lea    edx,[ebp-0x69ddffff]
   1a5a8:	add    DWORD PTR [eax],eax
   1a5aa:	cwde   
   1a5ab:	xchg   esi,eax
   1a5ac:	add    DWORD PTR [eax],eax
   1a5ae:	adc    DWORD PTR [edi-0x686fffff],edx
   1a5b4:	add    DWORD PTR [eax],eax
   1a5b6:	sub    ebx,DWORD PTR [eax-0x673bffff]
   1a5bc:	add    DWORD PTR [eax],eax
   1a5be:	pop    ecx
   1a5bf:	cdq    
   1a5c0:	add    DWORD PTR [eax],eax
   1a5c2:	fstp   DWORD PTR [ecx-0x65c8ffff]
   1a5c8:	add    DWORD PTR [eax],eax
   1a5ca:	pop    edx
   1a5cb:	call   0x1:0x9a670001
   1a5d2:	push   ss
   1a5d3:	fwait
   1a5d4:	add    DWORD PTR [eax],eax
   1a5d6:	jbe    0x1a573
   1a5d8:	add    DWORD PTR [eax],eax
   1a5da:	int3   
   1a5db:	fwait
   1a5dc:	add    DWORD PTR [eax],eax
   1a5de:	mov    ds,WORD PTR [ecx+eax*1+0x19efc00]
   1a5e5:	add    BYTE PTR [edi+ebx*4+0x1],ah
   1a5e9:	add    bh,bh
   1a5eb:	mov    al,ds:0xa1450001
   1a5f0:	add    DWORD PTR [eax],eax
   1a5f2:	pusha  
   1a5f3:	mov    ds:0xa2c40001,al
   1a5f8:	add    DWORD PTR [eax],eax
   1a5fa:	dec    esp
   1a5fb:	mov    ds:0xa36f0001,eax
   1a600:	add    DWORD PTR [eax],eax
   1a602:	sub    DWORD PTR [ecx+eax*1+0x1a4ad00],esp
   1a609:	add    BYTE PTR [esi+0x80001a4],dh
   1a60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a610:	add    DWORD PTR [eax],eax
   1a612:	int3   
   1a613:	int3   
   1a614:	int3   
   1a615:	int3   
   1a616:	int3   
   1a617:	int3   
   1a618:	mov    edi,edi
   1a61a:	push   ebp
   1a61b:	mov    ebp,esp
   1a61d:	push   esi
   1a61e:	mov    esi,DWORD PTR [ebp+0x8]
   1a621:	test   esi,esi
   1a623:	je     0x1a651
   1a625:	mov    eax,DWORD PTR [esi+0x1c]
   1a628:	test   eax,eax
   1a62a:	je     0x1a651
   1a62c:	mov    ecx,DWORD PTR [esi+0x24]
   1a62f:	test   ecx,ecx
   1a631:	je     0x1a651
   1a633:	mov    eax,DWORD PTR [eax+0x34]
   1a636:	test   eax,eax
   1a638:	je     0x1a640
   1a63a:	push   eax
   1a63b:	push   DWORD PTR [esi+0x28]
   1a63e:	call   ecx
   1a640:	push   DWORD PTR [esi+0x1c]
   1a643:	push   DWORD PTR [esi+0x28]
   1a646:	call   DWORD PTR [esi+0x24]
   1a649:	and    DWORD PTR [esi+0x1c],0x0
   1a64d:	xor    eax,eax
   1a64f:	jmp    0x1a654
   1a651:	push   0xfffffffe
   1a653:	pop    eax
   1a654:	pop    esi
   1a655:	pop    ebp
   1a656:	ret    0x4
   1a659:	int3   
   1a65a:	int3   
   1a65b:	int3   
   1a65c:	int3   
   1a65d:	int3   
   1a65e:	mov    edi,edi
   1a660:	push   ebp
   1a661:	mov    ebp,esp
   1a663:	mov    eax,DWORD PTR [ebp+0xc]
   1a666:	imul   eax,DWORD PTR [ebp+0x10]
   1a66a:	push   eax
   1a66b:	call   0x1b344
   1a670:	pop    ecx
   1a671:	pop    ebp
   1a672:	ret    0xc
   1a675:	int3   
   1a676:	int3   
   1a677:	int3   
   1a678:	int3   
   1a679:	int3   
   1a67a:	mov    edi,edi
   1a67c:	push   ebp
   1a67d:	mov    ebp,esp
   1a67f:	push   DWORD PTR [ebp+0xc]
   1a682:	call   0x1b372
   1a687:	pop    ecx
   1a688:	pop    ebp
   1a689:	ret    0x8
   1a68c:	int3   
   1a68d:	int3   
   1a68e:	int3   
   1a68f:	int3   
   1a690:	int3   
   1a691:	int3   
   1a692:	mov    edi,edi
   1a694:	push   ebp
   1a695:	mov    ebp,esp
   1a697:	sub    esp,0x40
   1a69a:	mov    eax,DWORD PTR [ebp+0x8]
   1a69d:	mov    ecx,DWORD PTR [eax+0x4]
   1a6a0:	mov    edx,DWORD PTR [eax+0x10]
   1a6a3:	push   ebx
   1a6a4:	mov    ebx,DWORD PTR [eax]
   1a6a6:	dec    ebx
   1a6a7:	lea    ecx,[ecx+ebx*1-0x5]
   1a6ab:	mov    DWORD PTR [ebp-0x2c],ecx
   1a6ae:	mov    ecx,edx
   1a6b0:	sub    ecx,DWORD PTR [ebp+0xc]
   1a6b3:	push   esi
   1a6b4:	mov    esi,DWORD PTR [eax+0x1c]
   1a6b7:	push   edi
   1a6b8:	mov    edi,DWORD PTR [eax+0xc]
   1a6bb:	dec    edi
   1a6bc:	add    ecx,edi
   1a6be:	mov    DWORD PTR [ebp-0x3c],ecx
   1a6c1:	lea    ecx,[edx+edi*1-0x101]
   1a6c8:	mov    DWORD PTR [ebp-0x30],ecx
   1a6cb:	mov    ecx,DWORD PTR [esi+0x28]
   1a6ce:	mov    DWORD PTR [ebp-0x24],ecx
   1a6d1:	mov    ecx,DWORD PTR [esi+0x2c]
   1a6d4:	mov    DWORD PTR [ebp-0x40],ecx
   1a6d7:	mov    ecx,DWORD PTR [esi+0x30]
   1a6da:	mov    DWORD PTR [ebp-0x18],ecx
   1a6dd:	mov    ecx,DWORD PTR [esi+0x34]
   1a6e0:	mov    DWORD PTR [ebp-0x28],ecx
   1a6e3:	mov    ecx,DWORD PTR [esi+0x38]
   1a6e6:	mov    DWORD PTR [ebp-0x4],ecx
   1a6e9:	mov    ecx,DWORD PTR [esi+0x3c]
   1a6ec:	mov    DWORD PTR [ebp+0xc],ecx
   1a6ef:	mov    ecx,DWORD PTR [esi+0x4c]
   1a6f2:	xor    edx,edx
   1a6f4:	mov    DWORD PTR [ebp-0x1c],ecx
   1a6f7:	mov    ecx,DWORD PTR [esi+0x50]
   1a6fa:	inc    edx
   1a6fb:	mov    DWORD PTR [ebp-0x20],ecx
   1a6fe:	mov    ecx,DWORD PTR [esi+0x54]
   1a701:	shl    edx,cl
   1a703:	mov    ecx,DWORD PTR [esi+0x58]
   1a706:	dec    edx
   1a707:	mov    DWORD PTR [ebp-0x34],edx
   1a70a:	xor    edx,edx
   1a70c:	inc    edx
   1a70d:	shl    edx,cl
   1a70f:	dec    edx
   1a710:	mov    DWORD PTR [ebp-0x38],edx
   1a713:	mov    ecx,DWORD PTR [ebp+0xc]
   1a716:	cmp    ecx,0xf
   1a719:	jae    0x1a738
   1a71b:	add    DWORD PTR [ebp+0xc],0x8
   1a71f:	inc    ebx
   1a720:	movzx  edx,BYTE PTR [ebx]
   1a723:	shl    edx,cl
   1a725:	mov    ecx,DWORD PTR [ebp+0xc]
   1a728:	add    DWORD PTR [ebp-0x4],edx
   1a72b:	inc    ebx
   1a72c:	movzx  edx,BYTE PTR [ebx]
   1a72f:	shl    edx,cl
   1a731:	add    DWORD PTR [ebp-0x4],edx
   1a734:	add    DWORD PTR [ebp+0xc],0x8
   1a738:	mov    ecx,DWORD PTR [ebp-0x34]
   1a73b:	and    ecx,DWORD PTR [ebp-0x4]
   1a73e:	mov    edx,DWORD PTR [ebp-0x1c]
   1a741:	mov    ecx,DWORD PTR [edx+ecx*4]
   1a744:	mov    DWORD PTR [ebp-0x10],ecx
   1a747:	mov    edx,DWORD PTR [ebp-0x10]
   1a74a:	shr    ecx,0x8
   1a74d:	movzx  ecx,cl
   1a750:	shr    DWORD PTR [ebp-0x4],cl
   1a753:	sub    DWORD PTR [ebp+0xc],ecx
   1a756:	mov    DWORD PTR [ebp-0x8],ecx
   1a759:	movzx  ecx,dl
   1a75c:	mov    DWORD PTR [ebp-0x8],ecx
   1a75f:	test   ecx,ecx
   1a761:	je     0x1a7aa
   1a763:	mov    ecx,DWORD PTR [ebp-0x8]
   1a766:	test   cl,0x10
   1a769:	jne    0x1a7b5
   1a76b:	test   cl,0x40
   1a76e:	jne    0x1aa04
   1a774:	xor    edx,edx
   1a776:	inc    edx
   1a777:	shl    edx,cl
   1a779:	mov    ecx,DWORD PTR [ebp-0x10]
   1a77c:	shr    ecx,0x10
   1a77f:	dec    edx
   1a780:	and    edx,DWORD PTR [ebp-0x4]
   1a783:	add    edx,ecx
   1a785:	mov    ecx,DWORD PTR [ebp-0x1c]
   1a788:	mov    ecx,DWORD PTR [ecx+edx*4]
   1a78b:	mov    DWORD PTR [ebp-0x10],ecx
   1a78e:	mov    edx,DWORD PTR [ebp-0x10]
   1a791:	shr    ecx,0x8
   1a794:	movzx  ecx,cl
   1a797:	shr    DWORD PTR [ebp-0x4],cl
   1a79a:	sub    DWORD PTR [ebp+0xc],ecx
   1a79d:	mov    DWORD PTR [ebp-0x8],ecx
   1a7a0:	movzx  ecx,dl
   1a7a3:	mov    DWORD PTR [ebp-0x8],ecx
   1a7a6:	test   ecx,ecx
   1a7a8:	jne    0x1a763
   1a7aa:	inc    edi
   1a7ab:	shr    edx,0x10
   1a7ae:	mov    BYTE PTR [edi],dl
   1a7b0:	jmp    0x1a9e2
   1a7b5:	shr    edx,0x10
   1a7b8:	and    ecx,0xf
   1a7bb:	mov    DWORD PTR [ebp-0xc],edx
   1a7be:	mov    DWORD PTR [ebp-0x8],ecx
   1a7c1:	je     0x1a7ed
   1a7c3:	mov    ecx,DWORD PTR [ebp+0xc]
   1a7c6:	cmp    ecx,DWORD PTR [ebp-0x8]
   1a7c9:	jae    0x1a7d8
   1a7cb:	inc    ebx
   1a7cc:	movzx  edx,BYTE PTR [ebx]
   1a7cf:	shl    edx,cl
   1a7d1:	add    DWORD PTR [ebp-0x4],edx
   1a7d4:	add    DWORD PTR [ebp+0xc],0x8
   1a7d8:	mov    ecx,DWORD PTR [ebp-0x8]
   1a7db:	xor    edx,edx
   1a7dd:	inc    edx
   1a7de:	shl    edx,cl
   1a7e0:	dec    edx
   1a7e1:	and    edx,DWORD PTR [ebp-0x4]
   1a7e4:	shr    DWORD PTR [ebp-0x4],cl
   1a7e7:	add    DWORD PTR [ebp-0xc],edx
   1a7ea:	sub    DWORD PTR [ebp+0xc],ecx
   1a7ed:	mov    ecx,DWORD PTR [ebp+0xc]
   1a7f0:	cmp    ecx,0xf
   1a7f3:	jae    0x1a812
   1a7f5:	add    DWORD PTR [ebp+0xc],0x8
   1a7f9:	inc    ebx
   1a7fa:	movzx  edx,BYTE PTR [ebx]
   1a7fd:	shl    edx,cl
   1a7ff:	mov    ecx,DWORD PTR [ebp+0xc]
   1a802:	add    DWORD PTR [ebp-0x4],edx
   1a805:	inc    ebx
   1a806:	movzx  edx,BYTE PTR [ebx]
   1a809:	shl    edx,cl
   1a80b:	add    DWORD PTR [ebp-0x4],edx
   1a80e:	add    DWORD PTR [ebp+0xc],0x8
   1a812:	mov    ecx,DWORD PTR [ebp-0x38]
   1a815:	and    ecx,DWORD PTR [ebp-0x4]
   1a818:	mov    edx,DWORD PTR [ebp-0x20]
   1a81b:	mov    ecx,DWORD PTR [edx+ecx*4]
   1a81e:	jmp    0x1a83e
   1a820:	test   cl,0x40
   1a823:	jne    0x1a9fb
   1a829:	xor    edx,edx
   1a82b:	inc    edx
   1a82c:	shl    edx,cl
   1a82e:	movzx  ecx,WORD PTR [ebp-0xe]
   1a832:	dec    edx
   1a833:	and    edx,DWORD PTR [ebp-0x4]
   1a836:	add    edx,ecx
   1a838:	mov    ecx,DWORD PTR [ebp-0x20]
   1a83b:	mov    ecx,DWORD PTR [ecx+edx*4]
   1a83e:	mov    DWORD PTR [ebp-0x10],ecx
   1a841:	mov    edx,DWORD PTR [ebp-0x10]
   1a844:	shr    ecx,0x8
   1a847:	movzx  ecx,cl
   1a84a:	shr    DWORD PTR [ebp-0x4],cl
   1a84d:	sub    DWORD PTR [ebp+0xc],ecx
   1a850:	mov    DWORD PTR [ebp-0x8],ecx
   1a853:	movzx  ecx,dl
   1a856:	test   cl,0x10
   1a859:	je     0x1a820
   1a85b:	and    ecx,0xf
   1a85e:	shr    edx,0x10
   1a861:	mov    DWORD PTR [ebp-0x14],edx
   1a864:	mov    DWORD PTR [ebp-0x8],ecx
   1a867:	cmp    DWORD PTR [ebp+0xc],ecx
   1a86a:	jae    0x1a897
   1a86c:	mov    ecx,DWORD PTR [ebp+0xc]
   1a86f:	add    DWORD PTR [ebp+0xc],0x8
   1a873:	inc    ebx
   1a874:	movzx  edx,BYTE PTR [ebx]
   1a877:	shl    edx,cl
   1a879:	mov    ecx,DWORD PTR [ebp-0x8]
   1a87c:	add    DWORD PTR [ebp-0x4],edx
   1a87f:	cmp    DWORD PTR [ebp+0xc],ecx
   1a882:	jae    0x1a897
   1a884:	mov    ecx,DWORD PTR [ebp+0xc]
   1a887:	inc    ebx
   1a888:	movzx  edx,BYTE PTR [ebx]
   1a88b:	shl    edx,cl
   1a88d:	mov    ecx,DWORD PTR [ebp-0x8]
   1a890:	add    DWORD PTR [ebp-0x4],edx
   1a893:	add    DWORD PTR [ebp+0xc],0x8
   1a897:	xor    edx,edx
   1a899:	inc    edx
   1a89a:	shl    edx,cl
   1a89c:	mov    ecx,DWORD PTR [ebp-0x8]
   1a89f:	sub    DWORD PTR [ebp+0xc],ecx
   1a8a2:	dec    edx
   1a8a3:	and    edx,DWORD PTR [ebp-0x4]
   1a8a6:	shr    DWORD PTR [ebp-0x4],cl
   1a8a9:	add    DWORD PTR [ebp-0x14],edx
   1a8ac:	mov    edx,DWORD PTR [ebp-0x14]
   1a8af:	mov    ecx,edi
   1a8b1:	sub    ecx,DWORD PTR [ebp-0x3c]
   1a8b4:	cmp    edx,ecx
   1a8b6:	jbe    0x1a9aa
   1a8bc:	sub    edx,ecx
   1a8be:	mov    DWORD PTR [ebp-0x8],edx
   1a8c1:	cmp    edx,DWORD PTR [ebp-0x40]
   1a8c4:	ja     0x1a9f2
   1a8ca:	mov    ecx,DWORD PTR [ebp-0x28]
   1a8cd:	dec    ecx
   1a8ce:	mov    DWORD PTR [ebp-0x10],ecx
   1a8d1:	mov    ecx,DWORD PTR [ebp-0x18]
   1a8d4:	test   ecx,ecx
   1a8d6:	jne    0x1a8fe
   1a8d8:	mov    ecx,DWORD PTR [ebp-0x24]
   1a8db:	sub    ecx,edx
   1a8dd:	add    DWORD PTR [ebp-0x10],ecx
   1a8e0:	mov    ecx,edx
   1a8e2:	cmp    ecx,DWORD PTR [ebp-0xc]
   1a8e5:	jae    0x1a973
   1a8eb:	sub    DWORD PTR [ebp-0xc],ecx
   1a8ee:	mov    ecx,DWORD PTR [ebp-0x10]
   1a8f1:	inc    ecx
   1a8f2:	mov    dl,BYTE PTR [ecx]
   1a8f4:	inc    edi
   1a8f5:	dec    DWORD PTR [ebp-0x8]
   1a8f8:	mov    BYTE PTR [edi],dl
   1a8fa:	jne    0x1a8f1
   1a8fc:	jmp    0x1a949
   1a8fe:	cmp    ecx,edx
   1a900:	jae    0x1a953
   1a902:	sub    ecx,edx
   1a904:	add    ecx,DWORD PTR [ebp-0x24]
   1a907:	add    DWORD PTR [ebp-0x10],ecx
   1a90a:	mov    ecx,DWORD PTR [ebp-0x8]
   1a90d:	sub    ecx,DWORD PTR [ebp-0x18]
   1a910:	cmp    ecx,DWORD PTR [ebp-0xc]
   1a913:	jae    0x1a973
   1a915:	sub    DWORD PTR [ebp-0xc],ecx
   1a918:	inc    DWORD PTR [ebp-0x10]
   1a91b:	mov    edx,DWORD PTR [ebp-0x10]
   1a91e:	mov    dl,BYTE PTR [edx]
   1a920:	inc    edi
   1a921:	dec    ecx
   1a922:	mov    BYTE PTR [edi],dl
   1a924:	jne    0x1a918
   1a926:	mov    ecx,DWORD PTR [ebp-0x28]
   1a929:	dec    ecx
   1a92a:	mov    DWORD PTR [ebp-0x10],ecx
   1a92d:	mov    ecx,DWORD PTR [ebp-0x18]
   1a930:	cmp    ecx,DWORD PTR [ebp-0xc]
   1a933:	jae    0x1a973
   1a935:	sub    DWORD PTR [ebp-0xc],ecx
   1a938:	mov    DWORD PTR [ebp-0x8],ecx
   1a93b:	mov    ecx,DWORD PTR [ebp-0x10]
   1a93e:	inc    ecx
   1a93f:	mov    dl,BYTE PTR [ecx]
   1a941:	inc    edi
   1a942:	dec    DWORD PTR [ebp-0x8]
   1a945:	mov    BYTE PTR [edi],dl
   1a947:	jne    0x1a93e
   1a949:	mov    ecx,edi
   1a94b:	sub    ecx,DWORD PTR [ebp-0x14]
   1a94e:	mov    DWORD PTR [ebp-0x10],ecx
   1a951:	jmp    0x1a976
   1a953:	sub    ecx,edx
   1a955:	add    DWORD PTR [ebp-0x10],ecx
   1a958:	mov    ecx,DWORD PTR [ebp-0x8]
   1a95b:	cmp    ecx,DWORD PTR [ebp-0xc]
   1a95e:	jae    0x1a973
   1a960:	sub    DWORD PTR [ebp-0xc],ecx
   1a963:	mov    ecx,DWORD PTR [ebp-0x10]
   1a966:	inc    ecx
   1a967:	mov    dl,BYTE PTR [ecx]
   1a969:	inc    edi
   1a96a:	dec    DWORD PTR [ebp-0x8]
   1a96d:	mov    BYTE PTR [edi],dl
   1a96f:	jne    0x1a966
   1a971:	jmp    0x1a949
   1a973:	mov    ecx,DWORD PTR [ebp-0x10]
   1a976:	mov    edx,DWORD PTR [ebp-0xc]
   1a979:	cmp    edx,0x2
   1a97c:	jbe    0x1a9ca
   1a97e:	lea    eax,[edx-0x3]
   1a981:	push   0x3
   1a983:	xor    edx,edx
   1a985:	pop    ecx
   1a986:	div    ecx
   1a988:	mov    ecx,DWORD PTR [ebp-0x10]
   1a98b:	inc    eax
   1a98c:	sub    DWORD PTR [ebp-0xc],0x3
   1a990:	inc    ecx
   1a991:	mov    dl,BYTE PTR [ecx]
   1a993:	inc    edi
   1a994:	mov    BYTE PTR [edi],dl
   1a996:	inc    ecx
   1a997:	mov    dl,BYTE PTR [ecx]
   1a999:	inc    edi
   1a99a:	inc    ecx
   1a99b:	mov    BYTE PTR [edi],dl
   1a99d:	mov    dl,BYTE PTR [ecx]
   1a99f:	inc    edi
   1a9a0:	dec    eax
   1a9a1:	mov    BYTE PTR [edi],dl
   1a9a3:	jne    0x1a98c
   1a9a5:	mov    eax,DWORD PTR [ebp+0x8]
   1a9a8:	jmp    0x1a9ca
   1a9aa:	mov    ecx,edi
   1a9ac:	sub    ecx,edx
   1a9ae:	sub    DWORD PTR [ebp-0xc],0x3
   1a9b2:	inc    ecx
   1a9b3:	mov    dl,BYTE PTR [ecx]
   1a9b5:	inc    edi
   1a9b6:	mov    BYTE PTR [edi],dl
   1a9b8:	inc    ecx
   1a9b9:	mov    dl,BYTE PTR [ecx]
   1a9bb:	inc    edi
   1a9bc:	inc    ecx
   1a9bd:	mov    BYTE PTR [edi],dl
   1a9bf:	mov    dl,BYTE PTR [ecx]
   1a9c1:	inc    edi
   1a9c2:	cmp    DWORD PTR [ebp-0xc],0x2
   1a9c6:	mov    BYTE PTR [edi],dl
   1a9c8:	ja     0x1a9ae
   1a9ca:	cmp    DWORD PTR [ebp-0xc],0x0
   1a9ce:	je     0x1a9e2
   1a9d0:	inc    ecx
   1a9d1:	mov    dl,BYTE PTR [ecx]
   1a9d3:	inc    edi
   1a9d4:	cmp    DWORD PTR [ebp-0xc],0x1
   1a9d8:	mov    BYTE PTR [edi],dl
   1a9da:	jbe    0x1a9e2
   1a9dc:	mov    cl,BYTE PTR [ecx+0x1]
   1a9df:	inc    edi
   1a9e0:	mov    BYTE PTR [edi],cl
   1a9e2:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1a9e5:	jae    0x1aa1e
   1a9e7:	cmp    edi,DWORD PTR [ebp-0x30]
   1a9ea:	jb     0x1a713
   1a9f0:	jmp    0x1aa1e
   1a9f2:	mov    DWORD PTR [eax+0x18],0x1c820
   1a9f9:	jmp    0x1aa18
   1a9fb:	mov    DWORD PTR [eax+0x18],0x1c83e
   1aa02:	jmp    0x1aa18
   1aa04:	test   cl,0x20
   1aa07:	je     0x1aa11
   1aa09:	mov    DWORD PTR [esi],0xb
   1aa0f:	jmp    0x1aa1e
   1aa11:	mov    DWORD PTR [eax+0x18],0x1c854
   1aa18:	mov    DWORD PTR [esi],0x1b
   1aa1e:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa21:	shr    ecx,0x3
   1aa24:	sub    ebx,ecx
   1aa26:	shl    ecx,0x3
   1aa29:	sub    DWORD PTR [ebp+0xc],ecx
   1aa2c:	xor    ecx,ecx
   1aa2e:	inc    ecx
   1aa2f:	mov    edx,ecx
   1aa31:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa34:	shl    edx,cl
   1aa36:	dec    edx
   1aa37:	mov    ecx,edx
   1aa39:	mov    edx,DWORD PTR [ebp-0x4]
   1aa3c:	and    edx,ecx
   1aa3e:	lea    ecx,[ebx+0x1]
   1aa41:	mov    DWORD PTR [eax],ecx
   1aa43:	lea    ecx,[edi+0x1]
   1aa46:	mov    DWORD PTR [eax+0xc],ecx
   1aa49:	mov    ecx,DWORD PTR [ebp-0x2c]
   1aa4c:	sub    ecx,ebx
   1aa4e:	add    ecx,0x5
   1aa51:	mov    DWORD PTR [eax+0x4],ecx
   1aa54:	mov    ecx,DWORD PTR [ebp-0x30]
   1aa57:	sub    ecx,edi
   1aa59:	add    ecx,0x101
   1aa5f:	mov    DWORD PTR [eax+0x10],ecx
   1aa62:	mov    eax,DWORD PTR [ebp+0xc]
   1aa65:	pop    edi
   1aa66:	mov    DWORD PTR [esi+0x38],edx
   1aa69:	mov    DWORD PTR [esi+0x3c],eax
   1aa6c:	pop    esi
   1aa6d:	pop    ebx
   1aa6e:	leave  
   1aa6f:	ret    0x8
   1aa72:	int3   
   1aa73:	int3   
   1aa74:	int3   
   1aa75:	int3   
   1aa76:	int3   
   1aa77:	int3   
   1aa78:	mov    edi,edi
   1aa7a:	push   ebp
   1aa7b:	mov    ebp,esp
   1aa7d:	sub    esp,0x90
   1aa83:	mov    eax,ds:0x72518
   1aa88:	xor    eax,ebp
   1aa8a:	mov    DWORD PTR [ebp-0x4],eax
   1aa8d:	mov    eax,DWORD PTR [ebp+0xc]
   1aa90:	mov    edx,DWORD PTR [ebp+0x18]
   1aa93:	mov    DWORD PTR [ebp-0x7c],eax
   1aa96:	mov    eax,DWORD PTR [ebp+0x1c]
   1aa99:	push   ebx
   1aa9a:	mov    DWORD PTR [ebp-0x4c],eax
   1aa9d:	xor    eax,eax
   1aa9f:	push   esi
   1aaa0:	mov    esi,DWORD PTR [ebp+0x14]
   1aaa3:	movzx  ebx,ax
   1aaa6:	push   edi
   1aaa7:	mov    eax,ebx
   1aaa9:	shl    ebx,0x10
   1aaac:	push   0x8
   1aaae:	or     eax,ebx
   1aab0:	pop    ecx
   1aab1:	lea    edi,[ebp-0x24]
   1aab4:	rep stos DWORD PTR es:[edi],eax
   1aab6:	xor    edi,edi
   1aab8:	xor    ecx,ecx
   1aaba:	mov    DWORD PTR [ebp-0x90],edx
   1aac0:	cmp    DWORD PTR [ebp+0x10],edi
   1aac3:	jbe    0x1aad9
   1aac5:	mov    eax,DWORD PTR [ebp-0x7c]
   1aac8:	movzx  eax,WORD PTR [eax+ecx*2]
   1aacc:	lea    eax,[ebp+eax*2-0x24]
   1aad0:	inc    WORD PTR [eax]
   1aad3:	inc    ecx
   1aad4:	cmp    ecx,DWORD PTR [ebp+0x10]
   1aad7:	jb     0x1aac5
   1aad9:	mov    ecx,DWORD PTR [edx]
   1aadb:	push   0xf
   1aadd:	pop    eax
   1aade:	mov    DWORD PTR [ebp-0x54],ecx
   1aae1:	mov    DWORD PTR [ebp-0x60],eax
   1aae4:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1aae9:	jne    0x1aaf4
   1aaeb:	dec    eax
   1aaec:	mov    DWORD PTR [ebp-0x60],eax
   1aaef:	cmp    eax,0x1
   1aaf2:	jae    0x1aae4
   1aaf4:	cmp    ecx,eax
   1aaf6:	jbe    0x1aafb
   1aaf8:	mov    DWORD PTR [ebp-0x54],eax
   1aafb:	cmp    eax,edi
   1aafd:	jne    0x1ab29
   1aaff:	mov    ecx,DWORD PTR [esi]
   1ab01:	xor    eax,eax
   1ab03:	mov    BYTE PTR [ebp-0x48],0x40
   1ab07:	mov    BYTE PTR [ebp-0x47],0x1
   1ab0b:	mov    WORD PTR [ebp-0x46],ax
   1ab0f:	mov    eax,DWORD PTR [ebp-0x48]
   1ab12:	mov    DWORD PTR [ecx],eax
   1ab14:	add    DWORD PTR [esi],0x4
   1ab17:	mov    ecx,DWORD PTR [esi]
   1ab19:	mov    DWORD PTR [ecx],eax
   1ab1b:	add    DWORD PTR [esi],0x4
   1ab1e:	mov    DWORD PTR [edx],0x1
   1ab24:	jmp    0x1ae65
   1ab29:	xor    ecx,ecx
   1ab2b:	inc    ecx
   1ab2c:	mov    edx,ecx
   1ab2e:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1ab33:	jne    0x1ab3b
   1ab35:	inc    edx
   1ab36:	cmp    edx,0xf
   1ab39:	jbe    0x1ab2e
   1ab3b:	cmp    DWORD PTR [ebp-0x54],edx
   1ab3e:	jae    0x1ab43
   1ab40:	mov    DWORD PTR [ebp-0x54],edx
   1ab43:	mov    edi,ecx
   1ab45:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1ab4a:	add    edi,edi
   1ab4c:	sub    edi,ebx
   1ab4e:	js     0x1abda
   1ab54:	inc    ecx
   1ab55:	cmp    ecx,0xf
   1ab58:	jbe    0x1ab45
   1ab5a:	xor    ebx,ebx
   1ab5c:	cmp    edi,ebx
   1ab5e:	jle    0x1ab6a
   1ab60:	cmp    DWORD PTR [ebp+0x8],ebx
   1ab63:	je     0x1abda
   1ab65:	cmp    eax,0x1
   1ab68:	jne    0x1abda
   1ab6a:	xor    eax,eax
   1ab6c:	push   0x2
   1ab6e:	mov    WORD PTR [ebp-0x42],ax
   1ab72:	pop    ecx
   1ab73:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1ab78:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1ab7d:	inc    ecx
   1ab7e:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1ab83:	inc    ecx
   1ab84:	cmp    ecx,0x1e
   1ab87:	jb     0x1ab73
   1ab89:	mov    eax,DWORD PTR [ebp-0x4c]
   1ab8c:	xor    edi,edi
   1ab8e:	cmp    DWORD PTR [ebp+0x10],ebx
   1ab91:	jbe    0x1abbc
   1ab93:	mov    ecx,DWORD PTR [ebp-0x7c]
   1ab96:	lea    ecx,[ecx+edi*2]
   1ab99:	cmp    WORD PTR [ecx],bx
   1ab9c:	je     0x1abb6
   1ab9e:	movzx  ebx,WORD PTR [ecx]
   1aba1:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1aba6:	mov    WORD PTR [eax+ebx*2],di
   1abaa:	movzx  ecx,WORD PTR [ecx]
   1abad:	lea    ecx,[ebp+ecx*2-0x44]
   1abb1:	inc    WORD PTR [ecx]
   1abb4:	xor    ebx,ebx
   1abb6:	inc    edi
   1abb7:	cmp    edi,DWORD PTR [ebp+0x10]
   1abba:	jb     0x1ab93
   1abbc:	mov    ecx,DWORD PTR [ebp+0x8]
   1abbf:	sub    ecx,ebx
   1abc1:	je     0x1ac04
   1abc3:	dec    ecx
   1abc4:	je     0x1abe2
   1abc6:	or     DWORD PTR [ebp-0x68],0xffffffff
   1abca:	mov    DWORD PTR [ebp-0x6c],0x6ffd8
   1abd1:	mov    DWORD PTR [ebp-0x78],0x70018
   1abd8:	jmp    0x1ac11
   1abda:	or     eax,0xffffffff
   1abdd:	jmp    0x1ae67
   1abe2:	mov    ecx,0x202
   1abe7:	mov    edi,0x6ff58
   1abec:	sub    edi,ecx
   1abee:	mov    DWORD PTR [ebp-0x6c],edi
   1abf1:	mov    edi,0x6ff98
   1abf6:	sub    edi,ecx
   1abf8:	mov    DWORD PTR [ebp-0x78],edi
   1abfb:	mov    DWORD PTR [ebp-0x68],0x100
   1ac02:	jmp    0x1ac11
   1ac04:	mov    DWORD PTR [ebp-0x78],eax
   1ac07:	mov    DWORD PTR [ebp-0x6c],eax
   1ac0a:	mov    DWORD PTR [ebp-0x68],0x13
   1ac11:	mov    ecx,DWORD PTR [ebp-0x54]
   1ac14:	or     DWORD PTR [ebp-0x74],0xffffffff
   1ac18:	mov    edi,DWORD PTR [esi]
   1ac1a:	mov    eax,edx
   1ac1c:	xor    edx,edx
   1ac1e:	inc    edx
   1ac1f:	shl    edx,cl
   1ac21:	cmp    DWORD PTR [ebp+0x8],0x1
   1ac25:	mov    DWORD PTR [ebp-0x5c],ebx
   1ac28:	mov    DWORD PTR [ebp-0x84],eax
   1ac2e:	lea    ecx,[edx-0x1]
   1ac31:	mov    DWORD PTR [ebp-0x50],ebx
   1ac34:	mov    DWORD PTR [ebp-0x80],edx
   1ac37:	mov    DWORD PTR [ebp-0x64],edx
   1ac3a:	mov    DWORD PTR [ebp-0x88],ecx
   1ac40:	jne    0x1ac52
   1ac42:	cmp    edx,0x5b0
   1ac48:	jb     0x1ac52
   1ac4a:	xor    eax,eax
   1ac4c:	inc    eax
   1ac4d:	jmp    0x1ae67
   1ac52:	mov    ecx,DWORD PTR [ebp-0x4c]
   1ac55:	mov    DWORD PTR [ebp-0x58],ecx
   1ac58:	mov    cl,al
   1ac5a:	sub    cl,BYTE PTR [ebp-0x50]
   1ac5d:	mov    BYTE PTR [ebp-0x47],cl
   1ac60:	mov    ecx,DWORD PTR [ebp-0x58]
   1ac63:	movzx  edx,WORD PTR [ecx]
   1ac66:	movzx  ecx,dx
   1ac69:	cmp    ecx,DWORD PTR [ebp-0x68]
   1ac6c:	jge    0x1ac78
   1ac6e:	mov    BYTE PTR [ebp-0x48],0x0
   1ac72:	mov    WORD PTR [ebp-0x46],dx
   1ac76:	jmp    0x1ac9e
   1ac78:	jle    0x1ac94
   1ac7a:	mov    ecx,DWORD PTR [ebp-0x58]
   1ac7d:	movzx  ecx,WORD PTR [ecx]
   1ac80:	mov    edx,DWORD PTR [ebp-0x78]
   1ac83:	add    ecx,ecx
   1ac85:	mov    dl,BYTE PTR [ecx+edx*1]
   1ac88:	mov    BYTE PTR [ebp-0x48],dl
   1ac8b:	mov    edx,DWORD PTR [ebp-0x6c]
   1ac8e:	mov    cx,WORD PTR [ecx+edx*1]
   1ac92:	jmp    0x1ac9a
   1ac94:	mov    BYTE PTR [ebp-0x48],0x60
   1ac98:	xor    ecx,ecx
   1ac9a:	mov    WORD PTR [ebp-0x46],cx
   1ac9e:	xor    edx,edx
   1aca0:	mov    ecx,eax
   1aca2:	sub    ecx,DWORD PTR [ebp-0x50]
   1aca5:	inc    edx
   1aca6:	shl    edx,cl
   1aca8:	mov    ecx,DWORD PTR [ebp-0x80]
   1acab:	mov    DWORD PTR [ebp-0x4c],ecx
   1acae:	mov    DWORD PTR [ebp-0x70],ecx
   1acb1:	mov    ecx,DWORD PTR [ebp-0x50]
   1acb4:	shr    ebx,cl
   1acb6:	add    ebx,DWORD PTR [ebp-0x4c]
   1acb9:	lea    ecx,[edi+ebx*4]
   1acbc:	sub    DWORD PTR [ebp-0x4c],edx
   1acbf:	mov    ebx,edx
   1acc1:	shl    ebx,0x2
   1acc4:	sub    ecx,ebx
   1acc6:	cmp    DWORD PTR [ebp-0x4c],0x0
   1acca:	mov    ebx,DWORD PTR [ebp-0x48]
   1accd:	mov    DWORD PTR [ecx],ebx
   1accf:	jne    0x1acbc
   1acd1:	xor    edx,edx
   1acd3:	lea    ecx,[eax-0x1]
   1acd6:	inc    edx
   1acd7:	shl    edx,cl
   1acd9:	mov    ecx,DWORD PTR [ebp-0x5c]
   1acdc:	jmp    0x1ace0
   1acde:	shr    edx,1
   1ace0:	test   ecx,edx
   1ace2:	jne    0x1acde
   1ace4:	test   edx,edx
   1ace6:	je     0x1acf1
   1ace8:	lea    ebx,[edx-0x1]
   1aceb:	and    ebx,ecx
   1aced:	add    ebx,edx
   1acef:	jmp    0x1acf3
   1acf1:	xor    ebx,ebx
   1acf3:	add    DWORD PTR [ebp-0x58],0x2
   1acf7:	lea    ecx,[ebp+eax*2-0x24]
   1acfb:	mov    edx,0xffff
   1ad00:	add    WORD PTR [ecx],dx
   1ad03:	movzx  ecx,WORD PTR [ecx]
   1ad06:	mov    DWORD PTR [ebp-0x5c],ebx
   1ad09:	test   cx,cx
   1ad0c:	jne    0x1ad2a
   1ad0e:	cmp    eax,DWORD PTR [ebp-0x60]
   1ad11:	je     0x1aded
   1ad17:	mov    eax,DWORD PTR [ebp-0x58]
   1ad1a:	movzx  eax,WORD PTR [eax]
   1ad1d:	mov    ecx,DWORD PTR [ebp-0x7c]
   1ad20:	movzx  eax,WORD PTR [ecx+eax*2]
   1ad24:	mov    DWORD PTR [ebp-0x84],eax
   1ad2a:	mov    edx,DWORD PTR [ebp-0x54]
   1ad2d:	cmp    eax,edx
   1ad2f:	jbe    0x1ac58
   1ad35:	mov    ecx,DWORD PTR [ebp-0x88]
   1ad3b:	and    ecx,ebx
   1ad3d:	mov    DWORD PTR [ebp-0x8c],ecx
   1ad43:	cmp    ecx,DWORD PTR [ebp-0x74]
   1ad46:	je     0x1ac58
   1ad4c:	cmp    DWORD PTR [ebp-0x50],0x0
   1ad50:	jne    0x1ad55
   1ad52:	mov    DWORD PTR [ebp-0x50],edx
   1ad55:	mov    ecx,DWORD PTR [ebp-0x70]
   1ad58:	lea    edi,[edi+ecx*4]
   1ad5b:	mov    ecx,eax
   1ad5d:	mov    eax,DWORD PTR [ebp-0x50]
   1ad60:	xor    edx,edx
   1ad62:	sub    ecx,eax
   1ad64:	inc    edx
   1ad65:	add    eax,ecx
   1ad67:	shl    edx,cl
   1ad69:	cmp    eax,DWORD PTR [ebp-0x60]
   1ad6c:	jae    0x1ad96
   1ad6e:	mov    DWORD PTR [ebp-0x4c],eax
   1ad71:	lea    eax,[ebp+eax*2-0x24]
   1ad75:	jmp    0x1ad7a
   1ad77:	mov    eax,DWORD PTR [ebp-0x70]
   1ad7a:	movzx  ebx,WORD PTR [eax]
   1ad7d:	sub    edx,ebx
   1ad7f:	test   edx,edx
   1ad81:	jle    0x1ad96
   1ad83:	inc    ecx
   1ad84:	inc    DWORD PTR [ebp-0x4c]
   1ad87:	inc    eax
   1ad88:	inc    eax
   1ad89:	mov    DWORD PTR [ebp-0x70],eax
   1ad8c:	mov    eax,DWORD PTR [ebp-0x4c]
   1ad8f:	add    edx,edx
   1ad91:	cmp    eax,DWORD PTR [ebp-0x60]
   1ad94:	jb     0x1ad77
   1ad96:	xor    eax,eax
   1ad98:	inc    eax
   1ad99:	mov    edx,eax
   1ad9b:	shl    edx,cl
   1ad9d:	add    DWORD PTR [ebp-0x64],edx
   1ada0:	mov    DWORD PTR [ebp-0x80],edx
   1ada3:	cmp    DWORD PTR [ebp+0x8],eax
   1ada6:	jne    0x1adb5
   1ada8:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1adaf:	jae    0x1ae67
   1adb5:	mov    eax,DWORD PTR [ebp-0x8c]
   1adbb:	mov    ebx,DWORD PTR [ebp-0x5c]
   1adbe:	mov    edx,eax
   1adc0:	mov    DWORD PTR [ebp-0x74],eax
   1adc3:	mov    eax,DWORD PTR [esi]
   1adc5:	shl    edx,0x2
   1adc8:	mov    BYTE PTR [edx+eax*1],cl
   1adcb:	mov    eax,DWORD PTR [esi]
   1adcd:	mov    cl,BYTE PTR [ebp-0x54]
   1add0:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1add4:	mov    eax,DWORD PTR [esi]
   1add6:	mov    ecx,edi
   1add8:	sub    ecx,eax
   1adda:	sar    ecx,0x2
   1addd:	mov    WORD PTR [edx+eax*1+0x2],cx
   1ade2:	mov    eax,DWORD PTR [ebp-0x84]
   1ade8:	jmp    0x1ac58
   1aded:	mov    cl,al
   1adef:	sub    cl,BYTE PTR [ebp-0x50]
   1adf2:	mov    BYTE PTR [ebp-0x48],0x40
   1adf6:	mov    BYTE PTR [ebp-0x47],cl
   1adf9:	xor    ecx,ecx
   1adfb:	mov    WORD PTR [ebp-0x46],cx
   1adff:	jmp    0x1ae4e
   1ae01:	cmp    DWORD PTR [ebp-0x50],0x0
   1ae05:	je     0x1ae20
   1ae07:	mov    ecx,DWORD PTR [ebp-0x88]
   1ae0d:	and    ecx,ebx
   1ae0f:	cmp    ecx,DWORD PTR [ebp-0x74]
   1ae12:	je     0x1ae20
   1ae14:	mov    eax,DWORD PTR [ebp-0x54]
   1ae17:	and    DWORD PTR [ebp-0x50],0x0
   1ae1b:	mov    edi,DWORD PTR [esi]
   1ae1d:	mov    BYTE PTR [ebp-0x47],al
   1ae20:	mov    ecx,DWORD PTR [ebp-0x50]
   1ae23:	mov    edx,ebx
   1ae25:	shr    edx,cl
   1ae27:	mov    ecx,DWORD PTR [ebp-0x48]
   1ae2a:	mov    DWORD PTR [edi+edx*4],ecx
   1ae2d:	xor    edx,edx
   1ae2f:	lea    ecx,[eax-0x1]
   1ae32:	inc    edx
   1ae33:	shl    edx,cl
   1ae35:	jmp    0x1ae39
   1ae37:	shr    edx,1
   1ae39:	test   ebx,edx
   1ae3b:	jne    0x1ae37
   1ae3d:	test   edx,edx
   1ae3f:	je     0x1ae4c
   1ae41:	lea    ecx,[edx-0x1]
   1ae44:	and    ecx,ebx
   1ae46:	add    ecx,edx
   1ae48:	mov    ebx,ecx
   1ae4a:	jmp    0x1ae4e
   1ae4c:	xor    ebx,ebx
   1ae4e:	test   ebx,ebx
   1ae50:	jne    0x1ae01
   1ae52:	mov    eax,DWORD PTR [ebp-0x64]
   1ae55:	mov    ecx,DWORD PTR [ebp-0x54]
   1ae58:	shl    eax,0x2
   1ae5b:	add    DWORD PTR [esi],eax
   1ae5d:	mov    eax,DWORD PTR [ebp-0x90]
   1ae63:	mov    DWORD PTR [eax],ecx
   1ae65:	xor    eax,eax
   1ae67:	mov    ecx,DWORD PTR [ebp-0x4]
   1ae6a:	pop    edi
   1ae6b:	pop    esi
   1ae6c:	xor    ecx,ebp
   1ae6e:	pop    ebx
   1ae6f:	call   0x1b38f
   1ae74:	leave  
   1ae75:	ret    0x18
   1ae78:	int3   
   1ae79:	int3   
   1ae7a:	int3   
   1ae7b:	int3   
   1ae7c:	int3   
   1ae7d:	int3   
   1ae7e:	mov    edi,edi
   1ae80:	push   ebp
   1ae81:	mov    ebp,esp
   1ae83:	push   ebx
   1ae84:	mov    ebx,DWORD PTR [ebp+0x10]
   1ae87:	push   esi
   1ae88:	mov    esi,DWORD PTR [ebp+0x8]
   1ae8b:	push   edi
   1ae8c:	xor    eax,eax
   1ae8e:	mov    edi,esi
   1ae90:	inc    eax
   1ae91:	shr    edi,0x10
   1ae94:	and    esi,0xffff
   1ae9a:	cmp    ebx,eax
   1ae9c:	jne    0x1aec2
   1ae9e:	mov    eax,DWORD PTR [ebp+0xc]
   1aea1:	movzx  eax,BYTE PTR [eax]
   1aea4:	add    esi,eax
   1aea6:	mov    eax,0xfff1
   1aeab:	cmp    esi,eax
   1aead:	jb     0x1aeb1
   1aeaf:	sub    esi,eax
   1aeb1:	add    edi,esi
   1aeb3:	cmp    edi,eax
   1aeb5:	jb     0x1b094
   1aebb:	sub    edi,eax
   1aebd:	jmp    0x1b094
   1aec2:	mov    ecx,DWORD PTR [ebp+0xc]
   1aec5:	test   ecx,ecx
   1aec7:	je     0x1b09b
   1aecd:	cmp    ebx,0x10
   1aed0:	jb     0x1b057
   1aed6:	cmp    ebx,0x15b0
   1aedc:	jb     0x1afaa
   1aee2:	mov    eax,ebx
   1aee4:	mov    ebx,0x15b0
   1aee9:	xor    edx,edx
   1aeeb:	div    ebx
   1aeed:	mov    ebx,DWORD PTR [ebp+0x10]
   1aef0:	mov    DWORD PTR [ebp+0xc],eax
   1aef3:	sub    ebx,0x15b0
   1aef9:	mov    eax,0x15b
   1aefe:	movzx  edx,BYTE PTR [ecx]
   1af01:	add    esi,edx
   1af03:	movzx  edx,BYTE PTR [ecx+0x1]
   1af07:	add    edi,esi
   1af09:	add    esi,edx
   1af0b:	movzx  edx,BYTE PTR [ecx+0x2]
   1af0f:	add    edi,esi
   1af11:	add    esi,edx
   1af13:	movzx  edx,BYTE PTR [ecx+0x3]
   1af17:	add    edi,esi
   1af19:	add    esi,edx
   1af1b:	movzx  edx,BYTE PTR [ecx+0x4]
   1af1f:	add    edi,esi
   1af21:	add    esi,edx
   1af23:	movzx  edx,BYTE PTR [ecx+0x5]
   1af27:	add    edi,esi
   1af29:	add    esi,edx
   1af2b:	movzx  edx,BYTE PTR [ecx+0x6]
   1af2f:	add    edi,esi
   1af31:	add    esi,edx
   1af33:	movzx  edx,BYTE PTR [ecx+0x7]
   1af37:	add    edi,esi
   1af39:	add    esi,edx
   1af3b:	movzx  edx,BYTE PTR [ecx+0x8]
   1af3f:	add    edi,esi
   1af41:	add    esi,edx
   1af43:	movzx  edx,BYTE PTR [ecx+0x9]
   1af47:	add    edi,esi
   1af49:	add    esi,edx
   1af4b:	movzx  edx,BYTE PTR [ecx+0xa]
   1af4f:	add    edi,esi
   1af51:	add    esi,edx
   1af53:	movzx  edx,BYTE PTR [ecx+0xb]
   1af57:	add    edi,esi
   1af59:	add    esi,edx
   1af5b:	movzx  edx,BYTE PTR [ecx+0xc]
   1af5f:	add    edi,esi
   1af61:	add    esi,edx
   1af63:	movzx  edx,BYTE PTR [ecx+0xd]
   1af67:	add    edi,esi
   1af69:	add    esi,edx
   1af6b:	movzx  edx,BYTE PTR [ecx+0xe]
   1af6f:	add    edi,esi
   1af71:	add    esi,edx
   1af73:	movzx  edx,BYTE PTR [ecx+0xf]
   1af77:	add    edi,esi
   1af79:	add    esi,edx
   1af7b:	add    edi,esi
   1af7d:	add    ecx,0x10
   1af80:	dec    eax
   1af81:	jne    0x1aefe
   1af87:	mov    eax,esi
   1af89:	xor    edx,edx
   1af8b:	mov    esi,0xfff1
   1af90:	div    esi
   1af92:	mov    eax,edi
   1af94:	mov    edi,0xfff1
   1af99:	mov    esi,edx
   1af9b:	xor    edx,edx
   1af9d:	div    edi
   1af9f:	dec    DWORD PTR [ebp+0xc]
   1afa2:	mov    edi,edx
   1afa4:	jne    0x1aef3
   1afaa:	test   ebx,ebx
   1afac:	je     0x1b094
   1afb2:	cmp    ebx,0x10
   1afb5:	jb     0x1b079
   1afbb:	mov    eax,ebx
   1afbd:	shr    eax,0x4
   1afc0:	movzx  edx,BYTE PTR [ecx]
   1afc3:	add    esi,edx
   1afc5:	movzx  edx,BYTE PTR [ecx+0x1]
   1afc9:	add    edi,esi
   1afcb:	add    esi,edx
   1afcd:	movzx  edx,BYTE PTR [ecx+0x2]
   1afd1:	add    edi,esi
   1afd3:	add    esi,edx
   1afd5:	movzx  edx,BYTE PTR [ecx+0x3]
   1afd9:	add    edi,esi
   1afdb:	add    esi,edx
   1afdd:	movzx  edx,BYTE PTR [ecx+0x4]
   1afe1:	add    edi,esi
   1afe3:	add    esi,edx
   1afe5:	movzx  edx,BYTE PTR [ecx+0x5]
   1afe9:	add    edi,esi
   1afeb:	add    esi,edx
   1afed:	movzx  edx,BYTE PTR [ecx+0x6]
   1aff1:	add    edi,esi
   1aff3:	add    esi,edx
   1aff5:	movzx  edx,BYTE PTR [ecx+0x7]
   1aff9:	add    edi,esi
   1affb:	add    esi,edx
   1affd:	movzx  edx,BYTE PTR [ecx+0x8]
   1b001:	add    edi,esi
   1b003:	add    esi,edx
   1b005:	movzx  edx,BYTE PTR [ecx+0x9]
   1b009:	add    edi,esi
   1b00b:	add    esi,edx
   1b00d:	movzx  edx,BYTE PTR [ecx+0xa]
   1b011:	add    edi,esi
   1b013:	add    esi,edx
   1b015:	movzx  edx,BYTE PTR [ecx+0xb]
   1b019:	add    edi,esi
   1b01b:	add    esi,edx
   1b01d:	movzx  edx,BYTE PTR [ecx+0xc]
   1b021:	add    edi,esi
   1b023:	add    esi,edx
   1b025:	movzx  edx,BYTE PTR [ecx+0xd]
   1b029:	add    edi,esi
   1b02b:	add    esi,edx
   1b02d:	movzx  edx,BYTE PTR [ecx+0xe]
   1b031:	add    edi,esi
   1b033:	add    esi,edx
   1b035:	movzx  edx,BYTE PTR [ecx+0xf]
   1b039:	add    edi,esi
   1b03b:	add    esi,edx
   1b03d:	sub    ebx,0x10
   1b040:	add    edi,esi
   1b042:	add    ecx,0x10
   1b045:	dec    eax
   1b046:	jne    0x1afc0
   1b04c:	jmp    0x1b079
   1b04e:	movzx  eax,BYTE PTR [ecx]
   1b051:	dec    ebx
   1b052:	add    esi,eax
   1b054:	inc    ecx
   1b055:	add    edi,esi
   1b057:	test   ebx,ebx
   1b059:	jne    0x1b04e
   1b05b:	mov    ecx,0xfff1
   1b060:	cmp    esi,ecx
   1b062:	jb     0x1b066
   1b064:	sub    esi,ecx
   1b066:	mov    eax,edi
   1b068:	xor    edx,edx
   1b06a:	div    ecx
   1b06c:	mov    eax,edx
   1b06e:	jmp    0x1b096
   1b070:	movzx  eax,BYTE PTR [ecx]
   1b073:	dec    ebx
   1b074:	add    esi,eax
   1b076:	inc    ecx
   1b077:	add    edi,esi
   1b079:	test   ebx,ebx
   1b07b:	jne    0x1b070
   1b07d:	mov    eax,esi
   1b07f:	mov    ecx,0xfff1
   1b084:	xor    edx,edx
   1b086:	mov    esi,ecx
   1b088:	div    esi
   1b08a:	mov    eax,edi
   1b08c:	mov    esi,edx
   1b08e:	xor    edx,edx
   1b090:	div    ecx
   1b092:	mov    edi,edx
   1b094:	mov    eax,edi
   1b096:	shl    eax,0x10
   1b099:	or     eax,esi
   1b09b:	pop    edi
   1b09c:	pop    esi
   1b09d:	pop    ebx
   1b09e:	pop    ebp
   1b09f:	ret    0xc
   1b0a2:	int3   
   1b0a3:	int3   
   1b0a4:	int3   
   1b0a5:	int3   
   1b0a6:	int3   
   1b0a7:	int3   
   1b0a8:	mov    edi,edi
   1b0aa:	push   ebp
   1b0ab:	mov    ebp,esp
   1b0ad:	push   ecx
   1b0ae:	cmp    DWORD PTR [ebp+0x8],0x0
   1b0b2:	push   esi
   1b0b3:	not    eax
   1b0b5:	mov    ecx,0xff
   1b0ba:	je     0x1b0d8
   1b0bc:	test   dl,0x3
   1b0bf:	je     0x1b0d8
   1b0c1:	movzx  esi,BYTE PTR [edx]
   1b0c4:	xor    esi,eax
   1b0c6:	and    esi,ecx
   1b0c8:	shr    eax,0x8
   1b0cb:	xor    eax,DWORD PTR [esi*4+0x70058]
   1b0d2:	inc    edx
   1b0d3:	dec    DWORD PTR [ebp+0x8]
   1b0d6:	jne    0x1b0bc
   1b0d8:	cmp    DWORD PTR [ebp+0x8],0x20
   1b0dc:	push   ebx
   1b0dd:	push   edi
   1b0de:	push   0x4
   1b0e0:	mov    esi,edx
   1b0e2:	pop    edi
   1b0e3:	jb     0x1b2a7
   1b0e9:	mov    edx,DWORD PTR [ebp+0x8]
   1b0ec:	shr    edx,0x5
   1b0ef:	mov    DWORD PTR [ebp-0x4],edx
   1b0f2:	xor    eax,DWORD PTR [esi]
   1b0f4:	add    esi,edi
   1b0f6:	mov    edx,eax
   1b0f8:	shr    edx,0x10
   1b0fb:	mov    ebx,eax
   1b0fd:	shr    ebx,0x8
   1b100:	and    edx,ecx
   1b102:	mov    edx,DWORD PTR [edx*4+0x70458]
   1b109:	and    ebx,ecx
   1b10b:	xor    edx,DWORD PTR [ebx*4+0x70858]
   1b112:	mov    ebx,eax
   1b114:	shr    ebx,0x18
   1b117:	xor    edx,DWORD PTR [ebx*4+0x70058]
   1b11e:	and    eax,ecx
   1b120:	xor    edx,DWORD PTR [eax*4+0x70c58]
   1b127:	xor    edx,DWORD PTR [esi]
   1b129:	add    esi,edi
   1b12b:	mov    eax,edx
   1b12d:	shr    eax,0x10
   1b130:	mov    ebx,edx
   1b132:	shr    ebx,0x8
   1b135:	and    eax,ecx
   1b137:	mov    eax,DWORD PTR [eax*4+0x70458]
   1b13e:	and    ebx,ecx
   1b140:	xor    eax,DWORD PTR [ebx*4+0x70858]
   1b147:	mov    ebx,edx
   1b149:	shr    ebx,0x18
   1b14c:	xor    eax,DWORD PTR [ebx*4+0x70058]
   1b153:	and    edx,ecx
   1b155:	xor    eax,DWORD PTR [edx*4+0x70c58]
   1b15c:	xor    eax,DWORD PTR [esi]
   1b15e:	add    esi,edi
   1b160:	mov    edx,eax
   1b162:	shr    edx,0x10
   1b165:	mov    ebx,eax
   1b167:	and    edx,ecx
   1b169:	mov    edx,DWORD PTR [edx*4+0x70458]
   1b170:	shr    ebx,0x8
   1b173:	and    ebx,ecx
   1b175:	xor    edx,DWORD PTR [ebx*4+0x70858]
   1b17c:	mov    ebx,eax
   1b17e:	shr    ebx,0x18
   1b181:	xor    edx,DWORD PTR [ebx*4+0x70058]
   1b188:	and    eax,ecx
   1b18a:	xor    edx,DWORD PTR [eax*4+0x70c58]
   1b191:	xor    edx,DWORD PTR [esi]
   1b193:	add    esi,edi
   1b195:	mov    eax,edx
   1b197:	shr    eax,0x10
   1b19a:	mov    ebx,edx
   1b19c:	shr    ebx,0x8
   1b19f:	and    eax,ecx
   1b1a1:	mov    eax,DWORD PTR [eax*4+0x70458]
   1b1a8:	and    ebx,ecx
   1b1aa:	xor    eax,DWORD PTR [ebx*4+0x70858]
   1b1b1:	mov    ebx,edx
   1b1b3:	shr    ebx,0x18
   1b1b6:	xor    eax,DWORD PTR [ebx*4+0x70058]
   1b1bd:	and    edx,ecx
   1b1bf:	xor    eax,DWORD PTR [edx*4+0x70c58]
   1b1c6:	xor    eax,DWORD PTR [esi]
   1b1c8:	add    esi,edi
   1b1ca:	mov    edx,eax
   1b1cc:	shr    edx,0x10
   1b1cf:	mov    ebx,eax
   1b1d1:	and    edx,ecx
   1b1d3:	mov    edx,DWORD PTR [edx*4+0x70458]
   1b1da:	shr    ebx,0x8
   1b1dd:	and    ebx,ecx
   1b1df:	xor    edx,DWORD PTR [ebx*4+0x70858]
   1b1e6:	mov    ebx,eax
   1b1e8:	shr    ebx,0x18
   1b1eb:	xor    edx,DWORD PTR [ebx*4+0x70058]
   1b1f2:	and    eax,ecx
   1b1f4:	xor    edx,DWORD PTR [eax*4+0x70c58]
   1b1fb:	xor    edx,DWORD PTR [esi]
   1b1fd:	add    esi,edi
   1b1ff:	mov    eax,edx
   1b201:	shr    eax,0x10
   1b204:	and    eax,ecx
   1b206:	mov    ebx,edx
   1b208:	mov    eax,DWORD PTR [eax*4+0x70458]
   1b20f:	shr    ebx,0x8
   1b212:	and    ebx,ecx
   1b214:	xor    eax,DWORD PTR [ebx*4+0x70858]
   1b21b:	mov    ebx,edx
   1b21d:	shr    ebx,0x18
   1b220:	xor    eax,DWORD PTR [ebx*4+0x70058]
   1b227:	and    edx,ecx
   1b229:	xor    eax,DWORD PTR [edx*4+0x70c58]
   1b230:	sub    DWORD PTR [ebp+0x8],0x20
   1b234:	xor    eax,DWORD PTR [esi]
   1b236:	add    esi,edi
   1b238:	mov    edx,eax
   1b23a:	mov    ebx,eax
   1b23c:	shr    edx,0x10
   1b23f:	shr    ebx,0x8
   1b242:	and    edx,ecx
   1b244:	mov    edx,DWORD PTR [edx*4+0x70458]
   1b24b:	and    ebx,ecx
   1b24d:	xor    edx,DWORD PTR [ebx*4+0x70858]
   1b254:	mov    ebx,eax
   1b256:	shr    ebx,0x18
   1b259:	xor    edx,DWORD PTR [ebx*4+0x70058]
   1b260:	and    eax,ecx
   1b262:	xor    edx,DWORD PTR [eax*4+0x70c58]
   1b269:	xor    edx,DWORD PTR [esi]
   1b26b:	add    esi,edi
   1b26d:	mov    eax,edx
   1b26f:	shr    eax,0x10
   1b272:	and    eax,ecx
   1b274:	mov    eax,DWORD PTR [eax*4+0x70458]
   1b27b:	mov    ebx,edx
   1b27d:	shr    ebx,0x8
   1b280:	and    ebx,ecx
   1b282:	xor    eax,DWORD PTR [ebx*4+0x70858]
   1b289:	mov    ebx,edx
   1b28b:	shr    ebx,0x18
   1b28e:	xor    eax,DWORD PTR [ebx*4+0x70058]
   1b295:	and    edx,ecx
   1b297:	xor    eax,DWORD PTR [edx*4+0x70c58]
   1b29e:	dec    DWORD PTR [ebp-0x4]
   1b2a1:	jne    0x1b0f2
   1b2a7:	cmp    DWORD PTR [ebp+0x8],edi
   1b2aa:	jb     0x1b2f4
   1b2ac:	mov    edx,DWORD PTR [ebp+0x8]
   1b2af:	shr    edx,0x2
   1b2b2:	mov    DWORD PTR [ebp-0x4],edx
   1b2b5:	xor    eax,DWORD PTR [esi]
   1b2b7:	sub    DWORD PTR [ebp+0x8],edi
   1b2ba:	mov    edx,eax
   1b2bc:	shr    edx,0x10
   1b2bf:	and    edx,ecx
   1b2c1:	mov    edx,DWORD PTR [edx*4+0x70458]
   1b2c8:	mov    ebx,eax
   1b2ca:	shr    ebx,0x8
   1b2cd:	and    ebx,ecx
   1b2cf:	xor    edx,DWORD PTR [ebx*4+0x70858]
   1b2d6:	mov    ebx,eax
   1b2d8:	shr    ebx,0x18
   1b2db:	xor    edx,DWORD PTR [ebx*4+0x70058]
   1b2e2:	and    eax,ecx
   1b2e4:	xor    edx,DWORD PTR [eax*4+0x70c58]
   1b2eb:	add    esi,edi
   1b2ed:	dec    DWORD PTR [ebp-0x4]
   1b2f0:	mov    eax,edx
   1b2f2:	jne    0x1b2b5
   1b2f4:	cmp    DWORD PTR [ebp+0x8],0x0
   1b2f8:	pop    edi
   1b2f9:	pop    ebx
   1b2fa:	je     0x1b313
   1b2fc:	movzx  edx,BYTE PTR [esi]
   1b2ff:	xor    edx,eax
   1b301:	and    edx,ecx
   1b303:	shr    eax,0x8
   1b306:	xor    eax,DWORD PTR [edx*4+0x70058]
   1b30d:	inc    esi
   1b30e:	dec    DWORD PTR [ebp+0x8]
   1b311:	jne    0x1b2fc
   1b313:	not    eax
   1b315:	pop    esi
   1b316:	leave  
   1b317:	ret    0x4
   1b31a:	int3   
   1b31b:	int3   
   1b31c:	int3   
   1b31d:	int3   
   1b31e:	int3   
   1b31f:	int3   
   1b320:	mov    edi,edi
   1b322:	push   ebp
   1b323:	mov    ebp,esp
   1b325:	mov    edx,DWORD PTR [ebp+0xc]
   1b328:	test   edx,edx
   1b32a:	jne    0x1b330
   1b32c:	xor    eax,eax
   1b32e:	jmp    0x1b33b
   1b330:	push   DWORD PTR [ebp+0x10]
   1b333:	mov    eax,DWORD PTR [ebp+0x8]
   1b336:	call   0x1b0a8
   1b33b:	pop    ebp
   1b33c:	ret    0xc
   1b33f:	int3   
   1b340:	int3   
   1b341:	int3   
   1b342:	int3   
   1b343:	int3   
   1b344:	mov    edi,edi
   1b346:	push   ebp
   1b347:	mov    ebp,esp
   1b349:	push   0x20
   1b34b:	push   0x61737973
   1b350:	push   DWORD PTR [ebp+0x8]
   1b353:	push   0x1
   1b355:	call   DWORD PTR ds:0x1ca40
   1b35b:	test   eax,eax
   1b35d:	jne    0x1b36a
   1b35f:	push   0xc000009a
   1b364:	call   DWORD PTR ds:0x1ca20
   1b36a:	pop    ebp
   1b36b:	ret    
   1b36c:	int3   
   1b36d:	int3   
   1b36e:	int3   
   1b36f:	int3   
   1b370:	int3   
   1b371:	int3   
   1b372:	mov    edi,edi
   1b374:	push   ebp
   1b375:	mov    ebp,esp
   1b377:	cmp    DWORD PTR [ebp+0x8],0x0
   1b37b:	je     0x1b388
   1b37d:	push   0x0
   1b37f:	push   DWORD PTR [ebp+0x8]
   1b382:	call   DWORD PTR ds:0x1ca44
   1b388:	pop    ebp
   1b389:	ret    
   1b38a:	int3   
   1b38b:	int3   
   1b38c:	int3   
   1b38d:	int3   
   1b38e:	int3   
   1b38f:	cmp    ecx,DWORD PTR ds:0x72518
   1b395:	jne    0x1b39a
   1b397:	ret    0x0
   1b39a:	jmp    0x1b3a4
   1b39f:	int3   
   1b3a0:	int3   
   1b3a1:	int3   
   1b3a2:	int3   
   1b3a3:	int3   
   1b3a4:	mov    edi,edi
   1b3a6:	push   ebp
   1b3a7:	mov    ebp,esp
   1b3a9:	push   ecx
   1b3aa:	mov    DWORD PTR [ebp-0x4],ecx
   1b3ad:	push   0x0
   1b3af:	push   DWORD PTR ds:0x7251c
   1b3b5:	push   DWORD PTR ds:0x72518
   1b3bb:	push   DWORD PTR [ebp-0x4]
   1b3be:	push   0xf7
   1b3c3:	call   DWORD PTR ds:0x1ca4c
   1b3c9:	int3   
   1b3ca:	int3   
   1b3cb:	int3   
   1b3cc:	int3   
   1b3cd:	int3   
   1b3ce:	int3   
   1b3cf:	int3   
   1b3d0:	jmp    DWORD PTR ds:0x1ca08
   1b3d6:	int3   
   1b3d7:	int3   
   1b3d8:	int3   
   1b3d9:	int3   
   1b3da:	int3   
   1b3db:	int3   
   1b3dc:	jmp    DWORD PTR ds:0x1ca0c
   1b3e2:	int3   
   1b3e3:	int3   
   1b3e4:	int3   
   1b3e5:	int3   
   1b3e6:	int3   
   1b3e7:	int3   
   1b3e8:	jmp    DWORD PTR ds:0x1ca10
   1b3ee:	int3   
   1b3ef:	int3   
   1b3f0:	int3   
   1b3f1:	int3   
   1b3f2:	int3   
   1b3f3:	int3   
   1b3f4:	jmp    DWORD PTR ds:0x1ca18
   1b3fa:	int3   
   1b3fb:	int3   
   1b3fc:	int3   
   1b3fd:	int3   
   1b3fe:	int3   
   1b3ff:	int3   
   1b400:	jmp    DWORD PTR ds:0x1ca1c
   1b406:	int3   
   1b407:	int3   
   1b408:	int3   
   1b409:	int3   
   1b40a:	int3   
   1b40b:	int3   
   1b40c:	jmp    DWORD PTR ds:0x1ca28
   1b412:	int3   
   1b413:	int3   
   1b414:	int3   
   1b415:	int3   
   1b416:	int3   
   1b417:	int3   
   1b418:	jmp    DWORD PTR ds:0x1ca2c
   1b41e:	int3   
   1b41f:	int3   
   1b420:	int3   
   1b421:	int3   
   1b422:	int3   
   1b423:	int3   
   1b424:	push   0x1b490
   1b429:	push   DWORD PTR fs:0x0
   1b430:	mov    eax,DWORD PTR [esp+0x10]
   1b434:	mov    DWORD PTR [esp+0x10],ebp
   1b438:	lea    ebp,[esp+0x10]
   1b43c:	sub    esp,eax
   1b43e:	push   ebx
   1b43f:	push   esi
   1b440:	push   edi
   1b441:	mov    eax,ds:0x72518
   1b446:	xor    DWORD PTR [ebp-0x4],eax
   1b449:	xor    eax,ebp
   1b44b:	push   eax
   1b44c:	mov    DWORD PTR [ebp-0x18],esp
   1b44f:	push   DWORD PTR [ebp-0x8]
   1b452:	mov    eax,DWORD PTR [ebp-0x4]
   1b455:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b45c:	mov    DWORD PTR [ebp-0x8],eax
   1b45f:	lea    eax,[ebp-0x10]
   1b462:	mov    fs:0x0,eax
   1b468:	ret    
   1b469:	mov    ecx,DWORD PTR [ebp-0x10]
   1b46c:	mov    DWORD PTR fs:0x0,ecx
   1b473:	pop    ecx
   1b474:	pop    edi
   1b475:	pop    edi
   1b476:	pop    esi
   1b477:	pop    ebx
   1b478:	mov    esp,ebp
   1b47a:	pop    ebp
   1b47b:	push   ecx
   1b47c:	ret    
   1b47d:	int3   
   1b47e:	int3   
   1b47f:	int3   
   1b480:	int3   
   1b481:	int3   
   1b482:	int3   
   1b483:	int3   
   1b484:	int3   
   1b485:	int3   
   1b486:	int3   
   1b487:	int3   
   1b488:	int3   
   1b489:	int3   
   1b48a:	int3   
   1b48b:	int3   
   1b48c:	int3   
   1b48d:	int3   
   1b48e:	int3   
   1b48f:	int3   
   1b490:	mov    edi,edi
   1b492:	push   ebp
   1b493:	mov    ebp,esp
   1b495:	sub    esp,0x14
   1b498:	push   ebx
   1b499:	mov    ebx,DWORD PTR [ebp+0xc]
   1b49c:	push   esi
   1b49d:	mov    esi,DWORD PTR [ebx+0x8]
   1b4a0:	xor    esi,DWORD PTR ds:0x72518
   1b4a6:	push   edi
   1b4a7:	mov    eax,DWORD PTR [esi]
   1b4a9:	mov    BYTE PTR [ebp-0x1],0x0
   1b4ad:	mov    DWORD PTR [ebp-0x8],0x1
   1b4b4:	lea    edi,[ebx+0x10]
   1b4b7:	cmp    eax,0xfffffffe
   1b4ba:	je     0x1b4c9
   1b4bc:	mov    ecx,DWORD PTR [esi+0x4]
   1b4bf:	add    ecx,edi
   1b4c1:	xor    ecx,DWORD PTR [eax+edi*1]
   1b4c4:	call   0x1b38f
   1b4c9:	mov    ecx,DWORD PTR [esi+0xc]
   1b4cc:	mov    eax,DWORD PTR [esi+0x8]
   1b4cf:	add    ecx,edi
   1b4d1:	xor    ecx,DWORD PTR [eax+edi*1]
   1b4d4:	call   0x1b38f
   1b4d9:	mov    eax,DWORD PTR [ebp+0x8]
   1b4dc:	test   BYTE PTR [eax+0x4],0x66
   1b4e0:	jne    0x1b5c8
   1b4e6:	mov    ecx,DWORD PTR [ebp+0x10]
   1b4e9:	lea    edx,[ebp-0x14]
   1b4ec:	mov    DWORD PTR [ebx-0x4],edx
   1b4ef:	mov    ebx,DWORD PTR [ebx+0xc]
   1b4f2:	mov    DWORD PTR [ebp-0x14],eax
   1b4f5:	mov    DWORD PTR [ebp-0x10],ecx
   1b4f8:	cmp    ebx,0xfffffffe
   1b4fb:	je     0x1b55c
   1b4fd:	lea    ecx,[ecx+0x0]
   1b500:	lea    eax,[ebx+ebx*2]
   1b503:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1b507:	lea    eax,[esi+eax*4+0x10]
   1b50b:	mov    DWORD PTR [ebp-0xc],eax
   1b50e:	mov    eax,DWORD PTR [eax]
   1b510:	mov    DWORD PTR [ebp+0x8],eax
   1b513:	test   ecx,ecx
   1b515:	je     0x1b52b
   1b517:	mov    edx,edi
   1b519:	call   0x1b6d1
   1b51e:	mov    BYTE PTR [ebp-0x1],0x1
   1b522:	test   eax,eax
   1b524:	jl     0x1b566
   1b526:	jg     0x1b56f
   1b528:	mov    eax,DWORD PTR [ebp+0x8]
   1b52b:	mov    ebx,eax
   1b52d:	cmp    eax,0xfffffffe
   1b530:	jne    0x1b500
   1b532:	cmp    BYTE PTR [ebp-0x1],0x0
   1b536:	je     0x1b55c
   1b538:	mov    eax,DWORD PTR [esi]
   1b53a:	cmp    eax,0xfffffffe
   1b53d:	je     0x1b54c
   1b53f:	mov    ecx,DWORD PTR [esi+0x4]
   1b542:	add    ecx,edi
   1b544:	xor    ecx,DWORD PTR [eax+edi*1]
   1b547:	call   0x1b38f
   1b54c:	mov    ecx,DWORD PTR [esi+0xc]
   1b54f:	mov    edx,DWORD PTR [esi+0x8]
   1b552:	add    ecx,edi
   1b554:	xor    ecx,DWORD PTR [edx+edi*1]
   1b557:	call   0x1b38f
   1b55c:	mov    eax,DWORD PTR [ebp-0x8]
   1b55f:	pop    edi
   1b560:	pop    esi
   1b561:	pop    ebx
   1b562:	mov    esp,ebp
   1b564:	pop    ebp
   1b565:	ret    
   1b566:	mov    DWORD PTR [ebp-0x8],0x0
   1b56d:	jmp    0x1b538
   1b56f:	mov    ecx,DWORD PTR [ebp+0xc]
   1b572:	call   0x1b6fa
   1b577:	mov    eax,DWORD PTR [ebp+0xc]
   1b57a:	cmp    DWORD PTR [eax+0xc],ebx
   1b57d:	je     0x1b591
   1b57f:	push   0x72518
   1b584:	push   edi
   1b585:	mov    edx,ebx
   1b587:	mov    ecx,eax
   1b589:	call   0x1b714
   1b58e:	mov    eax,DWORD PTR [ebp+0xc]
   1b591:	mov    ecx,DWORD PTR [ebp+0x8]
   1b594:	mov    DWORD PTR [eax+0xc],ecx
   1b597:	mov    eax,DWORD PTR [esi]
   1b599:	cmp    eax,0xfffffffe
   1b59c:	je     0x1b5ab
   1b59e:	mov    ecx,DWORD PTR [esi+0x4]
   1b5a1:	add    ecx,edi
   1b5a3:	xor    ecx,DWORD PTR [eax+edi*1]
   1b5a6:	call   0x1b38f
   1b5ab:	mov    ecx,DWORD PTR [esi+0xc]
   1b5ae:	mov    edx,DWORD PTR [esi+0x8]
   1b5b1:	add    ecx,edi
   1b5b3:	xor    ecx,DWORD PTR [edx+edi*1]
   1b5b6:	call   0x1b38f
   1b5bb:	mov    eax,DWORD PTR [ebp-0xc]
   1b5be:	mov    ecx,DWORD PTR [eax+0x8]
   1b5c1:	mov    edx,edi
   1b5c3:	call   0x1b6e8
   1b5c8:	mov    edx,0xfffffffe
   1b5cd:	cmp    DWORD PTR [ebx+0xc],edx
   1b5d0:	je     0x1b55c
   1b5d2:	push   0x72518
   1b5d7:	push   edi
   1b5d8:	mov    ecx,ebx
   1b5da:	call   0x1b714
   1b5df:	jmp    0x1b538
   1b5e4:	int3   
   1b5e5:	int3   
   1b5e6:	int3   
   1b5e7:	int3   
   1b5e8:	int3   
   1b5e9:	int3   
   1b5ea:	int3   
   1b5eb:	int3   
   1b5ec:	push   ebx
   1b5ed:	push   esi
   1b5ee:	push   edi
   1b5ef:	mov    edx,DWORD PTR [esp+0x10]
   1b5f3:	mov    eax,DWORD PTR [esp+0x14]
   1b5f7:	mov    ecx,DWORD PTR [esp+0x18]
   1b5fb:	push   ebp
   1b5fc:	push   edx
   1b5fd:	push   eax
   1b5fe:	push   ecx
   1b5ff:	push   ecx
   1b600:	push   0x1b66f
   1b605:	push   DWORD PTR fs:0x0
   1b60c:	mov    eax,ds:0x72518
   1b611:	xor    eax,esp
   1b613:	mov    DWORD PTR [esp+0x8],eax
   1b617:	mov    DWORD PTR fs:0x0,esp
   1b61e:	mov    eax,DWORD PTR [esp+0x30]
   1b622:	mov    ebx,DWORD PTR [eax+0x8]
   1b625:	mov    ecx,DWORD PTR [esp+0x2c]
   1b629:	xor    ebx,DWORD PTR [ecx]
   1b62b:	mov    esi,DWORD PTR [eax+0xc]
   1b62e:	cmp    esi,0xfffffffe
   1b631:	je     0x1b661
   1b633:	mov    edx,DWORD PTR [esp+0x34]
   1b637:	cmp    edx,0xfffffffe
   1b63a:	je     0x1b640
   1b63c:	cmp    esi,edx
   1b63e:	jbe    0x1b661
   1b640:	lea    esi,[esi+esi*2]
   1b643:	lea    ebx,[ebx+esi*4+0x10]
   1b647:	mov    ecx,DWORD PTR [ebx]
   1b649:	mov    DWORD PTR [eax+0xc],ecx
   1b64c:	cmp    DWORD PTR [ebx+0x4],0x0
   1b650:	jne    0x1b61e
   1b652:	mov    ecx,0x1
   1b657:	mov    eax,DWORD PTR [ebx+0x8]
   1b65a:	call   0x1b78c
   1b65f:	jmp    0x1b61e
   1b661:	pop    DWORD PTR fs:0x0
   1b668:	add    esp,0x18
   1b66b:	pop    edi
   1b66c:	pop    esi
   1b66d:	pop    ebx
   1b66e:	ret    
   1b66f:	mov    ecx,DWORD PTR [esp+0x4]
   1b673:	test   DWORD PTR [ecx+0x4],0x6
   1b67a:	mov    eax,0x1
   1b67f:	je     0x1b6b4
   1b681:	mov    eax,DWORD PTR [esp+0x8]
   1b685:	mov    ecx,DWORD PTR [eax+0x8]
   1b688:	xor    ecx,eax
   1b68a:	call   0x1b38f
   1b68f:	push   ebp
   1b690:	mov    ebp,DWORD PTR [eax+0x18]
   1b693:	push   DWORD PTR [eax+0xc]
   1b696:	push   DWORD PTR [eax+0x10]
   1b699:	push   DWORD PTR [eax+0x14]
   1b69c:	call   0x1b5ec
   1b6a1:	add    esp,0xc
   1b6a4:	pop    ebp
   1b6a5:	mov    eax,DWORD PTR [esp+0x8]
   1b6a9:	mov    edx,DWORD PTR [esp+0x10]
   1b6ad:	mov    DWORD PTR [edx],eax
   1b6af:	mov    eax,0x3
   1b6b4:	ret    
   1b6b5:	push   ebp
   1b6b6:	mov    ecx,DWORD PTR [esp+0x8]
   1b6ba:	mov    ebp,DWORD PTR [ecx]
   1b6bc:	push   DWORD PTR [ecx+0x1c]
   1b6bf:	push   DWORD PTR [ecx+0x18]
   1b6c2:	push   DWORD PTR [ecx+0x28]
   1b6c5:	call   0x1b5ec
   1b6ca:	add    esp,0xc
   1b6cd:	pop    ebp
   1b6ce:	ret    0x4
   1b6d1:	push   ebp
   1b6d2:	push   esi
   1b6d3:	push   edi
   1b6d4:	push   ebx
   1b6d5:	mov    ebp,edx
   1b6d7:	xor    eax,eax
   1b6d9:	xor    ebx,ebx
   1b6db:	xor    edx,edx
   1b6dd:	xor    esi,esi
   1b6df:	xor    edi,edi
   1b6e1:	call   ecx
   1b6e3:	pop    ebx
   1b6e4:	pop    edi
   1b6e5:	pop    esi
   1b6e6:	pop    ebp
   1b6e7:	ret    
   1b6e8:	mov    ebp,edx
   1b6ea:	mov    esi,ecx
   1b6ec:	mov    eax,ecx
   1b6ee:	xor    eax,eax
   1b6f0:	xor    ebx,ebx
   1b6f2:	xor    ecx,ecx
   1b6f4:	xor    edx,edx
   1b6f6:	xor    edi,edi
   1b6f8:	jmp    esi
   1b6fa:	push   ebp
   1b6fb:	mov    ebp,esp
   1b6fd:	push   ebx
   1b6fe:	push   esi
   1b6ff:	push   edi
   1b700:	push   0x0
   1b702:	push   0x0
   1b704:	push   0x1b70f
   1b709:	push   ecx
   1b70a:	call   0x1b794
   1b70f:	pop    edi
   1b710:	pop    esi
   1b711:	pop    ebx
   1b712:	pop    ebp
   1b713:	ret    
   1b714:	push   ebp
   1b715:	mov    ebp,DWORD PTR [esp+0x8]
   1b719:	push   edx
   1b71a:	push   ecx
   1b71b:	push   DWORD PTR [esp+0x14]
   1b71f:	call   0x1b5ec
   1b724:	add    esp,0xc
   1b727:	pop    ebp
   1b728:	ret    0x8
   1b72b:	int3   
   1b72c:	int3   
   1b72d:	int3   
   1b72e:	int3   
   1b72f:	int3   
   1b730:	push   0x1b490
   1b735:	push   DWORD PTR fs:0x0
   1b73c:	mov    eax,DWORD PTR [esp+0x10]
   1b740:	mov    DWORD PTR [esp+0x10],ebp
   1b744:	lea    ebp,[esp+0x10]
   1b748:	sub    esp,eax
   1b74a:	push   ebx
   1b74b:	push   esi
   1b74c:	push   edi
   1b74d:	mov    eax,ds:0x72518
   1b752:	xor    DWORD PTR [ebp-0x4],eax
   1b755:	xor    eax,ebp
   1b757:	mov    DWORD PTR [ebp-0x1c],eax
   1b75a:	push   eax
   1b75b:	mov    DWORD PTR [ebp-0x18],esp
   1b75e:	push   DWORD PTR [ebp-0x8]
   1b761:	mov    eax,DWORD PTR [ebp-0x4]
   1b764:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b76b:	mov    DWORD PTR [ebp-0x8],eax
   1b76e:	lea    eax,[ebp-0x10]
   1b771:	mov    fs:0x0,eax
   1b777:	ret    
   1b778:	mov    ecx,DWORD PTR [ebp-0x1c]
   1b77b:	xor    ecx,ebp
   1b77d:	call   0x1b38f
   1b782:	jmp    0x1b469
   1b787:	int3   
   1b788:	int3   
   1b789:	int3   
   1b78a:	int3   
   1b78b:	int3   
   1b78c:	call   eax
   1b78e:	ret    
   1b78f:	int3   
   1b790:	int3   
   1b791:	int3   
   1b792:	int3   
   1b793:	int3   
   1b794:	jmp    DWORD PTR ds:0x1ca54
   1b79a:	pop    esp
   1b79b:	add    BYTE PTR [eax],al
   1b79d:	add    BYTE PTR [eax],al
   1b79f:	add    BYTE PTR [ebx+0x0],ch
   1b7a2:	bound  eax,QWORD PTR [eax]
   1b7a4:	add    BYTE PTR fs:[ecx+0x0],dh
   1b7a8:	add    BYTE PTR [eax],al
   1b7aa:	add    BYTE PTR fs:[ebx],dh
   1b7ad:	add    BYTE PTR [eax+eax*1+0x73],ah
   1b7b1:	add    BYTE PTR [eax],al
   1b7b3:	add    BYTE PTR [esi+0x0],ch
   1b7b6:	je     0x1b7b8
   1b7b8:	outs   dx,BYTE PTR ds:[esi]
   1b7b9:	add    BYTE PTR [eax],al
   1b7bb:	add    BYTE PTR [ebx+0x0],dh
   1b7be:	jns    0x1b7c0
   1b7c0:	jae    0x1b7c2
   1b7c2:	popa   
   1b7c3:	add    BYTE PTR [eax],al
   1b7c5:	add    BYTE PTR [edi+0x0],dh
   1b7c8:	imul   eax,DWORD PTR [eax],0x65006e
   1b7ce:	add    BYTE PTR [eax],al
   1b7d0:	jo     0x1b7d2
   1b7d2:	arpl   WORD PTR [eax],ax
   1b7d4:	imul   eax,DWORD PTR [eax],0x6d0000
   1b7da:	jae    0x1b7dc
   1b7dc:	jb     0x1b7de
   1b7de:	add    BYTE PTR [eax],al
   1b7e0:	je     0x1b7e2
   1b7e2:	ins    DWORD PTR es:[edi],dx
   1b7e3:	add    BYTE PTR [eax+0x0],dh
   1b7e6:	add    BYTE PTR [eax],al
   1b7e8:	jne    0x1b7ea
   1b7ea:	jae    0x1b7ec
   1b7ec:	bound  eax,QWORD PTR [eax]
   1b7ee:	add    BYTE PTR [eax],al
   1b7f0:	outs   dx,DWORD PTR ds:[esi]
   1b7f1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1b7f5:	add    BYTE PTR [eax],al
   1b7f7:	add    BYTE PTR [ecx+0x0],ah
   1b7fa:	imul   eax,DWORD PTR [eax],0x70
   1b800:	push   0x0
   1b802:	popa   
   1b803:	add    BYTE PTR [ecx+0x0],bh
   1b806:	add    BYTE PTR [eax],al
   1b808:	jbe    0x1b80a
   1b80a:	add    BYTE PTR gs:[edx+0x0],dh
   1b80e:	add    BYTE PTR [eax],al
   1b810:	jae    0x1b812
   1b812:	popa   
   1b813:	add    BYTE PTR [ecx+0x0],ch
   1b816:	add    BYTE PTR [eax],al
   1b818:	ins    BYTE PTR es:[edi],dx
   1b819:	add    BYTE PTR [ecx+0x0],ah
   1b81c:	arpl   WORD PTR [eax],ax
   1b81e:	add    BYTE PTR [eax],al
   1b820:	push   0x0
   1b822:	jo     0x1b824
   1b824:	add    BYTE PTR [bx+si],al
   1b827:	add    BYTE PTR [eax+0x0],ch
   1b82a:	imul   eax,DWORD PTR [eax],0x64
   1b830:	jo     0x1b832
   1b832:	outs   dx,BYTE PTR ds:[esi]
   1b833:	add    BYTE PTR [edi+0x0],ah
   1b836:	add    BYTE PTR [eax],al
   1b838:	add    ah,cl
   1b83a:	dec    ebx
   1b83b:	add    BYTE PTR [ebp+0x0],ah
   1b83e:	push   ebx
   1b83f:	add    BYTE PTR [ebp+0x0],ah
   1b842:	jb     0x1b844
   1b844:	jbe    0x1b846
   1b846:	imul   eax,DWORD PTR [eax],0x650063
   1b84c:	inc    esp
   1b84d:	add    BYTE PTR [ebp+0x0],ah
   1b850:	jae    0x1b852
   1b852:	arpl   WORD PTR [eax],ax
   1b854:	jb     0x1b856
   1b856:	imul   eax,DWORD PTR [eax],0x740070
   1b85c:	outs   dx,DWORD PTR ds:[esi]
   1b85d:	add    BYTE PTR [edx+0x0],dh
   1b860:	push   esp
   1b861:	add    BYTE PTR [ecx+0x0],ah
   1b864:	bound  eax,QWORD PTR [eax]
   1b866:	ins    BYTE PTR es:[edi],dx
   1b867:	add    BYTE PTR [ebp+0x0],ah
   1b86a:	add    BYTE PTR [eax],al
   1b86c:	pop    edx
   1b86d:	add    BYTE PTR [edi+0x0],dh
   1b870:	dec    edi
   1b871:	add    BYTE PTR [eax+0x0],dh
   1b874:	add    BYTE PTR gs:[esi+0x0],ch
   1b878:	push   eax
   1b879:	add    BYTE PTR [edx+0x0],dh
   1b87c:	outs   dx,DWORD PTR ds:[esi]
   1b87d:	add    BYTE PTR [ebx+0x0],ah
   1b880:	add    BYTE PTR gs:[ebx+0x0],dh
   1b884:	jae    0x1b886
   1b886:	add    BYTE PTR [eax],al
   1b888:	pop    edx
   1b889:	add    BYTE PTR [edi+0x0],dh
   1b88c:	inc    ecx
   1b88d:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1b891:	add    BYTE PTR [edi+0x0],ch
   1b894:	arpl   WORD PTR [eax],ax
   1b896:	popa   
   1b897:	add    BYTE PTR [eax+eax*1+0x65],dh
   1b89b:	add    BYTE PTR [esi+0x0],dl
   1b89e:	imul   eax,DWORD PTR [eax],0x740072
   1b8a4:	jne    0x1b8a6
   1b8a6:	popa   
   1b8a7:	add    BYTE PTR [eax+eax*1+0x4d],ch
   1b8ab:	add    BYTE PTR [ebp+0x0],ah
   1b8ae:	ins    DWORD PTR es:[edi],dx
   1b8af:	add    BYTE PTR [edi+0x0],ch
   1b8b2:	jb     0x1b8b4
   1b8b4:	jns    0x1b8b6
   1b8b6:	add    BYTE PTR [eax],al
   1b8b8:	push   eax
   1b8b9:	add    BYTE PTR [ebx+0x0],dh
   1b8bc:	dec    esp
   1b8bd:	add    BYTE PTR [edi+0x0],ch
   1b8c0:	outs   dx,DWORD PTR ds:[esi]
   1b8c1:	add    BYTE PTR [ebx+0x0],ch
   1b8c4:	jne    0x1b8c6
   1b8c6:	jo     0x1b8c8
   1b8c8:	push   eax
   1b8c9:	add    BYTE PTR [edx+0x0],dh
   1b8cc:	outs   dx,DWORD PTR ds:[esi]
   1b8cd:	add    BYTE PTR [ebx+0x0],ah
   1b8d0:	add    BYTE PTR gs:[ebx+0x0],dh
   1b8d4:	jae    0x1b8d6
   1b8d6:	inc    edx
   1b8d7:	add    BYTE PTR [ecx+0x0],bh
   1b8da:	push   eax
   1b8db:	add    BYTE PTR [edx+0x0],dh
   1b8de:	outs   dx,DWORD PTR ds:[esi]
   1b8df:	add    BYTE PTR [ebx+0x0],ah
   1b8e2:	add    BYTE PTR gs:[ebx+0x0],dh
   1b8e6:	jae    0x1b8e8
   1b8e8:	dec    ecx
   1b8e9:	add    BYTE PTR [eax+eax*1+0x0],ah
   1b8ed:	add    BYTE PTR [eax+0x0],dl
   1b8f0:	jae    0x1b8f2
   1b8f2:	push   ebx
   1b8f3:	add    BYTE PTR [ebp+0x0],ah
   1b8f6:	je     0x1b8f8
   1b8f8:	dec    esp
   1b8f9:	add    BYTE PTR [edi+0x0],ch
   1b8fc:	popa   
   1b8fd:	add    BYTE PTR [eax+eax*1+0x49],ah
   1b901:	add    BYTE PTR [ebp+0x0],ch
   1b904:	popa   
   1b905:	add    BYTE PTR [edi+0x0],ah
   1b908:	add    BYTE PTR gs:[esi+0x0],cl
   1b90c:	outs   dx,DWORD PTR ds:[esi]
   1b90d:	add    BYTE PTR [eax+eax*1+0x69],dh
   1b911:	add    BYTE PTR [esi+0x0],ah
   1b914:	jns    0x1b916
   1b916:	push   edx
   1b917:	add    BYTE PTR [edi+0x0],ch
   1b91a:	jne    0x1b91c
   1b91c:	je     0x1b91e
   1b91e:	imul   eax,DWORD PTR [eax],0x65006e
   1b924:	add    BYTE PTR [eax],al
   1b926:	pop    edx
   1b927:	add    BYTE PTR [edi+0x0],dh
   1b92a:	inc    esp
   1b92b:	add    BYTE PTR [ebp+0x0],dh
   1b92e:	jo     0x1b930
   1b930:	ins    BYTE PTR es:[edi],dx
   1b931:	add    BYTE PTR [ecx+0x0],ch
   1b934:	arpl   WORD PTR [eax],ax
   1b936:	popa   
   1b937:	add    BYTE PTR [eax+eax*1+0x65],dh
   1b93b:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1b93f:	add    BYTE PTR [ebx+0x0],ch
   1b942:	add    BYTE PTR gs:[esi+0x0],ch
   1b946:	add    BYTE PTR [eax],al
   1b948:	push   eax
   1b949:	add    BYTE PTR [ebx+0x0],dh
   1b94c:	push   ebx
   1b94d:	add    BYTE PTR [ebp+0x0],ah
   1b950:	je     0x1b952
   1b952:	inc    ebx
   1b953:	add    BYTE PTR [edx+0x0],dh
   1b956:	add    BYTE PTR gs:[ecx+0x0],ah
   1b95a:	je     0x1b95c
   1b95c:	add    BYTE PTR gs:[eax+0x0],dl
   1b960:	jb     0x1b962
   1b962:	outs   dx,DWORD PTR ds:[esi]
   1b963:	add    BYTE PTR [ebx+0x0],ah
   1b966:	add    BYTE PTR gs:[ebx+0x0],dh
   1b96a:	jae    0x1b96c
   1b96c:	dec    esi
   1b96d:	add    BYTE PTR [edi+0x0],ch
   1b970:	je     0x1b972
   1b972:	imul   eax,DWORD PTR [eax],0x790066
   1b978:	push   edx
   1b979:	add    BYTE PTR [edi+0x0],ch
   1b97c:	jne    0x1b97e
   1b97e:	je     0x1b980
   1b980:	imul   eax,DWORD PTR [eax],0x65006e
   1b986:	add    BYTE PTR [eax],al
   1b988:	pop    edx
   1b989:	add    BYTE PTR [edi+0x0],dh
   1b98c:	dec    edi
   1b98d:	add    BYTE PTR [eax+0x0],dh
   1b990:	add    BYTE PTR gs:[esi+0x0],ch
   1b994:	inc    esi
   1b995:	add    BYTE PTR [ecx+0x0],ch
   1b998:	ins    BYTE PTR es:[edi],dx
   1b999:	add    BYTE PTR [ebp+0x0],ah
   1b99c:	add    BYTE PTR [eax],al
   1b99e:	pop    edx
   1b99f:	add    BYTE PTR [edi+0x0],dh
   1b9a2:	push   ecx
   1b9a3:	add    BYTE PTR [ebp+0x0],dh
   1b9a6:	add    BYTE PTR gs:[edx+0x0],dh
   1b9aa:	jns    0x1b9ac
   1b9ac:	dec    ecx
   1b9ad:	add    BYTE PTR [esi+0x0],ch
   1b9b0:	data16 add BYTE PTR [edi+0x0],ch
   1b9b4:	jb     0x1b9b6
   1b9b6:	ins    DWORD PTR es:[edi],dx
   1b9b7:	add    BYTE PTR [ecx+0x0],ah
   1b9ba:	je     0x1b9bc
   1b9bc:	imul   eax,DWORD PTR [eax],0x6e006f
   1b9c2:	push   eax
   1b9c3:	add    BYTE PTR [edx+0x0],dh
   1b9c6:	outs   dx,DWORD PTR ds:[esi]
   1b9c7:	add    BYTE PTR [ebx+0x0],ah
   1b9ca:	add    BYTE PTR gs:[ebx+0x0],dh
   1b9ce:	jae    0x1b9d0
   1b9d0:	add    BYTE PTR [eax],al
   1b9d2:	pop    edx
   1b9d3:	add    BYTE PTR [edi+0x0],dh
   1b9d6:	push   ecx
   1b9d7:	add    BYTE PTR [ebp+0x0],dh
   1b9da:	add    BYTE PTR gs:[edx+0x0],dh
   1b9de:	jns    0x1b9e0
   1b9e0:	push   ebx
   1b9e1:	add    BYTE PTR [ecx+0x0],bh
   1b9e4:	jae    0x1b9e6
   1b9e6:	je     0x1b9e8
   1b9e8:	add    BYTE PTR gs:[ebp+0x0],ch
   1b9ec:	dec    ecx
   1b9ed:	add    BYTE PTR [esi+0x0],ch
   1b9f0:	data16 add BYTE PTR [edi+0x0],ch
   1b9f4:	jb     0x1b9f6
   1b9f6:	ins    DWORD PTR es:[edi],dx
   1b9f7:	add    BYTE PTR [ecx+0x0],ah
   1b9fa:	je     0x1b9fc
   1b9fc:	imul   eax,DWORD PTR [eax],0x6e006f
   1ba02:	add    BYTE PTR [eax],al
   1ba04:	pop    edx
   1ba05:	add    BYTE PTR [edi+0x0],dh
   1ba08:	dec    edi
   1ba09:	add    BYTE PTR [eax+0x0],dh
   1ba0c:	add    BYTE PTR gs:[esi+0x0],ch
   1ba10:	dec    ebx
   1ba11:	add    BYTE PTR [ebp+0x0],ah
   1ba14:	jns    0x1ba16
   1ba16:	add    BYTE PTR [eax],al
   1ba18:	pop    edx
   1ba19:	add    BYTE PTR [edi+0x0],dh
   1ba1c:	inc    esp
   1ba1d:	add    BYTE PTR [ebp+0x0],ah
   1ba20:	ins    BYTE PTR es:[edi],dx
   1ba21:	add    BYTE PTR [ebp+0x0],ah
   1ba24:	je     0x1ba26
   1ba26:	add    BYTE PTR gs:[ebx+0x0],cl
   1ba2a:	add    BYTE PTR gs:[ecx+0x0],bh
   1ba2e:	add    BYTE PTR [eax],al
   1ba30:	pop    edx
   1ba31:	add    BYTE PTR [edi+0x0],dh
   1ba34:	push   ebx
   1ba35:	add    BYTE PTR [ebp+0x0],ah
   1ba38:	je     0x1ba3a
   1ba3a:	push   esi
   1ba3b:	add    BYTE PTR [ecx+0x0],ah
   1ba3e:	ins    BYTE PTR es:[edi],dx
   1ba3f:	add    BYTE PTR [ebp+0x0],dh
   1ba42:	add    BYTE PTR gs:[ebx+0x0],cl
   1ba46:	add    BYTE PTR gs:[ecx+0x0],bh
   1ba4a:	add    BYTE PTR [eax],al
   1ba4c:	pop    edx
   1ba4d:	add    BYTE PTR [edi+0x0],dh
   1ba50:	push   ecx
   1ba51:	add    BYTE PTR [ebp+0x0],dh
   1ba54:	add    BYTE PTR gs:[edx+0x0],dh
   1ba58:	jns    0x1ba5a
   1ba5a:	push   esi
   1ba5b:	add    BYTE PTR [edi+0x0],ch
   1ba5e:	ins    BYTE PTR es:[edi],dx
   1ba5f:	add    BYTE PTR [ebp+0x0],dh
   1ba62:	ins    DWORD PTR es:[edi],dx
   1ba63:	add    BYTE PTR [ebp+0x0],ah
   1ba66:	dec    ecx
   1ba67:	add    BYTE PTR [esi+0x0],ch
   1ba6a:	data16 add BYTE PTR [edi+0x0],ch
   1ba6e:	jb     0x1ba70
   1ba70:	ins    DWORD PTR es:[edi],dx
   1ba71:	add    BYTE PTR [ecx+0x0],ah
   1ba74:	je     0x1ba76
   1ba76:	imul   eax,DWORD PTR [eax],0x6e006f
   1ba7c:	inc    esi
   1ba7d:	add    BYTE PTR [ecx+0x0],ch
   1ba80:	ins    BYTE PTR es:[edi],dx
   1ba81:	add    BYTE PTR [ebp+0x0],ah
   1ba84:	add    BYTE PTR [eax],al
   1ba86:	pop    edx
   1ba87:	add    BYTE PTR [edi+0x0],dh
   1ba8a:	inc    ebx
   1ba8b:	add    BYTE PTR [edx+0x0],dh
   1ba8e:	add    BYTE PTR gs:[ecx+0x0],ah
   1ba92:	je     0x1ba94
   1ba94:	add    BYTE PTR gs:[esi+0x0],al
   1ba98:	imul   eax,DWORD PTR [eax],0x65006c
   1ba9e:	add    BYTE PTR [eax],al
   1baa0:	push   edx
   1baa1:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1baa5:	add    BYTE PTR [ecx+0x0],cl
   1baa8:	ins    DWORD PTR es:[edi],dx
   1baa9:	add    BYTE PTR [ecx+0x0],ah
   1baac:	add    BYTE PTR [di+0x0],ah
   1bab0:	dec    esi
   1bab1:	add    BYTE PTR [eax+eax*1+0x48],dh
   1bab5:	add    BYTE PTR [ebp+0x0],ah
   1bab8:	popa   
   1bab9:	add    BYTE PTR [eax+eax*1+0x65],ah
   1babd:	add    BYTE PTR [edx+0x0],dh
   1bac0:	add    BYTE PTR [eax],al
   1bac2:	push   edx
   1bac3:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1bac7:	add    BYTE PTR [ecx+0x0],cl
   1baca:	ins    DWORD PTR es:[edi],dx
   1bacb:	add    BYTE PTR [ecx+0x0],ah
   1bace:	add    BYTE PTR [di+0x0],ah
   1bad2:	inc    esp
   1bad3:	add    BYTE PTR [ecx+0x0],ch
   1bad6:	jb     0x1bad8
   1bad8:	add    BYTE PTR gs:[ebx+0x0],ah
   1badc:	je     0x1bade
   1bade:	outs   dx,DWORD PTR ds:[esi]
   1badf:	add    BYTE PTR [edx+0x0],dh
   1bae2:	jns    0x1bae4
   1bae4:	inc    ebp
   1bae5:	add    BYTE PTR [esi+0x0],ch
   1bae8:	je     0x1baea
   1baea:	jb     0x1baec
   1baec:	jns    0x1baee
   1baee:	push   esp
   1baef:	add    BYTE PTR [edi+0x0],ch
   1baf2:	inc    esp
   1baf3:	add    BYTE PTR [ecx+0x0],ah
   1baf6:	je     0x1baf8
   1baf8:	popa   
   1baf9:	add    BYTE PTR [eax],al
   1bafb:	add    BYTE PTR [edx+0x0],bl
   1bafe:	ja     0x1bb00
   1bb00:	dec    edi
   1bb01:	add    BYTE PTR [eax+0x0],dh
   1bb04:	add    BYTE PTR gs:[esi+0x0],ch
   1bb08:	push   eax
   1bb09:	add    BYTE PTR [edx+0x0],dh
   1bb0c:	outs   dx,DWORD PTR ds:[esi]
   1bb0d:	add    BYTE PTR [ebx+0x0],ah
   1bb10:	add    BYTE PTR gs:[ebx+0x0],dh
   1bb14:	jae    0x1bb16
   1bb16:	push   esp
   1bb17:	add    BYTE PTR [edi+0x0],ch
   1bb1a:	imul   eax,DWORD PTR [eax],0x65
   1bb1d:	add    BYTE PTR [esi+0x0],ch
   1bb20:	add    BYTE PTR [eax],al
   1bb22:	pop    edx
   1bb23:	add    BYTE PTR [edi+0x0],dh
   1bb26:	push   ebx
   1bb27:	add    BYTE PTR [ebp+0x0],ah
   1bb2a:	je     0x1bb2c
   1bb2c:	dec    ecx
   1bb2d:	add    BYTE PTR [esi+0x0],ch
   1bb30:	data16 add BYTE PTR [edi+0x0],ch
   1bb34:	jb     0x1bb36
   1bb36:	ins    DWORD PTR es:[edi],dx
   1bb37:	add    BYTE PTR [ecx+0x0],ah
   1bb3a:	je     0x1bb3c
   1bb3c:	imul   eax,DWORD PTR [eax],0x6e006f
   1bb42:	push   eax
   1bb43:	add    BYTE PTR [edx+0x0],dh
   1bb46:	outs   dx,DWORD PTR ds:[esi]
   1bb47:	add    BYTE PTR [ebx+0x0],ah
   1bb4a:	add    BYTE PTR gs:[ebx+0x0],dh
   1bb4e:	jae    0x1bb50
   1bb50:	add    BYTE PTR [eax],al
   1bb52:	pop    edx
   1bb53:	add    BYTE PTR [edi+0x0],dh
   1bb56:	push   ecx
   1bb57:	add    BYTE PTR [ebp+0x0],dh
   1bb5a:	add    BYTE PTR gs:[edx+0x0],dh
   1bb5e:	jns    0x1bb60
   1bb60:	dec    ecx
   1bb61:	add    BYTE PTR [esi+0x0],ch
   1bb64:	data16 add BYTE PTR [edi+0x0],ch
   1bb68:	jb     0x1bb6a
   1bb6a:	ins    DWORD PTR es:[edi],dx
   1bb6b:	add    BYTE PTR [ecx+0x0],ah
   1bb6e:	je     0x1bb70
   1bb70:	imul   eax,DWORD PTR [eax],0x6e006f
   1bb76:	push   esp
   1bb77:	add    BYTE PTR [eax+0x0],ch
   1bb7a:	jb     0x1bb7c
   1bb7c:	add    BYTE PTR gs:[ecx+0x0],ah
   1bb80:	add    BYTE PTR fs:[eax],al
   1bb83:	add    BYTE PTR [edx+0x0],bl
   1bb86:	ja     0x1bb88
   1bb88:	inc    ebx
   1bb89:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1bb8d:	add    BYTE PTR [ebx+0x0],dh
   1bb90:	add    BYTE PTR gs:[eax],al
   1bb93:	add    BYTE PTR [edx+0x0],dl
   1bb96:	je     0x1bb98
   1bb98:	ins    BYTE PTR es:[edi],dx
   1bb99:	add    BYTE PTR [ecx+0x0],cl
   1bb9c:	outs   dx,BYTE PTR ds:[esi]
   1bb9d:	add    BYTE PTR [ecx+0x0],ch
   1bba0:	je     0x1bba2
   1bba2:	push   ebp
   1bba3:	add    BYTE PTR [esi+0x0],ch
   1bba6:	imul   eax,DWORD PTR [eax],0x6f0063
   1bbac:	add    BYTE PTR fs:[ebp+0x0],ah
   1bbb0:	push   ebx
   1bbb1:	add    BYTE PTR [eax+eax*1+0x72],dh
   1bbb5:	add    BYTE PTR [ecx+0x0],ch
   1bbb8:	outs   dx,BYTE PTR ds:[esi]
   1bbb9:	add    BYTE PTR [edi+0x0],ah
   1bbbc:	add    BYTE PTR [eax],al
   1bbbe:	inc    ebp
   1bbbf:	add    BYTE PTR [eax+0x0],bh
   1bbc2:	push   edx
   1bbc3:	add    BYTE PTR [ecx+0x0],ah
   1bbc6:	imul   eax,DWORD PTR [eax],0x650073
   1bbcc:	push   ebx
   1bbcd:	add    BYTE PTR [eax+eax*1+0x61],dh
   1bbd1:	add    BYTE PTR [eax+eax*1+0x75],dh
   1bbd5:	add    BYTE PTR [ebx+0x0],dh
   1bbd8:	add    BYTE PTR [eax],al
   1bbda:	inc    ebp
   1bbdb:	add    BYTE PTR [eax+0x0],bh
   1bbde:	inc    ecx
   1bbdf:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1bbe3:	add    BYTE PTR [edi+0x0],ch
   1bbe6:	arpl   WORD PTR [eax],ax
   1bbe8:	popa   
   1bbe9:	add    BYTE PTR [eax+eax*1+0x65],dh
   1bbed:	add    BYTE PTR [eax+0x0],dl
   1bbf0:	outs   dx,DWORD PTR ds:[esi]
   1bbf1:	add    BYTE PTR [edi+0x0],ch
   1bbf4:	ins    BYTE PTR es:[edi],dx
   1bbf5:	add    BYTE PTR [edi+0x0],dl
   1bbf8:	imul   eax,DWORD PTR [eax],0x680074
   1bbfe:	push   esp
   1bbff:	add    BYTE PTR [ecx+0x0],ah
   1bc02:	add    BYTE PTR [bx+si+0x0],dl
   1bc06:	jb     0x1bc08
   1bc08:	imul   eax,DWORD PTR [eax],0x72006f
   1bc0e:	imul   eax,DWORD PTR [eax],0x790074
   1bc14:	add    BYTE PTR [eax],al
   1bc16:	inc    ebp
   1bc17:	add    BYTE PTR [eax+0x0],bh
   1bc1a:	inc    esi
   1bc1b:	add    BYTE PTR [edx+0x0],dh
   1bc1e:	add    BYTE PTR gs:[ebp+0x0],ah
   1bc22:	push   eax
   1bc23:	add    BYTE PTR [edi+0x0],ch
   1bc26:	outs   dx,DWORD PTR ds:[esi]
   1bc27:	add    BYTE PTR [eax+eax*1+0x57],ch
   1bc2b:	add    BYTE PTR [ecx+0x0],ch
   1bc2e:	je     0x1bc30
   1bc30:	push   0x61005400
   1bc35:	add    BYTE PTR [edi+0x0],ah
   1bc38:	add    BYTE PTR [eax],al
   1bc3a:	push   edx
   1bc3b:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1bc3f:	add    BYTE PTR [ebx+0x0],al
   1bc42:	outs   dx,DWORD PTR ds:[esi]
   1bc43:	add    BYTE PTR [eax+0x0],dh
   1bc46:	jns    0x1bc48
   1bc48:	push   ebp
   1bc49:	add    BYTE PTR [esi+0x0],ch
   1bc4c:	imul   eax,DWORD PTR [eax],0x6f0063
   1bc52:	add    BYTE PTR fs:[ebp+0x0],ah
   1bc56:	push   ebx
   1bc57:	add    BYTE PTR [eax+eax*1+0x72],dh
   1bc5b:	add    BYTE PTR [ecx+0x0],ch
   1bc5e:	outs   dx,BYTE PTR ds:[esi]
   1bc5f:	add    BYTE PTR [edi+0x0],ah
   1bc62:	add    BYTE PTR [eax],al
   1bc64:	inc    ebp
   1bc65:	add    BYTE PTR [eax+0x0],bh
   1bc68:	inc    ecx
   1bc69:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1bc6d:	add    BYTE PTR [edi+0x0],ch
   1bc70:	arpl   WORD PTR [eax],ax
   1bc72:	popa   
   1bc73:	add    BYTE PTR [eax+eax*1+0x65],dh
   1bc77:	add    BYTE PTR [eax+0x0],dl
   1bc7a:	outs   dx,DWORD PTR ds:[esi]
   1bc7b:	add    BYTE PTR [edi+0x0],ch
   1bc7e:	ins    BYTE PTR es:[edi],dx
   1bc7f:	add    BYTE PTR [edi+0x0],dl
   1bc82:	imul   eax,DWORD PTR [eax],0x680074
   1bc88:	push   esp
   1bc89:	add    BYTE PTR [ecx+0x0],ah
   1bc8c:	add    BYTE PTR [bx+si],al
   1bc8f:	add    BYTE PTR [edx+0x0],dl
   1bc92:	je     0x1bc94
   1bc94:	ins    BYTE PTR es:[edi],dx
   1bc95:	add    BYTE PTR [ecx+0x0],al
   1bc98:	jae    0x1bc9a
   1bc9a:	jae    0x1bc9c
   1bc9c:	add    BYTE PTR gs:[edx+0x0],dh
   1bca0:	je     0x1bca2
   1bca2:	add    BYTE PTR [eax],al
   1bca4:	push   edx
   1bca5:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1bca9:	add    BYTE PTR [ebx+0x0],al
   1bcac:	outs   dx,DWORD PTR ds:[esi]
   1bcad:	add    BYTE PTR [ebp+0x0],ch
   1bcb0:	jo     0x1bcb2
   1bcb2:	popa   
   1bcb3:	add    BYTE PTR [edx+0x0],dh
   1bcb6:	add    BYTE PTR gs:[ebp+0x0],dl
   1bcba:	outs   dx,BYTE PTR ds:[esi]
   1bcbb:	add    BYTE PTR [ecx+0x0],ch
   1bcbe:	arpl   WORD PTR [eax],ax
   1bcc0:	outs   dx,DWORD PTR ds:[esi]
   1bcc1:	add    BYTE PTR [eax+eax*1+0x65],ah
   1bcc5:	add    BYTE PTR [ebx+0x0],dl
   1bcc8:	je     0x1bcca
   1bcca:	jb     0x1bccc
   1bccc:	imul   eax,DWORD PTR [eax],0x67006e
   1bcd2:	add    BYTE PTR [eax],al
   1bcd4:	pop    edx
   1bcd5:	add    BYTE PTR [edi+0x0],dh
   1bcd8:	inc    ebp
   1bcd9:	add    BYTE PTR [esi+0x0],ch
   1bcdc:	jne    0x1bcde
   1bcde:	ins    DWORD PTR es:[edi],dx
   1bcdf:	add    BYTE PTR [ebp+0x0],ah
   1bce2:	jb     0x1bce4
   1bce4:	popa   
   1bce5:	add    BYTE PTR [eax+eax*1+0x65],dh
   1bce9:	add    BYTE PTR [ebx+0x0],cl
   1bcec:	add    BYTE PTR gs:[ecx+0x0],bh
   1bcf0:	add    BYTE PTR [eax],al
   1bcf2:	pop    edx
   1bcf3:	add    BYTE PTR [edi+0x0],dh
   1bcf6:	dec    esp
   1bcf7:	add    BYTE PTR [edi+0x0],ch
   1bcfa:	popa   
   1bcfb:	add    BYTE PTR [eax+eax*1+0x44],ah
   1bcff:	add    BYTE PTR [edx+0x0],dh
   1bd02:	imul   eax,DWORD PTR [eax],0x650076
   1bd08:	jb     0x1bd0a
   1bd0a:	add    BYTE PTR [eax],al
   1bd0c:	pop    edx
   1bd0d:	add    BYTE PTR [edi+0x0],dh
   1bd10:	inc    ebx
   1bd11:	add    BYTE PTR [edx+0x0],dh
   1bd14:	add    BYTE PTR gs:[ecx+0x0],ah
   1bd18:	je     0x1bd1a
   1bd1a:	add    BYTE PTR gs:[ebx+0x0],cl
   1bd1e:	add    BYTE PTR gs:[ecx+0x0],bh
   1bd22:	add    BYTE PTR [eax],al
   1bd24:	dec    ecx
   1bd25:	add    BYTE PTR [edi+0x0],ch
   1bd28:	inc    esp
   1bd29:	add    BYTE PTR [ebp+0x0],ah
   1bd2c:	ins    BYTE PTR es:[edi],dx
   1bd2d:	add    BYTE PTR [ebp+0x0],ah
   1bd30:	je     0x1bd32
   1bd32:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1bd37:	add    BYTE PTR [esi+0x0],dh
   1bd3a:	imul   eax,DWORD PTR [eax],0x650063
   1bd40:	add    BYTE PTR [eax],al
   1bd42:	dec    ebx
   1bd43:	add    BYTE PTR [ebp+0x0],ah
   1bd46:	inc    esp
   1bd47:	add    BYTE PTR [ebp+0x0],ah
   1bd4a:	je     0x1bd4c
   1bd4c:	popa   
   1bd4d:	add    BYTE PTR [ebx+0x0],ah
   1bd50:	push   0x72005000
   1bd55:	add    BYTE PTR [edi+0x0],ch
   1bd58:	arpl   WORD PTR [eax],ax
   1bd5a:	add    BYTE PTR gs:[ebx+0x0],dh
   1bd5e:	jae    0x1bd60
   1bd60:	add    BYTE PTR [eax],al
   1bd62:	dec    ebx
   1bd63:	add    BYTE PTR [ebp+0x0],ah
   1bd66:	inc    ecx
   1bd67:	add    BYTE PTR [eax+eax*1+0x74],dh
   1bd6b:	add    BYTE PTR [ecx+0x0],ah
   1bd6e:	arpl   WORD PTR [eax],ax
   1bd70:	push   0x72005000
   1bd75:	add    BYTE PTR [edi+0x0],ch
   1bd78:	arpl   WORD PTR [eax],ax
   1bd7a:	add    BYTE PTR gs:[ebx+0x0],dh
   1bd7e:	jae    0x1bd80
   1bd80:	add    BYTE PTR [eax],al
   1bd82:	pop    edx
   1bd83:	add    BYTE PTR [edi+0x0],dh
   1bd86:	push   ecx
   1bd87:	add    BYTE PTR [ebp+0x0],dh
   1bd8a:	add    BYTE PTR gs:[edx+0x0],dh
   1bd8e:	jns    0x1bd90
   1bd90:	push   esi
   1bd91:	add    BYTE PTR [ecx+0x0],ah
   1bd94:	ins    BYTE PTR es:[edi],dx
   1bd95:	add    BYTE PTR [ebp+0x0],dh
   1bd98:	add    BYTE PTR gs:[ebx+0x0],cl
   1bd9c:	add    BYTE PTR gs:[ecx+0x0],bh
   1bda0:	add    BYTE PTR [eax],al
   1bda2:	pop    edx
   1bda3:	add    BYTE PTR [edi+0x0],dh
   1bda6:	push   edx
   1bda7:	add    BYTE PTR [ebp+0x0],ah
   1bdaa:	popa   
   1bdab:	add    BYTE PTR [eax+eax*1+0x46],ah
   1bdaf:	add    BYTE PTR [ecx+0x0],ch
   1bdb2:	ins    BYTE PTR es:[edi],dx
   1bdb3:	add    BYTE PTR [ebp+0x0],ah
   1bdb6:	add    BYTE PTR [eax],al
   1bdb8:	pop    edx
   1bdb9:	add    BYTE PTR [edi+0x0],dh
   1bdbc:	push   ebx
   1bdbd:	add    BYTE PTR [ebp+0x0],ah
   1bdc0:	je     0x1bdc2
   1bdc2:	dec    ecx
   1bdc3:	add    BYTE PTR [esi+0x0],ch
   1bdc6:	data16 add BYTE PTR [edi+0x0],ch
   1bdca:	jb     0x1bdcc
   1bdcc:	ins    DWORD PTR es:[edi],dx
   1bdcd:	add    BYTE PTR [ecx+0x0],ah
   1bdd0:	je     0x1bdd2
   1bdd2:	imul   eax,DWORD PTR [eax],0x6e006f
   1bdd8:	inc    esi
   1bdd9:	add    BYTE PTR [ecx+0x0],ch
   1bddc:	ins    BYTE PTR es:[edi],dx
   1bddd:	add    BYTE PTR [ebp+0x0],ah
   1bde0:	add    BYTE PTR [eax],al
   1bde2:	pop    edx
   1bde3:	add    BYTE PTR [edi+0x0],dh
   1bde6:	push   edi
   1bde7:	add    BYTE PTR [edx+0x0],dh
   1bdea:	imul   eax,DWORD PTR [eax],0x650074
   1bdf0:	inc    esi
   1bdf1:	add    BYTE PTR [ecx+0x0],ch
   1bdf4:	ins    BYTE PTR es:[edi],dx
   1bdf5:	add    BYTE PTR [ebp+0x0],ah
   1bdf8:	add    BYTE PTR [eax],al
   1bdfa:	pop    edx
   1bdfb:	add    BYTE PTR [edi+0x0],dh
   1bdfe:	push   ecx
   1bdff:	add    BYTE PTR [ebp+0x0],dh
   1be02:	add    BYTE PTR gs:[edx+0x0],dh
   1be06:	jns    0x1be08
   1be08:	dec    ecx
   1be09:	add    BYTE PTR [esi+0x0],ch
   1be0c:	data16 add BYTE PTR [edi+0x0],ch
   1be10:	jb     0x1be12
   1be12:	ins    DWORD PTR es:[edi],dx
   1be13:	add    BYTE PTR [ecx+0x0],ah
   1be16:	je     0x1be18
   1be18:	imul   eax,DWORD PTR [eax],0x6e006f
   1be1e:	inc    esi
   1be1f:	add    BYTE PTR [ecx+0x0],ch
   1be22:	ins    BYTE PTR es:[edi],dx
   1be23:	add    BYTE PTR [ebp+0x0],ah
   1be26:	add    BYTE PTR [eax],al
   1be28:	dec    ecx
   1be29:	add    BYTE PTR [edi+0x0],ch
   1be2c:	inc    ebx
   1be2d:	add    BYTE PTR [edx+0x0],dh
   1be30:	add    BYTE PTR gs:[ecx+0x0],ah
   1be34:	je     0x1be36
   1be36:	add    BYTE PTR gs:[ebx+0x0],dl
   1be3a:	jns    0x1be3c
   1be3c:	ins    DWORD PTR es:[edi],dx
   1be3d:	add    BYTE PTR [edx+0x0],ah
   1be40:	outs   dx,DWORD PTR ds:[esi]
   1be41:	add    BYTE PTR [eax+eax*1+0x69],ch
   1be45:	add    BYTE PTR [ebx+0x0],ah
   1be48:	dec    esp
   1be49:	add    BYTE PTR [ecx+0x0],ch
   1be4c:	outs   dx,BYTE PTR ds:[esi]
   1be4d:	add    BYTE PTR [ebx+0x0],ch
   1be50:	add    BYTE PTR [eax],al
   1be52:	dec    ecx
   1be53:	add    BYTE PTR [edi+0x0],ch
   1be56:	inc    ebx
   1be57:	add    BYTE PTR [edx+0x0],dh
   1be5a:	add    BYTE PTR gs:[ecx+0x0],ah
   1be5e:	je     0x1be60
   1be60:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1be65:	add    BYTE PTR [esi+0x0],dh
   1be68:	imul   eax,DWORD PTR [eax],0x650063
   1be6e:	add    BYTE PTR [eax],al
   1be70:	push   ebx
   1be71:	add    BYTE PTR [ebp+0x0],ah
   1be74:	inc    ebx
   1be75:	add    BYTE PTR [edx+0x0],dh
   1be78:	add    BYTE PTR gs:[ecx+0x0],ah
   1be7c:	je     0x1be7e
   1be7e:	add    BYTE PTR gs:[ebx+0x0],al
   1be82:	ins    BYTE PTR es:[edi],dx
   1be83:	add    BYTE PTR [ecx+0x0],ch
   1be86:	add    BYTE PTR gs:[esi+0x0],ch
   1be8a:	je     0x1be8c
   1be8c:	push   ebx
   1be8d:	add    BYTE PTR [ebp+0x0],ah
   1be90:	arpl   WORD PTR [eax],ax
   1be92:	jne    0x1be94
   1be94:	jb     0x1be96
   1be96:	imul   eax,DWORD PTR [eax],0x790074
   1be9c:	add    BYTE PTR [eax],al
   1be9e:	dec    ebx
   1be9f:	add    BYTE PTR [ebp+0x0],ah
   1bea2:	inc    edi
   1bea3:	add    BYTE PTR [ebp+0x0],ah
   1bea6:	je     0x1bea8
   1bea8:	inc    ebx
   1bea9:	add    BYTE PTR [ebp+0x0],dh
   1beac:	jb     0x1beae
   1beae:	jb     0x1beb0
   1beb0:	add    BYTE PTR gs:[esi+0x0],ch
   1beb4:	je     0x1beb6
   1beb6:	push   esp
   1beb7:	add    BYTE PTR [eax+0x0],ch
   1beba:	jb     0x1bebc
   1bebc:	add    BYTE PTR gs:[ecx+0x0],ah
   1bec0:	add    BYTE PTR fs:[eax],al
   1bec3:	add    BYTE PTR [ebx+0x0],cl
   1bec6:	add    BYTE PTR gs:[ecx+0x0],dl
   1beca:	jne    0x1becc
   1becc:	add    BYTE PTR gs:[edx+0x0],dh
   1bed0:	jns    0x1bed2
   1bed2:	push   ebx
   1bed3:	add    BYTE PTR [ecx+0x0],bh
   1bed6:	jae    0x1bed8
   1bed8:	je     0x1beda
   1beda:	add    BYTE PTR gs:[ebp+0x0],ch
   1bede:	push   esp
   1bedf:	add    BYTE PTR [ecx+0x0],ch
   1bee2:	ins    DWORD PTR es:[edi],dx
   1bee3:	add    BYTE PTR [ebp+0x0],ah
   1bee6:	add    BYTE PTR [eax],al
   1bee8:	pop    edx
   1bee9:	add    BYTE PTR [edi+0x0],dh
   1beec:	dec    ebp
   1beed:	add    BYTE PTR [ecx+0x0],ah
   1bef0:	jo     0x1bef2
   1bef2:	push   esi
   1bef3:	add    BYTE PTR [ecx+0x0],ch
   1bef6:	add    BYTE PTR gs:[edi+0x0],dh
   1befa:	dec    edi
   1befb:	add    BYTE PTR [esi+0x0],ah
   1befe:	push   ebx
   1beff:	add    BYTE PTR [ebp+0x0],ah
   1bf02:	arpl   WORD PTR [eax],ax
   1bf04:	je     0x1bf06
   1bf06:	imul   eax,DWORD PTR [eax],0x6e006f
   1bf0c:	add    BYTE PTR [eax],al
   1bf0e:	pop    edx
   1bf0f:	add    BYTE PTR [edi+0x0],dh
   1bf12:	inc    ebx
   1bf13:	add    BYTE PTR [edx+0x0],dh
   1bf16:	add    BYTE PTR gs:[ecx+0x0],ah
   1bf1a:	je     0x1bf1c
   1bf1c:	add    BYTE PTR gs:[ebx+0x0],dl
   1bf20:	add    BYTE PTR gs:[ebx+0x0],ah
   1bf24:	je     0x1bf26
   1bf26:	imul   eax,DWORD PTR [eax],0x6e006f
   1bf2c:	add    BYTE PTR [eax],al
   1bf2e:	pop    edx
   1bf2f:	add    BYTE PTR [edi+0x0],dh
   1bf32:	push   ebp
   1bf33:	add    BYTE PTR [esi+0x0],ch
   1bf36:	ins    DWORD PTR es:[edi],dx
   1bf37:	add    BYTE PTR [ecx+0x0],ah
   1bf3a:	jo     0x1bf3c
   1bf3c:	push   esi
   1bf3d:	add    BYTE PTR [ecx+0x0],ch
   1bf40:	add    BYTE PTR gs:[edi+0x0],dh
   1bf44:	dec    edi
   1bf45:	add    BYTE PTR [esi+0x0],ah
   1bf48:	push   ebx
   1bf49:	add    BYTE PTR [ebp+0x0],ah
   1bf4c:	arpl   WORD PTR [eax],ax
   1bf4e:	je     0x1bf50
   1bf50:	imul   eax,DWORD PTR [eax],0x6e006f
   1bf56:	add    BYTE PTR [eax],al
   1bf58:	dec    ebx
   1bf59:	add    BYTE PTR [ebp+0x0],ah
   1bf5c:	dec    ecx
   1bf5d:	add    BYTE PTR [esi+0x0],ch
   1bf60:	imul   eax,DWORD PTR [eax],0x690074
   1bf66:	popa   
   1bf67:	add    BYTE PTR [eax+eax*1+0x69],ch
   1bf6b:	add    BYTE PTR [edx+0x0],bh
   1bf6e:	add    BYTE PTR gs:[ebp+0x0],cl
   1bf72:	jne    0x1bf74
   1bf74:	je     0x1bf76
   1bf76:	add    BYTE PTR gs:[eax+0x0],bh
   1bf7a:	add    BYTE PTR [eax],al
   1bf7c:	dec    ebx
   1bf7d:	add    BYTE PTR [ebp+0x0],ah
   1bf80:	push   edi
   1bf81:	add    BYTE PTR [ecx+0x0],ah
   1bf84:	imul   eax,DWORD PTR [eax],0x460074
   1bf8a:	outs   dx,DWORD PTR ds:[esi]
   1bf8b:	add    BYTE PTR [edx+0x0],dh
   1bf8e:	push   ebx
   1bf8f:	add    BYTE PTR [ecx+0x0],ch
   1bf92:	outs   dx,BYTE PTR ds:[esi]
   1bf93:	add    BYTE PTR [edi+0x0],ah
   1bf96:	ins    BYTE PTR es:[edi],dx
   1bf97:	add    BYTE PTR [ebp+0x0],ah
   1bf9a:	dec    edi
   1bf9b:	add    BYTE PTR [edx+0x0],ah
   1bf9e:	push   0x0
   1bfa0:	add    BYTE PTR gs:[ebx+0x0],ah
   1bfa4:	je     0x1bfa6
   1bfa6:	add    BYTE PTR [eax],al
   1bfa8:	dec    ebx
   1bfa9:	add    BYTE PTR [ebp+0x0],ah
   1bfac:	push   edx
   1bfad:	add    BYTE PTR [ebp+0x0],ah
   1bfb0:	ins    BYTE PTR es:[edi],dx
   1bfb1:	add    BYTE PTR [ebp+0x0],ah
   1bfb4:	popa   
   1bfb5:	add    BYTE PTR [ebx+0x0],dh
   1bfb8:	add    BYTE PTR gs:[ebp+0x0],cl
   1bfbc:	jne    0x1bfbe
   1bfbe:	je     0x1bfc0
   1bfc0:	add    BYTE PTR gs:[eax+0x0],bh
   1bfc4:	add    BYTE PTR [eax],al
   1bfc6:	push   esp
   1bfc7:	add    BYTE PTR ds:0x15000900,ch
   1bfcd:	add    BYTE PTR [eax],al
   1bfcf:	add    BYTE PTR ds:0xeeec01ab,dh
   1bfd5:	or     eax,0xbc9a4d16
   1bfda:	push   edi
   1bfdb:	cli    
   1bfdc:	retf   0x9731
   1bfdf:	mov    DWORD PTR [esi],0xe6ec851
   1bfe5:	or     dh,BYTE PTR [edi]
   1bfe7:	inc    ecx
   1bfe8:	(bad)  
   1bfe9:	adc    ch,dh
   1bfeb:	pusha  
   1bfec:	enter  0xf946,0xd5
   1bff0:	nop
   1bff1:	mov    ebx,0x12609cde
   1bff6:	mov    eax,ds:0xcd01db48
   1bffb:	xchg   esp,eax
   1bffc:	repz add BYTE PTR [edx-0x23],bh
   1c000:	add    ebx,edx
   1c002:	mov    dh,0x51
   1c004:	pop    esp
   1c005:	mov    esp,0x731e5ea4
   1c00a:	shr    BYTE PTR [esi+0x53cc00],0x27
   1c011:	add    BYTE PTR ds:0x6001300,dl
   1c017:	add    BYTE PTR [eax],al
   1c019:	add    BYTE PTR [esi+ebp*4],al
   1c01c:	aad    0x1b
   1c01e:	jns    0x1bfc4
   1c020:	and    DWORD PTR [esi],esp
   1c022:	jbe    0x1c09b
   1c024:	bound  edx,QWORD PTR [edi]
   1c026:	jmp    0xf26c1d04
   1c02b:	mov    al,0xd8
   1c02d:	iret   
   1c02e:	cli    
   1c02f:	fild   QWORD PTR [edi-0x29]
   1c032:	sub    BYTE PTR [ebx],bh
   1c034:	mov    BYTE PTR [eax-0x7a87c9b],ah
   1c03a:	add    BYTE PTR es:[ecx+0x0],cl
   1c03e:	and    al,0x0
   1c040:	or     al,0x0
   1c042:	push   es
   1c043:	add    BYTE PTR [edx],al
   1c045:	add    BYTE PTR ds:0x15003100,dh
   1c04b:	add    BYTE PTR [eax+eax*1],bl
   1c04e:	add    BYTE PTR [eax],al
   1c050:	and    eax,0x54171939
   1c055:	mov    bl,0xb5
   1c057:	pushf  
   1c058:	dec    esi
   1c059:	stos   BYTE PTR es:[edi],al
   1c05a:	inc    esi
   1c05b:	dec    ebp
   1c05c:	in     al,dx
   1c05d:	ficom  DWORD PTR [eax+0x3f]
   1c060:	mov    ?,WORD PTR [ecx]
   1c062:	popf   
   1c063:	shl    DWORD PTR [esi+esi*4],cl
   1c066:	das    
   1c067:	adc    edi,0x2a4b8e0d
   1c06d:	outs   dx,BYTE PTR ds:[esi]
   1c06e:	adc    bl,ch
   1c070:	xchg   ebp,eax
   1c071:	dec    edx
   1c072:	add    ah,cl
   1c074:	add    BYTE PTR cs:[edx+0x0],cl
   1c078:	or     BYTE PTR [eax],al
   1c07a:	add    BYTE PTR [eax],al
   1c07c:	add    BYTE PTR [eax],al
   1c07e:	bound  edi,QWORD PTR [ecx]
   1c080:	in     eax,0xef
   1c082:	jg     0x1c00c
   1c084:	and    BYTE PTR [edi+0x1d],0x96
   1c088:	fild   WORD PTR [ecx-0x34]
   1c08b:	and    al,0xc
   1c08d:	ins    BYTE PTR es:[edi],dx
   1c08e:	sub    al,0x63
   1c090:	pop    ebx
   1c091:	xor    DWORD PTR [edi+edx*8],ecx
   1c094:	sar    DWORD PTR ds:0x896e296,cl
   1c09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1c09b:	mov    BYTE PTR ds:0x6ecc00fb,cl
   1c0a1:	add    BYTE PTR [edx],bl
   1c0a3:	add    BYTE PTR [eax],dl
   1c0a5:	add    BYTE PTR [eax],cl
   1c0a7:	add    BYTE PTR [eax],al
   1c0a9:	add    BYTE PTR [edx+0x0],al
   1c0ac:	dec    edx
   1c0ad:	add    BYTE PTR [eax],cl
   1c0af:	add    BYTE PTR [eax],al
   1c0b1:	add    BYTE PTR [eax],al
   1c0b3:	add    ch,bh
   1c0b5:	push   ss
   1c0b6:	jbe    0x1c12a
   1c0b8:	jmp    0x44f3cb1c
   1c0bd:	outs   dx,DWORD PTR ds:[esi]
   1c0be:	stos   BYTE PTR es:[edi],al
   1c0bf:	mov    WORD PTR [eax],?
   1c0c1:	jbe    0x1c139
   1c0c3:	xchg   edi,eax
   1c0c4:	jg     0x1c080
   1c0c6:	jl     0x1c09f
   1c0c8:	jb     0x1c057
   1c0ca:	mov    bh,0xcc
   1c0cc:	shl    esp,cl
   1c0ce:	pop    edx
   1c0cf:	cdq    
   1c0d0:	out    dx,al
   1c0d1:	mov    ds:0x3735cd15,eax
   1c0d6:	dec    edx
   1c0d7:	out    0xa1,eax
   1c0d9:	mov    cl,0xd2
   1c0db:	test   DWORD PTR [edi+0x7c5ed7e7],esp
   1c0e1:	retf   0xe4c1
   1c0e4:	add    ah,cl
   1c0e6:	inc    edx
   1c0e7:	daa    
   1c0e8:	add    BYTE PTR ds:0x922cc00,dl
   1c0ee:	dec    edi
   1c0ef:	push   ebx
   1c0f0:	mov    WORD PTR [ebp-0x58],es
   1c0f3:	(bad)  
   1c0f4:	cmp    al,0x46
   1c0f6:	fcomip st,st(1)
   1c0f8:	and    dh,BYTE PTR [edi-0x7304b22e]
   1c0fe:	dec    edi
   1c0ff:	or     DWORD PTR [esi],edx
   1c101:	dec    edx
   1c102:	cmp    ah,BYTE PTR [esi-0x20a084f9]
   1c108:	stc    
   1c109:	xor    DWORD PTR [ebx+0x5a],edi
   1c10c:	add    ah,cl
   1c10e:	push   ebx
   1c10f:	aas    
   1c110:	or     DWORD PTR [eax],eax
   1c112:	adc    eax,0x246ceb00
   1c117:	imul   edi,eax,0xc351dd1d
   1c11d:	mov    cl,0xa4
   1c11f:	mov    ds:0x3786c5e2,al
   1c124:	adc    eax,0xd9f16911
   1c129:	call   0x4b16:0x5f230030
   1c130:	sahf   
   1c131:	xchg   DWORD PTR [ebx+0x23],esi
   1c134:	loop   0x1c17e
   1c136:	lock rdpmc 
   1c139:	xchg   edx,eax
   1c13a:	xlat   BYTE PTR ds:[ebx]
   1c13b:	cmc    
   1c13c:	in     al,0x9
   1c13e:	dec    esi
   1c13f:	mov    ebp,0x1ad2b6c0
   1c144:	xchg   ecx,eax
   1c145:	mov    ds:0x93c42859,al
   1c14a:	test   al,0x1
   1c14c:	enter  0xf75d,0x0
   1c150:	inc    ebx
   1c151:	xor    DWORD PTR [edi],edx
   1c153:	add    al,0x15
   1c155:	adc    DWORD PTR [ecx],esi
   1c157:	cmp    al,0x1a
   1c159:	pop    ss
   1c15a:	add    al,0x5
   1c15c:	add    ah,cl
   1c15e:	pop    ecx
   1c15f:	cld    
   1c160:	mov    edi,DWORD PTR [edi+ebx*8+0x53]
   1c164:	out    0xf2,al
   1c166:	xor    DWORD PTR [eax+0x16f3190c],edi
   1c16c:	out    dx,eax
   1c16d:	scas   eax,DWORD PTR es:[edi]
   1c16e:	push   ss
   1c16f:	and    eax,0xccbb9c7c
   1c174:	inc    esi
   1c175:	les    ebp,FWORD PTR [eax+0x63]
   1c178:	or     eax,0xad23c4d3
   1c17d:	div    edx
   1c17f:	(bad)  
   1c180:	int    0x71
   1c182:	inc    edx
   1c183:	inc    ebp
   1c184:	aad    0x46
   1c186:	or     al,BYTE PTR [esi-0x1774ad5]
   1c18c:	mov    DWORD PTR [ecx+0x4a],edx
   1c18f:	jg     0x1c191
   1c191:	in     al,0x6f
   1c193:	jno    0x1c1af
   1c195:	xor    BYTE PTR es:[ebp+0x71],ah
   1c199:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1c19d:	add    eax,0x100b2528
   1c1a2:	adc    edx,DWORD PTR [ebx]
   1c1a4:	or     edi,DWORD PTR [eax]
   1c1a6:	add    ah,cl
   1c1a8:	iret   
   1c1a9:	xchg   edi,eax
   1c1aa:	cmp    DWORD PTR [edx],esp
   1c1ac:	push   cs
   1c1ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1c1ae:	mov    dh,0xec
   1c1b0:	xor    BYTE PTR [esi-0x314d48fd],bl
   1c1b6:	call   0x302b:0x73923df9
   1c1bd:	call   0xdf38b201
   1c1c2:	call   esp
   1c1c4:	jle    0x1c1cd
   1c1c6:	inc    esi
   1c1c7:	and    al,0xa6
   1c1c9:	jnp    0x1c15c
   1c1cb:	test   edx,edx
   1c1cd:	jmp    0x1c218
   1c1cf:	push   eax
   1c1d0:	shr    BYTE PTR [edx],1
   1c1d2:	push   eax
   1c1d3:	xchg   ebp,eax
   1c1d4:	mov    bh,0xcc
   1c1d6:	lds    esi,FWORD PTR ds:0x7abc6b48
   1c1dc:	dec    DWORD PTR [esi+0x73]
   1c1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1c1e0:	into   
   1c1e1:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1c1e5:	add    eax,0x100b2528
   1c1ea:	adc    edx,DWORD PTR [ebx]
   1c1ec:	or     ebp,DWORD PTR [esi]
   1c1ee:	add    ah,cl
   1c1f0:	pop    edx
   1c1f1:	popa   
   1c1f2:	shl    eax,cl
   1c1f4:	mov    dl,0x40
   1c1f6:	cli    
   1c1f7:	out    0x3,eax
   1c1f9:	test   BYTE PTR [ebx-0x2bf727de],0xfc
   1c200:	sbb    bl,bh
   1c202:	ins    BYTE PTR es:[edi],dx
   1c203:	pop    edi
   1c204:	mov    edx,DWORD PTR ds:[esi+0x657a6684]
   1c20b:	xchg   ebp,eax
   1c20c:	mov    edi,0xcd2d997a
   1c211:	add    BYTE PTR [ebx+0x0],ch
   1c214:	push   cs
   1c215:	add    BYTE PTR [edi],dl
   1c217:	add    BYTE PTR [eax+eax*1],bl
   1c21a:	or     eax,DWORD PTR [eax]
   1c21c:	or     DWORD PTR [eax],eax
   1c21e:	pop    edi
   1c21f:	add    BYTE PTR [ecx],al
   1c221:	add    BYTE PTR [eax+eax*1],bl
   1c224:	dec    edx
   1c225:	add    BYTE PTR [eax],cl
   1c227:	add    BYTE PTR [eax],al
   1c229:	add    BYTE PTR [eax],al
   1c22b:	add    BYTE PTR [ecx-0x6b4f4abd],ah
   1c231:	out    dx,al
   1c232:	adc    DWORD PTR [edx+ecx*4-0x1e],esp
   1c236:	popa   
   1c237:	jp     0x1c1d8
   1c239:	fsubr  QWORD PTR ds:0x4d23c21d
   1c23f:	mov    bh,0xf
   1c241:	(bad)  
   1c242:	loop   0x1c245
   1c244:	sbb    BYTE PTR [eax+0x6c],cl
   1c247:	pop    eax
   1c248:	aad    0xd1
   1c24a:	inc    ebp
   1c24b:	xor    al,BYTE PTR [edi+0x46]
   1c24e:	sbb    DWORD PTR [esi-0x4],ecx
   1c251:	xchg   ebx,eax
   1c252:	cs (bad) 
   1c254:	nop
   1c255:	jb     0x1c229
   1c257:	arpl   WORD PTR [edx],di
   1c259:	js     0x1c26d
   1c25b:	loop   0x1c26b
   1c25d:	mov    al,ds:0xf89a7e35
   1c262:	add    ah,cl
   1c264:	outs   dx,BYTE PTR ds:[esi]
   1c265:	sbb    dl,BYTE PTR [eax]
   1c267:	or     BYTE PTR [eax],al
   1c269:	inc    edx
   1c26a:	dec    edx
   1c26b:	or     BYTE PTR [eax],al
   1c26d:	add    BYTE PTR [ebp-0x41],cl
   1c270:	push   cs
   1c271:	xchg   edx,eax
   1c272:	outs   dx,BYTE PTR ds:[esi]
   1c273:	sub    ecx,DWORD PTR ss:[ebp-0x2e]
   1c277:	stc    
   1c278:	(bad)  
   1c279:	and    al,0xd4
   1c27b:	and    BYTE PTR [edi+0x1d],bh
   1c27e:	inc    edi
   1c27f:	scas   eax,DWORD PTR es:[edi]
   1c280:	ins    DWORD PTR es:[edi],dx
   1c281:	and    ecx,ebx
   1c283:	scas   al,BYTE PTR es:[edi]
   1c284:	mov    dh,BYTE PTR [ebp+0x36]
   1c287:	ds sub eax,0xc343e9b5
   1c28d:	jmp    0x1c25d
   1c28f:	cdq    
   1c290:	mov    esi,0x97b84aa7
   1c295:	push   ecx
   1c296:	cmp    al,0xd1
   1c298:	dec    edx
   1c299:	sub    al,0x8d
   1c29b:	mov    ch,0xbd
   1c29d:	out    0xe7,al
   1c29f:	pop    edx
   1c2a0:	gs pop esi
   1c2a2:	fisub  DWORD PTR [edx-0x7532ffb2]
   1c2a8:	cld    
   1c2a9:	cld    
   1c2aa:	ret    
   1c2ab:	fild   WORD PTR [eax]
   1c2ad:	int3   
   1c2ae:	pop    esp
   1c2af:	add    BYTE PTR [edi],cl
   1c2b1:	add    BYTE PTR [edx],ch
   1c2b3:	add    BYTE PTR [edx],cl
   1c2b5:	add    BYTE PTR [edi],al
   1c2b7:	add    BYTE PTR [ecx],dl
   1c2b9:	add    BYTE PTR [eax],cl
   1c2bb:	add    BYTE PTR [edi],bh
   1c2bd:	add    BYTE PTR ds:0x1b000000,bh
   1c2c3:	add    BYTE PTR [eax],ch
   1c2c5:	add    BYTE PTR [edi],ch
   1c2c7:	add    BYTE PTR [edx],cl
   1c2c9:	add    BYTE PTR [edx],cl
   1c2cb:	add    BYTE PTR [edi],al
   1c2cd:	add    BYTE PTR [ecx],dl
   1c2cf:	add    BYTE PTR [eax],cl
   1c2d1:	add    BYTE PTR [esi+0x0],bl
   1c2d4:	add    DWORD PTR [eax],eax
   1c2d6:	outs   dx,BYTE PTR ds:[esi]
   1c2d7:	add    BYTE PTR [eax],al
   1c2d9:	add    BYTE PTR [ebp-0x72],dl
   1c2dc:	ret    
   1c2dd:	ins    DWORD PTR es:[edi],dx
   1c2de:	jg     0x1c2f6
   1c2e0:	mov    esi,0xb04598c5
   1c2e5:	mov    ah,0x90
   1c2e7:	xchg   ecx,eax
   1c2e8:	repnz pop ss
   1c2ea:	dec    eax
   1c2eb:	gs scas eax,DWORD PTR es:[edi]
   1c2ed:	sub    ch,cl
   1c2ef:	or     al,0x3f
   1c2f1:	jg     0x1c27d
   1c2f3:	ret    0x1d32
   1c2f6:	ret    0xeac4
   1c2f9:	jmpw   0x8aa3
   1c2fd:	test   BYTE PTR [edx-0x31],al
   1c300:	mov    ecx,0x27d2c93e
   1c305:	xor    dh,dl
   1c307:	pop    ecx
   1c308:	into   
   1c309:	xlat   BYTE PTR ds:[ebx]
   1c30a:	cli    
   1c30b:	cmp    dh,bl
   1c30d:	push   esi
   1c30e:	in     al,dx
   1c30f:	sbb    DWORD PTR [eax+0x253929c5],0x11799f
   1c319:	int3   
   1c31a:	sahf   
   1c31b:	xor    dl,bl
   1c31d:	jb     0x1c338
   1c31f:	test   BYTE PTR [ecx+0x56319dcc],0x27
   1c326:	xor    ch,dh
   1c328:	pushf  
   1c329:	imul   ebp,ecx,0x43619ef7
   1c32f:	(bad)  
   1c330:	fsubr  QWORD PTR [eax]
   1c332:	jnp    0x1c39c
   1c334:	sahf   
   1c335:	jl     0x1c373
   1c337:	lods   al,BYTE PTR ds:[esi]
   1c338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1c339:	into   
   1c33a:	lds    eax,FWORD PTR [edx+0x142dd03a]
   1c340:	repnz dec esi
   1c342:	inc    ebx
   1c343:	adc    BYTE PTR [edx+0x7c],bh
   1c346:	lods   eax,DWORD PTR ds:[esi]
   1c347:	dec    ebx
   1c348:	mov    ebp,DWORD PTR [esi]
   1c34a:	jmp    FWORD PTR [edx+0x0]
   1c34d:	int3   
   1c34e:	rcl    edx,cl
   1c350:	inc    ebx
   1c351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1c352:	pop    ebp
   1c353:	pop    esi
   1c354:	in     eax,0xe0
   1c356:	adc    ebp,DWORD PTR [edi]
   1c358:	je     0x1c3b4
   1c35a:	xor    dh,bh
   1c35c:	ret    0xab69
   1c35f:	jle    0x1c2ec
   1c361:	adc    eax,0x342fa3fa
   1c366:	pop    es
   1c367:	jns    0x1c310
   1c369:	mov    ebp,0x2ff3590
   1c36e:	(bad)  
   1c36f:	rcl    BYTE PTR [eiz*4+0x68920e0f],cl
   1c376:	mov    eax,ds:0xccb5df9e
   1c37b:	pop    esp
   1c37c:	cwde   
   1c37d:	call   0x61dc:0x4ca93ee1
   1c384:	shld   DWORD PTR [edi+eax*4-0x33ff8e38],ecx,0x2e
   1c38d:	add    BYTE PTR [ebp+0x0],bl
   1c390:	or     al,BYTE PTR [eax]
   1c392:	or     al,BYTE PTR [eax]
   1c394:	add    BYTE PTR [eax],al
   1c396:	push   esp
   1c397:	cmp    BYTE PTR [ebx+0x201515be],bl
   1c39d:	test   al,0x4a
   1c39f:	into   
   1c3a0:	xlat   BYTE PTR ds:[ebx]
   1c3a1:	cmp    eax,0xaa36f970
   1c3a6:	jle    0x1c3b5
   1c3a8:	and    BYTE PTR ss:[esi+0x72],cl
   1c3ac:	or     eax,0x3bdb3bb
   1c3b1:	add    BYTE PTR [ecx],dl
   1c3b3:	fdiv   DWORD PTR [edi+0x5]
   1c3b6:	inc    eax
   1c3b7:	mov    eax,edi
   1c3b9:	stos   BYTE PTR es:[edi],al
   1c3ba:	dec    esi
   1c3bb:	sub    BYTE PTR [ecx-0x5bf426a7],bl
   1c3c1:	sbb    dh,0xba
   1c3c4:	js     0x1c401
   1c3c6:	jb     0x1c42e
   1c3c8:	sub    al,0x8
   1c3ca:	nop
   1c3cb:	mov    dl,0xd8
   1c3cd:	jae    0x1c36e
   1c3cf:	test   BYTE PTR [ebx+0x26979d],bh
   1c3d5:	int3   
   1c3d6:	pop    esp
   1c3d7:	add    BYTE PTR [edi],cl
   1c3d9:	add    BYTE PTR [edx],ch
   1c3db:	add    BYTE PTR [edx],cl
   1c3dd:	add    BYTE PTR [edi],al
   1c3df:	add    BYTE PTR [ecx],dl
   1c3e1:	add    BYTE PTR [eax],cl
   1c3e3:	add    BYTE PTR [edi],bh
   1c3e5:	add    BYTE PTR ds:0x1b000000,bh
   1c3eb:	add    BYTE PTR [eax],ch
   1c3ed:	add    BYTE PTR [edi],ch
   1c3ef:	add    BYTE PTR [edx],cl
   1c3f1:	add    BYTE PTR [edx],cl
   1c3f3:	add    BYTE PTR [edi],al
   1c3f5:	add    BYTE PTR [ecx],dl
   1c3f7:	add    BYTE PTR [eax],cl
   1c3f9:	add    BYTE PTR [esi+0x0],bl
   1c3fc:	add    DWORD PTR [eax],eax
   1c3fe:	outs   dx,BYTE PTR ds:[esi]
   1c3ff:	add    BYTE PTR [eax],bh
   1c401:	add    BYTE PTR [esi],dl
   1c403:	add    BYTE PTR [ebx],bl
   1c405:	add    BYTE PTR [edi],bl
   1c407:	add    BYTE PTR [ebx],dl
   1c409:	add    BYTE PTR [edi],dl
   1c40b:	add    BYTE PTR [ecx],al
   1c40d:	add    BYTE PTR [edi],ch
   1c40f:	add    BYTE PTR [eax],al
   1c411:	add    ch,ah
   1c413:	and    dh,ah
   1c415:	fs (bad) 
   1c418:	hlt    
   1c419:	inc    ebx
   1c41a:	add    al,0x92
   1c41c:	nop
   1c41d:	fadd   st,st(1)
   1c41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1c420:	push   ebx
   1c421:	cwde   
   1c422:	xchg   ebx,eax
   1c423:	popa   
   1c424:	scas   eax,DWORD PTR es:[edi]
   1c425:	lahf   
   1c426:	mov    bl,0x18
   1c428:	or     esi,DWORD PTR [ebp+0x7167ba17]
   1c42e:	aaa    
   1c42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1c430:	ins    BYTE PTR es:[edi],dx
   1c431:	inc    edx
   1c432:	imul   eax,DWORD PTR [eax+0x7a92fe25],0x0
   1c439:	int3   
   1c43a:	pop    esp
   1c43b:	add    BYTE PTR [edi],cl
   1c43d:	add    BYTE PTR [edx],ch
   1c43f:	add    BYTE PTR [edx],cl
   1c441:	add    BYTE PTR [edi],al
   1c443:	add    BYTE PTR [ecx],dl
   1c445:	add    BYTE PTR [eax],cl
   1c447:	add    BYTE PTR [edi],bh
   1c449:	add    BYTE PTR ds:0x1b000000,bh
   1c44f:	add    BYTE PTR [eax],al
   1c451:	add    BYTE PTR ds:0xb854dc18,dl
   1c457:	jg     0x1c484
   1c459:	dec    ebp
   1c45a:	sub    al,0x77
   1c45c:	call   0x7a9b:0x24c80b36
   1c463:	ficomp DWORD PTR [ecx+0x6d]
   1c466:	aas    
   1c467:	inc    ebp
   1c468:	sub    al,0xfe
   1c46a:	ret    0xac2e
   1c46d:	repnz mov ebp,DWORD PTR cs:[ecx+0x59162f77]
   1c475:	add    BYTE PTR [eax+eax*1+0xe],bl
   1c479:	add    BYTE PTR [edi],dh
   1c47b:	add    BYTE PTR [edx],al
   1c47d:	add    BYTE PTR [esi],cl
   1c47f:	add    BYTE PTR [edx],bl
   1c481:	add    BYTE PTR [edi],al
   1c483:	add    BYTE PTR [esi],al
   1c485:	add    BYTE PTR [ebx],cl
   1c487:	add    BYTE PTR ds:0x2c001100,ah
   1c48d:	add    BYTE PTR [edx],al
   1c48f:	add    BYTE PTR [ebx],cl
   1c491:	add    BYTE PTR [ecx],al
   1c493:	add    BYTE PTR [edi],al
   1c495:	add    BYTE PTR [ebx],cl
   1c497:	add    BYTE PTR [ecx],bh
   1c499:	add    BYTE PTR [edi],cl
   1c49b:	add    BYTE PTR [edx],cl
   1c49d:	add    BYTE PTR [edx],cl
   1c49f:	add    BYTE PTR [edi],al
   1c4a1:	add    BYTE PTR [ecx],dl
   1c4a3:	add    BYTE PTR [eax],cl
   1c4a5:	add    BYTE PTR [ecx],dl
   1c4a7:	add    BYTE PTR [edi],bl
   1c4a9:	add    BYTE PTR [esi],dh
   1c4ab:	add    BYTE PTR [edi],al
   1c4ad:	add    BYTE PTR [eax],al
   1c4af:	add    BYTE PTR [edi],dl
   1c4b1:	add    BYTE PTR [ebx],cl
   1c4b3:	add    BYTE PTR [edx],bl
   1c4b5:	add    BYTE PTR [edi],dh
   1c4b7:	add    BYTE PTR [eax+eax*1],ch
   1c4ba:	add    DWORD PTR [eax],eax
   1c4bc:	sbb    al,BYTE PTR [eax]
   1c4be:	push   es
   1c4bf:	add    BYTE PTR ds:0x3f000300,bl
   1c4c5:	add    BYTE PTR [esi],dh
   1c4c7:	add    BYTE PTR [ecx],dl
   1c4c9:	add    BYTE PTR [eax],ch
   1c4cb:	add    BYTE PTR [edi],cl
   1c4cd:	add    BYTE PTR [esi],dh
   1c4cf:	add    BYTE PTR [edi],dl
   1c4d1:	add    BYTE PTR [eax+eax*1],al
   1c4d4:	pop    ds
   1c4d5:	add    BYTE PTR [edx],cl
   1c4d7:	add    BYTE PTR [esi],al
   1c4d9:	add    BYTE PTR [esi],dl
   1c4db:	add    BYTE PTR [edi],ch
   1c4dd:	add    BYTE PTR [eax],al
   1c4df:	add    BYTE PTR [edi+0x6e],bl
   1c4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1c4e3:	cdq    
   1c4e4:	inc    edx
   1c4e5:	sbb    eax,0xe2c96598
   1c4ea:	xor    ebp,ebx
   1c4ec:	push   ss
   1c4ed:	mov    DWORD PTR [ecx],ecx
   1c4ef:	loope  0x1c4dd
   1c4f1:	cmc    
   1c4f2:	mov    al,0xfd
   1c4f4:	in     eax,dx
   1c4f5:	jmp    0xaa8:0x51b817cf
   1c4fc:	or     DWORD PTR [ebp+0x4f8da2f5],eax
   1c502:	movsx  esp,BYTE PTR [edx]
   1c505:	sub    BYTE PTR [ecx+0x6ccc0053],0x0
   1c50c:	pop    ds
   1c50d:	add    BYTE PTR [edx],dl
   1c50f:	add    BYTE PTR [edx],dl
   1c511:	add    BYTE PTR [eax],al
   1c513:	add    BYTE PTR [ebp+0x0],bl
   1c516:	dec    ebx
   1c517:	add    BYTE PTR ds:0x1d00,bl
   1c51d:	add    BYTE PTR [edx],bl
   1c51f:	mov    eax,0x34661b1d
   1c524:	jge    0x1c54a
   1c526:	adc    eax,0xf692fe08
   1c52b:	add    BYTE PTR [ebx+0x51c0f1d3],0x7e
   1c532:	jo     0x1c559
   1c534:	ret    0xb05b
   1c537:	rcl    esi,cl
   1c539:	jae    0x1c5ba
   1c53b:	scas   eax,DWORD PTR es:[edi]
   1c53c:	mov    eax,0x14324efa
   1c541:	test   al,0xfa
   1c543:	adc    ah,BYTE PTR [edi]
   1c545:	jp     0x1c579
   1c547:	retf   
   1c548:	mov    DWORD PTR [ecx+0x6ada85b],ebp
   1c54e:	xor    al,0xeb
   1c550:	mov    eax,ds:0x5acc00ce
   1c555:	sub    eax,0x6163725
   1c55a:	sbb    BYTE PTR [eax],cl
   1c55c:	xor    DWORD PTR [edx+ebx*1],edi
   1c55f:	pop    ss
   1c560:	add    al,0x5
   1c562:	add    ah,cl
   1c564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1c565:	mov    ebx,0xecc32abc
   1c56a:	(bad)
   1c56d:	sub    eax,0x8f087a90
   1c572:	cmp    dh,BYTE PTR [ebp+ebp*1-0x13]
   1c576:	in     al,dx
   1c577:	(bad)  
   1c578:	cmp    DWORD PTR [edi],0x5d
   1c57b:	sbb    esi,DWORD PTR [edx]
   1c57d:	xchg   edi,eax
   1c57e:	adc    ebx,edi
   1c580:	or     DWORD PTR [edx+0x75ae69b],0xffffffb8
   1c587:	pop    ds
   1c588:	inc    bh
   1c58a:	mov    dl,BYTE PTR [edi+0x6ff3272b]
   1c590:	lea    eax,[edi+0x61]
   1c593:	xchg   ebx,eax
   1c594:	scas   al,BYTE PTR es:[edi]
   1c595:	pop    eax
   1c596:	div    esp
   1c598:	inc    edx
   1c59a:	add    ah,cl
   1c59c:	dec    esi
   1c59d:	cmp    ah,BYTE PTR [ebx]
   1c59f:	and    eax,0x33111d1b
   1c5a4:	aas    
   1c5a5:	sbb    eax,DWORD PTR [esi]
   1c5a7:	add    DWORD PTR [ecx*1+0x2082821],edx
   1c5ae:	sbb    eax,0xf0cc000b
   1c5b3:	push   esi
   1c5b4:	neg    DWORD PTR [ebx-0x6fa61351]
   1c5ba:	int3   
   1c5bb:	and    ebx,DWORD PTR [ebp+0x21]
   1c5be:	sbb    al,0x19
   1c5c0:	inc    ebx
   1c5c1:	xchg   esi,eax
   1c5c2:	mov    esp,DWORD PTR [ebx]
   1c5c4:	and    BYTE PTR [edi-0x23],bh
   1c5c7:	sub    ebp,edi
   1c5c9:	adc    edx,DWORD PTR [ecx+edi*4]
   1c5cc:	jmp    DWORD PTR [edx-0xb9ff860]
   1c5d2:	and    eax,0x45c4d020
   1c5d7:	nop
   1c5d8:	xor    DWORD PTR [eax+edx*4],edi
   1c5db:	inc    ebx
   1c5dc:	leave  
   1c5dd:	out    0x35,eax
   1c5df:	jle    0x1c57f
   1c5e1:	jle    0x1c577
   1c5e3:	imul   ebp,DWORD PTR [ebx-0x18],0x3d
   1c5e7:	dec    edi
   1c5e8:	nop
   1c5e9:	jge    0x1c5eb
   1c5eb:	int3   
   1c5ec:	pop    edx
   1c5ed:	sub    eax,0x1b1d2227
   1c5f2:	adc    DWORD PTR [esi],eax
   1c5f4:	pop    ss
   1c5f5:	and    bh,BYTE PTR [edi]
   1c5f7:	sbb    eax,DWORD PTR [esi]
   1c5f9:	add    DWORD PTR [ecx*1+0x2082821],edx
   1c600:	sbb    eax,0xc5cc000b
   1c605:	mov    eax,db6
   1c608:	retf   0x11ce
   1c60b:	jp     0x1c651
   1c60d:	aad    0xea
   1c60f:	cmp    BYTE PTR [eax+eiz*8],al
   1c612:	xchg   ebp,eax
   1c613:	jo     0x1c5b1
   1c615:	fs cdq 
   1c617:	shr    ch,1
   1c619:	mov    ebx,0x2d3d4e6b
   1c61e:	cdq    
   1c61f:	(bad)  [ecx]
   1c621:	call   0x2b81:0x3d4c7acc
   1c628:	push   ss
   1c629:	push   ecx
   1c62a:	dec    esi
   1c62b:	ins    BYTE PTR es:[edi],dx
   1c62c:	arpl   WORD PTR [edi],sp
   1c62e:	add    ah,cl
   1c630:	popf   
   1c631:	bound  eax,QWORD PTR [esi-0x3bc9af4]
   1c637:	mov    edi,ecx
   1c639:	test   eax,0x54c9da3
   1c63e:	inc    esp
   1c63f:	dec    edx
   1c640:	leave  
   1c641:	daa    
   1c642:	jmp    0x1c623
   1c644:	fist   WORD PTR cs:[eax+0x455f4503]
   1c64b:	mov    al,ds:0x56c1cec7
   1c650:	adc    al,0x7
   1c652:	fs inc esp
   1c654:	lea    ecx,[eax]
   1c656:	sub    DWORD PTR [edx],ebx
   1c658:	call   0x76e38f1e
   1c65d:	mov    al,0x6d
   1c65f:	sbb    BYTE PTR [eax+0x5d],dh
   1c662:	sub    DWORD PTR [esi+ecx*8+0x38],ecx
   1c666:	jns    0x1c6c1
   1c668:	mov    dl,ah
   1c66a:	add    ah,cl
   1c66c:	pop    esp
   1c66d:	add    BYTE PTR [eax],bl
   1c66f:	add    BYTE PTR [ebx],ch
   1c671:	add    BYTE PTR [eax+eax*1],bl
   1c674:	aaa    
   1c675:	add    BYTE PTR [ecx],ah
   1c677:	add    BYTE PTR [ebx],dl
   1c679:	add    BYTE PTR [edi],bl
   1c67b:	add    BYTE PTR [edx],cl
   1c67d:	add    BYTE PTR [esi],al
   1c67f:	add    BYTE PTR [esi],dl
   1c681:	add    BYTE PTR [edi],ch
   1c683:	add    BYTE PTR [ecx+0x0],bh
   1c686:	push   esi
   1c687:	add    BYTE PTR [eax],al
   1c689:	add    BYTE PTR [edi+0x5bdb6e82],ch
   1c68f:	jp     0x1c6d9
   1c691:	imul   eax,DWORD PTR [esi+0x14],0x15a12c0c
   1c698:	inc    esi
   1c699:	mov    BYTE PTR [ecx+0xcec2e86],0xb1
   1c6a0:	sbb    cl,bl
   1c6a2:	push   edi
   1c6a3:	add    ebx,DWORD PTR [ebx+0x5c]
   1c6a6:	rol    BYTE PTR [ecx+0x735a7a61],cl
   1c6ac:	jno    0x1c6e3
   1c6ae:	pop    edi
   1c6af:	stos   DWORD PTR es:[edi],eax
   1c6b0:	inc    ebx
   1c6b1:	mov    al,ds:0x51a94fcc
   1c6b6:	sub    DWORD PTR [edi],0xf76b892f
   1c6bc:	dec    edx
   1c6bd:	ss add ah,cl
   1c6c0:	pop    esp
   1c6c1:	add    BYTE PTR [eax],bl
   1c6c3:	add    BYTE PTR [ecx],ah
   1c6c5:	add    BYTE PTR [ebx],dl
   1c6c7:	add    BYTE PTR [edi],bl
   1c6c9:	add    BYTE PTR [edx],cl
   1c6cb:	add    BYTE PTR [esi],al
   1c6cd:	add    BYTE PTR [ecx],bh
   1c6cf:	add    BYTE PTR [ecx+0x0],bh
   1c6d2:	push   esi
   1c6d3:	add    BYTE PTR [eax],al
   1c6d5:	add    BYTE PTR [ebx-0x513066d6],bl
   1c6db:	jmp    0x1c66c
   1c6dd:	mov    WORD PTR [ebx-0x1e],?
   1c6e0:	or     DWORD PTR [ecx+0x49],edi
   1c6e3:	xchg   ebp,eax
   1c6e4:	mov    ds:0x3a2073e8,eax
   1c6e9:	sbb    BYTE PTR [edi+0x3e055f2b],al
   1c6ef:	jo     0x1c69b
   1c6f1:	or     BYTE PTR [edi],dh
   1c6f3:	mov    bl,0x2c
   1c6f5:	shl    DWORD PTR [ebx-0x10bdcf12],1
   1c6fb:	mov    dh,0xa9
   1c6fd:	xor    dl,BYTE PTR [edx+eax*4-0xe1b1e9e]
   1c704:	xchg   esi,eax
   1c705:	call   0x53:0x96a4d4
   1c70c:	jns    0x1c70e
   1c70e:	jae    0x1c710
   1c710:	inc    ebp
   1c711:	add    BYTE PTR [esi+0x0],dh
   1c714:	je     0x1c716
   1c716:	inc    ebx
   1c717:	add    BYTE PTR [eax],al
   1c719:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1c71d:	adc    ebx,DWORD PTR [edi]
   1c71f:	or     al,BYTE PTR [esi]
   1c721:	cmp    DWORD PTR [eax],eax
   1c723:	int3   
   1c724:	cld    
   1c725:	sbb    BYTE PTR [edi],al
   1c727:	outs   dx,DWORD PTR ds:[esi]
   1c728:	jb     0x1c710
   1c72a:	jns    0x1c6f1
   1c72c:	xchg   ebp,eax
   1c72d:	imul   ebp,DWORD PTR [edx+0x119388b8],0x407570f9
   1c737:	xor    edi,esi
   1c739:	shr    BYTE PTR [edi+0x5a],0xb4
   1c73d:	or     BYTE PTR [eax-0x1456b006],bh
   1c743:	dec    edi
   1c744:	xchg   esi,eax
   1c745:	push   0x69812464
   1c74a:	sub    eax,DWORD PTR [eax]
   1c74c:	pop    esp
   1c74d:	add    BYTE PTR [eax],al
   1c74f:	add    BYTE PTR [edx+0x0],dh
   1c752:	jb     0x1c754
   1c754:	add    BYTE PTR [eax],al
   1c756:	fiadd  WORD PTR [ebx+0x6]
   1c759:	scas   al,BYTE PTR es:[edi]
   1c75a:	loopne 0x1c758
   1c75c:	inc    ebp
   1c75d:	add    al,BYTE PTR [edx]
   1c75f:	jnp    0x1c7c5
   1c761:	add    eax,edi
   1c763:	pop    edi
   1c764:	ret    
   1c765:	xor    bh,BYTE PTR [ebx-0x571f78d7]
   1c76b:	or     BYTE PTR [ecx],ch
   1c76d:	sahf   
   1c76e:	es es dec ebp
   1c771:	adc    DWORD PTR [ebx+0x508c0c],esp
   1c777:	int3   
   1c778:	pop    esp
   1c779:	add    BYTE PTR [ebx+0x63],ah
   1c77c:	add    ah,cl
   1c77e:	ins    BYTE PTR es:[edi],dx
   1c77f:	xor    eax,DWORD PTR [esi+0x45]
   1c782:	hlt    
   1c783:	push   eax
   1c784:	fisub  WORD PTR [esi+esi*8]
   1c787:	add    eax,0x3e17f9a1
   1c78c:	in     eax,0x2
   1c78e:	xchg   ecx,eax
   1c78f:	aas    
   1c790:	jge    0x1c7ba
   1c792:	hlt    
   1c793:	inc    edx
   1c794:	cdq    
   1c795:	sti    
   1c796:	mov    ds:0xfc51170f,al
   1c79b:	nop
   1c79c:	xor    al,0x4f
   1c79e:	stos   DWORD PTR es:[edi],eax
   1c79f:	ror    esi,cl
   1c7a1:	xor    al,0x8f
   1c7a3:	cmp    BYTE PTR [ebx*4-0x7047bcbe],0x67
   1c7ab:	repnz mov esi,0x2fb1e5bc
   1c7b1:	jbe    0x1c811
   1c7b3:	mov    ds:0xcc00e994,al
   1c7b8:	and    eax,0x5ccc0053
   1c7bd:	add    BYTE PTR [ebx+0x0],dh
   1c7c0:	jns    0x1c7c2
   1c7c2:	jae    0x1c7c4
   1c7c4:	je     0x1c7c6
   1c7c6:	add    BYTE PTR gs:[ebp+0x0],ch
   1c7ca:	jb     0x1c7cc
   1c7cc:	outs   dx,DWORD PTR ds:[esi]
   1c7cd:	add    BYTE PTR [edi+0x0],ch
   1c7d0:	je     0x1c7d2
   1c7d2:	pop    esp
   1c7d3:	add    BYTE PTR [ebx+0x0],dh
   1c7d6:	jns    0x1c7d8
   1c7d8:	jae    0x1c7da
   1c7da:	je     0x1c7dc
   1c7dc:	add    BYTE PTR gs:[ebp+0x0],ch
   1c7e0:	xor    eax,DWORD PTR [eax]
   1c7e2:	xor    al,BYTE PTR [eax]
   1c7e4:	pop    esp
   1c7e5:	add    BYTE PTR ds:0x5300,ah
   1c7eb:	add    BYTE PTR [ecx],dh
   1c7ed:	xor    ch,BYTE PTR cs:[esi]
   1c7f0:	xor    eax,DWORD PTR [eax]
   1c7f2:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1c7f9:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1c7fd:	outs   dx,BYTE PTR gs:[esi]
   1c7ff:	addr16 je 0x1c86a
   1c802:	and    BYTE PTR [ebx+0x68],ah
   1c805:	arpl   WORD PTR gs:[ebx+0x0],bp
   1c809:	int3   
   1c80a:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1c811:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1c815:	popa   
   1c816:	je     0x1c879
   1c818:	and    BYTE PTR [ebx+0x68],ah
   1c81b:	arpl   WORD PTR gs:[ebx+0x0],bp
   1c81f:	int3   
   1c820:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1c827:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1c82b:	je     0x1c88e
   1c82d:	outs   dx,BYTE PTR ds:[esi]
   1c82e:	arpl   WORD PTR [ebp+0x20],sp
   1c831:	je     0x1c8a2
   1c833:	outs   dx,DWORD PTR ds:[esi]
   1c834:	and    BYTE PTR [esi+0x61],ah
   1c837:	jb     0x1c859
   1c839:	bound  esp,QWORD PTR [ecx+0x63]
   1c83c:	imul   eax,DWORD PTR [eax],0x69
   1c83f:	outs   dx,BYTE PTR ds:[esi]
   1c840:	jbe    0x1c8a3
   1c842:	ins    BYTE PTR es:[edi],dx
   1c843:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1c84b:	outs   dx,BYTE PTR ds:[esi]
   1c84c:	arpl   WORD PTR [ebp+0x20],sp
   1c84f:	arpl   WORD PTR [edi+0x64],bp
   1c852:	add    BYTE PTR gs:[ecx+0x6e],ch
   1c856:	jbe    0x1c8b9
   1c858:	ins    BYTE PTR es:[edi],dx
   1c859:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1c861:	popa   
   1c862:	ins    BYTE PTR es:[edi],dx
   1c863:	das    
   1c864:	ins    BYTE PTR es:[edi],dx
   1c865:	outs   dx,BYTE PTR gs:[esi]
   1c867:	addr16 je 0x1c8d2
   1c86a:	and    BYTE PTR [ebx+0x6f],ah
   1c86d:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1c872:	jbe    0x1c8d5
   1c874:	ins    BYTE PTR es:[edi],dx
   1c875:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1c87d:	outs   dx,BYTE PTR ds:[esi]
   1c87e:	arpl   WORD PTR [ebp+0x73],sp
   1c881:	and    BYTE PTR [ebx+0x65],dh
   1c884:	je     0x1c886
   1c886:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1c88d:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1c891:	gs jb  0x1c8f5
   1c894:	ins    BYTE PTR es:[edi],dx
   1c895:	das    
   1c896:	ins    BYTE PTR es:[edi],dx
   1c897:	outs   dx,BYTE PTR gs:[esi]
   1c899:	addr16 je 0x1c904
   1c89c:	jae    0x1c8be
   1c89e:	jae    0x1c905
   1c8a0:	je     0x1c8a2
   1c8a2:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1c8a9:	and    BYTE PTR [edx+0x69],ah
   1c8ac:	je     0x1c8ce
   1c8ae:	ins    BYTE PTR es:[edi],dx
   1c8af:	outs   dx,BYTE PTR gs:[esi]
   1c8b1:	addr16 je 0x1c91c
   1c8b4:	and    BYTE PTR [edx+0x65],dh
   1c8b7:	jo     0x1c91e
   1c8b9:	popa   
   1c8ba:	je     0x1c8bc
   1c8bc:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1c8c3:	and    BYTE PTR [ebx+0x6f],ah
   1c8c6:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1c8cc:	addr16 je 0x1c937
   1c8cf:	jae    0x1c8f1
   1c8d1:	jae    0x1c938
   1c8d3:	je     0x1c8d5
   1c8d5:	int3   
   1c8d6:	je     0x1c947
   1c8d8:	outs   dx,DWORD PTR ds:[esi]
   1c8d9:	and    BYTE PTR [ebp+0x61],ch
   1c8dc:	outs   dx,BYTE PTR ds:[esi]
   1c8dd:	jns    0x1c8ff
   1c8df:	ins    BYTE PTR es:[edi],dx
   1c8e0:	outs   dx,BYTE PTR gs:[esi]
   1c8e2:	addr16 je 0x1c94d
   1c8e5:	and    BYTE PTR [edi+0x72],ch
   1c8e8:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1c8ec:	je     0x1c94f
   1c8ee:	outs   dx,BYTE PTR ds:[esi]
   1c8ef:	arpl   WORD PTR [ebp+0x20],sp
   1c8f2:	jae    0x1c96d
   1c8f4:	ins    DWORD PTR es:[edi],dx
   1c8f5:	bound  ebp,QWORD PTR [edi+0x6c]
   1c8f8:	jae    0x1c8fa
   1c8fa:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1c901:	and    BYTE PTR [ebx+0x74],dh
   1c904:	outs   dx,DWORD PTR ds:[esi]
   1c905:	jb     0x1c96c
   1c907:	and    BYTE PTR fs:[edx+0x6c],ah
   1c90b:	outs   dx,DWORD PTR ds:[esi]
   1c90c:	arpl   WORD PTR [ebx+0x20],bp
   1c90f:	ins    BYTE PTR es:[edi],dx
   1c910:	outs   dx,BYTE PTR gs:[esi]
   1c912:	addr16 je 0x1c97d
   1c915:	jae    0x1c917
   1c917:	int3   
   1c918:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1c91f:	and    BYTE PTR [edx+0x6c],ah
   1c922:	outs   dx,DWORD PTR ds:[esi]
   1c923:	arpl   WORD PTR [ebx+0x20],bp
   1c926:	je     0x1c9a1
   1c928:	jo     0x1c98f
   1c92a:	add    ah,cl
   1c92c:	push   0x65646165
   1c931:	jb     0x1c953
   1c933:	arpl   WORD PTR [edx+0x63],si
   1c936:	and    BYTE PTR [ebp+0x69],ch
   1c939:	jae    0x1c9a8
   1c93b:	popa   
   1c93c:	je     0x1c9a1
   1c93e:	push   0x6b6e7500
   1c943:	outs   dx,BYTE PTR ds:[esi]
   1c944:	outs   dx,DWORD PTR ds:[esi]
   1c945:	ja     0x1c9b5
   1c947:	and    BYTE PTR [eax+0x65],ch
   1c94a:	popa   
   1c94b:	fs gs jb 0x1c96f
   1c94f:	data16 ins BYTE PTR es:[edi],dx
   1c951:	popa   
   1c952:	addr16 jae 0x1c975
   1c955:	jae    0x1c9bc
   1c957:	je     0x1c959
   1c959:	int3   
   1c95a:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1c961:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1c965:	gs popa 
   1c967:	fs gs jb 0x1c98b
   1c96b:	arpl   WORD PTR [eax+0x65],bp
   1c96e:	arpl   WORD PTR [ebx+0x0],bp
   1c971:	int3   
   1c972:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1c979:	and    BYTE PTR [edi+0x69],dh
   1c97c:	outs   dx,BYTE PTR ds:[esi]
   1c97d:	outs   dx,DWORD PTR fs:[esi]
   1c97f:	ja     0x1c9a1
   1c981:	jae    0x1c9ec
   1c983:	jp     0x1c9ea
   1c985:	add    BYTE PTR [ebp+0x6e],dh
   1c988:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1c98c:	outs   dx,BYTE PTR ds:[esi]
   1c98d:	and    BYTE PTR [ebx+0x6f],ah
   1c990:	ins    DWORD PTR es:[edi],dx
   1c991:	jo     0x1ca05
   1c993:	gs jae 0x1ca09
   1c996:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1c99d:	.byte 0x68
   1c99e:	outs   dx,DWORD PTR ds:[esi]
   1c99f:	fs
	...

Disassembly of section INIT:

00073400 <INIT>:
   73400:	add    BYTE PTR [eax],al
   73402:	add    BYTE PTR [eax],al
   73404:	add    BYTE PTR [ecx+0x72518],ah
   7340a:	mov    ecx,0xbb40e64e
   7340f:	test   eax,eax
   73411:	je     0x73417
   73413:	cmp    eax,ecx
   73415:	jne    0x73431
   73417:	mov    eax,ds:0x1ca48
   7341c:	mov    eax,DWORD PTR [eax]
   7341e:	xor    eax,0x72518
   73423:	mov    ds:0x72518,eax
   73428:	jne    0x73431
   7342a:	mov    eax,ecx
   7342c:	mov    ds:0x72518,eax
   73431:	not    eax
   73433:	mov    ds:0x7251c,eax
   73438:	ret    
   73439:	fcom   DWORD PTR ds:0x8ba61d69
   7343f:	call   DWORD PTR [ebp-0x75]
   73442:	in     al,dx
   73443:	call   0x73405
   73448:	pop    ebp
   73449:	jmp    0x18028
   7344e:	int3   
   7344f:	int3   
   73450:	xchg   esp,eax
   73451:	xor    al,0x6
	...
   7345b:	add    BYTE PTR [edx],dh
   7345d:	ss push es
   7345f:	add    BYTE PTR [eax],cl
   73461:	retf   0x0
   73464:	mov    WORD PTR [esi+eax*1],?
	...
   7346f:	add    BYTE PTR [esi+esi*1+0x6],dl
   73473:	add    BYTE PTR [eax],al
   73475:	retf   0x0
	...
   7348c:	inc    eax
   7348d:	ss push es
   7348f:	add    BYTE PTR [eax],al
   73491:	add    BYTE PTR [eax],al
   73493:	add    BYTE PTR [eax],al
   73495:	xor    eax,0x350a0006
   7349a:	push   es
   7349b:	add    BYTE PTR [esi*1+0x351e0006],dl
   734a2:	push   es
   734a3:	add    BYTE PTR [edx],bh
   734a5:	xor    eax,0x35440006
   734aa:	push   es
   734ab:	add    BYTE PTR [esi+0x35],cl
   734ae:	push   es
   734af:	add    BYTE PTR [esi+0x35],bl
   734b2:	push   es
   734b3:	add    BYTE PTR [ebp+esi*1+0x6],dh
   734b7:	add    BYTE PTR [eax-0x75fff9cb],al
   734bd:	xor    eax,0x35a20006
   734c2:	push   es
   734c3:	add    BYTE PTR [edx-0x33fff9cb],bh
   734c9:	xor    eax,0x35e00006
   734ce:	push   es
   734cf:	add    BYTE PTR [eax],al
   734d1:	ss push es
   734d3:	add    BYTE PTR [esi+esi*1],dl
   734d6:	push   es
   734d7:	add    BYTE PTR [edx],ah
   734d9:	ss push es
   734db:	add    al,ch
   734dd:	xor    al,0x6
   734df:	add    BYTE PTR [esi+esi*1+0x6],bl
   734e3:	add    BYTE PTR [eax],al
   734e5:	add    BYTE PTR [eax],al
   734e7:	add    BYTE PTR [eax],dh
   734e9:	add    ecx,DWORD PTR [edi+0x62]
   734ec:	inc    sp
   734ee:	gs jb  0x73556
   734f1:	data16 gs jb 0x7355a
   734f5:	outs   dx,BYTE PTR ds:[esi]
   734f6:	arpl   WORD PTR [ebp+0x4f],sp
   734f9:	bound  ebp,QWORD PTR [edx+0x65]
   734fc:	arpl   WORD PTR [eax+eax*1+0x0],si
   73500:	jnp    0x73507
   73502:	pop    edi
   73503:	popa   
   73504:	ins    BYTE PTR es:[edi],dx
   73505:	ins    BYTE PTR es:[edi],dx
   73506:	ins    DWORD PTR es:[edi],dx
   73507:	jne    0x73575
   73509:	add    BYTE PTR [ecx+0x5],bh
   7350c:	pop    edi
   7350d:	popa   
   7350e:	ins    BYTE PTR es:[edi],dx
   7350f:	ins    BYTE PTR es:[edi],dx
   73510:	imul   esi,DWORD PTR fs:[esi+0x0],0x656d05a9
   73518:	ins    DWORD PTR es:[edi],dx
   73519:	jae    0x73580
   7351b:	je     0x7351d
   7351d:	add    BYTE PTR [ecx+0x476d4d02],ah
   73523:	gs je  0x73579
   73526:	jns    0x7359b
   73528:	je     0x7358f
   7352a:	ins    DWORD PTR es:[edi],dx
   7352b:	push   edx
   7352c:	outs   dx,DWORD PTR ds:[esi]
   7352d:	jne    0x735a3
   7352f:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   73536:	gs jae 0x735ac
   73539:	add    bh,al
   7353b:	add    eax,0x6e736377
   73540:	arpl   WORD PTR [ecx+0x74],sp
   73543:	add    BYTE PTR [edi+0x6d656d05],ah
   73549:	arpl   WORD PTR [eax+0x79],si
   7354c:	add    BYTE PTR [eax],al
   7354e:	jne    0x73550
   73550:	inc    ebp
   73551:	js     0x735a5
   73553:	popa   
   73554:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   7355b:	jne    0x735d0
   7355d:	add    bl,ah
   7355f:	add    DWORD PTR [ecx+0x6f],ecx
   73562:	inc    bx
   73564:	outs   dx,DWORD PTR ds:[esi]
   73565:	ins    DWORD PTR es:[edi],dx
   73566:	jo     0x735d4
   73568:	gs je  0x735d0
   7356b:	push   edx
   7356c:	gs jno 0x735e4
   7356f:	gs jae 0x735e6
   73572:	add    BYTE PTR [eax],al
   73574:	mov    ecx,0x70777305
   73579:	jb     0x735e4
   7357b:	outs   dx,BYTE PTR ds:[esi]
   7357c:	je     0x735e4
   7357e:	add    BYTE PTR [eax],al
   73580:	lods   al,BYTE PTR ds:[esi]
   73581:	add    eax,0x69727073
   73586:	outs   dx,BYTE PTR ds:[esi]
   73587:	je     0x735ef
   73589:	add    BYTE PTR [ecx+0x0],al
   7358c:	inc    ebp
   7358d:	js     0x735d0
   7358f:	ins    BYTE PTR es:[edi],dx
   73590:	ins    BYTE PTR es:[edi],dx
   73591:	outs   dx,DWORD PTR ds:[esi]
   73592:	arpl   WORD PTR [ecx+0x74],sp
   73595:	gs push eax
   73597:	outs   dx,DWORD PTR ds:[esi]
   73598:	outs   dx,DWORD PTR ds:[esi]
   73599:	ins    BYTE PTR es:[edi],dx
   7359a:	push   edi
   7359b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x6d006761
   735a3:	add    cl,BYTE PTR [ebx+0x65]
   735a6:	push   edi
   735a7:	popa   
   735a8:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   735b0:	ins    BYTE PTR es:[di],dx
   735b2:	gs dec edi
   735b4:	bound  ebp,QWORD PTR [edx+0x65]
   735b7:	arpl   WORD PTR [eax+eax*1+0x42],si
   735bb:	add    cl,BYTE PTR [ebx+0x65]
   735be:	push   edx
   735bf:	gs ins BYTE PTR es:[edi],dx
   735c1:	gs popa 
   735c3:	jae    0x7362a
   735c5:	dec    ebp
   735c6:	jne    0x7363c
   735c8:	gs js  0x735cb
   735cb:	add    BYTE PTR [ebx],bl
   735cd:	add    cl,BYTE PTR [ebx+0x65]
   735d0:	dec    ecx
   735d1:	outs   dx,BYTE PTR ds:[esi]
   735d2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   735da:	dec    ebp
   735db:	jne    0x73651
   735dd:	gs js  0x735e0
   735e0:	inc    edx
   735e1:	add    BYTE PTR [ebp+0x78],al
   735e4:	inc    ecx
   735e5:	ins    BYTE PTR es:[edi],dx
   735e6:	ins    BYTE PTR es:[edi],dx
   735e7:	outs   dx,DWORD PTR ds:[esi]
   735e8:	arpl   WORD PTR [ecx+0x74],sp
   735eb:	gs push eax
   735ed:	outs   dx,DWORD PTR ds:[esi]
   735ee:	outs   dx,DWORD PTR ds:[esi]
   735ef:	ins    BYTE PTR es:[edi],dx
   735f0:	push   edi
   735f1:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   735f9:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   73600:	dec    esi
   73601:	add    BYTE PTR [ebp+0x78],al
   73604:	inc    esi
   73605:	jb     0x7366c
   73607:	gs push eax
   73609:	outs   dx,DWORD PTR ds:[esi]
   7360a:	outs   dx,DWORD PTR ds:[esi]
   7360b:	ins    BYTE PTR es:[edi],dx
   7360c:	push   edi
   7360d:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x66006761
   73615:	add    cl,BYTE PTR [ebx+0x65]
   73618:	push   esp
   73619:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   73620:	je     0x73622
   73622:	test   BYTE PTR [ecx],0x4b
   73625:	gs inc edx
   73627:	jne    0x73690
   73629:	inc    ebx
   7362a:	push   0x456b6365
   7362f:	js     0x73631
   73631:	add    BYTE PTR [esi+0x74],ch
   73634:	outs   dx,DWORD PTR ds:[esi]
   73635:	jae    0x736a2
   73637:	jb     0x736a7
   73639:	ins    BYTE PTR es:[edi],dx
   7363a:	cs gs js 0x736a3
   7363e:	add    BYTE PTR [eax],al
   73640:	inc    eax
   73641:	add    BYTE PTR [ebx+0x65],cl
   73644:	inc    edi
   73645:	gs je  0x7368b
   73648:	jne    0x736bc
   7364a:	jb     0x736b1
   7364c:	outs   dx,BYTE PTR ds:[esi]
   7364d:	je     0x73698
   7364f:	jb     0x736c2
   73651:	ins    BYTE PTR es:[edi],dx
   73652:	add    BYTE PTR [eax],al
   73654:	dec    eax
   73655:	inc    ecx
   73656:	dec    esp
   73657:	cs fs ins BYTE PTR es:[edi],dx
   7365a:	ins    BYTE PTR es:[edi],dx
   7365b:	add    BYTE PTR [eax+0x6c745204],ah
   73661:	push   ebp
   73662:	outs   dx,BYTE PTR ds:[esi]
   73663:	ja     0x736ce
   73665:	outs   dx,BYTE PTR ds:[esi]
   73666:	fs
	...
