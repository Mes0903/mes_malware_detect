
94f9e96372a967adc792441913ed4b116ac2452b54de38e4bd2cf46d766038d6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a633
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429867
  401084:	mov    ecx,DWORD PTR ds:0x429f53
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a63b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429f63
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a63f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429f5f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a643
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a647
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a64f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a653
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a657
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x216492fe
  40178d:	mov    cl,0xd3
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x77f77776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x18],ebx
  40183b:	xchg   esi,eax
  40183c:	outs   dx,DWORD PTR ds:[esi]
  40183d:	mov    bh,0x6b
  40183f:	or     esi,DWORD PTR [ecx]
  401841:	fidivr WORD PTR [edi]
  401843:	mov    bl,BYTE PTR [edi+0x58174c97]
  401849:	add    dh,BYTE PTR [esi]
  40184b:	sbb    esp,ebx
  40184d:	xchg   esp,eax
  40184e:	or     bl,BYTE PTR [eax]
  401850:	ror    ebp,1
  401852:	repnz sub eax,0x9e7a1f88
  401858:	jae    0x4017e8
  40185a:	dec    esi
  40185b:	repz inc eax
  40185d:	jnp    0x4018c3
  40185f:	sti    
  401860:	fdivp  st(3),st
  401862:	fcom   QWORD PTR [edx-0x56ba7a74]
  401868:	cmp    eax,0xba34d3c7
  40186d:	(bad)  
  40186e:	pop    ss
  40186f:	pusha  
  401870:	inc    esp
  401871:	pop    es
  401872:	arpl   WORD PTR [edx],cx
  401874:	cwde   
  401875:	test   bh,dh
  401877:	adc    al,0x3d
  401879:	popa   
  40187a:	jo     0x4018b1
  40187c:	push   0xc32509d7
  401881:	push   eax
  401882:	inc    eax
  401883:	dec    ebx
  401884:	inc    eax
  401885:	pop    esp
  401886:	int3   
  401887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401888:	push   ebp
  401889:	das    
  40188a:	xchg   esi,eax
  40188b:	shl    DWORD PTR [edi-0x4c],0xc8
  40188f:	and    DWORD PTR [eax-0x7e019066],ebp
  401895:	enter  0x8747,0xa9
  401899:	sub    BYTE PTR ds:0x89ed9164,ch
  40189f:	and    al,0x5f
  4018a1:	mov    ebx,0x47889bc6
  4018a6:	xor    edi,0x981aff1c
  4018ac:	sub    al,0xd9
  4018ae:	dec    edi
  4018af:	sbb    edi,DWORD PTR [edx]
  4018b1:	mov    dl,0x6c
  4018b3:	sbb    DWORD PTR [ebx],0x50
  4018b6:	in     al,dx
  4018b7:	stos   DWORD PTR es:[edi],eax
  4018b8:	fnsave [ecx-0x69]
  4018bb:	mov    ecx,0xc30b023d
  4018c0:	imul   ebx,DWORD PTR [edi+0x1902ab7],0xffffffd9
  4018c7:	pop    esp
  4018c8:	fbld   TBYTE PTR [ecx-0x9]
  4018cb:	mov    ch,al
  4018cd:	push   ds
  4018ce:	jg     0x40187a
  4018d0:	in     al,dx
  4018d1:	hlt    
  4018d2:	mov    al,ds:0xe357f6b1
  4018d7:	dec    ebp
  4018d8:	and    DWORD PTR gs:[esi+0x63dcda37],ebx
  4018df:	ins    DWORD PTR es:[edi],dx
  4018e0:	enter  0xc521,0x1d
  4018e4:	cmp    BYTE PTR [edi+0x40],al
  4018e7:	test   eax,0xa80720a8
  4018ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018ed:	xchg   ecx,eax
  4018ee:	and    dl,cl
  4018f0:	jmp    DWORD PTR [ebx-0x7e5b3967]
  4018f6:	les    eax,FWORD PTR [esi-0x7ec1a072]
  4018fc:	cmp    BYTE PTR [ebp+0x6fe44316],dl
  401902:	inc    esp
  401903:	rol    BYTE PTR [edx+0x7],0x8
  401907:	mov    ch,0xbe
  401909:	or     BYTE PTR [ebx-0x22],al
  40190c:	jecxz  0x401897
  40190e:	js     0x401897
  401910:	pusha  
  401911:	addr16 fwait
  401913:	(bad)  
  401914:	hlt    
  401915:	xchg   ecx,eax
  401916:	fldcw  WORD PTR [ebp+0x10bed243]
  40191c:	add    al,0x3f
  40191e:	pop    ds
  40191f:	mov    al,ds:0xbbe22a76
  401924:	pop    esi
  401925:	jg     0x4018a9
  401927:	jmp    0x4018d9
  401929:	loop   0x401933
  40192b:	lea    edi,[eax-0x2b41779b]
  401931:	sub    bh,0xea
  401934:	dec    eax
  401935:	outs   dx,DWORD PTR ds:[esi]
  401936:	sbb    ecx,DWORD PTR [esi+edx*8]
  401939:	leave  
  40193a:	xchg   ecx,eax
  40193b:	(bad)
  40193e:	push   eax
  40193f:	jg     0x401929
  401941:	stos   BYTE PTR es:[edi],al
  401942:	mov    bl,0x6a
  401944:	mov    al,ds:0x2888b784
  401949:	icebp  
  40194a:	bound  ecx,QWORD PTR [esi]
  40194c:	je     0x401903
  40194e:	iret   
  40194f:	scas   eax,DWORD PTR es:[edi]
  401950:	loopne 0x401919
  401952:	cwde   
  401953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401954:	xor    DWORD PTR [ebx-0x668c9a56],edx
  40195a:	xchg   esp,eax
  40195b:	pusha  
  40195c:	jns    0x401942
  40195e:	cmc    
  40195f:	ins    DWORD PTR es:[edi],dx
  401960:	add    eax,0xed18fc2b
  401965:	xor    esi,0x17e8cbec
  40196b:	sti    
  40196c:	sar    dl,cl
  40196e:	jecxz  0x4019ee
  401970:	stos   BYTE PTR es:[edi],al
  401971:	daa    
  401972:	fist   WORD PTR [edx-0x7f3831d0]
  401978:	mov    eax,ds:0x66ec42c9
  40197d:	sbb    cl,BYTE PTR [edx-0x52]
  401980:	and    al,0x40
  401982:	inc    ecx
  401983:	adc    eax,0x5b718797
  401988:	gs mov ch,0x62
  40198b:	xor    BYTE PTR [edi],ah
  40198d:	fs mov ebp,fs
  401990:	inc    esp
  401991:	ja     0x4019ba
  401993:	and    DWORD PTR [ecx],eax
  401995:	inc    esp
  401996:	scas   al,BYTE PTR es:[edi]
  401997:	rcl    DWORD PTR [ebp-0xe],cl
  40199a:	mov    edx,0xecc93c02
  40199f:	jp     0x4019d1
  4019a1:	mov    ecx,0x5f43c8eb
  4019a6:	mov    dh,0x93
  4019a8:	pop    edx
  4019a9:	(bad)  
  4019aa:	xor    DWORD PTR [esi-0x1d],edx
  4019ad:	push   ebp
  4019ae:	pop    ebp
  4019af:	retf   0x91e
  4019b2:	and    dl,BYTE PTR [edi-0x2c]
  4019b5:	adc    eax,0x7d4e3ce2
  4019ba:	cmp    bh,dl
  4019bc:	sub    al,0xcc
  4019be:	sub    ah,0xbf
  4019c1:	fild   WORD PTR [ebp-0x201eaf7c]
  4019c7:	inc    edi
  4019c8:	stos   BYTE PTR es:[edi],al
  4019c9:	or     ecx,DWORD PTR [eax]
  4019cb:	imul   ebp,DWORD PTR [ebx],0xffffffcd
  4019ce:	or     al,BYTE PTR [edx+0x5b88006c]
  4019d4:	out    0x77,eax
  4019d6:	and    eax,0xd5d636be
  4019db:	jbe    0x401a06
  4019dd:	or     BYTE PTR [eax+0x5f],bh
  4019e0:	add    al,0x6e
  4019e2:	aad    0x35
  4019e4:	test   eax,0x7d26bcda
  4019e9:	jp     0x401a59
  4019eb:	push   0x3d0ba3a6
  4019f0:	pop    edi
  4019f1:	add    al,0x29
  4019f3:	mov    ds:0x8f589746,al
  4019f8:	aad    0x4b
  4019fa:	cmp    BYTE PTR ss:[esi+0xa],al
  4019fe:	or     ah,BYTE PTR [esi-0x1cc15ccb]
  401a04:	rol    BYTE PTR [edi+0x44eba559],0x71
  401a0b:	scas   al,BYTE PTR es:[edi]
  401a0c:	cmp    bl,0x4d
  401a0f:	sub    DWORD PTR [ebx-0x6f],ebp
  401a12:	rcr    BYTE PTR [eax-0x56aa0004],1
  401a18:	push   ebx
  401a19:	jo     0x401a1f
  401a1b:	sub    dh,BYTE PTR [ebx+0x4f]
  401a1e:	inc    ebx
  401a1f:	cmp    edx,ecx
  401a21:	jmp    0x3e54ec5b
  401a26:	fs adc dh,al
  401a29:	push   ss
  401a2a:	lods   eax,DWORD PTR gs:[esi]
  401a2c:	retf   
  401a2d:	out    dx,eax
  401a2e:	pusha  
  401a2f:	add    cl,BYTE PTR [ebp+0x4b1fff22]
  401a35:	call   ecx
  401a37:	outs   dx,DWORD PTR ds:[esi]
  401a38:	lock mov WORD PTR [esi+0x46],ds
  401a3c:	sub    al,0xba
  401a3e:	cmp    eax,0x630f1a30
  401a43:	dec    ecx
  401a44:	mov    ebx,0xea88f441
  401a49:	jge    0x4019d9
  401a4b:	inc    edx
  401a4c:	push   ebp
  401a4d:	clc    
  401a4e:	(bad)
  401a51:	imul   eax,DWORD PTR [edx+0x5c7357fa],0xffffffcd
  401a58:	out    dx,eax
  401a59:	js     0x401a95
  401a5b:	jl     0x401a0c
  401a5d:	bound  ecx,QWORD PTR ds:0x3a8445
  401a63:	xchg   BYTE PTR ss:[ebx+edi*2],bh
  401a67:	ret    
  401a68:	dec    ecx
  401a69:	and    al,BYTE PTR [esi+edx*4+0x6c]
  401a6d:	xchg   edx,eax
  401a6e:	(bad)  
  401a6f:	jo     0x401a31
  401a71:	sar    BYTE PTR ds:0x9f563bf2,1
  401a77:	addr16 (bad) 
  401a79:	cdq    
  401a7a:	adc    eax,0x3cb0bba3
  401a7f:	outs   dx,DWORD PTR ds:[esi]
  401a80:	mov    cl,0xfe
  401a82:	adc    bl,BYTE PTR [edi+0x343f908d]
  401a88:	sahf   
  401a89:	ds add eax,0x60ffeba6
  401a8f:	loope  0x401aec
  401a91:	rcr    DWORD PTR [ebx],1
  401a93:	and    al,0x30
  401a95:	mov    ch,0xe0
  401a97:	mov    al,ds:0xe88d754a
  401a9c:	neg    DWORD PTR [eax]
  401a9e:	mov    ds:0xb93a4458,eax
  401aa3:	enter  0x2afd,0x53
  401aa7:	cmp    eax,0x20ae1832
  401aad:	push   0xbd3b1285
  401ab2:	mov    cl,0xe2
  401ab4:	ins    DWORD PTR es:[edi],dx
  401ab5:	mov    ah,0x42
  401ab7:	push   es
  401ab8:	popa   
  401ab9:	das    
  401aba:	ja     0x401a65
  401abc:	xor    DWORD PTR [edi],ebx
  401abe:	dec    eax
  401abf:	pushf  
  401ac0:	in     eax,0x2b
  401ac2:	cs retf 
  401ac4:	inc    esi
  401ac5:	mov    bh,0x78
  401ac7:	mov    al,dh
  401ac9:	test   eax,0x71ef5d3e
  401ace:	cmc    
  401acf:	inc    eax
  401ad0:	ins    DWORD PTR es:[edi],dx
  401ad1:	adc    eax,0x44afbc5
  401ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ad7:	dec    edx
  401ad8:	or     esp,DWORD PTR [edi+0x30]
  401adb:	pop    esi
  401adc:	add    ebp,0x78bfe108
  401ae2:	loope  0x401b08
  401ae4:	retf   
  401ae5:	outs   dx,DWORD PTR ds:[esi]
  401ae6:	mov    ebx,0x65aa6f76
  401aeb:	xchg   ebx,eax
  401aec:	xchg   edi,eax
  401aee:	lahf   
  401aef:	or     ebp,DWORD PTR [eax+0x33a3f8b8]
  401af5:	sar    DWORD PTR [ecx-0x3dfb66fb],1
  401afb:	jg     0x401b4a
  401afd:	mov    ds:0x486853db,eax
  401b02:	lahf   
  401b03:	inc    ebp
  401b04:	add    al,0xd0
  401b06:	hlt    
  401b07:	or     eax,0x2474f087
  401b0c:	sub    al,0xee
  401b0e:	sbb    DWORD PTR [eax],0x7eaa2474
  401b14:	addr16 leave 
  401b16:	or     al,0x90
  401b18:	hlt    
  401b19:	xlat   BYTE PTR ds:[ebx]
  401b1a:	jg     0x401ae2
  401b1c:	and    eax,0x94af0fe9
  401b21:	push   es
  401b22:	push   ss
  401b23:	dec    ebx
  401b24:	popf   
  401b25:	mov    ch,0xb
  401b27:	js     0x401aaa
  401b29:	jecxz  0x401b6e
  401b2b:	fild   QWORD PTR ds:0xaa57e1a9
  401b31:	add    edi,DWORD PTR [edi+0x36d89b3]
  401b37:	jne    0x401bb7
  401b39:	std    
  401b3a:	lahf   
  401b3b:	lahf   
  401b3c:	or     esp,DWORD PTR [ecx+0x20de849b]
  401b42:	rcr    DWORD PTR [esi+eiz*2],cl
  401b45:	pop    esi
  401b46:	scas   eax,DWORD PTR es:[edi]
  401b47:	(bad)  
  401b48:	cmp    al,0xbb
  401b4a:	push   eax
  401b4b:	nop
  401b4c:	cdq    
  401b4d:	retf   
  401b4e:	into   
  401b4f:	int    0xc7
  401b51:	cmp    dl,BYTE PTR ds:0x6d1bf1a8
  401b57:	inc    ebx
  401b58:	enter  0x6a09,0xe8
  401b5c:	or     BYTE PTR [esi-0x29],ah
  401b5f:	loop   0x401b85
  401b61:	xchg   ecx,eax
  401b62:	xlat   BYTE PTR ds:[ebx]
  401b63:	(bad)  
  401b64:	add    DWORD PTR [ebx],ebp
  401b66:	mov    edx,0x9aa2e23a
  401b6b:	les    ebx,FWORD PTR ds:0xec622966
  401b71:	rol    BYTE PTR [edx+0x3b],0x3c
  401b75:	cvttps2pi mm4,QWORD PTR [eax]
  401b78:	jp     0x401bc3
  401b7a:	cmc    
  401b7b:	and    al,0x91
  401b7d:	mov    ebx,0xa92c7efa
  401b82:	call   0xb2a1:0xdb7f8e78
  401b89:	jns    0x401bc8
  401b8b:	mov    ebx,0xbd1bdf74
  401b90:	and    al,BYTE PTR [edx+0x72]
  401b93:	xlat   BYTE PTR ds:[ebx]
  401b94:	sti    
  401b95:	outs   dx,BYTE PTR ds:[esi]
  401b96:	das    
  401b97:	test   DWORD PTR ds:0xeb9f62a9,esi
  401b9d:	and    BYTE PTR [ecx-0x38],bl
  401ba0:	and    eax,0x5f85294b
  401ba5:	xchg   ebx,eax
  401ba6:	mov    WORD PTR [edx-0x76],es
  401ba9:	call   0x3914eee
  401bae:	in     al,0x63
  401bb0:	mov    edx,0x33e796e3
  401bb5:	imul   ebp,DWORD PTR [esi+ebx*1+0x52],0xffffff8a
  401bba:	inc    ecx
  401bbb:	inc    esi
  401bbc:	jne    0x401c1d
  401bbe:	in     al,0x83
  401bc0:	or     esi,DWORD PTR [ecx]
  401bc2:	cmp    al,0x5c
  401bc5:	xchg   BYTE PTR ds:0x3d540bbf,bl
  401bcb:	outs   dx,BYTE PTR ds:[esi]
  401bcc:	in     eax,0x79
  401bce:	cdq    
  401bcf:	fdivp  st(6),st
  401bd1:	hlt    
  401bd2:	outs   dx,BYTE PTR ds:[esi]
  401bd3:	pop    ds
  401bd4:	(bad)  
  401bd6:	test   al,0x9f
  401bd8:	add    cl,bl
  401bda:	into   
  401bdb:	ins    BYTE PTR es:[edi],dx
  401bdc:	out    0x61,eax
  401bde:	in     eax,0xb2
  401be0:	or     bl,BYTE PTR [edi+0x3d]
  401be3:	sub    esi,DWORD PTR [esi+0x534c3be4]
  401be9:	pop    ebp
  401bea:	mov    eax,0x5e2240db
  401bef:	jmp    0x401c13
  401bf1:	jae    0x401c72
  401bf3:	mov    dh,0x8f
  401bf5:	les    eax,FWORD PTR [edi-0x42970844]
  401bfb:	std    
  401bfc:	xor    al,dh
  401bfe:	mov    DWORD PTR cs:[edx+0x523a45ab],eax
  401c05:	les    edi,FWORD PTR [edi+0x3f]
  401c08:	and    esi,ebp
  401c0a:	scas   al,BYTE PTR es:[edi]
  401c0b:	push   esi
  401c0c:	and    al,al
  401c0e:	xlat   BYTE PTR ds:[ebx]
  401c0f:	and    ebx,DWORD PTR [eax+0x660561d0]
  401c15:	mov    dh,0xad
  401c17:	or     BYTE PTR [edx],ah
  401c19:	lea    esp,[eax-0x516ce88f]
  401c1f:	xor    al,BYTE PTR [ebp+0x4b]
  401c22:	lock push esp
  401c24:	lea    edx,[edi]
  401c26:	adc    dh,bh
  401c28:	push   ebx
  401c29:	cmp    DWORD PTR [edi+0x26],esp
  401c2c:	jno    0x401bf4
  401c2e:	mov    cl,0x15
  401c30:	xor    eax,0x454a64ba
  401c35:	mov    ch,0xfd
  401c37:	ja     0x401c6e
  401c39:	mov    dh,0xbb
  401c3b:	adc    eax,0x80d4c24a
  401c40:	sub    bl,BYTE PTR [ecx-0x9]
  401c43:	mov    DWORD PTR [ebx],ebp
  401c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c46:	cdq    
  401c47:	sbb    eax,0x6819743e
  401c4c:	add    eax,0xe5a79ce7
  401c51:	int    0xa8
  401c53:	(bad)  
  401c54:	pop    esp
  401c55:	add    DWORD PTR [eax],edi
  401c57:	sub    BYTE PTR [ebx-0x47cb796b],al
  401c5d:	out    0x7e,eax
  401c5f:	push   ecx
  401c60:	jnp    0x401c72
  401c62:	sub    al,BYTE PTR [ebx+ecx*2+0x76dfc44a]
  401c69:	jge    0x401ce3
  401c6b:	scas   eax,DWORD PTR es:[edi]
  401c6c:	sub    cl,dl
  401c6e:	xchg   ebx,eax
  401c6f:	std    
  401c70:	mov    ebp,0x25fac3ad
  401c75:	iret   
  401c76:	scas   al,BYTE PTR es:[edi]
  401c77:	jmp    0x1051457e
  401c7c:	int    0xfd
  401c7e:	call   0xece0:0x6425b582
  401c85:	in     al,0xe7
  401c87:	mov    dh,0x9d
  401c89:	mov    edi,0xb898ec8b
  401c8e:	js     0x401c95
  401c90:	jp     0x401c7d
  401c92:	adc    si,ax
  401c95:	js     0x401c87
  401c97:	fsubp  st(4),st
  401c99:	ss inc eax
  401c9b:	sbb    BYTE PTR [esi],bl
  401c9d:	sbb    dh,BYTE PTR [ebx]
  401c9f:	jb     0x401d04
  401ca1:	mov    ebp,0xeeb1c70
  401ca6:	or     dh,BYTE PTR [eax-0x6562096]
  401cac:	pop    ebx
  401cad:	xchg   DWORD PTR [eax+0x244c4056],esp
  401cb3:	out    dx,eax
  401cb4:	push   edx
  401cb5:	fnsave [edx+esi*2]
  401cb8:	mov    ebx,0xd7d23b00
  401cbd:	adc    eax,0x261267f6
  401cc2:	inc    ecx
  401cc3:	xchg   ecx,eax
  401cc4:	js     0x401cfa
  401cc6:	out    dx,eax
  401cc7:	repnz add al,0xb7
  401cca:	popf   
  401ccb:	xor    BYTE PTR [esi+0x91d71a3],0xbf
  401cd2:	jno    0x401cc0
  401cd4:	mov    ds,WORD PTR [esi+0x61]
  401cd7:	aas    
  401cd8:	pusha  
  401cd9:	rol    DWORD PTR [ebx+0x18],cl
  401cdc:	leave  
  401cdd:	or     cl,ch
  401cdf:	sbb    esp,DWORD PTR [edi-0x30]
  401ce2:	push   ds
  401ce3:	ins    BYTE PTR es:[edi],dx
  401ce4:	mov    edx,?
  401ce6:	nop
  401ce7:	dec    ebp
  401ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ce9:	xchg   DWORD PTR [edi-0x64],esi
  401cec:	inc    eax
  401ced:	or     ch,BYTE PTR [esi]
  401cef:	sub    ah,BYTE PTR [ecx]
  401cf1:	pop    ds
  401cf2:	retf   0x6e17
  401cf5:	into   
  401cf6:	push   es
  401cf7:	fld    DWORD PTR ds:0x80e2a581
  401cfd:	mov    eax,0xa5877c63
  401d02:	hlt    
  401d03:	lahf   
  401d04:	sub    eax,0x67ec7e7b
  401d09:	out    dx,al
  401d0a:	ret    0x7d7f
  401d0d:	add    DWORD PTR [ebx],edi
  401d0f:	hlt    
  401d10:	xchg   esp,eax
  401d11:	adc    al,0x1e
  401d13:	cs mov esi,0xc7263cf3
  401d19:	inc    edx
  401d1a:	and    ebx,DWORD PTR [ecx+0x18faf440]
  401d20:	pop    ecx
  401d21:	sbb    al,0x7b
  401d23:	xchg   ebx,eax
  401d24:	sbb    edx,DWORD PTR [ecx-0x4e]
  401d27:	push   es
  401d28:	stc    
  401d29:	mov    eax,ds:0xd0c4785a
  401d2e:	xchg   ebp,eax
  401d2f:	rcl    DWORD PTR [ecx-0x31058ba2],0x6a
  401d36:	jbe    0x401d62
  401d38:	jne    0x401d8b
  401d3a:	stc    
  401d3b:	aam    0x21
  401d3d:	(bad)  
  401d3e:	call   0x3e8b:0x14a70c63
  401d45:	lock xchg BYTE PTR [ecx+0x35],ah
  401d49:	xchg   esi,eax
  401d4a:	push   esi
  401d4b:	xlat   BYTE PTR ds:[ebx]
  401d4c:	xchg   esi,eax
  401d4d:	sub    ch,dh
  401d4f:	mov    bh,0x52
  401d51:	xchg   esp,edx
  401d53:	sub    al,0xad
  401d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d56:	retf   
  401d57:	mov    ch,0xaa
  401d59:	ds sti 
  401d5b:	pop    eax
  401d5c:	mov    ebp,0x6947c02d
  401d61:	push   ebp
  401d62:	inc    ecx
  401d63:	mov    cl,0x4b
  401d65:	adc    eax,0x39d0ba0a
  401d6a:	out    dx,al
  401d6b:	xor    al,0xe1
  401d6d:	and    al,0x68
  401d6f:	mov    edi,0xe3386068
  401d74:	fs adc eax,edi
  401d77:	enter  0xa6b7,0x13
  401d7b:	mov    ecx,0x3b131573
  401d80:	push   edx
  401d81:	mov    BYTE PTR [ebx+eiz*1-0x612eb51f],dl
  401d88:	pop    ss
  401d89:	add    esp,0x5
  401d8c:	mov    ?,eax
  401d8e:	int    0x6e
  401d90:	outs   dx,DWORD PTR ds:[esi]
  401d91:	into   
  401d92:	inc    edi
  401d93:	pop    esi
  401d94:	fwait
  401d95:	push   esi
  401d96:	loop   0x401dd3
  401d98:	dec    esp
  401d99:	cmp    al,BYTE PTR [ebp-0x493e8fdb]
  401d9f:	xchg   esi,eax
  401da0:	pop    ebp
  401da1:	inc    ebp
  401da2:	inc    ebp
  401da3:	cmp    eax,0xfe501528
  401da8:	lods   eax,DWORD PTR ds:[esi]
  401da9:	xchg   DWORD PTR [esi],ecx
  401dab:	pop    ebx
  401dac:	int    0x6a
  401dae:	sbb    eax,0x2709e9ec
  401db3:	int    0x1e
  401db5:	mov    ch,0xa1
  401db7:	xchg   ebx,eax
  401db8:	jns    0x401e07
  401dba:	jnp    0x401d6f
  401dbc:	mov    BYTE PTR [esi+0x2d],bl
  401dbf:	lods   al,BYTE PTR ds:[esi]
  401dc0:	mov    eax,0xfa48224d
  401dc5:	cmp    eax,DWORD PTR [ebp-0x32]
  401dc8:	cdq    
  401dc9:	jne    0x401d91
  401dcb:	mov    al,ds:0x92f48453
  401dd0:	jae    0x401d74
  401dd2:	sti    
  401dd3:	add    al,0x4e
  401dd5:	repnz push cs
  401dd7:	add    BYTE PTR [edx],ch
  401dd9:	push   es
  401dda:	lea    eax,[ebp+0x7c]
  401ddd:	iret   
  401dde:	cmp    BYTE PTR [edx+0x3d1d9cb5],cl
  401de4:	or     BYTE PTR [edx],dl
  401de6:	dec    ebx
  401de7:	loope  0x401df7
  401de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dea:	retf   0x4a6b
  401ded:	and    DWORD PTR [esi+eiz*8-0x63],edi
  401df1:	outs   dx,BYTE PTR ds:[esi]
  401df2:	push   ebp
  401df3:	or     DWORD PTR [ebx],esp
  401df5:	jbe    0x401ddf
  401df7:	cmp    BYTE PTR [edi-0x5b],bl
  401dfa:	cmp    eax,0x4eab07fa
  401dff:	scas   al,BYTE PTR es:[edi]
  401e00:	ror    DWORD PTR [ebx],1
  401e02:	ret    
  401e03:	stos   BYTE PTR es:[edi],al
  401e04:	retf   
  401e05:	mov    al,0xda
  401e07:	imul   ecx,eax,0x6e
  401e0a:	dec    eax
  401e0b:	lods   eax,DWORD PTR ds:[esi]
  401e0c:	xchg   esp,eax
  401e0d:	mov    dl,bl
  401e0f:	cmp    BYTE PTR [ecx+0x118b7b02],0x52
  401e16:	sub    BYTE PTR [ecx-0x1624d0e6],al
  401e1c:	cli    
  401e1d:	ror    BYTE PTR [edx-0x15],1
  401e20:	add    al,0xdf
  401e22:	shr    BYTE PTR [ebp+0x2e12f348],0x21
  401e29:	add    ebp,DWORD PTR [eax]
  401e2b:	mov    ds,WORD PTR [eax+0x454b2651]
  401e31:	xchg   ecx,eax
  401e32:	push   edx
  401e33:	leave  
  401e34:	push   0xffffffad
  401e36:	xor    BYTE PTR [ebx],ah
  401e38:	sahf   
  401e39:	lods   al,BYTE PTR ds:[esi]
  401e3a:	dec    esi
  401e3b:	cmp    esp,DWORD PTR [ecx]
  401e3d:	(bad)  
  401e3f:	cmp    BYTE PTR [ecx-0x280cd004],bh
  401e45:	int    0xfb
  401e47:	jle    0x401e17
  401e49:	test   ebp,0xe5682af1
  401e4f:	inc    esi
  401e50:	cmp    eax,0x9d8629cc
  401e55:	mov    cl,0x8
  401e57:	xchg   DWORD PTR [edi+0x78937dc4],edx
  401e5d:	cwde   
  401e5e:	out    dx,eax
  401e5f:	inc    eax
  401e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e61:	pop    esi
  401e62:	pop    edi
  401e63:	mov    edx,0xa31cada8
  401e68:	mov    esi,0xaef099ca
  401e6d:	gs cmp cl,cl
  401e70:	add    esp,edi
  401e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e73:	ja     0x401e19
  401e75:	outs   dx,BYTE PTR ds:[esi]
  401e76:	jo     0x401e6d
  401e78:	in     al,0x6
  401e7a:	xchg   BYTE PTR [ebx],bh
  401e7c:	sti    
  401e7d:	mov    eax,0xb39b0d27
  401e82:	sub    edi,DWORD PTR [edi]
  401e84:	and    al,0xdb
  401e86:	xor    al,0x55
  401e88:	mov    al,0x84
  401e8a:	mov    es,esp
  401e8c:	pushf  
  401e8d:	mov    ch,0xf4
  401e8f:	pop    edx
  401e90:	sub    al,0xa0
  401e92:	xor    al,0x1b
  401e94:	xchg   ecx,eax
  401e95:	cmp    dl,ch
  401e97:	sub    bl,cl
  401e99:	in     eax,0x1a
  401e9b:	jnp    0x401ed6
  401e9d:	dec    ebx
  401e9e:	ds cmp eax,0xdf7170f
  401ea4:	jnp    0x401e89
  401ea6:	stos   BYTE PTR es:[edi],al
  401ea7:	ins    DWORD PTR es:[edi],dx
  401ea8:	imul   DWORD PTR [edx]
  401eaa:	sar    BYTE PTR [edi+0x29ebdeab],cl
  401eb0:	shl    DWORD PTR [ebx+0x1e80beb2],cl
  401eb6:	xor    edi,DWORD PTR [ebx+0x4d]
  401eb9:	mov    dl,0xeb
  401ebb:	js     0x401ecc
  401ebd:	xchg   BYTE PTR [ebp+0xd],ah
  401ec0:	sub    eax,edx
  401ec2:	and    DWORD PTR ds:0x676ac578,ebx
  401ec8:	out    0x64,al
  401eca:	out    dx,al
  401ecb:	mov    esi,0x2319a3f
  401ed0:	push   0xffffff98
  401ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed3:	ja     0x401e97
  401ed5:	fwait
  401ed6:	(bad)  
  401ed7:	push   esi
  401ed8:	pop    es
  401ed9:	xchg   ebx,eax
  401eda:	gs push esi
  401edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401edd:	mov    eax,0x44f9b25
  401ee2:	lock xor edi,DWORD PTR [esi-0x26]
  401ee6:	sub    al,BYTE PTR [ebp-0x37835cdd]
  401eec:	dec    edi
  401eed:	fdiv   DWORD PTR ds:0x70aa4cc9
  401ef3:	lods   al,BYTE PTR ds:[esi]
  401ef4:	sub    BYTE PTR [edx+0x4b],dh
  401ef7:	aaa    
  401ef8:	(bad)  
  401ef9:	mov    DWORD PTR [edi],eax
  401efb:	jmp    0xb972:0xc1463159
  401f02:	mov    ecx,0xdbeb7a9b
  401f07:	mov    eax,ds:0xb0876f0d
  401f0c:	dec    edi
  401f0d:	sbb    al,0x89
  401f0f:	in     eax,dx
  401f10:	ja     0x401f57
  401f12:	mov    ebx,0x3e394045
  401f17:	push   es
  401f18:	hlt    
  401f19:	jbe    0x401f60
  401f1b:	or     al,0xc7
  401f1d:	aad    0x60
  401f1f:	popf   
  401f20:	stos   BYTE PTR es:[edi],al
  401f21:	xor    edx,DWORD PTR [edi]
  401f23:	out    0x80,al
  401f25:	je     0x401f96
  401f27:	(bad)  
  401f28:	mov    ecx,0x73245e60
  401f2d:	xchg   ebp,eax
  401f2e:	fsubp  st(1),st
  401f30:	mov    eax,0x509430dc
  401f35:	test   BYTE PTR [esi],0xea
  401f38:	ret    
  401f39:	mov    bl,0xe6
  401f3b:	mov    eax,0x704a8311
  401f40:	mov    esp,0x7de84ef6
  401f45:	xor    ch,ah
  401f47:	cwde   
  401f48:	imul   esi,DWORD PTR [eax],0x7cf8adb0
  401f4e:	outs   dx,BYTE PTR ds:[esi]
  401f4f:	mov    bh,0x7e
  401f51:	xor    BYTE PTR [ebp+edx*2+0x3d4cce80],bl
  401f58:	sub    al,0xd7
  401f5a:	stos   DWORD PTR es:[edi],eax
  401f5b:	loope  0x401f31
  401f5d:	jg     0x401f51
  401f5f:	ret    0x4191
  401f62:	inc    edi
  401f63:	add    DWORD PTR [ecx],esp
  401f65:	(bad)  
  401f66:	sbb    BYTE PTR [ebp-0x26],bh
  401f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f6a:	xlat   BYTE PTR ds:[ebx]
  401f6b:	lahf   
  401f6c:	imul   ecx,DWORD PTR [esi+esi*2-0x54],0x5d
  401f71:	adc    ah,BYTE PTR [ecx+0x8]
  401f74:	jl     0x401f43
  401f76:	mov    edi,0x9f99b34d
  401f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f7c:	mov    ecx,fs
  401f7e:	sub    bh,BYTE PTR [edi]
  401f80:	pop    ebp
  401f81:	into   
  401f82:	cmc    
  401f83:	ins    DWORD PTR es:[edi],dx
  401f84:	pop    edx
  401f85:	fisttp DWORD PTR [edi-0x35]
  401f88:	stc    
  401f89:	and    BYTE PTR [eax-0x2cae4fbd],ch
  401f8f:	xor    dl,BYTE PTR [edi]
  401f91:	adc    bl,BYTE PTR [ecx+0x7e]
  401f94:	es out 0x4d,al
  401f97:	jno    0x401f6f
  401f99:	mov    ah,0x19
  401f9b:	xor    bl,al
  401f9d:	cmp    BYTE PTR [esi],bh
  401f9f:	call   FWORD PTR [esi-0x70182f8]
  401fa5:	add    DWORD PTR [edi+edx*4-0x708eef3d],edi
  401fac:	cld    
  401fad:	(bad)  
  401fae:	loopne 0x401f44
  401fb0:	pop    esp
  401fb1:	push   edx
  401fb2:	scas   eax,DWORD PTR es:[edi]
  401fb3:	test   eax,0xbeffa3c4
  401fb8:	fwait
  401fb9:	cmp    al,0x8
  401fbb:	enter  0xd299,0x90
  401fbf:	in     eax,dx
  401fc0:	mov    DWORD PTR [esi+0x72],esp
  401fc3:	call   0x180d:0x52ba9388
  401fca:	test   BYTE PTR [ebx-0x4507c3f2],0x4f
  401fd1:	adc    al,0xe4
  401fd3:	stos   DWORD PTR es:[edi],eax
  401fd4:	mov    edi,0xaa97ddf9
  401fd9:	push   ecx
  401fda:	std    
  401fdb:	pop    ebp
  401fdc:	js     0x401fc4
  401fde:	call   0x6b433aff
  401fe3:	xchg   ebp,eax
  401fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fe5:	jg     0x402045
  401fe7:	sub    dh,ch
  401fe9:	jbe    0x401f9b
  401feb:	sbb    eax,0xb4b35c4b
  401ff0:	mov    ebp,0xf4502297
  401ff5:	ins    DWORD PTR es:[edi],dx
  401ff6:	das    
  401ff7:	mov    ch,ch
  401ff9:	(bad)  
  401ffa:	jge    0x401fee
  401ffc:	dec    ebp
  401ffd:	or     al,0xfd
  401fff:	div    DWORD PTR [edx+0x444f0f4b]
  402005:	add    BYTE PTR [esi+0x4670f26e],ah
  40200b:	xchg   esp,eax
  40200c:	xchg   esi,eax
  40200d:	inc    esp
  40200e:	adc    eax,0x99cce755
  402013:	jle    0x401fa9
  402015:	ret    
  402016:	loope  0x401ff4
  402018:	push   ebp
  402019:	not    DWORD PTR [ebx+0x4f]
  40201c:	jle    0x401fc6
  40201e:	lea    eax,[ebx]
  402020:	gs retf 0x8fbb
  402024:	(bad)  
  402025:	pop    ecx
  402026:	inc    ebp
  402027:	and    ebx,DWORD PTR [ecx]
  402029:	fnsave [ecx+edi*4]
  40202c:	push   edx
  40202d:	stc    
  40202e:	repnz jecxz 0x401fb2
  402031:	cmp    al,0xb0
  402033:	add    BYTE PTR [ebx],dl
  402035:	inc    eax
  402036:	scas   eax,DWORD PTR es:[edi]
  402037:	dec    ecx
  402038:	pop    eax
  402039:	mov    bh,0x4f
  40203b:	scas   eax,DWORD PTR es:[edi]
  40203c:	jmp    0x402028
  40203e:	mov    fs,WORD PTR [ebp-0x74]
  402041:	loope  0x401ff8
  402043:	pushf  
  402044:	es dec ecx
  402046:	jne    0x402015
  402048:	imul   esi,esi,0xd89b9d18
  40204e:	std    
  40204f:	push   edi
  402050:	icebp  
  402051:	or     ebp,DWORD PTR [eax-0xb24d073]
  402057:	push   eax
  402058:	out    dx,eax
  402059:	shl    BYTE PTR [ebp+edx*1-0x77],1
  40205d:	mov    ch,0x21
  40205f:	mov    ebp,0xb2619cb5
  402064:	push   ds
  402065:	xor    bl,BYTE PTR [esi]
  402067:	dec    esp
  402068:	std    
  402069:	stc    
  40206a:	lods   eax,DWORD PTR ds:[si]
  40206c:	jl     0x40206e
  40206e:	push   ecx
  40206f:	test   eax,0x6f0aa70e
  402074:	popf   
  402075:	or     eax,0xbebcd756
  40207a:	enter  0x5bab,0x52
  40207e:	ret    0x3e99
  402081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402082:	mov    cl,0xe7
  402084:	push   ebx
  402085:	xor    DWORD PTR [ecx+0x25],ebp
  402088:	shl    BYTE PTR [ebx+0x6f8e1499],1
  40208e:	ins    DWORD PTR es:[edi],dx
  40208f:	push   es
  402090:	iret   
  402091:	mov    ebp,0x981a0151
  402096:	arpl   sp,si
  402098:	sbb    ebx,0x11
  40209b:	xchg   ebx,eax
  40209c:	int3   
  40209d:	cmc    
  40209e:	mov    ecx,0xe84b1147
  4020a3:	add    eax,0x2cacf6d3
  4020a8:	add    DWORD PTR [edx+0x5041f11b],esi
  4020ae:	jnp    0x4020a4
  4020b0:	scas   eax,DWORD PTR es:[edi]
  4020b1:	add    DWORD PTR [ebp+eax*1-0x8],0x2f13c318
  4020b9:	cmp    BYTE PTR [ebp-0x14c292f2],0x1f
  4020c0:	push   ebx
  4020c1:	test   eax,0x9c34a3bc
  4020c6:	hlt    
  4020c7:	ror    DWORD PTR [ebp+0x6b],0xf0
  4020cb:	or     eax,0x7ee7cd13
  4020d0:	pop    esi
  4020d1:	dec    eax
  4020d2:	mov    dh,0x66
  4020d4:	jg     0x4020a2
  4020d6:	mov    edi,0xabcae41d
  4020db:	add    eax,0x4eac661f
  4020e0:	in     eax,0x2b
  4020e2:	pushf  
  4020e3:	pop    ss
  4020e4:	cmp    DWORD PTR [esi+0x42a80ad1],ebp
  4020ea:	xchg   ch,ah
  4020ec:	dec    BYTE PTR [esi-0x7c7bf393]
  4020f2:	lods   eax,DWORD PTR ds:[esi]
  4020f3:	fs mov al,0x48
  4020f6:	scas   eax,DWORD PTR es:[edi]
  4020f7:	and    BYTE PTR [ebp+0x25637bdf],bh
  4020fd:	lock or esp,edi
  402100:	and    eax,eax
  402102:	mov    eax,ds:0xd8f126e9
  402107:	aam    0x84
  402109:	stc    
  40210a:	pop    ss
  40210b:	add    eax,DWORD PTR [ebx+0x6d]
  40210e:	test   dl,al
  402110:	jge    0x402160
  402112:	pop    ebp
  402113:	cwde   
  402114:	and    DWORD PTR [edi+0x611ba5e3],ebx
  40211a:	mov    esp,0x46f1fc0f
  40211f:	not    DWORD PTR [edx+0x1e]
  402122:	mov    dh,0x4f
  402124:	dec    esi
  402125:	sub    ebp,DWORD PTR [ecx+0x32]
  402128:	push   ebx
  402129:	jne    0x4020d1
  40212b:	out    dx,eax
  40212c:	push   esp
  40212d:	(bad)  
  40212f:	xchg   esp,eax
  402130:	xchg   ebp,eax
  402131:	jae    0x4020fd
  402133:	icebp  
  402134:	inc    edx
  402135:	jns    0x40212f
  402137:	pop    edx
  402138:	loopne 0x40218e
  40213a:	loopne 0x4020d6
  40213c:	xor    eax,0xf35fe28a
  402141:	fcomip st,st(3)
  402143:	jne    0x402198
  402145:	aad    0x88
  402147:	mov    BYTE PTR [esi+0x3],al
  40214a:	push   0xffffffd5
  40214c:	out    dx,al
  40214d:	data16 jbe 0x40211a
  402150:	out    0x5b,al
  402152:	lea    ebp,[eax+ebp*8-0x3e]
  402156:	adc    eax,eax
  402158:	xchg   edx,eax
  402159:	retf   
  40215a:	sar    BYTE PTR gs:[eax],cl
  40215d:	jne    0x402180
  40215f:	cli    
  402160:	popf   
  402161:	adc    DWORD PTR [ebp+edi*2+0x61],edx
  402165:	adc    al,0xb9
  402167:	and    dh,BYTE PTR [esi]
  402169:	or     cl,BYTE PTR [ecx+0x5634cf0d]
  40216f:	inc    ecx
  402170:	pop    esp
  402171:	and    ecx,ebx
  402173:	mov    ecx,0xa252210f
  402178:	ins    DWORD PTR es:[edi],dx
  402179:	xor    ebx,esi
  40217b:	mov    ch,0x34
  40217d:	add    al,cl
  40217f:	sbb    eax,0xd00072ed
  402184:	scas   al,BYTE PTR es:[edi]
  402185:	scas   eax,DWORD PTR es:[edi]
  402186:	stos   DWORD PTR es:[edi],eax
  402187:	or     eax,0xeff8f471
  40218c:	sub    ebp,DWORD PTR ds:0x505b866d
  402192:	inc    ecx
  402193:	mov    ecx,0xd97394f1
  402198:	loopne 0x4021b3
  40219a:	dec    edi
  40219b:	jno    0x402173
  40219d:	rcl    DWORD PTR ds:0xe39fa5a,cl
  4021a3:	or     ecx,DWORD PTR [edx+0x29]
  4021a6:	es push eax
  4021a8:	jp     0x40212a
  4021aa:	icebp  
  4021ab:	and    ah,ch
  4021ad:	sbb    eax,0xa6c8c805
  4021b2:	(bad)  
  4021b3:	xlat   BYTE PTR ds:[ebx]
  4021b4:	mov    DWORD PTR [ebx+eax*1],eax
  4021b7:	mov    edi,0xb6696f21
  4021bc:	ret    
  4021bd:	(bad)  
  4021be:	rol    BYTE PTR [edx+edi*1-0x5d],cl
  4021c2:	int    0xf8
  4021c4:	mov    ebx,0x2ec57e27
  4021c9:	add    al,0xcd
  4021cb:	inc    esp
  4021cc:	xor    al,0xf
  4021ce:	jmp    0x4021c9
  4021d0:	xchg   ecx,eax
  4021d1:	out    dx,eax
  4021d2:	and    al,0x31
  4021d4:	mov    WORD PTR [eax],ss
  4021d6:	xchg   esi,eax
  4021d7:	les    eax,FWORD PTR [edi-0x180b2723]
  4021dd:	inc    ebp
  4021de:	sbb    dh,al
  4021e0:	lds    ebp,FWORD PTR [ebx-0x57]
  4021e3:	in     eax,0x25
  4021e5:	add    ah,ah
  4021e7:	mov    al,ds:0xd1fb0c20
  4021ec:	cwde   
  4021ed:	or     al,0x65
  4021ef:	pop    ebx
  4021f0:	xchg   ebp,eax
  4021f1:	ficom  DWORD PTR [edi-0x519cd006]
  4021f7:	jb     0x402262
  4021f9:	pop    ss
  4021fa:	ins    DWORD PTR es:[edi],dx
  4021fb:	dec    ebp
  4021fc:	xchg   esp,eax
  4021fd:	out    dx,eax
  4021fe:	jecxz  0x402235
  402200:	jmp    0xea1f93e1
  402205:	jl     0x402263
  402207:	adc    eax,0x75b7168a
  40220c:	add    BYTE PTR [ecx-0x66],cl
  40220f:	neg    DWORD PTR [edi+0x6474ef0b]
  402215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402216:	mov    al,ds:0x9a5dffda
  40221b:	fnstsw WORD PTR [ebp+0x4d8082e7]
  402221:	xor    eax,0xe7d4999c
  402226:	rol    edi,0x6
  402229:	ficom  WORD PTR [ebx-0x24]
  40222c:	push   0xe1b08165
  402231:	mov    bl,0xa3
  402233:	dec    eax
  402234:	inc    edx
  402235:	xchg   esp,eax
  402236:	inc    edi
  402237:	push   cs
  402238:	xchg   esp,eax
  402239:	xor    ah,BYTE PTR [ebp-0x60]
  40223c:	xchg   ecx,eax
  40223d:	mov    bh,cl
  40223f:	int3   
  402240:	xor    BYTE PTR [edx],ah
  402242:	mov    bh,0xa3
  402244:	xchg   DWORD PTR [edx+ecx*1-0x7d46af10],esp
  40224b:	test   al,0x32
  40224d:	and    DWORD PTR [edx+0x5e],eax
  402250:	push   ss
  402251:	push   ecx
  402252:	out    0x77,al
  402254:	aaa    
  402255:	xchg   ebx,eax
  402256:	mov    edi,0xaabbc967
  40225b:	pop    ds
  40225c:	ret    
  40225d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40225e:	jns    0x402210
  402260:	scas   eax,DWORD PTR es:[edi]
  402261:	int3   
  402262:	jno    0x4022ad
  402264:	push   es
  402265:	les    ebx,FWORD PTR [ebp-0x5cd9fb84]
  40226b:	pop    ebp
  40226c:	lock or edi,ecx
  40226f:	ja     0x402237
  402271:	mov    eax,ds:0x51aff2b0
  402276:	loopne 0x4022a7
  402278:	xor    al,0x11
  40227a:	and    al,dl
  40227c:	sbb    edi,DWORD PTR [edx+0x2c356ee2]
  402282:	push   edi
  402283:	jno    0x4022d2
  402285:	fsub   DWORD PTR [esi]
  402287:	add    DWORD PTR [edx],edi
  402289:	rol    DWORD PTR [ecx],0xa1
  40228c:	int    0x67
  40228e:	popf   
  40228f:	jno    0x402292
  402291:	(bad)  [ebx-0x77fb1a85]
  402297:	mov    eax,0xcbb4a99d
  40229c:	test   BYTE PTR [edi-0x9],dh
  40229f:	pop    ss
  4022a0:	test   DWORD PTR [ecx],ecx
  4022a2:	scas   al,BYTE PTR es:[edi]
  4022a3:	mov    ebx,0x19718821
  4022a8:	push   esp
  4022a9:	push   ebp
  4022aa:	jae    0x40222e
  4022ac:	jg     0x402315
  4022ae:	dec    ebp
  4022af:	push   eax
  4022b0:	dec    esp
  4022b1:	pop    ebp
  4022b2:	scas   eax,DWORD PTR es:[edi]
  4022b3:	pop    ebp
  4022b4:	pop    DWORD PTR [ebx]
  4022b6:	fyl2xp1 
  4022b8:	xchg   ecx,eax
  4022b9:	add    BYTE PTR [ebp+0x3b94b37b],0xd1
  4022c0:	pop    edi
  4022c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022c2:	test   al,0xa3
  4022c4:	ja     0x4022d6
  4022c6:	cwde   
  4022c7:	lock leave 
  4022c9:	out    0x61,eax
  4022cb:	xchg   ebx,eax
  4022cc:	aad    0x50
  4022ce:	jne    0x4022e1
  4022d0:	adc    bh,BYTE PTR [eax-0x55]
  4022d3:	push   es
  4022d4:	loopne 0x40230d
  4022d6:	mov    al,0x81
  4022d8:	or     BYTE PTR [esi+ebp*8],bl
  4022db:	sbb    eax,0x544d1a59
  4022e0:	ds pop es
  4022e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e3:	and    eax,0xe79a16b8
  4022e8:	dec    esi
  4022e9:	adc    DWORD PTR ds:0x663c58e6,esp
  4022ef:	icebp  
  4022f0:	fisttp DWORD PTR [edi-0xd8f4954]
  4022f6:	js     0x402336
  4022f8:	repz icebp 
  4022fa:	mov    BYTE PTR [eax],0x95
  4022fd:	xor    eax,0x7629728d
  402302:	neg    BYTE PTR ds:0x3d8d1ad2
  402308:	cmp    BYTE PTR [ebx-0x3],ch
  40230b:	mov    dl,0xad
  40230e:	fldl2e 
  402310:	mov    esi,0x7b5ab75d
  402315:	lea    ecx,[edx+eiz*4]
  402318:	add    esp,DWORD PTR [ebp+0x14]
  40231b:	push   esp
  40231c:	ja     0x40237f
  40231e:	mov    ecx,0x538e6ca5
  402323:	enter  0x16e5,0x87
  402327:	inc    ebp
  402328:	xchg   ecx,eax
  402329:	mov    bh,0x3e
  40232b:	adc    DWORD PTR [ebp*1-0x1952afd],0x6a
  402333:	jne    0x402370
  402335:	inc    cx
  402337:	test   BYTE PTR [esi+eiz*2],al
  40233a:	cmp    eax,0x84639906
  40233f:	lods   eax,DWORD PTR ds:[esi]
  402340:	cld    
  402341:	into   
  402342:	push   edi
  402343:	jmp    0x4022da
  402345:	add    DWORD PTR [ebp+0x65f91bf8],edx
  40234b:	dec    edi
  40234c:	mov    DWORD PTR [edx+0x472b85ea],ecx
  402352:	jmp    0x402392
  402354:	mov    al,ds:0xf750bd
  402359:	sbb    eax,0x9a8b6f2e
  40235e:	aas    
  40235f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402360:	shr    BYTE PTR [eax],1
  402362:	xor    al,0x2d
  402364:	int    0xcc
  402366:	test   DWORD PTR [ebp-0x1f93433f],0xf98a506
  402370:	fs ins BYTE PTR es:[edi],dx
  402372:	ins    BYTE PTR es:[edi],dx
  402373:	pop    ds
  402374:	lahf   
  402375:	sbb    BYTE PTR [ebx],ch
  402377:	outs   dx,BYTE PTR ds:[esi]
  402378:	inc    esp
  402379:	jmp    FWORD PTR [edi+ebx*8]
  40237c:	imul   esi,eax,0x2892d70a
  402382:	ret    0xbba4
  402385:	mov    al,ds:0xb3f33926
  40238a:	cld    
  40238b:	jno    0x4023c9
  40238d:	push   edx
  40238e:	in     al,dx
  40238f:	lock ins BYTE PTR es:[edi],dx
  402391:	mov    bl,0x6b
  402393:	aad    0x96
  402395:	cmc    
  402396:	repnz sub eax,0x332d9afb
  40239c:	jbe    0x4023bd
  40239e:	lahf   
  40239f:	or     eax,0xfe5b7c9d
  4023a4:	fsubr  QWORD PTR [edx+esi*4-0xc7b560c]
  4023ab:	mov    esi,0xf278b1a9
  4023b0:	xor    al,0xae
  4023b2:	out    dx,eax
  4023b3:	iret   
  4023b4:	test   BYTE PTR [edi-0x6e],0x1
  4023b8:	outs   dx,DWORD PTR ds:[esi]
  4023b9:	inc    eax
  4023ba:	es scas eax,DWORD PTR es:[edi]
  4023bc:	rcl    bl,0xcb
  4023bf:	sar    BYTE PTR [edx-0x8],1
  4023c2:	hlt    
  4023c3:	or     BYTE PTR ds:0xc276c742,bl
  4023c9:	es push esi
  4023cb:	outs   dx,DWORD PTR ds:[esi]
  4023cc:	mov    dl,0x89
  4023ce:	xchg   ax,ax
  4023d0:	cli    
  4023d1:	lods   eax,DWORD PTR ds:[esi]
  4023d2:	and    BYTE PTR [ebx-0x5c],0x71
  4023d6:	(bad)  
  4023d7:	fsub   st,st(7)
  4023d9:	lods   eax,DWORD PTR ds:[esi]
  4023da:	add    DWORD PTR [ebp+0x76],0xffffffb1
  4023de:	push   eax
  4023df:	sub    al,0x61
  4023e1:	xor    cl,ah
  4023e3:	int    0x55
  4023e5:	in     al,dx
  4023e6:	popf   
  4023e7:	add    al,0xca
  4023e9:	or     al,0x1f
  4023eb:	fs mov ah,0xb8
  4023ee:	sbb    eax,0x2ff1b1e8
  4023f3:	pop    es
  4023f4:	dec    eax
  4023f5:	jmp    0xdab2:0x6f07c9f0
  4023fc:	pushf  
  4023fd:	mov    gs,WORD PTR [ebx+0x7e469df4]
  402403:	sub    eax,esi
  402405:	or     eax,0x9249e94c
  40240a:	js     0x402406
  40240c:	mov    bh,0x96
  40240e:	mov    eax,ds:0x52e25abd
  402413:	lea    esp,[ebx+0x3162f8fb]
  402419:	call   FWORD PTR ds:0xd3686033
  40241f:	mov    eax,DWORD PTR [eax-0xc]
  402422:	add    ch,BYTE PTR [eax+0x15cdcf3b]
  402428:	or     ah,BYTE PTR [esi-0x42a30c5b]
  40242e:	aas    
  40242f:	push   edi
  402430:	xor    eax,0x81095233
  402435:	inc    edi
  402436:	pop    eax
  402437:	in     al,dx
  402438:	sub    ecx,DWORD PTR [edx]
  40243a:	jbe    0x40240b
  40243c:	dec    ebx
  40243d:	test   al,0xa2
  40243f:	add    ah,BYTE PTR [esi-0x7e5ded73]
  402445:	sbb    al,0xf7
  402447:	or     BYTE PTR [ebx],cl
  402449:	push   es
  40244a:	sbb    al,0xc7
  40244d:	ror    BYTE PTR [edi-0x7157f2c7],cl
  402453:	cld    
  402454:	xor    al,0x57
  402456:	sbb    al,BYTE PTR [ebp+ebp*1-0x44]
  40245a:	stos   BYTE PTR es:[edi],al
  40245b:	scas   eax,DWORD PTR es:[edi]
  40245c:	ja     0x4024d8
  40245e:	inc    esi
  40245f:	inc    esi
  402460:	daa    
  402461:	cmp    al,0xa4
  402463:	iret   
  402464:	js     0x4024b1
  402466:	ret    
  402467:	inc    ecx
  402468:	mov    esi,0xaf4fd10c
  40246d:	in     eax,0xf6
  40246f:	mov    eax,ebp
  402471:	mov    ebx,0x2d5a0145
  402476:	arpl   WORD PTR [edx-0x2e],bx
  402479:	(bad)  
  40247a:	test   DWORD PTR [ebx+0x7f98489a],0x27e9b5dc
  402484:	sub    BYTE PTR [ebx+0x22f02f3d],bl
  40248a:	clc    
  40248b:	inc    edx
  40248c:	and    dl,bh
  40248e:	adc    BYTE PTR [ebp-0x80],dh
  402491:	retf   
  402492:	sbb    BYTE PTR [ebx+0x689e753],ah
  402498:	or     esp,esp
  40249a:	or     DWORD PTR [esi-0x6a],esp
  40249d:	rcl    DWORD PTR [edi+0x43],cl
  4024a0:	loopne 0x4024a4
  4024a2:	dec    esi
  4024a3:	xor    bh,BYTE PTR [eax+0x56]
  4024a6:	jnp    0x40247e
  4024a8:	add    esi,DWORD PTR [ecx-0x56925e41]
  4024ae:	pushf  
  4024af:	sbb    eax,0x9317efd3
  4024b4:	aam    0x7d
  4024b6:	push   esp
  4024b7:	xchg   esi,eax
  4024b8:	sub    eax,0x1b8d388b
  4024bd:	pop    ebx
  4024be:	jmp    0x8a0a:0x4fdd006b
  4024c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c6:	inc    ebx
  4024c7:	test   BYTE PTR [edi+0x32],cl
  4024ca:	and    esi,esi
  4024cc:	ficom  WORD PTR [edi+eiz*4]
  4024cf:	adc    esi,DWORD PTR [eax-0x4]
  4024d2:	stc    
  4024d3:	mov    ebp,0x4e33234c
  4024d8:	and    ecx,DWORD PTR [edx-0x5e3168ed]
  4024de:	icebp  
  4024df:	rcr    DWORD PTR [eax+edi*1],cl
  4024e2:	adc    eax,0xbda54e39
  4024e7:	leave  
  4024e8:	hlt    
  4024e9:	jnp    0x4024d2
  4024eb:	mov    al,0x28
  4024ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024ee:	adc    al,0xff
  4024f0:	scas   eax,DWORD PTR es:[edi]
  4024f1:	mov    ds:0x721c9e4f,al
  4024f6:	int3   
  4024f7:	jl     0x402536
  4024f9:	dec    BYTE PTR [eax+0x7a3f6aee]
  4024ff:	lock in al,0x5c
  402502:	ins    BYTE PTR es:[edi],dx
  402503:	mov    ecx,?
  402505:	rcl    BYTE PTR [esi],0x53
  402508:	fisub  DWORD PTR [edx]
  40250a:	in     al,dx
  40250b:	shr    edx,0x73
  40250e:	or     ebx,DWORD PTR [ebp-0x13]
  402511:	xor    dl,BYTE PTR [ebx-0x57]
  402514:	cmp    ebx,eax
  402516:	adc    al,BYTE PTR [edi+ebp*2+0x49]
  40251a:	lods   al,BYTE PTR ds:[esi]
  40251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40251c:	call   0xf4f04658
  402521:	mov    DWORD PTR [edi-0x129aaf43],0xce1c448c
  40252b:	test   eax,0x62232aad
  402530:	popa   
  402531:	clc    
  402532:	jmp    0x402599
  402534:	test   al,0x1a
  402536:	lock outs dx,BYTE PTR ds:[esi]
  402538:	ja     0x402517
  40253a:	fld    QWORD PTR ds:0x97eadf67
  402540:	or     edi,DWORD PTR [eax+eax*8-0x69ad365]
  402547:	test   BYTE PTR [edx],ch
  402549:	dec    esi
  40254a:	popf   
  40254b:	dec    eax
  40254c:	mov    bh,0xfa
  40254e:	jp     0x402577
  402550:	adc    esp,DWORD PTR ds:0x5388c9bf
  402556:	pop    ecx
  402557:	or     BYTE PTR [esi+0x55],dl
  40255a:	pop    ebp
  40255b:	ret    
  40255c:	push   ecx
  40255d:	mov    BYTE PTR [ebp-0x49],dh
  402560:	sub    ebx,edi
  402562:	sbb    eax,esi
  402564:	dec    eax
  402565:	add    BYTE PTR [edi],ch
  402567:	xor    DWORD PTR [edi-0x6514a8fe],esp
  40256d:	lds    esi,FWORD PTR [edx+esi*8-0x4b]
  402571:	adc    ecx,eax
  402573:	mov    dl,0xe6
  402575:	ret    0x4306
  402578:	mov    ebx,ss
  40257a:	push   0xffffffd0
  40257c:	adc    ebp,DWORD PTR [edx-0x26]
  40257f:	pop    eax
  402580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402581:	retf   
  402582:	jns    0x402530
  402584:	aaa    
  402585:	punpckhbw mm2,QWORD PTR [edx+0x20fda780]
  40258c:	and    BYTE PTR [esi-0x7eda634b],0x2d
  402593:	xlat   BYTE PTR ds:[ebx]
  402594:	bound  edi,QWORD PTR [esi*8-0x4403ff9]
  40259b:	add    bh,BYTE PTR [ecx-0x68]
  40259e:	inc    esi
  40259f:	jno    0x4025ed
  4025a1:	push   0x2a
  4025a3:	test   eax,0xf9cd3f91
  4025a8:	mov    dh,0x7a
  4025aa:	jle    0x4025ca
  4025ac:	addr16 push ss
  4025ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025af:	sbb    ebp,ebp
  4025b1:	inc    esi
  4025b2:	mov    edx,0xf81f8150
  4025b7:	xlat   BYTE PTR ds:[ebx]
  4025b8:	fst    DWORD PTR ds:0xe46fda7c
  4025be:	(bad)  
  4025bf:	out    dx,eax
  4025c0:	mov    ah,0xf1
  4025c2:	loope  0x402563
  4025c4:	and    BYTE PTR [ecx+0x19],al
  4025c7:	(bad)  
  4025c8:	sub    al,0x63
  4025ca:	iret   
  4025cb:	sub    BYTE PTR [edx],ch
  4025cd:	xchg   ecx,eax
  4025ce:	fmul   DWORD PTR [eax]
  4025d0:	rcr    BYTE PTR [eax+eax*1-0x69d4954f],0xa2
  4025d8:	scas   al,BYTE PTR es:[edi]
  4025d9:	or     bl,bh
  4025db:	sbb    BYTE PTR [edi],dl
  4025dd:	xor    cl,BYTE PTR [esi]
  4025df:	aam    0x2d
  4025e1:	dec    ebx
  4025e2:	and    DWORD PTR [ebx],0x6b0bc740
  4025e8:	mov    ecx,0x2d0b5282
  4025ed:	ds mov esi,0x8b5191df
  4025f3:	or     eax,0x24faeab8
  4025f8:	jbe    0x402637
  4025fa:	xor    BYTE PTR [esi-0x33273c0a],bl
  402600:	popf   
  402601:	add    cl,dh
  402603:	jmp    0x402668
  402605:	xor    al,0x3f
  402607:	dec    eax
  402608:	mov    DWORD PTR [edx+eiz*8+0x1b],0xa4530a30
  402610:	sub    DWORD PTR [ebx],esp
  402612:	in     eax,0x1
  402614:	(bad)  
  402616:	outs   dx,DWORD PTR ds:[esi]
  402617:	leave  
  402618:	enter  0xc027,0x42
  40261c:	sbb    al,0x1f
  40261e:	dec    edx
  40261f:	jmp    0x940c:0x20acf565
  402626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402627:	xor    al,0xe3
  402629:	push   esp
  40262a:	outs   dx,DWORD PTR ds:[esi]
  40262b:	and    DWORD PTR [ebx+0x56cdba10],0x7429b073
  402635:	jae    0x4026a7
  402637:	xchg   esp,eax
  402638:	cld    
  402639:	mov    ds:0x75480a60,eax
  40263e:	nop
  40263f:	dec    esp
  402640:	fst    QWORD PTR [edi]
  402642:	inc    esi
  402643:	daa    
  402644:	jo     0x40260f
  402646:	mov    esp,0x117f843
  40264b:	sar    DWORD PTR [ebx+esi*8-0x78],0x18
  402650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402651:	cdq    
  402652:	scas   al,BYTE PTR es:[edi]
  402653:	mov    dl,0x67
  402655:	pop    esi
  402656:	adc    DWORD PTR [eax],0x15
  402659:	out    0xdd,eax
  40265b:	sar    DWORD PTR [esi-0x2b2c5428],0x8d
  402662:	mov    edx,0x625d0da9
  402667:	ss int3 
  402669:	outs   dx,DWORD PTR ds:[esi]
  40266a:	jle    0x402637
  40266c:	sbb    cl,BYTE PTR ds:0x42cc5d7d
  402672:	ret    
  402673:	push   cs
  402674:	arpl   cx,di
  402676:	lods   al,BYTE PTR ds:[esi]
  402677:	inc    edx
  402678:	(bad)  
  402679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40267a:	xor    BYTE PTR ds:0x442e53bc,bh
  402680:	add    DWORD PTR [ebx],0xffffff9d
  402683:	lea    ebx,[ebx-0x18]
  402686:	mov    BYTE PTR [edi+0x72a6eefc],bh
  40268c:	popf   
  40268d:	jmp    DWORD PTR [ecx]
  40268f:	ret    0xeafa
  402692:	push   esi
  402693:	in     al,dx
  402694:	sub    ah,BYTE PTR [edi-0x7769aca3]
  40269a:	xchg   ebp,eax
  40269b:	enter  0xff86,0xc2
  40269f:	xor    ah,BYTE PTR [eax]
  4026a1:	mov    eax,ds:0xd6e928db
  4026a6:	int3   
  4026a7:	mov    al,ds:0x65e22b0e
  4026ac:	ja     0x4026af
  4026ae:	pop    edx
  4026af:	mov    ds:0xd5c31835,eax
  4026b4:	push   ss
  4026b5:	sti    
  4026b6:	mov    bh,0x47
  4026b8:	mov    cl,0xb9
  4026ba:	cdq    
  4026bb:	sub    BYTE PTR [esi],bh
  4026bd:	cmp    DWORD PTR [ecx+0x7da4e0a9],0xd5fb0381
  4026c7:	fld    DWORD PTR [edx-0x63]
  4026ca:	shl    BYTE PTR [ebx],1
  4026cc:	sub    edi,ecx
  4026ce:	cld    
  4026cf:	sbb    DWORD PTR [edi+0x567e05a1],ebp
  4026d5:	addr16 dec edx
  4026d7:	scas   eax,DWORD PTR es:[edi]
  4026d8:	in     al,dx
  4026d9:	jae    0x40269f
  4026db:	jns    0x402737
  4026dd:	lods   al,BYTE PTR ds:[esi]
  4026de:	outs   dx,DWORD PTR ds:[esi]
  4026df:	cmp    eax,0xb6567db1
  4026e4:	mov    ebx,cs
  4026e6:	pop    es
  4026e7:	push   eax
  4026e8:	or     ecx,DWORD PTR [ecx]
  4026ea:	jae    0x402769
  4026ec:	sub    ch,dh
  4026ee:	xchg   ecx,esp
  4026f0:	pop    eax
  4026f1:	and    esp,DWORD PTR [ebx]
  4026f3:	jns    0x4026c1
  4026f5:	out    0x5b,al
  4026f7:	cmc    
  4026f8:	mov    ah,0x50
  4026fa:	and    al,0xfa
  4026fc:	in     eax,dx
  4026fd:	jl     0x4026e0
  4026ff:	or     BYTE PTR [esi],0x3a
  402702:	add    eax,0xeb93129d
  402707:	cmp    dl,BYTE PTR [esi]
  402709:	(bad)  
  40270a:	ja     0x402760
  40270c:	adc    BYTE PTR [edx-0xbb29029],0x6d
  402713:	aam    0x56
  402715:	test   DWORD PTR [ecx-0x4f3d1ecc],0xe98ff70f
  40271f:	sti    
  402720:	cmp    esp,DWORD PTR ss:[esp+ebx*4+0x27]
  402725:	jp     0x402741
  402727:	jmp    0xa11136c3
  40272c:	adc    eax,0xf2924ddd
  402731:	sub    BYTE PTR [ebp+0x7e236b84],ch
  402737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402738:	stc    
  402739:	push   0x44
  40273b:	mov    ecx,esi
  40273d:	push   0xffffffa6
  40273f:	retf   
  402740:	test   eax,0xec236f81
  402745:	scas   al,BYTE PTR es:[edi]
  402746:	jo     0x4026cd
  402748:	dec    edi
  402749:	repz cld 
  40274b:	mov    esi,0x8723c3ab
  402750:	fidiv  WORD PTR [edx]
  402752:	and    BYTE PTR [esp+ebx*1-0x46b5655d],dl
  402759:	scas   al,BYTE PTR es:[edi]
  40275a:	dec    eax
  40275b:	std    
  40275c:	push   0x4
  40275e:	lea    eax,[ecx-0x76]
  402761:	sar    DWORD PTR [edi+0x6f],cl
  402764:	jp     0x402775
  402766:	cmp    esi,eax
  402768:	mov    ecx,0xb0e54327
  40276d:	mov    dh,0x1e
  40276f:	xlat   BYTE PTR ds:[ebx]
  402770:	lahf   
  402771:	xor    ebp,eax
  402773:	je     0x402708
  402775:	pop    edx
  402776:	xchg   ebx,eax
  402777:	pop    es
  402778:	in     al,dx
  402779:	or     ecx,DWORD PTR [edi+0x69d2cb79]
  40277f:	sub    al,0x60
  402781:	ins    DWORD PTR es:[edi],dx
  402782:	loope  0x40278d
  402784:	push   0xffffffe2
  402786:	jmp    0x1a02:0x2a27030b
  40278d:	cmp    al,0xbc
  40278f:	or     al,0xd0
  402791:	sbb    edx,0xfffffff0
  402794:	call   0xc30a:0x22dbf2a6
  40279b:	aam    0x64
  40279d:	mov    al,BYTE PTR [edi+0x5c]
  4027a0:	push   0x74122b25
  4027a5:	sbb    al,0xf3
  4027a7:	xlat   BYTE PTR ds:[ebx]
  4027a8:	dec    esi
  4027a9:	jno    0x4027f2
  4027ab:	idiv   BYTE PTR [edx+0x6a1cd0af]
  4027b1:	adc    BYTE PTR [ecx],dh
  4027b3:	pop    edx
  4027b4:	out    0xb6,eax
  4027b6:	cld    
  4027b7:	sar    BYTE PTR [ebp+0x70],0xe3
  4027bb:	jg     0x402794
  4027bd:	mov    ds:0xe8d252df,eax
  4027c2:	dec    ebx
  4027c3:	hlt    
  4027c4:	stos   BYTE PTR es:[edi],al
  4027c5:	mov    ds:0xe2055091,eax
  4027ca:	inc    esp
  4027cb:	jmp    0xd222:0xeb904c7
  4027d2:	push   cs
  4027d3:	shl    DWORD PTR [eax+0x1243db97],cl
  4027d9:	pop    esp
  4027da:	(bad)  
  4027db:	stos   BYTE PTR es:[edi],al
  4027dc:	pop    edx
  4027dd:	cli    
  4027de:	or     al,0x58
  4027e0:	rcl    BYTE PTR ds:0x465eefff,1
  4027e6:	dec    edx
  4027e7:	mov    ss,WORD PTR [edi-0x33499a5a]
  4027ed:	mov    ch,0x23
  4027ef:	mov    dl,0x9f
  4027f1:	enter  0x1d7e,0xbe
  4027f5:	ins    BYTE PTR es:[edi],dx
  4027f6:	sbb    eax,0x8e763781
  4027fb:	sbb    al,0xca
  4027fd:	mov    ch,0x24
  4027ff:	test   DWORD PTR [ebx+0x11],eax
  402802:	fs data16 (bad) 
  402805:	(bad)  
  402806:	je     0x402831
  402808:	pop    esp
  402809:	ret    0x3e59
  40280c:	pop    edx
  40280d:	aad    0x67
  40280f:	stos   BYTE PTR es:[edi],al
  402810:	sti    
  402811:	inc    ebp
  402812:	inc    ebx
  402813:	mov    BYTE PTR [edi+0x6e48cf0b],bh
  402819:	and    BYTE PTR [ebx-0x21],bh
  40281c:	jmp    0x40284c
  40281e:	div    BYTE PTR [ebx+0x4e1f6479]
  402824:	xchg   DWORD PTR [ebp+0x6f],ebx
  402827:	jae    0x40284c
  402829:	mov    ebp,0x92cfaedc
  40282e:	aas    
  40282f:	loopne 0x402815
  402831:	ja     0x4028ae
  402833:	and    al,0xf2
  402835:	mov    ebp,0xa9a6ae08
  40283a:	test   DWORD PTR [edx-0x4feb3be],eax
  402840:	ja     0x402836
  402842:	popf   
  402843:	fs scas ax,WORD PTR es:[edi]
  402846:	adc    al,0x9f
  402848:	outs   dx,BYTE PTR ds:[esi]
  402849:	mov    dh,0x35
  40284b:	xchg   esi,eax
  40284c:	dec    esi
  40284d:	das    
  40284e:	jb     0x402835
  402850:	ins    DWORD PTR es:[edi],dx
  402851:	add    al,0xb8
  402853:	mov    ecx,0x3cc4a577
  402858:	cld    
  402859:	push   0xfffffff6
  40285b:	push   cs
  40285c:	mov    DWORD PTR [ebp+0x76c74099],esi
  402862:	and    bl,ah
  402864:	mov    bl,0xd
  402866:	pop    edx
  402867:	out    0x9a,al
  402869:	and    al,0x84
  40286b:	gs jne 0x4028b7
  40286e:	jne    0x402856
  402870:	or     ebx,DWORD PTR [ecx-0x16]
  402873:	mov    bh,0xc2
  402875:	daa    
  402876:	cmp    esp,DWORD PTR [esi-0x40]
  402879:	jmp    0x40287d
  40287b:	arpl   WORD PTR [edx],sp
  40287d:	jl     0x402820
  40287f:	cmp    BYTE PTR [edi+0x64bb44f8],dh
  402885:	cmp    esi,ecx
  402887:	inc    esp
  402888:	mov    cl,0x75
  40288a:	data16 sbb cl,BYTE PTR [ebx+ebx*8+0x57d095c8]
  402892:	mov    edx,0x34241d1b
  402897:	or     BYTE PTR [edi],bl
  402899:	xchg   esi,eax
  40289a:	inc    edx
  40289b:	cmc    
  40289c:	cmp    DWORD PTR [edi-0x5c],edi
  40289f:	scas   eax,DWORD PTR es:[edi]
  4028a0:	pop    ebp
  4028a1:	adc    BYTE PTR [edx+ebp*4+0x4c2bfdf5],al
  4028a8:	jecxz  0x40284d
  4028aa:	or     esp,DWORD PTR [edx]
  4028ac:	iret   
  4028ad:	dec    ecx
  4028ae:	and    esi,DWORD PTR [edx-0x1416d9eb]
  4028b4:	iret   
  4028b5:	adc    DWORD PTR [edx-0x4d0c4668],0x36
  4028bc:	loopne 0x4028eb
  4028be:	sub    DWORD PTR [ecx],esi
  4028c0:	jae    0x402924
  4028c2:	adc    eax,0x5171853a
  4028c7:	xor    eax,0xde4cbd14
  4028cc:	jmp    0xd8144d30
  4028d1:	mov    ds:0x63bb65,al
  4028d6:	inc    esp
  4028d7:	inc    edi
  4028d8:	jmp    FWORD PTR [edi-0x326206f8]
  4028de:	xchg   esi,eax
  4028df:	and    ch,BYTE PTR [edx+0x7b]
  4028e2:	shr    ecx,1
  4028e4:	or     esi,DWORD PTR [edx+ebp*8]
  4028e7:	mov    esi,0x3bc49bff
  4028ec:	sbb    DWORD PTR ds:0x165f4fb7,esp
  4028f2:	or     eax,0x25bd30a8
  4028f7:	sbb    bl,BYTE PTR [ecx+0x72fa6ed1]
  4028fd:	jl     0x40294e
  4028ff:	in     al,dx
  402900:	adc    ch,BYTE PTR [esi-0x32d64325]
  402906:	mov    ds:0x2040c668,eax
  40290b:	adc    BYTE PTR [ebp+0x6500c3ea],ah
  402911:	mov    DWORD PTR [edi-0x67],esp
  402914:	mov    ebx,0x93acd7a5
  402919:	and    DWORD PTR [ecx],0xffffffec
  40291c:	add    eax,edx
  40291e:	cmp    al,0x52
  402920:	pop    ebp
  402921:	push   edi
  402922:	jl     0x4028bc
  402924:	mov    dl,0x91
  402926:	xchg   ecx,eax
  402927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402928:	je     0x40291c
  40292a:	cmp    DWORD PTR [ecx],ecx
  40292c:	sbb    eax,0x8d69cfcd
  402931:	push   0xd1eb6350
  402936:	jns    0x4028d7
  402938:	mov    edx,0xbaa7ebd3
  40293d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40293e:	mov    fs,WORD PTR [edx+0x1e]
  402941:	lods   al,BYTE PTR ds:[esi]
  402942:	mov    ecx,0x25d41eab
  402947:	xchg   DWORD PTR [esi],eax
  402949:	(bad)  
  40294a:	cmp    BYTE PTR [edi],bh
  40294c:	cli    
  40294d:	(bad)  
  40294f:	add    esi,ecx
  402951:	jle    0x402939
  402953:	jle    0x4028ea
  402955:	mov    bl,0xec
  402957:	arpl   WORD PTR [ecx],ax
  402959:	inc    edi
  40295a:	test   BYTE PTR [ebp+0x1a],0x5f
  40295e:	dec    esp
  40295f:	lock mov ah,0x61
  402962:	xchg   ebx,edi
  402964:	repz xor DWORD PTR [edi-0x63afa200],edx
  40296b:	or     al,0x75
  40296d:	dec    ebp
  40296e:	test   eax,0xd7612554
  402973:	arpl   WORD PTR ds:0x60f36362,bx
  402979:	call   DWORD PTR [edx-0x42]
  40297c:	xor    eax,0x5fb95339
  402981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402982:	std    
  402983:	adc    DWORD PTR [ebp+0x19],0xffffffb1
  402987:	out    dx,al
  402988:	push   edi
  402989:	ss clc 
  40298b:	cwde   
  40298c:	loope  0x402929
  40298e:	mov    eax,ds:0x4d640dd
  402993:	inc    ebp
  402994:	lock mov al,0x4b
  402997:	jno    0x4029c1
  402999:	xchg   ebp,eax
  40299a:	stos   BYTE PTR es:[edi],al
  40299b:	aam    0xc7
  40299d:	push   esi
  40299e:	inc    eax
  40299f:	push   eax
  4029a0:	jecxz  0x402950
  4029a2:	mov    esi,DWORD PTR [edx+0x36]
  4029a5:	jge    0x4029f6
  4029a7:	mov    al,0xb4
  4029a9:	cmc    
  4029aa:	dec    edi
  4029ab:	xor    ebp,DWORD PTR [esi+0x4f90b4f7]
  4029b1:	ds je  0x402a09
  4029b4:	mov    ds:0xc26e54d0,ax
  4029ba:	pop    esp
  4029bb:	and    BYTE PTR [esi+0x5b],bl
  4029be:	mov    ds:0xfc9a6fd4,eax
  4029c3:	pop    esi
  4029c4:	cli    
  4029c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029c6:	frstor [edi-0x5e]
  4029c9:	sub    al,0x94
  4029cb:	cmp    dh,BYTE PTR ds:0x24cac190
  4029d1:	mov    ds:0x2050ec4d,al
  4029d6:	and    BYTE PTR [esi],0xb3
  4029d9:	pop    ecx
  4029da:	(bad)  
  4029db:	pusha  
  4029dc:	cdq    
  4029dd:	xchg   ax,ax
  4029df:	and    BYTE PTR [edi],cl
  4029e1:	jo     0x40297c
  4029e3:	sahf   
  4029e4:	adc    esp,esp
  4029e6:	pop    edi
  4029e7:	mov    WORD PTR [edi],?
  4029e9:	lods   al,BYTE PTR ds:[esi]
  4029ea:	outs   dx,BYTE PTR ds:[esi]
  4029eb:	dec    edi
  4029ec:	or     DWORD PTR [edx],ebp
  4029ee:	retf   0xf3c8
  4029f1:	rcr    esp,0x8a
  4029f4:	and    DWORD PTR [edx+0x3fa2f967],edi
  4029fa:	sbb    ebp,DWORD PTR [ecx+ebp*8]
  4029fd:	or     ch,BYTE PTR [edi+esi*8]
  402a00:	jb     0x402a7b
  402a02:	adc    DWORD PTR [ebx+0x54],ebx
  402a05:	jmp    0x402a5c
  402a07:	jecxz  0x402a02
  402a09:	jg     0x402a40
  402a0b:	(bad)  
  402a0c:	(bad)  
  402a0d:	mov    bh,0x2
  402a0f:	fistp  WORD PTR [ebp+0x2f]
  402a12:	fstp   QWORD PTR [edx]
  402a14:	adc    al,0xc5
  402a16:	inc    edx
  402a17:	pop    eax
  402a18:	mov    esi,0x76acab78
  402a1d:	inc    ebx
  402a1e:	cmp    dl,BYTE PTR [eax+edi*2-0x7a50736]
  402a25:	outs   dx,DWORD PTR ds:[esi]
  402a26:	mov    ecx,0xcb19fcd7
  402a2b:	(bad)  
  402a2c:	les    ebx,FWORD PTR [edx+0x18]
  402a2f:	dec    edx
  402a30:	add    eax,0xd692a8b8
  402a35:	loope  0x4029bf
  402a37:	data16 mov WORD PTR [ebp+0x4e5e1e94],fs
  402a3e:	fidivr WORD PTR [ebp+0x5f]
  402a41:	add    al,0x9b
  402a43:	leave  
  402a44:	dec    edx
  402a45:	xchg   ebp,eax
  402a46:	enter  0x6311,0x84
  402a4a:	mov    edx,0xe9e4698e
  402a4f:	pop    ecx
  402a50:	xchg   edi,eax
  402a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a52:	jle    0x402a55
  402a54:	add    DWORD PTR [ebx+0x37a7a717],0x19ad79ec
  402a5e:	test   DWORD PTR [esi],edi
  402a60:	dec    ebp
  402a61:	add    eax,DWORD PTR [esi]
  402a63:	pushf  
  402a64:	fdiv   DWORD PTR ds:0xb35d3bfc
  402a6a:	xchg   edi,eax
  402a6b:	repz leave 
  402a6d:	dec    esp
  402a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a6f:	xchg   edx,eax
  402a70:	stos   BYTE PTR es:[edi],al
  402a71:	mov    edi,0xb36857e8
  402a76:	mov    cl,0xdf
  402a78:	dec    ebx
  402a79:	mov    ebx,0x370b97ec
  402a7e:	sbb    al,0x8f
  402a80:	lock pop ebx
  402a82:	cwde   
  402a83:	les    ebx,FWORD PTR [ecx-0x58e9883a]
  402a89:	xchg   BYTE PTR [edi],ah
  402a8b:	or     DWORD PTR [eax+0x4fe683b9],0x5b93c104
  402a95:	jmp    0x4e2b:0xaf20f310
  402a9c:	mov    DWORD PTR [eax+ebp*8],esi
  402a9f:	lods   al,BYTE PTR ds:[esi]
  402aa0:	pop    ss
  402aa1:	enter  0xe1ff,0xd3
  402aa5:	pop    ecx
  402aa6:	cmp    eax,0x15c1c597
  402aab:	test   eax,0xc64a8f61
  402ab0:	jne    0x402a42
  402ab2:	inc    edx
  402ab3:	jbe    0x402b16
  402ab5:	clc    
  402ab6:	mov    dh,0x74
  402ab8:	iret   
  402ab9:	inc    ebx
  402aba:	dec    ebx
  402abb:	mov    dl,0xd5
  402abd:	fs adc eax,0xd6d24b43
  402ac3:	and    eax,0x5298ed6
  402ac8:	adc    DWORD PTR [eiz*8+0x1417f7d7],edi
  402acf:	add    BYTE PTR [esp+eax*4],0x65
  402ad3:	loopne 0x402b30
  402ad5:	int    0xb9
  402ad7:	mov    ss,WORD PTR [edi+edi*4-0x3effbaa2]
  402ade:	cli    
  402adf:	mov    BYTE PTR [ebp-0x1e],cl
  402ae2:	ins    DWORD PTR es:[edi],dx
  402ae3:	mov    BYTE PTR [edi+0x3d],cl
  402ae6:	and    al,0xd4
  402ae8:	test   BYTE PTR [ebx+0x3a],bh
  402aeb:	cmp    DWORD PTR [esi-0x7],esi
  402aee:	sub    DWORD PTR [esi-0x3e],esp
  402af1:	loop   0x402b51
  402af3:	cwde   
  402af4:	mov    dh,0x8f
  402af6:	mov    esi,0xd228107d
  402afb:	pusha  
  402afc:	mov    dl,0xa0
  402afe:	mov    dh,0xe9
  402b00:	add    DWORD PTR [eax-0x48],ecx
  402b03:	mov    dl,BYTE PTR [eax+0x70b13a1a]
  402b09:	mov    cl,0x1c
  402b0b:	bound  esi,QWORD PTR [ebp-0x43]
  402b0e:	std    
  402b0f:	in     al,0x70
  402b11:	mov    ebp,0xed6afd3c
  402b16:	push   edi
  402b17:	push   ss
  402b18:	xor    al,0xe1
  402b1a:	je     0x402aa1
  402b1c:	pop    ecx
  402b1d:	jb     0x402aa5
  402b1f:	iret   
  402b20:	sub    al,0x36
  402b22:	jb     0x402ac0
  402b24:	in     eax,dx
  402b25:	and    eax,0x7fcc5c77
  402b2a:	push   ebp
  402b2b:	das    
  402b2c:	in     al,dx
  402b2d:	rcl    BYTE PTR [ecx+0x6c],cl
  402b30:	fimul  WORD PTR [edx]
  402b32:	mov    ch,0xc3
  402b34:	mov    ds:0x847cc54,eax
  402b39:	pop    esp
  402b3a:	(bad)  
  402b3c:	jno    0x402ae8
  402b3e:	out    dx,eax
  402b3f:	fimul  DWORD PTR [ebx-0x3802abb4]
  402b45:	mov    eax,ds:0xd83be863
  402b4a:	fdivr  DWORD PTR [edi]
  402b4c:	aas    
  402b4d:	es inc ecx
  402b4f:	(bad)  
  402b50:	sub    DWORD PTR [edx-0x2cb731e4],eax
  402b56:	cld    
  402b57:	idiv   ecx
  402b59:	mov    BYTE PTR [eax+esi*1+0x52c93d28],ch
  402b60:	cli    
  402b61:	cs dec edi
  402b63:	arpl   sp,sp
  402b65:	scas   eax,DWORD PTR es:[edi]
  402b66:	push   esp
  402b67:	mov    ebp,0x627c6a85
  402b6c:	enter  0x304b,0x83
  402b70:	mov    DWORD PTR ds:0xb8c057b5,edi
  402b76:	mov    eax,ds:0xbcfaf432
  402b7b:	cmp    eax,0xa35f60d6
  402b80:	push   es
  402b81:	fwait
  402b82:	pop    esi
  402b83:	or     DWORD PTR [edx-0x42],eax
  402b86:	xchg   BYTE PTR [edx],bh
  402b88:	mov    ebx,0x18f3a819
  402b8d:	jb     0x402bfd
  402b8f:	xor    al,BYTE PTR es:[ebp-0x57]
  402b93:	mov    eax,0x9b592c13
  402b98:	imul   ebx,DWORD PTR ds:0x6189603,0x2fbf0bb8
  402ba2:	dec    ecx
  402ba3:	xchg   BYTE PTR [ebp+edi*4+0x69e12295],bh
  402baa:	sbb    al,0xb7
  402bac:	xor    al,0xb
  402bae:	shl    DWORD PTR [ebx-0x661f0140],1
  402bb4:	sub    BYTE PTR [eax-0x4a],0x4c
  402bb8:	pop    ds
  402bb9:	pop    ecx
  402bba:	push   edi
  402bbb:	ds mov eax,cs:0x450c2984
  402bc2:	mov    cl,BYTE PTR [edx+ebp*1]
  402bc5:	xchg   DWORD PTR [edi+eax*8],esp
  402bc8:	sbb    ch,BYTE PTR [ecx+0x2d1b85ff]
  402bce:	cmp    al,0xff
  402bd0:	scas   eax,DWORD PTR es:[edi]
  402bd1:	lods   eax,DWORD PTR ds:[esi]
  402bd2:	mov    BYTE PTR [ecx-0x4f39497],ah
  402bd8:	aad    0xc5
  402bda:	mov    al,0x41
  402bdc:	xchg   ebx,eax
  402bdd:	cmp    bl,BYTE PTR ds:0x18a9d542
  402be3:	rcr    DWORD PTR ds:0x4036f189,1
  402be9:	dec    ecx
  402bea:	test   al,0xed
  402bec:	jns    0x402c35
  402bee:	sahf   
  402bef:	rep stos DWORD PTR es:[edi],eax
  402bf1:	sbb    al,0x40
  402bf3:	stos   DWORD PTR es:[edi],eax
  402bf4:	pushf  
  402bf5:	dec    eax
  402bf6:	repnz sbb al,bl
  402bf9:	mov    ds:0x6cd981c4,al
  402bfe:	push   es
  402bff:	scas   eax,DWORD PTR es:[edi]
  402c00:	mov    edx,0x4480e9a0
  402c05:	dec    ebx
  402c06:	inc    edx
  402c07:	fdiv   QWORD PTR [eax]
  402c09:	and    al,0x16
  402c0b:	mov    ebx,0xcdfd230d
  402c10:	jp     0x402c04
  402c12:	mov    esi,0x33594869
  402c17:	out    0x21,eax
  402c19:	dec    edx
  402c1a:	fld    DWORD PTR [esi+0x7e]
  402c1d:	out    dx,eax
  402c1e:	xchg   esp,eax
  402c1f:	pop    es
  402c20:	pushf  
  402c21:	xchg   edx,eax
  402c22:	dec    ebx
  402c23:	loopne 0x402c57
  402c25:	mov    ds:0xffdbda32,eax
  402c2a:	fsub   DWORD PTR [esi+edx*4]
  402c2d:	mov    al,ds:0xaf169862
  402c32:	sahf   
  402c33:	xor    edx,DWORD PTR [edi-0x6964296f]
  402c39:	xlat   BYTE PTR ds:[ebx]
  402c3a:	inc    DWORD PTR [esi+0x31ee750e]
  402c40:	nop
  402c41:	xchg   esp,eax
  402c42:	push   0xffffffa3
  402c44:	aaa    
  402c45:	lds    ecx,FWORD PTR [ebx+edi*4]
  402c48:	mov    al,0xa6
  402c4a:	or     dh,BYTE PTR [ecx]
  402c4c:	stos   BYTE PTR es:[edi],al
  402c4d:	mov    dl,0xe0
  402c4f:	sub    ch,BYTE PTR [eax]
  402c51:	cmp    esp,DWORD PTR [edi+0x1f]
  402c54:	sub    BYTE PTR [ebx-0x19a83556],ch
  402c5a:	or     BYTE PTR [ecx+eiz*4-0x319820ed],al
  402c61:	adc    eax,0xc7eb3c1e
  402c66:	test   DWORD PTR [edx-0x62],esi
  402c69:	fld    TBYTE PTR [ebp+0x5521296e]
  402c6f:	mov    esp,DWORD PTR [eax-0x78fe170]
  402c75:	sub    bh,BYTE PTR [ecx-0x80]
  402c78:	jo     0x402c3f
  402c7a:	add    al,0xfb
  402c7c:	cld    
  402c7d:	and    ah,bh
  402c7f:	js     0x402c28
  402c81:	cli    
  402c82:	addr16 call 0x3045b1af
  402c88:	sbb    bh,BYTE PTR [ecx+0x5f]
  402c8b:	cli    
  402c8c:	(bad)
  402c8f:	stc    
  402c90:	sub    al,al
  402c92:	inc    esp
  402c93:	comiss xmm2,DWORD PTR [ecx]
  402c96:	pop    esp
  402c97:	outs   dx,BYTE PTR ds:[esi]
  402c98:	push   ecx
  402c99:	mov    al,BYTE PTR [eax-0x1529fa8b]
  402c9f:	scas   eax,DWORD PTR es:[edi]
  402ca0:	popa   
  402ca1:	mov    ebp,0xcb198a75
  402ca6:	imul   edi,DWORD PTR ds:0x2a1ff97c,0x42081f9e
  402cb0:	outs   dx,BYTE PTR ds:[esi]
  402cb1:	sbb    ebp,ebp
  402cb3:	ss scas al,BYTE PTR es:[edi]
  402cb5:	jecxz  0x402c3b
  402cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cb8:	fsub   DWORD PTR [edx+0x2848b782]
  402cbe:	aaa    
  402cbf:	mov    edi,0xcb350534
  402cc4:	daa    
  402cc5:	pop    edx
  402cc6:	mov    bl,0xec
  402cc8:	imul   eax,DWORD PTR [esi+0x7a16f5fd],0x6e
  402ccf:	jno    0x402cb8
  402cd1:	retf   0xdbc5
  402cd4:	sbb    al,BYTE PTR [edx-0x50]
  402cd7:	pusha  
  402cd8:	and    eax,0xfe66c8d6
  402cdd:	ja     0x402c61
  402cdf:	sbb    ebx,DWORD PTR ds:0x75fc16e3
  402ce5:	jge    0x402cbf
  402ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce8:	inc    ecx
  402ce9:	bound  esi,QWORD PTR [eax+eax*8+0x3b]
  402ced:	xchg   edi,eax
  402cee:	ins    BYTE PTR es:[edi],dx
  402cef:	(bad)  
  402cf0:	ins    BYTE PTR es:[edi],dx
  402cf1:	inc    edi
  402cf2:	std    
  402cf3:	dec    edx
  402cf4:	or     eax,0x4aecf1e5
  402cf9:	out    dx,al
  402cfa:	(bad)  
  402cfb:	loopne 0x402ca7
  402cfd:	add    al,0x9
  402cff:	test   eax,0x17817da5
  402d04:	arpl   WORD PTR [ecx-0x56c39c9],bx
  402d0a:	cmp    al,BYTE PTR [ebx-0x74]
  402d0d:	pop    ss
  402d0e:	mov    cl,0xaf
  402d10:	push   edi
  402d11:	shl    DWORD PTR [edi-0x4627e6f3],cl
  402d17:	and    ch,BYTE PTR [esi]
  402d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1a:	clc    
  402d1b:	push   ss
  402d1c:	(bad)  [eax]
  402d1e:	xor    esp,DWORD PTR [edx+esi*2-0x3a]
  402d22:	jne    0x402d66
  402d24:	xchg   esi,eax
  402d25:	jae    0x402d08
  402d27:	imul   esi,esi,0x4cfd012c
  402d2d:	mov    ebp,0x7086022f
  402d32:	stc    
  402d33:	cdq    
  402d34:	jo     0x402d91
  402d36:	stos   DWORD PTR es:[edi],eax
  402d37:	and    eax,0xedda2560
  402d3c:	sahf   
  402d3d:	xor    esi,esp
  402d3f:	jb     0x402d09
  402d41:	popa   
  402d42:	push   esp
  402d43:	in     al,0xe1
  402d45:	nop
  402d46:	dec    BYTE PTR [ecx]
  402d48:	into   
  402d49:	sub    eax,0x3f5dde44
  402d4e:	mov    BYTE PTR [edx],dh
  402d50:	pop    esp
  402d51:	xchg   ecx,eax
  402d52:	in     al,dx
  402d53:	push   cs
  402d54:	xor    BYTE PTR [esi+edi*8],dh
  402d57:	sbb    ch,BYTE PTR [ebx-0x323c579f]
  402d5d:	pop    ebp
  402d5e:	enter  0xc004,0xc9
  402d62:	in     al,dx
  402d63:	popa   
  402d64:	mov    ds,WORD PTR [edx-0x43514884]
  402d6a:	jmp    0x14c0f010
  402d6f:	push   edi
  402d70:	test   edx,esi
  402d72:	push   esi
  402d73:	clc    
  402d74:	fs lock mov cl,0x94
  402d78:	shr    BYTE PTR [edx],cl
  402d7a:	data16 cmp al,0x1d
  402d7d:	xlat   BYTE PTR ds:[ebx]
  402d7f:	test   DWORD PTR [ecx-0x5a],esi
  402d82:	jns    0x402df5
  402d84:	bound  edx,QWORD PTR [edx]
  402d86:	sbb    eax,0xa6aeb42a
  402d8b:	cmp    ebp,DWORD PTR ds:0x930dba95
  402d91:	fcomp  DWORD PTR [esi-0x4e60fd62]
  402d97:	stos   BYTE PTR es:[edi],al
  402d98:	cmp    BYTE PTR [edi+0x76f9cfb7],dl
  402d9e:	xor    dh,BYTE PTR [edx+0x77]
  402da1:	mov    bl,0x77
  402da3:	loopne 0x402d37
  402da5:	adc    bl,al
  402da7:	cmp    eax,0x6a1255b2
  402dac:	ret    0x1355
  402daf:	cli    
  402db0:	mov    al,ds:0x51696494
  402db5:	inc    ecx
  402db6:	fs inc esp
  402db8:	and    DWORD PTR [ecx+0x2b6ac17d],edi
  402dbe:	mov    al,ds:0xb10d51b9
  402dc3:	(bad)  
  402dc4:	sub    bl,BYTE PTR [ebp-0x32]
  402dc7:	lods   al,BYTE PTR ds:[esi]
  402dc8:	jmp    0xa688:0xd3bb4ce5
  402dcf:	add    DWORD PTR [edi-0x60b6afff],ebp
  402dd5:	inc    esi
  402dd6:	cmp    ebx,DWORD PTR [ebp+eax*8-0x3c]
  402dda:	jmp    0x8a51:0x925244bd
  402de1:	fidiv  DWORD PTR [esi]
  402de3:	dec    eax
  402de4:	push   es
  402de5:	sbb    eax,0x750b39f
  402dea:	sub    bl,BYTE PTR [ebx+0x27]
  402ded:	outs   dx,BYTE PTR ds:[esi]
  402dee:	imul   ebp,ebp,0xfabb9920
  402df4:	int3   
  402df5:	repnz lds ecx,FWORD PTR [edx+0x11bc9c6a]
  402dfc:	ficom  WORD PTR [edx+0x16adf7c6]
  402e02:	int3   
  402e03:	sbb    al,0x5f
  402e05:	daa    
  402e06:	out    dx,eax
  402e07:	loop   0x402e37
  402e09:	jg     0xe5671b03
  402e0f:	lds    esi,FWORD PTR [ebx*2+0x5a79ed0a]
  402e16:	mov    bl,0x6d
  402e18:	pop    es
  402e19:	das    
  402e1a:	mov    al,ds:0xb616449b
  402e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e20:	mov    ecx,0x59c2c693
  402e25:	out    dx,eax
  402e26:	mov    ch,0x2a
  402e28:	lock (bad) 
  402e2a:	imul   eax,esp,0xa2f85003
  402e30:	inc    eax
  402e31:	mov    dh,0xd0
  402e33:	jp     0x402de0
  402e35:	fld    TBYTE PTR [eax-0x16ff13b6]
  402e3b:	test   al,0xdf
  402e3d:	mov    al,ds:0x640a3be6
  402e42:	sahf   
  402e43:	add    BYTE PTR [eax-0x3325b4d2],0x83
  402e4a:	imul   ecx,DWORD PTR [ebx+0x4d],0xa9a272ad
  402e51:	lds    esi,FWORD PTR [esi+0x6867384]
  402e57:	pop    es
  402e58:	push   edi
  402e59:	enter  0x4f15,0x3e
  402e5d:	shl    BYTE PTR [eax-0x6e5982a8],1
  402e63:	in     al,dx
  402e64:	stos   DWORD PTR es:[edi],eax
  402e65:	cmp    ebx,edx
  402e67:	sbb    al,0x8b
  402e69:	hlt    
  402e6a:	rcr    ch,1
  402e6c:	push   ecx
  402e6d:	mov    ah,0x8f
  402e6f:	push   esp
  402e70:	daa    
  402e71:	addr16 loopne 0x402e2b
  402e74:	fcom   st(5)
  402e76:	mov    WORD PTR [ebp-0x1f5ca125],fs
  402e7c:	mov    esp,0xe2da21cf
  402e81:	shl    DWORD PTR [ecx-0x41],cl
  402e84:	inc    eax
  402e85:	loope  0x402e29
  402e87:	stos   DWORD PTR es:[edi],eax
  402e88:	mov    dh,0xcd
  402e8a:	xlat   BYTE PTR ds:[ebx]
  402e8b:	into   
  402e8c:	jp     0x402e7c
  402e8e:	sbb    DWORD PTR [edi+0x264e659e],ecx
  402e94:	les    ecx,FWORD PTR [ebx]
  402e96:	add    eax,0x866dded
  402e9b:	jnp    0x402e22
  402e9d:	jl     0x402ed9
  402e9f:	rol    BYTE PTR [ebx],cl
  402ea1:	dec    esi
  402ea2:	pop    eax
  402ea3:	test   eax,0x80ff7630
  402ea8:	in     al,0x57
  402eaa:	cmp    eax,DWORD PTR [esi+0x6713b6c8]
  402eb0:	cwde   
  402eb1:	fisttp QWORD PTR [edx+esi*2-0x706d7775]
  402eb8:	or     eax,DWORD PTR ss:[edx+0x6b46ef32]
  402ebf:	repnz cmp eax,0x8a155884
  402ec5:	and    BYTE PTR ds:0xc572c7b6,dl
  402ecb:	pop    ebp
  402ecc:	cmc    
  402ecd:	adc    DWORD PTR [eax],eax
  402ecf:	sub    al,0x7e
  402ed1:	imul   ebp,DWORD PTR [edi-0x74898243],0xaffa2d29
  402edb:	and    BYTE PTR [eax],cl
  402edd:	jmp    0x402ec0
  402edf:	inc    ebx
  402ee0:	neg    BYTE PTR [eax]
  402ee2:	mov    bl,0xd7
  402ee4:	mov    bh,0xb4
  402ee6:	stos   BYTE PTR es:[edi],al
  402ee7:	jne    0x402ec0
  402ee9:	xor    BYTE PTR [esi*4-0x54256e4b],ah
  402ef0:	adc    al,0xce
  402ef2:	std    
  402ef3:	cdq    
  402ef4:	dec    edi
  402ef5:	pusha  
  402ef6:	xchg   esp,eax
  402ef7:	push   ss
  402ef8:	stc    
  402ef9:	push   ds
  402efa:	sbb    DWORD PTR [ebp-0x25],ebp
  402efd:	add    eax,0x7e83b984
  402f02:	xor    DWORD PTR [esi+0x1e],eax
  402f05:	ins    BYTE PTR es:[edi],dx
  402f06:	fdivr  st(3),st
  402f08:	stos   DWORD PTR es:[di],eax
  402f0a:	ss jne 0x402f3a
  402f0d:	scas   eax,DWORD PTR es:[edi]
  402f0e:	nop    ebp
  402f11:	mov    esp,ecx
  402f13:	jmp    0x402f36
  402f15:	mov    BYTE PTR [ebx+0x5c16b937],bh
  402f1b:	pop    ds
  402f1c:	mov    cl,0x2f
  402f1e:	dec    esi
  402f1f:	and    al,0x7e
  402f21:	js     0x402f4a
  402f23:	mov    cl,dl
  402f25:	and    cl,BYTE PTR [eax]
  402f27:	sbb    BYTE PTR [eax+ecx*4-0x31],ah
  402f2b:	sub    ah,ch
  402f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f2e:	xchg   esi,eax
  402f2f:	xlat   BYTE PTR ds:[ebx]
  402f30:	push   edx
  402f31:	xor    eax,0xef5f175d
  402f36:	aaa    
  402f37:	xchg   ch,bh
  402f39:	and    DWORD PTR [ecx+0x57069746],esi
  402f3f:	pop    esp
  402f40:	adc    esi,DWORD PTR [edx-0x44a4e84]
  402f46:	inc    ebx
  402f47:	sub    eax,0x5172160a
  402f4c:	sub    dh,BYTE PTR [esi+0x75]
  402f4f:	dec    edx
  402f50:	stc    
  402f51:	(bad)  
  402f52:	in     eax,0xd4
  402f54:	xchg   ebp,eax
  402f55:	push   cs
  402f56:	repz hlt 
  402f58:	iret   
  402f59:	ror    BYTE PTR [edx+0x62934bce],1
  402f5f:	sahf   
  402f60:	pop    esp
  402f61:	scas   eax,DWORD PTR es:[edi]
  402f62:	lods   eax,DWORD PTR ds:[esi]
  402f63:	jmp    0xef417b98
  402f68:	in     al,dx
  402f69:	stos   DWORD PTR es:[edi],eax
  402f6a:	rcr    BYTE PTR [edi-0x133b1c40],cl
  402f70:	arpl   WORD PTR [ecx],bp
  402f72:	xchg   BYTE PTR [edx-0x16],bh
  402f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f76:	and    BYTE PTR [ecx+0x418d603a],dh
  402f7c:	jnp    0x402fce
  402f7e:	inc    edx
  402f80:	imul   edi,DWORD PTR [esi],0xf4cc8161
  402f86:	cmp    BYTE PTR [edx-0x3b31423b],ah
  402f8c:	mov    al,ds:0xd6cc4342
  402f91:	out    0xd2,eax
  402f93:	repnz mov al,ds:0x51756b37
  402f99:	ins    DWORD PTR es:[edi],dx
  402f9a:	inc    edi
  402f9b:	jg     0x402f7a
  402f9d:	addr16 push ecx
  402f9f:	aas    
  402fa0:	int3   
  402fa1:	es push eax
  402fa3:	sbb    DWORD PTR [ebp+0xf],ebp
  402fa6:	jp     0x402fda
  402fa8:	(bad)  
  402fa9:	retf   0x60f6
  402fac:	jb     0x403027
  402fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402faf:	xchg   ebp,eax
  402fb0:	cmp    BYTE PTR [eax],dh
  402fb2:	mov    ebx,0xcb20d175
  402fb7:	loope  0x402fd7
  402fb9:	lahf   
  402fba:	push   0xffffffbf
  402fbc:	ja     0x402f3f
  402fbe:	mov    esi,0xcdabd448
  402fc3:	arpl   bx,ax
  402fc5:	call   0x9ba0:0xbf24ed61
  402fcc:	mov    WORD PTR [eax],ss
  402fce:	jb     0x402f8f
  402fd0:	pushf  
  402fd1:	lods   eax,DWORD PTR ds:[esi]
  402fd2:	xor    al,0xe6
  402fd4:	sar    BYTE PTR [esi+0x66],cl
  402fd7:	jbe    0x40302d
  402fd9:	fucomp st(6)
  402fdb:	sub    BYTE PTR [eax-0x60],al
  402fde:	dec    edi
  402fdf:	fild   DWORD PTR [ebp+0xd]
  402fe2:	lds    esi,FWORD PTR [eax+0xff76aa6]
  402fe8:	mov    esp,0x4ec35110
  402fed:	mov    ebp,0xeea601ce
  402ff2:	fnsave [esi]
  402ff4:	xchg   ecx,eax
  402ff5:	push   ss
  402ff6:	cdq    
  402ff7:	call   0x4fef:0x96a4380a
  402ffe:	imul   edx,DWORD PTR [edi-0x63],0x3a
  403002:	ret    0x7bfa
  403005:	in     eax,0xb0
  403007:	adc    eax,0x32c92c31
  40300c:	mov    ds:0xb136e20e,al
  403011:	das    
  403012:	idiv   BYTE PTR [ebx+0x67530585]
  403018:	fidiv  DWORD PTR ds:[ebx+eiz*4]
  40301c:	inc    ebx
  40301d:	aam    0xc1
  40301f:	and    DWORD PTR [esi+0x4d3da7de],edi
  403025:	outs   dx,BYTE PTR ds:[esi]
  403026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403027:	cs dec ecx
  403029:	(bad)  
  40302a:	sbb    ebx,esi
  40302c:	dec    ecx
  40302d:	fwait
  40302e:	bound  ebp,QWORD PTR [eax+0x1cc2ada6]
  403034:	shl    DWORD PTR [edi-0x2d],cl
  403037:	or     eax,DWORD PTR [edx]
  403039:	and    DWORD PTR [edi+0x7762926a],0x783f1d9f
  403043:	fstp   QWORD PTR [edi-0x10]
  403046:	add    DWORD PTR [ecx],ebp
  403048:	loope  0x403078
  40304a:	dec    esi
  40304b:	adc    DWORD PTR [eax-0x4e],esi
  40304e:	int3   
  40304f:	inc    edi
  403050:	shr    DWORD PTR [eax+0x56],cl
  403053:	out    dx,al
  403054:	inc    edi
  403055:	cdq    
  403056:	sbb    eax,0xac086e12
  40305b:	mov    bh,0xcc
  40305d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40305e:	push   eax
  40305f:	div    BYTE PTR [ebx+0x6e]
  403062:	adc    DWORD PTR [ebx-0x457573c9],ebx
  403068:	inc    ebp
  403069:	dec    ebp
  40306a:	neg    DWORD PTR [edx+0x74]
  40306d:	add    DWORD PTR [edi-0x16bd5fd2],esp
  403073:	sbb    al,0x72
  403075:	loop   0x40308d
  403077:	mov    ecx,0xc8272436
  40307c:	xor    bl,BYTE PTR [ebx+ebx*8-0x2b]
  403080:	shl    DWORD PTR [eax],0xdb
  403083:	mov    cl,0x4f
  403085:	sub    al,0x73
  403087:	arpl   WORD PTR [eax],cx
  403089:	jg     0x403022
  40308b:	test   al,0x16
  40308d:	xchg   ecx,eax
  40308e:	aad    0xca
  403090:	jmp    0x3a49f4d1
  403095:	cmp    cl,ch
  403097:	add    ah,BYTE PTR [ebx-0x53]
  40309a:	or     esi,DWORD PTR [ecx-0x35695a74]
  4030a0:	pop    eax
  4030a1:	jmp    0xf335:0x962d8
  4030a8:	xchg   ebp,eax
  4030a9:	mov    ds:0x235be403,eax
  4030ae:	jo     0x4030c7
  4030b0:	out    0x4d,al
  4030b2:	dec    edx
  4030b3:	cmp    DWORD PTR [ebx],ebx
  4030b5:	add    DWORD PTR [eax],eax
  4030b7:	int    0x1a
  4030b9:	loopne 0x403062
  4030bb:	push   ebx
  4030bc:	xor    ecx,ebx
  4030be:	dec    ecx
  4030bf:	fucomip st,st(6)
  4030c1:	dec    ebx
  4030c2:	xor    DWORD PTR [edi-0x35],edi
  4030c5:	(bad)  
  4030c6:	jecxz  0x403141
  4030c8:	or     bl,BYTE PTR [eax+0x6e050be7]
  4030ce:	jp     0x403096
  4030d0:	nop
  4030d1:	cmp    dl,BYTE PTR [ecx+0x471777d2]
  4030d7:	inc    edi
  4030d8:	or     DWORD PTR [eax-0xf1fbbd6],esp
  4030de:	shl    DWORD PTR ss:[ebx],1
  4030e1:	inc    edi
  4030e2:	mov    eax,ds:0x70a56653
  4030e7:	sub    DWORD PTR [ebx-0x34c6dab3],eax
  4030ed:	aam    0x8b
  4030ef:	adc    ch,BYTE PTR [eax]
  4030f1:	adc    DWORD PTR [edi],edi
  4030f3:	jg     0x40311f
  4030f5:	pop    ebx
  4030f6:	inc    ebx
  4030f7:	cmp    BYTE PTR [edi+ecx*2],dl
  4030fa:	(bad)  
  4030fb:	mov    ebp,0xc7a51460
  403100:	fidiv  DWORD PTR [esp+edi*2-0x2]
  403104:	inc    eax
  403105:	and    al,0x15
  403107:	xchg   DWORD PTR [eax],esp
  403109:	dec    edi
  40310a:	loop   0x4030e4
  40310c:	jo     0x40316c
  40310e:	fisub  DWORD PTR [edx]
  403110:	(bad)
  403113:	dec    eax
  403114:	rol    ebp,cl
  403116:	sub    bl,BYTE PTR [ebx+0x63]
  403119:	aaa    
  40311a:	mov    ch,0x9d
  40311c:	js     0x40318d
  40311e:	js     0x40314b
  403120:	sub    ch,dh
  403122:	loopne 0x4030bc
  403124:	bound  ebp,QWORD PTR [ecx-0x5d]
  403127:	pop    ds
  403128:	outs   dx,BYTE PTR ds:[esi]
  403129:	jmp    0x860f17b2
  40312e:	dec    ebx
  40312f:	sub    ebp,DWORD PTR [edi-0x5d]
  403132:	(bad)  
  403133:	into   
  403134:	lods   eax,DWORD PTR ds:[esi]
  403135:	add    dh,dh
  403137:	push   esp
  403138:	mov    dl,0x79
  40313a:	mov    ebx,0x7503a677
  40313f:	lods   eax,DWORD PTR ds:[esi]
  403140:	rcl    esi,1
  403142:	pop    esp
  403143:	mov    bl,0x79
  403145:	pop    ss
  403146:	mov    ds:0x9a2ee4ff,al
  40314b:	retf   0xd968
  40314e:	sbb    ebp,eax
  403150:	xor    bh,BYTE PTR [edx]
  403152:	sbb    eax,0x448dace0
  403157:	das    
  403158:	dec    eax
  403159:	mov    edx,0xaf8e755b
  40315e:	mov    dl,0xe9
  403160:	cmp    ebp,DWORD PTR [ebx-0x7f3c9b0]
  403166:	add    esi,DWORD PTR [ebp+0x7b2e3c25]
  40316c:	leave  
  40316d:	out    0x1d,eax
  40316f:	sub    ah,ah
  403171:	les    edx,FWORD PTR [esi-0x76]
  403174:	fwait
  403175:	fs ret 0x6ebd
  403179:	test   eax,0xe41e6946
  40317e:	inc    esp
  40317f:	xchg   ebx,eax
  403180:	shr    dl,0x6f
  403183:	sbb    ch,BYTE PTR [eax-0x29]
  403186:	inc    edi
  403187:	repz jmp 0x40312f
  40318a:	and    bl,BYTE PTR [ebx+edi*1]
  40318d:	fstp   DWORD PTR [edx]
  40318f:	jnp    0x40313b
  403191:	outs   dx,DWORD PTR ds:[esi]
  403192:	dec    ebx
  403193:	adc    DWORD PTR [edx+0xc],edi
  403196:	mov    ah,0x5d
  403198:	mov    eax,ds:0xc08b77de
  40319d:	mov    fs,WORD PTR [ebp-0x80]
  4031a0:	cmp    al,0x82
  4031a2:	jmp    0x258fbd7e
  4031a7:	lods   eax,DWORD PTR ds:[esi]
  4031a8:	test   BYTE PTR [edi],0xa9
  4031ab:	(bad)  
  4031ac:	je     0x40315c
  4031ae:	sahf   
  4031af:	fidiv  WORD PTR [esi+0x57]
  4031b2:	push   0x63
  4031b4:	int    0xae
  4031b6:	inc    edx
  4031b7:	dec    edi
  4031b8:	mov    bh,0xc4
  4031ba:	and    al,0xbf
  4031bc:	daa    
  4031bd:	dec    ebp
  4031be:	call   0xc2e4:0x68a5e712
  4031c5:	aad    0xab
  4031c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c8:	sbb    edi,DWORD PTR [esi]
  4031ca:	lahf   
  4031cb:	and    DWORD PTR ds:0xf4a0f5e6,esi
  4031d1:	loopne 0x403222
  4031d3:	(bad)  
  4031d4:	stc    
  4031d5:	jo     0x40321d
  4031d7:	cmp    ax,WORD PTR [eax-0x40]
  4031db:	xor    al,0xc5
  4031dd:	mov    esp,0xdd05484e
  4031e2:	mov    esi,0x6ebece06
  4031e7:	cmova  edx,DWORD PTR [eax+edx*2]
  4031eb:	jle    0x40318c
  4031ed:	addr16 inc ebp
  4031ef:	xchg   esp,eax
  4031f0:	inc    edi
  4031f1:	bswap  eax
  4031f3:	iret   
  4031f4:	dec    edx
  4031f5:	fld    TBYTE PTR [edx+0x26]
  4031f8:	jno    0x4031b7
  4031fa:	xor    edi,DWORD PTR [edi-0x7b]
  4031fd:	mov    DWORD PTR [ebp+0x6f02b21],ebp
  403203:	cmp    BYTE PTR [ebx-0x2a],al
  403206:	clc    
  403207:	sbb    al,0xa1
  403209:	in     al,0x8e
  40320b:	cmc    
  40320c:	jae    0x4031f2
  40320e:	enter  0xe15,0x9f
  403212:	out    dx,eax
  403213:	sub    eax,0x5e62f246
  403218:	dec    esp
  403219:	icebp  
  40321a:	mov    ch,0xec
  40321c:	mov    al,ds:0x6cb6fa42
  403221:	sub    eax,0x1a21db64
  403226:	dec    ecx
  403227:	data16 jbe 0x40327b
  40322a:	(bad)  
  40322b:	xchg   ecx,eax
  40322c:	repnz dec esi
  40322e:	into   
  40322f:	daa    
  403230:	jmp    0xb8b2:0xf9f37cf7
  403237:	loopne 0x40329e
  403239:	(bad)  
  40323a:	nop
  40323b:	pushf  
  40323c:	cmp    eax,0x4ae7788d
  403241:	pushf  
  403242:	inc    ebx
  403243:	ss clc 
  403245:	jb     0x4032c6
  403247:	sub    eax,0x3ec1ae3c
  40324c:	pop    edi
  40324d:	xor    BYTE PTR [eax],dh
  40324f:	fild   WORD PTR [edx+0x72]
  403252:	sub    DWORD PTR [esi],ebp
  403254:	das    
  403255:	mov    ecx,0xe831790
  40325a:	mov    ebx,0xb88e47e1
  40325f:	shr    DWORD PTR [ebx+0x7c],0x74
  403263:	(bad)
  403266:	push   es
  403267:	lock mov ah,0xc0
  40326a:	push   esp
  40326b:	sub    al,0xe3
  40326d:	push   ds
  40326e:	fldcw  WORD PTR [esi+0x19]
  403271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403272:	ret    0xf5df
  403275:	dec    eax
  403276:	xor    eax,0xa9c98d4b
  40327b:	addr16 inc eax
  40327d:	scas   eax,DWORD PTR es:[edi]
  40327e:	jb     0x403246
  403280:	xchg   DWORD PTR [ebp-0x6632d386],edi
  403286:	dec    esp
  403287:	cwde   
  403288:	xor    ebp,ecx
  40328a:	sub    BYTE PTR [esi+edi*4-0x5c],0xa4
  40328f:	bnd call 0x67d4af4d
  403295:	shl    DWORD PTR [ecx+0x2eb6b6c5],cl
  40329b:	mov    dl,0x9e
  40329d:	mov    ch,BYTE PTR [esp+eax*2]
  4032a0:	hlt    
  4032a1:	fcom   st(4)
  4032a3:	dec    esi
  4032a4:	in     al,dx
  4032a5:	dec    ecx
  4032a6:	pop    ebp
  4032a7:	bound  ebp,QWORD PTR [edi+0x15]
  4032aa:	mov    BYTE PTR [eax+ecx*4],cl
  4032ad:	adc    al,0xe8
  4032af:	mov    al,BYTE PTR ss:[edx-0x4767e323]
  4032b6:	cld    
  4032b7:	push   eax
  4032b8:	adc    ecx,ebx
  4032ba:	sbb    eax,0x275131c
  4032bf:	addr16 mov dl,0xe7
  4032c2:	jmp    0xc25164d8
  4032c7:	sub    ecx,esp
  4032c9:	sub    ch,BYTE PTR [ebx]
  4032cb:	xor    DWORD PTR [eax],eax
  4032cd:	shr    BYTE PTR [eax+esi*2+0x5d87957e],cl
  4032d4:	cmp    dh,bl
  4032d6:	push   esi
  4032d7:	lds    eax,FWORD PTR [ebp+0x7cc913b5]
  4032dd:	jge    0x4032ff
  4032df:	and    BYTE PTR ds:0x17d5523d,bl
  4032e5:	cli    
  4032e6:	(bad)  
  4032e7:	pop    edi
  4032e8:	cmp    ch,BYTE PTR [esi]
  4032ea:	dec    BYTE PTR [eax]
  4032ec:	adc    al,0xa0
  4032ee:	xchg   edx,eax
  4032ef:	ret    
  4032f0:	jp     0x403303
  4032f2:	es pop esp
  4032f4:	or     BYTE PTR [edx+0x5ffdbeda],bh
  4032fa:	pusha  
  4032fb:	push   ebp
  4032fc:	push   esp
  4032fd:	inc    esp
  4032fe:	inc    eax
  4032ff:	or     edi,ebx
  403301:	cwde   
  403302:	push   ecx
  403303:	inc    esp
  403304:	or     dh,0xe7
  403307:	fnstcw WORD PTR [ebx]
  403309:	scas   eax,DWORD PTR es:[edi]
  40330a:	sub    BYTE PTR [eax+0x3f],bh
  40330d:	cwde   
  40330e:	inc    esp
  40330f:	cmp    BYTE PTR [edx],0xcc
  403312:	stos   DWORD PTR es:[edi],eax
  403313:	lods   eax,DWORD PTR ds:[esi]
  403314:	cmp    eax,DWORD PTR [ebx+0x20]
  403317:	mov    cl,0xcd
  403319:	imul   esi,DWORD PTR [di-0x733f],0xffffffab
  40331f:	lds    eax,FWORD PTR [ebx+0x63]
  403322:	mov    dh,0x40
  403324:	jns    0x403348
  403326:	in     eax,dx
  403327:	xchg   edx,eax
  403328:	les    edx,FWORD PTR [edx]
  40332a:	dec    ecx
  40332c:	push   eax
  40332d:	push   edi
  40332e:	cmp    ch,BYTE PTR [ebp+0x32]
  403331:	mov    eax,0xea2a0912
  403336:	not    DWORD PTR [edx]
  403338:	(bad)  
  403339:	xor    DWORD PTR [ecx],ebp
  40333b:	mov    edi,0xc28a0da9
  403340:	jne    0x403388
  403342:	(bad)  
  403343:	cld    
  403344:	inc    eax
  403345:	xchg   esp,eax
  403346:	retf   0x7b27
  403349:	dec    ebp
  40334a:	js     0x403343
  40334c:	pop    ebx
  40334d:	stos   BYTE PTR es:[edi],al
  40334e:	add    al,0xa8
  403350:	pop    esi
  403351:	in     eax,0xd2
  403353:	xor    al,0x3
  403355:	imul   ebx,DWORD PTR [ebp-0x6fd95d5e],0xd0b029
  40335f:	in     eax,0xac
  403361:	add    DWORD PTR [esi-0x1a036374],0x6c
  403368:	add    BYTE PTR [ecx-0x3b35e7f0],dl
  40336e:	aaa    
  40336f:	add    DWORD PTR [edi+0x4563daf7],esp
  403375:	mov    ds:0x202745b,al
  40337a:	ja     0x4033e1
  40337c:	imul   eax,DWORD PTR [eax],0xe27f8c7
  403382:	pop    edx
  403383:	imul   eax,edx,0x627ed9e8
  403389:	xor    ecx,0xffffffcb
  40338c:	sub    BYTE PTR [esi],dh
  40338e:	mov    ecx,0xf83402d0
  403393:	repz mov dh,0x19
  403396:	int3   
  403397:	(bad)  
  403399:	pusha  
  40339a:	ret    0x80c7
  40339d:	jno    0x403323
  40339f:	cs adc bh,bl
  4033a2:	or     DWORD PTR [edi-0x18],ebp
  4033a5:	pop    ebx
  4033a6:	pop    ds
  4033a7:	pop    ebx
  4033a8:	jae    0x4033f3
  4033aa:	jle    0x4033ae
  4033ac:	int3   
  4033ad:	push   eax
  4033ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033af:	push   ds
  4033b0:	jl     0x403413
  4033b2:	pop    ss
  4033b3:	ret    
  4033b4:	(bad)  
  4033b5:	es out dx,ax
  4033b8:	arpl   dx,dx
  4033ba:	addr16 loope 0x4033cd
  4033bd:	or     eax,0xc94cad3a
  4033c2:	xor    ebp,esi
  4033c4:	xchg   esp,eax
  4033c5:	xchg   esp,eax
  4033c6:	stos   BYTE PTR es:[edi],al
  4033c7:	inc    edi
  4033c8:	jecxz  0x40336e
  4033ca:	cmp    cl,BYTE PTR [ebx]
  4033cc:	call   0xf756:0x7acd80cc
  4033d3:	imul   edi,DWORD PTR [ecx],0xffffffaf
  4033d6:	dec    eax
  4033d7:	inc    ebx
  4033d8:	pop    edx
  4033d9:	sbb    BYTE PTR [eax+0x70dfba75],al
  4033df:	ficom  WORD PTR [esi+0x6a]
  4033e2:	jmp    0xc34d:0x7ab90832
  4033e9:	std    
  4033ea:	data16 fild DWORD PTR [edi+0x140e188b]
  4033f1:	out    dx,eax
  4033f2:	mov    BYTE PTR [ecx-0x3279ddb4],bh
  4033f8:	(bad)  
  4033f9:	imul   ebx,DWORD PTR [ebx+0x54f8571d],0x1f
  403400:	cmc    
  403401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403402:	repz cmp ah,bl
  403405:	sub    edx,DWORD PTR [edx]
  403407:	fwait
  403408:	in     al,0x21
  40340a:	inc    esp
  40340b:	daa    
  40340c:	(bad)  
  40340d:	rcl    DWORD PTR [ebp-0x10bf7bb0],cl
  403413:	lea    edx,[edi+0x7f4bc76a]
  403419:	push   ds
  40341a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40341b:	in     al,0x6a
  40341d:	ins    DWORD PTR es:[edi],dx
  40341e:	pop    es
  40341f:	sbb    eax,0x646040ff
  403424:	std    
  403425:	stc    
  403426:	xchg   DWORD PTR [esi-0x50],ebx
  403429:	jmp    0x403480
  40342b:	dec    eax
  40342c:	repnz retf 
  40342e:	mov    eax,0xf345f3da
  403433:	add    BYTE PTR [eax-0x374994b4],bh
  403439:	or     al,0xef
  40343b:	or     BYTE PTR [ebp+0x78],0x41
  40343f:	cmp    eax,0x6288e054
  403444:	or     al,0xe
  403446:	jo     0x403400
  403448:	mov    edi,0x88b094cd
  40344d:	(bad)  
  40344e:	or     esi,esi
  403450:	mov    eax,0xc7c67d07
  403455:	jnp    0x4034cf
  403457:	neg    BYTE PTR [edx-0x5841d34c]
  40345d:	addr16 daa 
  40345f:	shl    DWORD PTR [ebx],cl
  403461:	(bad)  
  403462:	cli    
  403463:	aad    0xb9
  403465:	pushf  
  403466:	(bad)
  403469:	test   WORD PTR [esi],bx
  40346c:	addr16 (bad) 
  40346e:	clc    
  40346f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403470:	sub    DWORD PTR [ecx+0x6c],edx
  403473:	jl     0x4034aa
  403475:	mov    ebx,0x17a49d5a
  40347a:	dec    edx
  40347b:	xlat   BYTE PTR ds:[ebx]
  40347c:	mov    cl,0xef
  40347e:	ficom  WORD PTR [eax-0x37]
  403481:	fcom   QWORD PTR [edx]
  403483:	lods   eax,DWORD PTR ds:[esi]
  403484:	imul   esi,DWORD PTR gs:[ebx-0x6dc746a],0x41b34649
  40348f:	xor    eax,0x43570932
  403494:	push   eax
  403495:	jmp    0x906:0x7d41861b
  40349c:	stos   DWORD PTR es:[edi],eax
  40349d:	xor    DWORD PTR [ebp-0x36],0x7a
  4034a1:	pop    edi
  4034a2:	add    esi,DWORD PTR [esi+0x16ce1238]
  4034a8:	mov    edx,0x1091d07c
  4034ad:	imul   edx,DWORD PTR [ebx],0xea5df355
  4034b3:	aas    
  4034b4:	arpl   bx,bp
  4034b6:	xchg   esp,eax
  4034b7:	pushf  
  4034b8:	push   es
  4034b9:	adc    al,0xfe
  4034bb:	mov    ds:0x5d8465ac,al
  4034c0:	(bad)  
  4034c2:	cmp    cl,BYTE PTR [ebp+ebx*4-0x1032089a]
  4034c9:	sub    ah,BYTE PTR [ebx+ebx*1]
  4034cc:	adc    eax,0xde495f40
  4034d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034d2:	xchg   edi,eax
  4034d3:	cwde   
  4034d4:	dec    ecx
  4034d5:	retf   0x9251
  4034d8:	adc    edx,DWORD PTR [ebx+ebx*4+0x755862a]
  4034df:	call   0x8750:0x13cae580
  4034e6:	sti    
  4034e7:	mov    ds:0xfe4f887,al
  4034ec:	(bad)  
  4034ee:	popa   
  4034ef:	xchg   DWORD PTR [esi-0x232bed53],esp
  4034f5:	mul    ah
  4034f7:	mov    esp,0x6d128cfe
  4034fc:	call   0x4c36:0x4fc8de10
  403503:	sti    
  403504:	pop    ebx
  403505:	fs pop ecx
  403507:	add    eax,0x2f752b02
  40350c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40350d:	adc    eax,0x7abcd7c8
  403512:	dec    ebp
  403513:	push   ds
  403514:	cmp    al,0x8b
  403516:	pop    ebx
  403517:	add    ah,BYTE PTR [edx+0x6f]
  40351a:	sbb    ebx,DWORD PTR [ebp+0x2]
  40351d:	ret    0x3242
  403520:	or     DWORD PTR [eax+0x41ffb28d],edi
  403526:	pop    es
  403527:	stos   DWORD PTR es:[edi],eax
  403528:	cmp    DWORD PTR [eax-0x63],0x37
  40352c:	sbb    ecx,DWORD PTR [edx+0x61]
  40352f:	mov    dh,0x84
  403531:	inc    ecx
  403532:	call   0x2e2d9a99
  403537:	out    dx,al
  403538:	outs   dx,DWORD PTR ds:[esi]
  403539:	imul   edi,DWORD PTR [esi-0x1206474b],0xa017d835
  403543:	fdivr  QWORD PTR [edx]
  403545:	es or  eax,0x6f131103
  40354b:	adc    ebx,eax
  40354d:	jmp    0xbda6:0x273049f3
  403554:	cmp    eax,DWORD PTR [esi-0x7077e521]
  40355a:	loopne 0x403550
  40355c:	fcomp  DWORD PTR [eax+eax*8-0x16398b40]
  403563:	in     al,dx
  403564:	fsubr  st,st(6)
  403566:	and    al,0x53
  403568:	clc    
  403569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356a:	fwait
  40356b:	mov    WORD PTR [edx],es
  40356d:	sbb    DWORD PTR cs:[esi-0x77e2906f],edx
  403574:	outs   dx,BYTE PTR ds:[esi]
  403575:	or     al,0x50
  403577:	aaa    
  403578:	nop
  403579:	jae    0x4035ea
  40357b:	imul   ebx,DWORD PTR [eax],0x601c9f82
  403581:	es (bad) 
  403584:	daa    
  403585:	icebp  
  403586:	clc    
  403587:	adc    eax,0x47ce7976
  40358c:	lock or DWORD PTR [edi],eax
  40358f:	jg     0x403576
  403591:	scas   eax,DWORD PTR es:[edi]
  403592:	scas   al,BYTE PTR es:[edi]
  403593:	cli    
  403594:	fcomp  QWORD PTR [edi-0x6097a685]
  40359a:	out    dx,eax
  40359b:	push   ds
  40359c:	daa    
  40359d:	mov    ebx,0x87911c41
  4035a2:	iret   
  4035a3:	call   0x1aed:0x5fb35fce
  4035aa:	call   0xda9b37e8
  4035af:	xchg   esi,eax
  4035b0:	jb     0x4035c2
  4035b2:	mov    ch,0x9e
  4035b4:	lods   al,BYTE PTR ds:[esi]
  4035b5:	adc    eax,0xe6933ef4
  4035ba:	mov    cl,0x23
  4035bc:	sub    eax,0xcd57d9b
  4035c1:	fadd   st,st(6)
  4035c3:	xor    al,0x44
  4035c5:	mov    dl,0x3b
  4035c7:	pop    ds
  4035c8:	adc    ecx,esp
  4035ca:	into   
  4035cb:	or     DWORD PTR [esi-0x28],ecx
  4035ce:	out    dx,eax
  4035cf:	push   ss
  4035d0:	fwait
  4035d1:	addr16 sti 
  4035d3:	xor    ch,dl
  4035d5:	push   ecx
  4035d6:	adc    BYTE PTR [edi],al
  4035d8:	ins    BYTE PTR es:[edi],dx
  4035d9:	cs ret 0x6618
  4035dd:	neg    DWORD PTR [edx+0x6eec3662]
  4035e3:	sub    bl,ah
  4035e5:	loope  0x40362c
  4035e7:	mov    eax,ebp
  4035e9:	aas    
  4035ea:	retf   
  4035eb:	fs xchg ebx,eax
  4035ed:	and    edi,ebp
  4035ef:	lahf   
  4035f0:	(bad)  
  4035f1:	xor    ah,BYTE PTR [ecx-0x41c27a29]
  4035f7:	mov    al,ds:0x25baf5a1
  4035fc:	mov    eax,ds:0x5e338e11
  403601:	sub    BYTE PTR [edx+0x552dc531],ah
  403607:	jg     0x4035e2
  403609:	dec    ecx
  40360a:	int    0x97
  40360c:	ficom  WORD PTR [ecx]
  40360e:	popf   
  40360f:	shl    dl,cl
  403611:	xlat   BYTE PTR ds:[ebx]
  403612:	push   0x1179596c
  403617:	out    0xfe,al
  403619:	cmp    ah,BYTE PTR [eax*8+0x71d00da8]
  403620:	or     DWORD PTR [ebx],esp
  403622:	int3   
  403623:	jl     0x4036a0
  403625:	mov    ecx,0x2d3c0f7
  40362a:	add    DWORD PTR [edx+ebp*2+0x1aafdd32],esp
  403631:	inc    esp
  403632:	mov    DWORD PTR [ecx-0x4b868024],ebx
  403638:	(bad)  
  40363a:	jne    0x403692
  40363c:	mov    al,ds:0x9d0fd688
  403641:	sbb    BYTE PTR [ebx-0x5ea65043],0xe9
  403648:	mov    dl,0xc7
  40364a:	sti    
  40364b:	ror    BYTE PTR [edi-0x18f4da29],1
  403651:	repz jl 0x403620
  403654:	(bad)  
  403655:	bound  edx,QWORD PTR [esi+0x28]
  403658:	sub    eax,0x1b84741
  40365d:	push   0xffffff83
  40365f:	mov    dl,BYTE PTR [ecx]
  403661:	inc    esp
  403662:	xchg   ebx,eax
  403663:	xor    dl,BYTE PTR [esi+0x32f11a52]
  403669:	gs inc eax
  40366b:	mov    eax,0xff7ca6f5
  403670:	retf   
  403671:	outs   dx,BYTE PTR ds:[esi]
  403672:	inc    ecx
  403673:	mov    BYTE PTR [esi],bl
  403675:	push   esi
  403676:	stos   DWORD PTR es:[edi],eax
  403677:	cmp    BYTE PTR [ecx],bl
  403679:	or     ebx,ebx
  40367b:	xchg   BYTE PTR [ecx-0x5be4a73b],cl
  403681:	aad    0xfd
  403683:	xchg   ebp,eax
  403684:	xor    edx,ecx
  403686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403687:	cli    
  403688:	out    dx,eax
  403689:	lods   al,BYTE PTR ds:[esi]
  40368a:	jb     0x403686
  40368c:	or     ch,ch
  40368e:	cmp    BYTE PTR [edi],ah
  403690:	adc    eax,0x65dc9c3b
  403695:	mov    esp,0x1ab91ccf
  40369a:	pop    ss
  40369b:	dec    eax
  40369c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40369d:	aam    0x88
  40369f:	cmp    al,0x77
  4036a1:	aad    0xe2
  4036a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036a4:	mov    al,0x2
  4036a6:	cmp    BYTE PTR [ebx],ah
  4036a8:	mov    DWORD PTR [eax-0x7f82311],ebx
  4036ae:	jg     0x40363b
  4036b0:	jecxz  0x4036b4
  4036b2:	xchg   esp,eax
  4036b3:	xlat   BYTE PTR ds:[ebx]
  4036b4:	mov    bh,0xdd
  4036b6:	xor    eax,0xba5a4ae1
  4036bb:	dec    edx
  4036bc:	adc    bl,BYTE PTR ds:0xb37fa5bc
  4036c2:	and    eax,0xd6ba4a61
  4036c7:	xor    al,BYTE PTR [bx+si-0x7b]
  4036cb:	pop    ecx
  4036cc:	inc    esi
  4036cd:	ja     0x4036dd
  4036cf:	or     ebx,ebx
  4036d1:	retf   
  4036d2:	cdq    
  4036d3:	pop    ebp
  4036d4:	shr    ah,0x79
  4036d7:	pop    DWORD PTR ss:[eax-0x2c]
  4036db:	mov    edi,0x499ddc41
  4036e0:	or     BYTE PTR [edx+0x6071a33d],0xc3
  4036e7:	or     esi,ebp
  4036e9:	iret   
  4036ea:	aas    
  4036eb:	arpl   WORD PTR [ebx],bx
  4036ed:	(bad)  
  4036ee:	fidiv  WORD PTR [ebx+0x20]
  4036f1:	inc    esi
  4036f2:	test   DWORD PTR [ecx-0x15],ebx
  4036f5:	and    eax,0x10ef524e
  4036fa:	sahf   
  4036fb:	dec    eax
  4036fc:	pop    ss
  4036fd:	or     bl,al
  4036ff:	push   eax
  403700:	test   eax,0xe4405606
  403705:	mov    ecx,0xe6a97ff5
  40370a:	or     edi,DWORD PTR [ebx+0x2d]
  40370d:	or     al,ah
  40370f:	push   esi
  403710:	push   eax
  403711:	add    al,0x3a
  403713:	sbb    cl,BYTE PTR [ebx-0x50c28094]
  403719:	inc    esi
  40371a:	or     DWORD PTR [ecx-0x1a262160],esi
  403720:	bound  esi,QWORD PTR [ebx+0x3d2746c0]
  403726:	dec    edx
  403727:	ss stos DWORD PTR es:[edi],eax
  403729:	shl    BYTE PTR [edx+0x13],0x96
  40372d:	mov    ebx,0x17194ff0
  403732:	jns    0x4036d7
  403734:	xchg   BYTE PTR ds:0xe8498be,ah
  40373a:	add    DWORD PTR [edi+eiz*2+0xc],esp
  40373e:	xor    bh,BYTE PTR [esi-0x72]
  403741:	call   0xbad9:0x5bff2500
  403748:	test   DWORD PTR [edx],esi
  40374a:	out    0x8a,al
  40374c:	or     DWORD PTR [eax],ecx
  40374e:	mov    edi,0x6615bd2c
  403753:	std    
  403754:	dec    ebx
  403755:	cmp    al,0xe8
  403757:	sti    
  403758:	retfw  
  40375a:	and    bh,dl
  40375c:	stc    
  40375d:	aas    
  40375e:	aam    0x6a
  403760:	imul   edi,DWORD PTR [esi],0xffffffbb
  403763:	sub    eax,0x19f01841
  403768:	cmc    
  403769:	and    ebx,0x5482fd86
  40376f:	pop    edi
  403770:	mov    dl,0x63
  403772:	or     eax,0x395dba74
  403777:	std    
  403778:	xor    ebx,eax
  40377a:	(bad)  
  40377b:	pop    edx
  40377c:	and    eax,DWORD PTR [ebx-0x695ebaed]
  403782:	mov    esp,0xafd82db5
  403787:	push   ebp
  403788:	jg     0x4037bb
  40378a:	dec    ebp
  40378b:	out    0x16,eax
  40378d:	push   eax
  40378e:	addr16 jmp 0x37fb9b29
  403794:	lock clc 
  403796:	dec    eax
  403797:	syscall 
  403799:	std    
  40379a:	xor    ah,BYTE PTR [edx+ebp*2]
  40379d:	inc    ebp
  40379e:	ret    
  40379f:	inc    ecx
  4037a0:	xchg   BYTE PTR [edi+0xbd8a7d6],bh
  4037a6:	push   ebx
  4037a7:	jg     0x403753
  4037a9:	jb     0x403775
  4037ab:	dec    edi
  4037ac:	add    DWORD PTR [edx-0x50],esp
  4037af:	sbb    BYTE PTR [ecx*4+0x31deb01e],0x70
  4037b7:	les    eax,FWORD PTR [esi+0x2a]
  4037ba:	push   ds
  4037bb:	jae    0x403813
  4037bd:	mov    dh,BYTE PTR [edx-0x55]
  4037c0:	mov    esp,esi
  4037c2:	dec    esi
  4037c3:	int    0xa9
  4037c5:	jl     0x40375d
  4037c7:	mov    bh,0xdb
  4037c9:	dec    ebx
  4037ca:	dec    esp
  4037cb:	scas   eax,DWORD PTR es:[edi]
  4037cc:	sub    esp,DWORD PTR [ecx+0x5e]
  4037cf:	jmp    0x74e672ef
  4037d4:	gs adc eax,0xd7741576
  4037da:	jmp    0x403842
  4037dc:	and    al,0xa
  4037de:	cmc    
  4037df:	mov    cl,BYTE PTR [edx-0x1349d89e]
  4037e5:	test   DWORD PTR [ecx],ecx
  4037e7:	stc    
  4037e8:	icebp  
  4037e9:	inc    esi
  4037ea:	mov    al,0x4f
  4037ec:	loop   0x40385c
  4037ee:	mov    esp,0x60383bbd
  4037f3:	adc    BYTE PTR [ebx],ah
  4037f5:	mov    eax,0x316fd6ce
  4037fa:	dec    edi
  4037fb:	call   0xd09d:0xb3dad41d
  403802:	pop    ss
  403803:	sub    BYTE PTR [eax+0x77],ah
  403806:	imul   edx,ebx,0xffffffce
  403809:	jp     0x403816
  40380b:	pop    edx
  40380c:	pop    edi
  40380d:	adc    eax,0x2128432b
  403812:	mov    ds:0xbd0f6d85,al
  403817:	xchg   edx,eax
  403818:	mov    edx,0xdb6e79c6
  40381d:	(bad)  
  40381e:	cmp    al,BYTE PTR [edi+edi*1+0x6db2dfaa]
  403825:	mov    esp,0x5bd359c5
  40382a:	cmp    ebx,DWORD PTR [eax+0x1fbdf7fc]
  403830:	push   edx
  403831:	cmp    DWORD PTR [edi+0x16f1cca3],0x5a
  403838:	adc    eax,0xdf2fa0d4
  40383d:	adc    BYTE PTR [ecx-0x54],cl
  403840:	xchg   ecx,eax
  403841:	inc    DWORD PTR [esi+0x1e]
  403844:	xchg   edx,eax
  403845:	call   0xfe3a288
  40384a:	in     eax,0x20
  40384c:	jle    0x4037dc
  40384e:	retf   
  40384f:	inc    esi
  403850:	fmul   QWORD PTR [eax+edi*4-0x6caf1f12]
  403857:	fdivr  DWORD PTR [ecx]
  403859:	les    edi,FWORD PTR [ebx]
  40385b:	in     eax,dx
  40385c:	mov    ebx,0x12ac8b9c
  403861:	sbb    al,0x9f
  403863:	(bad)  
  403864:	cmp    eax,0x5a7590c6
  403869:	jb     0x403874
  40386b:	adc    ax,0xc51d
  40386f:	loop   0x40381a
  403871:	mov    BYTE PTR [ecx-0x6acb6561],bh
  403877:	sbb    dh,BYTE PTR [edi+0x75]
  40387a:	outs   dx,DWORD PTR ds:[esi]
  40387b:	rol    al,1
  40387d:	pop    edi
  40387e:	je     0x40387a
  403880:	ins    DWORD PTR es:[edi],dx
  403881:	repz ret 
  403883:	outs   dx,BYTE PTR ds:[esi]
  403884:	adc    DWORD PTR [edi-0x658c6819],edx
  40388a:	xor    al,0xeb
  40388c:	cmp    DWORD PTR [eax+0x4c],esp
  40388f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403890:	push   edx
  403891:	sub    al,0x87
  403893:	test   al,0x58
  403895:	pop    ss
  403896:	mov    ecx,0xda434ad0
  40389b:	stos   BYTE PTR es:[edi],al
  40389c:	shl    BYTE PTR [esi-0x1],0xf3
  4038a0:	out    dx,al
  4038a1:	popa   
  4038a2:	xor    eax,0xa84bef97
  4038a7:	scas   al,BYTE PTR es:[edi]
  4038a8:	and    eax,0x50dfb084
  4038ad:	outs   dx,BYTE PTR ds:[esi]
  4038ae:	or     ebx,DWORD PTR [edi+ecx*1]
  4038b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b2:	(bad)  
  4038b3:	jnp    0x40392e
  4038b5:	adc    dl,BYTE PTR [ebx+0x77c3d21c]
  4038bb:	aaa    
  4038bc:	dec    esi
  4038bd:	shl    DWORD PTR [ecx-0x75],1
  4038c0:	push   es
  4038c1:	gs dec esi
  4038c3:	sbb    al,0x7
  4038c5:	xor    BYTE PTR [eax],dl
  4038c7:	out    0xed,al
  4038c9:	mov    esi,0x387989ae
  4038ce:	repnz dec ebx
  4038d0:	mov    ds:0x47732b70,eax
  4038d5:	pop    esi
  4038d6:	sbb    dl,BYTE PTR [edi+0x360febdf]
  4038dc:	imul   eax,ebx,0x31
  4038df:	mov    ds:0x4d4ef3aa,al
  4038e4:	ins    BYTE PTR es:[edi],dx
  4038e5:	xchg   esp,eax
  4038e6:	scas   al,BYTE PTR es:[edi]
  4038e7:	lahf   
  4038e8:	sbb    ebx,DWORD PTR [ecx+ecx*8]
  4038eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038ec:	stos   BYTE PTR es:[edi],al
  4038ed:	in     al,dx
  4038ee:	mov    esi,0x89ff35c
  4038f3:	loop   0x403953
  4038f5:	pop    esi
  4038f6:	in     eax,0x4b
  4038f8:	dec    ebx
  4038f9:	in     al,dx
  4038fa:	adc    eax,0x8599539
  4038ff:	pop    ebx
  403900:	cmp    ah,BYTE PTR [ecx-0x3dfd532c]
  403906:	push   eax
  403907:	add    al,0x99
  403909:	adc    al,0x48
  40390b:	jl     0x403920
  40390d:	jecxz  0x40397a
  40390f:	inc    ecx
  403910:	leave  
  403911:	jmp    DWORD PTR [esi-0x77]
  403914:	xor    edi,DWORD PTR [esi+0x4e3a5dfe]
  40391a:	mov    dh,0x5e
  40391c:	push   0xd9d17b53
  403921:	mov    eax,DWORD PTR [eax-0xb554f30]
  403927:	retf   
  403928:	repnz out dx,eax
  40392a:	clc    
  40392b:	mov    ds:0xc452aa09,al
  403930:	dec    esi
  403931:	in     eax,0xf4
  403933:	inc    ebx
  403934:	sbb    esi,edx
  403936:	adc    eax,0xa40b5f65
  40393b:	sub    al,0xa1
  40393d:	pop    esp
  40393e:	sbb    bl,dh
  403940:	jo     0x4038e7
  403942:	repz add cl,dh
  403945:	shl    BYTE PTR [edx],1
  403947:	mov    ds,WORD PTR [esi]
  403949:	and    BYTE PTR [edx+0x55],cl
  40394c:	adc    ebx,ebp
  40394e:	dec    esi
  40394f:	mov    cl,0x8c
  403951:	dec    esp
  403952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403953:	mov    ebx,0xb8801b07
  403958:	xchg   ecx,eax
  403959:	into   
  40395a:	cli    
  40395b:	inc    ebx
  40395c:	inc    ecx
  40395d:	adc    DWORD PTR [eax-0x57],edx
  403960:	adc    edi,ecx
  403962:	aam    0xe7
  403964:	scas   al,BYTE PTR es:[edi]
  403965:	stos   DWORD PTR es:[edi],eax
  403966:	scas   eax,DWORD PTR es:[edi]
  403967:	mov    dh,0xfd
  403969:	mov    ds:0xe94e06ee,al
  40396e:	jl     0x4038f9
  403970:	scas   al,BYTE PTR es:[edi]
  403971:	loopne 0x403987
  403973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403974:	shl    edx,cl
  403976:	xchg   esp,eax
  403977:	jo     0x403914
  403979:	adc    al,0x6c
  40397b:	sub    ebp,DWORD PTR ds:[eax+esi*1+0x41aa969a]
  403983:	and    ah,bl
  403985:	push   ecx
  403986:	mov    ebp,0x91bb64b3
  40398b:	xor    al,0x6b
  40398d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40398e:	mov    DWORD PTR [eax+0x23],esi
  403991:	ss aaa 
  403993:	push   esp
  403994:	add    BYTE PTR [ebp+0x2c],dl
  403997:	cmp    bl,0xd9
  40399a:	and    eax,0x3e48c307
  40399f:	push   es
  4039a0:	mov    BYTE PTR [edi],al
  4039a2:	cmc    
  4039a3:	pop    eax
  4039a4:	mov    ebx,0x19902925
  4039a9:	xor    eax,0x2405ae6c
  4039ae:	pop    ebx
  4039af:	test   ebx,ecx
  4039b1:	push   es
  4039b2:	pop    edx
  4039b3:	add    BYTE PTR [edi+eiz*4+0x76],ch
  4039b7:	jno    0x403977
  4039b9:	cmp    BYTE PTR [edi],bh
  4039bb:	xor    ah,cl
  4039bd:	cmc    
  4039be:	cmp    ch,0x53
  4039c1:	adc    eax,0x4a1b21a3
  4039c6:	enter  0xa5b1,0xc0
  4039ca:	sub    al,bh
  4039cc:	cmp    cl,0x4b
  4039cf:	in     eax,dx
  4039d0:	cmc    
  4039d1:	inc    ebp
  4039d2:	fcomp  DWORD PTR [edi]
  4039d4:	fwait
  4039d5:	pop    ds
  4039d6:	cdq    
  4039d7:	sahf   
  4039d8:	xchg   esp,eax
  4039d9:	sahf   
  4039da:	jmp    0xee23:0xda6fb94d
  4039e1:	dec    eax
  4039e2:	fistp  QWORD PTR [edi]
  4039e4:	inc    ebp
  4039e5:	pop    esi
  4039e6:	mov    ah,0xd1
  4039e8:	outs   dx,BYTE PTR ds:[esi]
  4039e9:	pop    ebp
  4039ea:	ja     0x403a01
  4039ec:	inc    BYTE PTR [ecx-0x5]
  4039ef:	aas    
  4039f0:	mov    esp,0xe013f2a5
  4039f5:	inc    ebx
  4039f6:	in     al,dx
  4039f7:	xor    al,BYTE PTR [edx]
  4039f9:	xchg   ebp,eax
  4039fa:	xchg   edi,eax
  4039fb:	adc    BYTE PTR [ebx],cl
  4039fd:	add    ah,BYTE PTR ds:0x7da8aa40
  403a03:	add    ecx,edx
  403a05:	xor    esp,DWORD PTR [ebx+0x19]
  403a08:	ins    DWORD PTR es:[edi],dx
  403a09:	fiadd  DWORD PTR [ebp+0x41]
  403a0c:	sub    esp,DWORD PTR fs:[edx+0x475e0c5a]
  403a13:	cmp    bl,bl
  403a15:	adc    eax,0xa13ce627
  403a1a:	lea    ecx,[ebp+eiz*1+0x7ced7ea8]
  403a21:	stos   BYTE PTR es:[edi],al
  403a22:	pop    ebp
  403a23:	jp     0x403a1a
  403a25:	addr16 push eax
  403a27:	loop   0x403a9f
  403a29:	pop    ebx
  403a2a:	mov    edi,DWORD PTR [ebp+0x64]
  403a2d:	fidiv  DWORD PTR [ebx-0x45bbbea1]
  403a33:	outs   dx,BYTE PTR ds:[esi]
  403a34:	sar    DWORD PTR [ebx],1
  403a36:	outs   dx,DWORD PTR ds:[esi]
  403a37:	lahf   
  403a38:	xchg   edi,eax
  403a39:	test   eax,0xba0c1205
  403a3e:	xor    edi,DWORD PTR [ebp+0x4b]
  403a41:	jbe    0x4039e1
  403a43:	popf   
  403a44:	repz out dx,al
  403a46:	push   es
  403a47:	pop    esp
  403a48:	dec    ebx
  403a49:	push   0x65
  403a4b:	add    al,0x4e
  403a4d:	or     BYTE PTR [esi-0x27],bh
  403a50:	aam    0x44
  403a52:	pop    ebp
  403a53:	push   esp
  403a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a55:	xchg   edi,eax
  403a56:	icebp  
  403a57:	sub    DWORD PTR [edi],edx
  403a59:	sbb    BYTE PTR [edi],0xac
  403a5c:	mov    dh,0x49
  403a5e:	xchg   edi,eax
  403a5f:	mov    al,ds:0x81729f0e
  403a64:	daa    
  403a65:	xchg   ecx,eax
  403a66:	sbb    ebp,ebx
  403a68:	cmp    ebx,DWORD PTR [eax-0x34]
  403a6b:	push   ss
  403a6c:	mov    ecx,0x8e7a7962
  403a71:	iret   
  403a72:	pop    edi
  403a73:	adc    ebx,esi
  403a75:	add    DWORD PTR [ebp+0x9],ebx
  403a78:	test   BYTE PTR [ebx+0x59],cl
  403a7b:	and    edi,DWORD PTR [ebx]
  403a7d:	lods   eax,DWORD PTR ds:[esi]
  403a7e:	pop    esi
  403a7f:	(bad)
  403a82:	adc    al,0x58
  403a84:	sbb    esp,DWORD PTR [ebx-0x34301661]
  403a8a:	add    DWORD PTR [ebx+0x15],ebx
  403a8d:	xchg   ecx,eax
  403a8e:	mov    ah,0x4e
  403a90:	xor    al,0x52
  403a92:	pusha  
  403a93:	pop    ss
  403a94:	push   ebx
  403a95:	repz les ebx,FWORD PTR [edx]
  403a98:	lods   eax,DWORD PTR ds:[esi]
  403a99:	jmp    0xd3bc24bc
  403a9e:	xchg   ebp,eax
  403a9f:	inc    ecx
  403aa0:	jne    0x403aa2
  403aa2:	and    ebx,DWORD PTR [eax-0x70]
  403aa5:	push   ds
  403aa6:	loope  0x403a4e
  403aa8:	fidiv  WORD PTR [bp+di+0x96b]
  403aad:	mov    ebp,0x3b817911
  403ab2:	dec    eax
  403ab3:	arpl   WORD PTR [edx+0x68728a15],ax
  403ab9:	cmp    al,0x8
  403abb:	jb     0x403a7a
  403abd:	shl    BYTE PTR [edx+edi*2],1
  403ac0:	pop    ebp
  403ac1:	dec    ebp
  403ac2:	rcr    DWORD PTR [edi+edx*1],cl
  403ac5:	call   0x5a59afe3
  403aca:	lods   al,BYTE PTR ds:[esi]
  403acb:	push   ecx
  403acc:	aad    0x7e
  403ace:	cmc    
  403acf:	(bad)  
  403ad1:	mov    ebx,0x35316f99
  403ad6:	mov    ecx,0xf072d23e
  403adb:	dec    edi
  403adc:	inc    edx
  403add:	cdq    
  403ade:	xchg   ebp,eax
  403adf:	xor    BYTE PTR [ebx+ebx*1-0x2],cl
  403ae3:	or     al,0x58
  403ae5:	mov    ch,0x55
  403ae7:	mov    esp,0x844afd2
  403aec:	push   ebp
  403aed:	in     eax,0x51
  403aef:	rcr    BYTE PTR [ebp+0x7c],1
  403af2:	sub    esi,DWORD PTR [edx+0x2fdf5734]
  403af8:	ss cli 
  403afa:	inc    esi
  403afb:	stc    
  403afc:	dec    edi
  403afd:	cmc    
  403afe:	jb     0x403b49
  403b00:	mov    ebx,0xd7cbd997
  403b05:	sbb    DWORD PTR [esi],ecx
  403b07:	nop
  403b08:	add    BYTE PTR ds:0x45142e1d,ah
  403b0e:	mov    esp,0xd2ff01ec
  403b13:	mov    eax,0xb59cdb96
  403b18:	inc    ebp
  403b19:	ret    0x6a60
  403b1c:	adc    edi,DWORD PTR [ebp+0x199b5ea0]
  403b22:	int3   
  403b23:	mov    bh,0x8e
  403b25:	aas    
  403b26:	lock mov BYTE PTR ds:0xc72b6d63,ah
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429bcf
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fisttp QWORD PTR ds:0xef3f60fb
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xfffffff0
  403ca6:	push   0x936f50f7
  403cab:	pop    ss
  403cac:	push   es
  403cad:	sbb    ecx,ecx
  403caf:	xchg   BYTE PTR ds:0xc321d8f7,bh
  403cb5:	mov    edi,0xf1b56fbe
  403cba:	outs   dx,DWORD PTR fs:[esi]
  403cbc:	xor    ch,bl
  403cbe:	or     al,0x21
  403cc0:	pop    esi
  403cc1:	ret    0xedd5
  403cc4:	imul   ebp,DWORD PTR [esi+esi*1],0x2d
  403cc8:	adc    al,BYTE PTR [eax+0x49]
  403ccb:	in     eax,0xce
  403ccd:	pop    edi
  403cce:	in     al,0xe6
  403cd0:	or     eax,DWORD PTR [eax+0x50]
  403cd3:	jno    0x403d41
  403cd5:	ret    0x1ecf
  403cd8:	ins    DWORD PTR es:[edi],dx
  403cd9:	cmp    DWORD PTR [esi+0x7c16c89a],eax
  403cdf:	and    al,0x2b
  403ce1:	xor    dh,BYTE PTR [eax-0x18]
  403ce4:	stos   DWORD PTR es:[edi],eax
  403ce5:	aad    0x0
  403ce7:	rcr    BYTE PTR [esi+ebx*8],0x66
  403ceb:	sub    BYTE PTR [ecx+0x75],0xf6
  403cef:	in     eax,dx
  403cf0:	imul   eax,edi,0xfffffffd
  403cf3:	push   0xa11bb851
  403cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cf9:	pop    esp
  403cfa:	dec    ebx
  403cfb:	aam    0xf8
  403cfd:	bound  edi,QWORD PTR [ebp-0x655ffa5f]
  403d03:	pop    eax
  403d04:	push   eax
  403d05:	add    bl,bh
  403d07:	jmp    0x96ae:0xe253300b
  403d0e:	stc    
  403d0f:	int    0xba
  403d11:	int    0xb8
  403d13:	push   cs
  403d14:	inc    edx
  403d15:	test   BYTE PTR [edx-0x6e],dl
  403d18:	repz or eax,0x208f2ddf
  403d1e:	xchg   ebp,eax
  403d1f:	mov    esp,0xebb3ec1b
  403d24:	mov    BYTE PTR [eax+0xb],bl
  403d27:	adc    DWORD PTR [ecx+0xa],esi
  403d2a:	jmp    0xb78c32d2
  403d2f:	iret   
  403d30:	in     eax,0xb2
  403d32:	stos   BYTE PTR es:[edi],al
  403d33:	inc    ebx
  403d34:	ds adc esi,ebp
  403d37:	and    ch,BYTE PTR [eax+edi*8-0x28]
  403d3b:	mov    dl,0x84
  403d3d:	lock sub eax,0xf32abfb4
  403d43:	mov    bl,BYTE PTR [ebp+0x45]
  403d46:	shl    dl,cl
  403d48:	jb     0x403d73
  403d4a:	push   eax
  403d4b:	dec    esp
  403d4c:	shl    DWORD PTR [ecx],0x3
  403d4f:	lea    esi,[ebx+0x4]
  403d52:	clc    
  403d53:	adc    esp,DWORD PTR [edi]
  403d55:	repnz xchg edi,eax
  403d57:	sbb    eax,0xc7845f63
  403d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d5d:	push   esp
  403d5e:	push   ecx
  403d5f:	xchg   DWORD PTR [eax],esp
  403d61:	dec    edi
  403d62:	aas    
  403d63:	lods   eax,DWORD PTR ds:[esi]
  403d64:	mov    esi,0x66f456ae
  403d69:	pusha  
  403d6a:	sub    ebp,0x13
  403d6d:	push   ebx
  403d6e:	cmp    eax,0x110c5d08
  403d73:	les    ebp,FWORD PTR [ecx+0x73cdcdd7]
  403d79:	jbe    0x403d58
  403d7b:	retf   
  403d7c:	sbb    dl,BYTE PTR [ecx-0x51]
  403d7f:	push   edx
  403d80:	aad    0xde
  403d82:	jle    0x403dc8
  403d84:	ss xchg edi,edi
  403d87:	or     BYTE PTR [edx],al
  403d89:	xchg   esp,eax
  403d8a:	push   ebx
  403d8b:	add    eax,0xa6239b02
  403d90:	call   0x858a72d3
  403d95:	inc    ecx
  403d96:	jno    0x403dd1
  403d98:	popf   
  403d99:	leave  
  403d9a:	call   FWORD PTR [ebx+ecx*2-0x49]
  403d9e:	stos   BYTE PTR es:[edi],al
  403d9f:	push   edi
  403da0:	pop    ss
  403da1:	mov    ds:0x9a7361b1,al
  403da6:	fcomp  DWORD PTR [esi]
  403da8:	stos   DWORD PTR es:[edi],eax
  403da9:	pop    esp
  403daa:	mov    edi,0x4ee16d91
  403daf:	push   eax
  403db0:	repnz adc BYTE PTR [ecx+0x6b],ch
  403db4:	test   BYTE PTR [eax+0x235fc10],bl
  403dba:	jmp    0x403dfc
  403dbc:	jae    0x403db9
  403dbe:	mov    esi,0x1bee46b6
  403dc3:	mov    al,0x87
  403dc5:	mov    cl,0x72
  403dc7:	test   BYTE PTR [ebx],bl
  403dc9:	add    ecx,0xecd9ce38
  403dcf:	mov    eax,0x699491f
  403dd4:	pop    ecx
  403dd5:	std    
  403dd6:	scas   al,BYTE PTR es:[edi]
  403dd7:	push   esi
  403dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dd9:	(bad)  
  403dda:	ss data16 sti 
  403ddd:	leave  
  403dde:	sbb    BYTE PTR [ecx-0x6e46f21f],bl
  403de4:	dec    ecx
  403de5:	pop    edx
  403de6:	pushf  
  403de7:	jnp    0x403dff
  403de9:	test   eax,edi
  403deb:	sub    edx,DWORD PTR [ebp+0x0]
  403dee:	gs addr16 cmp eax,0x5f85cdf5
  403df5:	dec    edi
  403df6:	in     eax,dx
  403df7:	iret   
  403df8:	cmp    bl,BYTE PTR [ecx+0x52]
  403dfb:	daa    
  403dfc:	dec    DWORD PTR [esi+0x2d4cb5f1]
  403e02:	mov    cs,WORD PTR ss:[ebx+0x41295d7f]
  403e09:	aam    0x3f
  403e0b:	jg     0x403e12
  403e0d:	(bad)  
  403e0e:	mov    eax,0x517dc8ea
  403e13:	xchg   edi,eax
  403e14:	jnp    0x403dfc
  403e16:	loop   0x403e22
  403e18:	add    dh,BYTE PTR [ebp-0x1559f154]
  403e1e:	adc    eax,edi
  403e20:	(bad)  
  403e21:	jge    0x403dd3
  403e23:	sbb    dl,cl
  403e25:	cmp    al,0xd3
  403e27:	call   0x7605:0xa40e4e42
  403e2e:	int3   
  403e2f:	add    edx,DWORD PTR ds:0x45b92b18
  403e35:	data16 fldcw WORD PTR [esi-0x65]
  403e39:	clc    
  403e3a:	fistp  QWORD PTR [ebx]
  403e3c:	xchg   ecx,eax
  403e3d:	inc    ebx
  403e3e:	adc    ecx,edi
  403e40:	pop    esp
  403e41:	mov    gs,WORD PTR [eax-0x2a]
  403e44:	(bad)  
  403e46:	sub    ah,BYTE PTR [ebp+0x5ede65a5]
  403e4c:	pop    eax
  403e4d:	outs   dx,DWORD PTR ds:[esi]
  403e4e:	shl    cl,1
  403e50:	inc    edx
  403e51:	out    dx,eax
  403e52:	rol    BYTE PTR [edx+0x38eec812],cl
  403e58:	and    ah,BYTE PTR [ebx+esi*2+0x1f]
  403e5c:	imul   DWORD PTR ds:0xcf1e8b6
  403e62:	jmp    0xed41110a
  403e67:	push   esp
  403e68:	les    ebx,FWORD PTR [esi-0x7a7648c4]
  403e6e:	into   
  403e6f:	imul   ebp,DWORD PTR [esi],0x68672d89
  403e75:	sbb    al,BYTE PTR ss:[eax]
  403e78:	cmc    
  403e79:	push   0xffffffaa
  403e7b:	shl    BYTE PTR [eax+0x40],1
  403e7e:	xchg   ecx,eax
  403e7f:	lods   al,BYTE PTR ds:[esi]
  403e80:	pop    ss
  403e81:	sbb    dh,dl
  403e83:	sub    BYTE PTR [ebp+0x41],ah
  403e86:	mov    esi,fs
  403e88:	cdq    
  403e89:	pop    ebp
  403e8a:	dec    eax
  403e8b:	push   eax
  403e8c:	fldcw  WORD PTR [eax]
  403e8e:	popa   
  403e8f:	aas    
  403e90:	bound  ecx,QWORD PTR [edx]
  403e92:	jb     0x403e5f
  403e94:	mov    esp,0xb770a19f
  403e99:	das    
  403e9a:	jns    0x403e46
  403e9c:	push   esi
  403e9d:	dec    esp
  403e9e:	test   al,0xab
  403ea0:	adc    eax,0x75229f5d
  403ea5:	push   edi
  403ea6:	adc    DWORD PTR [ebp+0x12],0x20c4fac6
  403ead:	push   eax
  403eae:	(bad)  
  403eaf:	call   0x874b:0x1bccd717
  403eb6:	fs scas eax,DWORD PTR es:[edi]
  403eb8:	leave  
  403eb9:	test   eax,0x6d1c546c
  403ebe:	fimul  WORD PTR [edx+0x456a99f4]
  403ec4:	call   0x47cb:0x2842d5bf
  403ecb:	push   ebx
  403ecc:	and    eax,0x1822d758
  403ed1:	hlt    
  403ed2:	lea    ecx,[edi]
  403ed4:	shl    DWORD PTR [ecx],0x46
  403ed7:	lea    eax,es:[esi]
  403eda:	push   ecx
  403edb:	data16 int3 
  403edd:	into   
  403ede:	mov    edx,0x379cde2d
  403ee3:	jns    0x403f64
  403ee5:	push   ecx
  403ee6:	in     al,dx
  403ee7:	add    ebp,DWORD PTR [eax+0x31212fb]
  403eed:	(bad)  
  403eef:	jne    0x403e75
  403ef1:	dec    ebx
  403ef2:	into   
  403ef3:	or     al,0xaa
  403ef5:	xchg   ebp,esp
  403ef7:	xchg   edi,eax
  403ef8:	adc    edi,DWORD PTR [ecx+0x4d]
  403efb:	fwait
  403efc:	imul   DWORD PTR [edx]
  403efe:	aad    0x25
  403f00:	loopne 0x403eff
  403f02:	push   esi
  403f03:	call   0x748c08e8
  403f08:	sub    bh,dl
  403f0a:	mov    ebx,0x793a850
  403f0f:	sub    eax,0x6cba69a7
  403f14:	out    0x82,al
  403f16:	mov    ah,BYTE PTR [esp+ebp*1+0x13be3e64]
  403f1d:	les    ebx,FWORD PTR [esi-0x6b745af6]
  403f23:	(bad)  
  403f24:	fcmovnb st,st(7)
  403f26:	mov    eax,0xe65d6a78
  403f2b:	xor    al,0x3a
  403f2d:	fdivr  st(7),st
  403f2f:	add    ebp,DWORD PTR [ecx]
  403f31:	jnp    0x403f6b
  403f33:	xor    eax,0x5b375cb7
  403f38:	imul   ebp,DWORD PTR [eax-0x28],0x3ff28ab8
  403f3f:	dec    eax
  403f40:	xchg   esi,eax
  403f41:	mov    BYTE PTR [ebx],dl
  403f43:	sbb    bh,BYTE PTR [ecx]
  403f45:	push   ss
  403f46:	shl    BYTE PTR [ebx+0x43aef3bd],cl
  403f4c:	xchg   edx,eax
  403f4d:	pop    edi
  403f4e:	in     eax,dx
  403f4f:	xor    DWORD PTR [esi+0x23],eax
  403f52:	mov    dl,BYTE PTR [esi+0x247fd26c]
  403f58:	cmc    
  403f59:	adc    al,0x9f
  403f5b:	mov    esp,0xd5b4943
  403f60:	jnp    0x403fc4
  403f62:	(bad)  
  403f64:	repnz retf 
  403f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f67:	leave  
  403f68:	dec    esp
  403f69:	pop    ss
  403f6a:	mov    ebx,0xb629f4e6
  403f6f:	ror    BYTE PTR [ecx+ebx*1-0x69db33e3],cl
  403f76:	fwait
  403f77:	aad    0xca
  403f79:	loop   0x403ff1
  403f7b:	and    dl,BYTE PTR [eax+0x3164fb42]
  403f81:	daa    
  403f82:	add    al,0xe8
  403f84:	out    0x34,eax
  403f86:	xor    ebp,DWORD PTR ds:0x68cb70c4
  403f8c:	outs   dx,DWORD PTR ds:[esi]
  403f8d:	jne    0x403fb2
  403f8f:	sub    al,0xeb
  403f91:	cld    
  403f92:	and    esi,DWORD PTR [edx]
  403f94:	cdq    
  403f95:	ret    0x1ba6
  403f98:	push   edx
  403f99:	sbb    cl,BYTE PTR [edi+0x6957c2ca]
  403f9f:	retf   0x6b5b
  403fa2:	rcr    DWORD PTR [eax],cl
  403fa4:	cmp    eax,0x40194439
  403fa9:	out    0xb8,eax
  403fab:	aaa    
  403fac:	and    bl,dl
  403fae:	ret    0xa03e
  403fb1:	mov    edi,esp
  403fb3:	sub    al,BYTE PTR [eax]
  403fb5:	cld    
  403fb6:	jmp    0x40401c
  403fb8:	ror    BYTE PTR [ebx-0x47],1
  403fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fbc:	xchg   ecx,eax
  403fbd:	or     bl,al
  403fbf:	inc    ecx
  403fc0:	into   
  403fc1:	xor    BYTE PTR [ebx-0x7f76a2ac],0x47
  403fc8:	dec    ebp
  403fc9:	(bad)  
  403fca:	sub    DWORD PTR [ecx+0x2d],edi
  403fcd:	fdiv   st(3),st
  403fcf:	fiadd  DWORD PTR fs:[eax+0x6ecac27f]
  403fd6:	js     0x403f8a
  403fd8:	mov    edi,0x35d8691d
  403fdd:	pop    ebp
  403fde:	lds    edx,FWORD PTR ds:0x98aabd69
  403fe4:	pop    esp
  403fe5:	xor    eax,0x74b4128c
  403fea:	ss hlt 
  403fec:	loopne 0x403f88
  403fee:	cmp    bh,bl
  403ff0:	adc    BYTE PTR [ebp-0xb],bh
  403ff3:	loope  0x403fdb
  403ff5:	and    DWORD PTR [edx-0x6a9bd567],ebp
  403ffb:	inc    edi
  403ffc:	dec    ecx
  403ffd:	(bad)  
  403ffe:	stos   DWORD PTR es:[edi],eax
  403fff:	fsubr  DWORD PTR [edi+ebp*1]
  404002:	jp     0x404029
  404004:	sahf   
  404005:	jno    0x403fec
  404007:	addr16 dec ecx
  404009:	jg     0x404065
  40400b:	inc    eax
  40400c:	push   0x49c8a09f
  404011:	lods   al,BYTE PTR ds:[esi]
  404012:	jo     0x40406a
  404014:	xchg   esp,eax
  404015:	push   ebp
  404016:	jmp    0xf0e87c0b
  40401b:	ror    BYTE PTR [esi+0x3327c7b6],0xbf
  404022:	out    dx,eax
  404023:	stos   DWORD PTR es:[edi],eax
  404024:	adc    eax,0x4e88d4c2
  404029:	mov    dl,0x52
  40402b:	loopne 0x404015
  40402d:	push   es
  40402e:	fisttp QWORD PTR ds:0x36b359d5
  404034:	loope  0x403fd1
  404036:	popf   
  404037:	(bad)
  40403c:	sub    BYTE PTR [ebp+edx*4+0x8],al
  404040:	jnp    0x404009
  404042:	popa   
  404043:	or     ch,BYTE PTR [ecx]
  404045:	call   0x8b3dc788
  40404a:	jne    0x403ffd
  40404c:	cmp    eax,0x5706e360
  404051:	fidiv  DWORD PTR [edi+0x2c]
  404054:	cli    
  404055:	pop    esi
  404056:	(bad)  
  404057:	mov    esp,0x69f6f43c
  40405c:	xchg   BYTE PTR [eax-0x3f1871c3],ah
  404062:	mov    WORD PTR [edi+eax*2],?
  404065:	popf   
  404066:	iret   
  404067:	inc    ecx
  404068:	xchg   BYTE PTR [esi],cl
  40406a:	xchg   edx,eax
  40406b:	add    ah,bh
  40406d:	pushf  
  40406e:	and    eax,0xd3d1ef6a
  404073:	pop    edi
  404074:	pushf  
  404075:	ja     0x403ff7
  404077:	(bad)  
  404078:	and    dh,BYTE PTR [edi+0x74aeb54]
  40407e:	xlat   BYTE PTR ds:[ebx]
  40407f:	mov    edx,0xfb2ace82
  404084:	scas   eax,DWORD PTR es:[edi]
  404085:	xchg   DWORD PTR [ebx],esi
  404087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404088:	mov    DWORD PTR [ebp-0x41],0x5a9af57d
  40408f:	mov    eax,0x33bf736d
  404094:	in     al,0x4a
  404096:	inc    eax
  404097:	sub    dh,ah
  404099:	stos   DWORD PTR es:[edi],eax
  40409a:	int    0xc0
  40409c:	mov    ebx,0xc2923ca3
  4040a1:	or     al,0xf0
  4040a3:	xchg   ebp,eax
  4040a4:	mov    ecx,DWORD PTR [esi-0x173e70fd]
  4040aa:	jp     0x4040c9
  4040ac:	mov    BYTE PTR [ebx+0x6297b134],cl
  4040b2:	pusha  
  4040b3:	mov    ch,0xd4
  4040b5:	aad    0xde
  4040b7:	data16 lahf 
  4040b9:	fucomp st(7)
  4040bb:	or     edi,DWORD PTR [ebp-0x55bebe5f]
  4040c1:	out    0xca,al
  4040c3:	mov    ebp,0x1521b2c1
  4040c8:	cmp    BYTE PTR [ebp-0x606419e9],0x3d
  4040cf:	das    
  4040d0:	mov    cl,0xc2
  4040d2:	retf   
  4040d3:	(bad)  
  4040d4:	call   0x279c3d29
  4040d9:	out    dx,eax
  4040da:	iret   
  4040db:	or     ah,al
  4040dd:	mov    ebp,0x542faf04
  4040e2:	pusha  
  4040e3:	xchg   DWORD PTR [ebx+0x2a],esi
  4040e6:	xchg   esi,eax
  4040e7:	pop    edx
  4040e8:	sbb    bh,ah
  4040ea:	and    eax,0xc769cb92
  4040ef:	jmp    0x349c6c55
  4040f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040f5:	sub    eax,0x3b274490
  4040fa:	xor    BYTE PTR [ecx+edi*2],cl
  4040fd:	scas   al,BYTE PTR es:[edi]
  4040fe:	(bad)
  404101:	xchg   ebp,eax
  404102:	daa    
  404103:	ins    DWORD PTR es:[edi],dx
  404104:	out    0x6c,eax
  404106:	call   DWORD PTR [ebx-0x20]
  404109:	push   edi
  40410a:	stos   DWORD PTR es:[edi],eax
  40410b:	lahf   
  40410c:	fs sub ch,dh
  40410f:	dec    eax
  404110:	and    cl,cl
  404112:	sub    al,bh
  404114:	xchg   edx,eax
  404115:	inc    edx
  404116:	sbb    cl,BYTE PTR [edi+0x56329e46]
  40411c:	cld    
  40411d:	sub    DWORD PTR [eax-0x54b1ce0b],edi
  404123:	xchg   esp,eax
  404124:	adc    BYTE PTR [edi+0x258ed94f],al
  40412a:	or     eax,0x414846a1
  40412f:	dec    ebx
  404130:	js     0x4040f0
  404132:	loop   0x40411d
  404134:	mov    cl,BYTE PTR ss:[eax-0x17dc3019]
  40413b:	pushf  
  40413c:	cld    
  40413d:	pop    eax
  40413e:	in     al,dx
  40413f:	ret    
  404140:	cmp    edi,esp
  404142:	cdq    
  404143:	sbb    dh,BYTE PTR [esi]
  404145:	sub    eax,0x6b186dd2
  40414a:	scas   eax,DWORD PTR es:[edi]
  40414b:	push   edx
  40414c:	sub    eax,esp
  40414e:	lds    edi,FWORD PTR [edi]
  404150:	pop    edi
  404151:	aas    
  404152:	ror    DWORD PTR ds:0x3c45922c,cl
  404158:	xor    BYTE PTR [edi-0x2c2a4ea7],0xd
  40415f:	les    edi,FWORD PTR [edx-0x5a8e3bec]
  404165:	out    0x58,al
  404167:	enter  0x819c,0xe3
  40416b:	push   ecx
  40416c:	mov    eax,0xe61059b9
  404171:	leave  
  404172:	test   BYTE PTR [ebx-0x21],dh
  404175:	lock aaa 
  404177:	das    
  404178:	jecxz  0x4041ad
  40417a:	aaa    
  40417b:	ds fadd st,st(7)
  40417e:	jnp    0x404107
  404180:	stc    
  404181:	mov    cl,0xb
  404183:	fld    TBYTE PTR [ebx-0x61]
  404186:	in     al,0xa9
  404188:	cs jge 0x4041cd
  40418b:	xchg   ecx,eax
  40418c:	out    0x69,al
  40418e:	jle    0x4041aa
  404190:	jae    0x404185
  404192:	scas   al,BYTE PTR es:[edi]
  404193:	mov    ebx,DWORD PTR [ebp-0x58]
  404196:	or     DWORD PTR [ebp-0x5e],esp
  404199:	mov    bh,0xb
  40419b:	fsub   QWORD PTR [ecx]
  40419d:	lahf   
  40419e:	or     dl,BYTE PTR [ebp+0x9]
  4041a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041a2:	inc    esi
  4041a3:	test   ebp,eax
  4041a5:	jmp    0xc04e:0x562f87c1
  4041ac:	inc    ecx
  4041ad:	cmp    BYTE PTR [ebx+0x24ae58ed],bl
  4041b3:	sbb    eax,0xcd6f3b83
  4041b8:	setl   al
  4041bb:	sbb    DWORD PTR [ebx],esi
  4041bd:	mov    esi,0x3400b5eb
  4041c2:	push   0x37428aca
  4041c7:	or     al,ch
  4041c9:	(bad)  
  4041ca:	ins    BYTE PTR es:[edi],dx
  4041cb:	mov    cl,al
  4041cd:	sub    ah,al
  4041cf:	int    0x62
  4041d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d2:	fs inc edx
  4041d4:	(bad)  
  4041d5:	inc    esi
  4041d6:	sar    ecx,cl
  4041d8:	mov    eax,0x18304831
  4041dd:	cmp    al,0xb2
  4041df:	sbb    ecx,DWORD PTR [edx-0x9374099]
  4041e5:	mov    ch,BYTE PTR [ebx]
  4041e7:	sub    bh,bl
  4041e9:	push   edx
  4041ea:	enter  0x7069,0x93
  4041ee:	xor    BYTE PTR [ecx-0x188c6ee0],dh
  4041f4:	xor    BYTE PTR [ebx+0x24],0x9d
  4041f8:	mov    bl,0xf2
  4041fa:	loopne 0x404234
  4041fc:	ins    DWORD PTR es:[edi],dx
  4041fd:	mov    bl,0xe8
  4041ff:	fwait
  404200:	or     cl,0xab
  404203:	mov    BYTE PTR [ebp+0x34b0e93b],0xa4
  40420a:	scas   eax,DWORD PTR es:[edi]
  40420b:	clc    
  40420c:	adc    DWORD PTR [ebx],ecx
  40420e:	mov    ds:0xd2115f45,eax
  404213:	mov    ebp,0x85f4c5a
  404218:	rcr    DWORD PTR [esi],0xa
  40421b:	jmp    0xf82c:0xa3eb4c53
  404222:	mov    edi,0xf713e76
  404227:	ror    BYTE PTR [ebx],0x2d
  40422a:	mov    dh,0x92
  40422c:	int    0x20
  40422e:	daa    
  40422f:	test   BYTE PTR [esi],ch
  404231:	xor    eax,0x17974271
  404236:	mov    al,0x84
  404238:	imul   ebx,DWORD PTR [ecx-0x1],0x1c
  40423c:	in     eax,dx
  40423d:	xchg   esi,eax
  40423e:	push   eax
  40423f:	or     ah,BYTE PTR [eax-0x38]
  404242:	dec    eax
  404243:	adc    BYTE PTR [ebp+0x77],bl
  404246:	daa    
  404247:	(bad)  
  404248:	out    0x81,eax
  40424a:	mul    BYTE PTR [esi]
  40424c:	dec    eax
  40424d:	pop    ebp
  40424e:	out    0x83,al
  404250:	mov    ch,0x39
  404252:	fbld   TBYTE PTR [ebp-0x7c]
  404255:	dec    esi
  404256:	push   0x2f
  404258:	retf   0x563a
  40425b:	test   DWORD PTR [eax+ecx*4],edi
  40425e:	test   al,0x27
  404260:	xor    ebx,DWORD PTR [ebp+0x16]
  404263:	fistp  DWORD PTR [ecx-0x1f48e1ea]
  404269:	sub    bh,BYTE PTR [edx-0x3094d7ce]
  40426f:	(bad)  
  404271:	pop    ecx
  404272:	inc    ebx
  404273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404274:	mov    edi,0x7e9282ce
  404279:	push   esi
  40427a:	aaa    
  40427b:	add    ecx,ecx
  40427d:	pop    edi
  40427e:	pushf  
  40427f:	cmp    al,0xc5
  404281:	xchg   ebp,eax
  404282:	les    edi,FWORD PTR [edi+eiz*8-0x418cd6ea]
  404289:	test   bl,ch
  40428b:	fiadd  WORD PTR [edi-0x7a]
  40428e:	sbb    ecx,esp
  404290:	xor    al,0xe4
  404292:	or     BYTE PTR [ebp-0x202494e4],bl
  404298:	ja     0x40421f
  40429a:	ss mov ch,0xe0
  40429d:	mov    gs,ebx
  40429f:	inc    DWORD PTR [edi+0x21]
  4042a2:	jge    0x4042fb
  4042a4:	es xchg ebx,eax
  4042a6:	mov    dh,0x99
  4042a8:	cmp    al,0x38
  4042aa:	in     al,0x7b
  4042ac:	xchg   ebp,eax
  4042ad:	out    0x56,al
  4042af:	test   ebx,ecx
  4042b1:	loope  0x404275
  4042b3:	(bad)  
  4042b4:	fwait
  4042b5:	div    DWORD PTR [edi+0x1e]
  4042b8:	dec    ecx
  4042b9:	pusha  
  4042ba:	lods   eax,DWORD PTR ds:[esi]
  4042bb:	cmc    
  4042bc:	dec    ecx
  4042bd:	sbb    al,0x9a
  4042bf:	gs mov eax,0xa229952e
  4042c5:	leave  
  4042c6:	jg     0x404263
  4042c8:	or     al,0x30
  4042ca:	std    
  4042cb:	cdq    
  4042cc:	fld    QWORD PTR [esi-0x59]
  4042cf:	retf   
  4042d0:	loop   0x404279
  4042d2:	jle    0x40427c
  4042d4:	ror    DWORD PTR [ebx-0x4b],0x9d
  4042d8:	pop    esi
  4042d9:	push   es
  4042da:	sbb    BYTE PTR [ebx-0x56],0x86
  4042de:	lea    edx,[eax]
  4042e0:	arpl   WORD PTR [eax],di
  4042e2:	(bad)  
  4042e4:	add    DWORD PTR [ecx],edi
  4042e6:	mov    DWORD PTR [ebx+0x24bee3b1],esi
  4042ec:	mov    ebx,0x9a417fde
  4042f1:	mov    ecx,DWORD PTR [edx+0x3c]
  4042f4:	inc    edx
  4042f5:	sub    BYTE PTR [ecx],dl
  4042f7:	sub    ebp,ecx
  4042f9:	test   eax,0x293bb09f
  4042fe:	mov    esi,0x3c2a6f1e
  404303:	jns    0x404316
  404305:	cmovbe eax,DWORD PTR [edi-0x59]
  404309:	push   ss
  40430a:	out    0xdc,al
  40430c:	pop    ss
  40430d:	and    ebx,ebx
  40430f:	mov    al,ds:0xb16d7aae
  404314:	scas   eax,DWORD PTR es:[edi]
  404315:	cmp    DWORD PTR ds:0x4c7a0f14,0xffffff89
  40431c:	sub    bl,BYTE PTR [edx]
  40431e:	xor    bh,BYTE PTR [edi]
  404320:	cmp    ebx,ecx
  404322:	pop    ds
  404323:	inc    ecx
  404324:	add    eax,0xa50fb313
  404329:	aad    0xdc
  40432b:	div    DWORD PTR [ebp+0x535b9d08]
  404331:	icebp  
  404332:	inc    edi
  404333:	push   ss
  404334:	add    ebp,esi
  404336:	idiv   BYTE PTR [esi-0xb]
  404339:	dec    ecx
  40433a:	xor    BYTE PTR [eax-0x6474dcc5],ah
  404340:	cmp    al,0x7b
  404342:	int    0x6d
  404344:	cli    
  404345:	(bad)  
  404346:	mov    eax,ds:0x3d96461a
  40434b:	clc    
  40434c:	adc    DWORD PTR [eax+0x512a8e99],ebx
  404352:	icebp  
  404353:	rol    DWORD PTR [ebx-0x74],cl
  404356:	int    0x3f
  404358:	sbb    ch,BYTE PTR [edx-0x7c]
  40435b:	xor    ch,BYTE PTR [ebp-0x31]
  40435e:	pop    es
  40435f:	scas   al,BYTE PTR es:[edi]
  404360:	test   eax,0x85e459d1
  404365:	retf   0x824f
  404368:	test   al,0x5d
  40436a:	aad    0x90
  40436c:	xor    DWORD PTR [edx],esi
  40436e:	loopne 0x404369
  404370:	adc    BYTE PTR [eax-0x1046f9f6],0x1b
  404377:	sahf   
  404378:	pop    ds
  404379:	push   0xffffffb9
  40437b:	test   DWORD PTR [ebx+0x71cfb3c],esi
  404381:	mov    al,0xb
  404383:	or     DWORD PTR [ecx+edx*4+0x26],edx
  404387:	xchg   ecx,eax
  404388:	sub    ebp,DWORD PTR [esi+0x49]
  40438b:	(bad)  
  40438c:	sub    ch,BYTE PTR [ebp+eax*2-0x63]
  404390:	sub    eax,0x2deb4763
  404395:	psubq  mm2,QWORD PTR [ebx+0x2c0bb88b]
  40439c:	ror    DWORD PTR [ebx],1
  40439e:	in     al,dx
  40439f:	lods   al,BYTE PTR ds:[esi]
  4043a0:	pop    ebx
  4043a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043a2:	inc    edi
  4043a3:	aaa    
  4043a4:	(bad)  
  4043a5:	call   0xaa07f3d7
  4043aa:	ja     0x4043c5
  4043ac:	mov    dh,0x71
  4043ae:	stc    
  4043af:	sbb    al,0x1f
  4043b1:	pop    ebp
  4043b2:	ins    DWORD PTR es:[edi],dx
  4043b3:	das    
  4043b4:	push   ebp
  4043b5:	cdq    
  4043b6:	mov    ah,0x38
  4043b8:	rol    DWORD PTR [ebx-0x4c],cl
  4043bb:	or     ah,BYTE PTR [ebx+eiz*2-0x5239008c]
  4043c2:	push   gs
  4043c4:	cmp    cl,ch
  4043c6:	sub    al,0xb0
  4043c8:	jb     0x4043d0
  4043ca:	mov    bh,0x47
  4043cc:	sub    DWORD PTR [ebx],esi
  4043ce:	cmp    al,0xa1
  4043d0:	jle    0x404388
  4043d2:	test   DWORD PTR [ecx-0x78f53412],eax
  4043d8:	mov    dl,0x1e
  4043da:	test   eax,0x2791eb
  4043df:	mov    eax,?
  4043e1:	inc    ebp
  4043e2:	push   0x82511412
  4043e7:	or     bh,ah
  4043e9:	(bad)  
  4043eb:	or     cl,al
  4043ed:	in     eax,dx
  4043ee:	and    eax,0xa8c00f25
  4043f3:	add    eax,0xf63cb929
  4043f8:	icebp  
  4043f9:	push   eax
  4043fa:	test   BYTE PTR es:[ebx],bl
  4043fd:	mov    DWORD PTR [esi+0x2dd895c2],0x693b8b6e
  404407:	mov    esi,DWORD PTR ds:0x9212d33a
  40440d:	icebp  
  40440e:	jbe    0x404456
  404410:	and    al,0x58
  404412:	inc    esp
  404413:	daa    
  404414:	out    dx,al
  404415:	outs   dx,BYTE PTR ds:[esi]
  404416:	mov    ecx,0x1ace1258
  40441b:	in     al,0x80
  40441d:	sbb    al,0x1f
  40441f:	jg     0x4043e0
  404421:	call   0xea6d12f
  404426:	hlt    
  404427:	into   
  404428:	daa    
  404429:	ins    BYTE PTR es:[edi],dx
  40442a:	sbb    eax,DWORD PTR [ebx+0x78]
  40442d:	xchg   DWORD PTR [esp+ecx*1-0x592ba2c1],ecx
  404434:	mov    DWORD PTR [edx+0x56],ecx
  404437:	xchg   esp,eax
  404438:	jno    0x4044af
  40443a:	mov    eax,0xa65053bf
  40443f:	in     eax,0x84
  404441:	pop    ss
  404442:	add    DWORD PTR [esi-0x53],eax
  404445:	mov    ah,0x2b
  404447:	and    BYTE PTR [edi-0x6b],ch
  40444a:	in     al,dx
  40444b:	push   ebp
  40444c:	push   esp
  40444d:	or     esp,eax
  40444f:	cmp    eax,0x1b87b30c
  404454:	pop    ecx
  404455:	xchg   edx,eax
  404456:	push   ebp
  404457:	ins    BYTE PTR es:[edi],dx
  404458:	nop
  404459:	jge    0x404427
  40445b:	sub    al,0x82
  40445d:	mov    ebx,0x99329040
  404462:	xor    eax,0x731848f3
  404467:	ret    0x9197
  40446a:	mov    bl,0xe6
  40446c:	aaa    
  40446d:	call   0x33eb705a
  404472:	and    BYTE PTR [edi],dh
  404474:	xlat   BYTE PTR ds:[ebx]
  404475:	push   edi
  404476:	add    ch,BYTE PTR [ebx+0x9]
  404479:	ficomp WORD PTR [edi-0x27]
  40447c:	fsub   st,st(2)
  40447e:	push   es
  40447f:	inc    ecx
  404480:	and    eax,0xab03375b
  404485:	pop    edx
  404486:	test   BYTE PTR [ebx+eiz*1+0x65555804],dh
  40448d:	outs   dx,DWORD PTR ds:[esi]
  40448e:	add    DWORD PTR [ebx],0xf76366d8
  404494:	mov    esi,0x53892ac
  404499:	(bad)  
  40449a:	jo     0x4044f1
  40449c:	call   0x1cf48fb8
  4044a1:	fld    QWORD PTR [eax]
  4044a3:	inc    ebp
  4044a4:	imul   ecx,DWORD PTR [esi-0x5412c62d],0x50652fb9
  4044ae:	and    eax,0x6ad54b76
  4044b3:	bound  esi,QWORD PTR [edx+0x63439288]
  4044b9:	sbb    al,0x57
  4044bb:	mov    bh,0xec
  4044bd:	cmp    BYTE PTR [ebx],dh
  4044bf:	sbb    eax,0xb66d2a2d
  4044c4:	stos   DWORD PTR es:[edi],eax
  4044c5:	xor    eax,0xc3e1aa36
  4044ca:	daa    
  4044cb:	or     ebp,DWORD PTR ds:0x468e90be
  4044d1:	fwait
  4044d2:	and    al,0xd5
  4044d4:	pop    ss
  4044d5:	ja     0x4044d8
  4044d7:	push   esp
  4044d8:	add    al,0x25
  4044da:	jg     0x404512
  4044dc:	sbb    DWORD PTR [eax+0x446e2032],esi
  4044e2:	in     al,0xc2
  4044e4:	ja     0x4044ef
  4044e6:	shr    BYTE PTR ds:0x30ac9756,0x2a
  4044ed:	adc    DWORD PTR [eax+0x59],ecx
  4044f0:	pop    esp
  4044f1:	arpl   WORD PTR [eax],sp
  4044f3:	loop   0x4044b8
  4044f5:	xor    eax,esp
  4044f7:	cwde   
  4044f8:	push   0x55
  4044fa:	sbb    al,BYTE PTR [ebx+0x2ebe1439]
  404500:	jp     0x4044f7
  404502:	inc    edx
  404503:	dec    ebx
  404504:	jmp    0x4044eb
  404506:	mov    DWORD PTR [ebp+0x3],eax
  404509:	xor    eax,0xb5fa4758
  40450e:	ret    
  40450f:	jo     0x4044e9
  404511:	(bad)  
  404512:	sub    DWORD PTR [edx-0x46f65091],esp
  404518:	xlat   BYTE PTR ds:[ebx]
  404519:	fild   DWORD PTR [edx-0x2e]
  40451c:	div    BYTE PTR [esi+0x54]
  40451f:	cdq    
  404520:	sub    esp,ecx
  404522:	add    al,0x13
  404524:	push   ecx
  404525:	fld    QWORD PTR [esp+ebx*1]
  404528:	call   0x8c96cfe
  40452d:	pop    ecx
  40452e:	sti    
  40452f:	ins    BYTE PTR es:[edi],dx
  404530:	out    dx,eax
  404531:	aad    0x29
  404533:	test   BYTE PTR [eax],bl
  404535:	adc    ebp,DWORD PTR [edi+eax*2-0x1a635854]
  40453c:	mov    bh,0x22
  40453e:	xchg   BYTE PTR [eax],dh
  404540:	shl    al,cl
  404542:	mov    eax,ds:0x8587e9f1
  404547:	dec    DWORD PTR [esi]
  404549:	jnp    0x40459c
  40454b:	je     0x40459b
  40454d:	stos   DWORD PTR es:[edi],eax
  40454e:	xchg   edx,eax
  40454f:	test   DWORD PTR [ebp+0x43],ecx
  404552:	stos   DWORD PTR es:[edi],eax
  404553:	sbb    eax,DWORD PTR [edx+edi*2-0x4cbc9896]
  40455a:	xlat   BYTE PTR ds:[ebx]
  40455b:	adc    eax,0x8906af29
  404560:	mov    ecx,0x598d6f66
  404565:	jb     0x4044f8
  404567:	je     0x404528
  404569:	in     eax,0xe9
  40456b:	cdq    
  40456c:	popw   es
  40456e:	into   
  40456f:	cmp    esi,ecx
  404571:	lock mov ecx,0xe58585a
  404577:	xor    ebp,DWORD PTR [edi]
  404579:	mov    ebx,0x964a88ff
  40457e:	pusha  
  40457f:	push   esi
  404580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404581:	fsubr  DWORD PTR fs:[edi-0x5cbd9720]
  404588:	imul   BYTE PTR [ebp-0x5895617e]
  40458e:	dec    esi
  40458f:	mov    ebp,0x326f13e6
  404594:	jg     0x404557
  404596:	fstp   DWORD PTR [ecx+ebx*1]
  404599:	popf   
  40459a:	cs out 0x15,eax
  40459d:	leave  
  40459e:	push   edi
  40459f:	(bad)  
  4045a0:	jbe    0x40456b
  4045a2:	shr    ebx,0x8c
  4045a5:	clc    
  4045a6:	push   ecx
  4045a7:	and    ebx,DWORD PTR [esi]
  4045a9:	(bad)  
  4045aa:	fnstsw WORD PTR [ebp-0x6c]
  4045ad:	ret    0xee02
  4045b0:	pop    edi
  4045b1:	in     al,0x39
  4045b3:	xchg   BYTE PTR ds:0x603a8745,al
  4045b9:	dec    esp
  4045ba:	(bad)  
  4045bb:	jmp    0x6d290c4b
  4045c0:	lods   eax,DWORD PTR ds:[esi]
  4045c1:	cmp    BYTE PTR [edx],dh
  4045c3:	(bad)  
  4045c4:	pop    edx
  4045c5:	out    0xbf,al
  4045c7:	ret    
  4045c8:	jmp    0x40462b
  4045ca:	and    al,0xb9
  4045cc:	pop    es
  4045cd:	pop    edi
  4045ce:	(bad)  
  4045cf:	fist   DWORD PTR [esi]
  4045d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d2:	ja     0x404614
  4045d4:	pop    ds
  4045d5:	inc    edx
  4045d6:	repz mov ecx,0xe746397d
  4045dc:	fdivr  DWORD PTR [ebx]
  4045de:	pop    edi
  4045df:	sub    edi,esp
  4045e1:	sub    DWORD PTR [esi+0x40],ebx
  4045e4:	cmp    eax,0x1b0d3d42
  4045e9:	pop    es
  4045ea:	xchg   esp,eax
  4045eb:	fcom   st(2)
  4045ed:	popa   
  4045ee:	nop
  4045ef:	pop    esp
  4045f0:	adc    DWORD PTR [esi+ecx*1-0x66],edx
  4045f4:	aad    0xdd
  4045f6:	ret    
  4045f7:	nop
  4045f8:	out    0x5c,al
  4045fa:	cmp    al,0xb9
  4045fc:	cmp    edi,0xffffffac
  4045ff:	add    al,0x2f
  404601:	fbld   TBYTE PTR [ecx+eiz*2]
  404604:	hlt    
  404605:	adc    BYTE PTR [ebx],ch
  404607:	out    0xc6,eax
  404609:	adc    cl,bh
  40460b:	dec    ebp
  40460c:	mov    ds:0x58a729f7,eax
  404611:	xor    eax,0x95b7de0c
  404616:	xor    DWORD PTR [edi+0x30],edi
  404619:	add    eax,0x9719c9f6
  40461e:	out    0x19,eax
  404620:	mov    al,ds:0x1ed6611d
  404625:	jnp    0x4045bb
  404627:	cdq    
  404628:	or     ah,BYTE PTR [edx+0x3cdfc636]
  40462e:	jns    0x4045e0
  404630:	pop    eax
  404631:	cmp    esi,DWORD PTR [ebx-0x52d58b40]
  404637:	sub    dl,BYTE PTR [edx+edx*1+0x7a938158]
  40463e:	jne    0x404674
  404640:	(bad)  
  404641:	xor    eax,0x6c1ffb18
  404646:	retf   0x4065
  404649:	pop    ebp
  40464a:	mov    dh,0x76
  40464c:	inc    edx
  40464d:	xor    ecx,DWORD PTR [eax+0x9f06f15]
  404653:	popa   
  404654:	aaa    
  404655:	push   esp
  404656:	push   0xfffffff4
  404658:	inc    edx
  404659:	les    ecx,FWORD PTR [ebx-0x77d34070]
  40465f:	sar    BYTE PTR [edx+ebx*2],1
  404662:	pushf  
  404663:	in     al,0x4b
  404665:	fst    DWORD PTR [edx-0x2a]
  404668:	je     0x4046dc
  40466a:	or     edi,esp
  40466c:	gs jp  0x404670
  40466f:	sbb    dl,ah
  404671:	or     al,0x54
  404673:	sbb    esi,DWORD PTR [esi-0x778a7eab]
  404679:	loope  0x4046a0
  40467b:	in     al,dx
  40467c:	push   esi
  40467d:	pop    ds
  40467e:	into   
  40467f:	inc    ebx
  404680:	or     esp,DWORD PTR [esi-0x6fc588bf]
  404686:	push   eax
  404687:	arpl   WORD PTR [eax+0x19ac13bb],sp
  40468d:	mov    dl,0x4e
  40468f:	mov    dl,0xce
  404691:	xchg   ebx,eax
  404692:	push   edx
  404693:	in     eax,dx
  404694:	fs mov al,0xe0
  404697:	lock jne 0x40470a
  40469a:	dec    edi
  40469b:	inc    esp
  40469c:	mov    DWORD PTR [eax+0x7b],edx
  40469f:	jbe    0x40467f
  4046a1:	xor    DWORD PTR [eax],0x3e
  4046a4:	into   
  4046a5:	js     0x404672
  4046a7:	cs xor cl,cl
  4046aa:	or     esi,DWORD PTR [esi+0x405245ab]
  4046b0:	and    ch,BYTE PTR [esi+ebx*1-0x25]
  4046b4:	call   0xf96:0x1e7b18d6
  4046bb:	daa    
  4046bc:	into   
  4046bd:	inc    edi
  4046be:	push   eax
  4046bf:	out    0x5d,eax
  4046c1:	or     eax,0x80ed6fa9
  4046c6:	jne    0x4046d7
  4046c8:	test   eax,0x14084029
  4046cd:	sar    DWORD PTR [edi+0x5],cl
  4046d0:	(bad)  
  4046d1:	inc    esp
  4046d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d3:	jl     0x404736
  4046d5:	push   edi
  4046d6:	data16 je 0x4046bd
  4046d9:	das    
  4046da:	(bad)  
  4046db:	frstor [esi]
  4046dd:	jmp    0xedb4:0x2c324795
  4046e4:	pusha  
  4046e5:	dec    esp
  4046e6:	jmp    0x1f2e:0x47c42bce
  4046ed:	xor    DWORD PTR [edx+eiz*2],eax
  4046f0:	mov    ds,eax
  4046f2:	outs   dx,DWORD PTR ds:[esi]
  4046f3:	lahf   
  4046f4:	je     0x404691
  4046f6:	adc    al,0xe
  4046f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f9:	lods   al,BYTE PTR ds:[esi]
  4046fa:	mov    dl,0x4f
  4046fc:	adc    DWORD PTR [ecx-0x2d],ecx
  4046ff:	sub    DWORD PTR [edx+0x5],esp
  404702:	and    eax,DWORD PTR [esi]
  404704:	lock xchg ecx,eax
  404706:	adc    BYTE PTR [eax-0x1582600c],bh
  40470c:	push   es
  40470d:	jmp    0x9c77da58
  404712:	and    al,0xc0
  404714:	inc    esp
  404715:	jnp    0x404729
  404717:	fwait
  404718:	cmp    al,0x4f
  40471a:	sar    ebx,1
  40471c:	in     al,dx
  40471d:	inc    edi
  40471e:	adc    BYTE PTR [ecx-0x1f824191],bh
  404724:	and    esp,DWORD PTR [edi+0x7]
  404727:	or     cl,BYTE PTR [ebx]
  404729:	je     0x40479c
  40472b:	adc    bh,BYTE PTR [esi]
  40472d:	ins    BYTE PTR es:[edi],dx
  40472e:	xor    DWORD PTR [eax-0x61436dec],0x6d1a49db
  404738:	js     0x40472d
  40473a:	(bad)  
  40473c:	add    DWORD PTR ds:0x88d19ecb,esp
  404742:	pop    es
  404743:	push   edi
  404744:	mov    ch,0x58
  404746:	or     cl,cl
  404748:	sbb    DWORD PTR [edi-0x496f51f8],ecx
  40474e:	inc    ebx
  40474f:	test   al,0xec
  404751:	adc    al,0x4d
  404753:	fs sti 
  404755:	mov    dl,0x4f
  404757:	mov    ebp,0x926ddbab
  40475c:	jns    0x404751
  40475e:	mov    edx,0x9aca673d
  404763:	push   es
  404764:	ja     0x404795
  404766:	mov    al,BYTE PTR [edi-0x1]
  404769:	jl     0x4046eb
  40476b:	and    DWORD PTR [esi+0x18],ebp
  40476e:	xor    bl,dl
  404770:	jmp    0x33b8:0x31d1bcd3
  404777:	pop    ebp
  404778:	cmp    ecx,DWORD PTR [edx+0x19487bee]
  40477e:	jnp    0x40472e
  404780:	clc    
  404781:	pusha  
  404782:	sbb    DWORD PTR [edi-0x4a],ebx
  404785:	push   esi
  404786:	push   esp
  404787:	xor    al,0x85
  404789:	adc    BYTE PTR [eax-0x5d987144],cl
  40478f:	out    dx,al
  404790:	out    0xb7,eax
  404792:	test   DWORD PTR [edi],edx
  404794:	inc    edx
  404795:	pop    ebp
  404796:	xor    bh,BYTE PTR [edx]
  404798:	imul   eax,DWORD PTR [esi],0x9d438b7e
  40479e:	(bad)  
  4047a0:	and    al,0x67
  4047a2:	inc    ebp
  4047a3:	sbb    bh,BYTE PTR [eax+ebx*2]
  4047a6:	ds int 0x93
  4047a9:	inc    ecx
  4047aa:	sti    
  4047ab:	fwait
  4047ac:	xchg   BYTE PTR [edi+0x14],dh
  4047af:	xor    esi,ebp
  4047b1:	inc    esp
  4047b2:	rol    DWORD PTR [edx+0x209a4d91],cl
  4047b8:	fadd   QWORD PTR es:[edx]
  4047bb:	mov    al,ds:0xf34d43eb
  4047c0:	out    0xa8,eax
  4047c2:	adc    eax,DWORD PTR [ebp+0x60]
  4047c5:	(bad)  
  4047c6:	dec    edx
  4047c7:	call   0xa7eb:0xa3e34adb
  4047ce:	jle    0x4047b2
  4047d0:	inc    esp
  4047d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d2:	fisub  WORD PTR [esi-0x7d8b7915]
  4047d8:	shl    BYTE PTR [edi+0x26e63104],1
  4047de:	ja     0x40477c
  4047e0:	adc    ebx,esi
  4047e2:	and    DWORD PTR [ebp-0x6a052f86],ebp
  4047e8:	popa   
  4047e9:	mov    esi,0x67acae45
  4047ee:	mov    eax,ds:0x6e6e1725
  4047f3:	cmp    al,0xca
  4047f5:	jle    0x404861
  4047f7:	fsubr  QWORD PTR [eax+0x2a]
  4047fa:	aas    
  4047fb:	pop    edi
  4047fc:	ret    0x8eb7
  4047ff:	cld    
  404800:	retf   0x2c3b
  404803:	xchg   esp,eax
  404804:	mul    BYTE PTR ds:0x2439c2eb
  40480a:	push   esi
  40480b:	jnp    0x404791
  40480d:	mov    dh,0x23
  40480f:	or     al,0x5a
  404811:	(bad)  
  404812:	aad    0x17
  404814:	test   al,0x41
  404816:	jmp    0x51d9:0xbabc7cd6
  40481d:	sub    BYTE PTR [ecx+0x54],ch
  404820:	mov    edx,0x6ad829e4
  404825:	pop    esp
  404826:	jns    0x404867
  404828:	inc    ebp
  404829:	bound  eax,QWORD PTR [edi]
  40482b:	call   0x8afcce9e
  404830:	inc    edx
  404831:	aaa    
  404832:	add    DWORD PTR [edx+0x67acaace],esi
  404838:	add    ch,ah
  40483a:	clc    
  40483b:	adc    BYTE PTR [ecx-0x11],0xc6
  40483f:	jmp    0xe5d92821
  404844:	fild   WORD PTR [edi-0x10989df1]
  40484a:	cmp    DWORD PTR [ecx],eax
  40484c:	push   0x17865e51
  404851:	and    eax,DWORD PTR [ebx+0x74]
  404854:	call   0xa7a599b2
  404859:	xor    eax,0x53ea14a5
  40485e:	fsub   DWORD PTR [esi+0x4d]
  404861:	mov    ah,0xd7
  404863:	xchg   ecx,eax
  404864:	fst    st(7)
  404866:	popa   
  404867:	cmp    DWORD PTR [esi-0x2d],ebp
  40486a:	(bad)  
  40486b:	push   ss
  40486c:	or     eax,0xd127af00
  404871:	ficom  WORD PTR ds:0xd7734465
  404877:	or     eax,0x619e18dd
  40487c:	and    edx,eax
  40487e:	jecxz  0x404812
  404880:	inc    edx
  404881:	js     0x404804
  404883:	pop    esi
  404884:	outs   dx,BYTE PTR ds:[esi]
  404885:	mov    ecx,0x7b709d9b
  40488a:	push   ebp
  40488b:	je     0x4048e7
  40488d:	adc    BYTE PTR [eax-0x80],ch
  404890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404891:	cwde   
  404892:	in     eax,dx
  404893:	fstp   TBYTE PTR [ebx]
  404895:	mov    cl,0x8c
  404897:	fnsave [ebx*1-0x3b955d8c]
  40489e:	stos   DWORD PTR es:[edi],eax
  40489f:	mov    esp,0x66c8e2c6
  4048a4:	cli    
  4048a5:	dec    ebx
  4048a6:	dec    eax
  4048a7:	je     0x404853
  4048a9:	mov    dl,0xa6
  4048ab:	or     DWORD PTR [eax],esi
  4048ad:	bt     DWORD PTR [ecx],esi
  4048b0:	adc    al,0xb1
  4048b2:	shr    DWORD PTR [ebp-0x6a824b51],0x7
  4048b9:	sbb    eax,0x3593698f
  4048be:	jmp    0x668d:0x289a7046
  4048c5:	js     0x404914
  4048c7:	mov    edi,es
  4048c9:	enter  0x3a20,0xe3
  4048cd:	pushf  
  4048ce:	stos   DWORD PTR es:[edi],eax
  4048cf:	loop   0x404865
  4048d1:	push   eax
  4048d2:	add    eax,0x3963778
  4048d7:	aam    0xfc
  4048d9:	daa    
  4048da:	jnp    0x4048a9
  4048dc:	es pop edx
  4048de:	sar    BYTE PTR [ebp+0x64],0xc9
  4048e2:	jge    0x40486e
  4048e4:	fcom   DWORD PTR [ebx+0x79]
  4048e7:	jns    0x4048c9
  4048e9:	cmp    eax,DWORD PTR [ebp-0x2d7921a6]
  4048ef:	or     al,0x3e
  4048f1:	iret   
  4048f2:	sbb    bh,BYTE PTR [ebp+0x2e778c5e]
  4048f8:	or     esi,ecx
  4048fa:	retf   0x72a4
  4048fd:	mov    DWORD PTR [ebp-0x8bde56e],0xea3f2a2
  404907:	or     esp,DWORD PTR [edi+0x22bccd9c]
  40490d:	inc    eax
  40490e:	mov    ds:0x57c8ef8c,eax
  404913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404914:	push   ebx
  404915:	sbb    eax,0xfdbb73ad
  40491a:	fdivr  QWORD PTR [ebx+0x529afaf7]
  404920:	pop    ebx
  404921:	xchg   ecx,eax
  404922:	xlat   BYTE PTR ds:[ebx]
  404923:	leave  
  404924:	mov    dh,0xf3
  404926:	cmp    DWORD PTR [edi+0x5b],0xffffffcd
  40492a:	call   0x50fa:0x812a5473
  404931:	mov    cl,0x3
  404933:	push   eax
  404934:	gs sub al,0x57
  404937:	jne    0x4048bc
  404939:	jg     0x40496d
  40493b:	xor    ecx,DWORD PTR [esi+ebx*4-0x43]
  40493f:	imul   ebp,DWORD PTR [edi+esi*4+0x241f3229],0xffffff91
  404947:	in     al,dx
  404948:	jg     0x404914
  40494a:	outs   dx,BYTE PTR ds:[esi]
  40494b:	add    esi,ebp
  40494d:	add    eax,0x5102bdd2
  404952:	retf   0x60b5
  404955:	mov    al,0x3d
  404957:	cdq    
  404958:	mov    cl,0x38
  40495a:	imul   esi,esi,0x5e
  40495d:	mov    esp,0x9fc0e64c
  404962:	xchg   edi,eax
  404963:	in     al,dx
  404964:	int3   
  404965:	sbb    DWORD PTR [edi-0x6],ebp
  404968:	in     al,0x6
  40496a:	ficom  DWORD PTR [edx-0x35f2c8e1]
  404970:	xor    BYTE PTR [ebx],bl
  404972:	out    dx,eax
  404973:	jns    0x40495a
  404975:	mov    eax,ds:0xd99fe799
  40497a:	js     0x404924
  40497c:	and    DWORD PTR [ebx+esi*2-0x606b0474],esp
  404983:	lock sbb al,0x2d
  404986:	dec    edx
  404987:	push   esi
  404988:	xor    bh,bh
  40498a:	jecxz  0x4049bd
  40498c:	stos   BYTE PTR es:[edi],al
  40498d:	jmp    0x40495f
  40498f:	bnd ret 
  404991:	mov    ecx,ebp
  404993:	jns    0x404944
  404995:	mov    ecx,0xdc169900
  40499b:	idiv   BYTE PTR [ebx+0x3e]
  40499e:	dec    esp
  40499f:	mov    ds:0xd8aef567,eax
  4049a4:	pop    ebp
  4049a5:	xor    eax,0xb83615e0
  4049aa:	and    BYTE PTR [edx-0x6],bl
  4049ad:	scas   eax,DWORD PTR es:[edi]
  4049ae:	rcr    esi,0x94
  4049b1:	adc    BYTE PTR [edx],dl
  4049b3:	(bad)  
  4049b5:	mov    ebp,ss
  4049b7:	pop    esi
  4049b8:	cwde   
  4049b9:	pusha  
  4049ba:	push   0xffffff90
  4049bc:	ret    0xf855
  4049bf:	ins    DWORD PTR es:[edi],dx
  4049c0:	mov    edx,esi
  4049c2:	aas    
  4049c3:	mov    ebp,0x24565c23
  4049c8:	jbe    0x40494c
  4049ca:	sbb    BYTE PTR [ecx],0xb2
  4049cd:	mov    al,ds:0xc46a598b
  4049d2:	sbb    DWORD PTR [esi+0x71],edx
  4049d5:	jl     0x4049b3
  4049d7:	sahf   
  4049d8:	in     al,dx
  4049d9:	or     DWORD PTR [esi+eax*2],0xffffffe3
  4049dd:	cmp    esp,ebx
  4049df:	mov    bl,0x6c
  4049e1:	add    esp,edx
  4049e3:	or     BYTE PTR [edx+0x1fdb8b91],cl
  4049e9:	dec    eax
  4049ea:	xor    dh,BYTE PTR [ebx+0x6f]
  4049ed:	add    BYTE PTR [edi],0x56
  4049f0:	dec    ebx
  4049f1:	xchg   esp,eax
  4049f2:	mov    eax,ds
  4049f4:	popf   
  4049f5:	pop    es
  4049f6:	jmp    0x4049c8
  4049f8:	inc    ebx
  4049f9:	add    bl,al
  4049fb:	mov    BYTE PTR [ebx+0x39],dl
  4049fe:	push   esp
  4049ff:	or     cl,BYTE PTR [ebp+esi*2-0x8845469]
  404a06:	mov    esp,0x6b99bfc7
  404a0b:	cld    
  404a0c:	mov    edi,ebp
  404a0e:	cld    
  404a0f:	das    
  404a10:	xor    ebp,DWORD PTR [edx]
  404a12:	xchg   ebx,eax
  404a13:	ss add dl,0xc9
  404a17:	pop    esp
  404a18:	sbb    eax,0xee50dad0
  404a1d:	pop    es
  404a1e:	inc    edi
  404a1f:	ja     0x404a62
  404a21:	and    ch,BYTE PTR [ebx]
  404a23:	xchg   ebx,eax
  404a24:	mov    al,BYTE PTR [esi+0x498dd186]
  404a2a:	fnstcw WORD PTR [ebp-0x70]
  404a2d:	clc    
  404a2e:	sub    edx,DWORD PTR [edx+0x48145672]
  404a34:	pop    ss
  404a35:	rol    dl,0x98
  404a38:	jmp    0x4ed08385
  404a3d:	xlat   BYTE PTR ds:[ebx]
  404a3e:	add    dh,bl
  404a40:	cmp    esi,esp
  404a42:	je     0x404a53
  404a44:	adc    eax,0x6ea9c121
  404a49:	aam    0xec
  404a4b:	enter  0xd432,0x5b
  404a4f:	(bad)  
  404a50:	pop    edi
  404a51:	add    eax,0xbdd18674
  404a56:	xor    al,0x53
  404a58:	jnp    0x404a6f
  404a5a:	xor    al,0xb1
  404a5c:	ds pusha 
  404a5e:	inc    esp
  404a5f:	cmp    eax,eax
  404a61:	dec    esi
  404a62:	out    dx,eax
  404a63:	mov    ecx,0x31cb041
  404a68:	(bad)  
  404a69:	aad    0x51
  404a6b:	jl     0x404a0e
  404a6d:	outs   dx,DWORD PTR fs:[esi]
  404a6f:	scas   eax,DWORD PTR es:[edi]
  404a70:	adc    BYTE PTR [ebp-0x4d774489],cl
  404a76:	repnz mov cl,BYTE PTR [ebx-0x4]
  404a7a:	push   ebp
  404a7b:	mov    ebx,0x214ad198
  404a80:	or     edx,edx
  404a82:	add    edi,DWORD PTR [edx+0x7f]
  404a85:	mov    ds:0xcc25a7c7,eax
  404a8a:	ds dec esp
  404a8c:	(bad)  
  404a8d:	sub    al,0x3a
  404a8f:	into   
  404a90:	adc    ah,BYTE PTR [ebp+0x632bba19]
  404a96:	mov    ch,0x13
  404a98:	test   al,0x1
  404a9a:	jae    0x404a7c
  404a9c:	jecxz  0x404a84
  404a9e:	mov    edi,0x44181a3d
  404aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa4:	jno    0x404ae1
  404aa6:	pushf  
  404aa7:	fadd   DWORD PTR [ecx]
  404aa9:	out    dx,al
  404aaa:	add    dh,bh
  404aac:	mov    cl,0x17
  404aae:	out    0xe3,al
  404ab0:	inc    ebp
  404ab1:	or     edx,DWORD PTR [eax]
  404ab3:	imul   ebp,DWORD PTR [eax],0xffffffd7
  404ab6:	std    
  404ab7:	bswap  edi
  404ab9:	mov    BYTE PTR [eax],bh
  404abb:	lods   eax,DWORD PTR ds:[esi]
  404abc:	sub    DWORD PTR [ebx-0x63df6a7d],esi
  404ac2:	adc    edx,DWORD PTR [eax]
  404ac4:	xlat   BYTE PTR ds:[ebx]
  404ac5:	mov    edx,DWORD PTR [ebp+0x5693f6b7]
  404acb:	push   esi
  404acc:	or     eax,0x99b56300
  404ad1:	add    edi,esi
  404ad3:	or     ebp,esi
  404ad5:	stos   DWORD PTR es:[edi],eax
  404ad6:	inc    esi
  404ad7:	push   0x9fb90c07
  404adc:	pop    edx
  404add:	push   eax
  404ade:	mov    ebp,0x11da1f8e
  404ae3:	xor    al,0xea
  404ae5:	and    cl,BYTE PTR [esp+ebx*2]
  404ae8:	in     eax,dx
  404ae9:	xchg   ebp,eax
  404aea:	sub    ebx,DWORD PTR [ecx]
  404aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aed:	mov    esp,0xa993d245
  404af2:	in     eax,dx
  404af3:	jle    0x404a96
  404af5:	enter  0xe22b,0x32
  404af9:	bound  ebp,QWORD PTR [esp+ebx*4]
  404afc:	mov    bh,BYTE PTR [eax+0x43]
  404aff:	xor    DWORD PTR ds:0xd221588f,ecx
  404b05:	call   0xfc651aa9
  404b0a:	add    eax,0xd62613a0
  404b0f:	cmp    DWORD PTR [esi-0x3f],ebx
  404b12:	xchg   esp,eax
  404b13:	or     ah,ah
  404b15:	inc    edi
  404b16:	ins    BYTE PTR es:[edi],dx
  404b17:	xor    BYTE PTR [edx+0x92d9f6c],0x1c
  404b1e:	inc    ebp
  404b1f:	mov    ebx,0x98a6f552
  404b24:	mov    dl,0x81
  404b26:	imul   BYTE PTR [ebp-0x24b342c]
  404b2c:	push   ds
  404b2d:	sub    al,BYTE PTR [edx+eiz*1+0x20a56edb]
  404b34:	inc    esp
  404b35:	es xchg ebp,eax
  404b37:	pusha  
  404b38:	jecxz  0x404b04
  404b3a:	xlat   BYTE PTR ds:[ebx]
  404b3b:	jns    0x404b46
  404b3d:	ds pop es
  404b3f:	out    dx,eax
  404b40:	xor    cl,BYTE PTR [esi+0x6ea164b0]
  404b46:	jnp    0x404b6d
  404b48:	sub    edi,DWORD PTR ds:[edx+0x721bdb9c]
  404b4f:	cmp    BYTE PTR [eax-0x1f162be0],dl
  404b55:	in     al,dx
  404b56:	add    BYTE PTR ds:0xfdd0bb63,bl
  404b5c:	stc    
  404b5d:	inc    ebx
  404b5e:	inc    edi
  404b5f:	mov    bl,BYTE PTR [edi]
  404b61:	push   es
  404b62:	div    BYTE PTR [edx-0x13]
  404b65:	and    al,BYTE PTR ss:[ecx+ebp*1]
  404b69:	xchg   esi,eax
  404b6a:	cld    
  404b6b:	arpl   WORD PTR [eax-0x6f4b26fc],dx
  404b71:	sbb    eax,0x7268196a
  404b76:	and    al,0xf2
  404b78:	shl    dl,cl
  404b7a:	pop    DWORD PTR [ebp-0x5e]
  404b7d:	icebp  
  404b7e:	jmp    0x1c9c9f7
  404b83:	iret   
  404b84:	cli    
  404b85:	adc    BYTE PTR ss:[ebx-0x4629305e],cl
  404b8c:	fscale 
  404b8e:	push   ss
  404b8f:	pop    ecx
  404b90:	es sbb cl,0x0
  404b94:	sbb    dh,bh
  404b96:	aam    0x9a
  404b98:	adc    cl,ch
  404b9a:	(bad)  
  404b9d:	xchg   esp,eax
  404b9e:	adc    DWORD PTR [edx-0xfe24ba2],ecx
  404ba4:	sbb    DWORD PTR [esi+ebp*2],ecx
  404ba7:	push   ds
  404ba8:	cmp    DWORD PTR [esi-0xf7a1658],ebx
  404bae:	rol    BYTE PTR [esi-0x5447bc0a],1
  404bb4:	push   ebx
  404bb5:	mov    ch,cl
  404bb7:	adc    al,ch
  404bb9:	cmp    al,0x12
  404bbb:	icebp  
  404bbc:	mov    ecx,0x84edce64
  404bc1:	dec    ebp
  404bc2:	sub    ch,BYTE PTR [ebx+ebp*1-0x17]
  404bc6:	sbb    BYTE PTR [eax],bh
  404bc8:	push   ebx
  404bc9:	fstp   DWORD PTR [edx-0xc400a97]
  404bcf:	push   ebx
  404bd0:	lds    esi,FWORD PTR [ecx-0x64]
  404bd3:	int    0x20
  404bd5:	fs dec edi
  404bd7:	int    0x59
  404bd9:	or     BYTE PTR [eax],ch
  404bdb:	sbb    al,0x31
  404bdd:	cdq    
  404bde:	aaa    
  404bdf:	ins    BYTE PTR es:[edi],dx
  404be0:	loop   0x404c3c
  404be2:	and    al,0x8d
  404be4:	adc    al,BYTE PTR [edi+0xdc15c15]
  404bea:	pushf  
  404beb:	sub    eax,0x881e5d01
  404bf0:	jl     0x404c1f
  404bf2:	dec    esi
  404bf3:	jns    0x404bfc
  404bf5:	aad    0x11
  404bf7:	jle    0x404c6d
  404bf9:	add    DWORD PTR [ebx+0x3be468b9],0xb7c89af1
  404c03:	push   ecx
  404c04:	sahf   
  404c05:	and    ecx,DWORD PTR [edx]
  404c07:	mov    edi,0x8e720e61
  404c0c:	sbb    esi,ecx
  404c0e:	adc    al,0x5a
  404c10:	ja     0x404bc8
  404c12:	jns    0x404bec
  404c14:	xor    eax,0x2b672021
  404c19:	sub    esi,DWORD PTR [esp+esi*2-0x47b8623]
  404c20:	js     0x404c7d
  404c22:	fdiv   QWORD PTR [esi-0x4b]
  404c25:	mov    WORD PTR [esi+0xcba6273],ds
  404c2b:	sti    
  404c2c:	stos   BYTE PTR es:[edi],al
  404c2d:	sub    DWORD PTR [ecx+0x24753126],ebx
  404c33:	stos   DWORD PTR es:[edi],eax
  404c34:	and    bl,BYTE PTR [esi+0x57]
  404c37:	cmp    BYTE PTR [edx-0x2f6b88b2],0xb7
  404c3e:	idiv   ebx
  404c40:	cmp    eax,0xa956763e
  404c45:	pop    eax
  404c46:	es push ebx
  404c48:	shl    BYTE PTR [esi],1
  404c4a:	nop
  404c4b:	inc    esi
  404c4c:	loope  0x404cb2
  404c4e:	fidiv  WORD PTR [edi-0x33fdcc94]
  404c54:	gs addr16 jmp 0x911b:0xa51e2458
  404c5d:	aas    
  404c5e:	(bad)  
  404c5f:	jne    0x404c76
  404c61:	or     al,BYTE PTR [ecx+ebp*1]
  404c64:	popa   
  404c65:	fld    QWORD PTR [ecx+0x19ae7490]
  404c6b:	jecxz  0x404c58
  404c6d:	fs or  eax,0xff67ecba
  404c73:	mov    ebx,0x8dd7b49c
  404c78:	dec    ecx
  404c79:	repz mov ds:0x5dd722d3,eax
  404c7f:	sbb    BYTE PTR [edx+0x67],0xc3
  404c83:	mov    eax,0x778c499f
  404c88:	(bad)  [ebx+0x1d]
  404c8b:	mov    bh,0x1e
  404c8d:	mov    ds:0xdf6a1b78,al
  404c92:	add    dh,BYTE PTR [edx]
  404c94:	adc    BYTE PTR [edi-0x4b],0x64
  404c98:	add    eax,0x75656e46
  404c9d:	add    BYTE PTR [ecx],dh
  404c9f:	clc    
  404ca0:	gs push ecx
  404ca2:	sub    bh,BYTE PTR [edi]
  404ca4:	lock pop esi
  404ca6:	enter  0xc6db,0x68
  404caa:	xchg   ebx,eax
  404cab:	int3   
  404cac:	mov    ds:0xb16a8a59,eax
  404cb1:	mov    ds:0x6ca4e2c6,eax
  404cb6:	ret    
  404cb7:	out    dx,eax
  404cb8:	lahf   
  404cb9:	pop    ss
  404cba:	test   BYTE PTR [edi+0x2b223030],ah
  404cc0:	xor    eax,0xff2b46a7
  404cc5:	dec    ebp
  404cc6:	test   al,0xa3
  404cc8:	push   ss
  404cc9:	adc    BYTE PTR [edi+esi*4-0x5ebc08b],cl
  404cd0:	nop
  404cd1:	pop    ss
  404cd2:	dec    eax
  404cd3:	mov    ah,0xf9
  404cd5:	and    DWORD PTR [esi+0xa38ad3b],edx
  404cdb:	(bad)  
  404cdc:	data16 test al,0x57
  404cdf:	icebp  
  404ce0:	adc    eax,0x9aa6ab9f
  404ce5:	sub    dh,BYTE PTR [ebx+eax*8-0x6024cbe6]
  404cec:	push   ss
  404ced:	or     al,0xf1
  404cef:	sbb    DWORD PTR [edx],0xc9838a0e
  404cf5:	lods   al,BYTE PTR ds:[esi]
  404cf6:	and    al,0x2
  404cf8:	mov    ah,0x7f
  404cfa:	sar    BYTE PTR [ecx-0x7c],1
  404cfd:	ins    BYTE PTR es:[edi],dx
  404cfe:	mov    bh,0x3e
  404d00:	mov    edx,0x99c8f83f
  404d05:	xor    bh,BYTE PTR ds:0x1a3ffd88
  404d0b:	xchg   ebx,eax
  404d0c:	adc    bh,BYTE PTR [ebp-0x2facddcd]
  404d12:	inc    esi
  404d13:	jp     0x404cc1
  404d15:	inc    esp
  404d16:	jbe    0x404d02
  404d18:	stc    
  404d19:	inc    esi
  404d1a:	mov    cl,0xd0
  404d1c:	std    
  404d1d:	xchg   esp,eax
  404d1e:	pushf  
  404d1f:	imul   eax,eax,0x54
  404d22:	inc    ebp
  404d23:	mov    edx,0xe938c071
  404d28:	out    dx,al
  404d29:	(bad)  
  404d2a:	sbb    al,0x71
  404d2c:	and    ebx,DWORD PTR [ecx+edi*1-0x25]
  404d30:	adc    ebx,esi
  404d32:	sahf   
  404d33:	stc    
  404d34:	out    0xe5,eax
  404d36:	stos   BYTE PTR es:[edi],al
  404d37:	ror    BYTE PTR [edx+ebx*8-0x63d24137],0x45
  404d3f:	outs   dx,DWORD PTR ds:[esi]
  404d40:	rol    cl,0xd6
  404d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d45:	int    0x3d
  404d47:	or     DWORD PTR [edx],ebp
  404d49:	rol    DWORD PTR [ecx-0x61260f10],1
  404d4f:	jmp    0x96f7ad17
  404d54:	addr16 inc ebx
  404d56:	inc    edx
  404d57:	ins    BYTE PTR es:[edi],dx
  404d58:	or     DWORD PTR [edi+0x65],edx
  404d5b:	mov    cl,0xaf
  404d5d:	jge    0x404d7e
  404d5f:	jns    0x404d41
  404d61:	sub    edi,DWORD PTR [edi+0x340cdbff]
  404d67:	cs push ds
  404d69:	(bad)  
  404d6a:	ror    BYTE PTR [edx],0x84
  404d6d:	loopne 0x404d47
  404d6f:	add    DWORD PTR [eax],eax
  404d71:	ret    0x1c95
  404d74:	and    dl,BYTE PTR [esi+0x34]
  404d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d78:	mov    esp,0xc85100d0
  404d7d:	sub    BYTE PTR [edx+ebx*2+0x1b],ah
  404d81:	gs mov esp,0xc28b0c90
  404d87:	add    edi,DWORD PTR ds:0x4e26f61f
  404d8d:	dec    esp
  404d8e:	loope  0x404d68
  404d90:	fisttp DWORD PTR [edi-0x64]
  404d93:	sti    
  404d94:	push   ds
  404d95:	test   ch,ch
  404d97:	mov    ecx,0xafd01bc
  404d9c:	mov    DWORD PTR [ecx-0x55a0cb3d],eax
  404da2:	loop   0x404d58
  404da4:	mov    ch,BYTE PTR [ebx-0x3592a29]
  404daa:	cmp    esi,DWORD PTR [esi-0x3197b619]
  404db0:	stos   DWORD PTR es:[edi],eax
  404db1:	cmp    al,0x3b
  404db3:	add    al,0x84
  404db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db6:	mul    esi
  404db8:	cwde   
  404db9:	xchg   cl,bl
  404dbb:	dec    esp
  404dbc:	cmp    esi,ebp
  404dbe:	js     0x404da0
  404dc0:	xor    esi,DWORD PTR [eax-0x4118c799]
  404dc6:	push   edi
  404dc7:	out    dx,eax
  404dc8:	fwait
  404dc9:	adc    al,0x83
  404dcb:	push   0x8fc68eb2
  404dd0:	or     DWORD PTR [ecx],0xffffffc3
  404dd3:	mov    bh,0xbd
  404dd5:	mov    eax,0xc4dbebaf
  404dda:	sti    
  404ddb:	cli    
  404ddc:	sub    al,BYTE PTR [eax]
  404dde:	(bad)  
  404ddf:	xchg   esp,eax
  404de0:	loope  0x404e5d
  404de2:	mov    BYTE PTR [ebx-0x53],dh
  404de5:	adc    DWORD PTR [esi],ebp
  404de7:	ja     0x404df3
  404de9:	adc    bl,BYTE PTR [ecx-0x70aea95d]
  404def:	ss sub eax,0x277cfb53
  404df5:	mov    DWORD PTR [eax-0x3b],esi
  404df8:	lods   al,BYTE PTR ds:[esi]
  404df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dfa:	scas   eax,DWORD PTR es:[edi]
  404dfb:	inc    ecx
  404dfc:	sahf   
  404dfd:	es fs jecxz 0x404e3e
  404e01:	jmp    0xb47b:0x85296530
  404e08:	sbb    al,0xc4
  404e0a:	pop    eax
  404e0b:	xchg   edi,eax
  404e0c:	fdivr  st(0),st
  404e0e:	mov    ecx,0x1992cc7b
  404e13:	mov    eax,edi
  404e15:	ret    
  404e16:	imul   eax,DWORD PTR [esi+esi*2+0x719e395f],0x50768beb
  404e21:	sub    al,0x6d
  404e23:	xlat   BYTE PTR ds:[ebx]
  404e24:	icebp  
  404e25:	mov    ecx,0x75fbfb16
  404e2a:	aad    0x9f
  404e2c:	adc    eax,0xd11ca010
  404e31:	inc    esi
  404e32:	in     eax,0x31
  404e34:	lea    esp,[ecx]
  404e36:	addr16 xor eax,0xb4183b25
  404e3c:	mov    dl,0xd0
  404e3e:	repz adc al,0xc2
  404e41:	fist   DWORD PTR [ebx-0x1d]
  404e44:	fwait
  404e45:	push   ebx
  404e46:	jb     0x404df5
  404e48:	addr16 mov bh,0x8d
  404e4b:	call   0xd571362
  404e50:	sub    bh,BYTE PTR [ebx+0x619c115c]
  404e56:	jl     0x404eb7
  404e58:	adc    DWORD PTR [eax+ebp*4],edx
  404e5b:	ret    
  404e5c:	mov    ah,0xe4
  404e5e:	out    0x29,al
  404e60:	fild   WORD PTR [edx-0x37]
  404e63:	mov    edx,0x6c6d014
  404e68:	or     esp,ebp
  404e6a:	pop    ss
  404e6b:	shl    DWORD PTR [esp+ecx*8+0x76a4252],cl
  404e72:	popf   
  404e73:	int3   
  404e74:	or     eax,0xb3931703
  404e79:	and    DWORD PTR [eax],0xf29d0e4b
  404e7f:	or     al,0xa3
  404e81:	out    dx,al
  404e82:	daa    
  404e83:	outs   dx,BYTE PTR ds:[esi]
  404e84:	add    BYTE PTR [ebx],dl
  404e86:	pop    ebp
  404e87:	pop    esi
  404e88:	sbb    al,0xe1
  404e8a:	lods   al,BYTE PTR gs:[esi]
  404e8c:	outs   dx,DWORD PTR ds:[esi]
  404e8d:	xchg   edx,eax
  404e8e:	lahf   
  404e8f:	pop    eax
  404e90:	xchg   ecx,ebx
  404e92:	mov    eax,0x715e9470
  404e97:	cs out 0xc9,eax
  404e9a:	sub    BYTE PTR [ebp+0xf3936a1],0x36
  404ea1:	mov    cl,ch
  404ea3:	lock call 0x92c3:0x4dadd672
  404eab:	popf   
  404eac:	mov    edx,0xa96b41
  404eb1:	cwde   
  404eb2:	loop   0x404e43
  404eb4:	retf   0xd245
  404eb7:	test   ecx,ecx
  404eb9:	stc    
  404eba:	mov    ah,0xb8
  404ebc:	xor    eax,0x14f0b915
  404ec1:	aad    0x40
  404ec3:	cmp    eax,DWORD PTR [ebx]
  404ec5:	repnz in al,0xa8
  404ec8:	call   0xfdaa:0xe575aaa1
  404ecf:	push   ebx
  404ed0:	push   es
  404ed1:	das    
  404ed2:	ffree  st(6)
  404ed4:	sar    al,0x6a
  404ed7:	fidiv  DWORD PTR [edi+0x46]
  404eda:	pop    es
  404edb:	jmp    0xace0:0x84720266
  404ee2:	or     al,0x77
  404ee4:	pop    ebp
  404ee5:	cmp    BYTE PTR [ebx-0x44a7dd59],dh
  404eeb:	ss cmc 
  404eed:	pop    ss
  404eee:	adc    al,0xec
  404ef0:	inc    eax
  404ef1:	mov    esp,0x26edb208
  404ef6:	sbb    DWORD PTR [edx-0x21834382],0x6c
  404efd:	push   0xffffff9a
  404eff:	in     al,dx
  404f00:	add    DWORD PTR [ebx+0x45],esp
  404f03:	inc    esi
  404f04:	popa   
  404f05:	out    dx,al
  404f06:	inc    eax
  404f07:	mov    dh,ch
  404f09:	(bad)  
  404f0a:	lahf   
  404f0b:	push   es
  404f0c:	stos   DWORD PTR es:[edi],eax
  404f0d:	dec    esi
  404f0e:	or     BYTE PTR ds:0xdfbd05b1,0xea
  404f15:	add    al,0xff
  404f17:	jnp    0x404f8b
  404f19:	mov    edx,0x26394e71
  404f1e:	pop    esp
  404f1f:	cmp    al,0xcb
  404f21:	fstp   TBYTE PTR [esi]
  404f23:	xchg   esi,eax
  404f24:	test   eax,0x486eddc4
  404f29:	jno    0x404f4d
  404f2b:	and    ecx,DWORD PTR [ebx+0x1a]
  404f2e:	mov    dl,0xec
  404f30:	les    esp,FWORD PTR [ebx+0x22c1533]
  404f36:	adc    ch,al
  404f38:	stos   BYTE PTR es:[edi],al
  404f39:	fwait
  404f3a:	(bad)  
  404f3b:	and    ecx,DWORD PTR [ebx-0x16]
  404f3e:	pop    edi
  404f3f:	pop    es
  404f40:	mov    edi,edx
  404f42:	jb     0x404fa9
  404f44:	and    bh,dh
  404f46:	inc    edi
  404f47:	inc    DWORD PTR [ecx-0xb]
  404f4a:	sbb    DWORD PTR [esi-0x79],ebx
  404f4d:	dec    eax
  404f4e:	(bad)  
  404f4f:	cmc    
  404f50:	lods   eax,DWORD PTR ds:[esi]
  404f51:	retf   
  404f52:	test   al,0xea
  404f54:	mov    ah,0xfc
  404f56:	pushf  
  404f57:	pop    ecx
  404f58:	xchg   edx,eax
  404f59:	adc    dh,BYTE PTR [ebp-0x5e]
  404f5c:	sti    
  404f5d:	jmp    0x404f31
  404f5f:	mov    ebp,0x852f5669
  404f64:	call   0xf141:0x357c1460
  404f6b:	fwait
  404f6c:	out    dx,eax
  404f6d:	or     DWORD PTR [edi],ebp
  404f6f:	xchg   ebp,eax
  404f70:	repnz inc eax
  404f72:	leave  
  404f73:	pushf  
  404f74:	shl    DWORD PTR ds:0xf1948cd,1
  404f7a:	(bad)  
  404f7b:	lea    ebp,[edi]
  404f7d:	dec    edx
  404f7e:	fidiv  WORD PTR [edx+0x69e4c85e]
  404f84:	cmovp  edx,ebp
  404f87:	aam    0x95
  404f89:	aas    
  404f8a:	mov    DWORD PTR [ecx+0x24],edx
  404f8d:	cs push 0x7106f72f
  404f93:	xchg   esp,eax
  404f94:	push   esp
  404f95:	cld    
  404f96:	push   ebp
  404f97:	je     0x404f23
  404f99:	xlat   BYTE PTR ds:[ebx]
  404f9a:	aad    0xc4
  404f9c:	mov    cl,0x59
  404f9e:	sbb    BYTE PTR [ecx-0x52],bl
  404fa1:	push   esi
  404fa2:	jnp    0x404f2b
  404fa4:	inc    ebp
  404fa5:	mov    eax,0xaad56ee2
  404faa:	into   
  404fab:	push   ecx
  404fac:	push   edx
  404fad:	xor    eax,0xdb722f43
  404fb2:	sbb    BYTE PTR [edi+0x4e],dl
  404fb5:	pop    ebx
  404fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb7:	xchg   DWORD PTR [edx+esi*4+0x35875699],edi
  404fbe:	pushf  
  404fbf:	sbb    al,0x6d
  404fc1:	retf   0xe194
  404fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc5:	push   esp
  404fc6:	push   ecx
  404fc7:	scas   al,BYTE PTR es:[edi]
  404fc8:	mov    ds:0x95f8a09c,al
  404fcd:	stos   BYTE PTR es:[edi],al
  404fce:	add    eax,0x268400c2
  404fd3:	adc    esp,esp
  404fd5:	mov    bh,0x67
  404fd7:	into   
  404fd8:	mov    ds:0xa636e694,eax
  404fdd:	sbb    cl,BYTE PTR [ebx+eax*1]
  404fe0:	push   cs
  404fe1:	sub    dh,bl
  404fe3:	xor    ebx,DWORD PTR [ecx]
  404fe5:	mov    eax,ds:0xcc14bc2a
  404fea:	mov    ecx,0xaf67cc21
  404fef:	fnstenv [eax-0x7dc4ce32]
  404ff5:	mov    ?,WORD PTR [edi+ecx*2+0x7b]
  404ff9:	sub    DWORD PTR [ecx+0x8c5263a],edi
  404fff:	(bad)  
  405000:	sti    
  405001:	cs xchg esp,eax
  405003:	mov    ebx,0x572d061b
  405008:	inc    edi
  405009:	ins    BYTE PTR es:[edi],dx
  40500a:	inc    si
  40500c:	xor    ecx,DWORD PTR [esi]
  40500e:	jp     0x404fa7
  405010:	jns    0x404fa0
  405012:	xchg   edx,eax
  405013:	add    dl,0xa7
  405016:	adc    BYTE PTR [edi-0x7],0x8d
  40501a:	or     BYTE PTR [ebx*1-0x5ae83892],bh
  405021:	lods   al,BYTE PTR ds:[esi]
  405022:	mov    ecx,DWORD PTR [esi]
  405024:	sbb    ebp,DWORD PTR [edx+0x13]
  405027:	cmp    dh,BYTE PTR [esi+0x4c5b3810]
  40502d:	fs pop ds
  40502f:	sbb    edx,DWORD PTR [ebx+0x52be788b]
  405035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405036:	add    DWORD PTR [ecx-0xc],edx
  405039:	push   ss
  40503a:	fist   DWORD PTR [esi+edx*1-0x78dfe511]
  405041:	pop    esi
  405042:	in     eax,0xdb
  405044:	push   ds
  405045:	xor    eax,0x11d5650e
  40504a:	retf   0x56ac
  40504d:	jo     0x404ffb
  40504f:	clc    
  405050:	mov    ah,BYTE PTR [ebp+esi*8-0x25]
  405054:	ud0    esi,DWORD PTR [ebx]
  405057:	out    dx,al
  405058:	xchg   ebp,eax
  405059:	fs mov ebp,0xdb9ca75e
  40505f:	and    esi,DWORD PTR [edi]
  405061:	scas   eax,DWORD PTR es:[edi]
  405062:	adc    ecx,ecx
  405064:	xchg   edx,eax
  405065:	add    edi,esp
  405067:	into   
  405068:	outs   dx,BYTE PTR ds:[esi]
  405069:	xchg   DWORD PTR [edx+0x41],edx
  40506c:	mov    ah,0x88
  40506e:	lahf   
  40506f:	stos   DWORD PTR es:[edi],eax
  405070:	test   DWORD PTR ds:0xd0d8a00c,esp
  405076:	enter  0x6032,0xfa
  40507a:	sti    
  40507b:	sub    ebp,DWORD PTR [edx+eiz*2]
  40507e:	(bad)  
  40507f:	popa   
  405080:	xor    DWORD PTR [esi+0x2f],ebx
  405083:	inc    ebx
  405084:	call   ebx
  405086:	outs   dx,BYTE PTR ds:[esi]
  405087:	sbb    DWORD PTR [ebp+0x6],esi
  40508a:	mov    al,0x6a
  40508c:	mov    ebp,0x3bb49ac9
  405091:	and    cl,0x47
  405094:	fs gs aam 0xb6
  405098:	inc    esp
  405099:	sub    bh,BYTE PTR [ecx]
  40509b:	jle    0x40506f
  40509d:	xchg   edi,eax
  40509e:	ret    0xbbc3
  4050a1:	jmp    DWORD PTR [edx+0x57]
  4050a4:	in     al,0x5
  4050a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050a7:	inc    eax
  4050a8:	cmc    
  4050a9:	ret    0x5e1c
  4050ac:	shl    DWORD PTR [eax+0x538f865b],1
  4050b2:	and    al,0x2c
  4050b4:	fisub  DWORD PTR [ebx-0x35fae33c]
  4050ba:	addr16 mov al,ds:0xc423
  4050be:	ror    DWORD PTR [ecx+edx*2+0x3d],1
  4050c2:	jcxz   0x40512c
  4050c5:	icebp  
  4050c6:	mov    al,ds:0xf3b014f0
  4050cb:	push   es
  4050cc:	rol    cl,cl
  4050ce:	cmp    esp,DWORD PTR [esi-0x476a447d]
  4050d4:	mov    edi,0x3922908d
  4050d9:	cdq    
  4050da:	fsub   st,st(1)
  4050dc:	test   al,0x3c
  4050de:	jnp    0x4050b0
  4050e0:	int3   
  4050e1:	jge    0x4050ce
  4050e3:	inc    esi
  4050e4:	jge    0x4050a1
  4050e6:	push   eax
  4050e7:	sub    edi,DWORD PTR [eax+edx*2-0x2c7d1f33]
  4050ee:	repz push ecx
  4050f0:	outs   dx,BYTE PTR ds:[esi]
  4050f1:	push   esp
  4050f2:	sub    ch,BYTE PTR [edi]
  4050f4:	ret    
  4050f5:	(bad)  
  4050f6:	lods   eax,DWORD PTR ds:[esi]
  4050f7:	icebp  
  4050f8:	dec    esi
  4050f9:	or     al,bh
  4050fb:	sbb    eax,0x98154792
  405100:	jb     0x4050b2
  405102:	stc    
  405103:	mov    ds:0x38bfdd09,eax
  405108:	out    0x4e,al
  40510a:	jbe    0x40514e
  40510c:	sub    bh,BYTE PTR [esi+0x73]
  40510f:	push   ebp
  405110:	jp     0x405132
  405112:	jae    0x405173
  405114:	loope  0x4050b4
  405116:	jne    0x405104
  405118:	adc    al,0x7f
  40511a:	or     al,0x4b
  40511c:	scas   eax,DWORD PTR es:[edi]
  40511d:	jo     0x40517c
  40511f:	int3   
  405120:	(bad)  ds:0xf63fff7e
  405126:	and    BYTE PTR gs:[ebp+0x9c437cb],al
  40512d:	rol    BYTE PTR [ebx+0x88ccd00],0xdb
  405134:	push   ecx
  405135:	outs   dx,BYTE PTR ds:[esi]
  405136:	cli    
  405137:	loopne 0x405134
  405139:	mov    eax,0xe1537e82
  40513e:	jmp    0x405171
  405140:	inc    ebx
  405141:	lahf   
  405142:	dec    esi
  405143:	sub    BYTE PTR [ebx-0x27],cl
  405146:	dec    ebp
  405147:	pop    edx
  405148:	repnz or BYTE PTR ds:0xf663fd06,ah
  40514f:	mov    ?,WORD PTR [ebx-0x47994386]
  405155:	das    
  405156:	loopne 0x405145
  405158:	sbb    dh,BYTE PTR [ebx+0x7a14cfaa]
  40515e:	btr    DWORD PTR [ebx+0x35a205b4],edi
  405165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405166:	xor    edi,ecx
  405168:	fcom   st(7)
  40516a:	in     eax,0xdb
  40516c:	and    DWORD PTR [eax],eax
  40516e:	mov    eax,ds:0xe3c6d240
  405173:	outs   dx,BYTE PTR ds:[esi]
  405174:	cwde   
  405175:	mov    ecx,DWORD PTR [eax-0x704078f5]
  40517b:	fld    st(6)
  40517d:	dec    ebx
  40517e:	int    0x55
  405180:	xor    BYTE PTR [eax],bl
  405182:	mov    bh,0x38
  405184:	adc    bl,cl
  405186:	adc    DWORD PTR [esi+eiz*2],edx
  405189:	stos   DWORD PTR es:[edi],eax
  40518a:	push   ds
  40518b:	daa    
  40518c:	jns    0x405126
  40518e:	shl    DWORD PTR [edx],1
  405190:	pop    eax
  405191:	fadd   DWORD PTR [esi-0x4f]
  405194:	test   al,0xae
  405196:	stc    
  405197:	xchg   esi,eax
  405198:	lahf   
  405199:	mov    dh,0xbf
  40519b:	sbb    eax,0x660bccc9
  4051a0:	popf   
  4051a1:	cwde   
  4051a2:	sbb    ch,BYTE PTR [esi+ebx*4]
  4051a5:	jbe    0x40519c
  4051a7:	out    0xea,eax
  4051a9:	test   al,0x1e
  4051ab:	jmp    0xb6a2:0x629095ad
  4051b2:	and    DWORD PTR [edi],ecx
  4051b4:	popf   
  4051b5:	push   ss
  4051b6:	jp     0x405235
  4051b8:	lock dec edx
  4051ba:	jge    0x40519a
  4051bc:	shr    DWORD PTR [edx+ecx*4-0x2ec68890],1
  4051c3:	mov    ah,0x26
  4051c5:	jmp    0x8fdd:0x8bc69b6a
  4051cc:	add    al,0x41
  4051cf:	int    0xae
  4051d1:	inc    edx
  4051d2:	mov    ah,0x46
  4051d4:	xchg   BYTE PTR [ecx-0x121daef3],dl
  4051da:	mov    dh,0x6b
  4051dc:	sbb    al,0x5c
  4051de:	packuswb mm1,QWORD PTR [ebp+0x6]
  4051e2:	jmp    0x7dd5:0x3f818b6d
  4051e9:	sbb    al,0x21
  4051eb:	inc    edi
  4051ec:	jl     0x4051a6
  4051ee:	loope  0x405229
  4051f0:	pop    ebx
  4051f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f2:	cwde   
  4051f3:	jae    0x405251
  4051f5:	jl     0x405244
  4051f7:	mov    edx,0x51a2a591
  4051fc:	stos   DWORD PTR es:[edi],eax
  4051fd:	jg     0x40527d
  4051ff:	sbb    BYTE PTR [eax+0x65c64a6d],0x73
  405206:	sbb    edi,DWORD PTR [ecx-0x2c36a1d7]
  40520c:	sbb    esi,eax
  40520e:	pop    ss
  40520f:	fdivr  QWORD PTR [ecx+0x6f]
  405212:	pop    esi
  405213:	dec    eax
  405214:	sbb    bl,BYTE PTR [ebp+0x4adfa2fb]
  40521a:	dec    esp
  40521b:	aam    0x74
  40521d:	test   DWORD PTR [ebx+0x35],edi
  405220:	ins    DWORD PTR es:[edi],dx
  405221:	mov    ds:0x78ce7bf0,eax
  405226:	sti    
  405227:	sub    eax,DWORD PTR [eax]
  405229:	or     DWORD PTR [edx-0x3b],0x7e
  40522d:	pop    es
  40522e:	adc    esp,DWORD PTR [esi]
  405230:	popa   
  405231:	retf   0x5485
  405234:	(bad)  
  405235:	sbb    esi,DWORD PTR [ecx+ecx*4-0x60fb618a]
  40523c:	add    al,0x33
  40523e:	fcmovne st,st(1)
  405240:	inc    ebp
  405241:	jb     0x4052a4
  405243:	inc    ebx
  405244:	xlat   BYTE PTR ds:[ebx]
  405245:	in     al,0xdb
  405247:	cmp    al,0xd
  405249:	in     al,dx
  40524a:	jno    0x405297
  40524c:	add    edx,edi
  40524e:	pop    ds
  40524f:	sbb    al,0x25
  405251:	out    0x4c,al
  405253:	jge    0x40520e
  405255:	cmp    eax,0xd2ab0787
  40525a:	sti    
  40525b:	push   0xc923ede0
  405260:	sbb    dl,bh
  405262:	inc    eax
  405263:	loope  0x4052d1
  405265:	loop   0x405293
  405267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405268:	adc    eax,0xdd44cb02
  40526d:	pop    eax
  40526e:	clc    
  40526f:	jl     0x4052aa
  405271:	xchg   BYTE PTR [ecx+0x34ba3dc7],al
  405277:	push   esi
  405278:	int3   
  405279:	push   ds
  40527a:	xchg   ecx,eax
  40527b:	mov    dh,0x50
  40527d:	jmp    0xb0caed94
  405282:	in     al,dx
  405283:	fld    QWORD PTR [edx-0x2d]
  405286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405287:	sbb    BYTE PTR [edi],dl
  405289:	mov    esp,0xbee4ba81
  40528e:	mov    edi,0xdb80b07
  405293:	cmc    
  405294:	and    al,BYTE PTR [ebx+0x6d]
  405297:	cs cwde 
  405299:	imul   ebx,ecx,0xffffff87
  40529c:	dec    eax
  40529d:	outs   dx,BYTE PTR ds:[esi]
  40529e:	cld    
  40529f:	and    ebp,DWORD PTR [ebp+0x32]
  4052a2:	inc    esi
  4052a3:	ja     0x40522b
  4052a5:	(bad)  
  4052a6:	xor    al,0x59
  4052a8:	cli    
  4052a9:	jecxz  0x4052de
  4052ab:	dec    ecx
  4052ac:	hlt    
  4052ad:	fcomp  st(5)
  4052af:	jo     0x405274
  4052b1:	mov    dl,0xa6
  4052b3:	sub    DWORD PTR ds:0x5baaf93,ebp
  4052b9:	jmp    0xcdf7:0x5029baaf
  4052c0:	gs mov ebx,0x863062ac
  4052c6:	ficom  WORD PTR [edx-0x5b]
  4052c9:	subps  xmm4,XMMWORD PTR [edx+eax*4-0x126e9a07]
  4052d1:	push   cs
  4052d2:	in     al,0x5
  4052d4:	jno    0x405264
  4052d6:	loopne 0x405339
  4052d8:	ffree  st(5)
  4052da:	sub    BYTE PTR [ecx+0x4bc11eed],al
  4052e0:	inc    edi
  4052e1:	push   ss
  4052e2:	xchg   esp,eax
  4052e3:	mov    ch,0x97
  4052e5:	outs   dx,BYTE PTR ds:[esi]
  4052e6:	pop    esi
  4052e7:	imul   ebp,DWORD PTR [edi-0x4a7649cb],0x4bdb1f38
  4052f1:	pop    es
  4052f2:	pop    ss
  4052f3:	and    DWORD PTR [edx+0x43],edi
  4052f6:	dec    ebx
  4052f7:	or     al,0xf9
  4052f9:	cwde   
  4052fa:	je     0x4052b2
  4052fc:	and    eax,0x3ec34370
  405301:	ins    BYTE PTR es:[edi],dx
  405302:	ror    BYTE PTR [edx-0x5e],cl
  405305:	xchg   ebp,eax
  405306:	jmp    0xab32:0x1b32b582
  40530d:	test   DWORD PTR [esi-0x3819db6a],edi
  405313:	add    BYTE PTR [ebx+0x6c635962],bl
  405319:	xchg   BYTE PTR [ebx],cl
  40531b:	mov    fs,edx
  40531d:	les    eax,FWORD PTR [edx+ebx*2+0x62]
  405321:	xchg   ebx,eax
  405322:	stos   DWORD PTR es:[edi],eax
  405323:	out    0x5f,eax
  405325:	pop    edx
  405326:	xchg   edx,eax
  405327:	push   0x3bb25d7b
  40532c:	pop    es
  40532d:	(bad)  
  40532e:	inc    esp
  40532f:	add    BYTE PTR [edi-0x66],0xbf
  405333:	push   ebp
  405334:	mul    DWORD PTR es:0x864fae80
  40533b:	xor    DWORD PTR ds:0x27390cb2,esi
  405341:	(bad)
  405344:	popa   
  405345:	jecxz  0x405377
  405347:	and    BYTE PTR [ebp-0x61a9479c],bh
  40534d:	and    al,0x0
  40534f:	enter  0x2a6b,0xa2
  405353:	enter  0x4dd2,0x4c
  405357:	clc    
  405358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405359:	jle    0x405365
  40535b:	push   ecx
  40535c:	jp     0x405318
  40535e:	cwde   
  40535f:	lods   al,BYTE PTR ds:[esi]
  405360:	adc    al,al
  405362:	pop    ecx
  405363:	inc    eax
  405364:	lea    esp,[ebx-0x6696d166]
  40536a:	mov    edi,0x3f67c7f3
  40536f:	mov    eax,0xd364425f
  405374:	imul   ecx,DWORD PTR [esi+0x18c32022],0xb79ff008
  40537e:	mov    esp,0xeb1e9b61
  405383:	loop   0x40539d
  405385:	jge    0x405334
  405387:	jge    0x40534e
  405389:	jb     0x4053da
  40538b:	push   edi
  40538c:	jmp    0xe8d44554
  405391:	call   0x32fee8db
  405396:	repnz or DWORD PTR [eax-0x71],edi
  40539a:	imul   edx,DWORD PTR [edi-0x373ca0bd],0x1dafdfaa
  4053a4:	adc    eax,0x2502fea7
  4053a9:	xchg   esp,eax
  4053aa:	and    BYTE PTR [esp+esi*1+0x174935de],dh
  4053b1:	adc    DWORD PTR [ebp+edi*4-0x40ec547a],esp
  4053b8:	retf   
  4053b9:	pop    esp
  4053ba:	push   ebx
  4053bb:	sahf   
  4053bc:	jno    0x40535b
  4053be:	inc    ecx
  4053bf:	fbld   TBYTE PTR [esi-0x6]
  4053c2:	cmp    eax,0xccc1499f
  4053c7:	cmp    esp,esp
  4053c9:	leave  
  4053ca:	setns  BYTE PTR gs:[edi+0xa]
  4053cf:	or     edx,ecx
  4053d1:	mov    bl,0x83
  4053d3:	jle    0x405375
  4053d5:	call   0xe709a54d
  4053da:	push   ebx
  4053db:	dec    edi
  4053dc:	out    dx,eax
  4053dd:	adc    BYTE PTR ds:0x2ea60b3e,0x5f
  4053e4:	push   ebp
  4053e5:	stos   BYTE PTR es:[edi],al
  4053e6:	jmp    0xcc63b096
  4053eb:	out    0xaf,eax
  4053ed:	jmp    0xf4a2:0xc25c4336
  4053f4:	gs test al,0x43
  4053f7:	mov    edi,0xdd98c73c
  4053fc:	adc    edi,esi
  4053fe:	outs   dx,BYTE PTR fs:[esi]
  405400:	dec    eax
  405401:	and    BYTE PTR [ecx-0x76],bl
  405404:	add    BYTE PTR [eax-0x28],dl
  405407:	xor    al,0xa0
  405409:	push   esp
  40540a:	pop    ebp
  40540b:	xchg   edi,eax
  40540c:	mov    ds:0xd19bb8f6,eax
  405411:	scas   al,BYTE PTR es:[edi]
  405412:	ds dec edx
  405414:	pop    esi
  405415:	daa    
  405416:	imul   eax,DWORD PTR [ecx],0x2a670466
  40541c:	inc    esp
  40541d:	les    esp,FWORD PTR [edi+0x5d933e7c]
  405423:	icebp  
  405424:	lds    ebx,FWORD PTR [edx+0x3648d874]
  40542a:	adc    al,0xa0
  40542c:	enter  0x31d4,0x42
  405430:	cwde   
  405431:	pusha  
  405432:	or     DWORD PTR [ebx+edx*2],esp
  405435:	push   ecx
  405436:	hlt    
  405437:	jb     0x405472
  405439:	pop    ecx
  40543a:	sbb    bh,BYTE PTR [ebp+eax*2+0x1b483aa2]
  405441:	sbb    al,0x93
  405443:	fs dec edx
  405445:	test   BYTE PTR [esp+edx*4+0xd],ah
  405449:	cld    
  40544a:	out    0x57,eax
  40544c:	pop    esi
  40544d:	aam    0x0
  40544f:	mov    dl,0x5c
  405451:	push   esi
  405452:	jae    0x405477
  405454:	adc    al,0xde
  405456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405457:	(bad)  
  405458:	psrlq  mm3,QWORD PTR [esi+0x38b42ace]
  40545f:	push   esi
  405460:	mov    ds:0xc2536735,eax
  405465:	mov    dl,0xc0
  405467:	push   es
  405468:	mov    esi,0xc9940a48
  40546d:	jns    0x405470
  40546f:	jl     0x40543e
  405471:	mov    ebp,0x39dafe3
  405476:	sbb    eax,0x3c0b8a07
  40547b:	int    0x2a
  40547d:	(bad)  
  40547e:	pop    ds
  40547f:	push   0xffffffa8
  405481:	pop    ss
  405482:	or     al,0x3b
  405485:	cmp    BYTE PTR [eax+0xe8f6943],ch
  40548b:	aad    0xb2
  40548d:	xchg   edi,eax
  40548e:	push   ecx
  40548f:	(bad)  
  405490:	dec    ebx
  405491:	jl     0x4054e0
  405493:	jne    0x4054f9
  405495:	ret    
  405496:	jnp    0x40541f
  405498:	adc    BYTE PTR [edx+edi*8+0x78],al
  40549c:	xchg   edx,eax
  40549d:	and    edi,DWORD PTR [edi+0x360f0a2b]
  4054a3:	add    dh,BYTE PTR [edi+0x5f190bd7]
  4054a9:	imul   esi,DWORD PTR [edx-0x4914982a],0x116da5df
  4054b3:	(bad)  
  4054b4:	div    ah
  4054b6:	sbb    al,0xd0
  4054b8:	ss push eax
  4054ba:	or     DWORD PTR [esi+edi*4+0x1c],ebp
  4054be:	mov    ebx,0x504e0241
  4054c3:	sbb    eax,0xbd35b92d
  4054c8:	or     al,0xdb
  4054ca:	clc    
  4054cb:	call   0x8b50:0x8177c24
  4054d2:	es inc ebx
  4054d5:	push   0x57
  4054d7:	push   es
  4054d8:	popa   
  4054d9:	pop    edi
  4054da:	pop    ds
  4054db:	xor    BYTE PTR [ebp+esi*1+0x53a00285],dh
  4054e2:	lods   al,BYTE PTR ds:[esi]
  4054e3:	aad    0xdd
  4054e5:	rdmsr  
  4054e7:	jmp    DWORD PTR [ebp+0x4e8143b]
  4054ed:	or     eax,0x5b514632
  4054f2:	leave  
  4054f3:	lock fst DWORD PTR ds:0x5a3b853a
  4054fa:	jns    0x4054e3
  4054fc:	mov    esi,0x8d6d1868
  405501:	xlat   BYTE PTR ds:[ebx]
  405502:	rcl    bl,1
  405504:	popf   
  405505:	adc    DWORD PTR [esi],edx
  405507:	idiv   BYTE PTR [esi]
  405509:	stos   DWORD PTR es:[edi],eax
  40550a:	or     esi,0x6c
  40550d:	test   al,0xef
  40550f:	fstp   TBYTE PTR [eax-0x79]
  405512:	aad    0xc5
  405514:	cmp    eax,DWORD PTR [eax]
  405516:	imul   edi,DWORD PTR [edx+0xa],0x4c
  40551a:	inc    ebp
  40551b:	or     DWORD PTR [ebp+eax*2+0x17],0xfef3c75f
  405523:	pusha  
  405524:	inc    edi
  405525:	call   0x3a1f:0xa2c371ca
  40552c:	add    eax,0xc60d84a0
  405531:	jbe    0x405535
  405533:	pop    ds
  405534:	xlat   BYTE PTR ds:[ebx]
  405535:	mov    eax,ds:0x36e3bacc
  40553a:	aad    0xe2
  40553c:	cmp    esp,DWORD PTR [ecx+eax*8]
  40553f:	jmp    0x7b6f:0x27ed359
  405546:	aam    0x55
  405548:	(bad)  
  40554a:	pop    eax
  40554b:	std    
  40554c:	outs   dx,BYTE PTR ds:[esi]
  40554d:	push   esp
  40554e:	stos   BYTE PTR es:[edi],al
  40554f:	ficomp WORD PTR [edx-0x3]
  405552:	sbb    DWORD PTR [edi],edx
  405554:	lock neg esp
  405557:	adc    ebp,DWORD PTR [edx+edi*1+0x76]
  40555b:	pop    ebp
  40555c:	aas    
  40555d:	add    eax,0x3f95beac
  405562:	cli    
  405563:	js     0x40555f
  405565:	cmp    BYTE PTR es:[ebp-0x925aee4],bl
  40556c:	and    ebx,DWORD PTR [ebx]
  40556e:	jecxz  0x4055a1
  405570:	(bad)  
  405572:	jp     0x40555e
  405574:	jmp    0x1ca4:0x3d8a019a
  40557b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40557c:	scas   eax,DWORD PTR es:[edi]
  40557d:	in     al,0xb1
  40557f:	das    
  405580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405581:	(bad)  
  405582:	and    edx,esi
  405584:	push   fs
  405586:	(bad)  
  405587:	rcl    BYTE PTR [esp+ecx*1],0xb3
  40558b:	xchg   DWORD PTR [ebx],ebp
  40558d:	sub    DWORD PTR [esi-0x34],ebx
  405590:	daa    
  405591:	cs ds mov dh,0x54
  405595:	sbb    eax,DWORD PTR [edx-0x7ebe091e]
  40559b:	in     eax,0xf5
  40559d:	xor    DWORD PTR [edi],0xeb8a866b
  4055a3:	ins    DWORD PTR es:[edi],dx
  4055a4:	push   edx
  4055a5:	push   esp
  4055a6:	repz and al,0xfd
  4055a9:	jmp    0x40559f
  4055ab:	bound  esi,QWORD PTR [ecx-0x7a]
  4055ae:	lds    esi,FWORD PTR [bx+si]
  4055b1:	xchg   ebp,eax
  4055b2:	loopne 0x4055bd
  4055b4:	xor    eax,0x2800a58a
  4055b9:	inc    eax
  4055ba:	shr    ecx,0xb7
  4055bd:	leave  
  4055be:	cmp    al,BYTE PTR [ecx-0x7f69ecbc]
  4055c4:	lock push eax
  4055c6:	pop    ebp
  4055c7:	int    0xe9
  4055c9:	repz fisttp QWORD PTR [ebx+0x13c4a641]
  4055d0:	loope  0x40557b
  4055d2:	pop    edi
  4055d3:	mov    esi,0xb7bbec62
  4055d8:	leave  
  4055d9:	jge    0x405577
  4055db:	fnstenv [ebp+0x33]
  4055de:	mov    bh,0xb4
  4055e0:	dec    esp
  4055e1:	xchg   esi,eax
  4055e2:	xchg   ebp,eax
  4055e3:	jg     0x4055b5
  4055e5:	out    dx,eax
  4055e6:	es ins BYTE PTR es:[edi],dx
  4055e8:	mov    esi,DWORD PTR [ebx+0x11]
  4055eb:	sbb    BYTE PTR [edx-0x7b],bl
  4055ee:	xchg   BYTE PTR [edx-0x65fb0867],dl
  4055f4:	icebp  
  4055f5:	inc    esi
  4055f6:	test   BYTE PTR ds:0x6f09005,0x67
  4055fd:	ret    0xa48e
  405600:	adc    al,0xc5
  405602:	shl    BYTE PTR [ebp+0x721d61ec],1
  405608:	mov    BYTE PTR [ebx-0x44a8671c],0x27
  40560f:	ret    
  405610:	lds    ebp,FWORD PTR [eax-0x61c8afe1]
  405616:	mov    esi,DWORD PTR [ebx+edi*1]
  405619:	outs   dx,DWORD PTR ds:[esi]
  40561a:	or     bl,bh
  40561c:	mov    ds:0x873b351a,al
  405621:	dec    edx
  405622:	sub    al,BYTE PTR [ecx+0x65]
  405625:	ja     0x40569e
  405627:	iret   
  405628:	add    esi,DWORD PTR [edx]
  40562a:	cmp    DWORD PTR ds:0x421e7013,esp
  405630:	xor    dh,BYTE PTR [ecx+esi*2]
  405633:	and    al,bh
  405635:	aas    
  405636:	lea    esp,es:[esi-0x36]
  40563a:	push   0xffffffba
  40563c:	sub    ah,BYTE PTR ds:0x6568d18
  405642:	out    0xad,eax
  405644:	ins    DWORD PTR es:[edi],dx
  405645:	out    dx,al
  405646:	or     BYTE PTR [ebp-0x79],bl
  405649:	pop    es
  40564a:	mov    edi,0x7f781241
  40564f:	sub    al,0xd8
  405651:	xchg   ecx,eax
  405652:	xchg   edi,eax
  405653:	mov    ebp,0x702f51be
  405658:	repnz pop ebp
  40565a:	mov    ebx,0x5568f0fe
  40565f:	and    BYTE PTR [esi-0x58],dh
  405662:	stos   DWORD PTR es:[edi],eax
  405663:	jp     0x405671
  405665:	cmp    eax,0x14868425
  40566a:	mov    eax,ds:0xa69124b2
  40566f:	pop    gs
  405671:	pop    ebx
  405672:	test   DWORD PTR [ecx+eax*2+0x150bd25],edi
  405679:	inc    ecx
  40567a:	add    al,al
  40567c:	or     BYTE PTR [esi-0x42],al
  40567f:	pop    ebp
  405680:	sub    esi,DWORD PTR [edi]
  405682:	push   ecx
  405683:	lock jge 0x405653
  405686:	stos   BYTE PTR es:[edi],al
  405687:	pop    ss
  405688:	xor    DWORD PTR [ebx+0x2e],ebx
  40568b:	push   0x4d
  40568d:	mov    dl,0x50
  40568f:	ins    BYTE PTR es:[edi],dx
  405690:	in     eax,dx
  405691:	push   edi
  405692:	test   DWORD PTR [ebp-0x45],ecx
  405695:	or     eax,0xb07fe0f4
  40569a:	sub    BYTE PTR [esi+ecx*4-0x54],bh
  40569e:	mov    ds:0xc3fd76b6,al
  4056a3:	xchg   ecx,eax
  4056a4:	stc    
  4056a5:	or     DWORD PTR [ebp+0x1566e747],ecx
  4056ab:	das    
  4056ac:	int    0x34
  4056ae:	mov    ?,WORD PTR [esi+0x6767cd93]
  4056b4:	pop    edi
  4056b5:	jnp    0x405671
  4056b7:	out    dx,al
  4056b8:	pop    esi
  4056b9:	call   0xe30d5c36
  4056be:	std    
  4056bf:	sbb    DWORD PTR [edi+edx*4+0x34124111],ebp
  4056c6:	add    bh,cl
  4056c8:	in     al,0x59
  4056ca:	pop    ebx
  4056cb:	push   ss
  4056cc:	shr    DWORD PTR [edx+0x3b7e65c1],1
  4056d2:	ja     0x405742
  4056d4:	jle    0x40574b
  4056d6:	pop    eax
  4056d7:	scas   eax,DWORD PTR es:[edi]
  4056d8:	mov    dh,cl
  4056da:	pop    ebx
  4056db:	mov    dh,0x87
  4056dd:	fs gs (bad) 
  4056e0:	push   0xffffffed
  4056e2:	or     eax,0x161562f9
  4056e7:	pop    ds
  4056e8:	rcr    BYTE PTR [edx+edx*1],0xae
  4056ec:	jle    0x4056da
  4056ee:	(bad)  
  4056f0:	in     eax,0xe2
  4056f2:	push   ss
  4056f3:	xor    al,0x98
  4056f5:	into   
  4056f6:	xchg   ebx,eax
  4056f7:	js     0x405690
  4056f9:	aam    0xa2
  4056fb:	mov    bp,0x9ead
  4056ff:	int    0x8d
  405701:	adc    BYTE PTR [edx-0x4e],al
  405704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405705:	xchg   ebp,eax
  405706:	aaa    
  405707:	je     0x40575e
  405709:	sti    
  40570a:	cmp    al,0xbd
  40570c:	(bad)
  405711:	fstp   DWORD PTR [ebx]
  405713:	loop   0x40573b
  405715:	add    edi,DWORD PTR [edx-0x12e0c497]
  40571b:	add    DWORD PTR [edi-0x25],esp
  40571e:	stos   BYTE PTR es:[edi],al
  40571f:	ins    DWORD PTR es:[edi],dx
  405720:	or     cl,BYTE PTR ds:0x2bd11292
  405726:	inc    ebx
  405727:	int3   
  405728:	sbb    BYTE PTR [esi+0x78],ah
  40572b:	xchg   edi,eax
  40572c:	aaa    
  40572d:	mul    BYTE PTR [edi+eiz*4-0x3fffd9d2]
  405734:	sbb    BYTE PTR [esi+eax*1-0x19],ah
  405738:	popf   
  405739:	mov    eax,?
  40573b:	adc    esi,DWORD PTR [edi+0xd]
  40573e:	pop    edx
  40573f:	in     al,dx
  405740:	jmp    0x75981374
  405745:	push   ss
  405746:	popa   
  405747:	and    eax,DWORD PTR [ebx-0x77]
  40574a:	xchg   esp,eax
  40574b:	stc    
  40574c:	lea    esp,[edx+0x1c]
  40574f:	loope  0x40577e
  405751:	inc    ecx
  405753:	adc    BYTE PTR [ebx],bl
  405755:	inc    eax
  405756:	mul    BYTE PTR [ebx-0x112f7bb5]
  40575c:	mov    ds:0x209263a,eax
  405761:	sbb    DWORD PTR [edx-0x50],ebx
  405764:	mov    dh,cl
  405766:	or     edi,0xffffffa8
  405769:	xchg   esp,eax
  40576a:	push   0xffffffa2
  40576c:	outs   dx,BYTE PTR ds:[esi]
  40576d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40576e:	ins    BYTE PTR es:[edi],dx
  40576f:	sbb    eax,0xabe7bfb5
  405774:	cmp    BYTE PTR [ebx],0x49
  405777:	add    eax,0x955bb059
  40577c:	test   ah,0x8e
  40577f:	add    eax,0x5f218422
  405784:	std    
  405785:	pop    esi
  405786:	push   ebp
  405787:	jo     0x4057bf
  405789:	ret    
  40578a:	enter  0x9135,0x5e
  40578e:	xor    ecx,DWORD PTR [ebx-0x6ae20995]
  405794:	ds (bad) 
  405796:	push   0xffffff8b
  405798:	xchg   ebx,eax
  405799:	push   cs
  40579a:	jbe    0x40579e
  40579c:	(bad)  
  40579d:	jp     0x40581d
  40579f:	xchg   ebx,eax
  4057a0:	inc    ebp
  4057a1:	test   al,0x12
  4057a3:	sar    BYTE PTR [edx],0x4f
  4057a6:	mov    al,0x81
  4057a8:	stos   BYTE PTR es:[edi],al
  4057a9:	test   al,0x2b
  4057ab:	popa   
  4057ac:	mov    ebx,0x4f2946a
  4057b1:	inc    edi
  4057b2:	leave  
  4057b3:	std    
  4057b4:	push   sp
  4057b6:	cwde   
  4057b7:	dec    esi
  4057b8:	sub    eax,0xb31e555f
  4057bd:	cs mov cl,0x6e
  4057c0:	hlt    
  4057c1:	add    ah,BYTE PTR [edi+0x19]
  4057c4:	mov    DWORD PTR [ebp+0x43c43538],ecx
  4057ca:	add    eax,0x8cac9e14
  4057cf:	and    DWORD PTR [esi-0x68],0x78
  4057d3:	mov    dh,0xd1
  4057d5:	cwde   
  4057d6:	jp     0x4057c2
  4057d8:	and    eax,0xfd29e842
  4057dd:	test   BYTE PTR [ecx-0xa615867],ah
  4057e3:	pusha  
  4057e4:	mov    ecx,gs
  4057e6:	lds    ebp,FWORD PTR [ebx+0x4a]
  4057e9:	dec    ecx
  4057ea:	pop    ebx
  4057eb:	dec    eax
  4057ec:	sbb    DWORD PTR [esi+0xe],edi
  4057ef:	pop    es
  4057f0:	arpl   WORD PTR [edx-0x4ee286b8],bx
  4057f6:	mov    BYTE PTR [ecx],0x1a
  4057f9:	sub    BYTE PTR [ebx+0x26],ch
  4057fc:	add    al,0x70
  4057fe:	into   
  4057ff:	xchg   esp,edi
  405801:	xchg   edi,eax
  405802:	push   cs
  405803:	fs jmp 0x405880
  405806:	push   eax
  405807:	jg     0x4057df
  405809:	test   al,0x9b
  40580b:	inc    ecx
  40580c:	mov    bl,0xaf
  40580e:	xor    ah,BYTE PTR [eax+esi*1]
  405811:	aas    
  405812:	arpl   WORD PTR [ecx],bp
  405814:	cmp    DWORD PTR [ebx],ebp
  405816:	adc    eax,0x62731887
  40581b:	sub    ebx,DWORD PTR [esi+ebp*1+0x3aa5580b]
  405822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405823:	std    
  405824:	adc    ecx,DWORD PTR [ebx-0x5a]
  405827:	cli    
  405828:	mov    dl,0x82
  40582a:	ja     0x4057f0
  40582c:	inc    esp
  40582d:	mov    esp,0x7a418c30
  405832:	pushf  
  405833:	add    DWORD PTR [eax-0x19],esi
  405836:	mov    ecx,0xe20adc28
  40583b:	push   es
  40583c:	and    edi,edx
  40583e:	fisttp QWORD PTR [ebx+edi*8+0x21378fb7]
  405845:	xlat   BYTE PTR ds:[ebx]
  405846:	cmp    ch,BYTE PTR [esi+0x28]
  405849:	inc    ebp
  40584a:	hlt    
  40584b:	aas    
  40584c:	inc    edx
  40584d:	cdq    
  40584e:	call   0x6990:0xd98b9e75
  405855:	lock adc eax,0x3971eb5d
  40585b:	jns    0x4057f3
  40585d:	push   esi
  40585e:	pop    ecx
  40585f:	hlt    
  405860:	dec    ebp
  405861:	push   ebx
  405862:	mov    ecx,DWORD PTR [edi+0x76316aed]
  405868:	ret    0x194a
  40586b:	gs cmp bh,0x45
  40586f:	pop    eax
  405870:	mov    ah,0xcb
  405872:	outs   dx,BYTE PTR ds:[esi]
  405873:	jno    0x4057f7
  405875:	(bad)  
  405876:	mov    ecx,0x6034a627
  40587b:	inc    ecx
  40587c:	call   DWORD PTR [ecx]
  40587e:	mov    esi,DWORD PTR [edx+eiz*2+0x50e6da90]
  405885:	add    al,0x47
  405887:	push   0xffffff96
  405889:	xor    esi,eax
  40588b:	pop    eax
  40588c:	push   esp
  40588d:	js     0x405889
  40588f:	add    al,0x70
  405891:	pop    esi
  405892:	(bad)  
  405893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405894:	mov    cl,0xa
  405896:	scas   eax,DWORD PTR es:[edi]
  405897:	mov    dh,0x2d
  405899:	jb     0x4058ee
  40589b:	push   edx
  40589c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40589d:	sbb    BYTE PTR [eax],al
  40589f:	lds    ebx,FWORD PTR [ebx+0x7bd6876a]
  4058a5:	in     eax,0x68
  4058a7:	add    bh,BYTE PTR [eax+0x2f]
  4058aa:	add    ebp,ebx
  4058ac:	xchg   BYTE PTR [esi-0x3a],cl
  4058af:	ins    BYTE PTR es:[edi],dx
  4058b0:	inc    esp
  4058b1:	or     eax,0xea339401
  4058b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b7:	(bad)  
  4058b9:	das    
  4058ba:	jmp    0x88195c9d
  4058bf:	xor    eax,0xc528b3ce
  4058c4:	in     al,dx
  4058c5:	je     0x405867
  4058c7:	push   ss
  4058c8:	pop    ebp
  4058c9:	push   0xffffffe7
  4058cb:	xchg   ecx,eax
  4058cc:	jmp    0x4058d3
  4058ce:	pushf  
  4058cf:	les    edx,FWORD PTR [edi+0x6457d8d8]
  4058d5:	in     eax,dx
  4058d6:	out    dx,al
  4058d7:	push   0x54
  4058d9:	sbb    dl,0x55
  4058dc:	sbb    esi,DWORD PTR [esi+0x51]
  4058df:	xor    edi,eax
  4058e1:	xchg   edx,eax
  4058e2:	sub    BYTE PTR [ebp+edx*8+0x4c],al
  4058e6:	mov    ?,WORD PTR ds:0x3c80f51e
  4058ec:	and    ah,BYTE PTR [ecx+0x556768d7]
  4058f2:	jmp    0x40596f
  4058f4:	mov    ds:0xdeea8581,eax
  4058f9:	pop    esi
  4058fa:	cld    
  4058fb:	xlat   BYTE PTR ds:[ebx]
  4058fc:	pusha  
  4058fd:	pop    ecx
  4058fe:	lods   eax,DWORD PTR ds:[esi]
  4058ff:	inc    ebp
  405900:	and    ah,BYTE PTR [eax+eiz*4]
  405903:	ins    BYTE PTR es:[edi],dx
  405904:	mov    ah,0x82
  405906:	pop    ecx
  405907:	je     0x4058ad
  405909:	xor    ah,BYTE PTR [eax]
  40590b:	cmp    cl,bh
  40590d:	inc    ebx
  40590e:	stos   BYTE PTR es:[edi],al
  40590f:	sbb    DWORD PTR [ebp-0x6c24aebe],esp
  405915:	cmp    al,0xcd
  405917:	push   cs
  405918:	std    
  405919:	es push esi
  40591b:	push   edi
  40591c:	xchg   edx,eax
  40591d:	inc    eax
  40591e:	xor    bh,BYTE PTR [ebp+0x32c5cfa5]
  405924:	in     eax,dx
  405925:	js     0x40593e
  405927:	dec    ecx
  405928:	mov    bl,0xb7
  40592a:	sub    al,0xa3
  40592c:	lds    edi,FWORD PTR [ebp+0x56]
  40592f:	push   0xffffffcb
  405931:	ss jne 0x40596c
  405934:	mov    bl,dl
  405936:	dec    ebx
  405937:	adc    eax,0x64479905
  40593c:	ret    0x8e60
  40593f:	sub    DWORD PTR [ebp-0x3],0x21106757
  405946:	out    dx,eax
  405947:	fiadd  DWORD PTR [edx]
  405949:	repz xchg ecx,eax
  40594b:	aad    0x4a
  40594d:	js     0x405965
  40594f:	mov    esi,0x3b988b66
  405954:	xor    bl,BYTE PTR [esi]
  405956:	aad    0x46
  405958:	xchg   esp,eax
  405959:	mov    ch,0xd3
  40595b:	dec    edx
  40595c:	mov    ecx,DWORD PTR [ebp+0x67]
  40595f:	(bad)  
  405960:	mov    ecx,0xac134f06
  405965:	sub    BYTE PTR ds:0x545e7a69,0x88
  40596c:	sub    cl,0xa9
  40596f:	mov    cl,0xcc
  405971:	mov    eax,ds:0x7ab5d6cf
  405976:	push   eax
  405977:	or     BYTE PTR [edi-0x5b],dh
  40597a:	retf   
  40597b:	in     al,dx
  40597c:	jb     0x4059c4
  40597e:	cmc    
  40597f:	and    DWORD PTR [ebx+ebx*1],edi
  405982:	ret    0xcff8
  405985:	test   bh,bl
  405987:	mov    ds:0xc526990f,al
  40598c:	mov    al,0x42
  40598e:	jl     0x40596a
  405990:	inc    ecx
  405991:	add    eax,0x975b034f
  405996:	scas   eax,DWORD PTR es:[edi]
  405997:	test   BYTE PTR [ecx-0x3158a73e],al
  40599d:	cmp    al,BYTE PTR [edx]
  40599f:	fist   WORD PTR [ecx+0x44]
  4059a2:	fs aas 
  4059a4:	pop    edi
  4059a5:	scas   al,BYTE PTR es:[edi]
  4059a6:	mov    cl,0xd0
  4059a8:	out    0x25,al
  4059aa:	mov    esi,?
  4059ac:	cld    
  4059ad:	lods   eax,DWORD PTR ds:[esi]
  4059ae:	jo     0x405a22
  4059b0:	lods   eax,DWORD PTR ds:[esi]
  4059b1:	inc    DWORD PTR [ebx-0x45]
  4059b4:	aaa    
  4059b5:	pop    ebp
  4059b6:	js     0x405987
  4059b8:	(bad)  
  4059b9:	aam    0xee
  4059bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059bc:	add    al,0x98
  4059be:	cdq    
  4059bf:	jnp    0x4059e7
  4059c1:	xchg   edx,eax
  4059c2:	pop    ebx
  4059c3:	cdq    
  4059c4:	test   eax,0xaf365388
  4059c9:	outs   dx,DWORD PTR ds:[esi]
  4059ca:	pushf  
  4059cb:	add    esp,DWORD PTR [ebx+0x176c9783]
  4059d1:	jb     0x4059ef
  4059d3:	cmp    edx,0xcec6ca0b
  4059d9:	aas    
  4059da:	push   ebx
  4059db:	adc    DWORD PTR [ebx-0x34574d1c],ebx
  4059e1:	jg     0x405a3a
  4059e3:	imul   esp,DWORD PTR ds:0xd7ab060b,0x517930ce
  4059ed:	pop    ss
  4059ee:	scas   eax,DWORD PTR es:[edi]
  4059ef:	in     eax,dx
  4059f0:	pop    ss
  4059f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f2:	ret    0xdfa3
  4059f5:	jne    0x405a01
  4059f7:	mov    ch,BYTE PTR [eax+0x26314c3a]
  4059fd:	mov    eax,ds:0xbd6ff13b
  405a02:	mov    esi,0xab1244d2
  405a07:	repnz sbb eax,0xa2fd6d52
  405a0d:	aaa    
  405a0e:	xchg   edi,eax
  405a0f:	mov    edi,0x1a75c012
  405a14:	dec    ebx
  405a15:	test   eax,0x78109849
  405a1a:	add    ch,bl
  405a1c:	addr16 dec ecx
  405a1e:	add    ebp,DWORD PTR [ecx-0x2e]
  405a21:	(bad)  
  405a22:	push   esi
  405a23:	mov    dl,0x80
  405a25:	or     eax,DWORD PTR [esi+0x3e610e59]
  405a2b:	imul   ecx,DWORD PTR [edi],0x6
  405a2e:	iret   
  405a2f:	xchg   BYTE PTR [ecx-0x3f],ah
  405a32:	data16 fwait
  405a34:	jns    0x405a3b
  405a36:	add    eax,0x81861b6a
  405a3b:	fist   WORD PTR [esi+ebx*4+0x24bf40fa]
  405a42:	fcomp  QWORD PTR [ebp-0x6b]
  405a45:	or     eax,0xdf399fe7
  405a4a:	addr16 dec edx
  405a4c:	repz shr DWORD PTR [ecx+eax*1],cl
  405a50:	cld    
  405a51:	inc    ecx
  405a52:	popa   
  405a53:	sub    DWORD PTR [ebx],edx
  405a55:	pop    ecx
  405a56:	(bad)  
  405a57:	retf   0x3011
  405a5a:	xchg   edx,eax
  405a5b:	and    al,0xc
  405a5d:	loopne 0x405a8f
  405a5f:	clc    
  405a60:	das    
  405a61:	lods   al,BYTE PTR ds:[esi]
  405a62:	mov    ?,ecx
  405a64:	dec    esp
  405a65:	shr    ah,1
  405a67:	addr16 jmp 0x405aaa
  405a6a:	push   0x3b
  405a6c:	adc    al,0x41
  405a6e:	rol    DWORD PTR [edi],cl
  405a70:	ja     0x405ae2
  405a72:	jmp    0x4f71:0x15fcf72
  405a79:	pop    ds
  405a7a:	in     eax,0x0
  405a7c:	inc    eax
  405a7d:	mov    eax,ds:0xc04d53c1
  405a82:	aad    0x59
  405a84:	inc    ecx
  405a85:	push   es
  405a86:	pop    esi
  405a87:	cwde   
  405a88:	jle    0x405ace
  405a8a:	clc    
  405a8b:	scas   al,BYTE PTR es:[edi]
  405a8c:	jle    0x405a57
  405a8e:	pop    edi
  405a8f:	(bad)  
  405a90:	and    DWORD PTR [edi+0x70],edi
  405a93:	fcomp  DWORD PTR [edx-0x60da7bc5]
  405a99:	pop    es
  405a9a:	(bad)  
  405a9b:	fnstcw WORD PTR [ebx+0x52]
  405a9e:	data16 stc 
  405aa0:	push   ebp
  405aa1:	cmp    al,0xe5
  405aa3:	mov    dl,0x16
  405aa5:	push   0x32
  405aa7:	cmp    cl,BYTE PTR [eax+ecx*4+0x68263d5b]
  405aae:	or     al,0x81
  405ab0:	test   DWORD PTR [ebx-0x7f],ebp
  405ab3:	mov    edi,0xea385f1b
  405ab8:	nop
  405ab9:	call   0x1004:0xc1c1bfbb
  405ac0:	ins    BYTE PTR es:[edi],dx
  405ac1:	dec    esi
  405ac2:	outs   dx,BYTE PTR ds:[esi]
  405ac3:	ror    BYTE PTR [eax],0x39
  405ac6:	dec    esi
  405ac7:	std    
  405ac8:	repnz inc ecx
  405aca:	sbb    al,BYTE PTR [edx-0xd8c74d0]
  405ad0:	pop    esp
  405ad1:	(bad)  
  405ad2:	pushf  
  405ad3:	pushf  
  405ad4:	sbb    BYTE PTR [esi],0x9e
  405ad7:	hlt    
  405ad8:	loop   0x405b42
  405ada:	arpl   WORD PTR [edi],dx
  405adc:	outs   dx,BYTE PTR ds:[esi]
  405add:	int    0x7
  405adf:	cmp    ch,BYTE PTR [ecx+0x28]
  405ae2:	(bad)  
  405ae4:	adc    al,0x4a
  405ae6:	out    0x65,eax
  405ae8:	xchg   ebx,eax
  405ae9:	(bad)  
  405aea:	sub    esi,DWORD PTR [edx+0x3c]
  405aed:	ret    
  405aee:	jae    0x405b2c
  405af0:	in     al,dx
  405af1:	psubw  mm3,QWORD PTR [ebx]
  405af4:	push   0x35a84349
  405af9:	pop    ebx
  405afa:	call   0x1b641cdb
  405aff:	mov    ds:0x1952d098,eax
  405b04:	add    eax,0xeb7af907
  405b09:	push   0x15d153af
  405b0e:	inc    ecx
  405b0f:	xchg   DWORD PTR [ecx],edi
  405b11:	fst    DWORD PTR [eax+0x32]
  405b14:	rcl    BYTE PTR [ebx],1
  405b16:	scas   eax,DWORD PTR es:[edi]
  405b17:	dec    edx
  405b18:	dec    edi
  405b19:	jg     0x405b7b
  405b1b:	sub    eax,edx
  405b1d:	ja     0x405b24
  405b1f:	sub    al,BYTE PTR [ecx]
  405b21:	push   esi
  405b22:	xchg   BYTE PTR ds:0xa34c9483,bh
  405b28:	addr16 leave 
  405b2a:	call   FWORD PTR [eax+eax*2]
  405b2d:	jns    0x405b87
  405b2f:	sub    BYTE PTR [eax+0x7f],dh
  405b32:	mov    ebp,0xa600e1da
  405b37:	ror    BYTE PTR [esi-0x1a4bfcb],0x56
  405b3e:	adc    cl,BYTE PTR [ecx+ecx*4]
  405b41:	or     al,0xf9
  405b43:	jle    0x405bad
  405b45:	jb     0x405b50
  405b47:	adc    eax,0x7cfef3d0
  405b4c:	retf   
  405b4d:	loopne 0x405b54
  405b4f:	je     0x405b41
  405b51:	xlat   BYTE PTR ds:[ebx]
  405b52:	cli    
  405b53:	aas    
  405b54:	(bad)  
  405b55:	retf   0xa36b
  405b58:	cmc    
  405b59:	out    0x38,eax
  405b5b:	aam    0xf2
  405b5d:	or     DWORD PTR [esi-0x6c88be06],0x4d
  405b64:	inc    ecx
  405b65:	mov    esp,?
  405b67:	xor    bh,BYTE PTR [edx]
  405b69:	fmul   QWORD PTR [edx]
  405b6b:	or     ebx,DWORD PTR [esi-0x15e1b31c]
  405b71:	aam    0x3c
  405b73:	sub    al,0x7a
  405b75:	daa    
  405b76:	inc    ebp
  405b77:	sbb    eax,0xd242ff3d
  405b7c:	int    0x39
  405b7e:	add    esi,DWORD PTR [edi-0x4f956911]
  405b84:	loop   0x405bb4
  405b86:	test   al,0xd0
  405b88:	mov    al,cl
  405b8a:	pop    ebx
  405b8b:	pop    esp
  405b8c:	mov    eax,ds:0xab82db4f
  405b91:	repz mov edx,0xdac1bdbc
  405b97:	sub    BYTE PTR [ebp+0x32],bl
  405b9a:	mov    dl,0xb9
  405b9c:	ror    DWORD PTR [eax-0x6b],1
  405b9f:	sahf   
  405ba0:	sti    
  405ba1:	cmp    DWORD PTR [ecx-0x32],ebp
  405ba4:	cmp    DWORD PTR [ebp+eax*2+0x78],edi
  405ba8:	push   edi
  405ba9:	push   edi
  405bab:	out    dx,al
  405bac:	(bad)  
  405bad:	xor    esp,DWORD PTR [ebp-0x53]
  405bb0:	icebp  
  405bb1:	loopne 0x405b4c
  405bb3:	clc    
  405bb4:	dec    esi
  405bb5:	push   ds
  405bb6:	mov    al,0x58
  405bb8:	xchg   ebp,eax
  405bb9:	(bad)  
  405bba:	es scas eax,DWORD PTR es:[edi]
  405bbc:	mov    cl,0x8a
  405bbe:	sbb    cl,bl
  405bc0:	or     al,bh
  405bc2:	call   0x3570:0x2f66abe
  405bc9:	or     DWORD PTR [ecx-0x10b3d638],edx
  405bcf:	retf   0x9fc4
  405bd2:	inc    esp
  405bd3:	popa   
  405bd4:	sbb    ch,al
  405bd6:	mov    ebp,0x6717ea51
  405bdb:	xor    ecx,eax
  405bdd:	pushf  
  405bde:	push   ds
  405bdf:	push   esi
  405be0:	ret    0xb5c9
  405be3:	inc    esi
  405be4:	fsubr  QWORD PTR [ebp-0x6f]
  405be7:	cmc    
  405be8:	cmp    BYTE PTR [esi],al
  405bea:	test   DWORD PTR [edx-0x6c597e1a],esp
  405bf0:	(bad)  
  405bf1:	mov    bh,BYTE PTR [edx]
  405bf3:	retf   0x9d61
  405bf6:	arpl   bx,bp
  405bf8:	call   DWORD PTR [edx-0x4503c30c]
  405bfe:	pop    edx
  405bff:	jo     0x405c1d
  405c01:	hlt    
  405c02:	pop    eax
  405c03:	loopne 0x405c4c
  405c05:	push   edx
  405c06:	jo     0x405c60
  405c08:	(bad)  
  405c09:	retf   
  405c0a:	mov    dl,0x9a
  405c0c:	add    BYTE PTR [ecx+0x226f3b4],0x2e
  405c13:	aas    
  405c14:	fs push ecx
  405c16:	out    dx,eax
  405c17:	mov    esp,0x2a903ce4
  405c1c:	sub    bl,BYTE PTR [edx+0x7f]
  405c1f:	(bad)  
  405c21:	xor    al,al
  405c23:	jg     0x405bc5
  405c25:	and    ebp,DWORD PTR [ebx+0x67]
  405c28:	cmp    eax,0x5aa2778
  405c2d:	mov    al,0x6c
  405c2f:	mov    ecx,0xc953f7eb
  405c34:	jb     0x405c65
  405c36:	fsub   DWORD PTR [eax+edi*4]
  405c39:	and    eax,0x52a81570
  405c3e:	mov    eax,ds:0x900ef1b2
  405c43:	outs   dx,BYTE PTR ds:[esi]
  405c44:	adc    dl,BYTE PTR [esi+edx*1-0x1a]
  405c48:	retf   
  405c49:	or     eax,0xbdea9b43
  405c4e:	outs   dx,DWORD PTR ds:[esi]
  405c4f:	jmp    0xc023:0xd5f5b90a
  405c56:	inc    ecx
  405c57:	icebp  
  405c58:	sub    eax,0xbecd981a
  405c5d:	dec    BYTE PTR [ebx+0x9]
  405c60:	xchg   ecx,eax
  405c61:	in     eax,dx
  405c62:	mov    dl,0xfc
  405c64:	push   ebp
  405c65:	out    dx,al
  405c66:	dec    edx
  405c67:	es hlt 
  405c69:	push   ss
  405c6a:	mov    al,ds:0xb249a3e3
  405c6f:	adc    ebx,eax
  405c71:	mov    al,0x6f
  405c73:	xchg   ecx,eax
  405c74:	dec    edx
  405c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c76:	out    dx,eax
  405c77:	jae    0x405cc3
  405c79:	sbb    eax,0xfd14dc0c
  405c7e:	push   0xffffffaf
  405c80:	jp     0x405c14
  405c82:	cmp    DWORD PTR [edx-0x64352155],edi
  405c88:	jo     0x405c78
  405c8a:	cmp    BYTE PTR [edx+0x164d0d6b],bh
  405c90:	sub    eax,0xf14a89c
  405c95:	jmp    0x22dd6c60
  405c9a:	pop    esi
  405c9b:	loope  0x405c5c
  405c9d:	cs inc eax
  405c9f:	jne    0x405c7f
  405ca1:	push   cs
  405ca2:	(bad)  
  405ca3:	(bad)  
  405ca4:	sub    eax,edx
  405ca6:	or     edi,esp
  405ca8:	mov    ebp,0x7a4c2f69
  405cad:	stos   BYTE PTR es:[edi],al
  405cae:	popa   
  405caf:	mov    edi,DWORD PTR [ebx]
  405cb1:	(bad)  
  405cb2:	sahf   
  405cb3:	xchg   esp,eax
  405cb4:	stos   BYTE PTR es:[edi],al
  405cb5:	jnp    0x405c68
  405cb7:	xor    al,0x60
  405cb9:	jle    0x405c3c
  405cbb:	xor    ch,BYTE PTR [esi+0x6a5dfdf1]
  405cc1:	hlt    
  405cc2:	xchg   DWORD PTR [ebp+0x4a8becb8],ebp
  405cc8:	cs inc esi
  405cca:	stos   DWORD PTR es:[edi],eax
  405ccb:	adc    BYTE PTR [esi-0x7b3f1312],dh
  405cd1:	cmp    BYTE PTR [edx-0x75],0x9a
  405cd5:	push   ecx
  405cd6:	fcom   DWORD PTR [edi+0x4b156f3d]
  405cdc:	dec    esi
  405cdd:	and    DWORD PTR [ecx],edx
  405cdf:	enter  0x91c2,0xc6
  405ce3:	cdq    
  405ce4:	iret   
  405ce5:	and    DWORD PTR [ecx],eax
  405ce7:	mov    esp,0x5fd6d916
  405cec:	outs   dx,DWORD PTR ds:[esi]
  405ced:	dec    eax
  405cee:	cmp    eax,0x38517338
  405cf3:	add    BYTE PTR [esi+0x6d9e4],cl
  405cf9:	(bad)  
  405cfa:	xor    BYTE PTR ds:[ecx-0x700ae0f9],bl
  405d01:	fs mov ebp,0x9b38a48d
  405d07:	mov    ds:0xeb737a03,eax
  405d0c:	bndstx [esi-0x290c0b85],bnd1
  405d13:	jl     0x405d51
  405d15:	imul   ebx
  405d17:	mov    ah,0xc7
  405d19:	add    cl,BYTE PTR [ecx]
  405d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1c:	loope  0x405d46
  405d1e:	ins    DWORD PTR es:[edi],dx
  405d1f:	in     al,dx
  405d20:	jo     0x405d7e
  405d22:	and    ebp,DWORD PTR [edx]
  405d24:	push   ecx
  405d25:	ins    DWORD PTR es:[edi],dx
  405d26:	cmp    DWORD PTR [ecx-0x7779ca63],esp
  405d2c:	fmul   DWORD PTR gs:[edx-0x44]
  405d30:	daa    
  405d31:	sbb    bl,ch
  405d33:	add    dl,dl
  405d35:	out    0x13,eax
  405d37:	push   ecx
  405d38:	loopne 0x405cc1
  405d3a:	enter  0x6ae4,0x1b
  405d3e:	out    0xa3,eax
  405d40:	mov    eax,ds:0xae695a68
  405d45:	push   ds
  405d46:	call   0x27c5:0x9be7b5c0
  405d4d:	pop    ebp
  405d4e:	xor    eax,esp
  405d50:	jbe    0x405d14
  405d52:	add    ch,BYTE PTR [edi]
  405d54:	pop    edi
  405d55:	retf   
  405d56:	cmp    ecx,DWORD PTR [edi]
  405d58:	mov    bl,0xc
  405d5a:	cli    
  405d5b:	or     al,0x91
  405d5d:	out    dx,al
  405d5e:	mov    ebp,0x176ded76
  405d63:	cli    
  405d64:	popa   
  405d65:	fsubr  QWORD PTR [edx]
  405d67:	imul   edi,DWORD PTR [esi-0x1f],0xffffffdc
  405d6b:	sbb    DWORD PTR [edi],esi
  405d6d:	adc    eax,0xe4b1984
  405d72:	sahf   
  405d73:	add    eax,0x2aab9165
  405d78:	retf   
  405d79:	add    ecx,DWORD PTR [ebx-0x32]
  405d7c:	adc    BYTE PTR [ebx+0x57feb258],bh
  405d82:	dec    edx
  405d83:	push   ss
  405d84:	cli    
  405d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d86:	rcr    BYTE PTR [esi+0x33],cl
  405d89:	das    
  405d8a:	push   ds
  405d8b:	adc    al,0xab
  405d8d:	cmp    DWORD PTR [ebx-0x68aff6c1],esp
  405d93:	xor    DWORD PTR [edi+0x5f],ecx
  405d96:	(bad)  
  405d98:	fist   WORD PTR [eax-0x50449825]
  405d9e:	xor    al,0x4a
  405da0:	dec    eax
  405da1:	and    eax,ebx
  405da3:	leave  
  405da4:	and    eax,0x5a2baca0
  405da9:	inc    ecx
  405daa:	mov    esp,0x28d03d20
  405daf:	and    DWORD PTR [edi],esp
  405db1:	stos   BYTE PTR es:[edi],al
  405db2:	cmc    
  405db3:	push   DWORD PTR [esi+0x2d]
  405db6:	(bad)  
  405db8:	stos   DWORD PTR es:[edi],eax
  405db9:	add    eax,0x4996d679
  405dbe:	lahf   
  405dbf:	push   edx
  405dc0:	rol    BYTE PTR [edi-0x4e79bbb4],cl
  405dc6:	adc    eax,0x2f230b10
  405dcb:	loop   0x405dc7
  405dcd:	data16 cmp al,0x29
  405dd0:	xchg   edi,eax
  405dd1:	ja     0x405da8
  405dd3:	idiv   BYTE PTR [edi+ecx*8-0x4f]
  405dd7:	outs   dx,DWORD PTR ds:[esi]
  405dd8:	das    
  405dd9:	adc    eax,0xd8c5b9a1
  405dde:	inc    ebp
  405ddf:	and    ah,BYTE PTR [ecx+0x6fb26d1c]
  405de5:	jne    0x405e49
  405de7:	rcl    BYTE PTR [edx+0x6c],cl
  405dea:	xchg   edi,eax
  405deb:	pop    ebp
  405dec:	mov    bh,0x88
  405dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405def:	hlt    
  405df0:	retf   0xa65a
  405df3:	fisubr DWORD PTR [ecx*8-0x7eb66ff]
  405dfa:	lods   al,BYTE PTR ds:[esi]
  405dfb:	mov    al,ds:0x261caca1
  405e00:	loop   0x405dd3
  405e02:	cdq    
  405e03:	jae    0x405dc1
  405e05:	nop
  405e06:	or     bh,BYTE PTR [edx-0x5a]
  405e09:	jl     0x405dd9
  405e0b:	sub    dl,BYTE PTR [ebp+0x764908df]
  405e11:	jne    0x405de2
  405e13:	push   es
  405e14:	retf   
  405e15:	cwde   
  405e16:	addr16 repnz push ecx
  405e1a:	test   eax,0xdeb38605
  405e1f:	xchg   esp,eax
  405e20:	cmp    ecx,DWORD PTR [ebp+0x14]
  405e23:	jo     0x405ddd
  405e25:	imul   eax,DWORD PTR [ecx+0x47bdff4e],0xffffffe9
  405e2c:	jnp    0x405e72
  405e2e:	push   esi
  405e2f:	mov    ah,0x68
  405e31:	int    0xe0
  405e33:	into   
  405e34:	std    
  405e35:	sbb    ecx,edx
  405e37:	in     al,dx
  405e38:	jle    0x405e16
  405e3a:	or     al,0x2b
  405e3c:	iret   
  405e3d:	in     al,0x9b
  405e3f:	adc    BYTE PTR [edx-0x3bd6f897],cl
  405e45:	dec    esp
  405e46:	loop   0x405e1c
  405e48:	enter  0x7cc9,0x3d
  405e4c:	out    0xd6,al
  405e4e:	dec    edi
  405e4f:	aam    0xc9
  405e51:	pop    ebp
  405e52:	int3   
  405e53:	xor    DWORD PTR [ebx+edx*1],esp
  405e56:	and    dh,dh
  405e58:	outs   dx,BYTE PTR ds:[esi]
  405e59:	mov    dl,0xa9
  405e5c:	xchg   edi,eax
  405e5d:	adc    DWORD PTR [edx],0xf6ee59d7
  405e63:	in     eax,0x57
  405e65:	mov    ecx,ebp
  405e67:	cld    
  405e68:	cdq    
  405e69:	add    eax,0x11873ea6
  405e6e:	add    ebx,eax
  405e70:	xor    cl,BYTE PTR [ecx]
  405e72:	enter  0x36cf,0x79
  405e76:	inc    ebp
  405e77:	repz adc BYTE PTR [esi-0x3161a2c1],al
  405e7e:	xor    edi,ebx
  405e80:	sti    
  405e81:	fsub   QWORD PTR ds:[edx+ecx*8+0x72]
  405e86:	dec    esp
  405e87:	or     eax,0x19dc341a
  405e8c:	mov    cl,0x7f
  405e8e:	push   ss
  405e8f:	call   0x690ea0f6
  405e94:	lods   eax,DWORD PTR ds:[esi]
  405e95:	inc    ecx
  405e96:	and    DWORD PTR [edx],ebp
  405e98:	dec    esp
  405e99:	mov    DWORD PTR [ecx-0x74ce0d41],esi
  405e9f:	aaa    
  405ea0:	into   
  405ea1:	in     eax,0xf1
  405ea3:	(bad)  
  405ea4:	pop    esi
  405ea5:	jecxz  0x405e8e
  405ea7:	leave  
  405ea8:	ins    DWORD PTR es:[di],dx
  405eaa:	jns    0x405ec2
  405eac:	sbb    al,0x6d
  405eae:	repnz cmc 
  405eb0:	inc    edx
  405eb1:	js     0x405e37
  405eb3:	jo     0x405f1b
  405eb5:	hlt    
  405eb6:	and    al,0x27
  405eb8:	sahf   
  405eb9:	adc    DWORD PTR [ebx],ebp
  405ebb:	jge    0x405e5a
  405ebd:	fisub  DWORD PTR [esi-0x47]
  405ec0:	cmc    
  405ec1:	xor    esp,DWORD PTR [ebp+0x7a]
  405ec4:	out    dx,al
  405ec5:	in     al,dx
  405ec6:	mov    ebp,0x551a225f
  405ecb:	and    BYTE PTR [ecx],ch
  405ecd:	and    eax,0xf68e89c8
  405ed2:	stc    
  405ed3:	mov    al,ds:0x27e44e87
  405ed8:	jg     0x405e60
  405eda:	shl    BYTE PTR [edx+ebx*8],0x88
  405ede:	mov    bh,bl
  405ee0:	xchg   ebx,eax
  405ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ee2:	retf   0x4683
  405ee5:	cs mov ch,0x57
  405ee8:	push   edx
  405ee9:	xchg   esi,eax
  405eea:	jmp    0x405ef7
  405eec:	sbb    eax,0x4757c55d
  405ef1:	or     DWORD PTR [ecx],eax
  405ef3:	test   eax,0x1cec7686
  405ef8:	outs   dx,DWORD PTR ds:[esi]
  405ef9:	sub    eax,0xef2f1278
  405efe:	inc    eax
  405eff:	es xchg edx,eax
  405f01:	and    BYTE PTR [edx],ch
  405f03:	jp     0x405eff
  405f05:	and    DWORD PTR [ebx-0x4e],ebx
  405f08:	jmp    0x2378:0x612c4c02
  405f0f:	jmp    0x621dd6ab
  405f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f15:	mov    DWORD PTR [ebx+eax*4],esi
  405f18:	push   ebx
  405f19:	ret    0x98e5
  405f1c:	push   edx
  405f1d:	cld    
  405f1e:	xchg   ecx,eax
  405f1f:	outs   dx,BYTE PTR ds:[esi]
  405f20:	push   eax
  405f21:	pop    ss
  405f22:	mov    BYTE PTR [edx+0x5c],dl
  405f25:	mov    esp,0x3a3f4202
  405f2a:	push   0xffffff98
  405f2c:	xchg   esp,eax
  405f2d:	push   0x7e
  405f2f:	dec    ebp
  405f30:	icebp  
  405f31:	push   ebx
  405f32:	pop    esp
  405f33:	lods   al,BYTE PTR ds:[esi]
  405f34:	shl    BYTE PTR [eax],0xe0
  405f37:	addr16 cmp dh,0xe0
  405f3b:	xlat   BYTE PTR ds:[ebx]
  405f3c:	mov    edx,0x4e5d3295
  405f41:	adc    eax,0x342a765
  405f46:	inc    edi
  405f47:	jne    0x405ecc
  405f49:	retf   0x9c22
  405f4c:	mov    ds,ebp
  405f4e:	int3   
  405f4f:	jecxz  0x405fba
  405f51:	das    
  405f52:	jmp    0xfde1:0xff9a74f5
  405f59:	loop   0x405fc3
  405f5b:	jno    0x405f0b
  405f5d:	inc    eax
  405f5e:	xlat   BYTE PTR ds:[ebx]
  405f5f:	and    bh,bl
  405f61:	pop    eax
  405f62:	cmp    DWORD PTR [ebx-0x6e21bcad],edx
  405f68:	leave  
  405f69:	pop    edx
  405f6a:	lahf   
  405f6b:	std    
  405f6c:	cs jl  0x405f87
  405f6f:	jg     0x405f2d
  405f71:	sub    edx,0xffffffcc
  405f74:	xchg   ecx,eax
  405f75:	sti    
  405f76:	mov    ch,BYTE PTR [eax-0xd21ed09]
  405f7c:	mov    dl,ah
  405f7e:	(bad)  
  405f7f:	inc    esi
  405f80:	scas   al,BYTE PTR es:[edi]
  405f81:	push   eax
  405f82:	and    al,0x8e
  405f84:	lock outs dx,DWORD PTR ds:[esi]
  405f86:	outs   dx,DWORD PTR ds:[esi]
  405f87:	xchg   DWORD PTR [ebp-0x8],eax
  405f8a:	aaa    
  405f8b:	sti    
  405f8c:	pop    ebp
  405f8d:	dec    ecx
  405f8e:	dec    ebp
  405f8f:	ins    DWORD PTR es:[edi],dx
  405f90:	bound  edx,QWORD PTR [eax-0x51]
  405f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f94:	mov    ch,BYTE PTR [edx+0x75135e79]
  405f9a:	add    eax,0x9052c9a6
  405f9f:	push   esi
  405fa0:	push   eax
  405fa1:	jno    0x405ff6
  405fa3:	in     al,dx
  405fa4:	cs and eax,ebp
  405fa7:	cli    
  405fa8:	mov    edx,0x61eda47a
  405fad:	mov    eax,0x5f9bd61d
  405fb2:	out    0xe4,al
  405fb4:	jmp    0x9014:0x13b5d0a0
  405fbb:	inc    ecx
  405fbc:	mov    bl,BYTE PTR [esi-0x512bfbb5]
  405fc2:	or     DWORD PTR [ecx-0x7d],esp
  405fc5:	inc    esi
  405fc6:	ret    0x2af3
  405fc9:	fild   WORD PTR [eax+0x18a804ce]
  405fcf:	xor    esp,DWORD PTR [esi+0x17]
  405fd2:	test   DWORD PTR [eax],esp
  405fd4:	add    eax,0x9806e24e
  405fd9:	mov    ebx,0x3cd7a9c1
  405fde:	jae    0x405fda
  405fe0:	pop    ecx
  405fe1:	cmp    eax,DWORD PTR [edi+0x7a]
  405fe4:	outs   dx,BYTE PTR ds:[esi]
  405fe5:	or     DWORD PTR [esi+0x15],ecx
  405fe8:	sbb    cl,BYTE PTR [esi-0xf]
  405feb:	push   esi
  405fec:	adc    al,0xb
  405fee:	es rcr ah,cl
  405ff1:	sbb    BYTE PTR [ebx],cl
  405ff3:	push   ebx
  405ff4:	test   BYTE PTR [edi],0x1c
  405ff7:	xor    bh,cl
  405ff9:	(bad)
  405ffd:	js     0x406000
  405fff:	mov    bl,0x2f
  406001:	jecxz  0x405fcb
  406003:	ds inc eax
  406005:	adc    al,0x3
  406007:	push   ebp
  406008:	sbb    esi,DWORD PTR [ebp+0x320b357d]
  40600e:	lods   eax,DWORD PTR ds:[esi]
  40600f:	pop    ebx
  406010:	sbb    DWORD PTR [ebx+eax*1+0x278d5441],edx
  406017:	xchg   esp,eax
  406018:	lods   eax,DWORD PTR ds:[esi]
  406019:	add    DWORD PTR [edi],esi
  40601b:	int    0xd8
  40601d:	sar    DWORD PTR [eax],1
  40601f:	js     0x40608a
  406021:	dec    ecx
  406022:	or     BYTE PTR [ebx+0x4d],ah
  406025:	or     BYTE PTR [ecx+0x24],ch
  406028:	int    0x9a
  40602a:	jae    0x405fcb
  40602c:	and    eax,0xdb3c40e8
  406031:	pop    esi
  406032:	push   ds
  406033:	pop    eax
  406034:	mov    fs,WORD PTR [eax]
  406036:	sbb    al,0xad
  406038:	pop    ds
  406039:	xor    eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	(bad)  
  40615d:	jns    0x4060f0
  40615f:	mov    ecx,0x8383385b
  406164:	out    dx,eax
  406165:	pop    esp
  406166:	add    DWORD PTR [ebx-0x778eae80],0x4
  40616d:	call   0x45d4:0x25882dc6
  406174:	scas   eax,DWORD PTR es:[edi]
  406175:	in     al,dx
  406176:	lds    si,DWORD PTR [edi+0x5b]
  40617a:	test   DWORD PTR [ebx-0x2b],esi
  40617d:	rol    esp,1
  40617f:	add    DWORD PTR [edx+0x47],ebx
  406182:	fimul  DWORD PTR [edx+0x2c]
  406185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406187:	mov    dh,BYTE PTR [edx]
  406189:	fnstenv [eax-0x3c]
  40618c:	pop    eax
  40618d:	test   DWORD PTR [eax-0x78],esi
  406190:	call   0x8bfd:0x4d61fbf0
  406197:	rol    BYTE PTR [edx+0x39],0x51
  40619b:	stos   BYTE PTR es:[edi],al
  40619c:	fmul   DWORD PTR [eax+0x23b53290]
  4061a2:	popf   
  4061a3:	pop    eax
  4061a4:	iret   
  4061a5:	add    eax,0x52d4286d
  4061aa:	inc    esp
  4061ab:	xchg   DWORD PTR [edx],eax
  4061ad:	xor    DWORD PTR [ebx-0x6831403c],0xffffffbd
  4061b4:	sbb    eax,0x9f50f51e
  4061b9:	aas    
  4061ba:	push   0x25190e2c
  4061bf:	call   0x11c8:0x4aaf38ae
  4061c6:	pop    ds
  4061c7:	in     al,0x46
  4061c9:	pop    esp
  4061ca:	in     eax,0x30
  4061cc:	fistp  WORD PTR [ecx+ebx*4-0x1cd3a84d]
  4061d3:	sbb    edi,DWORD PTR [eax+0x47]
  4061d6:	scas   al,BYTE PTR es:[edi]
  4061d7:	in     eax,0x98
  4061d9:	aam    0xad
  4061db:	push   ds
  4061dc:	xchg   ebp,eax
  4061dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061de:	dec    esp
  4061df:	enter  0x10d5,0xe6
  4061e3:	dec    esp
  4061e4:	cmp    eax,0xb77c2e7b
  4061e9:	push   ss
  4061ea:	ret    0x8c38
  4061ed:	xchg   edi,edi
  4061ef:	or     bl,bh
  4061f1:	sub    al,ah
  4061f3:	sbb    bl,ch
  4061f5:	leave  
  4061f6:	adc    ebp,edi
  4061f8:	ret    
  4061f9:	lods   al,BYTE PTR ds:[esi]
  4061fa:	add    al,0xe5
  4061fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061fd:	lods   eax,DWORD PTR ds:[esi]
  4061fe:	jg     0x406273
  406200:	mov    ebp,0xda12fed9
  406205:	jge    0x406240
  406207:	popf   
  406208:	fsub   st(1),st
  40620a:	jne    0x40622d
  40620c:	es daa 
  40620e:	outs   dx,BYTE PTR ds:[esi]
  40620f:	mov    edi,0xc11c2a26
  406214:	mov    esi,0x3b8a0426
  406219:	sbb    edx,esi
  40621b:	jp     0x4061a0
  40621d:	cmp    BYTE PTR [edi],dl
  40621f:	scas   eax,DWORD PTR es:[edi]
  406220:	ficomp DWORD PTR [esi-0x1b4e98f]
  406226:	daa    
  406227:	mov    al,es:0xd2794e2c
  40622d:	enter  0x7792,0x7d
  406231:	jno    0x406219
  406233:	jge    0x406257
  406235:	stos   DWORD PTR es:[edi],eax
  406236:	pushf  
  406237:	xchg   esi,eax
  406238:	mov    dl,0x2d
  40623a:	inc    edi
  40623b:	mov    esp,DWORD PTR [edx]
  40623d:	sahf   
  40623e:	scas   al,BYTE PTR es:[edi]
  40623f:	jae    0x4062b6
  406241:	pop    ds
  406242:	hlt    
  406243:	(bad)  
  406244:	mov    dh,0x4c
  406246:	aaa    
  406247:	(bad)  
  406248:	iret   
  406249:	gs or  eax,0xbef55e5e
  40624f:	mov    esi,0x2e89315a
  406254:	adc    BYTE PTR [edx+0x5],cl
  406257:	shr    bl,0x6d
  40625a:	addr16 int3 
  40625c:	mov    ds:0xbe718539,eax
  406261:	pop    edx
  406262:	xor    edx,edx
  406264:	and    cl,BYTE PTR [ebx]
  406266:	test   ebx,edx
  406268:	xlat   BYTE PTR ds:[ebx]
  406269:	push   ebp
  40626a:	mov    DWORD PTR [edi-0x35],esp
  40626d:	retf   0x4107
  406270:	loopne 0x406209
  406272:	mov    bl,0xe9
  406274:	dec    esi
  406275:	pop    esp
  406276:	ret    0xf86a
  406279:	jae    0x406277
  40627b:	rol    BYTE PTR [ebx],0x61
  40627e:	pop    edi
  40627f:	dec    edi
  406280:	and    BYTE PTR [bx+si+0x581c],bh
  406285:	aad    0x95
  406287:	sar    ah,1
  406289:	in     al,0x3f
  40628b:	add    ebp,ebx
  40628d:	mov    DWORD PTR [esi+0x5cd2a4e5],esp
  406293:	loop   0x406242
  406295:	mov    dh,0x57
  406297:	mov    dl,0x2e
  406299:	jle    0x40630a
  40629b:	jb     0x40628a
  40629d:	cmp    al,0x49
  40629f:	jno    0x40631d
  4062a1:	sbb    DWORD PTR [eax+0x28c68ed5],0x5b
  4062a8:	int    0x97
  4062aa:	imul   ebp,DWORD PTR [edi],0xd891e186
  4062b0:	pop    esi
  4062b1:	and    eax,ebx
  4062b3:	in     eax,0x8
  4062b5:	mov    esi,DWORD PTR [ecx-0x76334598]
  4062bb:	or     eax,0x2ff82927
  4062c0:	jo     0x4062da
  4062c2:	mov    al,0x15
  4062c4:	daa    
  4062c5:	cmp    DWORD PTR [edx+ecx*4-0x4fdc18c3],0xffffff92
  4062cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ce:	adc    BYTE PTR [ecx+0x17],dl
  4062d1:	push   cs
  4062d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d3:	nop
  4062d4:	cmp    DWORD PTR ds:0x8e6e2361,edi
  4062da:	xor    al,0xc8
  4062dc:	mov    ecx,DWORD PTR [edi]
  4062de:	jge    0x4062d5
  4062e0:	push   edi
  4062e1:	(bad)  
  4062e2:	stc    
  4062e3:	dec    edi
  4062e4:	xor    BYTE PTR [ebp+0x6c],dl
  4062e7:	shr    BYTE PTR [eax+0x28],cl
  4062ea:	std    
  4062eb:	repnz jecxz 0x40632d
  4062ee:	repnz mov cl,BYTE PTR [ebx]
  4062f1:	xor    bh,BYTE PTR [ecx]
  4062f3:	push   edx
  4062f4:	in     eax,0x96
  4062f6:	(bad)
  4062f9:	cmp    al,ah
  4062fb:	and    al,0x49
  4062fd:	scas   eax,DWORD PTR es:[edi]
  4062fe:	ret    0x2e7
  406301:	pusha  
  406302:	cmp    DWORD PTR [eax],ebp
  406304:	ror    BYTE PTR [ecx],cl
  406306:	bound  ecx,QWORD PTR [ebx+0x35]
  406309:	inc    esi
  40630a:	or     al,0xb2
  40630c:	xchg   esp,eax
  40630d:	fs dec edx
  40630f:	cs icebp 
  406311:	ret    
  406312:	mov    ecx,0x17b67c10
  406317:	mov    ah,0xaf
  406319:	push   edi
  40631a:	out    0xcb,eax
  40631c:	psrlw  mm7,mm5
  40631f:	fs cdq 
  406321:	mov    dh,0x8
  406323:	xor    al,0x54
  406325:	into   
  406326:	in     al,0x18
  406328:	inc    edi
  406329:	inc    edi
  40632a:	loop   0x40636e
  40632c:	sbb    BYTE PTR [edi+0x29],ah
  40632f:	push   ecx
  406330:	fsub   QWORD PTR [ebp-0x6]
  406333:	sub    BYTE PTR [edi],0xfe
  406336:	xchg   esp,eax
  406337:	jne    0x4062c2
  406339:	push   eax
  40633a:	mov    ebx,0x14007ad5
  40633f:	lds    ebx,FWORD PTR [eax+ebp*4+0x79af09b]
  406346:	lods   eax,DWORD PTR ds:[esi]
  406347:	ins    DWORD PTR es:[edi],dx
  406348:	shl    BYTE PTR [eax+ebx*4-0x58],cl
  40634c:	imul   ebp,DWORD PTR [eax-0x7962863],0xfffffff6
  406353:	aaa    
  406354:	mov    eax,ds:0xc19ed6e1
  406359:	xchg   ah,dh
  40635b:	pop    ds
  40635c:	ins    BYTE PTR es:[edi],dx
  40635d:	pop    ss
  40635e:	adc    al,0x52
  406360:	pop    esp
  406361:	js     0x406364
  406363:	out    0xac,al
  406365:	and    BYTE PTR [esi],dh
  406367:	sbb    ecx,DWORD PTR [eax+0x73]
  40636a:	and    DWORD PTR [ebp-0x7f],esp
  40636d:	mov    ds:0x841fb39e,al
  406372:	inc    ecx
  406373:	mov    gs,edi
  406375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406376:	sub    al,0x75
  406378:	dec    ebp
  406379:	cld    
  40637a:	aas    
  40637b:	(bad)  [edx+edi*4+0x1a11f0e3]
  406382:	inc    eax
  406383:	inc    esp
  406384:	push   ecx
  406385:	je     0x4063e4
  406387:	dec    edi
  406388:	dec    ecx
  406389:	mov    esi,0x9079c300
  40638e:	push   0x4ced836f
  406393:	mov    DWORD PTR ds:0xe11e21d8,edi
  406399:	push   ecx
  40639a:	loopne 0x4063db
  40639c:	cmp    dl,BYTE PTR [ecx+0x63]
  40639f:	dec    esp
  4063a0:	push   0x3d
  4063a2:	sti    
  4063a3:	mov    al,0x39
  4063a5:	jmp    0x377c687f
  4063aa:	inc    edi
  4063ab:	mov    al,ds:0x57e0b675
  4063b0:	sbb    BYTE PTR [edx+0xc],dh
  4063b3:	sub    eax,0x15ca9627
  4063b8:	pop    ss
  4063b9:	and    bl,cl
  4063bb:	stos   DWORD PTR es:[edi],eax
  4063bc:	xor    dh,BYTE PTR [edi+0x38]
  4063bf:	jo     0x4063bb
  4063c1:	ret    0xb4fe
  4063c4:	fldenv [edx]
  4063c6:	loope  0x40635a
  4063c8:	cmp    cl,BYTE PTR [ecx+0x36]
  4063cb:	and    al,0xe7
  4063cd:	lock adc al,0x74
  4063d0:	mov    ebp,0x2fd1812c
  4063d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063d6:	sbb    al,0x1d
  4063d8:	inc    ecx
  4063d9:	mov    ebx,0xc334be40
  4063de:	ret    
  4063df:	into   
  4063e0:	loope  0x406422
  4063e2:	mov    al,0x44
  4063e4:	mov    ds:0xb3cf7363,al
  4063e9:	cmp    BYTE PTR [ecx-0x7a],bl
  4063ec:	sbb    al,0xc9
  4063ee:	mov    ds:0x2c6f2eb7,al
  4063f3:	push   cs
  4063f4:	aas    
  4063f5:	push   cs
  4063f6:	inc    ebp
  4063f7:	aad    0xe3
  4063f9:	cmp    eax,0xdd88f16b
  4063fe:	mov    esi,0x7b321b74
  406403:	stc    
  406404:	test   eax,0xb6273a63
  406409:	lahf   
  40640a:	push   edi
  40640b:	and    al,0x90
  40640d:	jp     0x4063e6
  40640f:	jne    0x4063c4
  406411:	and    DWORD PTR [eax+0x40],edi
  406414:	(bad)  
  406415:	sbb    eax,DWORD PTR [ebx+0x62]
  406418:	xchg   edi,eax
  406419:	cmp    edx,DWORD PTR [ecx+0x6d73e59d]
  40641f:	mov    ah,0x21
  406421:	sub    DWORD PTR [esi],ebp
  406423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406424:	enter  0x2bf2,0x45
  406428:	or     al,0xb7
  40642a:	jmp    0x48d2:0xfb54708a
  406431:	add    ebp,0xe01966e9
  406437:	popf   
  406438:	jno    0x406407
  40643a:	into   
  40643b:	in     eax,dx
  40643c:	push   0xffffff87
  40643e:	cld    
  40643f:	xor    BYTE PTR [edx],dl
  406441:	pop    ebp
  406442:	xchg   ebx,eax
  406443:	fcom   DWORD PTR [edi]
  406445:	xlat   BYTE PTR ds:[ebx]
  406446:	cmp    esi,esi
  406448:	fadd   st,st(1)
  40644a:	sbb    BYTE PTR [eax+0x2],ch
  40644d:	lahf   
  40644e:	mov    al,0x78
  406450:	jmp    0x406441
  406452:	mov    eax,ds:0x7e71e9dc
  406457:	lock into 
  406459:	fs jo  0x406434
  40645c:	sub    DWORD PTR [edi],edi
  40645e:	imul   ebx,DWORD PTR fs:[ebx-0x45],0xeb567444
  406466:	xchg   edx,eax
  406467:	add    al,0xe9
  406469:	fidivr DWORD PTR [ebp-0x2fdea2e6]
  40646f:	sub    eax,0x306789ad
  406474:	mov    ah,0x22
  406476:	cmp    ebx,DWORD PTR [edi+0x7dc02290]
  40647c:	(bad)  
  40647d:	mov    ch,0xd6
  40647f:	xchg   ecx,eax
  406480:	jmp    0x859d:0xd1bac27
  406487:	rcr    DWORD PTR [ecx+0x8fa9219],0x54
  40648e:	repnz push esi
  406490:	call   0x2ad7:0x1a970dfa
  406497:	sahf   
  406498:	(bad)  
  406499:	sub    dl,dh
  40649b:	outs   dx,BYTE PTR ds:[esi]
  40649c:	dec    esi
  40649d:	fmul   QWORD PTR [ebp*4+0x3dc2caf6]
  4064a4:	cmp    ebp,DWORD PTR [ecx]
  4064a6:	cmc    
  4064a7:	ror    DWORD PTR [esi+0x0],1
  4064aa:	pop    edi
  4064ab:	sub    dl,BYTE PTR ds:0x3a000b35
  4064b1:	in     eax,dx
  4064b2:	mov    ds:0x63bf73d5,al
  4064b7:	dec    ebp
  4064b8:	int    0x6f
  4064ba:	xchg   DWORD PTR [edx],ebp
  4064bc:	sbb    ah,BYTE PTR [ebx-0xc]
  4064bf:	pushf  
  4064c0:	mov    cl,0xc3
  4064c2:	jge    0x40651a
  4064c4:	mov    edx,0x9b15c05a
  4064c9:	nop
  4064ca:	jmp    0x4064ce
  4064cc:	bound  ebx,QWORD PTR [edx+0xe6d0a89]
  4064d2:	shr    BYTE PTR [esi-0x79],1
  4064d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d6:	out    dx,al
  4064d7:	xchg   ecx,eax
  4064d8:	sub    DWORD PTR [ecx-0x72],esp
  4064db:	or     ebp,esi
  4064dd:	cli    
  4064de:	sbb    bl,BYTE PTR [edi]
  4064e0:	adc    al,0x50
  4064e2:	mov    es,WORD PTR [eax]
  4064e4:	es mov esp,0x9460c00d
  4064ea:	ss jl  0x4064b7
  4064ed:	jns    0x4064e1
  4064ef:	aaa    
  4064f0:	call   0xb97c:0x139941fe
  4064f7:	fsubr  DWORD PTR ds:0x23759a1e
  4064fd:	sub    al,0x56
  4064ff:	cmp    bh,bh
  406501:	xchg   edi,eax
  406502:	xchg   edx,eax
  406503:	push   0x7e535a0d
  406508:	add    eax,0xf9335ed3
  40650d:	jp     0x40657f
  40650f:	sbb    al,0x8b
  406511:	push   edx
  406512:	retf   
  406513:	sbb    BYTE PTR [eax+0x49a2114a],al
  406519:	and    eax,0x37ddc3f7
  40651e:	stc    
  40651f:	mov    dl,0x62
  406521:	inc    esp
  406522:	mov    edx,DWORD PTR [ebx+0x6c]
  406525:	lods   eax,DWORD PTR ds:[esi]
  406526:	mov    ecx,0xf40a33dd
  40652b:	int3   
  40652c:	xchg   DWORD PTR [ebx+0x28dcfed6],eax
  406532:	inc    ecx
  406533:	xchg   edi,eax
  406534:	push   esp
  406535:	xor    DWORD PTR [ecx+0x49],ecx
  406538:	aas    
  406539:	push   ebp
  40653a:	cmp    BYTE PTR ds:0x8018b013,cl
  406540:	dec    ebp
  406541:	mov    eax,0xfbda352d
  406546:	sti    
  406547:	dec    esi
  406548:	mov    WORD PTR [edx-0x7e7e865],?
  40654e:	mov    al,0xb0
  406550:	sar    DWORD PTR [esi+0x6f17be65],1
  406556:	out    0x3a,al
  406558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406559:	out    dx,al
  40655a:	lds    esp,FWORD PTR [eax]
  40655c:	fxch   st(0)
  40655e:	imul   esp
  406560:	pop    ebp
  406561:	es inc eax
  406563:	(bad)  
  406564:	retf   0x6bae
  406567:	adc    al,0x23
  406569:	push   edx
  40656a:	xor    BYTE PTR [ebx-0x4a742264],0x6c
  406571:	dec    edx
  406572:	or     esp,DWORD PTR [edx]
  406574:	(bad)  
  406575:	and    eax,0xb756972a
  40657a:	adc    ecx,DWORD PTR [edi]
  40657c:	pop    edi
  40657d:	mov    ah,0x2b
  40657f:	xchg   BYTE PTR [edx+0x2fc542fb],bl
  406585:	cli    
  406586:	ja     0x4065e8
  406588:	push   eax
  406589:	cli    
  40658a:	aam    0x75
  40658c:	cmc    
  40658d:	xchg   edx,eax
  40658e:	popa   
  40658f:	jp     0x4065b4
  406591:	(bad)  
  406592:	loop   0x406550
  406594:	std    
  406595:	xor    ch,BYTE PTR [esi]
  406597:	cmp    BYTE PTR [edi],bl
  406599:	dec    edi
  40659a:	cmp    cl,cl
  40659c:	call   0xf34a:0x65cd6e76
  4065a3:	dec    ebx
  4065a4:	ret    0x6993
  4065a7:	jmp    0x89f66b7c
  4065ac:	fdivr  QWORD PTR [ebp+0x52ea7c37]
  4065b2:	cld    
  4065b3:	repz xchg esi,eax
  4065b5:	neg    BYTE PTR [esi+ecx*8]
  4065b8:	jle    0x406605
  4065ba:	mov    ah,cl
  4065bc:	jecxz  0x406607
  4065be:	pop    es
  4065bf:	push   ecx
  4065c0:	mov    esi,0xe06b42f0
  4065c5:	and    esp,DWORD PTR [edx+ebp*4-0x547fe963]
  4065cc:	push   ecx
  4065cd:	mov    dl,0xee
  4065cf:	cld    
  4065d0:	add    bl,BYTE PTR [ebx]
  4065d2:	ds fxch st(5)
  4065d5:	in     eax,dx
  4065d6:	clc    
  4065d7:	call   0x4f7f3249
  4065dc:	push   ebx
  4065dd:	sbb    bl,BYTE PTR ds:0x9addda56
  4065e3:	in     al,dx
  4065e4:	fidivr WORD PTR [edx+0x7a]
  4065e7:	pop    eax
  4065e8:	xor    DWORD PTR [edx+0x21],edi
  4065eb:	dec    ecx
  4065ec:	int3   
  4065ed:	inc    edi
  4065ee:	fstp   TBYTE PTR [ecx-0x34101e21]
  4065f4:	inc    esi
  4065f5:	imul   eax,ebx,0x475cbda7
  4065fb:	adc    ecx,esp
  4065fd:	jmp    0x9d50:0x526ca556
  406604:	mov    bh,0xa
  406606:	jmp    0x44ba:0xfe93ee9d
  40660d:	push   eax
  40660e:	push   ebx
  40660f:	pop    eax
  406610:	push   ebx
  406611:	gs call 0xf973277c
  406617:	fldenv [eax-0x63933488]
  40661d:	stos   BYTE PTR es:[edi],al
  40661e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406620:	sahf   
  406621:	mov    bl,0x50
  406623:	sahf   
  406624:	les    esi,FWORD PTR [ebx]
  406626:	repnz fnsave [esi+edi*8]
  40662a:	les    edi,FWORD PTR [esi+0x28]
  40662d:	test   dl,dl
  40662f:	repz out dx,al
  406631:	sbb    al,0x16
  406633:	dec    edi
  406634:	popa   
  406635:	mov    bl,0x88
  406637:	mov    dh,0xd5
  406639:	jg     0x406661
  40663b:	sbb    al,0xe2
  40663d:	sbb    cl,BYTE PTR [eax-0x6301e6e5]
  406643:	fadd   st(0),st
  406645:	shr    DWORD PTR [ebp-0x3],0xe7
  406649:	xchg   edi,eax
  40664a:	pop    ds
  40664b:	nop
  40664c:	cmp    BYTE PTR [edi*1-0x508b8506],ah
  406653:	pop    ss
  406654:	cmp    al,BYTE PTR [esi]
  406656:	and    edx,DWORD PTR [ebx+0x2d]
  406659:	fldpi  
  40665b:	mov    esp,0xef4d0533
  406660:	adc    eax,0xfbe31387
  406665:	pushf  
  406666:	ret    
  406667:	lods   al,BYTE PTR ds:[esi]
  406668:	and    BYTE PTR [edx+0x38270c90],ch
  40666e:	jnp    0x4066b5
  406670:	je     0x40665e
  406672:	leave  
  406673:	adc    eax,0x4d39de1
  406678:	dec    esp
  406679:	scas   eax,DWORD PTR es:[edi]
  40667a:	adc    edx,DWORD PTR [eax]
  40667c:	sub    al,BYTE PTR [eax-0x1]
  40667f:	jae    0x406670
  406681:	(bad)  
  406682:	sub    DWORD PTR [ecx],edi
  406684:	jmp    0x406634
  406686:	das    
  406687:	ss pop ecx
  406689:	out    0xf2,eax
  40668b:	(bad)  
  40668c:	std    
  40668d:	js     0x406680
  40668f:	and    edi,DWORD PTR [esi-0x4606aa03]
  406695:	addr16 adc al,dh
  406698:	imul   edx,DWORD PTR [ecx-0x5b],0x578b0e12
  40669f:	(bad)  
  4066a0:	(bad)  
  4066a2:	jl     0x4066a0
  4066a4:	data16 cmp BYTE PTR [ecx+0x1d],ah
  4066a8:	ja     0x4066a9
  4066aa:	popf   
  4066ab:	das    
  4066ac:	mov    di,0x1bf8
  4066b0:	mov    ebp,0x99a7d96a
  4066b5:	je     0x406673
  4066b7:	jmp    0xeda3bece
  4066bc:	push   es
  4066bd:	call   0xac57:0x6ba15b0e
  4066c4:	aas    
  4066c5:	xlat   BYTE PTR ds:[ebx]
  4066c6:	pop    esi
  4066c7:	jb     0x406713
  4066c9:	jne    0x406712
  4066cb:	sahf   
  4066cc:	xchg   edx,eax
  4066cd:	adc    DWORD PTR ds:0x94c8eaeb,esp
  4066d3:	adc    dl,ch
  4066d5:	or     BYTE PTR [ecx-0x3d59541c],al
  4066db:	ficom  DWORD PTR [esi-0x377f0f40]
  4066e1:	cmp    dl,BYTE PTR [ebx]
  4066e3:	rcl    ah,cl
  4066e5:	xor    eax,DWORD PTR [esi-0x14]
  4066e8:	mov    esi,ebp
  4066ea:	cmp    ecx,DWORD PTR [eax+0x6b]
  4066ed:	sub    eax,0x1e41e835
  4066f2:	stc    
  4066f3:	add    eax,0xe08e3c11
  4066f8:	xchg   esp,eax
  4066f9:	mov    al,ds:0xa315de90
  4066fe:	mov    ecx,0xbf97ffdd
  406703:	popf   
  406704:	mov    ds:0x68726fce,al
  406709:	jp     0x40674e
  40670b:	test   al,0xed
  40670d:	das    
  40670e:	and    bh,0xe1
  406711:	or     esi,eax
  406713:	call   0x8e574a81
  406718:	ret    
  406719:	xlat   BYTE PTR ds:[ebx]
  40671a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40671b:	dec    eax
  40671c:	and    BYTE PTR [edx-0x5d],al
  40671f:	popa   
  406720:	retf   0x910e
  406723:	inc    ebx
  406724:	xor    DWORD PTR [edx-0x45],0x4b
  406728:	(bad)  [edi-0x41]
  40672b:	(bad)  
  40672c:	ds xchg ebp,eax
  40672e:	mov    eax,0x2549154a
  406733:	lock xchg DWORD PTR [esi+0x2f],esi
  406737:	mov    eax,ds:0xd2adb27a
  40673c:	scas   eax,DWORD PTR es:[edi]
  40673d:	mov    eax,DWORD PTR [ecx-0x25]
  406740:	sbb    al,0x82
  406742:	out    0x56,eax
  406744:	daa    
  406745:	sbb    bh,0x35
  406748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406749:	fcmovbe st,st(1)
  40674b:	xchg   esp,eax
  40674c:	in     al,dx
  40674d:	es inc esp
  40674f:	iret   
  406750:	loopne 0x4067cf
  406752:	mov    al,0x68
  406754:	add    al,0x99
  406756:	pushf  
  406757:	pop    edi
  406758:	or     BYTE PTR [esi],0x93
  40675b:	imul   esi,edx,0xa234b90e
  406761:	xchg   DWORD PTR [esi+edi*2+0x33],edi
  406765:	xor    eax,0x3d87b7d
  40676a:	es cld 
  40676c:	adc    dh,BYTE PTR [ecx+eiz*1-0x5f]
  406770:	repnz clc 
  406772:	xor    eax,0x4d568ff0
  406777:	push   ecx
  406778:	sti    
  406779:	jmp    0xab0e:0xf8653d8
  406780:	or     DWORD PTR [ecx-0xd],esi
  406783:	sub    al,0x9
  406785:	push   ebp
  406786:	or     al,0x8c
  406788:	mov    eax,0x9f35b147
  40678d:	jae    0x4067e7
  40678f:	mov    ecx,0x35151847
  406794:	in     eax,0xbd
  406796:	loope  0x40677e
  406798:	fsubr  st,st(1)
  40679a:	jae    0x40672f
  40679c:	arpl   WORD PTR ds:0x5ad14838,ax
  4067a2:	repz loope 0x40675d
  4067a5:	retf   0xf73a
  4067a8:	mov    eax,0x6e2293ab
  4067ad:	cli    
  4067ae:	pop    ss
  4067af:	aam    0xf2
  4067b1:	icebp  
  4067b2:	jp     0x406766
  4067b4:	or     BYTE PTR [ebx+0x26d3e6f6],cl
  4067ba:	push   cs
  4067bb:	mov    DWORD PTR [ebx],edi
  4067bd:	jmp    0xbd51:0x923f0268
  4067c4:	les    eax,FWORD PTR [esi+0x3a7fcdd7]
  4067ca:	jb     0x406824
  4067cc:	out    0x83,eax
  4067ce:	ins    BYTE PTR es:[edi],dx
  4067cf:	ror    DWORD PTR [ebx+edi*1],cl
  4067d2:	shl    DWORD PTR [ecx+0x67d659b],0x9a
  4067d9:	add    eax,0xb70605ce
  4067de:	pop    ecx
  4067df:	dec    ebp
  4067e0:	paddsw mm1,QWORD PTR ss:[edx]
  4067e4:	xchg   esi,eax
  4067e5:	shl    DWORD PTR [ebx-0x44],cl
  4067e8:	add    al,0x36
  4067ea:	fisub  WORD PTR [ebp-0x2c]
  4067ed:	fmul   DWORD PTR [eax+0x27]
  4067f0:	(bad)  
  4067f1:	imul   edx,DWORD PTR [edi+0x34],0xffffffdf
  4067f5:	imul   eax,esp,0x5807e0ee
  4067fb:	outs   dx,BYTE PTR ds:[esi]
  4067fc:	test   DWORD PTR [ecx],ebp
  4067fe:	rcr    ebp,0xa3
  406801:	inc    edi
  406802:	mov    ecx,0x72b48a6a
  406807:	push   edx
  406808:	sub    cl,BYTE PTR ds:0x4f0ac7a3
  40680e:	into   
  40680f:	lock mov al,ds:0xf66231b
  406815:	jge    0x40680c
  406817:	push   ss
  406818:	add    BYTE PTR [ebx+esi*2+0xc585b33],cl
  40681f:	xor    BYTE PTR [ecx],bl
  406821:	mov    esp,cs
  406823:	cmp    al,0xdb
  406825:	jbe    0x406889
  406827:	jmp    DWORD PTR [edx+eax*4]
  40682a:	test   al,0x81
  40682c:	sub    esp,DWORD PTR [esi-0x14]
  40682f:	push   eax
  406830:	out    dx,eax
  406831:	enter  0x4e64,0xc8
  406835:	leave  
  406836:	cdq    
  406837:	jno    0x40685d
  406839:	sub    dh,al
  40683b:	mov    ebx,0xf1f66594
  406840:	push   ebx
  406841:	mov    ch,0x6a
  406843:	ret    
  406844:	in     eax,dx
  406845:	jmp    0xe4db:0xee9b4f8c
  40684c:	xchg   eax,esi
  40684e:	mov    esi,0x56bdc64e
  406853:	stc    
  406854:	lds    ebp,FWORD PTR [ebp+0x68]
  406857:	cmp    al,BYTE PTR [edi]
  406859:	xchg   DWORD PTR [eax-0x7d],esi
  40685c:	repz ja 0x406812
  40685f:	cmp    eax,0x2df51b5
  406864:	fnsave [edx+0x7a55ff3f]
  40686a:	or     ebp,esi
  40686c:	ror    BYTE PTR [eax],1
  40686e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40686f:	imul   edi,DWORD PTR [esi+edx*1-0x3e3c1079],0xffffffcc
  406877:	pop    ds
  406878:	mov    ebx,0xb78156ca
  40687d:	loop   0x40684d
  40687f:	cs retf 0x8f16
  406883:	int3   
  406884:	or     ebx,DWORD PTR [esi-0x42]
  406887:	mov    WORD PTR [edx-0x76d887ea],ds
  40688d:	lods   eax,DWORD PTR ds:[esi]
  40688e:	mov    bl,0xc7
  406890:	mov    ds:0x6501a319,al
  406895:	jne    0x406824
  406897:	sbb    BYTE PTR [edi],0xfc
  40689a:	add    DWORD PTR [edx],0x6f2e3d31
  4068a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a1:	sub    BYTE PTR [ecx+0x63],ch
  4068a4:	cdq    
  4068a5:	inc    edi
  4068a6:	cs xchg edx,edi
  4068a9:	lahf   
  4068aa:	call   0xd626:0xbbae93c
  4068b1:	and    al,0x4e
  4068b3:	adc    ecx,eax
  4068b5:	mov    ebx,eax
  4068b7:	mov    WORD PTR [ecx+0x1d],ds
  4068ba:	jg     0x406929
  4068bc:	arpl   si,cx
  4068be:	lds    edi,FWORD PTR [edx-0x3]
  4068c1:	mov    ecx,0x9f4b733f
  4068c6:	repnz icebp 
  4068c8:	adc    BYTE PTR [edx+0x100e807b],bl
  4068ce:	(bad)  
  4068cf:	jg     0x406892
  4068d1:	jo     0x4068a5
  4068d3:	jo     0x406922
  4068d5:	xchg   DWORD PTR [edx+0x2bdbc46],eax
  4068db:	or     ecx,ebp
  4068dd:	sbb    al,0xff
  4068df:	xchg   esi,eax
  4068e0:	imul   edi,DWORD PTR [ebx+0x170a81d3],0xf0b90585
  4068ea:	cmp    eax,0xa5f8b4af
  4068ef:	cmp    dl,0x4d
  4068f2:	addr16 jo 0x406911
  4068f5:	jp     0x406938
  4068f7:	push   0xffffff93
  4068f9:	std    
  4068fa:	popf   
  4068fb:	mov    dh,0x21
  4068fd:	repnz inc ecx
  4068ff:	mov    edx,0x213dd3f3
  406904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406905:	rcr    BYTE PTR [edx+0x64],0x65
  406909:	les    ebp,FWORD PTR [ebx]
  40690b:	lock in eax,dx
  40690d:	jno    0x4068f3
  40690f:	push   ecx
  406910:	push   edx
  406911:	jecxz  0x4068f0
  406913:	fild   QWORD PTR [edx+ebx*2]
  406916:	pop    ecx
  406917:	jp     0x4068a4
  406919:	in     al,dx
  40691a:	mov    esp,DWORD PTR [edx]
  40691c:	adc    DWORD PTR ds:0x2dc777e1,edx
  406922:	retf   0xcdfe
  406925:	stc    
  406926:	repnz mov ah,0x90
  406929:	add    DWORD PTR [ecx],ecx
  40692b:	xchg   ecx,eax
  40692c:	mov    esi,0x1a18465d
  406931:	into   
  406932:	inc    edi
  406933:	pop    ss
  406934:	jl     0x40699e
  406936:	or     BYTE PTR [ebx+ecx*2],dh
  406939:	mov    fs,WORD PTR [edi+0x3acda90a]
  40693f:	loop   0x40690c
  406941:	(bad)  
  406942:	addr16 mov ebx,0x4c676e87
  406948:	xchg   ecx,eax
  406949:	or     edi,ebp
  40694b:	aas    
  40694c:	adc    DWORD PTR [esi],ebx
  40694e:	push   0x754ba771
  406953:	cmp    DWORD PTR [esi],ecx
  406955:	fstp   QWORD PTR ds:0xba267db1
  40695b:	xor    DWORD PTR [edi-0x6075aa4f],ebx
  406961:	icebp  
  406962:	(bad)  
  406963:	imul   ecx,DWORD PTR [ecx+edx*2+0x69],0xffffff9d
  406968:	aam    0x84
  40696a:	sbb    eax,0x47a7559a
  40696f:	out    0x1c,eax
  406971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406972:	sbb    BYTE PTR [esi-0x41cf2d7d],al
  406978:	sbb    eax,0x15a94da
  40697d:	mov    ebx,0x781d2fe6
  406982:	inc    edx
  406983:	push   ecx
  406984:	in     al,0x1f
  406986:	adc    eax,0xd29260ad
  40698b:	in     eax,dx
  40698c:	sbb    eax,0x89b4d0c4
  406991:	ss sar ebx,1
  406994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406995:	retf   0xb22c
  406998:	cli    
  406999:	enter  0xd333,0xc3
  40699d:	mov    dh,0xfd
  40699f:	enter  0x49d0,0x63
  4069a3:	mov    ebp,DWORD PTR [edi+0x30c3fd77]
  4069a9:	jne    0x406a12
  4069ab:	add    al,0x7e
  4069ad:	mov    dl,0xd8
  4069af:	add    eax,0x427a45ff
  4069b4:	mov    eax,ds:0xff914938
  4069b9:	enter  0x3496,0x7
  4069bd:	jb     0x406986
  4069bf:	adc    al,0x83
  4069c1:	cmp    al,0xac
  4069c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069c4:	fwait
  4069c5:	or     esi,DWORD PTR [esi]
  4069c7:	jne    0x4069f4
  4069c9:	push   ds
  4069ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069cb:	push   cs
  4069cc:	pushf  
  4069cd:	inc    esi
  4069ce:	add    al,BYTE PTR [edx+0x51767484]
  4069d4:	and    DWORD PTR [edx],edx
  4069d6:	idiv   BYTE PTR ds:0x82f6170b
  4069dc:	int    0xda
  4069de:	sub    edi,DWORD PTR [eax+0x74cc6794]
  4069e4:	cmp    eax,0xac78c0ba
  4069e9:	add    BYTE PTR [edx+0x43],bl
  4069ec:	not    BYTE PTR [ebx-0x63]
  4069ef:	out    dx,al
  4069f0:	data16 aad 0x44
  4069f3:	or     eax,0xc617f744
  4069f8:	retf   0x74b6
  4069fb:	sbb    BYTE PTR ds:0x22a6d221,cl
  406a01:	sub    ebx,DWORD PTR [edx-0x40b53f14]
  406a07:	push   ebx
  406a08:	pushf  
  406a09:	fwait
  406a0a:	xor    eax,0xd342d9ab
  406a0f:	adc    al,0xc8
  406a11:	pop    ebx
  406a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a13:	fisttp DWORD PTR [edi+0x6]
  406a16:	out    dx,eax
  406a17:	adc    al,0x91
  406a19:	push   ds
  406a1a:	dec    esp
  406a1b:	cmc    
  406a1c:	jecxz  0x406a4a
  406a1e:	mov    edi,0xc25c71b3
  406a23:	retf   
  406a24:	mov    eax,ds:0x8aaa002a
  406a29:	xchg   edi,eax
  406a2a:	push   cs
  406a2b:	sar    ch,cl
  406a2d:	push   ss
  406a2e:	pop    esp
  406a2f:	(bad)  
  406a30:	jecxz  0x406a61
  406a32:	call   0xa120:0xb46887ae
  406a39:	mov    bh,0x68
  406a3b:	cs pop ebp
  406a3d:	push   edi
  406a3e:	out    0x36,al
  406a40:	sub    DWORD PTR [edi+eax*8],0x8e1a1bc0
  406a47:	icebp  
  406a48:	loope  0x406ac7
  406a4a:	jmp    0x406a3b
  406a4c:	in     eax,0x1b
  406a4e:	dec    ecx
  406a4f:	jae    0x406a9b
  406a51:	adc    bl,BYTE PTR [esi+0x566e8361]
  406a57:	les    eax,FWORD PTR ds:0x6b6e9ea5
  406a5d:	push   ss
  406a5e:	sub    al,0xce
  406a60:	xor    ah,al
  406a62:	adc    BYTE PTR [edx+esi*2],bl
  406a65:	mov    es,WORD PTR [eax-0xe5a342d]
  406a6b:	pop    esi
  406a6c:	and    dl,BYTE PTR [eax+0x3e]
  406a6f:	fistp  WORD PTR [esi]
  406a71:	into   
  406a72:	and    ah,ah
  406a74:	test   al,0x1
  406a76:	ja     0x406a68
  406a78:	out    0xee,eax
  406a7a:	mov    esi,0x7e32ecb6
  406a7f:	stos   DWORD PTR es:[edi],eax
  406a80:	push   ebx
  406a81:	sbb    BYTE PTR [ecx],bl
  406a83:	sub    DWORD PTR [esp+eax*8+0x3e],ecx
  406a87:	loopne 0x406afd
  406a89:	cwde   
  406a8a:	add    DWORD PTR [eax],esi
  406a8c:	pop    ss
  406a8d:	sub    eax,0x78216658
  406a92:	pop    edi
  406a93:	jmp    DWORD PTR [ebp+0x31]
  406a96:	mov    edi,DWORD PTR [edx+0x632dc3e8]
  406a9c:	cmp    al,0xdf
  406a9e:	sti    
  406a9f:	ds aaa 
  406aa1:	sahf   
  406aa2:	aas    
  406aa3:	cmp    al,0x3e
  406aa5:	xlat   BYTE PTR ds:[ebx]
  406aa6:	or     ecx,DWORD PTR [eax-0xe]
  406aa9:	dec    esi
  406aaa:	imul   eax,DWORD PTR [ecx-0x12],0x38
  406aae:	pop    esp
  406aaf:	push   ecx
  406ab0:	(bad)  
  406ab1:	mov    eax,ds:0x2eeb0911
  406ab6:	mov    cx,0xdf0b
  406aba:	out    dx,eax
  406abb:	push   esi
  406abc:	(bad)  
  406abd:	cmp    al,0x3c
  406abf:	pusha  
  406ac0:	mov    eax,ds:0x59e1f761
  406ac5:	dec    ecx
  406ac6:	iret   
  406ac7:	dec    edx
  406ac8:	std    
  406ac9:	xchg   esi,eax
  406aca:	or     edx,DWORD PTR [edx-0x30]
  406acd:	cli    
  406ace:	aam    0x11
  406ad0:	fisub  DWORD PTR [eax-0x6a]
  406ad3:	pusha  
  406ad4:	mov    al,0xa
  406ad6:	stos   BYTE PTR es:[edi],al
  406ad7:	test   BYTE PTR [edx+eiz*1+0x5d],ah
  406adb:	ficomp DWORD PTR [edi]
  406add:	cdq    
  406ade:	leave  
  406adf:	jp     0x406a6b
  406ae1:	rol    BYTE PTR [eax+0x7f],cl
  406ae4:	and    al,0xde
  406ae6:	shr    DWORD PTR [edx+0xa8bed78],1
  406aec:	push   ss
  406aed:	retf   
  406aee:	shl    eax,cl
  406af0:	mov    BYTE PTR [ecx],dh
  406af2:	ins    BYTE PTR es:[edi],dx
  406af3:	add    BYTE PTR [ebp+0x7d4ffe0c],0x69
  406afa:	pop    ebx
  406afb:	rol    eax,0x8e
  406afe:	out    0x80,al
  406b00:	(bad)  
  406b01:	ds jne 0x406ab2
  406b04:	bsf    ebx,DWORD PTR [eax-0x55]
  406b08:	sbb    eax,0x4d7d9962
  406b0d:	push   ds
  406b0e:	icebp  
  406b0f:	add    ah,BYTE PTR [ebx]
  406b11:	sbb    esp,DWORD PTR [ebx+ebx*2+0x7a]
  406b15:	mov    ah,0xa6
  406b17:	aaa    
  406b18:	adc    eax,0x7aced765
  406b1d:	cmp    BYTE PTR [eax-0x2e],ah
  406b20:	repz arpl WORD PTR [eax],bx
  406b23:	ficomp WORD PTR [eax+esi*1-0x122841f2]
  406b2a:	js     0x406acd
  406b2c:	mov    eax,ds:0xf10f86c4
  406b31:	nop
  406b32:	iret   
  406b33:	js     0x406b2b
  406b35:	std    
  406b36:	fscale 
  406b38:	gs dec esi
  406b3a:	aam    0xcf
  406b3c:	stos   BYTE PTR es:[edi],al
  406b3d:	push   cs
  406b3e:	(bad)  
  406b40:	in     al,0x8
  406b42:	ss sub eax,0x21b1afe2
  406b48:	stos   BYTE PTR es:[edi],al
  406b49:	aam    0xd5
  406b4b:	imul   esi,esi,0xd93e0f41
  406b51:	cmp    BYTE PTR cs:[esi],dh
  406b54:	and    bh,0x6e
  406b57:	lea    ecx,[edx]
  406b59:	(bad)  
  406b5a:	fisubr DWORD PTR [edx-0x35]
  406b5d:	js     0x406b4a
  406b5f:	add    ebp,DWORD PTR [eax-0x1976b539]
  406b65:	outs   dx,DWORD PTR ds:[esi]
  406b66:	mov    ebx,0x5606b4aa
  406b6b:	mov    esi,ebx
  406b6d:	add    al,0xab
  406b6f:	jecxz  0x406bb7
  406b71:	repnz in al,dx
  406b73:	sub    eax,0xc61d0cd4
  406b78:	xchg   edx,eax
  406b79:	xchg   ecx,eax
  406b7a:	lock mov ebp,DWORD PTR [ebp-0x6d]
  406b7e:	mov    eax,ds:0xa05e000f
  406b83:	je     0x406ba7
  406b85:	popa   
  406b86:	push   edi
  406b87:	dec    ecx
  406b88:	daa    
  406b89:	imul   ecx,DWORD PTR [edx+0x585d9b22],0xffffffa0
  406b90:	sbb    eax,DWORD PTR [edx+edx*4]
  406b93:	push   cs
  406b94:	test   BYTE PTR [edx+0x40580bec],bh
  406b9a:	in     eax,0xd2
  406b9c:	cmp    bh,bh
  406b9e:	push   eax
  406b9f:	stos   DWORD PTR es:[edi],eax
  406ba0:	clc    
  406ba1:	dec    esp
  406ba2:	lock ds je 0x406bde
  406ba6:	loopne 0x406c1a
  406ba8:	sub    esp,esi
  406baa:	imul   ecx,DWORD PTR [edx+0x36c69fd6],0xc7add169
  406bb4:	pop    esi
  406bb5:	cmp    edi,DWORD PTR [esi+0x35]
  406bb8:	fisubr DWORD PTR [eax+0x6c07ef84]
  406bbe:	int    0xb5
  406bc0:	out    dx,eax
  406bc1:	or     eax,0x45c5fc40
  406bc6:	and    dh,BYTE PTR [ecx-0x78]
  406bc9:	lods   eax,DWORD PTR ds:[esi]
  406bca:	mov    cl,ah
  406bcc:	adc    DWORD PTR [ebx+0x2373b7f4],esp
  406bd2:	test   BYTE PTR [esi-0x13],dl
  406bd5:	test   DWORD PTR [edx+0x4a8dc0e4],eax
  406bdb:	ret    
  406bdc:	scas   eax,DWORD PTR es:[edi]
  406bdd:	mov    bh,0x8a
  406bdf:	out    dx,eax
  406be0:	bound  ebp,QWORD PTR [ebx+ecx*8]
  406be3:	rcr    al,1
  406be5:	pop    esi
  406be6:	retf   
  406be7:	out    0x15,al
  406be9:	sahf   
  406bea:	mov    esi,0xa56f2455
  406bef:	mov    bh,bl
  406bf1:	push   cs
  406bf2:	jge    0x406c1a
  406bf4:	or     al,0xd3
  406bf6:	xor    ch,BYTE PTR [ebx-0x7f1b0577]
  406bfc:	pop    ds
  406bfd:	inc    edi
  406bfe:	xchg   eax,esi
  406c00:	lods   eax,DWORD PTR ds:[esi]
  406c01:	push   edx
  406c02:	sbb    edx,DWORD PTR cs:[eax]
  406c05:	bound  ebp,QWORD PTR [ecx]
  406c07:	mov    cl,0xc9
  406c09:	jo     0x406c11
  406c0b:	adc    al,0x3c
  406c0d:	mov    eax,ds:0xc5eb3fec
  406c12:	sub    BYTE PTR [edi],0xe0
  406c15:	out    dx,eax
  406c16:	jae    0x406b9b
  406c18:	dec    esi
  406c19:	out    0x4f,eax
  406c1b:	mov    WORD PTR [edx+0x5534fc8f],?
  406c21:	or     al,0xb2
  406c23:	and    eax,0xc82d0fd6
  406c28:	popa   
  406c29:	mov    DWORD PTR [ebx+ebx*4],edi
  406c2c:	(bad)  
  406c2d:	arpl   WORD PTR [esi-0x24],di
  406c30:	cdq    
  406c31:	pop    esp
  406c32:	pop    esi
  406c33:	cld    
  406c34:	mov    ebx,0xff3347cc
  406c3a:	or     dl,dh
  406c3c:	and    esi,DWORD PTR [eax]
  406c3e:	mul    ch
  406c40:	jo     0x406c4a
  406c42:	sbb    BYTE PTR [edi],0xe6
  406c45:	push   es
  406c46:	add    ebx,ebx
  406c48:	push   0x66
  406c4a:	jmp    0x406c03
  406c4c:	aaa    
  406c4d:	(bad)  
  406c4e:	or     BYTE PTR [ecx],dl
  406c50:	xchg   DWORD PTR [esi+0x640fd4a7],ebx
  406c56:	sub    al,0x8c
  406c58:	jo     0x406c3d
  406c5a:	aam    0xa7
  406c5c:	jle    0x406caa
  406c5e:	retf   0xbd99
  406c61:	test   BYTE PTR [ebx+0x5263a95a],0x2
  406c68:	add    eax,0x7a3cdc32
  406c6d:	call   0x8dcdaca6
  406c72:	xchg   BYTE PTR [edx+esi*4],ch
  406c75:	adc    eax,0x695bb85e
  406c7a:	cld    
  406c7b:	mov    edx,0x5f89efc1
  406c80:	and    edx,esp
  406c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c83:	in     al,0x7b
  406c85:	fbld   TBYTE PTR [edi+0x1bbfed77]
  406c8b:	imul   ebp,edi,0xffffffd7
  406c8e:	ret    0xc0db
  406c91:	jle    0x406c29
  406c93:	add    eax,0x7e986d0a
  406c98:	mov    ecx,0x5a644229
  406c9d:	or     al,0x33
  406c9f:	add    eax,0xe3727b26
  406ca4:	in     eax,0xda
  406ca6:	mov    al,ds:0xbcb72f99
  406cab:	add    BYTE PTR [edx+0x31889f46],0x11
  406cb2:	pop    ss
  406cb3:	popf   
  406cb4:	xchg   edx,eax
  406cb5:	and    ebp,eax
  406cb7:	xor    eax,0x49f68983
  406cbc:	js     0x406cbb
  406cbe:	sti    
  406cbf:	je     0x406c89
  406cc1:	out    0x6e,al
  406cc3:	lea    esp,[esi+0xcbc2978]
  406cc9:	xchg   DWORD PTR [ebp-0x2b2de857],ecx
  406ccf:	mov    esp,DWORD PTR [bx+di-0x41]
  406cd3:	das    
  406cd4:	adc    BYTE PTR [eax-0x24],0xc
  406cd8:	lock daa 
  406cda:	adc    esp,DWORD PTR [ebx+0x73]
  406cdd:	fcom   QWORD PTR [ebx]
  406cdf:	adc    eax,0x154b1d3
  406ce4:	and    al,0xe2
  406ce6:	shl    BYTE PTR [ecx+0x10e6279a],1
  406cec:	add    esp,DWORD PTR ds:0xdfde76e
  406cf2:	xchg   edi,eax
  406cf3:	vpunpckhwd ymm3,ymm3,YMMWORD PTR [edx-0x4f]
  406cf8:	xchg   esp,eax
  406cf9:	enter  0x133c,0x76
  406cfd:	mov    bl,ch
  406cff:	scas   al,BYTE PTR es:[edi]
  406d00:	hlt    
  406d01:	jae    0x406cdb
  406d03:	jb     0x406cd6
  406d05:	fnstsw WORD PTR [ebp-0x5bcc4e37]
  406d0b:	bound  ecx,QWORD PTR [edi]
  406d0d:	popa   
  406d0e:	mov    edi,DWORD PTR [eax]
  406d10:	mov    esp,DWORD PTR [edx-0x79]
  406d13:	inc    eax
  406d14:	jmp    0x406c96
  406d16:	dec    esp
  406d17:	xchg   ebp,eax
  406d18:	and    eax,0x7a
  406d1b:	push   eax
  406d1c:	enter  0xe536,0xa9
  406d20:	adc    edi,esp
  406d22:	call   DWORD PTR [esi-0x4f4d6a54]
  406d28:	dec    ebx
  406d29:	inc    esi
  406d2a:	jns    0x406d91
  406d2c:	icebp  
  406d2d:	fs cmp al,bl
  406d30:	test   eax,0x4174a155
  406d35:	stc    
  406d36:	mov    bl,0x1
  406d38:	push   ebx
  406d39:	mov    WORD PTR ds:0x6ed1b022,?
  406d3f:	mov    eax,DWORD PTR [ecx]
  406d41:	mov    ah,0xf2
  406d43:	daa    
  406d44:	pop    eax
  406d45:	xlat   BYTE PTR ds:[ebx]
  406d46:	ja     0x406d43
  406d48:	sbb    eax,DWORD PTR [ecx]
  406d4a:	lds    ecx,FWORD PTR [eax+0x22ab9d29]
  406d50:	ins    BYTE PTR es:[edi],dx
  406d51:	stos   DWORD PTR es:[edi],eax
  406d52:	inc    edx
  406d53:	int    0x19
  406d55:	adc    eax,0x29ecb02f
  406d5a:	and    al,0x9a
  406d5c:	gs jno 0x406ced
  406d5f:	and    BYTE PTR [ebp+0x71e0fb03],dl
  406d65:	aam    0x4c
  406d67:	cwde   
  406d68:	in     al,dx
  406d69:	mov    BYTE PTR [esi-0x3f],al
  406d6c:	jg     0x406d1a
  406d6e:	rcr    DWORD PTR [ecx-0x40],1
  406d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d72:	into   
  406d73:	fdivr  st(1),st
  406d75:	mov    ecx,0x655ab5ca
  406d7a:	or     DWORD PTR [ebp+0x7d4ff082],esp
  406d80:	stos   BYTE PTR es:[edi],al
  406d81:	fisttp DWORD PTR [esi+0x7e2a6fa6]
  406d87:	fadd   st(7),st
  406d89:	xor    DWORD PTR [eax+0xe115e4a],ecx
  406d8f:	pop    ss
  406d90:	loopne 0x406dc7
  406d92:	mov    dh,0x35
  406d94:	mov    eax,0x9cef7d47
  406d99:	out    dx,eax
  406d9a:	out    dx,eax
  406d9b:	pop    ecx
  406d9c:	mov    esi,0x6415b799
  406da1:	iret   
  406da2:	js     0x406d86
  406da4:	push   ecx
  406da5:	aaa    
  406da6:	out    0xac,eax
  406da8:	mov    ds:0x21f9afb9,eax
  406dad:	mov    bl,0xf6
  406daf:	cwde   
  406db0:	push   ss
  406db1:	popf   
  406db2:	sbb    BYTE PTR [edi-0x40],ch
  406db5:	dec    esi
  406db6:	popa   
  406db7:	gs sbb eax,0x7dd1c023
  406dbd:	and    BYTE PTR [ecx-0x10],cl
  406dc0:	retf   
  406dc1:	mov    eax,0xd2a2b964
  406dc6:	cmp    al,0xcd
  406dc8:	jns    0x406e13
  406dca:	push   cs
  406dcb:	cld    
  406dcc:	xor    dh,al
  406dce:	es hlt 
  406dd0:	mov    dl,0x11
  406dd2:	(bad)
  406dd8:	push   esi
  406dd9:	mov    ds:0x2965e322,al
  406dde:	cmp    eax,DWORD PTR [ebx-0x57]
  406de1:	sbb    eax,0x9e023ef6
  406de6:	dec    esi
  406de7:	push   eax
  406de8:	and    DWORD PTR [ecx+ebp*8-0x66],esp
  406dec:	dec    edi
  406ded:	mov    ebp,0x421319a9
  406df2:	popa   
  406df3:	mov    esi,0x4088da1f
  406df8:	int    0x1d
  406dfa:	xchg   esp,eax
  406dfb:	mov    ebx,0x877e57e1
  406e00:	outs   dx,BYTE PTR ds:[esi]
  406e01:	jo     0x406e70
  406e03:	test   eax,0x191465a7
  406e08:	imul   eax,DWORD PTR [edx],0xffffff8e
  406e0b:	mov    cl,cl
  406e0d:	xor    eax,0x97a4749d
  406e12:	ins    BYTE PTR es:[edi],dx
  406e13:	lods   eax,DWORD PTR ds:[esi]
  406e14:	(bad)  
  406e15:	and    eax,edi
  406e17:	xor    al,0xdd
  406e19:	jmp    0x406dd1
  406e1b:	shl    bl,cl
  406e1d:	cmp    DWORD PTR [edi+0x5a8dfbf2],edi
  406e23:	pop    ebp
  406e24:	rcl    BYTE PTR [esi+eax*2],1
  406e27:	mov    ds:0xa9c50697,al
  406e2c:	scas   eax,DWORD PTR es:[edi]
  406e2d:	add    edx,DWORD PTR [ecx-0xe]
  406e30:	mov    al,0x20
  406e32:	outs   dx,DWORD PTR ds:[esi]
  406e33:	imul   ebp,ebp,0x5f
  406e36:	cmp    al,0x32
  406e38:	popf   
  406e39:	adc    esp,DWORD PTR [esi-0x2b]
  406e3c:	sub    al,al
  406e3e:	mov    ebx,0xdb15c191
  406e43:	ds pop ecx
  406e45:	jno    0x406ddf
  406e47:	sub    DWORD PTR [esi],0xffffffee
  406e4a:	pop    es
  406e4b:	in     al,0xa6
  406e4d:	adc    eax,0x5493ff3f
  406e52:	je     0x406deb
  406e54:	inc    esi
  406e55:	in     al,dx
  406e56:	mov    ebx,DWORD PTR [esi+eax*2-0x54]
  406e5a:	mov    ds:0xba2dcf3d,al
  406e5f:	clc    
  406e60:	retf   0x192
  406e63:	xchg   esi,eax
  406e64:	lods   eax,DWORD PTR ds:[esi]
  406e65:	dec    edx
  406e66:	or     DWORD PTR [edx+0x4bb56c92],eax
  406e6c:	mov    bl,0xb5
  406e6e:	cld    
  406e6f:	adc    eax,0x2dd38780
  406e74:	pop    eax
  406e75:	clc    
  406e76:	mov    fs,WORD PTR [esi]
  406e78:	es cmp esi,ebx
  406e7b:	pusha  
  406e7c:	and    ch,BYTE PTR [edx-0x2e0269f8]
  406e82:	mov    WORD PTR [ecx-0x43c7bdd6],es
  406e88:	xchg   esi,eax
  406e89:	xchg   ebx,eax
  406e8a:	out    dx,al
  406e8b:	sbb    edx,ecx
  406e8d:	out    dx,al
  406e8e:	pop    ss
  406e8f:	and    DWORD PTR ds:0x3383ad2a,edx
  406e95:	cmp    edi,eax
  406e97:	adc    eax,0x31a332b2
  406e9c:	inc    ebx
  406e9d:	out    dx,eax
  406e9e:	bound  esi,QWORD PTR [edx]
  406ea0:	sahf   
  406ea1:	xor    ch,BYTE PTR [ecx-0x6c6a013b]
  406ea7:	xor    dl,BYTE PTR [ecx-0x1b]
  406eaa:	mov    esp,0xa3ddb424
  406eaf:	test   eax,0x15067321
  406eb4:	jne    0x406f2a
  406eb6:	push   edi
  406eb7:	cwde   
  406eb8:	push   esi
  406eb9:	adc    DWORD PTR [ebx],ecx
  406ebb:	sub    bh,bh
  406ebd:	add    DWORD PTR [ecx-0x3c],ecx
  406ec0:	mov    al,ds:0xb86f1a3c
  406ec5:	sub    DWORD PTR [esi+0x2d],esi
  406ec8:	lods   eax,DWORD PTR ds:[esi]
  406ec9:	push   ds
  406eca:	sbb    eax,0x24377338
  406ecf:	inc    ecx
  406ed0:	xor    BYTE PTR ds:0x3803000,bh
  406ed6:	jb     0x406e7c
  406ed8:	out    dx,eax
  406ed9:	aad    0x64
  406edb:	retf   0xda51
  406ede:	stc    
  406edf:	or     dh,BYTE PTR [ecx-0x4dd1b835]
  406ee5:	test   BYTE PTR [eax+0x1e240b61],0x70
  406eec:	and    eax,0x56edb440
  406ef1:	push   ss
  406ef2:	and    eax,DWORD PTR [ecx+0x3a]
  406ef5:	inc    esi
  406ef6:	std    
  406ef7:	lock scas eax,DWORD PTR es:[edi]
  406ef9:	lds    edi,FWORD PTR [edx-0x74d0f41b]
  406eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f00:	adc    DWORD PTR [ecx-0x6e],ecx
  406f03:	cmp    dh,BYTE PTR [edx]
  406f05:	aas    
  406f06:	mov    edi,0x305db17b
  406f0b:	sub    BYTE PTR [ebx],dh
  406f0d:	mov    edx,0xc2b24cc9
  406f12:	fldenv [ecx-0xb264c5d]
  406f18:	imul   ebp,DWORD PTR [ebx-0x1d54f229],0xffffffa2
  406f1f:	push   eax
  406f20:	pop    edx
  406f21:	push   eax
  406f22:	popa   
  406f23:	or     DWORD PTR [ebx+ebp*2],ebx
  406f26:	or     edx,ebp
  406f28:	add    DWORD PTR [ecx],ebp
  406f2a:	dec    esi
  406f2b:	sti    
  406f2c:	cmc    
  406f2d:	add    al,BYTE PTR [edi-0x6]
  406f30:	shl    DWORD PTR ds:0x2cee8e8a,cl
  406f36:	dec    ebp
  406f37:	adc    DWORD PTR [ebx-0x1c39a19a],ebp
  406f3d:	ss js  0x406f4b
  406f40:	retf   
  406f41:	sti    
  406f42:	inc    ebp
  406f43:	add    eax,0x291f5999
  406f48:	dec    esp
  406f49:	inc    eax
  406f4a:	pop    edi
  406f4b:	jle    0x406f31
  406f4d:	loope  0x406eff
  406f4f:	adc    bl,bl
  406f51:	xchg   edi,eax
  406f52:	jnp    0x406f45
  406f54:	add    edx,DWORD PTR [esi+0x6af9b06c]
  406f5a:	sub    eax,0xc4161d87
  406f5f:	sub    DWORD PTR [eax+0x34],0xffffffe0
  406f63:	lods   eax,DWORD PTR ds:[esi]
  406f64:	pushf  
  406f65:	pop    esi
  406f66:	int3   
  406f67:	mov    dl,0xae
  406f69:	dec    ecx
  406f6a:	or     al,0x44
  406f6c:	add    BYTE PTR [esi],ah
  406f6e:	sbb    eax,0x470f70dd
  406f73:	pop    ebp
  406f74:	pop    edx
  406f75:	mov    bh,0x29
  406f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f78:	mov    dl,0x25
  406f7a:	outs   dx,BYTE PTR ds:[esi]
  406f7b:	ret    0x69e5
  406f7e:	test   al,0xd0
  406f80:	inc    esi
  406f81:	add    al,0x50
  406f83:	aaa    
  406f84:	je     0x406f0a
  406f86:	pop    edx
  406f87:	in     eax,dx
  406f88:	mov    ecx,esi
  406f8a:	dec    ecx
  406f8b:	popa   
  406f8c:	or     ebx,DWORD PTR [esi+0x59e82ede]
  406f92:	notrack call ecx
  406f95:	adc    bl,ah
  406f97:	js     0x406f4a
  406f99:	or     DWORD PTR ds:0x2b17d42b,0x73d048fa
  406fa3:	xchg   eax,ecx
  406fa5:	int    0xa6
  406fa7:	sbb    BYTE PTR [edi+0x21],dl
  406faa:	push   ebx
  406fab:	je     0x407024
  406fad:	in     eax,dx
  406fae:	xor    BYTE PTR [edx-0x5bd67357],al
  406fb4:	cmp    DWORD PTR [eax+0x1f],ebp
  406fb7:	out    dx,al
  406fb8:	mov    esp,0x64dc4992
  406fbd:	repz gs cli 
  406fc0:	shl    DWORD PTR [eax-0x72],1
  406fc3:	mov    ebp,eax
  406fc5:	mov    ch,0x72
  406fc7:	das    
  406fc8:	push   0xffffffb8
  406fca:	scas   al,BYTE PTR es:[edi]
  406fcb:	adc    bl,BYTE PTR [edi]
  406fcd:	cmp    BYTE PTR [ebp+0x42],bl
  406fd0:	stc    
  406fd1:	add    eax,ebx
  406fd3:	jg     0x407004
  406fd5:	add    eax,ecx
  406fd7:	xor    eax,0xc8a7c0de
  406fdc:	retf   0x8f39
  406fdf:	jmp    eax
  406fe1:	test   al,0x10
  406fe3:	mov    bh,bl
  406fe5:	mov    al,0x17
  406fe7:	mov    ah,ch
  406fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fea:	mov    al,BYTE PTR [edi]
  406fec:	bound  eax,QWORD PTR [ebp+edi*2+0x77e7b115]
  406ff3:	jg     0x407007
  406ff5:	std    
  406ff6:	push   edi
  406ff7:	ds xchg edi,eax
  406ff9:	push   esp
  406ffa:	inc    ebp
  406ffb:	ins    DWORD PTR es:[edi],dx
  406ffc:	inc    esp
  406ffd:	push   esi
  406ffe:	or     eax,0x50c86d2a
  407003:	mov    eax,ds:0xfacac28f
  407008:	(bad)  
  407009:	mul    DWORD PTR [ebp-0x24a20bcc]
  40700f:	dec    edi
  407010:	add    eax,0x791fdf8c
  407015:	lods   eax,DWORD PTR ds:[esi]
  407016:	xchg   ebp,eax
  407017:	js     0x40702c
  407019:	(bad)  
  40701a:	sub    dl,BYTE PTR [ebx+ebp*4-0x71]
  40701e:	aam    0xa9
  407020:	push   esp
  407021:	pop    eax
  407022:	out    dx,eax
  407023:	test   BYTE PTR [edx-0x7bc859cd],cl
  407029:	rcr    DWORD PTR [eax+0x6e],0xaf
  40702d:	pop    eax
  40702e:	xchg   edi,eax
  40702f:	jb     0x407078
  407031:	mov    ch,0x10
  407033:	shr    DWORD PTR [edx],0x88
  407036:	and    ebp,DWORD PTR [eax+0x5aef840b]
  40703c:	cmp    ebp,DWORD PTR [edi]
  40703e:	test   eax,0x3fb1ba35
  407043:	push   esp
  407044:	loop   0x407091
  407046:	xchg   ebx,eax
  407047:	sbb    eax,0x8113b268
  40704c:	jl     0x40706e
  40704e:	jg     0x40705b
  407050:	and    eax,0x68797ff0
  407055:	mov    ebp,0x76a3b11f
  40705a:	cwde   
  40705b:	shr    edi,0x10
  40705e:	xor    eax,0x3347e1e1
  407063:	sbb    dh,BYTE PTR [ecx+edi*8-0x531489c6]
  40706a:	push   ecx
  40706b:	pop    ebx
  40706c:	jno    0x40700e
  40706e:	mov    ch,0x5
  407070:	mov    esp,0xd5ed75ef
  407075:	inc    esp
  407076:	dec    edi
  407077:	stos   DWORD PTR es:[edi],eax
  407078:	inc    ebp
  407079:	fild   QWORD PTR [ecx-0x6f0b3b81]
  40707f:	adc    BYTE PTR [ebp+0x19],0xb3
  407083:	cmp    edx,edi
  407085:	xchg   esp,eax
  407086:	addr16 jno 0x407015
  407089:	lahf   
  40708a:	sti    
  40708b:	inc    eax
  40708c:	jmp    0xa24b:0x8dfc1888
  407093:	pop    edx
  407094:	push   eax
  407095:	(bad)  
  407096:	jg     0x407027
  407098:	daa    
  407099:	(bad)  
  40709a:	and    ah,BYTE PTR [edi+0x5e63b220]
  4070a0:	mov    dh,0x59
  4070a2:	xor    ch,BYTE PTR ds:[ebx-0x48]
  4070a6:	int3   
  4070a7:	add    bh,bl
  4070a9:	loop   0x4070f1
  4070ab:	jmp    0xf1afd94e
  4070b0:	aaa    
  4070b1:	icebp  
  4070b2:	mov    eax,ds:0xe435f353
  4070b7:	jb     0x4070e3
  4070b9:	add    eax,0xec6b2c9b
  4070be:	sahf   
  4070bf:	into   
  4070c0:	push   ebx
  4070c1:	xor    al,0xa2
  4070c3:	jnp    0x4070b4
  4070c5:	gs pop ebx
  4070c7:	rcr    DWORD PTR ds:0x8b9c5c4,0xa1
  4070ce:	or     DWORD PTR [ebp+0x49d90c53],esp
  4070d4:	stc    
  4070d5:	dec    ecx
  4070d6:	ret    0x1d48
  4070d9:	or     esp,esi
  4070db:	sub    DWORD PTR [edx-0x29],ecx
  4070de:	arpl   WORD PTR [ecx-0x71],dx
  4070e1:	xor    DWORD PTR [edx],ebx
  4070e3:	sub    dh,BYTE PTR [esi-0x2b347fdc]
  4070e9:	sub    BYTE PTR [eax],0x99
  4070ec:	dec    esi
  4070ed:	jle    0x40708e
  4070ef:	cmp    al,0x13
  4070f1:	leave  
  4070f2:	or     esi,ebp
  4070f4:	icebp  
  4070f5:	inc    eax
  4070f6:	cwde   
  4070f7:	push   esi
  4070f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f9:	mov    ch,0xc9
  4070fb:	and    eax,0xa0511727
  407100:	iret   
  407101:	jmp    0x407138
  407103:	arpl   WORD PTR [edx+0x2cfde7a7],di
  407109:	fmul   QWORD PTR [edi+ecx*2]
  40710c:	adc    al,0x72
  40710e:	shl    BYTE PTR [esi],1
  407110:	mov    edx,0x329cbb8
  407115:	ja     0x4070b2
  407117:	scas   eax,DWORD PTR es:[edi]
  407118:	jo     0x407131
  40711a:	sbb    esi,DWORD PTR [ebx-0x6d097c05]
  407120:	sub    eax,0xe400095d
  407125:	push   esp
  407126:	sub    esp,ebx
  407128:	shr    DWORD PTR [ebx],1
  40712a:	ins    BYTE PTR es:[edi],dx
  40712b:	inc    eax
  40712c:	pop    edx
  40712d:	dec    edi
  40712e:	sub    dh,al
  407130:	mov    eax,edx
  407132:	pop    esi
  407134:	xchg   esi,eax
  407135:	push   ds
  407136:	mov    al,ds:0xdc1e2344
  40713b:	lods   eax,DWORD PTR ds:[esi]
  40713c:	xor    al,BYTE PTR [ebx+0x3f]
  40713f:	in     al,dx
  407140:	add    eax,0x125a6a58
  407145:	sbb    BYTE PTR [esi-0x5dfb88c0],ah
  40714b:	mov    al,0x60
  40714d:	or     eax,0x1c4c599b
  407152:	popf   
  407153:	repz lds eax,FWORD PTR [eax+0x628c996f]
  40715a:	jp     0x4070f6
  40715c:	pop    edx
  40715d:	cmp    al,0x57
  40715f:	cmp    ebx,DWORD PTR [edx+0x26]
  407162:	test   eax,0x424c189
  407167:	jb     0x407166
  407169:	out    0x15,al
  40716b:	or     al,0xa4
  40716d:	sub    dh,BYTE PTR [ebx+0x76e8de96]
  407173:	test   BYTE PTR ds:0xfdbc5412,ah
  407179:	jle    0x4071aa
  40717b:	xchg   DWORD PTR [ebx-0x6fbfe0e2],ecx
  407181:	lock cmp eax,0x439cac30
  407187:	call   0x954e:0x297b835
  40718e:	fcomp  DWORD PTR [ebp-0x4561aeee]
  407194:	push   cs
  407195:	sub    al,0xca
  407197:	inc    edx
  407198:	sub    DWORD PTR [esi],edi
  40719a:	cmp    eax,DWORD PTR [eax]
  40719c:	dec    edi
  40719d:	sub    al,ch
  40719f:	scas   al,BYTE PTR es:[edi]
  4071a0:	ret    
  4071a1:	add    DWORD PTR [ebx+0x29],edi
  4071a4:	popa   
  4071a5:	(bad)  
  4071a6:	nop
  4071a7:	mov    ch,bl
  4071a9:	aaa    
  4071aa:	test   BYTE PTR [esi+0x5d],dh
  4071ad:	dec    ebx
  4071ae:	sbb    edi,DWORD PTR [ecx+0x25]
  4071b1:	ror    DWORD PTR [edx],1
  4071b3:	shl    BYTE PTR [edi],1
  4071b5:	dec    edi
  4071b6:	out    0x3d,eax
  4071b8:	pop    ecx
  4071b9:	sbb    al,0x7c
  4071bb:	jb     0x4071ea
  4071bd:	mov    ebp,0x4a5ba6a8
  4071c2:	xlat   BYTE PTR ds:[ebx]
  4071c3:	test   al,0x8c
  4071c5:	bound  edi,QWORD PTR [ebp+0x5]
  4071c8:	(bad)  
  4071c9:	enter  0x9b37,0xfe
  4071cd:	(bad)  
  4071ce:	scas   al,BYTE PTR es:[edi]
  4071cf:	fwait
  4071d0:	and    eax,0xd8585e46
  4071d5:	cwde   
  4071d6:	sahf   
  4071d7:	dec    eax
  4071d8:	jp     0x407196
  4071da:	lods   eax,DWORD PTR ds:[esi]
  4071db:	or     bh,dh
  4071dd:	push   ecx
  4071de:	add    ecx,DWORD PTR [edi-0x384c73b5]
  4071e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071e5:	mov    ds:0xa41634c1,al
  4071ea:	sahf   
  4071eb:	leave  
  4071ec:	mov    cl,0x29
  4071ee:	(bad)  [edx-0x7a]
  4071f1:	sbb    ah,BYTE PTR [ebx-0x32531a02]
  4071f7:	sti    
  4071f8:	dec    esp
  4071f9:	mov    ebp,0x4b49aa90
  4071fe:	cwde   
  4071ff:	outs   dx,DWORD PTR ds:[esi]
  407200:	xor    al,0x2e
  407202:	inc    edx
  407203:	pop    esi
  407204:	neg    BYTE PTR es:[ecx]
  407207:	sub    al,0x2d
  407209:	push   edx
  40720a:	fnsave [eax+0xfcb9b9e]
  407210:	and    al,0x6a
  407212:	mov    ds:0x193b5eb6,eax
  407217:	push   esi
  407218:	cmp    eax,0x2f167a09
  40721d:	fiadd  DWORD PTR [esi-0x93839f6]
  407223:	jbe    0x407213
  407225:	fnstenvw [ebx+0x5f]
  407229:	add    ah,BYTE PTR [edi]
  40722b:	jno    0x407229
  40722d:	mov    bh,0x59
  40722f:	or     al,0x0
  407231:	arpl   cx,sp
  407233:	std    
  407234:	jb     0x407290
  407236:	nop
  407237:	xchg   esp,eax
  407238:	out    dx,eax
  407239:	sub    eax,ebx
  40723b:	lods   al,BYTE PTR ds:[esi]
  40723c:	xchg   bh,al
  40723e:	cmp    cl,BYTE PTR [ebp-0x1535dfef]
  407244:	icebp  
  407245:	or     eax,edi
  407247:	and    esi,esi
  407249:	pop    ecx
  40724a:	or     BYTE PTR [eax],dh
  40724c:	mov    eax,ds:0x849ee532
  407251:	and    edx,eax
  407253:	in     al,dx
  407254:	scas   eax,DWORD PTR es:[edi]
  407255:	cmp    cl,al
  407257:	mov    esi,0x546c080b
  40725c:	pop    esi
  40725d:	push   ds
  40725e:	adc    eax,eax
  407260:	fmul   DWORD PTR [esi-0x2a]
  407263:	pop    ecx
  407264:	js     0x40726c
  407266:	(bad)  
  407267:	mov    ecx,0x82e5f98b
  40726c:	test   DWORD PTR [ebx-0x38],ebp
  40726f:	push   cs
  407270:	gs inc edx
  407272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407273:	or     BYTE PTR [esi],dl
  407275:	pop    ebp
  407276:	lds    eax,FWORD PTR [ebx-0x2c]
  407279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40727a:	xchg   DWORD PTR [ebx+0x1a],ebx
  40727d:	push   edi
  40727e:	mov    DWORD PTR [eax-0x4f],esp
  407281:	jle    0x4072c1
  407283:	retf   0xac12
  407286:	and    al,0x16
  407288:	mov    eax,0xea8c7a68
  40728d:	cld    
  40728e:	jae    0x407211
  407290:	xchg   ebx,eax
  407291:	mov    ds:0xc6e69c12,eax
  407296:	call   0x3963a4c9
  40729b:	cli    
  40729c:	int3   
  40729d:	hlt    
  40729e:	out    0x56,al
  4072a0:	or     cl,bh
  4072a2:	and    esp,DWORD PTR [edi-0xd55979c]
  4072a8:	rcr    DWORD PTR [edx-0x4b306ee3],0x1c
  4072af:	mov    edx,0xb87e1db1
  4072b4:	fist   DWORD PTR [ecx-0x6e]
  4072b7:	adc    eax,0x99644379
  4072bc:	push   es
  4072bd:	and    eax,ebx
  4072bf:	pop    ecx
  4072c0:	int3   
  4072c1:	loop   0x407269
  4072c3:	sub    BYTE PTR [esi],bl
  4072c5:	mov    fs,esi
  4072c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c8:	leave  
  4072c9:	mov    edx,0x81d89000
  4072ce:	add    BYTE PTR [esi],cl
  4072d0:	jge    0x40727b
  4072d2:	cmp    esp,DWORD PTR [eax-0x18]
  4072d5:	dec    edi
  4072d6:	int    0xbc
  4072d8:	in     al,dx
  4072d9:	shl    dh,0xbd
  4072dc:	xchg   edi,eax
  4072dd:	js     0x407313
  4072df:	add    al,0x68
  4072e1:	push   esp
  4072e2:	sbb    esp,DWORD PTR [ecx+0x4fc7b94d]
  4072e8:	(bad)  
  4072e9:	jmp    0x6aaa8f8f
  4072ee:	adc    dl,BYTE PTR [ebp-0x4af7359a]
  4072f4:	fs and al,0xd4
  4072f7:	in     eax,dx
  4072f8:	and    eax,0xca14aae9
  4072fd:	push   edx
  4072fe:	sbb    ah,dh
  407300:	enter  0xb35,0x7
  407304:	fnstenv [ebx-0x5e533d57]
  40730a:	adc    cl,bl
  40730c:	sub    al,0xb3
  40730e:	xor    BYTE PTR [ecx],bl
  407310:	mov    BYTE PTR [esi-0x7d],al
  407313:	(bad)  
  407315:	jl     0x40734e
  407317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407318:	sub    eax,0x7d47a6c9
  40731d:	sbb    DWORD PTR [edi+0x14],0x724fb3dd
  407324:	imul   edi,DWORD PTR [ebx+0x64ae62c6],0xa72430ae
  40732e:	enter  0x1ec7,0x76
  407332:	shl    BYTE PTR [edi+edx*8+0x73],cl
  407336:	out    dx,eax
  407337:	inc    esp
  407338:	imul   ebp,DWORD PTR [edx+0x1f3d869a],0xffffffd7
  40733f:	jbe    0x40733f
  407341:	push   es
  407342:	pop    esi
  407343:	jmp    0x407372
  407345:	(bad)  
  407346:	or     BYTE PTR [edi-0x33412869],ah
  40734c:	out    0x66,ax
  40734f:	das    
  407350:	push   es
  407351:	lea    edi,[ecx-0x67ec2ca6]
  407357:	scas   al,BYTE PTR es:[edi]
  407358:	add    al,0x61
  40735a:	js     0x407313
  40735c:	sub    esp,edx
  40735e:	mov    ds:0x3383cff0,eax
  407363:	std    
  407364:	xchg   cl,dh
  407366:	or     dh,al
  407368:	retf   0xb75a
  40736b:	sbb    eax,0x1bb97fd7
  407370:	sbb    al,0xc6
  407372:	sbb    esp,DWORD PTR ds:0x10f537ce
  407378:	sub    al,0xd7
  40737a:	sti    
  40737b:	fdivr  QWORD PTR [ecx]
  40737d:	inc    ebx
  40737e:	je     0x407335
  407380:	pop    ebp
  407381:	mov    BYTE PTR [bx+di-0x5e],ah
  407385:	pop    edi
  407386:	xchg   esp,eax
  407387:	or     al,0x96
  407389:	(bad)  [ebp+0x251f5d1b]
  40738f:	test   eax,0x5dd8ae8b
  407394:	ror    esi,0x9c
  407397:	push   cs
  407398:	sub    ah,bh
  40739a:	add    BYTE PTR [ecx+eax*8-0x8],al
  40739e:	sahf   
  40739f:	sub    BYTE PTR [ebx+ecx*2+0x65],0xda
  4073a4:	jp     0x407363
  4073a6:	jnp    0x407406
  4073a8:	pop    es
  4073a9:	loopne 0x407419
  4073ab:	jmp    0xf4a6bd77
  4073b0:	imul   ecx,DWORD PTR [ebx],0xa5f368fe
  4073b6:	in     eax,dx
  4073b7:	int    0xbd
  4073b9:	xor    ch,BYTE PTR [eax]
  4073bb:	in     eax,0x1b
  4073bd:	outs   dx,DWORD PTR ds:[esi]
  4073be:	ret    0x7be9
  4073c1:	(bad)  
  4073c2:	nop
  4073c3:	sub    BYTE PTR [ecx-0x1b394e0d],0xd1
  4073ca:	xchg   esp,eax
  4073cb:	fisttp WORD PTR [edx+edi*4+0x65]
  4073cf:	je     0x40742b
  4073d1:	push   cs
  4073d2:	sbb    BYTE PTR [ebx-0x224c108c],0x3
  4073d9:	jne    0x4073f4
  4073db:	cmp    bh,BYTE PTR [esi+0x6485a42]
  4073e1:	and    esp,edi
  4073e3:	pusha  
  4073e4:	fist   DWORD PTR [esi-0x14]
  4073e7:	sbb    edi,ecx
  4073e9:	sbb    DWORD PTR [ebx],edx
  4073eb:	ret    
  4073ec:	and    al,0xee
  4073ee:	pop    ebp
  4073ef:	clc    
  4073f0:	stos   DWORD PTR es:[edi],eax
  4073f1:	lock (bad) 
  4073f3:	mov    cl,0xf
  4073f5:	cs mov WORD PTR ds:[ebx],bx
  4073fa:	add    eax,DWORD PTR [ecx+0x146d8bde]
  407400:	sub    eax,0xea3ff247
  407405:	daa    
  407406:	xchg   esi,eax
  407407:	in     eax,0x7a
  407409:	loope  0x40740e
  40740b:	lea    ebp,[eax+eax*2]
  40740e:	rcr    eax,1
  407410:	inc    eax
  407411:	xor    BYTE PTR [eax+0x30d3ccfe],cl
  407417:	add    DWORD PTR [ebx-0x4d697dab],eax
  40741d:	ficom  WORD PTR [esi]
  40741f:	jmp    0x4073d3
  407421:	sbb    BYTE PTR [esi+0x467f1b96],bh
  407427:	int    0xdf
  407429:	ret    
  40742a:	push   es
  40742b:	lahf   
  40742c:	loope  0x4073cc
  40742e:	cli    
  40742f:	int3   
  407430:	leave  
  407431:	mov    bh,0x27
  407433:	xor    eax,0xb626036b
  407438:	inc    ecx
  407439:	mov    ch,0xec
  40743b:	inc    edx
  40743c:	or     BYTE PTR [esi-0x3a],dl
  40743f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407440:	sub    edx,DWORD PTR [eax-0x49e5ca92]
  407446:	or     al,0x7d
  407448:	arpl   WORD PTR [edx+0x14],ax
  40744b:	out    dx,eax
  40744c:	push   ecx
  40744d:	push   ebx
  40744e:	mov    ecx,0xc93296d0
  407453:	daa    
  407454:	mov    eax,ds:0x728bc277
  407459:	retf   
  40745a:	in     al,0x99
  40745c:	push   edi
  40745d:	xchg   edi,eax
  40745e:	sbb    eax,ebx
  407460:	mov    cl,0xb2
  407462:	shl    BYTE PTR [ebx],cl
  407464:	test   edi,ebx
  407466:	pop    es
  407467:	xchg   edx,eax
  407468:	sbb    al,0xc9
  40746a:	cmp    al,0xd4
  40746c:	mov    bh,0x96
  40746e:	xchg   ecx,eax
  40746f:	push   0x7
  407471:	xchg   BYTE PTR [esi+eiz*4+0x6d],al
  407475:	cmc    
  407476:	mov    edi,0x13450215
  40747b:	fld    TBYTE PTR [edx-0x794a34d4]
  407481:	xor    al,0xfb
  407483:	sub    dl,al
  407485:	in     al,dx
  407486:	xchg   ebp,eax
  407487:	push   0x7e532c89
  40748c:	out    dx,eax
  40748d:	nop
  40748e:	xchg   edx,eax
  40748f:	stc    
  407490:	scas   eax,DWORD PTR es:[edi]
  407491:	adc    cl,ah
  407493:	push   cs
  407494:	xor    edx,DWORD PTR [ecx]
  407496:	mov    edx,0x226995a2
  40749b:	sub    esi,DWORD PTR [ecx]
  40749d:	loopne 0x4074f5
  40749f:	add    al,0x1f
  4074a1:	push   edx
  4074a2:	and    eax,0x7787f159
  4074a7:	ins    DWORD PTR es:[edi],dx
  4074a8:	loop   0x4074f7
  4074aa:	loopne 0x407490
  4074ac:	jbe    0x4074af
  4074ae:	jl     0x407485
  4074b0:	xor    BYTE PTR ds:[eax+0x270fa83e],cl
  4074b7:	xchg   edi,edx
  4074b9:	popa   
  4074ba:	stos   DWORD PTR es:[edi],eax
  4074bb:	outs   dx,BYTE PTR ds:[esi]
  4074bc:	adc    ebp,DWORD PTR [ebp+ecx*1-0x1c]
  4074c0:	in     al,0x5
  4074c2:	sub    BYTE PTR [esi+0xe],al
  4074c5:	cmp    al,0x9
  4074c7:	adc    esp,ecx
  4074c9:	gs jp  0x4074fc
  4074cc:	pop    edi
  4074cd:	bound  edi,QWORD PTR [ecx]
  4074cf:	(bad)  
  4074d0:	dec    ebp
  4074d1:	gs mov dh,0x8f
  4074d4:	inc    esp
  4074d5:	dec    edx
  4074d6:	cld    
  4074d7:	(bad)  
  4074d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074da:	cmp    eax,0x519bbeb0
  4074df:	je     0x407536
  4074e1:	js     0x4074a6
  4074e3:	not    esi
  4074e5:	push   ebp
  4074e6:	fadd   st(0),st
  4074e8:	jae    0x40754f
  4074ea:	push   edi
  4074eb:	sti    
  4074ec:	popa   
  4074ed:	fcmovnu st,st(2)
  4074ef:	fsub   QWORD PTR [edx+0x6da6d99c]
  4074f5:	cwde   
  4074f6:	and    BYTE PTR [ebp-0x705ab96d],cl
  4074fc:	scas   eax,DWORD PTR es:[edi]
  4074fd:	lahf   
  4074fe:	pop    eax
  4074ff:	push   esi
  407500:	leave  
  407501:	mov    ss,WORD PTR [edx]
  407503:	test   eax,0xf7d50b29
  407508:	xlat   BYTE PTR ds:[ebx]
  407509:	cs popaw 
  40750c:	fs cld 
  40750e:	inc    edi
  40750f:	xchg   esp,eax
  407510:	or     edi,DWORD PTR [edx-0x5f378934]
  407516:	jge    0x407547
  407518:	xor    BYTE PTR [eax],bh
  40751a:	xor    BYTE PTR [edx+0x2f84f3b9],dh
  407520:	jbe    0x4074cc
  407522:	cs push ebp
  407524:	xchg   esp,eax
  407525:	and    dh,BYTE PTR [ecx*8+0x41572b77]
  40752c:	lods   eax,DWORD PTR ds:[esi]
  40752d:	jo     0x407514
  40752f:	in     al,0x6c
  407531:	sub    bh,al
  407533:	sti    
  407534:	pop    esi
  407535:	dec    esi
  407536:	sbb    ch,ah
  407538:	mov    ebp,0x5e35afa4
  40753d:	sbb    BYTE PTR [eax+0x55],ch
  407540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407541:	mov    ecx,0xa59d4a26
  407546:	adc    ah,BYTE PTR [edi]
  407548:	enter  0xff3,0xca
  40754c:	add    al,0x73
  40754e:	test   al,0x84
  407550:	pop    edi
  407551:	mov    bh,0x1b
  407553:	push   ebp
  407554:	jmp    0x407503
  407556:	pushf  
  407557:	shl    DWORD PTR [edi],cl
  407559:	dec    BYTE PTR [ecx+ebx*2]
  40755c:	dec    ebp
  40755d:	fsub   DWORD PTR [edi+0x38]
  407560:	rol    dh,0x56
  407563:	dec    ebp
  407564:	sahf   
  407565:	xlat   BYTE PTR ds:[ebx]
  407566:	fwait
  407567:	outs   dx,DWORD PTR ds:[esi]
  407568:	imul   BYTE PTR [ebx]
  40756a:	pop    ds
  40756b:	inc    ebx
  40756c:	(bad)
  407570:	jge    0x4074fe
  407572:	fwait
  407573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407574:	pop    ecx
  407575:	ret    
  407576:	ja     0x4074fb
  407578:	xor    edx,DWORD PTR [ebx]
  40757a:	scas   eax,DWORD PTR es:[edi]
  40757b:	test   BYTE PTR [esi+0x5741d6fa],al
  407581:	sahf   
  407582:	rol    BYTE PTR [edi-0x62c00152],0xed
  407589:	mov    ecx,0xed70f26d
  40758e:	mov    ?,WORD PTR [edx-0x3c]
  407591:	mov    bl,al
  407593:	sbb    al,BYTE PTR [eax-0x475c0392]
  407599:	in     eax,0xa0
  40759b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759c:	pop    ds
  40759d:	mov    edi,0x550e44c2
  4075a2:	push   cs
  4075a3:	rcr    DWORD PTR [esi+0x23],cl
  4075a6:	cmp    eax,0xadacb8a7
  4075ab:	into   
  4075ac:	outs   dx,BYTE PTR ds:[esi]
  4075ad:	mov    ds:0x96d397fa,eax
  4075b2:	sbb    eax,0xc96b6eb3
  4075b7:	jge    0x407608
  4075b9:	call   0xf9b3f57d
  4075be:	rcr    DWORD PTR [esi-0x7996e98],1
  4075c4:	fmul   DWORD PTR [esi-0x1b98d7fd]
  4075ca:	cmp    dl,ah
  4075cc:	push   ss
  4075cd:	and    eax,0xc7aacdf0
  4075d2:	push   0x47a80c81
  4075d7:	dec    edi
  4075d8:	popf   
  4075d9:	jmp    0x407610
  4075db:	mov    WORD PTR fs:[ebp-0x2bf2242d],gs
  4075e2:	loop   0x4075e8
  4075e4:	push   edx
  4075e5:	mov    ds:0x9be69779,eax
  4075ea:	jnp    0x407582
  4075ec:	inc    edx
  4075ed:	outs   dx,BYTE PTR ds:[esi]
  4075ee:	xor    dl,BYTE PTR [ecx-0x67bc416b]
  4075f4:	cmp    al,0x99
  4075f6:	cmp    eax,0xff602f2d
  4075fb:	fst    DWORD PTR [esi+0x73187bf0]
  407601:	push   0xffffffa2
  407603:	push   es
  407604:	je     0x407647
  407606:	inc    ecx
  407607:	mov    ds:0x69d5bc41,eax
  40760c:	inc    ebp
  40760d:	push   ss
  40760e:	push   ss
  40760f:	int3   
  407610:	retf   
  407611:	out    0xd9,al
  407613:	test   al,0x6b
  407615:	mov    ebp,0x134f53e
  40761a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40761b:	pop    ebx
  40761c:	xor    esi,0xfad47808
  407622:	(bad)  
  407623:	lahf   
  407624:	mov    ebp,DWORD PTR [ecx]
  407626:	mov    BYTE PTR [eax+0x71],ch
  407629:	sbb    ah,dl
  40762b:	adc    DWORD PTR [edi+0x4f],esi
  40762e:	sub    bl,BYTE PTR [edi+0x40]
  407631:	in     eax,dx
  407632:	cld    
  407633:	out    dx,eax
  407634:	inc    ebx
  407635:	cmp    bl,BYTE PTR [esi]
  407637:	or     BYTE PTR gs:[edx],ch
  40763a:	or     BYTE PTR [ecx+edx*4-0x77],dh
  40763e:	push   eax
  40763f:	jle    0x40765c
  407641:	fs retf 0xb352
  407645:	dec    esi
  407646:	into   
  407647:	mov    dl,0xcf
  407649:	xor    ch,BYTE PTR [edi+ebx*2]
  40764c:	mov    edi,0x66590be2
  407651:	mov    dh,0x32
  407653:	mov    ch,0x4c
  407655:	stos   DWORD PTR es:[edi],eax
  407656:	pop    edi
  407657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407658:	xor    DWORD PTR [ecx-0x6a],ebp
  40765b:	push   edi
  40765c:	sub    DWORD PTR ds:0x37f3c4d8,ecx
  407662:	aad    0xd1
  407664:	add    al,0x5
  407666:	push   ss
  407667:	daa    
  407668:	push   ebp
  407669:	ror    BYTE PTR [ebx+eiz*4],1
  40766c:	dec    eax
  40766d:	outs   dx,BYTE PTR ds:[esi]
  40766e:	call   0x42e0bfc6
  407673:	in     al,0x5b
  407675:	test   al,0xef
  407677:	xchg   esp,eax
  407678:	inc    edi
  407679:	inc    ebp
  40767a:	mov    cl,0x7b
  40767c:	mov    BYTE PTR [edi+0x3dab5aff],ah
  407682:	mov    ds:0xba5e3ea1,al
  407687:	and    al,0xdb
  407689:	dec    edi
  40768a:	xchg   esi,eax
  40768b:	in     eax,dx
  40768c:	push   es
  40768d:	push   0xffffffe6
  40768f:	aaa    
  407690:	lods   al,BYTE PTR ds:[esi]
  407691:	sub    ch,BYTE PTR [eax-0x2c]
  407694:	or     BYTE PTR [edi+0x2b446895],ah
  40769a:	aam    0xfa
  40769c:	or     esi,DWORD PTR [esp+eiz*8+0x4e23bf26]
  4076a3:	push   0xb
  4076a5:	xchg   ecx,eax
  4076a6:	or     esi,esi
  4076a8:	call   0xa06a34f6
  4076ad:	aas    
  4076ae:	dec    ebx
  4076af:	jno    0x4076e0
  4076b1:	out    dx,al
  4076b2:	dec    edx
  4076b3:	mov    ch,BYTE PTR [ebp-0x4fe093bd]
  4076b9:	push   edi
  4076ba:	xor    esp,DWORD PTR [eax-0x5c]
  4076bd:	leave  
  4076be:	push   0xffffffa8
  4076c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c1:	push   ebp
  4076c2:	test   eax,0x33055288
  4076c7:	push   eax
  4076c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c9:	mov    ebp,0xa041f5e9
  4076ce:	sbb    BYTE PTR ss:[ebx-0x1af341bb],bh
  4076d5:	adc    BYTE PTR [edi+edx*8],al
  4076d8:	sbb    ah,BYTE PTR [ecx-0x6c]
  4076db:	push   edx
  4076dc:	mov    edx,0x9d72ebe3
  4076e1:	mov    dl,0x1b
  4076e3:	mov    bh,0x39
  4076e5:	jmp    0x42b2:0x664b0e4e
  4076ec:	pushf  
  4076ed:	mov    bh,0xd1
  4076ef:	mov    edi,0x747b2086
  4076f4:	sbb    cl,BYTE PTR [ebx+0x7ae2c56f]
  4076fa:	ret    0xd6c0
  4076fd:	(bad)  
  4076fe:	ins    DWORD PTR es:[edi],dx
  4076ff:	mov    edx,0xc9c6ae92
  407704:	imul   ch
  407706:	push   0x21
  407708:	adc    al,0x1d
  40770a:	and    ebx,ecx
  40770c:	mov    esp,0xff08e72
  407711:	add    BYTE PTR [esi+eax*1],0x73
  407715:	sbb    ebx,DWORD PTR [esi+ebx*1]
  407718:	lea    edx,[esi+0x57]
  40771b:	mov    ebp,0x737229b9
  407720:	sahf   
  407721:	lods   al,BYTE PTR ds:[esi]
  407722:	xchg   ecx,eax
  407723:	cmp    bl,BYTE PTR [ebp-0x60537146]
  407729:	pop    eax
  40772a:	mov    esi,0x4bc9eeff
  40772f:	push   ebp
  407730:	push   ebx
  407731:	std    
  407732:	cmp    edi,DWORD PTR [eax]
  407734:	jl     0x40779e
  407736:	pop    ds
  407737:	add    al,0x85
  407739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40773a:	inc    esi
  40773b:	cmp    al,0xa4
  40773d:	or     eax,0x4be9882d
  407742:	ror    DWORD PTR [edx+0x1a342c52],1
  407748:	xchg   BYTE PTR [ebx],bl
  40774a:	fidivr WORD PTR [ecx-0x4261cc7b]
  407750:	divps  xmm6,XMMWORD PTR [eax]
  407753:	shl    DWORD PTR [ebp+0xb91b130],1
  407759:	sti    
  40775a:	popa   
  40775b:	je     0x40774e
  40775d:	jo     0x4077c3
  40775f:	sbb    dl,ah
  407761:	push   cs
  407762:	addr16 pop ecx
  407764:	pop    ecx
  407765:	int    0xc6
  407767:	add    bh,BYTE PTR ds:0x16728394
  40776d:	mov    cl,0x6
  40776f:	xchg   edi,eax
  407770:	stos   BYTE PTR es:[edi],al
  407771:	lock inc edx
  407773:	jne    0x407785
  407775:	xor    ah,BYTE PTR [eax+0x6bad0065]
  40777b:	inc    ebp
  40777c:	scas   eax,DWORD PTR es:[edi]
  40777d:	pop    ds
  40777e:	mov    al,ds:0x8abdc03d
  407783:	adc    ebp,esp
  407785:	dec    ebx
  407786:	es das 
  407788:	int    0x48
  40778a:	sub    BYTE PTR [edx-0x7b],al
  40778d:	pop    ss
  40778e:	daa    
  40778f:	or     al,0x18
  407791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407792:	push   ebp
  407793:	scas   al,BYTE PTR es:[edi]
  407794:	push   esp
  407795:	daa    
  407796:	adc    BYTE PTR [ebx+0x58956218],0x17
  40779d:	sti    
  40779e:	shl    BYTE PTR [eax-0x40],1
  4077a1:	push   0xffffffb9
  4077a3:	jg     0x407747
  4077a5:	mov    bh,0x4
  4077a7:	dec    edi
  4077a8:	(bad)  
  4077a9:	fldcw  WORD PTR [ecx+0x3a69ab98]
  4077af:	mov    ebx,DWORD PTR [edx-0x2131637e]
  4077b5:	mov    edi,0xa9d89d13
  4077ba:	sbb    al,BYTE PTR ds:0xcadd8cd6
  4077c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c1:	push   es
  4077c2:	jp     0x4077e4
  4077c4:	inc    eax
  4077c5:	mov    ds:0x104cf611,al
  4077ca:	mov    cl,0x86
  4077cc:	dec    ebp
  4077cd:	adc    al,BYTE PTR [ecx]
  4077cf:	scas   al,BYTE PTR es:[edi]
  4077d0:	jmp    0x671b:0xb497facb
  4077d7:	push   0xfffffff9
  4077d9:	mov    edi,0xaf7f28e7
  4077de:	sbb    eax,0xe5b31120
  4077e3:	adc    eax,0x116b7ae5
  4077e8:	loope  0x40781a
  4077ea:	into   
  4077eb:	cmp    BYTE PTR [ecx-0x7e73368d],bh
  4077f1:	mov    al,0x8c
  4077f3:	mov    ch,0x4
  4077f5:	xor    eax,ebx
  4077f7:	inc    edx
  4077f8:	xchg   esp,eax
  4077f9:	outs   dx,BYTE PTR ds:[esi]
  4077fa:	jnp    0x40779c
  4077fc:	lods   al,BYTE PTR ds:[esi]
  4077fd:	add    DWORD PTR [edi],eax
  4077ff:	cs nop
  407801:	inc    edx
  407802:	icebp  
  407803:	mov    ecx,0x2348de92
  407808:	rcr    DWORD PTR [edx+ebx*2-0x79],0x49
  40780d:	adc    cl,BYTE PTR [eax+0x202a92b8]
  407813:	mov    eax,ds:0x56517ae2
  407818:	mov    dl,0xc5
  40781a:	fbld   TBYTE PTR [ebp+0x5e0b7bdd]
  407820:	out    0x1,al
  407822:	adc    BYTE PTR [eax+0x7a],cl
  407825:	shl    DWORD PTR [esi],cl
  407827:	test   al,0xa8
  407829:	jno    0x4077f9
  40782b:	pushf  
  40782c:	push   ebx
  40782d:	div    DWORD PTR [eax-0x79f83b44]
  407833:	xchg   esp,eax
  407834:	imul   edi,DWORD PTR ds:0x983e7581,0xfffffff6
  40783b:	adc    DWORD PTR [edx-0x55ca8123],edi
  407841:	jns    0x4078a5
  407843:	xchg   ebp,eax
  407844:	loope  0x40785a
  407846:	sar    DWORD PTR [eax],0x9
  407849:	mov    ds:0xa44859dd,eax
  40784e:	gs sar al,0x5e
  407852:	mov    esp,DWORD PTR [edi]
  407854:	inc    ebx
  407855:	jns    0x4078a3
  407857:	fs pop ebx
  407859:	call   0xc6a212d3
  40785e:	retf   
  40785f:	(bad)  
  407860:	sbb    al,0x43
  407862:	push   edx
  407863:	lods   al,BYTE PTR ds:[esi]
  407864:	(bad)  
  407865:	fcmove st,st(2)
  407867:	in     eax,0xb0
  407869:	xchg   edx,eax
  40786b:	rcl    bl,0xf3
  40786e:	inc    edi
  40786f:	mov    ch,0x68
  407871:	and    eax,0x1a52d7a
  407876:	je     0x4078dc
  407878:	imul   eax,DWORD PTR [ecx+0x4084d15c],0xffffffb9
  40787f:	push   esp
  407880:	jmp    0x4078c3
  407882:	add    DWORD PTR [eax+0x2cb0f413],0x4986fab8
  40788c:	xlat   BYTE PTR ds:[ebx]
  40788d:	jg     0x4078f7
  40788f:	jno    0x4078f6
  407891:	lods   al,BYTE PTR ds:[esi]
  407892:	lock icebp 
  407894:	jno    0x407849
  407896:	outs   dx,DWORD PTR ds:[esi]
  407897:	mov    dh,0xdd
  407899:	cmp    cl,BYTE PTR [esi]
  40789b:	xchg   ebx,eax
  40789c:	mov    bl,BYTE PTR [ecx+0x3364bdd5]
  4078a2:	sub    edx,ebp
  4078a4:	pusha  
  4078a5:	movaps xmm7,XMMWORD PTR [ebx-0x6e]
  4078a9:	mov    DWORD PTR [ecx+edx*1-0x4b3aa950],edx
  4078b0:	xlat   BYTE PTR ds:[ebx]
  4078b1:	das    
  4078b2:	mov    cl,0xaa
  4078b4:	sbb    al,0x46
  4078b6:	popf   
  4078b7:	rol    BYTE PTR [ecx+0x4b],cl
  4078ba:	sbb    eax,0xe806f17c
  4078bf:	mov    ch,0xa6
  4078c1:	xchg   ebx,eax
  4078c2:	outs   dx,BYTE PTR ds:[esi]
  4078c3:	loop   0x4078cd
  4078c5:	push   eax
  4078c6:	aam    0xeb
  4078c8:	mov    dl,0xa1
  4078ca:	xchg   ebx,eax
  4078cb:	sub    dl,dh
  4078cd:	add    eax,0x3930fab3
  4078d2:	cmp    BYTE PTR ds:0x939a60d5,0xbd
  4078d9:	xor    ecx,DWORD PTR [ecx-0x3b]
  4078dc:	dec    eax
  4078dd:	mov    cl,0x78
  4078df:	call   0x1eb7:0xa75f248a
  4078e6:	sbb    bl,BYTE PTR [ebx]
  4078e8:	sub    eax,0x59096582
  4078ee:	mov    WORD PTR [ebx+0x28b0dddc],gs
  4078f4:	clc    
  4078f5:	mov    edx,0x6a0d251a
  4078fa:	xor    BYTE PTR [esi+ebp*4],bh
  4078fd:	ja     0x4078eb
  4078ff:	hlt    
  407900:	jns    0x40797d
  407902:	cwde   
  407903:	and    DWORD PTR [esp+edi*1+0xf],esp
  407907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407908:	xchg   ebx,eax
  407909:	cmp    BYTE PTR [eax-0x7ed1b28f],bh
  40790f:	cmc    
  407910:	push   ecx
  407911:	inc    edi
  407912:	sub    eax,0x22460856
  407917:	js     0x40791a
  407919:	cld    
  40791a:	mov    al,0x9c
  40791c:	push   eax
  40791d:	shl    DWORD PTR [esi],1
  40791f:	outs   dx,BYTE PTR ds:[esi]
  407920:	jecxz  0x407968
  407922:	leave  
  407923:	arpl   di,cx
  407925:	sbb    eax,0xb55b4d59
  40792a:	xchg   DWORD PTR [eax],edx
  40792c:	scas   al,BYTE PTR es:[edi]
  40792d:	into   
  40792e:	push   edi
  40792f:	sti    
  407930:	pop    esi
  407931:	xor    al,0xfb
  407933:	mov    edi,0x7aa2505c
  407938:	lds    ebp,FWORD PTR [edi-0x6603d698]
  40793e:	sbb    BYTE PTR [ebx+0x3a],al
  407941:	retf   0xa24a
  407944:	lahf   
  407945:	mov    cl,0x2b
  407947:	ins    DWORD PTR es:[edi],dx
  407948:	out    0x8,eax
  40794a:	jbe    0x4079c6
  40794c:	out    0x70,al
  40794e:	(bad)  
  40794f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407950:	fmul   DWORD PTR [eax-0x12]
  407953:	pop    eax
  407954:	clc    
  407955:	sub    DWORD PTR [ebp-0x25],0x31
  407959:	scas   eax,DWORD PTR es:[edi]
  40795a:	pop    es
  40795b:	test   eax,0xd0c1ef5d
  407960:	jle    0x40790e
  407962:	(bad)  
  407963:	(bad)  
  407964:	mov    ds:0x57ac68d7,al
  407969:	or     bl,BYTE PTR ds:0x2e5bae78
  40796f:	xchg   DWORD PTR [eax],esi
  407971:	jmp    0x4f7a577e
  407976:	lahf   
  407977:	ins    DWORD PTR es:[edi],dx
  407978:	sti    
  407979:	shl    BYTE PTR [esi-0x613b0b9d],0x85
  407980:	inc    BYTE PTR [ebp-0x6bea56ca]
  407986:	xchg   ecx,eax
  407987:	icebp  
  407988:	jno    0x407911
  40798a:	daa    
  40798b:	stos   BYTE PTR es:[edi],al
  40798c:	jno    0x407a03
  40798e:	scas   al,BYTE PTR es:[edi]
  40798f:	push   ecx
  407990:	add    eax,0x9c47a0ab
  407995:	stos   BYTE PTR es:[edi],al
  407996:	mov    ebp,esp
  407998:	(bad)  
  407999:	in     al,dx
  40799a:	inc    esp
  40799b:	ja     0x407a01
  40799d:	push   esp
  40799e:	rol    DWORD PTR [ebx+0x10],1
  4079a1:	ret    0xa029
  4079a4:	dec    ecx
  4079a5:	push   edi
  4079a6:	bound  ecx,QWORD PTR [ebx+0x15bb5ce6]
  4079ac:	sub    esi,ecx
  4079ae:	mov    edi,0xb5730fe3
  4079b3:	out    0xd9,al
  4079b5:	gs aam 0xa8
  4079b8:	lds    edx,FWORD PTR [esi+0x13]
  4079bb:	jo     0x407a14
  4079bd:	dec    ebp
  4079be:	xchg   BYTE PTR [edx],bl
  4079c0:	sahf   
  4079c1:	hlt    
  4079c2:	pop    ecx
  4079c3:	(bad)  
  4079c4:	push   ebx
  4079c5:	jl     0x407a17
  4079c7:	mov    ds:0xf7a975cd,eax
  4079cc:	loope  0x4079b9
  4079ce:	inc    ebp
  4079cf:	in     al,0xf2
  4079d1:	and    BYTE PTR [esp+ebp*1+0x5361a756],bh
  4079d8:	sub    eax,0x4363859b
  4079dd:	cmp    al,0x2
  4079df:	jbe    0x407992
  4079e1:	add    DWORD PTR [ebp-0x5a602807],ecx
  4079e7:	jbe    0x407a58
  4079e9:	xchg   ecx,eax
  4079ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079eb:	int3   
  4079ec:	mov    ds:0x9c18be80,eax
  4079f1:	jno    0x407988
  4079f3:	xchg   ebx,eax
  4079f4:	inc    edi
  4079f5:	das    
  4079f6:	cld    
  4079f7:	scas   al,BYTE PTR es:[edi]
  4079f8:	push   ecx
  4079f9:	ret    
  4079fa:	fadd   QWORD PTR [edi+0x359ca2f5]
  407a00:	shr    edx,1
  407a02:	shl    BYTE PTR [edi+0x18],1
  407a05:	stos   DWORD PTR es:[edi],eax
  407a06:	lock aas 
  407a08:	push   esp
  407a09:	bound  eax,QWORD PTR [ecx+0x7b456db1]
  407a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a10:	retf   0xb81e
  407a13:	push   edi
  407a14:	addr16 das 
  407a16:	out    dx,eax
  407a17:	pop    esi
  407a18:	xchg   BYTE PTR [edx],bl
  407a1a:	mov    ah,0x90
  407a1c:	sub    eax,DWORD PTR [edi+0x266dd8df]
  407a22:	mov    BYTE PTR [edx-0x10],al
  407a25:	loope  0x4079ac
  407a27:	and    DWORD PTR [ecx],eax
  407a29:	xor    eax,0x20b9a29c
  407a2e:	outs   dx,BYTE PTR ds:[esi]
  407a2f:	xor    al,0x6
  407a31:	add    al,0x8f
  407a33:	retw   
  407a35:	dec    ecx
  407a36:	mov    esp,edi
  407a38:	mov    ds:0x74a9f7f7,al
  407a3d:	sbb    DWORD PTR [edi+0x6770f729],edx
  407a43:	lea    edx,[eax+0xc]
  407a46:	dec    esp
  407a47:	test   BYTE PTR [esp+eax*8],al
  407a4a:	lods   eax,DWORD PTR ds:[esi]
  407a4b:	in     eax,0x33
  407a4d:	pop    esi
  407a4e:	sti    
  407a4f:	out    dx,eax
  407a50:	shl    BYTE PTR [eax],1
  407a52:	xor    eax,0x8901d00e
  407a57:	pop    ecx
  407a58:	jo     0x407a08
  407a5a:	icebp  
  407a5b:	jns    0x407a08
  407a5d:	mov    dh,0x61
  407a5f:	sub    al,BYTE PTR [edi+0x1e860b0a]
  407a65:	pushf  
  407a66:	dec    edx
  407a67:	and    cl,BYTE PTR [eax-0x55]
  407a6a:	or     al,0xf4
  407a6c:	pop    ss
  407a6d:	cmp    al,0xc8
  407a6f:	jge    0x407a14
  407a71:	add    esi,DWORD PTR [edx]
  407a73:	call   0x74bd947b
  407a78:	aam    0x8a
  407a7a:	in     al,0x58
  407a7c:	push   0x4b6d5de3
  407a81:	pop    edx
  407a83:	sti    
  407a84:	ret    
  407a85:	lds    ecx,FWORD PTR [ebx+0x27]
  407a88:	mov    esi,0x177455ab
  407a8d:	inc    edi
  407a8e:	jne    0x407ae3
  407a90:	inc    ebx
  407a91:	inc    ebx
  407a92:	gs mul esi
  407a95:	jne    0x407a59
  407a97:	mov    dh,0xc8
  407a99:	in     al,dx
  407a9a:	retf   0x82d9
  407a9d:	lods   eax,DWORD PTR ds:[esi]
  407a9e:	imul   ecx,DWORD PTR [esi],0xffffff93
  407aa1:	and    DWORD PTR [ebp+0x6c],eax
  407aa4:	xor    ch,BYTE PTR [ebx]
  407aa6:	ds clc 
  407aa8:	mov    eax,0x286cde65
  407aad:	int3   
  407aae:	add    esp,eax
  407ab0:	mov    WORD PTR [ecx-0x56],es
  407ab3:	jl     0x407ab9
  407ab5:	push   cs
  407ab6:	mov    bl,0x3f
  407ab8:	xchg   esp,eax
  407ab9:	stos   DWORD PTR es:[edi],eax
  407aba:	xor    BYTE PTR [esp+edx*2+0x59],0xc4
  407abf:	jbe    0x407a7b
  407ac1:	sub    al,0x2b
  407ac3:	xlat   BYTE PTR ds:[ebx]
  407ac4:	clc    
  407ac5:	mov    bh,0xe4
  407ac7:	cli    
  407ac8:	data16 (bad) 
  407aca:	sahf   
  407acb:	cmp    cl,BYTE PTR [ebx+0x4a]
  407ace:	or     DWORD PTR [esp+esi*8+0x5cb69258],edx
  407ad5:	jns    0x407ab0
  407ad7:	cs popa 
  407ad9:	(bad)  
  407ada:	loop   0x407b54
  407adc:	add    eax,0x9776fe67
  407ae1:	xor    DWORD PTR [eax-0xc645c75],ecx
  407ae7:	pop    esi
  407ae8:	ret    
  407ae9:	pop    eax
  407aea:	les    edx,FWORD PTR [ecx]
  407aec:	imul   ecx,ebp,0xffffffd7
  407aef:	jecxz  0x407b3f
  407af1:	leave  
  407af2:	or     DWORD PTR gs:[eax+0x6f],edx
  407af6:	rcl    DWORD PTR [esi-0x3],cl
  407af9:	xchg   edi,eax
  407afa:	ror    BYTE PTR [ecx-0x74],1
  407afd:	cmp    al,0xc3
  407aff:	push   ebp
  407b00:	pop    ecx
  407b02:	add    BYTE PTR [ebp+0x31],al
  407b05:	js     0x407b38
  407b07:	pop    edi
  407b08:	outs   dx,DWORD PTR ds:[esi]
  407b09:	test   BYTE PTR [ecx-0x598df456],0x72
  407b10:	push   ss
  407b11:	push   edi
  407b12:	adc    ebp,ebp
  407b14:	loopne 0x407b31
  407b16:	out    dx,eax
  407b17:	dec    esi
  407b18:	pop    ebx
  407b19:	dec    ebx
  407b1a:	mov    al,ds:0x74761647
  407b1f:	cs addr16 dec esp
  407b22:	aad    0x98
  407b24:	jmp    0x55eb:0xa59e636c
  407b2b:	add    dh,BYTE PTR [ebx+0x68]
  407b2e:	mov    ah,0xbd
  407b30:	pop    edi
  407b32:	gs sti 
  407b34:	xor    edx,DWORD PTR [edi]
  407b36:	fidivr DWORD PTR [edx]
  407b38:	push   ss
  407b39:	lods   eax,DWORD PTR ds:[esi]
  407b3a:	and    eax,0x1092bbcd
  407b3f:	mov    ah,BYTE PTR [ebp+eax*2-0xc]
  407b43:	xchg   esi,eax
  407b44:	mov    ds:0xf7adfaff,eax
  407b49:	xor    edi,edx
  407b4b:	je     0x407b4d
  407b4d:	mov    ds:0x59ccef79,eax
  407b52:	out    0x5a,eax
  407b54:	push   ecx
  407b55:	test   eax,0xf5eedc76
  407b5a:	data16 idiv BYTE PTR [esp+ecx*4]
  407b5e:	gs jecxz 0x407b3e
  407b61:	out    dx,al
  407b62:	and    DWORD PTR [ecx-0x21],ebp
  407b65:	test   eax,0xf49ae884
  407b6a:	dec    esp
  407b6b:	lds    edx,FWORD PTR [ecx-0x1fe1b418]
  407b71:	xor    esp,DWORD PTR [eax+0x1b]
  407b74:	or     al,0x7
  407b76:	mul    eax
  407b78:	mov    esi,0xf73fc83c
  407b7d:	and    DWORD PTR [ecx-0x77],edx
  407b80:	das    
  407b81:	or     edi,DWORD PTR [esp+ebp*2]
  407b84:	test   ecx,ebx
  407b86:	xchg   ecx,eax
  407b87:	xlat   BYTE PTR ds:[ebx]
  407b88:	int3   
  407b89:	add    BYTE PTR [ebp+0x49],dh
  407b8c:	inc    edi
  407b8d:	and    eax,0xdffa11b2
  407b92:	out    dx,eax
  407b93:	or     BYTE PTR [ebx+edx*8-0x51286f7d],0xeb
  407b9b:	stos   DWORD PTR es:[edi],eax
  407b9c:	xor    eax,0x91a2f0d
  407ba1:	xor    ah,BYTE PTR [ebx+eiz*8]
  407ba4:	jge    0x407b50
  407ba6:	push   esi
  407ba7:	add    ebx,DWORD PTR [ebp-0x328a9699]
  407bad:	xor    bh,BYTE PTR [eax]
  407baf:	inc    esp
  407bb0:	pop    ebp
  407bb1:	adc    DWORD PTR [ebx-0x62],eax
  407bb4:	mov    bh,0x9f
  407bb6:	pop    eax
  407bb7:	mov    esi,0x38791063
  407bbc:	and    BYTE PTR [edx+eiz*8],bl
  407bbf:	dec    eax
  407bc0:	js     0x407bfa
  407bc2:	mov    dl,0xa6
  407bc4:	inc    edx
  407bc5:	std    
  407bc6:	scas   al,BYTE PTR es:[edi]
  407bc7:	dec    eax
  407bc8:	das    
  407bc9:	into   
  407bca:	fwait
  407bcb:	inc    eax
  407bcc:	xlat   BYTE PTR ds:[ebx]
  407bcd:	pushf  
  407bce:	and    esi,DWORD PTR [ebx+0x76d6ad3e]
  407bd4:	dec    edi
  407bd5:	mov    dl,0xd7
  407bd7:	stos   DWORD PTR es:[edi],eax
  407bd8:	xchg   ebx,eax
  407bd9:	mov    cl,0xa5
  407bdb:	test   DWORD PTR [edi],esp
  407bdd:	fs mov edx,0x205f131c
  407be3:	add    DWORD PTR [edi-0x6a],edi
  407be6:	jmp    0x407bc5
  407be8:	ins    BYTE PTR es:[edi],dx
  407be9:	es loope 0x407b90
  407bec:	mov    WORD PTR [ebx],es
  407bee:	mov    al,ds:0x12ab5ba0
  407bf3:	xchg   DWORD PTR [ebx],edx
  407bf5:	pop    eax
  407bf6:	dec    esp
  407bf7:	xor    eax,0x3393e15b
  407bfc:	pop    esi
  407bfd:	outs   dx,DWORD PTR ds:[esi]
  407bfe:	sahf   
  407bff:	xchg   esi,eax
  407c00:	(bad)  
  407c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c02:	in     eax,0x40
  407c04:	retf   0x8ab5
  407c07:	pop    es
  407c08:	cmp    DWORD PTR [esi-0x4c],0xffffffc8
  407c0c:	jecxz  0x407bed
  407c0e:	in     al,0x66
  407c10:	gs test al,0x12
  407c13:	ds pop edx
  407c15:	fcom   DWORD PTR [ecx+ecx*1]
  407c18:	jbe    0x407c2f
  407c1a:	xchg   ebp,eax
  407c1b:	mov    al,ds:0x85f63ea3
  407c20:	stc    
  407c21:	push   esp
  407c22:	pop    ebp
  407c23:	imul   edi,ecx,0x64
  407c26:	leave  
  407c27:	ror    DWORD PTR ds:0x1d27c61b,1
  407c2d:	adc    edx,DWORD PTR [eax]
  407c2f:	mov    ah,0xb6
  407c31:	nop
  407c32:	cwde   
  407c33:	add    ch,bl
  407c35:	inc    esi
  407c36:	pop    ebp
  407c37:	push   ss
  407c38:	sub    edi,esi
  407c3a:	xor    al,0xc5
  407c3c:	test   DWORD PTR [esi+0x5],edi
  407c3f:	ins    DWORD PTR es:[edi],dx
  407c40:	push   edi
  407c41:	idiv   BYTE PTR [ecx+0x7643c769]
  407c47:	outs   dx,DWORD PTR ds:[esi]
  407c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c49:	sbb    al,BYTE PTR [eax]
  407c4b:	inc    BYTE PTR [ebp+0x2d78372a]
  407c51:	adc    DWORD PTR [edi],ebp
  407c53:	ss das 
  407c55:	mov    ss,WORD PTR [ecx+ecx*8+0x8]
  407c59:	add    DWORD PTR [ebx-0x1a],0xffffffcb
  407c5d:	or     bl,bl
  407c5f:	or     ecx,ebp
  407c61:	ficom  DWORD PTR [esi+0x26]
  407c64:	sub    al,BYTE PTR [ecx]
  407c66:	xor    dh,bh
  407c68:	ret    
  407c69:	fld    QWORD PTR [esi+ebp*1+0x59]
  407c6d:	xchg   edx,eax
  407c6e:	xchg   DWORD PTR [ebp-0x46],esi
  407c71:	pop    edi
  407c72:	push   ebp
  407c73:	sbb    DWORD PTR [edi*2-0x70cb1929],eax
  407c7a:	sbb    BYTE PTR [esp+ebx*4],ah
  407c7d:	or     al,0xe
  407c7f:	and    BYTE PTR [eax],dl
  407c81:	jae    0x407c91
  407c83:	ror    BYTE PTR [ebx],0x6e
  407c86:	push   ebp
  407c87:	mul    DWORD PTR [ebx+ebp*8+0x198f9026]
  407c8e:	or     al,0xb8
  407c90:	pop    edx
  407c91:	add    eax,0xb4b3137
  407c96:	push   ecx
  407c97:	out    0x6a,al
  407c99:	jmp    0x4f3c4874
  407c9e:	shr    BYTE PTR [esp+eiz*2-0x66],0xe
  407ca3:	inc    esi
  407ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ca5:	outs   dx,BYTE PTR ds:[esi]
  407ca6:	jge    0x407c78
  407ca8:	pop    ds
  407ca9:	daa    
  407caa:	in     eax,dx
  407cab:	mov    esi,0x66b97150
  407cb0:	pop    ebx
  407cb1:	pop    es
  407cb2:	jge    0x407c48
  407cb4:	out    dx,eax
  407cb5:	ror    bh,cl
  407cb7:	test   al,0x5
  407cb9:	mov    cl,0x6f
  407cbb:	pop    es
  407cbc:	sbb    DWORD PTR [esi*2-0x62764464],edx
  407cc3:	mov    bh,0xfb
  407cc5:	or     edi,edx
  407cc7:	xor    ah,dl
  407cc9:	mov    ch,0xca
  407ccb:	ret    
  407ccc:	xchg   DWORD PTR [edi],edi
  407cce:	sbb    eax,0xd818bc41
  407cd3:	push   ebp
  407cd4:	mov    DWORD PTR [esi-0x35e45f17],ecx
  407cda:	hlt    
  407cdb:	jmp    0x407cee
  407cdd:	and    DWORD PTR [edx],ebx
  407cdf:	jle    0x407cde
  407ce1:	stc    
  407ce2:	sbb    BYTE PTR [eax-0x61],dl
  407ce5:	mov    ebp,ds
  407ce7:	fistp  WORD PTR [edx+0x7a7ec9db]
  407ced:	(bad)  
  407cee:	pop    ds
  407cef:	in     al,0x71
  407cf1:	push   ss
  407cf2:	ret    0x435f
  407cf5:	aad    0x7e
  407cf7:	push   esp
  407cf8:	cmc    
  407cf9:	ss mov edx,0x204335ef
  407cff:	mov    dh,0x23
  407d01:	add    ebp,DWORD PTR [eax-0xb9fe3e2]
  407d07:	push   ecx
  407d08:	lock pop ds
  407d0a:	or     al,0xf4
  407d0c:	aad    0x8f
  407d0e:	in     eax,dx
  407d0f:	inc    ebx
  407d10:	xchg   ecx,eax
  407d11:	ds cmc 
  407d13:	icebp  
  407d14:	inc    ebx
  407d15:	push   ecx
  407d16:	cmp    cl,ah
  407d18:	rcl    DWORD PTR [edi],1
  407d1a:	jnp    0x407cfe
  407d1c:	mov    eax,ecx
  407d1e:	jecxz  0x407cff
  407d20:	hlt    
  407d21:	inc    esi
  407d22:	ror    DWORD PTR [edx-0x6a],0x5
  407d26:	jmp    0x407d42
  407d28:	gs dec ecx
  407d2a:	and    eax,0xe92b9f57
  407d2f:	lea    edx,[esp+eax*8]
  407d32:	lahf   
  407d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d34:	lods   eax,DWORD PTR ds:[esi]
  407d35:	xchg   esi,eax
  407d36:	or     DWORD PTR [ebx],eax
  407d38:	icebp  
  407d39:	cmp    eax,0xb6a8ca2f
  407d3e:	test   BYTE PTR [ecx+eax*1],al
  407d41:	popa   
  407d42:	mov    al,0xcb
  407d44:	pushf  
  407d45:	fwait
  407d46:	sub    BYTE PTR [edi],0xa9
  407d49:	cmp    dh,BYTE PTR ds:0xe13660fb
  407d4f:	jo     0x407d48
  407d51:	adc    ecx,esp
  407d53:	xor    DWORD PTR [edx+0x43],esi
  407d56:	and    DWORD PTR [ecx+0x16bf468b],esp
  407d5c:	in     al,0xce
  407d5e:	adc    DWORD PTR [esi],eax
  407d60:	sub    eax,0xf88b820c
  407d65:	pop    esi
  407d66:	mov    bl,0x16
  407d68:	cmp    cl,cl
  407d6a:	jmp    0x415db95d
  407d6f:	jbe    0x407d95
  407d71:	xchg   esp,eax
  407d72:	fist   DWORD PTR [ecx-0x57]
  407d75:	ret    
  407d76:	cmp    ah,dh
  407d78:	fsub   DWORD PTR [ebx*1-0x6cff894c]
  407d7f:	jb     0x407d83
  407d81:	xchg   ebp,eax
  407d82:	repnz outs dx,BYTE PTR ds:[esi]
  407d84:	jno    0x407d5d
  407d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d87:	test   al,0x34
  407d89:	sti    
  407d8a:	and    DWORD PTR [esp+esi*2],ecx
  407d8d:	in     eax,0x87
  407d8f:	(bad)  
  407d90:	imul   edi,edi,0x6
  407d93:	sub    ch,BYTE PTR [esi+0x11b16b2]
  407d99:	mov    ebp,0xe350bbf3
  407d9e:	bound  esi,QWORD PTR [ebp+0x36066e4e]
  407da4:	int3   
  407da5:	in     eax,dx
  407da6:	into   
  407da7:	push   0x1f946bbc
  407dac:	xchg   edi,eax
  407dad:	std    
  407dae:	or     al,0x2d
  407db0:	push   ds
  407db1:	sub    BYTE PTR [esi-0x34aa968c],dh
  407db7:	int    0x8e
  407db9:	or     ebp,DWORD PTR [edi+0x0]
  407dbc:	sti    
  407dbd:	pop    ds
  407dbe:	jno    0x407ddd
  407dc0:	and    al,0x63
  407dc2:	cmp    DWORD PTR [ebx],ebp
  407dc4:	outs   dx,DWORD PTR ds:[esi]
  407dc5:	inc    ebx
  407dc6:	out    dx,eax
  407dc7:	adc    al,0x7b
  407dc9:	jecxz  0x407da8
  407dcb:	aad    0x49
  407dcd:	inc    edi
  407dce:	and    al,0x35
  407dd0:	xlat   BYTE PTR ds:[ebx]
  407dd1:	in     al,0x2e
  407dd3:	jge    0x407dd4
  407dd5:	pop    ecx
  407dd6:	xor    eax,DWORD PTR [edi-0x5c]
  407dd9:	jbe    0x407d94
  407ddb:	push   edx
  407ddc:	jle    0x407e49
  407dde:	inc    esi
  407ddf:	sar    BYTE PTR [edi],0x75
  407de2:	jg     0x407e5f
  407de4:	ss inc eax
  407de6:	pop    edx
  407de7:	loopne 0x407d92
  407de9:	and    esi,DWORD PTR [ecx+0x3c7cbedc]
  407def:	sub    al,BYTE PTR [eax]
  407df1:	call   0xf5c9ed16
  407df6:	ins    BYTE PTR es:[edi],dx
  407df7:	and    DWORD PTR [eax+0x5a],ecx
  407dfa:	cwde   
  407dfb:	or     DWORD PTR [ebp+0x39],ecx
  407dfe:	xchg   ebp,eax
  407dff:	sar    DWORD PTR [edx-0x17],1
  407e02:	fadd   DWORD PTR [edx+0x143a1ccf]
  407e08:	test   al,0x75
  407e0a:	pop    esi
  407e0b:	xchg   DWORD PTR [eax],ecx
  407e0d:	leave  
  407e0e:	lahf   
  407e0f:	jmp    0xc90e1d1e
  407e14:	aaa    
  407e15:	and    eax,0xd2c9a61a
  407e1a:	push   edi
  407e1b:	mov    bl,0x62
  407e1d:	xchg   esi,eax
  407e1e:	sub    DWORD PTR [ecx],eax
  407e20:	loopne 0x407db0
  407e22:	ins    DWORD PTR es:[edi],dx
  407e23:	sbb    al,0x3a
  407e25:	outs   dx,BYTE PTR cs:[esi]
  407e27:	ja     0x407db2
  407e29:	sbb    eax,0x89994319
  407e2e:	xchg   edi,eax
  407e2f:	mov    dl,0x9d
  407e31:	outs   dx,BYTE PTR ds:[esi]
  407e32:	sbb    eax,0x9072ffd1
  407e37:	pop    esi
  407e38:	outs   dx,BYTE PTR ds:[esi]
  407e39:	icebp  
  407e3a:	fnstsw WORD PTR [ebp-0x1e125f3c]
  407e40:	sbb    BYTE PTR [ebx+esi*8],ah
  407e43:	xchg   esp,eax
  407e44:	jno    0x407e72
  407e46:	outs   dx,BYTE PTR ds:[esi]
  407e47:	sahf   
  407e48:	cld    
  407e49:	jbe    0x407e6f
  407e4b:	fist   DWORD PTR [edi]
  407e4d:	mov    ah,0xd4
  407e4f:	jo     0x407df4
  407e51:	adc    ebx,DWORD PTR [eax+0x1e38642a]
  407e57:	push   cs
  407e58:	sahf   
  407e59:	jge    0x407e16
  407e5b:	or     ah,BYTE PTR [eax]
  407e5d:	cmp    DWORD PTR [ecx],edx
  407e5f:	pop    es
  407e60:	sbb    ebx,ebp
  407e62:	xchg   ebx,eax
  407e63:	xor    cl,BYTE PTR [ebx-0xa]
  407e66:	sub    BYTE PTR [ebx+0x74236c75],ch
  407e6c:	cmp    ebx,DWORD PTR [edx-0x4a65b5f5]
  407e72:	jne    0x407eef
  407e74:	mov    ch,0x9c
  407e76:	mov    ecx,0x8a8e66c2
  407e7b:	pop    ds
  407e7c:	ss push edi
  407e7e:	push   eax
  407e7f:	add    al,0x44
  407e81:	js     0x407ec2
  407e83:	sbb    DWORD PTR [edi-0x6d335ff2],edi
  407e89:	mov    dh,0x24
  407e8b:	or     ah,BYTE PTR [esi-0x14]
  407e8e:	xchg   ebx,eax
  407e8f:	addr16 call 0xf88c:0xa1d9ac2c
  407e97:	in     eax,0x8a
  407e99:	cmp    dh,BYTE PTR [edx]
  407e9b:	lea    ecx,[edi+0x3a]
  407e9e:	imul   edx,ebx,0x6a
  407ea1:	sbb    DWORD PTR [ecx-0x3d],0x1783187
  407ea8:	mov    ds:0xe3c18b2d,al
  407ead:	mov    ebp,0x180b0253
  407eb2:	mov    dl,BYTE PTR [ebp-0x7d]
  407eb5:	xchg   ebp,eax
  407eb6:	stos   BYTE PTR es:[edi],al
  407eb7:	ss iret 
  407eb9:	in     al,0xeb
  407ebb:	das    
  407ebc:	push   ebx
  407ebd:	addr16 push cs
  407ebf:	setg   BYTE PTR fs:[edx-0x32]
  407ec4:	dec    esi
  407ec5:	repz leave 
  407ec7:	xchg   edi,eax
  407ec8:	iret   
  407ec9:	add    dl,ah
  407ecb:	ret    0x326d
  407ece:	js     0x407e68
  407ed0:	not    DWORD PTR [edi-0x6a1a2d4e]
  407ed6:	inc    ebx
  407ed7:	cmc    
  407ed8:	aas    
  407ed9:	mov    edx,0x103effa3
  407ede:	push   ss
  407edf:	sub    al,0x4e
  407ee1:	or     esi,DWORD PTR [esi]
  407ee3:	iret   
  407ee4:	adc    esp,esi
  407ee6:	push   edx
  407ee7:	fucomp st(4)
  407ee9:	dec    edx
  407eea:	loopne 0x407ece
  407eec:	adc    eax,0x46530efb
  407ef1:	fistp  WORD PTR [edi+0x8]
  407ef4:	push   eax
  407ef5:	pop    eax
  407ef6:	xor    DWORD PTR [edi-0x2a],0x9fbcca28
  407efd:	iret   
  407efe:	jnp    0x407f00
  407f00:	xor    DWORD PTR [ebx*1-0x1f36d65e],eax
  407f07:	add    dl,BYTE PTR [ecx-0x12]
  407f0a:	dec    ecx
  407f0b:	jae    0x407f4c
  407f0d:	aaa    
  407f0e:	mov    ds:0xdacf2f59,eax
  407f13:	inc    edi
  407f14:	sbb    eax,0xb541049
  407f19:	enter  0xa9a,0x69
  407f1d:	rcr    BYTE PTR [edx],1
  407f1f:	jecxz  0x407f26
  407f21:	lahf   
  407f22:	mov    gs,WORD PTR [esi]
  407f24:	mov    ds:0x9efd882,eax
  407f29:	xor    al,0x2f
  407f2b:	cmc    
  407f2c:	cmp    ch,ch
  407f2e:	xor    al,0xdd
  407f30:	jl     0x407f41
  407f32:	or     ebx,esi
  407f34:	int3   
  407f35:	aam    0xe
  407f37:	xor    al,0x5b
  407f39:	fwait
  407f3a:	out    dx,al
  407f3b:	pop    ecx
  407f3c:	repnz mov eax,0xdff5e633
  407f42:	cmp    DWORD PTR [eax],esp
  407f44:	mov    ah,BYTE PTR [esi-0x2131c799]
  407f4a:	ja     0x407edc
  407f4c:	int    0xb2
  407f4e:	mov    ?,WORD PTR [ebx-0x6a]
  407f51:	pop    esp
  407f52:	mov    eax,ds:0x8100edb5
  407f57:	pop    DWORD PTR [esp+eax*1-0x2f]
  407f5b:	fsub   QWORD PTR ds:0x18a25243
  407f61:	adc    eax,0x7167720c
  407f66:	iret   
  407f67:	ret    
  407f68:	in     al,dx
  407f69:	jns    0x407fe0
  407f6b:	test   al,0xd9
  407f6d:	fild   DWORD PTR [ebx+0x6d3b1c24]
  407f73:	push   ebp
  407f74:	in     al,dx
  407f75:	ret    
  407f76:	fldenv [edi+0x5e]
  407f79:	and    BYTE PTR [edi-0x49],dh
  407f7c:	lock mov ah,0x21
  407f7f:	js     0x407f93
  407f81:	adc    eax,0xdd91ea2b
  407f86:	pop    ebx
  407f87:	xor    BYTE PTR [eax-0x6c],bl
  407f8a:	jg     0x408007
  407f8c:	mov    dh,0x9e
  407f8e:	ins    DWORD PTR es:[edi],dx
  407f8f:	sub    ah,dl
  407f91:	leave  
  407f92:	jb     0x408011
  407f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f95:	dec    edi
  407f96:	cmp    eax,0x99493202
  407f9b:	rcl    DWORD PTR [ecx+ebp*8-0x691f685c],0xfa
  407fa3:	ins    DWORD PTR es:[edi],dx
  407fa4:	push   esi
  407fa5:	mov    ebx,eax
  407fa7:	lea    edi,[edx-0x45]
  407faa:	jns    0x407f9b
  407fac:	cld    
  407fad:	in     eax,0x1
  407faf:	xor    dh,BYTE PTR [esp+0x45]
  407fb3:	sbb    eax,0xc6f0efe8
  407fb8:	xchg   ebp,eax
  407fb9:	rcl    ch,cl
  407fbb:	leave  
  407fbc:	sbb    dl,BYTE PTR [eax+0x4e]
  407fbf:	sar    DWORD PTR [esi],1
  407fc1:	not    ebx
  407fc3:	cmp    ch,BYTE PTR [ecx+0x1e]
  407fc6:	push   eax
  407fc7:	inc    ebp
  407fc8:	fmul   QWORD PTR [ebp+0x6]
  407fcb:	or     al,0x2f
  407fcd:	xchg   esi,eax
  407fce:	jge    0x407fb5
  407fd0:	in     al,0xf7
  407fd2:	fidiv  WORD PTR [esi-0xcff0f56]
  407fd8:	sub    dh,BYTE PTR [ecx-0x27]
  407fdb:	pop    ecx
  407fdc:	inc    ebx
  407fdd:	loop   0x408050
  407fdf:	pop    esi
  407fe0:	int    0x7
  407fe2:	jno    0x407f9c
  407fe4:	(bad)  [ebp-0xb]
  407fe7:	add    eax,0x88d72753
  407fec:	or     eax,0xd2e5474d
  407ff1:	leave  
  407ff2:	xor    eax,0xcdd5ad76
  407ff7:	xor    al,0x7a
  407ff9:	jmp    0x407fcf
  407ffb:	xchg   edx,eax
  407ffc:	iret   
  407ffd:	xor    esi,DWORD PTR [edi+0x61ddde03]
  408003:	mov    ds:0x634df859,al
  408008:	sub    esi,DWORD PTR [ecx]
  40800a:	sub    eax,0x224c23fb
  40800f:	inc    edi
  408010:	and    ebx,edx
  408012:	sbb    al,0x1a
  408014:	jns    0x40804e
  408016:	out    dx,al
  408017:	lds    ecx,FWORD PTR [eax-0x1a01e2a8]
  40801d:	stos   BYTE PTR es:[edi],al
  40801e:	and    BYTE PTR [ebx-0x33b9885a],0x2f
  408025:	(bad)
  408029:	stos   DWORD PTR es:[edi],eax
  40802a:	or     dh,0x9d
  40802d:	sub    bl,dl
  40802f:	push   edx
  408030:	icebp  
  408031:	mov    ch,0xf8
  408033:	sti    
  408034:	aas    
  408035:	hlt    
  408036:	bound  eax,QWORD PTR [ecx+0x11]
  408039:	cmp    BYTE PTR [esi+ecx*1+0x15],dl
  40803d:	retf   0x74bf
  408040:	or     dl,BYTE PTR [edi]
  408042:	fs aas 
  408044:	jo     0x408064
  408046:	retf   0x4e35
  408049:	mov    al,BYTE PTR [eax+esi*1]
  40804c:	aam    0x35
  40804e:	push   eax
  40804f:	sti    
  408050:	hlt    
  408051:	call   0x876b:0x6c5d9fb6
  408058:	sbb    ecx,DWORD PTR [ecx]
  40805a:	outs   dx,BYTE PTR ds:[esi]
  40805b:	inc    esi
  40805c:	and    ecx,DWORD PTR [edx-0x5d]
  40805f:	push   edx
  408060:	mov    dl,0x4
  408062:	cmp    BYTE PTR [ecx+edi*1+0x5cbfe659],bl
  408069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40806a:	mov    DWORD PTR [eax+0x4e],esi
  40806d:	lds    ecx,FWORD PTR [eax]
  40806f:	in     eax,dx
  408070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408071:	ficom  WORD PTR [edi]
  408073:	sbb    esp,DWORD PTR [eax+0x6f2d4595]
  408079:	imul   ebp,ecx,0xffffffc5
  40807c:	xor    eax,0x8be37563
  408081:	lds    ebp,FWORD PTR [esi-0x75863aa6]
  408087:	jo     0x408048
  408089:	popa   
  40808a:	test   edx,edi
  40808c:	(bad)  
  40808d:	mov    ds,WORD PTR [esi-0x295ae91a]
  408093:	repnz ins DWORD PTR es:[edi],dx
  408095:	jecxz  0x40808a
  408097:	xor    dh,bh
  408099:	push   0x378fa335
  40809e:	int3   
  40809f:	test   DWORD PTR [eax-0x313a8b24],ebx
  4080a5:	xchg   ecx,eax
  4080a6:	and    eax,0x850669e5
  4080ab:	xor    ah,BYTE PTR [eax*2+0x7c7268ed]
  4080b2:	addr16 inc ebp
  4080b4:	ins    DWORD PTR es:[edi],dx
  4080b5:	cmp    DWORD PTR [ecx+0x5f],edi
  4080b8:	and    DWORD PTR [ecx],edx
  4080ba:	push   ecx
  4080bb:	and    BYTE PTR [eax-0x7b],bh
  4080be:	xchg   ebx,eax
  4080bf:	repz shl BYTE PTR [eax],cl
  4080c2:	das    
  4080c3:	adc    eax,0x554ceeeb
  4080c8:	dec    ebp
  4080c9:	(bad)  
  4080ca:	scas   al,BYTE PTR es:[edi]
  4080cb:	ins    BYTE PTR es:[edi],dx
  4080cc:	or     eax,ecx
  4080ce:	cmc    
  4080cf:	cld    
  4080d0:	popf   
  4080d1:	div    bh
  4080d3:	mov    dl,0xec
  4080d5:	mov    es,WORD PTR [eax-0x79430cdc]
  4080db:	add    bh,cl
  4080dd:	dec    ebx
  4080de:	xchg   ebp,eax
  4080df:	mov    cl,0xe5
  4080e1:	add    dl,dh
  4080e3:	adc    esi,eax
  4080e5:	gs fwait
  4080e7:	idiv   ebp
  4080e9:	imul   ebp,esi,0x45b26e65
  4080ef:	adc    eax,0xbeab46bf
  4080f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f5:	rcl    BYTE PTR [eax+ebx*4],0x5e
  4080f9:	fwait
  4080fa:	jnp    0x4080a4
  4080fc:	mov    ebx,0x60b7caf6
  408101:	sbb    eax,0x8ef8ae37
  408106:	in     eax,0xe2
  408108:	add    al,0x3d
  40810a:	jne    0x408170
  40810c:	pop    ds
  40810d:	sbb    al,0xb7
  40810f:	mov    dh,ch
  408111:	es mov edi,0x6e2650fd
  408117:	pushf  
  408118:	xchg   BYTE PTR [edi+0x1],ah
  40811b:	push   ecx
  40811c:	add    dh,BYTE PTR [eax-0x496ece71]
  408122:	pop    ebp
  408123:	pop    edx
  408124:	das    
  408125:	fist   DWORD PTR [ebx+0x33e328e1]
  40812b:	fwait
  40812c:	xchg   ebp,eax
  40812d:	dec    ecx
  40812e:	popf   
  40812f:	aas    
  408130:	dec    edx
  408131:	jle    0x408116
  408133:	push   ebx
  408134:	xchg   ecx,eax
  408135:	out    0x3f,eax
  408137:	sbb    BYTE PTR [ebx],bl
  408139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40813a:	dec    esp
  40813b:	test   DWORD PTR [ebx],esi
  40813d:	push   ss
  40813e:	xchg   ecx,eax
  40813f:	xor    cl,dl
  408141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408142:	aaa    
  408143:	ja     0x4080da
  408145:	jle    0x408152
  408147:	loop   0x4081ab
  408149:	mov    cl,0xb6
  40814b:	jp     0x4081b5
  40814d:	cmp    dl,bl
  40814f:	jl     0x4080ee
  408151:	shr    DWORD PTR [eax+0x58],1
  408154:	jno    0x4081c5
  408156:	in     eax,0xb3
  408158:	mov    ds:0x7c8e8803,al
  40815d:	imul   edx,DWORD PTR [eax],0x28
  408160:	test   al,0xa0
  408162:	ret    0xba5c
  408165:	mov    dl,0xb5
  408167:	mov    bh,0xcb
  408169:	mov    edx,0x21882337
  40816e:	push   ss
  40816f:	out    dx,al
  408170:	push   ss
  408171:	scas   al,BYTE PTR es:[edi]
  408172:	fimul  DWORD PTR [edx+0x78]
  408175:	push   0xffffffba
  408177:	inc    ebp
  408178:	xor    BYTE PTR [ebx-0x3a2a246d],cl
  40817e:	cli    
  40817f:	cmp    eax,0x5a3b4515
  408184:	mov    ch,0x45
  408186:	jl     0x4081df
  408188:	stos   DWORD PTR es:[edi],eax
  408189:	push   ecx
  40818a:	sbb    eax,0xec4dd326
  40818f:	stc    
  408190:	loop   0x408129
  408192:	cmp    al,0x2b
  408194:	retf   0x3b14
  408197:	pop    esi
  408198:	xchg   ebx,eax
  408199:	idiv   ebp
  40819b:	or     al,bl
  40819d:	mov    ds:0xf369a840,al
  4081a2:	cmp    DWORD PTR [edx+0x65],esi
  4081a5:	(bad)  
  4081a6:	ror    BYTE PTR [edi],0x4e
  4081a9:	jmp    0xd8f14eed
  4081ae:	lea    ebx,[eax]
  4081b0:	xor    cl,cl
  4081b2:	pop    ebp
  4081b3:	cli    
  4081b4:	sbb    eax,0x8e949a86
  4081b9:	adc    bl,BYTE PTR [edi-0x69]
  4081bc:	mov    dh,BYTE PTR [edx]
  4081be:	stos   BYTE PTR es:[edi],al
  4081bf:	xchg   esp,eax
  4081c0:	loope  0x408163
  4081c2:	in     eax,dx
  4081c3:	repnz cmp edi,ecx
  4081c6:	pop    ds
  4081c7:	xor    eax,0x7626eb75
  4081cc:	data16 ja 0x4081b4
  4081cf:	mov    ebx,0x69d205f9
  4081d4:	jmp    0x1eb58ac0
  4081d9:	mov    al,ds:0x9cafb91b
  4081de:	pop    ss
  4081df:	enter  0x116d,0x40
  4081e3:	out    0x3d,al
  4081e5:	sub    eax,0x851d5b0a
  4081ea:	mov    al,ds:0x463265e2
  4081ef:	push   edx
  4081f0:	jg     0x40823b
  4081f2:	sbb    DWORD PTR [ebx+eiz*2],esp
  4081f5:	aas    
  4081f6:	shl    DWORD PTR [esi+edx*4-0x4e],0x24
  4081fb:	or     DWORD PTR [ebx],ecx
  4081fd:	ret    0xc834
  408200:	ror    BYTE PTR [esi+0x49],0x41
  408204:	cdq    
  408205:	xor    bl,bh
  408207:	neg    DWORD PTR [ebp-0x37cc9609]
  40820d:	push   cs
  40820e:	lea    esi,[ebx-0x8]
  408211:	loopne 0x408219
  408213:	lahf   
  408214:	add    dh,bh
  408216:	int3   
  408217:	popa   
  408218:	ins    BYTE PTR es:[edi],dx
  408219:	jmp    0x4b05:0x99cc31bf
  408220:	xchg   esi,eax
  408221:	in     eax,dx
  408222:	cmc    
  408223:	enter  0x5434,0x67
  408227:	pop    edi
  408228:	cmp    eax,0x7849671c
  40822d:	loopne 0x4081e2
  40822f:	(bad)  
  408230:	pop    ebx
  408232:	or     DWORD PTR [esi-0x46e96226],ebx
  408238:	jbe    0x4081ce
  40823a:	out    dx,eax
  40823b:	add    esp,DWORD PTR [edi+0x341052ea]
  408241:	sub    BYTE PTR [ecx+0x45],dl
  408244:	cs push cs
  408246:	jne    0x40828f
  408248:	pusha  
  408249:	aas    
  40824a:	inc    edi
  40824b:	outs   dx,DWORD PTR ds:[esi]
  40824c:	paddusw mm3,QWORD PTR [ebp+0x7f]
  408250:	xchg   edx,eax
  408251:	aaa    
  408252:	in     eax,dx
  408253:	daa    
  408254:	mov    bh,0x10
  408256:	xchg   ebp,eax
  408257:	stos   BYTE PTR es:[edi],al
  408258:	adc    DWORD PTR [ecx-0x13],0xd1257a15
  40825f:	push   eax
  408260:	es inc ebx
  408262:	pop    edx
  408263:	jnp    0x408204
  408265:	addr16 stc 
  408267:	push   edx
  408268:	in     eax,0xa2
  40826a:	jbe    0x408276
  40826c:	std    
  40826d:	in     al,dx
  40826e:	sahf   
  40826f:	inc    esi
  408270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408271:	adc    BYTE PTR [edi+0x54358217],0xe7
  408278:	in     eax,0xfd
  40827a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40827b:	jp     0x4082c0
  40827d:	jge    0x408205
  40827f:	sbb    DWORD PTR [eax-0x21],ebx
  408282:	dec    esi
  408283:	sbb    al,0xdf
  408285:	cmp    eax,0xfb392f08
  40828a:	xlat   BYTE PTR ds:[ebx]
  40828b:	mov    ch,0x74
  40828d:	sub    eax,0x8066ccf2
  408292:	pop    ecx
  408293:	das    
  408294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408295:	stos   DWORD PTR es:[edi],eax
  408296:	sbb    eax,DWORD PTR [ecx-0x74f81e0c]
  40829c:	in     al,dx
  40829d:	and    ecx,DWORD PTR [eax+0x4852876b]
  4082a3:	fimul  DWORD PTR ss:[esi+0x4f94ee86]
  4082aa:	mov    dh,0xf6
  4082ac:	mov    BYTE PTR [edx-0x26],0xf
  4082b0:	ss dec ecx
  4082b2:	pop    ds
  4082b3:	or     BYTE PTR [eax],ch
  4082b5:	das    
  4082b6:	mov    esp,?
  4082b8:	inc    ebp
  4082b9:	push   ss
  4082ba:	inc    ecx
  4082bb:	pusha  
  4082bc:	or     DWORD PTR [ecx],ebx
  4082be:	gs sub eax,0xf47b9d0b
  4082c4:	pusha  
  4082c5:	ins    BYTE PTR es:[edi],dx
  4082c6:	fs mov ecx,0x445929ff
  4082cc:	sahf   
  4082cd:	icebp  
  4082ce:	icebp  
  4082cf:	jo     0x408251
  4082d1:	sub    eax,0xb5f845a8
  4082d6:	and    eax,0x6b9339bd
  4082db:	adc    eax,0x9382dd01
  4082e0:	retf   
  4082e1:	pop    esi
  4082e2:	rcr    DWORD PTR [esi-0x28],0x37
  4082e6:	test   eax,0x73732df4
  4082eb:	mov    eax,ds:0xf3268841
  4082f0:	daa    
  4082f1:	mov    eax,ds:0xa3ef41d3
  4082f6:	adc    eax,DWORD PTR [ebx-0x80]
  4082f9:	and    al,0xe2
  4082fb:	pop    edi
  4082fc:	jmp    0x408282
  4082fe:	dec    edi
  4082ff:	jbe    0x408319
  408301:	dec    eax
  408302:	bound  ebp,QWORD PTR [ecx+0xac74702]
  408308:	dec    esi
  408309:	test   BYTE PTR [eax+0x4],cl
  40830c:	in     al,0xbf
  40830e:	xchg   DWORD PTR [edi-0x12],ebx
  408311:	and    al,0x11
  408313:	push   eax
  408314:	std    
  408315:	ja     0x408385
  408317:	pop    es
  408318:	sbb    BYTE PTR [ecx+0x1d],ch
  40831b:	repnz cmovle ebx,esp
  40831f:	xor    DWORD PTR [eax+eiz*1-0x4],edx
  408323:	aaa    
  408324:	sahf   
  408325:	int    0x8c
  408327:	retf   0x7780
  40832a:	mov    al,0xa2
  40832c:	popa   
  40832d:	cmc    
  40832e:	in     al,dx
  40832f:	jo     0x4082be
  408331:	aas    
  408332:	ins    DWORD PTR es:[edi],dx
  408333:	iret   
  408334:	add    al,0xfe
  408336:	pop    ecx
  408337:	ins    DWORD PTR es:[edi],dx
  408338:	add    dh,dl
  40833a:	sti    
  40833b:	jmp    0xbc4f:0x7c2891f2
  408342:	mov    gs,WORD PTR [eax]
  408344:	test   DWORD PTR [ebp-0x2a52a9de],edx
  40834a:	or     esp,edi
  40834c:	push   edx
  40834d:	sbb    BYTE PTR [edx],ah
  40834f:	fld    QWORD PTR [ecx]
  408351:	ret    0x294d
  408354:	rol    ebp,cl
  408356:	sbb    BYTE PTR [ecx+0x73],0xf9
  40835a:	push   0xe12ac600
  40835f:	and    eax,0x82c094f9
  408364:	ror    DWORD PTR ds:0xc3dd3d6c,cl
  40836a:	fcom   DWORD PTR [eax-0x1c]
  40836d:	xadd   BYTE PTR [ecx],dh
  408370:	rcr    dl,cl
  408372:	jmp    0x2e2a:0x9b28bc85
  408379:	sbb    eax,0xde996f85
  40837e:	mov    edx,0x7831bdd0
  408383:	mov    edx,0xb211a189
  408388:	cmp    BYTE PTR [edx-0x2a],bh
  40838b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40838c:	inc    ebx
  40838d:	test   eax,0xefd0bf6e
  408392:	(bad)  
  408393:	shl    BYTE PTR [edi],0xc5
  408396:	fsub   DWORD PTR [ebx+0x6e2cedd3]
  40839c:	jg     0x408407
  40839e:	cwde   
  40839f:	test   eax,0x2ee1d3e3
  4083a4:	fs and al,0x5e
  4083a7:	test   ebx,eax
  4083a9:	sbb    BYTE PTR [edx+0xf],cl
  4083ac:	cld    
  4083ad:	add    DWORD PTR [edi+0x12],esp
  4083b0:	xor    eax,DWORD PTR [esi-0x4b]
  4083b3:	scas   al,BYTE PTR es:[edi]
  4083b4:	jle    0x40842a
  4083b6:	out    0xe6,eax
  4083b8:	in     eax,0x8d
  4083ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083bb:	ja     0x40835e
  4083bd:	pop    esi
  4083be:	arpl   WORD PTR [edi+0x0],cx
  4083c1:	cmc    
  4083c2:	dec    edi
  4083c3:	mov    ecx,0xa1946f66
  4083c8:	add    al,0x26
  4083ca:	lds    edx,FWORD PTR [esi-0x4]
  4083cd:	shr    esp,1
  4083cf:	jae    0x4083a6
  4083d1:	or     eax,edx
  4083d3:	sbb    eax,0xc1698c04
  4083d8:	cmc    
  4083d9:	mov    edi,0x246f3029
  4083de:	in     eax,dx
  4083df:	sbb    al,0x5
  4083e1:	xor    dl,BYTE PTR [ebp-0x1181b86]
  4083e7:	mov    bh,0x52
  4083e9:	sub    ebp,DWORD PTR [edi-0x5b5b600]
  4083ef:	push   eax
  4083f0:	adc    DWORD PTR [eax+0x3a],ecx
  4083f3:	jo     0x40841c
  4083f5:	and    DWORD PTR [ebx-0x5f],eax
  4083f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083f9:	rcl    BYTE PTR [edx+0x4178e0d6],cl
  4083ff:	sbb    BYTE PTR [edx-0x1ba6ee80],ah
  408405:	jns    0x408428
  408407:	pop    ecx
  408408:	(bad)  
  408409:	mov    al,0x0
  40840b:	jns    0x408449
  40840d:	adc    edi,DWORD PTR [esi-0x345602f0]
  408413:	push   ecx
  408414:	repnz dec esi
  408416:	push   ebp
  408417:	test   al,0xce
  408419:	or     eax,0xffffffa0
  40841c:	push   esp
  40841d:	or     al,0x45
  40841f:	stos   DWORD PTR es:[edi],eax
  408420:	pushaw 
  408422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408423:	aad    0x3a
  408425:	in     eax,dx
  408426:	fcom   DWORD PTR [ecx-0x3b]
  408429:	xlat   BYTE PTR ds:[ebx]
  40842a:	int    0x1b
  40842c:	pop    eax
  40842d:	pop    ebp
  40842e:	cld    
  40842f:	xor    BYTE PTR [edi+edi*8-0x21957b62],ch
  408436:	out    0xda,eax
  408438:	sti    
  408439:	mov    ds:0x453f9d1,al
  40843e:	or     dl,BYTE PTR [edi-0x6f362a70]
  408444:	sbb    ebp,DWORD PTR [eax+0x9f9fc2a]
  40844a:	test   DWORD PTR [ebp-0xa7fd748],esi
  408450:	push   esi
  408451:	sub    al,0xd5
  408453:	jno    0x408409
  408455:	mov    ecx,0xe35d61bd
  40845a:	in     eax,dx
  40845b:	test   eax,0xa1eb4041
  408460:	add    bh,al
  408462:	add    ebx,esi
  408464:	int3   
  408465:	xor    al,0x8
  408467:	sbb    bh,bh
  408469:	mov    dl,0xbc
  40846b:	ss push ds
  40846d:	dec    esp
  40846e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846f:	dec    ebx
  408470:	into   
  408471:	xchg   edx,eax
  408472:	xchg   edi,eax
  408473:	int    0x4f
  408475:	sti    
  408476:	arpl   sp,dx
  408478:	stos   BYTE PTR es:[edi],al
  408479:	cmp    ebx,DWORD PTR [eax+ebx*2]
  40847c:	and    BYTE PTR [esi],dl
  40847e:	cmp    al,0x61
  408480:	pop    edx
  408481:	les    ebp,FWORD PTR [ebx+0x61e37d88]
  408487:	dec    esp
  408488:	retf   0x42d7
  40848b:	mov    ch,0x5
  40848d:	out    0x75,eax
  40848f:	mul    DWORD PTR [edi]
  408491:	inc    ecx
  408492:	jmp    0x40b9:0x126bb4e4
  408499:	jl     0x4084a5
  40849b:	xor    DWORD PTR [eax-0x5d741125],edx
  4084a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a2:	sbb    ebp,eax
  4084a4:	int    0x18
  4084a6:	lds    edx,FWORD PTR ds:0x1cf29c5e
  4084ac:	sub    dh,BYTE PTR [eax-0x4f6d80a3]
  4084b2:	xor    eax,0x533a64ac
  4084b7:	js     0x4084a5
  4084b9:	push   0x20
  4084bb:	fiadd  WORD PTR [edi-0x19]
  4084be:	mov    ds:0x51c98039,al
  4084c3:	les    ebp,FWORD PTR ds:0x2f1d1d86
  4084c9:	arpl   WORD PTR [ebx],si
  4084cb:	inc    ecx
  4084cc:	mov    ecx,0x3d10c758
  4084d1:	das    
  4084d2:	aaa    
  4084d3:	mov    al,0xa2
  4084d5:	daa    
  4084d6:	adc    al,0xb6
  4084d8:	pop    esi
  4084d9:	push   eax
  4084da:	scas   eax,DWORD PTR es:[edi]
  4084db:	cs dec edi
  4084dd:	sbb    ecx,DWORD PTR [edi]
  4084df:	js     0x408470
  4084e1:	cmc    
  4084e2:	xor    eax,0x7a2dfb44
  4084e7:	int    0x39
  4084e9:	jae    0x40855a
  4084eb:	loopne 0x408527
  4084ed:	adc    bh,BYTE PTR [ecx]
  4084ef:	loop   0x408478
  4084f1:	pop    edi
  4084f2:	cld    
  4084f3:	ds stos BYTE PTR es:[edi],al
  4084f5:	mov    bh,0x8b
  4084f7:	dec    ebp
  4084f8:	in     eax,0x2a
  4084fa:	in     al,0xe4
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a65b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a65f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a663
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a66b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a633
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [edx-0x39],ch
  4089f9:	addr16 push ds
  4089fb:	(bad)  
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx-0x2c21c287],0x1a
  408a08:	add    bl,BYTE PTR ds:0x596bce7a
  408a0e:	fstp   st(6)
  408a10:	and    DWORD PTR [ebp-0x587ec100],esp
  408a16:	div    eax
  408a18:	(bad)  
  408a19:	addr16 push ebp
  408a1b:	and    esi,0xf5dde97a
  408a21:	dec    esp
  408a22:	popf   
  408a23:	popa   
  408a24:	lock out dx,eax
  408a26:	sbb    al,0x5f
  408a28:	push   0x57
  408a2a:	fs push es
  408a2c:	fsub   DWORD PTR [edi+esi*2+0x53597d62]
  408a33:	jb     0x4089d3
  408a35:	popa   
  408a36:	mov    ds:0x25f934ef,eax
  408a3b:	mov    cl,0x57
  408a3d:	into   
  408a3e:	dec    eax
  408a3f:	into   
  408a40:	sbb    DWORD PTR [edx+ebx*8+0x7510f8ff],0xffffffa4
  408a48:	call   0xe626:0x15ae82e6
  408a4f:	test   al,0x98
  408a51:	stc    
  408a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a53:	mov    bl,0x2
  408a55:	imul   edx,DWORD PTR [esi],0x7c
  408a58:	cwde   
  408a59:	sbb    eax,0xdef9bce9
  408a5e:	sbb    BYTE PTR es:[edi-0x417e2906],bh
  408a65:	fild   QWORD PTR [ecx+0x6a98bad9]
  408a6b:	je     0x408a7a
  408a6d:	sbb    esi,DWORD PTR [ebx-0x63]
  408a70:	xor    esi,edx
  408a72:	jl     0x408aac
  408a74:	sahf   
  408a75:	popa   
  408a76:	cld    
  408a77:	inc    eax
  408a78:	mov    bh,BYTE PTR [esi-0x41]
  408a7b:	(bad)  
  408a7c:	call   0x5d0c7f51
  408a81:	loop   0x408a44
  408a83:	sub    bh,BYTE PTR [ebp+0x30c42b5d]
  408a89:	mov    ah,0xce
  408a8b:	test   ecx,ebp
  408a8d:	mov    al,ds:0x36484686
  408a92:	pop    esp
  408a93:	add    edi,eax
  408a95:	xor    DWORD PTR [esi+0x1bea7ac7],ebx
  408a9b:	mov    ecx,0xe93ba320
  408aa0:	fist   WORD PTR [eax+0x52]
  408aa3:	arpl   WORD PTR [esp+esi*1+0x20],dx
  408aa7:	xchg   edx,eax
  408aa8:	jp     0x408b0c
  408aaa:	scas   eax,DWORD PTR es:[edi]
  408aab:	mov    ds:0xd5142782,eax
  408ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab1:	lods   al,BYTE PTR ds:[esi]
  408ab2:	fsubr  DWORD PTR [ebx+0x73]
  408ab5:	dec    ecx
  408ab6:	daa    
  408ab7:	ja     0x408ad6
  408ab9:	sub    BYTE PTR ds:0xe15ce742,ch
  408abf:	test   al,0x37
  408ac1:	pop    eax
  408ac2:	pop    esi
  408ac3:	jge    0x408a70
  408ac5:	jge    0x408b37
  408ac7:	(bad)  
  408ac8:	adc    al,0x87
  408aca:	mov    eax,0xcb342a9e
  408acf:	test   eax,0x25d27c9f
  408ad4:	inc    ecx
  408ad5:	sti    
  408ad6:	xchg   edx,esp
  408ad8:	mov    bl,BYTE PTR [esi]
  408ada:	fisttp WORD PTR [edi-0x1b4ba7b7]
  408ae0:	push   esi
  408ae1:	arpl   WORD PTR cs:[ebp-0x4],dx
  408ae5:	inc    eax
  408ae6:	pop    ss
  408ae7:	lds    edx,FWORD PTR [esi-0x4714dd4d]
  408aed:	jae    0x408b35
  408aef:	mov    dl,0xa6
  408af1:	stos   BYTE PTR es:[edi],al
  408af2:	push   esi
  408af3:	(bad)  
  408af4:	rcr    DWORD PTR [ecx+0x79660bed],1
  408afa:	cli    
  408afb:	loope  0x408ab9
  408afd:	cmp    al,BYTE PTR [edi+0x7a433446]
  408b03:	mov    dh,0x8b
  408b05:	fs jnp 0x408b12
  408b08:	xchg   DWORD PTR [esi+edx*4+0x29b9a746],esp
  408b0f:	xchg   edx,eax
  408b10:	xlat   BYTE PTR ds:[ebx]
  408b11:	retf   0x590a
  408b14:	sub    DWORD PTR [ebp+0xd],esi
  408b17:	arpl   WORD PTR [ecx+0x25],cx
  408b1a:	sub    eax,DWORD PTR [edi]
  408b1c:	enter  0x8d62,0xc8
  408b20:	mov    esi,0xb1d475bf
  408b25:	xchg   esp,ebx
  408b27:	(bad)  
  408b28:	jge    0x408ba7
  408b2a:	push   ecx
  408b2b:	jae    0x408af5
  408b2d:	sti    
  408b2e:	mov    esp,0x8bb2142
  408b33:	mov    ds:0xc07e1864,eax
  408b38:	sub    eax,0xf864e3b3
  408b3d:	repnz pop ds
  408b3f:	dec    esp
  408b40:	rcl    DWORD PTR [si-0x5b],cl
  408b44:	cli    
  408b45:	cmp    DWORD PTR [edi],ecx
  408b47:	jmp    0x408aed
  408b49:	push   edi
  408b4a:	aad    0xf7
  408b4c:	jle    0x408bb5
  408b4e:	cmp    ebx,DWORD PTR [eax-0x5c]
  408b51:	daa    
  408b52:	test   BYTE PTR [ecx-0x59d985b9],cl
  408b58:	jne    0x408b41
  408b5a:	sar    DWORD PTR [ebx-0x3a],1
  408b5d:	loopne 0x408bd8
  408b5f:	jae    0x408b0a
  408b61:	fmul   DWORD PTR [eax-0x6693b091]
  408b67:	gs pusha 
  408b69:	or     bh,BYTE PTR [edx-0x518599ab]
  408b6f:	int    0x9c
  408b71:	mov    ebx,0xd78c9a22
  408b76:	or     al,0xd4
  408b78:	jnp    0x408b51
  408b7a:	pop    eax
  408b7b:	fwait
  408b7c:	dec    ebx
  408b7d:	sub    bl,BYTE PTR [eax]
  408b7f:	stos   DWORD PTR es:[edi],eax
  408b80:	lds    edx,FWORD PTR [eax]
  408b82:	mov    cl,0x83
  408b84:	mov    al,ds:0x31841089
  408b89:	imul   esi,DWORD PTR [ebp+ebp*8+0x2f],0x1c
  408b8e:	adc    bh,al
  408b90:	arpl   cx,di
  408b92:	sub    al,0xe7
  408b94:	fwait
  408b95:	mov    ?,WORD PTR [edi+0x6b]
  408b98:	inc    esi
  408b99:	push   esi
  408b9a:	stos   BYTE PTR es:[edi],al
  408b9b:	mov    ecx,0x84c7c8ac
  408ba0:	jbe    0x408b56
  408ba2:	pop    eax
  408ba3:	push   ds
  408ba4:	std    
  408ba5:	int3   
  408ba6:	sub    bh,ch
  408ba8:	jge    0x408b6f
  408baa:	popf   
  408bab:	inc    ecx
  408bac:	push   edx
  408bad:	fs inc eax
  408baf:	daa    
  408bb0:	repz pop ecx
  408bb2:	call   0x196a2c00
  408bb7:	loopne 0x408b8b
  408bb9:	dec    ebp
  408bba:	push   eax
  408bbb:	pop    esp
  408bbc:	cmp    edi,DWORD PTR [esi+0x6f07e0c0]
  408bc2:	mov    edi,0x746ade3d
  408bc7:	sahf   
  408bc8:	sti    
  408bc9:	ins    DWORD PTR es:[edi],dx
  408bca:	ret    0x6065
  408bcd:	cld    
  408bce:	add    edx,0xfeba4a8e
  408bd4:	push   ebp
  408bd5:	iret   
  408bd6:	dec    ecx
  408bd7:	jle    0x408b89
  408bd9:	push   edx
  408bda:	sbb    esp,DWORD PTR [esi+edx*1]
  408bdd:	outs   dx,DWORD PTR ds:[esi]
  408bde:	mov    BYTE PTR [ebx-0x66],0x5a
  408be2:	les    edx,FWORD PTR [esi]
  408be4:	fcmovnbe st,st(1)
  408be6:	mov    bl,BYTE PTR [esi]
  408be8:	cld    
  408be9:	xchg   edx,eax
  408bea:	sbb    BYTE PTR [eax-0x77],0xfc
  408bee:	push   ecx
  408bef:	sbb    DWORD PTR [edi+eiz*2+0x113695ee],esp
  408bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf7:	push   cs
  408bf8:	je     0x408c56
  408bfa:	daa    
  408bfb:	test   BYTE PTR [esi],cl
  408bfd:	js     0x408c3a
  408bff:	mov    WORD PTR [edx],cs
  408c01:	jle    0x408c19
  408c03:	cmp    al,0xd7
  408c05:	jmp    0xb0b58181
  408c0a:	sub    bl,BYTE PTR [edx+0x35]
  408c0d:	(bad)  
  408c0f:	ret    
  408c10:	xchg   ebp,eax
  408c11:	pavgb  mm5,QWORD PTR [ebx+0x40c0b03a]
  408c18:	lods   al,BYTE PTR ds:[esi]
  408c19:	mov    BYTE PTR [edx+0x6d],dl
  408c1c:	jmp    0x408ba9
  408c1e:	imul   ebx,DWORD PTR [ebx-0x3f626f98],0xffffff93
  408c25:	inc    edi
  408c26:	sbb    al,0x56
  408c28:	cdq    
  408c29:	in     al,dx
  408c2a:	fnstenv [ecx-0x20b930f3]
  408c30:	mov    ds:0xa4982d27,al
  408c35:	leave  
  408c36:	bound  edx,QWORD PTR [esi]
  408c38:	or     ecx,0xf52b9ed4
  408c3e:	dec    esp
  408c3f:	gs cmc 
  408c41:	dec    esi
  408c42:	gs icebp 
  408c44:	ret    0xd80f
  408c47:	ins    BYTE PTR es:[edi],dx
  408c48:	outs   dx,DWORD PTR ds:[esi]
  408c49:	sbb    al,0x33
  408c4b:	mov    ebp,0x44d69f6e
  408c50:	pushf  
  408c51:	or     BYTE PTR [ebp+0x3d],ch
  408c54:	sbb    eax,DWORD PTR [esi-0x597cc309]
  408c5a:	inc    esp
  408c5b:	sub    BYTE PTR [eax+0x32],dl
  408c5e:	mov    edx,0xdf929bcf
  408c63:	mov    ds:0x9a14a21f,eax
  408c68:	nop
  408c69:	or     DWORD PTR [edi-0x77],esi
  408c6c:	sbb    bh,BYTE PTR [ebp+0x16]
  408c6f:	das    
  408c70:	mov    esp,0xc30fa465
  408c75:	fidivr DWORD PTR [esi]
  408c77:	cli    
  408c78:	xor    al,BYTE PTR [ebx-0x2c]
  408c7b:	pop    ebx
  408c7c:	lods   al,BYTE PTR ds:[esi]
  408c7d:	jb     0x408c30
  408c7f:	leave  
  408c80:	in     al,dx
  408c81:	lds    eax,FWORD PTR [esi+0x3f]
  408c84:	pop    eax
  408c85:	scas   eax,DWORD PTR es:[edi]
  408c86:	es jns 0x408cc1
  408c89:	push   edx
  408c8a:	sub    ebp,DWORD PTR [ecx+0x3b97f430]
  408c90:	push   eax
  408c91:	bound  edi,QWORD PTR [ecx+0x24e59ae5]
  408c97:	ds push eax
  408c99:	inc    esp
  408c9a:	xchg   DWORD PTR ds:0x4ddf3c5b,edi
  408ca0:	jo     0x408cb1
  408ca2:	and    al,0xb6
  408ca4:	pop    esp
  408ca5:	(bad)  
  408ca6:	js     0x408cec
  408ca8:	or     ebp,DWORD PTR [edi+0x6]
  408cab:	pushf  
  408cac:	int3   
  408cad:	stos   DWORD PTR es:[edi],eax
  408cae:	mov    edi,0x60fa4ce0
  408cb3:	je     0x408d19
  408cb5:	xchg   ebx,eax
  408cb6:	das    
  408cb7:	xor    bl,BYTE PTR [edi]
  408cb9:	aas    
  408cba:	sub    esp,ecx
  408cbc:	add    esp,DWORD PTR [eax+0x3f]
  408cbf:	add    DWORD PTR [edi],esi
  408cc1:	sub    al,0x22
  408cc3:	jecxz  0x408d30
  408cc5:	cmp    eax,0x59b12086
  408cca:	dec    ebp
  408ccb:	(bad)  
  408ccc:	mov    esp,0x3c6d15a1
  408cd1:	and    ch,BYTE PTR [ebx+0x38]
  408cd4:	xor    DWORD PTR [esi+0x55],esp
  408cd7:	out    dx,eax
  408cd8:	stos   BYTE PTR es:[edi],al
  408cd9:	(bad)  
  408cda:	adc    DWORD PTR [ebp-0x345d741e],eax
  408ce0:	add    al,dl
  408ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce3:	(bad)  
  408ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce5:	lods   eax,DWORD PTR ds:[esi]
  408ce6:	sub    DWORD PTR [edx],edi
  408ce8:	mov    esp,0x24e790d
  408ced:	xor    ecx,DWORD PTR [esi+0x70086812]
  408cf3:	add    eax,0x6b78dbf6
  408cf8:	mov    ebx,0xbc0d7bf3
  408cfd:	mov    ds:0x5182c6e0,al
  408d02:	loop   0x408d82
  408d04:	push   esi
  408d05:	jp     0x408cd7
  408d07:	mov    bh,0x40
  408d09:	daa    
  408d0a:	shr    BYTE PTR [edx-0xa],cl
  408d0d:	mov    ds:0x6b2e32dd,al
  408d12:	icebp  
  408d13:	dec    esp
  408d14:	push   eax
  408d15:	xchg   ebx,eax
  408d16:	popa   
  408d17:	sub    eax,0x19c4bb58
  408d1c:	out    dx,al
  408d1d:	loop   0x408d94
  408d1f:	in     al,dx
  408d20:	fist   DWORD PTR [eax-0x5d]
  408d23:	ds ss in eax,0x78
  408d27:	bound  esp,QWORD PTR [edi]
  408d29:	xchg   ecx,eax
  408d2a:	repnz mov ebp,0xa9e722e3
  408d30:	sub    al,0x7f
  408d32:	pop    eax
  408d33:	jg     0x408d8c
  408d35:	pop    esi
  408d36:	mov    ebx,0x7dbd161
  408d3b:	dec    ebp
  408d3c:	push   esp
  408d3d:	push   edx
  408d3e:	adc    DWORD PTR [ebx],ecx
  408d40:	push   ecx
  408d41:	adc    edx,DWORD PTR [esi-0x48a93b33]
  408d47:	xor    DWORD PTR [esi+0x4016e1d3],edx
  408d4d:	or     esp,DWORD PTR [ecx+eiz*4-0x4f]
  408d51:	lods   al,BYTE PTR ds:[esi]
  408d52:	mov    ebp,0x37653f5c
  408d57:	shl    BYTE PTR [eax+eiz*4-0x3f],1
  408d5b:	in     eax,dx
  408d5c:	outs   dx,BYTE PTR ds:[esi]
  408d5d:	mov    dl,0xf3
  408d5f:	fst    DWORD PTR [eax-0x52]
  408d62:	nop    DWORD PTR [ecx+0x47]
  408d66:	push   es
  408d67:	or     eax,0xf70f5132
  408d6c:	dec    ecx
  408d6d:	sub    esi,DWORD PTR ds:0x64f540e0
  408d73:	test   BYTE PTR [edi-0x1b],ah
  408d76:	enter  0xadae,0xbb
  408d7a:	sub    bh,BYTE PTR [edx+edx*1-0x3a]
  408d7e:	cdq    
  408d7f:	lds    edx,FWORD PTR [esi-0x1cab6ed5]
  408d85:	sbb    eax,0x50387bb7
  408d8a:	push   edx
  408d8b:	cmp    esi,edx
  408d8d:	sub    eax,0x8acdc37a
  408d92:	(bad)  
  408d93:	cs pop ebp
  408d95:	mov    ecx,0x2da70d7c
  408d9a:	test   ah,0x11
  408d9d:	dec    eax
  408d9e:	jae    0x408d62
  408da0:	rcl    DWORD PTR [ebx],0xe1
  408da3:	and    eax,0xc1240e02
  408da8:	mov    al,ds:0x1cf2510f
  408dad:	lods   eax,DWORD PTR ds:[esi]
  408dae:	cld    
  408daf:	add    dh,BYTE PTR [edx+0x1d]
  408db2:	xlat   BYTE PTR ds:[ebx]
  408db3:	lahf   
  408db4:	stos   DWORD PTR es:[edi],eax
  408db5:	stos   BYTE PTR es:[edi],al
  408db6:	pushf  
  408db7:	mul    BYTE PTR [edx]
  408db9:	add    bh,bh
  408dbb:	pusha  
  408dbc:	cmp    DWORD PTR [eax-0x49],0xe05f7b21
  408dc3:	and    al,0xc3
  408dc5:	dec    ebx
  408dc6:	inc    esp
  408dc7:	repz push esi
  408dc9:	sti    
  408dca:	stc    
  408dcb:	mov    fs,WORD PTR [edi-0x39]
  408dce:	sbb    al,0x33
  408dd0:	and    DWORD PTR [esi+0x59],ebx
  408dd3:	push   es
  408dd4:	cmp    dh,BYTE PTR [edi]
  408dd6:	addr16 jno 0x408dd7
  408dd9:	and    DWORD PTR [esi+0x66],0x6f
  408ddd:	xor    ah,0xa3
  408de0:	push   ecx
  408de1:	dec    ecx
  408de2:	push   eax
  408de3:	out    dx,eax
  408de4:	retf   
  408de5:	mov    al,ds:0x61f0d20
  408dea:	adc    DWORD PTR [eax+0x7d17992f],edi
  408df0:	sbb    DWORD PTR [edi],ecx
  408df2:	in     eax,0xfd
  408df4:	mov    dl,0xfb
  408df6:	enter  0x3652,0x73
  408dfa:	or     eax,0x211e6e15
  408dff:	test   dl,al
  408e01:	inc    ebx
  408e02:	(bad)  
  408e03:	in     eax,dx
  408e04:	xor    al,0x7f
  408e06:	cmp    ebp,DWORD PTR [esi+0x3e]
  408e09:	push   0xffffff9d
  408e0b:	popa   
  408e0c:	in     al,0x8e
  408e0e:	in     al,0xe
  408e10:	dec    ebx
  408e11:	jmp    0xfbcd:0xf5223329
  408e18:	push   ss
  408e19:	icebp  
  408e1a:	pop    ebx
  408e1b:	sub    ebp,ecx
  408e1d:	lods   al,BYTE PTR ds:[esi]
  408e1e:	ret    
  408e1f:	push   esi
  408e20:	jno    0x408e8b
  408e22:	adc    al,bh
  408e24:	ror    eax,0x0
  408e27:	mov    edi,0x5731061b
  408e2c:	test   al,0xb4
  408e2e:	bound  eax,QWORD PTR [edx+0x60944375]
  408e34:	les    ebx,FWORD PTR [eax]
  408e36:	out    0x3c,eax
  408e38:	mov    ecx,0x29da9188
  408e3d:	sub    edx,DWORD PTR [esi-0x145bf267]
  408e43:	push   eax
  408e44:	jns    0x408ec1
  408e46:	int3   
  408e47:	dec    eax
  408e48:	ret    
  408e49:	dec    esi
  408e4a:	jmp    0xb169:0x8a18047f
  408e51:	jne    0x408e8d
  408e53:	lds    edi,FWORD PTR fs:[edi+ebx*4]
  408e57:	mov    al,0x23
  408e59:	pop    edx
  408e5a:	adc    DWORD PTR [ecx+0x10],edi
  408e5d:	push   edx
  408e5e:	lods   eax,DWORD PTR ds:[esi]
  408e5f:	inc    ecx
  408e60:	xlat   BYTE PTR ds:[ebx]
  408e61:	dec    ecx
  408e62:	fisubr WORD PTR [eax+esi*8+0x60]
  408e66:	cld    
  408e67:	(bad)  
  408e68:	shl    BYTE PTR [edi],1
  408e6a:	add    BYTE PTR [ebx+ecx*8],dl
  408e6d:	push   ebp
  408e6e:	push   ss
  408e6f:	cmp    eax,0x7e1d5c94
  408e74:	xor    DWORD PTR [ecx+0x54],0x9
  408e78:	inc    ecx
  408e79:	aaa    
  408e7a:	jmp    0x3503ba47
  408e7f:	jbe    0x408e42
  408e81:	ja     0x408ee4
  408e83:	test   BYTE PTR [ecx+0x37bce4cd],al
  408e89:	pop    esp
  408e8a:	(bad)  
  408e8c:	es mov bh,0x57
  408e8f:	das    
  408e90:	cs ds mov bl,0x90
  408e94:	add    cl,dh
  408e96:	sbb    ebx,DWORD PTR [edx]
  408e98:	or     eax,0xf9873a4
  408e9d:	and    al,BYTE PTR [ebx+esi*1]
  408ea0:	push   esi
  408ea1:	ret    
  408ea2:	jecxz  0x408e95
  408ea4:	test   eax,0x85acd2d1
  408ea9:	out    dx,eax
  408eaa:	daa    
  408eab:	popf   
  408eac:	inc    eax
  408ead:	in     al,0xb9
  408eaf:	sbb    ebx,ebx
  408eb1:	ins    BYTE PTR es:[edi],dx
  408eb2:	jbe    0x408ec3
  408eb4:	inc    ecx
  408eb5:	sti    
  408eb6:	jo     0x408f18
  408eb8:	mov    ?,WORD PTR ds:0x6d22d997
  408ebe:	fcom   QWORD PTR [edi-0x4]
  408ec1:	hlt    
  408ec2:	mov    WORD PTR [edx+eiz*8],fs
  408ec5:	sbb    eax,0xe3b15c66
  408eca:	imul   edi,DWORD PTR [esi-0x58a42f4e],0xffffffc6
  408ed1:	pop    edi
  408ed2:	xor    ecx,ebp
  408ed4:	inc    ecx
  408ed5:	in     al,dx
  408ed6:	add    DWORD PTR [edi-0x533ab913],0xa03da56e
  408ee0:	mov    DWORD PTR [edi+0x67],0x85be3e58
  408ee7:	cmp    al,0xfb
  408ee9:	jo     0x408efe
  408eeb:	sub    edx,DWORD PTR [esi]
  408eed:	mov    edx,0x98a6527f
  408ef2:	adc    esi,edi
  408ef4:	sbb    bh,BYTE PTR [eax-0xeb6e222]
  408efa:	push   edi
  408efb:	adc    DWORD PTR [edx],edi
  408efd:	call   0x629a:0x5f9f4241
  408f04:	push   ebp
  408f05:	repnz in eax,0xc2
  408f08:	rol    DWORD PTR [ebp-0x37eac7],0x1
  408f0f:	cmc    
  408f10:	fisttp QWORD PTR [edi-0xb]
  408f13:	lods   al,BYTE PTR ds:[esi]
  408f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f15:	fadd   QWORD PTR [eax-0x5d]
  408f18:	call   0x6a3f:0xdb3d00e
  408f1f:	sbb    al,0xf
  408f21:	mov    BYTE PTR [eax+eiz*1-0x26a28ae5],bl
  408f28:	pop    ebp
  408f29:	aam    0x30
  408f2b:	imul   ebx,DWORD PTR [edi],0xecb97a25
  408f31:	jmp    0x408f76
  408f33:	adc    BYTE PTR [ecx+0x2401130b],bl
  408f39:	shl    DWORD PTR [eax-0x39],1
  408f3c:	mul    DWORD PTR [esi]
  408f3e:	push   esi
  408f3f:	mov    ebx,0xa3124e5f
  408f44:	int    0x3f
  408f46:	call   0x1a08:0x7748d598
  408f4d:	xlat   BYTE PTR ds:[ebx]
  408f4e:	lods   eax,DWORD PTR ds:[esi]
  408f4f:	shl    ch,cl
  408f51:	scas   eax,DWORD PTR es:[edi]
  408f52:	loop   0x408eda
  408f54:	or     al,0x2c
  408f56:	lock add eax,0x7ee0babc
  408f5c:	test   edi,eax
  408f5e:	lds    esp,FWORD PTR [eax-0x17]
  408f61:	mov    esi,0x8c37e6be
  408f66:	lock dec eax
  408f68:	jmp    0xdbfe:0xdd021eb4
  408f6f:	mov    edi,0x31d38630
  408f74:	xchg   edx,eax
  408f75:	aas    
  408f76:	add    BYTE PTR [eax+0x50e88787],0x14
  408f7d:	adc    DWORD PTR [eax-0xd],0x1d
  408f81:	mov    edx,0x9cd85ad5
  408f86:	or     BYTE PTR [esi-0x4f4de722],ch
  408f8c:	out    dx,eax
  408f8d:	(bad)  
  408f8e:	xchg   edx,eax
  408f8f:	and    esi,esi
  408f91:	in     eax,0xea
  408f93:	jmp    0xe19b:0xb4786cff
  408f9a:	inc    ebp
  408f9b:	sbb    DWORD PTR [eax+0x25441f0d],ebp
  408fa1:	xchg   esi,eax
  408fa2:	fs mov bh,0x4c
  408fa5:	pop    ss
  408fa6:	or     al,0x39
  408fa8:	or     esp,DWORD PTR cs:[edi-0xc42cc57]
  408faf:	adc    BYTE PTR [esi+0x65596e2e],0x90
  408fb6:	dec    esp
  408fb7:	pop    edi
  408fb8:	and    BYTE PTR [esi-0x2a478b0d],bh
  408fbe:	dec    esi
  408fbf:	mov    esp,0x5a860233
  408fc4:	mov    dh,0xbb
  408fc6:	je     0x409038
  408fc8:	xchg   ecx,eax
  408fc9:	or     DWORD PTR [edx],ebp
  408fcb:	inc    esi
  408fcc:	ret    
  408fcd:	mov    dh,0x4
  408fcf:	int3   
  408fd0:	dec    esi
  408fd1:	mov    gs,WORD PTR [ecx]
  408fd3:	repz in al,0xc
  408fd6:	push   edx
  408fd7:	mov    eax,ds:0x348809d4
  408fdc:	imul   esp,DWORD PTR [edx-0x615aa796],0x16266ae0
  408fe6:	dec    edi
  408fe7:	xor    dl,ch
  408fe9:	cmp    bl,BYTE PTR [ebx-0x9de212e]
  408fef:	xor    esi,DWORD PTR [ebp+0x30404b8]
  408ff5:	mov    ebx,fs
  408ff7:	jo     0x408fb5
  408ff9:	imul   ebp,DWORD PTR [edx],0xffffffcf
  408ffc:	cld    
  408ffd:	push   eax
  408ffe:	sub    DWORD PTR [esi+0x3d],ebx
  409001:	out    dx,al
  409002:	push   ds
  409003:	xlat   BYTE PTR ds:[ebx]
  409004:	jbe    0x408ffe
  409006:	cmc    
  409007:	cmp    al,0x58
  409009:	mov    edi,0x59af447
  40900e:	aas    
  40900f:	push   0xe57205eb
  409014:	dec    esp
  409015:	fdiv   DWORD PTR [ebp+0x30]
  409018:	hlt    
  409019:	loope  0x40903e
  40901b:	lock and ch,BYTE PTR [eax+0x61b722c7]
  409022:	push   ebp
  409023:	ins    DWORD PTR es:[edi],dx
  409024:	jnp    0x40903f
  409026:	ret    
  409027:	inc    edx
  409028:	test   esi,ebx
  40902a:	jo     0x408fcb
  40902c:	mov    al,ds:0xc41d74b8
  409031:	or     dh,bh
  409033:	fadd   DWORD PTR [ebx+ecx*4-0x41]
  409037:	sub    ch,BYTE PTR [esi-0x27]
  40903a:	fcom   QWORD PTR [ecx+ebx*2]
  40903d:	add    cl,BYTE PTR [edx-0x30dcc406]
  409043:	mov    ds:0x5651c086,eax
  409048:	imul   ecx,DWORD PTR [ebp-0x56],0xb7fad1a
  40904f:	xlat   BYTE PTR ds:[ebx]
  409050:	cmp    cl,dh
  409052:	mov    edx,0x28a1d115
  409057:	(bad)  
  409058:	or     ecx,esi
  40905a:	loop   0x4090c0
  40905c:	nop
  40905d:	fdivr  QWORD PTR [edx+0x14]
  409060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409061:	cmp    DWORD PTR [ebx+0x1546ce0d],eax
  409067:	push   ebp
  409068:	push   ecx
  409069:	dec    edi
  40906a:	jp     0x4090b0
  40906c:	loop   0x40905a
  40906e:	push   eax
  40906f:	jns    0x40900f
  409071:	adc    al,BYTE PTR [ebx]
  409073:	cli    
  409074:	push   eax
  409075:	jmp    0x27d7:0xbd039796
  40907c:	push   cs
  40907d:	xchg   esi,eax
  40907e:	push   ecx
  40907f:	in     al,dx
  409080:	cwde   
  409081:	in     eax,dx
  409082:	div    BYTE PTR [ebx]
  409084:	and    BYTE PTR [eax-0x5c8bcf8f],dh
  40908a:	(bad)  
  40908b:	scas   eax,DWORD PTR es:[edi]
  40908c:	gs out 0x6c,eax
  40908f:	jle    0x409012
  409091:	mov    al,ds:0xf0d03a66
  409096:	or     esi,eax
  409098:	imul   edi,DWORD PTR [eax+0x27967b04],0xf506763e
  4090a2:	cmp    DWORD PTR [edi-0x29],0xffffffe8
  4090a6:	sub    DWORD PTR [esi+0x46],edi
  4090a9:	cmp    al,0x6e
  4090ab:	add    ah,BYTE PTR [esp+edi*4-0x3a130c4b]
  4090b2:	or     eax,ebp
  4090b4:	gs push 0x20
  4090b7:	jl     0x409091
  4090b9:	jmp    0xef24424d
  4090be:	shl    DWORD PTR [edx-0x80],0xad
  4090c2:	mov    ecx,0xd1877473
  4090c7:	fdivr  QWORD PTR [ecx+0x74]
  4090ca:	inc    esp
  4090cb:	adc    al,0x3d
  4090cd:	inc    ecx
  4090ce:	and    DWORD PTR [edx],ebp
  4090d0:	adc    edx,DWORD PTR [eax-0x42]
  4090d3:	in     eax,0x43
  4090d5:	push   ebp
  4090d6:	outs   dx,DWORD PTR ds:[esi]
  4090d7:	xor    al,0x24
  4090d9:	fdivr  DWORD PTR [ebx-0x2968ceb3]
  4090df:	sahf   
  4090e0:	jbe    0x4090e6
  4090e2:	dec    ebp
  4090e3:	inc    esp
  4090e4:	(bad)  
  4090e5:	int    0x6b
  4090e7:	rcr    BYTE PTR [ebp+0x33],0xda
  4090eb:	pop    ss
  4090ec:	test   eax,0x3b9fdff7
  4090f1:	mov    cl,0xc1
  4090f3:	ficom  DWORD PTR [eax+0x6c]
  4090f6:	dec    eax
  4090f7:	lds    ecx,FWORD PTR [esp+esi*2+0x2a]
  4090fb:	push   0x20902788
  409100:	add    al,0xe9
  409102:	jmp    0xbe76bfca
  409107:	cwde   
  409108:	jno    0x40912c
  40910a:	jo     0x409130
  40910c:	push   cs
  40910d:	pop    es
  40910e:	clc    
  40910f:	sub    al,0xb
  409111:	jge    0x4090c9
  409113:	mov    ebp,ecx
  409115:	pcmpgtw mm7,mm3
  409118:	dec    ecx
  409119:	xor    eax,0x6b5ba8d3
  40911e:	xchg   ebx,eax
  40911f:	pop    edi
  409120:	test   eax,0x275f023d
  409125:	dec    eax
  409126:	call   0xc2af:0x89740dc3
  40912d:	jp     0x40910c
  40912f:	pop    ebp
  409130:	mov    eax,ds:0xb15ead16
  409135:	popa   
  409136:	sub    dh,BYTE PTR [esi-0x53e2846a]
  40913c:	in     eax,0xc9
  40913e:	js     0x40919a
  409140:	int    0x17
  409142:	cmp    BYTE PTR [eax-0x1e],0xd3
  409146:	or     eax,0x2056d295
  40914b:	cmp    DWORD PTR [ecx+0xf],edx
  40914e:	and    ch,al
  409150:	mov    esi,0x9ea26c3f
  409155:	stos   BYTE PTR es:[edi],al
  409156:	(bad)  
  409158:	les    ebx,FWORD PTR [edi+0x32]
  40915b:	or     DWORD PTR ds:0xc41ad2e1,ebp
  409161:	(bad)  
  409162:	iret   
  409163:	push   ss
  409164:	sar    BYTE PTR [eax+edx*2-0x69],cl
  409168:	mov    ebx,0x3f1167b4
  40916d:	jae    0x40919f
  40916f:	dec    ebx
  409170:	push   esi
  409171:	dec    esp
  409172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409173:	jmp    0xe6942d03
  409178:	xor    DWORD PTR [ecx+0x68],edi
  40917b:	ss jno 0x409191
  40917e:	out    dx,eax
  40917f:	test   al,0xe2
  409181:	out    dx,eax
  409182:	xor    BYTE PTR ds:0xbd37a51b,bh
  409188:	jecxz  0x409172
  40918a:	aas    
  40918b:	or     DWORD PTR [ebx],edx
  40918d:	add    al,0x54
  40918f:	(bad)  
  409190:	push   ss
  409191:	cmp    DWORD PTR [ebx+ebx*2-0x532627e8],esi
  409198:	pop    edx
  409199:	jp     0x4091ff
  40919b:	stc    
  40919c:	call   0xf3f85dfa
  4091a1:	mov    eax,0xb26c91dd
  4091a6:	fwait
  4091a7:	fwait
  4091a8:	iret   
  4091a9:	mov    ch,0x74
  4091ab:	pop    ss
  4091ac:	mov    bh,0x2e
  4091ae:	or     dh,BYTE PTR [ebx+0x48]
  4091b1:	dec    esi
  4091b2:	sbb    BYTE PTR [ebp-0x39d5fe38],dh
  4091b8:	xchg   edx,eax
  4091b9:	test   al,0xf
  4091bb:	inc    esi
  4091bc:	inc    eax
  4091bd:	push   esi
  4091be:	xor    eax,0x1b8df0ef
  4091c3:	jl     0x4091e3
  4091c5:	or     BYTE PTR [edi-0x50630652],ah
  4091cb:	stos   DWORD PTR es:[edi],eax
  4091cc:	imul   edx,DWORD PTR [eax-0xf7e05cc],0x657e7a59
  4091d6:	xchg   DWORD PTR ds:0xa3daa704,edi
  4091dc:	xchg   esp,eax
  4091dd:	dec    ecx
  4091de:	and    DWORD PTR [esi+0x75a54772],ebx
  4091e4:	sub    al,0xe
  4091e6:	sbb    ecx,edx
  4091e8:	fiadd  WORD PTR [ebx]
  4091ea:	ins    BYTE PTR es:[edi],dx
  4091eb:	loop   0x4091ae
  4091ed:	(bad)  
  4091ee:	repnz mov es,WORD PTR es:[eax+esi*4+0x3b]
  4091f4:	stc    
  4091f5:	cs retf 
  4091f7:	comiss xmm5,DWORD PTR [ebp-0x3eb43824]
  4091fe:	add    al,0xf5
  409200:	mov    BYTE PTR [esi-0x6af66deb],cl
  409206:	fs lock mov esp,0x13af2eb2
  40920d:	add    eax,0x104c6580
  409212:	sbb    bh,BYTE PTR [esi+0x4]
  409215:	pop    WORD PTR [ecx+0x13]
  409219:	lea    ebx,[bp+di+0x4b]
  40921d:	int    0x98
  40921f:	sub    eax,0x224a9bd2
  409224:	sub    al,0x33
  409226:	mov    esp,DWORD PTR ds:0x35c33e47
  40922c:	mov    esp,0xa841bae0
  409231:	in     al,dx
  409232:	inc    ebp
  409233:	pushf  
  409234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409235:	shl    DWORD PTR [ebp+0x4c],0x45
  409239:	(bad)  
  40923a:	fwait
  40923b:	sub    eax,0xe8a82ee8
  409240:	fadd   DWORD PTR [esi-0x3f]
  409243:	mov    bh,0xfc
  409245:	paddd  mm0,mm0
  409248:	mov    edx,0xa4387212
  40924d:	sub    DWORD PTR [ebp-0x7f],ebp
  409250:	int3   
  409251:	add    edi,DWORD PTR [ecx]
  409253:	jmp    0x76c3:0x6151d44c
  40925a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40925b:	xchg   ebp,eax
  40925c:	or     cl,bl
  40925e:	stos   DWORD PTR es:[edi],eax
  40925f:	mov    ds:0x757f6389,eax
  409264:	pushf  
  409265:	push   edx
  409266:	outs   dx,DWORD PTR ds:[esi]
  409267:	jecxz  0x409288
  409269:	test   DWORD PTR [edi-0x6df155b7],ecx
  40926f:	scas   eax,DWORD PTR es:[edi]
  409270:	jecxz  0x4092cd
  409272:	ins    DWORD PTR es:[edi],dx
  409273:	xor    cl,ch
  409275:	jns    0x409282
  409277:	shl    dl,0x3a
  40927a:	cmc    
  40927b:	hlt    
  40927c:	xchg   ecx,eax
  40927d:	jp     0x4092cc
  40927f:	out    dx,eax
  409280:	add    DWORD PTR ds:0x960741e3,edi
  409286:	xchg   ebx,eax
  409287:	popa   
  409288:	cmp    edi,DWORD PTR [ecx]
  40928a:	push   edi
  40928b:	aas    
  40928c:	out    dx,al
  40928d:	js     0x4092a6
  40928f:	mov    edi,0x4bc626c
  409294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409295:	and    ebx,DWORD PTR [edi-0x3c856586]
  40929b:	pop    es
  40929c:	in     al,0xbd
  40929e:	lds    esp,FWORD PTR [ebx]
  4092a0:	dec    eax
  4092a1:	pop    esp
  4092a2:	(bad)  
  4092a4:	cmp    bl,al
  4092a6:	ror    BYTE PTR [ebp+0x4b],cl
  4092a9:	jne    0x40925e
  4092ab:	push   ds
  4092ac:	cwde   
  4092ad:	outs   dx,BYTE PTR ds:[esi]
  4092ae:	or     esp,DWORD PTR [ebx]
  4092b0:	pop    ss
  4092b1:	jo     0x40932c
  4092b3:	inc    esp
  4092b4:	xlat   BYTE PTR ds:[ebx]
  4092b5:	cdq    
  4092b6:	and    BYTE PTR [ebp+0x6a],0x86
  4092ba:	pop    edi
  4092bb:	xchg   edi,eax
  4092bc:	cld    
  4092bd:	add    dl,BYTE PTR [edi-0x4b]
  4092c0:	and    al,0xce
  4092c2:	xor    edi,esp
  4092c4:	jns    0x409278
  4092c6:	push   0x28
  4092c8:	sbb    al,0x17
  4092ca:	inc    ebx
  4092cb:	ja     0x4092a6
  4092cd:	xchg   edx,esp
  4092cf:	cmp    ch,al
  4092d1:	repz adc eax,0x5d96ca8e
  4092d7:	fisttp WORD PTR [ecx]
  4092d9:	retf   0xa84c
  4092dc:	add    al,0x95
  4092de:	je     0x409299
  4092e0:	push   ss
  4092e1:	mov    dh,0x86
  4092e3:	add    al,0x46
  4092e5:	dec    esi
  4092e6:	adc    DWORD PTR [edi-0x66],eax
  4092e9:	pop    esi
  4092ea:	sub    edx,DWORD PTR [edx+0x37]
  4092ed:	dec    edx
  4092ee:	sahf   
  4092ef:	cli    
  4092f0:	sub    BYTE PTR [eax+eiz*4],ah
  4092f3:	gs pop esp
  4092f5:	sub    bl,al
  4092f7:	xchg   ecx,eax
  4092f8:	push   0xd567cd8e
  4092fd:	call   0x1607:0x71f11b6f
  409304:	mov    ebp,0xd6529cb4
  409309:	ja     0x409366
  40930b:	adc    DWORD PTR [eax-0x6c666869],edi
  409311:	cwde   
  409312:	xor    esi,DWORD PTR [ecx+0x39bf75e9]
  409318:	push   edx
  409319:	out    0xa2,al
  40931b:	and    al,0x80
  40931d:	push   edx
  40931e:	fimul  DWORD PTR [ebx+edi*8+0x15]
  409322:	sbb    dl,BYTE PTR [eax]
  409324:	dec    edi
  409325:	imul   ebp,DWORD PTR [eax+0x2],0x7b
  409329:	and    DWORD PTR [ebx+0x5cbbc880],0x753c8951
  409333:	aad    0xdd
  409335:	inc    eax
  409336:	call   0x4338:0x2c4102e2
  40933d:	test   BYTE PTR [ebp+0x59],bh
  409340:	ja     0x4093b8
  409342:	pushf  
  409343:	xlat   BYTE PTR ds:[ebx]
  409344:	xor    eax,0x1c5e3104
  409349:	ds pop ebx
  40934b:	aaa    
  40934c:	arpl   dx,ax
  40934e:	cmp    bh,bl
  409350:	lock ds js 0x409358
  409354:	call   0xb44d:0x34ea6804
  40935b:	pop    ss
  40935c:	rcl    DWORD PTR [edx*4-0xece0a61],0x25
  409364:	pop    es
  409365:	pusha  
  409366:	mov    eax,ds:0xa113e5e3
  40936b:	cmp    al,BYTE PTR [eax]
  40936d:	ins    BYTE PTR es:[edi],dx
  40936e:	lahf   
  40936f:	sub    bl,BYTE PTR [ebx-0x2a43380]
  409375:	mov    ch,0x3b
  409377:	(bad)  
  409379:	mov    ebx,0xc1301e01
  40937e:	jmp    0x409342
  409380:	jge    0x4093fc
  409382:	cs xchg esi,eax
  409384:	shr    DWORD PTR [esi-0x4d],cl
  409387:	rcl    BYTE PTR [ebp-0x3c],0x1a
  40938b:	mov    dl,0xb
  40938d:	inc    esp
  40938e:	mov    esp,0x58b54a91
  409393:	inc    eax
  409394:	mov    WORD PTR [esi+ebp*1-0x3e],ds
  409398:	loopne 0x4093b6
  40939a:	add    BYTE PTR [edi-0x490f2479],0x5b
  4093a1:	stc    
  4093a2:	jno    0x40932f
  4093a4:	stos   BYTE PTR es:[edi],al
  4093a5:	push   ebx
  4093a6:	ins    DWORD PTR es:[edi],dx
  4093a7:	loop   0x4093c5
  4093a9:	inc    ebx
  4093aa:	aas    
  4093ab:	jge    0x4093c9
  4093ad:	dec    ecx
  4093ae:	add    BYTE PTR [edx+0x1f],ch
  4093b1:	loop   0x409423
  4093b3:	add    al,0xd9
  4093b5:	mov    ds:0xe3102ed0,eax
  4093ba:	lock xchg esp,eax
  4093bc:	pop    ds
  4093bd:	test   al,0xe1
  4093bf:	push   ebx
  4093c0:	fldcw  WORD PTR [ebx+ecx*1+0x357df99a]
  4093c7:	pop    edi
  4093c8:	xchg   ebp,eax
  4093c9:	shl    BYTE PTR [eax-0x131a5ae3],1
  4093cf:	fidivr WORD PTR [edi]
  4093d1:	mov    ds:0x773e6955,al
  4093d6:	(bad)  
  4093d7:	fwait
  4093d8:	(bad)  
  4093d9:	lea    ebp,[ebx+eax*4]
  4093dc:	lock es xor eax,0x41fd7227
  4093e3:	xor    dl,BYTE PTR [ebx]
  4093e5:	sbb    al,0xce
  4093e7:	xor    al,bl
  4093e9:	mov    ch,0xc1
  4093eb:	push   DWORD PTR [ecx-0x7fd4b905]
  4093f1:	int3   
  4093f2:	add    BYTE PTR [eax],0x68
  4093f5:	pop    edi
  4093f6:	mov    edi,0xd8d0df39
  4093fb:	pop    ebx
  4093fc:	jp     0x409475
  4093fe:	cs sbb al,0xd5
  409401:	jbe    0x409466
  409403:	int3   
  409404:	call   0x4ae4:0x88efe5b
  40940b:	loopne 0x4093e1
  40940d:	add    cl,ah
  40940f:	push   0x138fa50b
  409414:	pushf  
  409415:	sub    BYTE PTR [ebx],0x82
  409418:	jae    0x409421
  40941a:	scas   eax,DWORD PTR es:[edi]
  40941b:	mov    ebx,ebp
  40941d:	xchg   esp,eax
  40941e:	sbb    eax,0x6bbcddde
  409423:	shl    BYTE PTR [edi+0x1f9eb1aa],0x79
  40942a:	push   esi
  40942b:	add    ebp,ebp
  40942d:	jmp    0x4093b9
  40942f:	cmp    eax,0x5926ca81
  409434:	or     ebx,esi
  409436:	inc    edi
  409437:	arpl   WORD PTR [esi+0x22],bp
  40943a:	je     0x409449
  40943c:	dec    ebp
  40943d:	pop    edi
  40943e:	hlt    
  40943f:	in     eax,dx
  409440:	jmp    0x4094a9
  409442:	fbstp  TBYTE PTR [esi-0x7c920a55]
  409448:	jno    0x4094c8
  40944a:	into   
  40944b:	clc    
  40944c:	es sti 
  40944e:	jb     0x4094cb
  409450:	in     al,0x9
  409452:	lock add eax,0x9523361b
  409458:	xchg   ebp,eax
  409459:	dec    esi
  40945a:	shl    DWORD PTR [eax+edi*4],cl
  40945d:	ret    
  40945e:	xor    DWORD PTR [ebx],ebx
  409460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409461:	std    
  409462:	push   ss
  409463:	and    al,0xfb
  409465:	sahf   
  409466:	cmp    al,al
  409468:	and    ch,BYTE PTR [edi-0x46]
  40946b:	cmc    
  40946c:	inc    edi
  40946d:	cwde   
  40946e:	xor    DWORD PTR [ebx-0x38c2f560],0xaa2733de
  409478:	arpl   WORD PTR [ebx-0xcfe24b],dx
  40947e:	sbb    al,0x28
  409480:	push   esi
  409481:	mov    al,ds:0xde12fdba
  409486:	popa   
  409487:	in     al,0xbe
  409489:	sub    cl,ah
  40948b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40948d:	pusha  
  40948e:	fs inc esp
  409490:	sbb    dh,BYTE PTR [edx+0x2f]
  409493:	sbb    bl,bh
  409495:	or     al,BYTE PTR [ebx-0x304815f0]
  40949b:	and    esp,DWORD PTR [eax]
  40949d:	push   cs
  40949e:	fisub  DWORD PTR [ebp+0x5e]
  4094a1:	cld    
  4094a2:	out    0x6d,al
  4094a4:	lahf   
  4094a5:	mov    esi,0x78d9c6ea
  4094aa:	loopne 0x40942f
  4094ac:	mov    al,0xaa
  4094ae:	push   esi
  4094af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b0:	lahf   
  4094b1:	push   ebp
  4094b2:	(bad)  
  4094b3:	(bad)  
  4094b5:	call   0xaa5c:0xa648b3c7
  4094bc:	scas   al,BYTE PTR es:[edi]
  4094bd:	adc    eax,0x79c3ca30
  4094c2:	dec    ebx
  4094c3:	bound  edi,QWORD PTR [ecx]
  4094c5:	int3   
  4094c6:	icebp  
  4094c7:	loop   0x4094e2
  4094c9:	sbb    edx,DWORD PTR [ebx-0x1309d5b4]
  4094cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d0:	mov    dl,0xb0
  4094d2:	test   BYTE PTR [eax-0x425fa6f],al
  4094d8:	dec    edi
  4094d9:	shr    ah,1
  4094db:	pop    ebp
  4094dc:	mov    WORD PTR [ebx],cs
  4094de:	sub    BYTE PTR [eax],ah
  4094e0:	in     al,0x1
  4094e2:	das    
  4094e3:	push   ss
  4094e4:	pop    ss
  4094e5:	jnp    0x40953b
  4094e7:	repnz ss fcomp st(7)
  4094eb:	data16 arpl WORD PTR [edx],ax
  4094ee:	cli    
  4094ef:	cwde   
  4094f0:	inc    ebp
  4094f1:	sbb    al,0xc9
  4094f3:	sbb    edx,ecx
  4094f5:	scas   eax,DWORD PTR es:[edi]
  4094f6:	push   edx
  4094f7:	rcl    BYTE PTR [eax+ebx*4],0x33
  4094fb:	mov    esp,0x8f004d70
  409500:	pop    ss
  409501:	sbb    al,0x21
  409503:	cmp    cl,dl
  409505:	sbb    eax,DWORD PTR [edi-0x10]
  409508:	shr    DWORD PTR [edi],0x9a
  40950b:	cmc    
  40950c:	jnp    0x409531
  40950e:	icebp  
  40950f:	(bad)  
  409510:	mov    eax,0x1ba8e10d
  409515:	dec    ebx
  409516:	jbe    0x4094b1
  409518:	int    0x7f
  40951a:	jo     0x409531
  40951c:	je     0x4094a1
  40951e:	pop    eax
  40951f:	popa   
  409520:	aas    
  409521:	into   
  409522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409523:	cmp    eax,0x660e22f5
  409528:	scas   al,BYTE PTR es:[edi]
  409529:	loope  0x4094f7
  40952b:	sub    eax,0xbfdc11aa
  409530:	retf   
  409531:	xor    BYTE PTR [edx],0x84
  409534:	rcl    DWORD PTR [ecx-0x7b6b3339],0xce
  40953b:	or     al,0x79
  40953d:	clc    
  40953e:	dec    ebx
  40953f:	fs aas 
  409541:	outs   dx,DWORD PTR ds:[esi]
  409542:	repz cmc 
  409544:	std    
  409545:	adc    eax,0x9358b2da
  40954a:	nop
  40954b:	ds daa 
  40954d:	loop   0x40953d
  40954f:	test   BYTE PTR [eax+0xf],cl
  409552:	bnd jo 0x409525
  409555:	(bad)  
  409556:	fistp  DWORD PTR [edi+0x54]
  409559:	loope  0x409594
  40955b:	pop    edi
  40955d:	mov    ds:0xf7f0905c,al
  409562:	xchg   BYTE PTR [edx-0x80],bh
  409565:	push   0xffffffb8
  409567:	imul   ebp,DWORD PTR [edx],0xcf87d0f3
  40956d:	adc    eax,0xebd6a059
  409572:	xchg   ebp,eax
  409573:	jg     0x409581
  409575:	push   ebx
  409576:	inc    ecx
  409577:	jb     0x409512
  409579:	dec    esi
  40957a:	(bad)
  40957d:	jl     0x4095da
  40957f:	push   ebp
  409580:	call   0x78d048c8
  409585:	push   ss
  409586:	loop   0x40951c
  409588:	inc    ebx
  409589:	push   edi
  40958a:	mov    esi,ds
  40958c:	mov    edx,DWORD PTR [ebx]
  40958e:	inc    BYTE PTR [ecx-0x5cdb778]
  409594:	xor    DWORD PTR [edi],eax
  409596:	ret    
  409597:	retf   0x7f0a
  40959a:	mov    ecx,0x5fd23b55
  40959f:	in     al,0x57
  4095a1:	and    ch,ch
  4095a3:	sub    ebx,DWORD PTR [ebx]
  4095a5:	mov    dh,bl
  4095a7:	adc    eax,DWORD PTR [edx]
  4095a9:	sbb    dl,bl
  4095ab:	rcr    cl,cl
  4095ad:	pop    eax
  4095ae:	shl    BYTE PTR [ecx-0x6cc49613],1
  4095b4:	daa    
  4095b5:	mov    eax,0x65fe864d
  4095ba:	aaa    
  4095bb:	bound  edi,QWORD PTR [eax]
  4095bd:	push   ebp
  4095be:	push   esi
  4095bf:	retf   
  4095c0:	lds    ebx,FWORD PTR [ebx]
  4095c2:	lahf   
  4095c3:	cs sbb cl,0x75
  4095c7:	mov    ch,0xe6
  4095c9:	ins    BYTE PTR es:[edi],dx
  4095ca:	imul   esi,DWORD PTR [esi-0x4a],0xffffffc5
  4095ce:	test   eax,0xc532d91
  4095d3:	stos   DWORD PTR es:[edi],eax
  4095d4:	daa    
  4095d5:	jns    0x409605
  4095d7:	adc    bl,BYTE PTR [ebx]
  4095d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095da:	mov    DWORD PTR [edi],ebx
  4095dc:	stos   DWORD PTR es:[edi],eax
  4095dd:	jle    0x409579
  4095df:	adc    esi,ebx
  4095e1:	cmp    eax,DWORD PTR [esi+0x46453a9f]
  4095e7:	aam    0x21
  4095e9:	js     0x40959d
  4095eb:	sub    BYTE PTR [eax-0x5e8b1676],bh
  4095f1:	push   ss
  4095f2:	push   edx
  4095f3:	mov    ch,0xfa
  4095f5:	jmp    0xf3021b40
  4095fa:	jae    0x4095ad
  4095fc:	fcmovnbe st,st(7)
  4095fe:	or     BYTE PTR [ecx+0x1b037111],ah
  409604:	push   esp
  409605:	retf   0x33ef
  409608:	adc    al,0x83
  40960a:	cwde   
  40960b:	fcomp  QWORD PTR [eax]
  40960d:	sub    edi,DWORD PTR [eax-0x2fc90c11]
  409613:	inc    BYTE PTR [eax]
  409615:	aam    0xf5
  409617:	or     DWORD PTR [ecx-0xd],esp
  40961a:	das    
  40961b:	inc    esi
  40961c:	fcomi  st,st(5)
  40961e:	adc    eax,0x524b9944
  409623:	push   esp
  409624:	aam    0x78
  409626:	imul   ebx,DWORD PTR ds:0xb922343f,0x2d1b4b22
  409630:	pop    ecx
  409631:	dec    ebx
  409632:	rol    dl,0xe2
  409635:	sbb    eax,0xded3e8dd
  40963a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40963b:	dec    ebx
  40963c:	jmp    0x4095cd
  40963e:	xlat   BYTE PTR ds:[ebx]
  40963f:	or     al,0xf3
  409641:	(bad)  
  409642:	cmc    
  409643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409644:	jno    0x409600
  409646:	sbb    bh,BYTE PTR [edx+ebp*8-0x654bec6b]
  40964d:	les    edi,FWORD PTR [ebp+0xc]
  409650:	clc    
  409651:	loope  0x4096b3
  409653:	add    al,0x9e
  409655:	mov    edi,0xc4d00814
  40965a:	lock icebp 
  40965c:	ja     0x40966f
  40965e:	and    ebx,DWORD PTR fs:[esp+edi*4-0x42]
  409663:	aaa    
  409664:	jae    0x4096bc
  409666:	and    DWORD PTR [ecx],ebx
  409668:	sbb    al,0x7a
  40966a:	loope  0x409652
  40966c:	loop   0x4096c1
  40966e:	sbb    BYTE PTR [ebp+0x714240ce],0x50
  409675:	pop    ebp
  409676:	jnp    0x40960e
  409678:	leave  
  409679:	sub    BYTE PTR [ebp-0x2c1366e4],dl
  40967f:	dec    ecx
  409680:	sbb    ah,cl
  409682:	js     0x40964f
  409684:	dec    edx
  409685:	das    
  409686:	shl    eax,cl
  409688:	shr    BYTE PTR [eax],1
  40968a:	ret    0x5f
  40968d:	mov    bl,BYTE PTR [edx]
  40968f:	xchg   ecx,eax
  409690:	das    
  409691:	xchg   esp,eax
  409692:	xchg   ebp,eax
  409693:	xor    al,0xe5
  409695:	outs   dx,BYTE PTR ds:[esi]
  409696:	je     0x40967a
  409698:	or     cl,BYTE PTR [ebx+ebx*8]
  40969b:	or     al,0x4b
  40969d:	jmp    0x60a8314a
  4096a2:	fidivr DWORD PTR [edi]
  4096a4:	les    ecx,FWORD PTR [ebx-0x17]
  4096a7:	sub    dh,dl
  4096a9:	cwde   
  4096aa:	and    al,0x4d
  4096ac:	jg     0x409698
  4096ae:	xchg   ebp,eax
  4096af:	pop    ebp
  4096b0:	dec    ecx
  4096b1:	push   ds
  4096b2:	outs   dx,BYTE PTR ds:[esi]
  4096b3:	mov    bh,0xc2
  4096b5:	call   0x6837:0x45a8b0b5
  4096bc:	xchg   edx,eax
  4096bd:	or     eax,0x35f8e350
  4096c2:	stos   BYTE PTR es:[edi],al
  4096c3:	rcr    ch,cl
  4096c5:	out    dx,al
  4096c6:	mov    ?,WORD PTR [eax-0x47]
  4096c9:	test   BYTE PTR [edx],0x96
  4096cc:	out    0xf6,eax
  4096ce:	loopne 0x409741
  4096d0:	pop    edi
  4096d1:	int    0x31
  4096d3:	cdq    
  4096d4:	pop    es
  4096d5:	leave  
  4096d6:	jae    0x409738
  4096d8:	in     al,dx
  4096d9:	nop
  4096da:	push   ss
  4096db:	push   eax
  4096dc:	arpl   sp,ax
  4096de:	retf   0x4557
  4096e1:	repnz inc ecx
  4096e3:	pop    ds
  4096e4:	fmul   DWORD PTR [edi-0x55]
  4096e7:	imul   ebp,DWORD PTR [edi-0x6e77a2b1],0xffffffbe
  4096ee:	push   ds
  4096ef:	sbb    dh,dl
  4096f1:	pop    edi
  4096f2:	push   ss
  4096f3:	fistp  QWORD PTR [eax]
  4096f5:	enter  0xa660,0xe3
  4096f9:	mov    ebx,0x3973ca9e
  4096fe:	and    al,0x72
  409700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409701:	xchg   BYTE PTR [ebp+0x607f5a2d],cl
  409707:	and    eax,0x5a0c300
  40970c:	int3   
  40970d:	adc    BYTE PTR [ebx-0x4f],cl
  409710:	mov    ds:0x1de0034d,al
  409715:	xchg   esi,eax
  409716:	push   es
  409717:	fadd   st,st(6)
  409719:	inc    esp
  40971a:	jae    0x4096cb
  40971c:	les    esi,FWORD PTR [edi+0x281a688c]
  409722:	add    dh,dh
  409724:	hlt    
  409725:	mov    al,0x87
  409727:	shl    DWORD PTR [edi-0x17f1535e],cl
  40972d:	jnp    0x40977c
  40972f:	jmp    0x501:0xbf63b703
  409736:	(bad)  
  409737:	mov    bh,0x52
  409739:	mov    ah,0x58
  40973b:	xor    ecx,DWORD PTR [esp+eax*4-0x49]
  40973f:	jp     0x4096cf
  409741:	fwait
  409742:	push   esi
  409743:	sbb    BYTE PTR [esi-0x4809aede],0x2e
  40974a:	jno    0x4096fa
  40974c:	leave  
  40974d:	ins    BYTE PTR es:[edi],dx
  40974e:	les    esp,FWORD PTR [eax-0xbb289c8]
  409754:	inc    ebx
  409755:	mov    esp,0xebd26dda
  40975a:	ja     0x4097a8
  40975c:	pop    ebp
  40975d:	or     BYTE PTR [esi+ebx*2-0x54],bh
  409761:	scas   eax,DWORD PTR es:[edi]
  409762:	mov    al,0x67
  409764:	jp     0x40970b
  409766:	lea    edx,[esi+0x2bf46db3]
  40976c:	pop    es
  40976d:	sub    cl,BYTE PTR [ebx+0x4e3bd308]
  409773:	mov    dh,0xe9
  409775:	jmp    0xfa559331
  40977a:	mov    edx,0xbbfb85a1
  40977f:	loop   0x4097de
  409781:	sub    BYTE PTR [ebx-0x77],ch
  409784:	add    edx,DWORD PTR [esi+0x2f]
  409787:	add    eax,0xb4ff04be
  40978c:	shl    BYTE PTR ds:[edi+0x5a],cl
  409790:	mov    eax,0x91af6327
  409795:	pop    eax
  409796:	imul   edx,DWORD PTR [edi+0x59a2fa20],0x6c
  40979d:	adc    eax,esi
  40979f:	push   es
  4097a0:	mov    esp,0x3de3f75b
  4097a5:	xor    BYTE PTR [edx+0x79],dl
  4097a8:	lods   al,BYTE PTR ds:[esi]
  4097a9:	repnz dec ecx
  4097ab:	inc    esi
  4097ac:	fsub   DWORD PTR [edi+0x262dff1c]
  4097b2:	dec    edi
  4097b3:	pop    eax
  4097b4:	cdq    
  4097b5:	in     al,dx
  4097b6:	popa   
  4097b7:	or     bl,BYTE PTR [ebx+0x327c7a16]
  4097bd:	lea    eax,[eax]
  4097bf:	loop   0x4097e3
  4097c1:	xchg   BYTE PTR [ecx+0x3760f19b],ah
  4097c7:	mov    WORD PTR [edx+0x474fe7e0],ss
  4097cd:	popa   
  4097ce:	jne    0x4097d1
  4097d0:	and    eax,0x2212c218
  4097d5:	sub    ah,BYTE PTR [edx-0x56386fc3]
  4097db:	sbb    al,dh
  4097dd:	out    0xc1,eax
  4097df:	and    DWORD PTR [ebp+edx*1-0xd],ebp
  4097e3:	sub    eax,0xaeb6c004
  4097e8:	mov    ecx,0x2240b9e7
  4097ed:	fwait
  4097ee:	inc    BYTE PTR [edi+0x242c46e4]
  4097f4:	mov    dl,0xea
  4097f6:	(bad)  
  4097f8:	or     BYTE PTR [edi+0x4952d4d],cl
  4097fe:	inc    esi
  4097ff:	xchg   ebp,eax
  409800:	add    bh,BYTE PTR [ebx]
  409802:	outs   dx,DWORD PTR ds:[esi]
  409803:	sbb    edx,DWORD PTR [eax+0x25]
  409806:	dec    esp
  409807:	adc    al,0x19
  409809:	in     eax,dx
  40980a:	and    ebp,DWORD PTR [bx-0x7fbc]
  40980f:	inc    esi
  409810:	es inc esi
  409812:	imul   eax,DWORD PTR ds:0x5bdbbf53,0xffffffe0
  409819:	mov    al,ds:0x2bf1e217
  40981e:	cmp    al,0x41
  409820:	sub    eax,0xb2432153
  409825:	xchg   ebx,eax
  409826:	adc    ebx,ebx
  409828:	ror    bh,cl
  40982a:	cmp    eax,0x759af941
  40982f:	pop    ss
  409830:	fmul   QWORD PTR [esi-0x48]
  409833:	punpckhdq mm3,QWORD PTR [esp+edi*1-0x59]
  409838:	xlat   BYTE PTR ds:[ebx]
  409839:	inc    edx
  40983a:	ins    BYTE PTR es:[edi],dx
  40983b:	test   al,0xd2
  40983d:	pop    ds
  40983e:	jb     0x409890
  409840:	jp     0x40981c
  409842:	xchg   ecx,eax
  409843:	and    eax,0x7f78756f
  409848:	outs   dx,BYTE PTR ds:[esi]
  409849:	and    eax,0x1fc42ace
  40984e:	test   eax,0xec920039
  409853:	mov    DWORD PTR [ebx],edx
  409855:	sub    DWORD PTR [ebx-0x74],ebp
  409858:	xchg   ebp,eax
  409859:	ss dec eax
  40985b:	cld    
  40985c:	dec    edx
  40985d:	push   cs
  40985e:	or     DWORD PTR [edx-0x70],ebp
  409861:	sub    ecx,DWORD PTR [edx+0x49]
  409864:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409866:	or     edi,esi
  409868:	mov    eax,0x47d325db
  40986d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40986e:	cli    
  40986f:	pop    eax
  409870:	dec    esi
  409871:	and    esi,ebp
  409873:	sbb    ah,BYTE PTR [edx+ebx*8-0x64c57d91]
  40987a:	scas   eax,DWORD PTR es:[edi]
  40987b:	cmc    
  40987c:	imul   esp,DWORD PTR [edx-0x74],0x33
  409880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409881:	mov    ah,0xf
  409883:	pop    edx
  409884:	icebp  
  409885:	pop    es
  409886:	push   0xfffffffe
  409888:	out    dx,al
  409889:	test   eax,0x4c64c58
  40988e:	mov    DWORD PTR [ebx-0x251256c2],edi
  409894:	(bad)  
  409896:	mov    bl,0xc7
  409898:	aad    0xce
  40989a:	or     eax,ebp
  40989c:	sahf   
  40989d:	add    dh,BYTE PTR [edx]
  40989f:	jmp    0x71608d7c
  4098a4:	pop    edi
  4098a5:	and    ch,BYTE PTR [edx-0x58]
  4098a8:	cld    
  4098a9:	dec    ebx
  4098aa:	xor    DWORD PTR [esi+0x71],esp
  4098ad:	inc    ecx
  4098ae:	pop    ds
  4098af:	lahf   
  4098b0:	pop    edi
  4098b1:	and    DWORD PTR [edx-0x13],0x74
  4098b5:	pushf  
  4098b6:	out    dx,al
  4098b7:	cmp    edx,DWORD PTR [edi]
  4098b9:	mov    bl,0xea
  4098bb:	fwait
  4098bc:	arpl   WORD PTR [edx],bp
  4098be:	adc    DWORD PTR [edx+0x5d],eax
  4098c1:	pop    ebx
  4098c2:	data16 lods al,BYTE PTR ds:[esi]
  4098c4:	pop    esp
  4098c5:	popf   
  4098c6:	pop    edx
  4098c7:	cwde   
  4098c8:	mov    al,ds:0xdd287667
  4098cd:	div    BYTE PTR [edi-0x48]
  4098d0:	rol    BYTE PTR [ebx],cl
  4098d2:	and    eax,0xa2fc2a29
  4098d7:	mov    ecx,edi
  4098d9:	pop    edi
  4098da:	in     eax,0x17
  4098dc:	call   0xc15c1226
  4098e1:	push   esp
  4098e2:	xchg   ecx,eax
  4098e3:	xlat   BYTE PTR ds:[ebx]
  4098e4:	mov    ds:0x7fbfce30,al
  4098e9:	mov    ebx,0x537bd2a4
  4098ee:	jbe    0x4098cd
  4098f0:	lods   al,BYTE PTR ds:[esi]
  4098f1:	lea    ebp,[esi-0x75f7f18d]
  4098f7:	sub    ah,BYTE PTR [esi]
  4098f9:	iret   
  4098fa:	dec    ebx
  4098fb:	pop    esi
  4098fc:	mov    ebx,0x4d692444
  409901:	inc    eax
  409902:	rcr    BYTE PTR [edi],cl
  409904:	cmp    DWORD PTR [edx-0x7e8281d3],0xd1770b12
  40990e:	test   eax,0x43766782
  409913:	repz les edx,FWORD PTR [ecx+0x1b61438e]
  40991a:	adc    eax,0xa595179e
  40991f:	je     0x4098c6
  409921:	test   DWORD PTR [edx+0x480215c8],esi
  409927:	test   al,0xff
  409929:	les    esi,FWORD PTR [edx-0x131f710b]
  40992f:	je     0x4098f9
  409931:	cs xchg ecx,eax
  409933:	adc    DWORD PTR ss:[ebp-0x6a],edi
  409937:	dec    esi
  409938:	sub    eax,0x5754c5b9
  40993d:	cmp    dl,BYTE PTR [esi]
  40993f:	pop    eax
  409940:	addr16 (bad) 
  409942:	sbb    bl,bh
  409944:	and    al,0x32
  409946:	sbb    BYTE PTR [eax+0x75790bd4],dl
  40994c:	mov    ah,0x54
  40994e:	fild   QWORD PTR [eax-0x48]
  409951:	(bad)  
  409952:	lock pushf 
  409954:	out    dx,al
  409955:	jge    0x409924
  409957:	and    DWORD PTR [eax+ebx*2],0xa0611165
  40995e:	mov    DWORD PTR [esi-0x736d768d],edx
  409964:	test   DWORD PTR [eax-0x35ae2fd4],eax
  40996a:	mov    cl,0x5
  40996c:	mov    bh,0xf1
  40996e:	imul   ebx,DWORD PTR [edx],0x45ae15eb
  409974:	and    edi,DWORD PTR [eax+eiz*8-0x4fd7050e]
  40997b:	enter  0x804f,0xd7
  40997f:	push   ss
  409980:	mov    esi,0xcd1b03f8
  409985:	imul   ebx,DWORD PTR [ebx-0x76],0xc511365f
  40998c:	add    WORD PTR [ebx-0x304496],si
  409993:	inc    ebx
  409994:	or     al,0x71
  409996:	(bad)  
  409998:	pop    edx
  409999:	fsubr  QWORD PTR [ebx]
  40999b:	(bad)  
  40999d:	xor    cl,dh
  40999f:	dec    edi
  4099a0:	and    esp,0xd3832b5
  4099a6:	mov    edx,0x8be5a0b7
  4099ab:	dec    esi
  4099ac:	ja     0x4099c3
  4099ae:	jno    0x409935
  4099b0:	cmp    eax,0x31879eed
  4099b5:	mov    ds:0xb4c9abc,eax
  4099ba:	pop    ecx
  4099bb:	sub    al,0x48
  4099bd:	sbb    cl,bh
  4099bf:	jl     0x4099eb
  4099c1:	stc    
  4099c2:	retf   0xd1d5
  4099c5:	and    eax,DWORD PTR [edx+esi*1-0x2a1e3456]
  4099cc:	adc    eax,0xeeac51dd
  4099d1:	retf   
  4099d2:	inc    edx
  4099d3:	mov    WORD PTR [edx-0x23],ds
  4099d6:	stc    
  4099d7:	sahf   
  4099d8:	xor    BYTE PTR [ecx+0x50],cl
  4099db:	not    cl
  4099dd:	and    DWORD PTR ds:0x2c4df106,0x1e6cb2e4
  4099e7:	int    0x53
  4099e9:	pop    ss
  4099ea:	test   DWORD PTR [edi+ebx*4-0x42],esp
  4099ee:	enter  0xb8,0x4a
  4099f2:	mov    esp,0x97cb594c
  4099f7:	sub    DWORD PTR [ebx+edi*4-0x1a],edx
  4099fb:	out    0xd6,eax
  4099fd:	mov    ds:0x259afe4e,al
  409a02:	imul   ah
  409a04:	jl     0x409a03
  409a06:	cmp    BYTE PTR [esi],ch
  409a08:	jge    0x409a86
  409a0a:	mov    esi,0x7af1f4f9
  409a0f:	xor    eax,0x52cb637a
  409a14:	mov    esi,0x3fa15728
  409a19:	aas    
  409a1a:	mov    ecx,es
  409a1c:	adc    dh,BYTE PTR [ecx-0x3ca09453]
  409a22:	pushf  
  409a23:	not    BYTE PTR [eax+0x33]
  409a26:	das    
  409a27:	mov    esi,DWORD PTR [esi]
  409a29:	lods   al,BYTE PTR ds:[esi]
  409a2a:	cdq    
  409a2b:	push   eax
  409a2d:	push   ss
  409a2e:	mov    bl,0xd3
  409a30:	or     eax,0xaafda4ff
  409a35:	xor    BYTE PTR [edi+0x1b],bh
  409a38:	das    
  409a39:	inc    ebp
  409a3a:	and    bl,BYTE PTR [ebx-0x4f0b8bd7]
  409a40:	push   ss
  409a41:	pusha  
  409a42:	dec    esi
  409a43:	inc    ecx
  409a44:	or     al,dh
  409a46:	add    dl,BYTE PTR [ecx-0x14]
  409a49:	push   ds
  409a4a:	mov    eax,0x3da81929
  409a4f:	int3   
  409a50:	leave  
  409a51:	xor    eax,0xa29a8fe3
  409a56:	loop   0x409a05
  409a58:	daa    
  409a59:	sub    eax,0x5d26c4d3
  409a5e:	hlt    
  409a5f:	or     BYTE PTR [ecx+edi*8-0x13],ah
  409a63:	mul    BYTE PTR cs:[esi+0x575e2a60]
  409a6a:	aam    0x14
  409a6c:	repz add al,BYTE PTR [esi-0x118f2b23]
  409a73:	push   eax
  409a74:	les    eax,FWORD PTR [edx-0x50]
  409a77:	adc    ah,dh
  409a79:	push   edi
  409a7a:	ficom  WORD PTR [edx]
  409a7c:	test   bh,bl
  409a7e:	xchg   ebx,ebp
  409a80:	lods   al,BYTE PTR ds:[esi]
  409a81:	xor    ecx,DWORD PTR [ebx]
  409a83:	jp     0x409ada
  409a85:	mov    dh,0x8c
  409a87:	xor    ah,ah
  409a89:	adc    al,0xdf
  409a8b:	pop    esp
  409a8c:	shl    BYTE PTR [eax+0x26abf35c],0x36
  409a93:	jecxz  0x409b12
  409a95:	inc    eax
  409a96:	sar    DWORD PTR [esi+0x28e9ba67],1
  409a9c:	bound  esi,QWORD PTR [ebx+ebp*2-0x3dda12a]
  409aa3:	stos   BYTE PTR es:[edi],al
  409aa4:	sar    BYTE PTR [eax-0xf85b85f],0xa4
  409aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aac:	retf   
  409aad:	mov    ecx,ebx
  409aaf:	jno    0x409b17
  409ab1:	mov    eax,ds:0xe76615cb
  409ab6:	das    
  409ab7:	mov    al,0x3f
  409ab9:	jnp    0x409ade
  409abb:	cmp    BYTE PTR [ebp+0x4ce24a92],0x70
  409ac2:	mov    eax,ds:0x651e71ab
  409ac7:	or     BYTE PTR [ebp+0x7e],ch
  409aca:	std    
  409acb:	stc    
  409acc:	push   esp
  409acd:	or     ch,0xb8
  409ad0:	xchg   DWORD PTR [esi-0x72],edi
  409ad3:	in     eax,dx
  409ad4:	mov    ebx,0x415721c2
  409ad9:	jecxz  0x409aa4
  409adb:	inc    ecx
  409adc:	mov    DWORD PTR [ecx+0x24],esi
  409adf:	push   edi
  409ae0:	scas   eax,DWORD PTR es:[edi]
  409ae1:	sahf   
  409ae2:	dec    edx
  409ae3:	leave  
  409ae4:	retf   
  409ae5:	inc    cl
  409ae7:	ret    
  409ae8:	mov    ebp,ecx
  409aea:	sbb    ah,ch
  409aec:	cmp    bl,BYTE PTR [edi+esi*4]
  409aef:	ffree  st(7)
  409af1:	push   eax
  409af2:	out    dx,al
  409af3:	add    DWORD PTR [ecx-0x7fcbd1d4],0xffffffc7
  409afa:	arpl   WORD PTR [eax-0x37],bp
  409afd:	rcl    DWORD PTR [edi-0x12a76f66],1
  409b03:	in     eax,0x2d
  409b05:	jno    0x409a8f
  409b07:	test   DWORD PTR ds:0x103daaea,ecx
  409b0e:	(bad)  
  409b0f:	out    dx,eax
  409b10:	aaa    
  409b11:	or     eax,0x8458762b
  409b16:	cmp    DWORD PTR [ebp-0x35],edi
  409b19:	jg     0x409b61
  409b1b:	add    eax,0xa101a9b8
  409b20:	add    eax,0x56464b5f
  409b25:	jmp    0xbdaeddb
  409b2a:	stos   BYTE PTR es:[edi],al
  409b2b:	(bad)  
  409b2c:	ins    DWORD PTR es:[edi],dx
  409b2d:	repnz pop esp
  409b2f:	dec    edx
  409b30:	mov    edx,0x4f89133a
  409b35:	pop    edx
  409b36:	loope  0x409b50
  409b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b39:	fwait
  409b3a:	shr    DWORD PTR [esi+0x6b54c53f],1
  409b40:	mov    ds:0xf76b8457,eax
  409b45:	loopne 0x409bab
  409b47:	jl     0x409b38
  409b49:	hlt    
  409b4a:	les    edx,FWORD PTR [edx-0x1041c7d3]
  409b50:	jl     0x409b0d
  409b52:	fsubrp st(4),st
  409b54:	jp     0x409b17
  409b56:	jmp    0x409b06
  409b58:	repz jo 0x409b28
  409b5b:	ins    DWORD PTR es:[edi],dx
  409b5c:	and    al,0xa0
  409b5e:	adc    BYTE PTR [edx+0x68779288],bh
  409b64:	jo     0x409b98
  409b66:	add    eax,0xedcfebe4
  409b6b:	lahf   
  409b6c:	nop
  409b6d:	mov    esi,0x9f2b02ee
  409b72:	rcr    BYTE PTR [esi],1
  409b74:	add    BYTE PTR [ebx+0x19a64411],dh
  409b7a:	rcr    edi,0x3
  409b7d:	pop    esi
  409b7e:	or     ch,BYTE PTR [eax-0x1b]
  409b81:	out    0xed,al
  409b83:	in     eax,0xa6
  409b85:	jmp    0x7d26af9d
  409b8a:	aam    0xb4
  409b8c:	ins    DWORD PTR es:[edi],dx
  409b8d:	lahf   
  409b8e:	or     al,0x9c
  409b90:	es icebp 
  409b92:	jo     0x409bba
  409b94:	dec    edx
  409b95:	js     0x409bed
  409b97:	add    eax,0xcfce69ef
  409b9c:	add    al,0xf9
  409b9e:	sbb    DWORD PTR [eax-0x2d],eax
  409ba1:	dec    esi
  409ba2:	mov    bh,0xce
  409ba4:	mul    DWORD PTR [esi+0x4078f567]
  409baa:	adc    al,0xb0
  409bac:	mov    esi,0x7552ab10
  409bb1:	jle    0x409bdb
  409bb3:	pop    ebx
  409bb4:	pop    edx
  409bb5:	mov    dh,0x88
  409bb7:	out    dx,eax
  409bb8:	sbb    ebx,0x2df777c0
  409bbe:	(bad)  
  409bbf:	adc    edi,DWORD PTR [esi]
  409bc1:	adc    DWORD PTR [ecx],ebx
  409bc3:	xchg   ebp,eax
  409bc4:	dec    eax
  409bc5:	jl     0x409be0
  409bc7:	aad    0x69
  409bc9:	inc    eax
  409bca:	xchg   DWORD PTR [edi-0x9],ebp
  409bcd:	das    
  409bce:	cmc    
  409bcf:	cmp    DWORD PTR [ebx-0x74a1270e],0xea5c0eed
  409bd9:	fisub  WORD PTR [ebp+0xb]
  409bdc:	outs   dx,BYTE PTR ds:[esi]
  409bdd:	adc    BYTE PTR [ebp+0x1e],ah
  409be0:	jmp    0xb451c7e1
  409be5:	inc    edi
  409be6:	xchg   esi,eax
  409be7:	add    edi,DWORD PTR [edx]
  409be9:	mov    ebx,DWORD PTR [edi+edi*8-0x2]
  409bed:	and    eax,ebp
  409bef:	fcomp  st(2)
  409bf1:	sub    dh,BYTE PTR ds:0x9570a497
  409bf7:	inc    esp
  409bf8:	jne    0x409b99
  409bfa:	das    
  409bfb:	mov    ecx,0xe55d4404
  409c00:	xchg   DWORD PTR [esi],edi
  409c02:	cmp    DWORD PTR [ecx],ecx
  409c04:	jmp    0x409bb0
  409c06:	(bad)  
  409c07:	dec    esi
  409c08:	add    DWORD PTR [esi-0x5c337378],esp
  409c0e:	fisubr DWORD PTR gs:[esp+edi*2-0x1]
  409c13:	jmp    0x409c51
  409c15:	je     0x409bdc
  409c17:	add    cl,ah
  409c19:	addr16 test al,0xd7
  409c1c:	push   ds
  409c1d:	and    eax,DWORD PTR [esi-0x175a5d52]
  409c23:	std    
  409c24:	(bad)  
  409c25:	fs or  al,0xfc
  409c28:	scas   eax,DWORD PTR es:[edi]
  409c29:	adc    DWORD PTR [ecx-0x78],ebp
  409c2c:	mov    eax,0xacc2166f
  409c31:	or     al,0xc
  409c33:	push   edi
  409c34:	push   0x5c
  409c36:	add    eax,0xbe8dafa9
  409c3b:	push   0x64bb74b8
  409c40:	ret    0xc66f
  409c43:	jo     0x409c93
  409c45:	sub    BYTE PTR [eax],bh
  409c47:	test   eax,0x2570e7f0
  409c4c:	jge    0x409caf
  409c4e:	idiv   BYTE PTR [edx]
  409c50:	or     BYTE PTR [esi+0x1c8edca7],bl
  409c56:	xchg   DWORD PTR [ebx+0x7f773cd4],ebp
  409c5c:	arpl   WORD PTR [ecx+eax*8+0x4076ab05],di
  409c63:	jae    0x409caf
  409c65:	or     al,BYTE PTR [ebp-0x273b3f2a]
  409c6b:	and    DWORD PTR [edi],eax
  409c6d:	cmp    ah,al
  409c6f:	call   0x2b80281a
  409c74:	stos   BYTE PTR es:[edi],al
  409c75:	mov    ecx,0xd197eb5f
  409c7a:	nop
  409c7b:	lods   eax,DWORD PTR ds:[esi]
  409c7d:	dec    ecx
  409c7e:	lods   al,BYTE PTR ds:[esi]
  409c7f:	sbb    bl,BYTE PTR [ebx+0x18]
  409c82:	jb     0x409c31
  409c84:	dec    esi
  409c85:	aam    0x6b
  409c87:	jl     0x409ce6
  409c89:	repz js 0x409ccd
  409c8c:	sbb    BYTE PTR [eax+0x29],dl
  409c8f:	dec    edi
  409c90:	les    esi,FWORD PTR [edx+0x21]
  409c93:	pop    eax
  409c94:	push   ebx
  409c95:	adc    BYTE PTR [edi-0x3e],cl
  409c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c99:	imul   esp,DWORD PTR [ecx+0x25dc73f9],0xffffffd3
  409ca0:	or     BYTE PTR [ebx-0x2a3b08df],bl
  409ca6:	sub    al,0x78
  409ca8:	push   ss
  409ca9:	mov    al,0x99
  409cab:	(bad)  
  409cac:	bound  esp,QWORD PTR [ebx+0x6fcd13c0]
  409cb2:	aaa    
  409cb3:	sahf   
  409cb4:	inc    eax
  409cb5:	call   0xe642:0xf4292b7b
  409cbc:	pop    ds
  409cbd:	stos   BYTE PTR es:[edi],al
  409cbe:	lahf   
  409cbf:	pop    edx
  409cc0:	cmc    
  409cc1:	pop    ebp
  409cc2:	lahf   
  409cc3:	retf   0x187b
  409cc6:	mov    ecx,DWORD PTR [esi]
  409cc8:	mov    eax,fs
  409cca:	ins    BYTE PTR es:[edi],dx
  409ccb:	aas    
  409ccc:	add    eax,0xd0bbf565
  409cd1:	in     al,dx
  409cd2:	jge    0x409c91
  409cd4:	mov    ah,0xaf
  409cd6:	into   
  409cd7:	and    esp,eax
  409cd9:	(bad)  
  409cdb:	in     eax,0x2
  409cdd:	push   0xffffffd9
  409cdf:	jno    0x409d18
  409ce1:	fistp  DWORD PTR [edi+eiz*8-0x46a24f54]
  409ce8:	push   cs
  409ce9:	fsubr  DWORD PTR [edx]
  409ceb:	stos   DWORD PTR es:[edi],eax
  409cec:	add    BYTE PTR [ebx],bl
  409cee:	mov    esi,0x877a1265
  409cf3:	lods   al,BYTE PTR ds:[esi]
  409cf4:	jmp    0xc72a87
  409cf9:	out    dx,al
  409cfa:	(bad)  
  409cfb:	sbb    bh,BYTE PTR [esp+edx*1]
  409cfe:	jo     0x409d4c
  409d00:	ins    BYTE PTR es:[edi],dx
  409d01:	xor    al,0x49
  409d03:	xchg   ecx,eax
  409d04:	mov    al,ds:0x95075b18
  409d09:	inc    esp
  409d0a:	mov    esp,0x782b8138
  409d0f:	sub    DWORD PTR [ebp-0x3fe0d5a6],eax
  409d15:	shl    BYTE PTR [eax+0x7349172e],0x69
  409d1c:	shl    DWORD PTR [ebx+esi*8-0x3f],0xbe
  409d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d22:	jns    0x409da1
  409d24:	js     0x409d56
  409d26:	jbe    0x409cb5
  409d28:	sbb    al,cl
  409d2a:	sub    BYTE PTR [esi-0x49],0x68
  409d2e:	mov    al,0xe4
  409d30:	pop    es
  409d31:	push   esi
  409d32:	sub    eax,0x655ab1db
  409d37:	mov    eax,ds:0xa8054585
  409d3c:	xchg   esi,eax
  409d3d:	fwait
  409d3e:	sub    edx,DWORD PTR ds:0x52ec052d
  409d44:	pop    edi
  409d45:	mov    ch,cl
  409d47:	jbe    0x409db5
  409d49:	cmp    cl,BYTE PTR [ecx]
  409d4b:	add    eax,0x54ed6d32
  409d50:	leave  
  409d51:	push   edi
  409d52:	xor    DWORD PTR [edi+0x2d],edi
  409d55:	shl    ebx,0xe3
  409d58:	xchg   edi,eax
  409d59:	dec    edi
  409d5a:	sbb    eax,0xbe29490c
  409d5f:	cdq    
  409d60:	or     al,0x8f
  409d62:	xor    BYTE PTR ds:[esp+eax*2],ch
  409d66:	jl     0x409cf3
  409d68:	pop    ss
  409d69:	cli    
  409d6a:	fnstcw WORD PTR ss:[ecx]
  409d6d:	jnp    0x409d28
  409d6f:	into   
  409d70:	mov    edi,0x723f98a4
  409d75:	mov    dl,bl
  409d77:	mov    ebp,0x5d26ccfc
  409d7c:	dec    ebp
  409d7d:	jbe    0x409d65
  409d7f:	pop    ebp
  409d80:	addr16 sti 
  409d82:	out    0x87,al
  409d84:	push   ds
  409d85:	(bad)  
  409d86:	jns    0x409dea
  409d88:	es cli 
  409d8a:	mov    esi,0xe58f5b7e
  409d8f:	pop    ds
  409d90:	jno    0x409df3
  409d92:	dec    ecx
  409d93:	mov    ds:0xf07bf0b8,eax
  409d98:	xor    DWORD PTR [eax],ecx
  409d9a:	daa    
  409d9b:	dec    edi
  409d9c:	xchg   ecx,eax
  409d9d:	iret   
  409d9e:	lods   eax,DWORD PTR ds:[esi]
  409d9f:	mov    ebp,0x848d9a25
  409da4:	ret    
  409da5:	mov    BYTE PTR ds:0xa069f9f,al
  409dab:	pop    ds
  409dac:	jle    0x409dbd
  409dae:	push   0xce4f6f4d
  409db3:	rol    DWORD PTR [ecx],cl
  409db5:	std    
  409db6:	sbb    eax,DWORD PTR [edi]
  409db8:	sbb    edi,ebp
  409dba:	xor    eax,0x222574fc
  409dbf:	and    al,0x72
  409dc1:	dec    edi
  409dc2:	adc    eax,0x9ca81fca
  409dc7:	jmp    0x9d04cf70
  409dcc:	lods   al,BYTE PTR ds:[esi]
  409dcd:	scas   al,BYTE PTR es:[edi]
  409dce:	inc    DWORD PTR [edx+0x14]
  409dd1:	mov    ah,0x3b
  409dd3:	retf   
  409dd4:	in     eax,0x2a
  409dd6:	xlat   BYTE PTR ds:[ebx]
  409dd7:	cmp    al,0xc1
  409dd9:	or     eax,0x1e0df3a6
  409dde:	sub    ch,BYTE PTR ds:0xc2a6dc0f
  409de4:	test   BYTE PTR [esi],0x61
  409de7:	xchg   ecx,eax
  409de8:	push   0xe8457f56
  409ded:	mov    esp,0x5c9c995c
  409df2:	call   0x4de0:0xc3eb5578
  409df9:	or     BYTE PTR [esi-0x39d52a96],bh
  409dff:	bound  esi,QWORD PTR cs:[ecx-0x6d]
  409e03:	sbb    al,0xbb
  409e05:	pop    DWORD PTR [esi+0x5f]
  409e08:	idiv   ah
  409e0a:	and    al,0xae
  409e0c:	push   0x2c778a79
  409e11:	xor    DWORD PTR ds:[esi-0x54837f5],ebp
  409e18:	test   BYTE PTR [esp+edi*8],ah
  409e1b:	xlat   BYTE PTR ds:[ebx]
  409e1c:	neg    al
  409e1e:	adc    dh,dl
  409e20:	lods   eax,DWORD PTR ds:[esi]
  409e21:	xor    BYTE PTR [esi+0x35318cfa],bh
  409e27:	mov    cl,0x3
  409e29:	mov    bl,BYTE PTR [esi+0x10]
  409e2c:	adc    DWORD PTR [edx],edx
  409e2e:	inc    eax
  409e2f:	data16 jb 0x409dbd
  409e32:	mov    ds:0x7b8618de,eax
  409e37:	fwait
  409e38:	xchg   ebx,eax
  409e39:	pop    edi
  409e3a:	mov    ah,0x91
  409e3c:	je     0x409e6c
  409e3e:	pop    ecx
  409e3f:	jmp    0x409e64
  409e41:	(bad)  
  409e43:	sbb    al,0x1c
  409e45:	pop    edx
  409e46:	xor    eax,0xd51a9e9e
  409e4b:	sbb    ch,dh
  409e4d:	xlat   BYTE PTR ds:[ebx]
  409e4e:	stos   BYTE PTR es:[edi],al
  409e4f:	dec    eax
  409e50:	int    0xee
  409e52:	mov    edx,0x728e75ba
  409e57:	call   0x87d49f4e
  409e5c:	xchg   edx,eax
  409e5d:	in     al,dx
  409e5e:	sbb    esp,edi
  409e60:	push   ss
  409e61:	push   edx
  409e62:	jp     0x409dfa
  409e64:	fild   WORD PTR [edi+eax*2]
  409e67:	lods   eax,DWORD PTR ds:[esi]
  409e68:	pop    esp
  409e69:	jecxz  0x409e64
  409e6b:	dec    ebp
  409e6c:	call   0xcb5ce606
  409e71:	add    BYTE PTR [ecx],bh
  409e73:	fstp   TBYTE PTR [ebp-0x7b]
  409e76:	jmp    0x58b184e2
  409e7b:	leave  
  409e7c:	jne    0x409e4e
  409e7e:	jge    0x409e8b
  409e80:	cmp    ebp,DWORD PTR [ebx-0x65aad8a7]
  409e86:	test   eax,0x18aee0c0
  409e8b:	in     al,dx
  409e8c:	dec    eax
  409e8d:	idiv   bh
  409e8f:	loop   0x409e89
  409e91:	iret   
  409e92:	je     0x409f13
  409e94:	push   esp
  409e95:	outs   dx,BYTE PTR ds:[esi]
  409e96:	icebp  
  409e97:	ss sbb eax,0x8ebe23ce
  409e9d:	lds    esp,FWORD PTR [eax+0x42]
  409ea0:	test   eax,0xdb407b39
  409ea5:	fdivr  st(6),st
  409ea7:	cdq    
  409ea8:	scas   eax,DWORD PTR es:[edi]
  409ea9:	pop    ss
  409eaa:	lods   al,BYTE PTR ds:[esi]
  409eab:	test   BYTE PTR [ebp-0x46],dh
  409eae:	shl    esi,cl
  409eb0:	or     BYTE PTR [ebp+0x5],0x95
  409eb4:	xchg   BYTE PTR [esi-0x5904846b],al
  409eba:	adc    esi,ebx
  409ebc:	sub    eax,0xe7c665b5
  409ec1:	jmp    0x151f:0x9fd2c3e6
  409ec8:	jg     0x409ecc
  409eca:	inc    esp
  409ecb:	lea    ebp,[ebp-0x65]
  409ece:	mov    ds:0xf0f569,al
  409ed3:	xchg   BYTE PTR [ebx],ah
  409ed5:	ins    BYTE PTR es:[edi],dx
  409ed6:	ret    
  409ed7:	add    eax,edi
  409ed9:	pusha  
  409eda:	repnz shl BYTE PTR [eax-0x6],0x8d
  409edf:	push   ecx
  409ee0:	rcl    BYTE PTR [ecx-0x6c38626f],cl
  409ee6:	sahf   
  409ee7:	fild   QWORD PTR [edi-0xdf3afc]
  409eed:	cli    
  409eee:	jmp    DWORD PTR [ecx-0x347aee60]
  409ef4:	mov    DWORD PTR [esi],eax
  409ef6:	push   edx
  409ef7:	inc    eax
  409ef8:	test   BYTE PTR [esi],dh
  409efa:	mov    ch,0x61
  409efc:	push   edx
  409efd:	ins    BYTE PTR es:[edi],dx
  409efe:	(bad)  [edi+0x61]
  409f01:	mov    BYTE PTR [eax-0x71fc5866],bl
  409f07:	cmp    ah,BYTE PTR [esi+ebx*4]
  409f0a:	lahf   
  409f0b:	adc    DWORD PTR [ecx-0x3500b9b1],ebx
  409f11:	jp     0x409edf
  409f13:	push   esi
  409f14:	dec    BYTE PTR [edx-0x4891031a]
  409f1a:	pop    esi
  409f1b:	js     0x409f30
  409f1d:	push   esp
  409f1e:	mov    DWORD PTR [edi],eax
  409f20:	and    eax,edx
  409f22:	jmp    0xa941d2fd
  409f27:	push   es
  409f28:	in     eax,dx
  409f29:	jl     0x409ecf
  409f2b:	int    0x98
  409f2d:	sbb    eax,0x9117ed93
  409f32:	ficom  DWORD PTR [eax+0x579fd4ea]
  409f38:	xor    al,BYTE PTR [ecx+ecx*1+0x16c9c566]
  409f3f:	arpl   WORD PTR [esi+0x589c5321],ax
  409f45:	add    dh,BYTE PTR [esi-0x5048cf5e]
  409f4b:	fwait
  409f4c:	jns    0x409f4b
  409f4e:	fnstenv [edi]
  409f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f51:	jae    0x409efc
  409f53:	fwait
  409f54:	nop
  409f55:	cmp    dl,BYTE PTR [eax+eiz*2-0x2e967d13]
  409f5c:	adc    dh,BYTE PTR [esi-0x25317a29]
  409f62:	dec    edx
  409f63:	xor    eax,0x64db25b2
  409f68:	jns    0x409f3b
  409f6a:	inc    esp
  409f6b:	xor    dl,0x68
  409f6e:	cmp    al,0x92
  409f70:	mov    ebp,0x7fb8b901
  409f75:	in     eax,dx
  409f76:	pop    es
  409f77:	mov    ebx,0xccb6f0d8
  409f7c:	mov    ds:0x76929101,eax
  409f81:	xor    DWORD PTR [eax-0x58],edx
  409f84:	jmp    0x409f66
  409f86:	mov    dh,0xf8
  409f88:	pop    eax
  409f89:	dec    BYTE PTR [eax+0x2c]
  409f8c:	popf   
  409f8d:	outs   dx,DWORD PTR ds:[esi]
  409f8e:	sahf   
  409f8f:	fiadd  DWORD PTR [edi-0x4a6d1a66]
  409f95:	add    al,0x2a
  409f97:	push   eax
  409f98:	mov    ah,0xa2
  409f9a:	jecxz  0x40a008
  409f9c:	pop    edx
  409f9d:	cld    
  409f9e:	lock dec ecx
  409fa0:	fnstcw WORD PTR [esi-0x21]
  409fa3:	pop    esi
  409fa4:	mov    bl,0x59
  409fa6:	lods   al,BYTE PTR ds:[esi]
  409fa7:	sbb    al,0xde
  409fa9:	sub    BYTE PTR [edi],0x30
  409fac:	ret    
  409fad:	aas    
  409fae:	pop    ebx
  409faf:	xchg   edi,eax
  409fb0:	xchg   ebx,eax
  409fb1:	out    dx,eax
  409fb2:	shl    BYTE PTR [ebp+0x35],0xcc
  409fb6:	and    ch,0xaa
  409fb9:	jo     0x409f6d
  409fbb:	scas   al,BYTE PTR es:[edi]
  409fbc:	outs   dx,DWORD PTR ds:[esi]
  409fbd:	pop    esi
  409fbe:	adc    DWORD PTR [esi-0x4da9a610],eax
  409fc4:	rol    DWORD PTR [ebp-0x62],1
  409fc7:	jns    0x409fcf
  409fc9:	jne    0x409fc1
  409fcb:	and    esi,0xb
  409fce:	xchg   edi,eax
  409fcf:	cli    
  409fd0:	mov    BYTE PTR [eax-0x7c9839ae],cl
  409fd6:	out    dx,eax
  409fd7:	mov    gs,WORD PTR [edi+0x45]
  409fda:	jns    0x409fab
  409fdc:	sbb    BYTE PTR [ecx+0x13854fcb],bl
  409fe2:	inc    ebp
  409fe3:	neg    BYTE PTR [bx+si+0x3541]
  409fe8:	push   es
  409fe9:	mov    al,0xa1
  409feb:	cld    
  409fec:	aad    0xc9
  409fee:	(bad)  
  409fef:	int    0xa8
  409ff1:	pop    ebx
  409ff2:	rcr    DWORD PTR [eax-0x72],0xd3
  409ff6:	enter  0x4321,0x7f
  409ffa:	cmp    BYTE PTR [eax+0x750d185e],dl
  40a000:	out    0x8b,eax
  40a002:	or     al,0x14
  40a004:	das    
  40a005:	xor    eax,0xddf08684
  40a00a:	into   
  40a00b:	mov    edi,0x2b73a9ac
  40a010:	sbb    BYTE PTR [edi],al
  40a012:	aas    
  40a013:	daa    
  40a014:	retf   0xf215
  40a017:	pop    eax
  40a018:	or     BYTE PTR [ebx+0x162f34e7],bh
  40a01e:	and    BYTE PTR [eax],0x1c
  40a021:	jl     0x409fb0
  40a023:	pminub mm1,QWORD PTR [eax-0xf9a22a1]
  40a02a:	shr    edi,cl
  40a02c:	xor    BYTE PTR [ebx+0x61],0x45
  40a030:	ja     0x409fd0
  40a032:	mov    esp,0x5c45298d
  40a037:	ins    BYTE PTR es:[edi],dx
  40a038:	push   edi
  40a039:	fwait
  40a03a:	sbb    BYTE PTR [esp+ebp*2+0x14e82b26],dl
  40a041:	ds inc ebp
  40a043:	aad    0x82
  40a045:	mov    dh,0xca
  40a047:	mov    ebx,0x170fe78e
  40a04c:	or     al,0x7d
  40a04e:	sbb    esp,edi
  40a050:	leave  
  40a051:	aam    0x2b
  40a053:	pop    esp
  40a054:	or     BYTE PTR [edx+0x3da0f986],bh
  40a05a:	push   cs
  40a05b:	add    BYTE PTR ds:[ebx+0x61a5789b],dl
  40a062:	outs   dx,DWORD PTR ds:[esi]
  40a063:	sub    eax,0x4561b17f
  40a068:	dec    ebx
  40a069:	add    al,0xf
  40a06b:	jle    0x40a057
  40a06d:	sbb    ebp,DWORD PTR [eax-0x17]
  40a070:	jp     0x40a0e4
  40a072:	clc    
  40a073:	nop
  40a074:	jmp    0x40a075
  40a076:	pop    ebp
  40a077:	xor    al,bl
  40a079:	data16 jno 0x40a052
  40a07c:	mov    esi,0x34587d57
  40a081:	push   edx
  40a082:	(bad)  [ecx+0x1aa0b9c5]
  40a088:	add    bh,BYTE PTR [edi+0x28]
  40a08b:	mov    eax,0x32847970
  40a090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a091:	out    dx,eax
  40a092:	sub    eax,0x1cfa93b0
  40a097:	leave  
  40a098:	dec    ebx
  40a099:	jae    0x40a085
  40a09b:	mov    ch,0x7d
  40a09d:	mov    eax,0xcdebf268
  40a0a2:	cmp    BYTE PTR [esi+edx*8-0x75ab41e9],ah
  40a0a9:	(bad)  
  40a0aa:	leave  
  40a0ab:	(bad)  
  40a0ac:	std    
  40a0ad:	xchg   esi,eax
  40a0ae:	jle    0x40a08b
  40a0b0:	lock xchg DWORD PTR [edx+eax*1],ebx
  40a0b4:	inc    ebp
  40a0b5:	out    0x2c,al
  40a0b7:	mov    edi,0xfb24fe4
  40a0bc:	fisubr DWORD PTR [edx+0x188a7016]
  40a0c2:	mov    ecx,0x9204de14
  40a0c7:	push   esi
  40a0c8:	mov    DWORD PTR [edx],esp
  40a0ca:	cmp    al,0xf1
  40a0cc:	cmp    al,0xfc
  40a0ce:	jl     0x40a099
  40a0d0:	adc    ch,BYTE PTR [esi-0x3a07300b]
  40a0d6:	inc    edx
  40a0d7:	adc    ecx,DWORD PTR ds:0x890235e8
  40a0dd:	sti    
  40a0de:	sub    al,0x31
  40a0e0:	jns    0x40a0b1
  40a0e2:	sub    al,0xb5
  40a0e4:	shl    DWORD PTR [eax+0x2e],1
  40a0e7:	mov    ch,BYTE PTR [ecx-0x6b1ecc67]
  40a0ed:	jl     0x40a07f
  40a0ef:	sbb    al,0xc5
  40a0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f2:	retf   
  40a0f3:	add    dh,bh
  40a0f5:	ror    DWORD PTR [ecx+0x7f],1
  40a0f8:	mov    eax,esi
  40a0fa:	jle    0x40a16b
  40a0fc:	fnstenv [ebp+0x9]
  40a0ff:	shl    BYTE PTR [edi],cl
  40a101:	jl     0x40a0a8
  40a103:	adc    cl,BYTE PTR [eax-0x7e7724df]
  40a109:	or     dh,bh
  40a10b:	or     eax,0x5db985d2
  40a110:	dec    ebp
  40a111:	pop    edi
  40a112:	push   esi
  40a113:	into   
  40a114:	xor    ebx,DWORD PTR [eax+0x79]
  40a117:	inc    ebp
  40a118:	and    BYTE PTR [ebx-0x30],cl
  40a11b:	shr    cl,cl
  40a11d:	mov    al,0x49
  40a11f:	mov    ebx,0xa63e8377
  40a124:	or     DWORD PTR [ebx],ebx
  40a126:	or     al,0xcd
  40a128:	xchg   DWORD PTR [edi],eax
  40a12a:	scas   al,BYTE PTR es:[edi]
  40a12b:	loope  0x40a19b
  40a12d:	xor    BYTE PTR [eax],ch
  40a12f:	stos   BYTE PTR es:[edi],al
  40a130:	xchg   BYTE PTR [esi+0x38],cl
  40a133:	and    ch,BYTE PTR [eax-0x5c]
  40a136:	fwait
  40a137:	and    BYTE PTR [ebp+0x69],cl
  40a13a:	inc    edi
  40a13b:	into   
  40a13c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a13e:	iret   
  40a13f:	or     BYTE PTR [eax+eiz*8+0x60dffced],dh
  40a146:	outs   dx,DWORD PTR ds:[esi]
  40a147:	jge    0x40a0e8
  40a149:	je     0x40a1b5
  40a14b:	mov    ebx,0xd99aeb5a
  40a150:	sbb    al,0x45
  40a152:	xlat   BYTE PTR ds:[ebx]
  40a153:	call   0xe0700ac
  40a158:	inc    edi
  40a159:	cmp    ebx,edx
  40a15b:	push   ecx
  40a15c:	int    0x71
  40a15e:	popa   
  40a15f:	and    dl,ch
  40a161:	fist   DWORD PTR [ebx+0x5b]
  40a164:	jmp    0x40a17c
  40a166:	cmp    DWORD PTR [edx-0x5668087d],esi
  40a16c:	popa   
  40a16d:	fld    TBYTE PTR [ebx+0x66]
  40a170:	div    ch
  40a172:	push   ebx
  40a173:	xor    ebp,DWORD PTR [ecx]
  40a175:	in     eax,dx
  40a176:	clc    
  40a177:	psubsb mm7,QWORD PTR [edi+0x441fc961]
  40a17e:	sub    DWORD PTR [ecx],ebx
  40a180:	sub    al,0xde
  40a182:	sbb    cl,BYTE PTR [edx]
  40a184:	jg     0x40a1f8
  40a186:	imul   ebp,DWORD PTR [ebx+0x72f7db60],0x0
  40a18d:	mov    ah,0x73
  40a18f:	mov    ds:0x88f14259,eax
  40a194:	(bad)
  40a197:	and    BYTE PTR [eax],ah
  40a199:	push   esi
  40a19a:	rcr    DWORD PTR [ebx],0x49
  40a19d:	add    al,0xf
  40a19f:	fcomp  DWORD PTR [ebp+0x6c]
  40a1a2:	jge    0x40a1dd
  40a1a4:	add    eax,0x677216e5
  40a1a9:	xchg   edi,eax
  40a1aa:	and    BYTE PTR [esi+0x57],0xd3
  40a1ae:	imul   esp,DWORD PTR [ebp+0xa93a01b],0x2199ccc
  40a1b8:	mov    ch,dl
  40a1ba:	outs   dx,BYTE PTR ds:[esi]
  40a1bb:	iret   
  40a1bc:	pop    ecx
  40a1bd:	ds pop esi
  40a1bf:	mov    al,0x53
  40a1c1:	(bad)  
  40a1c2:	cmp    ebp,DWORD PTR [ebp-0x24]
  40a1c5:	jp     0x40a1f6
  40a1c7:	out    0xf4,eax
  40a1c9:	out    0xe8,eax
  40a1cb:	or     DWORD PTR [ebx+0x5144b8ac],esi
  40a1d1:	add    eax,0xcd1bf2c6
  40a1d6:	retf   0x1cab
  40a1d9:	imul   ecx
  40a1db:	repnz push 0xb6501461
  40a1e1:	xor    esp,edx
  40a1e3:	fs mov ebx,0xab1ebbc0
  40a1e9:	enter  0xdd4c,0xc6
  40a1ed:	ficomp WORD PTR [ecx]
  40a1ef:	push   esp
  40a1f0:	mov    bh,0xa2
  40a1f2:	fsubr  DWORD PTR [esi]
  40a1f4:	dec    ebp
  40a1f5:	mov    ebx,0xae3cb10c
  40a1fa:	inc    ebx
  40a1fb:	cmp    BYTE PTR [ebx],bh
  40a1fd:	sahf   
  40a1fe:	sbb    cl,al
  40a200:	adc    DWORD PTR [edx],edi
  40a202:	arpl   WORD PTR [ecx+0x61],bp
  40a205:	or     DWORD PTR [ecx+0x21c68333],0xba18cef2
  40a20f:	cmp    al,0xb6
  40a211:	(bad)  
  40a213:	cmc    
  40a214:	or     eax,0xbe2da216
  40a219:	xchg   ecx,eax
  40a21a:	mov    ecx,0xbb97ccc6
  40a21f:	out    0x42,eax
  40a221:	pop    ecx
  40a222:	lods   al,BYTE PTR ds:[esi]
  40a223:	repz out 0x94,ax
  40a227:	sti    
  40a228:	ds mov bh,0xfe
  40a22b:	enter  0x9cf1,0x3
  40a22f:	jmp    0x40a242
  40a231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a232:	aaa    
  40a233:	mov    ah,0xc5
  40a235:	hlt    
  40a236:	xchg   ebp,eax
  40a237:	inc    ebx
  40a238:	cmp    DWORD PTR [edx-0x31],ecx
  40a23b:	mov    bl,0x11
  40a23d:	mov    ds:0x236af38,al
  40a242:	fnsave [eax+0xa3556b6]
  40a248:	jb     0x40a1ed
  40a24a:	xor    DWORD PTR [edx-0x3a],ebx
  40a24d:	cmc    
  40a24e:	jp     0x40a25f
  40a250:	jmp    0xdde1:0x387e330d
  40a257:	mov    ?,esp
  40a259:	cdq    
  40a25a:	ins    BYTE PTR es:[edi],dx
  40a25b:	pushf  
  40a25c:	jl     0x40a1ff
  40a25e:	xchg   edx,eax
  40a25f:	out    0xdb,al
  40a261:	mov    eax,ds:0x7ed0fef
  40a266:	push   eax
  40a267:	mov    dh,0x97
  40a269:	enter  0x1456,0x3
  40a26d:	pop    eax
  40a26e:	mov    DWORD PTR [ecx-0x1e],edx
  40a271:	nop
  40a272:	ja     0x40a2d3
  40a274:	imul   ebx,DWORD PTR [edx],0x70
  40a277:	xchg   esp,eax
  40a278:	call   FWORD PTR [ebx]
  40a27a:	jb     0x40a2ce
  40a27c:	jb     0x40a29a
  40a27e:	jmp    0x40a209
  40a280:	popf   
  40a281:	inc    edi
  40a282:	ds das 
  40a284:	add    bl,al
  40a286:	fsubr  QWORD PTR [edx]
  40a288:	jb     0x40a2fb
  40a28a:	pop    es
  40a28b:	jge    0x40a2d4
  40a28d:	ss (bad) 
  40a28f:	sbb    esp,DWORD PTR [esi]
  40a291:	add    DWORD PTR [eax+0x6512cc3],0x3a
  40a298:	test   DWORD PTR [edx+0x41b46b01],ecx
  40a29e:	imul   edi,ebx,0xeb4f1394
  40a2a4:	rcl    DWORD PTR [esi+ecx*8],cl
  40a2a7:	or     eax,0x79d9e3c1
  40a2ac:	mov    cl,0x2a
  40a2ae:	mov    esp,0x25b267eb
  40a2b3:	cdq    
  40a2b4:	shr    BYTE PTR [eax+0x25],cl
  40a2b7:	(bad)  
  40a2b8:	clc    
  40a2b9:	out    dx,al
  40a2ba:	cmp    al,0x36
  40a2bc:	sbb    eax,0xbbd2d65a
  40a2c1:	pushf  
  40a2c2:	jns    0x40a342
  40a2c4:	je     0x40a322
  40a2c6:	cmp    al,0xb9
  40a2c8:	(bad)  
  40a2c9:	gs push cs
  40a2cb:	or     al,0xd3
  40a2cd:	call   0x5b7:0x837cb752
  40a2d4:	sub    DWORD PTR [ebx],esi
  40a2d6:	test   DWORD PTR [ecx+0x47c212ce],ebp
  40a2dc:	jb     0x40a33b
  40a2de:	ds pop ss
  40a2e0:	stos   BYTE PTR es:[edi],al
  40a2e1:	fidivr WORD PTR [ebx+ebp*2-0x75e40126]
  40a2e8:	cmp    DWORD PTR [eax+0x1f],ecx
  40a2eb:	popa   
  40a2ec:	retf   0xb061
  40a2ef:	fisub  WORD PTR [edi]
  40a2f1:	hlt    
  40a2f2:	outs   dx,DWORD PTR ds:[esi]
  40a2f3:	icebp  
  40a2f4:	lock out 0x83,eax
  40a2f7:	push   ebp
  40a2f8:	xchg   esi,eax
  40a2f9:	lods   al,BYTE PTR ds:[esi]
  40a2fa:	mov    ah,0x1a
  40a2fc:	icebp  
  40a2fd:	vmwrite eax,DWORD PTR [edi]
  40a300:	mov    ebp,0x88d2a816
  40a305:	jmp    0x85a0ee96
  40a30a:	mov    al,BYTE PTR [esi-0x25]
  40a30d:	xor    BYTE PTR [edx-0x4c],al
  40a310:	dec    edx
  40a311:	das    
  40a312:	aas    
  40a313:	mov    edx,DWORD PTR [eax+0x281f881b]
  40a319:	xchg   ebx,eax
  40a31a:	sbb    eax,0x3e12b0f3
  40a31f:	add    dl,BYTE PTR [eax+0x2598ea00]
  40a325:	jbe    0x40a304
  40a327:	ds add eax,0x69ed8e8e
  40a32d:	sbb    eax,0xd2c0e0b
  40a332:	mov    WORD PTR [ebx+0x28],?
  40a335:	jno    0x40a2e3
  40a337:	inc    ecx
  40a338:	icebp  
  40a339:	sbb    edx,DWORD PTR [ecx+0x1e]
  40a33c:	cli    
  40a33d:	xor    BYTE PTR [ebp+0x125a0ea7],0x3f
  40a344:	(bad)  
  40a345:	mov    eax,ds:0x3131f5db
  40a34a:	fsub   DWORD PTR [edx+0x3af50a2e]
  40a350:	(bad)  
  40a351:	aaa    
  40a352:	sti    
  40a353:	icebp  
  40a354:	ins    DWORD PTR es:[edi],dx
  40a355:	fidivr WORD PTR [eax-0x5504707c]
  40a35b:	inc    edx
  40a35c:	sub    edi,DWORD PTR [eax-0x5a]
  40a35f:	mov    eax,ds:0x290aa456
  40a364:	clc    
  40a365:	cwde   
  40a366:	jmp    0x40a37c
  40a368:	int    0xcd
  40a36a:	clc    
  40a36b:	je     0x40a33f
  40a36d:	inc    ebp
  40a36e:	and    BYTE PTR [eax],dl
  40a370:	loopne 0x40a34a
  40a372:	mov    ecx,0x7c2d5af
  40a377:	adc    al,0xea
  40a379:	in     eax,dx
  40a37a:	shl    DWORD PTR [edi-0x29],1
  40a37d:	dec    ecx
  40a37e:	jb     0x40a35f
  40a380:	push   ebx
  40a381:	pop    ecx
  40a382:	adc    BYTE PTR [ebx],0x4a
  40a385:	xor    ecx,DWORD PTR [esi+0x5ae34a1f]
  40a38b:	inc    eax
  40a38c:	mov    WORD PTR [edi+edi*4],gs
  40a38f:	fwait
  40a390:	xor    al,0xc7
  40a392:	arpl   WORD PTR [edx-0x40f50762],sp
  40a398:	xor    al,BYTE PTR [esi+0x43131ecb]
  40a39e:	ret    0x98cf
  40a3a1:	call   0xcd17:0x9461dd89
  40a3a8:	dec    esi
  40a3a9:	sahf   
  40a3aa:	push   0x2a1f9925
  40a3af:	xchg   ebp,eax
  40a3b0:	sar    DWORD PTR [ecx+0x1016d654],1
  40a3b6:	add    al,0x92
  40a3b8:	xchg   edi,eax
  40a3b9:	push   0xffffffab
  40a3bb:	xchg   ecx,eax
  40a3bc:	rcr    BYTE PTR [esi+ecx*8+0xea1f2e8],1
  40a3c3:	outs   dx,BYTE PTR ds:[esi]
  40a3c4:	pop    ds
  40a3c5:	sub    ebp,DWORD PTR [esi+0x59]
  40a3c8:	xchg   ecx,eax
  40a3c9:	test   DWORD PTR [edx-0x21],eax
  40a3cc:	jmp    0xbd20:0x4601255e
  40a3d3:	push   esp
  40a3d4:	or     BYTE PTR [ebx+0x4f],dl
  40a3d7:	pop    esp
  40a3d8:	mov    ch,0x78
  40a3da:	add    BYTE PTR gs:[ebp+0x35667e36],dl
  40a3e1:	test   al,cl
  40a3e3:	mov    ecx,0xe761f568
  40a3e8:	pop    ebx
  40a3e9:	or     eax,0x4990449a
  40a3ee:	shl    BYTE PTR [esi+0x6d],cl
  40a3f1:	push   edi
  40a3f2:	popa   
  40a3f3:	push   ecx
  40a3f4:	mov    esp,0xb32ac108
  40a3f9:	adc    edi,DWORD PTR [ecx-0x7c774ba4]
  40a3ff:	adc    ebx,DWORD PTR [esi]
  40a401:	jo     0x40a3be
  40a403:	push   ss
  40a404:	pop    ecx
  40a405:	jns    0x40a408
  40a407:	sub    BYTE PTR [edi],bh
  40a409:	pop    ebx
  40a40a:	pop    esi
  40a40b:	or     eax,esp
  40a40d:	(bad)  
  40a40e:	xlat   BYTE PTR ds:[ebx]
  40a40f:	dec    esp
  40a410:	test   al,dl
  40a412:	mov    ch,0xaa
  40a414:	ins    DWORD PTR es:[edi],dx
  40a415:	sub    ch,BYTE PTR [eax+esi*8-0x5d]
  40a419:	xor    al,0xad
  40a41b:	mov    ch,0xd6
  40a41d:	adc    eax,0x5cc497dc
  40a422:	ror    DWORD PTR [edx],cl
  40a424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a425:	repnz push ebp
  40a427:	pop    eax
  40a428:	(bad)  
  40a429:	fld    QWORD PTR [esi-0x406d9646]
  40a430:	das    
  40a431:	je     0x40a482
  40a433:	inc    esp
  40a434:	mov    ecx,0xcb5fa3b8
  40a439:	jne    0x40a459
  40a43b:	iret   
  40a43c:	(bad)  
  40a43d:	xlat   BYTE PTR ds:[ebx]
  40a43e:	sub    DWORD PTR [ebx+0x466ef90e],0xcd47c94e
  40a448:	aaa    
  40a449:	mov    edi,0xed487eea
  40a44e:	lds    ebx,FWORD PTR [ebx]
  40a450:	loopne 0x40a466
  40a452:	sbb    DWORD PTR [esi+0x7339f9fe],esi
  40a458:	fstp   DWORD PTR [eax]
  40a45a:	in     eax,0x3b
  40a45c:	bound  ebp,QWORD PTR [esi]
  40a45e:	pop    esp
  40a45f:	into   
  40a460:	xchg   esi,eax
  40a461:	fidiv  WORD PTR [edi-0x76]
  40a464:	add    al,0xc2
  40a466:	cdq    
  40a467:	sub    dl,BYTE PTR [esi]
  40a469:	inc    esi
  40a46a:	(bad)
  40a46e:	add    DWORD PTR [ecx-0x12],edi
  40a471:	loopne 0x40a44a
  40a473:	imul   esp,DWORD PTR [ebx],0x3e
  40a476:	push   eax
  40a477:	das    
  40a478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a479:	nop
  40a47a:	and    ebp,eax
  40a47c:	jmp    0x158cf927
  40a481:	inc    esi
  40a482:	pop    edi
  40a483:	int    0xb4
  40a485:	mov    bl,0xb6
  40a487:	sbb    BYTE PTR [ebx+eiz*8-0x49],bh
  40a48b:	nop
  40a48c:	jbe    0x40a4e5
  40a48e:	sahf   
  40a48f:	inc    esp
  40a490:	adc    BYTE PTR [ecx-0x794d87ba],cl
  40a496:	mov    eax,0x9a4c4d2d
  40a49b:	and    DWORD PTR [ebp-0x75d1f963],0x3c299082
  40a4a5:	or     ebx,ebx
  40a4a7:	rcl    BYTE PTR [eax-0x1a],1
  40a4aa:	pop    ecx
  40a4ab:	cld    
  40a4ac:	jg     0x40a453
  40a4ae:	loop   0x40a4ab
  40a4b0:	and    BYTE PTR [edi+0x6f4ae160],cl
  40a4b6:	repz adc al,0xa4
  40a4b9:	jmp    0x3be2:0xb9cb3eae
  40a4c0:	in     eax,dx
  40a4c1:	xchg   esi,eax
  40a4c2:	outs   dx,BYTE PTR ds:[esi]
  40a4c3:	sti    
  40a4c4:	hlt    
  40a4c5:	cs xchg esi,eax
  40a4c7:	sbb    al,0x30
  40a4c9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4cb:	push   edi
  40a4cc:	xchg   ebp,eax
  40a4cd:	fsub   QWORD PTR [ecx-0x6a]
  40a4d0:	xchg   edi,ecx
  40a4d2:	clc    
  40a4d3:	test   BYTE PTR [eax],dh
  40a4d5:	and    eax,0xfbc80abc
  40a4da:	pop    esp
  40a4db:	mov    al,ds:0x648be9a6
  40a4e0:	pop    ecx
  40a4e1:	lds    ebx,FWORD PTR [esi]
  40a4e3:	mov    esp,0x3111f75f
  40a4e8:	sub    DWORD PTR [ebp+0x47e156e2],edx
  40a4ee:	sbb    ebp,0x199ce47a
  40a4f4:	sahf   
  40a4f5:	and    al,0x3c
  40a4f7:	sbb    BYTE PTR [ecx],bl
  40a4f9:	lods   al,BYTE PTR ds:[esi]
  40a4fa:	mov    ch,0xab
  40a4fc:	gs mov al,dl
  40a4ff:	cmp    al,BYTE PTR [edi+0xf067b37]
  40a505:	xor    DWORD PTR ds:0x2e9de3cd,edi
  40a50b:	mul    dl
  40a50d:	sub    BYTE PTR [ecx+ecx*8-0xd5c2e02],dh
  40a514:	and    eax,0x153beb41
  40a519:	add    al,0x18
  40a51b:	jge    0x40a49d
  40a51d:	mov    ebp,0x2aca31a4
  40a522:	in     al,dx
  40a523:	push   ss
  40a524:	pop    esi
  40a525:	in     al,dx
  40a526:	bound  ecx,QWORD PTR [ebx+eiz*1+0x4ae0b994]
  40a52d:	jbe    0x40a55b
  40a52f:	mov    ah,BYTE PTR [ecx+0x95aa4e0]
  40a535:	iret   
  40a536:	xchg   DWORD PTR [ecx+0x1b],ebx
  40a539:	fsub   st(2),st
  40a53b:	pusha  
  40a53c:	mov    esi,0xa3ca71f2
  40a541:	mov    edx,0xd2908771
  40a546:	pop    ebp
  40a547:	and    eax,0x80a383e6
  40a54c:	mov    ch,0x3a
  40a54e:	stc    
  40a54f:	scas   eax,DWORD PTR es:[edi]
  40a550:	xor    eax,0x97085f5a
  40a555:	dec    edi
  40a556:	jo     0x40a516
  40a558:	or     DWORD PTR [edi+0x5c],ecx
  40a55b:	aas    
  40a55c:	adc    al,0xd5
  40a55e:	or     eax,0xfc9b2005
  40a563:	sub    dl,BYTE PTR [ebx]
  40a565:	(bad)  
  40a566:	mov    al,ds:0xfc81ce20
  40a56b:	cmp    ecx,DWORD PTR [ecx]
  40a56d:	mov    bl,0xee
  40a56f:	(bad)  [eax-0x1a7a35d8]
  40a575:	mov    ds:0x7052de5b,eax
  40a57a:	aad    0xd8
  40a57c:	push   ecx
  40a57d:	test   eax,0x716a828a
  40a582:	cmp    DWORD PTR [ecx],ecx
  40a584:	loope  0x40a5fd
  40a586:	ins    DWORD PTR es:[edi],dx
  40a587:	fsubr  QWORD PTR [edx+0x1]
  40a58a:	push   cs
  40a58b:	mov    ah,BYTE PTR [ebx]
  40a58d:	mov    edx,0x7e35710f
  40a592:	or     al,0x30
  40a594:	and    edx,DWORD PTR [edx-0x1c82e1be]
  40a59a:	lds    ebx,FWORD PTR [edx]
  40a59c:	mov    eax,DWORD PTR [ecx+0x3d]
  40a59f:	and    eax,0x9e8cc4a8
  40a5a4:	enter  0xa0e7,0x85
  40a5a8:	retf   
  40a5a9:	jb     0x40a5f1
  40a5ab:	icebp  
  40a5ac:	inc    esp
  40a5ad:	and    al,BYTE PTR [ebp+0x1a]
  40a5b0:	in     al,0xa4
  40a5b2:	pusha  
  40a5b3:	sub    BYTE PTR [ebp+eiz*4+0x16],dl
  40a5b7:	sub    cl,bl
  40a5b9:	jbe    0x40a628
  40a5bb:	and    esi,DWORD PTR [edx-0x67]
  40a5be:	adc    edx,eax
  40a5c0:	ror    ebx,0x9e
  40a5c3:	or     BYTE PTR [ebp-0x43c67a2b],dl
  40a5c9:	mov    dh,0xe8
  40a5cb:	sub    ecx,DWORD PTR [eax]
  40a5cd:	int3   
  40a5ce:	test   BYTE PTR [edi],dh
  40a5d0:	ret    0x94f0
  40a5d3:	add    BYTE PTR [ebx+edi*4+0x72ce05bb],al
  40a5da:	(bad)  
  40a5db:	into   
  40a5dc:	test   BYTE PTR ss:[edi-0x702fef4d],cl
  40a5e3:	adc    BYTE PTR [edx-0x66],ch
  40a5e6:	jg     0x40a5fd
  40a5e8:	test   DWORD PTR [edi+eax*2],0x325f2a65
  40a5ef:	out    0xc4,al
  40a5f1:	and    bl,al
  40a5f3:	int3   
  40a5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f5:	jle    0x40a636
  40a5f7:	pop    edx
  40a5f8:	and    eax,0x2adee26
  40a5fd:	add    eax,0x48880951
  40a602:	mov    ss,WORD PTR [edx]
  40a604:	dec    ebx
  40a605:	bound  edi,QWORD PTR [edx-0x7d3ec83c]
  40a60b:	mov    WORD PTR ds:0xb5232e4e,es
  40a611:	dec    eax
  40a612:	cmp    eax,0xb3259683
  40a617:	sbb    ebp,DWORD PTR [eax+0x17]
  40a61a:	fwait
  40a61b:	cmp    DWORD PTR [edi+ecx*8+0x41],eax
  40a61f:	jae    0x40a619
  40a621:	in     al,dx
  40a622:	push   ebx
  40a623:	jno    0x40a656
  40a625:	int3   
  40a626:	xchg   esi,eax
  40a627:	push   0x19
  40a629:	pushf  
  40a62a:	out    dx,eax
  40a62b:	xor    eax,ebx
  40a62d:	mov    ch,0xc7
  40a62f:	sub    BYTE PTR [esi],bh
  40a631:	xchg   edx,eax
  40a632:	sbb    al,0xf5
  40a634:	push   edi
  40a635:	scas   al,BYTE PTR es:[edi]
  40a636:	adc    eax,0x8ced53
  40a63b:	cmp    DWORD PTR [ecx-0x66],esp
  40a63e:	out    dx,eax
  40a63f:	add    ah,bl
  40a641:	jle    0x40a6bd
  40a643:	inc    esp
  40a644:	push   0x8d155acb
  40a649:	ds and ebx,edi
  40a64c:	inc    esp
  40a64d:	or     eax,0x615388aa
  40a652:	fild   QWORD PTR [ecx+0x2098c3b6]
  40a658:	xchg   ecx,eax
  40a659:	call   0xe913:0xbee89e9a
  40a660:	xchg   BYTE PTR [edi+0x2e],dl
  40a663:	mov    edx,0x7f75dd4d
  40a668:	les    edi,FWORD PTR [eax+0x6034d8d0]
  40a66e:	add    eax,0xc3f2e878
  40a673:	push   esp
  40a674:	jg     0x40a669
  40a676:	into   
  40a677:	jge    0x40a6f4
  40a679:	and    eax,ecx
  40a67b:	stos   DWORD PTR es:[edi],eax
  40a67c:	sub    eax,0x96575dc4
  40a681:	and    DWORD PTR [esp+eax*4+0x2c0d330e],edx
  40a688:	mov    al,ds:0x8c86cce0
  40a68d:	mov    dh,0xee
  40a68f:	les    edi,FWORD PTR [edi]
  40a691:	ins    BYTE PTR es:[edi],dx
  40a692:	adc    edi,DWORD PTR [esi+0x647a415a]
  40a698:	adc    eax,0x918c428e
  40a69d:	jns    0x40a6f6
  40a69f:	mov    ds:0x9d32fd8f,eax
  40a6a4:	inc    edx
  40a6a5:	repnz test edi,ebx
  40a6a8:	stos   BYTE PTR es:[edi],al
  40a6a9:	imul   eax,DWORD PTR [ebx],0x2b6591f9
  40a6af:	lods   eax,DWORD PTR ds:[esi]
  40a6b0:	dec    ebp
  40a6b1:	ss mov ebp,0xa8b92fb9
  40a6b7:	(bad)  
  40a6b8:	dec    esp
  40a6b9:	jnp    0x40a738
  40a6bb:	mov    ds:0x613ab705,al
  40a6c0:	ror    DWORD PTR [edi-0x7cdf51d0],1
  40a6c6:	(bad)  
  40a6c7:	jnp    0x40a666
  40a6c9:	jl     0x40a6e3
  40a6cb:	mov    eax,0xd65adcce
  40a6d0:	xchg   esp,eax
  40a6d1:	and    BYTE PTR [ebp+0x42],ah
  40a6d4:	std    
  40a6d5:	test   DWORD PTR [edi],eax
  40a6d7:	jp     0x40a67c
  40a6d9:	test   DWORD PTR ds:0x5e1351c4,ebp
  40a6df:	bnd jmp 0x40a6bf
  40a6e2:	repz add al,BYTE PTR [esi]
  40a6e5:	mov    eax,ds:0x93d4a476
  40a6ea:	jae    0x40a6c2
  40a6ec:	test   al,0xbe
  40a6ee:	pop    ss
  40a6ef:	sahf   
  40a6f0:	xchg   ecx,eax
  40a6f1:	lods   eax,DWORD PTR ds:[esi]
  40a6f2:	scas   al,BYTE PTR es:[edi]
  40a6f3:	add    DWORD PTR [ebx],ebp
  40a6f5:	popf   
  40a6f6:	adc    al,0x9f
  40a6f8:	mov    esi,?
  40a6fa:	sub    eax,0x163bd456
  40a6ff:	pop    esi
  40a700:	lock fs out 0x0,eax
  40a704:	jmp    0x85939db4
  40a709:	push   ebp
  40a70a:	cdq    
  40a70b:	ss in  al,dx
  40a70d:	and    DWORD PTR [edi],ebx
  40a70f:	std    
  40a710:	jge    0x40a72b
  40a712:	dec    eax
  40a713:	xchg   ecx,ebx
  40a715:	popf   
  40a716:	daa    
  40a717:	push   esi
  40a718:	and    BYTE PTR [ecx+0x70],ch
  40a71b:	fcomip st,st(6)
  40a71d:	idiv   BYTE PTR [ecx+edi*2]
  40a720:	or     DWORD PTR [ebp-0x31],esp
  40a723:	and    dl,ah
  40a725:	xchg   edx,eax
  40a726:	jbe    0x40a70c
  40a728:	jg     0x40a747
  40a72a:	ficom  WORD PTR [edx+0x38eb8d1]
  40a730:	mov    WORD PTR [ebp+0x5ca005f8],gs
  40a736:	inc    ecx
  40a737:	stos   BYTE PTR es:[edi],al
  40a738:	and    DWORD PTR fs:[edx],esi
  40a73b:	fcmove st,st(1)
  40a73d:	mul    BYTE PTR [edx+0x59]
  40a740:	xlat   BYTE PTR ds:[ebx]
  40a741:	aam    0xf0
  40a743:	mov    BYTE PTR [esi-0x2ad78ab1],0x99
  40a74a:	test   DWORD PTR [ecx],ebx
  40a74c:	lods   al,BYTE PTR ds:[esi]
  40a74d:	pop    ebp
  40a74e:	sub    DWORD PTR ds:0x1524eb80,eax
  40a754:	fstp   DWORD PTR [edx+0x7f]
  40a757:	call   0x4083:0x77327f57
  40a75e:	mov    dl,0x17
  40a760:	pop    esp
  40a761:	mov    edx,0x6940080f
  40a766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a767:	push   0x1a01e2f9
  40a76c:	mov    ch,0x14
  40a76e:	fucomi st,st(6)
  40a770:	push   ecx
  40a771:	lds    edx,FWORD PTR [esi]
  40a773:	xor    ch,bh
  40a775:	inc    ebx
  40a776:	shr    WORD PTR [esi-0x48],cl
  40a77a:	ss jecxz 0x40a70b
  40a77d:	or     ch,BYTE PTR ds:0xa50e59cb
  40a783:	adc    al,0x5f
  40a785:	or     cl,BYTE PTR [esp+ecx*2-0x1236241c]
  40a78c:	adc    al,0xa2
  40a78e:	xchg   edx,eax
  40a78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a790:	aas    
  40a791:	ror    dh,1
  40a793:	call   0xf01c:0x54398167
  40a79a:	mov    bh,0x13
  40a79c:	adc    dl,BYTE PTR [ecx-0x514b5b93]
  40a7a2:	jo     0x40a731
  40a7a4:	jecxz  0x40a79f
  40a7a6:	xchg   BYTE PTR [edi],bl
  40a7a8:	push   ebx
  40a7a9:	clc    
  40a7aa:	push   edx
  40a7ab:	jge    0x40a7a6
  40a7ad:	arpl   WORD PTR [esi],ax
  40a7af:	sbb    DWORD PTR [ecx],eax
  40a7b1:	push   ebx
  40a7b2:	icebp  
  40a7b3:	fs jp  0x40a802
  40a7b6:	mov    cl,BYTE PTR [edi+0x161ae82e]
  40a7bc:	xchg   edx,eax
  40a7bd:	mov    BYTE PTR [eax],ah
  40a7bf:	xchg   ecx,eax
  40a7c0:	lods   al,BYTE PTR ds:[esi]
  40a7c1:	(bad)  
  40a7c2:	cli    
  40a7c3:	into   
  40a7c4:	or     cl,dl
  40a7c6:	enter  0xd1d2,0x6a
  40a7ca:	mov    ds:0x54bfdcb9,al
  40a7cf:	in     al,0x34
  40a7d1:	sbb    BYTE PTR [eax+0x3d],ah
  40a7d4:	faddp  st(6),st
  40a7d6:	adc    eax,DWORD PTR [edi-0x6f]
  40a7d9:	in     eax,dx
  40a7da:	jecxz  0x40a856
  40a7dc:	div    DWORD PTR [edi]
  40a7de:	push   ebp
  40a7df:	jnp    0x40a7c4
  40a7e1:	nop
  40a7e2:	gs das 
  40a7e4:	push   ecx
  40a7e5:	gs and al,0x6
  40a7e8:	mov    ebx,0xa77bf904
  40a7ed:	in     al,0x36
  40a7ef:	sti    
  40a7f0:	lods   al,BYTE PTR ds:[esi]
  40a7f1:	or     al,0xbc
  40a7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7f4:	popf   
  40a7f5:	add    dh,ah
  40a7f7:	and    dh,0x37
  40a7fa:	mov    eax,0xfc39571
  40a7ff:	imul   esi,DWORD PTR [ecx+ebx*2-0x695959a4],0xfffffff2
  40a807:	frstor [esi+eax*2+0x1436510]
  40a80e:	cmp    edx,DWORD PTR [edi+0x32dbf18a]
  40a814:	cwde   
  40a815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a816:	push   esp
  40a817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a818:	fwait
  40a819:	or     al,0x3f
  40a81b:	push   0x1d
  40a81d:	push   ecx
  40a81e:	and    ecx,DWORD PTR [ebp+0x4b]
  40a821:	and    eax,0x349f1d04
  40a826:	jmp    0x40a851
  40a828:	add    al,0x0
  40a82a:	or     eax,0xfd96b43c
  40a82f:	dec    esi
  40a830:	clc    
  40a831:	or     eax,0x61dcbcdd
  40a836:	push   0xc8025ea8
  40a83b:	jns    0x40a7da
  40a83d:	cdq    
  40a83e:	dec    edi
  40a83f:	cwde   
  40a840:	stos   DWORD PTR es:[edi],eax
  40a841:	add    BYTE PTR [ecx],bl
  40a843:	popw   ss
  40a845:	test   eax,0xf8079d48
  40a84a:	jge    0x40a7dd
  40a84c:	retf   0x29ba
  40a84f:	push   esi
  40a850:	test   BYTE PTR [ecx],bh
  40a852:	push   ecx
  40a853:	push   ds
  40a854:	xor    bl,BYTE PTR [edi]
  40a856:	lahf   
  40a857:	pop    ds
  40a858:	lods   al,BYTE PTR ds:[esi]
  40a859:	rcl    DWORD PTR [ebx+0x34],0x94
  40a85d:	clc    
  40a85e:	xor    ecx,eax
  40a860:	addr16 ss lock aad 0x4d
  40a865:	test   al,0x72
  40a867:	out    0x96,al
  40a869:	ss lahf 
  40a86b:	out    dx,eax
  40a86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86d:	mov    dl,BYTE PTR [esi]
  40a86f:	mov    al,ds:0x141ad999
  40a874:	mov    ebx,cs
  40a876:	sbb    al,0xf2
  40a878:	xor    esp,DWORD PTR [esi]
  40a87a:	scas   al,BYTE PTR es:[edi]
  40a87b:	push   ecx
  40a87c:	jecxz  0x40a883
  40a87e:	xchg   ebx,eax
  40a87f:	imul   ebx,DWORD PTR [ecx+eiz*8],0x642f2913
  40a886:	xchg   BYTE PTR [ecx+0x4dae72cb],al
  40a88c:	(bad)  
  40a88d:	stos   BYTE PTR es:[edi],al
  40a88e:	mov    ah,dl
  40a890:	cli    
  40a891:	or     al,0x8
  40a893:	ficomp DWORD PTR [edx]
  40a895:	test   eax,0xb46425e
  40a89a:	sub    DWORD PTR [ebp+0x67],edx
  40a89d:	pop    ebp
  40a89e:	xor    ebp,DWORD PTR [eax+0x28234137]
  40a8a4:	mov    bh,BYTE PTR [eax+0x1b766db5]
  40a8aa:	xor    DWORD PTR [edi],ebp
  40a8ac:	ja     0x40a84d
  40a8ae:	push   esp
  40a8af:	sbb    esp,esi
  40a8b1:	jns    0x40a8c5
  40a8b3:	add    ch,cl
  40a8b5:	pop    es
  40a8b6:	je     0x40a89d
  40a8b8:	(bad)  
  40a8ba:	or     ah,BYTE PTR [edx-0x6f]
  40a8bd:	(bad)  
  40a8be:	xchg   esp,eax
  40a8bf:	fild   WORD PTR [eax+0x61]
  40a8c2:	cmp    bl,cl
  40a8c4:	mov    ah,0xad
  40a8c6:	cli    
  40a8c7:	aam    0x35
  40a8c9:	add    DWORD PTR [ebx+0x410ad125],ebx
  40a8cf:	add    BYTE PTR [edx+0x41],cl
  40a8d2:	imul   eax,DWORD PTR ds:0x1b9a240a,0xe612502c
  40a8dc:	xor    esi,edi
  40a8de:	fwait
  40a8df:	push   ebx
  40a8e0:	lods   al,BYTE PTR ds:[esi]
  40a8e1:	hlt    
  40a8e2:	je     0x40a939
  40a8e4:	sbb    eax,0xf6e8d4f5
  40a8e9:	jae    0x40a92d
  40a8eb:	mov    esi,0x6245f23c
  40a8f0:	jge    0x40a879
  40a8f2:	jb     0x40a8d4
  40a8f4:	jns    0x40a88d
  40a8f6:	int3   
  40a8f7:	push   es
  40a8f8:	repnz or bh,BYTE PTR [ebp-0x5c28a55b]
  40a8ff:	(bad)
  40a905:	les    esi,FWORD PTR [ebp-0x74]
  40a908:	push   0xffffffc6
  40a90a:	pushf  
  40a90b:	xchg   esi,eax
  40a90c:	inc    eax
  40a90d:	sub    cl,BYTE PTR [edi-0x55e47688]
  40a913:	xor    BYTE PTR [eax],al
  40a915:	adc    BYTE PTR [esi+eiz*8],dl
  40a918:	mov    al,0x89
  40a91a:	xor    eax,0xcd5560bf
  40a91f:	push   edi
  40a920:	xchg   ebx,eax
  40a921:	iret   
  40a922:	test   eax,0xb27e1d2e
  40a927:	jmp    0x40a951
  40a929:	icebp  
  40a92a:	loopne 0x40a8d3
  40a92c:	jbe    0x40a970
  40a92e:	dec    ebx
  40a92f:	jg     0x40a990
  40a931:	inc    esi
  40a932:	test   BYTE PTR [ebx+0x30631e0b],ah
  40a938:	lds    ebx,FWORD PTR [edx+0x2894c8fb]
  40a93e:	dec    eax
  40a93f:	cmp    eax,ebp
  40a941:	jge    0x40a907
  40a943:	jl     0x40a983
  40a945:	sbb    al,0x24
  40a947:	clc    
  40a948:	and    bl,dl
  40a94a:	jge    0x40a922
  40a94c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a94d:	stos   DWORD PTR es:[edi],eax
  40a94e:	fild   DWORD PTR [ecx]
  40a950:	popf   
  40a951:	mov    ds:0xa9a667ab,eax
  40a956:	frstor [ecx]
  40a958:	rcl    BYTE PTR [ebx-0x31],1
  40a95b:	mov    ebp,0xf5117a8c
  40a960:	cwde   
  40a961:	into   
  40a962:	popa   
  40a963:	out    0xf8,al
  40a965:	stos   DWORD PTR es:[edi],eax
  40a966:	in     eax,0x69
  40a968:	pop    ss
  40a969:	stc    
  40a96a:	stc    
  40a96b:	add    eax,0x715949e4
  40a970:	sahf   
  40a971:	aad    0x4d
  40a973:	sete   ah
  40a976:	push   ecx
  40a977:	call   0xfd7b:0xd8370829
  40a97e:	jns    0x40a977
  40a980:	mov    cl,0xd9
  40a982:	mov    ch,BYTE PTR [ebp+0x5939a5e4]
  40a988:	stc    
  40a989:	out    dx,eax
  40a98a:	scas   eax,DWORD PTR es:[edi]
  40a98b:	xchg   DWORD PTR [esi],ebp
  40a98d:	adc    BYTE PTR [edi],bh
  40a98f:	data16 stos BYTE PTR es:[edi],al
  40a991:	or     BYTE PTR [eax-0x2382761e],0x93
  40a998:	cdq    
  40a999:	mov    edi,0xada6f033
  40a99e:	dec    ecx
  40a99f:	xlat   BYTE PTR ds:[ebx]
  40a9a0:	inc    edi
  40a9a1:	iret   
  40a9a2:	into   
  40a9a3:	shl    BYTE PTR [edi+0x38375964],1
  40a9a9:	and    ecx,DWORD PTR [edx-0x3b49ebc8]
  40a9af:	dec    edx
  40a9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9b1:	mov    edi,0x4677080c
  40a9b6:	mov    ebp,0x2fd62c5b
  40a9bb:	xchg   ecx,eax
  40a9bc:	sub    eax,0x2fc26322
  40a9c1:	or     BYTE PTR [edx-0x19],ah
  40a9c4:	jne    0x40a961
  40a9c6:	sub    ebp,0x20b19203
  40a9cc:	repnz clc 
  40a9ce:	pop    ss
  40a9cf:	sub    ebx,esp
  40a9d1:	xor    BYTE PTR [ecx-0x2cb30b6a],0x8d
  40a9d8:	xchg   edx,eax
  40a9d9:	jl     0x40aa53
  40a9db:	(bad)  
  40a9dc:	std    
  40a9dd:	or     al,0xaa
  40a9df:	lods   al,BYTE PTR ds:[esi]
  40a9e0:	or     bl,dh
  40a9e2:	xor    BYTE PTR [ebx],cl
  40a9e4:	sub    DWORD PTR ds:0x1b012e54,eax
  40a9ea:	jp     0x40aa4b
  40a9ec:	aaa    
  40a9ed:	dec    esp
  40a9ee:	inc    esp
  40a9ef:	jg     0x40a9ee
  40a9f1:	mov    eax,ds:0xe26193d4
  40a9f6:	or     BYTE PTR [ebx+0x6c422e9c],al
  40a9fc:	jne    0x40aa46
  40a9fe:	cmc    
  40a9ff:	cdq    
  40aa00:	cmc    
  40aa01:	add    BYTE PTR [esp+eax*2+0x106daba5],0xbc
  40aa09:	xchg   esi,eax
  40aa0a:	cmp    ebp,DWORD PTR [edx+0x880e482]
  40aa10:	imul   esi,DWORD PTR [edx-0x49cd3000],0xffffff8d
  40aa17:	daa    
  40aa18:	push   ecx
  40aa19:	cld    
  40aa1a:	cmp    al,0xbb
  40aa1c:	cmp    ebp,0x42
  40aa1f:	xor    eax,0x41ddba59
  40aa24:	pusha  
  40aa25:	(bad)  
  40aa26:	xchg   edi,eax
  40aa27:	es popf 
  40aa29:	sub    al,0x23
  40aa2b:	in     eax,0x3d
  40aa2d:	sub    eax,DWORD PTR [edx]
  40aa2f:	lea    ebx,[esi-0xc78cf36]
  40aa35:	jecxz  0x40aaa7
  40aa37:	fnsave [ebp-0x1e10d124]
  40aa3d:	jge    0x40aaba
  40aa3f:	test   eax,0xace792cf
  40aa44:	sub    ecx,0x7d
  40aa47:	pop    eax
  40aa48:	idiv   DWORD PTR [eax-0x1eb71d9b]
  40aa4e:	jb     0x40aa9d
  40aa50:	cwde   
  40aa51:	(bad)  
  40aa52:	gs loope 0x40aa32
  40aa55:	or     bl,BYTE PTR [eax-0x7e19f3b5]
  40aa5b:	outs   dx,BYTE PTR ds:[esi]
  40aa5c:	cwde   
  40aa5d:	out    dx,eax
  40aa5e:	add    dh,BYTE PTR [edx-0x73d9af90]
  40aa64:	add    DWORD PTR cs:[edi],ecx
  40aa67:	jns    0x40aa5d
  40aa69:	and    dh,BYTE PTR [eax+0x7c]
  40aa6c:	jbe    0x40aa59
  40aa6e:	test   ecx,eax
  40aa70:	(bad)  
  40aa71:	mov    eax,0x690b223c
  40aa76:	or     al,0xa4
  40aa78:	jl     0x40aa74
  40aa7a:	xchg   ebx,eax
  40aa7b:	into   
  40aa7c:	or     edx,edi
  40aa7e:	in     al,dx
  40aa7f:	pop    es
  40aa80:	inc    edi
  40aa81:	sbb    esi,0xf73a9a43
  40aa87:	cwde   
  40aa88:	or     esi,DWORD PTR [ebp-0x73672fe7]
  40aa8e:	lock jle 0x40aa9d
  40aa91:	shl    BYTE PTR [ebx-0x15d978cc],1
  40aa97:	adc    ebx,eax
  40aa99:	stc    
  40aa9a:	in     eax,0xb0
  40aa9c:	add    DWORD PTR [edx+0x61],0x99adf3bf
  40aaa3:	xchg   esi,eax
  40aaa4:	and    dh,0x78
  40aaa7:	xchg   edx,eax
  40aaa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaa9:	adc    al,0x7d
  40aaab:	fcomp  DWORD PTR [esi]
  40aaad:	xchg   BYTE PTR cs:[bx+si-0x9d],dh
  40aab3:	(bad)  
  40aab4:	xchg   ebp,eax
  40aab5:	inc    DWORD PTR [ecx-0x5b]
  40aab8:	test   eax,0x5d2e4e54
  40aabd:	or     ebx,DWORD PTR [ebx]
  40aabf:	test   BYTE PTR [edi-0x4de133ba],ah
  40aac5:	mov    bh,0x7a
  40aac7:	into   
  40aac8:	pop    ds
  40aac9:	test   eax,0x90045784
  40aace:	sti    
  40aacf:	test   BYTE PTR [ebp-0x5a763391],0x93
  40aad6:	inc    eax
  40aad7:	jl     0x40aadb
  40aad9:	call   DWORD PTR [ebx+esi*8-0xe]
  40aadd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aade:	(bad)  
  40aadf:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40aae1:	aam    0x3a
  40aae3:	ja     0x40aa69
  40aae5:	push   ebp
  40aae6:	add    DWORD PTR [edi-0x509d3fc7],edx
  40aaec:	mov    ds:0x217ae0f,eax
  40aaf1:	jge    0x40aa74
  40aaf3:	xchg   ebx,eax
  40aaf4:	jecxz  0x40aabe
  40aaf6:	std    
  40aaf7:	sbb    BYTE PTR ds:0x565cf3c8,0xe1
  40aafe:	ss xor al,ah
  40ab01:	std    
  40ab02:	daa    
  40ab03:	sbb    al,0xd6
  40ab05:	add    esi,DWORD PTR [ebx+0x7a]
  40ab08:	ins    DWORD PTR es:[edi],dx
  40ab09:	ja     0x40ab02
  40ab0b:	jne    0x40aa95
  40ab0d:	retf   0x244f
  40ab10:	mov    ds:0x1fc0d283,al
  40ab15:	fidivr DWORD PTR [ecx+eiz*1+0x37]
  40ab19:	imul   esi,ebp,0xa8e2c71a
  40ab1f:	push   es
  40ab20:	dec    ecx
  40ab21:	cmp    al,0xe7
  40ab23:	mov    esp,0x13a6d3ed
  40ab28:	popf   
  40ab29:	add    esi,edx
  40ab2b:	pushf  
  40ab2c:	push   0xdd9e2277
  40ab31:	adc    esi,DWORD PTR [eax+0x17806730]
  40ab37:	(bad)  [edi-0x2dfa6abe]
  40ab3d:	stc    
  40ab3e:	lods   al,BYTE PTR ds:[esi]
  40ab3f:	shr    dh,1
  40ab41:	outs   dx,DWORD PTR ds:[esi]
  40ab42:	jae    0x40aaf1
  40ab44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab45:	call   0x3da06b7f
  40ab4a:	fiadd  DWORD PTR [eax+edx*4-0x7b7b16e4]
  40ab51:	xlat   BYTE PTR ds:[ebx]
  40ab52:	fs out 0x6d,eax
  40ab55:	inc    esi
  40ab56:	mov    ebp,0x2d450dd4
  40ab5b:	mov    esi,0x4586923
  40ab60:	push   esp
  40ab61:	inc    ecx
  40ab62:	fmul   st,st(1)
  40ab64:	sub    dl,cl
  40ab66:	vphadduwq ymm0,XMMWORD PTR [edi]
  40ab6b:	jmp    0x75d90434
  40ab70:	icebp  
  40ab71:	inc    edi
  40ab72:	cmp    al,0x68
  40ab74:	lock xchg ebp,eax
  40ab76:	fs aas 
  40ab78:	test   eax,0x4ecd56b5
  40ab7d:	push   ebp
  40ab7e:	loopne 0x40ab48
  40ab80:	repz call 0x480fb22d
  40ab86:	push   0xc0bdfe82
  40ab8b:	repz dec esi
  40ab8d:	sub    al,0x5a
  40ab8f:	push   cs
  40ab90:	push   0x3e
  40ab92:	xchg   DWORD PTR [eax-0x542a1d8d],eax
  40ab98:	xor    ecx,eax
  40ab9a:	xchg   esi,eax
  40ab9b:	arpl   WORD PTR [edx+0x3a],si
  40ab9e:	shr    BYTE PTR [ebp+0x56ea4d25],cl
  40aba4:	push   ebx
  40aba5:	fsubrp st(0),st
  40aba7:	fsub   QWORD PTR [edi-0x7acad109]
  40abad:	or     eax,0x2a78bf7
  40abb2:	cmp    edi,DWORD PTR [ecx+0x13bb0844]
  40abb8:	scas   al,BYTE PTR es:[edi]
  40abb9:	test   DWORD PTR [eax],eax
  40abbb:	jno    0x40abd3
  40abbd:	dec    eax
  40abbe:	out    dx,al
  40abbf:	pop    esp
  40abc0:	sub    eax,DWORD PTR ds:0x74505058
  40abc6:	and    bl,BYTE PTR [ebx+0x15]
  40abc9:	pop    ss
  40abca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abcb:	cmp    esp,eax
  40abcd:	or     eax,0xb2ffb385
  40abd2:	mov    eax,ds:0x878c898a
  40abd7:	call   0xace3acff
  40abdc:	sar    DWORD PTR [edx],0xf7
  40abdf:	je     0x40ac38
  40abe1:	jbe    0x40ab6d
  40abe3:	mov    fs,WORD PTR [edi]
  40abe5:	mov    dl,0xf8
  40abe7:	(bad)  
  40abe8:	out    0xfb,eax
  40abea:	into   
  40abeb:	sub    al,0xbb
  40abed:	push   ebx
  40abee:	xchg   ebp,eax
  40abef:	test   BYTE PTR [edi+eiz*1],bl
  40abf2:	lea    edi,[esi+edx*1+0x52]
  40abf6:	cwde   
  40abf7:	cmp    al,0x92
  40abf9:	loope  0x40abcc
  40abfb:	scas   al,BYTE PTR es:[edi]
  40abfc:	daa    
  40abfd:	out    0xfd,al
  40abff:	cdq    
  40ac00:	xor    DWORD PTR [esi],0x56726ee6
  40ac06:	mov    dh,0xfd
  40ac09:	rcl    DWORD PTR [eax],cl
  40ac0b:	int    0xa3
  40ac0d:	adc    eax,0x13aea218
  40ac12:	mov    ah,0xd4
  40ac14:	push   esi
  40ac15:	cmc    
  40ac16:	pop    edi
  40ac17:	xlat   BYTE PTR ds:[ebx]
  40ac18:	push   edx
  40ac19:	cmp    edi,0xafd41449
  40ac1f:	rcl    BYTE PTR [edi-0xc],cl
  40ac22:	adc    BYTE PTR [edx],0xc3
  40ac25:	add    dl,BYTE PTR [edx]
  40ac27:	call   0x1b02:0x17ddbdef
  40ac2e:	ret    0x72ba
  40ac31:	xchg   ebx,eax
  40ac32:	push   ss
  40ac33:	fldenv [ebp+0x20fab336]
  40ac39:	push   ecx
  40ac3a:	loop   0x40abed
  40ac3c:	idiv   BYTE PTR [eax-0x23]
  40ac3f:	mov    ebx,0x242a60e4
  40ac44:	mov    bl,0x4c
  40ac46:	test   BYTE PTR [ebx-0x3935507b],0x2e
  40ac4d:	out    0xd0,eax
  40ac4f:	push   cs
  40ac50:	or     DWORD PTR [esp+esi*2-0x20],0xffffffe8
  40ac55:	aaa    
  40ac56:	fwait
  40ac57:	pop    ss
  40ac58:	sbb    cl,BYTE PTR [si]
  40ac5b:	repnz sub ch,BYTE PTR [eax+0x29633aec]
  40ac62:	js     0x40abfd
  40ac64:	xor    DWORD PTR [ebp+0x273ca8fc],ecx
  40ac6a:	inc    ebp
  40ac6b:	stos   DWORD PTR es:[edi],eax
  40ac6c:	mov    esp,0x43834880
  40ac72:	mov    eax,0x9fdfdfd9
  40ac77:	das    
  40ac78:	dec    esi
  40ac79:	(bad)  
  40ac7a:	ffree  st(6)
  40ac7c:	bound  ebp,QWORD PTR [edx]
  40ac7e:	and    DWORD PTR [eax],0x59
  40ac81:	pop    esp
  40ac82:	imul   ebp,DWORD PTR [esi-0x4813ad49],0x65
  40ac89:	out    0xac,al
  40ac8b:	xchg   ecx,eax
  40ac8c:	mov    dh,0xf1
  40ac8e:	mov    ds:0xcaf6b677,al
  40ac93:	scas   al,BYTE PTR es:[edi]
  40ac94:	out    dx,eax
  40ac95:	jne    0x40ad10
  40ac97:	es mov edi,0x2193ba45
  40ac9d:	fmul   st(2),st
  40ac9f:	jb     0x40acfe
  40aca1:	fistp  QWORD PTR [edx]
  40aca3:	into   
  40aca4:	mov    eax,ds:0x15e46baa
  40aca9:	cmp    cl,bl
  40acab:	adc    DWORD PTR [edi],ebp
  40acad:	shr    edx,cl
  40acaf:	test   eax,0xa9da849f
  40acb4:	pop    edi
  40acb5:	or     al,0x9c
  40acb7:	jb     0x40acd8
  40acb9:	jmp    0x40ad2f
  40acbb:	mov    edi,0x9a7bef29
  40acc0:	adc    al,0xd5
  40acc2:	or     eax,0x892b6739
  40acc7:	push   eax
  40acc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc9:	pop    esi
  40acca:	sub    cl,BYTE PTR [esi+0x73ce55bd]
  40acd0:	xlat   BYTE PTR ds:[ebx]
  40acd1:	test   BYTE PTR [edi],dh
  40acd3:	push   ss
  40acd4:	mov    dh,ch
  40acd6:	and    al,0xaf
  40acd8:	je     0x40ad17
  40acda:	jnp    0x40acb9
  40acdc:	push   ebx
  40acdd:	dec    edi
  40acde:	mov    ecx,0x7fce29ba
  40ace3:	int3   
  40ace4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace5:	inc    eax
  40ace6:	push   edx
  40ace7:	xor    dl,BYTE PTR [ecx+ebx*8-0x6c0634f9]
  40acee:	addr16 push 0x55e90d6b
  40acf4:	mov    esp,0xcd2ec5ea
  40acf9:	pop    ebx
  40acfa:	js     0x40ad6e
  40acfc:	enter  0x5a7,0xc1
  40ad00:	aaa    
  40ad01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad02:	retf   
  40ad03:	ret    
  40ad04:	mov    es,WORD PTR [esi+ebx*1]
  40ad07:	mov    eax,0xcd36f191
  40ad0c:	cmp    al,ah
  40ad0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad0f:	sub    DWORD PTR [edi+0x2f],0xaf276f15
  40ad16:	test   eax,0x66816ae1
  40ad1b:	cs in  eax,0xe8
  40ad1e:	test   BYTE PTR ds:0xd357747a,0xe6
  40ad25:	mov    ss,WORD PTR [esi+0x6d]
  40ad28:	jae    0x40acbb
  40ad2a:	ja     0x40ad89
  40ad2c:	out    0x28,al
  40ad2e:	jmp    0x9d2f41bd
  40ad33:	pop    eax
  40ad34:	jbe    0x40ad69
  40ad36:	pop    ebx
  40ad37:	jg     0x40acff
  40ad39:	inc    esp
  40ad3a:	sbb    DWORD PTR [ebx-0x44],ebx
  40ad3d:	ds jecxz 0x40ad30
  40ad40:	ins    BYTE PTR es:[edi],dx
  40ad41:	loopne 0x40ad84
  40ad43:	fidiv  DWORD PTR [esi+0x79fa6e5a]
  40ad49:	dec    esp
  40ad4a:	arpl   si,di
  40ad4c:	jno    0x40ad22
  40ad4e:	mov    edi,0x7de38d42
  40ad53:	push   ds
  40ad54:	xchg   BYTE PTR [eax],ch
  40ad56:	fs scas eax,DWORD PTR es:[edi]
  40ad58:	mov    al,0xb7
  40ad5a:	ret    0x8de2
  40ad5d:	nop
  40ad5e:	test   DWORD PTR [esi+0x43],eax
  40ad61:	push   esp
  40ad62:	ss inc esp
  40ad64:	or     DWORD PTR [ecx+0x93d7721],edx
  40ad6a:	sbb    ebx,edx
  40ad6c:	cmp    ecx,edi
  40ad6e:	fs pop edx
  40ad70:	sub    BYTE PTR [edi-0x32],dh
  40ad73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad74:	enter  0x891b,0x2
  40ad78:	mov    ebp,0x8fecacae
  40ad7d:	inc    BYTE PTR [edx+0x6397dd4e]
  40ad83:	jo     0x40ade7
  40ad85:	mov    DWORD PTR [edx-0x49],ebp
  40ad88:	add    ch,BYTE PTR [edx+0x7a83d801]
  40ad8e:	dec    edi
  40ad8f:	add    dh,BYTE PTR [eax-0x6c7a4997]
  40ad95:	aad    0x9d
  40ad97:	and    BYTE PTR [ecx+0x35],al
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a63b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a63f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x5741e78e]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0xfffffff9
  40aed6:	ss cdq 
  40aed8:	leave  
  40aed9:	mov    esi,0xa7b11e0a
  40aede:	mov    ch,0x99
  40aee0:	xor    DWORD PTR [ecx-0x7b475da7],ebx
  40aee6:	inc    eax
  40aee7:	(bad)  
  40aee8:	pop    ss
  40aee9:	or     al,0x46
  40aeeb:	sbb    BYTE PTR [ecx],dl
  40aeed:	es ja  0x40af0a
  40aef0:	dec    ebp
  40aef1:	inc    edi
  40aef2:	sbb    al,0x32
  40aef4:	or     dh,dl
  40aef6:	mov    al,0xe1
  40aef8:	ja     0x40af60
  40aefa:	jo     0x40aef9
  40aefc:	fcomi  st,st(7)
  40aefe:	lock xchg edi,eax
  40af00:	test   al,0x33
  40af02:	pop    eax
  40af03:	push   ecx
  40af04:	add    al,dh
  40af06:	pop    ss
  40af07:	or     eax,0xbf307d80
  40af0c:	fdiv   st,st(6)
  40af0e:	and    esp,0x39
  40af11:	jne    0x40af2f
  40af13:	in     al,0x26
  40af15:	ret    0x6a8c
  40af18:	fistp  WORD PTR [ebx+0x6c71655a]
  40af1e:	rol    BYTE PTR [ecx],cl
  40af20:	out    0x89,eax
  40af22:	mov    dh,BYTE PTR [esi+ecx*2+0x6c]
  40af26:	mov    dh,0x35
  40af28:	addr16 stc 
  40af2a:	push   ds
  40af2b:	imul   edi,DWORD PTR [ebx],0xab3dd756
  40af31:	adc    ebx,ecx
  40af33:	push   esi
  40af34:	mov    ch,0xa
  40af36:	call   0x71ef14d7
  40af3b:	push   edx
  40af3c:	rsm    
  40af3e:	(bad)  
  40af3f:	out    0xca,eax
  40af41:	mov    cl,0x6f
  40af43:	jp     0x40af0b
  40af45:	std    
  40af46:	int    0x1d
  40af48:	sub    al,0x4c
  40af4a:	jl     0x40af9e
  40af4c:	fucomp st(2)
  40af4e:	add    eax,0xd81a902c
  40af53:	aad    0x2
  40af55:	or     BYTE PTR [eax],bh
  40af57:	cmc    
  40af58:	mov    ebp,DWORD PTR [eax-0x58]
  40af5b:	test   eax,edi
  40af5d:	fcmovnbe st,st(7)
  40af5f:	mov    ds:0x5a096b0b,al
  40af64:	mov    al,ds:0xca9b56aa
  40af69:	into   
  40af6a:	push   esp
  40af6b:	popa   
  40af6c:	test   eax,0x6560dce8
  40af71:	sub    dl,al
  40af73:	inc    eax
  40af74:	push   ecx
  40af75:	adc    ah,BYTE PTR [eax+0x2af60840]
  40af7b:	jmp    0xf5ec4ff
  40af80:	dec    edx
  40af81:	data16 cld 
  40af83:	call   0x52d83568
  40af88:	sbb    bh,BYTE PTR [edi]
  40af8a:	stos   BYTE PTR es:[edi],al
  40af8b:	pop    edi
  40af8c:	cli    
  40af8d:	adc    BYTE PTR [edi+0x36],bl
  40af90:	sti    
  40af91:	ss jl  0x40b001
  40af94:	test   BYTE PTR [ebp+0x76],dl
  40af97:	mov    al,0xc8
  40af99:	jp     0x40b00f
  40af9b:	rcr    DWORD PTR [edi+0x7ad46906],0x4a
  40afa2:	call   0x38d5fa47
  40afa7:	mov    eax,0xa2e0f43e
  40afac:	call   0x1be6b2f5
  40afb1:	clc    
  40afb2:	stos   DWORD PTR es:[edi],eax
  40afb3:	mov    ecx,0xcf089ebe
  40afb8:	or     ebp,DWORD PTR [edi]
  40afba:	dec    esp
  40afbb:	jmp    0x61ef:0x17e4daec
  40afc2:	outs   dx,DWORD PTR ds:[esi]
  40afc3:	in     eax,0xfa
  40afc5:	call   0xa29d1a75
  40afca:	jge    0x40b038
  40afcc:	mul    DWORD PTR [eax-0x7a3b84c9]
  40afd2:	jge    0x40afd0
  40afd4:	mov    al,0x7
  40afd6:	cs jmp 0x40b04b
  40afd9:	les    ecx,FWORD PTR [edx+0x13d1a53e]
  40afdf:	loop   0x40b053
  40afe1:	dec    eax
  40afe2:	bound  esp,QWORD PTR [edx]
  40afe4:	adc    al,0x55
  40afe6:	or     ebp,DWORD PTR [eax]
  40afe8:	lea    esi,[esi-0x37fb7260]
  40afee:	leave  
  40afef:	mov    bh,0xd9
  40aff1:	shr    DWORD PTR [edi-0x4b6768f],1
  40aff7:	inc    edx
  40aff8:	xchg   al,bl
  40affa:	inc    ecx
  40affb:	fsub   st(6),st
  40affd:	stc    
  40affe:	and    esi,ebp
  40b000:	adc    DWORD PTR [edx-0x71139baf],eax
  40b006:	into   
  40b007:	neg    DWORD PTR [ebp-0x5e]
  40b00a:	(bad)  
  40b00b:	loopne 0x40b05d
  40b00d:	mul    DWORD PTR [esi+0x6a17f888]
  40b013:	push   esi
  40b014:	int3   
  40b015:	add    DWORD PTR ds:0xd621dc9f,0xffffffe7
  40b01c:	push   esi
  40b01d:	pop    ebx
  40b01e:	jo     0x40afa6
  40b020:	inc    esp
  40b021:	mov    ds:0xdf789747,al
  40b026:	pop    eax
  40b027:	sbb    BYTE PTR [ebp+eiz*1+0x68bacec6],ch
  40b02e:	sub    ebx,DWORD PTR [esi+0x3e895e93]
  40b034:	fdivr  DWORD PTR [ebp-0x2f27fdbe]
  40b03a:	loop   0x40b070
  40b03c:	jno    0x40b09a
  40b03e:	in     eax,dx
  40b03f:	stc    
  40b040:	mov    dh,0x3c
  40b042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b043:	jo     0x40afcb
  40b045:	mov    DWORD PTR [eax+0x641edb7f],eax
  40b04b:	mov    ebx,0x5e9a3035
  40b050:	sbb    ebp,DWORD PTR ds:0x46635b57
  40b056:	cmp    DWORD PTR [ebx+0x2921b41e],0xd3cf56ee
  40b060:	pop    esp
  40b061:	fst    QWORD PTR [edi-0x591f37a4]
  40b067:	mov    esp,0xdf4c162
  40b06c:	add    eax,esi
  40b06e:	js     0x40b053
  40b070:	cmp    DWORD PTR [ecx+0x7d],edi
  40b073:	aad    0xbe
  40b075:	shr    DWORD PTR [ebx+0x17],cl
  40b078:	xlat   BYTE PTR ds:[ebx]
  40b079:	and    edi,esi
  40b07b:	and    al,0x55
  40b07d:	je     0x40b038
  40b07f:	mov    cs,WORD PTR [eax+0x477f3dad]
  40b085:	outs   dx,BYTE PTR ds:[esi]
  40b086:	cmc    
  40b087:	jno    0x40b0ae
  40b089:	and    al,0xef
  40b08b:	xor    al,0x2f
  40b08d:	mov    cl,BYTE PTR [edx+0x38d55236]
  40b093:	shr    BYTE PTR [eax-0x6a],0xae
  40b097:	pop    edi
  40b098:	mov    edi,0x2d5334e6
  40b09d:	fsub   DWORD PTR ss:[edx+0x58]
  40b0a1:	mov    eax,DWORD PTR [edi+0x35]
  40b0a4:	daa    
  40b0a5:	ins    BYTE PTR es:[edi],dx
  40b0a6:	mov    eax,0x1e98b317
  40b0ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ac:	fld    QWORD PTR [edi+ecx*4]
  40b0af:	or     BYTE PTR [ebx],0xd2
  40b0b2:	mov    dl,0x5d
  40b0b4:	mov    esp,DWORD PTR [eax]
  40b0b6:	out    dx,al
  40b0b7:	sbb    ebx,DWORD PTR [esi+0x54]
  40b0ba:	jp     0x40b103
  40b0bc:	push   ebx
  40b0bd:	sub    al,0x2c
  40b0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c0:	mov    al,ds:0xdc25528e
  40b0c5:	push   edi
  40b0c6:	hlt    
  40b0c7:	mov    ecx,0xdd61d448
  40b0cc:	mov    cl,0x83
  40b0ce:	popa   
  40b0cf:	out    dx,eax
  40b0d0:	push   edi
  40b0d1:	mov    ah,0x41
  40b0d3:	pop    esp
  40b0d4:	icebp  
  40b0d5:	dec    eax
  40b0d6:	push   edx
  40b0d7:	and    DWORD PTR [ebx-0x7a790d32],edx
  40b0dd:	adc    dh,ah
  40b0df:	stc    
  40b0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e1:	mov    ah,0x82
  40b0e3:	mov    ds:0xfff784eb,eax
  40b0e8:	push   cs
  40b0e9:	lds    ebp,FWORD PTR [ebp+0x3ae6f410]
  40b0ef:	pop    edi
  40b0f0:	fdiv   QWORD PTR [ecx+ebx*1+0x2531fb89]
  40b0f7:	mov    BYTE PTR [eax-0x31],0x1d
  40b0fb:	xchg   ebp,eax
  40b0fc:	mov    edi,0x3391baa7
  40b101:	push   ecx
  40b102:	xchg   DWORD PTR [edi-0x18f4a3ad],ecx
  40b108:	and    eax,0x471713e4
  40b10d:	and    bh,0xd7
  40b110:	sbb    ecx,ebx
  40b112:	or     eax,0x8ed8ce86
  40b117:	mov    esi,0x7a32b54f
  40b11c:	mov    esp,0xa54fc635
  40b121:	test   al,0x75
  40b123:	push   es
  40b124:	add    bh,BYTE PTR [eax+0x0]
  40b127:	dec    ebx
  40b128:	adc    eax,0xbe3ae81f
  40b12d:	sbb    edx,DWORD PTR ds:0x2d677722
  40b133:	inc    ebx
  40b134:	(bad)  
  40b136:	push   eax
  40b137:	les    esp,FWORD PTR [ebp-0x72]
  40b13a:	sti    
  40b13b:	sbb    DWORD PTR [eax+0xb],ecx
  40b13e:	mov    dl,0x1c
  40b140:	mov    cs,edi
  40b142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b143:	ja     0x40b1ab
  40b145:	push   cs
  40b146:	aas    
  40b147:	add    eax,ecx
  40b149:	mov    ebp,0x477d559
  40b14e:	or     eax,0xf4a1b519
  40b153:	(bad)  
  40b156:	sub    BYTE PTR [esi],dl
  40b158:	retf   
  40b159:	xchg   ecx,eax
  40b15a:	inc    si
  40b15c:	jp     0x40b0e9
  40b15e:	sub    edx,edi
  40b160:	pop    ebp
  40b161:	inc    eax
  40b162:	arpl   WORD PTR [esi+edi*1+0x2e9b668f],di
  40b169:	sbb    al,BYTE PTR ds:0xe7554b84
  40b16f:	daa    
  40b170:	mov    ebp,ebp
  40b172:	jae    0x40b14b
  40b174:	fld    DWORD PTR [eax+0x5113f4ca]
  40b17a:	pop    ss
  40b17b:	fcmovu st,st(1)
  40b17d:	popf   
  40b17e:	dec    ebp
  40b17f:	add    eax,0x86870f0b
  40b184:	push   esi
  40b185:	(bad)  [ebx+0x1f]
  40b188:	xchg   ecx,eax
  40b189:	out    dx,eax
  40b18a:	jmp    0xf6ca:0xcc04de60
  40b191:	sbb    al,0xae
  40b193:	mov    dl,0x9b
  40b195:	push   ss
  40b196:	(bad)  
  40b197:	sbb    al,0xe0
  40b199:	inc    ebx
  40b19a:	cmp    ebp,ebx
  40b19c:	mov    dh,BYTE PTR [eax-0x69a869a7]
  40b1a2:	sub    ebp,DWORD PTR [ebx-0xe430a3c]
  40b1a8:	bound  ebp,QWORD PTR [ebx+0x58]
  40b1ab:	pop    ds
  40b1ac:	fst    DWORD PTR [edx+0x2ad8e64d]
  40b1b2:	lds    ecx,FWORD PTR [edi]
  40b1b4:	dec    ebx
  40b1b5:	aaa    
  40b1b6:	xchg   esp,eax
  40b1b7:	ss clc 
  40b1b9:	(bad)  
  40b1ba:	jp     0x40b140
  40b1bc:	mov    ebp,0xcef1cd90
  40b1c1:	dec    esp
  40b1c2:	les    ecx,FWORD PTR [ecx+0x2e149151]
  40b1c8:	push   ds
  40b1c9:	pxor   mm4,mm6
  40b1cc:	je     0x40b20d
  40b1ce:	jge    0x40b214
  40b1d0:	inc    ebx
  40b1d1:	xchg   esi,eax
  40b1d2:	sti    
  40b1d3:	ja     0x40b243
  40b1d5:	out    dx,eax
  40b1d6:	imul   esp,DWORD PTR [eax-0x6d227ca],0xe745d110
  40b1e0:	ss stos BYTE PTR es:[edi],al
  40b1e2:	dec    edx
  40b1e3:	lods   al,BYTE PTR ds:[esi]
  40b1e4:	jnp    0x40b187
  40b1e6:	push   ebp
  40b1e7:	inc    esp
  40b1e8:	ins    BYTE PTR es:[edi],dx
  40b1e9:	ds cmp al,0xbe
  40b1ec:	add    ecx,edx
  40b1ee:	int3   
  40b1ef:	lahf   
  40b1f0:	sub    eax,0xdb76a8d1
  40b1f5:	dec    esi
  40b1f6:	out    0x60,eax
  40b1f8:	cmp    eax,ecx
  40b1fa:	push   esi
  40b1fb:	data16 (bad) 
  40b1fd:	retf   
  40b1fe:	mov    ebp,0x21376ee5
  40b203:	jne    0x40b230
  40b205:	sti    
  40b206:	mov    eax,ds:0x8644ed8d
  40b20b:	es out 0x57,eax
  40b20e:	fmulp  st(3),st
  40b210:	pause  
  40b212:	pop    eax
  40b213:	push   DWORD PTR [esi-0x14]
  40b216:	jnp    0x40b278
  40b218:	pop    esp
  40b219:	pop    ss
  40b21a:	jecxz  0x40b20b
  40b21c:	dec    ebx
  40b21d:	mov    WORD PTR [ecx+0x142f145],?
  40b223:	inc    eax
  40b224:	div    BYTE PTR [ecx-0x41]
  40b227:	hlt    
  40b228:	es inc eax
  40b22a:	jecxz  0x40b259
  40b22c:	dec    esi
  40b22d:	(bad)  
  40b22e:	imul   ebp,esp,0x6e739db5
  40b234:	jae    0x40b239
  40b236:	add    al,0x9d
  40b238:	fisub  DWORD PTR [esi]
  40b23a:	dec    ebp
  40b23b:	and    dl,BYTE PTR [ebx-0x27d8edd6]
  40b241:	fucom  st(7)
  40b243:	aaa    
  40b244:	pusha  
  40b245:	ffreep st(2)
  40b247:	(bad)  
  40b249:	scas   eax,DWORD PTR es:[edi]
  40b24a:	cmp    cl,dh
  40b24c:	in     al,0xb7
  40b24e:	xchg   esp,eax
  40b24f:	aad    0x39
  40b251:	data16 cmp BYTE PTR [ebp-0x2e82b0ca],bl
  40b258:	dec    ebx
  40b259:	cmp    DWORD PTR [ecx+0x7a17f1a6],edi
  40b25f:	xor    DWORD PTR [esi-0x13],edi
  40b262:	mov    ebp,0xd21fc822
  40b267:	inc    ebp
  40b268:	lods   al,BYTE PTR ds:[esi]
  40b269:	stc    
  40b26a:	jecxz  0x40b2a3
  40b26c:	adc    eax,0x93742867
  40b271:	inc    ebp
  40b272:	jb     0x40b29d
  40b274:	sahf   
  40b275:	out    dx,eax
  40b276:	cmp    BYTE PTR [esp+ebp*8+0x6ea94aa5],bl
  40b27d:	shl    bl,cl
  40b27f:	dec    ebx
  40b280:	inc    esi
  40b281:	cmp    edx,edx
  40b283:	pop    es
  40b284:	lods   eax,DWORD PTR ds:[esi]
  40b285:	(bad)  
  40b286:	mov    dl,0x96
  40b288:	aad    0xe5
  40b28a:	mov    WORD PTR [esi-0x59f974c4],fs
  40b290:	mov    eax,ds:0x3bffa016
  40b295:	pop    es
  40b296:	dec    ecx
  40b297:	jb     0x40b27a
  40b299:	push   esi
  40b29a:	mov    al,ds:0xc4e17b07
  40b29f:	sub    ebx,DWORD PTR [esi-0x60]
  40b2a2:	and    eax,0x4657ee28
  40b2a7:	adc    BYTE PTR [ecx],bl
  40b2a9:	or     al,0xea
  40b2ab:	xchg   ebx,eax
  40b2ac:	rol    BYTE PTR [ecx],0xfe
  40b2af:	and    cl,al
  40b2b1:	test   DWORD PTR [ebx-0x7aa73d34],esp
  40b2b7:	mov    ch,BYTE PTR [ebp+0x7b773aba]
  40b2bd:	xchg   ebp,eax
  40b2be:	sbb    BYTE PTR [eax+0x7141eadf],dh
  40b2c4:	ss pop ebx
  40b2c6:	fcom   DWORD PTR [esi]
  40b2c8:	dec    ecx
  40b2c9:	jo     0x40b27d
  40b2cb:	daa    
  40b2cc:	jmp    0x14668754
  40b2d1:	xor    ch,bh
  40b2d3:	nop
  40b2d4:	(bad)  
  40b2d5:	sbb    DWORD PTR [ecx-0x460a0011],ebx
  40b2db:	pop    ds
  40b2dc:	or     edi,DWORD PTR [edx+0x2b]
  40b2df:	iret   
  40b2e0:	cmp    BYTE PTR gs:[esi],al
  40b2e3:	aaa    
  40b2e4:	xchg   esi,ebp
  40b2e6:	shr    DWORD PTR ds:0xe4db749c,0xf6
  40b2ed:	mov    esp,0x81ec5c35
  40b2f2:	imul   esp,DWORD PTR [ecx+0x27a4f5e6],0x54
  40b2f9:	fisttp DWORD PTR ds:0xc39628fb
  40b2ff:	std    
  40b300:	xor    ecx,DWORD PTR [edi+0x1e60e2a7]
  40b306:	and    al,0xd6
  40b308:	(bad)  [eax]
  40b30a:	adc    eax,0xbb60c7f2
  40b30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b310:	mov    ebx,0x230d6612
  40b315:	push   esp
  40b316:	aam    0x55
  40b318:	out    dx,eax
  40b319:	(bad)  
  40b31b:	mov    BYTE PTR [ebp+0x49],bl
  40b31e:	inc    edx
  40b31f:	rol    DWORD PTR [ebx],cl
  40b321:	dec    ecx
  40b322:	test   BYTE PTR [edi-0x32f5e985],bl
  40b328:	push   esp
  40b329:	push   es
  40b32a:	mov    dl,BYTE PTR [ebp-0xf316154]
  40b330:	jmp    0x173a:0x1bc5800c
  40b337:	mov    eax,DWORD PTR [esi+0x1d25b893]
  40b33d:	or     ebp,eax
  40b33f:	push   edx
  40b340:	fimul  DWORD PTR [ebp-0x361750eb]
  40b346:	mov    ecx,0x2214825c
  40b34b:	je     0x40b3aa
  40b34d:	ja     0x40b2d9
  40b34f:	ret    
  40b350:	mov    eax,0xce049961
  40b355:	jmp    0x6b6:0xa9ee8169
  40b35c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35d:	mov    edx,0xbd51d750
  40b362:	punpckhdq mm0,mm3
  40b365:	mov    bh,0xb1
  40b367:	mov    bl,0x43
  40b369:	aas    
  40b36a:	push   cs
  40b36b:	sub    eax,0x1be2660e
  40b370:	push   ds
  40b371:	jno    0x40b3b7
  40b373:	leave  
  40b374:	add    DWORD PTR [edx],0xffffffb3
  40b377:	stc    
  40b378:	mov    ebx,0xa18775d5
  40b37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b37e:	inc    edi
  40b37f:	enter  0x3ee4,0xd6
  40b383:	cld    
  40b384:	xchg   esi,eax
  40b385:	add    edi,0xf30141a8
  40b38b:	push   ebx
  40b38c:	lds    edx,FWORD PTR [edi-0x2c544734]
  40b392:	mov    eax,ds:0xfe98d4b4
  40b397:	inc    ebp
  40b398:	dec    ecx
  40b399:	arpl   WORD PTR [edi],cx
  40b39b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b39c:	clc    
  40b39d:	or     al,0xfd
  40b39f:	icebp  
  40b3a0:	das    
  40b3a1:	cmp    ecx,esi
  40b3a3:	aaa    
  40b3a4:	fidiv  DWORD PTR ds:0xfb447d9
  40b3aa:	push   ecx
  40b3ab:	xchg   edx,eax
  40b3ac:	pushf  
  40b3ad:	shl    BYTE PTR [edi],0x84
  40b3b0:	xchg   BYTE PTR [eax+0x23],bl
  40b3b3:	mov    bl,0x73
  40b3b5:	xchg   edx,eax
  40b3b6:	test   DWORD PTR [edx],ebp
  40b3b8:	xor    dh,ch
  40b3ba:	inc    eax
  40b3bb:	sub    BYTE PTR [ebp+0x20],dl
  40b3be:	pop    es
  40b3bf:	and    edx,eax
  40b3c1:	dec    eax
  40b3c2:	jl     0x40b35c
  40b3c4:	ret    0xa868
  40b3c7:	xlat   BYTE PTR ds:[ebx]
  40b3c8:	das    
  40b3c9:	or     DWORD PTR ds:0x912a31b6,edx
  40b3cf:	and    DWORD PTR cs:[edx-0xa0aa4df],esi
  40b3d6:	repnz call 0xefae:0xf7896232
  40b3de:	xchg   ebp,eax
  40b3df:	mov    cl,0x37
  40b3e1:	cmp    dl,0x45
  40b3e4:	imul   eax,DWORD PTR [eax-0x5ba10161],0xfffffffc
  40b3eb:	mov    ebp,0x98349520
  40b3f0:	icebp  
  40b3f1:	fs and ah,bh
  40b3f4:	ja     0x40b474
  40b3f6:	or     dh,BYTE PTR [eax-0x715f2040]
  40b3fc:	xchg   ebx,eax
  40b3fd:	add    bl,ah
  40b3ff:	outs   dx,BYTE PTR ds:[esi]
  40b400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b401:	out    dx,al
  40b402:	in     eax,dx
  40b403:	inc    edi
  40b404:	mov    cl,0x91
  40b406:	pop    ecx
  40b407:	or     ch,bh
  40b409:	pop    es
  40b40a:	(bad)  
  40b40b:	sub    ah,BYTE PTR [edi]
  40b40d:	icebp  
  40b40e:	es jmp 0x40b427
  40b411:	xlat   BYTE PTR ds:[ebx]
  40b412:	popf   
  40b413:	jle    0x40b449
  40b415:	push   edi
  40b416:	or     DWORD PTR [ecx-0x4978321],esp
  40b41c:	xchg   esp,edi
  40b41e:	pop    esp
  40b41f:	and    al,0xeb
  40b421:	mov    esp,0x16c5dfdb
  40b426:	fcom   st(5)
  40b428:	pop    edi
  40b429:	sbb    eax,0x3f33b9a6
  40b42e:	cmp    al,0x79
  40b430:	sbb    BYTE PTR [eax-0x4305c05f],0x44
  40b437:	inc    edi
  40b438:	dec    ecx
  40b439:	idiv   DWORD PTR [esi]
  40b43b:	jge    0x40b400
  40b43d:	xor    eax,0xb9db3a40
  40b442:	call   0x4c47:0xaf2384ec
  40b449:	cs out 0xd7,eax
  40b44c:	hlt    
  40b44d:	(bad)  
  40b44e:	push   0x508dc1fa
  40b453:	cmova  ecx,DWORD PTR [esi-0x353d57f2]
  40b45a:	sbb    ch,BYTE PTR [edx+0x4282db9a]
  40b460:	mov    ds:0x4600a763,al
  40b465:	inc    BYTE PTR [esi+0x14ce1291]
  40b46b:	(bad)
  40b46e:	in     al,0x11
  40b470:	dec    eax
  40b471:	sbb    DWORD PTR [ebp-0x80],edi
  40b474:	add    DWORD PTR ds:0xc568f7dd,ebx
  40b47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b47b:	btc    DWORD PTR [esi+ecx*1+0x7dca01e3],edx
  40b483:	dec    esp
  40b484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b485:	test   al,0xd8
  40b487:	add    DWORD PTR [eax-0x70505087],ebx
  40b48d:	lock jno 0x40b4f5
  40b490:	mov    cl,0xd
  40b492:	lods   al,BYTE PTR ds:[esi]
  40b493:	mov    ebx,0x8fbae1af
  40b498:	mov    ds:0xe50aafca,al
  40b49d:	mov    esi,DWORD PTR [ebp+0x6da8b30e]
  40b4a3:	mov    al,0xa0
  40b4a5:	shl    DWORD PTR [edx+0x6],cl
  40b4a8:	add    DWORD PTR [esi-0x47],ecx
  40b4ab:	mov    ebx,0x39454207
  40b4b0:	jo     0x40b488
  40b4b2:	adc    DWORD PTR [ebp+0x3d],0x35
  40b4b6:	xor    BYTE PTR [edx-0x5dcc345f],bl
  40b4bc:	or     DWORD PTR [edx+0x77],0xcd4a404c
  40b4c3:	sbb    BYTE PTR [ebp+0x3c],ah
  40b4c6:	sbb    DWORD PTR [ebx-0x58],ebx
  40b4c9:	pop    esp
  40b4ca:	aam    0xa0
  40b4cc:	icebp  
  40b4cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ce:	in     eax,dx
  40b4cf:	and    eax,0x657b0217
  40b4d4:	test   al,0x1f
  40b4d6:	dec    ebx
  40b4d7:	mov    ch,0xbb
  40b4d9:	or     DWORD PTR [eax],0x2f
  40b4dc:	inc    esi
  40b4dd:	fsub   DWORD PTR [edx]
  40b4df:	iret   
  40b4e0:	icebp  
  40b4e1:	xor    dh,BYTE PTR [ecx+eax*2-0x257ca877]
  40b4e8:	or     bh,bh
  40b4ea:	dec    edi
  40b4eb:	dec    eax
  40b4ec:	pop    edx
  40b4ed:	mov    edx,0xce765e21
  40b4f2:	dec    ebp
  40b4f3:	sbb    eax,0x7e116726
  40b4f8:	add    eax,0x97a16041
  40b4fd:	retf   0x8e3a
  40b500:	mov    edi,0x8344594e
  40b505:	cmp    ebp,DWORD PTR [eax]
  40b507:	sub    DWORD PTR [edi-0x73dab93e],ecx
  40b50d:	imul   ebp,esp,0x68
  40b510:	and    eax,0xeef38bb0
  40b515:	mov    esi,0x46ed0787
  40b51a:	popa   
  40b51b:	mov    eax,ds:0x5642c53a
  40b520:	and    ebp,0x83599fcb
  40b526:	fs test bl,bh
  40b529:	sub    DWORD PTR [edx-0x681908a9],esi
  40b52f:	push   esi
  40b530:	jne    0x40b57c
  40b532:	dec    ebp
  40b533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b534:	arpl   WORD PTR [edi],sp
  40b536:	test   al,0x0
  40b538:	xchg   edx,eax
  40b539:	fisub  DWORD PTR [esi-0x375fc187]
  40b53f:	cs addr16 sbb edx,ecx
  40b543:	jo     0x40b4c7
  40b545:	mov    esi,0x8e997d29
  40b54a:	(bad)  
  40b54b:	in     eax,dx
  40b54c:	sub    DWORD PTR ds:0x7270016c,ebx
  40b552:	lods   eax,DWORD PTR ds:[esi]
  40b553:	xchg   ebp,eax
  40b555:	pushf  
  40b556:	jge    0x40b4f0
  40b558:	dec    ebx
  40b559:	and    edi,DWORD PTR [ecx]
  40b55b:	mov    DWORD PTR [edi],esp
  40b55d:	arpl   WORD PTR [edi+0x4095aa2],si
  40b563:	jo     0x40b4f5
  40b565:	div    BYTE PTR [ebx-0x9]
  40b568:	shl    DWORD PTR [ecx-0x6bde3165],0x18
  40b56f:	in     al,0x5b
  40b571:	popf   
  40b572:	sar    DWORD PTR [eax-0x64],1
  40b575:	stc    
  40b576:	int3   
  40b577:	adc    DWORD PTR [ebp+0x41],ebp
  40b57a:	xor    al,0x12
  40b57c:	cmc    
  40b57d:	jl     0x40b562
  40b57f:	repnz test al,0x5b
  40b582:	sahf   
  40b583:	fwait
  40b584:	jl     0x40b572
  40b586:	(bad)  
  40b587:	pop    ebx
  40b588:	fst    st(3)
  40b58a:	ror    BYTE PTR [esp+esi*8],1
  40b58d:	push   ecx
  40b58e:	add    eax,0xb6b32813
  40b593:	mov    ah,0x12
  40b595:	cmp    esp,eax
  40b597:	dec    ecx
  40b598:	sbb    eax,DWORD PTR [eax]
  40b59a:	in     eax,0x1b
  40b59c:	imul   ebp,DWORD PTR [esi-0x798b49c4],0xb67d0ca
  40b5a6:	std    
  40b5a7:	gs push 0xffffffd2
  40b5aa:	stos   DWORD PTR es:[edi],eax
  40b5ab:	sbb    ebp,DWORD PTR [eax+edx*2]
  40b5ae:	and    al,0xb8
  40b5b0:	push   0xffffffd9
  40b5b2:	rcl    ebp,cl
  40b5b4:	gs call 0x4db2:0xa999c00e
  40b5bc:	neg    BYTE PTR [edi+eiz*1]
  40b5bf:	add    BYTE PTR [ebx-0x10f3185f],0x53
  40b5c6:	xchg   edx,eax
  40b5c7:	nop
  40b5c8:	mov    al,ds:0x429debc6
  40b5cd:	loope  0x40b5da
  40b5cf:	mov    al,ds:0x526a7fda
  40b5d4:	lods   al,BYTE PTR ds:[esi]
  40b5d5:	imul   edx,esi,0xe01df96b
  40b5db:	mov    ecx,0x80880943
  40b5e0:	mov    esp,0xd12ed019
  40b5e5:	sbb    eax,0x2885029d
  40b5ea:	push   es
  40b5eb:	mov    dl,BYTE PTR [edx+0x2fc095c9]
  40b5f1:	add    BYTE PTR [eax],cl
  40b5f3:	pop    eax
  40b5f4:	gs clc 
  40b5f6:	cdq    
  40b5f7:	sbb    BYTE PTR [edx+0x0],ch
  40b5fa:	fwait
  40b5fb:	mov    esp,DWORD PTR [esi+0x6c]
  40b5fe:	(bad)  
  40b5ff:	ror    bl,0x55
  40b602:	int    0xc1
  40b604:	pop    edx
  40b605:	jg     0x40b59a
  40b607:	sbb    al,0xae
  40b609:	add    al,BYTE PTR [ecx+0x57]
  40b60c:	fsubr  QWORD PTR [ebx+0x7f]
  40b60f:	aam    0x64
  40b611:	cmp    al,ah
  40b613:	xor    al,0x9d
  40b615:	push   ebp
  40b616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b617:	call   0x6f191483
  40b61c:	xor    edx,DWORD PTR [eax+0x54]
  40b61f:	push   ebx
  40b620:	add    DWORD PTR [ebx+0x4a6c67e3],ebp
  40b626:	xchg   ebp,eax
  40b627:	mov    bl,0x45
  40b629:	dec    ecx
  40b62a:	or     BYTE PTR [esp+esi*4],ah
  40b62d:	inc    ebp
  40b62e:	mov    esp,0xee61abf7
  40b633:	pop    ebp
  40b634:	adc    ch,BYTE PTR [ebx]
  40b636:	test   DWORD PTR [ecx-0x4d],ebp
  40b639:	push   esi
  40b63a:	mov    ebx,0xde605fdc
  40b63f:	jo     0x40b6b3
  40b641:	or     DWORD PTR [edi-0x1f],esi
  40b644:	mov    bl,0x67
  40b646:	xlat   BYTE PTR ds:[ebx]
  40b647:	ins    BYTE PTR es:[edi],dx
  40b648:	or     BYTE PTR [ebp+0x13],dh
  40b64b:	cmp    ecx,DWORD PTR [edi+ecx*2]
  40b64e:	js     0x40b67f
  40b650:	int3   
  40b651:	outs   dx,BYTE PTR ds:[esi]
  40b652:	mov    bh,0x6a
  40b654:	lds    esp,FWORD PTR [esi-0x25]
  40b657:	aas    
  40b658:	cmp    al,0x80
  40b65a:	test   al,0x73
  40b65c:	mov    ds:0xba6b6a61,eax
  40b661:	test   DWORD PTR [esp+eiz*8+0x46],ebx
  40b665:	dec    edi
  40b666:	mov    ds,WORD PTR [edx-0x1ad761c6]
  40b66c:	fwait
  40b66d:	inc    ebx
  40b66e:	dec    edx
  40b66f:	(bad)  [edx+0xba034b6]
  40b675:	cwde   
  40b676:	jmp    0x43e6:0xf84e0cce
  40b67d:	jmp    0x4616:0x4173fdc7
  40b684:	add    ebx,DWORD PTR [ebx+0x313649f1]
  40b68a:	fist   WORD PTR [ecx+0x50]
  40b68d:	or     BYTE PTR [esi+edi*4+0x62],0x26
  40b692:	push   ss
  40b693:	xchg   esp,eax
  40b694:	push   cs
  40b695:	adc    si,WORD PTR [ebp+0x367167d5]
  40b69c:	dec    esp
  40b69d:	push   ss
  40b69e:	push   eax
  40b69f:	dec    ebx
  40b6a0:	mov    WORD PTR [eax-0x2e],cs
  40b6a3:	scas   eax,DWORD PTR es:[edi]
  40b6a4:	je     0x40b650
  40b6a6:	add    eax,DWORD PTR [ebp+0x26]
  40b6a9:	test   DWORD PTR [edx],esp
  40b6ab:	pop    ebp
  40b6ac:	mov    al,ds:0xae2d5c8c
  40b6b1:	enter  0x81ad,0xcf
  40b6b5:	mov    eax,ss:0x5dabe0b0
  40b6bb:	(bad)  
  40b6bc:	pusha  
  40b6bd:	pushf  
  40b6be:	add    al,0x52
  40b6c0:	in     eax,dx
  40b6c1:	loop   0x40b737
  40b6c3:	test   ah,bl
  40b6c5:	scas   al,BYTE PTR es:[edi]
  40b6c6:	pop    edx
  40b6c7:	pop    ebp
  40b6c8:	in     al,dx
  40b6c9:	leave  
  40b6ca:	and    al,bl
  40b6cc:	add    DWORD PTR [ebx-0x861a19c],0x29
  40b6d3:	enter  0xc7a2,0xdc
  40b6d7:	xor    al,0x72
  40b6d9:	pop    edi
  40b6da:	out    0xd9,eax
  40b6dc:	pop    eax
  40b6dd:	repnz (bad) 
  40b6df:	push   edi
  40b6e0:	jle    0x40b69d
  40b6e2:	imul   ebp,DWORD PTR [ebx-0x35],0xffffff8e
  40b6e6:	pop    ds
  40b6e7:	aam    0x6b
  40b6e9:	push   edi
  40b6ea:	iret   
  40b6eb:	jb     0x40b6b8
  40b6ed:	cmp    dl,ch
  40b6ef:	hlt    
  40b6f0:	add    dl,BYTE PTR [ebp+0x1f10c964]
  40b6f6:	les    ecx,FWORD PTR [ebp-0x5d09b4c1]
  40b6fc:	jno    0x40b760
  40b6fe:	add    esp,edi
  40b700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b701:	jl     0x40b768
  40b703:	ins    BYTE PTR es:[edi],dx
  40b704:	std    
  40b705:	out    dx,eax
  40b706:	push   ebp
  40b707:	jle    0x40b775
  40b709:	mov    esi,gs
  40b70b:	sbb    ebx,DWORD PTR [esi-0x22e8761a]
  40b711:	js     0x40b6d0
  40b713:	push   cs
  40b714:	data16 sub dh,BYTE PTR [ecx-0x70409439]
  40b71b:	(bad)  
  40b71d:	cmp    ah,BYTE PTR [ecx+edi*8-0x5cd2a95d]
  40b724:	aam    0x76
  40b726:	jo     0x40b724
  40b728:	out    dx,al
  40b729:	sub    al,cl
  40b72b:	shr    BYTE PTR [esi],1
  40b72d:	inc    esp
  40b72e:	rcl    ebx,cl
  40b730:	sahf   
  40b731:	das    
  40b732:	add    eax,0x4dac1824
  40b737:	and    eax,0x606850be
  40b73c:	imul   edi,edx,0xffffffa1
  40b73f:	jns    0x40b6dc
  40b741:	aam    0xee
  40b743:	push   esp
  40b744:	nop
  40b745:	scas   eax,DWORD PTR es:[edi]
  40b746:	test   al,0x99
  40b748:	loope  0x40b78c
  40b74a:	sub    al,0x47
  40b74c:	std    
  40b74d:	leave  
  40b74e:	call   0x26be:0x36691298
  40b755:	xchg   ebx,eax
  40b756:	pop    ebx
  40b757:	xchg   ebx,eax
  40b758:	sub    BYTE PTR [ebx-0x79],cl
  40b75b:	les    ebp,FWORD PTR [edx-0x4c]
  40b75e:	daa    
  40b75f:	aam    0x8b
  40b761:	std    
  40b762:	pop    ecx
  40b763:	fld    QWORD PTR [ecx+eiz*8+0x33c84e3e]
  40b76a:	xchg   DWORD PTR [eax-0x5e9690e8],ebx
  40b770:	jnp    0x40b76b
  40b772:	(bad)  
  40b773:	sub    al,0xb0
  40b775:	pop    esi
  40b776:	(bad)  
  40b778:	push   ebx
  40b779:	and    DWORD PTR [ebp-0x1b5db2ba],esi
  40b77f:	add    cl,0x25
  40b782:	bt     DWORD PTR ds:0x80802505,0x33
  40b78a:	mov    esi,0x91d4c250
  40b78f:	mov    cl,0xf8
  40b791:	push   0x1f236033
  40b796:	or     eax,0x90a242e9
  40b79b:	test   al,0xb2
  40b79d:	(bad)
  40b7a0:	xor    eax,0x288074ef
  40b7a5:	in     eax,dx
  40b7a6:	fidiv  WORD PTR [edi-0x25]
  40b7a9:	inc    edi
  40b7aa:	popf   
  40b7ab:	outs   dx,DWORD PTR ds:[esi]
  40b7ac:	add    eax,0x5ab625a6
  40b7b1:	pusha  
  40b7b2:	jns    0x40b7f8
  40b7b4:	jmp    0x40b7da
  40b7b6:	pop    edi
  40b7b7:	add    DWORD PTR ds:0x9f9770d0,eax
  40b7bd:	pusha  
  40b7be:	loope  0x40b821
  40b7c0:	jae    0x40b792
  40b7c2:	push   esp
  40b7c3:	sbb    al,0x25
  40b7c5:	mov    ecx,0xba5a687e
  40b7ca:	test   DWORD PTR [esi+0xb63d751],eax
  40b7d0:	add    DWORD PTR [esi*8+0x6d43a882],ebp
  40b7d7:	push   ebx
  40b7d8:	mov    ebp,0xf5aa3148
  40b7dd:	int3   
  40b7de:	out    dx,eax
  40b7df:	inc    edx
  40b7e0:	test   BYTE PTR [eax],bh
  40b7e2:	stos   BYTE PTR es:[edi],al
  40b7e3:	push   ebx
  40b7e4:	push   ss
  40b7e5:	add    ebp,DWORD PTR [esi+0x63]
  40b7e8:	mov    ebp,ecx
  40b7ea:	lahf   
  40b7eb:	popa   
  40b7ec:	popf   
  40b7ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ee:	out    dx,eax
  40b7ef:	push   eax
  40b7f0:	pop    edi
  40b7f1:	enter  0xe385,0x92
  40b7f5:	clc    
  40b7f6:	pop    ds
  40b7f7:	les    esi,FWORD PTR [esi-0x473221bb]
  40b7fd:	shr    BYTE PTR ss:[ecx-0x29],1
  40b801:	sub    DWORD PTR [esp+edx*4-0x4195cd09],esp
  40b808:	or     DWORD PTR [edx+0x66],edi
  40b80b:	rol    DWORD PTR [ebx+0xb],0x32
  40b80f:	repnz popa 
  40b811:	xchg   esp,esi
  40b813:	push   eax
  40b814:	out    0xf5,eax
  40b816:	xchg   esp,eax
  40b817:	dec    esp
  40b818:	pop    es
  40b819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b81a:	pop    ebx
  40b81b:	ss ret 0x6b7c
  40b81f:	loope  0x40b888
  40b821:	in     eax,dx
  40b822:	mov    cl,0x73
  40b824:	xchg   esi,eax
  40b825:	jmp    0x360b9ec9
  40b82a:	xchg   BYTE PTR ds:[esi+0x22],dh
  40b82e:	push   ebp
  40b82f:	into   
  40b830:	xor    eax,0xaa4fea6a
  40b835:	ds ja  0x40b8b6
  40b838:	xchg   esi,eax
  40b839:	rol    bh,cl
  40b83b:	cmp    al,0xe2
  40b83d:	push   esi
  40b83e:	icebp  
  40b83f:	ja     0x40b808
  40b841:	inc    ebp
  40b842:	fild   QWORD PTR [eax]
  40b844:	xor    esp,DWORD PTR [ebx+0xa]
  40b847:	pop    edi
  40b848:	out    0x44,eax
  40b84a:	dec    ecx
  40b84b:	mov    ebx,ecx
  40b84d:	aas    
  40b84e:	sar    BYTE PTR [edi],1
  40b850:	xchg   esp,eax
  40b851:	inc    esi
  40b852:	ins    BYTE PTR es:[edi],dx
  40b853:	addr16 cs sbb al,0x36
  40b857:	mov    cl,0x22
  40b859:	mov    dl,BYTE PTR cs:[esi+ecx*4+0x4f]
  40b85e:	mov    ds:0x419bedde,al
  40b863:	jnp    0x40b8bc
  40b865:	in     al,dx
  40b866:	jbe    0x40b87f
  40b868:	dec    esi
  40b869:	loop   0x40b8a3
  40b86b:	lea    edx,[eax+0x18]
  40b86e:	ja     0x40b858
  40b870:	xor    al,ch
  40b872:	imul   edi,DWORD PTR [esp+ecx*1+0x5e6d39b2],0xffffffb1
  40b87a:	sub    bh,BYTE PTR [esi-0x32ef7074]
  40b880:	pop    eax
  40b881:	fwait
  40b882:	or     al,ch
  40b884:	sub    BYTE PTR [ecx+0xa],0x37
  40b888:	inc    ecx
  40b889:	adc    al,0xdb
  40b88b:	arpl   WORD PTR ds:0x95cbb06f,ax
  40b891:	cmp    BYTE PTR [ebp+0x44cfa071],dl
  40b897:	mov    WORD PTR [edi+0x23da48e6],?
  40b89d:	fdivrp st(1),st
  40b89f:	sti    
  40b8a0:	sub    eax,0xc26584aa
  40b8a5:	mov    esp,0xa1859159
  40b8aa:	inc    esp
  40b8ab:	jns    0x40b886
  40b8ad:	cli    
  40b8ae:	xchg   esi,eax
  40b8af:	stos   DWORD PTR es:[edi],eax
  40b8b0:	outs   dx,BYTE PTR ds:[esi]
  40b8b1:	nop
  40b8b2:	pusha  
  40b8b3:	push   ebx
  40b8b4:	ins    BYTE PTR es:[edi],dx
  40b8b5:	cmp    al,BYTE PTR [eax+ebx*4-0x70d1fdd]
  40b8bc:	mov    dl,0x60
  40b8be:	xlat   BYTE PTR ds:[ebx]
  40b8bf:	fnstcw WORD PTR [edi]
  40b8c1:	fstp   QWORD PTR [ebp-0x5e]
  40b8c4:	cmp    DWORD PTR [ebx+0x70],esi
  40b8c7:	mov    al,0x69
  40b8c9:	jae    0x40b939
  40b8cb:	xor    al,0xa3
  40b8ce:	cmp    bl,dl
  40b8d0:	test   cl,cl
  40b8d2:	in     al,dx
  40b8d3:	xchg   ebp,eax
  40b8d4:	push   ecx
  40b8d5:	fs (bad) 
  40b8d7:	pop    ecx
  40b8d8:	sub    dl,bh
  40b8da:	jns    0x40b92a
  40b8dc:	cmc    
  40b8dd:	repnz xchg ebx,eax
  40b8df:	sub    al,0xba
  40b8e1:	es ins DWORD PTR es:[edi],dx
  40b8e3:	in     al,0xc1
  40b8e5:	xchg   edi,eax
  40b8e6:	cmp    al,0x7d
  40b8e8:	jmp    0x40b8df
  40b8ea:	cs mov ebx,0x1ccbd165
  40b8f0:	fwait
  40b8f1:	xor    BYTE PTR [ebp-0x12],dl
  40b8f4:	push   esi
  40b8f5:	push   esp
  40b8f6:	nop
  40b8f7:	dec    ecx
  40b8f8:	xchg   esp,eax
  40b8f9:	ret    0xdb4
  40b8fc:	call   0xae8b:0x5dbc9edd
  40b903:	clc    
  40b904:	scas   al,BYTE PTR es:[edi]
  40b905:	outs   dx,BYTE PTR ds:[esi]
  40b906:	push   ds
  40b907:	aaa    
  40b908:	fwait
  40b909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90a:	lods   al,BYTE PTR ds:[esi]
  40b90b:	jmp    0x34db763c
  40b910:	xor    DWORD PTR [ebx],esi
  40b912:	pushf  
  40b913:	push   esi
  40b914:	xchg   DWORD PTR [edi-0x7ad666ec],eax
  40b91a:	dec    edx
  40b91b:	mov    ch,cl
  40b91d:	dec    DWORD PTR [edx+0x3da0cfda]
  40b923:	sar    BYTE PTR [ecx],cl
  40b925:	push   ds
  40b926:	clc    
  40b927:	sub    eax,0x441c02c
  40b92c:	aam    0xb0
  40b92e:	adc    edi,0xa5407724
  40b934:	add    cl,dl
  40b936:	or     al,0x4d
  40b938:	xchg   BYTE PTR [esi-0x2a271834],al
  40b93e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b93f:	cli    
  40b940:	mov    ecx,0xfdd3426d
  40b945:	mov    cl,0x3f
  40b947:	adc    BYTE PTR [ecx+0x33e9ee12],dh
  40b94d:	dec    esp
  40b94e:	inc    edx
  40b94f:	out    0xde,eax
  40b951:	shr    esi,1
  40b953:	dec    eax
  40b954:	retf   0x3c75
  40b957:	xchg   esi,eax
  40b958:	pusha  
  40b959:	fild   QWORD PTR [edi+0x5c]
  40b95c:	nop
  40b95d:	cmp    BYTE PTR [ecx],dl
  40b95f:	mov    eax,ds:0x205d6ec8
  40b964:	xor    bh,0x6
  40b967:	or     al,0x5a
  40b969:	sub    al,0x12
  40b96b:	sub    al,0xe6
  40b96d:	mov    edi,0x3073cb61
  40b972:	add    eax,0xbf4d3592
  40b977:	sbb    al,0x55
  40b979:	dec    ecx
  40b97a:	mov    al,0x1b
  40b97c:	bnd ds jge 0x40b9ca
  40b980:	jmp    0xd712:0x489c0504
  40b987:	cmp    eax,0xe01d9326
  40b98c:	jbe    0x40b9e7
  40b98e:	outs   dx,BYTE PTR ds:[esi]
  40b98f:	nop    ebx
  40b992:	nop
  40b993:	(bad)  
  40b994:	(bad)  
  40b995:	jmp    0x40b9e3
  40b997:	call   0x4027:0x73ca8c9c
  40b99e:	shl    BYTE PTR [ebx-0x4b],1
  40b9a1:	jle    0x40b936
  40b9a3:	xchg   esi,eax
  40b9a4:	pop    eax
  40b9a5:	mov    ds,WORD PTR [ecx]
  40b9a7:	or     bl,BYTE PTR [ebp+0x46]
  40b9aa:	ins    DWORD PTR es:[edi],dx
  40b9ab:	xor    eax,0xd0911c83
  40b9b0:	es fmul st(6),st
  40b9b3:	mov    bl,0x6f
  40b9b5:	xchg   edi,eax
  40b9b6:	loope  0x40b984
  40b9b8:	lahf   
  40b9b9:	mov    ds:0xf2790efd,eax
  40b9be:	int3   
  40b9bf:	dec    esp
  40b9c0:	add    BYTE PTR [esi-0xf0fd8f7],ah
  40b9c6:	inc    DWORD PTR [ecx-0x5c48d2e7]
  40b9cc:	and    al,0x24
  40b9ce:	nop
  40b9cf:	sbb    eax,0xea49e82c
  40b9d4:	(bad)  
  40b9d6:	fsubp  st(3),st
  40b9d8:	pop    eax
  40b9d9:	add    bh,BYTE PTR [edx+eiz*8+0xac94f9f]
  40b9e0:	pop    ebx
  40b9e1:	cmp    DWORD PTR ds:[ecx],eax
  40b9e4:	fdiv   st(4),st
  40b9e6:	cmp    al,0xd6
  40b9e8:	ror    DWORD PTR [esi+esi*2+0x5f],1
  40b9ec:	xor    eax,0x49b86b97
  40b9f1:	jns    0x40b9c0
  40b9f3:	enter  0x5473,0x31
  40b9f7:	pop    esp
  40b9f8:	out    dx,al
  40b9f9:	cmp    ebx,edi
  40b9fb:	(bad)  
  40b9fc:	gs ret 
  40b9fe:	mov    ebx,0x599d44c
  40ba03:	in     al,dx
  40ba04:	dec    esp
  40ba05:	pop    edi
  40ba06:	fsubr  st(7),st
  40ba08:	jnp    0x40ba16
  40ba0a:	je     0x40ba3b
  40ba0c:	dec    edx
  40ba0d:	xor    BYTE PTR [eax+0x4e],0xf4
  40ba11:	pop    ds
  40ba12:	mov    esi,0xbe3210ed
  40ba17:	rcr    eax,1
  40ba19:	mov    ?,WORD PTR [esi-0xa]
  40ba1c:	bound  edx,QWORD PTR [ecx]
  40ba1e:	repz inc edi
  40ba20:	ror    DWORD PTR [edi+0x5395cb23],1
  40ba26:	and    al,0xfe
  40ba28:	sbb    esi,DWORD PTR [eax+0x7ead7bff]
  40ba2e:	xchg   ecx,eax
  40ba2f:	xchg   esp,eax
  40ba30:	jmp    0x40ba68
  40ba32:	jmp    0xf590:0x1271eb7a
  40ba39:	retf   0xc442
  40ba3c:	cmp    ecx,DWORD PTR [ecx-0x47]
  40ba3f:	adc    DWORD PTR [ebp-0x26],esi
  40ba42:	xlat   BYTE PTR ds:[ebx]
  40ba43:	xchg   BYTE PTR [ebp+0x1b],ah
  40ba46:	aam    0x12
  40ba48:	sti    
  40ba49:	retf   0x43e4
  40ba4c:	cmp    ah,al
  40ba4e:	xor    BYTE PTR [edx-0x4a],cl
  40ba51:	xor    eax,edi
  40ba53:	mov    ebp,0x71ea905e
  40ba58:	scas   al,BYTE PTR es:[edi]
  40ba59:	push   0x99cd32f2
  40ba5e:	mov    cl,0xb8
  40ba60:	sub    eax,0xacee1420
  40ba65:	jne    0x40ba1f
  40ba67:	mov    dh,0x1a
  40ba69:	adc    dl,BYTE PTR [esi]
  40ba6b:	jns    0x40ba21
  40ba6d:	sub    esi,DWORD PTR [ebx-0x54b3fef0]
  40ba73:	popf   
  40ba74:	pop    ds
  40ba75:	inc    ebx
  40ba76:	push   0x3b
  40ba78:	push   es
  40ba79:	pop    es
  40ba7a:	xor    DWORD PTR [ecx],0x32
  40ba7d:	fcmovne st,st(1)
  40ba7f:	pop    edx
  40ba80:	(bad)  
  40ba81:	ret    0x565a
  40ba84:	ds mov ecx,0xcf55d06c
  40ba8a:	stos   BYTE PTR es:[edi],al
  40ba8b:	sub    dh,BYTE PTR [edx-0x4a]
  40ba8e:	sub    ebx,DWORD PTR [ebp-0x4b]
  40ba91:	push   esi
  40ba92:	call   0x6f59:0xa13087c3
  40ba99:	je     0x40bae6
  40ba9b:	test   BYTE PTR gs:[edx+0x4f],dh
  40ba9f:	fs loope 0x40ba85
  40baa2:	push   edi
  40baa3:	mov    esi,0x55265449
  40baa8:	into   
  40baa9:	and    ecx,esi
  40baab:	lods   eax,DWORD PTR ds:[esi]
  40baac:	xchg   esp,eax
  40baad:	in     eax,dx
  40baae:	adc    ecx,DWORD PTR ds:0x31bace8d
  40bab4:	arpl   WORD PTR [eax-0x30],si
  40bab7:	rcr    BYTE PTR [ecx-0x28fef368],1
  40babd:	xchg   esi,eax
  40babe:	imul   ebp,DWORD PTR [esp+eiz*2-0x4f],0xb6e56d63
  40bac6:	mov    BYTE PTR [edi],dh
  40bac8:	inc    edi
  40bac9:	pop    ebp
  40baca:	pusha  
  40bacb:	add    DWORD PTR [ebp-0x3b31a252],eax
  40bad1:	xchg   edx,eax
  40bad2:	jmp    0x5d08:0x59d191eb
  40bad9:	jb     0x40ba82
  40badb:	js     0x40baec
  40badd:	push   eax
  40bade:	lods   al,BYTE PTR ds:[esi]
  40badf:	pop    edi
  40bae0:	stos   DWORD PTR es:[edi],eax
  40bae1:	mov    ebp,0xea26ad7d
  40bae6:	cwde   
  40bae7:	imul   edx,DWORD PTR [ebx],0x2abc7ccf
  40baed:	dec    ebp
  40baee:	mov    ch,0xb8
  40baf0:	fsub   DWORD PTR [esp+esi*2]
  40baf3:	out    0x4f,eax
  40baf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf6:	repnz sbb ecx,DWORD PTR [edi-0x72]
  40bafa:	ret    
  40bafb:	or     dl,BYTE PTR [esi+0x46d5aed3]
  40bb01:	fild   WORD PTR [ebx]
  40bb03:	pop    esi
  40bb04:	rcr    BYTE PTR [esi],1
  40bb06:	in     eax,0x1c
  40bb08:	mov    dh,0xc
  40bb0a:	jecxz  0x40bafb
  40bb0c:	pushf  
  40bb0d:	test   BYTE PTR [edi+0x19],0xa7
  40bb11:	and    al,dh
  40bb13:	or     al,0x59
  40bb15:	loope  0x40bb7d
  40bb17:	xchg   DWORD PTR [ecx-0x12],ecx
  40bb1a:	rcr    BYTE PTR [edx+0x1f8399af],0x8a
  40bb21:	nop
  40bb22:	sbb    eax,0xaca42291
  40bb27:	push   0xd
  40bb29:	cs inc edi
  40bb2b:	lahf   
  40bb2c:	call   0x181e:0x3f7276f3
  40bb33:	inc    edx
  40bb34:	pop    ss
  40bb35:	bnd call DWORD PTR [ecx-0x147fc2da]
  40bb3c:	xchg   edi,eax
  40bb3d:	and    eax,DWORD PTR [edx-0x63]
  40bb40:	aad    0xd
  40bb42:	sbb    al,0x1c
  40bb44:	add    ebx,0x7ea73eff
  40bb4a:	(bad)  
  40bb4b:	daa    
  40bb4c:	xchg   edx,ecx
  40bb4e:	sub    esp,DWORD PTR [ebx]
  40bb50:	shr    BYTE PTR [eax],1
  40bb52:	add    eax,0xc1f48506
  40bb57:	cmp    al,0xc3
  40bb59:	call   0xd9b5:0x4baeffeb
  40bb60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb61:	lock or eax,0x8d26c95d
  40bb67:	fmul   DWORD PTR [esi+0x4]
  40bb6a:	aam    0x14
  40bb6c:	mov    eax,0x6f04b20f
  40bb71:	pop    ss
  40bb72:	ins    DWORD PTR es:[edi],dx
  40bb73:	mov    al,0x3d
  40bb75:	sub    BYTE PTR [edi],ah
  40bb77:	mov    edx,0xd710a6a2
  40bb7c:	jg     0x40bbec
  40bb7e:	(bad)  
  40bb7f:	neg    ebx
  40bb81:	retf   0xeff
  40bb84:	nop
  40bb85:	out    0xd1,eax
  40bb87:	aam    0xb3
  40bb89:	xor    eax,0x334ef4a1
  40bb8e:	inc    eax
  40bb8f:	ja     0x40bbe0
  40bb91:	ret    0x1886
  40bb94:	cli    
  40bb95:	ret    0x939a
  40bb98:	pop    ebp
  40bb99:	xchg   ebp,eax
  40bb9a:	add    BYTE PTR ds:0x2868653c,0xfe
  40bba1:	mov    edx,0x88f943de
  40bba6:	dec    esi
  40bba7:	cmp    BYTE PTR [edi],dh
  40bba9:	aas    
  40bbaa:	pushf  
  40bbab:	and    BYTE PTR [edx+0x30],0xe3
  40bbaf:	repz push edx
  40bbb1:	arpl   WORD PTR [ecx+0x26de622e],si
  40bbb7:	loop   0x40bc0f
  40bbb9:	call   0x61f5:0x39e515c
  40bbc0:	call   0x8baca7b7
  40bbc5:	ins    DWORD PTR es:[edi],dx
  40bbc6:	iret   
  40bbc7:	add    eax,0xb6c2a300
  40bbcc:	cs push ss
  40bbce:	int    0x6d
  40bbd0:	fcomp  QWORD PTR [esi+0x549af51f]
  40bbd6:	imul   ecx,esi,0xffffffaa
  40bbd9:	test   eax,0x9958c711
  40bbde:	stos   BYTE PTR es:[edi],al
  40bbdf:	fidivr WORD PTR [edx-0x39a2da69]
  40bbe5:	dec    edx
  40bbe6:	smsw   ebx
  40bbe9:	lahf   
  40bbea:	jg     0x40bbd5
  40bbec:	outs   dx,BYTE PTR ds:[esi]
  40bbed:	rcr    BYTE PTR [eax+0xa],1
  40bbf0:	ds int3 
  40bbf2:	inc    ebx
  40bbf3:	cwde   
  40bbf4:	in     eax,0x47
  40bbf6:	adc    edi,DWORD PTR [edx-0x71ae846a]
  40bbfc:	js     0x40bc01
  40bbfe:	lods   eax,DWORD PTR ds:[esi]
  40bbff:	test   al,0xf5
  40bc01:	push   es
  40bc02:	fistp  WORD PTR [edx+0x5f]
  40bc05:	inc    esi
  40bc06:	add    BYTE PTR [edx],bl
  40bc08:	shr    cl,cl
  40bc0a:	xor    eax,ebx
  40bc0c:	sub    al,BYTE PTR [esi+0x681a961]
  40bc12:	push   edx
  40bc13:	das    
  40bc14:	adc    edi,DWORD PTR [ebx+0x4e]
  40bc17:	out    0xd3,al
  40bc19:	iret   
  40bc1a:	adc    DWORD PTR fs:[esp+eiz*8+0x63406c21],esi
  40bc22:	clc    
  40bc23:	outs   dx,BYTE PTR ds:[esi]
  40bc24:	adc    eax,0x246daab2
  40bc29:	cdq    
  40bc2a:	(bad)  
  40bc2c:	into   
  40bc2d:	data16 aam 0xf
  40bc30:	hlt    
  40bc31:	rol    BYTE PTR [eax],cl
  40bc33:	lock (bad) 
  40bc35:	jge    0x40bc2b
  40bc37:	dec    ebp
  40bc38:	fimul  DWORD PTR [edi-0xe]
  40bc3b:	loopne 0x40bc15
  40bc3d:	pop    ss
  40bc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc3f:	stos   BYTE PTR es:[edi],al
  40bc40:	mov    ah,0x77
  40bc42:	arpl   WORD PTR [ebx],sp
  40bc44:	jge    0x40bcb9
  40bc46:	pop    ss
  40bc47:	std    
  40bc48:	daa    
  40bc49:	sub    eax,0x424f6720
  40bc4e:	push   ebp
  40bc4f:	enter  0x8386,0xff
  40bc53:	push   0xfa6b0fbb
  40bc58:	imul   ebp,DWORD PTR [esi+ecx*2+0x73f43e8a],0xfffffff5
  40bc60:	jg     0x40bcb3
  40bc62:	xor    ecx,edx
  40bc64:	inc    esi
  40bc65:	dec    ecx
  40bc66:	cs in  eax,0xce
  40bc69:	(bad)  
  40bc6a:	sub    DWORD PTR [edx],edi
  40bc6c:	ror    DWORD PTR [eax],cl
  40bc6e:	mov    ebp,0x16903439
  40bc73:	lea    ebx,[ebx+edx*8]
  40bc76:	repnz loop 0x40bca4
  40bc79:	add    al,0x24
  40bc7b:	sar    BYTE PTR [edi],1
  40bc7d:	inc    edi
  40bc7e:	add    al,0x98
  40bc80:	fist   WORD PTR [ebx]
  40bc82:	mov    bl,0x97
  40bc84:	push   ebp
  40bc85:	add    al,0xa1
  40bc87:	jno    0x40bccd
  40bc89:	cmp    DWORD PTR [ebp+ebx*4+0x47ace2d2],esp
  40bc90:	cmp    ebx,DWORD PTR [edx]
  40bc92:	push   edi
  40bc93:	xchg   DWORD PTR [eax],ecx
  40bc95:	dec    eax
  40bc96:	and    DWORD PTR [ecx-0x5b65b55d],ecx
  40bc9c:	jecxz  0x40bcd4
  40bc9e:	or     esp,DWORD PTR [ebp+edi*8-0x31]
  40bca2:	shl    BYTE PTR [eax-0x61c8fbf9],cl
  40bca8:	mov    ch,0xc5
  40bcaa:	call   0x8f4:0x4601bfe0
  40bcb1:	jmp    0xc3b8:0x34430c7e
  40bcb8:	push   ss
  40bcb9:	out    dx,al
  40bcba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcbb:	push   ebp
  40bcbc:	ds adc bl,cl
  40bcbf:	pop    edx
  40bcc0:	icebp  
  40bcc1:	mov    edi,eax
  40bcc3:	pop    ebp
  40bcc4:	dec    esp
  40bcc5:	mov    al,ds:0x8815a811
  40bcca:	gs enter 0x2a99,0xda
  40bccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd0:	enter  0x9ff9,0xf0
  40bcd4:	retf   0x2c9a
  40bcd7:	add    eax,0x9112c7d6
  40bcdc:	jae    0x40bcbc
  40bcde:	inc    ecx
  40bcdf:	sub    BYTE PTR [esi*1-0x20b245e9],dh
  40bce6:	adc    eax,0x75444571
  40bceb:	add    BYTE PTR [ecx-0x31],cl
  40bcee:	adc    cl,BYTE PTR [edx+ecx*2+0x39]
  40bcf2:	sti    
  40bcf3:	dec    ebx
  40bcf4:	mov    cl,0xd9
  40bcf6:	inc    esp
  40bcf7:	addr16 mov ds:0xb77e,eax
  40bcfb:	dec    edi
  40bcfc:	jmp    0x2bb4:0x3aa092de
  40bd03:	mov    dh,0x80
  40bd05:	cmp    BYTE PTR [ecx+eax*8],0xb2
  40bd09:	iret   
  40bd0a:	mov    esp,0xef326a13
  40bd0f:	push   edi
  40bd10:	jge    0x40bd34
  40bd12:	fs push eax
  40bd14:	cmp    esi,0xbd901d91
  40bd1a:	cmp    edx,edx
  40bd1c:	inc    ecx
  40bd1d:	adc    eax,0x627422bb
  40bd22:	add    BYTE PTR [ebp-0x5625ce43],ah
  40bd28:	into   
  40bd29:	call   0x79eb:0x49c56f10
  40bd30:	cmp    DWORD PTR [edi],ebx
  40bd32:	loopne 0x40bcbf
  40bd34:	(bad)  
  40bd35:	xor    eax,0xb07e2ec
  40bd3a:	je     0x40bd0c
  40bd3c:	(bad)  
  40bd3d:	nop
  40bd3e:	stc    
  40bd3f:	data16 std 
  40bd41:	into   
  40bd42:	int3   
  40bd43:	sub    ah,BYTE PTR [edi-0x485e2eb3]
  40bd49:	scas   al,BYTE PTR es:[edi]
  40bd4a:	fwait
  40bd4b:	test   al,0xa9
  40bd4d:	in     al,dx
  40bd4e:	aad    0xaf
  40bd50:	jecxz  0x40bd65
  40bd52:	sub    DWORD PTR [edi-0x19058001],edi
  40bd58:	(bad)  [ebx+ecx*1-0x20]
  40bd5c:	shl    DWORD PTR ds:0x6c6419df,cl
  40bd62:	add    dl,BYTE PTR [ecx+eax*2-0x60da7f5d]
  40bd69:	outs   dx,BYTE PTR ds:[esi]
  40bd6a:	test   BYTE PTR [ebx-0x75eb04f0],al
  40bd70:	or     esi,DWORD PTR [edi+0x122b1e7b]
  40bd76:	dec    esp
  40bd77:	into   
  40bd78:	xor    al,0xbc
  40bd7a:	jo     0x40bd09
  40bd7c:	(bad)  
  40bd7d:	xlat   BYTE PTR ds:[ebx]
  40bd7e:	mov    dl,ch
  40bd80:	addr16 cmp al,0x3
  40bd83:	sub    edx,DWORD PTR [ebp-0x51713216]
  40bd89:	mov    ah,0x5a
  40bd8b:	cld    
  40bd8c:	jmp    FWORD PTR [eax-0x2f8e3]
  40bd92:	cmp    al,0xf3
  40bd94:	cmp    al,0xc6
  40bd96:	ja     0x40bdea
  40bd98:	xchg   esi,eax
  40bd99:	jp     0x40bd4a
  40bd9b:	xchg   ch,dh
  40bd9d:	mov    bl,0x15
  40bd9f:	loop   0x40bde9
  40bda1:	lss    eax,FWORD PTR ds:0x5475cdf5
  40bda9:	aad    0xeb
  40bdab:	mov    esp,0xbbc5c85e
  40bdb0:	mov    edi,0x8e197b0d
  40bdb5:	aas    
  40bdb6:	jmp    0x40bde5
  40bdb8:	icebp  
  40bdb9:	xchg   ebp,eax
  40bdba:	call   0x7258:0x266bcf7f
  40bdc1:	xor    ch,dh
  40bdc3:	pop    ebp
  40bdc4:	fadd   st(6),st
  40bdc6:	add    al,0x2b
  40bdc8:	push   ss
  40bdc9:	add    DWORD PTR [eax+esi*4],edi
  40bdcc:	mov    eax,0x548fee68
  40bdd1:	dec    eax
  40bdd2:	adc    DWORD PTR [edi+0x53],0xffffffbd
  40bdd6:	ror    BYTE PTR [edx-0x53],cl
  40bdd9:	xchg   edi,eax
  40bdda:	pop    esp
  40bddb:	into   
  40bddc:	pushf  
  40bddd:	xchg   BYTE PTR [ebx+0x5e650ba0],dl
  40bde3:	mov    cl,0xd7
  40bde5:	popf   
  40bde6:	mov    esp,DWORD PTR [ecx+0x6d7f348a]
  40bdec:	add    al,0xe7
  40bdee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdef:	mov    al,cl
  40bdf1:	jo     0x40bd99
  40bdf3:	push   0xe11b7189
  40bdf8:	mov    ch,0x9d
  40bdfa:	dec    esi
  40bdfb:	outs   dx,DWORD PTR ds:[esi]
  40bdfc:	hlt    
  40bdfd:	(bad)  
  40bdff:	jbe    0x40be0e
  40be01:	sbb    edx,DWORD PTR [esi+0x50]
  40be04:	out    0x8b,eax
  40be06:	pop    ds
  40be07:	ss push 0x5b
  40be0a:	arpl   WORD PTR [esi+0x1],sp
  40be0d:	dec    esi
  40be0e:	in     al,0x55
  40be10:	out    dx,al
  40be11:	hlt    
  40be12:	fcom   DWORD PTR [ebx+ebp*4]
  40be15:	repnz and al,ah
  40be18:	xchg   ebp,eax
  40be19:	pop    edx
  40be1a:	sbb    DWORD PTR [ecx],ebp
  40be1c:	lods   eax,DWORD PTR ds:[esi]
  40be1d:	xchg   edi,eax
  40be1e:	mov    BYTE PTR [edi+0x51],ah
  40be21:	xor    edx,DWORD PTR [edi+ebx*4+0x3e4120fb]
  40be28:	ins    DWORD PTR es:[edi],dx
  40be29:	cmp    al,0x7
  40be2b:	xchg   ebp,eax
  40be2c:	lahf   
  40be2d:	or     BYTE PTR es:[eax+esi*4-0x6e3767],0x8b
  40be36:	cs aad 0xcb
  40be39:	aaa    
  40be3a:	out    0xd1,ax
  40be3d:	psubsw mm3,QWORD PTR [esi-0x4c6c854b]
  40be44:	scas   al,BYTE PTR es:[edi]
  40be45:	push   ebx
  40be46:	cld    
  40be47:	jo     0x40be99
  40be49:	pushf  
  40be4a:	fs dec ecx
  40be4c:	je     0x40bdfd
  40be4e:	ror    DWORD PTR [edi],1
  40be50:	fist   DWORD PTR [ebx+0x2469f89c]
  40be56:	bound  eax,QWORD PTR [edi]
  40be58:	add    eax,0x2aa8e874
  40be5d:	xchg   edx,eax
  40be5e:	and    DWORD PTR [ebx],esp
  40be60:	dec    ebx
  40be61:	ins    DWORD PTR es:[edi],dx
  40be62:	and    ecx,DWORD PTR [esi-0x34e32fda]
  40be68:	pop    eax
  40be69:	mov    eax,ds:0x6d9d19fe
  40be6e:	rcl    BYTE PTR [edi],1
  40be70:	(bad)  
  40be71:	sub    eax,0xe4bb9143
  40be76:	jbe    0x40be2a
  40be78:	cmp    ebx,DWORD PTR [edi-0x742d15fb]
  40be7e:	dec    esi
  40be7f:	cmp    eax,0xf138a472
  40be84:	aaa    
  40be85:	push   ebp
  40be86:	push   esp
  40be87:	jmp    0x97a3:0x5256bba
  40be8e:	or     BYTE PTR [eax+0x54],ch
  40be91:	mov    ebp,0x4cba88b
  40be96:	(bad)  
  40be97:	icebp  
  40be98:	(bad)  
  40be9a:	jmp    0xe9c7:0x87a05fbb
  40bea1:	xor    eax,ebx
  40bea3:	mov    edx,0xde5e73de
  40bea8:	xchg   BYTE PTR [edi],dl
  40beaa:	pushf  
  40beab:	and    BYTE PTR [ebx],ch
  40bead:	xor    BYTE PTR [edi-0x3fb9ad41],al
  40beb3:	je     0x40bee5
  40beb5:	aam    0xad
  40beb7:	add    cl,BYTE PTR [edx+eax*2+0x7518897e]
  40bebe:	add    ebx,DWORD PTR [ebp-0x48]
  40bec1:	mov    DWORD PTR [edx],esi
  40bec3:	dec    BYTE PTR [eax-0x70]
  40bec6:	sbb    al,BYTE PTR [edi-0x9]
  40bec9:	or     edx,DWORD PTR [ebx*1+0x5179624f]
  40bed0:	jl     0x40beda
  40bed2:	call   0xe067409a
  40bed7:	sub    al,0x4c
  40bed9:	dec    ebp
  40beda:	ss inc ebx
  40bedc:	mov    dl,0xad
  40bede:	inc    esi
  40bedf:	sbb    ax,0xf714
  40bee3:	jbe    0x40be6f
  40bee5:	dec    ecx
  40bee6:	jle    0x40bf5f
  40bee8:	pop    edx
  40bee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beea:	adc    DWORD PTR [ecx-0x74],edx
  40beed:	int3   
  40beee:	push   es
  40beef:	sub    al,0xe4
  40bef1:	jmp    0x54b2a524
  40bef6:	cmovge ecx,DWORD PTR [eax+0x2]
  40befa:	and    BYTE PTR [edi+ecx*1],dl
  40befd:	shl    ch,cl
  40beff:	ja     0x40be86
  40bf01:	or     al,0x27
  40bf03:	sub    al,al
  40bf05:	mov    ch,0x9
  40bf07:	lods   eax,DWORD PTR ds:[esi]
  40bf08:	jns    0x40be9f
  40bf0a:	cli    
  40bf0b:	sub    ch,ch
  40bf0d:	adc    ah,BYTE PTR [ebx+0x1]
  40bf10:	sar    DWORD PTR [ecx-0x56],0x51
  40bf14:	and    esi,ebx
  40bf16:	dec    esp
  40bf17:	mov    edi,0xb17a7963
  40bf1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf1d:	ret    
  40bf1e:	sbb    al,0x7f
  40bf20:	pop    ebp
  40bf21:	in     eax,dx
  40bf22:	xlat   BYTE PTR ds:[ebx]
  40bf23:	sub    eax,0x53dea113
  40bf28:	cmp    edx,DWORD PTR [ebx-0x4]
  40bf2b:	fwait
  40bf2c:	rcr    BYTE PTR [edi+0x2d],0x9e
  40bf30:	cmp    al,BYTE PTR [edx+0x4de371b3]
  40bf36:	add    ah,dl
  40bf38:	add    ah,BYTE PTR [esi+0x75]
  40bf3b:	jbe    0x40bec7
  40bf3d:	jbe    0x40bf3c
  40bf3f:	xchg   edx,eax
  40bf40:	aam    0x6
  40bf42:	sbb    DWORD PTR [esi-0x7],eax
  40bf45:	call   0x55ae:0x743a457f
  40bf4c:	test   eax,0x2f7bcb38
  40bf51:	adc    al,BYTE PTR [ebp-0x13]
  40bf54:	lods   al,BYTE PTR ds:[esi]
  40bf55:	dec    ebp
  40bf56:	mov    edx,0xd52b9ec4
  40bf5b:	shr    DWORD PTR [edi+0x6],cl
  40bf5e:	(bad)  
  40bf60:	loope  0x40bee6
  40bf62:	int    0x98
  40bf64:	into   
  40bf65:	sbb    eax,0x1035557c
  40bf6a:	inc    ecx
  40bf6b:	lock loop 0x40bf0f
  40bf6e:	call   0x83fa:0xf9f963fd
  40bf75:	les    esp,FWORD PTR [ebx+0x78]
  40bf78:	fs enter 0x62a6,0x60
  40bf7d:	stos   DWORD PTR es:[edi],eax
  40bf7e:	add    bh,0x64
  40bf81:	dec    ecx
  40bf82:	cwde   
  40bf83:	das    
  40bf84:	mov    eax,ds:0xdd249c18
  40bf89:	(bad)  
  40bf8a:	adc    al,0x1a
  40bf8c:	sbb    BYTE PTR [esi+0x24a1a4d4],bh
  40bf92:	imul   DWORD PTR [ecx]
  40bf94:	mov    cl,0x2
  40bf96:	xlat   BYTE PTR ds:[ebx]
  40bf97:	lods   al,BYTE PTR ds:[esi]
  40bf98:	xchg   esp,eax
  40bf99:	mov    al,ds:0xddbe0bd6
  40bf9e:	sar    BYTE PTR [ebx-0x517f6c46],cl
  40bfa4:	or     BYTE PTR [edi],ah
  40bfa6:	push   ebx
  40bfa7:	xor    ch,BYTE PTR ds:0x33068218
  40bfad:	lahf   
  40bfae:	rol    BYTE PTR [eax],cl
  40bfb0:	cwde   
  40bfb1:	scas   eax,DWORD PTR es:[edi]
  40bfb2:	mov    al,0x6e
  40bfb4:	and    DWORD PTR [ecx+0x516a80c1],ebp
  40bfba:	lock gs cwde 
  40bfbd:	cmp    al,0x89
  40bfbf:	lock sub al,0xce
  40bfc2:	mov    eax,DWORD PTR ds:0xf1d155e
  40bfc8:	jno    0x40bf4d
  40bfca:	loope  0x40bfbd
  40bfcc:	es sti 
  40bfce:	jae    0x40c000
  40bfd0:	fist   DWORD PTR [edx-0x2598bbc7]
  40bfd6:	or     DWORD PTR [ecx+0x3f],esi
  40bfd9:	pop    ecx
  40bfda:	fcmovne st,st(7)
  40bfdc:	rol    dl,cl
  40bfde:	aaa    
  40bfdf:	sbb    DWORD PTR [edi-0x2586f5bd],edi
  40bfe5:	je     0x40c041
  40bfe7:	iret   
  40bfe8:	dec    esp
  40bfe9:	imul   eax,esi,0xffffffaa
  40bfec:	sub    al,0xcd
  40bfee:	mov    edi,0x613c613a
  40bff3:	jp     0x40bf9e
  40bff5:	jne    0x40bfdd
  40bff7:	ins    DWORD PTR es:[edi],dx
  40bff8:	push   cs
  40bff9:	jmp    0x462bb4e9
  40bffe:	push   DWORD PTR [ecx]
  40c000:	out    0xfe,eax
  40c002:	inc    ebp
  40c003:	mov    ebp,0xc197c9d0
  40c008:	cmp    DWORD PTR [eax+0x7b4e6481],edi
  40c00e:	cmc    
  40c00f:	mov    esp,0x66ddf3e6
  40c014:	push   edi
  40c015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c016:	enter  0x4eb4,0xfd
  40c01a:	cmp    eax,DWORD PTR [ebx+0x2e]
  40c01d:	adc    al,0xfd
  40c01f:	js     0x40c048
  40c021:	push   ds
  40c022:	jmp    0xd17de3eb
  40c027:	int    0xca
  40c029:	mov    eax,ds:0x35a8ad80
  40c02e:	and    esp,DWORD PTR [esp+edi*4-0x5cf00c27]
  40c035:	cmp    BYTE PTR [ebp-0x86fe027],dh
  40c03b:	mov    WORD PTR [ecx+0x421d2169],?
  40c041:	div    DWORD PTR [eax+0x66537ef9]
  40c047:	in     eax,0xa8
  40c049:	imul   ebp,DWORD PTR [edx],0xffffffb5
  40c04c:	int3   
  40c04d:	call   0x783c56e9
  40c052:	add    eax,0x6c2e4483
  40c057:	lea    ebx,[esi]
  40c059:	loop   0x40c021
  40c05b:	and    eax,0xd0d4c347
  40c060:	fidiv  WORD PTR [edi-0x22]
  40c063:	adc    ch,BYTE PTR [ebx]
  40c065:	jne    0x40c099
  40c067:	or     DWORD PTR [ecx-0xc13f3c1],ecx
  40c06d:	arpl   WORD PTR [esi+0x6a],sp
  40c070:	sbb    BYTE PTR ds:0xf1f8afb5,ch
  40c076:	xchg   edi,eax
  40c077:	lds    ecx,FWORD PTR [ecx]
  40c079:	imul   ebx,ebx,0x2e
  40c07c:	add    DWORD PTR [edx-0x3f],0xffffffc9
  40c080:	push   edx
  40c081:	push   es
  40c082:	test   DWORD PTR [ebx-0x22],edx
  40c085:	test   edx,edi
  40c087:	add    BYTE PTR [edi+edi*4],0xe6
  40c08b:	pop    ecx
  40c08c:	adc    al,0x46
  40c08e:	in     al,0xf3
  40c090:	rcl    DWORD PTR [ebp+0x2d7c73c1],cl
  40c096:	inc    ebp
  40c097:	and    DWORD PTR [edx+0x7a],edi
  40c09a:	scas   eax,DWORD PTR es:[edi]
  40c09b:	test   BYTE PTR [ebx],dh
  40c09d:	dec    edi
  40c09e:	gs nop
  40c0a0:	sbb    eax,0x2c31499b
  40c0a5:	xchg   DWORD PTR [edx],eax
  40c0a7:	popf   
  40c0a8:	add    BYTE PTR [esi-0x74a2aceb],cl
  40c0ae:	pop    ss
  40c0af:	mov    dh,0xb8
  40c0b1:	bnd jno 0x40c0c0
  40c0b4:	popf   
  40c0b5:	add    edx,0x91e2461
  40c0bb:	das    
  40c0bc:	sub    BYTE PTR [eax],bl
  40c0be:	js     0x40c052
  40c0c0:	imul   esi,DWORD PTR [ecx+ebx*8+0x48],0x5701def4
  40c0c8:	jnp    0x40c0d1
  40c0ca:	cmp    cl,BYTE PTR [ebx+edi*2-0xd]
  40c0ce:	sub    al,0x87
  40c0d0:	in     al,dx
  40c0d1:	sub    BYTE PTR [edi+edx*8-0x407f7c0d],bl
  40c0d8:	cs sahf 
  40c0da:	xor    ah,BYTE PTR [ebp-0x2310732d]
  40c0e0:	xor    ch,bl
  40c0e2:	xchg   ebp,eax
  40c0e3:	mov    ebx,DWORD PTR [ebx]
  40c0e5:	cdq    
  40c0e6:	sub    eax,0xbc276fba
  40c0eb:	mov    eax,0x1fa10c00
  40c0f0:	and    eax,0xa7273310
  40c0f5:	sbb    bh,BYTE PTR [ecx+eax*4]
  40c0f8:	xor    DWORD PTR [ebp+0x1],0x14
  40c0fc:	lea    ebp,[edi-0x4]
  40c0ff:	sbb    DWORD PTR [edi],eax
  40c101:	pop    ss
  40c102:	cmp    BYTE PTR [edi+0x7a],0x22
  40c106:	xor    esp,ebx
  40c108:	pop    ebp
  40c109:	dec    ebp
  40c10a:	xor    dh,dl
  40c10c:	ja     0x40c0c9
  40c10e:	dec    ebx
  40c10f:	outs   dx,BYTE PTR ds:[esi]
  40c110:	adc    eax,eax
  40c112:	jno    0x40c0e2
  40c114:	cdq    
  40c115:	in     eax,0x50
  40c117:	iret   
  40c118:	push   es
  40c119:	in     eax,0x3f
  40c11b:	jmp    0x40c16e
  40c11d:	sub    eax,esp
  40c11f:	push   edx
  40c120:	push   ebx
  40c121:	jbe    0x40c0d1
  40c123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c125:	stc    
  40c126:	cmp    edi,eax
  40c128:	in     al,dx
  40c129:	dec    esi
  40c12a:	and    eax,0x891b4895
  40c12f:	mov    esp,0xe57ac11f
  40c134:	add    eax,0x26b75d6b
  40c139:	pop    esi
  40c13a:	push   esp
  40c13b:	push   edx
  40c13c:	sahf   
  40c13d:	stc    
  40c13e:	mov    dh,0x72
  40c140:	sbb    ebp,DWORD PTR [ebp-0x7b0042a3]
  40c146:	ja     0x40c11e
  40c148:	mov    esi,0xa45086a8
  40c14d:	add    ebx,DWORD PTR [esp-0x522b691]
  40c154:	bound  ebp,QWORD PTR [esi+0x1968f947]
  40c15a:	cmp    ecx,edx
  40c15c:	mov    WORD PTR [ebx],ds
  40c15e:	inc    eax
  40c15f:	push   edi
  40c160:	out    0x54,eax
  40c162:	push   ds
  40c163:	xor    ebp,DWORD PTR [ecx+0x3d5dc3a6]
  40c169:	xchg   esi,eax
  40c16a:	(bad)  
  40c16b:	push   0x80ca0adb
  40c170:	ret    0xf4e6
  40c173:	shl    ch,cl
  40c175:	fidiv  DWORD PTR [edi+edx*8+0x5988e618]
  40c17c:	pop    ebx
  40c17d:	ror    DWORD PTR [esi-0x2adf68d7],cl
  40c183:	cmc    
  40c184:	jge    0x40c16d
  40c186:	inc    eax
  40c187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c188:	fst    DWORD PTR [edi+edx*4-0x63d173c2]
  40c18f:	dec    ecx
  40c190:	adc    BYTE PTR [edi+edi*1+0xa14f8ba],dh
  40c197:	fwait
  40c198:	stc    
  40c199:	add    ebx,DWORD PTR [ebx+eax*4+0xb]
  40c19d:	add    eax,0x89eaa823
  40c1a2:	loopne 0x40c1c8
  40c1a4:	xchg   ebx,eax
  40c1a5:	(bad)  
  40c1a6:	jp     0x40c1d8
  40c1a8:	fcom   st(7)
  40c1aa:	cmp    eax,0xf0daf4c2
  40c1af:	push   esi
  40c1b0:	ds (bad) 
  40c1b2:	sub    DWORD PTR [edi+0x60864726],ebp
  40c1b8:	push   ebx
  40c1b9:	dec    ebx
  40c1ba:	pop    esp
  40c1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1bc:	push   edi
  40c1bd:	ret    
  40c1be:	or     DWORD PTR [edx-0x1c],edi
  40c1c1:	or     ebp,ebp
  40c1c3:	sbb    eax,0xb1648fb8
  40c1c8:	push   edi
  40c1c9:	sub    esp,DWORD PTR [eax-0x783c48de]
  40c1cf:	test   DWORD PTR [ecx+edi*4+0x11],0xc79d9558
  40c1d7:	loopne 0x40c217
  40c1d9:	pop    ebx
  40c1da:	out    0xc8,eax
  40c1dc:	pusha  
  40c1dd:	inc    esi
  40c1de:	out    dx,al
  40c1df:	adc    BYTE PTR [edx+0x1a2ddee0],ah
  40c1e5:	imul   esp,DWORD PTR [eax+0xdb0d63c],0xa
  40c1ec:	ins    BYTE PTR es:[edi],dx
  40c1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ee:	cmp    esi,eax
  40c1f0:	imul   edx,DWORD PTR ds:0xa2eee223,0x83a5b064
  40c1fa:	cmp    DWORD PTR [ebp-0x4e],edi
  40c1fd:	in     al,dx
  40c1fe:	call   0xbc7a2fab
  40c203:	imul   edi,ecx,0x3c5311fc
  40c209:	sub    al,0x64
  40c20b:	or     ah,BYTE PTR [edi+edx*4]
  40c20e:	js     0x40c239
  40c210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c211:	dec    esi
  40c212:	add    eax,0x779bb0c0
  40c217:	inc    edi
  40c218:	push   ecx
  40c219:	mov    ds:0x925e0245,eax
  40c21e:	pop    es
  40c21f:	sbb    ebx,esi
  40c221:	in     al,0x67
  40c223:	mov    ebp,0x99078b01
  40c228:	cmc    
  40c229:	dec    eax
  40c22a:	inc    ecx
  40c22b:	call   0xee59:0x479cbd7e
  40c232:	es aaa 
  40c234:	das    
  40c235:	sub    al,0xd7
  40c237:	mov    ds:0x4603cfc5,eax
  40c23c:	shl    dl,0x14
  40c23f:	out    dx,eax
  40c240:	sbb    al,0xed
  40c242:	ja     0x40c1e8
  40c244:	out    dx,al
  40c245:	dec    edx
  40c246:	out    dx,eax
  40c247:	add    dl,dh
  40c249:	mov    ecx,0xb9be7480
  40c24e:	adc    edx,esp
  40c250:	popf   
  40c251:	ficom  DWORD PTR [edi-0x4cae82fe]
  40c257:	aaa    
  40c258:	in     eax,dx
  40c259:	(bad)  
  40c25a:	push   edx
  40c25b:	jnp    0x40c294
  40c25d:	in     eax,0x28
  40c25f:	mov    edi,0xb35cae6f
  40c264:	js     0x40c217
  40c266:	ins    BYTE PTR es:[edi],dx
  40c267:	test   BYTE PTR [edx],ah
  40c269:	das    
  40c26a:	dec    ecx
  40c26b:	adc    bh,BYTE PTR [edx]
  40c26d:	mov    eax,fs
  40c26f:	ds dec ebp
  40c271:	adc    eax,0x89a4d94a
  40c276:	call   0x9b12:0x4f0e5931
  40c27d:	inc    esp
  40c27e:	sbb    al,0x58
  40c280:	xor    eax,0x44fb0368
  40c285:	loop   0x40c2cc
  40c287:	jnp    0x40c21b
  40c289:	inc    esi
  40c28a:	pop    ebx
  40c28b:	adc    al,0x1a
  40c28d:	aaa    
  40c28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c28f:	pop    ds
  40c290:	mov    ch,0xe1
  40c292:	jbe    0x40c254
  40c294:	push   ebx
  40c295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c296:	arpl   WORD PTR [edx+0x56d75502],dx
  40c29c:	sti    
  40c29d:	jae    0x40c2f4
  40c29f:	pop    edi
  40c2a0:	sub    edx,DWORD PTR [esi+0xc6ba60b]
  40c2a6:	sti    
  40c2a7:	jae    0x40c239
  40c2a9:	hlt    
  40c2aa:	fimul  WORD PTR [ecx]
  40c2ac:	mov    bh,0x34
  40c2ae:	in     al,dx
  40c2af:	test   eax,0x9ca920c5
  40c2b4:	into   
  40c2b5:	pop    ebx
  40c2b6:	lods   eax,DWORD PTR ds:[esi]
  40c2b7:	mov    bh,0x2b
  40c2b9:	inc    esp
  40c2ba:	jle    0x40c2eb
  40c2bc:	icebp  
  40c2bd:	dec    esi
  40c2be:	push   esi
  40c2bf:	int3   
  40c2c0:	and    bh,ah
  40c2c2:	or     ah,BYTE PTR [ebx+0x3444995c]
  40c2c8:	jmp    0x40c29e
  40c2ca:	int    0xd1
  40c2cc:	fucomi st,st(7)
  40c2ce:	in     eax,0xa6
  40c2d0:	fst    st(1)
  40c2d2:	add    eax,0x9db3ffc0
  40c2d7:	fwait
  40c2d8:	push   ss
  40c2d9:	stc    
  40c2da:	js     0x40c335
  40c2dc:	mov    esi,0xb98165b4
  40c2e1:	fs jp  0x40c2c1
  40c2e4:	mov    bl,0x3e
  40c2e6:	xchg   edi,eax
  40c2e7:	enter  0x70dc,0x8a
  40c2eb:	imul   edi,DWORD PTR [ebx+0x47433a94],0xb0a094b6
  40c2f5:	cld    
  40c2f6:	pop    edx
  40c2f7:	push   0xfffffff5
  40c2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2fa:	arpl   WORD PTR ds:0xd4762d80,sp
  40c300:	hlt    
  40c301:	push   0x5e302810
  40c306:	mov    ebp,0xe500aa0b
  40c30b:	sub    BYTE PTR [edx-0x4b],0x67
  40c30f:	and    BYTE PTR [eax],bl
  40c311:	push   ebp
  40c312:	mov    WORD PTR [ecx-0x1],ds
  40c315:	stos   DWORD PTR es:[edi],eax
  40c316:	mov    edx,0xb2d98064
  40c31b:	hlt    
  40c31c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c31d:	std    
  40c31e:	scas   al,BYTE PTR es:[edi]
  40c31f:	mov    eax,DWORD PTR [eax]
  40c321:	retf   0x13de
  40c324:	je     0x40c3a5
  40c326:	jb     0x40c2bf
  40c328:	push   ebp
  40c329:	ja     0x40c312
  40c32b:	in     eax,0xa3
  40c32d:	jg     0x40c328
  40c32f:	clc    
  40c330:	fwait
  40c331:	jno    0x40c2d6
  40c333:	pop    ecx
  40c334:	adc    al,0xec
  40c336:	and    BYTE PTR [edi-0x43ee73ad],0xfb
  40c33d:	mov    BYTE PTR [esi+0x0],dh
  40c340:	xor    eax,DWORD PTR [eax+eax*8+0x27]
  40c344:	pop    edx
  40c345:	cld    
  40c346:	jmp    0x9a6a:0x4a02f5a7
  40c34d:	xchg   DWORD PTR [eax-0x45],esp
  40c350:	mov    WORD PTR [ebp+0x30e8de76],cs
  40c356:	ficomp DWORD PTR ds:0xa336a92e
  40c35c:	and    dh,BYTE PTR [eax+0x2f]
  40c35f:	pop    ecx
  40c360:	fwait
  40c361:	scas   al,BYTE PTR es:[edi]
  40c362:	jecxz  0x40c371
  40c364:	neg    DWORD PTR [edi]
  40c366:	jb     0x40c334
  40c368:	push   ds
  40c369:	fisubr DWORD PTR [ebp-0x47]
  40c36c:	repnz sub BYTE PTR [ecx-0x6d71e742],ah
  40c373:	lods   al,BYTE PTR ds:[esi]
  40c374:	arpl   WORD PTR [ebx-0x5a],si
  40c377:	ins    DWORD PTR es:[edi],dx
  40c378:	mov    bl,0x6c
  40c37a:	bound  edi,QWORD PTR ds:0x25f656a1
  40c380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c381:	lock jp 0x40c3c0
  40c384:	ss in  al,dx
  40c386:	in     al,dx
  40c387:	or     al,0x3d
  40c389:	sbb    BYTE PTR [edx+0x106283d0],ah
  40c38f:	pop    esi
  40c390:	cmp    dl,0x12
  40c393:	inc    ebx
  40c394:	mov    ss,WORD PTR [ebx+0x5ea0ef3d]
  40c39a:	sub    BYTE PTR [ecx],bh
  40c39c:	int    0x87
  40c39e:	cmp    eax,0xeb1c2ca0
  40c3a3:	or     al,0xa8
  40c3a5:	lea    eax,[ebx+ebp*4+0x6a]
  40c3a9:	and    edx,DWORD PTR [edi+0x37]
  40c3ac:	xchg   ecx,eax
  40c3ad:	ja     0x40c41d
  40c3af:	mov    eax,0x5f6f9366
  40c3b4:	cwde   
  40c3b5:	mov    edx,0xe038676e
  40c3ba:	push   es
  40c3bb:	in     al,dx
  40c3bc:	loop   0x40c3bb
  40c3be:	or     al,0xf3
  40c3c0:	test   al,0xc1
  40c3c2:	cmp    ebx,ebp
  40c3c4:	pop    ds
  40c3c5:	cmc    
  40c3c6:	mov    eax,ds:0xa50e0dd7
  40c3cb:	xchg   edi,eax
  40c3cc:	call   0xc706:0xaf902cfa
  40c3d3:	sar    BYTE PTR [esi+0x59c7624c],cl
  40c3d9:	cwde   
  40c3da:	inc    edi
  40c3db:	and    eax,0x3d4fd379
  40c3e0:	call   0x6b8f:0x5a267368
  40c3e7:	adc    dl,BYTE PTR [ebp-0x5c]
  40c3ea:	in     al,dx
  40c3eb:	mov    ebx,0x2008fcd5
  40c3f0:	stos   BYTE PTR es:[edi],al
  40c3f1:	pop    esi
  40c3f2:	loope  0x40c3d8
  40c3f4:	fwait
  40c3f5:	out    0xd6,al
  40c3f7:	pop    ebp
  40c3f8:	popa   
  40c3f9:	cmp    BYTE PTR [esp+ebp*1],0x5e
  40c3fd:	adc    cl,ch
  40c3ff:	cwde   
  40c400:	push   eax
  40c401:	aas    
  40c402:	sub    al,0x1c
  40c404:	xor    DWORD PTR [edi+0x73],edx
  40c407:	vpaddb ymm7,ymm1,YMMWORD PTR [ecx]
  40c40b:	cmp    al,0x41
  40c40d:	add    eax,0xcff07718
  40c412:	(bad)  
  40c413:	jmp    0x40c491
  40c415:	shld   DWORD PTR [edx-0x5],ebx,0x40
  40c41a:	test   eax,0xb5a0cad9
  40c41f:	mov    bh,0x9b
  40c421:	in     al,0xcb
  40c423:	push   eax
  40c424:	pop    edi
  40c425:	int3   
  40c426:	xchg   edx,eax
  40c427:	xchg   esp,eax
  40c428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c429:	outs   dx,DWORD PTR ds:[esi]
  40c42a:	push   esi
  40c42b:	add    DWORD PTR [edx+0x79],edi
  40c42e:	sub    dl,BYTE PTR [esi]
  40c430:	sub    bh,BYTE PTR [edi+ebp*1-0x579ca858]
  40c437:	mov    esi,0x63ad7c17
  40c43c:	shl    ah,0xd7
  40c43f:	int    0xee
  40c441:	stos   DWORD PTR es:[edi],eax
  40c442:	add    esp,DWORD PTR [esi+0x5371a370]
  40c448:	mov    edx,es
  40c44a:	mov    ds:0xe4d7b38d,eax
  40c44f:	inc    edx
  40c450:	push   edx
  40c451:	dec    ebx
  40c452:	mov    eax,0x13349a07
  40c457:	das    
  40c458:	lods   al,BYTE PTR ds:[esi]
  40c459:	xor    cl,BYTE PTR [eax-0x72]
  40c45c:	sub    ebx,DWORD PTR [esi-0x74]
  40c45f:	and    bh,BYTE PTR [ecx]
  40c461:	pop    ds
  40c462:	xor    bl,BYTE PTR [eax+0x7a]
  40c465:	push   0x71
  40c467:	mov    ecx,0x1e3ebbe9
  40c46c:	adc    ah,BYTE PTR [ecx]
  40c46e:	aaa    
  40c46f:	imul   esp,edx,0x15
  40c472:	pop    ebx
  40c473:	add    eax,DWORD PTR [ebx+0x4d]
  40c476:	inc    ecx
  40c477:	push   edi
  40c478:	repnz push es
  40c47a:	aad    0x55
  40c47c:	inc    ebp
  40c47d:	jmp    0x40c460
  40c47f:	imul   eax,DWORD PTR [eax-0x6c],0x23
  40c483:	push   edx
  40c484:	sub    DWORD PTR [eax],ebp
  40c486:	pop    edi
  40c487:	xchg   BYTE PTR [edx+0x41],al
  40c48a:	mov    bh,ah
  40c48c:	pop    DWORD PTR [edi+0x30]
  40c48f:	push   ecx
  40c490:	jb     0x40c41c
  40c492:	fld    TBYTE PTR [ebx-0x145c8e8e]
  40c498:	lods   eax,DWORD PTR ds:[esi]
  40c499:	add    DWORD PTR [esi+edx*1],esi
  40c49c:	pop    ss
  40c49d:	push   es
  40c49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c49f:	call   0x3157adc9
  40c4a4:	sar    bl,1
  40c4a6:	(bad)  
  40c4a7:	cld    
  40c4a8:	aas    
  40c4a9:	(bad)  
  40c4aa:	outs   dx,DWORD PTR ds:[esi]
  40c4ab:	outs   dx,BYTE PTR ds:[esi]
  40c4ac:	jnp    0x40c4f6
  40c4ae:	outs   dx,BYTE PTR ds:[esi]
  40c4af:	test   eax,0x67eb865e
  40c4b4:	or     al,0x9e
  40c4b6:	shl    DWORD PTR [eax+0x770ab87f],0x8d
  40c4bd:	ins    BYTE PTR es:[edi],dx
  40c4be:	jne    0x40c4e4
  40c4c0:	loopne 0x40c503
  40c4c2:	fdivr  st,st(0)
  40c4c4:	repnz imul ecx,DWORD PTR [ecx+0x4b],0x59dc8926
  40c4cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4cd:	(bad)  
  40c4ce:	pop    ebp
  40c4cf:	push   esi
  40c4d0:	fldcw  WORD PTR [eax+0x46]
  40c4d3:	pushf  
  40c4d4:	push   ss
  40c4d5:	inc    edx
  40c4d6:	cmc    
  40c4d7:	out    dx,al
  40c4d8:	pop    ss
  40c4d9:	ficomp DWORD PTR [edx]
  40c4db:	xor    DWORD PTR ds:0x97b10fd7,edi
  40c4e1:	ds stc 
  40c4e3:	std    
  40c4e4:	adc    dl,BYTE PTR [eax]
  40c4e6:	loopne 0x40c51f
  40c4e8:	fdivr  st,st(0)
  40c4ea:	or     eax,0xb56537ed
  40c4ef:	sub    ebp,DWORD PTR [edx-0x20]
  40c4f2:	and    BYTE PTR [esi+0x75711010],cl
  40c4f8:	sub    ch,ah
  40c4fa:	enter  0x4371,0x4c
  40c4fe:	and    al,0x33
  40c500:	add    eax,0x3b36e10f
  40c505:	ds pop ebx
  40c507:	leave  
  40c508:	sub    BYTE PTR [ecx+0x3bb6350f],al
  40c50e:	jne    0x40c505
  40c510:	call   0x2a31:0x13d11db8
  40c517:	mov    esp,0xca2f72c7
  40c51c:	inc    edi
  40c51d:	in     eax,0x7c
  40c51f:	ins    BYTE PTR es:[edi],dx
  40c520:	retf   0x6368
  40c523:	repnz ins BYTE PTR es:[edi],dx
  40c525:	xchg   esp,eax
  40c526:	mov    esp,0x30691b06
  40c52b:	(bad)  
  40c52c:	sahf   
  40c52d:	pushf  
  40c52e:	rcr    DWORD PTR [esi],1
  40c530:	dec    ecx
  40c531:	pop    ds
  40c532:	jmp    0x40c588
  40c534:	call   0xee36c2ce
  40c539:	clc    
  40c53a:	xchg   edi,eax
  40c53b:	out    0x6d,al
  40c53d:	pop    ds
  40c53e:	mov    bh,BYTE PTR [ebp-0xd8816d1]
  40c544:	cmp    edi,eax
  40c546:	cwde   
  40c547:	mov    eax,0xe2855bc6
  40c54c:	mov    dl,0x11
  40c54e:	lods   al,BYTE PTR ds:[esi]
  40c54f:	pop    ebp
  40c550:	(bad)  
  40c551:	mov    esp,0xaf8c57e1
  40c556:	bound  ecx,QWORD PTR [ecx-0x11]
  40c559:	pop    ss
  40c55a:	in     al,0x59
  40c55c:	ret    
  40c55d:	add    al,0xcb
  40c55f:	fild   DWORD PTR [edi]
  40c561:	mov    ebp,0x6c0881c0
  40c566:	push   0xa4c93318
  40c56b:	add    ebx,DWORD PTR [edi-0xa]
  40c56e:	daa    
  40c56f:	mov    ch,0x84
  40c571:	mov    cl,0x47
  40c573:	ss das 
  40c575:	int3   
  40c576:	scas   eax,DWORD PTR es:[edi]
  40c577:	push   0xf4923d83
  40c57c:	xor    eax,edx
  40c57e:	ja     0x40c505
  40c580:	pop    ss
  40c581:	and    al,0x14
  40c583:	jmp    0x40c562
  40c585:	or     al,0x85
  40c587:	xor    al,0x28
  40c589:	mov    bh,0xdf
  40c58b:	inc    esp
  40c58c:	push   ebx
  40c58d:	pusha  
  40c58e:	lahf   
  40c58f:	aas    
  40c590:	lods   al,BYTE PTR ds:[esi]
  40c591:	add    ecx,DWORD PTR [esi+edi*4+0x6c5c4098]
  40c598:	pop    es
  40c599:	popa   
  40c59a:	aaa    
  40c59b:	cld    
  40c59c:	jecxz  0x40c55b
  40c59e:	mov    bh,0xca
  40c5a0:	imul   edx,esi,0xffffff85
  40c5a3:	loopne 0x40c572
  40c5a5:	jnp    0x40c5c1
  40c5a7:	fistp  QWORD PTR [esi]
  40c5a9:	bound  esi,QWORD PTR [ecx+eax*4-0x25]
  40c5ad:	pushf  
  40c5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5af:	adc    al,0xca
  40c5b1:	fnstenv [ebx+esi*4+0xa231254]
  40c5b8:	shl    BYTE PTR [esi+0x52689ec9],1
  40c5be:	fcomp  st(7)
  40c5c0:	cmp    BYTE PTR [ebp+0x58d62e1b],0xd5
  40c5c7:	pop    edx
  40c5c8:	sub    DWORD PTR [edi+0x77a32639],eax
  40c5ce:	jge    0x40c604
  40c5d0:	es mov bl,0x98
  40c5d4:	dec    edi
  40c5d5:	dec    esp
  40c5d6:	pop    edi
  40c5d7:	mov    eax,0x5ca11f00
  40c5dc:	sbb    dl,dl
  40c5de:	adc    DWORD PTR [edi+0x2],edx
  40c5e1:	(bad)  
  40c5e2:	outs   dx,DWORD PTR ds:[esi]
  40c5e3:	push   es
  40c5e4:	aaa    
  40c5e5:	(bad)  
  40c5e6:	scas   al,BYTE PTR es:[edi]
  40c5e7:	rol    edi,cl
  40c5e9:	mov    ch,0x93
  40c5eb:	jp     0x40c659
  40c5ed:	or     ecx,DWORD PTR [ecx+0x3724d49a]
  40c5f3:	or     dh,BYTE PTR [ebx+0x69fe63b8]
  40c5f9:	jo     0x40c661
  40c5fb:	adc    al,0xcc
  40c5fd:	adc    DWORD PTR [edx-0x381962dd],ecx
  40c603:	ins    DWORD PTR es:[edi],dx
  40c604:	arpl   WORD PTR [ecx],dx
  40c606:	push   ebp
  40c607:	sbb    BYTE PTR [edx-0x2feb48fa],0xd1
  40c60e:	popf   
  40c60f:	pop    ebx
  40c610:	xlat   BYTE PTR es:[ebx]
  40c612:	cmp    edx,DWORD PTR [edi-0x3d]
  40c615:	mov    esp,0xc8465e3
  40c61a:	stos   DWORD PTR es:[edi],eax
  40c61b:	mov    ds:0xe10b90a1,al
  40c620:	mov    ebx,0xd18c3ba3
  40c625:	fld1   
  40c627:	adc    bh,BYTE PTR [ebp-0x340e2087]
  40c62d:	jno    0x40c5f8
  40c62f:	adc    BYTE PTR [ebx-0x55],dh
  40c632:	mov    dh,0x6b
  40c634:	xor    al,0xd0
  40c636:	fwait
  40c637:	sub    esi,ebp
  40c639:	pop    es
  40c63a:	mov    al,0x25
  40c63c:	rol    edx,cl
  40c63e:	mov    WORD PTR ds:0xb3bb3986,?
  40c644:	jmp    0xc098e47a
  40c649:	push   esi
  40c64a:	es dec edx
  40c64c:	push   ecx
  40c64d:	outs   dx,DWORD PTR ds:[esi]
  40c64e:	mov    eax,0xab113218
  40c653:	pop    edx
  40c654:	dec    ecx
  40c655:	and    BYTE PTR [edx-0x7],0xb5
  40c659:	pop    ebp
  40c65a:	adc    al,0x5c
  40c65c:	and    DWORD PTR [ebp+0x50023d83],0x679a41e4
  40c666:	fadd   DWORD PTR [edx-0x4e]
  40c669:	dec    ebx
  40c66a:	into   
  40c66b:	jbe    0x40c67e
  40c66d:	jns    0x40c62e
  40c66f:	mov    dl,0x3b
  40c671:	hlt    
  40c672:	daa    
  40c673:	sub    edi,DWORD PTR [eax+0x45]
  40c676:	idiv   esi
  40c678:	es push esp
  40c67a:	addr16 inc ebx
  40c67c:	mov    cl,0xd4
  40c67e:	inc    eax
  40c67f:	jg     0x40c6d9
  40c681:	(bad)  
  40c682:	lock out dx,eax
  40c684:	push   ds
  40c685:	not    BYTE PTR [ebp+0x3735998f]
  40c68b:	dec    esi
  40c68c:	inc    BYTE PTR [edx]
  40c68e:	sbb    esp,DWORD PTR [ebx-0x7cb6daa7]
  40c694:	daa    
  40c695:	out    dx,al
  40c696:	adc    esi,0xd9ed95a7
  40c69c:	xor    eax,0xb456f0bb
  40c6a1:	mov    dh,0xe3
  40c6a3:	pop    ecx
  40c6a4:	int3   
  40c6a5:	dec    esi
  40c6a6:	sub    ecx,esi
  40c6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6a9:	xchg   edi,eax
  40c6aa:	or     DWORD PTR [esi+esi*1-0x4e],0xffffffac
  40c6af:	sbb    eax,0xda126db0
  40c6b4:	mov    ?,edx
  40c6b6:	test   eax,0x2ab2b570
  40c6bb:	inc    ebx
  40c6bc:	sub    al,0xf0
  40c6be:	jg     0x40c64d
  40c6c0:	push   cs
  40c6c1:	ret    0x6533
  40c6c4:	into   
  40c6c5:	xchg   edx,eax
  40c6c6:	and    BYTE PTR [edx+eax*4],ch
  40c6c9:	pop    ss
  40c6ca:	pop    esp
  40c6cb:	mov    esp,0xfa7a3d74
  40c6d0:	(bad)  
  40c6d1:	push   ss
  40c6d2:	test   DWORD PTR [edi-0xc],ebx
  40c6d5:	jmp    0x40c69a
  40c6d7:	lds    edx,FWORD PTR [eax-0x14]
  40c6da:	xchg   DWORD PTR [esi-0x55c4d7cb],edi
  40c6e0:	add    ebp,ebx
  40c6e2:	ja     0x40c6d6
  40c6e4:	or     al,0x63
  40c6e6:	mov    esp,0x6ac35f50
  40c6eb:	daa    
  40c6ec:	mov    WORD PTR [edi-0x4a2671ff],ds
  40c6f2:	bound  esp,QWORD PTR [edx-0x3f66e0c4]
  40c6f8:	cmp    ch,BYTE PTR ds:0x2c0babfb
  40c6fe:	inc    esi
  40c6ff:	xchg   edx,eax
  40c700:	sbb    ecx,0x5
  40c703:	rol    BYTE PTR [esi-0x4789fbec],1
  40c709:	add    al,0x5e
  40c70b:	sbb    al,0xe
  40c70d:	out    0xca,eax
  40c70f:	popa   
  40c710:	mov    eax,ds:0x445a9d4e
  40c715:	int    0xf1
  40c717:	adc    DWORD PTR cs:[ecx+ebx*8+0x7796907f],ecx
  40c71f:	mov    DWORD PTR [esi-0x7d19a23],ebx
  40c725:	push   esi
  40c726:	jo     0x40c6c7
  40c728:	push   eax
  40c729:	push   0xffffffc1
  40c72b:	cmp    bl,0x88
  40c72e:	xchg   ebp,eax
  40c72f:	stos   BYTE PTR es:[edi],al
  40c730:	add    eax,edx
  40c732:	xchg   ecx,eax
  40c733:	cmp    DWORD PTR [ecx+0x1651cd24],ebp
  40c739:	push   ebx
  40c73a:	xlat   BYTE PTR ds:[ebx]
  40c73b:	cmp    al,0x9b
  40c73d:	sahf   
  40c73e:	mov    ds:0xb38ca185,eax
  40c743:	in     al,0x6d
  40c745:	adc    bl,bh
  40c747:	dec    edx
  40c748:	jnp    0x40c77e
  40c74a:	pop    ecx
  40c74b:	retf   
  40c74c:	and    ebp,DWORD PTR [ebx]
  40c74e:	mov    eax,ds:0xcd1d5c2c
  40c753:	int    0xde
  40c755:	mov    bh,0x39
  40c757:	sbb    bh,BYTE PTR [edx-0x72]
  40c75a:	scas   al,BYTE PTR es:[edi]
  40c75b:	cmp    al,0x60
  40c75d:	in     al,0x8a
  40c75f:	adc    BYTE PTR [eax-0x28],bh
  40c762:	jecxz  0x40c7c3
  40c764:	scas   al,BYTE PTR es:[edi]
  40c765:	pop    es
  40c766:	pop    ss
  40c767:	jmp    0xca9ba901
  40c76c:	ret    0x2e55
  40c76f:	sub    BYTE PTR [ebx-0x34],ch
  40c772:	aad    0x97
  40c774:	xchg   DWORD PTR [edx],ebx
  40c776:	js     0x40c7c5
  40c778:	sub    eax,0x3c38c30a
  40c77d:	inc    esi
  40c77e:	adc    eax,0x7af5c275
  40c783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c784:	not    ah
  40c786:	xchg   esp,eax
  40c787:	xchg   BYTE PTR [esp+ebx*2-0x5e],dl
  40c78b:	fbstp  TBYTE PTR [eax-0x51]
  40c78e:	jp     0x40c74b
  40c790:	mov    ch,0x8e
  40c792:	(bad)  
  40c793:	daa    
  40c794:	not    BYTE PTR [edi+0x32]
  40c797:	pop    ebx
  40c798:	pop    es
  40c799:	and    ecx,eax
  40c79b:	pop    ebp
  40c79c:	and    ecx,DWORD PTR [ebx+0x4bab99f4]
  40c7a2:	push   eax
  40c7a3:	xchg   esi,eax
  40c7a4:	addr16 aad 0xb0
  40c7a7:	mov    ebx,0xfb1a99db
  40c7ac:	jnp    0x40c780
  40c7ae:	mov    al,ds:0x171f28a
  40c7b3:	adc    eax,0xaa8d6595
  40c7b8:	mov    edx,0x50d5be59
  40c7bd:	ror    DWORD PTR [ebp-0x51613321],1
  40c7c3:	ret    
  40c7c4:	and    al,0x21
  40c7c6:	and    al,0x36
  40c7c8:	arpl   WORD PTR [edx-0x47],bp
  40c7cb:	icebp  
  40c7cc:	or     al,0xbf
  40c7ce:	pop    edi
  40c7cf:	xchg   edi,eax
  40c7d0:	xchg   ebp,eax
  40c7d1:	gs add eax,0x3e8626f8
  40c7d7:	cmp    BYTE PTR [ecx+0x22],0xdf
  40c7db:	mov    eax,0x2a8456b4
  40c7e0:	pop    esi
  40c7e1:	shl    esi,0x2b
  40c7e4:	not    DWORD PTR [esp+eiz*4+0x5a]
  40c7e8:	push   cs
  40c7e9:	adc    dh,BYTE PTR [ebx-0x65]
  40c7ec:	mov    ds:0x4811bd5b,al
  40c7f1:	adc    BYTE PTR [ebx],0xd7
  40c7f4:	or     eax,0x5fc18bd5
  40c7f9:	scas   al,BYTE PTR es:[edi]
  40c7fa:	out    0x7d,eax
  40c7fc:	lahf   
  40c7fd:	dec    ecx
  40c7fe:	cld    
  40c7ff:	adc    esi,edx
  40c801:	inc    esp
  40c802:	gs push edx
  40c804:	js     0x40c793
  40c806:	cli    
  40c807:	add    eax,0x445380e8
  40c80c:	xor    bl,BYTE PTR [edx-0xa]
  40c80f:	or     al,al
  40c811:	call   0xe380:0x1f4ab550
  40c818:	ja     0x40c874
  40c81a:	enter  0xf66c,0x8c
  40c81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c81f:	les    edx,FWORD PTR [eax+0x49271da8]
  40c825:	into   
  40c826:	mov    al,0x1a
  40c828:	aam    0xee
  40c82a:	jnp    0x40c7b3
  40c82c:	ss int3 
  40c82e:	mov    esp,?
  40c830:	pop    ebx
  40c831:	mov    ah,0x65
  40c833:	stos   BYTE PTR es:[edi],al
  40c834:	daa    
  40c835:	sub    DWORD PTR [ebx-0x4dbc8c8e],ebx
  40c83b:	push   es
  40c83c:	mov    edi,DWORD PTR [ecx]
  40c83e:	xchg   ecx,eax
  40c83f:	lea    ecx,[ebx]
  40c841:	test   ebp,eax
  40c843:	add    al,0x5f
  40c845:	es hlt 
  40c847:	xor    BYTE PTR [esi+0x4a],bh
  40c84a:	outs   dx,BYTE PTR ds:[esi]
  40c84b:	dec    edi
  40c84c:	out    dx,al
  40c84d:	and    dh,BYTE PTR [edi-0x6d0fac4f]
  40c853:	adc    dh,BYTE PTR [ebp+eiz*2+0x14]
  40c857:	fmul   DWORD PTR [edx-0x3c1fb6bd]
  40c85d:	mov    esp,0x404b46cd
  40c862:	cmp    eax,0x4ace0e84
  40c867:	pop    ebx
  40c868:	jecxz  0x40c82a
  40c86a:	leave  
  40c86b:	call   0x5eac35e9
  40c870:	popf   
  40c871:	imul   esp,DWORD PTR [edx],0x32
  40c874:	dec    esi
  40c875:	aaa    
  40c876:	iret   
  40c877:	in     eax,0xb8
  40c879:	lods   al,BYTE PTR ds:[esi]
  40c87a:	xchg   ecx,eax
  40c87b:	test   BYTE PTR [esi+ebx*8],bh
  40c87e:	sub    BYTE PTR ds:0x61a629f2,bl
  40c884:	jmp    0x40c854
  40c886:	sbb    BYTE PTR [ecx-0x1d],al
  40c889:	loopne 0x40c864
  40c88b:	inc    edx
  40c88c:	std    
  40c88d:	imul   eax,edx,0x1c
  40c890:	cmp    esp,DWORD PTR [eax]
  40c892:	in     al,dx
  40c893:	mov    ecx,0xade78365
  40c898:	xchg   edx,eax
  40c899:	jns    0x40c823
  40c89b:	out    dx,eax
  40c89c:	adc    BYTE PTR [edi],bh
  40c89e:	pop    es
  40c89f:	inc    ebx
  40c8a0:	jp     0x40c82e
  40c8a2:	pop    esi
  40c8a3:	jnp    0x40c91f
  40c8a5:	test   BYTE PTR [ebx],al
  40c8a7:	lahf   
  40c8a8:	mov    al,0xaa
  40c8aa:	dec    esi
  40c8ab:	out    0x5d,eax
  40c8ad:	(bad)  
  40c8ae:	xchg   edi,eax
  40c8af:	mov    al,ds:0xa2c7c577
  40c8b4:	(bad)  
  40c8b5:	loop   0x40c861
  40c8b7:	mov    bh,0x6d
  40c8b9:	pop    es
  40c8ba:	dec    esi
  40c8bb:	outs   dx,DWORD PTR ds:[esi]
  40c8bc:	loope  0x40c83e
  40c8be:	push   esi
  40c8bf:	add    al,0xaa
  40c8c1:	ror    DWORD PTR [ebp+0x6c4cfd3e],1
  40c8c7:	lock jno 0x40c8d9
  40c8ca:	lds    esp,FWORD PTR [eax+0x7c]
  40c8cd:	mov    al,0x45
  40c8cf:	push   0x3a435d7b
  40c8d4:	xlat   BYTE PTR ds:[ebx]
  40c8d5:	xchg   esi,eax
  40c8d6:	sub    esi,DWORD PTR [eax]
  40c8d8:	xchg   esp,eax
  40c8d9:	fistp  QWORD PTR [edx-0x42ecab7e]
  40c8df:	(bad)  
  40c8e0:	call   FWORD PTR [edx+0x5b804640]
  40c8e6:	adc    BYTE PTR [eax+0x3d],0xe6
  40c8ea:	(bad)  
  40c8eb:	lods   al,BYTE PTR ds:[esi]
  40c8ec:	stos   BYTE PTR es:[edi],al
  40c8ed:	xchg   ebx,eax
  40c8ee:	popa   
  40c8ef:	cmp    eax,0xdd60c4ef
  40c8f4:	std    
  40c8f5:	push   0xcda5349c
  40c8fa:	in     al,dx
  40c8fb:	aad    0xf2
  40c8fd:	fcom   DWORD PTR [ebp+0x51]
  40c900:	xor    eax,0x96340656
  40c905:	(bad)  [edi]
  40c907:	mov    al,0x18
  40c909:	ret    
  40c90a:	jl     0x40c91b
  40c90c:	push   ds
  40c90d:	cld    
  40c90e:	repz and BYTE PTR [edi-0x1],bl
  40c912:	retf   0x47c3
  40c915:	rol    DWORD PTR ds:0x4da79747,1
  40c91b:	imul   eax,DWORD PTR [edi+0x2a],0xffffffe1
  40c91f:	jmp    0x2b43:0xf4791ae6
  40c926:	add    dh,BYTE PTR [edi+0x5f]
  40c929:	gs jbe 0x40c8db
  40c92c:	repnz add edi,esi
  40c92f:	les    ebp,FWORD PTR [edx]
  40c931:	addr16 (bad) 
  40c933:	xchg   ecx,eax
  40c934:	jmp    0x51c9ac42
  40c939:	(bad)  
  40c93a:	sub    BYTE PTR [edi+0x38df0c6],bh
  40c940:	push   ebx
  40c941:	arpl   bx,dx
  40c943:	jmp    FWORD PTR [ecx]
  40c945:	imul   eax,DWORD PTR [edx+0x6825be56],0x9
  40c94c:	lock pop ss
  40c94e:	xchg   edx,eax
  40c94f:	dec    eax
  40c950:	pop    edx
  40c951:	lahf   
  40c952:	adc    eax,0x4d4c185f
  40c957:	add    al,0xb7
  40c959:	adc    ah,BYTE PTR [esi]
  40c95b:	inc    ecx
  40c95c:	adc    eax,0x4b40d85b
  40c961:	sub    edi,eax
  40c963:	mov    BYTE PTR [esi],al
  40c965:	sub    BYTE PTR [esi+0x6d],dl
  40c968:	test   DWORD PTR fs:[esi],eax
  40c96b:	or     al,0xbd
  40c96d:	(bad)  
  40c96e:	out    0x74,eax
  40c970:	addr16 inc esp
  40c972:	adc    BYTE PTR [ebx],ah
  40c974:	fnstsw WORD PTR [ebx]
  40c976:	mov    BYTE PTR [eax],dl
  40c978:	mov    esi,0x4b42350
  40c97d:	lahf   
  40c97e:	and    ch,dl
  40c980:	push   esi
  40c981:	or     DWORD PTR [edi],0x30
  40c984:	daa    
  40c985:	cmc    
  40c986:	pop    es
  40c987:	arpl   bx,si
  40c989:	fnstsw WORD PTR gs:[edi]
  40c98c:	loopne 0x40c961
  40c98e:	jno    0x40c911
  40c990:	mov    BYTE PTR [esi],0xe5
  40c993:	xchg   esp,eax
  40c994:	mov    WORD PTR [ecx],ds
  40c996:	add    BYTE PTR [edx],bl
  40c998:	mov    ah,BYTE PTR [eax]
  40c99a:	jae    0x40c926
  40c99c:	ror    BYTE PTR [ebp-0x196130c],0xb8
  40c9a3:	leave  
  40c9a4:	adc    eax,0x9a0837e8
  40c9a9:	stos   DWORD PTR es:[edi],eax
  40c9aa:	rcl    DWORD PTR [ebx+ebx*8+0x57ac1ba],1
  40c9b1:	jns    0x40c9b9
  40c9b3:	shl    BYTE PTR [ecx+0x63],0x36
  40c9b7:	mov    ds:0xcabb7207,eax
  40c9bc:	jmp    0x40c967
  40c9be:	sbb    eax,0x79c9be78
  40c9c3:	and    BYTE PTR [esi+eax*8+0x76],0x48
  40c9c8:	xor    DWORD PTR [esi-0x3bff6bb],ebp
  40c9ce:	pop    es
  40c9cf:	(bad)  
  40c9d0:	jg     0x40c965
  40c9d2:	sbb    ch,BYTE PTR [eax+0x27]
  40c9d5:	push   ebx
  40c9d6:	scas   al,BYTE PTR es:[edi]
  40c9d7:	add    al,0x1
  40c9d9:	cmp    DWORD PTR [edx-0x54cd4bc9],esp
  40c9df:	and    BYTE PTR [ebp-0x46],ch
  40c9e2:	sbb    DWORD PTR [esi],edi
  40c9e4:	test   al,0x52
  40c9e6:	adc    bl,BYTE PTR [ecx+0x8]
  40c9e9:	fdivr  QWORD PTR [esi*2+0x2fa8a80b]
  40c9f0:	enter  0xdf5a,0x30
  40c9f4:	inc    esi
  40c9f5:	pop    ds
  40c9f6:	stos   BYTE PTR es:[edi],al
  40c9f7:	xor    BYTE PTR ds:0xb2322a30,cl
  40c9fd:	adc    dh,BYTE PTR [esi+0x3e3b3ba3]
  40ca03:	out    dx,eax
  40ca04:	shl    DWORD PTR [edx],0x4a
  40ca07:	xchg   edi,eax
  40ca08:	jno    0x40c994
  40ca0a:	gs cmp ax,0x667b
  40ca0f:	pop    esp
  40ca10:	mov    al,ds:0x4aff4985
  40ca15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca16:	mov    esp,0xab9a93d6
  40ca1b:	(bad)  
  40ca1c:	jp     0x40ca15
  40ca1e:	sub    esp,DWORD PTR [esi-0x66ef6d16]
  40ca24:	sbb    DWORD PTR [ebx],ecx
  40ca26:	dec    ebx
  40ca27:	outs   dx,BYTE PTR ds:[esi]
  40ca28:	repnz sub DWORD PTR [edi],ebp
  40ca2b:	dec    esi
  40ca2c:	data16 div BYTE PTR [ebp-0x5d]
  40ca30:	xchg   ebx,eax
  40ca31:	leave  
  40ca32:	lahf   
  40ca33:	push   edx
  40ca34:	shl    dh,1
  40ca36:	pop    eax
  40ca37:	retf   0x7015
  40ca3a:	dec    esp
  40ca3b:	(bad)  
  40ca3c:	clc    
  40ca3d:	adc    cl,BYTE PTR [eax+0x4d]
  40ca40:	mul    BYTE PTR [eax-0x669dec72]
  40ca46:	xchg   esi,eax
  40ca47:	ss push esi
  40ca49:	call   0xcd09:0x1acfd0d6
  40ca50:	out    0x21,al
  40ca52:	inc    ebp
  40ca53:	js     0x40ca3f
  40ca55:	imul   ebp,DWORD PTR [edx],0x93a63a44
  40ca5b:	int    0xca
  40ca5d:	stos   BYTE PTR es:[edi],al
  40ca5e:	sbb    BYTE PTR [eax+edx*1-0x10c1230f],bl
  40ca65:	aas    
  40ca66:	mov    dl,0xf0
  40ca68:	out    0x58,al
  40ca6a:	cdq    
  40ca6b:	dec    edx
  40ca6c:	xchg   edi,eax
  40ca6d:	mov    bh,0x61
  40ca6f:	into   
  40ca70:	fidivr WORD PTR [ebx-0x34]
  40ca73:	sbb    al,BYTE PTR [esi]
  40ca75:	cli    
  40ca76:	scas   al,BYTE PTR es:[edi]
  40ca77:	fbstp  TBYTE PTR [eax+0x7e95bacf]
  40ca7d:	jmp    0x40ca5f
  40ca7f:	mov    ds:0x4dc47794,al
  40ca84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca85:	out    dx,eax
  40ca86:	test   DWORD PTR [ebx],ebx
  40ca88:	and    DWORD PTR [esi],esp
  40ca8a:	leave  
  40ca8b:	fbstp  TBYTE PTR [eax-0x6267f98b]
  40ca91:	lods   al,BYTE PTR ds:[esi]
  40ca92:	retf   0xf6f
  40ca95:	push   edx
  40ca96:	fidiv  DWORD PTR ds:0x9a3e7684
  40ca9c:	cmp    ecx,ebx
  40ca9e:	cmp    al,0xd4
  40caa0:	stos   DWORD PTR es:[edi],eax
  40caa1:	sbb    eax,0x8c9fcb34
  40caa6:	js     0x40ca96
  40caa8:	xchg   edx,eax
  40caa9:	push   ds
  40caaa:	mov    eax,ds:0xaa150daf
  40caaf:	sub    BYTE PTR [eax],dl
  40cab1:	mov    ah,0xe4
  40cab3:	(bad)  [edx]
  40cab5:	pop    ebp
  40cab6:	into   
  40cab7:	les    edx,FWORD PTR [ebx+0x3]
  40caba:	push   ss
  40cabb:	das    
  40cabc:	jbe    0x40ca99
  40cabe:	and    esp,edi
  40cac0:	jmp    0x2314:0x231b1afe
  40cac7:	and    BYTE PTR ds:0x5de8996f,al
  40cacd:	imul   esi,eax,0x6a457
  40cad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad4:	outs   dx,BYTE PTR ds:[esi]
  40cad5:	add    ch,cl
  40cad7:	sub    DWORD PTR [eax],ecx
  40cad9:	xchg   BYTE PTR [ebp-0x55],ah
  40cadc:	adc    eax,0x5e233be1
  40cae1:	mov    bl,0xc
  40cae3:	shl    BYTE PTR [edi],0x12
  40cae6:	mov    dh,0xa1
  40cae8:	cs in  eax,0x55
  40caeb:	inc    di
  40caed:	dec    ecx
  40caee:	jecxz  0x40ca92
  40caf0:	add    BYTE PTR [eax-0x60],dl
  40caf3:	mov    gs,WORD PTR [edx-0x2d]
  40caf6:	pop    edx
  40caf7:	pop    edi
  40caf8:	jp     0x40cb62
  40cafa:	push   ebp
  40cafb:	jne    0x40cb38
  40cafd:	dec    ebp
  40cafe:	in     al,dx
  40caff:	not    bl
  40cb01:	push   ebx
  40cb02:	popa   
  40cb03:	ins    BYTE PTR es:[edi],dx
  40cb04:	cdq    
  40cb05:	or     eax,0x68900bd4
  40cb0a:	adc    al,0x2f
  40cb0c:	pop    ebx
  40cb0d:	pop    esp
  40cb0e:	mov    bh,BYTE PTR [ecx+eax*1+0x23]
  40cb12:	pop    es
  40cb13:	dec    eax
  40cb14:	ret    0xac62
  40cb17:	jmp    0x40cb28
  40cb19:	sub    bl,dh
  40cb1b:	cmc    
  40cb1c:	adc    dh,BYTE PTR [ebx+ebx*1-0x3]
  40cb20:	int3   
  40cb21:	in     eax,dx
  40cb22:	pop    edx
  40cb23:	lods   eax,DWORD PTR ds:[esi]
  40cb24:	ss xor eax,0x29db27f5
  40cb2a:	inc    esi
  40cb2b:	cmp    al,0x31
  40cb2d:	cmp    eax,0x5b36b62f
  40cb32:	scas   al,BYTE PTR es:[edi]
  40cb33:	sbb    bl,cl
  40cb35:	mov    eax,0x638d3226
  40cb3a:	outs   dx,DWORD PTR ds:[esi]
  40cb3b:	adc    eax,0x95c38aaa
  40cb40:	jp     0x40cb02
  40cb42:	ins    BYTE PTR es:[edi],dx
  40cb43:	push   esi
  40cb44:	stc    
  40cb45:	mov    esi,0x81ae47a5
  40cb4a:	cs xor bh,bh
  40cb4d:	dec    edi
  40cb4e:	jnp    0x40cb6d
  40cb50:	xchg   DWORD PTR [eax],edi
  40cb52:	fdiv   QWORD PTR [esi]
  40cb54:	sbb    al,0x16
  40cb56:	loope  0x40cb74
  40cb58:	sti    
  40cb59:	or     eax,0xe33ba773
  40cb5e:	mov    esi,0xc6a008d1
  40cb63:	in     al,dx
  40cb64:	pop    eax
  40cb65:	jl     0x40cb22
  40cb67:	mov    ah,0x54
  40cb69:	cmp    DWORD PTR [ebx-0x10562c3c],ecx
  40cb6f:	jg     0x40cbeb
  40cb71:	sbb    al,0x71
  40cb73:	imul   esp,DWORD PTR [eax-0xc],0xfffffff2
  40cb77:	push   cs
  40cb78:	adc    BYTE PTR [ebp+0x125d6def],dh
  40cb7e:	mov    ah,0x2c
  40cb80:	pop    edx
  40cb81:	xchg   edx,eax
  40cb82:	mov    esi,0x406607ee
  40cb87:	or     DWORD PTR [edx],edx
  40cb89:	inc    esi
  40cb8a:	je     0x40cb26
  40cb8c:	jg     0x40cb60
  40cb8e:	into   
  40cb8f:	scas   eax,DWORD PTR es:[edi]
  40cb90:	(bad)  
  40cb91:	fiadd  DWORD PTR [edi-0x15]
  40cb94:	inc    eax
  40cb95:	mov    DWORD PTR [ebx],eax
  40cb97:	aam    0x17
  40cb99:	xchg   edi,edi
  40cb9b:	aad    0x6b
  40cb9d:	in     eax,0xb3
  40cb9f:	ficom  DWORD PTR [ebx+0x2d]
  40cba2:	mov    ecx,ss
  40cba4:	adc    BYTE PTR [ebx+0x1c],ah
  40cba7:	pop    esi
  40cba8:	sbb    eax,0xdb3dace6
  40cbad:	pop    eax
  40cbae:	add    al,0x67
  40cbb0:	jp     0x40cbfc
  40cbb2:	dec    eax
  40cbb3:	addr16 inc esi
  40cbb5:	js     0x40cc36
  40cbb7:	mov    ch,0x49
  40cbb9:	xor    eax,0x94487d9b
  40cbbe:	fldenv [edi]
  40cbc0:	aad    0x50
  40cbc2:	xchg   ebx,esp
  40cbc4:	ret    
  40cbc5:	mov    ds:0xc665a720,al
  40cbca:	add    BYTE PTR [edi],al
  40cbcc:	outs   dx,DWORD PTR ds:[esi]
  40cbcd:	pop    ebp
  40cbce:	sbb    BYTE PTR [ebx-0x38],cl
  40cbd1:	fcom   QWORD PTR [ebx-0x67d65887]
  40cbd7:	loopne 0x40cb8b
  40cbd9:	in     al,0x58
  40cbdb:	je     0x40cbe1
  40cbdd:	xchg   DWORD PTR ds:0xb629ea1,eax
  40cbe3:	xor    BYTE PTR [eax+0x6e25e526],bh
  40cbe9:	ss inc ecx
  40cbeb:	mov    WORD PTR [ebp+0x60],ds
  40cbee:	fwait
  40cbef:	sbb    BYTE PTR [edi-0x3277112],dl
  40cbf5:	(bad)  
  40cbf7:	repz jle 0x40cba7
  40cbfa:	mov    cl,0x58
  40cbfc:	cmp    eax,0xa060248
  40cc01:	pop    es
  40cc02:	jle    0x40cbaf
  40cc04:	mov    DWORD PTR [ebx-0x632a42c7],ecx
  40cc0a:	jl     0x40cbb2
  40cc0c:	inc    ebp
  40cc0d:	cmc    
  40cc0e:	shl    DWORD PTR [edi+0x7a],0xea
  40cc12:	sub    al,0x54
  40cc14:	mov    bl,ch
  40cc16:	jnp    0x40cc00
  40cc18:	dec    ebx
  40cc19:	cmp    DWORD PTR [ebp+0x1b],ecx
  40cc1c:	push   edx
  40cc1d:	lock cwde 
  40cc1f:	nop
  40cc20:	pusha  
  40cc21:	cs ins DWORD PTR es:[edi],dx
  40cc23:	ins    BYTE PTR es:[edi],dx
  40cc24:	jb     0x40cc36
  40cc26:	call   0x187a:0x3fcbcae7
  40cc2d:	add    edx,esp
  40cc2f:	(bad)  
  40cc30:	jge    0x40cbe3
  40cc32:	add    al,0xb5
  40cc34:	jns    0x40cc2f
  40cc36:	nop
  40cc37:	loope  0x40cbfc
  40cc39:	pop    edi
  40cc3a:	stos   BYTE PTR es:[edi],al
  40cc3b:	in     eax,dx
  40cc3c:	jp     0x40cc72
  40cc3e:	pop    edi
  40cc3f:	stos   BYTE PTR es:[edi],al
  40cc40:	or     eax,0x29bebdbf
  40cc45:	cwde   
  40cc46:	repnz xor ebx,DWORD PTR [eax+0x1]
  40cc4a:	popf   
  40cc4b:	inc    ebp
  40cc4c:	mov    ch,BYTE PTR [edi+0x4e115921]
  40cc52:	push   ebx
  40cc53:	lock pop ebx
  40cc55:	jmp    0xf29a:0x821e04c3
  40cc5c:	les    edx,FWORD PTR [eax+0x36]
  40cc5f:	(bad)  
  40cc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc61:	mov    dl,0xda
  40cc63:	mov    edx,DWORD PTR [eax+0x24]
  40cc66:	adc    eax,ecx
  40cc68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc69:	mov    ebp,0x2e497089
  40cc6e:	pop    esp
  40cc6f:	xor    edx,DWORD PTR [edi+ebx*4-0x1bd8d797]
  40cc76:	das    
  40cc77:	add    eax,ecx
  40cc79:	push   eax
  40cc7a:	dec    esp
  40cc7b:	xor    bh,ah
  40cc7d:	fcmovbe st,st(2)
  40cc7f:	add    BYTE PTR [ebp-0x459a7f84],cl
  40cc85:	xchg   ebx,eax
  40cc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc87:	pop    ebx
  40cc88:	stos   DWORD PTR es:[edi],eax
  40cc89:	loop   0x40cc3d
  40cc8b:	sahf   
  40cc8c:	(bad)  
  40cc8d:	cmp    DWORD PTR [ecx+ecx*4],ecx
  40cc90:	push   ds
  40cc91:	pop    es
  40cc92:	dec    ebx
  40cc93:	mov    DWORD PTR [ebp+0x5929c14b],ebp
  40cc99:	add    BYTE PTR [ebx],0x74
  40cc9c:	call   0x2fced0a6
  40cca1:	les    esi,FWORD PTR [ebx+0x4d0067a8]
  40cca7:	fcmovnb st,st(1)
  40cca9:	iret   
  40ccaa:	loope  0x40cc48
  40ccac:	and    BYTE PTR [esi],0xbf
  40ccaf:	sahf   
  40ccb0:	pop    esp
  40ccb1:	xlat   BYTE PTR cs:[ebx]
  40ccb3:	jo     0x40cd09
  40ccb5:	push   edi
  40ccb6:	ror    ch,0x95
  40ccb9:	sub    BYTE PTR [esi+ebx*4],0x5d
  40ccbd:	xchg   esi,eax
  40ccbe:	sahf   
  40ccbf:	js     0x40ccda
  40ccc1:	cmp    al,0x80
  40ccc3:	in     eax,dx
  40ccc4:	inc    ecx
  40ccc5:	(bad)  [edi+0x53]
  40ccc8:	push   ecx
  40ccc9:	test   ch,bl
  40cccb:	inc    DWORD PTR ds:0x9c0902a5
  40ccd1:	sbb    ebx,ebp
  40ccd3:	mov    bl,0x2b
  40ccd5:	pop    ebp
  40ccd6:	push   0x2c
  40ccd8:	in     eax,0x4b
  40ccda:	sar    al,cl
  40ccdc:	out    dx,eax
  40ccdd:	mov    edx,0xefbf1966
  40cce2:	push   esp
  40cce3:	adc    BYTE PTR [ebx-0x7b58e2d7],cl
  40cce9:	ja     0x40ccc6
  40cceb:	hlt    
  40ccec:	pop    edx
  40cced:	mov    dh,0xf5
  40ccef:	mov    esp,0x66e1e4f4
  40ccf4:	xor    eax,0xd2ab317c
  40ccf9:	mov    dh,ah
  40ccfb:	adc    DWORD PTR [eax+0x7b8dfa5],eax
  40cd01:	inc    edx
  40cd02:	xor    dh,BYTE PTR [ecx]
  40cd04:	loopne 0x40cd85
  40cd06:	jecxz  0x40cd0d
  40cd08:	lds    ebx,FWORD PTR [edi+0x348f82fb]
  40cd0e:	push   ebx
  40cd0f:	cld    
  40cd10:	inc    edx
  40cd11:	syscall 
  40cd13:	mov    DWORD PTR [ecx],edi
  40cd15:	bound  ecx,QWORD PTR [ebp-0x16]
  40cd18:	dec    eax
  40cd19:	mov    cl,dh
  40cd1b:	out    0x78,al
  40cd1d:	add    dl,BYTE PTR [edx]
  40cd1f:	lahf   
  40cd20:	test   al,0x2b
  40cd22:	(bad)
  40cd26:	cmp    al,0xe2
  40cd28:	gs fwait
  40cd2a:	cdq    
  40cd2b:	jg     0x40ccea
  40cd2d:	dec    ebp
  40cd2e:	sbb    cl,cl
  40cd30:	inc    ebp
  40cd31:	pop    es
  40cd32:	mov    eax,ds:0xd3f3a757
  40cd37:	jmp    0x727b137
  40cd3c:	pop    esi
  40cd3d:	sub    DWORD PTR [edx],esi
  40cd3f:	push   esp
  40cd40:	(bad)  
  40cd41:	cmp    esp,DWORD PTR [eax]
  40cd43:	jno    0x40ccc6
  40cd45:	outs   dx,BYTE PTR ds:[esi]
  40cd46:	sbb    DWORD PTR [ebp+0x5a],0x86e572f2
  40cd4d:	push   esi
  40cd4e:	idiv   ebx
  40cd50:	sar    DWORD PTR [edx],1
  40cd52:	cdq    
  40cd53:	popa   
  40cd54:	inc    edi
  40cd55:	rol    DWORD PTR [ecx],cl
  40cd57:	cmp    BYTE PTR [esi],cl
  40cd59:	push   ds
  40cd5a:	add    dh,bh
  40cd5c:	fisub  DWORD PTR [ebx+0x3d]
  40cd5f:	xor    al,0xc9
  40cd61:	inc    eax
  40cd62:	mov    esp,DWORD PTR [edi]
  40cd64:	iret   
  40cd65:	call   0xb8c4:0xf6347b2c
  40cd6c:	popf   
  40cd6d:	out    0x94,eax
  40cd6f:	xchg   ebx,eax
  40cd70:	mov    bl,0x20
  40cd72:	or     dh,ah
  40cd74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd75:	or     al,0x9b
  40cd77:	xlat   BYTE PTR ds:[ebx]
  40cd78:	les    edx,FWORD PTR [eax+0x55]
  40cd7b:	lahf   
  40cd7c:	cmp    eax,0x64166749
  40cd81:	icebp  
  40cd82:	jle    0x40cdeb
  40cd84:	adc    DWORD PTR [edi+0x76f5230e],ebx
  40cd8a:	sub    DWORD PTR [edi+0x13c8a3d4],ecx
  40cd90:	push   edx
  40cd91:	out    0x74,eax
  40cd93:	jecxz  0x40cd21
  40cd95:	mov    ds:0xf4b6fe85,al
  40cd9a:	jge    0x40cdd5
  40cd9c:	sbb    eax,0x2a4d377a
  40cda1:	mov    dl,0x34
  40cda3:	loopne 0x40cdb8
  40cda5:	(bad)  
  40cda7:	mov    al,0x2c
  40cdaa:	(bad)  
  40cdab:	ins    DWORD PTR es:[edi],dx
  40cdac:	rcl    ebx,0x8a
  40cdaf:	pop    ebx
  40cdb0:	cmp    ebp,DWORD PTR [edx-0x609354c7]
  40cdb6:	pop    edi
  40cdb7:	(bad)  
  40cdb8:	sti    
  40cdb9:	xlat   BYTE PTR ds:[ebx]
  40cdba:	mov    edi,0xd72eb4b9
  40cdbf:	adc    BYTE PTR [esi+0x4f],0xf5
  40cdc3:	(bad)  
  40cdc4:	mov    bh,0x6f
  40cdc6:	inc    edx
  40cdc7:	push   ebp
  40cdc8:	ret    
  40cdc9:	cmp    al,0xdc
  40cdcb:	add    dl,bl
  40cdcd:	sbb    ebp,DWORD PTR [edx]
  40cdcf:	out    dx,al
  40cdd0:	push   es
  40cdd1:	mov    ah,0xc5
  40cdd3:	xchg   ebp,eax
  40cdd4:	sbb    ebp,DWORD PTR [eax]
  40cdd6:	cmp    bh,BYTE PTR [esi-0x4ac9c012]
  40cddc:	xchg   ebx,eax
  40cddd:	(bad)  
  40cdde:	sbb    dl,BYTE PTR [esi-0x200fe272]
  40cde4:	jmp    0xf751:0xced8d5f2
  40cdeb:	arpl   di,si
  40cded:	in     eax,0x36
  40cdef:	leave  
  40cdf0:	sbb    eax,0xb812aaa8
  40cdf5:	cli    
  40cdf6:	pop    eax
  40cdf7:	cmp    ah,dh
  40cdf9:	jb     0x40ce2c
  40cdfb:	and    DWORD PTR [edi-0x3506d82c],ebp
  40ce01:	out    dx,eax
  40ce02:	iret   
  40ce03:	cmc    
  40ce04:	fstp   st(0)
  40ce06:	or     ebp,DWORD PTR [esi+0x79]
  40ce09:	call   0xd4ab:0x244508f3
  40ce10:	cmp    BYTE PTR [ebx],bh
  40ce12:	push   edx
  40ce13:	xchg   DWORD PTR [esi-0x7],esi
  40ce16:	xchg   BYTE PTR [esi-0x4c],ah
  40ce19:	out    0xaa,eax
  40ce1b:	xlat   BYTE PTR ds:[ebx]
  40ce1c:	cdq    
  40ce1d:	test   DWORD PTR [ecx-0x63],edx
  40ce20:	sub    eax,0x3ac9576c
  40ce25:	hlt    
  40ce26:	(bad)  
  40ce27:	adc    edx,ebp
  40ce29:	and    al,0x91
  40ce2b:	mov    ds:0xad096bb6,al
  40ce30:	(bad)  
  40ce32:	aas    
  40ce33:	cmp    BYTE PTR [edi+ebp*1+0x6],dh
  40ce37:	jns    0x40ce32
  40ce39:	in     al,dx
  40ce3a:	fbld   TBYTE PTR [edi]
  40ce3c:	xchg   esp,eax
  40ce3d:	ror    DWORD PTR [edi-0x6ffbc456],1
  40ce43:	pop    edi
  40ce44:	es mov ebp,0x1b28f790
  40ce4a:	pop    ds
  40ce4b:	mov    es,WORD PTR [ebp+esi*2+0x30]
  40ce4f:	sub    DWORD PTR [edi],esp
  40ce51:	sti    
  40ce52:	jno    0x40ce21
  40ce54:	jae    0x40ce40
  40ce56:	jno    0x40ce39
  40ce58:	xor    ah,BYTE PTR [esi+0x4]
  40ce5b:	and    BYTE PTR [ecx],bl
  40ce5d:	retf   0x7d6e
  40ce60:	outs   dx,DWORD PTR ds:[esi]
  40ce61:	sbb    BYTE PTR [ebx+esi*1-0x41],0x5e
  40ce66:	push   cs
  40ce67:	popf   
  40ce68:	mov    eax,edx
  40ce6a:	mov    ah,0x7d
  40ce6c:	aam    0xc2
  40ce6e:	std    
  40ce6f:	test   al,0x44
  40ce71:	mov    edi,0xdb94090f
  40ce76:	inc    ebp
  40ce77:	popf   
  40ce78:	das    
  40ce79:	push   eax
  40ce7a:	add    al,0x60
  40ce7c:	jmp    0x6cfa74e
  40ce81:	(bad)  
  40ce83:	jmp    0x6d32:0x3c52a9de
  40ce8a:	adc    al,0xe4
  40ce8c:	sub    DWORD PTR [ecx],ebx
  40ce8e:	faddp  st(4),st
  40ce90:	fsincos 
  40ce92:	push   0x76
  40ce94:	or     BYTE PTR [edx+0x30],ah
  40ce97:	shl    DWORD PTR [esi-0x1f],1
  40ce9a:	push   edx
  40ce9b:	jne    0x40ce97
  40ce9d:	push   esp
  40ce9e:	cs inc eax
  40cea0:	dec    ebp
  40cea1:	jnp    0x40ce93
  40cea3:	dec    edi
  40cea4:	rcr    DWORD PTR [ebp-0x2b],cl
  40cea7:	(bad)  
  40cea8:	dec    ebp
  40cea9:	and    al,0x30
  40ceab:	xchg   esp,edx
  40cead:	loope  0x40ce78
  40ceaf:	inc    esi
  40ceb0:	dec    ebx
  40ceb1:	sbb    DWORD PTR [ebx+0x835239],esp
  40ceb7:	inc    ecx
  40ceb8:	ss sbb eax,0x1863d4c8
  40cebe:	stos   DWORD PTR es:[edi],eax
  40cebf:	outs   dx,BYTE PTR ds:[esi]
  40cec1:	pop    ds
  40cec2:	pop    ecx
  40cec3:	into   
  40cec4:	mov    bh,0xe6
  40cec6:	mov    eax,ds:0x61efa395
  40cecb:	jecxz  0x40cf4b
  40cecd:	cmp    eax,0x8e21035d
  40ced2:	pop    ecx
  40ced3:	loop   0x40cea2
  40ced5:	mov    esp,0x87e354d1
  40ceda:	mov    esp,DWORD PTR [eax+0x51]
  40cedd:	fst    st(1)
  40cedf:	and    DWORD PTR [ecx+0x337bd60b],edi
  40cee5:	xchg   DWORD PTR [ecx-0x42],ebp
  40cee8:	cmc    
  40cee9:	aas    
  40ceea:	loope  0x40cec1
  40ceec:	push   edi
  40ceed:	mov    esi,DWORD PTR [edi+0xb]
  40cef0:	es sub al,0xe
  40cef3:	cmp    eax,edi
  40cef5:	in     eax,0xb4
  40cef7:	loopne 0x40ceb1
  40cef9:	call   0xe223c252
  40cefe:	mov    ds:0xcb9b4d96,al
  40cf03:	(bad)  
  40cf04:	pop    esi
  40cf05:	bound  eax,QWORD PTR [edi]
  40cf07:	sti    
  40cf08:	lds    ebx,FWORD PTR [ebx+eax*8+0x2a]
  40cf0c:	sbb    al,0x8f
  40cf0e:	adc    DWORD PTR [eax+0x5],eax
  40cf11:	scas   al,BYTE PTR es:[edi]
  40cf12:	sti    
  40cf13:	in     al,dx
  40cf14:	test   DWORD PTR [eax-0x45cb8606],ebp
  40cf1a:	hlt    
  40cf1b:	xchg   DWORD PTR [eax],ebx
  40cf1d:	and    dh,cl
  40cf1f:	jecxz  0x40cf8b
  40cf21:	dec    edi
  40cf22:	out    dx,al
  40cf23:	mov    fs,WORD PTR [ebp+0xb238d8a]
  40cf29:	mov    edi,0xebc2d004
  40cf2e:	jnp    0x40ced7
  40cf30:	xor    BYTE PTR [ebp+0x3c],bl
  40cf33:	inc    ebp
  40cf34:	imul   edi,esp,0xb2d7ff62
  40cf3a:	(bad)  
  40cf3b:	shl    ch,1
  40cf3d:	enter  0xa4b5,0xa1
  40cf41:	mov    bh,BYTE PTR [esi]
  40cf43:	loopne 0x40cfad
  40cf45:	jno    0x40cfb4
  40cf47:	inc    esi
  40cf48:	pusha  
  40cf49:	add    eax,0x9af2a354
  40cf4e:	cmp    eax,0x1a18a443
  40cf53:	ud2    
  40cf55:	iret   
  40cf56:	push   edx
  40cf57:	into   
  40cf58:	sub    al,0x3
  40cf5a:	out    0xa3,al
  40cf5c:	call   0x1a10:0xdcb19bf9
  40cf63:	jo     0x40cfda
  40cf65:	js     0x40cf60
  40cf67:	xor    dh,BYTE PTR [ecx+0x183528b8]
  40cf6d:	dec    edx
  40cf6e:	jp     0x40cf0b
  40cf70:	ret    
  40cf71:	loop   0x40cf18
  40cf73:	fcomi  st,st(1)
  40cf75:	cmp    al,0xa9
  40cf77:	clc    
  40cf78:	in     eax,0xfe
  40cf7a:	ds addr16 sbb eax,0xe6c0d198
  40cf81:	idiv   DWORD PTR [ebx+0xb]
  40cf84:	fcmovnu st,st(3)
  40cf86:	in     eax,dx
  40cf87:	pop    edi
  40cf88:	sbb    esi,DWORD PTR [ecx+0x9]
  40cf8b:	out    dx,eax
  40cf8c:	and    BYTE PTR [eax-0x56],ch
  40cf8f:	pop    edx
  40cf90:	out    0xc9,eax
  40cf92:	repnz cmp edx,DWORD PTR [esi-0x8]
  40cf96:	pusha  
  40cf97:	mov    bh,dl
  40cf99:	cmp    dh,BYTE PTR [esi+0x70]
  40cf9c:	adc    DWORD PTR [ecx],esp
  40cf9e:	shl    BYTE PTR [eax+0x8eabae6],cl
  40cfa4:	out    dx,eax
  40cfa5:	pop    ebp
  40cfa6:	jmp    0x40cf57
  40cfa8:	jbe    0x40cfc3
  40cfaa:	sbb    BYTE PTR [ecx],dh
  40cfac:	mov    cl,BYTE PTR [eax+0x562ad2b0]
  40cfb2:	imul   esi,DWORD PTR [esp+edx*8-0x70aa4628],0xbbd4d73a
  40cfbd:	lods   eax,DWORD PTR ds:[esi]
  40cfbe:	mov    bh,0xa2
  40cfc0:	add    ch,BYTE PTR [ebx-0x430475da]
  40cfc6:	in     al,0x1c
  40cfc8:	ret    0xac64
  40cfcb:	test   DWORD PTR [ebx+0x6a056c80],esi
  40cfd1:	jb     0x40d019
  40cfd3:	ret    0x1ce8
  40cfd6:	call   0xa39d:0x49ad6894
  40cfdd:	(bad)  
  40cfde:	imul   edx,esi,0x5d17fd1a
  40cfe4:	push   es
  40cfe5:	nop
  40cfe6:	mov    ebx,0x158b4ed3
  40cfeb:	fdivr  QWORD PTR [edi]
  40cfed:	nop
  40cfee:	jne    0x40cfdf
  40cff0:	jl     0x40cfe7
  40cff2:	fs push ds
  40cff4:	dec    esp
  40cff5:	sub    al,0xbc
  40cff7:	es xchg edi,eax
  40cff9:	xchg   edi,eax
  40cffa:	setp   cl
  40cffd:	outs   dx,BYTE PTR ds:[esi]
  40cffe:	(bad)  
  40cfff:	(bad)  
  40d000:	push   eax
  40d001:	dec    ecx
  40d002:	or     BYTE PTR ds:0x71e0a815,ch
  40d008:	or     DWORD PTR [esi],ecx
  40d00a:	jmp    0x40d037
  40d00c:	ja     0x40cfb3
  40d00e:	jp     0x40d075
  40d010:	dec    ecx
  40d011:	(bad)  
  40d012:	je     0x40d03b
  40d014:	fiadd  DWORD PTR [esi+0x2f]
  40d017:	push   cs
  40d018:	dec    edx
  40d019:	cmp    edx,esp
  40d01b:	mov    cl,0xf1
  40d01d:	pop    ebx
  40d01e:	retf   
  40d01f:	and    DWORD PTR [ebp+0x329c2618],edx
  40d025:	xlat   BYTE PTR ds:[ebx]
  40d026:	not    DWORD PTR [edi]
  40d028:	pop    es
  40d029:	inc    esi
  40d02a:	(bad)  
  40d02b:	pusha  
  40d02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d02d:	mov    dl,0x8c
  40d02f:	in     al,dx
  40d030:	cmp    esi,DWORD PTR [edi-0x28]
  40d033:	aam    0x8b
  40d035:	jl     0x40d0a3
  40d037:	mov    dl,0xf9
  40d039:	es cmp eax,0x5e136c49
  40d03f:	cs push ebp
  40d041:	ret    
  40d042:	push   ss
  40d043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d044:	fcomi  st,st(4)
  40d046:	fwait
  40d047:	sti    
  40d048:	stc    
  40d049:	loope  0x40d07c
  40d04b:	jmp    0x96f582f2
  40d050:	dec    edi
  40d051:	stc    
  40d052:	xchg   ebx,edx
  40d054:	loop   0x40cfe9
  40d056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d057:	or     eax,0x12947f2c
  40d05c:	adc    BYTE PTR [edx+0x4ccd2641],bh
  40d062:	jmp    0x94f340ff
  40d067:	xor    BYTE PTR [edi+0x12],ch
  40d06a:	das    
  40d06b:	mov    cl,0xc8
  40d06d:	test   BYTE PTR [ecx+0x41],dh
  40d070:	iret   
  40d071:	lods   al,BYTE PTR ds:[esi]
  40d072:	cs inc eax
  40d074:	(bad)  
  40d075:	mov    esi,0xd04fde92
  40d07a:	jnp    0x40d014
  40d07c:	stos   BYTE PTR es:[edi],al
  40d07d:	or     DWORD PTR [ecx+0x2b],eax
  40d080:	fistp  QWORD PTR [ebp-0x69]
  40d083:	add    BYTE PTR [edx-0x51],dl
  40d086:	dec    esi
  40d087:	xor    al,0x3d
  40d089:	push   0xc71c6370
  40d08e:	inc    esp
  40d08f:	inc    edi
  40d090:	in     eax,dx
  40d091:	push   0x1e
  40d093:	arpl   WORD PTR [ebx],bx
  40d095:	js     0x40d027
  40d097:	loop   0x40d027
  40d099:	fdiv   QWORD PTR [ecx-0xe5cac62]
  40d09f:	ja     0x40d028
  40d0a1:	jmp    0x131ade9f
  40d0a6:	adc    BYTE PTR [ebx+0x6c2e99fa],dh
  40d0ac:	sub    ebp,DWORD PTR [edi]
  40d0ae:	lds    esi,FWORD PTR [ebp+0x3c]
  40d0b1:	pop    es
  40d0b2:	icebp  
  40d0b3:	add    ah,BYTE PTR [eax-0x4b]
  40d0b6:	sub    DWORD PTR [esi+0x2833a84b],esi
  40d0bc:	test   DWORD PTR [ebx-0x79cbf485],ecx
  40d0c2:	cmc    
  40d0c3:	and    al,0xe8
  40d0c5:	out    0xdb,eax
  40d0c7:	push   eax
  40d0c8:	rcl    ebp,cl
  40d0ca:	adc    BYTE PTR [edx],ah
  40d0cc:	cmp    al,0x93
  40d0ce:	fcmovb st,st(5)
  40d0d0:	test   DWORD PTR [ecx-0x239804de],ecx
  40d0d6:	shr    DWORD PTR cs:[ecx-0x709eb0bc],cl
  40d0dd:	inc    ebp
  40d0de:	and    esp,DWORD PTR [ecx-0x322b6f3b]
  40d0e4:	leave  
  40d0e5:	sub    BYTE PTR [ebp-0x4019fddb],al
  40d0eb:	fcomp  st(7)
  40d0ed:	cmp    eax,0xa5814ca2
  40d0f2:	ins    BYTE PTR es:[edi],dx
  40d0f3:	jmp    0x90d3:0x55b1d9b6
  40d0fa:	fwait
  40d0fb:	cdq    
  40d0fc:	push   0x23
  40d0fe:	adc    eax,edx
  40d100:	jle    0x40d146
  40d102:	push   cs
  40d103:	(bad)  
  40d104:	dec    DWORD PTR [edi-0x3b]
  40d107:	addr16 test ch,bh
  40d10a:	inc    ecx
  40d10b:	hlt    
  40d10c:	mov    ds:0x575ce4a1,eax
  40d111:	or     cl,al
  40d113:	and    esi,DWORD PTR [edx+0x479f51fc]
  40d119:	and    bl,ah
  40d11b:	inc    edx
  40d11c:	popf   
  40d11d:	xchg   esi,eax
  40d11e:	or     bh,BYTE PTR [ebp-0x66]
  40d121:	in     eax,dx
  40d122:	mov    edi,0xc2dc11e3
  40d127:	clc    
  40d128:	push   esp
  40d129:	mov    cl,BYTE PTR [ebp-0x52695d42]
  40d12f:	nop
  40d130:	sub    dl,BYTE PTR [ecx+eiz*1]
  40d133:	xlat   BYTE PTR ds:[ebx]
  40d134:	mov    esp,0x6127e03c
  40d139:	(bad)  
  40d13b:	test   eax,0x2f4c436b
  40d140:	inc    edi
  40d141:	rol    ch,cl
  40d143:	jecxz  0x40d18c
  40d145:	paddusw mm2,QWORD PTR [edi+0x6da7e3e5]
  40d14c:	push   0xffffffb5
  40d14e:	push   esp
  40d14f:	pop    ebp
  40d150:	enter  0x9e13,0x7f
  40d154:	fwait
  40d155:	ds leave 
  40d157:	stos   BYTE PTR es:[edi],al
  40d158:	cld    
  40d159:	hlt    
  40d15a:	pop    ebx
  40d15b:	je     0x40d186
  40d15d:	fcmovne st,st(3)
  40d15f:	popf   
  40d160:	das    
  40d161:	outs   dx,BYTE PTR ds:[esi]
  40d162:	les    esi,FWORD PTR [esi]
  40d164:	jmp    0x136ecb9b
  40d169:	fmul   st(1),st
  40d16b:	cli    
  40d16c:	sbb    bl,bh
  40d16e:	sbb    DWORD PTR [ebx+0x73000a8e],ebp
  40d174:	mov    ebp,0x647d5dd4
  40d179:	fmul   DWORD PTR [esi-0x5353b3f6]
  40d17f:	cmp    ebp,DWORD PTR [edi-0x4]
  40d182:	leave  
  40d183:	loop   0x40d185
  40d185:	gs xor al,0xab
  40d188:	push   edi
  40d189:	adc    BYTE PTR [ebp-0x58],bl
  40d18c:	out    dx,eax
  40d18d:	gs iret 
  40d18f:	out    dx,al
  40d190:	stos   DWORD PTR es:[edi],eax
  40d191:	mov    ds:0x757dfccd,eax
  40d196:	jno    0x40d18e
  40d198:	popf   
  40d199:	xchg   esi,eax
  40d19a:	retf   
  40d19b:	mov    edx,0x8543c61f
  40d1a0:	push   cs
  40d1a1:	sbb    eax,esp
  40d1a3:	int    0xfc
  40d1a5:	daa    
  40d1a6:	inc    edi
  40d1a7:	mov    eax,0xb9f2b918
  40d1ac:	loop   0x40d1b9
  40d1ae:	xor    BYTE PTR [ebp+0x29a9b5c6],0x7d
  40d1b5:	adc    dl,dl
  40d1b7:	cmp    edi,esi
  40d1b9:	dec    ebp
  40d1ba:	fs jae 0x40d220
  40d1bd:	mov    esi,0x2c7b3a1b
  40d1c2:	xor    esp,DWORD PTR [edi]
  40d1c4:	and    edx,edi
  40d1c6:	psubd  mm3,mm6
  40d1c9:	aam    0xfc
  40d1cb:	cwde   
  40d1cc:	loopne 0x40d1d1
  40d1ce:	mov    ebp,0xa8bd2686
  40d1d3:	and    BYTE PTR [ebx],dl
  40d1d5:	retf   
  40d1d6:	sub    esp,eax
  40d1d8:	fs mov dl,0xc8
  40d1db:	pop    es
  40d1dc:	pop    ebp
  40d1dd:	(bad)  
  40d1de:	cmp    al,0x86
  40d1e0:	push   esp
  40d1e1:	pop    eax
  40d1e2:	dec    ebp
  40d1e3:	push   0xb5f66f71
  40d1e8:	xchg   BYTE PTR [edi-0x2deef22a],ah
  40d1ee:	push   es
  40d1ef:	mov    BYTE PTR [ecx+0x3dc890ec],dh
  40d1f5:	pusha  
  40d1f6:	xor    DWORD PTR [eax],0x819b7d0c
  40d1fc:	sbb    al,0xec
  40d1fe:	sub    eax,0xc27122a9
  40d203:	dec    BYTE PTR [esi-0x64]
  40d206:	push   0x41f57906
  40d20b:	(bad)  
  40d20c:	xor    DWORD PTR gs:[edi+0x12],ebp
  40d210:	inc    ecx
  40d211:	inc    ebp
  40d212:	test   ebx,0xe066f438
  40d218:	rol    BYTE PTR [edi],cl
  40d21a:	in     eax,0xc6
  40d21c:	push   eax
  40d21d:	js     0x40d1b6
  40d21f:	fbld   TBYTE PTR ds:0xc170e134
  40d225:	int    0x8
  40d227:	or     esp,esi
  40d229:	mov    dl,0x26
  40d22b:	cs pushf 
  40d22d:	or     DWORD PTR [esi-0x70],edx
  40d230:	ret    
  40d231:	xchg   ebp,eax
  40d232:	jp     0x40d291
  40d234:	shl    BYTE PTR ds:0x7fa296ef,0x28
  40d23b:	cdq    
  40d23c:	std    
  40d23d:	cwde   
  40d23e:	pusha  
  40d23f:	cmp    DWORD PTR [ebx],0xffffff90
  40d242:	out    0xed,al
  40d244:	stc    
  40d245:	inc    ebp
  40d246:	aas    
  40d247:	sbb    ecx,edx
  40d249:	js     0x40d210
  40d24b:	jle    0x40d21d
  40d24d:	scas   al,BYTE PTR es:[edi]
  40d24e:	das    
  40d24f:	int    0x6c
  40d251:	mov    esi,0xfe087147
  40d256:	dec    esi
  40d257:	or     DWORD PTR [ebp-0x17],edx
  40d25a:	pop    edx
  40d25b:	outs   dx,BYTE PTR ds:[esi]
  40d25c:	jb     0x40d276
  40d25e:	pusha  
  40d25f:	jle    0x40d263
  40d261:	xchg   edx,eax
  40d262:	cdq    
  40d263:	sbb    edi,DWORD PTR [ecx+0x51]
  40d266:	jp     0x40d2e3
  40d268:	jb     0x40d265
  40d26a:	lods   eax,DWORD PTR ds:[esi]
  40d26b:	sbb    eax,DWORD PTR [ebx]
  40d26d:	(bad)  
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	out    dx,eax
  40d2fd:	stos   BYTE PTR es:[edi],al
  40d2fe:	and    dh,dl
  40d300:	xchg   ebp,eax
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	or     ebx,0x1d
  40d30a:	iret   
  40d30b:	std    
  40d30c:	icebp  
  40d30d:	js     0x40d342
  40d30f:	push   esi
  40d310:	jge    0x40d2cb
  40d312:	std    
  40d313:	add    DWORD PTR [ecx-0x7cf5ac08],0xa66f67b9
  40d31d:	into   
  40d31e:	fmul   st(0),st
  40d320:	sbb    BYTE PTR [edi-0x54],dl
  40d323:	add    edi,esi
  40d325:	ins    DWORD PTR es:[edi],dx
  40d326:	mov    bh,0x5c
  40d328:	pop    edx
  40d329:	cmp    ebx,ebx
  40d32b:	out    dx,al
  40d32c:	sub    al,0x87
  40d32e:	daa    
  40d32f:	imul   edi,DWORD PTR [eax+edx*4],0x3af69f1c
  40d336:	inc    edx
  40d337:	push   ebx
  40d338:	nop
  40d339:	pop    ebp
  40d33a:	push   ebp
  40d33b:	adc    esp,DWORD PTR [eax]
  40d33d:	sbb    ch,al
  40d33f:	dec    esi
  40d340:	mov    ds:0x66972d44,al
  40d345:	xor    BYTE PTR [edi],ah
  40d347:	ret    
  40d348:	mov    eax,ds:0x9b00d0e5
  40d34d:	hlt    
  40d34e:	aam    0x88
  40d350:	pop    ss
  40d351:	mov    eax,0xe5b92c52
  40d356:	lea    esi,[ecx-0x7]
  40d359:	test   ah,dl
  40d35b:	xlat   BYTE PTR ds:[ebx]
  40d35c:	and    al,0x6d
  40d35e:	getsec 
  40d360:	cmp    al,0x8a
  40d362:	pushf  
  40d363:	test   al,0xca
  40d365:	scas   al,BYTE PTR es:[edi]
  40d366:	push   0xa435a650
  40d36b:	sbb    al,0xf2
  40d36d:	std    
  40d36e:	into   
  40d36f:	sti    
  40d370:	xchg   esp,eax
  40d371:	adc    ah,al
  40d373:	or     BYTE PTR [ecx+eax*8+0x45],ah
  40d377:	mov    bh,0x39
  40d379:	aam    0x58
  40d37b:	or     DWORD PTR ds:0xe5a7593c,edx
  40d381:	adc    eax,ebx
  40d383:	and    BYTE PTR gs:0x97d9b806,dh
  40d38a:	xor    bh,dl
  40d38c:	mov    ch,0x48
  40d38e:	adc    esp,DWORD PTR ds:0x456af471
  40d394:	and    BYTE PTR [esi-0x57aeadb],0x2
  40d39b:	(bad)  
  40d39c:	adc    ebp,DWORD PTR [ebx]
  40d39e:	aam    0x4c
  40d3a0:	cmp    al,0x88
  40d3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a3:	push   ss
  40d3a4:	cmp    BYTE PTR [esi+eiz*1-0x2b45019],dh
  40d3ab:	outs   dx,BYTE PTR ds:[esi]
  40d3ac:	sub    eax,0xf3fe65b3
  40d3b1:	and    al,0x3
  40d3b3:	dec    edx
  40d3b4:	iret   
  40d3b5:	jg     0x40d342
  40d3b7:	mov    dh,0xff
  40d3b9:	adc    al,0x88
  40d3bb:	fisubr DWORD PTR [esi+eiz*2-0x2bf00641]
  40d3c2:	sub    DWORD PTR [esi+0x73],0x7b
  40d3c6:	fnstcw WORD PTR [ebx]
  40d3c8:	jmp    0x888f79f
  40d3cd:	or     eax,0x66c59b84
  40d3d2:	outs   dx,DWORD PTR ds:[esi]
  40d3d3:	jl     0x40d38c
  40d3d5:	mov    ecx,0x6cb6b249
  40d3da:	fs leave 
  40d3dc:	jmp    0xd3a2:0xd3f27a5c
  40d3e3:	push   eax
  40d3e4:	mov    cl,0x7e
  40d3e6:	ins    BYTE PTR es:[edi],dx
  40d3e7:	cs jno 0x40d441
  40d3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3eb:	(bad)  
  40d3ec:	std    
  40d3ed:	fbld   TBYTE PTR [ecx+0x57]
  40d3f0:	and    eax,DWORD PTR [esi+0x6ba49392]
  40d3f6:	cmp    BYTE PTR [ecx-0x2],ah
  40d3f9:	jno    0x40d3a4
  40d3fb:	bound  esi,QWORD PTR [ecx+ebx*8-0xd4592a8]
  40d402:	push   0xfffffff1
  40d404:	push   esp
  40d405:	mov    esp,0x1d4a64b7
  40d40a:	and    edx,DWORD PTR [eax+0x203d6da3]
  40d410:	xor    DWORD PTR [ebx],ebp
  40d412:	xor    al,0x3e
  40d414:	das    
  40d415:	xor    DWORD PTR [edi+eiz*4-0x32],esi
  40d419:	in     al,0x46
  40d41b:	cmp    DWORD PTR [ecx+0x63],edi
  40d41e:	xchg   ebp,eax
  40d41f:	jle    0x40d441
  40d421:	in     eax,dx
  40d422:	fstp   TBYTE PTR [esi-0x7f]
  40d425:	pop    ebp
  40d426:	pop    es
  40d427:	fwait
  40d428:	xchg   esp,eax
  40d429:	loopne 0x40d439
  40d42b:	cs push ss
  40d42d:	lock or eax,0x1cc550c8
  40d433:	icebp  
  40d434:	(bad)  
  40d435:	retf   0xc770
  40d438:	cmp    ebp,DWORD PTR [ecx+0x1d]
  40d43b:	mov    bh,0x5a
  40d43d:	mov    ch,0x8e
  40d43f:	ret    0xf1c6
  40d442:	mov    edx,DWORD PTR [ecx]
  40d444:	hlt    
  40d445:	shl    DWORD PTR [esi],1
  40d447:	pop    eax
  40d448:	xchg   esp,eax
  40d449:	xchg   ebp,eax
  40d44a:	cmp    BYTE PTR ss:[eax+0x57],al
  40d44e:	lods   eax,DWORD PTR fs:[esi]
  40d450:	test   eax,0x630d8ff9
  40d455:	mov    al,ds:0xb0d59073
  40d45a:	push   0xeb1b89fc
  40d45f:	pop    eax
  40d460:	inc    ebp
  40d461:	popa   
  40d462:	jg     0x40d4a1
  40d464:	hlt    
  40d465:	js     0x40d456
  40d467:	gs jge 0x40d411
  40d46a:	nop
  40d46b:	jno    0x40d489
  40d46d:	or     edx,DWORD PTR [ecx]
  40d46f:	lods   al,BYTE PTR ds:[esi]
  40d470:	pusha  
  40d471:	mov    ecx,0x7d55e73f
  40d476:	aaa    
  40d477:	add    esi,ecx
  40d479:	sub    ebp,eax
  40d47b:	sti    
  40d47c:	xor    DWORD PTR [ecx-0x1a],edx
  40d47f:	bound  esp,QWORD PTR [edi-0x3b9de691]
  40d485:	leave  
  40d486:	xchg   esi,eax
  40d487:	repz jb 0x40d4e6
  40d48a:	aaa    
  40d48b:	dec    esi
  40d48c:	mov    edx,eax
  40d48e:	iret   
  40d48f:	add    al,0xcc
  40d491:	fadd   st,st(2)
  40d493:	mov    esp,0xbaca0e45
  40d498:	popf   
  40d499:	scas   al,BYTE PTR es:[edi]
  40d49a:	dec    ebx
  40d49b:	fs push ebp
  40d49d:	call   0xfca67700
  40d4a2:	aad    0xaa
  40d4a4:	sti    
  40d4a5:	call   0xe2de:0xd4447fbe
  40d4ac:	retf   
  40d4ad:	mov    cl,0x8a
  40d4af:	sti    
  40d4b0:	into   
  40d4b1:	inc    esp
  40d4b2:	cli    
  40d4b3:	or     eax,0x28840332
  40d4b8:	ret    0x595c
  40d4bb:	mov    esp,0xb063d2fa
  40d4c0:	pop    ecx
  40d4c1:	iret   
  40d4c2:	dec    esp
  40d4c3:	or     eax,0x3e025efa
  40d4c8:	pushf  
  40d4c9:	dec    esp
  40d4ca:	push   cs
  40d4cb:	mov    dl,0x77
  40d4cd:	dec    ebp
  40d4ce:	push   0x712f8f8
  40d4d3:	pusha  
  40d4d4:	rep outs dx,DWORD PTR ds:[esi]
  40d4d6:	pop    ds
  40d4d7:	jecxz  0x40d502
  40d4d9:	je     0x40d54c
  40d4db:	mov    WORD PTR [eax-0x1],es
  40d4de:	cmp    BYTE PTR [ecx-0x12ca7ecc],ch
  40d4e4:	jo     0x40d560
  40d4e6:	and    eax,0x1b387e53
  40d4eb:	lea    ebx,[ebx-0x3da06f5f]
  40d4f1:	scas   al,BYTE PTR es:[edi]
  40d4f2:	add    eax,0x4153215d
  40d4f7:	stc    
  40d4f8:	test   BYTE PTR [ecx+0x49681a0a],0xb
  40d4ff:	pop    esi
  40d500:	xor    ch,ch
  40d502:	and    ebx,edx
  40d504:	cmp    edi,DWORD PTR [edi+0x19a4ee4c]
  40d50a:	sub    ah,bl
  40d50c:	popa   
  40d50d:	jae    0x40d4db
  40d50f:	in     eax,dx
  40d510:	sbb    eax,0xf12dfa7d
  40d515:	(bad)  
  40d517:	sub    cl,bl
  40d519:	scas   eax,DWORD PTR es:[edi]
  40d51a:	pusha  
  40d51b:	cld    
  40d51c:	mov    ebx,0x2f6ee574
  40d521:	imul   ebx,DWORD PTR [ecx-0x3f],0xc
  40d525:	stos   DWORD PTR es:[edi],eax
  40d526:	sub    BYTE PTR [edi-0x7dcb4f75],ch
  40d52c:	mov    ds:0xc6d798a7,eax
  40d531:	sbb    eax,0x46bb6284
  40d536:	add    BYTE PTR [esi+0x699a5aa8],0xef
  40d53d:	jne    0x40d54a
  40d53f:	push   0x3dec0054
  40d544:	out    0xd,eax
  40d546:	pop    eax
  40d547:	clc    
  40d548:	shl    BYTE PTR [eax],cl
  40d54a:	cdq    
  40d54b:	sub    BYTE PTR [ebx-0x5cd9fd31],ah
  40d551:	pop    es
  40d552:	add    DWORD PTR [esi-0x470c3c8b],ecx
  40d558:	ror    BYTE PTR [eax+0x6a],cl
  40d55b:	mov    edx,0xc6d61b73
  40d560:	fdivr  st,st(6)
  40d562:	jo     0x40d52e
  40d564:	retf   
  40d565:	cmc    
  40d566:	ds sbb bl,cl
  40d569:	or     DWORD PTR [eax+0xe],edx
  40d56c:	push   edi
  40d56d:	loop   0x40d5cd
  40d56f:	imul   eax,esi,0x193bdfbe
  40d575:	add    DWORD PTR [ecx],esi
  40d577:	arpl   WORD PTR [edx],bp
  40d579:	outs   dx,DWORD PTR ds:[esi]
  40d57a:	or     DWORD PTR [ecx+edx*8],esi
  40d57d:	add    eax,0x70aa871c
  40d582:	dec    edi
  40d583:	cmc    
  40d584:	adc    eax,0xba2aa7a6
  40d589:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d58b:	cmp    eax,0x3691f373
  40d590:	leave  
  40d591:	push   esp
  40d592:	mov    dl,0x47
  40d594:	pop    edi
  40d595:	into   
  40d596:	xchg   edi,eax
  40d597:	sar    DWORD PTR [ecx-0x1635720b],1
  40d59d:	mov    edi,DWORD PTR [esi]
  40d59f:	xor    eax,0x4d5f6ad0
  40d5a4:	scas   eax,DWORD PTR es:[edi]
  40d5a5:	cmp    bh,cl
  40d5a7:	adc    bh,BYTE PTR [eax+eax*4]
  40d5aa:	inc    eax
  40d5ab:	sbb    BYTE PTR ds:0x404328ac,ah
  40d5b1:	mov    edx,0x747e20e
  40d5b6:	push   eax
  40d5b7:	(bad)  [edi-0x7]
  40d5ba:	xor    dh,BYTE PTR [edi-0x26]
  40d5bd:	ret    
  40d5be:	mov    eax,ds:0x2ea80128
  40d5c3:	setnp  BYTE PTR [ebp-0x2619e3fd]
  40d5ca:	in     eax,0x50
  40d5cc:	jns    0x40d5e4
  40d5ce:	jp     0x40d592
  40d5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d1:	je     0x40d5ef
  40d5d3:	cmp    DWORD PTR ds:0x36468ddc,edx
  40d5d9:	stos   DWORD PTR es:[edi],eax
  40d5da:	push   edx
  40d5db:	xor    esi,ebp
  40d5dd:	pop    esp
  40d5de:	mov    al,0x1b
  40d5e0:	mov    DWORD PTR [ebx-0x5d],esi
  40d5e3:	daa    
  40d5e4:	lods   al,BYTE PTR ds:[esi]
  40d5e5:	inc    eax
  40d5e6:	mov    dl,0x4b
  40d5e8:	dec    ebp
  40d5e9:	cmp    al,BYTE PTR [edi+0xe9e5796]
  40d5ef:	mov    esp,0xd2ada9bd
  40d5f4:	inc    ebp
  40d5f5:	fldenv [eax]
  40d5f7:	stos   DWORD PTR es:[edi],eax
  40d5f8:	cmp    dl,BYTE PTR [ecx-0x67]
  40d5fb:	leave  
  40d5fc:	dec    edx
  40d5fd:	dec    ebp
  40d5fe:	data16 je 0x40d5e0
  40d601:	scas   eax,DWORD PTR es:[edi]
  40d602:	dec    esi
  40d603:	pop    ebp
  40d604:	popa   
  40d605:	fwait
  40d606:	push   esp
  40d608:	loope  0x40d60f
  40d60a:	sub    eax,0x90bccc78
  40d60f:	lods   al,BYTE PTR ds:[esi]
  40d610:	test   al,0x5e
  40d612:	pand   mm3,QWORD PTR [esi+0x6dce2b8a]
  40d619:	ret    0x7368
  40d61c:	jnp    0x40d664
  40d61e:	and    al,0xf
  40d620:	je     0x40d5d8
  40d622:	add    al,0xf8
  40d624:	mov    cl,0x74
  40d626:	(bad)  
  40d627:	(bad)  
  40d628:	in     eax,dx
  40d629:	test   DWORD PTR [edx],edx
  40d62b:	inc    esp
  40d62c:	test   edi,esp
  40d62e:	fs xchg esp,eax
  40d630:	ins    BYTE PTR es:[edi],dx
  40d631:	xchg   ecx,eax
  40d632:	ins    DWORD PTR es:[edi],dx
  40d633:	std    
  40d634:	push   0xa8ce08bf
  40d639:	pop    ebp
  40d63a:	sub    eax,DWORD PTR [ebp+0x40]
  40d63d:	in     al,dx
  40d63e:	mov    WORD PTR [ecx],ss
  40d640:	xchg   esp,eax
  40d641:	xchg   edx,eax
  40d642:	xchg   ecx,eax
  40d643:	fs pop edi
  40d645:	arpl   dx,bp
  40d647:	loope  0x40d63e
  40d649:	scas   al,BYTE PTR es:[edi]
  40d64a:	xchg   edx,eax
  40d64b:	mov    ?,WORD PTR [edx-0x80]
  40d64e:	pop    ecx
  40d64f:	(bad)  
  40d650:	xchg   ebx,eax
  40d651:	mov    cl,0xb8
  40d653:	out    0xa6,al
  40d655:	push   ecx
  40d656:	cmp    DWORD PTR [edx-0xee7cecd],edi
  40d65c:	dec    esi
  40d65d:	jle    0x40d67d
  40d65f:	or     ecx,DWORD PTR [eax+0x49]
  40d662:	sub    BYTE PTR [esi-0x2145f762],bl
  40d668:	xchg   ebx,eax
  40d669:	ret    
  40d66a:	cmp    edx,DWORD PTR [edi+0x7b]
  40d66d:	(bad)  
  40d66e:	cmp    eax,DWORD PTR [ebx+0x79]
  40d671:	pushf  
  40d672:	test   eax,0xd48ef12c
  40d677:	xchg   ecx,eax
  40d678:	into   
  40d679:	retf   
  40d67a:	fs aam 0x53
  40d67d:	rcl    BYTE PTR [eax],0xc
  40d680:	or     al,0x4f
  40d682:	sahf   
  40d683:	scas   eax,DWORD PTR es:[edi]
  40d684:	aas    
  40d685:	push   ebp
  40d686:	out    dx,al
  40d687:	jl     0x40d6df
  40d689:	retf   0xeec8
  40d68c:	movnti DWORD PTR [edi+0x12],edx
  40d690:	call   0x79a0:0xe79b200
  40d697:	sbb    eax,0x82a3e096
  40d69c:	in     eax,dx
  40d69d:	fidivr DWORD PTR [edx-0x2b]
  40d6a0:	jo     0x40d71e
  40d6a2:	fwait
  40d6a3:	popa   
  40d6a4:	ret    
  40d6a5:	inc    esp
  40d6a6:	xchg   edx,eax
  40d6a7:	test   DWORD PTR [eax+0x67],ebx
  40d6aa:	(bad)  
  40d6ab:	or     BYTE PTR [eax],bh
  40d6ad:	dec    esp
  40d6ae:	clc    
  40d6af:	fwait
  40d6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b1:	or     al,0x30
  40d6b3:	mov    ebx,0x7a43d4dd
  40d6b8:	adc    BYTE PTR [ebp-0x24],0xf6
  40d6bc:	adc    DWORD PTR [ecx],ebx
  40d6be:	and    dh,al
  40d6c0:	jl     0x40d6c0
  40d6c2:	aam    0x1b
  40d6c4:	pop    ecx
  40d6c5:	shl    DWORD PTR [eax],1
  40d6c7:	call   0x8ab3b3ac
  40d6cc:	std    
  40d6cd:	mov    eax,0xd60d5e36
  40d6d2:	test   eax,0x8d0f6c9f
  40d6d7:	pop    ecx
  40d6d8:	fcmovnbe st,st(0)
  40d6da:	sub    eax,0xb4565ae5
  40d6df:	cmp    al,0x8b
  40d6e1:	dec    ebx
  40d6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e3:	jg     0x40d6b1
  40d6e5:	test   DWORD PTR cs:[esi-0x10e5da51],0xa58a91bb
  40d6f0:	test   eax,0x5d2b0a52
  40d6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f6:	or     BYTE PTR [eax+0x10af940a],al
  40d6fc:	ss mov eax,0x533ece59
  40d702:	adc    al,0xa3
  40d704:	push   ss
  40d705:	inc    eax
  40d706:	inc    esi
  40d707:	scas   eax,DWORD PTR es:[edi]
  40d708:	out    0x89,eax
  40d70a:	loop   0x40d76b
  40d70c:	adc    al,0xf0
  40d70e:	pushf  
  40d70f:	pushf  
  40d710:	in     eax,dx
  40d711:	dec    ecx
  40d712:	std    
  40d713:	loop   0x40d767
  40d715:	jmp    0x40d753
  40d717:	xor    DWORD PTR [eax+edi*1+0x7075d4e3],0x9cfea7cf
  40d722:	aam    0x94
  40d724:	pop    esi
  40d725:	(bad)  
  40d726:	push   0x2d
  40d728:	lahf   
  40d729:	nop
  40d72a:	outs   dx,BYTE PTR ds:[esi]
  40d72b:	cli    
  40d72c:	or     bl,BYTE PTR [esi]
  40d72e:	lahf   
  40d72f:	pop    ebx
  40d730:	jg     0x40d6ee
  40d732:	pop    esi
  40d733:	jns    0x40d6bb
  40d735:	xor    ecx,DWORD PTR [edx+0x12d659aa]
  40d73b:	mov    cl,0xdb
  40d73d:	adc    eax,0x1205f8eb
  40d742:	ror    BYTE PTR es:[eax-0x6dcf91d1],0x62
  40d74a:	fdiv   DWORD PTR [eax]
  40d74c:	and    BYTE PTR [ebx],dh
  40d74e:	inc    edx
  40d74f:	cmp    eax,0x22436fec
  40d754:	inc    edx
  40d755:	inc    edi
  40d756:	mov    DWORD PTR [edi-0x41],esi
  40d759:	xchg   edi,eax
  40d75a:	or     BYTE PTR [eax+0x2d8d0284],0xdd
  40d761:	(bad)  
  40d762:	shl    edi,1
  40d764:	shl    BYTE PTR [ecx-0x44],0xc8
  40d768:	push   0xd520fd34
  40d76d:	in     eax,dx
  40d76e:	xchg   esp,eax
  40d76f:	adc    bl,BYTE PTR [esi-0x5eda50a7]
  40d775:	mov    ds:0xb1f155fc,eax
  40d77a:	pop    es
  40d77b:	dec    ebx
  40d77c:	jb     0x40d788
  40d77e:	dec    ebx
  40d77f:	out    dx,eax
  40d780:	xchg   esi,eax
  40d781:	outs   dx,BYTE PTR ds:[esi]
  40d782:	enter  0xc773,0x36
  40d786:	pop    esi
  40d787:	aaa    
  40d788:	lods   eax,DWORD PTR ds:[esi]
  40d789:	lods   eax,DWORD PTR ds:[esi]
  40d78a:	add    DWORD PTR [ebx+0x6],eax
  40d78d:	inc    ecx
  40d78e:	xor    eax,0x83e2e9c3
  40d793:	jo     0x40d7dc
  40d795:	jb     0x40d727
  40d797:	shl    BYTE PTR [ecx],cl
  40d799:	adc    ch,BYTE PTR [ebx-0x211d80da]
  40d79f:	in     al,dx
  40d7a0:	lods   al,BYTE PTR ds:[esi]
  40d7a1:	call   0xd1370e74
  40d7a6:	jmp    0x5dc7:0x738b2b75
  40d7ad:	loopne 0x40d77b
  40d7af:	test   al,cl
  40d7b1:	dec    ecx
  40d7b2:	push   es
  40d7b3:	jecxz  0x40d790
  40d7b5:	ror    edi,cl
  40d7b7:	in     eax,0x2a
  40d7b9:	(bad)  
  40d7ba:	xchg   BYTE PTR [ebx+0x54],al
  40d7bd:	lahf   
  40d7be:	mov    BYTE PTR [eax-0x72b29a0c],al
  40d7c4:	mov    eax,0x3370cfca
  40d7c9:	(bad)  
  40d7ca:	aad    0xfb
  40d7cc:	sub    DWORD PTR [ebx-0x187726f4],ebx
  40d7d2:	imul   eax,DWORD PTR [eax+0x63],0xfe461792
  40d7d9:	or     esi,DWORD PTR cs:[esi+0x11]
  40d7dd:	push   edi
  40d7de:	jns    0x40d803
  40d7e0:	sbb    BYTE PTR [ebx-0x6b7922be],al
  40d7e6:	jmp    0x2b73f579
  40d7eb:	cmp    DWORD PTR [eax+0x6ecee0e6],edx
  40d7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7f2:	add    DWORD PTR [esi],esi
  40d7f4:	stc    
  40d7f5:	js     0x40d7df
  40d7f7:	or     al,0x3f
  40d7f9:	repz and dh,BYTE PTR [esi+edi*2]
  40d7fd:	or     eax,0x5626b8ee
  40d802:	mov    dh,0x6f
  40d804:	lahf   
  40d805:	inc    ebx
  40d806:	aaa    
  40d807:	xchg   edi,eax
  40d808:	pop    ecx
  40d809:	int    0x3c
  40d80b:	sbb    BYTE PTR [ecx+0x4a],bh
  40d80e:	cmp    esp,DWORD PTR [ecx+0x4]
  40d811:	mov    ecx,0x2b5876b5
  40d816:	sub    DWORD PTR [ebx-0x4d],esp
  40d819:	xchg   esp,eax
  40d81a:	nop
  40d81b:	out    0xc,eax
  40d81d:	not    al
  40d81f:	mov    al,0x14
  40d821:	aad    0xe1
  40d823:	mov    bl,0xcd
  40d825:	cmp    al,0x6
  40d827:	pop    ebx
  40d828:	adc    BYTE PTR [ecx-0x2b],0x65
  40d82c:	sti    
  40d82d:	adc    DWORD PTR [ebx-0x67ccbaa6],ebp
  40d833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d834:	or     dh,ch
  40d836:	sbb    eax,0x519f03df
  40d83b:	adc    esp,ecx
  40d83d:	and    eax,0x17298688
  40d842:	pop    edi
  40d843:	lods   eax,DWORD PTR ds:[esi]
  40d844:	mov    eax,0x5353c3c7
  40d849:	shl    dl,cl
  40d84b:	push   0x47
  40d84d:	fmul   st,st(1)
  40d84f:	cld    
  40d850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d851:	pop    ebp
  40d852:	rol    esp,1
  40d854:	sbb    al,BYTE PTR [edi-0x19]
  40d857:	xor    esp,edx
  40d859:	dec    ecx
  40d85a:	jle    0x40d891
  40d85c:	fstp   DWORD PTR [ecx+0x13]
  40d85f:	xchg   esi,eax
  40d860:	int    0x85
  40d862:	ja     0x40d829
  40d864:	aad    0x88
  40d866:	jge    0x40d8d7
  40d868:	ss sub bh,ch
  40d86b:	scas   al,BYTE PTR es:[edi]
  40d86c:	call   0xd16c41a1
  40d871:	int3   
  40d872:	mov    eax,ds:0xe525a8d
  40d877:	xchg   edi,eax
  40d878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d879:	add    al,0x1a
  40d87b:	add    ebp,esp
  40d87d:	ficomp DWORD PTR [ebx-0x17]
  40d880:	out    0xb3,eax
  40d882:	pop    ecx
  40d883:	hlt    
  40d884:	push   eax
  40d885:	mov    esi,0x63fdfeee
  40d88a:	sub    eax,esi
  40d88c:	mov    esi,0x679c7408
  40d891:	sub    DWORD PTR [ebx-0x35812ec0],esp
  40d897:	repz sub DWORD PTR [esi],0xffffffd8
  40d89b:	fnstenv [edx]
  40d89d:	ret    0x4025
  40d8a0:	push   ss
  40d8a1:	leave  
  40d8a2:	fild   WORD PTR [ebp-0x11]
  40d8a5:	retf   
  40d8a6:	sbb    DWORD PTR ds:0x796d2599,esp
  40d8ac:	pop    ecx
  40d8ad:	mov    al,0xc7
  40d8af:	xor    DWORD PTR [edi-0x1e],0xffffffd3
  40d8b3:	xor    DWORD PTR [ebp+ebx*1+0xeb211a1],eax
  40d8ba:	jecxz  0x40d934
  40d8bc:	mov    eax,ds:0x3583fd23
  40d8c1:	or     esp,ebx
  40d8c3:	ss pop ecx
  40d8c5:	(bad)  
  40d8c6:	xor    al,0x78
  40d8c8:	xchg   BYTE PTR [ecx],ah
  40d8ca:	ret    0x680
  40d8cd:	jne    0x40d8ce
  40d8cf:	jmp    0x40d896
  40d8d1:	jne    0x40d887
  40d8d3:	xchg   edx,eax
  40d8d4:	pop    esp
  40d8d5:	mov    ds:0x20beae47,al
  40d8da:	imul   edx,DWORD PTR [edx],0xfc0a99b7
  40d8e0:	sysexit 
  40d8e2:	mov    al,ds:0x4c398edd
  40d8e7:	sbb    edi,edx
  40d8e9:	loope  0x40d8a7
  40d8eb:	mul    DWORD PTR [ecx-0x68b959c9]
  40d8f1:	enter  0x232b,0x7d
  40d8f5:	xlat   BYTE PTR ds:[ebx]
  40d8f6:	gs xor eax,0xdd223f67
  40d8fc:	call   FWORD PTR [esi+edx*8-0x6be6ed21]
  40d903:	iret   
  40d904:	retf   0x5fd7
  40d907:	jb     0x40d8dd
  40d909:	clc    
  40d90a:	mov    DWORD PTR [ecx-0x10],edx
  40d90d:	or     eax,0x41ebd074
  40d912:	mov    eax,0xdcb7daf7
  40d917:	retf   
  40d918:	cmp    ecx,DWORD PTR [ebx+0x31b283f1]
  40d91e:	jp     0x40d965
  40d920:	stos   DWORD PTR es:[edi],eax
  40d921:	jge    0x40d8e1
  40d923:	or     esi,DWORD PTR [edx-0x49a3ab06]
  40d929:	adc    dl,BYTE PTR [edi]
  40d92b:	pusha  
  40d92c:	sub    DWORD PTR [edi+0x6af7302e],esp
  40d932:	ds pusha 
  40d934:	int    0x48
  40d936:	das    
  40d937:	(bad)
  40d93a:	cmp    ecx,edi
  40d93c:	test   eax,0x58ae05a4
  40d941:	shr    DWORD PTR [eax],cl
  40d943:	call   0x2cb:0x1a7ed3bd
  40d94a:	jg     0x40d8e9
  40d94c:	pop    es
  40d94d:	mov    ebx,0x13310a90
  40d952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d953:	repnz fld QWORD PTR [esi-0x57bfae55]
  40d95a:	push   0xffffffd1
  40d95c:	mov    ah,0x58
  40d95e:	xchg   edi,eax
  40d95f:	or     eax,0xb4ac807b
  40d964:	jle    0x40d951
  40d966:	popf   
  40d967:	sbb    al,dh
  40d969:	sbb    edx,DWORD PTR [edi-0x1e26fc4e]
  40d96f:	fist   WORD PTR [esi]
  40d971:	jge    0x40d904
  40d973:	mov    cl,0xa0
  40d975:	mov    esp,esp
  40d977:	fild   QWORD PTR [esi]
  40d979:	not    BYTE PTR [edx+eiz*4-0x12]
  40d97d:	lods   eax,DWORD PTR ds:[esi]
  40d97e:	ret    0xad24
  40d981:	cwde   
  40d982:	mov    bh,0x51
  40d984:	cmp    eax,0x185c30ad
  40d989:	xchg   DWORD PTR [edi-0xd05e5],edx
  40d98f:	outs   dx,DWORD PTR ds:[esi]
  40d990:	jne    0x40d977
  40d992:	cwde   
  40d993:	xchg   esp,eax
  40d994:	add    BYTE PTR [edx],ch
  40d996:	mov    ecx,0x20ebfc24
  40d99b:	cmp    al,0x3e
  40d99d:	add    BYTE PTR [esi-0x7fa1f44],ch
  40d9a3:	gs stos DWORD PTR es:[edi],eax
  40d9a5:	aam    0xfa
  40d9a7:	out    dx,eax
  40d9a8:	or     al,0xcf
  40d9aa:	jmp    0x99e9:0x19064abe
  40d9b1:	fdivrp st(7),st
  40d9b3:	jge    0x40d971
  40d9b5:	add    cl,bh
  40d9b7:	iret   
  40d9b8:	dec    ebp
  40d9b9:	or     al,BYTE PTR [eax-0x1]
  40d9bc:	std    
  40d9bd:	(bad)  
  40d9be:	sub    DWORD PTR [ebp+0x1],edx
  40d9c1:	pop    ss
  40d9c2:	xchg   edi,eax
  40d9c3:	adc    DWORD PTR [edi+0x3d],ebx
  40d9c6:	push   edi
  40d9c7:	gs dec edx
  40d9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ca:	mov    WORD PTR [ebx+0x40],fs
  40d9cd:	fbld   TBYTE PTR [ecx+0x768ca961]
  40d9d3:	pusha  
  40d9d4:	bnd jmp 0x40da3b
  40d9d7:	setg   BYTE PTR [ecx+0x5cf101d7]
  40d9de:	jp     0x40d98e
  40d9e0:	out    0xa0,al
  40d9e2:	mov    dh,0x40
  40d9e4:	fsubp  st(5),st
  40d9e6:	int3   
  40d9e7:	fdiv   DWORD PTR [ebx+eiz*8-0x57]
  40d9eb:	mov    bl,0x3
  40d9ed:	mov    esi,0x3d9e7057
  40d9f2:	dec    eax
  40d9f3:	adc    DWORD PTR [edx+edi*8+0x7b],0x9b0d05a
  40d9fb:	sbb    BYTE PTR [ecx+0x59],ch
  40d9fe:	pop    ebp
  40d9ff:	add    eax,0xbc05d114
  40da04:	fisub  WORD PTR [eax-0x1abcfd9e]
  40da0a:	and    eax,0xef2dea3f
  40da0f:	inc    edx
  40da10:	aam    0xba
  40da12:	mov    gs,WORD PTR [eax]
  40da14:	(bad)  
  40da15:	iret   
  40da16:	xchg   esp,eax
  40da17:	fnstenv ds:0x961a9ab9
  40da1d:	lahf   
  40da1e:	mov    ebp,0x1829bbc6
  40da23:	in     eax,dx
  40da24:	mov    DWORD PTR [edi+0x71bb6c51],esp
  40da2a:	push   0xffffffa2
  40da2c:	jle    0x40d9db
  40da2e:	(bad)  
  40da2f:	xchg   esp,eax
  40da30:	(bad)  
  40da31:	popf   
  40da32:	xor    al,0x5c
  40da34:	pop    esi
  40da35:	mov    bx,0xd8ed
  40da39:	sbb    al,0x8b
  40da3b:	xchg   ebx,eax
  40da3c:	xlat   BYTE PTR ds:[bx]
  40da3e:	les    ebp,FWORD PTR [ecx-0x27]
  40da41:	inc    edx
  40da42:	test   al,ah
  40da44:	inc    ebp
  40da45:	ins    BYTE PTR es:[edi],dx
  40da46:	push   cs
  40da47:	pop    esi
  40da48:	ins    DWORD PTR es:[edi],dx
  40da49:	mov    ds,WORD PTR [ebx-0x63]
  40da4c:	adc    BYTE PTR [eax],ch
  40da4e:	inc    esp
  40da4f:	and    DWORD PTR [eax+0x5],edi
  40da52:	mov    ebp,0x9871ed3e
  40da57:	sub    DWORD PTR ds:0xa2d1172e,ecx
  40da5d:	iret   
  40da5e:	js     0x40da8c
  40da60:	cld    
  40da61:	addr16 popa 
  40da63:	xchg   ecx,eax
  40da64:	das    
  40da65:	xchg   esp,eax
  40da66:	(bad)  
  40da67:	stos   DWORD PTR es:[edi],eax
  40da68:	add    ebx,DWORD PTR [ebx+0x54e5fa82]
  40da6e:	arpl   WORD PTR [edi+0x5a],bp
  40da71:	shl    bl,cl
  40da73:	outs   dx,BYTE PTR ds:[esi]
  40da74:	stos   BYTE PTR es:[edi],al
  40da75:	dec    edx
  40da76:	ret    
  40da77:	ds dec esp
  40da79:	sub    eax,0xffd3761f
  40da7e:	mov    ch,0x39
  40da80:	sub    eax,DWORD PTR [edi]
  40da82:	sti    
  40da83:	add    dh,BYTE PTR [eax]
  40da85:	sbb    eax,0x115b94bc
  40da8a:	mov    ds,WORD PTR [ebx+0x26d8e753]
  40da90:	dec    ebp
  40da91:	cs in  al,dx
  40da93:	loop   0x40da86
  40da95:	es mov bh,0xe9
  40da98:	sbb    al,0x72
  40da9a:	jbe    0x40dafd
  40da9c:	sbb    cl,BYTE PTR [ebx+0x3c]
  40da9f:	popa   
  40daa0:	je     0x40da45
  40daa2:	xchg   DWORD PTR [ebx+0x6012fd8a],edx
  40daa8:	jmp    0x2e888f64
  40daad:	fbstp  TBYTE PTR [eax+0x6]
  40dab0:	cmp    al,0xa5
  40dab2:	dec    edx
  40dab3:	int3   
  40dab4:	cmp    DWORD PTR [ebp+0x5b8ad0bf],ebx
  40daba:	jbe    0x40db1b
  40dabc:	pop    es
  40dabd:	clc    
  40dabe:	push   ss
  40dabf:	jg     0x40db40
  40dac1:	dec    ebp
  40dac2:	sahf   
  40dac3:	xchg   ebp,eax
  40dac4:	cld    
  40dac5:	adc    dl,BYTE PTR [ecx-0x3fc32bd3]
  40dacb:	push   ebx
  40dacc:	loopne 0x40db09
  40dace:	sbb    eax,0x1ccff8e4
  40dad3:	bound  ecx,QWORD PTR [eax+0x2201f761]
  40dad9:	mov    edx,0xbb0fb71
  40dade:	xchg   esp,eax
  40dadf:	xchg   dl,bh
  40dae1:	inc    esi
  40dae2:	in     eax,dx
  40dae3:	xlat   BYTE PTR ds:[ebx]
  40dae4:	(bad)  
  40dae5:	repnz outs dx,DWORD PTR ds:[esi]
  40dae7:	(bad)  
  40dae8:	and    al,0x4c
  40daea:	mov    edx,0xdc7169d1
  40daef:	gs fwait
  40daf1:	ret    0xa15
  40daf4:	rcr    BYTE PTR [eax+0x6c7bb835],cl
  40dafa:	add    ebx,DWORD PTR [ecx-0x2efd7243]
  40db00:	ficom  WORD PTR [eax+0x3]
  40db03:	(bad)  
  40db04:	cld    
  40db05:	out    0x4f,eax
  40db07:	cmp    eax,0x999806c3
  40db0c:	ror    DWORD PTR [esi+0x7839b420],0x16
  40db13:	mov    ds:0xf36fac6e,eax
  40db18:	jo     0x40db62
  40db1a:	adc    DWORD PTR ds:0x183d0e64,ecx
  40db20:	jb     0x40db72
  40db22:	bound  ebp,QWORD PTR [edi]
  40db24:	leave  
  40db25:	xchg   DWORD PTR [edx+edx*4],ebp
  40db28:	(bad)  
  40db2a:	mov    cl,0xc5
  40db2c:	mov    ecx,0xf3ca6eb8
  40db31:	scas   al,BYTE PTR es:[edi]
  40db32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db33:	cmp    ah,BYTE PTR [esi-0x24]
  40db36:	push   0x75
  40db38:	pop    esi
  40db39:	aad    0x27
  40db3b:	push   ss
  40db3c:	icebp  
  40db3d:	mov    esp,0x633626bd
  40db42:	call   0x4f0df83d
  40db47:	scas   eax,DWORD PTR es:[edi]
  40db48:	mov    BYTE PTR [ecx-0x32],al
  40db4b:	jne    0x40dafe
  40db4d:	shl    DWORD PTR [edx+0x2],1
  40db50:	mov    ds:0xb45cf9dc,eax
  40db55:	adc    eax,0x2c63088d
  40db5a:	cmp    DWORD PTR [ebx+0x73],esp
  40db5d:	dec    eax
  40db5e:	jecxz  0x40db12
  40db60:	dec    edi
  40db61:	rol    al,1
  40db63:	test   BYTE PTR [edi-0x6a],al
  40db66:	es dec eax
  40db68:	sbb    eax,0x5e9dca52
  40db6d:	add    DWORD PTR [ecx+0x51],ebp
  40db70:	and    eax,0xd47a3ff6
  40db75:	cli    
  40db76:	pop    ebx
  40db77:	fld    QWORD PTR [esi]
  40db79:	je     0x40db9e
  40db7b:	xor    BYTE PTR [edi-0x39],al
  40db7e:	cmp    esp,DWORD PTR [edx+0x45]
  40db81:	xchg   ecx,eax
  40db82:	jae    0x40db45
  40db84:	mov    bh,0xc6
  40db86:	imul   edi,DWORD PTR [eax+0x59f26889],0xffffff9a
  40db8d:	xor    eax,esp
  40db8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db90:	(bad)  
  40db91:	ss out 0xe6,al
  40db94:	xchg   edi,eax
  40db95:	mov    WORD PTR [edx],ss
  40db97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db98:	mov    eax,ds:0x35327149
  40db9d:	sub    eax,0xb39d3070
  40dba2:	and    ebp,esi
  40dba4:	pavgb  mm7,mm1
  40dba7:	jl     0x40dbf0
  40dba9:	dec    edi
  40dbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbab:	pop    ebp
  40dbac:	rol    BYTE PTR [esp+ecx*1+0x29],1
  40dbb0:	lds    edx,FWORD PTR [eax]
  40dbb2:	and    al,0x10
  40dbb4:	sub    BYTE PTR [edi-0x17],ah
  40dbb7:	sub    eax,0xfc6f1826
  40dbbc:	scas   eax,DWORD PTR es:[edi]
  40dbbd:	pop    edx
  40dbbe:	add    dh,BYTE PTR [esi]
  40dbc0:	jo     0x35855002
  40dbc6:	push   ss
  40dbc7:	mov    ds:0x2cf4c635,al
  40dbcc:	mov    ch,BYTE PTR [esi+0x21ed4b6f]
  40dbd2:	or     BYTE PTR [esi+0x40fe9096],cl
  40dbd8:	stc    
  40dbd9:	sahf   
  40dbda:	pop    eax
  40dbdb:	inc    ebp
  40dbdc:	mov    ecx,db7
  40dbdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe0:	dec    ebx
  40dbe1:	xlat   BYTE PTR ds:[ebx]
  40dbe2:	sub    eax,DWORD PTR [esi+0x5]
  40dbe5:	push   ebx
  40dbe6:	repz inc edi
  40dbe8:	xor    ah,BYTE PTR [ebp+0x31]
  40dbeb:	adc    al,0x4c
  40dbed:	dec    BYTE PTR [ebx]
  40dbef:	add    DWORD PTR [ebp+0x2ded9fdd],esp
  40dbf5:	xlat   BYTE PTR ds:[ebx]
  40dbf6:	ror    BYTE PTR [edx+0x2b],1
  40dbf9:	dec    edx
  40dbfa:	mov    cl,0x41
  40dbfc:	repz add ebp,DWORD PTR [edi+0x615ef90]
  40dc03:	inc    edi
  40dc04:	and    DWORD PTR [eax+ebp*1],ebx
  40dc07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc08:	pop    ss
  40dc09:	lds    ecx,FWORD PTR [ebp+0x1c]
  40dc0c:	sbb    eax,esp
  40dc0e:	repnz stc 
  40dc10:	mov    ecx,0x87c5147a
  40dc15:	fist   DWORD PTR [ebx]
  40dc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc18:	xchg   ebp,eax
  40dc19:	out    dx,eax
  40dc1a:	pop    esp
  40dc1b:	loope  0x40dbbb
  40dc1d:	fwait
  40dc1e:	popa   
  40dc1f:	pop    eax
  40dc20:	test   al,0x4f
  40dc22:	cli    
  40dc23:	mov    dl,0x4e
  40dc25:	mov    eax,0x8128eb1d
  40dc2a:	adc    eax,0x6ad805b0
  40dc2f:	mov    al,al
  40dc31:	cli    
  40dc32:	loopne 0x40dbb6
  40dc34:	mov    dh,BYTE PTR [edx+0x2d1b0d3c]
  40dc3a:	lods   al,BYTE PTR ds:[esi]
  40dc3b:	pop    ebp
  40dc3c:	ret    0xc765
  40dc3f:	jo     0x40dbcf
  40dc41:	lds    esp,FWORD PTR ds:0x5e27a8fb
  40dc47:	shr    BYTE PTR [ebx+0x58],cl
  40dc4a:	dec    ecx
  40dc4b:	fiadd  DWORD PTR [edx]
  40dc4d:	repz sbb al,0xe2
  40dc50:	push   ebp
  40dc51:	test   BYTE PTR [ebx+0x55],cl
  40dc54:	jb     0x40dc86
  40dc56:	(bad)  
  40dc57:	ror    BYTE PTR [edx+0x42],cl
  40dc5a:	xchg   BYTE PTR [ecx+ecx*4],bl
  40dc5d:	cmp    al,0x4
  40dc5f:	sbb    al,0xee
  40dc61:	inc    ebx
  40dc62:	jne    0x40dcd5
  40dc64:	sbb    al,0x8d
  40dc66:	xor    dh,al
  40dc68:	call   0xb11887d6
  40dc6d:	add    bl,BYTE PTR [edx+0x1e10175b]
  40dc73:	adc    DWORD PTR [ebp+0x60],0x39
  40dc77:	fadd   QWORD PTR [eax]
  40dc79:	xchg   DWORD PTR [ecx-0x4366963],edi
  40dc7f:	(bad)  
  40dc80:	icebp  
  40dc81:	fwait
  40dc82:	loop   0x40dc3d
  40dc84:	mov    ds:0x470550dd,al
  40dc89:	outs   dx,BYTE PTR ds:[esi]
  40dc8a:	pop    esp
  40dc8b:	pop    ecx
  40dc8c:	mov    eax,0x665a6e1b
  40dc91:	sbb    eax,0x43a20fbd
  40dc96:	scas   al,BYTE PTR es:[edi]
  40dc97:	mov    BYTE PTR ds:0xd174f132,dl
  40dc9d:	and    DWORD PTR [ebx+edx*1],edx
  40dca0:	pop    ebp
  40dca1:	imul   ebp,DWORD PTR [edx-0x1716b41b],0xa01d93dd
  40dcab:	sahf   
  40dcac:	rcl    ebp,0x98
  40dcaf:	scas   eax,DWORD PTR es:[edi]
  40dcb0:	test   BYTE PTR [edx],al
  40dcb2:	sbb    esi,DWORD PTR [ebp-0x65]
  40dcb5:	jb     0x40dd0a
  40dcb7:	in     al,0x40
  40dcb9:	push   0x97a92fa8
  40dcbe:	mov    cl,0x90
  40dcc0:	packssdw mm0,QWORD PTR [ecx+ebp*2]
  40dcc4:	mov    cl,0x62
  40dcc6:	sub    al,0xa5
  40dcc8:	out    0xf0,al
  40dcca:	test   eax,0x511b51e8
  40dccf:	dec    esp
  40dcd0:	mov    edx,0x2526d42d
  40dcd5:	sbb    BYTE PTR [ebx-0x21],bh
  40dcd8:	sbb    DWORD PTR cs:[eax-0x3486abe5],ecx
  40dcdf:	cmp    al,0x6e
  40dce1:	hlt    
  40dce2:	xchg   esi,eax
  40dce3:	ror    BYTE PTR [ebp+0x1d],0x80
  40dce7:	jmp    0xdbcc8a5c
  40dcec:	mov    ah,0x49
  40dcee:	lock rol BYTE PTR [edi-0x1ab04742],cl
  40dcf5:	mov    esi,0x4edd88a4
  40dcfa:	imul   esp,DWORD PTR [ecx],0x48
  40dcfd:	inc    edx
  40dcfe:	ret    0x83d0
  40dd01:	stc    
  40dd02:	jge    0x40dd53
  40dd04:	retf   0xfe8e
  40dd07:	cmp    dh,BYTE PTR [esi-0x46683f5a]
  40dd0d:	loop   0x40dcea
  40dd0f:	jo     0x40dd8f
  40dd11:	push   cs
  40dd12:	push   ebx
  40dd13:	sbb    edi,DWORD PTR [esi+0x757cd879]
  40dd19:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40dd1b:	xor    ecx,DWORD PTR [ecx]
  40dd1d:	shr    BYTE PTR [edi-0x62cefc11],cl
  40dd23:	add    al,0xb2
  40dd25:	shl    DWORD PTR [ebx+edx*2],1
  40dd28:	fst    QWORD PTR [esi+0x36]
  40dd2c:	dec    ecx
  40dd2d:	and    DWORD PTR [esp-0x71b8da56],0xffffff99
  40dd35:	jnp    0x40dd60
  40dd37:	pop    edx
  40dd38:	pop    eax
  40dd39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3a:	int    0xf5
  40dd3c:	pop    edi
  40dd3d:	and    ah,BYTE PTR [edi]
  40dd3f:	mov    ah,0x49
  40dd41:	cmp    esp,DWORD PTR [ecx-0x763e7509]
  40dd47:	pop    ecx
  40dd48:	inc    ebp
  40dd49:	mov    WORD PTR [ebx],?
  40dd4b:	jmp    FWORD PTR gs:[ecx+0x18]
  40dd4f:	mov    cl,0xcb
  40dd51:	mov    edx,0x8d3a954a
  40dd56:	cmp    DWORD PTR [esi-0x10],edx
  40dd59:	imul   ebx,DWORD PTR [edx+0x4f],0x28
  40dd5d:	jecxz  0x40dda0
  40dd5f:	mov    cl,0x6a
  40dd61:	sub    edx,DWORD PTR [esi+0x65490c1]
  40dd67:	pusha  
  40dd68:	xchg   ebx,eax
  40dd69:	je     0x40ddab
  40dd6b:	push   es
  40dd6c:	push   ebp
  40dd6d:	cmp    ch,dh
  40dd6f:	pop    ebx
  40dd70:	xor    esi,ebp
  40dd72:	and    BYTE PTR [ebp-0x65],cl
  40dd75:	dec    esp
  40dd76:	pop    esi
  40dd77:	loop   0x40dd97
  40dd79:	push   cs
  40dd7a:	(bad)  
  40dd7b:	pop    ebx
  40dd7c:	xor    eax,0x96ffa9fc
  40dd81:	test   eax,ebx
  40dd83:	test   DWORD PTR [edx],esp
  40dd85:	cli    
  40dd86:	add    dl,al
  40dd88:	inc    edi
  40dd89:	test   al,0xdd
  40dd8b:	dec    ecx
  40dd8c:	leave  
  40dd8d:	loope  0x40dddb
  40dd8f:	mov    esi,DWORD PTR [ecx+0x60bca69e]
  40dd95:	das    
  40dd96:	sahf   
  40dd97:	pop    edi
  40dd98:	shl    DWORD PTR [edx],1
  40dd9a:	test   eax,0x4525cc2b
  40dd9f:	ja     0x40dd2a
  40dda1:	jbe    0x40dd74
  40dda3:	mov    al,ds:0x268e0ada
  40dda8:	xor    BYTE PTR [ebx],bl
  40ddaa:	loop   0x40de2a
  40ddac:	adc    edx,esp
  40ddae:	dec    edi
  40ddaf:	push   esp
  40ddb0:	retf   0x8831
  40ddb3:	(bad)  
  40ddb4:	aad    0x76
  40ddb6:	and    ebx,eax
  40ddb8:	stos   BYTE PTR es:[edi],al
  40ddb9:	sbb    eax,esp
  40ddbb:	mov    ch,0x38
  40ddbd:	add    BYTE PTR [edi+0x24effbc2],ah
  40ddc3:	cwde   
  40ddc4:	jmp    0xc7a47a44
  40ddc9:	int    0x97
  40ddcb:	and    edx,DWORD PTR [edx]
  40ddcd:	stos   BYTE PTR es:[edi],al
  40ddce:	and    DWORD PTR [esi+0x16aa4b12],ebp
  40ddd4:	pop    es
  40ddd5:	gs pop eax
  40ddd7:	and    eax,0x4dd45253
  40dddc:	xchg   DWORD PTR [edx-0x2f],eax
  40dddf:	icebp  
  40dde0:	push   ebx
  40dde1:	push   ebp
  40dde2:	outs   dx,DWORD PTR ds:[esi]
  40dde3:	mov    WORD PTR [esi],ss
  40dde5:	add    DWORD PTR [edi],eax
  40dde7:	mov    ebp,0xffe5c344
  40ddec:	shr    DWORD PTR [ecx+0x4a005fe3],cl
  40ddf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf3:	sbb    eax,DWORD PTR [edx+esi*4-0x61]
  40ddf7:	xchg   ah,dl
  40ddf9:	jae    0x40dde7
  40ddfb:	stos   BYTE PTR es:[edi],al
  40ddfc:	mov    ds:0x316223f,al
  40de01:	or     eax,0x1a024913
  40de06:	mov    dh,0x4a
  40de08:	dec    esp
  40de09:	cmp    DWORD PTR [esi-0x526283e6],edx
  40de0f:	shl    BYTE PTR [edx+0x783a534d],cl
  40de15:	push   esp
  40de16:	jg     0x40de44
  40de18:	mov    eax,0x4b4dcb24
  40de1d:	jle    0x40dda7
  40de1f:	sahf   
  40de20:	dec    edi
  40de21:	push   edi
  40de22:	dec    esp
  40de23:	add    al,0xee
  40de25:	aam    0xa1
  40de27:	xchg   DWORD PTR [eax+edi*4-0x22da3033],esp
  40de2e:	call   0x1b90:0xcfe085cb
  40de35:	pop    ebp
  40de36:	shl    eax,1
  40de38:	jmp    0x527938c7
  40de3d:	inc    eax
  40de3e:	pusha  
  40de3f:	loopne 0x40de7f
  40de41:	(bad)  
  40de42:	aad    0xf1
  40de44:	xchg   ebp,eax
  40de45:	dec    ebx
  40de46:	xchg   esp,eax
  40de47:	dec    ebp
  40de48:	or     ch,al
  40de4a:	int3   
  40de4b:	out    dx,al
  40de4c:	xor    DWORD PTR [ecx+0x45],ebx
  40de4f:	jg     0x40de00
  40de51:	add    al,BYTE PTR [edx]
  40de53:	iret   
  40de54:	push   eax
  40de55:	pop    bx
  40de57:	pop    ebp
  40de58:	dec    ebp
  40de59:	call   esp
  40de5b:	and    cl,ch
  40de5d:	aam    0x45
  40de5f:	push   cs
  40de60:	mul    dh
  40de62:	adc    ebx,DWORD PTR [esp+ebp*4-0x3f]
  40de66:	fs pop es
  40de68:	mov    dh,0xf6
  40de6a:	loop   0x40deac
  40de6c:	inc    eax
  40de6d:	jo     0x40deb8
  40de6f:	mov    ds:0x65c5786e,eax
  40de74:	leave  
  40de75:	(bad)  
  40de76:	xor    BYTE PTR [edi],bh
  40de78:	test   DWORD PTR [esi-0x709943f7],esi
  40de7e:	push   ss
  40de7f:	cs sub eax,0x766daf18
  40de85:	pop    esi
  40de86:	push   cs
  40de87:	(bad)  
  40de88:	hlt    
  40de89:	pop    ss
  40de8a:	pop    esp
  40de8b:	pop    es
  40de8c:	jo     0x40de48
  40de8e:	jle    0x40de15
  40de90:	sub    eax,0xa4896f93
  40de95:	xor    eax,0x5f383fc5
  40de9a:	loop   0x40de94
  40de9c:	fidiv  WORD PTR [eax]
  40de9e:	pop    edx
  40de9f:	mov    al,ds:0xf5f1e5aa
  40dea4:	mov    al,0x49
  40dea6:	aam    0xd9
  40dea8:	xchg   edi,eax
  40dea9:	push   esp
  40deaa:	mov    al,0x56
  40deac:	cmp    bl,cl
  40deae:	ins    DWORD PTR es:[edi],dx
  40deaf:	pusha  
  40deb0:	and    DWORD PTR [esi],0x18
  40deb3:	add    ch,ch
  40deb5:	cs mov edx,0x4dfc25f
  40debb:	jmp    0x13dcbe5
  40dec0:	dec    eax
  40dec1:	xor    esi,DWORD PTR ds:0x6c6d3b39
  40dec7:	add    ebx,DWORD PTR [esi-0x21]
  40deca:	nop
  40decb:	jge    0x40df23
  40decd:	cmp    DWORD PTR [eax],esp
  40decf:	lahf   
  40ded0:	and    al,0x69
  40ded2:	jmp    0x40df12
  40ded4:	lods   eax,DWORD PTR ds:[esi]
  40ded5:	xchg   DWORD PTR [ecx-0x2ca8860],ecx
  40dedb:	pop    esp
  40dedc:	retf   
  40dedd:	mov    dh,0xc0
  40dedf:	call   0xfc828036
  40dee4:	addr16 xchg ebx,eax
  40dee6:	adc    edx,DWORD PTR [eax]
  40dee8:	inc    eax
  40dee9:	leave  
  40deea:	inc    edx
  40deeb:	(bad)  
  40deec:	mov    ah,0x87
  40deee:	(bad)  
  40deef:	mov    ah,0xc3
  40def1:	mov    al,dh
  40def3:	ret    
  40def4:	xor    dh,BYTE PTR [ebp+eiz*1+0x41ccda46]
  40defb:	jecxz  0x40df45
  40defd:	sub    eax,0x867a2aed
  40df02:	(bad)  
  40df03:	xor    esi,DWORD PTR [ecx+0x75]
  40df06:	test   al,dh
  40df08:	icebp  
  40df09:	sbb    DWORD PTR [eax],edi
  40df0b:	mov    ebx,0xf23020fd
  40df10:	jbe    0x40df6b
  40df12:	jecxz  0x40df5a
  40df14:	(bad)  
  40df15:	jne    0x40dea2
  40df17:	jp     0x40df53
  40df19:	je     0x40df4e
  40df1b:	push   es
  40df1c:	iret   
  40df1d:	test   eax,0x823db160
  40df22:	je     0x40df48
  40df24:	or     eax,0xfa0f7529
  40df29:	pop    ds
  40df2a:	shr    DWORD PTR [edx+edi*2+0xb],1
  40df2e:	inc    esp
  40df2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df30:	inc    esi
  40df31:	gs retf 
  40df33:	(bad)
  40df36:	xor    al,0x18
  40df38:	loopne 0x40df8f
  40df3a:	fs mov ecx,0xc2661249
  40df40:	cmp    eax,0xb41be23d
  40df45:	or     eax,0x6b738c4f
  40df4a:	push   eax
  40df4b:	(bad)  
  40df4c:	lods   eax,DWORD PTR ds:[esi]
  40df4d:	ins    BYTE PTR es:[edi],dx
  40df4e:	xor    eax,0xe418fa1c
  40df53:	jle    0x40df36
  40df55:	sbb    al,0xfb
  40df57:	jo     0x40def9
  40df59:	and    eax,0xe6507b75
  40df5e:	int3   
  40df5f:	call   DWORD PTR [ebx-0x27]
  40df62:	lea    esi,[esi+0x1a4770e0]
  40df68:	dec    esp
  40df69:	ja     0x40df67
  40df6b:	jmp    0xcd1c:0xa118f281
  40df72:	jmp    0x40df94
  40df74:	shl    BYTE PTR [ecx+edi*4-0x39],0xca
  40df79:	lods   al,BYTE PTR ds:[esi]
  40df7a:	jecxz  0x40df9f
  40df7c:	dec    ebp
  40df7d:	push   ss
  40df7e:	dec    ebp
  40df7f:	xchg   DWORD PTR [edi+0x7d],ebp
  40df82:	xchg   edx,eax
  40df83:	fnop   
  40df85:	ss mov ch,0x5b
  40df88:	or     al,0x38
  40df8a:	test   eax,0xdd31ee57
  40df8f:	test   ch,ah
  40df91:	jle    0x40df81
  40df93:	sbb    al,0xf0
  40df95:	icebp  
  40df96:	xchg   edx,eax
  40df97:	and    al,0xa1
  40df99:	(bad)  
  40df9a:	fcom   DWORD PTR [eax+ebp*8]
  40df9d:	mov    eax,0x8ec3a9a1
  40dfa2:	nop
  40dfa3:	cmp    eax,DWORD PTR [ebx-0x26]
  40dfa6:	mov    bh,0xb
  40dfa8:	jmp    0x82c08df9
  40dfad:	sbb    bl,BYTE PTR [ebx+0x2225381b]
  40dfb3:	mov    al,0x9a
  40dfb5:	int3   
  40dfb6:	dec    esp
  40dfb7:	rol    DWORD PTR [ebp-0x3b685e5b],cl
  40dfbd:	ret    0x8f94
  40dfc0:	ret    
  40dfc1:	jnp    0x40e008
  40dfc3:	lods   eax,DWORD PTR ds:[esi]
  40dfc4:	and    bh,BYTE PTR [esi]
  40dfc6:	pop    ebp
  40dfc7:	icebp  
  40dfc8:	(bad)  
  40dfca:	mov    ?,WORD PTR [ebx-0x67]
  40dfcd:	adc    eax,0x1dc1fb74
  40dfd2:	hlt    
  40dfd3:	pop    esp
  40dfd4:	add    BYTE PTR [esi-0x7c],al
  40dfd7:	xor    eax,DWORD PTR [ebx+0x36]
  40dfda:	mov    ebp,0xd925a904
  40dfdf:	daa    
  40dfe0:	dec    esi
  40dfe1:	mov    dl,0xd8
  40dfe3:	stos   DWORD PTR es:[edi],eax
  40dfe4:	cmp    BYTE PTR [edx+ebx*4-0x5d783ea9],cl
  40dfeb:	jnp    0x40df70
  40dfed:	daa    
  40dfee:	add    DWORD PTR [esi+0x49],ecx
  40dff1:	dec    edx
  40dff2:	pop    ss
  40dff3:	imul   ebp,eax,0xffffffc4
  40dff6:	je     0x40e045
  40dff8:	xchg   BYTE PTR [ecx],ah
  40dffa:	pop    ebx
  40dffb:	mov    eax,0xbcfc943e
  40e000:	(bad)  
  40e002:	pop    es
  40e003:	add    eax,0x27edf5aa
  40e008:	stos   DWORD PTR es:[edi],eax
  40e009:	or     DWORD PTR ds:0xfb7c268,edx
  40e00f:	xchg   ebx,ebx
  40e011:	sbb    ch,BYTE PTR ds:0x95f5a5ad
  40e017:	ror    BYTE PTR [ebp+0x35e90b21],0xe4
  40e01e:	idiv   bl
  40e020:	pop    ecx
  40e021:	jl     0x40e094
  40e023:	(bad)  
  40e024:	adc    esp,DWORD PTR [ebx+0x6a95196b]
  40e02a:	sub    ebp,ecx
  40e02c:	xchg   ecx,eax
  40e02d:	movntps XMMWORD PTR [ecx+0x34b97b1e],xmm0
  40e034:	push   esp
  40e035:	sbb    eax,DWORD PTR [ebp+0x28]
  40e038:	out    0x74,al
  40e03a:	jnp    0x40e02d
  40e03c:	mov    al,0x9a
  40e03e:	push   ds
  40e03f:	mov    esp,0x307503a3
  40e044:	test   BYTE PTR [ebx-0x3b],dl
  40e047:	ror    DWORD PTR [ebx+0x1e],1
  40e04a:	fisubr DWORD PTR [ebp+0x5933a5ce]
  40e050:	jle    0x40e00a
  40e052:	mov    ch,0x2b
  40e054:	mov    cl,0x16
  40e056:	mov    ds:0x3bb7ded9,al
  40e05b:	int3   
  40e05c:	(bad)  
  40e05d:	fiadd  WORD PTR [esi-0x50]
  40e060:	or     DWORD PTR [eax-0x5e99ddf7],ebx
  40e066:	xor    bl,BYTE PTR [ebx-0x1a]
  40e069:	mov    ecx,0x49793702
  40e06e:	mov    ds:0x19481fc,al
  40e073:	mov    ebx,0x5764c4b7
  40e078:	imul   ebp,DWORD PTR [eax+0x25a751bb],0x49
  40e07f:	pusha  
  40e080:	mov    ch,0x6e
  40e082:	fmul   QWORD PTR [eax+0x48]
  40e085:	push   ebp
  40e086:	rcl    BYTE PTR [eax],1
  40e088:	jo     0x40e109
  40e08a:	jne    0x40e09d
  40e08c:	call   0xd309fad6
  40e091:	xchg   esi,eax
  40e092:	sub    dl,ah
  40e094:	mov    DWORD PTR [eax],0x6a79da9c
  40e09a:	in     al,dx
  40e09b:	jb     0x40e069
  40e09d:	inc    ebp
  40e09e:	sbb    cl,dh
  40e0a0:	xchg   edi,eax
  40e0a1:	and    BYTE PTR [edi+ecx*8+0x2e3e019a],al
  40e0a8:	lds    ebp,FWORD PTR [edi-0x60]
  40e0ab:	ret    
  40e0ac:	clc    
  40e0ad:	sti    
  40e0ae:	popa   
  40e0af:	push   ebp
  40e0b0:	lods   al,BYTE PTR ds:[esi]
  40e0b1:	push   esi
  40e0b2:	sbb    eax,0x174f78a0
  40e0b7:	xchg   edi,eax
  40e0b8:	push   0xb37bcc4a
  40e0bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0be:	pusha  
  40e0bf:	push   0x7ef05f7e
  40e0c4:	push   ds
  40e0c5:	dec    edx
  40e0c6:	retf   0xed84
  40e0c9:	std    
  40e0ca:	clc    
  40e0cb:	jne    0x40e054
  40e0cd:	sub    DWORD PTR [edi+esi*8-0x453ba3f0],ebx
  40e0d4:	daa    
  40e0d5:	gs (bad) 
  40e0d7:	jge    0x40e099
  40e0d9:	stc    
  40e0da:	push   ds
  40e0db:	push   0xffffff8c
  40e0dd:	lahf   
  40e0de:	push   eax
  40e0df:	ins    DWORD PTR es:[edi],dx
  40e0e0:	adc    BYTE PTR [esi-0x5c],cl
  40e0e3:	xchg   edi,eax
  40e0e4:	jnp    0x40e0ad
  40e0e6:	cmp    ah,BYTE PTR [edx+0x3982ce27]
  40e0ec:	jae    0x40e0c9
  40e0ee:	jge    0x40e0c4
  40e0f0:	sub    ah,BYTE PTR [ebp+0xa3eb4d7]
  40e0f6:	dec    esi
  40e0f7:	inc    esp
  40e0f8:	lods   al,BYTE PTR ds:[esi]
  40e0f9:	ror    BYTE PTR [edx+0x23a3e5cc],0x2f
  40e100:	mov    bh,0x71
  40e102:	jmp    0x40e15d
  40e104:	aas    
  40e105:	push   ebx
  40e106:	sti    
  40e107:	into   
  40e108:	es mov dl,0xc9
  40e10b:	mov    dl,0xa2
  40e10d:	mov    ch,0xb1
  40e10f:	shl    BYTE PTR [eax],1
  40e111:	jbe    0x40e18b
  40e113:	(bad)  
  40e114:	jne    0x40e097
  40e116:	jl     0x40e149
  40e118:	call   0x8722d598
  40e11d:	mov    ?,edi
  40e11f:	in     al,0x41
  40e121:	rol    DWORD PTR [ebp+ebx*8-0x7d3beca9],1
  40e128:	enter  0x9a7f,0xf6
  40e12c:	inc    esp
  40e12d:	mov    bh,0xe3
  40e12f:	ror    BYTE PTR [ecx-0x72],cl
  40e132:	fs imul edi,ebp,0xcc335ef2
  40e139:	sbb    BYTE PTR [ebx-0xd56f531],cl
  40e13f:	std    
  40e140:	xchg   esp,eax
  40e141:	ins    DWORD PTR es:[edi],dx
  40e142:	stos   BYTE PTR es:[edi],al
  40e143:	mov    ah,0x78
  40e145:	test   eax,0xeb5472bc
  40e14a:	call   0xc317:0x437ef57c
  40e151:	jle    0x40e1c1
  40e153:	push   esi
  40e154:	(bad)  
  40e156:	xchg   al,dh
  40e158:	cmp    al,0xae
  40e15a:	jecxz  0x40e0f9
  40e15c:	aaa    
  40e15d:	add    DWORD PTR [edx],esi
  40e15f:	in     al,dx
  40e160:	ja     0x40e1a1
  40e162:	mov    DWORD PTR [edx+ecx*1-0x3c],ebp
  40e166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e167:	aad    0x75
  40e169:	clc    
  40e16a:	js     0x40e17b
  40e16c:	ret    
  40e16d:	call   0xa61a:0x1ecd8a0a
  40e174:	mov    ds:0xee0be49,eax
  40e179:	or     edi,eax
  40e17b:	(bad)  
  40e17c:	xor    al,0xb4
  40e17e:	push   esi
  40e17f:	mov    eax,ds:0x6b693581
  40e184:	mul    BYTE PTR fs:[eax-0x1e]
  40e188:	push   esp
  40e189:	cli    
  40e18a:	jg     0x40e1e9
  40e18c:	popa   
  40e18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18e:	sar    BYTE PTR [ebp+0x40],cl
  40e191:	mov    bl,0x80
  40e193:	lods   al,BYTE PTR ds:[esi]
  40e194:	and    bl,BYTE PTR [ecx-0x27]
  40e197:	ret    0x467a
  40e19a:	pop    ss
  40e19b:	inc    ebp
  40e19c:	adc    DWORD PTR [esp+ecx*4],eax
  40e19f:	aad    0x67
  40e1a1:	jp     0x40e216
  40e1a3:	inc    ebp
  40e1a4:	sbb    ah,bh
  40e1a6:	fucomp st(1)
  40e1a8:	cmc    
  40e1a9:	cmc    
  40e1aa:	arpl   WORD PTR [eax+ebp*4-0x74771d80],cx
  40e1b1:	mov    dh,0x57
  40e1b3:	sbb    BYTE PTR [ecx-0x1f],0x3e
  40e1b7:	sub    bh,BYTE PTR [ebx]
  40e1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ba:	es fmulp st(2),st
  40e1bd:	retf   0x3422
  40e1c0:	std    
  40e1c1:	in     al,0x4f
  40e1c3:	dec    ebp
  40e1c4:	in     eax,dx
  40e1c5:	imul   ebx,DWORD PTR [esi-0x17],0x529187c9
  40e1cc:	fsubp  st(2),st
  40e1ce:	mov    ?,WORD PTR [eax+0x146a15cf]
  40e1d4:	out    dx,eax
  40e1d5:	dec    ecx
  40e1d6:	mov    eax,ds:0x84446910
  40e1db:	fistp  DWORD PTR [esi-0x71]
  40e1de:	mov    esp,0x76ea45e9
  40e1e3:	cmp    ebx,DWORD PTR [ebx+0x7c2f9b67]
  40e1e9:	test   eax,0xf4fbd87
  40e1ee:	pop    ecx
  40e1ef:	jg     0x40e264
  40e1f1:	fst    DWORD PTR [edi+0x5632ba8d]
  40e1f7:	xchg   ebp,eax
  40e1f8:	leave  
  40e1f9:	inc    edx
  40e1fa:	fnstcw WORD PTR [edi-0x8a10f49]
  40e200:	mov    al,ds:0x70acfcd1
  40e205:	mov    bh,0x73
  40e207:	or     al,0x6b
  40e209:	sbb    BYTE PTR ds:0x341f3f9a,bl
  40e20f:	sbb    al,0x2d
  40e211:	lahf   
  40e212:	cmp    al,0x5f
  40e214:	retf   
  40e215:	in     eax,0x31
  40e217:	pop    ds
  40e218:	sbb    BYTE PTR [ecx-0x1f],0x8e
  40e21c:	mov    eax,0x82ecc5be
  40e221:	stos   DWORD PTR es:[edi],eax
  40e222:	lods   al,BYTE PTR ds:[esi]
  40e223:	lahf   
  40e224:	and    cl,BYTE PTR [ebx]
  40e226:	sbb    BYTE PTR [edi-0x66e34d3a],bh
  40e22c:	in     al,0x91
  40e22e:	add    al,0xf7
  40e230:	pop    ss
  40e231:	pop    ss
  40e232:	mov    BYTE PTR [edx+0x46],ah
  40e235:	cmp    ecx,DWORD PTR gs:[eax-0x63]
  40e239:	fcomp  DWORD PTR [eax]
  40e23b:	push   ss
  40e23c:	xor    eax,0xbbe53be9
  40e241:	sbb    DWORD PTR [bp+di-0x64],0xd8558ac1
  40e249:	sub    dl,BYTE PTR [edi+0x3b842b33]
  40e24f:	or     edx,ebx
  40e251:	(bad)  
  40e252:	scas   al,BYTE PTR es:[edi]
  40e253:	xchg   esi,eax
  40e254:	push   esi
  40e255:	stos   DWORD PTR es:[edi],eax
  40e256:	outs   dx,DWORD PTR ds:[esi]
  40e257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e258:	sub    eax,0xe380e807
  40e25d:	adc    BYTE PTR [ecx],al
  40e25f:	push   esi
  40e260:	push   ss
  40e261:	adc    al,0xb9
  40e263:	adc    eax,0xbfdc68a3
  40e268:	stc    
  40e269:	mov    dh,0xf5
  40e26b:	adc    eax,0x295823be
  40e270:	mov    WORD PTR [edx-0x6a],es
  40e273:	jmp    0x875f:0x43d06f4d
  40e27a:	mov    bh,0x90
  40e27c:	inc    ebx
  40e27d:	or     ch,cl
  40e27f:	mov    di,0x66aa
  40e283:	pop    esi
  40e284:	cld    
  40e285:	jmp    0x40e2de
  40e287:	out    dx,eax
  40e288:	add    eax,0xc5c5dd5c
  40e28d:	icebp  
  40e28e:	fmul   st(7),st
  40e290:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e292:	mov    al,ds:0x5094eb9f
  40e297:	std    
  40e298:	jbe    0x40e291
  40e29a:	adc    eax,0x391d46b5
  40e29f:	push   edi
  40e2a0:	mov    edi,DWORD PTR [edx]
  40e2a2:	cmp    al,0x8
  40e2a4:	xor    al,0xce
  40e2a6:	jle    0x40e2ec
  40e2a8:	ds xchg ecx,eax
  40e2aa:	adc    cl,dh
  40e2ac:	jg     0x40e29f
  40e2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2af:	dec    ebp
  40e2b0:	adc    eax,0x7748a0b8
  40e2b5:	(bad)  
  40e2b6:	dec    ebp
  40e2b7:	mov    al,ds:0x3f6bfef6
  40e2bc:	aad    0xc5
  40e2be:	es js  0x40e308
  40e2c1:	pop    ecx
  40e2c2:	add    bl,BYTE PTR [edx]
  40e2c4:	arpl   WORD PTR [esi],sp
  40e2c6:	sub    BYTE PTR [esi-0x33],bh
  40e2c9:	mov    edx,0xd83ba6f1
  40e2ce:	cmc    
  40e2cf:	mov    eax,ds:0x635baa1
  40e2d4:	dec    ecx
  40e2d5:	inc    esi
  40e2d6:	cmp    eax,DWORD PTR [ecx-0x36]
  40e2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2da:	mov    DWORD PTR [ebx-0x1d],edi
  40e2dd:	jns    0x40e29c
  40e2df:	or     DWORD PTR [esi-0x4fa74f36],esi
  40e2e5:	(bad)  
  40e2e6:	(bad)  
  40e2e7:	out    dx,eax
  40e2e8:	inc    edi
  40e2e9:	imul   BYTE PTR [eax]
  40e2eb:	xor    dl,BYTE PTR [eax+ecx*1-0x9]
  40e2ef:	mov    esi,0xd3f347f8
  40e2f4:	and    DWORD PTR [eax+ebp*1],0x8ad772f0
  40e2fb:	jl     0x40e287
  40e2fd:	xchg   BYTE PTR [edi],ch
  40e2ff:	(bad)  
  40e300:	jp     0x40e320
  40e302:	test   BYTE PTR [edx*1+0x2a41a5f8],dh
  40e309:	addr16 push esi
  40e30b:	lods   eax,DWORD PTR ds:[esi]
  40e30c:	sbb    dh,BYTE PTR [ebx-0x5bbb3d54]
  40e312:	cmp    al,BYTE PTR [ecx+0x52]
  40e315:	push   ss
  40e316:	clc    
  40e317:	or     ch,cl
  40e319:	xchg   edx,eax
  40e31a:	repnz into 
  40e31c:	sti    
  40e31d:	aaa    
  40e31e:	xchg   edx,eax
  40e31f:	mov    dh,0xef
  40e321:	mov    bl,0xc1
  40e323:	pop    ss
  40e324:	push   ds
  40e325:	js     0x40e2ac
  40e327:	sbb    BYTE PTR [edi],0x58
  40e32a:	and    edx,DWORD PTR [ebp+0x2e]
  40e32d:	mov    ds:0x9dcda29a,al
  40e332:	inc    esi
  40e333:	or     ch,bh
  40e335:	jp     0x40e34a
  40e337:	fld    DWORD PTR [edx+0x6d82571c]
  40e33d:	aaa    
  40e33e:	repnz dec ebp
  40e340:	mov    gs,WORD PTR [bx+0x45d6]
  40e345:	xchg   ebp,eax
  40e346:	lods   al,BYTE PTR ds:[esi]
  40e347:	sub    edi,DWORD PTR [esi+0x66]
  40e34a:	cmp    eax,0x62c0f752
  40e34f:	jns    0x40e39e
  40e351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e352:	scas   eax,DWORD PTR es:[edi]
  40e353:	sahf   
  40e354:	jne    0x40e30d
  40e356:	aaa    
  40e357:	jne    0x40e363
  40e359:	pushf  
  40e35a:	test   al,0x39
  40e35c:	out    0xa7,eax
  40e35e:	lock pusha 
  40e360:	data16 mov ds:0x85932498,al
  40e366:	in     eax,0xc3
  40e368:	aad    0x9c
  40e36a:	sbb    BYTE PTR [edi-0x33],0xf4
  40e36e:	loopne 0x40e347
  40e370:	xor    BYTE PTR [ecx+eax*8-0x580d69c1],dl
  40e377:	pop    esi
  40e378:	inc    ebx
  40e379:	lods   eax,DWORD PTR ds:[esi]
  40e37a:	nop
  40e37b:	add    eax,esp
  40e37d:	cmp    edx,edi
  40e37f:	adc    ebx,DWORD PTR [ecx+0x269b9ead]
  40e385:	aam    0xb5
  40e387:	jl     0x40e3c5
  40e389:	pop    ds
  40e38a:	stos   DWORD PTR es:[edi],eax
  40e38b:	or     eax,0x3eb3c5e3
  40e390:	loope  0x40e3be
  40e392:	das    
  40e393:	or     DWORD PTR ss:[edx+0xe],eax
  40e397:	leave  
  40e398:	aas    
  40e399:	pop    edx
  40e39a:	je     0x40e3f6
  40e39c:	fldz   
  40e39e:	cmp    cl,dh
  40e3a0:	test   BYTE PTR [ecx-0x21fa77f2],0x4f
  40e3a7:	inc    ebx
  40e3a8:	push   edi
  40e3a9:	and    al,0x61
  40e3ab:	mov    ?,WORD PTR [edi-0x65a222fe]
  40e3b1:	fisttp WORD PTR [edx]
  40e3b3:	ss push esi
  40e3b5:	iret   
  40e3b6:	std    
  40e3b7:	mov    ch,0xe6
  40e3b9:	test   eax,0x1fb2bfad
  40e3be:	or     dl,BYTE PTR [eax-0x47e3bafc]
  40e3c4:	xchg   esi,eax
  40e3c5:	scas   eax,DWORD PTR es:[edi]
  40e3c6:	mov    ecx,DWORD PTR [edx]
  40e3c8:	shl    ebp,1
  40e3ca:	stos   DWORD PTR es:[edi],eax
  40e3cb:	cmp    edx,DWORD PTR [esp+eax*2]
  40e3ce:	sub    cl,dh
  40e3d0:	enter  0x3515,0xd9
  40e3d4:	sub    ebx,DWORD PTR [ecx]
  40e3d6:	outs   dx,DWORD PTR ds:[esi]
  40e3d7:	ins    DWORD PTR es:[edi],dx
  40e3d8:	fbld   TBYTE PTR [edi+0x5fd40f0d]
  40e3de:	mov    ch,0x44
  40e3e0:	fiadd  WORD PTR [edx-0x5b0217ad]
  40e3e6:	cli    
  40e3e7:	cs loope 0x40e3c4
  40e3ea:	ret    0x6782
  40e3ed:	repz sub ebp,DWORD PTR [ebp*4-0xaaf1e25]
  40e3f5:	sbb    eax,0x646ff43b
  40e3fa:	fsubrp st(4),st
  40e3fc:	in     al,0xce
  40e3fe:	sar    ebx,cl
  40e400:	jg     0x40e3af
  40e402:	cdq    
  40e403:	aas    
  40e404:	jne    0x40e45e
  40e406:	lods   eax,DWORD PTR ds:[esi]
  40e407:	(bad)  
  40e408:	aad    0x64
  40e40a:	daa    
  40e40b:	sub    cl,dh
  40e40d:	or     ch,BYTE PTR [edi-0x4b7eb75d]
  40e413:	pop    edi
  40e414:	mov    DWORD PTR [esi],ebp
  40e416:	bound  esp,QWORD PTR [eax]
  40e418:	daa    
  40e419:	es dec ebx
  40e41b:	pop    ebp
  40e41c:	sub    cl,BYTE PTR fs:[eax]
  40e41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e421:	adc    ch,ch
  40e423:	fnstsw WORD PTR ds:0x9087dc71
  40e429:	ins    DWORD PTR es:[edi],dx
  40e42a:	fwait
  40e42b:	xor    eax,0x2f12b637
  40e430:	fld    st(7)
  40e432:	push   0xea42ad01
  40e437:	push   esp
  40e438:	test   eax,0x514a9796
  40e43d:	mov    edx,0x3b777a3e
  40e442:	aam    0xe4
  40e444:	inc    esp
  40e445:	xchg   edx,eax
  40e446:	xchg   esp,eax
  40e447:	fldenv [ebp-0x6c]
  40e44a:	add    esi,edi
  40e44c:	clc    
  40e44d:	push   eax
  40e44e:	push   ebx
  40e44f:	ds inc edx
  40e451:	scas   eax,DWORD PTR es:[edi]
  40e452:	add    dh,BYTE PTR [ebx]
  40e454:	adc    bh,BYTE PTR [edi-0x1e71b1c1]
  40e45a:	ret    
  40e45b:	dec    eax
  40e45c:	or     al,0x10
  40e45e:	add    esp,DWORD PTR [edx+eax*8-0x72]
  40e462:	mov    edi,0xfda6531b
  40e467:	fwait
  40e468:	mov    ecx,0x384d03ff
  40e46d:	sub    edi,DWORD PTR [ecx+0x36]
  40e470:	jne    0x40e400
  40e472:	mov    eax,ds:0x16a1ac71
  40e477:	add    eax,0x52ca7822
  40e47c:	pop    edx
  40e47d:	pop    ecx
  40e47e:	fdiv   DWORD PTR [edx]
  40e480:	retf   
  40e481:	inc    edx
  40e482:	and    al,0xb6
  40e484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e485:	int3   
  40e486:	(bad)  
  40e487:	fist   DWORD PTR [ecx+0x16]
  40e48a:	sti    
  40e48b:	data16 shr BYTE PTR [edx+0x2c8b1b78],1
  40e492:	ficomp DWORD PTR [edx]
  40e494:	jno    0x40e515
  40e496:	jo     0x40e4c9
  40e498:	and    eax,0xa15b7886
  40e49d:	enter  0x4a23,0x9d
  40e4a1:	jle    0x40e491
  40e4a3:	sbb    ebp,edx
  40e4a5:	fst    DWORD PTR [ecx]
  40e4a7:	or     eax,0xe641028a
  40e4ac:	cmp    ebx,ebx
  40e4ae:	xor    eax,ecx
  40e4b0:	sbb    eax,0x83d54c6b
  40e4b5:	or     dh,ch
  40e4b7:	stos   BYTE PTR es:[edi],al
  40e4b8:	ss or  al,0x81
  40e4bb:	jge    0x40e4a0
  40e4bd:	push   0xffffffec
  40e4bf:	icebp  
  40e4c0:	ds and eax,0x68a71a0a
  40e4c6:	sub    DWORD PTR [eax],ebp
  40e4c8:	dec    ebx
  40e4c9:	xchg   esp,eax
  40e4ca:	mov    dl,0xfc
  40e4cc:	std    
  40e4cd:	inc    edx
  40e4ce:	imul   eax,DWORD PTR [ebp-0x7875b13f],0xd5d6999
  40e4d8:	push   esp
  40e4d9:	xchg   edi,eax
  40e4da:	xchg   edx,eax
  40e4db:	and    esi,DWORD PTR [ebp+ecx*2-0x392feda6]
  40e4e2:	push   edi
  40e4e3:	test   eax,0xee76de5
  40e4e8:	ins    BYTE PTR es:[edi],dx
  40e4e9:	mov    dh,0x5f
  40e4eb:	inc    edx
  40e4ec:	cmc    
  40e4ed:	xor    DWORD PTR [ecx-0x11],esi
  40e4f0:	(bad)  
  40e4f1:	push   eax
  40e4f2:	arpl   WORD PTR [ebx],si
  40e4f4:	into   
  40e4f5:	leave  
  40e4f6:	(bad)  
  40e4f7:	adc    al,0xaf
  40e4f9:	int3   
  40e4fa:	pop    es
  40e4fb:	jae    0x40e510
  40e4fd:	push   ecx
  40e4fe:	jle    0x40e4b4
  40e500:	inc    edx
  40e501:	inc    ebx
  40e502:	pop    edi
  40e503:	fisubr WORD PTR [edx]
  40e505:	jp     0x40e518
  40e507:	loope  0x40e50a
  40e509:	ins    DWORD PTR es:[edi],dx
  40e50a:	jnp    0x40e578
  40e50c:	xor    edx,edx
  40e50e:	xchg   edi,eax
  40e50f:	in     al,0xd2
  40e511:	cwde   
  40e512:	xlat   BYTE PTR ds:[ebx]
  40e513:	aad    0xf8
  40e515:	or     eax,0xcde6668b
  40e51a:	add    BYTE PTR [ebx+0x348ad0ad],dl
  40e520:	into   
  40e521:	fldcw  WORD PTR [ecx+0x6b87b001]
  40e527:	pop    eax
  40e528:	add    al,0xb5
  40e52a:	inc    ecx
  40e52b:	xor    ebp,DWORD PTR [ecx-0x21e143c3]
  40e531:	es call 0xaef7:0xa8a6e868
  40e539:	gs xchg edi,eax
  40e53b:	pop    ss
  40e53c:	mov    BYTE PTR [edx-0x11fe7a99],dh
  40e542:	inc    esi
  40e543:	(bad)  
  40e544:	aam    0xdc
  40e546:	call   0xfb2c5e08
  40e54b:	push   eax
  40e54c:	out    dx,al
  40e54d:	jns    0x40e4fe
  40e54f:	or     al,0xd2
  40e551:	fs cdq 
  40e553:	ds inc eax
  40e555:	sbb    BYTE PTR [edx+0x10],0xc0
  40e559:	pop    ebp
  40e55a:	push   esi
  40e55b:	sahf   
  40e55c:	(bad)  
  40e55d:	xchg   ebx,eax
  40e55e:	push   ebx
  40e55f:	inc    ebx
  40e560:	cmp    ebp,0xffffffd7
  40e563:	inc    esp
  40e564:	lods   eax,DWORD PTR ds:[esi]
  40e565:	cwde   
  40e566:	dec    esp
  40e567:	shr    DWORD PTR ds:0x96b04159,1
  40e56d:	or     ebx,DWORD PTR [eax-0x15aad835]
  40e573:	cld    
  40e574:	or     BYTE PTR [esi+0x33c41c71],dh
  40e57a:	adc    esp,eax
  40e57c:	in     al,dx
  40e57d:	and    eax,0x90479d4
  40e582:	loopne 0x40e5e3
  40e584:	xchg   edi,eax
  40e585:	loopne 0x40e5bf
  40e587:	enter  0x76d2,0x26
  40e58b:	les    eax,FWORD PTR [ecx-0x55]
  40e58e:	cwde   
  40e58f:	sbb    DWORD PTR [ebp-0xac2ca94],0xf5fca1a9
  40e599:	mov    ecx,0x178a89b2
  40e59e:	xor    bh,BYTE PTR [esi]
  40e5a0:	sub    al,cl
  40e5a2:	std    
  40e5a3:	mov    esi,0x4fcc6ef3
  40e5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a9:	push   ebx
  40e5aa:	cdq    
  40e5ab:	adc    al,BYTE PTR fs:[ebp-0x3c]
  40e5af:	hlt    
  40e5b0:	(bad)  
  40e5b1:	call   0xc94d0850
  40e5b6:	retf   
  40e5b7:	fidiv  WORD PTR [esi]
  40e5b9:	or     cl,BYTE PTR [edx+0x68070254]
  40e5bf:	adc    cl,bh
  40e5c1:	ins    DWORD PTR es:[edi],dx
  40e5c2:	add    DWORD PTR [ebx+edi*8-0x4d905a85],ebx
  40e5c9:	retf   0x3506
  40e5cc:	push   edi
  40e5cd:	inc    esi
  40e5ce:	cmp    dl,BYTE PTR [esi+0x61960c5d]
  40e5d4:	inc    DWORD PTR [esp+ebx*4]
  40e5d7:	inc    edx
  40e5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d9:	cli    
  40e5da:	xchg   ecx,eax
  40e5db:	test   ah,ah
  40e5dd:	mov    eax,0x2f746946
  40e5e2:	test   DWORD PTR [edi+0x39],0x1785db8b
  40e5e9:	pop    edi
  40e5ea:	ret    0x28a3
  40e5ed:	push   ss
  40e5ee:	cwde   
  40e5ef:	cmc    
  40e5f0:	cmp    BYTE PTR [ebx+ebp*2],al
  40e5f3:	or     esp,DWORD PTR [edi-0x30]
  40e5f6:	daa    
  40e5f7:	or     eax,0x96a64e18
  40e5fc:	js     0x40e591
  40e5fe:	adc    bl,BYTE PTR [edi+0x67]
  40e601:	mov    ds:0xb6ded3b6,eax
  40e606:	cli    
  40e607:	mov    al,0x7c
  40e609:	enter  0x9f20,0xd6
  40e60d:	in     al,dx
  40e60e:	inc    eax
  40e60f:	push   eax
  40e610:	push   ss
  40e611:	(bad)  
  40e612:	ds jbe 0x40e5f7
  40e615:	fcom   QWORD PTR [esi]
  40e617:	push   ds
  40e618:	stc    
  40e619:	sahf   
  40e61a:	mov    ch,BYTE PTR [edx+0x32]
  40e61d:	xlat   BYTE PTR ds:[ebx]
  40e61e:	dec    eax
  40e61f:	lahf   
  40e620:	and    cl,BYTE PTR [eax+0x12]
  40e623:	sbb    ecx,DWORD PTR [esi]
  40e625:	xor    BYTE PTR [edx+0x14],bh
  40e628:	mov    dl,BYTE PTR [ecx-0x70]
  40e62b:	arpl   WORD PTR [edx+0x12],bp
  40e62e:	jnp    0x40e6af
  40e630:	out    0x13,al
  40e632:	into   
  40e633:	stos   DWORD PTR es:[edi],eax
  40e634:	cmp    al,0xa5
  40e636:	jecxz  0x40e6b6
  40e638:	push   ds
  40e639:	(bad)  
  40e63b:	mov    al,0xe0
  40e63d:	out    0xe3,eax
  40e63f:	push   eax
  40e640:	outs   dx,BYTE PTR ds:[esi]
  40e641:	and    DWORD PTR [ebp+0x1af4fa45],ebp
  40e647:	iret   
  40e648:	out    0x80,eax
  40e64a:	push   0x4e
  40e64c:	and    edx,0xffffff97
  40e64f:	leave  
  40e650:	into   
  40e651:	mov    edi,0x919efcb3
  40e656:	nop
  40e657:	in     al,0x2a
  40e659:	mov    eax,0xb7208ae0
  40e65e:	dec    esp
  40e65f:	pop    ecx
  40e660:	xchg   ebp,esi
  40e662:	mov    ebx,0x48cac15c
  40e667:	loopne 0x40e6c9
  40e669:	bound  esi,QWORD PTR [ecx+0x25c9e1a2]
  40e66f:	cmc    
  40e670:	mov    ebx,0x6066751b
  40e675:	xor    ch,BYTE PTR [ecx]
  40e677:	jmp    0x40e6a7
  40e679:	push   esi
  40e67a:	aaa    
  40e67b:	sub    DWORD PTR [esp+eax*1+0x46241cac],edi
  40e682:	sub    dl,al
  40e684:	inc    esp
  40e685:	call   0xaa4c4e90
  40e68a:	sub    DWORD PTR ds:0xd7a3d25c,ebp
  40e690:	out    0xca,eax
  40e692:	mov    al,ds:0x95800748
  40e697:	cmc    
  40e698:	std    
  40e699:	and    al,0x68
  40e69b:	outs   dx,DWORD PTR ds:[esi]
  40e69c:	loope  0x40e66c
  40e69e:	je     0x40e6b0
  40e6a0:	sbb    BYTE PTR [ecx+0x27],0x82
  40e6a4:	or     BYTE PTR gs:[ebp+ecx*8-0x14],bh
  40e6a9:	mov    ch,0x0
  40e6ab:	dec    esp
  40e6ac:	or     eax,0xe5d657a4
  40e6b1:	cmp    al,0xdb
  40e6b3:	jle    0x40e6b6
  40e6b5:	enter  0xcb18,0x82
  40e6b9:	mov    esp,DWORD PTR [edx+0x52]
  40e6bc:	pushf  
  40e6bd:	push   ds
  40e6be:	push   ebp
  40e6bf:	pop    esi
  40e6c0:	mov    dl,0x3d
  40e6c2:	neg    BYTE PTR [edi]
  40e6c4:	mov    ch,0xec
  40e6c6:	mov    bl,0x8e
  40e6c8:	pop    ss
  40e6c9:	(bad)  
  40e6ca:	pop    eax
  40e6cb:	int3   
  40e6cc:	cs stos DWORD PTR es:[edi],eax
  40e6ce:	not    bh
  40e6d0:	xor    eax,edi
  40e6d2:	sbb    ebx,DWORD PTR [ecx-0x1c]
  40e6d5:	sti    
  40e6d6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40e6d8:	and    eax,0x6c4a25aa
  40e6dd:	retf   0x829d
  40e6e0:	fnstenv [eax+0x3e]
  40e6e3:	retf   0xbcaf
  40e6e6:	xchg   ah,bh
  40e6e8:	xchg   esi,eax
  40e6e9:	ins    BYTE PTR es:[edi],dx
  40e6ea:	push   edi
  40e6eb:	inc    ebp
  40e6ec:	ret    
  40e6ed:	stos   DWORD PTR es:[edi],eax
  40e6ee:	mov    eax,0x85f71e96
  40e6f3:	aas    
  40e6f4:	pushf  
  40e6f5:	push   ds
  40e6f6:	ja     0x40e67c
  40e6f8:	outs   dx,DWORD PTR ds:[esi]
  40e6f9:	(bad)  
  40e6fa:	mov    al,ds:0xa429bd8d
  40e6ff:	daa    
  40e700:	mov    ebx,?
  40e702:	loop   0x40e6a1
  40e704:	inc    esi
  40e705:	les    eax,FWORD PTR [edi-0xf]
  40e708:	ret    
  40e709:	xor    al,0x62
  40e70b:	lock and eax,DWORD PTR [ecx-0xf]
  40e70f:	push   edi
  40e710:	xchg   ebp,eax
  40e711:	or     ebp,DWORD PTR [ebp-0x31b8d2f7]
  40e717:	mov    esi,0x8d572d2d
  40e71c:	mov    esp,0x94abca48
  40e721:	mov    dh,0xed
  40e723:	mov    dl,cl
  40e725:	jb     0x40e71a
  40e727:	(bad)  
  40e728:	out    dx,eax
  40e729:	hlt    
  40e72a:	xchg   DWORD PTR [eax],ebp
  40e72c:	push   edi
  40e72d:	or     eax,0x22c4929c
  40e732:	cmp    eax,0x84aa634
  40e737:	mov    DWORD PTR [ecx+0x1891a15c],ebx
  40e73d:	les    ebp,FWORD PTR [edi-0x7c]
  40e740:	inc    edx
  40e741:	pop    ebp
  40e742:	cmp    edx,DWORD PTR [eax+0x7a]
  40e745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e746:	out    0xe2,al
  40e748:	adc    eax,0x8512aff5
  40e74d:	mov    cl,0x45
  40e74f:	mov    ds:0x9e41b4d3,al
  40e754:	jge    0x40e76a
  40e756:	pop    esi
  40e757:	sbb    ah,BYTE PTR [ebx]
  40e759:	mov    esi,0x7b98e87
  40e75e:	call   0x8ae1:0x9b12a3f2
  40e765:	mov    ds:0x14259a1e,al
  40e76a:	sbb    BYTE PTR [ebx-0x33d8d593],ah
  40e770:	popa   
  40e771:	xchg   BYTE PTR [si],cl
  40e774:	scas   al,BYTE PTR es:[edi]
  40e775:	outs   dx,BYTE PTR ds:[esi]
  40e776:	add    DWORD PTR [edi],edi
  40e778:	test   eax,0xd63bee3c
  40e77d:	or     eax,DWORD PTR [ecx]
  40e77f:	dec    edx
  40e780:	pop    es
  40e781:	cmp    bl,ch
  40e783:	(bad)  
  40e784:	enter  0x5220,0x6
  40e788:	popf   
  40e789:	jo     0x40e7c4
  40e78b:	mov    esp,0xc2d12380
  40e790:	fs js  0x40e812
  40e793:	fldcw  WORD PTR [edx+0x5e]
  40e796:	out    0x8c,eax
  40e798:	or     al,0x4c
  40e79a:	inc    esp
  40e79b:	std    
  40e79c:	or     ah,ah
  40e79e:	aas    
  40e79f:	pop    eax
  40e7a0:	mov    esp,0x1d8955cf
  40e7a5:	mov    gs,WORD PTR [eax+0x4b]
  40e7a8:	sbb    eax,0x13187df
  40e7ad:	pop    eax
  40e7ae:	int3   
  40e7af:	enter  0x2839,0x3
  40e7b3:	test   al,0x27
  40e7b5:	sar    DWORD PTR [ebx+0x43],cl
  40e7b8:	lds    ebp,FWORD PTR [ecx+eax*8+0x1168b7ab]
  40e7bf:	jp     0x40e809
  40e7c1:	test   al,0xf
  40e7c3:	ja     0x40e777
  40e7c5:	xor    DWORD PTR [ebp+0x4b21b7c3],0xffffffa9
  40e7cc:	fistp  WORD PTR [eax]
  40e7ce:	and    eax,0xb625ef41
  40e7d3:	fisttp DWORD PTR [eax+0x58]
  40e7d6:	ins    DWORD PTR es:[edi],dx
  40e7d7:	stos   DWORD PTR es:[edi],eax
  40e7d8:	lock add eax,0xed8f038
  40e7de:	xchg   ecx,eax
  40e7df:	enter  0xd19a,0x54
  40e7e3:	pop    es
  40e7e4:	loop   0x40e77f
  40e7e6:	jmp    0x179b2c44
  40e7eb:	add    esi,DWORD PTR [ebp+0x507bf1fc]
  40e7f1:	sbb    al,0x41
  40e7f3:	or     BYTE PTR [esi+0x366c7b85],0x7b
  40e7fa:	cli    
  40e7fb:	pop    ecx
  40e7fc:	retf   
  40e7fd:	mov    ebp,0xdf23e45e
  40e802:	push   ss
  40e803:	cmp    BYTE PTR [edi+0x544013ff],ch
  40e809:	jns    0x40e793
  40e80b:	loope  0x40e808
  40e80d:	or     al,0xe4
  40e80f:	push   0xffffffee
  40e811:	xchg   edi,eax
  40e812:	pop    ecx
  40e813:	xlat   BYTE PTR ds:[ebx]
  40e814:	fisub  DWORD PTR [edi]
  40e816:	js     0x40e82e
  40e818:	pop    ss
  40e819:	loop   0x40e85e
  40e81b:	in     al,0x7b
  40e81d:	push   ds
  40e81e:	test   esi,ebx
  40e820:	jmp    0x4e35:0x79505dd0
  40e827:	dec    eax
  40e828:	test   DWORD PTR [edi-0x69],esi
  40e82b:	(bad)  
  40e82c:	jns    0x40e84b
  40e82e:	fistp  DWORD PTR [eax]
  40e830:	jno    0x40e7f9
  40e832:	sbb    al,0x67
  40e835:	cwde   
  40e836:	retf   0x5a9
  40e839:	mov    dl,0xde
  40e83b:	call   0x50d1:0x614e4c38
  40e842:	icebp  
  40e843:	test   eax,0x3006c2d0
  40e848:	cld    
  40e849:	and    bl,BYTE PTR [esi+0x6a]
  40e84c:	mov    eax,ds:0x7d5ed8ae
  40e851:	pop    ecx
  40e852:	int3   
  40e853:	dec    esp
  40e854:	dec    edx
  40e855:	pop    edi
  40e856:	enter  0xff25,0xca
  40e85a:	rcl    edx,cl
  40e85c:	in     al,0xde
  40e85e:	adc    ch,BYTE PTR [edx-0x1ccdc54d]
  40e864:	sbb    eax,0xccd84178
  40e869:	pop    ebx
  40e86a:	popa   
  40e86b:	(bad)  
  40e86c:	xchg   edx,eax
  40e86d:	dec    ebp
  40e86e:	jns    0x40e836
  40e870:	adc    ebp,0x62126404
  40e876:	aam    0xcb
  40e878:	cmc    
  40e879:	sub    edx,edx
  40e87b:	out    dx,al
  40e87c:	or     al,0x3a
  40e87e:	push   ebx
  40e87f:	xor    al,0xce
  40e881:	sub    al,BYTE PTR [esi+0x6659b571]
  40e887:	loope  0x40e89f
  40e889:	js     0x40e8a3
  40e88b:	outs   dx,DWORD PTR ds:[esi]
  40e88c:	clc    
  40e88d:	and    esi,edi
  40e88f:	dec    edx
  40e890:	cmp    ecx,DWORD PTR [edx]
  40e892:	push   ebx
  40e893:	pop    esp
  40e894:	mov    ch,0x10
  40e896:	jno    0x40e8ed
  40e898:	mov    al,BYTE PTR [bp+di+0x16]
  40e89c:	into   
  40e89d:	pusha  
  40e89e:	dec    eax
  40e89f:	lods   al,BYTE PTR ds:[esi]
  40e8a0:	enter  0xf777,0x69
  40e8a4:	sub    ah,ch
  40e8a6:	in     al,dx
  40e8a7:	int3   
  40e8a8:	sbb    eax,0xa76a43bf
  40e8ad:	rcr    DWORD PTR [edi+0x676f7d43],0x90
  40e8b4:	ja     0x40e923
  40e8b6:	jne    0x40e8b8
  40e8b8:	cdq    
  40e8b9:	into   
  40e8ba:	in     al,0x53
  40e8bc:	push   cs
  40e8bd:	xlat   BYTE PTR ds:[ebx]
  40e8be:	ficomp DWORD PTR [edx+0x3cdbb214]
  40e8c4:	ret    
  40e8c5:	and    eax,0x892066ab
  40e8ca:	sbb    al,0xee
  40e8cc:	adc    BYTE PTR [eax+0x19],al
  40e8cf:	push   ecx
  40e8d0:	cmp    eax,0xc3d1c02a
  40e8d5:	mov    cs,WORD PTR [esi+esi*2+0x47]
  40e8d9:	jl     0x40e8b1
  40e8db:	ins    DWORD PTR es:[edi],dx
  40e8dc:	std    
  40e8dd:	ret    0x11f2
  40e8e0:	cld    
  40e8e1:	xchg   edi,eax
  40e8e2:	sahf   
  40e8e3:	xor    DWORD PTR [ecx+ebx*4],0x3a29e1f1
  40e8ea:	mov    al,0xe0
  40e8ec:	test   DWORD PTR [eax-0x47],ebx
  40e8ef:	fimul  DWORD PTR [eax+0x3d]
  40e8f2:	aad    0x69
  40e8f4:	imul   esp,DWORD PTR [ebp-0x7e],0x1ba7ab1c
  40e8fb:	sar    DWORD PTR [esi+0x2f],1
  40e8fe:	cmp    BYTE PTR [ecx],ah
  40e900:	cmp    esp,edx
  40e902:	xor    al,0x69
  40e904:	sub    edx,edi
  40e906:	lock push esi
  40e908:	fisttp DWORD PTR [edi]
  40e90a:	xchg   ebx,eax
  40e90b:	or     BYTE PTR [ecx+0x38dcfb3c],dh
  40e911:	push   cs
  40e912:	scas   eax,DWORD PTR es:[edi]
  40e913:	aaa    
  40e914:	mov    DWORD PTR [edi-0x52],edi
  40e917:	out    0x9f,eax
  40e919:	or     eax,0x3b5b4273
  40e91e:	or     ch,BYTE PTR [ebp-0x3d0d3902]
  40e924:	pop    edx
  40e925:	ins    BYTE PTR es:[edi],dx
  40e926:	dec    edx
  40e927:	test   al,0xe6
  40e929:	jmp    0xb45a:0xd34e78cd
  40e930:	sub    eax,0xd4f476c8
  40e935:	arpl   WORD PTR [esi-0x1c692a8c],ax
  40e93b:	or     eax,0x4bb93a4d
  40e940:	out    0xb0,al
  40e942:	dec    ebx
  40e943:	mov    dh,0xec
  40e945:	and    DWORD PTR [esp+ebx*4-0x7bc5c3fd],ebx
  40e94c:	inc    ecx
  40e94d:	(bad)  
  40e94e:	or     eax,0xf7d932aa
  40e953:	inc    ebp
  40e954:	mov    cl,cl
  40e956:	mov    ebx,?
  40e958:	retf   
  40e959:	shl    BYTE PTR [edi+0x23],0x55
  40e95d:	cmp    al,0xe9
  40e95f:	hlt    
  40e960:	(bad)
  40e964:	cli    
  40e965:	lea    esp,[ebx+0x6e40c0f5]
  40e96b:	push   ds
  40e96c:	push   ebp
  40e96d:	into   
  40e96e:	pop    edx
  40e96f:	test   eax,0x5ef8d96c
  40e974:	mov    ah,BYTE PTR [eax+esi*2-0x22437e48]
  40e97b:	mov    BYTE PTR [edx+0x27],ch
  40e97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e97f:	shr    BYTE PTR [ebp+0x5d],0x80
  40e983:	and    DWORD PTR ds:[edx],edi
  40e986:	adc    edi,DWORD PTR [ebx]
  40e988:	clc    
  40e989:	push   ecx
  40e98a:	jg     0x40e9ad
  40e98c:	jnp    0x40e9bc
  40e98e:	dec    ebx
  40e98f:	cmp    ecx,ecx
  40e991:	mov    fs,esi
  40e993:	lea    esp,[esi]
  40e995:	pop    esp
  40e996:	or     eax,0x1017b7e4
  40e99b:	xchg   esi,eax
  40e99c:	lock mov al,ds:0xb20a7106
  40e9a2:	adc    ebx,esp
  40e9a4:	in     eax,dx
  40e9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a6:	xchg   edx,eax
  40e9a7:	ds es inc esi
  40e9aa:	out    0xd9,al
  40e9ac:	pop    ds
  40e9ad:	data16 cs scas al,BYTE PTR es:[edi]
  40e9b0:	inc    edi
  40e9b1:	cdq    
  40e9b2:	rol    BYTE PTR [edx],0xaf
  40e9b5:	push   ecx
  40e9b6:	mov    edi,0x555a8a18
  40e9bb:	popf   
  40e9bc:	and    DWORD PTR gs:[edi-0x52],eax
  40e9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c1:	sub    cl,dh
  40e9c3:	dec    edi
  40e9c4:	dec    edi
  40e9c5:	jp     0x40e950
  40e9c7:	fwait
  40e9c8:	mov    eax,0xd756a982
  40e9cd:	aaa    
  40e9ce:	pop    DWORD PTR [esi-0x326262cd]
  40e9d4:	clc    
  40e9d5:	jo     0x40e966
  40e9d7:	inc    esp
  40e9d8:	sbb    edx,ecx
  40e9da:	or     DWORD PTR [edi+0x7e0fef86],ebx
  40e9e0:	loopne 0x40e9d4
  40e9e2:	aad    0xaf
  40e9e4:	xchg   ebx,eax
  40e9e5:	out    dx,al
  40e9e6:	ss xchg edi,eax
  40e9e8:	scas   al,BYTE PTR es:[edi]
  40e9e9:	mov    ?,WORD PTR [ebp+edx*2+0x2fb823ad]
  40e9f0:	js     0x40e987
  40e9f2:	push   ecx
  40e9f3:	aam    0x61
  40e9f5:	retf   0x2bf
  40e9f8:	pop    ebp
  40e9f9:	fild   DWORD PTR [edi-0x6e]
  40e9fc:	mov    WORD PTR [edi-0x36],cs
  40e9ff:	xchg   edi,eax
  40ea00:	add    eax,0x8d1c3378
  40ea05:	jbe    0x40e9f6
  40ea07:	das    
  40ea08:	stos   BYTE PTR es:[edi],al
  40ea09:	xlat   BYTE PTR ds:[ebx]
  40ea0a:	cmp    esp,DWORD PTR [eax+0x8990972]
  40ea10:	stc    
  40ea11:	pop    eax
  40ea12:	popa   
  40ea13:	arpl   WORD PTR [ecx+0x16],bp
  40ea16:	in     eax,dx
  40ea17:	std    
  40ea18:	sub    al,0x40
  40ea1a:	lods   al,BYTE PTR ds:[esi]
  40ea1b:	sub    DWORD PTR [edx+0x33],esp
  40ea1e:	cld    
  40ea1f:	adc    dl,BYTE PTR [ecx]
  40ea21:	call   0x505e229b
  40ea26:	fdiv   QWORD PTR [edi+0x21]
  40ea29:	test   al,0x85
  40ea2b:	dec    esp
  40ea2c:	hlt    
  40ea2d:	in     al,0x5
  40ea2f:	out    0xd0,al
  40ea31:	add    ecx,DWORD PTR [edi+0x6172ffa3]
  40ea37:	arpl   WORD PTR [edi+0x56],bx
  40ea3a:	xchg   ebp,eax
  40ea3b:	mov    cs,WORD PTR [ebx]
  40ea3d:	neg    DWORD PTR [edx+0x11]
  40ea40:	ror    BYTE PTR [ebx],1
  40ea42:	jecxz  0x40e9de
  40ea44:	enter  0x6370,0xbd
  40ea48:	xor    BYTE PTR [ebx],al
  40ea4a:	pop    ebx
  40ea4b:	sahf   
  40ea4c:	pop    ebp
  40ea4d:	and    DWORD PTR [esi+ebx*4+0x6d],ecx
  40ea51:	jnp    0x40ea2b
  40ea53:	mov    edx,0xe4c016f3
  40ea58:	push   ebp
  40ea59:	inc    ecx
  40ea5a:	add    al,BYTE PTR [esi]
  40ea5c:	mov    dh,0x50
  40ea5e:	jo     0x40ea4c
  40ea60:	adc    DWORD PTR [eax+0x3b],ebp
  40ea63:	mov    al,ds:0xbb7c2634
  40ea68:	scas   eax,DWORD PTR es:[edi]
  40ea69:	or     eax,0xa44f302d
  40ea6e:	fwait
  40ea6f:	adc    al,0x72
  40ea71:	jnp    0x40ea5f
  40ea73:	pop    ebp
  40ea74:	aaa    
  40ea75:	xchg   edi,eax
  40ea76:	push   edx
  40ea77:	fs inc esp
  40ea79:	scas   eax,DWORD PTR es:[edi]
  40ea7a:	lods   eax,DWORD PTR ds:[esi]
  40ea7b:	mov    BYTE PTR [eax+0x2d8e3acf],dl
  40ea81:	xchg   edi,eax
  40ea82:	mov    edx,0x3292d532
  40ea87:	stos   BYTE PTR es:[edi],al
  40ea88:	aam    0xf1
  40ea8a:	int3   
  40ea8b:	aad    0x26
  40ea8d:	ins    DWORD PTR es:[edi],dx
  40ea8e:	and    DWORD PTR [edi-0x619a6d73],0xd6d63be2
  40ea98:	mov    dh,BYTE PTR ds:0xffaae021
  40ea9e:	bound  edi,QWORD PTR [esi]
  40eaa0:	jne    0x40eac7
  40eaa2:	aaa    
  40eaa3:	jecxz  0x40eace
  40eaa5:	lock hlt 
  40eaa7:	cdq    
  40eaa8:	add    eax,0xaab6038f
  40eaad:	dec    esi
  40eaae:	(bad)  
  40eaaf:	sbb    ecx,DWORD PTR [ebx]
  40eab1:	fcom   DWORD PTR [edi+0x5e88a036]
  40eab7:	jp     0x40ead4
  40eab9:	jne    0x40ea94
  40eabb:	dec    edx
  40eabc:	stos   BYTE PTR es:[edi],al
  40eabd:	adc    bl,ch
  40eabf:	daa    
  40eac0:	mov    bl,0x13
  40eac2:	xor    edi,DWORD PTR [eax+edi*1-0x70]
  40eac6:	icebp  
  40eac7:	(bad)  
  40eac8:	cmp    DWORD PTR [eax],ebp
  40eaca:	les    esp,FWORD PTR [edx+ecx*1+0x16aa339e]
  40ead1:	call   0x2ce4:0x679bc117
  40ead8:	call   DWORD PTR [edx+0x31c39ad8]
  40eade:	lock jle 0x40eb2f
  40eae1:	daa    
  40eae2:	or     DWORD PTR [eax+0x1d],edx
  40eae5:	jne    0x40eb0c
  40eae7:	xchg   edx,eax
  40eae8:	ret    0x5fe5
  40eaeb:	loop   0x40eb1a
  40eaed:	(bad)  
  40eaef:	mov    al,ds:0xc3e7fce2
  40eaf4:	inc    edi
  40eaf5:	popa   
  40eaf6:	jbe    0x40eb15
  40eaf8:	jecxz  0x40eb39
  40eafa:	rol    BYTE PTR [ebx-0x6ba6681],cl
  40eb00:	mov    ah,0xe7
  40eb02:	mov    edx,0xa6e19937
  40eb07:	push   ss
  40eb08:	shr    DWORD PTR [edi-0x22dea499],0xba
  40eb0f:	mov    bh,0xef
  40eb11:	clc    
  40eb12:	ins    DWORD PTR es:[edi],dx
  40eb13:	gs sub BYTE PTR cs:[edi+0xa9770b1],dl
  40eb1b:	jbe    0x40eb04
  40eb1d:	and    edx,ebp
  40eb1f:	xchg   ecx,eax
  40eb20:	nop
  40eb21:	sub    DWORD PTR [esi+0x2],ebx
  40eb24:	in     al,0x33
  40eb26:	add    dh,BYTE PTR [edx+edx*8-0x627f1596]
  40eb2d:	pop    edi
  40eb2e:	inc    ebx
  40eb2f:	mov    ecx,0x8d10c428
  40eb34:	mov    esi,0xba5f0a82
  40eb39:	enter  0x6cf3,0x4f
  40eb3d:	xchg   ebx,eax
  40eb3e:	jns    0x40eadb
  40eb40:	xchg   edi,eax
  40eb41:	cmp    ax,0x1ea0
  40eb45:	jg     0x40ead1
  40eb47:	inc    ebp
  40eb48:	sahf   
  40eb49:	lahf   
  40eb4a:	mov    DWORD PTR [ecx+0x6cd15d0],edx
  40eb50:	ret    0xa7d3
  40eb53:	mul    bl
  40eb55:	sbb    DWORD PTR [ebx+0x65],0xffffffcd
  40eb59:	xchg   esi,eax
  40eb5a:	xor    al,0x40
  40eb5c:	setnp  BYTE PTR [ecx-0x27]
  40eb60:	ss data16 in al,0x3d
  40eb64:	xchg   ebx,eax
  40eb65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb66:	jg     0x40eaeb
  40eb68:	adc    ecx,DWORD PTR [edi-0x5cc6e6ed]
  40eb6e:	push   edi
  40eb6f:	(bad)  
  40eb71:	sbb    al,0x5e
  40eb73:	mov    esi,0x590fbf3f
  40eb78:	mov    ebx,0x91c971cd
  40eb7d:	pop    edi
  40eb7e:	xor    al,0x0
  40eb80:	jbe    0x40ebee
  40eb82:	jmp    0x40eb8c
  40eb84:	jmp    esp
  40eb86:	mov    dh,0x81
  40eb88:	mov    ebp,0xc59613ec
  40eb8d:	addr16 int 0x64
  40eb90:	mov    edi,0xb63dd01e
  40eb95:	popf   
  40eb96:	pop    ss
  40eb97:	pusha  
  40eb98:	jg     0x40ebce
  40eb9a:	jo     0x40eb6e
  40eb9c:	adc    al,0xf3
  40eb9e:	push   es
  40eb9f:	shl    BYTE PTR [ebx+eiz*1-0x43dacb25],0x19
  40eba7:	inc    eax
  40eba8:	pop    ecx
  40eba9:	cmp    ecx,0xffffff88
  40ebac:	jne    0x40eb41
  40ebae:	lds    edx,FWORD PTR ds:0xfb7b691f
  40ebb4:	ret    
  40ebb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebb6:	lahf   
  40ebb7:	add    eax,DWORD PTR [eax-0x6e]
  40ebba:	arpl   WORD PTR gs:[edx],di
  40ebbd:	loope  0x40ebac
  40ebbf:	mov    edi,0xe00ce150
  40ebc4:	pop    es
  40ebc5:	inc    esi
  40ebc6:	stc    
  40ebc7:	int    0x8b
  40ebc9:	repnz mov esi,0xa6da4454
  40ebcf:	mov    dh,0x73
  40ebd1:	es (bad) 
  40ebd3:	loope  0x40ebd8
  40ebd5:	adc    eax,0x5442db9
  40ebda:	sub    DWORD PTR [eax],0xffffffe6
  40ebdd:	pop    ss
  40ebde:	nop
  40ebdf:	sti    
  40ebe0:	mov    edi,0x9e98fcad
  40ebe5:	push   0x49
  40ebe7:	aaa    
  40ebe8:	fsubp  st(6),st
  40ebea:	clc    
  40ebeb:	mov    esp,0x9bba210c
  40ebf0:	inc    esi
  40ebf1:	inc    ebp
  40ebf2:	sub    ecx,DWORD PTR [eax+0x3]
  40ebf5:	inc    edx
  40ebf6:	inc    ecx
  40ebf7:	sbb    bh,BYTE PTR [ecx+0x145178b4]
  40ebfd:	test   eax,0xbe67798f
  40ec02:	push   esi
  40ec03:	loopne 0x40ebc2
  40ec05:	test   al,0x55
  40ec07:	sub    DWORD PTR [ebx+edi*1],ecx
  40ec0a:	mov    cl,0xb1
  40ec0c:	idiv   BYTE PTR [ebx+0x54affdea]
  40ec12:	test   eax,0x2c30b1d9
  40ec17:	dec    ebp
  40ec18:	mov    ds,WORD PTR [edi+0x603c7536]
  40ec1e:	les    ecx,FWORD PTR [esi]
  40ec20:	cmp    al,0x3d
  40ec22:	out    0x6d,eax
  40ec24:	cwde   
  40ec25:	scas   eax,DWORD PTR es:[edi]
  40ec26:	push   ebx
  40ec27:	xor    eax,0x4ee6330
  40ec2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec2d:	mov    bl,BYTE PTR [ebp+0x67a6a403]
  40ec33:	dec    eax
  40ec34:	mov    cs,WORD PTR cs:[ebx-0x54]
  40ec38:	out    dx,eax
  40ec39:	ds dec ecx
  40ec3b:	or     al,0x6a
  40ec3d:	mov    ah,0xf6
  40ec3f:	jge    0x40ecb8
  40ec41:	je     0x40ec29
  40ec43:	mov    ds:0x974cdeab,al
  40ec48:	pop    esi
  40ec49:	hlt    
  40ec4a:	push   ebp
  40ec4b:	inc    ebx
  40ec4c:	jne    0x40ecc8
  40ec4e:	cmp    esp,DWORD PTR [esi]
  40ec50:	je     0x40ecac
  40ec52:	adc    DWORD PTR [ebp+eiz*4-0x646a361d],ecx
  40ec59:	xchg   ebp,eax
  40ec5a:	in     eax,0xf
  40ec5c:	jmp    0xb6fe04ad
  40ec61:	dec    ecx
  40ec62:	aas    
  40ec63:	push   edi
  40ec64:	nop
  40ec65:	fadd   DWORD PTR [ebx+0x5087e859]
  40ec6b:	(bad)  
  40ec6c:	jnp    0x40ec91
  40ec6e:	hlt    
  40ec6f:	dec    ebp
  40ec70:	xor    eax,0x1c9b5904
  40ec75:	outs   dx,DWORD PTR ds:[esi]
  40ec76:	push   esp
  40ec77:	add    ch,dh
  40ec79:	icebp  
  40ec7a:	(bad)  
  40ec7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7c:	mov    BYTE PTR [ecx],bl
  40ec7e:	xchg   esi,eax
  40ec7f:	aas    
  40ec80:	xchg   DWORD PTR [edi-0x180dd17a],esp
  40ec86:	jnp    0x40ecd9
  40ec88:	fcmove st,st(6)
  40ec8a:	mov    esp,0x474f8a81
  40ec8f:	or     BYTE PTR [edx+ebx*8],bl
  40ec92:	repnz push eax
  40ec94:	(bad)  [eax-0x4ac977e8]
  40ec9a:	(bad)  
  40ec9b:	iret   
  40ec9c:	std    
  40ec9d:	sub    bl,BYTE PTR [eax+0x68]
  40eca0:	mov    bl,0x79
  40eca2:	iret   
  40eca3:	popa   
  40eca4:	adc    DWORD PTR [edi+0x3448fde7],esi
  40ecaa:	and    ecx,ecx
  40ecac:	push   ds
  40ecad:	xlat   BYTE PTR ds:[ebx]
  40ecae:	retf   0x434e
  40ecb1:	aam    0x34
  40ecb3:	xchg   esp,eax
  40ecb4:	add    ch,BYTE PTR ds:0xac886c6e
  40ecba:	dec    ebp
  40ecbb:	jl     0x40ec94
  40ecbd:	jl     0x40ed3d
  40ecbf:	(bad)  
  40ecc0:	sbb    BYTE PTR [eax],dh
  40ecc2:	sub    al,0x39
  40ecc4:	leave  
  40ecc5:	aad    0x13
  40ecc7:	push   edi
  40ecc8:	jbe    0x40ec58
  40ecca:	sti    
  40eccb:	mov    al,cl
  40eccd:	pop    esi
  40ecce:	fstp   TBYTE PTR [esp+edi*2-0x5949b2cf]
  40ecd5:	fistp  WORD PTR [edi+0x48585a0a]
  40ecdb:	into   
  40ecdc:	sub    edx,DWORD PTR [ebx+0x3f]
  40ecdf:	adc    al,0xb5
  40ece1:	jae    0x40ece8
  40ece3:	test   DWORD PTR [esi],eax
  40ece5:	inc    esi
  40ece6:	cmp    ah,al
  40ece8:	int    0xf8
  40ecea:	sbb    esi,eax
  40ecec:	adc    DWORD PTR [edi+0xc],edx
  40ecef:	push   esi
  40ecf0:	pop    ebp
  40ecf1:	adc    al,0x70
  40ecf3:	call   0x449a1aad
  40ecf8:	sub    al,0xb9
  40ecfa:	add    cl,BYTE PTR [edx-0x2c]
  40ecfd:	sahf   
  40ecfe:	add    al,bh
  40ed00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed01:	sbb    al,0x94
  40ed03:	pop    es
  40ed04:	mov    ds:0x316f6c72,eax
  40ed09:	retf   
  40ed0a:	mov    cl,al
  40ed0c:	sahf   
  40ed0d:	pop    es
  40ed0e:	sub    DWORD PTR ds:0x4f3093a4,0x88ac7520
  40ed18:	aam    0xd1
  40ed1a:	cdq    
  40ed1b:	ficomp DWORD PTR [edi-0x7f0ad613]
  40ed21:	loopne 0x40ed7e
  40ed23:	adc    bh,BYTE PTR [edi]
  40ed25:	aas    
  40ed26:	pop    ds
  40ed27:	or     BYTE PTR [edi-0x41],bl
  40ed2a:	inc    ecx
  40ed2b:	fs mov eax,0xff89d109
  40ed31:	mov    ch,0x6f
  40ed33:	fistp  QWORD PTR ds:[eax]
  40ed36:	popf   
  40ed37:	mov    eax,0xae19058a
  40ed3c:	or     DWORD PTR [edi-0x6635ffc8],ebx
  40ed42:	sub    ah,BYTE PTR [esi+0x4fc4c621]
  40ed48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed49:	mov    ebx,0x75475a1
  40ed4e:	sbb    ebx,DWORD PTR gs:[esi-0x7c]
  40ed52:	push   ecx
  40ed53:	call   0xb414:0x95bf0be0
  40ed5a:	dec    ebx
  40ed5b:	sub    cl,BYTE PTR [esi-0x47]
  40ed5e:	cmp    al,0x97
  40ed60:	adc    eax,0x46128702
  40ed65:	sub    DWORD PTR [ecx-0x2909d0f1],esp
  40ed6b:	jns    0x40ed76
  40ed6d:	push   edi
  40ed6e:	fbstp  TBYTE PTR [ebp+ecx*1-0x20]
  40ed72:	int3   
  40ed73:	rcl    BYTE PTR [ebp+0x7d727323],0xa8
  40ed7a:	and    eax,0x3db621c6
  40ed7f:	fcmovb st,st(0)
  40ed81:	inc    edi
  40ed82:	dec    esp
  40ed83:	add    esi,DWORD PTR [edx+ecx*2]
  40ed86:	(bad)  
  40ed87:	push   ss
  40ed88:	push   edi
  40ed89:	sub    BYTE PTR [eax],bl
  40ed8b:	xor    DWORD PTR [esi-0x482a386d],0xffffff85
  40ed92:	cwde   
  40ed93:	xchg   DWORD PTR [ecx+0x679cd7c],eax
  40ed99:	iret   
  40ed9a:	push   edi
  40ed9b:	or     eax,0xe4ecd0d
  40eda0:	mov    WORD PTR [eax],?
  40eda2:	jle    0x40ede0
  40eda4:	(bad)  
  40eda6:	ins    BYTE PTR es:[edi],dx
  40eda7:	cmp    BYTE PTR [esi-0x22],ch
  40edaa:	add    al,BYTE PTR [ecx-0x5c7605e8]
  40edb0:	daa    
  40edb1:	inc    edx
  40edb2:	dec    ebx
  40edb3:	lds    edx,FWORD PTR [ebp*4+0x634db7fb]
  40edba:	sbb    al,0x55
  40edbc:	(bad)  
  40edbe:	and    DWORD PTR [esi+0x71a8622c],ebx
  40edc4:	jbe    0x40edc8
  40edc6:	es ja  0x40ee0b
  40edc9:	cwde   
  40edca:	inc    esp
  40edcb:	jecxz  0x40ed6d
  40edcd:	leave  
  40edce:	in     eax,dx
  40edcf:	jno    0x40ee48
  40edd1:	sbb    ebp,DWORD PTR [esi-0x2f]
  40edd4:	lock add ebx,DWORD PTR ds:0xd9fd0c92
  40eddb:	stc    
  40eddc:	loopne 0x40ee27
  40edde:	std    
  40eddf:	adc    ebp,ebp
  40ede1:	out    0xeb,eax
  40ede3:	sub    cl,0xf6
  40ede6:	or     esi,DWORD PTR [edi+ebx*4+0x7a]
  40edea:	pop    es
  40edeb:	push   ss
  40edec:	mov    al,ds:0x834ec74b
  40edf1:	mov    ds:0x1d026c9f,eax
  40edf6:	in     al,0x4
  40edf8:	fild   WORD PTR [edi]
  40edfa:	dec    ebx
  40edfb:	(bad)  
  40edfc:	ror    ch,1
  40edfe:	push   0x88721998
  40ee03:	add    al,0x7f
  40ee05:	mov    ebp,ebp
  40ee07:	mov    eax,0x27d41f3e
  40ee0c:	and    ebx,DWORD PTR fs:0x344a4656
  40ee13:	xchg   edx,edi
  40ee15:	test   DWORD PTR [ebx],edx
  40ee17:	push   cs
  40ee18:	xor    BYTE PTR [eax],0xb5
  40ee1b:	jno    0x40ee66
  40ee1d:	mov    ecx,0x7dad3c88
  40ee22:	add    eax,0xe2c9db3
  40ee27:	dec    esi
  40ee28:	cmp    BYTE PTR [edi],0x94
  40ee2b:	jg     0x40edfb
  40ee2d:	mov    ds:0xe4eb3926,eax
  40ee32:	sub    BYTE PTR [ebx-0x2e],dh
  40ee35:	adc    DWORD PTR [edi-0x4ba5f1b9],ecx
  40ee3b:	aad    0x4d
  40ee3d:	lods   al,BYTE PTR ds:[esi]
  40ee3e:	xor    BYTE PTR [ebx+0x457a9097],al
  40ee44:	aaa    
  40ee45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee46:	lods   al,BYTE PTR ds:[esi]
  40ee47:	sti    
  40ee48:	and    BYTE PTR [edx+edx*4],al
  40ee4b:	sbb    eax,0xd08e417f
  40ee51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee52:	push   ebp
  40ee53:	push   cs
  40ee54:	sub    al,0x1b
  40ee56:	adc    dh,BYTE PTR [edi]
  40ee58:	retf   
  40ee59:	cs xor ch,dl
  40ee5c:	sbb    al,0x21
  40ee5e:	mov    ecx,0x6c8c0521
  40ee63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee64:	fdecstp 
  40ee66:	xchg   edi,eax
  40ee67:	loop   0x40eeca
  40ee69:	popf   
  40ee6a:	inc    ebx
  40ee6b:	rol    BYTE PTR [edx],0x80
  40ee6e:	pop    ebp
  40ee6f:	push   DWORD PTR [edi-0x5c52800c]
  40ee75:	dec    edi
  40ee76:	push   esp
  40ee77:	xor    al,0x94
  40ee79:	cdq    
  40ee7a:	mov    ds:0x86c8c7dd,eax
  40ee7f:	neg    BYTE PTR [ebx+eax*1+0x1fc1765f]
  40ee86:	adc    dh,BYTE PTR [edi-0x3cccf98]
  40ee8c:	loopne 0x40ee3c
  40ee8e:	jg     0x40ee65
  40ee90:	mov    dh,0x5d
  40ee92:	xchg   ecx,eax
  40ee93:	push   eax
  40ee94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee95:	or     al,0x2a
  40ee97:	mov    BYTE PTR [esi-0x40fc77d7],dl
  40ee9d:	shl    DWORD PTR [ecx],0x79
  40eea0:	repnz xchg ecx,eax
  40eea2:	stos   DWORD PTR es:[edi],eax
  40eea3:	das    
  40eea4:	push   ebx
  40eea5:	mov    al,ds:0xa9098d3b
  40eeaa:	outs   dx,DWORD PTR ds:[esi]
  40eeab:	pusha  
  40eeac:	sub    DWORD PTR [ebx],0xffffffcd
  40eeaf:	sub    BYTE PTR [edi+0x3b],cl
  40eeb2:	(bad)  
  40eeb3:	jb     0x40ee40
  40eeb5:	adc    dh,BYTE PTR [eax]
  40eeb7:	cmp    BYTE PTR [ebp+edi*2-0x5e567b81],bl
  40eebe:	test   al,0x8c
  40eec0:	push   edx
  40eec1:	shl    DWORD PTR [edi],0x66
  40eec4:	inc    edx
  40eec5:	je     0x40ee86
  40eec7:	and    edx,DWORD PTR [edi-0x7a997305]
  40eecd:	pop    edx
  40eece:	jbe    0x40eea9
  40eed0:	stc    
  40eed1:	hlt    
  40eed2:	adc    ch,dl
  40eed4:	ret    0x86e4
  40eed7:	sub    DWORD PTR [edx-0x2d],0x29
  40eedb:	shl    BYTE PTR [ecx-0x52cbc379],1
  40eee1:	sahf   
  40eee2:	std    
  40eee3:	adc    ecx,DWORD PTR [esi-0x33]
  40eee6:	sbb    al,0xeb
  40eee8:	push   esi
  40eee9:	sub    DWORD PTR [edi+0x4ec9144],edi
  40eeef:	pop    ecx
  40eef0:	jo     0x40eea5
  40eef2:	ret    0x351b
  40eef5:	sbb    eax,0x73b15904
  40eefa:	xor    ecx,DWORD PTR [eax-0x738c2b22]
  40ef00:	inc    esi
  40ef01:	cmp    ch,ah
  40ef03:	daa    
  40ef04:	push   ebx
  40ef05:	stc    
  40ef06:	cmp    edx,DWORD PTR [ebx+0x53]
  40ef09:	cmp    DWORD PTR [edi-0xa],ebp
  40ef0c:	sbb    al,0xb
  40ef0e:	add    al,0x31
  40ef10:	or     ebx,edx
  40ef12:	scas   eax,DWORD PTR es:[edi]
  40ef13:	test   ebx,0x68228db3
  40ef19:	test   al,0x8b
  40ef1b:	repnz arpl WORD PTR [ecx],dx
  40ef1e:	mov    dl,BYTE PTR [eax-0x79]
  40ef21:	sbb    BYTE PTR [ecx],0x87
  40ef24:	inc    esp
  40ef25:	cmp    eax,0x564d564b
  40ef2a:	aaa    
  40ef2b:	sbb    dl,BYTE PTR [esi+esi*8]
  40ef2e:	lock dec ebx
  40ef30:	jp     0x40eeeb
  40ef32:	cmc    
  40ef33:	mov    al,ds:0x62952b5a
  40ef38:	xchg   ebx,eax
  40ef39:	dec    esp
  40ef3a:	sti    
  40ef3b:	dec    ebx
  40ef3c:	ror    DWORD PTR [edx],1
  40ef3e:	ins    BYTE PTR es:[edi],dx
  40ef3f:	inc    ecx
  40ef40:	xor    cl,bl
  40ef42:	je     0x40ef42
  40ef44:	pop    ebp
  40ef45:	mov    dh,0x97
  40ef47:	inc    ecx
  40ef48:	in     eax,0x5f
  40ef4a:	dec    ebx
  40ef4b:	add    ah,BYTE PTR [esi]
  40ef4d:	call   FWORD PTR [esi]
  40ef4f:	call   0xcfd3ac07
  40ef54:	int    0xc8
  40ef56:	lahf   
  40ef57:	out    dx,al
  40ef58:	sub    DWORD PTR [ebx+0x1d],ebp
  40ef5b:	outs   dx,DWORD PTR ds:[esi]
  40ef5c:	dec    edi
  40ef5d:	push   es
  40ef5e:	cmp    eax,0xad580a3b
  40ef63:	or     eax,DWORD PTR [ebp+eiz*1+0x50]
  40ef67:	cmc    
  40ef68:	mov    ch,0x87
  40ef6a:	mov    ch,0xbd
  40ef6c:	and    eax,eax
  40ef6e:	sti    
  40ef6f:	push   ebx
  40ef70:	xchg   ebx,eax
  40ef71:	sbb    cl,BYTE PTR [ebx+edx*4+0x20f72a73]
  40ef78:	dec    ebx
  40ef79:	xchg   edx,eax
  40ef7a:	das    
  40ef7b:	imul   ebp,DWORD PTR [edi-0x3e0648e0],0x6a
  40ef82:	in     eax,0x9e
  40ef84:	retf   
  40ef85:	and    ecx,DWORD PTR [edi]
  40ef87:	jns    0x40ef90
  40ef89:	iret   
  40ef8a:	cli    
  40ef8b:	mov    ch,0x87
  40ef8d:	adc    ax,0x11b
  40ef91:	fucomi st,st(6)
  40ef93:	fisttp WORD PTR [ebx+0x2]
  40ef96:	lock mov WORD PTR [esi+ecx*1-0x73],fs
  40ef9b:	nop
  40ef9c:	js     0x40efb2
  40ef9e:	mov    ah,0x7b
  40efa0:	fs push cs
  40efa2:	popf   
  40efa3:	jmp    0x40efc1
  40efa5:	stc    
  40efa6:	sub    al,0x53
  40efa8:	jno    0x40ef87
  40efaa:	inc    esi
  40efab:	mov    DWORD PTR [edx+0x24a521d7],esi
  40efb1:	pop    ss
  40efb2:	ja     0x40ef74
  40efb4:	and    bh,bl
  40efb6:	js     0x40ef89
  40efb8:	addr16 mov eax,esi
  40efbb:	shr    DWORD PTR [esi-0x2ffc6fc3],0x88
  40efc2:	pop    ebx
  40efc3:	mov    ah,0x5c
  40efc5:	iret   
  40efc6:	sub    DWORD PTR [ebx],edx
  40efc8:	sub    BYTE PTR [ecx],bl
  40efca:	mov    gs,edi
  40efcc:	inc    edx
  40efcd:	test   DWORD PTR [edx+ecx*2-0x1288aea9],edx
  40efd4:	and    eax,0x3752cdf7
  40efd9:	shr    BYTE PTR [eax],1
  40efdb:	mov    esi,0xe1ce1788
  40efe0:	les    esp,FWORD PTR [ebp+0x3dde5b18]
  40efe6:	cmp    dh,BYTE PTR [edx-0x12d0bb37]
  40efec:	jmp    0x40eff3
  40efee:	jne    0x40eff8
  40eff0:	mov    edx,0xd05c8d2
  40eff5:	test   al,0xfa
  40eff7:	jb     0x40efc3
  40eff9:	mov    ah,0x3a
  40effb:	mov    dl,ch
  40effd:	gs mov esi,0x45ea0937
  40f003:	mov    esi,0x8ee62fc2
  40f008:	fsub   QWORD PTR [ebp-0x5c]
  40f00b:	pusha  
  40f00c:	les    ebp,FWORD PTR [edi]
  40f00e:	mov    ch,0x8
  40f010:	jp     0x40f070
  40f012:	iret   
  40f013:	dec    esp
  40f014:	jecxz  0x40f046
  40f016:	(bad)  
  40f017:	xchg   ebp,eax
  40f018:	test   BYTE PTR [ebx+0x718beb4f],0xd2
  40f01f:	mov    ebx,0xf7af3d97
  40f024:	(bad)  
  40f025:	push   ebp
  40f026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f027:	sub    eax,0x47854ac6
  40f02c:	dec    ebp
  40f02d:	push   edi
  40f02e:	push   ebx
  40f02f:	adc    DWORD PTR [eax+0x70],edx
  40f032:	xor    eax,0xc5bd8598
  40f037:	add    esp,DWORD PTR [esp+esi*2]
  40f03a:	aad    0xf1
  40f03c:	sahf   
  40f03d:	mov    esp,0x64fa960f
  40f042:	mov    eax,0xbb63b4b6
  40f047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f048:	or     BYTE PTR [eax],bl
  40f04a:	clc    
  40f04b:	stos   BYTE PTR es:[edi],al
  40f04c:	js     0x40f06e
  40f04e:	push   ecx
  40f04f:	inc    esi
  40f050:	cdq    
  40f051:	add    edx,edx
  40f053:	push   0x48
  40f055:	cwde   
  40f056:	mov    al,0xd9
  40f058:	iret   
  40f059:	stos   DWORD PTR es:[edi],eax
  40f05a:	push   ecx
  40f05b:	xchg   esi,eax
  40f05c:	mov    dh,0x25
  40f05e:	adc    DWORD PTR [esi-0x36],edx
  40f061:	daa    
  40f062:	adc    eax,0x4a4611b8
  40f067:	dec    edi
  40f068:	cli    
  40f069:	add    eax,0x9de8c083
  40f06e:	sbb    BYTE PTR [edx+0x234c7a34],ch
  40f074:	adc    bh,BYTE PTR gs:[edx-0x6c]
  40f078:	adc    eax,0x7e6bdd09
  40f07d:	dec    esi
  40f07e:	or     eax,0xed9e6766
  40f083:	dec    ebx
  40f084:	mov    ch,0x71
  40f086:	rcr    DWORD PTR [ecx+0x7957b284],1
  40f08c:	lea    edi,[ecx+0x7cd5595f]
  40f092:	sub    bl,ch
  40f094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f095:	sbb    bh,BYTE PTR [edi+0x4a]
  40f098:	call   0x8d69:0x32ea174c
  40f09f:	outs   dx,DWORD PTR ds:[esi]
  40f0a0:	hlt    
  40f0a1:	inc    edx
  40f0a2:	xchg   BYTE PTR [edi-0x7cc34a31],dl
  40f0a8:	mov    ah,0xbd
  40f0aa:	mul    BYTE PTR [eax]
  40f0ac:	add    DWORD PTR [ecx+0x690fda22],ebp
  40f0b2:	aam    0xa2
  40f0b4:	xchg   esp,eax
  40f0b5:	xor    ebx,DWORD PTR [eax-0x50]
  40f0b8:	mov    DWORD PTR [edx+0x34585ee1],ecx
  40f0be:	adc    DWORD PTR [ebx],eax
  40f0c0:	arpl   WORD PTR ds:0xbace8bb2,bx
  40f0c6:	sub    ch,ah
  40f0c8:	pop    ebx
  40f0c9:	clc    
  40f0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0cb:	lahf   
  40f0cc:	mov    al,ds:0x386d0ac4
  40f0d1:	xchg   ecx,eax
  40f0d2:	xor    eax,0x2ef68d7d
  40f0d7:	mov    ebp,?
  40f0d9:	test   DWORD PTR [ecx],edx
  40f0db:	push   esp
  40f0dc:	std    
  40f0dd:	xor    DWORD PTR [edi],edx
  40f0df:	push   eax
  40f0e0:	(bad)  
  40f0e2:	cmpxchg BYTE PTR [edi+0x36],al
  40f0e6:	int    0xf6
  40f0e8:	adc    DWORD PTR [ebx-0x31b1e599],eax
  40f0ee:	inc    esi
  40f0ef:	adc    eax,0x60d99fae
  40f0f4:	mov    ds:0x1f0bc3c8,eax
  40f0f9:	push   esp
  40f0fa:	(bad)  
  40f0fc:	sar    BYTE PTR [ecx-0x24],0x66
  40f100:	and    edx,DWORD PTR [ebp-0x6d]
  40f103:	ja     0x40f089
  40f105:	sbb    al,0x9d
  40f107:	jns    0x40f08b
  40f109:	mov    esp,0x7a5cf233
  40f10e:	push   ecx
  40f10f:	ret    
  40f110:	pop    ss
  40f111:	cli    
  40f112:	lods   al,BYTE PTR ds:[esi]
  40f113:	ret    0x4aaa
  40f116:	xchg   ecx,eax
  40f117:	push   ds
  40f118:	pop    esp
  40f119:	push   esp
  40f11a:	and    al,BYTE PTR [ecx]
  40f11c:	imul   eax,DWORD PTR [edx+0x5a],0x8a7c98d1
  40f123:	ss stos DWORD PTR es:[edi],eax
  40f125:	mov    ah,BYTE PTR [ecx+eiz*8+0x7eed333f]
  40f12c:	push   0xffffff9a
  40f12e:	test   BYTE PTR [eax-0x7b],bh
  40f131:	jb     0x40f175
  40f133:	sar    dl,1
  40f135:	mov    bl,BYTE PTR [ebp+ebp*8-0x619fbb76]
  40f13c:	pop    es
  40f13d:	xchg   ecx,eax
  40f13e:	rol    dl,1
  40f140:	and    cl,BYTE PTR [esi-0x6edced6f]
  40f146:	out    0xe1,al
  40f148:	mov    edx,0x7f1038ae
  40f14d:	push   edx
  40f14e:	fidiv  WORD PTR [eax+0x4e]
  40f151:	out    dx,eax
  40f152:	and    DWORD PTR [ebx+0x316f8999],ecx
  40f158:	out    dx,eax
  40f159:	in     eax,dx
  40f15a:	jecxz  0x40f110
  40f15c:	in     al,dx
  40f15d:	or     DWORD PTR [eax],esp
  40f15f:	leave  
  40f160:	call   0x983a:0x80e1de32
  40f167:	outs   dx,BYTE PTR ds:[esi]
  40f168:	lods   eax,DWORD PTR ds:[esi]
  40f169:	xlat   BYTE PTR ds:[ebx]
  40f16a:	sub    al,0x4
  40f16c:	mov    gs,eax
  40f16e:	dec    ebp
  40f16f:	jg     0x40f1e2
  40f171:	nop
  40f172:	mov    bl,0xb7
  40f174:	mov    bl,0x29
  40f176:	mov    eax,0xcc895a13
  40f17b:	popa   
  40f17c:	retf   
  40f17d:	fidivr DWORD PTR [ebx-0x26164f5a]
  40f183:	pop    eax
  40f184:	js     0x40f1dc
  40f186:	and    BYTE PTR [ebp-0x3416fee3],bh
  40f18c:	xchg   edi,eax
  40f18d:	mov    WORD PTR [edx],gs
  40f18f:	jmp    0xa259:0x333a7def
  40f196:	nop
  40f197:	jo     0x40f162
  40f199:	xchg   bx,ax
  40f19b:	adc    esp,edx
  40f19d:	mov    cs,eax
  40f19f:	(bad)  
  40f1a0:	cmp    ebx,DWORD PTR [ebx-0xc]
  40f1a3:	(bad)  
  40f1a4:	test   al,0x15
  40f1a7:	ja     0x40f215
  40f1a9:	push   ebp
  40f1aa:	dec    esp
  40f1ab:	inc    esi
  40f1ac:	inc    esi
  40f1ad:	add    esp,esp
  40f1af:	and    ebx,DWORD PTR [ecx-0x60]
  40f1b2:	(bad)  
  40f1b3:	or     esi,DWORD PTR [esi+0x1f]
  40f1b6:	and    DWORD PTR [ecx-0x20],eax
  40f1b9:	popa   
  40f1ba:	and    eax,0xf4cd30e8
  40f1bf:	loop   0x40f174
  40f1c1:	xchg   DWORD PTR [ebx],edi
  40f1c3:	jbe    0x40f1f9
  40f1c5:	sbb    eax,0xccbd97d2
  40f1ca:	loopne 0x40f199
  40f1cc:	sbb    bl,BYTE PTR [esp+eax*1-0x68]
  40f1d0:	loope  0x40f225
  40f1d2:	jg     0x40f1c2
  40f1d4:	idiv   esi
  40f1d6:	in     al,0x13
  40f1d8:	push   esi
  40f1d9:	(bad)  [eax+0x29]
  40f1dc:	repnz and DWORD PTR [edi],esi
  40f1df:	sti    
  40f1e0:	es or  eax,ecx
  40f1e3:	or     esp,DWORD PTR [ecx+0x3a]
  40f1e6:	add    BYTE PTR [eax+0x54],bl
  40f1e9:	nop
  40f1ea:	sbb    eax,0xb88ea20c
  40f1ef:	mov    ds:0x6e67e22a,eax
  40f1f4:	arpl   WORD PTR [edx+0x6d70a9f5],dx
  40f1fa:	cld    
  40f1fb:	xchg   eax,edx
  40f1fd:	and    esp,DWORD PTR [edi+0x4c885ae3]
  40f203:	sub    DWORD PTR [ebx],esi
  40f205:	in     eax,dx
  40f206:	imul   esp,DWORD PTR [ecx+0xe],0xffffffd7
  40f20a:	sbb    edi,DWORD PTR [eax+0x2e]
  40f20d:	add    eax,ebp
  40f20f:	add    eax,0x23b10c48
  40f214:	sbb    eax,0x97aea6cc
  40f219:	cmp    BYTE PTR [edi-0x38],ah
  40f21c:	xchg   edx,eax
  40f21d:	xor    al,0x6e
  40f21f:	imul   ebp
  40f221:	dec    BYTE PTR [eax-0x65155f5d]
  40f227:	or     DWORD PTR [ebx+0x5a],ecx
  40f22a:	mov    al,ds:0x3eb1ed49
  40f22f:	hlt    
  40f230:	and    edx,DWORD PTR [ebx+0x6c]
  40f233:	dec    ebx
  40f234:	cmp    eax,0x47d2342
  40f239:	sub    BYTE PTR [ebx-0x5a7f023d],0xdb
  40f240:	inc    DWORD PTR es:[edi+eax*2+0x2b]
  40f245:	sbb    eax,0x47e87b7e
  40f24a:	fmul   DWORD PTR [edi-0x2a9d2bb6]
  40f250:	mov    ebp,0xd23221ea
  40f255:	scas   eax,DWORD PTR es:[edi]
  40f256:	adc    edx,DWORD PTR [ebx-0x40]
  40f259:	jle    0x40f256
  40f25b:	jge    0x40f2c2
  40f25d:	pop    edx
  40f25e:	pop    ss
  40f25f:	icebp  
  40f260:	out    0x4c,eax
  40f262:	mov    ecx,0x4ff9e092
  40f267:	sbb    DWORD PTR [ebx],ebp
  40f269:	outs   dx,DWORD PTR ds:[esi]
  40f26a:	jne    0x40f1f9
  40f26c:	add    BYTE PTR [eax],0xd1
  40f26f:	mov    bl,0xdf
  40f271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f272:	ret    
  40f273:	fst    QWORD PTR gs:[ecx]
  40f276:	ds jb  0x40f278
  40f279:	xchg   ebx,eax
  40f27a:	jno    0x40f214
  40f27c:	lahf   
  40f27d:	leave  
  40f27e:	sbb    al,0x33
  40f280:	fsub   QWORD PTR [esi+edx*2+0xf]
  40f284:	cwde   
  40f285:	mov    ds:0xd79671df,eax
  40f28a:	fstp   TBYTE PTR [esi+0x557728dd]
  40f290:	jb     0x40f270
  40f292:	jp     0x40f23a
  40f294:	fdiv   QWORD PTR [ebx+0x10]
  40f297:	mov    esi,0xf717be79
  40f29c:	in     eax,0x96
  40f29e:	inc    eax
  40f29f:	pusha  
  40f2a0:	and    DWORD PTR [ebx-0x55ef2321],edx
  40f2a6:	lock (bad) ds:[esi-0x4f857dff]
  40f2ae:	xor    BYTE PTR [eax-0x3ce4fd48],al
  40f2b4:	je     0x40f2b1
  40f2b6:	in     eax,0x19
  40f2b8:	xchg   edi,eax
  40f2b9:	jmp    0xa78e:0x868591ec
  40f2c0:	xor    eax,0x9e03de55
  40f2c5:	push   edi
  40f2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c7:	gs sbb al,0xc0
  40f2ca:	xchg   edx,eax
  40f2cb:	test   al,0x2b
  40f2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ce:	pop    esp
  40f2cf:	data16 sti 
  40f2d1:	or     al,0xe7
  40f2d3:	nop
  40f2d4:	fsubr  QWORD PTR [esi-0x1f]
  40f2d7:	sar    DWORD PTR [eax],cl
  40f2d9:	in     eax,0x31
  40f2db:	frstor [edx-0x4a]
  40f2de:	jle    0x40f27a
  40f2e0:	mov    bh,0x99
  40f2e2:	dec    bp
  40f2e4:	pop    ss
  40f2e5:	mov    edi,0x9a3c4266
  40f2ea:	mov    DWORD PTR [ebp-0x49b6e406],eax
  40f2f0:	sbb    ebp,ecx
  40f2f2:	stc    
  40f2f3:	das    
  40f2f4:	mov    ebx,0xa79cea4e
  40f2f9:	addr16 sahf 
  40f2fb:	jg     0x40f35e
  40f2fd:	addr16 cdq 
  40f2ff:	add    bh,cl
  40f301:	daa    
  40f302:	lds    esp,FWORD PTR [eax]
  40f304:	lock push ebx
  40f306:	data16 jno 0x40f307
  40f309:	jl     0x40f2ba
  40f30b:	and    eax,0xd54c8639
  40f310:	or     ecx,DWORD PTR [ecx+0x76f15232]
  40f316:	imul   esi,DWORD PTR [ecx+0x5c],0x71
  40f31a:	fild   WORD PTR [ecx-0x3f]
  40f31d:	rol    al,1
  40f31f:	cmp    DWORD PTR [ebx],0xffffffd4
  40f322:	add    BYTE PTR [esi+0x3d],0x74
  40f326:	sar    DWORD PTR [ebp+0x1be30f02],1
  40f32c:	dec    eax
  40f32d:	imul   edi,ebx,0x14
  40f330:	jne    0x40f377
  40f332:	ja     0x40f2d7
  40f334:	adc    edi,DWORD PTR [eax+0x2d]
  40f337:	pop    edi
  40f338:	loop   0x40f398
  40f33a:	push   es
  40f33b:	dec    edi
  40f33c:	sar    eax,cl
  40f33e:	(bad)  
  40f33f:	jl     0x40f33e
  40f341:	adc    esi,DWORD PTR [edx-0x24d4c422]
  40f347:	out    0x79,eax
  40f349:	xor    DWORD PTR [ebp+esi*1-0x4a],0x10
  40f34e:	call   0xf3ed:0xbb6c646b
  40f355:	jne    0x40f38f
  40f357:	neg    DWORD PTR [ebx+0x6f]
  40f35a:	or     cl,BYTE PTR [edi]
  40f35c:	mov    DWORD PTR [esi-0x12],eax
  40f35f:	jle    0x40f3d7
  40f361:	adc    al,0x6e
  40f363:	xchg   BYTE PTR [ecx],bl
  40f365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f366:	jo     0x40f3dc
  40f368:	pop    eax
  40f369:	into   
  40f36a:	pop    esp
  40f36b:	scas   eax,DWORD PTR es:[edi]
  40f36c:	cli    
  40f36d:	rcl    DWORD PTR [ecx-0x26],1
  40f370:	push   ecx
  40f371:	add    al,0x5b
  40f373:	pop    ds
  40f374:	push   0x5ab844de
  40f379:	and    ebp,DWORD PTR [esi*8+0x5598505e]
  40f380:	ja     0x40f3cc
  40f382:	xor    bl,BYTE PTR [ebx]
  40f384:	add    eax,0xf34effb
  40f389:	rol    bl,cl
  40f38b:	and    BYTE PTR [edi],bl
  40f38d:	push   ecx
  40f38e:	cs push 0x5a8e5098
  40f394:	xchg   edi,eax
  40f395:	inc    ebx
  40f396:	mov    bh,0x78
  40f398:	fimul  WORD PTR [edx-0x53]
  40f39b:	mov    bl,0x2d
  40f39d:	dec    edx
  40f39e:	in     eax,dx
  40f39f:	and    dh,BYTE PTR [eax+0x6614cca3]
  40f3a5:	mov    ecx,0x76c6b3d7
  40f3aa:	setbe  dh
  40f3ad:	inc    esi
  40f3ae:	ret    
  40f3af:	les    edi,FWORD PTR ds:0x4f0c50d
  40f3b5:	mov    cl,dh
  40f3b7:	mov    al,0xf8
  40f3b9:	in     eax,0x35
  40f3bb:	mov    DWORD PTR [ecx-0x1f],edx
  40f3be:	mov    dh,0xd7
  40f3c0:	or     al,0xdf
  40f3c2:	mov    edi,0x82f20fae
  40f3c7:	mov    ebp,0xc6052a30
  40f3cc:	aad    0xa0
  40f3ce:	pop    ds
  40f3cf:	jle    0x40f3e1
  40f3d1:	push   ebx
  40f3d2:	xchg   edi,eax
  40f3d3:	adc    ebx,esi
  40f3d5:	lods   al,BYTE PTR ds:[esi]
  40f3d6:	(bad)
  40f3d9:	addr16 pop ds
  40f3db:	stc    
  40f3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3dd:	mov    dh,0xce
  40f3df:	pop    ds
  40f3e0:	mov    ds:0x7c8068c8,al
  40f3e5:	xor    eax,0x475eb7b6
  40f3ea:	lock mov DWORD PTR [edx+0x41283311],ebx
  40f3f1:	dec    edi
  40f3f2:	bnd jmp 0x40f3ae
  40f3f5:	repz cli 
  40f3f7:	push   0xfffffff3
  40f3f9:	adc    DWORD PTR [ecx-0x3],0xda5eb552
  40f400:	fcomp  DWORD PTR [edi+edi*8-0xc]
  40f404:	dec    ebp
  40f405:	adc    esp,DWORD PTR [edx+esi*4]
  40f408:	fnstenv [edx]
  40f40a:	in     eax,dx
  40f40b:	mov    esi,0x7d6d1305
  40f410:	and    ch,BYTE PTR [ecx]
  40f412:	int3   
  40f413:	stc    
  40f414:	retf   
  40f415:	data16 cmp BYTE PTR [esi-0x5a23ac19],ch
  40f41c:	fcomp  st(6)
  40f41e:	mov    WORD PTR [edx+0x57],es
  40f421:	push   ebp
  40f422:	inc    eax
  40f423:	iret   
  40f424:	xor    bh,BYTE PTR [bp+di]
  40f427:	jl     0x40f491
  40f429:	jne    0x40f4a6
  40f42b:	sbb    eax,0xdb1b7068
  40f430:	imul   esi,DWORD PTR [ebx],0x7d1eae33
  40f436:	(bad)  
  40f438:	js     0x40f43a
  40f43a:	nop
  40f43b:	mov    ebp,0xdd66eb7d
  40f440:	mov    esp,0xf60384f2
  40f445:	jb     0x40f498
  40f447:	and    ah,bl
  40f449:	bound  ebp,QWORD PTR [eax]
  40f44b:	mov    edx,DWORD PTR [edx+edx*4]
  40f44e:	fadd   st(5),st
  40f450:	fsubrp st(1),st
  40f452:	lds    ebp,FWORD PTR [edi]
  40f454:	test   eax,0xdad02bc5
  40f459:	(bad)  
  40f45a:	popa   
  40f45b:	adc    eax,0x745aa184
  40f460:	js     0x40f407
  40f462:	jns    0x40f430
  40f464:	jge    0x40f49a
  40f466:	and    ah,0x9c
  40f469:	and    DWORD PTR [esi],ecx
  40f46b:	mov    ch,0x8
  40f46d:	adc    cl,BYTE PTR [ebx-0x710e2eed]
  40f473:	cli    
  40f474:	sti    
  40f475:	cmp    ecx,esp
  40f477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f478:	inc    edx
  40f479:	stc    
  40f47a:	js     0x40f412
  40f47c:	xor    DWORD PTR [edx-0x8],ebp
  40f47f:	mov    al,0xd7
  40f481:	imul   edi,DWORD PTR [edx],0x3a6f24fb
  40f487:	jns    0x40f442
  40f489:	popf   
  40f48a:	mov    bl,0xb0
  40f48c:	mov    eax,ds:0x59464819
  40f491:	pushf  
  40f492:	xchg   BYTE PTR [edx],ch
  40f494:	and    bl,BYTE PTR [edi]
  40f496:	jmp    0x40f4b8
  40f498:	cli    
  40f499:	xchg   ebp,eax
  40f49a:	jae    0x40f501
  40f49c:	lods   al,BYTE PTR ds:[esi]
  40f49d:	sbb    eax,0x377e7946
  40f4a2:	jp     0x40f474
  40f4a4:	sbb    DWORD PTR [ecx+0x30],0xffffffbc
  40f4a8:	pop    ecx
  40f4a9:	loop   0x40f456
  40f4ab:	push   DWORD PTR [eax-0x5cc6b69a]
  40f4b1:	cmp    BYTE PTR [edx],0x4a
  40f4b4:	iret   
  40f4b5:	xor    BYTE PTR [esi+0x50eff2e1],ch
  40f4bb:	add    eax,0xf79c6669
  40f4c0:	pop    ss
  40f4c1:	mov    esp,0xb74e435a
  40f4c6:	ss dec edi
  40f4c8:	aad    0x22
  40f4ca:	sbb    BYTE PTR [esi+0x76ceb3d0],al
  40f4d0:	(bad)  
  40f4d1:	mov    esi,0x70382c04
  40f4d6:	xchg   DWORD PTR [ebx-0x5a],eax
  40f4d9:	ja     0x40f4e7
  40f4db:	dec    edi
  40f4dc:	add    ebx,DWORD PTR [edx-0x1]
  40f4df:	aaa    
  40f4e0:	pusha  
  40f4e1:	aad    0x5d
  40f4e3:	rol    cl,cl
  40f4e5:	sbb    BYTE PTR [ecx],bh
  40f4e7:	adc    al,0x75
  40f4e9:	or     BYTE PTR [eax],bh
  40f4eb:	shl    eax,1
  40f4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ee:	mov    al,ds:0x9c63b8fd
  40f4f3:	or     eax,0x5f549050
  40f4f8:	out    dx,al
  40f4f9:	(bad)  
  40f4fa:	mov    dl,0x68
  40f4fc:	jge    0x40f4d9
  40f4fe:	xor    BYTE PTR [ecx+0x140f1321],al
  40f504:	inc    esp
  40f505:	push   edx
  40f506:	loopne 0x40f4de
  40f508:	daa    
  40f509:	stos   BYTE PTR es:[edi],al
  40f50a:	clc    
  40f50b:	cmp    eax,0x505530fe
  40f510:	pop    edx
  40f511:	mov    al,ds:0xae1e15a2
  40f516:	jne    0x40f502
  40f518:	sbb    dh,bl
  40f51a:	push   es
  40f51b:	sti    
  40f51c:	sub    dh,dl
  40f51e:	into   
  40f51f:	(bad)  
  40f520:	sbb    al,0x4b
  40f522:	call   0x7ab9:0xfe6e43ec
  40f529:	int    0xef
  40f52b:	adc    BYTE PTR [ebp+0x41],ch
  40f52e:	cli    
  40f52f:	jge    0x40f512
  40f531:	or     al,0xc3
  40f533:	cmp    DWORD PTR [esi],edi
  40f535:	paddsb mm6,QWORD PTR [edx+0x4fbae1b]
  40f53c:	int    0x78
  40f53e:	sbb    dh,BYTE PTR [ebp+0x20]
  40f541:	(bad)  
  40f542:	je     0x40f4d8
  40f544:	test   eax,0x41e49633
  40f549:	int    0x1e
  40f54b:	(bad)  
  40f54c:	pushf  
  40f54d:	ins    BYTE PTR es:[edi],dx
  40f54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f54f:	sahf   
  40f550:	dec    ebx
  40f551:	aaa    
  40f552:	push   ebp
  40f553:	scas   eax,DWORD PTR es:[edi]
  40f554:	aas    
  40f555:	cmp    al,0x3e
  40f557:	pop    ecx
  40f558:	scas   eax,DWORD PTR es:[edi]
  40f559:	scas   al,BYTE PTR es:[edi]
  40f55a:	sub    edi,DWORD PTR [eax]
  40f55c:	mul    BYTE PTR [ebx-0x2c]
  40f55f:	lds    edx,FWORD PTR [esp+ecx*4]
  40f562:	sub    BYTE PTR [eax],ch
  40f564:	mov    ds:0x4227791b,al
  40f569:	lahf   
  40f56a:	int3   
  40f56b:	mov    ah,0x5d
  40f56d:	loop   0x40f553
  40f56f:	scas   eax,DWORD PTR es:[edi]
  40f570:	scas   al,BYTE PTR es:[edi]
  40f571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f572:	mov    ebp,0x4e0f23ea
  40f577:	inc    esi
  40f578:	sar    DWORD PTR [esi+0x56],1
  40f57b:	dec    ecx
  40f57c:	xchg   DWORD PTR [ebx+0x6f],ebp
  40f57f:	or     BYTE PTR [esp+eax*8+0x40],dh
  40f583:	test   ah,0xa5
  40f586:	(bad)  
  40f587:	imul   DWORD PTR [edx-0x4fec85f5]
  40f58d:	fisttp QWORD PTR [edi-0x21]
  40f590:	add    edi,DWORD PTR [esi]
  40f592:	sbb    al,0x8e
  40f594:	add    BYTE PTR ds:0xfc0e77ee,ah
  40f59a:	addr16 pop edi
  40f59c:	outs   dx,DWORD PTR ds:[esi]
  40f59d:	mov    al,ds:0x5fa32243
  40f5a2:	fist   DWORD PTR [ebx+edi*1]
  40f5a5:	stos   DWORD PTR es:[edi],eax
  40f5a6:	loope  0x40f553
  40f5a8:	in     eax,0x98
  40f5aa:	xchg   esi,eax
  40f5ab:	pop    ss
  40f5ac:	test   eax,0xaabeb8be
  40f5b1:	jne    0x40f62f
  40f5b3:	push   0x17
  40f5b5:	in     eax,0x36
  40f5b7:	dec    eax
  40f5b8:	mov    ds:0x48d8efef,eax
  40f5bd:	xchg   esp,eax
  40f5be:	mov    ecx,DWORD PTR [ebx-0x26]
  40f5c1:	sti    
  40f5c2:	mov    ds:0x2a22935b,al
  40f5c7:	xlat   BYTE PTR ds:[ebx]
  40f5c8:	test   BYTE PTR [ebx],dl
  40f5ca:	mov    eax,ds:0xe810fb6b
  40f5cf:	jno    0x40f56f
  40f5d1:	out    0x1a,al
  40f5d3:	and    al,0xa2
  40f5d5:	mov    edx,0x2e5fd2bc
  40f5da:	call   0x8b3c:0x21546f50
  40f5e1:	push   edi
  40f5e2:	jae    0x40f58c
  40f5e4:	(bad)  
  40f5e5:	out    0x11,eax
  40f5e7:	jmp    0xaec08bdc
  40f5ec:	shr    BYTE PTR [ecx],cl
  40f5ee:	mov    dh,dh
  40f5f0:	mov    bh,0xd2
  40f5f2:	sub    eax,0x7cbd0fc4
  40f5f7:	push   cs
  40f5f8:	push   ss
  40f5f9:	rcl    DWORD PTR [edx],1
  40f5fb:	mov    dh,0x6e
  40f5fd:	mov    bl,BYTE PTR [edx+0x66]
  40f600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f601:	xchg   edx,eax
  40f602:	dec    edx
  40f603:	iret   
  40f604:	mov    edi,ecx
  40f606:	inc    edi
  40f607:	add    ebp,DWORD PTR [ebx+0x3eeab1cf]
  40f60d:	cmp    esp,DWORD PTR [edi+ebp*1-0x68]
  40f611:	fst    QWORD PTR fs:[edi+edi*8+0x17]
  40f616:	cmp    al,0x26
  40f618:	dec    esp
  40f619:	mov    esp,0xa65c3f06
  40f61e:	out    dx,eax
  40f61f:	cmp    cl,ah
  40f621:	mov    edx,eax
  40f623:	mov    ebp,0xb4ddcc88
  40f628:	in     al,0xe1
  40f62a:	enter  0x2400,0x17
  40f62e:	adc    eax,0xeb00a68
  40f633:	add    esp,DWORD PTR [esp+edi*4]
  40f636:	aas    
  40f637:	rcr    dh,0x5a
  40f63a:	jl     0x40f651
  40f63c:	scas   eax,DWORD PTR es:[edi]
  40f63d:	aaa    
  40f63e:	retf   
  40f63f:	sbb    DWORD PTR [edx],eax
  40f641:	sbb    BYTE PTR [esp+eiz*8+0x1cf3e42b],bl
  40f648:	in     eax,0x94
  40f64a:	clc    
  40f64b:	mov    ebx,0x41e081f3
  40f650:	push   esi
  40f651:	lods   al,BYTE PTR ds:[esi]
  40f652:	jg     0x40f695
  40f654:	xchg   DWORD PTR ds:0xb84a292e,esi
  40f65a:	mov    ?,edx
  40f65c:	xchg   BYTE PTR [ebx+0x4d71ff5],dl
  40f662:	xlat   BYTE PTR ds:[ebx]
  40f663:	or     BYTE PTR [ebx-0xc890f5d],ch
  40f669:	xor    eax,0x47b3a50d
  40f66e:	fild   WORD PTR [eax]
  40f670:	mov    al,ds:0x1c091088
  40f675:	cmp    dl,0xda
  40f678:	neg    DWORD PTR [eax-0x6d]
  40f67b:	sub    DWORD PTR [esi+0x7],0x2e77e0c1
  40f682:	sub    BYTE PTR [ebx],bh
  40f684:	push   esi
  40f685:	in     eax,dx
  40f686:	sbb    DWORD PTR [esi],0x5a88e2b4
  40f68c:	je     0x40f652
  40f68e:	std    
  40f68f:	jl     0x40f66c
  40f691:	test   al,0x53
  40f693:	out    0xcf,eax
  40f695:	add    al,0xcb
  40f697:	std    
  40f698:	mov    ecx,ebp
  40f69a:	in     al,dx
  40f69b:	dec    dh
  40f69d:	mov    edx,0xe9c703cb
  40f6a2:	shl    DWORD PTR [eax+eax*1],cl
  40f6a5:	add    BYTE PTR [ebx+0x4503c845],cl
  40f6ab:	or     BYTE PTR [ecx+0x458be845],cl
  40f6b1:	in     al,0x85
  40f6b3:	ror    BYTE PTR [edi],0x84
  40f6b6:	dec    eax
  40f6b7:	and    al,0x0
  40f6b9:	add    bh,al
  40f6bb:	inc    ebp
  40f6bc:	loopne 0x40f6be
  40f6be:	add    BYTE PTR [eax],al
  40f6c0:	add    BYTE PTR [edx+0x3],ch
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0xb84fecf0
  40f71a:	pop    ebp
  40f71b:	add    ch,BYTE PTR [esi+0x5ce88383]
  40f721:	add    DWORD PTR [ebx-0x40ce96ab],0x4f
  40f728:	imul   esp,DWORD PTR ds:0xec89847a,0x64cca772
  40f732:	imul   eax,DWORD PTR [esi-0x6699849b],0x13
  40f739:	(bad)  
  40f73a:	daa    
  40f73b:	data16 ja 0x40f6c2
  40f73e:	and    al,ah
  40f740:	test   DWORD PTR [esi+0x22],esi
  40f743:	adc    al,0x2b
  40f745:	ins    BYTE PTR es:[edi],dx
  40f746:	sub    ebp,edi
  40f748:	sub    al,0xff
  40f74a:	sub    bh,BYTE PTR [ecx-0x2755f869]
  40f750:	pop    edx
  40f751:	pop    eax
  40f752:	fst    DWORD PTR [ecx-0x6a27b568]
  40f758:	(bad)  
  40f759:	mov    al,ds:0x39018c3
  40f75e:	inc    ecx
  40f75f:	in     al,dx
  40f760:	popf   
  40f761:	fucomip st,st(5)
  40f763:	call   0x330d:0xced3ba95
  40f76a:	xadd   BYTE PTR [edi+0x5f],al
  40f76e:	dec    edx
  40f76f:	mov    esp,0xe5a12477
  40f774:	cmp    ch,BYTE PTR [ecx+0x20]
  40f777:	xchg   edx,eax
  40f778:	out    dx,al
  40f779:	(bad)  [esi+0x7e74160c]
  40f77f:	imul   esi,esi,0x4c
  40f782:	and    ah,ch
  40f784:	cmc    
  40f785:	mov    eax,ds:0xf93adc51
  40f78a:	or     DWORD PTR [edx+0x2f],ebp
  40f78d:	hlt    
  40f78e:	jno    0x40f76c
  40f790:	or     ah,BYTE PTR [eax+ecx*1]
  40f793:	pop    esi
  40f794:	lds    edx,FWORD PTR [eax]
  40f796:	inc    esi
  40f797:	mov    BYTE PTR [esi-0x5f],ch
  40f79a:	js     0x40f7ff
  40f79c:	sub    eax,0xe3c400b2
  40f7a1:	(bad)  
  40f7a3:	mov    eax,ds:0x4617038d
  40f7a8:	fwait
  40f7a9:	dec    eax
  40f7aa:	int3   
  40f7ab:	sub    cl,BYTE PTR [ecx+ecx*4-0x11]
  40f7af:	mov    ds:0xf5f67ec3,al
  40f7b4:	mov    BYTE PTR [eax+ebp*4],ch
  40f7b7:	sbb    eax,0x23c718a2
  40f7bc:	shr    edi,1
  40f7be:	mov    ebx,0x9434912e
  40f7c3:	push   cs
  40f7c4:	(bad)  
  40f7c5:	int    0xb0
  40f7c7:	test   dl,0x7
  40f7ca:	mov    esi,0xd1f5b582
  40f7cf:	add    al,0x4
  40f7d1:	or     al,0xc0
  40f7d3:	cmp    DWORD PTR [ecx-0x36],0xb1991b15
  40f7da:	out    dx,eax
  40f7db:	jo     0x40f7dc
  40f7dd:	(bad)  
  40f7df:	jno    0x40f7bd
  40f7e1:	dec    ebx
  40f7e2:	fld    QWORD PTR [edx]
  40f7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e5:	inc    ebp
  40f7e6:	mov    esi,0xc081ab96
  40f7eb:	fs enter 0x5fd6,0xa1
  40f7f0:	ret    
  40f7f1:	cwde   
  40f7f2:	push   edi
  40f7f3:	mov    esp,ebp
  40f7f5:	push   ss
  40f7f6:	inc    edi
  40f7f7:	les    esi,FWORD PTR gs:[edi-0xd]
  40f7fb:	jl     0x40f83f
  40f7fd:	mov    dl,0xc4
  40f7ff:	popf   
  40f800:	jl     0x40f78b
  40f802:	xchg   ecx,eax
  40f803:	retf   
  40f804:	add    eax,0x29ca9412
  40f809:	(bad)  
  40f80a:	adc    BYTE PTR [ecx+0x28e4967e],ah
  40f810:	xor    ebp,DWORD PTR [ebp+0x3c]
  40f813:	cmc    
  40f814:	pusha  
  40f815:	cwde   
  40f816:	lock test BYTE PTR [ecx-0x5e],bh
  40f81a:	jge    0x40f822
  40f81c:	push   ecx
  40f81d:	repnz out 0x17,al
  40f820:	adc    BYTE PTR [edx],al
  40f822:	sbb    al,0x8
  40f824:	sbb    dh,bh
  40f826:	(bad)  
  40f827:	cmp    BYTE PTR [esi+0x52b2b0ce],ch
  40f82d:	dec    ecx
  40f82e:	pop    ss
  40f82f:	pop    ebx
  40f830:	lea    esp,[eax-0x6b24895a]
  40f836:	mov    edi,0xc95a7dce
  40f83b:	jmp    0x7594:0x86c73a61
  40f842:	loopne 0x40f7cb
  40f844:	fisub  WORD PTR [edi]
  40f846:	fild   QWORD PTR [ebx+0x8]
  40f849:	mov    edx,cs
  40f84b:	aaa    
  40f84c:	div    DWORD PTR [ecx]
  40f84e:	ins    DWORD PTR es:[edi],dx
  40f84f:	mov    BYTE PTR [esi+0x54870e91],ch
  40f855:	push   ebx
  40f856:	adc    bh,dh
  40f858:	mov    WORD PTR fs:0x5741469e,cs
  40f85f:	sbb    DWORD PTR [ecx-0x3b3ca465],ebp
  40f865:	cmp    edx,DWORD PTR [esi+ecx*2]
  40f868:	js     0x40f82a
  40f86a:	dec    esp
  40f86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f86c:	push   cs
  40f86d:	pop    eax
  40f86e:	sbb    DWORD PTR [ecx],eax
  40f870:	sti    
  40f871:	jg     0x40f8e5
  40f873:	xor    al,0x67
  40f875:	or     bh,BYTE PTR [esi]
  40f877:	dec    esi
  40f878:	inc    esp
  40f879:	or     eax,0xdf116087
  40f87e:	add    ch,BYTE PTR [ebx-0x1f]
  40f881:	scas   eax,DWORD PTR es:[edi]
  40f882:	jmp    0x3a07a4bb
  40f887:	lds    eax,FWORD PTR [ebx+0x355954f9]
  40f88d:	mov    ch,0x48
  40f88f:	enter  0xd11b,0x28
  40f893:	mov    bh,0x1c
  40f895:	fdiv   QWORD PTR [esi]
  40f897:	in     al,0x20
  40f899:	bound  edx,QWORD PTR [ebx+eiz*4]
  40f89c:	pop    ds
  40f89d:	aam    0xd
  40f89f:	pusha  
  40f8a0:	pop    eax
  40f8a1:	jecxz  0x40f839
  40f8a3:	push   ebx
  40f8a4:	mov    DWORD PTR [edi+0x5b088b88],eax
  40f8aa:	mov    al,ds:0x6ef9f162
  40f8af:	xchg   ebx,eax
  40f8b0:	xchg   ebx,eax
  40f8b1:	pop    ecx
  40f8b2:	in     eax,dx
  40f8b3:	jns    0x40f88d
  40f8b5:	iret   
  40f8b6:	xchg   ebp,ebp
  40f8b8:	out    dx,eax
  40f8b9:	fsub   st,st(4)
  40f8bb:	test   al,0xd0
  40f8bd:	cwde   
  40f8be:	scas   eax,DWORD PTR es:[edi]
  40f8bf:	imul   edi,DWORD PTR [edi-0x7d],0x96196396
  40f8c6:	loop   0x40f861
  40f8c8:	adc    al,0x8d
  40f8ca:	ret    
  40f8cb:	sbb    eax,0xfd93fc4f
  40f8d0:	xor    dh,BYTE PTR [esi-0x53]
  40f8d3:	fbstp  TBYTE PTR [edx-0x392ddb20]
  40f8d9:	(bad)  
  40f8db:	(bad)  
  40f8dc:	cmp    DWORD PTR [edx+0x63],edx
  40f8df:	mov    eax,0xfdb1289c
  40f8e5:	and    edi,DWORD PTR [esi+0x3670aed4]
  40f8eb:	not    DWORD PTR [edx]
  40f8ed:	adc    ebx,esp
  40f8ef:	xchg   BYTE PTR [edi-0xb],dl
  40f8f2:	ss stc 
  40f8f4:	mov    bl,0xfb
  40f8f6:	mov    ds:0x9be2ebb2,eax
  40f8fb:	cdq    
  40f8fc:	mov    ds:0x5558515c,eax
  40f901:	scas   eax,DWORD PTR es:[edi]
  40f902:	xchg   edi,eax
  40f903:	mov    ebp,0x3e2e312c
  40f908:	gs jle 0x40f91b
  40f90b:	sub    cl,BYTE PTR [ebx]
  40f90d:	fwait
  40f90e:	mov    edx,0x4664f2dc
  40f913:	out    0x90,eax
  40f915:	and    DWORD PTR [ecx+0x18a375e3],esp
  40f91b:	clc    
  40f91c:	jns    0x40f905
  40f91e:	xor    al,0xa1
  40f920:	fcom   st(0)
  40f922:	sub    al,0x3e
  40f924:	cld    
  40f925:	test   DWORD PTR [esi+0x29],esp
  40f928:	fimul  WORD PTR [ebx-0x5a8462df]
  40f92e:	scas   al,BYTE PTR es:[edi]
  40f92f:	repz (bad) 
  40f931:	mov    DWORD PTR [ecx-0x33a870fe],esp
  40f937:	sbb    ebx,eax
  40f939:	gs (bad) 
  40f93b:	sbb    al,0x60
  40f93d:	inc    esi
  40f93e:	mov    edi,0x59e46554
  40f943:	aad    0xf8
  40f945:	clc    
  40f946:	pop    edi
  40f947:	test   al,0x5e
  40f949:	pop    ebp
  40f94a:	push   edi
  40f94b:	and    al,0x33
  40f94d:	stos   DWORD PTR es:[edi],eax
  40f94e:	or     al,0xce
  40f950:	ret    
  40f951:	es pop ebx
  40f953:	xor    al,0xe0
  40f955:	fidivr DWORD PTR [ebx-0x7b]
  40f958:	xor    eax,0x5f6c36f5
  40f95d:	push   esi
  40f95e:	push   edi
  40f95f:	sub    ebp,DWORD PTR [edi]
  40f961:	cmp    al,0x3b
  40f963:	pop    esi
  40f964:	or     BYTE PTR [ecx-0x45cf66e1],ah
  40f96a:	cmp    BYTE PTR [ebx+0x6a8a0288],cl
  40f970:	pop    edx
  40f971:	(bad)  
  40f972:	adc    al,0xc4
  40f974:	sub    esi,DWORD PTR [esi+0x4fb51c4d]
  40f97a:	sbb    bh,BYTE PTR [edi+edi*2-0x77]
  40f97e:	xor    al,0xab
  40f980:	mov    esp,0x9fec5600
  40f985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f986:	sub    esi,DWORD PTR [esi]
  40f988:	cwde   
  40f989:	mov    al,ds:0x811433be
  40f98e:	jmp    0x40482ecb
  40f993:	pop    ecx
  40f994:	mov    bh,0xa8
  40f996:	push   ecx
  40f997:	das    
  40f998:	scas   al,BYTE PTR es:[edi]
  40f999:	test   al,0x97
  40f99b:	mov    esi,0x29240521
  40f9a0:	adc    BYTE PTR [eax],dl
  40f9a2:	cmc    
  40f9a3:	mov    WORD PTR [edx-0x1f298ada],?
  40f9a9:	stos   DWORD PTR es:[edi],eax
  40f9aa:	ret    
  40f9ab:	adc    DWORD PTR [edx+0x6c],edi
  40f9ae:	imul   ecx,DWORD PTR [edx-0x13],0x3c
  40f9b2:	xor    al,0x5
  40f9b4:	jg     0x40f9cd
  40f9b6:	fbstp  TBYTE PTR [edx-0x4a12a5ea]
  40f9bc:	push   ebx
  40f9bd:	outs   dx,BYTE PTR ds:[esi]
  40f9be:	inc    edx
  40f9bf:	imul   ebp,ebx,0x777bda03
  40f9c5:	fwait
  40f9c6:	dec    edx
  40f9c7:	fstp   DWORD PTR [ebx]
  40f9c9:	mov    ebx,0x1c31c613
  40f9ce:	sub    al,0xc8
  40f9d0:	idiv   bh
  40f9d2:	pop    ebx
  40f9d3:	test   BYTE PTR [eax],cl
  40f9d5:	stos   BYTE PTR es:[edi],al
  40f9d6:	mov    bh,0x9c
  40f9d8:	mov    dh,0xd4
  40f9da:	push   edx
  40f9db:	mov    esi,0x57e3cdde
  40f9e0:	pop    esp
  40f9e1:	mov    al,ds:0xa8ea6842
  40f9e6:	push   esp
  40f9e7:	jmp    0x1203:0x8d78ecdf
  40f9ee:	mov    edi,0x3b53bb09
  40f9f3:	lea    esp,[ebx+0x1e]
  40f9f6:	lods   eax,DWORD PTR ds:[esi]
  40f9f7:	in     eax,dx
  40f9f8:	pop    ss
  40f9f9:	cmp    dl,0x47
  40f9fc:	iret   
  40f9fd:	bound  eax,QWORD PTR [ecx-0x393017d6]
  40fa03:	cmp    eax,0xb1a73d3a
  40fa08:	loop   0x40f9de
  40fa0a:	into   
  40fa0b:	sbb    DWORD PTR [ecx],0x5338d672
  40fa11:	sbb    eax,0x8b2cd05c
  40fa16:	adc    esp,esp
  40fa18:	or     BYTE PTR ds:0x3cd5baea,0x63
  40fa1f:	mov    al,0xcb
  40fa21:	popa   
  40fa22:	or     DWORD PTR [edx-0x7e],edx
  40fa25:	push   ebp
  40fa26:	das    
  40fa27:	pshufw mm5,QWORD PTR [ebp-0x2],0x72
  40fa2c:	jb     0x40fa6d
  40fa2e:	push   edi
  40fa2f:	in     eax,0x28
  40fa31:	aaa    
  40fa32:	loopne 0x40faa5
  40fa34:	adc    BYTE PTR [edx+esi*2],bh
  40fa37:	push   cs
  40fa38:	retf   
  40fa39:	mov    ecx,0x4949e252
  40fa3e:	cmp    dl,0xcc
  40fa41:	and    dh,BYTE PTR [eax]
  40fa43:	pushf  
  40fa44:	xchg   esp,eax
  40fa45:	rcl    edi,0x8b
  40fa48:	jns    0x40fa2b
  40fa4a:	jae    0x40fa98
  40fa4c:	sub    al,0xd3
  40fa4e:	pop    esi
  40fa4f:	adc    BYTE PTR [ecx+eax*4+0x11],cl
  40fa53:	push   0x8fed14e1
  40fa58:	popf   
  40fa59:	or     al,0x41
  40fa5b:	popf   
  40fa5c:	test   BYTE PTR [esi+ecx*4+0x2e],ch
  40fa60:	jle    0x40faae
  40fa62:	sub    edx,0xffffffe1
  40fa65:	mov    al,0x4d
  40fa67:	out    0x4a,al
  40fa69:	mov    edx,0xb1d75ff3
  40fa6e:	dec    edi
  40fa6f:	xor    dl,BYTE PTR [ebx-0x188a445]
  40fa75:	(bad)
  40fa78:	mov    al,0x65
  40fa7a:	adc    eax,0x4ccc7f5b
  40fa7f:	jp     0x40fa95
  40fa81:	idiv   BYTE PTR [ebx-0x1f]
  40fa84:	imul   ecx,DWORD PTR [ebp-0x72075bf8],0xa
  40fa8b:	add    edx,DWORD PTR [ecx+0x45]
  40fa8e:	cdq    
  40fa8f:	dec    ecx
  40fa90:	popf   
  40fa91:	dec    ebx
  40fa92:	lea    edi,[ecx+0x6f63b5ea]
  40fa98:	inc    ebx
  40fa99:	fdiv   QWORD PTR [ebp-0x56]
  40fa9c:	or     ebx,DWORD PTR [edx+0x28fe8f2c]
  40faa2:	xor    BYTE PTR [ebx],0x40
  40faa5:	pmulhw mm7,QWORD PTR [ecx+0x2108d1cd]
  40faac:	not    DWORD PTR [edx]
  40faae:	push   esi
  40faaf:	(bad)  
  40fab1:	fmul   QWORD PTR [esi+0x32]
  40fab4:	es das 
  40fab6:	ret    0x5e5f
  40fab9:	cmc    
  40faba:	mov    eax,ds:0x18b3429e
  40fabf:	(bad)  
  40fac0:	popf   
  40fac1:	pop    ss
  40fac2:	js     0x40fa6e
  40fac4:	dec    esp
  40fac5:	xchg   edx,eax
  40fac6:	sub    bh,BYTE PTR [edx]
  40fac8:	rol    BYTE PTR [edi-0x45],cl
  40facb:	add    ch,BYTE PTR [esi-0x46]
  40face:	push   edi
  40facf:	je     0x40fb42
  40fad1:	das    
  40fad2:	loopne 0x40faef
  40fad4:	fadd   st,st(2)
  40fad6:	enter  0x624a,0x4e
  40fada:	cmp    eax,0x24f9bd16
  40fadf:	pop    edx
  40fae0:	sub    ebx,DWORD PTR [esi-0x50]
  40fae3:	je     0x40fb29
  40fae5:	xchg   DWORD PTR [edx-0xd71f157],ecx
  40faeb:	cdq    
  40faec:	push   edi
  40faed:	test   al,0x44
  40faef:	sbb    esi,DWORD PTR [ecx+0x7e]
  40faf2:	add    DWORD PTR [ebp+0x421409d4],ebx
  40faf8:	jmp    0x40faff
  40fafa:	sub    dl,BYTE PTR [ebx-0x474334ca]
  40fb00:	dec    ecx
  40fb01:	add    BYTE PTR [ebx+0x46ad8b7c],dl
  40fb07:	adc    al,0x99
  40fb09:	mov    edi,DWORD PTR [ebx+0x13]
  40fb0c:	jle    0x40fabf
  40fb0e:	jl     0x40fb8d
  40fb10:	repz jp 0x40faee
  40fb13:	cmp    al,0xc
  40fb15:	mov    esp,0x7105f961
  40fb1a:	jp     0x40fb1b
  40fb1c:	dec    esp
  40fb1d:	dec    ecx
  40fb1e:	mov    dl,0xad
  40fb20:	ficomp WORD PTR [ebp-0x2c]
  40fb23:	xchg   ebp,eax
  40fb24:	jge    0x40fabd
  40fb26:	test   BYTE PTR [edx*4-0x34634c7f],dl
  40fb2d:	dec    edx
  40fb2e:	mov    edx,0xa66e5220
  40fb33:	add    dl,BYTE PTR [edi]
  40fb35:	loopne 0x40fb45
  40fb37:	ret    0x88ee
  40fb3a:	mov    dl,0x3f
  40fb3c:	fld    QWORD PTR [ebp-0x21]
  40fb3f:	test   DWORD PTR [edx-0x75d42021],0x71d0e794
  40fb49:	ins    BYTE PTR es:[edi],dx
  40fb4a:	loope  0x40fb69
  40fb4c:	sub    BYTE PTR [eax],al
  40fb4e:	and    DWORD PTR [eax],edx
  40fb50:	adc    ch,BYTE PTR [ecx+0x51dbcc6]
  40fb56:	mov    ecx,0xe83efd3b
  40fb5b:	pop    eax
  40fb5c:	mov    al,ds:0x55967bf8
  40fb61:	mov    ?,WORD PTR [edi-0x6]
  40fb64:	and    bl,bl
  40fb66:	cmp    edx,DWORD PTR [ecx]
  40fb68:	push   ecx
  40fb69:	xchg   DWORD PTR [ebp+ebp*1+0x6b],eax
  40fb6d:	jecxz  0x40fb5f
  40fb6f:	cmp    BYTE PTR [eax+0x2e],dh
  40fb72:	pop    edx
  40fb73:	and    DWORD PTR ds:0xc215c5ac,eax
  40fb79:	mov    edx,0xa56b5aeb
  40fb7e:	pop    edi
  40fb7f:	mov    edi,0xd30c00b2
  40fb84:	mov    ah,0x68
  40fb86:	jno    0x40fbb9
  40fb88:	sub    edi,edi
  40fb8a:	sbb    dl,ch
  40fb8c:	or     BYTE PTR [edx],ch
  40fb8e:	pop    edi
  40fb8f:	sbb    DWORD PTR [eax-0x2ecc0501],ebx
  40fb95:	scas   eax,DWORD PTR es:[edi]
  40fb96:	dec    ebp
  40fb97:	cld    
  40fb98:	sbb    edx,DWORD PTR [eax+0x644cf7a6]
  40fb9e:	cld    
  40fb9f:	aas    
  40fba0:	ds mov ebp,0xd242e4f3
  40fba6:	out    dx,al
  40fba7:	mov    ebp,0xbb0355b7
  40fbac:	mov    ?,WORD PTR [ebx]
  40fbae:	xlat   BYTE PTR ds:[ebx]
  40fbaf:	sbb    al,0x2f
  40fbb1:	pop    edx
  40fbb2:	jmp    0x40fc00
  40fbb4:	jecxz  0x40fc13
  40fbb6:	and    DWORD PTR [ecx+0x66],0x0
  40fbba:	push   edx
  40fbbb:	mov    bl,0xb1
  40fbbe:	aad    0x2a
  40fbc0:	sbb    DWORD PTR ds:0xccf296d7,ebp
  40fbc6:	adc    dh,dl
  40fbc8:	addr16 repz jo 0x40fc3b
  40fbcc:	fstp   QWORD PTR [ecx]
  40fbce:	xor    cl,al
  40fbd0:	int3   
  40fbd1:	mov    ebx,0xcfc82b6f
  40fbd6:	mov    edx,0x14cfec8d
  40fbdb:	jecxz  0x40fb63
  40fbdd:	ds dec edx
  40fbdf:	aad    0xc4
  40fbe1:	ss es cmc 
  40fbe4:	test   ebp,ecx
  40fbe6:	ficomp WORD PTR [ebx+0x5b171f5d]
  40fbec:	gs mov ecx,0x80964a0d
  40fbf2:	pusha  
  40fbf3:	aaa    
  40fbf4:	stos   DWORD PTR es:[edi],eax
  40fbf5:	or     al,dh
  40fbf7:	loop   0x40fc04
  40fbf9:	je     0x40fc1f
  40fbfb:	mov    edi,0x4eed9e0d
  40fc00:	mov    ds:0x838c0621,al
  40fc05:	mov    edi,0xdce8efa4
  40fc0a:	push   ds
  40fc0b:	inc    esp
  40fc0c:	xchg   ch,ah
  40fc0e:	mov    cl,ah
  40fc10:	or     al,0x1b
  40fc12:	sub    DWORD PTR [eax-0x4],edx
  40fc15:	ins    DWORD PTR es:[edi],dx
  40fc16:	outs   dx,BYTE PTR ds:[si]
  40fc18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc19:	cmp    ch,dh
  40fc1b:	jb     0x40fc2c
  40fc1d:	sub    edi,DWORD PTR [ebp+edx*2-0x3afc84aa]
  40fc24:	into   
  40fc25:	call   0xcd3e5fb
  40fc2a:	mov    ch,0x22
  40fc2c:	sub    edx,eax
  40fc2e:	dec    ebx
  40fc2f:	fs cli 
  40fc31:	inc    eax
  40fc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc33:	clc    
  40fc34:	test   BYTE PTR ds:0x73f939dd,bl
  40fc3a:	inc    esp
  40fc3b:	pop    esi
  40fc3c:	or     al,BYTE PTR [ebx-0x2ce2c77f]
  40fc42:	int3   
  40fc43:	mov    DWORD PTR ds:0x3d10cbc1,edx
  40fc49:	sti    
  40fc4a:	cmp    al,0x13
  40fc4c:	adc    al,0x89
  40fc4e:	add    esi,DWORD PTR [ebx-0x53]
  40fc51:	xor    eax,DWORD PTR [ecx-0x58]
  40fc54:	out    dx,al
  40fc55:	dec    ebp
  40fc56:	pop    esp
  40fc57:	lods   eax,DWORD PTR ds:[esi]
  40fc58:	and    ebx,DWORD PTR [ebx]
  40fc5a:	mov    edi,0x93b3b76
  40fc5f:	and    edx,esi
  40fc61:	or     dh,bh
  40fc63:	fcomp  DWORD PTR [ecx]
  40fc65:	and    al,0xb7
  40fc67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc68:	icebp  
  40fc69:	cdq    
  40fc6a:	ins    BYTE PTR es:[edi],dx
  40fc6b:	sbb    al,0x65
  40fc6d:	and    edi,DWORD PTR [ecx+ecx*4+0x7430a4be]
  40fc74:	ja     0x40fc23
  40fc76:	stos   BYTE PTR es:[edi],al
  40fc77:	mov    cl,0x3a
  40fc79:	push   ebx
  40fc7a:	or     BYTE PTR [edi],bh
  40fc7c:	xor    BYTE PTR [ecx],0xe4
  40fc7f:	fsub   DWORD PTR [eax+0x52]
  40fc82:	out    dx,al
  40fc83:	dec    esi
  40fc84:	inc    ebp
  40fc85:	dec    esi
  40fc86:	ret    
  40fc87:	fwait
  40fc88:	sar    DWORD PTR [ebx-0x17a9f605],0xd7
  40fc8f:	jne    0x40fc86
  40fc91:	push   ss
  40fc92:	leave  
  40fc93:	xchg   esi,eax
  40fc94:	xchg   ebx,eax
  40fc95:	outs   dx,DWORD PTR ds:[esi]
  40fc96:	sub    ecx,DWORD PTR [eax-0x67]
  40fc99:	xchg   ebx,eax
  40fc9a:	inc    ebp
  40fc9b:	lods   al,BYTE PTR ds:[si]
  40fc9d:	or     BYTE PTR [edi+eiz*4+0x59],ah
  40fca1:	es mov edi,0x408c394
  40fca7:	and    ebp,ecx
  40fca9:	repz xor al,0xc2
  40fcac:	sbb    DWORD PTR [ecx-0x21],edx
  40fcaf:	scas   al,BYTE PTR es:[edi]
  40fcb0:	mov    ss,WORD PTR [ecx-0x35]
  40fcb3:	xlat   BYTE PTR ds:[ebx]
  40fcb4:	leave  
  40fcb5:	repnz mov cl,0xeb
  40fcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb9:	int    0x14
  40fcbb:	inc    edi
  40fcbc:	enter  0x293a,0xc9
  40fcc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc1:	not    edi
  40fcc3:	pop    edi
  40fcc4:	iret   
  40fcc5:	push   es
  40fcc6:	jns    0x40fc69
  40fcc8:	es push ecx
  40fcca:	add    BYTE PTR [ebx+0x55689cb],cl
  40fcd0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40fcd2:	fist   WORD PTR [edx-0x7c]
  40fcd5:	or     DWORD PTR [ebx+0xaad7255],edi
  40fcdb:	lods   eax,DWORD PTR ds:[esi]
  40fcdc:	or     eax,DWORD PTR [ecx-0x23]
  40fcdf:	jmp    0x53ea:0xfe92d73d
  40fce6:	aam    0x6a
  40fce8:	adc    al,0x54
  40fcea:	cmp    esp,DWORD PTR [edi-0x6f78bc9f]
  40fcf0:	and    DWORD PTR [ebx],0xfffffff5
  40fcf3:	push   cs
  40fcf4:	stos   DWORD PTR es:[edi],eax
  40fcf5:	push   0x4f9a3ec4
  40fcfa:	sbb    ah,bl
  40fcfc:	push   ebx
  40fcfd:	mov    dl,0x3e
  40fcff:	push   esi
  40fd00:	jo     0x40fd40
  40fd02:	and    eax,0xc850f215
  40fd07:	jns    0x40fce6
  40fd09:	add    BYTE PTR ds:0x94dece8a,dl
  40fd0f:	inc    edi
  40fd10:	dec    esi
  40fd11:	out    dx,eax
  40fd12:	jmp    0x772e:0x494a8beb
  40fd19:	or     DWORD PTR [ebp-0x227ca720],esp
  40fd1f:	pop    eax
  40fd20:	inc    ebp
  40fd21:	enter  0x1291,0x65
  40fd25:	std    
  40fd26:	inc    ebp
  40fd27:	clc    
  40fd28:	jns    0x40fd80
  40fd2a:	pusha  
  40fd2b:	mov    esi,0x9b38441c
  40fd30:	aaa    
  40fd31:	lahf   
  40fd32:	sub    DWORD PTR [edi+0x2e],ebx
  40fd35:	sub    DWORD PTR [ecx+0x2a],0xdde21e3b
  40fd3c:	pop    edi
  40fd3d:	jle    0x40fd1b
  40fd3f:	push   ebx
  40fd40:	xchg   esp,eax
  40fd41:	aam    0x9b
  40fd43:	adc    DWORD PTR [edx],ebp
  40fd45:	ficom  WORD PTR [ecx-0x12cdd28f]
  40fd4b:	dec    ebp
  40fd4c:	push   ecx
  40fd4d:	push   ebx
  40fd4e:	inc    edx
  40fd4f:	mov    al,0x30
  40fd51:	pop    eax
  40fd52:	in     al,0x3f
  40fd54:	xchg   ebp,eax
  40fd55:	outs   dx,DWORD PTR ds:[esi]
  40fd56:	bound  esp,QWORD PTR [edx-0x4e]
  40fd59:	inc    ebp
  40fd5a:	cdq    
  40fd5b:	push   0x4889f026
  40fd60:	movsx  esp,BYTE PTR [edi+0x13]
  40fd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd65:	sbb    eax,0x350e6180
  40fd6a:	mov    bh,0x90
  40fd6c:	inc    eax
  40fd6d:	push   eax
  40fd6e:	mov    ds:0xfec6b403,eax
  40fd73:	stos   DWORD PTR es:[edi],eax
  40fd74:	imul   esi,DWORD PTR [edi+0x343141c5],0x66205a68
  40fd7e:	pop    es
  40fd7f:	add    esi,ebp
  40fd81:	test   eax,0xbe9a3317
  40fd86:	lods   al,BYTE PTR ds:[esi]
  40fd87:	pop    es
  40fd88:	(bad)  
  40fd89:	fimul  WORD PTR [ebx]
  40fd8b:	leave  
  40fd8c:	mov    BYTE PTR [eax-0xe],bl
  40fd8f:	pop    ecx
  40fd90:	das    
  40fd91:	lahf   
  40fd92:	add    DWORD PTR [esi-0x33c3b894],0xffffffaf
  40fd99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd9a:	enter  0x385a,0x8f
  40fd9e:	dec    esi
  40fd9f:	arpl   WORD PTR [edx+0x0],si
  40fda2:	or     ch,BYTE PTR [ebx-0x25]
  40fda5:	outs   dx,BYTE PTR ds:[esi]
  40fda6:	push   0x25
  40fda8:	pop    es
  40fda9:	xor    bh,bh
  40fdab:	jge    0x40fd7d
  40fdad:	push   es
  40fdae:	(bad)  
  40fdaf:	nop
  40fdb0:	xor    BYTE PTR fs:[ebx-0x477436d8],dl
  40fdb7:	sub    edi,DWORD PTR [ebp-0x57]
  40fdba:	xor    DWORD PTR [ebp+0x6f],0xfffffffb
  40fdbe:	jg     0x40fd7e
  40fdc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc1:	push   ds
  40fdc2:	xchg   esp,eax
  40fdc3:	push   ds
  40fdc4:	jg     0x40fe3b
  40fdc6:	mov    ch,0x2a
  40fdc8:	mov    esp,0x8199d0d0
  40fdcd:	push   ebx
  40fdce:	xchg   BYTE PTR [ecx+eiz*4],bh
  40fdd1:	add    al,0x18
  40fdd3:	sub    ah,BYTE PTR [eax]
  40fdd5:	loopne 0x40fda4
  40fdd7:	pop    ss
  40fdd8:	inc    esp
  40fdd9:	ins    DWORD PTR es:[edi],dx
  40fdda:	jle    0x40fd72
  40fddc:	jmp    FWORD PTR [esp+eax*1]
  40fddf:	add    eax,0x565cdac3
  40fde4:	(bad)  
  40fde5:	je     0x40fd81
  40fde7:	sub    dh,bh
  40fde9:	jo     0x40fdba
  40fdeb:	jne    0x5c2d310f
  40fdf1:	mov    ah,0x42
  40fdf3:	xor    cl,BYTE PTR [edi+0x67]
  40fdf6:	adc    BYTE PTR [ecx],0xf4
  40fdf9:	xor    ecx,ecx
  40fdfb:	add    BYTE PTR ds:0xf15a86f3,dh
  40fe01:	popf   
  40fe02:	call   0xbbed:0x722852f6
  40fe09:	hlt    
  40fe0a:	dec    edx
  40fe0b:	imul   ebx,DWORD PTR [ebx-0x65],0xffffffb8
  40fe0f:	test   DWORD PTR [esp+ebx*2-0x45cdbfd9],esi
  40fe16:	push   eax
  40fe17:	rcr    DWORD PTR [ebx],cl
  40fe19:	ja     0x40fda3
  40fe1b:	mov    esi,es
  40fe1d:	sbb    edi,eax
  40fe1f:	loop   0x40fe18
  40fe21:	(bad)  
  40fe22:	shl    BYTE PTR [edi],cl
  40fe24:	mov    eax,0xb446049b
  40fe29:	dec    edx
  40fe2a:	and    al,0x7e
  40fe2c:	and    eax,DWORD PTR [edx]
  40fe2e:	adc    bh,BYTE PTR [ebx]
  40fe30:	fwait
  40fe31:	sub    bl,BYTE PTR gs:[esi]
  40fe34:	push   edx
  40fe35:	add    BYTE PTR [ecx-0x74d99923],bl
  40fe3b:	sub    esp,DWORD PTR [edx]
  40fe3d:	mov    ah,0x5b
  40fe3f:	ja     0x40feae
  40fe41:	test   DWORD PTR [ecx-0x364c31f7],esp
  40fe47:	inc    ebp
  40fe48:	lods   eax,DWORD PTR ds:[esi]
  40fe49:	ficomp DWORD PTR [esi-0x5a217d76]
  40fe4f:	and    esp,DWORD PTR [ebx]
  40fe51:	call   0x151599cd
  40fe56:	(bad)  
  40fe57:	fdivrp st(3),st
  40fe59:	mov    fs,WORD PTR [ebx+0x25d3c728]
  40fe5f:	push   0xead4fa4
  40fe64:	push   ds
  40fe65:	popa   
  40fe66:	push   0xffffffab
  40fe68:	inc    esi
  40fe69:	push   ebx
  40fe6a:	mov    ecx,0xe31ab120
  40fe6f:	nop
  40fe70:	xlat   BYTE PTR ds:[ebx]
  40fe71:	dec    esi
  40fe72:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40fe74:	mov    esp,0x8e0335b
  40fe79:	(bad)  [eax]
  40fe7b:	push   eax
  40fe7c:	pop    ds
  40fe7d:	popf   
  40fe7e:	test   al,0x38
  40fe80:	mov    ebx,edi
  40fe82:	dec    ecx
  40fe83:	xchg   esp,eax
  40fe84:	sub    al,0xbb
  40fe86:	mov    eax,ds:0xe4a072d2
  40fe8b:	pop    esi
  40fe8c:	mov    eax,0xcbb9ba67
  40fe91:	or     BYTE PTR [ebx+0x27],ah
  40fe94:	jns    0x40fefc
  40fe96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe97:	loopne 0x40fe23
  40fe99:	out    0x77,al
  40fe9b:	out    dx,al
  40fe9c:	sbb    eax,0x4da081b4
  40fea1:	scas   eax,DWORD PTR es:[edi]
  40fea2:	and    bh,BYTE PTR [ebx+0x14]
  40fea5:	xchg   esp,eax
  40fea6:	mov    edi,eax
  40fea8:	loopne 0x40fe40
  40feaa:	jmp    0xe600:0x4f3b7641
  40feb1:	ds out 0x70,eax
  40feb4:	ficomp DWORD PTR [ecx-0x669a7bd6]
  40feba:	mov    dh,0xa0
  40febc:	sar    al,1
  40febe:	(bad)  [ecx-0x4d]
  40fec1:	sub    al,0xf4
  40fec3:	and    edi,DWORD PTR [ebx+ecx*1-0xbc9f970]
  40feca:	pusha  
  40fecb:	adc    BYTE PTR [ecx-0x308db2b4],bh
  40fed1:	jmp    0x32011321
  40fed6:	inc    edi
  40fed7:	mov    ?,WORD PTR [ebp-0x1bc61705]
  40fedd:	cdq    
  40fede:	fistp  WORD PTR [ebp-0x10f95554]
  40fee4:	fdiv   DWORD PTR [edi]
  40fee6:	das    
  40fee7:	call   0x8334a5a4
  40feec:	xchg   ecx,eax
  40feed:	mov    cl,0x5f
  40feef:	xlat   BYTE PTR ds:[ebx]
  40fef0:	push   esp
  40fef1:	mov    esp,DWORD PTR [ebp+0x51389f83]
  40fef7:	iret   
  40fef8:	retf   0x8155
  40fefb:	mov    ss,edi
  40fefd:	mov    esp,0x5660b6e3
  40ff02:	jg     0x40fee9
  40ff04:	cmp    ebp,DWORD PTR [edx-0xe]
  40ff07:	mov    eax,0xa851954b
  40ff0c:	cmp    ebp,DWORD PTR [edi+0x2ae8b9c4]
  40ff12:	retf   
  40ff13:	dec    ebp
  40ff14:	(bad)  
  40ff15:	cmp    ebx,ebp
  40ff17:	and    al,0xf
  40ff19:	dec    ebx
  40ff1a:	jle    0x40ff38
  40ff1c:	push   ebp
  40ff1d:	popa   
  40ff1e:	lea    ecx,[ecx]
  40ff20:	inc    ebx
  40ff21:	popf   
  40ff22:	cmp    DWORD PTR [eax],ecx
  40ff24:	pop    edx
  40ff25:	ins    BYTE PTR es:[edi],dx
  40ff26:	ins    DWORD PTR es:[edi],dx
  40ff27:	mov    ds:0x19938327,al
  40ff2c:	pop    es
  40ff2d:	mov    edx,0x95e5beb4
  40ff32:	and    BYTE PTR [esi],ch
  40ff34:	cli    
  40ff35:	dec    edi
  40ff36:	std    
  40ff37:	popa   
  40ff38:	inc    DWORD PTR [ebx+ecx*1]
  40ff3b:	dec    ebp
  40ff3c:	dec    edx
  40ff3d:	fld    QWORD PTR [edi]
  40ff3f:	shr    DWORD PTR [edi+0xdfebab7],0x0
  40ff46:	mov    edx,0x8382f7cd
  40ff4b:	dec    ebp
  40ff4c:	add    ebx,ecx
  40ff4e:	fidivr DWORD PTR [esi]
  40ff50:	mov    esp,0x2528cdf
  40ff55:	(bad)  
  40ff57:	cmp    ebp,DWORD PTR [edi]
  40ff59:	(bad)  
  40ff5a:	adc    eax,0xfc88fa3c
  40ff5f:	sub    edi,esi
  40ff61:	mov    ecx,0xfc6f4896
  40ff66:	clc    
  40ff67:	aam    0xce
  40ff69:	data16 shl cl,cl
  40ff6c:	ret    
  40ff6d:	cmp    al,0xd
  40ff6f:	retf   0x1a3c
  40ff72:	int3   
  40ff73:	imul   ebx,DWORD PTR [eax+ebx*1],0xeae9be7
  40ff7a:	dec    ebp
  40ff7b:	mov    dl,0x8d
  40ff7d:	sub    al,bl
  40ff7f:	mov    al,0x5c
  40ff81:	dec    ecx
  40ff82:	xchg   esp,eax
  40ff83:	(bad)  
  40ff84:	cmp    al,0x55
  40ff86:	jmp    0xa2054a8f
  40ff8b:	out    0x24,eax
  40ff8d:	mov    ds:0x90bd59a8,al
  40ff92:	in     eax,0xdc
  40ff94:	pop    eax
  40ff95:	arpl   WORD PTR [eax-0x2b],di
  40ff98:	xchg   edx,eax
  40ff99:	test   al,0x15
  40ff9b:	daa    
  40ff9c:	jno    0x40ffd6
  40ff9e:	lahf   
  40ff9f:	neg    DWORD PTR [ebp-0x28bc9b9d]
  40ffa5:	(bad)  
  40ffa6:	mov    BYTE PTR [ebx+0x33],dh
  40ffa9:	clc    
  40ffaa:	fwait
  40ffab:	sahf   
  40ffac:	or     eax,0x2dd9338e
  40ffb1:	and    eax,DWORD PTR [eax+0xa06a435]
  40ffb7:	mul    DWORD PTR [esi+0x667dc7a8]
  40ffbd:	clc    
  40ffbe:	ja     0x40ff9a
  40ffc0:	sub    eax,0x238a61e2
  40ffc5:	pop    eax
  40ffc6:	sbb    ebx,DWORD PTR [edx]
  40ffc8:	fiadd  WORD PTR [ebx+0x48]
  40ffcb:	lods   al,BYTE PTR ds:[esi]
  40ffcc:	adc    al,0xdd
  40ffce:	jmp    0x40ff79
  40ffd0:	mov    ah,0xe9
  40ffd2:	pop    edx
  40ffd3:	pop    ebp
  40ffd4:	jl     0x40ffe0
  40ffd6:	push   ecx
  40ffd7:	dec    BYTE PTR [ecx+0x6b]
  40ffda:	test   al,0xe1
  40ffdc:	int    0x2d
  40ffde:	push   edi
  40ffdf:	sub    dh,BYTE PTR [esi-0x63f0732a]
  40ffe5:	dec    ebp
  40ffe6:	sbb    esi,esi
  40ffe8:	and    eax,0x187a7337
  40ffed:	push   0xffffffeb
  40ffef:	dec    ecx
  40fff0:	jbe    0x40ff9d
  40fff2:	add    cl,al
  40fff4:	push   DWORD PTR [ecx+eax*4+0x1ad09ef2]
  40fffb:	dec    ebp
  40fffc:	adc    DWORD PTR gs:[edi+0x528a5ee7],edx
  410003:	std    
  410004:	push   ecx
  410005:	out    0x9b,eax
  410007:	or     bh,BYTE PTR [esi-0x68462bb4]
  41000d:	and    ebp,DWORD PTR [eax+0x26]
  410010:	mov    ecx,0x222c4de5
  410015:	jp     0x410019
  410017:	in     eax,0x8f
  410019:	cs jae 0x40ffa4
  41001c:	cmp    DWORD PTR [esi-0x23],edx
  41001f:	or     edx,DWORD PTR [edx-0x200d2736]
  410025:	push   ds
  410026:	or     eax,0xa7c77b57
  41002b:	pop    es
  41002c:	pop    edx
  41002d:	mov    ch,0x1e
  41002f:	sar    BYTE PTR [eax],1
  410031:	xchg   edi,eax
  410032:	jae    0x40fff9
  410034:	out    0x99,eax
  410036:	jle    0x410092
  410038:	mov    edi,DWORD PTR [eax]
  41003a:	test   BYTE PTR [edi-0x42],0x96
  41003e:	mov    dl,0xae
  410040:	jecxz  0x4100c0
  410042:	and    bl,al
  410044:	aaa    
  410045:	mov    dh,BYTE PTR [esi-0x8]
  410048:	ror    BYTE PTR [ebp-0x75ba104e],cl
  41004e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41004f:	outs   dx,BYTE PTR ds:[esi]
  410050:	in     al,0x9d
  410052:	jge    0x410093
  410054:	mov    ch,0xfa
  410056:	jbe    0x41004b
  410058:	add    DWORD PTR [esp+ebp*8+0x49],ebp
  41005c:	mov    ds:0x602d480d,al
  410061:	test   ecx,edi
  410063:	adc    esp,DWORD PTR [ecx]
  410065:	jae    0x4100d7
  410067:	sbb    eax,0x25c38a7f
  41006c:	ja     0x410016
  41006e:	jno    0x410009
  410070:	add    BYTE PTR [ecx+ebp*4-0x30],ch
  410074:	aad    0x6f
  410076:	cmp    DWORD PTR [eax-0x6a],esi
  410079:	pop    ecx
  41007a:	sbb    BYTE PTR [eax],ah
  41007c:	or     dl,bl
  41007e:	sbb    dh,BYTE PTR [esi-0x6d]
  410081:	push   ss
  410082:	sub    eax,0x88b19347
  410087:	aam    0xef
  410089:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41008b:	mov    edi,0xbc5d3f13
  410090:	arpl   WORD PTR [edx+ebx*8+0x7507792d],ax
  410097:	ds lock push ds
  41009a:	iret   
  41009b:	loopne 0x41009b
  41009d:	daa    
  41009e:	push   eax
  41009f:	(bad)  
  4100a0:	addr16 imul esp,eax,0x6d
  4100a4:	jbe    0x410103
  4100a6:	arpl   WORD PTR [esi+0x5],dx
  4100a9:	pop    ebx
  4100aa:	adc    DWORD PTR [ecx],eax
  4100ac:	jb     0x410062
  4100ae:	jns    0x41012f
  4100b0:	rcl    BYTE PTR ds:0x4c57fbb5,1
  4100b6:	bound  ecx,QWORD PTR [edx-0x41]
  4100b9:	(bad)  
  4100ba:	pop    edx
  4100bb:	daa    
  4100bc:	mov    al,0x6
  4100be:	loopne 0x4100b9
  4100c0:	std    
  4100c1:	ds (bad) 
  4100c3:	pop    esi
  4100c4:	xor    ah,BYTE PTR [edi+0x6d30e917]
  4100ca:	mov    cl,0x46
  4100cc:	or     DWORD PTR [edi-0x6c],ecx
  4100cf:	call   0x2e260189
  4100d4:	retf   
  4100d5:	sub    DWORD PTR [edi-0x4f2cbb61],esp
  4100db:	mov    eax,ds:0x552772c1
  4100e0:	jnp    0x410149
  4100e2:	inc    esp
  4100e3:	pop    ds
  4100e4:	xchg   esp,eax
  4100e5:	loope  0x410078
  4100e7:	lds    esi,FWORD PTR [eax]
  4100e9:	mov    ss,WORD PTR [ecx+0x2]
  4100ec:	imul   esi,DWORD PTR [esi+0x2b5b81af],0xffffffbf
  4100f3:	jno    0x4100e5
  4100f5:	sbb    al,BYTE PTR [edi]
  4100f7:	lods   al,BYTE PTR ds:[esi]
  4100f8:	test   al,0xa0
  4100fa:	imul   edx,DWORD PTR [edi-0x25],0x1acb831f
  410101:	std    
  410102:	popf   
  410103:	out    0xc3,al
  410105:	xchg   esi,eax
  410106:	(bad)  
  410107:	cld    
  410108:	mov    ds:0x47b94f9d,al
  41010d:	sbb    eax,0x433f96cc
  410112:	inc    esi
  410113:	(bad)  
  410115:	push   ss
  410116:	retf   0x7812
  410119:	and    BYTE PTR [ebp+0x6eeec1a5],0xcb
  410120:	sub    al,0xec
  410122:	cmp    cl,BYTE PTR [ecx]
  410124:	jl     0x4100ba
  410126:	mov    ecx,0x69c1b67a
  41012b:	pop    es
  41012c:	push   esp
  41012d:	pop    ebx
  41012e:	pop    ebp
  41012f:	(bad)  
  410130:	mov    ds,WORD PTR [edx]
  410132:	scas   al,BYTE PTR es:[edi]
  410133:	aas    
  410134:	or     DWORD PTR [ebp+edx*1-0x1],edi
  410138:	pop    ebp
  410139:	xchg   ebp,eax
  41013a:	test   DWORD PTR [edx],edi
  41013c:	mov    WORD PTR [ebx],es
  41013e:	dec    eax
  41013f:	dec    eax
  410140:	iret   
  410141:	loop   0x410191
  410143:	(bad)  
  410144:	fsub   st,st(7)
  410146:	inc    eax
  410147:	fisttp WORD PTR [ebx+esi*8-0x66e32575]
  41014e:	lds    edi,FWORD PTR [eax]
  410150:	rol    BYTE PTR [ecx-0x70],cl
  410153:	addr16 (bad) 
  410155:	jnp    0x41018f
  410157:	in     al,0xb0
  410159:	loope  0x410154
  41015b:	ss mov ecx,edx
  41015e:	sbb    al,0x35
  410160:	or     DWORD PTR [esp+ebp*4-0xe],edx
  410164:	add    bl,cl
  410166:	mov    bh,0x81
  410168:	and    ch,BYTE PTR [ebx+0x14e0de40]
  41016e:	adc    eax,0xd86dc877
  410173:	mov    WORD PTR [ecx],gs
  410175:	iret   
  410176:	cmp    ch,bh
  410178:	jne    0x41016c
  41017a:	pop    esp
  41017b:	mov    ah,0xf8
  41017d:	and    DWORD PTR [eax+0x694b3da7],0xffffffb7
  410184:	push   ebx
  410185:	data16 out dx,al
  410187:	cmp    al,0x4b
  410189:	rcl    DWORD PTR [eax+0x15d7ff65],1
  41018f:	enter  0xda47,0x6f
  410193:	inc    ebx
  410194:	test   al,0xf4
  410196:	xchg   ebx,eax
  410197:	adc    BYTE PTR [edx-0x76],ah
  41019a:	loop   0x4101cb
  41019c:	xor    al,0x17
  41019e:	ins    DWORD PTR es:[edi],dx
  41019f:	enter  0xb6a9,0x79
  4101a3:	jl     0x4101b7
  4101a5:	stos   DWORD PTR es:[edi],eax
  4101a6:	aas    
  4101a7:	jnp    0x4101c5
  4101a9:	std    
  4101aa:	imul   esp,DWORD PTR [esi+0x59],0x23
  4101ae:	jmp    0x41021e
  4101b0:	dec    edx
  4101b1:	sbb    esp,DWORD PTR [eax+0x5c]
  4101b4:	sub    edx,DWORD PTR [edx]
  4101b6:	lds    esi,FWORD PTR [ebx-0x5d]
  4101b9:	jl     0x410167
  4101bb:	(bad)  
  4101bc:	idiv   BYTE PTR [edx]
  4101be:	jae    0x41014c
  4101c0:	xchg   ebx,eax
  4101c1:	shl    DWORD PTR [ebp-0x29],0x6c
  4101c5:	hlt    
  4101c6:	dec    ebx
  4101c7:	jmp    0x410235
  4101c9:	xchg   edi,eax
  4101ca:	inc    eax
  4101cb:	test   eax,0x3696c506
  4101d0:	mov    ecx,0x4d7b68fc
  4101d5:	xchg   edi,eax
  4101d6:	or     al,0xd
  4101d8:	mov    cl,0x3c
  4101da:	mov    ds:0xd1f260b9,eax
  4101df:	xor    dl,BYTE PTR [edi-0x14d4b2]
  4101e5:	repnz pop eax
  4101e7:	jp     0x4101bb
  4101e9:	and    esi,DWORD PTR [ebp+0x43]
  4101ec:	ds cmp al,0xf6
  4101ef:	fiadd  WORD PTR [edi-0x1c]
  4101f2:	cmp    BYTE PTR [eax-0x5d],ch
  4101f5:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4101f7:	sti    
  4101f8:	xchg   edi,eax
  4101f9:	mov    eax,DWORD PTR [edx]
  4101fb:	icebp  
  4101fc:	(bad)  
  4101fd:	lods   al,BYTE PTR ds:[esi]
  4101fe:	outs   dx,DWORD PTR ds:[esi]
  4101ff:	pop    ecx
  410200:	scas   eax,DWORD PTR es:[edi]
  410201:	test   eax,0x7c461880
  410206:	push   eax
  410207:	rol    DWORD PTR [ecx-0x36],1
  41020a:	adc    DWORD PTR ds:0xddb79c39,eax
  410210:	add    ecx,edi
  410212:	and    eax,0x59733c52
  410217:	inc    ebx
  410218:	ja     0x41025b
  41021a:	lods   al,BYTE PTR ds:[esi]
  41021b:	test   eax,esi
  41021d:	popf   
  41021e:	aad    0xd3
  410220:	inc    ecx
  410221:	inc    ebx
  410222:	into   
  410223:	push   ebx
  410224:	out    dx,al
  410225:	retf   
  410226:	icebp  
  410227:	sahf   
  410228:	xchg   ebx,eax
  410229:	inc    ecx
  41022a:	mov    ecx,0xeb3efc87
  41022f:	ds adc eax,0x18a3365c
  410235:	stos   DWORD PTR es:[edi],eax
  410236:	or     ch,ah
  410238:	int3   
  410239:	add    BYTE PTR [edx+0x5846e3b],dl
  41023f:	xchg   ecx,eax
  410240:	jle    0x410224
  410242:	xor    al,0x8e
  410244:	adc    BYTE PTR [ebx],0x6c
  410247:	inc    ebx
  410248:	icebp  
  410249:	pop    eax
  41024a:	xor    ch,BYTE PTR [eax+esi*8]
  41024d:	or     DWORD PTR [ebx+0x3ef8d38a],esp
  410253:	add    al,0x8b
  410255:	fstp   TBYTE PTR [ecx-0x5b]
  410258:	xchg   BYTE PTR [edi+0x698ebfa6],bl
  41025e:	jb     0x410239
  410260:	hlt    
  410261:	push   ds
  410262:	mov    al,ds:0xb4ed2100
  410267:	sti    
  410268:	sub    al,0x68
  41026a:	xor    ch,BYTE PTR [edx+0x5d]
  41026d:	fist   DWORD PTR [eax+0x53]
  410270:	xchg   DWORD PTR [ecx],ebp
  410272:	call   0x9a3c0f92
  410277:	es nop
  410279:	mov    al,0x97
  41027b:	addr16 mov eax,ds:0xa3e4
  41027f:	inc    eax
  410280:	push   ecx
  410281:	push   edi
  410282:	jle    0x410252
  410284:	test   eax,0x80d7ef8f
  410289:	xor    eax,0x73990236
  41028e:	int    0xc7
  410290:	sub    eax,0x35ff1c0
  410295:	xor    ebx,DWORD PTR [ebp+0x15311a63]
  41029b:	jne    0x410223
  41029d:	mov    cl,0xc
  41029f:	sahf   
  4102a0:	or     ah,cl
  4102a2:	push   cs
  4102a3:	fidiv  WORD PTR [eax+ecx*1-0x6b]
  4102a7:	add    esp,DWORD PTR [ecx]
  4102a9:	xchg   ebx,eax
  4102aa:	xor    dl,BYTE PTR [edi+edi*4-0x22267aa]
  4102b1:	and    BYTE PTR [ebx],bl
  4102b3:	pop    ebx
  4102b4:	add    al,0x8a
  4102b6:	sub    DWORD PTR [eax+0x4c],0xd5f8a8c0
  4102bd:	(bad)  
  4102be:	test   eax,0x87fcf4fd
  4102c3:	sar    BYTE PTR [esi+0x1c],cl
  4102c6:	push   esp
  4102c7:	and    BYTE PTR [eax+0x434f2e83],0x97
  4102ce:	add    ebp,esi
  4102d0:	cmp    cl,BYTE PTR [eax-0x78]
  4102d3:	std    
  4102d4:	fisubr WORD PTR [edx+ecx*8-0x109a6f33]
  4102db:	push   ds
  4102dc:	ret    0xf692
  4102df:	cmp    al,0x7e
  4102e1:	xchg   ecx,eax
  4102e2:	aad    0x22
  4102e4:	dec    edi
  4102e5:	(bad)  
  4102e6:	mov    al,ds:0x1a354dad
  4102eb:	test   al,0x2f
  4102ed:	adc    edx,DWORD PTR [edx+0xd]
  4102f0:	out    dx,al
  4102f1:	add    DWORD PTR [edx+0x71],ebx
  4102f4:	pop    edx
  4102f5:	mov    ah,0x19
  4102f7:	(bad)  
  4102f9:	call   FWORD PTR [ebp+eiz*1+0x3eb21c7d]
  410300:	fsubr  DWORD PTR [ecx+0x36a46711]
  410306:	fsub   QWORD PTR [ebx-0x47e24798]
  41030c:	popf   
  41030d:	outs   dx,BYTE PTR ds:[esi]
  41030e:	je     0x410383
  410310:	jae    0x410316
  410312:	xor    al,0x1a
  410315:	test   eax,0xba530cc
  41031a:	push   esi
  41031b:	iret   
  41031c:	jp     0x410326
  41031e:	jno    0x41039c
  410320:	jl     0x41038e
  410322:	rcl    BYTE PTR [edx-0x6d9f60a2],1
  410328:	dec    ebp
  410329:	sbb    DWORD PTR [edx],0x8926aecd
  41032f:	ror    BYTE PTR [esi-0x32],0x59
  410333:	daa    
  410334:	mov    dl,0x71
  410336:	(bad)  
  410337:	call   0x7affea38
  41033c:	call   0x9244:0x2b8d9da5
  410343:	push   esp
  410344:	sbb    DWORD PTR [esi-0xa725ff2],ebp
  41034a:	test   DWORD PTR [esp+eiz*8],ecx
  41034d:	popa   
  41034e:	and    DWORD PTR [ebx+0x41],esi
  410351:	xchg   BYTE PTR [eax+0x8],al
  410354:	jb     0x4103aa
  410356:	xor    ecx,DWORD PTR [edx-0x33df10d4]
  41035c:	cmp    esp,DWORD PTR [edx+0x2362f2d6]
  410362:	jae    0x410332
  410364:	ds out 0x29,al
  410367:	lea    edx,[esi]
  410369:	int3   
  41036a:	or     BYTE PTR [ecx+0x3e4442ca],cl
  410370:	scas   eax,DWORD PTR es:[edi]
  410371:	sbb    eax,0x3b392a74
  410376:	dec    edi
  410377:	repnz dec ebp
  410379:	int    0x80
  41037b:	and    eax,0xc8554639
  410380:	stc    
  410381:	pop    eax
  410382:	(bad)  
  410384:	pop    ss
  410385:	jge    0x41031d
  410387:	push   edi
  410388:	jmp    0xef7b:0x7a9cb7e8
  41038f:	cmp    DWORD PTR [eax+ecx*8-0x2e9137a7],ecx
  410396:	cmp    esp,DWORD PTR [eax-0x64ff668a]
  41039c:	or     edi,DWORD PTR [edi*8+0x1939c3d2]
  4103a3:	push   esi
  4103a4:	push   0x71
  4103a6:	nop
  4103a7:	push   esi
  4103a8:	pop    ecx
  4103a9:	shl    cl,0xa1
  4103ac:	or     ah,al
  4103ae:	(bad)
  4103b2:	mov    al,0xb4
  4103b4:	sti    
  4103b5:	fdiv   st,st(3)
  4103b7:	jnp    0x410347
  4103b9:	iret   
  4103ba:	imul   edi,ebx,0xffffffb8
  4103bd:	add    eax,0x83d564d7
  4103c2:	xchg   ebx,eax
  4103c3:	(bad)  
  4103c4:	sub    edi,DWORD PTR [ecx]
  4103c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c7:	jle    0x4103bd
  4103c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ca:	fsub   QWORD PTR [edi+edi*8]
  4103cd:	mov    fs,WORD PTR [edi-0x1429e385]
  4103d3:	cdq    
  4103d4:	sub    al,0x17
  4103d6:	jecxz  0x410358
  4103d8:	xchg   edx,eax
  4103d9:	stos   DWORD PTR es:[edi],eax
  4103da:	hlt    
  4103db:	in     al,0xd8
  4103dd:	fwait
  4103de:	and    edx,DWORD PTR [eax-0x64]
  4103e1:	mov    ds:0xf99306ea,al
  4103e6:	dec    eax
  4103e7:	pop    ecx
  4103e8:	loopne 0x4103d0
  4103ea:	bound  edi,QWORD PTR [edi]
  4103ec:	xor    esp,DWORD PTR [ecx]
  4103ee:	sub    ebx,ebp
  4103f0:	sub    eax,0x3797ce45
  4103f5:	pop    edx
  4103f6:	push   ss
  4103f7:	xor    eax,0x15fa8a5e
  4103fc:	fs aam 0x46
  4103ff:	lods   eax,DWORD PTR ds:[esi]
  410400:	inc    edx
  410401:	mov    dl,0xf2
  410403:	xor    al,0xf8
  410405:	cmp    BYTE PTR [esi-0x21],dh
  410408:	mov    ebp,0xc3a9a339
  41040d:	in     al,dx
  41040e:	in     al,0x49
  410410:	das    
  410411:	icebp  
  410412:	test   DWORD PTR [ebx-0x1f6c2350],esp
  410418:	scas   eax,DWORD PTR es:[edi]
  410419:	fist   WORD PTR [eax+0x3]
  41041c:	lahf   
  41041d:	sbb    al,0x3a
  41041f:	pop    es
  410420:	add    eax,0xd4a16b30
  410425:	sub    al,al
  410427:	fwait
  410428:	push   0xffffff9d
  41042a:	cmp    al,0xc3
  41042c:	int    0xbb
  41042e:	sub    BYTE PTR [ebp+0x3],bh
  410431:	imul   edi,DWORD PTR [ebx-0x2b],0xd732fab1
  410438:	dec    ebp
  410439:	daa    
  41043a:	pusha  
  41043b:	aas    
  41043c:	dec    edx
  41043d:	idiv   DWORD PTR [ecx+eax*4+0x1a]
  410441:	ret    0x209b
  410444:	mov    eax,ds:0x549757d3
  410449:	sbb    esi,esi
  41044b:	jns    0x410419
  41044d:	int    0x18
  41044f:	cdq    
  410450:	cmp    al,0x23
  410452:	sbb    DWORD PTR [ebx-0x2ecb6e33],ecx
  410458:	ret    
  410459:	les    eax,FWORD PTR [eax-0x623ae523]
  41045f:	mov    ebx,0xf9fbe7e5
  410464:	je     0x41049b
  410466:	sbb    al,0xd7
  410468:	fwait
  410469:	cmp    al,0xf3
  41046b:	sub    DWORD PTR [eax],ebp
  41046d:	and    eax,0xdafc4799
  410472:	lods   eax,DWORD PTR ds:[esi]
  410473:	(bad)  
  410474:	sub    eax,0xba463034
  410479:	cmp    DWORD PTR [edx],eax
  41047b:	sbb    ch,BYTE PTR [eax+0x75]
  41047e:	scas   al,BYTE PTR es:[edi]
  41047f:	mov    esp,0xf5493392
  410484:	ret    0x2c1e
  410487:	clc    
  410488:	pop    edx
  410489:	(bad)  
  41048a:	das    
  41048b:	jle    0x4104b4
  41048d:	int    0x55
  41048f:	xor    BYTE PTR [edx],ah
  410491:	cmp    al,0xa3
  410493:	mov    ebx,DWORD PTR [eax+ebx*8]
  410496:	xlat   BYTE PTR ds:[ebx]
  410497:	mov    eax,ds:0xf8847f6e
  41049c:	pop    esi
  41049d:	sbb    esp,DWORD PTR [ebx+0x1d]
  4104a0:	dec    ebp
  4104a1:	outs   dx,DWORD PTR ds:[esi]
  4104a2:	mov    ah,0xd7
  4104a4:	scas   eax,DWORD PTR es:[edi]
  4104a5:	mov    BYTE PTR [ecx],cl
  4104a7:	jge    0x410517
  4104a9:	clc    
  4104aa:	shl    BYTE PTR [ecx],1
  4104ac:	adc    edi,DWORD PTR [ecx+0x4]
  4104af:	sbb    edx,edx
  4104b1:	scas   eax,DWORD PTR es:[edi]
  4104b2:	mov    BYTE PTR [esi-0x6ab6fbe],al
  4104b8:	test   edx,eax
  4104ba:	mov    ebp,0x5ebf1037
  4104bf:	dec    ebp
  4104c0:	lods   al,BYTE PTR ds:[esi]
  4104c1:	loope  0x4104a4
  4104c3:	push   es
  4104c4:	dec    esi
  4104c5:	(bad)  
  4104c6:	or     eax,ebx
  4104c8:	pop    ebp
  4104c9:	jne    0x4104ff
  4104cb:	push   cs
  4104cc:	fisub  DWORD PTR [esp+edx*8]
  4104cf:	shl    BYTE PTR [esi],cl
  4104d1:	cmp    BYTE PTR [ebx-0x21],ch
  4104d4:	mov    BYTE PTR [ebx-0x4c],bl
  4104d7:	ret    
  4104d8:	xor    eax,0xc7f4c9c8
  4104dd:	les    ecx,FWORD PTR [ebx+eiz*8-0x18]
  4104e1:	out    dx,al
  4104e2:	cmc    
  4104e3:	inc    edi
  4104e4:	inc    ecx
  4104e5:	jl     0x4104ff
  4104e7:	sub    eax,0xdeaffcc2
  4104ec:	xchg   esi,eax
  4104ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104ee:	daa    
  4104ef:	lahf   
  4104f0:	sbb    dh,BYTE PTR [ecx-0x31f819a4]
  4104f6:	loopne 0x4104e2
  4104f8:	sub    edi,DWORD PTR [eax+0x6]
  4104fb:	pop    esp
  4104fc:	pop    ebp
  4104fd:	pop    ecx
  4104fe:	or     BYTE PTR [si+0x2f],0x8c
  410503:	adc    DWORD PTR [esi+ecx*1+0x65],ebp
  410507:	into   
  410508:	inc    ebx
  410509:	cmp    bh,al
  41050b:	in     eax,dx
  41050c:	dec    esi
  41050d:	cld    
  41050e:	cmp    al,0xa4
  410510:	loop   0x410556
  410512:	add    eax,0xbd5653ff
  410517:	retf   0xf03c
  41051a:	jmp    0x4104b6
  41051c:	stos   DWORD PTR es:[edi],eax
  41051d:	lahf   
  41051e:	mov    DWORD PTR [ecx+0x40d6ca38],ebp
  410524:	pop    esi
  410525:	jo     0x4104bc
  410527:	and    bl,0x1d
  41052a:	enter  0xf8dd,0xdb
  41052e:	xor    cl,BYTE PTR [ebp+0x11]
  410531:	ins    DWORD PTR es:[edi],dx
  410532:	xor    ebp,DWORD PTR [eax]
  410534:	test   eax,0x5c0c3c03
  410539:	test   DWORD PTR [edi],eax
  41053b:	test   eax,0x27d1079a
  410540:	push   0x6da3d745
  410545:	ds enter 0x1e13,0xfc
  41054a:	pop    es
  41054b:	pushf  
  41054c:	dec    edx
  41054d:	pop    edi
  41054e:	or     al,BYTE PTR [edx-0x1243d2a8]
  410554:	inc    edi
  410555:	push   es
  410556:	(bad)  
  410558:	mov    dl,0xe0
  41055a:	pop    edx
  41055b:	jmp    0xc1cf:0x8ecd1a1b
  410562:	xor    ah,BYTE PTR [ecx]
  410564:	scas   eax,DWORD PTR es:[edi]
  410565:	out    dx,eax
  410566:	cmp    eax,0xefa3df71
  41056b:	push   ebx
  41056c:	add    dl,BYTE PTR [ebx]
  41056e:	xor    al,0x64
  410570:	jg     0x410535
  410572:	jbe    0x410572
  410574:	sub    dh,BYTE PTR [edx-0x5f]
  410577:	mov    edi,0x43c3ea8c
  41057c:	inc    edx
  41057d:	xor    DWORD PTR [edi],edi
  41057f:	ins    BYTE PTR es:[edi],dx
  410580:	mov    ebp,0x6ab5a0cf
  410585:	leave  
  410586:	add    dh,BYTE PTR [ecx-0x32f3b952]
  41058c:	cmp    bl,dh
  41058e:	test   BYTE PTR [ebx],cl
  410590:	gs inc edx
  410592:	and    dl,bl
  410594:	mov    ds:0x8f40905c,al
  410599:	inc    edi
  41059a:	xchg   edx,eax
  41059b:	fwait
  41059c:	xor    DWORD PTR [edi-0x73f92447],edi
  4105a2:	adc    ah,BYTE PTR [ecx+edx*2+0x24]
  4105a6:	loop   0x410552
  4105a8:	dec    esp
  4105a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105aa:	dec    ebx
  4105ab:	cmc    
  4105ac:	adc    DWORD PTR [esi+0x1f],esi
  4105af:	xchg   edx,eax
  4105b0:	and    eax,0xb99e7ae3
  4105b5:	jecxz  0x410549
  4105b7:	push   0xea8e4122
  4105bc:	dec    esp
  4105bd:	data16 jo 0x4105ed
  4105c0:	and    al,0x9d
  4105c2:	push   0xcdc134ed
  4105c7:	and    BYTE PTR [ecx+0x21f0b75a],0x77
  4105ce:	pop    es
  4105cf:	cmc    
  4105d0:	int    0xfd
  4105d2:	mov    ebp,0x830e448a
  4105d7:	adc    esi,ebp
  4105d9:	in     al,0x8
  4105db:	aas    
  4105dc:	jmp    0x6dc944b4
  4105e1:	arpl   cx,bx
  4105e3:	fnstcw WORD PTR [esi+0x450c5393]
  4105e9:	in     al,0xe8
  4105eb:	pop    edi
  4105ec:	inc    esi
  4105ed:	cmp    BYTE PTR ds:0x92058565,dh
  4105f3:	push   es
  4105f4:	mov    BYTE PTR [ebx],dl
  4105f6:	jl     0x410663
  4105f8:	gs loop 0x410643
  4105fb:	jecxz  0x4105cc
  4105fd:	and    esi,0xa73f1cfe
  410603:	or     BYTE PTR [ecx],ch
  410605:	loopne 0x4105ed
  410607:	xchg   ecx,eax
  410608:	xchg   edx,eax
  410609:	jmp    0x3bd9:0x782c981b
  410610:	inc    ecx
  410611:	fstp   QWORD PTR [ebx]
  410613:	xlat   BYTE PTR ds:[ebx]
  410614:	mov    ah,0xf8
  410616:	shl    bh,0x20
  410619:	jg     0x410631
  41061b:	mov    esp,0xb58d0157
  410620:	lahf   
  410621:	mov    al,0x3e
  410623:	mov    edx,0x84cf6bc
  410628:	mov    bl,0x17
  41062a:	mov    ebx,0xf8d0cc1b
  41062f:	fisubr DWORD PTR [ecx-0x62]
  410632:	clc    
  410633:	mov    bl,0xb5
  410635:	imul   ecx,DWORD PTR [eax-0x7c],0xcc937af7
  41063c:	(bad)  
  41063d:	xlat   BYTE PTR ds:[ebx]
  41063e:	sub    dl,dh
  410640:	mov    edx,ecx
  410642:	imul   esi,DWORD PTR ss:[ecx+0x52df5143],0x3b
  41064a:	out    0x2c,eax
  41064c:	hlt    
  41064d:	int3   
  41064e:	dec    bp
  410650:	cld    
  410651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410652:	icebp  
  410653:	loop   0x4105f7
  410655:	mov    BYTE PTR [edx+0xc7a1991],bl
  41065b:	loop   0x410654
  41065d:	adc    BYTE PTR [ecx],al
  41065f:	mov    esi,DWORD PTR [edi]
  410661:	sahf   
  410662:	ins    DWORD PTR es:[edi],dx
  410663:	and    BYTE PTR [edi+0x65a42c66],dh
  410669:	adc    ebx,ebp
  41066b:	pop    ds
  41066c:	ins    BYTE PTR es:[edi],dx
  41066d:	push   ebp
  41066e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41066f:	mov    ebp,0x5aac5b1a
  410674:	or     BYTE PTR [ecx-0x2f],al
  410677:	xor    DWORD PTR [ebp-0x705e0eb6],0x67876e77
  410681:	sbb    esp,DWORD PTR [esi]
  410683:	fimul  DWORD PTR [ecx-0x57]
  410686:	sbb    al,0x51
  410688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410689:	xor    eax,esp
  41068b:	(bad)  
  41068c:	dec    edi
  41068d:	xchg   DWORD PTR [edi+0x1d3efc0],ecx
  410693:	call   0xb04c1226
  410698:	xor    ecx,ebp
  41069a:	mov    ebx,0x5c0891e0
  41069f:	out    0x12,al
  4106a1:	xlat   BYTE PTR ds:[ebx]
  4106a2:	shl    BYTE PTR [ebp-0x67],cl
  4106a5:	(bad)  
  4106a6:	test   al,0x16
  4106a8:	mov    ds:0xefcc6994,eax
  4106ad:	stos   DWORD PTR es:[edi],eax
  4106ae:	mov    DWORD PTR [edx],esp
  4106b0:	loop   0x4106ba
  4106b2:	add    DWORD PTR ds:0x4a0db977,esp
  4106b8:	dec    esp
  4106b9:	mov    ebp,0x61097a4b
  4106be:	add    DWORD PTR [edi],edx
  4106c0:	cmp    eax,0x46a4af57
  4106c5:	sub    DWORD PTR [edx],edi
  4106c7:	jl     0x4106e0
  4106c9:	push   edx
  4106ca:	cwde   
  4106cb:	inc    esp
  4106cc:	sub    eax,0x345d81d7
  4106d1:	cs add esp,esp
  4106d4:	pop    esi
  4106d5:	cmp    eax,DWORD PTR [edi]
  4106d7:	cmp    ecx,DWORD PTR [eax+0x71]
  4106da:	sub    ah,bh
  4106dc:	fld    QWORD PTR [eax+0x4806a2f5]
  4106e2:	xlat   BYTE PTR ds:[ebx]
  4106e3:	ins    DWORD PTR es:[edi],dx
  4106e4:	add    bl,BYTE PTR [esi-0x6e]
  4106e7:	out    dx,eax
  4106e8:	rol    DWORD PTR [edi+0x14d72381],1
  4106ee:	or     ah,al
  4106f0:	jmp    0x878091d7
  4106f5:	shr    BYTE PTR [edi],cl
  4106f7:	mov    cs,WORD PTR [ebp-0x1e]
  4106fa:	add    al,0x33
  4106fc:	lds    ecx,FWORD PTR [ebx-0x196bf43d]
  410702:	scas   al,BYTE PTR es:[edi]
  410703:	mov    ebp,DWORD PTR [ebp-0x6505e668]
  410709:	mov    ds:0x16677ba0,ax
  41070f:	test   BYTE PTR [esi-0x63fcd926],al
  410715:	pop    eax
  410716:	dec    ebp
  410717:	loop   0x410779
  410719:	(bad)  
  41071a:	retf   0xd3a6
  41071d:	cmp    BYTE PTR [esi-0x125e8c40],0xf5
  410724:	push   edx
  410725:	aad    0x63
  410727:	and    dl,BYTE PTR [ebx-0x66698a0]
  41072d:	popf   
  41072e:	and    ecx,DWORD PTR [edi+0x3239203e]
  410734:	je     0x4106ec
  410736:	and    DWORD PTR [eax],eax
  410738:	or     DWORD PTR [edx-0x1919c39b],eax
  41073e:	cdq    
  41073f:	xchg   edx,eax
  410740:	jle    0x4107a4
  410742:	stos   BYTE PTR es:[di],al
  410744:	jb     0x41076c
  410746:	les    esp,FWORD PTR [esi]
  410748:	xor    bh,BYTE PTR [edi-0x11b84b17]
  41074e:	or     al,0x10
  410750:	or     ecx,DWORD PTR [ebp-0x20]
  410753:	and    DWORD PTR [esi-0x4d],esi
  410756:	in     eax,dx
  410757:	test   al,0x3b
  410759:	push   edi
  41075a:	sub    eax,0xcc630bca
  41075f:	fwait
  410760:	dec    esp
  410761:	pop    eax
  410762:	sbb    al,0xd7
  410764:	enter  0x75e7,0xf8
  410768:	mov    cl,0xad
  41076a:	or     DWORD PTR [eax+ebp*4-0x27],esp
  41076e:	(bad)  
  41076f:	aad    0x8f
  410771:	xlat   BYTE PTR ds:[ebx]
  410772:	mov    ah,0x8f
  410774:	in     eax,0x85
  410776:	ficom  DWORD PTR [edx-0x574564d6]
  41077c:	out    0xd0,eax
  41077e:	ret    0x23a8
  410781:	call   0xf3e054c5
  410786:	gs pop eax
  410788:	adc    DWORD PTR [ebx-0x3c],esp
  41078b:	add    ecx,edx
  41078d:	(bad)  
  41078e:	lods   al,BYTE PTR ds:[esi]
  41078f:	jns    0x410792
  410791:	xor    eax,0x919b0b8
  410796:	push   esp
  410797:	add    DWORD PTR [esi+0x3b],eax
  41079a:	xor    edx,DWORD PTR [ebx]
  41079c:	jg     0x410814
  41079e:	in     al,dx
  41079f:	imul   DWORD PTR [edx+0x4d]
  4107a2:	push   es
  4107a3:	push   ss
  4107a4:	dec    esp
  4107a5:	or     esp,DWORD PTR [ecx+0x4b]
  4107a8:	and    BYTE PTR ds:[edi],dh
  4107ab:	push   esi
  4107ac:	and    BYTE PTR [ebx-0x18c796dc],0xa3
  4107b3:	adc    edx,DWORD PTR [esi-0x2e16c795]
  4107b9:	and    cl,cl
  4107bb:	add    BYTE PTR [ebp-0x68],al
  4107be:	sub    eax,0xc50d7a3
  4107c3:	into   
  4107c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c5:	push   0xffffffe8
  4107c7:	cmp    ch,cl
  4107c9:	pusha  
  4107ca:	mul    DWORD PTR [ebp+ecx*8+0x2f]
  4107ce:	and    cl,BYTE PTR [ebx-0x754faf8e]
  4107d4:	jns    0x410778
  4107d6:	std    
  4107d7:	add    BYTE PTR [ecx],ch
  4107d9:	push   es
  4107da:	popa   
  4107db:	xor    cl,cl
  4107dd:	mov    esi,0x9aec05e
  4107e2:	pop    es
  4107e3:	xchg   esp,eax
  4107e4:	outs   dx,BYTE PTR ds:[esi]
  4107e5:	test   DWORD PTR [ebp+0x760500db],0x6c5bf54b
  4107ef:	vmwrite edx,DWORD PTR [eax-0x6f89b084]
  4107f6:	and    eax,0xdb2e7c4
  4107fb:	icebp  
  4107fc:	outs   dx,BYTE PTR ds:[esi]
  4107fd:	scas   al,BYTE PTR es:[edi]
  4107fe:	mov    dl,0xa1
  410800:	xchg   ebp,eax
  410801:	bound  esp,QWORD PTR [ebp-0x684a54ca]
  410807:	fisttp QWORD PTR [ebx+eiz*1+0x5e]
  41080b:	mov    ah,bl
  41080d:	xchg   ecx,eax
  41080e:	mov    cs,WORD PTR [edx-0x6c]
  410811:	xor    eax,0x25f1feab
  410816:	mov    al,0xe1
  410818:	gs dec esp
  41081a:	imul   ebx,DWORD PTR [eax],0x20
  41081d:	mov    dh,0xd5
  41081f:	mov    cs,WORD PTR [eax]
  410821:	fs sub esp,ecx
  410824:	xchg   esi,eax
  410825:	sub    al,0x62
  410827:	stos   BYTE PTR es:[edi],al
  410828:	and    al,cl
  41082a:	sbb    al,0xf2
  41082c:	out    dx,al
  41082d:	jecxz  0x41081f
  41082f:	ret    0x9e3
  410832:	popa   
  410833:	mov    edx,0x79324d5d
  410838:	sbb    DWORD PTR [ebx],edx
  41083a:	sub    ecx,0x5f3e5c09
  410840:	loopne 0x4107d0
  410842:	stos   BYTE PTR es:[edi],al
  410843:	jb     0x410897
  410845:	adc    dh,BYTE PTR [ecx-0x14]
  410848:	daa    
  410849:	inc    esp
  41084a:	stc    
  41084b:	and    al,0x84
  41084d:	cmp    al,0x17
  41084f:	mov    fs,edi
  410851:	xor    eax,0x6c2478c8
  410856:	(bad)  
  410858:	inc    ebp
  410859:	xor    eax,0x3070d388
  41085e:	fs sub al,0x89
  410861:	lds    ebp,FWORD PTR [ebx+0x56]
  410864:	mov    eax,0x50bf49b0
  410869:	sub    ax,0xd50a
  41086d:	add    cl,0x4d
  410870:	pop    edx
  410871:	push   ds
  410872:	ins    BYTE PTR es:[edi],dx
  410873:	pop    ebp
  410874:	mov    ebp,0x6d2e3b86
  410879:	das    
  41087a:	pushf  
  41087b:	inc    edx
  41087c:	jne    0x410866
  41087e:	mov    bl,0xf2
  410880:	and    BYTE PTR [esi-0x37],bh
  410883:	je     0x41080e
  410885:	mov    ebp,0xb6fc2965
  41088a:	xchg   ebp,eax
  41088b:	jl     0x410864
  41088d:	ds xor al,ch
  410890:	xor    al,BYTE PTR [eax+0x34]
  410893:	test   eax,0xd5c07d05
  410898:	sub    DWORD PTR [eax-0xe86fb75],ebx
  41089e:	xchg   esp,eax
  41089f:	mov    cl,0x2f
  4108a1:	ret    0xccec
  4108a4:	repnz push ebx
  4108a6:	imul   ecx,DWORD PTR [esi-0x6e],0x2cbd0799
  4108ad:	cli    
  4108ae:	not    DWORD PTR ds:0xb6f2b10c
  4108b4:	xchg   ebp,eax
  4108b5:	in     al,0xc6
  4108b7:	fstp   DWORD PTR [ebp-0x3a566759]
  4108bd:	lods   al,BYTE PTR ds:[esi]
  4108be:	dec    edx
  4108bf:	mov    al,ds:0xc8d20a70
  4108c4:	xchg   edx,eax
  4108c5:	jl     0x4108ff
  4108c7:	imul   eax,DWORD PTR [ebp-0x54988f3c],0x4d33e71d
  4108d1:	(bad)  
  4108d2:	add    eax,DWORD PTR [ebp+0x68]
  4108d5:	rcr    DWORD PTR [eax],0x80
  4108d8:	jo     0x410884
  4108da:	shl    BYTE PTR [ebp+0x2b],0x43
  4108de:	repnz sbb BYTE PTR [ebx],0x75
  4108e2:	mov    eax,0x7d4ee52b
  4108e7:	xchg   edi,eax
  4108e8:	js     0x4108ad
  4108ea:	inc    ebp
  4108eb:	loop   0x41089e
  4108ed:	push   ecx
  4108ee:	push   0x52c52ed3
  4108f3:	or     edx,DWORD PTR [ebx]
  4108f5:	push   esp
  4108f6:	(bad)  
  4108f7:	and    ebp,edx
  4108f9:	sub    esi,DWORD PTR [eax+0x6a]
  4108fc:	cdq    
  4108fd:	mov    bh,0x5a
  4108ff:	leave  
  410900:	iret   
  410901:	data16 mov BYTE PTR [esi],dl
  410904:	sbb    cl,BYTE PTR [eax-0x51]
  410907:	daa    
  410908:	lahf   
  410909:	int    0xbd
  41090b:	push   ebp
  41090c:	lock into 
  41090e:	adc    eax,0xfe12f7c4
  410913:	out    dx,al
  410914:	lds    edi,FWORD PTR gs:[eax-0xb]
  410918:	mov    cl,0x4b
  41091a:	out    dx,al
  41091b:	xchg   esi,eax
  41091c:	cmp    al,0xe
  41091e:	xchg   edi,eax
  41091f:	aaa    
  410920:	mov    ds:0x27fb19d5,al
  410925:	or     BYTE PTR [ebp+0x5531a099],al
  41092b:	fadd   DWORD PTR [edi]
  41092d:	push   ecx
  41092e:	les    ecx,FWORD PTR [edi]
  410930:	(bad)  
  410931:	ins    DWORD PTR es:[edi],dx
  410932:	inc    edi
  410933:	mov    DWORD PTR [edx],edi
  410935:	cmp    DWORD PTR [edi-0x11],esi
  410938:	and    dh,dh
  41093a:	lock aad 0xd0
  41093d:	pop    ebx
  41093e:	hlt    
  41093f:	daa    
  410940:	jae    0x4108f9
  410942:	xchg   DWORD PTR [ecx],edx
  410944:	push   0x5c7cbc4b
  410949:	pop    ebx
  41094a:	sbb    BYTE PTR [edx],dh
  41094c:	jle    0x410969
  41094e:	inc    ebx
  41094f:	xchg   edi,eax
  410950:	adc    edx,0x45749318
  410956:	sbb    al,0x14
  410959:	std    
  41095a:	aaa    
  41095b:	dec    esp
  41095c:	scas   eax,DWORD PTR es:[edi]
  41095d:	in     al,dx
  41095e:	sbb    eax,0xc0a9ed95
  410963:	mov    ah,0x5f
  410965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410966:	or     esp,DWORD PTR [edx]
  410968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410969:	adc    ebp,DWORD PTR [edi+0x7a350dc2]
  41096f:	imul   ebp,DWORD PTR [ebx-0x204a5cba],0x62
  410976:	inc    ebp
  410977:	iret   
  410978:	inc    ebx
  410979:	fmul   DWORD PTR [ebp+0x1d]
  41097c:	sub    dl,cl
  41097e:	lea    edx,[edi-0x56d98885]
  410984:	dec    edi
  410985:	hlt    
  410986:	mov    ecx,0xf1d1a405
  41098b:	pop    edi
  41098c:	pop    edi
  41098d:	xchg   esp,eax
  41098e:	pop    eax
  41098f:	sahf   
  410990:	test   al,0x6f
  410992:	mov    esi,ecx
  410994:	and    al,0xa1
  410996:	icebp  
  410997:	mov    esi,0x670ba5dc
  41099c:	int3   
  41099d:	jge    0x410948
  41099f:	jl     0x4109fc
  4109a1:	jmp    0x80563feb
  4109a6:	loop   0x410986
  4109a8:	or     al,0x41
  4109aa:	aam    0xc8
  4109ac:	push   ss
  4109ad:	(bad)  
  4109ae:	out    dx,al
  4109af:	retf   
  4109b0:	mov    al,0x2d
  4109b2:	call   0x9e183581
  4109b7:	mov    dl,0xb3
  4109b9:	mov    edi,0x80cdb61b
  4109be:	or     al,0x62
  4109c0:	dec    ecx
  4109c1:	lods   eax,DWORD PTR ds:[esi]
  4109c2:	dec    edx
  4109c3:	stc    
  4109c4:	jl     0x4109b6
  4109c6:	inc    edx
  4109c7:	pop    ebp
  4109c8:	adc    BYTE PTR [esi-0x65],dh
  4109cb:	mov    bh,0x7c
  4109cd:	xlat   BYTE PTR ds:[ebx]
  4109ce:	in     eax,dx
  4109cf:	mov    ds,WORD PTR [esi-0x1a]
  4109d2:	outs   dx,DWORD PTR ds:[esi]
  4109d3:	cmp    al,0xb7
  4109d5:	xor    al,0x71
  4109d7:	scas   al,BYTE PTR es:[edi]
  4109d8:	stc    
  4109d9:	push   edx
  4109da:	dec    esp
  4109db:	mov    dh,dl
  4109dd:	push   ecx
  4109de:	sbb    DWORD PTR [esi-0x59de8ba],ebx
  4109e4:	pushf  
  4109e5:	inc    esi
  4109e6:	jns    0x410a5f
  4109e8:	(bad)  
  4109e9:	stos   BYTE PTR es:[edi],al
  4109ea:	out    dx,al
  4109eb:	push   edx
  4109ec:	aaa    
  4109ed:	mov    edi,0xcb5d974a
  4109f2:	and    DWORD PTR [eax],eax
  4109f4:	nop
  4109f5:	xor    eax,0x621ef726
  4109fa:	sub    eax,eax
  4109fc:	test   al,0x8f
  4109fe:	mov    edi,0xe0ab2e5c
  410a03:	mov    al,0xd0
  410a05:	add    eax,0x548116ca
  410a0a:	jecxz  0x410a78
  410a0c:	fidiv  WORD PTR [edx]
  410a0e:	lea    esp,[ebx]
  410a10:	inc    esi
  410a11:	dec    edx
  410a12:	xchg   ebp,eax
  410a13:	dec    edi
  410a14:	add    DWORD PTR [ecx+0x70373074],eax
  410a1a:	xchg   edi,eax
  410a1b:	in     al,dx
  410a1c:	sbb    eax,0xb7ce24d2
  410a21:	clc    
  410a22:	mov    eax,ds:0xfe4dfd60
  410a27:	aad    0xc7
  410a29:	(bad)  [esi-0x16]
  410a2c:	shl    BYTE PTR [ebx],0x28
  410a2f:	ffree  st(4)
  410a31:	in     eax,dx
  410a32:	jns    0x410aaa
  410a34:	sti    
  410a35:	xor    eax,0x673c2d82
  410a3a:	jae    0x410a03
  410a3c:	pop    ss
  410a3d:	xchg   ecx,eax
  410a3e:	loopne 0x4109fa
  410a40:	lahf   
  410a41:	call   0xb3f6e650
  410a46:	retf   0x5170
  410a49:	jge    0x410a11
  410a4b:	or     eax,0x2179e0e7
  410a50:	mov    al,BYTE PTR [edi+ebx*2]
  410a53:	add    eax,0xa261171a
  410a58:	and    edx,DWORD PTR [edx-0x5b55dee0]
  410a5e:	repz dec eax
  410a60:	mov    esi,0x957104bd
  410a65:	xor    cl,BYTE PTR [esi+edx*4]
  410a68:	(bad)  
  410a69:	js     0x410a8d
  410a6b:	sub    BYTE PTR [edx-0x598d7d08],al
  410a71:	les    ebx,FWORD PTR [ebp-0x16c0c7f6]
  410a77:	push   edx
  410a78:	das    
  410a79:	inc    edi
  410a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a7b:	jecxz  0x410ab3
  410a7d:	sub    BYTE PTR [edx],dl
  410a7f:	inc    ebx
  410a80:	call   0x30cf:0xb6456a3a
  410a87:	push   ss
  410a88:	and    BYTE PTR [eax+eiz*1+0x7f227ff5],al
  410a8f:	sbb    DWORD PTR [ebp+0x36],edi
  410a92:	or     bl,BYTE PTR [esp+edi*1+0xf54d727]
  410a99:	push   0xfffffff0
  410a9b:	mov    ds:0x7d50c973,eax
  410aa0:	dec    esp
  410aa1:	sbb    al,0x20
  410aa3:	add    DWORD PTR [ebp+0x5b630ee3],ecx
  410aa9:	xchg   esp,eax
  410aaa:	inc    ebx
  410aab:	repnz addr16 das 
  410aae:	mov    ds:0xe5237a09,eax
  410ab3:	test   eax,0xcc197cc
  410ab8:	inc    edi
  410ab9:	pop    ss
  410aba:	xor    edi,DWORD PTR [ebp-0x40]
  410abd:	pop    eax
  410abe:	xlat   BYTE PTR ds:[ebx]
  410abf:	test   ah,cl
  410ac1:	es cmp cl,BYTE PTR fs:[ebx]
  410ac5:	cdq    
  410ac6:	popa   
  410ac7:	lds    esp,FWORD PTR [edx+edx*8+0x51]
  410acb:	lds    ecx,FWORD PTR [ecx-0x6b]
  410ace:	cmovs  edx,DWORD PTR [eax+0x4c]
  410ad2:	pop    edi
  410ad3:	sbb    al,0x86
  410ad5:	ja     0x410b4a
  410ad7:	pop    ebx
  410ad8:	add    al,0x6f
  410ada:	jl     0x410abc
  410adc:	mov    edx,0x75233dce
  410ae1:	retf   0x6b60
  410ae4:	scas   eax,DWORD PTR es:[edi]
  410ae5:	fcomp  DWORD PTR [ecx-0x6bd8ce73]
  410aeb:	mov    esi,0xf2a69bb5
  410af0:	cmp    DWORD PTR [ebp-0xf],0xf7cae8fd
  410af7:	ret    
  410af8:	in     eax,0x6e
  410afa:	cmp    BYTE PTR [edx-0xf955ac1],cl
  410b00:	mov    ebx,0x2fcf58e3
  410b05:	cmp    al,0x55
  410b07:	sub    al,al
  410b09:	add    cl,BYTE PTR [ebx]
  410b0b:	cmp    al,0x8a
  410b0d:	rol    DWORD PTR [esi],cl
  410b0f:	mov    esi,0xa9768f55
  410b14:	sbb    al,BYTE PTR ds:0x21f4cc47
  410b1a:	add    esi,esp
  410b1c:	jmp    0x4ae1:0xa77143f5
  410b23:	loop   0x410b27
  410b25:	sub    DWORD PTR [ebp+0x10],edi
  410b28:	jmp    0x72a2ccff
  410b2d:	xchg   esp,eax
  410b2e:	xchg   edi,eax
  410b2f:	mov    eax,ds:0x5291cc1b
  410b34:	or     ecx,DWORD PTR [edi+0x77]
  410b37:	stc    
  410b38:	mov    edi,0xc760fe5e
  410b3d:	cwde   
  410b3e:	push   ss
  410b3f:	mov    al,ds:0x83355be9
  410b44:	dec    edx
  410b45:	shr    DWORD PTR [edi+0x5a],cl
  410b48:	into   
  410b49:	sbb    eax,0x8df3cfde
  410b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b50:	fwait
  410b51:	cmp    BYTE PTR [eax-0x66],bl
  410b54:	mov    eax,ds:0xc7460e5c
  410b59:	std    
  410b5a:	inc    ecx
  410b5b:	and    esi,esi
  410b5d:	adc    BYTE PTR [eax],0x44
  410b60:	add    DWORD PTR ds:0x50782191,ebp
  410b66:	cmp    DWORD PTR [esp+eiz*8+0x16],ebx
  410b6a:	stc    
  410b6b:	stos   DWORD PTR es:[edi],eax
  410b6c:	retf   
  410b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b6e:	xor    dh,ah
  410b70:	push   ds
  410b71:	in     eax,dx
  410b72:	(bad)  
  410b73:	fisubr WORD PTR [esi]
  410b75:	push   edx
  410b76:	add    ebp,DWORD PTR [edi+0x72da9df9]
  410b7c:	adc    esi,DWORD PTR gs:[ebx-0x31]
  410b80:	(bad)  
  410b81:	cmp    eax,0xd967e16d
  410b86:	push   0xffffffab
  410b88:	rol    DWORD PTR [ecx],cl
  410b8a:	hlt    
  410b8b:	pop    edi
  410b8c:	leave  
  410b8d:	(bad)  
  410b8e:	jg     0x410c01
  410b90:	aam    0xdc
  410b92:	cmc    
  410b93:	and    bl,cl
  410b95:	or     BYTE PTR [edi],ch
  410b97:	jecxz  0x410ba3
  410b99:	repz rcr DWORD PTR ds:0x6b279b8c,cl
  410ba0:	push   edx
  410ba1:	or     DWORD PTR ds:0xd6a1418d,eax
  410ba7:	sub    edi,edi
  410ba9:	and    ah,ch
  410bab:	ss iret 
  410bad:	sbb    eax,0x5c393e2b
  410bb2:	jmp    0xce7:0x611042be
  410bb9:	adc    eax,0xd05cf499
  410bbe:	fisub  DWORD PTR [ebp+edi*2-0x2d]
  410bc2:	ja     0x410c42
  410bc4:	adc    eax,0x86ad29c7
  410bc9:	xchg   edx,eax
  410bca:	mov    bh,0x73
  410bcc:	popa   
  410bcd:	pop    es
  410bce:	ja     0x410c4b
  410bd0:	and    BYTE PTR ds:0x902b1396,0xe5
  410bd7:	cmp    edi,eax
  410bd9:	sbb    cl,ah
  410bdb:	mov    bh,0x9a
  410bdd:	test   ch,ch
  410bdf:	out    dx,eax
  410be0:	jge    0x410b84
  410be2:	push   ss
  410be3:	mov    bh,0x84
  410be5:	mov    esi,0x75975e44
  410bea:	mov    ds:0xcaf29a51,al
  410bef:	fbld   TBYTE PTR [eax-0x5b794d80]
  410bf5:	inc    ebp
  410bf6:	daa    
  410bf7:	mov    ah,0x87
  410bf9:	lods   al,BYTE PTR ds:[esi]
  410bfa:	push   0x6646742c
  410bff:	imul   ebp,DWORD PTR [esi],0x303e92b
  410c05:	push   esi
  410c06:	sub    DWORD PTR [edx-0x75],0xffffffd5
  410c0a:	shr    DWORD PTR [ecx-0x537c1bc7],0x88
  410c11:	std    
  410c12:	pop    ebx
  410c13:	mov    dh,0xa
  410c15:	test   al,0xd0
  410c18:	ret    
  410c19:	mov    al,ds:0x2d808010
  410c1e:	sbb    al,0x96
  410c20:	pop    edx
  410c21:	dec    ebp
  410c22:	ds lds ecx,FWORD PTR fs:[esi-0xe]
  410c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c28:	sar    ch,cl
  410c2a:	lea    ebx,[ebx]
  410c2c:	les    edi,FWORD PTR [ebx+0x44]
  410c2f:	push   edx
  410c30:	shr    DWORD PTR [ebp+0x7fa5ce1f],cl
  410c36:	dec    esp
  410c37:	div    DWORD PTR [edi-0x51]
  410c3a:	shl    esi,1
  410c3c:	push   edx
  410c3d:	or     esp,DWORD PTR [edi+0x76]
  410c40:	mov    WORD PTR [edi],?
  410c42:	jno    0x410c66
  410c44:	cmp    al,0x8e
  410c46:	fcom   QWORD PTR [eax+0x19]
  410c49:	jl     0x410c88
  410c4b:	push   ebx
  410c4c:	shl    DWORD PTR [ecx-0x3cc9266f],0xc1
  410c53:	mov    al,0x2b
  410c55:	aas    
  410c56:	dec    ecx
  410c57:	std    
  410c58:	jo     0x410c73
  410c5a:	rcl    DWORD PTR [edx+0x7a033b1b],0x37
  410c61:	sub    ebp,edx
  410c63:	lods   eax,DWORD PTR ds:[esi]
  410c64:	adc    ebp,DWORD PTR [esi-0x46]
  410c67:	mov    edx,0x379a2284
  410c6c:	sahf   
  410c6d:	out    0xd2,al
  410c6f:	into   
  410c70:	inc    edx
  410c71:	push   esp
  410c72:	jg     0x410ce7
  410c74:	pop    eax
  410c75:	in     eax,dx
  410c76:	cmp    BYTE PTR [ebp-0xce35de5],0x4e
  410c7d:	cwde   
  410c7e:	xor    dl,ch
  410c80:	fnstenv [eax]
  410c82:	sbb    al,0xd8
  410c84:	dec    edx
  410c85:	lea    esi,[edx]
  410c87:	ror    eax,0x0
  410c8a:	(bad)
  410c8d:	xor    ebx,edi
  410c8f:	mov    ds:0xa5cfafc0,eax
  410c94:	call   0x1a42:0xb36cadde
  410c9b:	cmp    DWORD PTR [ebp+0x1f68e9ba],ebx
  410ca1:	ret    
  410ca2:	xchg   ecx,eax
  410ca3:	shl    DWORD PTR [esi+0x46],0x82
  410ca7:	push   ds
  410ca8:	jp     0x410cc2
  410caa:	add    ecx,eax
  410cac:	push   0xffffff82
  410cae:	retf   0x7d8a
  410cb1:	pop    esi
  410cb2:	test   dl,ch
  410cb4:	retf   
  410cb5:	fcomp  DWORD PTR [ebx+0x61]
  410cb8:	and    ebp,esi
  410cba:	fimul  DWORD PTR [ecx]
  410cbc:	arpl   cx,bp
  410cbe:	cmp    DWORD PTR [ebx],ecx
  410cc0:	sbb    DWORD PTR ds:[edx],ecx
  410cc3:	jmp    0xcd2a3585
  410cc8:	lock pop esp
  410cca:	or     DWORD PTR [ecx+0x4e19a60b],ebp
  410cd0:	enter  0xe04d,0x92
  410cd4:	(bad)  
  410cd5:	stos   DWORD PTR es:[edi],eax
  410cd6:	dec    ebp
  410cd7:	mov    al,BYTE PTR [eax-0x62fc2e42]
  410cdd:	jp     0x410c6e
  410cdf:	jno    0x410ca4
  410ce1:	rcr    edi,1
  410ce3:	xchg   esp,eax
  410ce4:	push   es
  410ce5:	pop    ebx
  410ce6:	popa   
  410ce7:	push   ebx
  410ce8:	sbb    al,BYTE PTR [eax]
  410cea:	sub    BYTE PTR [eax-0x1b],dl
  410ced:	mov    ebp,0x919776ad
  410cf2:	dec    esi
  410cf3:	push   0xf1c4ac80
  410cf8:	sub    eax,0x6f03c7ea
  410cfd:	push   ds
  410cfe:	dec    ebp
  410cff:	sub    al,0xd
  410d01:	push   edx
  410d02:	cs pop esi
  410d04:	inc    DWORD PTR [edi+0x7dafeea8]
  410d0a:	jp     0x410d45
  410d0c:	inc    ecx
  410d0d:	loop   0x410d7a
  410d0f:	jae    0x410d03
  410d11:	repz lds edx,FWORD PTR [edi]
  410d14:	cwde   
  410d15:	inc    ebp
  410d16:	adc    eax,0x2eeac45f
  410d1b:	scas   al,BYTE PTR es:[edi]
  410d1c:	xor    ch,bh
  410d1e:	aad    0xda
  410d20:	sahf   
  410d21:	daa    
  410d22:	lea    edi,[edx]
  410d24:	push   es
  410d25:	sub    al,0xe2
  410d27:	sbb    eax,0x1ce622da
  410d2c:	sbb    ch,ah
  410d2e:	call   0xcda7:0x26702dbd
  410d35:	aaa    
  410d36:	enter  0x18c,0xff
  410d3a:	mov    edi,db6
  410d3d:	pushf  
  410d3e:	pop    edi
  410d3f:	cmp    esi,DWORD PTR [ecx+0xf82e396]
  410d45:	xchg   esi,eax
  410d46:	mov    ?,WORD PTR [ebx+0x3c1bf595]
  410d4c:	pop    esp
  410d4d:	pop    ecx
  410d4e:	loop   0x410d4f
  410d50:	call   0x21817cbb
  410d55:	lahf   
  410d56:	cmp    al,0x82
  410d58:	lahf   
  410d59:	ror    eax,0xe4
  410d5c:	retf   
  410d5d:	sbb    DWORD PTR [edi-0x4c],0x43
  410d61:	or     bh,BYTE PTR [eax-0x624d154d]
  410d67:	ja     0x410dac
  410d69:	and    DWORD PTR [ebx-0x64],edx
  410d6c:	enter  0x6fd,0x74
  410d70:	shl    BYTE PTR [edx+0x32],cl
  410d73:	ss test ebx,ecx
  410d76:	mov    BYTE PTR [edi],bh
  410d78:	lods   al,BYTE PTR ds:[esi]
  410d79:	sub    al,0xd8
  410d7b:	xrelease mov DWORD PTR [eax+0x37df882c],esp
  410d82:	mov    ds:0xff6203b0,eax
  410d87:	add    al,0x7c
  410d89:	or     DWORD PTR [edi],edi
  410d8b:	jnp    0x410dd8
  410d8d:	mov    bl,0x61
  410d8f:	xchg   esp,eax
  410d90:	dec    esi
  410d91:	xor    esi,ebp
  410d93:	xchg   DWORD PTR [edx-0x43dc159c],ecx
  410d99:	add    eax,0x24c5e9a3
  410d9e:	jbe    0x410d6d
  410da0:	int3   
  410da1:	dec    eax
  410da2:	aaa    
  410da3:	(bad)  
  410da5:	lea    esp,[ecx]
  410da7:	mov    ebx,0xfd7917dd
  410dac:	sub    DWORD PTR [edx],edx
  410dae:	add    DWORD PTR [ecx+0x76],esi
  410db1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410db3:	push   0x2a0544e2
  410db8:	push   ebp
  410db9:	int    0x2f
  410dbb:	adc    ah,bh
  410dbd:	ret    0x1727
  410dc0:	sbb    esp,DWORD PTR [eax-0x31]
  410dc3:	jns    0x410d7c
  410dc5:	mov    eax,0xdbbb7113
  410dca:	dec    esi
  410dcb:	add    ecx,esp
  410dcd:	cmp    al,0xfb
  410dcf:	lea    esp,[esi+0x1f]
  410dd2:	lods   al,BYTE PTR ds:[esi]
  410dd3:	es mov edx,0xef6b060c
  410dd9:	add    dh,BYTE PTR [ebx+0xcf84912]
  410ddf:	jg     0x410d76
  410de1:	xchg   ebx,eax
  410de2:	adc    DWORD PTR [ecx-0xf],0xffffffa7
  410de6:	(bad)  
  410de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de9:	add    ah,cl
  410deb:	sub    bl,bl
  410ded:	cdq    
  410dee:	call   0xa455:0x5433a3bd
  410df5:	jmp    FWORD PTR [ecx+0x12]
  410df8:	fadd   DWORD PTR [ebx+0x76]
  410dfb:	das    
  410dfc:	and    BYTE PTR [ebp-0x2e809bc5],dh
  410e02:	push   ebp
  410e03:	mov    es,WORD PTR [edi-0x60c13dd3]
  410e09:	and    al,BYTE PTR [edi+0xf]
  410e0c:	mov    al,ds:0x47f1d7ba
  410e11:	int    0x68
  410e13:	mov    eax,0xe73fdb46
  410e18:	ret    0x3cc6
  410e1b:	cld    
  410e1c:	or     bh,BYTE PTR [ebp-0x4e0531d1]
  410e22:	outs   dx,DWORD PTR ds:[esi]
  410e23:	(bad)  
  410e24:	loop   0x410e28
  410e26:	jmp    0x410dc5
  410e28:	sar    edi,cl
  410e2a:	(bad)  
  410e2b:	scas   eax,DWORD PTR es:[edi]
  410e2c:	add    eax,0x17692658
  410e31:	les    ecx,FWORD PTR [ebp+ecx*8-0x51f7421d]
  410e38:	jecxz  0x410e46
  410e3a:	lods   eax,DWORD PTR ds:[esi]
  410e3b:	sub    esp,ecx
  410e3d:	(bad)  [ebx+0x7a]
  410e40:	sub    esi,DWORD PTR [ebp+0x68]
  410e43:	data16 das 
  410e45:	shl    cl,0xb
  410e48:	inc    ebx
  410e49:	fadd   st,st(6)
  410e4b:	test   DWORD PTR [edi],esp
  410e4d:	and    ebp,ebx
  410e4f:	add    edx,DWORD PTR [ebx+ebx*8]
  410e52:	bound  ecx,QWORD PTR [esi]
  410e54:	xchg   ebp,eax
  410e55:	leave  
  410e56:	out    dx,eax
  410e57:	sub    BYTE PTR [ebx+0x6c],cl
  410e5a:	pushf  
  410e5b:	push   0xb1328f02
  410e60:	inc    esp
  410e61:	mov    fs,WORD PTR [ecx+0x5f2a09d6]
  410e67:	stc    
  410e68:	cdq    
  410e69:	mov    eax,0x390de306
  410e6e:	pop    ebp
  410e6f:	test   BYTE PTR [edi-0x61b908a],al
  410e75:	in     eax,dx
  410e76:	(bad)  
  410e77:	and    DWORD PTR [ecx+0x35],eax
  410e7a:	enter  0x63d7,0x81
  410e7e:	xchg   esp,eax
  410e7f:	pushf  
  410e80:	in     eax,dx
  410e81:	xchg   DWORD PTR ds:0x34e6b9f9,edx
  410e87:	in     eax,0x3a
  410e89:	ret    0x2ece
  410e8c:	sbb    eax,0x846e4c1a
  410e91:	inc    ecx
  410e92:	jmp    DWORD PTR [edx+0x73]
  410e95:	push   edi
  410e96:	mov    dl,0x89
  410e98:	(bad)  
  410e99:	push   edi
  410e9a:	mov    edx,0x7ab6c256
  410e9f:	push   ss
  410ea0:	mov    cl,0x14
  410ea2:	mov    edx,DWORD PTR [ebp+0x58]
  410ea5:	xchg   edx,eax
  410ea6:	shl    ah,1
  410ea8:	and    eax,0xea0766e9
  410ead:	xchg   esp,eax
  410eae:	jp     0x410e5d
  410eb0:	addr16 test esi,ebp
  410eb3:	sub    al,0x38
  410eb5:	and    dl,0x57
  410eb8:	pop    edi
  410eb9:	jmp    0xe2ece595
  410ebe:	cli    
  410ebf:	out    dx,al
  410ec0:	mov    bh,BYTE PTR [eax+0x8]
  410ec3:	mov    ah,0xe6
  410ec5:	aas    
  410ec6:	ins    DWORD PTR es:[edi],dx
  410ec7:	outs   dx,DWORD PTR ds:[esi]
  410ec8:	in     al,0xb4
  410eca:	pop    ecx
  410ecb:	out    dx,eax
  410ecc:	enter  0x2d03,0x1
  410ed0:	fld    QWORD PTR [edi+0x7f1948e3]
  410ed6:	mov    esi,0x3a211383
  410edb:	jle    0x410e72
  410edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ede:	fdiv   st(3),st
  410ee0:	ds cmp eax,ebx
  410ee3:	mov    esp,DWORD PTR [edx]
  410ee5:	xchg   edx,eax
  410ee6:	fcomp  QWORD PTR [ebp+0x4b]
  410ee9:	xlat   BYTE PTR ds:[ebx]
  410eea:	inc    ebx
  410eeb:	xor    DWORD PTR [esi],eax
  410eed:	lea    esi,[esi-0x45eb1686]
  410ef3:	in     al,0x80
  410ef5:	xchg   edi,eax
  410ef6:	fisttp DWORD PTR [edi+0x44407842]
  410efc:	outs   dx,BYTE PTR ds:[esi]
  410efd:	out    dx,al
  410efe:	pop    es
  410eff:	push   ebx
  410f00:	or     edx,ebp
  410f02:	lock out dx,eax
  410f04:	scas   eax,DWORD PTR es:[edi]
  410f05:	mov    edi,0xb942577b
  410f0a:	xor    al,0x10
  410f0c:	pop    edx
  410f0d:	retf   
  410f0e:	ins    BYTE PTR es:[edi],dx
  410f0f:	out    dx,eax
  410f10:	inc    ebx
  410f11:	adc    al,0x85
  410f13:	xor    BYTE PTR [esp+edi*2+0x17],0x69
  410f18:	imul   eax,DWORD PTR [ebx],0x2d2f6423
  410f1e:	mov    ah,0x88
  410f20:	mov    bl,0x74
  410f22:	push   esi
  410f23:	push   edi
  410f24:	pop    eax
  410f25:	fucom  st(2)
  410f27:	sahf   
  410f28:	jae    0x410eb2
  410f2a:	cwde   
  410f2b:	int    0x44
  410f2d:	lock and ah,al
  410f30:	mov    esp,0xb3db8585
  410f35:	mov    esi,0x5434fbc9
  410f3a:	sbb    eax,0xc241fceb
  410f3f:	mov    edi,0xcff5f7fb
  410f44:	cld    
  410f45:	mov    esp,0x6251a4fe
  410f4a:	out    dx,al
  410f4b:	inc    ecx
  410f4c:	ret    0xa687
  410f4f:	jp     0x410fca
  410f51:	mov    esp,0x7982828e
  410f56:	ja     0x410f2c
  410f58:	sub    cl,BYTE PTR [ecx+edi*2-0x7770ade2]
  410f5f:	cmc    
  410f60:	jge    0x410fc2
  410f62:	cld    
  410f63:	lds    bp,DWORD PTR [ebx]
  410f66:	inc    esp
  410f67:	cli    
  410f68:	sbb    dh,BYTE PTR [ebx-0x473b486d]
  410f6e:	lock sbb cl,BYTE PTR [ebx+0x59]
  410f72:	and    eax,0x3bad5b43
  410f77:	popa   
  410f78:	jg     0x410f0a
  410f7a:	push   0xffffffa7
  410f7c:	rcr    DWORD PTR [eax+0x5],1
  410f7f:	mov    eax,ds:0xf3159535
  410f84:	ds pop ds
  410f86:	shl    BYTE PTR [ebx-0x13],1
  410f89:	pop    esp
  410f8a:	fucomi st,st(4)
  410f8c:	mov    WORD PTR [ebx-0x779cc990],?
  410f92:	adc    dh,cl
  410f94:	call   0xe2b58bcc
  410f99:	test   ecx,ebp
  410f9b:	fcomp  QWORD PTR [edx]
  410f9d:	mov    esi,0x565cc44c
  410fa2:	popa   
  410fa3:	jecxz  0x410fba
  410fa5:	std    
  410fa6:	je     0x410f8f
  410fa8:	cmp    BYTE PTR [edi],0xa5
  410fab:	aam    0x5e
  410fad:	xor    dl,0x50
  410fb0:	dec    eax
  410fb1:	jne    0x410f6d
  410fb3:	aad    0xc2
  410fb5:	ja     0x41101d
  410fb7:	jmp    0x56e4:0x7dd89459
  410fbe:	pop    eax
  410fbf:	lahf   
  410fc0:	stc    
  410fc1:	dec    esi
  410fc2:	push   ebp
  410fc3:	inc    BYTE PTR ds:[ebp+0x5]
  410fc7:	dec    esp
  410fc8:	push   edi
  410fc9:	(bad)  
  410fca:	fist   DWORD PTR [eax]
  410fcc:	xchg   ebx,eax
  410fcd:	jmp    0x410f6b
  410fcf:	push   es
  410fd0:	add    BYTE PTR [edx-0x5a],0xb2
  410fd4:	xchg   ebx,eax
  410fd5:	mov    edi,0x8595b479
  410fda:	or     ah,BYTE PTR [eax+0x3425ef57]
  410fe0:	(bad)  
  410fe1:	ror    DWORD PTR [ebp+0x531bdba6],cl
  410fe7:	cld    
  410fe8:	(bad)  
  410fe9:	pop    esp
  410fea:	dec    esp
  410feb:	(bad)  
  410fec:	mov    dh,0x44
  410fee:	add    BYTE PTR [eax],dh
  410ff0:	(bad)  [ecx+0xa]
  410ff3:	fs out 0x66,eax
  410ff6:	add    ah,0xd9
  410ff9:	test   eax,0xade450c3
  410ffe:	je     0x411056
  411000:	jnp    0x411049
  411002:	push   ss
  411003:	sub    al,0xc2
  411005:	aam    0xc6
  411007:	pop    eax
  411008:	and    BYTE PTR [ecx],bh
  41100a:	loop   0x411016
  41100c:	xchg   edi,eax
  41100d:	stos   DWORD PTR es:[edi],eax
  41100e:	cwde   
  41100f:	bound  esi,QWORD PTR [eax+0x1cdcf318]
  411015:	or     eax,esp
  411017:	dec    ecx
  411018:	add    DWORD PTR [eax],0x7241bb8f
  41101e:	xor    al,BYTE PTR [eax+0x28]
  411021:	lea    ebx,[eax+0x3a6bcee]
  411027:	xchg   ebx,eax
  411028:	dec    esi
  411029:	clc    
  41102a:	(bad)  
  41102b:	adc    DWORD PTR [ecx],edi
  41102d:	addr16 pop esi
  41102f:	(bad)  
  411030:	push   ds
  411031:	dec    eax
  411032:	cmc    
  411033:	and    ah,BYTE PTR [edx+0xcd2b59e]
  411039:	fs out 0xa2,al
  41103c:	xchg   esp,eax
  41103d:	xor    eax,0xd171b197
  411042:	clc    
  411043:	push   esi
  411044:	mov    al,ds:0x19bd7c7f
  411049:	add    edx,DWORD PTR [edi+0x4be87259]
  41104f:	les    ebp,FWORD PTR [edi]
  411051:	aas    
  411052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411053:	stc    
  411054:	arpl   WORD PTR [esi+0x1a362c44],si
  41105a:	sbb    BYTE PTR [esp+edx*8-0x68f936c7],0xeb
  411062:	pop    esi
  411063:	or     al,0xa2
  411065:	jl     0x41108a
  411067:	test   al,0x49
  411069:	and    DWORD PTR [esi+0x70aef6a4],edx
  41106f:	or     eax,0x88a50f51
  411074:	int3   
  411075:	or     ebp,DWORD PTR [esi-0x40eb13cb]
  41107b:	(bad)  [ecx-0x1f]
  41107e:	mov    eax,ds:0x72733007
  411083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411084:	les    ebp,FWORD PTR [bp+di+0x6cb1]
  411089:	mov    BYTE PTR [eax+0x55f059ad],dh
  41108f:	mov    esi,0x53fde80c
  411094:	ins    DWORD PTR es:[edi],dx
  411095:	in     al,0xa2
  411097:	outs   dx,DWORD PTR ds:[esi]
  411098:	adc    eax,DWORD PTR [edi]
  41109a:	sub    al,0xf7
  41109c:	sbb    cl,BYTE PTR [ebx+ebp*8-0x7d]
  4110a0:	mov    ah,0x48
  4110a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a3:	xor    esp,DWORD PTR [ecx]
  4110a5:	xor    al,0x40
  4110a7:	jae    0x411050
  4110a9:	and    BYTE PTR [ebx],dl
  4110ab:	adc    bl,BYTE PTR [eax-0x28a0aa24]
  4110b1:	mov    cl,0xdc
  4110b3:	xor    DWORD PTR [edx],edi
  4110b5:	or     eax,0x3b152381
  4110ba:	push   eax
  4110bb:	mov    ebp,0x548d2a50
  4110c0:	push   esi
  4110c1:	les    edi,FWORD PTR [ecx]
  4110c3:	xor    cl,BYTE PTR [edi]
  4110c5:	stos   BYTE PTR es:[edi],al
  4110c6:	xchg   edx,eax
  4110c7:	fadd   QWORD PTR [edx+edx*1]
  4110ca:	dec    edx
  4110cb:	call   0x31d0:0x399ad63a
  4110d2:	je     0x41112a
  4110d4:	xor    eax,0x1abeca16
  4110d9:	adc    dh,ch
  4110db:	inc    ecx
  4110dc:	mov    bh,0x78
  4110de:	jbe    0x411103
  4110e0:	fdivr  st,st(4)
  4110e2:	addr16 cmp al,ch
  4110e5:	jle    0x411119
  4110e7:	jl     0x4110b6
  4110e9:	or     al,0xcc
  4110eb:	jae    0x41109b
  4110ed:	xchg   edi,eax
  4110ee:	mov    cl,0xe4
  4110f0:	in     al,0x85
  4110f2:	lods   al,BYTE PTR ds:[esi]
  4110f3:	lods   al,BYTE PTR ds:[esi]
  4110f4:	cs sahf 
  4110f6:	xchg   edx,eax
  4110f7:	js     0x411107
  4110f9:	data16 sub dl,dh
  4110fc:	mov    ebp,0xb5a6b10
  411101:	mov    ecx,edi
  411103:	push   cs
  411104:	xor    bl,al
  411106:	cmp    ch,dh
  411108:	push   esp
  411109:	xchg   ebp,eax
  41110a:	cs fwait
  41110c:	mov    ecx,0x4ddc96e5
  411111:	or     eax,0x5f38236c
  411116:	push   es
  411117:	push   ecx
  411118:	mov    esp,0x1d3cd1d5
  41111d:	enter  0x18d,0x55
  411121:	jbe    0x4110b7
  411123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411124:	jbe    0x411154
  411126:	or     esi,DWORD PTR [esi+0x4dc93348]
  41112c:	test   DWORD PTR [ecx],0x8a73f16f
  411132:	lea    esi,[edx+0x1e4ea5e5]
  411138:	add    edi,DWORD PTR [edx]
  41113a:	xchg   edx,eax
  41113b:	scas   al,BYTE PTR es:[edi]
  41113c:	mov    edx,0x574f58df
  411141:	aam    0xee
  411143:	shl    dh,0x0
  411146:	sub    BYTE PTR [edx+edi*8],0x9d
  41114a:	mov    esi,0xc9ec2d59
  41114f:	add    DWORD PTR [ebx],edx
  411151:	push   ebp
  411152:	sti    
  411153:	repz or BYTE PTR [edi-0x1006bf58],ah
  41115a:	leave  
  41115b:	pop    esp
  41115c:	sub    esi,DWORD PTR [ecx-0x54a40bc]
  411162:	stos   BYTE PTR es:[edi],al
  411163:	bound  esp,QWORD PTR [esi-0x61050716]
  411169:	adc    ebx,edi
  41116b:	out    dx,eax
  41116c:	jmp    0x1ececc46
  411171:	mov    bl,bl
  411173:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411175:	sbb    BYTE PTR [esp+esi*4+0x418f15fc],ch
  41117c:	and    al,0x66
  41117e:	jp     0x4111d7
  411180:	sub    BYTE PTR [edi],0xc4
  411183:	mov    bl,0xdb
  411185:	sub    BYTE PTR [edi-0x62],0x83
  411189:	adc    eax,0x9c42397
  41118e:	mov    esp,0x5c641eac
  411193:	xlat   BYTE PTR ds:[ebx]
  411194:	shr    DWORD PTR [ebx-0x56],0x7c
  411198:	mov    ebx,DWORD PTR ds:0x53305c01
  41119e:	ja     0x4111b6
  4111a0:	and    ah,bh
  4111a2:	fbstp  TBYTE PTR [eax]
  4111a4:	jmp    0xd0dc56e9
  4111a9:	jb     0x41119b
  4111ab:	std    
  4111ac:	jecxz  0x411147
  4111ae:	outs   dx,DWORD PTR ds:[esi]
  4111af:	ja     0x4111cc
  4111b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111b2:	leave  
  4111b3:	adc    dl,BYTE PTR [ebx-0x5efe1b6d]
  4111b9:	mov    cl,0xa
  4111bb:	pop    eax
  4111bc:	ins    DWORD PTR es:[edi],dx
  4111bd:	fst    QWORD PTR [edi]
  4111bf:	jle    0x41119e
  4111c1:	retf   
  4111c2:	dec    esp
  4111c3:	jecxz  0x411204
  4111c5:	lock add BYTE PTR [edx+eiz*1+0x30e17555],0x42
  4111ce:	inc    ecx
  4111cf:	sbb    edx,ecx
  4111d1:	mov    al,ds:0x9bff3023
  4111d6:	(bad)  
  4111d7:	mov    esp,0xb7c4ccb1
  4111dc:	ret    
  4111dd:	ds nop
  4111df:	and    al,0xb7
  4111e1:	in     al,0xa
  4111e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e4:	xchg   BYTE PTR [ebx-0x1190ec0f],al
  4111ea:	xor    al,bh
  4111ec:	dec    ecx
  4111ed:	sar    al,1
  4111ef:	lods   eax,DWORD PTR ds:[esi]
  4111f0:	fild   QWORD PTR [ecx]
  4111f2:	mov    ebp,0x10940251
  4111f7:	push   ebx
  4111f8:	add    BYTE PTR [ecx-0x31],dh
  4111fb:	rcr    BYTE PTR [ecx+0x62],1
  4111fe:	lea    edx,[esi+ebp*8-0x2f9d28bf]
  411205:	int3   
  411206:	arpl   WORD PTR [esi],si
  411208:	pop    edi
  411209:	into   
  41120a:	fcomp  QWORD PTR [edx+eiz*8-0x3f]
  41120e:	enter  0xfe7d,0x91
  411212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411213:	in     eax,0x69
  411215:	loopne 0x4111c5
  411217:	sbb    BYTE PTR [edi-0x52d6585c],dl
  41121d:	outs   dx,BYTE PTR ds:[esi]
  41121e:	pop    edx
  41121f:	loope  0x4111d0
  411221:	and    ch,al
  411223:	(bad)  
  411224:	cld    
  411225:	mov    edx,DWORD PTR [eax-0x4c]
  411228:	xchg   ebp,eax
  411229:	retf   0xe5b6
  41122c:	mov    ch,0x9
  41122e:	out    dx,al
  41122f:	daa    
  411230:	ins    BYTE PTR es:[edi],dx
  411231:	mov    ebp,0xe1d091be
  411236:	jl     0x41126a
  411238:	mov    esp,0x9cbc11b3
  41123d:	xchg   ebp,eax
  41123e:	(bad)  
  41123f:	int    0x48
  411241:	mov    bh,BYTE PTR [ecx-0x29]
  411244:	push   esi
  411245:	aaa    
  411246:	dec    ebp
  411247:	sbb    eax,0xcca2e478
  41124c:	jmp    0x4111e2
  41124e:	inc    esi
  41124f:	push   ecx
  411250:	jp     0x411265
  411252:	nop
  411253:	add    ch,bl
  411255:	lahf   
  411256:	xchg   ebx,eax
  411257:	xchg   esp,eax
  411258:	push   eax
  411259:	or     eax,DWORD PTR [ebx+eax*8-0x2e]
  41125d:	and    BYTE PTR [edi+0x6],dl
  411260:	mov    bl,0x9f
  411262:	sahf   
  411263:	stos   DWORD PTR es:[edi],eax
  411264:	or     al,0x10
  411266:	neg    DWORD PTR [edi+0x135d55ea]
  41126c:	inc    edi
  41126d:	rcr    DWORD PTR [esi+0x5d],0xad
  411271:	sub    BYTE PTR [ecx+0xc],dh
  411274:	and    al,0x94
  411276:	mov    eax,0xca12e5
  41127b:	cdq    
  41127c:	into   
  41127d:	mov    al,0x31
  41127f:	push   esi
  411280:	mov    al,ds:0xe69e9e60
  411285:	addr16 aad 0xaf
  411288:	lods   al,BYTE PTR ds:[esi]
  411289:	lahf   
  41128a:	xor    edx,DWORD PTR [ecx-0x48]
  41128d:	daa    
  41128e:	and    bh,cl
  411290:	jecxz  0x411219
  411292:	fiadd  WORD PTR ds:0x183cb1bd
  411298:	ror    DWORD PTR [ebx-0x314c5ccc],1
  41129e:	lods   eax,DWORD PTR ds:[esi]
  41129f:	mov    ecx,0xdf358c3
  4112a4:	pop    eax
  4112a5:	mov    cl,0x66
  4112a7:	cdq    
  4112a8:	cwde   
  4112a9:	pop    es
  4112aa:	stos   DWORD PTR es:[edi],eax
  4112ab:	stos   BYTE PTR es:[edi],al
  4112ac:	jl     0x4112ff
  4112ae:	mov    ebx,0xc7d57401
  4112b3:	sub    eax,0xb3049a25
  4112b8:	sbb    bl,BYTE PTR [ebx-0x1b]
  4112bb:	adc    esp,DWORD PTR [eiz*8-0x3e9803b8]
  4112c2:	xlat   BYTE PTR ds:[ebx]
  4112c3:	mov    ah,0xb1
  4112c5:	outs   dx,DWORD PTR ds:[esi]
  4112c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c7:	out    0xb2,eax
  4112c9:	mov    dl,0xec
  4112cb:	jecxz  0x411296
  4112cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ce:	sahf   
  4112cf:	icebp  
  4112d0:	imul   edi,DWORD PTR [edi+eax*2],0xa0a75a02
  4112d7:	dec    ebx
  4112d8:	test   cl,al
  4112da:	pushf  
  4112db:	(bad)  
  4112dc:	xor    BYTE PTR [ebp+0x11eb1a48],ch
  4112e2:	icebp  
  4112e3:	mov    bl,0xe1
  4112e5:	pop    ebp
  4112e6:	lds    ebx,FWORD PTR [ebp+ebp*8+0x43]
  4112ea:	lock fld TBYTE PTR [ebp+0x58]
  4112ee:	fstp   QWORD PTR [edx+0x38052ca4]
  4112f4:	xlat   BYTE PTR ds:[ebx]
  4112f5:	(bad)  
  4112f6:	xlat   BYTE PTR ds:[ebx]
  4112f7:	fwait
  4112f8:	or     cl,BYTE PTR [ecx]
  4112fa:	push   edx
  4112fb:	adc    DWORD PTR [ebp+0x5339ca35],edx
  411301:	das    
  411302:	imul   esi,DWORD PTR [ebp+0x50d402db],0xffffff98
  411309:	add    bl,BYTE PTR [edi]
  41130b:	cmp    esp,DWORD PTR [edx-0x2e]
  41130e:	popf   
  41130f:	jg     0x411380
  411311:	gs iret 
  411313:	push   esi
  411314:	popf   
  411315:	add    esi,ecx
  411317:	sub    DWORD PTR [edx-0x4b],0x8673108b
  41131e:	repnz mov bh,0x36
  411321:	loope  0x411351
  411323:	sub    DWORD PTR [eax+esi*8-0x3ba848c7],ebp
  41132a:	mov    eax,edx
  41132c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41132d:	fldcw  WORD PTR ds:0x5976909d
  411333:	ret    
  411334:	clc    
  411335:	mov    ecx,0x9ed18769
  41133a:	inc    ecx
  41133b:	xor    DWORD PTR [ebx-0x48],ebx
  41133e:	xchg   edx,eax
  41133f:	retf   0x2660
  411342:	shl    BYTE PTR [esi-0x73],1
  411345:	jo     0x41131a
  411347:	lock jae 0x411325
  41134a:	in     al,dx
  41134b:	enter  0x385f,0x8a
  41134f:	in     al,0x3d
  411351:	and    eax,esp
  411353:	aaa    
  411354:	jb     0x411376
  411356:	popf   
  411357:	fadd   DWORD PTR [ecx-0x2b]
  41135a:	call   0x45977214
  41135f:	daa    
  411360:	psrld  mm3,QWORD PTR [eax+0x19f6c7f0]
  411367:	xlat   BYTE PTR ds:[ebx]
  411368:	ss inc ebp
  41136a:	adc    ebp,esp
  41136c:	or     bl,BYTE PTR [ecx+0x5ca97708]
  411372:	cli    
  411373:	or     esi,DWORD PTR [edi+0x334dd92]
  411379:	or     DWORD PTR [ebp-0x3],edx
  41137c:	sbb    edi,DWORD PTR [ecx+0x40]
  41137f:	outs   dx,DWORD PTR ds:[esi]
  411380:	lods   eax,DWORD PTR ds:[esi]
  411381:	ror    BYTE PTR [ebx-0x51],cl
  411384:	xchg   esi,eax
  411385:	and    bl,BYTE PTR ds:0x5d26b291
  41138b:	jno    0x411368
  41138d:	mov    edx,0x3ff52bd5
  411392:	sar    DWORD PTR ds:0xda5dcca2,1
  411398:	push   0x706b563a
  41139d:	in     al,dx
  41139e:	ds and al,0x27
  4113a1:	fs jp  0x4113ab
  4113a4:	jmp    0xf938:0x60db0431
  4113ab:	scas   al,BYTE PTR es:[edi]
  4113ac:	add    DWORD PTR [ebp-0x66b49fbb],esp
  4113b2:	cmp    dh,ah
  4113b4:	or     ch,al
  4113b6:	stos   DWORD PTR es:[edi],eax
  4113b7:	inc    ecx
  4113b8:	mov    bl,0x74
  4113ba:	js     0x4113a0
  4113bc:	hlt    
  4113bd:	and    cl,dl
  4113bf:	fs sub eax,0xb5f270b
  4113c5:	js     0x4113b2
  4113c7:	in     eax,dx
  4113c8:	xor    eax,0x50148dda
  4113cd:	add    dl,BYTE PTR [ebx+0x5c]
  4113d0:	mov    BYTE PTR [esi+0x3182837f],al
  4113d6:	or     eax,0x4cc2bc9
  4113db:	hlt    
  4113dc:	sub    BYTE PTR [ecx-0x1a6fc3c5],ah
  4113e2:	test   al,0x19
  4113e4:	push   ss
  4113e5:	jecxz  0x4113cb
  4113e7:	pop    ds
  4113e8:	push   edi
  4113e9:	icebp  
  4113ea:	pop    eax
  4113eb:	mov    ecx,ebp
  4113ed:	push   es
  4113ee:	pop    esi
  4113ef:	and    eax,0xdf6d0641
  4113f4:	addr16 jmp 0x411438
  4113f7:	int    0x6a
  4113f9:	ja     0x411409
  4113fb:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4113fd:	mov    al,0xb8
  4113ff:	inc    ecx
  411400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411401:	jp     0x41145e
  411403:	div    DWORD PTR [edx-0x740fc2eb]
  411409:	push   edi
  41140a:	pop    ss
  41140b:	or     eax,0x26e0e044
  411410:	pop    ss
  411411:	inc    edi
  411412:	mov    bh,0xf3
  411414:	push   esi
  411415:	aas    
  411416:	call   0x56b4:0x9a16bbe7
  41141d:	icebp  
  41141e:	fsub   st,st(2)
  411420:	lea    esp,[edi+0x52]
  411423:	pop    ds
  411424:	popf   
  411425:	push   esi
  411426:	mov    al,0xde
  411428:	shl    ebp,0xca
  41142b:	xchg   edi,eax
  41142c:	add    eax,0x31f6a5c5
  411431:	mov    dl,bl
  411433:	sbb    eax,0x28f758ca
  411438:	mov    al,ds:0x62378f4a
  41143d:	test   DWORD PTR [ebx+0x1ca9df70],eax
  411443:	dec    ebp
  411444:	sub    dl,BYTE PTR [eax]
  411446:	fist   DWORD PTR [eax]
  411448:	inc    esp
  411449:	adc    DWORD PTR [edx],edx
  41144b:	lock jns 0x411430
  41144e:	mov    al,0x2e
  411450:	add    al,0xda
  411452:	mov    bh,0x86
  411454:	push   esi
  411455:	or     BYTE PTR [edi-0x7c],bl
  411458:	push   eax
  411459:	pop    esi
  41145a:	mov    ecx,0x43a3cdd8
  41145f:	xchg   ecx,eax
  411460:	enter  0x75b8,0x3f
  411464:	xor    al,0xa
  411466:	push   ax
  411468:	or     BYTE PTR [eax],dl
  41146a:	(bad)  
  41146b:	hlt    
  41146c:	and    al,0xf6
  41146e:	push   ds
  41146f:	lock jnp 0x411460
  411472:	pop    ebp
  411473:	xor    edx,DWORD PTR [esi+ebp*4-0xa933cef]
  41147a:	adc    al,0x57
  41147c:	shl    DWORD PTR ds:0x90e55bc3,cl
  411482:	lods   al,BYTE PTR ds:[esi]
  411483:	outs   dx,DWORD PTR ds:[esi]
  411484:	icebp  
  411485:	pop    esi
  411486:	jo     0x411451
  411488:	aad    0x3f
  41148a:	inc    esi
  41148b:	dec    edx
  41148c:	add    BYTE PTR [esi+0x407c7e65],al
  411492:	inc    ecx
  411493:	pop    ss
  411494:	addr16 (bad) 
  411496:	cmp    DWORD PTR [esi+0x55],esi
  411499:	xlat   BYTE PTR ds:[ebx]
  41149a:	xchg   esp,eax
  41149b:	ins    BYTE PTR es:[edi],dx
  41149c:	test   eax,0x21db6233
  4114a1:	or     eax,0x7ad3e07b
  4114a6:	mov    ecx,0x2351f955
  4114ab:	and    al,0xc1
  4114ad:	mov    eax,ds:0xeeab40ce
  4114b2:	sub    ebx,DWORD PTR [edx+ebx*4-0x3f]
  4114b6:	pop    es
  4114b7:	or     esi,DWORD PTR [edx+0x78]
  4114ba:	adc    BYTE PTR [ecx+0x2a],ch
  4114bd:	fdiv   QWORD PTR [edx+0x6e]
  4114c0:	jp     0x4114a6
  4114c2:	fsubr  QWORD PTR [ebx-0x42398eab]
  4114c8:	pop    edi
  4114c9:	stos   BYTE PTR es:[edi],al
  4114ca:	dec    edx
  4114cb:	and    DWORD PTR [eax+0x6c7bf58c],0x7704622c
  4114d5:	ins    DWORD PTR es:[edi],dx
  4114d6:	dec    esi
  4114d7:	pushf  
  4114d8:	(bad)  
  4114d9:	xor    eax,DWORD PTR [esi-0x11]
  4114dc:	(bad)  
  4114dd:	push   edi
  4114de:	jmp    DWORD PTR [edi+esi*1+0x7e]
  4114e2:	test   al,0x97
  4114e4:	js     0x4114f6
  4114e6:	aaa    
  4114e7:	arpl   WORD PTR [edi+0x106aa2fc],bp
  4114ed:	pop    eax
  4114ee:	add    BYTE PTR [esi-0x59752b43],bl
  4114f4:	repz rol BYTE PTR [eax+0x75],1
  4114f8:	mov    ds:0x73a0d6e,al
  4114fd:	repz xor BYTE PTR [ebx],ch
  411500:	xchg   ebx,eax
  411501:	and    al,BYTE PTR [ebp+0x5b]
  411504:	out    0x87,eax
  411506:	jne    0x4114dc
  411508:	out    0x28,eax
  41150a:	jns    0x411565
  41150c:	mov    ch,0xb1
  41150e:	xor    edi,DWORD PTR [ecx]
  411510:	(bad)  
  411512:	push   edi
  411513:	rcr    DWORD PTR [ebx+0x6a8273ac],1
  411519:	add    eax,0x118cc4dc
  41151e:	cmc    
  41151f:	xchg   ecx,eax
  411520:	cwde   
  411521:	xchg   ebx,eax
  411522:	cmp    edi,DWORD PTR [edi+ebp*2+0x91b9f7a]
  411529:	push   ebx
  41152a:	fmul   QWORD PTR [edx]
  41152c:	add    dh,BYTE PTR [esi+ebx*2]
  41152f:	lahf   
  411530:	jge    0x4114ee
  411532:	dec    ebp
  411533:	add    BYTE PTR fs:0x92bec47b,0x5f
  41153b:	and    ah,BYTE PTR [esi+edi*1-0x24d0372e]
  411542:	xchg   edx,eax
  411543:	mov    ecx,0x5e7351fd
  411548:	cmp    dl,bl
  41154a:	push   edx
  41154b:	jp     0x411543
  41154d:	idiv   BYTE PTR [ebp+0x61e403fd]
  411553:	adc    esi,DWORD PTR [eax+0x56eb88f0]
  411559:	mov    edx,0x9c7fc2a2
  41155e:	test   DWORD PTR [ebp-0x12],ecx
  411561:	and    DWORD PTR [edx],ebp
  411563:	mov    ah,dh
  411565:	xchg   esi,eax
  411566:	push   0xffffffe8
  411568:	mov    esi,esi
  41156a:	jle    0x41154a
  41156c:	pop    eax
  41156d:	lock cmp esp,esi
  411570:	mov    esi,0xad72cee2
  411575:	clc    
  411576:	xor    ebx,DWORD PTR [edx]
  411578:	neg    BYTE PTR [edx+0x61]
  41157b:	sub    al,BYTE PTR [edx]
  41157d:	and    al,0x93
  41157f:	mov    ds:0xe8a77bda,al
  411584:	and    edx,ebx
  411586:	xor    WORD PTR [edi-0x636c0cca],dx
  41158d:	clc    
  41158e:	clc    
  41158f:	test   DWORD PTR [eax-0x3c47c5a0],eax
  411595:	xchg   ecx,eax
  411596:	inc    esi
  411597:	mov    ebx,0x60322259
  41159c:	add    esi,edx
  41159e:	push   esp
  41159f:	xor    DWORD PTR [eax-0x7d],0xd24e0e6f
  4115a6:	mov    esi,0x904c31fd
  4115ab:	xchg   esi,eax
  4115ac:	ficom  WORD PTR [esi]
  4115ae:	mov    WORD PTR [edx-0x5ddf9547],ss
  4115b4:	out    0x99,al
  4115b6:	xchg   BYTE PTR [eax-0x3941af81],dh
  4115bc:	jg     0x411604
  4115be:	lahf   
  4115bf:	jne    0x411614
  4115c1:	pop    edi
  4115c2:	mov    WORD PTR [edx-0x6116e52],ds
  4115c8:	sub    eax,0xdc591a68
  4115cd:	mov    ah,0x9
  4115cf:	icebp  
  4115d0:	jnp    0x4115d6
  4115d2:	adc    bh,BYTE PTR [esi-0x5]
  4115d5:	imul   esi,ebp,0xed38e028
  4115db:	jnp    0x41159e
  4115dd:	push   es
  4115de:	push   0x78
  4115e0:	retf   0xbe5c
  4115e3:	xchg   edx,eax
  4115e4:	fcomp  QWORD PTR [eax+0x782afb00]
  4115ea:	mov    cl,0xfc
  4115ec:	leave  
  4115ed:	pop    ss
  4115ee:	cwde   
  4115ef:	test   BYTE PTR [eax-0x210dd33],bh
  4115f5:	rol    ecx,0xe
  4115f8:	pop    ds
  4115f9:	call   0xbd31ec79
  4115fe:	pop    eax
  4115ff:	hlt    
  411600:	inc    esp
  411601:	shr    BYTE PTR [ecx],cl
  411603:	jl     0x411622
  411605:	xchg   edx,eax
  411606:	fsub   st(7),st
  411608:	je     0x411649
  41160a:	inc    edi
  41160b:	and    bl,cl
  41160d:	lahf   
  41160e:	ror    DWORD PTR [esi+0x695518e6],cl
  411614:	sbb    DWORD PTR [esi-0x27],ebx
  411617:	or     cl,BYTE PTR [ebp+0x4248ba5f]
  41161d:	xor    eax,0xbc1630ef
  411622:	inc    ecx
  411623:	add    eax,0xab41be74
  411628:	stc    
  411629:	xchg   edi,eax
  41162a:	das    
  41162b:	sbb    dl,BYTE PTR [edi]
  41162d:	adc    eax,0x9a4800f9
  411632:	mov    BYTE PTR [esi-0x71],dl
  411635:	adc    al,0x0
  411637:	sti    
  411638:	mov    al,0xc6
  41163a:	call   0xdd9f55b1
  41163f:	dec    ebx
  411640:	push   ecx
  411641:	and    edi,DWORD PTR [ecx+0x70]
  411644:	aas    
  411645:	fnstenv ss:[edi+0x15d97ece]
  41164c:	adc    esi,ebp
  41164e:	pusha  
  41164f:	sbb    eax,0x895cd74a
  411654:	push   es
  411655:	das    
  411656:	das    
  411657:	mov    ebp,0x48ad2a0c
  41165c:	call   0x4410:0xcca733ff
  411663:	imul   ecx,DWORD PTR [edx+0x71],0x1fe2fc55
  41166a:	dec    ebp
  41166b:	ds jo  0x41162f
  41166e:	in     al,0x70
  411670:	adc    BYTE PTR [edi],dl
  411672:	shr    DWORD PTR [ecx+0x4836638c],cl
  411678:	add    al,0xd2
  41167a:	(bad)  
  41167b:	out    dx,eax
  41167c:	mov    al,ds:0x63981705
  411681:	xchg   ecx,eax
  411682:	add    BYTE PTR [ebp+0x62],dl
  411685:	(bad)  
  411686:	jge    0x411616
  411688:	push   ecx
  411689:	push   esp
  41168a:	nop
  41168b:	out    dx,eax
  41168c:	inc    ebx
  41168d:	inc    ebx
  41168e:	push   es
  41168f:	je     0x411685
  411691:	and    ch,ah
  411693:	in     al,0x0
  411695:	test   DWORD PTR [esi],ebx
  411697:	cmp    esp,DWORD PTR [ecx-0xf]
  41169a:	je     0x4116e7
  41169c:	or     dl,BYTE PTR [esi+eax*8]
  41169f:	jmp    0x12ca:0x65f45535
  4116a6:	int    0xea
  4116a8:	inc    esi
  4116a9:	sub    eax,0xb50375f6
  4116ae:	test   al,0x96
  4116b0:	adc    BYTE PTR [edx+edi*4-0x66],0x58
  4116b5:	add    DWORD PTR [edx+0x2d],edi
  4116b8:	sub    eax,0xcf54ed80
  4116bd:	xchg   ecx,eax
  4116be:	ret    0xede1
  4116c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c2:	push   esp
  4116c3:	sub    al,0x98
  4116c5:	sbb    BYTE PTR [eax],0xc9
  4116c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c9:	ret    0xb30f
  4116cc:	in     eax,0x33
  4116ce:	push   es
  4116cf:	loope  0x4116d4
  4116d1:	mov    ebp,0x3d3fd62a
  4116d6:	mov    bl,0x6c
  4116d8:	jp     0x41174c
  4116da:	dec    ecx
  4116db:	add    DWORD PTR [esi],0xff0fe73b
  4116e1:	imul   esp,DWORD PTR [ecx+0x61],0xf96d311
  4116e8:	nop
  4116e9:	pop    esp
  4116ea:	lea    edx,[edi+0x1b1bc05f]
  4116f0:	pop    ebp
  4116f1:	xlat   BYTE PTR ds:[ebx]
  4116f2:	add    BYTE PTR ds:0xbc60230d,bl
  4116f8:	xor    edi,edx
  4116fa:	or     al,0xcd
  4116fd:	add    eax,0x10d7bebc
  411702:	xchg   ebx,eax
  411703:	sbb    al,0xf8
  411705:	cmp    DWORD PTR [esi+0x10],ebp
  411708:	push   eax
  411709:	dec    esp
  41170a:	test   BYTE PTR ds:0xf903d453,0x6d
  411711:	mov    esi,0x656d1f79
  411716:	mov    ?,WORD PTR [ecx]
  411718:	(bad)  [ebp+0x29]
  41171b:	dec    eax
  41171c:	or     eax,0xb940af9b
  411721:	jmp    0x411757
  411723:	pop    esi
  411724:	or     al,0x88
  411726:	in     al,0xb9
  411728:	es dec esi
  41172a:	mov    ebp,0xe0f13c18
  41172f:	xor    ebx,edi
  411731:	lods   eax,DWORD PTR ds:[esi]
  411732:	cmp    al,dl
  411734:	cmp    bh,BYTE PTR [ebx+0x3922c626]
  41173a:	sub    ebx,DWORD PTR [esi-0x26425e76]
  411740:	out    dx,eax
  411741:	mov    edi,0x1f8f75f7
  411746:	push   ebx
  411747:	xchg   esp,eax
  411748:	sub    eax,0xd1b9d23d
  41174d:	pop    ds
  41174e:	and    edx,eax
  411750:	xor    BYTE PTR [ebp+0x56884d45],bh
  411756:	xor    ch,BYTE PTR [ebp-0x5ac6c214]
  41175c:	xor    BYTE PTR [ecx-0x4fc323e4],0x12
  411763:	pop    edi
  411764:	xor    DWORD PTR [edx+ebx*8],0x3c50a849
  41176b:	xchg   ebx,eax
  41176c:	inc    ecx
  41176d:	push   ebp
  41176e:	inc    edx
  41176f:	push   edx
  411770:	out    0xc4,eax
  411772:	mov    ch,0xac
  411774:	mov    cl,0x74
  411776:	xchg   ebx,eax
  411777:	sub    eax,0xc07512f2
  41177c:	mov    ch,0xf7
  41177e:	call   0x7e24dcb
  411783:	add    DWORD PTR [edi],esp
  411785:	pop    ebp
  411786:	mov    cl,0x84
  411788:	inc    edi
  411789:	rol    DWORD PTR [ebp+0x6a],0x70
  41178d:	mov    WORD PTR [edx],?
  41178f:	cmp    dh,ch
  411791:	dec    eax
  411792:	das    
  411793:	jge    0x411733
  411795:	std    
  411796:	fwait
  411797:	inc    edi
  411798:	sbb    eax,0x3d909f9b
  41179d:	or     eax,0x4af1ae93
  4117a2:	xchg   edx,ecx
  4117a4:	sar    DWORD PTR [ebx*2+0x61a28c72],0xb
  4117ac:	int3   
  4117ad:	(bad)  
  4117ae:	pusha  
  4117af:	aaa    
  4117b0:	jns    0x4117d3
  4117b2:	mov    dh,0x1e
  4117b4:	lds    ebx,FWORD PTR [ebx+0x69df8374]
  4117ba:	sub    edi,DWORD PTR [edx]
  4117bc:	fldz   
  4117be:	xchg   ebx,eax
  4117bf:	icebp  
  4117c0:	adc    DWORD PTR es:0x15206877,eax
  4117c7:	pop    esi
  4117c8:	xor    edx,ebx
  4117ca:	jae    0x411780
  4117cc:	cmc    
  4117cd:	add    DWORD PTR [edx],ebp
  4117cf:	call   0x1416fd93
  4117d4:	imul   ebx,DWORD PTR [eax+0x2a1610df],0x1ae25e12
  4117de:	and    eax,0x66b23ac7
  4117e3:	and    DWORD PTR [ecx+0x745412b2],ecx
  4117e9:	sub    BYTE PTR [eax],cl
  4117eb:	mov    ebx,DWORD PTR [edx-0x60]
  4117ee:	pushf  
  4117ef:	les    ecx,FWORD PTR [ecx]
  4117f1:	mov    cl,0xe3
  4117f3:	ud1    esi,DWORD PTR [edi-0x25caa41b]
  4117fa:	xor    edx,ecx
  4117fc:	xor    eax,0x5c8a9305
  411801:	cmp    ebx,DWORD PTR [ebp-0x32f3d1c3]
  411807:	sub    eax,0xb6ff8896
  41180c:	jb     0x41187e
  41180e:	mov    edi,0xca1084ab
  411813:	jg     0x4117c7
  411815:	push   edi
  411816:	loope  0x41180f
  411818:	mov    al,0x9b
  41181a:	fsub   DWORD PTR [esi]
  41181c:	xor    al,0xf
  41181e:	and    BYTE PTR [bp+si+0x3c],0x8d
  411823:	xor    DWORD PTR [bp+si+0x4f],edi
  411827:	pushf  
  411828:	(bad)  [esi+ebx*1+0x3f5f8253]
  41182f:	or     DWORD PTR [edi-0x1f92bbb6],edi
  411835:	in     al,dx
  411836:	inc    esi
  411837:	out    0x93,eax
  411839:	lock or BYTE PTR [ebx+0x37],0x31
  41183e:	mov    ebx,0x15a46dba
  411843:	mul    BYTE PTR [esi]
  411845:	(bad)  
  411847:	adc    dh,ah
  411849:	bound  esp,QWORD PTR [ebx]
  41184b:	or     ebp,DWORD PTR [ecx-0x668b70d6]
  411851:	push   edi
  411852:	ds mov cl,0xe7
  411855:	dec    esp
  411856:	mov    ecx,?
  411858:	mov    bl,0x2b
  41185a:	stc    
  41185b:	xor    DWORD PTR [edi+edx*2],edx
  41185e:	data16 xlat BYTE PTR ds:[ebx]
  411860:	inc    ebx
  411861:	pop    esi
  411862:	rol    BYTE PTR [ecx+0x20],0x47
  411866:	push   es
  411867:	and    edx,esi
  411869:	pop    esi
  41186a:	stos   BYTE PTR es:[edi],al
  41186b:	cli    
  41186c:	push   ebx
  41186d:	inc    ebx
  41186e:	push   cs
  41186f:	cld    
  411870:	push   esp
  411871:	dec    esp
  411872:	hlt    
  411873:	and    eax,0x884c5794
  411878:	(bad)  
  411879:	mov    bl,0x0
  41187b:	mov    dh,0x35
  41187d:	aaa    
  41187e:	sahf   
  41187f:	xor    DWORD PTR [ebp-0x6],eax
  411882:	cmc    
  411883:	mov    bh,0x77
  411885:	and    eax,0xd8b50307
  41188a:	cwde   
  41188b:	dec    ecx
  41188c:	ret    
  41188d:	adc    al,0xaf
  41188f:	mov    BYTE PTR [ecx+0x26b0055a],al
  411895:	lock out dx,al
  411897:	and    al,0x3b
  411899:	lods   al,BYTE PTR ds:[esi]
  41189a:	aam    0xb0
  41189c:	sub    BYTE PTR [edi],al
  41189e:	or     edx,DWORD PTR [esi+0x713ef370]
  4118a4:	and    eax,DWORD PTR [edx]
  4118a6:	fcmovnbe st,st(3)
  4118a8:	(bad)  
  4118a9:	out    0x10,eax
  4118ab:	femms  
  4118ad:	mov    dl,0x4
  4118af:	in     eax,dx
  4118b0:	pushf  
  4118b1:	adc    edx,DWORD PTR ds:[ecx]
  4118b4:	mov    esi,0x73990c62
  4118b9:	rol    DWORD PTR [edi+0x4d],cl
  4118bc:	mov    esi,0xb2c18496
  4118c1:	and    al,0x74
  4118c3:	jmp    0x619a:0x6b1a1068
  4118ca:	hlt    
  4118cb:	add    eax,0x323b40fa
  4118d0:	ins    DWORD PTR es:[edi],dx
  4118d1:	aaa    
  4118d2:	mov    ah,0x6
  4118d4:	adc    DWORD PTR [eax+0x51815096],ebp
  4118da:	push   0x5c63f23f
  4118df:	int    0x32
  4118e1:	adc    edx,esi
  4118e3:	das    
  4118e4:	(bad)  
  4118e5:	data16 mov WORD PTR [esp+eax*4+0x5a],es
  4118ea:	cwde   
  4118eb:	mov    ds:0x62f65049,al
  4118f0:	xchg   edx,eax
  4118f1:	inc    eax
  4118f2:	sar    BYTE PTR [edx+0x6],cl
  4118f5:	lock xchg BYTE PTR [esi],al
  4118f8:	out    0xf3,al
  4118fa:	jae    0x411899
  4118fc:	mov    ds:0xc5b1af4a,al
  411901:	mov    bl,0xec
  411903:	std    
  411904:	ss cwde 
  411906:	cli    
  411907:	adc    dh,BYTE PTR [edx]
  411909:	loop   0x411897
  41190b:	cmc    
  41190c:	pop    ebp
  41190d:	sahf   
  41190e:	imul   eax,DWORD PTR [ebp-0x7],0xe2da8458
  411915:	dec    eax
  411916:	xchg   edi,eax
  411917:	cmp    dh,bl
  411919:	add    ah,BYTE PTR [esi+0x1b5cb01a]
  41191f:	pop    es
  411920:	push   es
  411921:	xchg   edx,eax
  411922:	and    eax,0x8717b178
  411927:	dec    esp
  411928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411929:	ror    ebx,1
  41192b:	cmc    
  41192c:	in     eax,0x42
  41192e:	leave  
  41192f:	add    eax,0xa759904
  411934:	dec    edx
  411935:	sbb    bh,bl
  411937:	mov    esp,0x36349826
  41193c:	inc    ebx
  41193d:	push   edi
  41193e:	mov    al,0x49
  411940:	mov    edi,0x84077d69
  411945:	adc    al,0x3b
  411947:	xor    ebp,esi
  411949:	dec    eax
  41194a:	shr    BYTE PTR [edi+0x18],1
  41194d:	xchg   DWORD PTR [ebp-0x16314829],esi
  411953:	test   eax,0xf1f96f23
  411958:	bound  ebx,QWORD PTR [esi]
  41195a:	pop    edi
  41195b:	xchg   cl,bl
  41195d:	ins    DWORD PTR es:[edi],dx
  41195e:	(bad)  
  41195f:	mov    ?,WORD PTR [edi+0x21]
  411962:	add    ch,BYTE PTR [ebx-0x80]
  411965:	or     ah,dl
  411967:	ror    BYTE PTR [eax+0x169f1d4e],1
  41196d:	mov    ebp,0x235f50e8
  411972:	cwde   
  411973:	and    bl,BYTE PTR [ecx+0x3d0e64cc]
  411979:	xchg   ebp,eax
  41197a:	jg     0x41193c
  41197c:	aas    
  41197d:	in     al,0xd
  41197f:	lods   al,BYTE PTR fs:[esi]
  411981:	cmc    
  411982:	das    
  411983:	mov    ds:0xda3dce57,al
  411988:	sbb    ebp,esi
  41198a:	ffreep st(1)
  41198c:	ret    0xf6e8
  41198f:	pop    ebp
  411990:	jecxz  0x411967
  411992:	xor    dh,ah
  411994:	add    ah,bh
  411996:	dec    edx
  411997:	sub    al,al
  411999:	scas   eax,DWORD PTR es:[edi]
  41199a:	xor    BYTE PTR [edx-0x55],dh
  41199d:	(bad)  
  41199f:	pop    ds
  4119a0:	xchg   BYTE PTR ds:0xa175e1b0,dl
  4119a6:	add    eax,edx
  4119a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a9:	mov    dh,0x2a
  4119ab:	push   ebx
  4119ac:	lahf   
  4119ad:	call   0xa85a:0x4baebaf3
  4119b4:	jmp    0x41197d
  4119b6:	rep ins DWORD PTR es:[edi],dx
  4119b8:	jno    0x411a1a
  4119ba:	not    DWORD PTR [esi+0x6e]
  4119bd:	dec    esi
  4119be:	push   esi
  4119bf:	or     bh,BYTE PTR [eax-0x47]
  4119c2:	cld    
  4119c3:	neg    edx
  4119c5:	push   edi
  4119c6:	pop    ds
  4119c7:	or     BYTE PTR [ebp+0x17],ch
  4119ca:	mov    ch,0xa5
  4119cc:	add    al,0xd1
  4119ce:	sbb    BYTE PTR [edx-0x2e9362bf],bl
  4119d4:	setns  BYTE PTR [eax+eax*8+0x44]
  4119d9:	je     0x4119a0
  4119db:	mov    eax,ebp
  4119dd:	daa    
  4119de:	aaa    
  4119df:	repz test BYTE PTR [edx-0x2],al
  4119e3:	aam    0x7e
  4119e5:	popf   
  4119e6:	hlt    
  4119e7:	xchg   ecx,eax
  4119e8:	and    BYTE PTR [eax+ebx*1+0x8],bl
  4119ec:	outs   dx,DWORD PTR ds:[esi]
  4119ed:	push   ds
  4119ee:	pop    edi
  4119ef:	xchg   esp,eax
  4119f0:	add    ah,BYTE PTR [esi]
  4119f2:	(bad)  
  4119f3:	jle    0x41198c
  4119f5:	mov    dh,0xeb
  4119f7:	pop    esp
  4119f8:	into   
  4119f9:	fidivr WORD PTR [ecx-0x56]
  4119fc:	xor    dh,BYTE PTR ds:0xaa7f897b
  411a02:	lahf   
  411a03:	dec    eax
  411a04:	sub    eax,0xf0095f41
  411a09:	mov    eax,ds:0x9f48e408
  411a0e:	pop    ebx
  411a0f:	aam    0xb0
  411a11:	inc    esp
  411a12:	xor    BYTE PTR [edx-0x7a],bl
  411a15:	jl     0x41199f
  411a17:	push   ss
  411a18:	jne    0x411a81
  411a1a:	adc    dl,BYTE PTR [eax+eiz*4-0x26]
  411a1e:	xchg   ecx,eax
  411a1f:	in     eax,dx
  411a20:	ins    DWORD PTR es:[edi],dx
  411a21:	mov    al,ds:0x7e0c3290
  411a26:	mov    esi,0xb61c43c2
  411a2b:	cmp    al,BYTE PTR [ecx+0x7dd39c31]
  411a31:	mul    DWORD PTR [edx]
  411a33:	inc    ebp
  411a34:	cmp    DWORD PTR [edi-0x7533737c],0x4f
  411a3b:	sahf   
  411a3c:	dec    ebx
  411a3d:	pushf  
  411a3e:	fwait
  411a3f:	push   edi
  411a40:	jno    0x411ab5
  411a42:	mov    ds:0x3bc7215c,al
  411a47:	in     al,0xd3
  411a49:	push   edi
  411a4a:	sbb    al,BYTE PTR [eax+0x6a93e351]
  411a50:	inc    esp
  411a51:	sbb    eax,0xa39a6f7b
  411a56:	mov    esp,DWORD PTR [ecx-0x7291aac6]
  411a5c:	pop    esi
  411a5d:	neg    bh
  411a5f:	inc    esp
  411a60:	add    cl,BYTE PTR [ecx-0x3bd9c2ef]
  411a66:	xor    bh,BYTE PTR [ebx]
  411a68:	div    dh
  411a6a:	mov    ebp,0x5d403cd1
  411a6f:	mov    ds:0x87e05b5c,al
  411a74:	ret    0x7b1c
  411a77:	cmp    eax,0xc8e10447
  411a7c:	stc    
  411a7d:	adc    ch,BYTE PTR [edx]
  411a7f:	mov    eax,ds:0xf7955736
  411a84:	icebp  
  411a85:	mov    edx,0xeca7bba3
  411a8a:	fcomp  QWORD PTR [edi+0x69]
  411a8d:	(bad)  
  411a8e:	lahf   
  411a8f:	in     al,dx
  411a90:	jns    0x411a37
  411a92:	outs   dx,BYTE PTR ds:[esi]
  411a93:	retf   
  411a94:	sbb    BYTE PTR [edi-0x80],al
  411a97:	push   esi
  411a98:	std    
  411a99:	mov    dl,0x5e
  411a9b:	mov    bl,0x94
  411a9d:	xchg   DWORD PTR [edx-0x2354982b],esi
  411aa3:	rcr    DWORD PTR [esi+0x755dbc03],cl
  411aa9:	and    eax,0x4b498e01
  411aae:	xor    edx,DWORD PTR [esi-0x2a]
  411ab1:	dec    edx
  411ab2:	lods   al,BYTE PTR ds:[esi]
  411ab3:	pop    ebx
  411ab4:	inc    edx
  411ab5:	pop    esi
  411ab6:	push   edi
  411ab7:	jb     0x411b38
  411ab9:	inc    ecx
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a643
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a647
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a64f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a653
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a657
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a65b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a65f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a663
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a66b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a633
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a63b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a63f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a643
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a647
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     dl,ch
  412636:	cmp    cl,BYTE PTR [ebx+0x32]
  412639:	imul   ecx,DWORD PTR [edx+0x5c178383],0xffffff83
  412640:	cmp    DWORD PTR [eax-0xaa9cb90],0xffffff93
  412647:	jg     0x4126a9
  412649:	aam    0x12
  41264b:	int    0xa8
  41264d:	xchg   ebx,ebx
  41264f:	dec    ecx
  412650:	adc    BYTE PTR [eax],dl
  412652:	inc    ecx
  412653:	dec    esp
  412654:	mov    esp,0xb157b8cc
  412659:	mov    al,ds:0x7836089a
  41265e:	shl    bh,1
  412660:	cmc    
  412661:	push   esi
  412662:	je     0x4125ed
  412664:	mov    cl,0x1e
  412666:	fidiv  WORD PTR [edx]
  412668:	inc    edx
  412669:	push   0x24
  41266b:	and    al,0xde
  41266d:	xchg   esi,eax
  41266e:	cdq    
  41266f:	dec    ecx
  412670:	lea    esp,[edi]
  412672:	mov    eax,ds:0x790e6ddf
  412677:	repnz outs dx,BYTE PTR ds:[esi]
  412679:	pop    edx
  41267a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41267b:	aas    
  41267c:	aam    0xce
  41267e:	in     al,dx
  41267f:	out    dx,eax
  412680:	scas   al,BYTE PTR es:[edi]
  412681:	sub    DWORD PTR [ebx-0x452e74b0],eax
  412687:	aad    0xd1
  412689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41268a:	jg     0x4126b7
  41268c:	dec    esp
  41268d:	(bad)  
  41268e:	mov    eax,ds:0xcdeb48c3
  412693:	cli    
  412694:	pop    esi
  412695:	je     0x412670
  412697:	dec    esi
  412698:	jecxz  0x4126b2
  41269a:	add    ah,bl
  41269c:	std    
  41269d:	dec    ecx
  41269e:	push   ebp
  41269f:	(bad)  
  4126a0:	call   FWORD PTR [esi]
  4126a2:	pop    ebx
  4126a3:	jb     0x412648
  4126a5:	dec    eax
  4126a6:	imul   ebx,edx,0x1f0b0b07
  4126ac:	jno    0x4126ff
  4126ae:	(bad)  
  4126af:	in     al,dx
  4126b0:	xchg   bl,cl
  4126b2:	dec    edi
  4126b3:	cs mov ebx,0x63412f73
  4126b9:	push   ebp
  4126ba:	aad    0x88
  4126bc:	shl    DWORD PTR [edx-0x72],0x75
  4126c0:	in     eax,dx
  4126c1:	adc    eax,0x3855ee06
  4126c6:	fisttp QWORD PTR [ebx]
  4126c8:	jge    0x41265a
  4126ca:	inc    eax
  4126cb:	mov    ecx,fs
  4126cd:	or     dl,dl
  4126cf:	repz xor esp,DWORD PTR [esi-0x7c]
  4126d3:	jae    0x412667
  4126d5:	push   0xf
  4126d7:	fldenv [esi]
  4126d9:	xchg   ebp,eax
  4126da:	push   edx
  4126db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126dc:	sar    BYTE PTR [ecx-0x8695a2],0x93
  4126e3:	jnp    0x4126b1
  4126e5:	scas   eax,DWORD PTR es:[edi]
  4126e6:	pushf  
  4126e7:	mov    BYTE PTR [edi],dh
  4126e9:	push   ss
  4126ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126eb:	mov    ebx,ss
  4126ed:	jecxz  0x412769
  4126ef:	in     eax,0xed
  4126f1:	stc    
  4126f2:	mov    dh,0x52
  4126f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f5:	sub    cl,BYTE PTR [edi+ecx*4-0x57]
  4126f9:	lea    edi,[edi-0x27fadfc3]
  4126ff:	adc    DWORD PTR ds:0xe1816fb8,ecx
  412705:	jnp    0x412719
  412707:	push   esi
  412708:	repz mov al,0xc8
  41270b:	dec    edi
  41270c:	in     eax,0x9
  41270e:	xor    eax,0xc8c830b2
  412713:	adc    ecx,0xffffff90
  412716:	jp     0x4126db
  412718:	fnstsw WORD PTR [ebp+ebp*1-0x782f1462]
  41271f:	int    0xd0
  412721:	mov    BYTE PTR [edx+0x20ea31c8],cl
  412727:	pcmpgtd mm3,QWORD PTR [ebp+0x2f89b7ae]
  41272e:	icebp  
  41272f:	jo     0x412779
  412731:	dec    ebp
  412732:	xor    esp,ebx
  412734:	mov    ds,WORD PTR [ecx+0x73]
  412737:	or     DWORD PTR [ebx+0x2118181b],0xffffffb0
  41273e:	and    cl,0xad
  412741:	je     0x41273a
  412743:	xchg   ebx,eax
  412744:	mov    al,ds:0x2eae39e6
  412749:	repnz mov WORD PTR [ebx],ss
  41274c:	imul   edx,DWORD PTR [edi+0x7eeedeae],0x34409234
  412756:	fsubr  DWORD PTR [ebx+0x74]
  412759:	stos   DWORD PTR es:[edi],eax
  41275a:	aad    0x84
  41275c:	outs   dx,DWORD PTR ds:[esi]
  41275d:	je     0x41273a
  41275f:	xchg   ebx,eax
  412760:	sahf   
  412761:	xor    DWORD PTR gs:[ebp+0x6b],ebp
  412765:	xor    eax,0xec3873a8
  41276a:	sbb    BYTE PTR [esi+eiz*8+0x7563b181],bh
  412771:	mov    WORD PTR gs:[eax],cs
  412774:	inc    ebp
  412775:	(bad)  
  412776:	in     eax,dx
  412777:	or     BYTE PTR [edx-0x43335f20],0x46
  41277e:	test   BYTE PTR [eax],0xeb
  412781:	mov    al,ds:0x60a4836e
  412786:	xor    eax,0x8225fe48
  41278b:	jns    0x41276f
  41278d:	stos   BYTE PTR es:[edi],al
  41278e:	dec    ebx
  41278f:	mov    cl,0x5
  412791:	fld    DWORD PTR [ecx-0x7725e32d]
  412797:	mov    ds:0xe0616dc2,eax
  41279c:	and    dh,BYTE PTR [edi-0xf]
  41279f:	popa   
  4127a0:	mov    dl,BYTE PTR [ecx+0x3841aea3]
  4127a6:	aas    
  4127a7:	rol    BYTE PTR [ecx-0x3a],cl
  4127aa:	mov    dl,BYTE PTR [eax+0x3e]
  4127ad:	inc    ecx
  4127ae:	add    al,BYTE PTR [edx-0x477721]
  4127b4:	pop    es
  4127b5:	cmp    al,0x7
  4127b7:	pop    ecx
  4127b8:	mov    BYTE PTR [edx],ah
  4127ba:	fiadd  WORD PTR ds:[ecx+0x7eebda8d]
  4127c1:	adc    cl,BYTE PTR [edx-0x3d5c4c17]
  4127c7:	fwait
  4127c8:	push   0x25
  4127ca:	out    dx,eax
  4127cb:	stos   DWORD PTR es:[edi],eax
  4127cc:	ja     0x41284b
  4127ce:	das    
  4127cf:	cwde   
  4127d0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4127d2:	les    ecx,FWORD PTR [edx+0x70]
  4127d5:	or     DWORD PTR [eax],esi
  4127d7:	(bad)  
  4127d8:	mov    esi,0x219e5f6a
  4127dd:	or     al,0x58
  4127df:	dec    edx
  4127e0:	mov    dh,0xee
  4127e2:	mov    ecx,0xede8ce29
  4127e7:	sub    DWORD PTR [edi],0xffffffbe
  4127ea:	out    0xf,al
  4127ec:	iret   
  4127ed:	stc    
  4127ee:	inc    eax
  4127ef:	xor    al,BYTE PTR [edx+0x1108a15b]
  4127f5:	in     al,dx
  4127f6:	xor    DWORD PTR [ebx],esp
  4127f8:	hlt    
  4127f9:	stos   BYTE PTR es:[edi],al
  4127fa:	jae    0x4127a1
  4127fc:	shl    DWORD PTR [ebp+0x76],0x51
  412800:	mov    edx,ebx
  412802:	adc    DWORD PTR [edx-0x4bdb373e],esp
  412808:	jb     0x4127a1
  41280a:	scas   al,BYTE PTR es:[edi]
  41280b:	loopne 0x4127ee
  41280d:	sti    
  41280e:	jnp    0x4127fc
  412810:	push   ebx
  412811:	nop
  412812:	pop    ss
  412813:	loopne 0x4127d5
  412815:	cld    
  412816:	popa   
  412817:	in     al,0x7f
  412819:	xor    edx,DWORD PTR [esi]
  41281b:	mov    WORD PTR [ebx],es
  41281d:	jnp    0x41287f
  41281f:	push   esp
  412820:	sbb    DWORD PTR [ebx-0x64],ebp
  412823:	xchg   DWORD PTR [eax+0x3b9ee0cb],eax
  412829:	sub    BYTE PTR [esi+0x2fcb81ca],dh
  41282f:	or     DWORD PTR [ecx],eax
  412831:	inc    esp
  412832:	and    DWORD PTR [ecx],esi
  412834:	lods   eax,DWORD PTR cs:[esi]
  412836:	add    edx,edi
  412838:	dec    ecx
  412839:	iret   
  41283a:	out    0xb6,eax
  41283c:	int    0x2f
  41283e:	ja     0x412868
  412840:	clc    
  412841:	xor    ebx,DWORD PTR ds:0x1f73caa7
  412847:	inc    eax
  412848:	or     al,BYTE PTR [edi-0x344e1e13]
  41284e:	shl    DWORD PTR [ebx+0x3ffe9c3a],0xae
  412855:	mov    WORD PTR [edi-0x7e],ss
  412858:	es repz mov bl,0x4f
  41285c:	mov    edx,0xa58cb42d
  412861:	or     al,0x4b
  412863:	mov    al,ds:0xd5dc45fc
  412868:	pop    edi
  412869:	jnp    0x412838
  41286b:	jmp    0x2ac2:0xdbbce036
  412872:	jns    0x4128a1
  412874:	test   eax,0xad41c3ba
  412879:	mov    cl,0xad
  41287b:	popf   
  41287c:	adc    ebp,DWORD PTR [edx-0x1c]
  41287f:	cmovbe ebp,DWORD PTR [ecx-0x5c]
  412883:	jl     0x41283b
  412885:	jns    0x4128e0
  412887:	jne    0x41286c
  412889:	xchg   ebp,eax
  41288a:	inc    ecx
  41288b:	sub    bh,BYTE PTR [esi]
  41288d:	std    
  41288e:	in     eax,0x56
  412890:	pushf  
  412891:	(bad)  
  412892:	sahf   
  412893:	jmp    0x4128fc
  412895:	retf   
  412896:	mul    DWORD PTR [ebp+0x1a]
  412899:	mov    ss,WORD PTR [edi+esi*8]
  41289c:	add    DWORD PTR [edx-0x55d7132],esp
  4128a2:	in     al,0x7a
  4128a4:	jecxz  0x412826
  4128a6:	retf   0xdcfe
  4128a9:	std    
  4128aa:	popa   
  4128ab:	jns    0x4128ac
  4128ad:	jmp    0xee1e:0x7a3e4647
  4128b4:	ja     0x41290c
  4128b6:	jno    0x412936
  4128b8:	or     bh,BYTE PTR [ebx+0x55]
  4128bb:	mov    al,ds:0x5f0a047b
  4128c0:	imul   eax,DWORD PTR [ebx],0x71d858a6
  4128c6:	xor    bh,0x22
  4128c9:	imul   edi,DWORD PTR es:[edi+0x66],0x4f
  4128ce:	xor    esi,DWORD PTR ds:0x82d671b1
  4128d4:	mov    al,ds:0xb2b219e4
  4128d9:	leave  
  4128da:	fnstcw WORD PTR [edx]
  4128dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128dd:	cmp    BYTE PTR [eax+0xf4bdf03],al
  4128e3:	push   cs
  4128e4:	in     al,dx
  4128e5:	or     DWORD PTR [edi],esp
  4128e7:	xchg   esi,edx
  4128e9:	repnz repnz adc dl,ah
  4128ed:	rol    BYTE PTR [ebp-0x73],1
  4128f0:	aas    
  4128f1:	mov    ebx,0x67fee644
  4128f6:	adc    ebp,0xffffff8c
  4128f9:	mov    ah,0xda
  4128fb:	jge    0x4128f0
  4128fd:	hlt    
  4128fe:	loopne 0x412892
  412900:	mov    esp,0x41bb482b
  412905:	cld    
  412906:	jmp    0x4128ba
  412908:	mov    edi,0xa9f02a6
  41290d:	jecxz  0x41294f
  41290f:	mov    es,WORD PTR [edi]
  412911:	push   esp
  412912:	aaa    
  412913:	shl    dh,0x5a
  412916:	cmp    DWORD PTR [ebp+0x3],ebp
  412919:	fadd   DWORD PTR ds:0x33f47c3c
  41291f:	test   DWORD PTR [ebx-0x41],edi
  412922:	jmp    0xb665d0b9
  412927:	sub    BYTE PTR [ebx+eiz*4+0x67cfdfdd],ch
  41292e:	pop    ebp
  41292f:	outs   dx,BYTE PTR ds:[esi]
  412930:	dec    edx
  412931:	lods   eax,DWORD PTR ds:[esi]
  412932:	mov    edi,0xf9f65d5f
  412937:	fwait
  412938:	in     eax,dx
  412939:	retf   
  41293a:	inc    ebx
  41293b:	dec    esp
  41293c:	test   al,0x66
  41293e:	add    cl,BYTE PTR [esp+esi*2]
  412941:	cwde   
  412942:	pop    edx
  412943:	cmp    ecx,eax
  412945:	mov    edi,0x9b90155c
  41294a:	fistp  QWORD PTR [edi+0x19]
  41294d:	push   ebx
  41294e:	iret   
  41294f:	xor    eax,0xcd22fc40
  412954:	ds int 0x4a
  412957:	mov    ds:0xee11e110,al
  41295c:	jge    0x4129a7
  41295e:	pop    edx
  41295f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412960:	loope  0x41291e
  412962:	mov    esp,0x39e38e11
  412967:	pusha  
  412968:	pop    esi
  412969:	sbb    al,BYTE PTR [ebx+0x32]
  41296c:	xchg   DWORD PTR [edi],esp
  41296e:	mov    edx,0xbf1c05ba
  412973:	jl     0x41299a
  412975:	sbb    al,0x29
  412977:	loop   0x41290e
  412979:	or     al,0x34
  41297b:	cdq    
  41297c:	mov    ds:0x58cc7ea7,eax
  412981:	in     eax,dx
  412982:	leave  
  412983:	cmp    esi,eax
  412985:	ss call 0xef47:0xf043d369
  41298d:	call   DWORD PTR [ebp-0x1231a9e0]
  412993:	dec    eax
  412994:	shl    DWORD PTR [edx-0x2e],1
  412997:	stos   DWORD PTR es:[edi],eax
  412998:	aas    
  412999:	jle    0x412957
  41299b:	adc    eax,0x3e673649
  4129a0:	xchg   edi,eax
  4129a1:	loope  0x41294b
  4129a3:	jb     0x412a05
  4129a5:	sub    al,0xca
  4129a7:	dec    esp
  4129a8:	fisttp QWORD PTR [ecx]
  4129aa:	loope  0x4129c8
  4129ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ad:	mov    cl,0xe2
  4129af:	rcr    BYTE PTR [esi],cl
  4129b1:	sub    edx,DWORD PTR [edx+ebp*2-0x6e]
  4129b5:	cmp    eax,0xe3f9b914
  4129ba:	fxrstor [ecx-0x71]
  4129be:	ja     0x4129ae
  4129c0:	push   eax
  4129c1:	and    cl,BYTE PTR [edi-0x4e9912b6]
  4129c7:	std    
  4129c8:	mov    ebx,0xdd738345
  4129cd:	jbe    0x412974
  4129cf:	jb     0x412a23
  4129d1:	xor    eax,0x533d0634
  4129d6:	fs jg  0x4129e4
  4129d9:	jno    0x412a0d
  4129db:	pop    ebx
  4129dc:	and    eax,DWORD PTR [edx-0x23e346f8]
  4129e2:	mov    al,0x7e
  4129e4:	ror    BYTE PTR [ecx-0x41],1
  4129e7:	fnstcw WORD PTR [edi]
  4129e9:	sub    BYTE PTR [eax+0x32d83664],ah
  4129ef:	push   0xffffffec
  4129f1:	adc    ah,ah
  4129f3:	jp     0x4129d1
  4129f5:	cmp    al,0x2d
  4129f7:	add    DWORD PTR [esi+0x37],ebx
  4129fa:	mov    ?,ebp
  4129fc:	adc    ebx,0x22
  4129ff:	sub    al,0xeb
  412a01:	adc    esi,DWORD PTR [esp+ecx*8-0x71]
  412a05:	jns    0x4129f2
  412a07:	xchg   esp,eax
  412a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a09:	imul   edi,DWORD PTR [eax+0x15],0xffffffe2
  412a0d:	push   0xfffffffa
  412a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a10:	jb     0x412a8e
  412a12:	xchg   esp,eax
  412a13:	loope  0x4129ac
  412a15:	ins    DWORD PTR es:[edi],dx
  412a16:	sub    eax,0x448a3bbd
  412a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1c:	mov    dl,0x6b
  412a1e:	dec    ebp
  412a1f:	adc    DWORD PTR [edx+0x3b],esi
  412a22:	sbb    bl,BYTE PTR [ecx-0x33]
  412a25:	aas    
  412a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a27:	mov    ds:0x19205a02,eax
  412a2c:	sub    al,0x5b
  412a2e:	mov    ds:0xbae35ff3,al
  412a33:	clc    
  412a34:	push   eax
  412a35:	xchg   ecx,eax
  412a36:	sbb    eax,DWORD PTR [ebx+0x3b]
  412a39:	pop    es
  412a3a:	in     al,dx
  412a3b:	sti    
  412a3c:	jmp    0xc649:0xb4375d47
  412a43:	shr    ch,cl
  412a45:	mov    al,0xbe
  412a47:	aas    
  412a48:	cdq    
  412a49:	sbb    DWORD PTR [ebp+0x34],ebx
  412a4c:	mov    esp,0x244bd1aa
  412a51:	inc    ebp
  412a52:	pop    esi
  412a53:	xor    dh,BYTE PTR [edx+0x1c536644]
  412a59:	jbe    0x412a8b
  412a5b:	xchg   ebx,eax
  412a5c:	mov    BYTE PTR [edi],dh
  412a5e:	into   
  412a5f:	out    0x81,eax
  412a61:	sbb    DWORD PTR [edi+0x53bc42da],esi
  412a67:	push   eax
  412a68:	hlt    
  412a69:	in     al,dx
  412a6a:	dec    ebp
  412a6b:	pop    ds
  412a6c:	and    eax,0xa7462cce
  412a71:	jecxz  0x412a47
  412a73:	pop    ecx
  412a74:	cmovs  edi,DWORD PTR [ebx-0x72fdbd7c]
  412a7b:	repnz out dx,eax
  412a7d:	std    
  412a7e:	dec    dl
  412a80:	xchg   edx,eax
  412a81:	mov    ebp,0x1cd7b080
  412a86:	popf   
  412a87:	ins    DWORD PTR es:[edi],dx
  412a88:	mov    bh,0xad
  412a8a:	xchg   esp,eax
  412a8b:	push   0xfb34becd
  412a90:	stos   DWORD PTR es:[edi],eax
  412a91:	aas    
  412a92:	out    0x29,al
  412a94:	inc    ecx
  412a95:	ss sub eax,0xdcb15c72
  412a9b:	shl    DWORD PTR [ecx+0x5e2fb4ea],0x9e
  412aa2:	stc    
  412aa3:	fadd   DWORD PTR [esi+0x35]
  412aa6:	adc    eax,edi
  412aa8:	ss icebp 
  412aaa:	mov    bh,0xf
  412aac:	call   0x8371:0x725b8f9a
  412ab3:	(bad)  
  412ab4:	fist   WORD PTR [edx]
  412ab6:	retf   
  412ab7:	test   al,0xcf
  412ab9:	lods   al,BYTE PTR ds:[esi]
  412aba:	(bad)  
  412abb:	mov    esi,0x5a915340
  412ac0:	dec    esp
  412ac1:	mov    eax,?
  412ac3:	inc    eax
  412ac4:	and    BYTE PTR [edx-0x5371ee86],dl
  412aca:	ret    
  412acb:	and    BYTE PTR [ebx+0x64],bl
  412ace:	push   eax
  412acf:	sahf   
  412ad0:	xchg   edi,eax
  412ad1:	or     ebx,ecx
  412ad3:	pop    ecx
  412ad4:	mov    esp,DWORD PTR [esi+ebx*4-0x61]
  412ad8:	stos   DWORD PTR es:[edi],eax
  412ad9:	xchg   edi,eax
  412ada:	cdq    
  412adb:	dec    eax
  412adc:	(bad)  
  412add:	imul   esp,DWORD PTR [edi],0x672ad0dd
  412ae3:	add    esi,DWORD PTR [ecx]
  412ae5:	ret    
  412ae6:	mov    eax,0x5fbbcf37
  412aeb:	lods   al,BYTE PTR ds:[esi]
  412aec:	sub    al,0xb9
  412aee:	mov    dh,0xd7
  412af0:	test   al,0xe3
  412af2:	xchg   ebp,eax
  412af3:	mov    bl,0x50
  412af5:	(bad)  
  412af6:	(bad)  
  412af7:	jecxz  0x412b50
  412af9:	jb     0x412af4
  412afb:	dec    ebx
  412afc:	dec    esi
  412afd:	je     0x412a95
  412aff:	adc    al,BYTE PTR [ebp+0x62]
  412b02:	add    ch,BYTE PTR [esi]
  412b04:	adc    al,0xca
  412b06:	sti    
  412b07:	sub    al,0x63
  412b09:	fwait
  412b0a:	dec    edx
  412b0b:	ins    BYTE PTR es:[edi],dx
  412b0c:	or     edi,DWORD PTR [ebx+0x55]
  412b0f:	dec    ecx
  412b10:	gs stos DWORD PTR es:[edi],eax
  412b12:	out    dx,eax
  412b13:	ret    
  412b14:	xor    esp,edx
  412b16:	and    ah,cl
  412b18:	shl    BYTE PTR [ebp+ebx*4-0xe],1
  412b1c:	mov    esp,0xb822117c
  412b21:	push   esp
  412b22:	retf   
  412b23:	sti    
  412b24:	push   edi
  412b25:	in     al,dx
  412b26:	sahf   
  412b27:	lahf   
  412b28:	jae    0x412b1b
  412b2a:	and    BYTE PTR [ebx],ch
  412b2c:	and    bh,BYTE PTR [ebp+esi*1-0x2be2a157]
  412b33:	pop    ebx
  412b34:	or     bl,ch
  412b36:	mov    ds:0xe0eb8868,al
  412b3b:	adc    DWORD PTR [ebx-0x37857237],eax
  412b41:	add    al,0xd7
  412b43:	sbb    esp,0xea9a653
  412b49:	or     ch,BYTE PTR [edi]
  412b4b:	ret    
  412b4c:	sub    DWORD PTR [ebp-0x3ba116bd],ebp
  412b52:	popa   
  412b53:	sti    
  412b54:	xchg   edx,eax
  412b55:	and    cl,BYTE PTR [ecx+0x67]
  412b58:	pushf  
  412b59:	dec    ecx
  412b5a:	or     BYTE PTR [edx+0x1953b0c6],ch
  412b60:	push   0x61
  412b62:	std    
  412b63:	aas    
  412b64:	scas   al,BYTE PTR es:[edi]
  412b65:	dec    esi
  412b66:	sti    
  412b67:	daa    
  412b68:	imul   esp,DWORD PTR [ebp-0xddc2902],0x7a
  412b6f:	shr    DWORD PTR [ecx+eax*8],0xef
  412b73:	jge    0x412b75
  412b75:	imul   ecx,eax,0xffffffe9
  412b78:	pop    ebx
  412b79:	daa    
  412b7a:	xchg   ecx,eax
  412b7b:	fiadd  WORD PTR [ebp-0x2130e68d]
  412b81:	je     0x412b0c
  412b83:	scas   al,BYTE PTR es:[edi]
  412b84:	loopne 0x412b83
  412b86:	sub    DWORD PTR [esi-0x78],ebx
  412b89:	or     al,0x40
  412b8b:	mov    edi,0x4dfe7774
  412b90:	inc    ebp
  412b91:	(bad)  
  412b92:	in     eax,dx
  412b93:	pop    edx
  412b94:	pop    ebp
  412b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b96:	(bad)  
  412b97:	in     al,0xf0
  412b99:	and    esp,DWORD PTR [ebx+0x7]
  412b9c:	cwde   
  412b9d:	outs   dx,BYTE PTR ds:[esi]
  412b9e:	in     eax,0x3d
  412ba0:	(bad)  
  412ba1:	in     eax,dx
  412ba2:	call   0xa5b885df
  412ba7:	ins    BYTE PTR es:[edi],dx
  412ba8:	xchg   esi,eax
  412ba9:	push   ss
  412baa:	pop    ebp
  412bab:	lods   al,BYTE PTR ds:[esi]
  412bac:	or     al,0x49
  412bae:	mov    ds:0xd32afbad,eax
  412bb3:	inc    eax
  412bb4:	jae    0x412c28
  412bb6:	fs jb  0x412b7e
  412bb9:	cs ins BYTE PTR es:[di],dx
  412bbc:	jo     0x412be9
  412bbe:	aaa    
  412bbf:	mov    ebp,0x33ad7fb2
  412bc4:	inc    edx
  412bc5:	loope  0x412b5d
  412bc7:	mov    eax,0x2e36ab3f
  412bcc:	leave  
  412bcd:	xor    bh,bl
  412bcf:	sub    BYTE PTR [edi-0x51],al
  412bd2:	sbb    bl,bl
  412bd4:	mov    edi,0x52596b0b
  412bd9:	jb     0x412bbb
  412bdb:	sbb    BYTE PTR [ecx+0x49615243],dh
  412be1:	mov    al,ds:0xaac14e5e
  412be6:	leave  
  412be7:	or     BYTE PTR [eax+0x1c],bl
  412bea:	push   ebx
  412beb:	jno    0x412c21
  412bed:	and    bh,BYTE PTR ds:0x54545aec
  412bf3:	xlat   BYTE PTR ds:[ebx]
  412bf4:	iret   
  412bf5:	xchg   DWORD PTR [esi],esp
  412bf7:	stos   DWORD PTR es:[edi],eax
  412bf8:	ja     0x412b91
  412bfa:	test   DWORD PTR [ecx],ecx
  412bfc:	loop   0x412bc0
  412bfe:	mov    ch,0x97
  412c00:	push   edx
  412c01:	sbb    DWORD PTR [esi+0x69],esi
  412c04:	xor    bl,0x7f
  412c07:	lds    ebp,FWORD PTR [edi]
  412c09:	jp     0x412bac
  412c0b:	icebp  
  412c0c:	xor    dl,BYTE PTR [edi+0x8f43f51]
  412c12:	fs add ecx,ebx
  412c15:	or     DWORD PTR [ebx],edi
  412c17:	or     DWORD PTR ds:0x7db903c6,0xffffffd5
  412c1e:	sahf   
  412c1f:	push   ss
  412c20:	mov    bl,0x9d
  412c22:	sbb    al,dl
  412c24:	cmp    BYTE PTR [ebp+0x4064964],ah
  412c2a:	push   eax
  412c2b:	lea    esi,[ecx-0x4d]
  412c2e:	mov    DWORD PTR [edx],edx
  412c30:	popa   
  412c31:	stos   BYTE PTR es:[edi],al
  412c32:	adc    DWORD PTR fs:[eax],esp
  412c35:	adc    DWORD PTR [ebx-0xf887864],edi
  412c3b:	xor    al,0xc6
  412c3d:	xor    DWORD PTR [eax-0x14f3054d],0xcdd86a71
  412c47:	stc    
  412c48:	outs   dx,BYTE PTR ds:[si]
  412c4a:	add    DWORD PTR [edx],edx
  412c4c:	inc    edx
  412c4d:	sahf   
  412c4e:	sub    DWORD PTR [edi],0x8260b7a1
  412c54:	dec    eax
  412c55:	add    eax,0x3b205e16
  412c5a:	jmp    0x55fcd51e
  412c5f:	adc    DWORD PTR [edi],eax
  412c61:	jmp    0x412c40
  412c63:	lods   al,BYTE PTR ds:[esi]
  412c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c65:	add    al,0xf5
  412c67:	and    ebp,DWORD PTR [ecx+0x0]
  412c6a:	fs mov ecx,0xb097bd0d
  412c70:	ja     0x412c8c
  412c72:	sub    al,0x99
  412c74:	pop    edx
  412c75:	aad    0x94
  412c77:	mov    al,ds:0xc6467276
  412c7c:	lock cmp ch,BYTE PTR [edi-0x4e]
  412c80:	mov    esp,0x28bae7d6
  412c85:	arpl   sp,si
  412c87:	ins    BYTE PTR es:[edi],dx
  412c88:	enter  0xc80,0x21
  412c8c:	mov    edx,0x2c52785e
  412c91:	rol    BYTE PTR [edi-0x4902a012],cl
  412c97:	mov    bl,0x3b
  412c99:	push   DWORD PTR [ecx+0x78]
  412c9c:	inc    esi
  412c9d:	jnp    0x412cb4
  412c9f:	jmp    0x2d26:0x7f4c6b79
  412ca6:	sub    dl,BYTE PTR [ebx-0x5aab62d3]
  412cac:	not    DWORD PTR [ebx]
  412cae:	pop    ds
  412caf:	not    BYTE PTR [ecx+0x6a]
  412cb2:	or     esp,DWORD PTR [ebx-0x41]
  412cb5:	imul   ecx,DWORD PTR [edx+0x8],0x3d
  412cb9:	xchg   esp,eax
  412cba:	or     BYTE PTR [ecx],dh
  412cbc:	fst    st(4)
  412cbe:	rcr    eax,0xed
  412cc1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc3:	inc    edi
  412cc4:	in     al,0x3f
  412cc6:	stc    
  412cc7:	cmp    al,0xe5
  412cc9:	pop    esp
  412cca:	cmp    al,BYTE PTR [ecx]
  412ccc:	cs and eax,0x2f602126
  412cd2:	call   0x48955a
  412cd7:	iret   
  412cd8:	fmul   QWORD PTR [edi+edx*1]
  412cdb:	mov    ebp,DWORD PTR [edi-0x621dd18e]
  412ce1:	add    DWORD PTR [esi+0x2d],eax
  412ce4:	add    BYTE PTR [bp+si],0xf4
  412ce8:	adc    DWORD PTR [ecx],eax
  412cea:	lods   al,BYTE PTR ds:[esi]
  412ceb:	(bad)  
  412cec:	out    dx,eax
  412ced:	push   esi
  412cee:	cpuid  
  412cf0:	xchg   DWORD PTR [eax+0x3f45c4fa],esp
  412cf6:	and    BYTE PTR [esi],0x3a
  412cf9:	inc    ebx
  412cfa:	mov    bh,BYTE PTR [esi]
  412cfc:	lods   eax,DWORD PTR ds:[esi]
  412cfd:	mov    dh,BYTE PTR [edx]
  412cff:	js     0x412cc5
  412d01:	aaa    
  412d02:	es mov edi,0xe7666214
  412d08:	cmp    ch,dh
  412d0a:	pushf  
  412d0b:	rcl    DWORD PTR [edi+0x36af61b0],0x57
  412d12:	add    DWORD PTR [ebx-0x5194268a],ebp
  412d18:	jle    0x412cad
  412d1a:	aad    0x16
  412d1c:	pop    esp
  412d1d:	(bad)  
  412d1e:	iret   
  412d1f:	jg     0x412cee
  412d21:	scas   eax,DWORD PTR es:[edi]
  412d22:	xor    ch,ch
  412d24:	xchg   edi,eax
  412d25:	dec    edx
  412d26:	xor    BYTE PTR [ebx],bh
  412d28:	inc    esi
  412d2a:	cwde   
  412d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d2c:	(bad)  
  412d2d:	jbe    0x412d92
  412d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d30:	push   edx
  412d31:	push   cs
  412d32:	mov    esi,?
  412d34:	sub    bh,dl
  412d36:	and    ecx,DWORD PTR [esi-0x722b21dc]
  412d3c:	or     al,0x82
  412d3e:	shr    BYTE PTR [ecx],0xac
  412d41:	in     al,dx
  412d42:	pop    es
  412d43:	push   esi
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	dec    ebx
  412d46:	pop    edi
  412d47:	dec    edi
  412d48:	dec    ebp
  412d49:	sbb    eax,0x2cc0bce9
  412d4e:	mov    cl,0xd7
  412d50:	sbb    DWORD PTR [edi],esi
  412d52:	push   esi
  412d53:	inc    eax
  412d54:	push   esp
  412d55:	ret    0x341a
  412d58:	pop    eax
  412d59:	sbb    al,0x36
  412d5b:	sbb    eax,0x6cf4e9f8
  412d60:	sub    bl,BYTE PTR [ebx]
  412d62:	xchg   ecx,eax
  412d63:	pop    ecx
  412d64:	mov    dh,0x86
  412d66:	arpl   WORD PTR [ebx-0x6936247c],si
  412d6c:	icebp  
  412d6d:	mov    bl,0x0
  412d6f:	mov    cl,0x9c
  412d71:	(bad)  
  412d72:	bound  edi,QWORD PTR [esi+0x59]
  412d75:	into   
  412d76:	adc    dh,al
  412d78:	test   DWORD PTR [esi-0x6a684b82],eax
  412d7e:	or     ah,ch
  412d80:	ret    
  412d81:	rcr    BYTE PTR [ecx],cl
  412d83:	dec    ecx
  412d84:	mov    bh,0xb9
  412d86:	push   edi
  412d87:	sub    al,0xd8
  412d89:	data16 mov ah,0xa4
  412d8c:	out    0x80,eax
  412d8e:	xchg   esi,eax
  412d8f:	xor    eax,0x2a16509c
  412d94:	adc    bl,BYTE PTR [ebx]
  412d96:	jmp    0x8cbb:0xf2e70e47
  412d9d:	inc    ecx
  412d9e:	out    dx,al
  412d9f:	inc    edi
  412da0:	adc    edx,DWORD PTR [edx]
  412da2:	adc    esp,DWORD PTR [ebx+edi*4+0x42]
  412da6:	adc    DWORD PTR [esi+0x1f],ebp
  412da9:	(bad)  
  412daa:	ss nop
  412dac:	call   0xcbdab544
  412db1:	or     eax,0xda54ec04
  412db6:	aas    
  412db7:	dec    esi
  412db8:	or     ah,BYTE PTR [ebx+0x685f12f4]
  412dbe:	sar    DWORD PTR [edx-0x78],cl
  412dc1:	int    0xe3
  412dc3:	(bad)  
  412dc6:	in     al,dx
  412dc7:	jmp    0x412d54
  412dc9:	lahf   
  412dca:	sub    DWORD PTR [ecx+0x1b1e22d6],ebx
  412dd0:	leave  
  412dd1:	stos   DWORD PTR es:[edi],eax
  412dd2:	in     eax,dx
  412dd3:	test   BYTE PTR [eax+0x2],bl
  412dd6:	mov    ah,0x5a
  412dd8:	imul   eax
  412dda:	dec    ebx
  412ddb:	int3   
  412ddc:	fwait
  412ddd:	mov    dl,BYTE PTR [edi+0x2d]
  412de0:	sbb    al,0x96
  412de2:	aaa    
  412de3:	xchg   esp,eax
  412de4:	fisubr DWORD PTR [edx]
  412de6:	leave  
  412de7:	pusha  
  412de8:	jmp    0xcfcaf2d3
  412ded:	fcmovnbe st,st(6)
  412def:	out    0xe6,al
  412df1:	add    DWORD PTR [ebp-0x230f3c79],eax
  412df7:	xor    al,BYTE PTR [ecx]
  412df9:	mov    bl,0x97
  412dfb:	(bad)  
  412dfc:	arpl   WORD PTR [edi],dx
  412dfe:	or     dh,BYTE PTR [esi+0x74]
  412e01:	inc    eax
  412e02:	mov    di,0x5701
  412e06:	xchg   esp,eax
  412e07:	mov    ebp,0x546a31b7
  412e0c:	das    
  412e0d:	inc    esi
  412e0e:	(bad)  
  412e0f:	mov    ebx,0xd06a5920
  412e14:	push   ebx
  412e15:	bound  edi,QWORD PTR [ecx]
  412e17:	into   
  412e18:	cdq    
  412e19:	stos   DWORD PTR es:[edi],eax
  412e1a:	jne    0x412e52
  412e1c:	rol    DWORD PTR [esi],0xc0
  412e1f:	hlt    
  412e20:	mov    dh,0x2e
  412e22:	inc    esp
  412e23:	inc    esp
  412e24:	mov    eax,0xe71e7cc
  412e29:	xor    DWORD PTR [ebp+0x57fdcae0],esi
  412e2f:	imul   BYTE PTR [edi+0x462308f]
  412e35:	out    0x6e,al
  412e37:	jecxz  0x412dce
  412e39:	jge    0x412e2c
  412e3b:	bound  ecx,QWORD PTR [ebx+0x246263e]
  412e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e42:	mov    BYTE PTR [edi],dl
  412e44:	into   
  412e45:	fwait
  412e46:	shl    bh,1
  412e48:	pop    esp
  412e49:	sahf   
  412e4a:	pusha  
  412e4b:	mov    BYTE PTR ds:0xa25a0b03,cl
  412e51:	(bad)  
  412e52:	xchg   ecx,eax
  412e53:	bound  ebp,QWORD PTR [edi]
  412e55:	aad    0x74
  412e57:	add    al,0xd9
  412e59:	not    DWORD PTR [edx+0x1064d21a]
  412e5f:	mov    edx,0x4949ad1d
  412e64:	das    
  412e65:	mov    al,ds:0x4eec228e
  412e6a:	js     0x412e50
  412e6c:	mov    eax,0xac6c1a43
  412e71:	mov    ds:0xd1730fe4,eax
  412e76:	fnstenv [ecx-0x3b]
  412e79:	icebp  
  412e7a:	mov    bl,0xc2
  412e7c:	test   DWORD PTR [esi],edi
  412e7e:	xchg   esi,eax
  412e7f:	out    0x82,al
  412e81:	std    
  412e82:	gs aas 
  412e84:	or     DWORD PTR [ebx*8-0x50b8bb12],0x5f
  412e8c:	xchg   ebp,eax
  412e8d:	shl    DWORD PTR ds:0xf636d2c1,0x89
  412e94:	sbb    ebp,DWORD PTR [esp+eax*1+0x66]
  412e98:	and    BYTE PTR [esi-0x39],0xe
  412e9c:	jmp    0x59b2:0xe36ce15c
  412ea3:	aaa    
  412ea4:	mov    ebx,0x62f7f88a
  412ea9:	inc    esp
  412eaa:	inc    edx
  412eab:	sbb    ebx,DWORD PTR [esi-0x499abac1]
  412eb1:	sub    al,0xa9
  412eb3:	imul   ecx,DWORD PTR [esi],0x49
  412eb6:	sar    BYTE PTR [edx-0x62],0x83
  412eba:	into   
  412ebb:	shr    DWORD PTR [ebx+0x44],cl
  412ebe:	(bad)  
  412ebf:	fidiv  DWORD PTR [ecx]
  412ec1:	sbb    esp,DWORD PTR [ebx]
  412ec3:	aas    
  412ec4:	test   BYTE PTR [edi],cl
  412ec6:	pushf  
  412ec7:	rcr    BYTE PTR [ecx+0x5dd219de],1
  412ecd:	xchg   esi,eax
  412ece:	dec    esi
  412ecf:	(bad)  
  412ed0:	xlat   BYTE PTR ds:[ebx]
  412ed1:	jmp    0x154230e1
  412ed6:	or     cl,BYTE PTR [edx+ebp*2]
  412ed9:	mov    bh,0xff
  412edb:	mov    ecx,0x200b0229
  412ee0:	mov    cl,0x46
  412ee2:	xchg   edi,eax
  412ee3:	pop    ss
  412ee4:	fisub  DWORD PTR ds:[eax-0x80]
  412ee8:	test   eax,0xdbd8d19f
  412eed:	push   eax
  412eee:	and    eax,0x70832750
  412ef3:	clc    
  412ef4:	jle    0x412f1e
  412ef6:	retf   0x7574
  412ef9:	inc    ebx
  412efa:	loope  0x412eaa
  412efc:	cmp    BYTE PTR [edi-0x64],ch
  412eff:	or     ah,bl
  412f01:	push   cs
  412f02:	fisttp WORD PTR [edi+0x13]
  412f05:	loop   0x412f52
  412f07:	push   esp
  412f08:	(bad)  
  412f09:	aam    0x1c
  412f0b:	stc    
  412f0c:	jecxz  0x412f15
  412f0e:	xchg   ebx,eax
  412f0f:	(bad)  
  412f10:	mov    ?,ebx
  412f12:	fsub   st(2),st
  412f14:	shl    BYTE PTR [edi+0x35b3cd73],cl
  412f1a:	(bad)  
  412f1c:	mov    ecx,0x58f1c8de
  412f21:	or     al,0xec
  412f23:	pushf  
  412f24:	xchg   edi,eax
  412f25:	push   esp
  412f26:	xchg   ebp,eax
  412f27:	add    ebx,ebx
  412f29:	stos   BYTE PTR es:[edi],al
  412f2a:	or     ebp,eax
  412f2c:	push   0xed7b6a
  412f31:	out    0x63,eax
  412f33:	loop   0x412f97
  412f35:	icebp  
  412f36:	or     eax,0x792f204a
  412f3b:	mov    ds,WORD PTR [ebx+eiz*4]
  412f3e:	dec    ecx
  412f3f:	add    cl,cl
  412f41:	cwde   
  412f42:	add    al,0x7d
  412f44:	jmp    0x7ce96800
  412f49:	mov    edx,eax
  412f4b:	pushf  
  412f4c:	lock hlt 
  412f4e:	push   ebp
  412f4f:	jnp    0x412ed7
  412f51:	xor    al,0x5c
  412f53:	mov    esi,0x10a0e003
  412f58:	imul   ebp,DWORD PTR [edi+0x42],0xffffffe3
  412f5c:	aad    0x3d
  412f5e:	es icebp 
  412f60:	cwde   
  412f61:	jle    0x412f30
  412f63:	popa   
  412f64:	xor    ebp,DWORD PTR [ebx]
  412f66:	xlat   BYTE PTR ds:[ebx]
  412f67:	add    al,0xb8
  412f69:	xor    al,0xfe
  412f6b:	jmp    0x412eee
  412f6d:	mov    edx,0xd578370f
  412f72:	nop
  412f73:	or     cl,0xe4
  412f76:	fadd   st(1),st
  412f78:	add    al,0x63
  412f7a:	mov    ah,0x34
  412f7c:	and    BYTE PTR [ebx-0x400b3694],dh
  412f82:	adc    cl,bl
  412f84:	popa   
  412f85:	mov    eax,ds:0xa0438244
  412f8a:	add    cl,BYTE PTR [eax]
  412f8c:	dec    ecx
  412f8d:	in     eax,dx
  412f8e:	push   es
  412f8f:	aas    
  412f90:	(bad)  
  412f92:	xchg   BYTE PTR [ebp-0x5699301a],dl
  412f98:	(bad)  
  412f99:	std    
  412f9a:	dec    esi
  412f9b:	mov    cl,0x64
  412f9d:	jnp    0x41301b
  412f9f:	scas   al,BYTE PTR es:[edi]
  412fa0:	ds sub eax,0x388d0df3
  412fa6:	lods   al,BYTE PTR ds:[esi]
  412fa7:	xchg   BYTE PTR [edx],ch
  412fa9:	stos   DWORD PTR es:[edi],eax
  412faa:	jle    0x412f4f
  412fac:	sbb    al,0x34
  412fae:	sar    BYTE PTR [ebx-0x180642c6],1
  412fb4:	inc    ecx
  412fb5:	jg     0x412fee
  412fb7:	ja     0x412f9e
  412fb9:	mov    esp,0x3fa8272
  412fbe:	sub    al,0x54
  412fc0:	dec    ecx
  412fc1:	std    
  412fc2:	fdiv   DWORD PTR es:[ebp-0x72abb75d]
  412fca:	inc    edx
  412fcb:	mov    eax,ds:0xd2275f48
  412fd0:	push   es
  412fd1:	add    ebp,DWORD PTR [eax]
  412fd3:	push   0x79
  412fd5:	dec    eax
  412fd6:	pop    edx
  412fd7:	push   ebp
  412fd8:	cmp    eax,0xcc0f7738
  412fdd:	into   
  412fde:	cs jmp 0x41300d
  412fe1:	mov    ecx,0x78cbfe2a
  412fe6:	leave  
  412fe7:	add    BYTE PTR [edx+edx*1-0x58],ah
  412feb:	cmp    eax,DWORD PTR [ecx+0x6cf6ee5]
  412ff1:	mov    dl,BYTE PTR [edi+edi*8-0xd2b16cf]
  412ff8:	cmc    
  412ff9:	(bad)  
  412ffa:	cmp    cl,bh
  412ffc:	dec    edi
  412ffd:	lahf   
  412ffe:	cmp    eax,0xe98a066d
  413003:	es scas eax,DWORD PTR es:[edi]
  413005:	push   esi
  413006:	imul   edi,DWORD PTR gs:[eax],0xffffffbe
  41300a:	sub    al,0x9f
  41300c:	cs dec eax
  41300e:	and    BYTE PTR [ebp+0x758d8ab9],0xa8
  413015:	adc    al,ch
  413017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413018:	leave  
  413019:	add    DWORD PTR [esi+0x5ce269a3],esp
  41301f:	xchg   ecx,eax
  413020:	pop    ebx
  413021:	sar    ebx,cl
  413023:	add    al,0xc4
  413025:	push   ecx
  413026:	pusha  
  413027:	jmp    0x6077627
  41302c:	adc    ebp,edx
  41302e:	in     eax,0x54
  413030:	and    DWORD PTR [eax+0x24],ebp
  413033:	add    DWORD PTR [edi],esp
  413035:	fmul   DWORD PTR [edx+0x44]
  413038:	lds    ecx,FWORD PTR [ecx-0x60]
  41303b:	pop    eax
  41303c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41303d:	jae    0x412fc0
  41303f:	and    al,0x13
  413041:	push   ebx
  413042:	dec    edi
  413043:	mov    ?,WORD PTR [ebp-0x2aa27be]
  413049:	and    DWORD PTR [ebx-0x2e],ecx
  41304c:	lds    edi,FWORD PTR [eax-0x1c]
  41304f:	lods   al,BYTE PTR ds:[esi]
  413050:	out    dx,eax
  413051:	popf   
  413052:	fild   QWORD PTR [ebx]
  413054:	push   0xffffff90
  413056:	cdq    
  413057:	mov    al,0x63
  413059:	and    eax,0xe431bab1
  41305e:	xor    dl,BYTE PTR [edx-0x57]
  413061:	imul   ebp,DWORD PTR [eax+0x6b37c62],0x53a35f1f
  41306b:	mov    esp,0x986cce47
  413070:	push   edi
  413071:	cmp    BYTE PTR [ebp*2-0x57e66091],0xc2
  413079:	imul   esp,DWORD PTR [ecx-0x32],0x7386342f
  413080:	lahf   
  413081:	add    BYTE PTR [edx+0x8],bl
  413084:	adc    DWORD PTR [esi-0x2f549602],0x43
  41308b:	jl     0x413049
  41308d:	data16 sbb dl,ah
  413090:	daa    
  413091:	mov    ecx,0xc30025eb
  413096:	aaa    
  413097:	jbe    0x4130c0
  413099:	fadd   DWORD PTR [ebp+0x1f]
  41309c:	push   ds
  41309d:	cmp    cl,BYTE PTR [ebx-0x39]
  4130a0:	add    ch,BYTE PTR [edi-0x71]
  4130a3:	fstp   st(6)
  4130a5:	shl    BYTE PTR [ebx+0xd],cl
  4130a8:	not    ah
  4130aa:	dec    eax
  4130ab:	dec    eax
  4130ac:	push   eax
  4130ad:	push   0x57
  4130af:	xchg   dl,al
  4130b1:	add    al,BYTE PTR [esi-0x57]
  4130b4:	mov    cl,0x90
  4130b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130b7:	repnz pop ecx
  4130b9:	cli    
  4130ba:	into   
  4130bb:	lods   al,BYTE PTR ds:[esi]
  4130bc:	push   ds
  4130bd:	add    ebx,0x6
  4130c0:	stos   BYTE PTR es:[edi],al
  4130c1:	adc    dh,BYTE PTR [ecx]
  4130c3:	lock xchg esi,eax
  4130c5:	inc    edi
  4130c6:	mov    DWORD PTR [ebx],0xcbe97c20
  4130cc:	jo     0x4130dd
  4130ce:	pop    ebx
  4130cf:	inc    ebp
  4130d0:	jmp    0xf193c470
  4130d5:	pop    ds
  4130d6:	in     eax,0x20
  4130d8:	push   eax
  4130d9:	pusha  
  4130da:	hlt    
  4130db:	mov    ebp,0xddb64a0f
  4130e0:	mov    bh,0xb7
  4130e2:	jae    0x41313f
  4130e4:	test   al,0x71
  4130e6:	push   0xda40561c
  4130eb:	pop    ecx
  4130ec:	cwde   
  4130ed:	fs sahf 
  4130ef:	and    BYTE PTR [eax],0xe5
  4130f2:	enter  0xe1d5,0xec
  4130f6:	jecxz  0x41310b
  4130f8:	mov    ds:0x310ecf57,eax
  4130fd:	inc    BYTE PTR [edi-0x2d]
  413100:	xor    BYTE PTR gs:[edi+0x41f6dbbb],al
  413107:	sub    ebx,ebp
  413109:	inc    ebx
  41310a:	fist   WORD PTR [ecx+0x1f30170e]
  413110:	mov    eax,0x5c86bc94
  413115:	mov    ds:0x9e27263a,eax
  41311a:	fadd   DWORD PTR [ebp+0xc450c92]
  413120:	adc    al,0x7d
  413122:	cmc    
  413123:	repz loopne 0x4130bd
  413126:	ds out 0x9c,al
  413129:	gs pusha 
  41312b:	and    bh,bl
  41312d:	mov    edx,0x4643ddc6
  413132:	popa   
  413133:	idiv   DWORD PTR [esi-0x66]
  413136:	push   0x985a5315
  41313b:	das    
  41313c:	fwait
  41313d:	mov    ds:0x4222fe75,eax
  413142:	jp     0x413164
  413144:	push   ebp
  413145:	inc    ecx
  413146:	xchg   ecx,eax
  413147:	imul   DWORD PTR [edi+0x223c6d4b]
  41314d:	sbb    ebp,DWORD PTR [edx]
  41314f:	mov    ebp,0x7b3289fa
  413154:	rcr    DWORD PTR [ecx+0x35aa8801],1
  41315a:	add    BYTE PTR [eax],dh
  41315c:	aad    0xb8
  41315e:	push   cs
  41315f:	sub    eax,0x2ecd4583
  413164:	dec    esp
  413165:	aam    0x3c
  413167:	xor    bh,BYTE PTR [esi]
  413169:	sbb    edx,ebp
  41316b:	frstor [edi-0x54]
  41316e:	jns    0x4131af
  413170:	cmp    al,0xf2
  413172:	xor    BYTE PTR [ebx-0x295443b],ch
  413178:	out    dx,al
  413179:	jecxz  0x413143
  41317b:	jp     0x413184
  41317d:	xor    ebp,DWORD PTR [edx-0x582acf8f]
  413183:	xchg   ebp,eax
  413184:	lock mov ss,edi
  413187:	enter  0xd6e3,0xb4
  41318b:	add    eax,0x81a4ded9
  413190:	aam    0xb8
  413192:	add    eax,0x44d5dbdf
  413197:	inc    edx
  413198:	ja     0x413193
  41319a:	push   ebx
  41319b:	lds    eax,FWORD PTR [edi]
  41319d:	pop    esi
  41319e:	cmc    
  41319f:	fimul  WORD PTR [edi]
  4131a1:	mov    ds:0xf1d37f57,al
  4131a6:	imul   ecx,DWORD PTR [ebx+0x12],0x21
  4131aa:	jp     0x4131ea
  4131ac:	daa    
  4131ad:	stos   DWORD PTR es:[edi],eax
  4131ae:	add    DWORD PTR [ebx-0x73],0xffffffc5
  4131b2:	cmp    eax,esp
  4131b4:	sub    BYTE PTR ds:0x73416494,0xe9
  4131bb:	jmp    0x9028:0x7c55ea85
  4131c2:	xchg   BYTE PTR [ebx-0x58872db1],dh
  4131c8:	mov    ah,0x92
  4131ca:	jae    0x4131f7
  4131cc:	xor    ebx,edi
  4131ce:	test   DWORD PTR [ebx-0x35],edx
  4131d1:	es xchg esp,eax
  4131d3:	imul   esi,DWORD PTR [ebx+0x29],0xe3bd1416
  4131da:	leave  
  4131db:	std    
  4131dc:	pop    esi
  4131dd:	sbb    bh,BYTE PTR [eax-0x52]
  4131e0:	imul   ecx,DWORD PTR [ecx],0x59a84764
  4131e6:	mov    BYTE PTR [ebx-0x4f634ee8],ch
  4131ec:	and    eax,0x8359cbbf
  4131f1:	inc    esi
  4131f2:	je     0x413272
  4131f4:	and    eax,0x560ad2f5
  4131f9:	fsub   DWORD PTR [edi]
  4131fb:	mov    esp,0xc8294fe
  413200:	sub    bh,BYTE PTR [ebx]
  413202:	mov    BYTE PTR [edx+eax*1-0x2c08750f],bl
  413209:	fcomp  st(0)
  41320b:	dec    ebp
  41320c:	cmp    al,0x31
  41320e:	enter  0x5098,0x63
  413212:	xor    eax,0x5a4c86f2
  413217:	mov    bh,0x48
  413219:	inc    ebp
  41321a:	lods   al,BYTE PTR ds:[esi]
  41321b:	leave  
  41321c:	mov    ebx,ecx
  41321e:	not    ah
  413220:	adc    ebp,esi
  413222:	call   0x6c19:0x676ffd4f
  413229:	or     DWORD PTR [esi+0x6e47807e],0xd1f1dcdc
  413233:	xchg   ebp,eax
  413234:	jl     0x41325e
  413236:	arpl   bx,sp
  413238:	jl     0x4131e3
  41323a:	cs mov dl,0xbf
  41323d:	mov    edi,0x87810f75
  413242:	stc    
  413243:	fisttp QWORD PTR [edx+0x28]
  413246:	dec    ebp
  413247:	mov    ebp,0xb18d51da
  41324c:	mov    ecx,0x3bc243e2
  413251:	jno    0x41324a
  413253:	shl    DWORD PTR [eax-0x14],1
  413256:	and    bh,al
  413258:	call   0xac8b2553
  41325d:	aad    0x28
  41325f:	xchg   ecx,eax
  413260:	(bad)  
  413261:	and    eax,0x4f44a122
  413266:	mov    ds:0x4cd71bdf,eax
  41326b:	(bad)  [eax]
  41326d:	cmp    eax,0x38f92c8c
  413272:	push   eax
  413273:	mov    ebx,0x12232b5d
  413278:	fbld   TBYTE PTR [edx-0x2a0899f]
  41327e:	cs dec ecx
  413280:	scas   eax,DWORD PTR es:[edi]
  413281:	jo     0x413210
  413283:	mul    BYTE PTR [esp+ebx*2+0x7]
  413287:	sbb    eax,0x4e5a6ae7
  41328c:	jle    0x4132e3
  41328e:	shl    BYTE PTR ds:0xf41767d,0x8a
  413295:	xchg   esi,eax
  413296:	js     0x413291
  413298:	push   0xb1955c98
  41329d:	in     eax,dx
  41329e:	test   DWORD PTR [edi],edi
  4132a0:	pusha  
  4132a1:	nop
  4132a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a3:	xor    al,0xfc
  4132a5:	pop    eax
  4132a6:	aad    0x89
  4132a8:	sub    eax,0x65ee92e3
  4132ad:	outs   dx,BYTE PTR ds:[esi]
  4132ae:	or     DWORD PTR [eax+0x7a87e6db],ebp
  4132b4:	cmp    ebp,DWORD PTR [edx]
  4132b6:	pop    esp
  4132b7:	popa   
  4132b8:	je     0x41331e
  4132ba:	or     BYTE PTR [edi],dh
  4132bc:	adc    al,0x26
  4132be:	mov    al,0xf9
  4132c0:	push   edi
  4132c1:	mov    gs,WORD PTR [edi]
  4132c3:	in     al,dx
  4132c4:	stos   DWORD PTR es:[edi],eax
  4132c5:	(bad)  
  4132c6:	pop    esp
  4132c7:	addr16 pop ebx
  4132c9:	shl    DWORD PTR gs:[ebx-0x23],0xfc
  4132ce:	clc    
  4132cf:	das    
  4132d0:	(bad)  
  4132d1:	int    0x6f
  4132d3:	vmread DWORD PTR [ecx-0x19],esi
  4132d7:	cmp    al,0x41
  4132d9:	or     al,0x4d
  4132db:	adc    al,BYTE PTR [eax+0x2c]
  4132de:	imul   esp,DWORD PTR [edi-0x4a],0xbefc274
  4132e5:	sbb    al,0xb9
  4132e7:	imul   BYTE PTR [eax-0xa]
  4132ea:	ds mov bl,0x33
  4132ed:	out    0x82,al
  4132ef:	push   0x5d
  4132f1:	inc    esi
  4132f2:	nop
  4132f3:	lea    esi,[ebp-0xd0631a6]
  4132f9:	stos   DWORD PTR es:[edi],eax
  4132fa:	(bad)  
  4132fb:	push   cs
  4132fc:	jl     0x413281
  4132fe:	xchg   ebx,eax
  4132ff:	mov    edx,0xb38788ec
  413304:	or     eax,0x97b88faf
  413309:	adc    BYTE PTR [ecx],0x43
  41330c:	xor    edi,ebp
  41330e:	popa   
  41330f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413310:	imul   ecx,esp,0xcf0c1a7d
  413316:	lods   al,BYTE PTR ds:[esi]
  413317:	jle    0x41332e
  413319:	dec    ebx
  41331a:	inc    edi
  41331b:	fldenv [edi]
  41331d:	call   0x65e8:0xb6c8a1c
  413324:	add    al,0x69
  413326:	dec    edx
  413327:	inc    edi
  413328:	inc    edx
  413329:	fimul  WORD PTR [esi]
  41332b:	mov    eax,0x215d8057
  413330:	or     ebx,DWORD PTR [esi+0x183a2a98]
  413336:	jno    0x4132f1
  413338:	lods   al,BYTE PTR ds:[esi]
  413339:	sub    eax,0x19f462aa
  41333e:	(bad)  
  41333f:	(bad)  
  413340:	dec    esi
  413341:	mov    ?,WORD PTR [ebx]
  413343:	or     al,0x42
  413345:	lea    ecx,[ebx+0x26c79abf]
  41334b:	inc    ecx
  41334c:	in     al,dx
  41334d:	jo     0x413384
  41334f:	mov    edi,0x97c282fb
  413354:	ins    DWORD PTR es:[edi],dx
  413355:	cwde   
  413356:	aas    
  413357:	jecxz  0x4132f9
  413359:	cmp    dl,BYTE PTR [edx-0x39ba9cb7]
  41335f:	clc    
  413360:	cdq    
  413361:	sahf   
  413362:	inc    edi
  413363:	fcomip st,st(3)
  413365:	fsub   QWORD PTR [ecx+edx*2+0x4347cce3]
  41336c:	sbb    DWORD PTR [ecx+0x78a54836],ebx
  413372:	(bad)  
  413373:	out    dx,eax
  413374:	les    ebx,FWORD PTR [ecx]
  413376:	inc    ecx
  413377:	dec    esp
  413378:	sub    BYTE PTR [ebx],bl
  41337a:	in     al,dx
  41337b:	mov    ch,0xb
  41337d:	mov    dl,0xf
  41337f:	inc    edx
  413380:	js     0x41331e
  413382:	into   
  413383:	in     eax,0x15
  413385:	lahf   
  413386:	test   DWORD PTR [esi+ebx*8+0x21],ebx
  41338a:	scas   al,BYTE PTR es:[edi]
  41338b:	add    eax,DWORD PTR [ecx]
  41338d:	repz sub al,0x63
  413390:	jge    0x41331f
  413392:	fild   DWORD PTR [edi+0x17]
  413395:	in     eax,dx
  413396:	mov    WORD PTR gs:[ebp+0x6df9c583],ds
  41339d:	adc    DWORD PTR [edx+0x69],0x9a609beb
  4133a4:	daa    
  4133a5:	push   ds
  4133a6:	cmc    
  4133a7:	es jns 0x413393
  4133aa:	lods   al,BYTE PTR ds:[esi]
  4133ab:	call   0xe9a5:0x529f80e5
  4133b2:	cwde   
  4133b3:	dec    edi
  4133b4:	or     BYTE PTR [edx-0x71c4c9e6],ah
  4133ba:	ror    esi,cl
  4133bc:	jbe    0x4133d4
  4133be:	xor    edi,edx
  4133c0:	and    bl,BYTE PTR ss:[edx+0x69]
  4133c4:	icebp  
  4133c5:	pop    eax
  4133c6:	js     0x41340d
  4133c8:	push   es
  4133c9:	shr    DWORD PTR [eax+0x3d50b32d],0xb3
  4133d0:	js     0x4133b5
  4133d2:	push   ds
  4133d3:	cmp    ah,BYTE PTR [esi]
  4133d5:	inc    eax
  4133d6:	rcr    dh,cl
  4133d8:	jnp    0x4133e4
  4133da:	stos   BYTE PTR es:[edi],al
  4133db:	out    dx,eax
  4133dc:	jg     0x413383
  4133de:	lock xor cl,BYTE PTR [eax+0x2]
  4133e2:	dec    edx
  4133e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133e4:	xchg   ecx,eax
  4133e5:	xchg   edi,eax
  4133e6:	jmp    0xf58e:0x5b91408b
  4133ed:	call   0xb8b1ede6
  4133f2:	(bad)  
  4133f3:	leave  
  4133f4:	call   0x7e6beba3
  4133f9:	mov    eax,0x440022d4
  4133fe:	cmp    ah,dl
  413400:	fldcw  WORD PTR [ecx+0x31]
  413403:	or     al,0x6d
  413405:	not    BYTE PTR [eax+0x4e]
  413408:	fistp  WORD PTR [ecx+0x58]
  41340b:	sbb    bh,dl
  41340d:	fld    QWORD PTR ds:0xb60a646f
  413413:	xchg   edx,eax
  413414:	mov    cl,0x87
  413416:	pop    esi
  413417:	cmp    BYTE PTR [ebx],dl
  413419:	ins    DWORD PTR es:[edi],dx
  41341a:	aaa    
  41341b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41341c:	scas   al,BYTE PTR es:[edi]
  41341d:	xor    BYTE PTR [ebx+0x1b41b1b7],cl
  413423:	dec    esp
  413424:	mov    ds:0xbd74d687,al
  413429:	test   al,0x7c
  41342b:	mov    eax,0x791b06ce
  413430:	or     bl,BYTE PTR [edi]
  413432:	loop   0x41345a
  413434:	pop    ebp
  413435:	xchg   edi,eax
  413436:	ret    0xdb67
  413439:	arpl   WORD PTR [ebp-0x4],si
  41343c:	or     DWORD PTR [esi+edi*2-0x381526fa],ebx
  413443:	aas    
  413444:	fdiv   QWORD PTR [eax+0x4]
  413447:	mov    dh,0x91
  413449:	sti    
  41344a:	stc    
  41344b:	jg     0x4134b5
  41344d:	in     al,0x4f
  41344f:	xlat   BYTE PTR ds:[ebx]
  413450:	xor    BYTE PTR [edx],bl
  413452:	sub    DWORD PTR [eax+0x66],esi
  413455:	mov    ebp,0xb2fc82ad
  41345a:	call   0xe9a5:0xd7bc0350
  413461:	loopne 0x413458
  413463:	jnp    0x4133f4
  413465:	pop    edx
  413466:	test   eax,0x659bde40
  41346b:	ret    0xccd6
  41346e:	mov    al,0xb6
  413470:	(bad)  
  413471:	jmp    0xea995864
  413476:	sub    eax,0x2f35d259
  41347b:	es in  eax,dx
  41347d:	loopne 0x413402
  41347f:	cs nop
  413481:	sbb    eax,0x30f78e35
  413486:	lea    ebp,[ebp+0xd]
  413489:	in     al,dx
  41348a:	pop    ss
  41348b:	sbb    ecx,DWORD PTR [ebx-0x67e8f4dc]
  413491:	cwde   
  413492:	pop    es
  413493:	dec    ebx
  413494:	adc    BYTE PTR [esi],0xa9
  413497:	sub    edx,DWORD PTR [ebp-0x1c]
  41349a:	sbb    bh,0xd
  41349d:	ds pusha 
  41349f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a0:	push   es
  4134a1:	lds    ebx,FWORD PTR [esp+edi*8+0x2072964c]
  4134a8:	or     al,0xc9
  4134aa:	jmp    0xd81f:0x842b1ce9
  4134b1:	push   0x87db6de1
  4134b6:	(bad)  
  4134b7:	and    DWORD PTR [ebx+edx*1+0x6],edi
  4134bb:	pop    es
  4134bc:	jecxz  0x41344f
  4134be:	sbb    bh,al
  4134c0:	xchg   ebx,eax
  4134c1:	js     0x41349d
  4134c3:	dec    ebx
  4134c4:	cdq    
  4134c5:	sbb    eax,0x121c088b
  4134ca:	sahf   
  4134cb:	pushf  
  4134cc:	clc    
  4134cd:	push   edx
  4134ce:	(bad)  
  4134cf:	mov    ds:0xfdab493c,eax
  4134d4:	arpl   WORD PTR [ecx+ebx*1+0xe],si
  4134d8:	shl    BYTE PTR [ebx-0x121b7eef],0xc1
  4134df:	xchg   BYTE PTR [ecx],dh
  4134e1:	inc    ebp
  4134e2:	or     al,0x17
  4134e4:	cmp    BYTE PTR [eax-0x18],0xba
  4134e8:	aas    
  4134e9:	loop   0x413546
  4134eb:	mov    dh,0x2d
  4134ed:	ins    DWORD PTR es:[edi],dx
  4134ee:	stos   DWORD PTR es:[edi],eax
  4134ef:	jmp    0x413538
  4134f1:	cmp    bl,dh
  4134f3:	fistp  QWORD PTR [ecx]
  4134f5:	popf   
  4134f6:	fldenv ds:[ebx]
  4134f9:	jne    0x41350f
  4134fb:	xchg   edx,esi
  4134fd:	mov    al,0x68
  4134ff:	xor    ch,BYTE PTR [edi-0x5b]
  413502:	pop    ebx
  413503:	push   edi
  413504:	mov    eax,ds:0x95ad4279
  413509:	daa    
  41350a:	sub    eax,0x272069d1
  41350f:	outs   dx,BYTE PTR ds:[esi]
  413510:	fiadd  DWORD PTR [edi-0x6e]
  413513:	mov    ecx,0x53ecb4ed
  413518:	ins    DWORD PTR es:[edi],dx
  413519:	mov    ecx,0x8b56d4ec
  41351e:	and    BYTE PTR [ebx],bh
  413520:	jp     0x4134f2
  413522:	jg     0x413500
  413524:	add    al,0xea
  413526:	sub    DWORD PTR [edi],eax
  413528:	xor    edi,edi
  41352a:	pushf  
  41352b:	mov    esi,DWORD PTR [esi]
  41352d:	ins    DWORD PTR es:[edi],dx
  41352e:	and    eax,DWORD PTR [ebp+0x4e46b9bc]
  413534:	sub    cl,ch
  413536:	shr    BYTE PTR [ebp-0x16f51a2c],0xe6
  41353d:	inc    edi
  41353e:	cmp    eax,0xaccdd6ff
  413543:	stc    
  413544:	jmp    0x739cfabd
  413549:	clc    
  41354a:	inc    esp
  41354b:	call   0x834a3a02
  413550:	imul   edi,DWORD PTR [esp+ecx*2],0x7eed0320
  413557:	(bad)  
  413558:	cmp    DWORD PTR [edi+0x11],eax
  41355b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41355c:	pop    ds
  41355d:	sub    ecx,eax
  41355f:	pop    ecx
  413560:	dec    edi
  413561:	push   edi
  413562:	mov    BYTE PTR [eax],cl
  413564:	je     0x413519
  413566:	dec    esi
  413567:	jmp    FWORD PTR [ecx-0x69f51ea9]
  41356d:	stos   BYTE PTR es:[edi],al
  41356e:	mov    ah,0xe0
  413570:	or     cl,BYTE PTR [ecx-0x30d20642]
  413576:	xchg   esi,eax
  413577:	adc    eax,0x155df086
  41357c:	lods   eax,DWORD PTR ds:[esi]
  41357d:	add    al,0xd0
  41357f:	jmp    0x6950:0x62f713cd
  413586:	sbb    eax,0xcf249931
  41358b:	arpl   WORD PTR [ebp-0x69e2103e],ax
  413591:	jle    0x4135ed
  413593:	imul   ecx,edi,0xffffff81
  413596:	sti    
  413597:	mov    ah,0xf
  413599:	(bad)  
  41359b:	leave  
  41359c:	shl    bl,1
  41359e:	mov    esi,0xba42e3f7
  4135a3:	mov    al,ds:0x39d20ae5
  4135a8:	pop    ss
  4135a9:	and    ecx,0x8cfa3795
  4135af:	inc    edx
  4135b0:	dec    esp
  4135b1:	ja     0x413533
  4135b3:	and    bl,BYTE PTR [esi+0x2126fcaa]
  4135b9:	sub    eax,DWORD PTR [ebp+0x74]
  4135bc:	pop    edi
  4135bd:	gs jge 0x41362a
  4135c0:	jae    0x413562
  4135c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c3:	lock inc esp
  4135c5:	jge    0x4135f5
  4135c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c8:	xchg   esp,eax
  4135c9:	test   eax,0x296b3b22
  4135ce:	sbb    ebx,DWORD PTR [ecx+edx*4-0x112f07d5]
  4135d5:	adc    bh,cl
  4135d7:	addr16 mov ds:0x143c,al
  4135db:	xchg   edx,eax
  4135dc:	lock (bad) 
  4135de:	fsubr  DWORD PTR [edx+0x72]
  4135e1:	sbb    eax,0xa2e2f807
  4135e6:	or     BYTE PTR [eax-0xe],ch
  4135e9:	(bad)  
  4135ea:	rol    BYTE PTR [ebx+0x43],cl
  4135ed:	inc    edi
  4135ee:	daa    
  4135ef:	retf   0x221d
  4135f2:	sub    ch,BYTE PTR [ecx+0x5b]
  4135f5:	and    ebx,esi
  4135f7:	or     bl,ah
  4135f9:	push   ds
  4135fa:	stos   DWORD PTR es:[edi],eax
  4135fb:	stc    
  4135fc:	pop    es
  4135fd:	jmp    DWORD PTR [ecx-0x623292e9]
  413603:	dec    edx
  413604:	call   0xd0e39510
  413609:	jo     0x41366d
  41360b:	jbe    0x413666
  41360d:	shl    BYTE PTR [edi-0x1f3b5b64],0x35
  413614:	out    dx,al
  413615:	push   edi
  413616:	leave  
  413617:	mov    dh,BYTE PTR [esi]
  413619:	sti    
  41361a:	mov    ebx,0x6cfb69
  41361f:	jnp    0x4135b0
  413621:	mov    eax,ds:0x81fdb35e
  413626:	cmovno ecx,DWORD PTR gs:[esi-0x1ac74d08]
  41362e:	cdq    
  41362f:	fidivr DWORD PTR [eax-0x55322e67]
  413635:	int3   
  413636:	xchg   ecx,eax
  413637:	xchg   ecx,eax
  413638:	dec    ebx
  413639:	fwait
  41363a:	ret    0x2d19
  41363d:	pop    edi
  41363e:	test   al,dh
  413640:	jl     0x41368a
  413642:	rol    BYTE PTR [edx+ebx*8+0x75],cl
  413646:	dec    ebp
  413647:	jno    0x413667
  413649:	mov    ch,0xde
  41364b:	icebp  
  41364c:	or     BYTE PTR [ebp-0x4a],dh
  41364f:	mov    al,ds:0x75dabf34
  413654:	xchg   BYTE PTR [ebx],bh
  413656:	jmp    0x4136c2
  413658:	fild   QWORD PTR [edx-0x2a]
  41365b:	cmp    al,0x3e
  41365d:	push   eax
  41365e:	pop    ss
  41365f:	test   eax,0x5c526e69
  413664:	(bad)  
  413665:	mov    ds:0x7b8fb4db,al
  41366a:	mov    bl,BYTE PTR [ecx*1-0x4e80bb85]
  413671:	fdivp  st(1),st
  413673:	sbb    eax,0x58723569
  413678:	popa   
  413679:	sbb    al,0x17
  41367b:	add    edi,0xfdcdf10c
  413681:	xchg   esp,eax
  413682:	out    0xf7,al
  413684:	mov    edx,0x9a9ee500
  413689:	int3   
  41368a:	mov    edx,0x6eb90280
  41368f:	add    eax,0x2994c631
  413694:	lahf   
  413695:	fidivr DWORD PTR [ebp-0x472146d5]
  41369b:	mov    fs,WORD PTR [ebp-0x2b]
  41369e:	retf   0xd36b
  4136a1:	jno    0x413644
  4136a3:	add    eax,0x4db1b450
  4136a8:	mov    ah,0x7c
  4136aa:	lock dec ebp
  4136ac:	xor    edi,DWORD PTR [esp]
  4136af:	add    al,BYTE PTR [ebx+esi*4]
  4136b2:	mov    eax,0xe93f5dec
  4136b7:	test   DWORD PTR [eax-0x80],ecx
  4136ba:	or     al,0xc6
  4136bc:	fcom   QWORD PTR [edi-0x7c]
  4136bf:	leave  
  4136c0:	lods   al,BYTE PTR ds:[esi]
  4136c1:	or     al,BYTE PTR [ecx+0x32]
  4136c4:	ins    DWORD PTR es:[edi],dx
  4136c5:	jo     0x41364a
  4136c7:	(bad)  
  4136c8:	cmp    al,0x3f
  4136ca:	repz add eax,edx
  4136cd:	xchg   edx,eax
  4136ce:	enter  0xb2fc,0x93
  4136d2:	mov    ds:0x6d3bd75b,eax
  4136d7:	mov    eax,0x61c9f787
  4136dc:	or     eax,ebp
  4136de:	(bad)
  4136e1:	mov    ecx,0x90180e44
  4136e6:	(bad)  
  4136e7:	sti    
  4136e8:	(bad)  
  4136ea:	jnp    0x41369a
  4136ec:	mov    dl,0xa6
  4136ee:	jmp    0x413724
  4136f0:	mov    cl,0xab
  4136f2:	dec    esi
  4136f3:	jbe    0x413681
  4136f5:	mov    WORD PTR [eax-0x24eefb24],fs
  4136fb:	fdiv   DWORD PTR [edi+0x4]
  4136fe:	repnz xchg edx,eax
  413700:	test   eax,0x2b208dd5
  413705:	outs   dx,DWORD PTR ds:[esi]
  413706:	add    BYTE PTR ds:0x95acbb2c,ch
  41370c:	push   ebx
  41370d:	push   ss
  41370e:	ja     0x4136d3
  413710:	lods   al,BYTE PTR ds:[esi]
  413711:	mov    WORD PTR [edi+0x5f2c3468],es
  413717:	xchg   esi,eax
  413718:	jo     0x413728
  41371a:	mov    eax,ds:0x2546dc98
  41371f:	cs cdq 
  413721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413722:	into   
  413723:	xor    edx,eax
  413725:	xchg   ebp,eax
  413726:	in     al,0x58
  413728:	call   0x406a:0x43fb339
  41372f:	mov    eax,ds:0xeb433901
  413734:	push   0xffffffd9
  413736:	ss pop edi
  413738:	mov    esi,DWORD PTR [eax-0x2f]
  41373b:	pop    esp
  41373c:	lods   eax,DWORD PTR ds:[esi]
  41373d:	cli    
  41373e:	mov    cl,0xec
  413740:	into   
  413741:	adc    ch,bh
  413743:	cmp    dh,dl
  413745:	cmp    BYTE PTR [eax-0x154cd470],cl
  41374b:	cmp    esp,DWORD PTR ds:0x7d8515ed
  413751:	and    al,0x22
  413753:	jb     0x413716
  413755:	mov    al,0xe7
  413757:	hlt    
  413758:	inc    edx
  413759:	cmp    cl,BYTE PTR [ebx]
  41375b:	push   ds
  41375c:	iret   
  41375d:	push   cs
  41375e:	fldcw  WORD PTR [ebp+0x4a5eaa1d]
  413764:	xor    eax,0x623ebfa5
  413769:	xor    BYTE PTR [esi],bl
  41376b:	or     esp,DWORD PTR [ebp-0x1df5abcc]
  413771:	mov    eax,0x5d6c5f6b
  413776:	pop    edx
  413777:	xor    dh,BYTE PTR [edx+0x7b682beb]
  41377d:	dec    ebp
  41377e:	pop    ds
  41377f:	scas   al,BYTE PTR es:[edi]
  413780:	xor    ch,BYTE PTR [ecx+0x7a50fccd]
  413786:	pop    edi
  413787:	xchg   ebp,eax
  413788:	ret    0xd26c
  41378b:	fdivr  QWORD PTR [esi+ecx*2+0x9]
  41378f:	push   esi
  413790:	cmp    cl,BYTE PTR [edx+0x21]
  413793:	pop    ebx
  413794:	shl    eax,1
  413796:	xchg   DWORD PTR gs:[ebp+0x577f9d83],esp
  41379d:	(bad)  
  41379e:	adc    al,0x3b
  4137a0:	pop    esp
  4137a1:	shl    DWORD PTR [esi+esi*8-0x74],cl
  4137a5:	in     eax,0x2c
  4137a7:	mov    BYTE PTR [eax+ecx*1],cl
  4137aa:	test   eax,0x860f0195
  4137af:	out    dx,al
  4137b0:	push   cs
  4137b1:	test   eax,0xfbe9eda2
  4137b6:	fimul  DWORD PTR [edx+0x62951e2e]
  4137bc:	xchg   esp,eax
  4137bd:	jmp    0xf2fa51a1
  4137c2:	bound  eax,QWORD PTR [esp+ebx*4-0x5c]
  4137c6:	mov    dl,dl
  4137c8:	call   0xac5a:0x582a637f
  4137cf:	push   cs
  4137d0:	inc    ecx
  4137d1:	rol    DWORD PTR [edi-0x4bc7814c],cl
  4137d7:	fiadd  WORD PTR [ebp-0x4b7159db]
  4137dd:	jle    0x4137e0
  4137df:	jecxz  0x41377f
  4137e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e2:	mov    WORD PTR [esi-0x50],fs
  4137e5:	lock shr ch,1
  4137e8:	sbb    eax,0xa2f581ec
  4137ed:	ror    bh,0x38
  4137f0:	fs sbb al,0x45
  4137f3:	scas   eax,DWORD PTR es:[edi]
  4137f4:	popf   
  4137f5:	mov    ds:0x68cb78b6,eax
  4137fa:	test   eax,0x22107bd4
  4137ff:	hlt    
  413800:	mov    bl,0x8
  413802:	shl    BYTE PTR [edx],cl
  413804:	jbe    0x4137dd
  413806:	je     0x413874
  413808:	in     al,dx
  413809:	fwait
  41380a:	push   ss
  41380b:	cmp    edi,ebx
  41380d:	xor    dh,dl
  41380f:	xchg   esi,eax
  413810:	shl    edi,cl
  413812:	repnz int 0xa2
  413815:	mov    bh,0xe3
  413817:	mov    ?,WORD PTR [ebx+0x77]
  41381a:	mov    ebp,0xf30167bc
  41381f:	gs int 0x33
  413822:	push   ss
  413823:	jle    0x4137fb
  413825:	stos   DWORD PTR es:[edi],eax
  413826:	dec    esp
  413827:	pop    ecx
  413828:	pop    esp
  413829:	push   eax
  41382a:	call   0x980e6976
  41382f:	sbb    al,0x57
  413831:	ret    0x520c
  413834:	jp     0x41389c
  413836:	in     al,dx
  413837:	xchg   ebx,edx
  413839:	or     bh,dl
  41383b:	lds    eax,FWORD PTR [edx+0x25]
  41383e:	inc    edi
  41383f:	sbb    ecx,DWORD PTR [ebp+0x4fb795ab]
  413845:	icebp  
  413846:	sbb    BYTE PTR [ecx-0x24],bl
  413849:	jb     0x413844
  41384b:	cld    
  41384c:	push   esi
  41384d:	les    edi,FWORD PTR [edi+0x724ecf7c]
  413853:	push   ecx
  413854:	or     esp,DWORD PTR [ecx+0x6aff99b2]
  41385a:	iret   
  41385b:	iret   
  41385c:	adc    dl,BYTE PTR [ecx-0x5fbb0854]
  413862:	xchg   cl,ch
  413864:	cmp    eax,0xc2bb96c1
  413869:	mov    bh,0xef
  41386b:	cmc    
  41386c:	push   cs
  41386d:	lds    edx,FWORD PTR [esi+0x4d]
  413870:	stc    
  413871:	(bad)  
  413872:	cmc    
  413873:	into   
  413874:	and    bh,BYTE PTR [edx-0x41353737]
  41387a:	add    al,0x92
  41387c:	fstp   TBYTE PTR [eax]
  41387e:	fnstcw WORD PTR [ebx+0x6ec1c439]
  413884:	adc    BYTE PTR [edx+0x50c208b2],ah
  41388a:	fldcw  WORD PTR [ebp-0x6b]
  41388d:	jnp    0x413822
  41388f:	shl    DWORD PTR [ebx-0x2cceef9e],0x69
  413896:	cmp    BYTE PTR [ecx-0x51],bl
  413899:	jp     0x413908
  41389b:	jmp    0xac67:0x9ed7e48a
  4138a2:	push   ss
  4138a3:	cmp    edi,ebp
  4138a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138a6:	and    bl,BYTE PTR [ecx-0x325ee87e]
  4138ac:	test   eax,0xbaaf5df0
  4138b1:	iret   
  4138b2:	pushf  
  4138b3:	push   ss
  4138b4:	xchg   ebx,eax
  4138b5:	xlat   BYTE PTR ds:[ebx]
  4138b6:	jb     0x413917
  4138b8:	sub    cl,BYTE PTR [ecx+0x52]
  4138bb:	push   0x71
  4138bd:	fs (bad) 
  4138bf:	out    dx,eax
  4138c0:	push   edi
  4138c1:	cmp    BYTE PTR [ecx],dl
  4138c3:	pop    esi
  4138c4:	xchg   ebx,eax
  4138c5:	xchg   edx,eax
  4138c6:	(bad)  
  4138c7:	pop    edi
  4138c8:	repz lahf 
  4138ca:	sahf   
  4138cb:	cli    
  4138cc:	in     eax,dx
  4138cd:	sbb    DWORD PTR [eax+0x2757745a],0x9a6c4ef0
  4138d7:	lock mov al,ds:0xf64247c1
  4138dd:	dec    esi
  4138de:	adc    BYTE PTR [ebp-0x1ebebeb4],al
  4138e4:	sub    bl,BYTE PTR [ebp-0x72]
  4138e7:	mov    edi,0x801c389b
  4138ec:	cdq    
  4138ed:	lds    esi,FWORD PTR [ebx+0x1e96e192]
  4138f3:	out    0x1f,eax
  4138f5:	jecxz  0x4138d8
  4138f7:	repz int3 
  4138f9:	push   ebx
  4138fa:	add    DWORD PTR [esi+ecx*8-0xfb58d1f],ecx
  413901:	adc    DWORD PTR [esi-0x740f6459],ebp
  413907:	in     eax,0x48
  413909:	or     cl,BYTE PTR [esi+0x1d6b6858]
  41390f:	inc    edi
  413910:	jo     0x413960
  413912:	es aad 0x24
  413915:	mov    WORD PTR [ebp-0x102b75d5],cs
  41391b:	(bad)  
  41391c:	leave  
  41391d:	es (bad) 
  41391f:	and    eax,ebx
  413921:	bound  esp,QWORD PTR [ebp+0x5e]
  413924:	sbb    DWORD PTR [edx],ebp
  413926:	imul   ebx,DWORD PTR [edx+0x76],0xffffffae
  41392a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41392b:	sbb    DWORD PTR [edi+0x2e],eax
  41392e:	(bad)  
  41392f:	mov    esi,DWORD PTR [eax-0x590194f0]
  413935:	pop    edi
  413936:	pusha  
  413937:	sub    DWORD PTR [ebp-0x6af52950],0x4d3af380
  413941:	and    BYTE PTR [eax-0x3e],al
  413944:	push   es
  413945:	dec    esp
  413946:	cmp    al,0xde
  413948:	(bad)  ds:0x83f5852f
  41394e:	mov    edi,0xa63915c4
  413953:	mov    BYTE PTR [ebx-0x423c28a0],al
  413959:	mov    eax,0x82f342ac
  41395e:	imul   ebp,DWORD PTR [ebp+0x1dafeee4],0xfffffff7
  413965:	sbb    al,0xd2
  413967:	jp     0x41390f
  413969:	arpl   WORD PTR [eax-0x270a5d83],sp
  41396f:	adc    BYTE PTR [edx],ah
  413971:	jge    0x413924
  413973:	dec    ebx
  413974:	dec    ecx
  413975:	pusha  
  413976:	iret   
  413977:	or     ah,BYTE PTR [ebp-0x6d]
  41397a:	hlt    
  41397b:	pop    ecx
  41397c:	jmp    0x41399c
  41397e:	call   0xc2fdbec6
  413983:	mov    ah,0x8e
  413985:	push   0xffffff8d
  413987:	cmc    
  413988:	test   esi,esp
  41398a:	jbe    0x413961
  41398c:	in     al,0x75
  41398e:	mov    edx,DWORD PTR [edi+eiz*2]
  413991:	test   BYTE PTR [esi+0x4507d0bc],bh
  413997:	xchg   edi,eax
  413998:	push   ss
  413999:	jmp    0x413999
  41399b:	cmp    dh,BYTE PTR [esi+0x77f1384a]
  4139a1:	push   ecx
  4139a2:	cmp    al,0x47
  4139a4:	sti    
  4139a5:	or     al,0x8
  4139a7:	jnp    0x413a1f
  4139a9:	inc    edx
  4139aa:	add    DWORD PTR [esi+0x616481cb],eax
  4139b0:	push   ds
  4139b1:	and    BYTE PTR [esi-0x40],ah
  4139b4:	mov    esi,0xf8899a01
  4139b9:	add    esp,DWORD PTR [ecx-0x51b0140e]
  4139bf:	jecxz  0x4139ec
  4139c1:	rol    BYTE PTR [edi-0x31],1
  4139c4:	aaa    
  4139c5:	mov    ebx,0x4650dc31
  4139ca:	stos   BYTE PTR es:[edi],al
  4139cb:	xchg   edx,eax
  4139cc:	fcom   QWORD PTR [eax+eiz*4-0x38521d82]
  4139d3:	jmp    0xc205:0x5c3d3bfa
  4139da:	ja     0x4139cc
  4139dc:	fldcw  WORD PTR [bx-0x34]
  4139e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139e1:	mov    ebp,0xc9b5c164
  4139e6:	cli    
  4139e7:	pushf  
  4139e8:	mov    esi,0x7eb8eb06
  4139ed:	js     0x4139c3
  4139ef:	stos   BYTE PTR es:[edi],al
  4139f0:	retf   0xa3a9
  4139f3:	icebp  
  4139f4:	ret    
  4139f5:	jle    0x4139b3
  4139f7:	fmul   DWORD PTR [edx+0x28]
  4139fa:	stos   DWORD PTR es:[edi],eax
  4139fb:	inc    eax
  4139fc:	sub    eax,DWORD PTR [eax]
  4139fe:	adc    al,0x77
  413a00:	mov    ch,0x78
  413a02:	push   ebx
  413a03:	gs std 
  413a05:	push   edx
  413a06:	clc    
  413a07:	or     al,0x92
  413a09:	imul   eax,DWORD PTR [edi+0x54cedf02],0x5c
  413a10:	int3   
  413a11:	cdq    
  413a12:	push   es
  413a13:	icebp  
  413a14:	pop    edi
  413a15:	cmp    BYTE PTR [edx-0x1fad2c8f],dh
  413a1b:	adc    cl,BYTE PTR [eax-0xe1174ff]
  413a21:	push   ecx
  413a22:	out    0xda,al
  413a24:	clc    
  413a25:	imul   esi,DWORD PTR [ebx+0x7f],0xa1ca0211
  413a2c:	jge    0x4139bf
  413a2e:	add    ebx,DWORD PTR [eax+0x52]
  413a31:	dec    eax
  413a32:	ret    0x23d4
  413a35:	push   ss
  413a36:	ss add edi,ebx
  413a39:	aaa    
  413a3a:	(bad)  
  413a3b:	nop
  413a3c:	jmp    0xe2388959
  413a41:	add    edx,esi
  413a43:	or     eax,0x2534a96a
  413a48:	std    
  413a49:	or     eax,DWORD PTR [ebx+0x5d05b7f4]
  413a4f:	mov    ds:0xfa60fa90,al
  413a54:	je     0x413ac9
  413a56:	push   ss
  413a57:	pop    ss
  413a58:	pop    es
  413a59:	jmp    0x8d3d:0x38726229
  413a60:	pushfw 
  413a62:	mov    edi,0xfba91e1e
  413a67:	add    ebp,ebx
  413a69:	pop    ecx
  413a6a:	inc    ebx
  413a6b:	xor    ch,bh
  413a6d:	xor    al,0x93
  413a6f:	(bad)  
  413a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a71:	int3   
  413a72:	ins    BYTE PTR es:[edi],dx
  413a73:	dec    ebp
  413a74:	xor    ebp,DWORD PTR [esi]
  413a76:	pop    edi
  413a77:	daa    
  413a78:	sahf   
  413a79:	repz add ebx,DWORD PTR [esi+ecx*8+0x5f38f2de]
  413a81:	mov    ecx,0xb43bd911
  413a86:	icebp  
  413a87:	push   edx
  413a88:	add    DWORD PTR [esi],esp
  413a8a:	lock out 0x85,eax
  413a8d:	(bad)  
  413a8e:	out    dx,eax
  413a8f:	xchg   DWORD PTR [eax],ebp
  413a91:	xor    ch,dl
  413a93:	dec    ebx
  413a94:	push   ds
  413a95:	adc    eax,0xac8e24ec
  413a9a:	and    eax,0xedcb1879
  413a9f:	(bad)  
  413aa0:	enter  0x35e4,0x61
  413aa4:	push   edx
  413aa5:	inc    ebx
  413aa6:	scas   eax,DWORD PTR es:[edi]
  413aa7:	mov    bl,0x27
  413aa9:	fs into 
  413aab:	stos   DWORD PTR es:[edi],eax
  413aac:	fadd   QWORD PTR [eax]
  413aae:	jmp    0x413a5b
  413ab0:	sub    BYTE PTR [edx],al
  413ab2:	fnstcw WORD PTR [esi+0x7e]
  413ab5:	popf   
  413ab6:	pop    ebp
  413ab7:	jae    0x413aa7
  413ab9:	adc    DWORD PTR [esi+0x10],esp
  413abc:	test   al,0x85
  413abe:	ds int3 
  413ac0:	(bad)  
  413ac1:	fist   WORD PTR [ecx+0x6a]
  413ac4:	punpckldq mm0,DWORD PTR [ebx+0x74]
  413ac8:	in     al,dx
  413ac9:	cs xchg bh,ch
  413acc:	or     cl,BYTE PTR [esi]
  413ace:	cmp    al,0xcd
  413ad0:	aas    
  413ad1:	mov    ch,0xda
  413ad3:	inc    eax
  413ad4:	out    dx,eax
  413ad5:	push   ds
  413ad6:	cmc    
  413ad7:	cmc    
  413ad8:	jb     0x413b4a
  413ada:	pop    esp
  413adb:	push   esi
  413adc:	in     eax,dx
  413add:	(bad)  [edx]
  413adf:	xchg   DWORD PTR [edx+0x5f085e2e],esp
  413ae5:	stos   DWORD PTR es:[edi],eax
  413ae6:	sbb    BYTE PTR [edx],ah
  413ae8:	fs pop edi
  413aea:	(bad)  
  413aeb:	ins    BYTE PTR es:[edi],dx
  413aec:	lahf   
  413aed:	shl    esi,0x28
  413af0:	mov    ecx,0x19c23a4c
  413af5:	pop    edx
  413af6:	scas   eax,DWORD PTR es:[edi]
  413af7:	cmc    
  413af8:	xchg   ebp,eax
  413af9:	iret   
  413afa:	jle    0x413b66
  413afc:	xchg   ebp,eax
  413afd:	cs inc eax
  413aff:	hlt    
  413b00:	add    eax,0xe7649628
  413b05:	jg     0x413b5c
  413b07:	fld    TBYTE PTR [esi-0x417ca00]
  413b0d:	mov    eax,ds:0xc2d5fb75
  413b12:	ret    
  413b13:	push   cs
  413b14:	push   cs
  413b15:	int    0x6b
  413b17:	xchg   bl,ch
  413b19:	and    DWORD PTR ds:0x1792d5a1,ecx
  413b1f:	and    eax,DWORD PTR ds:0x5bd25a20
  413b25:	pusha  
  413b26:	inc    esi
  413b27:	dec    edx
  413b28:	adc    edx,edi
  413b2a:	mov    eax,ds:0x7b9eec03
  413b2f:	jnp    0x413ba3
  413b31:	add    edi,edi
  413b33:	ins    BYTE PTR es:[edi],dx
  413b34:	inc    ebp
  413b35:	pop    eax
  413b36:	lea    eax,[esi-0x436cd81b]
  413b3c:	push   ebx
  413b3d:	(bad)  
  413b3e:	loopne 0x413b19
  413b40:	push   es
  413b41:	mov    eax,ds:0xb55a26f3
  413b46:	or     al,0xbd
  413b48:	out    0xb1,al
  413b4a:	out    0x9e,al
  413b4c:	js     0x413b5c
  413b4e:	imul   ebp,DWORD PTR [edi],0x36d639d1
  413b54:	arpl   WORD PTR [edi-0x7bdde96c],dx
  413b5a:	pop    es
  413b5b:	mov    esp,0xbf26f315
  413b60:	cmp    al,0x3f
  413b62:	repz xor BYTE PTR [eax*8-0x77d0a772],ah
  413b6a:	loop   0x413b5c
  413b6c:	fs stos DWORD PTR es:[edi],eax
  413b6e:	inc    esi
  413b6f:	xlat   BYTE PTR ds:[ebx]
  413b70:	lods   al,BYTE PTR ds:[esi]
  413b71:	sbb    al,0xd3
  413b73:	fdivr  DWORD PTR [ecx]
  413b75:	inc    ebp
  413b76:	jns    0x413b6a
  413b78:	outs   dx,BYTE PTR ds:[esi]
  413b79:	jg     0x413bdc
  413b7b:	mov    bl,0x18
  413b7d:	out    0xd6,al
  413b7f:	jo     0x413b38
  413b81:	inc    esp
  413b82:	pop    esp
  413b83:	xchg   DWORD PTR [ebp+0x51],esi
  413b86:	test   al,0x64
  413b88:	popa   
  413b89:	outs   dx,DWORD PTR ds:[esi]
  413b8a:	hlt    
  413b8b:	mov    esi,0x80ef9dfa
  413b90:	ds mov bh,0xbc
  413b93:	cdq    
  413b94:	sbb    esp,ecx
  413b96:	aas    
  413b97:	inc    edx
  413b98:	je     0x413b2d
  413b9a:	xchg   ecx,eax
  413b9b:	(bad)  
  413b9c:	in     al,0x4a
  413b9e:	adc    al,BYTE PTR [eax+0x4c]
  413ba1:	cmp    BYTE PTR [ebx-0x29e7cedf],cl
  413ba7:	fwait
  413ba8:	cmp    bh,BYTE PTR [ebx-0x28]
  413bab:	mov    ecx,0x3d9350c3
  413bb0:	cmp    ch,dh
  413bb2:	cli    
  413bb3:	add    edx,DWORD PTR [esi+0x66]
  413bb6:	mov    ebx,0x8f7a260e
  413bbb:	fiadd  DWORD PTR [ebp+0x564c8996]
  413bc1:	jle    0x413b8c
  413bc3:	pop    ebx
  413bc4:	and    DWORD PTR [edi],eax
  413bc6:	add    BYTE PTR [ecx-0x1b],ah
  413bc9:	inc    ebp
  413bca:	mov    WORD PTR [ecx],ss
  413bcc:	push   ds
  413bcd:	je     0x413c01
  413bcf:	retf   0x4a26
  413bd2:	push   ebp
  413bd3:	inc    edx
  413bd4:	jno    0x413bc3
  413bd6:	pop    ebp
  413bd7:	mov    bh,0x2f
  413bd9:	std    
  413bda:	sbb    ecx,DWORD PTR [esi-0x43]
  413bdd:	fidiv  DWORD PTR [esp+edx*8]
  413be0:	xchg   ebx,eax
  413be1:	jbe    0x413c3c
  413be3:	mov    ah,0x52
  413be5:	mov    ds,ecx
  413be7:	fidiv  WORD PTR [ebp-0x51fff04]
  413bed:	cmp    dl,BYTE PTR [edi-0x29]
  413bf0:	mov    esp,0x7dfc6cf6
  413bf5:	cmp    DWORD PTR [edi-0x1a],0x7b594c80
  413bfc:	mov    bh,0x54
  413bfe:	popa   
  413bff:	shl    BYTE PTR [eax-0x18],1
  413c02:	lods   eax,DWORD PTR ds:[esi]
  413c03:	nop
  413c04:	not    DWORD PTR [ecx+eiz*2-0x76]
  413c08:	or     bl,al
  413c0a:	icebp  
  413c0b:	popf   
  413c0c:	inc    esp
  413c0d:	cdq    
  413c0e:	jno    0x413bac
  413c10:	pushf  
  413c11:	sahf   
  413c12:	cmp    eax,0x3c346cfd
  413c17:	in     al,dx
  413c18:	je     0x413bcd
  413c1a:	ins    BYTE PTR es:[edi],dx
  413c1b:	jae    0x413c87
  413c1d:	jmp    FWORD PTR [esp+ecx*8]
  413c20:	stc    
  413c21:	dec    ecx
  413c22:	or     eax,0x3225697d
  413c27:	mov    dh,0x6a
  413c29:	mov    dl,BYTE PTR [eax]
  413c2b:	inc    esi
  413c2c:	imul   ecx,DWORD PTR fs:[esi+edx*1],0xffffff9e
  413c31:	dec    edx
  413c32:	pop    esp
  413c33:	mov    ah,ch
  413c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c36:	sahf   
  413c37:	sbb    DWORD PTR [ebx+edi*2-0x13],esp
  413c3b:	cmp    DWORD PTR [ebp+0x3c],0xdfe5d438
  413c42:	and    ah,BYTE PTR [edi+esi*1+0x44]
  413c46:	scas   al,BYTE PTR es:[edi]
  413c47:	scas   eax,DWORD PTR es:[edi]
  413c48:	stos   DWORD PTR es:[edi],eax
  413c49:	sbb    ebx,0x32c43a52
  413c4f:	fidiv  WORD PTR [edi-0x5a]
  413c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c53:	and    ch,BYTE PTR [esi+0x55]
  413c56:	pop    es
  413c57:	or     ebx,ebx
  413c59:	add    eax,0x63db3ee6
  413c5e:	push   ds
  413c5f:	cmp    al,0xf0
  413c61:	xchg   edx,eax
  413c62:	and    eax,0xed302046
  413c67:	mov    esp,0x53d550e8
  413c6c:	adc    ah,BYTE PTR [ecx+0x37e231a8]
  413c72:	push   cs
  413c73:	or     ah,BYTE PTR [ebp-0x78]
  413c76:	xchg   edx,eax
  413c77:	in     al,dx
  413c78:	and    eax,0x637d5053
  413c7d:	push   cs
  413c7e:	ror    BYTE PTR [ebx+0x23bc0d10],1
  413c84:	scas   al,BYTE PTR es:[edi]
  413c85:	add    eax,0x471df289
  413c8a:	call   0x71aede34
  413c8f:	test   eax,0xbf1dc032
  413c94:	cmp    al,0x9d
  413c96:	xor    DWORD PTR [ebp+edi*1-0x76],ebp
  413c9a:	xchg   edi,eax
  413c9b:	pop    ebp
  413c9c:	fnstsw ax
  413c9e:	sub    edx,DWORD PTR [ecx]
  413ca0:	rcr    BYTE PTR [eax],cl
  413ca2:	and    cl,al
  413ca4:	dec    esp
  413ca5:	sbb    al,0xa4
  413ca7:	retf   0xba2b
  413caa:	jnp    0x413c4b
  413cac:	lock and eax,0x21d391f6
  413cb2:	aas    
  413cb3:	push   edi
  413cb4:	popf   
  413cb5:	pusha  
  413cb6:	scas   al,BYTE PTR es:[edi]
  413cb7:	cdq    
  413cb8:	cmp    BYTE PTR [ebx+0x1757dcbd],al
  413cbe:	or     al,ah
  413cc0:	lods   eax,DWORD PTR ds:[esi]
  413cc1:	sbb    eax,DWORD PTR [esi*8-0x2bcd82f1]
  413cc8:	cdq    
  413cc9:	js     0x413cd8
  413ccb:	out    0xf0,eax
  413ccd:	icebp  
  413cce:	retf   
  413ccf:	push   0x86823497
  413cd4:	es jmp 0x42299536
  413cda:	mov    eax,ds:0x98b61c5a
  413cdf:	ror    ah,cl
  413ce1:	add    bl,ch
  413ce3:	and    DWORD PTR ds:0x57cf0e13,edx
  413ce9:	pop    esp
  413cea:	sbb    sp,dx
  413ced:	test   BYTE PTR [eax+0x51],ch
  413cf0:	mov    ds:0x6cd6ff17,al
  413cf5:	pop    ebp
  413cf6:	mov    ecx,0x962c0669
  413cfb:	sbb    ebp,ecx
  413cfd:	mov    dh,0xd5
  413cff:	add    al,0xd6
  413d01:	repz adc eax,0x6290a599
  413d07:	jo     0x413cb2
  413d09:	in     eax,dx
  413d0a:	or     eax,0xc660636c
  413d0f:	mov    edi,0xa257ae0
  413d14:	cmp    al,0xf4
  413d16:	pop    eax
  413d17:	dec    ebx
  413d18:	jecxz  0x413cf4
  413d1a:	mov    eax,0x1fa0ae61
  413d20:	ds aaa 
  413d22:	stc    
  413d23:	lahf   
  413d24:	subps  xmm0,XMMWORD PTR [ebp+0x3b]
  413d28:	mov    dh,0xb7
  413d2a:	xchg   esp,eax
  413d2b:	int    0xd3
  413d2d:	popf   
  413d2e:	inc    eax
  413d2f:	retf   
  413d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d31:	pop    edi
  413d32:	les    esp,FWORD PTR [ebp-0x4b]
  413d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d36:	(bad)  
  413d37:	es inc ebp
  413d39:	sub    ebx,edi
  413d3b:	push   ebx
  413d3c:	sub    esi,ebx
  413d3e:	jecxz  0x413d79
  413d40:	repnz stc 
  413d42:	mov    DWORD PTR [edx-0x7180430e],eax
  413d48:	mov    edi,0x54e27231
  413d4d:	in     al,dx
  413d4e:	outs   dx,BYTE PTR ds:[esi]
  413d4f:	(bad)  
  413d50:	das    
  413d51:	ficom  WORD PTR [esi-0x7c4d0956]
  413d57:	repz push ds
  413d59:	mov    dh,0x6e
  413d5b:	fcomp  st(1)
  413d5d:	mov    ds:0xcfda8904,al
  413d62:	std    
  413d63:	and    BYTE PTR [ebp+0x28],cl
  413d66:	pop    ebp
  413d67:	jmp    0x502cdd32
  413d6c:	push   ecx
  413d6d:	add    DWORD PTR [ecx+0x4865f07a],esp
  413d73:	fdivr  st(1),st
  413d75:	lock pop ecx
  413d77:	inc    edi
  413d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d79:	fisttp QWORD PTR [ecx+eiz*1+0x60]
  413d7d:	sub    dh,BYTE PTR ds:0xd32bff29
  413d83:	into   
  413d84:	jb     0x413d80
  413d86:	ds int3 
  413d88:	mov    WORD PTR [ebp-0x4c],?
  413d8b:	sub    bh,ch
  413d8d:	ja     0x413d60
  413d8f:	jo     0x413d2d
  413d91:	fdivr  QWORD PTR [ebx-0x62]
  413d94:	mov    esp,0x1a7fe59d
  413d99:	sar    BYTE PTR [ebx],0xcf
  413d9c:	retf   0x3e61
  413d9f:	sub    al,0x3f
  413da1:	es enter 0xc3f9,0x41
  413da6:	in     eax,dx
  413da7:	ja     0x413e25
  413da9:	fbstp  TBYTE PTR [eax-0xf]
  413dac:	aas    
  413dad:	push   esi
  413dae:	sbb    bl,ah
  413db0:	dec    eax
  413db1:	sbb    eax,eax
  413db3:	in     eax,0xd6
  413db5:	cmp    eax,0xa3a028d3
  413dba:	in     eax,dx
  413dbb:	inc    edi
  413dbc:	add    eax,0x13c57846
  413dc1:	sub    BYTE PTR [ebx+ebp*8+0x26],dl
  413dc5:	out    dx,eax
  413dc6:	fisttp DWORD PTR [edx-0x559214bc]
  413dcc:	or     al,0x1d
  413dce:	daa    
  413dcf:	sbb    al,0xdc
  413dd1:	shr    DWORD PTR [eax+0x5d],1
  413dd4:	pop    esi
  413dd5:	jo     0x413dc0
  413dd7:	mov    DWORD PTR ss:[edi],ecx
  413dda:	pop    esi
  413ddb:	(bad)  
  413ddc:	in     al,0xf6
  413dde:	mov    al,ds:0xcb199ba
  413de3:	and    ebx,DWORD PTR [esi-0x50]
  413de6:	mov    edi,0xf550fde7
  413deb:	retf   0xa4e3
  413dee:	cmp    esi,0x62
  413df1:	push   edx
  413df2:	shl    DWORD PTR [edi+0x7d],0x6a
  413df6:	lods   al,BYTE PTR ds:[esi]
  413df7:	push   ebp
  413df8:	and    ebp,DWORD PTR [esp+eax*4]
  413dfb:	jecxz  0x413db6
  413dfd:	test   BYTE PTR ds:0xd9cf5dd5,ch
  413e03:	xor    eax,DWORD PTR [esi+esi*1]
  413e06:	mov    WORD PTR [eax-0x1be884e1],fs
  413e0c:	xlat   BYTE PTR ds:[ebx]
  413e0d:	xor    ebx,DWORD PTR [eax-0x1ca6a0ce]
  413e13:	fwait
  413e14:	lock pop ebx
  413e16:	pop    es
  413e17:	loopne 0x413e51
  413e19:	enter  0xb24,0xe0
  413e1d:	cmc    
  413e1e:	bound  eax,QWORD PTR [ebp+0x25987121]
  413e24:	adc    eax,0x2f41ecc0
  413e29:	retf   0xc477
  413e2c:	repnz xor DWORD PTR ds:0x13db0134,edi
  413e33:	scas   al,BYTE PTR es:[edi]
  413e34:	pop    edx
  413e35:	sbb    cl,BYTE PTR [eax+esi*4]
  413e38:	lods   al,BYTE PTR ds:[esi]
  413e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e3a:	gs ret 
  413e3c:	(bad)  
  413e3e:	lods   eax,DWORD PTR ds:[esi]
  413e3f:	sbb    edi,DWORD PTR [ebx-0x1d1d74e9]
  413e45:	and    esi,eax
  413e47:	mov    eax,ds:0xf57f105f
  413e4c:	(bad)  
  413e4d:	sbb    eax,0xdf66021a
  413e52:	xchg   ebx,eax
  413e53:	and    DWORD PTR [ecx-0x58b38460],edi
  413e59:	dec    eax
  413e5a:	loopne 0x413ec2
  413e5c:	js     0x413df0
  413e5e:	inc    esp
  413e5f:	(bad)  
  413e60:	ror    DWORD PTR [esi],cl
  413e62:	sub    DWORD PTR [edi],ebp
  413e64:	rcr    BYTE PTR [ebx],0x93
  413e67:	dec    ebx
  413e68:	adc    bl,dh
  413e6a:	mul    BYTE PTR ss:[ebx+0x79]
  413e6e:	cmp    al,0xfa
  413e70:	in     al,0xd5
  413e72:	cmp    cl,cl
  413e74:	jno    0x413e81
  413e76:	xchg   edx,eax
  413e77:	xchg   ebp,eax
  413e78:	inc    edx
  413e79:	or     eax,0xa0d34f44
  413e7e:	push   ss
  413e7f:	test   ebx,ebx
  413e81:	daa    
  413e82:	out    dx,eax
  413e83:	fcmovnu st,st(3)
  413e85:	arpl   WORD PTR [edi+edi*8-0x3f],bp
  413e89:	sub    BYTE PTR [edi-0x52],bh
  413e8c:	jns    0x413e38
  413e8e:	loope  0x413ee2
  413e90:	xchg   esi,eax
  413e91:	inc    ebp
  413e92:	mov    fs,WORD PTR [ebp-0x157c01a6]
  413e98:	xchg   DWORD PTR [ebp-0xd62a8f6],edi
  413e9e:	outs   dx,BYTE PTR ds:[esi]
  413e9f:	mov    al,ds:0x270c8641
  413ea4:	push   ecx
  413ea5:	(bad)  
  413ea6:	jmp    0x413f02
  413ea8:	push   es
  413ea9:	fnstenv [ebp+0x23]
  413eac:	in     eax,0x4e
  413eae:	je     0x413ee4
  413eb0:	mov    BYTE PTR [edi+0x1a],0x58
  413eb4:	inc    edi
  413eb5:	sub    ah,BYTE PTR [edi]
  413eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb8:	mov    eax,ds:0xbc87810b
  413ebd:	push   cs
  413ebe:	pop    ecx
  413ebf:	ror    DWORD PTR [eax-0x6884233b],1
  413ec5:	sub    eax,0xae9e5179
  413eca:	adc    eax,0xadaf9638
  413ecf:	jmp    0xb9f7796e
  413ed4:	jno    0x413e87
  413ed6:	out    0x4,al
  413ed8:	mov    esp,0x7252df6c
  413edd:	or     BYTE PTR [esi],0x0
  413ee0:	imul   ecx,DWORD PTR ds:0x72ff2881,0xfb819f06
  413eea:	mov    bl,BYTE PTR [edx-0x1c]
  413eed:	or     DWORD PTR [edi-0x5d],0x9571ee12
  413ef4:	mul    DWORD PTR ds:0xb157bb81
  413efa:	or     al,BYTE PTR [edx]
  413efc:	add    BYTE PTR [esi-0x55065d5a],0xb7
  413f03:	dec    esp
  413f04:	jnp    0x413ecb
  413f06:	popa   
  413f07:	mov    cl,0xbc
  413f09:	mov    WORD PTR [ebp+0x5c],ss
  413f0c:	jle    0x413e9f
  413f0e:	ds stos DWORD PTR es:[edi],eax
  413f10:	add    BYTE PTR [edx-0x4c],dl
  413f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f14:	mov    dh,ch
  413f16:	and    ah,BYTE PTR [edx]
  413f18:	mov    al,ds:0x4be21e1
  413f1d:	fmul   DWORD PTR [ecx+0x56]
  413f20:	inc    eax
  413f21:	sub    BYTE PTR [ebp+0x46],ah
  413f24:	in     eax,dx
  413f25:	xchg   ebx,eax
  413f26:	es addr16 mov esp,0xfb67926
  413f2d:	aaa    
  413f2e:	inc    ebp
  413f2f:	pop    ss
  413f30:	jp     0x413f02
  413f32:	inc    edx
  413f33:	push   0x2e8c0df3
  413f38:	add    BYTE PTR [ebx+edx*4+0x70],bh
  413f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3d:	pushf  
  413f3e:	push   eax
  413f3f:	dec    edi
  413f40:	fdiv   QWORD PTR [edx]
  413f42:	xor    BYTE PTR [edx],ah
  413f44:	test   BYTE PTR [ecx],dh
  413f46:	repz dec esp
  413f48:	lds    ebx,FWORD PTR [eax+ebp*4-0x7bc4dd4a]
  413f4f:	adc    edi,DWORD PTR [ecx]
  413f51:	test   eax,0x22d3ef4c
  413f56:	icebp  
  413f57:	fidivr WORD PTR [edx+0x22901a3e]
  413f5d:	push   ds
  413f5e:	je     0x413f08
  413f60:	pop    edx
  413f61:	jbe    0x413f16
  413f63:	inc    bx
  413f65:	test   BYTE PTR [edi-0x78b77402],cl
  413f6b:	inc    ebp
  413f6c:	sar    DWORD PTR [ebp-0x64b6a695],0x9d
  413f73:	mov    bl,0x4b
  413f75:	sar    ebp,1
  413f77:	jmp    0xadb36f90
  413f7c:	movaps xmm6,XMMWORD PTR [ebx-0x5e221fc4]
  413f83:	mov    dl,0x1b
  413f85:	mov    BYTE PTR [ecx-0xb],al
  413f88:	xor    al,0x2
  413f8a:	dec    ebx
  413f8b:	jge    0x413f6d
  413f8d:	rcl    dh,cl
  413f8f:	mov    ecx,DWORD PTR [ecx+0x39]
  413f92:	inc    DWORD PTR [eax-0x6c443c4f]
  413f98:	xor    DWORD PTR [edx+0x15],esp
  413f9b:	fisubr WORD PTR [esi-0x16]
  413f9e:	sbb    ch,BYTE PTR [esi]
  413fa0:	sbb    esi,edx
  413fa2:	pusha  
  413fa3:	pop    es
  413fa4:	in     eax,0x25
  413fa6:	mov    ds:0xcc2177c5,al
  413fab:	mov    BYTE PTR [edi],bh
  413fad:	xor    eax,0xf372ac96
  413fb2:	stos   BYTE PTR es:[edi],al
  413fb3:	mov    bl,0x6b
  413fb5:	ds cld 
  413fb7:	adc    edx,DWORD PTR fs:[esi+0x4794f143]
  413fbe:	repnz (bad) [ebp-0x3605b875]
  413fc5:	shr    DWORD PTR [esi],cl
  413fc7:	out    0x12,al
  413fc9:	sbb    eax,0x1a909ecd
  413fce:	int3   
  413fcf:	xor    cl,BYTE PTR [edi]
  413fd1:	adc    BYTE PTR [ebp+0x68],bh
  413fd4:	add    al,dl
  413fd6:	mov    edx,0xf798befc
  413fdb:	add    DWORD PTR [ebx+ebp*1],esp
  413fde:	jns    0x413fb8
  413fe0:	xor    DWORD PTR [edx+eiz*8],ebx
  413fe3:	sub    DWORD PTR [ebx+0x246ab369],ecx
  413fe9:	push   edx
  413fea:	les    ecx,FWORD PTR [ebx]
  413fec:	jp     0x413fc8
  413fee:	pop    esi
  413fef:	sub    BYTE PTR [eax+0x40a4b263],ch
  413ff5:	jno    0x414020
  413ff7:	div    BYTE PTR [eax]
  413ff9:	dec    edi
  413ffa:	mov    ah,0x7
  413ffc:	or     eax,0xa7b17206
  414001:	out    dx,eax
  414002:	gs jne 0x413f9d
  414005:	aaa    
  414006:	cli    
  414007:	sub    cl,BYTE PTR [edx]
  414009:	enter  0xe8a6,0x25
  41400d:	loopne 0x41402c
  41400f:	inc    ebp
  414010:	sahf   
  414011:	lahf   
  414012:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414014:	int    0xef
  414016:	gs cwde 
  414018:	inc    ebx
  414019:	(bad)  [ebx]
  41401b:	lds    esi,FWORD PTR [ebx]
  41401d:	aad    0x59
  41401f:	dec    ebp
  414020:	mov    bl,0xf7
  414022:	aaa    
  414023:	xchg   ebp,eax
  414024:	loope  0x41404c
  414026:	imul   edx,DWORD PTR [ecx],0xffffff9c
  414029:	push   edx
  41402a:	mov    ch,0xea
  41402c:	idiv   DWORD PTR [edx-0x5c]
  41402f:	in     eax,0x2d
  414031:	cmp    edi,esp
  414033:	inc    ebp
  414034:	(bad)  
  414036:	loopne 0x414057
  414038:	fdiv   QWORD PTR [edx+0x384041e6]
  41403e:	(bad)  
  41403f:	call   0xa41:0xc62de653
  414046:	pop    ss
  414047:	sbb    al,BYTE PTR [esi-0x5f476c13]
  41404d:	stc    
  41404e:	leave  
  41404f:	out    0xe6,eax
  414051:	add    eax,0x73e258d2
  414056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414057:	mov    cl,0x94
  414059:	mov    WORD PTR [ecx-0x2197c8b9],fs
  41405f:	dec    eax
  414060:	icebp  
  414061:	ds ins DWORD PTR es:[edi],dx
  414063:	lock pop edi
  414065:	xor    DWORD PTR [eax-0x70f5e754],ebp
  41406b:	mov    ds:0x907a0fe9,al
  414070:	push   es
  414071:	mov    ds:0x119f817a,al
  414076:	add    al,0xed
  414078:	(bad)  
  414079:	push   ss
  41407a:	scas   eax,DWORD PTR es:[edi]
  41407b:	dec    ebx
  41407c:	imul   ebx,DWORD PTR [edx-0x22bd0ccb],0xffffffcd
  414083:	daa    
  414084:	mov    dl,0xa
  414086:	out    0x49,al
  414088:	fbstp  TBYTE PTR [ebx-0x6a]
  41408b:	arpl   WORD PTR [eax-0x7a],bp
  41408e:	test   BYTE PTR [ecx],0x48
  414091:	call   0xb996fc03
  414096:	jns    0x41410a
  414098:	ror    DWORD PTR [edx-0x50],0x94
  41409c:	cmp    eax,0x24b864b3
  4140a1:	xchg   edi,eax
  4140a2:	cld    
  4140a3:	sahf   
  4140a4:	jmp    0xb42f2965
  4140a9:	jo     0x414104
  4140ab:	pop    ecx
  4140ac:	stos   DWORD PTR es:[edi],eax
  4140ad:	in     al,0xc0
  4140af:	push   es
  4140b0:	cmp    ah,bh
  4140b2:	xor    cl,BYTE PTR [ebx-0x7618bb3c]
  4140b8:	sbb    eax,0x9d43f193
  4140bd:	ss (bad) 
  4140bf:	in     eax,0xc5
  4140c1:	xor    al,BYTE PTR [ebx-0x36fcea7e]
  4140c7:	adc    bl,BYTE PTR [edi+0x7e]
  4140ca:	(bad)  
  4140cb:	repz sub DWORD PTR [esi+eiz*1-0x71ad83b3],esp
  4140d3:	(bad)  
  4140d4:	in     al,dx
  4140d5:	pop    ss
  4140d6:	or     BYTE PTR [ecx+0x58],bh
  4140d9:	ss pop ebx
  4140db:	inc    edi
  4140dc:	add    al,0xcf
  4140de:	cmc    
  4140df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e0:	jnp    0x414069
  4140e2:	dec    esp
  4140e3:	mov    cl,0x39
  4140e5:	xor    al,0x25
  4140e7:	xchg   ebp,eax
  4140e8:	addr16 loopne 0x4140ed
  4140eb:	cmp    al,0xd
  4140ed:	cmp    eax,0xc8db33c3
  4140f2:	jg     0x41411c
  4140f4:	inc    ebx
  4140f5:	jo     0x414144
  4140f7:	jmp    FWORD PTR [edx-0x4d]
  4140fa:	stos   DWORD PTR es:[edi],eax
  4140fb:	jmp    0xa8c3:0x40332e2a
  414102:	jne    0x4140a7
  414104:	cli    
  414105:	add    BYTE PTR [edi-0x4d3d821c],al
  41410b:	dec    eax
  41410c:	jno    0x4140f0
  41410e:	xor    DWORD PTR [ebx-0x1c4d8bb],ebx
  414114:	fdiv   st,st(2)
  414116:	es inc eax
  414118:	call   0x19ac53f2
  41411d:	mov    esp,0x93f0777d
  414122:	js     0x414126
  414124:	ret    
  414125:	fcom   QWORD PTR [edi]
  414127:	push   esp
  414128:	jnp    0x41410b
  41412a:	and    ah,0x77
  41412d:	fisttp QWORD PTR [edi+0x698dc4be]
  414133:	mov    ds,WORD PTR [ecx+0x6c]
  414136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414137:	dec    ecx
  414138:	sbb    esi,DWORD PTR [eax]
  41413a:	pop    edi
  41413b:	std    
  41413c:	cs adc eax,0x9a841688
  414142:	daa    
  414143:	test   BYTE PTR [ebx],cl
  414145:	out    dx,al
  414146:	push   ebp
  414147:	hlt    
  414148:	out    dx,eax
  414149:	mov    WORD PTR [ecx+0x44],gs
  41414c:	or     eax,0x28207f0e
  414151:	or     al,0x16
  414153:	out    dx,eax
  414154:	mov    ebx,0xa5914d30
  414159:	xor    al,0x37
  41415b:	outs   dx,DWORD PTR ds:[esi]
  41415c:	sbb    DWORD PTR [ebp+0x4596fcf0],eax
  414162:	inc    esp
  414163:	cmp    eax,0x63071aaa
  414168:	rol    DWORD PTR [ecx-0x2a623c2b],1
  41416e:	mov    edi,0x500eeb6e
  414173:	push   eax
  414174:	mov    eax,ds:0x58cd63fa
  414179:	sub    al,0xa0
  41417b:	mov    edx,0x1cb0e7cb
  414180:	(bad)  
  414181:	sti    
  414182:	push   0x54
  414184:	mov    esp,0xb5a0e14b
  414189:	int3   
  41418a:	mov    ch,0x7e
  41418c:	in     eax,dx
  41418d:	add    al,0x1f
  41418f:	fwait
  414190:	sbb    esi,DWORD PTR [esi-0x39]
  414193:	sbb    eax,0x920feef2
  414198:	lods   eax,DWORD PTR ds:[esi]
  414199:	and    DWORD PTR [ebx-0x29],esp
  41419c:	mov    al,ds:0x2e289750
  4141a1:	push   es
  4141a2:	mov    cl,0xa6
  4141a4:	cmp    BYTE PTR [esi],dh
  4141a6:	xchg   esi,eax
  4141a7:	dec    esi
  4141a8:	mov    cl,0x63
  4141aa:	loope  0x4141f4
  4141ac:	stos   BYTE PTR es:[edi],al
  4141ad:	and    BYTE PTR [ebp+0x7a],cl
  4141b0:	aad    0x28
  4141b2:	lahf   
  4141b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b4:	mov    ebx,0x3af8c2d6
  4141b9:	cli    
  4141ba:	mov    ebx,ebp
  4141bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141bd:	js     0x414153
  4141bf:	cmp    BYTE PTR [ecx],0xc7
  4141c2:	inc    edx
  4141c3:	add    eax,0x44663239
  4141c8:	dec    ebp
  4141c9:	jmp    0xa9d8c780
  4141ce:	or     BYTE PTR [ecx+0x70],ch
  4141d1:	outs   dx,DWORD PTR ds:[esi]
  4141d2:	mov    dl,0x27
  4141d4:	adc    al,0xc9
  4141d6:	add    ch,al
  4141d8:	sub    eax,0x977b9a62
  4141dd:	mov    edi,0x7e6a1159
  4141e2:	cmp    ebp,ebp
  4141e4:	int    0x8b
  4141e6:	loop   0x4141b5
  4141e8:	icebp  
  4141e9:	out    0x2d,eax
  4141eb:	mov    eax,0x40c07c9a
  4141f0:	dec    esp
  4141f1:	hlt    
  4141f2:	xor    BYTE PTR [ebp+0x13da6ede],bl
  4141f8:	adc    BYTE PTR ds:0x8a91b2bf,dh
  4141fe:	adc    al,0xcf
  414200:	add    eax,0xccbf7f77
  414205:	mov    ecx,0xa0ce962b
  41420a:	dec    ebp
  41420b:	ret    
  41420c:	stos   DWORD PTR es:[edi],eax
  41420d:	xchg   BYTE PTR [edx],cl
  41420f:	pop    ebx
  414210:	xor    bl,BYTE PTR [ebp-0x593de046]
  414216:	les    eax,FWORD PTR [ebx-0x13]
  414219:	inc    ebp
  41421a:	lahf   
  41421b:	mul    DWORD PTR [ebx+0x15141dc2]
  414221:	push   DWORD PTR [ebp-0x747f6b82]
  414227:	push   0x402bd879
  41422c:	mov    WORD PTR [ebx+0x1],ds
  41422f:	xor    DWORD PTR [eax-0xa],ebp
  414232:	mov    edx,DWORD PTR [eax]
  414234:	(bad)  
  414235:	jo     0x4142a2
  414237:	mov    bl,0x8c
  414239:	add    al,BYTE PTR [edx+0x65]
  41423c:	icebp  
  41423d:	fild   WORD PTR [esi]
  41423f:	jecxz  0x414247
  414241:	dec    ebx
  414242:	mov    cs,WORD PTR [ebx-0x355eab5b]
  414248:	mov    eax,ds:0xc75a6bf8
  41424d:	mov    ah,0xa3
  41424f:	ins    BYTE PTR es:[edi],dx
  414250:	sbb    BYTE PTR [edx-0x623a42cc],0xc1
  414257:	jb     0x414200
  414259:	xchg   DWORD PTR [ecx-0x4c],esp
  41425c:	and    DWORD PTR [eax],eax
  41425e:	inc    edx
  41425f:	test   DWORD PTR [edi-0x18],0x1117eaff
  414266:	mov    ds:0x30f8b9bb,al
  41426b:	shl    BYTE PTR [ebx],1
  41426d:	and    BYTE PTR [esi+ebp*4+0x6cbfe421],bh
  414274:	xlat   BYTE PTR ds:[ebx]
  414275:	mov    al,BYTE PTR [ecx+0x7183d73f]
  41427b:	cdq    
  41427c:	sbb    eax,0x731c2917
  414281:	hlt    
  414282:	sbb    BYTE PTR ds:0x59f80e9f,0x2b
  414289:	mov    al,ds:0xadfb940c
  41428e:	pop    ebp
  41428f:	lds    esp,FWORD PTR [edi-0x2c239c76]
  414295:	add    DWORD PTR [edx-0x290605fb],ebp
  41429b:	in     al,0xad
  41429d:	in     al,dx
  41429e:	into   
  41429f:	cmp    eax,eax
  4142a1:	jns    0x4142a2
  4142a3:	out    0xcb,eax
  4142a5:	inc    esi
  4142a6:	cmp    DWORD PTR [ebx],edi
  4142a8:	sbb    eax,0x2f7b1ba8
  4142ad:	hlt    
  4142ae:	nop
  4142af:	imul   ebx,ecx,0x520298e7
  4142b5:	fldcw  WORD PTR [edx+0x7f075a2d]
  4142bb:	fucomp st(7)
  4142bd:	shl    eax,cl
  4142bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c0:	mov    bl,0x61
  4142c2:	or     BYTE PTR [eax-0x610d12ec],bl
  4142c8:	inc    ebx
  4142c9:	jmp    0x414311
  4142cb:	add    DWORD PTR [esi-0x80],ecx
  4142ce:	mov    dl,0xfa
  4142d0:	lock mov ebp,0x615f8d07
  4142d6:	mov    ebp,0xed54ab15
  4142db:	adc    eax,0x5b4b64af
  4142e0:	sar    BYTE PTR [esi+0x4],0x98
  4142e4:	je     0x4142b3
  4142e6:	xchg   esi,eax
  4142e7:	xor    al,0xca
  4142e9:	in     al,dx
  4142ea:	lds    esp,FWORD PTR [edi+0x6fede30a]
  4142f0:	outs   dx,DWORD PTR ds:[esi]
  4142f1:	jle    0x41427a
  4142f3:	ret    
  4142f4:	jp     0x414322
  4142f6:	stc    
  4142f7:	loopne 0x41434d
  4142f9:	add    al,0x7
  4142fb:	inc    ebx
  4142fc:	retf   0xc769
  4142ff:	lods   eax,DWORD PTR ds:[esi]
  414300:	xor    DWORD PTR [eax+0x73],eax
  414303:	retf   
  414304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414305:	dec    edx
  414306:	out    dx,eax
  414307:	mov    ds:0x4152a0cd,al
  41430c:	sub    bl,bl
  41430e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41430f:	cmp    BYTE PTR [edx],bl
  414311:	jge    0x414303
  414313:	inc    edx
  414314:	test   eax,0x695c587
  414319:	dec    edx
  41431a:	sub    DWORD PTR [ebx],edx
  41431c:	lds    ebx,FWORD PTR [edx-0x72]
  41431f:	(bad)  
  414320:	push   edi
  414321:	ficom  DWORD PTR [ebx]
  414323:	imul   edx,DWORD PTR [ebx],0xcb199d81
  414329:	scas   al,BYTE PTR es:[edi]
  41432a:	cmp    edx,DWORD PTR [ebx+0x59]
  41432d:	pop    es
  41432e:	stos   BYTE PTR es:[edi],al
  41432f:	sbb    DWORD PTR [ebp-0x6181911f],esp
  414335:	add    al,0x36
  414337:	push   ss
  414338:	push   0x64d8c318
  41433d:	dec    edx
  41433e:	call   0x480d4e1b
  414343:	scas   eax,DWORD PTR es:[edi]
  414344:	mov    esp,0x9faae959
  414349:	gs scas al,BYTE PTR es:[edi]
  41434b:	pop    es
  41434c:	or     cl,BYTE PTR [ecx+esi*1-0x592de34d]
  414353:	addr16 (bad) 
  414355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414356:	mov    BYTE PTR [edi-0x23],bl
  414359:	push   0x1959f598
  41435e:	inc    edx
  41435f:	or     dl,bh
  414361:	cmc    
  414362:	(bad)  
  414363:	jae    0x4143d5
  414365:	pop    esp
  414366:	out    0xb4,al
  414368:	mov    ecx,0xc27e630b
  41436d:	clc    
  41436e:	and    esi,DWORD PTR [ebp-0x6e]
  414371:	(bad)  
  414372:	mov    cl,0x4b
  414374:	je     0x414346
  414376:	push   ecx
  414377:	pop    ds
  414378:	pop    ds
  414379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41437a:	push   esi
  41437b:	mov    ecx,0xe7f71347
  414380:	out    dx,eax
  414381:	gs push ds
  414383:	pop    ebp
  414384:	adc    DWORD PTR [ebp+eax*2-0x57],eax
  414388:	sub    DWORD PTR [esi],edi
  41438a:	pop    edi
  41438b:	pop    edx
  41438c:	add    al,0xb8
  41438e:	ja     0x41440e
  414390:	sbb    al,0xe4
  414392:	test   DWORD PTR ds:0x97a239eb,0x7c2b9775
  41439c:	mov    eax,0xf494640d
  4143a1:	xor    bl,ah
  4143a3:	rol    BYTE PTR [edx+edx*8+0x54],cl
  4143a7:	les    esi,FWORD PTR ds:0x7b3bbe19
  4143ad:	xor    eax,0x6deb5fb6
  4143b2:	nop
  4143b3:	add    al,0xbc
  4143b5:	sbb    BYTE PTR [ebx-0x43b9fc79],cl
  4143bb:	arpl   WORD PTR [esi],si
  4143bd:	stos   BYTE PTR es:[edi],al
  4143be:	xor    BYTE PTR [eax],bh
  4143c0:	loopne 0x414399
  4143c2:	lods   eax,DWORD PTR ds:[esi]
  4143c3:	pop    esp
  4143c4:	and    eax,0xcf534da5
  4143c9:	and    esi,ecx
  4143cb:	dec    eax
  4143cc:	shl    BYTE PTR [ecx],cl
  4143ce:	jne    0x41439e
  4143d0:	fst    DWORD PTR [esi+esi*2-0x36]
  4143d4:	loop   0x4143c0
  4143d6:	in     al,dx
  4143d7:	not    BYTE PTR [eax+0x42]
  4143da:	mov    bh,0xa
  4143dc:	lds    edx,FWORD PTR [edi]
  4143de:	cmp    edx,ecx
  4143e0:	cld    
  4143e1:	jnp    0x4143ab
  4143e3:	sub    al,0x70
  4143e5:	jnp    0x4143df
  4143e7:	add    DWORD PTR [ebp+0x2f60ea91],eax
  4143ed:	dec    esp
  4143ee:	mov    ebx,0x769fde12
  4143f3:	int3   
  4143f4:	enter  0x8bf6,0x24
  4143f8:	pop    edx
  4143f9:	lods   al,BYTE PTR ds:[esi]
  4143fa:	fs jle 0x414402
  4143fd:	(bad)  
  4143fe:	sbb    esp,DWORD PTR [ecx-0x35]
  414401:	push   edx
  414402:	shl    dh,cl
  414404:	ja     0x41444c
  414406:	pop    esi
  414407:	xchg   esi,eax
  414408:	adc    BYTE PTR [ebp-0x149eec9e],0xc
  41440f:	stos   BYTE PTR es:[edi],al
  414410:	es push 0x841bdc4e
  414416:	test   DWORD PTR [ebx+0x51],0x6ecc05c0
  41441d:	out    dx,eax
  41441e:	inc    DWORD PTR [ebx-0x61805d89]
  414424:	and    edx,DWORD PTR [ebx+0x4386f078]
  41442a:	rcr    DWORD PTR ss:[ecx],1
  41442d:	fs xor al,0x11
  414430:	(bad)  
  414431:	(bad)  
  414432:	sbb    BYTE PTR [eax+0x37],bl
  414435:	xchg   bl,al
  414437:	xor    DWORD PTR [esi-0x19],ebp
  41443a:	jo     0x4144aa
  41443c:	clc    
  41443d:	and    BYTE PTR [ebp+0x37],bh
  414440:	jb     0x41448c
  414442:	dec    ebx
  414443:	aad    0x42
  414445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414446:	xor    al,BYTE PTR ds:0x527e3550
  41444c:	fwait
  41444d:	mov    esi,0xc040b301
  414452:	xlat   BYTE PTR ds:[ebx]
  414453:	xchg   edx,eax
  414454:	sti    
  414455:	sub    eax,0xec67a96a
  41445a:	retf   0x3d66
  41445d:	xor    ebp,0xffffffbf
  414460:	fmul   DWORD PTR [ebp+0x58]
  414463:	jb     0x4143f3
  414465:	test   DWORD PTR [eax-0x3321aefe],ebp
  41446b:	pop    es
  41446c:	and    DWORD PTR [ecx],esi
  41446e:	test   esi,ebp
  414470:	mov    ds:0xeb449f4,eax
  414475:	fidiv  DWORD PTR [esi+0x529bb99d]
  41447b:	xor    BYTE PTR [eax],al
  41447d:	adc    eax,0x66b5a38
  414482:	mov    eax,DWORD PTR [ecx]
  414484:	inc    eax
  414485:	rol    DWORD PTR [ecx-0x65cecb6c],1
  41448b:	mov    al,0x3d
  41448d:	daa    
  41448e:	test   eax,0x7433cd3d
  414493:	sub    ecx,ecx
  414495:	nop
  414496:	pop    ebp
  414497:	mov    WORD PTR [esi],gs
  414499:	mov    al,0xfb
  41449b:	in     al,0x5f
  41449d:	(bad)  
  41449e:	xchg   ebx,eax
  41449f:	test   eax,0x34dfac57
  4144a4:	and    bl,BYTE PTR [edi+0x46f060d3]
  4144aa:	mov    ebp,DWORD PTR [esi+0x35]
  4144ad:	inc    edx
  4144ae:	or     al,0x41
  4144b0:	mov    ah,0x35
  4144b2:	dec    esi
  4144b3:	sub    al,0xf7
  4144b5:	test   al,0x8a
  4144b7:	into   
  4144b8:	stos   DWORD PTR es:[edi],eax
  4144b9:	in     al,dx
  4144ba:	adc    eax,0x73a6a48a
  4144bf:	cmp    DWORD PTR [ecx],ebp
  4144c1:	push   esi
  4144c2:	sub    ch,ah
  4144c4:	fdivrp st(0),st
  4144c6:	adc    eax,0xdde00f8
  4144cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144cc:	call   0x8207:0xce8f9370
  4144d3:	xchg   ebp,eax
  4144d4:	add    ebp,DWORD PTR [esi+0x76]
  4144d7:	or     edx,DWORD PTR [ebx-0x7461dc32]
  4144dd:	lods   al,BYTE PTR ds:[esi]
  4144de:	test   eax,0x449fefc4
  4144e3:	fdivr  QWORD PTR [ebx-0x61ddc26b]
  4144e9:	loop   0x41453d
  4144eb:	retf   0xde29
  4144ee:	dec    ebx
  4144ef:	pop    edx
  4144f0:	test   al,0xd1
  4144f2:	inc    esp
  4144f3:	test   al,0x33
  4144f5:	out    0x38,al
  4144f7:	cmc    
  4144f8:	dec    eax
  4144f9:	fnsave [esi]
  4144fb:	push   0xc45bf277
  414500:	dec    eax
  414501:	dec    eax
  414502:	ins    BYTE PTR es:[edi],dx
  414503:	das    
  414504:	mov    ah,BYTE PTR [ecx]
  414506:	sub    DWORD PTR ds:0x65292952,ecx
  41450c:	sbb    esp,DWORD PTR [esi+0x5f]
  41450f:	in     al,dx
  414510:	cmp    ecx,ecx
  414512:	jmp    0xec02a488
  414517:	rol    dh,cl
  414519:	push   0xffffffa9
  41451b:	inc    ecx
  41451c:	cli    
  41451d:	shl    BYTE PTR [ecx-0x5c7270c8],cl
  414523:	xor    al,0x9c
  414525:	inc    edx
  414526:	imul   ebx,esi,0x30
  414529:	int3   
  41452a:	fistp  DWORD PTR [eax+0x3173e639]
  414530:	mov    bl,0x2d
  414532:	dec    edi
  414533:	cwde   
  414534:	cldemote BYTE PTR [ebx+0x4d9d3dd9]
  41453b:	scas   al,BYTE PTR es:[edi]
  41453c:	push   eax
  41453d:	sbb    ebx,DWORD PTR [ecx+0x20]
  414540:	add    BYTE PTR [ebx],ch
  414542:	mov    ds:0x452fa96,eax
  414547:	mov    ebp,0x390809a7
  41454c:	rcl    ebx,1
  41454e:	sub    BYTE PTR [eax-0x4b],dh
  414551:	inc    sp
  414553:	fwait
  414554:	cmp    eax,0xa1299ab2
  414559:	adc    eax,DWORD PTR [ebp+0x21572f37]
  41455f:	aaa    
  414560:	push   esi
  414561:	not    dl
  414563:	scas   al,BYTE PTR es:[edi]
  414564:	das    
  414565:	jmp    0x778e:0x319663f8
  41456c:	sub    DWORD PTR [edx+0x611a7935],esp
  414572:	sti    
  414573:	aas    
  414574:	jp     0x4145dc
  414576:	pop    eax
  414577:	mov    WORD PTR cs:[ecx],fs
  41457a:	shl    BYTE PTR [eax+0x6c],0x3d
  41457e:	cmp    al,0x64
  414580:	mov    ah,0xdc
  414582:	leave  
  414583:	test   al,0xb6
  414585:	sub    DWORD PTR [edx],ecx
  414587:	push   ss
  414588:	int    0x7b
  41458a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458b:	loope  0x4145ca
  41458d:	outs   dx,DWORD PTR ds:[esi]
  41458e:	pop    esi
  41458f:	aaa    
  414590:	loope  0x4145c0
  414592:	in     eax,dx
  414593:	in     al,0xfa
  414595:	xor    BYTE PTR [ebx+0xa],dl
  414598:	sub    esp,esp
  41459a:	pop    ebx
  41459b:	push   edi
  41459c:	pop    ecx
  41459d:	mov    dl,0xb1
  41459f:	add    dh,bl
  4145a1:	cmc    
  4145a2:	inc    ecx
  4145a3:	fimul  WORD PTR [ebx]
  4145a5:	sbb    BYTE PTR [ebx],bl
  4145a7:	gs adc dh,bl
  4145aa:	cli    
  4145ab:	aam    0x72
  4145ad:	das    
  4145ae:	or     al,0xf5
  4145b0:	out    dx,al
  4145b1:	cli    
  4145b2:	fcom   QWORD PTR [edx]
  4145b4:	xor    eax,0xaa64bc52
  4145b9:	aas    
  4145ba:	dec    esp
  4145bb:	cld    
  4145bc:	rcr    edx,1
  4145be:	in     al,0x7a
  4145c0:	loop   0x4145ae
  4145c2:	fcmovb st,st(5)
  4145c4:	call   0xf57b3dd
  4145c9:	jno    0x41462a
  4145cb:	test   BYTE PTR [esi-0x3d],0x60
  4145cf:	push   eax
  4145d0:	or     eax,DWORD PTR ds:0x39655979
  4145d6:	(bad)  
  4145d7:	mov    eax,ebp
  4145d9:	push   ebp
  4145da:	or     al,BYTE PTR [ebp-0x52]
  4145dd:	sbb    dl,ch
  4145df:	dec    ebp
  4145e0:	dec    esi
  4145e1:	mov    edi,0x3cc734c8
  4145e6:	(bad)  
  4145e7:	mov    ecx,0x83569a9a
  4145ec:	cmp    cl,BYTE PTR [edx+ebx*1-0x71]
  4145f0:	pop    eax
  4145f1:	jmp    0x410:0x1c9d2905
  4145f8:	mov    ?,eax
  4145fa:	lods   al,BYTE PTR ds:[esi]
  4145fb:	sub    dl,dh
  4145fd:	lods   eax,DWORD PTR ds:[esi]
  4145fe:	mov    edx,0x733ae186
  414603:	cs mov edi,0x3044b53b
  414609:	and    BYTE PTR [edi+0x63],bl
  41460c:	enter  0xb4f0,0x8e
  414610:	(bad)  
  414611:	xor    esp,DWORD PTR [edi]
  414613:	popa   
  414614:	or     dh,bl
  414616:	das    
  414617:	ret    0xf546
  41461a:	pop    es
  41461b:	dec    edx
  41461c:	cdq    
  41461d:	loope  0x4145f7
  41461f:	out    0x2b,al
  414621:	dec    edi
  414622:	mov    ds:0xabee111e,al
  414627:	adc    eax,0xcafd10d6
  41462c:	out    dx,al
  41462d:	test   DWORD PTR ds:0xca0c8453,ebp
  414633:	bound  ebx,QWORD PTR [ecx]
  414635:	push   cs
  414636:	dec    esi
  414637:	dec    edi
  414638:	jp     0x4145c8
  41463a:	pop    ds
  41463b:	popf   
  41463c:	inc    esi
  41463d:	pop    ebx
  41463e:	jae    0x414625
  414640:	lock xor BYTE PTR [eax+eiz*1-0x5e],0xb5
  414646:	(bad)  
  414648:	(bad)  
  414649:	xor    BYTE PTR [eax+0x2d],dh
  41464c:	jne    0x414631
  41464e:	jge    0x41460a
  414650:	out    dx,eax
  414651:	call   ebx
  414653:	shl    WORD PTR es:[edx+ecx*1-0x70],1
  414659:	sbb    esp,edi
  41465b:	or     al,0x6
  41465d:	mov    DWORD PTR [eax+0x2e],ecx
  414660:	mov    DWORD PTR [eax+0x51],esp
  414663:	mov    DWORD PTR [ecx-0x3a],eax
  414666:	imul   ebx,DWORD PTR [edx-0x9c151db],0x6d
  41466d:	sub    esi,DWORD PTR [esi]
  41466f:	(bad)  
  414670:	loopne 0x414657
  414672:	(bad)  
  414674:	mov    ebp,0x568a5399
  414679:	xchg   esi,eax
  41467a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467b:	lods   al,BYTE PTR ds:[esi]
  41467c:	sbb    ch,bl
  41467e:	dec    ebx
  41467f:	mov    bl,0xe3
  414681:	pop    esp
  414682:	jae    0x4146d3
  414684:	stos   BYTE PTR es:[edi],al
  414685:	push   ss
  414686:	and    dl,BYTE PTR [ebp-0x6478ca7a]
  41468c:	call   0x1dd45d7f
  414691:	xchg   edi,eax
  414692:	rol    bl,cl
  414694:	adc    ah,BYTE PTR [edi]
  414696:	retf   0x3d5d
  414699:	pop    ebp
  41469a:	es rcr ah,0x27
  41469e:	pop    ebx
  41469f:	rcr    BYTE PTR [eax-0x62],0x2
  4146a3:	add    eax,0x8695b70
  4146a8:	aam    0x85
  4146aa:	ins    DWORD PTR es:[edi],dx
  4146ab:	or     eax,0x6b1ab6a1
  4146b0:	jmp    0xa11b:0x325a2636
  4146b7:	iret   
  4146b8:	daa    
  4146b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146ba:	inc    esi
  4146bb:	imul   ebp,DWORD PTR [eax+0x0],0x70
  4146bf:	xchg   ebp,eax
  4146c0:	or     eax,0x2a7206a6
  4146c5:	xor    al,0x88
  4146c7:	je     0x4146d8
  4146c9:	sbb    ebp,DWORD PTR [edi-0x4ef01a41]
  4146cf:	sub    ebp,DWORD PTR [ebx]
  4146d1:	jmp    0x5de2:0x45e4f968
  4146d8:	nop
  4146d9:	sbb    ah,BYTE PTR [ebx]
  4146db:	jae    0x41472d
  4146dd:	push   ss
  4146de:	mov    eax,0xc7b1b7b1
  4146e3:	cmc    
  4146e4:	sti    
  4146e5:	mov    ebp,0x1755e3f3
  4146ea:	pop    esp
  4146eb:	cmp    al,0x79
  4146ed:	pop    eax
  4146ee:	and    DWORD PTR [esi-0x4345cd1d],0xffffffb0
  4146f5:	dec    edi
  4146f6:	imul   edx,DWORD PTR [eax+0x40],0xffffffe2
  4146fa:	les    eax,FWORD PTR [eax+0x3bcd1666]
  414700:	retf   0x90f3
  414703:	jecxz  0x414728
  414705:	mov    esi,0xd809a833
  41470a:	jmp    0xce6cacc9
  41470f:	add    eax,0x847eed03
  414714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414715:	dec    ebp
  414716:	repnz (bad) 
  414718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414719:	ins    DWORD PTR es:[edi],dx
  41471a:	dec    esi
  41471b:	loopne 0x414785
  41471d:	jae    0x414752
  41471f:	mov    eax,0x650f5a2
  414724:	cmp    eax,DWORD PTR [edi]
  414726:	and    bl,BYTE PTR [ebp-0x2640f056]
  41472c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472d:	sbb    al,0x9b
  41472f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414730:	mov    cl,0x32
  414732:	mov    eax,0x3f1dbd2a
  414737:	adc    ebp,DWORD PTR ds:0x7fb0529a
  41473d:	xchg   edi,eax
  41473e:	mov    edx,0xa4e60906
  414743:	mov    DWORD PTR [esi+0x5d],edx
  414746:	mov    ds:0x16ff2232,eax
  41474b:	retf   
  41474c:	(bad)  
  41474d:	retf   
  41474e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41474f:	mov    ah,0x2c
  414751:	outs   dx,BYTE PTR ds:[esi]
  414752:	outs   dx,BYTE PTR ds:[esi]
  414753:	imul   ebx,DWORD PTR [edi-0x409e615e],0x118e7348
  41475d:	xchg   ebx,eax
  41475e:	(bad)  
  41475f:	stos   DWORD PTR es:[edi],eax
  414760:	fiadd  DWORD PTR [edx]
  414762:	jl     0x414760
  414764:	cmp    BYTE PTR [esi+ebp*4-0x551c967f],al
  41476b:	popa   
  41476c:	addr16 mov ebx,0x45a4065f
  414772:	xor    DWORD PTR [ebp+edx*1+0x758fa2d],0x794490
  41477d:	jmp    0x3f8ad2d2
  414782:	popa   
  414783:	js     0x4147c0
  414785:	rcl    BYTE PTR [edx+0x6dfeca07],0x80
  41478c:	mov    ebp,0x6204fe10
  414791:	or     BYTE PTR [ecx+0x56676e39],al
  414797:	push   edi
  414798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414799:	push   edx
  41479a:	ficomp WORD PTR [ebx-0x35d97ff2]
  4147a0:	nop
  4147a1:	xor    al,0xf0
  4147a3:	cwde   
  4147a4:	jl     0x4147fa
  4147a6:	jae    0x414802
  4147a8:	popa   
  4147a9:	sub    DWORD PTR [esi],ecx
  4147ab:	clc    
  4147ac:	adc    esi,DWORD PTR [ebx+0x6c0a547e]
  4147b2:	int    0xb8
  4147b4:	je     0x41477c
  4147b6:	inc    ebp
  4147b7:	test   DWORD PTR [eax],ebx
  4147b9:	lods   eax,DWORD PTR ds:[esi]
  4147ba:	ss add bl,dl
  4147bd:	mov    esi,0x620a778
  4147c2:	std    
  4147c3:	or     BYTE PTR [eax+0x34eb80c4],ch
  4147c9:	inc    ecx
  4147ca:	xlat   BYTE PTR ds:[ebx]
  4147cb:	popf   
  4147cc:	or     ah,BYTE PTR [edi+0x58153c11]
  4147d2:	inc    eax
  4147d3:	mov    cl,0xb6
  4147d5:	inc    edi
  4147d6:	aaa    
  4147d7:	add    DWORD PTR [ebx+0x47a28f08],ebp
  4147dd:	stos   DWORD PTR es:[edi],eax
  4147de:	xchg   BYTE PTR [edx],bh
  4147e0:	std    
  4147e1:	ins    DWORD PTR es:[edi],dx
  4147e2:	aam    0x2a
  4147e4:	aam    0x8f
  4147e6:	(bad)  
  4147e7:	shr    edx,1
  4147e9:	mov    al,0xc7
  4147eb:	(bad)  
  4147ec:	sti    
  4147ed:	jmp    0xdafb:0x3d1767ec
  4147f4:	cmp    ebx,edi
  4147f6:	and    dh,BYTE PTR [esp+ebp*4+0x3020af23]
  4147fd:	sub    al,0x13
  4147ff:	push   0x64fd8511
  414804:	loope  0x4147e1
  414806:	call   0xa4c7cf0e
  41480b:	add    esp,DWORD PTR [edx]
  41480d:	fidiv  DWORD PTR [eax-0x2d]
  414810:	push   0xffffffcb
  414812:	ret    0x280d
  414815:	xchg   DWORD PTR [eax+0x25a59240],eax
  41481b:	cmp    eax,0x7183b2d3
  414820:	lods   al,BYTE PTR ds:[esi]
  414821:	cmp    edx,esp
  414823:	fwait
  414824:	gs into 
  414826:	imul   ecx,ecx,0x7b6be6e3
  41482c:	das    
  41482d:	mov    edx,0x5b3fb7d5
  414832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414833:	push   es
  414834:	ss into 
  414836:	xchg   esi,eax
  414837:	idiv   DWORD PTR [edi]
  414839:	aaa    
  41483a:	jbe    0x4147f0
  41483c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483d:	aaa    
  41483e:	and    eax,DWORD PTR [ebx+0x16]
  414841:	fcom   QWORD PTR [esp+edx*2]
  414844:	mov    edx,0x7b4a95ef
  414849:	pop    ss
  41484a:	pop    esi
  41484b:	sti    
  41484c:	cmp    cl,BYTE PTR [edx+eax*2+0xd]
  414850:	mov    ch,0xe
  414852:	loope  0x414856
  414854:	div    dh
  414856:	add    ecx,esi
  414858:	push   ds
  414859:	xchg   edi,eax
  41485a:	fucomip st,st(4)
  41485c:	cmp    al,BYTE PTR [ecx+eax*8+0x383ca6]
  414863:	mov    al,0xa6
  414865:	cmp    ebx,ebx
  414867:	sahf   
  414868:	shl    DWORD PTR [esi-0x3c],0x56
  41486c:	cmp    bh,0xed
  41486f:	in     al,dx
  414870:	rcr    bl,0x65
  414873:	(bad)  
  414874:	xchg   ecx,eax
  414875:	ficom  WORD PTR [edi+0x6e]
  414878:	ret    0x1582
  41487b:	icebp  
  41487c:	and    eax,0x1d03251f
  414881:	or     eax,0x6ddb69c5
  414886:	xor    esp,DWORD PTR [eax]
  414888:	shl    DWORD PTR [ebx+0x67],0x44
  41488c:	dec    esp
  41488d:	jge    0x414813
  41488f:	pop    eax
  414890:	mov    bl,BYTE PTR [esi]
  414892:	daa    
  414893:	mov    ds:0x8eed8dbe,eax
  414898:	mov    al,0x8a
  41489a:	(bad)  
  41489b:	gs into 
  41489d:	push   0x35
  41489f:	or     al,0x8b
  4148a1:	dec    ebx
  4148a2:	push   cs
  4148a3:	mov    ecx,DWORD PTR [edi-0x7f367969]
  4148a9:	xchg   ebp,eax
  4148aa:	adc    eax,0xa8b73fbe
  4148af:	mov    cl,0x24
  4148b1:	outs   dx,DWORD PTR ds:[esi]
  4148b2:	(bad)  
  4148b3:	imul   edi,DWORD PTR [edx-0x79],0xb574e81a
  4148ba:	arpl   WORD PTR [ebx+ebx*2-0x3a],ax
  4148be:	fs mov esi,0x314ca95f
  4148c4:	jns    0x4148c6
  4148c6:	outs   dx,BYTE PTR ds:[esi]
  4148c7:	add    BYTE PTR [ebp-0x2c],ah
  4148ca:	dec    ebp
  4148cb:	sub    esi,ecx
  4148cd:	mov    cl,0xe3
  4148cf:	inc    ebp
  4148d0:	fistp  WORD PTR [edi+0x3e]
  4148d3:	ror    edx,0x21
  4148d6:	jo     0x4148fe
  4148d8:	push   ds
  4148d9:	jns    0x4148f2
  4148db:	sub    cl,BYTE PTR [edi-0x2c]
  4148de:	dec    ebp
  4148df:	jmp    0xf990:0x3ad7f89b
  4148e6:	xchg   DWORD PTR [esi-0x552b394e],edi
  4148ec:	pop    ss
  4148ed:	jmp    0x414941
  4148ef:	cmp    ecx,0x1
  4148f2:	sar    DWORD PTR [esi+ecx*8],0x4c
  4148f6:	dec    esp
  4148f7:	sti    
  4148f8:	sbb    eax,0x28955bc
  4148fd:	out    dx,eax
  4148fe:	push   0x25
  414900:	mov    ch,bl
  414902:	inc    esp
  414903:	call   0x236b5452
  414908:	or     eax,0x5e516a2e
  41490d:	jp     0x414942
  41490f:	pushf  
  414910:	and    BYTE PTR [edx],0x49
  414913:	loope  0x41496b
  414915:	inc    ecx
  414916:	mov    bh,0x57
  414918:	lods   eax,DWORD PTR ds:[esi]
  414919:	or     eax,0x4f107406
  41491e:	adc    DWORD PTR [ecx+eiz*1-0x78],ebp
  414922:	jecxz  0x414913
  414924:	xchg   edi,eax
  414925:	cld    
  414926:	scas   eax,DWORD PTR es:[edi]
  414927:	in     eax,0xdf
  414929:	data16 mov dh,0xef
  41492c:	sub    dh,BYTE PTR [eax-0x53]
  41492f:	ret    0x4399
  414932:	ds inc ebp
  414934:	(bad)  
  414935:	adc    al,0x14
  414937:	cmp    cl,BYTE PTR [esi-0x68cdf890]
  41493d:	(bad)  
  41493e:	sub    ch,bl
  414940:	cdq    
  414941:	jg     0x4149ad
  414943:	cmp    al,0xa
  414945:	ins    BYTE PTR es:[edi],dx
  414946:	mov    dh,0x31
  414948:	mov    al,0x7f
  41494a:	mov    al,dh
  41494c:	lods   al,BYTE PTR ds:[esi]
  41494d:	fst    QWORD PTR [edi-0x3817fe9b]
  414953:	cmp    eax,DWORD PTR [eax-0x12]
  414956:	out    0xe3,al
  414958:	fcomip st,st(1)
  41495a:	dec    ecx
  41495b:	dec    edx
  41495c:	aam    0x39
  41495e:	bswap  edi
  414960:	xchg   ecx,eax
  414961:	pop    ebp
  414962:	mov    ?,WORD PTR [esp+ebx*2]
  414965:	fiadd  WORD PTR [ecx+0x25254aac]
  41496b:	dec    esi
  41496c:	lods   al,BYTE PTR ds:[esi]
  41496d:	pop    esp
  41496e:	cmp    ecx,eax
  414970:	sbb    al,0x93
  414972:	jbe    0x414971
  414974:	iret   
  414975:	push   ds
  414976:	pushf  
  414977:	inc    ecx
  414978:	mov    bh,0x15
  41497a:	dec    edx
  41497b:	push   esi
  41497c:	jno    0x41498b
  41497e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41497f:	push   ecx
  414980:	fstp   DWORD PTR [ecx]
  414982:	push   cs
  414983:	jecxz  0x414966
  414985:	inc    edx
  414986:	jnp    0x41493f
  414988:	inc    esi
  414989:	addr16 call 0xaed3:0x20093245
  414991:	cdq    
  414992:	sbb    DWORD PTR [eax+0x49ae5d1d],edx
  414998:	xchg   ecx,eax
  414999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499a:	xor    al,0x8f
  41499c:	(bad)
  41499f:	aas    
  4149a0:	scas   al,BYTE PTR es:[edi]
  4149a1:	adc    eax,0xe8fd0b82
  4149a6:	or     al,0x7d
  4149a8:	repnz sbb bl,bl
  4149ab:	das    
  4149ac:	cdq    
  4149ad:	mov    DWORD PTR [ebp+0x8],edx
  4149b0:	jmp    0x414a25
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	ins    DWORD PTR es:[edi],dx
  414b89:	cmp    al,BYTE PTR [ebx-0x7d9800e0]
  414b8f:	adc    DWORD PTR [edi],0x5c
  414b92:	add    DWORD PTR [ebx+0x6b00c56c],0xffffff8e
  414b99:	sahf   
  414b9a:	inc    edx
  414b9b:	mov    cl,0x72
  414b9d:	push   eax
  414b9e:	dec    cx
  414ba0:	cmp    bl,BYTE PTR [ecx+0x596ee6d7]
  414ba6:	clc    
  414ba7:	dec    eax
  414ba8:	xor    edi,DWORD PTR [edx+0x512e9a7a]
  414bae:	add    eax,0x53ac79f6
  414bb3:	mov    DWORD PTR [eax-0x2d],esi
  414bb6:	pop    ecx
  414bb7:	pop    esp
  414bb8:	icebp  
  414bb9:	push   ecx
  414bba:	xchg   ebp,eax
  414bbb:	scas   al,BYTE PTR es:[edi]
  414bbc:	test   eax,0x110c793c
  414bc1:	push   es
  414bc2:	in     al,0xb1
  414bc4:	sti    
  414bc5:	pop    es
  414bc6:	xchg   ecx,eax
  414bc7:	mov    dl,0x2
  414bc9:	shl    DWORD PTR [ebx-0x48],cl
  414bcc:	dec    eax
  414bcd:	stos   DWORD PTR es:[edi],eax
  414bce:	mov    dh,0x40
  414bd0:	or     ah,BYTE PTR fs:[eax+0x240a144]
  414bd7:	pop    ecx
  414bd8:	ss pusha 
  414bda:	and    esi,DWORD PTR [ecx+0x314f1e9]
  414be0:	jmp    FWORD PTR [esi+edx*8+0x9]
  414be4:	jne    0x414c38
  414be6:	mov    ecx,0x1ce5ef57
  414beb:	(bad)  
  414bec:	mov    ah,BYTE PTR [esi-0x4f21d3a4]
  414bf2:	sub    DWORD PTR [ebx],edx
  414bf4:	xchg   BYTE PTR [ebp-0x7a15a1ca],ah
  414bfa:	test   BYTE PTR [ebp+0x796edef9],al
  414c00:	retf   0x35af
  414c03:	lods   eax,DWORD PTR ds:[esi]
  414c04:	and    BYTE PTR [ebx+ebx*8+0x1ca98212],ah
  414c0b:	not    BYTE PTR [esi+ebp*8]
  414c0e:	add    BYTE PTR [edi],dh
  414c10:	ss ins DWORD PTR es:[edi],dx
  414c12:	out    dx,eax
  414c13:	push   edx
  414c14:	push   cs
  414c15:	fist   DWORD PTR [eax-0x1]
  414c18:	dec    esi
  414c19:	inc    edx
  414c1a:	in     al,0x8f
  414c1c:	pop    ss
  414c1d:	dec    ebp
  414c1e:	shl    bl,0xa5
  414c21:	cwde   
  414c22:	sub    eax,0x571185b2
  414c27:	jecxz  0x414c54
  414c29:	dec    esi
  414c2a:	dec    ecx
  414c2b:	xchg   ebp,eax
  414c2c:	loope  0x414c44
  414c2e:	sbb    DWORD PTR [edx-0x3b0418a1],esi
  414c34:	pop    esi
  414c35:	mov    ebx,cs
  414c37:	mov    ecx,0x84552210
  414c3c:	shr    esi,0x57
  414c3f:	aam    0xa8
  414c41:	and    eax,0xb1ecb34a
  414c46:	dec    ebp
  414c47:	mov    dh,0x2a
  414c49:	bswap  ebp
  414c4b:	hlt    
  414c4c:	mov    ch,0x5c
  414c4e:	(bad)  
  414c50:	mov    al,0x9d
  414c52:	add    eax,0x8e0a70e6
  414c57:	int3   
  414c58:	jmp    0xead31c6
  414c5d:	in     eax,0x15
  414c5f:	(bad)  [ecx+0x6c]
  414c62:	jns    0x414c31
  414c64:	shl    BYTE PTR [edx+0x39d0dcd4],cl
  414c6a:	push   edi
  414c6b:	stos   DWORD PTR es:[edi],eax
  414c6c:	add    DWORD PTR [esi-0x62ac0ad7],0xc37db1c2
  414c76:	fmul   DWORD PTR [ebx*4+0x3c682e7a]
  414c7d:	add    al,0xeb
  414c7f:	fwait
  414c80:	je     0x414cf2
  414c82:	jne    0x414c10
  414c84:	retf   0xbf52
  414c87:	pop    ecx
  414c88:	aad    0xcb
  414c8a:	adc    BYTE PTR [esi],bh
  414c8c:	aad    0x1d
  414c8e:	pop    ecx
  414c8f:	and    BYTE PTR [esi+0x5],cl
  414c92:	dec    edx
  414c93:	mov    bh,0xd8
  414c95:	gs or  bl,0x94
  414c99:	pop    es
  414c9a:	xchg   ebp,eax
  414c9b:	jb     0x414ca6
  414c9d:	loopne 0x414c75
  414c9f:	mov    DWORD PTR [ecx],ebp
  414ca1:	call   ebx
  414ca3:	pop    esp
  414ca4:	jno    0x414c73
  414ca6:	daa    
  414ca7:	cmc    
  414ca8:	ins    BYTE PTR es:[edi],dx
  414ca9:	mov    eax,0x4a493168
  414cae:	adc    DWORD PTR [ebp+0xdae3d9],eax
  414cb4:	rcr    BYTE PTR [esp+eax*8],0xbf
  414cb8:	(bad)  
  414cb9:	lock ins BYTE PTR es:[edi],dx
  414cbb:	dec    esi
  414cbc:	inc    ebx
  414cbd:	xchg   ebp,eax
  414cbe:	iret   
  414cbf:	jle    0x414ca5
  414cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cc2:	push   eax
  414cc3:	aam    0xdc
  414cc5:	push   es
  414cc6:	dec    ecx
  414cc7:	xchg   esp,eax
  414cc8:	pop    ecx
  414cc9:	cmp    al,0x86
  414ccb:	dec    edx
  414ccc:	addr16 popf 
  414cce:	sub    BYTE PTR [ebp-0x7343b748],bl
  414cd4:	pop    edx
  414cd5:	sub    BYTE PTR [bx+si],dl
  414cd8:	loopne 0x414cd8
  414cda:	sbb    BYTE PTR [edi],ch
  414cdc:	leave  
  414cdd:	fnstsw WORD PTR [eax]
  414cdf:	push   es
  414ce0:	loop   0x414c94
  414ce2:	addr16 mov edi,0xdb6624bf
  414ce8:	bound  ebp,QWORD PTR [ecx-0x75]
  414ceb:	pop    ds
  414cec:	arpl   si,bp
  414cee:	sub    al,0x4a
  414cf0:	fwait
  414cf1:	repz jmp 0x798c570f
  414cf7:	clc    
  414cf8:	stc    
  414cf9:	fcmovb st,st(5)
  414cfb:	or     al,0xba
  414cfd:	lahf   
  414cfe:	adc    ecx,DWORD PTR [edx+0x19bef9b0]
  414d04:	lock push edx
  414d06:	sbb    bh,BYTE PTR [ebp+0x6504acdc]
  414d0c:	push   ss
  414d0d:	not    BYTE PTR [ebp+0x70103e78]
  414d13:	mov    esp,DWORD PTR [bx+si]
  414d16:	ret    
  414d17:	pop    esi
  414d18:	out    0xd0,eax
  414d1a:	sub    dh,BYTE PTR [edx+0xfd31e4d]
  414d20:	dec    DWORD PTR [eax-0x13]
  414d23:	cld    
  414d24:	pop    ecx
  414d25:	daa    
  414d26:	scas   al,BYTE PTR es:[edi]
  414d27:	sub    cl,al
  414d29:	mov    al,ds:0xd31ac910
  414d2e:	sub    al,0xdc
  414d30:	retf   0x9e1b
  414d33:	in     eax,0xa5
  414d35:	cmp    eax,0xd8392ee2
  414d3a:	adc    BYTE PTR [ebx],dh
  414d3c:	call   0xff61c567
  414d41:	xor    esp,ebp
  414d43:	pop    eax
  414d44:	xor    eax,0xfd588b40
  414d49:	inc    edi
  414d4a:	call   0xb64e:0x602f1ca4
  414d51:	lock stos BYTE PTR es:[edi],al
  414d53:	scas   al,BYTE PTR es:[edi]
  414d54:	dec    ebp
  414d55:	jle    0x414d25
  414d57:	clc    
  414d58:	mov    ds:0x7de3def,eax
  414d5d:	jg     0x414dba
  414d5f:	cwde   
  414d60:	mov    ah,0xeb
  414d62:	(bad)  
  414d63:	jmp    0x5c6cd9ac
  414d68:	scas   al,BYTE PTR es:[edi]
  414d69:	scas   eax,DWORD PTR es:[edi]
  414d6a:	(bad)  
  414d6b:	icebp  
  414d6c:	cmp    al,0xb3
  414d6e:	xor    eax,0x930763d3
  414d73:	or     al,0x4c
  414d75:	std    
  414d76:	xchg   edi,eax
  414d77:	jmp    0xd9673cff
  414d7c:	sub    DWORD PTR [esi-0x65090fb2],0xe4e72b80
  414d86:	call   0x66ab:0x705ca69a
  414d8d:	inc    edi
  414d8e:	ret    0xf3c7
  414d91:	call   0x9ea607ca
  414d96:	scas   eax,DWORD PTR es:[edi]
  414d97:	pop    ecx
  414d98:	iret   
  414d99:	cmc    
  414d9a:	pop    edi
  414d9b:	inc    ebp
  414d9c:	add    edx,DWORD PTR [ebx+0x3a]
  414d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414da0:	in     al,dx
  414da1:	push   ebx
  414da2:	push   ecx
  414da3:	push   edi
  414da4:	stc    
  414da5:	sub    DWORD PTR [edi],esi
  414da7:	int    0x92
  414da9:	clc    
  414daa:	push   cs
  414dab:	sbb    DWORD PTR [eax],ecx
  414dad:	mul    DWORD PTR [esi]
  414daf:	add    edx,DWORD PTR [ebx+0x71]
  414db2:	test   eax,0xe2f80e7e
  414db7:	out    0xcd,eax
  414db9:	and    eax,0xb866fafa
  414dbe:	lea    ebp,[edi+eiz*8]
  414dc1:	dec    eax
  414dc2:	adc    BYTE PTR [eax-0x1a],ch
  414dc5:	inc    ebp
  414dc6:	in     eax,0x9b
  414dc8:	(bad)  
  414dc9:	lock (bad) 
  414dcc:	out    dx,eax
  414dcd:	mov    BYTE PTR [ebx+0x2a],al
  414dd0:	ret    
  414dd1:	sub    DWORD PTR [esi+0x6a1a7169],0xa9daf653
  414ddb:	mov    bh,BYTE PTR [ebx-0x2b]
  414dde:	ss pushf 
  414de0:	mov    dl,0x96
  414de2:	xchg   BYTE PTR [edi+0x42],dl
  414de5:	jge    0x414db7
  414de7:	ds in  al,0xb
  414dea:	and    al,0x19
  414dec:	retw   
  414dee:	and    BYTE PTR [ebp-0x62f946c7],bh
  414df4:	loope  0x414e3f
  414df6:	mov    bh,0xfb
  414df9:	(bad)  
  414dfa:	call   0xcb75:0xca8cba33
  414e01:	test   al,0x2d
  414e03:	pop    esi
  414e04:	ficom  WORD PTR [edi-0x40]
  414e07:	stos   BYTE PTR es:[edi],al
  414e08:	sub    edi,ebp
  414e0a:	mov    bl,BYTE PTR [eax-0x579a2ddc]
  414e10:	mov    cl,0x3a
  414e12:	mov    ebp,0xc8348e4a
  414e17:	adc    eax,0xb47cdb1d
  414e1c:	xchg   ecx,eax
  414e1d:	sub    BYTE PTR [edx+0x4c],cl
  414e20:	mov    dh,0x21
  414e22:	inc    esp
  414e23:	fcomp  st(6)
  414e25:	ja     0x414e92
  414e27:	mov    esp,0xc8229226
  414e2c:	not    DWORD PTR [ebx-0x21ffa8ba]
  414e32:	in     eax,0x2
  414e34:	pop    ecx
  414e35:	retf   
  414e36:	sub    ah,BYTE PTR [ebx-0x31]
  414e39:	(bad)  
  414e3a:	jecxz  0x414e9b
  414e3c:	xlat   BYTE PTR ds:[ebx]
  414e3d:	jo     0x414dc4
  414e3f:	jmp    0x3720fcbd
  414e44:	je     0x414e2a
  414e46:	and    bl,BYTE PTR ds:[esi-0x2857dbee]
  414e4d:	aaa    
  414e4e:	or     ah,BYTE PTR [edi-0x6a3ad4cf]
  414e54:	adc    eax,DWORD PTR [eax-0x65]
  414e57:	fwait
  414e58:	xlat   BYTE PTR ds:[ebx]
  414e59:	mov    ah,0xef
  414e5b:	push   0x48
  414e5d:	add    eax,0xe583cf9f
  414e62:	pusha  
  414e63:	push   ebx
  414e64:	js     0x414e0d
  414e66:	popa   
  414e67:	sbb    eax,0xeab6e660
  414e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e6d:	mov    esi,ecx
  414e6f:	lods   al,BYTE PTR ds:[esi]
  414e70:	clc    
  414e71:	mov    ebx,0x19ce4588
  414e76:	cwde   
  414e77:	popa   
  414e78:	(bad)  
  414e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e7a:	mov    esp,0xe72317c7
  414e7f:	imul   esp,DWORD PTR [ecx-0x3b],0x7c1b5f10
  414e86:	arpl   WORD PTR [edx],si
  414e88:	push   ecx
  414e89:	jno    0x414ec9
  414e8b:	enter  0xf484,0x21
  414e8f:	sub    ah,0x19
  414e92:	jg     0x414efa
  414e94:	fcomp  DWORD PTR [ebx+ebp*8+0x2f]
  414e98:	test   al,0xd1
  414e9a:	jbe    0x414ea7
  414e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e9d:	add    eax,eax
  414e9f:	out    0x8e,al
  414ea1:	cld    
  414ea2:	adc    DWORD PTR [esi-0x14bf551f],ecx
  414ea8:	pop    DWORD PTR cs:[esp+eiz*8+0x4d]
  414ead:	lods   al,BYTE PTR ds:[esi]
  414eae:	fs pop eax
  414eb0:	xor    al,0xd4
  414eb2:	push   ss
  414eb3:	loope  0x414e62
  414eb5:	mov    dl,0xff
  414eb7:	and    eax,DWORD PTR [eax+0xe345c18]
  414ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ebe:	adc    dl,BYTE PTR [ebp+0x7e]
  414ec1:	and    eax,DWORD PTR [edi+0x59]
  414ec4:	ins    BYTE PTR es:[edi],dx
  414ec5:	sar    DWORD PTR [ebp+0x145cb473],1
  414ecb:	(bad)  
  414ecc:	mov    ebp,0x8f06dbf9
  414ed1:	cmc    
  414ed2:	(bad)  
  414ed3:	in     eax,0xfb
  414ed5:	daa    
  414ed6:	scas   al,BYTE PTR es:[edi]
  414ed7:	retf   
  414ed8:	fbld   TBYTE PTR [eax-0x5c]
  414edb:	push   esi
  414edc:	dec    edx
  414ede:	mov    WORD PTR [edi+0x588dab6a],es
  414ee4:	test   BYTE PTR [esi-0x77],0x81
  414ee8:	int3   
  414ee9:	dec    ebx
  414eea:	mov    dh,0xb1
  414eec:	jmp    0x414ec9
  414eee:	inc    ebx
  414eef:	sbb    eax,0x61f9f48
  414ef4:	push   DWORD PTR [esi-0x3f6ebffe]
  414efa:	jp     0x414f30
  414efc:	or     DWORD PTR ds:0x91558d1e,edx
  414f02:	cdq    
  414f03:	cwde   
  414f04:	lds    edi,FWORD PTR [esi-0x2bab2ed5]
  414f0a:	sub    dl,al
  414f0c:	mov    ch,BYTE PTR [ecx+0x3e674d51]
  414f12:	jae    0x414f71
  414f14:	iret   
  414f15:	add    al,BYTE PTR [edx]
  414f17:	in     eax,dx
  414f18:	and    al,0x9a
  414f1a:	jge    0x414f85
  414f1c:	mov    ds,WORD PTR [ebp+0x37b4e0f7]
  414f22:	adc    bl,ah
  414f24:	xor    ah,BYTE PTR [edi+eax*1-0x79f401cc]
  414f2b:	sbb    BYTE PTR [esi],cl
  414f2d:	mov    dl,0x20
  414f2f:	aaa    
  414f30:	mov    esp,0xa67c2e81
  414f35:	or     eax,0x6360d6ec
  414f3a:	adc    al,0xb4
  414f3c:	gs mov es,eax
  414f3f:	mov    ds:0x93a8f5b4,eax
  414f44:	bound  edx,QWORD PTR ds:0xdc8c99c0
  414f4a:	(bad)  
  414f4b:	outs   dx,BYTE PTR ds:[esi]
  414f4c:	out    dx,al
  414f4d:	(bad)  
  414f4e:	sub    al,0x6a
  414f50:	dec    esp
  414f51:	xor    eax,0x10098610
  414f56:	xor    eax,0x40cb3ff
  414f5b:	out    dx,al
  414f5c:	pop    ecx
  414f5d:	aaa    
  414f5e:	fst    DWORD PTR [esi]
  414f60:	inc    edx
  414f61:	sbb    ah,ah
  414f63:	dec    ebp
  414f64:	jno    0x414fda
  414f66:	aas    
  414f67:	loop   0x414f79
  414f69:	dec    eax
  414f6a:	mov    dl,0x91
  414f6c:	and    dh,BYTE PTR [ecx]
  414f6e:	cld    
  414f6f:	dec    esp
  414f70:	and    eax,0x5c4eb527
  414f75:	fstp   DWORD PTR [edx+0x61]
  414f78:	(bad)  
  414f7a:	cmovge ebx,DWORD PTR [esi]
  414f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f7e:	adc    eax,0xae663762
  414f83:	xchg   DWORD PTR [esi+eiz*2],edi
  414f86:	ret    
  414f87:	test   BYTE PTR [esp+edi*4-0x76375eb6],cl
  414f8e:	loopne 0x415000
  414f90:	lea    ebx,[edx+0x1c]
  414f93:	and    edx,DWORD PTR [ebx]
  414f95:	ds stc 
  414f97:	push   edx
  414f98:	in     eax,0x7c
  414f9a:	push   esi
  414f9b:	add    WORD PTR [ebp-0x5f5fd956],bp
  414fa2:	xchg   edi,eax
  414fa3:	inc    edi
  414fa4:	bound  edx,QWORD PTR [edi]
  414fa6:	ficom  WORD PTR [edx+0x39]
  414fa9:	cmp    ah,al
  414fab:	jmp    0xc9dc:0x6cfa91dd
  414fb2:	mov    ch,0x9c
  414fb4:	mov    eax,0x3041580c
  414fb9:	inc    esp
  414fba:	stos   BYTE PTR es:[edi],al
  414fbb:	cmc    
  414fbc:	das    
  414fbd:	cmp    DWORD PTR [esi+0x48],esp
  414fc0:	or     ebp,ebp
  414fc2:	into   
  414fc3:	es enter 0x522e,0x53
  414fc8:	pop    ecx
  414fc9:	xchg   ebp,eax
  414fca:	inc    ebp
  414fcb:	stos   BYTE PTR es:[edi],al
  414fcc:	jmp    DWORD PTR [edi-0x28]
  414fcf:	loope  0x41500a
  414fd1:	out    dx,al
  414fd2:	sub    BYTE PTR [ecx],cl
  414fd4:	jmp    0x474e:0x2a07a91c
  414fdb:	xchg   edx,eax
  414fdc:	mov    WORD PTR ds:0xef23ba25,ds
  414fe2:	out    0x8,al
  414fe4:	mov    cl,0x2d
  414fe6:	mov    edx,0x1dcd6732
  414feb:	repz pop ecx
  414fed:	xchg   esi,eax
  414fee:	xchg   esi,eax
  414fef:	lods   eax,DWORD PTR ds:[esi]
  414ff0:	dec    ecx
  414ff1:	pop    esp
  414ff2:	cmp    DWORD PTR [edi],esi
  414ff4:	shr    ah,1
  414ff6:	out    0x88,eax
  414ff8:	adc    BYTE PTR [edx+ebp*2-0x52efca0f],bl
  414fff:	loopne 0x414fd0
  415001:	mov    edx,0xf2c8e927
  415006:	(bad)  
  415007:	leave  
  415008:	mov    DWORD PTR [edi+ecx*2],esp
  41500b:	xlat   BYTE PTR ds:[ebx]
  41500c:	mov    edi,0x7cdfaee5
  415011:	(bad)  
  415012:	leave  
  415013:	fabs   
  415015:	xor    edi,DWORD PTR [esi+0x25a39b22]
  41501b:	ins    BYTE PTR es:[edi],dx
  41501c:	jl     0x414fc8
  41501e:	test   al,0xf2
  415020:	sub    DWORD PTR [edi-0x35dcd4bf],edi
  415026:	leave  
  415027:	retf   
  415028:	fstp   QWORD PTR [esi-0x274cffda]
  41502e:	sbb    ebp,DWORD PTR [esi-0x26c5ed7c]
  415034:	lods   al,BYTE PTR ds:[esi]
  415035:	jle    0x41508f
  415037:	jns    0x415064
  415039:	sub    bh,dh
  41503b:	dec    esi
  41503c:	mov    WORD PTR [edi+0x3d],ds
  41503f:	jnp    0x415023
  415041:	adc    ah,bh
  415043:	cld    
  415044:	xchg   edx,eax
  415045:	nop
  415046:	popf   
  415047:	inc    edx
  415048:	in     eax,0xd8
  41504a:	pop    esp
  41504b:	mov    eax,ds:0x929352a6
  415050:	or     dh,BYTE PTR [ebp-0x6f]
  415053:	test   DWORD PTR [ecx+0x6f25ce25],eax
  415059:	mov    edi,0x44a24ffb
  41505e:	lock bnd jg 0x415046
  415062:	fdiv   QWORD PTR [esi+ebx*1]
  415065:	push   edx
  415066:	xchg   edi,eax
  415067:	fldcw  WORD PTR ds:0xe560513b
  41506d:	and    DWORD PTR [esi-0x6b23c8ef],0xfcf77788
  415077:	push   0x2c
  415079:	jg     0x4150b9
  41507b:	data16 daa 
  41507d:	adc    bl,BYTE PTR [edi-0x49]
  415080:	fimul  DWORD PTR [ebp-0x1c]
  415083:	popf   
  415084:	cmp    DWORD PTR [ecx+0x5b],esp
  415087:	or     ebx,DWORD PTR [eax]
  415089:	xchg   DWORD PTR [ebp-0x48],ebx
  41508c:	test   BYTE PTR [ecx+eiz*4],al
  41508f:	pop    ebp
  415090:	inc    esp
  415091:	inc    ebx
  415092:	jp     0x41503d
  415094:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415096:	or     BYTE PTR [esi-0x519595ad],bh
  41509c:	outs   dx,DWORD PTR ds:[esi]
  41509d:	cmp    ecx,esp
  41509f:	pop    edx
  4150a0:	fwait
  4150a1:	push   ecx
  4150a2:	loop   0x415121
  4150a4:	fbld   TBYTE PTR [ecx+ebp*4+0x6b]
  4150a8:	adc    al,0xd8
  4150aa:	or     esp,DWORD PTR [esp+eiz*4-0x4b]
  4150ae:	and    esi,ebx
  4150b0:	dec    esp
  4150b1:	jg     0x4150ac
  4150b3:	push   0xfffffffb
  4150b5:	lods   eax,DWORD PTR ds:[esi]
  4150b6:	shl    cl,cl
  4150b8:	and    al,0x61
  4150ba:	aad    0xed
  4150bc:	add    edi,DWORD PTR [ebx]
  4150be:	imul   eax,edi,0x955318f7
  4150c4:	lods   eax,DWORD PTR ds:[esi]
  4150c5:	inc    edx
  4150c6:	mov    bh,0x54
  4150c8:	xor    al,0xe0
  4150ca:	call   0xa179:0x7c0ad978
  4150d1:	out    0x5e,eax
  4150d3:	ret    
  4150d4:	dec    edi
  4150d5:	jle    0x4150c9
  4150d7:	and    eax,0x6ffb6866
  4150dc:	retf   0x8812
  4150df:	sub    al,0x6e
  4150e1:	xchg   ebp,eax
  4150e2:	and    cl,dl
  4150e4:	pop    ebp
  4150e5:	retf   
  4150e6:	inc    eax
  4150e7:	inc    eax
  4150e8:	sbb    dl,BYTE PTR [ebx-0x3388c68d]
  4150ee:	in     eax,dx
  4150ef:	es fs mov ebx,0x905fd66
  4150f6:	jo     0x415130
  4150f8:	sbb    DWORD PTR [edi-0x17410083],0x4308068a
  415102:	aam    0x84
  415104:	pop    esi
  415105:	ins    BYTE PTR es:[edi],dx
  415106:	sbb    dl,BYTE PTR [ebp-0x1f7d777f]
  41510c:	lods   al,BYTE PTR ds:[esi]
  41510d:	sub    dl,al
  41510f:	ret    0xf821
  415112:	ss test eax,esp
  415115:	jne    0x415097
  415117:	in     eax,dx
  415118:	mov    bl,0x37
  41511a:	mov    bh,0xfe
  41511c:	loopne 0x4150ba
  41511e:	mov    edi,DWORD PTR [ecx]
  415120:	shl    DWORD PTR [eax],1
  415122:	push   eax
  415123:	sti    
  415124:	lahf   
  415125:	jmp    0x9528e3b8
  41512a:	sbb    DWORD PTR [ebp+eax*4+0x1a],ebp
  41512e:	cmp    al,0xac
  415130:	push   ecx
  415131:	mov    eax,ds:0xc5b1da67
  415136:	ss mov dh,0x17
  415139:	(bad)  
  41513b:	mov    cl,BYTE PTR [eax]
  41513d:	mov    cl,0x4b
  41513f:	push   edi
  415140:	aaa    
  415141:	imul   ebp,DWORD PTR [esi+0x27],0x85369308
  415148:	xchg   ecx,eax
  415149:	scas   eax,DWORD PTR es:[edi]
  41514a:	cmp    eax,0xaf7ae9c2
  41514f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415150:	popa   
  415151:	jno    0x41512f
  415153:	imul   ebx,esp,0xfaef8346
  415159:	sub    DWORD PTR [edi+eiz*1],ebx
  41515c:	jnp    0x415101
  41515e:	dec    esi
  41515f:	aas    
  415160:	punpcklbw mm7,DWORD PTR [edi+0x4caef525]
  415167:	pop    esi
  415168:	repnz sbb ebp,DWORD PTR ds:[ebx]
  41516c:	jbe    0x415129
  41516e:	jle    0x41516f
  415170:	cmp    DWORD PTR [ebp+0x2ffc9f2a],0x48
  415177:	jb     0x41510a
  415179:	fidiv  DWORD PTR [esi-0x3167f5bc]
  41517f:	fs lock loop 0x415117
  415183:	fnstenv [ecx]
  415185:	rcl    ebx,1
  415187:	retf   0x89f5
  41518a:	call   0x4e34:0xec0991e6
  415191:	jae    0x415132
  415193:	(bad)  
  415194:	dec    esi
  415195:	xor    eax,0xdda60498
  41519a:	fld    QWORD PTR [ebx-0x25729a34]
  4151a0:	div    DWORD PTR [ecx+ebp*4-0x7b]
  4151a4:	js     0x41519f
  4151a6:	fisub  WORD PTR [ebx+0x3a7e0f2e]
  4151ac:	imul   esp,DWORD PTR [esi+ebp*4],0xffffffef
  4151b0:	cmp    al,BYTE PTR [ebp-0x6c]
  4151b3:	mov    ebx,DWORD PTR [ecx]
  4151b5:	jmp    0x415162
  4151b7:	xchg   ecx,eax
  4151b8:	sbb    DWORD PTR [ebx-0x52],edx
  4151bb:	enter  0xcf08,0x86
  4151bf:	call   0x492ddbc8
  4151c4:	and    edi,DWORD PTR [ebx+0x1a]
  4151c7:	repz adc BYTE PTR [ebx+0x64373e41],cl
  4151ce:	retf   
  4151cf:	shr    bh,1
  4151d1:	test   ebp,0x1c425eba
  4151d7:	pop    ebx
  4151d8:	enter  0x286,0xaa
  4151dc:	adc    al,dh
  4151de:	rcl    BYTE PTR [eax-0x47],1
  4151e1:	mov    BYTE PTR [ecx],cl
  4151e3:	sub    eax,0x419a8161
  4151e8:	and    al,0xc1
  4151ea:	(bad)  
  4151eb:	pusha  
  4151ec:	std    
  4151ed:	mov    DWORD PTR [esi],edi
  4151ef:	inc    edx
  4151f0:	jp     0x41526e
  4151f2:	sub    DWORD PTR [edx+0x64fbb239],edx
  4151f8:	lds    ebp,FWORD PTR [esi-0x43]
  4151fb:	or     BYTE PTR [esi-0x6e],dh
  4151fe:	xchg   esi,eax
  4151ff:	sbb    esi,eax
  415201:	(bad)  
  415202:	jne    0x4151f1
  415204:	xchg   ebx,eax
  415205:	jns    0x41521a
  415207:	nop
  415208:	cmp    al,0x63
  41520a:	ins    BYTE PTR es:[edi],dx
  41520b:	shl    BYTE PTR [edx+0x7b6cc393],1
  415211:	xchg   ebp,eax
  415212:	dec    ebx
  415213:	(bad)  
  415214:	or     DWORD PTR [edi+0x8],esp
  415217:	ins    DWORD PTR es:[edi],dx
  415218:	fist   DWORD PTR [esi-0x18]
  41521b:	js     0x4151cd
  41521d:	lea    edi,[edx]
  41521f:	outs   dx,BYTE PTR ds:[esi]
  415220:	test   BYTE PTR [esi+ecx*4+0x45],al
  415224:	push   esp
  415225:	aam    0xee
  415227:	je     0x41520c
  415229:	xchg   ebx,eax
  41522a:	jp     0x4151fa
  41522c:	aaa    
  41522d:	mov    bh,0xa8
  41522f:	adc    DWORD PTR [eax-0x55664454],0x7f
  415236:	push   ebx
  415237:	cmc    
  415238:	cmp    BYTE PTR [ebp-0x4],0x6f
  41523c:	xchg   ebx,eax
  41523e:	sbb    BYTE PTR [ebx-0x22],cl
  415241:	call   0x641487b2
  415246:	ret    
  415247:	xchg   ecx,eax
  415248:	push   ebx
  415249:	nop
  41524a:	push   0xb2f1b886
  41524f:	mov    dh,0xfd
  415251:	sub    DWORD PTR [ecx+0x37],eax
  415254:	iret   
  415255:	aad    0xb0
  415257:	out    0xd9,eax
  415259:	dec    esi
  41525a:	dec    edi
  41525b:	mov    WORD PTR [edi+0x6e],cs
  41525e:	lds    edi,FWORD PTR [eax]
  415260:	cmp    esp,DWORD PTR [ebx]
  415262:	lahf   
  415263:	dec    edx
  415264:	enter  0x3b9a,0xa4
  415268:	xor    al,0x69
  41526a:	loopne 0x41527e
  41526c:	xchg   esi,eax
  41526d:	ror    BYTE PTR [ecx-0x2b00571f],1
  415273:	out    dx,al
  415274:	mov    ds:0xe80d8c79,eax
  415279:	mov    ds:0x3499a36,al
  41527e:	or     eax,DWORD PTR [edx]
  415280:	inc    esp
  415281:	pusha  
  415282:	mov    ch,0xab
  415284:	mov    ds:0xe350f51c,eax
  415289:	lods   al,BYTE PTR ds:[esi]
  41528a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41528b:	retf   
  41528c:	mov    ds:0xbcca332e,eax
  415291:	test   BYTE PTR [ebp-0x27f6b5ad],dh
  415297:	out    0xe1,eax
  415299:	fild   WORD PTR [esi]
  41529b:	sbb    BYTE PTR [ebx-0x1f],0x2f
  41529f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a0:	(bad)  
  4152a1:	out    0xfe,al
  4152a3:	lods   eax,DWORD PTR ds:[esi]
  4152a4:	ds je  0x415254
  4152a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a8:	add    esi,DWORD PTR [ebx]
  4152aa:	or     al,0x60
  4152ac:	adc    ch,BYTE PTR [ebx]
  4152ae:	lea    edx,[edx-0x26]
  4152b1:	xchg   bh,dh
  4152b3:	mov    ah,BYTE PTR [edi+0x5bcc621e]
  4152b9:	iret   
  4152ba:	addr16 jb 0x415262
  4152bd:	scas   al,BYTE PTR es:[edi]
  4152be:	adc    BYTE PTR [edi],cl
  4152c0:	js     0x4152b9
  4152c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c3:	push   0xe002b56f
  4152c8:	(bad)  
  4152c9:	sbb    DWORD PTR [edx-0x46ad4e58],esp
  4152cf:	into   
  4152d0:	gs leave 
  4152d2:	push   esp
  4152d3:	jge    0x415350
  4152d5:	xchg   ecx,eax
  4152d6:	jge    0x4152c9
  4152d8:	into   
  4152d9:	xchg   ebp,eax
  4152da:	sbb    dh,BYTE PTR [esi]
  4152dc:	pusha  
  4152dd:	fs inc ecx
  4152df:	into   
  4152e0:	cmp    al,0x11
  4152e2:	cli    
  4152e3:	and    DWORD PTR [ebp+0x2c],0x71
  4152e7:	rcl    DWORD PTR [ecx+0x60e4d968],0xd9
  4152ee:	mov    al,0x2c
  4152f0:	cmp    ebp,DWORD PTR [esi+0x20]
  4152f3:	nop
  4152f4:	inc    ebx
  4152f5:	xchg   BYTE PTR [edx+0x3a4c7ed4],al
  4152fb:	cmc    
  4152fc:	xchg   DWORD PTR [eax+0xa],esi
  4152ff:	mov    cl,0xea
  415301:	xor    dh,cl
  415303:	mov    dh,BYTE PTR [edi]
  415305:	or     bl,dl
  415307:	out    0x8a,eax
  415309:	add    DWORD PTR [eax],edx
  41530b:	lods   eax,DWORD PTR ds:[esi]
  41530c:	adc    DWORD PTR [ecx],ebp
  41530e:	sub    BYTE PTR [edx],al
  415310:	sbb    eax,0x77de6fde
  415315:	or     dl,BYTE PTR [ebx+0x62684ab4]
  41531b:	pop    ebp
  41531c:	shl    DWORD PTR [ebx],0x8c
  41531f:	cld    
  415320:	jp     0x415374
  415322:	mov    edx,0xd05e31cc
  415327:	adc    eax,0xea81d8e5
  41532c:	or     cl,BYTE PTR [ecx-0x41134656]
  415332:	mov    dh,0xa9
  415334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415335:	mov    edx,DWORD PTR [ebx-0x5bda94bf]
  41533b:	or     DWORD PTR [esi-0xf],ebp
  41533e:	push   ecx
  41533f:	jle    0x4152e5
  415341:	je     0x415349
  415343:	cmp    eax,DWORD PTR [eax+0x71]
  415346:	outs   dx,DWORD PTR ds:[esi]
  415347:	cmp    ebp,eax
  415349:	(bad)  
  41534a:	push   0xf597076e
  41534f:	scas   al,BYTE PTR es:[edi]
  415350:	adc    esi,DWORD PTR [ecx+0x760f352d]
  415356:	popf   
  415357:	dec    edi
  415358:	mov    cl,0xc5
  41535a:	mov    esi,0x56382e4f
  41535f:	and    BYTE PTR [esi+0x324835e],ah
  415365:	jbe    0x41535f
  415367:	xor    edi,ebx
  415369:	mov    cs:0x6ed74d30,eax
  41536f:	jl     0x415398
  415371:	rcr    esi,0xf8
  415374:	enter  0x77ba,0x54
  415378:	add    DWORD PTR [ebp+0x5d3223b9],ecx
  41537e:	mov    ebx,0xadb59ca4
  415383:	arpl   dx,bp
  415385:	(bad)  
  415387:	not    al
  415389:	add    al,0xa7
  41538b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538c:	push   esp
  41538d:	pop    es
  41538e:	imul   ecx,DWORD PTR [ecx+edi*4],0x91278dd6
  415395:	popa   
  415396:	repnz ins DWORD PTR es:[edi],dx
  415398:	jnp    0x41540d
  41539a:	lock cmp BYTE PTR [ebp+0x64fbeec7],bh
  4153a1:	js     0x41536b
  4153a3:	out    dx,eax
  4153a4:	cwde   
  4153a5:	cmp    ah,BYTE PTR [ecx-0x22]
  4153a8:	hlt    
  4153a9:	fbstp  TBYTE PTR [esi-0x39]
  4153ac:	outs   dx,BYTE PTR ds:[esi]
  4153ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ae:	sar    BYTE PTR [edi-0x2fbf9d56],0x11
  4153b5:	rcr    DWORD PTR [edx+0x59],1
  4153b8:	jae    0x41535d
  4153ba:	cmp    ecx,DWORD PTR [di+0x1b]
  4153be:	sahf   
  4153bf:	inc    edi
  4153c0:	xchg   esi,eax
  4153c1:	jns    0x41534d
  4153c3:	idiv   esp
  4153c5:	xchg   DWORD PTR [ecx-0x5f],ebp
  4153c8:	dec    ecx
  4153c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ca:	mov    ds:0x6840f6e5,al
  4153cf:	jne    0x4153d8
  4153d1:	lea    edx,[ecx+0x421c7301]
  4153d7:	and    DWORD PTR [ecx+0x2b],edx
  4153da:	sbb    edi,DWORD PTR [esi+eax*8-0x6116d989]
  4153e1:	inc    esp
  4153e2:	or     edx,DWORD PTR [edi+0x21e9626c]
  4153e8:	jne    0x41537c
  4153ea:	addr16 loope 0x4153b0
  4153ed:	jle    0x4153a7
  4153ef:	push   ecx
  4153f0:	pop    ebp
  4153f1:	mov    DWORD PTR [eax+0x78],ebx
  4153f4:	fbld   TBYTE PTR [esi]
  4153f6:	fldcw  WORD PTR [edi]
  4153f8:	sbb    BYTE PTR [ecx+0x3d],dh
  4153fb:	das    
  4153fc:	mov    ss,WORD PTR [ebx-0x64eeb297]
  415402:	pushf  
  415403:	shl    DWORD PTR ds:0xd27faa41,cl
  415409:	pushf  
  41540a:	std    
  41540b:	inc    ecx
  41540c:	mov    cl,al
  41540e:	or     BYTE PTR [edx+0x3b],cl
  415411:	mov    ch,0x3b
  415413:	enter  0x464d,0xe2
  415417:	aas    
  415418:	inc    esp
  415419:	(bad)  
  41541b:	mov    al,ds:0x820ec0be
  415420:	out    dx,al
  415421:	pop    esi
  415422:	inc    esi
  415423:	xchg   esi,eax
  415424:	iret   
  415425:	mov    dl,0xfb
  415427:	stos   DWORD PTR es:[edi],eax
  415428:	mov    WORD PTR [ebx-0x5c],?
  41542b:	in     eax,0xe0
  41542d:	mov    esp,0xc594d09
  415432:	mov    bl,0x48
  415434:	dec    ebp
  415435:	xchg   BYTE PTR [ecx],ch
  415437:	push   ebp
  415438:	ds loope 0x4153c2
  41543b:	mov    ds:0x602bfc3a,al
  415440:	icebp  
  415441:	xchg   edi,eax
  415442:	and    esi,ebp
  415444:	mov    BYTE PTR [esi-0x1d],al
  415447:	xchg   esi,eax
  415448:	repnz adc BYTE PTR [ebx+0x10373f72],bl
  41544f:	imul   ebp,DWORD PTR [esi],0x9caa33b8
  415455:	push   es
  415456:	mov    DWORD PTR [edi+edi*1-0x6],ecx
  41545a:	ds push esi
  41545c:	or     ah,ah
  41545e:	xchg   edi,eax
  41545f:	mov    WORD PTR [ebp+0x41],?
  415462:	cmp    al,0x75
  415464:	lock cmp al,BYTE PTR [edx+eiz*4-0x4ada7d23]
  41546c:	xor    DWORD PTR [ebp+0x128c0e0e],0x36
  415473:	mov    BYTE PTR [edi-0x72],ah
  415476:	out    0x71,al
  415478:	mov    cl,0x47
  41547a:	call   0x394704f1
  41547f:	jbe    0x415486
  415481:	fimul  DWORD PTR [eax]
  415483:	xchg   esi,eax
  415484:	cmp    esp,DWORD PTR [ecx+esi*2]
  415487:	sti    
  415488:	mov    ebp,0x9652e9c4
  41548d:	in     eax,0x11
  41548f:	scas   al,BYTE PTR es:[edi]
  415490:	push   0xffffffea
  415492:	adc    eax,DWORD PTR [edx]
  415494:	jns    0x4154ea
  415496:	sbb    ah,0x1
  415499:	cdq    
  41549a:	rcr    DWORD PTR [esi+ecx*2-0x45869171],cl
  4154a1:	cmp    edx,DWORD PTR [bx-0x19e2]
  4154a6:	outs   dx,BYTE PTR ds:[esi]
  4154a7:	push   edi
  4154a8:	clc    
  4154a9:	mov    esi,0x75c6d79f
  4154ae:	int3   
  4154af:	pop    es
  4154b0:	or     esp,esi
  4154b2:	mov    ebx,0xe9ad2798
  4154b7:	test   al,0x61
  4154b9:	adc    al,0xb9
  4154bb:	and    edx,eax
  4154bd:	and    eax,DWORD PTR [edi+0x444c6e95]
  4154c3:	jmp    0x88ee:0xeadee9b3
  4154ca:	jae    0x4154f3
  4154cc:	or     bh,BYTE PTR [edi+edx*4]
  4154cf:	inc    edi
  4154d0:	cmp    al,BYTE PTR [ecx+0x681f3064]
  4154d6:	sbb    dl,BYTE PTR [eax-0x3e]
  4154d9:	shr    eax,1
  4154db:	jecxz  0x415479
  4154dd:	jl     0x4154ad
  4154df:	and    BYTE PTR [ecx+0xc5f8cb6],ch
  4154e5:	jns    0x415513
  4154e7:	aaa    
  4154e8:	ins    DWORD PTR es:[edi],dx
  4154e9:	(bad)  
  4154ea:	in     eax,dx
  4154eb:	mov    ebp,0x3e87d6b3
  4154f0:	push   esi
  4154f1:	popa   
  4154f2:	pop    esp
  4154f3:	mov    ch,0xba
  4154f5:	cmp    cl,BYTE PTR [esi]
  4154f7:	xchg   esp,eax
  4154f8:	fldcw  WORD PTR [edx+0x49ab2f5d]
  4154fe:	cmp    eax,0x596c1c98
  415503:	sbb    DWORD PTR [eax],0x700bb446
  415509:	int    0x9e
  41550b:	hlt    
  41550c:	std    
  41550d:	inc    ebp
  41550e:	sbb    eax,0x685440fd
  415513:	pop    ss
  415514:	jle    0x415541
  415516:	imul   esp,ebp,0x3ed3c210
  41551c:	mov    WORD PTR [esi],cs
  41551e:	imul   edx,DWORD PTR [ecx],0x72
  415521:	or     eax,0xe9741949
  415526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415527:	pop    es
  415528:	push   ebp
  415529:	call   0x777c7e78
  41552e:	popf   
  41552f:	xor    al,0x21
  415531:	sbb    al,0x7a
  415533:	mov    DWORD PTR [edi-0x18],eax
  415536:	sbb    dh,cl
  415538:	in     eax,dx
  415539:	dec    eax
  41553a:	mov    bl,0xc
  41553c:	in     al,dx
  41553d:	bound  esi,QWORD PTR [eax+0x6f]
  415540:	push   ds
  415541:	xor    eax,0xd14059a0
  415546:	in     eax,dx
  415547:	inc    esi
  415548:	sub    BYTE PTR [ebx-0x459b9b6],ah
  41554e:	inc    eax
  41554f:	(bad)  
  415550:	out    dx,al
  415551:	or     dl,BYTE PTR [esi+0x12]
  415554:	aas    
  415555:	or     DWORD PTR [edi+esi*2+0x6e],ebx
  415559:	push   ds
  41555a:	int3   
  41555b:	clc    
  41555c:	leave  
  41555d:	cmp    BYTE PTR [ecx+eax*4+0x44],0xef
  415562:	fwait
  415563:	jge    0x747f04a4
  415569:	mov    dl,0x52
  41556b:	mov    edx,0xf2973246
  415570:	mov    ds:0xeb59c85b,al
  415575:	aaa    
  415576:	or     DWORD PTR [edx],0x7
  415579:	mov    ebx,0x567bbac5
  41557e:	es call 0x170c:0x3a74c62b
  415586:	sub    eax,0xde09dad2
  41558b:	add    bh,BYTE PTR [edi+0x65]
  41558e:	lock out 0xbc,eax
  415591:	or     eax,0xcd064fc8
  415596:	(bad)  
  415597:	ins    BYTE PTR es:[edi],dx
  415598:	arpl   WORD PTR [ebp+0x44],cx
  41559b:	jecxz  0x415617
  41559d:	push   edi
  41559e:	ret    
  41559f:	dec    BYTE PTR [eax+0x48f40867]
  4155a5:	mov    eax,0x182fcebc
  4155aa:	fwait
  4155ab:	mov    esp,0x2a9ff909
  4155b0:	test   BYTE PTR [edi],0xc2
  4155b3:	sbb    ebx,0x4f
  4155b6:	mov    al,0x29
  4155b8:	mov    ds:0xb09731b9,eax
  4155bd:	xchg   edi,eax
  4155be:	mov    ebp,0x9c06b617
  4155c3:	outs   dx,DWORD PTR ds:[esi]
  4155c4:	mov    al,ds:0x9b893f1
  4155c9:	cmp    BYTE PTR [ecx],bl
  4155cb:	mov    BYTE PTR [ecx-0x4d499a97],bl
  4155d1:	popa   
  4155d2:	mov    ah,0xa5
  4155d4:	in     eax,dx
  4155d5:	mov    WORD PTR [edi+0x3a],cs
  4155d8:	jns    0x4155e8
  4155da:	push   es
  4155db:	test   BYTE PTR [ebp-0x6c5d38b6],dl
  4155e1:	push   cs
  4155e2:	call   0x34ddfc9
  4155e7:	xor    ebx,DWORD PTR [edx]
  4155e9:	jnp    0x415654
  4155eb:	mov    ss,edi
  4155ed:	fsub   DWORD PTR ds:0x2d70eca6
  4155f3:	fcomip st,st(5)
  4155f5:	aas    
  4155f6:	pusha  
  4155f7:	(bad)  
  4155f8:	fidiv  WORD PTR [ecx]
  4155fa:	aad    0x46
  4155fc:	fcomip st,st(2)
  4155fe:	pop    eax
  4155ff:	arpl   WORD PTR [eax],bp
  415601:	rol    cl,0x19
  415604:	add    bl,BYTE PTR [edi]
  415606:	mov    eax,DWORD PTR [edx-0x6a753e7e]
  41560c:	pop    ds
  41560d:	cdq    
  41560e:	push   ecx
  41560f:	ja     0x4155d7
  415611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415612:	xchg   BYTE PTR [esi],ch
  415614:	push   ds
  415615:	xchg   ecx,eax
  415616:	(bad)  
  415617:	xchg   esi,eax
  415618:	sar    DWORD PTR [edi],cl
  41561a:	sbb    dl,BYTE PTR [edx]
  41561c:	ficom  WORD PTR [eax-0x50d42541]
  415622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415623:	or     eax,0xb3251473
  415628:	adc    al,0x7c
  41562a:	js     0x415692
  41562c:	mov    ebx,0x583e6d8e
  415631:	sbb    al,0x7f
  415633:	dec    ebp
  415634:	lahf   
  415635:	ins    BYTE PTR es:[edi],dx
  415636:	call   0x6ba7:0xd7ab63a3
  41563d:	popf   
  41563e:	(bad)  
  41563f:	push   ebp
  415640:	stc    
  415641:	ror    BYTE PTR [ecx+0x3d4c703b],1
  415647:	and    al,0xbf
  415649:	lock xor al,0x14
  41564c:	add    edx,DWORD PTR ds:0x7b6e4a13
  415652:	mov    edx,0x7f0303d1
  415657:	cmp    eax,0x67effb13
  41565c:	(bad)  
  41565d:	(bad)  
  41565e:	mov    dh,0x47
  415660:	rcr    ecx,cl
  415662:	dec    ecx
  415663:	(bad)  
  415664:	icebp  
  415665:	and    cl,0x9f
  415668:	mov    edi,0x16bacbc2
  41566d:	mov    ds:0x7bddc13c,al
  415672:	icebp  
  415673:	pop    ss
  415674:	fsubr  QWORD PTR [ebx-0x5f98f3ef]
  41567a:	fimul  DWORD PTR [eax-0x55e899be]
  415680:	sub    bh,dl
  415682:	repz in al,0x29
  415685:	shl    DWORD PTR [edx+0x67d9cde2],1
  41568b:	(bad)  
  41568c:	popf   
  41568d:	or     ebx,esp
  41568f:	hlt    
  415690:	mov    ecx,0x16a71526
  415695:	push   ebp
  415696:	add    DWORD PTR gs:[edx+edi*8+0x2f],eax
  41569b:	cmp    BYTE PTR [ebx-0x15],dl
  41569e:	cs inc ebp
  4156a0:	in     al,0x45
  4156a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a3:	pushf  
  4156a4:	adc    eax,0x90f34157
  4156a9:	or     bl,ah
  4156ab:	push   ebx
  4156ac:	lds    ebx,FWORD PTR [edi+0xca75be2]
  4156b2:	ja     0x41569c
  4156b4:	mov    edi,0xcf6ea528
  4156b9:	(bad)  [eax+ebx*8-0x36efb74b]
  4156c0:	sbb    dh,cl
  4156c2:	aaa    
  4156c3:	jmp    0x4156eb
  4156c5:	mov    ecx,0x6cafc063
  4156ca:	cld    
  4156cb:	lods   eax,DWORD PTR ds:[esi]
  4156cc:	dec    edi
  4156cd:	call   0x193c:0x9ca57c01
  4156d4:	lds    eax,FWORD PTR [eax]
  4156d6:	fcomp  DWORD PTR ds:0xe1667311
  4156dc:	push   esp
  4156dd:	jnp    0x4156fd
  4156df:	inc    ebp
  4156e0:	mov    bl,0x44
  4156e2:	(bad)  
  4156e3:	hlt    
  4156e4:	fisub  DWORD PTR [eax-0x53eb90f2]
  4156ea:	loop   0x4156bd
  4156ec:	mov    dl,BYTE PTR [ebx+0x38]
  4156ef:	cmp    eax,DWORD PTR [ebx+edx*4-0x25a7043]
  4156f6:	shr    DWORD PTR ds:0x4ad5a837,0xdd
  4156fd:	mov    ecx,0xbdcc8c61
  415702:	mov    esp,0xd57364b8
  415707:	(bad)  
  415708:	fbstp  TBYTE PTR [eax+esi*4]
  41570b:	dec    edi
  41570c:	jmp    0x41576c
  41570e:	add    BYTE PTR [edi+0x38612803],dl
  415714:	aas    
  415715:	call   0x5ae1dcbc
  41571a:	and    al,0x41
  41571c:	imul   ecx,ebx,0xffffffd2
  41571f:	daa    
  415720:	loopne 0x4156f1
  415722:	popa   
  415723:	cmp    bh,ah
  415725:	retf   
  415726:	(bad)  
  415727:	sar    BYTE PTR [esi],cl
  415729:	xor    DWORD PTR [ecx-0x6c6a3806],esi
  41572f:	push   ds
  415730:	dec    edx
  415731:	dec    ebx
  415732:	enter  0xd2,0xa0
  415736:	sub    BYTE PTR [eax],ch
  415738:	jno    0x41571e
  41573a:	mov    ecx,0x851e99d9
  41573f:	loop   0x4157bb
  415741:	add    DWORD PTR [edx-0x5f],esp
  415744:	sub    bh,BYTE PTR [edx-0xa375ce6]
  41574a:	outs   dx,DWORD PTR ds:[esi]
  41574b:	neg    DWORD PTR [ebp+0xa7f42bf]
  415751:	outs   dx,BYTE PTR ds:[esi]
  415752:	mov    al,ds:0x23d502e
  415757:	xchg   esi,eax
  415758:	mov    eax,ds:0x42eba233
  41575d:	lods   al,BYTE PTR ds:[esi]
  41575e:	les    edi,FWORD PTR [ecx-0xd]
  415761:	xor    eax,0x84920d78
  415766:	in     eax,0xc8
  415768:	mov    al,ds:0x945f7be3
  41576d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41576e:	pop    ebx
  41576f:	or     DWORD PTR [eax-0x69b30117],ecx
  415775:	mov    ebx,0xae1f949a
  41577a:	mov    eax,0x1c636b3f
  41577f:	jp     0x415797
  415781:	stos   WORD PTR es:[edi],ax
  415783:	or     al,0x5a
  415785:	mov    cl,BYTE PTR [ecx-0x3501f36c]
  41578b:	or     esi,DWORD PTR [eax-0x4f]
  41578e:	call   0x16f1bb2c
  415793:	(bad)  
  415794:	adc    BYTE PTR [eax+0xbde8561],ah
  41579a:	iret   
  41579b:	add    al,0x2e
  41579d:	dec    esp
  41579e:	stos   BYTE PTR es:[edi],al
  41579f:	retf   
  4157a0:	sbb    al,0xc2
  4157a2:	pop    esi
  4157a3:	mov    ecx,0x932acfec
  4157a8:	rcl    al,0x22
  4157ab:	sahf   
  4157ac:	in     al,dx
  4157ad:	out    dx,eax
  4157ae:	sbb    DWORD PTR [ebp+ebx*4-0x15],ecx
  4157b2:	jge    0x4157b8
  4157b4:	cld    
  4157b5:	rcr    DWORD PTR [esi+0x50],1
  4157b8:	mov    cl,0xf5
  4157ba:	jle    0x415749
  4157bc:	mov    ecx,0x40ca780a
  4157c1:	lahf   
  4157c2:	vpcomfalseb xmm5,xmm0,xmm5
  4157c8:	xchg   bl,dl
  4157ca:	jns    0x4157c4
  4157cc:	pop    edi
  4157cd:	xchg   DWORD PTR [edi+esi*8-0x174cd655],ebp
  4157d4:	add    DWORD PTR [edi-0x24],esp
  4157d7:	xchg   esi,eax
  4157d8:	adc    DWORD PTR [ecx],eax
  4157da:	retf   
  4157db:	dec    edx
  4157dc:	cwde   
  4157dd:	adc    dh,cl
  4157df:	jo     0x41577f
  4157e1:	(bad)  
  4157e2:	data16 fist DWORD PTR [ebx+0x5b]
  4157e6:	lea    ebx,[edx+0x2a770fc6]
  4157ec:	(bad)  
  4157ed:	nop
  4157ee:	sbb    BYTE PTR [esi],cl
  4157f0:	dec    esi
  4157f1:	pop    ss
  4157f2:	scas   al,BYTE PTR es:[edi]
  4157f3:	dec    ebp
  4157f4:	ins    BYTE PTR es:[edi],dx
  4157f5:	pushf  
  4157f6:	in     eax,dx
  4157f7:	mov    bl,0x7a
  4157f9:	je     0x415872
  4157fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157fc:	cdq    
  4157fd:	ss sbb ch,dh
  415800:	dec    edx
  415801:	popa   
  415802:	cmc    
  415803:	xchg   edi,eax
  415804:	or     dl,BYTE PTR [edx-0x78]
  415807:	jg     0x4157da
  415809:	pop    esi
  41580a:	pushw  0xffe2
  41580d:	aam    0x30
  41580f:	nop
  415810:	jo     0x4157a2
  415812:	sbb    dh,al
  415814:	xchg   esp,eax
  415815:	cmp    bh,BYTE PTR [edx-0xd]
  415818:	cmp    al,0xca
  41581a:	dec    ebx
  41581b:	mov    esp,0x8b82a22f
  415820:	jae    0x4157d2
  415822:	test   al,0x82
  415824:	add    al,0xd9
  415826:	ret    
  415827:	inc    ecx
  415828:	add    al,BYTE PTR [edi-0xa]
  41582b:	add    eax,0x7289b8e6
  415830:	sub    DWORD PTR [esi-0x70102652],eax
  415836:	paddsb mm1,mm2
  415839:	iret   
  41583a:	jbe    0x4157ec
  41583c:	loopne 0x41589d
  41583e:	inc    edi
  41583f:	dec    ecx
  415840:	wrmsr  
  415842:	inc    ebp
  415843:	sar    BYTE PTR [edx+ecx*1],cl
  415846:	jmp    0x41587b
  415848:	push   esp
  415849:	test   al,0x3e
  41584b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41584c:	xchg   esp,eax
  41584d:	nop
  41584e:	xor    cl,al
  415850:	xchg   edx,eax
  415851:	hlt    
  415852:	mov    ebx,0x17a2236b
  415857:	ins    DWORD PTR es:[edi],dx
  415858:	xchg   ebx,eax
  415859:	cs popa 
  41585b:	ret    0xc3c8
  41585e:	sbb    dl,dh
  415860:	das    
  415861:	push   cs
  415862:	lock mov BYTE PTR [edi+0x426556ff],cl
  415869:	pop    edx
  41586a:	cmp    ecx,DWORD PTR [ecx+0x35]
  41586d:	ins    BYTE PTR es:[edi],dx
  41586e:	and    al,0xe2
  415870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415871:	(bad)  
  415872:	pop    edi
  415873:	mov    ebp,0x720c2e2
  415878:	mov    BYTE PTR [edi+0x25],bh
  41587b:	jl     0x4158cb
  41587d:	scas   eax,DWORD PTR es:[edi]
  41587e:	inc    esi
  41587f:	leave  
  415880:	aas    
  415881:	xor    bl,0x3c
  415884:	push   ebx
  415885:	and    ecx,DWORD PTR [ebp-0x19]
  415888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415889:	daa    
  41588a:	out    0xcc,eax
  41588c:	pop    ebx
  41588d:	jno    0x4158f6
  41588f:	mov    ah,0x4d
  415891:	sub    al,0xc3
  415893:	add    BYTE PTR [ecx+0x52],dh
  415896:	push   ss
  415897:	or     eax,0x53525541
  41589c:	aam    0x45
  41589e:	sub    esp,ebp
  4158a0:	or     esp,DWORD PTR [esi+0x508e3947]
  4158a6:	push   ecx
  4158a7:	cmp    DWORD PTR [ecx-0x35],esi
  4158aa:	push   ss
  4158ab:	repz push es
  4158ad:	or     BYTE PTR [edi+0x771ceb50],bh
  4158b3:	daa    
  4158b4:	pop    es
  4158b5:	cdq    
  4158b6:	and    BYTE PTR [ecx+0x4f062713],dl
  4158bc:	inc    edi
  4158bd:	adc    BYTE PTR [edx],bl
  4158bf:	push   ss
  4158c0:	int3   
  4158c1:	enter  0x9e38,0xae
  4158c5:	fisub  WORD PTR [ebx]
  4158c7:	jb     0x4158f4
  4158c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ca:	jae    0x4158a3
  4158cc:	mov    dl,0xde
  4158ce:	adc    dl,BYTE PTR ds:[esi+edx*2+0x49ccb31a]
  4158d6:	dec    esp
  4158d7:	test   BYTE PTR [ebx+esi*1],ch
  4158da:	fadd   QWORD PTR [edi+eax*2+0x401c21]
  4158e1:	clc    
  4158e2:	cdq    
  4158e3:	mov    eax,ds:0xb74c9820
  4158e8:	cmp    DWORD PTR [edi-0xa2f61a],ecx
  4158ee:	mov    dl,0xb5
  4158f0:	sbb    eax,0x999a4b07
  4158f5:	adc    ebx,DWORD PTR [edi-0x23bb6079]
  4158fb:	sar    BYTE PTR [esi-0x41325feb],1
  415901:	rcl    DWORD PTR [eax],1
  415903:	jmp    0x5971a33d
  415908:	in     eax,0x64
  41590a:	jge    0x415903
  41590c:	cmc    
  41590d:	and    esi,DWORD PTR [eax+0x12ee08dc]
  415913:	cmp    al,0x3a
  415915:	shr    esp,cl
  415917:	cmp    ch,BYTE PTR [eax+0x8]
  41591a:	cmp    BYTE PTR [ebp+ebx*1-0x58],bl
  41591e:	sub    ch,BYTE PTR [eax+0x30]
  415921:	loopne 0x415908
  415923:	adc    al,0x37
  415925:	sub    edi,DWORD PTR [esi]
  415927:	xchg   ecx,eax
  415928:	jnp    0x4158d3
  41592a:	jo     0x41597d
  41592c:	hlt    
  41592d:	pop    edi
  41592e:	push   edi
  41592f:	push   0xaef588
  415934:	aaa    
  415935:	inc    ecx
  415936:	jbe    0x415918
  415938:	add    eax,0x565afbad
  41593d:	xchg   edi,eax
  41593e:	add    dh,BYTE PTR [edx]
  415940:	and    BYTE PTR [eax+0x37119630],al
  415946:	sbb    DWORD PTR [esi],esp
  415948:	fild   WORD PTR [ecx+0x64]
  41594b:	push   cs
  41594c:	or     esi,DWORD PTR [esi+0xe]
  41594f:	mov    edx,0xbf1b90dc
  415954:	push   edx
  415955:	add    bh,al
  415957:	call   0x5570:0x11032d61
  41595e:	icebp  
  41595f:	mov    al,ds:0xd9e2c981
  415964:	int3   
  415965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415966:	xor    BYTE PTR [ebp-0x3c],bh
  415969:	dec    edi
  41596a:	mov    bh,0xc
  41596c:	pop    ss
  41596d:	rol    BYTE PTR [ecx-0xacf064a],0x5b
  415974:	xchg   esi,eax
  415975:	or     eax,0xa7c6c832
  41597a:	rcr    DWORD PTR [ebx],0x98
  41597d:	out    0x8f,al
  41597f:	out    dx,eax
  415980:	cs ss mov dl,cl
  415984:	rcr    BYTE PTR [eax-0xa],cl
  415987:	inc    edx
  415988:	loopne 0x415993
  41598a:	xor    BYTE PTR [esi-0x592e6731],dl
  415990:	(bad)  
  415991:	add    eax,0x621230e6
  415996:	(bad)  
  415997:	cdq    
  415998:	call   0xe57a:0x3dc1fe79
  41599f:	lds    ecx,FWORD PTR [eax+0x6ccbe840]
  4159a5:	pushf  
  4159a6:	inc    esi
  4159a7:	(bad)  
  4159a8:	dec    BYTE PTR [esi]
  4159aa:	jae    0x4159c4
  4159ac:	inc    edi
  4159ad:	bound  edi,QWORD PTR [eax+0x56]
  4159b0:	loope  0x41595a
  4159b2:	mov    edi,0xfaa45562
  4159b7:	arpl   WORD PTR [ebp-0x4078260],cx
  4159bd:	sub    ecx,esp
  4159bf:	mov    BYTE PTR [ecx+0x2a428a6],ah
  4159c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159c6:	mov    ebx,0x4b205e0d
  4159cb:	dec    ecx
  4159cc:	fcomp  DWORD PTR [ecx+0x5b]
  4159cf:	loopne 0x4159a9
  4159d1:	xchg   ebx,eax
  4159d2:	cld    
  4159d3:	jg     0x415a30
  4159d5:	out    dx,al
  4159d6:	pop    edi
  4159d7:	jl     0x415990
  4159d9:	add    eax,0x54af07eb
  4159de:	in     eax,dx
  4159df:	mov    ?,WORD PTR [edi+0x35]
  4159e2:	sbb    dl,BYTE PTR [ebx+eiz*4]
  4159e5:	mov    ds:0xe7ca759c,al
  4159ea:	lock sbb eax,0xac6397fb
  4159f0:	sub    eax,DWORD PTR [eax+edx*4]
  4159f3:	je     0x415a6b
  4159f5:	rcr    DWORD PTR [eax+0x70],0x7e
  4159f9:	xchg   edx,eax
  4159fa:	jp     0x415a48
  4159fc:	mov    edx,0x953b5130
  415a01:	mov    edi,0x9e0fdc9b
  415a06:	or     al,0x65
  415a08:	in     eax,dx
  415a09:	adc    BYTE PTR [edi-0x775d2076],0xc6
  415a10:	les    esi,FWORD PTR [esi+0x18]
  415a13:	int3   
  415a14:	xchg   edx,eax
  415a15:	loope  0x415a3f
  415a17:	cs pop esp
  415a19:	xchg   ebx,eax
  415a1a:	call   0x5f9f:0x9133f4d0
  415a21:	sub    al,0x4c
  415a23:	sub    bl,BYTE PTR [edi-0x313a6f15]
  415a29:	xor    eax,0xdd850c76
  415a2e:	cdq    
  415a2f:	xor    al,0x21
  415a31:	xchg   edx,eax
  415a32:	out    dx,al
  415a33:	and    eax,0x664fe955
  415a38:	es mov dh,0xd7
  415a3b:	jno    0x415aa5
  415a3d:	je     0x415a9a
  415a3f:	push   esp
  415a40:	jo     0x415a4b
  415a42:	into   
  415a43:	or     al,BYTE PTR [edi+0x57]
  415a46:	pop    edx
  415a47:	frstor [edx]
  415a49:	(bad)  
  415a4a:	dec    esi
  415a4b:	xor    bh,cl
  415a4d:	dec    esi
  415a4e:	pop    eax
  415a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a50:	bound  edi,QWORD PTR [ebx]
  415a52:	out    0x95,al
  415a54:	call   0x6487c1f4
  415a59:	aam    0x59
  415a5b:	mov    bh,dl
  415a5d:	shl    DWORD PTR [esi+edi*4+0x7ff66d81],1
  415a64:	mov    ds:0x3935b677,al
  415a69:	stos   BYTE PTR es:[edi],al
  415a6a:	and    esi,ebp
  415a6c:	cmp    ecx,DWORD PTR [ebp+ebx*4+0x1b3986a6]
  415a73:	mov    edi,0x386a0bc7
  415a78:	pop    esi
  415a79:	adc    al,0xd5
  415a7b:	inc    eax
  415a7c:	sbb    BYTE PTR [ebp+0x16886602],al
  415a82:	mov    al,0x33
  415a84:	mov    dl,0x3c
  415a86:	out    0x4d,al
  415a88:	not    DWORD PTR [edi+edx*1-0x2c]
  415a8c:	lea    ebp,[eax+0x2e]
  415a8f:	test   al,ch
  415a91:	push   ebp
  415a92:	cmp    al,0x4f
  415a94:	dec    eax
  415a95:	je     0x415a6e
  415a97:	adc    ebp,DWORD PTR [eax+0x46f5296d]
  415a9d:	xchg   ecx,eax
  415a9e:	outs   dx,DWORD PTR ds:[esi]
  415a9f:	xor    al,0xcf
  415aa1:	mov    DWORD PTR [ecx-0x6b049131],esi
  415aa7:	mov    dh,0xce
  415aa9:	mov    eax,0xbbcd8d7a
  415aae:	pop    ds
  415aaf:	shl    DWORD PTR [ebp+0x694c8216],0x21
  415ab6:	or     BYTE PTR [eax+edx*1+0xe],dh
  415aba:	mov    ebp,0xd4a36c58
  415abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac0:	mov    al,0xde
  415ac2:	mov    edx,0x1801c793
  415ac7:	lds    ebp,FWORD PTR [eax]
  415ac9:	mov    al,0x22
  415acb:	test   eax,0xc378798f
  415ad0:	lahf   
  415ad1:	xchg   esp,eax
  415ad2:	test   BYTE PTR [edx-0x14],bh
  415ad5:	sub    esp,eax
  415ad7:	out    dx,eax
  415ad8:	mov    ebx,0x7f36914a
  415add:	adc    esi,DWORD PTR [esp+eiz*4+0x719fc2be]
  415ae4:	cs mov ebp,0xc492679c
  415aea:	mov    bl,0xb7
  415aec:	gs or  al,0xf2
  415aef:	test   DWORD PTR [eax],edi
  415af1:	xchg   DWORD PTR [edi],edi
  415af3:	je     0x415ad9
  415af5:	jmp    0x9eba8e6c
  415afa:	mov    edi,0x66f05ea5
  415aff:	adc    DWORD PTR [ebx*2-0x568150c0],esi
  415b06:	hlt    
  415b07:	mov    ah,BYTE PTR [ebx-0x21c3cf03]
  415b0d:	cmp    DWORD PTR [eax-0x5b],ecx
  415b10:	adc    DWORD PTR [ebp-0x2fe40c02],ebx
  415b16:	dec    ecx
  415b17:	aaa    
  415b18:	pop    ebx
  415b19:	out    0xb,eax
  415b1b:	push   ds
  415b1c:	lahf   
  415b1d:	and    DWORD PTR [edx],esi
  415b1f:	inc    esi
  415b20:	ror    BYTE PTR [edi],cl
  415b22:	pop    ebx
  415b23:	xchg   ch,dh
  415b25:	les    ebp,FWORD PTR [eax]
  415b27:	push   esi
  415b28:	and    bh,BYTE PTR ds:0x630e726e
  415b2e:	fwait
  415b2f:	jae    0x415b90
  415b31:	shl    BYTE PTR [eax],1
  415b33:	pop    ebx
  415b34:	adc    BYTE PTR [ebp+0x6752be6a],ch
  415b3a:	shl    BYTE PTR [ecx+0x69],cl
  415b3d:	rol    DWORD PTR [edi-0x74b9ef56],0x6d
  415b44:	outs   dx,DWORD PTR ds:[esi]
  415b45:	cmp    esp,DWORD PTR [eax]
  415b47:	inc    esp
  415b48:	in     al,0x72
  415b4a:	push   edx
  415b4b:	adc    al,0xf2
  415b4d:	(bad)  
  415b4e:	in     al,dx
  415b4f:	mov    fs,esp
  415b51:	dec    ecx
  415b52:	jp     0x415bad
  415b54:	test   al,0xb
  415b56:	xchg   edx,eax
  415b57:	sbb    BYTE PTR [eax-0x2b],0xdc
  415b5b:	mov    esp,0xe4c1d900
  415b60:	xor    ch,ah
  415b62:	push   edi
  415b63:	test   ah,ch
  415b65:	mov    al,0x37
  415b67:	xor    al,BYTE PTR [ebx-0x6c23e575]
  415b6d:	(bad)  
  415b6e:	stc    
  415b6f:	pop    ebp
  415b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b71:	xor    al,0x6e
  415b73:	pusha  
  415b74:	int    0x6f
  415b76:	inc    edx
  415b77:	outs   dx,BYTE PTR ds:[esi]
  415b78:	jmp    0xb42d49d4
  415b7d:	sbb    cl,dl
  415b7f:	and    BYTE PTR [eax-0x9],0x10
  415b83:	xor    al,0xe1
  415b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b86:	es leave 
  415b88:	loop   0x415b16
  415b8a:	aam    0xee
  415b8c:	imul   ecx,DWORD PTR [ebx+edx*1],0x725beb92
  415b93:	sbb    dl,BYTE PTR [eax-0x6f0601dc]
  415b99:	cli    
  415b9a:	in     al,0xa1
  415b9c:	out    0x4b,eax
  415b9e:	pop    esp
  415b9f:	sub    esi,ecx
  415ba1:	xor    ch,ah
  415ba3:	mov    ecx,0xf234514f
  415ba8:	pushf  
  415ba9:	mov    BYTE PTR [ebx+0x40],dl
  415bac:	xchg   DWORD PTR [edi+eiz*8-0xa],ebx
  415bb0:	jns    0x415b69
  415bb2:	in     al,dx
  415bb3:	mov    ecx,0xf8f8bc5a
  415bb8:	enter  0x1a4f,0x18
  415bbc:	or     eax,0x287e13aa
  415bc1:	mov    ?,WORD PTR [esp+eax*8+0x37ec1c5b]
  415bc8:	inc    ecx
  415bc9:	and    esp,DWORD PTR [esi-0x3e8aaeed]
  415bcf:	inc    ebp
  415bd0:	ret    
  415bd1:	xor    esp,DWORD PTR [edi+0x35]
  415bd4:	retf   0x445a
  415bd7:	fidivr DWORD PTR [ecx+0x62cae3a9]
  415bdd:	aam    0x82
  415bdf:	jge    0x415c42
  415be1:	dec    edx
  415be2:	adc    eax,0x1944fb93
  415be7:	add    ch,BYTE PTR [ebp-0x4e]
  415bea:	lahf   
  415beb:	fild   WORD PTR [esi]
  415bed:	xchg   ebx,eax
  415bee:	mov    esp,0xca403f23
  415bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf4:	sbb    ebx,edi
  415bf6:	mov    al,0x57
  415bf8:	xchg   edx,eax
  415bf9:	outs   dx,BYTE PTR ds:[esi]
  415bfa:	neg    BYTE PTR [eax]
  415bfc:	nop
  415bfd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bff:	mov    eax,ds:0x782877f4
  415c04:	push   ebp
  415c05:	fiadd  DWORD PTR [edi-0xc]
  415c08:	in     eax,0x14
  415c0a:	retf   0xdeeb
  415c0d:	(bad)  
  415c0e:	arpl   WORD PTR [ebx],sp
  415c10:	and    DWORD PTR [edx],ebx
  415c12:	push   edi
  415c13:	sti    
  415c14:	aas    
  415c15:	push   esp
  415c16:	or     ebx,DWORD PTR [esi+0x555e3a69]
  415c1c:	and    al,0x5a
  415c1e:	sahf   
  415c1f:	lods   al,BYTE PTR ds:[esi]
  415c20:	(bad)  
  415c21:	ror    DWORD PTR [ecx-0x37],cl
  415c24:	cmp    eax,0x4059f0d5
  415c29:	outs   dx,BYTE PTR ds:[esi]
  415c2a:	dec    DWORD PTR [edx]
  415c2c:	push   edx
  415c2d:	lea    ebx,[eax-0x1]
  415c30:	or     BYTE PTR [edx+0x57],0xca
  415c34:	icebp  
  415c35:	and    BYTE PTR [eax+0x2e1d3a53],dh
  415c3b:	add    DWORD PTR [esi-0x4f],esp
  415c3e:	pop    edi
  415c3f:	outs   dx,DWORD PTR ds:[esi]
  415c40:	push   esi
  415c41:	ins    DWORD PTR es:[edi],dx
  415c42:	jno    0x415cb3
  415c44:	pop    eax
  415c45:	je     0x415c64
  415c47:	aaa    
  415c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c49:	sub    ch,BYTE PTR [esi]
  415c4b:	adc    al,0x60
  415c4d:	loopne 0x415c7a
  415c4f:	pop    ss
  415c50:	cs inc esi
  415c52:	pop    ecx
  415c53:	sub    ebp,ebp
  415c55:	daa    
  415c56:	jecxz  0x415c56
  415c58:	push   ebx
  415c59:	cmp    ebp,DWORD PTR [esi+0x9ae49b2]
  415c5f:	mov    ds:0x98a30e4b,eax
  415c64:	and    DWORD PTR [edi+0x4fb04615],ebp
  415c6a:	loop   0x415c57
  415c6c:	and    edi,eax
  415c6e:	daa    
  415c6f:	nop
  415c70:	inc    edi
  415c71:	jg     0x415c14
  415c73:	gs cmp cl,ch
  415c76:	xlat   BYTE PTR ds:[ebx]
  415c77:	repz popa 
  415c79:	iret   
  415c7a:	call   DWORD PTR [ebx]
  415c7c:	sub    al,0xad
  415c7e:	push   ebx
  415c7f:	xchg   ecx,eax
  415c80:	fnstenv [edx]
  415c82:	push   cs
  415c83:	lds    eax,FWORD PTR [eax+ecx*1]
  415c86:	shl    BYTE PTR [edx+0x717e8d3],0xeb
  415c8d:	cmp    al,0xa9
  415c8f:	xor    eax,0xbff979e
  415c94:	leave  
  415c95:	cmc    
  415c96:	std    
  415c97:	fnsave [esi-0x65]
  415c9a:	aas    
  415c9b:	xor    eax,0x44549299
  415ca0:	out    0x1d,eax
  415ca2:	in     al,0x70
  415ca4:	jmp    0x415cd2
  415ca6:	push   edx
  415ca7:	iret   
  415ca8:	call   0xf516:0xe0b0edaf
  415caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb0:	pushf  
  415cb1:	jmp    0x837f:0x1d8a58e
  415cb8:	and    eax,0x16e5e371
  415cbd:	sub    ebx,DWORD PTR [edx]
  415cbf:	test   al,0xa7
  415cc1:	and    eax,0xf93abd1b
  415cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc7:	xchg   DWORD PTR [edx+0x2b],ebp
  415cca:	ja     0x415d2c
  415ccc:	push   esp
  415ccd:	sub    al,0x7c
  415ccf:	xchg   BYTE PTR [edx-0x4afb476c],cl
  415cd5:	mov    ebp,0x99248fdb
  415cda:	(bad)  [ecx+eax*8]
  415cdd:	sbb    eax,0x73c9b3f8
  415ce2:	xchg   ebx,ebx
  415ce4:	mov    edx,0x243e68d6
  415ce9:	jmp    0x415cf3
  415ceb:	(bad)  [edi+0x6]
  415cee:	lds    esi,FWORD PTR [ebx-0x35661a0b]
  415cf4:	js     0x415d22
  415cf6:	xor    bl,dh
  415cf8:	push   edx
  415cf9:	dec    ebx
  415cfa:	lds    edi,FWORD PTR [esp+ebx*4]
  415cfd:	mov    ch,0x27
  415cff:	clc    
  415d00:	lods   al,BYTE PTR ds:[esi]
  415d01:	dec    ecx
  415d02:	jle    0x415d7b
  415d04:	addr16 addr16 data16 cld 
  415d08:	pusha  
  415d09:	std    
  415d0a:	and    BYTE PTR [ebp+0x43f38257],dl
  415d10:	(bad)  
  415d11:	out    0xba,al
  415d13:	scas   eax,DWORD PTR es:[edi]
  415d14:	dec    ebx
  415d15:	sbb    BYTE PTR [edx],0xe9
  415d18:	out    0x8a,eax
  415d1a:	(bad)  
  415d1b:	or     eax,0x4ce2cba1
  415d20:	push   ds
  415d21:	sub    al,BYTE PTR [ecx+0x4f9ff8ad]
  415d27:	fdivr  DWORD PTR [ecx]
  415d29:	test   BYTE PTR [ebx],cl
  415d2b:	je     0x415cfe
  415d2d:	jmp    0xdc34:0xb6f5d3c
  415d34:	enter  0xa343,0x88
  415d38:	add    al,BYTE PTR [ecx+0x34]
  415d3b:	es dec esi
  415d3d:	outs   dx,BYTE PTR ds:[esi]
  415d3e:	or     dh,dh
  415d40:	sbb    eax,0x51b32df0
  415d45:	xchg   ebx,eax
  415d46:	dec    esp
  415d47:	sub    eax,0xa50c14ba
  415d4c:	mov    ah,BYTE PTR [esi-0x631f2a30]
  415d52:	mov    bl,0x9
  415d54:	es mov ah,0xdc
  415d57:	sub    al,0x4b
  415d59:	ss loope 0x415d04
  415d5c:	mov    ds:0x2b89882e,al
  415d61:	cmp    al,0x34
  415d63:	outs   dx,BYTE PTR ds:[esi]
  415d64:	retf   0xa3e9
  415d67:	das    
  415d68:	mov    cl,0x30
  415d6a:	push   cs
  415d6b:	push   ecx
  415d6c:	repnz imul esp,DWORD PTR [edi-0x3c829a77],0x1f8f328f
  415d77:	push   ds
  415d78:	rol    BYTE PTR [esi-0x6e],cl
  415d7b:	sub    BYTE PTR [edx-0x37817a32],ch
  415d81:	sbb    bh,BYTE PTR [edi]
  415d83:	(bad)  
  415d85:	mov    ch,0x86
  415d87:	xor    BYTE PTR [eax+0x20cabfea],ah
  415d8d:	jbe    0x415e06
  415d8f:	into   
  415d90:	scas   al,BYTE PTR es:[edi]
  415d91:	add    bl,BYTE PTR [ecx-0x929b542]
  415d97:	push   0xef1aeb16
  415d9c:	call   0xd179:0x16e3bf2d
  415da3:	add    al,0xf7
  415da5:	jns    0x415d4e
  415da7:	lods   al,BYTE PTR ds:[esi]
  415da8:	leave  
  415da9:	outs   dx,BYTE PTR ds:[esi]
  415daa:	adc    ch,0x5
  415dad:	aad    0x14
  415daf:	(bad)  
  415db0:	addr16 pop edx
  415db2:	push   0x12953954
  415db7:	sub    DWORD PTR [edx],esi
  415db9:	fisttp WORD PTR [ecx-0xac2708d]
  415dbf:	inc    esi
  415dc0:	cmp    al,0x1b
  415dc2:	sbb    eax,0xdb91f27e
  415dc7:	inc    edx
  415dc8:	push   eax
  415dc9:	adc    ecx,DWORD PTR [ecx+0x11]
  415dcc:	ret    0xc79a
  415dcf:	out    0x3e,al
  415dd1:	retf   0x478
  415dd4:	mov    bh,0x88
  415dd6:	mov    dh,0x7d
  415dd8:	sub    DWORD PTR [esi+0x9],edi
  415ddb:	(bad)  
  415ddc:	jmp    0x4479:0xbf8304e0
  415de3:	imul   eax,ebx,0xffffffd5
  415de6:	pop    edi
  415de7:	inc    ecx
  415de8:	sub    eax,DWORD PTR [edx-0x33]
  415deb:	(bad)  
  415ded:	enter  0x21f8,0x30
  415df1:	lea    ebx,[bx]
  415df4:	sub    eax,0xc3c84afb
  415df9:	(bad)  
  415dfa:	sub    esp,DWORD PTR [ecx+0x6aec261]
  415e00:	lock dec eax
  415e02:	ins    DWORD PTR es:[edi],dx
  415e03:	or     DWORD PTR [edx+esi*4],edx
  415e06:	fisub  DWORD PTR [eax+0x3a]
  415e09:	jmp    0x1344149c
  415e0e:	popf   
  415e0f:	pop    ebp
  415e10:	sbb    bp,WORD PTR [ebx+0x5650b44f]
  415e17:	add    ebx,0x9f8d12af
  415e1d:	or     dl,BYTE PTR [esi]
  415e1f:	adc    ecx,edi
  415e21:	out    dx,al
  415e22:	(bad)  
  415e23:	loope  0x415dae
  415e25:	fcomp  DWORD PTR [ebx+0x6f162550]
  415e2b:	retf   0xd007
  415e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e2f:	push   ebx
  415e30:	adc    DWORD PTR ds:0xbddb6acd,edi
  415e36:	js     0x415e52
  415e38:	xchg   edi,eax
  415e39:	push   edx
  415e3a:	add    eax,ebx
  415e3c:	xlat   BYTE PTR ds:[ebx]
  415e3d:	call   0xcb2486c
  415e42:	pop    edx
  415e43:	add    DWORD PTR [ecx+0x53fd2bd5],0x149dfed4
  415e4d:	adc    BYTE PTR [esi],0x0
  415e50:	fcomp  QWORD PTR [edi+0x5b]
  415e53:	aaa    
  415e54:	mov    ah,0xaf
  415e56:	ds sub eax,0xc6a6d005
  415e5c:	test   eax,0xe61ebe30
  415e61:	jbe    0x415e66
  415e63:	iret   
  415e64:	sbb    edx,DWORD PTR [ebx]
  415e66:	sub    eax,esi
  415e68:	lods   eax,DWORD PTR ds:[esi]
  415e69:	pop    esp
  415e6a:	mov    ah,0x75
  415e6c:	and    BYTE PTR [edi-0x706c9af],bh
  415e72:	xchg   BYTE PTR [ebp+0x7657c6ba],cl
  415e78:	nop
  415e79:	add    bl,BYTE PTR ds:0x4b37147d
  415e7f:	sbb    cl,bh
  415e81:	icebp  
  415e82:	pop    esp
  415e83:	dec    esp
  415e84:	xor    al,0xe0
  415e86:	shr    DWORD PTR [esi],cl
  415e88:	pop    ds
  415e89:	mov    ch,0xcc
  415e8b:	ins    DWORD PTR es:[edi],dx
  415e8c:	shr    BYTE PTR [ebp+0x71],1
  415e8f:	je     0x415ee1
  415e91:	sbb    dh,BYTE PTR [esi]
  415e93:	sbb    al,0x96
  415e96:	lods   al,BYTE PTR ds:[esi]
  415e97:	sub    BYTE PTR [eax],dh
  415e99:	and    edx,edx
  415e9b:	cld    
  415e9c:	cmp    eax,0x461e20e8
  415ea1:	jo     0x415efb
  415ea3:	test   BYTE PTR [ecx+0x75],bl
  415ea6:	add    DWORD PTR [edi+eax*4+0x12dafdc6],esp
  415ead:	les    edx,FWORD PTR [ecx+eiz*8+0x19]
  415eb1:	mov    eax,ds:0x8d8d7240
  415eb6:	cli    
  415eb7:	inc    edx
  415eb8:	xor    al,0xc7
  415eba:	push   0xa
  415ebc:	les    edi,FWORD PTR gs:[ebp-0x51c7b13]
  415ec3:	loop   0x415f04
  415ec5:	call   0x23c9f840
  415eca:	cmp    al,0xf
  415ecc:	(bad)  
  415ece:	je     0x415e8c
  415ed0:	fwait
  415ed1:	or     bl,BYTE PTR [edi+0x237ae021]
  415ed7:	aam    0x34
  415ed9:	and    esi,DWORD PTR [ecx+0x7b]
  415edc:	xchg   ecx,eax
  415edd:	mov    edx,0xa5116c9f
  415ee2:	sbb    BYTE PTR [eax+0x2e],ah
  415ee5:	in     eax,0xd3
  415ee7:	in     eax,0x62
  415ee9:	xchg   ecx,eax
  415eea:	cli    
  415eeb:	pop    ecx
  415eec:	imul   esp,DWORD PTR [esi],0x35
  415eef:	cmp    esp,DWORD PTR [edi+0x45]
  415ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef3:	idiv   BYTE PTR [esp+edi*1+0x26]
  415ef7:	adc    dl,BYTE PTR [ecx+ecx*2+0x71]
  415efb:	cdq    
  415efc:	adc    BYTE PTR [ebx-0x79],al
  415eff:	push   esp
  415f00:	sbb    edi,DWORD PTR [edi+0x4d]
  415f03:	sbb    esi,eax
  415f05:	out    dx,eax
  415f06:	imul   esp,ebx,0x3f951791
  415f0c:	add    ah,BYTE PTR [edi-0x42ef7061]
  415f12:	adc    al,0xbc
  415f14:	pop    esi
  415f15:	inc    esp
  415f16:	(bad)  
  415f17:	and    BYTE PTR [edi+0x28],bl
  415f1a:	test   DWORD PTR [edx+0x61],ecx
  415f1d:	stc    
  415f1e:	and    dh,BYTE PTR [ebx-0x3f]
  415f21:	std    
  415f22:	in     eax,dx
  415f23:	dec    esi
  415f24:	xlat   BYTE PTR ds:[ebx]
  415f25:	and    eax,0x3a107db4
  415f2a:	adc    ebx,eax
  415f2c:	popf   
  415f2d:	ja     0x415f3a
  415f2f:	call   0x96a154c9
  415f34:	inc    ebx
  415f35:	(bad)  
  415f36:	adc    eax,0x77fbaf3a
  415f3b:	enter  0x653e,0xb6
  415f3f:	ret    
  415f40:	xchg   edx,eax
  415f41:	xor    ebx,DWORD PTR [esi+eiz*2-0x1a]
  415f45:	push   es
  415f46:	lods   al,BYTE PTR ds:[esi]
  415f47:	pusha  
  415f48:	daa    
  415f49:	dec    esi
  415f4a:	inc    ebx
  415f4b:	fwait
  415f4c:	push   cs
  415f4d:	repnz mov bh,0xe6
  415f50:	in     eax,0x1a
  415f52:	sub    bl,BYTE PTR [esi+0x3677c193]
  415f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f59:	or     ah,bh
  415f5b:	test   al,0x97
  415f5d:	stc    
  415f5e:	xchg   ecx,eax
  415f5f:	ret    
  415f60:	sbb    al,BYTE PTR [ebx]
  415f62:	lahf   
  415f63:	cmp    cl,BYTE PTR ds:0x31cea264
  415f69:	repnz das 
  415f6b:	jmp    0x415fb8
  415f6d:	push   ds
  415f6e:	ja     0x415f04
  415f70:	mov    cl,0x1
  415f72:	stos   DWORD PTR es:[edi],eax
  415f73:	jg     0x415f03
  415f75:	ret    
  415f76:	sub    BYTE PTR [esi],0xe5
  415f79:	pop    ecx
  415f7a:	in     al,dx
  415f7b:	retf   
  415f7c:	test   BYTE PTR [ecx],al
  415f7e:	(bad)  
  415f7f:	dec    ecx
  415f80:	jns    0x415f4a
  415f82:	lea    esi,[esi-0xb6e44de]
  415f88:	ss aad 0x28
  415f8b:	add    al,0x2c
  415f8d:	popa   
  415f8e:	les    ecx,FWORD PTR [esp+esi*4+0x14]
  415f92:	imul   edx,ebx,0xe4e37462
  415f98:	aaa    
  415f99:	fadd   QWORD PTR [eax+0x17]
  415f9c:	sub    edi,esp
  415f9e:	mov    esi,0xe5500400
  415fa3:	cmp    ch,BYTE PTR [esi]
  415fa5:	or     ebp,DWORD PTR [edi]
  415fa7:	loope  0x415ff3
  415fa9:	jae    0x416002
  415fab:	jae    0x415f89
  415fad:	sub    eax,0xe49850c8
  415fb2:	jmp    0xad34:0x41bc22c4
  415fb9:	sub    eax,0xa0346973
  415fbe:	mov    dl,0xe8
  415fc0:	adc    BYTE PTR ds:0x16739641,0xc5
  415fc7:	xor    ebx,edx
  415fc9:	enter  0x2c66,0xe5
  415fcd:	xchg   esi,eax
  415fce:	gs jae 0x415f8b
  415fd1:	xor    BYTE PTR [edx+0x2],al
  415fd4:	xchg   edi,eax
  415fd5:	shr    DWORD PTR [ecx+0x5ae29278],1
  415fdb:	cmp    al,0xcc
  415fdd:	sub    esi,edx
  415fdf:	stos   BYTE PTR es:[edi],al
  415fe0:	xor    ah,BYTE PTR [edi+edx*1]
  415fe3:	loop   0x416010
  415fe5:	addr16 fwait
  415fe7:	dec    esp
  415fe8:	fimul  DWORD PTR [ebx-0x3235b2a9]
  415fee:	in     eax,0x17
  415ff0:	mov    ds:0x8d1c4deb,al
  415ff5:	fsubr  QWORD PTR [eax]
  415ff7:	(bad)  
  415ff8:	test   BYTE PTR [ecx+edi*1],0x4c
  415ffc:	es mov ch,0x5f
  415fff:	dec    ebp
  416000:	rcr    DWORD PTR [edx+0x402625bf],0x8b
  416007:	pop    esp
  416008:	clc    
  416009:	jb     0x415ff1
  41600b:	(bad)
  41600f:	pushf  
  416010:	popa   
  416011:	fidiv  WORD PTR [eax-0x57]
  416014:	loope  0x415f9d
  416016:	fisttp QWORD PTR ds:[ebx+0x37]
  41601a:	add    ebx,DWORD PTR [ecx]
  41601c:	push   0x3e27a557
  416021:	dec    eax
  416022:	adc    eax,0xb93785de
  416027:	fst    QWORD PTR [edi-0x26817dd7]
  41602d:	push   es
  41602e:	cs push 0x1f7e8310
  416034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416035:	add    ch,BYTE PTR [ebx+0x7d]
  416038:	mov    ds,esi
  41603a:	test   al,0x34
  41603c:	sti    
  41603d:	jnp    0x416076
  41603f:	test   al,0x15
  416041:	test   eax,0x41fcc5db
  416046:	and    al,0x9
  416048:	add    al,0x1
  41604a:	ffree  st(5)
  41604c:	and    eax,0xaf2a913c
  416051:	push   edi
  416052:	stc    
  416053:	inc    edx
  416054:	push   edi
  416055:	stos   BYTE PTR es:[edi],al
  416056:	dec    esp
  416057:	xchg   esi,eax
  416058:	xor    edi,DWORD PTR [edx-0x83f4dcb]
  41605e:	rcl    BYTE PTR [esi-0x69],0xd8
  416062:	inc    ebp
  416063:	push   ecx
  416064:	push   0xffffff82
  416066:	icebp  
  416067:	push   edx
  416068:	sar    al,1
  41606a:	out    0xfd,eax
  41606c:	dec    ecx
  41606d:	outs   dx,DWORD PTR ds:[esi]
  41606e:	lahf   
  41606f:	push   ecx
  416070:	ret    
  416071:	jmp    0x410f:0xab92f250
  416078:	and    BYTE PTR [eax-0x27],cl
  41607b:	mov    edi,0x1e9b2e85
  416080:	sbb    esi,DWORD PTR [ebp+0x30]
  416083:	fwait
  416084:	cmc    
  416085:	fimul  DWORD PTR [esi-0x6b]
  416088:	adc    esi,DWORD PTR [edi-0x68268873]
  41608e:	add    DWORD PTR [esi-0x1a],edx
  416091:	stos   BYTE PTR es:[edi],al
  416092:	mov    ah,BYTE PTR [ebx]
  416094:	pushf  
  416095:	or     DWORD PTR [ecx],ebx
  416097:	xor    BYTE PTR [ebp+0x18195121],0x2b
  41609e:	arpl   WORD PTR [ecx+ebx*4-0x62],bp
  4160a2:	test   esp,0x897e0cf7
  4160a8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160aa:	or     al,0x76
  4160ac:	xlat   BYTE PTR ds:[ebx]
  4160ad:	mov    eax,ecx
  4160af:	push   0x1a4810d8
  4160b4:	cwde   
  4160b5:	mov    ebx,0x1821ba13
  4160ba:	mov    ch,0x19
  4160bc:	mov    ebx,0x326113f8
  4160c1:	imul   eax
  4160c3:	cs push edi
  4160c5:	fsub   DWORD PTR [eax+0x6ff44f5a]
  4160cb:	cmp    BYTE PTR [ebp-0x2a],al
  4160ce:	inc    eax
  4160cf:	jp     0x416107
  4160d1:	pop    ebp
  4160d2:	pop    ebx
  4160d3:	dec    edx
  4160d4:	mov    eax,0xb8338579
  4160d9:	sub    esp,DWORD PTR [eax-0x67]
  4160dc:	mov    al,BYTE PTR [eax]
  4160de:	pusha  
  4160df:	mov    al,ds:0x77c5f592
  4160e4:	fld    QWORD PTR [ecx+0xc]
  4160e7:	loope  0x416099
  4160e9:	jno    0x41614d
  4160eb:	std    
  4160ec:	or     bh,BYTE PTR [ebx+0x67cfb070]
  4160f2:	push   esi
  4160f3:	push   edi
  4160f4:	mov    dh,0xcd
  4160f7:	add    DWORD PTR [eax],esi
  4160f9:	repnz push eax
  4160fb:	cld    
  4160fc:	inc    esi
  4160fd:	and    eax,0xec1d6c88
  416102:	sub    BYTE PTR [esp+eax*8],0xee
  416106:	jle    0x89da5e28
  41610c:	push   cs
  41610d:	test   DWORD PTR [ebx+0x4a],ebx
  416110:	or     eax,0xd681b1f2
  416115:	fwait
  416116:	cmp    al,0x97
  416118:	outs   dx,BYTE PTR ds:[esi]
  416119:	outs   dx,DWORD PTR ds:[esi]
  41611a:	jmp    DWORD PTR [ebx]
  41611c:	fcmovbe st,st(7)
  41611e:	add    ebx,DWORD PTR [ebp-0x1]
  416121:	pop    esp
  416122:	cli    
  416123:	inc    DWORD PTR [ecx+0x33]
  416126:	jae    0x4160c2
  416128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416129:	xor    eax,0xfbabf894
  41612e:	pop    ebx
  41612f:	das    
  416130:	dec    ebx
  416131:	in     al,0x6b
  416133:	retf   
  416134:	lock adc ebp,DWORD PTR [eax-0x72]
  416138:	gs mov esp,0x94e63523
  41613e:	outs   dx,DWORD PTR ds:[esi]
  41613f:	or     ebp,DWORD PTR [eax+0x50]
  416142:	cmp    DWORD PTR [edx+0x6e933496],0xffffffb0
  416149:	outs   dx,BYTE PTR ds:[esi]
  41614a:	mov    al,ds:0x95fe40c5
  41614f:	pop    eax
  416150:	scas   al,BYTE PTR es:[edi]
  416151:	fnstenv [edx]
  416153:	jmp    0x712ac0fb
  416158:	add    DWORD PTR [esi],edi
  41615a:	jp     0x4161bd
  41615c:	in     eax,0x99
  41615e:	loop   0x416121
  416160:	mov    ebx,DWORD PTR [edi-0x55]
  416163:	idiv   edx
  416165:	or     ebx,DWORD PTR [edx+0x258a9880]
  41616b:	mov    esp,0xe61b6265
  416170:	sub    al,0x9f
  416172:	adc    eax,ebx
  416174:	aam    0xbe
  416176:	and    edx,DWORD PTR [ebx-0x2f310cb7]
  41617c:	jmp    0x9de1:0x6e414a6c
  416183:	mov    edx,0xb72fa7ce
  416188:	jne    0x416133
  41618a:	(bad)  
  41618b:	mov    ebx,0xb00f2353
  416190:	ficomp WORD PTR [eax+ebp*2]
  416193:	inc    esp
  416194:	pusha  
  416195:	fimul  WORD PTR [ebx+edi*1-0x2e]
  416199:	jg     0x41616b
  41619b:	lds    edi,FWORD PTR ds:0x6ae12d26
  4161a1:	(bad)  
  4161a2:	fist   DWORD PTR [edx]
  4161a4:	mov    ds:0x9119690b,eax
  4161a9:	aam    0x92
  4161ab:	mov    dh,0xa9
  4161ad:	call   0xbbf:0x13fa504a
  4161b4:	xchg   ebp,eax
  4161b5:	add    edx,ebp
  4161b7:	aas    
  4161b8:	jnp    0x4161b1
  4161ba:	xor    dl,ah
  4161bc:	inc    ebx
  4161bd:	push   0x3a
  4161bf:	cwde   
  4161c0:	iret   
  4161c1:	and    dh,BYTE PTR [esi+0x5]
  4161c4:	outs   dx,BYTE PTR ds:[esi]
  4161c5:	scas   al,BYTE PTR es:[edi]
  4161c6:	cmp    BYTE PTR [eax+eax*2],0x58
  4161ca:	mov    ebx,0x1765ab2d
  4161cf:	bound  esp,QWORD PTR [esi]
  4161d1:	imul   edi,DWORD PTR [ecx+0x6c],0x14
  4161d5:	lahf   
  4161d6:	fbld   TBYTE PTR [esi+0x270eeaff]
  4161dc:	xor    esp,DWORD PTR [ebp-0x55826351]
  4161e2:	aad    0x83
  4161e4:	mov    ecx,0xdafca528
  4161e9:	into   
  4161ea:	mov    edi,0xf4aee8c6
  4161ef:	mov    bh,0x58
  4161f1:	arpl   sp,sp
  4161f3:	stos   DWORD PTR es:[edi],eax
  4161f4:	hlt    
  4161f5:	push   ebx
  4161f6:	cdq    
  4161f7:	pop    ds
  4161f8:	sahf   
  4161f9:	dec    edi
  4161fa:	loopne 0x416227
  4161fc:	push   eax
  4161fd:	cmp    BYTE PTR ss:[edi],ch
  416200:	pop    ds
  416201:	pop    esi
  416202:	cmp    ah,BYTE PTR [esi]
  416204:	jmp    FWORD PTR [edi]
  416206:	mov    edi,0x8a47b01a
  41620b:	fmul   DWORD PTR [ecx+edx*2]
  41620e:	or     DWORD PTR [edx-0x31],esp
  416211:	jle    0x4161b5
  416213:	xchg   ecx,eax
  416214:	and    BYTE PTR [edx],dh
  416216:	sub    cl,BYTE PTR [esi+ecx*2-0x5bdd638c]
  41621d:	in     al,0x8d
  41621f:	sbb    al,0xb9
  416221:	(bad)  
  416222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416223:	jo     0x4161c2
  416225:	mov    dh,BYTE PTR [eax]
  416227:	xor    eax,0x9daeb69e
  41622c:	sub    dh,dl
  41622e:	xor    BYTE PTR [ebp-0x235e430a],al
  416234:	sbb    DWORD PTR [esi-0x3],edx
  416237:	sub    esi,ebx
  416239:	leave  
  41623a:	xchg   ebp,eax
  41623b:	mov    cl,0x44
  41623d:	call   0xbffb6edf
  416242:	adc    al,0x91
  416244:	jmp    0x41623c
  416246:	add    BYTE PTR [esi],0x53
  416249:	push   ds
  41624a:	dec    ebx
  41624b:	cmp    ecx,DWORD PTR [ecx+0x6af4b6b1]
  416251:	jp     0x4162bd
  416253:	adc    eax,0xa8c57ca3
  416258:	dec    ecx
  416259:	push   ebp
  41625a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41625b:	push   eax
  41625c:	mov    DWORD PTR [ecx],esi
  41625e:	xlat   BYTE PTR ds:[ebx]
  41625f:	mov    DWORD PTR [ecx+0x13],eax
  416262:	dec    esp
  416263:	popf   
  416264:	mov    ecx,0xef28c711
  416269:	cmp    dh,cl
  41626b:	inc    edi
  41626c:	ins    BYTE PTR es:[edi],dx
  41626d:	enter  0xd9cb,0x30
  416271:	dec    eax
  416272:	pop    edx
  416273:	cmp    esp,DWORD PTR [eax]
  416275:	rcl    dl,0x41
  416278:	pop    ecx
  416279:	ror    ah,0x9d
  41627c:	wbinvd 
  41627e:	test   eax,0x6dd1e7fa
  416283:	retf   
  416284:	aad    0xfa
  416286:	retf   
  416287:	es sub eax,0x8876cf11
  41628d:	jo     0x416306
  41628f:	push   0xffffffa0
  416291:	sbb    eax,0x3dbe796a
  416296:	pushf  
  416297:	out    0x1e,al
  416299:	scas   eax,DWORD PTR es:[edi]
  41629a:	jecxz  0x4162bc
  41629c:	fidivr DWORD PTR [edi]
  41629e:	aam    0x6f
  4162a0:	in     al,dx
  4162a1:	jl     0x4162a5
  4162a3:	popa   
  4162a4:	or     cl,BYTE PTR [ecx+0x449101d4]
  4162aa:	scas   eax,DWORD PTR es:[edi]
  4162ab:	pop    ebx
  4162ac:	fbld   TBYTE PTR [edi+eiz*8-0x200249a5]
  4162b3:	out    0xf0,al
  4162b5:	and    esi,0x43ad72bd
  4162bb:	outs   dx,BYTE PTR ds:[esi]
  4162bc:	fdiv   QWORD PTR [ebx+ebx*2]
  4162bf:	enter  0x35a,0x16
  4162c3:	iret   
  4162c4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c6:	sub    eax,0x3d77d6ba
  4162cb:	pusha  
  4162cc:	int3   
  4162cd:	sbb    dh,BYTE PTR [eax-0x4e1c38df]
  4162d3:	out    dx,eax
  4162d4:	test   BYTE PTR [eax],dl
  4162d6:	or     al,BYTE PTR [edx+edx*8+0x4fa16398]
  4162dd:	mov    BYTE PTR [edx],0x6b
  4162e0:	dec    ecx
  4162e1:	sub    edx,DWORD PTR [ecx-0x77]
  4162e4:	adc    eax,0x34d4f4ca
  4162e9:	leave  
  4162ea:	sbb    bp,bx
  4162ed:	cmovb  edx,edi
  4162f0:	clc    
  4162f1:	jne    0x416296
  4162f3:	fild   DWORD PTR [edi-0x23f350e3]
  4162f9:	pop    esi
  4162fa:	mov    bh,0xd6
  4162fc:	arpl   WORD PTR [ebp+0x176bfc9f],bx
  416302:	jo     0x4162ae
  416304:	mov    eax,0xa26dd367
  416309:	add    al,0xfe
  41630b:	ror    BYTE PTR [eax],cl
  41630d:	dec    ecx
  41630e:	call   DWORD PTR [ecx]
  416310:	neg    DWORD PTR [eax]
  416312:	xchg   edx,eax
  416313:	inc    esp
  416314:	call   0x6451:0x33759f59
  41631b:	mov    ecx,0x91984e7f
  416320:	lea    edi,[ecx+0x41]
  416323:	cwde   
  416324:	mov    cl,0x1a
  416326:	lea    ecx,[eax]
  416328:	xlat   BYTE PTR ds:[ebx]
  416329:	sub    eax,0x15cc4a3f
  41632e:	dec    esp
  41632f:	dec    ebp
  416330:	cmc    
  416331:	push   esi
  416332:	mov    BYTE PTR [eax],bl
  416334:	and    DWORD PTR [ebp+edi*4-0x5fc2a8c],eax
  41633b:	js     0x416397
  41633d:	mov    bl,0x48
  41633f:	mov    eax,ds:0x3d2e92c3
  416344:	outs   dx,BYTE PTR ds:[esi]
  416345:	dec    eax
  416346:	mov    eax,fs
  416348:	ds retf 0xcaea
  41634c:	stos   BYTE PTR es:[edi],al
  41634d:	mov    ch,0x6b
  41634f:	fstp   QWORD PTR [edx+0x55]
  416352:	lods   eax,DWORD PTR ds:[esi]
  416353:	cli    
  416354:	sbb    al,0x95
  416356:	xchg   edi,eax
  416357:	(bad)  
  416359:	pop    eax
  41635a:	test   eax,0x9b43a5fd
  41635f:	cvtps2pi mm4,QWORD PTR [ebp+0x40]
  416363:	stc    
  416364:	fsubr  QWORD PTR [ebx-0x46d20261]
  41636a:	aad    0x96
  41636c:	mov    ch,0xed
  41636e:	jb     0x416324
  416370:	jnp    0x4162f8
  416372:	or     DWORD PTR [edx+0x5f],ebp
  416375:	jmp    0x41639f
  416377:	inc    edi
  416378:	and    ah,BYTE PTR fs:[edi-0x679b9c32]
  41637f:	dec    esp
  416380:	es cmp eax,0x3f43c90
  416386:	leave  
  416387:	jl     0x4163f7
  416389:	shr    edx,0xb9
  41638c:	xor    al,0xd7
  41638e:	push   ebp
  41638f:	cmp    al,0x2d
  416391:	jnp    0x4163ae
  416393:	ret    
  416394:	push   es
  416395:	cli    
  416396:	repz pop esi
  416398:	ficom  DWORD PTR [ebp+0x46]
  41639b:	stc    
  41639c:	imul   esi,DWORD PTR [esi+ebp*2],0xffffff9c
  4163a0:	pop    esi
  4163a1:	shl    DWORD PTR [ebx+0x29ea666f],0xd2
  4163a8:	hlt    
  4163a9:	sti    
  4163aa:	jb     0x4163ea
  4163ac:	inc    ebp
  4163ad:	jmp    0x54ac:0xe705560e
  4163b4:	and    eax,0xb2cd1b29
  4163b9:	sbb    eax,0x39be1785
  4163be:	fisttp DWORD PTR [ebx-0x21]
  4163c1:	nop
  4163c2:	push   edx
  4163c3:	fisttp DWORD PTR [eax+0x47]
  4163c6:	jge    0x4163ef
  4163c8:	rcl    DWORD PTR [esi],0x4e
  4163cb:	jno    0x4163eb
  4163cd:	xor    ch,ch
  4163cf:	xor    dl,BYTE PTR [ebp+0x2ae12eb9]
  4163d5:	or     eax,0xc87fd29b
  4163da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163db:	adc    ebx,ebp
  4163dd:	push   ebx
  4163de:	sahf   
  4163df:	imul   edi,DWORD PTR [eax-0x1c],0xff2e77ce
  4163e6:	mov    ecx,gs
  4163e8:	cdq    
  4163e9:	mul    BYTE PTR [ebx+0x4d]
  4163ec:	(bad)  
  4163ed:	test   DWORD PTR [edi+0x3c45f52b],0x90aae837
  4163f7:	add    al,0x5d
  4163f9:	lea    esp,[edi+0x8b7a33e]
  4163ff:	inc    edx
  416400:	dec    ebx
  416401:	push   0xcf51b863
  416406:	or     al,0xbe
  416408:	jb     0x4163ef
  41640a:	xor    ebp,edi
  41640c:	(bad)  
  41640d:	push   ecx
  41640e:	in     al,0xab
  416410:	lea    esp,[edx+ecx*4]
  416413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416414:	fcom   QWORD PTR [esi-0x5]
  416417:	or     BYTE PTR [ebp-0x48f648a8],ah
  41641d:	sbb    DWORD PTR [edi-0x64],esp
  416420:	jle    0x416448
  416422:	or     edi,DWORD PTR [ebx]
  416424:	cmp    esi,0xbe05d278
  41642a:	outs   dx,BYTE PTR ds:[esi]
  41642b:	(bad)
  41642e:	in     al,dx
  41642f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416430:	mov    al,0xa9
  416432:	js     0x416481
  416434:	leave  
  416435:	test   eax,0xa748ffd6
  41643a:	les    ecx,FWORD PTR [eax-0x110ac253]
  416440:	inc    esp
  416441:	je     0x41642e
  416443:	call   0xbeead705
  416448:	mov    ds:0x4f9d018f,eax
  41644d:	lods   al,BYTE PTR ds:[esi]
  41644e:	popa   
  41644f:	mov    ecx,0x93f37dae
  416454:	sbb    BYTE PTR [edx],bl
  416456:	fsub   DWORD PTR [esi]
  416458:	in     al,dx
  416459:	adc    cl,ah
  41645b:	mov    ebp,0x147d5698
  416460:	cmp    eax,0x84cbbd09
  416465:	inc    ebx
  416466:	call   0x153aac09
  41646b:	repnz sahf 
  41646d:	ret    
  41646e:	loop   0x416403
  416470:	and    al,0xbd
  416472:	sbb    eax,0x188fff28
  416477:	push   0x400c0e01
  41647c:	shr    esp,cl
  41647e:	sub    eax,0x41afa48b
  416483:	push   edi
  416484:	cs mov cl,0xc0
  416487:	add    al,0x94
  416489:	lahf   
  41648a:	mov    ebp,0xa18ad402
  41648f:	mov    cl,0x1a
  416491:	sbb    eax,0x82b13ac8
  416496:	adc    BYTE PTR [edi],dl
  416498:	mov    esp,0x276df0bd
  41649d:	jmp    0x1d3e:0x5d5c1d45
  4164a4:	jne    0x41648a
  4164a6:	mov    bh,dh
  4164a8:	gs sbb al,0x76
  4164ab:	xchg   edi,eax
  4164ac:	nop
  4164ad:	mov    esi,ebx
  4164af:	sbb    esi,0x29
  4164b2:	ficomp DWORD PTR ds:0x2b62f147
  4164b8:	xchg   esi,eax
  4164b9:	dec    ebx
  4164ba:	into   
  4164bb:	(bad)  
  4164bc:	dec    DWORD PTR [ecx+0x49640413]
  4164c2:	add    BYTE PTR [edx-0x12],bl
  4164c5:	(bad)
  4164c8:	add    bl,BYTE PTR [esi-0x5c]
  4164cb:	lock sbb al,0x9d
  4164ce:	sbb    al,0x52
  4164d0:	xor    eax,0xa4c74b0c
  4164d5:	cli    
  4164d6:	inc    edx
  4164d7:	loopne 0x416547
  4164d9:	mov    BYTE PTR [ecx],0x7c
  4164dc:	mov    ecx,0xfa71b5ea
  4164e1:	cmp    DWORD PTR [edx+edi*8-0x18],ecx
  4164e5:	jmp    0x5bb2:0x9cf18384
  4164ec:	bound  edx,QWORD PTR [esi-0x7e]
  4164ef:	adc    DWORD PTR [eax+eiz*1+0x18],ebx
  4164f3:	sbb    dl,dl
  4164f5:	push   ebx
  4164f6:	mov    esp,0xbf6f7ed
  4164fb:	push   ss
  4164fc:	push   ss
  4164fd:	push   ebx
  4164fe:	outs   dx,BYTE PTR ds:[esi]
  4164ff:	cmp    al,0xdd
  416501:	retf   
  416502:	and    al,0x64
  416504:	ss ins DWORD PTR es:[edi],dx
  416506:	jmp    0x8b77:0x694fb28b
  41650d:	cwde   
  41650e:	stos   DWORD PTR es:[edi],eax
  41650f:	enter  0x7f8d,0x9f
  416513:	fist   WORD PTR [edx-0x5083480c]
  416519:	fucomip st,st(6)
  41651b:	cmp    ebx,eax
  41651d:	and    BYTE PTR [eax+0x5a5c87ce],cl
  416523:	scas   al,BYTE PTR es:[edi]
  416524:	out    dx,al
  416525:	mov    cl,0xa1
  416527:	adc    al,0x1d
  416529:	iret   
  41652a:	cmp    esp,ebp
  41652c:	cmc    
  41652d:	rcl    DWORD PTR [edi-0x4a],1
  416530:	and    dh,BYTE PTR es:[ebx+0x61]
  416534:	sbb    dh,dh
  416536:	ja     0x416587
  416538:	mov    ch,0x36
  41653a:	pop    es
  41653b:	jecxz  0x4164bf
  41653d:	dec    edi
  41653e:	jns    0x4165a6
  416540:	dec    edx
  416541:	mov    ds:0x5d7746ad,al
  416546:	jmp    0x466b:0xfc5edb55
  41654d:	xchg   ebx,eax
  41654e:	dec    edi
  41654f:	retf   0xee0c
  416552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416553:	iret   
  416554:	mov    bh,ah
  416556:	stc    
  416557:	std    
  416558:	out    dx,al
  416559:	pushf  
  41655a:	mov    dl,0x2b
  41655c:	pop    eax
  41655d:	mov    al,ds:0xd245cbbd
  416562:	mov    eax,0x934e693d
  416567:	xlat   BYTE PTR ds:[ebx]
  416568:	sub    esp,DWORD PTR [edi+ebx*8+0x50]
  41656c:	dec    esp
  41656d:	dec    ecx
  41656e:	mov    eax,ds:0x4dbd1b10
  416573:	push   cs
  416574:	out    dx,eax
  416575:	jge    0x4165ee
  416577:	xchg   BYTE PTR ds:0xc0f43047,cl
  41657d:	mov    dh,0x71
  41657f:	mov    ds:0xba265464,eax
  416584:	xchg   ebx,eax
  416585:	std    
  416586:	cli    
  416587:	pop    es
  416588:	add    eax,0x30811209
  41658d:	jl     0x416586
  41658f:	ficom  DWORD PTR [edi-0x72]
  416592:	add    ebp,ecx
  416594:	adc    cl,BYTE PTR [edi-0x41]
  416597:	popa   
  416598:	mov    WORD PTR ds:0x99c40eea,es
  41659e:	cmc    
  41659f:	popf   
  4165a0:	or     edx,DWORD PTR fs:[esi+0x38]
  4165a4:	fistp  WORD PTR [edi-0x7dee9ee1]
  4165aa:	ss test esp,edi
  4165ad:	adc    edi,eax
  4165af:	add    bl,ah
  4165b1:	test   eax,0x275be8b8
  4165b6:	jae    0x41660c
  4165b8:	and    al,0x6d
  4165ba:	xchg   esp,eax
  4165bb:	inc    edx
  4165bc:	pop    esp
  4165bd:	sbb    al,0x92
  4165bf:	cmp    edx,DWORD PTR [eax-0xb]
  4165c2:	or     eax,0x79fe6740
  4165c7:	jb     0x4165c0
  4165c9:	loopne 0x416589
  4165cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165cc:	adc    ebp,DWORD PTR [edx+0x15ebac18]
  4165d2:	ss xchg dl,ah
  4165d5:	aam    0x42
  4165d7:	int3   
  4165d8:	inc    edi
  4165d9:	fist   WORD PTR [edx+0x205cd67f]
  4165df:	jg     0x4165fd
  4165e1:	add    BYTE PTR [ecx+0x2],0xfc
  4165e5:	sub    BYTE PTR [esi+0x4dbce7c4],al
  4165eb:	or     bl,BYTE PTR [ebp-0x41]
  4165ee:	pop    es
  4165ef:	and    al,BYTE PTR [ebx-0x74f0b100]
  4165f5:	fcomp  QWORD PTR [edi-0x44]
  4165f8:	jne    0x41658a
  4165fa:	jmp    0x5a7d91c7
  4165ff:	jae    0x4165b0
  416601:	push   cs
  416602:	inc    edi
  416603:	rcl    DWORD PTR [ebx+edx*4-0x50],cl
  416607:	dec    ecx
  416608:	(bad)  
  416609:	sbb    DWORD PTR ds:0x469d3349,edx
  41660f:	and    DWORD PTR [edi],eax
  416611:	(bad)  
  416613:	push   es
  416614:	sub    esi,DWORD PTR [edi]
  416616:	mov    ecx,0xa0b7923c
  41661b:	addr16 pop ecx
  41661d:	cmp    DWORD PTR [esi],esp
  41661f:	clc    
  416620:	push   edi
  416621:	repz mov bl,0x3e
  416624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416625:	nop
  416626:	pop    esp
  416628:	fstp   QWORD PTR [edx+0x42]
  41662b:	jb     0x4165ed
  41662d:	mov    esp,DWORD PTR [esi]
  41662f:	dec    esi
  416630:	mov    dh,0xfe
  416632:	std    
  416633:	das    
  416634:	pop    ebx
  416635:	cmp    ch,BYTE PTR [eax-0x73913a78]
  41663b:	or     bh,BYTE PTR es:[esi]
  41663e:	push   ecx
  41663f:	enter  0x470b,0x7c
  416643:	je     0x4165e5
  416645:	(bad)
  416648:	mov    ah,0x57
  41664a:	out    dx,al
  41664b:	out    0xa6,al
  41664d:	push   esi
  41664e:	lock jecxz 0x416620
  416651:	ins    BYTE PTR es:[edi],dx
  416652:	xor    DWORD PTR [eax+0x79b26b1f],edx
  416658:	xlat   BYTE PTR ds:[ebx]
  416659:	dec    BYTE PTR ds:0xa283e393
  41665f:	mov    dl,0xe1
  416661:	in     al,0x10
  416663:	stc    
  416664:	sar    ch,0x3b
  416667:	ss jae 0x4166b8
  41666a:	loop   0x4166d2
  41666c:	scas   al,BYTE PTR es:[edi]
  41666d:	lods   eax,DWORD PTR ds:[esi]
  41666e:	add    edx,DWORD PTR [edi+0xf]
  416671:	mov    eax,?
  416673:	jne    0x416661
  416675:	sbb    edi,DWORD PTR [eax+0x1050ada7]
  41667b:	rcl    edi,1
  41667d:	fistp  DWORD PTR [eax+ecx*8-0x35]
  416681:	inc    esi
  416682:	xlat   BYTE PTR ds:[ebx]
  416683:	mov    edx,0xe0471dfb
  416688:	inc    eax
  416689:	daa    
  41668a:	xchg   ecx,eax
  41668b:	jmp    0x4166ad
  41668d:	inc    ebx
  41668e:	fldcw  WORD PTR [ecx]
  416690:	inc    esi
  416691:	cld    
  416692:	adc    al,0x2a
  416694:	dec    esi
  416695:	int3   
  416696:	rcl    DWORD PTR [edx+ebp*4],0xdc
  41669a:	add    cl,0x55
  41669d:	shr    BYTE PTR [edi+0x5d],0x11
  4166a1:	inc    esp
  4166a2:	clc    
  4166a3:	out    dx,eax
  4166a4:	xchg   ebx,eax
  4166a5:	dec    esi
  4166a6:	xchg   edi,eax
  4166a7:	mov    eax,0x58e4b035
  4166ac:	xor    DWORD PTR [esi],0x3b
  4166af:	adc    ebx,0x50f0e8f
  4166b5:	xchg   edi,esp
  4166b7:	mov    bl,0x6f
  4166b9:	inc    esi
  4166ba:	sbb    DWORD PTR [esi-0x4b],edi
  4166bd:	push   cs
  4166be:	fadd   DWORD PTR [edx]
  4166c0:	stos   BYTE PTR es:[edi],al
  4166c1:	push   es
  4166c2:	sub    DWORD PTR [eax],0x88337b44
  4166c8:	outs   dx,DWORD PTR ds:[esi]
  4166c9:	mov    dl,0xe0
  4166cb:	and    BYTE PTR [ebx],al
  4166cd:	cmp    edx,0x9776bd62
  4166d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d4:	fdivr  st(4),st
  4166d6:	(bad)  
  4166d7:	jl     0x416673
  4166d9:	cmp    BYTE PTR [edi+eiz*8-0x4c],dl
  4166dd:	pop    edi
  4166de:	inc    ebp
  4166df:	push   0x1a
  4166e1:	test   BYTE PTR [edx],al
  4166e3:	mov    edx,0xb7380daa
  4166e8:	jno    0x416751
  4166ea:	(bad)  
  4166eb:	leave  
  4166ec:	fisub  WORD PTR [ebx-0x5]
  4166ef:	(bad)  
  4166f0:	jo     0x416672
  4166f2:	xchg   ecx,eax
  4166f3:	adc    eax,0x8cde2e11
  4166f8:	call   0x8aa6:0xb46b2604
  4166ff:	(bad)  
  416700:	rcl    BYTE PTR [eax],0xc5
  416703:	jg     0x4166cc
  416705:	mov    DWORD PTR [edi-0x35],eax
  416708:	rcr    BYTE PTR [edi],1
  41670a:	enter  0x1be8,0xe2
  41670e:	ss jp  0x416699
  416711:	xor    eax,0x83787762
  416716:	adc    al,0x57
  416718:	jp     0x41678a
  41671a:	mov    dl,0x8f
  41671c:	jmp    0x416798
  41671e:	sbb    ebx,eax
  416720:	pop    ds
  416721:	jg     0x416777
  416723:	inc    edx
  416724:	mov    WORD PTR [ebx-0x76c20bf8],fs
  41672a:	adc    BYTE PTR [ebp+0x4b],0x8
  41672e:	jbe    0x41679a
  416730:	push   ebp
  416731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416732:	jp     0x4166ef
  416734:	and    eax,DWORD PTR [ecx-0x4044b398]
  41673a:	cmp    ah,al
  41673c:	enter  0xe71,0x25
  416740:	loop   0x4166c6
  416742:	sbb    bl,0xab
  416745:	es pop ebx
  416747:	fcmovnb st,st(3)
  416749:	sub    al,0xb3
  41674b:	jns    0x4167b3
  41674d:	lahf   
  41674e:	addr16 js 0x4166d8
  416751:	fsubr  DWORD PTR [esi-0x6279f1aa]
  416757:	xchg   esi,eax
  416758:	xchg   edi,eax
  416759:	adc    dl,ch
  41675b:	into   
  41675c:	mov    eax,0xd801ab4b
  416761:	mov    bh,0xbd
  416763:	test   al,0x69
  416765:	sahf   
  416766:	or     esp,ebp
  416768:	mov    al,0x8
  41676a:	js     0x4167de
  41676c:	mov    ebp,0x3de7ebe3
  416771:	fmul   QWORD PTR [ecx+eiz*2-0xf863c7f]
  416778:	sub    ah,dl
  41677a:	popa   
  41677b:	pop    ebp
  41677c:	xchg   DWORD PTR ds:0xf6a2a45e,edx
  416782:	mov    bl,0xba
  416784:	add    cl,BYTE PTR [edx]
  416786:	mov    ds,esp
  416788:	cs out dx,eax
  41678a:	cld    
  41678b:	in     al,0x23
  41678d:	mov    al,0x5c
  41678f:	enter  0xd3a2,0xd3
  416793:	cmp    DWORD PTR [edi],esp
  416795:	test   eax,0xdfcdfc6f
  41679a:	push   ebp
  41679b:	mov    gs,WORD PTR [edx-0x4d9e3bbb]
  4167a1:	cmp    ch,dh
  4167a3:	scas   eax,DWORD PTR es:[edi]
  4167a4:	in     eax,dx
  4167a5:	pop    ecx
  4167a6:	scas   al,BYTE PTR es:[edi]
  4167a7:	lahf   
  4167a8:	shl    DWORD PTR gs:[ebx+0x4f],cl
  4167ac:	cmc    
  4167ad:	shr    BYTE PTR [esi+0x7e7731b],cl
  4167b3:	jge    0x416766
  4167b5:	in     al,dx
  4167b6:	and    al,0xe3
  4167b8:	jg     0x41675f
  4167ba:	aaa    
  4167bb:	mov    dl,0x87
  4167bd:	loop   0x416830
  4167bf:	push   esi
  4167c0:	jecxz  0x41676d
  4167c2:	dec    esp
  4167c3:	jnp    0x416782
  4167c5:	mov    edi,0x1801fa81
  4167ca:	cmp    ebx,ecx
  4167cc:	and    esi,DWORD PTR [ecx]
  4167ce:	(bad)  [ebp+0xfc00615]
  4167d4:	sub    BYTE PTR [edx+eax*4],al
  4167d7:	loop   0x416772
  4167d9:	(bad)
  4167dd:	xchg   edi,eax
  4167de:	(bad)
  4167e2:	or     ch,BYTE PTR [esi+edi*4-0x1a]
  4167e6:	aam    0x5
  4167e8:	cmc    
  4167e9:	pop    esp
  4167ea:	xchg   esi,eax
  4167eb:	scas   eax,DWORD PTR es:[edi]
  4167ec:	add    al,0x88
  4167ee:	xchg   edx,eax
  4167ef:	sbb    DWORD PTR [ecx-0x6069f6d4],0x1a204608
  4167f9:	mov    al,0xf1
  4167fb:	xor    ch,BYTE PTR [ebx]
  4167fd:	mov    ebx,0x975b1d3d
  416802:	call   FWORD PTR ss:[ebx]
  416805:	(bad)  
  416806:	and    DWORD PTR [edi+edi*1+0x71cfd463],esp
  41680d:	xlat   BYTE PTR ds:[ebx]
  41680e:	aam    0x9c
  416810:	or     BYTE PTR [ecx],al
  416812:	sub    al,BYTE PTR [esi+ebp*1-0x61]
  416816:	aad    0x84
  416818:	push   edx
  416819:	jbe    0x416822
  41681b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681c:	push   edx
  41681d:	and    al,BYTE PTR [edx]
  41681f:	adc    BYTE PTR ds:0x5538ea23,dl
  416825:	inc    edi
  416826:	and    DWORD PTR [edx-0x42c339a4],ebp
  41682c:	jb     0x416822
  41682e:	jnp    0x4167e0
  416830:	ja     0x4168a7
  416832:	pop    esi
  416833:	or     ch,cl
  416835:	add    eax,0x22a02ac1
  41683a:	dec    eax
  41683b:	nop
  41683c:	sbb    BYTE PTR [edi],0x8f
  41683f:	out    0xc5,al
  416841:	jecxz  0x41684c
  416843:	dec    ecx
  416844:	ret    
  416845:	sbb    cl,al
  416847:	loope  0x41682c
  416849:	hlt    
  41684a:	or     eax,0x5fb2f644
  41684f:	sub    bl,ch
  416851:	inc    ebx
  416852:	test   eax,0x65f43a15
  416857:	pop    es
  416858:	enter  0xb105,0x73
  41685c:	lds    esp,FWORD PTR cs:0x6184c38c
  416863:	stos   BYTE PTR es:[edi],al
  416864:	(bad)  
  416865:	pusha  
  416866:	mov    esi,0x9dc158e8
  41686b:	jg     0x41680f
  41686d:	adc    al,BYTE PTR [ebx+0x78]
  416870:	repnz and esi,ebx
  416873:	xor    edx,DWORD PTR [ebx]
  416875:	fdivp  st(1),st
  416877:	lods   eax,DWORD PTR ds:[esi]
  416878:	call   0xcd40:0x6e631c35
  41687f:	aas    
  416880:	scas   al,BYTE PTR es:[edi]
  416881:	cmp    BYTE PTR [ecx+eiz*2+0x67],dl
  416885:	xchg   ecx,esi
  416887:	jae    0x416899
  416889:	fisttp WORD PTR [edi+0x1fbb779d]
  41688f:	js     0x4168e6
  416891:	dec    edx
  416892:	mov    bl,0x71
  416894:	adc    eax,0xe166c799
  416899:	cwde   
  41689a:	(bad)  
  41689b:	mov    eax,ds:0xd49f6b53
  4168a0:	popf   
  4168a1:	adc    ebp,ecx
  4168a3:	xchg   BYTE PTR ds:0x5e27c075,bh
  4168a9:	pop    esp
  4168aa:	or     al,BYTE PTR [esi-0x76a8b628]
  4168b0:	sbb    ch,BYTE PTR [ebp-0x1]
  4168b3:	lods   al,BYTE PTR ds:[esi]
  4168b4:	push   edx
  4168b5:	pop    edx
  4168b6:	das    
  4168b7:	xor    esi,DWORD PTR [ecx-0x37a5574e]
  4168bd:	mov    al,BYTE PTR [esi-0x7f1dabf9]
  4168c3:	sub    ebx,ecx
  4168c5:	pop    ebp
  4168c6:	push   edx
  4168c7:	add    al,0xdf
  4168c9:	neg    esp
  4168cb:	in     eax,dx
  4168cc:	and    BYTE PTR [edx+eiz*2-0x2d],al
  4168d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168d1:	cmc    
  4168d2:	dec    edi
  4168d3:	push   edi
  4168d4:	mov    eax,0x851063ba
  4168d9:	jecxz  0x416907
  4168db:	inc    edi
  4168dc:	lea    ebx,[ebp+0x39]
  4168df:	adc    bl,BYTE PTR gs:[esi+0x2e]
  4168e3:	lods   eax,DWORD PTR ds:[esi]
  4168e4:	dec    esi
  4168e5:	sbb    eax,DWORD PTR [esi+0x54789e71]
  4168eb:	pop    es
  4168ec:	sub    ah,bl
  4168ee:	or     BYTE PTR [ecx+0x75fbfe2d],0x5
  4168f5:	out    dx,eax
  4168f6:	shl    DWORD PTR [edi+eiz*1+0x76824fd],1
  4168fd:	push   ds
  4168fe:	cmp    al,0xf4
  416900:	ret    
  416901:	repz dec ecx
  416903:	jbe    0x416926
  416905:	in     eax,dx
  416906:	sbb    esi,0xffffff97
  416909:	mov    esi,0x5080bfbd
  41690e:	xor    BYTE PTR [ebx+0x18],bl
  416911:	push   edi
  416912:	mov    DWORD PTR [edx],eax
  416914:	(bad)  
  416915:	ins    DWORD PTR es:[edi],dx
  416916:	dec    eax
  416917:	enter  0xdfa1,0x90
  41691b:	loope  0x41696a
  41691d:	retf   
  41691e:	xor    bh,BYTE PTR [ecx-0x4929b192]
  416924:	js     0x4168c3
  416926:	es retf 
  416928:	cld    
  416929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41692a:	lock pop ss
  41692c:	push   cs
  41692d:	popf   
  41692e:	loopne 0x416922
  416930:	lea    edi,[ecx+0x1c]
  416933:	mov    dl,0x67
  416935:	loopne 0x416999
  416937:	scas   eax,DWORD PTR es:[edi]
  416938:	jae    0x4168d0
  41693a:	js     0x416931
  41693c:	xchg   esi,eax
  41693d:	ficom  WORD PTR [esi]
  41693f:	mov    al,ds:0xc59ced79
  416944:	adc    BYTE PTR [edx-0x4d2b6463],ah
  41694a:	xor    eax,0x8d0d4b5a
  41694f:	ret    0x13f0
  416952:	add    ecx,eax
  416954:	repz adc al,0xe8
  416957:	mov    cl,BYTE PTR [ebx-0x38]
  41695a:	mov    esi,eax
  41695c:	xchg   ebx,eax
  41695d:	nop
  41695e:	jmp    0x4168e1
  416960:	pushf  
  416961:	mov    ah,0xb0
  416963:	sbb    al,0x9
  416965:	mov    dl,0xba
  416967:	cld    
  416968:	jne    0x41691e
  41696a:	mov    ebp,DWORD PTR [ebx]
  41696c:	mov    ch,0x94
  41696e:	sub    ebp,DWORD PTR [eax-0x22]
  416971:	xor    BYTE PTR fs:[ebx+0x5e016571],dl
  416978:	into   
  416979:	add    edx,DWORD PTR [edx-0x245fa520]
  41697f:	mov    ds:0x1960bf46,eax
  416984:	lea    eax,[esi+eiz*4+0xd06467f]
  41698b:	test   esi,0x6e49ba65
  416991:	cmp    DWORD PTR ds:0x309f0045,edx
  416997:	inc    esp
  416998:	sub    eax,0x75155005
  41699d:	push   edi
  41699e:	fwait
  41699f:	push   eax
  4169a0:	(bad)  
  4169a1:	mov    ecx,0x4fa63be2
  4169a6:	stos   DWORD PTR es:[edi],eax
  4169a7:	scas   eax,DWORD PTR es:[edi]
  4169a8:	dec    ecx
  4169a9:	adc    dh,BYTE PTR [edi]
  4169ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ac:	jns    0x41699b
  4169ae:	dec    edi
  4169af:	inc    edx
  4169b0:	add    ebp,DWORD PTR [ebx-0x68cb2d78]
  4169b6:	pop    ebx
  4169b7:	cwde   
  4169b8:	xchg   ecx,eax
  4169b9:	and    dl,ch
  4169bb:	mov    ss,WORD PTR [edi+0x22]
  4169be:	(bad)  
  4169bf:	xlat   BYTE PTR ds:[ebx]
  4169c0:	out    0xa4,eax
  4169c2:	sub    BYTE PTR [ebx+0x64b8c0d3],0xb4
  4169c9:	mov    fs,WORD PTR [edx-0x7b978c87]
  4169cf:	test   DWORD PTR [ecx],edx
  4169d1:	ret    0x5ff0
  4169d4:	xchg   ebx,eax
  4169d5:	jnp    0x416a18
  4169d7:	jg     0x41698f
  4169d9:	addr16 mov cl,dl
  4169dc:	xchg   DWORD PTR [esi+0x53411243],ebx
  4169e2:	xor    bh,BYTE PTR [eax+0x362d8706]
  4169e8:	pop    ds
  4169e9:	jp     0x4169da
  4169eb:	push   cs
  4169ec:	popf   
  4169ed:	daa    
  4169ee:	(bad)  
  4169ef:	or     DWORD PTR [ebx],ebx
  4169f1:	xchg   edx,eax
  4169f2:	xchg   edi,eax
  4169f3:	fsubr  QWORD PTR ds:[eax+0x7f]
  4169f7:	sbb    ebx,edx
  4169f9:	repnz pop ds
  4169fb:	mov    ds:0xe2aebbe8,al
  416a00:	dec    edi
  416a01:	mov    edx,0x4a1c0e39
  416a06:	test   BYTE PTR ds:0x53adfde3,bl
  416a0c:	and    eax,DWORD PTR [esi+0x2f]
  416a0f:	or     ah,0xd5
  416a12:	xchg   ecx,eax
  416a13:	data16 test BYTE PTR [esi+0x5c],dh
  416a17:	sbb    al,0x3e
  416a19:	out    dx,eax
  416a1a:	into   
  416a1b:	das    
  416a1c:	dec    eax
  416a1d:	mov    bh,BYTE PTR [eax+0x242c3024]
  416a23:	adc    bh,BYTE PTR gs:[edi]
  416a26:	sub    al,0x83
  416a28:	xchg   esi,eax
  416a29:	hlt    
  416a2a:	js     0x416a6c
  416a2c:	push   ss
  416a2d:	cwde   
  416a2e:	fwait
  416a2f:	out    0x75,eax
  416a31:	mov    DWORD PTR [ecx+0x3f43c384],esp
  416a37:	les    esi,FWORD PTR [edx]
  416a39:	lods   al,BYTE PTR ds:[esi]
  416a3a:	mov    edi,0x354e3248
  416a3f:	call   0x163c442e
  416a44:	or     cl,0x78
  416a47:	out    0xd0,eax
  416a49:	loop   0x416a79
  416a4b:	cmp    ebp,DWORD PTR [ebp+0x7b]
  416a4e:	mov    esp,0x33051b02
  416a53:	sub    al,0x93
  416a55:	mov    esp,DWORD PTR [eax]
  416a57:	xchg   ecx,eax
  416a58:	clc    
  416a59:	mov    dl,0x77
  416a5b:	nop
  416a5c:	cmp    ecx,DWORD PTR [esi+ebp*1]
  416a5f:	ja     0x416a69
  416a61:	mov    ds:0x6c03625f,al
  416a66:	fisttp QWORD PTR [ecx+0x3474c65c]
  416a6c:	pop    esp
  416a6d:	and    BYTE PTR [ebx],0x58
  416a70:	or     bl,BYTE PTR [ebx+eiz*2-0x32]
  416a74:	fs dec ecx
  416a76:	mov    DWORD PTR es:[ecx],0x4c927d3e
  416a7d:	xchg   esp,eax
  416a7e:	adc    BYTE PTR [edi+ebp*2],dl
  416a81:	jge    0x416a39
  416a83:	push   cs
  416a84:	(bad)  
  416a85:	cmp    DWORD PTR [eax+0x74d28a96],ebp
  416a8b:	jle    0x416a68
  416a8d:	repz jg 0x416aa9
  416a90:	mov    dh,bl
  416a92:	mov    al,0x3e
  416a94:	cmc    
  416a95:	xchg   ebp,eax
  416a96:	push   DWORD PTR [esi]
  416a98:	xchg   ebx,eax
  416a99:	mov    DWORD PTR [eax],ebp
  416a9b:	pop    ebx
  416a9c:	push   es
  416a9d:	popf   
  416a9e:	aad    0x78
  416aa0:	push   edx
  416aa1:	dec    ecx
  416aa2:	test   al,0x3f
  416aa4:	int3   
  416aa5:	mov    DWORD PTR [esi+0x79],ebp
  416aa8:	fsubr  DWORD PTR ds:0xe5d35756
  416aae:	push   0x97fa810c
  416ab3:	in     al,dx
  416ab4:	stos   BYTE PTR es:[edi],al
  416ab5:	xchg   edi,eax
  416ab6:	stc    
  416ab7:	aas    
  416ab8:	cmp    al,0x1d
  416aba:	ret    
  416abb:	dec    BYTE PTR [edx]
  416abd:	retf   
  416abe:	clc    
  416abf:	(bad)  
  416ac0:	and    al,0x76
  416ac2:	add    eax,0xa2e42f62
  416ac7:	push   ecx
  416ac8:	test   eax,0x26e3eb18
  416acd:	ss and eax,0x17f911e1
  416ad3:	jle    0x416aa4
  416ad5:	pusha  
  416ad6:	xor    BYTE PTR [esi-0x662e9d39],ch
  416adc:	scas   eax,DWORD PTR es:[edi]
  416add:	fld    DWORD PTR [ecx-0x535690cd]
  416ae3:	retf   
  416ae4:	xor    DWORD PTR [ebx+0x58cd2f2],0x869a2992
  416aee:	jbe    0x416b52
  416af0:	pop    ebx
  416af1:	rcl    DWORD PTR [ecx],cl
  416af3:	lods   eax,DWORD PTR ds:[esi]
  416af4:	jne    0x416a9b
  416af6:	push   0xf206b051
  416afb:	je     0x416b0d
  416afd:	sbb    eax,0xce75e087
  416b02:	and    cl,BYTE PTR [edi]
  416b04:	rcr    BYTE PTR [edi],cl
  416b06:	mov    ch,BYTE PTR [ecx+0x67]
  416b09:	jns    0x416b0d
  416b0b:	enter  0x3dc2,0x3c
  416b0f:	cld    
  416b10:	call   0xdcb1:0x6b7bb3bd
  416b17:	add    eax,0x8e03e8ca
  416b1c:	mov    esp,0xf9f0d202
  416b21:	pop    edx
  416b22:	xchg   DWORD PTR [esi+edi*4+0x7e],ecx
  416b26:	pop    ecx
  416b27:	repnz sub ecx,DWORD PTR [ecx]
  416b2a:	sub    al,0xd2
  416b2c:	ja     0x416b7d
  416b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b2f:	cmp    bh,BYTE PTR [edx-0x60]
  416b32:	jmp    0x29c9036
  416b37:	mov    al,ds:0xa5b5e8e0
  416b3c:	jle    0x416b5e
  416b3e:	hlt    
  416b3f:	jge    0x416ae6
  416b41:	mov    eax,0x952f1f1c
  416b46:	add    BYTE PTR [edi],ch
  416b48:	xor    DWORD PTR [esi-0x6886c528],edi
  416b4e:	imul   edx,edx,0xcdfd1d2a
  416b54:	add    BYTE PTR [eax-0x1be27bb8],bl
  416b5a:	repz jno 0x416af6
  416b5d:	(bad)  
  416b5f:	cwde   
  416b60:	push   edx
  416b61:	mov    eax,gs
  416b63:	mov    ds:0x343866bf,al
  416b68:	aaa    
  416b69:	in     eax,dx
  416b6a:	out    0x7e,al
  416b6c:	jns    0x416b98
  416b6e:	repz push ss
  416b70:	out    0x5c,al
  416b72:	sub    DWORD PTR [edx+eiz*8-0x5c142cf9],ebx
  416b79:	clc    
  416b7a:	mov    esi,edx
  416b7c:	loopne 0x416b04
  416b7e:	xlat   BYTE PTR ds:[ebx]
  416b7f:	add    eax,0xf1c07330
  416b84:	not    DWORD PTR [edx+eiz*8]
  416b87:	lods   eax,DWORD PTR ds:[esi]
  416b88:	js     0x416ba2
  416b8a:	jg     0x416b3d
  416b8c:	xor    DWORD PTR [ebp+0x1a850923],0x2bfca2d7
  416b96:	aas    
  416b97:	inc    ebx
  416b98:	xchg   ebp,eax
  416b99:	std    
  416b9a:	outs   dx,BYTE PTR ds:[esi]
  416b9b:	add    al,dh
  416b9d:	out    dx,al
  416b9e:	sti    
  416b9f:	sbb    BYTE PTR [edi-0x4c],ch
  416ba2:	adc    BYTE PTR [edi-0x800a6d0],dl
  416ba8:	inc    esp
  416ba9:	xor    BYTE PTR [ebp-0x27],cl
  416bac:	or     eax,0xf6da41bd
  416bb1:	cwde   
  416bb2:	aam    0x10
  416bb4:	(bad)  
  416bb5:	cmp    al,0x58
  416bb7:	fnstenv [edi-0x61]
  416bba:	lods   al,BYTE PTR ds:[esi]
  416bbb:	cmp    eax,DWORD PTR [eax-0x26]
  416bbe:	mov    ecx,DWORD PTR [esp+ecx*4+0x2cc588cc]
  416bc5:	and    eax,0xa27beda5
  416bca:	stos   DWORD PTR es:[edi],eax
  416bcb:	retf   
  416bcc:	push   ebp
  416bcd:	pop    ebx
  416bce:	mov    dh,0xeb
  416bd0:	popa   
  416bd1:	fdiv   QWORD PTR [ebx+0x2789e6f5]
  416bd7:	lahf   
  416bd8:	retf   
  416bd9:	in     eax,0x5d
  416bdb:	jmp    0x64878c1b
  416be0:	pop    esi
  416be1:	pusha  
  416be2:	imul   DWORD PTR [ebp+0x3c]
  416be5:	(bad)  
  416be6:	pop    edx
  416be7:	xchg   bh,bl
  416be9:	aaa    
  416bea:	ins    DWORD PTR es:[edi],dx
  416beb:	and    eax,DWORD PTR [esi]
  416bed:	data16 xor al,0x8
  416bf0:	(bad)  
  416bf1:	aas    
  416bf2:	push   ebp
  416bf3:	sar    BYTE PTR [eax],1
  416bf5:	mov    ds:0xc3520745,eax
  416bfa:	test   al,0xc0
  416bfc:	inc    ebx
  416bfd:	or     al,0x8c
  416bff:	pop    ebp
  416c00:	aam    0x3d
  416c02:	xor    dl,BYTE PTR ss:[ebp+0x79]
  416c06:	dec    DWORD PTR [edx-0x5f]
  416c09:	pushf  
  416c0a:	mov    edx,0x2fa054dc
  416c0f:	out    dx,al
  416c10:	or     al,0x27
  416c12:	test   eax,0x82f38461
  416c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c18:	loop   0x416c53
  416c1a:	sbb    esi,eax
  416c1c:	jle    0x416bdd
  416c1e:	push   ecx
  416c1f:	pop    edi
  416c20:	cmp    eax,0x13190564
  416c25:	and    ah,ch
  416c27:	cmp    cl,BYTE PTR [ebx-0x1f]
  416c2a:	dec    esp
  416c2b:	fbld   TBYTE PTR [esp+edi*2-0x2eeca135]
  416c32:	neg    DWORD PTR [esi-0x4c]
  416c35:	lock packssdw mm5,QWORD PTR [esp+eiz*8]
  416c3a:	sub    eax,0xcf7b2794
  416c3f:	sub    DWORD PTR [edx+0x31],ebp
  416c42:	cmp    esi,DWORD PTR [esi]
  416c44:	js     0x416c30
  416c46:	xchg   esp,eax
  416c47:	jle    0x416c42
  416c49:	retf   0xc7e6
  416c4c:	loope  0x416c9b
  416c4e:	(bad)  
  416c4f:	mov    ch,BYTE PTR [eax]
  416c51:	add    DWORD PTR [ebx+0x2f],0x70670438
  416c58:	je     0x416c5a
  416c5a:	out    0x55,eax
  416c5c:	jg     0x416bfd
  416c5e:	ins    DWORD PTR es:[edi],dx
  416c5f:	xchg   ebx,eax
  416c60:	or     ebx,DWORD PTR [ebx-0x524e9a1a]
  416c66:	adc    BYTE PTR [ebp+0x41ffff60],dl
  416c6c:	cmp    dh,BYTE PTR [edi+edi*4-0x2d]
  416c70:	ret    0x3e30
  416c73:	inc    ecx
  416c74:	and    BYTE PTR [esi],0xf5
  416c77:	js     0x416c88
  416c79:	and    al,0x9c
  416c7b:	xchg   edi,eax
  416c7c:	(bad)  
  416c7e:	push   edi
  416c7f:	es adc eax,0x8298a45a
  416c85:	sub    eax,0xe555df7b
  416c8b:	mov    ecx,0x1e72bf7c
  416c90:	mov    dl,0x10
  416c92:	xor    DWORD PTR [edi],eax
  416c94:	sub    eax,0x88a4ce6e
  416c99:	or     eax,0xdeadf6b7
  416c9e:	push   esp
  416c9f:	mov    dl,bh
  416ca1:	add    BYTE PTR [edx+0x3a42a019],bl
  416ca7:	test   cl,al
  416ca9:	jge    0x416c6c
  416cab:	retf   0xa45b
  416cae:	shl    edi,1
  416cb0:	retf   
  416cb1:	retf   
  416cb2:	retf   0xc0aa
  416cb5:	fdiv   DWORD PTR [ecx+esi*1+0x6a]
  416cb9:	jb     0x416cda
  416cbb:	jl     0x416c61
  416cbd:	loope  0x416c45
  416cbf:	call   0x7975:0xc1e31404
  416cc6:	jge    0x416d24
  416cc8:	xor    al,0x4
  416cca:	mov    dl,0x1e
  416ccc:	mov    al,ch
  416cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ccf:	pop    edi
  416cd0:	lock sbb ah,BYTE PTR [edx+0x64a5c181]
  416cd7:	mov    esi,0xfe65f4c0
  416cdc:	pop    ebx
  416cdd:	lods   eax,DWORD PTR ds:[esi]
  416cde:	adc    BYTE PTR [ebx],0x41
  416ce1:	jle    0x416d5e
  416ce3:	stos   BYTE PTR es:[edi],al
  416ce4:	and    al,0x73
  416ce6:	lock outs dx,DWORD PTR ds:[esi]
  416ce8:	ss stos BYTE PTR es:[edi],al
  416cea:	mov    esi,0xc8e4b616
  416cef:	fisubr DWORD PTR [esi-0x7d]
  416cf2:	mov    ebx,0xdbd0f5e0
  416cf7:	xchg   esp,ebp
  416cf9:	outs   dx,DWORD PTR ds:[esi]
  416cfa:	sbb    dl,BYTE PTR ds:0x937aa73d
  416d00:	push   ecx
  416d01:	push   0xffffff9e
  416d03:	bnd jmp 0x416c97
  416d06:	mov    bh,0x0
  416d08:	or     al,0xac
  416d0a:	cmp    esp,edi
  416d0c:	pusha  
  416d0d:	pop    esi
  416d0e:	fwait
  416d0f:	cmp    DWORD PTR [edi+esi*8+0x12],ebx
  416d13:	cmp    edx,DWORD PTR [ecx+0x61aa9fcb]
  416d19:	ins    DWORD PTR es:[edi],dx
  416d1a:	gs ret 
  416d1c:	jp     0x416d1b
  416d1e:	ins    BYTE PTR es:[edi],dx
  416d1f:	call   0x6027:0xfa2aad99
  416d26:	dec    edx
  416d27:	sbb    ebp,DWORD PTR [ebp+0x3b]
  416d2a:	call   0xde8983cd
  416d2f:	mov    BYTE PTR [eax+0x72],dh
  416d32:	std    
  416d33:	dec    ebp
  416d34:	adc    DWORD PTR [ebp+edi*8-0x66],ebp
  416d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d39:	ss in  al,dx
  416d3b:	dec    esp
  416d3c:	jae    0x416db1
  416d3e:	int    0x7f
  416d40:	or     ebx,DWORD PTR fs:[ebp+0x315da654]
  416d47:	jg     0x416d3d
  416d49:	add    eax,0x61951faa
  416d4e:	stos   BYTE PTR es:[edi],al
  416d4f:	mov    ch,0xa9
  416d51:	cmp    eax,0xcf421bc
  416d56:	push   eax
  416d57:	sbb    eax,0xbd11a242
  416d5c:	inc    ecx
  416d5d:	xchg   ecx,eax
  416d5e:	xchg   ebx,eax
  416d5f:	fwait
  416d60:	adc    edi,0xd65e5eb7
  416d66:	enter  0xd87e,0x70
  416d6a:	and    edx,ebp
  416d6c:	cmc    
  416d6d:	scas   al,BYTE PTR es:[edi]
  416d6e:	or     al,0xf9
  416d70:	inc    ebx
  416d71:	(bad)  
  416d72:	jne    0x416da9
  416d74:	pop    ecx
  416d75:	mov    ecx,fs
  416d77:	ret    
  416d78:	or     eax,0x206f619a
  416d7d:	sub    BYTE PTR [ebx-0x3d],bh
  416d80:	add    esp,DWORD PTR [ecx-0x71]
  416d83:	xchg   edx,eax
  416d84:	das    
  416d85:	xchg   BYTE PTR [edx-0x13],bh
  416d88:	jb     0x416da8
  416d8a:	popa   
  416d8b:	or     dl,bh
  416d8d:	retf   
  416d8e:	or     esp,DWORD PTR [eax+0x4a]
  416d91:	mov    bh,0x6a
  416d93:	scas   al,BYTE PTR es:[edi]
  416d94:	fcom   DWORD PTR [esi+0x3380c8cd]
  416d9a:	or     BYTE PTR [edx+eax*4+0x5a0c2249],ch
  416da1:	aam    0x2c
  416da3:	std    
  416da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da6:	inc    ecx
  416da7:	int    0xab
  416da9:	test   al,0x52
  416dab:	dec    edx
  416dac:	loop   0x416dda
  416dae:	dec    ebx
  416daf:	std    
  416db0:	lahf   
  416db1:	sti    
  416db2:	in     eax,0x5a
  416db4:	test   BYTE PTR [edx+0x4c5ea40e],0xf0
  416dbb:	fwait
  416dbc:	add    eax,0xa017abc4
  416dc1:	sub    BYTE PTR [edx*1-0x470fa39b],dh
  416dc8:	or     eax,0x10b83218
  416dcd:	(bad)  
  416dce:	lods   eax,DWORD PTR ds:[esi]
  416dcf:	enter  0x37d2,0x73
  416dd3:	xor    DWORD PTR [edi+0x81c64a5],eax
  416dd9:	nop
  416dda:	jbe    0x416d69
  416ddc:	pop    es
  416ddd:	jge    0x416d93
  416ddf:	adc    al,0x19
  416de1:	fdivr  st,st(5)
  416de3:	fild   QWORD PTR [edi+ecx*4-0x39]
  416de7:	cwde   
  416de8:	push   ecx
  416de9:	jle    0x416d9b
  416deb:	xor    eax,0x90912cac
  416df0:	shl    BYTE PTR [edx],1
  416df2:	sbb    ecx,DWORD PTR [ebx]
  416df4:	add    bh,BYTE PTR [edi-0x80]
  416df7:	std    
  416df8:	jbe    0x416db9
  416dfa:	jle    0x416e65
  416dfc:	or     edx,DWORD PTR [esi-0x6eced69f]
  416e02:	jo     0x416d9f
  416e04:	pop    esi
  416e05:	push   esp
  416e06:	test   BYTE PTR [eax],al
  416e08:	ror    BYTE PTR [eax],1
  416e0a:	and    eax,0x71
  416e0d:	jecxz  0x416df5
  416e0f:	sti    
  416e10:	in     al,0xaf
  416e12:	ds cdq 
  416e14:	rol    DWORD PTR [eax+0x68],1
  416e17:	mov    eax,ds:0x91eb6b9f
  416e1c:	in     al,0xbf
  416e1e:	pop    ecx
  416e1f:	int3   
  416e20:	dec    eax
  416e21:	push   0x240cdd30
  416e26:	mov    DWORD PTR [edx],esp
  416e28:	push   0xe0d80d60
  416e2d:	adc    dl,BYTE PTR [eax-0x31a2c08a]
  416e33:	pop    ss
  416e34:	ins    BYTE PTR es:[edi],dx
  416e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e36:	mov    DWORD PTR [eax+eiz*4-0x3572fbfd],ecx
  416e3d:	ds idiv bh
  416e40:	pusha  
  416e41:	inc    ebx
  416e42:	pusha  
  416e43:	mov    DWORD PTR [ebx+0x5],ebx
  416e46:	(bad)  
  416e47:	outs   dx,DWORD PTR ds:[esi]
  416e48:	call   0xafb5d86c
  416e4d:	int3   
  416e4e:	not    al
  416e50:	xor    esi,DWORD PTR [eax+0x65]
  416e53:	jp     0x416e39
  416e55:	mov    ch,0xc0
  416e57:	inc    ebp
  416e58:	add    DWORD PTR [ecx-0x36],ecx
  416e5b:	inc    edx
  416e5c:	dec    esp
  416e5d:	add    bl,BYTE PTR [edx+0x59]
  416e60:	and    bh,0x4c
  416e63:	xchg   edi,eax
  416e64:	out    0x76,al
  416e66:	gs dec edi
  416e68:	je     0x416e9f
  416e6a:	mov    ds:0x29190b69,eax
  416e6f:	outs   dx,DWORD PTR ds:[esi]
  416e70:	cmp    BYTE PTR [eax-0x23],dl
  416e73:	stos   BYTE PTR es:[edi],al
  416e74:	or     bh,BYTE PTR [ebx-0x60852c92]
  416e7a:	lds    esi,FWORD PTR [ecx+0x2f]
  416e7d:	in     eax,0xf3
  416e7f:	adc    eax,0xbdce888d
  416e84:	ror    dl,1
  416e86:	and    ecx,DWORD PTR [edi+0x5a]
  416e89:	ror    DWORD PTR [eax],0x21
  416e8c:	gs push ecx
  416e8e:	push   ebx
  416e8f:	outs   dx,DWORD PTR ds:[esi]
  416e90:	mov    al,ds:0x93ebb20a
  416e95:	or     DWORD PTR [esi],ecx
  416e97:	retf   
  416e98:	xlat   BYTE PTR ds:[ebx]
  416e99:	ds pop ss
  416e9b:	xchg   esi,eax
  416e9c:	and    DWORD PTR [ecx],eax
  416e9e:	mov    esp,0xd48391b9
  416ea3:	aam    0x41
  416ea5:	adc    ebp,DWORD PTR [esi-0x45]
  416ea8:	les    edi,FWORD PTR [esi-0x63]
  416eab:	stc    
  416eac:	mov    esi,0xa4fb246a
  416eb1:	mov    esi,0x42ca95a3
  416eb6:	stc    
  416eb7:	jnp    0x416ee2
  416eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eba:	ficomp DWORD PTR [ebx]
  416ebc:	jmp    0xd9c9:0x3ae07317
  416ec3:	lds    ecx,FWORD PTR [ebx-0x20]
  416ec6:	mov    ecx,0x47dbad56
  416ecb:	ds xchg ebx,eax
  416ecd:	add    BYTE PTR ds:[esi+0x55],dh
  416ed1:	shr    BYTE PTR [ecx],0xec
  416ed4:	int3   
  416ed5:	les    edi,FWORD PTR [eax-0x5b]
  416ed8:	inc    edx
  416ed9:	popf   
  416eda:	repz ret 
  416edc:	(bad)  
  416ede:	pop    ss
  416edf:	in     eax,dx
  416ee0:	or     eax,0xc871d1e6
  416ee5:	cmp    ecx,DWORD PTR [ebp+0x7df3c91e]
  416eeb:	or     DWORD PTR [ecx+0x16eee03d],ebp
  416ef1:	(bad)  
  416ef3:	lds    eax,FWORD PTR [ecx]
  416ef5:	(bad)  
  416ef6:	xor    al,0x59
  416ef8:	cmp    al,0x4a
  416efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416efb:	push   0x90d6b3ca
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	cli    
  416f18:	dec    eax
  416f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f1a:	fist   WORD PTR [ebx+0x17838240]
  416f20:	pop    esp
  416f21:	add    DWORD PTR [ebx+0x2a7e931b],0x4e
  416f28:	retf   0xdd1d
  416f2b:	push   cs
  416f2c:	fxch   st(3)
  416f2e:	clc    
  416f2f:	(bad)  
  416f30:	pop    edi
  416f31:	xchg   ebx,eax
  416f32:	add    ah,BYTE PTR [ebx+0x3d]
  416f35:	add    al,0x4c
  416f37:	in     eax,dx
  416f38:	scas   al,BYTE PTR es:[edi]
  416f39:	xchg   edx,eax
  416f3a:	out    0x91,eax
  416f3c:	cwde   
  416f3d:	mov    eax,ds:0x427908cf
  416f42:	stos   BYTE PTR es:[edi],al
  416f43:	(bad)  
  416f44:	push   ebp
  416f45:	mov    esp,0x7650e20a
  416f4a:	inc    ebp
  416f4b:	imul   ebp,DWORD PTR [ecx],0x61
  416f4e:	and    bh,BYTE PTR [edi+0x33]
  416f51:	lods   al,BYTE PTR ds:[esi]
  416f52:	or     ecx,DWORD PTR [edx+0x4a4f410f]
  416f58:	cmp    esi,DWORD PTR [ecx-0x4055370e]
  416f5e:	push   cs
  416f5f:	add    BYTE PTR [ecx],ah
  416f61:	sar    BYTE PTR [eax+0x14],0xe
  416f65:	scas   al,BYTE PTR es:[edi]
  416f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f67:	rol    DWORD PTR [ebx-0x67],0xad
  416f6b:	sub    BYTE PTR [esi-0x22bd529],dh
  416f71:	xchg   DWORD PTR [eax+ebx*8-0x2d],esi
  416f75:	mov    eax,0xb40c3a58
  416f7a:	dec    ebp
  416f7b:	pop    edi
  416f7c:	push   cs
  416f7d:	(bad)  
  416f7e:	(bad)  
  416f7f:	sub    eax,esp
  416f81:	int3   
  416f82:	cdq    
  416f83:	mov    ch,0x74
  416f85:	ret    
  416f86:	es push cs
  416f88:	iret   
  416f89:	jne    0x416fcc
  416f8b:	dec    esi
  416f8c:	cdq    
  416f8d:	mov    WORD PTR [edx-0x68],ds
  416f90:	pop    ds
  416f91:	lods   eax,DWORD PTR ds:[esi]
  416f92:	cmp    eax,0x6dc2d1e7
  416f97:	mov    ah,0x62
  416f99:	clc    
  416f9a:	mov    BYTE PTR [ebx+0x28],cl
  416f9d:	adc    al,0xf3
  416f9f:	rol    BYTE PTR [edx],0xa
  416fa2:	out    0xf3,al
  416fa4:	mov    al,ds:0x60aa3821
  416fa9:	ss repnz call 0xc44a:0x6db89668
  416fb2:	addr16 mov edi,0xbdfec1ba
  416fb8:	sbb    ch,BYTE PTR [ecx+0x1d4ddb0f]
  416fbe:	sbb    eax,0x4c709d35
  416fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc4:	outs   dx,BYTE PTR ds:[esi]
  416fc5:	repnz cdq 
  416fc7:	loop   0x416fda
  416fc9:	pop    ss
  416fca:	popf   
  416fcb:	or     al,0x19
  416fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fce:	jne    0x41701a
  416fd0:	popa   
  416fd1:	mov    eax,ds:0x69ed60f8
  416fd6:	lods   al,BYTE PTR ds:[esi]
  416fd7:	and    esp,DWORD PTR [eax-0xf]
  416fda:	retf   0x98c2
  416fdd:	jmp    0x7e869def
  416fe2:	int    0xb7
  416fe4:	adc    eax,0xb5ab334b
  416fe9:	cmp    BYTE PTR [ebx],bh
  416feb:	push   es
  416fec:	sbb    eax,0xc5af394c
  416ff1:	out    0xde,al
  416ff3:	sub    eax,0xd804cb6
  416ff8:	bound  esi,QWORD PTR [esi]
  416ffa:	jmp    0xc754:0xbec7bacb
  417001:	push   ss
  417002:	xchg   esp,eax
  417003:	mov    cl,BYTE PTR [edi]
  417005:	sbb    eax,0x8a60d7d
  41700a:	pop    esi
  41700b:	push   esp
  41700c:	push   edx
  41700d:	jnp    0x417040
  41700f:	clc    
  417010:	lahf   
  417011:	and    edi,DWORD PTR [edx]
  417013:	je     0x417050
  417015:	mov    bl,bl
  417017:	retfw  
  417019:	dec    eax
  41701a:	pop    ebx
  41701b:	std    
  41701c:	sub    eax,0x393fbfb2
  417021:	cld    
  417022:	fisttp DWORD PTR [esi+0x31227941]
  417028:	mov    ecx,0x68c877f4
  41702d:	sub    ecx,DWORD PTR [ebp-0x66]
  417030:	hlt    
  417031:	shl    al,1
  417033:	aad    0xe0
  417035:	fmul   DWORD PTR fs:[ebp-0x6fc5e2e0]
  41703c:	push   eax
  41703d:	sbb    ebx,edi
  41703f:	stos   DWORD PTR es:[edi],eax
  417040:	or     ah,BYTE PTR [edx+0x50]
  417043:	test   BYTE PTR [ecx-0x1],0xcd
  417047:	xchg   DWORD PTR [edi+edx*1],esp
  41704a:	fsubr  DWORD PTR [edx-0x33]
  41704d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41704e:	fadd   st(1),st
  417050:	loope  0x417089
  417052:	jecxz  0x417066
  417054:	xchg   edx,eax
  417055:	dec    ebp
  417056:	or     BYTE PTR ds:0xe1f40281,0x39
  41705d:	mov    ss,WORD PTR [edi+0x63b2119a]
  417063:	or     esi,DWORD PTR [ebp-0x47dc7f8f]
  417069:	push   cs
  41706a:	sbb    DWORD PTR [ebx-0x2020feec],0xffffffa3
  417071:	retf   0xd80c
  417074:	sub    eax,0xbf79c0eb
  417079:	das    
  41707a:	add    DWORD PTR [ebx+0x7ee31340],edx
  417080:	hlt    
  417081:	sbb    al,0xf5
  417084:	mov    ds,ebx
  417086:	dec    ecx
  417087:	push   ss
  417088:	cmp    eax,0xce0b5732
  41708d:	sub    BYTE PTR [ebp-0x4b82a83e],dh
  417093:	cs jmp 0x9bfebae6
  417099:	xor    dl,BYTE PTR [edx+ecx*8+0x5ae642a4]
  4170a0:	or     BYTE PTR [esi+0x55],dl
  4170a3:	mov    al,0x40
  4170a5:	jp     0x417115
  4170a7:	mov    esi,0x3120484b
  4170ac:	(bad)  
  4170ad:	mov    esi,0x5f3c7c8e
  4170b2:	bound  ebp,QWORD PTR [esi]
  4170b4:	retf   
  4170b5:	sub    DWORD PTR [ebp-0x4e],0x47722409
  4170bc:	adc    cl,BYTE PTR [edx+0x3d9207a8]
  4170c2:	xchg   ebx,eax
  4170c3:	outs   dx,DWORD PTR ds:[esi]
  4170c4:	push   0xffffff9a
  4170c6:	(bad)  
  4170c7:	pop    edx
  4170c8:	push   ebp
  4170c9:	inc    esi
  4170ca:	sqrtps xmm5,xmm2
  4170cd:	mov    eax,ds:0xee602eb
  4170d2:	inc    esp
  4170d3:	pop    es
  4170d4:	test   bh,al
  4170d6:	shr    DWORD PTR ds:0xe1cb5656,1
  4170dc:	and    esi,DWORD PTR [ebx+ecx*8-0x22ad1edc]
  4170e3:	or     ebx,esp
  4170e5:	mov    ebx,0x9fad7237
  4170ea:	mov    ch,0x12
  4170ec:	adc    bl,al
  4170ee:	xlat   BYTE PTR ds:[ebx]
  4170ef:	jmp    0xb338be4c
  4170f4:	inc    eax
  4170f5:	mov    ecx,cs
  4170f7:	test   eax,0x66a3b0d9
  4170fc:	add    bh,BYTE PTR [eax-0x5f]
  4170ff:	mov    bh,0xed
  417101:	fxam   
  417103:	or     edi,ebp
  417105:	lds    ebx,FWORD PTR [edi-0x40671fe1]
  41710b:	call   0xad6b:0xd42601e4
  417112:	mov    dh,0x75
  417114:	inc    esp
  417115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417116:	pop    ecx
  417117:	stos   BYTE PTR es:[edi],al
  417118:	neg    DWORD PTR [edx]
  41711a:	pop    edi
  41711b:	mov    edx,edx
  41711d:	dec    ebp
  41711e:	mov    ah,0xb3
  417120:	fisubr WORD PTR [esi-0x4c]
  417123:	mov    esp,0x90955709
  417128:	(bad)  
  417129:	bound  edi,QWORD PTR [esi-0x191965fa]
  41712f:	xor    BYTE PTR [ecx-0x11c1ecac],ah
  417135:	xor    ah,0x8b
  417138:	daa    
  417139:	pop    ebx
  41713a:	aad    0x47
  41713c:	and    al,0x61
  41713e:	gs cli 
  417140:	mov    WORD PTR [ebp-0x6b941768],?
  417146:	sar    BYTE PTR [ebx+ebp*2+0x6d],cl
  41714a:	mov    edx,0x8b0859ee
  41714f:	lods   eax,DWORD PTR ds:[esi]
  417150:	jle    0x4170fe
  417152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417153:	dec    ecx
  417154:	(bad)  
  417155:	int3   
  417156:	or     BYTE PTR [edx+0x33],bh
  417159:	sbb    ah,BYTE PTR [edx+0x27]
  41715c:	mov    ch,0xff
  41715e:	sub    BYTE PTR [edx],bh
  417160:	enter  0x6d88,0x25
  417164:	mov    cl,0x8b
  417166:	fdivr  QWORD PTR [esi+0x2b]
  417169:	xchg   edx,eax
  41716a:	fimul  WORD PTR [eax+esi*4-0x27]
  41716e:	jb     0x4171db
  417170:	mov    bh,0xe9
  417172:	xlat   BYTE PTR ds:[ebx]
  417173:	jl     0x4171e1
  417175:	or     al,0xc1
  417177:	and    eax,0x43a054fd
  41717c:	(bad)  
  41717d:	lods   al,BYTE PTR ds:[esi]
  41717e:	leave  
  41717f:	test   DWORD PTR [eax+0x34],0x916b9db1
  417186:	push   es
  417187:	test   al,0xae
  417189:	and    cl,al
  41718b:	nop
  41718c:	sti    
  41718d:	mov    ecx,0x733a9712
  417192:	lahf   
  417193:	sbb    eax,0x3d677f53
  417198:	dec    ebx
  417199:	push   edx
  41719a:	cmp    bh,BYTE PTR [edx+0x15]
  41719d:	jmp    0x7870:0x7da74d80
  4171a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171a5:	imul   esp,DWORD PTR [edx+eax*4],0x7b
  4171a9:	call   0xa3a2:0x3cbd0cd7
  4171b0:	es jbe 0x417178
  4171b3:	fptan  
  4171b5:	pop    ebx
  4171b6:	cld    
  4171b7:	xchg   ebx,eax
  4171b8:	mov    al,ds:0x988e95b1
  4171bd:	adc    BYTE PTR [ebx-0x21],dl
  4171c0:	pop    ecx
  4171c1:	mov    edx,0x19bb7895
  4171c6:	push   0x6722ae4
  4171cb:	rcl    BYTE PTR [esi+0x31fca3f],cl
  4171d1:	push   eax
  4171d2:	xchg   edx,eax
  4171d3:	stos   DWORD PTR es:[edi],eax
  4171d4:	lahf   
  4171d5:	jns    0x4171b9
  4171d7:	add    dl,BYTE PTR gs:[bp+si+0x74]
  4171dc:	adc    eax,0xdfff1484
  4171e1:	mov    ss,esi
  4171e3:	mov    bh,0x2d
  4171e5:	or     al,0x60
  4171e7:	lds    ebp,FWORD PTR [ecx-0x265b7321]
  4171ed:	mov    ebx,0xe893d7d1
  4171f2:	aad    0xd3
  4171f4:	or     eax,DWORD PTR [esi]
  4171f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f7:	push   ss
  4171f8:	xor    al,0x81
  4171fa:	pushf  
  4171fb:	mov    bh,0x47
  4171fd:	fwait
  4171fe:	dec    esi
  4171ff:	neg    DWORD PTR [eax-0x64]
  417202:	ja     0x417250
  417204:	iret   
  417205:	leave  
  417206:	(bad)  
  417207:	stc    
  417208:	sbb    eax,0xb3cc401f
  41720d:	adc    ebp,ebx
  41720f:	jns    0x4171a7
  417211:	std    
  417212:	and    DWORD PTR [edi],ebp
  417214:	mov    dh,0xb6
  417216:	hlt    
  417217:	jo     0x4171e0
  417219:	xchg   esp,eax
  41721a:	jecxz  0x41727c
  41721c:	push   ecx
  41721d:	fcmovnbe st,st(5)
  41721f:	adc    BYTE PTR [ebx-0x384d19c8],0x70
  417226:	jl     0x417247
  417228:	xchg   esp,eax
  417229:	dec    esi
  41722a:	xor    al,0x6e
  41722c:	inc    ecx
  41722d:	jecxz  0x417211
  41722f:	mov    ch,0x36
  417231:	dec    edi
  417232:	xlat   BYTE PTR ds:[ebx]
  417233:	sbb    bl,0xca
  417236:	test   al,0x6
  417238:	shl    DWORD PTR [eax-0x4c7951f2],0x80
  41723f:	ret    0xb884
  417242:	jge    0x417251
  417244:	pop    ebp
  417245:	or     DWORD PTR [ebp+0x70],eax
  417248:	cmc    
  417249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724a:	lods   eax,DWORD PTR ds:[esi]
  41724b:	rcr    BYTE PTR [ebp+0x4f],cl
  41724e:	push   edi
  41724f:	mov    ebp,es
  417251:	mov    edx,0x8210913e
  417256:	mov    eax,0x8a0849eb
  41725b:	push   esp
  41725c:	int3   
  41725d:	mov    eax,0x8b2fc453
  417262:	push   ebp
  417263:	inc    edi
  417264:	dec    eax
  417265:	into   
  417266:	repz adc bh,al
  417269:	ins    DWORD PTR es:[edi],dx
  41726a:	pushf  
  41726b:	xor    BYTE PTR [ebx-0x68],al
  41726e:	jle    0x417291
  417270:	inc    edi
  417271:	mov    edx,0xc7fd8e53
  417276:	or     BYTE PTR [ecx],al
  417278:	jl     0x4172c2
  41727a:	xor    esp,DWORD PTR [edi+0x2c02f06b]
  417280:	gs add eax,0x8d04dac0
  417286:	or     BYTE PTR [ecx+0x73],bl
  417289:	test   DWORD PTR [ebp+0xa],eax
  41728c:	(bad)  
  41728d:	dec    eax
  41728e:	or     BYTE PTR [ecx-0x45],al
  417291:	cmp    esp,esi
  417293:	in     eax,0x45
  417295:	sub    ecx,ebp
  417297:	jmp    0xb3db:0xe14a571d
  41729e:	imul   esi,eax,0xc877945e
  4172a4:	fcmovu st,st(4)
  4172a6:	cmp    al,0xdc
  4172a8:	ins    BYTE PTR es:[edi],dx
  4172a9:	jmp    0x2839:0x5e5026f8
  4172b0:	in     al,dx
  4172b1:	cmp    BYTE PTR [ebp+0x7b],dl
  4172b4:	je     0x41727d
  4172b6:	div    DWORD PTR [esi-0x6eb549f3]
  4172bc:	sbb    ah,BYTE PTR [esi]
  4172be:	sbb    BYTE PTR [edx-0x20],0x23
  4172c2:	sub    al,0x22
  4172c4:	out    dx,eax
  4172c5:	cwde   
  4172c6:	mov    eax,ds:0xf565f5fa
  4172cb:	mov    DWORD PTR [eax],ebx
  4172cd:	std    
  4172ce:	cmp    esi,edx
  4172d0:	ret    0x7ccf
  4172d3:	in     al,dx
  4172d4:	adc    al,0x21
  4172d6:	lea    ecx,[ebx-0x2c80c74]
  4172dc:	in     al,0x52
  4172de:	adc    esi,0x13
  4172e1:	sbb    al,BYTE PTR [eax]
  4172e3:	push   edx
  4172e4:	mov    cl,0x98
  4172e6:	xchg   esi,eax
  4172e7:	xchg   ebx,eax
  4172e8:	inc    ebx
  4172e9:	cli    
  4172ea:	push   0xebee1030
  4172ef:	xchg   DWORD PTR [eax],ebx
  4172f1:	inc    edx
  4172f2:	and    BYTE PTR [eax+0x2f],cl
  4172f5:	out    dx,al
  4172f6:	xchg   esi,eax
  4172f7:	push   cs
  4172f8:	pop    ebp
  4172f9:	js     0x41736e
  4172fb:	mov    ecx,DWORD PTR [edx+0x62]
  4172fe:	push   edx
  4172ff:	xor    dl,al
  417301:	ss and ch,dh
  417304:	xchg   ebx,eax
  417305:	xchg   BYTE PTR [edi],bh
  417307:	fadd   QWORD PTR [esi-0x79]
  41730a:	icebp  
  41730b:	cli    
  41730c:	xor    ch,dl
  41730e:	repz jo 0x417343
  417311:	daa    
  417312:	sbb    edi,DWORD PTR [esi-0x4a]
  417315:	xor    al,0x58
  417317:	sub    eax,0xc273a49
  41731c:	cmp    DWORD PTR ss:[esi+0x374e386f],ebx
  417323:	adc    eax,0x5bacf8ae
  417328:	aas    
  417329:	mov    bl,0xb0
  41732b:	enter  0xe1ed,0xc7
  41732f:	mov    edi,0x12372744
  417334:	lahf   
  417335:	jl     0x417373
  417337:	stos   BYTE PTR es:[edi],al
  417338:	es sub eax,0xde6e3c9e
  41733e:	sbb    al,0x30
  417340:	xor    dh,bl
  417342:	mov    bl,0x87
  417344:	sub    edx,ecx
  417346:	dec    ecx
  417347:	or     eax,0xafaa6707
  41734c:	mov    esp,0xe07d1abd
  417351:	lds    eax,FWORD PTR [edx-0x71]
  417354:	mov    cl,0xb0
  417356:	call   0x23c9:0x62a66538
  41735d:	es push esp
  41735f:	fidivr DWORD PTR [ecx]
  417361:	dec    BYTE PTR [esi+0x77]
  417364:	mov    esi,0x398f93aa
  417369:	clc    
  41736a:	test   eax,0x122b070e
  41736f:	fcomip st,st(4)
  417371:	mov    edi,0x52f285b2
  417376:	ret    0x295b
  417379:	jne    0x417376
  41737b:	and    eax,0x8b7c8a09
  417380:	ret    
  417381:	or     al,0x4d
  417383:	xchg   BYTE PTR [esi-0x4616784b],al
  417389:	mov    fs,esp
  41738b:	jno    0x417403
  41738d:	sub    DWORD PTR [esi+0x3d],ecx
  417390:	push   0x1b013fc
  417395:	imul   ebp,DWORD PTR [edx+0x6ce4acb0],0xffffffa7
  41739c:	and    edx,DWORD PTR [edi+ebx*8-0x433e2ddc]
  4173a3:	fbld   TBYTE PTR [ecx+0x25]
  4173a6:	call   0xf5796c2f
  4173ab:	or     eax,0x5ba91a0c
  4173b0:	jne    0x4173ca
  4173b2:	mov    ah,0x58
  4173b4:	iret   
  4173b5:	repz jmp 0x63c51940
  4173bb:	les    eax,FWORD PTR [eax-0x32]
  4173be:	loope  0x417384
  4173c0:	dec    edx
  4173c1:	adc    BYTE PTR [edi],bl
  4173c3:	pop    esi
  4173c4:	test   ch,ch
  4173c6:	xchg   ebx,eax
  4173c7:	call   0x73e877fb
  4173cc:	push   ds
  4173cd:	inc    ebx
  4173ce:	inc    edi
  4173cf:	data16 das 
  4173d1:	call   0x37556247
  4173d6:	dec    edi
  4173d7:	adc    eax,0xa046f56b
  4173dc:	pusha  
  4173dd:	je     0x4173bc
  4173df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173e0:	dec    eax
  4173e1:	or     BYTE PTR [esi+0x22],bh
  4173e4:	adc    al,0x20
  4173e6:	jl     0x4173f0
  4173e8:	mov    dh,0xbc
  4173ea:	jmp    0x94ef:0xe1c90084
  4173f1:	aas    
  4173f2:	mov    eax,ds:0x379920a1
  4173f7:	xchg   DWORD PTR [eax-0xf],ebp
  4173fa:	push   es
  4173fb:	je     0x417448
  4173fd:	lods   eax,DWORD PTR ds:[esi]
  4173fe:	stos   BYTE PTR es:[edi],al
  4173ff:	outs   dx,BYTE PTR ds:[esi]
  417400:	(bad)  
  417401:	sti    
  417402:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417404:	icebp  
  417405:	(bad)  [eax]
  417407:	jnp    0x417469
  417409:	jl     0x41743a
  41740b:	(bad)  
  41740c:	fdivr  st,st(3)
  41740e:	enter  0xe654,0xc8
  417412:	push   cs
  417413:	call   0x7fd6316f
  417418:	dec    edi
  417419:	in     al,0x7f
  41741b:	pop    ecx
  41741c:	mov    ch,0x14
  41741e:	mov    eax,0x16c0da39
  417423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417424:	(bad)  
  417425:	jg     0x41744d
  417427:	push   edi
  417428:	mov    esp,0xec0e433f
  41742d:	jp     0x4173fe
  41742f:	mov    ebx,0x53a37ef3
  417434:	ret    0xa2b4
  417437:	add    al,0x7d
  417439:	mov    bh,0x4d
  41743b:	hlt    
  41743c:	adc    DWORD PTR ds:0xf89c66bc,0x714eb22e
  417446:	push   es
  417447:	cmp    eax,0xe94f6ea5
  41744c:	dec    edi
  41744d:	(bad)  
  41744e:	pusha  
  41744f:	loope  0x4174af
  417451:	mov    ecx,edi
  417453:	sub    dl,BYTE PTR [esi-0x51f7a1fb]
  417459:	xor    DWORD PTR [eax],esp
  41745b:	lods   eax,DWORD PTR ds:[esi]
  41745c:	mov    eax,0x64e17ad5
  417461:	pop    eax
  417462:	pop    ss
  417463:	dec    esp
  417464:	mov    al,BYTE PTR [ecx-0x780f0398]
  41746a:	pusha  
  41746b:	sub    BYTE PTR [ebx],ah
  41746d:	mov    dh,0x14
  41746f:	int    0xb6
  417471:	into   
  417472:	retf   
  417473:	xchg   ebp,eax
  417474:	in     al,dx
  417475:	mul    BYTE PTR [edi-0x60]
  417478:	cld    
  417479:	adc    al,0xa9
  41747b:	enter  0xfda0,0xa5
  41747f:	jmp    0xeddc:0xc190f3db
  417486:	dec    edi
  417487:	data16 test BYTE PTR cs:[si],bh
  41748c:	inc    eax
  41748d:	inc    esi
  41748e:	rcl    cl,cl
  417490:	arpl   WORD PTR [edx],bp
  417492:	cmp    al,0x9f
  417494:	mov    edx,DWORD PTR [eax-0x5f70fb33]
  41749a:	and    BYTE PTR [edi-0x3e],ah
  41749d:	mov    ds:0xd5a9fe5e,eax
  4174a2:	pushf  
  4174a3:	cs std 
  4174a5:	daa    
  4174a6:	push   es
  4174a7:	sub    ebx,0xffffffd5
  4174aa:	jge    0x4174dd
  4174ac:	pop    ecx
  4174ad:	shl    DWORD PTR [edx-0x3a],1
  4174b0:	xor    bl,bl
  4174b2:	add    BYTE PTR ds:0x5ff753a3,0x26
  4174b9:	and    eax,0x5a4f69c8
  4174be:	cmp    ebx,DWORD PTR [edi]
  4174c0:	push   es
  4174c1:	ret    
  4174c2:	mov    cl,0x9e
  4174c4:	in     al,0x68
  4174c6:	mov    esi,0x31fbeb0a
  4174cb:	push   esi
  4174cc:	std    
  4174cd:	or     al,0xa6
  4174cf:	pop    es
  4174d0:	aas    
  4174d1:	int    0x71
  4174d3:	repz in eax,0xbd
  4174d6:	add    ebp,ecx
  4174d8:	inc    eax
  4174d9:	inc    edi
  4174da:	hlt    
  4174db:	cmp    eax,0xc5740d04
  4174e0:	jne    0x417556
  4174e2:	sbb    DWORD PTR [ecx+0x4fd385c],edx
  4174e8:	ins    DWORD PTR es:[edi],dx
  4174e9:	pop    es
  4174ea:	call   0x121509ea
  4174ef:	inc    ebx
  4174f0:	xor    esp,ebp
  4174f2:	stos   BYTE PTR es:[edi],al
  4174f3:	adc    eax,0x7ec415ab
  4174f8:	push   es
  4174f9:	sbb    eax,0x13bcc21d
  4174fe:	(bad)  
  4174ff:	mov    eax,ds:0x23e433ee
  417504:	stc    
  417505:	imul   ecx,DWORD PTR [edi],0xa
  417508:	add    BYTE PTR [eax],0xe5
  41750b:	add    DWORD PTR [eax-0x492de339],ebx
  417511:	add    edx,DWORD PTR [esi]
  417513:	out    dx,eax
  417514:	cmp    BYTE PTR [ecx+0x625111ad],ch
  41751a:	dec    esi
  41751b:	adc    dl,BYTE PTR [edi+0x1f9af8b0]
  417521:	add    cl,BYTE PTR [edi+0x65cc5b46]
  417527:	loop   0x4174f4
  417529:	(bad)
  41752d:	cld    
  41752e:	std    
  41752f:	js     0x417538
  417531:	int    0x38
  417533:	xor    eax,0x80973da9
  417538:	jge    0x417550
  41753a:	jl     0x417518
  41753c:	dec    ebp
  41753d:	jbe    0x4174c8
  41753f:	mov    ah,0x95
  417541:	push   edx
  417542:	dec    ecx
  417543:	cmc    
  417544:	repz xchg esi,eax
  417546:	inc    ebp
  417547:	push   edx
  417548:	mov    edi,0xec17b918
  41754d:	mov    ebx,0xbb2d00d2
  417552:	or     DWORD PTR [edx+0x31c69a03],ecx
  417558:	and    eax,0x33a75422
  41755d:	ret    
  41755e:	(bad)  
  41755f:	outs   dx,BYTE PTR ds:[esi]
  417560:	frstor [ebp-0x19]
  417563:	add    al,0x19
  417565:	dec    ecx
  417566:	xor    ebx,DWORD PTR [eax]
  417568:	or     al,0xf5
  41756a:	dec    ebx
  41756b:	cs xchg ebp,eax
  41756d:	dec    esi
  41756e:	mov    ecx,0x72ac19c2
  417573:	mov    edx,edx
  417575:	ins    BYTE PTR es:[edi],dx
  417576:	add    edx,esp
  417578:	test   al,0x5e
  41757a:	add    dh,al
  41757c:	inc    eax
  41757d:	pop    ds
  41757e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41757f:	mov    edx,0xa3c5b0d7
  417584:	aaa    
  417585:	dec    ebx
  417586:	xchg   edx,eax
  417587:	into   
  417588:	stc    
  417589:	pop    es
  41758a:	icebp  
  41758b:	adc    al,dh
  41758d:	cmp    al,0xc4
  41758f:	(bad)  
  417590:	adc    BYTE PTR [eax-0x7f],ah
  417593:	loop   0x41754d
  417595:	cmp    DWORD PTR [edx],ecx
  417597:	stc    
  417598:	inc    ebp
  417599:	loop   0x417597
  41759b:	ror    DWORD PTR [edi+eax*2-0x1],cl
  41759f:	inc    edx
  4175a0:	and    eax,DWORD PTR ss:[ebx-0x21b595ee]
  4175a7:	jp     0x4175a7
  4175a9:	xchg   edi,eax
  4175aa:	call   0x3b33:0x50545d77
  4175b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b2:	leave  
  4175b3:	(bad)  
  4175b4:	in     al,0x39
  4175b6:	inc    edi
  4175b7:	cmp    ah,BYTE PTR [eax+0x47da5537]
  4175bd:	jecxz  0x4175ab
  4175bf:	popa   
  4175c0:	sbb    BYTE PTR [ebp+0x2d21b629],cl
  4175c6:	push   esp
  4175c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175c8:	push   edi
  4175c9:	mov    bl,0xbe
  4175cc:	xchg   esp,eax
  4175cd:	fldenv [ecx-0x2cc71257]
  4175d3:	dec    ebp
  4175d4:	mov    WORD PTR [edx-0x50],es
  4175d7:	jge    0x4175f0
  4175d9:	mov    ebp,0xc0b2bf03
  4175de:	sbb    eax,0x49d55962
  4175e3:	imul   edi,edi,0x2f926e41
  4175e9:	push   eax
  4175ea:	pop    edx
  4175eb:	int3   
  4175ec:	and    al,0x59
  4175ee:	push   edi
  4175ef:	mov    eax,0x3c62ae0d
  4175f4:	fstp   QWORD PTR [edx+0x64]
  4175f7:	xor    DWORD PTR [ecx],esi
  4175f9:	cs lock pop ecx
  4175fc:	add    ecx,esp
  4175fe:	sbb    al,0xb9
  417600:	or     BYTE PTR [edx-0xa],dl
  417603:	jmp    FWORD PTR [eax+0x36]
  417606:	sbb    ah,0x65
  417609:	or     edi,DWORD PTR [edi-0x4156428d]
  41760f:	sahf   
  417610:	push   0xffffff81
  417612:	mov    al,ds:0xd18d1792
  417617:	hlt    
  417618:	and    eax,0x10593d6a
  41761d:	out    dx,eax
  41761e:	and    al,0xdf
  417620:	shl    edx,cl
  417622:	es add eax,0x171f247d
  417628:	sbb    al,0x1c
  41762a:	add    BYTE PTR [edi+ebp*2-0x3e7bcdfd],bl
  417631:	fst    DWORD PTR [ebx-0x2887eff4]
  417637:	fwait
  417638:	mov    cl,0x11
  41763a:	test   ax,0xfe9a
  41763e:	mov    WORD PTR ds:0xf2ab801,cs
  417644:	sbb    DWORD PTR [ebx-0x535e30c4],esi
  41764a:	call   0xc328:0xeb2b6aa4
  417651:	in     eax,0x4d
  417653:	adc    BYTE PTR [edi+0x48dada7b],0x5c
  41765a:	loopne 0x417633
  41765c:	mov    bl,0xb9
  41765e:	cmp    bh,bh
  417660:	in     eax,0xc8
  417662:	mov    al,ds:0x60ad0e67
  417667:	cmp    BYTE PTR [esi+0x518f060c],0xfa
  41766e:	into   
  41766f:	push   esp
  417670:	cdq    
  417671:	outs   dx,BYTE PTR ds:[esi]
  417672:	sub    ch,BYTE PTR [esi-0x4b29b2b0]
  417678:	dec    ecx
  417679:	das    
  41767a:	je     0x4176ea
  41767c:	ss adc eax,0xccfb2a3
  417682:	in     eax,dx
  417683:	aaa    
  417684:	mov    ds:0xa871d88c,al
  417689:	mov    ecx,0x444de83b
  41768e:	bound  edx,QWORD PTR [ebx-0x7cd967b7]
  417694:	int3   
  417695:	jmp    0x4176e8
  417697:	sbb    DWORD PTR [eax+0x7731db8b],0xffffff85
  41769e:	mov    bh,0x3b
  4176a0:	jo     0x4176d0
  4176a2:	adc    eax,0x6b160a1d
  4176a7:	mov    BYTE PTR [edx-0x3f4d3ab0],ch
  4176ad:	(bad)  
  4176ae:	ds xor al,0x25
  4176b1:	popf   
  4176b2:	int3   
  4176b3:	and    eax,0xd42bf8bc
  4176b8:	xchg   ebx,eax
  4176b9:	call   0x54935806
  4176be:	jmp    0x4176be
  4176c0:	sahf   
  4176c1:	ins    BYTE PTR es:[edi],dx
  4176c2:	adc    eax,0x23d2d97a
  4176c7:	ss in  eax,0xf2
  4176ca:	add    dh,BYTE PTR [ebx+0x1c]
  4176cd:	lahf   
  4176ce:	sahf   
  4176cf:	and    DWORD PTR [ebx-0x71770d08],ecx
  4176d5:	(bad)  
  4176d6:	fdivr  DWORD PTR [edx+0x50]
  4176d9:	add    eax,0x629c17aa
  4176de:	stos   DWORD PTR es:[edi],eax
  4176df:	loop   0x4176b5
  4176e1:	(bad)  
  4176e2:	out    dx,al
  4176e3:	mov    dl,0xff
  4176e5:	out    0x62,al
  4176e7:	test   eax,0xcfdf1dd8
  4176ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ed:	cdq    
  4176ee:	jno    0x417704
  4176f0:	mov    edx,es
  4176f2:	(bad)  
  4176f3:	int    0x89
  4176f5:	ficom  WORD PTR [esi+0x73]
  4176f8:	sbb    bl,ch
  4176fa:	cmp    eax,0x78bdcde2
  4176ff:	mov    ebp,0xb5aebb75
  417704:	mov    bl,0xc8
  417706:	lock ret 
  417708:	lahf   
  417709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41770a:	mov    eax,ds:0xe5bf575c
  41770f:	mov    eax,0x84ccd4f0
  417714:	loope  0x4176a5
  417716:	xchg   BYTE PTR [eax-0x342c264d],al
  41771c:	push   esp
  41771d:	adc    BYTE PTR [eax+0x3a308aa5],al
  417723:	jo     0x4176b8
  417725:	cdq    
  417726:	repz jbe 0x41778a
  417729:	push   cs
  41772a:	xchg   ebp,ebx
  41772c:	rcl    esp,0x1
  41772f:	in     eax,dx
  417730:	out    0xbb,eax
  417732:	jne    0x417729
  417734:	dec    edx
  417735:	pop    ds
  417736:	jae    0x417748
  417738:	retf   0xf7d2
  41773b:	and    DWORD PTR [edx-0x1d],eax
  41773e:	cmp    BYTE PTR [edi+ebp*4+0x1788af87],ch
  417745:	popf   
  417746:	inc    ebp
  417747:	sbb    al,0xfb
  417749:	inc    edx
  41774a:	test   al,0x94
  41774c:	add    eax,0x9f1927ec
  417751:	sbb    DWORD PTR [esi],0xfffffffa
  417754:	adc    DWORD PTR [esp+esi*8+0x4c62b789],0xffffffca
  41775c:	dec    edi
  41775d:	mov    al,ds:0x17841faf
  417762:	sub    ebp,ebx
  417764:	mov    ?,WORD PTR [edx+0x27]
  417767:	jbe    0x41775f
  417769:	popa   
  41776a:	addr16 inc ebx
  41776c:	fstp   DWORD PTR [ebp+0x0]
  41776f:	inc    esi
  417770:	(bad)  
  417771:	sub    al,0x35
  417773:	push   ecx
  417774:	mov    ds:0x624a7434,eax
  417779:	rol    BYTE PTR [edx-0x15],1
  41777c:	or     esp,DWORD PTR [ecx-0x5e]
  41777f:	jge    0x417729
  417781:	call   0xf598a8be
  417786:	(bad)  
  417787:	jmp    0xdc7b326d
  41778c:	xor    edi,ebx
  41778e:	push   edx
  41778f:	inc    ebx
  417790:	pusha  
  417791:	jge    0x417793
  417793:	xlat   BYTE PTR ds:[ebx]
  417794:	in     eax,0xa9
  417796:	mov    esp,0x7afe1973
  41779b:	test   DWORD PTR [ebx+0x8],ebp
  41779e:	mov    bh,0x29
  4177a0:	mov    eax,0xd0c09a6b
  4177a5:	ret    0x1b78
  4177a8:	into   
  4177a9:	dec    esp
  4177aa:	dec    edi
  4177ab:	js     0x41780a
  4177ad:	enter  0x4454,0x3f
  4177b1:	inc    ecx
  4177b2:	and    DWORD PTR ds:0x52ef32dc,esp
  4177b8:	retf   0x7519
  4177bb:	or     esp,ebp
  4177bd:	cmp    eax,0x98a06bb4
  4177c2:	or     esi,DWORD PTR [ebx]
  4177c4:	pop    es
  4177c5:	pop    ecx
  4177c6:	fs in  al,dx
  4177c8:	ins    DWORD PTR es:[edi],dx
  4177c9:	xchg   esi,eax
  4177ca:	lock push ecx
  4177cc:	xor    ah,bh
  4177ce:	cs mov cl,0xfc
  4177d1:	clc    
  4177d2:	xor    al,0x18
  4177d4:	fstp   DWORD PTR ds:0xf1be56ac
  4177da:	ins    DWORD PTR es:[edi],dx
  4177db:	sub    ch,BYTE PTR [ebx+edi*8+0x6d530a22]
  4177e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e3:	outs   dx,DWORD PTR ds:[esi]
  4177e4:	add    DWORD PTR [esi+0x5a],ebp
  4177e7:	ror    BYTE PTR [ecx-0x6],0x3b
  4177eb:	fldln2 
  4177ed:	pusha  
  4177ee:	and    BYTE PTR [esi-0x19f877f8],0xf4
  4177f5:	pushf  
  4177f6:	dec    esp
  4177f7:	xchg   cl,bh
  4177f9:	js     0xa1446e1e
  4177ff:	mov    BYTE PTR [eax+eax*2],bh
  417802:	mov    ebp,0x31666aa
  417807:	and    eax,0x5811cb85
  41780c:	xor    DWORD PTR [ecx-0x53aec255],esi
  417812:	and    ebp,DWORD PTR [edx+0x53]
  417815:	push   ss
  417816:	test   DWORD PTR ds:0xf895aba6,edx
  41781c:	fcomp  DWORD PTR [edx-0x71]
  41781f:	pop    esi
  417820:	push   ecx
  417821:	rcl    esp,cl
  417823:	fs inc edi
  417825:	fldcw  WORD PTR [eax+0x3229e629]
  41782b:	sar    BYTE PTR [ebx-0x55],cl
  41782e:	fidiv  WORD PTR [ecx+0x4800ce73]
  417834:	jg     0x4177dd
  417836:	add    eax,0x8bedff6
  41783b:	adc    DWORD PTR ds:0x3b8b3d49,ebx
  417841:	arpl   WORD PTR [edi-0x6a],bx
  417844:	lahf   
  417845:	push   esp
  417846:	inc    ecx
  417847:	inc    ebx
  417848:	lds    esp,FWORD PTR [edi]
  41784a:	add    ah,BYTE PTR [ebx-0x7c]
  41784d:	sub    ah,BYTE PTR [ecx+0x28728990]
  417853:	cwde   
  417854:	mov    bh,0x2d
  417856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417857:	call   0xdbe2:0x79f260e4
  41785e:	pop    ecx
  41785f:	xchg   BYTE PTR [esi+esi*8],bh
  417862:	mov    al,ds:0x508b70fd
  417867:	test   eax,0xbdb9db46
  41786c:	popf   
  41786d:	clc    
  41786e:	jnp    0x41785a
  417870:	int3   
  417871:	stos   DWORD PTR es:[edi],eax
  417872:	push   cs
  417873:	dec    edi
  417874:	sub    ah,dl
  417876:	sub    BYTE PTR [ebx],cl
  417878:	dec    esi
  417879:	pop    ebx
  41787a:	pop    esi
  41787b:	xchg   ebx,eax
  41787c:	pop    ds
  41787d:	and    al,0xba
  41787f:	or     BYTE PTR [ebx+0x44],ah
  417882:	add    al,0xf2
  417884:	aaa    
  417885:	jmp    0x417848
  417887:	or     ecx,ecx
  417889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41788a:	pop    ss
  41788b:	xor    DWORD PTR [ebx+0x61],esi
  41788e:	add    ebx,DWORD PTR [eax]
  417890:	push   0x28
  417892:	cli    
  417893:	retf   
  417894:	inc    esp
  417895:	ja     0x4178a6
  417897:	mov    ebp,0x1439392
  41789c:	cmp    BYTE PTR [esi+0x4a],0x10
  4178a0:	lock mov edx,0xfcf92c47
  4178a6:	mov    fs,WORD PTR [edi+0x78]
  4178a9:	and    eax,0xdf2e23dc
  4178ae:	xor    ebp,esi
  4178b0:	add    DWORD PTR [esi+0x12],ebx
  4178b3:	repz jo 0x41792c
  4178b6:	inc    ebx
  4178b7:	xchg   BYTE PTR [eax-0x3b8e5d97],ch
  4178bd:	or     ecx,ebp
  4178bf:	push   0x49
  4178c1:	bound  ecx,QWORD PTR [edx-0x6]
  4178c4:	xchg   esp,eax
  4178c5:	sti    
  4178c6:	dec    ebp
  4178c7:	adc    bh,BYTE PTR [edx-0x4d]
  4178ca:	out    0x5f,al
  4178cc:	ins    BYTE PTR es:[edi],dx
  4178cd:	cdq    
  4178ce:	out    0x26,al
  4178d0:	or     al,0xc3
  4178d2:	lds    edi,FWORD PTR [esi+ebp*1-0x355679ed]
  4178d9:	int    0x88
  4178db:	or     BYTE PTR [eax+0x1ec0c0fe],dh
  4178e1:	mov    dl,0x9f
  4178e3:	jl     0x4178be
  4178e5:	fcmovu st,st(1)
  4178e7:	xor    al,0xbf
  4178e9:	cmp    esi,DWORD PTR [ebx+0xffcd3b3]
  4178ef:	push   ebp
  4178f0:	xchg   ebx,eax
  4178f1:	xchg   edx,eax
  4178f2:	fdiv   st(5),st
  4178f4:	mov    eax,0xeaa6079b
  4178f9:	fdivr  DWORD PTR [ecx+0x56ae753a]
  4178ff:	push   esp
  417900:	ret    
  417901:	dec    ecx
  417902:	cmp    ecx,edi
  417904:	cmp    DWORD PTR [eax+0x33696da5],ebx
  41790a:	in     eax,0x20
  41790c:	sbb    esp,esp
  41790e:	cmp    BYTE PTR [bp+di-0x5b],ch
  417912:	in     al,0xf8
  417914:	jnp    0x417944
  417916:	push   es
  417917:	fidiv  WORD PTR ds:0xa9df9339
  41791d:	sub    eax,0x91977bbf
  417922:	shr    esi,cl
  417924:	inc    ecx
  417925:	push   0x37
  417927:	js     0x4178b3
  417929:	jmp    FWORD PTR [esi+esi*8+0x81fb455]
  417930:	sub    cl,BYTE PTR [ebp-0xf]
  417933:	xchg   BYTE PTR [edi+eiz*1+0xb],bh
  417937:	(bad)  
  417938:	pop    edx
  417939:	cld    
  41793a:	xor    ecx,DWORD PTR [edx+0x2b]
  41793d:	cwde   
  41793e:	adc    dh,BYTE PTR ds:0x11ff4b85
  417944:	mov    al,0xbb
  417946:	das    
  417947:	loopne 0x417941
  417949:	cmp    DWORD PTR [ecx-0x7c8e138e],ebp
  41794f:	aaa    
  417950:	call   0xba153fdc
  417955:	fsub   DWORD PTR [ecx-0x644fdb7d]
  41795b:	mov    edx,0xe0bc3afa
  417960:	dec    edx
  417961:	sbb    ebx,DWORD PTR [edi]
  417963:	or     DWORD PTR [ecx+eiz*2+0x25bf135],0xffffff9a
  41796b:	cmp    dh,bh
  41796d:	adc    eax,0xd51c6bb7
  417972:	mov    ch,0xbb
  417974:	push   ebp
  417975:	mov    bl,cl
  417977:	inc    edi
  417978:	test   al,0xb8
  41797a:	jl     0x417971
  41797c:	lods   al,BYTE PTR ds:[esi]
  41797d:	pop    edi
  41797e:	jge    0x417917
  417980:	inc    bp
  417982:	lahf   
  417983:	cmp    dh,BYTE PTR [ebp+0x62830e29]
  417989:	mov    BYTE PTR [ebp-0x43f61eca],bh
  41798f:	push   edi
  417990:	in     eax,0xa
  417992:	dec    ebx
  417993:	aam    0x67
  417995:	inc    eax
  417996:	test   eax,0x32fbeab6
  41799b:	inc    edi
  41799c:	add    cl,BYTE PTR [ebp-0x505f78ab]
  4179a2:	call   0xfb32f6e0
  4179a7:	rol    BYTE PTR [edi],0x6d
  4179aa:	icebp  
  4179ab:	repz push edi
  4179ad:	jne    0x417967
  4179af:	sbb    al,0x73
  4179b1:	xchg   edx,eax
  4179b2:	int3   
  4179b3:	stc    
  4179b4:	pushf  
  4179b5:	(bad)  
  4179b7:	(bad)  
  4179b8:	js     0x4179f7
  4179ba:	xor    BYTE PTR [edx],dh
  4179bc:	ins    BYTE PTR es:[edi],dx
  4179bd:	push   esp
  4179be:	mov    esi,0xc688e93
  4179c3:	jge    0x417a39
  4179c5:	adc    BYTE PTR ss:[ebp+0x568792a1],al
  4179cc:	inc    esp
  4179cd:	mov    al,ds:0x55031896
  4179d2:	jbe    0x4179cf
  4179d4:	sbb    BYTE PTR [esi+0x15510f59],al
  4179da:	out    dx,al
  4179db:	ror    edi,0xf0
  4179de:	in     eax,0x27
  4179e0:	nop
  4179e1:	and    bl,BYTE PTR [edi+0x55]
  4179e4:	out    dx,eax
  4179e5:	xor    edx,DWORD PTR [ebx-0x644b26a5]
  4179eb:	dec    esi
  4179ec:	mov    esp,0x1dc4aff5
  4179f1:	push   0xffffffdb
  4179f3:	dec    esp
  4179f4:	(bad)  
  4179f5:	aad    0xf7
  4179f7:	or     eax,0xf774824d
  4179fc:	fld    QWORD PTR ds:0x1e1efc3c
  417a02:	jno    0x417a41
  417a04:	push   0xefbdca3d
  417a09:	aam    0x31
  417a0b:	jb     0x4179ed
  417a0d:	gs push cs
  417a0f:	and    ebx,0x73f36ce4
  417a15:	test   BYTE PTR [edi],0xc3
  417a18:	out    dx,al
  417a19:	enter  0x3725,0xf7
  417a1d:	scas   al,BYTE PTR es:[edi]
  417a1e:	ins    DWORD PTR es:[edi],dx
  417a1f:	lds    ebp,FWORD PTR [edx-0x35dfc82a]
  417a25:	aaa    
  417a26:	bound  edi,QWORD PTR [ebx+0xdf1eacb]
  417a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a2d:	xchg   edi,eax
  417a2e:	fwait
  417a2f:	jno    0x4179f4
  417a31:	dec    ecx
  417a32:	dec    esi
  417a33:	popa   
  417a34:	mov    bh,BYTE PTR [edi-0x26e52b3b]
  417a3a:	out    0x2c,eax
  417a3c:	ds sahf 
  417a3e:	inc    edi
  417a3f:	cwde   
  417a40:	int3   
  417a41:	fiadd  DWORD PTR [esi]
  417a43:	jns    0x417a92
  417a45:	sub    eax,0x5a16998c
  417a4a:	mov    edx,0xa0466a9c
  417a4f:	add    edi,DWORD PTR [esi+edx*1+0x76cecc83]
  417a56:	xlat   BYTE PTR ds:[ebx]
  417a57:	inc    ebx
  417a58:	retf   
  417a59:	shl    bh,1
  417a5b:	xchg   esp,eax
  417a5c:	lock lahf 
  417a5e:	xchg   esp,eax
  417a5f:	add    edx,DWORD PTR [esi]
  417a61:	xchg   ecx,eax
  417a62:	or     BYTE PTR [esi-0x3855fd2d],dh
  417a68:	fild   DWORD PTR [ecx]
  417a6a:	jmp    0x417a21
  417a6c:	jbe    0x417a0d
  417a6e:	leave  
  417a6f:	adc    al,0xbc
  417a71:	bound  ebp,QWORD PTR [edi+ebx*4+0x52a5280a]
  417a78:	jb     0x417a8c
  417a7a:	outs   dx,DWORD PTR ds:[esi]
  417a7b:	xchg   ah,ch
  417a7d:	jmp    0x7c36183e
  417a82:	test   DWORD PTR [edi-0x69c7efce],ebp
  417a88:	xchg   edi,eax
  417a89:	pop    edi
  417a8a:	adc    cl,al
  417a8c:	mov    ebp,?
  417a8e:	or     bh,BYTE PTR [esi]
  417a90:	sahf   
  417a91:	sbb    ecx,DWORD PTR [esp+edi*8-0xcc361a2]
  417a98:	mov    al,0x85
  417a9a:	cwde   
  417a9b:	mov    ecx,0x48d94590
  417aa0:	mov    ebp,0xf6cdf3db
  417aa5:	mov    al,ds:0x19a0fe13
  417aaa:	lahf   
  417aab:	adc    eax,0x1b4aa86b
  417ab0:	data16 mov WORD PTR [ebx-0x53a4798],gs
  417ab7:	sub    ebp,esi
  417ab9:	sar    bl,0x8a
  417abc:	out    0xba,eax
  417abe:	fist   WORD PTR [eax+0x4f]
  417ac1:	icebp  
  417ac2:	or     DWORD PTR [esi],0xf62ce9f7
  417ac8:	call   0xd143522b
  417acd:	add    bh,BYTE PTR [edx+esi*8]
  417ad0:	mov    bh,cl
  417ad2:	mov    ds:0x703ba678,eax
  417ad7:	dec    esi
  417ad8:	xor    ecx,DWORD PTR [ecx+0x74]
  417adb:	ror    DWORD PTR [edx],0xa1
  417ade:	mov    bh,0x8
  417ae0:	mov    WORD PTR [ecx-0x2a],es
  417ae3:	pop    ds
  417ae4:	cld    
  417ae5:	neg    BYTE PTR [ecx+ebx*4+0x41]
  417ae9:	pop    ebp
  417aea:	(bad)  
  417aeb:	sub    edx,ebp
  417aed:	scas   al,BYTE PTR es:[edi]
  417aee:	and    bh,BYTE PTR [esi-0x3e]
  417af1:	jbe    0x417acc
  417af3:	fimul  WORD PTR [edx-0x44a1c2f0]
  417af9:	mov    dh,BYTE PTR [ecx+0x5a]
  417afc:	call   0xf4197dd6
  417b01:	push   ebp
  417b02:	scas   eax,DWORD PTR es:[edi]
  417b03:	pusha  
  417b04:	inc    ecx
  417b05:	rcl    DWORD PTR [ecx+0x6da18e44],cl
  417b0b:	jbe    0x417b2f
  417b0d:	jle    0x417b16
  417b0f:	cmp    DWORD PTR [ebx-0x46e97e1b],edx
  417b15:	push   edx
  417b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b17:	mov    dh,0xb6
  417b19:	std    
  417b1a:	mulps  xmm5,xmm6
  417b1d:	sbb    esi,DWORD PTR [edi]
  417b1f:	addr16 jle 0x417b04
  417b22:	clc    
  417b23:	and    DWORD PTR [ecx+0x1fb8c71c],0xffffffff
  417b2a:	mov    ebp,0x73ce3cd8
  417b2f:	loope  0x417b43
  417b31:	sub    edi,DWORD PTR cs:[esi]
  417b34:	sub    BYTE PTR [eax],0x47
  417b37:	or     DWORD PTR [ebp+0x28],0xffffff82
  417b3b:	sub    al,0x5e
  417b3d:	jne    0x417bb6
  417b3f:	push   ecx
  417b40:	mov    dh,0xf0
  417b42:	shl    BYTE PTR [esi+0x5ac9687d],0x69
  417b49:	icebp  
  417b4a:	or     BYTE PTR [ebp-0x188efde9],dh
  417b50:	jae    0x417b2d
  417b52:	fidivr WORD PTR [ebp+edi*2+0x9]
  417b56:	push   eax
  417b57:	pop    ebx
  417b58:	pop    ebp
  417b59:	adc    esp,0xffffffa2
  417b5c:	in     eax,dx
  417b5d:	cs retf 0x98d4
  417b61:	int3   
  417b62:	mov    dl,BYTE PTR [ebp-0x19]
  417b65:	dec    esi
  417b66:	daa    
  417b67:	das    
  417b68:	and    esp,DWORD PTR [esi-0x77d85239]
  417b6e:	shl    dl,0x0
  417b71:	cld    
  417b72:	(bad)  
  417b73:	push   esi
  417b74:	ja     0x417af8
  417b76:	inc    edi
  417b77:	xchg   ebp,eax
  417b78:	out    dx,eax
  417b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b7a:	sub    eax,0x983fa4ee
  417b7f:	hlt    
  417b80:	cmp    eax,0xfdcf0a77
  417b85:	add    DWORD PTR [ebp-0x12],eax
  417b88:	popf   
  417b89:	les    esi,FWORD PTR [esi+0x34]
  417b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b8d:	loop   0x417bfa
  417b8f:	mov    ebp,0x14eaecac
  417b94:	adc    al,0x8e
  417b96:	xor    DWORD PTR [edx],edi
  417b98:	mov    ebx,fs
  417b9a:	enter  0xe4c,0xcc
  417b9e:	or     eax,0x881b0848
  417ba3:	pop    esp
  417ba4:	pop    esp
  417ba5:	or     eax,0x6d8234a6
  417baa:	mov    al,0x12
  417bac:	cdq    
  417bad:	clc    
  417bae:	lods   eax,DWORD PTR ds:[esi]
  417baf:	sub    eax,0x203893e2
  417bb4:	add    ebx,DWORD PTR [ecx+edi*4]
  417bb7:	(bad)  
  417bb8:	addr16 sbb eax,0x98c57711
  417bbe:	(bad)  
  417bbf:	stos   BYTE PTR es:[edi],al
  417bc0:	sar    BYTE PTR [ebp-0xc039bc9],1
  417bc6:	lea    ecx,[ebx]
  417bc8:	add    cl,ah
  417bca:	xor    ebx,ebx
  417bcc:	gs jge 0x417bb8
  417bcf:	cmc    
  417bd0:	call   0x1bd1:0xb687d5ae
  417bd7:	pop    eax
  417bd8:	add    bl,BYTE PTR [edx+0x409aa83d]
  417bde:	fsubrp st(4),st
  417be0:	fwait
  417be1:	jmp    0xb6a4:0xd4072ce7
  417be8:	mov    bl,0x3e
  417bea:	loope  0x417b8a
  417bec:	je     0x417c57
  417bee:	add    al,0x44
  417bf0:	loope  0x417c46
  417bf2:	push   ebp
  417bf3:	std    
  417bf4:	mov    esp,0x504aa967
  417bf9:	mov    BYTE PTR [esi+0x37be9925],ah
  417bff:	push   ebx
  417c00:	cmp    DWORD PTR [ecx+ebp*2-0x3f],ecx
  417c04:	dec    esp
  417c05:	push   esp
  417c06:	in     al,0x35
  417c08:	mov    ebp,0x1f8d366f
  417c0d:	or     DWORD PTR [ebp-0x80],esp
  417c10:	sbb    al,0xb6
  417c12:	jp     0x417c3b
  417c14:	push   edx
  417c15:	jmp    0x535f:0x5e89678f
  417c1c:	mov    cl,0xda
  417c1e:	inc    ebp
  417c1f:	mov    eax,ds:0xfdec96f8
  417c24:	inc    esp
  417c25:	push   0x6d
  417c27:	cmp    eax,0xa56fa046
  417c2c:	mov    BYTE PTR [esi+edi*1],ch
  417c2f:	ss cdq 
  417c31:	test   BYTE PTR [ecx+0x16],cl
  417c34:	sub    bl,BYTE PTR [ebx]
  417c36:	dec    ecx
  417c37:	xchg   edi,eax
  417c38:	sbb    esp,DWORD PTR [ebx]
  417c3a:	or     ah,BYTE PTR [edx+0x56d834a8]
  417c40:	and    eax,0xdf2ab1d
  417c45:	and    DWORD PTR [eax+ebx*2+0x49],ebx
  417c49:	jmp    0xdba6b53a
  417c4e:	(bad)  
  417c4f:	std    
  417c50:	in     eax,0x4e
  417c52:	jno    0x417cc5
  417c54:	sub    bh,BYTE PTR [ebp-0x765f66ec]
  417c5a:	jns    0x417c54
  417c5c:	test   al,0xdf
  417c5e:	jmp    DWORD PTR [ecx+0x60319967]
  417c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c65:	push   ds
  417c66:	cmp    DWORD PTR [ecx+0x7d03f9b1],0x3a67c5bb
  417c70:	cmp    DWORD PTR [eax-0x36],esi
  417c73:	or     ch,ah
  417c75:	je     0x417bfd
  417c77:	loope  0x417ce2
  417c79:	iret   
  417c7a:	jnp    0x417c99
  417c7c:	pop    edi
  417c7d:	mov    dh,0x2b
  417c7f:	mov    bl,0x9a
  417c81:	xchg   ebx,eax
  417c82:	fwait
  417c83:	dec    ebp
  417c84:	cwde   
  417c85:	das    
  417c86:	test   BYTE PTR [edi-0x1e],dl
  417c89:	(bad)  
  417c8a:	mov    edi,0x794530c9
  417c8f:	repz cdq 
  417c91:	adc    eax,0xfb6f6dde
  417c96:	pusha  
  417c97:	xchg   edi,eax
  417c98:	mov    esi,0x3c9f2adc
  417c9d:	ins    DWORD PTR es:[edi],dx
  417c9e:	fcompp 
  417ca0:	dec    esi
  417ca1:	xchg   ecx,edi
  417ca3:	dec    esp
  417ca4:	lods   al,BYTE PTR ds:[esi]
  417ca5:	add    al,0x77
  417ca7:	sahf   
  417ca8:	inc    ebp
  417ca9:	mov    ds:0x82838bec,al
  417cae:	popa   
  417caf:	ret    0x7b12
  417cb2:	lods   al,BYTE PTR ds:[esi]
  417cb3:	out    dx,eax
  417cb4:	jl     0x417cb3
  417cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb7:	add    eax,DWORD PTR [ebp-0x69]
  417cba:	mov    al,ds:0xfb891cd7
  417cbf:	xchg   ecx,esi
  417cc1:	add    DWORD PTR es:[ebx+0x4b2101be],0x13cccc6a
  417ccc:	cs in  al,0xd0
  417ccf:	fstp   DWORD PTR [ebx]
  417cd1:	adc    DWORD PTR [ecx+0x4c8c742a],esi
  417cd7:	mov    cl,0xd4
  417cd9:	ret    0xa92f
  417cdc:	push   edx
  417cdd:	cdq    
  417cde:	push   ebx
  417cdf:	shr    BYTE PTR [edi],1
  417ce1:	mov    ebx,0x11364698
  417ce6:	aad    0xd8
  417ce8:	xchg   esp,eax
  417ce9:	add    DWORD PTR [ecx+eax*1+0x59d8b9a6],eax
  417cf0:	cmp    ecx,ebx
  417cf2:	dec    ebp
  417cf3:	sub    esi,DWORD PTR [ebx+0x54]
  417cf6:	and    dh,BYTE PTR [ebx+0x10c43276]
  417cfc:	jno    0x417d4b
  417cfe:	pop    es
  417cff:	fist   DWORD PTR [ebx-0x69]
  417d02:	dec    eax
  417d03:	inc    edi
  417d04:	je     0x417d27
  417d06:	mov    al,ds:0x3a56f869
  417d0b:	add    ebx,eax
  417d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d0e:	and    DWORD PTR [eax-0x67],edx
  417d11:	add    eax,edx
  417d13:	jb     0x417d5f
  417d15:	pop    es
  417d16:	js     0x417cb3
  417d18:	shl    DWORD PTR [eax],1
  417d1a:	cmp    al,dl
  417d1c:	sub    ebx,edi
  417d1e:	(bad)
  417d22:	in     al,dx
  417d23:	pop    eax
  417d24:	scas   eax,DWORD PTR es:[edi]
  417d25:	push   ss
  417d26:	push   eax
  417d27:	ffreep st(5)
  417d29:	sub    BYTE PTR [ecx-0x73],bl
  417d2c:	dec    edx
  417d2d:	stos   DWORD PTR es:[edi],eax
  417d2e:	sub    ah,BYTE PTR [edx+0x67]
  417d31:	mov    ch,0xd
  417d33:	dec    DWORD PTR ds:[esp+ebx*2+0x2ad0d85a]
  417d3b:	adc    BYTE PTR [ebx],dh
  417d3d:	pop    es
  417d3e:	mov    ebp,0xd1fbaac3
  417d43:	push   ds
  417d44:	mov    ebp,0x18f48eb9
  417d49:	cmp    eax,0x8ddef20
  417d4e:	jno    0x417db7
  417d50:	add    BYTE PTR [edx+edx*2+0x5ae99a24],bh
  417d57:	jbe    0x417d9b
  417d59:	push   0x1c
  417d5b:	adc    eax,0x9a290bfd
  417d60:	pop    ss
  417d61:	aad    0xe2
  417d63:	aas    
  417d64:	imul   esp,DWORD PTR [edx+0x38284560],0x16eb00aa
  417d6e:	daa    
  417d6f:	aaa    
  417d70:	push   edx
  417d71:	jg     0x417d2d
  417d73:	rcl    DWORD PTR [edi+eax*4],0x9e
  417d77:	push   DWORD PTR [edi+0xde36af7]
  417d7d:	pop    esp
  417d7e:	add    al,0x60
  417d80:	iret   
  417d81:	xor    eax,0xac140c17
  417d86:	cmc    
  417d87:	adc    al,0x11
  417d89:	mov    dl,0x18
  417d8b:	and    BYTE PTR ds:0x4aeab102,dh
  417d91:	mov    bl,0x95
  417d93:	pop    es
  417d94:	pop    ebx
  417d95:	rcl    cl,0x35
  417d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d99:	imul   ebx,DWORD PTR [ebp+0x18],0xf
  417d9d:	inc    eax
  417d9e:	mov    edi,0xcb5d9142
  417da3:	and    ecx,DWORD PTR [edi+0x81da7a7]
  417da9:	inc    eax
  417daa:	fcomp  st(2)
  417dac:	sub    al,0x7a
  417dae:	pusha  
  417daf:	mov    ch,BYTE PTR [ebp-0x5a39d828]
  417db5:	and    DWORD PTR [ebx+0x13],0xc91597cf
  417dbc:	out    0xff,eax
  417dbe:	pop    ecx
  417dbf:	in     al,0xb6
  417dc1:	mov    dh,0xde
  417dc3:	cmp    al,0x46
  417dc5:	in     al,0xce
  417dc7:	or     al,0xed
  417dc9:	fs pop ds
  417dcb:	retf   0xad7f
  417dce:	js     0x417d65
  417dd0:	mov    ebx,0x4ca7ef3f
  417dd5:	retf   0xeeb5
  417dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd9:	inc    ecx
  417dda:	pop    esp
  417ddb:	inc    edi
  417ddc:	mov    ebx,0x32156611
  417de1:	(bad)  [eax]
  417de3:	push   esi
  417de4:	inc    ebp
  417de5:	inc    ebx
  417de6:	inc    ebx
  417de7:	popf   
  417de8:	inc    edi
  417de9:	cld    
  417dea:	inc    edi
  417deb:	fmulp  st(4),st
  417ded:	test   al,0xe1
  417def:	add    al,0x58
  417df1:	push   esp
  417df2:	push   edx
  417df3:	xor    eax,0x2997f72
  417df8:	mov    ebx,0x83d0b268
  417dfd:	idiv   ebp
  417dff:	in     eax,dx
  417e00:	xor    esi,esp
  417e02:	int3   
  417e03:	sti    
  417e04:	inc    ebx
  417e05:	xchg   edi,eax
  417e06:	mov    DWORD PTR [edx+0x6],ecx
  417e09:	mov    ecx,esi
  417e0b:	and    BYTE PTR [edi+0x51],ch
  417e0e:	mov    ?,ecx
  417e10:	jno    0x417e33
  417e12:	push   ds
  417e13:	aam    0x1c
  417e15:	dec    eax
  417e16:	stos   BYTE PTR es:[edi],al
  417e17:	loop   0x417e22
  417e19:	sub    al,0x74
  417e1b:	jbe    0x417e92
  417e1d:	out    0x1a,eax
  417e1f:	jo     0x417e10
  417e21:	mov    ds:0x8a1f2802,eax
  417e26:	lods   al,BYTE PTR ds:[esi]
  417e27:	inc    eax
  417e28:	outs   dx,DWORD PTR ds:[esi]
  417e29:	adc    DWORD PTR [ebp+0x41cd9376],edi
  417e2f:	fild   QWORD PTR [ecx]
  417e31:	test   BYTE PTR [edi+0x6428a30f],al
  417e37:	mov    ecx,0xd60ed0b3
  417e3c:	and    DWORD PTR [edx-0x59c3130a],0x5e
  417e43:	jp     0x417e4d
  417e45:	jae    0x417e1a
  417e47:	cdq    
  417e48:	sub    ebp,DWORD PTR [edi+ecx*8]
  417e4b:	jle    0x417e3b
  417e4d:	int    0xa
  417e4f:	icebp  
  417e50:	push   cs
  417e51:	pusha  
  417e52:	xor    DWORD PTR [edi],esi
  417e54:	cmp    ebp,DWORD PTR [edi]
  417e56:	push   ecx
  417e57:	cmp    al,0xb1
  417e59:	and    al,0x6d
  417e5b:	sub    BYTE PTR [ebx+0x1c3e59bb],bl
  417e61:	sbb    ebx,edx
  417e63:	rcl    BYTE PTR [ebx],cl
  417e65:	pop    ds
  417e66:	pop    eax
  417e67:	sub    edx,DWORD PTR [esi+ebx*4]
  417e6a:	into   
  417e6b:	or     DWORD PTR [ebx+esi*2-0x7d],0xffffffd1
  417e70:	daa    
  417e71:	dec    esp
  417e72:	pop    ecx
  417e73:	pop    ebp
  417e74:	pop    ecx
  417e75:	jmp    FWORD PTR [ebx-0x772945e1]
  417e7b:	and    eax,0xf6149671
  417e80:	xor    al,0x63
  417e82:	cmp    BYTE PTR [ebx-0x6db9564e],0xc0
  417e89:	js     0x417ee0
  417e8b:	mov    WORD PTR [edx+ebx*4+0x669fdb19],?
  417e92:	mov    ebp,0xff6e0c0b
  417e97:	sub    DWORD PTR [edi+edx*2],ecx
  417e9a:	rcl    DWORD PTR [esi],cl
  417e9c:	imul   ebx,edx,0x35
  417e9f:	push   es
  417ea0:	or     eax,0x29da146
  417ea5:	imul   edi,ebx,0x54b80184
  417eab:	mov    bl,0xd2
  417ead:	into   
  417eae:	ret    0x3711
  417eb1:	adc    bl,BYTE PTR [eax-0x13d11b0c]
  417eb7:	sbb    eax,0x389edb37
  417ebc:	jmp    0xab431664
  417ec1:	dec    esi
  417ec2:	jmp    0x28f6fdfd
  417ec7:	pop    ds
  417ec8:	and    esi,ebp
  417eca:	mov    ebx,0x3b357dbc
  417ecf:	aaa    
  417ed0:	push   ecx
  417ed1:	add    al,0xd8
  417ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed4:	outs   dx,DWORD PTR ds:[esi]
  417ed5:	test   al,0x17
  417ed7:	jmp    0xf96b9399
  417edc:	fisttp DWORD PTR [eax]
  417ede:	dec    esp
  417edf:	pop    ecx
  417ee0:	dec    edi
  417ee1:	imul   eax,DWORD PTR [ebx+0x7cd0bdfa],0x22280dc4
  417eeb:	mov    ch,0x6d
  417eed:	sti    
  417eee:	dec    ebx
  417eef:	xchg   edi,esi
  417ef1:	retf   
  417ef2:	sbb    eax,0x29d62a17
  417ef7:	imul   eax,DWORD PTR [edi-0x2e],0x51626798
  417efe:	mov    ch,0x6e
  417f00:	out    dx,al
  417f01:	adc    eax,0x343fd8ec
  417f06:	out    dx,eax
  417f07:	call   0x3489c253
  417f0c:	fcomp  QWORD PTR [eax-0x3b]
  417f0f:	xchg   ch,bh
  417f11:	mov    cl,0xe7
  417f13:	mov    dl,0xac
  417f15:	push   esi
  417f16:	aaa    
  417f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f18:	mov    fs,WORD PTR [eax-0x2c]
  417f1b:	inc    edi
  417f1c:	add    BYTE PTR [eax-0x11bbd148],dh
  417f22:	mov    ah,0x5a
  417f24:	shl    bl,0xa4
  417f27:	and    edx,DWORD PTR [eax-0x2]
  417f2a:	mov    ebx,0x37d9ecc4
  417f2f:	ja     0x417ebb
  417f31:	jno    0x417ec2
  417f33:	dec    esp
  417f34:	mov    ds:0x84a1950,al
  417f39:	sub    DWORD PTR [edi],esp
  417f3b:	mov    WORD PTR [ebx+0x4],gs
  417f3e:	adc    ah,cl
  417f40:	mov    eax,0xb82ec594
  417f45:	cmp    BYTE PTR [ebp-0x700637a2],bh
  417f4b:	push   ebx
  417f4c:	loopne 0x417f58
  417f4e:	mov    dl,0x96
  417f50:	and    eax,0xa99468e0
  417f55:	mov    ebp,DWORD PTR [esp+esi*1+0x52]
  417f59:	inc    ebx
  417f5a:	mov    ebx,0x4386b79f
  417f5f:	repnz mov bh,BYTE PTR ds:0x74fdf5d4
  417f66:	mov    ds,WORD PTR [esp+ecx*1-0x42]
  417f6a:	and    DWORD PTR [eax],esi
  417f6c:	xlat   BYTE PTR ds:[ebx]
  417f6d:	pop    ecx
  417f6e:	mov    ebx,0x541f21f1
  417f73:	loope  0x417f0b
  417f75:	mov    BYTE PTR ds:0x511d2a43,bl
  417f7b:	cmp    eax,0xcad4c894
  417f80:	mov    ecx,0xe698cc7e
  417f85:	arpl   WORD PTR [ebp+0xa],ax
  417f88:	mov    eax,gs
  417f8a:	arpl   WORD PTR [edi],sp
  417f8c:	stos   BYTE PTR es:[edi],al
  417f8d:	lea    eax,[edi]
  417f8f:	nop
  417f90:	jmp    0x417fbd
  417f92:	xchg   esi,eax
  417f93:	cmp    al,0x2c
  417f95:	mov    ebx,0xc65cf91f
  417f9a:	(bad)  
  417f9b:	mov    al,0x4
  417f9d:	xchg   ebx,eax
  417f9e:	hlt    
  417f9f:	push   0x4c82b6f4
  417fa4:	fistp  WORD PTR [esi]
  417fa6:	push   cs
  417fa7:	sub    al,0xb5
  417fa9:	leave  
  417faa:	and    DWORD PTR [esi],edx
  417fac:	hlt    
  417fad:	outs   dx,BYTE PTR ds:[esi]
  417fae:	inc    eax
  417faf:	test   BYTE PTR [edx+0x2526a3ac],ah
  417fb5:	call   0x7d96:0x5d306769
  417fbc:	push   ecx
  417fbd:	(bad)  
  417fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fbf:	xchg   BYTE PTR [ecx+eiz*1],dh
  417fc2:	sti    
  417fc3:	clc    
  417fc4:	and    eax,0xc5591202
  417fc9:	jnp    0x417f63
  417fcb:	mov    eax,0xd3ce355d
  417fd0:	jmp    0x417f82
  417fd2:	xor    DWORD PTR [ecx+0x7f],ebx
  417fd5:	cmp    cl,BYTE PTR [eax+0x564b4d8f]
  417fdb:	xor    ecx,DWORD PTR [esi+0x744de438]
  417fe1:	mov    dl,BYTE PTR [ecx]
  417fe3:	sub    ah,BYTE PTR [ecx]
  417fe5:	push   0x51b5b865
  417fea:	mov    ecx,0xb7c5a5a5
  417fef:	xchg   edi,eax
  417ff0:	cmp    DWORD PTR [ecx],esi
  417ff2:	xor    al,0x5f
  417ff4:	and    dh,cl
  417ff6:	ret    0xd591
  417ff9:	test   BYTE PTR [edx+0x34],ah
  417ffc:	pop    ebx
  417ffd:	out    0x22,eax
  417fff:	cmp    BYTE PTR [edi],ch
  418001:	or     BYTE PTR [bp+di+0x4c],al
  418005:	pop    esi
  418006:	jno    0x418070
  418008:	adc    ebx,DWORD PTR [esi]
  41800a:	nop
  41800b:	mov    esp,0x42e2e93e
  418010:	addr16 int3 
  418012:	or     ebx,esp
  418014:	jnp    0x417fe3
  418016:	cmp    al,0x8f
  418018:	push   esp
  418019:	adc    BYTE PTR [esi+0x2e],bh
  41801c:	mov    ebp,0x2ffcab94
  418021:	(bad)  
  418022:	das    
  418023:	ins    DWORD PTR es:[edi],dx
  418024:	or     al,0x86
  418026:	xchg   ebp,eax
  418027:	pop    esi
  418028:	out    dx,eax
  418029:	jmp    0x41804a
  41802b:	dec    eax
  41802c:	jmp    0x417ffa
  41802e:	inc    ebx
  41802f:	mov    al,ds:0x58defabf
  418034:	je     0x417fe8
  418036:	add    esp,DWORD PTR [ecx]
  418038:	push   edx
  418039:	ja     0x417fee
  41803b:	or     DWORD PTR [ebp+0x3d],0x5a
  41803f:	push   ecx
  418040:	add    BYTE PTR [edi+edi*2+0x55],dl
  418044:	in     eax,0x24
  418046:	inc    esp
  418047:	xor    BYTE PTR [edi-0x6cc0a1bb],0xe5
  41804e:	repz jnp 0x417ff3
  418051:	div    DWORD PTR [ebp+0x38d49e1f]
  418057:	mov    esi,0xb4be8bd0
  41805c:	stos   BYTE PTR es:[edi],al
  41805d:	sbb    ah,dh
  41805f:	cmp    eax,0x736492b6
  418064:	and    cl,BYTE PTR [esi+ebx*4-0x6f]
  418068:	ror    DWORD PTR [ecx-0x6d979fd4],cl
  41806e:	jmp    FWORD PTR [ecx+ebx*8]
  418071:	adc    edx,esi
  418073:	xor    al,0x7e
  418075:	aam    0xba
  418077:	test   eax,0xc7e12714
  41807c:	mov    al,0x36
  41807e:	cmp    BYTE PTR [ebp+eiz*8+0x754239fd],0x58
  418086:	xchg   BYTE PTR [ecx+0x7ff315f1],bh
  41808c:	jb     0x418093
  41808e:	rol    DWORD PTR [ebx-0x5f],cl
  418091:	jnp    0x4180ae
  418093:	and    dh,BYTE PTR [edx]
  418095:	add    BYTE PTR [ecx+0x2be4505f],cl
  41809b:	test   DWORD PTR [ebp+0x7fe585c9],ebp
  4180a1:	cmp    al,0x61
  4180a3:	out    dx,al
  4180a4:	add    dl,bl
  4180a6:	push   ds
  4180a7:	daa    
  4180a8:	outs   dx,DWORD PTR ds:[esi]
  4180a9:	iret   
  4180aa:	sub    eax,0xd0636a72
  4180af:	(bad)  
  4180b0:	das    
  4180b1:	in     al,dx
  4180b2:	cdq    
  4180b3:	cli    
  4180b4:	push   ss
  4180b5:	retf   0x96e7
  4180b8:	icebp  
  4180b9:	pop    ecx
  4180ba:	dec    ebx
  4180bb:	mov    ebx,0xc048f84d
  4180c0:	mov    cl,ch
  4180c2:	aad    0xa1
  4180c4:	jne    0x4180f2
  4180c6:	inc    ecx
  4180c7:	pop    ebx
  4180c8:	mov    cl,0x39
  4180ca:	ficomp DWORD PTR [ebx+0x66b3424]
  4180d0:	out    0xba,al
  4180d2:	ins    DWORD PTR es:[edi],dx
  4180d3:	fwait
  4180d4:	pop    ss
  4180d5:	sub    al,0x8b
  4180d7:	lods   al,BYTE PTR ds:[esi]
  4180d8:	(bad)  [esi]
  4180da:	cmp    ebx,DWORD PTR ds:0x1591044
  4180e0:	adc    al,0xc1
  4180e2:	bound  ebp,QWORD PTR [ebx]
  4180e4:	int    0xbd
  4180e6:	sti    
  4180e7:	sub    dl,BYTE PTR [edi+0x77]
  4180ea:	dec    esp
  4180eb:	xchg   BYTE PTR [edi],cl
  4180ed:	push   ecx
  4180ee:	outs   dx,BYTE PTR ds:[esi]
  4180ef:	jae    0x4180ad
  4180f1:	pop    ss
  4180f2:	sbb    ch,0x9
  4180f5:	out    dx,eax
  4180f6:	push   0xf
  4180f8:	scas   al,BYTE PTR es:[edi]
  4180f9:	mov    bh,0xb4
  4180fb:	fadd   DWORD PTR [ebx-0x42]
  4180fe:	pop    eax
  4180ff:	mov    ds:0x18a903c5,al
  418104:	dec    ecx
  418105:	lahf   
  418106:	or     al,0x2e
  418108:	scas   al,BYTE PTR es:[edi]
  418109:	inc    esi
  41810a:	push   eax
  41810b:	push   eax
  41810c:	or     BYTE PTR [esi+0x2],al
  41810f:	adc    esi,DWORD PTR [edi+0x3789a7b6]
  418115:	dec    ebp
  418116:	sub    eax,0xa3947d8e
  41811b:	inc    esp
  41811c:	sbb    edx,DWORD PTR [ebp+0x51629ba5]
  418122:	ds scas eax,DWORD PTR es:[edi]
  418124:	add    BYTE PTR ds:0xcc83243,bh
  41812a:	fist   DWORD PTR [edi-0x59f34e68]
  418130:	push   esp
  418131:	mov    ch,0x77
  418133:	aaa    
  418134:	ds inc edx
  418136:	bound  edx,QWORD PTR [esi-0x163eaab7]
  41813c:	sbb    ebx,ecx
  41813e:	dec    edi
  41813f:	ret    
  418140:	mov    bh,0x31
  418142:	adc    ah,ah
  418144:	data16 or bx,WORD PTR [edx-0x7d]
  418149:	pushf  
  41814a:	mov    edx,0x3334edb3
  41814f:	adc    eax,0x60195105
  418154:	(bad)  
  418156:	scas   eax,DWORD PTR es:[edi]
  418157:	fwait
  418158:	xchg   edx,eax
  418159:	push   0x63
  41815b:	add    eax,0x5e974692
  418160:	data16 mov ds:0x36b62487,al
  418166:	sti    
  418167:	push   ebx
  418168:	aam    0xd7
  41816a:	jae    0x41813a
  41816c:	sub    bl,BYTE PTR [edx]
  41816e:	push   0x866418be
  418173:	mov    WORD PTR [eax+0x21c39f38],gs
  418179:	adc    BYTE PTR [eax+0xd8364ea],dh
  41817f:	inc    esp
  418180:	dec    esi
  418181:	shr    BYTE PTR [ebx+eiz*8],cl
  418184:	xchg   edx,eax
  418185:	retf   0xdde7
  418188:	cmp    edx,DWORD PTR [edi+0x62]
  41818b:	out    0x6a,eax
  41818d:	pop    esi
  41818e:	call   0x88e5b6b4
  418193:	(bad)  
  418194:	fcmovne st,st(2)
  418196:	loop   0x41815c
  418198:	jbe    0x4181fd
  41819a:	push   ss
  41819b:	fcmovnb st,st(3)
  41819d:	ss dec ebx
  41819f:	sub    al,0xae
  4181a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181a3:	xchg   edx,eax
  4181a4:	cdq    
  4181a5:	scas   eax,DWORD PTR es:[edi]
  4181a6:	add    al,0xdf
  4181a8:	mov    ecx,0x862368e0
  4181ad:	imul   DWORD PTR [ebp+0x504e3784]
  4181b3:	mov    esi,es
  4181b5:	inc    eax
  4181b6:	sbb    edi,esi
  4181b8:	jb     0x4181b7
  4181ba:	(bad)  
  4181bc:	mov    dh,0x27
  4181be:	xor    al,0x9e
  4181c0:	sbb    eax,0x589979ea
  4181c5:	and    eax,0x6a42404c
  4181ca:	cwde   
  4181cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181cc:	mov    edx,DWORD PTR [eax-0x1f]
  4181cf:	dec    eax
  4181d0:	lock sub esi,DWORD PTR [esi-0x1c0bd581]
  4181d7:	(bad)  
  4181d8:	in     al,0xa9
  4181da:	and    al,0xe3
  4181dc:	sub    BYTE PTR [ebp-0x6c],al
  4181df:	mov    ds:0x6d8b1ddb,al
  4181e4:	cmp    eax,DWORD PTR [ebp+0xae80390]
  4181ea:	sahf   
  4181eb:	pop    eax
  4181ec:	mov    ebp,0x697ea890
  4181f1:	xor    DWORD PTR [edi+0x7f],esi
  4181f4:	inc    ecx
  4181f5:	es mov esi,0xc8f8671f
  4181fb:	retf   0xf12b
  4181fe:	dec    ebp
  4181ff:	inc    esp
  418200:	lea    eax,[ebx+edx*8]
  418203:	sub    ecx,esi
  418205:	add    BYTE PTR [ecx],al
  418207:	push   ss
  418208:	mov    ds:0xb61707bc,eax
  41820d:	repz cmp DWORD PTR [ebp-0x23a71eb9],esp
  418214:	push   esi
  418215:	xchg   bx,ax
  418217:	push   es
  418218:	xchg   esi,eax
  418219:	mov    esi,0xaa3a77b3
  41821e:	push   0x1a
  418220:	jnp    0x41824b
  418222:	push   es
  418223:	inc    ecx
  418224:	cdq    
  418225:	add    al,0xba
  418227:	push   edx
  418228:	fmul   QWORD PTR [ebx-0x28]
  41822b:	fsubr  QWORD PTR [edx+eiz*8+0x7357e26d]
  418232:	mov    eax,ds:0xfe041677
  418237:	sub    ebp,ecx
  418239:	jmp    0xbd0388b8
  41823e:	inc    ebp
  41823f:	fidivr DWORD PTR [esi+eiz*1]
  418242:	push   ecx
  418243:	bound  edx,QWORD PTR ds:[edx-0x7b]
  418247:	jl     0x41825a
  418249:	sbb    bh,BYTE PTR [edx+esi*8-0x507a49a4]
  418250:	test   al,ah
  418252:	cmp    dl,BYTE PTR [edi-0x5331a421]
  418258:	xlat   BYTE PTR ds:[ebx]
  418259:	mov    esi,gs
  41825b:	stc    
  41825c:	outs   dx,BYTE PTR ds:[esi]
  41825d:	sub    BYTE PTR [edx-0x1b],dl
  418260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418261:	ins    BYTE PTR es:[edi],dx
  418262:	xor    al,0x25
  418264:	addr16 inc ecx
  418266:	fldenv [ebx]
  418268:	inc    edi
  418269:	nop
  41826a:	pushf  
  41826b:	mov    db6,esi
  41826e:	adc    al,0xae
  418270:	(bad)  
  418271:	fmul   st,st(4)
  418273:	mov    ds:0x55860ad5,al
  418278:	scas   eax,DWORD PTR es:[edi]
  418279:	jnp    0x4182e8
  41827b:	jmp    0x4c55:0xf1ec76d8
  418282:	ret    
  418283:	dec    eax
  418284:	add    DWORD PTR [edx+0x4475e716],eax
  41828a:	scas   eax,DWORD PTR es:[edi]
  41828b:	daa    
  41828c:	xchg   ebp,eax
  41828d:	shl    bl,0xba
  418290:	ficom  WORD PTR [edx-0x42bb147c]
  418296:	cmc    
  418297:	or     DWORD PTR [edx+0x21],esp
  41829a:	add    BYTE PTR [ebx+0x33],bh
  41829d:	mov    esi,ecx
  41829f:	push   0xffffffcb
  4182a1:	div    ah
  4182a3:	test   al,0x6
  4182a5:	jne    0x418289
  4182a7:	inc    ecx
  4182a8:	(bad)  
  4182a9:	mov    edi,0x7275aa2e
  4182ae:	mov    bh,0x65
  4182b0:	stos   DWORD PTR es:[edi],eax
  4182b1:	(bad)  
  4182b2:	mov    ebx,DWORD PTR [ecx+0x41]
  4182b5:	jb     0x418282
  4182b7:	sbb    eax,0xd5fdeb5b
  4182bc:	fisttp WORD PTR ds:0xbf2f13a8
  4182c2:	fld    TBYTE PTR ss:[esi-0x77]
  4182c6:	mov    eax,ds:0x8cdb087c
  4182cb:	aaa    
  4182cc:	mov    eax,ds:0x279ab5c0
  4182d1:	pop    eax
  4182d2:	test   al,0xd1
  4182d4:	jp     0x4182cc
  4182d6:	sub    BYTE PTR [eax-0x99d73d6],ah
  4182dc:	dec    esi
  4182dd:	out    dx,al
  4182de:	pop    ecx
  4182df:	or     esp,DWORD PTR [edx]
  4182e1:	jg     0x418280
  4182e3:	sbb    ebp,DWORD PTR [edi]
  4182e5:	jo     0x418321
  4182e7:	lock out 0xaf,eax
  4182ea:	dec    eax
  4182eb:	cdq    
  4182ec:	ss ds paddusb mm2,mm1
  4182f1:	or     al,0xe2
  4182f3:	pop    edi
  4182f4:	js     0x4182bf
  4182f6:	sub    edx,DWORD PTR [edx-0x2]
  4182f9:	enter  0x9eb4,0x9a
  4182fd:	ds repnz mov dh,al
  418301:	push   eax
  418302:	out    dx,eax
  418303:	jnp    0x41831d
  418305:	xor    DWORD PTR [ebp+0x59],eax
  418308:	push   ecx
  418309:	jecxz  0x418389
  41830b:	ins    DWORD PTR es:[edi],dx
  41830c:	xchg   DWORD PTR [esi+ebp*1+0x73445c8a],ecx
  418313:	jl     0x4182fc
  418315:	hlt    
  418316:	sbb    DWORD PTR [edx+0x8bcd8b8],0xffffff87
  41831d:	nop
  41831e:	test   BYTE PTR [eax-0x4d],bh
  418321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418322:	test   DWORD PTR [ebp-0x5ad086bf],0x485cabf3
  41832c:	pop    ss
  41832d:	xchg   ecx,ecx
  41832f:	mov    ds:0x3babbae2,eax
  418334:	mov    esp,0x3dfbc5e5
  418339:	into   
  41833a:	into   
  41833b:	in     eax,0x6d
  41833d:	add    BYTE PTR [ebx+0x4ebb9ccb],ah
  418343:	and    BYTE PTR [ebx-0x6f],0xff
  418347:	jno    0x4183b0
  418349:	add    ebx,esp
  41834b:	test   cl,al
  41834d:	dec    ecx
  41834e:	sub    eax,0xdc299d3b
  418353:	test   eax,0x7e2cf7ee
  418358:	push   ebp
  418359:	pop    ss
  41835a:	xchg   edi,eax
  41835b:	pushf  
  41835c:	test   eax,0x9def3eee
  418361:	mov    ebp,DWORD PTR [edi]
  418363:	jle    0x418304
  418365:	in     eax,0x14
  418367:	push   ds
  418368:	in     al,dx
  418369:	pop    es
  41836a:	pop    ecx
  41836b:	mov    al,ds:0xd720d776
  418370:	lods   al,BYTE PTR ds:[esi]
  418371:	cwde   
  418372:	cld    
  418373:	and    ebx,esi
  418375:	jmp    0x4183d9
  418377:	pop    ss
  418378:	iret   
  418379:	sub    eax,esi
  41837b:	hlt    
  41837c:	push   edx
  41837d:	xor    BYTE PTR [ecx-0x531727e6],dh
  418383:	das    
  418384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418385:	inc    esp
  418386:	jmp    0xb24260e1
  41838b:	fisttp QWORD PTR ds:0x4ca2ed6b
  418391:	outs   dx,BYTE PTR ds:[esi]
  418392:	data16 mov ds:0xdf315f49,al
  418398:	shl    BYTE PTR [esp+ebp*4+0x22],cl
  41839c:	sbb    al,0xe2
  41839e:	(bad)  [edx+0x5d45f228]
  4183a4:	jmp    0xea25:0x67aee242
  4183ab:	sahf   
  4183ac:	or     al,0xbb
  4183ae:	add    dl,0x7f
  4183b1:	int    0x84
  4183b3:	cmp    eax,DWORD PTR [edi-0x80]
  4183b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183b7:	jp     0x418367
  4183b9:	pusha  
  4183ba:	rcl    BYTE PTR [ebx+0x2baa1c76],cl
  4183c0:	jne    0x418412
  4183c2:	push   ds
  4183c3:	inc    eax
  4183c4:	pop    ecx
  4183c5:	xchg   ebx,eax
  4183c6:	push   cs
  4183c7:	xchg   esp,eax
  4183c8:	or     ebx,esi
  4183ca:	lods   eax,DWORD PTR ds:[esi]
  4183cb:	scas   eax,DWORD PTR es:[edi]
  4183cc:	dec    edx
  4183cd:	outs   dx,BYTE PTR ds:[esi]
  4183ce:	sub    eax,0xc1179214
  4183d3:	mov    ch,0xaa
  4183d5:	inc    BYTE PTR [ebx-0x5a]
  4183d8:	add    al,0xdd
  4183da:	arpl   WORD PTR [edx+ebp*1+0x3c07cc1b],bx
  4183e1:	std    
  4183e2:	cld    
  4183e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183e4:	outs   dx,DWORD PTR ds:[esi]
  4183e5:	add    dh,ah
  4183e7:	ret    
  4183e8:	aam    0x16
  4183ea:	or     eax,0xcd92df2
  4183ef:	popf   
  4183f0:	mov    ah,BYTE PTR [ebp+0x5405f919]
  4183f6:	pushf  
  4183f7:	int3   
  4183f8:	sti    
  4183f9:	(bad)  
  4183fa:	fisub  DWORD PTR [ecx+0x3a2dc27b]
  418400:	arpl   WORD PTR [eax-0x2d],di
  418403:	xchg   ecx,eax
  418404:	ins    BYTE PTR es:[edi],dx
  418405:	add    ebp,ebp
  418407:	mov    ds:0xa6161bae,al
  41840c:	push   ds
  41840d:	int    0xef
  41840f:	out    0x31,al
  418411:	popa   
  418412:	in     eax,0x18
  418414:	loopne 0x418464
  418416:	dec    esi
  418417:	push   ss
  418418:	xor    DWORD PTR [esi],0xffffffe8
  41841b:	xor    BYTE PTR [edx+0x42],0xbb
  41841f:	sub    BYTE PTR [eax-0x13],cl
  418422:	ins    BYTE PTR es:[edi],dx
  418423:	out    dx,al
  418424:	cmc    
  418425:	rol    DWORD PTR [ecx],cl
  418427:	and    ecx,ebx
  418429:	bound  eax,QWORD PTR [edx+ecx*8-0x71]
  41842d:	lock mov ecx,0x81cd396f
  418433:	push   ebx
  418434:	fld    st(5)
  418436:	ret    
  418437:	lock sahf 
  418439:	sub    ebx,DWORD PTR [eax-0x6d2dc64a]
  41843f:	xchg   ebx,eax
  418440:	adc    eax,0x8e07ce6
  418445:	adc    DWORD PTR [ecx-0x3f],0xffffffa0
  418449:	pop    ecx
  41844a:	dec    esp
  41844b:	lahf   
  41844c:	repnz push eax
  41844e:	xchg   ecx,eax
  41844f:	dec    ebp
  418450:	lods   eax,DWORD PTR ds:[esi]
  418451:	cmp    al,0xd1
  418453:	in     al,0xbf
  418455:	aas    
  418456:	mov    edx,0xc4611e78
  41845b:	aad    0x56
  41845d:	loop   0x418457
  41845f:	cmc    
  418460:	stos   BYTE PTR es:[edi],al
  418461:	mov    al,ds:0x951c815a
  418466:	and    BYTE PTR [eax+ebp*8],al
  418469:	jno    0x418441
  41846b:	dec    esi
  41846c:	sar    BYTE PTR [esi+0x65],0xd1
  418470:	cmp    edi,esi
  418472:	mov    BYTE PTR [ebp+0x5edc212d],dl
  418478:	pop    ds
  418479:	fcom   QWORD PTR [esi+0x5]
  41847c:	ror    DWORD PTR [edx+0x19],1
  41847f:	out    dx,eax
  418480:	fs dec esp
  418482:	pop    esp
  418483:	pop    ebx
  418484:	repz add ebx,eax
  418487:	xchg   DWORD PTR [ebx+eiz*2],esp
  41848a:	lods   eax,DWORD PTR ds:[esi]
  41848b:	pop    ebx
  41848c:	pop    esi
  41848d:	mov    esp,0x2aeaca43
  418492:	dec    esp
  418493:	adc    eax,0x47d35023
  418498:	xor    bl,al
  41849a:	xlat   BYTE PTR ds:[ebx]
  41849b:	mov    bh,0x1e
  41849d:	jmp    0x418442
  41849f:	jl     0x418437
  4184a1:	(bad)  
  4184a2:	dec    esp
  4184a3:	lea    esi,[ebp-0x23743429]
  4184a9:	lock or bh,BYTE PTR [edx+0x66cb45d4]
  4184b0:	cwde   
  4184b1:	cs daa 
  4184b3:	or     DWORD PTR [edx-0x47],ebp
  4184b6:	push   esi
  4184b7:	add    eax,0x9df4f001
  4184bc:	dec    ebx
  4184bd:	mov    bl,0x99
  4184bf:	add    BYTE PTR [ebx-0x62a2721a],ch
  4184c5:	imul   eax,edi,0xfffffff6
  4184c8:	jge    0x4184ef
  4184ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184cb:	push   0xffffffbd
  4184cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184ce:	call   0x77e5:0xd022d254
  4184d5:	jo     0x4184dd
  4184d7:	inc    eax
  4184d8:	cmp    eax,DWORD PTR [ebp-0xb5c8f3e]
  4184de:	cdq    
  4184df:	idiv   eax
  4184e1:	mov    ah,0xef
  4184e3:	push   es
  4184e4:	xor    DWORD PTR [esi],ebp
  4184e6:	bound  edx,QWORD PTR [esi-0x65]
  4184e9:	je     0x418473
  4184eb:	mov    WORD PTR [edi+0x5b018088],ds
  4184f1:	sub    BYTE PTR [esi+0x2924bed6],cl
  4184f7:	adc    DWORD PTR [ecx+eiz*4+0x29],0x22
  4184fc:	xchg   esi,eax
  4184fd:	push   esi
  4184fe:	out    dx,al
  4184ff:	repnz sub DWORD PTR [ebp-0x5e],ebx
  418503:	iret   
  418504:	out    0xc0,eax
  418506:	leave  
  418507:	ins    BYTE PTR es:[edi],dx
  418508:	jnp    0x418568
  41850a:	jmp    0xfb04:0x7d95fb2b
  418511:	push   ecx
  418512:	jecxz  0x4184d7
  418514:	ficom  DWORD PTR [edx+edi*1]
  418517:	int3   
  418518:	push   0xfffffff5
  41851a:	test   BYTE PTR [ebp-0x7f],0xeb
  41851e:	or     esi,DWORD PTR [edi+ebx*8-0x22d2d60]
  418525:	test   bl,dl
  418527:	ficomp WORD PTR [ecx+0x23]
  41852a:	pop    ds
  41852b:	xchg   ecx,eax
  41852c:	outs   dx,BYTE PTR ds:[esi]
  41852d:	out    0x75,eax
  41852f:	sub    eax,0xd0329c5a
  418534:	jg     0x418576
  418536:	push   cs
  418537:	fdivp  st(7),st
  418539:	ret    
  41853a:	rcr    BYTE PTR [eax-0x17],cl
  41853d:	imul   edx,DWORD PTR [eax+ebp*8+0x127f1fd8],0x51
  418545:	lea    eax,[edx+0x24d85f66]
  41854b:	sbb    eax,0x982a442e
  418550:	adc    BYTE PTR [edi-0x8],dh
  418553:	sbb    ah,ch
  418555:	dec    edx
  418556:	pop    es
  418557:	call   FWORD PTR [ebp-0x1e7972f3]
  41855d:	sbb    al,0xd0
  41855f:	lods   eax,DWORD PTR ds:[esi]
  418560:	fcmovb st,st(2)
  418562:	mov    eax,0x2634d159
  418567:	or     al,0xdb
  418569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41856a:	jecxz  0x41852a
  41856c:	pop    esp
  41856d:	and    al,0xf2
  41856f:	sbb    DWORD PTR [ecx+0x37],ecx
  418572:	in     al,dx
  418573:	mov    al,dh
  418575:	dec    esi
  418576:	rcr    BYTE PTR [esi+0x464f0add],cl
  41857c:	dec    ebx
  41857d:	sahf   
  41857e:	pop    ecx
  41857f:	mov    ebp,0x13476215
  418584:	sbb    BYTE PTR [ebx+0x2f],ah
  418587:	ror    BYTE PTR [esi+ebx*1+0x14],cl
  41858b:	in     al,dx
  41858c:	sbb    BYTE PTR [esp+eax*8],ah
  41858f:	or     eax,DWORD PTR [ebx+eax*2+0x2e]
  418593:	pop    edx
  418594:	push   0x8ee79c5f
  418599:	rcr    DWORD PTR [edx],1
  41859b:	call   0x3f15:0x2582c2a6
  4185a2:	rol    DWORD PTR [edx+edx*4],1
  4185a5:	cmp    DWORD PTR [ecx],edx
  4185a7:	mov    ds:0xac7a66ed,al
  4185ac:	mov    ebx,0xde44bd5
  4185b1:	sbb    al,0x5f
  4185b3:	mov    ebp,0x1f7aa9aa
  4185b8:	mov    ebx,DWORD PTR [edi-0x6e]
  4185bb:	daa    
  4185bc:	cdq    
  4185bd:	pop    es
  4185be:	rcl    BYTE PTR [edx],0xd4
  4185c1:	pusha  
  4185c2:	ret    0x9c41
  4185c5:	xchg   ebx,eax
  4185c6:	push   ds
  4185c7:	and    dh,BYTE PTR es:[ecx]
  4185ca:	inc    esp
  4185cb:	nop
  4185cc:	mov    al,ds:0x4db87928
  4185d1:	or     WORD PTR [ebx+edi*8],cx
  4185d5:	in     eax,0x8d
  4185d7:	sti    
  4185d8:	sbb    DWORD PTR [ecx-0x73],ecx
  4185db:	dec    edx
  4185dc:	pop    es
  4185dd:	bound  edx,QWORD PTR [edx]
  4185df:	mov    esp,0x92ab9492
  4185e4:	sahf   
  4185e5:	or     al,0xb5
  4185e7:	adc    edx,esp
  4185e9:	(bad)  
  4185eb:	xchg   DWORD PTR [esp+eax*8],esi
  4185ee:	popf   
  4185ef:	add    dh,BYTE PTR [eax]
  4185f1:	pushf  
  4185f2:	rcr    DWORD PTR ds:0xe631ecdf,cl
  4185f8:	cmp    eax,0x40e7b77a
  4185fd:	sbb    cl,BYTE PTR [edi+ecx*2+0x6193e7f7]
  418604:	push   DWORD PTR [ebx+0x7feb6504]
  41860a:	aam    0xf5
  41860c:	sub    DWORD PTR [edx-0x1a],ebx
  41860f:	sbb    eax,ebx
  418611:	sbb    ebp,esp
  418613:	mov    esp,0x474f9114
  418618:	lods   eax,DWORD PTR ds:[esi]
  418619:	jb     0x4185bb
  41861b:	jo     0x41861d
  41861d:	mov    ?,WORD PTR [edx]
  41861f:	push   ss
  418620:	sub    DWORD PTR [edx+0x68],0x69d87bf6
  418627:	mov    dh,0xfd
  418629:	jmp    0x4185ad
  41862b:	imul   ebp,DWORD PTR [edi+ebp*4],0x0
  41862f:	call   0xf7a6:0x7c86578e
  418636:	dec    ebp
  418637:	(bad)  
  418638:	jns    0x418617
  41863a:	jmp    0x27d4:0xd8687edd
  418641:	popf   
  418642:	iret   
  418643:	je     0x418681
  418645:	lock imul edx,DWORD PTR [eax+0x1e],0xffffff86
  41864a:	cmp    ch,BYTE PTR [eax+0x138417de]
  418650:	push   edx
  418651:	dec    esp
  418652:	jb     0x4186bc
  418654:	pop    esi
  418655:	retf   
  418656:	ss aad 0x7
  418659:	(bad)  
  41865b:	aaa    
  41865c:	push   edx
  41865d:	xchg   edi,eax
  41865e:	shl    DWORD PTR [ebp-0x32],cl
  418661:	add    eax,0x997c0d7b
  418666:	clc    
  418667:	xor    ecx,DWORD PTR [ebx-0x7d609a35]
  41866d:	push   ebp
  41866e:	mul    BYTE PTR [ebp-0x8]
  418671:	popf   
  418672:	in     al,dx
  418673:	lea    ebx,[edi]
  418675:	popf   
  418676:	dec    esp
  418677:	cwde   
  418678:	imul   esp,DWORD PTR [esi+eax*1+0xa],0x3
  41867d:	repnz lock sti 
  418680:	rol    ch,0x36
  418683:	mov    WORD PTR [ebp-0x6af4beba],cs
  418689:	loopne 0x4186c1
  41868b:	add    eax,DWORD PTR [esp+ebx*1-0x65babb49]
  418692:	test   DWORD PTR [ebp-0x60cb74e7],ecx
  418698:	aaa    
  418699:	add    DWORD PTR [eax+edi*2-0x60dd621],esi
  4186a0:	mov    ecx,0x9f249e68
  4186a5:	push   eax
  4186a6:	add    al,BYTE PTR [eax]
  4186a8:	ins    BYTE PTR es:[edi],dx
  4186a9:	lods   al,BYTE PTR ds:[esi]
  4186aa:	pop    ss
  4186ab:	jmp    0x4186ac
  4186ad:	loope  0x418708
  4186af:	sar    BYTE PTR [edi+0x3f940de8],1
  4186b5:	sbb    al,0x9a
  4186b7:	fadd   DWORD PTR [esi]
  4186b9:	pusha  
  4186ba:	iret   
  4186bb:	inc    edi
  4186bc:	pop    ss
  4186bd:	ins    DWORD PTR es:[edi],dx
  4186be:	sbb    eax,0x87e93323
  4186c3:	dec    ebx
  4186c4:	sbb    BYTE PTR [ecx],al
  4186c6:	hlt    
  4186c7:	add    dh,ah
  4186c9:	cmp    BYTE PTR [edx-0x7b99c77c],0x45
  4186d0:	push   ecx
  4186d1:	out    0x43,al
  4186d3:	or     bl,BYTE PTR [ebx-0x4e9ebdc3]
  4186d9:	mov    cl,0x82
  4186db:	sbb    eax,0xea31c2d7
  4186e0:	call   0x5d29:0x8022f
  4186e7:	mov    eax,0x4bf5da6
  4186ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ed:	inc    ebp
  4186ee:	ret    0xcd8
  4186f1:	cmp    al,0x84
  4186f3:	sbb    edx,DWORD PTR [esp+edx*4+0x5a]
  4186f7:	and    al,0x98
  4186f9:	lds    ecx,FWORD PTR [esi]
  4186fb:	add    eax,0xb912c181
  418700:	sub    al,0x9
  418702:	sbb    ch,BYTE PTR [edi]
  418704:	aad    0x12
  418706:	inc    eax
  418707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418708:	adc    ebx,DWORD PTR [ecx]
  41870a:	(bad)  
  41870c:	aad    0x43
  41870e:	or     BYTE PTR ds:0xcbe3cb0d,cl
  418714:	cmp    dh,BYTE PTR [eax+0x41]
  418717:	mov    ds:0x3380687d,eax
  41871c:	fstp   st(2)
  41871e:	shl    eax,cl
  418720:	lock mov cl,0x30
  418723:	dec    ecx
  418724:	push   ss
  418725:	pusha  
  418726:	js     0x4186e0
  418728:	sub    ch,BYTE PTR [ebp-0x41e0dda9]
  41872e:	adc    DWORD PTR [edx],ecx
  418730:	and    ebp,DWORD PTR [edi]
  418732:	scas   al,BYTE PTR es:[edi]
  418733:	mov    edx,0xe1015e28
  418738:	mov    dl,BYTE PTR [eax]
  41873a:	and    esi,ebp
  41873c:	into   
  41873d:	xchg   DWORD PTR [edx-0x292e5de2],esi
  418743:	div    BYTE PTR [ecx-0x6f4334c4]
  418749:	(bad)  
  41874a:	data16 jmp 0x4186f0
  41874d:	add    BYTE PTR [edx],ch
  41874f:	int    0x2c
  418751:	cmp    ch,BYTE PTR [edi]
  418753:	push   edi
  418754:	pop    esi
  418755:	fs dec eax
  418757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418758:	rcr    BYTE PTR [ebx+0x10a55f57],1
  41875e:	fadd   st(7),st
  418760:	mov    ebp,ebp
  418762:	(bad)  
  418763:	aaa    
  418764:	in     al,0x6
  418766:	rcl    DWORD PTR [esi-0x499f8ace],0xaa
  41876d:	sub    bh,BYTE PTR es:[eax-0x2bb69adc]
  418774:	pop    ecx
  418775:	lea    ebx,[bx+si+0x63]
  418779:	and    ch,bh
  41877b:	dec    ebx
  41877c:	(bad)  
  41877d:	xor    BYTE PTR [edi-0x12],dh
  418780:	inc    eax
  418781:	js     0x4187e8
  418783:	test   BYTE PTR [ebx],dl
  418785:	inc    ebx
  418786:	iret   
  418787:	inc    eax
  418788:	(bad)  
  418789:	in     eax,0xd8
  41878b:	lea    eax,[ebp-0x6f]
  41878e:	ret    
  41878f:	lods   al,BYTE PTR ds:[esi]
  418790:	sub    ch,BYTE PTR [esi+0x22d7898c]
  418796:	lods   al,BYTE PTR ds:[esi]
  418797:	sti    
  418798:	xor    dl,cl
  41879a:	fdivrp st(1),st
  41879c:	dec    ecx
  41879d:	sub    dh,al
  41879f:	sub    BYTE PTR [edx+0x3422739b],ch
  4187a5:	repz push edi
  4187a7:	xor    DWORD PTR [eax+0x7f7b0a18],edi
  4187ad:	mov    dl,0x5d
  4187af:	and    dh,BYTE PTR [esi+0x11d955b7]
  4187b5:	(bad)
  4187b8:	lock (bad) [edx+0x2f7c6329]
  4187bf:	ficom  DWORD PTR [edx+0x3a]
  4187c2:	lds    esp,FWORD PTR [ebx]
  4187c4:	fcmovu st,st(2)
  4187c6:	adc    ah,BYTE PTR [eax]
  4187c8:	add    eax,0xc8f1c6a3
  4187cd:	or     eax,0x818b824f
  4187d2:	jle    0x418786
  4187d4:	mov    DWORD PTR [esi+0x50d83973],0xd7a9882e
  4187de:	xchg   ebx,eax
  4187df:	push   eax
  4187e0:	pusha  
  4187e1:	fisttp DWORD PTR [eax]
  4187e3:	pop    edi
  4187e4:	std    
  4187e5:	push   ecx
  4187e6:	daa    
  4187e7:	xchg   esi,eax
  4187e8:	and    eax,0xffcc90ee
  4187ed:	pop    ds
  4187ee:	push   ecx
  4187ef:	mov    ds:0xed8c25d6,al
  4187f4:	push   ebx
  4187f5:	xchg   edx,eax
  4187f6:	mov    edi,0xf64e842b
  4187fb:	cdq    
  4187fc:	jmp    0x418857
  4187fe:	adc    DWORD PTR [ebp-0x6924b163],0xffffffe2
  418805:	jb     0x418794
  418807:	push   ds
  418808:	pop    eax
  418809:	js     0x418872
  41880b:	mov    DWORD PTR [ebp+0x3896718c],esp
  418811:	pop    edx
  418812:	adc    ebx,eax
  418814:	inc    ebx
  418815:	add    BYTE PTR [esi],0xb4
  418818:	cmp    dh,al
  41881a:	data16 sahf 
  41881c:	inc    ecx
  41881d:	sbb    al,bh
  41881f:	aaa    
  418820:	out    dx,eax
  418821:	test   cl,bh
  418823:	dec    ecx
  418824:	add    eax,0x30fbdbb8
  418829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41882a:	cdq    
  41882b:	pcmpgtb mm3,mm1
  41882e:	xchg   edi,eax
  41882f:	mov    edx,0x7b914dd0
  418834:	jnp    0x418896
  418836:	sub    bl,BYTE PTR [edi+0x3b1b944e]
  41883c:	fld    st(1)
  41883e:	loope  0x4187c7
  418840:	adc    bl,0x11
  418843:	ds xchg edi,eax
  418845:	inc    edx
  418846:	arpl   WORD PTR [edi+0x10a842e0],bp
  41884c:	ja     0x4188ac
  41884e:	mov    dl,BYTE PTR ds:0xf88951f5
  418854:	stos   DWORD PTR es:[edi],eax
  418855:	xor    dl,BYTE PTR [ebx+0x3548ae94]
  41885b:	and    ch,ch
  41885d:	aas    
  41885e:	add    DWORD PTR [esi-0x574f6812],esp
  418864:	retf   0xfdbb
  418867:	loope  0x41885d
  418869:	jns    0x418818
  41886b:	xor    al,BYTE PTR fs:[ebp+edx*4-0x5595020b]
  418873:	stos   DWORD PTR es:[edi],eax
  418874:	cmp    BYTE PTR [edx+0x26],0xeb
  418878:	jae    0x4188db
  41887a:	repz pop ebp
  41887c:	dec    esi
  41887d:	and    DWORD PTR [ebx-0x671ebda],eax
  418883:	lea    esi,fs:[ebx]
  418886:	jne    0x4188d9
  418888:	fisttp WORD PTR [edx+0x4029764e]
  41888e:	loope  0x418899
  418890:	clc    
  418891:	mov    ds:0xe5c9e9ea,al
  418896:	retf   
  418897:	push   0xfffffff9
  418899:	dec    eax
  41889a:	cli    
  41889b:	fisub  DWORD PTR [ecx+0x406e6f99]
  4188a1:	adc    al,0x51
  4188a3:	or     eax,0x1e5d8814
  4188a8:	ret    
  4188a9:	sbb    ebx,ecx
  4188ab:	mov    eax,ds:0xc15ccb50
  4188b0:	shr    DWORD PTR [esi+edx*1-0x40],1
  4188b4:	add    dh,BYTE PTR [edx-0x623da00f]
  4188ba:	pop    esi
  4188bb:	mov    cl,0xc3
  4188bd:	cs mov ds,ebp
  4188c0:	cli    
  4188c1:	xchg   ebx,eax
  4188c2:	nop
  4188c3:	js     0x41891e
  4188c5:	mov    esp,0x85825cb7
  4188ca:	dec    esp
  4188cb:	xor    eax,DWORD PTR [ebx-0x13923ff1]
  4188d1:	add    BYTE PTR ss:[ebp-0xe],dh
  4188d5:	ss mov ebp,eax
  4188d8:	fimul  DWORD PTR [ebp+0x2f]
  4188db:	je     0x4188a1
  4188dd:	xor    al,0x8a
  4188df:	cwde   
  4188e0:	pop    ebx
  4188e1:	out    0x1b,eax
  4188e3:	mov    ecx,DWORD PTR [ebx+0x2ab53496]
  4188e9:	fcmovnu st,st(7)
  4188eb:	add    BYTE PTR [esi-0x4a],al
  4188ee:	dec    eax
  4188ef:	and    ebx,eax
  4188f1:	and    dh,BYTE PTR [ecx]
  4188f3:	adc    edx,DWORD PTR [ebp+0x7d40e0d5]
  4188f9:	lahf   
  4188fa:	inc    esi
  4188fb:	fld    QWORD PTR [edi]
  4188fd:	stos   BYTE PTR es:[edi],al
  4188fe:	arpl   bx,bx
  418900:	jmp    FWORD PTR [eax-0x66a65b26]
  418906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418907:	popa   
  418908:	sub    bl,al
  41890a:	sbb    BYTE PTR [ecx+ebp*4],0xe1
  41890e:	aam    0x2b
  418910:	push   ss
  418911:	mov    esi,0x440686fe
  418916:	cld    
  418917:	aas    
  418918:	fstp   TBYTE PTR [ecx+0x14]
  41891b:	nop
  41891c:	cmp    BYTE PTR [esi],dh
  41891e:	loopne 0x4188be
  418920:	push   es
  418921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418922:	stc    
  418923:	inc    ecx
  418924:	ins    DWORD PTR es:[edi],dx
  418925:	push   0xed249841
  41892a:	sbb    DWORD PTR [edx],esp
  41892c:	retf   0xe4d8
  41892f:	xchg   edi,eax
  418930:	sub    eax,DWORD PTR [ecx+0x4a]
  418933:	mov    ds:0x55741f19,eax
  418938:	sub    DWORD PTR [edi-0x49],edi
  41893b:	dec    ebp
  41893c:	popf   
  41893d:	js     0x418957
  41893f:	fisubr DWORD PTR [esi-0x5b]
  418942:	mov    ebx,0x7ce48492
  418947:	fmulp  st(1),st
  418949:	inc    ebx
  41894a:	cmp    ah,BYTE PTR [edx+0x421b951f]
  418950:	mov    ebx,0xae6e41
  418955:	imul   esp,DWORD PTR [edi+eiz*8-0x620370f],0x6b
  41895d:	xchg   esi,eax
  41895e:	xchg   edi,eax
  41895f:	sub    al,0xa0
  418961:	jmp    0x225c:0x4f312b18
  418968:	cmp    BYTE PTR [edi*8+0x1461d8a3],ah
  41896f:	(bad)  
  418970:	in     eax,dx
  418971:	push   edx
  418972:	push   0x1a
  418974:	ins    DWORD PTR es:[edi],dx
  418975:	bound  esp,QWORD PTR [ecx]
  418977:	or     eax,0x932c320f
  41897c:	fsub   st,st(7)
  41897e:	adc    BYTE PTR [esp+eax*8],0xae
  418982:	push   edx
  418983:	sub    bh,ch
  418985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418986:	in     al,dx
  418987:	mov    dh,0x1c
  418989:	les    eax,FWORD PTR [edx-0x30]
  41898c:	das    
  41898d:	popf   
  41898e:	(bad)  
  41898f:	scas   eax,DWORD PTR es:[edi]
  418990:	fwait
  418991:	lock cmp DWORD PTR gs:[esi+ebp*4+0x6b],edi
  418997:	lea    esp,[esi-0x2a]
  41899a:	mov    ebp,0xc6356e79
  41899f:	jmp    FWORD PTR [esi-0x2a]
  4189a2:	out    dx,al
  4189a3:	in     eax,dx
  4189a4:	outs   dx,BYTE PTR ds:[esi]
  4189a5:	loop   0x4189eb
  4189a7:	mov    eax,ds:0xf4c852c1
  4189ac:	push   es
  4189ad:	jns    0x418a1a
  4189af:	loopne 0x418955
  4189b1:	call   0x6e88:0xae5d8eae
  4189b8:	lods   eax,DWORD PTR ds:[esi]
  4189b9:	fnstenv [edi+edi*2-0x4]
  4189bd:	scas   al,BYTE PTR es:[edi]
  4189be:	scas   eax,DWORD PTR es:[edi]
  4189bf:	ret    
  4189c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189c1:	popa   
  4189c2:	add    BYTE PTR [edi+0x7ebf15ce],dl
  4189c8:	pmaxsw mm3,QWORD PTR [ecx+0x5ff6669]
  4189cf:	fwait
  4189d0:	lock jg 0x418a26
  4189d3:	stos   DWORD PTR es:[edi],eax
  4189d4:	jo     0x418979
  4189d6:	dec    esp
  4189d7:	and    BYTE PTR ds:[eax],0x13
  4189db:	das    
  4189dc:	xor    eax,DWORD PTR [edx]
  4189de:	and    edx,DWORD PTR [ebp-0x42]
  4189e1:	cmc    
  4189e2:	loop   0x418a27
  4189e4:	mov    WORD PTR [eax],ss
  4189e6:	(bad)  
  4189e7:	jo     0x418a1d
  4189e9:	xchg   DWORD PTR [ecx],eax
  4189eb:	pop    ds
  4189ec:	cmp    dl,dl
  4189ee:	xor    BYTE PTR [ebx],0xf
  4189f1:	jo     0x418a72
  4189f3:	add    ch,BYTE PTR [esi-0x56324164]
  4189f9:	adc    esp,ebp
  4189fb:	and    DWORD PTR [ebx-0x5dbbcf1],0xffffffc7
  418a02:	push   edi
  418a03:	jg     0x418a84
  418a05:	xor    al,0x6a
  418a07:	out    dx,eax
  418a08:	push   es
  418a09:	test   al,0xb9
  418a0b:	mov    ch,0xdc
  418a0d:	sbb    DWORD PTR [eax-0x14],0x731941ae
  418a14:	repnz aaa 
  418a16:	sahf   
  418a17:	push   0xe8ae6817
  418a1c:	bound  esp,QWORD PTR [eax]
  418a1e:	adc    esi,DWORD PTR [esi+0x74]
  418a21:	xchg   ebp,eax
  418a22:	push   0xdd95a0bf
  418a27:	test   DWORD PTR [ecx-0x60f15ed9],edi
  418a2d:	push   esp
  418a2e:	xor    DWORD PTR [edi-0x556efc81],edx
  418a34:	push   0x32f949b3
  418a39:	fist   DWORD PTR [ecx+ebp*2]
  418a3c:	xchg   BYTE PTR [edx],ah
  418a3e:	ret    
  418a3f:	into   
  418a40:	mov    cs:0xf9258082,al
  418a46:	mov    eax,ds:0x5a84fcb9
  418a4b:	in     al,0xef
  418a4d:	fstp   st(2)
  418a4f:	add    BYTE PTR ds:0x8716e991,0xe6
  418a56:	hlt    
  418a57:	fbld   TBYTE PTR [edx]
  418a59:	mov    dl,0xd4
  418a5b:	or     bl,BYTE PTR ds:0x25e5e607
  418a61:	bnd jmp 0xbc6b478e
  418a67:	pop    ss
  418a68:	rcl    DWORD PTR [esi],cl
  418a6a:	xchg   BYTE PTR [ecx-0x7af7d5a6],dl
  418a70:	adc    BYTE PTR [esi+0x674efb98],al
  418a76:	pop    edx
  418a77:	sti    
  418a78:	jb     0x418a43
  418a7a:	dec    eax
  418a7b:	ds sub al,0xf4
  418a7e:	xchg   ebp,eax
  418a7f:	(bad)  
  418a80:	fnstsw WORD PTR [ebx]
  418a82:	(bad)  
  418a84:	or     eax,0x84fb70e0
  418a89:	fwait
  418a8a:	push   0x12180a5
  418a8f:	jmp    0x418a7b
  418a91:	(bad)  
  418a92:	shr    ebp,1
  418a94:	scas   eax,DWORD PTR es:[edi]
  418a95:	test   BYTE PTR [esi-0x7179a364],cl
  418a9b:	dec    ecx
  418a9c:	in     eax,dx
  418a9d:	xor    eax,0x495e1602
  418aa2:	mov    dh,0xed
  418aa4:	push   ebx
  418aa5:	dec    esp
  418aa6:	xlat   BYTE PTR ds:[ebx]
  418aa7:	inc    ecx
  418aa8:	into   
  418aa9:	jmp    0x70e7:0xc2a4caa7
  418ab0:	xor    DWORD PTR [edx+0x7f2f2262],ecx
  418ab6:	inc    ebx
  418ab7:	mov    edi,0xa95483d3
  418abc:	inc    eax
  418abd:	cmp    DWORD PTR [esi],ebx
  418abf:	(bad)  
  418ac0:	retf   
  418ac1:	dec    ecx
  418ac2:	fmul   st(0),st
  418ac4:	inc    ecx
  418ac5:	sub    al,BYTE PTR [esi-0x5e47e329]
  418acb:	xor    ebp,eax
  418acd:	mov    ebx,0x7bb1069d
  418ad3:	pop    edx
  418ad4:	cs pusha 
  418ad6:	and    eax,0x9406f27b
  418adb:	mov    bl,0x2d
  418add:	fist   DWORD PTR [ebp-0x7734494c]
  418ae3:	jmp    0x92ee9576
  418ae8:	push   esp
  418ae9:	call   0x8677ff9c
  418aee:	xor    dl,dh
  418af0:	loopne 0x418b3d
  418af2:	ret    0x8a73
  418af5:	sbb    al,0xb
  418af7:	sub    al,0x5e
  418af9:	or     ebp,DWORD PTR [ecx+ebp*2]
  418afc:	aam    0xfb
  418afe:	loopne 0x418b57
  418b00:	sbb    eax,ebp
  418b02:	cmp    DWORD PTR [esi-0x3b],esp
  418b05:	push   0x1
  418b07:	cmp    DWORD PTR [edx],ebp
  418b09:	or     al,0xb6
  418b0b:	shl    DWORD PTR [eax],1
  418b0d:	pop    ebp
  418b0e:	mov    al,0xa
  418b10:	xchg   ebx,eax
  418b11:	int    0x50
  418b13:	fsub   QWORD PTR [edi+0x4a0c3d65]
  418b19:	sbb    bl,BYTE PTR [edx+0x434a3f1d]
  418b1f:	pop    edx
  418b20:	xchg   BYTE PTR [ebx+ebp*1+0x22],bl
  418b24:	xor    eax,0x49e39202
  418b29:	leave  
  418b2a:	enter  0x5ae6,0x35
  418b2e:	popf   
  418b2f:	fs stc 
  418b31:	mov    edi,0xcf1ce0b5
  418b36:	std    
  418b37:	adc    DWORD PTR [edi-0x3eb437ec],eax
  418b3d:	xchg   esp,eax
  418b3e:	mul    BYTE PTR [edi]
  418b40:	cwde   
  418b41:	mov    ch,0xc2
  418b43:	in     al,dx
  418b44:	out    dx,eax
  418b45:	pop    ds
  418b46:	mov    edi,0x522f2297
  418b4b:	enter  0xcf20,0x20
  418b4f:	stc    
  418b50:	les    ecx,FWORD PTR [edx+ebx*1+0x36a6460d]
  418b57:	lods   eax,DWORD PTR ds:[esi]
  418b58:	xchg   ebx,eax
  418b59:	jo     0x418af0
  418b5b:	rol    BYTE PTR [edx],0x3f
  418b5e:	pop    ss
  418b5f:	push   es
  418b60:	mov    DWORD PTR [esi+0x54e028ee],0xf11293d
  418b6a:	pop    ecx
  418b6b:	arpl   si,ax
  418b6d:	xchg   ecx,eax
  418b6e:	pop    esp
  418b6f:	xchg   DWORD PTR [ebx+0x68],ebp
  418b72:	cmp    DWORD PTR [ebx-0x6c],eax
  418b75:	pslld  mm2,mm4
  418b78:	pusha  
  418b79:	sbb    DWORD PTR [edi-0x4549c172],ebp
  418b7f:	in     al,dx
  418b80:	rol    DWORD PTR [eax-0x239d4b70],cl
  418b86:	cmp    BYTE PTR [esp+eiz*8+0xfabaa31],ch
  418b8d:	pop    esi
  418b8e:	push   ebx
  418b8f:	gs cwde 
  418b91:	mov    eax,ds:0xba16fa2c
  418b96:	cmp    DWORD PTR [eax-0x5b],ebx
  418b99:	out    dx,al
  418b9a:	inc    edx
  418b9b:	aam    0xc3
  418b9d:	add    eax,ebp
  418b9f:	mov    ebx,0xf443f964
  418ba4:	jbe    0x418bb0
  418ba6:	cdq    
  418ba7:	add    bl,0x1
  418baa:	mov    cl,0x31
  418bac:	loop   0x418b81
  418bae:	lahf   
  418baf:	repnz mov bh,0xf0
  418bb2:	inc    edx
  418bb3:	pop    edx
  418bb4:	xchg   BYTE PTR [ebx+0x77599c75],dl
  418bba:	sti    
  418bbb:	or     al,0x68
  418bbd:	call   0x2bef:0x4b802a44
  418bc4:	pop    esi
  418bc5:	dec    eax
  418bc6:	push   edx
  418bc7:	mov    ecx,0x649a2394
  418bcc:	push   eax
  418bcd:	dec    esp
  418bce:	outs   dx,BYTE PTR ds:[esi]
  418bcf:	pop    ebx
  418bd0:	sbb    eax,0x424475ad
  418bd5:	imul   ebp,DWORD PTR [ebp-0x51],0xe679e4a7
  418bdc:	inc    esi
  418bdd:	ja     0x418c50
  418bdf:	lock scas al,BYTE PTR es:[edi]
  418be1:	psubw  mm3,mm0
  418be4:	cmp    al,al
  418be6:	dec    ebp
  418be7:	les    esp,FWORD PTR [ebp+0x6]
  418bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418beb:	mov    DWORD PTR [eax],edx
  418bed:	mov    ecx,0x21cf31f0
  418bf2:	sub    ebx,DWORD PTR [edx]
  418bf4:	push   ecx
  418bf5:	mov    BYTE PTR [edx+0x5b],bh
  418bf8:	push   ss
  418bf9:	hlt    
  418bfa:	loope  0x418bfb
  418bfc:	loope  0x418c24
  418bfe:	pop    es
  418bff:	fdiv   st(2),st
  418c01:	les    edi,FWORD PTR ds:0x40783fc
  418c07:	jne    0x418c72
  418c09:	sbb    eax,0x4c2d566b
  418c0e:	mov    eax,0x9614e76b
  418c13:	(bad)  
  418c14:	mov    eax,ds:0x382e8021
  418c19:	add    BYTE PTR [ebx+0x5e],0xfc
  418c1d:	xor    DWORD PTR [edx-0x1ea24ab],edx
  418c23:	(bad)  
  418c24:	xchg   DWORD PTR [edi+0x7342ffa7],esi
  418c2a:	mov    al,0x38
  418c2c:	jg     0x418bb2
  418c2e:	aaa    
  418c2f:	out    0x10,eax
  418c31:	xor    eax,0x29ca04a0
  418c36:	popa   
  418c37:	sbb    BYTE PTR [ecx+0x606e9422],dl
  418c3d:	(bad)  
  418c3e:	imul   edx,DWORD PTR ss:[edi-0x39b9731c],0xa7059af8
  418c49:	loop   0x418bdf
  418c4b:	pop    edx
  418c4c:	repz (bad) 
  418c4e:	lock and eax,0x3f4547b2
  418c54:	scas   eax,DWORD PTR es:[edi]
  418c55:	mov    bh,0x3a
  418c57:	cli    
  418c58:	call   0x89d487a7
  418c5d:	or     cl,cl
  418c5f:	adc    BYTE PTR [ebp-0x22],dh
  418c62:	adc    BYTE PTR [eax-0x58],dh
  418c65:	cmp    ch,BYTE PTR [ebx]
  418c67:	xor    al,BYTE PTR [esi+0x5d0c5a08]
  418c6d:	int    0x52
  418c6f:	mov    ah,0xd7
  418c71:	and    esi,DWORD PTR ss:[ebx]
  418c74:	pop    ecx
  418c75:	push   edi
  418c76:	xchg   esi,eax
  418c77:	inc    ecx
  418c78:	cmp    BYTE PTR [edx],bl
  418c7a:	arpl   dx,ax
  418c7c:	and    edx,DWORD PTR [edi-0x6]
  418c7f:	jbe    0x6a1ea757
  418c85:	ins    BYTE PTR es:[di],dx
  418c87:	ret    0xe86f
  418c8a:	pop    edx
  418c8b:	xor    DWORD PTR [edi-0x6],0x64
  418c8f:	inc    ecx
  418c90:	mov    ds:0x106da8cd,al
  418c95:	xor    BYTE PTR [ebx-0x1e],bh
  418c98:	aas    
  418c99:	xchg   esi,eax
  418c9a:	xchg   esi,eax
  418c9b:	mov    ecx,0xca4782f8
  418ca0:	push   ecx
  418ca1:	pusha  
  418ca2:	and    al,0x1d
  418ca4:	out    dx,eax
  418ca5:	scas   al,BYTE PTR es:[edi]
  418ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ca7:	push   esp
  418ca8:	add    ah,BYTE PTR [esi+0x78]
  418cab:	stos   DWORD PTR es:[edi],eax
  418cac:	(bad)  
  418cad:	dec    esi
  418cae:	sbb    eax,0x839fdb09
  418cb3:	pusha  
  418cb4:	sahf   
  418cb5:	push   0xe8321aab
  418cba:	sbb    DWORD PTR [eax-0x41],ecx
  418cbd:	fnstenv [ebx+eax*2+0x3a8a6c6f]
  418cc4:	stc    
  418cc5:	cdq    
  418cc6:	hlt    
  418cc7:	adc    al,0x46
  418cc9:	jmp    0x369d:0x61b54509
  418cd0:	test   BYTE PTR [esi],0x70
  418cd3:	pop    edi
  418cd4:	out    0xf1,al
  418cd6:	das    
  418cd7:	sub    al,0xfd
  418cd9:	push   edi
  418cda:	mov    WORD PTR [ecx],ss
  418cdc:	ds dec edi
  418cde:	int3   
  418cdf:	rcl    DWORD PTR [edx+0x29],cl
  418ce2:	icebp  
  418ce3:	xchg   ebp,eax
  418ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ce5:	sub    eax,0x83e56849
  418cea:	scas   eax,DWORD PTR es:[edi]
  418ceb:	out    dx,al
  418cec:	cmp    BYTE PTR [edi+0x20c076cf],bl
  418cf2:	aad    0xee
  418cf4:	add    BYTE PTR [esi],ah
  418cf6:	mov    ds:0xc7a3a870,eax
  418cfb:	inc    edx
  418cfc:	imul   esi,DWORD PTR [edi],0xffffffea
  418cff:	mov    cl,0x25
  418d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d02:	clc    
  418d03:	sbb    ah,BYTE PTR [eax]
  418d05:	mov    dh,bl
  418d07:	out    0xe1,al
  418d09:	xor    eax,0x2154dc22
  418d0e:	sbb    al,0xfd
  418d10:	pop    ebp
  418d11:	cmp    al,0xb8
  418d13:	pop    edi
  418d14:	or     eax,0x25bcccb3
  418d19:	sub    al,0x5e
  418d1b:	nop
  418d1c:	mov    es,WORD PTR [eax+0x56]
  418d1f:	push   cs
  418d20:	in     al,dx
  418d21:	xor    dl,BYTE PTR [eax-0x27]
  418d24:	(bad)
  418d27:	jmp    0xf517cb77
  418d2c:	push   es
  418d2d:	inc    ecx
  418d2e:	mov    ch,0xda
  418d30:	outs   dx,BYTE PTR ds:[esi]
  418d31:	add    ebx,ebp
  418d33:	aaa    
  418d34:	sub    BYTE PTR [edx],ah
  418d36:	xor    bh,BYTE PTR [esi+0x48]
  418d39:	mov    esp,0x58a20d4f
  418d3e:	push   esp
  418d3f:	in     eax,0xa3
  418d41:	daa    
  418d42:	retw   0x8d1b
  418d46:	push   edi
  418d47:	ins    BYTE PTR es:[edi],dx
  418d48:	div    BYTE PTR [ebp+edi*4-0x57f88a4f]
  418d4f:	dec    ecx
  418d50:	das    
  418d51:	das    
  418d52:	add    DWORD PTR [edx],edi
  418d54:	clc    
  418d55:	jno    0x418d52
  418d57:	call   FWORD PTR [esi+0x54fb435e]
  418d5d:	xchg   ebx,edi
  418d5f:	xor    BYTE PTR [ebx],al
  418d61:	xchg   DWORD PTR [esi],esi
  418d63:	push   0xfffffff2
  418d65:	les    esp,FWORD PTR [ebp+ebx*2-0x6e]
  418d69:	mov    eax,ds:0x2c929605
  418d6e:	mov    eax,0xc04fcfe5
  418d73:	loopne 0x418dd8
  418d75:	xchg   edi,eax
  418d76:	xor    esi,edi
  418d78:	xor    dh,bl
  418d7a:	mov    eax,ds:0x75c376b3
  418d7f:	sbb    DWORD PTR [eax-0x73],0xffffffa8
  418d83:	popf   
  418d84:	mov    ebx,0x233b71af
  418d89:	jnp    0x418e03
  418d8b:	aam    0xdc
  418d8d:	in     eax,0x66
  418d8f:	jecxz  0x418d3b
  418d91:	pop    eax
  418d92:	loop   0x418d42
  418d94:	and    esp,DWORD PTR ds:0x5ea13eb9
  418d9a:	mov    ds:0x279a199a,al
  418d9f:	pop    eax
  418da0:	push   es
  418da1:	xlat   BYTE PTR ds:[ebx]
  418da2:	test   al,0x25
  418da4:	pop    edi
  418da5:	shl    DWORD PTR [ecx],0x48
  418da8:	jo     0x418d89
  418daa:	repnz cmp DWORD PTR ds:0xbc2085e8,0x2b201381
  418db5:	cwde   
  418db6:	nop
  418db7:	jecxz  0x418dda
  418db9:	sbb    esi,ebx
  418dbb:	lock cwde 
  418dbd:	leave  
  418dbe:	out    0xc4,eax
  418dc0:	add    BYTE PTR ds:0xd68200d7,bl
  418dc6:	pop    ecx
  418dc7:	cmc    
  418dc8:	test   al,0xaa
  418dca:	xlat   BYTE PTR ds:[ebx]
  418dcb:	add    dl,BYTE PTR [edx-0x35]
  418dce:	xchg   esi,eax
  418dcf:	test   DWORD PTR [eax+esi*2-0x2d],ebp
  418dd3:	push   es
  418dd4:	sub    eax,0x11895990
  418dd9:	fsub   st(2),st
  418ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ddc:	or     BYTE PTR [edi+0xd54813f],al
  418de2:	dec    ebx
  418de3:	(bad)  [ebx]
  418de5:	jle    0x418dec
  418de7:	sbb    al,0x14
  418de9:	je     0x418d6e
  418deb:	jnp    0x418dd8
  418ded:	retf   0xdd4c
  418df0:	dec    eax
  418df1:	and    bl,ch
  418df3:	mov    DWORD PTR [si],ebx
  418df6:	pop    ecx
  418df7:	mov    al,ds:0x17f42fc8
  418dfc:	popa   
  418dfd:	test   bh,0xf1
  418e00:	push   ebp
  418e01:	dec    ebx
  418e02:	scas   eax,DWORD PTR es:[edi]
  418e03:	inc    edx
  418e04:	loopne 0x418de6
  418e06:	dec    ebx
  418e07:	icebp  
  418e08:	xor    ebp,edx
  418e0a:	sub    al,0x81
  418e0c:	fwait
  418e0d:	shr    DWORD PTR ss:[esi],0x30
  418e11:	dec    ebp
  418e12:	(bad)  
  418e13:	aas    
  418e14:	jbe    0x418e33
  418e16:	jp     0x418de8
  418e18:	jnp    0x418e02
  418e1a:	add    al,0x6
  418e1c:	mov    ds:0x21494b0a,eax
  418e21:	enter  0x5eda,0x10
  418e25:	ret    
  418e26:	ret    
  418e27:	inc    ebx
  418e28:	outs   dx,BYTE PTR ds:[esi]
  418e29:	enter  0x7b35,0x0
  418e2d:	push   ebp
  418e2e:	and    ch,BYTE PTR [edi]
  418e30:	push   edx
  418e31:	pop    edx
  418e32:	inc    ebx
  418e33:	daa    
  418e34:	enter  0x6738,0x10
  418e38:	mov    bh,0x15
  418e3a:	add    eax,0x7289245c
  418e3f:	pop    ecx
  418e40:	in     eax,0xd3
  418e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e43:	jo     0x418e3c
  418e45:	shr    BYTE PTR [esi+ebx*8-0x550c0fde],cl
  418e4c:	jne    0x418e9d
  418e4e:	adc    ecx,DWORD PTR [esi]
  418e50:	int3   
  418e51:	xor    BYTE PTR [ebp+0x1272e9d3],al
  418e57:	(bad)  
  418e58:	fucomi st,st(0)
  418e5a:	outs   dx,DWORD PTR ds:[esi]
  418e5b:	push   es
  418e5c:	sub    al,0x11
  418e5e:	repnz push ss
  418e60:	popa   
  418e61:	mov    eax,0xbeb14ce5
  418e66:	outs   dx,BYTE PTR ds:[esi]
  418e67:	out    dx,eax
  418e68:	ficom  WORD PTR [eax+0x1c]
  418e6b:	mov    ch,0xe1
  418e6d:	mov    al,0x4e
  418e70:	mov    cs,WORD PTR gs:[ebx]
  418e73:	jge    0x418dff
  418e75:	dec    esp
  418e76:	inc    ebx
  418e77:	push   ss
  418e78:	pop    eax
  418e79:	stos   BYTE PTR es:[edi],al
  418e7a:	imul   edi,DWORD PTR [edx+0x49c7e89c],0x9cd715d1
  418e84:	shl    edx,cl
  418e86:	fwait
  418e87:	jmp    0xd6f1:0x8467c1bc
  418e8e:	mov    dl,0xb5
  418e90:	fld    TBYTE PTR ds:0x661d0b35
  418e96:	inc    esi
  418e97:	stc    
  418e98:	enter  0xb996,0x41
  418e9c:	fist   DWORD PTR [edi]
  418e9e:	(bad)  
  418e9f:	and    al,0xb8
  418ea1:	loope  0x418e3a
  418ea3:	xor    DWORD PTR es:[ebp+0x3c],0x25eb45a4
  418eab:	push   ds
  418eac:	pop    ds
  418ead:	cs mov esp,0x9452693b
  418eb3:	mov    bl,0x85
  418eb5:	pop    edi
  418eb6:	mov    DWORD PTR [eax-0x1df83482],esp
  418ebc:	loopne 0x418ef6
  418ebe:	and    DWORD PTR [edi],ebx
  418ec0:	inc    ebx
  418ec1:	outs   dx,DWORD PTR ds:[esi]
  418ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec3:	xchg   ebp,eax
  418ec4:	imul   BYTE PTR [ebx]
  418ec6:	push   ds
  418ec7:	inc    edx
  418ec8:	jmp    0xeab:0xaa7b0c48
  418ecf:	mov    al,0xc6
  418ed1:	lock sbb BYTE PTR ds:0xe0d63a68,dh
  418ed8:	int    0x31
  418eda:	sti    
  418edb:	lock nop
  418edd:	fiadd  DWORD PTR [edx]
  418edf:	push   es
  418ee0:	pusha  
  418ee1:	in     eax,dx
  418ee2:	call   0x395b:0x7e8c
  418ee8:	or     eax,0xc583203b
  418eed:	dec    esp
  418eee:	aas    
  418eef:	jmp    0x6c90:0xd5f424df
  418ef6:	inc    ecx
  418ef7:	pop    ebp
  418ef8:	aas    
  418ef9:	hlt    
  418efa:	stos   BYTE PTR es:[edi],al
  418efb:	neg    DWORD PTR es:[eax+ebx*2+0x51]
  418f00:	push   edx
  418f01:	dec    ebx
  418f02:	js     0x418ee0
  418f04:	pop    ss
  418f05:	mov    cl,0xe9
  418f07:	stc    
  418f08:	imul   edx,DWORD PTR [esi-0x5f23e640],0xbfc57774
  418f12:	and    ecx,esi
  418f14:	cli    
  418f15:	xchg   DWORD PTR [ecx+eax*8],ebx
  418f18:	das    
  418f19:	jge    0x418ef6
  418f1b:	leave  
  418f1c:	loop   0x418eae
  418f1e:	push   0x787e01e3
  418f23:	(bad)  
  418f25:	retf   
  418f26:	lds    edx,FWORD PTR [ebx+0x58047d04]
  418f2c:	mov    bl,0x0
  418f2e:	inc    ecx
  418f2f:	adc    BYTE PTR [ecx+0x37b2e5e],dh
  418f35:	jmp    0x7019ebda
  418f3a:	mov    BYTE PTR [esp+edi*1+0x69],dl
  418f3e:	stos   BYTE PTR es:[edi],al
  418f3f:	push   esi
  418f40:	mov    eax,0x9e51eeeb
  418f45:	xchg   edi,eax
  418f46:	icebp  
  418f47:	(bad)  
  418f48:	jmp    0xd83d211b
  418f4d:	xor    eax,DWORD PTR [ebx+ebx*2]
  418f50:	mov    ecx,0xc0a8afbd
  418f55:	jge    0x418f33
  418f57:	push   ebx
  418f58:	loop   0x418f7e
  418f5a:	dec    esp
  418f5b:	int    0x19
  418f5d:	outs   dx,BYTE PTR ds:[esi]
  418f5e:	jo     0x418f8d
  418f60:	rcl    al,cl
  418f62:	call   0xf318:0xcfe351db
  418f69:	pop    es
  418f6a:	js     0x418f67
  418f6c:	shl    BYTE PTR [ebx+0xc75ada],0x16
  418f73:	adc    eax,0x473c0072
  418f78:	sti    
  418f79:	push   edx
  418f7a:	mov    bh,0x7d
  418f7c:	in     al,0x2b
  418f7e:	pusha  
  418f7f:	scas   al,BYTE PTR es:[edi]
  418f80:	push   ebp
  418f81:	mov    eax,0xc937b8e9
  418f86:	ror    BYTE PTR [edx],0xed
  418f89:	ins    DWORD PTR es:[edi],dx
  418f8a:	dec    BYTE PTR ds:0x71b4183c
  418f90:	sub    DWORD PTR [edi+0x75],ecx
  418f93:	sub    al,0x9d
  418f95:	xchg   edx,eax
  418f96:	and    dl,BYTE PTR [ebx-0x4842c2ca]
  418f9c:	pop    ebx
  418f9d:	sbb    al,0xb0
  418f9f:	stos   DWORD PTR es:[edi],eax
  418fa0:	dec    eax
  418fa1:	in     eax,0x74
  418fa3:	jp     0x418f74
  418fa5:	dec    edx
  418fa6:	scas   al,BYTE PTR es:[edi]
  418fa7:	cdq    
  418fa8:	mov    eax,0x4d2d9431
  418fad:	(bad)  
  418fae:	jl     0x418fbb
  418fb0:	fcmovu st,st(0)
  418fb2:	adc    al,BYTE PTR [edx-0x27]
  418fb5:	pop    ecx
  418fb6:	jnp    0x418f5b
  418fb8:	xchg   DWORD PTR [ebx+ebx*1],esp
  418fbb:	(bad)  
  418fbc:	jmp    0xd1f6:0x4ce9da22
  418fc3:	lock mov al,ds:0x47977253
  418fc9:	push   0xffffffc8
  418fcb:	cli    
  418fcc:	add    BYTE PTR [eax],cl
  418fce:	jmp    0x418fa3
  418fd0:	and    eax,0x4860ccf1
  418fd5:	stos   BYTE PTR es:[edi],al
  418fd6:	pop    edi
  418fd7:	pop    edi
  418fd8:	pop    ds
  418fd9:	lea    eax,es:[eax-0x5e07f4cd]
  418fe0:	cmp    BYTE PTR [ecx],al
  418fe2:	scas   eax,DWORD PTR es:[edi]
  418fe3:	adc    bh,BYTE PTR [ebx+0x3f]
  418fe6:	pop    ebx
  418fe7:	inc    esi
  418fe8:	inc    ebx
  418fe9:	add    DWORD PTR [edx],eax
  418feb:	mov    al,0x90
  418fed:	imul   ecx,DWORD PTR [eax+0x19aa516b],0xf8bfad9f
  418ff7:	aas    
  418ff8:	dec    ecx
  418ff9:	pop    ecx
  418ffa:	fpatan 
  418ffc:	fcomp  QWORD PTR [ebp-0x2641f497]
  419002:	sbb    edx,DWORD PTR [ebp-0x39]
  419005:	push   ss
  419006:	xchg   edx,eax
  419007:	xlat   BYTE PTR ds:[ebx]
  419008:	add    eax,0x90344925
  41900d:	mov    cl,0x77
  41900f:	push   ebx
  419010:	mov    al,0xef
  419012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419013:	pushf  
  419014:	jmp    0x412f:0x5813c420
  41901b:	hlt    
  41901c:	rcl    ebx,0xe2
  41901f:	addr16 inc esp
  419021:	ja     0x418fe2
  419023:	jnp    0x41906e
  419025:	scas   eax,DWORD PTR es:[edi]
  419026:	fidivr DWORD PTR [edx]
  419028:	mov    bh,0xc8
  41902a:	xlat   BYTE PTR ds:[ebx]
  41902b:	xchg   esi,eax
  41902c:	ins    BYTE PTR es:[edi],dx
  41902d:	in     al,dx
  41902e:	xchg   esp,eax
  41902f:	sub    cl,BYTE PTR [edi-0x1d]
  419032:	mov    edx,?
  419034:	xchg   edi,eax
  419035:	scas   al,BYTE PTR es:[edi]
  419036:	xchg   ecx,eax
  419037:	pusha  
  419038:	xchg   edi,eax
  419039:	inc    ecx
  41903a:	mov    al,ds:0xc4403a94
  41903f:	aam    0xe0
  419041:	daa    
  419042:	xchg   edx,eax
  419043:	mov    cl,0x69
  419045:	hlt    
  419046:	sub    DWORD PTR [eax-0x79],esi
  419049:	mov    ss,edx
  41904b:	dec    ebp
  41904c:	popf   
  41904d:	call   FWORD PTR [eax+0x57]
  419050:	stos   BYTE PTR es:[edi],al
  419051:	xor    BYTE PTR [edx-0x1a7f40c8],al
  419057:	jge    0x419019
  419059:	aad    0x3a
  41905b:	clc    
  41905c:	leave  
  41905d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41905e:	shl    DWORD PTR [edi-0x40f4b441],cl
  419064:	cld    
  419065:	call   0xa7e9:0xf74a5e85
  41906c:	(bad)  [ebx-0x5ccc5deb]
  419072:	push   ds
  419073:	scas   eax,DWORD PTR es:[edi]
  419074:	mov    dh,0x6b
  419076:	jns    0x4190eb
  419078:	pop    ecx
  419079:	add    bh,al
  41907b:	mov    eax,ds:0xdaf1a901
  419080:	retf   
  419081:	adc    edx,ebx
  419083:	dec    eax
  419084:	or     cl,ah
  419086:	xchg   DWORD PTR [edx],eax
  419088:	sub    DWORD PTR [esi+0x4b],ecx
  41908b:	inc    esp
  41908c:	(bad)  
  41908d:	push   eax
  41908e:	sub    DWORD PTR [esi-0x25],ecx
  419091:	or     al,0xf2
  419093:	add    DWORD PTR [edx-0x2b],ecx
  419096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419097:	rol    DWORD PTR [edx-0x43],0xb0
  41909b:	dec    edi
  41909c:	pop    es
  41909d:	ret    0xaf07
  4190a0:	ins    DWORD PTR es:[edi],dx
  4190a1:	stos   BYTE PTR es:[edi],al
  4190a2:	pop    ebp
  4190a3:	xor    bl,BYTE PTR [esp+ebx*1+0x270e3355]
  4190aa:	adc    cl,BYTE PTR [eax]
  4190ac:	(bad)  
  4190ae:	ja     0x41903d
  4190b0:	outs   dx,DWORD PTR ds:[esi]
  4190b1:	std    
  4190b2:	popf   
  4190b3:	std    
  4190b4:	(bad)  
  4190b5:	out    dx,eax
  4190b6:	(bad)  
  4190b7:	sbb    edi,ecx
  4190b9:	leave  
  4190ba:	adc    eax,0x89339f32
  4190bf:	outs   dx,BYTE PTR ds:[esi]
  4190c0:	push   edx
  4190c1:	(bad)  
  4190c2:	sub    BYTE PTR [esi],al
  4190c4:	add    eax,0x46523916
  4190c9:	in     eax,dx
  4190ca:	mov    ebx,DWORD PTR [esi]
  4190cc:	xchg   DWORD PTR [edi],ecx
  4190ce:	mov    BYTE PTR [ebp-0xac3fcc0],dl
  4190d4:	mov    BYTE PTR [esi],bl
  4190d6:	jmp    0x56b3:0x48ecd8fa
  4190dd:	sbb    BYTE PTR [ebx+0x51cb52d1],cl
  4190e3:	mov    ecx,esp
  4190e5:	neg    BYTE PTR [edi+0x48]
  4190e8:	mov    esi,DWORD PTR [esi-0x13cf6d0]
  4190ee:	icebp  
  4190ef:	repz or dl,BYTE PTR [edx]
  4190f2:	test   eax,0xd368c5ba
  4190f7:	mov    esi,0xfc6a4a6e
  4190fc:	adc    esp,DWORD PTR [ebp+0x2]
  4190ff:	pusha  
  419100:	inc    esi
  419101:	daa    
  419102:	cdq    
  419103:	icebp  
  419104:	pushf  
  419105:	aam    0xa
  419107:	xor    ebp,DWORD PTR [edi]
  419109:	sar    eax,1
  41910b:	shl    BYTE PTR [si+0x5c],0x63
  419110:	int3   
  419111:	iret   
  419112:	jg     0x41911f
  419114:	pop    esp
  419115:	div    DWORD PTR [edx]
  419117:	jecxz  0x4190fe
  419119:	inc    ebp
  41911a:	jno    0x4190eb
  41911c:	pop    esi
  41911d:	mov    eax,ds:0xa0f40324
  419122:	pushf  
  419123:	dec    eax
  419124:	push   esi
  419125:	mov    DWORD PTR [eax],edx
  419127:	add    BYTE PTR [edx-0x2e3bb6f4],ah
  41912d:	cmp    ebp,eax
  41912f:	mov    al,ds:0x9aaac361
  419134:	push   esp
  419135:	lds    edx,FWORD PTR [ebp+0x2]
  419138:	iret   
  419139:	xchg   DWORD PTR [edi+ecx*8+0x6b609b07],edx
  419140:	inc    eax
  419141:	jmp    0x12624739
  419146:	data16 mov WORD PTR [esi-0x42],ds
  41914a:	dec    ebp
  41914b:	nop
  41914c:	and    DWORD PTR [esi-0x1a],0xffffffd6
  419150:	ret    0xfdba
  419153:	lahf   
  419154:	fwait
  419155:	push   0xffffffd2
  419157:	push   ds
  419158:	mov    eax,ds:0x123c5443
  41915d:	scas   al,BYTE PTR es:[edi]
  41915e:	cmc    
  41915f:	aaa    
  419160:	push   0x5b
  419162:	outs   dx,BYTE PTR ds:[esi]
  419163:	ja     0x419128
  419165:	fidiv  DWORD PTR [edi-0xc]
  419168:	xchg   ebx,eax
  419169:	cld    
  41916a:	dec    ebp
  41916b:	add    al,0xac
  41916d:	sbb    esi,eax
  41916f:	test   eax,0xf588b13b
  419174:	mov    edi,0xcaaad6fa
  419179:	push   ss
  41917a:	std    
  41917b:	sbb    bh,BYTE PTR [edx-0x33500c58]
  419181:	aas    
  419182:	ins    DWORD PTR es:[edi],dx
  419183:	xor    al,BYTE PTR cs:[eax]
  419186:	cld    
  419187:	sbb    BYTE PTR [ecx-0x5f097fa4],bl
  41918d:	les    ecx,FWORD PTR [ebx-0x6a]
  419190:	jl     0x419163
  419192:	sub    al,0xe7
  419194:	dec    ecx
  419195:	inc    esi
  419196:	mov    cl,0xa9
  419198:	les    edx,FWORD PTR [edi+0x61]
  41919b:	aaa    
  41919c:	or     al,0x44
  41919e:	or     esi,DWORD PTR [esp+edi*8]
  4191a1:	xchg   esp,eax
  4191a2:	push   esp
  4191a3:	test   al,0xa3
  4191a5:	push   edx
  4191a6:	push   0xffffffa9
  4191a8:	mov    cl,0x99
  4191aa:	je     0x4191de
  4191ac:	scas   al,BYTE PTR es:[edi]
  4191ad:	push   ebx
  4191ae:	scas   al,BYTE PTR es:[edi]
  4191af:	or     BYTE PTR [esi+eiz*1-0x1d],dl
  4191b3:	stos   DWORD PTR es:[edi],eax
  4191b4:	shr    esp,0x5a
  4191b7:	push   edx
  4191b8:	(bad)
  4191bb:	pop    ebx
  4191bc:	xor    BYTE PTR [esi-0x25],dh
  4191bf:	jbe    0x4191c1
  4191c1:	fbld   TBYTE PTR [esi-0x3bd2f413]
  4191c7:	jmp    0x4ebf:0x840a80a2
  4191ce:	inc    ebx
  4191cf:	scas   al,BYTE PTR es:[edi]
  4191d0:	sub    eax,0x45a87eff
  4191d5:	cmp    bl,ch
  4191d7:	fadd   DWORD PTR [ebx+0x183311d6]
  4191dd:	add    al,bh
  4191df:	lds    edx,FWORD PTR [esi+ecx*8+0x62]
  4191e3:	loop   0x4191ce
  4191e5:	rol    bh,1
  4191e7:	into   
  4191e8:	addr16 dec ecx
  4191ea:	out    dx,al
  4191eb:	dec    esi
  4191ec:	icebp  
  4191ed:	popf   
  4191ee:	push   0xffffff8c
  4191f0:	shl    ebp,0xde
  4191f3:	push   ebp
  4191f4:	pop    esp
  4191f5:	fst    DWORD PTR [eax+0x2f]
  4191f8:	push   edx
  4191f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fa:	adc    ch,BYTE PTR [edx+0x58]
  4191fd:	xor    dh,al
  4191ff:	cli    
  419200:	out    0x3b,al
  419202:	inc    esp
  419203:	sub    esp,ebx
  419205:	sub    DWORD PTR [esi+ebx*4+0x23baa2e0],ecx
  41920c:	sub    eax,0xe47d4a86
  419211:	ins    BYTE PTR es:[edi],dx
  419212:	sbb    DWORD PTR [esi],esp
  419214:	icebp  
  419215:	inc    esi
  419216:	push   es
  419217:	cdq    
  419218:	stc    
  419219:	dec    esp
  41921a:	push   esp
  41921b:	adc    ecx,ecx
  41921d:	(bad)  
  41921e:	sub    bh,BYTE PTR [esi+0x33c7708d]
  419224:	xchg   DWORD PTR [esp+eiz*2],ecx
  419227:	adc    dl,BYTE PTR [edx]
  419229:	pop    ds
  41922a:	inc    eax
  41922b:	out    dx,eax
  41922c:	jbe    0x419226
  41922e:	push   bp
  419230:	cs jnp 0x419214
  419233:	sub    DWORD PTR [edx+0x375feaa8],edi
  419239:	fnstenv [edx-0x540698de]
  41923f:	outs   dx,DWORD PTR ds:[esi]
  419240:	sbb    DWORD PTR [ebx-0x27684939],ecx
  419246:	or     DWORD PTR ds:0x91e30053,0xffffffc4
  41924d:	pusha  
  41924e:	outs   dx,BYTE PTR ds:[esi]
  41924f:	idiv   dh
  419251:	call   0xfcec:0xe6932072
  419258:	sbb    BYTE PTR [edi-0x4e],0x18
  41925c:	ja     0x4191f9
  41925e:	cli    
  41925f:	mov    ebp,0x119765f5
  419264:	add    BYTE PTR [ebx],ch
  419266:	retf   
  419267:	jo     0x4192d9
  419269:	sub    eax,0x7f27c92e
  41926e:	pushf  
  41926f:	ror    DWORD PTR [ecx],cl
  419271:	jle    0x4191f3
  419273:	fldenv [ecx]
  419275:	or     edx,DWORD PTR [esi]
  419277:	test   eax,0x82f8ebc0
  41927c:	mov    ecx,fs
  41927e:	xchg   DWORD PTR [edi-0x21],eax
  419281:	xor    ebx,ebp
  419283:	mov    dh,0x3
  419285:	jmp    0xdf57989
  41928a:	ficomp WORD PTR [ecx+0x3335d4c9]
  419290:	enter  0x4d89,0x8
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xd6
  4192cc:	stos   DWORD PTR es:[edi],eax
  4192cd:	pop    ecx
  4192ce:	xchg   ecx,eax
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0x47fb2168],0xffffffc3
  4192dc:	sbb    al,0x1c
  4192de:	jmp    0xe00fff89
  4192e3:	cmp    DWORD PTR [ebp+0x2e9e857c],ebx
  4192e9:	sub    al,0x98
  4192eb:	and    BYTE PTR [ecx],al
  4192ed:	es ss inc ecx
  4192f1:	mul    BYTE PTR [edi]
  4192f3:	pop    edi
  4192f4:	xchg   esp,eax
  4192f5:	pop    esp
  4192f6:	cmp    eax,0x5bf04026
  4192fb:	addr16 push 0x3e
  4192fe:	shl    DWORD PTR [eax+eiz*4],0x35
  419302:	cmp    al,0xb1
  419304:	es not dl
  419307:	cmp    ah,BYTE PTR [edi+0x36b0496c]
  41930d:	dec    esp
  41930e:	inc    ecx
  41930f:	push   edi
  419310:	mov    bh,0xb0
  419312:	xchg   ebp,eax
  419313:	sbb    cl,dl
  419315:	sbb    eax,DWORD PTR [ebp+0x8]
  419318:	mul    BYTE PTR [edi-0x10c2f21]
  41931e:	pop    ebp
  41931f:	hlt    
  419320:	jne    0x419325
  419322:	(bad)  
  419323:	sbb    eax,0xadb8ec38
  419328:	inc    eax
  419329:	sbb    bh,bh
  41932b:	aas    
  41932c:	es daa 
  41932e:	setg   BYTE PTR [eax+edx*8+0x28]
  419333:	fbld   TBYTE PTR [edx+0x5a]
  419336:	in     eax,0xfa
  419338:	lea    ebp,[ebp+ebp*8+0x23fcdef0]
  41933f:	dec    eax
  419340:	test   al,dl
  419342:	dec    esp
  419343:	out    dx,eax
  419344:	mov    eax,0x9e77eb6c
  419349:	mov    DWORD PTR [edi+edx*8],edi
  41934c:	call   0xcc75:0xc8dd31b5
  419353:	xlat   BYTE PTR ds:[ebx]
  419354:	lea    edi,[edi-0x6b]
  419357:	mov    eax,0xf01e5c74
  41935c:	lahf   
  41935d:	mov    edx,0x2b5d6fd2
  419362:	mul    DWORD PTR [ecx+ebp*8-0x1540ea69]
  419369:	pop    ecx
  41936a:	sar    BYTE PTR [ebp-0x7b],0x69
  41936e:	jmp    0x41937b
  419370:	popf   
  419371:	adc    al,0x86
  419373:	xor    DWORD PTR [edi+0x3adf4309],ecx
  419379:	loopne 0x4193d5
  41937b:	jns    0x4193b8
  41937d:	test   BYTE PTR [ebp-0x2d],ah
  419380:	adc    bl,0x57
  419383:	fcmovb st,st(1)
  419385:	jns    0x4193f5
  419387:	sub    esp,DWORD PTR ds:0xf84d6085
  41938d:	inc    esi
  41938e:	les    eax,FWORD PTR [ebx+0x5d]
  419391:	xchg   BYTE PTR [ebx+edx*8-0xa],ch
  419395:	dec    ebx
  419396:	mov    ebp,0xf2799f89
  41939b:	mul    DWORD PTR [edi-0x65]
  41939e:	in     al,0x17
  4193a0:	lds    edx,FWORD PTR [eax+0x5e]
  4193a3:	sahf   
  4193a4:	sti    
  4193a5:	xchg   esp,eax
  4193a6:	icebp  
  4193a7:	(bad)  
  4193a9:	mov    al,ds:0xdfd9be1c
  4193ae:	push   0xffffffca
  4193b0:	mov    ecx,0xb994fb3d
  4193b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b6:	pop    ds
  4193b7:	das    
  4193b8:	ja     0x4193c2
  4193ba:	int3   
  4193bb:	mov    eax,0xb3474e7
  4193c0:	pop    edx
  4193c1:	out    dx,al
  4193c2:	repz icebp 
  4193c4:	inc    esi
  4193c5:	push   esi
  4193c6:	retf   0x9bfb
  4193c9:	inc    ebp
  4193ca:	jb     0x419397
  4193cc:	sbb    ecx,ecx
  4193ce:	(bad)  
  4193cf:	std    
  4193d0:	mov    eax,0xc7d5422b
  4193d5:	cmp    edi,ebx
  4193d7:	repnz push edi
  4193d9:	enter  0xd6a4,0x48
  4193dd:	ss push esp
  4193df:	(bad)
  4193e3:	(bad)  
  4193e4:	adc    edi,ebx
  4193e6:	xlat   BYTE PTR ds:[ebx]
  4193e7:	xlat   BYTE PTR ds:[ebx]
  4193e8:	mov    ds:0x1fe76d2d,eax
  4193ed:	aaa    
  4193ee:	call   0x70e7:0x21ae8f10
  4193f5:	add    dh,dl
  4193f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193f8:	mov    ecx,0xba819f63
  4193fd:	sbb    ch,BYTE PTR [ebx-0x11b0e099]
  419403:	nop
  419404:	je     0x419429
  419406:	fs hlt 
  419408:	gs pop esi
  41940a:	sti    
  41940b:	lahf   
  41940c:	pop    es
  41940d:	xchg   ecx,eax
  41940e:	inc    esp
  41940f:	ss dec ebp
  419411:	sub    eax,0x6eb11de
  419416:	imul   ebx,DWORD PTR [ebp-0x26],0xa6781a8d
  41941d:	xchg   ebp,eax
  41941e:	xchg   ebp,eax
  41941f:	scas   al,BYTE PTR es:[edi]
  419420:	retf   0xd6b9
  419423:	or     bl,BYTE PTR [esi-0x9630b9f]
  419429:	sub    eax,0x35592769
  41942e:	rol    BYTE PTR [eax-0x36],0x66
  419432:	ret    
  419433:	xor    ah,BYTE PTR [edi]
  419435:	mov    edi,0x64ddb7a4
  41943a:	cdq    
  41943b:	jl     0x4193eb
  41943d:	js     0x4194aa
  41943f:	(bad)  
  419440:	lea    ebx,[edx]
  419442:	pop    esp
  419443:	in     eax,dx
  419444:	sti    
  419445:	pop    es
  419446:	push   es
  419447:	sbb    eax,0xd8836735
  41944c:	pushw  cs
  41944e:	add    BYTE PTR [esi-0x2c],dl
  419451:	loopne 0x419464
  419453:	in     eax,0xc8
  419455:	js     0x4193d8
  419457:	in     al,dx
  419458:	cmp    al,dh
  41945a:	call   0xde214970
  41945f:	or     edi,DWORD PTR [esi+0x717ade75]
  419465:	add    al,0x45
  419467:	test   eax,0xa80ad777
  41946c:	push   es
  41946d:	test   ecx,0xdca5345f
  419473:	xlat   BYTE PTR ds:[ebx]
  419474:	cli    
  419475:	imul   esp,DWORD PTR [edi+0x4e],0xe65f1774
  41947c:	(bad)  
  41947d:	pop    ebp
  41947e:	and    eax,0xba1b98c
  419483:	test   BYTE PTR [edi+0x40bad76b],ch
  419489:	test   DWORD PTR [ebx],esp
  41948b:	push   esp
  41948c:	ror    DWORD PTR [edi],1
  41948e:	or     al,BYTE PTR [edx]
  419490:	jg     0x4194ae
  419492:	and    al,0x7
  419494:	loop   0x419456
  419496:	jg     0x4194f2
  419498:	sbb    eax,esp
  41949a:	call   0x478b:0x1582f67f
  4194a1:	aad    0x5d
  4194a3:	repnz jecxz 0x419443
  4194a6:	inc    ebx
  4194a7:	shl    BYTE PTR [eax+0x260377d3],cl
  4194ad:	(bad)  
  4194ae:	fistp  QWORD PTR [edx]
  4194b0:	adc    BYTE PTR [esi],ah
  4194b2:	ja     0x419461
  4194b4:	aad    0x3
  4194b6:	test   eax,0xca949258
  4194bb:	ret    
  4194bc:	scas   eax,DWORD PTR es:[edi]
  4194bd:	retf   0x3a28
  4194c0:	bound  eax,QWORD PTR [eax]
  4194c2:	fmul   DWORD PTR [eax]
  4194c4:	jmp    0x7c07:0x7aecc18
  4194cb:	sbb    eax,0x30c9280c
  4194d0:	lods   eax,DWORD PTR ds:[esi]
  4194d1:	sub    eax,0x7239383e
  4194d6:	cmp    eax,ebp
  4194d8:	xchg   ebx,eax
  4194d9:	inc    edx
  4194da:	inc    ecx
  4194db:	xor    DWORD PTR [edx-0x31],edi
  4194de:	pop    ds
  4194df:	fadd   QWORD PTR [eax]
  4194e1:	xor    BYTE PTR [esi+0xf],cl
  4194e4:	in     eax,dx
  4194e5:	jecxz  0x419559
  4194e7:	jb     0x41955d
  4194e9:	mov    ds:0xf8434960,al
  4194ee:	mov    dl,0x8
  4194f0:	jecxz  0x4194c6
  4194f2:	das    
  4194f3:	adc    cl,ah
  4194f5:	add    al,0x4b
  4194f7:	mov    bl,0x76
  4194f9:	aaa    
  4194fa:	aam    0x91
  4194fc:	inc    ecx
  4194fd:	enter  0x17eb,0x83
  419501:	dec    ecx
  419502:	jo     0x419541
  419504:	mov    WORD PTR [edi+0x3f],cs
  419507:	sti    
  419508:	lea    ecx,[esi+esi*8]
  41950b:	xchg   esi,eax
  41950c:	clc    
  41950d:	js     0x419514
  41950f:	xor    al,0xee
  419511:	mov    eax,0xd79c927a
  419516:	arpl   WORD PTR [ecx*4-0x17a5de6e],bp
  41951d:	push   cs
  41951e:	dec    ebx
  41951f:	stc    
  419520:	and    DWORD PTR [eax+0x21a4d83e],ecx
  419526:	and    ecx,esp
  419528:	pop    ds
  419529:	pop    esp
  41952a:	or     ah,cl
  41952c:	or     edi,DWORD PTR [eax-0x9]
  41952f:	fwait
  419530:	pop    eax
  419531:	(bad)  
  419532:	in     eax,0x22
  419534:	inc    edi
  419535:	sbb    BYTE PTR [edi+0x736024ba],dh
  41953b:	xchg   ecx,eax
  41953c:	and    eax,0xf86d6e2a
  419541:	jno    0x419598
  419543:	ret    
  419544:	mov    ch,0x35
  419546:	sti    
  419547:	test   eax,0x5eb15d3d
  41954c:	lds    ebx,FWORD PTR [ebp+0x61]
  41954f:	lods   eax,DWORD PTR ds:[esi]
  419550:	leave  
  419551:	push   ebx
  419552:	not    ecx
  419554:	jno    0x4195b6
  419556:	push   es
  419557:	retf   0x547c
  41955a:	arpl   WORD PTR [edx+0x12fba28],sp
  419560:	fidiv  DWORD PTR [edx+0x7650c01d]
  419566:	push   edi
  419567:	shl    cl,0x44
  41956a:	neg    BYTE PTR [ebx-0x549094d8]
  419570:	push   eax
  419571:	push   ss
  419572:	mov    ah,0xfb
  419574:	cmp    BYTE PTR [ebx+0x5f1771f],0x47
  41957b:	mov    eax,0x4505bdc6
  419580:	or     al,0x96
  419582:	xor    BYTE PTR [ebp-0x10],cl
  419585:	jmp    0x4195ad
  419587:	and    al,BYTE PTR [ebp+0x2c]
  41958a:	sbb    BYTE PTR [ebx-0x2a],bh
  41958d:	ror    DWORD PTR [edx+0x62],cl
  419590:	test   ebx,ebx
  419592:	sub    edi,DWORD PTR [ecx+0x28]
  419595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419596:	mov    edx,0xd41f878b
  41959b:	jo     0x41955f
  41959d:	(bad)  
  41959e:	cdq    
  41959f:	inc    esi
  4195a0:	loopne 0x419613
  4195a2:	inc    edx
  4195a3:	jne    0x41957e
  4195a5:	rcr    BYTE PTR [ecx],cl
  4195a7:	shr    DWORD PTR ds:0x1801498e,cl
  4195ad:	add    al,0x52
  4195af:	add    dh,dh
  4195b1:	bound  ebx,QWORD PTR [edx+0x64]
  4195b4:	jae    0x4195ec
  4195b6:	jmp    0x4195df
  4195b8:	outs   dx,DWORD PTR ds:[esi]
  4195b9:	and    eax,0x78ee0354
  4195be:	xor    ebx,ebx
  4195c0:	mov    ch,0x69
  4195c2:	lods   al,BYTE PTR ds:[esi]
  4195c3:	call   0x507bc914
  4195c8:	in     eax,dx
  4195c9:	jo     0x41961e
  4195cb:	inc    eax
  4195cc:	sub    eax,0x24e30078
  4195d1:	inc    ebp
  4195d2:	inc    edx
  4195d3:	jmp    DWORD PTR [ecx-0x7a]
  4195d6:	mov    ah,0x6b
  4195d8:	sub    ebx,DWORD PTR [ebx]
  4195da:	pop    ebp
  4195db:	add    DWORD PTR [ebp-0x4a97e311],edx
  4195e1:	cmp    eax,0x24e2bbe6
  4195e6:	call   0xbec2:0x46d5a3e8
  4195ed:	fs sub al,0x7c
  4195f0:	xchg   ebp,eax
  4195f1:	or     DWORD PTR [esi+0x1c],esp
  4195f4:	mov    bl,0xb5
  4195f6:	inc    ebx
  4195f7:	mov    ah,0xfd
  4195f9:	rol    DWORD PTR [edi+esi*8-0xc2585d6],1
  419600:	or     BYTE PTR [edi+0x710a36e2],cl
  419606:	xlat   BYTE PTR ds:[ebx]
  419607:	rcr    DWORD PTR [esi-0x5f],cl
  41960a:	xor    BYTE PTR [ebx],dh
  41960c:	push   esp
  41960d:	mov    cs,WORD PTR [ebp-0x14]
  419610:	sbb    ebp,DWORD PTR [ecx+0x12b91bf8]
  419616:	not    BYTE PTR [edx]
  419618:	ret    
  419619:	jo     0x41964c
  41961b:	test   eax,0xd4b57ebc
  419620:	scas   eax,DWORD PTR es:[edi]
  419621:	test   DWORD PTR ds:0x4ac589d4,0x68067fff
  41962b:	dec    ecx
  41962c:	not    DWORD PTR [edi]
  41962e:	popf   
  41962f:	dec    ecx
  419630:	clc    
  419631:	push   ds
  419632:	fld    QWORD PTR [eax+0x3134117b]
  419638:	lods   al,BYTE PTR ds:[esi]
  419639:	mov    ebp,esp
  41963b:	fnstcw WORD PTR [eax+0x707cbc95]
  419641:	and    DWORD PTR [edx+0x760ffcce],eax
  419647:	adc    eax,0x67f81a16
  41964c:	inc    edi
  41964d:	retf   0xb6b0
  419650:	(bad)  
  419651:	daa    
  419652:	and    dl,bl
  419654:	cld    
  419655:	xchg   edi,eax
  419656:	dec    esi
  419657:	repz into 
  419659:	mov    dh,0xb3
  41965b:	cmp    DWORD PTR [ecx+0x73737e87],0xf4983cd3
  419665:	dec    edx
  419666:	loopne 0x4195f8
  419668:	mov    edi,0xa394ade8
  41966d:	sbb    eax,0xf20c816
  419672:	std    
  419673:	icebp  
  419674:	rcl    BYTE PTR [ebp-0x17],0xb4
  419678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419679:	stc    
  41967a:	or     eax,0xe3e51399
  41967f:	jo     0x41967f
  419681:	mov    ah,0xfb
  419683:	mov    eax,ds:0x342bf17b
  419688:	(bad)  
  41968a:	bound  ecx,QWORD PTR [esp+esi*4-0x46]
  41968e:	repz sbb eax,0x5ec48b62
  419694:	retf   0xb373
  419697:	(bad)  
  419698:	inc    ecx
  419699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41969a:	mov    edi,0x7c2ea713
  41969f:	or     al,0x24
  4196a1:	inc    edi
  4196a2:	push   ds
  4196a3:	mov    ah,0x73
  4196a5:	and    al,0xa6
  4196a7:	fcom   QWORD PTR [eax+0x29715aae]
  4196ad:	push   esp
  4196ae:	jbe    0x4196e6
  4196b0:	mov    al,ds:0x745f09a4
  4196b5:	mov    al,0xa4
  4196b7:	ins    BYTE PTR es:[edi],dx
  4196b8:	adc    DWORD PTR [edi-0x6],edx
  4196bb:	and    cl,BYTE PTR [edi+eiz*2+0x739d02ea]
  4196c2:	sti    
  4196c3:	mov    ds:0xd25ebcd1,al
  4196c8:	repnz mov al,0xb5
  4196cb:	test   eax,0x5759a4d1
  4196d0:	call   0xfae7:0xf9a39d28
  4196d7:	jmp    0x4196b6
  4196d9:	push   edx
  4196da:	push   esi
  4196db:	mov    ch,0xd2
  4196dd:	dec    ebx
  4196de:	out    dx,eax
  4196df:	xchg   esp,eax
  4196e0:	nop
  4196e1:	push   es
  4196e2:	fs aad 0x16
  4196e5:	pop    esp
  4196e6:	adc    eax,0xd5525eab
  4196eb:	div    ebx
  4196ed:	pop    es
  4196ee:	inc    edx
  4196ef:	lea    eax,[ecx]
  4196f1:	dec    esp
  4196f2:	retf   
  4196f3:	adc    DWORD PTR [eax+0x7d117954],ecx
  4196f9:	xchg   ecx,eax
  4196fa:	jle    0x4196d0
  4196fc:	inc    esp
  4196fd:	(bad)
  419702:	ja     0x4196af
  419704:	clc    
  419705:	add    al,0x29
  419707:	iret   
  419708:	mov    esp,eax
  41970a:	xchg   ebx,eax
  41970b:	pop    ss
  41970c:	push   esp
  41970d:	inc    eax
  41970e:	dec    eax
  41970f:	dec    esp
  419710:	bound  esp,QWORD PTR [ecx]
  419712:	aaa    
  419713:	push   ds
  419714:	pop    ecx
  419715:	leave  
  419716:	mov    edx,0xd66e3d85
  41971b:	lds    eax,FWORD PTR [eax]
  41971d:	xor    BYTE PTR ds:0x2422d462,ah
  419723:	mov    ds:0x42b51a1f,al
  419728:	mov    esi,0x8947a92f
  41972d:	jmp    0xde038fa4
  419732:	lods   al,BYTE PTR ds:[esi]
  419733:	mov    ?,edx
  419735:	add    dh,BYTE PTR [ebx+0x545b6e79]
  41973b:	fsubr  QWORD PTR [edi-0x2b]
  41973e:	xor    bh,dl
  419740:	and    edi,ebp
  419742:	lods   al,BYTE PTR ds:[esi]
  419743:	xor    BYTE PTR [eax],0x26
  419746:	stc    
  419747:	(bad)  
  419749:	(bad)  
  41974a:	and    dl,BYTE PTR [edi+0x2742b997]
  419750:	imul   edi,DWORD PTR [ecx+0x71e312f8],0xf2362b7a
  41975a:	or     ebx,edi
  41975c:	mov    al,0x52
  41975e:	ss dec eax
  419760:	(bad)  
  419761:	ja     0x419769
  419763:	cwde   
  419764:	xchg   ebx,eax
  419765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419766:	push   eax
  419767:	xor    eax,0x3e2209a6
  41976c:	mov    esp,0xb135ffb
  419771:	dec    esp
  419772:	jge    0x20ad8f40
  419778:	and    al,0xfe
  41977a:	pop    edx
  41977b:	ror    cl,0xcb
  41977e:	pop    ss
  41977f:	gs shl bl,cl
  419782:	mov    ch,0x55
  419784:	aam    0x40
  419786:	out    dx,eax
  419787:	sbb    dh,BYTE PTR gs:[edx-0x2695a72c]
  41978e:	jmp    0x41974a
  419790:	pushf  
  419791:	pop    ss
  419792:	sub    eax,0xa9851ae3
  419797:	xor    DWORD PTR ds:0x2398f62d,esp
  41979d:	push   ebp
  41979e:	retf   
  41979f:	pop    ds
  4197a0:	loopne 0x419768
  4197a2:	mov    ch,BYTE PTR [ebx]
  4197a4:	mov    ebp,0xc31c9855
  4197a9:	ret    
  4197aa:	fstp   DWORD PTR [ebx]
  4197ac:	data16 (bad) 
  4197ae:	into   
  4197af:	aam    0x65
  4197b1:	inc    ebx
  4197b2:	jecxz  0x41982f
  4197b4:	imul   DWORD PTR [ebx+edi*8+0x55]
  4197b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b9:	sub    eax,0xda3a27c
  4197be:	add    al,0x53
  4197c0:	mov    bl,0xe0
  4197c2:	cmc    
  4197c3:	mov    esp,0xe5b1d2ab
  4197c8:	scas   al,BYTE PTR es:[edi]
  4197c9:	push   eax
  4197ca:	push   edx
  4197cb:	ins    DWORD PTR es:[edi],dx
  4197cc:	pop    ds
  4197cd:	cmp    eax,0x868e1e9d
  4197d2:	test   eax,0xaf654490
  4197d7:	aam    0xa4
  4197d9:	lods   al,BYTE PTR ds:[esi]
  4197da:	mov    al,ds:0x32a96813
  4197df:	xor    BYTE PTR [esi],al
  4197e1:	ss cmc 
  4197e3:	ins    DWORD PTR es:[edi],dx
  4197e4:	loope  0x419816
  4197e6:	sub    esi,DWORD PTR [ebp+0x4258794b]
  4197ec:	test   al,0x80
  4197ee:	mov    al,0x16
  4197f0:	loop   0x419815
  4197f2:	(bad)  
  4197f4:	mov    eax,ds:0xf7f9bf99
  4197f9:	out    dx,eax
  4197fa:	rcr    bl,cl
  4197fc:	lahf   
  4197fd:	mov    ebp,DWORD PTR [esi]
  4197ff:	sbb    BYTE PTR [ecx+0x34add098],cl
  419805:	or     al,0x32
  419807:	scas   al,BYTE PTR es:[edi]
  419808:	mov    ah,0xe0
  41980a:	and    BYTE PTR [ebx+eax*2],dl
  41980d:	xchg   BYTE PTR [esi-0x7c],dl
  419810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419811:	fst    DWORD PTR es:[esi-0x5656e618]
  419818:	add    al,0x6e
  41981a:	sbb    eax,0x85f02d57
  41981f:	mov    dh,0x60
  419821:	enter  0x1eaf,0x5e
  419825:	pop    ss
  419826:	nop    eax
  419829:	lahf   
  41982a:	test   BYTE PTR [edi+0x6f4d6a07],0x85
  419831:	popa   
  419832:	int3   
  419833:	or     DWORD PTR [edx],eax
  419835:	or     dl,cl
  419837:	addr16 mov ebx,0x97c9b605
  41983d:	pushf  
  41983e:	pop    es
  41983f:	ds in  eax,dx
  419841:	jle    0x4197ff
  419843:	or     al,0xc2
  419845:	ror    bh,1
  419847:	mov    bh,0xb5
  419849:	or     BYTE PTR [edx-0x7f],dh
  41984c:	mov    ebx,eax
  41984e:	inc    ebp
  41984f:	idiv   ebp
  419851:	mov    bl,0x7d
  419853:	pop    ebx
  419854:	push   cs
  419855:	pop    ds
  419856:	jns    0x419846
  419858:	data16 cmp bh,dl
  41985b:	lock int 0xb2
  41985e:	scas   eax,DWORD PTR es:[edi]
  41985f:	das    
  419860:	jle    0x4197ef
  419862:	xchg   BYTE PTR [ebx-0x4],al
  419865:	mov    bh,0x9
  419867:	data16 mov ds:0xb672cbe6,al
  41986d:	mov    ?,ebx
  41986f:	mov    dh,0x52
  419871:	or     DWORD PTR [eax-0x37e7e22b],edx
  419877:	add    al,0xdf
  419879:	mov    BYTE PTR [ecx-0x18247064],bh
  41987f:	mov    dl,0x6d
  419881:	push   esi
  419882:	aaa    
  419883:	in     eax,dx
  419884:	inc    edi
  419885:	jmp    0x50d26bac
  41988a:	ja     0x4198d2
  41988c:	sbb    edi,DWORD PTR [edx+esi*4+0xa]
  419890:	pushf  
  419891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419892:	arpl   WORD PTR [eax-0x63],di
  419895:	mov    ecx,esp
  419897:	les    ecx,FWORD PTR [ebp+0x2567e64f]
  41989d:	mov    fs,WORD PTR [eax+0x2]
  4198a0:	sbb    DWORD PTR [ecx+ecx*1+0x67],0x37
  4198a5:	or     dl,BYTE PTR [ebp-0x3aa02a8d]
  4198ab:	mov    eax,edi
  4198ad:	cmp    dh,ah
  4198af:	or     BYTE PTR [ebx],dl
  4198b1:	pop    ebp
  4198b2:	aad    0x16
  4198b4:	adc    ah,dl
  4198b6:	out    0x8c,eax
  4198b8:	(bad)  
  4198ba:	stc    
  4198bb:	fisub  WORD PTR [ebx]
  4198bd:	jnp    0x419857
  4198bf:	pop    ecx
  4198c0:	mov    ds,WORD PTR [ecx+0x2e]
  4198c3:	adc    edi,DWORD PTR [ebx]
  4198c5:	push   es
  4198c6:	ret    0xcb06
  4198c9:	jns    0x419942
  4198cb:	xchg   DWORD PTR [ebx-0x193190d2],esp
  4198d1:	pop    esi
  4198d2:	mov    ds:0xa6751023,al
  4198d7:	push   edi
  4198d8:	push   ds
  4198d9:	cmp    BYTE PTR [edi+0x6],ch
  4198dc:	sahf   
  4198dd:	popa   
  4198de:	call   0x930:0x825a2d77
  4198e5:	js     0x4198b1
  4198e7:	xor    dl,al
  4198e9:	sub    al,0x35
  4198eb:	inc    ecx
  4198ec:	ins    BYTE PTR es:[edi],dx
  4198ed:	int3   
  4198ee:	aad    0xee
  4198f0:	(bad)  
  4198f1:	push   eax
  4198f2:	or     cl,BYTE PTR [eax-0x36]
  4198f5:	fisubr WORD PTR [ecx+ebx*1]
  4198f8:	jae    0x41992e
  4198fa:	add    dl,BYTE PTR [esi+0x4f4cb5d4]
  419900:	pop    esp
  419901:	out    dx,eax
  419902:	xchg   ebp,eax
  419903:	jmp    0x5f16:0xc6fe1fc4
  41990a:	lea    esi,[esi-0x158775de]
  419910:	stc    
  419911:	add    ch,BYTE PTR [ebp+ebx*4-0x4d46810c]
  419918:	and    al,0x6
  41991a:	shl    cl,cl
  41991c:	iret   
  41991d:	and    BYTE PTR [eax+0x21d39235],cl
  419923:	ins    DWORD PTR es:[edi],dx
  419924:	aam    0x55
  419926:	mov    ecx,0x889ddea2
  41992b:	xchg   esi,eax
  41992c:	xor    al,0xd1
  41992e:	std    
  41992f:	fadd   QWORD PTR [ebx+0x39]
  419932:	push   esi
  419933:	mov    ebx,0x5b6be802
  419938:	ror    BYTE PTR [edx+eiz*4+0x4b],1
  41993c:	retf   0x626c
  41993f:	cli    
  419940:	push   0x78f10972
  419945:	pop    edx
  419947:	mov    DWORD PTR [edi-0x320832fb],ecx
  41994d:	xchg   ch,ch
  41994f:	sub    bh,BYTE PTR [eax]
  419951:	jl     0x4199c4
  419953:	aam    0x16
  419955:	pusha  
  419956:	add    ah,BYTE PTR ds:0xf586baf8
  41995c:	nop
  41995d:	popf   
  41995e:	and    DWORD PTR [eax-0x5df63afe],ebp
  419964:	(bad)  
  419965:	pop    ecx
  419966:	scas   al,BYTE PTR es:[edi]
  419967:	and    eax,DWORD PTR [edx+0x61]
  41996a:	xchg   ecx,eax
  41996b:	adc    edi,DWORD PTR [eax]
  41996d:	inc    edi
  41996e:	sub    BYTE PTR [ecx-0x3ae5aa65],bh
  419974:	sbb    ch,al
  419976:	pushf  
  419977:	rcl    BYTE PTR [esi+0x5a5d299c],0xd0
  41997e:	enter  0xacb,0xe7
  419982:	rcl    DWORD PTR [edx+0x72398a28],cl
  419988:	push   ecx
  419989:	cs ds sahf 
  41998c:	aaa    
  41998d:	enter  0x7d0f,0x89
  419991:	pop    edx
  419992:	jle    0x419931
  419994:	lods   al,BYTE PTR ds:[esi]
  419995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419996:	sub    ebx,edi
  419998:	not    DWORD PTR [eax+0xe]
  41999b:	adc    esp,DWORD PTR [edi-0x33e8aeb0]
  4199a1:	cli    
  4199a2:	(bad)  
  4199a3:	fadd   st,st(1)
  4199a5:	call   0xea43:0x9fb05174
  4199ac:	shl    esi,1
  4199ae:	and    al,0x5f
  4199b0:	xchg   esi,eax
  4199b1:	mov    ebp,0x7a7a857c
  4199b6:	mov    bl,0x31
  4199b8:	ins    DWORD PTR es:[edi],dx
  4199b9:	add    al,0x5b
  4199bb:	jge    0x419a39
  4199bd:	dec    ecx
  4199be:	arpl   WORD PTR [ebx-0x21423ecb],cx
  4199c4:	xor    ah,BYTE PTR [ebx-0x1b8a0d20]
  4199ca:	pop    ecx
  4199cb:	mov    gs,eax
  4199cd:	dec    eax
  4199ce:	xchg   DWORD PTR ds:0xf24ad710,ebx
  4199d4:	aam    0x24
  4199d6:	sbb    ecx,edi
  4199d8:	cmc    
  4199d9:	pop    ebp
  4199da:	enter  0x9a60,0xb5
  4199de:	mov    al,ds:0x3067cd7f
  4199e3:	sbb    DWORD PTR [edx],eax
  4199e5:	test   eax,0x7272fdff
  4199ea:	mov    edx,0xf6f42778
  4199ef:	sahf   
  4199f0:	and    al,BYTE PTR [esi-0x61]
  4199f3:	retf   0x587
  4199f6:	out    0x12,al
  4199f8:	adc    DWORD PTR [ecx-0x8b23fd9],esi
  4199fe:	jmp    0x15c3beca
  419a03:	shl    DWORD PTR [edx-0x31d4fbf6],0x3c
  419a0a:	jecxz  0x419a4a
  419a0c:	adc    ebx,esi
  419a0e:	add    esp,DWORD PTR [edi-0x7b5df5a3]
  419a14:	mov    ecx,0xed2b8112
  419a1a:	cmc    
  419a1b:	sub    edi,0x1e
  419a1e:	xor    bh,BYTE PTR [ecx-0x787f292d]
  419a24:	and    eax,0x9b7cb9f1
  419a29:	dec    esi
  419a2a:	daa    
  419a2b:	es ss jbe 0x419aab
  419a2f:	pop    ds
  419a30:	hlt    
  419a31:	add    esp,0x4978a59
  419a37:	aas    
  419a38:	mov    eax,ds:0x5bdc767a
  419a3d:	jmp    0xfb31:0xf0c6f31e
  419a44:	stos   DWORD PTR es:[edi],eax
  419a45:	cmp    edi,eax
  419a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a48:	sbb    DWORD PTR [ebp-0x1f],ebp
  419a4b:	push   ss
  419a4c:	mov    ds:0xd2c86745,eax
  419a51:	jmp    0x419a37
  419a53:	adc    ebx,DWORD PTR [edi-0x3c23048]
  419a59:	and    eax,0x97360bff
  419a5e:	inc    edx
  419a5f:	pop    es
  419a60:	push   ebx
  419a61:	mov    al,ds:0x9e1c673c
  419a66:	jle    0x419ab0
  419a68:	leave  
  419a69:	push   ebx
  419a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a6b:	mov    ch,0x7d
  419a6d:	inc    ebp
  419a6e:	jl     0x419ae9
  419a70:	rcr    BYTE PTR [ecx+eax*1+0x7b],0xff
  419a75:	inc    esi
  419a76:	mov    al,0xf8
  419a78:	(bad)  
  419a79:	jp     0x4199fd
  419a7b:	inc    ecx
  419a7c:	call   0xc423:0x9f026434
  419a83:	push   ebp
  419a84:	xchg   DWORD PTR [ecx+0x29978901],ebp
  419a8a:	in     eax,0xc2
  419a8c:	fistp  QWORD PTR ds:[ebp+0x7250eef9]
  419a93:	in     al,0xd5
  419a95:	ficom  DWORD PTR [ebx+0x53b1cdcb]
  419a9b:	cmp    dl,0xbe
  419a9e:	test   ebx,eax
  419aa0:	adc    cl,BYTE PTR [eax]
  419aa2:	sbb    eax,0x2b82263c
  419aa7:	into   
  419aa8:	call   0x3c25:0x347f486
  419aaf:	mov    ds:0xfabbfaa,eax
  419ab4:	gs pop edx
  419ab6:	pop    es
  419ab7:	dec    al
  419ab9:	mov    ds:0x1bcc04ef,al
  419abe:	mov    edi,0x99eb6936
  419ac3:	cmp    ebx,DWORD PTR [eax]
  419ac5:	das    
  419ac6:	xor    BYTE PTR [ecx-0xc],cl
  419ac9:	adc    eax,0x60001c9f
  419ace:	out    dx,al
  419acf:	ins    BYTE PTR es:[edi],dx
  419ad0:	call   0x25eaafac
  419ad5:	shl    DWORD PTR [esi+0x55],0xe3
  419ad9:	sbb    al,BYTE PTR [ecx+0x3c7f4029]
  419adf:	test   al,0x73
  419ae1:	pop    eax
  419ae2:	cs or  bh,dl
  419ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ae6:	sti    
  419ae7:	enter  0x9f90,0xf2
  419aeb:	fld    TBYTE PTR [edi]
  419aed:	vmovlpd xmm0,xmm6,QWORD PTR [edx+0x3ee90129]
  419af5:	add    BYTE PTR [edi-0x25],0x43
  419af9:	popa   
  419afa:	call   0xb6a4d01f
  419aff:	add    BYTE PTR [edi-0x6d],bl
  419b02:	clc    
  419b03:	push   ss
  419b04:	push   esp
  419b05:	xchg   ebx,eax
  419b06:	pushf  
  419b07:	ss loop 0x419acb
  419b0a:	shl    BYTE PTR cs:[eax-0x78],cl
  419b0e:	sub    ebp,DWORD PTR [ecx-0x3029e51e]
  419b14:	cmp    esp,DWORD PTR [esi+0x5db5502f]
  419b1a:	std    
  419b1b:	mov    dh,0x1a
  419b1d:	sbb    DWORD PTR [eax-0x20],esi
  419b20:	and    eax,0x1eedb301
  419b25:	aaa    
  419b26:	xchg   ebp,eax
  419b27:	mov    ecx,0xe4e5f04e
  419b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b2d:	inc    ecx
  419b2e:	js     0x419b14
  419b30:	popf   
  419b31:	mov    ds:0x3a5ac7e9,eax
  419b36:	pusha  
  419b37:	sub    al,BYTE PTR [eax]
  419b39:	mov    bh,0x88
  419b3b:	cmp    al,0x74
  419b3d:	(bad)
  419b40:	mov    ecx,0x5838b1b0
  419b45:	call   0xeebc:0xc62b6078
  419b4c:	dec    ecx
  419b4d:	dec    edx
  419b4e:	sub    eax,0x263c8958
  419b53:	das    
  419b54:	lods   eax,DWORD PTR ds:[esi]
  419b55:	test   BYTE PTR [esp+esi*2],bl
  419b58:	pop    ecx
  419b59:	lahf   
  419b5a:	sub    ebp,DWORD PTR [edx-0x47]
  419b5d:	test   al,0xd0
  419b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b60:	call   FWORD PTR [eax+0x2acde5e8]
  419b66:	xor    ebx,DWORD PTR [ebp-0x5c9fac5f]
  419b6c:	(bad)  
  419b6d:	mov    BYTE PTR [eax-0x67f87659],0xf9
  419b74:	sub    dh,BYTE PTR ds:0xc395b316
  419b7a:	xchg   DWORD PTR ds:0xf82ddd5a,eax
  419b80:	or     eax,0x44eea29f
  419b85:	push   edx
  419b86:	or     eax,0xef7ec48c
  419b8b:	ss xor esi,ecx
  419b8e:	repz in eax,0x9
  419b91:	ja     0x419beb
  419b93:	xchg   edi,eax
  419b94:	imul   ecx,DWORD PTR [ecx],0xffffff9a
  419b97:	cmp    dl,BYTE PTR [ebp+0x19]
  419b9a:	mov    edi,DWORD PTR [ebp+0x41ffd89e]
  419ba0:	das    
  419ba1:	pop    ebp
  419ba2:	sbb    DWORD PTR [edx],ebp
  419ba4:	and    DWORD PTR [ebx],esp
  419ba6:	cmp    BYTE PTR [ebx-0x4229e451],ah
  419bac:	fdiv   DWORD PTR [ebx]
  419bae:	stos   DWORD PTR es:[edi],eax
  419baf:	push   0x29
  419bb1:	outs   dx,BYTE PTR ds:[esi]
  419bb2:	add    eax,0x36f9b6a1
  419bb7:	pop    es
  419bb8:	pop    edi
  419bb9:	mov    ah,0xa6
  419bbb:	push   ds
  419bbc:	add    al,cl
  419bbe:	adc    eax,0xd1251312
  419bc3:	nop
  419bc4:	inc    ecx
  419bc5:	pushf  
  419bc6:	sar    DWORD PTR [eax+ebp*2-0x4d412adf],1
  419bcd:	jecxz  0x419bfa
  419bcf:	(bad)  
  419bd0:	push   edx
  419bd1:	outs   dx,BYTE PTR ds:[esi]
  419bd2:	sbb    eax,0xfc4bd278
  419bd7:	sbb    DWORD PTR [eax-0x3d6994cd],0xb872b8de
  419be1:	ror    DWORD PTR ds:0xc66495b3,0xaf
  419be8:	cmc    
  419be9:	rol    DWORD PTR [edi],0x6
  419bec:	mov    esp,0x2cf42d83
  419bf1:	ja     0x419b74
  419bf3:	xor    ch,0x76
  419bf6:	dec    ecx
  419bf7:	outs   dx,BYTE PTR ds:[esi]
  419bf8:	mov    DWORD PTR [ebx+edi*4+0x305f2f6a],ecx
  419bff:	add    ah,dh
  419c01:	jno    0x419c20
  419c03:	imul   edx,DWORD PTR [esi+0x1b],0xffffffe7
  419c07:	xchg   edx,eax
  419c08:	idiv   BYTE PTR [edx+0x53]
  419c0b:	add    BYTE PTR [ecx-0x56e1fba],bl
  419c11:	fwait
  419c12:	pushf  
  419c13:	jae    0x419c10
  419c15:	push   ss
  419c16:	cmp    bh,bh
  419c18:	mov    esp,0x7c6c164a
  419c1d:	in     eax,dx
  419c1e:	mov    eax,ecx
  419c20:	imul   esi,esp,0xb5733fdc
  419c26:	jmp    0x419c6d
  419c28:	rol    DWORD PTR [ecx*8+0x5ba931b4],1
  419c2f:	sub    DWORD PTR [esi+edx*1-0x23],edx
  419c33:	or     BYTE PTR [edx],bh
  419c35:	inc    DWORD PTR [esi+ebp*1-0x48]
  419c39:	lock imul esp,DWORD PTR [ebx],0xffffffd5
  419c3d:	xor    al,0x21
  419c3f:	cdq    
  419c40:	je     0x419ca5
  419c42:	mov    ah,0x43
  419c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c45:	lods   al,BYTE PTR ds:[esi]
  419c46:	pop    ecx
  419c47:	aam    0xf9
  419c49:	push   edi
  419c4a:	lods   al,BYTE PTR ds:[esi]
  419c4b:	xor    eax,DWORD PTR [ebx-0x37]
  419c4e:	out    dx,al
  419c4f:	pop    esi
  419c50:	aas    
  419c51:	add    DWORD PTR [ebx+0x4a51bed6],ebp
  419c57:	scas   eax,DWORD PTR es:[edi]
  419c58:	add    BYTE PTR [eax+0x73234d59],0x47
  419c5f:	(bad)  
  419c60:	and    eax,0xb9084c7
  419c65:	mov    ds:0x72c667ae,al
  419c6a:	jae    0x419c1d
  419c6c:	inc    ecx
  419c6d:	(bad)  
  419c6e:	clc    
  419c6f:	push   edi
  419c70:	leave  
  419c71:	mov    ds:0xcb4fe914,eax
  419c76:	or     ecx,0x53
  419c79:	adc    al,0x72
  419c7b:	in     eax,0xea
  419c7d:	push   edx
  419c7e:	mov    eax,0xc42a847
  419c83:	cs mov esp,0x57fc052b
  419c89:	out    dx,eax
  419c8a:	inc    ebp
  419c8b:	jae    0x419c7c
  419c8d:	not    DWORD PTR [edx-0xf9047cb]
  419c93:	loopne 0x419c7d
  419c95:	loope  0x419cbf
  419c97:	mov    DWORD PTR [ebx+eiz*4+0x50],0x6f761968
  419c9f:	pop    ebp
  419ca0:	in     al,dx
  419ca1:	push   edi
  419ca2:	pop    eax
  419ca3:	jns    0x419d13
  419ca5:	fisubr WORD PTR [edx]
  419ca7:	mov    al,0x87
  419ca9:	ror    edx,0xda
  419cac:	pop    edi
  419cad:	stc    
  419cae:	loopne 0x419d2d
  419cb0:	mov    ah,dh
  419cb2:	pop    ecx
  419cb3:	out    dx,eax
  419cb4:	lods   eax,DWORD PTR ds:[esi]
  419cb5:	sbb    BYTE PTR [ecx],dh
  419cb7:	dec    esp
  419cb8:	imul   esi,DWORD PTR [ecx-0x15],0x65
  419cbc:	out    dx,al
  419cbd:	adc    eax,0x55eadd26
  419cc2:	xor    BYTE PTR [ecx-0x77],0x17
  419cc6:	add    DWORD PTR [ebp-0x63],ebx
  419cc9:	xor    eax,0x4529c5db
  419cce:	inc    ebx
  419ccf:	push   ds
  419cd0:	mov    ebp,0x9b287bdd
  419cd5:	ins    DWORD PTR es:[edi],dx
  419cd6:	xor    DWORD PTR [ecx+0x21],eax
  419cd9:	or     BYTE PTR [edx-0x33],al
  419cdc:	mov    ebp,esi
  419cde:	daa    
  419cdf:	sub    eax,DWORD PTR [ecx-0x29]
  419ce2:	ret    
  419ce3:	mov    DWORD PTR cs:[edx+0x76ea8139],esp
  419cea:	mov    DWORD PTR [ecx-0x6b],esi
  419ced:	xchg   BYTE PTR [ecx],dl
  419cef:	shl    BYTE PTR [edx-0x37880f5f],cl
  419cf5:	jecxz  0x419cc5
  419cf7:	inc    eax
  419cf8:	aad    0x11
  419cfa:	out    dx,eax
  419cfb:	jmp    0x699261c7
  419d00:	mov    ah,BYTE PTR [edi-0x17]
  419d03:	loope  0x419d00
  419d05:	mov    ds:0x445afc7a,al
  419d0a:	into   
  419d0b:	and    BYTE PTR [ecx-0x15a69db3],al
  419d11:	xor    BYTE PTR [ecx],ch
  419d13:	(bad)  
  419d14:	mov    ah,0x8d
  419d16:	push   cs
  419d17:	xchg   eax,ebp
  419d19:	jae    0x419ca8
  419d1b:	loope  0x419ce1
  419d1d:	out    0xc,eax
  419d1f:	mov    ah,bl
  419d21:	lock dec ebp
  419d23:	cmp    esi,edi
  419d25:	js     0x419d3c
  419d27:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419d29:	mov    fs,WORD PTR [ebx]
  419d2b:	out    dx,eax
  419d2c:	or     BYTE PTR [edx+0x5b78c581],ch
  419d32:	int    0x5
  419d34:	dec    ebx
  419d35:	xchg   DWORD PTR [eax+0x3051801],ebx
  419d3b:	dec    ecx
  419d3c:	jo     0x419d26
  419d3e:	imul   ecx,DWORD PTR [edi+0x6537ef40],0xce8c085d
  419d48:	(bad)
  419d4b:	xor    al,0x6
  419d4d:	in     al,dx
  419d4e:	aas    
  419d4f:	xor    DWORD PTR [eax+0x74],ebp
  419d52:	rcl    BYTE PTR [ecx+0x74684c62],0xa6
  419d59:	inc    ecx
  419d5b:	mov    eax,ds:0xd5e8b484
  419d60:	push   ebx
  419d61:	pushf  
  419d62:	cld    
  419d63:	sbb    dl,BYTE PTR [esi-0x1e46197a]
  419d69:	nop
  419d6a:	mov    dh,BYTE PTR [ecx-0x1]
  419d6d:	call   0xdf6d:0xbb9298f2
  419d74:	mov    ch,0x76
  419d76:	icebp  
  419d77:	(bad)
  419d7a:	int    0x74
  419d7c:	pop    eax
  419d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d7e:	out    0xa3,al
  419d80:	xchg   edi,eax
  419d81:	test   esp,esp
  419d83:	xchg   ebx,eax
  419d84:	jle    0x419de7
  419d86:	daa    
  419d87:	mov    DWORD PTR [ebx],esi
  419d89:	jp     0x419dac
  419d8b:	shl    bp,1
  419d8e:	jmp    0xb678fbb2
  419d93:	inc    ebp
  419d94:	mov    eax,ds:0x7bb075b2
  419d99:	dec    esp
  419d9a:	pop    edi
  419d9b:	dec    esp
  419d9c:	adc    dh,BYTE PTR [ebp-0x2f3ae7ec]
  419da2:	loopne 0x419d6e
  419da4:	mov    eax,0xc2679870
  419da9:	ds push ecx
  419dab:	cwde   
  419dac:	mov    dl,0x3f
  419dae:	fnsave [ecx+ecx*4+0x205dbf35]
  419db5:	js     0x419da9
  419db7:	mov    edx,0x1cd8c5fa
  419dbc:	sub    BYTE PTR [edi],0x94
  419dbf:	xor    bl,ch
  419dc1:	dec    ecx
  419dc2:	mov    ebp,0xe893cdd7
  419dc7:	sub    eax,edi
  419dc9:	mov    dl,0xd
  419dcb:	ins    BYTE PTR es:[edi],dx
  419dcc:	push   0xe517b520
  419dd1:	jge    0x419dcb
  419dd3:	jl     0x419dee
  419dd5:	test   DWORD PTR [edx+eiz*8+0x4c],eax
  419dd9:	or     BYTE PTR [edi],al
  419ddb:	jb     0x419d65
  419ddd:	jmp    0x419dc1
  419ddf:	stos   DWORD PTR es:[edi],eax
  419de0:	shr    DWORD PTR [esi-0x3c],cl
  419de3:	xchg   BYTE PTR [eax],ch
  419de5:	cmp    eax,0xe85bc848
  419dea:	pop    eax
  419deb:	mov    ebx,0x781cab4f
  419df0:	loope  0x419d91
  419df2:	jnp    0x419d7e
  419df4:	adc    bl,BYTE PTR [edx+0x33]
  419df7:	inc    ebp
  419df8:	xor    eax,0x3752deb1
  419dfd:	push   ss
  419dfe:	fnstsw WORD PTR ds:0x453d70f2
  419e04:	jle    0x419ddd
  419e06:	test   DWORD PTR [eax+0x4b688c1e],esp
  419e0c:	stos   DWORD PTR es:[edi],eax
  419e0d:	jg     0x419d9b
  419e0f:	cdq    
  419e10:	test   ecx,0xddb2729a
  419e16:	out    0x16,al
  419e18:	loopne 0x419dd7
  419e1a:	sbb    BYTE PTR [ecx],0x71
  419e1d:	pop    es
  419e1e:	jb     0x419e80
  419e20:	xchg   ebp,eax
  419e21:	js     0x419e0b
  419e23:	inc    ebx
  419e24:	xor    DWORD PTR [esi+esi*8+0x19634e02],0x112b41e4
  419e2f:	ins    BYTE PTR es:[edi],dx
  419e30:	jle    0x419e8b
  419e32:	add    ah,0x38
  419e35:	mov    ds,WORD PTR [esi+0x198dccab]
  419e3b:	test   BYTE PTR [esi+0x6e2dfa90],cl
  419e41:	test   ecx,esp
  419e43:	mov    eax,0xf3af4924
  419e48:	aam    0x6b
  419e4a:	outs   dx,BYTE PTR ds:[esi]
  419e4b:	mov    WORD PTR [ebx],es
  419e4d:	clc    
  419e4e:	inc    ebx
  419e4f:	and    dl,BYTE PTR [edi-0x2b]
  419e52:	iret   
  419e53:	mov    dh,0xa6
  419e55:	addr16 push 0xf9a922c6
  419e5b:	not    BYTE PTR [ebx-0x2d16b14c]
  419e61:	scas   al,BYTE PTR es:[edi]
  419e62:	repz pop esp
  419e64:	xchg   ecx,eax
  419e65:	or     edx,DWORD PTR [ecx+0x33]
  419e68:	push   ds
  419e69:	mov    WORD PTR [ecx+0x1f],gs
  419e6c:	xchg   edi,eax
  419e6d:	stos   BYTE PTR es:[edi],al
  419e6e:	jo     0x419e61
  419e70:	push   edi
  419e71:	add    bl,bh
  419e73:	mov    ds:0x8097ec0e,al
  419e78:	(bad)  
  419e7b:	cdq    
  419e7c:	popf   
  419e7d:	push   ss
  419e7e:	pop    esi
  419e7f:	loop   0x419e31
  419e81:	out    0xa5,al
  419e83:	aaa    
  419e84:	cmp    ch,BYTE PTR [eax*4-0x2e6ddac1]
  419e8b:	pop    eax
  419e8c:	(bad)
  419e90:	cdq    
  419e91:	mov    edi,0xde34954
  419e96:	rol    ebx,1
  419e98:	or     BYTE PTR [esi],0xdb
  419e9b:	jg     0x419e64
  419e9d:	pop    ecx
  419e9e:	push   ss
  419e9f:	test   DWORD PTR [edx],ebx
  419ea1:	push   cs
  419ea2:	sub    cl,BYTE PTR [ecx]
  419ea4:	sub    dh,dh
  419ea6:	push   0xffffffbf
  419ea8:	adc    DWORD PTR [eax],edi
  419eaa:	mov    ah,0xd7
  419eac:	jb     0x419ed7
  419eae:	(bad)  
  419eaf:	mov    BYTE PTR [edi],dh
  419eb1:	xchg   esi,eax
  419eb2:	cmc    
  419eb3:	mov    cl,BYTE PTR [ecx]
  419eb5:	lock hlt 
  419eb7:	mov    al,0x90
  419eb9:	adc    edi,edx
  419ebb:	jb     0x419e9f
  419ebd:	inc    eax
  419ebe:	mov    dh,0x5a
  419ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ec1:	add    eax,0x579b543
  419ec6:	cmc    
  419ec7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419ec9:	mov    dl,BYTE PTR [eax-0x52b37251]
  419ecf:	shr    DWORD PTR [ebx+0x794b7add],0x9d
  419ed6:	imul   ecx,DWORD PTR [eax-0x53],0x15
  419eda:	fst    DWORD PTR ds:0x898948aa
  419ee0:	sbb    edi,ebx
  419ee2:	call   0xf56027d
  419ee7:	push   es
  419ee8:	inc    esp
  419ee9:	mov    bh,0x38
  419eeb:	ins    DWORD PTR es:[edi],dx
  419eec:	lahf   
  419eed:	add    BYTE PTR [ebx+0x2e06cd4d],0x69
  419ef4:	scas   eax,DWORD PTR es:[edi]
  419ef5:	and    ebp,ecx
  419ef7:	jp     0x419eb6
  419ef9:	clc    
  419efa:	inc    ecx
  419efb:	out    dx,eax
  419efc:	add    ah,BYTE PTR [ebx+0x28715796]
  419f02:	retf   
  419f03:	xchg   dh,bl
  419f05:	xchg   BYTE PTR [edx+0x5a],al
  419f08:	outs   dx,DWORD PTR ds:[esi]
  419f09:	or     eax,0x38ba830
  419f0e:	dec    ebp
  419f0f:	fdivr  DWORD PTR [edx-0x1a]
  419f12:	ins    BYTE PTR es:[edi],dx
  419f13:	jns    0x419f4e
  419f15:	mov    al,ds:0x94afdaba
  419f1a:	mov    ch,0xf9
  419f1c:	pop    ebp
  419f1d:	sbb    al,0xbb
  419f1f:	sbb    bh,dl
  419f21:	out    0xf3,eax
  419f23:	das    
  419f24:	loope  0x419f24
  419f26:	not    edx
  419f28:	add    al,BYTE PTR es:[ebx+0x62]
  419f2c:	cmc    
  419f2d:	lods   al,BYTE PTR ds:[esi]
  419f2e:	not    edi
  419f30:	push   edi
  419f31:	dec    eax
  419f32:	jns    0x419f95
  419f34:	jmp    0xa46b:0x30eae1fb
  419f3b:	rcr    DWORD PTR [edx+0x40],cl
  419f3e:	xchg   ecx,eax
  419f3f:	push   ebp
  419f40:	ss pop eax
  419f42:	inc    eax
  419f43:	enter  0xcf58,0x55
  419f47:	pop    es
  419f48:	push   cs
  419f49:	test   DWORD PTR [edx-0x16a8b424],ebx
  419f4f:	(bad)  
  419f50:	fcmovnbe st,st(4)
  419f52:	in     eax,dx
  419f53:	sti    
  419f54:	add    eax,DWORD PTR [ecx]
  419f56:	jnp    0x419f1c
  419f58:	xor    al,0x4c
  419f5a:	xchg   DWORD PTR [esi+0x62],esi
  419f5d:	jb     0x419fb1
  419f5f:	scas   eax,DWORD PTR es:[edi]
  419f60:	push   esp
  419f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f62:	ficomp DWORD PTR [esi]
  419f64:	les    esp,FWORD PTR [esi-0x7354301c]
  419f6a:	daa    
  419f6b:	es mov bl,0x55
  419f6e:	das    
  419f6f:	mov    bl,BYTE PTR [ecx+0x36af20b7]
  419f75:	push   es
  419f76:	xchg   esp,eax
  419f77:	out    dx,eax
  419f78:	sbb    BYTE PTR [eax+0x35],0xba
  419f7c:	xor    esp,ebp
  419f7e:	and    DWORD PTR [edi],edi
  419f80:	sbb    DWORD PTR [edx],edx
  419f82:	out    dx,al
  419f83:	clc    
  419f84:	adc    al,0x62
  419f86:	iret   
  419f87:	daa    
  419f88:	mov    dh,0xcf
  419f8a:	add    eax,ecx
  419f8c:	cmp    al,0xaf
  419f8e:	int    0xc1
  419f90:	cmp    BYTE PTR [edx],bl
  419f92:	(bad)  
  419f93:	loope  0x419f9a
  419f95:	retf   
  419f96:	inc    edx
  419f97:	pop    esp
  419f98:	call   0x6591:0x21041a6b
  419f9f:	enter  0xf2c3,0xac
  419fa3:	fwait
  419fa4:	and    DWORD PTR [ebx+ebx*8+0xd54f154],eax
  419fab:	cmp    eax,0xbb22578f
  419fb0:	sub    cl,bh
  419fb2:	test   al,0x60
  419fb4:	push   ds
  419fb5:	sbb    cl,bh
  419fb7:	ja     0x419f8a
  419fb9:	adc    DWORD PTR [ebx-0x48],eax
  419fbc:	xchg   esi,eax
  419fbd:	push   eax
  419fbe:	aam    0xe3
  419fc0:	sub    al,0x4d
  419fc2:	bound  esi,QWORD PTR [ebx]
  419fc4:	pop    esp
  419fc5:	add    eax,0x4c31ed3c
  419fca:	test   DWORD PTR ds:0x716c7867,ecx
  419fd0:	cmc    
  419fd1:	stos   DWORD PTR es:[edi],eax
  419fd2:	loop   0x41a03d
  419fd4:	xchg   ebx,eax
  419fd5:	inc    ecx
  419fd6:	push   esi
  419fd7:	xchg   ecx,eax
  419fd8:	jge    0x419fd6
  419fda:	div    DWORD PTR [edx+0x25]
  419fdd:	sbb    eax,ecx
  419fdf:	inc    eax
  419fe0:	mov    ecx,0x3e280162
  419fe5:	mov    dl,0x30
  419fe7:	xor    DWORD PTR [ebx-0x77151864],esi
  419fed:	aam    0x6c
  419fef:	inc    ebp
  419ff0:	sbb    ebx,eax
  419ff2:	(bad)  
  419ff3:	int3   
  419ff4:	fadd   QWORD PTR [esi-0x48]
  419ff7:	cdq    
  419ff8:	or     eax,0xad86f04c
  419ffd:	xor    al,cl
  419fff:	fcmovnb st,st(2)
  41a001:	sbb    al,0x8e
  41a003:	retf   0xd1d0
  41a006:	cmp    al,0x88
  41a008:	in     al,0x1c
  41a00a:	pop    ds
  41a00b:	lahf   
  41a00c:	mov    ah,0x6f
  41a00e:	adc    dh,BYTE PTR [eax+0x73af7bb0]
  41a014:	in     al,0x1c
  41a016:	mov    bl,0x46
  41a018:	or     eax,0xfabddbf4
  41a01d:	std    
  41a01e:	aas    
  41a01f:	je     0x419fd3
  41a021:	aam    0x7d
  41a023:	ins    DWORD PTR es:[edi],dx
  41a024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a025:	lea    edi,[eax+ebp*1+0x588a578]
  41a02c:	push   0x5831b524
  41a031:	pushf  
  41a032:	sbb    eax,0x43f3e077
  41a037:	retf   
  41a038:	ins    BYTE PTR es:[edi],dx
  41a039:	xor    BYTE PTR [esi],ah
  41a03b:	fnstenv [ebp+eiz*4+0x45740f73]
  41a042:	cmp    BYTE PTR [esi+0x22],dl
  41a045:	xchg   ebx,eax
  41a046:	or     edx,eax
  41a048:	xchg   esi,eax
  41a049:	mov    edi,0x40fbc64f
  41a04e:	jae    0x41a053
  41a050:	push   cs
  41a051:	shl    BYTE PTR [edi+0x191dbe3],0xaa
  41a058:	into   
  41a059:	cmp    bl,BYTE PTR [eax-0x501b657b]
  41a05f:	sub    eax,0xecfdf5d5
  41a064:	cmp    BYTE PTR [eax-0x22],ah
  41a067:	jg     0x41a021
  41a069:	xor    bh,BYTE PTR es:[esi+0x6c688dc0]
  41a070:	push   cs
  41a071:	jg     0x41a048
  41a073:	int    0x27
  41a075:	js     0x41a010
  41a077:	push   ebp
  41a078:	cmp    BYTE PTR [ebx-0x2d],ch
  41a07b:	int3   
  41a07c:	jb     0x41a065
  41a07e:	mov    edi,0x7d15ce3a
  41a083:	cmp    ch,BYTE PTR [ecx-0x38]
  41a086:	pop    ss
  41a087:	imul   ecx,eax,0x7b
  41a08a:	pop    esi
  41a08b:	mov    ebx,0x24ca4d75
  41a090:	ret    0x4ab
  41a093:	cmp    ebp,DWORD PTR ds:0xd599e990
  41a099:	test   DWORD PTR [ebp-0x68],edx
  41a09c:	cmp    ah,ah
  41a09e:	fadd   QWORD PTR [esi+0xd8df0f6]
  41a0a4:	arpl   sp,di
  41a0a6:	mov    ah,BYTE PTR [edi+0x4d3e5f9b]
  41a0ac:	xchg   ebp,eax
  41a0ad:	test   BYTE PTR [ecx-0x24e1622],0x2
  41a0b4:	mov    bh,0x25
  41a0b6:	in     al,0xc5
  41a0b8:	shr    ch,0x6e
  41a0bb:	jmp    0x41a107
  41a0bd:	sbb    BYTE PTR [eax+eax*4-0x1a310b18],cl
  41a0c4:	aam    0x91
  41a0c6:	dec    eax
  41a0c7:	pop    ebx
  41a0c8:	push   ss
  41a0c9:	repnz addr16 xchg esi,eax
  41a0cc:	mov    edx,0x457dfde9
  41a0d1:	fadd   st,st(0)
  41a0d3:	xor    esi,DWORD PTR [ebx-0x6ecdc774]
  41a0d9:	xor    eax,0xf157e7be
  41a0de:	pop    ss
  41a0df:	ja     0x41a138
  41a0e1:	pop    esi
  41a0e2:	popf   
  41a0e3:	xchg   ecx,eax
  41a0e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0e5:	ins    DWORD PTR es:[edi],dx
  41a0e6:	retf   
  41a0e7:	popf   
  41a0e8:	sbb    ebp,DWORD PTR [esi+ebp*4-0x55]
  41a0ec:	test   BYTE PTR [esi-0x7c64c1aa],0xce
  41a0f3:	in     eax,0x62
  41a0f5:	jno    0x41a09d
  41a0f7:	xor    DWORD PTR [esi],ebp
  41a0f9:	jb     0x41a0f8
  41a0fb:	bound  esp,QWORD PTR [eax]
  41a0fd:	adc    DWORD PTR [ecx],0x5a72192e
  41a103:	xchg   ecx,eax
  41a104:	mov    ebx,0xfdc3652d
  41a109:	push   edx
  41a10a:	(bad)  
  41a10b:	xchg   BYTE PTR [edx-0x50558413],cl
  41a111:	jmp    0x8b236b30
  41a116:	adc    bh,BYTE PTR [ebx-0x2c]
  41a119:	dec    ecx
  41a11a:	test   DWORD PTR [edi+0x61],ebx
  41a11d:	mov    al,0x9b
  41a11f:	cwde   
  41a120:	adc    eax,0x49852e12
  41a125:	sbb    cl,ch
  41a127:	jb     0x41a0dd
  41a129:	es imul edi,esp,0xbf33f1e5
  41a130:	mov    dl,0x3c
  41a132:	xchg   edx,eax
  41a133:	add    BYTE PTR [ecx+eax*2],0xc
  41a137:	mov    ah,BYTE PTR [esi-0xae93665]
  41a13d:	data16 jp 0x41a111
  41a140:	cmp    ecx,DWORD PTR ds:0x1c18ccc2
  41a146:	sub    ebp,edx
  41a148:	pusha  
  41a149:	push   ecx
  41a14a:	enter  0x251a,0xd7
  41a14e:	adc    al,0x52
  41a150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a151:	xchg   ebx,eax
  41a152:	lock add dl,BYTE PTR [ebx-0x1ba0505b]
  41a159:	mov    eax,0xdeb884ff
  41a15e:	ins    DWORD PTR es:[edi],dx
  41a15f:	add    al,0x2d
  41a161:	daa    
  41a162:	dec    BYTE PTR [ecx+0x6e5970b7]
  41a168:	ins    DWORD PTR es:[edi],dx
  41a169:	pop    ds
  41a16a:	pop    edi
  41a16b:	aaa    
  41a16c:	or     al,0xfe
  41a16e:	emms   
  41a170:	sar    dh,0xee
  41a173:	cdq    
  41a174:	and    esi,esp
  41a176:	xlat   BYTE PTR ds:[ebx]
  41a177:	mov    bh,BYTE PTR [edi]
  41a179:	adc    ebx,DWORD PTR [esi]
  41a17b:	ror    DWORD PTR [eax+ebx*1-0x19],cl
  41a17f:	mov    ebp,0x980b5d5
  41a184:	loope  0x41a121
  41a186:	ret    
  41a187:	pop    ebx
  41a188:	and    ebp,esp
  41a18a:	es push cs
  41a18c:	mov    DWORD PTR [ecx+0x1b],ecx
  41a18f:	pushf  
  41a190:	mov    DWORD PTR [ebp-0x424fbd3],esi
  41a196:	and    eax,0xb460a549
  41a19b:	mov    al,ds:0x90c74e8f
  41a1a0:	cmp    esi,DWORD PTR [ebx+0x679c6034]
  41a1a6:	mov    ebx,0x5ccfb5e4
  41a1ab:	ins    BYTE PTR es:[edi],dx
  41a1ac:	in     al,dx
  41a1ad:	shr    cl,1
  41a1af:	mov    esp,0xd71e69d9
  41a1b4:	mov    DWORD PTR [ecx-0x3e],ebx
  41a1b7:	and    cl,BYTE PTR [edx+0x13]
  41a1ba:	dec    edx
  41a1bb:	cmp    edx,eax
  41a1bd:	sub    DWORD PTR [edx],edi
  41a1bf:	xor    esi,ebx
  41a1c1:	inc    edi
  41a1c2:	les    ecx,FWORD PTR [eax+0x31]
  41a1c5:	adc    al,0x6f
  41a1c7:	xor    al,0xa9
  41a1c9:	les    ecx,FWORD PTR [edx-0x613a4ed2]
  41a1cf:	pushf  
  41a1d0:	mov    ah,0x12
  41a1d2:	pop    edi
  41a1d3:	test   eax,0x3158783c
  41a1d8:	mov    bh,0xef
  41a1da:	inc    esp
  41a1db:	stos   DWORD PTR es:[edi],eax
  41a1dc:	mov    edx,ebx
  41a1de:	push   ss
  41a1df:	das    
  41a1e0:	loopne 0x41a200
  41a1e2:	es push ds
  41a1e4:	arpl   WORD PTR [esi+ecx*1],di
  41a1e7:	xor    eax,0xbc47158a
  41a1ec:	inc    ebx
  41a1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ee:	or     ah,ch
  41a1f0:	jg     0x41a1da
  41a1f2:	lods   al,BYTE PTR ds:[esi]
  41a1f3:	hlt    
  41a1f4:	push   ebp
  41a1f5:	jge    0x41a1dc
  41a1f7:	push   ss
  41a1f8:	inc    eax
  41a1f9:	sbb    eax,0x95560aa5
  41a1fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a200:	sbb    al,0xb0
  41a202:	add    DWORD PTR [ecx],edx
  41a204:	add    BYTE PTR [edx+0x2eb30283],0xc0
  41a20b:	mov    dl,0x37
  41a20d:	sbb    al,0x1c
  41a20f:	in     eax,0xf5
  41a211:	addr16 xchg ch,bh
  41a214:	mov    esi,0x2507f45
  41a219:	js     0x41a277
  41a21b:	outs   dx,BYTE PTR ds:[esi]
  41a21c:	mov    cl,0x89
  41a21e:	inc    ecx
  41a21f:	add    DWORD PTR [esi-0x627cbdd7],eax
  41a225:	mov    esp,0x5db71edd
  41a22a:	mov    esp,0xda3bb232
  41a22f:	pushf  
  41a230:	data16 (bad) 
  41a232:	enter  0x7775,0x82
  41a236:	and    BYTE PTR [ebx],bh
  41a238:	add    eax,esi
  41a23a:	or     DWORD PTR [ebx+0x3b1fad58],edi
  41a240:	fnsave [eax]
  41a242:	retf   0x72b6
  41a245:	sbb    esp,DWORD PTR [ecx]
  41a247:	imul   esp,DWORD PTR [ecx-0x47],0xd2f4ad56
  41a24e:	neg    DWORD PTR [esi+ebx*8+0x4f61b41c]
  41a255:	and    ecx,DWORD PTR [ecx]
  41a257:	dec    edx
  41a258:	mov    BYTE PTR [esp+edi*2+0x9dab5e2],cl
  41a25f:	les    ebp,FWORD PTR [esi+0x36]
  41a262:	add    bl,BYTE PTR [edx-0x59802c08]
  41a268:	mov    ds:0x34570841,eax
  41a26d:	mov    gs,WORD PTR [ecx+ebp*1]
  41a270:	dec    ebx
  41a271:	jae    0x41a2a1
  41a273:	dec    esp
  41a274:	add    eax,0xe60ab628
  41a279:	ret    0xb728
  41a27c:	mov    bl,0x8c
  41a27e:	sub    BYTE PTR [edx+0x68],dh
  41a281:	lds    ecx,FWORD PTR [edi]
  41a283:	dec    eax
  41a284:	test   BYTE PTR [esi+edi*8+0x5993cd6c],0xbb
  41a28c:	iret   
  41a28d:	mov    ch,0x1b
  41a28f:	outs   dx,BYTE PTR ds:[esi]
  41a290:	pop    esi
  41a291:	xchg   edi,eax
  41a292:	jmp    0xa849bd04
  41a297:	sub    DWORD PTR [ecx+0x47],esi
  41a29a:	push   0x33aa33ed
  41a29f:	jns    0x41a23c
  41a2a1:	or     eax,0x93fbff48
  41a2a6:	xor    BYTE PTR [esi],bl
  41a2a8:	ror    bh,cl
  41a2aa:	cmc    
  41a2ab:	mov    ebp,DWORD PTR ds:0xa003368b
  41a2b1:	(bad)  
  41a2b2:	jns    0x41a25e
  41a2b4:	jg     0x41a25b
  41a2b6:	fsubr  st,st(5)
  41a2b8:	dec    esi
  41a2b9:	(bad)  
  41a2ba:	jnp    0x41a2f5
  41a2bc:	cs pop ss
  41a2be:	mov    ebx,0xbedd151d
  41a2c3:	(bad)
  41a2c6:	mov    edi,0x310e112a
  41a2cb:	mov    edi,0xd02ca17d
  41a2d0:	push   ds
  41a2d1:	or     ah,BYTE PTR fs:[ecx-0xb0744ff]
  41a2d8:	and    BYTE PTR [esi],bh
  41a2da:	jns    0x41a292
  41a2dc:	data16 jmp 0x41a2f1
  41a2df:	int3   
  41a2e0:	sub    DWORD PTR [eax-0x211d3b6d],ebp
  41a2e6:	jmp    0x5e78:0xb77d32a1
  41a2ed:	int3   
  41a2ee:	lods   al,BYTE PTR ds:[esi]
  41a2ef:	fs pop ds
  41a2f1:	jp     0x41a326
  41a2f3:	mov    ecx,0xf1295cc0
  41a2f8:	sub    edx,esp
  41a2fa:	jno    0x41a34b
  41a2fc:	int3   
  41a2fd:	aam    0x3d
  41a2ff:	mov    bh,0x41
  41a301:	sub    DWORD PTR [ecx-0x4b78a4f1],edi
  41a307:	mov    DWORD PTR [ecx],edx
  41a309:	jg     0x41a360
  41a30b:	xchg   edx,eax
  41a30c:	push   esp
  41a30d:	dec    ebp
  41a30e:	(bad)  
  41a30f:	mov    ds:0x245e5ea0,eax
  41a314:	push   esi
  41a315:	stos   DWORD PTR es:[edi],eax
  41a316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a317:	adc    eax,0xed96fef0
  41a31c:	retf   0x1015
  41a31f:	je     0x41a2f8
  41a321:	add    eax,0xf47a2497
  41a326:	das    
  41a327:	hlt    
  41a328:	fiadd  WORD PTR [esi-0x8]
  41a32b:	enter  0x8ae1,0xb5
  41a32f:	push   edi
  41a330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a331:	imul   eax,DWORD PTR [ebp+edi*2-0x54],0x5270eb4c
  41a339:	adc    dh,dh
  41a33b:	in     al,0x8f
  41a33d:	or     edx,DWORD PTR [edx+ebx*2-0xb]
  41a341:	adc    al,0xb8
  41a343:	or     DWORD PTR [ebx-0x57820f6b],eax
  41a349:	loop   0x41a2e4
  41a34b:	xchg   edi,eax
  41a34c:	dec    ebp
  41a34d:	and    ebx,eax
  41a34f:	sub    eax,0x86970dc0
  41a354:	pop    eax
  41a355:	adc    DWORD PTR ds:0x4490696a,ecx
  41a35b:	es mov edx,0xa5f6af26
  41a361:	enter  0x2855,0x1
  41a365:	icebp  
  41a366:	sub    dl,ah
  41a368:	adc    eax,0xd835b10c
  41a36d:	xor    BYTE PTR [ebp+0xcb17472],0x7d
  41a374:	out    dx,al
  41a375:	hlt    
  41a376:	sub    al,0xb8
  41a378:	mov    edx,0xd7180e9d
  41a37d:	shr    DWORD PTR [esi+0x50505e2d],cl
  41a383:	push   0xffffffb4
  41a385:	sub    BYTE PTR [edi-0x12d511ff],cl
  41a38b:	xor    ch,BYTE PTR [esi]
  41a38d:	pop    ss
  41a38e:	out    dx,eax
  41a38f:	fwait
  41a390:	and    bh,BYTE PTR [ecx+0x5f]
  41a393:	stc    
  41a394:	and    DWORD PTR [edi-0x7],edx
  41a397:	rcr    DWORD PTR [esi-0x68729b83],0xf2
  41a39e:	jmp    0x41a41a
  41a3a0:	jnp    0x41a371
  41a3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3a3:	xchg   DWORD PTR [eax],ecx
  41a3a5:	xor    BYTE PTR [edi],bh
  41a3a7:	mov    ebp,0x8fe7866
  41a3ac:	inc    eax
  41a3ad:	mov    ebx,0x97c01711
  41a3b2:	jmp    esi
  41a3b4:	loopne 0x41a351
  41a3b6:	jecxz  0x41a3b8
  41a3b8:	cmp    DWORD PTR [ecx],ebx
  41a3ba:	and    cl,BYTE PTR [ecx+0x2]
  41a3bd:	mov    eax,ds:0xeda5c0ec
  41a3c2:	xchg   dh,bl
  41a3c4:	loop   0x41a394
  41a3c6:	xchg   ebp,eax
  41a3c7:	jge    0x41a3f1
  41a3c9:	test   eax,0x88ff6cad
  41a3ce:	cmp    DWORD PTR ds:0xa2a697e3,ebp
  41a3d4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d6:	and    BYTE PTR ds:0xfb889b81,cl
  41a3dc:	popf   
  41a3dd:	sbb    esi,edi
  41a3df:	jecxz  0x41a3d6
  41a3e1:	mov    dh,0xab
  41a3e3:	push   esp
  41a3e4:	cmp    eax,0x6e30b22a
  41a3e9:	lock adc DWORD PTR [ebx],ecx
  41a3ec:	es adc eax,0x3461e233
  41a3f2:	pop    es
  41a3f3:	sbb    BYTE PTR [edi],0x9c
  41a3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f7:	add    eax,edi
  41a3f9:	rcr    DWORD PTR [ebx],1
  41a3fb:	fbld   TBYTE PTR [ebx]
  41a3fd:	aad    0x1f
  41a3ff:	rcl    DWORD PTR [ebx+0x5be14a94],cl
  41a405:	inc    esi
  41a406:	sbb    DWORD PTR [ebx-0x190e2ce6],ebx
  41a40c:	pop    ebx
  41a40d:	xchg   ebp,eax
  41a40e:	inc    edx
  41a40f:	loop   0x41a3b7
  41a411:	sub    esp,edx
  41a413:	mov    ds:0xd68052fc,al
  41a418:	fwait
  41a419:	daa    
  41a41a:	imul   ebx,DWORD PTR [edx],0xfa7d77e4
  41a420:	mov    dl,BYTE PTR [edi+0x5cfd6e1d]
  41a426:	mov    edx,DWORD PTR [ebx-0x3a]
  41a429:	xchg   ebp,eax
  41a42a:	(bad)  
  41a42c:	jmp    0xa00:0xb4956efa
  41a433:	test   dl,dh
  41a435:	shr    DWORD PTR [ecx-0x2b],cl
  41a438:	stos   DWORD PTR es:[edi],eax
  41a439:	test   BYTE PTR [esi*8-0x4a3c61cd],bl
  41a440:	and    esi,DWORD PTR [edx+0x2e67ba5f]
  41a446:	mov    bl,0xb8
  41a448:	fsubr  QWORD PTR [ecx+0x47539846]
  41a44e:	pushf  
  41a44f:	cmp    al,0x9c
  41a451:	sbb    dl,BYTE PTR [edx+eax*8-0x258b7965]
  41a458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a459:	call   0x57e7cf34
  41a45e:	repz mov dh,0xbf
  41a461:	inc    ebx
  41a462:	cli    
  41a463:	or     ah,bh
  41a465:	and    BYTE PTR [ecx-0xc367b16],bl
  41a46b:	cmp    DWORD PTR [edi-0x6a],edx
  41a46e:	fs dec eax
  41a470:	mov    dh,0x74
  41a472:	add    al,0x68
  41a474:	push   ebp
  41a475:	mov    eax,ds:0x86be4fb0
  41a47a:	adc    BYTE PTR [ebx],dl
  41a47c:	jmp    0xbdfb:0xbbda62e9
  41a483:	loopne 0x41a438
  41a485:	pop    esi
  41a486:	mov    ds:0xae07537,eax
  41a48b:	add    eax,esp
  41a48d:	ror    ah,1
  41a48f:	test   BYTE PTR [ebx-0x18],bl
  41a492:	mov    esi,gs
  41a494:	(bad)  
  41a495:	jl     0x41a4a9
  41a497:	and    BYTE PTR ds:0x7d3d047b,ah
  41a49d:	cmp    al,0x69
  41a49f:	repnz mov bl,0x9e
  41a4a2:	fcomp  QWORD PTR ds:0xb9ff7f73
  41a4a8:	inc    esp
  41a4a9:	lods   eax,DWORD PTR ds:[esi]
  41a4aa:	pop    ecx
  41a4ab:	call   0x9090:0xcae94e19
  41a4b2:	xchg   DWORD PTR [ebx],ecx
  41a4b4:	or     BYTE PTR [esi-0x13],0xa4
  41a4b8:	clc    
  41a4b9:	loope  0x41a47c
  41a4bb:	clc    
  41a4bc:	das    
  41a4bd:	sub    BYTE PTR [edx],ch
  41a4bf:	nop
  41a4c0:	stc    
  41a4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c2:	pop    esp
  41a4c3:	sub    DWORD PTR [ecx+0x7dca2dd2],ecx
  41a4c9:	sbb    al,0xcf
  41a4cb:	cli    
  41a4cc:	pusha  
  41a4cd:	sbb    al,BYTE PTR [ebx+0x3bef8bbf]
  41a4d3:	lock adc al,0xcd
  41a4d6:	xchg   esp,eax
  41a4d7:	xor    DWORD PTR [edx],esp
  41a4d9:	and    cl,BYTE PTR [ebx]
  41a4db:	(bad)  
  41a4dc:	jg     0x41a4b7
  41a4de:	push   esi
  41a4df:	dec    ecx
  41a4e0:	xor    al,0x51
  41a4e2:	imul   ebx,DWORD PTR [ebp-0x51],0x11a42ecd
  41a4e9:	pop    dx
  41a4eb:	mov    ecx,0x9e5ba45d
  41a4f0:	xlat   BYTE PTR ds:[ebx]
  41a4f1:	inc    ebp
  41a4f2:	retf   
  41a4f3:	cmp    al,0x41
  41a4f5:	push   esi
  41a4f6:	adc    dh,BYTE PTR [ecx]
  41a4f8:	jl     0x41a492
  41a4fa:	out    dx,eax
  41a4fb:	xchg   eax,esp
  41a4fd:	jmp    DWORD PTR [edx-0x7ae1dfa0]
  41a503:	push   ds
  41a504:	jecxz  0x41a565
  41a506:	std    
  41a507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a508:	or     DWORD PTR ds:[ebx-0x7a],esi
  41a50c:	sub    bl,dl
  41a50e:	out    dx,eax
  41a50f:	iret   
  41a510:	aas    
  41a511:	or     DWORD PTR [ecx+ebx*8],edi
  41a514:	mov    ebp,0x6e1c9d88
  41a519:	xchg   ecx,eax
  41a51a:	mov    dl,0xba
  41a51c:	loope  0x41a4ef
  41a51e:	push   ebp
  41a51f:	(bad)  
  41a520:	xor    eax,0x2a107eea
  41a525:	aas    
  41a526:	aad    0xc7
  41a528:	fwait
  41a529:	inc    ebx
  41a52a:	jge    0x41a52c
  41a52c:	and    BYTE PTR [esp+0x2eb39303],0xdc
  41a534:	leave  
  41a535:	in     eax,0x80
  41a537:	pushf  
  41a538:	imul   esp,DWORD PTR [ebx+0xde1b6d8],0x74
  41a53f:	inc    ebp
  41a540:	adc    dh,ch
  41a542:	lds    edi,FWORD PTR [edi]
  41a544:	iret   
  41a545:	leave  
  41a546:	xor    eax,0xcf78a8d9
  41a54b:	adc    BYTE PTR [ecx+0x4ac8db82],bh
  41a551:	dec    eax
  41a552:	sahf   
  41a553:	cs call 0x53394fa4
  41a559:	stos   BYTE PTR es:[edi],al
  41a55a:	pusha  
  41a55b:	pop    ebx
  41a55c:	mov    ecx,0xb01950f9
  41a561:	retf   0xba46
  41a564:	aaa    
  41a565:	mov    bl,0x4b
  41a567:	arpl   dx,cx
  41a569:	xchg   ebx,eax
  41a56a:	div    cl
  41a56c:	js     0x41a596
  41a56e:	sub    DWORD PTR [ebx-0x4a656b48],0x2bdaf66d
  41a578:	jne    0x41a5bc
  41a57a:	leave  
  41a57b:	mov    WORD PTR [edx+eiz*8],?
  41a57e:	pop    es
  41a57f:	or     al,0xe
  41a581:	das    
  41a582:	sbb    eax,0x3c9dab24
  41a587:	loope  0x41a5c1
  41a589:	and    DWORD PTR fs:[ebp-0x75],0xffffff95
  41a58e:	mov    ebp,0x44dee3d2
  41a593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a595:	xchg   esi,eax
  41a596:	pop    edi
  41a597:	sahf   
  41a598:	lods   al,BYTE PTR ds:[esi]
  41a599:	mov    esi,0x6a04204
  41a59e:	xor    DWORD PTR [edi-0x1],ebx
  41a5a1:	dec    ebx
  41a5a2:	xchg   esp,eax
  41a5a3:	pop    esp
  41a5a4:	mov    al,dh
  41a5a6:	test   eax,0xc972bd7f
  41a5ab:	cmp    ah,BYTE PTR [ebx+0x4c]
  41a5ae:	int3   
  41a5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b0:	pop    eax
  41a5b1:	fiadd  DWORD PTR [ecx]
  41a5b3:	cmc    
  41a5b4:	inc    edx
  41a5b5:	rcl    DWORD PTR fs:[edi],1
  41a5b8:	out    dx,al
  41a5b9:	das    
  41a5ba:	lea    ebx,[edx+ecx*4-0x279f1ac2]
  41a5c1:	dec    edx
  41a5c2:	and    esi,DWORD PTR [ebp-0xc28d822]
  41a5c8:	retf   0xc40f
  41a5cb:	repnz mov eax,edi
  41a5ce:	or     eax,0xe3911da6
  41a5d3:	jecxz  0x41a57c
  41a5d5:	or     ebx,eax
  41a5d7:	inc    edi
  41a5d8:	aam    0xb9
  41a5da:	adc    DWORD PTR [edx+eiz*1],0x2caa196d
  41a5e1:	(bad)  
  41a5e3:	das    
  41a5e4:	stc    
  41a5e5:	into   
  41a5e6:	in     al,0x4d
  41a5e8:	mov    ds:0xe71d9eb6,eax
  41a5ed:	lock shr DWORD PTR [eax+0x6d],cl
  41a5f1:	call   0x8ee615dd
  41a5f6:	(bad)  
  41a5f7:	xor    al,0xdb
  41a5f9:	xor    DWORD PTR [ebx+0x4171a1b6],edx
  41a5ff:	dec    ebx
  41a600:	sbb    ebx,ecx
  41a602:	jb     0x41a5b8
  41a604:	in     eax,0xf
  41a606:	ret    0x1568
  41a609:	pop    esp
  41a60a:	push   ebx
  41a60b:	mov    ah,0x2f
  41a60d:	or     BYTE PTR [esp+esi*1+0x538e76c6],dl
  41a614:	inc    esi
  41a615:	pop    es
  41a616:	fnstenv [ebp-0x2d]
  41a619:	or     esi,DWORD PTR [edx+ebx*1-0x21]
  41a61d:	cmc    
  41a61e:	xor    edi,edi
  41a620:	inc    ebx
  41a621:	in     al,dx
  41a622:	in     eax,0x16
  41a624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a625:	mov    dl,0xe3
  41a627:	jle    0x41a5fa
  41a629:	clc    
  41a62a:	xchg   dl,al
  41a62c:	xor    BYTE PTR [ecx],dl
  41a62e:	repz repz inc edi
  41a631:	out    dx,al
  41a632:	sar    BYTE PTR [esi],1
  41a634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a635:	repnz icebp 
  41a637:	dec    ebp
  41a638:	bound  edx,QWORD PTR [edx-0x46]
  41a63b:	sbb    eax,0xd4bae693
  41a640:	fadd   DWORD PTR [ebx+0x58]
  41a643:	fimul  DWORD PTR [esp+esi*2]
  41a646:	sbb    eax,0x6d5668e0
  41a64b:	sub    al,0xdc
  41a64d:	and    DWORD PTR [eax-0x209f3105],eax
  41a653:	(bad)  
  41a654:	adc    bl,BYTE PTR ds:0x60c8c838
  41a65a:	imul   edi,DWORD PTR [edi],0x25
  41a65d:	shl    esi,0x2b
  41a660:	cmp    DWORD PTR [eax-0x400a51f6],0xb043d97d
  41a66a:	mul    BYTE PTR [esi+0xcaba5d9]
  41a670:	sub    BYTE PTR [edx-0x3c4a5e02],bl
  41a676:	mov    ch,0x26
  41a678:	push   esi
  41a679:	add    DWORD PTR [eax+0x7c5ba705],ebp
  41a67f:	sub    eax,0x2b22e938
  41a684:	repz lock pop bp
  41a688:	ins    BYTE PTR es:[edi],dx
  41a689:	mov    BYTE PTR [esi+eax*8+0x2b50267e],dl
  41a690:	mov    ebp,0x726a1dd
  41a695:	in     eax,dx
  41a696:	sub    al,0x54
  41a698:	add    dl,BYTE PTR [ebp-0x5b]
  41a69b:	cmp    ecx,ecx
  41a69d:	cli    
  41a69e:	out    0x7d,eax
  41a6a0:	shl    DWORD PTR [edi+0x57006dc0],0xf3
  41a6a7:	dec    edx
  41a6a8:	arpl   WORD PTR [esi+0x2f],bp
  41a6ab:	pop    esi
  41a6ac:	xchg   esp,eax
  41a6ad:	mov    al,ds:0x249c30e1
  41a6b2:	sub    ebx,0x7f3afdef
  41a6b8:	js     0x41a68d
  41a6ba:	sub    al,dh
  41a6bc:	jmp    0xcd4f:0xc74408af
  41a6c3:	jmp    0x75833f2c
  41a6c8:	clc    
  41a6c9:	neg    DWORD PTR [edi+eax*4-0x32280342]
  41a6d0:	mul    al
  41a6d2:	sbb    ah,BYTE PTR [eax+0x2ffcb6bd]
  41a6d8:	adc    ebx,edi
  41a6da:	xchg   ecx,eax
  41a6db:	dec    ecx
  41a6dc:	pop    ebp
  41a6dd:	jecxz  0x41a6b9
  41a6df:	jb     0x41a694
  41a6e1:	sbb    BYTE PTR [esi-0x566e7cc8],ch
  41a6e7:	sbb    ebp,esi
  41a6e9:	adc    eax,DWORD PTR [edi]
  41a6eb:	pop    edi
  41a6ec:	daa    
  41a6ed:	and    ah,cl
  41a6ef:	in     al,dx
  41a6f0:	mov    ?,WORD PTR [ebp+0x45]
  41a6f3:	mov    WORD PTR [edx+0x447e78e2],ss
  41a6f9:	and    ebx,esi
  41a6fb:	pop    ebp
  41a6fc:	loopne 0x41a74f
  41a6fe:	add    al,0xb3
  41a700:	dec    eax
  41a701:	pop    ebp
  41a702:	or     ebx,DWORD PTR [edx-0xb]
  41a705:	test   BYTE PTR [eax-0x4d497431],bh
  41a70b:	inc    esp
  41a70c:	or     al,0x83
  41a70e:	outs   dx,DWORD PTR ds:[esi]
  41a70f:	fimul  DWORD PTR [edx-0x35646602]
  41a715:	jbe    0x41a6a9
  41a717:	rcr    DWORD PTR [eax],0x4f
  41a71a:	sub    al,0xf0
  41a71c:	loop   0x41a71d
  41a71e:	xchg   DWORD PTR [ecx],esp
  41a720:	pusha  
  41a721:	mov    ch,0xdc
  41a723:	(bad)  
  41a724:	mov    ss,ebp
  41a726:	aam    0x7
  41a728:	dec    esi
  41a729:	dec    edi
  41a72a:	xchg   bh,ah
  41a72c:	(bad)  
  41a72d:	in     al,0xbb
  41a72f:	or     ebx,esi
  41a731:	scas   al,BYTE PTR es:[edi]
  41a732:	iret   
  41a733:	adc    al,0xba
  41a735:	call   0xc4628eda
  41a73a:	xchg   edx,eax
  41a73b:	cs inc ebx
  41a73d:	out    0x25,eax
  41a73f:	mov    cl,0xc1
  41a741:	xor    dl,BYTE PTR [ebx+ebx*8-0x7ae6bbef]
  41a748:	retf   
  41a749:	or     eax,0x6c3a72c1
  41a74e:	or     DWORD PTR [bp+di-0x4f],esi
  41a752:	jo     0x41a6f4
  41a754:	ror    ebp,cl
  41a756:	mov    ebx,0x9853b4f5
  41a75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75c:	fbstp  TBYTE PTR [ebp+ebx*4-0x80]
  41a760:	inc    ebp
  41a761:	retf   0xb94
  41a764:	lods   eax,DWORD PTR ds:[esi]
  41a765:	dec    esi
  41a766:	(bad)  
  41a767:	stos   BYTE PTR es:[edi],al
  41a768:	outs   dx,BYTE PTR ds:[esi]
  41a769:	xor    al,0x73
  41a76b:	(bad)  
  41a76d:	and    dl,BYTE PTR [di-0x4b3f]
  41a772:	test   BYTE PTR [ebx+0x713ecb8b],ah
  41a778:	dec    eax
  41a779:	dec    esp
  41a77a:	xchg   ecx,eax
  41a77b:	mov    DWORD PTR [edi-0x349a7872],ebx
  41a781:	xor    DWORD PTR [edi],eax
  41a783:	adc    ch,0x9e
  41a786:	mov    ah,0x8c
  41a788:	les    ebx,FWORD PTR [ebp+0x5e]
  41a78b:	lods   eax,DWORD PTR ds:[esi]
  41a78c:	les    eax,FWORD PTR [esi+edx*1]
  41a78f:	and    eax,0x524a577b
  41a794:	rcl    BYTE PTR [edx+edi*2-0x67],0x1f
  41a799:	dec    edi
  41a79a:	inc    esi
  41a79b:	popf   
  41a79c:	stos   BYTE PTR es:[edi],al
  41a79d:	fisttp QWORD PTR [eax]
  41a79f:	fisttp WORD PTR [eax-0x34]
  41a7a2:	retf   0x46fe
  41a7a5:	push   ds
  41a7a6:	call   0xa58e8f49
  41a7ab:	nop
  41a7ac:	jb     0x41a810
  41a7ae:	xchg   ebx,eax
  41a7af:	in     al,0xa9
  41a7b1:	adc    BYTE PTR [ecx-0x79],0x35
  41a7b5:	cmp    ch,BYTE PTR [edx]
  41a7b7:	mov    WORD PTR [edi],gs
  41a7b9:	repz or bl,cl
  41a7bc:	add    eax,0xc003537e
  41a7c1:	mov    bh,0xab
  41a7c3:	push   ebp
  41a7c4:	mov    edx,0x4bffd921
  41a7c9:	or     al,0xe4
  41a7cb:	je     0x41a78d
  41a7cd:	jo     0x41a83a
  41a7cf:	shr    cl,1
  41a7d1:	pcmpeqd mm4,mm4
  41a7d4:	pop    edx
  41a7d5:	call   0x92a5af13
  41a7da:	mov    edx,DWORD PTR [ebx-0x2cbb3a12]
  41a7e0:	and    al,BYTE PTR [ecx-0x3269a254]
  41a7e6:	inc    ebp
  41a7e7:	loopne 0x41a7fe
  41a7e9:	xor    DWORD PTR [ecx+0x27],ebp
  41a7ec:	nop
  41a7ed:	pop    es
  41a7ee:	les    ebp,FWORD PTR [edx]
  41a7f0:	jo     0x41a814
  41a7f2:	popf   
  41a7f3:	mov    ebp,0x1b15f34e
  41a7f8:	add    dh,BYTE PTR ds:0xb8f98ae1
  41a7fe:	cmp    al,BYTE PTR [ebx+0x29]
  41a801:	and    BYTE PTR [ebx+eiz*2-0x519a9160],ch
  41a808:	loopne 0x41a79f
  41a80a:	retf   
  41a80b:	push   ss
  41a80c:	push   0xae65a316
  41a811:	fdiv   st(1),st
  41a813:	xchg   al,dh
  41a815:	and    bh,BYTE PTR [esi]
  41a817:	lods   al,BYTE PTR ds:[esi]
  41a818:	sbb    ebp,DWORD PTR [ecx]
  41a81a:	shl    bh,cl
  41a81c:	dec    ebp
  41a81d:	stos   BYTE PTR es:[edi],al
  41a81e:	dec    ebp
  41a81f:	mov    ebp,0xca88903f
  41a824:	lods   eax,DWORD PTR ds:[esi]
  41a825:	ins    BYTE PTR es:[edi],dx
  41a826:	mov    fs,WORD PTR [edx-0x3c8ab9a5]
  41a82c:	dec    ebp
  41a82d:	daa    
  41a82e:	test   WORD PTR [ecx+0x3b],ax
  41a832:	and    BYTE PTR [eax-0x1a],ah
  41a835:	mov    dl,0x3
  41a837:	in     al,0x36
  41a839:	mov    esp,0x52d182fd
  41a83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a83f:	in     al,0xf0
  41a841:	add    eax,0x9112fc36
  41a846:	push   eax
  41a847:	mov    dl,0x86
  41a849:	xor    BYTE PTR ds:0x97389657,bh
  41a84f:	(bad)  
  41a850:	dec    edx
  41a851:	je     0x41a827
  41a853:	popf   
  41a854:	dec    esp
  41a855:	aam    0x50
  41a857:	add    eax,0xc8a82390
  41a85c:	cli    
  41a85d:	mov    ebp,0x4663f0e2
  41a862:	sub    DWORD PTR [edx+0x2e],esi
  41a865:	jb     0x41a8aa
  41a867:	adc    dh,BYTE PTR [edx]
  41a869:	out    dx,eax
  41a86a:	push   esp
  41a86b:	fistp  WORD PTR [esp+esi*4+0xa]
  41a86f:	arpl   WORD PTR [edx+0x7deefa80],bp
  41a875:	jo     0x41a8d2
  41a877:	(bad)  
  41a878:	mov    ecx,0xd0b2a216
  41a87d:	enter  0x6016,0x74
  41a881:	fsubr  DWORD PTR [edi-0x6177109]
  41a887:	out    dx,eax
  41a888:	in     al,dx
  41a889:	sub    DWORD PTR ds:0xc24d36b9,edx
  41a88f:	(bad)  
  41a890:	outs   dx,BYTE PTR ds:[esi]
  41a891:	clc    
  41a892:	icebp  
  41a893:	mov    dh,0xa2
  41a895:	mov    bh,0x2
  41a897:	adc    al,0x7c
  41a899:	cmp    al,bl
  41a89b:	aad    0x82
  41a89d:	inc    ebx
  41a89e:	clc    
  41a89f:	retf   0xce6f
  41a8a2:	(bad)  
  41a8a3:	push   ss
  41a8a4:	add    esp,DWORD PTR [eax]
  41a8a6:	loopne 0x41a913
  41a8a8:	sub    DWORD PTR [ebx-0x59],edi
  41a8ab:	xchg   edx,eax
  41a8ac:	outs   dx,BYTE PTR ds:[esi]
  41a8ad:	cmp    cl,BYTE PTR [edi+ebp*2+0x206ee397]
  41a8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8b5:	sbb    DWORD PTR [edx-0x71ee6d46],ecx
  41a8bb:	add    ah,BYTE PTR [ebp+0x3da4a7b5]
  41a8c1:	outs   dx,BYTE PTR ds:[esi]
  41a8c2:	inc    eax
  41a8c3:	ss dec edx
  41a8c5:	fdivr  DWORD PTR [edx+0x106875cb]
  41a8cb:	pop    eax
  41a8cc:	sbb    eax,0xf8f5597b
  41a8d1:	test   DWORD PTR ds:0x5e16d7bf,esp
  41a8d7:	fs add al,0xa
  41a8da:	xor    DWORD PTR [ecx-0x119ed713],eax
  41a8e0:	mov    esi,0xf5fb0229
  41a8e5:	push   edx
  41a8e6:	aam    0x3a
  41a8e8:	push   eax
  41a8e9:	xchg   edi,eax
  41a8ea:	mov    bh,al
  41a8ec:	inc    edi
  41a8ed:	in     al,0xe
  41a8ef:	xor    eax,DWORD PTR [esi+0x55]
  41a8f2:	jo     0x41a8ab
  41a8f4:	mov    WORD PTR [eax-0x74],?
  41a8f7:	clc    
  41a8f8:	lods   al,BYTE PTR ds:[esi]
  41a8f9:	mov    bl,0x18
  41a8fb:	add    eax,0xea7a1dc
  41a900:	xchg   DWORD PTR [ebp+0x1854ca6e],ebp
  41a906:	mov    al,0x78
  41a908:	jle    0x41a915
  41a90a:	shr    DWORD PTR [eax+0x72e29ba3],0x1a
  41a911:	inc    eax
  41a912:	ds dec esi
  41a914:	xor    eax,0x55f7bc16
  41a919:	fscale 
  41a91b:	mov    edi,0x771939f1
  41a920:	add    edx,DWORD PTR [esi]
  41a922:	sbb    ebp,DWORD PTR [edx]
  41a924:	cmp    DWORD PTR [ebx+0x38b555b4],ecx
  41a92a:	les    ecx,FWORD PTR [edx]
  41a92c:	mov    bh,0xab
  41a92e:	pop    ebp
  41a92f:	jmp    0x395:0x1a6a2775
  41a936:	xchg   DWORD PTR [edi],edx
  41a938:	int3   
  41a939:	fld    DWORD PTR ss:[ebx+esi*8]
  41a93d:	cs mov edi,0xd8e4c62e
  41a943:	out    0xdf,eax
  41a945:	mov    bl,0x29
  41a947:	adc    bh,bh
  41a949:	das    
  41a94a:	push   0x24
  41a94c:	frstor [edx+0x331ba258]
  41a952:	mov    WORD PTR [edx-0x17],cs
  41a955:	push   esi
  41a956:	pop    ds
  41a957:	add    esp,DWORD PTR [eax]
  41a959:	(bad)  
  41a95a:	ins    DWORD PTR es:[edi],dx
  41a95b:	mov    cl,0x4d
  41a95d:	jmp    0x41a9b2
  41a95f:	in     eax,0x1b
  41a961:	popa   
  41a962:	adc    bl,0x7a
  41a965:	pushf  
  41a966:	jnp    0x41a974
  41a968:	int3   
  41a969:	push   esi
  41a96a:	ins    DWORD PTR es:[edi],dx
  41a96b:	lods   al,BYTE PTR ds:[esi]
  41a96c:	pop    ebx
  41a96d:	pusha  
  41a96e:	xor    al,0xa
  41a970:	add    al,0xa2
  41a972:	mov    esp,0x3e3ac1a0
  41a977:	add    BYTE PTR [eax+0x34],bl
  41a97a:	fadd   DWORD PTR [ebp-0x57]
  41a97d:	dec    esi
  41a97e:	lock rcr DWORD PTR [ebx+edx*4],cl
  41a982:	fisubr WORD PTR [esi-0x63368a3a]
  41a988:	out    dx,al
  41a989:	and    edx,DWORD PTR [ebx-0x70]
  41a98c:	pop    es
  41a98d:	adc    al,BYTE PTR [edx]
  41a98f:	push   es
  41a990:	(bad)  
  41a991:	jge    0x41a9ad
  41a993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a994:	and    al,0xe0
  41a996:	xor    cl,BYTE PTR [eax]
  41a998:	mov    ebp,0x632a7513
  41a99d:	pop    esp
  41a99e:	dec    edx
  41a99f:	out    dx,eax
  41a9a0:	cmp    al,0x6e
  41a9a2:	cdq    
  41a9a3:	push   esi
  41a9a4:	or     al,0x6b
  41a9a6:	inc    ebp
  41a9a7:	inc    edi
  41a9a8:	daa    
  41a9a9:	out    0x5,eax
  41a9ab:	cmp    al,0x7e
  41a9ad:	dec    ebp
  41a9ae:	leave  
  41a9af:	push   edi
  41a9b0:	add    ah,dh
  41a9b2:	cmp    ch,bl
  41a9b4:	(bad)  
  41a9b5:	shr    DWORD PTR [ecx-0x6a],1
  41a9b8:	mov    ebp,0xdd2c842a
  41a9bd:	std    
  41a9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9bf:	mov    dl,0x1
  41a9c1:	and    BYTE PTR [edi+eax*1+0x1646c689],0x6d
  41a9c9:	scas   al,BYTE PTR es:[edi]
  41a9ca:	in     eax,dx
  41a9cb:	inc    ebp
  41a9cc:	popf   
  41a9cd:	inc    ebx
  41a9ce:	stc    
  41a9cf:	dec    edi
  41a9d0:	and    cl,al
  41a9d2:	shl    DWORD PTR [ecx],cl
  41a9d4:	shl    BYTE PTR ds:0xa12258b5,1
  41a9da:	imul   eax,DWORD PTR [ebp+0x23],0x47
  41a9de:	mov    ah,0x27
  41a9e0:	aaa    
  41a9e1:	pop    edx
  41a9e2:	fist   WORD PTR es:[eax+0x3c]
  41a9e6:	push   es
  41a9e7:	mov    bl,0x9a
  41a9e9:	xchg   bh,al
  41a9eb:	mov    ecx,DWORD PTR [ecx+0x54]
  41a9ee:	xchg   ebp,eax
  41a9ef:	pop    ds
  41a9f0:	dec    edx
  41a9f1:	in     eax,dx
  41a9f2:	aam    0x21
  41a9f4:	out    dx,al
  41a9f5:	jg     0x41a9ff
  41a9f7:	in     eax,0xa
  41a9f9:	xlat   BYTE PTR ds:[ebx]
  41a9fa:	push   edi
  41a9fb:	adc    bh,al
  41a9fd:	test   ebp,0x71df8044
  41aa03:	cmp    esp,0x41cd0363
  41aa09:	cmp    al,0xf3
  41aa0b:	packsswb mm3,QWORD PTR [esi+0x7d3a8cad]
  41aa12:	clc    
  41aa13:	ins    DWORD PTR es:[edi],dx
  41aa14:	jp     0x41aa48
  41aa16:	rol    DWORD PTR [eax-0x1f8a4f64],0xb6
  41aa1d:	sub    eax,0x981a1f54
  41aa22:	sbb    DWORD PTR [esi-0x66],eax
  41aa25:	popf   
  41aa26:	je     0x41aaa4
  41aa28:	icebp  
  41aa29:	cmp    DWORD PTR [edi-0x7a15ef91],ebp
  41aa2f:	loope  0x41aa8d
  41aa31:	mov    bh,0x4c
  41aa33:	cdq    
  41aa34:	xchg   esp,eax
  41aa35:	cmp    edx,edx
  41aa37:	ins    BYTE PTR es:[edi],dx
  41aa38:	push   edi
  41aa39:	push   edx
  41aa3a:	adc    edx,esi
  41aa3c:	ss jb  0x41aaad
  41aa3f:	xor    esp,DWORD PTR [edx+0x72275bbd]
  41aa45:	xor    dl,BYTE PTR [ecx]
  41aa47:	ss jnp 0x41aa30
  41aa4a:	outs   dx,DWORD PTR ds:[esi]
  41aa4b:	imul   DWORD PTR [edi]
  41aa4d:	jo     0x41aa6f
  41aa4f:	sub    eax,0x22ee789b
  41aa54:	mov    gs,WORD PTR [eax]
  41aa56:	ror    DWORD PTR [edi+0x4],0x28
  41aa5a:	inc    ecx
  41aa5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5c:	pop    ds
  41aa5d:	sbb    eax,0xd9955e37
  41aa62:	or     al,0xcb
  41aa64:	test   dl,0x0
  41aa67:	jmp    0xf70927e2
  41aa6c:	fistp  WORD PTR [ebp+0x44]
  41aa6f:	bound  ebx,QWORD PTR [edx]
  41aa71:	(bad)  [ebx]
  41aa73:	mov    edi,0xd6f43ea0
  41aa78:	and    BYTE PTR [ebx+eiz*4+0x44],0x3b
  41aa7d:	cli    
  41aa7e:	xchg   ecx,eax
  41aa7f:	aas    
  41aa80:	sbb    al,0x24
  41aa82:	jmp    0xb38:0xbd3b3a95
  41aa89:	add    BYTE PTR [ecx+0x5b],ch
  41aa8c:	clc    
  41aa8d:	call   0xe00f2ace
  41aa92:	shr    BYTE PTR [ebp+0x48587b9e],cl
  41aa98:	cli    
  41aa99:	arpl   WORD PTR [ebp+0x7d74376],si
  41aa9f:	aas    
  41aaa0:	aad    0x48
  41aaa2:	cmp    BYTE PTR ds:0x875053f,dl
  41aaa8:	add    BYTE PTR [edx+0x7e],al
  41aaab:	xchg   ebp,eax
  41aaac:	push   0x31b0afa
  41aab1:	popa   
  41aab2:	push   ebx
  41aab3:	ds adc eax,0xf66160c6
  41aab9:	inc    esi
  41aaba:	mov    esi,0x7b23818f
  41aabf:	out    dx,al
  41aac0:	rcl    edi,cl
  41aac2:	push   cs
  41aac3:	pop    es
  41aac4:	out    dx,al
  41aac5:	sahf   
  41aac6:	and    al,0xa3
  41aac8:	jle    0x41aa88
  41aaca:	sub    BYTE PTR [ebp-0x8],bl
  41aacd:	shr    BYTE PTR [edi+ebx*2-0x70],0x72
  41aad2:	mul    DWORD PTR [ebx+0x5593d205]
  41aad8:	into   
  41aad9:	lods   al,BYTE PTR ds:[esi]
  41aada:	call   0x3edc14fa
  41aadf:	add    DWORD PTR [esi+0x798bada9],edi
  41aae5:	push   cs
  41aae6:	into   
  41aae7:	ffree  st(6)
  41aae9:	adc    eax,0x72ccb9bd
  41aaee:	xor    esi,DWORD PTR [eax-0x26]
  41aaf1:	xchg   edx,eax
  41aaf2:	imul   esi,DWORD PTR [edx-0x56ba1e54],0xffffffd8
  41aaf9:	mov    gs,WORD PTR [ebx+0x3b]
  41aafc:	mov    bl,BYTE PTR [ebx+0x54]
  41aaff:	sti    
  41ab00:	leave  
  41ab01:	xchg   DWORD PTR [edx+0x3e],eax
  41ab04:	les    ecx,FWORD PTR [edx+0x3faf582d]
  41ab0a:	jl     0x41ab1b
  41ab0c:	clc    
  41ab0d:	sbb    eax,0x2a7023ee
  41ab12:	mov    ebx,0x2e44dc84
  41ab17:	retf   
  41ab18:	xchg   DWORD PTR [edi],edi
  41ab1a:	xchg   DWORD PTR [edi-0x1607cd2f],esp
  41ab20:	and    BYTE PTR [eax+0x6101000],0xcb
  41ab27:	cmp    bh,BYTE PTR [edi-0x4e9e895b]
  41ab2d:	jbe    0x41ab94
  41ab2f:	xor    al,0x23
  41ab31:	and    eax,0x987b4804
  41ab36:	into   
  41ab37:	mov    edi,0x4d0ce884
  41ab3c:	imul   ecx,DWORD PTR [edx+0x1b],0x976efb1a
  41ab43:	pop    esp
  41ab44:	push   cs
  41ab45:	mov    esp,edx
  41ab47:	test   eax,esp
  41ab49:	pushf  
  41ab4a:	and    BYTE PTR [edx-0x71695c29],dh
  41ab50:	push   esp
  41ab51:	mov    ?,WORD PTR [ecx-0x78]
  41ab54:	clc    
  41ab55:	(bad)  
  41ab56:	mov    edx,0x443025f1
  41ab5b:	hlt    
  41ab5c:	and    BYTE PTR [eax+0x52927b7f],al
  41ab62:	scas   eax,DWORD PTR es:[edi]
  41ab63:	test   BYTE PTR [ebp-0x26c32e45],bl
  41ab69:	outs   dx,BYTE PTR ds:[esi]
  41ab6a:	and    eax,0x20caeae
  41ab6f:	xor    bl,BYTE PTR [edi+ebx*1-0x49]
  41ab73:	cs cdq 
  41ab75:	daa    
  41ab76:	dec    ebp
  41ab77:	and    DWORD PTR ds:0xd6813d8e,esp
  41ab7d:	mov    ds:0x5e50c571,al
  41ab82:	test   eax,0x86a82364
  41ab87:	shl    BYTE PTR [ebx],0xc2
  41ab8a:	or     ah,al
  41ab8c:	jbe    0x41abb9
  41ab8e:	adc    esi,ebp
  41ab90:	mov    cl,0x18
  41ab92:	jg     0x41abcb
  41ab94:	xchg   edx,eax
  41ab95:	aas    
  41ab96:	dec    edx
  41ab97:	xchg   DWORD PTR [edx-0x709c1df5],edx
  41ab9d:	callw  0x8114
  41aba1:	mov    bh,0xf4
  41aba3:	xor    al,0xbb
  41aba5:	ficom  WORD PTR ds:0x8e662fc
  41abab:	in     al,0x2d
  41abad:	pop    ebp
  41abae:	push   edi
  41abaf:	mov    al,ds:0x7582b66e
  41abb4:	stos   DWORD PTR es:[edi],eax
  41abb5:	(bad)  
  41abb7:	test   al,0x35
  41abb9:	sub    al,0x8d
  41abbb:	cmp    DWORD PTR [edi+esi*1-0x2fbf8918],edi
  41abc2:	dec    ecx
  41abc3:	cs xor al,0x75
  41abc6:	inc    esp
  41abc7:	jbe    0x41ab7a
  41abc9:	add    al,0x48
  41abcb:	jno    0x41abd6
  41abcd:	jb     0x41ab82
  41abcf:	xor    DWORD PTR [edx+eiz*4-0xd9a35b4],esp
  41abd6:	xor    al,0x8f
  41abd8:	je     0x41ac55
  41abda:	gs add bl,ah
  41abdd:	push   ss
  41abde:	mov    ebx,DWORD PTR [ecx-0x2]
  41abe1:	into   
  41abe2:	fstp   TBYTE PTR [ecx-0x4b]
  41abe5:	cli    
  41abe6:	pop    edx
  41abe7:	lahf   
  41abe8:	daa    
  41abe9:	fs inc esp
  41abeb:	xor    eax,0x56b7b2d2
  41abf0:	push   ebx
  41abf1:	lock lds edx,FWORD PTR [eax+0x12]
  41abf5:	mov    eax,ds:0xe8a32f3d
  41abfa:	mov    eax,0x973b7974
  41abff:	out    0x6c,eax
  41ac01:	xor    bl,BYTE PTR [edi-0x1198883c]
  41ac07:	xor    al,0x8e
  41ac09:	sahf   
  41ac0a:	in     eax,dx
  41ac0b:	mov    WORD PTR ds:0x3983d81a,cs
  41ac11:	xchg   BYTE PTR [esi-0x27beefd3],cl
  41ac17:	(bad)
  41ac1b:	pop    es
  41ac1c:	mov    ds:0xb52d263d,eax
  41ac21:	xchg   esp,eax
  41ac22:	sbb    ah,BYTE PTR [edx+edx*2-0x17e9ef9a]
  41ac29:	mov    ds:0x15819a73,al
  41ac2e:	cmp    bl,BYTE PTR [esi]
  41ac30:	push   ds
  41ac31:	mov    ds:0x45bc62c6,eax
  41ac36:	sub    BYTE PTR [ebx+esi*8+0x62dea7f4],dl
  41ac3d:	push   0xffffff80
  41ac3f:	jne    0x41abcb
  41ac41:	push   ecx
  41ac42:	cdq    
  41ac43:	shl    BYTE PTR [ebp+0x25],1
  41ac46:	xchg   edx,eax
  41ac47:	or     BYTE PTR [ebx],ah
  41ac49:	int3   
  41ac4a:	popf   
  41ac4b:	lds    edx,FWORD PTR [di-0x7d]
  41ac4f:	lahf   
  41ac50:	cmp    eax,0x1a0fc7db
  41ac55:	daa    
  41ac56:	ss daa 
  41ac58:	push   ss
  41ac59:	cmp    eax,0x7a04114
  41ac5e:	jo     0x41ac87
  41ac60:	sub    BYTE PTR [ebx-0x407c4319],bl
  41ac66:	or     DWORD PTR [eax],ebx
  41ac68:	out    0xea,al
  41ac6a:	sahf   
  41ac6b:	mov    bh,0x79
  41ac6d:	mov    esp,0xdc12993
  41ac72:	pop    ecx
  41ac73:	and    DWORD PTR [ebx],edi
  41ac75:	xchg   ecx,eax
  41ac76:	mov    eax,ds:0x5ae643aa
  41ac7b:	test   DWORD PTR [ebx-0x7bce99cb],esp
  41ac81:	lahf   
  41ac82:	add    ebp,ebx
  41ac84:	push   es
  41ac85:	jg     0x41acd7
  41ac87:	mov    esp,0x37400f76
  41ac8c:	add    eax,0x336837be
  41ac91:	cmp    al,0x52
  41ac93:	xchg   esp,eax
  41ac94:	and    edi,esp
  41ac96:	(bad)  
  41ac97:	and    eax,DWORD PTR ds:0x7d436736
  41ac9d:	outs   dx,DWORD PTR ds:[esi]
  41ac9e:	rcr    DWORD PTR [ecx],cl
  41aca0:	mov    esp,0xd20424f6
  41aca5:	(bad)  [ecx]
  41aca7:	xlat   BYTE PTR ds:[ebx]
  41aca8:	jbe    0x41ac83
  41acaa:	add    ebp,DWORD PTR [eax]
  41acac:	lods   al,BYTE PTR ds:[esi]
  41acad:	hlt    
  41acae:	outs   dx,DWORD PTR ds:[esi]
  41acaf:	or     eax,0xe6094a04
  41acb4:	repz out 0xd2,eax
  41acb7:	in     eax,dx
  41acb8:	jl     0x41ac89
  41acba:	mov    eax,0x5ff385c9
  41acbf:	idiv   BYTE PTR ds:0xd2458317
  41acc5:	sub    edx,DWORD PTR ds:0xa8ade7a5
  41accb:	dec    edi
  41accc:	jnp    0x41ac52
  41acce:	ins    DWORD PTR es:[edi],dx
  41accf:	mov    BYTE PTR [ecx-0x364d7397],dl
  41acd5:	in     eax,dx
  41acd6:	jno    0x41ad4d
  41acd8:	popf   
  41acd9:	jmp    0x41ad2d
  41acdb:	dec    DWORD PTR [edi+0x24df8a86]
  41ace1:	mov    ecx,0xd6189ab3
  41ace6:	push   edx
  41ace7:	(bad)  
  41ace8:	ja     0x41acbb
  41acea:	jmp    0xf4941e85
  41acef:	mov    DWORD PTR [eax],edx
  41acf1:	mov    eax,ds:0x9f2c97ea
  41acf6:	enter  0x4673,0x88
  41acfa:	add    bh,0xd4
  41acfd:	xchg   BYTE PTR [ebx+0x1f],ch
  41ad00:	mov    ?,ecx
  41ad02:	outs   dx,DWORD PTR ds:[esi]
  41ad03:	retf   0xf606
  41ad06:	xor    BYTE PTR [edx+0x5e],bh
  41ad09:	imul   esi,DWORD PTR [edx],0xf35c4f40
  41ad0f:	inc    esp
  41ad10:	mov    ebp,DWORD PTR [ebp-0x50]
  41ad13:	enter  0x2197,0xaf
  41ad17:	dec    ebx
  41ad18:	pushf  
  41ad19:	retf   0x6b8a
  41ad1c:	sahf   
  41ad1d:	jl     0x41ad66
  41ad1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad20:	cmp    bl,BYTE PTR [eax+0x38d8441d]
  41ad26:	and    ebx,edi
  41ad28:	cld    
  41ad29:	mov    ecx,0x1603f12c
  41ad2e:	pop    ebp
  41ad2f:	cmp    DWORD PTR [ebx+0x3c],ecx
  41ad32:	(bad)  
  41ad33:	imul   eax
  41ad35:	jmp    0x94153d15
  41ad3a:	mov    dh,0x91
  41ad3c:	bound  eax,QWORD PTR [ecx+0x77]
  41ad3f:	sbb    al,0xa3
  41ad41:	inc    ebx
  41ad42:	fldenv [ecx+0x6c410a47]
  41ad48:	mov    ebp,0x3fb27171
  41ad4d:	or     eax,0x21b4ca46
  41ad52:	leave  
  41ad53:	mov    esp,0xc6a8b5fa
  41ad58:	sbb    al,0x94
  41ad5a:	shl    al,0x80
  41ad5d:	mul    BYTE PTR [ecx+ebx*1-0x1e]
  41ad61:	pop    ebp
  41ad62:	cwde   
  41ad63:	xor    BYTE PTR [edi],ah
  41ad65:	lods   eax,DWORD PTR ds:[esi]
  41ad66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad67:	mov    DWORD PTR [ebx],edi
  41ad69:	push   esi
  41ad6a:	sbb    cl,BYTE PTR [ebp-0x71]
  41ad6d:	outs   dx,DWORD PTR ds:[esi]
  41ad6e:	retf   0xdc5a
  41ad71:	push   es
  41ad72:	js     0x41ad24
  41ad74:	sbb    edx,ecx
  41ad76:	test   al,0x10
  41ad78:	inc    eax
  41ad79:	nop
  41ad7a:	das    
  41ad7b:	sahf   
  41ad7c:	and    ebp,DWORD PTR [esi-0x19d6cd88]
  41ad82:	mov    WORD PTR [esi-0x14],ds
  41ad85:	in     eax,dx
  41ad86:	lods   eax,DWORD PTR ds:[esi]
  41ad87:	adc    BYTE PTR [edi-0x518714c],bl
  41ad8d:	sbb    DWORD PTR [eax-0x68cb628a],ebp
  41ad93:	int3   
  41ad94:	stos   BYTE PTR es:[edi],al
  41ad95:	jl     0x41ae10
  41ad97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad98:	fwait
  41ad99:	and    ecx,0xffffff85
  41ad9c:	mov    bl,0x75
  41ad9e:	cmc    
  41ad9f:	xor    eax,0xd6d23ca2
  41ada4:	stos   BYTE PTR es:[edi],al
  41ada5:	out    dx,al
  41ada6:	imul   BYTE PTR [eax]
  41ada8:	jbe    0x41ad49
  41adaa:	mov    esp,0xf9416413
  41adaf:	jmp    0x5aa9cff5
  41adb4:	mov    ebx,DWORD PTR [eax-0xc]
  41adb7:	mov    bl,0x51
  41adb9:	daa    
  41adba:	xor    esi,edi
  41adbc:	outs   dx,BYTE PTR ds:[esi]
  41adbd:	sbb    dl,ah
  41adbf:	in     al,0xbc
  41adc1:	inc    ecx
  41adc2:	inc    ebx
  41adc3:	lock es jle 0x41ae43
  41adc7:	lea    esi,[ebp+0x26]
  41adca:	inc    edi
  41adcb:	shl    BYTE PTR ds:0x87815c8,cl
  41add1:	stc    
  41add2:	int    0xc6
  41add4:	ds push ds
  41add6:	mov    WORD PTR [edx-0x3f89a07],ss
  41addc:	bound  ecx,QWORD PTR [ecx+ebp*2]
  41addf:	and    ch,bh
  41ade1:	jno    0x41ad93
  41ade3:	call   0x8a976e32
  41ade8:	addr16 push 0xffffffc6
  41adeb:	inc    ebp
  41adec:	mov    ecx,0x3cb3ba38
  41adf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf2:	mov    ah,0x57
  41adf4:	cld    
  41adf5:	sbb    DWORD PTR ds:0x54e3e92c,ebx
  41adfb:	xchg   edx,eax
  41adfc:	jp     0x41adec
  41adfe:	mov    ch,BYTE PTR [esi]
  41ae00:	adc    al,0x34
  41ae02:	mov    dh,BYTE PTR [esi-0x3cd59b84]
  41ae08:	mov    esp,0x51f76487
  41ae0d:	fbld   TBYTE PTR [ecx-0x43]
  41ae10:	and    eax,0x109f7010
  41ae15:	mov    esi,0xf0a01ad2
  41ae1a:	xor    DWORD PTR [edx-0x650d49e0],ebp
  41ae20:	or     cl,bh
  41ae22:	iret   
  41ae23:	cmovle edi,edx
  41ae26:	aas    
  41ae27:	out    dx,eax
  41ae28:	call   0x53120c78
  41ae2d:	add    al,ch
  41ae2f:	push   0xeba7dae4
  41ae34:	sbb    ah,BYTE PTR [edx+0x6a065a62]
  41ae3a:	dec    ebp
  41ae3b:	sar    DWORD PTR [ecx+eiz*4+0x215f17b2],1
  41ae42:	inc    eax
  41ae43:	jb     0x41ae8d
  41ae45:	lods   al,BYTE PTR ds:[esi]
  41ae46:	xchg   esp,eax
  41ae47:	dec    edx
  41ae48:	xchg   ebx,ebp
  41ae4a:	adc    al,cl
  41ae4c:	call   0x75be:0x573e2e97
  41ae53:	in     eax,0xd6
  41ae55:	repz mov edx,0x4414f7bd
  41ae5b:	push   esp
  41ae5c:	inc    esp
  41ae5d:	(bad)  
  41ae5e:	xchg   ecx,eax
  41ae5f:	cmp    DWORD PTR [edi],0x55
  41ae62:	fdiv   DWORD PTR [ebp+0x0]
  41ae65:	pop    edx
  41ae66:	lods   eax,DWORD PTR ds:[esi]
  41ae67:	ret    
  41ae68:	xchg   esp,eax
  41ae69:	mov    ds:0xa76e4bf9,al
  41ae6e:	mov    DWORD PTR [ebx],0xce1b53db
  41ae74:	jmp    FWORD PTR gs:[esi+0x64]
  41ae78:	adc    ch,BYTE PTR [ecx+esi*2-0x52a69e13]
  41ae7f:	dec    edi
  41ae80:	fcom   QWORD PTR [ebx]
  41ae82:	ds dec ecx
  41ae84:	dec    ecx
  41ae85:	jmp    0x41ae7c
  41ae87:	jbe    0x41aeee
  41ae89:	xlat   BYTE PTR ds:[ebx]
  41ae8a:	add    al,cl
  41ae8c:	cmp    DWORD PTR [esi-0x2d],edx
  41ae8f:	call   0x1d5be067
  41ae94:	cmp    al,BYTE PTR [ebx-0x77]
  41ae97:	mov    DWORD PTR [edi-0x2],ebp
  41ae9a:	shl    DWORD PTR [ecx],cl
  41ae9c:	in     eax,dx
  41ae9d:	add    bh,ah
  41ae9f:	sbb    al,0x9e
  41aea1:	mov    ds:0xa5e2e974,al
  41aea6:	and    DWORD PTR [esi+ecx*2],ebx
  41aea9:	xlat   BYTE PTR ds:[ebx]
  41aeaa:	loop   0x41af01
  41aeac:	rcl    DWORD PTR [ecx],cl
  41aeae:	ins    BYTE PTR es:[edi],dx
  41aeaf:	inc    edx
  41aeb0:	pop    esi
  41aeb1:	lea    ebx,[edi+0x78aa57ce]
  41aeb7:	(bad)  
  41aeb8:	jmp    0x41af1f
  41aeba:	cmp    esi,DWORD PTR [ebp-0x5d]
  41aebd:	fild   DWORD PTR [ebx+ecx*8-0x58]
  41aec1:	pop    esp
  41aec2:	into   
  41aec3:	mov    ah,0xc7
  41aec5:	test   al,0x5a
  41aec7:	and    BYTE PTR [ecx+0x55],cl
  41aeca:	or     al,0xdc
  41aecc:	xor    DWORD PTR [ebx],ebx
  41aece:	stc    
  41aecf:	xchg   bl,bh
  41aed1:	mov    ah,bl
  41aed3:	push   edi
  41aed4:	push   ss
  41aed5:	jb     0x41ae8e
  41aed7:	sbb    eax,0xd019cf12
  41aedc:	inc    edx
  41aedd:	fs jge 0x41aef8
  41aee0:	sub    BYTE PTR [edx],bl
  41aee2:	cmp    al,0x2a
  41aee4:	popf   
  41aee5:	jnp    0x41aeef
  41aee7:	imul   edi,edi,0xbe86ef94
  41aeed:	mov    esi,0xe9fcaac1
  41aef2:	int    0x21
  41aef4:	ds stos DWORD PTR es:[edi],eax
  41aef6:	in     al,0xea
  41aef8:	cdq    
  41aef9:	bound  edi,QWORD PTR [ecx]
  41aefb:	xchg   edx,eax
  41aefc:	icebp  
  41aefd:	or     ch,BYTE PTR [edi]
  41aeff:	test   eax,0x435d0fc
  41af04:	(bad)  
  41af05:	and    al,0xb1
  41af07:	sbb    esp,esi
  41af09:	adc    al,0x93
  41af0b:	cdq    
  41af0c:	xchg   ecx,eax
  41af0d:	cmp    BYTE PTR [esi-0x7d],bh
  41af10:	test   eax,0xd01a65a9
  41af15:	push   ebp
  41af16:	jmp    0x41af4b
  41af18:	adc    eax,0xe3124202
  41af1d:	mov    bh,0x8b
  41af1f:	lahf   
  41af20:	inc    ebx
  41af21:	jbe    0x41af2d
  41af23:	push   ebp
  41af24:	cmp    DWORD PTR [esi],0xffffffbb
  41af27:	cmp    ah,0x9
  41af2a:	rol    DWORD PTR [esi-0x4e],0xd6
  41af2e:	mov    eax,ds:0x100ab28d
  41af33:	pop    edi
  41af34:	mov    ds:0xda6f8dea,eax
  41af39:	ss dec esi
  41af3b:	or     eax,0xfa7abbf9
  41af40:	cwde   
  41af41:	iret   
  41af42:	adc    DWORD PTR [ecx+0x7ad36eaa],ebp
  41af48:	jmp    0x4f06:0x249eef68
  41af4f:	pop    edi
  41af50:	outs   dx,DWORD PTR ds:[esi]
  41af51:	imul   ebp,esp,0x8
  41af54:	(bad)  
  41af55:	call   0xe572da5e
  41af5a:	loope  0x41af53
  41af5c:	iret   
  41af5d:	add    edi,DWORD PTR [esi]
  41af5f:	xchg   edi,eax
  41af60:	pusha  
  41af61:	sbb    eax,0x96500b8d
  41af66:	jl     0x41afd7
  41af68:	mov    edx,0xb5a0145b
  41af6d:	call   0x98c9ba26
  41af72:	fs popa 
  41af74:	outs   dx,BYTE PTR ds:[esi]
  41af75:	pop    edi
  41af76:	sbb    dh,ah
  41af78:	push   ecx
  41af79:	data16 jae 0x41af2b
  41af7c:	mov    WORD PTR [edx],ss
  41af7e:	jg     0x41af35
  41af80:	fwait
  41af81:	in     al,0x2f
  41af83:	loope  0x41af4e
  41af85:	mov    esi,0xb66c5e3b
  41af8a:	idiv   edi
  41af8c:	repz fistp QWORD PTR [esi-0x1f5c6cf7]
  41af93:	cmp    eax,DWORD PTR [ebx+ebp*8]
  41af96:	jb     0x41af88
  41af98:	pop    es
  41af99:	adc    DWORD PTR [esi+edx*1],esp
  41af9c:	test   BYTE PTR [ebx+0x5e],cl
  41af9f:	or     eax,ecx
  41afa1:	or     eax,0x3c2cb48b
  41afa6:	push   es
  41afa7:	sub    BYTE PTR [esi],ah
  41afa9:	push   0xf158b2ac
  41afae:	cmp    edx,eax
  41afb0:	xor    eax,0x769d6dd7
  41afb5:	mov    ah,0x44
  41afb7:	mov    ?,WORD PTR [edx]
  41afb9:	add    DWORD PTR [ecx+0x30],edi
  41afbc:	scas   al,BYTE PTR es:[edi]
  41afbd:	or     eax,0x3a71e695
  41afc2:	xchg   ebp,eax
  41afc3:	jb     0x41afcf
  41afc5:	sbb    al,0x4
  41afc7:	sub    al,0x15
  41afc9:	jl     0x41b01b
  41afcb:	xor    bh,BYTE PTR [esi-0x7b371c53]
  41afd1:	add    DWORD PTR [ecx-0x1ed8eb6e],ecx
  41afd7:	sbb    al,0x33
  41afd9:	mov    esi,0xac336b58
  41afde:	mov    edi,0xcddfef7f
  41afe3:	loop   0x41b00e
  41afe5:	into   
  41afe6:	cmp    dh,BYTE PTR [edi+esi*2]
  41afe9:	mov    al,ds:0xf72a83ca
  41afee:	mov    ebp,DWORD PTR [esi+0xcf60086]
  41aff4:	lea    eax,[ecx]
  41aff6:	jae    0x41afb8
  41aff8:	jecxz  0x41afc1
  41affa:	push   ecx
  41affb:	mov    al,ds:0x4e94146
  41b000:	data16 test BYTE PTR ds:0x29bea28c,cl
  41b007:	loop   0x41b059
  41b009:	in     al,0x50
  41b00b:	cdq    
  41b00c:	cld    
  41b00d:	daa    
  41b00e:	ins    DWORD PTR es:[edi],dx
  41b00f:	xchg   edx,eax
  41b010:	jp     0x41b00a
  41b012:	and    ah,dh
  41b014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b015:	rcr    BYTE PTR ds:0x130b448e,0x9a
  41b01c:	add    ebx,DWORD PTR [ecx-0x60bdfeed]
  41b022:	push   edx
  41b023:	pop    edx
  41b024:	imul   ecx,DWORD PTR [ebx+0x1c],0xffffffcb
  41b028:	inc    ebx
  41b029:	std    
  41b02a:	je     0x41affd
  41b02c:	mov    ebp,0x109bd567
  41b031:	fld    st(1)
  41b033:	xchg   edx,eax
  41b034:	fnstenv [ebx]
  41b036:	fld    QWORD PTR [ebx+esi*4+0x33]
  41b03a:	mov    ecx,0xf76f6b01
  41b03f:	jge    0x41b074
  41b041:	xor    DWORD PTR [edx],esi
  41b043:	pop    edi
  41b044:	stc    
  41b045:	enter  0x2091,0xa0
  41b049:	xor    ebp,DWORD PTR [eax-0x50bd1a63]
  41b04f:	pop    ebp
  41b050:	fcomp  QWORD PTR [eax+0x42498ed3]
  41b056:	outs   dx,DWORD PTR ds:[esi]
  41b057:	(bad)  
  41b059:	fdiv   DWORD PTR [eax+0x2ee2a403]
  41b05f:	ds dec eax
  41b061:	jno    0x41b00c
  41b063:	or     esi,DWORD PTR [esi-0x6b]
  41b066:	pushf  
  41b067:	adc    eax,0xb499674e
  41b06c:	(bad)  
  41b06d:	sbb    eax,0xaef80db5
  41b072:	enter  0x9ccb,0xbc
  41b076:	test   ebx,0x1e499e91
  41b07c:	xchg   ebx,eax
  41b07d:	and    BYTE PTR [edx-0x51],dl
  41b080:	mov    WORD PTR [esi-0x214443bd],cs
  41b086:	xchg   esp,eax
  41b087:	cmp    bh,bl
  41b089:	int    0x77
  41b08b:	adc    al,0x17
  41b08d:	sub    DWORD PTR [edx+0x612f2dc2],eax
  41b093:	pop    edx
  41b094:	jl     0x41b018
  41b096:	adc    ebp,DWORD PTR [ebx+0x4e]
  41b099:	xchg   ecx,eax
  41b09a:	mov    edx,0x603aa2ff
  41b09f:	mov    ah,0xbb
  41b0a1:	push   cs
  41b0a2:	je     0x41b041
  41b0a4:	mov    edi,0xa99e8469
  41b0a9:	std    
  41b0aa:	cmp    dl,BYTE PTR [eax-0x4f]
  41b0ad:	fdiv   DWORD PTR [edi]
  41b0af:	lods   al,BYTE PTR ds:[esi]
  41b0b0:	fldcw  WORD PTR [eax]
  41b0b2:	arpl   WORD PTR [eax-0x227312b9],bx
  41b0b8:	cmp    ch,0x94
  41b0bb:	sub    al,0xcb
  41b0bd:	inc    ecx
  41b0be:	pop    edx
  41b0bf:	ja     0x41b0ec
  41b0c1:	adc    dh,dl
  41b0c3:	pop    ebp
  41b0c4:	lahf   
  41b0c5:	jmp    0x540b:0xe86dbad5
  41b0cc:	and    bh,BYTE PTR [esi]
  41b0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0cf:	loop   0x41b0f8
  41b0d1:	iret   
  41b0d2:	adc    esp,DWORD PTR [ecx]
  41b0d4:	(bad)  
  41b0d5:	mov    eax,0x43dd0342
  41b0da:	mov    DWORD PTR [edi],edx
  41b0dc:	mov    bh,0xbe
  41b0de:	inc    esi
  41b0df:	int3   
  41b0e0:	cdq    
  41b0e1:	dec    ecx
  41b0e2:	stc    
  41b0e3:	mov    eax,ds:0x59eb960c
  41b0e8:	push   eax
  41b0e9:	imul   esp,DWORD PTR [esi+eax*2+0x7114b528],0xe7b95791
  41b0f4:	aad    0xd3
  41b0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0f7:	dec    edx
  41b0f8:	mov    cl,0x8f
  41b0fa:	sub    bh,BYTE PTR [ebx+edi*8-0x2186933e]
  41b101:	es push esp
  41b103:	dec    ebp
  41b104:	outs   dx,DWORD PTR ds:[esi]
  41b105:	add    cl,BYTE PTR [ebx-0x72]
  41b108:	ret    0x8d8b
  41b10b:	rcl    BYTE PTR [ecx+0x25],cl
  41b10e:	adc    al,0x93
  41b110:	cwde   
  41b111:	fild   QWORD PTR [edx-0x3d77d75a]
  41b117:	and    al,0xf8
  41b119:	rol    BYTE PTR [esi+0x46],0xcd
  41b11d:	sbb    dh,BYTE PTR [ecx+0x7296a491]
  41b123:	icebp  
  41b124:	and    bh,BYTE PTR [ecx]
  41b126:	xchg   ecx,eax
  41b127:	popf   
  41b128:	lods   al,BYTE PTR ds:[esi]
  41b129:	inc    ecx
  41b12a:	ret    
  41b12b:	cmp    ecx,esi
  41b12d:	sbb    BYTE PTR [ecx],bh
  41b12f:	jmp    0x3737:0x2ce40a4f
  41b136:	pop    ss
  41b137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b138:	out    0x2c,al
  41b13a:	mov    eax,0x15c9c3df
  41b13f:	adc    ebx,DWORD PTR [ebx+eax*2+0x74]
  41b143:	push   esi
  41b144:	jae    0x41b16c
  41b146:	push   0x2a81a0d7
  41b14b:	test   DWORD PTR [ebp+ebx*2-0x58],eax
  41b14f:	pop    ebx
  41b150:	mov    al,0x14
  41b152:	jne    0x41b190
  41b154:	mov    al,ds:0xb842af96
  41b159:	and    DWORD PTR es:[eax],ebx
  41b15c:	jl     0x41b100
  41b15e:	(bad)  
  41b160:	popf   
  41b161:	inc    ebp
  41b162:	jle    0x41b1df
  41b164:	in     eax,0x1
  41b166:	xchg   ecx,eax
  41b167:	in     eax,0x62
  41b169:	int    0xc3
  41b16b:	push   eax
  41b16c:	adc    ah,BYTE PTR [edi+0x76]
  41b16f:	jmp    0x41b169
  41b171:	sar    BYTE PTR [ebx-0x74a5ace0],1
  41b177:	jo     0x41b111
  41b179:	sub    eax,0xde17d239
  41b17e:	dec    edx
  41b17f:	xor    al,0x38
  41b181:	push   eax
  41b182:	sbb    eax,ebp
  41b184:	push   ebx
  41b185:	pop    esp
  41b186:	pop    eax
  41b187:	loope  0x41b19a
  41b189:	mov    cl,0x5e
  41b18b:	mov    fs,eax
  41b18d:	mov    dl,0xb2
  41b18f:	xchg   ecx,eax
  41b190:	cwde   
  41b191:	cmp    BYTE PTR [eax],0x22
  41b194:	enter  0x6d0e,0xd7
  41b198:	dec    esp
  41b19a:	sbb    ecx,DWORD PTR [esi-0x56]
  41b19d:	retf   0x4df5
  41b1a0:	mov    ds:0x18f3f94f,al
  41b1a5:	mov    ebp,edi
  41b1a7:	add    ecx,ebx
  41b1a9:	loope  0x41b14d
  41b1ab:	out    dx,eax
  41b1ac:	ds cli 
  41b1ae:	cmc    
  41b1af:	in     al,0xec
  41b1b1:	and    dl,ch
  41b1b3:	les    ebp,FWORD PTR [esi-0x13]
  41b1b6:	mul    BYTE PTR [edi-0x27cf3934]
  41b1bc:	push   es
  41b1bd:	adc    al,BYTE PTR [ebx]
  41b1bf:	jns    0x41b1af
  41b1c1:	inc    edx
  41b1c2:	(bad)  [edi+0x24]
  41b1c5:	jmp    0x7c65bb56
  41b1ca:	mov    al,ds:0x27dbec72
  41b1cf:	ds add al,0x23
  41b1d2:	fisubr DWORD PTR [edx]
  41b1d4:	jl     0x41b15e
  41b1d6:	cmp    ebp,DWORD PTR [eax-0x2f16ef76]
  41b1dc:	sti    
  41b1dd:	daa    
  41b1de:	fisub  DWORD PTR [ebp+0x5256e90d]
  41b1e4:	int3   
  41b1e5:	cs adc al,0x5b
  41b1e8:	jmp    0x512b3b67
  41b1ed:	out    0x6e,al
  41b1ef:	repnz mov bl,0x32
  41b1f2:	mov    ah,0x7e
  41b1f4:	dec    eax
  41b1f5:	outs   dx,DWORD PTR ds:[esi]
  41b1f6:	sbb    DWORD PTR [edi+0x283d1adf],ebx
  41b1fc:	aas    
  41b1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fe:	add    eax,0xf3ffb894
  41b203:	loopne 0x41b263
  41b205:	cmp    eax,edi
  41b207:	cli    
  41b208:	xchg   edi,eax
  41b209:	xor    BYTE PTR [ecx-0x487fe0ba],cl
  41b20f:	out    0xdf,eax
  41b211:	push   ecx
  41b212:	xor    al,0x61
  41b214:	jbe    0x41b281
  41b216:	push   edi
  41b217:	mov    dh,0x29
  41b219:	lea    esp,[edx+esi*8]
  41b21c:	hlt    
  41b21d:	stos   BYTE PTR es:[edi],al
  41b21e:	dec    ebx
  41b21f:	mov    edx,0x9c8e9bc7
  41b224:	int3   
  41b225:	mov    edx,0x4264fef1
  41b22a:	sub    bh,bl
  41b22c:	inc    eax
  41b22d:	push   0xffffffe0
  41b22f:	fsubp  st(6),st
  41b231:	lods   al,BYTE PTR ds:[esi]
  41b232:	aas    
  41b233:	inc    bl
  41b235:	inc    edi
  41b236:	cmp    BYTE PTR [eax-0x6498f437],dh
  41b23c:	sub    DWORD PTR [edx-0x14],ecx
  41b23f:	sub    eax,0x98077c2b
  41b244:	mov    ebp,0x340ffcdf
  41b249:	retf   0xef07
  41b24c:	jmp    0x846e7824
  41b251:	int    0x76
  41b253:	and    al,0x37
  41b255:	dec    edi
  41b256:	mov    gs,WORD PTR [edx-0x12]
  41b259:	pop    ds
  41b25a:	test   DWORD PTR [ebp-0x2c9a4007],edi
  41b260:	cli    
  41b261:	jae    0x41b23a
  41b263:	pop    ds
  41b264:	call   0xb993:0x1f43c939
  41b26b:	mov    edi,0xf45d7eaa
  41b270:	fld    TBYTE PTR [esi]
  41b272:	je     0x41b251
  41b274:	jmp    0x5b3e3a8d
  41b279:	stc    
  41b27a:	jmp    0x41b258
  41b27c:	jno    0x41b293
  41b27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b27f:	lods   eax,DWORD PTR ds:[esi]
  41b280:	dec    edi
  41b281:	outs   dx,DWORD PTR ds:[esi]
  41b282:	in     al,0xd2
  41b284:	fucomi st,st(7)
  41b286:	aaa    
  41b287:	inc    eax
  41b288:	je     0x41b2e9
  41b28a:	push   ds
  41b28b:	adc    ebx,DWORD PTR [esi]
  41b28d:	xlat   BYTE PTR ds:[ebx]
  41b28e:	sahf   
  41b28f:	fstp   QWORD PTR [edi]
  41b291:	adc    al,0xa1
  41b293:	xor    al,0x54
  41b295:	inc    ebx
  41b296:	cmp    BYTE PTR [ebp+0x22],dl
  41b299:	jp     0x41b26a
  41b29b:	cli    
  41b29c:	sub    ch,BYTE PTR [esi-0x68]
  41b29f:	jb     0x41b2d5
  41b2a1:	dec    eax
  41b2a2:	mov    ds:0x3dd21f58,al
  41b2a7:	push   ss
  41b2a8:	test   eax,0xe6ed40d3
  41b2ad:	jno    0x41b28c
  41b2af:	mov    bh,0x72
  41b2b1:	lahf   
  41b2b2:	retf   
  41b2b3:	xchg   ebx,eax
  41b2b4:	sbb    esi,esi
  41b2b6:	call   0xc2560850
  41b2bb:	dec    eax
  41b2bc:	out    dx,eax
  41b2bd:	push   ebx
  41b2be:	cmp    DWORD PTR [edx+edi*8],eax
  41b2c1:	sub    ebp,DWORD PTR [eax+0x6f]
  41b2c4:	xchg   DWORD PTR [edx-0x295e09c2],esp
  41b2ca:	loopne 0x41b2be
  41b2cc:	or     cl,0x3c
  41b2cf:	imul   BYTE PTR [esi]
  41b2d1:	scas   eax,DWORD PTR es:[edi]
  41b2d2:	jmp    0x41b2ba
  41b2d4:	cmc    
  41b2d5:	fidivr DWORD PTR [edi-0x6b]
  41b2d8:	sbb    BYTE PTR [ebx-0x29],al
  41b2db:	arpl   WORD PTR [ebp+ebx*1-0x331ccc2],bp
  41b2e2:	gs stc 
  41b2e4:	lahf   
  41b2e5:	lods   al,BYTE PTR ds:[esi]
  41b2e6:	js     0x41b35e
  41b2e8:	xchg   BYTE PTR [edx+ecx*8+0x70],dl
  41b2ec:	lahf   
  41b2ed:	(bad)  
  41b2ee:	in     al,0xee
  41b2f0:	cwde   
  41b2f1:	sub    al,0x17
  41b2f3:	mov    al,ds:0x10515d9d
  41b2f8:	je     0x41b291
  41b2fa:	clc    
  41b2fb:	inc    eax
  41b2fc:	push   edx
  41b2fd:	mov    esi,0xa7d0ada2
  41b302:	push   edi
  41b303:	lods   eax,DWORD PTR ds:[esi]
  41b304:	pop    edx
  41b305:	nop
  41b306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b307:	mov    esp,0x97d5fc81
  41b30c:	clc    
  41b30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b30e:	jge    0x41b32e
  41b310:	push   esi
  41b311:	and    al,0xf3
  41b313:	add    DWORD PTR [edi-0x38b1cba],ecx
  41b319:	enter  0x7269,0xb5
  41b31d:	sbb    BYTE PTR [eax-0x126e1757],al
  41b323:	dec    esi
  41b324:	jecxz  0x41b322
  41b326:	jmp    0x41b37d
  41b328:	mov    bh,0x9c
  41b32a:	out    0x25,al
  41b32c:	and    bl,BYTE PTR [ebp+0x2e]
  41b32f:	ja     0x68871747
  41b335:	je     0x41b398
  41b337:	lea    ecx,[esi]
  41b339:	adc    BYTE PTR [edi-0x575bd604],dh
  41b33f:	pop    ss
  41b340:	cs xchg esi,eax
  41b342:	and    bh,BYTE PTR [ebx]
  41b344:	add    DWORD PTR [ebx],esi
  41b346:	mov    esp,0xef861a7a
  41b34b:	into   
  41b34c:	mov    DWORD PTR [esi+0x1],ebp
  41b34f:	jge    0x41b37e
  41b351:	mov    eax,ds:0x1d24773c
  41b356:	xor    bl,0xa4
  41b359:	xchg   ecx,eax
  41b35a:	call   0xb6a5cf95
  41b35f:	ja     0x41b2f8
  41b361:	fild   DWORD PTR [esi+0x5a339bc1]
  41b367:	fs ins DWORD PTR es:[edi],dx
  41b369:	jo     0x41b368
  41b36b:	cwde   
  41b36c:	jb     0x41b33b
  41b36e:	mov    bl,0xd6
  41b370:	gs js  0x41b35c
  41b373:	daa    
  41b374:	data16 aaa 
  41b376:	data16 add al,0xe5
  41b379:	cwde   
  41b37a:	cmp    ch,BYTE PTR [eax-0x24efd29]
  41b380:	imul   esp,DWORD PTR [ebp+0x5185fdac],0x4f27bab8
  41b38a:	or     eax,0x8db46f7c
  41b38f:	inc    edx
  41b390:	hlt    
  41b391:	dec    esp
  41b392:	lds    esp,FWORD PTR [ecx-0x194a0de8]
  41b398:	dec    esi
  41b399:	xor    al,0x82
  41b39b:	xor    DWORD PTR [edi-0x19],0xffffffa3
  41b39f:	sub    BYTE PTR [eax],al
  41b3a1:	jmp    0xa111ff70
  41b3a6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b3a8:	sar    BYTE PTR [esi-0x48],1
  41b3ab:	or     dl,BYTE PTR [edx-0x11f79a3]
  41b3b1:	pop    eax
  41b3b2:	call   0x5d81:0xc2c191d9
  41b3b9:	mov    ch,0xd5
  41b3bb:	retf   0xcfe5
  41b3be:	cmp    al,0xb5
  41b3c0:	test   DWORD PTR [edx+0x7ffb4578],0xbfcd978e
  41b3ca:	sbb    bh,BYTE PTR [ecx-0x60]
  41b3cd:	clc    
  41b3ce:	sbb    esi,esi
  41b3d0:	inc    edi
  41b3d1:	adc    bl,dl
  41b3d3:	cmp    esi,DWORD PTR [edi+0x707f4858]
  41b3d9:	stos   DWORD PTR es:[edi],eax
  41b3da:	loope  0x41b397
  41b3dc:	or     edx,edi
  41b3de:	sbb    al,0x60
  41b3e0:	or     DWORD PTR [ebx+0x5ca613ff],eax
  41b3e6:	and    eax,0x81e72fc8
  41b3eb:	jno    0x41b426
  41b3ed:	xchg   edi,eax
  41b3ee:	and    DWORD PTR [bp+si+0x20a9],ebx
  41b3f3:	fnsave [ebp-0x73]
  41b3f6:	sar    BYTE PTR [edi],0x45
  41b3f9:	cld    
  41b3fa:	shr    ch,cl
  41b3fc:	inc    edi
  41b3fd:	fbstp  TBYTE PTR [edx-0x7e]
  41b400:	gs addr16 enter 0x420d,0xd
  41b406:	leave  
  41b407:	ss xchg esp,eax
  41b409:	mov    WORD PTR [edx+0x46],es
  41b40c:	mov    bh,0xbd
  41b40e:	push   ebp
  41b40f:	push   ds
  41b410:	faddp  st(5),st
  41b412:	add    bh,cl
  41b414:	(bad)  
  41b415:	fisubr WORD PTR [eax-0x61]
  41b418:	xchg   ebx,esp
  41b41a:	nop
  41b41b:	push   es
  41b41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b41d:	add    DWORD PTR [ebp-0x8],esi
  41b420:	and    al,0x20
  41b422:	lea    ecx,[ecx]
  41b424:	rcr    BYTE PTR [edx],cl
  41b426:	cli    
  41b427:	mov    ebp,0x3614a2b5
  41b42c:	test   BYTE PTR [ebx-0x66],0x99
  41b430:	jae    0x41b4a1
  41b432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b433:	lea    ebx,[eax-0x3a]
  41b436:	pop    es
  41b437:	xchg   al,al
  41b439:	out    dx,eax
  41b43a:	retf   
  41b43b:	and    DWORD PTR [esi+0x17],0x7
  41b43f:	push   ecx
  41b440:	lock add edx,ebp
  41b443:	sub    BYTE PTR [edx],ah
  41b445:	sar    BYTE PTR ds:0xa2a83a58,1
  41b44b:	ds inc esp
  41b44d:	pusha  
  41b44e:	out    dx,al
  41b44f:	jb     0x41b462
  41b451:	sahf   
  41b452:	popf   
  41b453:	xor    ebx,ebp
  41b455:	retf   0xb26d
  41b458:	std    
  41b459:	test   al,0x89
  41b45b:	les    ecx,FWORD PTR [edi+0x13]
  41b45e:	cli    
  41b45f:	int    0x7f
  41b461:	add    al,dl
  41b463:	add    eax,0x2bbe4fcf
  41b468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b469:	out    dx,eax
  41b46a:	in     al,0xd4
  41b46c:	ret    0xc7c1
  41b46f:	or     edi,0x7
  41b472:	std    
  41b473:	sub    BYTE PTR [esi+0x36],0xfd
  41b477:	shr    DWORD PTR [edi-0x4b],1
  41b47a:	cmp    ch,BYTE PTR [ecx+0x5516faaf]
  41b480:	test   dl,0x1e
  41b483:	sub    al,0xde
  41b485:	add    eax,0x17d8e731
  41b48a:	ja     0x41b446
  41b48c:	ins    BYTE PTR es:[edi],dx
  41b48d:	xor    DWORD PTR [esi],ebx
  41b48f:	mov    eax,ds:0xd6781bb1
  41b494:	outs   dx,BYTE PTR ds:[esi]
  41b495:	add    eax,DWORD PTR [esi+0x692d998]
  41b49b:	sbb    al,0x59
  41b49d:	(bad)  
  41b49e:	cmp    eax,0x3acf4225
  41b4a3:	mov    edx,0xb4be07c5
  41b4a8:	mov    ds:0x8ee2f039,al
  41b4ad:	push   ecx
  41b4ae:	mov    es,WORD PTR [ecx+ebx*2]
  41b4b1:	lods   al,BYTE PTR ds:[esi]
  41b4b2:	je     0x41b4c5
  41b4b4:	cmp    al,0x30
  41b4b6:	cmp    ah,bh
  41b4b8:	jmp    0x41b4e7
  41b4ba:	sahf   
  41b4bb:	repz fmul DWORD PTR [edi-0x4ca3d504]
  41b4c2:	jp     0x41b4a2
  41b4c4:	mov    al,0x9e
  41b4c6:	push   edi
  41b4c7:	sar    BYTE PTR [esi+0x13f4451d],cl
  41b4cd:	xor    eax,0x6da7efa2
  41b4d2:	inc    esi
  41b4d3:	out    dx,al
  41b4d4:	int    0xc7
  41b4d6:	adc    eax,DWORD PTR [edx]
  41b4d8:	jns    0x41b4d1
  41b4da:	int    0xee
  41b4dc:	add    esi,DWORD PTR [ebx]
  41b4de:	push   esi
  41b4df:	ss jge 0x41b4f2
  41b4e2:	outs   dx,DWORD PTR ds:[esi]
  41b4e3:	sub    WORD PTR [di],bp
  41b4e7:	dec    esp
  41b4e8:	mov    ecx,0xc5a752a2
  41b4ed:	dec    eax
  41b4ee:	pop    esi
  41b4ef:	fadd   QWORD PTR [edx+0x24]
  41b4f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f3:	retf   
  41b4f4:	or     al,0x94
  41b4f6:	or     eax,0xbcdc20f4
  41b4fb:	test   BYTE PTR [edi+0x20],ch
  41b4fe:	jmp    0x41b544
  41b500:	xchg   ebx,eax
  41b501:	xchg   ebx,eax
  41b502:	xor    DWORD PTR [ecx-0x46],ecx
  41b505:	jg     0x41b4a6
  41b507:	push   edi
  41b508:	aad    0xa5
  41b50a:	fsubr  st(6),st
  41b50c:	xor    esp,esp
  41b50e:	popf   
  41b50f:	hlt    
  41b510:	lods   eax,DWORD PTR ds:[esi]
  41b511:	mov    ch,0x74
  41b513:	pop    esi
  41b514:	(bad)  [edx]
  41b516:	push   cs
  41b517:	dec    edx
  41b518:	inc    ecx
  41b519:	sub    ah,BYTE PTR [esi+0x6]
  41b51c:	ja     0x41b546
  41b51e:	scas   eax,DWORD PTR es:[edi]
  41b51f:	cmp    ebp,DWORD PTR [esi-0x256afd78]
  41b525:	stc    
  41b526:	add    eax,0xd4338eac
  41b52b:	das    
  41b52c:	push   esp
  41b52d:	mov    edi,0xd3f4fc92
  41b532:	jle    0x41b4f6
  41b534:	adc    al,0xfd
  41b536:	test   eax,0x7c98bcb7
  41b53b:	sub    ebx,0xfffffff1
  41b53e:	int    0x11
  41b540:	aas    
  41b541:	jg     0x41b4f3
  41b543:	std    
  41b544:	pop    ebp
  41b545:	adc    DWORD PTR [eax+0x43],0x9185a05b
  41b54c:	mov    ebx,0x12a190eb
  41b551:	les    esi,FWORD PTR [ecx]
  41b553:	les    edi,FWORD PTR [ebp+0x65215aa1]
  41b559:	add    DWORD PTR [eax+0x73],edi
  41b55c:	xor    al,0x27
  41b55e:	jo     0x41b4e0
  41b560:	stc    
  41b561:	push   es
  41b562:	loop   0x41b574
  41b564:	ss (bad) 
  41b566:	cmp    eax,ecx
  41b568:	std    
  41b569:	inc    ebx
  41b56a:	cmp    eax,0x2473a36f
  41b56f:	into   
  41b570:	pop    esi
  41b571:	nop
  41b572:	xchg   edi,eax
  41b573:	sub    al,0xa6
  41b575:	and    DWORD PTR [ecx],edx
  41b577:	mov    gs:0xb80e8661,eax
  41b57d:	mov    cl,0x21
  41b57f:	je     0x41b595
  41b581:	shl    BYTE PTR [edi+0x6d],cl
  41b584:	xchg   esi,eax
  41b585:	adc    BYTE PTR [edi-0x2],ah
  41b588:	in     eax,dx
  41b589:	mov    ds:0xed2a3bda,al
  41b58e:	pop    ecx
  41b58f:	jmp    0x41b600
  41b591:	pusha  
  41b592:	cmp    DWORD PTR [edx+eiz*1+0x12],eax
  41b596:	arpl   si,ax
  41b598:	lock xchg edx,eax
  41b59a:	das    
  41b59b:	test   bl,ah
  41b59d:	sbb    ch,BYTE PTR [edi]
  41b59f:	xor    bl,BYTE PTR [eax+0x3a81c2e5]
  41b5a5:	pop    ebp
  41b5a6:	lahf   
  41b5a7:	mov    edi,edx
  41b5a9:	loop   0x41b530
  41b5ab:	add    al,dh
  41b5ad:	add    BYTE PTR [ecx-0x748dff6c],dl
  41b5b3:	shl    bl,1
  41b5b5:	xor    BYTE PTR [edx+0x2f],0xe4
  41b5b9:	lods   eax,DWORD PTR ds:[esi]
  41b5ba:	xor    eax,0x67063a28
  41b5bf:	je     0x41b620
  41b5c1:	enter  0xeff6,0x94
  41b5c5:	and    bh,BYTE PTR [ebx]
  41b5c7:	mov    esi,0xeea4b571
  41b5cc:	shr    DWORD PTR [ecx+esi*4],0xe0
  41b5d0:	pop    ebx
  41b5d1:	cmp    BYTE PTR [eax-0x414b4a88],dl
  41b5d7:	mov    ch,ah
  41b5d9:	clc    
  41b5da:	test   esp,esp
  41b5dc:	int3   
  41b5dd:	xchg   edi,eax
  41b5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5df:	add    ecx,DWORD PTR [ebp+0x4c]
  41b5e2:	mov    eax,ds:0x688f30
  41b5e7:	dec    ebx
  41b5e8:	xchg   edx,eax
  41b5e9:	mov    esp,0xfce310c
  41b5ee:	frstor [edx]
  41b5f0:	mov    ecx,0x14a122f7
  41b5f5:	jne    0x41b60f
  41b5f7:	sbb    ebx,edx
  41b5f9:	sbb    ah,dl
  41b5fb:	pop    eax
  41b5fc:	mov    BYTE PTR [ebp+0x5609af1a],dl
  41b602:	pop    ecx
  41b603:	fistp  WORD PTR [eax]
  41b605:	sub    DWORD PTR [ebp+0x7e],edi
  41b608:	stos   BYTE PTR es:[edi],al
  41b609:	les    esp,FWORD PTR [ebx]
  41b60b:	mov    bl,0xa2
  41b60d:	sbb    BYTE PTR [esi+eiz*8],dh
  41b610:	xor    eax,0x9b0d81fe
  41b615:	dec    esi
  41b616:	sahf   
  41b617:	push   esi
  41b618:	aas    
  41b619:	xchg   ecx,eax
  41b61a:	test   BYTE PTR [ecx+0x6b20f1d5],ch
  41b620:	je     0x41b5b9
  41b622:	lds    edi,FWORD PTR [ecx]
  41b624:	jecxz  0x41b662
  41b626:	sbb    DWORD PTR [ecx+eax*4],ebp
  41b629:	test   BYTE PTR [eax-0x7eae65d],0x17
  41b630:	sub    ebx,ebp
  41b632:	ret    
  41b633:	adc    eax,0xff6a50a4
  41b638:	mov    DWORD PTR [edx+ebp*8+0x2a],ebx
  41b63c:	pop    ecx
  41b63d:	popf   
  41b63e:	lahf   
  41b63f:	push   0x8ba5f7ff
  41b644:	push   ebp
  41b645:	mov    al,0x81
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a64f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a653
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a657
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a65b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a65f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a663
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42984b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a66b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a633
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429bcf
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a63b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a63f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a643
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a647
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	rcl    DWORD PTR [edi-0x445011f6],cl
  41bf7a:	stc    
  41bf7b:	add    BYTE PTR [ebx-0x7c7ca327],0x17
  41bf82:	lods   al,BYTE PTR ds:[esi]
  41bf83:	int    0x37
  41bf85:	pop    edx
  41bf86:	inc    edx
  41bf87:	aam    0xdd
  41bf89:	mov    BYTE PTR [esi-0x2524794f],bh
  41bf8f:	xchg   ebp,eax
  41bf90:	scas   eax,DWORD PTR es:[edi]
  41bf91:	push   0xffffffbf
  41bf93:	repnz inc BYTE PTR [ebp-0x3d]
  41bf97:	out    0x72,eax
  41bf99:	sub    BYTE PTR [eax-0x57],cl
  41bf9c:	aam    0x84
  41bf9e:	jle    0x41bf56
  41bfa0:	or     dh,BYTE PTR [edi+0x52]
  41bfa3:	enter  0x7919,0x41
  41bfa7:	jle    0x41bfcb
  41bfa9:	adc    al,0xb2
  41bfab:	cmp    DWORD PTR [esi-0x34af3ba],esi
  41bfb1:	push   0xf9854ed0
  41bfb6:	cmp    eax,0xf449c8c1
  41bfbb:	repnz add eax,0xf8a0afd1
  41bfc1:	and    BYTE PTR [eax-0x68],dl
  41bfc4:	push   ds
  41bfc5:	sub    al,0x7d
  41bfc7:	mov    edi,0x142466cb
  41bfcc:	data16 sti 
  41bfce:	scas   al,BYTE PTR es:[edi]
  41bfcf:	scas   eax,DWORD PTR es:[edi]
  41bfd0:	mov    ecx,0x964e9970
  41bfd5:	xor    DWORD PTR [ebx-0x10b299],esi
  41bfdb:	sbb    BYTE PTR ds:0xc03784b0,dl
  41bfe1:	out    0xd,eax
  41bfe3:	inc    edi
  41bfe4:	ret    
  41bfe5:	adc    ebp,DWORD PTR [ebx+0x74]
  41bfe8:	or     al,0xd2
  41bfea:	push   ss
  41bfeb:	or     al,0x89
  41bfed:	pusha  
  41bfee:	aad    0xb1
  41bff0:	test   DWORD PTR [edx+ecx*4+0x5d04654],ebx
  41bff7:	jae    0x41bf94
  41bff9:	les    edi,FWORD PTR [esi]
  41bffb:	jmp    0xedc55a3c
  41c000:	mov    ecx,0xef3aabdb
  41c005:	lock setnp BYTE PTR [edx]
  41c009:	aaa    
  41c00a:	pop    ebx
  41c00b:	dec    esp
  41c00c:	xchg   DWORD PTR [ebp-0x6a985532],ebp
  41c012:	xchg   ebp,eax
  41c013:	ret    0x585a
  41c016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c017:	aaa    
  41c018:	mov    edi,0xb549c122
  41c01d:	cmp    esi,DWORD PTR [edi]
  41c01f:	rcr    BYTE PTR [eax-0x7fe7ea63],0x58
  41c026:	push   esi
  41c027:	sub    al,0x43
  41c029:	adc    al,0x85
  41c02b:	loope  0x41c005
  41c02d:	mov    ah,BYTE PTR [edx]
  41c02f:	cwde   
  41c030:	push   ss
  41c031:	sbb    ah,cl
  41c033:	stc    
  41c034:	mov    ebx,0xcc10cb45
  41c039:	aam    0x66
  41c03b:	inc    ebx
  41c03c:	jae    0x41c00a
  41c03e:	outs   dx,DWORD PTR ds:[esi]
  41c03f:	dec    ecx
  41c040:	adc    BYTE PTR [eax+0x551053a],ch
  41c046:	mov    dh,BYTE PTR [ebp-0x75284579]
  41c04c:	sub    eax,0xee5e6dea
  41c051:	pop    edi
  41c052:	pushf  
  41c053:	pushf  
  41c054:	inc    ebx
  41c055:	icebp  
  41c056:	dec    ebp
  41c057:	sbb    al,0x5
  41c059:	test   esp,ecx
  41c05b:	mov    ds:0x5668fd93,eax
  41c060:	lahf   
  41c061:	or     al,0x32
  41c063:	and    DWORD PTR [eax-0x31dd46b4],esi
  41c069:	in     eax,0x90
  41c06b:	mov    ch,0x6c
  41c06d:	cdq    
  41c06e:	pop    ebx
  41c06f:	leave  
  41c070:	push   ss
  41c071:	in     al,0xa
  41c073:	mov    bl,0x1b
  41c075:	or     bl,bh
  41c077:	jmp    0xaafc:0xc801986d
  41c07e:	mov    ecx,DWORD PTR [esi-0x26a41b33]
  41c084:	ins    DWORD PTR es:[edi],dx
  41c085:	mov    ds,WORD PTR [edi+edi*1]
  41c088:	cs in  eax,dx
  41c08a:	ja     0x41c02d
  41c08c:	leave  
  41c08d:	and    al,0x92
  41c08f:	or     BYTE PTR [eax+0xf435e05],al
  41c095:	sar    BYTE PTR [esi],1
  41c097:	xor    eax,0x2957d703
  41c09c:	and    al,0xe4
  41c09e:	mov    eax,ds:0x77a4738d
  41c0a3:	and    dl,BYTE PTR [edi+0x520042da]
  41c0a9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41c0ab:	mov    ds:0xba35ca6a,eax
  41c0b0:	dec    ebx
  41c0b1:	outs   dx,BYTE PTR ds:[esi]
  41c0b2:	mov    ebx,0x66018bc0
  41c0b7:	dec    ebp
  41c0b8:	adc    ebx,DWORD PTR [ebp-0x19]
  41c0bb:	push   0x47b7da25
  41c0c0:	stos   BYTE PTR es:[edi],al
  41c0c1:	js     0x41c08d
  41c0c3:	and    BYTE PTR es:[esi+0x8],ah
  41c0c7:	push   esi
  41c0c8:	fst    QWORD PTR [eax]
  41c0ca:	pop    ecx
  41c0cb:	les    esi,FWORD PTR [edi-0x23deb6c2]
  41c0d1:	mov    ds:0x3c0c9272,eax
  41c0d6:	daa    
  41c0d7:	sub    BYTE PTR ds:0x46f8cec0,al
  41c0dd:	jno    0x41c0c0
  41c0df:	daa    
  41c0e0:	stos   DWORD PTR es:[edi],eax
  41c0e1:	or     ecx,DWORD PTR [ebp+0x9]
  41c0e4:	out    0xe1,eax
  41c0e6:	adc    eax,0x3a00027c
  41c0eb:	out    dx,eax
  41c0ec:	sbb    ebp,esi
  41c0ee:	and    ebp,edx
  41c0f0:	xor    ch,BYTE PTR [edi-0xf]
  41c0f3:	push   esi
  41c0f4:	lahf   
  41c0f5:	popf   
  41c0f6:	stos   BYTE PTR es:[edi],al
  41c0f7:	pop    eax
  41c0f8:	push   ebp
  41c0f9:	ja     0x41c0b0
  41c0fb:	ret    
  41c0fc:	push   cs
  41c0fd:	jo     0x41c083
  41c0ff:	loopne 0x41c146
  41c101:	jb     0x41c0a5
  41c103:	in     eax,0x68
  41c105:	sub    al,0xd7
  41c107:	pop    ebp
  41c108:	imul   esi,DWORD PTR cs:[ebx-0x5e05fc78],0xffffff8e
  41c110:	mov    ecx,0xd4ccbd5f
  41c115:	mov    ebx,0x4c747be2
  41c11a:	loopne 0x41c0d5
  41c11c:	gs in  al,0x5d
  41c11f:	mov    BYTE PTR [eax],dl
  41c121:	sub    eax,0x80080c19
  41c126:	call   0x20dc:0xcb28f66d
  41c12d:	inc    eax
  41c12e:	xor    DWORD PTR [edi+ebp*2+0x2801dda9],edx
  41c135:	jns    0x41c183
  41c137:	cmp    esp,esp
  41c139:	loopne 0x41c164
  41c13b:	pop    ebx
  41c13c:	enter  0x9f8d,0xb4
  41c140:	adc    eax,0xd698c266
  41c145:	je     0x41c1af
  41c147:	outs   dx,DWORD PTR ds:[esi]
  41c148:	inc    eax
  41c149:	nop
  41c14a:	ins    DWORD PTR es:[edi],dx
  41c14b:	test   eax,0x84a7ae62
  41c150:	mov    ebp,0x3bb25109
  41c155:	sti    
  41c156:	das    
  41c157:	and    DWORD PTR [esi],0xffffffeb
  41c15a:	in     eax,0x7f
  41c15c:	popa   
  41c15d:	push   eax
  41c15e:	enter  0xb638,0xb0
  41c162:	dec    edi
  41c163:	jbe    0x41c152
  41c165:	or     ch,cl
  41c167:	int    0xec
  41c169:	jp     0x41c148
  41c16b:	push   ds
  41c16c:	jecxz  0x41c1de
  41c16e:	pop    edx
  41c16f:	data16 mov BYTE PTR [edi-0x27ea8959],al
  41c176:	dec    edx
  41c177:	add    DWORD PTR [esi],ebx
  41c179:	mov    ds:0xd7575739,eax
  41c17e:	jmp    0x41c11b
  41c180:	rcl    DWORD PTR ss:[eax+eiz*2],cl
  41c184:	pop    ebp
  41c185:	adc    al,bh
  41c187:	xor    al,0x5a
  41c189:	sbb    cl,BYTE PTR [ebp-0x4711aae5]
  41c18f:	call   0x1c3c:0xdb4ad7ac
  41c196:	(bad)  
  41c197:	and    BYTE PTR ds:0x629f9d12,bh
  41c19d:	jl     0x41c1c5
  41c19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a0:	lea    ebx,[eax+edx*1]
  41c1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a4:	outs   dx,DWORD PTR ds:[esi]
  41c1a5:	neg    cl
  41c1a7:	add    DWORD PTR [eax+0x38],ebp
  41c1aa:	idiv   edx
  41c1ac:	leave  
  41c1ad:	pop    ds
  41c1ae:	out    0x56,al
  41c1b0:	clc    
  41c1b1:	scas   eax,DWORD PTR es:[edi]
  41c1b2:	add    ah,BYTE PTR [edi+0x34]
  41c1b5:	ins    DWORD PTR es:[edi],dx
  41c1b6:	aas    
  41c1b7:	popa   
  41c1b8:	scas   al,BYTE PTR es:[edi]
  41c1b9:	adc    al,0xdc
  41c1bb:	jae    0x41c14f
  41c1bd:	jge    0x41c1ae
  41c1bf:	inc    ebx
  41c1c0:	in     al,dx
  41c1c1:	test   BYTE PTR [esi+ebx*2+0x221a14ef],cl
  41c1c8:	cmp    eax,0x27a4db4f
  41c1cd:	cmp    ch,BYTE PTR [edx+0x3d306cec]
  41c1d3:	jle    0x41c17f
  41c1d5:	push   ecx
  41c1d6:	outs   dx,DWORD PTR ds:[esi]
  41c1d7:	add    DWORD PTR ss:[edx-0x78],eax
  41c1db:	rol    BYTE PTR [edx],cl
  41c1dd:	mov    ?,WORD PTR [esp+ebx*2]
  41c1e0:	ror    DWORD PTR [edx+eiz*1-0x39f5d711],0xa7
  41c1e8:	inc    ebx
  41c1e9:	test   eax,0x5977ac23
  41c1ee:	popa   
  41c1ef:	pop    eax
  41c1f0:	pop    ss
  41c1f1:	das    
  41c1f2:	cmp    al,0xc8
  41c1f4:	outs   dx,DWORD PTR ds:[esi]
  41c1f5:	sub    DWORD PTR [ebp+0x5d],ebp
  41c1f8:	and    DWORD PTR [edx-0xa92daa7],0x9f7be700
  41c202:	inc    edx
  41c203:	gs stos BYTE PTR es:[edi],al
  41c205:	push   0xffffffae
  41c207:	xchg   BYTE PTR [ebp-0x1ea8922],ah
  41c20d:	mov    esi,0x7c67d1ed
  41c212:	loopne 0x41c1a6
  41c214:	imul   edx,DWORD PTR [ecx+0x1c29e86a],0x9062e41c
  41c21e:	sbb    eax,0x6d51494d
  41c223:	retf   0x474a
  41c226:	jle    0x41c284
  41c228:	mov    ah,0x36
  41c22a:	popf   
  41c22b:	xchg   esi,eax
  41c22c:	xchg   ecx,eax
  41c22d:	adc    eax,0xde41183a
  41c232:	test   eax,0xa72ce13d
  41c237:	(bad)  
  41c238:	lods   eax,DWORD PTR ds:[esi]
  41c239:	xchg   ecx,eax
  41c23a:	ds and esp,ebp
  41c23d:	out    dx,eax
  41c23e:	in     eax,0x34
  41c240:	inc    ecx
  41c241:	and    ebp,DWORD PTR [ecx+0x7a]
  41c244:	push   ebx
  41c245:	popf   
  41c246:	cli    
  41c247:	or     BYTE PTR [eax-0x1b],ch
  41c24a:	ss xchg edx,eax
  41c24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24d:	adc    eax,ebp
  41c24f:	test   eax,0x6004052f
  41c254:	sbb    esi,edi
  41c256:	cli    
  41c257:	mov    dl,0x73
  41c259:	xor    al,0x6f
  41c25b:	aaa    
  41c25c:	test   BYTE PTR [ecx],dl
  41c25e:	push   sp
  41c260:	xchg   edi,eax
  41c261:	pop    eax
  41c262:	fmul   QWORD PTR [eax]
  41c264:	pusha  
  41c265:	fdiv   QWORD PTR [ebx]
  41c267:	pop    ebx
  41c268:	out    dx,eax
  41c269:	je     0x41c237
  41c26b:	popa   
  41c26c:	xchg   ebp,eax
  41c26d:	mov    ebp,0xa736016d
  41c272:	outs   dx,BYTE PTR ds:[esi]
  41c273:	add    ebp,DWORD PTR [ebp+0x49]
  41c276:	jp     0x41c2d4
  41c278:	xchg   ebp,eax
  41c279:	adc    edx,DWORD PTR [ebx-0x7dd102a1]
  41c27f:	(bad)  
  41c280:	imul   esi,DWORD PTR [ebx],0xc4917c66
  41c286:	inc    si
  41c289:	loop   0x41c2a6
  41c28b:	call   0x2b93e376
  41c290:	(bad)  
  41c291:	aas    
  41c292:	and    bh,bl
  41c294:	lea    ebx,ds:[ecx+ecx*2-0x4e4f6328]
  41c29c:	xor    DWORD PTR [ebx+edi*8],esp
  41c29f:	mov    WORD PTR [esi],ss
  41c2a1:	push   ebp
  41c2a2:	cmp    bl,BYTE PTR [ebx+0x49112ef8]
  41c2a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a9:	inc    ebp
  41c2aa:	mov    edi,0x754d18f1
  41c2af:	and    DWORD PTR [esi-0x489883bb],0xcf8875c0
  41c2b9:	jb     0x41c2e6
  41c2bb:	cmc    
  41c2bc:	push   es
  41c2bd:	jle    0x41c24c
  41c2bf:	int3   
  41c2c0:	nop
  41c2c1:	rol    DWORD PTR [ebp+0x487549f0],0xed
  41c2c8:	ret    0xae27
  41c2cb:	test   al,0xf1
  41c2cd:	push   cs
  41c2ce:	xchg   BYTE PTR [edi],ah
  41c2d0:	xchg   edx,eax
  41c2d1:	mov    edx,DWORD PTR [edi]
  41c2d3:	clc    
  41c2d4:	or     DWORD PTR [ecx],ebx
  41c2d6:	outs   dx,DWORD PTR ds:[esi]
  41c2d7:	gs mov cl,0x8b
  41c2da:	or     DWORD PTR [esi],ebp
  41c2dc:	nop
  41c2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2de:	mov    ecx,DWORD PTR [eax-0x3e92c6e6]
  41c2e4:	data16 sar BYTE PTR [edx+eiz*2],0x5d
  41c2e9:	and    eax,0xc2b6b848
  41c2ee:	pushf  
  41c2ef:	jnp    0x41c2e0
  41c2f1:	fsubr  DWORD PTR [edx-0x5b]
  41c2f4:	sti    
  41c2f5:	retf   
  41c2f6:	pop    edi
  41c2f7:	mov    bl,0x52
  41c2f9:	cmp    al,0x8e
  41c2fb:	adc    eax,0xc51f0ebb
  41c300:	adc    esi,ebp
  41c302:	jmp    0x41c2d6
  41c304:	je     0x41c2f3
  41c306:	cmp    al,0x76
  41c308:	push   eax
  41c309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c30a:	sbb    DWORD PTR [ecx],0xffffffd0
  41c30d:	jne    0x41c345
  41c30f:	inc    BYTE PTR [ebp+0x15f937e6]
  41c315:	(bad)  
  41c316:	imul   edi,DWORD PTR [ecx],0xfffffff7
  41c319:	mov    bh,0x20
  41c31b:	mov    ebx,0xfb7bca69
  41c320:	and    cl,BYTE PTR [ecx+0xad7002d]
  41c326:	adc    bl,dl
  41c328:	outs   dx,DWORD PTR ds:[esi]
  41c329:	adc    esp,DWORD PTR [ecx+ebx*4]
  41c32c:	cdq    
  41c32d:	push   es
  41c32e:	inc    eax
  41c32f:	repz or eax,0x9a43fe00
  41c335:	xchg   edx,eax
  41c336:	in     al,0xa
  41c338:	fisub  WORD PTR [esi-0x6a]
  41c33b:	arpl   ax,si
  41c33d:	cdq    
  41c33e:	das    
  41c33f:	mov    edx,0x8d4a7916
  41c344:	cmp    BYTE PTR [edx+0x50f9b9fe],cl
  41c34a:	fild   QWORD PTR [ebx+0x62bf9a66]
  41c350:	and    DWORD PTR [ecx],esi
  41c352:	or     eax,0x9f6196f3
  41c357:	mov    ds:0xe1e19380,al
  41c35c:	xchg   eax,ecx
  41c35e:	lock push ebx
  41c360:	jnp    0x41c2fb
  41c362:	daa    
  41c363:	dec    edx
  41c364:	cmp    eax,0x478940d8
  41c369:	retf   
  41c36a:	js     0x41c38a
  41c36c:	pop    esp
  41c36d:	or     BYTE PTR [edi],bl
  41c36f:	inc    esp
  41c370:	jmp    0x1dc075b6
  41c375:	jle    0x41c3b9
  41c377:	fisubr DWORD PTR [edx+0x5]
  41c37a:	push   ebp
  41c37b:	cld    
  41c37c:	inc    ebp
  41c37d:	(bad)
  41c381:	mov    DWORD PTR [eax],eax
  41c383:	dec    BYTE PTR [edx-0x3ef7d408]
  41c389:	das    
  41c38a:	push   cs
  41c38b:	not    ecx
  41c38d:	mov    ds:0xcc38788,eax
  41c392:	or     DWORD PTR [si],esp
  41c395:	sub    BYTE PTR [ebp+0x37ce4933],dl
  41c39b:	sub    dh,BYTE PTR [edx+edi*2+0x5b]
  41c39f:	aad    0xd9
  41c3a1:	pop    ebx
  41c3a2:	xor    ebx,DWORD PTR [esi+0x1a]
  41c3a5:	in     al,0xac
  41c3a7:	mov    esi,0xd2c3a1b2
  41c3ac:	cmp    al,0xe6
  41c3ae:	and    edi,DWORD PTR [eax]
  41c3b0:	or     eax,0x5f8e31fb
  41c3b5:	shr    BYTE PTR [eax+0x3f],cl
  41c3b8:	adc    BYTE PTR [esi+0x75],bl
  41c3bb:	sub    BYTE PTR [esi+esi*2],dl
  41c3be:	mov    dh,0x40
  41c3c0:	cmp    al,0x46
  41c3c2:	cli    
  41c3c3:	push   ebp
  41c3c4:	inc    esp
  41c3c5:	or     DWORD PTR [edx],ebx
  41c3c7:	mov    ch,0x22
  41c3c9:	(bad)  
  41c3ca:	pop    ss
  41c3cb:	or     eax,0xda136d0
  41c3d0:	outs   dx,DWORD PTR ds:[esi]
  41c3d1:	push   ss
  41c3d2:	jo     0x41c3a1
  41c3d4:	imul   eax,DWORD PTR [esi+0x1f],0xd61697bf
  41c3db:	jno    0x41c370
  41c3dd:	cli    
  41c3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3df:	jle    0x41c362
  41c3e1:	mov    eax,DWORD PTR [ecx+0x39bb309]
  41c3e7:	push   ebx
  41c3e8:	ins    BYTE PTR es:[edi],dx
  41c3e9:	mov    ch,0x29
  41c3eb:	pop    esp
  41c3ec:	jp     0x41c3d5
  41c3ee:	enter  0x23d6,0x97
  41c3f2:	mov    cl,0x3a
  41c3f4:	mov    cl,0x57
  41c3f6:	loop   0x41c446
  41c3f8:	jbe    0x41c3ad
  41c3fa:	cmp    DWORD PTR [edx],ebx
  41c3fc:	cwde   
  41c3fd:	mov    eax,ds:0x52f0a1a5
  41c402:	jg     0x41c430
  41c404:	ins    BYTE PTR es:[edi],dx
  41c405:	mov    fs,WORD PTR [esi]
  41c407:	jp     0x41c442
  41c409:	sbb    eax,0xb4410c97
  41c40e:	and    ecx,ebx
  41c410:	test   al,0xc4
  41c412:	jae    0x41c47f
  41c414:	in     al,0xee
  41c416:	jp     0x41c39b
  41c418:	inc    eax
  41c419:	or     BYTE PTR [ebp+ebp*4-0x5c],ch
  41c41d:	fist   DWORD PTR [edi+ebx*2+0x3]
  41c421:	push   edx
  41c422:	mov    ds:0x72edf5e0,al
  41c427:	jl     0x41c3de
  41c429:	call   0xedcc:0xde00bda6
  41c430:	adc    ch,BYTE PTR [edi-0x38e80bfb]
  41c436:	ins    BYTE PTR es:[edi],dx
  41c437:	cdq    
  41c438:	dec    eax
  41c439:	ins    BYTE PTR es:[edi],dx
  41c43a:	or     DWORD PTR ds:0xb0316a53,0x37
  41c441:	sbb    al,BYTE PTR [ebp+0x3af8932b]
  41c447:	add    bh,BYTE PTR [ecx]
  41c449:	mov    bh,0x35
  41c44b:	inc    esp
  41c44c:	pop    ebp
  41c44d:	push   ebp
  41c44e:	cwde   
  41c44f:	mov    cl,0xf7
  41c451:	imul   BYTE PTR [eax]
  41c453:	push   es
  41c454:	test   DWORD PTR [esi-0x12],0x1266857d
  41c45b:	ret    0x5809
  41c45e:	mov    edx,0xeedc5b9d
  41c463:	xlat   BYTE PTR ds:[ebx]
  41c464:	push   0xc79b860a
  41c469:	scas   al,BYTE PTR es:[edi]
  41c46a:	mov    eax,ds:0x4af26bde
  41c46f:	cdq    
  41c470:	xchg   esi,eax
  41c471:	shl    ah,cl
  41c473:	add    al,0x6a
  41c475:	sbb    al,0xf6
  41c477:	das    
  41c478:	pop    edi
  41c479:	outs   dx,DWORD PTR ds:[si]
  41c47b:	(bad)  
  41c47c:	cli    
  41c47d:	aas    
  41c47e:	ins    DWORD PTR es:[edi],dx
  41c47f:	adc    bl,BYTE PTR [eax]
  41c481:	stc    
  41c482:	xor    bl,BYTE PTR [esi+0x1d789e68]
  41c488:	(bad)  
  41c489:	jmp    0xfb16e00f
  41c48e:	pop    edx
  41c48f:	cmp    DWORD PTR [edi],ebx
  41c491:	repz scas al,BYTE PTR es:[edi]
  41c493:	xchg   edx,eax
  41c494:	lahf   
  41c495:	aam    0x8d
  41c497:	xor    eax,0x4ab5cf22
  41c49c:	push   ebp
  41c49d:	addr16 mov ecx,0x5dab434d
  41c4a3:	mov    dh,BYTE PTR [edx+eax*8]
  41c4a6:	or     al,0xce
  41c4a8:	fdiv   DWORD PTR [ecx]
  41c4aa:	xchg   ebp,eax
  41c4ab:	not    bl
  41c4ad:	jmp    0x57d4:0x71638fd
  41c4b4:	push   edi
  41c4b5:	adc    al,0x20
  41c4b7:	pop    ecx
  41c4b8:	inc    esi
  41c4b9:	(bad)  [ecx+0x72]
  41c4bc:	inc    ebx
  41c4bd:	mov    eax,ds:0x7dc20cfe
  41c4c2:	aas    
  41c4c3:	adc    al,0x19
  41c4c5:	test   DWORD PTR [eax+eiz*2-0x55],ebp
  41c4c9:	mov    ds:0x89ad8afc,eax
  41c4ce:	jecxz  0x41c51b
  41c4d0:	outs   dx,BYTE PTR ds:[esi]
  41c4d1:	sub    DWORD PTR [eax],ebp
  41c4d3:	inc    ebx
  41c4d4:	sub    DWORD PTR [eax],ecx
  41c4d6:	fdivr  QWORD PTR [esi*8+0x7c048152]
  41c4dd:	mov    bh,0xd0
  41c4df:	sub    DWORD PTR [ebx+0x3145d717],eax
  41c4e5:	xchg   ebp,eax
  41c4e6:	xlat   BYTE PTR ds:[ebx]
  41c4e7:	adc    ebx,DWORD PTR [ebx-0x58341fdb]
  41c4ed:	lds    edi,FWORD PTR [eax-0x42]
  41c4f0:	mov    cl,0xa5
  41c4f2:	mov    edx,0xaad51e90
  41c4f7:	push   0x70128610
  41c4fc:	add    al,0xe3
  41c4fe:	mov    ah,0x77
  41c500:	(bad)  
  41c501:	ins    BYTE PTR es:[edi],dx
  41c502:	inc    esi
  41c503:	jp     0x41c4b5
  41c505:	pop    ebp
  41c506:	out    dx,eax
  41c507:	das    
  41c508:	jge    0x41c55c
  41c50a:	xor    BYTE PTR [ebx+0x248ed011],0xbd
  41c511:	std    
  41c512:	imul   ecx,DWORD PTR [eax-0x52],0xffffffcd
  41c516:	cmc    
  41c517:	in     eax,0xe0
  41c519:	add    ah,al
  41c51b:	pop    edi
  41c51c:	inc    edx
  41c51d:	push   ebx
  41c51e:	popf   
  41c51f:	xchg   edi,eax
  41c520:	pop    es
  41c521:	mov    ebp,0xd9b726c6
  41c526:	je     0x41c58f
  41c528:	push   esi
  41c529:	fdivr  st,st(4)
  41c52b:	pop    ebx
  41c52c:	test   DWORD PTR [ecx],edx
  41c52e:	cmp    al,0x9b
  41c530:	xchg   ebx,eax
  41c531:	adc    BYTE PTR [edi+0x35e64155],dl
  41c537:	aaa    
  41c538:	hlt    
  41c539:	ss or  cl,BYTE PTR cs:[ebx]
  41c53d:	or     eax,0xc700009c
  41c542:	jl     0x41c5b9
  41c544:	out    dx,eax
  41c545:	cmp    DWORD PTR [edx+0x5d],ecx
  41c548:	cmc    
  41c549:	sub    bl,BYTE PTR [edi+0x58c59079]
  41c54f:	adc    al,0xde
  41c551:	sbb    ch,BYTE PTR [edx+0x37d4fd43]
  41c557:	(bad)  
  41c558:	stc    
  41c559:	in     al,dx
  41c55a:	retf   
  41c55b:	fcmovnbe st,st(3)
  41c55d:	je     0x41c581
  41c55f:	push   ebp
  41c560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c561:	sub    al,0x95
  41c563:	pop    ebp
  41c564:	sub    al,0x9e
  41c566:	daa    
  41c567:	push   esi
  41c568:	push   esi
  41c569:	cmp    DWORD PTR [edx+0x22f9d195],ebp
  41c56f:	mov    edi,DWORD PTR [edi+0x4c]
  41c572:	inc    eax
  41c573:	fld    DWORD PTR [edx+edx*1]
  41c576:	shl    BYTE PTR [eax],0x8e
  41c579:	sbb    dh,BYTE PTR [ebp+eiz*2+0x18d61dd8]
  41c580:	push   ebp
  41c581:	mov    bh,BYTE PTR [eax-0x75b96d41]
  41c587:	sbb    al,0xc4
  41c589:	pop    ebp
  41c58a:	mov    eax,esi
  41c58c:	push   eax
  41c58d:	fmul   DWORD PTR [eax-0x5d]
  41c590:	mov    BYTE PTR [ebx-0x90bcbd9],bh
  41c596:	push   ebx
  41c597:	ror    ebx,cl
  41c599:	ret    0xd01e
  41c59c:	pop    ds
  41c59d:	or     bl,ch
  41c59f:	push   ss
  41c5a0:	repnz dec ecx
  41c5a2:	jmp    0x27d4:0x1e77a25b
  41c5a9:	cmp    al,0x3a
  41c5ab:	sahf   
  41c5ac:	pop    eax
  41c5ad:	fwait
  41c5ae:	test   DWORD PTR [esi+0x69],ecx
  41c5b1:	xchg   DWORD PTR [edi],eax
  41c5b3:	ja     0x41c5a0
  41c5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b6:	jg     0x41c58a
  41c5b8:	fdiv   st(1),st
  41c5ba:	inc    edx
  41c5bb:	pop    ebp
  41c5bc:	(bad)  
  41c5bf:	mov    dl,0x8f
  41c5c1:	inc    ebp
  41c5c2:	arpl   WORD PTR [esp+eax*4+0x3c7f5d00],dx
  41c5c9:	retf   0xd478
  41c5cc:	dec    edx
  41c5cd:	sbb    bl,0x6f
  41c5d0:	imul   ebp,DWORD PTR [edx+0x45],0xffffffb8
  41c5d4:	jbe    0x41c55d
  41c5d6:	das    
  41c5d7:	sbb    edi,DWORD PTR [eax-0x26]
  41c5da:	add    al,0x9e
  41c5dc:	daa    
  41c5dd:	push   ebp
  41c5de:	mov    dl,0x51
  41c5e0:	xchg   esi,eax
  41c5e1:	sar    DWORD PTR [esi+0x54],1
  41c5e4:	pop    ebx
  41c5e5:	bound  eax,QWORD PTR [eax+0x414b7c5c]
  41c5eb:	sub    al,0x9f
  41c5ed:	shl    DWORD PTR [edx+0x197c6f60],cl
  41c5f3:	xchg   BYTE PTR [edi-0x73cb7c70],ch
  41c5f9:	push   ss
  41c5fa:	mov    edx,0xd08e601a
  41c5ff:	adc    edi,DWORD PTR ds:0xf31d1041
  41c605:	mov    bh,0x2d
  41c607:	shr    DWORD PTR [edi+0x7c],cl
  41c60a:	or     al,0xab
  41c60c:	dec    ebx
  41c60d:	xchg   edi,eax
  41c60e:	into   
  41c60f:	pop    esi
  41c610:	adc    eax,DWORD PTR [ecx-0x78]
  41c613:	mov    ds:0x8cd8d10c,al
  41c618:	mov    edi,0x9b5f669b
  41c61d:	popa   
  41c61e:	aam    0xd2
  41c620:	imul   ecx,edx,0xffffff82
  41c623:	maskmovq mm0,(bad)
  41c624:	test   DWORD PTR [eax-0x7c],0xbf405115
  41c62b:	sbb    al,cl
  41c62d:	test   DWORD PTR ds:0xec61470f,esi
  41c633:	leave  
  41c634:	xor    bh,al
  41c636:	outs   dx,BYTE PTR ds:[esi]
  41c637:	fcmovbe st,st(6)
  41c639:	mov    ebx,0xfa5dd4d7
  41c63e:	(bad)  
  41c63f:	stos   BYTE PTR es:[edi],al
  41c640:	in     al,0x13
  41c642:	in     eax,0xf3
  41c644:	add    DWORD PTR ss:[ebp+edi*4-0x53],ebx
  41c649:	shl    DWORD PTR [ebx],1
  41c64b:	or     DWORD PTR [esi+eax*2+0x12],0xa3c40bf4
  41c653:	jae    0x41c668
  41c655:	int    0x21
  41c657:	inc    ecx
  41c658:	sub    ebp,DWORD PTR [ebx]
  41c65a:	inc    esp
  41c65b:	xchg   edx,eax
  41c65c:	mov    eax,ds:0x17ffd6cd
  41c661:	and    al,0xfa
  41c663:	jae    0x41c660
  41c665:	mov    ch,0x52
  41c667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c668:	loopne 0x41c60c
  41c66a:	cwde   
  41c66b:	imul   ecx,DWORD PTR [ecx],0xb71a09fc
  41c671:	cs mov bh,0xda
  41c674:	ss ss adc eax,0x19680a70
  41c67b:	fcom   QWORD PTR [edx]
  41c67d:	jp     0x41c60d
  41c67f:	icebp  
  41c680:	ins    BYTE PTR es:[edi],dx
  41c681:	lahf   
  41c682:	xor    ecx,0xfffffff1
  41c685:	leave  
  41c686:	es xchg esp,eax
  41c688:	fcomp  QWORD PTR [ecx+0x42f7a560]
  41c68e:	jno    0x41c633
  41c690:	mov    esp,DWORD PTR [edi+0x10]
  41c693:	mov    al,ds:0xf2934a16
  41c698:	outs   dx,DWORD PTR ds:[esi]
  41c699:	mov    eax,ds:0xec155173
  41c69e:	push   0xffffffe2
  41c6a0:	dec    ebx
  41c6a1:	pop    ebp
  41c6a2:	or     BYTE PTR ds:0x7190eb62,bh
  41c6a8:	push   ecx
  41c6a9:	aam    0xb
  41c6ab:	scas   eax,DWORD PTR es:[edi]
  41c6ac:	push   0xe512f5f4
  41c6b1:	repnz and dl,BYTE PTR [edx*8-0x1461729e]
  41c6b9:	or     bl,BYTE PTR [edx]
  41c6bb:	es in  al,dx
  41c6bd:	ja     0x41c6fd
  41c6bf:	pop    es
  41c6c0:	mov    dh,0xe4
  41c6c2:	dec    esp
  41c6c3:	xchg   ebx,eax
  41c6c4:	fldcw  WORD PTR [ebx-0x5990901a]
  41c6ca:	clc    
  41c6cb:	aad    0x67
  41c6cd:	dec    esp
  41c6ce:	jae    0x41c68b
  41c6d0:	mov    ecx,DWORD PTR [eax+eax*2-0x280db84f]
  41c6d7:	push   esp
  41c6d8:	cld    
  41c6d9:	rcr    DWORD PTR [edx-0x2360b901],1
  41c6df:	mov    cl,0x39
  41c6e1:	call   0xcdf6:0xdb355857
  41c6e8:	loopne 0x41c6fd
  41c6ea:	sub    BYTE PTR ds:0xac405258,dh
  41c6f0:	jb     0x41c6c3
  41c6f2:	xchg   esi,eax
  41c6f3:	lahf   
  41c6f4:	and    DWORD PTR [eax-0x474e9d58],esi
  41c6fa:	sbb    ah,BYTE PTR [esi+0x7051709a]
  41c700:	or     DWORD PTR [esi-0x11],edx
  41c703:	or     esp,DWORD PTR [edx-0x11f52b06]
  41c709:	aaa    
  41c70a:	ret    0x8012
  41c70d:	adc    al,BYTE PTR [ebx]
  41c70f:	loope  0x41c6b0
  41c711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c712:	jle    0x41c746
  41c714:	stos   BYTE PTR es:[edi],al
  41c715:	cs cmp ebx,edx
  41c718:	aad    0xdd
  41c71a:	cmp    eax,0x67b90149
  41c71f:	sbb    al,0x82
  41c721:	adc    al,0x9
  41c723:	mov    ah,0xf0
  41c725:	loope  0x41c6fc
  41c727:	cmp    al,BYTE PTR [ecx+eax*8]
  41c72a:	push   edi
  41c72b:	inc    ecx
  41c72c:	stos   BYTE PTR es:[edi],al
  41c72d:	sub    ah,dh
  41c72f:	adc    BYTE PTR [edi+0x23826cd6],dl
  41c735:	stos   BYTE PTR es:[edi],al
  41c736:	outs   dx,DWORD PTR ds:[esi]
  41c737:	cwde   
  41c738:	nop
  41c739:	sar    DWORD PTR [ebp-0x41752af8],cl
  41c73f:	pop    ds
  41c740:	push   ds
  41c741:	stos   BYTE PTR es:[edi],al
  41c742:	xor    al,0xd
  41c744:	xlat   BYTE PTR ds:[ebx]
  41c745:	adc    cl,BYTE PTR [ebx-0x3b]
  41c748:	les    ebx,FWORD PTR [eax+0x7cab3301]
  41c74e:	sahf   
  41c74f:	sbb    dh,BYTE PTR [edx+ebx*8+0x6f]
  41c753:	mov    esp,0xc93144dc
  41c758:	enter  0xad91,0x54
  41c75c:	js     0x41c72d
  41c75e:	add    al,0xf8
  41c760:	pop    edx
  41c761:	sbb    esp,DWORD PTR [edi]
  41c763:	nop
  41c764:	jecxz  0x41c75e
  41c766:	mov    BYTE PTR [ebx+0x2d295228],dh
  41c76c:	fwait
  41c76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c76e:	xor    al,0xec
  41c770:	ins    DWORD PTR es:[edi],dx
  41c771:	xchg   ecx,eax
  41c772:	inc    ebp
  41c773:	(bad)  
  41c774:	adc    al,dl
  41c776:	sahf   
  41c777:	and    cl,BYTE PTR [ebp+0x6e]
  41c77a:	outs   dx,BYTE PTR ds:[esi]
  41c77b:	ret    
  41c77c:	pushf  
  41c77d:	adc    DWORD PTR [edx-0x2c],edi
  41c780:	jb     0x41c799
  41c782:	stos   BYTE PTR es:[edi],al
  41c783:	cmp    BYTE PTR [ebp-0x2af9cf4b],bh
  41c789:	jge    0x41c781
  41c78b:	inc    edi
  41c78c:	lock sbb eax,DWORD PTR [ecx-0x5d]
  41c790:	lea    eax,[ecx-0x39775e38]
  41c796:	mov    dl,0x3c
  41c798:	sti    
  41c799:	(bad)  
  41c79b:	int3   
  41c79c:	sub    edx,ebp
  41c79e:	fs adc eax,0x9f0016bd
  41c7a4:	(bad)  
  41c7a5:	fldz   
  41c7a7:	fist   WORD PTR [edx-0x6]
  41c7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ab:	in     al,dx
  41c7ac:	(bad)  
  41c7ad:	mov    cl,0x83
  41c7af:	jae    0x41c806
  41c7b1:	test   BYTE PTR [ecx-0x18],bh
  41c7b4:	pop    ebp
  41c7b5:	retf   0x6e00
  41c7b8:	int    0x23
  41c7ba:	inc    ebx
  41c7bb:	mov    al,ds:0x777e5d64
  41c7c0:	outs   dx,BYTE PTR ds:[esi]
  41c7c1:	hlt    
  41c7c2:	test   al,0xa
  41c7c4:	xchg   edx,eax
  41c7c5:	test   al,0x9e
  41c7c7:	jbe    0x41c836
  41c7c9:	aaa    
  41c7ca:	shl    BYTE PTR [ecx],1
  41c7cc:	cmp    bh,bl
  41c7ce:	cmp    BYTE PTR [eax],bh
  41c7d0:	push   ebx
  41c7d1:	les    ecx,FWORD PTR [ebx]
  41c7d3:	adc    al,0xf2
  41c7d5:	push   edx
  41c7d6:	adc    DWORD PTR [ebx+0x5f6ec4a9],ebp
  41c7dc:	arpl   WORD PTR [ebx+0x18537fc6],si
  41c7e2:	arpl   WORD PTR [eax+0x7e666040],bp
  41c7e8:	add    ebp,DWORD PTR [ecx+0x5]
  41c7eb:	jo     0x41c775
  41c7ed:	and    eax,0xd29fb6f8
  41c7f2:	div    DWORD PTR [edx-0x24]
  41c7f5:	rcl    DWORD PTR [edx],cl
  41c7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f8:	dec    ecx
  41c7f9:	ret    
  41c7fa:	xor    al,0x10
  41c7fc:	push   edi
  41c7fd:	mov    esp,0xd45ecdb4
  41c802:	nop
  41c803:	clc    
  41c804:	pop    ss
  41c805:	test   DWORD PTR [eax-0x7a],esp
  41c808:	pop    esi
  41c809:	sbb    ch,bl
  41c80b:	mov    ebx,0x61c996af
  41c810:	je     0x41c81d
  41c812:	mov    ah,0xb1
  41c814:	mov    esi,0xe38789f9
  41c819:	mov    ss,esp
  41c81b:	leave  
  41c81c:	xor    eax,0x5c2b48eb
  41c821:	inc    edi
  41c822:	and    BYTE PTR [ebp-0x54],0xb7
  41c826:	mov    WORD PTR [ecx],?
  41c828:	mov    dx,0x7ddd
  41c82c:	ret    0x1fe4
  41c82f:	fcomp  st(2)
  41c831:	ret    0x4518
  41c834:	stos   DWORD PTR es:[edi],eax
  41c835:	jg     0x41c85a
  41c837:	cmp    eax,0x10ea5ab6
  41c83c:	fcomp  st(0)
  41c83e:	(bad)  
  41c840:	sbb    eax,0x49e5fbf
  41c845:	push   edx
  41c846:	daa    
  41c847:	jns    0x41c7e5
  41c849:	sub    BYTE PTR [edx+0x36d3dda],al
  41c84f:	push   ebx
  41c850:	and    ecx,DWORD PTR [edi]
  41c852:	mov    ebx,0xec5599e2
  41c857:	ja     0x41c871
  41c859:	mov    edx,0x91886370
  41c85e:	loope  0x41c800
  41c860:	test   DWORD PTR [edi+0x6],0x291b7843
  41c867:	dec    esi
  41c868:	bound  esi,QWORD PTR [ecx]
  41c86a:	fisubr WORD PTR [edx+0x67]
  41c86d:	dec    esp
  41c86e:	dec    esi
  41c86f:	popf   
  41c870:	lahf   
  41c871:	mov    eax,0xd09fdf33
  41c876:	cli    
  41c877:	and    esp,DWORD PTR [ebp+0x292e6c8f]
  41c87d:	pop    es
  41c87e:	xchg   esi,eax
  41c87f:	jb     0x41c848
  41c881:	xchg   ecx,eax
  41c883:	inc    ebx
  41c884:	lahf   
  41c885:	inc    edi
  41c886:	jnp    0x41c813
  41c888:	mov    eax,0xca27c667
  41c88d:	in     eax,0xb8
  41c88f:	sbb    BYTE PTR [esi+ecx*2+0x57],dh
  41c893:	jl     0x41c8b4
  41c895:	cli    
  41c896:	repz push 0x7014d026
  41c89c:	add    esi,esp
  41c89e:	or     esi,DWORD PTR [edx+0x1bfc9551]
  41c8a4:	in     eax,dx
  41c8a5:	scas   al,BYTE PTR es:[edi]
  41c8a6:	inc    ebx
  41c8a7:	out    dx,al
  41c8a8:	mov    ebp,0x8a9c2654
  41c8ad:	jp     0x41c888
  41c8af:	enter  0x4e95,0xb8
  41c8b3:	(bad)  
  41c8b4:	jmp    0x41c88b
  41c8b6:	shl    DWORD PTR [esi],cl
  41c8b8:	mov    edx,0x9cff2422
  41c8bd:	pop    ebx
  41c8be:	dec    ebx
  41c8bf:	ja     0x41c933
  41c8c1:	sbb    ebp,eax
  41c8c3:	or     al,0x2a
  41c8c5:	inc    ecx
  41c8c6:	add    BYTE PTR [eax-0x653cb944],al
  41c8cc:	inc    esi
  41c8cd:	dec    edx
  41c8ce:	sub    al,0xc3
  41c8d0:	or     ebx,DWORD PTR [ecx+0x3eb0bd61]
  41c8d6:	jmp    0xa4a75f8
  41c8db:	in     al,dx
  41c8dc:	stos   DWORD PTR es:[edi],eax
  41c8dd:	push   esi
  41c8de:	mov    al,0x47
  41c8e0:	or     dh,cl
  41c8e2:	or     BYTE PTR [eax],bh
  41c8e4:	bound  esi,QWORD PTR ds:0xef2eb2b6
  41c8ea:	stc    
  41c8eb:	xor    BYTE PTR [ecx-0x43],0x51
  41c8ef:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f1:	add    ecx,0xffffffb3
  41c8f4:	test   BYTE PTR [ecx],dl
  41c8f6:	jns    0x41c914
  41c8f8:	icebp  
  41c8f9:	pop    esi
  41c8fa:	(bad)  
  41c8fc:	in     eax,0x37
  41c8fe:	inc    ebp
  41c8ff:	into   
  41c900:	jae    0x41c903
  41c902:	dec    edx
  41c903:	mov    ch,al
  41c905:	stos   BYTE PTR es:[edi],al
  41c906:	jnp    0x41c96a
  41c908:	lods   eax,DWORD PTR ds:[esi]
  41c909:	push   ecx
  41c90a:	cmp    DWORD PTR [esi-0x7a0cc8d6],esi
  41c910:	sub    BYTE PTR [eax-0x74879441],dl
  41c916:	sbb    ecx,ecx
  41c918:	mov    edi,0xff7042c6
  41c91d:	retf   0xfaee
  41c920:	dec    bx
  41c922:	mov    eax,ebp
  41c924:	(bad)  
  41c925:	dec    edx
  41c926:	mov    ch,0xaf
  41c928:	push   cs
  41c929:	xchg   ebx,eax
  41c92a:	add    edx,DWORD PTR [esi-0x56]
  41c92d:	aam    0x39
  41c92f:	in     al,0xbc
  41c931:	out    dx,al
  41c932:	pop    ebp
  41c933:	dec    esi
  41c934:	rcr    BYTE PTR [eax+0x1f3f0233],cl
  41c93a:	mov    ds:0xc3a89b7a,eax
  41c93f:	not    edx
  41c941:	adc    eax,0x7633539d
  41c946:	mov    ah,0xad
  41c948:	xor    al,0x6e
  41c94a:	mov    edx,0x435dd5c8
  41c94f:	xchg   ecx,eax
  41c950:	jecxz  0x41c8e9
  41c952:	cmp    BYTE PTR [edi+0x4313cbd1],0x37
  41c959:	jg     0x41c934
  41c95b:	push   es
  41c95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c95d:	sub    al,0xcb
  41c95f:	inc    ebp
  41c960:	inc    ebp
  41c961:	push   edx
  41c962:	je     0x41c979
  41c964:	sub    al,0x73
  41c966:	mov    ch,0x1b
  41c968:	mov    edi,0x4398ef66
  41c96d:	add    BYTE PTR [edx-0x36],dl
  41c970:	jl     0x41c9df
  41c972:	in     al,dx
  41c973:	xor    eax,0x6ef63bf8
  41c978:	cli    
  41c979:	sub    ch,BYTE PTR [edx-0x302ddf38]
  41c97f:	or     eax,0x3c81d09b
  41c984:	sub    DWORD PTR [ebx],esp
  41c986:	pusha  
  41c987:	jmp    0x41ca04
  41c989:	rol    BYTE PTR [ecx+0x76],cl
  41c98c:	jne    0x41c9a9
  41c98e:	pop    ebp
  41c98f:	das    
  41c990:	iret   
  41c991:	sar    DWORD PTR [ebp-0x5e8c0561],0x64
  41c998:	test   al,0x61
  41c99a:	outs   dx,DWORD PTR ds:[esi]
  41c99b:	(bad)  
  41c99c:	push   ecx
  41c99d:	ins    BYTE PTR es:[edi],dx
  41c99e:	iret   
  41c99f:	fldcw  WORD PTR [edi+ecx*4]
  41c9a2:	adc    ebx,esi
  41c9a4:	int3   
  41c9a5:	xchg   esp,eax
  41c9a6:	mov    WORD PTR [eax+eax*8+0xc25c14c],?
  41c9ad:	or     bh,al
  41c9af:	mov    esi,0xa62e7d94
  41c9b4:	(bad)  
  41c9b6:	dec    edx
  41c9b7:	(bad)  [ebp+0x42]
  41c9ba:	push   ecx
  41c9bb:	and    al,0x4a
  41c9bd:	call   0x5cdc:0xf30f2d75
  41c9c4:	inc    esp
  41c9c5:	or     eax,0x1a2a0f04
  41c9ca:	icebp  
  41c9cb:	fdiv   DWORD PTR ds:0x445a5cb6
  41c9d1:	jle    0x41ca09
  41c9d3:	inc    eax
  41c9d4:	sbb    cl,BYTE PTR [ecx+0x28c513b0]
  41c9da:	adc    al,0x32
  41c9dc:	dec    eax
  41c9dd:	dec    esp
  41c9de:	out    dx,eax
  41c9df:	jno    0x41ca56
  41c9e1:	addr16 push ecx
  41c9e3:	dec    ecx
  41c9e4:	imul   ebx,ecx,0xfffffffa
  41c9e7:	cld    
  41c9e8:	and    al,0x33
  41c9ea:	loopne 0x41ca1c
  41c9ec:	xchg   esi,eax
  41c9ed:	pop    edi
  41c9ee:	iret   
  41c9ef:	ror    DWORD PTR ds:0x6ef1c28d,cl
  41c9f5:	push   cs
  41c9f6:	dec    ecx
  41c9f7:	ins    BYTE PTR es:[edi],dx
  41c9f8:	dec    edi
  41c9f9:	out    dx,eax
  41c9fa:	int3   
  41c9fb:	das    
  41c9fc:	jnp    0x41ca56
  41c9fe:	(bad)  
  41c9ff:	ja     0x41ca21
  41ca01:	ja     0x41c9cf
  41ca03:	sub    DWORD PTR [edi+eax*4],edi
  41ca06:	sub    DWORD PTR [ecx+0x2b],ebp
  41ca09:	fwait
  41ca0a:	das    
  41ca0b:	inc    edi
  41ca0c:	pop    DWORD PTR [esi]
  41ca0e:	lods   al,BYTE PTR ds:[esi]
  41ca0f:	out    0xe6,eax
  41ca11:	jg     0x41ca8d
  41ca13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca14:	cs int3 
  41ca16:	es cmp ebx,ebx
  41ca19:	(bad)  
  41ca1a:	mov    bl,0x5b
  41ca1c:	jnp    0x41c9ee
  41ca1e:	dec    esp
  41ca1f:	xor    ebp,DWORD PTR [ebx+0x70]
  41ca22:	and    al,0xe0
  41ca24:	pop    esi
  41ca25:	retf   
  41ca26:	out    dx,eax
  41ca27:	test   BYTE PTR [eax],0xc6
  41ca2a:	add    eax,esi
  41ca2c:	mov    ch,0x5a
  41ca2e:	xchg   edi,eax
  41ca2f:	ret    
  41ca30:	int3   
  41ca31:	cmp    al,0x91
  41ca33:	aaa    
  41ca34:	int3   
  41ca35:	adc    bh,dh
  41ca37:	xchg   edx,eax
  41ca38:	test   DWORD PTR [eax-0x70928ef3],edi
  41ca3e:	ins    BYTE PTR es:[edi],dx
  41ca3f:	addr16 call 0xc0ee41c3
  41ca45:	ja     0x41ca34
  41ca47:	repz fsub DWORD PTR [edx+0x1a]
  41ca4b:	fxch   st(1)
  41ca4d:	loop   0x41ca9d
  41ca4f:	add    BYTE PTR [edx],dl
  41ca51:	mov    BYTE PTR ds:0x59eada5e,0xe9
  41ca58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca59:	xor    eax,0x1be990d3
  41ca5e:	jg     0x41ca4d
  41ca60:	cwde   
  41ca61:	ds repnz retf 0x87d0
  41ca66:	clc    
  41ca67:	lods   al,BYTE PTR ds:[esi]
  41ca68:	adc    al,0x52
  41ca6a:	stos   BYTE PTR es:[edi],al
  41ca6b:	fdivr  QWORD PTR [ebx+0x7]
  41ca6e:	(bad)
  41ca71:	sti    
  41ca72:	das    
  41ca73:	test   DWORD PTR [ebp+0x1],ebx
  41ca76:	dec    esp
  41ca77:	pusha  
  41ca78:	idiv   DWORD PTR [edi+0x1]
  41ca7b:	inc    esp
  41ca7c:	test   al,0x62
  41ca7e:	call   0x131f1524
  41ca83:	sub    DWORD PTR [eax+0xc],edx
  41ca86:	adc    bl,0x94
  41ca89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca8a:	mov    WORD PTR [ebx-0xa2e44e],?
  41ca90:	(bad)  
  41ca91:	repz pop es
  41ca93:	xchg   ecx,eax
  41ca94:	jne    0x41cb11
  41ca96:	sbb    al,0xc0
  41ca98:	(bad)  
  41ca99:	(bad)  
  41ca9a:	mov    edx,0xb7b90
  41ca9f:	sub    ebx,ecx
  41caa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caa2:	jecxz  0x41caa6
  41caa4:	mov    BYTE PTR [ebx],ch
  41caa6:	(bad)  
  41caa7:	cmc    
  41caa8:	xchg   edx,eax
  41caa9:	out    0x4b,eax
  41caab:	fild   DWORD PTR [ebx]
  41caad:	es int 0x2c
  41cab0:	inc    eax
  41cab1:	sub    esp,0x8bec6e3d
  41cab7:	dec    ebx
  41cab8:	out    dx,al
  41cab9:	mov    ebx,0x7fdd4456
  41cabe:	sbb    edi,0xffffffd2
  41cac1:	mov    DWORD PTR [ecx+0x761d7d24],edx
  41cac7:	pop    eax
  41cac8:	push   ss
  41cac9:	ret    0xa8d1
  41cacc:	xchg   esi,eax
  41cacd:	push   edi
  41cace:	lea    esp,[edi+0x33]
  41cad1:	punpckhwd mm3,QWORD PTR ds:0x75da202
  41cad8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41cada:	pop    eax
  41cadb:	sub    ah,BYTE PTR [edi]
  41cadd:	(bad)  
  41cade:	xor    eax,0x366f8291
  41cae3:	xchg   ecx,eax
  41cae4:	aaa    
  41cae5:	xor    ch,BYTE PTR [edx+0x30]
  41cae8:	(bad)  
  41caea:	pusha  
  41caeb:	lahf   
  41caec:	shl    DWORD PTR [edi+0x14],cl
  41caef:	xor    bl,al
  41caf1:	jae    0x41cb1d
  41caf3:	in     eax,dx
  41caf4:	push   ebx
  41caf5:	popa   
  41caf6:	test   DWORD PTR [ebp-0x1114bdff],edi
  41cafc:	push   ebx
  41cafd:	lods   eax,DWORD PTR ds:[esi]
  41cafe:	xor    BYTE PTR [esi-0x4f4fd0cf],cl
  41cb04:	inc    edi
  41cb05:	dec    eax
  41cb06:	sar    DWORD PTR [edx],1
  41cb08:	imul   esi,DWORD PTR [ebx],0xffffffab
  41cb0b:	adc    eax,0x3b6e1ad7
  41cb10:	cmp    ah,0xc2
  41cb13:	out    dx,eax
  41cb14:	enter  0x546,0x87
  41cb18:	in     al,dx
  41cb19:	and    al,BYTE PTR [edx]
  41cb1b:	mov    ds:0x355499a0,eax
  41cb20:	adc    BYTE PTR [edi+0x15e6308b],dl
  41cb26:	out    0xe9,eax
  41cb28:	jecxz  0x41cb67
  41cb2a:	fs dec edx
  41cb2c:	retf   
  41cb2d:	fldcw  WORD PTR [edx-0x496af0df]
  41cb33:	leave  
  41cb34:	cdq    
  41cb35:	jnp    0x41cbb2
  41cb37:	xchg   esi,eax
  41cb38:	dec    ebp
  41cb39:	jb     0x41cb2b
  41cb3b:	sbb    dh,cl
  41cb3d:	jle    0x41cb55
  41cb3f:	imul   edx,esi,0xffffff9b
  41cb42:	fiadd  DWORD PTR [ebx]
  41cb44:	xchg   BYTE PTR [esi],bl
  41cb46:	test   al,0x1f
  41cb48:	xchg   edx,eax
  41cb49:	pop    eax
  41cb4a:	iret   
  41cb4b:	in     al,dx
  41cb4c:	repz jle 0x41cba7
  41cb4f:	icebp  
  41cb50:	outs   dx,BYTE PTR ds:[esi]
  41cb51:	iret   
  41cb52:	jae    0x41cb39
  41cb54:	dec    esi
  41cb55:	gs ss xchg esp,eax
  41cb58:	shl    esp,0x7b
  41cb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb5c:	jbe    0x41cbd8
  41cb5e:	(bad)  
  41cb60:	pusha  
  41cb61:	pushf  
  41cb62:	js     0x41cbcb
  41cb64:	ds xchg ebp,eax
  41cb66:	inc    esp
  41cb67:	(bad)  
  41cb69:	loope  0x41cb50
  41cb6b:	xchg   esp,eax
  41cb6c:	or     al,0x64
  41cb6e:	or     DWORD PTR [esp+eax*4],0x36a5f53d
  41cb75:	dec    ebx
  41cb76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb77:	xchg   dh,dl
  41cb79:	xchg   ecx,eax
  41cb7a:	sub    ecx,DWORD PTR [esi]
  41cb7c:	ret    0xa4e8
  41cb7f:	(bad)  
  41cb80:	jle    0x41cba0
  41cb82:	cmp    esi,DWORD PTR [ecx+0x25afeabf]
  41cb88:	loopne 0x41cbc3
  41cb8a:	push   ecx
  41cb8b:	imul   ecx,DWORD PTR [ebx-0x6f3bb306],0x5df7f59a
  41cb95:	xchg   esp,eax
  41cb96:	pop    edx
  41cb97:	dec    edi
  41cb98:	cmp    dh,BYTE PTR [ebx+0x6f]
  41cb9b:	cmpxchg BYTE PTR [edx-0x55],ch
  41cb9f:	push   ds
  41cba0:	sub    eax,0x782f99f1
  41cba5:	sub    edi,DWORD PTR [ecx+0x4aa8a86f]
  41cbab:	lea    edx,[ecx+0x6]
  41cbae:	(bad)  
  41cbaf:	gs mov ebx,0x720275cd
  41cbb5:	pop    edi
  41cbb6:	add    edx,DWORD PTR [edx-0x339f6064]
  41cbbc:	add    ebp,DWORD PTR [esi+eax*4]
  41cbbf:	lock clc 
  41cbc1:	daa    
  41cbc2:	dec    edi
  41cbc3:	stc    
  41cbc4:	rcr    DWORD PTR [esi-0x11],1
  41cbc7:	xchg   edi,eax
  41cbc8:	ins    BYTE PTR es:[edi],dx
  41cbc9:	jmp    0x41cbee
  41cbcb:	rcl    BYTE PTR [ecx+ebx*1],cl
  41cbce:	or     eax,ebx
  41cbd0:	mov    ebx,0x4804a3ae
  41cbd5:	mov    dh,0x4c
  41cbd7:	cld    
  41cbd8:	mov    ch,0xae
  41cbda:	mov    bl,BYTE PTR [eax]
  41cbdc:	mov    edx,0x163e76ed
  41cbe1:	mov    bl,0x43
  41cbe3:	xor    edx,DWORD PTR [esi]
  41cbe5:	shr    esi,1
  41cbe7:	push   esp
  41cbe8:	test   DWORD PTR [edx-0x43cabb4],0x5830d3fa
  41cbf2:	shl    BYTE PTR [ecx-0x6f],1
  41cbf5:	jp     0x41cc5e
  41cbf7:	push   ds
  41cbf8:	fidiv  DWORD PTR [edx]
  41cbfa:	mov    ds:0xa171a7cb,al
  41cbff:	or     al,0xb5
  41cc01:	jb     0x41cc00
  41cc03:	scas   eax,DWORD PTR es:[edi]
  41cc04:	call   0xd6ce70a7
  41cc09:	inc    ecx
  41cc0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc0b:	data16 mov ds:0x5cd94fb4,al
  41cc11:	jg     0x41cc22
  41cc13:	push   ebx
  41cc14:	jb     0x41cbb7
  41cc16:	sub    edi,DWORD PTR [ecx+0x8]
  41cc19:	ins    BYTE PTR es:[edi],dx
  41cc1a:	in     eax,0xfe
  41cc1c:	mov    al,0x68
  41cc1e:	sub    edi,DWORD PTR [ebx+0x13]
  41cc21:	int3   
  41cc22:	push   es
  41cc23:	(bad)  
  41cc24:	sub    BYTE PTR ds:0x13f09789,bh
  41cc2a:	and    al,BYTE PTR ds:0x2bb4ef19
  41cc30:	stc    
  41cc31:	mov    WORD PTR [edi+0x2b9db537],ds
  41cc37:	outs   dx,BYTE PTR ds:[esi]
  41cc38:	cmp    dh,bl
  41cc3a:	mov    ?,WORD PTR [eax]
  41cc3c:	mov    dl,0xe8
  41cc3e:	mov    dl,BYTE PTR [edx+eax*2]
  41cc41:	(bad)  
  41cc42:	pushf  
  41cc43:	aam    0x8a
  41cc45:	in     eax,0xca
  41cc47:	div    dl
  41cc49:	mov    DWORD PTR [edx+0x3bd7490a],edi
  41cc4f:	(bad)  
  41cc50:	arpl   bx,cx
  41cc52:	or     al,0x2f
  41cc54:	and    al,0xb6
  41cc56:	in     eax,dx
  41cc57:	inc    ebp
  41cc58:	ins    DWORD PTR es:[edi],dx
  41cc59:	imul   esp,DWORD PTR [edi+eax*2],0x1b73511b
  41cc60:	(bad)
  41cc63:	xchg   edi,eax
  41cc64:	fisub  DWORD PTR [edx+0x5b]
  41cc67:	popf   
  41cc68:	jmp    0xf5e01338
  41cc6d:	xlat   BYTE PTR ds:[ebx]
  41cc6e:	and    edx,DWORD PTR [edx+0x3f]
  41cc71:	out    dx,eax
  41cc72:	push   cs
  41cc73:	pop    ecx
  41cc74:	stos   DWORD PTR es:[edi],eax
  41cc75:	xchg   esi,eax
  41cc76:	inc    esp
  41cc77:	es jnp 0x41ccbb
  41cc7a:	pop    ds
  41cc7b:	cmp    bl,0x52
  41cc7e:	sbb    DWORD PTR [edi-0x64414e73],ebp
  41cc84:	(bad)  
  41cc85:	xchg   ebp,eax
  41cc86:	jo     0x41cc2d
  41cc88:	leave  
  41cc89:	test   ah,al
  41cc8b:	leave  
  41cc8c:	pop    eax
  41cc8d:	test   al,0x5e
  41cc8f:	jp     0x41cc49
  41cc91:	add    DWORD PTR [esi-0x2f715239],ecx
  41cc97:	repnz dec edi
  41cc99:	ss mov esp,0x1e7cb11c
  41cc9f:	cmp    al,BYTE PTR [edi+0x70705bc8]
  41cca5:	out    dx,eax
  41cca6:	mov    cl,BYTE PTR ds:0xc592b030
  41ccac:	in     eax,dx
  41ccad:	xor    DWORD PTR [ebx+0x6c475fe3],esp
  41ccb3:	leave  
  41ccb4:	push   cs
  41ccb5:	icebp  
  41ccb6:	test   BYTE PTR [ebx+0x43],0x26
  41ccba:	jmp    0x83d9:0xd19cac0c
  41ccc1:	mov    bh,0x25
  41ccc3:	fadd   DWORD PTR [edx+0x65]
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	jl     0x41cd30
  41ccc9:	das    
  41ccca:	imul   ebp,DWORD PTR [edx],0x81b02b3c
  41ccd0:	loopne 0x41cc9a
  41ccd2:	(bad)  
  41ccd3:	loopne 0x41ccc4
  41ccd5:	sub    eax,0x38f55982
  41ccda:	fimul  WORD PTR [ecx+0x3b]
  41ccdd:	outs   dx,DWORD PTR ds:[esi]
  41ccde:	or     BYTE PTR [edi+0x51dee48a],bh
  41cce4:	(bad)  
  41cce8:	sub    BYTE PTR [ebx+0x77],bh
  41cceb:	in     al,0x2c
  41cced:	inc    ebx
  41ccee:	out    0x96,eax
  41ccf0:	hlt    
  41ccf1:	sbb    al,0xc6
  41ccf3:	cmp    eax,0xe220cffa
  41ccf8:	in     al,dx
  41ccf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccfa:	push   cs
  41ccfb:	hlt    
  41ccfc:	pop    ss
  41ccfd:	addr16 push es
  41ccff:	fimul  DWORD PTR [edx+0x37]
  41cd02:	and    BYTE PTR [ebx-0xf],cl
  41cd05:	enter  0x9291,0x5a
  41cd09:	jb     0x41ccf4
  41cd0b:	add    eax,0xeb671c85
  41cd10:	adc    BYTE PTR ds:0xcd9b9759,bh
  41cd16:	in     eax,0xc2
  41cd18:	fdiv   QWORD PTR [edi-0x213fb4a5]
  41cd1e:	daa    
  41cd1f:	xor    al,0x75
  41cd21:	clc    
  41cd22:	xchg   ebx,eax
  41cd23:	mov    DWORD PTR [ebx-0x3],esp
  41cd26:	mov    fs,WORD PTR [ecx-0x15]
  41cd29:	adc    eax,0xa0ed4b89
  41cd2e:	jl     0x41cd04
  41cd30:	or     edx,DWORD PTR [edi+ebx*2]
  41cd33:	push   eax
  41cd34:	dec    edx
  41cd35:	daa    
  41cd36:	cdq    
  41cd37:	shl    DWORD PTR [eax-0x797f7916],0x1f
  41cd3e:	test   ecx,esp
  41cd40:	add    dl,BYTE PTR [ebp+0x27f6f096]
  41cd46:	into   
  41cd47:	sbb    DWORD PTR [eax-0x7fdf9511],0xffffffcc
  41cd4e:	sub    edi,DWORD PTR [ebx-0x53]
  41cd51:	push   ebx
  41cd52:	cmc    
  41cd53:	push   edi
  41cd54:	jg     0x41cd37
  41cd56:	push   esi
  41cd57:	xchg   edi,eax
  41cd58:	pop    esp
  41cd59:	es cwde 
  41cd5b:	sub    esp,DWORD PTR [ecx+0x32620d9c]
  41cd61:	stos   BYTE PTR es:[edi],al
  41cd62:	adc    DWORD PTR [eax+0x36097ca9],esi
  41cd68:	and    al,0xee
  41cd6a:	add    ah,ch
  41cd6c:	adc    al,0x1a
  41cd6e:	scas   al,BYTE PTR es:[edi]
  41cd6f:	fcom   DWORD PTR [ecx]
  41cd71:	shl    BYTE PTR [edi+0x6e],1
  41cd74:	jmp    0x41cddd
  41cd76:	jno    0x41cd7a
  41cd78:	test   al,0xe6
  41cd7a:	mov    ebx,0x7cdc0fd3
  41cd7f:	xchg   ebx,eax
  41cd80:	not    bl
  41cd82:	nop
  41cd83:	pop    ss
  41cd84:	xchg   ecx,eax
  41cd85:	inc    edx
  41cd86:	mov    esi,0xb636558b
  41cd8b:	xor    eax,DWORD PTR [edi]
  41cd8d:	mov    ebp,DWORD PTR [esi]
  41cd8f:	shl    DWORD PTR [edi-0x1f],0xa4
  41cd93:	cmp    ebx,DWORD PTR [edx]
  41cd95:	cwde   
  41cd96:	out    0xa3,al
  41cd98:	inc    esp
  41cd99:	mov    BYTE PTR [edx+0x46],bh
  41cd9c:	into   
  41cd9d:	jl     0x41cda0
  41cd9f:	fwait
  41cda0:	jmp    0x29d:0x382e5bd7
  41cda7:	ins    BYTE PTR es:[edi],dx
  41cda8:	sbb    DWORD PTR [ebx],ebx
  41cdaa:	sbb    eax,ebx
  41cdac:	call   FWORD PTR [ebx-0x597d8da1]
  41cdb2:	mov    bh,0x2
  41cdb4:	retf   0x9ec2
  41cdb7:	fmul   QWORD PTR [ebx]
  41cdb9:	mov    al,al
  41cdbb:	les    edx,FWORD PTR [ecx]
  41cdbd:	dec    eax
  41cdbe:	leave  
  41cdbf:	in     eax,dx
  41cdc0:	dec    esi
  41cdc1:	sub    al,0xfc
  41cdc3:	pushf  
  41cdc4:	stc    
  41cdc5:	div    DWORD PTR gs:[ecx+0x8]
  41cdc9:	pop    ecx
  41cdca:	dec    esi
  41cdcb:	mov    dh,0xc2
  41cdcd:	mov    edx,?
  41cdcf:	jne    0x41cd92
  41cdd1:	inc    esp
  41cdd2:	in     eax,dx
  41cdd3:	idiv   ah
  41cdd5:	mov    cl,0x10
  41cdd7:	mov    ebx,0xa6f30f8f
  41cddc:	pop    eax
  41cddd:	in     al,dx
  41cdde:	xchg   DWORD PTR [esi],ecx
  41cde0:	sub    eax,0x57c408f7
  41cde5:	xchg   ecx,eax
  41cde6:	mov    ecx,0x45e22d73
  41cdeb:	pop    eax
  41cdec:	inc    esp
  41cded:	jae    0x41cddc
  41cdef:	xadd   DWORD PTR [ebx-0x17],eax
  41cdf3:	gs out dx,al
  41cdf5:	fs out dx,eax
  41cdf7:	ja     0x41ce57
  41cdf9:	mov    dl,0x48
  41cdfb:	call   0x2a82:0x5cba98c0
  41ce02:	fs cmp eax,0xa9ab6222
  41ce08:	jmp    0x585c:0x7031f617
  41ce0f:	outs   dx,BYTE PTR ds:[esi]
  41ce10:	and    eax,0xc3673aed
  41ce15:	repz sub DWORD PTR [esp+eiz*4+0x14d97708],edx
  41ce1d:	lahf   
  41ce1e:	jb     0x41ce24
  41ce20:	inc    edi
  41ce21:	dec    ebp
  41ce22:	inc    esi
  41ce23:	sub    BYTE PTR [eax-0x47405585],bh
  41ce29:	xor    bh,dh
  41ce2b:	xchg   edx,eax
  41ce2d:	sbb    ah,dh
  41ce2f:	and    al,0x4
  41ce31:	dec    ecx
  41ce32:	stos   BYTE PTR es:[edi],al
  41ce33:	aad    0xe9
  41ce35:	adc    al,0xf7
  41ce37:	je     0x41ce0c
  41ce39:	int    0x61
  41ce3b:	jl     0x41cdee
  41ce3d:	jne    0x41ceac
  41ce3f:	sbb    eax,0x1888da95
  41ce44:	in     eax,dx
  41ce45:	jmp    0x836a:0xbad23d08
  41ce4c:	int    0x89
  41ce4e:	mov    esp,0x3c1d8ca9
  41ce53:	icebp  
  41ce54:	push   0x2f7b46e6
  41ce59:	mov    bh,0xcc
  41ce5b:	cmp    DWORD PTR [eax+0x5],0xffffffb4
  41ce5f:	mov    eax,0x1afdd261
  41ce64:	in     eax,dx
  41ce65:	add    ecx,esp
  41ce67:	xlat   BYTE PTR ds:[ebx]
  41ce68:	mov    BYTE PTR [ecx-0x6ccb6bc9],bl
  41ce6e:	push   es
  41ce6f:	mov    ebx,0xf366d20
  41ce74:	jmp    0xe01e:0xc957c3c3
  41ce7b:	sbb    DWORD PTR [ecx+0x741204a4],ecx
  41ce81:	xor    DWORD PTR [ebx+edx*2+0x3573bf5],esi
  41ce88:	loope  0x41cea7
  41ce8a:	fiadd  DWORD PTR [ebx-0x5]
  41ce8d:	push   cs
  41ce8e:	in     eax,dx
  41ce8f:	mov    ah,0xb1
  41ce91:	bound  ecx,QWORD PTR [ecx+0x6c74970d]
  41ce97:	pop    ecx
  41ce98:	out    0xc,eax
  41ce9a:	js     0x41cebf
  41ce9c:	and    ah,bl
  41ce9e:	pop    edi
  41ce9f:	ja     0x41cee5
  41cea1:	inc    esp
  41cea2:	out    0x3a,eax
  41cea4:	inc    eax
  41cea5:	adc    esp,ebp
  41cea7:	hlt    
  41cea8:	adc    ah,BYTE PTR [edx+0x17834697]
  41ceae:	fs gs sahf 
  41ceb1:	ja     0x41ceb2
  41ceb3:	mov    esi,0x7df508f9
  41ceb8:	xchg   ebx,eax
  41ceb9:	retf   0x734f
  41cebc:	imul   ebx,edx,0x713fdfb1
  41cec2:	scas   eax,DWORD PTR es:[edi]
  41cec3:	lahf   
  41cec4:	test   eax,0x60ef589d
  41cec9:	or     BYTE PTR [edx],cl
  41cecb:	ss loop 0x41ceda
  41cece:	(bad)
  41ced2:	fldenv [edi]
  41ced4:	inc    eax
  41ced5:	xchg   ebp,eax
  41ced6:	mov    WORD PTR [ebx-0x61],gs
  41ced9:	mov    ebx,0xff62dc78
  41cede:	xchg   BYTE PTR [esi+0x4576197],bh
  41cee4:	in     eax,0x64
  41cee6:	loopne 0x41cf66
  41cee8:	jecxz  0x41ce88
  41ceea:	out    0xbc,al
  41ceec:	xchg   edi,eax
  41ceed:	neg    BYTE PTR ds:[eax-0x74]
  41cef1:	xor    al,al
  41cef3:	sti    
  41cef4:	mov    cl,0xd1
  41cef6:	xor    esi,DWORD PTR [ecx-0x29d8d786]
  41cefc:	leave  
  41cefd:	(bad)  
  41cefe:	push   ebx
  41ceff:	(bad)  
  41cf00:	stos   DWORD PTR es:[edi],eax
  41cf01:	push   cs
  41cf02:	lods   al,BYTE PTR ds:[esi]
  41cf03:	popf   
  41cf04:	arpl   WORD PTR [edi+ebp*4+0x164d2f72],bx
  41cf0b:	mov    eax,ds:0x2f9620f1
  41cf10:	into   
  41cf11:	fdiv   st,st(7)
  41cf13:	fdiv   st(5),st
  41cf15:	ror    ebp,0x3b
  41cf18:	lds    esp,FWORD PTR gs:[eax]
  41cf1b:	cmp    BYTE PTR [edi+0x5c],bl
  41cf1e:	and    BYTE PTR [ecx+0x9],ah
  41cf21:	pop    esp
  41cf22:	shl    BYTE PTR [ebp-0x6b6bc5ce],0x95
  41cf29:	cs cdq 
  41cf2b:	dec    esi
  41cf2c:	div    DWORD PTR [edx]
  41cf2e:	jge    0x41cef0
  41cf30:	mov    WORD PTR [edx],?
  41cf32:	ins    BYTE PTR es:[edi],dx
  41cf33:	ss call 0xc1f6:0x54d4ad5e
  41cf3b:	cmc    
  41cf3c:	mov    ds:0x2d80586d,eax
  41cf41:	repnz inc ecx
  41cf43:	out    dx,al
  41cf44:	aaa    
  41cf45:	push   esi
  41cf46:	leave  
  41cf47:	nop
  41cf48:	(bad)  
  41cf4a:	inc    eax
  41cf4b:	mov    cl,0x81
  41cf4d:	lods   al,BYTE PTR ds:[esi]
  41cf4e:	mov    dl,0x7e
  41cf50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf51:	dec    ebp
  41cf52:	adc    al,0x1b
  41cf54:	mov    WORD PTR [edi-0x41],gs
  41cf57:	mov    cl,0x2e
  41cf59:	pop    edx
  41cf5a:	test   eax,0xaf03c0a5
  41cf5f:	dec    BYTE PTR [ecx+0x3a]
  41cf62:	dec    ebp
  41cf63:	mov    edx,0xa2f337d1
  41cf68:	into   
  41cf69:	adc    BYTE PTR [ebx+eax*8],cl
  41cf6c:	aad    0x6e
  41cf6e:	adc    DWORD PTR [ecx-0x65],esp
  41cf71:	xlat   BYTE PTR ds:[ebx]
  41cf72:	mov    eax,ds:0xbb72aacf
  41cf77:	call   0xf4e0:0xd736411c
  41cf7e:	jl     0x41cfe5
  41cf80:	sbb    al,0xe8
  41cf82:	out    0x62,al
  41cf84:	or     BYTE PTR [edx],dl
  41cf86:	shl    BYTE PTR [edi-0x5ec2f25b],1
  41cf8c:	arpl   di,si
  41cf8e:	jmp    0x1146d8f3
  41cf93:	push   es
  41cf94:	jg     0x41cfec
  41cf96:	(bad)  
  41cf97:	or     eax,0x24fe4c43
  41cf9c:	sbb    BYTE PTR [edx+0x2a],ch
  41cf9f:	or     BYTE PTR [edx],0x93
  41cfa2:	mov    edi,0xef2aa12f
  41cfa7:	sub    DWORD PTR [edx],esi
  41cfa9:	and    ecx,0x8dd00ab1
  41cfaf:	dec    edx
  41cfb0:	jp     0x41cf5b
  41cfb2:	add    BYTE PTR [esi],ch
  41cfb4:	inc    edi
  41cfb5:	aad    0x8a
  41cfb7:	imul   edi,DWORD PTR [ebp+0x25],0xffffffd9
  41cfbb:	out    0x9e,eax
  41cfbd:	shr    BYTE PTR [ebx],0x56
  41cfc0:	ins    BYTE PTR es:[edi],dx
  41cfc1:	fs push esi
  41cfc3:	arpl   WORD PTR [ebx+0xc],cx
  41cfc6:	scas   al,BYTE PTR es:[edi]
  41cfc7:	dec    esp
  41cfc8:	lds    eax,FWORD PTR [eax-0x4f]
  41cfcb:	dec    esp
  41cfcc:	sub    eax,0x6496113d
  41cfd1:	and    eax,0x60a1c07e
  41cfd6:	ret    0xd030
  41cfd9:	push   ebx
  41cfda:	dec    edi
  41cfdb:	in     eax,dx
  41cfdc:	push   ecx
  41cfdd:	jecxz  0x41cf60
  41cfdf:	ins    BYTE PTR es:[edi],dx
  41cfe0:	mov    BYTE PTR [esp+ebx*2-0x16],0x80
  41cfe5:	fisttp WORD PTR [ebx+0x7f]
  41cfe8:	xchg   edi,eax
  41cfe9:	adc    cl,BYTE PTR [edi-0x7e]
  41cfec:	xor    edx,DWORD PTR [ebp+0x7e]
  41cfef:	mov    cl,0xe6
  41cff1:	pop    esp
  41cff2:	in     eax,0xf
  41cff4:	jns    0x41cfa6
  41cff6:	(bad)  
  41cff7:	mov    ebx,0xe4cc4ba
  41cffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cffd:	dec    ebp
  41cffe:	push   ss
  41cfff:	pop    ecx
  41d000:	int3   
  41d001:	push   eax
  41d002:	xor    BYTE PTR [edx-0x26c7fde2],0x38
  41d009:	fnstcw WORD PTR [ebp-0x1b]
  41d00c:	pop    ebp
  41d00d:	rol    DWORD PTR [edi-0x4d2187aa],cl
  41d013:	stc    
  41d014:	mov    ds:0x6e511c42,eax
  41d019:	sti    
  41d01a:	out    dx,al
  41d01b:	dec    edi
  41d01c:	push   edi
  41d01d:	shr    ebx,1
  41d01f:	mov    edx,0xfed3d31
  41d024:	sbb    DWORD PTR [edi+0x47],0xffffffb2
  41d028:	mov    cl,0xd7
  41d02a:	cmp    BYTE PTR [ecx+eiz*2+0x1eed3f2c],bh
  41d031:	mov    eax,ds:0x1e66d7f
  41d036:	sub    al,0xb8
  41d038:	ds test al,0x4c
  41d03b:	sbb    al,0xd4
  41d03d:	fnstcw WORD PTR [ecx+0x5a]
  41d040:	fwait
  41d041:	push   ss
  41d042:	cmp    BYTE PTR [ebx-0x56],dl
  41d045:	aam    0x20
  41d047:	jns    0x41d0bf
  41d049:	ja     0x41cfe9
  41d04b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d04c:	mov    bh,0x88
  41d04e:	push   ecx
  41d04f:	push   edx
  41d050:	adc    eax,0x35de5740
  41d055:	or     eax,0x76e85e7
  41d05a:	in     eax,0xae
  41d05c:	scas   al,BYTE PTR es:[edi]
  41d05d:	pop    es
  41d05e:	or     edi,DWORD PTR [esi+0x4a]
  41d061:	in     al,dx
  41d062:	add    al,0x4
  41d064:	call   0x87887667
  41d069:	sar    edi,0xad
  41d06c:	inc    ecx
  41d06d:	dec    esi
  41d06e:	fwait
  41d06f:	add    ecx,DWORD PTR ds:0xf69b7410
  41d075:	and    al,0x91
  41d077:	xchg   DWORD PTR [ecx],eax
  41d079:	jne    0x41d0d3
  41d07b:	inc    ebp
  41d07c:	pop    esp
  41d07d:	fdiv   QWORD PTR [ebx+0x4493acb9]
  41d083:	add    DWORD PTR [ebp+0x461dd84c],ebp
  41d089:	mov    esp,0xeb4af96e
  41d08e:	pop    es
  41d08f:	cdq    
  41d090:	push   0xd6ff150e
  41d095:	cs and edi,ebp
  41d098:	stc    
  41d099:	bound  ebx,QWORD PTR [ebp+0x58045bd7]
  41d09f:	jno    0x41d065
  41d0a1:	fadd   QWORD PTR [edi-0x80]
  41d0a4:	jbe    0x41d080
  41d0a6:	or     ebp,ecx
  41d0a8:	mov    bl,0x99
  41d0aa:	sahf   
  41d0ab:	daa    
  41d0ac:	das    
  41d0ad:	and    DWORD PTR [ecx+0x421feb6c],ebp
  41d0b3:	jo     0x41d042
  41d0b5:	pop    es
  41d0b6:	sbb    DWORD PTR [ebx],ebp
  41d0b8:	mov    ebp,0x4b2020ed
  41d0bd:	and    BYTE PTR [ebx-0x1f],al
  41d0c0:	push   0x8f159bf3
  41d0c5:	sahf   
  41d0c6:	popf   
  41d0c7:	aam    0x8e
  41d0c9:	test   eax,0x2ac60d56
  41d0ce:	mov    al,0x90
  41d0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0d1:	dec    ebp
  41d0d2:	cmp    BYTE PTR [ecx],ch
  41d0d4:	fst    DWORD PTR [ecx+ecx*4-0x4b43e1d9]
  41d0db:	out    0xe0,al
  41d0dd:	adc    BYTE PTR [esi-0x61ac6ae3],ch
  41d0e3:	mov    al,ds:0x85a79cac
  41d0e8:	cs and al,0xe5
  41d0eb:	ret    0x7261
  41d0ee:	xchg   ecx,eax
  41d0ef:	mov    bl,cl
  41d0f1:	dec    ebx
  41d0f2:	push   ebp
  41d0f3:	or     esp,DWORD PTR [edi-0x79429cd8]
  41d0f9:	mov    bh,0x6c
  41d0fb:	sub    al,0x15
  41d0fd:	(bad)  
  41d0fe:	xor    cl,BYTE PTR [eax]
  41d100:	pop    ebp
  41d101:	jo     0x41d114
  41d103:	pop    edx
  41d104:	iret   
  41d105:	or     bh,bl
  41d107:	nop
  41d108:	leave  
  41d109:	add    edi,DWORD PTR [edi+0x49]
  41d10c:	enter  0x50b4,0x4a
  41d110:	mov    al,0xab
  41d112:	sub    eax,0x8de481cb
  41d117:	int    0x77
  41d119:	aad    0x59
  41d11b:	xor    DWORD PTR [ebp+0x1d15355f],esp
  41d121:	mov    ebp,0xfd3791d0
  41d126:	xchg   ebp,eax
  41d127:	and    DWORD PTR ds:0x9901403d,esi
  41d12d:	aaa    
  41d12e:	call   0xa1a21c3e
  41d133:	ret    0xb497
  41d136:	shl    BYTE PTR [edi+0x7f],0xb8
  41d13a:	sbb    bh,al
  41d13c:	xor    BYTE PTR [edx*1+0x2b5aa8c4],bl
  41d143:	mov    al,0x2f
  41d145:	sub    BYTE PTR [esi-0xd],cl
  41d148:	scas   al,BYTE PTR es:[edi]
  41d149:	xchg   ecx,eax
  41d14a:	add    bl,BYTE PTR [edx+0x73c318be]
  41d150:	sbb    al,0x34
  41d152:	mov    DWORD PTR [esi],ebp
  41d154:	pop    ecx
  41d155:	pop    edx
  41d156:	sbb    al,0xdd
  41d158:	pop    esi
  41d159:	int    0xa3
  41d15b:	lea    esp,[ebp+0x52]
  41d15e:	xchg   DWORD PTR fs:0x2c65fdb6,edi
  41d165:	test   BYTE PTR [esi],al
  41d167:	stos   DWORD PTR es:[edi],eax
  41d168:	push   ecx
  41d169:	jae    0x41d1ea
  41d16b:	mov    ss,WORD PTR [edi]
  41d16d:	cs fst QWORD PTR gs:0x5f1ac253
  41d175:	xlat   BYTE PTR ds:[ebx]
  41d176:	mov    ebx,DWORD PTR [edi-0x1a1fc5db]
  41d17c:	out    0x1b,al
  41d17e:	(bad)  
  41d17f:	jl     0x41d1cb
  41d181:	call   0x5478:0x84398093
  41d188:	mov    gs,WORD PTR [ebp-0x80]
  41d18b:	and    eax,0x5feba7c
  41d190:	push   sp
  41d192:	add    edi,DWORD PTR [ebp-0x33]
  41d195:	lods   eax,DWORD PTR ds:[esi]
  41d196:	and    ch,BYTE PTR [ebx+0x36]
  41d199:	jg     0x41d164
  41d19b:	pop    edx
  41d19c:	test   al,0x4e
  41d19e:	dec    ecx
  41d19f:	or     eax,0xfb2d5560
  41d1a4:	and    al,0x78
  41d1a6:	lahf   
  41d1a7:	dec    esp
  41d1a8:	xor    BYTE PTR [esi-0x17],al
  41d1ab:	mov    dh,BYTE PTR [ebp+0x10795f1f]
  41d1b1:	cld    
  41d1b2:	js     0x41d136
  41d1b4:	add    BYTE PTR [esi],ah
  41d1b6:	lahf   
  41d1b7:	cmp    BYTE PTR [edx+0x33],al
  41d1ba:	adc    ecx,DWORD PTR [ebx]
  41d1bc:	iret   
  41d1bd:	mov    ah,0x3f
  41d1bf:	fisub  WORD PTR [ecx]
  41d1c1:	or     esi,DWORD PTR [eax+edi*2-0x52]
  41d1c5:	push   ss
  41d1c6:	jecxz  0x41d1d6
  41d1c8:	(bad)  
  41d1c9:	icebp  
  41d1ca:	sbb    BYTE PTR ds:0xa049ab9,0x87
  41d1d1:	ret    
  41d1d2:	loope  0x41d178
  41d1d4:	and    BYTE PTR ds:0x1ac09ec7,bh
  41d1da:	push   ds
  41d1db:	aas    
  41d1dc:	enter  0xe309,0x51
  41d1e0:	sub    bh,BYTE PTR [ebx+0x48]
  41d1e3:	mov    dl,0x75
  41d1e5:	mov    ds,WORD PTR [edx-0x6f]
  41d1e8:	mov    ch,0x5e
  41d1ea:	jge    0x41d221
  41d1ec:	sub    al,0x6c
  41d1ee:	(bad)  [edi+0x20]
  41d1f1:	or     BYTE PTR [ecx-0x1c],bl
  41d1f4:	xlat   BYTE PTR ds:[ebx]
  41d1f5:	loop   0x41d1fa
  41d1f7:	mov    eax,0x7b3e3e2d
  41d1fc:	mov    cl,BYTE PTR [ecx]
  41d1fe:	jb     0x41d20a
  41d200:	jp     0x41d27e
  41d202:	std    
  41d203:	xchg   esp,ebp
  41d205:	(bad)  
  41d206:	stc    
  41d207:	mov    dh,0x1c
  41d209:	mov    DWORD PTR [edi],eax
  41d20b:	xlat   BYTE PTR ds:[ebx]
  41d20c:	dec    eax
  41d20d:	(bad)  
  41d20e:	adc    BYTE PTR [ebp+0xb499206],bl
  41d214:	ret    0x641d
  41d217:	pop    eax
  41d218:	mov    esi,0x23b3c940
  41d21d:	enter  0xce3,0x10
  41d221:	cdq    
  41d222:	outs   dx,DWORD PTR ds:[esi]
  41d223:	sub    al,0x88
  41d225:	lods   eax,DWORD PTR ds:[esi]
  41d226:	jecxz  0x41d1b6
  41d228:	xor    DWORD PTR [esi],esi
  41d22a:	push   esi
  41d22b:	adc    bh,BYTE PTR [ebp-0x145901c8]
  41d231:	mov    bh,0x64
  41d233:	push   0x1d46830c
  41d238:	mov    ds:0x57a4d70d,eax
  41d23d:	(bad)  
  41d23e:	test   al,0xa9
  41d240:	fsub   DWORD PTR [eax-0x46]
  41d243:	stos   BYTE PTR es:[edi],al
  41d244:	xor    DWORD PTR [esi+0xe125d90],esi
  41d24a:	mov    cs,WORD PTR [eax-0x5e]
  41d24d:	pop    esi
  41d24e:	ficomp DWORD PTR [ebp+0x60]
  41d251:	test   al,ch
  41d253:	add    ch,BYTE PTR [edi]
  41d255:	dec    eax
  41d256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d257:	mov    DWORD PTR [ebx],edx
  41d259:	hlt    
  41d25a:	test   bl,al
  41d25c:	or     dl,ch
  41d25e:	sar    DWORD PTR [edx],1
  41d260:	pop    ebx
  41d261:	jp     0x41d20e
  41d263:	icebp  
  41d264:	ja     0x41d268
  41d266:	frstpm(287 only) 
  41d268:	mov    bl,0xe2
  41d26a:	push   ecx
  41d26b:	or     eax,0x62bbe8be
  41d270:	clc    
  41d271:	call   0xe2e8:0x4f8c7f3a
  41d278:	ins    DWORD PTR es:[edi],dx
  41d279:	cld    
  41d27a:	mov    bh,0xfc
  41d27c:	xchg   esi,eax
  41d27d:	mov    edx,0x57e5545f
  41d282:	adc    ecx,DWORD PTR [edi-0x72dd3273]
  41d288:	pop    eax
  41d289:	add    edi,DWORD PTR [ebp-0x6d]
  41d28c:	xlat   BYTE PTR ds:[ebx]
  41d28d:	push   0x6adc8614
  41d292:	pop    edx
  41d293:	xchg   ebp,eax
  41d294:	mov    edi,0xa4b23ac8
  41d299:	cmp    al,bh
  41d29b:	out    dx,al
  41d29c:	xor    al,BYTE PTR [edi]
  41d29e:	pop    ss
  41d29f:	(bad)  
  41d2a0:	xor    DWORD PTR [ebx],eax
  41d2a2:	dec    edi
  41d2a3:	je     0x41d279
  41d2a5:	pop    esp
  41d2a6:	mov    esp,0xf966150d
  41d2ab:	add    ah,ah
  41d2ad:	sub    eax,0xdd126881
  41d2b2:	ret    0xb2e
  41d2b5:	mov    al,ds:0x1c6b5260
  41d2ba:	pop    ebp
  41d2bb:	mov    ?,WORD PTR [ebx-0x19]
  41d2be:	sbb    DWORD PTR ds:0xa0c206f,0x74212ac
  41d2c8:	mov    bl,0xc1
  41d2ca:	xchg   bh,dh
  41d2cc:	mov    ch,0x94
  41d2ce:	and    al,0xce
  41d2d0:	add    bl,dh
  41d2d2:	dec    edx
  41d2d3:	jbe    0x41d32b
  41d2d5:	push   ebx
  41d2d6:	or     eax,0x9b5b2ea8
  41d2db:	call   0xa69d:0xdaef4dbf
  41d2e2:	aas    
  41d2e3:	adc    dh,BYTE PTR [ebx-0x47a42b44]
  41d2e9:	jmp    0x7e5ed6a6
  41d2ee:	push   ss
  41d2ef:	enter  0x7296,0xfc
  41d2f3:	sbb    BYTE PTR [edi+0x26613f37],dl
  41d2f9:	cmp    ah,BYTE PTR [edi+0x12]
  41d2fc:	sbb    al,0xde
  41d2fe:	xchg   esp,eax
  41d2ff:	xor    al,0x4a
  41d301:	out    dx,al
  41d302:	sub    BYTE PTR [ebp+0x50],dh
  41d305:	ficomp WORD PTR [ecx-0x4db495de]
  41d30b:	cmp    DWORD PTR [ebp+0xae3aee],ecx
  41d311:	lods   al,BYTE PTR ds:[esi]
  41d312:	adc    al,0x83
  41d314:	das    
  41d315:	aas    
  41d316:	dec    eax
  41d317:	push   ebp
  41d318:	jmp    0xe5777137
  41d31d:	(bad)  
  41d31e:	das    
  41d31f:	adc    DWORD PTR [esi+0x47cb49ae],edi
  41d325:	fwait
  41d326:	retf   0x9209
  41d329:	popa   
  41d32a:	pop    ss
  41d32b:	mov    edx,eax
  41d32d:	sub    bl,BYTE PTR [eax-0x1cd171a2]
  41d333:	mov    cl,0x1d
  41d335:	mul    BYTE PTR [ecx-0x79]
  41d338:	out    0x1f,eax
  41d33a:	adc    eax,0xb80f30f3
  41d33f:	cmp    DWORD PTR [edi],ecx
  41d341:	pop    ebp
  41d342:	nop
  41d343:	popf   
  41d344:	scas   al,BYTE PTR es:[edi]
  41d345:	jo     0x41d313
  41d347:	ret    0x1266
  41d34a:	add    edi,DWORD PTR [ebx+0x18aa7d21]
  41d350:	loop   0x41d31b
  41d352:	dec    ecx
  41d353:	js     0x41d2f8
  41d355:	dec    ebx
  41d356:	sub    DWORD PTR [edx+0x7a21c221],0xc050b320
  41d360:	jg     0x41d2ef
  41d362:	mov    bh,0xe9
  41d364:	fcom   st(3)
  41d366:	dec    ecx
  41d367:	retf   0x948b
  41d36a:	cmp    DWORD PTR [eax+0x17],edi
  41d36d:	mov    esi,fs
  41d36f:	shl    BYTE PTR [ebx-0x4f],1
  41d372:	in     al,0x57
  41d374:	cwde   
  41d375:	sbb    BYTE PTR [ebx-0x9],cl
  41d378:	sub    BYTE PTR [edi],bl
  41d37a:	and    eax,0x8956a679
  41d37f:	das    
  41d380:	repz add eax,0xb73db355
  41d386:	les    edi,FWORD PTR [ebx-0x80]
  41d389:	sub    ah,BYTE PTR [edx]
  41d38b:	mov    bh,0x74
  41d38d:	push   edx
  41d38e:	shl    BYTE PTR ds:0xe8cf0320,cl
  41d394:	pop    esi
  41d395:	adc    BYTE PTR [ecx],0xce
  41d398:	lods   eax,DWORD PTR ds:[esi]
  41d399:	xchg   esi,eax
  41d39a:	int3   
  41d39b:	retf   
  41d39c:	inc    ecx
  41d39d:	jnp    0x41d322
  41d39f:	inc    esp
  41d3a0:	call   0x391f:0x9ab89734
  41d3a7:	rcl    DWORD PTR [ebx+0x1b],0xf1
  41d3ab:	call   0xe651:0xb6457289
  41d3b2:	test   ebx,ecx
  41d3b4:	mov    bh,0x57
  41d3b6:	cli    
  41d3b7:	iret   
  41d3b8:	inc    eax
  41d3b9:	clc    
  41d3ba:	fdiv   st,st(0)
  41d3bc:	cmc    
  41d3bd:	fcom   QWORD PTR [eax+ecx*4]
  41d3c0:	jb     0x41d36a
  41d3c2:	adc    al,0x3c
  41d3c4:	mov    ds:0xc3fb253b,eax
  41d3c9:	ror    ecx,1
  41d3cb:	pop    ds
  41d3cc:	scas   eax,DWORD PTR es:[edi]
  41d3cd:	sbb    DWORD PTR [edi-0x11],ebx
  41d3d0:	loopne 0x41d36e
  41d3d2:	add    ch,al
  41d3d4:	enter  0x10c8,0xdd
  41d3d8:	sub    BYTE PTR [edx+0x191fb990],ch
  41d3de:	adc    al,0x98
  41d3e0:	and    edi,DWORD PTR [ebx+ebx*4]
  41d3e3:	jnp    0x41d3db
  41d3e5:	sub    esp,DWORD PTR [ecx+0x190d8d45]
  41d3eb:	xchg   BYTE PTR [ebx],dl
  41d3ed:	dec    edi
  41d3ee:	adc    eax,DWORD PTR [esi+ecx*2-0x58]
  41d3f2:	(bad)  
  41d3f3:	popa   
  41d3f4:	pusha  
  41d3f5:	js     0x41d452
  41d3f7:	jns    0x41d3c1
  41d3f9:	fadd   DWORD PTR [edi]
  41d3fb:	xor    esp,esi
  41d3fd:	retf   
  41d3fe:	xor    BYTE PTR [edi],dl
  41d400:	retf   
  41d401:	(bad)  
  41d402:	sbb    bl,dl
  41d404:	jmp    0xa127e64c
  41d409:	jo     0x41d3c6
  41d40b:	mov    esi,0x7f1b2bb4
  41d410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d411:	jmp    0x3488feca
  41d416:	adc    BYTE PTR [ebx-0xd],dh
  41d419:	cmc    
  41d41a:	aaa    
  41d41b:	mov    BYTE PTR [edi+0x49],ah
  41d41e:	lods   eax,DWORD PTR ds:[esi]
  41d41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d420:	test   al,0x40
  41d422:	popa   
  41d423:	out    dx,eax
  41d424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d425:	sbb    BYTE PTR [eax-0x387961c6],al
  41d42b:	outs   dx,DWORD PTR ds:[esi]
  41d42c:	jp     0x41d474
  41d42e:	or     cl,bl
  41d430:	pop    edx
  41d431:	pop    edi
  41d432:	out    0x76,al
  41d434:	mov    ah,BYTE PTR [ebp+0x7]
  41d437:	js     0x41d3cd
  41d439:	ficom  DWORD PTR [edx+ebx*4]
  41d43c:	mov    al,ds:0x6e39d42a
  41d441:	mov    eax,ds:0xea434f3b
  41d446:	out    0xbb,al
  41d448:	add    al,0xc6
  41d44a:	call   0x4044:0x296aac1c
  41d451:	inc    ebp
  41d452:	popa   
  41d453:	jg     0x41d413
  41d455:	xchg   edi,eax
  41d456:	fcomp  QWORD PTR [esi]
  41d458:	add    DWORD PTR [esi+0x76],edx
  41d45b:	outs   dx,DWORD PTR ds:[esi]
  41d45c:	mov    ds,WORD PTR [ecx+0x38e3ef43]
  41d462:	xchg   ebx,eax
  41d463:	fstp   TBYTE PTR [bp+si]
  41d466:	ds stos DWORD PTR es:[edi],eax
  41d468:	out    0xf5,al
  41d46a:	sbb    al,0x71
  41d46c:	cmp    BYTE PTR [ebx-0x3c],0xfb
  41d470:	aad    0xd0
  41d472:	mov    ebx,0x68771cf4
  41d477:	dec    esp
  41d478:	jecxz  0x41d484
  41d47a:	imul   esi,DWORD PTR [ebx+ecx*2+0x7eb0ff52],0x17d07a11
  41d485:	leave  
  41d486:	inc    esi
  41d487:	mov    ebp,DWORD PTR [edi-0x2cfc6a43]
  41d48d:	fadd   DWORD PTR [eax-0x2d]
  41d490:	loope  0x41d47a
  41d492:	in     eax,0x49
  41d494:	mov    bl,0x2a
  41d496:	jbe    0x41d42c
  41d498:	fcomi  st,st(5)
  41d49a:	dec    eax
  41d49b:	inc    eax
  41d49c:	addr16 pop ebx
  41d49e:	stos   DWORD PTR es:[edi],eax
  41d49f:	int    0xbf
  41d4a1:	pop    edi
  41d4a2:	sub    eax,0x21d05965
  41d4a7:	imul   edx,DWORD PTR ds:0x41528c24,0xffffffaf
  41d4ae:	jle    0x41d488
  41d4b0:	mov    edi,0xe6504c02
  41d4b5:	stos   BYTE PTR es:[edi],al
  41d4b6:	jae    0x41d484
  41d4b8:	or     al,cl
  41d4ba:	pop    eax
  41d4bb:	addr16 pusha 
  41d4bd:	icebp  
  41d4be:	ret    0xafe
  41d4c1:	std    
  41d4c2:	mov    BYTE PTR [edi-0x614fee7],ch
  41d4c8:	jg     0x41d4df
  41d4ca:	inc    ebp
  41d4cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4cc:	(bad)  
  41d4cd:	cmc    
  41d4ce:	add    BYTE PTR [esi-0x28a3d953],0x25
  41d4d5:	xchg   ebp,eax
  41d4d6:	(bad)  
  41d4d7:	jmp    0x41d49d
  41d4d9:	lahf   
  41d4da:	dec    ebx
  41d4db:	cli    
  41d4dc:	mov    ah,0xa6
  41d4de:	inc    ecx
  41d4df:	sub    esp,esp
  41d4e1:	cld    
  41d4e2:	ss gs push cs
  41d4e5:	(bad)  
  41d4e6:	or     eax,DWORD PTR [ebx-0x2d]
  41d4e9:	fist   WORD PTR ds:[edx-0x1f19383c]
  41d4f0:	push   edx
  41d4f1:	test   BYTE PTR [edx],bl
  41d4f3:	xchg   ebp,eax
  41d4f4:	xor    edi,eax
  41d4f6:	sub    eax,0xa6df038b
  41d4fb:	inc    esp
  41d4fc:	xor    BYTE PTR [edx-0x4a58fe47],bl
  41d502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d503:	and    eax,0xfac3d8c9
  41d508:	test   DWORD PTR [edx+esi*1],edi
  41d50b:	dec    ebp
  41d50c:	scas   al,BYTE PTR es:[edi]
  41d50d:	jae    0x41d514
  41d50f:	aaa    
  41d510:	jle    0x41d4c1
  41d512:	sub    BYTE PTR [eax-0xc],cl
  41d515:	jmp    0x9427:0x5283a619
  41d51c:	inc    esp
  41d51d:	pop    eax
  41d51e:	and    BYTE PTR [eax],cl
  41d520:	mov    ecx,esi
  41d522:	inc    ebx
  41d523:	push   edi
  41d524:	cdq    
  41d525:	fldcw  WORD PTR [esi-0x7e]
  41d528:	jmp    0x41d578
  41d52a:	pop    ecx
  41d52b:	call   0xee7a:0x77da2d59
  41d532:	push   ebx
  41d533:	xchg   DWORD PTR [esi],esi
  41d535:	data16 fist DWORD PTR [ebp-0x1c6f9db8]
  41d53c:	fs cmp dh,dh
  41d53f:	shl    DWORD PTR [edx],1
  41d541:	ret    
  41d542:	jne    0x41d560
  41d544:	in     eax,dx
  41d545:	into   
  41d546:	in     al,0x4f
  41d548:	cwde   
  41d549:	mov    ch,BYTE PTR [edx+0x72]
  41d54c:	stos   DWORD PTR es:[edi],eax
  41d54d:	iret   
  41d54e:	add    DWORD PTR [edx-0x5e6b61bb],0x61
  41d555:	cmp    ch,bl
  41d557:	jge    0x41d5d1
  41d559:	outs   dx,BYTE PTR ds:[esi]
  41d55a:	dec    esi
  41d55b:	les    ecx,FWORD PTR [ebp+ebp*1-0x1608db1d]
  41d562:	pop    eax
  41d563:	pop    edi
  41d564:	push   esi
  41d565:	fimul  WORD PTR [esi]
  41d567:	pop    edx
  41d568:	or     cl,BYTE PTR [ebx-0x2d]
  41d56b:	hlt    
  41d56c:	cmp    BYTE PTR [edi],0x18
  41d56f:	cld    
  41d570:	lods   eax,DWORD PTR ds:[esi]
  41d571:	inc    esp
  41d572:	leave  
  41d573:	call   0x72ff864d
  41d578:	sbb    edi,DWORD PTR [eax+0x1a6a9421]
  41d57e:	jne    0x41d5ba
  41d580:	cmc    
  41d581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d582:	lock add eax,0xdf79512a
  41d588:	sub    WORD PTR [esi+ecx*1],sp
  41d58c:	loope  0x41d522
  41d58e:	out    0xec,eax
  41d590:	outs   dx,BYTE PTR ds:[esi]
  41d591:	cdq    
  41d592:	js     0x41d5a7
  41d594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d595:	scas   eax,DWORD PTR es:[edi]
  41d596:	in     eax,dx
  41d597:	or     DWORD PTR ds:0x9256741,ecx
  41d59d:	pop    ebp
  41d59e:	nop
  41d59f:	mov    cl,0xdb
  41d5a1:	ins    BYTE PTR es:[edi],dx
  41d5a2:	test   DWORD PTR [eax],ecx
  41d5a4:	xor    eax,0xc3ef1caa
  41d5a9:	and    eax,0x3bc0df84
  41d5ae:	imul   eax,esi,0x4fdb9bb9
  41d5b4:	out    0x28,eax
  41d5b6:	mov    ch,0x62
  41d5b8:	jmp    0xbd33:0xbd48f97a
  41d5bf:	sbb    ah,bh
  41d5c1:	mov    ah,0x4d
  41d5c3:	mov    esi,0x66087ebe
  41d5c8:	mov    esp,0xb66c2965
  41d5cd:	mov    ds:0x6a70d2c1,al
  41d5d2:	cmp    eax,esp
  41d5d4:	popf   
  41d5d5:	dec    eax
  41d5d6:	jns    0x41d626
  41d5d8:	loop   0x41d5c5
  41d5da:	repz sub ebx,esi
  41d5dd:	dec    edx
  41d5de:	out    0x90,al
  41d5e0:	pop    edx
  41d5e1:	sub    eax,0x15762f50
  41d5e6:	iret   
  41d5e7:	pop    edx
  41d5e8:	icebp  
  41d5e9:	sub    al,0xd3
  41d5eb:	and    DWORD PTR [ebx-0x71cf10c4],eax
  41d5f1:	xor    eax,0x27c85db2
  41d5f6:	mov    cl,0x16
  41d5f8:	mov    ah,0x37
  41d5fa:	jecxz  0x41d679
  41d5fc:	ins    BYTE PTR es:[edi],dx
  41d5fd:	ret    
  41d5fe:	retf   
  41d5ff:	mov    bh,0x5f
  41d601:	int3   
  41d602:	xor    bh,BYTE PTR [edi-0xb]
  41d605:	js     0x41d61c
  41d607:	aam    0xd4
  41d609:	cwde   
  41d60a:	inc    eax
  41d60b:	or     eax,0xdf30979b
  41d610:	in     al,0x85
  41d612:	pop    ss
  41d613:	je     0x41d693
  41d615:	fidiv  WORD PTR [ecx-0x1c]
  41d618:	test   ch,al
  41d61a:	out    0x5e,eax
  41d61c:	dec    esp
  41d61d:	push   edi
  41d61e:	jecxz  0x41d5b6
  41d620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d621:	cmp    esi,DWORD PTR [ecx+0x7f5e6174]
  41d627:	pushf  
  41d628:	add    al,0xe7
  41d62a:	out    dx,eax
  41d62b:	sbb    ebx,edi
  41d62d:	jmp    0xbaf4:0xe92e60ac
  41d634:	inc    edi
  41d635:	push   esi
  41d636:	add    al,0x0
  41d638:	sub    esi,DWORD PTR [ebx]
  41d63a:	cmp    eax,0x9572a651
  41d63f:	in     al,dx
  41d640:	dec    edx
  41d641:	fwait
  41d642:	jge    0x41d610
  41d644:	lahf   
  41d645:	mov    edi,0xb28f8a55
  41d64a:	lds    eax,FWORD PTR [ecx-0x32445cca]
  41d650:	mov    esp,0xa26a9f1c
  41d655:	inc    ecx
  41d656:	ret    
  41d657:	scas   al,BYTE PTR es:[edi]
  41d658:	in     al,dx
  41d659:	fadd   st(7),st
  41d65b:	int3   
  41d65c:	fcomp  DWORD PTR [ecx-0x60]
  41d65f:	mov    esp,0x9fde43ca
  41d664:	push   es
  41d665:	ror    BYTE PTR [esi-0x6ef2a3bd],1
  41d66b:	aas    
  41d66c:	mov    cl,0x3a
  41d66e:	adc    al,0xb0
  41d670:	adc    BYTE PTR [ecx-0x4b],al
  41d673:	sbb    eax,0x2242fbb4
  41d678:	imul   eax,eax,0xffffffa2
  41d67b:	scas   eax,DWORD PTR es:[edi]
  41d67c:	lahf   
  41d67d:	pop    esi
  41d67e:	sub    al,0xd8
  41d680:	mov    edi,0x11c439de
  41d685:	xchg   esp,eax
  41d686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d687:	jp     0x41d693
  41d689:	dec    esi
  41d68a:	sub    al,0xbc
  41d68c:	outs   dx,BYTE PTR ds:[esi]
  41d68d:	inc    ecx
  41d68e:	xchg   esp,eax
  41d68f:	xlat   BYTE PTR ds:[ebx]
  41d690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d691:	sti    
  41d692:	mov    eax,ds:0xb74f4eec
  41d697:	xchg   al,cl
  41d699:	xchg   ebp,eax
  41d69a:	mov    edx,0x128dfab0
  41d69f:	xchg   ecx,eax
  41d6a0:	inc    ebp
  41d6a1:	icebp  
  41d6a2:	in     al,dx
  41d6a3:	xchg   ebp,eax
  41d6a4:	(bad)  
  41d6a5:	loope  0x41d658
  41d6a7:	lods   eax,DWORD PTR ds:[esi]
  41d6a8:	cmp    bl,BYTE PTR [ebx+0x2c]
  41d6ab:	test   DWORD PTR [esi],esp
  41d6ad:	push   cs
  41d6ae:	mov    edx,0xbbd584a2
  41d6b3:	cmp    BYTE PTR [ecx-0x5a],bh
  41d6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b7:	pop    es
  41d6b8:	pop    esp
  41d6b9:	xlat   BYTE PTR ds:[ebx]
  41d6ba:	jnp    0x41d671
  41d6bc:	sbb    DWORD PTR [esi+0x54ce6924],eax
  41d6c2:	sub    al,0x9d
  41d6c4:	mov    al,ds:0xda18c2f7
  41d6c9:	mov    edi,0x32f552ef
  41d6ce:	ins    DWORD PTR es:[edi],dx
  41d6cf:	loopne 0x41d702
  41d6d1:	das    
  41d6d2:	pop    esi
  41d6d3:	call   0xa7f8dcbb
  41d6d8:	and    eax,0xf51c240d
  41d6dd:	xchg   ebp,eax
  41d6de:	push   es
  41d6df:	lahf   
  41d6e0:	and    al,0xb5
  41d6e2:	loop   0x41d6d3
  41d6e4:	enter  0xa1ce,0x67
  41d6e8:	mov    eax,0x20bb4169
  41d6ed:	fidivr DWORD PTR [edi]
  41d6ef:	stc    
  41d6f0:	add    dh,ch
  41d6f2:	mov    ebp,0xea86f480
  41d6f7:	sbb    ah,BYTE PTR [edx]
  41d6f9:	fidiv  DWORD PTR [ebx-0x58]
  41d6fc:	adc    BYTE PTR [eax],bh
  41d6fe:	retf   0xd69
  41d701:	fsub   QWORD PTR [ecx-0x34]
  41d704:	loope  0x41d754
  41d706:	sbb    ah,BYTE PTR [ecx-0x5889b268]
  41d70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d70d:	adc    eax,0x1f560477
  41d712:	pop    ss
  41d713:	pop    es
  41d714:	lock mov eax,ds:0x23fb31be
  41d71a:	xchg   ebp,eax
  41d71b:	sti    
  41d71c:	dec    esp
  41d71d:	push   ss
  41d71e:	scas   al,BYTE PTR es:[edi]
  41d71f:	fcom   DWORD PTR [edi]
  41d721:	repnz lea edi,[eax+0xa9efe6f]
  41d728:	call   0xb156ac14
  41d72d:	ds cwde 
  41d72f:	mov    ebp,edx
  41d731:	mov    bh,BYTE PTR [edi+0x13]
  41d734:	cmp    ebp,DWORD PTR [ebp*1-0x5488b4af]
  41d73b:	out    0x89,al
  41d73d:	jp     0x41d6d7
  41d73f:	mov    ah,0xd6
  41d741:	xchg   esi,eax
  41d742:	in     eax,0x2e
  41d744:	jo     0x41d6f1
  41d746:	mov    ebx,0x5e1af752
  41d74b:	sar    dl,1
  41d74d:	mov    edi,0xbe6e4cb7
  41d752:	sub    DWORD PTR [eax+edx*8],edx
  41d755:	pop    esi
  41d756:	mov    WORD PTR [edx],?
  41d758:	aaa    
  41d759:	xor    dh,cl
  41d75b:	adc    eax,0x9298e232
  41d760:	jecxz  0x41d727
  41d762:	adc    ch,BYTE PTR ss:[edx-0xa134930]
  41d769:	mov    al,0xd
  41d76b:	add    eax,0x278c3e65
  41d770:	pop    ebp
  41d771:	adc    dl,BYTE PTR ds:0xa3d1dddd
  41d777:	add    dh,BYTE PTR [edx+0x35842e23]
  41d77d:	addr16 rcr esi,cl
  41d780:	xchg   esp,eax
  41d781:	jmp    0x6dea4807
  41d786:	je     0x41d717
  41d788:	jne    0x41d779
  41d78a:	test   eax,0xb80f5e2a
  41d78f:	jb     0x41d7ef
  41d791:	out    0x90,eax
  41d793:	test   ebx,edx
  41d795:	ror    BYTE PTR [eax-0xc],1
  41d798:	mov    al,ds:0x6a3cf580
  41d79d:	and    bh,dl
  41d79f:	xor    cl,BYTE PTR [esi]
  41d7a1:	or     BYTE PTR [esi-0x5f9f9730],bl
  41d7a7:	mov    eax,0x21ac29e8
  41d7ac:	xchg   BYTE PTR [ebp+eiz*4+0x984ecdf],ch
  41d7b3:	mov    WORD PTR [ebx+ebp*8],ds
  41d7b6:	dec    edi
  41d7b7:	mov    edx,0x2d566297
  41d7bc:	cs retf 
  41d7be:	pop    eax
  41d7bf:	cmp    ecx,edi
  41d7c1:	jecxz  0x41d7ad
  41d7c3:	sbb    ah,BYTE PTR [ecx]
  41d7c5:	enter  0x5e44,0x13
  41d7c9:	sbb    BYTE PTR [esi-0x678bf35f],ah
  41d7cf:	jle    0x41d76f
  41d7d1:	or     BYTE PTR [edx+ecx*4-0x12],cl
  41d7d5:	push   0xffffffac
  41d7d7:	rcl    DWORD PTR [ebp+0x4b84a4ba],0x2d
  41d7de:	cmp    eax,0x4ee4ddad
  41d7e3:	leave  
  41d7e4:	(bad)  
  41d7e6:	cwde   
  41d7e7:	rcl    DWORD PTR [edx+eax*4],1
  41d7ea:	(bad)  
  41d7eb:	shl    BYTE PTR ds:0x7280d164,cl
  41d7f1:	jp     0x41d7ce
  41d7f3:	cmp    esi,DWORD PTR [esi-0x18e3660a]
  41d7f9:	(bad)  
  41d7fa:	arpl   sp,ax
  41d7fc:	xchg   DWORD PTR [edx],esp
  41d7fe:	ret    
  41d7ff:	popa   
  41d800:	sbb    ah,bl
  41d802:	cmp    DWORD PTR [ebx+0x23],esi
  41d805:	sbb    BYTE PTR [ebp-0x6c4bb191],ch
  41d80b:	cli    
  41d80c:	jbe    0x41d7c2
  41d80e:	shl    ebx,cl
  41d810:	lock xor eax,0x7a18c82f
  41d816:	jmp    0x41d888
  41d818:	add    bh,BYTE PTR [ecx]
  41d81a:	aas    
  41d81b:	call   0x3e4e:0x9b2dd0be
  41d822:	dec    esp
  41d823:	push   ebx
  41d824:	dec    esp
  41d825:	punpckhwd mm2,QWORD PTR [edi+0x22]
  41d829:	mov    dh,0x42
  41d82b:	push   ss
  41d82c:	ja     0x41d87d
  41d82e:	dec    eax
  41d82f:	xor    BYTE PTR [ebx+0x22],cl
  41d832:	cmp    ah,al
  41d834:	js     0x41d7c7
  41d836:	fnstcw WORD PTR [esi+0x71]
  41d839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d83a:	inc    ebx
  41d83b:	mov    ebx,0xf522aa90
  41d840:	push   eax
  41d841:	shl    DWORD PTR [ecx-0x7727bfb4],1
  41d847:	push   0x71fbd15
  41d84c:	int3   
  41d84d:	push   esp
  41d84e:	gs push es
  41d850:	jmp    0x41d8b0
  41d852:	jns    0x41d87f
  41d854:	mov    eax,ds:0x3d776a1e
  41d859:	cmp    BYTE PTR [edi+eax*2+0x25],0x55
  41d85e:	push   ebx
  41d85f:	lock stos DWORD PTR es:[edi],eax
  41d861:	jg     0x41d87d
  41d863:	mov    dl,0xa1
  41d865:	sbb    al,0x84
  41d868:	push   0x89e1f025
  41d86d:	dec    ebp
  41d86e:	jl     0x41d8c9
  41d870:	cdq    
  41d871:	(bad)  
  41d872:	retf   
  41d873:	sub    esp,DWORD PTR [ecx+0x4a]
  41d876:	add    eax,0xf405aaef
  41d87b:	lods   al,BYTE PTR ds:[esi]
  41d87c:	int    0xc4
  41d87e:	ror    BYTE PTR [edx],cl
  41d880:	pop    ss
  41d881:	retf   
  41d882:	jns    0x41d80f
  41d884:	out    dx,al
  41d885:	push   edx
  41d886:	sub    DWORD PTR [ecx-0xa489bff],edi
  41d88c:	xor    al,0x62
  41d88e:	mov    WORD PTR [ebx],?
  41d890:	lahf   
  41d891:	outs   dx,BYTE PTR ds:[esi]
  41d892:	xor    eax,0x291e3903
  41d897:	mov    cl,0x5e
  41d899:	ret    
  41d89a:	push   edx
  41d89b:	outs   dx,BYTE PTR ds:[esi]
  41d89c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d89d:	mov    ebp,ebp
  41d89f:	test   DWORD PTR [edi+0x42],ebp
  41d8a2:	test   ebp,esi
  41d8a4:	mov    ebx,0xef33cf57
  41d8a9:	data16 loope 0x41d83e
  41d8ac:	mov    ds:0x6a6b004b,eax
  41d8b1:	pop    ebp
  41d8b2:	lds    edx,FWORD PTR [ebx]
  41d8b4:	popa   
  41d8b5:	clc    
  41d8b6:	xor    eax,0x1a4a270c
  41d8bb:	fdivr  DWORD PTR [esi+ebp*8+0x67]
  41d8bf:	(bad)  
  41d8c0:	pop    ebx
  41d8c1:	and    DWORD PTR [ebp-0x2bd93b53],0xca85cfc
  41d8cb:	ss mov edx,0xb45c3f3d
  41d8d1:	mov    bl,0x18
  41d8d3:	xor    eax,0xf8482f95
  41d8d8:	das    
  41d8d9:	inc    esp
  41d8da:	iret   
  41d8db:	adc    DWORD PTR [edx],edx
  41d8dd:	jmp    0x41d87a
  41d8df:	push   cs
  41d8e0:	jno    0x41d955
  41d8e2:	sub    bh,cl
  41d8e4:	adc    ebp,DWORD PTR [edi-0x2a]
  41d8e7:	and    ebx,DWORD PTR [edx-0x1a]
  41d8ea:	call   0x7875:0x798fa7af
  41d8f1:	jbe    0x41d95d
  41d8f3:	cwde   
  41d8f4:	(bad)  
  41d8f5:	and    edi,ecx
  41d8f7:	sbb    bl,BYTE PTR [edi]
  41d8f9:	jmp    0x41d979
  41d8fb:	ss jnp 0x41d8e6
  41d8fe:	(bad)  
  41d8ff:	cmp    BYTE PTR [edi],cl
  41d901:	inc    ebp
  41d902:	ror    BYTE PTR [edi-0x672f3461],0x8
  41d909:	inc    edi
  41d90a:	mov    BYTE PTR [ebp+0x59],dh
  41d90d:	pusha  
  41d90e:	retf   0x5c58
  41d911:	dec    edi
  41d912:	addr16 lahf 
  41d914:	(bad)  
  41d915:	rol    ch,1
  41d917:	ss inc ebx
  41d919:	cwde   
  41d91a:	out    dx,eax
  41d91b:	xor    dl,ch
  41d91d:	push   esi
  41d91e:	int3   
  41d91f:	sbb    DWORD PTR [ebp+0x39],edx
  41d922:	enter  0xe2c0,0x14
  41d926:	mov    al,0x36
  41d928:	(bad)  
  41d929:	dec    edi
  41d92a:	ins    DWORD PTR es:[edi],dx
  41d92b:	xchg   BYTE PTR [edi-0x4c0fab6c],dl
  41d931:	call   0x68d9:0x9ef1367d
  41d938:	les    esi,FWORD PTR [ecx]
  41d93a:	mov    cl,0x57
  41d93c:	sbb    ah,ch
  41d93e:	mov    bl,0xee
  41d940:	jp     0x41d8cc
  41d942:	pop    esp
  41d943:	in     al,0x93
  41d945:	pop    ebx
  41d946:	jecxz  0x41d8db
  41d948:	push   0xffffff99
  41d94a:	sbb    edi,DWORD PTR [ecx-0x5e]
  41d94d:	push   ebx
  41d94e:	jo     0x41d907
  41d950:	push   0x35c93465
  41d955:	lock sbb DWORD PTR [ecx+0x21f651af],edx
  41d95c:	sbb    DWORD PTR [eax+0x3add1ccd],esp
  41d962:	mov    ds:0xf60312ec,eax
  41d967:	adc    BYTE PTR [edx-0x7d],0x92
  41d96b:	imul   esi,DWORD PTR [ebp+0x5c],0xe2a94c25
  41d972:	cmp    al,0xd2
  41d974:	pop    es
  41d975:	imul   ecx,ecx,0x85868927
  41d97b:	mov    esp,0x2beb47d8
  41d980:	push   edx
  41d981:	jno    0x41d966
  41d983:	cmc    
  41d984:	sub    dl,bh
  41d986:	xlat   BYTE PTR ds:[ebx]
  41d987:	mov    edi,DWORD PTR [esi+esi*2-0x5b]
  41d98b:	push   0xffffffed
  41d98d:	adc    DWORD PTR [edx],0xb450ebba
  41d993:	outs   dx,DWORD PTR ds:[esi]
  41d994:	mov    ds:0x9b895f94,eax
  41d999:	sbb    edx,DWORD PTR [ebx+0x195c55ed]
  41d99f:	sahf   
  41d9a0:	in     al,dx
  41d9a1:	test   eax,ebx
  41d9a3:	inc    edi
  41d9a4:	popf   
  41d9a5:	shl    DWORD PTR [ebp-0x67],0xe8
  41d9a9:	daa    
  41d9aa:	mov    edx,0x6773820b
  41d9af:	inc    esp
  41d9b0:	and    ah,dh
  41d9b2:	nop
  41d9b3:	retf   
  41d9b4:	add    dl,BYTE PTR [esi-0x42]
  41d9b7:	js     0x41d94a
  41d9b9:	bound  ecx,QWORD PTR [ecx+0x39]
  41d9bc:	fst    DWORD PTR [esi-0x20706ad8]
  41d9c2:	jmp    0x1b7ad793
  41d9c7:	cli    
  41d9c8:	clc    
  41d9c9:	xor    DWORD PTR [esi+0x21d71814],edx
  41d9cf:	dec    esp
  41d9d0:	inc    esp
  41d9d1:	mov    al,ds:0x7c692c3e
  41d9d6:	enter  0xbea9,0xd4
  41d9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9db:	inc    edx
  41d9dc:	les    ecx,FWORD PTR [edx]
  41d9de:	std    
  41d9df:	jmp    0x41da12
  41d9e1:	sub    al,0x95
  41d9e3:	adc    ah,BYTE PTR [esi+ebp*2-0x5a]
  41d9e7:	sbb    dh,BYTE PTR [ebp+0x38]
  41d9ea:	fnstsw WORD PTR [edx]
  41d9ec:	cmp    al,ch
  41d9ee:	out    0xe6,eax
  41d9f0:	fcom   DWORD PTR [ecx-0x80]
  41d9f3:	xor    ch,BYTE PTR [edi]
  41d9f5:	xor    esp,esp
  41d9f7:	popa   
  41d9f8:	pop    esp
  41d9f9:	stc    
  41d9fa:	test   BYTE PTR [eax],dl
  41d9fc:	pop    es
  41d9fd:	ret    0xfca6
  41da00:	shl    BYTE PTR [ebx+0x25f113d1],1
  41da06:	lahf   
  41da07:	mov    al,0xc8
  41da09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da0a:	clc    
  41da0b:	jmp    0xb5e228af
  41da10:	add    al,BYTE PTR [esp+edi*2-0x19b9f78f]
  41da17:	ds inc ah
  41da1a:	mov    al,ds:0xd7e4bfa4
  41da1f:	pop    esp
  41da20:	lea    esp,[edx+0x57e71abb]
  41da26:	push   esi
  41da27:	fisub  DWORD PTR [ebx+0x6277cfc3]
  41da2d:	jecxz  0x41d9b6
  41da2f:	mov    ebx,0x3b59ffb6
  41da34:	rcl    BYTE PTR [ebx+0x3b],cl
  41da37:	fwait
  41da38:	imul   ecx,ebp,0xffffff94
  41da3b:	(bad)  
  41da3c:	xlat   BYTE PTR ds:[ebx]
  41da3d:	mov    al,ds:0x25c93501
  41da42:	cwde   
  41da43:	push   esp
  41da44:	stos   BYTE PTR es:[edi],al
  41da45:	in     eax,0x5d
  41da47:	xchg   ebp,eax
  41da48:	loopne 0x41da64
  41da4a:	jo     0x41da60
  41da4c:	(bad)  
  41da4d:	pop    ebp
  41da4e:	cmc    
  41da4f:	inc    esp
  41da50:	push   ss
  41da51:	sti    
  41da52:	cli    
  41da53:	aaa    
  41da54:	js     0x41da99
  41da56:	(bad)  [ebp+0x62]
  41da59:	and    edi,DWORD PTR [ecx-0x28]
  41da5c:	aam    0x47
  41da5e:	push   ds
  41da5f:	sbb    DWORD PTR [edi-0x3e],edx
  41da62:	xor    bh,dh
  41da64:	pop    ebp
  41da65:	jnp    0x41da1c
  41da67:	dec    ebx
  41da68:	addr16 mov edi,0x4cd2ff73
  41da6e:	push   cs
  41da6f:	ins    DWORD PTR es:[edi],dx
  41da70:	outs   dx,BYTE PTR ds:[esi]
  41da71:	in     eax,dx
  41da72:	mov    cl,0x47
  41da74:	cli    
  41da75:	jne    0x41da2b
  41da77:	jge    0x41da52
  41da79:	stc    
  41da7a:	mov    esi,0x3dd679fa
  41da7f:	lods   eax,DWORD PTR ds:[esi]
  41da80:	sub    DWORD PTR [eax+ebp*1+0x1f9ef481],edx
  41da87:	add    ah,ch
  41da89:	cdq    
  41da8a:	pop    ecx
  41da8b:	push   esi
  41da8c:	or     BYTE PTR [eax],0x20
  41da8f:	hlt    
  41da90:	jl     0x41dac9
  41da92:	call   0x1c5523bd
  41da97:	imul   ebx,DWORD PTR [ecx+0x77],0x6b
  41da9b:	push   esp
  41da9c:	sti    
  41da9d:	ss dec esi
  41da9f:	ins    DWORD PTR es:[edi],dx
  41daa0:	and    ebx,DWORD PTR [ebx+0x5f62bba5]
  41daa6:	loopne 0x41da76
  41daa8:	or     al,0xc1
  41daaa:	out    0xb1,eax
  41daac:	cld    
  41daad:	or     ebp,DWORD PTR [eax-0x6e5b53e8]
  41dab3:	data16 mov dh,0xc6
  41dab6:	and    bl,BYTE PTR [edi+0x6a]
  41dab9:	addr16 inc eax
  41dabb:	out    0xdf,al
  41dabd:	add    dh,BYTE PTR [ebp+0x3002300]
  41dac3:	jmp    0xabe1ec8a
  41dac8:	mov    ds:0xb73441a9,al
  41dacd:	push   ebx
  41dace:	test   DWORD PTR [eax],eax
  41dad0:	cmp    al,0x7b
  41dad2:	sub    esi,DWORD PTR es:[ebp+eiz*4-0x3e7d4133]
  41dada:	inc    edx
  41dadb:	mov    WORD PTR [edi],es
  41dadd:	mov    edi,0x11422423
  41dae2:	in     eax,0x4a
  41dae4:	ret    0xc09b
  41dae7:	(bad)  [ecx]
  41dae9:	rcl    esi,cl
  41daeb:	shl    DWORD PTR [ecx-0x5265703d],1
  41daf1:	sub    DWORD PTR [ebp-0x7d],edi
  41daf4:	shr    edx,cl
  41daf6:	gs pop esp
  41daf8:	fcomp  QWORD PTR [esp+ebp*4]
  41dafb:	push   cs
  41dafc:	and    eax,0x6012f23b
  41db01:	xchg   esi,eax
  41db02:	mov    esp,0xe9a8a5ec
  41db07:	jmp    0x41db69
  41db09:	mov    dh,0xa8
  41db0b:	jnp    0x41db01
  41db0d:	push   esi
  41db0e:	enter  0xa511,0x7d
  41db12:	and    BYTE PTR [ebx+edi*1],0x57
  41db16:	test   al,0x5
  41db18:	aad    0xe8
  41db1a:	(bad)  
  41db1b:	fld    st(4)
  41db1d:	pop    ds
  41db1e:	mov    eax,0x5e4e6ac9
  41db23:	or     esi,ebp
  41db25:	lea    eax,ds:0x7190bf18
  41db2b:	test   al,0x1f
  41db2d:	jne    0x41db6b
  41db2f:	and    al,0xbe
  41db31:	mov    eax,ds:0x13521d95
  41db36:	popf   
  41db37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db38:	push   edi
  41db39:	test   al,0xbd
  41db3b:	rcr    DWORD PTR [esi+0x62d7f9b4],0x54
  41db42:	loopne 0x41db2b
  41db44:	ins    DWORD PTR es:[edi],dx
  41db45:	aaa    
  41db46:	xchg   ebx,eax
  41db47:	daa    
  41db48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db49:	jnp    0x41db9b
  41db4b:	cmp    esp,edx
  41db4d:	cmp    edx,DWORD PTR [eax+0x21]
  41db50:	sub    DWORD PTR [edi],0x2f88208f
  41db56:	data16 mov dh,0x57
  41db59:	js     0x41db7f
  41db5b:	aaa    
  41db5c:	jmp    0x537586c8
  41db61:	inc    edx
  41db62:	aaa    
  41db63:	add    BYTE PTR [eax-0x1cdd8033],al
  41db69:	mov    ebx,0x82893d86
  41db6e:	jmp    0xd9d7:0x148c59be
  41db75:	sub    bl,BYTE PTR [ebp+0x49]
  41db78:	xor    al,0xd0
  41db7a:	pop    ebp
  41db7b:	dec    esi
  41db7c:	sbb    eax,ebp
  41db7e:	bound  ebp,QWORD PTR [eax+0x4a]
  41db81:	jmp    0xe4cdeee6
  41db86:	pop    ebx
  41db87:	lock repz pop ebp
  41db8a:	and    dh,BYTE PTR [edi+eax*2+0x853db45]
  41db91:	and    edi,DWORD PTR [edx-0x37]
  41db94:	or     BYTE PTR [edx],dl
  41db96:	cmc    
  41db97:	aam    0x32
  41db99:	int    0x37
  41db9b:	(bad)  
  41db9c:	sbb    eax,DWORD PTR [edi]
  41db9e:	fcom   DWORD PTR [eax]
  41dba0:	inc    ebx
  41dba1:	push   ebx
  41dba2:	ins    BYTE PTR es:[edi],dx
  41dba3:	test   DWORD PTR [edi-0x56],esi
  41dba6:	pop    ebp
  41dba7:	js     0x41db67
  41dba9:	(bad)  
  41dbaa:	retf   
  41dbab:	inc    ebx
  41dbac:	(bad)  
  41dbad:	in     eax,dx
  41dbae:	or     eax,0x836bf196
  41dbb3:	sbb    eax,0x107ab303
  41dbb8:	xor    BYTE PTR [ebp+0x2e126eeb],ch
  41dbbe:	xchg   DWORD PTR [ecx],esp
  41dbc0:	push   DWORD PTR [esp+edx*1]
  41dbc3:	cmp    BYTE PTR [ebp-0x3d],cl
  41dbc6:	mov    gs,WORD PTR [ecx-0x62]
  41dbc9:	aad    0x59
  41dbcb:	jne    0x41db70
  41dbcd:	stos   BYTE PTR es:[edi],al
  41dbce:	jle    0x41db93
  41dbd0:	gs retf 
  41dbd2:	jle    0x41dc1e
  41dbd4:	jp     0x41db68
  41dbd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd7:	add    eax,0xc41276e4
  41dbdc:	mov    bl,0x76
  41dbde:	enter  0xdfb2,0xdf
  41dbe2:	jge    0x41db6e
  41dbe4:	push   ecx
  41dbe5:	push   cs
  41dbe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe7:	dec    esi
  41dbe8:	popa   
  41dbe9:	sbb    cl,bl
  41dbeb:	push   ecx
  41dbec:	bound  edx,QWORD PTR [ebx-0x584092d2]
  41dbf2:	bound  eax,QWORD PTR [ebx+0x6825332b]
  41dbf8:	(bad)  
  41dbf9:	cmp    edi,ebp
  41dbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbfc:	in     eax,dx
  41dbfd:	push   0x84094591
  41dc02:	jnp    0x41dbac
  41dc04:	pop    esp
  41dc05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc06:	ins    BYTE PTR es:[edi],dx
  41dc07:	shl    ecx,0x41
  41dc0a:	inc    esi
  41dc0b:	xchg   BYTE PTR [esi],ah
  41dc0d:	dec    esp
  41dc0e:	cwde   
  41dc0f:	outs   dx,BYTE PTR ds:[esi]
  41dc10:	inc    esp
  41dc11:	mov    eax,ds:0x284cb1a3
  41dc16:	push   ecx
  41dc17:	stc    
  41dc18:	repz in al,dx
  41dc1a:	mov    esp,0xa76f3e12
  41dc1f:	cmp    ah,BYTE PTR [edi-0x5d]
  41dc22:	xchg   ecx,eax
  41dc23:	and    BYTE PTR [edi-0x4365e070],0xf1
  41dc2a:	inc    ebx
  41dc2b:	inc    edi
  41dc2c:	push   esp
  41dc2d:	(bad)  
  41dc2e:	(bad)  
  41dc30:	cdq    
  41dc31:	je     0x41dc8f
  41dc33:	ins    BYTE PTR es:[edi],dx
  41dc34:	adc    BYTE PTR [ebp+0xe922d9d],0x66
  41dc3b:	sbb    al,0xb7
  41dc3d:	lods   al,BYTE PTR ds:[esi]
  41dc3e:	sub    DWORD PTR [ebp+0x4132d72d],ecx
  41dc44:	sub    eax,0xc2e8da25
  41dc49:	enter  0x4b5f,0xce
  41dc4d:	je     0x41dbf6
  41dc4f:	aaa    
  41dc50:	repnz cwde 
  41dc52:	gs pop edi
  41dc54:	adc    DWORD PTR [esi+0x5d],0xffffffc1
  41dc58:	clc    
  41dc59:	xchg   esi,eax
  41dc5a:	shr    DWORD PTR [edi-0x5c2983c7],cl
  41dc60:	dec    edx
  41dc61:	repnz cli 
  41dc63:	mov    eax,0x7871f7c
  41dc68:	ror    DWORD PTR [esi+0x4c],1
  41dc6b:	sbb    al,0xcf
  41dc6d:	xchg   ecx,eax
  41dc6e:	mov    eax,0x714aaa0b
  41dc73:	dec    eax
  41dc74:	mov    al,BYTE PTR [ebx-0x6]
  41dc77:	xor    eax,0xe61f46d7
  41dc7c:	add    BYTE PTR [ebp-0x37bd86a],dh
  41dc82:	pop    ss
  41dc83:	add    al,0xdf
  41dc85:	pop    ecx
  41dc86:	push   ebx
  41dc87:	aad    0x65
  41dc89:	ins    BYTE PTR es:[edi],dx
  41dc8a:	and    BYTE PTR [ebx-0x1a],ch
  41dc8d:	into   
  41dc8e:	retf   0x6272
  41dc91:	test   al,0x61
  41dc93:	out    0xc1,al
  41dc95:	mov    al,ds:0xca91d65c
  41dc9a:	ins    DWORD PTR es:[edi],dx
  41dc9b:	fist   DWORD PTR [ebx]
  41dc9d:	adc    edi,DWORD PTR [eax-0x63]
  41dca0:	stos   BYTE PTR es:[edi],al
  41dca1:	push   es
  41dca2:	sub    BYTE PTR ds:0x1a24cf10,cl
  41dca8:	cdq    
  41dca9:	or     DWORD PTR [edx+0x38],ebx
  41dcac:	neg    WORD PTR [eax]
  41dcaf:	ins    DWORD PTR es:[edi],dx
  41dcb0:	aas    
  41dcb1:	test   eax,0x1f7b451e
  41dcb6:	repz jb 0x41dc40
  41dcb9:	jp     0x41dcdf
  41dcbb:	mov    dl,BYTE PTR [edx]
  41dcbd:	shl    DWORD PTR [esp+ebp*4],0x21
  41dcc1:	push   eax
  41dcc2:	mov    al,ds:0x4804d08c
  41dcc7:	mov    ds:0x8d16e84a,al
  41dccc:	repnz outs dx,DWORD PTR es:[esi]
  41dccf:	data16 (bad) 
  41dcd1:	fistp  QWORD PTR [ecx+0x60]
  41dcd4:	inc    ebx
  41dcd5:	lea    esp,[edi]
  41dcd7:	inc    ebp
  41dcd8:	sbb    al,0x30
  41dcdb:	into   
  41dcdc:	mov    bh,0xa0
  41dcde:	stos   DWORD PTR es:[edi],eax
  41dcdf:	mov    al,0x61
  41dce1:	pop    esi
  41dce2:	gs pop ecx
  41dce4:	mov    ds:0x6dcd117,eax
  41dce9:	or     al,0x1f
  41dceb:	dec    edx
  41dcec:	test   DWORD PTR [ebx],ebp
  41dcee:	fisubr WORD PTR [edi+0x7b816d3c]
  41dcf4:	cmp    al,BYTE PTR [ebx]
  41dcf6:	pop    ebx
  41dcf7:	sub    al,0xfe
  41dcf9:	mov    cs:0x22200490,al
  41dcff:	fcomp  st(3)
  41dd01:	out    dx,al
  41dd02:	pop    esi
  41dd03:	lods   al,BYTE PTR ds:[esi]
  41dd04:	stc    
  41dd05:	xchg   esp,eax
  41dd06:	adc    al,0x1a
  41dd08:	mov    DWORD PTR [ecx+0x3b],ebx
  41dd0b:	xchg   BYTE PTR [ecx-0x66bffa2a],dl
  41dd11:	pop    edx
  41dd12:	imul   esi,DWORD PTR [edx],0x15cd27d5
  41dd18:	cmp    eax,0x95c7bdb5
  41dd1d:	mov    ds:0x97d2d838,al
  41dd22:	sub    edx,DWORD PTR [ebx]
  41dd24:	bound  esi,QWORD PTR [esi]
  41dd26:	pop    ss
  41dd27:	out    dx,eax
  41dd28:	data16 test al,0x70
  41dd2b:	cs sbb al,0x1e
  41dd2e:	or     DWORD PTR [ebx+0x68],0x4874d0ba
  41dd35:	clc    
  41dd36:	mov    eax,0x79c962fc
  41dd3b:	(bad)  
  41dd3c:	repz jle 0x41dcc5
  41dd3f:	lea    eax,[edx]
  41dd41:	jbe    0x41dcee
  41dd43:	jp     0x41dcd8
  41dd45:	push   esp
  41dd46:	out    0x4d,eax
  41dd48:	cmp    DWORD PTR [edx-0x53],ebx
  41dd4b:	xor    eax,0x5ab3d5d1
  41dd50:	cmc    
  41dd51:	dec    esi
  41dd52:	lea    ebx,[esi]
  41dd54:	test   al,0x49
  41dd56:	xchg   BYTE PTR [eax-0x20],bl
  41dd59:	test   DWORD PTR [esi+0x2b],esi
  41dd5c:	mov    ds:0x75cd3fda,al
  41dd61:	enter  0xb016,0x28
  41dd65:	push   ebp
  41dd66:	mov    ecx,0x88c1e22f
  41dd6b:	sbb    DWORD PTR [edx-0x1795e6e9],eax
  41dd71:	xor    DWORD PTR [edi+0xacc925b],eax
  41dd77:	adc    edi,DWORD PTR [ebx-0x63]
  41dd7a:	int    0xdf
  41dd7c:	fidivr DWORD PTR [edx]
  41dd7e:	hlt    
  41dd7f:	pop    ebp
  41dd80:	xchg   edx,eax
  41dd81:	retf   
  41dd82:	push   ss
  41dd83:	and    eax,0xa3212804
  41dd88:	and    DWORD PTR [ebx+0x76],ebp
  41dd8b:	hlt    
  41dd8c:	dec    edx
  41dd8d:	test   eax,0x3c967257
  41dd92:	inc    esp
  41dd93:	pop    ds
  41dd94:	out    0xf4,eax
  41dd96:	nop
  41dd97:	in     eax,0xee
  41dd99:	jmp    0x41dde5
  41dd9b:	jecxz  0x41ddce
  41dd9d:	repz push esi
  41dd9f:	daa    
  41dda0:	fs mov eax,0xe862ea83
  41dda6:	mov    ds:0xf239742e,al
  41ddab:	cmc    
  41ddac:	mov    ds:0xeff2a0a0,eax
  41ddb1:	jnp    0x41ddd5
  41ddb3:	fcmovbe st,st(4)
  41ddb5:	ins    BYTE PTR es:[di],dx
  41ddb7:	int3   
  41ddb8:	inc    esp
  41ddb9:	push   edi
  41ddba:	xor    BYTE PTR [edx-0x35],ch
  41ddbd:	ret    
  41ddbe:	iret   
  41ddbf:	jmp    0xb34d8db9
  41ddc4:	mov    ebp,0xbbf5483d
  41ddc9:	mov    ebp,0xcc53a289
  41ddce:	adc    eax,0xabc4b21c
  41ddd3:	mov    eax,0x3828431d
  41ddd8:	int3   
  41ddd9:	fistp  WORD PTR [esi+0x12632d70]
  41dddf:	ror    DWORD PTR [esi-0x735c5ade],1
  41dde5:	das    
  41dde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde7:	inc    esp
  41dde8:	push   ecx
  41dde9:	sbb    edi,esi
  41ddeb:	xchg   ebp,eax
  41ddec:	push   0xffffffc2
  41ddee:	push   edx
  41ddef:	add    eax,0x7204634
  41ddf4:	lea    ebx,[eax+0x26]
  41ddf7:	mov    DWORD PTR [esi+0x3a],0xd8e22838
  41ddfe:	add    ebx,edi
  41de00:	inc    ebp
  41de01:	sbb    al,0x7c
  41de03:	lock in eax,0x69
  41de06:	lock and al,0x55
  41de09:	cmp    eax,0x5d2276f9
  41de0e:	push   0x80cb0dc6
  41de13:	lock retf 
  41de15:	sti    
  41de16:	mov    ecx,0x7194837e
  41de1b:	in     eax,0x32
  41de1d:	or     al,0x82
  41de1f:	cmp    edx,DWORD PTR [edx]
  41de21:	mov    ch,0x80
  41de23:	xchg   esp,eax
  41de24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de25:	pop    eax
  41de26:	stos   BYTE PTR es:[edi],al
  41de27:	pcmpeqb mm7,QWORD PTR [eax]
  41de2a:	retf   
  41de2b:	push   eax
  41de2c:	jmp    0xbf4e:0x55d4dcf5
  41de33:	loope  0x41de83
  41de35:	fnsave [esi-0x7e]
  41de38:	add    bl,dh
  41de3a:	les    edi,FWORD PTR [edx-0x5709b816]
  41de40:	push   esi
  41de41:	ds mov dl,0xb8
  41de44:	scas   eax,DWORD PTR es:[edi]
  41de45:	or     BYTE PTR [edi],0x12
  41de48:	xchg   ecx,eax
  41de49:	cli    
  41de4a:	(bad)  
  41de4b:	cmp    BYTE PTR [ebx+0xd],ah
  41de4e:	adc    BYTE PTR [ecx+0x62],bh
  41de51:	mov    eax,0xd284cba2
  41de56:	imul   eax,DWORD PTR [edi+0x4c],0x68
  41de5a:	cmp    cl,ch
  41de5c:	sub    bh,ah
  41de5e:	enter  0x4a49,0xfd
  41de62:	mov    cs,WORD PTR [esi+0x49]
  41de65:	sbb    BYTE PTR [ecx-0xdcfb44f],0xa0
  41de6c:	mov    ah,0x1f
  41de6e:	push   eax
  41de6f:	jge    0x41de05
  41de71:	xor    eax,0x1eead965
  41de76:	ins    DWORD PTR es:[edi],dx
  41de77:	fadd   QWORD PTR [edx+0x28]
  41de7a:	inc    eax
  41de7b:	push   ss
  41de7c:	xor    al,0x64
  41de7e:	add    DWORD PTR [ebp-0x49ffe19f],edi
  41de84:	jmp    0x41de26
  41de86:	or     esp,edx
  41de88:	dec    esi
  41de89:	outs   dx,DWORD PTR ds:[esi]
  41de8a:	cwde   
  41de8b:	mov    ecx,0x1843b9fa
  41de90:	bound  ecx,QWORD PTR [edx]
  41de92:	std    
  41de93:	loop   0x41de3e
  41de95:	jg     0x41de7b
  41de97:	(bad)  
  41de98:	(bad)  [eax+0x6a3fd235]
  41de9e:	repnz mov ebp,gs
  41dea1:	jo     0x41de34
  41dea3:	cli    
  41dea4:	int3   
  41dea5:	es jmp 0x41dee9
  41dea8:	repnz lahf 
  41deaa:	adc    BYTE PTR [eax-0x2a6de9e0],bh
  41deb0:	(bad)  
  41deb1:	pop    eax
  41deb2:	fldz   
  41deb4:	ret    0x1314
  41deb7:	jae    0x41defe
  41deb9:	add    eax,0x7f979a52
  41debe:	xchg   ebp,eax
  41debf:	loopne 0x41de7a
  41dec1:	or     ebx,DWORD PTR [edi]
  41dec3:	pop    esi
  41dec4:	scas   eax,DWORD PTR es:[edi]
  41dec5:	cmc    
  41dec6:	test   al,0xd9
  41dec8:	sub    BYTE PTR [esi+0x44599a24],dh
  41dece:	iret   
  41decf:	xlat   BYTE PTR ds:[ebx]
  41ded0:	sub    al,0x38
  41ded2:	push   esi
  41ded3:	xor    al,dh
  41ded5:	fisttp DWORD PTR [edi+0x23fa849f]
  41dedb:	js     0x41dea0
  41dedd:	mov    al,BYTE PTR ds:0x6d445cd6
  41dee3:	mov    esi,DWORD PTR [ebx]
  41dee5:	rol    DWORD PTR [ebp+0x16],0x6b
  41dee9:	imul   esi,DWORD PTR [ecx],0x74496828
  41deef:	xchg   ecx,eax
  41def0:	pop    esi
  41def1:	out    0x9b,eax
  41def3:	ret    0xa0b9
  41def6:	push   edi
  41def7:	idiv   esi
  41def9:	pop    ecx
  41defa:	ret    
  41defb:	cmp    DWORD PTR [esi+eax*1-0x5d486046],ecx
  41df02:	mov    esp,0xf9ddbe0e
  41df07:	popa   
  41df08:	adc    al,0xd
  41df0a:	cmc    
  41df0b:	dec    ebp
  41df0c:	loop   0x41df6d
  41df0e:	out    dx,al
  41df0f:	jmp    0x41dea4
  41df11:	push   0xda0bcec0
  41df16:	inc    edi
  41df17:	cwde   
  41df18:	hlt    
  41df19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df1a:	repz and eax,0xcc868e99
  41df20:	cmc    
  41df21:	dec    esp
  41df22:	int    0xae
  41df24:	lahf   
  41df25:	loope  0x41deda
  41df27:	mov    esp,0x95a27614
  41df2c:	stc    
  41df2d:	mov    cl,0xcf
  41df2f:	clc    
  41df30:	mov    ecx,0x1de369a5
  41df35:	cmp    DWORD PTR [esi],esi
  41df37:	inc    ebx
  41df38:	test   ebp,0x107f9cb0
  41df3e:	clc    
  41df3f:	cmp    BYTE PTR [esi-0x9951de8],dl
  41df45:	inc    edi
  41df46:	neg    DWORD PTR [edi+0x5c9bfc4d]
  41df4c:	push   cs
  41df4d:	hlt    
  41df4e:	push   DWORD PTR [esi-0x61640c1e]
  41df54:	pop    ebp
  41df55:	jmp    0x41defa
  41df57:	jb     0x41dfa7
  41df59:	fild   DWORD PTR [edi+0x31065414]
  41df5f:	adc    BYTE PTR [ebp+0x71f29c81],ah
  41df65:	inc    edx
  41df66:	fidivr WORD PTR [ebx-0x58]
  41df69:	test   al,ch
  41df6b:	popa   
  41df6c:	cld    
  41df6d:	sar    dl,0xce
  41df70:	xchg   ecx,eax
  41df71:	pusha  
  41df72:	push   eax
  41df73:	bound  edx,QWORD PTR [edi]
  41df75:	sbb    bl,BYTE PTR ds:0x3e0c99e8
  41df7b:	mov    WORD PTR [ebx+0x7faa12df],?
  41df81:	aaa    
  41df82:	cmc    
  41df83:	xor    edi,DWORD PTR [ecx]
  41df85:	pop    es
  41df86:	mov    ebp,0xd7efebee
  41df8b:	dec    ecx
  41df8c:	mov    al,ds:0x615df0db
  41df91:	fwait
  41df92:	mov    ds:0x13d9599b,eax
  41df97:	stos   DWORD PTR es:[edi],eax
  41df98:	xor    DWORD PTR [edx],esp
  41df9a:	sub    BYTE PTR [edx+0x3f],al
  41df9d:	bound  ebx,QWORD PTR [eax+0x67]
  41dfa0:	retf   0x31a6
  41dfa3:	lea    esi,[esi]
  41dfa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfa6:	cwde   
  41dfa7:	lock push ebp
  41dfa9:	lds    esp,FWORD PTR [esi-0x7f]
  41dfac:	adc    edx,ebp
  41dfae:	retf   
  41dfaf:	dec    ebp
  41dfb0:	sub    ch,dh
  41dfb2:	cwde   
  41dfb3:	dec    ebx
  41dfb4:	sbb    al,BYTE PTR ds:0x59f74140
  41dfba:	js     0x41dfd7
  41dfbc:	minps  xmm2,XMMWORD PTR [esi]
  41dfbf:	mov    esp,0xa50683b2
  41dfc4:	and    DWORD PTR [edi-0x64],ebx
  41dfc7:	ja     0x41df8d
  41dfc9:	ins    BYTE PTR es:[edi],dx
  41dfca:	cmp    eax,0x93046c89
  41dfcf:	outs   dx,DWORD PTR ds:[esi]
  41dfd0:	mov    esi,gs
  41dfd2:	or     ebx,0xffffffe6
  41dfd5:	stc    
  41dfd6:	inc    eax
  41dfd7:	sbb    ah,BYTE PTR [eax]
  41dfd9:	pop    eax
  41dfda:	mov    edx,0xe17a4dd
  41dfdf:	std    
  41dfe0:	mov    cr6,edx
  41dfe3:	outs   dx,DWORD PTR ds:[esi]
  41dfe4:	push   ebx
  41dfe5:	jge    0x41df8e
  41dfe7:	add    al,0x9d
  41dfe9:	mov    edi,0x7eb1f9c2
  41dfee:	mov    dh,0xbb
  41dff0:	jae    0x41df81
  41dff2:	pop    esp
  41dff3:	cwde   
  41dff4:	stc    
  41dff5:	in     al,dx
  41dff6:	leave  
  41dff7:	xlat   BYTE PTR ds:[ebx]
  41dff8:	push   ebp
  41dff9:	inc    ebp
  41dffa:	jmp    0x41e061
  41dffc:	jp     0x41e061
  41dffe:	sahf   
  41dfff:	in     eax,0xd9
  41e001:	inc    edi
  41e002:	mov    eax,0x22ac0721
  41e007:	mov    ebp,0x4ee39166
  41e00c:	aam    0x87
  41e00e:	sub    ah,BYTE PTR [ebx+0x3ae35bba]
  41e014:	xor    ch,BYTE PTR [edi+0x35870119]
  41e01a:	or     eax,0xbb6f61d0
  41e01f:	push   esi
  41e020:	enter  0xbfad,0x89
  41e024:	(bad)  
  41e025:	loopne 0x41dfb0
  41e027:	ds push esi
  41e029:	arpl   WORD PTR [edi],bx
  41e02b:	test   DWORD PTR [bx],edx
  41e02e:	ficom  DWORD PTR [ecx]
  41e030:	push   ds
  41e031:	sbb    eax,0xfc5659b4
  41e036:	dec    esi
  41e037:	mov    dh,BYTE PTR [esi]
  41e039:	lahf   
  41e03a:	push   esp
  41e03b:	jge    0x41e00b
  41e03d:	pcmpeqw mm4,mm1
  41e040:	xor    eax,0xb56e97e2
  41e045:	cli    
  41e046:	adc    eax,DWORD PTR [ebx]
  41e048:	mov    ebp,0xf13ab65f
  41e04d:	or     al,0xa1
  41e04f:	into   
  41e050:	retf   
  41e051:	neg    edi
  41e053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e054:	popa   
  41e055:	mov    ecx,0x8d7677ce
  41e05a:	mov    al,0x19
  41e05c:	mov    dh,0x54
  41e05e:	jae    0x41e065
  41e060:	dec    edx
  41e061:	rcr    DWORD PTR [edx+0x5f],0x48
  41e065:	pop    es
  41e066:	test   al,0x3d
  41e068:	call   0xf8b1:0x93b9efa9
  41e06f:	jmp    0x41e00e
  41e071:	std    
  41e072:	outs   dx,BYTE PTR ds:[esi]
  41e073:	xchg   BYTE PTR [esi],ah
  41e075:	inc    ecx
  41e076:	nop
  41e077:	test   al,0xc6
  41e079:	(bad)  
  41e07a:	push   edx
  41e07b:	dec    esi
  41e07c:	test   al,0xbc
  41e07e:	inc    eax
  41e07f:	fcmovb st,st(4)
  41e081:	and    DWORD PTR [edx-0x45],edx
  41e084:	and    dh,dh
  41e086:	mov    ecx,0x1c9a4497
  41e08b:	int    0xd
  41e08d:	or     BYTE PTR [ecx+0x6817cab],dh
  41e093:	dec    esp
  41e094:	jge    0x41e06d
  41e096:	xchg   BYTE PTR [eax-0x22c8a789],bh
  41e09c:	in     eax,dx
  41e09d:	or     esi,DWORD PTR [edi+0x4c681c5c]
  41e0a3:	jecxz  0x41e120
  41e0a5:	mov    al,dl
  41e0a7:	cli    
  41e0a8:	iret   
  41e0a9:	mov    edx,0x674421e7
  41e0ae:	or     DWORD PTR [ecx+edx*8-0x13],esi
  41e0b2:	ror    DWORD PTR [ecx+0x7d],0x5
  41e0b6:	mov    fs,WORD PTR ds:0x996291c0
  41e0bc:	popf   
  41e0bd:	sub    dh,BYTE PTR [edx]
  41e0bf:	inc    esp
  41e0c0:	dec    ecx
  41e0c1:	sbb    DWORD PTR [ebx-0x6400a1cd],edi
  41e0c7:	out    0x29,eax
  41e0c9:	cmp    DWORD PTR cs:[ecx+0x37],esi
  41e0cd:	jo     0x41e052
  41e0cf:	sbb    edi,DWORD PTR [edi+0x64f7fe79]
  41e0d5:	mov    dl,0x62
  41e0d7:	int    0x5f
  41e0d9:	add    BYTE PTR [ebp+0x1fcd2332],dl
  41e0df:	jb     0x41e14b
  41e0e1:	loopne 0x41e162
  41e0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0e4:	pop    ds
  41e0e5:	adc    al,0x92
  41e0e7:	repnz pop ss
  41e0e9:	sbb    edx,0x3ff053
  41e0ef:	retf   
  41e0f0:	lahf   
  41e0f1:	iret   
  41e0f2:	adc    al,0xa
  41e0f4:	add    ebp,DWORD PTR [ebx]
  41e0f6:	test   DWORD PTR [esi],esp
  41e0f8:	add    ecx,ebp
  41e0fa:	mov    bl,0x3d
  41e0fc:	ret    0xc3f7
  41e0ff:	cwde   
  41e100:	outs   dx,BYTE PTR ds:[esi]
  41e101:	stos   DWORD PTR es:[edi],eax
  41e102:	ds mov esi,0xf3e47549
  41e108:	std    
  41e109:	sbb    bl,bl
  41e10b:	lds    edi,FWORD PTR [ecx+edx*8]
  41e10e:	popf   
  41e10f:	mov    dh,0xde
  41e111:	out    dx,eax
  41e112:	cdq    
  41e113:	xchg   BYTE PTR [eax],bh
  41e115:	sar    DWORD PTR [ebp+0x32],1
  41e118:	mov    BYTE PTR [edi+ecx*4-0x13481da1],ch
  41e11f:	or     esp,ebp
  41e121:	pop    edx
  41e122:	and    DWORD PTR [ebp+ebp*4+0x7e],0x70
  41e127:	loopne 0x41e0fc
  41e129:	js     0x41e198
  41e12b:	mov    ds:0x807cf62e,al
  41e130:	and    edx,DWORD PTR [edx+0x6d3165e0]
  41e136:	dec    ebp
  41e137:	leave  
  41e138:	and    edi,0x19
  41e13b:	cmc    
  41e13c:	lods   eax,DWORD PTR ds:[esi]
  41e13d:	fstp   QWORD PTR [eax]
  41e13f:	cmp    ch,BYTE PTR [edx]
  41e141:	ins    DWORD PTR es:[edi],dx
  41e142:	rcr    DWORD PTR [eax+0x4f040644],0x22
  41e149:	jecxz  0x41e1b1
  41e14b:	fcmovbe st,st(0)
  41e14d:	pusha  
  41e14e:	fcom   st(1)
  41e150:	imul   ecx,DWORD PTR [esi+0x6],0x78914ff9
  41e157:	xchg   edx,eax
  41e158:	pop    ebp
  41e159:	out    dx,al
  41e15a:	leave  
  41e15b:	loop   0x41e0f0
  41e15d:	sti    
  41e15e:	pop    es
  41e15f:	mov    eax,0xb91cec4d
  41e164:	hlt    
  41e165:	pop    eax
  41e166:	loopne 0x41e1b1
  41e168:	inc    esi
  41e169:	cmp    dl,ch
  41e16b:	xor    eax,0xfd39ca6
  41e170:	repz xchg esp,eax
  41e172:	pop    eax
  41e173:	enter  0x6f25,0x8c
  41e177:	daa    
  41e178:	clc    
  41e179:	mov    BYTE PTR [edi],cl
  41e17b:	sub    al,0x98
  41e17d:	mov    al,0x54
  41e17f:	cmp    edx,esp
  41e181:	je     0x41e1d1
  41e183:	stc    
  41e184:	inc    ecx
  41e185:	jbe    0x41e12e
  41e187:	mov    ds:0x70160df3,al
  41e18c:	ja     0x41e12a
  41e18e:	scas   al,BYTE PTR es:[edi]
  41e18f:	xchg   ecx,eax
  41e190:	test   eax,0x82ef1541
  41e195:	jmp    0xc2cb:0x3b727eca
  41e19c:	stos   BYTE PTR es:[edi],al
  41e19d:	rol    DWORD PTR [ebp-0x74],0xaf
  41e1a1:	pop    ds
  41e1a2:	push   0x9
  41e1a4:	add    eax,0x46eb2290
  41e1a9:	mov    al,0x83
  41e1ab:	fistp  WORD PTR [ebp-0x39076a37]
  41e1b1:	inc    esi
  41e1b2:	pop    ss
  41e1b3:	test   BYTE PTR [ecx-0x35fce349],ch
  41e1b9:	adc    DWORD PTR [edi-0x43],ecx
  41e1bc:	jp     0x41e232
  41e1be:	mov    ebx,0x644f306e
  41e1c3:	stc    
  41e1c4:	xchg   BYTE PTR [ecx-0x2c5c26af],bh
  41e1ca:	or     ebx,DWORD PTR [ebp+0x44f93653]
  41e1d0:	loop   0x41e1a7
  41e1d2:	jp     0x41e1c3
  41e1d4:	test   esp,eax
  41e1d6:	cmp    eax,0x43f1ee17
  41e1db:	or     DWORD PTR [edi-0x71],ebp
  41e1de:	out    0x8a,eax
  41e1e0:	push   ebp
  41e1e1:	aad    0x99
  41e1e3:	adc    eax,0x93cad05a
  41e1e8:	xchg   ebp,eax
  41e1e9:	jmp    0xa593:0x2b298134
  41e1f0:	mov    ebx,DWORD PTR [esi+esi*4]
  41e1f3:	push   ebx
  41e1f4:	fs xor eax,0x8da3dd32
  41e1fa:	mov    bh,0x89
  41e1fc:	jbe    0x41e18d
  41e1fe:	std    
  41e1ff:	mov    bh,0x1b
  41e201:	inc    edx
  41e202:	push   ecx
  41e203:	push   ds
  41e204:	aaa    
  41e205:	dec    eax
  41e206:	test   al,0x35
  41e208:	in     al,dx
  41e209:	js     0x41e264
  41e20b:	sub    ecx,eax
  41e20d:	add    BYTE PTR [eax+0x0],al
  41e210:	dec    eax
  41e211:	xor    al,0xea
  41e213:	rcl    BYTE PTR [eax-0x32dfdcf2],0xe7
  41e21a:	mov    ch,BYTE PTR [eax-0x5337e2ee]
  41e220:	aad    0x46
  41e222:	test   DWORD PTR [ebx-0x3],ecx
  41e225:	gs push 0x61
  41e228:	jmp    0x41e1ad
  41e22a:	xchg   ebx,eax
  41e22b:	pop    es
  41e22c:	dec    eax
  41e22d:	cwde   
  41e22e:	addr16 jno 0x41e253
  41e231:	push   es
  41e232:	jg     0x41e25e
  41e234:	or     bl,ch
  41e236:	in     al,dx
  41e237:	dec    eax
  41e238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e239:	xor    DWORD PTR [ecx],ebx
  41e23b:	sar    DWORD PTR [edi],0x4a
  41e23e:	inc    eax
  41e23f:	jmp    0x41e20d
  41e241:	fs push ebx
  41e243:	stos   DWORD PTR es:[di],eax
  41e245:	jge    0x41e1d1
  41e247:	fimul  DWORD PTR [ebp+0x199b672b]
  41e24d:	fs mov ch,0x24
  41e250:	ror    BYTE PTR ds:0x13a353a7,cl
  41e256:	ret    0xf135
  41e259:	jecxz  0x41e275
  41e25b:	stc    
  41e25c:	sub    ch,0x2f
  41e25f:	fbstp  TBYTE PTR [eax-0x65]
  41e262:	mov    esp,ecx
  41e264:	and    al,0xfe
  41e266:	das    
  41e267:	sub    cl,BYTE PTR [esi]
  41e269:	jae    0x41e252
  41e26b:	clc    
  41e26c:	outs   dx,DWORD PTR ds:[esi]
  41e26d:	add    al,ch
  41e26f:	fdivr  st(7),st
  41e271:	push   ebp
  41e272:	sbb    al,0x19
  41e274:	lock push ds
  41e276:	cmp    ah,al
  41e278:	mov    ecx,0x6b53b91a
  41e27d:	dec    eax
  41e27e:	dec    esi
  41e27f:	lock aad 0xb5
  41e282:	inc    ecx
  41e283:	push   ebx
  41e284:	pop    ebp
  41e285:	cld    
  41e286:	push   es
  41e287:	pop    ebx
  41e288:	and    al,BYTE PTR [eax+0x36cdd9f6]
  41e28e:	push   0xb526cab4
  41e293:	and    DWORD PTR [ecx],ecx
  41e295:	jbe    0x41e245
  41e297:	xor    esp,esp
  41e299:	mov    edx,0x609a7b27
  41e29e:	rcr    DWORD PTR [edx-0x2554293a],cl
  41e2a4:	or     ah,BYTE PTR [ebx+esi*4-0x23e64640]
  41e2ab:	push   esi
  41e2ac:	pop    ds
  41e2ad:	push   edi
  41e2ae:	out    0xcb,eax
  41e2b0:	ret    
  41e2b1:	or     al,0xa7
  41e2b3:	add    esp,0xf2edad3d
  41e2b9:	add    al,cl
  41e2bb:	jg     0x41e30e
  41e2bd:	scas   al,BYTE PTR es:[edi]
  41e2be:	adc    edi,DWORD PTR gs:[ecx+0x363bb818]
  41e2c5:	mov    esi,0x18f3e7f7
  41e2ca:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e2cc:	add    BYTE PTR [esp+eiz*4-0x6e],ch
  41e2d0:	lock test eax,0x1debd122
  41e2d7:	icebp  
  41e2d8:	ror    eax,0x76
  41e2db:	sub    DWORD PTR [edx+0x8a712c7],edx
  41e2e1:	sbb    ebx,DWORD PTR [edi-0x60]
  41e2e4:	push   edi
  41e2e5:	add    BYTE PTR [ecx+0x50bad8c8],cl
  41e2eb:	(bad)  
  41e2ee:	jbe    0x41e2f4
  41e2f0:	xor    DWORD PTR [ecx+0x12],ebp
  41e2f3:	pusha  
  41e2f4:	retf   
  41e2f5:	cmp    cl,bl
  41e2f7:	mov    ebp,0x7face3cc
  41e2fc:	cmp    dh,al
  41e2fe:	lock mov edi,0xcc1e200
  41e304:	sbb    BYTE PTR [ebx],ch
  41e306:	div    BYTE PTR ds:0xf5f8114d
  41e30c:	mov    ebp,0x3d4492c6
  41e311:	idiv   DWORD PTR [ecx+0x1dfb95a4]
  41e317:	dec    edx
  41e318:	jp     0x41e352
  41e31a:	mov    ch,0x4a
  41e31c:	pop    ebp
  41e31d:	fdiv   QWORD PTR [edx-0x71]
  41e320:	or     al,0x52
  41e322:	adc    DWORD PTR [edi+0x33153e5d],ecx
  41e328:	mov    DWORD PTR [ebx+0xf3d00f2],0xf70941e
  41e332:	test   DWORD PTR [esi],ebp
  41e334:	add    BYTE PTR [eax],al
  41e336:	add    BYTE PTR [ebx-0x7af00006],al
  41e33c:	and    eax,0x8b000000
  41e341:	inc    ebp
  41e342:	cld    
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x80
  41e3e0:	mov    eax,ds:0xd511a62c
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x1b
  41e3ec:	pop    edx
  41e3ed:	fsub   QWORD PTR [edx+0x71d8a697]
  41e3f3:	out    dx,al
  41e3f4:	fdivrp st(0),st
  41e3f6:	int    0xee
  41e3f8:	dec    eax
  41e3f9:	and    DWORD PTR [ecx+0x66],0xffffff9b
  41e3fd:	xor    cl,BYTE PTR [edx+eax*2+0x3c]
  41e401:	mov    dl,BYTE PTR [eax-0x572f28cf]
  41e407:	lock jne 0x41e3e3
  41e40a:	push   ss
  41e40b:	sbb    eax,0x552a4952
  41e410:	sub    al,0xb2
  41e412:	add    edi,DWORD PTR [ebx]
  41e414:	xor    DWORD PTR [ecx+0x30],edi
  41e417:	push   cs
  41e418:	push   ecx
  41e419:	xchg   esp,eax
  41e41a:	bound  esp,QWORD PTR [esi+edx*4-0x11]
  41e41e:	scas   al,BYTE PTR es:[edi]
  41e41f:	test   DWORD PTR [eax+0x0],ebx
  41e422:	mov    WORD PTR [ebp+0x34],?
  41e425:	aam    0xc0
  41e427:	aaa    
  41e428:	cmp    edi,DWORD PTR [edx]
  41e42a:	jns    0x41e462
  41e42c:	fnstcw WORD PTR [esi+0x7bbea7ce]
  41e432:	xor    ch,dl
  41e434:	and    eax,0x11412f7b
  41e439:	or     BYTE PTR [ecx],ah
  41e43b:	xor    dl,BYTE PTR [ecx]
  41e43d:	(bad)  
  41e43e:	adc    DWORD PTR [edi-0x1cd2c2e5],esi
  41e444:	mov    eax,0x4af5d9eb
  41e449:	ud1    ebp,DWORD PTR [edi+0x73]
  41e44d:	or     al,0x24
  41e44f:	repnz mov bl,0x9d
  41e452:	fs xchg ebp,eax
  41e454:	ret    
  41e455:	loopne 0x41e3ef
  41e457:	push   ss
  41e458:	ss or  al,0x19
  41e45b:	outs   dx,BYTE PTR ds:[esi]
  41e45c:	adc    BYTE PTR [edx-0x5b],0xb
  41e460:	or     ebp,DWORD PTR [ebx+0x42]
  41e463:	aad    0xe5
  41e465:	add    eax,0x79bfef9b
  41e46a:	jb     0x41e4cf
  41e46c:	ds dec ecx
  41e46e:	fs repnz loop 0x41e48d
  41e472:	mov    ds:0xfe9f68aa,al
  41e477:	(bad)  
  41e479:	xor    edi,DWORD PTR [eax-0x10ddb07]
  41e47f:	popa   
  41e480:	add    al,0x84
  41e482:	pusha  
  41e483:	pop    ebx
  41e484:	icebp  
  41e485:	ret    
  41e486:	add    edi,ebx
  41e488:	lods   eax,DWORD PTR ds:[esi]
  41e489:	imul   ebx,esi,0xdef47442
  41e48f:	pop    ds
  41e490:	mov    ds:0x8f895fce,eax
  41e495:	and    DWORD PTR [edx-0x4e581fe],0x12
  41e49c:	scas   al,BYTE PTR es:[edi]
  41e49d:	das    
  41e49e:	retf   
  41e49f:	xchg   ebp,eax
  41e4a0:	push   ebp
  41e4a1:	push   0x3a
  41e4a3:	nop
  41e4a4:	adc    ecx,DWORD PTR [ebp-0x31e4e140]
  41e4aa:	inc    eax
  41e4ab:	lahf   
  41e4ac:	and    DWORD PTR [edx+0x4047d0cb],edi
  41e4b2:	arpl   bp,sp
  41e4b4:	sub    edx,ebp
  41e4b6:	loope  0x41e4ae
  41e4b8:	es dec eax
  41e4ba:	sub    al,0x33
  41e4bc:	aas    
  41e4bd:	adc    ch,BYTE PTR [edi+0x3dd3fda9]
  41e4c3:	ins    DWORD PTR es:[edi],dx
  41e4c4:	ins    BYTE PTR es:[edi],dx
  41e4c5:	push   esp
  41e4c6:	hlt    
  41e4c7:	(bad)  
  41e4c8:	push   ds
  41e4c9:	int    0xc7
  41e4cb:	mov    cl,0x93
  41e4cd:	inc    esp
  41e4ce:	mov    bh,0x89
  41e4d0:	fsub   QWORD PTR [edi-0x19f3538a]
  41e4d6:	sub    ebp,esi
  41e4d8:	jg     0x41e4b9
  41e4da:	out    0x2f,al
  41e4dc:	cmp    al,0x90
  41e4de:	outs   dx,BYTE PTR ds:[esi]
  41e4df:	fucomp st(2)
  41e4e1:	shl    DWORD PTR [ebx],cl
  41e4e3:	add    DWORD PTR [ecx-0x60],0xc2611d85
  41e4ea:	and    esp,DWORD PTR [ebx]
  41e4ec:	cmp    esp,ecx
  41e4ee:	ret    
  41e4ef:	pop    esp
  41e4f0:	ror    DWORD PTR [eax+0x22],cl
  41e4f3:	pop    ds
  41e4f4:	sub    BYTE PTR [edx-0x1d],0xed
  41e4f8:	or     al,0xba
  41e4fa:	dec    edi
  41e4fb:	xchg   ecx,eax
  41e4fc:	loope  0x41e4ee
  41e4fe:	xor    ecx,DWORD PTR [eax+0x55]
  41e501:	popa   
  41e502:	hlt    
  41e503:	inc    esp
  41e504:	out    0x9b,al
  41e506:	stos   BYTE PTR es:[edi],al
  41e507:	shl    DWORD PTR [edx*4+0x5a38a3b6],0xd8
  41e50f:	cmp    bl,dh
  41e511:	js     0x41e523
  41e513:	sub    ebx,DWORD PTR [ecx]
  41e515:	enter  0x3c73,0x5
  41e519:	xor    al,0x59
  41e51b:	xchg   ecx,eax
  41e51c:	out    dx,eax
  41e51d:	rcr    DWORD PTR [ecx],cl
  41e51f:	and    DWORD PTR [edi+0x5e7b8e4b],esp
  41e525:	push   0xffffffc0
  41e527:	sbb    BYTE PTR [ebx+edx*2+0x63d1e392],dh
  41e52e:	and    al,0xde
  41e530:	ficomp WORD PTR [esi+0x28ca528]
  41e536:	leave  
  41e537:	lds    esi,FWORD PTR [ebx]
  41e539:	xor    eax,0x79a605c7
  41e53e:	adc    cl,BYTE PTR ds:0xb9e145e1
  41e544:	fs call 0x842d:0xb4c3259d
  41e54c:	cmp    al,0x9
  41e54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e54f:	sbb    cl,dl
  41e551:	add    al,0xe8
  41e553:	sahf   
  41e554:	xchg   esp,eax
  41e555:	jns    0x41e514
  41e557:	pusha  
  41e558:	ins    DWORD PTR es:[edi],dx
  41e559:	pop    eax
  41e55a:	sbb    edx,DWORD PTR [ebx]
  41e55c:	adc    DWORD PTR [ecx+0x26],ebx
  41e55f:	inc    ebp
  41e560:	mov    esp,0x36e437cd
  41e565:	int3   
  41e566:	inc    eax
  41e567:	neg    edx
  41e569:	lea    ebx,[ebp-0x1abf1841]
  41e56f:	cwde   
  41e570:	sub    DWORD PTR [edx+eiz*4],ebx
  41e573:	and    bh,BYTE PTR [eax+esi*1-0xd6e82b9]
  41e57a:	or     eax,0xe47b353
  41e57f:	dec    ebx
  41e580:	mov    al,ds:0xafe5a5e9
  41e585:	jno    0x41e569
  41e587:	and    DWORD PTR [esi-0xd3ea2c3],esp
  41e58d:	mov    ecx,0xd36af2b4
  41e592:	inc    ebx
  41e593:	scas   eax,DWORD PTR es:[edi]
  41e594:	cmp    BYTE PTR [esp+ebp*2+0x2c966f7],0x0
  41e59c:	sti    
  41e59d:	mov    esi,0xe3f4dc4
  41e5a2:	mov    bl,0xee
  41e5a4:	rcr    BYTE PTR ds:0x74789352,cl
  41e5aa:	push   esi
  41e5ab:	cmp    eax,0x685c9509
  41e5b0:	ins    DWORD PTR es:[edi],dx
  41e5b1:	test   eax,0xca4f35e6
  41e5b6:	push   edi
  41e5b7:	jo     0x41e5e7
  41e5b9:	mov    WORD PTR [ebx],es
  41e5bb:	in     al,0x4
  41e5bd:	(bad)  
  41e5be:	mov    dh,0xe8
  41e5c0:	sbb    DWORD PTR [esi+0x495b308e],esp
  41e5c6:	add    eax,DWORD PTR [ecx+0x36]
  41e5c9:	mov    dh,0xca
  41e5cb:	mov    ebp,0x52a883f2
  41e5d0:	and    ecx,DWORD PTR ds:0xc7df598a
  41e5d6:	mov    dl,0x8a
  41e5d8:	or     BYTE PTR [ecx+0x1d365aac],dl
  41e5de:	sbb    DWORD PTR ds:0x7ec6ac8a,esi
  41e5e4:	dec    eax
  41e5e5:	mov    ecx,0x7896b267
  41e5ea:	es jle 0x41e5af
  41e5ed:	jae    0x41e650
  41e5ef:	in     eax,dx
  41e5f0:	lock xchg ebp,eax
  41e5f2:	fistp  QWORD PTR [edx+0x1c515dc1]
  41e5f8:	mov    ah,0x1d
  41e5fa:	mov    ?,WORD PTR [ebp+0x50d099a8]
  41e600:	jns    0x41e618
  41e602:	(bad)  [edi]
  41e604:	push   esi
  41e605:	jge    0x41e59a
  41e607:	jae    0x41e60c
  41e609:	or     BYTE PTR [ebx+eiz*4-0x6b1225e6],bl
  41e610:	into   
  41e611:	out    dx,eax
  41e612:	dec    ebx
  41e613:	or     edi,DWORD PTR [edi]
  41e615:	lahf   
  41e616:	sub    al,0x6b
  41e618:	clc    
  41e619:	in     eax,0xe4
  41e61b:	enter  0xfa3d,0x67
  41e61f:	xor    BYTE PTR gs:[esp+ebp*1+0x5f],dl
  41e624:	stos   DWORD PTR es:[edi],eax
  41e625:	jb     0x41e64f
  41e627:	xchg   edi,eax
  41e628:	inc    esp
  41e629:	mov    DWORD PTR [esi],ecx
  41e62b:	xchg   edi,eax
  41e62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e62d:	dec    edx
  41e62e:	imul   esi,esi,0xf4d732c5
  41e634:	dec    edi
  41e635:	and    ebp,eax
  41e637:	fbstp  TBYTE PTR [eax]
  41e639:	stc    
  41e63a:	xchg   edx,eax
  41e63b:	mov    edx,0x1f348b74
  41e640:	popa   
  41e641:	jge    0x41e5f3
  41e643:	pusha  
  41e644:	xchg   edx,eax
  41e645:	cdq    
  41e646:	adc    edi,esi
  41e648:	iret   
  41e649:	cmc    
  41e64a:	jmp    0xd967d752
  41e64f:	fcmovnbe st,st(1)
  41e651:	jmp    0x41e613
  41e653:	mov    ds:0x9fb548b,eax
  41e658:	jmp    0x41e683
  41e65a:	inc    edi
  41e65b:	and    eax,eax
  41e65d:	xchg   ebp,eax
  41e65e:	nop
  41e65f:	ret    0x166b
  41e662:	jle    0x41e65f
  41e664:	cmp    DWORD PTR [esi+0xb159dd7],ecx
  41e66a:	xchg   ecx,eax
  41e66b:	or     cl,BYTE PTR [eax]
  41e66d:	inc    esi
  41e66e:	push   0xfffffff5
  41e670:	inc    eax
  41e671:	adc    bh,ah
  41e673:	out    0xe9,eax
  41e675:	das    
  41e676:	sbb    al,0x45
  41e678:	gs inc esp
  41e67a:	fcom   DWORD PTR [edx-0x63]
  41e67d:	jmp    0x41e623
  41e67f:	pop    ecx
  41e680:	mov    eax,ds:0xe9c0ff77
  41e685:	rcr    esp,1
  41e687:	jp     0x41e6ea
  41e689:	sub    esp,edi
  41e68b:	test   DWORD PTR [ecx],eax
  41e68d:	ins    BYTE PTR es:[edi],dx
  41e68e:	sub    al,0x32
  41e690:	jmp    0x41e637
  41e692:	hlt    
  41e693:	ret    
  41e694:	out    dx,al
  41e695:	shl    DWORD PTR [eax+0xca7ff54],cl
  41e69b:	dec    edx
  41e69c:	add    al,0x9b
  41e69e:	mov    WORD PTR [edi+esi*8],ss
  41e6a1:	xchg   edx,eax
  41e6a2:	sbb    BYTE PTR [edx],0x2e
  41e6a5:	pop    ds
  41e6a6:	cmp    esp,DWORD PTR [edx+ebp*8+0x4d7c16fc]
  41e6ad:	stos   DWORD PTR es:[edi],eax
  41e6ae:	les    ebp,FWORD PTR [eax-0x18610a7a]
  41e6b4:	cwde   
  41e6b5:	xchg   edx,eax
  41e6b6:	cmp    eax,0x96ed1702
  41e6bb:	pop    ebp
  41e6bc:	mov    ch,BYTE PTR [edx+0x6]
  41e6bf:	mov    dl,0x31
  41e6c1:	(bad)  
  41e6c2:	cmp    cl,BYTE PTR [edx]
  41e6c4:	ins    BYTE PTR es:[edi],dx
  41e6c5:	retf   
  41e6c6:	and    ah,BYTE PTR [esi]
  41e6c8:	test   esp,esp
  41e6ca:	adc    dh,ah
  41e6cc:	and    al,0x6
  41e6ce:	and    dl,BYTE PTR [edx-0x4b]
  41e6d1:	and    dh,BYTE PTR ds:0x1c8a927
  41e6d7:	xor    al,0xe7
  41e6d9:	inc    esp
  41e6da:	adc    bl,cl
  41e6dc:	mov    dl,ah
  41e6de:	pop    esi
  41e6df:	aas    
  41e6e0:	out    dx,eax
  41e6e1:	fmul   DWORD PTR [ebp-0x42081532]
  41e6e7:	mov    edi,0x8a530226
  41e6ec:	mov    al,0xf5
  41e6ee:	dec    esi
  41e6ef:	mov    edx,0xffb1e5c9
  41e6f4:	sbb    bh,BYTE PTR [edi+0x3c]
  41e6f7:	ins    DWORD PTR es:[edi],dx
  41e6f8:	fisubr DWORD PTR [ebp+ebp*2-0x786fdefa]
  41e6ff:	and    ah,ah
  41e701:	in     al,0xeb
  41e703:	push   eax
  41e704:	popf   
  41e705:	mov    edi,0x1a4dc6dc
  41e70a:	jae    0x41e76e
  41e70c:	ins    BYTE PTR es:[edi],dx
  41e70d:	jp     0x41e6a6
  41e70f:	xchg   DWORD PTR [ebx],ebp
  41e711:	dec    esp
  41e712:	pop    ecx
  41e713:	clc    
  41e714:	dec    eax
  41e715:	or     al,0x38
  41e717:	xchg   ebx,eax
  41e718:	aaa    
  41e719:	push   esp
  41e71a:	pop    eax
  41e71b:	retf   0x441e
  41e71e:	xchg   ebx,eax
  41e71f:	jae    0x41e6d6
  41e721:	jp     0x41e713
  41e723:	and    eax,DWORD PTR [eax]
  41e725:	inc    ebx
  41e726:	add    BYTE PTR ds:0xee2a503a,bh
  41e72c:	stc    
  41e72d:	pop    ds
  41e72e:	je     0x41e793
  41e730:	pop    es
  41e731:	xchg   DWORD PTR [eax],ecx
  41e733:	int3   
  41e734:	push   esp
  41e735:	inc    esp
  41e736:	mov    al,0xe9
  41e738:	(bad)  
  41e739:	aad    0x74
  41e73b:	jmp    0x72f243e0
  41e740:	jbe    0x41e707
  41e742:	stos   DWORD PTR es:[edi],eax
  41e743:	inc    BYTE PTR [edi-0x1c]
  41e746:	rol    DWORD PTR [eax+0x62a43804],1
  41e74c:	inc    ebp
  41e74d:	jecxz  0x41e7ab
  41e74f:	mov    al,0xef
  41e751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e752:	jbe    0x41e799
  41e754:	loop   0x41e730
  41e756:	xor    esi,ebp
  41e758:	sub    al,0x4a
  41e75a:	adc    cl,BYTE PTR [esi+eax*1-0x3d7f0420]
  41e761:	lods   al,BYTE PTR ds:[esi]
  41e762:	and    ah,ah
  41e764:	sbb    eax,0xeb7cfaac
  41e769:	ja     0x41e7bf
  41e76b:	and    BYTE PTR [ebx-0x73],ah
  41e76e:	jnp    0x41e759
  41e770:	pop    esp
  41e771:	adc    eax,0x3595c69a
  41e776:	mov    eax,0xaebc6b02
  41e77b:	cdq    
  41e77c:	sbb    ebx,DWORD PTR [eax+0x31]
  41e77f:	push   0x5911ce4
  41e784:	imul   edx,DWORD PTR [ebp+0x3d48338],0x82ce25eb
  41e78e:	mov    ecx,0xf3a658c
  41e793:	or     bl,al
  41e795:	xchg   ecx,eax
  41e796:	fs leave 
  41e798:	dec    ebp
  41e799:	cli    
  41e79a:	fsub   st(3),st
  41e79c:	mov    ds:0x2d29fff7,al
  41e7a1:	add    DWORD PTR [edi],0xffffffa0
  41e7a4:	or     dl,bh
  41e7a6:	loop   0x41e81b
  41e7a8:	jle    0x41e7f5
  41e7aa:	sahf   
  41e7ab:	cli    
  41e7ac:	imul   ebx,DWORD PTR [edi+0x317b4f5b],0xee1f8893
  41e7b6:	(bad)  
  41e7b7:	(bad)  
  41e7b8:	push   edx
  41e7b9:	jg     0x41e76d
  41e7bb:	sbb    BYTE PTR [esi],bl
  41e7bd:	mov    ch,0x7a
  41e7bf:	cmp    al,0x99
  41e7c1:	mov    eax,cs:0x5da1979c
  41e7c7:	xchg   esi,eax
  41e7c8:	and    DWORD PTR [edx-0x5b],0x1de828fc
  41e7cf:	ror    DWORD PTR [edx],0x42
  41e7d2:	in     eax,0x27
  41e7d4:	xchg   esi,eax
  41e7d5:	mov    ebx,0xf5627d2c
  41e7da:	pop    ebx
  41e7db:	jne    0x41e78a
  41e7dd:	cbw    
  41e7df:	sub    ah,BYTE PTR [ebp+0x21580d87]
  41e7e5:	popa   
  41e7e6:	test   al,0xb8
  41e7e8:	jp     0x41e801
  41e7ea:	inc    ebx
  41e7eb:	xchg   BYTE PTR [edx],cl
  41e7ed:	adc    BYTE PTR [eax+0x61],cl
  41e7f0:	inc    eax
  41e7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f2:	sbb    ah,cl
  41e7f4:	mov    ss,esi
  41e7f6:	aad    0xd4
  41e7f8:	add    eax,0xca4b997d
  41e7fd:	rcl    dh,cl
  41e7ff:	pop    esp
  41e800:	ds mov edx,0xa229843e
  41e806:	xor    al,0x84
  41e808:	call   0xeccde648
  41e80d:	jp     0x41e7bd
  41e80f:	lods   al,BYTE PTR ds:[esi]
  41e810:	(bad)  
  41e811:	dec    edi
  41e812:	sub    eax,0xfaa338e2
  41e817:	mov    dh,0xb7
  41e819:	pushf  
  41e81a:	inc    edi
  41e81b:	push   ebp
  41e81c:	lods   eax,DWORD PTR ds:[esi]
  41e81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e81e:	xchg   ebx,eax
  41e81f:	jle    0x41e84f
  41e821:	cmc    
  41e822:	ins    DWORD PTR es:[edi],dx
  41e823:	pop    edi
  41e824:	add    cl,dl
  41e826:	sub    BYTE PTR [ecx+0x475f8e8],dh
  41e82c:	clc    
  41e82d:	ins    DWORD PTR es:[edi],dx
  41e82e:	daa    
  41e82f:	xlat   BYTE PTR ds:[ebx]
  41e830:	or     edi,DWORD PTR [edi-0x706859da]
  41e836:	repz inc eax
  41e838:	ja     0x41e831
  41e83a:	adc    dl,dh
  41e83c:	sti    
  41e83d:	jno    0x41e809
  41e83f:	icebp  
  41e840:	leave  
  41e841:	out    0x72,al
  41e843:	repz lea esp,[edx]
  41e846:	imul   esp,edi,0x18f28fa6
  41e84c:	pusha  
  41e84d:	jecxz  0x41e896
  41e84f:	jae    0x41e88e
  41e851:	push   ecx
  41e852:	mov    cl,0xc9
  41e854:	pop    edi
  41e855:	nop
  41e856:	addr16 test eax,0xa94238e9
  41e85c:	or     ebx,ebx
  41e85e:	pop    es
  41e85f:	lds    esi,FWORD PTR [edi]
  41e861:	imul   ebx,esp,0x11
  41e864:	lock mov eax,DWORD PTR [edi+0x31]
  41e868:	mov    ds:0xbb24971d,al
  41e86d:	mov    bl,0x8e
  41e86f:	dec    ecx
  41e870:	idiv   BYTE PTR [ebx-0x7bc19add]
  41e876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e877:	repz dec ebp
  41e879:	sub    DWORD PTR [esi+ebx*1+0x13809003],ebp
  41e880:	pop    ss
  41e881:	in     eax,0x50
  41e883:	cmp    al,0x6
  41e885:	sub    ch,0x3f
  41e888:	and    dh,0xb6
  41e88b:	imul   eax,DWORD PTR [edi-0x18761740],0x4
  41e892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e893:	cmp    ch,BYTE PTR [ebx-0x3a]
  41e896:	inc    eax
  41e897:	mov    gs,WORD PTR ds:0x34e2ad4c
  41e89d:	mov    BYTE PTR [ebx-0x3b183334],dh
  41e8a3:	xchg   ebx,eax
  41e8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a5:	or     edi,eax
  41e8a7:	test   DWORD PTR [esi-0x74c86898],0x94009e96
  41e8b1:	cld    
  41e8b2:	mov    esp,0x9959cb3a
  41e8b7:	ins    BYTE PTR es:[edi],dx
  41e8b8:	sbb    DWORD PTR [edi-0x2f6f4f63],0xfffffffc
  41e8bf:	retf   0xd7ef
  41e8c2:	jecxz  0x41e904
  41e8c4:	loopne 0x41e8c7
  41e8c6:	fild   WORD PTR [edi+eax*4+0x9]
  41e8ca:	call   0xaba0:0xbebe11d1
  41e8d1:	or     esi,DWORD PTR [esi]
  41e8d3:	add    esp,DWORD PTR [eax-0x5a49a39d]
  41e8d9:	fld    QWORD PTR [ecx]
  41e8db:	and    dh,BYTE PTR [esi+0x7f206fa0]
  41e8e1:	pop    es
  41e8e2:	jmp    0x8294:0xb3189947
  41e8e9:	sahf   
  41e8ea:	mov    esp,0xa4923da7
  41e8ef:	fcomi  st,st(4)
  41e8f1:	popa   
  41e8f2:	jb     0x41e922
  41e8f4:	or     al,BYTE PTR [eax+0x38e4eb7c]
  41e8fa:	xchg   ecx,eax
  41e8fb:	xchg   edi,eax
  41e8fc:	inc    edi
  41e8fd:	dec    ebx
  41e8fe:	cmp    BYTE PTR [ecx+edi*2-0x47],dl
  41e902:	mov    ch,0x65
  41e904:	je     0x41e973
  41e906:	or     BYTE PTR [edx],0x40
  41e909:	jbe    0x41e97f
  41e90b:	retf   0xfcb4
  41e90e:	mov    eax,ds:0x206cd7ba
  41e913:	xchg   edi,eax
  41e914:	add    eax,DWORD PTR [eax+0x2d]
  41e917:	sub    eax,0x61ab1ce9
  41e91c:	sbb    edx,DWORD PTR [esi]
  41e91e:	xchg   edi,eax
  41e91f:	fimul  WORD PTR [eax-0x5]
  41e922:	hlt    
  41e923:	or     eax,0x4fe356f6
  41e928:	imul   edi,DWORD PTR [ebp+ebx*4+0xc],0x7c
  41e92d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e92f:	push   esp
  41e930:	dec    ebp
  41e931:	xor    bl,dl
  41e933:	xchg   esi,eax
  41e934:	push   cs
  41e935:	mov    dl,0xcf
  41e937:	int    0x1e
  41e939:	sbb    ecx,DWORD PTR [esi]
  41e93b:	cli    
  41e93c:	xlat   BYTE PTR ds:[ebx]
  41e93d:	jmp    0x41e8dc
  41e93f:	or     eax,ebp
  41e941:	js     0x41e92d
  41e943:	cld    
  41e944:	(bad)  
  41e945:	sbb    eax,eax
  41e947:	pop    ebx
  41e948:	xlat   BYTE PTR ds:[ebx]
  41e949:	or     DWORD PTR [edi+edx*4],edi
  41e94c:	xchg   ebx,eax
  41e94d:	inc    eax
  41e94e:	mov    ebx,DWORD PTR [ecx+0x68716f82]
  41e954:	mov    ebx,0x951ad882
  41e959:	imul   ecx
  41e95b:	jae    0x41e9c8
  41e95d:	mov    esi,0xb05bd7b5
  41e962:	or     bh,BYTE PTR [edx]
  41e964:	test   al,0x9
  41e966:	jb     0x41e96b
  41e968:	cs mov ch,0x12
  41e96b:	lahf   
  41e96c:	addr16 pop edx
  41e96e:	add    eax,0xa23419e7
  41e973:	inc    ebx
  41e974:	sbb    BYTE PTR [edi-0x466d50f7],ch
  41e97a:	push   eax
  41e97b:	cld    
  41e97c:	xor    eax,0x3a5e8f25
  41e981:	inc    edx
  41e982:	call   FWORD PTR [edi+0x7b]
  41e985:	cmc    
  41e986:	cmp    cl,BYTE PTR [ecx+esi*1]
  41e989:	push   es
  41e98a:	and    cl,BYTE PTR [eax-0x19]
  41e98d:	xlat   BYTE PTR ds:[ebx]
  41e98e:	push   ebx
  41e98f:	cs push edi
  41e991:	or     eax,0xc133fadf
  41e996:	jnp    0x41e9d2
  41e998:	mov    cl,0xcf
  41e99a:	out    dx,eax
  41e99b:	jne    0x41e9e9
  41e99d:	loope  0x41e97a
  41e99f:	aad    0x8b
  41e9a1:	sub    edx,DWORD PTR [esi-0x4]
  41e9a4:	div    DWORD PTR [edi]
  41e9a6:	test   DWORD PTR [esi+esi*1+0x14],ebx
  41e9aa:	or     BYTE PTR [esp+ebx*1+0x25],cl
  41e9ae:	pop    edx
  41e9af:	loop   0x41ea27
  41e9b1:	mov    edx,0xe5fe7d3e
  41e9b6:	xor    esi,DWORD PTR [eax]
  41e9b8:	add    eax,0x17422e89
  41e9bd:	jl     0x41e9db
  41e9bf:	cli    
  41e9c0:	xchg   edx,eax
  41e9c1:	push   esp
  41e9c2:	push   0x1e
  41e9c4:	pop    edi
  41e9c5:	jp     0x41ea42
  41e9c7:	mov    esp,es
  41e9c9:	popa   
  41e9ca:	lea    esi,[eax-0x7f5893e3]
  41e9d0:	xchg   ecx,eax
  41e9d1:	repnz and al,0x71
  41e9d4:	sbb    ebp,DWORD PTR [esi+0x17]
  41e9d7:	int    0xc9
  41e9d9:	dec    ecx
  41e9da:	sub    BYTE PTR [ebx-0x3b],dl
  41e9dd:	push   edx
  41e9de:	(bad)  
  41e9df:	mov    ds:0x32760b71,al
  41e9e4:	aas    
  41e9e5:	les    esp,FWORD PTR [esi-0x2412ab43]
  41e9eb:	dec    ecx
  41e9ec:	xor    eax,0x5c17dd89
  41e9f1:	fistp  QWORD PTR [eax+0x4b5c68ed]
  41e9f7:	enter  0x271a,0x2c
  41e9fb:	sbb    DWORD PTR [edx+eiz*4],esp
  41e9fe:	repz xchg ebx,eax
  41ea00:	inc    ebp
  41ea01:	dec    edx
  41ea02:	mov    eax,ds:0x33c8e5bf
  41ea07:	imul   edi,ebx,0x91c4d67f
  41ea0d:	adc    al,0xe1
  41ea0f:	inc    ebp
  41ea10:	int    0x49
  41ea12:	mov    eax,0xd07c2d4f
  41ea17:	gs retf 0x7d6c
  41ea1b:	cmp    esi,eax
  41ea1d:	stos   DWORD PTR es:[edi],eax
  41ea1e:	ins    BYTE PTR es:[edi],dx
  41ea1f:	mov    ecx,0xb0e8055
  41ea24:	mov    dh,0x0
  41ea26:	dec    ecx
  41ea27:	fucom  st(5)
  41ea29:	sub    al,0x52
  41ea2b:	sub    eax,eax
  41ea2d:	cdq    
  41ea2e:	shl    BYTE PTR [ebp+0x40ccf9f],cl
  41ea34:	sbb    al,BYTE PTR [ebx]
  41ea36:	push   edx
  41ea37:	mov    ah,0x6f
  41ea39:	cmp    DWORD PTR ss:[eax],edi
  41ea3c:	inc    edi
  41ea3d:	and    dl,bh
  41ea3f:	inc    edi
  41ea40:	xchg   BYTE PTR [esi-0x554fe9f],bh
  41ea46:	push   ss
  41ea47:	mov    eax,0xec2fd3ac
  41ea4c:	pop    ss
  41ea4d:	bound  ecx,QWORD PTR [edi+ebp*4+0x22]
  41ea51:	mov    esi,DWORD PTR [esi]
  41ea53:	cmovb  ecx,DWORD PTR [ebx+eax*1-0x21a9916c]
  41ea5b:	in     eax,dx
  41ea5c:	mov    edx,0xdc379319
  41ea61:	xor    edi,DWORD PTR [eax+eax*2+0x4c]
  41ea65:	mov    al,ds:0x82611b97
  41ea6a:	std    
  41ea6b:	fdiv   QWORD PTR [ebx+0x3b]
  41ea6e:	inc    eax
  41ea6f:	loope  0x41ea30
  41ea71:	pop    edx
  41ea72:	mov    DWORD PTR [ebx+0x2b2fc1c0],edi
  41ea78:	bound  esi,QWORD PTR [eax-0x2ab4c9ac]
  41ea7e:	mov    edx,0x472c174f
  41ea83:	pop    ds
  41ea84:	repz test eax,0x1ee04265
  41ea8a:	sahf   
  41ea8b:	mov    eax,ds:0x75ed78f7
  41ea90:	pop    ds
  41ea91:	aaa    
  41ea92:	and    BYTE PTR [edi-0x3b],ch
  41ea95:	jbe    0x41ea68
  41ea97:	mov    cl,0x23
  41ea99:	stc    
  41ea9a:	(bad)  ds:0x8f0b01bd
  41eaa0:	xor    eax,0x94a65a58
  41eaa5:	xor    al,0xc4
  41eaa7:	sbb    DWORD PTR [edx-0x6e],0x7
  41eaab:	popa   
  41eaac:	int    0x44
  41eaae:	jmp    DWORD PTR [edi]
  41eab0:	cmp    al,0x9f
  41eab2:	shr    BYTE PTR [ecx-0x35],cl
  41eab5:	push   esi
  41eab6:	mov    ch,0xce
  41eab8:	fcmovbe st,st(2)
  41eaba:	push   edx
  41eabb:	bound  edx,QWORD PTR [eax]
  41eabd:	adc    esi,DWORD PTR [ebp-0x57]
  41eac0:	dec    eax
  41eac1:	jl     0x41eab5
  41eac3:	mov    WORD PTR [ebx],ds
  41eac5:	stos   BYTE PTR es:[edi],al
  41eac6:	pop    esi
  41eac7:	int3   
  41eac8:	pop    esi
  41eac9:	xor    BYTE PTR [edi-0x7f353d69],al
  41eacf:	or     al,0xeb
  41ead1:	cli    
  41ead2:	xchg   ebx,ebp
  41ead4:	(bad)  
  41ead5:	xor    ebx,DWORD PTR [ecx+edi*4]
  41ead8:	(bad)  
  41ead9:	dec    ebx
  41eada:	add    BYTE PTR [esi],dl
  41eadc:	xchg   ebx,eax
  41eadd:	dec    ebx
  41eade:	and    BYTE PTR gs:[esi+0x28],0xe8
  41eae3:	fwait
  41eae4:	inc    edi
  41eae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae6:	pop    DWORD PTR [ebp+0x37]
  41eae9:	add    DWORD PTR [esp+eiz*8-0x7b],edi
  41eaed:	push   esi
  41eaee:	outs   dx,BYTE PTR ds:[esi]
  41eaef:	(bad)  
  41eaf0:	ds clc 
  41eaf2:	adc    eax,0x474fa5c8
  41eaf7:	jecxz  0x41eac5
  41eaf9:	test   eax,0x47b4e469
  41eafe:	cwde   
  41eaff:	xchg   ebx,eax
  41eb00:	cmp    al,0xe4
  41eb02:	outs   dx,BYTE PTR ds:[esi]
  41eb03:	rcl    DWORD PTR [ebp-0xf9d3167],cl
  41eb09:	xchg   DWORD PTR ds:0x7a2cf0c2,ecx
  41eb0f:	(bad)
  41eb12:	into   
  41eb13:	sbb    BYTE PTR [edi-0x68],bh
  41eb16:	mov    dl,0x87
  41eb18:	adc    DWORD PTR [edx+0x1cba5345],ebx
  41eb1e:	sbb    DWORD PTR [ebx],esi
  41eb20:	addr16 pop es
  41eb22:	test   DWORD PTR [esi+0x62ef7a47],esp
  41eb28:	data16 (bad) 
  41eb2a:	sbb    eax,0x7058c50
  41eb2f:	jne    0x41eb23
  41eb31:	jmp    0xe7a6a908
  41eb36:	jno    0x41eb64
  41eb38:	sti    
  41eb39:	test   bh,dh
  41eb3b:	push   es
  41eb3c:	adc    DWORD PTR [ecx],ecx
  41eb3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb3f:	arpl   WORD PTR [ecx+eax*1-0x25],cx
  41eb43:	or     edx,DWORD PTR [edx]
  41eb45:	add    bl,dh
  41eb47:	dec    esi
  41eb48:	cwde   
  41eb49:	jbe    0x41eafc
  41eb4b:	sti    
  41eb4c:	mov    cl,0x1
  41eb4e:	xchg   esi,eax
  41eb4f:	adc    eax,0x71c0c513
  41eb54:	clc    
  41eb55:	pop    es
  41eb56:	push   ebp
  41eb57:	jo     0x41eb60
  41eb59:	fstp   DWORD PTR [ebx-0x56dd6a9e]
  41eb5f:	push   esi
  41eb60:	(bad)  
  41eb61:	cmc    
  41eb62:	pop    edi
  41eb63:	fidivr DWORD PTR [ebx+edi*8+0x27]
  41eb67:	loopne 0x41ebdd
  41eb69:	jne    0x41ebe7
  41eb6b:	js     0x41ebe5
  41eb6d:	out    0xd2,al
  41eb6f:	sbb    BYTE PTR [eax],ch
  41eb71:	lock sbb DWORD PTR [ecx+0x722823dc],0x96f2455
  41eb7c:	ffreep st(5)
  41eb7e:	imul   edx,DWORD PTR [esi+0x1ca8038c],0xcc682fb8
  41eb88:	cli    
  41eb89:	push   ebp
  41eb8a:	into   
  41eb8b:	push   ss
  41eb8c:	xor    al,0xd1
  41eb8e:	mov    BYTE PTR [edx],dl
  41eb90:	pop    ebx
  41eb91:	repnz dec ecx
  41eb93:	push   ebx
  41eb94:	ins    DWORD PTR es:[edi],dx
  41eb95:	mov    esi,0x1f4e6ea6
  41eb9a:	call   0x4872:0x8ce424fc
  41eba1:	or     al,0xde
  41eba3:	pop    DWORD PTR [esi-0x19314060]
  41eba9:	push   ecx
  41ebaa:	out    dx,eax
  41ebab:	mov    al,ds:0xbb170f8a
  41ebb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb1:	sub    eax,0xe84d41ac
  41ebb7:	xchg   BYTE PTR [edx-0xee09e33],ah
  41ebbd:	not    BYTE PTR [edx]
  41ebbf:	shl    DWORD PTR [ebp+0x73],cl
  41ebc2:	cs mov edi,0xc01cae6d
  41ebc8:	add    DWORD PTR [esi+0x65],esi
  41ebcb:	loopne 0x41eb9e
  41ebcd:	test   BYTE PTR [edx],al
  41ebcf:	mov    ch,bh
  41ebd1:	idiv   al
  41ebd3:	mov    eax,ds:0x3a68a57f
  41ebd8:	mov    BYTE PTR [ecx-0x77c2a8cd],ah
  41ebde:	mov    ebx,0x8b870440
  41ebe3:	or     DWORD PTR [esi],0x54
  41ebe6:	dec    esp
  41ebe7:	mov    dh,0xca
  41ebe9:	sahf   
  41ebea:	and    eax,0x5a18e827
  41ebef:	test   al,0xda
  41ebf2:	adc    dh,BYTE PTR [edi]
  41ebf4:	or     al,0xda
  41ebf6:	jbe    0x41ec1c
  41ebf8:	jg     0x41ebb4
  41ebfa:	sub    eax,0x4213d6c4
  41ebff:	in     eax,0xcf
  41ec01:	mov    eax,0x11b1e4a6
  41ec06:	pushf  
  41ec07:	add    al,dl
  41ec09:	jecxz  0x41ec7c
  41ec0b:	fcom   DWORD PTR [ecx+0x62944bd4]
  41ec11:	aad    0xf7
  41ec13:	pop    ebp
  41ec14:	mov    DWORD PTR [ebp+0x41f9b1cf],esp
  41ec1a:	ds (bad) 
  41ec1c:	aas    
  41ec1d:	(bad)
  41ec21:	jmp    0x41ec34
  41ec23:	ror    DWORD PTR [esi-0x435b9be1],0x36
  41ec2a:	mov    dh,0xc6
  41ec2c:	cli    
  41ec2d:	jmp    0x41ec6b
  41ec2f:	jno    0x41ebca
  41ec31:	add    BYTE PTR [edi],ah
  41ec33:	push   ebx
  41ec34:	mov    WORD PTR [ebp+0x7b],fs
  41ec37:	ror    ecx,1
  41ec39:	jmp    0x41ebe1
  41ec3b:	bound  esp,QWORD PTR [edx+0x1b]
  41ec3e:	sbb    ch,BYTE PTR [ebx-0x4a]
  41ec41:	xchg   edx,eax
  41ec42:	jnp    0x41ec67
  41ec44:	cmp    eax,0x4a93c381
  41ec49:	(bad)  
  41ec4b:	xchg   ecx,eax
  41ec4c:	mov    eax,ds:0xb7e172d8
  41ec51:	mov    eax,0xa33c445a
  41ec56:	cmp    cl,dl
  41ec58:	mov    bh,0x10
  41ec5a:	inc    esp
  41ec5b:	(bad)  
  41ec5c:	mov    bl,0xbb
  41ec5e:	cwde   
  41ec5f:	test   eax,0xedf4adaa
  41ec64:	mov    bh,0x38
  41ec66:	add    DWORD PTR [esi],ecx
  41ec68:	sbb    eax,0x5f4feab5
  41ec6d:	dec    edi
  41ec6e:	enter  0x1800,0x98
  41ec72:	push   ebp
  41ec73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec74:	jecxz  0x41ecb5
  41ec76:	fs pop esp
  41ec78:	jns    0x41eca4
  41ec7a:	push   ebp
  41ec7b:	adc    DWORD PTR [ebx+ecx*2-0x80],esp
  41ec7f:	cmp    BYTE PTR [edx-0x24474d5d],cl
  41ec85:	test   DWORD PTR ds:[ecx],ebp
  41ec88:	mov    DWORD PTR ss:[ebx-0x35],edx
  41ec8c:	data16 test al,0xbe
  41ec8f:	xor    eax,0x53c8da71
  41ec94:	pop    ds
  41ec95:	xor    DWORD PTR [edx+0xac94dbd],edi
  41ec9b:	and    eax,0xe673987d
  41eca0:	ret    0xf203
  41eca3:	lods   eax,DWORD PTR ds:[esi]
  41eca4:	cmp    ecx,DWORD PTR [ebx+0x25]
  41eca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca8:	or     ecx,ebp
  41ecaa:	stos   BYTE PTR es:[edi],al
  41ecab:	push   edx
  41ecac:	jo     0x41ec81
  41ecae:	cmc    
  41ecaf:	(bad)  
  41ecb0:	sub    ch,al
  41ecb2:	xchg   ecx,eax
  41ecb3:	jle    0x41ec81
  41ecb5:	arpl   bx,dx
  41ecb7:	mov    ds:0x7071c4ac,al
  41ecbc:	xchg   esi,eax
  41ecbd:	leave  
  41ecbe:	hlt    
  41ecbf:	jl     0x41eccc
  41ecc1:	call   0x97de:0xda814431
  41ecc8:	sub    eax,0x692bbaa5
  41eccd:	push   eax
  41ecce:	ds dec edx
  41ecd0:	xlat   BYTE PTR ds:[ebx]
  41ecd1:	sbb    al,0x2a
  41ecd3:	stos   BYTE PTR es:[edi],al
  41ecd4:	rol    BYTE PTR [ebp-0x16e5f67c],0x77
  41ecdb:	pop    ebp
  41ecdc:	pop    edi
  41ecdd:	cmc    
  41ecde:	jp     0x41ecdd
  41ece0:	cli    
  41ece1:	xor    eax,0x716f4529
  41ece6:	jge    0x41ecb7
  41ece8:	les    esp,FWORD PTR [ebx+eax*2-0x7da263a]
  41ecef:	xor    ecx,DWORD PTR [ebx-0x79]
  41ecf2:	lock pop ss
  41ecf4:	retf   
  41ecf5:	dec    esi
  41ecf6:	sahf   
  41ecf7:	jmp    0x41ecbd
  41ecf9:	jns    0x41ecea
  41ecfb:	mov    ch,BYTE PTR [ecx]
  41ecfd:	or     bh,ch
  41ecff:	imul   ecx,DWORD PTR ds:0xf1d5781c,0xffffffee
  41ed06:	cs icebp 
  41ed08:	ss stos BYTE PTR es:[edi],al
  41ed0a:	mov    ds:0xd4c979f7,eax
  41ed0f:	inc    ecx
  41ed10:	inc    edi
  41ed11:	fdiv   DWORD PTR [eax]
  41ed13:	sbb    ecx,DWORD PTR [ebx]
  41ed15:	xchg   ecx,eax
  41ed16:	inc    ebx
  41ed17:	dec    edi
  41ed18:	pushf  
  41ed19:	cdq    
  41ed1a:	retf   
  41ed1b:	mov    ds:0x3c152d0d,eax
  41ed20:	aas    
  41ed21:	stos   DWORD PTR es:[edi],eax
  41ed22:	out    dx,eax
  41ed23:	inc    edi
  41ed24:	xor    esp,edi
  41ed26:	mov    eax,0x4dce9b0f
  41ed2b:	cld    
  41ed2c:	cmp    eax,0xdcbe4e8f
  41ed31:	add    al,0x31
  41ed33:	fs inc esi
  41ed35:	xor    dl,dh
  41ed37:	mov    esi,0x898d2f84
  41ed3c:	retf   
  41ed3d:	(bad)  
  41ed3e:	xor    dh,BYTE PTR [ecx-0x55]
  41ed41:	lock les edi,FWORD PTR [ebp+0x3bd86256]
  41ed48:	das    
  41ed49:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ed4b:	aam    0xa
  41ed4d:	mov    ds:0x909efb6f,eax
  41ed52:	rcl    BYTE PTR [eax-0x67],cl
  41ed55:	cmc    
  41ed56:	jbe    0x41ece4
  41ed58:	pop    ebp
  41ed59:	retf   
  41ed5a:	lock cmp BYTE PTR gs:[eax+esi*4-0x31],dh
  41ed60:	cmp    ebp,DWORD PTR [ecx+eiz*2+0x55]
  41ed64:	imul   ebx,DWORD PTR [eax-0x5f],0xf4ae7540
  41ed6b:	outs   dx,DWORD PTR ds:[esi]
  41ed6c:	cmp    BYTE PTR [edx-0x53],bh
  41ed6f:	lea    ecx,[edx-0x4c]
  41ed72:	stos   DWORD PTR es:[edi],eax
  41ed73:	dec    edx
  41ed74:	lods   al,BYTE PTR ds:[esi]
  41ed75:	dec    dh
  41ed77:	leave  
  41ed78:	ds (bad) 
  41ed7a:	jns    0x41eda2
  41ed7c:	or     dl,BYTE PTR [ebp-0x13100894]
  41ed82:	push   ebp
  41ed83:	pop    esi
  41ed84:	push   edx
  41ed85:	add    ebx,DWORD PTR [edx-0x3916d8de]
  41ed8b:	fcmovu st,st(3)
  41ed8d:	push   cs
  41ed8e:	in     al,dx
  41ed8f:	pop    eax
  41ed90:	rol    BYTE PTR [ebx+eax*8+0x74376136],1
  41ed97:	sbb    esp,esi
  41ed99:	mov    esp,DWORD PTR [ebx]
  41ed9b:	add    al,BYTE PTR [ebp-0x3c]
  41ed9e:	dec    esp
  41ed9f:	jbe    0x41ed2b
  41eda1:	arpl   cx,dx
  41eda3:	adc    eax,0x70336b99
  41eda8:	rcr    esi,0x58
  41edab:	mov    ebx,0xf70a35b5
  41edb0:	lea    edx,[edx]
  41edb2:	shrd   DWORD PTR [ebx+0x4566ab0f],edi,cl
  41edb9:	mov    dh,ah
  41edbb:	mov    ah,0xb9
  41edbd:	push   DWORD PTR [eax-0x40b42907]
  41edc3:	inc    esp
  41edc4:	adc    al,0x29
  41edc6:	jg     0x41ede6
  41edc8:	pop    ebx
  41edc9:	mov    ch,0x4c
  41edcb:	scas   eax,DWORD PTR es:[edi]
  41edcc:	xchg   edi,eax
  41edcd:	xor    eax,DWORD PTR [edx+0x528ebd01]
  41edd3:	push   eax
  41edd4:	std    
  41edd5:	jecxz  0x41ee35
  41edd7:	aaa    
  41edd8:	add    al,0x8d
  41edda:	loop   0x41ed77
  41eddc:	call   0x5e2b:0x3492d2e7
  41ede3:	aam    0xaf
  41ede5:	jge    0x41edea
  41ede7:	and    eax,0xff7bcc37
  41edec:	inc    esi
  41eded:	mov    ds:0x2c7a44c0,eax
  41edf2:	mov    esp,0xe4560fbb
  41edf7:	repnz adc al,al
  41edfa:	xchg   ebx,eax
  41edfb:	ror    BYTE PTR [ebp+esi*2-0x54cb2b],0x12
  41ee03:	dec    edx
  41ee04:	dec    edi
  41ee05:	pop    ds
  41ee06:	or     eax,0x31b597dd
  41ee0b:	or     esp,eax
  41ee0d:	ins    BYTE PTR es:[edi],dx
  41ee0e:	mov    eax,0x6da717f3
  41ee13:	lods   al,BYTE PTR ds:[esi]
  41ee14:	sub    al,bh
  41ee16:	dec    ecx
  41ee17:	jno    0x41edb0
  41ee19:	xor    al,0x43
  41ee1b:	push   0x75e08ff2
  41ee20:	mov    eax,0x9104c2a0
  41ee25:	xchg   edi,eax
  41ee26:	dec    eax
  41ee27:	bound  esi,QWORD PTR [ebx-0x4b]
  41ee2a:	jg     0x41ee61
  41ee2c:	jns    0x41ee72
  41ee2e:	cmp    eax,0xc380a951
  41ee33:	pop    ebx
  41ee34:	jbe    0x41ee2f
  41ee36:	lods   eax,DWORD PTR ds:[esi]
  41ee37:	imul   ebp,DWORD PTR [ebx+0xf9ccae4],0x610bf1
  41ee41:	pop    ebx
  41ee42:	in     eax,0x91
  41ee44:	push   esp
  41ee45:	popa   
  41ee46:	ret    0x677a
  41ee49:	mov    ?,WORD PTR [edx-0xebfb797]
  41ee4f:	clc    
  41ee50:	int3   
  41ee51:	ss js  0x41eddd
  41ee54:	push   0x24
  41ee56:	sar    DWORD PTR [edi+esi*4-0x64464330],0x2
  41ee5e:	test   al,0x65
  41ee60:	dec    eax
  41ee61:	adc    esp,ebx
  41ee63:	fdivrp st(1),st
  41ee65:	jnp    0x41eea5
  41ee67:	call   0xc914:0xa6308f13
  41ee6e:	sub    BYTE PTR ds:0x9f0fc1d9,dh
  41ee74:	mov    ds:0xbe9b43af,al
  41ee79:	pop    esp
  41ee7a:	mov    edi,0x36c4b342
  41ee7f:	add    cl,ch
  41ee81:	adc    BYTE PTR [edx+0x40],bl
  41ee84:	mov    al,0xa2
  41ee86:	sbb    DWORD PTR [eax],esi
  41ee88:	pop    ebp
  41ee89:	sub    BYTE PTR [esi+0x51],0x91
  41ee8d:	iret   
  41ee8e:	mov    ds:0xb15424bf,eax
  41ee93:	pop    eax
  41ee94:	sbb    eax,edi
  41ee96:	push   0x3be8f827
  41ee9b:	jmp    0x41ee3c
  41ee9d:	sbb    al,0x1d
  41ee9f:	jo     0x41ee85
  41eea1:	mov    ch,0x48
  41eea3:	loope  0x41ee4e
  41eea5:	outs   dx,DWORD PTR ds:[esi]
  41eea6:	repz inc ebp
  41eea8:	and    DWORD PTR [eax],ebp
  41eeaa:	xchg   esp,eax
  41eeab:	sbb    cl,0xdd
  41eeae:	pop    esp
  41eeaf:	mov    BYTE PTR [esi+0x21],cl
  41eeb2:	mov    ecx,0xdba2e414
  41eeb7:	imul   esp,DWORD PTR [edi],0x68ccd0cb
  41eebd:	js     0x41ef16
  41eebf:	sub    ch,BYTE PTR [esi+0x54]
  41eec2:	push   ds
  41eec3:	bound  edx,QWORD PTR [edx]
  41eec5:	daa    
  41eec6:	into   
  41eec7:	mov    ds:0xe703c605,eax
  41eecc:	mov    bh,0x86
  41eece:	lahf   
  41eecf:	inc    DWORD PTR [ebx]
  41eed1:	push   ss
  41eed2:	data16 jnp 0x41eebb
  41eed5:	and    BYTE PTR [edi-0x10561191],bl
  41eedb:	aaa    
  41eedc:	cli    
  41eedd:	xor    ch,cl
  41eedf:	into   
  41eee0:	mov    bl,0xb0
  41eee2:	outs   dx,DWORD PTR ds:[esi]
  41eee3:	jae    0x41ee78
  41eee5:	je     0x41ef49
  41eee7:	imul   edi,DWORD PTR [edi],0x748bedd3
  41eeed:	(bad)  
  41eeee:	xchg   edx,eax
  41eeef:	pop    es
  41eef0:	and    ecx,ebp
  41eef2:	or     DWORD PTR [eax+0x66fe70a1],ebp
  41eef8:	enter  0xf264,0x8d
  41eefc:	cmc    
  41eefd:	std    
  41eefe:	aam    0xf4
  41ef00:	sub    al,0x4d
  41ef02:	in     al,dx
  41ef03:	push   0xb0ea06e1
  41ef08:	push   0xf0edc435
  41ef0d:	xor    DWORD PTR [edi],eax
  41ef0f:	in     eax,dx
  41ef10:	repnz push edi
  41ef12:	or     eax,0x22b276e9
  41ef17:	rcr    BYTE PTR [ebp-0x3cb46b17],cl
  41ef1d:	xlat   BYTE PTR ds:[ebx]
  41ef1e:	add    dh,BYTE PTR [ebp-0xe692e97]
  41ef24:	sub    eax,0x24a8425f
  41ef29:	xchg   edi,eax
  41ef2a:	push   ebp
  41ef2b:	jbe    0x41eebf
  41ef2d:	imul   esi,ecx,0xe82b4dae
  41ef33:	inc    ecx
  41ef34:	mov    al,0x9c
  41ef36:	rcl    DWORD PTR [esi-0x1e],1
  41ef39:	add    dl,BYTE PTR [edx]
  41ef3b:	mov    al,ds:0x22b40cef
  41ef40:	pop    ds
  41ef41:	sub    al,0xe0
  41ef43:	retf   0x1285
  41ef46:	in     al,dx
  41ef47:	add    eax,0xd1d0888a
  41ef4c:	arpl   WORD PTR [esi+0x2b22d243],si
  41ef52:	add    edi,ecx
  41ef54:	out    dx,eax
  41ef55:	sbb    DWORD PTR [edx],edi
  41ef57:	or     eax,0x1c898a57
  41ef5c:	push   eax
  41ef5d:	shl    al,1
  41ef5f:	out    dx,al
  41ef60:	or     dh,bl
  41ef62:	into   
  41ef63:	pop    ebx
  41ef64:	out    dx,eax
  41ef65:	mov    edx,0xcb63c1a2
  41ef6a:	mov    ebx,0x7caa86e1
  41ef6f:	mov    ebp,0xbf5d43a1
  41ef74:	lea    esi,[ebx]
  41ef76:	or     BYTE PTR [ebp+0x47],ah
  41ef79:	push   edx
  41ef7a:	jne    0x41ef0e
  41ef7c:	retf   0xbc81
  41ef7f:	test   DWORD PTR [edx-0x27e5ac86],esp
  41ef85:	inc    ebp
  41ef87:	ds sub esi,esi
  41ef8a:	scas   eax,DWORD PTR es:[edi]
  41ef8b:	cs fwait
  41ef8d:	outs   dx,BYTE PTR ds:[esi]
  41ef8e:	push   ds
  41ef8f:	ds jle 0x41effb
  41ef92:	jo     0x41ef6f
  41ef94:	pop    edi
  41ef95:	int    0xf1
  41ef97:	ds push ecx
  41ef99:	nop
  41ef9a:	daa    
  41ef9b:	in     eax,dx
  41ef9c:	test   al,0x6
  41ef9e:	mov    edi,0xc137ff55
  41efa3:	jb     0x41ef4e
  41efa5:	mov    ebx,edx
  41efa7:	mov    ebx,0x9d2866e1
  41efac:	pop    esp
  41efad:	or     edi,DWORD PTR [ebx-0x7772903]
  41efb3:	lods   eax,DWORD PTR ds:[esi]
  41efb4:	xchg   ecx,eax
  41efb5:	inc    edi
  41efb6:	and    dl,BYTE PTR [ecx+0xa]
  41efb9:	clc    
  41efba:	dec    esp
  41efbb:	push   ss
  41efbc:	jecxz  0x41ef4a
  41efbe:	jl     0x41ef59
  41efc0:	push   0x38849c08
  41efc5:	je     0x41ef7a
  41efc7:	in     al,dx
  41efc8:	cwde   
  41efc9:	outs   dx,DWORD PTR ds:[esi]
  41efca:	jmp    0x41efe4
  41efcc:	js     0x41ef78
  41efce:	hlt    
  41efcf:	adc    eax,0x74605f7b
  41efd4:	enter  0x5ffd,0x7e
  41efd8:	(bad)  
  41efd9:	in     eax,dx
  41efda:	rol    DWORD PTR [edi],0xd9
  41efdd:	mov    bh,0x62
  41efdf:	jg     0x41efbd
  41efe1:	int3   
  41efe2:	add    dh,BYTE PTR [edx-0x154480da]
  41efe8:	and    eax,0x90503526
  41efed:	or     eax,0xa51dc9f4
  41eff2:	inc    ecx
  41eff3:	mov    eax,0xeb36808d
  41eff8:	call   0xf9f344a
  41effd:	add    al,0xbf
  41efff:	and    DWORD PTR [edi-0x52],eax
  41f002:	xchg   esi,eax
  41f003:	mov    eax,ds:0xa8d05996
  41f008:	loope  0x41efd5
  41f00a:	or     ah,BYTE PTR [ebp-0x56]
  41f00d:	dec    edx
  41f00e:	out    0x54,eax
  41f010:	imul   esi,DWORD PTR ds:0xf16a8969,0x8a755ea1
  41f01a:	in     al,dx
  41f01b:	aam    0x1d
  41f01d:	dec    edi
  41f01e:	(bad)  
  41f01f:	neg    DWORD PTR ds:0xae0b23b9
  41f025:	sbb    ebx,DWORD PTR [edx+0x11]
  41f028:	add    eax,0x559a5a1e
  41f02d:	bound  edi,QWORD PTR [ebp-0x656c22af]
  41f033:	mov    ds:0xcb4c3a9,eax
  41f038:	dec    edi
  41f039:	or     eax,ebp
  41f03b:	daa    
  41f03c:	or     DWORD PTR [edi+0xc],ebx
  41f03f:	lea    edx,[eax]
  41f041:	sub    eax,0xe2e997f9
  41f046:	and    DWORD PTR [eax+0x6a416ea2],edx
  41f04c:	pop    esp
  41f04d:	mov    bh,0xfa
  41f04f:	mov    eax,ds:0xc2d5c624
  41f054:	mov    DWORD PTR [edx+0x6347b76],esi
  41f05a:	into   
  41f05b:	loop   0x41f015
  41f05d:	xor    al,0xeb
  41f05f:	mov    BYTE PTR [edx],dh
  41f061:	mov    WORD PTR [esi-0x53],fs
  41f064:	add    al,0xcc
  41f066:	iret   
  41f067:	nop
  41f068:	getsec 
  41f06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f06b:	mov    ah,0x1d
  41f06d:	mov    DWORD PTR [edx-0x6e],ebp
  41f070:	and    dl,BYTE PTR [eax+0x1c175b05]
  41f076:	popf   
  41f077:	xor    ebx,ebx
  41f079:	inc    ecx
  41f07a:	and    edi,DWORD PTR [eax+0x4b85ded5]
  41f080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f081:	mov    al,ds:0xa2e24e78
  41f086:	xchg   ecx,eax
  41f087:	popa   
  41f088:	sbb    BYTE PTR [ebx-0x437e5e6f],al
  41f08e:	jo     0x41f0b9
  41f090:	or     eax,0x942b9968
  41f095:	and    BYTE PTR [ecx],bh
  41f097:	into   
  41f098:	inc    eax
  41f099:	mov    dh,0xa4
  41f09b:	and    ch,BYTE PTR [ecx]
  41f09d:	fdivr  st(0),st
  41f09f:	call   0x4dfc:0x989c061b
  41f0a6:	inc    ecx
  41f0a7:	adc    al,0x4
  41f0a9:	xchg   edi,eax
  41f0aa:	xchg   ecx,eax
  41f0ab:	add    DWORD PTR [ecx+edi*2+0x634f1984],0x45
  41f0b3:	push   ecx
  41f0b4:	rcr    DWORD PTR [ebp-0x794e5b25],0xd7
  41f0bb:	xor    DWORD PTR [esi],esi
  41f0bd:	daa    
  41f0be:	xor    ebp,DWORD PTR [ebx]
  41f0c0:	int3   
  41f0c1:	je     0x41f104
  41f0c3:	add    dh,BYTE PTR [edx+eiz*4-0x4df4383f]
  41f0ca:	mov    bl,0x68
  41f0cc:	je     0x41f0f9
  41f0ce:	int3   
  41f0cf:	aas    
  41f0d0:	dec    esi
  41f0d1:	imul   esi,DWORD PTR [eax-0x60],0x3f6d5b87
  41f0d8:	sahf   
  41f0d9:	js     0x41f0d5
  41f0db:	jae    0x41f113
  41f0dd:	arpl   WORD PTR [esi-0x32],bx
  41f0e0:	ds inc eax
  41f0e2:	mov    dl,0xc9
  41f0e4:	jae    0x41f12d
  41f0e6:	mov    ?,WORD PTR [ebx]
  41f0e8:	sub    al,0x7a
  41f0ea:	jecxz  0x41f133
  41f0ec:	mov    bl,BYTE PTR [ebx+0x3f14e7d]
  41f0f2:	dec    esi
  41f0f3:	mov    dl,0xcb
  41f0f5:	mov    ah,0xb8
  41f0f7:	lea    edi,[edi-0x32]
  41f0fa:	cwde   
  41f0fb:	clc    
  41f0fc:	xchg   ebx,eax
  41f0fd:	mov    eax,ds:0x19b1a86d
  41f102:	sbb    BYTE PTR [ebp-0x5813b7ef],bl
  41f108:	adc    DWORD PTR [ebp+0x76],ecx
  41f10b:	sub    ebx,0x79
  41f10e:	push   es
  41f10f:	mov    bh,0x22
  41f111:	imul   edi,edx,0xcc92af2b
  41f117:	mov    bl,0x13
  41f119:	into   
  41f11a:	ficomp DWORD PTR [edx]
  41f11c:	cli    
  41f11d:	dec    ecx
  41f11e:	cld    
  41f11f:	add    ebx,DWORD PTR [ebp+eax*2-0xd]
  41f123:	sbb    BYTE PTR [eax],dh
  41f125:	lahf   
  41f126:	sti    
  41f127:	adc    DWORD PTR [edx+0x3c],esp
  41f12a:	mov    ebp,0x87f45c97
  41f12f:	dec    eax
  41f130:	add    DWORD PTR [ebx+0x46],0x66539c2f
  41f137:	jmp    0xd3daacbc
  41f13c:	loope  0x41f17c
  41f13e:	push   eax
  41f13f:	sbb    DWORD PTR [edx-0x43],edx
  41f142:	in     al,dx
  41f143:	jmp    0xa8d1:0x1a0a988
  41f14a:	sub    eax,0x91ebe48b
  41f14f:	fisttp QWORD PTR [ebx-0x70f8e2c3]
  41f155:	stos   DWORD PTR es:[edi],eax
  41f156:	fild   WORD PTR [edi+ebx*2]
  41f159:	(bad)  
  41f15a:	fwait
  41f15b:	bound  esi,QWORD PTR [esi+0x3631de84]
  41f161:	mov    edi,0x9b05287a
  41f166:	je     0x41f1ae
  41f168:	(bad)  
  41f169:	test   al,0xb8
  41f16b:	mov    bl,BYTE PTR [ebx+0x3d]
  41f16e:	daa    
  41f16f:	loopne 0x41f1dd
  41f171:	jp     0x41f120
  41f173:	mov    dl,0x2d
  41f175:	jmp    0x739e87b1
  41f17a:	or     al,0xf
  41f17c:	jge    0x41f1d9
  41f17e:	cmp    al,0x22
  41f180:	pop    edx
  41f181:	or     ebp,DWORD PTR [edx]
  41f183:	or     eax,0x737e46db
  41f188:	mov    bl,0x47
  41f18a:	add    eax,0xd9d99808
  41f18f:	loopne 0x41f12f
  41f191:	aaa    
  41f192:	push   0x0
  41f194:	xchg   esi,eax
  41f195:	ja     0x41f17d
  41f197:	inc    ebx
  41f198:	mov    eax,ds:0x2a5de8cf
  41f19d:	loop   0x41f14d
  41f19f:	cmp    al,0xd3
  41f1a1:	gs loope 0x41f1d7
  41f1a4:	fwait
  41f1a5:	or     al,0xb9
  41f1a7:	add    BYTE PTR [edi-0x61],dl
  41f1aa:	outs   dx,DWORD PTR ds:[esi]
  41f1ab:	inc    ebx
  41f1ac:	outs   dx,BYTE PTR ds:[esi]
  41f1ad:	cmp    BYTE PTR [esi+0x11],dl
  41f1b0:	fdivr  QWORD PTR [ecx]
  41f1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b3:	lahf   
  41f1b4:	pusha  
  41f1b5:	out    0x92,al
  41f1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1b8:	mov    BYTE PTR [edx+0x78],ah
  41f1bb:	retf   
  41f1bc:	nop
  41f1bd:	mov    DWORD PTR [edx+0x62],edx
  41f1c0:	sub    DWORD PTR [edi-0x1b],eax
  41f1c3:	test   BYTE PTR [ebx+0x6a],cl
  41f1c6:	bound  ebp,QWORD PTR [esi+0x228ba4d8]
  41f1cc:	mov    eax,0x6cb6aa46
  41f1d1:	out    dx,eax
  41f1d2:	aaa    
  41f1d3:	(bad)  
  41f1d5:	sub    al,0xdc
  41f1d7:	das    
  41f1d8:	inc    ebx
  41f1d9:	mov    ebp,DWORD PTR [ecx+ebp*4]
  41f1dc:	out    dx,al
  41f1dd:	iret   
  41f1de:	sub    eax,DWORD PTR [edx-0x6451ebef]
  41f1e4:	mov    ebp,0xcf3c8738
  41f1e9:	fistp  WORD PTR [esi-0x38616035]
  41f1ef:	cmp    bl,0xde
  41f1f2:	inc    esi
  41f1f3:	scas   al,BYTE PTR es:[edi]
  41f1f4:	lahf   
  41f1f5:	push   esi
  41f1f6:	dec    esp
  41f1f7:	les    eax,FWORD PTR [ebp+0x5be6bae]
  41f1fd:	rep ins DWORD PTR es:[edi],dx
  41f1ff:	sbb    eax,0x975d2e74
  41f204:	test   esi,0x9506a909
  41f20a:	mov    ah,0xec
  41f20c:	jns    0x41f208
  41f20e:	imul   eax,DWORD PTR [esi-0x53],0x5b
  41f212:	enter  0xafc1,0x74
  41f216:	(bad)  
  41f217:	(bad)  
  41f218:	pop    ebp
  41f219:	jmp    0x89e6:0x8aad8723
  41f220:	fcmovb st,st(5)
  41f222:	dec    ebp
  41f223:	and    eax,0xee3552e0
  41f228:	cmp    BYTE PTR [edx-0x213dbb0d],dh
  41f22e:	imul   BYTE PTR [edi+0x6d]
  41f231:	sub    eax,0x16b2339d
  41f236:	in     al,dx
  41f237:	(bad)  
  41f238:	sub    DWORD PTR [ebx+0x11],ebx
  41f23b:	scas   eax,DWORD PTR es:[edi]
  41f23c:	shl    DWORD PTR [ebx],cl
  41f23e:	push   es
  41f23f:	leave  
  41f240:	inc    edi
  41f241:	or     BYTE PTR [esp+eax*4-0x74],ah
  41f245:	cdq    
  41f246:	jge    0x41f218
  41f248:	retf   
  41f249:	xchg   edx,eax
  41f24a:	and    ebp,DWORD PTR [edx]
  41f24c:	test   al,0xc9
  41f24e:	dec    esi
  41f24f:	ds inc eax
  41f251:	sahf   
  41f252:	test   al,0x7e
  41f254:	sar    bh,0x2c
  41f257:	sbb    eax,0xb9db3e30
  41f25c:	xlat   BYTE PTR ds:[ebx]
  41f25d:	out    0xbc,al
  41f25f:	mov    ebp,0x60821992
  41f264:	push   0x6
  41f266:	jge    0x41f270
  41f268:	xchg   BYTE PTR [ecx+0x12b8feef],dl
  41f26e:	pop    eax
  41f26f:	and    BYTE PTR [edi-0x3dbb4a90],0x91
  41f276:	scas   eax,DWORD PTR es:[edi]
  41f277:	xchg   esp,eax
  41f278:	pop    esi
  41f279:	jl     0x41f297
  41f27b:	jae    0x41f2bb
  41f27d:	jle    0x41f2be
  41f27f:	xchg   DWORD PTR [ebp+0x16],edx
  41f282:	test   BYTE PTR [ebp+0xc686130],al
  41f288:	shr    al,cl
  41f28a:	mov    dh,dh
  41f28c:	xchg   esi,eax
  41f28d:	push   es
  41f28e:	(bad)  
  41f28f:	(bad)
  41f293:	or     DWORD PTR [edi+0x29],edi
  41f296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f297:	sbb    bh,BYTE PTR [ecx-0x5fe71c20]
  41f29d:	jnp    0x41f28a
  41f29f:	setge  BYTE PTR [ebx+0x6c]
  41f2a3:	jg     0x41f266
  41f2a5:	xor    al,0x5c
  41f2a7:	inc    edx
  41f2a8:	push   es
  41f2a9:	ret    
  41f2aa:	shr    BYTE PTR [ebp-0x19c1fa2b],1
  41f2b0:	mov    WORD PTR [ecx],gs
  41f2b2:	sub    eax,0xe7b587a0
  41f2b7:	xor    BYTE PTR [ebp+0x541c9aca],0xf9
  41f2be:	jl     0x41f259
  41f2c0:	out    dx,al
  41f2c1:	fadd   st(1),st
  41f2c3:	dec    edi
  41f2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c5:	shl    DWORD PTR [eax-0x22],0x37
  41f2c9:	lock aas 
  41f2cb:	repz push eax
  41f2cd:	xor    si,0x2f
  41f2d1:	aaa    
  41f2d2:	fisttp QWORD PTR [eax]
  41f2d4:	lea    ecx,[ebp-0x64dfa1c4]
  41f2da:	adc    al,BYTE PTR [ebx+0x15790cad]
  41f2e0:	cmp    DWORD PTR [esi-0x68],ebx
  41f2e3:	or     BYTE PTR [ebx],bh
  41f2e5:	mov    ch,BYTE PTR [ebp+0x1a]
  41f2e8:	inc    eax
  41f2e9:	popf   
  41f2ea:	test   BYTE PTR [esi-0x7c58a30c],bl
  41f2f0:	mov    edi,cs
  41f2f2:	sub    BYTE PTR [edi],0xb6
  41f2f5:	mov    ch,0x6a
  41f2f7:	push   esp
  41f2f8:	jbe    0x41f32b
  41f2fa:	mov    esi,0x76da1f55
  41f2ff:	dec    edx
  41f300:	push   0x6115a2c6
  41f305:	call   0xf0cd:0x3a42e21a
  41f30c:	inc    ecx
  41f30d:	push   ecx
  41f30e:	scas   eax,DWORD PTR es:[edi]
  41f30f:	sbb    DWORD PTR [edi+eiz*4+0x1],ebx
  41f313:	ins    DWORD PTR es:[edi],dx
  41f314:	call   0x9075cc8f
  41f319:	idiv   DWORD PTR [eax+0x19]
  41f31c:	cmp    eax,0xfa6d3234
  41f321:	push   edi
  41f322:	ret    0xf42e
  41f325:	xchg   ebx,eax
  41f326:	mov    DWORD PTR [edx+0x1a73f315],ecx
  41f32c:	jp     0x41f2dc
  41f32e:	test   DWORD PTR [eax+0x1c],edi
  41f331:	add    al,0x27
  41f333:	add    DWORD PTR [edx],esi
  41f335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f336:	call   0xb74b:0xf670eb13
  41f33d:	add    BYTE PTR [edi],al
  41f33f:	push   esi
  41f340:	pop    ds
  41f341:	jg     0x41f33e
  41f343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f344:	xor    al,0xdc
  41f346:	(bad)  
  41f348:	out    dx,eax
  41f349:	lock and ebp,esp
  41f34c:	mov    esp,0xf5b1c8c1
  41f351:	ja     0x41f37b
  41f353:	mov    ch,0x20
  41f355:	int3   
  41f356:	push   edi
  41f357:	xor    ch,BYTE PTR ds:0x108d7300
  41f35d:	fisttp DWORD PTR [esi+0x4b]
  41f360:	imul   ebp,DWORD PTR [eax-0x7fe5f34c],0x46e11f27
  41f36a:	mov    edx,0x83748155
  41f36f:	ds jg  0x41f314
  41f372:	repz inc ebp
  41f374:	adc    ah,BYTE PTR [edx]
  41f376:	out    0x72,eax
  41f378:	pop    es
  41f379:	bound  esp,QWORD PTR [ebp-0x676700a1]
  41f37f:	push   edx
  41f380:	lea    ebp,[esi+ebp*1]
  41f383:	sar    DWORD PTR [edx],cl
  41f385:	push   edi
  41f386:	push   ebp
  41f387:	jbe    0x41f34d
  41f389:	test   BYTE PTR [ebp+ebx*4-0x5b],0xcc
  41f38e:	(bad)  
  41f38f:	dec    esi
  41f390:	loop   0x41f3a3
  41f392:	xlat   BYTE PTR ds:[ebx]
  41f393:	fmul   st,st(5)
  41f395:	mov    ecx,0x162cbb5c
  41f39a:	mov    ecx,DWORD PTR [edi-0x4c]
  41f39d:	cmp    cl,bh
  41f39f:	ds add al,0x51
  41f3a2:	jmp    0xa0083066
  41f3a7:	dec    edx
  41f3a8:	cwde   
  41f3a9:	and    eax,0x5109d92
  41f3ae:	pop    ebx
  41f3af:	test   BYTE PTR [eax+0x125028d5],al
  41f3b5:	push   ss
  41f3b6:	jb     0x41f37e
  41f3b8:	sub    eax,0x24af4bfa
  41f3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3bf:	sahf   
  41f3c0:	pop    eax
  41f3c1:	ja     0x41f3b0
  41f3c3:	ret    0xe87f
  41f3c6:	mov    edx,0xe1d90de3
  41f3cb:	(bad)  
  41f3cc:	pop    edi
  41f3cd:	and    al,0x40
  41f3cf:	fdivp  st(1),st
  41f3d1:	mov    eax,0xf58d137c
  41f3d6:	or     dh,bl
  41f3d8:	push   esi
  41f3d9:	pop    esi
  41f3da:	nop
  41f3db:	dec    ecx
  41f3dc:	mov    cs,WORD PTR [esi+0x2a941a24]
  41f3e2:	xor    ch,dl
  41f3e4:	(bad)  
  41f3e5:	lahf   
  41f3e6:	ja     0x41f3de
  41f3e8:	ret    0x36c0
  41f3eb:	out    dx,al
  41f3ec:	push   edx
  41f3ed:	das    
  41f3ee:	mov    bh,0x7c
  41f3f0:	dec    edi
  41f3f1:	dec    edi
  41f3f2:	out    0x81,al
  41f3f4:	ja     0x41f405
  41f3f6:	push   ecx
  41f3f7:	mov    al,ds:0xce07a827
  41f3fc:	mov    ecx,DWORD PTR ds:0x65350a4e
  41f402:	jmp    0x41f384
  41f404:	pop    es
  41f405:	xor    DWORD PTR [edi+0x4c],ebx
  41f408:	cmp    eax,0x24ff2e1f
  41f40d:	sub    DWORD PTR [eax+0x6c2e611a],edi
  41f413:	dec    ebx
  41f414:	pop    eax
  41f415:	and    bl,BYTE PTR [eax-0x20]
  41f418:	scas   al,BYTE PTR es:[edi]
  41f419:	and    eax,0x164783f
  41f41e:	mov    ch,0xb3
  41f420:	xor    al,BYTE PTR [ebx]
  41f422:	sbb    al,0x18
  41f424:	repnz inc ebp
  41f426:	cli    
  41f427:	(bad)  
  41f428:	sar    ah,1
  41f42a:	mov    eax,0x8f33871d
  41f42f:	scas   eax,DWORD PTR es:[edi]
  41f430:	cmp    DWORD PTR ds:0xd246ebf5,eax
  41f436:	(bad)  
  41f437:	es adc eax,0x674e6323
  41f43d:	adc    eax,0x47a655aa
  41f442:	mov    eax,DWORD PTR [edi]
  41f444:	cmp    DWORD PTR [eax],ebp
  41f446:	retf   0x34eb
  41f449:	mov    al,ds:0xe2035911
  41f44e:	clc    
  41f44f:	loop   0x41f409
  41f451:	loop   0x41f494
  41f453:	iret   
  41f454:	outs   dx,BYTE PTR ds:[esi]
  41f455:	pop    esi
  41f456:	adc    BYTE PTR [ebx],0x2c
  41f459:	clc    
  41f45a:	sbb    ecx,eax
  41f45c:	iret   
  41f45d:	mov    bh,0x67
  41f45f:	les    edi,FWORD PTR [ecx+eiz*8+0x2a]
  41f463:	sbb    DWORD PTR [ecx],ecx
  41f465:	jo     0x41f438
  41f467:	xchg   ebx,eax
  41f468:	xchg   ecx,eax
  41f469:	inc    ecx
  41f46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f46b:	pop    ss
  41f46c:	add    al,0xa4
  41f46e:	arpl   WORD PTR [esi+0xa],si
  41f471:	or     eax,0x3f3f27fa
  41f476:	mov    ds:0x4b00607e,al
  41f47b:	(bad)  
  41f47c:	popf   
  41f47d:	lahf   
  41f47e:	das    
  41f47f:	inc    edx
  41f480:	std    
  41f481:	jmp    0xdb0db5f3
  41f486:	popa   
  41f487:	shl    BYTE PTR [edi+0x6],cl
  41f48a:	dec    ebp
  41f48b:	je     0x41f4ce
  41f48d:	int3   
  41f48e:	loopne 0x41f411
  41f490:	adc    BYTE PTR [edx+0x7a50f495],al
  41f496:	cmp    eax,0xb4b9bf9
  41f49b:	mov    ds:0xaaa675bd,eax
  41f4a0:	lods   al,BYTE PTR ds:[esi]
  41f4a1:	das    
  41f4a2:	pop    ss
  41f4a3:	jle    0x41f4c6
  41f4a5:	aaa    
  41f4a6:	mov    ebp,0x3c732af2
  41f4ab:	scas   eax,DWORD PTR es:[edi]
  41f4ac:	aaa    
  41f4ad:	lahf   
  41f4ae:	or     BYTE PTR [edx],al
  41f4b0:	in     eax,dx
  41f4b1:	jecxz  0x41f4a2
  41f4b3:	adc    al,0x66
  41f4b5:	nop
  41f4b6:	pop    edi
  41f4b7:	(bad)  
  41f4b8:	sbb    al,0x2c
  41f4ba:	daa    
  41f4bb:	pop    esp
  41f4bc:	push   es
  41f4bd:	fs jecxz 0x41f462
  41f4c0:	sahf   
  41f4c1:	retf   
  41f4c2:	ss sub eax,edi
  41f4c5:	retf   
  41f4c6:	std    
  41f4c7:	loope  0x41f44e
  41f4c9:	jmp    0x41f4ce
  41f4cb:	mov    ebx,0xde413286
  41f4d0:	xor    ah,BYTE PTR [esi-0x41cdf30c]
  41f4d6:	std    
  41f4d7:	out    0x42,eax
  41f4d9:	add    eax,0xaccb5f66
  41f4de:	xlat   BYTE PTR ds:[ebx]
  41f4df:	stc    
  41f4e0:	and    dh,ch
  41f4e2:	cli    
  41f4e3:	jbe    0x41f486
  41f4e5:	pop    esi
  41f4e6:	xor    BYTE PTR [edi+0x7aa0d7f1],0xee
  41f4ed:	aam    0x8
  41f4ef:	xor    edi,DWORD PTR [ebx-0x269f2168]
  41f4f5:	jo     0x41f505
  41f4f7:	sbb    BYTE PTR [esi-0xb70341c],bl
  41f4fd:	data16 sub bl,BYTE PTR [edx-0x1fd6aa75]
  41f504:	into   
  41f505:	cwde   
  41f506:	test   ebp,ebx
  41f508:	jns    0x41f490
  41f50a:	aas    
  41f50b:	xchg   DWORD PTR [ebx],edi
  41f50d:	nop
  41f50e:	mov    ecx,DWORD PTR [edi+0x750c2115]
  41f514:	frstor [esi]
  41f516:	mov    ch,0x54
  41f518:	je     0x41f501
  41f51a:	xlat   BYTE PTR ds:[ebx]
  41f51b:	fldenv [edi]
  41f51d:	mov    dl,0x8e
  41f51f:	pop    es
  41f520:	je     0x41f4b3
  41f522:	clc    
  41f523:	add    eax,0x38b0e249
  41f528:	lds    ebp,FWORD PTR [eax-0x35]
  41f52b:	xor    esp,DWORD PTR [ebx+0x68]
  41f52e:	push   ss
  41f52f:	mov    ah,0xdf
  41f531:	sbb    DWORD PTR [ebp+0x27],ebp
  41f534:	xchg   BYTE PTR [ecx+esi*4+0x1c],ah
  41f538:	jp     0x41f574
  41f53a:	sub    esi,edi
  41f53c:	pop    esp
  41f53d:	mov    gs,WORD PTR [eax+0x62405e46]
  41f543:	shr    edx,cl
  41f545:	inc    esp
  41f546:	(bad)  
  41f547:	push   ebp
  41f548:	push   esi
  41f549:	mov    ah,0x67
  41f54b:	pusha  
  41f54c:	sbb    edi,DWORD PTR [edx+0xcd0c5fb]
  41f552:	imul   edi,DWORD PTR [edx+esi*2-0x77],0x781d9576
  41f55a:	mov    dh,0x18
  41f55c:	mov    al,ds:0x51bd40cf
  41f561:	add    eax,0xc908ac2b
  41f566:	cwde   
  41f567:	inc    esp
  41f568:	inc    ecx
  41f569:	gs and al,0xf8
  41f56c:	push   ebx
  41f56d:	fmul   DWORD PTR [edx]
  41f56f:	pop    ds
  41f570:	adc    DWORD PTR [eax-0x13],edx
  41f573:	push   0xffffffcd
  41f575:	inc    edx
  41f576:	aas    
  41f577:	sub    al,0xf9
  41f579:	pusha  
  41f57a:	fwait
  41f57b:	mov    al,ds:0xf3593e1
  41f580:	(bad)  
  41f581:	rcr    BYTE PTR [edi+0x55],cl
  41f584:	addr16 sbb al,0x80
  41f587:	gs (bad) 
  41f589:	daa    
  41f58a:	and    BYTE PTR ds:0x7621b3b8,dh
  41f590:	add    DWORD PTR [ebx+0x40],esp
  41f593:	mov    dh,0x11
  41f595:	lds    ebx,FWORD PTR [eax]
  41f597:	ret    0x89f
  41f59a:	add    ebx,edx
  41f59c:	and    al,0x12
  41f59e:	or     BYTE PTR [ebx+0x8],dh
  41f5a1:	push   esp
  41f5a2:	sub    al,0x49
  41f5a4:	mov    esi,edx
  41f5a6:	inc    BYTE PTR [eax+eax*2+0x35]
  41f5aa:	es xor al,0xa3
  41f5ad:	pushf  
  41f5ae:	pushf  
  41f5af:	ret    0x1192
  41f5b2:	mov    esp,0xa9155ac9
  41f5b7:	mov    ecx,0xf3ef181b
  41f5bc:	es cmp edx,ecx
  41f5bf:	jns    0x41f612
  41f5c1:	into   
  41f5c2:	scas   al,BYTE PTR es:[edi]
  41f5c3:	lods   eax,DWORD PTR ss:[esi]
  41f5c5:	fld1   
  41f5c7:	retf   
  41f5c8:	push   edx
  41f5c9:	adc    al,0x1c
  41f5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5cc:	or     esp,DWORD PTR [edi+0x48ea59b]
  41f5d2:	push   ds
  41f5d3:	mov    dl,0xfd
  41f5d5:	ss xchg ebx,eax
  41f5d7:	push   esp
  41f5d8:	shl    BYTE PTR [edx+0x19],cl
  41f5db:	mov    esp,0x420cbcbe
  41f5e0:	xchg   ebx,eax
  41f5e1:	sahf   
  41f5e2:	imul   esi,DWORD PTR [esi+0x43],0xe975328b
  41f5e9:	pushf  
  41f5ea:	(bad)  
  41f5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5ec:	cmp    eax,esp
  41f5ee:	add    esp,DWORD PTR [ecx]
  41f5f0:	test   DWORD PTR [edi+ecx*4],0xb954519c
  41f5f7:	inc    ecx
  41f5f8:	mov    dh,0xa7
  41f5fa:	mov    WORD PTR [edx+eiz*4+0x1dd7fca],es
  41f601:	xor    DWORD PTR [edi+0x58],edi
  41f604:	aaa    
  41f605:	sti    
  41f606:	dec    eax
  41f607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f608:	pop    esp
  41f609:	push   ds
  41f60a:	jl     0x41f689
  41f60c:	inc    esi
  41f60d:	scas   al,BYTE PTR es:[edi]
  41f60e:	mov    al,ds:0x2e144f43
  41f613:	imul   DWORD PTR [edx+0x528cba25]
  41f619:	into   
  41f61a:	adc    DWORD PTR [eax+0x51],edi
  41f61d:	clc    
  41f61e:	mov    al,ds:0x9147662c
  41f623:	jmp    0xb51e:0x71c9a394
  41f62a:	push   edi
  41f62b:	shr    DWORD PTR [edx+0x36f5c3e5],0xcd
  41f632:	cmp    eax,DWORD PTR [edx]
  41f634:	pop    ebp
  41f635:	adc    bh,bh
  41f637:	jno    0x41f5d9
  41f639:	adc    al,0xff
  41f63b:	jecxz  0x41f696
  41f63d:	jae    0x41f6b3
  41f63f:	lods   eax,DWORD PTR ds:[esi]
  41f640:	sbb    eax,0x65f8dc85
  41f645:	enter  0x6d7c,0x7c
  41f649:	test   al,0xf2
  41f64b:	js     0x41f697
  41f64d:	mov    ah,0x12
  41f64f:	js     0x41f682
  41f651:	ja     0x41f5da
  41f653:	jg     0x41f629
  41f655:	cmp    ch,BYTE PTR [eax+ebp*8]
  41f658:	mov    ebx,0xdb506b32
  41f65d:	add    al,BYTE PTR [eax]
  41f65f:	lds    ecx,FWORD PTR [ebp-0x35]
  41f662:	jns    0x41f681
  41f664:	or     BYTE PTR [eax+0x9520cea],ch
  41f66a:	pop    ds
  41f66b:	sbb    eax,0xc5656095
  41f670:	and    dl,BYTE PTR [ecx-0x7d]
  41f673:	ror    DWORD PTR [eax],0x84
  41f676:	adc    eax,0x2a8b1233
  41f67b:	mov    ebp,ebx
  41f67d:	sar    DWORD PTR [edi],cl
  41f67f:	int    0x8a
  41f681:	pop    ss
  41f682:	add    DWORD PTR [ebx-0x5cad153b],0xffffffa3
  41f689:	pushf  
  41f68a:	(bad)  
  41f68b:	loope  0x41f635
  41f68d:	push   ecx
  41f68e:	std    
  41f68f:	test   BYTE PTR [ebx],0xf
  41f692:	mov    al,ds:0xbd72e13
  41f697:	leave  
  41f698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f699:	push   cs
  41f69a:	adc    al,0xb6
  41f69c:	mov    DWORD PTR [ecx],edi
  41f69e:	pop    edi
  41f69f:	push   eax
  41f6a0:	leave  
  41f6a1:	push   esi
  41f6a2:	push   cs
  41f6a3:	and    ebx,ebp
  41f6a5:	sub    eax,0x2db9d40d
  41f6aa:	pop    ss
  41f6ab:	out    dx,al
  41f6ac:	push   ds
  41f6ad:	(bad)  
  41f6ae:	imul   edi,DWORD PTR [edx-0xf7996cd]
  41f6b5:	out    0x86,al
  41f6b7:	sub    edx,esi
  41f6b9:	push   edi
  41f6ba:	push   ecx
  41f6bb:	push   esp
  41f6bc:	sbb    edi,DWORD PTR ds:0x4662a0f7
  41f6c2:	ja     0x41f671
  41f6c4:	jo     0x41f721
  41f6c6:	(bad)  
  41f6c7:	fstp   TBYTE PTR [esi+ebp*8]
  41f6ca:	mov    al,0x16
  41f6cc:	xchg   esi,eax
  41f6cd:	sar    BYTE PTR [edx+0x311ea654],1
  41f6d3:	inc    ebp
  41f6d4:	xlat   BYTE PTR ds:[ebx]
  41f6d5:	and    al,0x2a
  41f6d7:	lods   al,BYTE PTR ds:[esi]
  41f6d8:	nop
  41f6d9:	or     eax,0xb9fc4881
  41f6de:	rcr    ebx,1
  41f6e0:	stc    
  41f6e1:	icebp  
  41f6e2:	idiv   BYTE PTR [esi]
  41f6e4:	sub    al,0x5d
  41f6e6:	jno    0x41f75d
  41f6e8:	gs sub al,0xbb
  41f6eb:	xchg   BYTE PTR [edx-0x7f],bh
  41f6ee:	mov    bh,0x39
  41f6f0:	outs   dx,DWORD PTR ds:[esi]
  41f6f1:	ret    0xb441
  41f6f4:	jmp    0x41f69b
  41f6f6:	fwait
  41f6f7:	mov    eax,ds:0xbb01a72e
  41f6fc:	out    0x34,al
  41f6fe:	pop    es
  41f6ff:	int3   
  41f700:	add    bh,BYTE PTR [eax+0x42]
  41f703:	mov    edx,0x6e8bbb00
  41f708:	ja     0x41f745
  41f70a:	xchg   BYTE PTR [ecx+ebx*4+0x73d8982b],ch
  41f711:	loop   0x41f709
  41f713:	or     edi,DWORD PTR [ecx+ebx*4]
  41f716:	and    esi,DWORD PTR [edx]
  41f718:	sbb    BYTE PTR [edx+0x4b8b9497],dl
  41f71e:	push   0x68eb9ff1
  41f723:	sub    eax,0x90640d9a
  41f728:	addr16 aam 0xd9
  41f72b:	int    0x6e
  41f72d:	mov    cl,0x52
  41f72f:	loop   0x41f774
  41f731:	imul   edi,DWORD PTR [esi-0x3acaf40],0x15b2155d
  41f73b:	das    
  41f73c:	or     dl,0x21
  41f73f:	retf   
  41f740:	imul   ebx,esi,0x5a
  41f743:	(bad)  
  41f744:	xchg   edi,eax
  41f745:	inc    ecx
  41f746:	je     0x41f6f9
  41f748:	pop    ebp
  41f749:	mov    eax,ds:0x74adfab7
  41f74e:	sub    bl,0xb4
  41f751:	mov    al,ds:0x18874d7d
  41f756:	jmp    0x41f70e
  41f758:	mov    cl,0x76
  41f75a:	mov    edi,0x813d8023
  41f75f:	ss and eax,0x24e1a6e4
  41f765:	arpl   cx,sp
  41f767:	mov    ebp,0x22f0c3a4
  41f76c:	push   cs
  41f76d:	and    al,0xf6
  41f76f:	loope  0x41f6f5
  41f771:	sahf   
  41f772:	iret   
  41f773:	push   cs
  41f774:	mov    ah,0x3c
  41f776:	sub    cl,BYTE PTR [esp+edx*2]
  41f779:	test   edi,esp
  41f77b:	test   esi,eax
  41f77d:	or     DWORD PTR [edx-0x47],esi
  41f780:	test   al,0xd1
  41f782:	das    
  41f783:	fcom   QWORD PTR [edi]
  41f785:	outs   dx,BYTE PTR ds:[esi]
  41f786:	add    DWORD PTR [eax+0xd],edi
  41f789:	inc    ebp
  41f78a:	scas   eax,DWORD PTR es:[edi]
  41f78b:	out    dx,al
  41f78c:	inc    esi
  41f78d:	adc    al,0x26
  41f78f:	mov    al,0xb4
  41f791:	jbe    0x41f796
  41f793:	shl    DWORD PTR ds:0x7b79dea9,1
  41f799:	adc    BYTE PTR [ebp+0x6a39a232],bh
  41f79f:	jns    0x41f7ad
  41f7a1:	sbb    DWORD PTR [edx],eax
  41f7a3:	loope  0x41f74f
  41f7a5:	das    
  41f7a6:	mov    WORD PTR [esi+0x5ef7600],ds
  41f7ac:	pop    ecx
  41f7ad:	pop    eax
  41f7ae:	call   0x71fa7fb9
  41f7b3:	cld    
  41f7b4:	and    BYTE PTR [ebx+0x71],dh
  41f7b7:	xchg   ecx,eax
  41f7b8:	mov    dl,0x6
  41f7ba:	(bad)  
  41f7bb:	cmc    
  41f7bc:	(bad)  
  41f7bd:	lea    ecx,[edx+0x1454bd9d]
  41f7c3:	push   eax
  41f7c4:	iret   
  41f7c5:	dec    ebx
  41f7c6:	ds pop es
  41f7c8:	inc    ebx
  41f7c9:	ret    
  41f7ca:	add    BYTE PTR [edi+0x79],dl
  41f7cd:	xlat   BYTE PTR ds:[ebx]
  41f7ce:	sti    
  41f7cf:	(bad)  
  41f7d0:	repz rcr BYTE PTR ds:0x97dae049,1
  41f7d7:	sbb    DWORD PTR [esi],ebx
  41f7d9:	and    BYTE PTR [ebx-0x7a],dh
  41f7dc:	(bad)  
  41f7de:	sar    DWORD PTR es:[edi-0xe04aec0],0xe
  41f7e6:	les    esi,FWORD PTR [edx+ebp*1-0x69cf9e7]
  41f7ed:	inc    esi
  41f7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ef:	mov    al,BYTE PTR [ecx+0x5ee3f04a]
  41f7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7f6:	mov    al,0x80
  41f7f8:	sub    bh,BYTE PTR [eax+edi*4-0x16c03bb1]
  41f7ff:	cmp    BYTE PTR [edx],0xd2
  41f802:	or     DWORD PTR ds:0x80d0236f,0xffffffbf
  41f809:	adc    eax,0xf5f4b8e7
  41f80e:	xor    eax,0x1ae320d
  41f813:	sti    
  41f814:	dec    eax
  41f815:	stos   DWORD PTR es:[edi],eax
  41f816:	mov    dl,0x1d
  41f818:	cmp    DWORD PTR [ecx],0x80b1cdab
  41f81e:	xchg   edi,eax
  41f81f:	mov    cl,0x38
  41f821:	dec    ecx
  41f822:	lods   eax,DWORD PTR ds:[esi]
  41f823:	sub    edx,DWORD PTR [edi]
  41f825:	inc    esi
  41f826:	dec    edx
  41f827:	aas    
  41f828:	mov    ch,0xdc
  41f82a:	sub    cl,cl
  41f82c:	out    0x90,al
  41f82e:	sbb    dh,BYTE PTR [ebx]
  41f830:	aam    0x76
  41f832:	out    dx,eax
  41f833:	js     0x41f89a
  41f835:	sbb    eax,0x9d1aa16c
  41f83a:	push   0xb6cafe73
  41f83f:	xchg   ebp,eax
  41f840:	cmp    DWORD PTR ds:0x9a6002eb,ebp
  41f846:	clc    
  41f847:	xchg   BYTE PTR [ecx+0x55],bh
  41f84a:	ret    
  41f84b:	ret    0x56f0
  41f84e:	xchg   ecx,eax
  41f84f:	ret    
  41f850:	sub    BYTE PTR [ecx+ebp*1],0x1
  41f854:	inc    edi
  41f855:	and    bl,bl
  41f857:	xchg   ebx,eax
  41f858:	call   0xd2b9:0xaca921d3
  41f85f:	in     eax,dx
  41f860:	push   edx
  41f861:	mov    edx,0xfd0b980b
  41f866:	push   0x7f2c3227
  41f86b:	retf   0x831c
  41f86e:	cmp    DWORD PTR [edx+0x74e3f657],ecx
  41f874:	xlat   BYTE PTR ds:[ebx]
  41f875:	or     al,0x4c
  41f878:	and    eax,0x599143b2
  41f87d:	data16 lods al,BYTE PTR ds:[esi]
  41f87f:	inc    esi
  41f880:	pop    ax
  41f882:	dec    ecx
  41f883:	or     DWORD PTR [esi],eax
  41f885:	into   
  41f886:	fisubr WORD PTR [ecx+0x5fb6c016]
  41f88c:	cmp    BYTE PTR [ecx+0x38],dl
  41f88f:	xchg   esi,eax
  41f890:	outs   dx,DWORD PTR ds:[esi]
  41f891:	retf   0x2197
  41f894:	and    ah,BYTE PTR [ebp+0x44fa6b54]
  41f89a:	add    eax,0x91857794
  41f89f:	in     al,dx
  41f8a0:	add    al,0x52
  41f8a2:	add    bh,BYTE PTR [edx+eax*1]
  41f8a5:	mov    al,0x3c
  41f8a7:	out    0xce,eax
  41f8a9:	clc    
  41f8aa:	sub    eax,0xc24aa235
  41f8af:	cmp    DWORD PTR [esp+edi*2-0xfdda1f1],eax
  41f8b6:	pop    esp
  41f8b7:	cld    
  41f8b8:	and    ch,BYTE PTR [edx]
  41f8ba:	cmp    BYTE PTR ds:0x5dc99782,al
  41f8c0:	inc    ebp
  41f8c1:	in     eax,0x3d
  41f8c3:	scas   al,BYTE PTR es:[edi]
  41f8c4:	je     0x41f935
  41f8c6:	popa   
  41f8c7:	jae    0x41f8e2
  41f8c9:	push   esi
  41f8ca:	fwait
  41f8cb:	pop    ebp
  41f8cc:	mov    al,0xb
  41f8ce:	call   0xa84cbfe5
  41f8d3:	retf   0xc011
  41f8d6:	cs out dx,eax
  41f8d8:	xor    BYTE PTR [edi],ch
  41f8da:	xchg   ebx,eax
  41f8db:	sbb    BYTE PTR [ecx+0xefd4e07],cl
  41f8e1:	xchg   edx,eax
  41f8e2:	add    esi,DWORD PTR [eax-0x67fdbe09]
  41f8e8:	je     0x41f87d
  41f8ea:	les    esi,FWORD PTR [ecx-0x1f]
  41f8ed:	sbb    al,0xf
  41f8ef:	(bad)  
  41f8f0:	ins    BYTE PTR es:[edi],dx
  41f8f1:	dec    edx
  41f8f2:	mov    dh,0xe6
  41f8f4:	pop    es
  41f8f5:	add    DWORD PTR [ecx+0x53],ebp
  41f8f8:	inc    edx
  41f8f9:	or     al,0xd5
  41f8fb:	mov    edx,0xe5589120
  41f900:	jge    0x41f8c4
  41f902:	push   ds
  41f903:	rcl    dh,1
  41f905:	pop    eax
  41f906:	cwde   
  41f907:	fwait
  41f908:	and    ebp,DWORD PTR [ebp-0x5cc57f3e]
  41f90e:	loopne 0x41f975
  41f910:	sbb    DWORD PTR [ecx],esp
  41f912:	jae    0x41f985
  41f914:	clc    
  41f915:	arpl   WORD PTR [eax-0x316bdaf5],sp
  41f91b:	push   ds
  41f91c:	push   ebx
  41f91d:	loope  0x41f950
  41f91f:	sbb    bl,BYTE PTR [edx+esi*8-0x345877cf]
  41f926:	sub    al,0x9d
  41f929:	and    DWORD PTR [ecx+0x7b],0x7b3d3e2
  41f930:	pop    ds
  41f931:	cli    
  41f932:	mov    eax,0xcd5ec7d
  41f937:	dec    ecx
  41f938:	popa   
  41f939:	dec    eax
  41f93a:	xor    BYTE PTR [esi-0x53],al
  41f93d:	mov    bh,0x0
  41f93f:	arpl   WORD PTR [ebx+0x60d25677],bx
  41f945:	loope  0x41f949
  41f947:	int3   
  41f948:	sbb    DWORD PTR [ecx+ecx*2-0xf],edx
  41f94c:	jge    0x41f93e
  41f94e:	popa   
  41f94f:	pop    ds
  41f950:	xlat   BYTE PTR ds:[ebx]
  41f951:	popa   
  41f952:	jp     0x41f945
  41f954:	fst    DWORD PTR [ebx]
  41f956:	inc    ecx
  41f957:	jecxz  0x41f93f
  41f959:	out    dx,al
  41f95a:	sub    dl,BYTE PTR [ebx+0x62]
  41f95d:	mov    dh,0xf8
  41f95f:	lods   al,BYTE PTR ds:[esi]
  41f960:	mov    ds:0xdfc02362,al
  41f965:	(bad)  
  41f966:	cdq    
  41f967:	sub    eax,0x614c8b04
  41f96c:	ins    DWORD PTR es:[edi],dx
  41f96d:	dec    edi
  41f96e:	in     eax,0xe0
  41f970:	cmc    
  41f971:	mov    edi,0xdcec9973
  41f976:	mov    ebp,0x9cc61539
  41f97b:	stc    
  41f97c:	ret    0x4e0f
  41f97f:	(bad)
  41f983:	xlat   BYTE PTR ds:[ebx]
  41f984:	mov    edx,0xa68ff34f
  41f989:	lock jp 0x41f98f
  41f98c:	lea    eax,[ebx+0x8ca8024]
  41f992:	cmp    DWORD PTR [esi+esi*1+0x72165519],ecx
  41f999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f99a:	scas   eax,DWORD PTR es:[edi]
  41f99b:	xchg   esp,eax
  41f99c:	das    
  41f99d:	mov    BYTE PTR [eax],ah
  41f99f:	in     eax,0xb4
  41f9a1:	jg     0x41f97a
  41f9a3:	fwait
  41f9a4:	mov    bl,0x60
  41f9a6:	push   ecx
  41f9a7:	adc    ebp,DWORD PTR [ebx+edx*8]
  41f9aa:	sub    DWORD PTR [eax],ecx
  41f9ac:	push   eax
  41f9ad:	inc    edi
  41f9ae:	mov    ah,0x26
  41f9b0:	xor    DWORD PTR [ebx+0x3af0fba6],ebx
  41f9b6:	test   DWORD PTR [ebx+0x23fcc92d],0xc9605883
  41f9c0:	(bad)  
  41f9c1:	lea    ecx,[ecx+0x69]
  41f9c4:	xchg   BYTE PTR [edi],ch
  41f9c6:	mov    ecx,0xc8fd55a6
  41f9cb:	mov    es,WORD PTR [ecx+0xa9a8e58]
  41f9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d2:	push   esi
  41f9d3:	xor    ebp,ecx
  41f9d5:	ror    BYTE PTR [edi+0x1d],1
  41f9d8:	ret    
  41f9d9:	rcl    BYTE PTR [esi-0x1f51c787],cl
  41f9df:	retf   0xd3dd
  41f9e2:	mov    DWORD PTR [eax],esp
  41f9e4:	inc    eax
  41f9e5:	jmp    0x5014:0xb34bdf45
  41f9ec:	fild   DWORD PTR [edi]
  41f9ee:	jg     0x41f9b5
  41f9f0:	and    DWORD PTR [ebx+ebp*4+0x2],ebx
  41f9f4:	sahf   
  41f9f5:	dec    esi
  41f9f6:	in     al,dx
  41f9f7:	sbb    bh,BYTE PTR [esp+ebp*1]
  41f9fa:	add    al,0x87
  41f9fc:	fmul   QWORD PTR [edx-0x4a2e2acf]
  41fa02:	test   al,0x9e
  41fa05:	xchg   esp,edx
  41fa07:	adc    eax,0x38a04ae2
  41fa0c:	xchg   BYTE PTR [eax-0x690234f8],ah
  41fa12:	lods   al,BYTE PTR ds:[esi]
  41fa13:	mov    eax,ds:0x6541ede4
  41fa18:	mov    WORD PTR ds:[ebx+0x1d],ds
  41fa1c:	aas    
  41fa1d:	mov    dh,0xe5
  41fa1f:	loope  0x41fa43
  41fa21:	ins    BYTE PTR es:[edi],dx
  41fa22:	call   0x5072d3e5
  41fa27:	push   ebp
  41fa28:	rol    esi,0xc2
  41fa2b:	ds mov cl,bh
  41fa2e:	mov    ecx,0x310b20ad
  41fa33:	addr16 popf 
  41fa35:	adc    cl,BYTE PTR [ecx+0x3e165bf8]
  41fa3b:	int3   
  41fa3c:	add    DWORD PTR [ebp-0x6c08b6c3],esp
  41fa42:	push   edi
  41fa43:	mov    dh,BYTE PTR [edi+esi*4]
  41fa46:	mov    al,ds:0xb0054c85
  41fa4b:	stos   BYTE PTR es:[edi],al
  41fa4c:	dec    eax
  41fa4d:	mov    ebx,0xa779e7f4
  41fa53:	push   es
  41fa54:	in     eax,dx
  41fa55:	mov    ds:0xde056af,eax
  41fa5a:	mov    esp,cr6
  41fa5d:	ror    BYTE PTR ds:0xe1643fc5,0x34
  41fa64:	das    
  41fa65:	jns    0x41fab8
  41fa67:	sti    
  41fa68:	shl    dl,1
  41fa6a:	adc    edx,edi
  41fa6c:	mov    ecx,0xf98f988b
  41fa71:	aad    0x27
  41fa73:	test   DWORD PTR [eax],esp
  41fa75:	outs   dx,BYTE PTR ds:[esi]
  41fa76:	(bad)  
  41fa77:	pop    eax
  41fa78:	adc    BYTE PTR [ebx],al
  41fa7a:	push   edx
  41fa7b:	outs   dx,BYTE PTR ds:[esi]
  41fa7c:	sbb    al,0xbb
  41fa7e:	rol    ebp,0xb4
  41fa81:	int    0x46
  41fa83:	push   edi
  41fa84:	clc    
  41fa85:	add    ch,BYTE PTR [ebx+0x43e7f804]
  41fa8b:	dec    esi
  41fa8c:	or     al,0xfa
  41fa8e:	call   0xc0fa:0x6f247fe0
  41fa95:	xchg   ecx,eax
  41fa96:	jmp    0x7205c940
  41fa9b:	in     al,0xd4
  41fa9d:	mov    edi,0x6f4e7010
  41faa2:	xor    al,0xf6
  41faa4:	push   ss
  41faa5:	les    eax,FWORD PTR [ecx]
  41faa7:	lahf   
  41faa8:	jmp    0xe361:0x32559649
  41faaf:	hlt    
  41fab0:	xlat   BYTE PTR ds:[ebx]
  41fab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fab2:	aaa    
  41fab3:	and    edi,DWORD PTR [edi+0x52d8893]
  41fab9:	and    DWORD PTR [edx+0x57],ecx
  41fabc:	push   0xfffffff9
  41fabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fabf:	std    
  41fac0:	jb     0x41fac9
  41fac2:	dec    ebp
  41fac3:	and    eax,0x3480e8ae
  41fac8:	push   cs
  41fac9:	loope  0x41fad0
  41facb:	sbb    eax,0xf6074043
  41fad0:	add    eax,0x77e69af2
  41fad5:	or     al,0xfd
  41fad7:	or     dh,BYTE PTR [ecx]
  41fad9:	stc    
  41fada:	aam    0x37
  41fadc:	fmul   st(7),st
  41fade:	xlat   BYTE PTR ds:[ebx]
  41fadf:	outs   dx,BYTE PTR ds:[esi]
  41fae0:	cmc    
  41fae1:	pop    edi
  41fae2:	sbb    edi,DWORD PTR [ecx+ebp*1+0x34]
  41fae6:	dec    ebx
  41fae7:	mov    ebx,0xb9923915
  41faec:	add    eax,0xb7b142ef
  41faf1:	ins    DWORD PTR es:[edi],dx
  41faf2:	stos   BYTE PTR es:[edi],al
  41faf3:	sub    al,0x27
  41faf5:	lods   eax,DWORD PTR ds:[esi]
  41faf6:	inc    ebp
  41faf7:	cmp    eax,0x914165d3
  41fafc:	and    BYTE PTR [ebx-0x6ae57c32],dh
  41fb02:	repnz inc ebx
  41fb04:	dec    esp
  41fb05:	pop    esi
  41fb06:	jmp    0x41faa8
  41fb08:	call   0xd5c66a2d
  41fb0d:	pop    edi
  41fb0e:	hlt    
  41fb0f:	leave  
  41fb10:	int3   
  41fb11:	test   al,0x34
  41fb13:	jns    0x41fb49
  41fb15:	retf   0xbff6
  41fb18:	mov    ah,0x12
  41fb1a:	rcr    DWORD PTR [esi-0x44bd4119],cl
  41fb20:	cmp    ch,BYTE PTR [edi+ecx*1-0x7d31a24d]
  41fb27:	and    ah,BYTE PTR [esi+0x4dd0cbea]
  41fb2d:	add    BYTE PTR [ebx+0x67c4ed6d],bh
  41fb33:	mov    bh,0xc9
  41fb35:	jle    0x41fbb5
  41fb37:	lock sbb al,0x4e
  41fb3a:	mov    DWORD PTR [edx-0x78],ebx
  41fb3d:	jge    0x41fac4
  41fb3f:	mov    ds:0xa8d2d03a,al
  41fb44:	adc    eax,0x716ce32c
  41fb49:	jmp    0x41fb8d
  41fb4b:	fcom   DWORD PTR [ebx]
  41fb4d:	fsubr  QWORD PTR [esi*8+0x45a0b1e8]
  41fb54:	adc    eax,0xde1c8620
  41fb59:	xchg   DWORD PTR [ecx+0x69],esi
  41fb5c:	call   0x3160:0xb636b5f0
  41fb63:	jmp    0xc7d908b0
  41fb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb69:	in     al,0x94
  41fb6b:	out    0xf5,eax
  41fb6d:	and    DWORD PTR [ecx+0x6f],0xfffffff9
  41fb71:	jg     0x41fbcf
  41fb73:	loop   0x41fb3c
  41fb75:	sbb    DWORD PTR [edx+0x6d],ebx
  41fb78:	xor    BYTE PTR [eax-0x76],ah
  41fb7b:	xor    eax,0xec8c0db4
  41fb80:	dec    eax
  41fb81:	mov    al,ds:0x3601477b
  41fb86:	pusha  
  41fb87:	push   ebx
  41fb88:	inc    eax
  41fb89:	mov    ds:0x3524bd44,eax
  41fb8e:	in     eax,dx
  41fb8f:	jle    0x41fb61
  41fb91:	sub    eax,0xe27ae9b7
  41fb96:	pop    edi
  41fb97:	jle    0x41fb4d
  41fb99:	sbb    ch,BYTE PTR [eax-0x5d]
  41fb9c:	xchg   BYTE PTR [ecx+eax*4-0x54b026ca],bl
  41fba3:	es jae 0x41fb76
  41fba6:	sbb    al,0x42
  41fba8:	push   es
  41fba9:	push   ebp
  41fbaa:	cmp    eax,0xe2e00e28
  41fbaf:	ret    0x823f
  41fbb2:	adc    dl,BYTE PTR [esi+0x77]
  41fbb5:	mov    esi,DWORD PTR [edi+0x4e]
  41fbb8:	sub    BYTE PTR [edi-0x62],dh
  41fbbb:	ins    BYTE PTR es:[edi],dx
  41fbbc:	and    BYTE PTR [eax+0x7a],bl
  41fbbf:	push   es
  41fbc0:	or     BYTE PTR [ebx],bl
  41fbc2:	sbb    eax,0xc9a3bf4d
  41fbc7:	jbe    0x41fb81
  41fbc9:	sar    ch,cl
  41fbcb:	pop    edx
  41fbcc:	lds    ebx,FWORD PTR [eax-0x1ecf91fe]
  41fbd2:	stos   DWORD PTR es:[edi],eax
  41fbd3:	(bad)  
  41fbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbd5:	(bad)  
  41fbd6:	xlat   BYTE PTR ds:[ebx]
  41fbd7:	push   esi
  41fbd8:	sbb    ebp,ebx
  41fbda:	daa    
  41fbdb:	daa    
  41fbdc:	lock (bad) [ebp+0x70]
  41fbe0:	icebp  
  41fbe1:	mov    bl,0x8a
  41fbe3:	lods   eax,DWORD PTR ds:[esi]
  41fbe4:	arpl   WORD PTR [esi+0x6459c10e],si
  41fbea:	cmc    
  41fbeb:	xor    cl,0x21
  41fbee:	test   BYTE PTR [ebx+0x1ec9471f],bh
  41fbf4:	inc    ebx
  41fbf5:	(bad)  
  41fbf6:	imul   eax,DWORD PTR [ecx-0x545e24a5],0xffffffa7
  41fbfd:	das    
  41fbfe:	and    al,0xd5
  41fc00:	jmp    0xd7c8:0x741b215a
  41fc07:	mov    cl,0x10
  41fc09:	pop    es
  41fc0a:	dec    edi
  41fc0b:	sbb    al,0xeb
  41fc0d:	sbb    eax,0x796527ba
  41fc12:	test   al,0x9c
  41fc14:	mov    edi,0x751eb260
  41fc19:	dec    ebp
  41fc1a:	cdq    
  41fc1b:	int3   
  41fc1c:	stos   DWORD PTR es:[edi],eax
  41fc1d:	seto   BYTE PTR ss:[ecx]
  41fc21:	nop
  41fc22:	push   eax
  41fc23:	sbb    dl,BYTE PTR [edi+0x5bf46eac]
  41fc29:	mov    dl,0x1a
  41fc2b:	(bad)
  41fc2f:	xchg   esp,eax
  41fc30:	fs dec ebp
  41fc32:	push   esi
  41fc33:	or     al,0xa6
  41fc35:	aam    0x58
  41fc37:	in     al,dx
  41fc38:	inc    ebx
  41fc39:	adc    DWORD PTR [eax],ecx
  41fc3b:	shl    esp,1
  41fc3d:	sbb    BYTE PTR [esi+0x4c771cc8],ch
  41fc43:	ror    DWORD PTR [ecx],cl
  41fc45:	loope  0x41fc79
  41fc47:	jae    0x41fc00
  41fc49:	sub    edx,DWORD PTR [ecx-0x5e0ce1f4]
  41fc4f:	gs dec ebp
  41fc51:	imul   ebp,ebp,0x6e
  41fc54:	jbe    0x41fc21
  41fc56:	arpl   WORD PTR ds:0x5a090fa2,bx
  41fc5c:	mov    DWORD PTR [edi],0xf94377b5
  41fc62:	scas   al,BYTE PTR es:[edi]
  41fc63:	and    ecx,DWORD PTR [edx]
  41fc65:	push   es
  41fc66:	shl    BYTE PTR [esi+0x58],1
  41fc69:	ret    0x28e
  41fc6c:	hlt    
  41fc6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc6e:	in     al,dx
  41fc6f:	push   0xd934a8e3
  41fc74:	dec    ebp
  41fc75:	test   BYTE PTR [ebx-0x80],0xd5
  41fc79:	adc    DWORD PTR [ecx+0x38],edi
  41fc7c:	mov    dh,BYTE PTR [edi-0x490ec54c]
  41fc82:	pinsrw mm2,WORD PTR [edx-0x3fac9834],0xaa
  41fc8a:	and    DWORD PTR [eax-0x10da220d],esi
  41fc90:	push   edi
  41fc91:	aad    0x37
  41fc93:	xchg   edx,eax
  41fc94:	push   ds
  41fc95:	jbe    0x41fc69
  41fc97:	add    al,0x14
  41fc99:	and    al,0xa5
  41fc9b:	dec    esp
  41fc9c:	add    al,bh
  41fc9e:	jp     0x41fc4e
  41fca0:	push   ecx
  41fca1:	jg     0x41fcd4
  41fca3:	sbb    BYTE PTR [edx+0x7d],0x1a
  41fca7:	pusha  
  41fca8:	rcr    BYTE PTR [esi],0x7a
  41fcab:	xor    BYTE PTR [eax],dh
  41fcad:	mov    ah,BYTE PTR [eax+0x3b]
  41fcb0:	repz jo 0x41fc3b
  41fcb3:	pop    es
  41fcb4:	shr    eax,cl
  41fcb6:	sbb    DWORD PTR [esi],edx
  41fcb8:	adc    eax,0xe3e5ca32
  41fcbd:	repnz adc eax,0x3e6ce0a8
  41fcc3:	faddp  st(7),st
  41fcc5:	sbb    dl,BYTE PTR [ebp+0x34]
  41fcc8:	in     al,0xaa
  41fcca:	sub    ebp,ebp
  41fccc:	ins    DWORD PTR es:[edi],dx
  41fccd:	xchg   esp,eax
  41fcce:	mov    BYTE PTR [edx],dl
  41fcd0:	jne    0x41fc95
  41fcd2:	cmp    bh,dl
  41fcd4:	lds    edx,FWORD PTR [esi-0x44345210]
  41fcda:	push   eax
  41fcdb:	enter  0x14c6,0x57
  41fcdf:	mov    esi,esp
  41fce1:	scas   al,BYTE PTR es:[edi]
  41fce2:	in     al,dx
  41fce3:	ins    DWORD PTR es:[edi],dx
  41fce4:	loopne 0x41fc93
  41fce6:	push   esp
  41fce7:	sbb    cl,BYTE PTR [esp+ebp*4-0x54]
  41fceb:	int    0x84
  41fced:	fwait
  41fcee:	pop    es
  41fcef:	inc    edi
  41fcf0:	das    
  41fcf1:	stc    
  41fcf2:	ror    DWORD PTR [ecx],0x53
  41fcf5:	add    ecx,DWORD PTR [esi-0x2cd0ed12]
  41fcfb:	sub    ch,ch
  41fcfd:	int3   
  41fcfe:	cwde   
  41fcff:	xchg   ebx,eax
  41fd00:	popa   
  41fd01:	sbb    al,0x90
  41fd03:	jmp    0xa29d:0x52c607de
  41fd0a:	aas    
  41fd0b:	loop   0x41fd78
  41fd0d:	ret    
  41fd0e:	daa    
  41fd0f:	rcl    edx,0x17
  41fd12:	mov    edi,0xac083bdd
  41fd17:	pop    es
  41fd18:	popa   
  41fd19:	sub    ebp,edx
  41fd1b:	jnp    0x41fd54
  41fd1d:	push   ecx
  41fd1e:	adc    al,0x0
  41fd20:	out    0x96,eax
  41fd22:	pop    es
  41fd23:	sar    DWORD PTR [ebx+eiz*2+0x76],0xa7
  41fd28:	cmp    eax,DWORD PTR [ebp+0x2c]
  41fd2b:	scas   eax,DWORD PTR es:[edi]
  41fd2c:	inc    edi
  41fd2d:	pop    esp
  41fd2e:	mov    esi,0xeaf1a1dc
  41fd33:	int    0x47
  41fd35:	push   esp
  41fd36:	ins    BYTE PTR es:[edi],dx
  41fd37:	xchg   ebp,eax
  41fd38:	jmp    0x41fd5a
  41fd3a:	cli    
  41fd3b:	jp     0x41fd45
  41fd3d:	mov    ah,0xc7
  41fd3f:	jmp    0xcc8a:0x2b049ea7
  41fd46:	inc    edi
  41fd47:	dec    edi
  41fd48:	lods   al,BYTE PTR ss:[esi]
  41fd4a:	add    BYTE PTR [edi],dh
  41fd4c:	and    ah,bl
  41fd4e:	(bad)  
  41fd4f:	dec    edx
  41fd50:	int3   
  41fd51:	cmp    esp,esi
  41fd53:	or     esp,DWORD PTR gs:[ebx-0x3b]
  41fd57:	(bad)  
  41fd58:	dec    ebp
  41fd59:	jo     0x41fcf5
  41fd5b:	sbb    eax,0xd552a442
  41fd60:	push   esp
  41fd61:	adc    al,0x1d
  41fd63:	sub    eax,0xc818d2a3
  41fd68:	push   cs
  41fd69:	jle    0x41fd46
  41fd6b:	jmp    0x9efaf01a
  41fd70:	xchg   edi,eax
  41fd71:	push   eax
  41fd72:	add    BYTE PTR [esi+0x1a],cl
  41fd75:	jae    0x41fdc2
  41fd77:	call   0x6cd8f35a
  41fd7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd7d:	loope  0x41fd0e
  41fd7f:	leave  
  41fd80:	aaa    
  41fd81:	cld    
  41fd82:	adc    BYTE PTR [edi],ch
  41fd84:	add    al,0x91
  41fd86:	push   esp
  41fd87:	or     dl,ch
  41fd89:	scas   al,BYTE PTR es:[edi]
  41fd8a:	sub    edi,DWORD PTR [edx-0x1b]
  41fd8d:	add    ch,BYTE PTR ds:0x7afbf0f2
  41fd93:	mov    bh,0x31
  41fd96:	add    ebx,edi
  41fd98:	adc    bl,BYTE PTR [edx-0x30df5f00]
  41fd9e:	or     esi,DWORD PTR [ebp+0x76b02810]
  41fda4:	xor    al,dl
  41fda6:	arpl   WORD PTR [edi+0x56],si
  41fda9:	and    ah,al
  41fdab:	mov    ebp,0xa26c58d3
  41fdb0:	add    DWORD PTR [edi],edi
  41fdb2:	xor    BYTE PTR [ebx],ch
  41fdb4:	inc    ebx
  41fdb5:	das    
  41fdb6:	mov    al,ds:0xf3d948da
  41fdbb:	add    ebp,DWORD PTR [ecx]
  41fdbd:	and    bl,BYTE PTR [esi-0xf]
  41fdc0:	mov    ah,0xa2
  41fdc2:	scas   al,BYTE PTR es:[edi]
  41fdc3:	clc    
  41fdc4:	cld    
  41fdc5:	mov    ah,0xcc
  41fdc7:	(bad)  [esp+esi*4-0x2d]
  41fdcb:	xchg   esp,eax
  41fdcc:	fcom   DWORD PTR cs:[ebx-0x42]
  41fdd0:	ret    
  41fdd1:	jp     0x41fe15
  41fdd3:	xchg   esi,edx
  41fdd5:	pop    es
  41fdd6:	int3   
  41fdd7:	jle    0x41fe3e
  41fdd9:	mov    al,0x9d
  41fddb:	or     BYTE PTR [esi+edx*8-0x6c],bh
  41fddf:	or     esp,DWORD PTR [esp+ecx*4]
  41fde2:	sub    eax,DWORD PTR [edx-0x777ecb44]
  41fde8:	cmp    edx,DWORD PTR [edi+0xc7e0551]
  41fdee:	(bad)  
  41fdef:	pop    edi
  41fdf0:	ror    DWORD PTR [ebx*2+0x22aca0b8],cl
  41fdf7:	js     0x41fdeb
  41fdf9:	bound  esi,QWORD PTR [edx+0x613e4e55]
  41fdff:	mov    dl,0x7c
  41fe01:	push   ebx
  41fe02:	mov    al,0x73
  41fe04:	and    ah,BYTE PTR [ecx]
  41fe06:	cmp    BYTE PTR ds:[ecx+0x2648fa93],bl
  41fe0d:	outs   dx,DWORD PTR ds:[esi]
  41fe0e:	mov    edx,0xb5b2a83
  41fe13:	add    DWORD PTR [ebx+0x49ad85c],esp
  41fe19:	or     DWORD PTR [eax],0x7a
  41fe1c:	mov    eax,ds:0x928975df
  41fe21:	mov    al,ds:0xf2abb85b
  41fe26:	adc    DWORD PTR ds:0xe3972403,ecx
  41fe2c:	iret   
  41fe2d:	mov    dl,0xb0
  41fe2f:	aaa    
  41fe30:	dec    ebx
  41fe31:	inc    ecx
  41fe32:	mov    esp,0x65817275
  41fe37:	xchg   ecx,eax
  41fe38:	xchg   esi,eax
  41fe39:	lahf   
  41fe3a:	(bad)  
  41fe3b:	sub    BYTE PTR [ecx-0x23],0x3a
  41fe3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe40:	pop    es
  41fe41:	dec    esi
  41fe42:	push   esi
  41fe43:	adc    al,0xb8
  41fe45:	mov    al,0x76
  41fe47:	xor    al,0x99
  41fe49:	stc    
  41fe4a:	fwait
  41fe4b:	adc    al,0xcd
  41fe4d:	std    
  41fe4e:	push   ds
  41fe4f:	imul   edx,DWORD PTR [ebp+0x25],0xffffffb7
  41fe53:	pop    esp
  41fe54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe55:	xchg   ebx,eax
  41fe56:	dec    ecx
  41fe57:	cmp    BYTE PTR [ebx+esi*2-0x10fe30cf],al
  41fe5e:	clc    
  41fe5f:	add    dh,BYTE PTR [esp+eax*2]
  41fe62:	loopne 0x41fe34
  41fe64:	mov    ecx,0xd3643fa0
  41fe69:	cwde   
  41fe6a:	mov    ah,0x0
  41fe6c:	sub    al,0x21
  41fe6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe6f:	jo     0x41fe67
  41fe71:	xchg   ebp,eax
  41fe72:	aad    0x55
  41fe74:	push   edx
  41fe75:	mov    eax,ds:0x765d8de
  41fe7a:	fild   WORD PTR [eax+ebp*8-0x9e42459]
  41fe81:	hlt    
  41fe82:	mov    edx,0x2c27dff4
  41fe87:	(bad)  
  41fe88:	dec    ecx
  41fe89:	adc    BYTE PTR [ebp+0x79],bl
  41fe8c:	(bad)  
  41fe8d:	jo     0x41fe4a
  41fe8f:	div    ecx
  41fe91:	fdivrp st(1),st
  41fe93:	not    al
  41fe95:	jmp    0xca178c77
  41fe9a:	xor    BYTE PTR [edx],bh
  41fe9c:	mov    dh,bl
  41fe9e:	(bad)  
  41fe9f:	mov    BYTE PTR [edi-0x72],cl
  41fea2:	mov    esi,0x52c9311c
  41fea7:	in     eax,dx
  41fea8:	imul   ebx,DWORD PTR [ebx+ebp*8]
  41feac:	pop    esp
  41fead:	push   ss
  41feae:	rol    cl,1
  41feb0:	cdq    
  41feb1:	enter  0x6769,0x13
  41feb5:	xchg   BYTE PTR [ebx+0x11],al
  41feb8:	arpl   WORD PTR [eax+0x27],dx
  41febb:	mov    DWORD PTR [ecx],0xee62ca87
  41fec1:	lea    ebx,[esi-0x2a4195c8]
  41fec7:	mov    ds:0x172d149,eax
  41fecc:	cmp    al,0x92
  41fece:	or     eax,0x659bb0b1
  41fed3:	ret    
  41fed4:	in     al,dx
  41fed5:	es mov edx,0x76a9d617
  41fedb:	add    DWORD PTR [ebp-0x789ad428],0x14
  41fee2:	mul    dh
  41fee4:	test   DWORD PTR [eax],edx
  41fee6:	fidivr WORD PTR ds:0xf05814be
  41feec:	ror    BYTE PTR [edx],0x43
  41feef:	xor    eax,DWORD PTR [ebx-0x21]
  41fef2:	es inc edi
  41fef4:	dec    ebx
  41fef5:	or     bh,BYTE PTR [esi]
  41fef7:	inc    eax
  41fef8:	xchg   edx,eax
  41fef9:	ins    BYTE PTR es:[edi],dx
  41fefa:	dec    edx
  41fefb:	cmp    esp,ecx
  41fefd:	push   esi
  41fefe:	push   esp
  41feff:	mov    dl,0x84
  41ff01:	sub    al,0x75
  41ff03:	push   esi
  41ff04:	xor    al,0xd4
  41ff06:	mov    WORD PTR [eax+0x3],gs
  41ff09:	enter  0xe459,0x4f
  41ff0d:	xlat   BYTE PTR ds:[ebx]
  41ff0e:	je     0x41feb1
  41ff10:	adc    BYTE PTR [eax-0x62d1c1ef],0xb4
  41ff17:	sbb    BYTE PTR [edi-0x3258c1cc],dh
  41ff1d:	dec    eax
  41ff1e:	add    eax,0x62148918
  41ff23:	ds push ebx
  41ff25:	lock pop edx
  41ff27:	sar    DWORD PTR [edi-0x8cf80fb],1
  41ff2d:	pop    edx
  41ff2e:	sub    bl,ah
  41ff30:	push   edi
  41ff31:	std    
  41ff32:	(bad)  
  41ff33:	mov    ebp,0x33bd3fe5
  41ff38:	push   es
  41ff39:	mov    cl,0x21
  41ff3b:	ja     0x41ff7c
  41ff3d:	out    0xe7,al
  41ff3f:	mov    cl,0x78
  41ff41:	add    DWORD PTR [esi],esi
  41ff43:	push   ds
  41ff44:	jecxz  0x41ff41
  41ff46:	mov    dl,BYTE PTR [ebx]
  41ff48:	lea    esi,[esi]
  41ff4a:	xchg   ecx,eax
  41ff4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff4c:	xor    eax,0xc71d589f
  41ff51:	xor    DWORD PTR [edx+0x2a],eax
  41ff54:	lea    edi,[ebp-0x57043e8c]
  41ff5a:	pusha  
  41ff5b:	mov    ebx,0x8ab18ed4
  41ff60:	mov    eax,0xbf56300e
  41ff65:	aaa    
  41ff66:	clc    
  41ff67:	sti    
  41ff68:	fnstenv [ecx-0x26]
  41ff6b:	in     eax,dx
  41ff6c:	cdq    
  41ff6d:	mov    ebx,0xce2389b0
  41ff72:	add    ah,BYTE PTR [edi-0x18]
  41ff75:	push   0xffffffc9
  41ff77:	enter  0x6b5f,0xd3
  41ff7b:	add    ah,BYTE PTR [edx+0x76e0e73d]
  41ff81:	mov    al,0x66
  41ff83:	mov    BYTE PTR [esi],cl
  41ff85:	aam    0x67
  41ff87:	hlt    
  41ff88:	xchg   ebx,eax
  41ff89:	outs   dx,BYTE PTR ds:[esi]
  41ff8a:	shl    al,1
  41ff8c:	repz sub eax,0xc9e861cd
  41ff92:	xchg   DWORD PTR [eax-0x2],edx
  41ff95:	mov    ds:0x5b2711f,eax
  41ff9a:	adc    ecx,DWORD PTR [edx-0x69]
  41ff9d:	jno    0x41ffb0
  41ff9f:	sar    DWORD PTR [eax-0x7b],1
  41ffa2:	xchg   edi,eax
  41ffa3:	daa    
  41ffa4:	icebp  
  41ffa5:	ror    cl,1
  41ffa7:	and    ecx,DWORD PTR [ecx-0x1e]
  41ffaa:	in     al,0xc7
  41ffac:	fcmovnu st,st(4)
  41ffae:	out    0x21,al
  41ffb0:	push   es
  41ffb1:	sahf   
  41ffb2:	push   esi
  41ffb3:	dec    edi
  41ffb4:	xchg   ah,dh
  41ffb6:	inc    esp
  41ffb7:	push   edx
  41ffb8:	ins    BYTE PTR es:[edi],dx
  41ffb9:	or     edi,ebx
  41ffbb:	fwait
  41ffbc:	add    al,0xfa
  41ffbe:	or     al,0x70
  41ffc0:	outs   dx,BYTE PTR ds:[esi]
  41ffc1:	lahf   
  41ffc2:	cdq    
  41ffc3:	lea    edx,[ecx+ebp*4]
  41ffc6:	xchg   esi,eax
  41ffc7:	out    0xb7,eax
  41ffc9:	shl    DWORD PTR [edx],cl
  41ffcb:	add    DWORD PTR [edi+0x27d879a1],0x206bcf0c
  41ffd5:	mov    al,ds:0x95077544
  41ffda:	dec    ebx
  41ffdb:	mov    edx,0xf428b0cd
  41ffe0:	(bad)  
  41ffe1:	les    ebp,FWORD PTR [edx]
  41ffe3:	xor    DWORD PTR [edi+0x11],edx
  41ffe6:	ret    0x50e0
  41ffe9:	stc    
  41ffea:	ret    
  41ffeb:	and    eax,0xdf304d30
  41fff0:	dec    esi
  41fff1:	mov    esi,0x1b5542a0
  41fff6:	sbb    al,BYTE PTR [esi+0x6c]
  41fff9:	sbb    cl,cl
  41fffb:	gs in  al,0xe1
  41fffe:	test   esp,ecx
  420000:	aad    0x29
  420002:	ja     0x42004a
  420004:	and    ecx,DWORD PTR [ecx]
  420006:	cld    
  420007:	addr16 push es
  420009:	fwait
  42000a:	fwait
  42000b:	cmp    ebx,DWORD PTR [edi-0x7f]
  42000e:	inc    esi
  42000f:	add    ch,0x39
  420012:	imul   eax,DWORD PTR [ebp+0x77],0xcbe8cc6
  420019:	dec    edx
  42001a:	dec    esp
  42001b:	frstor [ebx-0x3f]
  42001e:	xor    ch,BYTE PTR [ebx+0x4bf33dd7]
  420024:	mov    ch,0x47
  420026:	std    
  420027:	push   0x9af2afc9
  42002c:	cmp    eax,DWORD PTR [ebp+esi*4-0x52]
  420030:	cmp    eax,0x96b4d718
  420035:	scas   al,BYTE PTR es:[edi]
  420036:	cmp    BYTE PTR [eax+edi*8+0x7777b463],cl
  42003d:	jo     0x42001e
  42003f:	outs   dx,DWORD PTR ds:[esi]
  420040:	and    DWORD PTR [ebp-0x5],edi
  420043:	sar    BYTE PTR [ecx],cl
  420045:	sbb    al,0x91
  420047:	js     0x41ffe4
  420049:	icebp  
  42004a:	stc    
  42004b:	push   ss
  42004c:	call   0x4605ac61
  420051:	xchg   esi,eax
  420052:	pop    ecx
  420053:	pop    ss
  420054:	adc    al,bl
  420056:	xlat   BYTE PTR ds:[ebx]
  420057:	push   esp
  420058:	sbb    eax,DWORD PTR [eax+0x2b]
  42005b:	push   0xc6bb1d9a
  420060:	(bad)  
  420061:	mov    bh,0x77
  420063:	push   0x0
  420065:	test   BYTE PTR [ebp+0x7447fae8],bh
  42006b:	xchg   DWORD PTR [edi+0x21],edx
  42006e:	mov    dl,0x1c
  420070:	stc    
  420071:	retf   0xa43
  420074:	fisttp DWORD PTR [edx-0x6913b6bc]
  42007a:	or     eax,0xe12e50fe
  42007f:	xchg   edx,eax
  420080:	je     0x420094
  420082:	xor    eax,0x66db906c
  420087:	gs jp  0x420065
  42008a:	aam    0x44
  42008c:	mov    edi,0xcb58b90a
  420091:	jne    0x42002b
  420093:	out    dx,al
  420094:	cmp    ecx,edi
  420096:	cli    
  420097:	(bad)  
  420099:	xchg   edi,eax
  42009a:	push   0x4c77ad6
  42009f:	pushf  
  4200a0:	ret    
  4200a1:	push   edx
  4200a2:	fstp   DWORD PTR [edx+0x7ae30cce]
  4200a8:	or     bl,ah
  4200aa:	push   0xcc108967
  4200af:	test   dl,0xa0
  4200b2:	add    eax,0x9750d0aa
  4200b7:	retf   0xb3d8
  4200ba:	ret    
  4200bb:	adc    bl,BYTE PTR [esi]
  4200bd:	mov    ds:0x639b6396,eax
  4200c2:	sbb    DWORD PTR [ebx-0x7e],ebx
  4200c5:	leave  
  4200c6:	cld    
  4200c7:	sbb    DWORD PTR [ebp+0x72fc25f2],edx
  4200cd:	retf   
  4200ce:	mov    eax,0x460a83ad
  4200d3:	into   
  4200d4:	mov    bl,0x1e
  4200d6:	repz test al,0x52
  4200d9:	daa    
  4200da:	adc    ebx,DWORD PTR [ebx+0x679a09c7]
  4200e0:	inc    ebp
  4200e1:	scas   al,BYTE PTR es:[edi]
  4200e2:	and    ah,ah
  4200e4:	add    bl,al
  4200e6:	mov    WORD PTR [bp+0x9],fs
  4200ea:	adc    al,0x94
  4200ec:	sub    dh,ah
  4200ee:	pop    edi
  4200ef:	stos   BYTE PTR es:[edi],al
  4200f0:	adc    eax,0x2a08b4f7
  4200f5:	lods   al,BYTE PTR ds:[esi]
  4200f6:	sub    BYTE PTR [ebx-0x82983b0],al
  4200fc:	cmp    ah,ah
  4200fe:	jb     0x420145
  420100:	inc    esp
  420101:	mov    ch,al
  420103:	sub    DWORD PTR [esi-0x1aca6e48],edi
  420109:	inc    edx
  42010a:	mov    al,ds:0xf45076a4
  42010f:	pop    ds
  420110:	sar    DWORD PTR [eax-0x692d86ef],0x9c
  420117:	pusha  
  420118:	mov    DWORD PTR [edi-0x4a],edi
  42011b:	mov    ebp,0x13958089
  420120:	xor    al,0x99
  420122:	mov    BYTE PTR [edi-0x66],dh
  420125:	(bad)  
  420126:	out    dx,al
  420127:	jnp    0x42012f
  420129:	sbb    BYTE PTR [ebp-0x2f3089fb],ah
  42012f:	jbe    0x42015a
  420131:	fld    DWORD PTR [edi-0x619c72bb]
  420137:	lods   al,BYTE PTR ds:[esi]
  420138:	pop    ebx
  420139:	into   
  42013a:	stc    
  42013b:	fwait
  42013c:	push   eax
  42013d:	and    BYTE PTR [edx+0x184d240b],ch
  420143:	(bad)  
  420144:	sbb    eax,0xe19f1e7f
  420149:	and    al,0x53
  42014b:	rcr    DWORD PTR [eax],1
  42014d:	les    esp,FWORD PTR [edx+0x24]
  420150:	fs mov esi,0x352dd501
  420156:	cs daa 
  420158:	pop    esp
  420159:	(bad)  
  42015a:	shl    BYTE PTR [ebp-0x75e49a3c],cl
  420160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420161:	std    
  420162:	loope  0x42015c
  420164:	jne    0x420121
  420166:	lahf   
  420167:	inc    ebx
  420168:	sbb    DWORD PTR [ebp+0x720416b],edx
  42016e:	(bad)  
  42016f:	xlat   BYTE PTR ds:[ebx]
  420170:	mov    DWORD PTR [ebp-0x20369b5],ebp
  420176:	and    DWORD PTR [ebx-0x2579fd8c],edx
  42017c:	ins    BYTE PTR es:[edi],dx
  42017d:	in     al,0x1d
  42017f:	mov    bl,0x63
  420181:	sti    
  420182:	fadd   QWORD PTR [esi+ebp*4+0x7e50b949]
  420189:	dec    edx
  42018a:	sub    BYTE PTR [eax],bl
  42018c:	daa    
  42018d:	mov    eax,ds:0x40aca2a1
  420192:	das    
  420193:	or     BYTE PTR [ecx*4-0x77a99757],ah
  42019a:	leave  
  42019b:	ins    DWORD PTR es:[edi],dx
  42019c:	cs push 0x6baaa20d
  4201a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a3:	adc    DWORD PTR [ebp-0x42],0x34e184f5
  4201aa:	mov    WORD PTR ds:0x4369c143,ss
  4201b0:	push   ebx
  4201b1:	outs   dx,BYTE PTR ds:[esi]
  4201b2:	(bad)  
  4201b3:	fnstenv [eax+0x6d]
  4201b6:	mov    ch,dl
  4201b8:	and    al,0xfd
  4201ba:	stos   DWORD PTR es:[edi],eax
  4201bb:	sahf   
  4201bc:	ds xchg ebx,eax
  4201be:	test   eax,0x1b2885b4
  4201c3:	test   edx,ecx
  4201c5:	das    
  4201c6:	dec    ecx
  4201c7:	push   ebx
  4201c8:	icebp  
  4201c9:	sub    dh,BYTE PTR [edx-0x3e887347]
  4201cf:	inc    esi
  4201d0:	inc    ecx
  4201d1:	dec    ecx
  4201d2:	xchg   DWORD PTR [eax+0x7e42b29d],edi
  4201d8:	mov    ds:0x84185175,al
  4201dd:	popf   
  4201de:	sbb    al,0xef
  4201e0:	mov    bh,0x7e
  4201e2:	sub    ebp,esp
  4201e4:	mov    edx,0xd2aa1c80
  4201e9:	sub    bh,BYTE PTR [eax]
  4201eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201ec:	and    al,0xd8
  4201ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ef:	mov    ecx,0x59959058
  4201f4:	or     BYTE PTR [ecx+0x6d],dh
  4201f7:	cmp    eax,0x1f7a5ef6
  4201fc:	push   es
  4201fd:	lods   eax,DWORD PTR gs:[esi]
  4201ff:	lods   eax,DWORD PTR ds:[esi]
  420200:	sahf   
  420201:	push   0xfffffff0
  420203:	outs   dx,BYTE PTR ds:[esi]
  420204:	int3   
  420205:	mov    edi,ecx
  420207:	imul   ebx,DWORD PTR [ecx+0x3721a988],0xffffffcd
  42020e:	repnz rol BYTE PTR [ebx+0x1e8c9601],cl
  420215:	pop    ss
  420216:	retf   
  420217:	in     al,dx
  420218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420219:	lea    eax,[esi-0x65]
  42021c:	mov    esp,0x9e93e73a
  420221:	add    DWORD PTR [eax],0x7a34d6f4
  420227:	das    
  420228:	ds into 
  42022a:	cli    
  42022b:	xor    esi,edi
  42022d:	adc    bh,BYTE PTR [edx]
  42022f:	mov    al,0xe4
  420231:	jne    0x4201e0
  420233:	xchg   ebp,eax
  420234:	stos   BYTE PTR es:[edi],al
  420235:	xor    eax,0xf932124a
  42023a:	out    dx,eax
  42023b:	push   es
  42023c:	inc    ecx
  42023d:	xchg   edx,eax
  42023e:	push   edi
  42023f:	(bad)  
  420240:	in     al,0x3f
  420242:	jmp    0xcd0d941
  420247:	or     eax,0x8d47e5d1
  42024c:	xchg   ebx,eax
  42024d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42024e:	jo     0x4201dd
  420250:	in     al,dx
  420251:	scas   al,BYTE PTR es:[edi]
  420252:	sub    dh,ah
  420254:	shl    DWORD PTR [esi+0x6b77d41],0xcb
  42025b:	sbb    eax,0x5f56232b
  420260:	(bad)  
  420261:	fstp   QWORD PTR [ebx+ecx*1]
  420264:	add    BYTE PTR [ebx+ecx*2+0x34],dl
  420268:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42026a:	and    al,0xc2
  42026c:	xor    BYTE PTR [eax-0x776031b5],al
  420272:	push   es
  420273:	pcmpgtb mm2,QWORD PTR [ebx+edi*4+0x59]
  420278:	jb     0x42020f
  42027a:	hlt    
  42027b:	imul   edx,DWORD PTR [ebx-0x3d],0x34a62fe4
  420282:	push   0xffffffbb
  420284:	test   DWORD PTR [ebx+0x41cb3521],edx
  42028a:	loopne 0x420245
  42028c:	mov    ecx,0x8d75b1d1
  420291:	call   0xd5e00d8
  420296:	and    ch,bh
  420298:	sub    BYTE PTR [ebp-0x76],dh
  42029b:	pop    edi
  42029c:	sub    eax,0xd8cd7aff
  4202a1:	mov    bh,ch
  4202a3:	std    
  4202a4:	outs   dx,BYTE PTR ds:[esi]
  4202a5:	enter  0xf568,0x6f
  4202a9:	fisttp WORD PTR [ebp+0x40]
  4202ac:	cs push ds
  4202ae:	arpl   WORD PTR [esi+0x12],bp
  4202b1:	inc    edi
  4202b2:	(bad)  
  4202b3:	pop    esi
  4202b4:	add    eax,0x54867752
  4202b9:	or     DWORD PTR [ecx],esi
  4202bb:	adc    eax,0x32fea316
  4202c0:	sbb    al,ah
  4202c2:	or     al,0x9f
  4202c4:	pop    esp
  4202c5:	or     eax,0xc9d55ace
  4202ca:	fcomp  QWORD PTR [eax+0x5e93f19e]
  4202d0:	xor    eax,0x5a7809c7
  4202d5:	xchg   ebx,eax
  4202d6:	jle    0x420270
  4202d8:	jbe    0x4202f7
  4202da:	push   ds
  4202db:	jae    0x4202d9
  4202dd:	nop
  4202de:	fild   QWORD PTR [edi+0x6e]
  4202e1:	jge    0x420298
  4202e3:	in     al,0x7f
  4202e5:	test   DWORD PTR [ebp+0x6a13743],esi
  4202eb:	pop    DWORD PTR [edx+0xe]
  4202ee:	push   ds
  4202ef:	jo     0x420287
  4202f1:	inc    esi
  4202f2:	loope  0x4202c1
  4202f4:	test   al,0xe
  4202f6:	push   ebp
  4202f7:	imul   ebp,DWORD PTR [ecx-0x6fab68c4],0xb6e779a3
  420301:	hlt    
  420302:	and    eax,0x8ea2189f
  420307:	sub    al,0xe
  420309:	push   0xffffff80
  42030b:	aad    0x92
  42030d:	mov    ds:0x457ea47f,al
  420312:	pusha  
  420313:	in     eax,0x74
  420315:	mov    dh,0x71
  420317:	test   BYTE PTR [ebp+esi*4+0x635547d1],cl
  42031e:	pushf  
  42031f:	(bad)  
  420320:	loopne 0x420395
  420322:	pop    esi
  420323:	mov    ebx,0xd2fb3303
  420328:	add    al,ah
  42032a:	mov    ebx,0x3816e896
  42032f:	jmp    0x4202d6
  420331:	into   
  420332:	push   0x4c
  420334:	or     ebx,DWORD PTR [edi]
  420336:	imul   esp,DWORD PTR [esi+esi*1],0x30
  42033a:	push   0xffffffad
  42033c:	lahf   
  42033d:	mov    edx,0xf0507bf1
  420342:	popa   
  420343:	stos   BYTE PTR es:[edi],al
  420344:	fdivr  DWORD PTR [eax+0x69]
  420347:	je     0x4202df
  420349:	mov    al,0xfa
  42034b:	out    dx,eax
  42034c:	scas   eax,DWORD PTR es:[edi]
  42034d:	lods   al,BYTE PTR ds:[esi]
  42034e:	xchg   BYTE PTR [edi+eax*8-0x77],al
  420352:	dec    ecx
  420353:	mov    WORD PTR [ebx],gs
  420355:	aas    
  420356:	aam    0x2
  420358:	(bad)  
  420359:	out    dx,al
  42035a:	int3   
  42035b:	daa    
  42035c:	inc    ebp
  42035d:	stos   BYTE PTR es:[edi],al
  42035e:	mov    edi,0xa1a18922
  420363:	cld    
  420364:	mov    ds:0xf794a5d7,eax
  420369:	cmp    DWORD PTR [ecx-0x58],esp
  42036c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42036d:	(bad)  
  42036e:	les    edi,FWORD PTR [esi+0x44506a39]
  420374:	pop    esi
  420375:	inc    esp
  420376:	xor    BYTE PTR [esi],ch
  420378:	stos   BYTE PTR es:[edi],al
  420379:	jge    0x420331
  42037b:	ror    DWORD PTR [esp+edi*4+0x9328ff4],0x86
  420383:	ins    DWORD PTR es:[edi],dx
  420384:	ficomp WORD PTR [eax+ebx*1+0x6c6dd82e]
  42038b:	adc    BYTE PTR [edi],cl
  42038d:	cli    
  42038e:	mov    BYTE PTR [ebx-0x67],dl
  420391:	call   0x4938f294
  420396:	mov    edi,0x2f10b626
  42039b:	dec    edx
  42039c:	mov    al,ds:0x9847bdd4
  4203a1:	lahf   
  4203a2:	cmp    ebx,edi
  4203a4:	imul   eax,DWORD PTR [eax+eiz*1+0xd],0xffffff81
  4203a9:	fwait
  4203aa:	scas   eax,DWORD PTR es:[edi]
  4203ab:	test   DWORD PTR [esi-0x29],edi
  4203ae:	ret    0x14b9
  4203b1:	pop    esi
  4203b2:	daa    
  4203b3:	jg     0x420380
  4203b5:	add    BYTE PTR [edi-0x3e76afd4],bh
  4203bb:	clc    
  4203bc:	fld    TBYTE PTR [ebp-0x16a7018e]
  4203c2:	adc    al,0xaf
  4203c4:	cmp    eax,0xb3efd3d5
  4203c9:	mov    al,0x8
  4203cb:	out    dx,al
  4203cc:	cmp    al,0x10
  4203ce:	cmc    
  4203cf:	inc    edi
  4203d0:	arpl   WORD PTR [edx],bx
  4203d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203d3:	sar    DWORD PTR [edx+edx*8],0x3d
  4203d7:	repnz cwde 
  4203d9:	call   0x2a81:0xa999f46d
  4203e0:	push   ds
  4203e1:	push   ebp
  4203e2:	adc    ebx,DWORD PTR [ebx]
  4203e4:	fwait
  4203e5:	rol    edi,0x29
  4203e8:	or     esi,DWORD PTR [ecx+0x18]
  4203eb:	mov    BYTE PTR [edi+0x53],al
  4203ee:	pop    ds
  4203ef:	adc    al,0xca
  4203f1:	fistp  DWORD PTR [ecx+0x70]
  4203f4:	dec    edx
  4203f5:	xchg   ecx,eax
  4203f6:	je     0x420431
  4203f8:	xchg   ebp,eax
  4203f9:	mov    ds,WORD PTR [ecx+0x2d]
  4203fc:	mov    eax,ds:0x66a7d995
  420401:	adc    ebx,ebx
  420403:	xor    eax,0xbfe53e5
  420408:	retf   
  420409:	or     al,0x63
  42040b:	cmp    edi,DWORD PTR [ebp-0x33]
  42040e:	lahf   
  42040f:	pop    esp
  420410:	loop   0x4203f5
  420412:	push   ebp
  420413:	pop    esp
  420414:	(bad)  
  420415:	mov    ecx,0xe112fd76
  42041a:	sub    al,0xc
  42041c:	call   0x6eac:0x97113132
  420423:	mov    eax,0xe2406dc7
  420428:	nop
  420429:	jbe    0x420419
  42042b:	sub    eax,0xe9efff63
  420430:	jg     0x42048c
  420432:	cmp    bh,BYTE PTR [eax-0x4]
  420435:	inc    esp
  420436:	and    ebx,esp
  420438:	(bad)  
  420439:	sub    al,0xad
  42043b:	xor    al,BYTE PTR [edx]
  42043d:	sub    bl,BYTE PTR [edx+0xffd1dbf]
  420443:	dec    esi
  420444:	push   ds
  420445:	call   0xa5d57d2d
  42044a:	add    al,0x2b
  42044c:	outs   dx,DWORD PTR ds:[esi]
  42044d:	scas   al,BYTE PTR es:[edi]
  42044e:	lea    ecx,[esi+esi*8]
  420451:	shl    BYTE PTR [eax+0x2b5f014c],1
  420457:	(bad)  
  420458:	fimul  DWORD PTR [ebp-0x63d6db70]
  42045e:	loopne 0x420486
  420460:	sti    
  420461:	sti    
  420462:	mov    eax,0xd5327806
  420467:	sub    ebx,DWORD PTR [ebx+ecx*4+0x16]
  42046b:	lds    edx,FWORD PTR [edx+eiz*2]
  42046e:	cmp    eax,0x514d8716
  420473:	retf   0xb541
  420476:	stc    
  420477:	push   eax
  420478:	sub    BYTE PTR [esi-0x725017e3],0xf1
  42047f:	das    
  420480:	cli    
  420481:	pop    edx
  420482:	or     BYTE PTR [ebp+0x7f],al
  420485:	ss mov dl,ch
  420488:	inc    esp
  420489:	jle    0x4204f4
  42048b:	pop    es
  42048c:	mov    esi,0x4cb82124
  420491:	cmp    ch,BYTE PTR [ebx-0x35]
  420494:	add    dl,ah
  420496:	xchg   edx,eax
  420497:	adc    DWORD PTR [eax],ebp
  420499:	sbb    DWORD PTR [edi+0x54],0xde689cae
  4204a0:	jo     0x420504
  4204a2:	int    0xbc
  4204a4:	adc    eax,0x9d558170
  4204a9:	int3   
  4204aa:	addr16 jbe 0x4204b6
  4204ad:	adc    DWORD PTR [esi],ebp
  4204af:	xor    al,0xda
  4204b1:	shl    DWORD PTR [ebx+0x2ecd549e],0x8f
  4204b8:	mov    eax,esp
  4204ba:	push   ecx
  4204bb:	sbb    eax,0x4770bba4
  4204c0:	lods   al,BYTE PTR ds:[esi]
  4204c1:	inc    edi
  4204c2:	imul   ebp,DWORD PTR [edi],0x51
  4204c5:	sub    dh,bh
  4204c7:	ficomp WORD PTR [ebp+0x3c86b82d]
  4204cd:	adc    eax,0x2cd78c6d
  4204d2:	xor    DWORD PTR [eax+eax*1+0x10cb5684],eax
  4204d9:	mov    ebx,0x8be41860
  4204de:	sar    DWORD PTR [ebx+eiz*1],0x53
  4204e2:	push   eax
  4204e3:	in     eax,0xab
  4204e5:	mov    ecx,0x8ce5bfcb
  4204ea:	mov    ecx,ecx
  4204ec:	jnp    0x42049a
  4204ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204f0:	std    
  4204f1:	lahf   
  4204f2:	mov    ebp,0xa366a583
  4204f7:	(bad)  
  4204f8:	ds xor eax,0x4410c2b0
  4204fe:	push   ecx
  4204ff:	jb     0x4204d7
  420501:	stos   DWORD PTR es:[edi],eax
  420502:	mov    DWORD PTR ds:0x312eba77,edi
  420508:	call   DWORD PTR [ecx-0x64]
  42050b:	xor    al,0xea
  42050d:	retf   
  42050e:	in     eax,0xfb
  420510:	(bad)  
  420511:	div    DWORD PTR [ecx-0x775a56a5]
  420517:	call   FWORD PTR [eax-0xa]
  42051a:	fwait
  42051b:	dec    ebp
  42051c:	pop    esi
  42051d:	icebp  
  42051e:	sub    al,0x74
  420520:	cmc    
  420521:	stc    
  420522:	aad    0x60
  420524:	fcomp  QWORD PTR [eax]
  420526:	xchg   esi,eax
  420527:	xchg   ebp,eax
  420528:	bound  edi,QWORD PTR [ecx+0x20378eff]
  42052e:	inc    esp
  42052f:	dec    ebx
  420530:	cpuid  
  420532:	sub    eax,0x66156b6e
  420537:	sar    DWORD PTR [ebx-0x37],cl
  42053a:	fdivr  DWORD PTR [ebx-0x25]
  42053d:	and    al,0x22
  42053f:	std    
  420540:	inc    edi
  420541:	std    
  420542:	sahf   
  420543:	int3   
  420544:	and    cl,BYTE PTR [di+0x7c58]
  420549:	push   eax
  42054a:	das    
  42054b:	pop    ss
  42054c:	in     al,dx
  42054d:	pop    es
  42054e:	pop    ds
  42054f:	xchg   ebp,eax
  420550:	popf   
  420551:	(bad)  
  420552:	mov    ebp,0x82a29f8
  420557:	arpl   ax,bx
  420559:	rol    BYTE PTR [eax+0x42e0f4b5],0xf1
  420560:	jmp    0x3406:0x16e1498e
  420567:	xor    cl,dl
  420569:	adc    bl,cl
  42056b:	jge    0x420554
  42056d:	cmp    al,0x59
  42056f:	mov    bh,cl
  420571:	xor    BYTE PTR [edi],dl
  420573:	sti    
  420574:	pushf  
  420575:	scas   eax,DWORD PTR es:[edi]
  420576:	clc    
  420577:	jge    0x4205dd
  420579:	pop    ecx
  42057a:	mov    edx,DWORD PTR [esi]
  42057c:	(bad)  [edi]
  42057e:	aam    0x2b
  420580:	fiadd  WORD PTR [ecx+0x65]
  420583:	xchg   ebx,eax
  420584:	popf   
  420585:	fsubr  QWORD PTR [ecx+0x3b]
  420588:	in     eax,0xc5
  42058a:	mov    esi,0x9bcacd3b
  42058f:	xor    ebx,DWORD PTR gs:[ecx+0x635d5c8b]
  420596:	bound  ecx,QWORD PTR [ebx-0x7c]
  420599:	daa    
  42059a:	adc    al,0x8a
  42059c:	imul   edi,DWORD PTR [edx],0x49
  42059f:	ret    
  4205a0:	loopne 0x420581
  4205a2:	dec    edi
  4205a3:	jmp    0x420608
  4205a5:	jae    0x4205a3
  4205a7:	cmc    
  4205a8:	push   ebp
  4205a9:	jae    0x420544
  4205ab:	bndldx bnd3,[eax+edi*8]
  4205af:	retf   0xec85
  4205b2:	and    al,0x7d
  4205b4:	and    eax,0xf296c409
  4205b9:	repz call 0xcb395bfb
  4205bf:	ins    BYTE PTR es:[edi],dx
  4205c0:	ret    0x2221
  4205c3:	rcl    DWORD PTR [ebp-0x5e7410b6],1
  4205c9:	jmp    0xadb2:0x222fa214
  4205d0:	push   0x4b51f1e4
  4205d5:	ds mov al,0xf8
  4205d8:	push   eax
  4205d9:	hlt    
  4205da:	cmp    dl,al
  4205dc:	xchg   ecx,eax
  4205dd:	loop   0x4205f8
  4205df:	iret   
  4205e0:	sbb    eax,0xcfd108b8
  4205e5:	out    0xe2,eax
  4205e7:	jp     0x420656
  4205e9:	and    BYTE PTR [edx],dl
  4205eb:	adc    esi,DWORD PTR [ebp+0x74220deb]
  4205f1:	in     al,dx
  4205f2:	scas   eax,DWORD PTR es:[edi]
  4205f3:	hlt    
  4205f4:	fist   WORD PTR [ebx-0x6a8ff734]
  4205fa:	fisub  WORD PTR [eax+0x3b0dc14]
  420600:	hlt    
  420601:	xor    eax,0x62af4a6c
  420606:	jle    0x420643
  420608:	add    al,0x66
  42060a:	das    
  42060b:	mov    al,0x7b
  42060d:	cmp    DWORD PTR [ecx],edi
  42060f:	out    0x9e,al
  420611:	or     dl,cl
  420613:	ja     0x4205cf
  420615:	jp     0x42066f
  420617:	shr    DWORD PTR [ecx+edx*4-0x29],1
  42061b:	fdivr  QWORD PTR [ebp-0x35]
  42061e:	inc    esi
  42061f:	mov    esp,0xdca289f1
  420624:	mov    ebx,edx
  420626:	pop    esp
  420627:	sbb    ecx,ecx
  420629:	adc    al,0x3
  42062b:	jo     0x4205c8
  42062d:	push   ds
  42062e:	repnz cmp dl,al
  420631:	mov    eax,ds:0x6d1c7179
  420636:	not    DWORD PTR [eax+edi*2+0x26]
  42063a:	loop   0x4205cc
  42063c:	data16 jp 0x420675
  42063f:	mov    edx,0xbb0d51fe
  420644:	adc    ebx,DWORD PTR [ebx]
  420646:	sub    al,bh
  420648:	test   al,0xb5
  42064a:	push   eax
  42064b:	(bad)  
  42064c:	cdq    
  42064d:	or     ch,ah
  42064f:	in     eax,dx
  420650:	hlt    
  420651:	sbb    al,0x20
  420653:	ja     0x420649
  420655:	cmp    edx,ebx
  420657:	icebp  
  420658:	cmp    cl,0xea
  42065b:	and    BYTE PTR [ecx],bh
  42065d:	add    bl,dl
  42065f:	push   eax
  420660:	stos   BYTE PTR es:[edi],al
  420661:	into   
  420662:	jl     0x420628
  420664:	and    BYTE PTR [ebp-0x43],ah
  420667:	fiadd  DWORD PTR [ebx]
  420669:	call   0x6b70:0xc25a4142
  420670:	hlt    
  420671:	push   ds
  420672:	adc    bh,BYTE PTR [ecx+0x374d5612]
  420678:	fild   DWORD PTR [edx]
  42067a:	cmp    BYTE PTR ds:0xa5ba1470,ch
  420680:	or     DWORD PTR [ebp-0x100e7795],esp
  420686:	scas   al,BYTE PTR es:[edi]
  420687:	iret   
  420688:	test   BYTE PTR [ebp-0x73],dl
  42068b:	xchg   esp,eax
  42068c:	jne    0x4206db
  42068e:	pop    edx
  42068f:	pop    ebp
  420690:	or     ecx,esp
  420692:	faddp  st(0),st
  420694:	fiadd  WORD PTR [edi]
  420696:	push   ebx
  420697:	add    DWORD PTR [esi+0x5fe0fea3],ebx
  42069d:	(bad)  
  42069e:	push   ebx
  42069f:	imul   ecx,DWORD PTR [ebx],0x61
  4206a2:	adc    al,0x3a
  4206a4:	out    0xf7,al
  4206a6:	(bad)  
  4206a7:	rcl    edx,1
  4206a9:	stos   DWORD PTR es:[edi],eax
  4206aa:	cdq    
  4206ab:	jp     0x4206fc
  4206ad:	lds    eax,FWORD PTR [edi]
  4206af:	lock and al,0x9c
  4206b2:	sbb    esp,esi
  4206b4:	mov    ah,0x49
  4206b6:	outs   dx,BYTE PTR ds:[esi]
  4206b8:	add    al,0xc2
  4206ba:	lahf   
  4206bb:	push   eax
  4206bc:	jmp    0x61120be
  4206c1:	add    esi,DWORD PTR [edx+ecx*2-0x5ff5b6d6]
  4206c8:	xchg   esp,eax
  4206c9:	sub    dl,bh
  4206cb:	xchg   ebx,eax
  4206cc:	adc    al,0x1e
  4206ce:	inc    bp
  4206d0:	lds    ebp,FWORD PTR [esi-0x4]
  4206d3:	cmp    al,0x80
  4206d5:	sar    DWORD PTR [esi],0x9b
  4206d8:	xor    eax,0x5548f533
  4206dd:	iret   
  4206de:	dec    esp
  4206df:	pop    edx
  4206e0:	fld    TBYTE PTR [ecx]
  4206e2:	cmp    BYTE PTR [edx],bl
  4206e4:	and    eax,ebp
  4206e6:	and    DWORD PTR [esi],edi
  4206e8:	push   ds
  4206e9:	aam    0x8a
  4206eb:	addr16 dec esp
  4206ed:	xchg   ebx,eax
  4206ee:	jp     0x420761
  4206f0:	xor    al,0x48
  4206f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f3:	test   al,0x9d
  4206f5:	jno    0x42076c
  4206f7:	fdiv   st(4),st
  4206f9:	imul   ebp,DWORD PTR [ebx-0x320c76c2],0xad54a3bb
  420703:	repz idiv BYTE PTR [eax+0x350dee61]
  42070a:	xchg   ebx,eax
  42070b:	xor    al,0x33
  42070d:	inc    esp
  42070e:	mov    BYTE PTR [ebx],al
  420710:	mov    ds:0x5910d446,al
  420715:	fwait
  420716:	retf   0x15e4
  420719:	(bad)  
  42071b:	push   esp
  42071c:	mov    al,0x81
  42071e:	popf   
  42071f:	jl     0x420752
  420721:	scas   al,BYTE PTR es:[edi]
  420722:	mov    ch,0x3f
  420724:	sub    eax,ebx
  420726:	stos   BYTE PTR es:[edi],al
  420727:	push   ecx
  420728:	jle    0x42077e
  42072a:	std    
  42072b:	mov    ds:0x921e241b,al
  420730:	out    0x24,al
  420732:	jmp    0x4206dc
  420734:	test   DWORD PTR [esi],ecx
  420736:	xchg   edx,eax
  420737:	add    dl,ch
  420739:	and    eax,0xf959e99b
  42073e:	mov    al,ds:0xa1410ded
  420743:	sbb    BYTE PTR [edx-0x37f7e21],0x44
  42074a:	cmp    ecx,DWORD PTR es:[edx+0x6dc491bb]
  420751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420752:	mov    cl,0x3a
  420754:	popf   
  420755:	adc    DWORD PTR [ebx+0x39],eax
  420758:	enter  0x8a64,0xab
  42075c:	xchg   DWORD PTR [ecx],ebp
  42075e:	ficom  DWORD PTR [esi]
  420760:	and    BYTE PTR [edx-0x68f4154],dh
  420766:	in     al,dx
  420767:	mov    dh,0x6
  420769:	xchg   edx,eax
  42076a:	or     ch,BYTE PTR [ecx]
  42076c:	nop
  42076d:	jnp    0x4206f1
  42076f:	xor    eax,0x79c2c731
  420774:	and    dh,ch
  420776:	xchg   edi,eax
  420777:	pop    ds
  420778:	push   0xfffffff7
  42077a:	inc    eax
  42077b:	loope  0x4207f5
  42077d:	stos   BYTE PTR es:[edi],al
  42077e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42077f:	xchg   edx,eax
  420780:	dec    edx
  420781:	nop
  420782:	jge    0x4207f0
  420784:	cmp    al,0xe6
  420786:	popa   
  420787:	add    ah,BYTE PTR [esi+0x6acb2c28]
  42078d:	mov    DWORD PTR [edi-0x3efc9bf4],esi
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a62b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a64b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a667
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a637
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a64f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a653
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a657
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a65b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a65f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a64b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a637
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a663
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a66b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a633
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a64b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a637
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a64b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a637
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a64b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a637
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a64b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a637
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a64b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a637
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a64b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a637
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a64b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a637
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a64b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a637
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a64b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a637
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a64b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a637
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a64b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a637
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a64b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a637
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a64b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a637
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a64b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a667
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a637
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a63b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a63f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a643
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	mov    ss,WORD PTR [eax-0x4e900667]
  421dc0:	add    BYTE PTR [ebx-0x7c7ca400],0x88
  421dc7:	or     eax,DWORD PTR ds:0xf88a4986
  421dcd:	mov    edi,0x3f8d0065
  421dd2:	lods   al,BYTE PTR ds:[esi]
  421dd3:	fwait
  421dd4:	jecxz  0x421dcc
  421dd6:	or     DWORD PTR [eax-0x547bed93],edx
  421ddc:	lds    ebx,FWORD PTR [ebp+0x38]
  421ddf:	clc    
  421de0:	sahf   
  421de1:	js     0x421d7d
  421de3:	in     eax,dx
  421de4:	out    0xc5,al
  421de6:	aad    0x3
  421de8:	xchg   edi,eax
  421de9:	das    
  421dea:	dec    eax
  421deb:	gs add edx,edx
  421dee:	idiv   DWORD PTR [edi+ecx*2+0xa]
  421df2:	xlat   BYTE PTR ds:[ebx]
  421df3:	test   BYTE PTR [edx],0xe9
  421df6:	lock sub ebx,DWORD PTR [edi]
  421df9:	ja     0x421db3
  421dfb:	jae    0x421d96
  421dfd:	mov    esi,0xb5b07b20
  421e02:	jg     0x421e0c
  421e04:	sbb    dh,BYTE PTR [edx]
  421e06:	mov    bl,0xed
  421e08:	leave  
  421e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e0a:	out    dx,eax
  421e0b:	xor    al,0x29
  421e0d:	loopne 0x421daa
  421e0f:	or     esp,edi
  421e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e12:	ss and bh,ch
  421e15:	arpl   WORD PTR [esi+0x4b],cx
  421e18:	dec    ebp
  421e19:	mov    cs:0x59f5afdf,al
  421e1f:	cmc    
  421e20:	lahf   
  421e21:	and    DWORD PTR [eax-0x5b589130],edx
  421e27:	cvtps2pi mm3,QWORD PTR [esi+0x39]
  421e2b:	arpl   WORD PTR [esi],dx
  421e2d:	add    al,0x74
  421e2f:	sbb    al,0xb
  421e31:	xor    DWORD PTR [ebp+0x6c55d2f3],edx
  421e37:	fbstp  TBYTE PTR [ebx]
  421e39:	sbb    esp,0x39
  421e3c:	mov    ds:0xada4ad0c,eax
  421e41:	jp     0x421e57
  421e43:	pop    ecx
  421e44:	jnp    0x421dc8
  421e46:	call   FWORD PTR [eax+0x1a54a492]
  421e4c:	cmp    al,0x11
  421e4e:	sbb    BYTE PTR [edi-0x2d],0xce
  421e52:	cmc    
  421e53:	add    eax,0x51dd9cff
  421e58:	lods   al,BYTE PTR ds:[esi]
  421e59:	dec    edx
  421e5a:	mov    dh,0xb2
  421e5c:	lahf   
  421e5d:	das    
  421e5e:	xor    bh,al
  421e60:	inc    ecx
  421e61:	xchg   DWORD PTR [ebx-0x27aeaaa0],eax
  421e67:	dec    eax
  421e68:	adc    bl,BYTE PTR [ecx-0x47]
  421e6b:	pop    ecx
  421e6c:	jnp    0x421ed3
  421e6e:	dec    edx
  421e6f:	mov    ds:0xc31faf07,al
  421e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e75:	out    0x9b,al
  421e77:	stc    
  421e78:	rcl    BYTE PTR [esi],0x72
  421e7b:	push   ecx
  421e7c:	retf   
  421e7d:	fisttp WORD PTR [ebp+0x2e275aa8]
  421e83:	mov    esp,0xcb2b8b7e
  421e88:	pop    eax
  421e89:	aad    0x4b
  421e8b:	inc    ebp
  421e8c:	sbb    cl,BYTE PTR [edx-0x2f]
  421e8f:	popf   
  421e90:	cmp    BYTE PTR [ebx-0x6d797db6],ah
  421e96:	push   ebp
  421e97:	arpl   WORD PTR [edi],dx
  421e99:	sub    ah,0xf0
  421e9c:	and    al,0x83
  421e9e:	call   0x8f6c3687
  421ea3:	lods   eax,DWORD PTR ds:[esi]
  421ea4:	and    eax,0x8f9b4c3d
  421ea9:	fild   QWORD PTR [ebx-0x4fcb2597]
  421eaf:	cmp    ecx,ebx
  421eb1:	in     al,0xc9
  421eb3:	lea    ebx,ss:[edx+0x4d]
  421eb7:	sar    dh,1
  421eb9:	mov    ds:0x59c1f635,eax
  421ebe:	dec    ebp
  421ebf:	loope  0x421ec6
  421ec1:	retf   
  421ec2:	aam    0x1e
  421ec4:	scas   al,BYTE PTR es:[edi]
  421ec5:	call   0x33b3:0x6eea476
  421ecc:	(bad)  
  421ece:	lds    ebp,FWORD PTR [ecx-0x398be9a2]
  421ed4:	sub    ebp,edx
  421ed6:	retf   
  421ed7:	sbb    al,0x48
  421ed9:	pop    esp
  421eda:	push   0xffffff96
  421edc:	ficom  DWORD PTR [ebx-0x31]
  421edf:	(bad)  
  421ee0:	call   0x6d13:0x7093d5ec
  421ee7:	mov    al,ds:0x202dff80
  421eec:	jmp    0x421ed0
  421eee:	ja     0x421ec9
  421ef0:	repnz xor cl,BYTE PTR [ebp+0x738d2357]
  421ef7:	frstor [ebx]
  421ef9:	xchg   DWORD PTR [edi-0x5b],ebx
  421efc:	pushw  cs
  421efe:	or     al,cl
  421f00:	shl    BYTE PTR [esi-0x50],cl
  421f03:	sbb    bh,BYTE PTR [ebp-0x18875586]
  421f09:	aad    0x6e
  421f0b:	lods   al,BYTE PTR ds:[esi]
  421f0c:	add    dl,BYTE PTR [eax+0x391a4946]
  421f12:	in     al,dx
  421f13:	fild   DWORD PTR [edx+0x18]
  421f16:	(bad)  
  421f17:	mov    DWORD PTR [eax],eax
  421f19:	jmp    0x21e6:0xf03c5c28
  421f20:	mov    esp,eax
  421f22:	push   edi
  421f23:	push   edi
  421f24:	pop    es
  421f25:	loopne 0x421ebe
  421f27:	pop    edi
  421f28:	sbb    al,0x67
  421f2a:	out    0x65,eax
  421f2c:	mov    gs,WORD PTR [ebx-0x43920012]
  421f32:	retf   0xda35
  421f35:	gs out 0xf9,al
  421f38:	add    dl,BYTE PTR [edi-0x5031f2b7]
  421f3e:	xchg   ebp,eax
  421f3f:	inc    edi
  421f40:	dec    esp
  421f41:	gs es xor al,0x41
  421f45:	push   edi
  421f46:	dec    edi
  421f47:	(bad)  [ebx+eax*8+0x3b]
  421f4b:	inc    esi
  421f4c:	push   ecx
  421f4d:	push   ss
  421f4e:	sub    ah,BYTE PTR [eax-0xdac966d]
  421f54:	rol    DWORD PTR [eax-0x47],cl
  421f57:	and    al,0x46
  421f59:	add    al,0x99
  421f5b:	sti    
  421f5c:	and    al,0x1a
  421f5e:	jo     0x421f87
  421f60:	jmp    DWORD PTR [eax]
  421f62:	or     DWORD PTR [edi+ecx*1+0x6f7098d5],edx
  421f69:	push   ecx
  421f6a:	lahf   
  421f6b:	sahf   
  421f6c:	mov    bh,0x37
  421f6e:	div    DWORD PTR [ecx]
  421f70:	mov    eax,ds:0xdfc41eb7
  421f75:	add    edi,DWORD PTR [ecx-0x11]
  421f78:	and    ebp,DWORD PTR [esi+0x3a336f3e]
  421f7e:	inc    ebx
  421f7f:	es push esi
  421f81:	mov    al,0xc
  421f83:	inc    edi
  421f84:	fninit 
  421f86:	ror    esp,1
  421f88:	aaa    
  421f89:	or     DWORD PTR [edi+0x3d],0x8d84bd76
  421f90:	int3   
  421f91:	xlat   BYTE PTR ds:[ebx]
  421f92:	into   
  421f93:	div    bl
  421f95:	cmp    al,BYTE PTR [eax-0x46f6104a]
  421f9b:	or     esp,DWORD PTR [ecx]
  421f9d:	push   ss
  421f9e:	xchg   edi,eax
  421f9f:	mov    ebx,0xcd26346b
  421fa4:	push   esp
  421fa5:	xchg   edx,eax
  421fa6:	add    esi,esp
  421fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fa9:	pop    edi
  421faa:	mov    ds:0x486759f3,eax
  421faf:	mov    ecx,0xb658918d
  421fb4:	add    BYTE PTR [ecx+0x6f],bh
  421fb7:	nop    ebp
  421fba:	not    BYTE PTR [esi+ebx*8+0x3b]
  421fbe:	js     0x421f8d
  421fc0:	mov    ah,0xe7
  421fc2:	aas    
  421fc3:	xor    BYTE PTR [edx+0x43],ch
  421fc6:	mov    WORD PTR [edi+0x8],?
  421fc9:	adc    BYTE PTR [ecx+0x4288f437],dl
  421fcf:	jnp    0x421f8b
  421fd1:	mov    ds:0x75193a7c,eax
  421fd6:	mov    ebp,0x8cd6ec43
  421fdb:	sti    
  421fdc:	imul   esi,DWORD PTR [ebx+ebx*1-0x5cf325b6],0xc51b2552
  421fe7:	cmp    ebp,esp
  421fe9:	adc    al,0xf3
  421feb:	seto   BYTE PTR ds:0x57bae644
  421ff2:	scas   eax,DWORD PTR es:[edi]
  421ff3:	xchg   ebx,eax
  421ff4:	xor    al,0xe9
  421ff6:	dec    esi
  421ff7:	fs mov edi,0x2a5c4eb6
  421ffd:	xor    eax,0x1cadbea1
  422002:	stc    
  422003:	les    edx,FWORD PTR [eax-0x7c]
  422006:	sahf   
  422007:	out    dx,al
  422008:	add    ebp,DWORD PTR [esi+0x76]
  42200b:	fdivr  QWORD PTR [ecx-0x5a]
  42200e:	cwde   
  42200f:	test   DWORD PTR [edx-0x1f],eax
  422012:	inc    esp
  422014:	dec    ebp
  422015:	mov    bl,0x78
  422017:	dec    esp
  422018:	or     DWORD PTR [esi+0x7e82429e],edx
  42201e:	in     eax,0xbf
  422020:	adc    edx,DWORD PTR [eax-0x11317cbe]
  422026:	dec    edi
  422027:	adc    al,0xe2
  422029:	pop    ss
  42202a:	push   ss
  42202b:	and    edx,DWORD PTR [edx-0x1eea5930]
  422031:	jmp    0x42208e
  422033:	fist   DWORD PTR [edx]
  422035:	test   DWORD PTR [edx+0x7e5c44f9],edx
  42203b:	iret   
  42203c:	xchg   esp,eax
  42203d:	inc    esp
  42203e:	(bad)  
  42203f:	fiadd  WORD PTR [edi+0x36597493]
  422045:	sbb    eax,0x3c1be6f8
  42204a:	xchg   ebp,eax
  42204b:	das    
  42204c:	test   BYTE PTR [ebp-0x53ce0185],cl
  422052:	(bad)  [ebp-0x720635c0]
  422058:	pop    ds
  422059:	ficom  DWORD PTR [ebp-0x63d489df]
  42205f:	jge    0x4220c4
  422061:	dec    edi
  422062:	std    
  422063:	cmp    BYTE PTR [ecx+ebp*4],bl
  422066:	std    
  422067:	mov    al,0xae
  422069:	loope  0x422007
  42206b:	clc    
  42206c:	or     ah,BYTE PTR [ebx]
  42206e:	retf   
  42206f:	test   eax,0xb6e38d41
  422074:	cmp    dl,BYTE PTR [ebp+eiz*1-0x261339f8]
  42207b:	mov    al,ds:0xd4971db6
  422080:	cmp    cl,BYTE PTR [esi]
  422082:	loope  0x42200c
  422084:	jnp    0x42201f
  422086:	test   DWORD PTR [ecx+0xb7ba162],eax
  42208c:	das    
  42208d:	push   ebx
  42208e:	mov    ds:0xac2370f2,eax
  422093:	scas   eax,DWORD PTR es:[edi]
  422094:	xlat   BYTE PTR ds:[ebx]
  422095:	cmp    al,0xa
  422097:	push   eax
  422098:	mov    ebx,0x1789a140
  42209d:	jns    0x4220c4
  42209f:	inc    esi
  4220a0:	xchg   ebx,eax
  4220a1:	into   
  4220a2:	in     al,0xc9
  4220a4:	mov    ds:0x9e826303,eax
  4220a9:	imul   ebp,DWORD PTR [ebx+esi*8+0x4f],0xefa8b49b
  4220b1:	mov    ah,0xc
  4220b3:	lods   eax,DWORD PTR ds:[esi]
  4220b4:	mov    ds:0xaa734023,eax
  4220b9:	jae    0x42204f
  4220bb:	cmc    
  4220bc:	mov    dl,0x9f
  4220be:	addr16 mov bh,0x3
  4220c1:	ds aam 0x36
  4220c4:	and    al,0xfc
  4220c6:	out    0x36,eax
  4220c8:	cld    
  4220c9:	mov    ch,0x5b
  4220cb:	mov    ds:0x6d6b3391,al
  4220d0:	retf   
  4220d1:	out    0xf2,eax
  4220d3:	adc    al,0x59
  4220d5:	mov    eax,0x7373aed1
  4220da:	pop    ds
  4220db:	xor    esp,DWORD PTR [edi-0x7d]
  4220de:	imul   esp,DWORD PTR [ecx],0xffffffcb
  4220e1:	out    dx,al
  4220e2:	ret    0x6e94
  4220e5:	adc    al,0x91
  4220e7:	push   ebp
  4220e8:	xchg   DWORD PTR [ebx],ebp
  4220ea:	sub    al,0x9c
  4220ec:	(bad)  
  4220ed:	mov    al,0xcd
  4220ef:	mov    esp,0xfc7040e1
  4220f4:	jnp    0x42209a
  4220f6:	jbe    0x4220c9
  4220f8:	sbb    BYTE PTR [edi-0x75],cl
  4220fb:	dec    edx
  4220fc:	mov    BYTE PTR [edx+0x4c],cl
  4220ff:	xor    bl,bl
  422101:	aaa    
  422102:	push   0xb9640551
  422107:	outs   dx,BYTE PTR ds:[esi]
  422108:	mov    dh,0xcb
  42210a:	adc    bl,BYTE PTR [ebp+0x4f]
  42210d:	jge    0x422151
  42210f:	leave  
  422110:	mov    bx,0xb652
  422114:	add    esp,ecx
  422116:	pop    esi
  422117:	push   ebx
  422118:	adc    al,0x70
  42211a:	in     eax,dx
  42211b:	ja     0x422101
  42211d:	cli    
  42211e:	(bad)  
  42211f:	push   0xffffffe4
  422121:	aaa    
  422122:	imul   esi,esp,0x4306cb83
  422128:	imul   edx,DWORD PTR [edx],0x1b
  42212b:	xor    dh,BYTE PTR [esi]
  42212d:	(bad)  
  42212f:	loope  0x42214c
  422131:	mov    al,ds:0x6f2946ee
  422136:	xor    eax,0xf8fb9f32
  42213b:	int3   
  42213c:	xor    dl,BYTE PTR [ebp+0x7a]
  42213f:	(bad)  
  422140:	fcomp  DWORD PTR [ecx-0x5e]
  422143:	pop    ecx
  422144:	xor    al,0xd8
  422146:	jmp    0x4221a9
  422148:	ins    DWORD PTR es:[edi],dx
  422149:	mov    al,ds:0x2b236f88
  42214e:	retf   0x1562
  422151:	enter  0x4435,0x6a
  422155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422156:	fimul  DWORD PTR [esi-0x47f3496f]
  42215c:	adc    al,0x28
  42215e:	xor    dl,dh
  422160:	pop    ecx
  422161:	ins    DWORD PTR es:[edi],dx
  422162:	jl     0x4221cf
  422164:	dec    ebx
  422165:	rcl    DWORD PTR [esi+0x25e4fb17],cl
  42216b:	test   DWORD PTR [ecx+0x3c27960],ebx
  422171:	outs   dx,BYTE PTR ds:[esi]
  422172:	fstp   st(1)
  422174:	inc    ebx
  422175:	stos   BYTE PTR es:[edi],al
  422176:	or     dh,0x70
  422179:	dec    eax
  42217a:	cmp    al,0x73
  42217c:	add    BYTE PTR [ecx],ch
  42217e:	xchg   DWORD PTR [edi-0x69],esp
  422181:	outs   dx,BYTE PTR ds:[esi]
  422182:	mul    BYTE PTR [ebp+eax*4-0x7d]
  422186:	imul   esi,DWORD PTR [ebx],0x42c9cd03
  42218c:	loopne 0x4221a2
  42218e:	je     0x422111
  422190:	cmp    eax,0x56653b85
  422195:	(bad)
  422199:	add    ah,BYTE PTR [edi]
  42219b:	mov    dl,0x7c
  42219d:	mov    WORD PTR [ebx],?
  42219f:	mov    ecx,0x5dd8c479
  4221a4:	stos   BYTE PTR es:[edi],al
  4221a5:	sub    al,0x89
  4221a7:	dec    edx
  4221a8:	pop    esp
  4221a9:	mov    bh,0x31
  4221ab:	outs   dx,BYTE PTR ds:[esi]
  4221ac:	and    BYTE PTR [ecx-0x2965089b],dl
  4221b2:	pushf  
  4221b3:	pop    eax
  4221b4:	in     al,dx
  4221b5:	sub    BYTE PTR [ebx-0x6dc27476],ch
  4221bb:	clc    
  4221bc:	mov    ecx,0xe7d1af4
  4221c1:	das    
  4221c2:	gs call 0x50bec403
  4221c8:	and    al,0x8e
  4221ca:	es ss mov ebp,0xda954de7
  4221d1:	into   
  4221d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221d3:	jmp    0x5342:0xd41d7fad
  4221da:	enter  0xf088,0x3c
  4221de:	or     al,0xe6
  4221e0:	test   al,0x51
  4221e2:	sbb    DWORD PTR [ecx+0x74],esp
  4221e5:	leave  
  4221e6:	retf   
  4221e7:	adc    cl,BYTE PTR [ebp-0x5f]
  4221ea:	jmp    0x67846a49
  4221ef:	push   edx
  4221f0:	in     al,0x33
  4221f2:	xor    ch,BYTE PTR [esp+ebx*4]
  4221f5:	jnp    0x42224e
  4221f7:	daa    
  4221f8:	lock cmc 
  4221fa:	inc    ebx
  4221fb:	mov    ecx,0x81a0ba1e
  422200:	hlt    
  422201:	je     0x42224a
  422203:	jbe    0x4221cf
  422205:	dec    esp
  422206:	mov    bl,0x80
  422208:	mov    cl,0x55
  42220a:	add    edx,ebx
  42220c:	or     al,0x35
  42220e:	pop    ecx
  42220f:	int    0xa1
  422211:	pop    ss
  422212:	dec    eax
  422213:	je     0x4221c5
  422215:	jno    0x422279
  422217:	xor    eax,0x9b20a810
  42221c:	dec    ebp
  42221d:	adc    DWORD PTR [edx-0x1b032910],esi
  422223:	jno    0x422256
  422225:	(bad)  
  422226:	pop    ds
  422227:	stos   BYTE PTR es:[edi],al
  422228:	sub    BYTE PTR [esi-0x4e],bl
  42222b:	or     DWORD PTR [edx+0x47],ebp
  42222e:	and    al,BYTE PTR [ecx-0xa]
  422231:	xchg   BYTE PTR ds:0x6f16ab63,bh
  422237:	and    al,0x44
  422239:	or     al,0xb2
  42223b:	jnp    0x42223e
  42223d:	out    0x2c,al
  42223f:	outs   dx,DWORD PTR ds:[esi]
  422240:	leave  
  422241:	push   edx
  422242:	fldenv [edx]
  422244:	or     al,0xd1
  422246:	cmp    ebx,DWORD PTR [ebx]
  422248:	mov    eax,ds:0xab53e612
  42224d:	add    BYTE PTR [edx+0x79],ah
  422250:	pop    ebp
  422251:	add    eax,0x8d523ed8
  422256:	mov    eax,0xacbd5b75
  42225b:	mov    dl,0x5f
  42225d:	sub    DWORD PTR [ebp+0x3e],ecx
  422260:	stos   BYTE PTR es:[edi],al
  422261:	addr16 jnp 0x422230
  422264:	out    0xc8,al
  422266:	sub    al,0x5
  422268:	jmp    0x422263
  42226a:	aad    0x4e
  42226c:	dec    ebp
  42226d:	shr    BYTE PTR ds:0x84ea2cb7,1
  422273:	xchg   ebp,eax
  422274:	push   edi
  422275:	jno    0x42221f
  422277:	stos   BYTE PTR es:[edi],al
  422278:	and    BYTE PTR [edi+0x60f5fe15],al
  42227e:	popf   
  42227f:	pop    ds
  422280:	repz rcr DWORD PTR [bp+di+0x4cf2],cl
  422286:	pop    eax
  422287:	sub    dh,BYTE PTR [esi+0x4d]
  42228a:	lock mov ds:0x358fbd55,eax
  422290:	cmp    DWORD PTR [eax+0x3f],0x1f
  422294:	shl    DWORD PTR [edx],cl
  422296:	in     eax,0x48
  422298:	(bad)  
  422299:	das    
  42229a:	fs cs mov edx,0xa8a04b4f
  4222a1:	ins    DWORD PTR es:[edi],dx
  4222a2:	adc    dl,al
  4222a4:	enter  0xa94c,0x27
  4222a8:	hlt    
  4222a9:	xor    eax,0xf259d49f
  4222ae:	arpl   WORD PTR [eax+0x6e38fbd4],bx
  4222b4:	xchg   esp,eax
  4222b5:	xor    al,0x9b
  4222b7:	stc    
  4222b8:	cmp    DWORD PTR [eax+0x23],ecx
  4222bb:	jmp    FWORD PTR [ebx]
  4222bd:	and    cl,ch
  4222bf:	inc    esp
  4222c0:	add    al,0xa3
  4222c2:	xlat   BYTE PTR ds:[ebx]
  4222c3:	dec    esp
  4222c4:	daa    
  4222c5:	sub    ah,BYTE PTR [eax-0x77]
  4222c8:	lock push ss
  4222ca:	in     eax,0xcc
  4222cc:	mov    dh,0x8a
  4222ce:	shr    ebp,cl
  4222d0:	dec    edi
  4222d1:	imul   ecx,esp,0x2d
  4222d4:	and    DWORD PTR [ecx],0xc125208d
  4222da:	mov    edi,0x67eac450
  4222df:	test   eax,0xe323c994
  4222e4:	and    dh,ah
  4222e6:	ja     0x42232f
  4222e8:	inc    edi
  4222e9:	call   0xcb47f568
  4222ee:	jmp    0x1f5b:0x48f2c6e9
  4222f5:	or     esp,edx
  4222f7:	scas   eax,DWORD PTR es:[edi]
  4222f8:	loop   0x4222b4
  4222fa:	lock mov ah,0x94
  4222fd:	jle    0x42233c
  4222ff:	iret   
  422300:	dec    ebp
  422301:	test   DWORD PTR [ebx+0x5323a342],esi
  422307:	mov    eax,0x7eb2ae89
  42230c:	xor    DWORD PTR [ecx],ecx
  42230e:	lods   eax,DWORD PTR ds:[esi]
  42230f:	mul    DWORD PTR [ebp-0x4c]
  422312:	and    al,0x5
  422314:	shl    DWORD PTR [ebp+0x6f3e08eb],cl
  42231a:	mov    cl,0x6b
  42231c:	dec    eax
  42231d:	mov    ch,0x3d
  42231f:	loop   0x4222da
  422321:	fisubr DWORD PTR [ebx]
  422323:	mov    BYTE PTR [ecx],cl
  422325:	push   edi
  422326:	into   
  422327:	mov    bh,0x9d
  422329:	stc    
  42232a:	sbb    al,0x8d
  42232c:	sbb    ebx,DWORD PTR [eax+ecx*1]
  42232f:	add    eax,DWORD PTR [edi]
  422331:	cmp    bh,BYTE PTR [bx+di-0x7982]
  422336:	ds jmp 0x44c56aa3
  42233c:	aas    
  42233d:	lods   eax,DWORD PTR ds:[esi]
  42233e:	iret   
  42233f:	ror    BYTE PTR [edi],1
  422341:	int3   
  422342:	pop    esp
  422343:	scas   al,BYTE PTR es:[edi]
  422344:	cmp    DWORD PTR [edi-0x3b],0x2e
  422348:	sub    al,0x7a
  42234a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42234b:	push   eax
  42234c:	cwde   
  42234d:	and    esp,edx
  42234f:	sub    ebx,DWORD PTR [esi]
  422351:	push   es
  422352:	imul   edx,ebx,0x4f
  422355:	sub    al,0x36
  422357:	out    0x78,al
  422359:	mov    ebx,0xcba211be
  42235e:	adc    eax,0x45a49494
  422363:	jle    0x422317
  422365:	xchg   ecx,eax
  422366:	test   eax,0xb5154091
  42236b:	or     ecx,0x41
  42236e:	mov    ebp,0x89bc7bea
  422373:	add    bh,BYTE PTR [eax-0x2]
  422376:	in     al,dx
  422377:	mov    ds:0x1000f7f,eax
  42237c:	(bad)  
  42237d:	push   edi
  42237e:	sti    
  42237f:	sub    ebx,DWORD PTR [ebp+0x3d]
  422382:	cwde   
  422383:	mov    ch,BYTE PTR [edx+0x443c7637]
  422389:	fdivr  DWORD PTR [esi-0x56f70529]
  42238f:	xor    ch,BYTE PTR [esi-0x46]
  422392:	sti    
  422393:	cld    
  422394:	jnp    0x4223f8
  422396:	scas   eax,DWORD PTR es:[edi]
  422397:	or     al,BYTE PTR [ebp-0x38]
  42239a:	and    al,al
  42239c:	and    ah,BYTE PTR [eax]
  42239e:	sub    al,0xd
  4223a0:	enter  0xe2b2,0x25
  4223a4:	sub    ebp,DWORD PTR [ecx-0x4aacf5d4]
  4223aa:	div    cl
  4223ac:	hlt    
  4223ad:	bound  edx,QWORD PTR [eax-0x6]
  4223b0:	leave  
  4223b1:	inc    edi
  4223b2:	aaa    
  4223b3:	mov    WORD PTR [ecx-0x45],?
  4223b6:	sbb    edx,DWORD PTR [edi]
  4223b8:	push   eax
  4223b9:	in     eax,0x34
  4223bb:	retf   
  4223bc:	push   esi
  4223bd:	push   edx
  4223be:	or     DWORD PTR [esi],esp
  4223c0:	cmp    ebp,DWORD PTR [edi-0x4522eb73]
  4223c6:	cmp    edx,esp
  4223c8:	dec    ecx
  4223c9:	cs cmp al,0x87
  4223cc:	shr    BYTE PTR [ebp-0x77],cl
  4223cf:	out    0x85,eax
  4223d1:	push   ebp
  4223d2:	push   es
  4223d3:	dec    ebp
  4223d4:	or     al,0xda
  4223d6:	xchg   edi,eax
  4223d7:	jge    0x422415
  4223d9:	mov    eax,0x9bb071f1
  4223de:	jecxz  0x42244a
  4223e0:	leave  
  4223e1:	push   0xffffffcf
  4223e3:	lods   al,BYTE PTR ds:[esi]
  4223e4:	cmp    al,0x7b
  4223e6:	ds aaa 
  4223e8:	cli    
  4223e9:	(bad)  
  4223ea:	sahf   
  4223eb:	jmp    0x42240a
  4223ed:	jle    0x4223f5
  4223ef:	(bad)  
  4223f1:	shl    edx,cl
  4223f3:	mov    bh,0xef
  4223f5:	mov    al,ds:0xc5214f0c
  4223fa:	test   bl,0x1e
  4223fd:	dec    esp
  4223fe:	xor    bh,BYTE PTR [edi+eax*8]
  422401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422402:	adc    eax,0x8d75753
  422407:	add    DWORD PTR [ebx+eiz*1],esp
  42240a:	imul   esi,DWORD PTR [esi+ebx*1-0x4757b1e],0x40
  422412:	jae    0x4223e1
  422414:	cmp    al,0xf0
  422416:	adc    BYTE PTR [eax-0x268c590],0x10
  42241d:	mov    edx,0x2b1e3958
  422422:	lock shl DWORD PTR cs:[eax-0x41],0x26
  422428:	mov    ecx,0xc4b14b11
  42242d:	dec    DWORD PTR [eax]
  42242f:	inc    ecx
  422430:	test   eax,0xfcc57ef2
  422435:	sub    BYTE PTR [edi],0xe7
  422438:	xchg   BYTE PTR [ecx+0x6ccba153],ch
  42243e:	sbb    BYTE PTR [esi],bl
  422440:	pop    ds
  422441:	push   es
  422442:	inc    edi
  422443:	sti    
  422444:	lahf   
  422445:	movaps XMMWORD PTR [eax+0x71e1dd4a],xmm0
  42244c:	sub    eax,DWORD PTR [edx+0xd]
  42244f:	adc    BYTE PTR [edi],bl
  422451:	add    eax,0xa0ae518
  422456:	jo     0x4223ee
  422458:	sub    ch,ah
  42245a:	aad    0x23
  42245c:	popf   
  42245d:	test   dl,bl
  42245f:	fwait
  422460:	inc    edi
  422461:	pop    eax
  422462:	loopne 0x42243d
  422464:	and    eax,0x93f23465
  422469:	sti    
  42246a:	imul   edx,DWORD PTR [edi+ebp*2+0x4cd894dc],0x7ce293a9
  422475:	(bad)  
  422476:	stos   DWORD PTR es:[edi],eax
  422477:	in     al,dx
  422478:	inc    esi
  422479:	sar    DWORD PTR [eax-0x20f256b0],1
  42247f:	sbb    BYTE PTR [edx-0x13],dl
  422482:	sub    eax,0x1980b16e
  422487:	popa   
  422488:	ins    BYTE PTR es:[edi],dx
  422489:	in     eax,0x59
  42248b:	xor    edi,DWORD PTR [edx-0xc]
  42248e:	jo     0x42243c
  422490:	xor    eax,0xc3e6fc41
  422495:	mov    ah,0xfd
  422497:	mov    ds:0x255e4589,eax
  42249c:	pop    ebp
  42249d:	fist   WORD PTR [esi-0x19]
  4224a0:	xchg   esi,eax
  4224a1:	(bad)  
  4224a2:	fs jl  0x422425
  4224a5:	pop    edi
  4224a6:	mov    edx,0x3c385c38
  4224ab:	pop    esp
  4224ac:	pop    ss
  4224ad:	sahf   
  4224ae:	mov    edx,0xca5430b8
  4224b3:	shl    edi,1
  4224b5:	pop    edi
  4224b6:	dec    ebx
  4224b7:	jg     0x422488
  4224b9:	enter  0x965b,0x79
  4224bd:	int    0x7d
  4224bf:	arpl   bp,cx
  4224c1:	push   edi
  4224c2:	scas   al,BYTE PTR es:[edi]
  4224c3:	lds    eax,FWORD PTR [esi+0x6c]
  4224c6:	loopne 0x42251c
  4224c8:	pop    ss
  4224c9:	add    DWORD PTR [ecx],edi
  4224cb:	adc    DWORD PTR [ebp+eax*8-0x6b09268e],ebx
  4224d2:	mov    ecx,0x5b3ee45
  4224d7:	inc    edi
  4224d8:	mov    ebp,0xb968e33
  4224dd:	jbe    0x4224af
  4224df:	dec    eax
  4224e0:	outs   dx,DWORD PTR ds:[esi]
  4224e1:	xor    eax,0xd2139b7
  4224e6:	pop    edi
  4224e7:	shr    BYTE PTR [ecx+0x4d51c7d0],cl
  4224ed:	sub    eax,0xc82fb269
  4224f2:	pop    ebp
  4224f3:	push   ss
  4224f4:	add    BYTE PTR [edx],0x49
  4224f7:	mov    ebp,0xdbd486ac
  4224fc:	dec    ebp
  4224fd:	test   al,0xa1
  4224ff:	or     DWORD PTR [ecx+esi*4],esp
  422502:	pusha  
  422503:	clc    
  422504:	inc    ebx
  422505:	fdivr  st,st(0)
  422507:	clc    
  422508:	sahf   
  422509:	mov    al,ds:0x3c62ef2c
  42250e:	les    esp,FWORD PTR [ebp-0x19]
  422511:	ret    0x89af
  422514:	xchg   BYTE PTR [esi],dh
  422516:	test   DWORD PTR [ecx+esi*4-0x165da064],ecx
  42251d:	or     eax,0x7414d1d5
  422522:	mov    esp,0x631fe8c9
  422527:	mov    dl,0xf7
  422529:	pop    eax
  42252a:	mov    ebx,0x6bcea2ad
  42252f:	cdq    
  422530:	or     BYTE PTR [ebx-0x2a],dh
  422533:	sahf   
  422534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422535:	adc    BYTE PTR es:[edi+0x28011cb8],dl
  42253c:	push   0x65
  42253e:	daa    
  42253f:	cmp    ch,BYTE PTR [edx+0x49]
  422542:	xchg   ebp,eax
  422543:	inc    ebp
  422544:	xchg   esp,eax
  422545:	pop    esi
  422546:	mov    ecx,0xcd957587
  42254b:	adc    BYTE PTR [edx],bl
  42254d:	or     eax,0xdecede81
  422552:	mov    ds:0x9f4de271,eax
  422557:	repz jg 0x422564
  42255a:	jb     0x4224f2
  42255c:	sti    
  42255d:	xor    ebx,ebx
  42255f:	mov    es,WORD PTR [esi+0x7830b049]
  422565:	sar    DWORD PTR [ecx+eiz*8-0x3de25efb],cl
  42256c:	push   ss
  42256d:	test   esp,0x735f1905
  422573:	jo     0x42252b
  422575:	sub    al,0xbe
  422577:	js     0x422579
  422579:	mov    ah,0xcf
  42257b:	and    dh,BYTE PTR [edx+0x56d3e556]
  422581:	or     DWORD PTR [eax],ebx
  422583:	add    BYTE PTR ds:0x8473a78b,0x16
  42258a:	out    dx,eax
  42258b:	aad    0x5b
  42258d:	shl    eax,cl
  42258f:	cmp    BYTE PTR [edi],bh
  422591:	xor    bl,dh
  422593:	sbb    BYTE PTR [eax],ch
  422595:	outs   dx,DWORD PTR ds:[esi]
  422596:	push   ebp
  422597:	inc    ebp
  422598:	jbe    0x422618
  42259a:	mov    bh,ch
  42259c:	scas   al,BYTE PTR es:[edi]
  42259d:	std    
  42259e:	xor    BYTE PTR [eax],bh
  4225a0:	adc    DWORD PTR [ebp+0x18],eax
  4225a3:	and    eax,0xc276bb76
  4225a8:	sti    
  4225a9:	(bad)  
  4225aa:	mov    esp,0xc802db36
  4225af:	(bad)  
  4225b0:	cmp    eax,0x851aa873
  4225b5:	sti    
  4225b6:	mov    WORD PTR [esp+edi*1+0x38],cs
  4225ba:	cmp    ch,dl
  4225bc:	in     eax,0xc4
  4225be:	dec    ebp
  4225bf:	jl     0x42254a
  4225c1:	dec    ebp
  4225c2:	jbe    0x422570
  4225c4:	mov    ds:0x7c6fc765,al
  4225c9:	sbb    ch,BYTE PTR [ecx-0x3ee0e710]
  4225cf:	and    edi,DWORD PTR [ebx+0x7b]
  4225d2:	push   edi
  4225d3:	add    ebx,edx
  4225d5:	or     BYTE PTR [edx],dh
  4225d7:	cli    
  4225d8:	cs mov dh,0x45
  4225db:	jl     0x42257a
  4225dd:	lahf   
  4225de:	xchg   ebx,eax
  4225df:	add    bl,cl
  4225e1:	jne    0x4225b8
  4225e3:	sbb    eax,0x6211957b
  4225e8:	jl     0x4225b5
  4225ea:	and    ah,BYTE PTR ds:0x3d8fcba1
  4225f0:	pop    ds
  4225f1:	pop    ax
  4225f3:	xlat   BYTE PTR ds:[ebx]
  4225f4:	fcmovne st,st(2)
  4225f6:	sar    BYTE PTR [ebx+edi*8+0x70],0x13
  4225fb:	xor    al,0xed
  4225fd:	jecxz  0x422672
  4225ff:	jg     0x42258d
  422601:	cld    
  422602:	cs jp  0x4225eb
  422605:	and    BYTE PTR [edi],al
  422607:	jmp    0x2026:0x693346ee
  42260e:	arpl   WORD PTR [edx-0x7da8e7aa],cx
  422614:	(bad)  
  422615:	inc    eax
  422616:	or     DWORD PTR [esi-0xef1fd00],eax
  42261c:	or     bh,BYTE PTR [ebx-0x417056d3]
  422622:	sub    ebp,DWORD PTR [ebx+esi*2]
  422625:	jo     0x422631
  422627:	mov    al,ds:0x8cab99fa
  42262c:	mov    eax,DWORD PTR [edi]
  42262e:	mov    eax,0x4865393e
  422633:	mov    bh,0x14
  422635:	outs   dx,BYTE PTR ds:[esi]
  422636:	jge    0x422625
  422638:	daa    
  422639:	fbld   TBYTE PTR [edi+0x4e2f9902]
  42263f:	lods   al,BYTE PTR ds:[esi]
  422640:	sub    DWORD PTR [eax+edx*1-0x9b2dba],esp
  422647:	in     eax,0xf8
  422649:	sub    BYTE PTR [edi],al
  42264b:	mov    ebp,0xa9d2cecd
  422650:	sub    dh,ch
  422652:	mov    esi,0xabd73e49
  422657:	cs mov ah,0x9d
  42265a:	pop    ss
  42265b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42265c:	test   al,0x6
  42265e:	xor    eax,0x77d22b99
  422663:	(bad)  
  422664:	cli    
  422665:	rcr    bh,cl
  422667:	dec    ebx
  422668:	or     bl,BYTE PTR [edi+0x5f148d1a]
  42266e:	push   ecx
  42266f:	dec    eax
  422670:	arpl   WORD PTR [esi+0x7d],sp
  422673:	popa   
  422674:	push   0xffffffd1
  422676:	and    ebp,DWORD PTR [edi-0x4dbf818d]
  42267c:	xor    dl,ah
  42267e:	mov    cs,WORD PTR [eax+ebx*2+0x57]
  422682:	lock pop ebp
  422684:	cmp    dh,BYTE PTR [ebx+esi*2]
  422687:	rcl    BYTE PTR [eax+0x6b34e1e1],0x89
  42268e:	mov    ds:0x6a7bd8b5,al
  422693:	rol    BYTE PTR [ebp-0x74],1
  422696:	add    BYTE PTR [ecx],ch
  422698:	dec    esp
  422699:	mov    BYTE PTR [ebp*4-0x345cc6e8],al
  4226a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a1:	addr16 inc edi
  4226a3:	push   esi
  4226a4:	jle    0x422684
  4226a6:	gs mov eax,0x86d891cf
  4226ac:	mov    al,0x3e
  4226ae:	ret    
  4226af:	or     BYTE PTR [ebx],cl
  4226b1:	xor    DWORD PTR [esi-0x58ecb730],edx
  4226b7:	ret    0xffdc
  4226ba:	arpl   WORD PTR [ebp-0x5347d26b],bx
  4226c0:	pop    ds
  4226c1:	sbb    BYTE PTR [ebx],ch
  4226c3:	pop    ecx
  4226c4:	xor    al,0x2a
  4226c6:	lods   eax,DWORD PTR ds:[esi]
  4226c7:	pop    ds
  4226c8:	dec    esi
  4226c9:	scas   al,BYTE PTR es:[edi]
  4226ca:	frstor [eax+0x7e]
  4226cd:	fistp  WORD PTR [esi]
  4226cf:	mov    al,ds:0x6ea9847f
  4226d4:	pop    edx
  4226d5:	mov    bh,0xd5
  4226d7:	xchg   ebp,eax
  4226d8:	xchg   ebp,eax
  4226d9:	push   cs
  4226da:	sub    eax,0x6073d624
  4226df:	lock jl 0x422685
  4226e2:	inc    esp
  4226e3:	test   DWORD PTR [ecx+edi*4+0x6],esp
  4226e7:	cdq    
  4226e8:	shl    BYTE PTR [eax],cl
  4226ea:	into   
  4226eb:	sub    DWORD PTR [ecx+esi*2+0x5a],eax
  4226ef:	mov    edi,0x83298e0f
  4226f4:	jnp    0x4226ff
  4226f6:	loopne 0x422702
  4226f8:	mov    eax,ds:0xdf2150fa
  4226fd:	mov    ds:0x95b18d43,eax
  422702:	int3   
  422703:	imul   eax,DWORD PTR [eax],0x46
  422706:	out    dx,eax
  422707:	in     al,0x40
  422709:	mov    WORD PTR [ebp-0x41e6ea76],?
  42270f:	sti    
  422710:	cdq    
  422711:	dec    ebx
  422712:	call   0x614d:0x7c58d615
  422719:	push   ds
  42271a:	xor    eax,ebp
  42271c:	mov    BYTE PTR [edi+0x72a213ef],bh
  422722:	adc    ch,dh
  422724:	sbb    DWORD PTR [edi+0x66a46fc9],edi
  42272a:	push   edx
  42272b:	xor    eax,0x23cd1311
  422730:	cmp    ch,dh
  422732:	add    eax,0x78cb0c23
  422737:	mov    BYTE PTR [ebx],dl
  422739:	cmp    BYTE PTR [edi],dh
  42273b:	test   BYTE PTR [edi+0x1a],dh
  42273e:	ja     0x42272f
  422740:	sbb    BYTE PTR [eax+0x5b],0x4b
  422744:	cmp    DWORD PTR [ebp-0x1f4fdc89],ebp
  42274a:	sub    eax,0xd807eded
  42274f:	das    
  422750:	cmp    ch,BYTE PTR [esi+0x7f]
  422753:	aam    0xd2
  422755:	cmp    edx,esi
  422757:	and    al,BYTE PTR [esi]
  422759:	or     eax,0xa3e8c689
  42275e:	sbb    ah,BYTE PTR [edx-0x1]
  422761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422762:	out    dx,al
  422763:	add    edi,edx
  422765:	pop    ds
  422766:	clc    
  422767:	jecxz  0x4227d3
  422769:	scas   al,BYTE PTR es:[edi]
  42276a:	sbb    eax,0x83022aa
  42276f:	add    al,0x81
  422771:	mov    edi,0x9409a281
  422776:	sbb    eax,0xbcab2f93
  42277b:	pop    ebp
  42277c:	repnz xor eax,0x1009d222
  422782:	xchg   bp,ax
  422784:	repz imul esi,DWORD PTR ss:[edx-0x39],0x78
  42278a:	pop    ss
  42278b:	je     0x42278d
  42278d:	test   BYTE PTR [edx+0x11],bl
  422790:	aas    
  422791:	push   esi
  422792:	adc    eax,0x649fde70
  422797:	mov    al,0x88
  422799:	or     ch,BYTE PTR [eax]
  42279b:	jp     0x42275a
  42279d:	int3   
  42279e:	aas    
  42279f:	push   eax
  4227a0:	int3   
  4227a1:	stos   BYTE PTR es:[edi],al
  4227a2:	mov    edi,ecx
  4227a4:	ror    dh,1
  4227a6:	jb     0x422819
  4227a8:	inc    esp
  4227a9:	mov    dh,0x9f
  4227ab:	fisub  DWORD PTR [ebx+0x74de2129]
  4227b1:	(bad)  
  4227b2:	call   0xe8730615
  4227b7:	push   0x4b
  4227b9:	pop    edx
  4227ba:	jae    0x4227ee
  4227bc:	mov    bh,0x43
  4227be:	dec    esi
  4227bf:	repnz pop ss
  4227c1:	sbb    al,0x8a
  4227c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c4:	mov    esp,0x26d7d0e1
  4227c9:	xrelease mov DWORD PTR [ecx-0x14fa0180],ecx
  4227d0:	xor    dl,BYTE PTR [eax+0x3c824e1e]
  4227d6:	mov    dh,0xb5
  4227d8:	sub    eax,0x1e4352b
  4227dd:	and    al,0x1a
  4227df:	cmp    al,0xc7
  4227e1:	leave  
  4227e2:	adc    al,cl
  4227e4:	lahf   
  4227e5:	pop    DWORD PTR [esi-0x69]
  4227e8:	aam    0x12
  4227ea:	jns    0x4227e2
  4227ec:	neg    BYTE PTR [ecx]
  4227ee:	mov    eax,ds:0x795815d8
  4227f3:	cwde   
  4227f4:	jmp    0x3140fbae
  4227f9:	jbe    0x422850
  4227fb:	iret   
  4227fc:	stc    
  4227fd:	retf   0xc9fb
  422800:	jo     0x4227f3
  422802:	pop    edi
  422803:	add    al,0xc0
  422805:	mov    eax,ds:0x9049feca
  42280a:	inc    edi
  42280b:	cmp    edx,DWORD PTR [ecx]
  42280d:	push   ds
  42280e:	in     al,dx
  42280f:	add    al,dl
  422811:	xchg   esp,eax
  422812:	adc    edi,edx
  422814:	sbb    al,0xd1
  422816:	rol    DWORD PTR [ecx+ebp*1],0xb9
  42281a:	fcom   DWORD PTR [esi]
  42281c:	push   DWORD PTR [eax+0x32]
  42281f:	test   BYTE PTR [edx],ch
  422821:	dec    esp
  422822:	ret    
  422823:	jno    0x4227f3
  422825:	cmp    ebx,eax
  422827:	mov    ah,0x14
  422829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42282a:	call   0x25ebf982
  42282f:	push   es
  422830:	sbb    ah,dh
  422832:	stos   BYTE PTR es:[edi],al
  422833:	je     0x4227d7
  422835:	shl    BYTE PTR [esi],cl
  422837:	retf   
  422838:	dec    edx
  422839:	std    
  42283a:	inc    edx
  42283b:	xor    esp,ecx
  42283d:	(bad)  
  42283e:	fwait
  42283f:	cmp    DWORD PTR [ecx-0x36],edx
  422842:	xor    ecx,DWORD PTR [ebx+0x6f]
  422845:	rcl    ebp,cl
  422847:	inc    ecx
  422848:	dec    edi
  42284a:	mov    al,0xeb
  42284c:	fldcw  WORD PTR [ebp+0x40]
  42284f:	inc    eax
  422850:	(bad)  
  422851:	mov    eax,0xa5ea598b
  422856:	(bad)  
  422857:	push   0x5d
  422859:	sbb    al,0x6c
  42285b:	stos   DWORD PTR es:[edi],eax
  42285c:	add    al,0xbe
  42285e:	daa    
  42285f:	and    al,0x60
  422861:	inc    ebx
  422862:	les    ebp,FWORD PTR [ebp-0x13393d7e]
  422868:	push   ecx
  422869:	cmp    BYTE PTR [edi-0x2912666f],dl
  42286f:	rol    BYTE PTR [esi+0x6ddfcd64],0x4b
  422876:	sub    dl,bh
  422878:	(bad)  
  422879:	(bad)  
  42287a:	xchg   ebx,eax
  42287b:	ja     0x422854
  42287d:	pop    edx
  42287e:	jle    0x422881
  422880:	mul    DWORD PTR [esi]
  422882:	mov    eax,0x4e85e51f
  422887:	push   edx
  422888:	xor    al,0xc8
  42288a:	mov    eax,0xe4b86b1d
  42288f:	xor    eax,0xb415393a
  422894:	lods   al,BYTE PTR ds:[esi]
  422895:	cwde   
  422896:	cmp    BYTE PTR [eax+0x59f24307],bh
  42289c:	sub    DWORD PTR [eax],ebp
  42289e:	in     al,dx
  42289f:	jecxz  0x4228d3
  4228a1:	mov    ebx,0xda4a7482
  4228a6:	test   eax,0xa1544621
  4228ab:	sbb    al,0x57
  4228ad:	sysret 
  4228af:	sub    ebp,edx
  4228b1:	fsin   
  4228b3:	sub    al,0x1
  4228b5:	retf   0xacd1
  4228b8:	(bad)  
  4228b9:	and    edx,DWORD PTR [ebx+ebx*2-0xe003e53]
  4228c0:	adc    eax,0x358dd95d
  4228c5:	nop
  4228c6:	or     al,0x8e
  4228c8:	push   edx
  4228c9:	adc    edx,ecx
  4228cb:	pop    esi
  4228cc:	jb     0x422851
  4228ce:	mov    edi,0xbbea94a8
  4228d3:	adc    eax,DWORD PTR [edi+edx*8]
  4228d6:	clc    
  4228d7:	inc    ecx
  4228d8:	ds xchg ecx,eax
  4228da:	fwait
  4228db:	mov    ch,0x95
  4228dd:	test   ebx,eax
  4228df:	out    0xaa,eax
  4228e1:	aas    
  4228e2:	xor    BYTE PTR [ebx-0x691e4319],bh
  4228e8:	lock mov edx,0x92ab5128
  4228ee:	in     al,dx
  4228ef:	pop    ds
  4228f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228f1:	ins    BYTE PTR es:[edi],dx
  4228f2:	or     ah,BYTE PTR [eax+edx*2+0x42403a50]
  4228f9:	sub    edx,edx
  4228fb:	call   0xcb7e:0xc8ba141
  422902:	out    0xa2,al
  422904:	pop    es
  422905:	xchg   DWORD PTR [ecx+0x329817a9],esi
  42290b:	loopne 0x4228e1
  42290d:	fistp  QWORD PTR [esi-0x56]
  422910:	jae    0x422948
  422912:	pop    edi
  422913:	cmp    DWORD PTR [ecx+ecx*4-0x3a],ebp
  422917:	jecxz  0x4228a3
  422919:	pop    esi
  42291a:	lock add ecx,esi
  42291d:	xor    BYTE PTR [edi-0x73],bl
  422920:	xchg   esp,eax
  422921:	pushf  
  422922:	es lock pop esp
  422925:	fwait
  422926:	sbb    BYTE PTR [edi],0x36
  422929:	dec    ebp
  42292a:	test   eax,0x6d4ed8c1
  42292f:	retf   0xa36f
  422932:	cmp    al,0x87
  422934:	push   edi
  422935:	or     esi,DWORD PTR [edi+0x44]
  422938:	push   edi
  422939:	icebp  
  42293a:	push   ebx
  42293b:	sti    
  42293c:	cmp    edx,ebx
  42293e:	push   0x23c8e694
  422943:	jno    0x4228f1
  422945:	dec    eax
  422946:	push   0xe9af611
  42294b:	iret   
  42294c:	jae    0x42290c
  42294e:	adc    eax,0xa2fdfbb5
  422953:	repnz arpl WORD PTR [edx],dx
  422956:	retf   0x9c58
  422959:	ds out dx,eax
  42295b:	gs push esp
  42295d:	les    ebx,FWORD PTR [edx-0x75223e7]
  422963:	aaa    
  422964:	push   cs
  422965:	sbb    ecx,DWORD PTR [ebx+esi*1]
  422968:	js     0x4229ac
  42296a:	std    
  42296b:	das    
  42296c:	dec    ebp
  42296d:	inc    edi
  42296e:	test   eax,0x9b242b
  422973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422974:	and    al,0x3c
  422976:	pop    eax
  422977:	popa   
  422978:	inc    ecx
  422979:	xor    al,0x4d
  42297b:	xchg   ebp,eax
  42297c:	in     eax,0x16
  42297e:	and    eax,0xe8856547
  422983:	shr    ecx,cl
  422985:	popf   
  422986:	(bad)  
  422987:	and    al,0x44
  422989:	call   0xf76028be
  42298e:	jle    0x4229b7
  422990:	retf   0x1849
  422993:	call   0x97119e30
  422998:	retf   0xe16e
  42299b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42299c:	cmp    bh,BYTE PTR [ebx+0x2c]
  42299f:	push   ecx
  4229a0:	outs   dx,BYTE PTR ds:[esi]
  4229a1:	jae    0x4229f5
  4229a3:	ror    BYTE PTR [ecx-0x1042cab5],1
  4229a9:	gs ins BYTE PTR es:[edi],dx
  4229ab:	les    ebp,FWORD PTR ds:0x56686fbe
  4229b1:	and    BYTE PTR [ebx-0xb],bh
  4229b4:	pop    eax
  4229b5:	loope  0x4229da
  4229b7:	scas   eax,DWORD PTR es:[edi]
  4229b8:	stos   DWORD PTR es:[edi],eax
  4229b9:	in     al,dx
  4229ba:	lea    ecx,[ebx+0x58]
  4229bd:	and    edx,edx
  4229bf:	std    
  4229c0:	daa    
  4229c1:	add    ah,BYTE PTR [edi]
  4229c3:	sub    BYTE PTR [ecx+edi*2+0x18],0x16
  4229c8:	les    eax,FWORD PTR [esp+esi*8+0x1a84debf]
  4229cf:	cmp    DWORD PTR [ecx],eax
  4229d1:	repz xor al,0x34
  4229d4:	(bad)
  4229d8:	gs jns 0x422a08
  4229db:	lods   al,BYTE PTR ds:[esi]
  4229dc:	clc    
  4229dd:	popf   
  4229de:	pop    ebp
  4229df:	daa    
  4229e0:	jmp    0x422969
  4229e2:	lahf   
  4229e3:	in     eax,dx
  4229e4:	into   
  4229e5:	les    esp,FWORD PTR [ebx+eiz*8+0x69ce8bc2]
  4229ec:	push   0x17b37cf
  4229f1:	sbb    BYTE PTR [eax-0x47],dh
  4229f4:	xchg   ebp,eax
  4229f5:	pop    ss
  4229f6:	push   esp
  4229f7:	(bad)  
  4229f8:	mov    dh,0x36
  4229fa:	xor    BYTE PTR [edi+0x30900a2f],dl
  422a00:	repz xchg ecx,eax
  422a02:	pop    ss
  422a03:	shl    ah,0xbd
  422a06:	inc    ebx
  422a07:	or     DWORD PTR [ecx+0x35],ebx
  422a0a:	jns    0x4229f6
  422a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a0d:	fld    DWORD PTR [eax]
  422a0f:	mov    al,ds:0x26d44c51
  422a14:	pop    eax
  422a15:	add    bl,BYTE PTR [ecx+edi*1]
  422a18:	dec    ebx
  422a19:	sub    al,0x32
  422a1b:	and    ch,BYTE PTR [ebp+0x26f1278]
  422a21:	push   cs
  422a22:	push   eax
  422a23:	mov    edx,0x324a93fb
  422a28:	nop
  422a29:	xor    eax,0x16d15b33
  422a2e:	xor    eax,0xceb249e2
  422a33:	call   0xf11c4f32
  422a38:	fs jmp 0xd1c:0x7320480d
  422a40:	sub    eax,0xeedba6b
  422a45:	jle    0x4229f7
  422a47:	add    ecx,ebx
  422a49:	out    dx,al
  422a4a:	cmp    DWORD PTR [ebx+0x2377bee4],ebx
  422a50:	ffree  st(3)
  422a52:	inc    ecx
  422a53:	push   ds
  422a54:	xor    BYTE PTR [edx-0x6c],0x19
  422a58:	mov    ch,0xa
  422a5a:	(bad)  
  422a5c:	int    0x3b
  422a5e:	(bad)  
  422a5f:	sbb    ah,BYTE PTR [ebx-0x443529dd]
  422a65:	or     DWORD PTR [ebx-0x3b],esi
  422a68:	ja     0x422adb
  422a6a:	mov    dh,0x10
  422a6c:	sub    eax,0x29c31d
  422a71:	pop    eax
  422a72:	xchg   edx,eax
  422a73:	xadd   ah,dl
  422a76:	cli    
  422a77:	rol    DWORD PTR [edi+0x7d],0x17
  422a7b:	nop
  422a7c:	and    al,0x20
  422a7e:	jl     0x422a04
  422a80:	jmp    0xe958:0x468983d3
  422a87:	dec    ebx
  422a88:	inc    ebp
  422a89:	les    eax,FWORD PTR [edx-0x52]
  422a8c:	cli    
  422a8d:	rol    BYTE PTR [edx],0x68
  422a90:	ins    BYTE PTR es:[edi],dx
  422a91:	je     0x422b03
  422a93:	or     al,ah
  422a95:	int    0xea
  422a97:	mov    ebp,0x129a43cc
  422a9c:	test   eax,0x769c38aa
  422aa1:	push   0x489aeb81
  422aa6:	adc    DWORD PTR [edx+0x15],ebx
  422aa9:	(bad)  
  422aaa:	jbe    0x422a6e
  422aac:	in     al,0xf2
  422aae:	jb     0x422a65
  422ab0:	add    eax,eax
  422ab2:	test   esi,eax
  422ab4:	add    BYTE PTR [eax-0x6e517ae5],ch
  422aba:	mov    esp,0xcfadbc22
  422abf:	mov    cl,0x61
  422ac1:	xor    edi,ebp
  422ac3:	adc    dl,ah
  422ac5:	sub    eax,0xeae1bc11
  422aca:	(bad)  
  422acb:	pop    eax
  422acd:	aas    
  422ace:	(bad)  
  422acf:	ret    0x32b
  422ad2:	pop    ss
  422ad3:	div    DWORD PTR [ebx-0x38]
  422ad6:	mov    ds:0x6146a4e6,eax
  422adb:	jmp    0xa410:0x4f9f0284
  422ae2:	inc    esi
  422ae3:	outs   dx,BYTE PTR ds:[esi]
  422ae4:	mov    ah,0xdd
  422ae6:	ins    BYTE PTR es:[edi],dx
  422ae7:	test   BYTE PTR [esi-0x60],bh
  422aea:	ds (bad) 
  422aec:	fcomip st,st(2)
  422aee:	inc    edx
  422aef:	sub    DWORD PTR [eax],ebx
  422af1:	ss inc esp
  422af3:	or     BYTE PTR [ebx+edx*4],ah
  422af6:	mov    ds:0x7ec448ca,al
  422afb:	das    
  422afc:	test   eax,0xeac21b8b
  422b01:	mov    ch,0x93
  422b03:	push   0x6fd35424
  422b08:	or     al,0x46
  422b0a:	inc    edi
  422b0b:	fistp  DWORD PTR [ebx]
  422b0d:	mov    bl,0x51
  422b0f:	imul   eax,edx,0x3032a921
  422b15:	in     al,0xbd
  422b17:	dec    ebx
  422b18:	mov    dl,0xf
  422b1a:	add    ch,BYTE PTR [esi-0xf]
  422b1d:	jmp    0x422b73
  422b1f:	in     eax,0x15
  422b21:	retf   
  422b22:	in     al,0x68
  422b24:	dec    ebx
  422b25:	dec    eax
  422b26:	popa   
  422b27:	cmp    esp,eax
  422b29:	dec    edx
  422b2a:	in     eax,0xb6
  422b2c:	test   DWORD PTR [ecx],0x62bf3db6
  422b32:	mov    eax,ds:0x3f1424e4
  422b37:	mov    ah,0x8e
  422b39:	xchg   edx,eax
  422b3a:	xor    eax,0xc8887f34
  422b3f:	inc    esi
  422b40:	iret   
  422b41:	repnz imul edi,esp,0xffffffe6
  422b45:	mov    dl,0xd9
  422b47:	mov    al,BYTE PTR [ebx]
  422b49:	dec    ebx
  422b4a:	js     0x422b32
  422b4c:	jg     0x422b92
  422b4e:	dec    esp
  422b4f:	mov    edx,0xfbfd5e50
  422b54:	rcl    ecx,0xce
  422b57:	add    eax,0xe70c18e
  422b5c:	(bad)  
  422b5e:	mov    ch,0xae
  422b60:	dec    ebp
  422b61:	push   eax
  422b62:	mov    ch,BYTE PTR [edx-0x3080e809]
  422b68:	mov    ch,0xea
  422b6a:	das    
  422b6b:	ins    DWORD PTR es:[edi],dx
  422b6c:	cli    
  422b6d:	cmp    esp,ecx
  422b6f:	cmp    bl,BYTE PTR [ebx+0x6d]
  422b72:	imul   edx,DWORD PTR [edi+0x3b],0x17
  422b76:	(bad)  
  422b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b78:	mov    BYTE PTR [ecx+0x2319a8ba],al
  422b7e:	pop    edx
  422b7f:	cmp    DWORD PTR [edi-0x48a8664b],0x74e318df
  422b89:	push   ss
  422b8a:	cmp    BYTE PTR [ebx-0x3d5999ac],al
  422b90:	mov    ds:0xa82bc930,al
  422b95:	sar    BYTE PTR [edx],1
  422b97:	sbb    eax,0xfb18ad7a
  422b9c:	mov    al,ds:0x26276920
  422ba1:	adc    ecx,DWORD PTR [ebx-0x3c]
  422ba4:	hlt    
  422ba5:	cmp    DWORD PTR [ecx],eax
  422ba7:	xor    edi,DWORD PTR [ebp-0xf]
  422baa:	dec    edi
  422bab:	and    ch,BYTE PTR [edx-0x2e]
  422bae:	pop    ebp
  422baf:	(bad)  
  422bb0:	mov    dh,0xb9
  422bb2:	push   ss
  422bb3:	mov    WORD PTR [edi+0xf4013fb],ss
  422bb9:	jb     0x422c22
  422bbb:	push   es
  422bbc:	mov    edi,0x34751eeb
  422bc1:	(bad)  
  422bc2:	retf   0xac76
  422bc5:	test   edx,eax
  422bc7:	je     0x422b51
  422bc9:	xor    al,0x45
  422bcb:	lock xor ah,BYTE PTR [eax]
  422bce:	sub    al,0x62
  422bd0:	adc    ebx,DWORD PTR [ebx-0x1b1d380a]
  422bd6:	(bad)  
  422bd8:	lahf   
  422bd9:	mov    DWORD PTR [edx+0xebff69e],ecx
  422bdf:	shl    ah,1
  422be1:	xor    DWORD PTR [ecx],esp
  422be3:	sub    DWORD PTR gs:[eax],esp
  422be6:	push   esi
  422be7:	aas    
  422be8:	das    
  422be9:	xchg   ebp,eax
  422bea:	inc    ecx
  422beb:	push   ds
  422bec:	(bad)  
  422bee:	xlat   BYTE PTR ds:[ebx]
  422bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bf0:	xchg   edi,eax
  422bf1:	push   edi
  422bf2:	mov    WORD PTR [eax-0x76],es
  422bf5:	retf   0x3ea1
  422bf8:	test   eax,0xf97c8327
  422bfd:	mov    BYTE PTR [edi+0x6d01eefd],bh
  422c03:	inc    esp
  422c04:	(bad)  
  422c05:	push   esi
  422c06:	mov    WORD PTR [ebx+0x29728105],es
  422c0c:	das    
  422c0d:	rol    BYTE PTR [eax-0x48f32f48],cl
  422c13:	cmp    eax,0xf0420c3e
  422c18:	jmp    0xe236:0xed500c64
  422c1f:	mov    esp,0xc4ad2802
  422c24:	in     al,dx
  422c25:	and    al,dl
  422c27:	xlat   BYTE PTR ds:[ebx]
  422c28:	and    DWORD PTR [edx*2+0x25bb690b],0x86675755
  422c33:	mov    eax,ebp
  422c35:	mov    bl,0xc0
  422c38:	mov    eax,ds:0xb373342e
  422c3d:	loopne 0x422bd4
  422c3f:	enter  0xca69,0x7f
  422c43:	mov    BYTE PTR [eax],0x64
  422c46:	or     BYTE PTR [edi+0x70],ch
  422c49:	ficom  WORD PTR [esi-0x77]
  422c4c:	pop    ecx
  422c4d:	mov    dl,0x60
  422c4f:	js     0x422c2c
  422c51:	pop    esi
  422c52:	out    dx,al
  422c53:	and    BYTE PTR [ebx],ah
  422c55:	mov    ah,0xb9
  422c57:	(bad)  
  422c58:	pop    ss
  422c59:	xchg   ebx,eax
  422c5a:	push   cs
  422c5b:	call   0x2fdd84af
  422c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c61:	(bad)  
  422c62:	int3   
  422c63:	pop    ss
  422c64:	jne    0x422cc5
  422c66:	inc    esp
  422c67:	push   esp
  422c68:	xchg   edx,eax
  422c69:	stc    
  422c6a:	or     dl,BYTE PTR [edi]
  422c6c:	and    DWORD PTR [edi],ebx
  422c6e:	int3   
  422c6f:	jmp    0x90da:0x5407e842
  422c76:	lods   al,BYTE PTR ds:[esi]
  422c77:	cli    
  422c78:	inc    ebx
  422c79:	dec    esp
  422c7a:	push   esi
  422c7b:	push   eax
  422c7c:	jno    0x422ce4
  422c7e:	in     eax,dx
  422c7f:	xchg   DWORD PTR [esi-0x7111c9f8],eax
  422c85:	mov    edx,0x158d1ffc
  422c8a:	int3   
  422c8b:	xchg   BYTE PTR [edx+0x9af6c6e],ah
  422c91:	es (bad) 
  422c93:	ror    BYTE PTR [edx],0x7e
  422c96:	xchg   edx,eax
  422c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c98:	in     eax,dx
  422c99:	sahf   
  422c9a:	cwde   
  422c9b:	dec    ebx
  422c9c:	retf   
  422c9d:	cmovb  esi,DWORD PTR [ebp+eax*8+0xc]
  422ca2:	sub    eax,0xb507fb24
  422ca7:	test   ecx,ebp
  422ca9:	and    eax,0xd5cd06a8
  422cae:	push   ecx
  422caf:	add    BYTE PTR ss:[ebx],bl
  422cb2:	inc    ebp
  422cb3:	jo     0x422d09
  422cb5:	hlt    
  422cb6:	mov    ch,0x5a
  422cb8:	inc    eax
  422cb9:	idiv   dh
  422cbb:	mov    dl,0x31
  422cbd:	shl    DWORD PTR [ebx-0x24],cl
  422cc0:	adc    eax,0x9ea9defe
  422cc5:	sbb    ecx,ebp
  422cc7:	daa    
  422cc8:	dec    edx
  422cc9:	aaa    
  422cca:	or     esi,DWORD PTR [esp+eax*2+0x0]
  422cce:	lods   al,BYTE PTR ds:[esi]
  422ccf:	inc    edx
  422cd0:	ds pop eax
  422cd2:	dec    edx
  422cd3:	cmp    BYTE PTR [esi],dl
  422cd5:	mov    eax,ds:0x6ae70ca4
  422cda:	mov    al,ds:0xaf65d895
  422cdf:	sti    
  422ce0:	idiv   DWORD PTR [edi-0x47]
  422ce3:	fsubr  st,st(7)
  422ce5:	mov    eax,ds:0xb12581ad
  422cea:	adc    al,0xf7
  422cec:	(bad)  
  422ced:	loopne 0x422c79
  422cef:	mov    ch,0xc3
  422cf1:	into   
  422cf2:	imul   esi,DWORD PTR [ebp+0x29],0x25
  422cf6:	mov    bh,0xd
  422cf8:	call   0x8186:0x2106ffc5
  422cff:	pop    ebp
  422d00:	je     0x422d62
  422d02:	in     al,0x12
  422d04:	push   es
  422d05:	into   
  422d06:	cmp    DWORD PTR [edi-0x467303a2],eax
  422d0c:	pop    edi
  422d0d:	adc    esi,edx
  422d0f:	out    dx,al
  422d10:	(bad)  
  422d11:	fist   DWORD PTR [ecx+ebx*8-0x57af3f8d]
  422d18:	popa   
  422d19:	shl    BYTE PTR [ebp-0x5d],1
  422d1c:	xor    BYTE PTR [ebp+0x21],dh
  422d1f:	mov    BYTE PTR [ebx],ah
  422d21:	jo     0x422d63
  422d23:	call   0xcd707fd2
  422d28:	or     eax,0x71bcb56a
  422d2d:	dec    edi
  422d2e:	sub    cl,BYTE PTR [ecx-0x1b]
  422d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d32:	(bad)  
  422d33:	cmp    esi,DWORD PTR [ebx+ecx*1+0x27f2e777]
  422d3a:	pushf  
  422d3b:	sti    
  422d3c:	mov    ds,esi
  422d3e:	arpl   WORD PTR [edi+0x1a],si
  422d41:	or     DWORD PTR [ebx-0x51],ecx
  422d44:	push   esi
  422d45:	mov    ds:0xff3879ce,eax
  422d4a:	retf   
  422d4b:	or     bh,BYTE PTR [esi+0x5ea46b34]
  422d51:	into   
  422d52:	icebp  
  422d53:	mov    al,0x4d
  422d55:	enter  0x28a1,0x3d
  422d59:	mov    ds:0xc205ba05,eax
  422d5e:	xor    al,0xf8
  422d60:	mov    ebp,0x39d76580
  422d65:	fwait
  422d66:	repnz popa 
  422d68:	out    dx,eax
  422d69:	fiadd  WORD PTR cs:[edx+0x4b]
  422d6d:	sub    ebx,eax
  422d6f:	mov    bh,0x70
  422d71:	or     BYTE PTR [ecx-0x1b275624],bl
  422d77:	adc    bl,BYTE PTR [esi-0x9e9350b]
  422d7d:	pop    ds
  422d7e:	push   ds
  422d7f:	int    0xfa
  422d81:	mov    DWORD PTR [ecx+0x32],ebx
  422d84:	cli    
  422d85:	add    al,0xe7
  422d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d88:	add    ch,BYTE PTR [edi-0x71]
  422d8b:	sub    dh,ch
  422d8d:	jns    0x422dce
  422d8f:	cmp    edi,DWORD PTR [esi-0x1948e4c1]
  422d95:	jp     0x422d69
  422d97:	nop
  422d98:	(bad)  
  422d9a:	mov    ch,0x2d
  422d9c:	cwde   
  422d9d:	clc    
  422d9e:	and    al,BYTE PTR [ebp*2-0x4d2eb7ab]
  422da5:	mov    al,ds:0xc121c67
  422daa:	mov    edx,0x3ccc1876
  422daf:	xor    esi,edx
  422db1:	daa    
  422db2:	in     al,0x8e
  422db4:	mov    ds:0xfc9c0abb,al
  422db9:	in     al,dx
  422dba:	sti    
  422dbb:	xchg   al,dl
  422dbd:	jo     0x422d88
  422dbf:	fdiv   DWORD PTR ds:0x3d419a55
  422dc5:	xor    bh,BYTE PTR [edx]
  422dc7:	in     eax,dx
  422dc8:	fwait
  422dc9:	scas   al,BYTE PTR es:[edi]
  422dca:	cmp    eax,0x28fc260a
  422dcf:	jp     0x422dee
  422dd1:	mov    ah,0xf1
  422dd3:	or     BYTE PTR [eax],0x5a
  422dd6:	in     al,0x82
  422dd8:	dec    ebx
  422dd9:	xchg   bh,bh
  422ddb:	les    esp,FWORD PTR [eax+0x0]
  422dde:	retf   
  422ddf:	dec    ebp
  422de0:	sub    eax,0xe06b63f8
  422de5:	arpl   WORD PTR [ebx+0x5869f65e],sp
  422deb:	inc    esi
  422dec:	ds jp  0x422dc8
  422def:	lock add al,BYTE PTR [edx+0xc]
  422df3:	icebp  
  422df4:	inc    eax
  422df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422df6:	loopne 0x422df5
  422df8:	and    BYTE PTR [edi],0x85
  422dfb:	jb     0x422e5a
  422dfd:	jmp    0x422dd2
  422dff:	jl     0x422df7
  422e01:	mov    ebp,0x1724d50c
  422e06:	je     0x422e4f
  422e08:	fmul   st(3),st
  422e0a:	pop    edx
  422e0b:	iret   
  422e0c:	nop
  422e0d:	into   
  422e0e:	jge    0x422e6b
  422e10:	inc    ecx
  422e11:	arpl   WORD PTR ds:0x4274b6fe,si
  422e17:	imul   edx,DWORD PTR [esi+0x2ca26d19],0x5b
  422e1e:	and    edi,ebx
  422e20:	sbb    eax,0x9bdf8a87
  422e25:	test   BYTE PTR [ebx+0x28782f73],ah
  422e2b:	add    al,0x8c
  422e2d:	or     dl,BYTE PTR [ecx+0x365ca5e9]
  422e33:	inc    edx
  422e34:	outs   dx,BYTE PTR ds:[esi]
  422e35:	dec    edx
  422e36:	in     al,dx
  422e37:	cmp    eax,0x594c16f8
  422e3c:	in     al,0x19
  422e3e:	jns    0x422e5c
  422e40:	mov    cl,0x68
  422e42:	out    dx,eax
  422e43:	(bad)  
  422e44:	lea    ebx,[edx]
  422e46:	icebp  
  422e47:	xchg   esp,eax
  422e48:	xchg   ebp,eax
  422e49:	jl     0x422de5
  422e4b:	test   eax,0xe5af4e81
  422e50:	cmp    DWORD PTR [ebx-0x37e337b1],0xffffffb2
  422e57:	stc    
  422e58:	cdq    
  422e59:	xchg   DWORD PTR [ebx-0x50],esi
  422e5c:	cmp    al,0xe
  422e5e:	out    dx,al
  422e5f:	scas   al,BYTE PTR es:[edi]
  422e60:	push   ecx
  422e61:	xchg   DWORD PTR [eax],ecx
  422e63:	mov    ?,WORD PTR [edi+eiz*4-0x2856fa3f]
  422e6a:	mov    ebp,0x17ce810e
  422e6f:	cmp    eax,DWORD PTR [esi+0x72]
  422e72:	popf   
  422e73:	mov    eax,0xa6bbf9a6
  422e78:	lock mov ecx,0x31070952
  422e7e:	lods   eax,DWORD PTR ds:[esi]
  422e7f:	dec    ebp
  422e80:	call   0xb6a3e4fb
  422e85:	pop    ds
  422e86:	fild   QWORD PTR [ebp*1+0x1c940584]
  422e8d:	xchg   esp,esi
  422e8f:	adc    eax,DWORD PTR [ecx]
  422e91:	push   ss
  422e92:	push   0x5c
  422e94:	es mov dl,al
  422e97:	test   DWORD PTR [eax+0x6c],eax
  422e9a:	mov    dh,0xc4
  422e9c:	test   BYTE PTR [edx+0x434951c2],0xd4
  422ea3:	pusha  
  422ea4:	lock dec ebx
  422ea6:	xor    eax,0xf9fb8638
  422eab:	push   cs
  422eac:	movups XMMWORD PTR [edi+0x70],xmm0
  422eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb1:	out    dx,eax
  422eb2:	test   eax,0xf4033dae
  422eb7:	add    esp,DWORD PTR [edi+0x63a8ca4a]
  422ebd:	fwait
  422ebe:	imul   ebx,DWORD PTR [ebp-0x14],0xffffff9a
  422ec2:	aaa    
  422ec3:	pop    es
  422ec4:	push   ds
  422ec5:	sbb    al,al
  422ec7:	fs push ecx
  422ec9:	rcl    ebp,cl
  422ecb:	mov    dh,0xd6
  422ecd:	jecxz  0x422e84
  422ecf:	mov    cl,0x8b
  422ed1:	popf   
  422ed2:	pop    esi
  422ed3:	inc    eax
  422ed4:	xchg   ebx,eax
  422ed5:	lock add al,0xba
  422ed8:	dec    ebx
  422ed9:	inc    eax
  422eda:	jnp    0x422eab
  422edc:	shl    DWORD PTR [esi+ecx*4],cl
  422edf:	cmc    
  422ee0:	(bad)  
  422ee1:	sbb    eax,0x613bd935
  422ee6:	into   
  422ee7:	xlat   BYTE PTR ds:[ebx]
  422ee8:	fisubr DWORD PTR [esi+edx*2]
  422eeb:	es push ss
  422eed:	cmp    al,0xf9
  422eef:	mov    ds:0x27979214,eax
  422ef4:	(bad)  
  422ef5:	jnp    0x416e0e74
  422efb:	or     dl,BYTE PTR [edi-0x4a]
  422efe:	wbinvd 
  422f00:	inc    edi
  422f01:	mov    ecx,0xc23d6c71
  422f06:	pop    ss
  422f07:	repnz xchg esp,eax
  422f09:	add    DWORD PTR [esi],0xffffffdd
  422f0c:	jae    0x422eef
  422f0e:	and    esi,eax
  422f10:	mov    edx,0x8ea20b43
  422f15:	adc    bl,BYTE PTR [esi-0x2c]
  422f18:	mov    ecx,0x60227ce9
  422f1d:	sub    esp,DWORD PTR [ebx]
  422f1f:	sub    ah,dh
  422f21:	pop    eax
  422f22:	push   cs
  422f23:	xchg   edi,eax
  422f24:	add    DWORD PTR [edi],edi
  422f26:	imul   esi,DWORD PTR [edi],0x5328e20f
  422f2c:	out    dx,al
  422f2d:	hlt    
  422f2e:	(bad)
  422f32:	xchg   edx,eax
  422f33:	add    bl,BYTE PTR [eax]
  422f35:	test   eax,0xa4c4eaa5
  422f3a:	add    bh,BYTE PTR [edi+ecx*4+0x4e]
  422f3e:	rol    ebp,cl
  422f40:	cmp    eax,0xc41ab625
  422f45:	xor    eax,0x264afb95
  422f4a:	das    
  422f4b:	push   ds
  422f4c:	mov    al,ds:0x4251bb62
  422f51:	sbb    al,0xc
  422f53:	push   ebx
  422f54:	loop   0x422efc
  422f56:	fs je  0x422ee6
  422f59:	and    DWORD PTR [ecx+edi*8],edi
  422f5c:	mov    bl,0x49
  422f5e:	scas   eax,DWORD PTR es:[edi]
  422f5f:	xor    BYTE PTR [edx+0x2a],bl
  422f62:	not    BYTE PTR [eax-0x2a]
  422f65:	add    al,0x6a
  422f67:	scas   al,BYTE PTR es:[edi]
  422f68:	adc    eax,0x7483a437
  422f6d:	inc    esp
  422f6e:	and    ecx,DWORD PTR [edi+0x50]
  422f71:	int3   
  422f72:	cld    
  422f73:	aad    0x61
  422f75:	adc    esi,edi
  422f77:	inc    BYTE PTR [ebp-0x59161322]
  422f7d:	out    dx,eax
  422f7e:	dec    ebx
  422f7f:	mov    edi,DWORD PTR [ebx+eiz*2]
  422f82:	retf   0x4350
  422f85:	or     eax,0x3dbab232
  422f8a:	sahf   
  422f8b:	xchg   esi,eax
  422f8c:	jl     0x422f9a
  422f8e:	push   edx
  422f8f:	xchg   ebx,eax
  422f90:	cmp    dl,ch
  422f92:	push   0xffffffdc
  422f94:	mov    esi,0x16c97ec1
  422f99:	ja     0x422f92
  422f9b:	inc    ebx
  422f9c:	rcl    BYTE PTR [edx],cl
  422f9e:	(bad)  
  422f9f:	ficom  DWORD PTR [eax+edi*4]
  422fa2:	iret   
  422fa3:	adc    eax,0x8df30db9
  422fa8:	sub    eax,0x4799f9dd
  422fad:	pushf  
  422fae:	sbb    BYTE PTR [ecx+0x1d471b19],bh
  422fb4:	cmp    esi,DWORD PTR [ebx+ebx*4+0x59]
  422fb8:	add    al,bl
  422fba:	and    DWORD PTR [ebp-0x7f],ecx
  422fbd:	rcr    DWORD PTR [edx+0x36],1
  422fc0:	fsub   QWORD PTR [ebx+eax*2-0x6b]
  422fc4:	add    ecx,DWORD PTR [ebp-0x45a3e7e5]
  422fca:	sar    edx,0xf4
  422fcd:	cwde   
  422fce:	out    dx,eax
  422fcf:	aaa    
  422fd0:	cli    
  422fd1:	jb     0x422fa1
  422fd3:	pop    ebx
  422fd4:	sbb    ebp,DWORD PTR [eax-0x64045305]
  422fda:	and    ebp,DWORD PTR [ebx*4+0x51934bf3]
  422fe1:	mov    ebp,0x82b1299
  422fe6:	out    dx,al
  422fe7:	inc    ecx
  422fe8:	dec    ecx
  422fe9:	imul   edi,DWORD PTR [ecx+0xd4ea6d],0x75518ee0
  422ff3:	ret    0x4503
  422ff6:	ret    0x7d16
  422ff9:	inc    edx
  422ffa:	xchg   ecx,eax
  422ffb:	imul   ecx,DWORD PTR [esi*1+0x2dfbfe53],0x388f7e3e
  423006:	scas   al,BYTE PTR es:[edi]
  423007:	cmp    eax,DWORD PTR [edx-0x33c93304]
  42300d:	sub    eax,0xbb67b6e1
  423012:	(bad)  
  423013:	xlat   BYTE PTR ds:[ebx]
  423014:	arpl   bp,bx
  423016:	or     bh,cl
  423018:	outs   dx,DWORD PTR ds:[esi]
  423019:	das    
  42301a:	xchg   ebp,esp
  42301c:	add    DWORD PTR [ebp-0x4b],0x5b
  423020:	mov    ah,0xa9
  423022:	outs   dx,DWORD PTR ds:[esi]
  423023:	push   ss
  423024:	pushf  
  423025:	push   ebx
  423026:	in     eax,0x1b
  423028:	push   ds
  423029:	outs   dx,BYTE PTR ds:[esi]
  42302a:	xchg   esi,eax
  42302b:	mov    dl,bh
  42302d:	stc    
  42302e:	in     eax,dx
  42302f:	cdq    
  423030:	pop    eax
  423031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423032:	iret   
  423033:	sub    eax,0x40b2e30d
  423038:	or     eax,0xe30579b4
  42303d:	sbb    DWORD PTR [esi],esp
  42303f:	mov    ebp,DWORD PTR [eax]
  423041:	jae    0x42309a
  423043:	mov    bl,0xdb
  423045:	sbb    BYTE PTR [ebx],ch
  423047:	mov    edi,0x51ece025
  42304c:	rcr    BYTE PTR ds:0xb89247dc,0x8b
  423053:	les    edi,FWORD PTR [eax]
  423055:	jb     0x423072
  423057:	xor    al,0x4a
  423059:	add    ch,BYTE PTR [esi]
  42305b:	sub    ebp,DWORD PTR [ebp+0x3067f6ea]
  423061:	adc    DWORD PTR [edx+0x14bd3fd0],ebx
  423067:	dec    esi
  423068:	out    0x54,eax
  42306a:	fdiv   QWORD PTR [ebp+0x59]
  42306d:	jg     0x423047
  42306f:	mov    esp,0xa6dce084
  423074:	jl     0x42301c
  423076:	mov    al,ds:0xd98ac960
  42307b:	cmc    
  42307c:	or     esi,ecx
  42307e:	xchg   DWORD PTR [esi+0x60396c31],esi
  423084:	and    DWORD PTR [esp+ecx*2-0x6904128d],edx
  42308b:	jp     0x42302d
  42308d:	and    DWORD PTR [ecx+0x1e249261],0xffffffbf
  423094:	fcmovnu st,st(0)
  423096:	mov    eax,ds:0x1aa39cdf
  42309b:	into   
  42309c:	pop    esi
  42309d:	mov    ebp,0x351ed11d
  4230a2:	fidivr WORD PTR [ecx+0x1b8d6860]
  4230a8:	shr    DWORD PTR [ebx+0xe],cl
  4230ab:	rcl    al,1
  4230ad:	jns    0x4230fd
  4230af:	stc    
  4230b0:	sub    eax,DWORD PTR [edi]
  4230b2:	jns    0x423051
  4230b4:	pop    edi
  4230b5:	rol    BYTE PTR [eax],1
  4230b7:	(bad)  
  4230b8:	push   cs
  4230b9:	and    al,0xc
  4230bb:	aaa    
  4230bc:	jle    0x4230a1
  4230be:	pop    ds
  4230bf:	data16 loopne 0x423138
  4230c2:	lea    edi,[esi]
  4230c4:	cmp    ecx,ecx
  4230c6:	add    ebx,DWORD PTR ss:[edx+0x28]
  4230ca:	jmp    0x17c8db66
  4230cf:	outs   dx,BYTE PTR ds:[esi]
  4230d0:	push   edx
  4230d1:	in     eax,dx
  4230d2:	ret    
  4230d3:	adc    eax,0xc9624ba6
  4230d8:	shr    BYTE PTR ds:0x6015b9ec,cl
  4230de:	pop    esp
  4230df:	mov    ebx,esp
  4230e1:	jl     0x423132
  4230e3:	mov    ebx,0x285cfa64
  4230e8:	test   BYTE PTR [ebx],ch
  4230ea:	aaa    
  4230eb:	jmp    DWORD PTR [eax-0x8]
  4230ee:	mov    ?,esp
  4230f0:	push   ebx
  4230f1:	mov    edi,0xbb5a93f1
  4230f6:	inc    eax
  4230f7:	mov    ebx,0xb514be89
  4230fc:	ins    BYTE PTR es:[edi],dx
  4230fd:	pop    ss
  4230fe:	xchg   BYTE PTR [ebx-0x51],bl
  423101:	mov    BYTE PTR [ebx-0x6c995a],dl
  423107:	dec    edx
  423108:	dec    edi
  423109:	and    dl,bh
  42310b:	das    
  42310c:	dec    edx
  42310d:	fnstsw WORD PTR [esi+edx*1-0x19]
  423111:	xchg   DWORD PTR [esi+0x1d],esp
  423114:	push   edx
  423115:	in     eax,dx
  423116:	adc    eax,0x7d74b26b
  42311b:	nop
  42311c:	mov    edx,0xdfd90bf5
  423121:	push   0xffffffc6
  423123:	jmp    0x3db85630
  423128:	xchg   esi,eax
  423129:	test   DWORD PTR [edx+0x7fd7c611],0xfb358d2c
  423133:	div    esp
  423135:	mov    ecx,esi
  423137:	xor    bl,dl
  423139:	lods   eax,DWORD PTR ds:[esi]
  42313a:	mov    WORD PTR [ecx+ecx*1-0x49],?
  42313e:	out    dx,eax
  42313f:	div    BYTE PTR [ebp-0x1a4e961c]
  423145:	push   0x82042b2d
  42314a:	mov    DWORD PTR [edi+0x55],ebp
  42314d:	jae    0x4230eb
  42314f:	mov    WORD PTR [ebx],ss
  423151:	jge    0x423174
  423153:	ss jmp 0x3a85523a
  423159:	rol    BYTE PTR [esi-0x60],1
  42315c:	fldenv [ebx+eiz*4+0x74]
  423160:	ja     0x4230f2
  423162:	cmp    ch,BYTE PTR [edi-0x7c]
  423165:	in     al,dx
  423166:	sbb    ch,dh
  423168:	iret   
  423169:	cmp    BYTE PTR [edi],ch
  42316b:	aas    
  42316c:	cwde   
  42316d:	add    BYTE PTR [ebx],cl
  42316f:	jmp    0x32c9:0x503d6935
  423176:	leave  
  423177:	xor    al,BYTE PTR fs:[ebp+0x47]
  42317b:	mov    esi,0x49916e7f
  423180:	pusha  
  423181:	cmp    esp,DWORD PTR [edi+0x452753e4]
  423187:	stos   WORD PTR es:[edi],ax
  423189:	pop    edx
  42318a:	cmc    
  42318b:	add    DWORD PTR [edx+0x794aea99],esi
  423191:	sahf   
  423192:	gs stos DWORD PTR es:[edi],eax
  423194:	pop    edx
  423195:	outs   dx,DWORD PTR ds:[esi]
  423196:	jle    0x4231c7
  423198:	xchg   BYTE PTR [edx],bl
  42319a:	and    ch,BYTE PTR [edx+0x6e]
  42319d:	mov    esi,0xb986e1e9
  4231a2:	sbb    BYTE PTR [ebx-0x42],bh
  4231a5:	out    0x94,eax
  4231a7:	mov    ebx,0x82405847
  4231ac:	(bad)  
  4231ad:	jle    0x4231f6
  4231af:	or     ah,cl
  4231b1:	mov    esi,0x179d7209
  4231b6:	sahf   
  4231b7:	stos   DWORD PTR es:[edi],eax
  4231b8:	mov    al,0xfb
  4231ba:	xor    DWORD PTR [ecx+eax*8+0x633a3622],edx
  4231c1:	popf   
  4231c2:	int    0xb5
  4231c4:	fidiv  WORD PTR [si]
  4231c7:	loop   0x423227
  4231c9:	fimul  DWORD PTR ds:[eax]
  4231cc:	pop    ss
  4231cd:	xor    al,0x7c
  4231cf:	in     eax,0xf9
  4231d1:	mov    ah,0xe4
  4231d3:	inc    ebx
  4231d4:	jp     0x4231f3
  4231d6:	mov    ebp,0x360f88ec
  4231db:	or     eax,0x773ebfd4
  4231e0:	push   0x7ea860e6
  4231e5:	dec    eax
  4231e6:	adc    BYTE PTR [edi-0x1e],dl
  4231e9:	stc    
  4231ea:	icebp  
  4231eb:	sbb    BYTE PTR [ecx+0x2d],ah
  4231ee:	mov    eax,ds:0x8975ccc4
  4231f3:	out    dx,al
  4231f4:	cli    
  4231f5:	push   0xffffffa0
  4231f7:	(bad)
  4231fb:	pop    esp
  4231fc:	dec    edi
  4231fd:	xor    eax,0xfb5dbe2c
  423202:	mov    esp,0x8def582b
  423207:	and    ebp,DWORD PTR [esp+ecx*8+0x58]
  42320b:	adc    al,0x0
  42320d:	shl    BYTE PTR [ecx+edi*1],0xbb
  423211:	or     al,0xb7
  423213:	or     bh,BYTE PTR [edx-0x56dcec19]
  423219:	icebp  
  42321a:	enter  0xe09b,0x34
  42321e:	add    al,0x97
  423220:	mov    ss,edx
  423222:	popf   
  423223:	repz push ebx
  423225:	jns    0x423265
  423227:	jp     0x4231b0
  423229:	cmp    edi,DWORD PTR [edi]
  42322b:	(bad)  
  42322c:	scas   al,BYTE PTR es:[edi]
  42322d:	push   eax
  42322e:	or     DWORD PTR [edi+0x27],esp
  423231:	jae    0x42323c
  423233:	add    DWORD PTR [ecx+eax*4-0xae6cc18],0x0
  42323b:	push   esi
  42323c:	dec    esp
  42323d:	xchg   ebx,eax
  42323e:	sbb    eax,0xf2fbd064
  423243:	sbb    DWORD PTR [esi],0x8b901b56
  423249:	(bad)  
  42324a:	dec    ebp
  42324b:	into   
  42324c:	scas   eax,DWORD PTR es:[edi]
  42324d:	daa    
  42324e:	jno    0x423284
  423250:	jp     0x4231db
  423252:	ror    dl,1
  423254:	jp     0x4232b8
  423256:	pop    ebp
  423257:	xor    eax,0xab451585
  42325c:	lods   eax,DWORD PTR ds:[esi]
  42325d:	jmp    0x7e6b:0xf628addd
  423264:	jne    0x423218
  423266:	cs stc 
  423268:	lods   al,BYTE PTR ds:[esi]
  423269:	fwait
  42326a:	mov    ds:0xd50e41e8,al
  42326f:	rol    BYTE PTR [edx+edi*8-0x55],cl
  423273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423274:	push   ebp
  423275:	jge    0x423286
  423277:	mov    edx,0xb5fb84a9
  42327c:	push   edx
  42327d:	and    BYTE PTR [ebx+0x14],dl
  423280:	inc    eax
  423281:	out    0xfd,eax
  423283:	dec    esp
  423284:	pop    ecx
  423285:	dec    eax
  423286:	cmp    ch,BYTE PTR es:[esi+0x2f]
  42328a:	stos   DWORD PTR es:[edi],eax
  42328b:	dec    esi
  42328c:	push   esi
  42328d:	mov    al,0x54
  42328f:	inc    ebp
  423290:	jns    0x4232c4
  423292:	jnp    0x4232db
  423294:	mov    edx,0x922fa096
  423299:	sub    DWORD PTR [eax+0x67],ebx
  42329c:	in     eax,dx
  42329d:	iret   
  42329e:	sub    cl,BYTE PTR [edi+0x18ce911a]
  4232a4:	adc    al,0x9a
  4232a6:	xchg   BYTE PTR [ecx-0x3b],ah
  4232a9:	rcr    DWORD PTR [ebx],0x16
  4232ac:	mov    ch,0xc8
  4232ae:	sbb    DWORD PTR [edx+0x5d],eax
  4232b1:	pusha  
  4232b2:	ins    BYTE PTR es:[edi],dx
  4232b3:	cs data16 icebp 
  4232b6:	jae    0x42324e
  4232b8:	xor    ah,cl
  4232ba:	inc    edx
  4232bb:	call   0xb14a2dd5
  4232c0:	jmp    0xd2d3:0xa188444a
  4232c7:	mov    ds:0xe7db22d7,eax
  4232cc:	shl    eax,cl
  4232ce:	mov    dl,0x43
  4232d0:	jmp    0x125aec95
  4232d5:	push   esp
  4232d6:	out    dx,eax
  4232d7:	pop    ebp
  4232d8:	or     ebx,DWORD PTR [ebx+0x53]
  4232db:	pop    es
  4232dc:	mov    bl,BYTE PTR [esi]
  4232de:	je     0x423312
  4232e0:	ins    BYTE PTR es:[edi],dx
  4232e1:	xchg   edi,eax
  4232e2:	in     al,0x73
  4232e4:	aas    
  4232e5:	jbe    0x423356
  4232e7:	outs   dx,DWORD PTR ds:[esi]
  4232e8:	mov    eax,ds:0x99fe70f9
  4232ed:	and    DWORD PTR [ebx],esi
  4232ef:	adc    eax,0xdb180b95
  4232f4:	leave  
  4232f5:	cs jp  0x423319
  4232f8:	fld    QWORD PTR [esi-0x12197c6b]
  4232fe:	repz jle 0x4232a1
  423301:	jne    0x42334c
  423303:	je     0x423324
  423305:	es int3 
  423307:	sbb    eax,0x6db98dd5
  42330c:	pop    ds
  42330d:	push   ss
  42330e:	pop    ebp
  42330f:	jmp    0x4232f7
  423311:	shr    bl,1
  423313:	inc    eax
  423314:	fisttp QWORD PTR [esi+0x1dcf9ab4]
  42331a:	out    0xfa,eax
  42331c:	sub    al,0x4c
  42331e:	mov    ds,WORD PTR [edx-0x1e]
  423321:	xchg   BYTE PTR [eax+0x7ad0637],bl
  423327:	xchg   edi,eax
  423328:	sub    eax,0x7820aac7
  42332d:	nop
  42332e:	pop    esp
  42332f:	inc    esp
  423330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423331:	fs std 
  423333:	jo     0x4233a8
  423335:	add    edi,ebx
  423337:	ret    
  423338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423339:	aaa    
  42333a:	sahf   
  42333b:	xor    ecx,DWORD PTR [edx-0x60]
  42333e:	push   ebx
  42333f:	or     eax,0x883b6d7f
  423344:	dec    esp
  423345:	mov    eax,0xc043127f
  42334a:	fist   DWORD PTR ss:0xaac4c642
  423351:	and    bl,BYTE PTR [ecx]
  423353:	mov    al,0x74
  423355:	repz mov dl,0xf9
  423358:	clc    
  423359:	adc    BYTE PTR [edx],ah
  42335b:	loop   0x423300
  42335d:	ja     0x423334
  42335f:	pop    eax
  423360:	sub    al,0xb8
  423362:	into   
  423363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423364:	jmp    0x4233df
  423366:	jmp    0x95fd:0x7d5a679c
  42336d:	imul   ebp,DWORD PTR [esi-0x3e1e29ea],0xdb545dde
  423377:	lods   eax,DWORD PTR ds:[esi]
  423378:	jecxz  0x42331a
  42337a:	in     eax,0x5d
  42337c:	aaa    
  42337d:	jmp    0x877e:0x38b29a52
  423384:	cmp    DWORD PTR [edi+0x53],esp
  423387:	lock add eax,0x1079d9cf
  42338d:	push   ss
  42338e:	mov    ch,0x1a
  423390:	jb     0x423405
  423392:	lock push edx
  423394:	in     eax,dx
  423395:	es cmp esp,edi
  423398:	add    ch,al
  42339a:	loop   0x4233f3
  42339c:	fcomp  DWORD PTR [ecx+0x67597fa7]
  4233a2:	shl    DWORD PTR [esi],0x64
  4233a5:	sbb    ah,BYTE PTR [edi+0x535eeefd]
  4233ab:	not    BYTE PTR [eax+0x45]
  4233ae:	arpl   ax,bp
  4233b0:	iret   
  4233b1:	inc    edx
  4233b2:	int    0x33
  4233b4:	aas    
  4233b5:	fwait
  4233b6:	lods   eax,DWORD PTR ds:[esi]
  4233b7:	add    BYTE PTR [ecx+eax*2+0x7f],dl
  4233bb:	mov    ah,0x92
  4233bd:	in     eax,dx
  4233be:	aad    0xf5
  4233c0:	fdivr  QWORD PTR [esi-0x1e642992]
  4233c6:	retf   
  4233c7:	cld    
  4233c8:	stos   BYTE PTR es:[edi],al
  4233c9:	inc    esi
  4233ca:	sti    
  4233cb:	dec    eax
  4233cc:	push   eax
  4233cd:	dec    esp
  4233ce:	cmp    DWORD PTR [edi],esp
  4233d0:	adc    BYTE PTR [ebp-0x32b78a9f],bh
  4233d6:	cmp    BYTE PTR ds:0x86a8c528,0xb2
  4233dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233de:	fidiv  WORD PTR [eax+0x5c]
  4233e1:	lods   al,BYTE PTR ds:[esi]
  4233e2:	xchg   edx,eax
  4233e3:	pop    ebx
  4233e4:	outs   dx,BYTE PTR ds:[esi]
  4233e5:	gs scas al,BYTE PTR es:[edi]
  4233e7:	loopne 0x4233a1
  4233e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233ea:	mov    ecx,0xad0d578d
  4233ef:	push   0x4eeec326
  4233f4:	add    ah,dh
  4233f6:	mov    bh,0x63
  4233f8:	xor    BYTE PTR [edi],ah
  4233fa:	sub    DWORD PTR [ecx+0x3d],edi
  4233fd:	cwde   
  4233fe:	shl    BYTE PTR [esi-0x16],1
  423401:	test   al,0x4
  423403:	mov    bh,0xa
  423405:	out    0x42,eax
  423407:	mul    dl
  423409:	jle    0x423414
  42340b:	mov    ebp,0xb56479b1
  423410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423411:	rcl    DWORD PTR [esi],cl
  423413:	and    al,0xd7
  423415:	xchg   BYTE PTR [edi],bh
  423417:	(bad)  
  423418:	out    0x1,eax
  42341a:	mov    edi,0xabcbcd23
  42341f:	xor    BYTE PTR [ebp+0xc],0x20
  423423:	mov    ds:0xfb7667e1,eax
  423428:	or     eax,0x1a944e27
  42342d:	mov    bl,0x83
  42342f:	mov    eax,0xdfd350bd
  423434:	dec    edx
  423435:	jmp    0x4414a956
  42343a:	pusha  
  42343b:	xchg   esi,eax
  42343c:	sbb    edx,DWORD PTR [edx-0x47]
  42343f:	mov    bl,0x8d
  423441:	adc    BYTE PTR ds:0x5c62ab57,ah
  423447:	stos   DWORD PTR es:[edi],eax
  423448:	mov    cl,ch
  42344a:	retf   
  42344b:	jmp    0x6c2f50f6
  423450:	into   
  423451:	cmp    DWORD PTR [ecx+0x5fa10fc9],ebp
  423457:	arpl   WORD PTR [eax+edi*1+0x5f],ax
  42345b:	fsub   DWORD PTR [edx]
  42345d:	mov    edi,DWORD PTR [ebp-0x7d]
  423460:	or     al,BYTE PTR [ebx]
  423462:	pop    ebx
  423463:	dec    eax
  423464:	int    0x93
  423466:	mov    bh,BYTE PTR [ebx-0x147870b0]
  42346c:	add    bl,BYTE PTR [ebx-0x1daf4c17]
  423472:	sub    esp,DWORD PTR [ebx+0x33]
  423475:	mulps  xmm7,xmm1
  423478:	or     ebp,DWORD PTR [edi-0x59]
  42347b:	adc    DWORD PTR [ebx],esp
  42347d:	lds    ecx,FWORD PTR [ebp+0x28]
  423480:	dec    esp
  423481:	outs   dx,DWORD PTR ds:[esi]
  423482:	mov    DWORD PTR [edi+0x65],esp
  423485:	or     al,0x8d
  423487:	and    BYTE PTR [eax],ch
  423489:	mov    ebx,0x71ab8398
  42348e:	cld    
  42348f:	sub    al,0xc5
  423491:	sbb    eax,0xf30d969
  423496:	ja     0x4234ef
  423498:	(bad)  
  423499:	xchg   esi,eax
  42349a:	push   ds
  42349b:	inc    edi
  42349c:	cli    
  42349d:	and    esp,DWORD PTR [ebp-0x5]
  4234a0:	xor    DWORD PTR [ebx-0x43d4617f],edx
  4234a6:	lds    edi,FWORD PTR [esi+edx*1-0x110a2b68]
  4234ad:	sbb    cl,BYTE PTR [edi-0x5ad52e0a]
  4234b3:	and    esi,edi
  4234b5:	jmp    0xba0a:0xee8ed09b
  4234bc:	inc    eax
  4234bd:	jmp    0xc9267c07
  4234c2:	sahf   
  4234c3:	add    eax,0x92c304ed
  4234c8:	cmp    BYTE PTR [ebp-0x75b34707],ah
  4234ce:	adc    edx,eax
  4234d0:	test   al,0x7c
  4234d2:	daa    
  4234d3:	mov    edx,0x473e444a
  4234d8:	lea    esp,[esi+0x14]
  4234db:	in     al,dx
  4234dc:	sub    DWORD PTR [eax+0x416decc1],edx
  4234e2:	idiv   BYTE PTR [edx-0x7d]
  4234e5:	out    0x7c,eax
  4234e7:	xor    BYTE PTR [edi+eiz*8+0x7c97d2e1],ch
  4234ee:	(bad)  
  4234ef:	sbb    DWORD PTR [edx+0x7bf29d96],edx
  4234f5:	fistp  QWORD PTR [ecx+0x64]
  4234f8:	aas    
  4234f9:	(bad)  
  4234fa:	sub    edi,DWORD PTR [edx+ebp*4]
  4234fd:	xchg   edx,eax
  4234fe:	mov    ds:0xdf4d87eb,al
  423503:	rol    BYTE PTR [eax-0x2f687354],cl
  423509:	scas   eax,DWORD PTR es:[edi]
  42350a:	les    ebx,FWORD PTR [edx]
  42350c:	jl     0x423502
  42350e:	mov    edi,0xe5eb17f0
  423513:	leave  
  423514:	jae    0x423546
  423516:	dec    ecx
  423517:	dec    esp
  423518:	cmp    al,BYTE PTR [edx+0x5c]
  42351b:	pop    edx
  42351c:	bound  esi,QWORD PTR [ebx]
  42351e:	xchg   DWORD PTR [edi+0x54f9f240],edi
  423524:	(bad)  
  423525:	lods   eax,DWORD PTR ds:[esi]
  423526:	pop    ebx
  423527:	jne    0x4234ed
  423529:	add    BYTE PTR [ebp+0x5f9c0876],0xed
  423530:	ds inc edx
  423532:	sub    ecx,DWORD PTR [edi-0x433a687e]
  423538:	or     ch,BYTE PTR [eax-0x30789a54]
  42353e:	int3   
  42353f:	arpl   di,cx
  423541:	or     edi,esp
  423543:	fwait
  423544:	int3   
  423545:	test   al,0x90
  423547:	stos   BYTE PTR es:[edi],al
  423548:	cli    
  423549:	sbb    al,bl
  42354b:	ins    DWORD PTR es:[edi],dx
  42354c:	push   0x6b
  42354e:	call   0x2df03154
  423553:	in     al,dx
  423554:	aad    0x65
  423556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423557:	push   cs
  423558:	inc    esp
  423559:	inc    ecx
  42355a:	push   eax
  42355b:	dec    edx
  42355c:	(bad)  
  42355d:	lods   al,BYTE PTR ds:[esi]
  42355e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42355f:	sub    ecx,DWORD PTR [esi+0x20]
  423562:	xor    bl,ah
  423564:	rol    BYTE PTR [ecx-0x79],cl
  423567:	daa    
  423568:	and    ecx,eax
  42356a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42356b:	mov    bh,BYTE PTR [ecx+0x52]
  42356e:	loop   0x42355d
  423570:	inc    esp
  423571:	xchg   esp,eax
  423572:	fincstp 
  423574:	xchg   esi,eax
  423575:	sub    DWORD PTR [ebx+0x3e],edi
  423578:	cmp    cl,cl
  42357a:	frstor [edx]
  42357c:	jne    0x423524
  42357e:	dec    ebx
  42357f:	cmp    eax,0xfc695dbb
  423584:	pusha  
  423585:	add    BYTE PTR [eax-0x432c0bdd],ch
  42358b:	mov    ebp,0xf1b950ed
  423590:	ins    BYTE PTR es:[edi],dx
  423591:	sbb    eax,0xf732dd72
  423596:	adc    ch,BYTE PTR [ebp-0x4c]
  423599:	dec    edi
  42359a:	sar    ebx,1
  42359c:	cmp    DWORD PTR [edx+eax*4-0x1ee3f35c],ebx
  4235a3:	add    edi,DWORD PTR [edx-0x4c]
  4235a6:	cmc    
  4235a7:	shl    DWORD PTR [ecx-0x71],1
  4235aa:	jl     0x423542
  4235ac:	js     0x4235c3
  4235ae:	inc    esi
  4235af:	call   0x3da7:0xf3709247
  4235b6:	rcr    BYTE PTR [edi+ebx*8-0x4a],cl
  4235ba:	aaa    
  4235bb:	xchg   ecx,eax
  4235bc:	cld    
  4235bd:	fldcw  WORD PTR [edi]
  4235bf:	dec    ecx
  4235c0:	mov    esi,0xb3d11ff1
  4235c5:	xchg   bl,ch
  4235c7:	pop    ds
  4235c8:	adc    al,0x2b
  4235ca:	push   0x82fcf5d4
  4235cf:	lds    edi,FWORD PTR [ebx]
  4235d1:	sub    DWORD PTR [ebx-0x3b],esi
  4235d4:	sub    BYTE PTR [ebp-0x59],ch
  4235d7:	aad    0xba
  4235d9:	pop    ds
  4235da:	sbb    eax,0x61267cfc
  4235df:	push   ebx
  4235e0:	aas    
  4235e1:	stc    
  4235e2:	addr16 cld 
  4235e4:	imul   eax,ebx,0x4a277e82
  4235ea:	sbb    ch,BYTE PTR [ecx]
  4235ec:	pop    ss
  4235ed:	call   FWORD PTR [ebx+esi*2-0x239f1902]
  4235f4:	bound  eax,QWORD PTR [edx+0x378895b8]
  4235fa:	add    al,0xeb
  4235fc:	lds    esi,FWORD PTR [ebx]
  4235fe:	fcom   DWORD PTR [edx-0x4e]
  423601:	mov    esp,0x5018aefc
  423606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423607:	sub    ah,BYTE PTR [ebx-0x79]
  42360a:	in     ax,0xd2
  42360d:	mov    edi,0x50e0de31
  423612:	mul    ah
  423614:	jno    0x4235f8
  423616:	mov    DWORD PTR [ecx],esi
  423618:	aas    
  423619:	cs mov edi,0x6437f862
  42361f:	aam    0x22
  423621:	xchg   edx,eax
  423622:	imul   edi,DWORD PTR [edi-0x3f],0x56
  423626:	jo     0x42367b
  423628:	mov    bh,0x46
  42362a:	js     0x4235b2
  42362c:	mov    ds:0xeafd5991,al
  423631:	mov    edi,0xf6da759f
  423636:	inc    esp
  423637:	pushf  
  423638:	sti    
  423639:	sbb    dh,ch
  42363b:	sbb    bh,BYTE PTR [ebx]
  42363d:	mov    esi,0xb2808558
  423642:	fld    QWORD PTR [eax-0x50]
  423645:	(bad)  
  423646:	sub    ecx,DWORD PTR [eax-0x169aa51]
  42364c:	out    0xea,al
  42364e:	xchg   BYTE PTR [esp+esi*2+0x2dde07c3],cl
  423655:	push   ss
  423656:	clc    
  423657:	xor    al,0xad
  423659:	mov    dl,0x29
  42365b:	adc    bh,BYTE PTR [edx]
  42365d:	or     eax,0x73ec60f9
  423662:	or     BYTE PTR [edi],cl
  423664:	sub    ebx,DWORD PTR [edi+0x4da07600]
  42366a:	and    DWORD PTR [esi],ecx
  42366c:	stos   DWORD PTR es:[edi],eax
  42366d:	adc    al,0x13
  42366f:	lods   al,BYTE PTR ds:[esi]
  423670:	adc    BYTE PTR [ecx],ah
  423672:	cmp    edx,DWORD PTR [eax]
  423674:	cwde   
  423675:	xchg   esp,eax
  423676:	mov    ds:0xc41d72b0,eax
  42367b:	sbb    esi,DWORD PTR gs:[edx+0x2e]
  42367f:	or     esp,DWORD PTR [ebx-0x14]
  423682:	(bad)  
  423683:	imul   ecx,DWORD PTR [edi],0xeff75811
  423689:	fwait
  42368a:	inc    ebp
  42368b:	stos   DWORD PTR es:[edi],eax
  42368c:	mov    dh,0x36
  42368e:	shl    BYTE PTR [edx],0xc4
  423691:	imul   eax,esi,0x611229f8
  423697:	mov    ecx,edx
  423699:	push   esp
  42369a:	mov    eax,0xab975fd
  42369f:	dec    ebx
  4236a0:	sub    ecx,DWORD PTR [edx+0x4e6e1d63]
  4236a6:	jmp    0x42370b
  4236a8:	popf   
  4236a9:	psllw  mm2,mm7
  4236ac:	in     al,0x24
  4236ae:	inc    eax
  4236af:	add    al,0x8
  4236b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236b2:	and    al,0x1
  4236b4:	pop    eax
  4236b5:	cmp    ah,BYTE PTR [ebp+0x728000ba]
  4236bb:	inc    edx
  4236bc:	xchg   ecx,eax
  4236bd:	outs   dx,DWORD PTR ds:[esi]
  4236be:	xor    BYTE PTR [ebp-0x25693d36],bl
  4236c4:	mov    ah,0x89
  4236c6:	scas   al,BYTE PTR es:[edi]
  4236c7:	adc    eax,0x557ff6c
  4236cc:	rol    ecx,1
  4236ce:	stos   DWORD PTR es:[edi],eax
  4236cf:	and    eax,0xbe7ed54b
  4236d4:	jge    0x42370a
  4236d6:	mov    dh,0x4f
  4236d8:	inc    ebp
  4236d9:	fisttp WORD PTR [ebp+0x58]
  4236dc:	xchg   edx,eax
  4236dd:	dec    ecx
  4236de:	add    eax,0xc599c75f
  4236e3:	dec    ecx
  4236e4:	push   ds
  4236e5:	or     dh,BYTE PTR [ebx+0xf]
  4236e8:	lods   eax,DWORD PTR ds:[esi]
  4236e9:	sbb    eax,DWORD PTR [edi-0x54ea085]
  4236ef:	loopne 0x42368d
  4236f1:	and    ah,BYTE PTR ds:0x2151e3d4
  4236f7:	(bad)  
  4236f8:	xor    BYTE PTR [eax],bl
  4236fa:	pop    ss
  4236fb:	jns    0x4236a5
  4236fd:	mov    ch,0xc0
  4236ff:	out    dx,eax
  423700:	in     al,dx
  423701:	out    0x45,al
  423703:	div    BYTE PTR [esi-0x4f934d70]
  423709:	xor    BYTE PTR [ebp-0x57],ah
  42370c:	outs   dx,DWORD PTR ds:[esi]
  42370d:	pop    edi
  42370e:	xchg   ebx,eax
  42370f:	cmp    DWORD PTR [edi+eax*4+0x69],edi
  423713:	mov    dl,0xad
  423715:	mov    esi,0x193d81b8
  42371a:	cdq    
  42371b:	ds ins BYTE PTR es:[edi],dx
  42371d:	(bad)  
  42371f:	cld    
  423720:	mov    al,0xe9
  423722:	mov    esi,0x9a8a5777
  423727:	aam    0x53
  423729:	cs inc ebp
  42372b:	xor    DWORD PTR [edx-0x12],edi
  42372e:	dec    eax
  42372f:	adc    ecx,ecx
  423731:	retf   0x1a6f
  423734:	mov    eax,ds:0x9a3ac0df
  423739:	stos   BYTE PTR es:[edi],al
  42373a:	jg     0x4236f0
  42373c:	call   FWORD PTR [edx+edi*8]
  42373f:	dec    ebx
  423740:	cmp    BYTE PTR [ebp+0x35],bl
  423743:	out    0x73,al
  423745:	lods   al,BYTE PTR ds:[esi]
  423746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423747:	jb     0x42376a
  423749:	pop    edi
  42374a:	lock fist DWORD PTR [ecx]
  42374d:	test   DWORD PTR [eax+0x72],ebx
  423750:	xor    BYTE PTR [eax-0x3979ed7c],0x8f
  423757:	pop    edx
  423758:	cmp    bh,cl
  42375a:	dec    esi
  42375b:	add    al,0xbc
  42375d:	cmp    DWORD PTR [esi-0x4],ebx
  423760:	(bad)  
  423761:	daa    
  423762:	push   esp
  423763:	and    ah,dl
  423765:	ret    0xd446
  423768:	arpl   WORD PTR [eax-0x33ed3a1d],bp
  42376e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42376f:	neg    BYTE PTR [edi]
  423771:	ja     0x42377a
  423773:	push   ebp
  423774:	adc    edx,eax
  423776:	sti    
  423777:	sub    esp,0xa7717184
  42377d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42377e:	out    0x2e,eax
  423780:	xchg   DWORD PTR [eax],edx
  423782:	and    esp,eax
  423784:	xlat   BYTE PTR ds:[ebx]
  423785:	lea    esi,[ecx+ecx*4+0x51]
  423789:	ret    0xc482
  42378c:	add    dh,ah
  42378e:	cmp    DWORD PTR [edx+edi*2-0xb],0xd5f4534
  423796:	sbb    bl,BYTE PTR [eax-0x3a]
  423799:	pop    ss
  42379a:	test   al,0x93
  42379c:	xchg   ebp,eax
  42379d:	inc    edi
  42379f:	mov    bh,0xc
  4237a1:	and    DWORD PTR [esp+esi*2],edi
  4237a4:	iret   
  4237a5:	pop    ebp
  4237a6:	pop    ebx
  4237a7:	in     eax,0x80
  4237a9:	jae    0x423766
  4237ab:	cmp    DWORD PTR [ebp-0x6193c6af],edi
  4237b1:	jno    0x42380f
  4237b3:	lods   al,BYTE PTR ds:[esi]
  4237b4:	(bad)  
  4237b6:	ret    
  4237b7:	mov    ah,0xdf
  4237b9:	popa   
  4237ba:	mov    ecx,0x540bcc45
  4237bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237c0:	aam    0x99
  4237c2:	pop    ebp
  4237c3:	inc    ebp
  4237c4:	xchg   ax,ax
  4237c6:	sub    BYTE PTR [eax+esi*2+0x4c09817],dl
  4237cd:	(bad)  
  4237ce:	mov    ebx,0x97fd4261
  4237d3:	cmp    al,0xc7
  4237d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d6:	cmp    BYTE PTR [esi-0x334ba390],0x30
  4237dd:	div    ecx
  4237df:	mov    al,ds:0xe547ac30
  4237e4:	imul   ecx,DWORD PTR [ecx+0x50],0xefe3708b
  4237eb:	pop    ebp
  4237ec:	(bad)  
  4237ee:	sub    eax,DWORD PTR [esi+ecx*2]
  4237f1:	pusha  
  4237f2:	loope  0x42384b
  4237f4:	mov    DWORD PTR [esi+esi*4],ebx
  4237f7:	je     0x4237b9
  4237f9:	xchg   ebx,eax
  4237fa:	sbb    bh,BYTE PTR [ebp+0x58edf02d]
  423800:	icebp  
  423801:	fs inc esp
  423803:	(bad)  
  423804:	jbe    0x42386e
  423806:	mov    bh,0x11
  423808:	(bad)
  42380c:	mov    eax,ds:0x6ef53e24
  423811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423812:	pop    ds
  423813:	pop    eax
  423814:	fsubr  QWORD PTR [ebx+0x45d7b77e]
  42381a:	xor    BYTE PTR [eax],ch
  42381c:	push   ecx
  42381d:	cmc    
  42381e:	rol    BYTE PTR [edx-0x1c],1
  423821:	call   0x7c50:0xfad86d2f
  423828:	inc    BYTE PTR [eax+0x68d62d3e]
  42382e:	push   ss
  42382f:	stos   DWORD PTR es:[edi],eax
  423830:	or     al,0x47
  423832:	inc    ebx
  423833:	and    ebx,DWORD PTR [ebx-0x4e]
  423836:	add    eax,0xd4e0b854
  42383b:	ficom  DWORD PTR [eax+0x15]
  42383e:	and    BYTE PTR [ecx+0x51],0xec
  423842:	nop
  423843:	ds gs jle 0x4238bf
  423847:	push   edx
  423848:	(bad)  
  42384a:	mov    dh,0xc7
  42384c:	inc    ecx
  42384d:	xor    dh,BYTE PTR [ebx+0x1772bc83]
  423853:	cwde   
  423854:	add    ecx,ecx
  423856:	or     esp,ebx
  423858:	mov    bh,0xd5
  42385a:	leave  
  42385b:	fistp  DWORD PTR [ebx-0xe]
  42385e:	add    dl,cl
  423860:	jno    0x4238cd
  423862:	mov    esp,0xe07fcf6
  423867:	inc    esi
  423868:	cmp    edx,DWORD PTR ds:0xa98b6364
  42386e:	mov    esi,0xc3e35fd4
  423873:	pop    edx
  423874:	repz ret 
  423876:	inc    esp
  423877:	ret    
  423878:	loopne 0x4238b0
  42387a:	in     eax,dx
  42387b:	inc    BYTE PTR [ecx]
  42387d:	cdq    
  42387e:	mov    ds:0x90b2e606,al
  423883:	jmp    0x42387b
  423885:	and    BYTE PTR [ebp-0x59f07ad4],0x24
  42388c:	mov    bh,0xe4
  42388e:	sub    DWORD PTR [edi+eiz*8],ebx
  423891:	stos   BYTE PTR es:[edi],al
  423892:	shl    BYTE PTR [eax-0x118ad617],1
  423898:	das    
  423899:	adc    al,0x57
  42389b:	or     DWORD PTR [ebx+esi*4],esi
  42389e:	or     BYTE PTR [edi],ch
  4238a0:	fstp   TBYTE PTR [esi-0x7acaf7d]
  4238a6:	add    DWORD PTR [ebx+0x23],ebx
  4238a9:	mov    dh,0x3e
  4238ab:	inc    ebp
  4238ac:	push   esi
  4238ad:	jmp    0x2e01c14c
  4238b2:	mov    eax,0xb999e8da
  4238b7:	out    0xe2,eax
  4238b9:	push   cs
  4238ba:	rol    esp,cl
  4238bc:	pop    edi
  4238bd:	int3   
  4238be:	pop    ss
  4238bf:	cmp    DWORD PTR [ecx+0x6f],ecx
  4238c2:	and    DWORD PTR [edx+0x2f],eax
  4238c5:	or     BYTE PTR [eax-0x4c],bl
  4238c8:	cwde   
  4238c9:	jg     0x42385c
  4238cb:	ja     0x423905
  4238cd:	mov    al,ds:0xa1d71869
  4238d2:	cmp    eax,0x1aa274e9
  4238d7:	mov    fs,WORD PTR [eax-0x1d83f166]
  4238dd:	adc    ebx,DWORD PTR [ebx+0x24ac2bd]
  4238e3:	push   ebp
  4238e4:	sbb    eax,0xeca437ab
  4238e9:	inc    edi
  4238ea:	pop    ds
  4238eb:	mov    ecx,0x9ab79744
  4238f0:	fsub   QWORD PTR [edi+ebx*1-0x22225c62]
  4238f7:	add    ch,BYTE PTR [esi+0x19f85cd1]
  4238fd:	test   eax,0xc77d0f8a
  423902:	add    DWORD PTR ds:0x513789c0,esp
  423908:	addr16 cmp al,0xf5
  42390b:	jnp    0x42388e
  42390d:	inc    ebx
  42390e:	mov    eax,ds:0x75c52305
  423913:	xchg   ebp,eax
  423914:	cmp    al,0xaf
  423916:	dec    esp
  423917:	fs jnp 0x42392f
  42391a:	clc    
  42391b:	int3   
  42391c:	cwde   
  42391d:	adc    bl,BYTE PTR [eax-0x1b]
  423920:	adc    BYTE PTR [edx+0x6d],dl
  423923:	xchg   ecx,eax
  423924:	or     al,0x9b
  423926:	lock or al,0x71
  423929:	mov    bh,0xf0
  42392b:	(bad)  
  42392c:	call   0x79d98c14
  423931:	inc    esi
  423932:	into   
  423933:	adc    DWORD PTR [ebx],edx
  423935:	(bad)  
  423936:	sbb    dl,ch
  423938:	pop    esi
  423939:	idiv   BYTE PTR [esi-0x6ebea475]
  42393f:	dec    ebp
  423940:	(bad)  
  423941:	pop    esi
  423942:	inc    esp
  423943:	imul   DWORD PTR [esi]
  423945:	js     0x4238cd
  423947:	loopne 0x42397a
  423949:	mov    ?,WORD PTR [esi+0x4b]
  42394c:	xor    ch,ch
  42394e:	sub    al,0xdd
  423950:	ss mov esi,0x35d4a8b5
  423956:	push   0xffffff93
  423958:	push   ebx
  423959:	mov    dl,0x4d
  42395b:	adc    al,0xc5
  42395d:	and    BYTE PTR [esi],dh
  42395f:	loopne 0x4238fe
  423961:	mov    esp,DWORD PTR ds:0xa631515f
  423967:	rol    DWORD PTR [eax+eax*2-0x71],cl
  42396b:	cs aas 
  42396d:	dec    esp
  42396e:	add    eax,0x18ed2c47
  423973:	popa   
  423974:	or     al,0xfb
  423976:	repz add DWORD PTR [edi+0x63],esp
  42397a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42397b:	rcr    DWORD PTR [edx+0x6c],0xd4
  42397f:	add    eax,0xf46c6b86
  423984:	dec    esp
  423985:	xchg   edi,ebx
  423987:	arpl   WORD PTR [esi],sp
  423989:	lock mov ebp,0x1f9de398
  42398f:	aam    0x87
  423991:	push   0x32
  423993:	adc    cl,bh
  423995:	push   0xb6351957
  42399a:	xchg   ecx,eax
  42399b:	aas    
  42399c:	inc    ebp
  42399d:	ins    BYTE PTR es:[edi],dx
  42399e:	mov    ds:0xf9b49567,al
  4239a3:	clc    
  4239a4:	push   cs
  4239a5:	jmp    0x40c66a3e
  4239aa:	loope  0x42396d
  4239ac:	cmp    BYTE PTR [esi+ecx*1+0x7a],bl
  4239b0:	pop    ecx
  4239b1:	or     bh,BYTE PTR [esi-0x52]
  4239b4:	jbe    0x423a0f
  4239b6:	jne    0x4239bb
  4239b8:	xor    bl,BYTE PTR ds:0x1614014f
  4239be:	add    edx,DWORD PTR [ebp-0x24]
  4239c1:	test   eax,0x96f0a31d
  4239c6:	mov    ss,WORD PTR [edx+0x4bba8b2]
  4239cc:	push   ebx
  4239cd:	xor    esi,edi
  4239cf:	xor    esp,DWORD PTR [ebx]
  4239d1:	jp     0x4239ba
  4239d3:	dec    ebp
  4239d4:	clc    
  4239d5:	adc    al,0x77
  4239d7:	scas   al,BYTE PTR es:[edi]
  4239d8:	(bad)  
  4239da:	outs   dx,DWORD PTR ds:[esi]
  4239db:	leave  
  4239dc:	xchg   BYTE PTR [ebx],cl
  4239de:	pop    es
  4239df:	jns    0x4239cb
  4239e1:	push   0x22
  4239e3:	mov    ds:0x6dc51b41,al
  4239e8:	call   0x39f05933
  4239ed:	xor    eax,0xb4be4be6
  4239f2:	and    DWORD PTR [edi+0x6d],ecx
  4239f5:	enter  0x76c0,0xaa
  4239f9:	not    BYTE PTR [ebp-0x258b7dfa]
  4239ff:	mov    bh,0x4f
  423a01:	sub    dh,BYTE PTR [edx]
  423a03:	pop    ecx
  423a04:	inc    esp
  423a05:	sub    eax,DWORD PTR [edx-0x26]
  423a08:	loop   0x4239cb
  423a0a:	sbb    eax,0x556a104e
  423a0f:	cli    
  423a10:	jp     0x423a52
  423a12:	ret    0x91e1
  423a15:	push   edx
  423a16:	push   0xfffffff8
  423a18:	loop   0x423a90
  423a1a:	out    0x34,al
  423a1c:	push   ds
  423a1d:	call   FWORD PTR cs:[esi+0x4f8df00d]
  423a24:	mov    ch,0x3f
  423a26:	dec    edx
  423a27:	bound  edi,QWORD PTR [edi]
  423a29:	gs mov dh,0x9e
  423a2c:	aaa    
  423a2d:	loop   0x4239ef
  423a2f:	in     eax,dx
  423a30:	into   
  423a31:	test   al,0x8c
  423a33:	xor    esi,DWORD PTR [esi]
  423a35:	fdivp  st(0),st
  423a37:	mov    edi,0x5432dd63
  423a3c:	sbb    DWORD PTR es:0x6036c371,edi
  423a43:	inc    ecx
  423a44:	pop    esi
  423a45:	jecxz  0x423a22
  423a47:	popa   
  423a48:	push   ebp
  423a49:	pushf  
  423a4a:	sbb    ecx,ebp
  423a4c:	mov    ebx,0x2629b7ad
  423a51:	sbb    DWORD PTR [ebx+ebx*4+0x1a2906d7],ecx
  423a58:	outs   dx,BYTE PTR ds:[esi]
  423a59:	pop    edx
  423a5a:	stc    
  423a5b:	xchg   esp,eax
  423a5c:	clts   
  423a5e:	stos   BYTE PTR es:[edi],al
  423a5f:	imul   eax,edx,0xa94f725d
  423a65:	push   ecx
  423a66:	retf   0xf44b
  423a69:	(bad)  
  423a6a:	ja     0x423ab6
  423a6c:	mov    al,0xcd
  423a6e:	imul   eax,esi,0x3
  423a71:	adc    dh,bh
  423a73:	(bad)  
  423a74:	cmp    al,0xfb
  423a76:	aam    0xc6
  423a78:	lea    edx,[ebp-0x5a7c096a]
  423a7e:	bound  edx,QWORD PTR [ecx]
  423a80:	(bad)  [ecx+0x37]
  423a83:	imul   ebx,DWORD PTR [edi-0x15da0a31],0xed4ffe1e
  423a8d:	mov    ebx,0x4e80f469
  423a92:	mov    edx,0x4c2ad196
  423a97:	adc    ecx,DWORD PTR [esi-0x20]
  423a9a:	fiadd  WORD PTR [edx]
  423a9c:	pop    edx
  423a9d:	jp     0x423a7a
  423a9f:	push   ebx
  423aa0:	int3   
  423aa1:	jmp    0xa1c1ce44
  423aa6:	and    eax,0x2fcf9879
  423aab:	in     al,dx
  423aac:	sub    ecx,DWORD PTR [ecx+0xd]
  423aaf:	(bad)  
  423ab0:	mov    ds:0x250a3640,al
  423ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ab6:	xor    ecx,edi
  423ab8:	int3   
  423ab9:	mov    eax,0xccae1d33
  423abe:	sti    
  423abf:	out    dx,al
  423ac0:	push   ecx
  423ac1:	popf   
  423ac2:	(bad)
  423ac5:	out    0x40,al
  423ac7:	js     0x423ae8
  423ac9:	popf   
  423aca:	fld    DWORD PTR [esi+0x58]
  423acd:	lahf   
  423ace:	nop
  423acf:	pop    es
  423ad0:	ds (bad) 
  423ad2:	cmp    eax,0xda1c97ff
  423ad7:	ret    0x61ab
  423ada:	jb     0x423b00
  423adc:	jmp    0x423a76
  423ade:	mov    bh,0xa9
  423ae0:	outs   dx,DWORD PTR ds:[esi]
  423ae1:	cs adc eax,0x1a8441c9
  423ae7:	repnz and DWORD PTR ds:0x39117834,eax
  423aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aef:	pop    eax
  423af0:	cmp    bl,bh
  423af2:	xchg   edx,eax
  423af3:	in     eax,dx
  423af4:	push   ebp
  423af5:	jb     0x423ad7
  423af7:	outs   dx,BYTE PTR ds:[esi]
  423af8:	xor    DWORD PTR [ecx+ecx*2],ecx
  423afb:	and    BYTE PTR [esi],bh
  423afd:	fidivr WORD PTR ds:0x5e318f56
  423b03:	pop    ss
  423b04:	lods   al,BYTE PTR ds:[esi]
  423b05:	out    0xa3,eax
  423b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b08:	xor    BYTE PTR [ecx-0x8],dl
  423b0b:	cmp    esp,DWORD PTR [edx+eiz*1]
  423b0e:	(bad)  
  423b0f:	mov    dl,0x2
  423b11:	mov    ds:0xffbf78f8,eax
  423b16:	jae    0x423b57
  423b18:	jmp    0x423aa7
  423b1a:	xlat   BYTE PTR ds:[ebx]
  423b1b:	pop    ss
  423b1c:	popa   
  423b1d:	(bad)  
  423b1e:	out    dx,al
  423b1f:	(bad)  
  423b20:	fldcw  WORD PTR [eax+0x616b580b]
  423b26:	aad    0xe8
  423b28:	cmp    al,0x2c
  423b2a:	jg     0x423b0f
  423b2c:	in     al,dx
  423b2d:	cs xchg edx,eax
  423b2f:	pop    eax
  423b30:	adc    ecx,eax
  423b32:	and    BYTE PTR [edx+eax*1],bl
  423b35:	cmp    DWORD PTR [ecx-0x56a8d6cf],ecx
  423b3b:	loope  0x423ad1
  423b3d:	xor    cl,BYTE PTR [edi-0x1beb362d]
  423b43:	pop    ds
  423b44:	and    ebp,DWORD PTR [ebx]
  423b46:	push   edx
  423b47:	retf   
  423b48:	mov    edx,0x7f18c3ed
  423b4d:	jmp    DWORD PTR [si+0x3234]
  423b52:	cmc    
  423b53:	hlt    
  423b54:	out    dx,eax
  423b55:	lods   al,BYTE PTR ss:[esi]
  423b57:	leave  
  423b58:	scas   eax,DWORD PTR es:[edi]
  423b59:	shr    BYTE PTR [edx-0x75],1
  423b5c:	es jns 0x423bdd
  423b5f:	push   0x37803370
  423b64:	stos   BYTE PTR es:[edi],al
  423b65:	(bad)  
  423b66:	in     eax,dx
  423b67:	xor    eax,ecx
  423b69:	adc    BYTE PTR [eax+0x33],bl
  423b6c:	pop    ecx
  423b6d:	stos   BYTE PTR es:[edi],al
  423b6e:	data16 xchg ch,bh
  423b71:	bound  esi,QWORD PTR [ecx+0x7f]
  423b74:	ds ins DWORD PTR es:[edi],dx
  423b76:	add    DWORD PTR [edx+edi*8],ecx
  423b79:	dec    esi
  423b7a:	mov    dh,0xa4
  423b7c:	fcomp  st(2)
  423b7e:	nop
  423b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b80:	(bad)  
  423b81:	jo     0x423bc9
  423b83:	scas   al,BYTE PTR es:[edi]
  423b84:	adc    DWORD PTR [ebx],0x3c7dbfc2
  423b8a:	inc    ebp
  423b8b:	js     0x423c04
  423b8d:	rcr    DWORD PTR [ecx-0x7d715ca4],1
  423b93:	loop   0x423b54
  423b95:	mov    bh,0xcb
  423b97:	int3   
  423b98:	lahf   
  423b99:	or     eax,0xfe27c3d9
  423b9e:	push   esp
  423b9f:	push   es
  423ba0:	jne    0x423c21
  423ba2:	mov    cs,ecx
  423ba4:	aam    0x17
  423ba6:	shl    DWORD PTR [ecx+0x31],cl
  423ba9:	sub    eax,DWORD PTR [edx]
  423bab:	add    al,0xd0
  423bad:	shr    BYTE PTR [ecx-0x16],cl
  423bb0:	inc    esi
  423bb1:	jge    0x423b5e
  423bb3:	pop    edx
  423bb4:	add    eax,0x3c277f05
  423bb9:	int    0xf0
  423bbb:	and    eax,0x7adba241
  423bc0:	cmp    eax,0x928da351
  423bc5:	cld    
  423bc6:	mov    ds:0x70d3885b,eax
  423bcb:	dec    esi
  423bcc:	fs cmp eax,0x6726f061
  423bd2:	scas   eax,DWORD PTR es:[edi]
  423bd3:	cdq    
  423bd4:	cmp    eax,0xd8edcc4d
  423bd9:	add    cl,BYTE PTR [ebx]
  423bdb:	jmp    0x915e:0x998afc00
  423be2:	or     eax,0x7ddaf527
  423be7:	push   eax
  423be8:	bound  eax,QWORD PTR [ebp+0xef0bfdf]
  423bee:	and    BYTE PTR [esi-0x4a],ch
  423bf1:	(bad)  
  423bf2:	xor    dl,cl
  423bf4:	mov    al,ds:0x7d9c631b
  423bf9:	leave  
  423bfa:	in     eax,dx
  423bfb:	xchg   esi,eax
  423bfc:	jb     0x423c52
  423bfe:	cmp    eax,0x92bc838d
  423c03:	(bad)  
  423c04:	scas   eax,DWORD PTR es:[edi]
  423c05:	dec    eax
  423c06:	mov    ebp,0xaef32615
  423c0b:	adc    DWORD PTR [edx+0x34],edx
  423c0e:	push   ds
  423c0f:	fdiv   DWORD PTR [ecx-0x1ff72d37]
  423c15:	push   edx
  423c16:	or     edi,DWORD PTR [eax-0xd]
  423c19:	(bad)  
  423c1a:	jae    0x423c26
  423c1c:	ss sahf 
  423c1e:	pusha  
  423c1f:	jo     0x423c75
  423c21:	test   DWORD PTR [ecx-0x36],esi
  423c24:	lahf   
  423c25:	mov    ds:0x3c2e1f42,al
  423c2a:	or     eax,0x89f87f05
  423c2f:	sar    BYTE PTR [esi+0x20],cl
  423c32:	dec    ebp
  423c33:	push   0xa20b8093
  423c38:	adc    eax,0xf3ec7441
  423c3d:	add    eax,0xa790206b
  423c42:	xchg   ebx,eax
  423c43:	mov    bl,0x1d
  423c45:	push   ecx
  423c46:	(bad)  
  423c47:	mov    ebp,0xf8be1f34
  423c4c:	jae    0x423bdf
  423c4e:	and    bh,BYTE PTR [ebx+ebx*4+0x6aa04ab1]
  423c55:	call   0x58a1:0x8b24b53d
  423c5c:	nop
  423c5d:	mov    dl,0x12
  423c5f:	mov    bh,0xd4
  423c61:	repz ret 
  423c63:	jl     0x423bf4
  423c65:	adc    ah,al
  423c67:	mov    al,0xe6
  423c69:	mov    al,0x35
  423c6b:	adc    DWORD PTR [eax-0x5d],esi
  423c6e:	or     DWORD PTR [eax-0x37],esp
  423c71:	mov    ebx,0xcf149fa1
  423c76:	lock mov al,ds:0xbab4666e
  423c7c:	(bad)  
  423c7d:	sub    eax,0xa279cdac
  423c82:	sub    DWORD PTR [edx-0x280e8b84],0x4480fed2
  423c8c:	and    DWORD PTR [ebx-0x15],0x9
  423c90:	mov    ah,BYTE PTR [ebx+ebx*1+0x68dbda1e]
  423c97:	shr    BYTE PTR [esi+0x4f77d512],cl
  423c9d:	dec    esp
  423c9e:	imul   ebp,DWORD PTR [ebx-0x31],0x21
  423ca2:	mov    eax,0x40d346b1
  423ca7:	je     0x423c60
  423ca9:	push   ebp
  423caa:	hlt    
  423cab:	je     0x423c50
  423cad:	cmp    DWORD PTR [edi],0x9c5e2ab
  423cb3:	cmp    DWORD PTR ds:0x827287a2,eax
  423cb9:	hlt    
  423cba:	sub    edi,DWORD PTR [edi-0x61acbbf0]
  423cc0:	icebp  
  423cc1:	and    al,0x2
  423cc3:	mov    ds:0xa89c60e6,eax
  423cc8:	inc    esi
  423cc9:	sbb    edi,DWORD PTR cs:[ebp+0x69]
  423ccd:	rol    DWORD PTR [ecx],cl
  423ccf:	gs add esp,ebp
  423cd2:	xor    eax,0x5dc5dd1d
  423cd7:	jecxz  0x423c60
  423cd9:	pop    esp
  423cda:	fldlg2 
  423cdc:	lock add BYTE PTR [ebx+0x559caef8],dl
  423ce3:	bound  ecx,QWORD PTR [edi+0x6df30d68]
  423ce9:	sub    BYTE PTR [ecx-0xe6f4a5],ah
  423cef:	mov    ch,0xad
  423cf1:	pop    ds
  423cf2:	popf   
  423cf3:	scas   al,BYTE PTR es:[edi]
  423cf4:	into   
  423cf5:	repnz sub BYTE PTR [edi+0x2932c4c2],dh
  423cfc:	rcl    DWORD PTR [edi],1
  423cfe:	xor    eax,DWORD PTR [eax+0x3f23f55f]
  423d04:	ss in  al,dx
  423d06:	mov    edi,esp
  423d08:	ins    DWORD PTR es:[edi],dx
  423d09:	nop
  423d0a:	cmp    eax,0x65b7c9fb
  423d0f:	mov    ebx,0x73c7b011
  423d14:	sub    esi,edi
  423d16:	push   edx
  423d17:	sub    ebx,DWORD PTR [edi+edi*4]
  423d1a:	inc    edi
  423d1b:	add    edx,DWORD PTR [esi-0x501cd03e]
  423d21:	cs stos DWORD PTR es:[edi],eax
  423d23:	push   ecx
  423d24:	scas   al,BYTE PTR es:[edi]
  423d25:	rcl    BYTE PTR ds:0x5234e75,cl
  423d2b:	arpl   WORD PTR [ecx-0x620edb2d],sp
  423d31:	adc    al,0x83
  423d33:	into   
  423d34:	cwde   
  423d35:	popa   
  423d36:	mov    ah,0xd9
  423d38:	mov    bh,0x5b
  423d3a:	(bad)  
  423d3c:	mov    esp,0x283f252d
  423d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d42:	jns    0x423d30
  423d44:	pop    edx
  423d45:	out    dx,al
  423d46:	mov    dl,0x81
  423d48:	mov    DWORD PTR [ecx-0x4fd8919f],0x904141df
  423d52:	mov    ebx,0xd05a4bb
  423d57:	pusha  
  423d58:	out    0x5b,eax
  423d5a:	dec    esp
  423d5b:	(bad)  
  423d5c:	jmp    0xa696:0x6706db1
  423d63:	arpl   WORD PTR [ebp+0x4326f87b],cx
  423d69:	inc    ebp
  423d6a:	loope  0x423db5
  423d6c:	(bad)  
  423d6d:	pop    edx
  423d6e:	aam    0xf4
  423d70:	add    al,0xe1
  423d72:	(bad)  
  423d73:	sahf   
  423d74:	push   edx
  423d75:	shl    DWORD PTR [ebx-0x56b553d9],1
  423d7b:	mov    WORD PTR [edi],gs
  423d7d:	cld    
  423d7e:	out    dx,al
  423d7f:	adc    DWORD PTR [edi],0x18f61900
  423d85:	mov    bh,0xa6
  423d87:	lds    edi,FWORD PTR [ebx-0x74e0705d]
  423d8d:	shr    eax,0xf4
  423d90:	mov    DWORD PTR [edi],eax
  423d92:	dec    ecx
  423d93:	add    bh,BYTE PTR [edi]
  423d95:	jne    0x423e10
  423d97:	retf   0xe8f9
  423d9a:	mov    esi,DWORD PTR [eax+0x2e]
  423d9d:	cmp    al,0x6d
  423d9f:	jo     0x423d68
  423da1:	mov    ah,0xad
  423da3:	jo     0x423d33
  423da5:	les    esp,FWORD PTR [edx-0x43a00f77]
  423dab:	(bad)  
  423dac:	loop   0x423d8e
  423dae:	jmp    0xf7fcf260
  423db3:	jge    0x423d7a
  423db5:	jmp    0xdf5d48bd
  423dba:	sub    eax,0xe8adad3c
  423dbf:	lock iret 
  423dc1:	sub    dl,BYTE PTR [esi]
  423dc3:	add    BYTE PTR [ebp+0x715c0ff4],dh
  423dc9:	mov    WORD PTR [edi+0x56],fs
  423dcc:	mov    dh,0x7b
  423dce:	xchg   ebp,eax
  423dcf:	aas    
  423dd0:	xchg   esp,eax
  423dd1:	out    0xda,eax
  423dd3:	add    eax,0x7d4bac9c
  423dd8:	clc    
  423dd9:	fimul  DWORD PTR [esi+0x3905613d]
  423ddf:	inc    esi
  423de0:	jmp    0x423da9
  423de2:	rcl    edx,1
  423de4:	mov    ds:0xc38f72e0,eax
  423de9:	pop    ebx
  423dea:	iret   
  423deb:	cdq    
  423dec:	jg     0x423d71
  423dee:	out    dx,al
  423def:	mov    ecx,0xcc20b3fa
  423df4:	out    0xca,al
  423df6:	fwait
  423df7:	sbb    bh,bl
  423df9:	add    esi,DWORD PTR [edx+0x577e3922]
  423dff:	mov    ah,0x62
  423e01:	or     DWORD PTR [ebx+0x5d],edx
  423e04:	add    ecx,DWORD PTR [edi+ecx*8-0x18]
  423e08:	xor    BYTE PTR [edi+0x19],0xd
  423e0c:	int3   
  423e0d:	mov    ebx,0x1e49896
  423e12:	inc    ebp
  423e13:	int    0xeb
  423e15:	int    0x44
  423e17:	jl     0x423de5
  423e19:	xchg   edi,eax
  423e1a:	fldenv [eax]
  423e1c:	push   0xffffffaa
  423e1e:	inc    ecx
  423e1f:	addr16 pop esi
  423e21:	js     0x423e7e
  423e23:	cdq    
  423e24:	jo     0x423dc0
  423e26:	fstp   DWORD PTR [edi+0x5cd12eb6]
  423e2c:	iret   
  423e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e2e:	mov    edi,0x41aba55e
  423e33:	ds or  al,0xc7
  423e36:	aad    0x0
  423e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e39:	sub    eax,0x376d73da
  423e3e:	mov    bl,0x36
  423e40:	cwde   
  423e41:	stc    
  423e42:	cmp    ecx,edx
  423e44:	pop    esi
  423e45:	dec    esp
  423e46:	adc    DWORD PTR [edi],eax
  423e48:	inc    edi
  423e49:	ss add al,0x7b
  423e4c:	mov    ds:0xa322638f,eax
  423e51:	add    BYTE PTR [esi],cl
  423e53:	gs retfw 
  423e56:	aas    
  423e57:	cs icebp 
  423e59:	dec    ebx
  423e5a:	adc    BYTE PTR [eax-0x36],0xb7
  423e5e:	push   edx
  423e5f:	add    edx,DWORD PTR [ebx-0x858ba9a]
  423e65:	mov    eax,ds:0xea8528b3
  423e6a:	test   BYTE PTR [edi],dl
  423e6c:	pop    ebx
  423e6d:	jl     0x423e37
  423e6f:	add    bh,BYTE PTR [ebx]
  423e71:	sbb    ebp,esp
  423e73:	dec    ecx
  423e74:	dec    eax
  423e75:	jle    0x423df7
  423e77:	inc    esp
  423e78:	push   es
  423e79:	loop   0x423e07
  423e7b:	sub    bh,BYTE PTR [ecx]
  423e7d:	fwait
  423e7e:	add    al,0xe9
  423e80:	aad    0xfe
  423e82:	hlt    
  423e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e84:	jno    0x423ef6
  423e86:	xor    ecx,ebp
  423e88:	or     eax,0x90737560
  423e8d:	ja     0x423ed7
  423e8f:	js     0x423e9b
  423e91:	stos   BYTE PTR es:[edi],al
  423e92:	int    0xc7
  423e94:	xchg   esi,eax
  423e95:	cli    
  423e96:	test   DWORD PTR [esi+0x62c559e8],eax
  423e9c:	neg    BYTE PTR [ebx+0x2acbdd93]
  423ea2:	pop    ebx
  423ea3:	mov    ?,WORD PTR [edi-0x77]
  423ea6:	adc    eax,0x3cb4f2a
  423eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eac:	int3   
  423ead:	icebp  
  423eae:	(bad)  
  423eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eb0:	push   es
  423eb1:	sub    BYTE PTR [ebp+0x2e],bh
  423eb4:	mov    esi,ecx
  423eb6:	shl    BYTE PTR [esi],0x9f
  423eb9:	data16 and al,0x93
  423ebc:	adc    BYTE PTR [esi-0x730f6fb1],ch
  423ec2:	push   esp
  423ec3:	push   0xa6bd42f
  423ec8:	je     0x423e59
  423eca:	adc    BYTE PTR [ebx*8+0x7a114639],ah
  423ed1:	inc    ecx
  423ed2:	sar    DWORD PTR [ebx+0x6c],0xcf
  423ed6:	aaa    
  423ed7:	mov    ebx,0xcf7e9d87
  423edc:	scas   eax,DWORD PTR es:[edi]
  423edd:	xchg   ecx,eax
  423ede:	sbb    DWORD PTR [eax],0xffffffe0
  423ee1:	inc    esi
  423ee2:	jno    0x423ef6
  423ee4:	pop    edi
  423ee5:	sub    ah,BYTE PTR ds:0x8f72ee09
  423eeb:	scas   eax,DWORD PTR es:[edi]
  423eec:	xlat   BYTE PTR ds:[ebx]
  423eed:	jecxz  0x423f42
  423eef:	or     ebp,DWORD PTR [eax]
  423ef1:	(bad)  
  423ef3:	in     eax,0x86
  423ef5:	cmp    DWORD PTR [edx-0x17],edx
  423ef8:	inc    ecx
  423ef9:	jecxz  0x423f14
  423efb:	sbb    DWORD PTR [ebx],0xa1d61a1d
  423f01:	int3   
  423f02:	gs (bad) 
  423f04:	fist   WORD PTR [eax]
  423f06:	adc    ch,BYTE PTR [eax+0x6a]
  423f09:	cmp    dh,cl
  423f0b:	outs   dx,DWORD PTR ds:[esi]
  423f0c:	xor    BYTE PTR [ecx+0x50],bl
  423f0f:	sub    BYTE PTR [eax],bh
  423f11:	in     al,0x5a
  423f13:	repz inc edi
  423f15:	popf   
  423f16:	jne    0x423ee6
  423f18:	inc    edi
  423f19:	sar    BYTE PTR fs:[ebp+edx*1+0x2e453aed],cl
  423f21:	(bad)  
  423f22:	repnz xchg edx,eax
  423f24:	cwde   
  423f25:	jl     0x423f35
  423f27:	ss inc esp
  423f29:	sub    al,0x15
  423f2b:	and    BYTE PTR [eax+0x4e1b0751],0xf2
  423f32:	mov    ds:0xce2f4490,eax
  423f37:	xor    esp,DWORD PTR [edi-0x7d]
  423f3a:	mov    ah,BYTE PTR [ecx+0x55]
  423f3d:	inc    edx
  423f3e:	(bad)  
  423f3f:	dec    ecx
  423f40:	push   0x17
  423f42:	or     eax,0xe3a69adf
  423f47:	mov    ebp,0xc99b33a8
  423f4c:	xor    BYTE PTR [ebx],dh
  423f4e:	and    dl,BYTE PTR [edx+0x182e8495]
  423f54:	add    esp,DWORD PTR [ebx+0x23]
  423f57:	repnz pusha 
  423f59:	and    eax,0x81ac1f35
  423f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f5f:	cmp    al,0xee
  423f61:	pop    ebp
  423f62:	imul   esp,eax,0xffffffeb
  423f65:	cdq    
  423f66:	(bad)  
  423f67:	cld    
  423f68:	push   ecx
  423f69:	xlat   BYTE PTR ds:[ebx]
  423f6a:	fwait
  423f6b:	sbb    al,0xdf
  423f6d:	repz dec edi
  423f6f:	into   
  423f70:	fcomp  st(0)
  423f72:	xchg   BYTE PTR [esi-0x7f],bh
  423f75:	sub    ecx,DWORD PTR [esp+eiz*2-0x4ced04a9]
  423f7c:	push   esp
  423f7d:	ror    ah,cl
  423f7f:	push   ebx
  423f80:	jne    0x423f3d
  423f82:	cmp    ah,BYTE PTR [edi]
  423f84:	xchg   ebp,esi
  423f86:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  423f88:	mov    dl,0xce
  423f8a:	fwait
  423f8b:	adc    dh,BYTE PTR [ebx+0x0]
  423f8e:	(bad)
  423f93:	sub    al,0xbe
  423f95:	pop    ecx
  423f96:	iret   
  423f97:	sti    
  423f98:	mov    ebx,es
  423f9a:	dec    ebp
  423f9b:	loope  0x423fea
  423f9d:	and    BYTE PTR [esi],ch
  423f9f:	inc    esi
  423fa0:	xchg   edi,eax
  423fa2:	(bad)  [eax+0x17002594]
  423fa8:	xchg   esi,eax
  423fa9:	ss and eax,0x826f7157
  423faf:	mov    eax,0x5bc239fb
  423fb4:	jecxz  0x423f3a
  423fb6:	push   ecx
  423fb7:	not    DWORD PTR [ebx+0x6]
  423fba:	pop    edx
  423fbb:	pop    edi
  423fbc:	stos   BYTE PTR es:[edi],al
  423fbd:	imul   edi,DWORD PTR [edi],0xffffffc2
  423fc0:	mov    esp,0xe84f01b7
  423fc5:	(bad)  
  423fc6:	xchg   esp,eax
  423fc7:	dec    eax
  423fc8:	retf   0xc804
  423fcb:	call   0x6eddb48a
  423fd0:	pop    edi
  423fd1:	push   edi
  423fd2:	push   0x4fe33385
  423fd7:	xlat   BYTE PTR ds:[ebx]
  423fd8:	push   0xffffffee
  423fda:	inc    edx
  423fdb:	(bad)  
  423fdc:	sub    bh,BYTE PTR [ebx]
  423fde:	pop    eax
  423fdf:	ds inc esi
  423fe1:	push   eax
  423fe2:	fist   WORD PTR ss:[ecx+0x5d]
  423fe6:	rcl    BYTE PTR [edi-0x65],1
  423fe9:	inc    edi
  423fea:	jmp    0xa34999a2
  423fef:	add    BYTE PTR [ecx],bh
  423ff1:	in     al,0x8a
  423ff3:	mov    esp,0xafcc84bb
  423ff8:	and    DWORD PTR [eax],esi
  423ffa:	jmp    0xc9e6:0x36267218
  424001:	arpl   WORD PTR [eax+0x1c],dx
  424004:	cwde   
  424005:	mov    edi,ebx
  424007:	cmp    eax,0x8d0f8f23
  42400c:	pop    esi
  42400d:	and    BYTE PTR [ecx-0x5f0dc8d8],0x65
  424014:	sbb    cl,al
  424016:	pop    ebx
  424017:	outs   dx,BYTE PTR ds:[esi]
  424018:	adc    cl,BYTE PTR [ecx]
  42401a:	xchg   edx,eax
  42401b:	mov    esp,edx
  42401d:	sub    al,0x80
  42401f:	out    dx,eax
  424020:	sbb    al,0x71
  424022:	sar    BYTE PTR [edx],1
  424024:	retf   0x751c
  424027:	(bad)  
  424028:	scas   eax,DWORD PTR es:[edi]
  424029:	cmp    eax,0x301793de
  42402e:	and    al,0x4a
  424030:	sar    bh,cl
  424032:	dec    ebp
  424033:	mov    edi,edi
  424035:	mov    edi,0xb5cf918a
  42403a:	dec    edx
  42403b:	sbb    BYTE PTR [edi],0x36
  42403e:	lea    ebp,[ecx]
  424040:	sub    BYTE PTR [ebp+edx*2-0x117356a5],dh
  424047:	les    eax,FWORD PTR [ebp+ebp*8-0xb9d492b]
  42404e:	xchg   ecx,eax
  42404f:	pop    edx
  424050:	lods   eax,DWORD PTR ds:[esi]
  424051:	test   eax,0xfd710b22
  424056:	sub    al,0xc
  424058:	fstp   TBYTE PTR [ebp+0x522d9f3]
  42405e:	mov    bl,0x9c
  424060:	dec    esp
  424061:	pop    ebp
  424062:	lods   al,BYTE PTR es:[esi]
  424064:	xchg   esp,eax
  424065:	aam    0xd4
  424067:	adc    eax,0x8b0fb9ac
  42406c:	out    0x5c,eax
  42406e:	ds inc ecx
  424071:	cmp    eax,0x2c0ffbd5
  424076:	test   al,0x49
  424078:	xor    eax,0x26eb7d46
  42407d:	sub    ebp,0xb02b97d5
  424083:	inc    esp
  424084:	rol    BYTE PTR [esp+ecx*4],0x2d
  424088:	mov    edx,0x46573a06
  42408d:	dec    edx
  42408e:	test   eax,0x58ac3db1
  424093:	cld    
  424094:	cmp    al,0xc1
  424096:	pop    esi
  424097:	(bad)  
  424098:	xchg   ebp,eax
  424099:	ds xchg esi,eax
  42409b:	fldcw  WORD PTR [esi-0x1d81cd32]
  4240a1:	cli    
  4240a2:	mov    ah,0x59
  4240a4:	nop
  4240a5:	xchg   ebp,eax
  4240a6:	shl    ch,1
  4240a8:	enter  0x4824,0x5f
  4240ac:	xchg   BYTE PTR [ecx],cl
  4240ae:	cmp    al,0x90
  4240b0:	cwde   
  4240b1:	dec    ecx
  4240b2:	push   ecx
  4240b3:	adc    BYTE PTR gs:[edx-0x71],bh
  4240b7:	daa    
  4240b8:	sahf   
  4240b9:	ins    DWORD PTR es:[edi],dx
  4240ba:	jae    0x42405e
  4240bc:	shr    BYTE PTR ds:0x7438db7b,0xc0
  4240c3:	push   ss
  4240c4:	inc    ebx
  4240c5:	clc    
  4240c6:	adc    eax,0x846fdb58
  4240cb:	push   edi
  4240cc:	xlat   BYTE PTR ds:[ebx]
  4240cd:	test   eax,0xa10ccedb
  4240d2:	ss inc eax
  4240d4:	mov    ds:0xbbc23426,al
  4240d9:	sahf   
  4240da:	pop    esi
  4240db:	dec    esi
  4240dc:	sbb    DWORD PTR [ecx+eiz*8-0x1e92318],ebx
  4240e3:	mov    ecx,0x45e36db
  4240e8:	loope  0x424134
  4240ea:	in     eax,0x23
  4240ec:	nop
  4240ed:	and    eax,0xabc4c802
  4240f2:	or     al,0xff
  4240f4:	shl    bh,0x2
  4240f7:	ds sbb ah,ch
  4240fa:	rol    DWORD PTR [edx],cl
  4240fc:	and    BYTE PTR [edi],0x76
  4240ff:	dec    edx
  424100:	out    0x14,eax
  424102:	dec    edi
  424103:	std    
  424104:	mov    DWORD PTR [edx],edi
  424106:	mov    eax,ds:0x60a4b5b0
  42410b:	adc    BYTE PTR [edi-0x2a3c60d4],bl
  424111:	cs clc 
  424113:	int    0x44
  424115:	test   DWORD PTR [ecx-0x3a],edx
  424118:	mov    esi,0xea79cf41
  42411d:	out    0x14,eax
  42411f:	pop    eax
  424120:	rcl    BYTE PTR [esi+esi*8],cl
  424123:	loope  0x42418e
  424125:	push   es
  424126:	adc    eax,0xdb858845
  42412b:	sahf   
  42412c:	cmp    BYTE PTR [esi-0x7e463f1f],bh
  424132:	jb     0x424162
  424134:	add    BYTE PTR [edx+edx*8-0x26],ch
  424138:	mov    bh,0x2b
  42413a:	lahf   
  42413b:	sub    DWORD PTR ds:0x5659b4b0,ecx
  424141:	mov    al,ds:0xb8c7fe74
  424146:	mov    ds:0x5bf89c85,al
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a647
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a64f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a653
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429f5f
  4242e2:	mov    ecx,DWORD PTR ds:0x429f67
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a657
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429f4b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	in     al,0x28
  424456:	push   edi
  424457:	pusha  
  424458:	xor    ebp,DWORD PTR [eax]
  42445a:	fwait
  42445b:	inc    ebx
  42445c:	mov    ebp,0xff90a9
  424461:	mov    bh,0x0
  424463:	push   ds
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
